command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1633642	File	data/converged/CVE-2011-4930_htcondor/image.cpp								
ANR	1633643	ClassDef	alternate_memory_heap	39:0:1306:1417							
ANR	1633644	DeclStmt									
ANR	1633645	Decl							void	void *	begin
ANR	1633646	DeclStmt									
ANR	1633647	Decl							void	void *	corestart
ANR	1633648	DeclStmt									
ANR	1633649	Decl							void	void * *	coreend
ANR	1633650	DeclStmt									
ANR	1633651	Decl							void	void * *	segend
ANR	1633652	DeclStmt									
ANR	1633653	Decl							int	int	pagesize
ANR	1633654	DeclStmt									
ANR	1633655	Decl							extern int	extern int	_condor_in_file_stream
ANR	1633656	DeclStmt									
ANR	1633657	Decl							const int	const int	KILO
ANR	1633658	DeclStmt									
ANR	1633659	Decl							void	void ( int )	report_image_size
ANR	1633660	DeclStmt									
ANR	1633661	Decl							void	void ( )	_condor_save_sigstates
ANR	1633662	DeclStmt									
ANR	1633663	Decl							void	void ( )	_condor_restore_sigstates
ANR	1633664	DeclStmt									
ANR	1633665	Decl							void	void ( int dlevel )	display_alternate_memory_heap
ANR	1633666	DeclStmt									
ANR	1633667	Decl							int	int ( void )	condor_malloc_getpagesize
ANR	1633668	DeclStmt									
ANR	1633669	Decl							int	int ( )	condor_malloc_init_size
ANR	1633670	DeclStmt									
ANR	1633671	Decl							void	void ( void * start )	condor_malloc_init
ANR	1633672	DeclStmt									
ANR	1633673	Decl							char	char * ( size_t )	condor_malloc
ANR	1633674	DeclStmt									
ANR	1633675	Decl							void	void ( void * )	condor_free
ANR	1633676	DeclStmt									
ANR	1633677	Decl							void	void * ( int )	condor_morecore
ANR	1633678	DeclStmt									
ANR	1633679	Decl							z_stream	z_stream *	zstr
ANR	1633680	DeclStmt									
ANR	1633681	Decl							unsigned char	unsigned char *	zbuf
ANR	1633682	DeclStmt									
ANR	1633683	Decl							const int	const int	zbufsize
ANR	1633684	DeclStmt									
ANR	1633685	Decl							unsigned long	unsigned long ( unsigned long )	htonl
ANR	1633686	DeclStmt									
ANR	1633687	Decl							unsigned long	unsigned long ( unsigned long )	ntohl
ANR	1633688	DeclStmt									
ANR	1633689	Decl							void	void ( int sig )	terminate_with_sig
ANR	1633690	DeclStmt									
ANR	1633691	Decl							void	"void ( RAW_ADDR & start , RAW_ADDR & end )"	find_stack_location
ANR	1633692	DeclStmt									
ANR	1633693	Decl							int	int ( )	SP_in_data_area
ANR	1633694	DeclStmt									
ANR	1633695	Decl							void	void ( )	calc_stack_to_save
ANR	1633696	DeclStmt									
ANR	1633697	Decl							void	"void ( int sig , SIG_HANDLER handler )"	_install_signal_handler
ANR	1633698	DeclStmt									
ANR	1633699	Decl							int	"int ( const char * name , int flags , size_t n_bytes )"	open_ckpt_file
ANR	1633700	DeclStmt									
ANR	1633701	Decl							int	int ( int sig )	get_ckpt_mode
ANR	1633702	DeclStmt									
ANR	1633703	Decl							int	int ( )	get_ckpt_speed
ANR	1633704	DeclStmt									
ANR	1633705	Decl							void	void ( int seconds )	sleep_syscall
ANR	1633706	DeclStmt									
ANR	1633707	Decl							Image	Image	MyImage
ANR	1633708	DeclStmt									
ANR	1633709	Decl							jmp_buf	jmp_buf	Env
ANR	1633710	DeclStmt									
ANR	1633711	Decl							RAW_ADDR	RAW_ADDR	SavedStackLoc
ANR	1633712	DeclStmt									
ANR	1633713	Decl							volatile int	volatile int	InRestart
ANR	1633714	DeclStmt									
ANR	1633715	Decl							volatile int	volatile int	check_sig
ANR	1633716	DeclStmt									
ANR	1633717	Decl							size_t	size_t	StackSaveSize
ANR	1633718	DeclStmt									
ANR	1633719	Decl							unsigned int	unsigned int	_condor_numrestarts
ANR	1633720	DeclStmt									
ANR	1633721	Decl							int	int	condor_compress_ckpt
ANR	1633722	DeclStmt									
ANR	1633723	Decl							int	int	condor_slow_ckpt
ANR	1633724	DeclStmt									
ANR	1633725	Decl							struct alternate_memory_heap	struct alternate_memory_heap	amh
ANR	1633726	DeclStmt									
ANR	1633727	Decl							int	int ( struct rusage * use_p )	REMOTE_CONDOR_send_rusage
ANR	1633728	Function	net_read	127:0:3888:4212							
ANR	1633729	FunctionDef	"net_read (int fd , void * buf , int size)"		1633728	0					
ANR	1633730	CompoundStatement		129:0:3937:4212	1633728	0					
ANR	1633731	IdentifierDeclStatement	int bytes_read ;	130:1:3940:3955	1633728	0	True				
ANR	1633732	IdentifierDecl	bytes_read		1633728	0					
ANR	1633733	IdentifierDeclType	int		1633728	0					
ANR	1633734	Identifier	bytes_read		1633728	1					
ANR	1633735	IdentifierDeclStatement	int this_read ;	131:1:3958:3972	1633728	1	True				
ANR	1633736	IdentifierDecl	this_read		1633728	0					
ANR	1633737	IdentifierDeclType	int		1633728	0					
ANR	1633738	Identifier	this_read		1633728	1					
ANR	1633739	ExpressionStatement	bytes_read = 0	133:1:3976:3990	1633728	2	True				
ANR	1633740	AssignmentExpression	bytes_read = 0		1633728	0		=			
ANR	1633741	Identifier	bytes_read		1633728	0					
ANR	1633742	PrimaryExpression	0		1633728	1					
ANR	1633743	DoStatement	do		1633728	3					
ANR	1633744	CompoundStatement		6:4:58:58	1633728	0					
ANR	1633745	ExpressionStatement	"this_read = read ( fd , buf , size - bytes_read )"	135:2:4000:4044	1633728	0	True				
ANR	1633746	AssignmentExpression	"this_read = read ( fd , buf , size - bytes_read )"		1633728	0		=			
ANR	1633747	Identifier	this_read		1633728	0					
ANR	1633748	CallExpression	"read ( fd , buf , size - bytes_read )"		1633728	1					
ANR	1633749	Callee	read		1633728	0					
ANR	1633750	Identifier	read		1633728	0					
ANR	1633751	ArgumentList	fd		1633728	1					
ANR	1633752	Argument	fd		1633728	0					
ANR	1633753	Identifier	fd		1633728	0					
ANR	1633754	Argument	buf		1633728	1					
ANR	1633755	Identifier	buf		1633728	0					
ANR	1633756	Argument	size - bytes_read		1633728	2					
ANR	1633757	AdditiveExpression	size - bytes_read		1633728	0		-			
ANR	1633758	Identifier	size		1633728	0					
ANR	1633759	Identifier	bytes_read		1633728	1					
ANR	1633760	IfStatement	if ( this_read <= 0 )		1633728	1					
ANR	1633761	Condition	this_read <= 0	136:6:4052:4065	1633728	0	True				
ANR	1633762	RelationalExpression	this_read <= 0		1633728	0		<=			
ANR	1633763	Identifier	this_read		1633728	0					
ANR	1633764	PrimaryExpression	0		1633728	1					
ANR	1633765	CompoundStatement		8:22:130:130	1633728	1					
ANR	1633766	ReturnStatement	return - 1 ;	137:3:4073:4082	1633728	0	True				
ANR	1633767	UnaryOperationExpression	- 1		1633728	0					
ANR	1633768	UnaryOperator	-		1633728	0					
ANR	1633769	PrimaryExpression	1		1633728	1					
ANR	1633770	ExpressionStatement	bytes_read += this_read	139:2:4090:4113	1633728	2	True				
ANR	1633771	AssignmentExpression	bytes_read += this_read		1633728	0		+=			
ANR	1633772	Identifier	bytes_read		1633728	0					
ANR	1633773	Identifier	this_read		1633728	1					
ANR	1633774	ExpressionStatement	buf = ( void * ) ( ( char * ) buf + this_read )	140:2:4117:4160	1633728	3	True				
ANR	1633775	AssignmentExpression	buf = ( void * ) ( ( char * ) buf + this_read )		1633728	0		=			
ANR	1633776	Identifier	buf		1633728	0					
ANR	1633777	CastExpression	( void * ) ( ( char * ) buf + this_read )		1633728	1					
ANR	1633778	CastTarget	void *		1633728	0					
ANR	1633779	AdditiveExpression	( char * ) buf + this_read		1633728	1		+			
ANR	1633780	CastExpression	( char * ) buf		1633728	0					
ANR	1633781	CastTarget	char *		1633728	0					
ANR	1633782	Identifier	buf		1633728	1					
ANR	1633783	Identifier	this_read		1633728	1					
ANR	1633784	Condition	bytes_read < size	141:10:4172:4188	1633728	1	True				
ANR	1633785	RelationalExpression	bytes_read < size		1633728	0		<			
ANR	1633786	Identifier	bytes_read		1633728	0					
ANR	1633787	Identifier	size		1633728	1					
ANR	1633788	ReturnStatement	return bytes_read ;	142:1:4193:4210	1633728	4	True				
ANR	1633789	Identifier	bytes_read		1633728	0					
ANR	1633790	ReturnType	static int		1633728	1					
ANR	1633791	Identifier	net_read		1633728	2					
ANR	1633792	ParameterList	"int fd , void * buf , int size"		1633728	3					
ANR	1633793	Parameter	int fd	128:9:3908:3913	1633728	0	True				
ANR	1633794	ParameterType	int		1633728	0					
ANR	1633795	Identifier	fd		1633728	1					
ANR	1633796	Parameter	void * buf	128:17:3916:3924	1633728	1	True				
ANR	1633797	ParameterType	void *		1633728	0					
ANR	1633798	Identifier	buf		1633728	1					
ANR	1633799	Parameter	int size	128:28:3927:3934	1633728	2	True				
ANR	1633800	ParameterType	int		1633728	0					
ANR	1633801	Identifier	size		1633728	1					
ANR	1633802	CFGEntryNode	ENTRY		1633728		True				
ANR	1633803	CFGExitNode	EXIT		1633728		True				
ANR	1633804	Symbol	buf		1633728						
ANR	1633805	Symbol	read		1633728						
ANR	1633806	Symbol	size		1633728						
ANR	1633807	Symbol	bytes_read		1633728						
ANR	1633808	Symbol	fd		1633728						
ANR	1633809	Symbol	this_read		1633728						
ANR	1633810	Function	condor_map_seg	146:0:4242:4807							
ANR	1633811	FunctionDef	"condor_map_seg (void * base , size_t size)"		1633810	0					
ANR	1633812	CompoundStatement		147:0:4288:4807	1633810	0					
ANR	1633813	IdentifierDeclStatement	int zfd ;	148:1:4291:4298	1633810	0	True				
ANR	1633814	IdentifierDecl	zfd		1633810	0					
ANR	1633815	IdentifierDeclType	int		1633810	0					
ANR	1633816	Identifier	zfd		1633810	1					
ANR	1633817	IfStatement	"if ( ( zfd = SYSCALL ( SYS_open , ""/dev/zero"" , O_RDWR ) ) == - 1 )"		1633810	1					
ANR	1633818	Condition	"( zfd = SYSCALL ( SYS_open , ""/dev/zero"" , O_RDWR ) ) == - 1"	149:5:4305:4356	1633810	0	True				
ANR	1633819	EqualityExpression	"( zfd = SYSCALL ( SYS_open , ""/dev/zero"" , O_RDWR ) ) == - 1"		1633810	0		==			
ANR	1633820	AssignmentExpression	"zfd = SYSCALL ( SYS_open , ""/dev/zero"" , O_RDWR )"		1633810	0		=			
ANR	1633821	Identifier	zfd		1633810	0					
ANR	1633822	CallExpression	"SYSCALL ( SYS_open , ""/dev/zero"" , O_RDWR )"		1633810	1					
ANR	1633823	Callee	SYSCALL		1633810	0					
ANR	1633824	Identifier	SYSCALL		1633810	0					
ANR	1633825	ArgumentList	SYS_open		1633810	1					
ANR	1633826	Argument	SYS_open		1633810	0					
ANR	1633827	Identifier	SYS_open		1633810	0					
ANR	1633828	Argument	"""/dev/zero"""		1633810	1					
ANR	1633829	PrimaryExpression	"""/dev/zero"""		1633810	0					
ANR	1633830	Argument	O_RDWR		1633810	2					
ANR	1633831	Identifier	O_RDWR		1633810	0					
ANR	1633832	UnaryOperationExpression	- 1		1633810	1					
ANR	1633833	UnaryOperator	-		1633810	0					
ANR	1633834	PrimaryExpression	1		1633810	1					
ANR	1633835	CompoundStatement		3:59:70:70	1633810	1					
ANR	1633836	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to open /dev/zero in read/write mode.\\n"" )"	150:2:4363:4436	1633810	0	True				
ANR	1633837	CallExpression	"dprintf ( D_ALWAYS , ""Unable to open /dev/zero in read/write mode.\\n"" )"		1633810	0					
ANR	1633838	Callee	dprintf		1633810	0					
ANR	1633839	Identifier	dprintf		1633810	0					
ANR	1633840	ArgumentList	D_ALWAYS		1633810	1					
ANR	1633841	Argument	D_ALWAYS		1633810	0					
ANR	1633842	Identifier	D_ALWAYS		1633810	0					
ANR	1633843	Argument	"""Unable to open /dev/zero in read/write mode.\\n"""		1633810	1					
ANR	1633844	PrimaryExpression	"""Unable to open /dev/zero in read/write mode.\\n"""		1633810	0					
ANR	1633845	ExpressionStatement	"dprintf ( D_ALWAYS , ""open: %s\\n"" , strerror ( errno ) )"	152:2:4440:4489	1633810	1	True				
ANR	1633846	CallExpression	"dprintf ( D_ALWAYS , ""open: %s\\n"" , strerror ( errno ) )"		1633810	0					
ANR	1633847	Callee	dprintf		1633810	0					
ANR	1633848	Identifier	dprintf		1633810	0					
ANR	1633849	ArgumentList	D_ALWAYS		1633810	1					
ANR	1633850	Argument	D_ALWAYS		1633810	0					
ANR	1633851	Identifier	D_ALWAYS		1633810	0					
ANR	1633852	Argument	"""open: %s\\n"""		1633810	1					
ANR	1633853	PrimaryExpression	"""open: %s\\n"""		1633810	0					
ANR	1633854	Argument	strerror ( errno )		1633810	2					
ANR	1633855	CallExpression	strerror ( errno )		1633810	0					
ANR	1633856	Callee	strerror		1633810	0					
ANR	1633857	Identifier	strerror		1633810	0					
ANR	1633858	ArgumentList	errno		1633810	1					
ANR	1633859	Argument	errno		1633810	0					
ANR	1633860	Identifier	errno		1633810	0					
ANR	1633861	ExpressionStatement	Suicide ( )	153:2:4493:4502	1633810	2	True				
ANR	1633862	CallExpression	Suicide ( )		1633810	0					
ANR	1633863	Callee	Suicide		1633810	0					
ANR	1633864	Identifier	Suicide		1633810	0					
ANR	1633865	ArgumentList			1633810	1					
ANR	1633866	IdentifierDeclStatement	int flags ;	156:1:4509:4518	1633810	2	True				
ANR	1633867	IdentifierDecl	flags		1633810	0					
ANR	1633868	IdentifierDeclType	int		1633810	0					
ANR	1633869	Identifier	flags		1633810	1					
ANR	1633870	IfStatement	if ( base == NULL )		1633810	3					
ANR	1633871	Condition	base == NULL	157:5:4525:4536	1633810	0	True				
ANR	1633872	EqualityExpression	base == NULL		1633810	0		==			
ANR	1633873	Identifier	base		1633810	0					
ANR	1633874	Identifier	NULL		1633810	1					
ANR	1633875	CompoundStatement		11:19:250:250	1633810	1					
ANR	1633876	ExpressionStatement	flags = MAP_PRIVATE	158:2:4543:4562	1633810	0	True				
ANR	1633877	AssignmentExpression	flags = MAP_PRIVATE		1633810	0		=			
ANR	1633878	Identifier	flags		1633810	0					
ANR	1633879	Identifier	MAP_PRIVATE		1633810	1					
ANR	1633880	ElseStatement	else		1633810	0					
ANR	1633881	CompoundStatement		13:8:283:283	1633810	0					
ANR	1633882	ExpressionStatement	flags = MAP_PRIVATE | MAP_FIXED	160:2:4576:4605	1633810	0	True				
ANR	1633883	AssignmentExpression	flags = MAP_PRIVATE | MAP_FIXED		1633810	0		=			
ANR	1633884	Identifier	flags		1633810	0					
ANR	1633885	InclusiveOrExpression	MAP_PRIVATE | MAP_FIXED		1633810	1		|			
ANR	1633886	Identifier	MAP_PRIVATE		1633810	0					
ANR	1633887	Identifier	MAP_FIXED		1633810	1					
ANR	1633888	ExpressionStatement	"base = MMAP ( ( MMAP_T ) base , ( size_t ) size , PROT_READ | PROT_WRITE , flags , zfd , ( off_t ) 0 )"	162:1:4611:4698	1633810	4	True				
ANR	1633889	AssignmentExpression	"base = MMAP ( ( MMAP_T ) base , ( size_t ) size , PROT_READ | PROT_WRITE , flags , zfd , ( off_t ) 0 )"		1633810	0		=			
ANR	1633890	Identifier	base		1633810	0					
ANR	1633891	CallExpression	"MMAP ( ( MMAP_T ) base , ( size_t ) size , PROT_READ | PROT_WRITE , flags , zfd , ( off_t ) 0 )"		1633810	1					
ANR	1633892	Callee	MMAP		1633810	0					
ANR	1633893	Identifier	MMAP		1633810	0					
ANR	1633894	ArgumentList	( MMAP_T ) base		1633810	1					
ANR	1633895	Argument	( MMAP_T ) base		1633810	0					
ANR	1633896	CastExpression	( MMAP_T ) base		1633810	0					
ANR	1633897	CastTarget	MMAP_T		1633810	0					
ANR	1633898	Identifier	base		1633810	1					
ANR	1633899	Argument	( size_t ) size		1633810	1					
ANR	1633900	CastExpression	( size_t ) size		1633810	0					
ANR	1633901	CastTarget	size_t		1633810	0					
ANR	1633902	Identifier	size		1633810	1					
ANR	1633903	Argument	PROT_READ | PROT_WRITE		1633810	2					
ANR	1633904	InclusiveOrExpression	PROT_READ | PROT_WRITE		1633810	0		|			
ANR	1633905	Identifier	PROT_READ		1633810	0					
ANR	1633906	Identifier	PROT_WRITE		1633810	1					
ANR	1633907	Argument	flags		1633810	3					
ANR	1633908	Identifier	flags		1633810	0					
ANR	1633909	Argument	zfd		1633810	4					
ANR	1633910	Identifier	zfd		1633810	0					
ANR	1633911	Argument	( off_t ) 0		1633810	5					
ANR	1633912	CastExpression	( off_t ) 0		1633810	0					
ANR	1633913	CastTarget	off_t		1633810	0					
ANR	1633914	PrimaryExpression	0		1633810	1					
ANR	1633915	IfStatement	if ( base == MAP_FAILED )		1633810	5					
ANR	1633916	Condition	base == MAP_FAILED	164:5:4705:4722	1633810	0	True				
ANR	1633917	EqualityExpression	base == MAP_FAILED		1633810	0		==			
ANR	1633918	Identifier	base		1633810	0					
ANR	1633919	Identifier	MAP_FAILED		1633810	1					
ANR	1633920	CompoundStatement		18:25:436:436	1633810	1					
ANR	1633921	ExpressionStatement	"dprintf ( D_ALWAYS , ""mmap: %s"" , strerror ( errno ) )"	165:2:4729:4775	1633810	0	True				
ANR	1633922	CallExpression	"dprintf ( D_ALWAYS , ""mmap: %s"" , strerror ( errno ) )"		1633810	0					
ANR	1633923	Callee	dprintf		1633810	0					
ANR	1633924	Identifier	dprintf		1633810	0					
ANR	1633925	ArgumentList	D_ALWAYS		1633810	1					
ANR	1633926	Argument	D_ALWAYS		1633810	0					
ANR	1633927	Identifier	D_ALWAYS		1633810	0					
ANR	1633928	Argument	"""mmap: %s"""		1633810	1					
ANR	1633929	PrimaryExpression	"""mmap: %s"""		1633810	0					
ANR	1633930	Argument	strerror ( errno )		1633810	2					
ANR	1633931	CallExpression	strerror ( errno )		1633810	0					
ANR	1633932	Callee	strerror		1633810	0					
ANR	1633933	Identifier	strerror		1633810	0					
ANR	1633934	ArgumentList	errno		1633810	1					
ANR	1633935	Argument	errno		1633810	0					
ANR	1633936	Identifier	errno		1633810	0					
ANR	1633937	ExpressionStatement	Suicide ( )	166:2:4779:4788	1633810	1	True				
ANR	1633938	CallExpression	Suicide ( )		1633810	0					
ANR	1633939	Callee	Suicide		1633810	0					
ANR	1633940	Identifier	Suicide		1633810	0					
ANR	1633941	ArgumentList			1633810	1					
ANR	1633942	ReturnStatement	return base ;	168:1:4794:4805	1633810	6	True				
ANR	1633943	Identifier	base		1633810	0					
ANR	1633944	ReturnType	void *		1633810	1					
ANR	1633945	Identifier	condor_map_seg		1633810	2					
ANR	1633946	ParameterList	"void * base , size_t size"		1633810	3					
ANR	1633947	Parameter	void * base	146:21:4263:4272	1633810	0	True				
ANR	1633948	ParameterType	void *		1633810	0					
ANR	1633949	Identifier	base		1633810	1					
ANR	1633950	Parameter	size_t size	146:33:4275:4285	1633810	1	True				
ANR	1633951	ParameterType	size_t		1633810	0					
ANR	1633952	Identifier	size		1633810	1					
ANR	1633953	CFGEntryNode	ENTRY		1633810		True				
ANR	1633954	CFGExitNode	EXIT		1633810		True				
ANR	1633955	Symbol	SYS_open		1633810						
ANR	1633956	Symbol	errno		1633810						
ANR	1633957	Symbol	NULL		1633810						
ANR	1633958	Symbol	D_ALWAYS		1633810						
ANR	1633959	Symbol	flags		1633810						
ANR	1633960	Symbol	PROT_READ		1633810						
ANR	1633961	Symbol	MMAP		1633810						
ANR	1633962	Symbol	MAP_PRIVATE		1633810						
ANR	1633963	Symbol	MAP_FAILED		1633810						
ANR	1633964	Symbol	strerror		1633810						
ANR	1633965	Symbol	O_RDWR		1633810						
ANR	1633966	Symbol	size		1633810						
ANR	1633967	Symbol	PROT_WRITE		1633810						
ANR	1633968	Symbol	zfd		1633810						
ANR	1633969	Symbol	MAP_FIXED		1633810						
ANR	1633970	Symbol	SYSCALL		1633810						
ANR	1633971	Symbol	base		1633810						
ANR	1633972	Function	display_alternate_memory_heap	171:0:4810:5139							
ANR	1633973	FunctionDef	display_alternate_memory_heap (int dlevel)		1633972	0					
ANR	1633974	CompoundStatement		172:0:4857:5139	1633972	0					
ANR	1633975	ExpressionStatement	"dprintf ( dlevel , ""Alternate Memory Heap: {begin=%p, corestart=%p, coreend=%p, segend=%p, *coreend=%p, *segend=%p, pagesize=%d}\\n"" , amh . begin , amh . corestart , amh . coreend , amh . segend , amh . coreend != NULL ? * amh . coreend : NULL , amh . segend != NULL ? * amh . segend : NULL , amh . pagesize )"	173:1:4860:5137	1633972	0	True				
ANR	1633976	CallExpression	"dprintf ( dlevel , ""Alternate Memory Heap: {begin=%p, corestart=%p, coreend=%p, segend=%p, *coreend=%p, *segend=%p, pagesize=%d}\\n"" , amh . begin , amh . corestart , amh . coreend , amh . segend , amh . coreend != NULL ? * amh . coreend : NULL , amh . segend != NULL ? * amh . segend : NULL , amh . pagesize )"		1633972	0					
ANR	1633977	Callee	dprintf		1633972	0					
ANR	1633978	Identifier	dprintf		1633972	0					
ANR	1633979	ArgumentList	dlevel		1633972	1					
ANR	1633980	Argument	dlevel		1633972	0					
ANR	1633981	Identifier	dlevel		1633972	0					
ANR	1633982	Argument	"""Alternate Memory Heap: {begin=%p, corestart=%p, coreend=%p, segend=%p, *coreend=%p, *segend=%p, pagesize=%d}\\n"""		1633972	1					
ANR	1633983	PrimaryExpression	"""Alternate Memory Heap: {begin=%p, corestart=%p, coreend=%p, segend=%p, *coreend=%p, *segend=%p, pagesize=%d}\\n"""		1633972	0					
ANR	1633984	Argument	amh . begin		1633972	2					
ANR	1633985	MemberAccess	amh . begin		1633972	0					
ANR	1633986	Identifier	amh		1633972	0					
ANR	1633987	Identifier	begin		1633972	1					
ANR	1633988	Argument	amh . corestart		1633972	3					
ANR	1633989	MemberAccess	amh . corestart		1633972	0					
ANR	1633990	Identifier	amh		1633972	0					
ANR	1633991	Identifier	corestart		1633972	1					
ANR	1633992	Argument	amh . coreend		1633972	4					
ANR	1633993	MemberAccess	amh . coreend		1633972	0					
ANR	1633994	Identifier	amh		1633972	0					
ANR	1633995	Identifier	coreend		1633972	1					
ANR	1633996	Argument	amh . segend		1633972	5					
ANR	1633997	MemberAccess	amh . segend		1633972	0					
ANR	1633998	Identifier	amh		1633972	0					
ANR	1633999	Identifier	segend		1633972	1					
ANR	1634000	Argument	amh . coreend != NULL ? * amh . coreend : NULL		1633972	6					
ANR	1634001	ConditionalExpression	amh . coreend != NULL ? * amh . coreend : NULL		1633972	0					
ANR	1634002	Condition	amh . coreend != NULL		1633972	0					
ANR	1634003	EqualityExpression	amh . coreend != NULL		1633972	0		!=			
ANR	1634004	MemberAccess	amh . coreend		1633972	0					
ANR	1634005	Identifier	amh		1633972	0					
ANR	1634006	Identifier	coreend		1633972	1					
ANR	1634007	Identifier	NULL		1633972	1					
ANR	1634008	UnaryOperationExpression	* amh . coreend		1633972	1					
ANR	1634009	UnaryOperator	*		1633972	0					
ANR	1634010	MemberAccess	amh . coreend		1633972	1					
ANR	1634011	Identifier	amh		1633972	0					
ANR	1634012	Identifier	coreend		1633972	1					
ANR	1634013	Identifier	NULL		1633972	2					
ANR	1634014	Argument	amh . segend != NULL ? * amh . segend : NULL		1633972	7					
ANR	1634015	ConditionalExpression	amh . segend != NULL ? * amh . segend : NULL		1633972	0					
ANR	1634016	Condition	amh . segend != NULL		1633972	0					
ANR	1634017	EqualityExpression	amh . segend != NULL		1633972	0		!=			
ANR	1634018	MemberAccess	amh . segend		1633972	0					
ANR	1634019	Identifier	amh		1633972	0					
ANR	1634020	Identifier	segend		1633972	1					
ANR	1634021	Identifier	NULL		1633972	1					
ANR	1634022	UnaryOperationExpression	* amh . segend		1633972	1					
ANR	1634023	UnaryOperator	*		1633972	0					
ANR	1634024	MemberAccess	amh . segend		1633972	1					
ANR	1634025	Identifier	amh		1633972	0					
ANR	1634026	Identifier	segend		1633972	1					
ANR	1634027	Identifier	NULL		1633972	2					
ANR	1634028	Argument	amh . pagesize		1633972	8					
ANR	1634029	MemberAccess	amh . pagesize		1633972	0					
ANR	1634030	Identifier	amh		1633972	0					
ANR	1634031	Identifier	pagesize		1633972	1					
ANR	1634032	ReturnType	void		1633972	1					
ANR	1634033	Identifier	display_alternate_memory_heap		1633972	2					
ANR	1634034	ParameterList	int dlevel		1633972	3					
ANR	1634035	Parameter	int dlevel	171:35:4845:4854	1633972	0	True				
ANR	1634036	ParameterType	int		1633972	0					
ANR	1634037	Identifier	dlevel		1633972	1					
ANR	1634038	CFGEntryNode	ENTRY		1633972		True				
ANR	1634039	CFGExitNode	EXIT		1633972		True				
ANR	1634040	Symbol	amh . segend		1633972						
ANR	1634041	Symbol	* amh . coreend		1633972						
ANR	1634042	Symbol	NULL		1633972						
ANR	1634043	Symbol	* amh . segend		1633972						
ANR	1634044	Symbol	dlevel		1633972						
ANR	1634045	Symbol	amh . corestart		1633972						
ANR	1634046	Symbol	* amh		1633972						
ANR	1634047	Symbol	amh . pagesize		1633972						
ANR	1634048	Symbol	amh		1633972						
ANR	1634049	Symbol	amh . begin		1633972						
ANR	1634050	Symbol	amh . coreend		1633972						
ANR	1634051	Function	condor_morecore	182:0:5188:7339							
ANR	1634052	FunctionDef	condor_morecore (int incr)		1634051	0					
ANR	1634053	CompoundStatement		183:0:5220:7339	1634051	0					
ANR	1634054	IfStatement	if ( amh . pagesize == - 1 )		1634051	0					
ANR	1634055	Condition	amh . pagesize == - 1	191:5:5624:5641	1634051	0	True				
ANR	1634056	EqualityExpression	amh . pagesize == - 1		1634051	0		==			
ANR	1634057	MemberAccess	amh . pagesize		1634051	0					
ANR	1634058	Identifier	amh		1634051	0					
ANR	1634059	Identifier	pagesize		1634051	1					
ANR	1634060	UnaryOperationExpression	- 1		1634051	1					
ANR	1634061	UnaryOperator	-		1634051	0					
ANR	1634062	PrimaryExpression	1		1634051	1					
ANR	1634063	CompoundStatement		9:25:423:423	1634051	1					
ANR	1634064	ExpressionStatement	amh . pagesize = condor_malloc_getpagesize ( )	196:2:5866:5908	1634051	0	True				
ANR	1634065	AssignmentExpression	amh . pagesize = condor_malloc_getpagesize ( )		1634051	0		=			
ANR	1634066	MemberAccess	amh . pagesize		1634051	0					
ANR	1634067	Identifier	amh		1634051	0					
ANR	1634068	Identifier	pagesize		1634051	1					
ANR	1634069	CallExpression	condor_malloc_getpagesize ( )		1634051	1					
ANR	1634070	Callee	condor_malloc_getpagesize		1634051	0					
ANR	1634071	Identifier	condor_malloc_getpagesize		1634051	0					
ANR	1634072	ArgumentList			1634051	1					
ANR	1634073	IfStatement	if ( amh . begin == NULL )		1634051	1					
ANR	1634074	Condition	amh . begin == NULL	199:5:5919:5935	1634051	0	True				
ANR	1634075	EqualityExpression	amh . begin == NULL		1634051	0		==			
ANR	1634076	MemberAccess	amh . begin		1634051	0					
ANR	1634077	Identifier	amh		1634051	0					
ANR	1634078	Identifier	begin		1634051	1					
ANR	1634079	Identifier	NULL		1634051	1					
ANR	1634080	CompoundStatement		20:2:812:912	1634051	1					
ANR	1634081	ExpressionStatement	amh . begin = MyImage . FindAltHeap ( )	200:2:5942:5975	1634051	0	True				
ANR	1634082	AssignmentExpression	amh . begin = MyImage . FindAltHeap ( )		1634051	0		=			
ANR	1634083	MemberAccess	amh . begin		1634051	0					
ANR	1634084	Identifier	amh		1634051	0					
ANR	1634085	Identifier	begin		1634051	1					
ANR	1634086	CallExpression	MyImage . FindAltHeap ( )		1634051	1					
ANR	1634087	Callee	MyImage . FindAltHeap		1634051	0					
ANR	1634088	MemberAccess	MyImage . FindAltHeap		1634051	0					
ANR	1634089	Identifier	MyImage		1634051	0					
ANR	1634090	Identifier	FindAltHeap		1634051	1					
ANR	1634091	ArgumentList			1634051	1					
ANR	1634092	IdentifierDeclStatement	int malloc_static_data = condor_malloc_init_size ( ) ;	201:2:5979:6029	1634051	1	True				
ANR	1634093	IdentifierDecl	malloc_static_data = condor_malloc_init_size ( )		1634051	0					
ANR	1634094	IdentifierDeclType	int		1634051	0					
ANR	1634095	Identifier	malloc_static_data		1634051	1					
ANR	1634096	AssignmentExpression	malloc_static_data = condor_malloc_init_size ( )		1634051	2		=			
ANR	1634097	Identifier	malloc_static_data		1634051	0					
ANR	1634098	CallExpression	condor_malloc_init_size ( )		1634051	1					
ANR	1634099	Callee	condor_malloc_init_size		1634051	0					
ANR	1634100	Identifier	condor_malloc_init_size		1634051	0					
ANR	1634101	ArgumentList			1634051	1					
ANR	1634102	IdentifierDeclStatement	int segincr = ( ( ( incr + malloc_static_data + ( 2 * sizeof ( void * ) ) ) / amh . pagesize ) + 1 ) * amh . pagesize ;	202:2:6033:6133	1634051	2	True				
ANR	1634103	IdentifierDecl	segincr = ( ( ( incr + malloc_static_data + ( 2 * sizeof ( void * ) ) ) / amh . pagesize ) + 1 ) * amh . pagesize		1634051	0					
ANR	1634104	IdentifierDeclType	int		1634051	0					
ANR	1634105	Identifier	segincr		1634051	1					
ANR	1634106	AssignmentExpression	segincr = ( ( ( incr + malloc_static_data + ( 2 * sizeof ( void * ) ) ) / amh . pagesize ) + 1 ) * amh . pagesize		1634051	2		=			
ANR	1634107	Identifier	segincr		1634051	0					
ANR	1634108	MultiplicativeExpression	( ( ( incr + malloc_static_data + ( 2 * sizeof ( void * ) ) ) / amh . pagesize ) + 1 ) * amh . pagesize		1634051	1		*			
ANR	1634109	AdditiveExpression	( ( incr + malloc_static_data + ( 2 * sizeof ( void * ) ) ) / amh . pagesize ) + 1		1634051	0		+			
ANR	1634110	MultiplicativeExpression	( incr + malloc_static_data + ( 2 * sizeof ( void * ) ) ) / amh . pagesize		1634051	0		/			
ANR	1634111	AdditiveExpression	incr + malloc_static_data + ( 2 * sizeof ( void * ) )		1634051	0		+			
ANR	1634112	Identifier	incr		1634051	0					
ANR	1634113	AdditiveExpression	malloc_static_data + ( 2 * sizeof ( void * ) )		1634051	1		+			
ANR	1634114	Identifier	malloc_static_data		1634051	0					
ANR	1634115	MultiplicativeExpression	2 * sizeof ( void * )		1634051	1		*			
ANR	1634116	PrimaryExpression	2		1634051	0					
ANR	1634117	SizeofExpression	sizeof ( void * )		1634051	1					
ANR	1634118	Sizeof	sizeof		1634051	0					
ANR	1634119	SizeofOperand	void *		1634051	1					
ANR	1634120	MemberAccess	amh . pagesize		1634051	1					
ANR	1634121	Identifier	amh		1634051	0					
ANR	1634122	Identifier	pagesize		1634051	1					
ANR	1634123	PrimaryExpression	1		1634051	1					
ANR	1634124	MemberAccess	amh . pagesize		1634051	1					
ANR	1634125	Identifier	amh		1634051	0					
ANR	1634126	Identifier	pagesize		1634051	1					
ANR	1634127	ExpressionStatement	"amh . begin = condor_map_seg ( amh . begin , segincr )"	205:2:6137:6183	1634051	3	True				
ANR	1634128	AssignmentExpression	"amh . begin = condor_map_seg ( amh . begin , segincr )"		1634051	0		=			
ANR	1634129	MemberAccess	amh . begin		1634051	0					
ANR	1634130	Identifier	amh		1634051	0					
ANR	1634131	Identifier	begin		1634051	1					
ANR	1634132	CallExpression	"condor_map_seg ( amh . begin , segincr )"		1634051	1					
ANR	1634133	Callee	condor_map_seg		1634051	0					
ANR	1634134	Identifier	condor_map_seg		1634051	0					
ANR	1634135	ArgumentList	amh . begin		1634051	1					
ANR	1634136	Argument	amh . begin		1634051	0					
ANR	1634137	MemberAccess	amh . begin		1634051	0					
ANR	1634138	Identifier	amh		1634051	0					
ANR	1634139	Identifier	begin		1634051	1					
ANR	1634140	Argument	segincr		1634051	1					
ANR	1634141	Identifier	segincr		1634051	0					
ANR	1634142	ExpressionStatement	amh . corestart = ( void * ) ( ( int ) amh . begin + ( int ) ( 2 * sizeof ( void * ) ) + ( int ) malloc_static_data )	206:2:6187:6281	1634051	4	True				
ANR	1634143	AssignmentExpression	amh . corestart = ( void * ) ( ( int ) amh . begin + ( int ) ( 2 * sizeof ( void * ) ) + ( int ) malloc_static_data )		1634051	0		=			
ANR	1634144	MemberAccess	amh . corestart		1634051	0					
ANR	1634145	Identifier	amh		1634051	0					
ANR	1634146	Identifier	corestart		1634051	1					
ANR	1634147	CastExpression	( void * ) ( ( int ) amh . begin + ( int ) ( 2 * sizeof ( void * ) ) + ( int ) malloc_static_data )		1634051	1					
ANR	1634148	CastTarget	void *		1634051	0					
ANR	1634149	AdditiveExpression	( int ) amh . begin + ( int ) ( 2 * sizeof ( void * ) ) + ( int ) malloc_static_data		1634051	1		+			
ANR	1634150	CastExpression	( int ) amh . begin		1634051	0					
ANR	1634151	CastTarget	int		1634051	0					
ANR	1634152	MemberAccess	amh . begin		1634051	1					
ANR	1634153	Identifier	amh		1634051	0					
ANR	1634154	Identifier	begin		1634051	1					
ANR	1634155	AdditiveExpression	( int ) ( 2 * sizeof ( void * ) ) + ( int ) malloc_static_data		1634051	1		+			
ANR	1634156	CastExpression	( int ) ( 2 * sizeof ( void * ) )		1634051	0					
ANR	1634157	CastTarget	int		1634051	0					
ANR	1634158	MultiplicativeExpression	2 * sizeof ( void * )		1634051	1		*			
ANR	1634159	PrimaryExpression	2		1634051	0					
ANR	1634160	SizeofExpression	sizeof ( void * )		1634051	1					
ANR	1634161	Sizeof	sizeof		1634051	0					
ANR	1634162	SizeofOperand	void *		1634051	1					
ANR	1634163	CastExpression	( int ) malloc_static_data		1634051	1					
ANR	1634164	CastTarget	int		1634051	0					
ANR	1634165	Identifier	malloc_static_data		1634051	1					
ANR	1634166	ExpressionStatement	condor_malloc_init ( ( void * ) ( ( int ) amh . begin + ( int ) ( 2 * sizeof ( void * ) ) ) )	208:2:6286:6354	1634051	5	True				
ANR	1634167	CallExpression	condor_malloc_init ( ( void * ) ( ( int ) amh . begin + ( int ) ( 2 * sizeof ( void * ) ) ) )		1634051	0					
ANR	1634168	Callee	condor_malloc_init		1634051	0					
ANR	1634169	Identifier	condor_malloc_init		1634051	0					
ANR	1634170	ArgumentList	( void * ) ( ( int ) amh . begin + ( int ) ( 2 * sizeof ( void * ) ) )		1634051	1					
ANR	1634171	Argument	( void * ) ( ( int ) amh . begin + ( int ) ( 2 * sizeof ( void * ) ) )		1634051	0					
ANR	1634172	CastExpression	( void * ) ( ( int ) amh . begin + ( int ) ( 2 * sizeof ( void * ) ) )		1634051	0					
ANR	1634173	CastTarget	void *		1634051	0					
ANR	1634174	AdditiveExpression	( int ) amh . begin + ( int ) ( 2 * sizeof ( void * ) )		1634051	1		+			
ANR	1634175	CastExpression	( int ) amh . begin		1634051	0					
ANR	1634176	CastTarget	int		1634051	0					
ANR	1634177	MemberAccess	amh . begin		1634051	1					
ANR	1634178	Identifier	amh		1634051	0					
ANR	1634179	Identifier	begin		1634051	1					
ANR	1634180	CastExpression	( int ) ( 2 * sizeof ( void * ) )		1634051	1					
ANR	1634181	CastTarget	int		1634051	0					
ANR	1634182	MultiplicativeExpression	2 * sizeof ( void * )		1634051	1		*			
ANR	1634183	PrimaryExpression	2		1634051	0					
ANR	1634184	SizeofExpression	sizeof ( void * )		1634051	1					
ANR	1634185	Sizeof	sizeof		1634051	0					
ANR	1634186	SizeofOperand	void *		1634051	1					
ANR	1634187	ExpressionStatement	amh . coreend = ( void * * ) amh . begin	209:2:6358:6390	1634051	6	True				
ANR	1634188	AssignmentExpression	amh . coreend = ( void * * ) amh . begin		1634051	0		=			
ANR	1634189	MemberAccess	amh . coreend		1634051	0					
ANR	1634190	Identifier	amh		1634051	0					
ANR	1634191	Identifier	coreend		1634051	1					
ANR	1634192	CastExpression	( void * * ) amh . begin		1634051	1					
ANR	1634193	CastTarget	void * *		1634051	0					
ANR	1634194	MemberAccess	amh . begin		1634051	1					
ANR	1634195	Identifier	amh		1634051	0					
ANR	1634196	Identifier	begin		1634051	1					
ANR	1634197	ExpressionStatement	amh . segend = ( void * * ) ( ( int ) amh . begin + ( int ) sizeof ( void * ) )	210:2:6394:6452	1634051	7	True				
ANR	1634198	AssignmentExpression	amh . segend = ( void * * ) ( ( int ) amh . begin + ( int ) sizeof ( void * ) )		1634051	0		=			
ANR	1634199	MemberAccess	amh . segend		1634051	0					
ANR	1634200	Identifier	amh		1634051	0					
ANR	1634201	Identifier	segend		1634051	1					
ANR	1634202	CastExpression	( void * * ) ( ( int ) amh . begin + ( int ) sizeof ( void * ) )		1634051	1					
ANR	1634203	CastTarget	void * *		1634051	0					
ANR	1634204	AdditiveExpression	( int ) amh . begin + ( int ) sizeof ( void * )		1634051	1		+			
ANR	1634205	CastExpression	( int ) amh . begin		1634051	0					
ANR	1634206	CastTarget	int		1634051	0					
ANR	1634207	MemberAccess	amh . begin		1634051	1					
ANR	1634208	Identifier	amh		1634051	0					
ANR	1634209	Identifier	begin		1634051	1					
ANR	1634210	CastExpression	( int ) sizeof ( void * )		1634051	1					
ANR	1634211	CastTarget	int		1634051	0					
ANR	1634212	SizeofExpression	sizeof ( void * )		1634051	1					
ANR	1634213	Sizeof	sizeof		1634051	0					
ANR	1634214	SizeofOperand	void *		1634051	1					
ANR	1634215	ExpressionStatement	* amh . segend = ( void * ) ( ( int ) amh . begin + ( int ) segincr )	211:2:6456:6507	1634051	8	True				
ANR	1634216	AssignmentExpression	* amh . segend = ( void * ) ( ( int ) amh . begin + ( int ) segincr )		1634051	0		=			
ANR	1634217	UnaryOperationExpression	* amh . segend		1634051	0					
ANR	1634218	UnaryOperator	*		1634051	0					
ANR	1634219	MemberAccess	amh . segend		1634051	1					
ANR	1634220	Identifier	amh		1634051	0					
ANR	1634221	Identifier	segend		1634051	1					
ANR	1634222	CastExpression	( void * ) ( ( int ) amh . begin + ( int ) segincr )		1634051	1					
ANR	1634223	CastTarget	void *		1634051	0					
ANR	1634224	AdditiveExpression	( int ) amh . begin + ( int ) segincr		1634051	1		+			
ANR	1634225	CastExpression	( int ) amh . begin		1634051	0					
ANR	1634226	CastTarget	int		1634051	0					
ANR	1634227	MemberAccess	amh . begin		1634051	1					
ANR	1634228	Identifier	amh		1634051	0					
ANR	1634229	Identifier	begin		1634051	1					
ANR	1634230	CastExpression	( int ) segincr		1634051	1					
ANR	1634231	CastTarget	int		1634051	0					
ANR	1634232	Identifier	segincr		1634051	1					
ANR	1634233	ExpressionStatement	* amh . coreend = ( void * ) ( ( int ) amh . corestart + ( int ) incr )	212:2:6511:6564	1634051	9	True				
ANR	1634234	AssignmentExpression	* amh . coreend = ( void * ) ( ( int ) amh . corestart + ( int ) incr )		1634051	0		=			
ANR	1634235	UnaryOperationExpression	* amh . coreend		1634051	0					
ANR	1634236	UnaryOperator	*		1634051	0					
ANR	1634237	MemberAccess	amh . coreend		1634051	1					
ANR	1634238	Identifier	amh		1634051	0					
ANR	1634239	Identifier	coreend		1634051	1					
ANR	1634240	CastExpression	( void * ) ( ( int ) amh . corestart + ( int ) incr )		1634051	1					
ANR	1634241	CastTarget	void *		1634051	0					
ANR	1634242	AdditiveExpression	( int ) amh . corestart + ( int ) incr		1634051	1		+			
ANR	1634243	CastExpression	( int ) amh . corestart		1634051	0					
ANR	1634244	CastTarget	int		1634051	0					
ANR	1634245	MemberAccess	amh . corestart		1634051	1					
ANR	1634246	Identifier	amh		1634051	0					
ANR	1634247	Identifier	corestart		1634051	1					
ANR	1634248	CastExpression	( int ) incr		1634051	1					
ANR	1634249	CastTarget	int		1634051	0					
ANR	1634250	Identifier	incr		1634051	1					
ANR	1634251	ReturnStatement	return amh . corestart ;	213:2:6568:6588	1634051	10	True				
ANR	1634252	MemberAccess	amh . corestart		1634051	0					
ANR	1634253	Identifier	amh		1634051	0					
ANR	1634254	Identifier	corestart		1634051	1					
ANR	1634255	ElseStatement	else		1634051	0					
ANR	1634256	IfStatement	if ( incr == 0 )		1634051	0					
ANR	1634257	Condition	incr == 0	214:12:6602:6610	1634051	0	True				
ANR	1634258	EqualityExpression	incr == 0		1634051	0		==			
ANR	1634259	Identifier	incr		1634051	0					
ANR	1634260	PrimaryExpression	0		1634051	1					
ANR	1634261	CompoundStatement		32:23:1392:1392	1634051	1					
ANR	1634262	ReturnStatement	return * amh . coreend ;	215:2:6617:6636	1634051	0	True				
ANR	1634263	UnaryOperationExpression	* amh . coreend		1634051	0					
ANR	1634264	UnaryOperator	*		1634051	0					
ANR	1634265	MemberAccess	amh . coreend		1634051	1					
ANR	1634266	Identifier	amh		1634051	0					
ANR	1634267	Identifier	coreend		1634051	1					
ANR	1634268	ElseStatement	else		1634051	0					
ANR	1634269	CompoundStatement		35:2:1429:1459	1634051	0					
ANR	1634270	IdentifierDeclStatement	void * old_break = * amh . coreend ;	217:2:6650:6680	1634051	0	True				
ANR	1634271	IdentifierDecl	* old_break = * amh . coreend		1634051	0					
ANR	1634272	IdentifierDeclType	void *		1634051	0					
ANR	1634273	Identifier	old_break		1634051	1					
ANR	1634274	AssignmentExpression	* old_break = * amh . coreend		1634051	2		=			
ANR	1634275	Identifier	old_break		1634051	0					
ANR	1634276	UnaryOperationExpression	* amh . coreend		1634051	1					
ANR	1634277	UnaryOperator	*		1634051	0					
ANR	1634278	MemberAccess	amh . coreend		1634051	1					
ANR	1634279	Identifier	amh		1634051	0					
ANR	1634280	Identifier	coreend		1634051	1					
ANR	1634281	ExpressionStatement	* amh . coreend = ( void * ) ( ( int ) * amh . coreend + ( int ) incr )	218:2:6684:6738	1634051	1	True				
ANR	1634282	AssignmentExpression	* amh . coreend = ( void * ) ( ( int ) * amh . coreend + ( int ) incr )		1634051	0		=			
ANR	1634283	UnaryOperationExpression	* amh . coreend		1634051	0					
ANR	1634284	UnaryOperator	*		1634051	0					
ANR	1634285	MemberAccess	amh . coreend		1634051	1					
ANR	1634286	Identifier	amh		1634051	0					
ANR	1634287	Identifier	coreend		1634051	1					
ANR	1634288	CastExpression	( void * ) ( ( int ) * amh . coreend + ( int ) incr )		1634051	1					
ANR	1634289	CastTarget	void *		1634051	0					
ANR	1634290	AdditiveExpression	( int ) * amh . coreend + ( int ) incr		1634051	1		+			
ANR	1634291	CastExpression	( int ) * amh . coreend		1634051	0					
ANR	1634292	CastTarget	int		1634051	0					
ANR	1634293	UnaryOperationExpression	* amh . coreend		1634051	1					
ANR	1634294	UnaryOperator	*		1634051	0					
ANR	1634295	MemberAccess	amh . coreend		1634051	1					
ANR	1634296	Identifier	amh		1634051	0					
ANR	1634297	Identifier	coreend		1634051	1					
ANR	1634298	CastExpression	( int ) incr		1634051	1					
ANR	1634299	CastTarget	int		1634051	0					
ANR	1634300	Identifier	incr		1634051	1					
ANR	1634301	IfStatement	if ( * amh . coreend > * amh . segend )		1634051	2					
ANR	1634302	Condition	* amh . coreend > * amh . segend	219:6:6746:6771	1634051	0	True				
ANR	1634303	RelationalExpression	* amh . coreend > * amh . segend		1634051	0		>			
ANR	1634304	UnaryOperationExpression	* amh . coreend		1634051	0					
ANR	1634305	UnaryOperator	*		1634051	0					
ANR	1634306	MemberAccess	amh . coreend		1634051	1					
ANR	1634307	Identifier	amh		1634051	0					
ANR	1634308	Identifier	coreend		1634051	1					
ANR	1634309	UnaryOperationExpression	* amh . segend		1634051	1					
ANR	1634310	UnaryOperator	*		1634051	0					
ANR	1634311	MemberAccess	amh . segend		1634051	1					
ANR	1634312	Identifier	amh		1634051	0					
ANR	1634313	Identifier	segend		1634051	1					
ANR	1634314	CompoundStatement		38:3:1558:1655	1634051	1					
ANR	1634315	IdentifierDeclStatement	int segincr = ( int ) ( ( ( ( int ) * amh . coreend - ( int ) * amh . segend ) / ( int ) amh . pagesize ) + 1 ) * ( int ) amh . pagesize ;	220:3:6779:6876	1634051	0	True				
ANR	1634316	IdentifierDecl	segincr = ( int ) ( ( ( ( int ) * amh . coreend - ( int ) * amh . segend ) / ( int ) amh . pagesize ) + 1 ) * ( int ) amh . pagesize		1634051	0					
ANR	1634317	IdentifierDeclType	int		1634051	0					
ANR	1634318	Identifier	segincr		1634051	1					
ANR	1634319	AssignmentExpression	segincr = ( int ) ( ( ( ( int ) * amh . coreend - ( int ) * amh . segend ) / ( int ) amh . pagesize ) + 1 ) * ( int ) amh . pagesize		1634051	2		=			
ANR	1634320	Identifier	segincr		1634051	0					
ANR	1634321	MultiplicativeExpression	( int ) ( ( ( ( int ) * amh . coreend - ( int ) * amh . segend ) / ( int ) amh . pagesize ) + 1 ) * ( int ) amh . pagesize		1634051	1		*			
ANR	1634322	CastExpression	( int ) ( ( ( ( int ) * amh . coreend - ( int ) * amh . segend ) / ( int ) amh . pagesize ) + 1 )		1634051	0					
ANR	1634323	CastTarget	int		1634051	0					
ANR	1634324	AdditiveExpression	( ( ( int ) * amh . coreend - ( int ) * amh . segend ) / ( int ) amh . pagesize ) + 1		1634051	1		+			
ANR	1634325	MultiplicativeExpression	( ( int ) * amh . coreend - ( int ) * amh . segend ) / ( int ) amh . pagesize		1634051	0		/			
ANR	1634326	AdditiveExpression	( int ) * amh . coreend - ( int ) * amh . segend		1634051	0		-			
ANR	1634327	CastExpression	( int ) * amh . coreend		1634051	0					
ANR	1634328	CastTarget	int		1634051	0					
ANR	1634329	UnaryOperationExpression	* amh . coreend		1634051	1					
ANR	1634330	UnaryOperator	*		1634051	0					
ANR	1634331	MemberAccess	amh . coreend		1634051	1					
ANR	1634332	Identifier	amh		1634051	0					
ANR	1634333	Identifier	coreend		1634051	1					
ANR	1634334	CastExpression	( int ) * amh . segend		1634051	1					
ANR	1634335	CastTarget	int		1634051	0					
ANR	1634336	UnaryOperationExpression	* amh . segend		1634051	1					
ANR	1634337	UnaryOperator	*		1634051	0					
ANR	1634338	MemberAccess	amh . segend		1634051	1					
ANR	1634339	Identifier	amh		1634051	0					
ANR	1634340	Identifier	segend		1634051	1					
ANR	1634341	CastExpression	( int ) amh . pagesize		1634051	1					
ANR	1634342	CastTarget	int		1634051	0					
ANR	1634343	MemberAccess	amh . pagesize		1634051	1					
ANR	1634344	Identifier	amh		1634051	0					
ANR	1634345	Identifier	pagesize		1634051	1					
ANR	1634346	PrimaryExpression	1		1634051	1					
ANR	1634347	CastExpression	( int ) amh . pagesize		1634051	1					
ANR	1634348	CastTarget	int		1634051	0					
ANR	1634349	MemberAccess	amh . pagesize		1634051	1					
ANR	1634350	Identifier	amh		1634051	0					
ANR	1634351	Identifier	pagesize		1634051	1					
ANR	1634352	IfStatement	if ( ( int ) * amh . coreend + ( int ) segincr - ( int ) amh . begin > ALT_HEAP_SIZE )		1634051	1					
ANR	1634353	Condition	( int ) * amh . coreend + ( int ) segincr - ( int ) amh . begin > ALT_HEAP_SIZE	221:7:6885:6945	1634051	0	True				
ANR	1634354	RelationalExpression	( int ) * amh . coreend + ( int ) segincr - ( int ) amh . begin > ALT_HEAP_SIZE		1634051	0		>			
ANR	1634355	AdditiveExpression	( int ) * amh . coreend + ( int ) segincr - ( int ) amh . begin		1634051	0		+			
ANR	1634356	CastExpression	( int ) * amh . coreend		1634051	0					
ANR	1634357	CastTarget	int		1634051	0					
ANR	1634358	UnaryOperationExpression	* amh . coreend		1634051	1					
ANR	1634359	UnaryOperator	*		1634051	0					
ANR	1634360	MemberAccess	amh . coreend		1634051	1					
ANR	1634361	Identifier	amh		1634051	0					
ANR	1634362	Identifier	coreend		1634051	1					
ANR	1634363	AdditiveExpression	( int ) segincr - ( int ) amh . begin		1634051	1		-			
ANR	1634364	CastExpression	( int ) segincr		1634051	0					
ANR	1634365	CastTarget	int		1634051	0					
ANR	1634366	Identifier	segincr		1634051	1					
ANR	1634367	CastExpression	( int ) amh . begin		1634051	1					
ANR	1634368	CastTarget	int		1634051	0					
ANR	1634369	MemberAccess	amh . begin		1634051	1					
ANR	1634370	Identifier	amh		1634051	0					
ANR	1634371	Identifier	begin		1634051	1					
ANR	1634372	Identifier	ALT_HEAP_SIZE		1634051	1					
ANR	1634373	CompoundStatement		39:70:1727:1727	1634051	1					
ANR	1634374	ExpressionStatement	"dprintf ( D_ALWAYS , ""fatal error: exceeded ALT_HEAP_SIZE of %d bytes!\\n"" , ALT_HEAP_SIZE )"	222:4:6954:7052	1634051	0	True				
ANR	1634375	CallExpression	"dprintf ( D_ALWAYS , ""fatal error: exceeded ALT_HEAP_SIZE of %d bytes!\\n"" , ALT_HEAP_SIZE )"		1634051	0					
ANR	1634376	Callee	dprintf		1634051	0					
ANR	1634377	Identifier	dprintf		1634051	0					
ANR	1634378	ArgumentList	D_ALWAYS		1634051	1					
ANR	1634379	Argument	D_ALWAYS		1634051	0					
ANR	1634380	Identifier	D_ALWAYS		1634051	0					
ANR	1634381	Argument	"""fatal error: exceeded ALT_HEAP_SIZE of %d bytes!\\n"""		1634051	1					
ANR	1634382	PrimaryExpression	"""fatal error: exceeded ALT_HEAP_SIZE of %d bytes!\\n"""		1634051	0					
ANR	1634383	Argument	ALT_HEAP_SIZE		1634051	2					
ANR	1634384	Identifier	ALT_HEAP_SIZE		1634051	0					
ANR	1634385	ExpressionStatement	Suicide ( )	225:4:7058:7067	1634051	1	True				
ANR	1634386	CallExpression	Suicide ( )		1634051	0					
ANR	1634387	Callee	Suicide		1634051	0					
ANR	1634388	Identifier	Suicide		1634051	0					
ANR	1634389	ArgumentList			1634051	1					
ANR	1634390	IfStatement	"if ( condor_map_seg ( * amh . segend , segincr ) != * amh . segend )"		1634051	2					
ANR	1634391	Condition	"condor_map_seg ( * amh . segend , segincr ) != * amh . segend"	227:7:7081:7131	1634051	0	True				
ANR	1634392	EqualityExpression	"condor_map_seg ( * amh . segend , segincr ) != * amh . segend"		1634051	0		!=			
ANR	1634393	CallExpression	"condor_map_seg ( * amh . segend , segincr )"		1634051	0					
ANR	1634394	Callee	condor_map_seg		1634051	0					
ANR	1634395	Identifier	condor_map_seg		1634051	0					
ANR	1634396	ArgumentList	* amh . segend		1634051	1					
ANR	1634397	Argument	* amh . segend		1634051	0					
ANR	1634398	UnaryOperationExpression	* amh . segend		1634051	0					
ANR	1634399	UnaryOperator	*		1634051	0					
ANR	1634400	MemberAccess	amh . segend		1634051	1					
ANR	1634401	Identifier	amh		1634051	0					
ANR	1634402	Identifier	segend		1634051	1					
ANR	1634403	Argument	segincr		1634051	1					
ANR	1634404	Identifier	segincr		1634051	0					
ANR	1634405	UnaryOperationExpression	* amh . segend		1634051	1					
ANR	1634406	UnaryOperator	*		1634051	0					
ANR	1634407	MemberAccess	amh . segend		1634051	1					
ANR	1634408	Identifier	amh		1634051	0					
ANR	1634409	Identifier	segend		1634051	1					
ANR	1634410	CompoundStatement		45:60:1913:1913	1634051	1					
ANR	1634411	Statement	dprintf	228:4:7140:7146	1634051	0	True				
ANR	1634412	Statement	(	228:11:7147:7147	1634051	1	True				
ANR	1634413	Statement	D_ALWAYS	228:12:7148:7155	1634051	2	True				
ANR	1634414	Statement	","	228:20:7156:7156	1634051	3	True				
ANR	1634415	Statement	"""failed to allocate contiguous segments in """	228:22:7158:7201	1634051	4	True				
ANR	1634416	Statement	"""condor_morecore!\\n"""	229:6:7209:7228	1634051	5	True				
ANR	1634417	Statement	)	229:26:7229:7229	1634051	6	True				
ANR	1634418	ExpressionStatement		229:27:7230:7230	1634051	7	True				
ANR	1634419	ExpressionStatement	Suicide ( )	230:4:7236:7245	1634051	8	True				
ANR	1634420	CallExpression	Suicide ( )		1634051	0					
ANR	1634421	Callee	Suicide		1634051	0					
ANR	1634422	Identifier	Suicide		1634051	0					
ANR	1634423	ArgumentList			1634051	1					
ANR	1634424	ExpressionStatement	* amh . segend = ( void * ) ( ( int ) * amh . segend + ( int ) segincr )	232:3:7255:7310	1634051	3	True				
ANR	1634425	AssignmentExpression	* amh . segend = ( void * ) ( ( int ) * amh . segend + ( int ) segincr )		1634051	0		=			
ANR	1634426	UnaryOperationExpression	* amh . segend		1634051	0					
ANR	1634427	UnaryOperator	*		1634051	0					
ANR	1634428	MemberAccess	amh . segend		1634051	1					
ANR	1634429	Identifier	amh		1634051	0					
ANR	1634430	Identifier	segend		1634051	1					
ANR	1634431	CastExpression	( void * ) ( ( int ) * amh . segend + ( int ) segincr )		1634051	1					
ANR	1634432	CastTarget	void *		1634051	0					
ANR	1634433	AdditiveExpression	( int ) * amh . segend + ( int ) segincr		1634051	1		+			
ANR	1634434	CastExpression	( int ) * amh . segend		1634051	0					
ANR	1634435	CastTarget	int		1634051	0					
ANR	1634436	UnaryOperationExpression	* amh . segend		1634051	1					
ANR	1634437	UnaryOperator	*		1634051	0					
ANR	1634438	MemberAccess	amh . segend		1634051	1					
ANR	1634439	Identifier	amh		1634051	0					
ANR	1634440	Identifier	segend		1634051	1					
ANR	1634441	CastExpression	( int ) segincr		1634051	1					
ANR	1634442	CastTarget	int		1634051	0					
ANR	1634443	Identifier	segincr		1634051	1					
ANR	1634444	ReturnStatement	return old_break ;	234:2:7318:7334	1634051	3	True				
ANR	1634445	Identifier	old_break		1634051	0					
ANR	1634446	ReturnType	void *		1634051	1					
ANR	1634447	Identifier	condor_morecore		1634051	2					
ANR	1634448	ParameterList	int incr		1634051	3					
ANR	1634449	Parameter	int incr	182:22:5210:5217	1634051	0	True				
ANR	1634450	ParameterType	int		1634051	0					
ANR	1634451	Identifier	incr		1634051	1					
ANR	1634452	CFGEntryNode	ENTRY		1634051		True				
ANR	1634453	CFGExitNode	EXIT		1634051		True				
ANR	1634454	Symbol	* amh . coreend		1634051						
ANR	1634455	Symbol	NULL		1634051						
ANR	1634456	Symbol	* amh . segend		1634051						
ANR	1634457	Symbol	incr		1634051						
ANR	1634458	Symbol	amh . corestart		1634051						
ANR	1634459	Symbol	D_ALWAYS		1634051						
ANR	1634460	Symbol	ALT_HEAP_SIZE		1634051						
ANR	1634461	Symbol	segincr		1634051						
ANR	1634462	Symbol	condor_malloc_getpagesize		1634051						
ANR	1634463	Symbol	MyImage . FindAltHeap		1634051						
ANR	1634464	Symbol	amh . segend		1634051						
ANR	1634465	Symbol	old_break		1634051						
ANR	1634466	Symbol	* amh		1634051						
ANR	1634467	Symbol	amh . pagesize		1634051						
ANR	1634468	Symbol	malloc_static_data		1634051						
ANR	1634469	Symbol	condor_malloc_init_size		1634051						
ANR	1634470	Symbol	amh		1634051						
ANR	1634471	Symbol	condor_map_seg		1634051						
ANR	1634472	Symbol	amh . begin		1634051						
ANR	1634473	Symbol	MyImage		1634051						
ANR	1634474	Symbol	amh . coreend		1634051						
ANR	1634475	DeclStmt									
ANR	1634476	Decl							uInt	uInt	total_size
ANR	1634477	DeclStmt									
ANR	1634478	Decl							void	void *	chunk
ANR	1634479	DeclStmt									
ANR	1634480	Decl							void	void *	chunk_start
ANR	1634481	DeclStmt									
ANR	1634482	Decl							void	void *	chunk_end
ANR	1634483	DeclStmt									
ANR	1634484	Decl							items	items *	size
ANR	1634485	Function	Header :: Init	394:0:12891:13017							
ANR	1634486	FunctionDef	Header :: Init ()		1634485	0					
ANR	1634487	CompoundStatement		396:0:12911:13017	1634485	0					
ANR	1634488	IfStatement	if ( condor_compress_ckpt )		1634485	0					
ANR	1634489	Condition	condor_compress_ckpt	397:5:12918:12937	1634485	0	True				
ANR	1634490	Identifier	condor_compress_ckpt		1634485	0					
ANR	1634491	ExpressionStatement	magic = COMPRESS_MAGIC	398:2:12942:12964	1634485	1	True				
ANR	1634492	AssignmentExpression	magic = COMPRESS_MAGIC		1634485	0		=			
ANR	1634493	Identifier	magic		1634485	0					
ANR	1634494	Identifier	COMPRESS_MAGIC		1634485	1					
ANR	1634495	ElseStatement	else		1634485	0					
ANR	1634496	ExpressionStatement	magic = MAGIC	400:2:12974:12987	1634485	0	True				
ANR	1634497	AssignmentExpression	magic = MAGIC		1634485	0		=			
ANR	1634498	Identifier	magic		1634485	0					
ANR	1634499	Identifier	MAGIC		1634485	1					
ANR	1634500	ExpressionStatement	n_segs = 0	401:1:12990:13000	1634485	1	True				
ANR	1634501	AssignmentExpression	n_segs = 0		1634485	0		=			
ANR	1634502	Identifier	n_segs		1634485	0					
ANR	1634503	PrimaryExpression	0		1634485	1					
ANR	1634504	ExpressionStatement	alt_heap = 0	402:1:13003:13015	1634485	2	True				
ANR	1634505	AssignmentExpression	alt_heap = 0		1634485	0		=			
ANR	1634506	Identifier	alt_heap		1634485	0					
ANR	1634507	PrimaryExpression	0		1634485	1					
ANR	1634508	ReturnType	void		1634485	1					
ANR	1634509	Identifier	Header :: Init		1634485	2					
ANR	1634510	ParameterList			1634485	3					
ANR	1634511	CFGEntryNode	ENTRY		1634485		True				
ANR	1634512	CFGExitNode	EXIT		1634485		True				
ANR	1634513	Symbol	magic		1634485						
ANR	1634514	Symbol	alt_heap		1634485						
ANR	1634515	Symbol	condor_compress_ckpt		1634485						
ANR	1634516	Symbol	MAGIC		1634485						
ANR	1634517	Symbol	COMPRESS_MAGIC		1634485						
ANR	1634518	Symbol	n_segs		1634485						
ANR	1634519	Function	Header :: ResetMagic	405:0:13020:13124							
ANR	1634520	FunctionDef	Header :: ResetMagic ()		1634519	0					
ANR	1634521	CompoundStatement		407:0:13046:13124	1634519	0					
ANR	1634522	IfStatement	if ( condor_compress_ckpt )		1634519	0					
ANR	1634523	Condition	condor_compress_ckpt	408:5:13053:13072	1634519	0	True				
ANR	1634524	Identifier	condor_compress_ckpt		1634519	0					
ANR	1634525	ExpressionStatement	magic = COMPRESS_MAGIC	409:2:13077:13099	1634519	1	True				
ANR	1634526	AssignmentExpression	magic = COMPRESS_MAGIC		1634519	0		=			
ANR	1634527	Identifier	magic		1634519	0					
ANR	1634528	Identifier	COMPRESS_MAGIC		1634519	1					
ANR	1634529	ElseStatement	else		1634519	0					
ANR	1634530	ExpressionStatement	magic = MAGIC	411:2:13109:13122	1634519	0	True				
ANR	1634531	AssignmentExpression	magic = MAGIC		1634519	0		=			
ANR	1634532	Identifier	magic		1634519	0					
ANR	1634533	Identifier	MAGIC		1634519	1					
ANR	1634534	ReturnType	void		1634519	1					
ANR	1634535	Identifier	Header :: ResetMagic		1634519	2					
ANR	1634536	ParameterList			1634519	3					
ANR	1634537	CFGEntryNode	ENTRY		1634519		True				
ANR	1634538	CFGExitNode	EXIT		1634519		True				
ANR	1634539	Symbol	magic		1634519						
ANR	1634540	Symbol	condor_compress_ckpt		1634519						
ANR	1634541	Symbol	MAGIC		1634519						
ANR	1634542	Symbol	COMPRESS_MAGIC		1634519						
ANR	1634543	Function	Header :: Display	414:0:13127:13205							
ANR	1634544	FunctionDef	Header :: Display ()		1634543	0					
ANR	1634545	CompoundStatement		416:0:13150:13205	1634543	0					
ANR	1634546	Statement	DUMP	417:1:13153:13156	1634543	0	True				
ANR	1634547	Statement	(	417:5:13157:13157	1634543	1	True				
ANR	1634548	Statement	""" """	417:7:13159:13161	1634543	2	True				
ANR	1634549	Statement	","	417:10:13162:13162	1634543	3	True				
ANR	1634550	Statement	magic	417:12:13164:13168	1634543	4	True				
ANR	1634551	Statement	","	417:17:13169:13169	1634543	5	True				
ANR	1634552	Statement	0	417:19:13171:13171	1634543	6	True				
ANR	1634553	Statement	x	417:20:13172:13172	1634543	7	True				
ANR	1634554	Statement	%	417:21:13173:13173	1634543	8	True				
ANR	1634555	Statement	X	417:22:13174:13174	1634543	9	True				
ANR	1634556	Statement	)	417:24:13176:13176	1634543	10	True				
ANR	1634557	ExpressionStatement		417:25:13177:13177	1634543	11	True				
ANR	1634558	Statement	DUMP	418:1:13180:13183	1634543	12	True				
ANR	1634559	Statement	(	418:5:13184:13184	1634543	13	True				
ANR	1634560	Statement	""" """	418:7:13186:13188	1634543	14	True				
ANR	1634561	Statement	","	418:10:13189:13189	1634543	15	True				
ANR	1634562	Statement	n_segs	418:12:13191:13196	1634543	16	True				
ANR	1634563	Statement	","	418:18:13197:13197	1634543	17	True				
ANR	1634564	Statement	%	418:20:13199:13199	1634543	18	True				
ANR	1634565	Statement	d	418:21:13200:13200	1634543	19	True				
ANR	1634566	Statement	)	418:23:13202:13202	1634543	20	True				
ANR	1634567	ExpressionStatement		418:24:13203:13203	1634543	21	True				
ANR	1634568	ReturnType	void		1634543	1					
ANR	1634569	Identifier	Header :: Display		1634543	2					
ANR	1634570	ParameterList			1634543	3					
ANR	1634571	CFGEntryNode	ENTRY		1634543		True				
ANR	1634572	CFGExitNode	EXIT		1634543		True				
ANR	1634573	Function	SegMap :: Init	421:0:13208:13344							
ANR	1634574	FunctionDef	"SegMap :: Init (const char * n , RAW_ADDR c , long l , int p)"		1634573	0					
ANR	1634575	CompoundStatement		423:0:13270:13344	1634573	0					
ANR	1634576	ExpressionStatement	"strcpy ( name , n )"	424:1:13273:13290	1634573	0	True				
ANR	1634577	CallExpression	"strcpy ( name , n )"		1634573	0					
ANR	1634578	Callee	strcpy		1634573	0					
ANR	1634579	Identifier	strcpy		1634573	0					
ANR	1634580	ArgumentList	name		1634573	1					
ANR	1634581	Argument	name		1634573	0					
ANR	1634582	Identifier	name		1634573	0					
ANR	1634583	Argument	n		1634573	1					
ANR	1634584	Identifier	n		1634573	0					
ANR	1634585	ExpressionStatement	file_loc = - 1	425:1:13293:13306	1634573	1	True				
ANR	1634586	AssignmentExpression	file_loc = - 1		1634573	0		=			
ANR	1634587	Identifier	file_loc		1634573	0					
ANR	1634588	UnaryOperationExpression	- 1		1634573	1					
ANR	1634589	UnaryOperator	-		1634573	0					
ANR	1634590	PrimaryExpression	1		1634573	1					
ANR	1634591	ExpressionStatement	core_loc = c	426:1:13309:13321	1634573	2	True				
ANR	1634592	AssignmentExpression	core_loc = c		1634573	0		=			
ANR	1634593	Identifier	core_loc		1634573	0					
ANR	1634594	Identifier	c		1634573	1					
ANR	1634595	ExpressionStatement	len = l	427:1:13324:13331	1634573	3	True				
ANR	1634596	AssignmentExpression	len = l		1634573	0		=			
ANR	1634597	Identifier	len		1634573	0					
ANR	1634598	Identifier	l		1634573	1					
ANR	1634599	ExpressionStatement	prot = p	428:1:13334:13342	1634573	4	True				
ANR	1634600	AssignmentExpression	prot = p		1634573	0		=			
ANR	1634601	Identifier	prot		1634573	0					
ANR	1634602	Identifier	p		1634573	1					
ANR	1634603	ReturnType	void		1634573	1					
ANR	1634604	Identifier	SegMap :: Init		1634573	2					
ANR	1634605	ParameterList	"const char * n , RAW_ADDR c , long l , int p"		1634573	3					
ANR	1634606	Parameter	const char * n	422:14:13227:13239	1634573	0	True				
ANR	1634607	ParameterType	const char *		1634573	0					
ANR	1634608	Identifier	n		1634573	1					
ANR	1634609	Parameter	RAW_ADDR c	422:29:13242:13251	1634573	1	True				
ANR	1634610	ParameterType	RAW_ADDR		1634573	0					
ANR	1634611	Identifier	c		1634573	1					
ANR	1634612	Parameter	long l	422:41:13254:13259	1634573	2	True				
ANR	1634613	ParameterType	long		1634573	0					
ANR	1634614	Identifier	l		1634573	1					
ANR	1634615	Parameter	int p	422:49:13262:13266	1634573	3	True				
ANR	1634616	ParameterType	int		1634573	0					
ANR	1634617	Identifier	p		1634573	1					
ANR	1634618	CFGEntryNode	ENTRY		1634573		True				
ANR	1634619	CFGExitNode	EXIT		1634573		True				
ANR	1634620	Symbol	p		1634573						
ANR	1634621	Symbol	file_loc		1634573						
ANR	1634622	Symbol	c		1634573						
ANR	1634623	Symbol	prot		1634573						
ANR	1634624	Symbol	len		1634573						
ANR	1634625	Symbol	name		1634573						
ANR	1634626	Symbol	l		1634573						
ANR	1634627	Symbol	core_loc		1634573						
ANR	1634628	Symbol	n		1634573						
ANR	1634629	Function	SegMap :: MSync	431:0:13347:14369							
ANR	1634630	FunctionDef	SegMap :: MSync ()		1634629	0					
ANR	1634631	CompoundStatement		433:0:13368:14369	1634629	0					
ANR	1634632	IdentifierDeclStatement	int pagesize = getpagesize ( ) ;	448:1:14114:14142	1634629	0	True				
ANR	1634633	IdentifierDecl	pagesize = getpagesize ( )		1634629	0					
ANR	1634634	IdentifierDeclType	int		1634629	0					
ANR	1634635	Identifier	pagesize		1634629	1					
ANR	1634636	AssignmentExpression	pagesize = getpagesize ( )		1634629	2		=			
ANR	1634637	Identifier	pagesize		1634629	0					
ANR	1634638	CallExpression	getpagesize ( )		1634629	1					
ANR	1634639	Callee	getpagesize		1634629	0					
ANR	1634640	Identifier	getpagesize		1634629	0					
ANR	1634641	ArgumentList			1634629	1					
ANR	1634642	ForStatement	for ( int i = 0 ; i < len ; i += pagesize )		1634629	1					
ANR	1634643	ForInit	int i = 0 ;	449:6:14150:14159	1634629	0	True				
ANR	1634644	IdentifierDeclStatement	int i = 0 ;		1634629	0					
ANR	1634645	IdentifierDecl	i = 0		1634629	0					
ANR	1634646	IdentifierDeclType	int		1634629	0					
ANR	1634647	Identifier	i		1634629	1					
ANR	1634648	AssignmentExpression	i = 0		1634629	2		=			
ANR	1634649	Identifier	i		1634629	0					
ANR	1634650	PrimaryExpression	0		1634629	1					
ANR	1634651	Condition	i < len	449:17:14161:14167	1634629	1	True				
ANR	1634652	RelationalExpression	i < len		1634629	0		<			
ANR	1634653	Identifier	i		1634629	0					
ANR	1634654	Identifier	len		1634629	1					
ANR	1634655	AssignmentExpression	i += pagesize	449:26:14170:14182	1634629	2	True	+=			
ANR	1634656	Identifier	i		1634629	0					
ANR	1634657	Identifier	pagesize		1634629	1					
ANR	1634658	CompoundStatement		17:41:816:816	1634629	3					
ANR	1634659	IfStatement	"if ( msync ( ( char * ) core_loc + i , pagesize , MS_SYNC ) < 0 )"		1634629	0					
ANR	1634660	Condition	"msync ( ( char * ) core_loc + i , pagesize , MS_SYNC ) < 0"	450:6:14193:14240	1634629	0	True				
ANR	1634661	RelationalExpression	"msync ( ( char * ) core_loc + i , pagesize , MS_SYNC ) < 0"		1634629	0		<			
ANR	1634662	CallExpression	"msync ( ( char * ) core_loc + i , pagesize , MS_SYNC )"		1634629	0					
ANR	1634663	Callee	msync		1634629	0					
ANR	1634664	Identifier	msync		1634629	0					
ANR	1634665	ArgumentList	( char * ) core_loc + i		1634629	1					
ANR	1634666	Argument	( char * ) core_loc + i		1634629	0					
ANR	1634667	AdditiveExpression	( char * ) core_loc + i		1634629	0		+			
ANR	1634668	CastExpression	( char * ) core_loc		1634629	0					
ANR	1634669	CastTarget	char *		1634629	0					
ANR	1634670	Identifier	core_loc		1634629	1					
ANR	1634671	Identifier	i		1634629	1					
ANR	1634672	Argument	pagesize		1634629	1					
ANR	1634673	Identifier	pagesize		1634629	0					
ANR	1634674	Argument	MS_SYNC		1634629	2					
ANR	1634675	Identifier	MS_SYNC		1634629	0					
ANR	1634676	PrimaryExpression	0		1634629	1					
ANR	1634677	CompoundStatement		18:56:874:874	1634629	1					
ANR	1634678	ExpressionStatement	"dprintf ( D_ALWAYS , ""msync(%lx, %d) failed with errno = %d\\n"" , ( unsigned long ) core_loc + i , pagesize , errno )"	451:3:14248:14360	1634629	0	True				
ANR	1634679	CallExpression	"dprintf ( D_ALWAYS , ""msync(%lx, %d) failed with errno = %d\\n"" , ( unsigned long ) core_loc + i , pagesize , errno )"		1634629	0					
ANR	1634680	Callee	dprintf		1634629	0					
ANR	1634681	Identifier	dprintf		1634629	0					
ANR	1634682	ArgumentList	D_ALWAYS		1634629	1					
ANR	1634683	Argument	D_ALWAYS		1634629	0					
ANR	1634684	Identifier	D_ALWAYS		1634629	0					
ANR	1634685	Argument	"""msync(%lx, %d) failed with errno = %d\\n"""		1634629	1					
ANR	1634686	PrimaryExpression	"""msync(%lx, %d) failed with errno = %d\\n"""		1634629	0					
ANR	1634687	Argument	( unsigned long ) core_loc + i		1634629	2					
ANR	1634688	AdditiveExpression	( unsigned long ) core_loc + i		1634629	0		+			
ANR	1634689	CastExpression	( unsigned long ) core_loc		1634629	0					
ANR	1634690	CastTarget	unsigned long		1634629	0					
ANR	1634691	Identifier	core_loc		1634629	1					
ANR	1634692	Identifier	i		1634629	1					
ANR	1634693	Argument	pagesize		1634629	3					
ANR	1634694	Identifier	pagesize		1634629	0					
ANR	1634695	Argument	errno		1634629	4					
ANR	1634696	Identifier	errno		1634629	0					
ANR	1634697	ReturnType	void		1634629	1					
ANR	1634698	Identifier	SegMap :: MSync		1634629	2					
ANR	1634699	ParameterList			1634629	3					
ANR	1634700	CFGEntryNode	ENTRY		1634629		True				
ANR	1634701	CFGExitNode	EXIT		1634629		True				
ANR	1634702	Symbol	errno		1634629						
ANR	1634703	Symbol	len		1634629						
ANR	1634704	Symbol	MS_SYNC		1634629						
ANR	1634705	Symbol	pagesize		1634629						
ANR	1634706	Symbol	D_ALWAYS		1634629						
ANR	1634707	Symbol	i		1634629						
ANR	1634708	Symbol	core_loc		1634629						
ANR	1634709	Symbol	getpagesize		1634629						
ANR	1634710	Symbol	msync		1634629						
ANR	1634711	Function	SegMap :: Display	457:0:14372:14654							
ANR	1634712	FunctionDef	SegMap :: Display ()		1634711	0					
ANR	1634713	CompoundStatement		459:0:14395:14654	1634711	0					
ANR	1634714	Statement	DUMP	460:1:14398:14401	1634711	0	True				
ANR	1634715	Statement	(	460:5:14402:14402	1634711	1	True				
ANR	1634716	Statement	""" """	460:7:14404:14406	1634711	2	True				
ANR	1634717	Statement	","	460:10:14407:14407	1634711	3	True				
ANR	1634718	Statement	name	460:12:14409:14412	1634711	4	True				
ANR	1634719	Statement	","	460:16:14413:14413	1634711	5	True				
ANR	1634720	Statement	%	460:18:14415:14415	1634711	6	True				
ANR	1634721	Statement	s	460:19:14416:14416	1634711	7	True				
ANR	1634722	Statement	)	460:21:14418:14418	1634711	8	True				
ANR	1634723	ExpressionStatement		460:22:14419:14419	1634711	9	True				
ANR	1634724	ExpressionStatement	"printf ( "" file_loc = %lld (0x%llX)\\n"" , ( long long ) file_loc , ( long long ) file_loc )"	462:1:14423:14510	1634711	10	True				
ANR	1634725	CallExpression	"printf ( "" file_loc = %lld (0x%llX)\\n"" , ( long long ) file_loc , ( long long ) file_loc )"		1634711	0					
ANR	1634726	Callee	printf		1634711	0					
ANR	1634727	Identifier	printf		1634711	0					
ANR	1634728	ArgumentList	""" file_loc = %lld (0x%llX)\\n"""		1634711	1					
ANR	1634729	Argument	""" file_loc = %lld (0x%llX)\\n"""		1634711	0					
ANR	1634730	PrimaryExpression	""" file_loc = %lld (0x%llX)\\n"""		1634711	0					
ANR	1634731	Argument	( long long ) file_loc		1634711	1					
ANR	1634732	CastExpression	( long long ) file_loc		1634711	0					
ANR	1634733	CastTarget	long long		1634711	0					
ANR	1634734	Identifier	file_loc		1634711	1					
ANR	1634735	Argument	( long long ) file_loc		1634711	2					
ANR	1634736	CastExpression	( long long ) file_loc		1634711	0					
ANR	1634737	CastTarget	long long		1634711	0					
ANR	1634738	Identifier	file_loc		1634711	1					
ANR	1634739	ExpressionStatement	"printf ( "" core_loc = %lu (0x%lX)\\n"" , ( unsigned long ) core_loc , ( unsigned long ) core_loc )"	465:1:14513:14606	1634711	11	True				
ANR	1634740	CallExpression	"printf ( "" core_loc = %lu (0x%lX)\\n"" , ( unsigned long ) core_loc , ( unsigned long ) core_loc )"		1634711	0					
ANR	1634741	Callee	printf		1634711	0					
ANR	1634742	Identifier	printf		1634711	0					
ANR	1634743	ArgumentList	""" core_loc = %lu (0x%lX)\\n"""		1634711	1					
ANR	1634744	Argument	""" core_loc = %lu (0x%lX)\\n"""		1634711	0					
ANR	1634745	PrimaryExpression	""" core_loc = %lu (0x%lX)\\n"""		1634711	0					
ANR	1634746	Argument	( unsigned long ) core_loc		1634711	1					
ANR	1634747	CastExpression	( unsigned long ) core_loc		1634711	0					
ANR	1634748	CastTarget	unsigned long		1634711	0					
ANR	1634749	Identifier	core_loc		1634711	1					
ANR	1634750	Argument	( unsigned long ) core_loc		1634711	2					
ANR	1634751	CastExpression	( unsigned long ) core_loc		1634711	0					
ANR	1634752	CastTarget	unsigned long		1634711	0					
ANR	1634753	Identifier	core_loc		1634711	1					
ANR	1634754	ExpressionStatement	"printf ( "" len = %ld (0x%lX)\\n"" , len , len )"	469:1:14610:14652	1634711	12	True				
ANR	1634755	CallExpression	"printf ( "" len = %ld (0x%lX)\\n"" , len , len )"		1634711	0					
ANR	1634756	Callee	printf		1634711	0					
ANR	1634757	Identifier	printf		1634711	0					
ANR	1634758	ArgumentList	""" len = %ld (0x%lX)\\n"""		1634711	1					
ANR	1634759	Argument	""" len = %ld (0x%lX)\\n"""		1634711	0					
ANR	1634760	PrimaryExpression	""" len = %ld (0x%lX)\\n"""		1634711	0					
ANR	1634761	Argument	len		1634711	1					
ANR	1634762	Identifier	len		1634711	0					
ANR	1634763	Argument	len		1634711	2					
ANR	1634764	Identifier	len		1634711	0					
ANR	1634765	ReturnType	void		1634711	1					
ANR	1634766	Identifier	SegMap :: Display		1634711	2					
ANR	1634767	ParameterList			1634711	3					
ANR	1634768	CFGEntryNode	ENTRY		1634711		True				
ANR	1634769	CFGExitNode	EXIT		1634711		True				
ANR	1634770	Symbol	file_loc		1634711						
ANR	1634771	Symbol	len		1634711						
ANR	1634772	Symbol	core_loc		1634711						
ANR	1634773	Function	Image :: SetFd	473:0:14658:14706							
ANR	1634774	FunctionDef	Image :: SetFd (int f)		1634773	0					
ANR	1634775	CompoundStatement		475:0:14685:14706	1634773	0					
ANR	1634776	ExpressionStatement	fd = f	476:1:14688:14694	1634773	0	True				
ANR	1634777	AssignmentExpression	fd = f		1634773	0		=			
ANR	1634778	Identifier	fd		1634773	0					
ANR	1634779	Identifier	f		1634773	1					
ANR	1634780	ExpressionStatement	pos = 0	477:1:14697:14704	1634773	1	True				
ANR	1634781	AssignmentExpression	pos = 0		1634773	0		=			
ANR	1634782	Identifier	pos		1634773	0					
ANR	1634783	PrimaryExpression	0		1634773	1					
ANR	1634784	ReturnType	void		1634773	1					
ANR	1634785	Identifier	Image :: SetFd		1634773	2					
ANR	1634786	ParameterList	int f		1634773	3					
ANR	1634787	Parameter	int f	474:14:14677:14681	1634773	0	True				
ANR	1634788	ParameterType	int		1634773	0					
ANR	1634789	Identifier	f		1634773	1					
ANR	1634790	CFGEntryNode	ENTRY		1634773		True				
ANR	1634791	CFGExitNode	EXIT		1634773		True				
ANR	1634792	Symbol	pos		1634773						
ANR	1634793	Symbol	f		1634773						
ANR	1634794	Symbol	fd		1634773						
ANR	1634795	Function	Image :: SetFileName	480:0:14709:15131							
ANR	1634796	FunctionDef	Image :: SetFileName (const char * ckpt_name)		1634795	0					
ANR	1634797	CompoundStatement		482:0:14758:15131	1634795	0					
ANR	1634798	Statement	static	483:1:14761:14766	1634795	0	True				
ANR	1634799	IdentifierDeclStatement	bool done_once = false ;	483:8:14768:14790	1634795	1	True				
ANR	1634800	IdentifierDecl	done_once = false		1634795	0					
ANR	1634801	IdentifierDeclType	bool		1634795	0					
ANR	1634802	Identifier	done_once		1634795	1					
ANR	1634803	AssignmentExpression	done_once = false		1634795	2		=			
ANR	1634804	Identifier	false		1634795	0					
ANR	1634805	Identifier	false		1634795	1					
ANR	1634806	IfStatement	if ( done_once && file_name )		1634795	2					
ANR	1634807	Condition	done_once && file_name	484:4:14796:14817	1634795	0	True				
ANR	1634808	AndExpression	done_once && file_name		1634795	0		&&			
ANR	1634809	Identifier	done_once		1634795	0					
ANR	1634810	Identifier	file_name		1634795	1					
ANR	1634811	Statement	delete	485:2:14823:14828	1634795	1	True				
ANR	1634812	Statement	[	485:8:14829:14829	1634795	3	True				
ANR	1634813	Statement	]	485:9:14830:14830	1634795	4	True				
ANR	1634814	ExpressionStatement	file_name	485:11:14832:14841	1634795	5	True				
ANR	1634815	Identifier	file_name		1634795	0					
ANR	1634816	ExpressionStatement	file_name = new char [ strlen ( ckpt_name ) + 1 ]	488:1:14879:14925	1634795	6	True				
ANR	1634817	AssignmentExpression	file_name = new char [ strlen ( ckpt_name ) + 1 ]		1634795	0		=			
ANR	1634818	Identifier	file_name		1634795	0					
ANR	1634819	AdditiveExpression	strlen ( ckpt_name ) + 1		1634795	1		+			
ANR	1634820	CallExpression	strlen ( ckpt_name )		1634795	0					
ANR	1634821	Callee	strlen		1634795	0					
ANR	1634822	Identifier	strlen		1634795	0					
ANR	1634823	ArgumentList	ckpt_name		1634795	1					
ANR	1634824	Argument	ckpt_name		1634795	0					
ANR	1634825	Identifier	ckpt_name		1634795	0					
ANR	1634826	PrimaryExpression	1		1634795	1					
ANR	1634827	IfStatement	if ( file_name == NULL )		1634795	7					
ANR	1634828	Condition	file_name == NULL	489:4:14931:14947	1634795	0	True				
ANR	1634829	EqualityExpression	file_name == NULL		1634795	0		==			
ANR	1634830	Identifier	file_name		1634795	0					
ANR	1634831	Identifier	NULL		1634795	1					
ANR	1634832	CompoundStatement		8:23:191:191	1634795	1					
ANR	1634833	ExpressionStatement	"dprintf ( D_ALWAYS , ""Internal error: Could not allocate memory for ckpt_filename\\n"" )"	490:2:14954:15040	1634795	0	True				
ANR	1634834	CallExpression	"dprintf ( D_ALWAYS , ""Internal error: Could not allocate memory for ckpt_filename\\n"" )"		1634795	0					
ANR	1634835	Callee	dprintf		1634795	0					
ANR	1634836	Identifier	dprintf		1634795	0					
ANR	1634837	ArgumentList	D_ALWAYS		1634795	1					
ANR	1634838	Argument	D_ALWAYS		1634795	0					
ANR	1634839	Identifier	D_ALWAYS		1634795	0					
ANR	1634840	Argument	"""Internal error: Could not allocate memory for ckpt_filename\\n"""		1634795	1					
ANR	1634841	PrimaryExpression	"""Internal error: Could not allocate memory for ckpt_filename\\n"""		1634795	0					
ANR	1634842	ExpressionStatement	Suicide ( )	492:2:15044:15053	1634795	1	True				
ANR	1634843	CallExpression	Suicide ( )		1634795	0					
ANR	1634844	Callee	Suicide		1634795	0					
ANR	1634845	Identifier	Suicide		1634795	0					
ANR	1634846	ArgumentList			1634795	1					
ANR	1634847	ExpressionStatement	"strcpy ( file_name , ckpt_name )"	494:1:15059:15089	1634795	8	True				
ANR	1634848	CallExpression	"strcpy ( file_name , ckpt_name )"		1634795	0					
ANR	1634849	Callee	strcpy		1634795	0					
ANR	1634850	Identifier	strcpy		1634795	0					
ANR	1634851	ArgumentList	file_name		1634795	1					
ANR	1634852	Argument	file_name		1634795	0					
ANR	1634853	Identifier	file_name		1634795	0					
ANR	1634854	Argument	ckpt_name		1634795	1					
ANR	1634855	Identifier	ckpt_name		1634795	0					
ANR	1634856	ExpressionStatement	fd = - 1	496:1:15093:15100	1634795	9	True				
ANR	1634857	AssignmentExpression	fd = - 1		1634795	0		=			
ANR	1634858	Identifier	fd		1634795	0					
ANR	1634859	UnaryOperationExpression	- 1		1634795	1					
ANR	1634860	UnaryOperator	-		1634795	0					
ANR	1634861	PrimaryExpression	1		1634795	1					
ANR	1634862	ExpressionStatement	pos = 0	497:1:15103:15110	1634795	10	True				
ANR	1634863	AssignmentExpression	pos = 0		1634795	0		=			
ANR	1634864	Identifier	pos		1634795	0					
ANR	1634865	PrimaryExpression	0		1634795	1					
ANR	1634866	ExpressionStatement	done_once = true	498:1:15113:15129	1634795	11	True				
ANR	1634867	AssignmentExpression	done_once = true		1634795	0		=			
ANR	1634868	Identifier	done_once		1634795	0					
ANR	1634869	Identifier	true		1634795	1					
ANR	1634870	ReturnType	void		1634795	1					
ANR	1634871	Identifier	Image :: SetFileName		1634795	2					
ANR	1634872	ParameterList	const char * ckpt_name		1634795	3					
ANR	1634873	Parameter	const char * ckpt_name	481:20:14734:14754	1634795	0	True				
ANR	1634874	ParameterType	const char *		1634795	0					
ANR	1634875	Identifier	ckpt_name		1634795	1					
ANR	1634876	CFGEntryNode	ENTRY		1634795		True				
ANR	1634877	CFGExitNode	EXIT		1634795		True				
ANR	1634878	Symbol	ckpt_name		1634795						
ANR	1634879	Symbol	strlen		1634795						
ANR	1634880	Symbol	NULL		1634795						
ANR	1634881	Symbol	pos		1634795						
ANR	1634882	Symbol	file_name		1634795						
ANR	1634883	Symbol	false		1634795						
ANR	1634884	Symbol	D_ALWAYS		1634795						
ANR	1634885	Symbol	true		1634795						
ANR	1634886	Symbol	done_once		1634795						
ANR	1634887	Symbol	fd		1634795						
ANR	1634888	Function	Image :: SetMode	501:0:15134:15261							
ANR	1634889	FunctionDef	Image :: SetMode (int syscall_mode)		1634888	0					
ANR	1634890	CompoundStatement		503:0:15174:15261	1634888	0					
ANR	1634891	IfStatement	if ( syscall_mode & SYS_LOCAL )		1634888	0					
ANR	1634892	Condition	syscall_mode & SYS_LOCAL	504:5:15181:15204	1634888	0	True				
ANR	1634893	BitAndExpression	syscall_mode & SYS_LOCAL		1634888	0		&			
ANR	1634894	Identifier	syscall_mode		1634888	0					
ANR	1634895	Identifier	SYS_LOCAL		1634888	1					
ANR	1634896	CompoundStatement		2:32:33:33	1634888	1					
ANR	1634897	ExpressionStatement	mode = STANDALONE	505:2:15212:15229	1634888	0	True				
ANR	1634898	AssignmentExpression	mode = STANDALONE		1634888	0		=			
ANR	1634899	Identifier	mode		1634888	0					
ANR	1634900	Identifier	STANDALONE		1634888	1					
ANR	1634901	ElseStatement	else		1634888	0					
ANR	1634902	CompoundStatement		4:8:64:64	1634888	0					
ANR	1634903	ExpressionStatement	mode = REMOTE	507:2:15243:15256	1634888	0	True				
ANR	1634904	AssignmentExpression	mode = REMOTE		1634888	0		=			
ANR	1634905	Identifier	mode		1634888	0					
ANR	1634906	Identifier	REMOTE		1634888	1					
ANR	1634907	ReturnType	void		1634888	1					
ANR	1634908	Identifier	Image :: SetMode		1634888	2					
ANR	1634909	ParameterList	int syscall_mode		1634888	3					
ANR	1634910	Parameter	int syscall_mode	502:16:15155:15170	1634888	0	True				
ANR	1634911	ParameterType	int		1634888	0					
ANR	1634912	Identifier	syscall_mode		1634888	1					
ANR	1634913	CFGEntryNode	ENTRY		1634888		True				
ANR	1634914	CFGExitNode	EXIT		1634888		True				
ANR	1634915	Symbol	mode		1634888						
ANR	1634916	Symbol	syscall_mode		1634888						
ANR	1634917	Symbol	STANDALONE		1634888						
ANR	1634918	Symbol	SYS_LOCAL		1634888						
ANR	1634919	Symbol	REMOTE		1634888						
ANR	1634920	Function	Image :: FindAltHeap	521:0:15750:16851							
ANR	1634921	FunctionDef	Image :: FindAltHeap ()		1634920	0					
ANR	1634922	CompoundStatement		523:0:15778:16851	1634920	0					
ANR	1634923	IfStatement	if ( head . AltHeap ( ) > 0 )		1634920	0					
ANR	1634924	Condition	head . AltHeap ( ) > 0	524:5:15785:15802	1634920	0	True				
ANR	1634925	RelationalExpression	head . AltHeap ( ) > 0		1634920	0		>			
ANR	1634926	CallExpression	head . AltHeap ( )		1634920	0					
ANR	1634927	Callee	head . AltHeap		1634920	0					
ANR	1634928	MemberAccess	head . AltHeap		1634920	0					
ANR	1634929	Identifier	head		1634920	0					
ANR	1634930	Identifier	AltHeap		1634920	1					
ANR	1634931	ArgumentList			1634920	1					
ANR	1634932	PrimaryExpression	0		1634920	1					
ANR	1634933	ReturnStatement	return ( void * ) head . AltHeap ( ) ;	524:25:15805:15834	1634920	1	True				
ANR	1634934	CastExpression	( void * ) head . AltHeap ( )		1634920	0					
ANR	1634935	CastTarget	void *		1634920	0					
ANR	1634936	CallExpression	head . AltHeap ( )		1634920	1					
ANR	1634937	Callee	head . AltHeap		1634920	0					
ANR	1634938	MemberAccess	head . AltHeap		1634920	0					
ANR	1634939	Identifier	head		1634920	0					
ANR	1634940	Identifier	AltHeap		1634920	1					
ANR	1634941	ArgumentList			1634920	1					
ANR	1634942	IdentifierDeclStatement	"void * datatop = 0 , * freetop = ( void * ) - 1 ;"	526:1:15838:15878	1634920	1	True				
ANR	1634943	IdentifierDecl	* datatop = 0		1634920	0					
ANR	1634944	IdentifierDeclType	void *		1634920	0					
ANR	1634945	Identifier	datatop		1634920	1					
ANR	1634946	AssignmentExpression	* datatop = 0		1634920	2		=			
ANR	1634947	Identifier	datatop		1634920	0					
ANR	1634948	PrimaryExpression	0		1634920	1					
ANR	1634949	IdentifierDecl	* freetop = ( void * ) - 1		1634920	1					
ANR	1634950	IdentifierDeclType	void *		1634920	0					
ANR	1634951	Identifier	freetop		1634920	1					
ANR	1634952	AssignmentExpression	* freetop = ( void * ) - 1		1634920	2		=			
ANR	1634953	Identifier	freetop		1634920	0					
ANR	1634954	CastExpression	( void * ) - 1		1634920	1					
ANR	1634955	CastTarget	void *		1634920	0					
ANR	1634956	UnaryOperationExpression	- 1		1634920	1					
ANR	1634957	UnaryOperator	-		1634920	0					
ANR	1634958	PrimaryExpression	1		1634920	1					
ANR	1634959	ForStatement	for ( int i = 0 ; i < head . N_Segs ( ) ; i ++ )		1634920	2					
ANR	1634960	ForInit	int i = 0 ;	528:6:15887:15894	1634920	0	True				
ANR	1634961	IdentifierDeclStatement	int i = 0 ;		1634920	0					
ANR	1634962	IdentifierDecl	i = 0		1634920	0					
ANR	1634963	IdentifierDeclType	int		1634920	0					
ANR	1634964	Identifier	i		1634920	1					
ANR	1634965	AssignmentExpression	i = 0		1634920	2		=			
ANR	1634966	Identifier	i		1634920	0					
ANR	1634967	PrimaryExpression	0		1634920	1					
ANR	1634968	Condition	i < head . N_Segs ( )	528:15:15896:15912	1634920	1	True				
ANR	1634969	RelationalExpression	i < head . N_Segs ( )		1634920	0		<			
ANR	1634970	Identifier	i		1634920	0					
ANR	1634971	CallExpression	head . N_Segs ( )		1634920	1					
ANR	1634972	Callee	head . N_Segs		1634920	0					
ANR	1634973	MemberAccess	head . N_Segs		1634920	0					
ANR	1634974	Identifier	head		1634920	0					
ANR	1634975	Identifier	N_Segs		1634920	1					
ANR	1634976	ArgumentList			1634920	1					
ANR	1634977	PostIncDecOperationExpression	i ++	528:34:15915:15917	1634920	2	True				
ANR	1634978	Identifier	i		1634920	0					
ANR	1634979	IncDec	++		1634920	1					
ANR	1634980	CompoundStatement		6:39:141:141	1634920	3					
ANR	1634981	IfStatement	"if ( strcmp ( map [ i ] . GetName ( ) , ""DATA"" ) == MATCH )"		1634920	0					
ANR	1634982	Condition	"strcmp ( map [ i ] . GetName ( ) , ""DATA"" ) == MATCH"	529:6:15928:15968	1634920	0	True				
ANR	1634983	EqualityExpression	"strcmp ( map [ i ] . GetName ( ) , ""DATA"" ) == MATCH"		1634920	0		==			
ANR	1634984	CallExpression	"strcmp ( map [ i ] . GetName ( ) , ""DATA"" )"		1634920	0					
ANR	1634985	Callee	strcmp		1634920	0					
ANR	1634986	Identifier	strcmp		1634920	0					
ANR	1634987	ArgumentList	map [ i ] . GetName ( )		1634920	1					
ANR	1634988	Argument	map [ i ] . GetName ( )		1634920	0					
ANR	1634989	CallExpression	map [ i ] . GetName ( )		1634920	0					
ANR	1634990	Callee	map [ i ] . GetName		1634920	0					
ANR	1634991	MemberAccess	map [ i ] . GetName		1634920	0					
ANR	1634992	ArrayIndexing	map [ i ]		1634920	0					
ANR	1634993	Identifier	map		1634920	0					
ANR	1634994	Identifier	i		1634920	1					
ANR	1634995	Identifier	GetName		1634920	1					
ANR	1634996	ArgumentList			1634920	1					
ANR	1634997	Argument	"""DATA"""		1634920	1					
ANR	1634998	PrimaryExpression	"""DATA"""		1634920	0					
ANR	1634999	Identifier	MATCH		1634920	1					
ANR	1635000	CompoundStatement		8:3:197:262	1634920	1					
ANR	1635001	IdentifierDeclStatement	void * ptr = ( void * ) ( ( int ) map [ i ] . GetLoc ( ) + ( int ) map [ i ] . GetLen ( ) ) ;	530:3:15976:16041	1634920	0	True				
ANR	1635002	IdentifierDecl	* ptr = ( void * ) ( ( int ) map [ i ] . GetLoc ( ) + ( int ) map [ i ] . GetLen ( ) )		1634920	0					
ANR	1635003	IdentifierDeclType	void *		1634920	0					
ANR	1635004	Identifier	ptr		1634920	1					
ANR	1635005	AssignmentExpression	* ptr = ( void * ) ( ( int ) map [ i ] . GetLoc ( ) + ( int ) map [ i ] . GetLen ( ) )		1634920	2		=			
ANR	1635006	Identifier	ptr		1634920	0					
ANR	1635007	CastExpression	( void * ) ( ( int ) map [ i ] . GetLoc ( ) + ( int ) map [ i ] . GetLen ( ) )		1634920	1					
ANR	1635008	CastTarget	void *		1634920	0					
ANR	1635009	AdditiveExpression	( int ) map [ i ] . GetLoc ( ) + ( int ) map [ i ] . GetLen ( )		1634920	1		+			
ANR	1635010	CastExpression	( int ) map [ i ] . GetLoc ( )		1634920	0					
ANR	1635011	CastTarget	int		1634920	0					
ANR	1635012	CallExpression	map [ i ] . GetLoc ( )		1634920	1					
ANR	1635013	Callee	map [ i ] . GetLoc		1634920	0					
ANR	1635014	MemberAccess	map [ i ] . GetLoc		1634920	0					
ANR	1635015	ArrayIndexing	map [ i ]		1634920	0					
ANR	1635016	Identifier	map		1634920	0					
ANR	1635017	Identifier	i		1634920	1					
ANR	1635018	Identifier	GetLoc		1634920	1					
ANR	1635019	ArgumentList			1634920	1					
ANR	1635020	CastExpression	( int ) map [ i ] . GetLen ( )		1634920	1					
ANR	1635021	CastTarget	int		1634920	0					
ANR	1635022	CallExpression	map [ i ] . GetLen ( )		1634920	1					
ANR	1635023	Callee	map [ i ] . GetLen		1634920	0					
ANR	1635024	MemberAccess	map [ i ] . GetLen		1634920	0					
ANR	1635025	ArrayIndexing	map [ i ]		1634920	0					
ANR	1635026	Identifier	map		1634920	0					
ANR	1635027	Identifier	i		1634920	1					
ANR	1635028	Identifier	GetLen		1634920	1					
ANR	1635029	ArgumentList			1634920	1					
ANR	1635030	IfStatement	if ( ptr > datatop )		1634920	1					
ANR	1635031	Condition	ptr > datatop	531:7:16050:16062	1634920	0	True				
ANR	1635032	RelationalExpression	ptr > datatop		1634920	0		>			
ANR	1635033	Identifier	ptr		1634920	0					
ANR	1635034	Identifier	datatop		1634920	1					
ANR	1635035	CompoundStatement		9:22:286:286	1634920	1					
ANR	1635036	ExpressionStatement	datatop = ptr	532:4:16071:16084	1634920	0	True				
ANR	1635037	AssignmentExpression	datatop = ptr		1634920	0		=			
ANR	1635038	Identifier	datatop		1634920	0					
ANR	1635039	Identifier	ptr		1634920	1					
ANR	1635040	ForStatement	for ( int i = 0 ; i < head . N_Segs ( ) ; i ++ )		1634920	3					
ANR	1635041	ForInit	int i = 0 ;	537:6:16105:16112	1634920	0	True				
ANR	1635042	IdentifierDeclStatement	int i = 0 ;		1634920	0					
ANR	1635043	IdentifierDecl	i = 0		1634920	0					
ANR	1635044	IdentifierDeclType	int		1634920	0					
ANR	1635045	Identifier	i		1634920	1					
ANR	1635046	AssignmentExpression	i = 0		1634920	2		=			
ANR	1635047	Identifier	i		1634920	0					
ANR	1635048	PrimaryExpression	0		1634920	1					
ANR	1635049	Condition	i < head . N_Segs ( )	537:15:16114:16130	1634920	1	True				
ANR	1635050	RelationalExpression	i < head . N_Segs ( )		1634920	0		<			
ANR	1635051	Identifier	i		1634920	0					
ANR	1635052	CallExpression	head . N_Segs ( )		1634920	1					
ANR	1635053	Callee	head . N_Segs		1634920	0					
ANR	1635054	MemberAccess	head . N_Segs		1634920	0					
ANR	1635055	Identifier	head		1634920	0					
ANR	1635056	Identifier	N_Segs		1634920	1					
ANR	1635057	ArgumentList			1634920	1					
ANR	1635058	PostIncDecOperationExpression	i ++	537:34:16133:16135	1634920	2	True				
ANR	1635059	Identifier	i		1634920	0					
ANR	1635060	IncDec	++		1634920	1					
ANR	1635061	CompoundStatement		15:39:359:359	1634920	3					
ANR	1635062	IfStatement	"if ( strcmp ( map [ i ] . GetName ( ) , ""DATA"" ) != MATCH )"		1634920	0					
ANR	1635063	Condition	"strcmp ( map [ i ] . GetName ( ) , ""DATA"" ) != MATCH"	538:6:16146:16186	1634920	0	True				
ANR	1635064	EqualityExpression	"strcmp ( map [ i ] . GetName ( ) , ""DATA"" ) != MATCH"		1634920	0		!=			
ANR	1635065	CallExpression	"strcmp ( map [ i ] . GetName ( ) , ""DATA"" )"		1634920	0					
ANR	1635066	Callee	strcmp		1634920	0					
ANR	1635067	Identifier	strcmp		1634920	0					
ANR	1635068	ArgumentList	map [ i ] . GetName ( )		1634920	1					
ANR	1635069	Argument	map [ i ] . GetName ( )		1634920	0					
ANR	1635070	CallExpression	map [ i ] . GetName ( )		1634920	0					
ANR	1635071	Callee	map [ i ] . GetName		1634920	0					
ANR	1635072	MemberAccess	map [ i ] . GetName		1634920	0					
ANR	1635073	ArrayIndexing	map [ i ]		1634920	0					
ANR	1635074	Identifier	map		1634920	0					
ANR	1635075	Identifier	i		1634920	1					
ANR	1635076	Identifier	GetName		1634920	1					
ANR	1635077	ArgumentList			1634920	1					
ANR	1635078	Argument	"""DATA"""		1634920	1					
ANR	1635079	PrimaryExpression	"""DATA"""		1634920	0					
ANR	1635080	Identifier	MATCH		1634920	1					
ANR	1635081	CompoundStatement		17:3:415:451	1634920	1					
ANR	1635082	IdentifierDeclStatement	void * ptr = ( void * ) map [ i ] . GetLoc ( ) ;	539:3:16194:16230	1634920	0	True				
ANR	1635083	IdentifierDecl	* ptr = ( void * ) map [ i ] . GetLoc ( )		1634920	0					
ANR	1635084	IdentifierDeclType	void *		1634920	0					
ANR	1635085	Identifier	ptr		1634920	1					
ANR	1635086	AssignmentExpression	* ptr = ( void * ) map [ i ] . GetLoc ( )		1634920	2		=			
ANR	1635087	Identifier	ptr		1634920	0					
ANR	1635088	CastExpression	( void * ) map [ i ] . GetLoc ( )		1634920	1					
ANR	1635089	CastTarget	void *		1634920	0					
ANR	1635090	CallExpression	map [ i ] . GetLoc ( )		1634920	1					
ANR	1635091	Callee	map [ i ] . GetLoc		1634920	0					
ANR	1635092	MemberAccess	map [ i ] . GetLoc		1634920	0					
ANR	1635093	ArrayIndexing	map [ i ]		1634920	0					
ANR	1635094	Identifier	map		1634920	0					
ANR	1635095	Identifier	i		1634920	1					
ANR	1635096	Identifier	GetLoc		1634920	1					
ANR	1635097	ArgumentList			1634920	1					
ANR	1635098	IfStatement	if ( ptr > datatop && ptr < freetop )		1634920	1					
ANR	1635099	Condition	ptr > datatop && ptr < freetop	540:7:16239:16268	1634920	0	True				
ANR	1635100	AndExpression	ptr > datatop && ptr < freetop		1634920	0		&&			
ANR	1635101	RelationalExpression	ptr > datatop		1634920	0		>			
ANR	1635102	Identifier	ptr		1634920	0					
ANR	1635103	Identifier	datatop		1634920	1					
ANR	1635104	RelationalExpression	ptr < freetop		1634920	1		<			
ANR	1635105	Identifier	ptr		1634920	0					
ANR	1635106	Identifier	freetop		1634920	1					
ANR	1635107	CompoundStatement		18:39:492:492	1634920	1					
ANR	1635108	ExpressionStatement	freetop = ptr	541:4:16277:16290	1634920	0	True				
ANR	1635109	AssignmentExpression	freetop = ptr		1634920	0		=			
ANR	1635110	Identifier	freetop		1634920	0					
ANR	1635111	Identifier	ptr		1634920	1					
ANR	1635112	IfStatement	if ( freetop == ( void * ) - 1 )		1634920	4					
ANR	1635113	Condition	freetop == ( void * ) - 1	550:5:16545:16565	1634920	0	True				
ANR	1635114	EqualityExpression	freetop == ( void * ) - 1		1634920	0		==			
ANR	1635115	Identifier	freetop		1634920	0					
ANR	1635116	CastExpression	( void * ) - 1		1634920	1					
ANR	1635117	CastTarget	void *		1634920	0					
ANR	1635118	UnaryOperationExpression	- 1		1634920	1					
ANR	1635119	UnaryOperator	-		1634920	0					
ANR	1635120	PrimaryExpression	1		1634920	1					
ANR	1635121	CompoundStatement		28:28:789:789	1634920	1					
ANR	1635122	ExpressionStatement	freetop = ( void * ) ( ( int ) datatop + ( int ) RESERVED_HEAP )	551:2:16572:16625	1634920	0	True				
ANR	1635123	AssignmentExpression	freetop = ( void * ) ( ( int ) datatop + ( int ) RESERVED_HEAP )		1634920	0		=			
ANR	1635124	Identifier	freetop		1634920	0					
ANR	1635125	CastExpression	( void * ) ( ( int ) datatop + ( int ) RESERVED_HEAP )		1634920	1					
ANR	1635126	CastTarget	void *		1634920	0					
ANR	1635127	AdditiveExpression	( int ) datatop + ( int ) RESERVED_HEAP		1634920	1		+			
ANR	1635128	CastExpression	( int ) datatop		1634920	0					
ANR	1635129	CastTarget	int		1634920	0					
ANR	1635130	Identifier	datatop		1634920	1					
ANR	1635131	CastExpression	( int ) RESERVED_HEAP		1634920	1					
ANR	1635132	CastTarget	int		1634920	0					
ANR	1635133	Identifier	RESERVED_HEAP		1634920	1					
ANR	1635134	IdentifierDeclStatement	int pagesize = getpagesize ( ) ;	555:1:16679:16707	1634920	5	True				
ANR	1635135	IdentifierDecl	pagesize = getpagesize ( )		1634920	0					
ANR	1635136	IdentifierDeclType	int		1634920	0					
ANR	1635137	Identifier	pagesize		1634920	1					
ANR	1635138	AssignmentExpression	pagesize = getpagesize ( )		1634920	2		=			
ANR	1635139	Identifier	pagesize		1634920	0					
ANR	1635140	CallExpression	getpagesize ( )		1634920	1					
ANR	1635141	Callee	getpagesize		1634920	0					
ANR	1635142	Identifier	getpagesize		1634920	0					
ANR	1635143	ArgumentList			1634920	1					
ANR	1635144	ExpressionStatement	freetop = ( void * ) ( ( ( RAW_ADDR ) freetop / pagesize ) * pagesize )	556:1:16710:16767	1634920	6	True				
ANR	1635145	AssignmentExpression	freetop = ( void * ) ( ( ( RAW_ADDR ) freetop / pagesize ) * pagesize )		1634920	0		=			
ANR	1635146	Identifier	freetop		1634920	0					
ANR	1635147	CastExpression	( void * ) ( ( ( RAW_ADDR ) freetop / pagesize ) * pagesize )		1634920	1					
ANR	1635148	CastTarget	void *		1634920	0					
ANR	1635149	MultiplicativeExpression	( ( RAW_ADDR ) freetop / pagesize ) * pagesize		1634920	1		*			
ANR	1635150	MultiplicativeExpression	( RAW_ADDR ) freetop / pagesize		1634920	0		/			
ANR	1635151	CastExpression	( RAW_ADDR ) freetop		1634920	0					
ANR	1635152	CastTarget	RAW_ADDR		1634920	0					
ANR	1635153	Identifier	freetop		1634920	1					
ANR	1635154	Identifier	pagesize		1634920	1					
ANR	1635155	Identifier	pagesize		1634920	1					
ANR	1635156	ExpressionStatement	head . AltHeap ( ( RAW_ADDR ) freetop - ALT_HEAP_SIZE )	557:1:16770:16817	1634920	7	True				
ANR	1635157	CallExpression	head . AltHeap ( ( RAW_ADDR ) freetop - ALT_HEAP_SIZE )		1634920	0					
ANR	1635158	Callee	head . AltHeap		1634920	0					
ANR	1635159	MemberAccess	head . AltHeap		1634920	0					
ANR	1635160	Identifier	head		1634920	0					
ANR	1635161	Identifier	AltHeap		1634920	1					
ANR	1635162	ArgumentList	( RAW_ADDR ) freetop - ALT_HEAP_SIZE		1634920	1					
ANR	1635163	Argument	( RAW_ADDR ) freetop - ALT_HEAP_SIZE		1634920	0					
ANR	1635164	AdditiveExpression	( RAW_ADDR ) freetop - ALT_HEAP_SIZE		1634920	0		-			
ANR	1635165	CastExpression	( RAW_ADDR ) freetop		1634920	0					
ANR	1635166	CastTarget	RAW_ADDR		1634920	0					
ANR	1635167	Identifier	freetop		1634920	1					
ANR	1635168	Identifier	ALT_HEAP_SIZE		1634920	1					
ANR	1635169	ReturnStatement	return ( void * ) head . AltHeap ( ) ;	558:1:16820:16849	1634920	8	True				
ANR	1635170	CastExpression	( void * ) head . AltHeap ( )		1634920	0					
ANR	1635171	CastTarget	void *		1634920	0					
ANR	1635172	CallExpression	head . AltHeap ( )		1634920	1					
ANR	1635173	Callee	head . AltHeap		1634920	0					
ANR	1635174	MemberAccess	head . AltHeap		1634920	0					
ANR	1635175	Identifier	head		1634920	0					
ANR	1635176	Identifier	AltHeap		1634920	1					
ANR	1635177	ArgumentList			1634920	1					
ANR	1635178	ReturnType	void *		1634920	1					
ANR	1635179	Identifier	Image :: FindAltHeap		1634920	2					
ANR	1635180	ParameterList			1634920	3					
ANR	1635181	CFGEntryNode	ENTRY		1634920		True				
ANR	1635182	CFGExitNode	EXIT		1634920		True				
ANR	1635183	Symbol	strcmp		1634920						
ANR	1635184	Symbol	* map		1634920						
ANR	1635185	Symbol	i		1634920						
ANR	1635186	Symbol	ALT_HEAP_SIZE		1634920						
ANR	1635187	Symbol	freetop		1634920						
ANR	1635188	Symbol	RESERVED_HEAP		1634920						
ANR	1635189	Symbol	datatop		1634920						
ANR	1635190	Symbol	getpagesize		1634920						
ANR	1635191	Symbol	ptr		1634920						
ANR	1635192	Symbol	head		1634920						
ANR	1635193	Symbol	head . N_Segs		1634920						
ANR	1635194	Symbol	* i		1634920						
ANR	1635195	Symbol	map [ i ] . GetName		1634920						
ANR	1635196	Symbol	map [ i ] . GetLoc		1634920						
ANR	1635197	Symbol	head . AltHeap		1634920						
ANR	1635198	Symbol	pagesize		1634920						
ANR	1635199	Symbol	map		1634920						
ANR	1635200	Symbol	MATCH		1634920						
ANR	1635201	Symbol	map [ i ] . GetLen		1634920						
ANR	1635202	Function	_condor_prestart	569:0:17038:18202							
ANR	1635203	FunctionDef	_condor_prestart (int syscall_mode)		1635202	0					
ANR	1635204	CompoundStatement		571:0:17080:18202	1635202	0					
ANR	1635205	ExpressionStatement	MyImage . SetMode ( syscall_mode )	572:1:17083:17114	1635202	0	True				
ANR	1635206	CallExpression	MyImage . SetMode ( syscall_mode )		1635202	0					
ANR	1635207	Callee	MyImage . SetMode		1635202	0					
ANR	1635208	MemberAccess	MyImage . SetMode		1635202	0					
ANR	1635209	Identifier	MyImage		1635202	0					
ANR	1635210	Identifier	SetMode		1635202	1					
ANR	1635211	ArgumentList	syscall_mode		1635202	1					
ANR	1635212	Argument	syscall_mode		1635202	0					
ANR	1635213	Identifier	syscall_mode		1635202	0					
ANR	1635214	ExpressionStatement	_condor_file_table_init ( )	574:1:17118:17143	1635202	1	True				
ANR	1635215	CallExpression	_condor_file_table_init ( )		1635202	0					
ANR	1635216	Callee	_condor_file_table_init		1635202	0					
ANR	1635217	Identifier	_condor_file_table_init		1635202	0					
ANR	1635218	ArgumentList			1635202	1					
ANR	1635219	ExpressionStatement	"_install_signal_handler ( SIGTSTP , ( SIG_HANDLER ) Checkpoint )"	577:1:17184:17243	1635202	2	True				
ANR	1635220	CallExpression	"_install_signal_handler ( SIGTSTP , ( SIG_HANDLER ) Checkpoint )"		1635202	0					
ANR	1635221	Callee	_install_signal_handler		1635202	0					
ANR	1635222	Identifier	_install_signal_handler		1635202	0					
ANR	1635223	ArgumentList	SIGTSTP		1635202	1					
ANR	1635224	Argument	SIGTSTP		1635202	0					
ANR	1635225	Identifier	SIGTSTP		1635202	0					
ANR	1635226	Argument	( SIG_HANDLER ) Checkpoint		1635202	1					
ANR	1635227	CastExpression	( SIG_HANDLER ) Checkpoint		1635202	0					
ANR	1635228	CastTarget	SIG_HANDLER		1635202	0					
ANR	1635229	Identifier	Checkpoint		1635202	1					
ANR	1635230	ExpressionStatement	"_install_signal_handler ( SIGUSR2 , ( SIG_HANDLER ) Checkpoint )"	578:1:17246:17305	1635202	3	True				
ANR	1635231	CallExpression	"_install_signal_handler ( SIGUSR2 , ( SIG_HANDLER ) Checkpoint )"		1635202	0					
ANR	1635232	Callee	_install_signal_handler		1635202	0					
ANR	1635233	Identifier	_install_signal_handler		1635202	0					
ANR	1635234	ArgumentList	SIGUSR2		1635202	1					
ANR	1635235	Argument	SIGUSR2		1635202	0					
ANR	1635236	Identifier	SIGUSR2		1635202	0					
ANR	1635237	Argument	( SIG_HANDLER ) Checkpoint		1635202	1					
ANR	1635238	CastExpression	( SIG_HANDLER ) Checkpoint		1635202	0					
ANR	1635239	CastTarget	SIG_HANDLER		1635202	0					
ANR	1635240	Identifier	Checkpoint		1635202	1					
ANR	1635241	ExpressionStatement	calc_stack_to_save ( )	580:1:17309:17329	1635202	4	True				
ANR	1635242	CallExpression	calc_stack_to_save ( )		1635202	0					
ANR	1635243	Callee	calc_stack_to_save		1635202	0					
ANR	1635244	Identifier	calc_stack_to_save		1635202	0					
ANR	1635245	ArgumentList			1635202	1					
ANR	1635246	ExpressionStatement	setnetconfig ( )	593:1:18031:18045	1635202	5	True				
ANR	1635247	CallExpression	setnetconfig ( )		1635202	0					
ANR	1635248	Callee	setnetconfig		1635202	0					
ANR	1635249	Identifier	setnetconfig		1635202	0					
ANR	1635250	ArgumentList			1635202	1					
ANR	1635251	IdentifierDeclStatement	"float x = 23 , y = 14 , z = 256 ;"	594:1:18048:18071	1635202	6	True				
ANR	1635252	IdentifierDecl	x = 23		1635202	0					
ANR	1635253	IdentifierDeclType	float		1635202	0					
ANR	1635254	Identifier	x		1635202	1					
ANR	1635255	AssignmentExpression	x = 23		1635202	2		=			
ANR	1635256	Identifier	x		1635202	0					
ANR	1635257	PrimaryExpression	23		1635202	1					
ANR	1635258	IdentifierDecl	y = 14		1635202	1					
ANR	1635259	IdentifierDeclType	float		1635202	0					
ANR	1635260	Identifier	y		1635202	1					
ANR	1635261	AssignmentExpression	y = 14		1635202	2		=			
ANR	1635262	Identifier	y		1635202	0					
ANR	1635263	PrimaryExpression	14		1635202	1					
ANR	1635264	IdentifierDecl	z = 256		1635202	2					
ANR	1635265	IdentifierDeclType	float		1635202	0					
ANR	1635266	Identifier	z		1635202	1					
ANR	1635267	AssignmentExpression	z = 256		1635202	2		=			
ANR	1635268	Identifier	z		1635202	0					
ANR	1635269	PrimaryExpression	256		1635202	1					
ANR	1635270	IfStatement	if ( ( x + y ) > z )		1635202	7					
ANR	1635271	Condition	( x + y ) > z	595:5:18078:18084	1635202	0	True				
ANR	1635272	RelationalExpression	( x + y ) > z		1635202	0		>			
ANR	1635273	AdditiveExpression	x + y		1635202	0		+			
ANR	1635274	Identifier	x		1635202	0					
ANR	1635275	Identifier	y		1635202	1					
ANR	1635276	Identifier	z		1635202	1					
ANR	1635277	CompoundStatement		25:14:1006:1006	1635202	1					
ANR	1635278	ExpressionStatement	"dprintf ( D_ALWAYS , ""Internal error: Solaris floating point test failed\\n"" )"	596:2:18091:18168	1635202	0	True				
ANR	1635279	CallExpression	"dprintf ( D_ALWAYS , ""Internal error: Solaris floating point test failed\\n"" )"		1635202	0					
ANR	1635280	Callee	dprintf		1635202	0					
ANR	1635281	Identifier	dprintf		1635202	0					
ANR	1635282	ArgumentList	D_ALWAYS		1635202	1					
ANR	1635283	Argument	D_ALWAYS		1635202	0					
ANR	1635284	Identifier	D_ALWAYS		1635202	0					
ANR	1635285	Argument	"""Internal error: Solaris floating point test failed\\n"""		1635202	1					
ANR	1635286	PrimaryExpression	"""Internal error: Solaris floating point test failed\\n"""		1635202	0					
ANR	1635287	ExpressionStatement	Suicide ( )	598:2:18172:18181	1635202	1	True				
ANR	1635288	CallExpression	Suicide ( )		1635202	0					
ANR	1635289	Callee	Suicide		1635202	0					
ANR	1635290	Identifier	Suicide		1635202	0					
ANR	1635291	ArgumentList			1635202	1					
ANR	1635292	ExpressionStatement	z = x * y	600:1:18187:18192	1635202	8	True				
ANR	1635293	AssignmentExpression	z = x * y		1635202	0		=			
ANR	1635294	Identifier	z		1635202	0					
ANR	1635295	MultiplicativeExpression	x * y		1635202	1		*			
ANR	1635296	Identifier	x		1635202	0					
ANR	1635297	Identifier	y		1635202	1					
ANR	1635298	ReturnType	void		1635202	1					
ANR	1635299	Identifier	_condor_prestart		1635202	2					
ANR	1635300	ParameterList	int syscall_mode		1635202	3					
ANR	1635301	Parameter	int syscall_mode	570:18:17061:17076	1635202	0	True				
ANR	1635302	ParameterType	int		1635202	0					
ANR	1635303	Identifier	syscall_mode		1635202	1					
ANR	1635304	CFGEntryNode	ENTRY		1635202		True				
ANR	1635305	CFGExitNode	EXIT		1635202		True				
ANR	1635306	Symbol	syscall_mode		1635202						
ANR	1635307	Symbol	Checkpoint		1635202						
ANR	1635308	Symbol	SIGUSR2		1635202						
ANR	1635309	Symbol	x		1635202						
ANR	1635310	Symbol	D_ALWAYS		1635202						
ANR	1635311	Symbol	y		1635202						
ANR	1635312	Symbol	SIGTSTP		1635202						
ANR	1635313	Symbol	z		1635202						
ANR	1635314	Symbol	MyImage		1635202						
ANR	1635315	Function	_install_signal_handler	605:11:18216:18894							
ANR	1635316	FunctionDef	"_install_signal_handler (int sig , SIG_HANDLER handler)"		1635315	0					
ANR	1635317	CompoundStatement		607:0:18277:18894	1635315	0					
ANR	1635318	IdentifierDeclStatement	int scm ;	608:1:18280:18288	1635315	0	True				
ANR	1635319	IdentifierDecl	scm		1635315	0					
ANR	1635320	IdentifierDeclType	int		1635315	0					
ANR	1635321	Identifier	scm		1635315	1					
ANR	1635322	IdentifierDeclStatement	struct sigaction action ;	609:1:18291:18314	1635315	1	True				
ANR	1635323	IdentifierDecl	action		1635315	0					
ANR	1635324	IdentifierDeclType	struct sigaction		1635315	0					
ANR	1635325	Identifier	action		1635315	1					
ANR	1635326	ExpressionStatement	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )	611:1:18318:18363	1635315	2	True				
ANR	1635327	AssignmentExpression	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		1635315	0		=			
ANR	1635328	Identifier	scm		1635315	0					
ANR	1635329	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		1635315	1					
ANR	1635330	Callee	SetSyscalls		1635315	0					
ANR	1635331	Identifier	SetSyscalls		1635315	0					
ANR	1635332	ArgumentList	SYS_LOCAL | SYS_UNMAPPED		1635315	1					
ANR	1635333	Argument	SYS_LOCAL | SYS_UNMAPPED		1635315	0					
ANR	1635334	InclusiveOrExpression	SYS_LOCAL | SYS_UNMAPPED		1635315	0		|			
ANR	1635335	Identifier	SYS_LOCAL		1635315	0					
ANR	1635336	Identifier	SYS_UNMAPPED		1635315	1					
ANR	1635337	ExpressionStatement	action . sa_handler = handler	613:1:18367:18394	1635315	3	True				
ANR	1635338	AssignmentExpression	action . sa_handler = handler		1635315	0		=			
ANR	1635339	MemberAccess	action . sa_handler		1635315	0					
ANR	1635340	Identifier	action		1635315	0					
ANR	1635341	Identifier	sa_handler		1635315	1					
ANR	1635342	Identifier	handler		1635315	1					
ANR	1635343	ExpressionStatement	sigemptyset ( & action . sa_mask )	614:1:18397:18427	1635315	4	True				
ANR	1635344	CallExpression	sigemptyset ( & action . sa_mask )		1635315	0					
ANR	1635345	Callee	sigemptyset		1635315	0					
ANR	1635346	Identifier	sigemptyset		1635315	0					
ANR	1635347	ArgumentList	& action . sa_mask		1635315	1					
ANR	1635348	Argument	& action . sa_mask		1635315	0					
ANR	1635349	UnaryOperationExpression	& action . sa_mask		1635315	0					
ANR	1635350	UnaryOperator	&		1635315	0					
ANR	1635351	MemberAccess	action . sa_mask		1635315	1					
ANR	1635352	Identifier	action		1635315	0					
ANR	1635353	Identifier	sa_mask		1635315	1					
ANR	1635354	IfStatement	if ( sig == SIGTSTP )		1635315	5					
ANR	1635355	Condition	sig == SIGTSTP	617:6:18582:18595	1635315	0	True				
ANR	1635356	EqualityExpression	sig == SIGTSTP		1635315	0		==			
ANR	1635357	Identifier	sig		1635315	0					
ANR	1635358	Identifier	SIGTSTP		1635315	1					
ANR	1635359	ExpressionStatement	"sigaddset ( & action . sa_mask , SIGUSR2 )"	618:2:18601:18635	1635315	1	True				
ANR	1635360	CallExpression	"sigaddset ( & action . sa_mask , SIGUSR2 )"		1635315	0					
ANR	1635361	Callee	sigaddset		1635315	0					
ANR	1635362	Identifier	sigaddset		1635315	0					
ANR	1635363	ArgumentList	& action . sa_mask		1635315	1					
ANR	1635364	Argument	& action . sa_mask		1635315	0					
ANR	1635365	UnaryOperationExpression	& action . sa_mask		1635315	0					
ANR	1635366	UnaryOperator	&		1635315	0					
ANR	1635367	MemberAccess	action . sa_mask		1635315	1					
ANR	1635368	Identifier	action		1635315	0					
ANR	1635369	Identifier	sa_mask		1635315	1					
ANR	1635370	Argument	SIGUSR2		1635315	1					
ANR	1635371	Identifier	SIGUSR2		1635315	0					
ANR	1635372	IfStatement	if ( sig == SIGUSR2 )		1635315	6					
ANR	1635373	Condition	sig == SIGUSR2	619:6:18643:18656	1635315	0	True				
ANR	1635374	EqualityExpression	sig == SIGUSR2		1635315	0		==			
ANR	1635375	Identifier	sig		1635315	0					
ANR	1635376	Identifier	SIGUSR2		1635315	1					
ANR	1635377	ExpressionStatement	"sigaddset ( & action . sa_mask , SIGTSTP )"	620:2:18662:18696	1635315	1	True				
ANR	1635378	CallExpression	"sigaddset ( & action . sa_mask , SIGTSTP )"		1635315	0					
ANR	1635379	Callee	sigaddset		1635315	0					
ANR	1635380	Identifier	sigaddset		1635315	0					
ANR	1635381	ArgumentList	& action . sa_mask		1635315	1					
ANR	1635382	Argument	& action . sa_mask		1635315	0					
ANR	1635383	UnaryOperationExpression	& action . sa_mask		1635315	0					
ANR	1635384	UnaryOperator	&		1635315	0					
ANR	1635385	MemberAccess	action . sa_mask		1635315	1					
ANR	1635386	Identifier	action		1635315	0					
ANR	1635387	Identifier	sa_mask		1635315	1					
ANR	1635388	Argument	SIGTSTP		1635315	1					
ANR	1635389	Identifier	SIGTSTP		1635315	0					
ANR	1635390	ExpressionStatement	action . sa_flags = 0	622:1:18701:18720	1635315	7	True				
ANR	1635391	AssignmentExpression	action . sa_flags = 0		1635315	0		=			
ANR	1635392	MemberAccess	action . sa_flags		1635315	0					
ANR	1635393	Identifier	action		1635315	0					
ANR	1635394	Identifier	sa_flags		1635315	1					
ANR	1635395	PrimaryExpression	0		1635315	1					
ANR	1635396	IfStatement	"if ( sigaction ( sig , & action , NULL ) < 0 )"		1635315	8					
ANR	1635397	Condition	"sigaction ( sig , & action , NULL ) < 0"	624:5:18728:18758	1635315	0	True				
ANR	1635398	RelationalExpression	"sigaction ( sig , & action , NULL ) < 0"		1635315	0		<			
ANR	1635399	CallExpression	"sigaction ( sig , & action , NULL )"		1635315	0					
ANR	1635400	Callee	sigaction		1635315	0					
ANR	1635401	Identifier	sigaction		1635315	0					
ANR	1635402	ArgumentList	sig		1635315	1					
ANR	1635403	Argument	sig		1635315	0					
ANR	1635404	Identifier	sig		1635315	0					
ANR	1635405	Argument	& action		1635315	1					
ANR	1635406	UnaryOperationExpression	& action		1635315	0					
ANR	1635407	UnaryOperator	&		1635315	0					
ANR	1635408	Identifier	action		1635315	1					
ANR	1635409	Argument	NULL		1635315	2					
ANR	1635410	Identifier	NULL		1635315	0					
ANR	1635411	PrimaryExpression	0		1635315	1					
ANR	1635412	CompoundStatement		18:39:484:484	1635315	1					
ANR	1635413	ExpressionStatement	"dprintf ( D_ALWAYS , ""can't install sighandler for sig %d: %s\\n"" , sig , strerror ( errno ) )"	625:2:18766:18854	1635315	0	True				
ANR	1635414	CallExpression	"dprintf ( D_ALWAYS , ""can't install sighandler for sig %d: %s\\n"" , sig , strerror ( errno ) )"		1635315	0					
ANR	1635415	Callee	dprintf		1635315	0					
ANR	1635416	Identifier	dprintf		1635315	0					
ANR	1635417	ArgumentList	D_ALWAYS		1635315	1					
ANR	1635418	Argument	D_ALWAYS		1635315	0					
ANR	1635419	Identifier	D_ALWAYS		1635315	0					
ANR	1635420	Argument	"""can't install sighandler for sig %d: %s\\n"""		1635315	1					
ANR	1635421	PrimaryExpression	"""can't install sighandler for sig %d: %s\\n"""		1635315	0					
ANR	1635422	Argument	sig		1635315	2					
ANR	1635423	Identifier	sig		1635315	0					
ANR	1635424	Argument	strerror ( errno )		1635315	3					
ANR	1635425	CallExpression	strerror ( errno )		1635315	0					
ANR	1635426	Callee	strerror		1635315	0					
ANR	1635427	Identifier	strerror		1635315	0					
ANR	1635428	ArgumentList	errno		1635315	1					
ANR	1635429	Argument	errno		1635315	0					
ANR	1635430	Identifier	errno		1635315	0					
ANR	1635431	ExpressionStatement	Suicide ( )	627:2:18858:18867	1635315	1	True				
ANR	1635432	CallExpression	Suicide ( )		1635315	0					
ANR	1635433	Callee	Suicide		1635315	0					
ANR	1635434	Identifier	Suicide		1635315	0					
ANR	1635435	ArgumentList			1635315	1					
ANR	1635436	ExpressionStatement	SetSyscalls ( scm )	630:1:18874:18892	1635315	9	True				
ANR	1635437	CallExpression	SetSyscalls ( scm )		1635315	0					
ANR	1635438	Callee	SetSyscalls		1635315	0					
ANR	1635439	Identifier	SetSyscalls		1635315	0					
ANR	1635440	ArgumentList	scm		1635315	1					
ANR	1635441	Argument	scm		1635315	0					
ANR	1635442	Identifier	scm		1635315	0					
ANR	1635443	ReturnType	void		1635315	1					
ANR	1635444	Identifier	_install_signal_handler		1635315	2					
ANR	1635445	ParameterList	"int sig , SIG_HANDLER handler"		1635315	3					
ANR	1635446	Parameter	int sig	606:25:18246:18252	1635315	0	True				
ANR	1635447	ParameterType	int		1635315	0					
ANR	1635448	Identifier	sig		1635315	1					
ANR	1635449	Parameter	SIG_HANDLER handler	606:34:18255:18273	1635315	1	True				
ANR	1635450	ParameterType	SIG_HANDLER		1635315	0					
ANR	1635451	Identifier	handler		1635315	1					
ANR	1635452	CFGEntryNode	ENTRY		1635315		True				
ANR	1635453	CFGExitNode	EXIT		1635315		True				
ANR	1635454	Symbol	handler		1635315						
ANR	1635455	Symbol	errno		1635315						
ANR	1635456	Symbol	NULL		1635315						
ANR	1635457	Symbol	SYS_UNMAPPED		1635315						
ANR	1635458	Symbol	action . sa_flags		1635315						
ANR	1635459	Symbol	SIGUSR2		1635315						
ANR	1635460	Symbol	D_ALWAYS		1635315						
ANR	1635461	Symbol	action . sa_handler		1635315						
ANR	1635462	Symbol	SIGTSTP		1635315						
ANR	1635463	Symbol	sigaction		1635315						
ANR	1635464	Symbol	sig		1635315						
ANR	1635465	Symbol	& action . sa_mask		1635315						
ANR	1635466	Symbol	strerror		1635315						
ANR	1635467	Symbol	& action		1635315						
ANR	1635468	Symbol	SYS_LOCAL		1635315						
ANR	1635469	Symbol	action		1635315						
ANR	1635470	Symbol	SetSyscalls		1635315						
ANR	1635471	Symbol	scm		1635315						
ANR	1635472	Function	Image :: Save	640:0:19163:23284							
ANR	1635473	FunctionDef	Image :: Save ()		1635472	0					
ANR	1635474	CompoundStatement		642:0:19182:23284	1635472	0					
ANR	1635475	IdentifierDeclStatement	"RAW_ADDR stack_start , stack_end ;"	644:1:19221:19252	1635472	0	True				
ANR	1635476	IdentifierDecl	stack_start		1635472	0					
ANR	1635477	IdentifierDeclType	RAW_ADDR		1635472	0					
ANR	1635478	Identifier	stack_start		1635472	1					
ANR	1635479	IdentifierDecl	stack_end		1635472	1					
ANR	1635480	IdentifierDeclType	RAW_ADDR		1635472	0					
ANR	1635481	Identifier	stack_end		1635472	1					
ANR	1635482	IdentifierDeclStatement	"RAW_ADDR data_start , data_end ;"	649:1:19350:19379	1635472	1	True				
ANR	1635483	IdentifierDecl	data_start		1635472	0					
ANR	1635484	IdentifierDeclType	RAW_ADDR		1635472	0					
ANR	1635485	Identifier	data_start		1635472	1					
ANR	1635486	IdentifierDecl	data_end		1635472	1					
ANR	1635487	IdentifierDeclType	RAW_ADDR		1635472	0					
ANR	1635488	Identifier	data_end		1635472	1					
ANR	1635489	IdentifierDeclStatement	ssize_t position ;	650:1:19382:19399	1635472	2	True				
ANR	1635490	IdentifierDecl	position		1635472	0					
ANR	1635491	IdentifierDeclType	ssize_t		1635472	0					
ANR	1635492	Identifier	position		1635472	1					
ANR	1635493	IdentifierDeclStatement	int i ;	651:1:19402:19409	1635472	3	True				
ANR	1635494	IdentifierDecl	i		1635472	0					
ANR	1635495	IdentifierDeclType	int		1635472	0					
ANR	1635496	Identifier	i		1635472	1					
ANR	1635497	IdentifierDeclStatement	RAW_ADDR alt_heap = head . AltHeap ( ) ;	654:1:19440:19474	1635472	4	True				
ANR	1635498	IdentifierDecl	alt_heap = head . AltHeap ( )		1635472	0					
ANR	1635499	IdentifierDeclType	RAW_ADDR		1635472	0					
ANR	1635500	Identifier	alt_heap		1635472	1					
ANR	1635501	AssignmentExpression	alt_heap = head . AltHeap ( )		1635472	2		=			
ANR	1635502	Identifier	alt_heap		1635472	0					
ANR	1635503	CallExpression	head . AltHeap ( )		1635472	1					
ANR	1635504	Callee	head . AltHeap		1635472	0					
ANR	1635505	MemberAccess	head . AltHeap		1635472	0					
ANR	1635506	Identifier	head		1635472	0					
ANR	1635507	Identifier	AltHeap		1635472	1					
ANR	1635508	ArgumentList			1635472	1					
ANR	1635509	ExpressionStatement	head . Init ( )	657:1:19485:19496	1635472	5	True				
ANR	1635510	CallExpression	head . Init ( )		1635472	0					
ANR	1635511	Callee	head . Init		1635472	0					
ANR	1635512	MemberAccess	head . Init		1635472	0					
ANR	1635513	Identifier	head		1635472	0					
ANR	1635514	Identifier	Init		1635472	1					
ANR	1635515	ArgumentList			1635472	1					
ANR	1635516	ExpressionStatement	head . AltHeap ( alt_heap )	660:1:19527:19549	1635472	6	True				
ANR	1635517	CallExpression	head . AltHeap ( alt_heap )		1635472	0					
ANR	1635518	Callee	head . AltHeap		1635472	0					
ANR	1635519	MemberAccess	head . AltHeap		1635472	0					
ANR	1635520	Identifier	head		1635472	0					
ANR	1635521	Identifier	AltHeap		1635472	1					
ANR	1635522	ArgumentList	alt_heap		1635472	1					
ANR	1635523	Argument	alt_heap		1635472	0					
ANR	1635524	Identifier	alt_heap		1635472	0					
ANR	1635525	ExpressionStatement	data_start = data_start_addr ( )	666:1:19622:19652	1635472	7	True				
ANR	1635526	AssignmentExpression	data_start = data_start_addr ( )		1635472	0		=			
ANR	1635527	Identifier	data_start		1635472	0					
ANR	1635528	CallExpression	data_start_addr ( )		1635472	1					
ANR	1635529	Callee	data_start_addr		1635472	0					
ANR	1635530	Identifier	data_start_addr		1635472	0					
ANR	1635531	ArgumentList			1635472	1					
ANR	1635532	ExpressionStatement	data_end = data_end_addr ( )	667:1:19655:19681	1635472	8	True				
ANR	1635533	AssignmentExpression	data_end = data_end_addr ( )		1635472	0		=			
ANR	1635534	Identifier	data_end		1635472	0					
ANR	1635535	CallExpression	data_end_addr ( )		1635472	1					
ANR	1635536	Callee	data_end_addr		1635472	0					
ANR	1635537	Identifier	data_end_addr		1635472	0					
ANR	1635538	ArgumentList			1635472	1					
ANR	1635539	ExpressionStatement	"dprintf ( D_CKPT , ""Adding a DATA segment: start[0x%x], end [0x%x]\\n"" , ( unsigned long ) data_start , ( unsigned long ) data_end )"	668:1:19684:19805	1635472	9	True				
ANR	1635540	CallExpression	"dprintf ( D_CKPT , ""Adding a DATA segment: start[0x%x], end [0x%x]\\n"" , ( unsigned long ) data_start , ( unsigned long ) data_end )"		1635472	0					
ANR	1635541	Callee	dprintf		1635472	0					
ANR	1635542	Identifier	dprintf		1635472	0					
ANR	1635543	ArgumentList	D_CKPT		1635472	1					
ANR	1635544	Argument	D_CKPT		1635472	0					
ANR	1635545	Identifier	D_CKPT		1635472	0					
ANR	1635546	Argument	"""Adding a DATA segment: start[0x%x], end [0x%x]\\n"""		1635472	1					
ANR	1635547	PrimaryExpression	"""Adding a DATA segment: start[0x%x], end [0x%x]\\n"""		1635472	0					
ANR	1635548	Argument	( unsigned long ) data_start		1635472	2					
ANR	1635549	CastExpression	( unsigned long ) data_start		1635472	0					
ANR	1635550	CastTarget	unsigned long		1635472	0					
ANR	1635551	Identifier	data_start		1635472	1					
ANR	1635552	Argument	( unsigned long ) data_end		1635472	3					
ANR	1635553	CastExpression	( unsigned long ) data_end		1635472	0					
ANR	1635554	CastTarget	unsigned long		1635472	0					
ANR	1635555	Identifier	data_end		1635472	1					
ANR	1635556	ExpressionStatement	"AddSegment ( ""DATA"" , data_start , data_end , 0 )"	670:1:19808:19853	1635472	10	True				
ANR	1635557	CallExpression	"AddSegment ( ""DATA"" , data_start , data_end , 0 )"		1635472	0					
ANR	1635558	Callee	AddSegment		1635472	0					
ANR	1635559	Identifier	AddSegment		1635472	0					
ANR	1635560	ArgumentList	"""DATA"""		1635472	1					
ANR	1635561	Argument	"""DATA"""		1635472	0					
ANR	1635562	PrimaryExpression	"""DATA"""		1635472	0					
ANR	1635563	Argument	data_start		1635472	1					
ANR	1635564	Identifier	data_start		1635472	0					
ANR	1635565	Argument	data_end		1635472	2					
ANR	1635566	Identifier	data_end		1635472	0					
ANR	1635567	Argument	0		1635472	3					
ANR	1635568	PrimaryExpression	0		1635472	0					
ANR	1635569	ExpressionStatement	"find_stack_location ( stack_start , stack_end )"	673:1:19883:19928	1635472	11	True				
ANR	1635570	CallExpression	"find_stack_location ( stack_start , stack_end )"		1635472	0					
ANR	1635571	Callee	find_stack_location		1635472	0					
ANR	1635572	Identifier	find_stack_location		1635472	0					
ANR	1635573	ArgumentList	stack_start		1635472	1					
ANR	1635574	Argument	stack_start		1635472	0					
ANR	1635575	Identifier	stack_start		1635472	0					
ANR	1635576	Argument	stack_end		1635472	1					
ANR	1635577	Identifier	stack_end		1635472	0					
ANR	1635578	ExpressionStatement	"dprintf ( D_CKPT , ""Adding a STACK segment: start[0x%x], end [0x%x]\\n"" , ( unsigned long ) stack_start , ( unsigned long ) stack_end )"	674:1:19931:20055	1635472	12	True				
ANR	1635579	CallExpression	"dprintf ( D_CKPT , ""Adding a STACK segment: start[0x%x], end [0x%x]\\n"" , ( unsigned long ) stack_start , ( unsigned long ) stack_end )"		1635472	0					
ANR	1635580	Callee	dprintf		1635472	0					
ANR	1635581	Identifier	dprintf		1635472	0					
ANR	1635582	ArgumentList	D_CKPT		1635472	1					
ANR	1635583	Argument	D_CKPT		1635472	0					
ANR	1635584	Identifier	D_CKPT		1635472	0					
ANR	1635585	Argument	"""Adding a STACK segment: start[0x%x], end [0x%x]\\n"""		1635472	1					
ANR	1635586	PrimaryExpression	"""Adding a STACK segment: start[0x%x], end [0x%x]\\n"""		1635472	0					
ANR	1635587	Argument	( unsigned long ) stack_start		1635472	2					
ANR	1635588	CastExpression	( unsigned long ) stack_start		1635472	0					
ANR	1635589	CastTarget	unsigned long		1635472	0					
ANR	1635590	Identifier	stack_start		1635472	1					
ANR	1635591	Argument	( unsigned long ) stack_end		1635472	3					
ANR	1635592	CastExpression	( unsigned long ) stack_end		1635472	0					
ANR	1635593	CastTarget	unsigned long		1635472	0					
ANR	1635594	Identifier	stack_end		1635472	1					
ANR	1635595	ExpressionStatement	"AddSegment ( ""STACK"" , stack_start , stack_end , 0 )"	676:1:20058:20106	1635472	13	True				
ANR	1635596	CallExpression	"AddSegment ( ""STACK"" , stack_start , stack_end , 0 )"		1635472	0					
ANR	1635597	Callee	AddSegment		1635472	0					
ANR	1635598	Identifier	AddSegment		1635472	0					
ANR	1635599	ArgumentList	"""STACK"""		1635472	1					
ANR	1635600	Argument	"""STACK"""		1635472	0					
ANR	1635601	PrimaryExpression	"""STACK"""		1635472	0					
ANR	1635602	Argument	stack_start		1635472	1					
ANR	1635603	Identifier	stack_start		1635472	0					
ANR	1635604	Argument	stack_end		1635472	2					
ANR	1635605	Identifier	stack_end		1635472	0					
ANR	1635606	Argument	0		1635472	3					
ANR	1635607	PrimaryExpression	0		1635472	0					
ANR	1635608	ExpressionStatement	position = sizeof ( Header ) + head . N_Segs ( ) * sizeof ( SegMap )	770:1:22870:22928	1635472	14	True				
ANR	1635609	AssignmentExpression	position = sizeof ( Header ) + head . N_Segs ( ) * sizeof ( SegMap )		1635472	0		=			
ANR	1635610	Identifier	position		1635472	0					
ANR	1635611	AdditiveExpression	sizeof ( Header ) + head . N_Segs ( ) * sizeof ( SegMap )		1635472	1		+			
ANR	1635612	SizeofExpression	sizeof ( Header )		1635472	0					
ANR	1635613	Sizeof	sizeof		1635472	0					
ANR	1635614	SizeofOperand	Header		1635472	1					
ANR	1635615	MultiplicativeExpression	head . N_Segs ( ) * sizeof ( SegMap )		1635472	1		*			
ANR	1635616	CallExpression	head . N_Segs ( )		1635472	0					
ANR	1635617	Callee	head . N_Segs		1635472	0					
ANR	1635618	MemberAccess	head . N_Segs		1635472	0					
ANR	1635619	Identifier	head		1635472	0					
ANR	1635620	Identifier	N_Segs		1635472	1					
ANR	1635621	ArgumentList			1635472	1					
ANR	1635622	SizeofExpression	sizeof ( SegMap )		1635472	1					
ANR	1635623	Sizeof	sizeof		1635472	0					
ANR	1635624	SizeofOperand	SegMap		1635472	1					
ANR	1635625	ForStatement	for ( i = 0 ; i < head . N_Segs ( ) ; i ++ )		1635472	15					
ANR	1635626	ForInit	i = 0 ;	771:6:22936:22939	1635472	0	True				
ANR	1635627	AssignmentExpression	i = 0		1635472	0		=			
ANR	1635628	Identifier	i		1635472	0					
ANR	1635629	PrimaryExpression	0		1635472	1					
ANR	1635630	Condition	i < head . N_Segs ( )	771:11:22941:22955	1635472	1	True				
ANR	1635631	RelationalExpression	i < head . N_Segs ( )		1635472	0		<			
ANR	1635632	Identifier	i		1635472	0					
ANR	1635633	CallExpression	head . N_Segs ( )		1635472	1					
ANR	1635634	Callee	head . N_Segs		1635472	0					
ANR	1635635	MemberAccess	head . N_Segs		1635472	0					
ANR	1635636	Identifier	head		1635472	0					
ANR	1635637	Identifier	N_Segs		1635472	1					
ANR	1635638	ArgumentList			1635472	1					
ANR	1635639	PostIncDecOperationExpression	i ++	771:28:22958:22960	1635472	2	True				
ANR	1635640	Identifier	i		1635472	0					
ANR	1635641	IncDec	++		1635472	1					
ANR	1635642	CompoundStatement		130:34:3781:3781	1635472	3					
ANR	1635643	ExpressionStatement	position = map [ i ] . SetPos ( position )	772:2:22968:23004	1635472	0	True				
ANR	1635644	AssignmentExpression	position = map [ i ] . SetPos ( position )		1635472	0		=			
ANR	1635645	Identifier	position		1635472	0					
ANR	1635646	CallExpression	map [ i ] . SetPos ( position )		1635472	1					
ANR	1635647	Callee	map [ i ] . SetPos		1635472	0					
ANR	1635648	MemberAccess	map [ i ] . SetPos		1635472	0					
ANR	1635649	ArrayIndexing	map [ i ]		1635472	0					
ANR	1635650	Identifier	map		1635472	0					
ANR	1635651	Identifier	i		1635472	1					
ANR	1635652	Identifier	SetPos		1635472	1					
ANR	1635653	ArgumentList	position		1635472	1					
ANR	1635654	Argument	position		1635472	0					
ANR	1635655	Identifier	position		1635472	0					
ANR	1635656	ExpressionStatement	"dprintf ( D_CKPT , ""Pos: %d\\n"" , position )"	773:2:23008:23045	1635472	1	True				
ANR	1635657	CallExpression	"dprintf ( D_CKPT , ""Pos: %d\\n"" , position )"		1635472	0					
ANR	1635658	Callee	dprintf		1635472	0					
ANR	1635659	Identifier	dprintf		1635472	0					
ANR	1635660	ArgumentList	D_CKPT		1635472	1					
ANR	1635661	Argument	D_CKPT		1635472	0					
ANR	1635662	Identifier	D_CKPT		1635472	0					
ANR	1635663	Argument	"""Pos: %d\\n"""		1635472	1					
ANR	1635664	PrimaryExpression	"""Pos: %d\\n"""		1635472	0					
ANR	1635665	Argument	position		1635472	2					
ANR	1635666	Identifier	position		1635472	0					
ANR	1635667	IfStatement	if ( position < 0 )		1635472	16					
ANR	1635668	Condition	position < 0	776:5:23056:23067	1635472	0	True				
ANR	1635669	RelationalExpression	position < 0		1635472	0		<			
ANR	1635670	Identifier	position		1635472	0					
ANR	1635671	PrimaryExpression	0		1635472	1					
ANR	1635672	CompoundStatement		135:20:3888:3888	1635472	1					
ANR	1635673	ExpressionStatement	"dprintf ( D_ALWAYS , ""Internal error, ckpt size calculated is %d\\n"" , position )"	777:2:23075:23165	1635472	0	True				
ANR	1635674	CallExpression	"dprintf ( D_ALWAYS , ""Internal error, ckpt size calculated is %d\\n"" , position )"		1635472	0					
ANR	1635675	Callee	dprintf		1635472	0					
ANR	1635676	Identifier	dprintf		1635472	0					
ANR	1635677	ArgumentList	D_ALWAYS		1635472	1					
ANR	1635678	Argument	D_ALWAYS		1635472	0					
ANR	1635679	Identifier	D_ALWAYS		1635472	0					
ANR	1635680	Argument	"""Internal error, ckpt size calculated is %d\\n"""		1635472	1					
ANR	1635681	PrimaryExpression	"""Internal error, ckpt size calculated is %d\\n"""		1635472	0					
ANR	1635682	Argument	position		1635472	2					
ANR	1635683	Identifier	position		1635472	0					
ANR	1635684	ExpressionStatement	Suicide ( )	779:2:23169:23178	1635472	1	True				
ANR	1635685	CallExpression	Suicide ( )		1635472	0					
ANR	1635686	Callee	Suicide		1635472	0					
ANR	1635687	Identifier	Suicide		1635472	0					
ANR	1635688	ArgumentList			1635472	1					
ANR	1635689	ExpressionStatement	"dprintf ( D_ALWAYS , ""Size of ckpt image = %d bytes\\n"" , position )"	782:1:23185:23249	1635472	17	True				
ANR	1635690	CallExpression	"dprintf ( D_ALWAYS , ""Size of ckpt image = %d bytes\\n"" , position )"		1635472	0					
ANR	1635691	Callee	dprintf		1635472	0					
ANR	1635692	Identifier	dprintf		1635472	0					
ANR	1635693	ArgumentList	D_ALWAYS		1635472	1					
ANR	1635694	Argument	D_ALWAYS		1635472	0					
ANR	1635695	Identifier	D_ALWAYS		1635472	0					
ANR	1635696	Argument	"""Size of ckpt image = %d bytes\\n"""		1635472	1					
ANR	1635697	PrimaryExpression	"""Size of ckpt image = %d bytes\\n"""		1635472	0					
ANR	1635698	Argument	position		1635472	2					
ANR	1635699	Identifier	position		1635472	0					
ANR	1635700	ExpressionStatement	len = position	783:1:23252:23266	1635472	18	True				
ANR	1635701	AssignmentExpression	len = position		1635472	0		=			
ANR	1635702	Identifier	len		1635472	0					
ANR	1635703	Identifier	position		1635472	1					
ANR	1635704	ExpressionStatement	valid = TRUE	785:1:23270:23282	1635472	19	True				
ANR	1635705	AssignmentExpression	valid = TRUE		1635472	0		=			
ANR	1635706	Identifier	valid		1635472	0					
ANR	1635707	Identifier	TRUE		1635472	1					
ANR	1635708	ReturnType	void		1635472	1					
ANR	1635709	Identifier	Image :: Save		1635472	2					
ANR	1635710	ParameterList			1635472	3					
ANR	1635711	CFGEntryNode	ENTRY		1635472		True				
ANR	1635712	CFGExitNode	EXIT		1635472		True				
ANR	1635713	Symbol	data_end		1635472						
ANR	1635714	Symbol	data_end_addr		1635472						
ANR	1635715	Symbol	map [ i ] . SetPos		1635472						
ANR	1635716	Symbol	D_CKPT		1635472						
ANR	1635717	Symbol	stack_end		1635472						
ANR	1635718	Symbol	* map		1635472						
ANR	1635719	Symbol	data_start		1635472						
ANR	1635720	Symbol	D_ALWAYS		1635472						
ANR	1635721	Symbol	i		1635472						
ANR	1635722	Symbol	TRUE		1635472						
ANR	1635723	Symbol	stack_start		1635472						
ANR	1635724	Symbol	head		1635472						
ANR	1635725	Symbol	valid		1635472						
ANR	1635726	Symbol	head . N_Segs		1635472						
ANR	1635727	Symbol	alt_heap		1635472						
ANR	1635728	Symbol	* i		1635472						
ANR	1635729	Symbol	len		1635472						
ANR	1635730	Symbol	head . AltHeap		1635472						
ANR	1635731	Symbol	position		1635472						
ANR	1635732	Symbol	data_start_addr		1635472						
ANR	1635733	Symbol	map		1635472						
ANR	1635734	Function	SegMap :: SetPos	788:0:23287:23374							
ANR	1635735	FunctionDef	SegMap :: SetPos (ssize_t my_pos)		1635734	0					
ANR	1635736	CompoundStatement		790:0:23328:23374	1635734	0					
ANR	1635737	ExpressionStatement	file_loc = my_pos	791:1:23331:23348	1635734	0	True				
ANR	1635738	AssignmentExpression	file_loc = my_pos		1635734	0		=			
ANR	1635739	Identifier	file_loc		1635734	0					
ANR	1635740	Identifier	my_pos		1635734	1					
ANR	1635741	ReturnStatement	return file_loc + len ;	792:1:23351:23372	1635734	1	True				
ANR	1635742	AdditiveExpression	file_loc + len		1635734	0		+			
ANR	1635743	Identifier	file_loc		1635734	0					
ANR	1635744	Identifier	len		1635734	1					
ANR	1635745	ReturnType	ssize_t		1635734	1					
ANR	1635746	Identifier	SegMap :: SetPos		1635734	2					
ANR	1635747	ParameterList	ssize_t my_pos		1635734	3					
ANR	1635748	Parameter	ssize_t my_pos	789:16:23311:23324	1635734	0	True				
ANR	1635749	ParameterType	ssize_t		1635734	0					
ANR	1635750	Identifier	my_pos		1635734	1					
ANR	1635751	CFGEntryNode	ENTRY		1635734		True				
ANR	1635752	CFGExitNode	EXIT		1635734		True				
ANR	1635753	Symbol	file_loc		1635734						
ANR	1635754	Symbol	len		1635734						
ANR	1635755	Symbol	my_pos		1635734						
ANR	1635756	Function	Image :: Display	795:0:23377:23609							
ANR	1635757	FunctionDef	Image :: Display ()		1635756	0					
ANR	1635758	CompoundStatement		797:0:23399:23609	1635756	0					
ANR	1635759	IdentifierDeclStatement	int i ;	798:1:23402:23408	1635756	0	True				
ANR	1635760	IdentifierDecl	i		1635756	0					
ANR	1635761	IdentifierDeclType	int		1635756	0					
ANR	1635762	Identifier	i		1635756	1					
ANR	1635763	ExpressionStatement	"printf ( ""===========\\n"" )"	800:1:23412:23437	1635756	1	True				
ANR	1635764	CallExpression	"printf ( ""===========\\n"" )"		1635756	0					
ANR	1635765	Callee	printf		1635756	0					
ANR	1635766	Identifier	printf		1635756	0					
ANR	1635767	ArgumentList	"""===========\\n"""		1635756	1					
ANR	1635768	Argument	"""===========\\n"""		1635756	0					
ANR	1635769	PrimaryExpression	"""===========\\n"""		1635756	0					
ANR	1635770	ExpressionStatement	"printf ( ""Ckpt File Header:\\n"" )"	801:1:23440:23471	1635756	2	True				
ANR	1635771	CallExpression	"printf ( ""Ckpt File Header:\\n"" )"		1635756	0					
ANR	1635772	Callee	printf		1635756	0					
ANR	1635773	Identifier	printf		1635756	0					
ANR	1635774	ArgumentList	"""Ckpt File Header:\\n"""		1635756	1					
ANR	1635775	Argument	"""Ckpt File Header:\\n"""		1635756	0					
ANR	1635776	PrimaryExpression	"""Ckpt File Header:\\n"""		1635756	0					
ANR	1635777	ExpressionStatement	head . Display ( )	802:1:23474:23488	1635756	3	True				
ANR	1635778	CallExpression	head . Display ( )		1635756	0					
ANR	1635779	Callee	head . Display		1635756	0					
ANR	1635780	MemberAccess	head . Display		1635756	0					
ANR	1635781	Identifier	head		1635756	0					
ANR	1635782	Identifier	Display		1635756	1					
ANR	1635783	ArgumentList			1635756	1					
ANR	1635784	ForStatement	for ( i = 0 ; i < head . N_Segs ( ) ; i ++ )		1635756	4					
ANR	1635785	ForInit	i = 0 ;	803:6:23496:23499	1635756	0	True				
ANR	1635786	AssignmentExpression	i = 0		1635756	0		=			
ANR	1635787	Identifier	i		1635756	0					
ANR	1635788	PrimaryExpression	0		1635756	1					
ANR	1635789	Condition	i < head . N_Segs ( )	803:11:23501:23515	1635756	1	True				
ANR	1635790	RelationalExpression	i < head . N_Segs ( )		1635756	0		<			
ANR	1635791	Identifier	i		1635756	0					
ANR	1635792	CallExpression	head . N_Segs ( )		1635756	1					
ANR	1635793	Callee	head . N_Segs		1635756	0					
ANR	1635794	MemberAccess	head . N_Segs		1635756	0					
ANR	1635795	Identifier	head		1635756	0					
ANR	1635796	Identifier	N_Segs		1635756	1					
ANR	1635797	ArgumentList			1635756	1					
ANR	1635798	PostIncDecOperationExpression	i ++	803:28:23518:23520	1635756	2	True				
ANR	1635799	Identifier	i		1635756	0					
ANR	1635800	IncDec	++		1635756	1					
ANR	1635801	CompoundStatement		7:34:124:124	1635756	3					
ANR	1635802	ExpressionStatement	"printf ( ""Segment %d:\\n"" , i )"	804:2:23528:23556	1635756	0	True				
ANR	1635803	CallExpression	"printf ( ""Segment %d:\\n"" , i )"		1635756	0					
ANR	1635804	Callee	printf		1635756	0					
ANR	1635805	Identifier	printf		1635756	0					
ANR	1635806	ArgumentList	"""Segment %d:\\n"""		1635756	1					
ANR	1635807	Argument	"""Segment %d:\\n"""		1635756	0					
ANR	1635808	PrimaryExpression	"""Segment %d:\\n"""		1635756	0					
ANR	1635809	Argument	i		1635756	1					
ANR	1635810	Identifier	i		1635756	0					
ANR	1635811	ExpressionStatement	map [ i ] . Display ( )	805:2:23560:23576	1635756	1	True				
ANR	1635812	CallExpression	map [ i ] . Display ( )		1635756	0					
ANR	1635813	Callee	map [ i ] . Display		1635756	0					
ANR	1635814	MemberAccess	map [ i ] . Display		1635756	0					
ANR	1635815	ArrayIndexing	map [ i ]		1635756	0					
ANR	1635816	Identifier	map		1635756	0					
ANR	1635817	Identifier	i		1635756	1					
ANR	1635818	Identifier	Display		1635756	1					
ANR	1635819	ArgumentList			1635756	1					
ANR	1635820	ExpressionStatement	"printf ( ""===========\\n"" )"	807:1:23582:23607	1635756	5	True				
ANR	1635821	CallExpression	"printf ( ""===========\\n"" )"		1635756	0					
ANR	1635822	Callee	printf		1635756	0					
ANR	1635823	Identifier	printf		1635756	0					
ANR	1635824	ArgumentList	"""===========\\n"""		1635756	1					
ANR	1635825	Argument	"""===========\\n"""		1635756	0					
ANR	1635826	PrimaryExpression	"""===========\\n"""		1635756	0					
ANR	1635827	ReturnType	void		1635756	1					
ANR	1635828	Identifier	Image :: Display		1635756	2					
ANR	1635829	ParameterList			1635756	3					
ANR	1635830	CFGEntryNode	ENTRY		1635756		True				
ANR	1635831	CFGExitNode	EXIT		1635756		True				
ANR	1635832	Symbol	head		1635756						
ANR	1635833	Symbol	head . N_Segs		1635756						
ANR	1635834	Symbol	* i		1635756						
ANR	1635835	Symbol	* map		1635756						
ANR	1635836	Symbol	i		1635756						
ANR	1635837	Symbol	map		1635756						
ANR	1635838	Function	Image :: AddSegment	810:0:23612:24104							
ANR	1635839	FunctionDef	"Image :: AddSegment (const char * name , RAW_ADDR start , RAW_ADDR end , int prot)"		1635838	0					
ANR	1635840	CompoundStatement		812:0:23695:24104	1635838	0					
ANR	1635841	IdentifierDeclStatement	RAW_ADDR length = end - start ;	813:1:23698:23727	1635838	0	True				
ANR	1635842	IdentifierDecl	length = end - start		1635838	0					
ANR	1635843	IdentifierDeclType	RAW_ADDR		1635838	0					
ANR	1635844	Identifier	length		1635838	1					
ANR	1635845	AssignmentExpression	length = end - start		1635838	2		=			
ANR	1635846	Identifier	length		1635838	0					
ANR	1635847	AdditiveExpression	end - start		1635838	1		-			
ANR	1635848	Identifier	end		1635838	0					
ANR	1635849	Identifier	start		1635838	1					
ANR	1635850	IdentifierDeclStatement	int idx = head . N_Segs ( ) ;	814:1:23730:23753	1635838	1	True				
ANR	1635851	IdentifierDecl	idx = head . N_Segs ( )		1635838	0					
ANR	1635852	IdentifierDeclType	int		1635838	0					
ANR	1635853	Identifier	idx		1635838	1					
ANR	1635854	AssignmentExpression	idx = head . N_Segs ( )		1635838	2		=			
ANR	1635855	Identifier	idx		1635838	0					
ANR	1635856	CallExpression	head . N_Segs ( )		1635838	1					
ANR	1635857	Callee	head . N_Segs		1635838	0					
ANR	1635858	MemberAccess	head . N_Segs		1635838	0					
ANR	1635859	Identifier	head		1635838	0					
ANR	1635860	Identifier	N_Segs		1635838	1					
ANR	1635861	ArgumentList			1635838	1					
ANR	1635862	IfStatement	if ( idx >= MAX_SEGS )		1635838	2					
ANR	1635863	Condition	idx >= MAX_SEGS	816:5:23761:23775	1635838	0	True				
ANR	1635864	RelationalExpression	idx >= MAX_SEGS		1635838	0		>=			
ANR	1635865	Identifier	idx		1635838	0					
ANR	1635866	Identifier	MAX_SEGS		1635838	1					
ANR	1635867	CompoundStatement		5:23:83:83	1635838	1					
ANR	1635868	ExpressionStatement	"dprintf ( D_ALWAYS , ""Don't know how to grow segment map yet!\\n"" )"	817:2:23783:23847	1635838	0	True				
ANR	1635869	CallExpression	"dprintf ( D_ALWAYS , ""Don't know how to grow segment map yet!\\n"" )"		1635838	0					
ANR	1635870	Callee	dprintf		1635838	0					
ANR	1635871	Identifier	dprintf		1635838	0					
ANR	1635872	ArgumentList	D_ALWAYS		1635838	1					
ANR	1635873	Argument	D_ALWAYS		1635838	0					
ANR	1635874	Identifier	D_ALWAYS		1635838	0					
ANR	1635875	Argument	"""Don't know how to grow segment map yet!\\n"""		1635838	1					
ANR	1635876	PrimaryExpression	"""Don't know how to grow segment map yet!\\n"""		1635838	0					
ANR	1635877	ExpressionStatement	Suicide ( )	818:2:23851:23860	1635838	1	True				
ANR	1635878	CallExpression	Suicide ( )		1635838	0					
ANR	1635879	Callee	Suicide		1635838	0					
ANR	1635880	Identifier	Suicide		1635838	0					
ANR	1635881	ArgumentList			1635838	1					
ANR	1635882	Statement	dprintf	821:1:23867:23873	1635838	3	True				
ANR	1635883	Statement	(	821:8:23874:23874	1635838	4	True				
ANR	1635884	Statement	D_CKPT	821:9:23875:23880	1635838	5	True				
ANR	1635885	Statement	","	821:15:23881:23881	1635838	6	True				
ANR	1635886	Statement	"""Image::AddSegment: name=[%s], start=[%p], end=[%p], length=[0x%x], """	822:2:23886:23954	1635838	7	True				
ANR	1635887	Statement	"""prot=[0x%x]\\n"""	823:2:23958:23972	1635838	8	True				
ANR	1635888	Statement	","	823:17:23973:23973	1635838	9	True				
ANR	1635889	Statement	name	824:2:23978:23981	1635838	10	True				
ANR	1635890	Statement	","	824:6:23982:23982	1635838	11	True				
ANR	1635891	Statement	(	824:8:23984:23984	1635838	12	True				
ANR	1635892	Statement	void	824:9:23985:23988	1635838	13	True				
ANR	1635893	Statement	*	824:13:23989:23989	1635838	14	True				
ANR	1635894	Statement	)	824:14:23990:23990	1635838	15	True				
ANR	1635895	Statement	start	824:15:23991:23995	1635838	16	True				
ANR	1635896	Statement	","	824:20:23996:23996	1635838	17	True				
ANR	1635897	Statement	(	824:22:23998:23998	1635838	18	True				
ANR	1635898	Statement	void	824:23:23999:24002	1635838	19	True				
ANR	1635899	Statement	*	824:27:24003:24003	1635838	20	True				
ANR	1635900	Statement	)	824:28:24004:24004	1635838	21	True				
ANR	1635901	Statement	end	824:29:24005:24007	1635838	22	True				
ANR	1635902	Statement	","	824:32:24008:24008	1635838	23	True				
ANR	1635903	Statement	(	824:34:24010:24010	1635838	24	True				
ANR	1635904	Statement	unsigned	824:35:24011:24018	1635838	25	True				
ANR	1635905	Statement	long	824:44:24020:24023	1635838	26	True				
ANR	1635906	Statement	)	824:48:24024:24024	1635838	27	True				
ANR	1635907	Statement	length	824:49:24025:24030	1635838	28	True				
ANR	1635908	Statement	","	824:55:24031:24031	1635838	29	True				
ANR	1635909	Statement	prot	824:57:24033:24036	1635838	30	True				
ANR	1635910	Statement	)	824:61:24037:24037	1635838	31	True				
ANR	1635911	ExpressionStatement		824:62:24038:24038	1635838	32	True				
ANR	1635912	ExpressionStatement	head . IncrSegs ( )	826:1:24042:24057	1635838	33	True				
ANR	1635913	CallExpression	head . IncrSegs ( )		1635838	0					
ANR	1635914	Callee	head . IncrSegs		1635838	0					
ANR	1635915	MemberAccess	head . IncrSegs		1635838	0					
ANR	1635916	Identifier	head		1635838	0					
ANR	1635917	Identifier	IncrSegs		1635838	1					
ANR	1635918	ArgumentList			1635838	1					
ANR	1635919	ExpressionStatement	"map [ idx ] . Init ( name , start , length , prot )"	827:1:24060:24102	1635838	34	True				
ANR	1635920	CallExpression	"map [ idx ] . Init ( name , start , length , prot )"		1635838	0					
ANR	1635921	Callee	map [ idx ] . Init		1635838	0					
ANR	1635922	MemberAccess	map [ idx ] . Init		1635838	0					
ANR	1635923	ArrayIndexing	map [ idx ]		1635838	0					
ANR	1635924	Identifier	map		1635838	0					
ANR	1635925	Identifier	idx		1635838	1					
ANR	1635926	Identifier	Init		1635838	1					
ANR	1635927	ArgumentList	name		1635838	1					
ANR	1635928	Argument	name		1635838	0					
ANR	1635929	Identifier	name		1635838	0					
ANR	1635930	Argument	start		1635838	1					
ANR	1635931	Identifier	start		1635838	0					
ANR	1635932	Argument	length		1635838	2					
ANR	1635933	Identifier	length		1635838	0					
ANR	1635934	Argument	prot		1635838	3					
ANR	1635935	Identifier	prot		1635838	0					
ANR	1635936	ReturnType	void		1635838	1					
ANR	1635937	Identifier	Image :: AddSegment		1635838	2					
ANR	1635938	ParameterList	"const char * name , RAW_ADDR start , RAW_ADDR end , int prot"		1635838	3					
ANR	1635939	Parameter	const char * name	811:19:23636:23651	1635838	0	True				
ANR	1635940	ParameterType	const char *		1635838	0					
ANR	1635941	Identifier	name		1635838	1					
ANR	1635942	Parameter	RAW_ADDR start	811:37:23654:23667	1635838	1	True				
ANR	1635943	ParameterType	RAW_ADDR		1635838	0					
ANR	1635944	Identifier	start		1635838	1					
ANR	1635945	Parameter	RAW_ADDR end	811:53:23670:23681	1635838	2	True				
ANR	1635946	ParameterType	RAW_ADDR		1635838	0					
ANR	1635947	Identifier	end		1635838	1					
ANR	1635948	Parameter	int prot	811:67:23684:23691	1635838	3	True				
ANR	1635949	ParameterType	int		1635838	0					
ANR	1635950	Identifier	prot		1635838	1					
ANR	1635951	CFGEntryNode	ENTRY		1635838		True				
ANR	1635952	CFGExitNode	EXIT		1635838		True				
ANR	1635953	Symbol	MAX_SEGS		1635838						
ANR	1635954	Symbol	* map		1635838						
ANR	1635955	Symbol	start		1635838						
ANR	1635956	Symbol	length		1635838						
ANR	1635957	Symbol	D_ALWAYS		1635838						
ANR	1635958	Symbol	head		1635838						
ANR	1635959	Symbol	head . N_Segs		1635838						
ANR	1635960	Symbol	prot		1635838						
ANR	1635961	Symbol	name		1635838						
ANR	1635962	Symbol	* idx		1635838						
ANR	1635963	Symbol	end		1635838						
ANR	1635964	Symbol	idx		1635838						
ANR	1635965	Symbol	map		1635838						
ANR	1635966	Function	Image :: FindSeg	830:0:24107:24305							
ANR	1635967	FunctionDef	Image :: FindSeg (void * addr)		1635966	0					
ANR	1635968	CompoundStatement		832:0:24143:24305	1635966	0					
ANR	1635969	IdentifierDeclStatement	int i ;	833:1:24146:24152	1635966	0	True				
ANR	1635970	IdentifierDecl	i		1635966	0					
ANR	1635971	IdentifierDeclType	int		1635966	0					
ANR	1635972	Identifier	i		1635966	1					
ANR	1635973	IfStatement	if ( ! valid )		1635966	1					
ANR	1635974	Condition	! valid	834:5:24159:24164	1635966	0	True				
ANR	1635975	UnaryOperationExpression	! valid		1635966	0					
ANR	1635976	UnaryOperator	!		1635966	0					
ANR	1635977	Identifier	valid		1635966	1					
ANR	1635978	CompoundStatement		3:14:24:24	1635966	1					
ANR	1635979	ReturnStatement	return NULL ;	835:2:24172:24183	1635966	0	True				
ANR	1635980	Identifier	NULL		1635966	0					
ANR	1635981	ForStatement	for ( i = 0 ; i < head . N_Segs ( ) ; i ++ )		1635966	2					
ANR	1635982	ForInit	i = 0 ;	837:6:24194:24197	1635966	0	True				
ANR	1635983	AssignmentExpression	i = 0		1635966	0		=			
ANR	1635984	Identifier	i		1635966	0					
ANR	1635985	PrimaryExpression	0		1635966	1					
ANR	1635986	Condition	i < head . N_Segs ( )	837:11:24199:24213	1635966	1	True				
ANR	1635987	RelationalExpression	i < head . N_Segs ( )		1635966	0		<			
ANR	1635988	Identifier	i		1635966	0					
ANR	1635989	CallExpression	head . N_Segs ( )		1635966	1					
ANR	1635990	Callee	head . N_Segs		1635966	0					
ANR	1635991	MemberAccess	head . N_Segs		1635966	0					
ANR	1635992	Identifier	head		1635966	0					
ANR	1635993	Identifier	N_Segs		1635966	1					
ANR	1635994	ArgumentList			1635966	1					
ANR	1635995	PostIncDecOperationExpression	i ++	837:28:24216:24218	1635966	2	True				
ANR	1635996	Identifier	i		1635966	0					
ANR	1635997	IncDec	++		1635966	1					
ANR	1635998	CompoundStatement		6:34:78:78	1635966	3					
ANR	1635999	IfStatement	if ( map [ i ] . Contains ( addr ) )		1635966	0					
ANR	1636000	Condition	map [ i ] . Contains ( addr )	838:6:24230:24250	1635966	0	True				
ANR	1636001	CallExpression	map [ i ] . Contains ( addr )		1635966	0					
ANR	1636002	Callee	map [ i ] . Contains		1635966	0					
ANR	1636003	MemberAccess	map [ i ] . Contains		1635966	0					
ANR	1636004	ArrayIndexing	map [ i ]		1635966	0					
ANR	1636005	Identifier	map		1635966	0					
ANR	1636006	Identifier	i		1635966	1					
ANR	1636007	Identifier	Contains		1635966	1					
ANR	1636008	ArgumentList	addr		1635966	1					
ANR	1636009	Argument	addr		1635966	0					
ANR	1636010	Identifier	addr		1635966	0					
ANR	1636011	CompoundStatement		7:30:110:110	1635966	1					
ANR	1636012	ReturnStatement	return map [ i ] . GetName ( ) ;	839:3:24259:24282	1635966	0	True				
ANR	1636013	CallExpression	map [ i ] . GetName ( )		1635966	0					
ANR	1636014	Callee	map [ i ] . GetName		1635966	0					
ANR	1636015	MemberAccess	map [ i ] . GetName		1635966	0					
ANR	1636016	ArrayIndexing	map [ i ]		1635966	0					
ANR	1636017	Identifier	map		1635966	0					
ANR	1636018	Identifier	i		1635966	1					
ANR	1636019	Identifier	GetName		1635966	1					
ANR	1636020	ArgumentList			1635966	1					
ANR	1636021	ReturnStatement	return NULL ;	842:1:24292:24303	1635966	3	True				
ANR	1636022	Identifier	NULL		1635966	0					
ANR	1636023	ReturnType	char *		1635966	1					
ANR	1636024	Identifier	Image :: FindSeg		1635966	2					
ANR	1636025	ParameterList	void * addr		1635966	3					
ANR	1636026	Parameter	void * addr	831:16:24130:24139	1635966	0	True				
ANR	1636027	ParameterType	void *		1635966	0					
ANR	1636028	Identifier	addr		1635966	1					
ANR	1636029	CFGEntryNode	ENTRY		1635966		True				
ANR	1636030	CFGExitNode	EXIT		1635966		True				
ANR	1636031	Symbol	valid		1635966						
ANR	1636032	Symbol	head		1635966						
ANR	1636033	Symbol	head . N_Segs		1635966						
ANR	1636034	Symbol	NULL		1635966						
ANR	1636035	Symbol	* i		1635966						
ANR	1636036	Symbol	map [ i ] . GetName		1635966						
ANR	1636037	Symbol	* map		1635966						
ANR	1636038	Symbol	i		1635966						
ANR	1636039	Symbol	map [ i ] . Contains		1635966						
ANR	1636040	Symbol	addr		1635966						
ANR	1636041	Symbol	map		1635966						
ANR	1636042	Function	SegMap :: Contains	845:0:24308:24421							
ANR	1636043	FunctionDef	SegMap :: Contains (void * addr)		1636042	0					
ANR	1636044	CompoundStatement		847:0:24344:24421	1636042	0					
ANR	1636045	ReturnStatement	return ( ( RAW_ADDR ) addr >= core_loc ) && ( ( RAW_ADDR ) addr < core_loc + len ) ;	848:1:24347:24419	1636042	0	True				
ANR	1636046	AndExpression	( ( RAW_ADDR ) addr >= core_loc ) && ( ( RAW_ADDR ) addr < core_loc + len )		1636042	0		&&			
ANR	1636047	RelationalExpression	( RAW_ADDR ) addr >= core_loc		1636042	0		>=			
ANR	1636048	CastExpression	( RAW_ADDR ) addr		1636042	0					
ANR	1636049	CastTarget	RAW_ADDR		1636042	0					
ANR	1636050	Identifier	addr		1636042	1					
ANR	1636051	Identifier	core_loc		1636042	1					
ANR	1636052	RelationalExpression	( RAW_ADDR ) addr < core_loc + len		1636042	1		<			
ANR	1636053	CastExpression	( RAW_ADDR ) addr		1636042	0					
ANR	1636054	CastTarget	RAW_ADDR		1636042	0					
ANR	1636055	Identifier	addr		1636042	1					
ANR	1636056	AdditiveExpression	core_loc + len		1636042	1		+			
ANR	1636057	Identifier	core_loc		1636042	0					
ANR	1636058	Identifier	len		1636042	1					
ANR	1636059	ReturnType	BOOL		1636042	1					
ANR	1636060	Identifier	SegMap :: Contains		1636042	2					
ANR	1636061	ParameterList	void * addr		1636042	3					
ANR	1636062	Parameter	void * addr	846:18:24331:24340	1636042	0	True				
ANR	1636063	ParameterType	void *		1636042	0					
ANR	1636064	Identifier	addr		1636042	1					
ANR	1636065	CFGEntryNode	ENTRY		1636042		True				
ANR	1636066	CFGExitNode	EXIT		1636042		True				
ANR	1636067	Symbol	len		1636042						
ANR	1636068	Symbol	addr		1636042						
ANR	1636069	Symbol	core_loc		1636042						
ANR	1636070	Function	Image :: Restore	856:0:24563:26948							
ANR	1636071	FunctionDef	Image :: Restore ()		1636070	0					
ANR	1636072	CompoundStatement		858:0:24585:26948	1636070	0					
ANR	1636073	IdentifierDeclStatement	int save_fd = fd ;	859:1:24588:24605	1636070	0	True				
ANR	1636074	IdentifierDecl	save_fd = fd		1636070	0					
ANR	1636075	IdentifierDeclType	int		1636070	0					
ANR	1636076	Identifier	save_fd		1636070	1					
ANR	1636077	AssignmentExpression	save_fd = fd		1636070	2		=			
ANR	1636078	Identifier	fd		1636070	0					
ANR	1636079	Identifier	fd		1636070	1					
ANR	1636080	IfStatement	if ( head . AltHeap ( ) > 0 )		1636070	1					
ANR	1636081	Condition	head . AltHeap ( ) > 0	866:5:24829:24846	1636070	0	True				
ANR	1636082	RelationalExpression	head . AltHeap ( ) > 0		1636070	0		>			
ANR	1636083	CallExpression	head . AltHeap ( )		1636070	0					
ANR	1636084	Callee	head . AltHeap		1636070	0					
ANR	1636085	MemberAccess	head . AltHeap		1636070	0					
ANR	1636086	Identifier	head		1636070	0					
ANR	1636087	Identifier	AltHeap		1636070	1					
ANR	1636088	ArgumentList			1636070	1					
ANR	1636089	PrimaryExpression	0		1636070	1					
ANR	1636090	CompoundStatement		9:25:263:263	1636070	1					
ANR	1636091	ExpressionStatement	condor_morecore ( 0 )	867:2:24853:24871	1636070	0	True				
ANR	1636092	CallExpression	condor_morecore ( 0 )		1636070	0					
ANR	1636093	Callee	condor_morecore		1636070	0					
ANR	1636094	Identifier	condor_morecore		1636070	0					
ANR	1636095	ArgumentList	0		1636070	1					
ANR	1636096	Argument	0		1636070	0					
ANR	1636097	PrimaryExpression	0		1636070	0					
ANR	1636098	IfStatement	if ( head . Magic ( ) == COMPRESS_MAGIC )		1636070	2					
ANR	1636099	Condition	head . Magic ( ) == COMPRESS_MAGIC	869:5:24881:24910	1636070	0	True				
ANR	1636100	EqualityExpression	head . Magic ( ) == COMPRESS_MAGIC		1636070	0		==			
ANR	1636101	CallExpression	head . Magic ( )		1636070	0					
ANR	1636102	Callee	head . Magic		1636070	0					
ANR	1636103	MemberAccess	head . Magic		1636070	0					
ANR	1636104	Identifier	head		1636070	0					
ANR	1636105	Identifier	Magic		1636070	1					
ANR	1636106	ArgumentList			1636070	1					
ANR	1636107	Identifier	COMPRESS_MAGIC		1636070	1					
ANR	1636108	CompoundStatement		12:37:327:327	1636070	1					
ANR	1636109	IfStatement	if ( head . AltHeap ( ) == 0 )		1636070	0					
ANR	1636110	Condition	head . AltHeap ( ) == 0	870:6:24921:24939	1636070	0	True				
ANR	1636111	EqualityExpression	head . AltHeap ( ) == 0		1636070	0		==			
ANR	1636112	CallExpression	head . AltHeap ( )		1636070	0					
ANR	1636113	Callee	head . AltHeap		1636070	0					
ANR	1636114	MemberAccess	head . AltHeap		1636070	0					
ANR	1636115	Identifier	head		1636070	0					
ANR	1636116	Identifier	AltHeap		1636070	1					
ANR	1636117	ArgumentList			1636070	1					
ANR	1636118	PrimaryExpression	0		1636070	1					
ANR	1636119	CompoundStatement		13:27:356:356	1636070	1					
ANR	1636120	Statement	dprintf	871:3:24947:24953	1636070	0	True				
ANR	1636121	Statement	(	871:10:24954:24954	1636070	1	True				
ANR	1636122	Statement	D_ALWAYS	871:12:24956:24963	1636070	2	True				
ANR	1636123	Statement	","	871:20:24964:24964	1636070	3	True				
ANR	1636124	Statement	"""Checkpoint is compressed but no alt heap is """	871:22:24966:25011	1636070	4	True				
ANR	1636125	Statement	"""specified!  Aborting restart.\\n"""	872:6:25019:25051	1636070	5	True				
ANR	1636126	Statement	)	872:40:25053:25053	1636070	6	True				
ANR	1636127	ExpressionStatement		872:41:25054:25054	1636070	7	True				
ANR	1636128	Statement	fprintf	873:3:25059:25065	1636070	8	True				
ANR	1636129	Statement	(	873:10:25066:25066	1636070	9	True				
ANR	1636130	Statement	stderr	873:12:25068:25073	1636070	10	True				
ANR	1636131	Statement	","	873:18:25074:25074	1636070	11	True				
ANR	1636132	Statement	"""CONDOR ERROR: Checkpoint header is malformed. """	873:20:25076:25123	1636070	12	True				
ANR	1636133	Statement	"""Compression is specified without a corresponding alt """	874:6:25131:25185	1636070	13	True				
ANR	1636134	Statement	"""heap.\\n"""	875:6:25193:25201	1636070	14	True				
ANR	1636135	Statement	)	875:16:25203:25203	1636070	15	True				
ANR	1636136	ExpressionStatement		875:17:25204:25204	1636070	16	True				
ANR	1636137	ExpressionStatement	exit ( 1 )	876:3:25209:25218	1636070	17	True				
ANR	1636138	CallExpression	exit ( 1 )		1636070	0					
ANR	1636139	Callee	exit		1636070	0					
ANR	1636140	Identifier	exit		1636070	0					
ANR	1636141	ArgumentList	1		1636070	1					
ANR	1636142	Argument	1		1636070	0					
ANR	1636143	PrimaryExpression	1		1636070	0					
ANR	1636144	ExpressionStatement	"dprintf ( D_ALWAYS , ""Reading compressed segments...\\n"" )"	878:2:25226:25281	1636070	1	True				
ANR	1636145	CallExpression	"dprintf ( D_ALWAYS , ""Reading compressed segments...\\n"" )"		1636070	0					
ANR	1636146	Callee	dprintf		1636070	0					
ANR	1636147	Identifier	dprintf		1636070	0					
ANR	1636148	ArgumentList	D_ALWAYS		1636070	1					
ANR	1636149	Argument	D_ALWAYS		1636070	0					
ANR	1636150	Identifier	D_ALWAYS		1636070	0					
ANR	1636151	Argument	"""Reading compressed segments...\\n"""		1636070	1					
ANR	1636152	PrimaryExpression	"""Reading compressed segments...\\n"""		1636070	0					
ANR	1636153	ExpressionStatement	zstr = ( z_stream * ) condor_malloc ( sizeof ( z_stream ) )	879:2:25285:25336	1636070	2	True				
ANR	1636154	AssignmentExpression	zstr = ( z_stream * ) condor_malloc ( sizeof ( z_stream ) )		1636070	0		=			
ANR	1636155	Identifier	zstr		1636070	0					
ANR	1636156	CastExpression	( z_stream * ) condor_malloc ( sizeof ( z_stream ) )		1636070	1					
ANR	1636157	CastTarget	z_stream *		1636070	0					
ANR	1636158	CallExpression	condor_malloc ( sizeof ( z_stream ) )		1636070	1					
ANR	1636159	Callee	condor_malloc		1636070	0					
ANR	1636160	Identifier	condor_malloc		1636070	0					
ANR	1636161	ArgumentList	sizeof ( z_stream )		1636070	1					
ANR	1636162	Argument	sizeof ( z_stream )		1636070	0					
ANR	1636163	SizeofExpression	sizeof ( z_stream )		1636070	0					
ANR	1636164	Sizeof	sizeof		1636070	0					
ANR	1636165	SizeofOperand	z_stream		1636070	1					
ANR	1636166	IfStatement	if ( ! zstr )		1636070	3					
ANR	1636167	Condition	! zstr	880:6:25344:25348	1636070	0	True				
ANR	1636168	UnaryOperationExpression	! zstr		1636070	0					
ANR	1636169	UnaryOperator	!		1636070	0					
ANR	1636170	Identifier	zstr		1636070	1					
ANR	1636171	CompoundStatement		23:13:765:765	1636070	1					
ANR	1636172	ExpressionStatement	"dprintf ( D_ALWAYS , ""out of memory in condor_malloc!\\n"" )"	881:3:25356:25411	1636070	0	True				
ANR	1636173	CallExpression	"dprintf ( D_ALWAYS , ""out of memory in condor_malloc!\\n"" )"		1636070	0					
ANR	1636174	Callee	dprintf		1636070	0					
ANR	1636175	Identifier	dprintf		1636070	0					
ANR	1636176	ArgumentList	D_ALWAYS		1636070	1					
ANR	1636177	Argument	D_ALWAYS		1636070	0					
ANR	1636178	Identifier	D_ALWAYS		1636070	0					
ANR	1636179	Argument	"""out of memory in condor_malloc!\\n"""		1636070	1					
ANR	1636180	PrimaryExpression	"""out of memory in condor_malloc!\\n"""		1636070	0					
ANR	1636181	ExpressionStatement	Suicide ( )	882:3:25416:25425	1636070	1	True				
ANR	1636182	CallExpression	Suicide ( )		1636070	0					
ANR	1636183	Callee	Suicide		1636070	0					
ANR	1636184	Identifier	Suicide		1636070	0					
ANR	1636185	ArgumentList			1636070	1					
ANR	1636186	ExpressionStatement	zbuf = ( unsigned char * ) condor_malloc ( zbufsize )	884:2:25433:25480	1636070	4	True				
ANR	1636187	AssignmentExpression	zbuf = ( unsigned char * ) condor_malloc ( zbufsize )		1636070	0		=			
ANR	1636188	Identifier	zbuf		1636070	0					
ANR	1636189	CastExpression	( unsigned char * ) condor_malloc ( zbufsize )		1636070	1					
ANR	1636190	CastTarget	unsigned char *		1636070	0					
ANR	1636191	CallExpression	condor_malloc ( zbufsize )		1636070	1					
ANR	1636192	Callee	condor_malloc		1636070	0					
ANR	1636193	Identifier	condor_malloc		1636070	0					
ANR	1636194	ArgumentList	zbufsize		1636070	1					
ANR	1636195	Argument	zbufsize		1636070	0					
ANR	1636196	Identifier	zbufsize		1636070	0					
ANR	1636197	IfStatement	if ( ! zbuf )		1636070	5					
ANR	1636198	Condition	! zbuf	885:6:25488:25492	1636070	0	True				
ANR	1636199	UnaryOperationExpression	! zbuf		1636070	0					
ANR	1636200	UnaryOperator	!		1636070	0					
ANR	1636201	Identifier	zbuf		1636070	1					
ANR	1636202	CompoundStatement		28:13:909:909	1636070	1					
ANR	1636203	ExpressionStatement	"dprintf ( D_ALWAYS , ""out of memory in condor_malloc!\\n"" )"	886:3:25500:25555	1636070	0	True				
ANR	1636204	CallExpression	"dprintf ( D_ALWAYS , ""out of memory in condor_malloc!\\n"" )"		1636070	0					
ANR	1636205	Callee	dprintf		1636070	0					
ANR	1636206	Identifier	dprintf		1636070	0					
ANR	1636207	ArgumentList	D_ALWAYS		1636070	1					
ANR	1636208	Argument	D_ALWAYS		1636070	0					
ANR	1636209	Identifier	D_ALWAYS		1636070	0					
ANR	1636210	Argument	"""out of memory in condor_malloc!\\n"""		1636070	1					
ANR	1636211	PrimaryExpression	"""out of memory in condor_malloc!\\n"""		1636070	0					
ANR	1636212	ExpressionStatement	Suicide ( )	887:3:25560:25569	1636070	1	True				
ANR	1636213	CallExpression	Suicide ( )		1636070	0					
ANR	1636214	Callee	Suicide		1636070	0					
ANR	1636215	Identifier	Suicide		1636070	0					
ANR	1636216	ArgumentList			1636070	1					
ANR	1636217	ExpressionStatement	zstr -> zalloc = zalloc	889:2:25577:25598	1636070	6	True				
ANR	1636218	AssignmentExpression	zstr -> zalloc = zalloc		1636070	0		=			
ANR	1636219	PtrMemberAccess	zstr -> zalloc		1636070	0					
ANR	1636220	Identifier	zstr		1636070	0					
ANR	1636221	Identifier	zalloc		1636070	1					
ANR	1636222	Identifier	zalloc		1636070	1					
ANR	1636223	ExpressionStatement	zstr -> zfree = zfree	890:2:25602:25621	1636070	7	True				
ANR	1636224	AssignmentExpression	zstr -> zfree = zfree		1636070	0		=			
ANR	1636225	PtrMemberAccess	zstr -> zfree		1636070	0					
ANR	1636226	Identifier	zstr		1636070	0					
ANR	1636227	Identifier	zfree		1636070	1					
ANR	1636228	Identifier	zfree		1636070	1					
ANR	1636229	ExpressionStatement	zstr -> opaque = Z_NULL	891:2:25625:25646	1636070	8	True				
ANR	1636230	AssignmentExpression	zstr -> opaque = Z_NULL		1636070	0		=			
ANR	1636231	PtrMemberAccess	zstr -> opaque		1636070	0					
ANR	1636232	Identifier	zstr		1636070	0					
ANR	1636233	Identifier	opaque		1636070	1					
ANR	1636234	Identifier	Z_NULL		1636070	1					
ANR	1636235	IfStatement	if ( inflateInit ( zstr ) != Z_OK )		1636070	9					
ANR	1636236	Condition	inflateInit ( zstr ) != Z_OK	892:6:25654:25678	1636070	0	True				
ANR	1636237	EqualityExpression	inflateInit ( zstr ) != Z_OK		1636070	0		!=			
ANR	1636238	CallExpression	inflateInit ( zstr )		1636070	0					
ANR	1636239	Callee	inflateInit		1636070	0					
ANR	1636240	Identifier	inflateInit		1636070	0					
ANR	1636241	ArgumentList	zstr		1636070	1					
ANR	1636242	Argument	zstr		1636070	0					
ANR	1636243	Identifier	zstr		1636070	0					
ANR	1636244	Identifier	Z_OK		1636070	1					
ANR	1636245	CompoundStatement		35:33:1095:1095	1636070	1					
ANR	1636246	ExpressionStatement	"dprintf ( D_ALWAYS , ""zlib (inflateInit): %s\\n"" , zstr -> msg )"	893:3:25686:25744	1636070	0	True				
ANR	1636247	CallExpression	"dprintf ( D_ALWAYS , ""zlib (inflateInit): %s\\n"" , zstr -> msg )"		1636070	0					
ANR	1636248	Callee	dprintf		1636070	0					
ANR	1636249	Identifier	dprintf		1636070	0					
ANR	1636250	ArgumentList	D_ALWAYS		1636070	1					
ANR	1636251	Argument	D_ALWAYS		1636070	0					
ANR	1636252	Identifier	D_ALWAYS		1636070	0					
ANR	1636253	Argument	"""zlib (inflateInit): %s\\n"""		1636070	1					
ANR	1636254	PrimaryExpression	"""zlib (inflateInit): %s\\n"""		1636070	0					
ANR	1636255	Argument	zstr -> msg		1636070	2					
ANR	1636256	PtrMemberAccess	zstr -> msg		1636070	0					
ANR	1636257	Identifier	zstr		1636070	0					
ANR	1636258	Identifier	msg		1636070	1					
ANR	1636259	ExpressionStatement	Suicide ( )	894:3:25749:25758	1636070	1	True				
ANR	1636260	CallExpression	Suicide ( )		1636070	0					
ANR	1636261	Callee	Suicide		1636070	0					
ANR	1636262	Identifier	Suicide		1636070	0					
ANR	1636263	ArgumentList			1636070	1					
ANR	1636264	ExpressionStatement	RestoreAllSegsExceptStack ( )	902:1:25894:25921	1636070	3	True				
ANR	1636265	CallExpression	RestoreAllSegsExceptStack ( )		1636070	0					
ANR	1636266	Callee	RestoreAllSegsExceptStack		1636070	0					
ANR	1636267	Identifier	RestoreAllSegsExceptStack		1636070	0					
ANR	1636268	ArgumentList			1636070	1					
ANR	1636269	ExpressionStatement	fd = save_fd	907:1:26120:26132	1636070	4	True				
ANR	1636270	AssignmentExpression	fd = save_fd		1636070	0		=			
ANR	1636271	Identifier	fd		1636070	0					
ANR	1636272	Identifier	save_fd		1636070	1					
ANR	1636273	ExpressionStatement	_condor_gtodc_init ( _condor_global_gtodc )	915:1:26515:26555	1636070	5	True				
ANR	1636274	CallExpression	_condor_gtodc_init ( _condor_global_gtodc )		1636070	0					
ANR	1636275	Callee	_condor_gtodc_init		1636070	0					
ANR	1636276	Identifier	_condor_gtodc_init		1636070	0					
ANR	1636277	ArgumentList	_condor_global_gtodc		1636070	1					
ANR	1636278	Argument	_condor_global_gtodc		1636070	0					
ANR	1636279	Identifier	_condor_global_gtodc		1636070	0					
ANR	1636280	ExpressionStatement	"dprintf ( D_CKPT , ""About to execute on TmpStk\\n"" )"	920:1:26724:26771	1636070	6	True				
ANR	1636281	CallExpression	"dprintf ( D_CKPT , ""About to execute on TmpStk\\n"" )"		1636070	0					
ANR	1636282	Callee	dprintf		1636070	0					
ANR	1636283	Identifier	dprintf		1636070	0					
ANR	1636284	ArgumentList	D_CKPT		1636070	1					
ANR	1636285	Argument	D_CKPT		1636070	0					
ANR	1636286	Identifier	D_CKPT		1636070	0					
ANR	1636287	Argument	"""About to execute on TmpStk\\n"""		1636070	1					
ANR	1636288	PrimaryExpression	"""About to execute on TmpStk\\n"""		1636070	0					
ANR	1636289	ExpressionStatement	ExecuteOnTmpStk ( RestoreStack )	921:1:26774:26805	1636070	7	True				
ANR	1636290	CallExpression	ExecuteOnTmpStk ( RestoreStack )		1636070	0					
ANR	1636291	Callee	ExecuteOnTmpStk		1636070	0					
ANR	1636292	Identifier	ExecuteOnTmpStk		1636070	0					
ANR	1636293	ArgumentList	RestoreStack		1636070	1					
ANR	1636294	Argument	RestoreStack		1636070	0					
ANR	1636295	Identifier	RestoreStack		1636070	0					
ANR	1636296	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error: reached code past the restore point!\\n"" )"	924:1:26866:26934	1636070	8	True				
ANR	1636297	CallExpression	"dprintf ( D_ALWAYS , ""Error: reached code past the restore point!\\n"" )"		1636070	0					
ANR	1636298	Callee	dprintf		1636070	0					
ANR	1636299	Identifier	dprintf		1636070	0					
ANR	1636300	ArgumentList	D_ALWAYS		1636070	1					
ANR	1636301	Argument	D_ALWAYS		1636070	0					
ANR	1636302	Identifier	D_ALWAYS		1636070	0					
ANR	1636303	Argument	"""Error: reached code past the restore point!\\n"""		1636070	1					
ANR	1636304	PrimaryExpression	"""Error: reached code past the restore point!\\n"""		1636070	0					
ANR	1636305	ExpressionStatement	Suicide ( )	925:1:26937:26946	1636070	9	True				
ANR	1636306	CallExpression	Suicide ( )		1636070	0					
ANR	1636307	Callee	Suicide		1636070	0					
ANR	1636308	Identifier	Suicide		1636070	0					
ANR	1636309	ArgumentList			1636070	1					
ANR	1636310	ReturnType	void		1636070	1					
ANR	1636311	Identifier	Image :: Restore		1636070	2					
ANR	1636312	ParameterList			1636070	3					
ANR	1636313	CFGEntryNode	ENTRY		1636070		True				
ANR	1636314	CFGExitNode	EXIT		1636070		True				
ANR	1636315	Symbol	save_fd		1636070						
ANR	1636316	Symbol	zbuf		1636070						
ANR	1636317	Symbol	zfree		1636070						
ANR	1636318	Symbol	zstr -> zalloc		1636070						
ANR	1636319	Symbol	_condor_global_gtodc		1636070						
ANR	1636320	Symbol	zalloc		1636070						
ANR	1636321	Symbol	D_CKPT		1636070						
ANR	1636322	Symbol	head . Magic		1636070						
ANR	1636323	Symbol	COMPRESS_MAGIC		1636070						
ANR	1636324	Symbol	D_ALWAYS		1636070						
ANR	1636325	Symbol	inflateInit		1636070						
ANR	1636326	Symbol	* zstr		1636070						
ANR	1636327	Symbol	zstr -> opaque		1636070						
ANR	1636328	Symbol	Z_OK		1636070						
ANR	1636329	Symbol	zstr		1636070						
ANR	1636330	Symbol	head		1636070						
ANR	1636331	Symbol	condor_malloc		1636070						
ANR	1636332	Symbol	RestoreStack		1636070						
ANR	1636333	Symbol	zstr -> msg		1636070						
ANR	1636334	Symbol	head . AltHeap		1636070						
ANR	1636335	Symbol	zbufsize		1636070						
ANR	1636336	Symbol	zstr -> zfree		1636070						
ANR	1636337	Symbol	fd		1636070						
ANR	1636338	Symbol	Z_NULL		1636070						
ANR	1636339	Function	memcpy	932:0:27147:27346							
ANR	1636340	FunctionDef	"memcpy (void * s1 , const void * s2 , size_t n)"		1636339	0					
ANR	1636341	CompoundStatement		933:0:27196:27346	1636339	0					
ANR	1636342	IdentifierDeclStatement	char * cs1 = NULL ;	934:1:27199:27215	1636339	0	True				
ANR	1636343	IdentifierDecl	* cs1 = NULL		1636339	0					
ANR	1636344	IdentifierDeclType	char *		1636339	0					
ANR	1636345	Identifier	cs1		1636339	1					
ANR	1636346	AssignmentExpression	* cs1 = NULL		1636339	2		=			
ANR	1636347	Identifier	NULL		1636339	0					
ANR	1636348	Identifier	NULL		1636339	1					
ANR	1636349	IdentifierDeclStatement	char * cs2 = NULL ;	935:1:27218:27234	1636339	1	True				
ANR	1636350	IdentifierDecl	* cs2 = NULL		1636339	0					
ANR	1636351	IdentifierDeclType	char *		1636339	0					
ANR	1636352	Identifier	cs2		1636339	1					
ANR	1636353	AssignmentExpression	* cs2 = NULL		1636339	2		=			
ANR	1636354	Identifier	NULL		1636339	0					
ANR	1636355	Identifier	NULL		1636339	1					
ANR	1636356	IdentifierDeclStatement	void * r = s1 ;	936:1:27237:27249	1636339	2	True				
ANR	1636357	IdentifierDecl	* r = s1		1636339	0					
ANR	1636358	IdentifierDeclType	void *		1636339	0					
ANR	1636359	Identifier	r		1636339	1					
ANR	1636360	AssignmentExpression	* r = s1		1636339	2		=			
ANR	1636361	Identifier	s1		1636339	0					
ANR	1636362	Identifier	s1		1636339	1					
ANR	1636363	ExpressionStatement	cs1 = ( char * ) s1	938:1:27253:27268	1636339	3	True				
ANR	1636364	AssignmentExpression	cs1 = ( char * ) s1		1636339	0		=			
ANR	1636365	Identifier	cs1		1636339	0					
ANR	1636366	CastExpression	( char * ) s1		1636339	1					
ANR	1636367	CastTarget	char *		1636339	0					
ANR	1636368	Identifier	s1		1636339	1					
ANR	1636369	ExpressionStatement	cs2 = ( char * ) s2	939:1:27271:27286	1636339	4	True				
ANR	1636370	AssignmentExpression	cs2 = ( char * ) s2		1636339	0		=			
ANR	1636371	Identifier	cs2		1636339	0					
ANR	1636372	CastExpression	( char * ) s2		1636339	1					
ANR	1636373	CastTarget	char *		1636339	0					
ANR	1636374	Identifier	s2		1636339	1					
ANR	1636375	WhileStatement	while ( n > 0 )		1636339	5					
ANR	1636376	Condition	n > 0	941:8:27297:27301	1636339	0	True				
ANR	1636377	RelationalExpression	n > 0		1636339	0		>			
ANR	1636378	Identifier	n		1636339	0					
ANR	1636379	PrimaryExpression	0		1636339	1					
ANR	1636380	CompoundStatement		9:15:107:107	1636339	1					
ANR	1636381	ExpressionStatement	* cs1 ++ = * cs2 ++	942:2:27308:27323	1636339	0	True				
ANR	1636382	AssignmentExpression	* cs1 ++ = * cs2 ++		1636339	0		=			
ANR	1636383	UnaryOperationExpression	* cs1 ++		1636339	0					
ANR	1636384	UnaryOperator	*		1636339	0					
ANR	1636385	PostIncDecOperationExpression	cs1 ++		1636339	1					
ANR	1636386	Identifier	cs1		1636339	0					
ANR	1636387	IncDec	++		1636339	1					
ANR	1636388	UnaryOperationExpression	* cs2 ++		1636339	1					
ANR	1636389	UnaryOperator	*		1636339	0					
ANR	1636390	PostIncDecOperationExpression	cs2 ++		1636339	1					
ANR	1636391	Identifier	cs2		1636339	0					
ANR	1636392	IncDec	++		1636339	1					
ANR	1636393	ExpressionStatement	n --	943:2:27327:27330	1636339	1	True				
ANR	1636394	PostIncDecOperationExpression	n --		1636339	0					
ANR	1636395	Identifier	n		1636339	0					
ANR	1636396	IncDec	--		1636339	1					
ANR	1636397	ReturnStatement	return r ;	945:1:27336:27344	1636339	6	True				
ANR	1636398	Identifier	r		1636339	0					
ANR	1636399	ReturnType	void *		1636339	1					
ANR	1636400	Identifier	memcpy		1636339	2					
ANR	1636401	ParameterList	"void * s1 , const void * s2 , size_t n"		1636339	3					
ANR	1636402	Parameter	void * s1	932:13:27160:27167	1636339	0	True				
ANR	1636403	ParameterType	void *		1636339	0					
ANR	1636404	Identifier	s1		1636339	1					
ANR	1636405	Parameter	const void * s2	932:23:27170:27183	1636339	1	True				
ANR	1636406	ParameterType	const void *		1636339	0					
ANR	1636407	Identifier	s2		1636339	1					
ANR	1636408	Parameter	size_t n	932:39:27186:27193	1636339	2	True				
ANR	1636409	ParameterType	size_t		1636339	0					
ANR	1636410	Identifier	n		1636339	1					
ANR	1636411	CFGEntryNode	ENTRY		1636339		True				
ANR	1636412	CFGExitNode	EXIT		1636339		True				
ANR	1636413	Symbol	cs1		1636339						
ANR	1636414	Symbol	* cs2 ++		1636339						
ANR	1636415	Symbol	r		1636339						
ANR	1636416	Symbol	NULL		1636339						
ANR	1636417	Symbol	cs2		1636339						
ANR	1636418	Symbol	* cs1 ++		1636339						
ANR	1636419	Symbol	s1		1636339						
ANR	1636420	Symbol	n		1636339						
ANR	1636421	Symbol	s2		1636339						
ANR	1636422	Function	_memcpy	947:0:27348:27427							
ANR	1636423	FunctionDef	"_memcpy (void * s1 , const void * s2 , size_t n)"		1636422	0					
ANR	1636424	CompoundStatement		948:0:27398:27427	1636422	0					
ANR	1636425	ReturnStatement	"return memcpy ( s1 , s2 , n ) ;"	949:1:27401:27425	1636422	0	True				
ANR	1636426	CallExpression	"memcpy ( s1 , s2 , n )"		1636422	0					
ANR	1636427	Callee	memcpy		1636422	0					
ANR	1636428	Identifier	memcpy		1636422	0					
ANR	1636429	ArgumentList	s1		1636422	1					
ANR	1636430	Argument	s1		1636422	0					
ANR	1636431	Identifier	s1		1636422	0					
ANR	1636432	Argument	s2		1636422	1					
ANR	1636433	Identifier	s2		1636422	0					
ANR	1636434	Argument	n		1636422	2					
ANR	1636435	Identifier	n		1636422	0					
ANR	1636436	ReturnType	void *		1636422	1					
ANR	1636437	Identifier	_memcpy		1636422	2					
ANR	1636438	ParameterList	"void * s1 , const void * s2 , size_t n"		1636422	3					
ANR	1636439	Parameter	void * s1	947:14:27362:27369	1636422	0	True				
ANR	1636440	ParameterType	void *		1636422	0					
ANR	1636441	Identifier	s1		1636422	1					
ANR	1636442	Parameter	const void * s2	947:24:27372:27385	1636422	1	True				
ANR	1636443	ParameterType	const void *		1636422	0					
ANR	1636444	Identifier	s2		1636422	1					
ANR	1636445	Parameter	size_t n	947:40:27388:27395	1636422	2	True				
ANR	1636446	ParameterType	size_t		1636422	0					
ANR	1636447	Identifier	n		1636422	1					
ANR	1636448	CFGEntryNode	ENTRY		1636422		True				
ANR	1636449	CFGExitNode	EXIT		1636422		True				
ANR	1636450	Symbol	memcpy		1636422						
ANR	1636451	Symbol	s1		1636422						
ANR	1636452	Symbol	n		1636422						
ANR	1636453	Symbol	s2		1636422						
ANR	1636454	Function	mystrcmp	955:0:27512:27682							
ANR	1636455	FunctionDef	"mystrcmp (const char * str1 , const char * str2)"		1636454	0					
ANR	1636456	CompoundStatement		956:0:27568:27682	1636454	0					
ANR	1636457	WhileStatement	while ( * str1 != '\\0' && * str2 != '\\0' && * str1 == * str2 )		1636454	0					
ANR	1636458	Condition	* str1 != '\\0' && * str2 != '\\0' && * str1 == * str2	957:8:27578:27625	1636454	0	True				
ANR	1636459	AndExpression	* str1 != '\\0' && * str2 != '\\0' && * str1 == * str2		1636454	0		&&			
ANR	1636460	EqualityExpression	* str1 != '\\0'		1636454	0		!=			
ANR	1636461	UnaryOperationExpression	* str1		1636454	0					
ANR	1636462	UnaryOperator	*		1636454	0					
ANR	1636463	Identifier	str1		1636454	1					
ANR	1636464	PrimaryExpression	'\\0'		1636454	1					
ANR	1636465	AndExpression	* str2 != '\\0' && * str1 == * str2		1636454	1		&&			
ANR	1636466	EqualityExpression	* str2 != '\\0'		1636454	0		!=			
ANR	1636467	UnaryOperationExpression	* str2		1636454	0					
ANR	1636468	UnaryOperator	*		1636454	0					
ANR	1636469	Identifier	str2		1636454	1					
ANR	1636470	PrimaryExpression	'\\0'		1636454	1					
ANR	1636471	EqualityExpression	* str1 == * str2		1636454	1		==			
ANR	1636472	UnaryOperationExpression	* str1		1636454	0					
ANR	1636473	UnaryOperator	*		1636454	0					
ANR	1636474	Identifier	str1		1636454	1					
ANR	1636475	UnaryOperationExpression	* str2		1636454	1					
ANR	1636476	UnaryOperator	*		1636454	0					
ANR	1636477	Identifier	str2		1636454	1					
ANR	1636478	CompoundStatement		2:58:59:59	1636454	1					
ANR	1636479	ExpressionStatement	str1 ++	958:2:27632:27638	1636454	0	True				
ANR	1636480	PostIncDecOperationExpression	str1 ++		1636454	0					
ANR	1636481	Identifier	str1		1636454	0					
ANR	1636482	IncDec	++		1636454	1					
ANR	1636483	ExpressionStatement	str2 ++	959:2:27642:27648	1636454	1	True				
ANR	1636484	PostIncDecOperationExpression	str2 ++		1636454	0					
ANR	1636485	Identifier	str2		1636454	0					
ANR	1636486	IncDec	++		1636454	1					
ANR	1636487	ReturnStatement	return ( int ) * str1 - * str2 ;	961:1:27654:27680	1636454	1	True				
ANR	1636488	AdditiveExpression	( int ) * str1 - * str2		1636454	0		-			
ANR	1636489	CastExpression	( int ) * str1		1636454	0					
ANR	1636490	CastTarget	int		1636454	0					
ANR	1636491	UnaryOperationExpression	* str1		1636454	1					
ANR	1636492	UnaryOperator	*		1636454	0					
ANR	1636493	Identifier	str1		1636454	1					
ANR	1636494	UnaryOperationExpression	* str2		1636454	1					
ANR	1636495	UnaryOperator	*		1636454	0					
ANR	1636496	Identifier	str2		1636454	1					
ANR	1636497	ReturnType	static int		1636454	1					
ANR	1636498	Identifier	mystrcmp		1636454	2					
ANR	1636499	ParameterList	"const char * str1 , const char * str2"		1636454	3					
ANR	1636500	Parameter	const char * str1	955:20:27532:27547	1636454	0	True				
ANR	1636501	ParameterType	const char *		1636454	0					
ANR	1636502	Identifier	str1		1636454	1					
ANR	1636503	Parameter	const char * str2	955:38:27550:27565	1636454	1	True				
ANR	1636504	ParameterType	const char *		1636454	0					
ANR	1636505	Identifier	str2		1636454	1					
ANR	1636506	CFGEntryNode	ENTRY		1636454		True				
ANR	1636507	CFGExitNode	EXIT		1636454		True				
ANR	1636508	Symbol	* str1		1636454						
ANR	1636509	Symbol	* str2		1636454						
ANR	1636510	Symbol	str1		1636454						
ANR	1636511	Symbol	str2		1636454						
ANR	1636512	DeclStmt									
ANR	1636513	Decl							int	int ( void )	GETPAGESIZE
ANR	1636514	Function	GETPAGESIZE	967:0:27756:28014							
ANR	1636515	FunctionDef	GETPAGESIZE ()		1636514	0					
ANR	1636516	CompoundStatement		968:0:27785:28014	1636514	0					
ANR	1636517	ReturnStatement	return SYSCALL ( SYS_getpagesize ) ;	970:1:27817:27848	1636514	0	True				
ANR	1636518	CallExpression	SYSCALL ( SYS_getpagesize )		1636514	0					
ANR	1636519	Callee	SYSCALL		1636514	0					
ANR	1636520	Identifier	SYSCALL		1636514	0					
ANR	1636521	ArgumentList	SYS_getpagesize		1636514	1					
ANR	1636522	Argument	SYS_getpagesize		1636514	0					
ANR	1636523	Identifier	SYS_getpagesize		1636514	0					
ANR	1636524	ReturnType	static int		1636514	1					
ANR	1636525	Identifier	GETPAGESIZE		1636514	2					
ANR	1636526	ParameterList			1636514	3					
ANR	1636527	CFGEntryNode	ENTRY		1636514		True				
ANR	1636528	CFGExitNode	EXIT		1636514		True				
ANR	1636529	Symbol	SYS_getpagesize		1636514						
ANR	1636530	Symbol	SYSCALL		1636514						
ANR	1636531	Function	Image :: RestoreSeg	979:0:28024:28480							
ANR	1636532	FunctionDef	Image :: RestoreSeg (const char * seg_name)		1636531	0					
ANR	1636533	CompoundStatement		981:0:28071:28480	1636531	0					
ANR	1636534	IdentifierDeclStatement	int i ;	982:1:28074:28080	1636531	0	True				
ANR	1636535	IdentifierDecl	i		1636531	0					
ANR	1636536	IdentifierDeclType	int		1636531	0					
ANR	1636537	Identifier	i		1636531	1					
ANR	1636538	ForStatement	for ( i = 0 ; i < head . N_Segs ( ) ; i ++ )		1636531	1					
ANR	1636539	ForInit	i = 0 ;	984:6:28089:28092	1636531	0	True				
ANR	1636540	AssignmentExpression	i = 0		1636531	0		=			
ANR	1636541	Identifier	i		1636531	0					
ANR	1636542	PrimaryExpression	0		1636531	1					
ANR	1636543	Condition	i < head . N_Segs ( )	984:11:28094:28108	1636531	1	True				
ANR	1636544	RelationalExpression	i < head . N_Segs ( )		1636531	0		<			
ANR	1636545	Identifier	i		1636531	0					
ANR	1636546	CallExpression	head . N_Segs ( )		1636531	1					
ANR	1636547	Callee	head . N_Segs		1636531	0					
ANR	1636548	MemberAccess	head . N_Segs		1636531	0					
ANR	1636549	Identifier	head		1636531	0					
ANR	1636550	Identifier	N_Segs		1636531	1					
ANR	1636551	ArgumentList			1636531	1					
ANR	1636552	PostIncDecOperationExpression	i ++	984:28:28111:28113	1636531	2	True				
ANR	1636553	Identifier	i		1636531	0					
ANR	1636554	IncDec	++		1636531	1					
ANR	1636555	CompoundStatement		4:34:45:45	1636531	3					
ANR	1636556	IfStatement	"if ( mystrcmp ( seg_name , map [ i ] . GetName ( ) ) == 0 )"		1636531	0					
ANR	1636557	Condition	"mystrcmp ( seg_name , map [ i ] . GetName ( ) ) == 0"	985:6:28125:28164	1636531	0	True				
ANR	1636558	EqualityExpression	"mystrcmp ( seg_name , map [ i ] . GetName ( ) ) == 0"		1636531	0		==			
ANR	1636559	CallExpression	"mystrcmp ( seg_name , map [ i ] . GetName ( ) )"		1636531	0					
ANR	1636560	Callee	mystrcmp		1636531	0					
ANR	1636561	Identifier	mystrcmp		1636531	0					
ANR	1636562	ArgumentList	seg_name		1636531	1					
ANR	1636563	Argument	seg_name		1636531	0					
ANR	1636564	Identifier	seg_name		1636531	0					
ANR	1636565	Argument	map [ i ] . GetName ( )		1636531	1					
ANR	1636566	CallExpression	map [ i ] . GetName ( )		1636531	0					
ANR	1636567	Callee	map [ i ] . GetName		1636531	0					
ANR	1636568	MemberAccess	map [ i ] . GetName		1636531	0					
ANR	1636569	ArrayIndexing	map [ i ]		1636531	0					
ANR	1636570	Identifier	map		1636531	0					
ANR	1636571	Identifier	i		1636531	1					
ANR	1636572	Identifier	GetName		1636531	1					
ANR	1636573	ArgumentList			1636531	1					
ANR	1636574	PrimaryExpression	0		1636531	1					
ANR	1636575	CompoundStatement		5:49:96:96	1636531	1					
ANR	1636576	IfStatement	"if ( ( pos = map [ i ] . Read ( fd , pos ) ) < 0 )"		1636531	0					
ANR	1636577	Condition	"( pos = map [ i ] . Read ( fd , pos ) ) < 0"	986:7:28177:28207	1636531	0	True				
ANR	1636578	RelationalExpression	"( pos = map [ i ] . Read ( fd , pos ) ) < 0"		1636531	0		<			
ANR	1636579	AssignmentExpression	"pos = map [ i ] . Read ( fd , pos )"		1636531	0		=			
ANR	1636580	Identifier	pos		1636531	0					
ANR	1636581	CallExpression	"map [ i ] . Read ( fd , pos )"		1636531	1					
ANR	1636582	Callee	map [ i ] . Read		1636531	0					
ANR	1636583	MemberAccess	map [ i ] . Read		1636531	0					
ANR	1636584	ArrayIndexing	map [ i ]		1636531	0					
ANR	1636585	Identifier	map		1636531	0					
ANR	1636586	Identifier	i		1636531	1					
ANR	1636587	Identifier	Read		1636531	1					
ANR	1636588	ArgumentList	fd		1636531	1					
ANR	1636589	Argument	fd		1636531	0					
ANR	1636590	Identifier	fd		1636531	0					
ANR	1636591	Argument	pos		1636531	1					
ANR	1636592	Identifier	pos		1636531	0					
ANR	1636593	PrimaryExpression	0		1636531	1					
ANR	1636594	CompoundStatement		6:41:139:139	1636531	1					
ANR	1636595	ExpressionStatement	"dprintf ( D_ALWAYS , ""SegMap::Read() failed!\\n"" )"	987:4:28217:28262	1636531	0	True				
ANR	1636596	CallExpression	"dprintf ( D_ALWAYS , ""SegMap::Read() failed!\\n"" )"		1636531	0					
ANR	1636597	Callee	dprintf		1636531	0					
ANR	1636598	Identifier	dprintf		1636531	0					
ANR	1636599	ArgumentList	D_ALWAYS		1636531	1					
ANR	1636600	Argument	D_ALWAYS		1636531	0					
ANR	1636601	Identifier	D_ALWAYS		1636531	0					
ANR	1636602	Argument	"""SegMap::Read() failed!\\n"""		1636531	1					
ANR	1636603	PrimaryExpression	"""SegMap::Read() failed!\\n"""		1636531	0					
ANR	1636604	ExpressionStatement	Suicide ( )	988:4:28268:28277	1636531	1	True				
ANR	1636605	CallExpression	Suicide ( )		1636531	0					
ANR	1636606	Callee	Suicide		1636531	0					
ANR	1636607	Identifier	Suicide		1636531	0					
ANR	1636608	ArgumentList			1636531	1					
ANR	1636609	ElseStatement	else		1636531	0					
ANR	1636610	CompoundStatement		9:10:217:217	1636531	0					
ANR	1636611	ReturnStatement	return ;	990:4:28295:28301	1636531	0	True				
ANR	1636612	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't find segment \\""%s\\""\\n"" , seg_name )"	994:1:28316:28376	1636531	2	True				
ANR	1636613	CallExpression	"dprintf ( D_ALWAYS , ""Can't find segment \\""%s\\""\\n"" , seg_name )"		1636531	0					
ANR	1636614	Callee	dprintf		1636531	0					
ANR	1636615	Identifier	dprintf		1636531	0					
ANR	1636616	ArgumentList	D_ALWAYS		1636531	1					
ANR	1636617	Argument	D_ALWAYS		1636531	0					
ANR	1636618	Identifier	D_ALWAYS		1636531	0					
ANR	1636619	Argument	"""Can't find segment \\""%s\\""\\n"""		1636531	1					
ANR	1636620	PrimaryExpression	"""Can't find segment \\""%s\\""\\n"""		1636531	0					
ANR	1636621	Argument	seg_name		1636531	2					
ANR	1636622	Identifier	seg_name		1636531	0					
ANR	1636623	ExpressionStatement	"fprintf ( stderr , ""CONDOR ERROR: can't find segment \\""%s\\"" on restart\\n"" , seg_name )"	995:1:28379:28466	1636531	3	True				
ANR	1636624	CallExpression	"fprintf ( stderr , ""CONDOR ERROR: can't find segment \\""%s\\"" on restart\\n"" , seg_name )"		1636531	0					
ANR	1636625	Callee	fprintf		1636531	0					
ANR	1636626	Identifier	fprintf		1636531	0					
ANR	1636627	ArgumentList	stderr		1636531	1					
ANR	1636628	Argument	stderr		1636531	0					
ANR	1636629	Identifier	stderr		1636531	0					
ANR	1636630	Argument	"""CONDOR ERROR: can't find segment \\""%s\\"" on restart\\n"""		1636531	1					
ANR	1636631	PrimaryExpression	"""CONDOR ERROR: can't find segment \\""%s\\"" on restart\\n"""		1636531	0					
ANR	1636632	Argument	seg_name		1636531	2					
ANR	1636633	Identifier	seg_name		1636531	0					
ANR	1636634	ExpressionStatement	exit ( 1 )	997:1:28469:28478	1636531	4	True				
ANR	1636635	CallExpression	exit ( 1 )		1636531	0					
ANR	1636636	Callee	exit		1636531	0					
ANR	1636637	Identifier	exit		1636531	0					
ANR	1636638	ArgumentList	1		1636531	1					
ANR	1636639	Argument	1		1636531	0					
ANR	1636640	PrimaryExpression	1		1636531	0					
ANR	1636641	ReturnType	void		1636531	1					
ANR	1636642	Identifier	Image :: RestoreSeg		1636531	2					
ANR	1636643	ParameterList	const char * seg_name		1636531	3					
ANR	1636644	Parameter	const char * seg_name	980:19:28048:28067	1636531	0	True				
ANR	1636645	ParameterType	const char *		1636531	0					
ANR	1636646	Identifier	seg_name		1636531	1					
ANR	1636647	CFGEntryNode	ENTRY		1636531		True				
ANR	1636648	CFGExitNode	EXIT		1636531		True				
ANR	1636649	Symbol	map [ i ] . Read		1636531						
ANR	1636650	Symbol	* map		1636531						
ANR	1636651	Symbol	mystrcmp		1636531						
ANR	1636652	Symbol	D_ALWAYS		1636531						
ANR	1636653	Symbol	i		1636531						
ANR	1636654	Symbol	stderr		1636531						
ANR	1636655	Symbol	head		1636531						
ANR	1636656	Symbol	head . N_Segs		1636531						
ANR	1636657	Symbol	* i		1636531						
ANR	1636658	Symbol	map [ i ] . GetName		1636531						
ANR	1636659	Symbol	pos		1636531						
ANR	1636660	Symbol	seg_name		1636531						
ANR	1636661	Symbol	map		1636531						
ANR	1636662	Symbol	fd		1636531						
ANR	1636663	Function	Image :: RestoreAllSegsExceptStack	1000:0:28483:29127							
ANR	1636664	FunctionDef	Image :: RestoreAllSegsExceptStack ()		1636663	0					
ANR	1636665	CompoundStatement		1001:0:28523:29127	1636663	0					
ANR	1636666	IdentifierDeclStatement	int i ;	1002:1:28526:28532	1636663	0	True				
ANR	1636667	IdentifierDecl	i		1636663	0					
ANR	1636668	IdentifierDeclType	int		1636663	0					
ANR	1636669	Identifier	i		1636663	1					
ANR	1636670	IdentifierDeclStatement	int save_fd = fd ;	1003:1:28535:28552	1636663	1	True				
ANR	1636671	IdentifierDecl	save_fd = fd		1636663	0					
ANR	1636672	IdentifierDeclType	int		1636663	0					
ANR	1636673	Identifier	save_fd		1636663	1					
ANR	1636674	AssignmentExpression	save_fd = fd		1636663	2		=			
ANR	1636675	Identifier	fd		1636663	0					
ANR	1636676	Identifier	fd		1636663	1					
ANR	1636677	ExpressionStatement	"dprintf ( D_ALWAYS , ""Current segmap dump follows\\n"" )"	1006:1:28577:28628	1636663	2	True				
ANR	1636678	CallExpression	"dprintf ( D_ALWAYS , ""Current segmap dump follows\\n"" )"		1636663	0					
ANR	1636679	Callee	dprintf		1636663	0					
ANR	1636680	Identifier	dprintf		1636663	0					
ANR	1636681	ArgumentList	D_ALWAYS		1636663	1					
ANR	1636682	Argument	D_ALWAYS		1636663	0					
ANR	1636683	Identifier	D_ALWAYS		1636663	0					
ANR	1636684	Argument	"""Current segmap dump follows\\n"""		1636663	1					
ANR	1636685	PrimaryExpression	"""Current segmap dump follows\\n"""		1636663	0					
ANR	1636686	ExpressionStatement	display_prmap ( )	1007:1:28631:28646	1636663	3	True				
ANR	1636687	CallExpression	display_prmap ( )		1636663	0					
ANR	1636688	Callee	display_prmap		1636663	0					
ANR	1636689	Identifier	display_prmap		1636663	0					
ANR	1636690	ArgumentList			1636663	1					
ANR	1636691	ForStatement	for ( i = 0 ; i < head . N_Segs ( ) ; i ++ )		1636663	4					
ANR	1636692	ForInit	i = 0 ;	1009:6:28661:28664	1636663	0	True				
ANR	1636693	AssignmentExpression	i = 0		1636663	0		=			
ANR	1636694	Identifier	i		1636663	0					
ANR	1636695	PrimaryExpression	0		1636663	1					
ANR	1636696	Condition	i < head . N_Segs ( )	1009:11:28666:28680	1636663	1	True				
ANR	1636697	RelationalExpression	i < head . N_Segs ( )		1636663	0		<			
ANR	1636698	Identifier	i		1636663	0					
ANR	1636699	CallExpression	head . N_Segs ( )		1636663	1					
ANR	1636700	Callee	head . N_Segs		1636663	0					
ANR	1636701	MemberAccess	head . N_Segs		1636663	0					
ANR	1636702	Identifier	head		1636663	0					
ANR	1636703	Identifier	N_Segs		1636663	1					
ANR	1636704	ArgumentList			1636663	1					
ANR	1636705	PostIncDecOperationExpression	i ++	1009:28:28683:28685	1636663	2	True				
ANR	1636706	Identifier	i		1636663	0					
ANR	1636707	IncDec	++		1636663	1					
ANR	1636708	CompoundStatement		9:34:165:165	1636663	3					
ANR	1636709	IfStatement	"if ( mystrcmp ( ""STACK"" , map [ i ] . GetName ( ) ) != 0 )"		1636663	0					
ANR	1636710	Condition	"mystrcmp ( ""STACK"" , map [ i ] . GetName ( ) ) != 0"	1010:6:28697:28735	1636663	0	True				
ANR	1636711	EqualityExpression	"mystrcmp ( ""STACK"" , map [ i ] . GetName ( ) ) != 0"		1636663	0		!=			
ANR	1636712	CallExpression	"mystrcmp ( ""STACK"" , map [ i ] . GetName ( ) )"		1636663	0					
ANR	1636713	Callee	mystrcmp		1636663	0					
ANR	1636714	Identifier	mystrcmp		1636663	0					
ANR	1636715	ArgumentList	"""STACK"""		1636663	1					
ANR	1636716	Argument	"""STACK"""		1636663	0					
ANR	1636717	PrimaryExpression	"""STACK"""		1636663	0					
ANR	1636718	Argument	map [ i ] . GetName ( )		1636663	1					
ANR	1636719	CallExpression	map [ i ] . GetName ( )		1636663	0					
ANR	1636720	Callee	map [ i ] . GetName		1636663	0					
ANR	1636721	MemberAccess	map [ i ] . GetName		1636663	0					
ANR	1636722	ArrayIndexing	map [ i ]		1636663	0					
ANR	1636723	Identifier	map		1636663	0					
ANR	1636724	Identifier	i		1636663	1					
ANR	1636725	Identifier	GetName		1636663	1					
ANR	1636726	ArgumentList			1636663	1					
ANR	1636727	PrimaryExpression	0		1636663	1					
ANR	1636728	CompoundStatement		10:48:215:215	1636663	1					
ANR	1636729	IfStatement	"if ( ( pos = map [ i ] . Read ( fd , pos ) ) < 0 )"		1636663	0					
ANR	1636730	Condition	"( pos = map [ i ] . Read ( fd , pos ) ) < 0"	1011:7:28748:28778	1636663	0	True				
ANR	1636731	RelationalExpression	"( pos = map [ i ] . Read ( fd , pos ) ) < 0"		1636663	0		<			
ANR	1636732	AssignmentExpression	"pos = map [ i ] . Read ( fd , pos )"		1636663	0		=			
ANR	1636733	Identifier	pos		1636663	0					
ANR	1636734	CallExpression	"map [ i ] . Read ( fd , pos )"		1636663	1					
ANR	1636735	Callee	map [ i ] . Read		1636663	0					
ANR	1636736	MemberAccess	map [ i ] . Read		1636663	0					
ANR	1636737	ArrayIndexing	map [ i ]		1636663	0					
ANR	1636738	Identifier	map		1636663	0					
ANR	1636739	Identifier	i		1636663	1					
ANR	1636740	Identifier	Read		1636663	1					
ANR	1636741	ArgumentList	fd		1636663	1					
ANR	1636742	Argument	fd		1636663	0					
ANR	1636743	Identifier	fd		1636663	0					
ANR	1636744	Argument	pos		1636663	1					
ANR	1636745	Identifier	pos		1636663	0					
ANR	1636746	PrimaryExpression	0		1636663	1					
ANR	1636747	CompoundStatement		11:41:258:258	1636663	1					
ANR	1636748	ExpressionStatement	"dprintf ( D_ALWAYS , ""SegMap::Read() failed!\\n"" )"	1012:4:28788:28834	1636663	0	True				
ANR	1636749	CallExpression	"dprintf ( D_ALWAYS , ""SegMap::Read() failed!\\n"" )"		1636663	0					
ANR	1636750	Callee	dprintf		1636663	0					
ANR	1636751	Identifier	dprintf		1636663	0					
ANR	1636752	ArgumentList	D_ALWAYS		1636663	1					
ANR	1636753	Argument	D_ALWAYS		1636663	0					
ANR	1636754	Identifier	D_ALWAYS		1636663	0					
ANR	1636755	Argument	"""SegMap::Read() failed!\\n"""		1636663	1					
ANR	1636756	PrimaryExpression	"""SegMap::Read() failed!\\n"""		1636663	0					
ANR	1636757	ExpressionStatement	Suicide ( )	1013:4:28840:28849	1636663	1	True				
ANR	1636758	CallExpression	Suicide ( )		1636663	0					
ANR	1636759	Callee	Suicide		1636663	0					
ANR	1636760	Identifier	Suicide		1636663	0					
ANR	1636761	ArgumentList			1636663	1					
ANR	1636762	ElseStatement	else		1636663	0					
ANR	1636763	IfStatement	if ( i < head . N_Segs ( ) - 1 )		1636663	0					
ANR	1636764	Condition	i < head . N_Segs ( ) - 1	1016:11:28871:28887	1636663	0	True				
ANR	1636765	RelationalExpression	i < head . N_Segs ( ) - 1		1636663	0		<			
ANR	1636766	Identifier	i		1636663	0					
ANR	1636767	AdditiveExpression	head . N_Segs ( ) - 1		1636663	1		-			
ANR	1636768	CallExpression	head . N_Segs ( )		1636663	0					
ANR	1636769	Callee	head . N_Segs		1636663	0					
ANR	1636770	MemberAccess	head . N_Segs		1636663	0					
ANR	1636771	Identifier	head		1636663	0					
ANR	1636772	Identifier	N_Segs		1636663	1					
ANR	1636773	ArgumentList			1636663	1					
ANR	1636774	PrimaryExpression	1		1636663	1					
ANR	1636775	CompoundStatement		16:30:366:366	1636663	1					
ANR	1636776	Statement	dprintf	1017:3:28895:28901	1636663	0	True				
ANR	1636777	Statement	(	1017:10:28902:28902	1636663	1	True				
ANR	1636778	Statement	D_ALWAYS	1017:12:28904:28911	1636663	2	True				
ANR	1636779	Statement	","	1017:20:28912:28912	1636663	3	True				
ANR	1636780	Statement	"""Checkpoint file error: STACK is not the """	1017:22:28914:28955	1636663	4	True				
ANR	1636781	Statement	"""last segment in ckpt file.\\n"""	1018:5:28962:28991	1636663	5	True				
ANR	1636782	Statement	)	1018:35:28992:28992	1636663	6	True				
ANR	1636783	ExpressionStatement		1018:36:28993:28993	1636663	7	True				
ANR	1636784	Statement	fprintf	1019:3:28998:29004	1636663	8	True				
ANR	1636785	Statement	(	1019:10:29005:29005	1636663	9	True				
ANR	1636786	Statement	stderr	1019:12:29007:29012	1636663	10	True				
ANR	1636787	Statement	","	1019:18:29013:29013	1636663	11	True				
ANR	1636788	Statement	"""CONDOR ERROR: STACK is not the last segment """	1019:20:29015:29060	1636663	12	True				
ANR	1636789	Statement	""" in ckpt file.\\n"""	1020:6:29068:29085	1636663	13	True				
ANR	1636790	Statement	)	1020:25:29087:29087	1636663	14	True				
ANR	1636791	ExpressionStatement		1020:26:29088:29088	1636663	15	True				
ANR	1636792	ExpressionStatement	exit ( 1 )	1021:3:29093:29102	1636663	16	True				
ANR	1636793	CallExpression	exit ( 1 )		1636663	0					
ANR	1636794	Callee	exit		1636663	0					
ANR	1636795	Identifier	exit		1636663	0					
ANR	1636796	ArgumentList	1		1636663	1					
ANR	1636797	Argument	1		1636663	0					
ANR	1636798	PrimaryExpression	1		1636663	0					
ANR	1636799	ExpressionStatement	fd = save_fd	1023:2:29110:29122	1636663	1	True				
ANR	1636800	AssignmentExpression	fd = save_fd		1636663	0		=			
ANR	1636801	Identifier	fd		1636663	0					
ANR	1636802	Identifier	save_fd		1636663	1					
ANR	1636803	ReturnType	void		1636663	1					
ANR	1636804	Identifier	Image :: RestoreAllSegsExceptStack		1636663	2					
ANR	1636805	ParameterList			1636663	3					
ANR	1636806	CFGEntryNode	ENTRY		1636663		True				
ANR	1636807	CFGExitNode	EXIT		1636663		True				
ANR	1636808	Symbol	save_fd		1636663						
ANR	1636809	Symbol	map [ i ] . Read		1636663						
ANR	1636810	Symbol	* map		1636663						
ANR	1636811	Symbol	mystrcmp		1636663						
ANR	1636812	Symbol	D_ALWAYS		1636663						
ANR	1636813	Symbol	i		1636663						
ANR	1636814	Symbol	head		1636663						
ANR	1636815	Symbol	head . N_Segs		1636663						
ANR	1636816	Symbol	* i		1636663						
ANR	1636817	Symbol	map [ i ] . GetName		1636663						
ANR	1636818	Symbol	pos		1636663						
ANR	1636819	Symbol	map		1636663						
ANR	1636820	Symbol	fd		1636663						
ANR	1636821	Function	RestoreStack	1029:0:29132:30076							
ANR	1636822	FunctionDef	RestoreStack ()		1636821	0					
ANR	1636823	CompoundStatement		1031:0:29152:30076	1636821	0					
ANR	1636824	IdentifierDeclStatement	unsigned int nbytes ;	1034:1:29176:29195	1636821	0	True				
ANR	1636825	IdentifierDecl	nbytes		1636821	0					
ANR	1636826	IdentifierDeclType	unsigned int		1636821	0					
ANR	1636827	Identifier	nbytes		1636821	1					
ANR	1636828	IdentifierDeclStatement	int status ;	1038:1:29274:29285	1636821	1	True				
ANR	1636829	IdentifierDecl	status		1636821	0					
ANR	1636830	IdentifierDeclType	int		1636821	0					
ANR	1636831	Identifier	status		1636821	1					
ANR	1636832	ExpressionStatement	"dprintf ( D_CKPT , ""RestoreStack() Entrance!\\n"" )"	1040:1:29289:29334	1636821	2	True				
ANR	1636833	CallExpression	"dprintf ( D_CKPT , ""RestoreStack() Entrance!\\n"" )"		1636821	0					
ANR	1636834	Callee	dprintf		1636821	0					
ANR	1636835	Identifier	dprintf		1636821	0					
ANR	1636836	ArgumentList	D_CKPT		1636821	1					
ANR	1636837	Argument	D_CKPT		1636821	0					
ANR	1636838	Identifier	D_CKPT		1636821	0					
ANR	1636839	Argument	"""RestoreStack() Entrance!\\n"""		1636821	1					
ANR	1636840	PrimaryExpression	"""RestoreStack() Entrance!\\n"""		1636821	0					
ANR	1636841	ExpressionStatement	"MyImage . RestoreSeg ( ""STACK"" )"	1041:1:29337:29366	1636821	3	True				
ANR	1636842	CallExpression	"MyImage . RestoreSeg ( ""STACK"" )"		1636821	0					
ANR	1636843	Callee	MyImage . RestoreSeg		1636821	0					
ANR	1636844	MemberAccess	MyImage . RestoreSeg		1636821	0					
ANR	1636845	Identifier	MyImage		1636821	0					
ANR	1636846	Identifier	RestoreSeg		1636821	1					
ANR	1636847	ArgumentList	"""STACK"""		1636821	1					
ANR	1636848	Argument	"""STACK"""		1636821	0					
ANR	1636849	PrimaryExpression	"""STACK"""		1636821	0					
ANR	1636850	IfStatement	if ( MyImage . GetMode ( ) == REMOTE )		1636821	4					
ANR	1636851	Condition	MyImage . GetMode ( ) == REMOTE	1044:5:29440:29466	1636821	0	True				
ANR	1636852	EqualityExpression	MyImage . GetMode ( ) == REMOTE		1636821	0		==			
ANR	1636853	CallExpression	MyImage . GetMode ( )		1636821	0					
ANR	1636854	Callee	MyImage . GetMode		1636821	0					
ANR	1636855	MemberAccess	MyImage . GetMode		1636821	0					
ANR	1636856	Identifier	MyImage		1636821	0					
ANR	1636857	Identifier	GetMode		1636821	1					
ANR	1636858	ArgumentList			1636821	1					
ANR	1636859	Identifier	REMOTE		1636821	1					
ANR	1636860	CompoundStatement		14:35:317:317	1636821	1					
ANR	1636861	ExpressionStatement	nbytes = MyImage . GetLen ( )	1045:2:29474:29499	1636821	0	True				
ANR	1636862	AssignmentExpression	nbytes = MyImage . GetLen ( )		1636821	0		=			
ANR	1636863	Identifier	nbytes		1636821	0					
ANR	1636864	CallExpression	MyImage . GetLen ( )		1636821	1					
ANR	1636865	Callee	MyImage . GetLen		1636821	0					
ANR	1636866	MemberAccess	MyImage . GetLen		1636821	0					
ANR	1636867	Identifier	MyImage		1636821	0					
ANR	1636868	Identifier	GetLen		1636821	1					
ANR	1636869	ArgumentList			1636821	1					
ANR	1636870	ExpressionStatement	nbytes = htonl ( nbytes )	1046:2:29503:29527	1636821	1	True				
ANR	1636871	AssignmentExpression	nbytes = htonl ( nbytes )		1636821	0		=			
ANR	1636872	Identifier	nbytes		1636821	0					
ANR	1636873	CallExpression	htonl ( nbytes )		1636821	1					
ANR	1636874	Callee	htonl		1636821	0					
ANR	1636875	Identifier	htonl		1636821	0					
ANR	1636876	ArgumentList	nbytes		1636821	1					
ANR	1636877	Argument	nbytes		1636821	0					
ANR	1636878	Identifier	nbytes		1636821	0					
ANR	1636879	ExpressionStatement	"status = write ( MyImage . GetFd ( ) , & nbytes , sizeof ( nbytes ) )"	1047:2:29531:29589	1636821	2	True				
ANR	1636880	AssignmentExpression	"status = write ( MyImage . GetFd ( ) , & nbytes , sizeof ( nbytes ) )"		1636821	0		=			
ANR	1636881	Identifier	status		1636821	0					
ANR	1636882	CallExpression	"write ( MyImage . GetFd ( ) , & nbytes , sizeof ( nbytes ) )"		1636821	1					
ANR	1636883	Callee	write		1636821	0					
ANR	1636884	Identifier	write		1636821	0					
ANR	1636885	ArgumentList	MyImage . GetFd ( )		1636821	1					
ANR	1636886	Argument	MyImage . GetFd ( )		1636821	0					
ANR	1636887	CallExpression	MyImage . GetFd ( )		1636821	0					
ANR	1636888	Callee	MyImage . GetFd		1636821	0					
ANR	1636889	MemberAccess	MyImage . GetFd		1636821	0					
ANR	1636890	Identifier	MyImage		1636821	0					
ANR	1636891	Identifier	GetFd		1636821	1					
ANR	1636892	ArgumentList			1636821	1					
ANR	1636893	Argument	& nbytes		1636821	1					
ANR	1636894	UnaryOperationExpression	& nbytes		1636821	0					
ANR	1636895	UnaryOperator	&		1636821	0					
ANR	1636896	Identifier	nbytes		1636821	1					
ANR	1636897	Argument	sizeof ( nbytes )		1636821	2					
ANR	1636898	SizeofExpression	sizeof ( nbytes )		1636821	0					
ANR	1636899	Sizeof	sizeof		1636821	0					
ANR	1636900	SizeofOperand	nbytes		1636821	1					
ANR	1636901	ExpressionStatement	"dprintf ( D_ALWAYS , ""USER PROC: CHECKPOINT IMAGE RECEIVED OK\\n"" )"	1048:2:29593:29657	1636821	3	True				
ANR	1636902	CallExpression	"dprintf ( D_ALWAYS , ""USER PROC: CHECKPOINT IMAGE RECEIVED OK\\n"" )"		1636821	0					
ANR	1636903	Callee	dprintf		1636821	0					
ANR	1636904	Identifier	dprintf		1636821	0					
ANR	1636905	ArgumentList	D_ALWAYS		1636821	1					
ANR	1636906	Argument	D_ALWAYS		1636821	0					
ANR	1636907	Identifier	D_ALWAYS		1636821	0					
ANR	1636908	Argument	"""USER PROC: CHECKPOINT IMAGE RECEIVED OK\\n"""		1636821	1					
ANR	1636909	PrimaryExpression	"""USER PROC: CHECKPOINT IMAGE RECEIVED OK\\n"""		1636821	0					
ANR	1636910	ExpressionStatement	SetSyscalls ( SYS_REMOTE | SYS_MAPPED )	1050:2:29662:29700	1636821	4	True				
ANR	1636911	CallExpression	SetSyscalls ( SYS_REMOTE | SYS_MAPPED )		1636821	0					
ANR	1636912	Callee	SetSyscalls		1636821	0					
ANR	1636913	Identifier	SetSyscalls		1636821	0					
ANR	1636914	ArgumentList	SYS_REMOTE | SYS_MAPPED		1636821	1					
ANR	1636915	Argument	SYS_REMOTE | SYS_MAPPED		1636821	0					
ANR	1636916	InclusiveOrExpression	SYS_REMOTE | SYS_MAPPED		1636821	0		|			
ANR	1636917	Identifier	SYS_REMOTE		1636821	0					
ANR	1636918	Identifier	SYS_MAPPED		1636821	1					
ANR	1636919	ElseStatement	else		1636821	0					
ANR	1636920	CompoundStatement		21:8:557:557	1636821	0					
ANR	1636921	ExpressionStatement	SetSyscalls ( SYS_LOCAL | SYS_MAPPED )	1052:2:29714:29751	1636821	0	True				
ANR	1636922	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_MAPPED )		1636821	0					
ANR	1636923	Callee	SetSyscalls		1636821	0					
ANR	1636924	Identifier	SetSyscalls		1636821	0					
ANR	1636925	ArgumentList	SYS_LOCAL | SYS_MAPPED		1636821	1					
ANR	1636926	Argument	SYS_LOCAL | SYS_MAPPED		1636821	0					
ANR	1636927	InclusiveOrExpression	SYS_LOCAL | SYS_MAPPED		1636821	0		|			
ANR	1636928	Identifier	SYS_LOCAL		1636821	0					
ANR	1636929	Identifier	SYS_MAPPED		1636821	1					
ANR	1636930	IfStatement	if ( zstr )		1636821	5					
ANR	1636931	Condition	zstr	1056:5:29789:29792	1636821	0	True				
ANR	1636932	Identifier	zstr		1636821	0					
ANR	1636933	CompoundStatement		27:2:646:673	1636821	1					
ANR	1636934	IdentifierDeclStatement	int rval = inflateEnd ( zstr ) ;	1057:2:29799:29826	1636821	0	True				
ANR	1636935	IdentifierDecl	rval = inflateEnd ( zstr )		1636821	0					
ANR	1636936	IdentifierDeclType	int		1636821	0					
ANR	1636937	Identifier	rval		1636821	1					
ANR	1636938	AssignmentExpression	rval = inflateEnd ( zstr )		1636821	2		=			
ANR	1636939	Identifier	rval		1636821	0					
ANR	1636940	CallExpression	inflateEnd ( zstr )		1636821	1					
ANR	1636941	Callee	inflateEnd		1636821	0					
ANR	1636942	Identifier	inflateEnd		1636821	0					
ANR	1636943	ArgumentList	zstr		1636821	1					
ANR	1636944	Argument	zstr		1636821	0					
ANR	1636945	Identifier	zstr		1636821	0					
ANR	1636946	IfStatement	if ( rval != Z_OK )		1636821	1					
ANR	1636947	Condition	rval != Z_OK	1058:6:29834:29845	1636821	0	True				
ANR	1636948	EqualityExpression	rval != Z_OK		1636821	0		!=			
ANR	1636949	Identifier	rval		1636821	0					
ANR	1636950	Identifier	Z_OK		1636821	1					
ANR	1636951	CompoundStatement		28:20:695:695	1636821	1					
ANR	1636952	ExpressionStatement	"dprintf ( D_ALWAYS , ""zlib (inflateEnd): %d\\n"" , rval )"	1059:3:29853:29905	1636821	0	True				
ANR	1636953	CallExpression	"dprintf ( D_ALWAYS , ""zlib (inflateEnd): %d\\n"" , rval )"		1636821	0					
ANR	1636954	Callee	dprintf		1636821	0					
ANR	1636955	Identifier	dprintf		1636821	0					
ANR	1636956	ArgumentList	D_ALWAYS		1636821	1					
ANR	1636957	Argument	D_ALWAYS		1636821	0					
ANR	1636958	Identifier	D_ALWAYS		1636821	0					
ANR	1636959	Argument	"""zlib (inflateEnd): %d\\n"""		1636821	1					
ANR	1636960	PrimaryExpression	"""zlib (inflateEnd): %d\\n"""		1636821	0					
ANR	1636961	Argument	rval		1636821	2					
ANR	1636962	Identifier	rval		1636821	0					
ANR	1636963	ExpressionStatement	Suicide ( )	1060:3:29910:29919	1636821	1	True				
ANR	1636964	CallExpression	Suicide ( )		1636821	0					
ANR	1636965	Callee	Suicide		1636821	0					
ANR	1636966	Identifier	Suicide		1636821	0					
ANR	1636967	ArgumentList			1636821	1					
ANR	1636968	ExpressionStatement	condor_free ( zstr )	1062:2:29927:29944	1636821	2	True				
ANR	1636969	CallExpression	condor_free ( zstr )		1636821	0					
ANR	1636970	Callee	condor_free		1636821	0					
ANR	1636971	Identifier	condor_free		1636821	0					
ANR	1636972	ArgumentList	zstr		1636821	1					
ANR	1636973	Argument	zstr		1636821	0					
ANR	1636974	Identifier	zstr		1636821	0					
ANR	1636975	ExpressionStatement	zstr = NULL	1063:2:29948:29959	1636821	3	True				
ANR	1636976	AssignmentExpression	zstr = NULL		1636821	0		=			
ANR	1636977	Identifier	zstr		1636821	0					
ANR	1636978	Identifier	NULL		1636821	1					
ANR	1636979	ExpressionStatement	condor_free ( zbuf )	1064:2:29963:29980	1636821	4	True				
ANR	1636980	CallExpression	condor_free ( zbuf )		1636821	0					
ANR	1636981	Callee	condor_free		1636821	0					
ANR	1636982	Identifier	condor_free		1636821	0					
ANR	1636983	ArgumentList	zbuf		1636821	1					
ANR	1636984	Argument	zbuf		1636821	0					
ANR	1636985	Identifier	zbuf		1636821	0					
ANR	1636986	ExpressionStatement	zbuf = Z_NULL	1065:2:29984:29997	1636821	5	True				
ANR	1636987	AssignmentExpression	zbuf = Z_NULL		1636821	0		=			
ANR	1636988	Identifier	zbuf		1636821	0					
ANR	1636989	Identifier	Z_NULL		1636821	1					
ANR	1636990	ExpressionStatement	"dprintf ( D_CKPT , ""RestoreStack() Exit!\\n"" )"	1069:1:30011:30052	1636821	6	True				
ANR	1636991	CallExpression	"dprintf ( D_CKPT , ""RestoreStack() Exit!\\n"" )"		1636821	0					
ANR	1636992	Callee	dprintf		1636821	0					
ANR	1636993	Identifier	dprintf		1636821	0					
ANR	1636994	ArgumentList	D_CKPT		1636821	1					
ANR	1636995	Argument	D_CKPT		1636821	0					
ANR	1636996	Identifier	D_CKPT		1636821	0					
ANR	1636997	Argument	"""RestoreStack() Exit!\\n"""		1636821	1					
ANR	1636998	PrimaryExpression	"""RestoreStack() Exit!\\n"""		1636821	0					
ANR	1636999	ExpressionStatement	"LONGJMP ( Env , 1 )"	1071:1:30057:30074	1636821	7	True				
ANR	1637000	CallExpression	"LONGJMP ( Env , 1 )"		1636821	0					
ANR	1637001	Callee	LONGJMP		1636821	0					
ANR	1637002	Identifier	LONGJMP		1636821	0					
ANR	1637003	ArgumentList	Env		1636821	1					
ANR	1637004	Argument	Env		1636821	0					
ANR	1637005	Identifier	Env		1636821	0					
ANR	1637006	Argument	1		1636821	1					
ANR	1637007	PrimaryExpression	1		1636821	0					
ANR	1637008	ReturnType	void		1636821	1					
ANR	1637009	Identifier	RestoreStack		1636821	2					
ANR	1637010	ParameterList			1636821	3					
ANR	1637011	CFGEntryNode	ENTRY		1636821		True				
ANR	1637012	CFGExitNode	EXIT		1636821		True				
ANR	1637013	Symbol	MyImage . GetLen		1636821						
ANR	1637014	Symbol	zbuf		1636821						
ANR	1637015	Symbol	inflateEnd		1636821						
ANR	1637016	Symbol	NULL		1636821						
ANR	1637017	Symbol	D_CKPT		1636821						
ANR	1637018	Symbol	MyImage . GetMode		1636821						
ANR	1637019	Symbol	D_ALWAYS		1636821						
ANR	1637020	Symbol	Z_OK		1636821						
ANR	1637021	Symbol	Env		1636821						
ANR	1637022	Symbol	htonl		1636821						
ANR	1637023	Symbol	MyImage . GetFd		1636821						
ANR	1637024	Symbol	zstr		1636821						
ANR	1637025	Symbol	nbytes		1636821						
ANR	1637026	Symbol	SYS_MAPPED		1636821						
ANR	1637027	Symbol	& nbytes		1636821						
ANR	1637028	Symbol	SYS_REMOTE		1636821						
ANR	1637029	Symbol	SYS_LOCAL		1636821						
ANR	1637030	Symbol	rval		1636821						
ANR	1637031	Symbol	REMOTE		1636821						
ANR	1637032	Symbol	write		1636821						
ANR	1637033	Symbol	MyImage		1636821						
ANR	1637034	Symbol	status		1636821						
ANR	1637035	Symbol	Z_NULL		1636821						
ANR	1637036	Function	Image :: Write	1074:0:30079:30280							
ANR	1637037	FunctionDef	Image :: Write ()		1637036	0					
ANR	1637038	CompoundStatement		1076:0:30098:30280	1637036	0					
ANR	1637039	ExpressionStatement	"dprintf ( D_ALWAYS , ""Image::Write(): fd %d file_name %s\\n"" , fd , file_name ? file_name : ""(NULL)"" )"	1077:1:30101:30197	1637036	0	True				
ANR	1637040	CallExpression	"dprintf ( D_ALWAYS , ""Image::Write(): fd %d file_name %s\\n"" , fd , file_name ? file_name : ""(NULL)"" )"		1637036	0					
ANR	1637041	Callee	dprintf		1637036	0					
ANR	1637042	Identifier	dprintf		1637036	0					
ANR	1637043	ArgumentList	D_ALWAYS		1637036	1					
ANR	1637044	Argument	D_ALWAYS		1637036	0					
ANR	1637045	Identifier	D_ALWAYS		1637036	0					
ANR	1637046	Argument	"""Image::Write(): fd %d file_name %s\\n"""		1637036	1					
ANR	1637047	PrimaryExpression	"""Image::Write(): fd %d file_name %s\\n"""		1637036	0					
ANR	1637048	Argument	fd		1637036	2					
ANR	1637049	Identifier	fd		1637036	0					
ANR	1637050	Argument	"file_name ? file_name : ""(NULL)"""		1637036	3					
ANR	1637051	ConditionalExpression	"file_name ? file_name : ""(NULL)"""		1637036	0					
ANR	1637052	Condition	file_name		1637036	0					
ANR	1637053	Identifier	file_name		1637036	0					
ANR	1637054	Identifier	file_name		1637036	1					
ANR	1637055	PrimaryExpression	"""(NULL)"""		1637036	2					
ANR	1637056	IfStatement	if ( fd == - 1 )		1637036	1					
ANR	1637057	Condition	fd == - 1	1079:5:30204:30211	1637036	0	True				
ANR	1637058	EqualityExpression	fd == - 1		1637036	0		==			
ANR	1637059	Identifier	fd		1637036	0					
ANR	1637060	UnaryOperationExpression	- 1		1637036	1					
ANR	1637061	UnaryOperator	-		1637036	0					
ANR	1637062	PrimaryExpression	1		1637036	1					
ANR	1637063	CompoundStatement		4:15:115:115	1637036	1					
ANR	1637064	ReturnStatement	return Write ( file_name ) ;	1080:2:30218:30243	1637036	0	True				
ANR	1637065	CallExpression	Write ( file_name )		1637036	0					
ANR	1637066	Callee	Write		1637036	0					
ANR	1637067	Identifier	Write		1637036	0					
ANR	1637068	ArgumentList	file_name		1637036	1					
ANR	1637069	Argument	file_name		1637036	0					
ANR	1637070	Identifier	file_name		1637036	0					
ANR	1637071	ElseStatement	else		1637036	0					
ANR	1637072	CompoundStatement		6:8:154:154	1637036	0					
ANR	1637073	ReturnStatement	return Write ( fd ) ;	1082:2:30257:30275	1637036	0	True				
ANR	1637074	CallExpression	Write ( fd )		1637036	0					
ANR	1637075	Callee	Write		1637036	0					
ANR	1637076	Identifier	Write		1637036	0					
ANR	1637077	ArgumentList	fd		1637036	1					
ANR	1637078	Argument	fd		1637036	0					
ANR	1637079	Identifier	fd		1637036	0					
ANR	1637080	ReturnType	int		1637036	1					
ANR	1637081	Identifier	Image :: Write		1637036	2					
ANR	1637082	ParameterList			1637036	3					
ANR	1637083	CFGEntryNode	ENTRY		1637036		True				
ANR	1637084	CFGExitNode	EXIT		1637036		True				
ANR	1637085	Symbol	Write		1637036						
ANR	1637086	Symbol	file_name		1637036						
ANR	1637087	Symbol	D_ALWAYS		1637036						
ANR	1637088	Symbol	fd		1637036						
ANR	1637089	Function	Image :: MSync	1086:0:30283:30367							
ANR	1637090	FunctionDef	Image :: MSync ()		1637089	0					
ANR	1637091	CompoundStatement		1088:0:30303:30367	1637089	0					
ANR	1637092	ForStatement	for ( int i = 0 ; i < head . N_Segs ( ) ; i ++ )		1637089	0					
ANR	1637093	ForInit	int i = 0 ;	1089:6:30311:30318	1637089	0	True				
ANR	1637094	IdentifierDeclStatement	int i = 0 ;		1637089	0					
ANR	1637095	IdentifierDecl	i = 0		1637089	0					
ANR	1637096	IdentifierDeclType	int		1637089	0					
ANR	1637097	Identifier	i		1637089	1					
ANR	1637098	AssignmentExpression	i = 0		1637089	2		=			
ANR	1637099	Identifier	i		1637089	0					
ANR	1637100	PrimaryExpression	0		1637089	1					
ANR	1637101	Condition	i < head . N_Segs ( )	1089:15:30320:30336	1637089	1	True				
ANR	1637102	RelationalExpression	i < head . N_Segs ( )		1637089	0		<			
ANR	1637103	Identifier	i		1637089	0					
ANR	1637104	CallExpression	head . N_Segs ( )		1637089	1					
ANR	1637105	Callee	head . N_Segs		1637089	0					
ANR	1637106	MemberAccess	head . N_Segs		1637089	0					
ANR	1637107	Identifier	head		1637089	0					
ANR	1637108	Identifier	N_Segs		1637089	1					
ANR	1637109	ArgumentList			1637089	1					
ANR	1637110	PostIncDecOperationExpression	i ++	1089:34:30339:30341	1637089	2	True				
ANR	1637111	Identifier	i		1637089	0					
ANR	1637112	IncDec	++		1637089	1					
ANR	1637113	CompoundStatement		2:39:40:40	1637089	3					
ANR	1637114	ExpressionStatement	map [ i ] . MSync ( )	1090:2:30348:30362	1637089	0	True				
ANR	1637115	CallExpression	map [ i ] . MSync ( )		1637089	0					
ANR	1637116	Callee	map [ i ] . MSync		1637089	0					
ANR	1637117	MemberAccess	map [ i ] . MSync		1637089	0					
ANR	1637118	ArrayIndexing	map [ i ]		1637089	0					
ANR	1637119	Identifier	map		1637089	0					
ANR	1637120	Identifier	i		1637089	1					
ANR	1637121	Identifier	MSync		1637089	1					
ANR	1637122	ArgumentList			1637089	1					
ANR	1637123	ReturnType	void		1637089	1					
ANR	1637124	Identifier	Image :: MSync		1637089	2					
ANR	1637125	ParameterList			1637089	3					
ANR	1637126	CFGEntryNode	ENTRY		1637089		True				
ANR	1637127	CFGExitNode	EXIT		1637089		True				
ANR	1637128	Symbol	head		1637089						
ANR	1637129	Symbol	head . N_Segs		1637089						
ANR	1637130	Symbol	* i		1637089						
ANR	1637131	Symbol	* map		1637089						
ANR	1637132	Symbol	i		1637089						
ANR	1637133	Symbol	map		1637089						
ANR	1637134	Function	Image :: Write	1104:0:30829:33359							
ANR	1637135	FunctionDef	Image :: Write (const char * ckpt_file)		1637134	0					
ANR	1637136	CompoundStatement		1106:0:30871:33359	1637134	0					
ANR	1637137	IdentifierDeclStatement	int file_d ;	1107:1:30874:30884	1637134	0	True				
ANR	1637138	IdentifierDecl	file_d		1637134	0					
ANR	1637139	IdentifierDeclType	int		1637134	0					
ANR	1637140	Identifier	file_d		1637134	1					
ANR	1637141	IdentifierDeclStatement	int scm ;	1108:1:30887:30894	1637134	1	True				
ANR	1637142	IdentifierDecl	scm		1637134	0					
ANR	1637143	IdentifierDeclType	int		1637134	0					
ANR	1637144	Identifier	scm		1637134	1					
ANR	1637145	IdentifierDeclStatement	char tmp_name [ PATH_MAX ] ;	1109:1:30897:30922	1637134	2	True				
ANR	1637146	IdentifierDecl	tmp_name [ PATH_MAX ]		1637134	0					
ANR	1637147	IdentifierDeclType	char [ PATH_MAX ]		1637134	0					
ANR	1637148	Identifier	tmp_name		1637134	1					
ANR	1637149	Identifier	PATH_MAX		1637134	2					
ANR	1637150	IfStatement	if ( ckpt_file == 0 )		1637134	3					
ANR	1637151	Condition	ckpt_file == 0	1111:5:30930:30943	1637134	0	True				
ANR	1637152	EqualityExpression	ckpt_file == 0		1637134	0		==			
ANR	1637153	Identifier	ckpt_file		1637134	0					
ANR	1637154	PrimaryExpression	0		1637134	1					
ANR	1637155	CompoundStatement		6:22:75:75	1637134	1					
ANR	1637156	ExpressionStatement	ckpt_file = file_name	1112:2:30951:30972	1637134	0	True				
ANR	1637157	AssignmentExpression	ckpt_file = file_name		1637134	0		=			
ANR	1637158	Identifier	ckpt_file		1637134	0					
ANR	1637159	Identifier	file_name		1637134	1					
ANR	1637160	ExpressionStatement	head . ResetMagic ( )	1115:1:30979:30996	1637134	4	True				
ANR	1637161	CallExpression	head . ResetMagic ( )		1637134	0					
ANR	1637162	Callee	head . ResetMagic		1637134	0					
ANR	1637163	MemberAccess	head . ResetMagic		1637134	0					
ANR	1637164	Identifier	head		1637134	0					
ANR	1637165	Identifier	ResetMagic		1637134	1					
ANR	1637166	ArgumentList			1637134	1					
ANR	1637167	ExpressionStatement	"dprintf ( D_ALWAYS , ""Checkpoint name is \\""%s\\""\\n"" , ckpt_file )"	1118:1:31072:31133	1637134	5	True				
ANR	1637168	CallExpression	"dprintf ( D_ALWAYS , ""Checkpoint name is \\""%s\\""\\n"" , ckpt_file )"		1637134	0					
ANR	1637169	Callee	dprintf		1637134	0					
ANR	1637170	Identifier	dprintf		1637134	0					
ANR	1637171	ArgumentList	D_ALWAYS		1637134	1					
ANR	1637172	Argument	D_ALWAYS		1637134	0					
ANR	1637173	Identifier	D_ALWAYS		1637134	0					
ANR	1637174	Argument	"""Checkpoint name is \\""%s\\""\\n"""		1637134	1					
ANR	1637175	PrimaryExpression	"""Checkpoint name is \\""%s\\""\\n"""		1637134	0					
ANR	1637176	Argument	ckpt_file		1637134	2					
ANR	1637177	Identifier	ckpt_file		1637134	0					
ANR	1637178	ExpressionStatement	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )	1121:1:31160:31205	1637134	6	True				
ANR	1637179	AssignmentExpression	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		1637134	0		=			
ANR	1637180	Identifier	scm		1637134	0					
ANR	1637181	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		1637134	1					
ANR	1637182	Callee	SetSyscalls		1637134	0					
ANR	1637183	Identifier	SetSyscalls		1637134	0					
ANR	1637184	ArgumentList	SYS_LOCAL | SYS_UNMAPPED		1637134	1					
ANR	1637185	Argument	SYS_LOCAL | SYS_UNMAPPED		1637134	0					
ANR	1637186	InclusiveOrExpression	SYS_LOCAL | SYS_UNMAPPED		1637134	0		|			
ANR	1637187	Identifier	SYS_LOCAL		1637134	0					
ANR	1637188	Identifier	SYS_UNMAPPED		1637134	1					
ANR	1637189	ExpressionStatement	tmp_name [ 0 ] = '\\0'	1122:1:31208:31226	1637134	7	True				
ANR	1637190	AssignmentExpression	tmp_name [ 0 ] = '\\0'		1637134	0		=			
ANR	1637191	ArrayIndexing	tmp_name [ 0 ]		1637134	0					
ANR	1637192	Identifier	tmp_name		1637134	0					
ANR	1637193	PrimaryExpression	0		1637134	1					
ANR	1637194	PrimaryExpression	'\\0'		1637134	1					
ANR	1637195	ExpressionStatement	"sprintf ( tmp_name , ""%s.tmp"" , ckpt_file )"	1135:2:31842:31882	1637134	8	True				
ANR	1637196	CallExpression	"sprintf ( tmp_name , ""%s.tmp"" , ckpt_file )"		1637134	0					
ANR	1637197	Callee	sprintf		1637134	0					
ANR	1637198	Identifier	sprintf		1637134	0					
ANR	1637199	ArgumentList	tmp_name		1637134	1					
ANR	1637200	Argument	tmp_name		1637134	0					
ANR	1637201	Identifier	tmp_name		1637134	0					
ANR	1637202	Argument	"""%s.tmp"""		1637134	1					
ANR	1637203	PrimaryExpression	"""%s.tmp"""		1637134	0					
ANR	1637204	Argument	ckpt_file		1637134	2					
ANR	1637205	Identifier	ckpt_file		1637134	0					
ANR	1637206	ExpressionStatement	"dprintf ( D_ALWAYS , ""Tmp name is \\""%s\\""\\n"" , tmp_name )"	1136:2:31886:31939	1637134	9	True				
ANR	1637207	CallExpression	"dprintf ( D_ALWAYS , ""Tmp name is \\""%s\\""\\n"" , tmp_name )"		1637134	0					
ANR	1637208	Callee	dprintf		1637134	0					
ANR	1637209	Identifier	dprintf		1637134	0					
ANR	1637210	ArgumentList	D_ALWAYS		1637134	1					
ANR	1637211	Argument	D_ALWAYS		1637134	0					
ANR	1637212	Identifier	D_ALWAYS		1637134	0					
ANR	1637213	Argument	"""Tmp name is \\""%s\\""\\n"""		1637134	1					
ANR	1637214	PrimaryExpression	"""Tmp name is \\""%s\\""\\n"""		1637134	0					
ANR	1637215	Argument	tmp_name		1637134	2					
ANR	1637216	Identifier	tmp_name		1637134	0					
ANR	1637217	IfStatement	"if ( ( file_d = open_ckpt_file ( tmp_name , O_WRONLY | O_TRUNC | O_CREAT , condor_compress_ckpt ? - 1 : len ) ) < 0 )"		1637134	10					
ANR	1637218	Condition	"( file_d = open_ckpt_file ( tmp_name , O_WRONLY | O_TRUNC | O_CREAT , condor_compress_ckpt ? - 1 : len ) ) < 0"	1141:6:32176:32282	1637134	0	True				
ANR	1637219	RelationalExpression	"( file_d = open_ckpt_file ( tmp_name , O_WRONLY | O_TRUNC | O_CREAT , condor_compress_ckpt ? - 1 : len ) ) < 0"		1637134	0		<			
ANR	1637220	AssignmentExpression	"file_d = open_ckpt_file ( tmp_name , O_WRONLY | O_TRUNC | O_CREAT , condor_compress_ckpt ? - 1 : len )"		1637134	0		=			
ANR	1637221	Identifier	file_d		1637134	0					
ANR	1637222	CallExpression	"open_ckpt_file ( tmp_name , O_WRONLY | O_TRUNC | O_CREAT , condor_compress_ckpt ? - 1 : len )"		1637134	1					
ANR	1637223	Callee	open_ckpt_file		1637134	0					
ANR	1637224	Identifier	open_ckpt_file		1637134	0					
ANR	1637225	ArgumentList	tmp_name		1637134	1					
ANR	1637226	Argument	tmp_name		1637134	0					
ANR	1637227	Identifier	tmp_name		1637134	0					
ANR	1637228	Argument	O_WRONLY | O_TRUNC | O_CREAT		1637134	1					
ANR	1637229	InclusiveOrExpression	O_WRONLY | O_TRUNC | O_CREAT		1637134	0		|			
ANR	1637230	Identifier	O_WRONLY		1637134	0					
ANR	1637231	InclusiveOrExpression	O_TRUNC | O_CREAT		1637134	1		|			
ANR	1637232	Identifier	O_TRUNC		1637134	0					
ANR	1637233	Identifier	O_CREAT		1637134	1					
ANR	1637234	Argument	condor_compress_ckpt ? - 1 : len		1637134	2					
ANR	1637235	ConditionalExpression	condor_compress_ckpt ? - 1 : len		1637134	0					
ANR	1637236	Condition	condor_compress_ckpt		1637134	0					
ANR	1637237	Identifier	condor_compress_ckpt		1637134	0					
ANR	1637238	UnaryOperationExpression	- 1		1637134	1					
ANR	1637239	UnaryOperator	-		1637134	0					
ANR	1637240	PrimaryExpression	1		1637134	1					
ANR	1637241	Identifier	len		1637134	2					
ANR	1637242	PrimaryExpression	0		1637134	1					
ANR	1637243	CompoundStatement		37:49:1414:1414	1637134	1					
ANR	1637244	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR:open_ckpt_file failed, aborting ckpt\\n"" )"	1147:3:32394:32460	1637134	0	True				
ANR	1637245	CallExpression	"dprintf ( D_ALWAYS , ""ERROR:open_ckpt_file failed, aborting ckpt\\n"" )"		1637134	0					
ANR	1637246	Callee	dprintf		1637134	0					
ANR	1637247	Identifier	dprintf		1637134	0					
ANR	1637248	ArgumentList	D_ALWAYS		1637134	1					
ANR	1637249	Argument	D_ALWAYS		1637134	0					
ANR	1637250	Identifier	D_ALWAYS		1637134	0					
ANR	1637251	Argument	"""ERROR:open_ckpt_file failed, aborting ckpt\\n"""		1637134	1					
ANR	1637252	PrimaryExpression	"""ERROR:open_ckpt_file failed, aborting ckpt\\n"""		1637134	0					
ANR	1637253	ExpressionStatement	SetSyscalls ( scm )	1148:3:32465:32481	1637134	1	True				
ANR	1637254	CallExpression	SetSyscalls ( scm )		1637134	0					
ANR	1637255	Callee	SetSyscalls		1637134	0					
ANR	1637256	Identifier	SetSyscalls		1637134	0					
ANR	1637257	ArgumentList	scm		1637134	1					
ANR	1637258	Argument	scm		1637134	0					
ANR	1637259	Identifier	scm		1637134	0					
ANR	1637260	ReturnStatement	return - 1 ;	1149:3:32486:32495	1637134	2	True				
ANR	1637261	UnaryOperationExpression	- 1		1637134	0					
ANR	1637262	UnaryOperator	-		1637134	0					
ANR	1637263	PrimaryExpression	1		1637134	1					
ANR	1637264	IfStatement	if ( Write ( file_d ) < 0 )		1637134	11					
ANR	1637265	Condition	Write ( file_d ) < 0	1154:5:32609:32625	1637134	0	True				
ANR	1637266	RelationalExpression	Write ( file_d ) < 0		1637134	0		<			
ANR	1637267	CallExpression	Write ( file_d )		1637134	0					
ANR	1637268	Callee	Write		1637134	0					
ANR	1637269	Identifier	Write		1637134	0					
ANR	1637270	ArgumentList	file_d		1637134	1					
ANR	1637271	Argument	file_d		1637134	0					
ANR	1637272	Identifier	file_d		1637134	0					
ANR	1637273	PrimaryExpression	0		1637134	1					
ANR	1637274	CompoundStatement		49:25:1757:1757	1637134	1					
ANR	1637275	ExpressionStatement	SetSyscalls ( scm )	1155:2:32633:32649	1637134	0	True				
ANR	1637276	CallExpression	SetSyscalls ( scm )		1637134	0					
ANR	1637277	Callee	SetSyscalls		1637134	0					
ANR	1637278	Identifier	SetSyscalls		1637134	0					
ANR	1637279	ArgumentList	scm		1637134	1					
ANR	1637280	Argument	scm		1637134	0					
ANR	1637281	Identifier	scm		1637134	0					
ANR	1637282	ReturnStatement	return - 1 ;	1156:2:32653:32662	1637134	1	True				
ANR	1637283	UnaryOperationExpression	- 1		1637134	0					
ANR	1637284	UnaryOperator	-		1637134	0					
ANR	1637285	PrimaryExpression	1		1637134	1					
ANR	1637286	ExpressionStatement	"dprintf ( D_ALWAYS , ""About to close ckpt fd (%d)\\n"" , file_d )"	1160:1:32703:32763	1637134	12	True				
ANR	1637287	CallExpression	"dprintf ( D_ALWAYS , ""About to close ckpt fd (%d)\\n"" , file_d )"		1637134	0					
ANR	1637288	Callee	dprintf		1637134	0					
ANR	1637289	Identifier	dprintf		1637134	0					
ANR	1637290	ArgumentList	D_ALWAYS		1637134	1					
ANR	1637291	Argument	D_ALWAYS		1637134	0					
ANR	1637292	Identifier	D_ALWAYS		1637134	0					
ANR	1637293	Argument	"""About to close ckpt fd (%d)\\n"""		1637134	1					
ANR	1637294	PrimaryExpression	"""About to close ckpt fd (%d)\\n"""		1637134	0					
ANR	1637295	Argument	file_d		1637134	2					
ANR	1637296	Identifier	file_d		1637134	0					
ANR	1637297	IfStatement	if ( close ( file_d ) < 0 )		1637134	13					
ANR	1637298	Condition	close ( file_d ) < 0	1161:5:32770:32786	1637134	0	True				
ANR	1637299	RelationalExpression	close ( file_d ) < 0		1637134	0		<			
ANR	1637300	CallExpression	close ( file_d )		1637134	0					
ANR	1637301	Callee	close		1637134	0					
ANR	1637302	Identifier	close		1637134	0					
ANR	1637303	ArgumentList	file_d		1637134	1					
ANR	1637304	Argument	file_d		1637134	0					
ANR	1637305	Identifier	file_d		1637134	0					
ANR	1637306	PrimaryExpression	0		1637134	1					
ANR	1637307	CompoundStatement		56:25:1918:1918	1637134	1					
ANR	1637308	ExpressionStatement	"dprintf ( D_ALWAYS , ""Close failed!\\n"" )"	1162:2:32794:32832	1637134	0	True				
ANR	1637309	CallExpression	"dprintf ( D_ALWAYS , ""Close failed!\\n"" )"		1637134	0					
ANR	1637310	Callee	dprintf		1637134	0					
ANR	1637311	Identifier	dprintf		1637134	0					
ANR	1637312	ArgumentList	D_ALWAYS		1637134	1					
ANR	1637313	Argument	D_ALWAYS		1637134	0					
ANR	1637314	Identifier	D_ALWAYS		1637134	0					
ANR	1637315	Argument	"""Close failed!\\n"""		1637134	1					
ANR	1637316	PrimaryExpression	"""Close failed!\\n"""		1637134	0					
ANR	1637317	ExpressionStatement	SetSyscalls ( scm )	1163:2:32836:32852	1637134	1	True				
ANR	1637318	CallExpression	SetSyscalls ( scm )		1637134	0					
ANR	1637319	Callee	SetSyscalls		1637134	0					
ANR	1637320	Identifier	SetSyscalls		1637134	0					
ANR	1637321	ArgumentList	scm		1637134	1					
ANR	1637322	Argument	scm		1637134	0					
ANR	1637323	Identifier	scm		1637134	0					
ANR	1637324	ReturnStatement	return - 1 ;	1164:2:32856:32865	1637134	2	True				
ANR	1637325	UnaryOperationExpression	- 1		1637134	0					
ANR	1637326	UnaryOperator	-		1637134	0					
ANR	1637327	PrimaryExpression	1		1637134	1					
ANR	1637328	ExpressionStatement	"dprintf ( D_ALWAYS , ""Closed OK\\n"" )"	1166:1:32871:32905	1637134	14	True				
ANR	1637329	CallExpression	"dprintf ( D_ALWAYS , ""Closed OK\\n"" )"		1637134	0					
ANR	1637330	Callee	dprintf		1637134	0					
ANR	1637331	Identifier	dprintf		1637134	0					
ANR	1637332	ArgumentList	D_ALWAYS		1637134	1					
ANR	1637333	Argument	D_ALWAYS		1637134	0					
ANR	1637334	Identifier	D_ALWAYS		1637134	0					
ANR	1637335	Argument	"""Closed OK\\n"""		1637134	1					
ANR	1637336	PrimaryExpression	"""Closed OK\\n"""		1637134	0					
ANR	1637337	ExpressionStatement	SetSyscalls ( scm )	1168:1:32909:32927	1637134	15	True				
ANR	1637338	CallExpression	SetSyscalls ( scm )		1637134	0					
ANR	1637339	Callee	SetSyscalls		1637134	0					
ANR	1637340	Identifier	SetSyscalls		1637134	0					
ANR	1637341	ArgumentList	scm		1637134	1					
ANR	1637342	Argument	scm		1637134	0					
ANR	1637343	Identifier	scm		1637134	0					
ANR	1637344	IfStatement	if ( tmp_name [ 0 ] != '\\0' )		1637134	16					
ANR	1637345	Condition	tmp_name [ 0 ] != '\\0'	1171:5:33005:33023	1637134	0	True				
ANR	1637346	EqualityExpression	tmp_name [ 0 ] != '\\0'		1637134	0		!=			
ANR	1637347	ArrayIndexing	tmp_name [ 0 ]		1637134	0					
ANR	1637348	Identifier	tmp_name		1637134	0					
ANR	1637349	PrimaryExpression	0		1637134	1					
ANR	1637350	PrimaryExpression	'\\0'		1637134	1					
ANR	1637351	CompoundStatement		66:26:2154:2154	1637134	1					
ANR	1637352	ExpressionStatement	"dprintf ( D_ALWAYS , ""About to rename \\""%s\\"" to \\""%s\\""\\n"" , tmp_name , ckpt_file )"	1172:2:33030:33110	1637134	0	True				
ANR	1637353	CallExpression	"dprintf ( D_ALWAYS , ""About to rename \\""%s\\"" to \\""%s\\""\\n"" , tmp_name , ckpt_file )"		1637134	0					
ANR	1637354	Callee	dprintf		1637134	0					
ANR	1637355	Identifier	dprintf		1637134	0					
ANR	1637356	ArgumentList	D_ALWAYS		1637134	1					
ANR	1637357	Argument	D_ALWAYS		1637134	0					
ANR	1637358	Identifier	D_ALWAYS		1637134	0					
ANR	1637359	Argument	"""About to rename \\""%s\\"" to \\""%s\\""\\n"""		1637134	1					
ANR	1637360	PrimaryExpression	"""About to rename \\""%s\\"" to \\""%s\\""\\n"""		1637134	0					
ANR	1637361	Argument	tmp_name		1637134	2					
ANR	1637362	Identifier	tmp_name		1637134	0					
ANR	1637363	Argument	ckpt_file		1637134	3					
ANR	1637364	Identifier	ckpt_file		1637134	0					
ANR	1637365	IfStatement	"if ( rename ( tmp_name , ckpt_file ) < 0 )"		1637134	1					
ANR	1637366	Condition	"rename ( tmp_name , ckpt_file ) < 0"	1174:6:33118:33147	1637134	0	True				
ANR	1637367	RelationalExpression	"rename ( tmp_name , ckpt_file ) < 0"		1637134	0		<			
ANR	1637368	CallExpression	"rename ( tmp_name , ckpt_file )"		1637134	0					
ANR	1637369	Callee	rename		1637134	0					
ANR	1637370	Identifier	rename		1637134	0					
ANR	1637371	ArgumentList	tmp_name		1637134	1					
ANR	1637372	Argument	tmp_name		1637134	0					
ANR	1637373	Identifier	tmp_name		1637134	0					
ANR	1637374	Argument	ckpt_file		1637134	1					
ANR	1637375	Identifier	ckpt_file		1637134	0					
ANR	1637376	PrimaryExpression	0		1637134	1					
ANR	1637377	CompoundStatement		69:39:2279:2279	1637134	1					
ANR	1637378	ExpressionStatement	"dprintf ( D_ALWAYS , ""rename failed, aborting ckpt\\n"" )"	1175:3:33156:33209	1637134	0	True				
ANR	1637379	CallExpression	"dprintf ( D_ALWAYS , ""rename failed, aborting ckpt\\n"" )"		1637134	0					
ANR	1637380	Callee	dprintf		1637134	0					
ANR	1637381	Identifier	dprintf		1637134	0					
ANR	1637382	ArgumentList	D_ALWAYS		1637134	1					
ANR	1637383	Argument	D_ALWAYS		1637134	0					
ANR	1637384	Identifier	D_ALWAYS		1637134	0					
ANR	1637385	Argument	"""rename failed, aborting ckpt\\n"""		1637134	1					
ANR	1637386	PrimaryExpression	"""rename failed, aborting ckpt\\n"""		1637134	0					
ANR	1637387	ReturnStatement	return - 1 ;	1176:3:33214:33223	1637134	1	True				
ANR	1637388	UnaryOperationExpression	- 1		1637134	0					
ANR	1637389	UnaryOperator	-		1637134	0					
ANR	1637390	PrimaryExpression	1		1637134	1					
ANR	1637391	ExpressionStatement	"dprintf ( D_ALWAYS , ""Renamed OK\\n"" )"	1178:2:33231:33266	1637134	2	True				
ANR	1637392	CallExpression	"dprintf ( D_ALWAYS , ""Renamed OK\\n"" )"		1637134	0					
ANR	1637393	Callee	dprintf		1637134	0					
ANR	1637394	Identifier	dprintf		1637134	0					
ANR	1637395	ArgumentList	D_ALWAYS		1637134	1					
ANR	1637396	Argument	D_ALWAYS		1637134	0					
ANR	1637397	Identifier	D_ALWAYS		1637134	0					
ANR	1637398	Argument	"""Renamed OK\\n"""		1637134	1					
ANR	1637399	PrimaryExpression	"""Renamed OK\\n"""		1637134	0					
ANR	1637400	ExpressionStatement	"dprintf ( D_ALWAYS , ""USER PROC: CHECKPOINT IMAGE SENT OK\\n"" )"	1182:1:33285:33345	1637134	17	True				
ANR	1637401	CallExpression	"dprintf ( D_ALWAYS , ""USER PROC: CHECKPOINT IMAGE SENT OK\\n"" )"		1637134	0					
ANR	1637402	Callee	dprintf		1637134	0					
ANR	1637403	Identifier	dprintf		1637134	0					
ANR	1637404	ArgumentList	D_ALWAYS		1637134	1					
ANR	1637405	Argument	D_ALWAYS		1637134	0					
ANR	1637406	Identifier	D_ALWAYS		1637134	0					
ANR	1637407	Argument	"""USER PROC: CHECKPOINT IMAGE SENT OK\\n"""		1637134	1					
ANR	1637408	PrimaryExpression	"""USER PROC: CHECKPOINT IMAGE SENT OK\\n"""		1637134	0					
ANR	1637409	ReturnStatement	return 0 ;	1184:1:33349:33357	1637134	18	True				
ANR	1637410	PrimaryExpression	0		1637134	0					
ANR	1637411	ReturnType	int		1637134	1					
ANR	1637412	Identifier	Image :: Write		1637134	2					
ANR	1637413	ParameterList	const char * ckpt_file		1637134	3					
ANR	1637414	Parameter	const char * ckpt_file	1105:14:30847:30867	1637134	0	True				
ANR	1637415	ParameterType	const char *		1637134	0					
ANR	1637416	Identifier	ckpt_file		1637134	1					
ANR	1637417	CFGEntryNode	ENTRY		1637134		True				
ANR	1637418	CFGExitNode	EXIT		1637134		True				
ANR	1637419	Symbol	Write		1637134						
ANR	1637420	Symbol	ckpt_file		1637134						
ANR	1637421	Symbol	file_name		1637134						
ANR	1637422	Symbol	SYS_UNMAPPED		1637134						
ANR	1637423	Symbol	O_CREAT		1637134						
ANR	1637424	Symbol	D_ALWAYS		1637134						
ANR	1637425	Symbol	file_d		1637134						
ANR	1637426	Symbol	tmp_name		1637134						
ANR	1637427	Symbol	head		1637134						
ANR	1637428	Symbol	O_TRUNC		1637134						
ANR	1637429	Symbol	len		1637134						
ANR	1637430	Symbol	rename		1637134						
ANR	1637431	Symbol	condor_compress_ckpt		1637134						
ANR	1637432	Symbol	SYS_LOCAL		1637134						
ANR	1637433	Symbol	SetSyscalls		1637134						
ANR	1637434	Symbol	scm		1637134						
ANR	1637435	Symbol	O_WRONLY		1637134						
ANR	1637436	Symbol	close		1637134						
ANR	1637437	Symbol	open_ckpt_file		1637134						
ANR	1637438	Symbol	* tmp_name		1637134						
ANR	1637439	Function	Image :: Write	1192:0:33579:37111							
ANR	1637440	FunctionDef	Image :: Write (int file_d)		1637439	0					
ANR	1637441	CompoundStatement		1194:0:33610:37111	1637439	0					
ANR	1637442	IdentifierDeclStatement	int i ;	1195:1:33613:33619	1637439	0	True				
ANR	1637443	IdentifierDecl	i		1637439	0					
ANR	1637444	IdentifierDeclType	int		1637439	0					
ANR	1637445	Identifier	i		1637439	1					
ANR	1637446	IdentifierDeclStatement	int position = 0 ;	1196:1:33622:33639	1637439	1	True				
ANR	1637447	IdentifierDecl	position = 0		1637439	0					
ANR	1637448	IdentifierDeclType	int		1637439	0					
ANR	1637449	Identifier	position		1637439	1					
ANR	1637450	AssignmentExpression	position = 0		1637439	2		=			
ANR	1637451	Identifier	position		1637439	0					
ANR	1637452	PrimaryExpression	0		1637439	1					
ANR	1637453	IdentifierDeclStatement	int nbytes ;	1197:1:33642:33653	1637439	2	True				
ANR	1637454	IdentifierDecl	nbytes		1637439	0					
ANR	1637455	IdentifierDeclType	int		1637439	0					
ANR	1637456	Identifier	nbytes		1637439	1					
ANR	1637457	IdentifierDeclStatement	int ack ;	1198:1:33656:33664	1637439	3	True				
ANR	1637458	IdentifierDecl	ack		1637439	0					
ANR	1637459	IdentifierDeclType	int		1637439	0					
ANR	1637460	Identifier	ack		1637439	1					
ANR	1637461	IdentifierDeclStatement	int status ;	1199:1:33667:33678	1637439	4	True				
ANR	1637462	IdentifierDecl	status		1637439	0					
ANR	1637463	IdentifierDeclType	int		1637439	0					
ANR	1637464	Identifier	status		1637439	1					
ANR	1637465	IfStatement	if ( condor_compress_ckpt )		1637439	5					
ANR	1637466	Condition	condor_compress_ckpt	1202:5:33713:33732	1637439	0	True				
ANR	1637467	Identifier	condor_compress_ckpt		1637439	0					
ANR	1637468	CompoundStatement		9:27:124:124	1637439	1					
ANR	1637469	ExpressionStatement	condor_morecore ( 0 )	1203:2:33739:33757	1637439	0	True				
ANR	1637470	CallExpression	condor_morecore ( 0 )		1637439	0					
ANR	1637471	Callee	condor_morecore		1637439	0					
ANR	1637472	Identifier	condor_morecore		1637439	0					
ANR	1637473	ArgumentList	0		1637439	1					
ANR	1637474	Argument	0		1637439	0					
ANR	1637475	PrimaryExpression	0		1637439	0					
ANR	1637476	IfStatement	"if ( ( nbytes = write ( file_d , & head , sizeof ( head ) ) ) < 0 )"		1637439	6					
ANR	1637477	Condition	"( nbytes = write ( file_d , & head , sizeof ( head ) ) ) < 0"	1208:5:33847:33891	1637439	0	True				
ANR	1637478	RelationalExpression	"( nbytes = write ( file_d , & head , sizeof ( head ) ) ) < 0"		1637439	0		<			
ANR	1637479	AssignmentExpression	"nbytes = write ( file_d , & head , sizeof ( head ) )"		1637439	0		=			
ANR	1637480	Identifier	nbytes		1637439	0					
ANR	1637481	CallExpression	"write ( file_d , & head , sizeof ( head ) )"		1637439	1					
ANR	1637482	Callee	write		1637439	0					
ANR	1637483	Identifier	write		1637439	0					
ANR	1637484	ArgumentList	file_d		1637439	1					
ANR	1637485	Argument	file_d		1637439	0					
ANR	1637486	Identifier	file_d		1637439	0					
ANR	1637487	Argument	& head		1637439	1					
ANR	1637488	UnaryOperationExpression	& head		1637439	0					
ANR	1637489	UnaryOperator	&		1637439	0					
ANR	1637490	Identifier	head		1637439	1					
ANR	1637491	Argument	sizeof ( head )		1637439	2					
ANR	1637492	SizeofExpression	sizeof ( head )		1637439	0					
ANR	1637493	Sizeof	sizeof		1637439	0					
ANR	1637494	SizeofOperand	head		1637439	1					
ANR	1637495	PrimaryExpression	0		1637439	1					
ANR	1637496	CompoundStatement		15:53:284:284	1637439	1					
ANR	1637497	ReturnStatement	return - 1 ;	1209:2:33899:33908	1637439	0	True				
ANR	1637498	UnaryOperationExpression	- 1		1637439	0					
ANR	1637499	UnaryOperator	-		1637439	0					
ANR	1637500	PrimaryExpression	1		1637439	1					
ANR	1637501	ExpressionStatement	position += nbytes	1211:1:33914:33932	1637439	7	True				
ANR	1637502	AssignmentExpression	position += nbytes		1637439	0		+=			
ANR	1637503	Identifier	position		1637439	0					
ANR	1637504	Identifier	nbytes		1637439	1					
ANR	1637505	ExpressionStatement	"dprintf ( D_ALWAYS , ""Wrote headers OK\\n"" )"	1212:1:33935:33976	1637439	8	True				
ANR	1637506	CallExpression	"dprintf ( D_ALWAYS , ""Wrote headers OK\\n"" )"		1637439	0					
ANR	1637507	Callee	dprintf		1637439	0					
ANR	1637508	Identifier	dprintf		1637439	0					
ANR	1637509	ArgumentList	D_ALWAYS		1637439	1					
ANR	1637510	Argument	D_ALWAYS		1637439	0					
ANR	1637511	Identifier	D_ALWAYS		1637439	0					
ANR	1637512	Argument	"""Wrote headers OK\\n"""		1637439	1					
ANR	1637513	PrimaryExpression	"""Wrote headers OK\\n"""		1637439	0					
ANR	1637514	IfStatement	"if ( ( nbytes = write ( file_d , map , sizeof ( SegMap ) * head . N_Segs ( ) ) ) != sizeof ( SegMap ) * head . N_Segs ( ) )"		1637439	9					
ANR	1637515	Condition	"( nbytes = write ( file_d , map , sizeof ( SegMap ) * head . N_Segs ( ) ) ) != sizeof ( SegMap ) * head . N_Segs ( )"	1215:5:34011:34099	1637439	0	True				
ANR	1637516	EqualityExpression	"( nbytes = write ( file_d , map , sizeof ( SegMap ) * head . N_Segs ( ) ) ) != sizeof ( SegMap ) * head . N_Segs ( )"		1637439	0		!=			
ANR	1637517	AssignmentExpression	"nbytes = write ( file_d , map , sizeof ( SegMap ) * head . N_Segs ( ) )"		1637439	0		=			
ANR	1637518	Identifier	nbytes		1637439	0					
ANR	1637519	CallExpression	"write ( file_d , map , sizeof ( SegMap ) * head . N_Segs ( ) )"		1637439	1					
ANR	1637520	Callee	write		1637439	0					
ANR	1637521	Identifier	write		1637439	0					
ANR	1637522	ArgumentList	file_d		1637439	1					
ANR	1637523	Argument	file_d		1637439	0					
ANR	1637524	Identifier	file_d		1637439	0					
ANR	1637525	Argument	map		1637439	1					
ANR	1637526	Identifier	map		1637439	0					
ANR	1637527	Argument	sizeof ( SegMap ) * head . N_Segs ( )		1637439	2					
ANR	1637528	MultiplicativeExpression	sizeof ( SegMap ) * head . N_Segs ( )		1637439	0		*			
ANR	1637529	SizeofExpression	sizeof ( SegMap )		1637439	0					
ANR	1637530	Sizeof	sizeof		1637439	0					
ANR	1637531	SizeofOperand	SegMap		1637439	1					
ANR	1637532	CallExpression	head . N_Segs ( )		1637439	1					
ANR	1637533	Callee	head . N_Segs		1637439	0					
ANR	1637534	MemberAccess	head . N_Segs		1637439	0					
ANR	1637535	Identifier	head		1637439	0					
ANR	1637536	Identifier	N_Segs		1637439	1					
ANR	1637537	ArgumentList			1637439	1					
ANR	1637538	MultiplicativeExpression	sizeof ( SegMap ) * head . N_Segs ( )		1637439	1		*			
ANR	1637539	SizeofExpression	sizeof ( SegMap )		1637439	0					
ANR	1637540	Sizeof	sizeof		1637439	0					
ANR	1637541	SizeofOperand	SegMap		1637439	1					
ANR	1637542	CallExpression	head . N_Segs ( )		1637439	1					
ANR	1637543	Callee	head . N_Segs		1637439	0					
ANR	1637544	MemberAccess	head . N_Segs		1637439	0					
ANR	1637545	Identifier	head		1637439	0					
ANR	1637546	Identifier	N_Segs		1637439	1					
ANR	1637547	ArgumentList			1637439	1					
ANR	1637548	CompoundStatement		23:36:492:492	1637439	1					
ANR	1637549	ReturnStatement	return - 1 ;	1217:2:34107:34116	1637439	0	True				
ANR	1637550	UnaryOperationExpression	- 1		1637439	0					
ANR	1637551	UnaryOperator	-		1637439	0					
ANR	1637552	PrimaryExpression	1		1637439	1					
ANR	1637553	ExpressionStatement	position += nbytes	1219:1:34122:34140	1637439	10	True				
ANR	1637554	AssignmentExpression	position += nbytes		1637439	0		+=			
ANR	1637555	Identifier	position		1637439	0					
ANR	1637556	Identifier	nbytes		1637439	1					
ANR	1637557	ExpressionStatement	"dprintf ( D_ALWAYS , ""Wrote all SegMaps OK\\n"" )"	1220:1:34143:34188	1637439	11	True				
ANR	1637558	CallExpression	"dprintf ( D_ALWAYS , ""Wrote all SegMaps OK\\n"" )"		1637439	0					
ANR	1637559	Callee	dprintf		1637439	0					
ANR	1637560	Identifier	dprintf		1637439	0					
ANR	1637561	ArgumentList	D_ALWAYS		1637439	1					
ANR	1637562	Argument	D_ALWAYS		1637439	0					
ANR	1637563	Identifier	D_ALWAYS		1637439	0					
ANR	1637564	Argument	"""Wrote all SegMaps OK\\n"""		1637439	1					
ANR	1637565	PrimaryExpression	"""Wrote all SegMaps OK\\n"""		1637439	0					
ANR	1637566	IfStatement	if ( condor_compress_ckpt )		1637439	12					
ANR	1637567	Condition	condor_compress_ckpt	1223:5:34223:34242	1637439	0	True				
ANR	1637568	Identifier	condor_compress_ckpt		1637439	0					
ANR	1637569	CompoundStatement		30:27:634:634	1637439	1					
ANR	1637570	ExpressionStatement	"dprintf ( D_ALWAYS , ""Writing compressed segments...\\n"" )"	1224:2:34249:34304	1637439	0	True				
ANR	1637571	CallExpression	"dprintf ( D_ALWAYS , ""Writing compressed segments...\\n"" )"		1637439	0					
ANR	1637572	Callee	dprintf		1637439	0					
ANR	1637573	Identifier	dprintf		1637439	0					
ANR	1637574	ArgumentList	D_ALWAYS		1637439	1					
ANR	1637575	Argument	D_ALWAYS		1637439	0					
ANR	1637576	Identifier	D_ALWAYS		1637439	0					
ANR	1637577	Argument	"""Writing compressed segments...\\n"""		1637439	1					
ANR	1637578	PrimaryExpression	"""Writing compressed segments...\\n"""		1637439	0					
ANR	1637579	ExpressionStatement	zstr = ( z_stream * ) condor_malloc ( sizeof ( z_stream ) )	1225:2:34308:34359	1637439	1	True				
ANR	1637580	AssignmentExpression	zstr = ( z_stream * ) condor_malloc ( sizeof ( z_stream ) )		1637439	0		=			
ANR	1637581	Identifier	zstr		1637439	0					
ANR	1637582	CastExpression	( z_stream * ) condor_malloc ( sizeof ( z_stream ) )		1637439	1					
ANR	1637583	CastTarget	z_stream *		1637439	0					
ANR	1637584	CallExpression	condor_malloc ( sizeof ( z_stream ) )		1637439	1					
ANR	1637585	Callee	condor_malloc		1637439	0					
ANR	1637586	Identifier	condor_malloc		1637439	0					
ANR	1637587	ArgumentList	sizeof ( z_stream )		1637439	1					
ANR	1637588	Argument	sizeof ( z_stream )		1637439	0					
ANR	1637589	SizeofExpression	sizeof ( z_stream )		1637439	0					
ANR	1637590	Sizeof	sizeof		1637439	0					
ANR	1637591	SizeofOperand	z_stream		1637439	1					
ANR	1637592	IfStatement	if ( ! zstr )		1637439	2					
ANR	1637593	Condition	! zstr	1226:6:34367:34371	1637439	0	True				
ANR	1637594	UnaryOperationExpression	! zstr		1637439	0					
ANR	1637595	UnaryOperator	!		1637439	0					
ANR	1637596	Identifier	zstr		1637439	1					
ANR	1637597	CompoundStatement		33:13:763:763	1637439	1					
ANR	1637598	ExpressionStatement	"dprintf ( D_ALWAYS , ""out of memory in condor_malloc!\\n"" )"	1227:3:34379:34434	1637439	0	True				
ANR	1637599	CallExpression	"dprintf ( D_ALWAYS , ""out of memory in condor_malloc!\\n"" )"		1637439	0					
ANR	1637600	Callee	dprintf		1637439	0					
ANR	1637601	Identifier	dprintf		1637439	0					
ANR	1637602	ArgumentList	D_ALWAYS		1637439	1					
ANR	1637603	Argument	D_ALWAYS		1637439	0					
ANR	1637604	Identifier	D_ALWAYS		1637439	0					
ANR	1637605	Argument	"""out of memory in condor_malloc!\\n"""		1637439	1					
ANR	1637606	PrimaryExpression	"""out of memory in condor_malloc!\\n"""		1637439	0					
ANR	1637607	ExpressionStatement	Suicide ( )	1228:3:34439:34448	1637439	1	True				
ANR	1637608	CallExpression	Suicide ( )		1637439	0					
ANR	1637609	Callee	Suicide		1637439	0					
ANR	1637610	Identifier	Suicide		1637439	0					
ANR	1637611	ArgumentList			1637439	1					
ANR	1637612	ExpressionStatement	zbuf = ( unsigned char * ) condor_malloc ( zbufsize )	1230:2:34456:34504	1637439	3	True				
ANR	1637613	AssignmentExpression	zbuf = ( unsigned char * ) condor_malloc ( zbufsize )		1637439	0		=			
ANR	1637614	Identifier	zbuf		1637439	0					
ANR	1637615	CastExpression	( unsigned char * ) condor_malloc ( zbufsize )		1637439	1					
ANR	1637616	CastTarget	unsigned char *		1637439	0					
ANR	1637617	CallExpression	condor_malloc ( zbufsize )		1637439	1					
ANR	1637618	Callee	condor_malloc		1637439	0					
ANR	1637619	Identifier	condor_malloc		1637439	0					
ANR	1637620	ArgumentList	zbufsize		1637439	1					
ANR	1637621	Argument	zbufsize		1637439	0					
ANR	1637622	Identifier	zbufsize		1637439	0					
ANR	1637623	IfStatement	if ( ! zbuf )		1637439	4					
ANR	1637624	Condition	! zbuf	1231:6:34512:34516	1637439	0	True				
ANR	1637625	UnaryOperationExpression	! zbuf		1637439	0					
ANR	1637626	UnaryOperator	!		1637439	0					
ANR	1637627	Identifier	zbuf		1637439	1					
ANR	1637628	CompoundStatement		38:13:908:908	1637439	1					
ANR	1637629	ExpressionStatement	"dprintf ( D_ALWAYS , ""out of memory in condor_malloc!\\n"" )"	1232:3:34524:34579	1637439	0	True				
ANR	1637630	CallExpression	"dprintf ( D_ALWAYS , ""out of memory in condor_malloc!\\n"" )"		1637439	0					
ANR	1637631	Callee	dprintf		1637439	0					
ANR	1637632	Identifier	dprintf		1637439	0					
ANR	1637633	ArgumentList	D_ALWAYS		1637439	1					
ANR	1637634	Argument	D_ALWAYS		1637439	0					
ANR	1637635	Identifier	D_ALWAYS		1637439	0					
ANR	1637636	Argument	"""out of memory in condor_malloc!\\n"""		1637439	1					
ANR	1637637	PrimaryExpression	"""out of memory in condor_malloc!\\n"""		1637439	0					
ANR	1637638	ExpressionStatement	Suicide ( )	1233:3:34584:34593	1637439	1	True				
ANR	1637639	CallExpression	Suicide ( )		1637439	0					
ANR	1637640	Callee	Suicide		1637439	0					
ANR	1637641	Identifier	Suicide		1637439	0					
ANR	1637642	ArgumentList			1637439	1					
ANR	1637643	ExpressionStatement	zstr -> zalloc = zalloc	1235:2:34601:34622	1637439	5	True				
ANR	1637644	AssignmentExpression	zstr -> zalloc = zalloc		1637439	0		=			
ANR	1637645	PtrMemberAccess	zstr -> zalloc		1637439	0					
ANR	1637646	Identifier	zstr		1637439	0					
ANR	1637647	Identifier	zalloc		1637439	1					
ANR	1637648	Identifier	zalloc		1637439	1					
ANR	1637649	ExpressionStatement	zstr -> zfree = zfree	1236:2:34626:34645	1637439	6	True				
ANR	1637650	AssignmentExpression	zstr -> zfree = zfree		1637439	0		=			
ANR	1637651	PtrMemberAccess	zstr -> zfree		1637439	0					
ANR	1637652	Identifier	zstr		1637439	0					
ANR	1637653	Identifier	zfree		1637439	1					
ANR	1637654	Identifier	zfree		1637439	1					
ANR	1637655	ExpressionStatement	zstr -> opaque = Z_NULL	1237:2:34649:34670	1637439	7	True				
ANR	1637656	AssignmentExpression	zstr -> opaque = Z_NULL		1637439	0		=			
ANR	1637657	PtrMemberAccess	zstr -> opaque		1637439	0					
ANR	1637658	Identifier	zstr		1637439	0					
ANR	1637659	Identifier	opaque		1637439	1					
ANR	1637660	Identifier	Z_NULL		1637439	1					
ANR	1637661	IfStatement	"if ( deflateInit ( zstr , Z_DEFAULT_COMPRESSION ) != Z_OK )"		1637439	8					
ANR	1637662	Condition	"deflateInit ( zstr , Z_DEFAULT_COMPRESSION ) != Z_OK"	1238:6:34678:34725	1637439	0	True				
ANR	1637663	EqualityExpression	"deflateInit ( zstr , Z_DEFAULT_COMPRESSION ) != Z_OK"		1637439	0		!=			
ANR	1637664	CallExpression	"deflateInit ( zstr , Z_DEFAULT_COMPRESSION )"		1637439	0					
ANR	1637665	Callee	deflateInit		1637439	0					
ANR	1637666	Identifier	deflateInit		1637439	0					
ANR	1637667	ArgumentList	zstr		1637439	1					
ANR	1637668	Argument	zstr		1637439	0					
ANR	1637669	Identifier	zstr		1637439	0					
ANR	1637670	Argument	Z_DEFAULT_COMPRESSION		1637439	1					
ANR	1637671	Identifier	Z_DEFAULT_COMPRESSION		1637439	0					
ANR	1637672	Identifier	Z_OK		1637439	1					
ANR	1637673	CompoundStatement		45:56:1117:1117	1637439	1					
ANR	1637674	ExpressionStatement	"dprintf ( D_ALWAYS , ""zlib (deflateInit): %s\\n"" , zstr -> msg )"	1239:3:34733:34791	1637439	0	True				
ANR	1637675	CallExpression	"dprintf ( D_ALWAYS , ""zlib (deflateInit): %s\\n"" , zstr -> msg )"		1637439	0					
ANR	1637676	Callee	dprintf		1637439	0					
ANR	1637677	Identifier	dprintf		1637439	0					
ANR	1637678	ArgumentList	D_ALWAYS		1637439	1					
ANR	1637679	Argument	D_ALWAYS		1637439	0					
ANR	1637680	Identifier	D_ALWAYS		1637439	0					
ANR	1637681	Argument	"""zlib (deflateInit): %s\\n"""		1637439	1					
ANR	1637682	PrimaryExpression	"""zlib (deflateInit): %s\\n"""		1637439	0					
ANR	1637683	Argument	zstr -> msg		1637439	2					
ANR	1637684	PtrMemberAccess	zstr -> msg		1637439	0					
ANR	1637685	Identifier	zstr		1637439	0					
ANR	1637686	Identifier	msg		1637439	1					
ANR	1637687	ExpressionStatement	Suicide ( )	1240:3:34796:34805	1637439	1	True				
ANR	1637688	CallExpression	Suicide ( )		1637439	0					
ANR	1637689	Callee	Suicide		1637439	0					
ANR	1637690	Identifier	Suicide		1637439	0					
ANR	1637691	ArgumentList			1637439	1					
ANR	1637692	ForStatement	for ( i = 0 ; i < head . N_Segs ( ) ; i ++ )		1637439	13					
ANR	1637693	ForInit	i = 0 ;	1246:6:34856:34859	1637439	0	True				
ANR	1637694	AssignmentExpression	i = 0		1637439	0		=			
ANR	1637695	Identifier	i		1637439	0					
ANR	1637696	PrimaryExpression	0		1637439	1					
ANR	1637697	Condition	i < head . N_Segs ( )	1246:11:34861:34875	1637439	1	True				
ANR	1637698	RelationalExpression	i < head . N_Segs ( )		1637439	0		<			
ANR	1637699	Identifier	i		1637439	0					
ANR	1637700	CallExpression	head . N_Segs ( )		1637439	1					
ANR	1637701	Callee	head . N_Segs		1637439	0					
ANR	1637702	MemberAccess	head . N_Segs		1637439	0					
ANR	1637703	Identifier	head		1637439	0					
ANR	1637704	Identifier	N_Segs		1637439	1					
ANR	1637705	ArgumentList			1637439	1					
ANR	1637706	PostIncDecOperationExpression	i ++	1246:28:34878:34880	1637439	2	True				
ANR	1637707	Identifier	i		1637439	0					
ANR	1637708	IncDec	++		1637439	1					
ANR	1637709	CompoundStatement		53:34:1273:1273	1637439	3					
ANR	1637710	IfStatement	"if ( ( nbytes = map [ i ] . Write ( file_d , position ) ) < 0 )"		1637439	0					
ANR	1637711	Condition	"( nbytes = map [ i ] . Write ( file_d , position ) ) < 0"	1248:6:34916:34957	1637439	0	True				
ANR	1637712	RelationalExpression	"( nbytes = map [ i ] . Write ( file_d , position ) ) < 0"		1637439	0		<			
ANR	1637713	AssignmentExpression	"nbytes = map [ i ] . Write ( file_d , position )"		1637439	0		=			
ANR	1637714	Identifier	nbytes		1637439	0					
ANR	1637715	CallExpression	"map [ i ] . Write ( file_d , position )"		1637439	1					
ANR	1637716	Callee	map [ i ] . Write		1637439	0					
ANR	1637717	MemberAccess	map [ i ] . Write		1637439	0					
ANR	1637718	ArrayIndexing	map [ i ]		1637439	0					
ANR	1637719	Identifier	map		1637439	0					
ANR	1637720	Identifier	i		1637439	1					
ANR	1637721	Identifier	Write		1637439	1					
ANR	1637722	ArgumentList	file_d		1637439	1					
ANR	1637723	Argument	file_d		1637439	0					
ANR	1637724	Identifier	file_d		1637439	0					
ANR	1637725	Argument	position		1637439	1					
ANR	1637726	Identifier	position		1637439	0					
ANR	1637727	PrimaryExpression	0		1637439	1					
ANR	1637728	CompoundStatement		55:51:1350:1350	1637439	1					
ANR	1637729	ExpressionStatement	"dprintf ( D_ALWAYS , ""Write() Segment[%d] of type %s -> FAILED\\n"" , i , map [ i ] . GetName ( ) )"	1249:3:34966:35056	1637439	0	True				
ANR	1637730	CallExpression	"dprintf ( D_ALWAYS , ""Write() Segment[%d] of type %s -> FAILED\\n"" , i , map [ i ] . GetName ( ) )"		1637439	0					
ANR	1637731	Callee	dprintf		1637439	0					
ANR	1637732	Identifier	dprintf		1637439	0					
ANR	1637733	ArgumentList	D_ALWAYS		1637439	1					
ANR	1637734	Argument	D_ALWAYS		1637439	0					
ANR	1637735	Identifier	D_ALWAYS		1637439	0					
ANR	1637736	Argument	"""Write() Segment[%d] of type %s -> FAILED\\n"""		1637439	1					
ANR	1637737	PrimaryExpression	"""Write() Segment[%d] of type %s -> FAILED\\n"""		1637439	0					
ANR	1637738	Argument	i		1637439	2					
ANR	1637739	Identifier	i		1637439	0					
ANR	1637740	Argument	map [ i ] . GetName ( )		1637439	3					
ANR	1637741	CallExpression	map [ i ] . GetName ( )		1637439	0					
ANR	1637742	Callee	map [ i ] . GetName		1637439	0					
ANR	1637743	MemberAccess	map [ i ] . GetName		1637439	0					
ANR	1637744	ArrayIndexing	map [ i ]		1637439	0					
ANR	1637745	Identifier	map		1637439	0					
ANR	1637746	Identifier	i		1637439	1					
ANR	1637747	Identifier	GetName		1637439	1					
ANR	1637748	ArgumentList			1637439	1					
ANR	1637749	ExpressionStatement	"dprintf ( D_ALWAYS , ""errno = %d, nbytes = %d\\n"" , errno , nbytes )"	1251:3:35061:35124	1637439	1	True				
ANR	1637750	CallExpression	"dprintf ( D_ALWAYS , ""errno = %d, nbytes = %d\\n"" , errno , nbytes )"		1637439	0					
ANR	1637751	Callee	dprintf		1637439	0					
ANR	1637752	Identifier	dprintf		1637439	0					
ANR	1637753	ArgumentList	D_ALWAYS		1637439	1					
ANR	1637754	Argument	D_ALWAYS		1637439	0					
ANR	1637755	Identifier	D_ALWAYS		1637439	0					
ANR	1637756	Argument	"""errno = %d, nbytes = %d\\n"""		1637439	1					
ANR	1637757	PrimaryExpression	"""errno = %d, nbytes = %d\\n"""		1637439	0					
ANR	1637758	Argument	errno		1637439	2					
ANR	1637759	Identifier	errno		1637439	0					
ANR	1637760	Argument	nbytes		1637439	3					
ANR	1637761	Identifier	nbytes		1637439	0					
ANR	1637762	ReturnStatement	return - 1 ;	1252:3:35129:35138	1637439	2	True				
ANR	1637763	UnaryOperationExpression	- 1		1637439	0					
ANR	1637764	UnaryOperator	-		1637439	0					
ANR	1637765	PrimaryExpression	1		1637439	1					
ANR	1637766	ExpressionStatement	position += nbytes	1254:2:35146:35164	1637439	1	True				
ANR	1637767	AssignmentExpression	position += nbytes		1637439	0		+=			
ANR	1637768	Identifier	position		1637439	0					
ANR	1637769	Identifier	nbytes		1637439	1					
ANR	1637770	ExpressionStatement	"dprintf ( D_ALWAYS , ""Wrote Segment[%d] of type %s -> OK\\n"" , i , map [ i ] . GetName ( ) )"	1255:2:35168:35248	1637439	2	True				
ANR	1637771	CallExpression	"dprintf ( D_ALWAYS , ""Wrote Segment[%d] of type %s -> OK\\n"" , i , map [ i ] . GetName ( ) )"		1637439	0					
ANR	1637772	Callee	dprintf		1637439	0					
ANR	1637773	Identifier	dprintf		1637439	0					
ANR	1637774	ArgumentList	D_ALWAYS		1637439	1					
ANR	1637775	Argument	D_ALWAYS		1637439	0					
ANR	1637776	Identifier	D_ALWAYS		1637439	0					
ANR	1637777	Argument	"""Wrote Segment[%d] of type %s -> OK\\n"""		1637439	1					
ANR	1637778	PrimaryExpression	"""Wrote Segment[%d] of type %s -> OK\\n"""		1637439	0					
ANR	1637779	Argument	i		1637439	2					
ANR	1637780	Identifier	i		1637439	0					
ANR	1637781	Argument	map [ i ] . GetName ( )		1637439	3					
ANR	1637782	CallExpression	map [ i ] . GetName ( )		1637439	0					
ANR	1637783	Callee	map [ i ] . GetName		1637439	0					
ANR	1637784	MemberAccess	map [ i ] . GetName		1637439	0					
ANR	1637785	ArrayIndexing	map [ i ]		1637439	0					
ANR	1637786	Identifier	map		1637439	0					
ANR	1637787	Identifier	i		1637439	1					
ANR	1637788	Identifier	GetName		1637439	1					
ANR	1637789	ArgumentList			1637439	1					
ANR	1637790	IfStatement	if ( condor_compress_ckpt )		1637439	14					
ANR	1637791	Condition	condor_compress_ckpt	1259:5:35286:35305	1637439	0	True				
ANR	1637792	Identifier	condor_compress_ckpt		1637439	0					
ANR	1637793	CompoundStatement		68:2:1726:1744	1637439	1					
ANR	1637794	IdentifierDeclStatement	"int bytes_to_go , rval ;"	1260:2:35312:35333	1637439	0	True				
ANR	1637795	IdentifierDecl	bytes_to_go		1637439	0					
ANR	1637796	IdentifierDeclType	int		1637439	0					
ANR	1637797	Identifier	bytes_to_go		1637439	1					
ANR	1637798	IdentifierDecl	rval		1637439	1					
ANR	1637799	IdentifierDeclType	int		1637439	0					
ANR	1637800	Identifier	rval		1637439	1					
ANR	1637801	IdentifierDeclStatement	unsigned char * ptr ;	1261:2:35337:35355	1637439	1	True				
ANR	1637802	IdentifierDecl	* ptr		1637439	0					
ANR	1637803	IdentifierDeclType	unsigned char *		1637439	0					
ANR	1637804	Identifier	ptr		1637439	1					
ANR	1637805	ExpressionStatement	zstr -> next_out = zbuf	1263:2:35360:35381	1637439	2	True				
ANR	1637806	AssignmentExpression	zstr -> next_out = zbuf		1637439	0		=			
ANR	1637807	PtrMemberAccess	zstr -> next_out		1637439	0					
ANR	1637808	Identifier	zstr		1637439	0					
ANR	1637809	Identifier	next_out		1637439	1					
ANR	1637810	Identifier	zbuf		1637439	1					
ANR	1637811	ExpressionStatement	zstr -> avail_out = zbufsize	1264:2:35385:35411	1637439	3	True				
ANR	1637812	AssignmentExpression	zstr -> avail_out = zbufsize		1637439	0		=			
ANR	1637813	PtrMemberAccess	zstr -> avail_out		1637439	0					
ANR	1637814	Identifier	zstr		1637439	0					
ANR	1637815	Identifier	avail_out		1637439	1					
ANR	1637816	Identifier	zbufsize		1637439	1					
ANR	1637817	IfStatement	"if ( deflate ( zstr , Z_FINISH ) != Z_STREAM_END )"		1637439	4					
ANR	1637818	Condition	"deflate ( zstr , Z_FINISH ) != Z_STREAM_END"	1265:6:35419:35457	1637439	0	True				
ANR	1637819	EqualityExpression	"deflate ( zstr , Z_FINISH ) != Z_STREAM_END"		1637439	0		!=			
ANR	1637820	CallExpression	"deflate ( zstr , Z_FINISH )"		1637439	0					
ANR	1637821	Callee	deflate		1637439	0					
ANR	1637822	Identifier	deflate		1637439	0					
ANR	1637823	ArgumentList	zstr		1637439	1					
ANR	1637824	Argument	zstr		1637439	0					
ANR	1637825	Identifier	zstr		1637439	0					
ANR	1637826	Argument	Z_FINISH		1637439	1					
ANR	1637827	Identifier	Z_FINISH		1637439	0					
ANR	1637828	Identifier	Z_STREAM_END		1637439	1					
ANR	1637829	CompoundStatement		72:47:1849:1849	1637439	1					
ANR	1637830	ExpressionStatement	"dprintf ( D_ALWAYS , ""zlib (deflate): %s\\n"" , zstr -> msg )"	1266:3:35465:35519	1637439	0	True				
ANR	1637831	CallExpression	"dprintf ( D_ALWAYS , ""zlib (deflate): %s\\n"" , zstr -> msg )"		1637439	0					
ANR	1637832	Callee	dprintf		1637439	0					
ANR	1637833	Identifier	dprintf		1637439	0					
ANR	1637834	ArgumentList	D_ALWAYS		1637439	1					
ANR	1637835	Argument	D_ALWAYS		1637439	0					
ANR	1637836	Identifier	D_ALWAYS		1637439	0					
ANR	1637837	Argument	"""zlib (deflate): %s\\n"""		1637439	1					
ANR	1637838	PrimaryExpression	"""zlib (deflate): %s\\n"""		1637439	0					
ANR	1637839	Argument	zstr -> msg		1637439	2					
ANR	1637840	PtrMemberAccess	zstr -> msg		1637439	0					
ANR	1637841	Identifier	zstr		1637439	0					
ANR	1637842	Identifier	msg		1637439	1					
ANR	1637843	ExpressionStatement	Suicide ( )	1267:3:35524:35533	1637439	1	True				
ANR	1637844	CallExpression	Suicide ( )		1637439	0					
ANR	1637845	Callee	Suicide		1637439	0					
ANR	1637846	Identifier	Suicide		1637439	0					
ANR	1637847	ArgumentList			1637439	1					
ANR	1637848	ForStatement	"for ( bytes_to_go = ( zbufsize - zstr -> avail_out ) , ptr = zbuf ; bytes_to_go > 0 ; bytes_to_go -= rval , ptr += rval , zstr -> avail_out += rval )"		1637439	5					
ANR	1637849	ForInit	"bytes_to_go = ( zbufsize - zstr -> avail_out ) , ptr = zbuf ;"	1269:7:35546:35598	1637439	0	True				
ANR	1637850	Expression	"bytes_to_go = ( zbufsize - zstr -> avail_out ) , ptr = zbuf"		1637439	0					
ANR	1637851	AssignmentExpression	bytes_to_go = ( zbufsize - zstr -> avail_out )		1637439	0		=			
ANR	1637852	Identifier	bytes_to_go		1637439	0					
ANR	1637853	AdditiveExpression	zbufsize - zstr -> avail_out		1637439	1		-			
ANR	1637854	Identifier	zbufsize		1637439	0					
ANR	1637855	PtrMemberAccess	zstr -> avail_out		1637439	1					
ANR	1637856	Identifier	zstr		1637439	0					
ANR	1637857	Identifier	avail_out		1637439	1					
ANR	1637858	AssignmentExpression	ptr = zbuf		1637439	1		=			
ANR	1637859	Identifier	ptr		1637439	0					
ANR	1637860	Identifier	zbuf		1637439	1					
ANR	1637861	Condition	bytes_to_go > 0	1270:4:35604:35618	1637439	1	True				
ANR	1637862	RelationalExpression	bytes_to_go > 0		1637439	0		>			
ANR	1637863	Identifier	bytes_to_go		1637439	0					
ANR	1637864	PrimaryExpression	0		1637439	1					
ANR	1637865	Expression	"bytes_to_go -= rval , ptr += rval , zstr -> avail_out += rval"	1271:4:35625:35681	1637439	2	True				
ANR	1637866	AssignmentExpression	bytes_to_go -= rval		1637439	0		-=			
ANR	1637867	Identifier	bytes_to_go		1637439	0					
ANR	1637868	Identifier	rval		1637439	1					
ANR	1637869	Expression	"ptr += rval , zstr -> avail_out += rval"		1637439	1					
ANR	1637870	AssignmentExpression	ptr += rval		1637439	0		+=			
ANR	1637871	Identifier	ptr		1637439	0					
ANR	1637872	Identifier	rval		1637439	1					
ANR	1637873	AssignmentExpression	zstr -> avail_out += rval		1637439	1		+=			
ANR	1637874	PtrMemberAccess	zstr -> avail_out		1637439	0					
ANR	1637875	Identifier	zstr		1637439	0					
ANR	1637876	Identifier	avail_out		1637439	1					
ANR	1637877	Identifier	rval		1637439	1					
ANR	1637878	CompoundStatement		78:63:2073:2073	1637439	3					
ANR	1637879	ExpressionStatement	"rval = write ( file_d , ptr , bytes_to_go )"	1272:3:35689:35725	1637439	0	True				
ANR	1637880	AssignmentExpression	"rval = write ( file_d , ptr , bytes_to_go )"		1637439	0		=			
ANR	1637881	Identifier	rval		1637439	0					
ANR	1637882	CallExpression	"write ( file_d , ptr , bytes_to_go )"		1637439	1					
ANR	1637883	Callee	write		1637439	0					
ANR	1637884	Identifier	write		1637439	0					
ANR	1637885	ArgumentList	file_d		1637439	1					
ANR	1637886	Argument	file_d		1637439	0					
ANR	1637887	Identifier	file_d		1637439	0					
ANR	1637888	Argument	ptr		1637439	1					
ANR	1637889	Identifier	ptr		1637439	0					
ANR	1637890	Argument	bytes_to_go		1637439	2					
ANR	1637891	Identifier	bytes_to_go		1637439	0					
ANR	1637892	IfStatement	if ( rval < 0 )		1637439	1					
ANR	1637893	Condition	rval < 0	1273:7:35734:35741	1637439	0	True				
ANR	1637894	RelationalExpression	rval < 0		1637439	0		<			
ANR	1637895	Identifier	rval		1637439	0					
ANR	1637896	PrimaryExpression	0		1637439	1					
ANR	1637897	CompoundStatement		80:17:2133:2133	1637439	1					
ANR	1637898	Statement	dprintf	1274:4:35750:35756	1637439	0	True				
ANR	1637899	Statement	(	1274:11:35757:35757	1637439	1	True				
ANR	1637900	Statement	D_ALWAYS	1274:12:35758:35765	1637439	2	True				
ANR	1637901	Statement	","	1274:20:35766:35766	1637439	3	True				
ANR	1637902	Statement	"""write failed with errno %d in """	1274:22:35768:35799	1637439	4	True				
ANR	1637903	Statement	"""SegMap::Write\\n"""	1275:6:35807:35823	1637439	5	True				
ANR	1637904	Statement	","	1275:23:35824:35824	1637439	6	True				
ANR	1637905	Statement	errno	1275:25:35826:35830	1637439	7	True				
ANR	1637906	Statement	)	1275:30:35831:35831	1637439	8	True				
ANR	1637907	ExpressionStatement		1275:31:35832:35832	1637439	9	True				
ANR	1637908	ExpressionStatement	Suicide ( )	1276:4:35838:35847	1637439	10	True				
ANR	1637909	CallExpression	Suicide ( )		1637439	0					
ANR	1637910	Callee	Suicide		1637439	0					
ANR	1637911	Identifier	Suicide		1637439	0					
ANR	1637912	ArgumentList			1637439	1					
ANR	1637913	IfStatement	if ( zstr -> avail_out != zbufsize )		1637439	6					
ANR	1637914	Condition	zstr -> avail_out != zbufsize	1279:6:35864:35890	1637439	0	True				
ANR	1637915	EqualityExpression	zstr -> avail_out != zbufsize		1637439	0		!=			
ANR	1637916	PtrMemberAccess	zstr -> avail_out		1637439	0					
ANR	1637917	Identifier	zstr		1637439	0					
ANR	1637918	Identifier	avail_out		1637439	1					
ANR	1637919	Identifier	zbufsize		1637439	1					
ANR	1637920	CompoundStatement		86:35:2282:2282	1637439	1					
ANR	1637921	Statement	dprintf	1280:3:35898:35904	1637439	0	True				
ANR	1637922	Statement	(	1280:10:35905:35905	1637439	1	True				
ANR	1637923	Statement	D_ALWAYS	1280:11:35906:35913	1637439	2	True				
ANR	1637924	Statement	","	1280:19:35914:35914	1637439	3	True				
ANR	1637925	Statement	"""deflate logic error, avail_out (%d) != """	1280:21:35916:35956	1637439	4	True				
ANR	1637926	Statement	"""zbufsize (%d)\\n"""	1281:5:35963:35979	1637439	5	True				
ANR	1637927	Statement	","	1281:22:35980:35980	1637439	6	True				
ANR	1637928	Statement	zstr	1281:24:35982:35985	1637439	7	True				
ANR	1637929	Statement	->	1281:28:35986:35987	1637439	8	True				
ANR	1637930	Statement	avail_out	1281:30:35988:35996	1637439	9	True				
ANR	1637931	Statement	","	1281:39:35997:35997	1637439	10	True				
ANR	1637932	Statement	zbufsize	1281:41:35999:36006	1637439	11	True				
ANR	1637933	Statement	)	1281:49:36007:36007	1637439	12	True				
ANR	1637934	ExpressionStatement		1281:50:36008:36008	1637439	13	True				
ANR	1637935	ExpressionStatement	Suicide ( )	1282:3:36013:36022	1637439	14	True				
ANR	1637936	CallExpression	Suicide ( )		1637439	0					
ANR	1637937	Callee	Suicide		1637439	0					
ANR	1637938	Identifier	Suicide		1637439	0					
ANR	1637939	ArgumentList			1637439	1					
ANR	1637940	ExpressionStatement	zstr -> avail_out = 0	1285:2:36031:36050	1637439	7	True				
ANR	1637941	AssignmentExpression	zstr -> avail_out = 0		1637439	0		=			
ANR	1637942	PtrMemberAccess	zstr -> avail_out		1637439	0					
ANR	1637943	Identifier	zstr		1637439	0					
ANR	1637944	Identifier	avail_out		1637439	1					
ANR	1637945	PrimaryExpression	0		1637439	1					
ANR	1637946	ExpressionStatement	zstr -> next_out = Z_NULL	1286:2:36054:36077	1637439	8	True				
ANR	1637947	AssignmentExpression	zstr -> next_out = Z_NULL		1637439	0		=			
ANR	1637948	PtrMemberAccess	zstr -> next_out		1637439	0					
ANR	1637949	Identifier	zstr		1637439	0					
ANR	1637950	Identifier	next_out		1637439	1					
ANR	1637951	Identifier	Z_NULL		1637439	1					
ANR	1637952	ExpressionStatement	condor_free ( zbuf )	1287:2:36081:36098	1637439	9	True				
ANR	1637953	CallExpression	condor_free ( zbuf )		1637439	0					
ANR	1637954	Callee	condor_free		1637439	0					
ANR	1637955	Identifier	condor_free		1637439	0					
ANR	1637956	ArgumentList	zbuf		1637439	1					
ANR	1637957	Argument	zbuf		1637439	0					
ANR	1637958	Identifier	zbuf		1637439	0					
ANR	1637959	ExpressionStatement	zbuf = Z_NULL	1288:2:36102:36115	1637439	10	True				
ANR	1637960	AssignmentExpression	zbuf = Z_NULL		1637439	0		=			
ANR	1637961	Identifier	zbuf		1637439	0					
ANR	1637962	Identifier	Z_NULL		1637439	1					
ANR	1637963	ExpressionStatement	rval = deflateEnd ( zstr )	1290:2:36121:36144	1637439	11	True				
ANR	1637964	AssignmentExpression	rval = deflateEnd ( zstr )		1637439	0		=			
ANR	1637965	Identifier	rval		1637439	0					
ANR	1637966	CallExpression	deflateEnd ( zstr )		1637439	1					
ANR	1637967	Callee	deflateEnd		1637439	0					
ANR	1637968	Identifier	deflateEnd		1637439	0					
ANR	1637969	ArgumentList	zstr		1637439	1					
ANR	1637970	Argument	zstr		1637439	0					
ANR	1637971	Identifier	zstr		1637439	0					
ANR	1637972	IfStatement	if ( rval != Z_OK )		1637439	12					
ANR	1637973	Condition	rval != Z_OK	1291:6:36152:36163	1637439	0	True				
ANR	1637974	EqualityExpression	rval != Z_OK		1637439	0		!=			
ANR	1637975	Identifier	rval		1637439	0					
ANR	1637976	Identifier	Z_OK		1637439	1					
ANR	1637977	CompoundStatement		98:20:2555:2555	1637439	1					
ANR	1637978	ExpressionStatement	"dprintf ( D_ALWAYS , ""zlib (deflateEnd): %d\\n"" , rval )"	1292:3:36171:36223	1637439	0	True				
ANR	1637979	CallExpression	"dprintf ( D_ALWAYS , ""zlib (deflateEnd): %d\\n"" , rval )"		1637439	0					
ANR	1637980	Callee	dprintf		1637439	0					
ANR	1637981	Identifier	dprintf		1637439	0					
ANR	1637982	ArgumentList	D_ALWAYS		1637439	1					
ANR	1637983	Argument	D_ALWAYS		1637439	0					
ANR	1637984	Identifier	D_ALWAYS		1637439	0					
ANR	1637985	Argument	"""zlib (deflateEnd): %d\\n"""		1637439	1					
ANR	1637986	PrimaryExpression	"""zlib (deflateEnd): %d\\n"""		1637439	0					
ANR	1637987	Argument	rval		1637439	2					
ANR	1637988	Identifier	rval		1637439	0					
ANR	1637989	ExpressionStatement	Suicide ( )	1293:3:36228:36237	1637439	1	True				
ANR	1637990	CallExpression	Suicide ( )		1637439	0					
ANR	1637991	Callee	Suicide		1637439	0					
ANR	1637992	Identifier	Suicide		1637439	0					
ANR	1637993	ArgumentList			1637439	1					
ANR	1637994	ExpressionStatement	condor_free ( zstr )	1295:2:36245:36262	1637439	13	True				
ANR	1637995	CallExpression	condor_free ( zstr )		1637439	0					
ANR	1637996	Callee	condor_free		1637439	0					
ANR	1637997	Identifier	condor_free		1637439	0					
ANR	1637998	ArgumentList	zstr		1637439	1					
ANR	1637999	Argument	zstr		1637439	0					
ANR	1638000	Identifier	zstr		1637439	0					
ANR	1638001	ExpressionStatement	zstr = NULL	1296:2:36266:36277	1637439	14	True				
ANR	1638002	AssignmentExpression	zstr = NULL		1637439	0		=			
ANR	1638003	Identifier	zstr		1637439	0					
ANR	1638004	Identifier	NULL		1637439	1					
ANR	1638005	ExpressionStatement	"dprintf ( D_ALWAYS , ""Wrote all Segments OK\\n"" )"	1300:1:36291:36337	1637439	15	True				
ANR	1638006	CallExpression	"dprintf ( D_ALWAYS , ""Wrote all Segments OK\\n"" )"		1637439	0					
ANR	1638007	Callee	dprintf		1637439	0					
ANR	1638008	Identifier	dprintf		1637439	0					
ANR	1638009	ArgumentList	D_ALWAYS		1637439	1					
ANR	1638010	Argument	D_ALWAYS		1637439	0					
ANR	1638011	Identifier	D_ALWAYS		1637439	0					
ANR	1638012	Argument	"""Wrote all Segments OK\\n"""		1637439	1					
ANR	1638013	PrimaryExpression	"""Wrote all Segments OK\\n"""		1637439	0					
ANR	1638014	IfStatement	if ( _condor_in_file_stream && ! condor_compress_ckpt )		1637439	16					
ANR	1638015	Condition	_condor_in_file_stream && ! condor_compress_ckpt	1308:5:36671:36717	1637439	0	True				
ANR	1638016	AndExpression	_condor_in_file_stream && ! condor_compress_ckpt		1637439	0		&&			
ANR	1638017	Identifier	_condor_in_file_stream		1637439	0					
ANR	1638018	UnaryOperationExpression	! condor_compress_ckpt		1637439	1					
ANR	1638019	UnaryOperator	!		1637439	0					
ANR	1638020	Identifier	condor_compress_ckpt		1637439	1					
ANR	1638021	CompoundStatement		115:55:3110:3110	1637439	1					
ANR	1638022	ExpressionStatement	"status = net_read ( file_d , & ack , sizeof ( ack ) )"	1312:2:36770:36816	1637439	0	True				
ANR	1638023	AssignmentExpression	"status = net_read ( file_d , & ack , sizeof ( ack ) )"		1637439	0		=			
ANR	1638024	Identifier	status		1637439	0					
ANR	1638025	CallExpression	"net_read ( file_d , & ack , sizeof ( ack ) )"		1637439	1					
ANR	1638026	Callee	net_read		1637439	0					
ANR	1638027	Identifier	net_read		1637439	0					
ANR	1638028	ArgumentList	file_d		1637439	1					
ANR	1638029	Argument	file_d		1637439	0					
ANR	1638030	Identifier	file_d		1637439	0					
ANR	1638031	Argument	& ack		1637439	1					
ANR	1638032	UnaryOperationExpression	& ack		1637439	0					
ANR	1638033	UnaryOperator	&		1637439	0					
ANR	1638034	Identifier	ack		1637439	1					
ANR	1638035	Argument	sizeof ( ack )		1637439	2					
ANR	1638036	SizeofExpression	sizeof ( ack )		1637439	0					
ANR	1638037	Sizeof	sizeof		1637439	0					
ANR	1638038	SizeofOperand	ack		1637439	1					
ANR	1638039	IfStatement	if ( status < 0 )		1637439	1					
ANR	1638040	Condition	status < 0	1313:6:36824:36833	1637439	0	True				
ANR	1638041	RelationalExpression	status < 0		1637439	0		<			
ANR	1638042	Identifier	status		1637439	0					
ANR	1638043	PrimaryExpression	0		1637439	1					
ANR	1638044	CompoundStatement		120:19:3226:3226	1637439	1					
ANR	1638045	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't read final ack from the shadow\\n"" )"	1314:3:36842:36903	1637439	0	True				
ANR	1638046	CallExpression	"dprintf ( D_ALWAYS , ""Can't read final ack from the shadow\\n"" )"		1637439	0					
ANR	1638047	Callee	dprintf		1637439	0					
ANR	1638048	Identifier	dprintf		1637439	0					
ANR	1638049	ArgumentList	D_ALWAYS		1637439	1					
ANR	1638050	Argument	D_ALWAYS		1637439	0					
ANR	1638051	Identifier	D_ALWAYS		1637439	0					
ANR	1638052	Argument	"""Can't read final ack from the shadow\\n"""		1637439	1					
ANR	1638053	PrimaryExpression	"""Can't read final ack from the shadow\\n"""		1637439	0					
ANR	1638054	ReturnStatement	return - 1 ;	1315:3:36908:36917	1637439	1	True				
ANR	1638055	UnaryOperationExpression	- 1		1637439	0					
ANR	1638056	UnaryOperator	-		1637439	0					
ANR	1638057	PrimaryExpression	1		1637439	1					
ANR	1638058	ExpressionStatement	ack = ntohl ( ack )	1318:2:36926:36944	1637439	2	True				
ANR	1638059	AssignmentExpression	ack = ntohl ( ack )		1637439	0		=			
ANR	1638060	Identifier	ack		1637439	0					
ANR	1638061	CallExpression	ntohl ( ack )		1637439	1					
ANR	1638062	Callee	ntohl		1637439	0					
ANR	1638063	Identifier	ntohl		1637439	0					
ANR	1638064	ArgumentList	ack		1637439	1					
ANR	1638065	Argument	ack		1637439	0					
ANR	1638066	Identifier	ack		1637439	0					
ANR	1638067	IfStatement	if ( ack != len )		1637439	3					
ANR	1638068	Condition	ack != len	1319:6:36994:37003	1637439	0	True				
ANR	1638069	EqualityExpression	ack != len		1637439	0		!=			
ANR	1638070	Identifier	ack		1637439	0					
ANR	1638071	Identifier	len		1637439	1					
ANR	1638072	CompoundStatement		126:19:3396:3396	1637439	1					
ANR	1638073	ExpressionStatement	"dprintf ( D_ALWAYS , ""Ack - expected %d, but got %d\\n"" , len , ack )"	1320:3:37012:37076	1637439	0	True				
ANR	1638074	CallExpression	"dprintf ( D_ALWAYS , ""Ack - expected %d, but got %d\\n"" , len , ack )"		1637439	0					
ANR	1638075	Callee	dprintf		1637439	0					
ANR	1638076	Identifier	dprintf		1637439	0					
ANR	1638077	ArgumentList	D_ALWAYS		1637439	1					
ANR	1638078	Argument	D_ALWAYS		1637439	0					
ANR	1638079	Identifier	D_ALWAYS		1637439	0					
ANR	1638080	Argument	"""Ack - expected %d, but got %d\\n"""		1637439	1					
ANR	1638081	PrimaryExpression	"""Ack - expected %d, but got %d\\n"""		1637439	0					
ANR	1638082	Argument	len		1637439	2					
ANR	1638083	Identifier	len		1637439	0					
ANR	1638084	Argument	ack		1637439	3					
ANR	1638085	Identifier	ack		1637439	0					
ANR	1638086	ReturnStatement	return - 1 ;	1321:3:37081:37090	1637439	1	True				
ANR	1638087	UnaryOperationExpression	- 1		1637439	0					
ANR	1638088	UnaryOperator	-		1637439	0					
ANR	1638089	PrimaryExpression	1		1637439	1					
ANR	1638090	ReturnStatement	return 0 ;	1325:1:37101:37109	1637439	17	True				
ANR	1638091	PrimaryExpression	0		1637439	0					
ANR	1638092	ReturnType	int		1637439	1					
ANR	1638093	Identifier	Image :: Write		1637439	2					
ANR	1638094	ParameterList	int file_d		1637439	3					
ANR	1638095	Parameter	int file_d	1193:14:33597:33606	1637439	0	True				
ANR	1638096	ParameterType	int		1637439	0					
ANR	1638097	Identifier	file_d		1637439	1					
ANR	1638098	CFGEntryNode	ENTRY		1637439		True				
ANR	1638099	CFGExitNode	EXIT		1637439		True				
ANR	1638100	Symbol	net_read		1637439						
ANR	1638101	Symbol	zbuf		1637439						
ANR	1638102	Symbol	zfree		1637439						
ANR	1638103	Symbol	zstr -> zalloc		1637439						
ANR	1638104	Symbol	zalloc		1637439						
ANR	1638105	Symbol	map [ i ] . Write		1637439						
ANR	1638106	Symbol	* map		1637439						
ANR	1638107	Symbol	ack		1637439						
ANR	1638108	Symbol	* zstr		1637439						
ANR	1638109	Symbol	Z_OK		1637439						
ANR	1638110	Symbol	zstr		1637439						
ANR	1638111	Symbol	zstr -> avail_out		1637439						
ANR	1638112	Symbol	head		1637439						
ANR	1638113	Symbol	deflateEnd		1637439						
ANR	1638114	Symbol	& head		1637439						
ANR	1638115	Symbol	head . N_Segs		1637439						
ANR	1638116	Symbol	len		1637439						
ANR	1638117	Symbol	zstr -> msg		1637439						
ANR	1638118	Symbol	map [ i ] . GetName		1637439						
ANR	1638119	Symbol	zbufsize		1637439						
ANR	1638120	Symbol	Z_STREAM_END		1637439						
ANR	1638121	Symbol	rval		1637439						
ANR	1638122	Symbol	_condor_in_file_stream		1637439						
ANR	1638123	Symbol	write		1637439						
ANR	1638124	Symbol	map		1637439						
ANR	1638125	Symbol	errno		1637439						
ANR	1638126	Symbol	bytes_to_go		1637439						
ANR	1638127	Symbol	NULL		1637439						
ANR	1638128	Symbol	D_ALWAYS		1637439						
ANR	1638129	Symbol	deflateInit		1637439						
ANR	1638130	Symbol	& ack		1637439						
ANR	1638131	Symbol	file_d		1637439						
ANR	1638132	Symbol	i		1637439						
ANR	1638133	Symbol	ntohl		1637439						
ANR	1638134	Symbol	zstr -> opaque		1637439						
ANR	1638135	Symbol	Z_DEFAULT_COMPRESSION		1637439						
ANR	1638136	Symbol	Z_FINISH		1637439						
ANR	1638137	Symbol	nbytes		1637439						
ANR	1638138	Symbol	ptr		1637439						
ANR	1638139	Symbol	condor_malloc		1637439						
ANR	1638140	Symbol	* i		1637439						
ANR	1638141	Symbol	deflate		1637439						
ANR	1638142	Symbol	condor_compress_ckpt		1637439						
ANR	1638143	Symbol	position		1637439						
ANR	1638144	Symbol	zstr -> zfree		1637439						
ANR	1638145	Symbol	status		1637439						
ANR	1638146	Symbol	Z_NULL		1637439						
ANR	1638147	Symbol	zstr -> next_out		1637439						
ANR	1638148	Function	Image :: Read	1336:0:37446:38317							
ANR	1638149	FunctionDef	Image :: Read ()		1638148	0					
ANR	1638150	CompoundStatement		1338:0:37464:38317	1638148	0					
ANR	1638151	IdentifierDeclStatement	int i ;	1339:1:37467:37473	1638148	0	True				
ANR	1638152	IdentifierDecl	i		1638148	0					
ANR	1638153	IdentifierDeclType	int		1638148	0					
ANR	1638154	Identifier	i		1638148	1					
ANR	1638155	IdentifierDeclStatement	int nbytes ;	1340:1:37476:37487	1638148	1	True				
ANR	1638156	IdentifierDecl	nbytes		1638148	0					
ANR	1638157	IdentifierDeclType	int		1638148	0					
ANR	1638158	Identifier	nbytes		1638148	1					
ANR	1638159	IfStatement	if ( fd < 0 && file_name && file_name [ 0 ] )		1638148	2					
ANR	1638160	Condition	fd < 0 && file_name && file_name [ 0 ]	1343:5:37555:37589	1638148	0	True				
ANR	1638161	AndExpression	fd < 0 && file_name && file_name [ 0 ]		1638148	0		&&			
ANR	1638162	RelationalExpression	fd < 0		1638148	0		<			
ANR	1638163	Identifier	fd		1638148	0					
ANR	1638164	PrimaryExpression	0		1638148	1					
ANR	1638165	AndExpression	file_name && file_name [ 0 ]		1638148	1		&&			
ANR	1638166	Identifier	file_name		1638148	0					
ANR	1638167	ArrayIndexing	file_name [ 0 ]		1638148	1					
ANR	1638168	Identifier	file_name		1638148	0					
ANR	1638169	PrimaryExpression	0		1638148	1					
ANR	1638170	CompoundStatement		6:43:128:128	1638148	1					
ANR	1638171	IfStatement	"if ( ( fd = open_ckpt_file ( file_name , O_RDONLY , 0 ) ) < 0 )"		1638148	0					
ANR	1638172	Condition	"( fd = open_ckpt_file ( file_name , O_RDONLY , 0 ) ) < 0"	1345:7:37652:37696	1638148	0	True				
ANR	1638173	RelationalExpression	"( fd = open_ckpt_file ( file_name , O_RDONLY , 0 ) ) < 0"		1638148	0		<			
ANR	1638174	AssignmentExpression	"fd = open_ckpt_file ( file_name , O_RDONLY , 0 )"		1638148	0		=			
ANR	1638175	Identifier	fd		1638148	0					
ANR	1638176	CallExpression	"open_ckpt_file ( file_name , O_RDONLY , 0 )"		1638148	1					
ANR	1638177	Callee	open_ckpt_file		1638148	0					
ANR	1638178	Identifier	open_ckpt_file		1638148	0					
ANR	1638179	ArgumentList	file_name		1638148	1					
ANR	1638180	Argument	file_name		1638148	0					
ANR	1638181	Identifier	file_name		1638148	0					
ANR	1638182	Argument	O_RDONLY		1638148	1					
ANR	1638183	Identifier	O_RDONLY		1638148	0					
ANR	1638184	Argument	0		1638148	2					
ANR	1638185	PrimaryExpression	0		1638148	0					
ANR	1638186	PrimaryExpression	0		1638148	1					
ANR	1638187	CompoundStatement		8:55:235:235	1638148	1					
ANR	1638188	ExpressionStatement	"dprintf ( D_ALWAYS , ""open_ckpt_file failed: %s"" , strerror ( errno ) )"	1346:4:37706:37777	1638148	0	True				
ANR	1638189	CallExpression	"dprintf ( D_ALWAYS , ""open_ckpt_file failed: %s"" , strerror ( errno ) )"		1638148	0					
ANR	1638190	Callee	dprintf		1638148	0					
ANR	1638191	Identifier	dprintf		1638148	0					
ANR	1638192	ArgumentList	D_ALWAYS		1638148	1					
ANR	1638193	Argument	D_ALWAYS		1638148	0					
ANR	1638194	Identifier	D_ALWAYS		1638148	0					
ANR	1638195	Argument	"""open_ckpt_file failed: %s"""		1638148	1					
ANR	1638196	PrimaryExpression	"""open_ckpt_file failed: %s"""		1638148	0					
ANR	1638197	Argument	strerror ( errno )		1638148	2					
ANR	1638198	CallExpression	strerror ( errno )		1638148	0					
ANR	1638199	Callee	strerror		1638148	0					
ANR	1638200	Identifier	strerror		1638148	0					
ANR	1638201	ArgumentList	errno		1638148	1					
ANR	1638202	Argument	errno		1638148	0					
ANR	1638203	Identifier	errno		1638148	0					
ANR	1638204	ReturnStatement	return - 1 ;	1348:4:37783:37792	1638148	1	True				
ANR	1638205	UnaryOperationExpression	- 1		1638148	0					
ANR	1638206	UnaryOperator	-		1638148	0					
ANR	1638207	PrimaryExpression	1		1638148	1					
ANR	1638208	IfStatement	"if ( ( nbytes = net_read ( fd , & head , sizeof ( head ) ) ) < 0 )"		1638148	3					
ANR	1638209	Condition	"( nbytes = net_read ( fd , & head , sizeof ( head ) ) ) < 0"	1354:5:37874:37917	1638148	0	True				
ANR	1638210	RelationalExpression	"( nbytes = net_read ( fd , & head , sizeof ( head ) ) ) < 0"		1638148	0		<			
ANR	1638211	AssignmentExpression	"nbytes = net_read ( fd , & head , sizeof ( head ) )"		1638148	0		=			
ANR	1638212	Identifier	nbytes		1638148	0					
ANR	1638213	CallExpression	"net_read ( fd , & head , sizeof ( head ) )"		1638148	1					
ANR	1638214	Callee	net_read		1638148	0					
ANR	1638215	Identifier	net_read		1638148	0					
ANR	1638216	ArgumentList	fd		1638148	1					
ANR	1638217	Argument	fd		1638148	0					
ANR	1638218	Identifier	fd		1638148	0					
ANR	1638219	Argument	& head		1638148	1					
ANR	1638220	UnaryOperationExpression	& head		1638148	0					
ANR	1638221	UnaryOperator	&		1638148	0					
ANR	1638222	Identifier	head		1638148	1					
ANR	1638223	Argument	sizeof ( head )		1638148	2					
ANR	1638224	SizeofExpression	sizeof ( head )		1638148	0					
ANR	1638225	Sizeof	sizeof		1638148	0					
ANR	1638226	SizeofOperand	head		1638148	1					
ANR	1638227	PrimaryExpression	0		1638148	1					
ANR	1638228	CompoundStatement		17:52:456:456	1638148	1					
ANR	1638229	ReturnStatement	return - 1 ;	1355:2:37925:37934	1638148	0	True				
ANR	1638230	UnaryOperationExpression	- 1		1638148	0					
ANR	1638231	UnaryOperator	-		1638148	0					
ANR	1638232	PrimaryExpression	1		1638148	1					
ANR	1638233	ExpressionStatement	pos += nbytes	1357:1:37940:37953	1638148	4	True				
ANR	1638234	AssignmentExpression	pos += nbytes		1638148	0		+=			
ANR	1638235	Identifier	pos		1638148	0					
ANR	1638236	Identifier	nbytes		1638148	1					
ANR	1638237	ExpressionStatement	"dprintf ( D_ALWAYS , ""Read headers OK\\n"" )"	1358:1:37956:37996	1638148	5	True				
ANR	1638238	CallExpression	"dprintf ( D_ALWAYS , ""Read headers OK\\n"" )"		1638148	0					
ANR	1638239	Callee	dprintf		1638148	0					
ANR	1638240	Identifier	dprintf		1638148	0					
ANR	1638241	ArgumentList	D_ALWAYS		1638148	1					
ANR	1638242	Argument	D_ALWAYS		1638148	0					
ANR	1638243	Identifier	D_ALWAYS		1638148	0					
ANR	1638244	Argument	"""Read headers OK\\n"""		1638148	1					
ANR	1638245	PrimaryExpression	"""Read headers OK\\n"""		1638148	0					
ANR	1638246	ForStatement	for ( i = 0 ; i < head . N_Segs ( ) ; i ++ )		1638148	6					
ANR	1638247	ForInit	i = 0 ;	1361:6:38035:38038	1638148	0	True				
ANR	1638248	AssignmentExpression	i = 0		1638148	0		=			
ANR	1638249	Identifier	i		1638148	0					
ANR	1638250	PrimaryExpression	0		1638148	1					
ANR	1638251	Condition	i < head . N_Segs ( )	1361:11:38040:38054	1638148	1	True				
ANR	1638252	RelationalExpression	i < head . N_Segs ( )		1638148	0		<			
ANR	1638253	Identifier	i		1638148	0					
ANR	1638254	CallExpression	head . N_Segs ( )		1638148	1					
ANR	1638255	Callee	head . N_Segs		1638148	0					
ANR	1638256	MemberAccess	head . N_Segs		1638148	0					
ANR	1638257	Identifier	head		1638148	0					
ANR	1638258	Identifier	N_Segs		1638148	1					
ANR	1638259	ArgumentList			1638148	1					
ANR	1638260	PostIncDecOperationExpression	i ++	1361:28:38057:38059	1638148	2	True				
ANR	1638261	Identifier	i		1638148	0					
ANR	1638262	IncDec	++		1638148	1					
ANR	1638263	CompoundStatement		24:34:598:598	1638148	3					
ANR	1638264	IfStatement	"if ( ( nbytes = net_read ( fd , & map [ i ] , sizeof ( SegMap ) ) ) < 0 )"		1638148	0					
ANR	1638265	Condition	"( nbytes = net_read ( fd , & map [ i ] , sizeof ( SegMap ) ) ) < 0"	1362:6:38071:38118	1638148	0	True				
ANR	1638266	RelationalExpression	"( nbytes = net_read ( fd , & map [ i ] , sizeof ( SegMap ) ) ) < 0"		1638148	0		<			
ANR	1638267	AssignmentExpression	"nbytes = net_read ( fd , & map [ i ] , sizeof ( SegMap ) )"		1638148	0		=			
ANR	1638268	Identifier	nbytes		1638148	0					
ANR	1638269	CallExpression	"net_read ( fd , & map [ i ] , sizeof ( SegMap ) )"		1638148	1					
ANR	1638270	Callee	net_read		1638148	0					
ANR	1638271	Identifier	net_read		1638148	0					
ANR	1638272	ArgumentList	fd		1638148	1					
ANR	1638273	Argument	fd		1638148	0					
ANR	1638274	Identifier	fd		1638148	0					
ANR	1638275	Argument	& map [ i ]		1638148	1					
ANR	1638276	UnaryOperationExpression	& map [ i ]		1638148	0					
ANR	1638277	UnaryOperator	&		1638148	0					
ANR	1638278	ArrayIndexing	map [ i ]		1638148	1					
ANR	1638279	Identifier	map		1638148	0					
ANR	1638280	Identifier	i		1638148	1					
ANR	1638281	Argument	sizeof ( SegMap )		1638148	2					
ANR	1638282	SizeofExpression	sizeof ( SegMap )		1638148	0					
ANR	1638283	Sizeof	sizeof		1638148	0					
ANR	1638284	SizeofOperand	SegMap		1638148	1					
ANR	1638285	PrimaryExpression	0		1638148	1					
ANR	1638286	CompoundStatement		25:57:657:657	1638148	1					
ANR	1638287	ReturnStatement	return - 1 ;	1363:3:38127:38136	1638148	0	True				
ANR	1638288	UnaryOperationExpression	- 1		1638148	0					
ANR	1638289	UnaryOperator	-		1638148	0					
ANR	1638290	PrimaryExpression	1		1638148	1					
ANR	1638291	ExpressionStatement	pos += nbytes	1366:2:38168:38181	1638148	1	True				
ANR	1638292	AssignmentExpression	pos += nbytes		1638148	0		+=			
ANR	1638293	Identifier	pos		1638148	0					
ANR	1638294	Identifier	nbytes		1638148	1					
ANR	1638295	ExpressionStatement	"dprintf ( D_ALWAYS , ""Read SegMap[%d](%s) OK\\n"" , i , map [ i ] . GetName ( ) )"	1367:2:38185:38253	1638148	2	True				
ANR	1638296	CallExpression	"dprintf ( D_ALWAYS , ""Read SegMap[%d](%s) OK\\n"" , i , map [ i ] . GetName ( ) )"		1638148	0					
ANR	1638297	Callee	dprintf		1638148	0					
ANR	1638298	Identifier	dprintf		1638148	0					
ANR	1638299	ArgumentList	D_ALWAYS		1638148	1					
ANR	1638300	Argument	D_ALWAYS		1638148	0					
ANR	1638301	Identifier	D_ALWAYS		1638148	0					
ANR	1638302	Argument	"""Read SegMap[%d](%s) OK\\n"""		1638148	1					
ANR	1638303	PrimaryExpression	"""Read SegMap[%d](%s) OK\\n"""		1638148	0					
ANR	1638304	Argument	i		1638148	2					
ANR	1638305	Identifier	i		1638148	0					
ANR	1638306	Argument	map [ i ] . GetName ( )		1638148	3					
ANR	1638307	CallExpression	map [ i ] . GetName ( )		1638148	0					
ANR	1638308	Callee	map [ i ] . GetName		1638148	0					
ANR	1638309	MemberAccess	map [ i ] . GetName		1638148	0					
ANR	1638310	ArrayIndexing	map [ i ]		1638148	0					
ANR	1638311	Identifier	map		1638148	0					
ANR	1638312	Identifier	i		1638148	1					
ANR	1638313	Identifier	GetName		1638148	1					
ANR	1638314	ArgumentList			1638148	1					
ANR	1638315	ExpressionStatement	"dprintf ( D_ALWAYS , ""Read all SegMaps OK\\n"" )"	1369:1:38259:38303	1638148	7	True				
ANR	1638316	CallExpression	"dprintf ( D_ALWAYS , ""Read all SegMaps OK\\n"" )"		1638148	0					
ANR	1638317	Callee	dprintf		1638148	0					
ANR	1638318	Identifier	dprintf		1638148	0					
ANR	1638319	ArgumentList	D_ALWAYS		1638148	1					
ANR	1638320	Argument	D_ALWAYS		1638148	0					
ANR	1638321	Identifier	D_ALWAYS		1638148	0					
ANR	1638322	Argument	"""Read all SegMaps OK\\n"""		1638148	1					
ANR	1638323	PrimaryExpression	"""Read all SegMaps OK\\n"""		1638148	0					
ANR	1638324	ReturnStatement	return 0 ;	1371:1:38307:38315	1638148	8	True				
ANR	1638325	PrimaryExpression	0		1638148	0					
ANR	1638326	ReturnType	int		1638148	1					
ANR	1638327	Identifier	Image :: Read		1638148	2					
ANR	1638328	ParameterList			1638148	3					
ANR	1638329	CFGEntryNode	ENTRY		1638148		True				
ANR	1638330	CFGExitNode	EXIT		1638148		True				
ANR	1638331	Symbol	net_read		1638148						
ANR	1638332	Symbol	errno		1638148						
ANR	1638333	Symbol	* file_name		1638148						
ANR	1638334	Symbol	file_name		1638148						
ANR	1638335	Symbol	* map		1638148						
ANR	1638336	Symbol	D_ALWAYS		1638148						
ANR	1638337	Symbol	i		1638148						
ANR	1638338	Symbol	nbytes		1638148						
ANR	1638339	Symbol	strerror		1638148						
ANR	1638340	Symbol	head		1638148						
ANR	1638341	Symbol	& head		1638148						
ANR	1638342	Symbol	head . N_Segs		1638148						
ANR	1638343	Symbol	O_RDONLY		1638148						
ANR	1638344	Symbol	* i		1638148						
ANR	1638345	Symbol	pos		1638148						
ANR	1638346	Symbol	map [ i ] . GetName		1638148						
ANR	1638347	Symbol	map		1638148						
ANR	1638348	Symbol	fd		1638148						
ANR	1638349	Symbol	open_ckpt_file		1638148						
ANR	1638350	Function	Image :: Close	1374:0:38320:38518							
ANR	1638351	FunctionDef	Image :: Close ()		1638350	0					
ANR	1638352	CompoundStatement		1376:0:38340:38518	1638350	0					
ANR	1638353	IfStatement	if ( fd < 0 )		1638350	0					
ANR	1638354	Condition	fd < 0	1377:5:38347:38352	1638350	0	True				
ANR	1638355	RelationalExpression	fd < 0		1638350	0		<			
ANR	1638356	Identifier	fd		1638350	0					
ANR	1638357	PrimaryExpression	0		1638350	1					
ANR	1638358	CompoundStatement		2:14:15:15	1638350	1					
ANR	1638359	ExpressionStatement	"dprintf ( D_ALWAYS , ""Image::Close - file not open!\\n"" )"	1378:2:38360:38414	1638350	0	True				
ANR	1638360	CallExpression	"dprintf ( D_ALWAYS , ""Image::Close - file not open!\\n"" )"		1638350	0					
ANR	1638361	Callee	dprintf		1638350	0					
ANR	1638362	Identifier	dprintf		1638350	0					
ANR	1638363	ArgumentList	D_ALWAYS		1638350	1					
ANR	1638364	Argument	D_ALWAYS		1638350	0					
ANR	1638365	Identifier	D_ALWAYS		1638350	0					
ANR	1638366	Argument	"""Image::Close - file not open!\\n"""		1638350	1					
ANR	1638367	PrimaryExpression	"""Image::Close - file not open!\\n"""		1638350	0					
ANR	1638368	ExpressionStatement	close ( fd )	1380:1:38420:38431	1638350	1	True				
ANR	1638369	CallExpression	close ( fd )		1638350	0					
ANR	1638370	Callee	close		1638350	0					
ANR	1638371	Identifier	close		1638350	0					
ANR	1638372	ArgumentList	fd		1638350	1					
ANR	1638373	Argument	fd		1638350	0					
ANR	1638374	Identifier	fd		1638350	0					
ANR	1638375	ExpressionStatement	fd = - 1	1382:1:38509:38516	1638350	2	True				
ANR	1638376	AssignmentExpression	fd = - 1		1638350	0		=			
ANR	1638377	Identifier	fd		1638350	0					
ANR	1638378	UnaryOperationExpression	- 1		1638350	1					
ANR	1638379	UnaryOperator	-		1638350	0					
ANR	1638380	PrimaryExpression	1		1638350	1					
ANR	1638381	ReturnType	void		1638350	1					
ANR	1638382	Identifier	Image :: Close		1638350	2					
ANR	1638383	ParameterList			1638350	3					
ANR	1638384	CFGEntryNode	ENTRY		1638350		True				
ANR	1638385	CFGExitNode	EXIT		1638350		True				
ANR	1638386	Symbol	D_ALWAYS		1638350						
ANR	1638387	Symbol	fd		1638350						
ANR	1638388	Function	SegMap :: Read	1385:0:38521:45064							
ANR	1638389	FunctionDef	"SegMap :: Read (int fd , ssize_t pos)"		1638388	0					
ANR	1638390	CompoundStatement		1387:0:38565:45064	1638388	0					
ANR	1638391	IdentifierDeclStatement	int nbytes ;	1388:1:38568:38579	1638388	0	True				
ANR	1638392	IdentifierDecl	nbytes		1638388	0					
ANR	1638393	IdentifierDeclType	int		1638388	0					
ANR	1638394	Identifier	nbytes		1638388	1					
ANR	1638395	IdentifierDeclStatement	char * orig_brk ;	1389:1:38582:38596	1638388	1	True				
ANR	1638396	IdentifierDecl	* orig_brk		1638388	0					
ANR	1638397	IdentifierDeclType	char *		1638388	0					
ANR	1638398	Identifier	orig_brk		1638388	1					
ANR	1638399	IdentifierDeclStatement	char * cur_brk ;	1390:1:38599:38612	1638388	2	True				
ANR	1638400	IdentifierDecl	* cur_brk		1638388	0					
ANR	1638401	IdentifierDeclType	char *		1638388	0					
ANR	1638402	Identifier	cur_brk		1638388	1					
ANR	1638403	IdentifierDeclStatement	char * ptr ;	1391:1:38615:38624	1638388	3	True				
ANR	1638404	IdentifierDecl	* ptr		1638388	0					
ANR	1638405	IdentifierDeclType	char *		1638388	0					
ANR	1638406	Identifier	ptr		1638388	1					
ANR	1638407	IdentifierDeclStatement	int bytes_to_go ;	1392:1:38627:38643	1638388	4	True				
ANR	1638408	IdentifierDecl	bytes_to_go		1638388	0					
ANR	1638409	IdentifierDeclType	int		1638388	0					
ANR	1638410	Identifier	bytes_to_go		1638388	1					
ANR	1638411	IdentifierDeclStatement	int read_size ;	1393:1:38646:38660	1638388	5	True				
ANR	1638412	IdentifierDecl	read_size		1638388	0					
ANR	1638413	IdentifierDeclType	int		1638388	0					
ANR	1638414	Identifier	read_size		1638388	1					
ANR	1638415	IdentifierDeclStatement	long saved_len = len ;	1394:1:38663:38683	1638388	6	True				
ANR	1638416	IdentifierDecl	saved_len = len		1638388	0					
ANR	1638417	IdentifierDeclType	long		1638388	0					
ANR	1638418	Identifier	saved_len		1638388	1					
ANR	1638419	AssignmentExpression	saved_len = len		1638388	2		=			
ANR	1638420	Identifier	len		1638388	0					
ANR	1638421	Identifier	len		1638388	1					
ANR	1638422	IdentifierDeclStatement	RAW_ADDR saved_core_loc = core_loc ;	1395:1:38686:38720	1638388	7	True				
ANR	1638423	IdentifierDecl	saved_core_loc = core_loc		1638388	0					
ANR	1638424	IdentifierDeclType	RAW_ADDR		1638388	0					
ANR	1638425	Identifier	saved_core_loc		1638388	1					
ANR	1638426	AssignmentExpression	saved_core_loc = core_loc		1638388	2		=			
ANR	1638427	Identifier	core_loc		1638388	0					
ANR	1638428	Identifier	core_loc		1638388	1					
ANR	1638429	IfStatement	if ( pos != file_loc )		1638388	8					
ANR	1638430	Condition	pos != file_loc	1397:5:38729:38743	1638388	0	True				
ANR	1638431	EqualityExpression	pos != file_loc		1638388	0		!=			
ANR	1638432	Identifier	pos		1638388	0					
ANR	1638433	Identifier	file_loc		1638388	1					
ANR	1638434	CompoundStatement		11:23:181:181	1638388	1					
ANR	1638435	IfStatement	if ( pos > UINT_MAX )		1638388	0					
ANR	1638436	Condition	pos > UINT_MAX	1400:6:38881:38894	1638388	0	True				
ANR	1638437	RelationalExpression	pos > UINT_MAX		1638388	0		>			
ANR	1638438	Identifier	pos		1638388	0					
ANR	1638439	Identifier	UINT_MAX		1638388	1					
ANR	1638440	CompoundStatement		14:22:331:331	1638388	1					
ANR	1638441	Statement	dprintf	1401:3:38902:38908	1638388	0	True				
ANR	1638442	Statement	(	1401:10:38909:38909	1638388	1	True				
ANR	1638443	Statement	D_ALWAYS	1401:12:38911:38918	1638388	2	True				
ANR	1638444	Statement	","	1401:20:38919:38919	1638388	3	True				
ANR	1638445	Statement	"""Checkpoint sequence error at a position """	1401:22:38921:38962	1638388	4	True				
ANR	1638446	Statement	"""greater than UINT_MAX. Sorry.\\n"""	1402:4:38968:39000	1638388	5	True				
ANR	1638447	Statement	)	1402:37:39001:39001	1638388	6	True				
ANR	1638448	ExpressionStatement		1402:38:39002:39002	1638388	7	True				
ANR	1638449	ElseStatement	else		1638388	0					
ANR	1638450	CompoundStatement		17:9:447:447	1638388	0					
ANR	1638451	ExpressionStatement	"dprintf ( D_ALWAYS , ""Checkpoint sequence error (%d != %u)\\n"" , pos , ( unsigned int ) file_loc )"	1404:3:39018:39113	1638388	0	True				
ANR	1638452	CallExpression	"dprintf ( D_ALWAYS , ""Checkpoint sequence error (%d != %u)\\n"" , pos , ( unsigned int ) file_loc )"		1638388	0					
ANR	1638453	Callee	dprintf		1638388	0					
ANR	1638454	Identifier	dprintf		1638388	0					
ANR	1638455	ArgumentList	D_ALWAYS		1638388	1					
ANR	1638456	Argument	D_ALWAYS		1638388	0					
ANR	1638457	Identifier	D_ALWAYS		1638388	0					
ANR	1638458	Argument	"""Checkpoint sequence error (%d != %u)\\n"""		1638388	1					
ANR	1638459	PrimaryExpression	"""Checkpoint sequence error (%d != %u)\\n"""		1638388	0					
ANR	1638460	Argument	pos		1638388	2					
ANR	1638461	Identifier	pos		1638388	0					
ANR	1638462	Argument	( unsigned int ) file_loc		1638388	3					
ANR	1638463	CastExpression	( unsigned int ) file_loc		1638388	0					
ANR	1638464	CastTarget	unsigned int		1638388	0					
ANR	1638465	Identifier	file_loc		1638388	1					
ANR	1638466	ExpressionStatement	Suicide ( )	1407:2:39121:39130	1638388	1	True				
ANR	1638467	CallExpression	Suicide ( )		1638388	0					
ANR	1638468	Callee	Suicide		1638388	0					
ANR	1638469	Identifier	Suicide		1638388	0					
ANR	1638470	ArgumentList			1638388	1					
ANR	1638471	ExpressionStatement	"dprintf ( D_CKPT , ""Restoring a %s segment\\n"" , name )"	1410:1:39137:39186	1638388	9	True				
ANR	1638472	CallExpression	"dprintf ( D_CKPT , ""Restoring a %s segment\\n"" , name )"		1638388	0					
ANR	1638473	Callee	dprintf		1638388	0					
ANR	1638474	Identifier	dprintf		1638388	0					
ANR	1638475	ArgumentList	D_CKPT		1638388	1					
ANR	1638476	Argument	D_CKPT		1638388	0					
ANR	1638477	Identifier	D_CKPT		1638388	0					
ANR	1638478	Argument	"""Restoring a %s segment\\n"""		1638388	1					
ANR	1638479	PrimaryExpression	"""Restoring a %s segment\\n"""		1638388	0					
ANR	1638480	Argument	name		1638388	2					
ANR	1638481	Identifier	name		1638388	0					
ANR	1638482	IfStatement	"if ( mystrcmp ( name , ""DATA"" ) == 0 )"		1638388	10					
ANR	1638483	Condition	"mystrcmp ( name , ""DATA"" ) == 0"	1412:5:39194:39219	1638388	0	True				
ANR	1638484	EqualityExpression	"mystrcmp ( name , ""DATA"" ) == 0"		1638388	0		==			
ANR	1638485	CallExpression	"mystrcmp ( name , ""DATA"" )"		1638388	0					
ANR	1638486	Callee	mystrcmp		1638388	0					
ANR	1638487	Identifier	mystrcmp		1638388	0					
ANR	1638488	ArgumentList	name		1638388	1					
ANR	1638489	Argument	name		1638388	0					
ANR	1638490	Identifier	name		1638388	0					
ANR	1638491	Argument	"""DATA"""		1638388	1					
ANR	1638492	PrimaryExpression	"""DATA"""		1638388	0					
ANR	1638493	PrimaryExpression	0		1638388	1					
ANR	1638494	CompoundStatement		26:34:657:657	1638388	1					
ANR	1638495	ExpressionStatement	orig_brk = ( char * ) sbrk ( 0 )	1413:2:39227:39253	1638388	0	True				
ANR	1638496	AssignmentExpression	orig_brk = ( char * ) sbrk ( 0 )		1638388	0		=			
ANR	1638497	Identifier	orig_brk		1638388	0					
ANR	1638498	CastExpression	( char * ) sbrk ( 0 )		1638388	1					
ANR	1638499	CastTarget	char *		1638388	0					
ANR	1638500	CallExpression	sbrk ( 0 )		1638388	1					
ANR	1638501	Callee	sbrk		1638388	0					
ANR	1638502	Identifier	sbrk		1638388	0					
ANR	1638503	ArgumentList	0		1638388	1					
ANR	1638504	Argument	0		1638388	0					
ANR	1638505	PrimaryExpression	0		1638388	0					
ANR	1638506	IfStatement	if ( orig_brk < ( char * ) ( core_loc + len ) )		1638388	1					
ANR	1638507	Condition	orig_brk < ( char * ) ( core_loc + len )	1414:6:39261:39295	1638388	0	True				
ANR	1638508	RelationalExpression	orig_brk < ( char * ) ( core_loc + len )		1638388	0		<			
ANR	1638509	Identifier	orig_brk		1638388	0					
ANR	1638510	CastExpression	( char * ) ( core_loc + len )		1638388	1					
ANR	1638511	CastTarget	char *		1638388	0					
ANR	1638512	AdditiveExpression	core_loc + len		1638388	1		+			
ANR	1638513	Identifier	core_loc		1638388	0					
ANR	1638514	Identifier	len		1638388	1					
ANR	1638515	CompoundStatement		28:44:733:733	1638388	1					
ANR	1638516	ExpressionStatement	brk ( ( char * ) ( core_loc + len ) )	1415:3:39304:39335	1638388	0	True				
ANR	1638517	CallExpression	brk ( ( char * ) ( core_loc + len ) )		1638388	0					
ANR	1638518	Callee	brk		1638388	0					
ANR	1638519	Identifier	brk		1638388	0					
ANR	1638520	ArgumentList	( char * ) ( core_loc + len )		1638388	1					
ANR	1638521	Argument	( char * ) ( core_loc + len )		1638388	0					
ANR	1638522	CastExpression	( char * ) ( core_loc + len )		1638388	0					
ANR	1638523	CastTarget	char *		1638388	0					
ANR	1638524	AdditiveExpression	core_loc + len		1638388	1		+			
ANR	1638525	Identifier	core_loc		1638388	0					
ANR	1638526	Identifier	len		1638388	1					
ANR	1638527	ExpressionStatement	cur_brk = ( char * ) sbrk ( 0 )	1417:2:39343:39368	1638388	2	True				
ANR	1638528	AssignmentExpression	cur_brk = ( char * ) sbrk ( 0 )		1638388	0		=			
ANR	1638529	Identifier	cur_brk		1638388	0					
ANR	1638530	CastExpression	( char * ) sbrk ( 0 )		1638388	1					
ANR	1638531	CastTarget	char *		1638388	0					
ANR	1638532	CallExpression	sbrk ( 0 )		1638388	1					
ANR	1638533	Callee	sbrk		1638388	0					
ANR	1638534	Identifier	sbrk		1638388	0					
ANR	1638535	ArgumentList	0		1638388	1					
ANR	1638536	Argument	0		1638388	0					
ANR	1638537	PrimaryExpression	0		1638388	0					
ANR	1638538	ExpressionStatement	"dprintf ( D_ALWAYS , ""Found a DATA block, increasing heap from 0x%p to 0x%p\\n"" , orig_brk , cur_brk )"	1418:2:39372:39475	1638388	3	True				
ANR	1638539	CallExpression	"dprintf ( D_ALWAYS , ""Found a DATA block, increasing heap from 0x%p to 0x%p\\n"" , orig_brk , cur_brk )"		1638388	0					
ANR	1638540	Callee	dprintf		1638388	0					
ANR	1638541	Identifier	dprintf		1638388	0					
ANR	1638542	ArgumentList	D_ALWAYS		1638388	1					
ANR	1638543	Argument	D_ALWAYS		1638388	0					
ANR	1638544	Identifier	D_ALWAYS		1638388	0					
ANR	1638545	Argument	"""Found a DATA block, increasing heap from 0x%p to 0x%p\\n"""		1638388	1					
ANR	1638546	PrimaryExpression	"""Found a DATA block, increasing heap from 0x%p to 0x%p\\n"""		1638388	0					
ANR	1638547	Argument	orig_brk		1638388	2					
ANR	1638548	Identifier	orig_brk		1638388	0					
ANR	1638549	Argument	cur_brk		1638388	3					
ANR	1638550	Identifier	cur_brk		1638388	0					
ANR	1638551	ElseStatement	else		1638388	0					
ANR	1638552	IfStatement	"if ( mystrcmp ( name , ""SHARED LIB"" ) == 0 )"		1638388	0					
ANR	1638553	Condition	"mystrcmp ( name , ""SHARED LIB"" ) == 0"	1424:11:39527:39558	1638388	0	True				
ANR	1638554	EqualityExpression	"mystrcmp ( name , ""SHARED LIB"" ) == 0"		1638388	0		==			
ANR	1638555	CallExpression	"mystrcmp ( name , ""SHARED LIB"" )"		1638388	0					
ANR	1638556	Callee	mystrcmp		1638388	0					
ANR	1638557	Identifier	mystrcmp		1638388	0					
ANR	1638558	ArgumentList	name		1638388	1					
ANR	1638559	Argument	name		1638388	0					
ANR	1638560	Identifier	name		1638388	0					
ANR	1638561	Argument	"""SHARED LIB"""		1638388	1					
ANR	1638562	PrimaryExpression	"""SHARED LIB"""		1638388	0					
ANR	1638563	PrimaryExpression	0		1638388	1					
ANR	1638564	CompoundStatement		66:2:2015:2058	1638388	1					
ANR	1638565	IdentifierDeclStatement	int segSize = len ;	1426:2:39633:39650	1638388	0	True				
ANR	1638566	IdentifierDecl	segSize = len		1638388	0					
ANR	1638567	IdentifierDeclType	int		1638388	0					
ANR	1638568	Identifier	segSize		1638388	1					
ANR	1638569	AssignmentExpression	segSize = len		1638388	2		=			
ANR	1638570	Identifier	len		1638388	0					
ANR	1638571	Identifier	len		1638388	1					
ANR	1638572	IdentifierDeclStatement	int zfd ;	1427:2:39654:39661	1638388	1	True				
ANR	1638573	IdentifierDecl	zfd		1638388	0					
ANR	1638574	IdentifierDeclType	int		1638388	0					
ANR	1638575	Identifier	zfd		1638388	1					
ANR	1638576	IdentifierDeclStatement	char * segLoc ;	1428:2:39665:39677	1638388	2	True				
ANR	1638577	IdentifierDecl	* segLoc		1638388	0					
ANR	1638578	IdentifierDeclType	char *		1638388	0					
ANR	1638579	Identifier	segLoc		1638388	1					
ANR	1638580	ExpressionStatement	segLoc = ( char * ) core_loc	1430:2:39684:39709	1638388	3	True				
ANR	1638581	AssignmentExpression	segLoc = ( char * ) core_loc		1638388	0		=			
ANR	1638582	Identifier	segLoc		1638388	0					
ANR	1638583	CastExpression	( char * ) core_loc		1638388	1					
ANR	1638584	CastTarget	char *		1638388	0					
ANR	1638585	Identifier	core_loc		1638388	1					
ANR	1638586	IfStatement	"if ( ( zfd = SYSCALL ( SYS_open , ""/dev/zero"" , O_RDWR ) ) == - 1 )"		1638388	4					
ANR	1638587	Condition	"( zfd = SYSCALL ( SYS_open , ""/dev/zero"" , O_RDWR ) ) == - 1"	1431:6:39717:39768	1638388	0	True				
ANR	1638588	EqualityExpression	"( zfd = SYSCALL ( SYS_open , ""/dev/zero"" , O_RDWR ) ) == - 1"		1638388	0		==			
ANR	1638589	AssignmentExpression	"zfd = SYSCALL ( SYS_open , ""/dev/zero"" , O_RDWR )"		1638388	0		=			
ANR	1638590	Identifier	zfd		1638388	0					
ANR	1638591	CallExpression	"SYSCALL ( SYS_open , ""/dev/zero"" , O_RDWR )"		1638388	1					
ANR	1638592	Callee	SYSCALL		1638388	0					
ANR	1638593	Identifier	SYSCALL		1638388	0					
ANR	1638594	ArgumentList	SYS_open		1638388	1					
ANR	1638595	Argument	SYS_open		1638388	0					
ANR	1638596	Identifier	SYS_open		1638388	0					
ANR	1638597	Argument	"""/dev/zero"""		1638388	1					
ANR	1638598	PrimaryExpression	"""/dev/zero"""		1638388	0					
ANR	1638599	Argument	O_RDWR		1638388	2					
ANR	1638600	Identifier	O_RDWR		1638388	0					
ANR	1638601	UnaryOperationExpression	- 1		1638388	1					
ANR	1638602	UnaryOperator	-		1638388	0					
ANR	1638603	PrimaryExpression	1		1638388	1					
ANR	1638604	CompoundStatement		45:60:1205:1205	1638388	1					
ANR	1638605	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to open /dev/zero in read/write mode.\\n"" )"	1432:3:39776:39850	1638388	0	True				
ANR	1638606	CallExpression	"dprintf ( D_ALWAYS , ""Unable to open /dev/zero in read/write mode.\\n"" )"		1638388	0					
ANR	1638607	Callee	dprintf		1638388	0					
ANR	1638608	Identifier	dprintf		1638388	0					
ANR	1638609	ArgumentList	D_ALWAYS		1638388	1					
ANR	1638610	Argument	D_ALWAYS		1638388	0					
ANR	1638611	Identifier	D_ALWAYS		1638388	0					
ANR	1638612	Argument	"""Unable to open /dev/zero in read/write mode.\\n"""		1638388	1					
ANR	1638613	PrimaryExpression	"""Unable to open /dev/zero in read/write mode.\\n"""		1638388	0					
ANR	1638614	ExpressionStatement	"dprintf ( D_ALWAYS , ""open: %s\\n"" , strerror ( errno ) )"	1434:3:39855:39904	1638388	1	True				
ANR	1638615	CallExpression	"dprintf ( D_ALWAYS , ""open: %s\\n"" , strerror ( errno ) )"		1638388	0					
ANR	1638616	Callee	dprintf		1638388	0					
ANR	1638617	Identifier	dprintf		1638388	0					
ANR	1638618	ArgumentList	D_ALWAYS		1638388	1					
ANR	1638619	Argument	D_ALWAYS		1638388	0					
ANR	1638620	Identifier	D_ALWAYS		1638388	0					
ANR	1638621	Argument	"""open: %s\\n"""		1638388	1					
ANR	1638622	PrimaryExpression	"""open: %s\\n"""		1638388	0					
ANR	1638623	Argument	strerror ( errno )		1638388	2					
ANR	1638624	CallExpression	strerror ( errno )		1638388	0					
ANR	1638625	Callee	strerror		1638388	0					
ANR	1638626	Identifier	strerror		1638388	0					
ANR	1638627	ArgumentList	errno		1638388	1					
ANR	1638628	Argument	errno		1638388	0					
ANR	1638629	Identifier	errno		1638388	0					
ANR	1638630	ExpressionStatement	Suicide ( )	1435:3:39909:39918	1638388	2	True				
ANR	1638631	CallExpression	Suicide ( )		1638388	0					
ANR	1638632	Callee	Suicide		1638388	0					
ANR	1638633	Identifier	Suicide		1638388	0					
ANR	1638634	ArgumentList			1638388	1					
ANR	1638635	IdentifierDeclStatement	int page_mask = GETPAGESIZE ( ) - 1 ;	1451:2:40546:40577	1638388	5	True				
ANR	1638636	IdentifierDecl	page_mask = GETPAGESIZE ( ) - 1		1638388	0					
ANR	1638637	IdentifierDeclType	int		1638388	0					
ANR	1638638	Identifier	page_mask		1638388	1					
ANR	1638639	AssignmentExpression	page_mask = GETPAGESIZE ( ) - 1		1638388	2		=			
ANR	1638640	Identifier	page_mask		1638388	0					
ANR	1638641	AdditiveExpression	GETPAGESIZE ( ) - 1		1638388	1		-			
ANR	1638642	CallExpression	GETPAGESIZE ( )		1638388	0					
ANR	1638643	Callee	GETPAGESIZE		1638388	0					
ANR	1638644	Identifier	GETPAGESIZE		1638388	0					
ANR	1638645	ArgumentList			1638388	1					
ANR	1638646	PrimaryExpression	1		1638388	1					
ANR	1638647	IdentifierDeclStatement	int align_offset = ( long ) segLoc & page_mask ;	1452:2:40581:40624	1638388	6	True				
ANR	1638648	IdentifierDecl	align_offset = ( long ) segLoc & page_mask		1638388	0					
ANR	1638649	IdentifierDeclType	int		1638388	0					
ANR	1638650	Identifier	align_offset		1638388	1					
ANR	1638651	AssignmentExpression	align_offset = ( long ) segLoc & page_mask		1638388	2		=			
ANR	1638652	Identifier	align_offset		1638388	0					
ANR	1638653	BitAndExpression	( long ) segLoc & page_mask		1638388	1		&			
ANR	1638654	CastExpression	( long ) segLoc		1638388	0					
ANR	1638655	CastTarget	long		1638388	0					
ANR	1638656	Identifier	segLoc		1638388	1					
ANR	1638657	Identifier	page_mask		1638388	1					
ANR	1638658	IfStatement	if ( align_offset )		1638388	7					
ANR	1638659	Condition	align_offset	1453:6:40632:40643	1638388	0	True				
ANR	1638660	Identifier	align_offset		1638388	0					
ANR	1638661	CompoundStatement		94:3:3294:3348	1638388	1					
ANR	1638662	Statement	dprintf	1457:3:40816:40822	1638388	0	True				
ANR	1638663	Statement	(	1457:10:40823:40823	1638388	1	True				
ANR	1638664	Statement	D_ALWAYS	1457:11:40824:40831	1638388	2	True				
ANR	1638665	Statement	","	1457:19:40832:40832	1638388	3	True				
ANR	1638666	Statement	"""Unaligned ckpt segment at 0x%x!  """	1457:21:40834:40868	1638388	4	True				
ANR	1638667	Statement	"""Performing alignment...\\n"""	1458:5:40875:40901	1638388	5	True				
ANR	1638668	Statement	","	1458:32:40902:40902	1638388	6	True				
ANR	1638669	Statement	segLoc	1458:34:40904:40909	1638388	7	True				
ANR	1638670	Statement	)	1458:40:40910:40910	1638388	8	True				
ANR	1638671	ExpressionStatement		1458:41:40911:40911	1638388	9	True				
ANR	1638672	ExpressionStatement	segSize += align_offset	1459:3:40916:40939	1638388	10	True				
ANR	1638673	AssignmentExpression	segSize += align_offset		1638388	0		+=			
ANR	1638674	Identifier	segSize		1638388	0					
ANR	1638675	Identifier	align_offset		1638388	1					
ANR	1638676	ExpressionStatement	segLoc -= align_offset	1460:3:40944:40966	1638388	11	True				
ANR	1638677	AssignmentExpression	segLoc -= align_offset		1638388	0		-=			
ANR	1638678	Identifier	segLoc		1638388	0					
ANR	1638679	Identifier	align_offset		1638388	1					
ANR	1638680	IfStatement	"if ( SYSCALL ( SYS_mprotect , segLoc , GETPAGESIZE ( ) , PROT_READ | PROT_WRITE | PROT_EXEC ) == 0 )"		1638388	12					
ANR	1638681	Condition	"SYSCALL ( SYS_mprotect , segLoc , GETPAGESIZE ( ) , PROT_READ | PROT_WRITE | PROT_EXEC ) == 0"	1474:7:41647:41733	1638388	0	True				
ANR	1638682	EqualityExpression	"SYSCALL ( SYS_mprotect , segLoc , GETPAGESIZE ( ) , PROT_READ | PROT_WRITE | PROT_EXEC ) == 0"		1638388	0		==			
ANR	1638683	CallExpression	"SYSCALL ( SYS_mprotect , segLoc , GETPAGESIZE ( ) , PROT_READ | PROT_WRITE | PROT_EXEC )"		1638388	0					
ANR	1638684	Callee	SYSCALL		1638388	0					
ANR	1638685	Identifier	SYSCALL		1638388	0					
ANR	1638686	ArgumentList	SYS_mprotect		1638388	1					
ANR	1638687	Argument	SYS_mprotect		1638388	0					
ANR	1638688	Identifier	SYS_mprotect		1638388	0					
ANR	1638689	Argument	segLoc		1638388	1					
ANR	1638690	Identifier	segLoc		1638388	0					
ANR	1638691	Argument	GETPAGESIZE ( )		1638388	2					
ANR	1638692	CallExpression	GETPAGESIZE ( )		1638388	0					
ANR	1638693	Callee	GETPAGESIZE		1638388	0					
ANR	1638694	Identifier	GETPAGESIZE		1638388	0					
ANR	1638695	ArgumentList			1638388	1					
ANR	1638696	Argument	PROT_READ | PROT_WRITE | PROT_EXEC		1638388	3					
ANR	1638697	InclusiveOrExpression	PROT_READ | PROT_WRITE | PROT_EXEC		1638388	0		|			
ANR	1638698	Identifier	PROT_READ		1638388	0					
ANR	1638699	InclusiveOrExpression	PROT_WRITE | PROT_EXEC		1638388	1		|			
ANR	1638700	Identifier	PROT_WRITE		1638388	0					
ANR	1638701	Identifier	PROT_EXEC		1638388	1					
ANR	1638702	PrimaryExpression	0		1638388	1					
ANR	1638703	CompoundStatement		89:44:3170:3170	1638388	1					
ANR	1638704	ExpressionStatement	"dprintf ( D_ALWAYS , ""First page already mapped.\\n"" )"	1476:4:41742:41791	1638388	0	True				
ANR	1638705	CallExpression	"dprintf ( D_ALWAYS , ""First page already mapped.\\n"" )"		1638388	0					
ANR	1638706	Callee	dprintf		1638388	0					
ANR	1638707	Identifier	dprintf		1638388	0					
ANR	1638708	ArgumentList	D_ALWAYS		1638388	1					
ANR	1638709	Argument	D_ALWAYS		1638388	0					
ANR	1638710	Identifier	D_ALWAYS		1638388	0					
ANR	1638711	Argument	"""First page already mapped.\\n"""		1638388	1					
ANR	1638712	PrimaryExpression	"""First page already mapped.\\n"""		1638388	0					
ANR	1638713	ExpressionStatement	segLoc += GETPAGESIZE ( )	1477:4:41797:41820	1638388	1	True				
ANR	1638714	AssignmentExpression	segLoc += GETPAGESIZE ( )		1638388	0		+=			
ANR	1638715	Identifier	segLoc		1638388	0					
ANR	1638716	CallExpression	GETPAGESIZE ( )		1638388	1					
ANR	1638717	Callee	GETPAGESIZE		1638388	0					
ANR	1638718	Identifier	GETPAGESIZE		1638388	0					
ANR	1638719	ArgumentList			1638388	1					
ANR	1638720	ExpressionStatement	segSize -= GETPAGESIZE ( )	1478:4:41826:41850	1638388	2	True				
ANR	1638721	AssignmentExpression	segSize -= GETPAGESIZE ( )		1638388	0		-=			
ANR	1638722	Identifier	segSize		1638388	0					
ANR	1638723	CallExpression	GETPAGESIZE ( )		1638388	1					
ANR	1638724	Callee	GETPAGESIZE		1638388	0					
ANR	1638725	Identifier	GETPAGESIZE		1638388	0					
ANR	1638726	ArgumentList			1638388	1					
ANR	1638727	IdentifierDeclStatement	char * lastPage = segLoc + ( ( segSize - 1 ) & ~ ( page_mask ) ) ;	1480:3:41860:41914	1638388	13	True				
ANR	1638728	IdentifierDecl	* lastPage = segLoc + ( ( segSize - 1 ) & ~ ( page_mask ) )		1638388	0					
ANR	1638729	IdentifierDeclType	char *		1638388	0					
ANR	1638730	Identifier	lastPage		1638388	1					
ANR	1638731	AssignmentExpression	* lastPage = segLoc + ( ( segSize - 1 ) & ~ ( page_mask ) )		1638388	2		=			
ANR	1638732	Identifier	lastPage		1638388	0					
ANR	1638733	AdditiveExpression	segLoc + ( ( segSize - 1 ) & ~ ( page_mask ) )		1638388	1		+			
ANR	1638734	Identifier	segLoc		1638388	0					
ANR	1638735	BitAndExpression	( segSize - 1 ) & ~ ( page_mask )		1638388	1		&			
ANR	1638736	AdditiveExpression	segSize - 1		1638388	0		-			
ANR	1638737	Identifier	segSize		1638388	0					
ANR	1638738	PrimaryExpression	1		1638388	1					
ANR	1638739	UnaryOperationExpression	~ ( page_mask )		1638388	1					
ANR	1638740	UnaryOperator	~		1638388	0					
ANR	1638741	Identifier	page_mask		1638388	1					
ANR	1638742	IfStatement	"if ( segSize > 0 && SYSCALL ( SYS_mprotect , lastPage , GETPAGESIZE ( ) , PROT_READ | PROT_WRITE | PROT_EXEC ) == 0 )"		1638388	14					
ANR	1638743	Condition	"segSize > 0 && SYSCALL ( SYS_mprotect , lastPage , GETPAGESIZE ( ) , PROT_READ | PROT_WRITE | PROT_EXEC ) == 0"	1481:7:41923:42030	1638388	0	True				
ANR	1638744	AndExpression	"segSize > 0 && SYSCALL ( SYS_mprotect , lastPage , GETPAGESIZE ( ) , PROT_READ | PROT_WRITE | PROT_EXEC ) == 0"		1638388	0		&&			
ANR	1638745	RelationalExpression	segSize > 0		1638388	0		>			
ANR	1638746	Identifier	segSize		1638388	0					
ANR	1638747	PrimaryExpression	0		1638388	1					
ANR	1638748	EqualityExpression	"SYSCALL ( SYS_mprotect , lastPage , GETPAGESIZE ( ) , PROT_READ | PROT_WRITE | PROT_EXEC ) == 0"		1638388	1		==			
ANR	1638749	CallExpression	"SYSCALL ( SYS_mprotect , lastPage , GETPAGESIZE ( ) , PROT_READ | PROT_WRITE | PROT_EXEC )"		1638388	0					
ANR	1638750	Callee	SYSCALL		1638388	0					
ANR	1638751	Identifier	SYSCALL		1638388	0					
ANR	1638752	ArgumentList	SYS_mprotect		1638388	1					
ANR	1638753	Argument	SYS_mprotect		1638388	0					
ANR	1638754	Identifier	SYS_mprotect		1638388	0					
ANR	1638755	Argument	lastPage		1638388	1					
ANR	1638756	Identifier	lastPage		1638388	0					
ANR	1638757	Argument	GETPAGESIZE ( )		1638388	2					
ANR	1638758	CallExpression	GETPAGESIZE ( )		1638388	0					
ANR	1638759	Callee	GETPAGESIZE		1638388	0					
ANR	1638760	Identifier	GETPAGESIZE		1638388	0					
ANR	1638761	ArgumentList			1638388	1					
ANR	1638762	Argument	PROT_READ | PROT_WRITE | PROT_EXEC		1638388	3					
ANR	1638763	InclusiveOrExpression	PROT_READ | PROT_WRITE | PROT_EXEC		1638388	0		|			
ANR	1638764	Identifier	PROT_READ		1638388	0					
ANR	1638765	InclusiveOrExpression	PROT_WRITE | PROT_EXEC		1638388	1		|			
ANR	1638766	Identifier	PROT_WRITE		1638388	0					
ANR	1638767	Identifier	PROT_EXEC		1638388	1					
ANR	1638768	PrimaryExpression	0		1638388	1					
ANR	1638769	CompoundStatement		97:44:3467:3467	1638388	1					
ANR	1638770	ExpressionStatement	"dprintf ( D_ALWAYS , ""Last page already mapped.\\n"" )"	1484:4:42039:42087	1638388	0	True				
ANR	1638771	CallExpression	"dprintf ( D_ALWAYS , ""Last page already mapped.\\n"" )"		1638388	0					
ANR	1638772	Callee	dprintf		1638388	0					
ANR	1638773	Identifier	dprintf		1638388	0					
ANR	1638774	ArgumentList	D_ALWAYS		1638388	1					
ANR	1638775	Argument	D_ALWAYS		1638388	0					
ANR	1638776	Identifier	D_ALWAYS		1638388	0					
ANR	1638777	Argument	"""Last page already mapped.\\n"""		1638388	1					
ANR	1638778	PrimaryExpression	"""Last page already mapped.\\n"""		1638388	0					
ANR	1638779	ExpressionStatement	segSize -= GETPAGESIZE ( )	1485:4:42093:42117	1638388	1	True				
ANR	1638780	AssignmentExpression	segSize -= GETPAGESIZE ( )		1638388	0		-=			
ANR	1638781	Identifier	segSize		1638388	0					
ANR	1638782	CallExpression	GETPAGESIZE ( )		1638388	1					
ANR	1638783	Callee	GETPAGESIZE		1638388	0					
ANR	1638784	Identifier	GETPAGESIZE		1638388	0					
ANR	1638785	ArgumentList			1638388	1					
ANR	1638786	IfStatement	if ( segSize > 0 )		1638388	8					
ANR	1638787	Condition	segSize > 0	1489:6:42135:42145	1638388	0	True				
ANR	1638788	RelationalExpression	segSize > 0		1638388	0		>			
ANR	1638789	Identifier	segSize		1638388	0					
ANR	1638790	PrimaryExpression	0		1638388	1					
ANR	1638791	CompoundStatement		103:19:3582:3582	1638388	1					
ANR	1638792	IfStatement	"if ( ( MMAP ( ( MMAP_T ) segLoc , ( size_t ) segSize , prot | PROT_WRITE , MAP_PRIVATE | MAP_FIXED , zfd , ( off_t ) 0 ) ) == MAP_FAILED )"		1638388	0					
ANR	1638793	Condition	"( MMAP ( ( MMAP_T ) segLoc , ( size_t ) segSize , prot | PROT_WRITE , MAP_PRIVATE | MAP_FIXED , zfd , ( off_t ) 0 ) ) == MAP_FAILED"	1490:7:42196:42324	1638388	0	True				
ANR	1638794	EqualityExpression	"( MMAP ( ( MMAP_T ) segLoc , ( size_t ) segSize , prot | PROT_WRITE , MAP_PRIVATE | MAP_FIXED , zfd , ( off_t ) 0 ) ) == MAP_FAILED"		1638388	0		==			
ANR	1638795	CallExpression	"MMAP ( ( MMAP_T ) segLoc , ( size_t ) segSize , prot | PROT_WRITE , MAP_PRIVATE | MAP_FIXED , zfd , ( off_t ) 0 )"		1638388	0					
ANR	1638796	Callee	MMAP		1638388	0					
ANR	1638797	Identifier	MMAP		1638388	0					
ANR	1638798	ArgumentList	( MMAP_T ) segLoc		1638388	1					
ANR	1638799	Argument	( MMAP_T ) segLoc		1638388	0					
ANR	1638800	CastExpression	( MMAP_T ) segLoc		1638388	0					
ANR	1638801	CastTarget	MMAP_T		1638388	0					
ANR	1638802	Identifier	segLoc		1638388	1					
ANR	1638803	Argument	( size_t ) segSize		1638388	1					
ANR	1638804	CastExpression	( size_t ) segSize		1638388	0					
ANR	1638805	CastTarget	size_t		1638388	0					
ANR	1638806	Identifier	segSize		1638388	1					
ANR	1638807	Argument	prot | PROT_WRITE		1638388	2					
ANR	1638808	InclusiveOrExpression	prot | PROT_WRITE		1638388	0		|			
ANR	1638809	Identifier	prot		1638388	0					
ANR	1638810	Identifier	PROT_WRITE		1638388	1					
ANR	1638811	Argument	MAP_PRIVATE | MAP_FIXED		1638388	3					
ANR	1638812	InclusiveOrExpression	MAP_PRIVATE | MAP_FIXED		1638388	0		|			
ANR	1638813	Identifier	MAP_PRIVATE		1638388	0					
ANR	1638814	Identifier	MAP_FIXED		1638388	1					
ANR	1638815	Argument	zfd		1638388	4					
ANR	1638816	Identifier	zfd		1638388	0					
ANR	1638817	Argument	( off_t ) 0		1638388	5					
ANR	1638818	CastExpression	( off_t ) 0		1638388	0					
ANR	1638819	CastTarget	off_t		1638388	0					
ANR	1638820	PrimaryExpression	0		1638388	1					
ANR	1638821	Identifier	MAP_FAILED		1638388	1					
ANR	1638822	CompoundStatement		107:33:3761:3761	1638388	1					
ANR	1638823	ExpressionStatement	"dprintf ( D_ALWAYS , ""mmap: %s"" , strerror ( errno ) )"	1494:4:42333:42379	1638388	0	True				
ANR	1638824	CallExpression	"dprintf ( D_ALWAYS , ""mmap: %s"" , strerror ( errno ) )"		1638388	0					
ANR	1638825	Callee	dprintf		1638388	0					
ANR	1638826	Identifier	dprintf		1638388	0					
ANR	1638827	ArgumentList	D_ALWAYS		1638388	1					
ANR	1638828	Argument	D_ALWAYS		1638388	0					
ANR	1638829	Identifier	D_ALWAYS		1638388	0					
ANR	1638830	Argument	"""mmap: %s"""		1638388	1					
ANR	1638831	PrimaryExpression	"""mmap: %s"""		1638388	0					
ANR	1638832	Argument	strerror ( errno )		1638388	2					
ANR	1638833	CallExpression	strerror ( errno )		1638388	0					
ANR	1638834	Callee	strerror		1638388	0					
ANR	1638835	Identifier	strerror		1638388	0					
ANR	1638836	ArgumentList	errno		1638388	1					
ANR	1638837	Argument	errno		1638388	0					
ANR	1638838	Identifier	errno		1638388	0					
ANR	1638839	Statement	dprintf	1495:4:42385:42391	1638388	1	True				
ANR	1638840	Statement	(	1495:11:42392:42392	1638388	2	True				
ANR	1638841	Statement	D_ALWAYS	1495:12:42393:42400	1638388	3	True				
ANR	1638842	Statement	","	1495:20:42401:42401	1638388	4	True				
ANR	1638843	Statement	"""Attempted to mmap /dev/zero at """	1495:22:42403:42435	1638388	5	True				
ANR	1638844	Statement	"""address 0x%x, size 0x%x\\n"""	1496:6:42443:42469	1638388	6	True				
ANR	1638845	Statement	","	1496:33:42470:42470	1638388	7	True				
ANR	1638846	Statement	segLoc	1496:35:42472:42477	1638388	8	True				
ANR	1638847	Statement	","	1496:41:42478:42478	1638388	9	True				
ANR	1638848	Statement	segSize	1497:6:42486:42492	1638388	10	True				
ANR	1638849	Statement	)	1497:13:42493:42493	1638388	11	True				
ANR	1638850	ExpressionStatement		1497:14:42494:42494	1638388	12	True				
ANR	1638851	ExpressionStatement	"dprintf ( D_ALWAYS , ""Current segmap dump follows\\n"" )"	1498:4:42500:42550	1638388	13	True				
ANR	1638852	CallExpression	"dprintf ( D_ALWAYS , ""Current segmap dump follows\\n"" )"		1638388	0					
ANR	1638853	Callee	dprintf		1638388	0					
ANR	1638854	Identifier	dprintf		1638388	0					
ANR	1638855	ArgumentList	D_ALWAYS		1638388	1					
ANR	1638856	Argument	D_ALWAYS		1638388	0					
ANR	1638857	Identifier	D_ALWAYS		1638388	0					
ANR	1638858	Argument	"""Current segmap dump follows\\n"""		1638388	1					
ANR	1638859	PrimaryExpression	"""Current segmap dump follows\\n"""		1638388	0					
ANR	1638860	ExpressionStatement	display_prmap ( )	1499:4:42556:42571	1638388	14	True				
ANR	1638861	CallExpression	display_prmap ( )		1638388	0					
ANR	1638862	Callee	display_prmap		1638388	0					
ANR	1638863	Identifier	display_prmap		1638388	0					
ANR	1638864	ArgumentList			1638388	1					
ANR	1638865	ExpressionStatement	Suicide ( )	1500:4:42577:42586	1638388	15	True				
ANR	1638866	CallExpression	Suicide ( )		1638388	0					
ANR	1638867	Callee	Suicide		1638388	0					
ANR	1638868	Identifier	Suicide		1638388	0					
ANR	1638869	ArgumentList			1638388	1					
ANR	1638870	IfStatement	"if ( SYSCALL ( SYS_close , zfd ) < 0 )"		1638388	9					
ANR	1638871	Condition	"SYSCALL ( SYS_close , zfd ) < 0"	1509:6:42878:42904	1638388	0	True				
ANR	1638872	RelationalExpression	"SYSCALL ( SYS_close , zfd ) < 0"		1638388	0		<			
ANR	1638873	CallExpression	"SYSCALL ( SYS_close , zfd )"		1638388	0					
ANR	1638874	Callee	SYSCALL		1638388	0					
ANR	1638875	Identifier	SYSCALL		1638388	0					
ANR	1638876	ArgumentList	SYS_close		1638388	1					
ANR	1638877	Argument	SYS_close		1638388	0					
ANR	1638878	Identifier	SYS_close		1638388	0					
ANR	1638879	Argument	zfd		1638388	1					
ANR	1638880	Identifier	zfd		1638388	0					
ANR	1638881	PrimaryExpression	0		1638388	1					
ANR	1638882	CompoundStatement		123:35:4341:4341	1638388	1					
ANR	1638883	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to close /dev/zero file descriptor.\\n"" )"	1510:3:42912:42985	1638388	0	True				
ANR	1638884	CallExpression	"dprintf ( D_ALWAYS , ""Unable to close /dev/zero file descriptor.\\n"" )"		1638388	0					
ANR	1638885	Callee	dprintf		1638388	0					
ANR	1638886	Identifier	dprintf		1638388	0					
ANR	1638887	ArgumentList	D_ALWAYS		1638388	1					
ANR	1638888	Argument	D_ALWAYS		1638388	0					
ANR	1638889	Identifier	D_ALWAYS		1638388	0					
ANR	1638890	Argument	"""Unable to close /dev/zero file descriptor.\\n"""		1638388	1					
ANR	1638891	PrimaryExpression	"""Unable to close /dev/zero file descriptor.\\n"""		1638388	0					
ANR	1638892	ExpressionStatement	"dprintf ( D_ALWAYS , ""close: %s\\n"" , strerror ( errno ) )"	1512:3:42990:43040	1638388	1	True				
ANR	1638893	CallExpression	"dprintf ( D_ALWAYS , ""close: %s\\n"" , strerror ( errno ) )"		1638388	0					
ANR	1638894	Callee	dprintf		1638388	0					
ANR	1638895	Identifier	dprintf		1638388	0					
ANR	1638896	ArgumentList	D_ALWAYS		1638388	1					
ANR	1638897	Argument	D_ALWAYS		1638388	0					
ANR	1638898	Identifier	D_ALWAYS		1638388	0					
ANR	1638899	Argument	"""close: %s\\n"""		1638388	1					
ANR	1638900	PrimaryExpression	"""close: %s\\n"""		1638388	0					
ANR	1638901	Argument	strerror ( errno )		1638388	2					
ANR	1638902	CallExpression	strerror ( errno )		1638388	0					
ANR	1638903	Callee	strerror		1638388	0					
ANR	1638904	Identifier	strerror		1638388	0					
ANR	1638905	ArgumentList	errno		1638388	1					
ANR	1638906	Argument	errno		1638388	0					
ANR	1638907	Identifier	errno		1638388	0					
ANR	1638908	ExpressionStatement	Suicide ( )	1513:3:43045:43054	1638388	2	True				
ANR	1638909	CallExpression	Suicide ( )		1638388	0					
ANR	1638910	Callee	Suicide		1638388	0					
ANR	1638911	Identifier	Suicide		1638388	0					
ANR	1638912	ArgumentList			1638388	1					
ANR	1638913	ExpressionStatement	bytes_to_go = saved_len	1524:1:43405:43428	1638388	11	True				
ANR	1638914	AssignmentExpression	bytes_to_go = saved_len		1638388	0		=			
ANR	1638915	Identifier	bytes_to_go		1638388	0					
ANR	1638916	Identifier	saved_len		1638388	1					
ANR	1638917	ExpressionStatement	ptr = ( char * ) saved_core_loc	1525:1:43431:43459	1638388	12	True				
ANR	1638918	AssignmentExpression	ptr = ( char * ) saved_core_loc		1638388	0		=			
ANR	1638919	Identifier	ptr		1638388	0					
ANR	1638920	CastExpression	( char * ) saved_core_loc		1638388	1					
ANR	1638921	CastTarget	char *		1638388	0					
ANR	1638922	Identifier	saved_core_loc		1638388	1					
ANR	1638923	ExpressionStatement	"dprintf ( D_ALWAYS , ""About to overwrite %d bytes starting at 0x%p(%s)\\n"" , bytes_to_go , ptr , name )"	1527:1:43463:43565	1638388	13	True				
ANR	1638924	CallExpression	"dprintf ( D_ALWAYS , ""About to overwrite %d bytes starting at 0x%p(%s)\\n"" , bytes_to_go , ptr , name )"		1638388	0					
ANR	1638925	Callee	dprintf		1638388	0					
ANR	1638926	Identifier	dprintf		1638388	0					
ANR	1638927	ArgumentList	D_ALWAYS		1638388	1					
ANR	1638928	Argument	D_ALWAYS		1638388	0					
ANR	1638929	Identifier	D_ALWAYS		1638388	0					
ANR	1638930	Argument	"""About to overwrite %d bytes starting at 0x%p(%s)\\n"""		1638388	1					
ANR	1638931	PrimaryExpression	"""About to overwrite %d bytes starting at 0x%p(%s)\\n"""		1638388	0					
ANR	1638932	Argument	bytes_to_go		1638388	2					
ANR	1638933	Identifier	bytes_to_go		1638388	0					
ANR	1638934	Argument	ptr		1638388	3					
ANR	1638935	Identifier	ptr		1638388	0					
ANR	1638936	Argument	name		1638388	4					
ANR	1638937	Identifier	name		1638388	0					
ANR	1638938	IfStatement	if ( zstr )		1638388	14					
ANR	1638939	Condition	zstr	1532:5:43600:43603	1638388	0	True				
ANR	1638940	Identifier	zstr		1638388	0					
ANR	1638941	CompoundStatement		148:2:5086:5118	1638388	1					
ANR	1638942	IdentifierDeclStatement	z_stream * saved_zstr = zstr ;	1533:13:43621:43648	1638388	0	True				
ANR	1638943	IdentifierDecl	* saved_zstr = zstr		1638388	0					
ANR	1638944	IdentifierDeclType	z_stream *		1638388	0					
ANR	1638945	Identifier	saved_zstr		1638388	1					
ANR	1638946	AssignmentExpression	* saved_zstr = zstr		1638388	2		=			
ANR	1638947	Identifier	zstr		1638388	0					
ANR	1638948	Identifier	zstr		1638388	1					
ANR	1638949	IdentifierDeclStatement	unsigned char * saved_zbuf = zbuf ;	1534:2:43652:43684	1638388	1	True				
ANR	1638950	IdentifierDecl	* saved_zbuf = zbuf		1638388	0					
ANR	1638951	IdentifierDeclType	unsigned char *		1638388	0					
ANR	1638952	Identifier	saved_zbuf		1638388	1					
ANR	1638953	AssignmentExpression	* saved_zbuf = zbuf		1638388	2		=			
ANR	1638954	Identifier	zbuf		1638388	0					
ANR	1638955	Identifier	zbuf		1638388	1					
ANR	1638956	ExpressionStatement	saved_zstr -> next_out = ( unsigned char * ) saved_core_loc	1535:2:43688:43742	1638388	2	True				
ANR	1638957	AssignmentExpression	saved_zstr -> next_out = ( unsigned char * ) saved_core_loc		1638388	0		=			
ANR	1638958	PtrMemberAccess	saved_zstr -> next_out		1638388	0					
ANR	1638959	Identifier	saved_zstr		1638388	0					
ANR	1638960	Identifier	next_out		1638388	1					
ANR	1638961	CastExpression	( unsigned char * ) saved_core_loc		1638388	1					
ANR	1638962	CastTarget	unsigned char *		1638388	0					
ANR	1638963	Identifier	saved_core_loc		1638388	1					
ANR	1638964	ExpressionStatement	saved_zstr -> avail_out = saved_len	1536:2:43746:43779	1638388	3	True				
ANR	1638965	AssignmentExpression	saved_zstr -> avail_out = saved_len		1638388	0		=			
ANR	1638966	PtrMemberAccess	saved_zstr -> avail_out		1638388	0					
ANR	1638967	Identifier	saved_zstr		1638388	0					
ANR	1638968	Identifier	avail_out		1638388	1					
ANR	1638969	Identifier	saved_len		1638388	1					
ANR	1638970	WhileStatement	while ( saved_zstr -> avail_out > 0 )		1638388	4					
ANR	1638971	Condition	saved_zstr -> avail_out > 0	1537:9:43790:43814	1638388	0	True				
ANR	1638972	RelationalExpression	saved_zstr -> avail_out > 0		1638388	0		>			
ANR	1638973	PtrMemberAccess	saved_zstr -> avail_out		1638388	0					
ANR	1638974	Identifier	saved_zstr		1638388	0					
ANR	1638975	Identifier	avail_out		1638388	1					
ANR	1638976	PrimaryExpression	0		1638388	1					
ANR	1638977	CompoundStatement		151:36:5251:5251	1638388	1					
ANR	1638978	IfStatement	if ( saved_zstr -> avail_in < 32 )		1638388	0					
ANR	1638979	Condition	saved_zstr -> avail_in < 32	1539:7:43865:43889	1638388	0	True				
ANR	1638980	RelationalExpression	saved_zstr -> avail_in < 32		1638388	0		<			
ANR	1638981	PtrMemberAccess	saved_zstr -> avail_in		1638388	0					
ANR	1638982	Identifier	saved_zstr		1638388	0					
ANR	1638983	Identifier	avail_in		1638388	1					
ANR	1638984	PrimaryExpression	32		1638388	1					
ANR	1638985	CompoundStatement		153:34:5326:5326	1638388	1					
ANR	1638986	IfStatement	if ( saved_zstr -> avail_in > 0 )		1638388	0					
ANR	1638987	Condition	saved_zstr -> avail_in > 0	1540:8:43902:43925	1638388	0	True				
ANR	1638988	RelationalExpression	saved_zstr -> avail_in > 0		1638388	0		>			
ANR	1638989	PtrMemberAccess	saved_zstr -> avail_in		1638388	0					
ANR	1638990	Identifier	saved_zstr		1638388	0					
ANR	1638991	Identifier	avail_in		1638388	1					
ANR	1638992	PrimaryExpression	0		1638388	1					
ANR	1638993	CompoundStatement		154:34:5362:5362	1638388	1					
ANR	1638994	ExpressionStatement	"memcpy ( saved_zbuf , saved_zstr -> next_in , saved_zstr -> avail_in )"	1541:5:43935:44005	1638388	0	True				
ANR	1638995	CallExpression	"memcpy ( saved_zbuf , saved_zstr -> next_in , saved_zstr -> avail_in )"		1638388	0					
ANR	1638996	Callee	memcpy		1638388	0					
ANR	1638997	Identifier	memcpy		1638388	0					
ANR	1638998	ArgumentList	saved_zbuf		1638388	1					
ANR	1638999	Argument	saved_zbuf		1638388	0					
ANR	1639000	Identifier	saved_zbuf		1638388	0					
ANR	1639001	Argument	saved_zstr -> next_in		1638388	1					
ANR	1639002	PtrMemberAccess	saved_zstr -> next_in		1638388	0					
ANR	1639003	Identifier	saved_zstr		1638388	0					
ANR	1639004	Identifier	next_in		1638388	1					
ANR	1639005	Argument	saved_zstr -> avail_in		1638388	2					
ANR	1639006	PtrMemberAccess	saved_zstr -> avail_in		1638388	0					
ANR	1639007	Identifier	saved_zstr		1638388	0					
ANR	1639008	Identifier	avail_in		1638388	1					
ANR	1639009	ExpressionStatement	"nbytes = SYSCALL ( SYS_read , fd , saved_zbuf + saved_zstr -> avail_in , zbufsize - saved_zstr -> avail_in )"	1544:4:44017:44129	1638388	1	True				
ANR	1639010	AssignmentExpression	"nbytes = SYSCALL ( SYS_read , fd , saved_zbuf + saved_zstr -> avail_in , zbufsize - saved_zstr -> avail_in )"		1638388	0		=			
ANR	1639011	Identifier	nbytes		1638388	0					
ANR	1639012	CallExpression	"SYSCALL ( SYS_read , fd , saved_zbuf + saved_zstr -> avail_in , zbufsize - saved_zstr -> avail_in )"		1638388	1					
ANR	1639013	Callee	SYSCALL		1638388	0					
ANR	1639014	Identifier	SYSCALL		1638388	0					
ANR	1639015	ArgumentList	SYS_read		1638388	1					
ANR	1639016	Argument	SYS_read		1638388	0					
ANR	1639017	Identifier	SYS_read		1638388	0					
ANR	1639018	Argument	fd		1638388	1					
ANR	1639019	Identifier	fd		1638388	0					
ANR	1639020	Argument	saved_zbuf + saved_zstr -> avail_in		1638388	2					
ANR	1639021	AdditiveExpression	saved_zbuf + saved_zstr -> avail_in		1638388	0		+			
ANR	1639022	Identifier	saved_zbuf		1638388	0					
ANR	1639023	PtrMemberAccess	saved_zstr -> avail_in		1638388	1					
ANR	1639024	Identifier	saved_zstr		1638388	0					
ANR	1639025	Identifier	avail_in		1638388	1					
ANR	1639026	Argument	zbufsize - saved_zstr -> avail_in		1638388	3					
ANR	1639027	AdditiveExpression	zbufsize - saved_zstr -> avail_in		1638388	0		-			
ANR	1639028	Identifier	zbufsize		1638388	0					
ANR	1639029	PtrMemberAccess	saved_zstr -> avail_in		1638388	1					
ANR	1639030	Identifier	saved_zstr		1638388	0					
ANR	1639031	Identifier	avail_in		1638388	1					
ANR	1639032	IfStatement	if ( nbytes > 0 )		1638388	2					
ANR	1639033	Condition	nbytes > 0	1547:8:44139:44148	1638388	0	True				
ANR	1639034	RelationalExpression	nbytes > 0		1638388	0		>			
ANR	1639035	Identifier	nbytes		1638388	0					
ANR	1639036	PrimaryExpression	0		1638388	1					
ANR	1639037	CompoundStatement		161:20:5585:5585	1638388	1					
ANR	1639038	ExpressionStatement	saved_zstr -> avail_in += nbytes	1548:5:44158:44188	1638388	0	True				
ANR	1639039	AssignmentExpression	saved_zstr -> avail_in += nbytes		1638388	0		+=			
ANR	1639040	PtrMemberAccess	saved_zstr -> avail_in		1638388	0					
ANR	1639041	Identifier	saved_zstr		1638388	0					
ANR	1639042	Identifier	avail_in		1638388	1					
ANR	1639043	Identifier	nbytes		1638388	1					
ANR	1639044	ExpressionStatement	saved_zstr -> next_in = saved_zbuf	1550:4:44200:44232	1638388	3	True				
ANR	1639045	AssignmentExpression	saved_zstr -> next_in = saved_zbuf		1638388	0		=			
ANR	1639046	PtrMemberAccess	saved_zstr -> next_in		1638388	0					
ANR	1639047	Identifier	saved_zstr		1638388	0					
ANR	1639048	Identifier	next_in		1638388	1					
ANR	1639049	Identifier	saved_zbuf		1638388	1					
ANR	1639050	IfStatement	"if ( inflate ( saved_zstr , Z_PARTIAL_FLUSH ) != Z_OK && saved_zstr -> avail_out > 0 )"		1638388	1					
ANR	1639051	Condition	"inflate ( saved_zstr , Z_PARTIAL_FLUSH ) != Z_OK && saved_zstr -> avail_out > 0"	1552:7:44246:44322	1638388	0	True				
ANR	1639052	AndExpression	"inflate ( saved_zstr , Z_PARTIAL_FLUSH ) != Z_OK && saved_zstr -> avail_out > 0"		1638388	0		&&			
ANR	1639053	EqualityExpression	"inflate ( saved_zstr , Z_PARTIAL_FLUSH ) != Z_OK"		1638388	0		!=			
ANR	1639054	CallExpression	"inflate ( saved_zstr , Z_PARTIAL_FLUSH )"		1638388	0					
ANR	1639055	Callee	inflate		1638388	0					
ANR	1639056	Identifier	inflate		1638388	0					
ANR	1639057	ArgumentList	saved_zstr		1638388	1					
ANR	1639058	Argument	saved_zstr		1638388	0					
ANR	1639059	Identifier	saved_zstr		1638388	0					
ANR	1639060	Argument	Z_PARTIAL_FLUSH		1638388	1					
ANR	1639061	Identifier	Z_PARTIAL_FLUSH		1638388	0					
ANR	1639062	Identifier	Z_OK		1638388	1					
ANR	1639063	RelationalExpression	saved_zstr -> avail_out > 0		1638388	1		>			
ANR	1639064	PtrMemberAccess	saved_zstr -> avail_out		1638388	0					
ANR	1639065	Identifier	saved_zstr		1638388	0					
ANR	1639066	Identifier	avail_out		1638388	1					
ANR	1639067	PrimaryExpression	0		1638388	1					
ANR	1639068	CompoundStatement		167:31:5759:5759	1638388	1					
ANR	1639069	ExpressionStatement	"dprintf ( D_ALWAYS , ""zlib (inflate): %s\\n"" , saved_zstr -> msg )"	1554:4:44331:44391	1638388	0	True				
ANR	1639070	CallExpression	"dprintf ( D_ALWAYS , ""zlib (inflate): %s\\n"" , saved_zstr -> msg )"		1638388	0					
ANR	1639071	Callee	dprintf		1638388	0					
ANR	1639072	Identifier	dprintf		1638388	0					
ANR	1639073	ArgumentList	D_ALWAYS		1638388	1					
ANR	1639074	Argument	D_ALWAYS		1638388	0					
ANR	1639075	Identifier	D_ALWAYS		1638388	0					
ANR	1639076	Argument	"""zlib (inflate): %s\\n"""		1638388	1					
ANR	1639077	PrimaryExpression	"""zlib (inflate): %s\\n"""		1638388	0					
ANR	1639078	Argument	saved_zstr -> msg		1638388	2					
ANR	1639079	PtrMemberAccess	saved_zstr -> msg		1638388	0					
ANR	1639080	Identifier	saved_zstr		1638388	0					
ANR	1639081	Identifier	msg		1638388	1					
ANR	1639082	ExpressionStatement	Suicide ( )	1555:4:44397:44406	1638388	1	True				
ANR	1639083	CallExpression	Suicide ( )		1638388	0					
ANR	1639084	Callee	Suicide		1638388	0					
ANR	1639085	Identifier	Suicide		1638388	0					
ANR	1639086	ArgumentList			1638388	1					
ANR	1639087	ExpressionStatement	zstr = saved_zstr	1558:2:44419:44436	1638388	5	True				
ANR	1639088	AssignmentExpression	zstr = saved_zstr		1638388	0		=			
ANR	1639089	Identifier	zstr		1638388	0					
ANR	1639090	Identifier	saved_zstr		1638388	1					
ANR	1639091	ExpressionStatement	zbuf = saved_zbuf	1559:2:44440:44457	1638388	6	True				
ANR	1639092	AssignmentExpression	zbuf = saved_zbuf		1638388	0		=			
ANR	1639093	Identifier	zbuf		1638388	0					
ANR	1639094	Identifier	saved_zbuf		1638388	1					
ANR	1639095	ReturnStatement	return pos + saved_len ;	1560:2:44461:44483	1638388	7	True				
ANR	1639096	AdditiveExpression	pos + saved_len		1638388	0		+			
ANR	1639097	Identifier	pos		1638388	0					
ANR	1639098	Identifier	saved_len		1638388	1					
ANR	1639099	WhileStatement	while ( bytes_to_go )		1638388	15					
ANR	1639100	Condition	bytes_to_go	1564:8:44504:44514	1638388	0	True				
ANR	1639101	Identifier	bytes_to_go		1638388	0					
ANR	1639102	CompoundStatement		178:22:5952:5952	1638388	1					
ANR	1639103	ExpressionStatement	read_size = bytes_to_go > 65536 ? 65536 : bytes_to_go	1565:2:44522:44575	1638388	0	True				
ANR	1639104	AssignmentExpression	read_size = bytes_to_go > 65536 ? 65536 : bytes_to_go		1638388	0		=			
ANR	1639105	Identifier	read_size		1638388	0					
ANR	1639106	ConditionalExpression	bytes_to_go > 65536 ? 65536 : bytes_to_go		1638388	1					
ANR	1639107	Condition	bytes_to_go > 65536		1638388	0					
ANR	1639108	RelationalExpression	bytes_to_go > 65536		1638388	0		>			
ANR	1639109	Identifier	bytes_to_go		1638388	0					
ANR	1639110	PrimaryExpression	65536		1638388	1					
ANR	1639111	PrimaryExpression	65536		1638388	1					
ANR	1639112	Identifier	bytes_to_go		1638388	2					
ANR	1639113	ExpressionStatement	"nbytes = SYSCALL ( SYS_read , fd , ( void * ) ptr , read_size )"	1567:2:44614:44670	1638388	1	True				
ANR	1639114	AssignmentExpression	"nbytes = SYSCALL ( SYS_read , fd , ( void * ) ptr , read_size )"		1638388	0		=			
ANR	1639115	Identifier	nbytes		1638388	0					
ANR	1639116	CallExpression	"SYSCALL ( SYS_read , fd , ( void * ) ptr , read_size )"		1638388	1					
ANR	1639117	Callee	SYSCALL		1638388	0					
ANR	1639118	Identifier	SYSCALL		1638388	0					
ANR	1639119	ArgumentList	SYS_read		1638388	1					
ANR	1639120	Argument	SYS_read		1638388	0					
ANR	1639121	Identifier	SYS_read		1638388	0					
ANR	1639122	Argument	fd		1638388	1					
ANR	1639123	Identifier	fd		1638388	0					
ANR	1639124	Argument	( void * ) ptr		1638388	2					
ANR	1639125	CastExpression	( void * ) ptr		1638388	0					
ANR	1639126	CastTarget	void *		1638388	0					
ANR	1639127	Identifier	ptr		1638388	1					
ANR	1639128	Argument	read_size		1638388	3					
ANR	1639129	Identifier	read_size		1638388	0					
ANR	1639130	IfStatement	if ( nbytes <= 0 )		1638388	2					
ANR	1639131	Condition	nbytes <= 0	1571:6:44752:44762	1638388	0	True				
ANR	1639132	RelationalExpression	nbytes <= 0		1638388	0		<=			
ANR	1639133	Identifier	nbytes		1638388	0					
ANR	1639134	PrimaryExpression	0		1638388	1					
ANR	1639135	CompoundStatement		185:20:6200:6200	1638388	1					
ANR	1639136	ExpressionStatement	"dprintf ( D_ALWAYS , ""in Segmap::Read(): fd = %d, read_size=%d\\n"" , fd , read_size )"	1572:3:44771:44853	1638388	0	True				
ANR	1639137	CallExpression	"dprintf ( D_ALWAYS , ""in Segmap::Read(): fd = %d, read_size=%d\\n"" , fd , read_size )"		1638388	0					
ANR	1639138	Callee	dprintf		1638388	0					
ANR	1639139	Identifier	dprintf		1638388	0					
ANR	1639140	ArgumentList	D_ALWAYS		1638388	1					
ANR	1639141	Argument	D_ALWAYS		1638388	0					
ANR	1639142	Identifier	D_ALWAYS		1638388	0					
ANR	1639143	Argument	"""in Segmap::Read(): fd = %d, read_size=%d\\n"""		1638388	1					
ANR	1639144	PrimaryExpression	"""in Segmap::Read(): fd = %d, read_size=%d\\n"""		1638388	0					
ANR	1639145	Argument	fd		1638388	2					
ANR	1639146	Identifier	fd		1638388	0					
ANR	1639147	Argument	read_size		1638388	3					
ANR	1639148	Identifier	read_size		1638388	0					
ANR	1639149	ExpressionStatement	"dprintf ( D_ALWAYS , ""core_loc=%lx, nbytes=%d, errno=%d(%s)\\n"" , ( unsigned long ) core_loc , nbytes , errno , strerror ( errno ) )"	1574:3:44858:44979	1638388	1	True				
ANR	1639150	CallExpression	"dprintf ( D_ALWAYS , ""core_loc=%lx, nbytes=%d, errno=%d(%s)\\n"" , ( unsigned long ) core_loc , nbytes , errno , strerror ( errno ) )"		1638388	0					
ANR	1639151	Callee	dprintf		1638388	0					
ANR	1639152	Identifier	dprintf		1638388	0					
ANR	1639153	ArgumentList	D_ALWAYS		1638388	1					
ANR	1639154	Argument	D_ALWAYS		1638388	0					
ANR	1639155	Identifier	D_ALWAYS		1638388	0					
ANR	1639156	Argument	"""core_loc=%lx, nbytes=%d, errno=%d(%s)\\n"""		1638388	1					
ANR	1639157	PrimaryExpression	"""core_loc=%lx, nbytes=%d, errno=%d(%s)\\n"""		1638388	0					
ANR	1639158	Argument	( unsigned long ) core_loc		1638388	2					
ANR	1639159	CastExpression	( unsigned long ) core_loc		1638388	0					
ANR	1639160	CastTarget	unsigned long		1638388	0					
ANR	1639161	Identifier	core_loc		1638388	1					
ANR	1639162	Argument	nbytes		1638388	3					
ANR	1639163	Identifier	nbytes		1638388	0					
ANR	1639164	Argument	errno		1638388	4					
ANR	1639165	Identifier	errno		1638388	0					
ANR	1639166	Argument	strerror ( errno )		1638388	5					
ANR	1639167	CallExpression	strerror ( errno )		1638388	0					
ANR	1639168	Callee	strerror		1638388	0					
ANR	1639169	Identifier	strerror		1638388	0					
ANR	1639170	ArgumentList	errno		1638388	1					
ANR	1639171	Argument	errno		1638388	0					
ANR	1639172	Identifier	errno		1638388	0					
ANR	1639173	ReturnStatement	return - 1 ;	1576:3:44984:44993	1638388	2	True				
ANR	1639174	UnaryOperationExpression	- 1		1638388	0					
ANR	1639175	UnaryOperator	-		1638388	0					
ANR	1639176	PrimaryExpression	1		1638388	1					
ANR	1639177	ExpressionStatement	bytes_to_go -= nbytes	1578:2:45001:45022	1638388	3	True				
ANR	1639178	AssignmentExpression	bytes_to_go -= nbytes		1638388	0		-=			
ANR	1639179	Identifier	bytes_to_go		1638388	0					
ANR	1639180	Identifier	nbytes		1638388	1					
ANR	1639181	ExpressionStatement	ptr += nbytes	1579:2:45026:45039	1638388	4	True				
ANR	1639182	AssignmentExpression	ptr += nbytes		1638388	0		+=			
ANR	1639183	Identifier	ptr		1638388	0					
ANR	1639184	Identifier	nbytes		1638388	1					
ANR	1639185	ReturnStatement	return pos + len ;	1582:1:45046:45062	1638388	16	True				
ANR	1639186	AdditiveExpression	pos + len		1638388	0		+			
ANR	1639187	Identifier	pos		1638388	0					
ANR	1639188	Identifier	len		1638388	1					
ANR	1639189	ReturnType	ssize_t		1638388	1					
ANR	1639190	Identifier	SegMap :: Read		1638388	2					
ANR	1639191	ParameterList	"int fd , ssize_t pos"		1638388	3					
ANR	1639192	Parameter	int fd	1386:14:38543:38548	1638388	0	True				
ANR	1639193	ParameterType	int		1638388	0					
ANR	1639194	Identifier	fd		1638388	1					
ANR	1639195	Parameter	ssize_t pos	1386:22:38551:38561	1638388	1	True				
ANR	1639196	ParameterType	ssize_t		1638388	0					
ANR	1639197	Identifier	pos		1638388	1					
ANR	1639198	CFGEntryNode	ENTRY		1638388		True				
ANR	1639199	CFGExitNode	EXIT		1638388		True				
ANR	1639200	Symbol	SYS_open		1638388						
ANR	1639201	Symbol	zbuf		1638388						
ANR	1639202	Symbol	saved_zstr -> msg		1638388						
ANR	1639203	Symbol	SYS_close		1638388						
ANR	1639204	Symbol	saved_zstr		1638388						
ANR	1639205	Symbol	saved_zstr -> next_in		1638388						
ANR	1639206	Symbol	core_loc		1638388						
ANR	1639207	Symbol	MAP_PRIVATE		1638388						
ANR	1639208	Symbol	UINT_MAX		1638388						
ANR	1639209	Symbol	len		1638388						
ANR	1639210	Symbol	PROT_WRITE		1638388						
ANR	1639211	Symbol	Z_PARTIAL_FLUSH		1638388						
ANR	1639212	Symbol	errno		1638388						
ANR	1639213	Symbol	mystrcmp		1638388						
ANR	1639214	Symbol	PROT_EXEC		1638388						
ANR	1639215	Symbol	PROT_READ		1638388						
ANR	1639216	Symbol	read_size		1638388						
ANR	1639217	Symbol	orig_brk		1638388						
ANR	1639218	Symbol	strerror		1638388						
ANR	1639219	Symbol	saved_zstr -> avail_out		1638388						
ANR	1639220	Symbol	page_mask		1638388						
ANR	1639221	Symbol	name		1638388						
ANR	1639222	Symbol	zfd		1638388						
ANR	1639223	Symbol	* saved_zstr		1638388						
ANR	1639224	Symbol	fd		1638388						
ANR	1639225	Symbol	SYSCALL		1638388						
ANR	1639226	Symbol	cur_brk		1638388						
ANR	1639227	Symbol	lastPage		1638388						
ANR	1639228	Symbol	Z_OK		1638388						
ANR	1639229	Symbol	MAP_FAILED		1638388						
ANR	1639230	Symbol	zstr		1638388						
ANR	1639231	Symbol	file_loc		1638388						
ANR	1639232	Symbol	SYS_mprotect		1638388						
ANR	1639233	Symbol	O_RDWR		1638388						
ANR	1639234	Symbol	prot		1638388						
ANR	1639235	Symbol	pos		1638388						
ANR	1639236	Symbol	saved_zbuf		1638388						
ANR	1639237	Symbol	align_offset		1638388						
ANR	1639238	Symbol	saved_zstr -> next_out		1638388						
ANR	1639239	Symbol	zbufsize		1638388						
ANR	1639240	Symbol	segLoc		1638388						
ANR	1639241	Symbol	MAP_FIXED		1638388						
ANR	1639242	Symbol	GETPAGESIZE		1638388						
ANR	1639243	Symbol	bytes_to_go		1638388						
ANR	1639244	Symbol	D_CKPT		1638388						
ANR	1639245	Symbol	D_ALWAYS		1638388						
ANR	1639246	Symbol	saved_len		1638388						
ANR	1639247	Symbol	MMAP		1638388						
ANR	1639248	Symbol	segSize		1638388						
ANR	1639249	Symbol	nbytes		1638388						
ANR	1639250	Symbol	ptr		1638388						
ANR	1639251	Symbol	saved_zstr -> avail_in		1638388						
ANR	1639252	Symbol	inflate		1638388						
ANR	1639253	Symbol	SYS_read		1638388						
ANR	1639254	Symbol	saved_core_loc		1638388						
ANR	1639255	Symbol	sbrk		1638388						
ANR	1639256	Function	SegMap :: Write	1585:0:45067:47474							
ANR	1639257	FunctionDef	"SegMap :: Write (int fd , ssize_t pos)"		1639256	0					
ANR	1639258	CompoundStatement		1587:0:45112:47474	1639256	0					
ANR	1639259	IfStatement	if ( pos != file_loc )		1639256	0					
ANR	1639260	Condition	pos != file_loc	1588:5:45119:45133	1639256	0	True				
ANR	1639261	EqualityExpression	pos != file_loc		1639256	0		!=			
ANR	1639262	Identifier	pos		1639256	0					
ANR	1639263	Identifier	file_loc		1639256	1					
ANR	1639264	CompoundStatement		2:23:24:24	1639256	1					
ANR	1639265	IfStatement	if ( pos > UINT_MAX )		1639256	0					
ANR	1639266	Condition	pos > UINT_MAX	1591:6:45270:45283	1639256	0	True				
ANR	1639267	RelationalExpression	pos > UINT_MAX		1639256	0		>			
ANR	1639268	Identifier	pos		1639256	0					
ANR	1639269	Identifier	UINT_MAX		1639256	1					
ANR	1639270	CompoundStatement		5:22:173:173	1639256	1					
ANR	1639271	Statement	dprintf	1592:3:45291:45297	1639256	0	True				
ANR	1639272	Statement	(	1592:10:45298:45298	1639256	1	True				
ANR	1639273	Statement	D_ALWAYS	1592:12:45300:45307	1639256	2	True				
ANR	1639274	Statement	","	1592:20:45308:45308	1639256	3	True				
ANR	1639275	Statement	"""Checkpoint sequence error at a position """	1592:22:45310:45351	1639256	4	True				
ANR	1639276	Statement	"""greater than UINT_MAX. Sorry.\\n"""	1593:4:45357:45389	1639256	5	True				
ANR	1639277	Statement	)	1593:37:45390:45390	1639256	6	True				
ANR	1639278	ExpressionStatement		1593:38:45391:45391	1639256	7	True				
ANR	1639279	ElseStatement	else		1639256	0					
ANR	1639280	CompoundStatement		8:9:289:289	1639256	0					
ANR	1639281	ExpressionStatement	"dprintf ( D_ALWAYS , ""Checkpoint sequence error (%d != %u)\\n"" , pos , ( unsigned int ) file_loc )"	1595:3:45407:45502	1639256	0	True				
ANR	1639282	CallExpression	"dprintf ( D_ALWAYS , ""Checkpoint sequence error (%d != %u)\\n"" , pos , ( unsigned int ) file_loc )"		1639256	0					
ANR	1639283	Callee	dprintf		1639256	0					
ANR	1639284	Identifier	dprintf		1639256	0					
ANR	1639285	ArgumentList	D_ALWAYS		1639256	1					
ANR	1639286	Argument	D_ALWAYS		1639256	0					
ANR	1639287	Identifier	D_ALWAYS		1639256	0					
ANR	1639288	Argument	"""Checkpoint sequence error (%d != %u)\\n"""		1639256	1					
ANR	1639289	PrimaryExpression	"""Checkpoint sequence error (%d != %u)\\n"""		1639256	0					
ANR	1639290	Argument	pos		1639256	2					
ANR	1639291	Identifier	pos		1639256	0					
ANR	1639292	Argument	( unsigned int ) file_loc		1639256	3					
ANR	1639293	CastExpression	( unsigned int ) file_loc		1639256	0					
ANR	1639294	CastTarget	unsigned int		1639256	0					
ANR	1639295	Identifier	file_loc		1639256	1					
ANR	1639296	ExpressionStatement	Suicide ( )	1598:2:45510:45519	1639256	1	True				
ANR	1639297	CallExpression	Suicide ( )		1639256	0					
ANR	1639298	Callee	Suicide		1639256	0					
ANR	1639299	Identifier	Suicide		1639256	0					
ANR	1639300	ArgumentList			1639256	1					
ANR	1639301	IfStatement	if ( condor_compress_ckpt )		1639256	1					
ANR	1639302	Condition	condor_compress_ckpt	1601:5:45556:45575	1639256	0	True				
ANR	1639303	Identifier	condor_compress_ckpt		1639256	0					
ANR	1639304	CompoundStatement		17:2:508:526	1639256	1					
ANR	1639305	IdentifierDeclStatement	"int bytes_to_go , rval , old_avail_in ;"	1602:2:45582:45617	1639256	0	True				
ANR	1639306	IdentifierDecl	bytes_to_go		1639256	0					
ANR	1639307	IdentifierDeclType	int		1639256	0					
ANR	1639308	Identifier	bytes_to_go		1639256	1					
ANR	1639309	IdentifierDecl	rval		1639256	1					
ANR	1639310	IdentifierDeclType	int		1639256	0					
ANR	1639311	Identifier	rval		1639256	1					
ANR	1639312	IdentifierDecl	old_avail_in		1639256	2					
ANR	1639313	IdentifierDeclType	int		1639256	0					
ANR	1639314	Identifier	old_avail_in		1639256	1					
ANR	1639315	IdentifierDeclStatement	unsigned char * ptr ;	1603:2:45621:45639	1639256	1	True				
ANR	1639316	IdentifierDecl	* ptr		1639256	0					
ANR	1639317	IdentifierDeclType	unsigned char *		1639256	0					
ANR	1639318	Identifier	ptr		1639256	1					
ANR	1639319	ExpressionStatement	zstr -> next_in = ( unsigned char * ) core_loc	1605:2:45644:45685	1639256	2	True				
ANR	1639320	AssignmentExpression	zstr -> next_in = ( unsigned char * ) core_loc		1639256	0		=			
ANR	1639321	PtrMemberAccess	zstr -> next_in		1639256	0					
ANR	1639322	Identifier	zstr		1639256	0					
ANR	1639323	Identifier	next_in		1639256	1					
ANR	1639324	CastExpression	( unsigned char * ) core_loc		1639256	1					
ANR	1639325	CastTarget	unsigned char *		1639256	0					
ANR	1639326	Identifier	core_loc		1639256	1					
ANR	1639327	ExpressionStatement	zstr -> avail_in = len	1606:2:45689:45709	1639256	3	True				
ANR	1639328	AssignmentExpression	zstr -> avail_in = len		1639256	0		=			
ANR	1639329	PtrMemberAccess	zstr -> avail_in		1639256	0					
ANR	1639330	Identifier	zstr		1639256	0					
ANR	1639331	Identifier	avail_in		1639256	1					
ANR	1639332	Identifier	len		1639256	1					
ANR	1639333	WhileStatement	while ( zstr -> avail_in > 0 )		1639256	4					
ANR	1639334	Condition	zstr -> avail_in > 0	1607:9:45720:45737	1639256	0	True				
ANR	1639335	RelationalExpression	zstr -> avail_in > 0		1639256	0		>			
ANR	1639336	PtrMemberAccess	zstr -> avail_in		1639256	0					
ANR	1639337	Identifier	zstr		1639256	0					
ANR	1639338	Identifier	avail_in		1639256	1					
ANR	1639339	PrimaryExpression	0		1639256	1					
ANR	1639340	CompoundStatement		21:29:627:627	1639256	1					
ANR	1639341	ExpressionStatement	zstr -> next_out = zbuf	1608:3:45745:45766	1639256	0	True				
ANR	1639342	AssignmentExpression	zstr -> next_out = zbuf		1639256	0		=			
ANR	1639343	PtrMemberAccess	zstr -> next_out		1639256	0					
ANR	1639344	Identifier	zstr		1639256	0					
ANR	1639345	Identifier	next_out		1639256	1					
ANR	1639346	Identifier	zbuf		1639256	1					
ANR	1639347	ExpressionStatement	zstr -> avail_out = zbufsize	1609:3:45771:45797	1639256	1	True				
ANR	1639348	AssignmentExpression	zstr -> avail_out = zbufsize		1639256	0		=			
ANR	1639349	PtrMemberAccess	zstr -> avail_out		1639256	0					
ANR	1639350	Identifier	zstr		1639256	0					
ANR	1639351	Identifier	avail_out		1639256	1					
ANR	1639352	Identifier	zbufsize		1639256	1					
ANR	1639353	ExpressionStatement	old_avail_in = zstr -> avail_in	1610:3:45802:45831	1639256	2	True				
ANR	1639354	AssignmentExpression	old_avail_in = zstr -> avail_in		1639256	0		=			
ANR	1639355	Identifier	old_avail_in		1639256	0					
ANR	1639356	PtrMemberAccess	zstr -> avail_in		1639256	1					
ANR	1639357	Identifier	zstr		1639256	0					
ANR	1639358	Identifier	avail_in		1639256	1					
ANR	1639359	IfStatement	"if ( deflate ( zstr , Z_PARTIAL_FLUSH ) != Z_OK )"		1639256	3					
ANR	1639360	Condition	"deflate ( zstr , Z_PARTIAL_FLUSH ) != Z_OK"	1611:7:45840:45877	1639256	0	True				
ANR	1639361	EqualityExpression	"deflate ( zstr , Z_PARTIAL_FLUSH ) != Z_OK"		1639256	0		!=			
ANR	1639362	CallExpression	"deflate ( zstr , Z_PARTIAL_FLUSH )"		1639256	0					
ANR	1639363	Callee	deflate		1639256	0					
ANR	1639364	Identifier	deflate		1639256	0					
ANR	1639365	ArgumentList	zstr		1639256	1					
ANR	1639366	Argument	zstr		1639256	0					
ANR	1639367	Identifier	zstr		1639256	0					
ANR	1639368	Argument	Z_PARTIAL_FLUSH		1639256	1					
ANR	1639369	Identifier	Z_PARTIAL_FLUSH		1639256	0					
ANR	1639370	Identifier	Z_OK		1639256	1					
ANR	1639371	CompoundStatement		25:47:767:767	1639256	1					
ANR	1639372	ExpressionStatement	"dprintf ( D_ALWAYS , ""zlib (deflate): %s\\n"" , zstr -> msg )"	1612:4:45886:45940	1639256	0	True				
ANR	1639373	CallExpression	"dprintf ( D_ALWAYS , ""zlib (deflate): %s\\n"" , zstr -> msg )"		1639256	0					
ANR	1639374	Callee	dprintf		1639256	0					
ANR	1639375	Identifier	dprintf		1639256	0					
ANR	1639376	ArgumentList	D_ALWAYS		1639256	1					
ANR	1639377	Argument	D_ALWAYS		1639256	0					
ANR	1639378	Identifier	D_ALWAYS		1639256	0					
ANR	1639379	Argument	"""zlib (deflate): %s\\n"""		1639256	1					
ANR	1639380	PrimaryExpression	"""zlib (deflate): %s\\n"""		1639256	0					
ANR	1639381	Argument	zstr -> msg		1639256	2					
ANR	1639382	PtrMemberAccess	zstr -> msg		1639256	0					
ANR	1639383	Identifier	zstr		1639256	0					
ANR	1639384	Identifier	msg		1639256	1					
ANR	1639385	ExpressionStatement	Suicide ( )	1613:4:45946:45955	1639256	1	True				
ANR	1639386	CallExpression	Suicide ( )		1639256	0					
ANR	1639387	Callee	Suicide		1639256	0					
ANR	1639388	Identifier	Suicide		1639256	0					
ANR	1639389	ArgumentList			1639256	1					
ANR	1639390	ForStatement	"for ( bytes_to_go = ( zbufsize - zstr -> avail_out ) , ptr = zbuf ; bytes_to_go > 0 ; bytes_to_go -= rval , ptr += rval , zstr -> avail_out += rval )"		1639256	4					
ANR	1639391	ForInit	"bytes_to_go = ( zbufsize - zstr -> avail_out ) , ptr = zbuf ;"	1615:8:45970:46022	1639256	0	True				
ANR	1639392	Expression	"bytes_to_go = ( zbufsize - zstr -> avail_out ) , ptr = zbuf"		1639256	0					
ANR	1639393	AssignmentExpression	bytes_to_go = ( zbufsize - zstr -> avail_out )		1639256	0		=			
ANR	1639394	Identifier	bytes_to_go		1639256	0					
ANR	1639395	AdditiveExpression	zbufsize - zstr -> avail_out		1639256	1		-			
ANR	1639396	Identifier	zbufsize		1639256	0					
ANR	1639397	PtrMemberAccess	zstr -> avail_out		1639256	1					
ANR	1639398	Identifier	zstr		1639256	0					
ANR	1639399	Identifier	avail_out		1639256	1					
ANR	1639400	AssignmentExpression	ptr = zbuf		1639256	1		=			
ANR	1639401	Identifier	ptr		1639256	0					
ANR	1639402	Identifier	zbuf		1639256	1					
ANR	1639403	Condition	bytes_to_go > 0	1616:5:46029:46043	1639256	1	True				
ANR	1639404	RelationalExpression	bytes_to_go > 0		1639256	0		>			
ANR	1639405	Identifier	bytes_to_go		1639256	0					
ANR	1639406	PrimaryExpression	0		1639256	1					
ANR	1639407	Expression	"bytes_to_go -= rval , ptr += rval , zstr -> avail_out += rval"	1617:5:46051:46107	1639256	2	True				
ANR	1639408	AssignmentExpression	bytes_to_go -= rval		1639256	0		-=			
ANR	1639409	Identifier	bytes_to_go		1639256	0					
ANR	1639410	Identifier	rval		1639256	1					
ANR	1639411	Expression	"ptr += rval , zstr -> avail_out += rval"		1639256	1					
ANR	1639412	AssignmentExpression	ptr += rval		1639256	0		+=			
ANR	1639413	Identifier	ptr		1639256	0					
ANR	1639414	Identifier	rval		1639256	1					
ANR	1639415	AssignmentExpression	zstr -> avail_out += rval		1639256	1		+=			
ANR	1639416	PtrMemberAccess	zstr -> avail_out		1639256	0					
ANR	1639417	Identifier	zstr		1639256	0					
ANR	1639418	Identifier	avail_out		1639256	1					
ANR	1639419	Identifier	rval		1639256	1					
ANR	1639420	CompoundStatement		31:64:997:997	1639256	3					
ANR	1639421	ExpressionStatement	"rval = write ( fd , ptr , bytes_to_go )"	1619:4:46160:46192	1639256	0	True				
ANR	1639422	AssignmentExpression	"rval = write ( fd , ptr , bytes_to_go )"		1639256	0		=			
ANR	1639423	Identifier	rval		1639256	0					
ANR	1639424	CallExpression	"write ( fd , ptr , bytes_to_go )"		1639256	1					
ANR	1639425	Callee	write		1639256	0					
ANR	1639426	Identifier	write		1639256	0					
ANR	1639427	ArgumentList	fd		1639256	1					
ANR	1639428	Argument	fd		1639256	0					
ANR	1639429	Identifier	fd		1639256	0					
ANR	1639430	Argument	ptr		1639256	1					
ANR	1639431	Identifier	ptr		1639256	0					
ANR	1639432	Argument	bytes_to_go		1639256	2					
ANR	1639433	Identifier	bytes_to_go		1639256	0					
ANR	1639434	IfStatement	if ( rval < 0 )		1639256	1					
ANR	1639435	Condition	rval < 0	1620:8:46202:46209	1639256	0	True				
ANR	1639436	RelationalExpression	rval < 0		1639256	0		<			
ANR	1639437	Identifier	rval		1639256	0					
ANR	1639438	PrimaryExpression	0		1639256	1					
ANR	1639439	CompoundStatement		34:18:1099:1099	1639256	1					
ANR	1639440	Statement	dprintf	1621:5:46219:46225	1639256	0	True				
ANR	1639441	Statement	(	1621:12:46226:46226	1639256	1	True				
ANR	1639442	Statement	D_ALWAYS	1621:13:46227:46234	1639256	2	True				
ANR	1639443	Statement	","	1621:21:46235:46235	1639256	3	True				
ANR	1639444	Statement	"""write failed with errno %d in """	1621:23:46237:46268	1639256	4	True				
ANR	1639445	Statement	"""SegMap::Write\\n"""	1622:7:46277:46293	1639256	5	True				
ANR	1639446	Statement	","	1622:24:46294:46294	1639256	6	True				
ANR	1639447	Statement	errno	1622:26:46296:46300	1639256	7	True				
ANR	1639448	Statement	)	1622:31:46301:46301	1639256	8	True				
ANR	1639449	ExpressionStatement		1622:32:46302:46302	1639256	9	True				
ANR	1639450	ExpressionStatement	Suicide ( )	1623:5:46309:46318	1639256	10	True				
ANR	1639451	CallExpression	Suicide ( )		1639256	0					
ANR	1639452	Callee	Suicide		1639256	0					
ANR	1639453	Identifier	Suicide		1639256	0					
ANR	1639454	ArgumentList			1639256	1					
ANR	1639455	IfStatement	if ( condor_slow_ckpt )		1639256	5					
ANR	1639456	Condition	condor_slow_ckpt	1626:7:46338:46353	1639256	0	True				
ANR	1639457	Identifier	condor_slow_ckpt		1639256	0					
ANR	1639458	CompoundStatement		40:25:1243:1243	1639256	1					
ANR	1639459	ExpressionStatement	sleep ( ( ( old_avail_in - zstr -> avail_in ) / ( condor_slow_ckpt * KILO ) ) + 1 )	1628:4:46406:46479	1639256	0	True				
ANR	1639460	CallExpression	sleep ( ( ( old_avail_in - zstr -> avail_in ) / ( condor_slow_ckpt * KILO ) ) + 1 )		1639256	0					
ANR	1639461	Callee	sleep		1639256	0					
ANR	1639462	Identifier	sleep		1639256	0					
ANR	1639463	ArgumentList	( ( old_avail_in - zstr -> avail_in ) / ( condor_slow_ckpt * KILO ) ) + 1		1639256	1					
ANR	1639464	Argument	( ( old_avail_in - zstr -> avail_in ) / ( condor_slow_ckpt * KILO ) ) + 1		1639256	0					
ANR	1639465	AdditiveExpression	( ( old_avail_in - zstr -> avail_in ) / ( condor_slow_ckpt * KILO ) ) + 1		1639256	0		+			
ANR	1639466	MultiplicativeExpression	( old_avail_in - zstr -> avail_in ) / ( condor_slow_ckpt * KILO )		1639256	0		/			
ANR	1639467	AdditiveExpression	old_avail_in - zstr -> avail_in		1639256	0		-			
ANR	1639468	Identifier	old_avail_in		1639256	0					
ANR	1639469	PtrMemberAccess	zstr -> avail_in		1639256	1					
ANR	1639470	Identifier	zstr		1639256	0					
ANR	1639471	Identifier	avail_in		1639256	1					
ANR	1639472	MultiplicativeExpression	condor_slow_ckpt * KILO		1639256	1		*			
ANR	1639473	Identifier	condor_slow_ckpt		1639256	0					
ANR	1639474	Identifier	KILO		1639256	1					
ANR	1639475	PrimaryExpression	1		1639256	1					
ANR	1639476	IfStatement	if ( zstr -> avail_out != zbufsize )		1639256	6					
ANR	1639477	Condition	zstr -> avail_out != zbufsize	1631:7:46493:46519	1639256	0	True				
ANR	1639478	EqualityExpression	zstr -> avail_out != zbufsize		1639256	0		!=			
ANR	1639479	PtrMemberAccess	zstr -> avail_out		1639256	0					
ANR	1639480	Identifier	zstr		1639256	0					
ANR	1639481	Identifier	avail_out		1639256	1					
ANR	1639482	Identifier	zbufsize		1639256	1					
ANR	1639483	CompoundStatement		45:36:1409:1409	1639256	1					
ANR	1639484	Statement	dprintf	1632:4:46528:46534	1639256	0	True				
ANR	1639485	Statement	(	1632:11:46535:46535	1639256	1	True				
ANR	1639486	Statement	D_ALWAYS	1632:12:46536:46543	1639256	2	True				
ANR	1639487	Statement	","	1632:20:46544:46544	1639256	3	True				
ANR	1639488	Statement	"""deflate logic error, avail_out (%d) != """	1632:22:46546:46586	1639256	4	True				
ANR	1639489	Statement	"""zbufsize (%d)\\n"""	1633:6:46594:46610	1639256	5	True				
ANR	1639490	Statement	","	1633:23:46611:46611	1639256	6	True				
ANR	1639491	Statement	zstr	1633:25:46613:46616	1639256	7	True				
ANR	1639492	Statement	->	1633:29:46617:46618	1639256	8	True				
ANR	1639493	Statement	avail_out	1633:31:46619:46627	1639256	9	True				
ANR	1639494	Statement	","	1633:40:46628:46628	1639256	10	True				
ANR	1639495	Statement	zbufsize	1633:42:46630:46637	1639256	11	True				
ANR	1639496	Statement	)	1633:50:46638:46638	1639256	12	True				
ANR	1639497	ExpressionStatement		1633:51:46639:46639	1639256	13	True				
ANR	1639498	ExpressionStatement	Suicide ( )	1634:4:46645:46654	1639256	14	True				
ANR	1639499	CallExpression	Suicide ( )		1639256	0					
ANR	1639500	Callee	Suicide		1639256	0					
ANR	1639501	Identifier	Suicide		1639256	0					
ANR	1639502	ArgumentList			1639256	1					
ANR	1639503	ReturnStatement	return len ;	1637:2:46667:46677	1639256	5	True				
ANR	1639504	Identifier	len		1639256	0					
ANR	1639505	ExpressionStatement	"dprintf ( D_ALWAYS , ""write(fd=%d,core_loc=0x%x,len=0x%x)\\n"" , fd , core_loc , len )"	1640:1:46690:46772	1639256	2	True				
ANR	1639506	CallExpression	"dprintf ( D_ALWAYS , ""write(fd=%d,core_loc=0x%x,len=0x%x)\\n"" , fd , core_loc , len )"		1639256	0					
ANR	1639507	Callee	dprintf		1639256	0					
ANR	1639508	Identifier	dprintf		1639256	0					
ANR	1639509	ArgumentList	D_ALWAYS		1639256	1					
ANR	1639510	Argument	D_ALWAYS		1639256	0					
ANR	1639511	Identifier	D_ALWAYS		1639256	0					
ANR	1639512	Argument	"""write(fd=%d,core_loc=0x%x,len=0x%x)\\n"""		1639256	1					
ANR	1639513	PrimaryExpression	"""write(fd=%d,core_loc=0x%x,len=0x%x)\\n"""		1639256	0					
ANR	1639514	Argument	fd		1639256	2					
ANR	1639515	Identifier	fd		1639256	0					
ANR	1639516	Argument	core_loc		1639256	3					
ANR	1639517	Identifier	core_loc		1639256	0					
ANR	1639518	Argument	len		1639256	4					
ANR	1639519	Identifier	len		1639256	0					
ANR	1639520	IdentifierDeclStatement	"int bytes_to_go = len , nbytes ;"	1643:1:46776:46805	1639256	3	True				
ANR	1639521	IdentifierDecl	bytes_to_go = len		1639256	0					
ANR	1639522	IdentifierDeclType	int		1639256	0					
ANR	1639523	Identifier	bytes_to_go		1639256	1					
ANR	1639524	AssignmentExpression	bytes_to_go = len		1639256	2		=			
ANR	1639525	Identifier	len		1639256	0					
ANR	1639526	Identifier	len		1639256	1					
ANR	1639527	IdentifierDecl	nbytes		1639256	1					
ANR	1639528	IdentifierDeclType	int		1639256	0					
ANR	1639529	Identifier	nbytes		1639256	1					
ANR	1639530	IdentifierDeclStatement	char * ptr = ( char * ) core_loc ;	1645:1:46809:46837	1639256	4	True				
ANR	1639531	IdentifierDecl	* ptr = ( char * ) core_loc		1639256	0					
ANR	1639532	IdentifierDeclType	char *		1639256	0					
ANR	1639533	Identifier	ptr		1639256	1					
ANR	1639534	AssignmentExpression	* ptr = ( char * ) core_loc		1639256	2		=			
ANR	1639535	Identifier	ptr		1639256	0					
ANR	1639536	CastExpression	( char * ) core_loc		1639256	1					
ANR	1639537	CastTarget	char *		1639256	0					
ANR	1639538	Identifier	core_loc		1639256	1					
ANR	1639539	WhileStatement	while ( bytes_to_go )		1639256	5					
ANR	1639540	Condition	bytes_to_go	1646:8:46847:46857	1639256	0	True				
ANR	1639541	Identifier	bytes_to_go		1639256	0					
ANR	1639542	CompoundStatement		61:2:1751:1768	1639256	1					
ANR	1639543	IdentifierDeclStatement	size_t write_size ;	1647:2:46864:46881	1639256	0	True				
ANR	1639544	IdentifierDecl	write_size		1639256	0					
ANR	1639545	IdentifierDeclType	size_t		1639256	0					
ANR	1639546	Identifier	write_size		1639256	1					
ANR	1639547	IfStatement	if ( condor_slow_ckpt && bytes_to_go > ( condor_slow_ckpt * KILO ) )		1639256	1					
ANR	1639548	Condition	condor_slow_ckpt && bytes_to_go > ( condor_slow_ckpt * KILO )	1648:6:46889:46945	1639256	0	True				
ANR	1639549	AndExpression	condor_slow_ckpt && bytes_to_go > ( condor_slow_ckpt * KILO )		1639256	0		&&			
ANR	1639550	Identifier	condor_slow_ckpt		1639256	0					
ANR	1639551	RelationalExpression	bytes_to_go > ( condor_slow_ckpt * KILO )		1639256	1		>			
ANR	1639552	Identifier	bytes_to_go		1639256	0					
ANR	1639553	MultiplicativeExpression	condor_slow_ckpt * KILO		1639256	1		*			
ANR	1639554	Identifier	condor_slow_ckpt		1639256	0					
ANR	1639555	Identifier	KILO		1639256	1					
ANR	1639556	CompoundStatement		62:65:1835:1835	1639256	1					
ANR	1639557	ExpressionStatement	write_size = condor_slow_ckpt * KILO	1650:3:46996:47030	1639256	0	True				
ANR	1639558	AssignmentExpression	write_size = condor_slow_ckpt * KILO		1639256	0		=			
ANR	1639559	Identifier	write_size		1639256	0					
ANR	1639560	MultiplicativeExpression	condor_slow_ckpt * KILO		1639256	1		*			
ANR	1639561	Identifier	condor_slow_ckpt		1639256	0					
ANR	1639562	Identifier	KILO		1639256	1					
ANR	1639563	ElseStatement	else		1639256	0					
ANR	1639564	CompoundStatement		65:9:1928:1928	1639256	0					
ANR	1639565	ExpressionStatement	write_size = bytes_to_go	1652:3:47046:47070	1639256	0	True				
ANR	1639566	AssignmentExpression	write_size = bytes_to_go		1639256	0		=			
ANR	1639567	Identifier	write_size		1639256	0					
ANR	1639568	Identifier	bytes_to_go		1639256	1					
ANR	1639569	ExpressionStatement	"nbytes = write ( fd , ( void * ) ptr , write_size )"	1654:2:47078:47119	1639256	2	True				
ANR	1639570	AssignmentExpression	"nbytes = write ( fd , ( void * ) ptr , write_size )"		1639256	0		=			
ANR	1639571	Identifier	nbytes		1639256	0					
ANR	1639572	CallExpression	"write ( fd , ( void * ) ptr , write_size )"		1639256	1					
ANR	1639573	Callee	write		1639256	0					
ANR	1639574	Identifier	write		1639256	0					
ANR	1639575	ArgumentList	fd		1639256	1					
ANR	1639576	Argument	fd		1639256	0					
ANR	1639577	Identifier	fd		1639256	0					
ANR	1639578	Argument	( void * ) ptr		1639256	1					
ANR	1639579	CastExpression	( void * ) ptr		1639256	0					
ANR	1639580	CastTarget	void *		1639256	0					
ANR	1639581	Identifier	ptr		1639256	1					
ANR	1639582	Argument	write_size		1639256	2					
ANR	1639583	Identifier	write_size		1639256	0					
ANR	1639584	ExpressionStatement	"dprintf ( D_CKPT , ""I wrote %d bytes with write...\\n"" , nbytes )"	1655:2:47123:47182	1639256	3	True				
ANR	1639585	CallExpression	"dprintf ( D_CKPT , ""I wrote %d bytes with write...\\n"" , nbytes )"		1639256	0					
ANR	1639586	Callee	dprintf		1639256	0					
ANR	1639587	Identifier	dprintf		1639256	0					
ANR	1639588	ArgumentList	D_CKPT		1639256	1					
ANR	1639589	Argument	D_CKPT		1639256	0					
ANR	1639590	Identifier	D_CKPT		1639256	0					
ANR	1639591	Argument	"""I wrote %d bytes with write...\\n"""		1639256	1					
ANR	1639592	PrimaryExpression	"""I wrote %d bytes with write...\\n"""		1639256	0					
ANR	1639593	Argument	nbytes		1639256	2					
ANR	1639594	Identifier	nbytes		1639256	0					
ANR	1639595	IfStatement	if ( nbytes < 0 )		1639256	4					
ANR	1639596	Condition	nbytes < 0	1656:7:47191:47200	1639256	0	True				
ANR	1639597	RelationalExpression	nbytes < 0		1639256	0		<			
ANR	1639598	Identifier	nbytes		1639256	0					
ANR	1639599	PrimaryExpression	0		1639256	1					
ANR	1639600	CompoundStatement		70:20:2091:2091	1639256	1					
ANR	1639601	ExpressionStatement	"dprintf ( D_ALWAYS , ""in SegMap::Write(): fd = %d, write_size=%d\\n"" , fd , bytes_to_go )"	1657:3:47209:47299	1639256	0	True				
ANR	1639602	CallExpression	"dprintf ( D_ALWAYS , ""in SegMap::Write(): fd = %d, write_size=%d\\n"" , fd , bytes_to_go )"		1639256	0					
ANR	1639603	Callee	dprintf		1639256	0					
ANR	1639604	Identifier	dprintf		1639256	0					
ANR	1639605	ArgumentList	D_ALWAYS		1639256	1					
ANR	1639606	Argument	D_ALWAYS		1639256	0					
ANR	1639607	Identifier	D_ALWAYS		1639256	0					
ANR	1639608	Argument	"""in SegMap::Write(): fd = %d, write_size=%d\\n"""		1639256	1					
ANR	1639609	PrimaryExpression	"""in SegMap::Write(): fd = %d, write_size=%d\\n"""		1639256	0					
ANR	1639610	Argument	fd		1639256	2					
ANR	1639611	Identifier	fd		1639256	0					
ANR	1639612	Argument	bytes_to_go		1639256	3					
ANR	1639613	Identifier	bytes_to_go		1639256	0					
ANR	1639614	ExpressionStatement	"dprintf ( D_ALWAYS , ""errno=%d, core_loc=%p\\n"" , errno , ptr )"	1659:3:47304:47362	1639256	1	True				
ANR	1639615	CallExpression	"dprintf ( D_ALWAYS , ""errno=%d, core_loc=%p\\n"" , errno , ptr )"		1639256	0					
ANR	1639616	Callee	dprintf		1639256	0					
ANR	1639617	Identifier	dprintf		1639256	0					
ANR	1639618	ArgumentList	D_ALWAYS		1639256	1					
ANR	1639619	Argument	D_ALWAYS		1639256	0					
ANR	1639620	Identifier	D_ALWAYS		1639256	0					
ANR	1639621	Argument	"""errno=%d, core_loc=%p\\n"""		1639256	1					
ANR	1639622	PrimaryExpression	"""errno=%d, core_loc=%p\\n"""		1639256	0					
ANR	1639623	Argument	errno		1639256	2					
ANR	1639624	Identifier	errno		1639256	0					
ANR	1639625	Argument	ptr		1639256	3					
ANR	1639626	Identifier	ptr		1639256	0					
ANR	1639627	ReturnStatement	return - 1 ;	1660:3:47367:47376	1639256	2	True				
ANR	1639628	UnaryOperationExpression	- 1		1639256	0					
ANR	1639629	UnaryOperator	-		1639256	0					
ANR	1639630	PrimaryExpression	1		1639256	1					
ANR	1639631	IfStatement	if ( condor_slow_ckpt )		1639256	5					
ANR	1639632	Condition	condor_slow_ckpt	1662:6:47388:47403	1639256	0	True				
ANR	1639633	Identifier	condor_slow_ckpt		1639256	0					
ANR	1639634	ExpressionStatement	sleep ( 1 )	1662:24:47406:47414	1639256	1	True				
ANR	1639635	CallExpression	sleep ( 1 )		1639256	0					
ANR	1639636	Callee	sleep		1639256	0					
ANR	1639637	Identifier	sleep		1639256	0					
ANR	1639638	ArgumentList	1		1639256	1					
ANR	1639639	Argument	1		1639256	0					
ANR	1639640	PrimaryExpression	1		1639256	0					
ANR	1639641	ExpressionStatement	bytes_to_go -= nbytes	1663:2:47418:47439	1639256	6	True				
ANR	1639642	AssignmentExpression	bytes_to_go -= nbytes		1639256	0		-=			
ANR	1639643	Identifier	bytes_to_go		1639256	0					
ANR	1639644	Identifier	nbytes		1639256	1					
ANR	1639645	ExpressionStatement	ptr += nbytes	1664:2:47443:47456	1639256	7	True				
ANR	1639646	AssignmentExpression	ptr += nbytes		1639256	0		+=			
ANR	1639647	Identifier	ptr		1639256	0					
ANR	1639648	Identifier	nbytes		1639256	1					
ANR	1639649	ReturnStatement	return len ;	1666:1:47462:47472	1639256	6	True				
ANR	1639650	Identifier	len		1639256	0					
ANR	1639651	ReturnType	ssize_t		1639256	1					
ANR	1639652	Identifier	SegMap :: Write		1639256	2					
ANR	1639653	ParameterList	"int fd , ssize_t pos"		1639256	3					
ANR	1639654	Parameter	int fd	1586:15:45090:45095	1639256	0	True				
ANR	1639655	ParameterType	int		1639256	0					
ANR	1639656	Identifier	fd		1639256	1					
ANR	1639657	Parameter	ssize_t pos	1586:23:45098:45108	1639256	1	True				
ANR	1639658	ParameterType	ssize_t		1639256	0					
ANR	1639659	Identifier	pos		1639256	1					
ANR	1639660	CFGEntryNode	ENTRY		1639256		True				
ANR	1639661	CFGExitNode	EXIT		1639256		True				
ANR	1639662	Symbol	condor_slow_ckpt		1639256						
ANR	1639663	Symbol	zbuf		1639256						
ANR	1639664	Symbol	KILO		1639256						
ANR	1639665	Symbol	old_avail_in		1639256						
ANR	1639666	Symbol	zstr -> avail_in		1639256						
ANR	1639667	Symbol	* zstr		1639256						
ANR	1639668	Symbol	Z_OK		1639256						
ANR	1639669	Symbol	core_loc		1639256						
ANR	1639670	Symbol	zstr		1639256						
ANR	1639671	Symbol	UINT_MAX		1639256						
ANR	1639672	Symbol	zstr -> avail_out		1639256						
ANR	1639673	Symbol	file_loc		1639256						
ANR	1639674	Symbol	len		1639256						
ANR	1639675	Symbol	pos		1639256						
ANR	1639676	Symbol	zstr -> msg		1639256						
ANR	1639677	Symbol	zbufsize		1639256						
ANR	1639678	Symbol	rval		1639256						
ANR	1639679	Symbol	Z_PARTIAL_FLUSH		1639256						
ANR	1639680	Symbol	write		1639256						
ANR	1639681	Symbol	errno		1639256						
ANR	1639682	Symbol	bytes_to_go		1639256						
ANR	1639683	Symbol	D_CKPT		1639256						
ANR	1639684	Symbol	D_ALWAYS		1639256						
ANR	1639685	Symbol	ptr		1639256						
ANR	1639686	Symbol	nbytes		1639256						
ANR	1639687	Symbol	deflate		1639256						
ANR	1639688	Symbol	write_size		1639256						
ANR	1639689	Symbol	condor_compress_ckpt		1639256						
ANR	1639690	Symbol	zstr -> next_in		1639256						
ANR	1639691	Symbol	fd		1639256						
ANR	1639692	Symbol	zstr -> next_out		1639256						
ANR	1639693	Function	Checkpoint	1682:0:48090:56910							
ANR	1639694	FunctionDef	"Checkpoint (int sig , int code , void * scp)"		1639693	0					
ANR	1639695	CompoundStatement		1684:0:48138:56910	1639693	0					
ANR	1639696	IdentifierDeclStatement	"int scm , p_scm ;"	1685:1:48141:48156	1639693	0	True				
ANR	1639697	IdentifierDecl	scm		1639693	0					
ANR	1639698	IdentifierDeclType	int		1639693	0					
ANR	1639699	Identifier	scm		1639693	1					
ANR	1639700	IdentifierDecl	p_scm		1639693	1					
ANR	1639701	IdentifierDeclType	int		1639693	0					
ANR	1639702	Identifier	p_scm		1639693	1					
ANR	1639703	IdentifierDeclStatement	int do_full_restart = 1 ;	1686:1:48159:48183	1639693	1	True				
ANR	1639704	IdentifierDecl	do_full_restart = 1		1639693	0					
ANR	1639705	IdentifierDeclType	int		1639693	0					
ANR	1639706	Identifier	do_full_restart		1639693	1					
ANR	1639707	AssignmentExpression	do_full_restart = 1		1639693	2		=			
ANR	1639708	Identifier	do_full_restart		1639693	0					
ANR	1639709	PrimaryExpression	1		1639693	1					
ANR	1639710	IdentifierDeclStatement	int write_result ;	1687:1:48222:48239	1639693	2	True				
ANR	1639711	IdentifierDecl	write_result		1639693	0					
ANR	1639712	IdentifierDeclType	int		1639693	0					
ANR	1639713	Identifier	write_result		1639693	1					
ANR	1639714	IdentifierDeclStatement	sigset_t mask ;	1688:1:48242:48255	1639693	3	True				
ANR	1639715	IdentifierDecl	mask		1639693	0					
ANR	1639716	IdentifierDeclType	sigset_t		1639693	0					
ANR	1639717	Identifier	mask		1639693	1					
ANR	1639718	ExpressionStatement	mask = _condor_signals_disable ( )	1691:1:48304:48336	1639693	4	True				
ANR	1639719	AssignmentExpression	mask = _condor_signals_disable ( )		1639693	0		=			
ANR	1639720	Identifier	mask		1639693	0					
ANR	1639721	CallExpression	_condor_signals_disable ( )		1639693	1					
ANR	1639722	Callee	_condor_signals_disable		1639693	0					
ANR	1639723	Identifier	_condor_signals_disable		1639693	0					
ANR	1639724	ArgumentList			1639693	1					
ANR	1639725	IfStatement	if ( _condor_ckpt_is_disabled ( ) )		1639693	5					
ANR	1639726	Condition	_condor_ckpt_is_disabled ( )	1694:5:48416:48441	1639693	0	True				
ANR	1639727	CallExpression	_condor_ckpt_is_disabled ( )		1639693	0					
ANR	1639728	Callee	_condor_ckpt_is_disabled		1639693	0					
ANR	1639729	Identifier	_condor_ckpt_is_disabled		1639693	0					
ANR	1639730	ArgumentList			1639693	1					
ANR	1639731	CompoundStatement		11:35:307:307	1639693	1					
ANR	1639732	ExpressionStatement	_condor_ckpt_defer ( sig )	1695:2:48450:48473	1639693	0	True				
ANR	1639733	CallExpression	_condor_ckpt_defer ( sig )		1639693	0					
ANR	1639734	Callee	_condor_ckpt_defer		1639693	0					
ANR	1639735	Identifier	_condor_ckpt_defer		1639693	0					
ANR	1639736	ArgumentList	sig		1639693	1					
ANR	1639737	Argument	sig		1639693	0					
ANR	1639738	Identifier	sig		1639693	0					
ANR	1639739	ExpressionStatement	_condor_signals_enable ( mask )	1696:2:48477:48505	1639693	1	True				
ANR	1639740	CallExpression	_condor_signals_enable ( mask )		1639693	0					
ANR	1639741	Callee	_condor_signals_enable		1639693	0					
ANR	1639742	Identifier	_condor_signals_enable		1639693	0					
ANR	1639743	ArgumentList	mask		1639693	1					
ANR	1639744	Argument	mask		1639693	0					
ANR	1639745	Identifier	mask		1639693	0					
ANR	1639746	ReturnStatement	return ;	1697:2:48509:48515	1639693	2	True				
ANR	1639747	IfStatement	if ( InRestart )		1639693	6					
ANR	1639748	Condition	InRestart	1700:5:48526:48534	1639693	0	True				
ANR	1639749	Identifier	InRestart		1639693	0					
ANR	1639750	CompoundStatement		17:17:399:399	1639693	1					
ANR	1639751	IfStatement	if ( sig == SIGTSTP )		1639693	0					
ANR	1639752	Condition	sig == SIGTSTP	1701:7:48547:48560	1639693	0	True				
ANR	1639753	EqualityExpression	sig == SIGTSTP		1639693	0		==			
ANR	1639754	Identifier	sig		1639693	0					
ANR	1639755	Identifier	SIGTSTP		1639693	1					
ANR	1639756	CompoundStatement		18:24:425:425	1639693	1					
ANR	1639757	ExpressionStatement	Suicide ( )	1702:3:48569:48578	1639693	0	True				
ANR	1639758	CallExpression	Suicide ( )		1639693	0					
ANR	1639759	Callee	Suicide		1639693	0					
ANR	1639760	Identifier	Suicide		1639693	0					
ANR	1639761	ArgumentList			1639693	1					
ANR	1639762	ElseStatement	else		1639693	0					
ANR	1639763	CompoundStatement		20:9:498:498	1639693	0					
ANR	1639764	ExpressionStatement	_condor_signals_enable ( mask )	1704:3:48642:48670	1639693	0	True				
ANR	1639765	CallExpression	_condor_signals_enable ( mask )		1639693	0					
ANR	1639766	Callee	_condor_signals_enable		1639693	0					
ANR	1639767	Identifier	_condor_signals_enable		1639693	0					
ANR	1639768	ArgumentList	mask		1639693	1					
ANR	1639769	Argument	mask		1639693	0					
ANR	1639770	Identifier	mask		1639693	0					
ANR	1639771	ReturnStatement	return ;	1705:3:48675:48681	1639693	1	True				
ANR	1639772	ElseStatement	else		1639693	0					
ANR	1639773	CompoundStatement		24:8:605:605	1639693	0					
ANR	1639774	ExpressionStatement	InRestart = TRUE	1708:2:48748:48764	1639693	0	True				
ANR	1639775	AssignmentExpression	InRestart = TRUE		1639693	0		=			
ANR	1639776	Identifier	InRestart		1639693	0					
ANR	1639777	Identifier	TRUE		1639693	1					
ANR	1639778	ExpressionStatement	check_sig = sig	1711:1:48771:48786	1639693	7	True				
ANR	1639779	AssignmentExpression	check_sig = sig		1639693	0		=			
ANR	1639780	Identifier	check_sig		1639693	0					
ANR	1639781	Identifier	sig		1639693	1					
ANR	1639782	IfStatement	if ( MyImage . GetMode ( ) == REMOTE )		1639693	8					
ANR	1639783	Condition	MyImage . GetMode ( ) == REMOTE	1713:5:48794:48820	1639693	0	True				
ANR	1639784	EqualityExpression	MyImage . GetMode ( ) == REMOTE		1639693	0		==			
ANR	1639785	CallExpression	MyImage . GetMode ( )		1639693	0					
ANR	1639786	Callee	MyImage . GetMode		1639693	0					
ANR	1639787	MemberAccess	MyImage . GetMode		1639693	0					
ANR	1639788	Identifier	MyImage		1639693	0					
ANR	1639789	Identifier	GetMode		1639693	1					
ANR	1639790	ArgumentList			1639693	1					
ANR	1639791	Identifier	REMOTE		1639693	1					
ANR	1639792	CompoundStatement		42:2:1258:1273	1639693	1					
ANR	1639793	ExpressionStatement	scm = SetSyscalls ( SYS_REMOTE | SYS_UNMAPPED )	1714:2:48828:48874	1639693	0	True				
ANR	1639794	AssignmentExpression	scm = SetSyscalls ( SYS_REMOTE | SYS_UNMAPPED )		1639693	0		=			
ANR	1639795	Identifier	scm		1639693	0					
ANR	1639796	CallExpression	SetSyscalls ( SYS_REMOTE | SYS_UNMAPPED )		1639693	1					
ANR	1639797	Callee	SetSyscalls		1639693	0					
ANR	1639798	Identifier	SetSyscalls		1639693	0					
ANR	1639799	ArgumentList	SYS_REMOTE | SYS_UNMAPPED		1639693	1					
ANR	1639800	Argument	SYS_REMOTE | SYS_UNMAPPED		1639693	0					
ANR	1639801	InclusiveOrExpression	SYS_REMOTE | SYS_UNMAPPED		1639693	0		|			
ANR	1639802	Identifier	SYS_REMOTE		1639693	0					
ANR	1639803	Identifier	SYS_UNMAPPED		1639693	1					
ANR	1639804	IdentifierDeclStatement	struct tms posix_usage ;	1723:2:49344:49366	1639693	1	True				
ANR	1639805	IdentifierDecl	posix_usage		1639693	0					
ANR	1639806	IdentifierDeclType	struct tms		1639693	0					
ANR	1639807	Identifier	posix_usage		1639693	1					
ANR	1639808	IdentifierDeclStatement	struct rusage bsd_usage ;	1724:2:49370:49393	1639693	2	True				
ANR	1639809	IdentifierDecl	bsd_usage		1639693	0					
ANR	1639810	IdentifierDeclType	struct rusage		1639693	0					
ANR	1639811	Identifier	bsd_usage		1639693	1					
ANR	1639812	IdentifierDeclStatement	long clock_tick ;	1725:2:49397:49412	1639693	3	True				
ANR	1639813	IdentifierDecl	clock_tick		1639693	0					
ANR	1639814	IdentifierDeclType	long		1639693	0					
ANR	1639815	Identifier	clock_tick		1639693	1					
ANR	1639816	ExpressionStatement	p_scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )	1727:2:49417:49464	1639693	4	True				
ANR	1639817	AssignmentExpression	p_scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		1639693	0		=			
ANR	1639818	Identifier	p_scm		1639693	0					
ANR	1639819	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		1639693	1					
ANR	1639820	Callee	SetSyscalls		1639693	0					
ANR	1639821	Identifier	SetSyscalls		1639693	0					
ANR	1639822	ArgumentList	SYS_LOCAL | SYS_UNMAPPED		1639693	1					
ANR	1639823	Argument	SYS_LOCAL | SYS_UNMAPPED		1639693	0					
ANR	1639824	InclusiveOrExpression	SYS_LOCAL | SYS_UNMAPPED		1639693	0		|			
ANR	1639825	Identifier	SYS_LOCAL		1639693	0					
ANR	1639826	Identifier	SYS_UNMAPPED		1639693	1					
ANR	1639827	ExpressionStatement	"memset ( & bsd_usage , 0 , sizeof ( struct rusage ) )"	1728:2:49468:49510	1639693	5	True				
ANR	1639828	CallExpression	"memset ( & bsd_usage , 0 , sizeof ( struct rusage ) )"		1639693	0					
ANR	1639829	Callee	memset		1639693	0					
ANR	1639830	Identifier	memset		1639693	0					
ANR	1639831	ArgumentList	& bsd_usage		1639693	1					
ANR	1639832	Argument	& bsd_usage		1639693	0					
ANR	1639833	UnaryOperationExpression	& bsd_usage		1639693	0					
ANR	1639834	UnaryOperator	&		1639693	0					
ANR	1639835	Identifier	bsd_usage		1639693	1					
ANR	1639836	Argument	0		1639693	1					
ANR	1639837	PrimaryExpression	0		1639693	0					
ANR	1639838	Argument	sizeof ( struct rusage )		1639693	2					
ANR	1639839	SizeofExpression	sizeof ( struct rusage )		1639693	0					
ANR	1639840	Sizeof	sizeof		1639693	0					
ANR	1639841	SizeofOperand	struct rusage		1639693	1					
ANR	1639842	ExpressionStatement	times ( & posix_usage )	1729:2:49514:49535	1639693	6	True				
ANR	1639843	CallExpression	times ( & posix_usage )		1639693	0					
ANR	1639844	Callee	times		1639693	0					
ANR	1639845	Identifier	times		1639693	0					
ANR	1639846	ArgumentList	& posix_usage		1639693	1					
ANR	1639847	Argument	& posix_usage		1639693	0					
ANR	1639848	UnaryOperationExpression	& posix_usage		1639693	0					
ANR	1639849	UnaryOperator	&		1639693	0					
ANR	1639850	Identifier	posix_usage		1639693	1					
ANR	1639851	ExpressionStatement	clock_tick = sysconf ( _SC_CLK_TCK )	1730:2:49539:49574	1639693	7	True				
ANR	1639852	AssignmentExpression	clock_tick = sysconf ( _SC_CLK_TCK )		1639693	0		=			
ANR	1639853	Identifier	clock_tick		1639693	0					
ANR	1639854	CallExpression	sysconf ( _SC_CLK_TCK )		1639693	1					
ANR	1639855	Callee	sysconf		1639693	0					
ANR	1639856	Identifier	sysconf		1639693	0					
ANR	1639857	ArgumentList	_SC_CLK_TCK		1639693	1					
ANR	1639858	Argument	_SC_CLK_TCK		1639693	0					
ANR	1639859	Identifier	_SC_CLK_TCK		1639693	0					
ANR	1639860	ExpressionStatement	bsd_usage . ru_utime . tv_sec = posix_usage . tms_utime / clock_tick	1731:2:49578:49640	1639693	8	True				
ANR	1639861	AssignmentExpression	bsd_usage . ru_utime . tv_sec = posix_usage . tms_utime / clock_tick		1639693	0		=			
ANR	1639862	MemberAccess	bsd_usage . ru_utime . tv_sec		1639693	0					
ANR	1639863	MemberAccess	bsd_usage . ru_utime		1639693	0					
ANR	1639864	Identifier	bsd_usage		1639693	0					
ANR	1639865	Identifier	ru_utime		1639693	1					
ANR	1639866	Identifier	tv_sec		1639693	1					
ANR	1639867	MultiplicativeExpression	posix_usage . tms_utime / clock_tick		1639693	1		/			
ANR	1639868	MemberAccess	posix_usage . tms_utime		1639693	0					
ANR	1639869	Identifier	posix_usage		1639693	0					
ANR	1639870	Identifier	tms_utime		1639693	1					
ANR	1639871	Identifier	clock_tick		1639693	1					
ANR	1639872	ExpressionStatement	bsd_usage . ru_utime . tv_usec = posix_usage . tms_utime % clock_tick	1732:2:49644:49707	1639693	9	True				
ANR	1639873	AssignmentExpression	bsd_usage . ru_utime . tv_usec = posix_usage . tms_utime % clock_tick		1639693	0		=			
ANR	1639874	MemberAccess	bsd_usage . ru_utime . tv_usec		1639693	0					
ANR	1639875	MemberAccess	bsd_usage . ru_utime		1639693	0					
ANR	1639876	Identifier	bsd_usage		1639693	0					
ANR	1639877	Identifier	ru_utime		1639693	1					
ANR	1639878	Identifier	tv_usec		1639693	1					
ANR	1639879	MultiplicativeExpression	posix_usage . tms_utime % clock_tick		1639693	1		%			
ANR	1639880	MemberAccess	posix_usage . tms_utime		1639693	0					
ANR	1639881	Identifier	posix_usage		1639693	0					
ANR	1639882	Identifier	tms_utime		1639693	1					
ANR	1639883	Identifier	clock_tick		1639693	1					
ANR	1639884	ExpressionStatement	( bsd_usage . ru_utime . tv_usec ) *= 1000000 / clock_tick	1733:2:49711:49763	1639693	10	True				
ANR	1639885	AssignmentExpression	( bsd_usage . ru_utime . tv_usec ) *= 1000000 / clock_tick		1639693	0		*=			
ANR	1639886	MemberAccess	bsd_usage . ru_utime . tv_usec		1639693	0					
ANR	1639887	MemberAccess	bsd_usage . ru_utime		1639693	0					
ANR	1639888	Identifier	bsd_usage		1639693	0					
ANR	1639889	Identifier	ru_utime		1639693	1					
ANR	1639890	Identifier	tv_usec		1639693	1					
ANR	1639891	MultiplicativeExpression	1000000 / clock_tick		1639693	1		/			
ANR	1639892	PrimaryExpression	1000000		1639693	0					
ANR	1639893	Identifier	clock_tick		1639693	1					
ANR	1639894	ExpressionStatement	bsd_usage . ru_stime . tv_sec = posix_usage . tms_stime / clock_tick	1734:2:49767:49829	1639693	11	True				
ANR	1639895	AssignmentExpression	bsd_usage . ru_stime . tv_sec = posix_usage . tms_stime / clock_tick		1639693	0		=			
ANR	1639896	MemberAccess	bsd_usage . ru_stime . tv_sec		1639693	0					
ANR	1639897	MemberAccess	bsd_usage . ru_stime		1639693	0					
ANR	1639898	Identifier	bsd_usage		1639693	0					
ANR	1639899	Identifier	ru_stime		1639693	1					
ANR	1639900	Identifier	tv_sec		1639693	1					
ANR	1639901	MultiplicativeExpression	posix_usage . tms_stime / clock_tick		1639693	1		/			
ANR	1639902	MemberAccess	posix_usage . tms_stime		1639693	0					
ANR	1639903	Identifier	posix_usage		1639693	0					
ANR	1639904	Identifier	tms_stime		1639693	1					
ANR	1639905	Identifier	clock_tick		1639693	1					
ANR	1639906	ExpressionStatement	bsd_usage . ru_stime . tv_usec = posix_usage . tms_stime % clock_tick	1735:2:49833:49896	1639693	12	True				
ANR	1639907	AssignmentExpression	bsd_usage . ru_stime . tv_usec = posix_usage . tms_stime % clock_tick		1639693	0		=			
ANR	1639908	MemberAccess	bsd_usage . ru_stime . tv_usec		1639693	0					
ANR	1639909	MemberAccess	bsd_usage . ru_stime		1639693	0					
ANR	1639910	Identifier	bsd_usage		1639693	0					
ANR	1639911	Identifier	ru_stime		1639693	1					
ANR	1639912	Identifier	tv_usec		1639693	1					
ANR	1639913	MultiplicativeExpression	posix_usage . tms_stime % clock_tick		1639693	1		%			
ANR	1639914	MemberAccess	posix_usage . tms_stime		1639693	0					
ANR	1639915	Identifier	posix_usage		1639693	0					
ANR	1639916	Identifier	tms_stime		1639693	1					
ANR	1639917	Identifier	clock_tick		1639693	1					
ANR	1639918	ExpressionStatement	( bsd_usage . ru_stime . tv_usec ) *= 1000000 / clock_tick	1736:2:49900:49952	1639693	13	True				
ANR	1639919	AssignmentExpression	( bsd_usage . ru_stime . tv_usec ) *= 1000000 / clock_tick		1639693	0		*=			
ANR	1639920	MemberAccess	bsd_usage . ru_stime . tv_usec		1639693	0					
ANR	1639921	MemberAccess	bsd_usage . ru_stime		1639693	0					
ANR	1639922	Identifier	bsd_usage		1639693	0					
ANR	1639923	Identifier	ru_stime		1639693	1					
ANR	1639924	Identifier	tv_usec		1639693	1					
ANR	1639925	MultiplicativeExpression	1000000 / clock_tick		1639693	1		/			
ANR	1639926	PrimaryExpression	1000000		1639693	0					
ANR	1639927	Identifier	clock_tick		1639693	1					
ANR	1639928	ExpressionStatement	SetSyscalls ( SYS_REMOTE | SYS_UNMAPPED )	1737:2:49956:49996	1639693	14	True				
ANR	1639929	CallExpression	SetSyscalls ( SYS_REMOTE | SYS_UNMAPPED )		1639693	0					
ANR	1639930	Callee	SetSyscalls		1639693	0					
ANR	1639931	Identifier	SetSyscalls		1639693	0					
ANR	1639932	ArgumentList	SYS_REMOTE | SYS_UNMAPPED		1639693	1					
ANR	1639933	Argument	SYS_REMOTE | SYS_UNMAPPED		1639693	0					
ANR	1639934	InclusiveOrExpression	SYS_REMOTE | SYS_UNMAPPED		1639693	0		|			
ANR	1639935	Identifier	SYS_REMOTE		1639693	0					
ANR	1639936	Identifier	SYS_UNMAPPED		1639693	1					
ANR	1639937	ExpressionStatement	( void ) REMOTE_CONDOR_send_rusage ( & bsd_usage )	1738:2:50000:50045	1639693	15	True				
ANR	1639938	CastExpression	( void ) REMOTE_CONDOR_send_rusage ( & bsd_usage )		1639693	0					
ANR	1639939	CastTarget	void		1639693	0					
ANR	1639940	CallExpression	REMOTE_CONDOR_send_rusage ( & bsd_usage )		1639693	1					
ANR	1639941	Callee	REMOTE_CONDOR_send_rusage		1639693	0					
ANR	1639942	Identifier	REMOTE_CONDOR_send_rusage		1639693	0					
ANR	1639943	ArgumentList	& bsd_usage		1639693	1					
ANR	1639944	Argument	& bsd_usage		1639693	0					
ANR	1639945	UnaryOperationExpression	& bsd_usage		1639693	0					
ANR	1639946	UnaryOperator	&		1639693	0					
ANR	1639947	Identifier	bsd_usage		1639693	1					
ANR	1639948	ExpressionStatement	SetSyscalls ( p_scm )	1739:2:50049:50069	1639693	16	True				
ANR	1639949	CallExpression	SetSyscalls ( p_scm )		1639693	0					
ANR	1639950	Callee	SetSyscalls		1639693	0					
ANR	1639951	Identifier	SetSyscalls		1639693	0					
ANR	1639952	ArgumentList	p_scm		1639693	1					
ANR	1639953	Argument	p_scm		1639693	0					
ANR	1639954	Identifier	p_scm		1639693	0					
ANR	1639955	ElseStatement	else		1639693	0					
ANR	1639956	CompoundStatement		58:8:1941:1941	1639693	0					
ANR	1639957	ExpressionStatement	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )	1742:2:50084:50129	1639693	0	True				
ANR	1639958	AssignmentExpression	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		1639693	0		=			
ANR	1639959	Identifier	scm		1639693	0					
ANR	1639960	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		1639693	1					
ANR	1639961	Callee	SetSyscalls		1639693	0					
ANR	1639962	Identifier	SetSyscalls		1639693	0					
ANR	1639963	ArgumentList	SYS_LOCAL | SYS_UNMAPPED		1639693	1					
ANR	1639964	Argument	SYS_LOCAL | SYS_UNMAPPED		1639693	0					
ANR	1639965	InclusiveOrExpression	SYS_LOCAL | SYS_UNMAPPED		1639693	0		|			
ANR	1639966	Identifier	SYS_LOCAL		1639693	0					
ANR	1639967	Identifier	SYS_UNMAPPED		1639693	1					
ANR	1639968	IfStatement	if ( sig == SIGTSTP )		1639693	9					
ANR	1639969	Condition	sig == SIGTSTP	1745:6:50141:50154	1639693	0	True				
ANR	1639970	EqualityExpression	sig == SIGTSTP		1639693	0		==			
ANR	1639971	Identifier	sig		1639693	0					
ANR	1639972	Identifier	SIGTSTP		1639693	1					
ANR	1639973	CompoundStatement		62:23:2019:2019	1639693	1					
ANR	1639974	ExpressionStatement	"dprintf ( D_ALWAYS , ""Got SIGTSTP\\n"" )"	1746:2:50162:50198	1639693	0	True				
ANR	1639975	CallExpression	"dprintf ( D_ALWAYS , ""Got SIGTSTP\\n"" )"		1639693	0					
ANR	1639976	Callee	dprintf		1639693	0					
ANR	1639977	Identifier	dprintf		1639693	0					
ANR	1639978	ArgumentList	D_ALWAYS		1639693	1					
ANR	1639979	Argument	D_ALWAYS		1639693	0					
ANR	1639980	Identifier	D_ALWAYS		1639693	0					
ANR	1639981	Argument	"""Got SIGTSTP\\n"""		1639693	1					
ANR	1639982	PrimaryExpression	"""Got SIGTSTP\\n"""		1639693	0					
ANR	1639983	ElseStatement	else		1639693	0					
ANR	1639984	CompoundStatement		64:8:2069:2069	1639693	0					
ANR	1639985	ExpressionStatement	"dprintf ( D_ALWAYS , ""Got SIGUSR2\\n"" )"	1748:2:50212:50248	1639693	0	True				
ANR	1639986	CallExpression	"dprintf ( D_ALWAYS , ""Got SIGUSR2\\n"" )"		1639693	0					
ANR	1639987	Callee	dprintf		1639693	0					
ANR	1639988	Identifier	dprintf		1639693	0					
ANR	1639989	ArgumentList	D_ALWAYS		1639693	1					
ANR	1639990	Argument	D_ALWAYS		1639693	0					
ANR	1639991	Identifier	D_ALWAYS		1639693	0					
ANR	1639992	Argument	"""Got SIGUSR2\\n"""		1639693	1					
ANR	1639993	PrimaryExpression	"""Got SIGUSR2\\n"""		1639693	0					
ANR	1639994	Statement	undef	1751:1:50255:50259	1639693	10	True				
ANR	1639995	Statement	WAIT_FOR_DEBUGGER	1751:7:50261:50277	1639693	11	True				
ANR	1639996	IdentifierDeclStatement	int wait_up = 1 ;	1753:1:50311:50327	1639693	12	True				
ANR	1639997	IdentifierDecl	wait_up = 1		1639693	0					
ANR	1639998	IdentifierDeclType	int		1639693	0					
ANR	1639999	Identifier	wait_up		1639693	1					
ANR	1640000	AssignmentExpression	wait_up = 1		1639693	2		=			
ANR	1640001	Identifier	wait_up		1639693	0					
ANR	1640002	PrimaryExpression	1		1639693	1					
ANR	1640003	WhileStatement	while ( wait_up )		1639693	13					
ANR	1640004	Condition	wait_up	1754:8:50337:50343	1639693	0	True				
ANR	1640005	Identifier	wait_up		1639693	0					
ANR	1640006	ExpressionStatement		1755:2:50349:50349	1639693	1	True				
ANR	1640007	ExpressionStatement	_condor_save_sigstates ( )	1759:2:50432:50456	1639693	14	True				
ANR	1640008	CallExpression	_condor_save_sigstates ( )		1639693	0					
ANR	1640009	Callee	_condor_save_sigstates		1639693	0					
ANR	1640010	Identifier	_condor_save_sigstates		1639693	0					
ANR	1640011	ArgumentList			1639693	1					
ANR	1640012	ExpressionStatement	"dprintf ( D_ALWAYS , ""Saved signal state.\\n"" )"	1760:2:50460:50503	1639693	15	True				
ANR	1640013	CallExpression	"dprintf ( D_ALWAYS , ""Saved signal state.\\n"" )"		1639693	0					
ANR	1640014	Callee	dprintf		1639693	0					
ANR	1640015	Identifier	dprintf		1639693	0					
ANR	1640016	ArgumentList	D_ALWAYS		1639693	1					
ANR	1640017	Argument	D_ALWAYS		1639693	0					
ANR	1640018	Identifier	D_ALWAYS		1639693	0					
ANR	1640019	Argument	"""Saved signal state.\\n"""		1639693	1					
ANR	1640020	PrimaryExpression	"""Saved signal state.\\n"""		1639693	0					
ANR	1640021	ExpressionStatement	"dprintf ( D_ALWAYS , ""About to save file state\\n"" )"	1762:2:50508:50556	1639693	16	True				
ANR	1640022	CallExpression	"dprintf ( D_ALWAYS , ""About to save file state\\n"" )"		1639693	0					
ANR	1640023	Callee	dprintf		1639693	0					
ANR	1640024	Identifier	dprintf		1639693	0					
ANR	1640025	ArgumentList	D_ALWAYS		1639693	1					
ANR	1640026	Argument	D_ALWAYS		1639693	0					
ANR	1640027	Identifier	D_ALWAYS		1639693	0					
ANR	1640028	Argument	"""About to save file state\\n"""		1639693	1					
ANR	1640029	PrimaryExpression	"""About to save file state\\n"""		1639693	0					
ANR	1640030	ExpressionStatement	_condor_file_table_checkpoint ( )	1763:2:50560:50591	1639693	17	True				
ANR	1640031	CallExpression	_condor_file_table_checkpoint ( )		1639693	0					
ANR	1640032	Callee	_condor_file_table_checkpoint		1639693	0					
ANR	1640033	Identifier	_condor_file_table_checkpoint		1639693	0					
ANR	1640034	ArgumentList			1639693	1					
ANR	1640035	ExpressionStatement	"dprintf ( D_ALWAYS , ""Done saving file state\\n"" )"	1764:2:50595:50641	1639693	18	True				
ANR	1640036	CallExpression	"dprintf ( D_ALWAYS , ""Done saving file state\\n"" )"		1639693	0					
ANR	1640037	Callee	dprintf		1639693	0					
ANR	1640038	Identifier	dprintf		1639693	0					
ANR	1640039	ArgumentList	D_ALWAYS		1639693	1					
ANR	1640040	Argument	D_ALWAYS		1639693	0					
ANR	1640041	Identifier	D_ALWAYS		1639693	0					
ANR	1640042	Argument	"""Done saving file state\\n"""		1639693	1					
ANR	1640043	PrimaryExpression	"""Done saving file state\\n"""		1639693	0					
ANR	1640044	IfStatement	if ( SETJMP ( Env ) == 0 )		1639693	19					
ANR	1640045	Condition	SETJMP ( Env ) == 0	1766:5:50649:50664	1639693	0	True				
ANR	1640046	EqualityExpression	SETJMP ( Env ) == 0		1639693	0		==			
ANR	1640047	CallExpression	SETJMP ( Env )		1639693	0					
ANR	1640048	Callee	SETJMP		1639693	0					
ANR	1640049	Identifier	SETJMP		1639693	0					
ANR	1640050	ArgumentList	Env		1639693	1					
ANR	1640051	Argument	Env		1639693	0					
ANR	1640052	Identifier	Env		1639693	0					
ANR	1640053	PrimaryExpression	0		1639693	1					
ANR	1640054	CompoundStatement		83:24:2529:2529	1639693	1					
ANR	1640055	ExpressionStatement	"dprintf ( D_ALWAYS , ""About to update MyImage\\n"" )"	1778:2:51300:51348	1639693	0	True				
ANR	1640056	CallExpression	"dprintf ( D_ALWAYS , ""About to update MyImage\\n"" )"		1639693	0					
ANR	1640057	Callee	dprintf		1639693	0					
ANR	1640058	Identifier	dprintf		1639693	0					
ANR	1640059	ArgumentList	D_ALWAYS		1639693	1					
ANR	1640060	Argument	D_ALWAYS		1639693	0					
ANR	1640061	Identifier	D_ALWAYS		1639693	0					
ANR	1640062	Argument	"""About to update MyImage\\n"""		1639693	1					
ANR	1640063	PrimaryExpression	"""About to update MyImage\\n"""		1639693	0					
ANR	1640064	ExpressionStatement	MyImage . Save ( )	1779:2:51352:51366	1639693	1	True				
ANR	1640065	CallExpression	MyImage . Save ( )		1639693	0					
ANR	1640066	Callee	MyImage . Save		1639693	0					
ANR	1640067	MemberAccess	MyImage . Save		1639693	0					
ANR	1640068	Identifier	MyImage		1639693	0					
ANR	1640069	Identifier	Save		1639693	1					
ANR	1640070	ArgumentList			1639693	1					
ANR	1640071	IfStatement	if ( MyImage . GetMode ( ) == REMOTE )		1639693	2					
ANR	1640072	Condition	MyImage . GetMode ( ) == REMOTE	1786:6:51656:51682	1639693	0	True				
ANR	1640073	EqualityExpression	MyImage . GetMode ( ) == REMOTE		1639693	0		==			
ANR	1640074	CallExpression	MyImage . GetMode ( )		1639693	0					
ANR	1640075	Callee	MyImage . GetMode		1639693	0					
ANR	1640076	MemberAccess	MyImage . GetMode		1639693	0					
ANR	1640077	Identifier	MyImage		1639693	0					
ANR	1640078	Identifier	GetMode		1639693	1					
ANR	1640079	ArgumentList			1639693	1					
ANR	1640080	Identifier	REMOTE		1639693	1					
ANR	1640081	CompoundStatement		113:3:3902:3937	1639693	1					
ANR	1640082	ExpressionStatement	report_image_size ( ( MyImage . GetLen ( ) + KILO - 1 ) / KILO )	1788:3:51737:51794	1639693	0	True				
ANR	1640083	CallExpression	report_image_size ( ( MyImage . GetLen ( ) + KILO - 1 ) / KILO )		1639693	0					
ANR	1640084	Callee	report_image_size		1639693	0					
ANR	1640085	Identifier	report_image_size		1639693	0					
ANR	1640086	ArgumentList	( MyImage . GetLen ( ) + KILO - 1 ) / KILO		1639693	1					
ANR	1640087	Argument	( MyImage . GetLen ( ) + KILO - 1 ) / KILO		1639693	0					
ANR	1640088	MultiplicativeExpression	( MyImage . GetLen ( ) + KILO - 1 ) / KILO		1639693	0		/			
ANR	1640089	AdditiveExpression	MyImage . GetLen ( ) + KILO - 1		1639693	0		+			
ANR	1640090	CallExpression	MyImage . GetLen ( )		1639693	0					
ANR	1640091	Callee	MyImage . GetLen		1639693	0					
ANR	1640092	MemberAccess	MyImage . GetLen		1639693	0					
ANR	1640093	Identifier	MyImage		1639693	0					
ANR	1640094	Identifier	GetLen		1639693	1					
ANR	1640095	ArgumentList			1639693	1					
ANR	1640096	AdditiveExpression	KILO - 1		1639693	1		-			
ANR	1640097	Identifier	KILO		1639693	0					
ANR	1640098	PrimaryExpression	1		1639693	1					
ANR	1640099	Identifier	KILO		1639693	1					
ANR	1640100	IdentifierDeclStatement	int mode = get_ckpt_mode ( check_sig ) ;	1796:3:52041:52076	1639693	1	True				
ANR	1640101	IdentifierDecl	mode = get_ckpt_mode ( check_sig )		1639693	0					
ANR	1640102	IdentifierDeclType	int		1639693	0					
ANR	1640103	Identifier	mode		1639693	1					
ANR	1640104	AssignmentExpression	mode = get_ckpt_mode ( check_sig )		1639693	2		=			
ANR	1640105	Identifier	mode		1639693	0					
ANR	1640106	CallExpression	get_ckpt_mode ( check_sig )		1639693	1					
ANR	1640107	Callee	get_ckpt_mode		1639693	0					
ANR	1640108	Identifier	get_ckpt_mode		1639693	0					
ANR	1640109	ArgumentList	check_sig		1639693	1					
ANR	1640110	Argument	check_sig		1639693	0					
ANR	1640111	Identifier	check_sig		1639693	0					
ANR	1640112	IfStatement	if ( mode > 0 )		1639693	2					
ANR	1640113	Condition	mode > 0	1797:7:52085:52092	1639693	0	True				
ANR	1640114	RelationalExpression	mode > 0		1639693	0		>			
ANR	1640115	Identifier	mode		1639693	0					
ANR	1640116	PrimaryExpression	0		1639693	1					
ANR	1640117	CompoundStatement		114:17:3956:3956	1639693	1					
ANR	1640118	ExpressionStatement	condor_compress_ckpt = ( mode & CKPT_MODE_USE_COMPRESSION ) ? 1 : 0	1798:4:52101:52160	1639693	0	True				
ANR	1640119	AssignmentExpression	condor_compress_ckpt = ( mode & CKPT_MODE_USE_COMPRESSION ) ? 1 : 0		1639693	0		=			
ANR	1640120	Identifier	condor_compress_ckpt		1639693	0					
ANR	1640121	ConditionalExpression	( mode & CKPT_MODE_USE_COMPRESSION ) ? 1 : 0		1639693	1					
ANR	1640122	Condition	mode & CKPT_MODE_USE_COMPRESSION		1639693	0					
ANR	1640123	BitAndExpression	mode & CKPT_MODE_USE_COMPRESSION		1639693	0		&			
ANR	1640124	Identifier	mode		1639693	0					
ANR	1640125	Identifier	CKPT_MODE_USE_COMPRESSION		1639693	1					
ANR	1640126	PrimaryExpression	1		1639693	1					
ANR	1640127	PrimaryExpression	0		1639693	2					
ANR	1640128	IfStatement	if ( mode & CKPT_MODE_SLOW )		1639693	1					
ANR	1640129	Condition	mode & CKPT_MODE_SLOW	1799:8:52170:52188	1639693	0	True				
ANR	1640130	BitAndExpression	mode & CKPT_MODE_SLOW		1639693	0		&			
ANR	1640131	Identifier	mode		1639693	0					
ANR	1640132	Identifier	CKPT_MODE_SLOW		1639693	1					
ANR	1640133	CompoundStatement		116:29:4052:4052	1639693	1					
ANR	1640134	ExpressionStatement	condor_slow_ckpt = get_ckpt_speed ( )	1800:5:52198:52233	1639693	0	True				
ANR	1640135	AssignmentExpression	condor_slow_ckpt = get_ckpt_speed ( )		1639693	0		=			
ANR	1640136	Identifier	condor_slow_ckpt		1639693	0					
ANR	1640137	CallExpression	get_ckpt_speed ( )		1639693	1					
ANR	1640138	Callee	get_ckpt_speed		1639693	0					
ANR	1640139	Identifier	get_ckpt_speed		1639693	0					
ANR	1640140	ArgumentList			1639693	1					
ANR	1640141	ExpressionStatement	"dprintf ( D_ALWAYS , ""Checkpointing at %d KB/s.\\n"" , condor_slow_ckpt )"	1801:5:52240:52313	1639693	1	True				
ANR	1640142	CallExpression	"dprintf ( D_ALWAYS , ""Checkpointing at %d KB/s.\\n"" , condor_slow_ckpt )"		1639693	0					
ANR	1640143	Callee	dprintf		1639693	0					
ANR	1640144	Identifier	dprintf		1639693	0					
ANR	1640145	ArgumentList	D_ALWAYS		1639693	1					
ANR	1640146	Argument	D_ALWAYS		1639693	0					
ANR	1640147	Identifier	D_ALWAYS		1639693	0					
ANR	1640148	Argument	"""Checkpointing at %d KB/s.\\n"""		1639693	1					
ANR	1640149	PrimaryExpression	"""Checkpointing at %d KB/s.\\n"""		1639693	0					
ANR	1640150	Argument	condor_slow_ckpt		1639693	2					
ANR	1640151	Identifier	condor_slow_ckpt		1639693	0					
ANR	1640152	ElseStatement	else		1639693	0					
ANR	1640153	CompoundStatement		120:11:4187:4187	1639693	0					
ANR	1640154	ExpressionStatement	condor_slow_ckpt = 0	1804:5:52333:52353	1639693	0	True				
ANR	1640155	AssignmentExpression	condor_slow_ckpt = 0		1639693	0		=			
ANR	1640156	Identifier	condor_slow_ckpt		1639693	0					
ANR	1640157	PrimaryExpression	0		1639693	1					
ANR	1640158	IfStatement	if ( mode & CKPT_MODE_MSYNC )		1639693	2					
ANR	1640159	Condition	mode & CKPT_MODE_MSYNC	1806:8:52369:52388	1639693	0	True				
ANR	1640160	BitAndExpression	mode & CKPT_MODE_MSYNC		1639693	0		&			
ANR	1640161	Identifier	mode		1639693	0					
ANR	1640162	Identifier	CKPT_MODE_MSYNC		1639693	1					
ANR	1640163	CompoundStatement		123:30:4252:4252	1639693	1					
ANR	1640164	ExpressionStatement	"dprintf ( D_ALWAYS , ""Performing an msync() on all dirty pages...\\n"" )"	1807:5:52398:52471	1639693	0	True				
ANR	1640165	CallExpression	"dprintf ( D_ALWAYS , ""Performing an msync() on all dirty pages...\\n"" )"		1639693	0					
ANR	1640166	Callee	dprintf		1639693	0					
ANR	1640167	Identifier	dprintf		1639693	0					
ANR	1640168	ArgumentList	D_ALWAYS		1639693	1					
ANR	1640169	Argument	D_ALWAYS		1639693	0					
ANR	1640170	Identifier	D_ALWAYS		1639693	0					
ANR	1640171	Argument	"""Performing an msync() on all dirty pages...\\n"""		1639693	1					
ANR	1640172	PrimaryExpression	"""Performing an msync() on all dirty pages...\\n"""		1639693	0					
ANR	1640173	ExpressionStatement	MyImage . MSync ( )	1809:5:52478:52493	1639693	1	True				
ANR	1640174	CallExpression	MyImage . MSync ( )		1639693	0					
ANR	1640175	Callee	MyImage . MSync		1639693	0					
ANR	1640176	MemberAccess	MyImage . MSync		1639693	0					
ANR	1640177	Identifier	MyImage		1639693	0					
ANR	1640178	Identifier	MSync		1639693	1					
ANR	1640179	ArgumentList			1639693	1					
ANR	1640180	IfStatement	if ( mode & CKPT_MODE_ABORT )		1639693	3					
ANR	1640181	Condition	mode & CKPT_MODE_ABORT	1811:8:52509:52528	1639693	0	True				
ANR	1640182	BitAndExpression	mode & CKPT_MODE_ABORT		1639693	0		&			
ANR	1640183	Identifier	mode		1639693	0					
ANR	1640184	Identifier	CKPT_MODE_ABORT		1639693	1					
ANR	1640185	CompoundStatement		128:30:4392:4392	1639693	1					
ANR	1640186	ExpressionStatement	"dprintf ( D_ALWAYS , ""Checkpoint aborted by shadow request.\\n"" )"	1812:5:52538:52605	1639693	0	True				
ANR	1640187	CallExpression	"dprintf ( D_ALWAYS , ""Checkpoint aborted by shadow request.\\n"" )"		1639693	0					
ANR	1640188	Callee	dprintf		1639693	0					
ANR	1640189	Identifier	dprintf		1639693	0					
ANR	1640190	ArgumentList	D_ALWAYS		1639693	1					
ANR	1640191	Argument	D_ALWAYS		1639693	0					
ANR	1640192	Identifier	D_ALWAYS		1639693	0					
ANR	1640193	Argument	"""Checkpoint aborted by shadow request.\\n"""		1639693	1					
ANR	1640194	PrimaryExpression	"""Checkpoint aborted by shadow request.\\n"""		1639693	0					
ANR	1640195	IfStatement	if ( check_sig == SIGTSTP )		1639693	1					
ANR	1640196	Condition	check_sig == SIGTSTP	1819:9:52841:52860	1639693	0	True				
ANR	1640197	EqualityExpression	check_sig == SIGTSTP		1639693	0		==			
ANR	1640198	Identifier	check_sig		1639693	0					
ANR	1640199	Identifier	SIGTSTP		1639693	1					
ANR	1640200	CompoundStatement		136:31:4724:4724	1639693	1					
ANR	1640201	Statement	dprintf	1820:6:52871:52877	1639693	0	True				
ANR	1640202	Statement	(	1820:13:52878:52878	1639693	1	True				
ANR	1640203	Statement	D_ALWAYS	1820:15:52880:52887	1639693	2	True				
ANR	1640204	Statement	","	1820:23:52888:52888	1639693	3	True				
ANR	1640205	Statement	"""Checkpoint during a vacate while """	1820:25:52890:52924	1639693	4	True				
ANR	1640206	Statement	"""WantCheckpoint = False, aborting """	1821:11:52937:52971	1639693	5	True				
ANR	1640207	Statement	"""the checkpoint and commiting """	1822:11:52984:53014	1639693	6	True				
ANR	1640208	Statement	"""Suicide().\\n"""	1823:11:53027:53040	1639693	7	True				
ANR	1640209	Statement	)	1823:25:53041:53041	1639693	8	True				
ANR	1640210	ExpressionStatement		1823:26:53042:53042	1639693	9	True				
ANR	1640211	ExpressionStatement	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )	1824:6:53050:53089	1639693	10	True				
ANR	1640212	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		1639693	0					
ANR	1640213	Callee	SetSyscalls		1639693	0					
ANR	1640214	Identifier	SetSyscalls		1639693	0					
ANR	1640215	ArgumentList	SYS_LOCAL | SYS_UNMAPPED		1639693	1					
ANR	1640216	Argument	SYS_LOCAL | SYS_UNMAPPED		1639693	0					
ANR	1640217	InclusiveOrExpression	SYS_LOCAL | SYS_UNMAPPED		1639693	0		|			
ANR	1640218	Identifier	SYS_LOCAL		1639693	0					
ANR	1640219	Identifier	SYS_UNMAPPED		1639693	1					
ANR	1640220	ExpressionStatement	Suicide ( )	1825:6:53097:53106	1639693	11	True				
ANR	1640221	CallExpression	Suicide ( )		1639693	0					
ANR	1640222	Callee	Suicide		1639693	0					
ANR	1640223	Identifier	Suicide		1639693	0					
ANR	1640224	ArgumentList			1639693	1					
ANR	1640225	ExpressionStatement	"dprintf ( D_ALWAYS , ""About to restore file state\\n"" )"	1831:5:53218:53269	1639693	2	True				
ANR	1640226	CallExpression	"dprintf ( D_ALWAYS , ""About to restore file state\\n"" )"		1639693	0					
ANR	1640227	Callee	dprintf		1639693	0					
ANR	1640228	Identifier	dprintf		1639693	0					
ANR	1640229	ArgumentList	D_ALWAYS		1639693	1					
ANR	1640230	Argument	D_ALWAYS		1639693	0					
ANR	1640231	Identifier	D_ALWAYS		1639693	0					
ANR	1640232	Argument	"""About to restore file state\\n"""		1639693	1					
ANR	1640233	PrimaryExpression	"""About to restore file state\\n"""		1639693	0					
ANR	1640234	ExpressionStatement	_condor_file_table_resume ( )	1832:5:53276:53303	1639693	3	True				
ANR	1640235	CallExpression	_condor_file_table_resume ( )		1639693	0					
ANR	1640236	Callee	_condor_file_table_resume		1639693	0					
ANR	1640237	Identifier	_condor_file_table_resume		1639693	0					
ANR	1640238	ArgumentList			1639693	1					
ANR	1640239	ExpressionStatement	"dprintf ( D_ALWAYS , ""Done restoring file state\\n"" )"	1833:5:53310:53360	1639693	4	True				
ANR	1640240	CallExpression	"dprintf ( D_ALWAYS , ""Done restoring file state\\n"" )"		1639693	0					
ANR	1640241	Callee	dprintf		1639693	0					
ANR	1640242	Identifier	dprintf		1639693	0					
ANR	1640243	ArgumentList	D_ALWAYS		1639693	1					
ANR	1640244	Argument	D_ALWAYS		1639693	0					
ANR	1640245	Identifier	D_ALWAYS		1639693	0					
ANR	1640246	Argument	"""Done restoring file state\\n"""		1639693	1					
ANR	1640247	PrimaryExpression	"""Done restoring file state\\n"""		1639693	0					
ANR	1640248	ExpressionStatement	"dprintf ( D_ALWAYS , ""About to restore signal state\\n"" )"	1835:5:53368:53422	1639693	5	True				
ANR	1640249	CallExpression	"dprintf ( D_ALWAYS , ""About to restore signal state\\n"" )"		1639693	0					
ANR	1640250	Callee	dprintf		1639693	0					
ANR	1640251	Identifier	dprintf		1639693	0					
ANR	1640252	ArgumentList	D_ALWAYS		1639693	1					
ANR	1640253	Argument	D_ALWAYS		1639693	0					
ANR	1640254	Identifier	D_ALWAYS		1639693	0					
ANR	1640255	Argument	"""About to restore signal state\\n"""		1639693	1					
ANR	1640256	PrimaryExpression	"""About to restore signal state\\n"""		1639693	0					
ANR	1640257	ExpressionStatement	_condor_restore_sigstates ( )	1836:5:53429:53456	1639693	6	True				
ANR	1640258	CallExpression	_condor_restore_sigstates ( )		1639693	0					
ANR	1640259	Callee	_condor_restore_sigstates		1639693	0					
ANR	1640260	Identifier	_condor_restore_sigstates		1639693	0					
ANR	1640261	ArgumentList			1639693	1					
ANR	1640262	ExpressionStatement	SetSyscalls ( scm )	1838:5:53464:53482	1639693	7	True				
ANR	1640263	CallExpression	SetSyscalls ( scm )		1639693	0					
ANR	1640264	Callee	SetSyscalls		1639693	0					
ANR	1640265	Identifier	SetSyscalls		1639693	0					
ANR	1640266	ArgumentList	scm		1639693	1					
ANR	1640267	Argument	scm		1639693	0					
ANR	1640268	Identifier	scm		1639693	0					
ANR	1640269	ExpressionStatement	"dprintf ( D_ALWAYS , ""About to return to user code\\n"" )"	1839:5:53489:53542	1639693	8	True				
ANR	1640270	CallExpression	"dprintf ( D_ALWAYS , ""About to return to user code\\n"" )"		1639693	0					
ANR	1640271	Callee	dprintf		1639693	0					
ANR	1640272	Identifier	dprintf		1639693	0					
ANR	1640273	ArgumentList	D_ALWAYS		1639693	1					
ANR	1640274	Argument	D_ALWAYS		1639693	0					
ANR	1640275	Identifier	D_ALWAYS		1639693	0					
ANR	1640276	Argument	"""About to return to user code\\n"""		1639693	1					
ANR	1640277	PrimaryExpression	"""About to return to user code\\n"""		1639693	0					
ANR	1640278	ExpressionStatement	InRestart = FALSE	1840:5:53549:53566	1639693	9	True				
ANR	1640279	AssignmentExpression	InRestart = FALSE		1639693	0		=			
ANR	1640280	Identifier	InRestart		1639693	0					
ANR	1640281	Identifier	FALSE		1639693	1					
ANR	1640282	ExpressionStatement	_condor_signals_enable ( mask )	1841:5:53573:53601	1639693	10	True				
ANR	1640283	CallExpression	_condor_signals_enable ( mask )		1639693	0					
ANR	1640284	Callee	_condor_signals_enable		1639693	0					
ANR	1640285	Identifier	_condor_signals_enable		1639693	0					
ANR	1640286	ArgumentList	mask		1639693	1					
ANR	1640287	Argument	mask		1639693	0					
ANR	1640288	Identifier	mask		1639693	0					
ANR	1640289	ReturnStatement	return ;	1842:5:53608:53614	1639693	11	True				
ANR	1640290	ElseStatement	else		1639693	0					
ANR	1640291	CompoundStatement		161:10:5493:5493	1639693	0					
ANR	1640292	ExpressionStatement	condor_compress_ckpt = condor_slow_ckpt = 0	1845:4:53638:53681	1639693	0	True				
ANR	1640293	AssignmentExpression	condor_compress_ckpt = condor_slow_ckpt = 0		1639693	0		=			
ANR	1640294	Identifier	condor_compress_ckpt		1639693	0					
ANR	1640295	AssignmentExpression	condor_slow_ckpt = 0		1639693	1		=			
ANR	1640296	Identifier	condor_slow_ckpt		1639693	0					
ANR	1640297	PrimaryExpression	0		1639693	1					
ANR	1640298	ExpressionStatement	"dprintf ( D_ALWAYS , ""About to write checkpoint\\n"" )"	1849:2:53695:53744	1639693	3	True				
ANR	1640299	CallExpression	"dprintf ( D_ALWAYS , ""About to write checkpoint\\n"" )"		1639693	0					
ANR	1640300	Callee	dprintf		1639693	0					
ANR	1640301	Identifier	dprintf		1639693	0					
ANR	1640302	ArgumentList	D_ALWAYS		1639693	1					
ANR	1640303	Argument	D_ALWAYS		1639693	0					
ANR	1640304	Identifier	D_ALWAYS		1639693	0					
ANR	1640305	Argument	"""About to write checkpoint\\n"""		1639693	1					
ANR	1640306	PrimaryExpression	"""About to write checkpoint\\n"""		1639693	0					
ANR	1640307	ExpressionStatement	write_result = MyImage . Write ( )	1850:2:53748:53778	1639693	4	True				
ANR	1640308	AssignmentExpression	write_result = MyImage . Write ( )		1639693	0		=			
ANR	1640309	Identifier	write_result		1639693	0					
ANR	1640310	CallExpression	MyImage . Write ( )		1639693	1					
ANR	1640311	Callee	MyImage . Write		1639693	0					
ANR	1640312	MemberAccess	MyImage . Write		1639693	0					
ANR	1640313	Identifier	MyImage		1639693	0					
ANR	1640314	Identifier	Write		1639693	1					
ANR	1640315	ArgumentList			1639693	1					
ANR	1640316	IfStatement	if ( sig == SIGTSTP )		1639693	5					
ANR	1640317	Condition	sig == SIGTSTP	1851:7:53787:53800	1639693	0	True				
ANR	1640318	EqualityExpression	sig == SIGTSTP		1639693	0		==			
ANR	1640319	Identifier	sig		1639693	0					
ANR	1640320	Identifier	SIGTSTP		1639693	1					
ANR	1640321	CompoundStatement		168:24:5665:5665	1639693	1					
ANR	1640322	ExpressionStatement	"dprintf ( D_ALWAYS , ""Ckpt exit\\n"" )"	1853:3:53864:53899	1639693	0	True				
ANR	1640323	CallExpression	"dprintf ( D_ALWAYS , ""Ckpt exit\\n"" )"		1639693	0					
ANR	1640324	Callee	dprintf		1639693	0					
ANR	1640325	Identifier	dprintf		1639693	0					
ANR	1640326	ArgumentList	D_ALWAYS		1639693	1					
ANR	1640327	Argument	D_ALWAYS		1639693	0					
ANR	1640328	Identifier	D_ALWAYS		1639693	0					
ANR	1640329	Argument	"""Ckpt exit\\n"""		1639693	1					
ANR	1640330	PrimaryExpression	"""Ckpt exit\\n"""		1639693	0					
ANR	1640331	ExpressionStatement	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )	1854:3:53904:53943	1639693	1	True				
ANR	1640332	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		1639693	0					
ANR	1640333	Callee	SetSyscalls		1639693	0					
ANR	1640334	Identifier	SetSyscalls		1639693	0					
ANR	1640335	ArgumentList	SYS_LOCAL | SYS_UNMAPPED		1639693	1					
ANR	1640336	Argument	SYS_LOCAL | SYS_UNMAPPED		1639693	0					
ANR	1640337	InclusiveOrExpression	SYS_LOCAL | SYS_UNMAPPED		1639693	0		|			
ANR	1640338	Identifier	SYS_LOCAL		1639693	0					
ANR	1640339	Identifier	SYS_UNMAPPED		1639693	1					
ANR	1640340	IfStatement	if ( write_result == 0 )		1639693	2					
ANR	1640341	Condition	write_result == 0	1855:8:53953:53969	1639693	0	True				
ANR	1640342	EqualityExpression	write_result == 0		1639693	0		==			
ANR	1640343	Identifier	write_result		1639693	0					
ANR	1640344	PrimaryExpression	0		1639693	1					
ANR	1640345	CompoundStatement		172:28:5834:5834	1639693	1					
ANR	1640346	ExpressionStatement	terminate_with_sig ( SIGUSR2 )	1856:4:53979:54008	1639693	0	True				
ANR	1640347	CallExpression	terminate_with_sig ( SIGUSR2 )		1639693	0					
ANR	1640348	Callee	terminate_with_sig		1639693	0					
ANR	1640349	Identifier	terminate_with_sig		1639693	0					
ANR	1640350	ArgumentList	SIGUSR2		1639693	1					
ANR	1640351	Argument	SIGUSR2		1639693	0					
ANR	1640352	Identifier	SIGUSR2		1639693	0					
ANR	1640353	ElseStatement	else		1639693	0					
ANR	1640354	CompoundStatement		175:10:5920:5920	1639693	0					
ANR	1640355	ExpressionStatement	"dprintf ( D_ALWAYS , ""Write failed with [%d]\\n"" , write_result )"	1859:4:54065:54124	1639693	0	True				
ANR	1640356	CallExpression	"dprintf ( D_ALWAYS , ""Write failed with [%d]\\n"" , write_result )"		1639693	0					
ANR	1640357	Callee	dprintf		1639693	0					
ANR	1640358	Identifier	dprintf		1639693	0					
ANR	1640359	ArgumentList	D_ALWAYS		1639693	1					
ANR	1640360	Argument	D_ALWAYS		1639693	0					
ANR	1640361	Identifier	D_ALWAYS		1639693	0					
ANR	1640362	Argument	"""Write failed with [%d]\\n"""		1639693	1					
ANR	1640363	PrimaryExpression	"""Write failed with [%d]\\n"""		1639693	0					
ANR	1640364	Argument	write_result		1639693	2					
ANR	1640365	Identifier	write_result		1639693	0					
ANR	1640366	ExpressionStatement	Suicide ( )	1860:4:54130:54139	1639693	1	True				
ANR	1640367	CallExpression	Suicide ( )		1639693	0					
ANR	1640368	Callee	Suicide		1639693	0					
ANR	1640369	Identifier	Suicide		1639693	0					
ANR	1640370	ArgumentList			1639693	1					
ANR	1640371	ExpressionStatement	"dprintf ( D_ALWAYS , ""You should never see this line in the log!\\n"" )"	1863:3:54180:54245	1639693	3	True				
ANR	1640372	CallExpression	"dprintf ( D_ALWAYS , ""You should never see this line in the log!\\n"" )"		1639693	0					
ANR	1640373	Callee	dprintf		1639693	0					
ANR	1640374	Identifier	dprintf		1639693	0					
ANR	1640375	ArgumentList	D_ALWAYS		1639693	1					
ANR	1640376	Argument	D_ALWAYS		1639693	0					
ANR	1640377	Identifier	D_ALWAYS		1639693	0					
ANR	1640378	Argument	"""You should never see this line in the log!\\n"""		1639693	1					
ANR	1640379	PrimaryExpression	"""You should never see this line in the log!\\n"""		1639693	0					
ANR	1640380	ElseStatement	else		1639693	0					
ANR	1640381	CompoundStatement		181:9:6117:6117	1639693	0					
ANR	1640382	IfStatement	if ( MyImage . GetMode ( ) == REMOTE )		1639693	0					
ANR	1640383	Condition	MyImage . GetMode ( ) == REMOTE	1865:8:54266:54292	1639693	0	True				
ANR	1640384	EqualityExpression	MyImage . GetMode ( ) == REMOTE		1639693	0		==			
ANR	1640385	CallExpression	MyImage . GetMode ( )		1639693	0					
ANR	1640386	Callee	MyImage . GetMode		1639693	0					
ANR	1640387	MemberAccess	MyImage . GetMode		1639693	0					
ANR	1640388	Identifier	MyImage		1639693	0					
ANR	1640389	Identifier	GetMode		1639693	1					
ANR	1640390	ArgumentList			1639693	1					
ANR	1640391	Identifier	REMOTE		1639693	1					
ANR	1640392	CompoundStatement		182:38:6157:6157	1639693	1					
ANR	1640393	ExpressionStatement	MyImage . SetFd ( - 1 )	1871:4:54501:54520	1639693	0	True				
ANR	1640394	CallExpression	MyImage . SetFd ( - 1 )		1639693	0					
ANR	1640395	Callee	MyImage . SetFd		1639693	0					
ANR	1640396	MemberAccess	MyImage . SetFd		1639693	0					
ANR	1640397	Identifier	MyImage		1639693	0					
ANR	1640398	Identifier	SetFd		1639693	1					
ANR	1640399	ArgumentList	- 1		1639693	1					
ANR	1640400	Argument	- 1		1639693	0					
ANR	1640401	UnaryOperationExpression	- 1		1639693	0					
ANR	1640402	UnaryOperator	-		1639693	0					
ANR	1640403	PrimaryExpression	1		1639693	1					
ANR	1640404	ExpressionStatement	do_full_restart = 0	1874:3:54531:54550	1639693	1	True				
ANR	1640405	AssignmentExpression	do_full_restart = 0		1639693	0		=			
ANR	1640406	Identifier	do_full_restart		1639693	0					
ANR	1640407	PrimaryExpression	0		1639693	1					
ANR	1640408	ExpressionStatement	"dprintf ( D_ALWAYS , ""Periodic Ckpt complete, doing a virtual restart...\\n"" )"	1875:3:54555:54628	1639693	2	True				
ANR	1640409	CallExpression	"dprintf ( D_ALWAYS , ""Periodic Ckpt complete, doing a virtual restart...\\n"" )"		1639693	0					
ANR	1640410	Callee	dprintf		1639693	0					
ANR	1640411	Identifier	dprintf		1639693	0					
ANR	1640412	ArgumentList	D_ALWAYS		1639693	1					
ANR	1640413	Argument	D_ALWAYS		1639693	0					
ANR	1640414	Identifier	D_ALWAYS		1639693	0					
ANR	1640415	Argument	"""Periodic Ckpt complete, doing a virtual restart...\\n"""		1639693	1					
ANR	1640416	PrimaryExpression	"""Periodic Ckpt complete, doing a virtual restart...\\n"""		1639693	0					
ANR	1640417	ExpressionStatement	"LONGJMP ( Env , 1 )"	1876:3:54633:54649	1639693	3	True				
ANR	1640418	CallExpression	"LONGJMP ( Env , 1 )"		1639693	0					
ANR	1640419	Callee	LONGJMP		1639693	0					
ANR	1640420	Identifier	LONGJMP		1639693	0					
ANR	1640421	ArgumentList	Env		1639693	1					
ANR	1640422	Argument	Env		1639693	0					
ANR	1640423	Identifier	Env		1639693	0					
ANR	1640424	Argument	1		1639693	1					
ANR	1640425	PrimaryExpression	1		1639693	0					
ANR	1640426	ElseStatement	else		1639693	0					
ANR	1640427	CompoundStatement		230:2:7446:7470	1639693	0					
ANR	1640428	IfStatement	if ( do_full_restart )		1639693	0					
ANR	1640429	Condition	do_full_restart	1879:7:54687:54701	1639693	0	True				
ANR	1640430	Identifier	do_full_restart		1639693	0					
ANR	1640431	CompoundStatement		207:3:6813:6840	1639693	1					
ANR	1640432	ExpressionStatement	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )	1880:3:54710:54755	1639693	0	True				
ANR	1640433	AssignmentExpression	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		1639693	0		=			
ANR	1640434	Identifier	scm		1639693	0					
ANR	1640435	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		1639693	1					
ANR	1640436	Callee	SetSyscalls		1639693	0					
ANR	1640437	Identifier	SetSyscalls		1639693	0					
ANR	1640438	ArgumentList	SYS_LOCAL | SYS_UNMAPPED		1639693	1					
ANR	1640439	Argument	SYS_LOCAL | SYS_UNMAPPED		1639693	0					
ANR	1640440	InclusiveOrExpression	SYS_LOCAL | SYS_UNMAPPED		1639693	0		|			
ANR	1640441	Identifier	SYS_LOCAL		1639693	0					
ANR	1640442	Identifier	SYS_UNMAPPED		1639693	1					
ANR	1640443	ExpressionStatement	patch_registers ( scp )	1881:3:54760:54782	1639693	1	True				
ANR	1640444	CallExpression	patch_registers ( scp )		1639693	0					
ANR	1640445	Callee	patch_registers		1639693	0					
ANR	1640446	Identifier	patch_registers		1639693	0					
ANR	1640447	ArgumentList	scp		1639693	1					
ANR	1640448	Argument	scp		1639693	0					
ANR	1640449	Identifier	scp		1639693	0					
ANR	1640450	ExpressionStatement	MyImage . Close ( )	1882:3:54787:54802	1639693	2	True				
ANR	1640451	CallExpression	MyImage . Close ( )		1639693	0					
ANR	1640452	Callee	MyImage . Close		1639693	0					
ANR	1640453	MemberAccess	MyImage . Close		1639693	0					
ANR	1640454	Identifier	MyImage		1639693	0					
ANR	1640455	Identifier	Close		1639693	1					
ANR	1640456	ArgumentList			1639693	1					
ANR	1640457	IfStatement	if ( MyImage . GetMode ( ) == REMOTE )		1639693	3					
ANR	1640458	Condition	MyImage . GetMode ( ) == REMOTE	1884:7:54812:54838	1639693	0	True				
ANR	1640459	EqualityExpression	MyImage . GetMode ( ) == REMOTE		1639693	0		==			
ANR	1640460	CallExpression	MyImage . GetMode ( )		1639693	0					
ANR	1640461	Callee	MyImage . GetMode		1639693	0					
ANR	1640462	MemberAccess	MyImage . GetMode		1639693	0					
ANR	1640463	Identifier	MyImage		1639693	0					
ANR	1640464	Identifier	GetMode		1639693	1					
ANR	1640465	ArgumentList			1639693	1					
ANR	1640466	Identifier	REMOTE		1639693	1					
ANR	1640467	CompoundStatement		201:37:6703:6703	1639693	1					
ANR	1640468	ExpressionStatement	SetSyscalls ( SYS_REMOTE | SYS_MAPPED )	1885:4:54848:54886	1639693	0	True				
ANR	1640469	CallExpression	SetSyscalls ( SYS_REMOTE | SYS_MAPPED )		1639693	0					
ANR	1640470	Callee	SetSyscalls		1639693	0					
ANR	1640471	Identifier	SetSyscalls		1639693	0					
ANR	1640472	ArgumentList	SYS_REMOTE | SYS_MAPPED		1639693	1					
ANR	1640473	Argument	SYS_REMOTE | SYS_MAPPED		1639693	0					
ANR	1640474	InclusiveOrExpression	SYS_REMOTE | SYS_MAPPED		1639693	0		|			
ANR	1640475	Identifier	SYS_REMOTE		1639693	0					
ANR	1640476	Identifier	SYS_MAPPED		1639693	1					
ANR	1640477	ElseStatement	else		1639693	0					
ANR	1640478	CompoundStatement		203:10:6759:6759	1639693	0					
ANR	1640479	ExpressionStatement	SetSyscalls ( SYS_LOCAL | SYS_MAPPED )	1887:4:54904:54941	1639693	0	True				
ANR	1640480	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_MAPPED )		1639693	0					
ANR	1640481	Callee	SetSyscalls		1639693	0					
ANR	1640482	Identifier	SetSyscalls		1639693	0					
ANR	1640483	ArgumentList	SYS_LOCAL | SYS_MAPPED		1639693	1					
ANR	1640484	Argument	SYS_LOCAL | SYS_MAPPED		1639693	0					
ANR	1640485	InclusiveOrExpression	SYS_LOCAL | SYS_MAPPED		1639693	0		|			
ANR	1640486	Identifier	SYS_LOCAL		1639693	0					
ANR	1640487	Identifier	SYS_MAPPED		1639693	1					
ANR	1640488	IdentifierDeclStatement	int mode = get_ckpt_mode ( 0 ) ;	1890:3:54952:54979	1639693	4	True				
ANR	1640489	IdentifierDecl	mode = get_ckpt_mode ( 0 )		1639693	0					
ANR	1640490	IdentifierDeclType	int		1639693	0					
ANR	1640491	Identifier	mode		1639693	1					
ANR	1640492	AssignmentExpression	mode = get_ckpt_mode ( 0 )		1639693	2		=			
ANR	1640493	Identifier	mode		1639693	0					
ANR	1640494	CallExpression	get_ckpt_mode ( 0 )		1639693	1					
ANR	1640495	Callee	get_ckpt_mode		1639693	0					
ANR	1640496	Identifier	get_ckpt_mode		1639693	0					
ANR	1640497	ArgumentList	0		1639693	1					
ANR	1640498	Argument	0		1639693	0					
ANR	1640499	PrimaryExpression	0		1639693	0					
ANR	1640500	IfStatement	if ( mode > 0 )		1639693	5					
ANR	1640501	Condition	mode > 0	1891:7:54988:54995	1639693	0	True				
ANR	1640502	RelationalExpression	mode > 0		1639693	0		>			
ANR	1640503	Identifier	mode		1639693	0					
ANR	1640504	PrimaryExpression	0		1639693	1					
ANR	1640505	CompoundStatement		208:17:6859:6859	1639693	1					
ANR	1640506	IfStatement	if ( mode & CKPT_MODE_MSYNC )		1639693	0					
ANR	1640507	Condition	mode & CKPT_MODE_MSYNC	1892:8:55008:55027	1639693	0	True				
ANR	1640508	BitAndExpression	mode & CKPT_MODE_MSYNC		1639693	0		&			
ANR	1640509	Identifier	mode		1639693	0					
ANR	1640510	Identifier	CKPT_MODE_MSYNC		1639693	1					
ANR	1640511	CompoundStatement		209:30:6891:6891	1639693	1					
ANR	1640512	ExpressionStatement	"dprintf ( D_ALWAYS , ""Performing an msync() on all dirty pages...\\n"" )"	1893:5:55037:55110	1639693	0	True				
ANR	1640513	CallExpression	"dprintf ( D_ALWAYS , ""Performing an msync() on all dirty pages...\\n"" )"		1639693	0					
ANR	1640514	Callee	dprintf		1639693	0					
ANR	1640515	Identifier	dprintf		1639693	0					
ANR	1640516	ArgumentList	D_ALWAYS		1639693	1					
ANR	1640517	Argument	D_ALWAYS		1639693	0					
ANR	1640518	Identifier	D_ALWAYS		1639693	0					
ANR	1640519	Argument	"""Performing an msync() on all dirty pages...\\n"""		1639693	1					
ANR	1640520	PrimaryExpression	"""Performing an msync() on all dirty pages...\\n"""		1639693	0					
ANR	1640521	ExpressionStatement	MyImage . MSync ( )	1895:5:55117:55132	1639693	1	True				
ANR	1640522	CallExpression	MyImage . MSync ( )		1639693	0					
ANR	1640523	Callee	MyImage . MSync		1639693	0					
ANR	1640524	MemberAccess	MyImage . MSync		1639693	0					
ANR	1640525	Identifier	MyImage		1639693	0					
ANR	1640526	Identifier	MSync		1639693	1					
ANR	1640527	ArgumentList			1639693	1					
ANR	1640528	IfStatement	if ( mode & CKPT_MODE_ABORT )		1639693	1					
ANR	1640529	Condition	mode & CKPT_MODE_ABORT	1897:8:55148:55167	1639693	0	True				
ANR	1640530	BitAndExpression	mode & CKPT_MODE_ABORT		1639693	0		&			
ANR	1640531	Identifier	mode		1639693	0					
ANR	1640532	Identifier	CKPT_MODE_ABORT		1639693	1					
ANR	1640533	CompoundStatement		214:30:7031:7031	1639693	1					
ANR	1640534	ExpressionStatement	"dprintf ( D_ALWAYS , ""Restart aborted by shadow request.\\n"" )"	1898:5:55177:55234	1639693	0	True				
ANR	1640535	CallExpression	"dprintf ( D_ALWAYS , ""Restart aborted by shadow request.\\n"" )"		1639693	0					
ANR	1640536	Callee	dprintf		1639693	0					
ANR	1640537	Identifier	dprintf		1639693	0					
ANR	1640538	ArgumentList	D_ALWAYS		1639693	1					
ANR	1640539	Argument	D_ALWAYS		1639693	0					
ANR	1640540	Identifier	D_ALWAYS		1639693	0					
ANR	1640541	Argument	"""Restart aborted by shadow request.\\n"""		1639693	1					
ANR	1640542	PrimaryExpression	"""Restart aborted by shadow request.\\n"""		1639693	0					
ANR	1640543	ExpressionStatement	Suicide ( )	1899:5:55241:55250	1639693	1	True				
ANR	1640544	CallExpression	Suicide ( )		1639693	0					
ANR	1640545	Callee	Suicide		1639693	0					
ANR	1640546	Identifier	Suicide		1639693	0					
ANR	1640547	ArgumentList			1639693	1					
ANR	1640548	ElseStatement	else		1639693	0					
ANR	1640549	CompoundStatement		219:9:7133:7133	1639693	0					
ANR	1640550	ExpressionStatement	patch_registers ( scp )	1903:3:55277:55299	1639693	0	True				
ANR	1640551	CallExpression	patch_registers ( scp )		1639693	0					
ANR	1640552	Callee	patch_registers		1639693	0					
ANR	1640553	Identifier	patch_registers		1639693	0					
ANR	1640554	ArgumentList	scp		1639693	1					
ANR	1640555	Argument	scp		1639693	0					
ANR	1640556	Identifier	scp		1639693	0					
ANR	1640557	ExpressionStatement	"dprintf ( D_ALWAYS , ""About to restore file state\\n"" )"	1906:2:55308:55359	1639693	1	True				
ANR	1640558	CallExpression	"dprintf ( D_ALWAYS , ""About to restore file state\\n"" )"		1639693	0					
ANR	1640559	Callee	dprintf		1639693	0					
ANR	1640560	Identifier	dprintf		1639693	0					
ANR	1640561	ArgumentList	D_ALWAYS		1639693	1					
ANR	1640562	Argument	D_ALWAYS		1639693	0					
ANR	1640563	Identifier	D_ALWAYS		1639693	0					
ANR	1640564	Argument	"""About to restore file state\\n"""		1639693	1					
ANR	1640565	PrimaryExpression	"""About to restore file state\\n"""		1639693	0					
ANR	1640566	ExpressionStatement	_condor_file_table_resume ( )	1907:2:55363:55390	1639693	2	True				
ANR	1640567	CallExpression	_condor_file_table_resume ( )		1639693	0					
ANR	1640568	Callee	_condor_file_table_resume		1639693	0					
ANR	1640569	Identifier	_condor_file_table_resume		1639693	0					
ANR	1640570	ArgumentList			1639693	1					
ANR	1640571	ExpressionStatement	"dprintf ( D_ALWAYS , ""Done restoring file state\\n"" )"	1908:2:55394:55444	1639693	3	True				
ANR	1640572	CallExpression	"dprintf ( D_ALWAYS , ""Done restoring file state\\n"" )"		1639693	0					
ANR	1640573	Callee	dprintf		1639693	0					
ANR	1640574	Identifier	dprintf		1639693	0					
ANR	1640575	ArgumentList	D_ALWAYS		1639693	1					
ANR	1640576	Argument	D_ALWAYS		1639693	0					
ANR	1640577	Identifier	D_ALWAYS		1639693	0					
ANR	1640578	Argument	"""Done restoring file state\\n"""		1639693	1					
ANR	1640579	PrimaryExpression	"""Done restoring file state\\n"""		1639693	0					
ANR	1640580	ExpressionStatement	SetSyscalls ( SYS_LOCAL | SYS_UNRECORDED )	1912:2:55542:55581	1639693	4	True				
ANR	1640581	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNRECORDED )		1639693	0					
ANR	1640582	Callee	SetSyscalls		1639693	0					
ANR	1640583	Identifier	SetSyscalls		1639693	0					
ANR	1640584	ArgumentList	SYS_LOCAL | SYS_UNRECORDED		1639693	1					
ANR	1640585	Argument	SYS_LOCAL | SYS_UNRECORDED		1639693	0					
ANR	1640586	InclusiveOrExpression	SYS_LOCAL | SYS_UNRECORDED		1639693	0		|			
ANR	1640587	Identifier	SYS_LOCAL		1639693	0					
ANR	1640588	Identifier	SYS_UNRECORDED		1639693	1					
ANR	1640589	IdentifierDeclStatement	sigset_t pending_sig_set ;	1913:2:55585:55609	1639693	5	True				
ANR	1640590	IdentifierDecl	pending_sig_set		1639693	0					
ANR	1640591	IdentifierDeclType	sigset_t		1639693	0					
ANR	1640592	Identifier	pending_sig_set		1639693	1					
ANR	1640593	ExpressionStatement	sigpending ( & pending_sig_set )	1914:2:55613:55643	1639693	6	True				
ANR	1640594	CallExpression	sigpending ( & pending_sig_set )		1639693	0					
ANR	1640595	Callee	sigpending		1639693	0					
ANR	1640596	Identifier	sigpending		1639693	0					
ANR	1640597	ArgumentList	& pending_sig_set		1639693	1					
ANR	1640598	Argument	& pending_sig_set		1639693	0					
ANR	1640599	UnaryOperationExpression	& pending_sig_set		1639693	0					
ANR	1640600	UnaryOperator	&		1639693	0					
ANR	1640601	Identifier	pending_sig_set		1639693	1					
ANR	1640602	IfStatement	"if ( sigismember ( & pending_sig_set , SIGTSTP ) )"		1639693	7					
ANR	1640603	Condition	"sigismember ( & pending_sig_set , SIGTSTP )"	1915:7:55652:55688	1639693	0	True				
ANR	1640604	CallExpression	"sigismember ( & pending_sig_set , SIGTSTP )"		1639693	0					
ANR	1640605	Callee	sigismember		1639693	0					
ANR	1640606	Identifier	sigismember		1639693	0					
ANR	1640607	ArgumentList	& pending_sig_set		1639693	1					
ANR	1640608	Argument	& pending_sig_set		1639693	0					
ANR	1640609	UnaryOperationExpression	& pending_sig_set		1639693	0					
ANR	1640610	UnaryOperator	&		1639693	0					
ANR	1640611	Identifier	pending_sig_set		1639693	1					
ANR	1640612	Argument	SIGTSTP		1639693	1					
ANR	1640613	Identifier	SIGTSTP		1639693	0					
ANR	1640614	CompoundStatement		232:47:7553:7553	1639693	1					
ANR	1640615	ExpressionStatement	"dprintf ( D_ALWAYS , ""Received a SIGTSTP while checkpointing or restarting.\\n"" )"	1916:3:55697:55777	1639693	0	True				
ANR	1640616	CallExpression	"dprintf ( D_ALWAYS , ""Received a SIGTSTP while checkpointing or restarting.\\n"" )"		1639693	0					
ANR	1640617	Callee	dprintf		1639693	0					
ANR	1640618	Identifier	dprintf		1639693	0					
ANR	1640619	ArgumentList	D_ALWAYS		1639693	1					
ANR	1640620	Argument	D_ALWAYS		1639693	0					
ANR	1640621	Identifier	D_ALWAYS		1639693	0					
ANR	1640622	Argument	"""Received a SIGTSTP while checkpointing or restarting.\\n"""		1639693	1					
ANR	1640623	PrimaryExpression	"""Received a SIGTSTP while checkpointing or restarting.\\n"""		1639693	0					
ANR	1640624	IfStatement	if ( do_full_restart )		1639693	1					
ANR	1640625	Condition	do_full_restart	1918:8:55787:55801	1639693	0	True				
ANR	1640626	Identifier	do_full_restart		1639693	0					
ANR	1640627	CompoundStatement		235:26:7666:7666	1639693	1					
ANR	1640628	ExpressionStatement	Suicide ( )	1923:4:55980:55989	1639693	0	True				
ANR	1640629	CallExpression	Suicide ( )		1639693	0					
ANR	1640630	Callee	Suicide		1639693	0					
ANR	1640631	Identifier	Suicide		1639693	0					
ANR	1640632	ArgumentList			1639693	1					
ANR	1640633	ElseStatement	else		1639693	0					
ANR	1640634	CompoundStatement		241:10:7862:7862	1639693	0					
ANR	1640635	ExpressionStatement	terminate_with_sig ( SIGUSR2 )	1931:4:56315:56342	1639693	0	True				
ANR	1640636	CallExpression	terminate_with_sig ( SIGUSR2 )		1639693	0					
ANR	1640637	Callee	terminate_with_sig		1639693	0					
ANR	1640638	Identifier	terminate_with_sig		1639693	0					
ANR	1640639	ArgumentList	SIGUSR2		1639693	1					
ANR	1640640	Argument	SIGUSR2		1639693	0					
ANR	1640641	Identifier	SIGUSR2		1639693	0					
ANR	1640642	ExpressionStatement	_condor_numrestarts ++	1934:2:56355:56376	1639693	8	True				
ANR	1640643	PostIncDecOperationExpression	_condor_numrestarts ++		1639693	0					
ANR	1640644	Identifier	_condor_numrestarts		1639693	0					
ANR	1640645	IncDec	++		1639693	1					
ANR	1640646	ExpressionStatement	SetSyscalls ( scm )	1935:2:56380:56398	1639693	9	True				
ANR	1640647	CallExpression	SetSyscalls ( scm )		1639693	0					
ANR	1640648	Callee	SetSyscalls		1639693	0					
ANR	1640649	Identifier	SetSyscalls		1639693	0					
ANR	1640650	ArgumentList	scm		1639693	1					
ANR	1640651	Argument	scm		1639693	0					
ANR	1640652	Identifier	scm		1639693	0					
ANR	1640653	ExpressionStatement	"dprintf ( D_ALWAYS , ""About to restore signal state\\n"" )"	1945:2:56699:56753	1639693	10	True				
ANR	1640654	CallExpression	"dprintf ( D_ALWAYS , ""About to restore signal state\\n"" )"		1639693	0					
ANR	1640655	Callee	dprintf		1639693	0					
ANR	1640656	Identifier	dprintf		1639693	0					
ANR	1640657	ArgumentList	D_ALWAYS		1639693	1					
ANR	1640658	Argument	D_ALWAYS		1639693	0					
ANR	1640659	Identifier	D_ALWAYS		1639693	0					
ANR	1640660	Argument	"""About to restore signal state\\n"""		1639693	1					
ANR	1640661	PrimaryExpression	"""About to restore signal state\\n"""		1639693	0					
ANR	1640662	ExpressionStatement	_condor_restore_sigstates ( )	1946:2:56757:56784	1639693	11	True				
ANR	1640663	CallExpression	_condor_restore_sigstates ( )		1639693	0					
ANR	1640664	Callee	_condor_restore_sigstates		1639693	0					
ANR	1640665	Identifier	_condor_restore_sigstates		1639693	0					
ANR	1640666	ArgumentList			1639693	1					
ANR	1640667	ExpressionStatement	"dprintf ( D_ALWAYS , ""About to return to user code\\n"" )"	1948:2:56789:56842	1639693	12	True				
ANR	1640668	CallExpression	"dprintf ( D_ALWAYS , ""About to return to user code\\n"" )"		1639693	0					
ANR	1640669	Callee	dprintf		1639693	0					
ANR	1640670	Identifier	dprintf		1639693	0					
ANR	1640671	ArgumentList	D_ALWAYS		1639693	1					
ANR	1640672	Argument	D_ALWAYS		1639693	0					
ANR	1640673	Identifier	D_ALWAYS		1639693	0					
ANR	1640674	Argument	"""About to return to user code\\n"""		1639693	1					
ANR	1640675	PrimaryExpression	"""About to return to user code\\n"""		1639693	0					
ANR	1640676	ExpressionStatement	InRestart = FALSE	1949:2:56846:56863	1639693	13	True				
ANR	1640677	AssignmentExpression	InRestart = FALSE		1639693	0		=			
ANR	1640678	Identifier	InRestart		1639693	0					
ANR	1640679	Identifier	FALSE		1639693	1					
ANR	1640680	ExpressionStatement	_condor_signals_enable ( mask )	1950:2:56867:56895	1639693	14	True				
ANR	1640681	CallExpression	_condor_signals_enable ( mask )		1639693	0					
ANR	1640682	Callee	_condor_signals_enable		1639693	0					
ANR	1640683	Identifier	_condor_signals_enable		1639693	0					
ANR	1640684	ArgumentList	mask		1639693	1					
ANR	1640685	Argument	mask		1639693	0					
ANR	1640686	Identifier	mask		1639693	0					
ANR	1640687	ReturnStatement	return ;	1951:2:56899:56905	1639693	15	True				
ANR	1640688	ReturnType	void		1639693	1					
ANR	1640689	Identifier	Checkpoint		1639693	2					
ANR	1640690	ParameterList	"int sig , int code , void * scp"		1639693	3					
ANR	1640691	Parameter	int sig	1683:12:48107:48113	1639693	0	True				
ANR	1640692	ParameterType	int		1639693	0					
ANR	1640693	Identifier	sig		1639693	1					
ANR	1640694	Parameter	int code	1683:21:48116:48123	1639693	1	True				
ANR	1640695	ParameterType	int		1639693	0					
ANR	1640696	Identifier	code		1639693	1					
ANR	1640697	Parameter	void * scp	1683:31:48126:48134	1639693	2	True				
ANR	1640698	ParameterType	void *		1639693	0					
ANR	1640699	Identifier	scp		1639693	1					
ANR	1640700	CFGEntryNode	ENTRY		1639693		True				
ANR	1640701	CFGExitNode	EXIT		1639693		True				
ANR	1640702	Symbol	condor_slow_ckpt		1639693						
ANR	1640703	Symbol	_condor_ckpt_is_disabled		1639693						
ANR	1640704	Symbol	bsd_usage . ru_utime . tv_usec		1639693						
ANR	1640705	Symbol	SYS_UNMAPPED		1639693						
ANR	1640706	Symbol	mode		1639693						
ANR	1640707	Symbol	CKPT_MODE_USE_COMPRESSION		1639693						
ANR	1640708	Symbol	p_scm		1639693						
ANR	1640709	Symbol	REMOTE		1639693						
ANR	1640710	Symbol	sysconf		1639693						
ANR	1640711	Symbol	scm		1639693						
ANR	1640712	Symbol	CKPT_MODE_SLOW		1639693						
ANR	1640713	Symbol	MyImage		1639693						
ANR	1640714	Symbol	bsd_usage		1639693						
ANR	1640715	Symbol	scp		1639693						
ANR	1640716	Symbol	MyImage . GetMode		1639693						
ANR	1640717	Symbol	SIGUSR2		1639693						
ANR	1640718	Symbol	TRUE		1639693						
ANR	1640719	Symbol	SIGTSTP		1639693						
ANR	1640720	Symbol	wait_up		1639693						
ANR	1640721	Symbol	SYS_MAPPED		1639693						
ANR	1640722	Symbol	_condor_numrestarts		1639693						
ANR	1640723	Symbol	SYS_UNRECORDED		1639693						
ANR	1640724	Symbol	do_full_restart		1639693						
ANR	1640725	Symbol	get_ckpt_mode		1639693						
ANR	1640726	Symbol	condor_compress_ckpt		1639693						
ANR	1640727	Symbol	SYS_LOCAL		1639693						
ANR	1640728	Symbol	& bsd_usage		1639693						
ANR	1640729	Symbol	MyImage . Write		1639693						
ANR	1640730	Symbol	& posix_usage		1639693						
ANR	1640731	Symbol	posix_usage . tms_utime		1639693						
ANR	1640732	Symbol	KILO		1639693						
ANR	1640733	Symbol	code		1639693						
ANR	1640734	Symbol	CKPT_MODE_ABORT		1639693						
ANR	1640735	Symbol	_SC_CLK_TCK		1639693						
ANR	1640736	Symbol	posix_usage		1639693						
ANR	1640737	Symbol	bsd_usage . ru_utime		1639693						
ANR	1640738	Symbol	Env		1639693						
ANR	1640739	Symbol	sig		1639693						
ANR	1640740	Symbol	bsd_usage . ru_stime . tv_sec		1639693						
ANR	1640741	Symbol	bsd_usage . ru_utime . tv_sec		1639693						
ANR	1640742	Symbol	clock_tick		1639693						
ANR	1640743	Symbol	SetSyscalls		1639693						
ANR	1640744	Symbol	pending_sig_set		1639693						
ANR	1640745	Symbol	bsd_usage . ru_stime . tv_usec		1639693						
ANR	1640746	Symbol	& pending_sig_set		1639693						
ANR	1640747	Symbol	write_result		1639693						
ANR	1640748	Symbol	posix_usage . tms_stime		1639693						
ANR	1640749	Symbol	check_sig		1639693						
ANR	1640750	Symbol	mask		1639693						
ANR	1640751	Symbol	MyImage . GetLen		1639693						
ANR	1640752	Symbol	InRestart		1639693						
ANR	1640753	Symbol	D_ALWAYS		1639693						
ANR	1640754	Symbol	CKPT_MODE_MSYNC		1639693						
ANR	1640755	Symbol	_condor_signals_disable		1639693						
ANR	1640756	Symbol	SYS_REMOTE		1639693						
ANR	1640757	Symbol	bsd_usage . ru_stime		1639693						
ANR	1640758	Symbol	get_ckpt_speed		1639693						
ANR	1640759	Symbol	FALSE		1639693						
ANR	1640760	Symbol	sigismember		1639693						
ANR	1640761	Symbol	SETJMP		1639693						
ANR	1640762	Function	init_image_with_file_name	1955:0:56913:57055							
ANR	1640763	FunctionDef	init_image_with_file_name (const char * ckpt_name)		1640762	0					
ANR	1640764	CompoundStatement		1957:0:56969:57055	1640762	0					
ANR	1640765	ExpressionStatement	_condor_ckpt_disable ( )	1958:1:56972:56994	1640762	0	True				
ANR	1640766	CallExpression	_condor_ckpt_disable ( )		1640762	0					
ANR	1640767	Callee	_condor_ckpt_disable		1640762	0					
ANR	1640768	Identifier	_condor_ckpt_disable		1640762	0					
ANR	1640769	ArgumentList			1640762	1					
ANR	1640770	ExpressionStatement	MyImage . SetFileName ( ckpt_name )	1959:1:56997:57029	1640762	1	True				
ANR	1640771	CallExpression	MyImage . SetFileName ( ckpt_name )		1640762	0					
ANR	1640772	Callee	MyImage . SetFileName		1640762	0					
ANR	1640773	MemberAccess	MyImage . SetFileName		1640762	0					
ANR	1640774	Identifier	MyImage		1640762	0					
ANR	1640775	Identifier	SetFileName		1640762	1					
ANR	1640776	ArgumentList	ckpt_name		1640762	1					
ANR	1640777	Argument	ckpt_name		1640762	0					
ANR	1640778	Identifier	ckpt_name		1640762	0					
ANR	1640779	ExpressionStatement	_condor_ckpt_enable ( )	1960:1:57032:57053	1640762	2	True				
ANR	1640780	CallExpression	_condor_ckpt_enable ( )		1640762	0					
ANR	1640781	Callee	_condor_ckpt_enable		1640762	0					
ANR	1640782	Identifier	_condor_ckpt_enable		1640762	0					
ANR	1640783	ArgumentList			1640762	1					
ANR	1640784	ReturnType	void		1640762	1					
ANR	1640785	Identifier	init_image_with_file_name		1640762	2					
ANR	1640786	ParameterList	const char * ckpt_name		1640762	3					
ANR	1640787	Parameter	const char * ckpt_name	1956:27:56945:56965	1640762	0	True				
ANR	1640788	ParameterType	const char *		1640762	0					
ANR	1640789	Identifier	ckpt_name		1640762	1					
ANR	1640790	CFGEntryNode	ENTRY		1640762		True				
ANR	1640791	CFGExitNode	EXIT		1640762		True				
ANR	1640792	Symbol	ckpt_name		1640762						
ANR	1640793	Symbol	MyImage		1640762						
ANR	1640794	Function	init_image_with_file_descriptor	1963:0:57058:57129							
ANR	1640795	FunctionDef	init_image_with_file_descriptor (int fd)		1640794	0					
ANR	1640796	CompoundStatement		1965:0:57105:57129	1640794	0					
ANR	1640797	ExpressionStatement	MyImage . SetFd ( fd )	1966:1:57108:57127	1640794	0	True				
ANR	1640798	CallExpression	MyImage . SetFd ( fd )		1640794	0					
ANR	1640799	Callee	MyImage . SetFd		1640794	0					
ANR	1640800	MemberAccess	MyImage . SetFd		1640794	0					
ANR	1640801	Identifier	MyImage		1640794	0					
ANR	1640802	Identifier	SetFd		1640794	1					
ANR	1640803	ArgumentList	fd		1640794	1					
ANR	1640804	Argument	fd		1640794	0					
ANR	1640805	Identifier	fd		1640794	0					
ANR	1640806	ReturnType	void		1640794	1					
ANR	1640807	Identifier	init_image_with_file_descriptor		1640794	2					
ANR	1640808	ParameterList	int fd		1640794	3					
ANR	1640809	Parameter	int fd	1964:33:57096:57101	1640794	0	True				
ANR	1640810	ParameterType	int		1640794	0					
ANR	1640811	Identifier	fd		1640794	1					
ANR	1640812	CFGEntryNode	ENTRY		1640794		True				
ANR	1640813	CFGExitNode	EXIT		1640794		True				
ANR	1640814	Symbol	fd		1640794						
ANR	1640815	Symbol	MyImage		1640794						
ANR	1640816	Function	restart	1974:0:57325:57497							
ANR	1640817	FunctionDef	restart ()		1640816	0					
ANR	1640818	CompoundStatement		1976:0:57341:57497	1640816	0					
ANR	1640819	IdentifierDeclStatement	sigset_t mask ;	1977:1:57344:57357	1640816	0	True				
ANR	1640820	IdentifierDecl	mask		1640816	0					
ANR	1640821	IdentifierDeclType	sigset_t		1640816	0					
ANR	1640822	Identifier	mask		1640816	1					
ANR	1640823	ExpressionStatement	sigfillset ( & mask )	1979:1:57361:57380	1640816	1	True				
ANR	1640824	CallExpression	sigfillset ( & mask )		1640816	0					
ANR	1640825	Callee	sigfillset		1640816	0					
ANR	1640826	Identifier	sigfillset		1640816	0					
ANR	1640827	ArgumentList	& mask		1640816	1					
ANR	1640828	Argument	& mask		1640816	0					
ANR	1640829	UnaryOperationExpression	& mask		1640816	0					
ANR	1640830	UnaryOperator	&		1640816	0					
ANR	1640831	Identifier	mask		1640816	1					
ANR	1640832	ExpressionStatement	"sigprocmask ( SIG_SETMASK , & mask , 0 )"	1980:1:57383:57419	1640816	2	True				
ANR	1640833	CallExpression	"sigprocmask ( SIG_SETMASK , & mask , 0 )"		1640816	0					
ANR	1640834	Callee	sigprocmask		1640816	0					
ANR	1640835	Identifier	sigprocmask		1640816	0					
ANR	1640836	ArgumentList	SIG_SETMASK		1640816	1					
ANR	1640837	Argument	SIG_SETMASK		1640816	0					
ANR	1640838	Identifier	SIG_SETMASK		1640816	0					
ANR	1640839	Argument	& mask		1640816	1					
ANR	1640840	UnaryOperationExpression	& mask		1640816	0					
ANR	1640841	UnaryOperator	&		1640816	0					
ANR	1640842	Identifier	mask		1640816	1					
ANR	1640843	Argument	0		1640816	2					
ANR	1640844	PrimaryExpression	0		1640816	0					
ANR	1640845	ExpressionStatement	InRestart = TRUE	1982:1:57423:57439	1640816	3	True				
ANR	1640846	AssignmentExpression	InRestart = TRUE		1640816	0		=			
ANR	1640847	Identifier	InRestart		1640816	0					
ANR	1640848	Identifier	TRUE		1640816	1					
ANR	1640849	IfStatement	if ( MyImage . Read ( ) < 0 )		1640816	4					
ANR	1640850	Condition	MyImage . Read ( ) < 0	1983:5:57446:57463	1640816	0	True				
ANR	1640851	RelationalExpression	MyImage . Read ( ) < 0		1640816	0		<			
ANR	1640852	CallExpression	MyImage . Read ( )		1640816	0					
ANR	1640853	Callee	MyImage . Read		1640816	0					
ANR	1640854	MemberAccess	MyImage . Read		1640816	0					
ANR	1640855	Identifier	MyImage		1640816	0					
ANR	1640856	Identifier	Read		1640816	1					
ANR	1640857	ArgumentList			1640816	1					
ANR	1640858	PrimaryExpression	0		1640816	1					
ANR	1640859	ExpressionStatement	Suicide ( )	1983:25:57466:57475	1640816	1	True				
ANR	1640860	CallExpression	Suicide ( )		1640816	0					
ANR	1640861	Callee	Suicide		1640816	0					
ANR	1640862	Identifier	Suicide		1640816	0					
ANR	1640863	ArgumentList			1640816	1					
ANR	1640864	ExpressionStatement	MyImage . Restore ( )	1984:1:57478:57495	1640816	5	True				
ANR	1640865	CallExpression	MyImage . Restore ( )		1640816	0					
ANR	1640866	Callee	MyImage . Restore		1640816	0					
ANR	1640867	MemberAccess	MyImage . Restore		1640816	0					
ANR	1640868	Identifier	MyImage		1640816	0					
ANR	1640869	Identifier	Restore		1640816	1					
ANR	1640870	ArgumentList			1640816	1					
ANR	1640871	ReturnType	void		1640816	1					
ANR	1640872	Identifier	restart		1640816	2					
ANR	1640873	ParameterList			1640816	3					
ANR	1640874	CFGEntryNode	ENTRY		1640816		True				
ANR	1640875	CFGExitNode	EXIT		1640816		True				
ANR	1640876	Symbol	InRestart		1640816						
ANR	1640877	Symbol	MyImage . Read		1640816						
ANR	1640878	Symbol	& mask		1640816						
ANR	1640879	Symbol	SIG_SETMASK		1640816						
ANR	1640880	Symbol	TRUE		1640816						
ANR	1640881	Symbol	MyImage		1640816						
ANR	1640882	Symbol	mask		1640816						
ANR	1640883	Function	ckpt	1998:0:57734:57924							
ANR	1640884	FunctionDef	ckpt ()		1640883	0					
ANR	1640885	CompoundStatement		2000:0:57746:57924	1640883	0					
ANR	1640886	IdentifierDeclStatement	int scm ;	2001:1:57749:57757	1640883	0	True				
ANR	1640887	IdentifierDecl	scm		1640883	0					
ANR	1640888	IdentifierDeclType	int		1640883	0					
ANR	1640889	Identifier	scm		1640883	1					
ANR	1640890	ExpressionStatement	"dprintf ( D_ALWAYS , ""About to send CHECKPOINT signal to SELF\\n"" )"	2003:1:57761:57825	1640883	1	True				
ANR	1640891	CallExpression	"dprintf ( D_ALWAYS , ""About to send CHECKPOINT signal to SELF\\n"" )"		1640883	0					
ANR	1640892	Callee	dprintf		1640883	0					
ANR	1640893	Identifier	dprintf		1640883	0					
ANR	1640894	ArgumentList	D_ALWAYS		1640883	1					
ANR	1640895	Argument	D_ALWAYS		1640883	0					
ANR	1640896	Identifier	D_ALWAYS		1640883	0					
ANR	1640897	Argument	"""About to send CHECKPOINT signal to SELF\\n"""		1640883	1					
ANR	1640898	PrimaryExpression	"""About to send CHECKPOINT signal to SELF\\n"""		1640883	0					
ANR	1640899	ExpressionStatement	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )	2004:1:57828:57873	1640883	2	True				
ANR	1640900	AssignmentExpression	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		1640883	0		=			
ANR	1640901	Identifier	scm		1640883	0					
ANR	1640902	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		1640883	1					
ANR	1640903	Callee	SetSyscalls		1640883	0					
ANR	1640904	Identifier	SetSyscalls		1640883	0					
ANR	1640905	ArgumentList	SYS_LOCAL | SYS_UNMAPPED		1640883	1					
ANR	1640906	Argument	SYS_LOCAL | SYS_UNMAPPED		1640883	0					
ANR	1640907	InclusiveOrExpression	SYS_LOCAL | SYS_UNMAPPED		1640883	0		|			
ANR	1640908	Identifier	SYS_LOCAL		1640883	0					
ANR	1640909	Identifier	SYS_UNMAPPED		1640883	1					
ANR	1640910	ExpressionStatement	"kill ( getpid ( ) , SIGUSR2 )"	2005:1:57876:57901	1640883	3	True				
ANR	1640911	CallExpression	"kill ( getpid ( ) , SIGUSR2 )"		1640883	0					
ANR	1640912	Callee	kill		1640883	0					
ANR	1640913	Identifier	kill		1640883	0					
ANR	1640914	ArgumentList	getpid ( )		1640883	1					
ANR	1640915	Argument	getpid ( )		1640883	0					
ANR	1640916	CallExpression	getpid ( )		1640883	0					
ANR	1640917	Callee	getpid		1640883	0					
ANR	1640918	Identifier	getpid		1640883	0					
ANR	1640919	ArgumentList			1640883	1					
ANR	1640920	Argument	SIGUSR2		1640883	1					
ANR	1640921	Identifier	SIGUSR2		1640883	0					
ANR	1640922	ExpressionStatement	SetSyscalls ( scm )	2006:1:57904:57922	1640883	4	True				
ANR	1640923	CallExpression	SetSyscalls ( scm )		1640883	0					
ANR	1640924	Callee	SetSyscalls		1640883	0					
ANR	1640925	Identifier	SetSyscalls		1640883	0					
ANR	1640926	ArgumentList	scm		1640883	1					
ANR	1640927	Argument	scm		1640883	0					
ANR	1640928	Identifier	scm		1640883	0					
ANR	1640929	ReturnType	void		1640883	1					
ANR	1640930	Identifier	ckpt		1640883	2					
ANR	1640931	ParameterList			1640883	3					
ANR	1640932	CFGEntryNode	ENTRY		1640883		True				
ANR	1640933	CFGExitNode	EXIT		1640883		True				
ANR	1640934	Symbol	SYS_UNMAPPED		1640883						
ANR	1640935	Symbol	SYS_LOCAL		1640883						
ANR	1640936	Symbol	D_ALWAYS		1640883						
ANR	1640937	Symbol	SIGUSR2		1640883						
ANR	1640938	Symbol	SetSyscalls		1640883						
ANR	1640939	Symbol	scm		1640883						
ANR	1640940	Symbol	getpid		1640883						
ANR	1640941	Function	ckpt_and_exit	2008:0:57926:58134							
ANR	1640942	FunctionDef	ckpt_and_exit ()		1640941	0					
ANR	1640943	CompoundStatement		2010:0:57947:58134	1640941	0					
ANR	1640944	IdentifierDeclStatement	int scm ;	2011:1:57950:57958	1640941	0	True				
ANR	1640945	IdentifierDecl	scm		1640941	0					
ANR	1640946	IdentifierDeclType	int		1640941	0					
ANR	1640947	Identifier	scm		1640941	1					
ANR	1640948	ExpressionStatement	"dprintf ( D_ALWAYS , ""About to send CHECKPOINT and EXIT signal to SELF\\n"" )"	2013:1:57962:58035	1640941	1	True				
ANR	1640949	CallExpression	"dprintf ( D_ALWAYS , ""About to send CHECKPOINT and EXIT signal to SELF\\n"" )"		1640941	0					
ANR	1640950	Callee	dprintf		1640941	0					
ANR	1640951	Identifier	dprintf		1640941	0					
ANR	1640952	ArgumentList	D_ALWAYS		1640941	1					
ANR	1640953	Argument	D_ALWAYS		1640941	0					
ANR	1640954	Identifier	D_ALWAYS		1640941	0					
ANR	1640955	Argument	"""About to send CHECKPOINT and EXIT signal to SELF\\n"""		1640941	1					
ANR	1640956	PrimaryExpression	"""About to send CHECKPOINT and EXIT signal to SELF\\n"""		1640941	0					
ANR	1640957	ExpressionStatement	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )	2014:1:58038:58083	1640941	2	True				
ANR	1640958	AssignmentExpression	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		1640941	0		=			
ANR	1640959	Identifier	scm		1640941	0					
ANR	1640960	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		1640941	1					
ANR	1640961	Callee	SetSyscalls		1640941	0					
ANR	1640962	Identifier	SetSyscalls		1640941	0					
ANR	1640963	ArgumentList	SYS_LOCAL | SYS_UNMAPPED		1640941	1					
ANR	1640964	Argument	SYS_LOCAL | SYS_UNMAPPED		1640941	0					
ANR	1640965	InclusiveOrExpression	SYS_LOCAL | SYS_UNMAPPED		1640941	0		|			
ANR	1640966	Identifier	SYS_LOCAL		1640941	0					
ANR	1640967	Identifier	SYS_UNMAPPED		1640941	1					
ANR	1640968	ExpressionStatement	"kill ( getpid ( ) , SIGTSTP )"	2015:1:58086:58111	1640941	3	True				
ANR	1640969	CallExpression	"kill ( getpid ( ) , SIGTSTP )"		1640941	0					
ANR	1640970	Callee	kill		1640941	0					
ANR	1640971	Identifier	kill		1640941	0					
ANR	1640972	ArgumentList	getpid ( )		1640941	1					
ANR	1640973	Argument	getpid ( )		1640941	0					
ANR	1640974	CallExpression	getpid ( )		1640941	0					
ANR	1640975	Callee	getpid		1640941	0					
ANR	1640976	Identifier	getpid		1640941	0					
ANR	1640977	ArgumentList			1640941	1					
ANR	1640978	Argument	SIGTSTP		1640941	1					
ANR	1640979	Identifier	SIGTSTP		1640941	0					
ANR	1640980	ExpressionStatement	SetSyscalls ( scm )	2016:1:58114:58132	1640941	4	True				
ANR	1640981	CallExpression	SetSyscalls ( scm )		1640941	0					
ANR	1640982	Callee	SetSyscalls		1640941	0					
ANR	1640983	Identifier	SetSyscalls		1640941	0					
ANR	1640984	ArgumentList	scm		1640941	1					
ANR	1640985	Argument	scm		1640941	0					
ANR	1640986	Identifier	scm		1640941	0					
ANR	1640987	ReturnType	void		1640941	1					
ANR	1640988	Identifier	ckpt_and_exit		1640941	2					
ANR	1640989	ParameterList			1640941	3					
ANR	1640990	CFGEntryNode	ENTRY		1640941		True				
ANR	1640991	CFGExitNode	EXIT		1640941		True				
ANR	1640992	Symbol	SYS_UNMAPPED		1640941						
ANR	1640993	Symbol	SYS_LOCAL		1640941						
ANR	1640994	Symbol	D_ALWAYS		1640941						
ANR	1640995	Symbol	SetSyscalls		1640941						
ANR	1640996	Symbol	SIGTSTP		1640941						
ANR	1640997	Symbol	scm		1640941						
ANR	1640998	Symbol	getpid		1640941						
ANR	1640999	Function	ckpt_	2022:0:58203:58227							
ANR	1641000	FunctionDef	ckpt_ ()		1640999	0					
ANR	1641001	CompoundStatement		2023:8:58216:58227	1640999	0					
ANR	1641002	ExpressionStatement	ckpt ( )	2024:1:58219:58225	1640999	0	True				
ANR	1641003	CallExpression	ckpt ( )		1640999	0					
ANR	1641004	Callee	ckpt		1640999	0					
ANR	1641005	Identifier	ckpt		1640999	0					
ANR	1641006	ArgumentList			1640999	1					
ANR	1641007	ReturnType	void		1640999	1					
ANR	1641008	Identifier	ckpt_		1640999	2					
ANR	1641009	ParameterList			1640999	3					
ANR	1641010	CFGEntryNode	ENTRY		1640999		True				
ANR	1641011	CFGExitNode	EXIT		1640999		True				
ANR	1641012	Function	ckpt_and_exit_	2026:0:58229:58271							
ANR	1641013	FunctionDef	ckpt_and_exit_ ()		1641012	0					
ANR	1641014	CompoundStatement		2027:17:58251:58271	1641012	0					
ANR	1641015	ExpressionStatement	ckpt_and_exit ( )	2028:1:58254:58269	1641012	0	True				
ANR	1641016	CallExpression	ckpt_and_exit ( )		1641012	0					
ANR	1641017	Callee	ckpt_and_exit		1641012	0					
ANR	1641018	Identifier	ckpt_and_exit		1641012	0					
ANR	1641019	ArgumentList			1641012	1					
ANR	1641020	ReturnType	void		1641012	1					
ANR	1641021	Identifier	ckpt_and_exit_		1641012	2					
ANR	1641022	ParameterList			1641012	3					
ANR	1641023	CFGEntryNode	ENTRY		1641012		True				
ANR	1641024	CFGExitNode	EXIT		1641012		True				
ANR	1641025	Function	ckpt__	2035:0:58335:58360							
ANR	1641026	FunctionDef	ckpt__ ()		1641025	0					
ANR	1641027	CompoundStatement		2036:0:58349:58360	1641025	0					
ANR	1641028	ExpressionStatement	ckpt ( )	2037:1:58352:58358	1641025	0	True				
ANR	1641029	CallExpression	ckpt ( )		1641025	0					
ANR	1641030	Callee	ckpt		1641025	0					
ANR	1641031	Identifier	ckpt		1641025	0					
ANR	1641032	ArgumentList			1641025	1					
ANR	1641033	ReturnType	void		1641025	1					
ANR	1641034	Identifier	ckpt__		1641025	2					
ANR	1641035	ParameterList			1641025	3					
ANR	1641036	CFGEntryNode	ENTRY		1641025		True				
ANR	1641037	CFGExitNode	EXIT		1641025		True				
ANR	1641038	Function	ckpt_and_exit__	2040:0:58363:58406							
ANR	1641039	FunctionDef	ckpt_and_exit__ ()		1641038	0					
ANR	1641040	CompoundStatement		2041:0:58386:58406	1641038	0					
ANR	1641041	ExpressionStatement	ckpt_and_exit ( )	2042:1:58389:58404	1641038	0	True				
ANR	1641042	CallExpression	ckpt_and_exit ( )		1641038	0					
ANR	1641043	Callee	ckpt_and_exit		1641038	0					
ANR	1641044	Identifier	ckpt_and_exit		1641038	0					
ANR	1641045	ArgumentList			1641038	1					
ANR	1641046	ReturnType	void		1641038	1					
ANR	1641047	Identifier	ckpt_and_exit__		1641038	2					
ANR	1641048	ParameterList			1641038	3					
ANR	1641049	CFGEntryNode	ENTRY		1641038		True				
ANR	1641050	CFGExitNode	EXIT		1641038		True				
ANR	1641051	Function	sleep_syscall	2049:0:58477:59020							
ANR	1641052	FunctionDef	sleep_syscall (int seconds)		1641051	0					
ANR	1641053	CompoundStatement		2050:0:58509:59020	1641051	0					
ANR	1641054	ExpressionStatement	"SYSCALL ( SYS_sleep , seconds )"	2053:1:58536:58563	1641051	0	True				
ANR	1641055	CallExpression	"SYSCALL ( SYS_sleep , seconds )"		1641051	0					
ANR	1641056	Callee	SYSCALL		1641051	0					
ANR	1641057	Identifier	SYSCALL		1641051	0					
ANR	1641058	ArgumentList	SYS_sleep		1641051	1					
ANR	1641059	Argument	SYS_sleep		1641051	0					
ANR	1641060	Identifier	SYS_sleep		1641051	0					
ANR	1641061	Argument	seconds		1641051	1					
ANR	1641062	Identifier	seconds		1641051	0					
ANR	1641063	ReturnType	void		1641051	1					
ANR	1641064	Identifier	sleep_syscall		1641051	2					
ANR	1641065	ParameterList	int seconds		1641051	3					
ANR	1641066	Parameter	int seconds	2049:19:58496:58506	1641051	0	True				
ANR	1641067	ParameterType	int		1641051	0					
ANR	1641068	Identifier	seconds		1641051	1					
ANR	1641069	CFGEntryNode	ENTRY		1641051		True				
ANR	1641070	CFGExitNode	EXIT		1641051		True				
ANR	1641071	Symbol	seconds		1641051						
ANR	1641072	Symbol	SYS_sleep		1641051						
ANR	1641073	Function	terminate_with_sig	2080:0:59241:61472							
ANR	1641074	FunctionDef	terminate_with_sig (int sig)		1641073	0					
ANR	1641075	CompoundStatement		2082:0:59276:61472	1641073	0					
ANR	1641076	IdentifierDeclStatement	sigset_t mask ;	2083:1:59279:59292	1641073	0	True				
ANR	1641077	IdentifierDecl	mask		1641073	0					
ANR	1641078	IdentifierDeclType	sigset_t		1641073	0					
ANR	1641079	Identifier	mask		1641073	1					
ANR	1641080	IdentifierDeclStatement	pid_t my_pid ;	2084:1:59295:59308	1641073	1	True				
ANR	1641081	IdentifierDecl	my_pid		1641073	0					
ANR	1641082	IdentifierDeclType	pid_t		1641073	0					
ANR	1641083	Identifier	my_pid		1641073	1					
ANR	1641084	IdentifierDeclStatement	struct sigaction act ;	2085:1:59311:59331	1641073	2	True				
ANR	1641085	IdentifierDecl	act		1641073	0					
ANR	1641086	IdentifierDeclType	struct sigaction		1641073	0					
ANR	1641087	Identifier	act		1641073	1					
ANR	1641088	IfStatement	if ( ! InRestart )		1641073	3					
ANR	1641089	Condition	! InRestart	2094:5:59722:59731	1641073	0	True				
ANR	1641090	UnaryOperationExpression	! InRestart		1641073	0					
ANR	1641091	UnaryOperator	!		1641073	0					
ANR	1641092	Identifier	InRestart		1641073	1					
ANR	1641093	ExpressionStatement	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )	2094:17:59734:59773	1641073	1	True				
ANR	1641094	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		1641073	0					
ANR	1641095	Callee	SetSyscalls		1641073	0					
ANR	1641096	Identifier	SetSyscalls		1641073	0					
ANR	1641097	ArgumentList	SYS_LOCAL | SYS_UNMAPPED		1641073	1					
ANR	1641098	Argument	SYS_LOCAL | SYS_UNMAPPED		1641073	0					
ANR	1641099	InclusiveOrExpression	SYS_LOCAL | SYS_UNMAPPED		1641073	0		|			
ANR	1641100	Identifier	SYS_LOCAL		1641073	0					
ANR	1641101	Identifier	SYS_UNMAPPED		1641073	1					
ANR	1641102	IfStatement	if ( sig != SIGKILL && sig != SIGSTOP )		1641073	4					
ANR	1641103	Condition	sig != SIGKILL && sig != SIGSTOP	2097:5:59844:59875	1641073	0	True				
ANR	1641104	AndExpression	sig != SIGKILL && sig != SIGSTOP		1641073	0		&&			
ANR	1641105	EqualityExpression	sig != SIGKILL		1641073	0		!=			
ANR	1641106	Identifier	sig		1641073	0					
ANR	1641107	Identifier	SIGKILL		1641073	1					
ANR	1641108	EqualityExpression	sig != SIGSTOP		1641073	1		!=			
ANR	1641109	Identifier	sig		1641073	0					
ANR	1641110	Identifier	SIGSTOP		1641073	1					
ANR	1641111	CompoundStatement		16:40:602:602	1641073	1					
ANR	1641112	ExpressionStatement	act . sa_handler = ( SIG_HANDLER ) SIG_DFL	2098:2:59883:59920	1641073	0	True				
ANR	1641113	AssignmentExpression	act . sa_handler = ( SIG_HANDLER ) SIG_DFL		1641073	0		=			
ANR	1641114	MemberAccess	act . sa_handler		1641073	0					
ANR	1641115	Identifier	act		1641073	0					
ANR	1641116	Identifier	sa_handler		1641073	1					
ANR	1641117	CastExpression	( SIG_HANDLER ) SIG_DFL		1641073	1					
ANR	1641118	CastTarget	SIG_HANDLER		1641073	0					
ANR	1641119	Identifier	SIG_DFL		1641073	1					
ANR	1641120	ExpressionStatement	sigfillset ( & act . sa_mask )	2100:2:59979:60005	1641073	1	True				
ANR	1641121	CallExpression	sigfillset ( & act . sa_mask )		1641073	0					
ANR	1641122	Callee	sigfillset		1641073	0					
ANR	1641123	Identifier	sigfillset		1641073	0					
ANR	1641124	ArgumentList	& act . sa_mask		1641073	1					
ANR	1641125	Argument	& act . sa_mask		1641073	0					
ANR	1641126	UnaryOperationExpression	& act . sa_mask		1641073	0					
ANR	1641127	UnaryOperator	&		1641073	0					
ANR	1641128	MemberAccess	act . sa_mask		1641073	1					
ANR	1641129	Identifier	act		1641073	0					
ANR	1641130	Identifier	sa_mask		1641073	1					
ANR	1641131	ExpressionStatement	act . sa_flags = 0	2101:2:60009:60025	1641073	2	True				
ANR	1641132	AssignmentExpression	act . sa_flags = 0		1641073	0		=			
ANR	1641133	MemberAccess	act . sa_flags		1641073	0					
ANR	1641134	Identifier	act		1641073	0					
ANR	1641135	Identifier	sa_flags		1641073	1					
ANR	1641136	PrimaryExpression	0		1641073	1					
ANR	1641137	ExpressionStatement	errno = 0	2102:2:60029:60038	1641073	3	True				
ANR	1641138	AssignmentExpression	errno = 0		1641073	0		=			
ANR	1641139	Identifier	errno		1641073	0					
ANR	1641140	PrimaryExpression	0		1641073	1					
ANR	1641141	IfStatement	"if ( sigaction ( sig , & act , 0 ) < 0 )"		1641073	4					
ANR	1641142	Condition	"sigaction ( sig , & act , 0 ) < 0"	2103:6:60046:60070	1641073	0	True				
ANR	1641143	RelationalExpression	"sigaction ( sig , & act , 0 ) < 0"		1641073	0		<			
ANR	1641144	CallExpression	"sigaction ( sig , & act , 0 )"		1641073	0					
ANR	1641145	Callee	sigaction		1641073	0					
ANR	1641146	Identifier	sigaction		1641073	0					
ANR	1641147	ArgumentList	sig		1641073	1					
ANR	1641148	Argument	sig		1641073	0					
ANR	1641149	Identifier	sig		1641073	0					
ANR	1641150	Argument	& act		1641073	1					
ANR	1641151	UnaryOperationExpression	& act		1641073	0					
ANR	1641152	UnaryOperator	&		1641073	0					
ANR	1641153	Identifier	act		1641073	1					
ANR	1641154	Argument	0		1641073	2					
ANR	1641155	PrimaryExpression	0		1641073	0					
ANR	1641156	PrimaryExpression	0		1641073	1					
ANR	1641157	CompoundStatement		22:34:797:797	1641073	1					
ANR	1641158	IfStatement	if ( ! InRestart )		1641073	0					
ANR	1641159	Condition	! InRestart	2104:7:60083:60092	1641073	0	True				
ANR	1641160	UnaryOperationExpression	! InRestart		1641073	0					
ANR	1641161	UnaryOperator	!		1641073	0					
ANR	1641162	Identifier	InRestart		1641073	1					
ANR	1641163	ExpressionStatement	"dprintf ( D_ALWAYS , ""sigaction: %s\\n"" , strerror ( errno ) )"	2104:19:60095:60157	1641073	1	True				
ANR	1641164	CallExpression	"dprintf ( D_ALWAYS , ""sigaction: %s\\n"" , strerror ( errno ) )"		1641073	0					
ANR	1641165	Callee	dprintf		1641073	0					
ANR	1641166	Identifier	dprintf		1641073	0					
ANR	1641167	ArgumentList	D_ALWAYS		1641073	1					
ANR	1641168	Argument	D_ALWAYS		1641073	0					
ANR	1641169	Identifier	D_ALWAYS		1641073	0					
ANR	1641170	Argument	"""sigaction: %s\\n"""		1641073	1					
ANR	1641171	PrimaryExpression	"""sigaction: %s\\n"""		1641073	0					
ANR	1641172	Argument	strerror ( errno )		1641073	2					
ANR	1641173	CallExpression	strerror ( errno )		1641073	0					
ANR	1641174	Callee	strerror		1641073	0					
ANR	1641175	Identifier	strerror		1641073	0					
ANR	1641176	ArgumentList	errno		1641073	1					
ANR	1641177	Argument	errno		1641073	0					
ANR	1641178	Identifier	errno		1641073	0					
ANR	1641179	ExpressionStatement	Suicide ( )	2106:3:60162:60171	1641073	1	True				
ANR	1641180	CallExpression	Suicide ( )		1641073	0					
ANR	1641181	Callee	Suicide		1641073	0					
ANR	1641182	Identifier	Suicide		1641073	0					
ANR	1641183	ArgumentList			1641073	1					
ANR	1641184	ExpressionStatement	my_pid = SYSCALL ( SYS_getpid )	2111:1:60211:60239	1641073	5	True				
ANR	1641185	AssignmentExpression	my_pid = SYSCALL ( SYS_getpid )		1641073	0		=			
ANR	1641186	Identifier	my_pid		1641073	0					
ANR	1641187	CallExpression	SYSCALL ( SYS_getpid )		1641073	1					
ANR	1641188	Callee	SYSCALL		1641073	0					
ANR	1641189	Identifier	SYSCALL		1641073	0					
ANR	1641190	ArgumentList	SYS_getpid		1641073	1					
ANR	1641191	Argument	SYS_getpid		1641073	0					
ANR	1641192	Identifier	SYS_getpid		1641073	0					
ANR	1641193	IfStatement	if ( ! InRestart )		1641073	6					
ANR	1641194	Condition	! InRestart	2112:5:60246:60255	1641073	0	True				
ANR	1641195	UnaryOperationExpression	! InRestart		1641073	0					
ANR	1641196	UnaryOperator	!		1641073	0					
ANR	1641197	Identifier	InRestart		1641073	1					
ANR	1641198	CompoundStatement		31:17:981:981	1641073	1					
ANR	1641199	ExpressionStatement	"dprintf ( D_ALWAYS , ""About to send signal %d to process %d\\n"" , sig , my_pid )"	2113:2:60262:60341	1641073	0	True				
ANR	1641200	CallExpression	"dprintf ( D_ALWAYS , ""About to send signal %d to process %d\\n"" , sig , my_pid )"		1641073	0					
ANR	1641201	Callee	dprintf		1641073	0					
ANR	1641202	Identifier	dprintf		1641073	0					
ANR	1641203	ArgumentList	D_ALWAYS		1641073	1					
ANR	1641204	Argument	D_ALWAYS		1641073	0					
ANR	1641205	Identifier	D_ALWAYS		1641073	0					
ANR	1641206	Argument	"""About to send signal %d to process %d\\n"""		1641073	1					
ANR	1641207	PrimaryExpression	"""About to send signal %d to process %d\\n"""		1641073	0					
ANR	1641208	Argument	sig		1641073	2					
ANR	1641209	Identifier	sig		1641073	0					
ANR	1641210	Argument	my_pid		1641073	3					
ANR	1641211	Identifier	my_pid		1641073	0					
ANR	1641212	ExpressionStatement	sleep_syscall ( 1 )	2122:1:60694:60710	1641073	7	True				
ANR	1641213	CallExpression	sleep_syscall ( 1 )		1641073	0					
ANR	1641214	Callee	sleep_syscall		1641073	0					
ANR	1641215	Identifier	sleep_syscall		1641073	0					
ANR	1641216	ArgumentList	1		1641073	1					
ANR	1641217	Argument	1		1641073	0					
ANR	1641218	PrimaryExpression	1		1641073	0					
ANR	1641219	IfStatement	"if ( SYSCALL ( SYS_kill , my_pid , sig ) < 0 )"		1641073	8					
ANR	1641220	Condition	"SYSCALL ( SYS_kill , my_pid , sig ) < 0"	2124:5:60718:60751	1641073	0	True				
ANR	1641221	RelationalExpression	"SYSCALL ( SYS_kill , my_pid , sig ) < 0"		1641073	0		<			
ANR	1641222	CallExpression	"SYSCALL ( SYS_kill , my_pid , sig )"		1641073	0					
ANR	1641223	Callee	SYSCALL		1641073	0					
ANR	1641224	Identifier	SYSCALL		1641073	0					
ANR	1641225	ArgumentList	SYS_kill		1641073	1					
ANR	1641226	Argument	SYS_kill		1641073	0					
ANR	1641227	Identifier	SYS_kill		1641073	0					
ANR	1641228	Argument	my_pid		1641073	1					
ANR	1641229	Identifier	my_pid		1641073	0					
ANR	1641230	Argument	sig		1641073	2					
ANR	1641231	Identifier	sig		1641073	0					
ANR	1641232	PrimaryExpression	0		1641073	1					
ANR	1641233	CompoundStatement		43:42:1478:1478	1641073	1					
ANR	1641234	ExpressionStatement	"EXCEPT ( ""kill"" )"	2125:2:60759:60775	1641073	0	True				
ANR	1641235	CallExpression	"EXCEPT ( ""kill"" )"		1641073	0					
ANR	1641236	Callee	EXCEPT		1641073	0					
ANR	1641237	Identifier	EXCEPT		1641073	0					
ANR	1641238	ArgumentList	"""kill"""		1641073	1					
ANR	1641239	Argument	"""kill"""		1641073	0					
ANR	1641240	PrimaryExpression	"""kill"""		1641073	0					
ANR	1641241	IfStatement	if ( sig != SIGKILL && sig != SIGSTOP )		1641073	9					
ANR	1641242	Condition	sig != SIGKILL && sig != SIGSTOP	2135:5:61272:61303	1641073	0	True				
ANR	1641243	AndExpression	sig != SIGKILL && sig != SIGSTOP		1641073	0		&&			
ANR	1641244	EqualityExpression	sig != SIGKILL		1641073	0		!=			
ANR	1641245	Identifier	sig		1641073	0					
ANR	1641246	Identifier	SIGKILL		1641073	1					
ANR	1641247	EqualityExpression	sig != SIGSTOP		1641073	1		!=			
ANR	1641248	Identifier	sig		1641073	0					
ANR	1641249	Identifier	SIGSTOP		1641073	1					
ANR	1641250	CompoundStatement		54:40:2030:2030	1641073	1					
ANR	1641251	ExpressionStatement	sigfillset ( & mask )	2136:2:61311:61330	1641073	0	True				
ANR	1641252	CallExpression	sigfillset ( & mask )		1641073	0					
ANR	1641253	Callee	sigfillset		1641073	0					
ANR	1641254	Identifier	sigfillset		1641073	0					
ANR	1641255	ArgumentList	& mask		1641073	1					
ANR	1641256	Argument	& mask		1641073	0					
ANR	1641257	UnaryOperationExpression	& mask		1641073	0					
ANR	1641258	UnaryOperator	&		1641073	0					
ANR	1641259	Identifier	mask		1641073	1					
ANR	1641260	ExpressionStatement	"sigdelset ( & mask , sig )"	2137:2:61334:61357	1641073	1	True				
ANR	1641261	CallExpression	"sigdelset ( & mask , sig )"		1641073	0					
ANR	1641262	Callee	sigdelset		1641073	0					
ANR	1641263	Identifier	sigdelset		1641073	0					
ANR	1641264	ArgumentList	& mask		1641073	1					
ANR	1641265	Argument	& mask		1641073	0					
ANR	1641266	UnaryOperationExpression	& mask		1641073	0					
ANR	1641267	UnaryOperator	&		1641073	0					
ANR	1641268	Identifier	mask		1641073	1					
ANR	1641269	Argument	sig		1641073	1					
ANR	1641270	Identifier	sig		1641073	0					
ANR	1641271	ExpressionStatement	sigsuspend ( & mask )	2138:2:61361:61380	1641073	2	True				
ANR	1641272	CallExpression	sigsuspend ( & mask )		1641073	0					
ANR	1641273	Callee	sigsuspend		1641073	0					
ANR	1641274	Identifier	sigsuspend		1641073	0					
ANR	1641275	ArgumentList	& mask		1641073	1					
ANR	1641276	Argument	& mask		1641073	0					
ANR	1641277	UnaryOperationExpression	& mask		1641073	0					
ANR	1641278	UnaryOperator	&		1641073	0					
ANR	1641279	Identifier	mask		1641073	1					
ANR	1641280	ElseStatement	else		1641073	0					
ANR	1641281	CompoundStatement		58:8:2113:2113	1641073	0					
ANR	1641282	WhileStatement	while ( 1 )		1641073	0					
ANR	1641283	Condition	1	2140:8:61400:61400	1641073	0	True				
ANR	1641284	PrimaryExpression	1		1641073	0					
ANR	1641285	ExpressionStatement		2140:10:61402:61402	1641073	1	True				
ANR	1641286	ExpressionStatement	"EXCEPT ( ""Should never get here"" )"	2144:1:61436:61469	1641073	10	True				
ANR	1641287	CallExpression	"EXCEPT ( ""Should never get here"" )"		1641073	0					
ANR	1641288	Callee	EXCEPT		1641073	0					
ANR	1641289	Identifier	EXCEPT		1641073	0					
ANR	1641290	ArgumentList	"""Should never get here"""		1641073	1					
ANR	1641291	Argument	"""Should never get here"""		1641073	0					
ANR	1641292	PrimaryExpression	"""Should never get here"""		1641073	0					
ANR	1641293	ReturnType	void		1641073	1					
ANR	1641294	Identifier	terminate_with_sig		1641073	2					
ANR	1641295	ParameterList	int sig		1641073	3					
ANR	1641296	Parameter	int sig	2081:20:59266:59272	1641073	0	True				
ANR	1641297	ParameterType	int		1641073	0					
ANR	1641298	Identifier	sig		1641073	1					
ANR	1641299	CFGEntryNode	ENTRY		1641073		True				
ANR	1641300	CFGExitNode	EXIT		1641073		True				
ANR	1641301	Symbol	InRestart		1641073						
ANR	1641302	Symbol	errno		1641073						
ANR	1641303	Symbol	SYS_UNMAPPED		1641073						
ANR	1641304	Symbol	& act . sa_mask		1641073						
ANR	1641305	Symbol	D_ALWAYS		1641073						
ANR	1641306	Symbol	& mask		1641073						
ANR	1641307	Symbol	SYS_kill		1641073						
ANR	1641308	Symbol	act . sa_flags		1641073						
ANR	1641309	Symbol	SIGKILL		1641073						
ANR	1641310	Symbol	sigaction		1641073						
ANR	1641311	Symbol	my_pid		1641073						
ANR	1641312	Symbol	sig		1641073						
ANR	1641313	Symbol	strerror		1641073						
ANR	1641314	Symbol	act . sa_handler		1641073						
ANR	1641315	Symbol	act		1641073						
ANR	1641316	Symbol	SYS_getpid		1641073						
ANR	1641317	Symbol	SIGSTOP		1641073						
ANR	1641318	Symbol	SYS_LOCAL		1641073						
ANR	1641319	Symbol	SIG_DFL		1641073						
ANR	1641320	Symbol	SYSCALL		1641073						
ANR	1641321	Symbol	mask		1641073						
ANR	1641322	Symbol	& act		1641073						
ANR	1641323	Function	Suicide	2152:0:61575:61624							
ANR	1641324	FunctionDef	Suicide ()		1641323	0					
ANR	1641325	CompoundStatement		2154:0:61590:61624	1641323	0					
ANR	1641326	ExpressionStatement	terminate_with_sig ( SIGKILL )	2155:1:61593:61622	1641323	0	True				
ANR	1641327	CallExpression	terminate_with_sig ( SIGKILL )		1641323	0					
ANR	1641328	Callee	terminate_with_sig		1641323	0					
ANR	1641329	Identifier	terminate_with_sig		1641323	0					
ANR	1641330	ArgumentList	SIGKILL		1641323	1					
ANR	1641331	Argument	SIGKILL		1641323	0					
ANR	1641332	Identifier	SIGKILL		1641323	0					
ANR	1641333	ReturnType	void		1641323	1					
ANR	1641334	Identifier	Suicide		1641323	2					
ANR	1641335	ParameterList			1641323	3					
ANR	1641336	CFGEntryNode	ENTRY		1641323		True				
ANR	1641337	CFGExitNode	EXIT		1641323		True				
ANR	1641338	Symbol	SIGKILL		1641323						
ANR	1641339	Function	find_stack_location	2158:0:61627:62010							
ANR	1641340	FunctionDef	"find_stack_location (RAW_ADDR & start , RAW_ADDR & end)"		1641339	0					
ANR	1641341	CompoundStatement		2160:0:61693:62010	1641339	0					
ANR	1641342	IfStatement	if ( SP_in_data_area ( ) )		1641339	0					
ANR	1641343	Condition	SP_in_data_area ( )	2161:5:61700:61716	1641339	0	True				
ANR	1641344	CallExpression	SP_in_data_area ( )		1641339	0					
ANR	1641345	Callee	SP_in_data_area		1641339	0					
ANR	1641346	Identifier	SP_in_data_area		1641339	0					
ANR	1641347	ArgumentList			1641339	1					
ANR	1641348	CompoundStatement		2:25:26:26	1641339	1					
ANR	1641349	ExpressionStatement	"dprintf ( D_ALWAYS , ""Stack pointer in data area\\n"" )"	2162:2:61724:61775	1641339	0	True				
ANR	1641350	CallExpression	"dprintf ( D_ALWAYS , ""Stack pointer in data area\\n"" )"		1641339	0					
ANR	1641351	Callee	dprintf		1641339	0					
ANR	1641352	Identifier	dprintf		1641339	0					
ANR	1641353	ArgumentList	D_ALWAYS		1641339	1					
ANR	1641354	Argument	D_ALWAYS		1641339	0					
ANR	1641355	Identifier	D_ALWAYS		1641339	0					
ANR	1641356	Argument	"""Stack pointer in data area\\n"""		1641339	1					
ANR	1641357	PrimaryExpression	"""Stack pointer in data area\\n"""		1641339	0					
ANR	1641358	IfStatement	if ( StackGrowsDown ( ) )		1641339	1					
ANR	1641359	Condition	StackGrowsDown ( )	2163:6:61783:61798	1641339	0	True				
ANR	1641360	CallExpression	StackGrowsDown ( )		1641339	0					
ANR	1641361	Callee	StackGrowsDown		1641339	0					
ANR	1641362	Identifier	StackGrowsDown		1641339	0					
ANR	1641363	ArgumentList			1641339	1					
ANR	1641364	CompoundStatement		4:25:108:108	1641339	1					
ANR	1641365	ExpressionStatement	end = stack_end_addr ( )	2164:3:61807:61829	1641339	0	True				
ANR	1641366	AssignmentExpression	end = stack_end_addr ( )		1641339	0		=			
ANR	1641367	Identifier	end		1641339	0					
ANR	1641368	CallExpression	stack_end_addr ( )		1641339	1					
ANR	1641369	Callee	stack_end_addr		1641339	0					
ANR	1641370	Identifier	stack_end_addr		1641339	0					
ANR	1641371	ArgumentList			1641339	1					
ANR	1641372	ExpressionStatement	start = end - StackSaveSize	2165:3:61834:61861	1641339	1	True				
ANR	1641373	AssignmentExpression	start = end - StackSaveSize		1641339	0		=			
ANR	1641374	Identifier	start		1641339	0					
ANR	1641375	AdditiveExpression	end - StackSaveSize		1641339	1		-			
ANR	1641376	Identifier	end		1641339	0					
ANR	1641377	Identifier	StackSaveSize		1641339	1					
ANR	1641378	ElseStatement	else		1641339	0					
ANR	1641379	CompoundStatement		7:9:178:178	1641339	0					
ANR	1641380	ExpressionStatement	start = stack_start_addr ( )	2167:3:61877:61903	1641339	0	True				
ANR	1641381	AssignmentExpression	start = stack_start_addr ( )		1641339	0		=			
ANR	1641382	Identifier	start		1641339	0					
ANR	1641383	CallExpression	stack_start_addr ( )		1641339	1					
ANR	1641384	Callee	stack_start_addr		1641339	0					
ANR	1641385	Identifier	stack_start_addr		1641339	0					
ANR	1641386	ArgumentList			1641339	1					
ANR	1641387	ExpressionStatement	end = start + StackSaveSize	2168:3:61908:61935	1641339	1	True				
ANR	1641388	AssignmentExpression	end = start + StackSaveSize		1641339	0		=			
ANR	1641389	Identifier	end		1641339	0					
ANR	1641390	AdditiveExpression	start + StackSaveSize		1641339	1		+			
ANR	1641391	Identifier	start		1641339	0					
ANR	1641392	Identifier	StackSaveSize		1641339	1					
ANR	1641393	ElseStatement	else		1641339	0					
ANR	1641394	CompoundStatement		11:8:255:255	1641339	0					
ANR	1641395	ExpressionStatement	start = stack_start_addr ( )	2171:2:61953:61979	1641339	0	True				
ANR	1641396	AssignmentExpression	start = stack_start_addr ( )		1641339	0		=			
ANR	1641397	Identifier	start		1641339	0					
ANR	1641398	CallExpression	stack_start_addr ( )		1641339	1					
ANR	1641399	Callee	stack_start_addr		1641339	0					
ANR	1641400	Identifier	stack_start_addr		1641339	0					
ANR	1641401	ArgumentList			1641339	1					
ANR	1641402	ExpressionStatement	end = stack_end_addr ( )	2172:2:61983:62005	1641339	1	True				
ANR	1641403	AssignmentExpression	end = stack_end_addr ( )		1641339	0		=			
ANR	1641404	Identifier	end		1641339	0					
ANR	1641405	CallExpression	stack_end_addr ( )		1641339	1					
ANR	1641406	Callee	stack_end_addr		1641339	0					
ANR	1641407	Identifier	stack_end_addr		1641339	0					
ANR	1641408	ArgumentList			1641339	1					
ANR	1641409	ReturnType	static void		1641339	1					
ANR	1641410	Identifier	find_stack_location		1641339	2					
ANR	1641411	ParameterList	"RAW_ADDR & start , RAW_ADDR & end"		1641339	3					
ANR	1641412	Parameter	RAW_ADDR & start	2159:21:61660:61674	1641339	0	True				
ANR	1641413	ParameterType	RAW_ADDR &		1641339	0					
ANR	1641414	Identifier	start		1641339	1					
ANR	1641415	Parameter	RAW_ADDR & end	2159:38:61677:61689	1641339	1	True				
ANR	1641416	ParameterType	RAW_ADDR &		1641339	0					
ANR	1641417	Identifier	end		1641339	1					
ANR	1641418	CFGEntryNode	ENTRY		1641339		True				
ANR	1641419	CFGExitNode	EXIT		1641339		True				
ANR	1641420	Symbol	stack_end_addr		1641339						
ANR	1641421	Symbol	StackSaveSize		1641339						
ANR	1641422	Symbol	start		1641339						
ANR	1641423	Symbol	D_ALWAYS		1641339						
ANR	1641424	Symbol	SP_in_data_area		1641339						
ANR	1641425	Symbol	end		1641339						
ANR	1641426	Symbol	stack_start_addr		1641339						
ANR	1641427	Symbol	StackGrowsDown		1641339						
ANR	1641428	DeclStmt									
ANR	1641429	Decl							double	double ( const char * )	atof
ANR	1641430	DeclStmt									
ANR	1641431	Decl							const size_t	const size_t	MEG
ANR	1641432	Function	calc_stack_to_save	2180:0:62089:62543							
ANR	1641433	FunctionDef	calc_stack_to_save ()		1641432	0					
ANR	1641434	CompoundStatement		2182:0:62115:62543	1641432	0					
ANR	1641435	IdentifierDeclStatement	char * ptr ;	2183:1:62118:62127	1641432	0	True				
ANR	1641436	IdentifierDecl	* ptr		1641432	0					
ANR	1641437	IdentifierDeclType	char *		1641432	0					
ANR	1641438	Identifier	ptr		1641432	1					
ANR	1641439	ExpressionStatement	"ptr = getenv ( ""CONDOR_STACK_SIZE"" )"	2189:1:62384:62419	1641432	1	True				
ANR	1641440	AssignmentExpression	"ptr = getenv ( ""CONDOR_STACK_SIZE"" )"		1641432	0		=			
ANR	1641441	Identifier	ptr		1641432	0					
ANR	1641442	CallExpression	"getenv ( ""CONDOR_STACK_SIZE"" )"		1641432	1					
ANR	1641443	Callee	getenv		1641432	0					
ANR	1641444	Identifier	getenv		1641432	0					
ANR	1641445	ArgumentList	"""CONDOR_STACK_SIZE"""		1641432	1					
ANR	1641446	Argument	"""CONDOR_STACK_SIZE"""		1641432	0					
ANR	1641447	PrimaryExpression	"""CONDOR_STACK_SIZE"""		1641432	0					
ANR	1641448	IfStatement	if ( ptr )		1641432	2					
ANR	1641449	Condition	ptr	2190:5:62426:62428	1641432	0	True				
ANR	1641450	Identifier	ptr		1641432	0					
ANR	1641451	CompoundStatement		9:11:316:316	1641432	1					
ANR	1641452	ExpressionStatement	StackSaveSize = ( size_t ) ( atof ( ptr ) * MEG )	2191:2:62436:62478	1641432	0	True				
ANR	1641453	AssignmentExpression	StackSaveSize = ( size_t ) ( atof ( ptr ) * MEG )		1641432	0		=			
ANR	1641454	Identifier	StackSaveSize		1641432	0					
ANR	1641455	CastExpression	( size_t ) ( atof ( ptr ) * MEG )		1641432	1					
ANR	1641456	CastTarget	size_t		1641432	0					
ANR	1641457	MultiplicativeExpression	atof ( ptr ) * MEG		1641432	1		*			
ANR	1641458	CallExpression	atof ( ptr )		1641432	0					
ANR	1641459	Callee	atof		1641432	0					
ANR	1641460	Identifier	atof		1641432	0					
ANR	1641461	ArgumentList	ptr		1641432	1					
ANR	1641462	Argument	ptr		1641432	0					
ANR	1641463	Identifier	ptr		1641432	0					
ANR	1641464	Identifier	MEG		1641432	1					
ANR	1641465	ElseStatement	else		1641432	0					
ANR	1641466	CompoundStatement		11:8:372:372	1641432	0					
ANR	1641467	ExpressionStatement	StackSaveSize = MEG * 2	2193:2:62492:62515	1641432	0	True				
ANR	1641468	AssignmentExpression	StackSaveSize = MEG * 2		1641432	0		=			
ANR	1641469	Identifier	StackSaveSize		1641432	0					
ANR	1641470	MultiplicativeExpression	MEG * 2		1641432	1		*			
ANR	1641471	Identifier	MEG		1641432	0					
ANR	1641472	PrimaryExpression	2		1641432	1					
ANR	1641473	ReturnType	void		1641432	1					
ANR	1641474	Identifier	calc_stack_to_save		1641432	2					
ANR	1641475	ParameterList			1641432	3					
ANR	1641476	CFGEntryNode	ENTRY		1641432		True				
ANR	1641477	CFGExitNode	EXIT		1641432		True				
ANR	1641478	Symbol	StackSaveSize		1641432						
ANR	1641479	Symbol	atof		1641432						
ANR	1641480	Symbol	MEG		1641432						
ANR	1641481	Symbol	ptr		1641432						
ANR	1641482	Symbol	getenv		1641432						
ANR	1641483	Function	SP_in_data_area	2202:0:62708:62985							
ANR	1641484	FunctionDef	SP_in_data_area ()		1641483	0					
ANR	1641485	CompoundStatement		2204:0:62737:62985	1641483	0					
ANR	1641486	IdentifierDeclStatement	"RAW_ADDR data_start , data_end ;"	2205:1:62740:62769	1641483	0	True				
ANR	1641487	IdentifierDecl	data_start		1641483	0					
ANR	1641488	IdentifierDeclType	RAW_ADDR		1641483	0					
ANR	1641489	Identifier	data_start		1641483	1					
ANR	1641490	IdentifierDecl	data_end		1641483	1					
ANR	1641491	IdentifierDeclType	RAW_ADDR		1641483	0					
ANR	1641492	Identifier	data_end		1641483	1					
ANR	1641493	IdentifierDeclStatement	RAW_ADDR SP ;	2206:1:62772:62783	1641483	1	True				
ANR	1641494	IdentifierDecl	SP		1641483	0					
ANR	1641495	IdentifierDeclType	RAW_ADDR		1641483	0					
ANR	1641496	Identifier	SP		1641483	1					
ANR	1641497	ExpressionStatement	data_start = data_start_addr ( )	2208:1:62787:62817	1641483	2	True				
ANR	1641498	AssignmentExpression	data_start = data_start_addr ( )		1641483	0		=			
ANR	1641499	Identifier	data_start		1641483	0					
ANR	1641500	CallExpression	data_start_addr ( )		1641483	1					
ANR	1641501	Callee	data_start_addr		1641483	0					
ANR	1641502	Identifier	data_start_addr		1641483	0					
ANR	1641503	ArgumentList			1641483	1					
ANR	1641504	ExpressionStatement	data_end = data_end_addr ( )	2209:1:62820:62846	1641483	3	True				
ANR	1641505	AssignmentExpression	data_end = data_end_addr ( )		1641483	0		=			
ANR	1641506	Identifier	data_end		1641483	0					
ANR	1641507	CallExpression	data_end_addr ( )		1641483	1					
ANR	1641508	Callee	data_end_addr		1641483	0					
ANR	1641509	Identifier	data_end_addr		1641483	0					
ANR	1641510	ArgumentList			1641483	1					
ANR	1641511	IfStatement	if ( StackGrowsDown ( ) )		1641483	4					
ANR	1641512	Condition	StackGrowsDown ( )	2211:5:62854:62869	1641483	0	True				
ANR	1641513	CallExpression	StackGrowsDown ( )		1641483	0					
ANR	1641514	Callee	StackGrowsDown		1641483	0					
ANR	1641515	Identifier	StackGrowsDown		1641483	0					
ANR	1641516	ArgumentList			1641483	1					
ANR	1641517	CompoundStatement		8:24:135:135	1641483	1					
ANR	1641518	ExpressionStatement	SP = stack_start_addr ( )	2212:2:62877:62900	1641483	0	True				
ANR	1641519	AssignmentExpression	SP = stack_start_addr ( )		1641483	0		=			
ANR	1641520	Identifier	SP		1641483	0					
ANR	1641521	CallExpression	stack_start_addr ( )		1641483	1					
ANR	1641522	Callee	stack_start_addr		1641483	0					
ANR	1641523	Identifier	stack_start_addr		1641483	0					
ANR	1641524	ArgumentList			1641483	1					
ANR	1641525	ElseStatement	else		1641483	0					
ANR	1641526	CompoundStatement		10:8:172:172	1641483	0					
ANR	1641527	ExpressionStatement	SP = stack_end_addr ( )	2214:2:62914:62935	1641483	0	True				
ANR	1641528	AssignmentExpression	SP = stack_end_addr ( )		1641483	0		=			
ANR	1641529	Identifier	SP		1641483	0					
ANR	1641530	CallExpression	stack_end_addr ( )		1641483	1					
ANR	1641531	Callee	stack_end_addr		1641483	0					
ANR	1641532	Identifier	stack_end_addr		1641483	0					
ANR	1641533	ArgumentList			1641483	1					
ANR	1641534	ReturnStatement	return data_start <= SP && SP <= data_end ;	2217:1:62942:62983	1641483	5	True				
ANR	1641535	AndExpression	data_start <= SP && SP <= data_end		1641483	0		&&			
ANR	1641536	RelationalExpression	data_start <= SP		1641483	0		<=			
ANR	1641537	Identifier	data_start		1641483	0					
ANR	1641538	Identifier	SP		1641483	1					
ANR	1641539	RelationalExpression	SP <= data_end		1641483	1		<=			
ANR	1641540	Identifier	SP		1641483	0					
ANR	1641541	Identifier	data_end		1641483	1					
ANR	1641542	ReturnType	static int		1641483	1					
ANR	1641543	Identifier	SP_in_data_area		1641483	2					
ANR	1641544	ParameterList			1641483	3					
ANR	1641545	CFGEntryNode	ENTRY		1641483		True				
ANR	1641546	CFGExitNode	EXIT		1641483		True				
ANR	1641547	Symbol	data_end		1641483						
ANR	1641548	Symbol	data_end_addr		1641483						
ANR	1641549	Symbol	stack_end_addr		1641483						
ANR	1641550	Symbol	data_start		1641483						
ANR	1641551	Symbol	stack_start_addr		1641483						
ANR	1641552	Symbol	SP		1641483						
ANR	1641553	Symbol	data_start_addr		1641483						
ANR	1641554	Symbol	StackGrowsDown		1641483						
ANR	1641555	Function	_condor_save_stack_location	2221:0:63001:63075							
ANR	1641556	FunctionDef	_condor_save_stack_location ()		1641555	0					
ANR	1641557	CompoundStatement		2223:0:63036:63075	1641555	0					
ANR	1641558	ExpressionStatement	SavedStackLoc = stack_start_addr ( )	2224:1:63039:63073	1641555	0	True				
ANR	1641559	AssignmentExpression	SavedStackLoc = stack_start_addr ( )		1641555	0		=			
ANR	1641560	Identifier	SavedStackLoc		1641555	0					
ANR	1641561	CallExpression	stack_start_addr ( )		1641555	1					
ANR	1641562	Callee	stack_start_addr		1641555	0					
ANR	1641563	Identifier	stack_start_addr		1641555	0					
ANR	1641564	ArgumentList			1641555	1					
ANR	1641565	ReturnType	void		1641555	1					
ANR	1641566	Identifier	_condor_save_stack_location		1641555	2					
ANR	1641567	ParameterList			1641555	3					
ANR	1641568	CFGEntryNode	ENTRY		1641555		True				
ANR	1641569	CFGExitNode	EXIT		1641555		True				
ANR	1641570	Symbol	SavedStackLoc		1641555						
ANR	1641571	Symbol	stack_start_addr		1641555						
ANR	1641572	Function	mydprintf	2227:0:63078:63240							
ANR	1641573	FunctionDef	"mydprintf (int foo , const char * fmt)"		1641572	0					
ANR	1641574	CompoundStatement		2228:0:63124:63240	1641572	0					
ANR	1641575	IdentifierDeclStatement	va_list args ;	2229:2:63128:63140	1641572	0	True				
ANR	1641576	IdentifierDecl	args		1641572	0					
ANR	1641577	IdentifierDeclType	va_list		1641572	0					
ANR	1641578	Identifier	args		1641572	1					
ANR	1641579	ExpressionStatement	"va_start ( args , fmt )"	2231:2:63145:63164	1641572	1	True				
ANR	1641580	CallExpression	"va_start ( args , fmt )"		1641572	0					
ANR	1641581	Callee	va_start		1641572	0					
ANR	1641582	Identifier	va_start		1641572	0					
ANR	1641583	ArgumentList	args		1641572	1					
ANR	1641584	Argument	args		1641572	0					
ANR	1641585	Identifier	args		1641572	0					
ANR	1641586	Argument	fmt		1641572	1					
ANR	1641587	Identifier	fmt		1641572	0					
ANR	1641588	ExpressionStatement	"vfprintf ( stdout , fmt , args )"	2232:2:63168:63195	1641572	2	True				
ANR	1641589	CallExpression	"vfprintf ( stdout , fmt , args )"		1641572	0					
ANR	1641590	Callee	vfprintf		1641572	0					
ANR	1641591	Identifier	vfprintf		1641572	0					
ANR	1641592	ArgumentList	stdout		1641572	1					
ANR	1641593	Argument	stdout		1641572	0					
ANR	1641594	Identifier	stdout		1641572	0					
ANR	1641595	Argument	fmt		1641572	1					
ANR	1641596	Identifier	fmt		1641572	0					
ANR	1641597	Argument	args		1641572	2					
ANR	1641598	Identifier	args		1641572	0					
ANR	1641599	ExpressionStatement	va_end ( args )	2233:2:63199:63211	1641572	3	True				
ANR	1641600	CallExpression	va_end ( args )		1641572	0					
ANR	1641601	Callee	va_end		1641572	0					
ANR	1641602	Identifier	va_end		1641572	0					
ANR	1641603	ArgumentList	args		1641572	1					
ANR	1641604	Argument	args		1641572	0					
ANR	1641605	Identifier	args		1641572	0					
ANR	1641606	ExpressionStatement	fflush ( 0 )	2234:2:63215:63224	1641572	4	True				
ANR	1641607	CallExpression	fflush ( 0 )		1641572	0					
ANR	1641608	Callee	fflush		1641572	0					
ANR	1641609	Identifier	fflush		1641572	0					
ANR	1641610	ArgumentList	0		1641572	1					
ANR	1641611	Argument	0		1641572	0					
ANR	1641612	PrimaryExpression	0		1641572	0					
ANR	1641613	ExpressionStatement	foo = foo	2236:2:63229:63238	1641572	5	True				
ANR	1641614	AssignmentExpression	foo = foo		1641572	0		=			
ANR	1641615	Identifier	foo		1641572	0					
ANR	1641616	Identifier	foo		1641572	1					
ANR	1641617	ReturnType	void		1641572	1					
ANR	1641618	Identifier	mydprintf		1641572	2					
ANR	1641619	ParameterList	"int foo , const char * fmt"		1641572	3					
ANR	1641620	Parameter	int foo	2227:15:63093:63099	1641572	0	True				
ANR	1641621	ParameterType	int		1641572	0					
ANR	1641622	Identifier	foo		1641572	1					
ANR	1641623	Parameter	const char * fmt	2227:24:63102:63116	1641572	1	True				
ANR	1641624	ParameterType	const char *		1641572	0					
ANR	1641625	Identifier	fmt		1641572	1					
ANR	1641626	CFGEntryNode	ENTRY		1641572		True				
ANR	1641627	CFGExitNode	EXIT		1641572		True				
ANR	1641628	Symbol	args		1641572						
ANR	1641629	Symbol	stdout		1641572						
ANR	1641630	Symbol	foo		1641572						
ANR	1641631	Symbol	fmt		1641572						
