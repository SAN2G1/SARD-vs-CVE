command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4558659	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_Regex.cpp								
ANR	4558660	Function	Regex :: Regex	24:0:858:913							
ANR	4558661	FunctionDef	Regex :: Regex ()		4558660	0					
ANR	4558662	CompoundStatement		25:0:873:913	4558660	0					
ANR	4558663	ExpressionStatement	this -> options = 0	26:1:876:893	4558660	0	True				
ANR	4558664	AssignmentExpression	this -> options = 0		4558660	0		=			
ANR	4558665	PtrMemberAccess	this -> options		4558660	0					
ANR	4558666	Identifier	this		4558660	0					
ANR	4558667	Identifier	options		4558660	1					
ANR	4558668	PrimaryExpression	0		4558660	1					
ANR	4558669	ExpressionStatement	this -> re = NULL	27:1:896:911	4558660	1	True				
ANR	4558670	AssignmentExpression	this -> re = NULL		4558660	0		=			
ANR	4558671	PtrMemberAccess	this -> re		4558660	0					
ANR	4558672	Identifier	this		4558660	0					
ANR	4558673	Identifier	re		4558660	1					
ANR	4558674	Identifier	NULL		4558660	1					
ANR	4558675	Identifier	Regex :: Regex		4558660	1					
ANR	4558676	ParameterList			4558660	2					
ANR	4558677	CFGEntryNode	ENTRY		4558660		True				
ANR	4558678	CFGExitNode	EXIT		4558660		True				
ANR	4558679	Symbol	* this		4558660						
ANR	4558680	Symbol	NULL		4558660						
ANR	4558681	Symbol	this		4558660						
ANR	4558682	Symbol	this -> options		4558660						
ANR	4558683	Symbol	this -> re		4558660						
ANR	4558684	Function	Regex :: Regex	46:0:1178:1269							
ANR	4558685	FunctionDef	Regex :: Regex (const Regex & copy)		4558684	0					
ANR	4558686	CompoundStatement		47:0:1211:1269	4558684	0					
ANR	4558687	ExpressionStatement	this -> options = copy . options	48:1:1214:1242	4558684	0	True				
ANR	4558688	AssignmentExpression	this -> options = copy . options		4558684	0		=			
ANR	4558689	PtrMemberAccess	this -> options		4558684	0					
ANR	4558690	Identifier	this		4558684	0					
ANR	4558691	Identifier	options		4558684	1					
ANR	4558692	MemberAccess	copy . options		4558684	1					
ANR	4558693	Identifier	copy		4558684	0					
ANR	4558694	Identifier	options		4558684	1					
ANR	4558695	ExpressionStatement	re = clone_re ( copy . re )	49:1:1245:1267	4558684	1	True				
ANR	4558696	AssignmentExpression	re = clone_re ( copy . re )		4558684	0		=			
ANR	4558697	Identifier	re		4558684	0					
ANR	4558698	CallExpression	clone_re ( copy . re )		4558684	1					
ANR	4558699	Callee	clone_re		4558684	0					
ANR	4558700	Identifier	clone_re		4558684	0					
ANR	4558701	ArgumentList	copy . re		4558684	1					
ANR	4558702	Argument	copy . re		4558684	0					
ANR	4558703	MemberAccess	copy . re		4558684	0					
ANR	4558704	Identifier	copy		4558684	0					
ANR	4558705	Identifier	re		4558684	1					
ANR	4558706	Identifier	Regex :: Regex		4558684	1					
ANR	4558707	ParameterList	const Regex & copy		4558684	2					
ANR	4558708	Parameter	const Regex & copy	46:13:1191:1208	4558684	0	True				
ANR	4558709	ParameterType	const Regex &		4558684	0					
ANR	4558710	Identifier	copy		4558684	1					
ANR	4558711	CFGEntryNode	ENTRY		4558684		True				
ANR	4558712	CFGExitNode	EXIT		4558684		True				
ANR	4558713	Symbol	* this		4558684						
ANR	4558714	Symbol	re		4558684						
ANR	4558715	Symbol	copy . re		4558684						
ANR	4558716	Symbol	this		4558684						
ANR	4558717	Symbol	clone_re		4558684						
ANR	4558718	Symbol	copy . options		4558684						
ANR	4558719	Symbol	copy		4558684						
ANR	4558720	Symbol	this -> options		4558684						
ANR	4558721	Function	operator =	54:7:1294:1473							
ANR	4558722	FunctionDef	operator = (const Regex & copy)		4558721	0					
ANR	4558723	CompoundStatement		55:0:1326:1473	4558721	0					
ANR	4558724	IfStatement	if ( this != & copy )		4558721	0					
ANR	4558725	Condition	this != & copy	56:5:1333:1345	4558721	0	True				
ANR	4558726	EqualityExpression	this != & copy		4558721	0		!=			
ANR	4558727	Identifier	this		4558721	0					
ANR	4558728	UnaryOperationExpression	& copy		4558721	1					
ANR	4558729	UnaryOperator	&		4558721	0					
ANR	4558730	Identifier	copy		4558721	1					
ANR	4558731	CompoundStatement		2:20:21:21	4558721	1					
ANR	4558732	ExpressionStatement	this -> options = copy . options	57:2:1352:1380	4558721	0	True				
ANR	4558733	AssignmentExpression	this -> options = copy . options		4558721	0		=			
ANR	4558734	PtrMemberAccess	this -> options		4558721	0					
ANR	4558735	Identifier	this		4558721	0					
ANR	4558736	Identifier	options		4558721	1					
ANR	4558737	MemberAccess	copy . options		4558721	1					
ANR	4558738	Identifier	copy		4558721	0					
ANR	4558739	Identifier	options		4558721	1					
ANR	4558740	IfStatement	if ( re )		4558721	1					
ANR	4558741	Condition	re	59:6:1389:1390	4558721	0	True				
ANR	4558742	Identifier	re		4558721	0					
ANR	4558743	CompoundStatement		5:10:66:66	4558721	1					
ANR	4558744	ExpressionStatement	pcre_free ( re )	60:3:1398:1411	4558721	0	True				
ANR	4558745	CallExpression	pcre_free ( re )		4558721	0					
ANR	4558746	Callee	pcre_free		4558721	0					
ANR	4558747	Identifier	pcre_free		4558721	0					
ANR	4558748	ArgumentList	re		4558721	1					
ANR	4558749	Argument	re		4558721	0					
ANR	4558750	Identifier	re		4558721	0					
ANR	4558751	ExpressionStatement	re = NULL	60:18:1413:1422	4558721	1	True				
ANR	4558752	AssignmentExpression	re = NULL		4558721	0		=			
ANR	4558753	Identifier	re		4558721	0					
ANR	4558754	Identifier	NULL		4558721	1					
ANR	4558755	ExpressionStatement	re = clone_re ( copy . re )	62:2:1430:1452	4558721	2	True				
ANR	4558756	AssignmentExpression	re = clone_re ( copy . re )		4558721	0		=			
ANR	4558757	Identifier	re		4558721	0					
ANR	4558758	CallExpression	clone_re ( copy . re )		4558721	1					
ANR	4558759	Callee	clone_re		4558721	0					
ANR	4558760	Identifier	clone_re		4558721	0					
ANR	4558761	ArgumentList	copy . re		4558721	1					
ANR	4558762	Argument	copy . re		4558721	0					
ANR	4558763	MemberAccess	copy . re		4558721	0					
ANR	4558764	Identifier	copy		4558721	0					
ANR	4558765	Identifier	re		4558721	1					
ANR	4558766	ReturnStatement	return * this ;	65:1:1459:1471	4558721	1	True				
ANR	4558767	UnaryOperationExpression	* this		4558721	0					
ANR	4558768	UnaryOperator	*		4558721	0					
ANR	4558769	Identifier	this		4558721	1					
ANR	4558770	Identifier	operator =		4558721	1					
ANR	4558771	ParameterList	const Regex & copy		4558721	2					
ANR	4558772	Parameter	const Regex & copy	54:19:1306:1323	4558721	0	True				
ANR	4558773	ParameterType	const Regex &		4558721	0					
ANR	4558774	Identifier	copy		4558721	1					
ANR	4558775	CFGEntryNode	ENTRY		4558721		True				
ANR	4558776	CFGExitNode	EXIT		4558721		True				
ANR	4558777	Symbol	* this		4558721						
ANR	4558778	Symbol	re		4558721						
ANR	4558779	Symbol	NULL		4558721						
ANR	4558780	Symbol	& copy		4558721						
ANR	4558781	Symbol	copy . re		4558721						
ANR	4558782	Symbol	this		4558721						
ANR	4558783	Symbol	clone_re		4558721						
ANR	4558784	Symbol	copy . options		4558721						
ANR	4558785	Symbol	copy		4558721						
ANR	4558786	Symbol	this -> options		4558721						
ANR	4558787	Function	Regex :: ~Regex	69:0:1477:1537							
ANR	4558788	FunctionDef	Regex :: ~Regex ()		4558787	0					
ANR	4558789	CompoundStatement		70:0:1493:1537	4558787	0					
ANR	4558790	IfStatement	if ( re )		4558787	0					
ANR	4558791	Condition	re	71:5:1500:1501	4558787	0	True				
ANR	4558792	Identifier	re		4558787	0					
ANR	4558793	CompoundStatement		2:9:10:10	4558787	1					
ANR	4558794	ExpressionStatement	pcre_free ( re )	72:2:1508:1521	4558787	0	True				
ANR	4558795	CallExpression	pcre_free ( re )		4558787	0					
ANR	4558796	Callee	pcre_free		4558787	0					
ANR	4558797	Identifier	pcre_free		4558787	0					
ANR	4558798	ArgumentList	re		4558787	1					
ANR	4558799	Argument	re		4558787	0					
ANR	4558800	Identifier	re		4558787	0					
ANR	4558801	ExpressionStatement	re = NULL	72:17:1523:1532	4558787	1	True				
ANR	4558802	AssignmentExpression	re = NULL		4558787	0		=			
ANR	4558803	Identifier	re		4558787	0					
ANR	4558804	Identifier	NULL		4558787	1					
ANR	4558805	Identifier	Regex :: ~Regex		4558787	1					
ANR	4558806	ParameterList			4558787	2					
ANR	4558807	CFGEntryNode	ENTRY		4558787		True				
ANR	4558808	CFGExitNode	EXIT		4558787		True				
ANR	4558809	Symbol	re		4558787						
ANR	4558810	Symbol	NULL		4558787						
ANR	4558811	Function	Regex :: compile	77:0:1541:1765							
ANR	4558812	FunctionDef	"Regex :: compile (const MyString & pattern , const char * * errptr , int * erroffset , int options_param)"		4558811	0					
ANR	4558813	CompoundStatement		82:0:1663:1765	4558811	0					
ANR	4558814	ExpressionStatement	"re = pcre_compile ( pattern . Value ( ) , options_param , errptr , erroffset , NULL )"	83:1:1666:1740	4558811	0	True				
ANR	4558815	AssignmentExpression	"re = pcre_compile ( pattern . Value ( ) , options_param , errptr , erroffset , NULL )"		4558811	0		=			
ANR	4558816	Identifier	re		4558811	0					
ANR	4558817	CallExpression	"pcre_compile ( pattern . Value ( ) , options_param , errptr , erroffset , NULL )"		4558811	1					
ANR	4558818	Callee	pcre_compile		4558811	0					
ANR	4558819	Identifier	pcre_compile		4558811	0					
ANR	4558820	ArgumentList	pattern . Value ( )		4558811	1					
ANR	4558821	Argument	pattern . Value ( )		4558811	0					
ANR	4558822	CallExpression	pattern . Value ( )		4558811	0					
ANR	4558823	Callee	pattern . Value		4558811	0					
ANR	4558824	MemberAccess	pattern . Value		4558811	0					
ANR	4558825	Identifier	pattern		4558811	0					
ANR	4558826	Identifier	Value		4558811	1					
ANR	4558827	ArgumentList			4558811	1					
ANR	4558828	Argument	options_param		4558811	1					
ANR	4558829	Identifier	options_param		4558811	0					
ANR	4558830	Argument	errptr		4558811	2					
ANR	4558831	Identifier	errptr		4558811	0					
ANR	4558832	Argument	erroffset		4558811	3					
ANR	4558833	Identifier	erroffset		4558811	0					
ANR	4558834	Argument	NULL		4558811	4					
ANR	4558835	Identifier	NULL		4558811	0					
ANR	4558836	ReturnStatement	return ( NULL != re ) ;	85:1:1744:1763	4558811	1	True				
ANR	4558837	EqualityExpression	NULL != re		4558811	0		!=			
ANR	4558838	Identifier	NULL		4558811	0					
ANR	4558839	Identifier	re		4558811	1					
ANR	4558840	ReturnType	bool		4558811	1					
ANR	4558841	Identifier	Regex :: compile		4558811	2					
ANR	4558842	ParameterList	"const MyString & pattern , const char * * errptr , int * erroffset , int options_param"		4558811	3					
ANR	4558843	Parameter	const MyString & pattern	78:15:1561:1584	4558811	0	True				
ANR	4558844	ParameterType	const MyString &		4558811	0					
ANR	4558845	Identifier	pattern		4558811	1					
ANR	4558846	Parameter	const char * * errptr	79:6:1593:1612	4558811	1	True				
ANR	4558847	ParameterType	const char * *		4558811	0					
ANR	4558848	Identifier	errptr		4558811	1					
ANR	4558849	Parameter	int * erroffset	80:6:1621:1635	4558811	2	True				
ANR	4558850	ParameterType	int *		4558811	0					
ANR	4558851	Identifier	erroffset		4558811	1					
ANR	4558852	Parameter	int options_param	81:6:1644:1660	4558811	3	True				
ANR	4558853	ParameterType	int		4558811	0					
ANR	4558854	Identifier	options_param		4558811	1					
ANR	4558855	CFGEntryNode	ENTRY		4558811		True				
ANR	4558856	CFGExitNode	EXIT		4558811		True				
ANR	4558857	Symbol	NULL		4558811						
ANR	4558858	Symbol	re		4558811						
ANR	4558859	Symbol	pattern		4558811						
ANR	4558860	Symbol	pattern . Value		4558811						
ANR	4558861	Symbol	erroffset		4558811						
ANR	4558862	Symbol	options_param		4558811						
ANR	4558863	Symbol	errptr		4558811						
ANR	4558864	Symbol	pcre_compile		4558811						
ANR	4558865	Function	Regex :: match	89:0:1769:2580							
ANR	4558866	FunctionDef	"Regex :: match (const MyString & string , ExtArray < MyString > * groups)"		4558865	0					
ANR	4558867	CompoundStatement		92:0:1845:2580	4558865	0					
ANR	4558868	IfStatement	if ( ! this -> isInitialized ( ) )		4558865	0					
ANR	4558869	Condition	! this -> isInitialized ( )	93:6:1853:1875	4558865	0	True				
ANR	4558870	UnaryOperationExpression	! this -> isInitialized ( )		4558865	0					
ANR	4558871	UnaryOperator	!		4558865	0					
ANR	4558872	CallExpression	this -> isInitialized ( )		4558865	1					
ANR	4558873	Callee	this -> isInitialized		4558865	0					
ANR	4558874	PtrMemberAccess	this -> isInitialized		4558865	0					
ANR	4558875	Identifier	this		4558865	0					
ANR	4558876	Identifier	isInitialized		4558865	1					
ANR	4558877	ArgumentList			4558865	1					
ANR	4558878	CompoundStatement		2:32:33:33	4558865	1					
ANR	4558879	ReturnStatement	return false ;	94:2:1883:1895	4558865	0	True				
ANR	4558880	Identifier	false		4558865	0					
ANR	4558881	IdentifierDeclStatement	int group_count ;	97:1:1902:1917	4558865	1	True				
ANR	4558882	IdentifierDecl	group_count		4558865	0					
ANR	4558883	IdentifierDeclType	int		4558865	0					
ANR	4558884	Identifier	group_count		4558865	1					
ANR	4558885	ExpressionStatement	"pcre_fullinfo ( re , NULL , PCRE_INFO_CAPTURECOUNT , & group_count )"	98:1:1920:1981	4558865	2	True				
ANR	4558886	CallExpression	"pcre_fullinfo ( re , NULL , PCRE_INFO_CAPTURECOUNT , & group_count )"		4558865	0					
ANR	4558887	Callee	pcre_fullinfo		4558865	0					
ANR	4558888	Identifier	pcre_fullinfo		4558865	0					
ANR	4558889	ArgumentList	re		4558865	1					
ANR	4558890	Argument	re		4558865	0					
ANR	4558891	Identifier	re		4558865	0					
ANR	4558892	Argument	NULL		4558865	1					
ANR	4558893	Identifier	NULL		4558865	0					
ANR	4558894	Argument	PCRE_INFO_CAPTURECOUNT		4558865	2					
ANR	4558895	Identifier	PCRE_INFO_CAPTURECOUNT		4558865	0					
ANR	4558896	Argument	& group_count		4558865	3					
ANR	4558897	UnaryOperationExpression	& group_count		4558865	0					
ANR	4558898	UnaryOperator	&		4558865	0					
ANR	4558899	Identifier	group_count		4558865	1					
ANR	4558900	IdentifierDeclStatement	int oveccount = 3 * ( group_count + 1 ) ;	99:1:1984:2021	4558865	3	True				
ANR	4558901	IdentifierDecl	oveccount = 3 * ( group_count + 1 )		4558865	0					
ANR	4558902	IdentifierDeclType	int		4558865	0					
ANR	4558903	Identifier	oveccount		4558865	1					
ANR	4558904	AssignmentExpression	oveccount = 3 * ( group_count + 1 )		4558865	2		=			
ANR	4558905	Identifier	oveccount		4558865	0					
ANR	4558906	MultiplicativeExpression	3 * ( group_count + 1 )		4558865	1		*			
ANR	4558907	PrimaryExpression	3		4558865	0					
ANR	4558908	AdditiveExpression	group_count + 1		4558865	1		+			
ANR	4558909	Identifier	group_count		4558865	0					
ANR	4558910	PrimaryExpression	1		4558865	1					
ANR	4558911	IdentifierDeclStatement	int * ovector = ( int * ) malloc ( oveccount * sizeof ( int ) ) ;	100:1:2052:2107	4558865	4	True				
ANR	4558912	IdentifierDecl	* ovector = ( int * ) malloc ( oveccount * sizeof ( int ) )		4558865	0					
ANR	4558913	IdentifierDeclType	int *		4558865	0					
ANR	4558914	Identifier	ovector		4558865	1					
ANR	4558915	AssignmentExpression	* ovector = ( int * ) malloc ( oveccount * sizeof ( int ) )		4558865	2		=			
ANR	4558916	Identifier	ovector		4558865	0					
ANR	4558917	CastExpression	( int * ) malloc ( oveccount * sizeof ( int ) )		4558865	1					
ANR	4558918	CastTarget	int *		4558865	0					
ANR	4558919	CallExpression	malloc ( oveccount * sizeof ( int ) )		4558865	1					
ANR	4558920	Callee	malloc		4558865	0					
ANR	4558921	Identifier	malloc		4558865	0					
ANR	4558922	ArgumentList	oveccount * sizeof ( int )		4558865	1					
ANR	4558923	Argument	oveccount * sizeof ( int )		4558865	0					
ANR	4558924	MultiplicativeExpression	oveccount * sizeof ( int )		4558865	0		*			
ANR	4558925	Identifier	oveccount		4558865	0					
ANR	4558926	SizeofExpression	sizeof ( int )		4558865	1					
ANR	4558927	Sizeof	sizeof		4558865	0					
ANR	4558928	SizeofOperand	int		4558865	1					
ANR	4558929	IfStatement	if ( ! ovector )		4558865	5					
ANR	4558930	Condition	! ovector	101:5:2114:2121	4558865	0	True				
ANR	4558931	UnaryOperationExpression	! ovector		4558865	0					
ANR	4558932	UnaryOperator	!		4558865	0					
ANR	4558933	Identifier	ovector		4558865	1					
ANR	4558934	CompoundStatement		10:15:278:278	4558865	1					
ANR	4558935	ExpressionStatement	"EXCEPT ( ""No memory to allocate data for re match"" )"	103:2:2155:2204	4558865	0	True				
ANR	4558936	CallExpression	"EXCEPT ( ""No memory to allocate data for re match"" )"		4558865	0					
ANR	4558937	Callee	EXCEPT		4558865	0					
ANR	4558938	Identifier	EXCEPT		4558865	0					
ANR	4558939	ArgumentList	"""No memory to allocate data for re match"""		4558865	1					
ANR	4558940	Argument	"""No memory to allocate data for re match"""		4558865	0					
ANR	4558941	PrimaryExpression	"""No memory to allocate data for re match"""		4558865	0					
ANR	4558942	IdentifierDeclStatement	"int rc = pcre_exec ( re , NULL , string . Value ( ) , string . Length ( ) , 0 , options , ovector , oveccount ) ;"	106:1:2211:2408	4558865	6	True				
ANR	4558943	IdentifierDecl	"rc = pcre_exec ( re , NULL , string . Value ( ) , string . Length ( ) , 0 , options , ovector , oveccount )"		4558865	0					
ANR	4558944	IdentifierDeclType	int		4558865	0					
ANR	4558945	Identifier	rc		4558865	1					
ANR	4558946	AssignmentExpression	"rc = pcre_exec ( re , NULL , string . Value ( ) , string . Length ( ) , 0 , options , ovector , oveccount )"		4558865	2		=			
ANR	4558947	Identifier	rc		4558865	0					
ANR	4558948	CallExpression	"pcre_exec ( re , NULL , string . Value ( ) , string . Length ( ) , 0 , options , ovector , oveccount )"		4558865	1					
ANR	4558949	Callee	pcre_exec		4558865	0					
ANR	4558950	Identifier	pcre_exec		4558865	0					
ANR	4558951	ArgumentList	re		4558865	1					
ANR	4558952	Argument	re		4558865	0					
ANR	4558953	Identifier	re		4558865	0					
ANR	4558954	Argument	NULL		4558865	1					
ANR	4558955	Identifier	NULL		4558865	0					
ANR	4558956	Argument	string . Value ( )		4558865	2					
ANR	4558957	CallExpression	string . Value ( )		4558865	0					
ANR	4558958	Callee	string . Value		4558865	0					
ANR	4558959	MemberAccess	string . Value		4558865	0					
ANR	4558960	Identifier	string		4558865	0					
ANR	4558961	Identifier	Value		4558865	1					
ANR	4558962	ArgumentList			4558865	1					
ANR	4558963	Argument	string . Length ( )		4558865	3					
ANR	4558964	CallExpression	string . Length ( )		4558865	0					
ANR	4558965	Callee	string . Length		4558865	0					
ANR	4558966	MemberAccess	string . Length		4558865	0					
ANR	4558967	Identifier	string		4558865	0					
ANR	4558968	Identifier	Length		4558865	1					
ANR	4558969	ArgumentList			4558865	1					
ANR	4558970	Argument	0		4558865	4					
ANR	4558971	PrimaryExpression	0		4558865	0					
ANR	4558972	Argument	options		4558865	5					
ANR	4558973	Identifier	options		4558865	0					
ANR	4558974	Argument	ovector		4558865	6					
ANR	4558975	Identifier	ovector		4558865	0					
ANR	4558976	Argument	oveccount		4558865	7					
ANR	4558977	Identifier	oveccount		4558865	0					
ANR	4558978	IfStatement	if ( NULL != groups )		4558865	7					
ANR	4558979	Condition	NULL != groups	115:5:2416:2429	4558865	0	True				
ANR	4558980	EqualityExpression	NULL != groups		4558865	0		!=			
ANR	4558981	Identifier	NULL		4558865	0					
ANR	4558982	Identifier	groups		4558865	1					
ANR	4558983	CompoundStatement		24:21:586:586	4558865	1					
ANR	4558984	ForStatement	for ( int i = 0 ; i < rc ; i ++ )		4558865	0					
ANR	4558985	ForInit	int i = 0 ;	116:7:2441:2450	4558865	0	True				
ANR	4558986	IdentifierDeclStatement	int i = 0 ;		4558865	0					
ANR	4558987	IdentifierDecl	i = 0		4558865	0					
ANR	4558988	IdentifierDeclType	int		4558865	0					
ANR	4558989	Identifier	i		4558865	1					
ANR	4558990	AssignmentExpression	i = 0		4558865	2		=			
ANR	4558991	Identifier	i		4558865	0					
ANR	4558992	PrimaryExpression	0		4558865	1					
ANR	4558993	Condition	i < rc	116:18:2452:2457	4558865	1	True				
ANR	4558994	RelationalExpression	i < rc		4558865	0		<			
ANR	4558995	Identifier	i		4558865	0					
ANR	4558996	Identifier	rc		4558865	1					
ANR	4558997	PostIncDecOperationExpression	i ++	116:26:2460:2462	4558865	2	True				
ANR	4558998	Identifier	i		4558865	0					
ANR	4558999	IncDec	++		4558865	1					
ANR	4559000	CompoundStatement		25:31:619:619	4558865	3					
ANR	4559001	ExpressionStatement	"( * groups ) [ i ] = string . Substr ( ovector [ i * 2 ] , ovector [ i * 2 + 1 ] - 1 )"	117:3:2470:2538	4558865	0	True				
ANR	4559002	AssignmentExpression	"( * groups ) [ i ] = string . Substr ( ovector [ i * 2 ] , ovector [ i * 2 + 1 ] - 1 )"		4558865	0		=			
ANR	4559003	ArrayIndexing	( * groups ) [ i ]		4558865	0					
ANR	4559004	UnaryOperationExpression	* groups		4558865	0					
ANR	4559005	UnaryOperator	*		4558865	0					
ANR	4559006	Identifier	groups		4558865	1					
ANR	4559007	Identifier	i		4558865	1					
ANR	4559008	CallExpression	"string . Substr ( ovector [ i * 2 ] , ovector [ i * 2 + 1 ] - 1 )"		4558865	1					
ANR	4559009	Callee	string . Substr		4558865	0					
ANR	4559010	MemberAccess	string . Substr		4558865	0					
ANR	4559011	Identifier	string		4558865	0					
ANR	4559012	Identifier	Substr		4558865	1					
ANR	4559013	ArgumentList	ovector [ i * 2 ]		4558865	1					
ANR	4559014	Argument	ovector [ i * 2 ]		4558865	0					
ANR	4559015	ArrayIndexing	ovector [ i * 2 ]		4558865	0					
ANR	4559016	Identifier	ovector		4558865	0					
ANR	4559017	MultiplicativeExpression	i * 2		4558865	1		*			
ANR	4559018	Identifier	i		4558865	0					
ANR	4559019	PrimaryExpression	2		4558865	1					
ANR	4559020	Argument	ovector [ i * 2 + 1 ] - 1		4558865	1					
ANR	4559021	AdditiveExpression	ovector [ i * 2 + 1 ] - 1		4558865	0		-			
ANR	4559022	ArrayIndexing	ovector [ i * 2 + 1 ]		4558865	0					
ANR	4559023	Identifier	ovector		4558865	0					
ANR	4559024	AdditiveExpression	i * 2 + 1		4558865	1		+			
ANR	4559025	MultiplicativeExpression	i * 2		4558865	0		*			
ANR	4559026	Identifier	i		4558865	0					
ANR	4559027	PrimaryExpression	2		4558865	1					
ANR	4559028	PrimaryExpression	1		4558865	1					
ANR	4559029	PrimaryExpression	1		4558865	1					
ANR	4559030	ExpressionStatement	free ( ovector )	121:1:2549:2562	4558865	8	True				
ANR	4559031	CallExpression	free ( ovector )		4558865	0					
ANR	4559032	Callee	free		4558865	0					
ANR	4559033	Identifier	free		4558865	0					
ANR	4559034	ArgumentList	ovector		4558865	1					
ANR	4559035	Argument	ovector		4558865	0					
ANR	4559036	Identifier	ovector		4558865	0					
ANR	4559037	ReturnStatement	return rc > 0 ;	122:1:2565:2578	4558865	9	True				
ANR	4559038	RelationalExpression	rc > 0		4558865	0		>			
ANR	4559039	Identifier	rc		4558865	0					
ANR	4559040	PrimaryExpression	0		4558865	1					
ANR	4559041	ReturnType	bool		4558865	1					
ANR	4559042	Identifier	Regex :: match		4558865	2					
ANR	4559043	ParameterList	"const MyString & string , ExtArray < MyString > * groups"		4558865	3					
ANR	4559044	Parameter	const MyString & string	90:13:1787:1809	4558865	0	True				
ANR	4559045	ParameterType	const MyString &		4558865	0					
ANR	4559046	Identifier	string		4558865	1					
ANR	4559047	Parameter	ExtArray < MyString > * groups	91:4:1816:1842	4558865	1	True				
ANR	4559048	ParameterType	ExtArray < MyString > *		4558865	0					
ANR	4559049	Identifier	groups		4558865	1					
ANR	4559050	CFGEntryNode	ENTRY		4558865		True				
ANR	4559051	CFGExitNode	EXIT		4558865		True				
ANR	4559052	Symbol	string		4558865						
ANR	4559053	Symbol	group_count		4558865						
ANR	4559054	Symbol	pcre_exec		4558865						
ANR	4559055	Symbol	oveccount		4558865						
ANR	4559056	Symbol	* * groups		4558865						
ANR	4559057	Symbol	string . Substr		4558865						
ANR	4559058	Symbol	options		4558865						
ANR	4559059	Symbol	PCRE_INFO_CAPTURECOUNT		4558865						
ANR	4559060	Symbol	string . Value		4558865						
ANR	4559061	Symbol	ovector		4558865						
ANR	4559062	Symbol	malloc		4558865						
ANR	4559063	Symbol	NULL		4558865						
ANR	4559064	Symbol	& group_count		4558865						
ANR	4559065	Symbol	this		4558865						
ANR	4559066	Symbol	false		4558865						
ANR	4559067	Symbol	groups		4558865						
ANR	4559068	Symbol	i		4558865						
ANR	4559069	Symbol	this -> isInitialized		4558865						
ANR	4559070	Symbol	* this		4558865						
ANR	4559071	Symbol	rc		4558865						
ANR	4559072	Symbol	* ovector		4558865						
ANR	4559073	Symbol	string . Length		4558865						
ANR	4559074	Symbol	re		4558865						
ANR	4559075	Symbol	* i		4558865						
ANR	4559076	Symbol	* groups		4558865						
ANR	4559077	Function	Regex :: isInitialized	131:0:2759:2820							
ANR	4559078	FunctionDef	Regex :: isInitialized ()		4559077	0					
ANR	4559079	CompoundStatement		133:0:2788:2820	4559077	0					
ANR	4559080	ReturnStatement	return ( this -> re != NULL ) ;	134:1:2791:2818	4559077	0	True				
ANR	4559081	EqualityExpression	this -> re != NULL		4559077	0		!=			
ANR	4559082	PtrMemberAccess	this -> re		4559077	0					
ANR	4559083	Identifier	this		4559077	0					
ANR	4559084	Identifier	re		4559077	1					
ANR	4559085	Identifier	NULL		4559077	1					
ANR	4559086	ReturnType	bool		4559077	1					
ANR	4559087	Identifier	Regex :: isInitialized		4559077	2					
ANR	4559088	ParameterList			4559077	3					
ANR	4559089	CFGEntryNode	ENTRY		4559077		True				
ANR	4559090	CFGExitNode	EXIT		4559077		True				
ANR	4559091	Symbol	* this		4559077						
ANR	4559092	Symbol	NULL		4559077						
ANR	4559093	Symbol	this		4559077						
ANR	4559094	Symbol	this -> re		4559077						
ANR	4559095	Function	Regex :: clone_re	137:0:2823:3140							
ANR	4559096	FunctionDef	Regex :: clone_re (pcre * re)		4559095	0					
ANR	4559097	CompoundStatement		139:0:2857:3140	4559095	0					
ANR	4559098	IfStatement	if ( ! re )		4559095	0					
ANR	4559099	Condition	! re	140:5:2864:2866	4559095	0	True				
ANR	4559100	UnaryOperationExpression	! re		4559095	0					
ANR	4559101	UnaryOperator	!		4559095	0					
ANR	4559102	Identifier	re		4559095	1					
ANR	4559103	CompoundStatement		2:10:11:11	4559095	1					
ANR	4559104	ReturnStatement	return NULL ;	141:2:2873:2884	4559095	0	True				
ANR	4559105	Identifier	NULL		4559095	0					
ANR	4559106	IdentifierDeclStatement	size_t size ;	144:1:2891:2902	4559095	1	True				
ANR	4559107	IdentifierDecl	size		4559095	0					
ANR	4559108	IdentifierDeclType	size_t		4559095	0					
ANR	4559109	Identifier	size		4559095	1					
ANR	4559110	ExpressionStatement	"pcre_fullinfo ( re , NULL , PCRE_INFO_SIZE , & size )"	145:1:2905:2951	4559095	2	True				
ANR	4559111	CallExpression	"pcre_fullinfo ( re , NULL , PCRE_INFO_SIZE , & size )"		4559095	0					
ANR	4559112	Callee	pcre_fullinfo		4559095	0					
ANR	4559113	Identifier	pcre_fullinfo		4559095	0					
ANR	4559114	ArgumentList	re		4559095	1					
ANR	4559115	Argument	re		4559095	0					
ANR	4559116	Identifier	re		4559095	0					
ANR	4559117	Argument	NULL		4559095	1					
ANR	4559118	Identifier	NULL		4559095	0					
ANR	4559119	Argument	PCRE_INFO_SIZE		4559095	2					
ANR	4559120	Identifier	PCRE_INFO_SIZE		4559095	0					
ANR	4559121	Argument	& size		4559095	3					
ANR	4559122	UnaryOperationExpression	& size		4559095	0					
ANR	4559123	UnaryOperator	&		4559095	0					
ANR	4559124	Identifier	size		4559095	1					
ANR	4559125	IdentifierDeclStatement	pcre * newre = ( pcre * ) malloc ( size * sizeof ( char ) ) ;	147:1:2955:3006	4559095	3	True				
ANR	4559126	IdentifierDecl	* newre = ( pcre * ) malloc ( size * sizeof ( char ) )		4559095	0					
ANR	4559127	IdentifierDeclType	pcre *		4559095	0					
ANR	4559128	Identifier	newre		4559095	1					
ANR	4559129	AssignmentExpression	* newre = ( pcre * ) malloc ( size * sizeof ( char ) )		4559095	2		=			
ANR	4559130	Identifier	newre		4559095	0					
ANR	4559131	CastExpression	( pcre * ) malloc ( size * sizeof ( char ) )		4559095	1					
ANR	4559132	CastTarget	pcre *		4559095	0					
ANR	4559133	CallExpression	malloc ( size * sizeof ( char ) )		4559095	1					
ANR	4559134	Callee	malloc		4559095	0					
ANR	4559135	Identifier	malloc		4559095	0					
ANR	4559136	ArgumentList	size * sizeof ( char )		4559095	1					
ANR	4559137	Argument	size * sizeof ( char )		4559095	0					
ANR	4559138	MultiplicativeExpression	size * sizeof ( char )		4559095	0		*			
ANR	4559139	Identifier	size		4559095	0					
ANR	4559140	SizeofExpression	sizeof ( char )		4559095	1					
ANR	4559141	Sizeof	sizeof		4559095	0					
ANR	4559142	SizeofOperand	char		4559095	1					
ANR	4559143	IfStatement	if ( ! newre )		4559095	4					
ANR	4559144	Condition	! newre	148:5:3013:3018	4559095	0	True				
ANR	4559145	UnaryOperationExpression	! newre		4559095	0					
ANR	4559146	UnaryOperator	!		4559095	0					
ANR	4559147	Identifier	newre		4559095	1					
ANR	4559148	CompoundStatement		10:13:163:163	4559095	1					
ANR	4559149	ExpressionStatement	"EXCEPT ( ""No memory to allocate re clone"" )"	150:2:3052:3092	4559095	0	True				
ANR	4559150	CallExpression	"EXCEPT ( ""No memory to allocate re clone"" )"		4559095	0					
ANR	4559151	Callee	EXCEPT		4559095	0					
ANR	4559152	Identifier	EXCEPT		4559095	0					
ANR	4559153	ArgumentList	"""No memory to allocate re clone"""		4559095	1					
ANR	4559154	Argument	"""No memory to allocate re clone"""		4559095	0					
ANR	4559155	PrimaryExpression	"""No memory to allocate re clone"""		4559095	0					
ANR	4559156	ExpressionStatement	"memcpy ( newre , re , size )"	153:1:3099:3122	4559095	5	True				
ANR	4559157	CallExpression	"memcpy ( newre , re , size )"		4559095	0					
ANR	4559158	Callee	memcpy		4559095	0					
ANR	4559159	Identifier	memcpy		4559095	0					
ANR	4559160	ArgumentList	newre		4559095	1					
ANR	4559161	Argument	newre		4559095	0					
ANR	4559162	Identifier	newre		4559095	0					
ANR	4559163	Argument	re		4559095	1					
ANR	4559164	Identifier	re		4559095	0					
ANR	4559165	Argument	size		4559095	2					
ANR	4559166	Identifier	size		4559095	0					
ANR	4559167	ReturnStatement	return newre ;	155:1:3126:3138	4559095	6	True				
ANR	4559168	Identifier	newre		4559095	0					
ANR	4559169	ReturnType	pcre *		4559095	1					
ANR	4559170	Identifier	Regex :: clone_re		4559095	2					
ANR	4559171	ParameterList	pcre * re		4559095	3					
ANR	4559172	Parameter	pcre * re	138:16:2846:2854	4559095	0	True				
ANR	4559173	ParameterType	pcre *		4559095	0					
ANR	4559174	Identifier	re		4559095	1					
ANR	4559175	CFGEntryNode	ENTRY		4559095		True				
ANR	4559176	CFGExitNode	EXIT		4559095		True				
ANR	4559177	Symbol	PCRE_INFO_SIZE		4559095						
ANR	4559178	Symbol	malloc		4559095						
ANR	4559179	Symbol	re		4559095						
ANR	4559180	Symbol	NULL		4559095						
ANR	4559181	Symbol	size		4559095						
ANR	4559182	Symbol	& size		4559095						
ANR	4559183	Symbol	newre		4559095						
