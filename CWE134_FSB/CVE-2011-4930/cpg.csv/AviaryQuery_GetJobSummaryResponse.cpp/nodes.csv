command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	135284	File	data/converged/CVE-2011-4930_htcondor/AviaryQuery_GetJobSummaryResponse.cpp								
ANR	135285	Function	AviaryQuery :: GetJobSummaryResponse :: GetJobSummaryResponse	23:11:613:1064							
ANR	135286	FunctionDef	AviaryQuery :: GetJobSummaryResponse :: GetJobSummaryResponse ()		135285	0					
ANR	135287	CompoundStatement		24:8:681:1064	135285	0					
ANR	135288	ExpressionStatement	qname = NULL	27:12:705:717	135285	0	True				
ANR	135289	AssignmentExpression	qname = NULL		135285	0		=			
ANR	135290	Identifier	qname		135285	0					
ANR	135291	Identifier	NULL		135285	1					
ANR	135292	ExpressionStatement	property_Jobs = NULL	29:16:744:765	135285	1	True				
ANR	135293	AssignmentExpression	property_Jobs = NULL		135285	0		=			
ANR	135294	Identifier	property_Jobs		135285	0					
ANR	135295	Identifier	NULL		135285	1					
ANR	135296	ExpressionStatement	isValidJobs = false	31:12:794:814	135285	2	True				
ANR	135297	AssignmentExpression	isValidJobs = false		135285	0		=			
ANR	135298	Identifier	isValidJobs		135285	0					
ANR	135299	Identifier	false		135285	1					
ANR	135300	ExpressionStatement	"qname = axutil_qname_create ( Environment :: getEnv ( ) , ""GetJobSummaryResponse"" , ""http://query.aviary.grid.redhat.com"" , NULL )"	33:18:843:1037	135285	3	True				
ANR	135301	AssignmentExpression	"qname = axutil_qname_create ( Environment :: getEnv ( ) , ""GetJobSummaryResponse"" , ""http://query.aviary.grid.redhat.com"" , NULL )"		135285	0		=			
ANR	135302	Identifier	qname		135285	0					
ANR	135303	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""GetJobSummaryResponse"" , ""http://query.aviary.grid.redhat.com"" , NULL )"		135285	1					
ANR	135304	Callee	axutil_qname_create		135285	0					
ANR	135305	Identifier	axutil_qname_create		135285	0					
ANR	135306	ArgumentList	Environment :: getEnv ( )		135285	1					
ANR	135307	Argument	Environment :: getEnv ( )		135285	0					
ANR	135308	CallExpression	Environment :: getEnv ( )		135285	0					
ANR	135309	Callee	Environment :: getEnv		135285	0					
ANR	135310	Identifier	Environment :: getEnv		135285	0					
ANR	135311	ArgumentList			135285	1					
ANR	135312	Argument	"""GetJobSummaryResponse"""		135285	1					
ANR	135313	PrimaryExpression	"""GetJobSummaryResponse"""		135285	0					
ANR	135314	Argument	"""http://query.aviary.grid.redhat.com"""		135285	2					
ANR	135315	PrimaryExpression	"""http://query.aviary.grid.redhat.com"""		135285	0					
ANR	135316	Argument	NULL		135285	3					
ANR	135317	Identifier	NULL		135285	0					
ANR	135318	Identifier	AviaryQuery :: GetJobSummaryResponse :: GetJobSummaryResponse		135285	1					
ANR	135319	ParameterList			135285	2					
ANR	135320	CFGEntryNode	ENTRY		135285		True				
ANR	135321	CFGExitNode	EXIT		135285		True				
ANR	135322	Symbol	Environment :: getEnv		135285						
ANR	135323	Symbol	NULL		135285						
ANR	135324	Symbol	isValidJobs		135285						
ANR	135325	Symbol	qname		135285						
ANR	135326	Symbol	false		135285						
ANR	135327	Symbol	axutil_qname_create		135285						
ANR	135328	Symbol	property_Jobs		135285						
ANR	135329	Function	AviaryQuery :: GetJobSummaryResponse :: GetJobSummaryResponse	40:7:1074:1644							
ANR	135330	FunctionDef	AviaryQuery :: GetJobSummaryResponse :: GetJobSummaryResponse (std :: vector < AviaryCommon :: JobSummary * > * arg_Jobs)		135329	0					
ANR	135331	CompoundStatement		41:8:1190:1644	135329	0					
ANR	135332	ExpressionStatement	qname = NULL	43:19:1225:1237	135329	0	True				
ANR	135333	AssignmentExpression	qname = NULL		135329	0		=			
ANR	135334	Identifier	qname		135329	0					
ANR	135335	Identifier	NULL		135329	1					
ANR	135336	ExpressionStatement	property_Jobs = NULL	45:15:1268:1289	135329	1	True				
ANR	135337	AssignmentExpression	property_Jobs = NULL		135329	0		=			
ANR	135338	Identifier	property_Jobs		135329	0					
ANR	135339	Identifier	NULL		135329	1					
ANR	135340	ExpressionStatement	isValidJobs = true	47:12:1317:1336	135329	2	True				
ANR	135341	AssignmentExpression	isValidJobs = true		135329	0		=			
ANR	135342	Identifier	isValidJobs		135329	0					
ANR	135343	Identifier	true		135329	1					
ANR	135344	ExpressionStatement	"qname = axutil_qname_create ( Environment :: getEnv ( ) , ""GetJobSummaryResponse"" , ""http://query.aviary.grid.redhat.com"" , NULL )"	49:17:1368:1559	135329	3	True				
ANR	135345	AssignmentExpression	"qname = axutil_qname_create ( Environment :: getEnv ( ) , ""GetJobSummaryResponse"" , ""http://query.aviary.grid.redhat.com"" , NULL )"		135329	0		=			
ANR	135346	Identifier	qname		135329	0					
ANR	135347	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""GetJobSummaryResponse"" , ""http://query.aviary.grid.redhat.com"" , NULL )"		135329	1					
ANR	135348	Callee	axutil_qname_create		135329	0					
ANR	135349	Identifier	axutil_qname_create		135329	0					
ANR	135350	ArgumentList	Environment :: getEnv ( )		135329	1					
ANR	135351	Argument	Environment :: getEnv ( )		135329	0					
ANR	135352	CallExpression	Environment :: getEnv ( )		135329	0					
ANR	135353	Callee	Environment :: getEnv		135329	0					
ANR	135354	Identifier	Environment :: getEnv		135329	0					
ANR	135355	ArgumentList			135329	1					
ANR	135356	Argument	"""GetJobSummaryResponse"""		135329	1					
ANR	135357	PrimaryExpression	"""GetJobSummaryResponse"""		135329	0					
ANR	135358	Argument	"""http://query.aviary.grid.redhat.com"""		135329	2					
ANR	135359	PrimaryExpression	"""http://query.aviary.grid.redhat.com"""		135329	0					
ANR	135360	Argument	NULL		135329	3					
ANR	135361	Identifier	NULL		135329	0					
ANR	135362	ExpressionStatement	property_Jobs = arg_Jobs	54:20:1597:1621	135329	4	True				
ANR	135363	AssignmentExpression	property_Jobs = arg_Jobs		135329	0		=			
ANR	135364	Identifier	property_Jobs		135329	0					
ANR	135365	Identifier	arg_Jobs		135329	1					
ANR	135366	Identifier	AviaryQuery :: GetJobSummaryResponse :: GetJobSummaryResponse		135329	1					
ANR	135367	ParameterList	std :: vector < AviaryCommon :: JobSummary * > * arg_Jobs		135329	2					
ANR	135368	Parameter	std :: vector < AviaryCommon :: JobSummary * > * arg_Jobs	40:65:1132:1179	135329	0	True				
ANR	135369	ParameterType	std :: vector < AviaryCommon :: JobSummary * > *		135329	0					
ANR	135370	Identifier	arg_Jobs		135329	1					
ANR	135371	CFGEntryNode	ENTRY		135329		True				
ANR	135372	CFGExitNode	EXIT		135329		True				
ANR	135373	Symbol	Environment :: getEnv		135329						
ANR	135374	Symbol	NULL		135329						
ANR	135375	Symbol	isValidJobs		135329						
ANR	135376	Symbol	arg_Jobs		135329						
ANR	135377	Symbol	qname		135329						
ANR	135378	Symbol	true		135329						
ANR	135379	Symbol	axutil_qname_create		135329						
ANR	135380	Symbol	property_Jobs		135329						
ANR	135381	Function	AviaryQuery :: GetJobSummaryResponse :: ~GetJobSummaryResponse	57:8:1654:1982							
ANR	135382	FunctionDef	AviaryQuery :: GetJobSummaryResponse :: ~GetJobSummaryResponse ()		135381	0					
ANR	135383	CompoundStatement		58:8:1723:1982	135381	0					
ANR	135384	IfStatement	if ( property_Jobs )		135381	0					
ANR	135385	Condition	property_Jobs	59:16:1741:1753	135381	0	True				
ANR	135386	Identifier	property_Jobs		135381	0					
ANR	135387	CompoundStatement		2:31:32:32	135381	1					
ANR	135388	WhileStatement	while ( ! property_Jobs -> empty ( ) )		135381	0					
ANR	135389	Condition	! property_Jobs -> empty ( )	60:22:1780:1802	135381	0	True				
ANR	135390	UnaryOperationExpression	! property_Jobs -> empty ( )		135381	0					
ANR	135391	UnaryOperator	!		135381	0					
ANR	135392	CallExpression	property_Jobs -> empty ( )		135381	1					
ANR	135393	Callee	property_Jobs -> empty		135381	0					
ANR	135394	PtrMemberAccess	property_Jobs -> empty		135381	0					
ANR	135395	Identifier	property_Jobs		135381	0					
ANR	135396	Identifier	empty		135381	1					
ANR	135397	ArgumentList			135381	1					
ANR	135398	Statement	delete	60:47:1805:1810	135381	1	True				
ANR	135399	ExpressionStatement	"property_Jobs -> back ( ) , property_Jobs -> pop_back ( )"	60:54:1812:1860	135381	1	True				
ANR	135400	Expression	"property_Jobs -> back ( ) , property_Jobs -> pop_back ( )"		135381	0					
ANR	135401	CallExpression	property_Jobs -> back ( )		135381	0					
ANR	135402	Callee	property_Jobs -> back		135381	0					
ANR	135403	PtrMemberAccess	property_Jobs -> back		135381	0					
ANR	135404	Identifier	property_Jobs		135381	0					
ANR	135405	Identifier	back		135381	1					
ANR	135406	ArgumentList			135381	1					
ANR	135407	CallExpression	property_Jobs -> pop_back ( )		135381	1					
ANR	135408	Callee	property_Jobs -> pop_back		135381	0					
ANR	135409	PtrMemberAccess	property_Jobs -> pop_back		135381	0					
ANR	135410	Identifier	property_Jobs		135381	0					
ANR	135411	Identifier	pop_back		135381	1					
ANR	135412	ArgumentList			135381	1					
ANR	135413	Statement	delete	61:16:1878:1883	135381	2	True				
ANR	135414	ExpressionStatement	property_Jobs	61:23:1885:1898	135381	3	True				
ANR	135415	Identifier	property_Jobs		135381	0					
ANR	135416	ExpressionStatement	"axutil_qname_free ( qname , Environment :: getEnv ( ) )"	63:12:1926:1972	135381	1	True				
ANR	135417	CallExpression	"axutil_qname_free ( qname , Environment :: getEnv ( ) )"		135381	0					
ANR	135418	Callee	axutil_qname_free		135381	0					
ANR	135419	Identifier	axutil_qname_free		135381	0					
ANR	135420	ArgumentList	qname		135381	1					
ANR	135421	Argument	qname		135381	0					
ANR	135422	Identifier	qname		135381	0					
ANR	135423	Argument	Environment :: getEnv ( )		135381	1					
ANR	135424	CallExpression	Environment :: getEnv ( )		135381	0					
ANR	135425	Callee	Environment :: getEnv		135381	0					
ANR	135426	Identifier	Environment :: getEnv		135381	0					
ANR	135427	ArgumentList			135381	1					
ANR	135428	Identifier	AviaryQuery :: GetJobSummaryResponse :: ~GetJobSummaryResponse		135381	1					
ANR	135429	ParameterList			135381	2					
ANR	135430	CFGEntryNode	ENTRY		135381		True				
ANR	135431	CFGExitNode	EXIT		135381		True				
ANR	135432	Symbol	Environment :: getEnv		135381						
ANR	135433	Symbol	qname		135381						
ANR	135434	Symbol	* property_Jobs		135381						
ANR	135435	Symbol	property_Jobs -> empty		135381						
ANR	135436	Symbol	property_Jobs		135381						
ANR	135437	Function	AviaryQuery :: GetJobSummaryResponse :: deserialize	68:8:2003:9838							
ANR	135438	FunctionDef	"AviaryQuery :: GetJobSummaryResponse :: deserialize (axiom_node_t * * dp_parent , bool * dp_is_early_node_valid , bool dont_care_minoccurs)"		135437	0					
ANR	135439	CompoundStatement		70:8:2162:9838	135437	0					
ANR	135440	IdentifierDeclStatement	axiom_node_t * parent = * dp_parent ;	71:10:2174:2207	135437	0	True				
ANR	135441	IdentifierDecl	* parent = * dp_parent		135437	0					
ANR	135442	IdentifierDeclType	axiom_node_t *		135437	0					
ANR	135443	Identifier	parent		135437	1					
ANR	135444	AssignmentExpression	* parent = * dp_parent		135437	2		=			
ANR	135445	Identifier	parent		135437	0					
ANR	135446	UnaryOperationExpression	* dp_parent		135437	1					
ANR	135447	UnaryOperator	*		135437	0					
ANR	135448	Identifier	dp_parent		135437	1					
ANR	135449	IdentifierDeclStatement	bool status = AXIS2_SUCCESS ;	73:10:2230:2257	135437	1	True				
ANR	135450	IdentifierDecl	status = AXIS2_SUCCESS		135437	0					
ANR	135451	IdentifierDeclType	bool		135437	0					
ANR	135452	Identifier	status		135437	1					
ANR	135453	AssignmentExpression	status = AXIS2_SUCCESS		135437	2		=			
ANR	135454	Identifier	AXIS2_SUCCESS		135437	0					
ANR	135455	Identifier	AXIS2_SUCCESS		135437	1					
ANR	135456	IdentifierDeclStatement	const axis2_char_t * text_value = NULL ;	75:9:2280:2317	135437	2	True				
ANR	135457	IdentifierDecl	* text_value = NULL		135437	0					
ANR	135458	IdentifierDeclType	const axis2_char_t *		135437	0					
ANR	135459	Identifier	text_value		135437	1					
ANR	135460	AssignmentExpression	* text_value = NULL		135437	2		=			
ANR	135461	Identifier	NULL		135437	0					
ANR	135462	Identifier	NULL		135437	1					
ANR	135463	IdentifierDeclStatement	axutil_qname_t * mqname = NULL ;	76:9:2328:2357	135437	3	True				
ANR	135464	IdentifierDecl	* mqname = NULL		135437	0					
ANR	135465	IdentifierDeclType	axutil_qname_t *		135437	0					
ANR	135466	Identifier	mqname		135437	1					
ANR	135467	AssignmentExpression	* mqname = NULL		135437	2		=			
ANR	135468	Identifier	NULL		135437	0					
ANR	135469	Identifier	NULL		135437	1					
ANR	135470	IdentifierDeclStatement	int i = 0 ;	78:15:2385:2394	135437	4	True				
ANR	135471	IdentifierDecl	i = 0		135437	0					
ANR	135472	IdentifierDeclType	int		135437	0					
ANR	135473	Identifier	i		135437	1					
ANR	135474	AssignmentExpression	i = 0		135437	2		=			
ANR	135475	Identifier	i		135437	0					
ANR	135476	PrimaryExpression	0		135437	1					
ANR	135477	IdentifierDeclStatement	int sequence_broken = 0 ;	80:15:2424:2447	135437	5	True				
ANR	135478	IdentifierDecl	sequence_broken = 0		135437	0					
ANR	135479	IdentifierDeclType	int		135437	0					
ANR	135480	Identifier	sequence_broken		135437	1					
ANR	135481	AssignmentExpression	sequence_broken = 0		135437	2		=			
ANR	135482	Identifier	sequence_broken		135437	0					
ANR	135483	PrimaryExpression	0		135437	1					
ANR	135484	IdentifierDeclStatement	axiom_node_t * tmp_node = NULL ;	81:15:2464:2493	135437	6	True				
ANR	135485	IdentifierDecl	* tmp_node = NULL		135437	0					
ANR	135486	IdentifierDeclType	axiom_node_t *		135437	0					
ANR	135487	Identifier	tmp_node		135437	1					
ANR	135488	AssignmentExpression	* tmp_node = NULL		135437	2		=			
ANR	135489	Identifier	NULL		135437	0					
ANR	135490	Identifier	NULL		135437	1					
ANR	135491	IdentifierDeclStatement	axutil_qname_t * element_qname = NULL ;	83:12:2520:2556	135437	7	True				
ANR	135492	IdentifierDecl	* element_qname = NULL		135437	0					
ANR	135493	IdentifierDeclType	axutil_qname_t *		135437	0					
ANR	135494	Identifier	element_qname		135437	1					
ANR	135495	AssignmentExpression	* element_qname = NULL		135437	2		=			
ANR	135496	Identifier	NULL		135437	0					
ANR	135497	Identifier	NULL		135437	1					
ANR	135498	IdentifierDeclStatement	axiom_node_t * first_node = NULL ;	85:15:2587:2618	135437	8	True				
ANR	135499	IdentifierDecl	* first_node = NULL		135437	0					
ANR	135500	IdentifierDeclType	axiom_node_t *		135437	0					
ANR	135501	Identifier	first_node		135437	1					
ANR	135502	AssignmentExpression	* first_node = NULL		135437	2		=			
ANR	135503	Identifier	NULL		135437	0					
ANR	135504	Identifier	NULL		135437	1					
ANR	135505	IdentifierDeclStatement	bool is_early_node_valid = true ;	86:15:2635:2666	135437	9	True				
ANR	135506	IdentifierDecl	is_early_node_valid = true		135437	0					
ANR	135507	IdentifierDeclType	bool		135437	0					
ANR	135508	Identifier	is_early_node_valid		135437	1					
ANR	135509	AssignmentExpression	is_early_node_valid = true		135437	2		=			
ANR	135510	Identifier	true		135437	0					
ANR	135511	Identifier	true		135437	1					
ANR	135512	IdentifierDeclStatement	axiom_node_t * current_node = NULL ;	87:15:2683:2716	135437	10	True				
ANR	135513	IdentifierDecl	* current_node = NULL		135437	0					
ANR	135514	IdentifierDeclType	axiom_node_t *		135437	0					
ANR	135515	Identifier	current_node		135437	1					
ANR	135516	AssignmentExpression	* current_node = NULL		135437	2		=			
ANR	135517	Identifier	NULL		135437	0					
ANR	135518	Identifier	NULL		135437	1					
ANR	135519	IdentifierDeclStatement	axiom_element_t * current_element = NULL ;	88:15:2733:2772	135437	11	True				
ANR	135520	IdentifierDecl	* current_element = NULL		135437	0					
ANR	135521	IdentifierDeclType	axiom_element_t *		135437	0					
ANR	135522	Identifier	current_element		135437	1					
ANR	135523	AssignmentExpression	* current_element = NULL		135437	2		=			
ANR	135524	Identifier	NULL		135437	0					
ANR	135525	Identifier	NULL		135437	1					
ANR	135526	WhileStatement	"while ( parent && axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT )"		135437	12					
ANR	135527	Condition	"parent && axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"	91:20:2822:2903	135437	0	True				
ANR	135528	AndExpression	"parent && axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		135437	0		&&			
ANR	135529	Identifier	parent		135437	0					
ANR	135530	EqualityExpression	"axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		135437	1		!=			
ANR	135531	CallExpression	"axiom_node_get_node_type ( parent , Environment :: getEnv ( ) )"		135437	0					
ANR	135532	Callee	axiom_node_get_node_type		135437	0					
ANR	135533	Identifier	axiom_node_get_node_type		135437	0					
ANR	135534	ArgumentList	parent		135437	1					
ANR	135535	Argument	parent		135437	0					
ANR	135536	Identifier	parent		135437	0					
ANR	135537	Argument	Environment :: getEnv ( )		135437	1					
ANR	135538	CallExpression	Environment :: getEnv ( )		135437	0					
ANR	135539	Callee	Environment :: getEnv		135437	0					
ANR	135540	Identifier	Environment :: getEnv		135437	0					
ANR	135541	ArgumentList			135437	1					
ANR	135542	Identifier	AXIOM_ELEMENT		135437	1					
ANR	135543	CompoundStatement		23:14:757:757	135437	1					
ANR	135544	ExpressionStatement	"parent = axiom_node_get_next_sibling ( parent , Environment :: getEnv ( ) )"	93:18:2940:3007	135437	0	True				
ANR	135545	AssignmentExpression	"parent = axiom_node_get_next_sibling ( parent , Environment :: getEnv ( ) )"		135437	0		=			
ANR	135546	Identifier	parent		135437	0					
ANR	135547	CallExpression	"axiom_node_get_next_sibling ( parent , Environment :: getEnv ( ) )"		135437	1					
ANR	135548	Callee	axiom_node_get_next_sibling		135437	0					
ANR	135549	Identifier	axiom_node_get_next_sibling		135437	0					
ANR	135550	ArgumentList	parent		135437	1					
ANR	135551	Argument	parent		135437	0					
ANR	135552	Identifier	parent		135437	0					
ANR	135553	Argument	Environment :: getEnv ( )		135437	1					
ANR	135554	CallExpression	Environment :: getEnv ( )		135437	0					
ANR	135555	Callee	Environment :: getEnv		135437	0					
ANR	135556	Identifier	Environment :: getEnv		135437	0					
ANR	135557	ArgumentList			135437	1					
ANR	135558	IfStatement	if ( NULL == parent )		135437	13					
ANR	135559	Condition	NULL == parent	95:18:3043:3056	135437	0	True				
ANR	135560	EqualityExpression	NULL == parent		135437	0		==			
ANR	135561	Identifier	NULL		135437	0					
ANR	135562	Identifier	parent		135437	1					
ANR	135563	CompoundStatement		27:14:910:910	135437	1					
ANR	135564	ReturnStatement	return AXIS2_FAILURE ;	97:16:3094:3114	135437	0	True				
ANR	135565	Identifier	AXIS2_FAILURE		135437	0					
ANR	135566	ExpressionStatement	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"	101:20:3168:3263	135437	14	True				
ANR	135567	AssignmentExpression	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"		135437	0		=			
ANR	135568	Identifier	current_element		135437	0					
ANR	135569	CastExpression	"( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"		135437	1					
ANR	135570	CastTarget	axiom_element_t *		135437	0					
ANR	135571	CallExpression	"axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"		135437	1					
ANR	135572	Callee	axiom_node_get_data_element		135437	0					
ANR	135573	Identifier	axiom_node_get_data_element		135437	0					
ANR	135574	ArgumentList	parent		135437	1					
ANR	135575	Argument	parent		135437	0					
ANR	135576	Identifier	parent		135437	0					
ANR	135577	Argument	Environment :: getEnv ( )		135437	1					
ANR	135578	CallExpression	Environment :: getEnv ( )		135437	0					
ANR	135579	Callee	Environment :: getEnv		135437	0					
ANR	135580	Identifier	Environment :: getEnv		135437	0					
ANR	135581	ArgumentList			135437	1					
ANR	135582	ExpressionStatement	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , parent )"	102:20:3285:3365	135437	15	True				
ANR	135583	AssignmentExpression	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , parent )"		135437	0		=			
ANR	135584	Identifier	mqname		135437	0					
ANR	135585	CallExpression	"axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , parent )"		135437	1					
ANR	135586	Callee	axiom_element_get_qname		135437	0					
ANR	135587	Identifier	axiom_element_get_qname		135437	0					
ANR	135588	ArgumentList	current_element		135437	1					
ANR	135589	Argument	current_element		135437	0					
ANR	135590	Identifier	current_element		135437	0					
ANR	135591	Argument	Environment :: getEnv ( )		135437	1					
ANR	135592	CallExpression	Environment :: getEnv ( )		135437	0					
ANR	135593	Callee	Environment :: getEnv		135437	0					
ANR	135594	Identifier	Environment :: getEnv		135437	0					
ANR	135595	ArgumentList			135437	1					
ANR	135596	Argument	parent		135437	2					
ANR	135597	Identifier	parent		135437	0					
ANR	135598	IfStatement	"if ( axutil_qname_equals ( mqname , Environment :: getEnv ( ) , this -> qname ) )"		135437	16					
ANR	135599	Condition	"axutil_qname_equals ( mqname , Environment :: getEnv ( ) , this -> qname )"	103:24:3391:3453	135437	0	True				
ANR	135600	CallExpression	"axutil_qname_equals ( mqname , Environment :: getEnv ( ) , this -> qname )"		135437	0					
ANR	135601	Callee	axutil_qname_equals		135437	0					
ANR	135602	Identifier	axutil_qname_equals		135437	0					
ANR	135603	ArgumentList	mqname		135437	1					
ANR	135604	Argument	mqname		135437	0					
ANR	135605	Identifier	mqname		135437	0					
ANR	135606	Argument	Environment :: getEnv ( )		135437	1					
ANR	135607	CallExpression	Environment :: getEnv ( )		135437	0					
ANR	135608	Callee	Environment :: getEnv		135437	0					
ANR	135609	Identifier	Environment :: getEnv		135437	0					
ANR	135610	ArgumentList			135437	1					
ANR	135611	Argument	this -> qname		135437	2					
ANR	135612	PtrMemberAccess	this -> qname		135437	0					
ANR	135613	Identifier	this		135437	0					
ANR	135614	Identifier	qname		135437	1					
ANR	135615	CompoundStatement		35:20:1313:1313	135437	1					
ANR	135616	ExpressionStatement	"first_node = axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"	106:26:3529:3599	135437	0	True				
ANR	135617	AssignmentExpression	"first_node = axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"		135437	0		=			
ANR	135618	Identifier	first_node		135437	0					
ANR	135619	CallExpression	"axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"		135437	1					
ANR	135620	Callee	axiom_node_get_first_child		135437	0					
ANR	135621	Identifier	axiom_node_get_first_child		135437	0					
ANR	135622	ArgumentList	parent		135437	1					
ANR	135623	Argument	parent		135437	0					
ANR	135624	Identifier	parent		135437	0					
ANR	135625	Argument	Environment :: getEnv ( )		135437	1					
ANR	135626	CallExpression	Environment :: getEnv ( )		135437	0					
ANR	135627	Callee	Environment :: getEnv		135437	0					
ANR	135628	Identifier	Environment :: getEnv		135437	0					
ANR	135629	ArgumentList			135437	1					
ANR	135630	ElseStatement	else		135437	0					
ANR	135631	CompoundStatement		41:20:1532:1532	135437	0					
ANR	135632	Statement	WSF_LOG_ERROR_MSG	111:24:3721:3737	135437	0	True				
ANR	135633	Statement	(	111:41:3738:3738	135437	1	True				
ANR	135634	Statement	Environment	111:42:3739:3749	135437	2	True				
ANR	135635	Statement	::	111:53:3750:3751	135437	3	True				
ANR	135636	Statement	getEnv	111:55:3752:3757	135437	4	True				
ANR	135637	Statement	(	111:61:3758:3758	135437	5	True				
ANR	135638	Statement	)	111:62:3759:3759	135437	6	True				
ANR	135639	Statement	->	111:63:3760:3761	135437	7	True				
ANR	135640	Statement	log	111:65:3762:3764	135437	8	True				
ANR	135641	Statement	","	111:68:3765:3765	135437	9	True				
ANR	135642	Statement	WSF_LOG_SI	111:70:3767:3776	135437	10	True				
ANR	135643	Statement	","	111:80:3777:3777	135437	11	True				
ANR	135644	Statement	"""Failed in building adb object for GetJobSummaryResponse : """	112:30:3809:3868	135437	12	True				
ANR	135645	Statement	"""Expected %s but returned %s"""	113:30:3900:3928	135437	13	True				
ANR	135646	Statement	","	113:59:3929:3929	135437	14	True				
ANR	135647	Statement	axutil_qname_to_string	114:30:3961:3982	135437	15	True				
ANR	135648	Statement	(	114:52:3983:3983	135437	16	True				
ANR	135649	Statement	qname	114:53:3984:3988	135437	17	True				
ANR	135650	Statement	","	114:58:3989:3989	135437	18	True				
ANR	135651	Statement	Environment	114:60:3991:4001	135437	19	True				
ANR	135652	Statement	::	114:71:4002:4003	135437	20	True				
ANR	135653	Statement	getEnv	114:73:4004:4009	135437	21	True				
ANR	135654	Statement	(	114:79:4010:4010	135437	22	True				
ANR	135655	Statement	)	114:80:4011:4011	135437	23	True				
ANR	135656	Statement	)	114:81:4012:4012	135437	24	True				
ANR	135657	Statement	","	114:82:4013:4013	135437	25	True				
ANR	135658	Statement	axutil_qname_to_string	115:30:4045:4066	135437	26	True				
ANR	135659	Statement	(	115:52:4067:4067	135437	27	True				
ANR	135660	Statement	mqname	115:53:4068:4073	135437	28	True				
ANR	135661	Statement	","	115:59:4074:4074	135437	29	True				
ANR	135662	Statement	Environment	115:61:4076:4086	135437	30	True				
ANR	135663	Statement	::	115:72:4087:4088	135437	31	True				
ANR	135664	Statement	getEnv	115:74:4089:4094	135437	32	True				
ANR	135665	Statement	(	115:80:4095:4095	135437	33	True				
ANR	135666	Statement	)	115:81:4096:4096	135437	34	True				
ANR	135667	Statement	)	115:82:4097:4097	135437	35	True				
ANR	135668	Statement	)	115:83:4098:4098	135437	36	True				
ANR	135669	ExpressionStatement		115:84:4099:4099	135437	37	True				
ANR	135670	ReturnStatement	return AXIS2_FAILURE ;	117:24:4150:4170	135437	38	True				
ANR	135671	Identifier	AXIS2_FAILURE		135437	0					
ANR	135672	CompoundStatement		55:23:2191:2285	135437	17					
ANR	135673	IdentifierDeclStatement	std :: vector < AviaryCommon :: JobSummary * > * arr_list = new std :: vector < AviaryCommon :: JobSummary * > ( ) ;	124:23:4354:4448	135437	0	True				
ANR	135674	IdentifierDecl	* arr_list = new std :: vector < AviaryCommon :: JobSummary * > ( )		135437	0					
ANR	135675	IdentifierDeclType	std :: vector < AviaryCommon :: JobSummary * > *		135437	0					
ANR	135676	Identifier	arr_list		135437	1					
ANR	135677	AssignmentExpression	* arr_list = new std :: vector < AviaryCommon :: JobSummary * > ( )		135437	2		=			
ANR	135678	Identifier	arr_list		135437	0					
ANR	135679	UnaryExpression	new std :: vector < AviaryCommon :: JobSummary * > ( )		135437	1					
ANR	135680	ExpressionStatement	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""jobs"" , NULL , NULL )"	134:36:4690:4768	135437	1	True				
ANR	135681	AssignmentExpression	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""jobs"" , NULL , NULL )"		135437	0		=			
ANR	135682	Identifier	element_qname		135437	0					
ANR	135683	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""jobs"" , NULL , NULL )"		135437	1					
ANR	135684	Callee	axutil_qname_create		135437	0					
ANR	135685	Identifier	axutil_qname_create		135437	0					
ANR	135686	ArgumentList	Environment :: getEnv ( )		135437	1					
ANR	135687	Argument	Environment :: getEnv ( )		135437	0					
ANR	135688	CallExpression	Environment :: getEnv ( )		135437	0					
ANR	135689	Callee	Environment :: getEnv		135437	0					
ANR	135690	Identifier	Environment :: getEnv		135437	0					
ANR	135691	ArgumentList			135437	1					
ANR	135692	Argument	"""jobs"""		135437	1					
ANR	135693	PrimaryExpression	"""jobs"""		135437	0					
ANR	135694	Argument	NULL		135437	2					
ANR	135695	Identifier	NULL		135437	0					
ANR	135696	Argument	NULL		135437	3					
ANR	135697	Identifier	NULL		135437	0					
ANR	135698	ForStatement	"for ( i = 0 , sequence_broken = 0 , current_node = first_node ; ! sequence_broken && current_node != NULL ; )"		135437	2					
ANR	135699	ForInit	"i = 0 , sequence_broken = 0 , current_node = first_node ;"	137:36:4873:4926	135437	0	True				
ANR	135700	Expression	"i = 0 , sequence_broken = 0 , current_node = first_node"		135437	0					
ANR	135701	AssignmentExpression	i = 0		135437	0		=			
ANR	135702	Identifier	i		135437	0					
ANR	135703	PrimaryExpression	0		135437	1					
ANR	135704	Expression	"sequence_broken = 0 , current_node = first_node"		135437	1					
ANR	135705	AssignmentExpression	sequence_broken = 0		135437	0		=			
ANR	135706	Identifier	sequence_broken		135437	0					
ANR	135707	PrimaryExpression	0		135437	1					
ANR	135708	AssignmentExpression	current_node = first_node		135437	1		=			
ANR	135709	Identifier	current_node		135437	0					
ANR	135710	Identifier	first_node		135437	1					
ANR	135711	Condition	! sequence_broken && current_node != NULL	137:91:4928:4967	135437	1	True				
ANR	135712	AndExpression	! sequence_broken && current_node != NULL		135437	0		&&			
ANR	135713	UnaryOperationExpression	! sequence_broken		135437	0					
ANR	135714	UnaryOperator	!		135437	0					
ANR	135715	Identifier	sequence_broken		135437	1					
ANR	135716	EqualityExpression	current_node != NULL		135437	1		!=			
ANR	135717	Identifier	current_node		135437	0					
ANR	135718	Identifier	NULL		135437	1					
ANR	135719	CompoundStatement		70:31:2885:2885	135437	2					
ANR	135720	IfStatement	"if ( axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT )"		135437	0					
ANR	135721	Condition	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"	140:37:5087:5164	135437	0	True				
ANR	135722	EqualityExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		135437	0		!=			
ANR	135723	CallExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) )"		135437	0					
ANR	135724	Callee	axiom_node_get_node_type		135437	0					
ANR	135725	Identifier	axiom_node_get_node_type		135437	0					
ANR	135726	ArgumentList	current_node		135437	1					
ANR	135727	Argument	current_node		135437	0					
ANR	135728	Identifier	current_node		135437	0					
ANR	135729	Argument	Environment :: getEnv ( )		135437	1					
ANR	135730	CallExpression	Environment :: getEnv ( )		135437	0					
ANR	135731	Callee	Environment :: getEnv		135437	0					
ANR	135732	Identifier	Environment :: getEnv		135437	0					
ANR	135733	ArgumentList			135437	1					
ANR	135734	Identifier	AXIOM_ELEMENT		135437	1					
ANR	135735	CompoundStatement		72:34:3038:3038	135437	1					
ANR	135736	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	142:37:5240:5318	135437	0	True				
ANR	135737	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		135437	0		=			
ANR	135738	Identifier	current_node		135437	0					
ANR	135739	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		135437	1					
ANR	135740	Callee	axiom_node_get_next_sibling		135437	0					
ANR	135741	Identifier	axiom_node_get_next_sibling		135437	0					
ANR	135742	ArgumentList	current_node		135437	1					
ANR	135743	Argument	current_node		135437	0					
ANR	135744	Identifier	current_node		135437	0					
ANR	135745	Argument	Environment :: getEnv ( )		135437	1					
ANR	135746	CallExpression	Environment :: getEnv ( )		135437	0					
ANR	135747	Callee	Environment :: getEnv		135437	0					
ANR	135748	Identifier	Environment :: getEnv		135437	0					
ANR	135749	ArgumentList			135437	1					
ANR	135750	ExpressionStatement	is_early_node_valid = false	143:37:5357:5384	135437	1	True				
ANR	135751	AssignmentExpression	is_early_node_valid = false		135437	0		=			
ANR	135752	Identifier	is_early_node_valid		135437	0					
ANR	135753	Identifier	false		135437	1					
ANR	135754	ContinueStatement	continue ;	144:37:5423:5431	135437	2	True				
ANR	135755	ExpressionStatement	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"	147:34:5538:5639	135437	1	True				
ANR	135756	AssignmentExpression	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		135437	0		=			
ANR	135757	Identifier	current_element		135437	0					
ANR	135758	CastExpression	"( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		135437	1					
ANR	135759	CastTarget	axiom_element_t *		135437	0					
ANR	135760	CallExpression	"axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		135437	1					
ANR	135761	Callee	axiom_node_get_data_element		135437	0					
ANR	135762	Identifier	axiom_node_get_data_element		135437	0					
ANR	135763	ArgumentList	current_node		135437	1					
ANR	135764	Argument	current_node		135437	0					
ANR	135765	Identifier	current_node		135437	0					
ANR	135766	Argument	Environment :: getEnv ( )		135437	1					
ANR	135767	CallExpression	Environment :: getEnv ( )		135437	0					
ANR	135768	Callee	Environment :: getEnv		135437	0					
ANR	135769	Identifier	Environment :: getEnv		135437	0					
ANR	135770	ArgumentList			135437	1					
ANR	135771	ExpressionStatement	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"	148:34:5675:5761	135437	2	True				
ANR	135772	AssignmentExpression	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		135437	0		=			
ANR	135773	Identifier	mqname		135437	0					
ANR	135774	CallExpression	"axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		135437	1					
ANR	135775	Callee	axiom_element_get_qname		135437	0					
ANR	135776	Identifier	axiom_element_get_qname		135437	0					
ANR	135777	ArgumentList	current_element		135437	1					
ANR	135778	Argument	current_element		135437	0					
ANR	135779	Identifier	current_element		135437	0					
ANR	135780	Argument	Environment :: getEnv ( )		135437	1					
ANR	135781	CallExpression	Environment :: getEnv ( )		135437	0					
ANR	135782	Callee	Environment :: getEnv		135437	0					
ANR	135783	Identifier	Environment :: getEnv		135437	0					
ANR	135784	ArgumentList			135437	1					
ANR	135785	Argument	current_node		135437	2					
ANR	135786	Identifier	current_node		135437	0					
ANR	135787	IfStatement	"if ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""jobs"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		135437	3					
ANR	135788	Condition	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""jobs"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"	150:38:5802:5961	135437	0	True				
ANR	135789	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""jobs"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		135437	0		||			
ANR	135790	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		135437	0					
ANR	135791	Callee	axutil_qname_equals		135437	0					
ANR	135792	Identifier	axutil_qname_equals		135437	0					
ANR	135793	ArgumentList	element_qname		135437	1					
ANR	135794	Argument	element_qname		135437	0					
ANR	135795	Identifier	element_qname		135437	0					
ANR	135796	Argument	Environment :: getEnv ( )		135437	1					
ANR	135797	CallExpression	Environment :: getEnv ( )		135437	0					
ANR	135798	Callee	Environment :: getEnv		135437	0					
ANR	135799	Identifier	Environment :: getEnv		135437	0					
ANR	135800	ArgumentList			135437	1					
ANR	135801	Argument	mqname		135437	2					
ANR	135802	Identifier	mqname		135437	0					
ANR	135803	UnaryOperationExpression	"! axutil_strcmp ( ""jobs"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		135437	1					
ANR	135804	UnaryOperator	!		135437	0					
ANR	135805	CallExpression	"axutil_strcmp ( ""jobs"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		135437	1					
ANR	135806	Callee	axutil_strcmp		135437	0					
ANR	135807	Identifier	axutil_strcmp		135437	0					
ANR	135808	ArgumentList	"""jobs"""		135437	1					
ANR	135809	Argument	"""jobs"""		135437	0					
ANR	135810	PrimaryExpression	"""jobs"""		135437	0					
ANR	135811	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		135437	1					
ANR	135812	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		135437	0					
ANR	135813	Callee	axiom_element_get_localname		135437	0					
ANR	135814	Identifier	axiom_element_get_localname		135437	0					
ANR	135815	ArgumentList	current_element		135437	1					
ANR	135816	Argument	current_element		135437	0					
ANR	135817	Identifier	current_element		135437	0					
ANR	135818	Argument	Environment :: getEnv ( )		135437	1					
ANR	135819	CallExpression	Environment :: getEnv ( )		135437	0					
ANR	135820	Callee	Environment :: getEnv		135437	0					
ANR	135821	Identifier	Environment :: getEnv		135437	0					
ANR	135822	ArgumentList			135437	1					
ANR	135823	CompoundStatement		86:37:4014:4080	135437	1					
ANR	135824	ExpressionStatement	is_early_node_valid = true	153:38:6073:6099	135437	0	True				
ANR	135825	AssignmentExpression	is_early_node_valid = true		135437	0		=			
ANR	135826	Identifier	is_early_node_valid		135437	0					
ANR	135827	Identifier	true		135437	1					
ANR	135828	IdentifierDeclStatement	AviaryCommon :: JobSummary * element = new AviaryCommon :: JobSummary ( ) ;	155:37:6177:6243	135437	1	True				
ANR	135829	IdentifierDecl	* element = new AviaryCommon :: JobSummary ( )		135437	0					
ANR	135830	IdentifierDeclType	AviaryCommon :: JobSummary *		135437	0					
ANR	135831	Identifier	element		135437	1					
ANR	135832	AssignmentExpression	* element = new AviaryCommon :: JobSummary ( )		135437	2		=			
ANR	135833	Identifier	element		135437	0					
ANR	135834	UnaryExpression	new AviaryCommon :: JobSummary ( )		135437	1					
ANR	135835	ExpressionStatement	"status = element -> deserialize ( & current_node , & is_early_node_valid , false )"	157:42:6330:6404	135437	2	True				
ANR	135836	AssignmentExpression	"status = element -> deserialize ( & current_node , & is_early_node_valid , false )"		135437	0		=			
ANR	135837	Identifier	status		135437	0					
ANR	135838	CallExpression	"element -> deserialize ( & current_node , & is_early_node_valid , false )"		135437	1					
ANR	135839	Callee	element -> deserialize		135437	0					
ANR	135840	PtrMemberAccess	element -> deserialize		135437	0					
ANR	135841	Identifier	element		135437	0					
ANR	135842	Identifier	deserialize		135437	1					
ANR	135843	ArgumentList	& current_node		135437	1					
ANR	135844	Argument	& current_node		135437	0					
ANR	135845	UnaryOperationExpression	& current_node		135437	0					
ANR	135846	UnaryOperator	&		135437	0					
ANR	135847	Identifier	current_node		135437	1					
ANR	135848	Argument	& is_early_node_valid		135437	1					
ANR	135849	UnaryOperationExpression	& is_early_node_valid		135437	0					
ANR	135850	UnaryOperator	&		135437	0					
ANR	135851	Identifier	is_early_node_valid		135437	1					
ANR	135852	Argument	false		135437	2					
ANR	135853	Identifier	false		135437	0					
ANR	135854	IfStatement	if ( AXIS2_FAILURE == status )		135437	3					
ANR	135855	Condition	AXIS2_FAILURE == status	159:45:6494:6517	135437	0	True				
ANR	135856	EqualityExpression	AXIS2_FAILURE == status		135437	0		==			
ANR	135857	Identifier	AXIS2_FAILURE		135437	0					
ANR	135858	Identifier	status		135437	1					
ANR	135859	CompoundStatement		91:42:4399:4399	135437	1					
ANR	135860	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in building element jobs "" )"	161:7:6571:6663	135437	0	True				
ANR	135861	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in building element jobs "" )"		135437	0					
ANR	135862	Callee	WSF_LOG_ERROR_MSG		135437	0					
ANR	135863	Identifier	WSF_LOG_ERROR_MSG		135437	0					
ANR	135864	ArgumentList	Environment :: getEnv ( ) -> log		135437	1					
ANR	135865	Argument	Environment :: getEnv ( ) -> log		135437	0					
ANR	135866	PtrMemberAccess	Environment :: getEnv ( ) -> log		135437	0					
ANR	135867	CallExpression	Environment :: getEnv ( )		135437	0					
ANR	135868	Callee	Environment :: getEnv		135437	0					
ANR	135869	Identifier	Environment :: getEnv		135437	0					
ANR	135870	ArgumentList			135437	1					
ANR	135871	Identifier	log		135437	1					
ANR	135872	Argument	WSF_LOG_SI		135437	1					
ANR	135873	Identifier	WSF_LOG_SI		135437	0					
ANR	135874	Argument	"""failed in building element jobs """		135437	2					
ANR	135875	PrimaryExpression	"""failed in building element jobs """		135437	0					
ANR	135876	ElseStatement	else		135437	0					
ANR	135877	CompoundStatement		95:42:4635:4635	135437	0					
ANR	135878	ExpressionStatement	arr_list -> push_back ( element )	165:44:6844:6872	135437	0	True				
ANR	135879	CallExpression	arr_list -> push_back ( element )		135437	0					
ANR	135880	Callee	arr_list -> push_back		135437	0					
ANR	135881	PtrMemberAccess	arr_list -> push_back		135437	0					
ANR	135882	Identifier	arr_list		135437	0					
ANR	135883	Identifier	push_back		135437	1					
ANR	135884	ArgumentList	element		135437	1					
ANR	135885	Argument	element		135437	0					
ANR	135886	Identifier	element		135437	0					
ANR	135887	IfStatement	if ( AXIS2_FAILURE == status )		135437	4					
ANR	135888	Condition	AXIS2_FAILURE == status	169:40:7044:7067	135437	0	True				
ANR	135889	EqualityExpression	AXIS2_FAILURE == status		135437	0		==			
ANR	135890	Identifier	AXIS2_FAILURE		135437	0					
ANR	135891	Identifier	status		135437	1					
ANR	135892	CompoundStatement		101:37:4944:4944	135437	1					
ANR	135893	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for jobs "" )"	171:41:7150:7248	135437	0	True				
ANR	135894	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for jobs "" )"		135437	0					
ANR	135895	Callee	WSF_LOG_ERROR_MSG		135437	0					
ANR	135896	Identifier	WSF_LOG_ERROR_MSG		135437	0					
ANR	135897	ArgumentList	Environment :: getEnv ( ) -> log		135437	1					
ANR	135898	Argument	Environment :: getEnv ( ) -> log		135437	0					
ANR	135899	PtrMemberAccess	Environment :: getEnv ( ) -> log		135437	0					
ANR	135900	CallExpression	Environment :: getEnv ( )		135437	0					
ANR	135901	Callee	Environment :: getEnv		135437	0					
ANR	135902	Identifier	Environment :: getEnv		135437	0					
ANR	135903	ArgumentList			135437	1					
ANR	135904	Identifier	log		135437	1					
ANR	135905	Argument	WSF_LOG_SI		135437	1					
ANR	135906	Identifier	WSF_LOG_SI		135437	0					
ANR	135907	Argument	"""failed in setting the value for jobs """		135437	2					
ANR	135908	PrimaryExpression	"""failed in setting the value for jobs """		135437	0					
ANR	135909	IfStatement	if ( element_qname )		135437	1					
ANR	135910	Condition	element_qname	172:44:7294:7306	135437	0	True				
ANR	135911	Identifier	element_qname		135437	0					
ANR	135912	CompoundStatement		104:41:5187:5187	135437	1					
ANR	135913	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	174:44:7396:7451	135437	0	True				
ANR	135914	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		135437	0					
ANR	135915	Callee	axutil_qname_free		135437	0					
ANR	135916	Identifier	axutil_qname_free		135437	0					
ANR	135917	ArgumentList	element_qname		135437	1					
ANR	135918	Argument	element_qname		135437	0					
ANR	135919	Identifier	element_qname		135437	0					
ANR	135920	Argument	Environment :: getEnv ( )		135437	1					
ANR	135921	CallExpression	Environment :: getEnv ( )		135437	0					
ANR	135922	Callee	Environment :: getEnv		135437	0					
ANR	135923	Identifier	Environment :: getEnv		135437	0					
ANR	135924	ArgumentList			135437	1					
ANR	135925	IfStatement	if ( arr_list )		135437	2					
ANR	135926	Condition	arr_list	176:44:7540:7547	135437	0	True				
ANR	135927	Identifier	arr_list		135437	0					
ANR	135928	CompoundStatement		108:41:5428:5428	135437	1					
ANR	135929	Statement	delete	178:44:7637:7642	135437	0	True				
ANR	135930	ExpressionStatement	arr_list	178:51:7644:7652	135437	1	True				
ANR	135931	Identifier	arr_list		135437	0					
ANR	135932	ReturnStatement	return false ;	180:41:7738:7750	135437	3	True				
ANR	135933	Identifier	false		135437	0					
ANR	135934	ExpressionStatement	i ++	183:37:7829:7832	135437	5	True				
ANR	135935	PostIncDecOperationExpression	i ++		135437	0					
ANR	135936	Identifier	i		135437	0					
ANR	135937	IncDec	++		135437	1					
ANR	135938	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	184:36:7870:7949	135437	6	True				
ANR	135939	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		135437	0		=			
ANR	135940	Identifier	current_node		135437	0					
ANR	135941	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		135437	1					
ANR	135942	Callee	axiom_node_get_next_sibling		135437	0					
ANR	135943	Identifier	axiom_node_get_next_sibling		135437	0					
ANR	135944	ArgumentList	current_node		135437	1					
ANR	135945	Argument	current_node		135437	0					
ANR	135946	Identifier	current_node		135437	0					
ANR	135947	Argument	Environment :: getEnv ( )		135437	1					
ANR	135948	CallExpression	Environment :: getEnv ( )		135437	0					
ANR	135949	Callee	Environment :: getEnv		135437	0					
ANR	135950	Identifier	Environment :: getEnv		135437	0					
ANR	135951	ArgumentList			135437	1					
ANR	135952	ElseStatement	else		135437	0					
ANR	135953	CompoundStatement		118:34:5897:5897	135437	0					
ANR	135954	ExpressionStatement	is_early_node_valid = false	188:38:8100:8127	135437	0	True				
ANR	135955	AssignmentExpression	is_early_node_valid = false		135437	0		=			
ANR	135956	Identifier	is_early_node_valid		135437	0					
ANR	135957	Identifier	false		135437	1					
ANR	135958	ExpressionStatement	sequence_broken = 1	189:38:8167:8186	135437	1	True				
ANR	135959	AssignmentExpression	sequence_broken = 1		135437	0		=			
ANR	135960	Identifier	sequence_broken		135437	0					
ANR	135961	PrimaryExpression	1		135437	1					
ANR	135962	IfStatement	if ( i < 0 )		135437	3					
ANR	135963	Condition	i < 0	195:39:8364:8368	135437	0	True				
ANR	135964	RelationalExpression	i < 0		135437	0		<			
ANR	135965	Identifier	i		135437	0					
ANR	135966	PrimaryExpression	0		135437	1					
ANR	135967	CompoundStatement		127:35:6243:6243	135437	1					
ANR	135968	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""jobs (@minOccurs = '0') only have %d elements"" , i )"	198:37:8515:8623	135437	0	True				
ANR	135969	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""jobs (@minOccurs = '0') only have %d elements"" , i )"		135437	0					
ANR	135970	Callee	WSF_LOG_ERROR_MSG		135437	0					
ANR	135971	Identifier	WSF_LOG_ERROR_MSG		135437	0					
ANR	135972	ArgumentList	Environment :: getEnv ( ) -> log		135437	1					
ANR	135973	Argument	Environment :: getEnv ( ) -> log		135437	0					
ANR	135974	PtrMemberAccess	Environment :: getEnv ( ) -> log		135437	0					
ANR	135975	CallExpression	Environment :: getEnv ( )		135437	0					
ANR	135976	Callee	Environment :: getEnv		135437	0					
ANR	135977	Identifier	Environment :: getEnv		135437	0					
ANR	135978	ArgumentList			135437	1					
ANR	135979	Identifier	log		135437	1					
ANR	135980	Argument	WSF_LOG_SI		135437	1					
ANR	135981	Identifier	WSF_LOG_SI		135437	0					
ANR	135982	Argument	"""jobs (@minOccurs = '0') only have %d elements"""		135437	2					
ANR	135983	PrimaryExpression	"""jobs (@minOccurs = '0') only have %d elements"""		135437	0					
ANR	135984	Argument	i		135437	3					
ANR	135985	Identifier	i		135437	0					
ANR	135986	IfStatement	if ( element_qname )		135437	1					
ANR	135987	Condition	element_qname	199:40:8665:8677	135437	0	True				
ANR	135988	Identifier	element_qname		135437	0					
ANR	135989	CompoundStatement		131:37:6554:6554	135437	1					
ANR	135990	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	201:40:8759:8814	135437	0	True				
ANR	135991	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		135437	0					
ANR	135992	Callee	axutil_qname_free		135437	0					
ANR	135993	Identifier	axutil_qname_free		135437	0					
ANR	135994	ArgumentList	element_qname		135437	1					
ANR	135995	Argument	element_qname		135437	0					
ANR	135996	Identifier	element_qname		135437	0					
ANR	135997	Argument	Environment :: getEnv ( )		135437	1					
ANR	135998	CallExpression	Environment :: getEnv ( )		135437	0					
ANR	135999	Callee	Environment :: getEnv		135437	0					
ANR	136000	Identifier	Environment :: getEnv		135437	0					
ANR	136001	ArgumentList			135437	1					
ANR	136002	IfStatement	if ( arr_list )		135437	2					
ANR	136003	Condition	arr_list	203:40:8895:8902	135437	0	True				
ANR	136004	Identifier	arr_list		135437	0					
ANR	136005	CompoundStatement		135:37:6779:6779	135437	1					
ANR	136006	Statement	delete	205:40:8984:8989	135437	0	True				
ANR	136007	ExpressionStatement	arr_list	205:47:8991:8999	135437	1	True				
ANR	136008	Identifier	arr_list		135437	0					
ANR	136009	ReturnStatement	return false ;	207:37:9077:9089	135437	3	True				
ANR	136010	Identifier	false		135437	0					
ANR	136011	IfStatement	if ( 0 == arr_list -> size ( ) )		135437	4					
ANR	136012	Condition	0 == arr_list -> size ( )	211:34:9195:9215	135437	0	True				
ANR	136013	EqualityExpression	0 == arr_list -> size ( )		135437	0		==			
ANR	136014	PrimaryExpression	0		135437	0					
ANR	136015	CallExpression	arr_list -> size ( )		135437	1					
ANR	136016	Callee	arr_list -> size		135437	0					
ANR	136017	PtrMemberAccess	arr_list -> size		135437	0					
ANR	136018	Identifier	arr_list		135437	0					
ANR	136019	Identifier	size		135437	1					
ANR	136020	ArgumentList			135437	1					
ANR	136021	CompoundStatement		143:31:7086:7086	135437	1					
ANR	136022	Statement	delete	213:36:9287:9292	135437	0	True				
ANR	136023	ExpressionStatement	arr_list	213:43:9294:9302	135437	1	True				
ANR	136024	Identifier	arr_list		135437	0					
ANR	136025	ElseStatement	else		135437	0					
ANR	136026	CompoundStatement		147:31:7241:7241	135437	0					
ANR	136027	ExpressionStatement	status = setJobs ( arr_list )	217:36:9442:9468	135437	0	True				
ANR	136028	AssignmentExpression	status = setJobs ( arr_list )		135437	0		=			
ANR	136029	Identifier	status		135437	0					
ANR	136030	CallExpression	setJobs ( arr_list )		135437	1					
ANR	136031	Callee	setJobs		135437	0					
ANR	136032	Identifier	setJobs		135437	0					
ANR	136033	ArgumentList	arr_list		135437	1					
ANR	136034	Argument	arr_list		135437	0					
ANR	136035	Identifier	arr_list		135437	0					
ANR	136036	IfStatement	if ( element_qname )		135437	18					
ANR	136037	Condition	element_qname	223:21:9612:9624	135437	0	True				
ANR	136038	Identifier	element_qname		135437	0					
ANR	136039	CompoundStatement		155:18:7482:7482	135437	1					
ANR	136040	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	225:21:9668:9723	135437	0	True				
ANR	136041	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		135437	0					
ANR	136042	Callee	axutil_qname_free		135437	0					
ANR	136043	Identifier	axutil_qname_free		135437	0					
ANR	136044	ArgumentList	element_qname		135437	1					
ANR	136045	Argument	element_qname		135437	0					
ANR	136046	Identifier	element_qname		135437	0					
ANR	136047	Argument	Environment :: getEnv ( )		135437	1					
ANR	136048	CallExpression	Environment :: getEnv ( )		135437	0					
ANR	136049	Callee	Environment :: getEnv		135437	0					
ANR	136050	Identifier	Environment :: getEnv		135437	0					
ANR	136051	ArgumentList			135437	1					
ANR	136052	ExpressionStatement	element_qname = NULL	226:21:9746:9766	135437	1	True				
ANR	136053	AssignmentExpression	element_qname = NULL		135437	0		=			
ANR	136054	Identifier	element_qname		135437	0					
ANR	136055	Identifier	NULL		135437	1					
ANR	136056	ReturnStatement	return status ;	229:10:9816:9829	135437	19	True				
ANR	136057	Identifier	status		135437	0					
ANR	136058	ReturnType	bool WSF_CALL		135437	1					
ANR	136059	Identifier	AviaryQuery :: GetJobSummaryResponse :: deserialize		135437	2					
ANR	136060	ParameterList	"axiom_node_t * * dp_parent , bool * dp_is_early_node_valid , bool dont_care_minoccurs"		135437	3					
ANR	136061	Parameter	axiom_node_t * * dp_parent	69:56:2073:2096	135437	0	True				
ANR	136062	ParameterType	axiom_node_t * *		135437	0					
ANR	136063	Identifier	dp_parent		135437	1					
ANR	136064	Parameter	bool * dp_is_early_node_valid	69:81:2098:2125	135437	1	True				
ANR	136065	ParameterType	bool *		135437	0					
ANR	136066	Identifier	dp_is_early_node_valid		135437	1					
ANR	136067	Parameter	bool dont_care_minoccurs	69:111:2128:2151	135437	2	True				
ANR	136068	ParameterType	bool		135437	0					
ANR	136069	Identifier	dont_care_minoccurs		135437	1					
ANR	136070	CFGEntryNode	ENTRY		135437		True				
ANR	136071	CFGExitNode	EXIT		135437		True				
ANR	136072	Symbol	sequence_broken		135437						
ANR	136073	Symbol	parent		135437						
ANR	136074	Symbol	is_early_node_valid		135437						
ANR	136075	Symbol	Environment :: getEnv		135437						
ANR	136076	Symbol	mqname		135437						
ANR	136077	Symbol	current_node		135437						
ANR	136078	Symbol	axiom_element_get_qname		135437						
ANR	136079	Symbol	* element		135437						
ANR	136080	Symbol	element_qname		135437						
ANR	136081	Symbol	axutil_qname_create		135437						
ANR	136082	Symbol	* dp_parent		135437						
ANR	136083	Symbol	AXIS2_FAILURE		135437						
ANR	136084	Symbol	axiom_node_get_data_element		135437						
ANR	136085	Symbol	this -> qname		135437						
ANR	136086	Symbol	dont_care_minoccurs		135437						
ANR	136087	Symbol	dp_is_early_node_valid		135437						
ANR	136088	Symbol	WSF_LOG_SI		135437						
ANR	136089	Symbol	setJobs		135437						
ANR	136090	Symbol	& current_node		135437						
ANR	136091	Symbol	first_node		135437						
ANR	136092	Symbol	& is_early_node_valid		135437						
ANR	136093	Symbol	* arr_list		135437						
ANR	136094	Symbol	AXIS2_SUCCESS		135437						
ANR	136095	Symbol	current_element		135437						
ANR	136096	Symbol	element		135437						
ANR	136097	Symbol	NULL		135437						
ANR	136098	Symbol	dp_parent		135437						
ANR	136099	Symbol	AXIOM_ELEMENT		135437						
ANR	136100	Symbol	this		135437						
ANR	136101	Symbol	false		135437						
ANR	136102	Symbol	i		135437						
ANR	136103	Symbol	axiom_node_get_node_type		135437						
ANR	136104	Symbol	axiom_element_get_localname		135437						
ANR	136105	Symbol	arr_list -> size		135437						
ANR	136106	Symbol	Environment :: getEnv ( ) -> log		135437						
ANR	136107	Symbol	text_value		135437						
ANR	136108	Symbol	* this		135437						
ANR	136109	Symbol	axiom_node_get_next_sibling		135437						
ANR	136110	Symbol	axiom_node_get_first_child		135437						
ANR	136111	Symbol	arr_list		135437						
ANR	136112	Symbol	tmp_node		135437						
ANR	136113	Symbol	axutil_strcmp		135437						
ANR	136114	Symbol	* Environment :: getEnv		135437						
ANR	136115	Symbol	true		135437						
ANR	136116	Symbol	axutil_qname_equals		135437						
ANR	136117	Symbol	element -> deserialize		135437						
ANR	136118	Symbol	status		135437						
ANR	136119	Function	AviaryQuery :: GetJobSummaryResponse :: isParticle	232:10:9851:10005							
ANR	136120	FunctionDef	AviaryQuery :: GetJobSummaryResponse :: isParticle ()		136119	0					
ANR	136121	CompoundStatement		234:10:9934:10005	136119	0					
ANR	136122	ReturnStatement	return false ;	236:17:9966:9978	136119	0	True				
ANR	136123	Identifier	false		136119	0					
ANR	136124	ReturnType	bool WSF_CALL		136119	1					
ANR	136125	Identifier	AviaryQuery :: GetJobSummaryResponse :: isParticle		136119	2					
ANR	136126	ParameterList			136119	3					
ANR	136127	CFGEntryNode	ENTRY		136119		True				
ANR	136128	CFGExitNode	EXIT		136119		True				
ANR	136129	Symbol	false		136119						
ANR	136130	Function	AviaryQuery :: GetJobSummaryResponse :: declareParentNamespaces	241:10:10019:10352							
ANR	136131	FunctionDef	"AviaryQuery :: GetJobSummaryResponse :: declareParentNamespaces (axiom_element_t * parent_element , axutil_hash_t * namespaces , int * next_ns_index)"		136130	0					
ANR	136132	CompoundStatement		245:10:10234:10352	136130	0					
ANR	136133	ReturnType	void WSF_CALL		136130	1					
ANR	136134	Identifier	AviaryQuery :: GetJobSummaryResponse :: declareParentNamespaces		136130	2					
ANR	136135	ParameterList	"axiom_element_t * parent_element , axutil_hash_t * namespaces , int * next_ns_index"		136130	3					
ANR	136136	Parameter	axiom_element_t * parent_element	243:20:10124:10154	136130	0	True				
ANR	136137	ParameterType	axiom_element_t *		136130	0					
ANR	136138	Identifier	parent_element		136130	1					
ANR	136139	Parameter	axutil_hash_t * namespaces	244:20:10177:10201	136130	1	True				
ANR	136140	ParameterType	axutil_hash_t *		136130	0					
ANR	136141	Identifier	namespaces		136130	1					
ANR	136142	Parameter	int * next_ns_index	244:47:10204:10221	136130	2	True				
ANR	136143	ParameterType	int *		136130	0					
ANR	136144	Identifier	next_ns_index		136130	1					
ANR	136145	CFGEntryNode	ENTRY		136130		True				
ANR	136146	CFGExitNode	EXIT		136130		True				
ANR	136147	Symbol	parent_element		136130						
ANR	136148	Symbol	next_ns_index		136130						
ANR	136149	Symbol	namespaces		136130						
ANR	136150	Function	AviaryQuery :: GetJobSummaryResponse :: serialize	253:22:10395:16707							
ANR	136151	FunctionDef	"AviaryQuery :: GetJobSummaryResponse :: serialize (axiom_node_t * parent , axiom_element_t * parent_element , int parent_tag_closed , axutil_hash_t * namespaces , int * next_ns_index)"		136150	0					
ANR	136152	CompoundStatement		259:8:10600:16707	136150	0					
ANR	136153	IdentifierDeclStatement	axiom_node_t * current_node = NULL ;	263:9:10647:10680	136150	0	True				
ANR	136154	IdentifierDecl	* current_node = NULL		136150	0					
ANR	136155	IdentifierDeclType	axiom_node_t *		136150	0					
ANR	136156	Identifier	current_node		136150	1					
ANR	136157	AssignmentExpression	* current_node = NULL		136150	2		=			
ANR	136158	Identifier	NULL		136150	0					
ANR	136159	Identifier	NULL		136150	1					
ANR	136160	IdentifierDeclStatement	int tag_closed = 0 ;	264:9:10691:10709	136150	1	True				
ANR	136161	IdentifierDecl	tag_closed = 0		136150	0					
ANR	136162	IdentifierDeclType	int		136150	0					
ANR	136163	Identifier	tag_closed		136150	1					
ANR	136164	AssignmentExpression	tag_closed = 0		136150	2		=			
ANR	136165	Identifier	tag_closed		136150	0					
ANR	136166	PrimaryExpression	0		136150	1					
ANR	136167	IdentifierDeclStatement	axiom_namespace_t * ns1 = NULL ;	268:16:10748:10777	136150	2	True				
ANR	136168	IdentifierDecl	* ns1 = NULL		136150	0					
ANR	136169	IdentifierDeclType	axiom_namespace_t *		136150	0					
ANR	136170	Identifier	ns1		136150	1					
ANR	136171	AssignmentExpression	* ns1 = NULL		136150	2		=			
ANR	136172	Identifier	NULL		136150	0					
ANR	136173	Identifier	NULL		136150	1					
ANR	136174	IdentifierDeclStatement	axis2_char_t * qname_uri = NULL ;	270:16:10796:10826	136150	3	True				
ANR	136175	IdentifierDecl	* qname_uri = NULL		136150	0					
ANR	136176	IdentifierDeclType	axis2_char_t *		136150	0					
ANR	136177	Identifier	qname_uri		136150	1					
ANR	136178	AssignmentExpression	* qname_uri = NULL		136150	2		=			
ANR	136179	Identifier	NULL		136150	0					
ANR	136180	Identifier	NULL		136150	1					
ANR	136181	IdentifierDeclStatement	axis2_char_t * qname_prefix = NULL ;	271:16:10844:10877	136150	4	True				
ANR	136182	IdentifierDecl	* qname_prefix = NULL		136150	0					
ANR	136183	IdentifierDeclType	axis2_char_t *		136150	0					
ANR	136184	Identifier	qname_prefix		136150	1					
ANR	136185	AssignmentExpression	* qname_prefix = NULL		136150	2		=			
ANR	136186	Identifier	NULL		136150	0					
ANR	136187	Identifier	NULL		136150	1					
ANR	136188	IdentifierDeclStatement	axis2_char_t * p_prefix = NULL ;	272:16:10895:10924	136150	5	True				
ANR	136189	IdentifierDecl	* p_prefix = NULL		136150	0					
ANR	136190	IdentifierDeclType	axis2_char_t *		136150	0					
ANR	136191	Identifier	p_prefix		136150	1					
ANR	136192	AssignmentExpression	* p_prefix = NULL		136150	2		=			
ANR	136193	Identifier	NULL		136150	0					
ANR	136194	Identifier	NULL		136150	1					
ANR	136195	IdentifierDeclStatement	int i = 0 ;	274:15:10954:10963	136150	6	True				
ANR	136196	IdentifierDecl	i = 0		136150	0					
ANR	136197	IdentifierDeclType	int		136150	0					
ANR	136198	Identifier	i		136150	1					
ANR	136199	AssignmentExpression	i = 0		136150	2		=			
ANR	136200	Identifier	i		136150	0					
ANR	136201	PrimaryExpression	0		136150	1					
ANR	136202	IdentifierDeclStatement	int count = 0 ;	275:15:10980:10993	136150	7	True				
ANR	136203	IdentifierDecl	count = 0		136150	0					
ANR	136204	IdentifierDeclType	int		136150	0					
ANR	136205	Identifier	count		136150	1					
ANR	136206	AssignmentExpression	count = 0		136150	2		=			
ANR	136207	Identifier	count		136150	0					
ANR	136208	PrimaryExpression	0		136150	1					
ANR	136209	IdentifierDeclStatement	void * element = NULL ;	276:15:11010:11030	136150	8	True				
ANR	136210	IdentifierDecl	* element = NULL		136150	0					
ANR	136211	IdentifierDeclType	void *		136150	0					
ANR	136212	Identifier	element		136150	1					
ANR	136213	AssignmentExpression	* element = NULL		136150	2		=			
ANR	136214	Identifier	NULL		136150	0					
ANR	136215	Identifier	NULL		136150	1					
ANR	136216	IdentifierDeclStatement	axis2_char_t text_value_1 [ ADB_DEFAULT_DIGIT_LIMIT ] ;	278:20:11066:11116	136150	9	True				
ANR	136217	IdentifierDecl	text_value_1 [ ADB_DEFAULT_DIGIT_LIMIT ]		136150	0					
ANR	136218	IdentifierDeclType	axis2_char_t [ ADB_DEFAULT_DIGIT_LIMIT ]		136150	0					
ANR	136219	Identifier	text_value_1		136150	1					
ANR	136220	Identifier	ADB_DEFAULT_DIGIT_LIMIT		136150	2					
ANR	136221	IdentifierDeclStatement	axis2_char_t * start_input_str = NULL ;	280:15:11154:11190	136150	10	True				
ANR	136222	IdentifierDecl	* start_input_str = NULL		136150	0					
ANR	136223	IdentifierDeclType	axis2_char_t *		136150	0					
ANR	136224	Identifier	start_input_str		136150	1					
ANR	136225	AssignmentExpression	* start_input_str = NULL		136150	2		=			
ANR	136226	Identifier	NULL		136150	0					
ANR	136227	Identifier	NULL		136150	1					
ANR	136228	IdentifierDeclStatement	axis2_char_t * end_input_str = NULL ;	281:15:11207:11241	136150	11	True				
ANR	136229	IdentifierDecl	* end_input_str = NULL		136150	0					
ANR	136230	IdentifierDeclType	axis2_char_t *		136150	0					
ANR	136231	Identifier	end_input_str		136150	1					
ANR	136232	AssignmentExpression	* end_input_str = NULL		136150	2		=			
ANR	136233	Identifier	NULL		136150	0					
ANR	136234	Identifier	NULL		136150	1					
ANR	136235	IdentifierDeclStatement	unsigned int start_input_str_len = 0 ;	282:15:11258:11294	136150	12	True				
ANR	136236	IdentifierDecl	start_input_str_len = 0		136150	0					
ANR	136237	IdentifierDeclType	unsigned int		136150	0					
ANR	136238	Identifier	start_input_str_len		136150	1					
ANR	136239	AssignmentExpression	start_input_str_len = 0		136150	2		=			
ANR	136240	Identifier	start_input_str_len		136150	0					
ANR	136241	PrimaryExpression	0		136150	1					
ANR	136242	IdentifierDeclStatement	unsigned int end_input_str_len = 0 ;	283:15:11311:11345	136150	13	True				
ANR	136243	IdentifierDecl	end_input_str_len = 0		136150	0					
ANR	136244	IdentifierDeclType	unsigned int		136150	0					
ANR	136245	Identifier	end_input_str_len		136150	1					
ANR	136246	AssignmentExpression	end_input_str_len = 0		136150	2		=			
ANR	136247	Identifier	end_input_str_len		136150	0					
ANR	136248	PrimaryExpression	0		136150	1					
ANR	136249	IdentifierDeclStatement	axiom_data_source_t * data_source = NULL ;	286:15:11388:11427	136150	14	True				
ANR	136250	IdentifierDecl	* data_source = NULL		136150	0					
ANR	136251	IdentifierDeclType	axiom_data_source_t *		136150	0					
ANR	136252	Identifier	data_source		136150	1					
ANR	136253	AssignmentExpression	* data_source = NULL		136150	2		=			
ANR	136254	Identifier	NULL		136150	0					
ANR	136255	Identifier	NULL		136150	1					
ANR	136256	IdentifierDeclStatement	axutil_stream_t * stream = NULL ;	287:15:11444:11474	136150	15	True				
ANR	136257	IdentifierDecl	* stream = NULL		136150	0					
ANR	136258	IdentifierDeclType	axutil_stream_t *		136150	0					
ANR	136259	Identifier	stream		136150	1					
ANR	136260	AssignmentExpression	* stream = NULL		136150	2		=			
ANR	136261	Identifier	NULL		136150	0					
ANR	136262	Identifier	NULL		136150	1					
ANR	136263	IdentifierDeclStatement	int next_ns_index_value = 0 ;	290:16:11507:11534	136150	16	True				
ANR	136264	IdentifierDecl	next_ns_index_value = 0		136150	0					
ANR	136265	IdentifierDeclType	int		136150	0					
ANR	136266	Identifier	next_ns_index_value		136150	1					
ANR	136267	AssignmentExpression	next_ns_index_value = 0		136150	2		=			
ANR	136268	Identifier	next_ns_index_value		136150	0					
ANR	136269	PrimaryExpression	0		136150	1					
ANR	136270	ExpressionStatement	namespaces = axutil_hash_make ( Environment :: getEnv ( ) )	292:20:11570:11622	136150	17	True				
ANR	136271	AssignmentExpression	namespaces = axutil_hash_make ( Environment :: getEnv ( ) )		136150	0		=			
ANR	136272	Identifier	namespaces		136150	0					
ANR	136273	CallExpression	axutil_hash_make ( Environment :: getEnv ( ) )		136150	1					
ANR	136274	Callee	axutil_hash_make		136150	0					
ANR	136275	Identifier	axutil_hash_make		136150	0					
ANR	136276	ArgumentList	Environment :: getEnv ( )		136150	1					
ANR	136277	Argument	Environment :: getEnv ( )		136150	0					
ANR	136278	CallExpression	Environment :: getEnv ( )		136150	0					
ANR	136279	Callee	Environment :: getEnv		136150	0					
ANR	136280	Identifier	Environment :: getEnv		136150	0					
ANR	136281	ArgumentList			136150	1					
ANR	136282	ExpressionStatement	next_ns_index = & next_ns_index_value	293:20:11644:11680	136150	18	True				
ANR	136283	AssignmentExpression	next_ns_index = & next_ns_index_value		136150	0		=			
ANR	136284	Identifier	next_ns_index		136150	0					
ANR	136285	UnaryOperationExpression	& next_ns_index_value		136150	1					
ANR	136286	UnaryOperator	&		136150	0					
ANR	136287	Identifier	next_ns_index_value		136150	1					
ANR	136288	ExpressionStatement	"ns1 = axiom_namespace_create ( Environment :: getEnv ( ) , ""http://query.aviary.grid.redhat.com"" , ""n"" )"	295:27:11731:11917	136150	19	True				
ANR	136289	AssignmentExpression	"ns1 = axiom_namespace_create ( Environment :: getEnv ( ) , ""http://query.aviary.grid.redhat.com"" , ""n"" )"		136150	0		=			
ANR	136290	Identifier	ns1		136150	0					
ANR	136291	CallExpression	"axiom_namespace_create ( Environment :: getEnv ( ) , ""http://query.aviary.grid.redhat.com"" , ""n"" )"		136150	1					
ANR	136292	Callee	axiom_namespace_create		136150	0					
ANR	136293	Identifier	axiom_namespace_create		136150	0					
ANR	136294	ArgumentList	Environment :: getEnv ( )		136150	1					
ANR	136295	Argument	Environment :: getEnv ( )		136150	0					
ANR	136296	CallExpression	Environment :: getEnv ( )		136150	0					
ANR	136297	Callee	Environment :: getEnv		136150	0					
ANR	136298	Identifier	Environment :: getEnv		136150	0					
ANR	136299	ArgumentList			136150	1					
ANR	136300	Argument	"""http://query.aviary.grid.redhat.com"""		136150	1					
ANR	136301	PrimaryExpression	"""http://query.aviary.grid.redhat.com"""		136150	0					
ANR	136302	Argument	"""n"""		136150	2					
ANR	136303	PrimaryExpression	"""n"""		136150	0					
ANR	136304	ExpressionStatement	"axutil_hash_set ( namespaces , ""http://query.aviary.grid.redhat.com"" , AXIS2_HASH_KEY_STRING , axutil_strdup ( Environment :: getEnv ( ) , ""n"" ) )"	298:27:11947:12079	136150	20	True				
ANR	136305	CallExpression	"axutil_hash_set ( namespaces , ""http://query.aviary.grid.redhat.com"" , AXIS2_HASH_KEY_STRING , axutil_strdup ( Environment :: getEnv ( ) , ""n"" ) )"		136150	0					
ANR	136306	Callee	axutil_hash_set		136150	0					
ANR	136307	Identifier	axutil_hash_set		136150	0					
ANR	136308	ArgumentList	namespaces		136150	1					
ANR	136309	Argument	namespaces		136150	0					
ANR	136310	Identifier	namespaces		136150	0					
ANR	136311	Argument	"""http://query.aviary.grid.redhat.com"""		136150	1					
ANR	136312	PrimaryExpression	"""http://query.aviary.grid.redhat.com"""		136150	0					
ANR	136313	Argument	AXIS2_HASH_KEY_STRING		136150	2					
ANR	136314	Identifier	AXIS2_HASH_KEY_STRING		136150	0					
ANR	136315	Argument	"axutil_strdup ( Environment :: getEnv ( ) , ""n"" )"		136150	3					
ANR	136316	CallExpression	"axutil_strdup ( Environment :: getEnv ( ) , ""n"" )"		136150	0					
ANR	136317	Callee	axutil_strdup		136150	0					
ANR	136318	Identifier	axutil_strdup		136150	0					
ANR	136319	ArgumentList	Environment :: getEnv ( )		136150	1					
ANR	136320	Argument	Environment :: getEnv ( )		136150	0					
ANR	136321	CallExpression	Environment :: getEnv ( )		136150	0					
ANR	136322	Callee	Environment :: getEnv		136150	0					
ANR	136323	Identifier	Environment :: getEnv		136150	0					
ANR	136324	ArgumentList			136150	1					
ANR	136325	Argument	"""n"""		136150	1					
ANR	136326	PrimaryExpression	"""n"""		136150	0					
ANR	136327	ExpressionStatement	"parent_element = axiom_element_create ( Environment :: getEnv ( ) , NULL , ""GetJobSummaryResponse"" , ns1 , & parent )"	301:20:12147:12254	136150	21	True				
ANR	136328	AssignmentExpression	"parent_element = axiom_element_create ( Environment :: getEnv ( ) , NULL , ""GetJobSummaryResponse"" , ns1 , & parent )"		136150	0		=			
ANR	136329	Identifier	parent_element		136150	0					
ANR	136330	CallExpression	"axiom_element_create ( Environment :: getEnv ( ) , NULL , ""GetJobSummaryResponse"" , ns1 , & parent )"		136150	1					
ANR	136331	Callee	axiom_element_create		136150	0					
ANR	136332	Identifier	axiom_element_create		136150	0					
ANR	136333	ArgumentList	Environment :: getEnv ( )		136150	1					
ANR	136334	Argument	Environment :: getEnv ( )		136150	0					
ANR	136335	CallExpression	Environment :: getEnv ( )		136150	0					
ANR	136336	Callee	Environment :: getEnv		136150	0					
ANR	136337	Identifier	Environment :: getEnv		136150	0					
ANR	136338	ArgumentList			136150	1					
ANR	136339	Argument	NULL		136150	1					
ANR	136340	Identifier	NULL		136150	0					
ANR	136341	Argument	"""GetJobSummaryResponse"""		136150	2					
ANR	136342	PrimaryExpression	"""GetJobSummaryResponse"""		136150	0					
ANR	136343	Argument	ns1		136150	3					
ANR	136344	Identifier	ns1		136150	0					
ANR	136345	Argument	& parent		136150	4					
ANR	136346	UnaryOperationExpression	& parent		136150	0					
ANR	136347	UnaryOperator	&		136150	0					
ANR	136348	Identifier	parent		136150	1					
ANR	136349	ExpressionStatement	"axiom_element_set_namespace ( parent_element , Environment :: getEnv ( ) , ns1 , parent )"	304:20:12318:12397	136150	22	True				
ANR	136350	CallExpression	"axiom_element_set_namespace ( parent_element , Environment :: getEnv ( ) , ns1 , parent )"		136150	0					
ANR	136351	Callee	axiom_element_set_namespace		136150	0					
ANR	136352	Identifier	axiom_element_set_namespace		136150	0					
ANR	136353	ArgumentList	parent_element		136150	1					
ANR	136354	Argument	parent_element		136150	0					
ANR	136355	Identifier	parent_element		136150	0					
ANR	136356	Argument	Environment :: getEnv ( )		136150	1					
ANR	136357	CallExpression	Environment :: getEnv ( )		136150	0					
ANR	136358	Callee	Environment :: getEnv		136150	0					
ANR	136359	Identifier	Environment :: getEnv		136150	0					
ANR	136360	ArgumentList			136150	1					
ANR	136361	Argument	ns1		136150	2					
ANR	136362	Identifier	ns1		136150	0					
ANR	136363	Argument	parent		136150	3					
ANR	136364	Identifier	parent		136150	0					
ANR	136365	ExpressionStatement	"data_source = axiom_data_source_create ( Environment :: getEnv ( ) , parent , & current_node )"	308:20:12434:12518	136150	23	True				
ANR	136366	AssignmentExpression	"data_source = axiom_data_source_create ( Environment :: getEnv ( ) , parent , & current_node )"		136150	0		=			
ANR	136367	Identifier	data_source		136150	0					
ANR	136368	CallExpression	"axiom_data_source_create ( Environment :: getEnv ( ) , parent , & current_node )"		136150	1					
ANR	136369	Callee	axiom_data_source_create		136150	0					
ANR	136370	Identifier	axiom_data_source_create		136150	0					
ANR	136371	ArgumentList	Environment :: getEnv ( )		136150	1					
ANR	136372	Argument	Environment :: getEnv ( )		136150	0					
ANR	136373	CallExpression	Environment :: getEnv ( )		136150	0					
ANR	136374	Callee	Environment :: getEnv		136150	0					
ANR	136375	Identifier	Environment :: getEnv		136150	0					
ANR	136376	ArgumentList			136150	1					
ANR	136377	Argument	parent		136150	1					
ANR	136378	Identifier	parent		136150	0					
ANR	136379	Argument	& current_node		136150	2					
ANR	136380	UnaryOperationExpression	& current_node		136150	0					
ANR	136381	UnaryOperator	&		136150	0					
ANR	136382	Identifier	current_node		136150	1					
ANR	136383	ExpressionStatement	"stream = axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"	309:20:12540:12613	136150	24	True				
ANR	136384	AssignmentExpression	"stream = axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"		136150	0		=			
ANR	136385	Identifier	stream		136150	0					
ANR	136386	CallExpression	"axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"		136150	1					
ANR	136387	Callee	axiom_data_source_get_stream		136150	0					
ANR	136388	Identifier	axiom_data_source_get_stream		136150	0					
ANR	136389	ArgumentList	data_source		136150	1					
ANR	136390	Argument	data_source		136150	0					
ANR	136391	Identifier	data_source		136150	0					
ANR	136392	Argument	Environment :: getEnv ( )		136150	1					
ANR	136393	CallExpression	Environment :: getEnv ( )		136150	0					
ANR	136394	Callee	Environment :: getEnv		136150	0					
ANR	136395	Identifier	Environment :: getEnv		136150	0					
ANR	136396	ArgumentList			136150	1					
ANR	136397	ExpressionStatement	p_prefix = NULL	311:23:12657:12672	136150	25	True				
ANR	136398	AssignmentExpression	p_prefix = NULL		136150	0		=			
ANR	136399	Identifier	p_prefix		136150	0					
ANR	136400	Identifier	NULL		136150	1					
ANR	136401	IfStatement	if ( ! isValidJobs )		136150	26					
ANR	136402	Condition	! isValidJobs	314:23:12721:12732	136150	0	True				
ANR	136403	UnaryOperationExpression	! isValidJobs		136150	0					
ANR	136404	UnaryOperator	!		136150	0					
ANR	136405	Identifier	isValidJobs		136150	1					
ANR	136406	CompoundStatement		57:19:2153:2153	136150	1					
ANR	136407	ElseStatement	else		136150	0					
ANR	136408	CompoundStatement		64:19:2375:2375	136150	0					
ANR	136409	ExpressionStatement	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""jobs"" ) ) )"	323:21:12999:13224	136150	0	True				
ANR	136410	AssignmentExpression	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""jobs"" ) ) )"		136150	0		=			
ANR	136411	Identifier	start_input_str		136150	0					
ANR	136412	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""jobs"" ) ) )"		136150	1					
ANR	136413	CastTarget	axis2_char_t *		136150	0					
ANR	136414	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""jobs"" ) ) )"		136150	1					
ANR	136415	Callee	AXIS2_MALLOC		136150	0					
ANR	136416	Identifier	AXIS2_MALLOC		136150	0					
ANR	136417	ArgumentList	Environment :: getEnv ( ) -> allocator		136150	1					
ANR	136418	Argument	Environment :: getEnv ( ) -> allocator		136150	0					
ANR	136419	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		136150	0					
ANR	136420	CallExpression	Environment :: getEnv ( )		136150	0					
ANR	136421	Callee	Environment :: getEnv		136150	0					
ANR	136422	Identifier	Environment :: getEnv		136150	0					
ANR	136423	ArgumentList			136150	1					
ANR	136424	Identifier	allocator		136150	1					
ANR	136425	Argument	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""jobs"" ) )"		136150	1					
ANR	136426	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""jobs"" ) )"		136150	0		*			
ANR	136427	SizeofExpression	sizeof ( axis2_char_t )		136150	0					
ANR	136428	Sizeof	sizeof		136150	0					
ANR	136429	SizeofOperand	axis2_char_t		136150	1					
ANR	136430	AdditiveExpression	"4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""jobs"" )"		136150	1		+			
ANR	136431	PrimaryExpression	4		136150	0					
ANR	136432	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""jobs"" )"		136150	1		+			
ANR	136433	CallExpression	axutil_strlen ( p_prefix )		136150	0					
ANR	136434	Callee	axutil_strlen		136150	0					
ANR	136435	Identifier	axutil_strlen		136150	0					
ANR	136436	ArgumentList	p_prefix		136150	1					
ANR	136437	Argument	p_prefix		136150	0					
ANR	136438	Identifier	p_prefix		136150	0					
ANR	136439	CallExpression	"axutil_strlen ( ""jobs"" )"		136150	1					
ANR	136440	Callee	axutil_strlen		136150	0					
ANR	136441	Identifier	axutil_strlen		136150	0					
ANR	136442	ArgumentList	"""jobs"""		136150	1					
ANR	136443	Argument	"""jobs"""		136150	0					
ANR	136444	PrimaryExpression	"""jobs"""		136150	0					
ANR	136445	ExpressionStatement	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""jobs"" ) ) )"	328:21:13350:13538	136150	1	True				
ANR	136446	AssignmentExpression	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""jobs"" ) ) )"		136150	0		=			
ANR	136447	Identifier	end_input_str		136150	0					
ANR	136448	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""jobs"" ) ) )"		136150	1					
ANR	136449	CastTarget	axis2_char_t *		136150	0					
ANR	136450	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""jobs"" ) ) )"		136150	1					
ANR	136451	Callee	AXIS2_MALLOC		136150	0					
ANR	136452	Identifier	AXIS2_MALLOC		136150	0					
ANR	136453	ArgumentList	Environment :: getEnv ( ) -> allocator		136150	1					
ANR	136454	Argument	Environment :: getEnv ( ) -> allocator		136150	0					
ANR	136455	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		136150	0					
ANR	136456	CallExpression	Environment :: getEnv ( )		136150	0					
ANR	136457	Callee	Environment :: getEnv		136150	0					
ANR	136458	Identifier	Environment :: getEnv		136150	0					
ANR	136459	ArgumentList			136150	1					
ANR	136460	Identifier	allocator		136150	1					
ANR	136461	Argument	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""jobs"" ) )"		136150	1					
ANR	136462	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""jobs"" ) )"		136150	0		*			
ANR	136463	SizeofExpression	sizeof ( axis2_char_t )		136150	0					
ANR	136464	Sizeof	sizeof		136150	0					
ANR	136465	SizeofOperand	axis2_char_t		136150	1					
ANR	136466	AdditiveExpression	"5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""jobs"" )"		136150	1		+			
ANR	136467	PrimaryExpression	5		136150	0					
ANR	136468	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""jobs"" )"		136150	1		+			
ANR	136469	CallExpression	axutil_strlen ( p_prefix )		136150	0					
ANR	136470	Callee	axutil_strlen		136150	0					
ANR	136471	Identifier	axutil_strlen		136150	0					
ANR	136472	ArgumentList	p_prefix		136150	1					
ANR	136473	Argument	p_prefix		136150	0					
ANR	136474	Identifier	p_prefix		136150	0					
ANR	136475	CallExpression	"axutil_strlen ( ""jobs"" )"		136150	1					
ANR	136476	Callee	axutil_strlen		136150	0					
ANR	136477	Identifier	axutil_strlen		136150	0					
ANR	136478	ArgumentList	"""jobs"""		136150	1					
ANR	136479	Argument	"""jobs"""		136150	0					
ANR	136480	PrimaryExpression	"""jobs"""		136150	0					
ANR	136481	IfStatement	if ( property_Jobs != NULL )		136150	2					
ANR	136482	Condition	property_Jobs != NULL	339:25:13825:13845	136150	0	True				
ANR	136483	EqualityExpression	property_Jobs != NULL		136150	0		!=			
ANR	136484	Identifier	property_Jobs		136150	0					
ANR	136485	Identifier	NULL		136150	1					
ANR	136486	CompoundStatement		82:21:3268:3268	136150	1					
ANR	136487	ExpressionStatement	"sprintf ( start_input_str , ""<%s%sjobs"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	343:28:13925:14100	136150	0	True				
ANR	136488	CallExpression	"sprintf ( start_input_str , ""<%s%sjobs"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		136150	0					
ANR	136489	Callee	sprintf		136150	0					
ANR	136490	Identifier	sprintf		136150	0					
ANR	136491	ArgumentList	start_input_str		136150	1					
ANR	136492	Argument	start_input_str		136150	0					
ANR	136493	Identifier	start_input_str		136150	0					
ANR	136494	Argument	"""<%s%sjobs"""		136150	1					
ANR	136495	PrimaryExpression	"""<%s%sjobs"""		136150	0					
ANR	136496	Argument	"p_prefix ? p_prefix : """""		136150	2					
ANR	136497	ConditionalExpression	"p_prefix ? p_prefix : """""		136150	0					
ANR	136498	Condition	p_prefix		136150	0					
ANR	136499	Identifier	p_prefix		136150	0					
ANR	136500	Identifier	p_prefix		136150	1					
ANR	136501	PrimaryExpression	""""""		136150	2					
ANR	136502	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		136150	3					
ANR	136503	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		136150	0					
ANR	136504	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		136150	0					
ANR	136505	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		136150	0		&&			
ANR	136506	Identifier	p_prefix		136150	0					
ANR	136507	CallExpression	"axutil_strcmp ( p_prefix , """" )"		136150	1					
ANR	136508	Callee	axutil_strcmp		136150	0					
ANR	136509	Identifier	axutil_strcmp		136150	0					
ANR	136510	ArgumentList	p_prefix		136150	1					
ANR	136511	Argument	p_prefix		136150	0					
ANR	136512	Identifier	p_prefix		136150	0					
ANR	136513	Argument	""""""		136150	1					
ANR	136514	PrimaryExpression	""""""		136150	0					
ANR	136515	PrimaryExpression	""":"""		136150	1					
ANR	136516	PrimaryExpression	""""""		136150	2					
ANR	136517	ExpressionStatement	start_input_str_len = axutil_strlen ( start_input_str )	347:25:14156:14208	136150	1	True				
ANR	136518	AssignmentExpression	start_input_str_len = axutil_strlen ( start_input_str )		136150	0		=			
ANR	136519	Identifier	start_input_str_len		136150	0					
ANR	136520	CallExpression	axutil_strlen ( start_input_str )		136150	1					
ANR	136521	Callee	axutil_strlen		136150	0					
ANR	136522	Identifier	axutil_strlen		136150	0					
ANR	136523	ArgumentList	start_input_str		136150	1					
ANR	136524	Argument	start_input_str		136150	0					
ANR	136525	Identifier	start_input_str		136150	0					
ANR	136526	ExpressionStatement	"sprintf ( end_input_str , ""</%s%sjobs>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	349:25:14236:14411	136150	2	True				
ANR	136527	CallExpression	"sprintf ( end_input_str , ""</%s%sjobs>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		136150	0					
ANR	136528	Callee	sprintf		136150	0					
ANR	136529	Identifier	sprintf		136150	0					
ANR	136530	ArgumentList	end_input_str		136150	1					
ANR	136531	Argument	end_input_str		136150	0					
ANR	136532	Identifier	end_input_str		136150	0					
ANR	136533	Argument	"""</%s%sjobs>"""		136150	1					
ANR	136534	PrimaryExpression	"""</%s%sjobs>"""		136150	0					
ANR	136535	Argument	"p_prefix ? p_prefix : """""		136150	2					
ANR	136536	ConditionalExpression	"p_prefix ? p_prefix : """""		136150	0					
ANR	136537	Condition	p_prefix		136150	0					
ANR	136538	Identifier	p_prefix		136150	0					
ANR	136539	Identifier	p_prefix		136150	1					
ANR	136540	PrimaryExpression	""""""		136150	2					
ANR	136541	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		136150	3					
ANR	136542	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		136150	0					
ANR	136543	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		136150	0					
ANR	136544	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		136150	0		&&			
ANR	136545	Identifier	p_prefix		136150	0					
ANR	136546	CallExpression	"axutil_strcmp ( p_prefix , """" )"		136150	1					
ANR	136547	Callee	axutil_strcmp		136150	0					
ANR	136548	Identifier	axutil_strcmp		136150	0					
ANR	136549	ArgumentList	p_prefix		136150	1					
ANR	136550	Argument	p_prefix		136150	0					
ANR	136551	Identifier	p_prefix		136150	0					
ANR	136552	Argument	""""""		136150	1					
ANR	136553	PrimaryExpression	""""""		136150	0					
ANR	136554	PrimaryExpression	""":"""		136150	1					
ANR	136555	PrimaryExpression	""""""		136150	2					
ANR	136556	ExpressionStatement	end_input_str_len = axutil_strlen ( end_input_str )	352:25:14438:14486	136150	3	True				
ANR	136557	AssignmentExpression	end_input_str_len = axutil_strlen ( end_input_str )		136150	0		=			
ANR	136558	Identifier	end_input_str_len		136150	0					
ANR	136559	CallExpression	axutil_strlen ( end_input_str )		136150	1					
ANR	136560	Callee	axutil_strlen		136150	0					
ANR	136561	Identifier	axutil_strlen		136150	0					
ANR	136562	ArgumentList	end_input_str		136150	1					
ANR	136563	Argument	end_input_str		136150	0					
ANR	136564	Identifier	end_input_str		136150	0					
ANR	136565	ExpressionStatement	count = property_Jobs -> size ( )	354:25:14514:14543	136150	4	True				
ANR	136566	AssignmentExpression	count = property_Jobs -> size ( )		136150	0		=			
ANR	136567	Identifier	count		136150	0					
ANR	136568	CallExpression	property_Jobs -> size ( )		136150	1					
ANR	136569	Callee	property_Jobs -> size		136150	0					
ANR	136570	PtrMemberAccess	property_Jobs -> size		136150	0					
ANR	136571	Identifier	property_Jobs		136150	0					
ANR	136572	Identifier	size		136150	1					
ANR	136573	ArgumentList			136150	1					
ANR	136574	ForStatement	for ( i = 0 ; i < count ; i ++ )		136150	5					
ANR	136575	ForInit	i = 0 ;	355:29:14574:14579	136150	0	True				
ANR	136576	AssignmentExpression	i = 0		136150	0		=			
ANR	136577	Identifier	i		136150	0					
ANR	136578	PrimaryExpression	0		136150	1					
ANR	136579	Condition	i < count	355:36:14581:14589	136150	1	True				
ANR	136580	RelationalExpression	i < count		136150	0		<			
ANR	136581	Identifier	i		136150	0					
ANR	136582	Identifier	count		136150	1					
ANR	136583	PostIncDecOperationExpression	i ++	355:47:14592:14594	136150	2	True				
ANR	136584	Identifier	i		136150	0					
ANR	136585	IncDec	++		136150	1					
ANR	136586	CompoundStatement		99:28:4051:4106	136150	3					
ANR	136587	IdentifierDeclStatement	AviaryCommon :: JobSummary * element = ( * property_Jobs ) [ i ] ;	357:28:14652:14707	136150	0	True				
ANR	136588	IdentifierDecl	* element = ( * property_Jobs ) [ i ]		136150	0					
ANR	136589	IdentifierDeclType	AviaryCommon :: JobSummary *		136150	0					
ANR	136590	Identifier	element		136150	1					
ANR	136591	AssignmentExpression	* element = ( * property_Jobs ) [ i ]		136150	2		=			
ANR	136592	Identifier	element		136150	0					
ANR	136593	ArrayIndexing	( * property_Jobs ) [ i ]		136150	1					
ANR	136594	UnaryOperationExpression	* property_Jobs		136150	0					
ANR	136595	UnaryOperator	*		136150	0					
ANR	136596	Identifier	property_Jobs		136150	1					
ANR	136597	Identifier	i		136150	1					
ANR	136598	IfStatement	if ( NULL == element )		136150	1					
ANR	136599	Condition	NULL == element	359:31:14741:14755	136150	0	True				
ANR	136600	EqualityExpression	NULL == element		136150	0		==			
ANR	136601	Identifier	NULL		136150	0					
ANR	136602	Identifier	element		136150	1					
ANR	136603	CompoundStatement		102:28:4186:4186	136150	1					
ANR	136604	ContinueStatement	continue ;	361:32:14821:14829	136150	0	True				
ANR	136605	IfStatement	if ( ! element -> isParticle ( ) )		136150	2					
ANR	136606	Condition	! element -> isParticle ( )	372:31:15074:15095	136150	0	True				
ANR	136607	UnaryOperationExpression	! element -> isParticle ( )		136150	0					
ANR	136608	UnaryOperator	!		136150	0					
ANR	136609	CallExpression	element -> isParticle ( )		136150	1					
ANR	136610	Callee	element -> isParticle		136150	0					
ANR	136611	PtrMemberAccess	element -> isParticle		136150	0					
ANR	136612	Identifier	element		136150	0					
ANR	136613	Identifier	isParticle		136150	1					
ANR	136614	ArgumentList			136150	1					
ANR	136615	CompoundStatement		115:28:4525:4525	136150	1					
ANR	136616	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"	374:32:15160:15248	136150	0	True				
ANR	136617	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"		136150	0					
ANR	136618	Callee	axutil_stream_write		136150	0					
ANR	136619	Identifier	axutil_stream_write		136150	0					
ANR	136620	ArgumentList	stream		136150	1					
ANR	136621	Argument	stream		136150	0					
ANR	136622	Identifier	stream		136150	0					
ANR	136623	Argument	Environment :: getEnv ( )		136150	1					
ANR	136624	CallExpression	Environment :: getEnv ( )		136150	0					
ANR	136625	Callee	Environment :: getEnv		136150	0					
ANR	136626	Identifier	Environment :: getEnv		136150	0					
ANR	136627	ArgumentList			136150	1					
ANR	136628	Argument	start_input_str		136150	2					
ANR	136629	Identifier	start_input_str		136150	0					
ANR	136630	Argument	start_input_str_len		136150	3					
ANR	136631	Identifier	start_input_str_len		136150	0					
ANR	136632	ExpressionStatement	"element -> serialize ( current_node , parent_element , element -> isParticle ( ) || false , namespaces , next_ns_index )"	376:28:15308:15496	136150	3	True				
ANR	136633	CallExpression	"element -> serialize ( current_node , parent_element , element -> isParticle ( ) || false , namespaces , next_ns_index )"		136150	0					
ANR	136634	Callee	element -> serialize		136150	0					
ANR	136635	PtrMemberAccess	element -> serialize		136150	0					
ANR	136636	Identifier	element		136150	0					
ANR	136637	Identifier	serialize		136150	1					
ANR	136638	ArgumentList	current_node		136150	1					
ANR	136639	Argument	current_node		136150	0					
ANR	136640	Identifier	current_node		136150	0					
ANR	136641	Argument	parent_element		136150	1					
ANR	136642	Identifier	parent_element		136150	0					
ANR	136643	Argument	element -> isParticle ( ) || false		136150	2					
ANR	136644	OrExpression	element -> isParticle ( ) || false		136150	0		||			
ANR	136645	CallExpression	element -> isParticle ( )		136150	0					
ANR	136646	Callee	element -> isParticle		136150	0					
ANR	136647	PtrMemberAccess	element -> isParticle		136150	0					
ANR	136648	Identifier	element		136150	0					
ANR	136649	Identifier	isParticle		136150	1					
ANR	136650	ArgumentList			136150	1					
ANR	136651	Identifier	false		136150	1					
ANR	136652	Argument	namespaces		136150	3					
ANR	136653	Identifier	namespaces		136150	0					
ANR	136654	Argument	next_ns_index		136150	4					
ANR	136655	Identifier	next_ns_index		136150	0					
ANR	136656	IfStatement	if ( ! element -> isParticle ( ) )		136150	4					
ANR	136657	Condition	! element -> isParticle ( )	379:31:15558:15579	136150	0	True				
ANR	136658	UnaryOperationExpression	! element -> isParticle ( )		136150	0					
ANR	136659	UnaryOperator	!		136150	0					
ANR	136660	CallExpression	element -> isParticle ( )		136150	1					
ANR	136661	Callee	element -> isParticle		136150	0					
ANR	136662	PtrMemberAccess	element -> isParticle		136150	0					
ANR	136663	Identifier	element		136150	0					
ANR	136664	Identifier	isParticle		136150	1					
ANR	136665	ArgumentList			136150	1					
ANR	136666	CompoundStatement		122:28:5009:5009	136150	1					
ANR	136667	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"	381:32:15644:15728	136150	0	True				
ANR	136668	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"		136150	0					
ANR	136669	Callee	axutil_stream_write		136150	0					
ANR	136670	Identifier	axutil_stream_write		136150	0					
ANR	136671	ArgumentList	stream		136150	1					
ANR	136672	Argument	stream		136150	0					
ANR	136673	Identifier	stream		136150	0					
ANR	136674	Argument	Environment :: getEnv ( )		136150	1					
ANR	136675	CallExpression	Environment :: getEnv ( )		136150	0					
ANR	136676	Callee	Environment :: getEnv		136150	0					
ANR	136677	Identifier	Environment :: getEnv		136150	0					
ANR	136678	ArgumentList			136150	1					
ANR	136679	Argument	end_input_str		136150	2					
ANR	136680	Identifier	end_input_str		136150	0					
ANR	136681	Argument	end_input_str_len		136150	3					
ANR	136682	Identifier	end_input_str_len		136150	0					
ANR	136683	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"	388:21:15902:15962	136150	3	True				
ANR	136684	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"		136150	0					
ANR	136685	Callee	AXIS2_FREE		136150	0					
ANR	136686	Identifier	AXIS2_FREE		136150	0					
ANR	136687	ArgumentList	Environment :: getEnv ( ) -> allocator		136150	1					
ANR	136688	Argument	Environment :: getEnv ( ) -> allocator		136150	0					
ANR	136689	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		136150	0					
ANR	136690	CallExpression	Environment :: getEnv ( )		136150	0					
ANR	136691	Callee	Environment :: getEnv		136150	0					
ANR	136692	Identifier	Environment :: getEnv		136150	0					
ANR	136693	ArgumentList			136150	1					
ANR	136694	Identifier	allocator		136150	1					
ANR	136695	Argument	start_input_str		136150	1					
ANR	136696	Identifier	start_input_str		136150	0					
ANR	136697	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"	389:21:15985:16043	136150	4	True				
ANR	136698	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"		136150	0					
ANR	136699	Callee	AXIS2_FREE		136150	0					
ANR	136700	Identifier	AXIS2_FREE		136150	0					
ANR	136701	ArgumentList	Environment :: getEnv ( ) -> allocator		136150	1					
ANR	136702	Argument	Environment :: getEnv ( ) -> allocator		136150	0					
ANR	136703	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		136150	0					
ANR	136704	CallExpression	Environment :: getEnv ( )		136150	0					
ANR	136705	Callee	Environment :: getEnv		136150	0					
ANR	136706	Identifier	Environment :: getEnv		136150	0					
ANR	136707	ArgumentList			136150	1					
ANR	136708	Identifier	allocator		136150	1					
ANR	136709	Argument	end_input_str		136150	1					
ANR	136710	Identifier	end_input_str		136150	0					
ANR	136711	IfStatement	if ( namespaces )		136150	27					
ANR	136712	Condition	namespaces	393:22:16106:16115	136150	0	True				
ANR	136713	Identifier	namespaces		136150	0					
ANR	136714	CompoundStatement		138:23:5609:5618	136150	1					
ANR	136715	IdentifierDeclStatement	axutil_hash_index_t * hi ;	395:23:16162:16185	136150	0	True				
ANR	136716	IdentifierDecl	* hi		136150	0					
ANR	136717	IdentifierDeclType	axutil_hash_index_t *		136150	0					
ANR	136718	Identifier	hi		136150	1					
ANR	136719	IdentifierDeclStatement	void * val ;	396:23:16210:16219	136150	1	True				
ANR	136720	IdentifierDecl	* val		136150	0					
ANR	136721	IdentifierDeclType	void *		136150	0					
ANR	136722	Identifier	val		136150	1					
ANR	136723	ForStatement	"for ( hi = axutil_hash_first ( namespaces , Environment :: getEnv ( ) ) ; hi ; hi = axutil_hash_next ( Environment :: getEnv ( ) , hi ) )"		136150	2					
ANR	136724	ForInit	"hi = axutil_hash_first ( namespaces , Environment :: getEnv ( ) ) ;"	397:28:16249:16306	136150	0	True				
ANR	136725	AssignmentExpression	"hi = axutil_hash_first ( namespaces , Environment :: getEnv ( ) )"		136150	0		=			
ANR	136726	Identifier	hi		136150	0					
ANR	136727	CallExpression	"axutil_hash_first ( namespaces , Environment :: getEnv ( ) )"		136150	1					
ANR	136728	Callee	axutil_hash_first		136150	0					
ANR	136729	Identifier	axutil_hash_first		136150	0					
ANR	136730	ArgumentList	namespaces		136150	1					
ANR	136731	Argument	namespaces		136150	0					
ANR	136732	Identifier	namespaces		136150	0					
ANR	136733	Argument	Environment :: getEnv ( )		136150	1					
ANR	136734	CallExpression	Environment :: getEnv ( )		136150	0					
ANR	136735	Callee	Environment :: getEnv		136150	0					
ANR	136736	Identifier	Environment :: getEnv		136150	0					
ANR	136737	ArgumentList			136150	1					
ANR	136738	Condition	hi	397:87:16308:16309	136150	1	True				
ANR	136739	Identifier	hi		136150	0					
ANR	136740	AssignmentExpression	"hi = axutil_hash_next ( Environment :: getEnv ( ) , hi )"	397:91:16312:16359	136150	2	True	=			
ANR	136741	Identifier	hi		136150	0					
ANR	136742	CallExpression	"axutil_hash_next ( Environment :: getEnv ( ) , hi )"		136150	1					
ANR	136743	Callee	axutil_hash_next		136150	0					
ANR	136744	Identifier	axutil_hash_next		136150	0					
ANR	136745	ArgumentList	Environment :: getEnv ( )		136150	1					
ANR	136746	Argument	Environment :: getEnv ( )		136150	0					
ANR	136747	CallExpression	Environment :: getEnv ( )		136150	0					
ANR	136748	Callee	Environment :: getEnv		136150	0					
ANR	136749	Identifier	Environment :: getEnv		136150	0					
ANR	136750	ArgumentList			136150	1					
ANR	136751	Argument	hi		136150	1					
ANR	136752	Identifier	hi		136150	0					
ANR	136753	CompoundStatement		140:23:5784:5784	136150	3					
ANR	136754	ExpressionStatement	"axutil_hash_this ( hi , NULL , NULL , & val )"	399:27:16414:16452	136150	0	True				
ANR	136755	CallExpression	"axutil_hash_this ( hi , NULL , NULL , & val )"		136150	0					
ANR	136756	Callee	axutil_hash_this		136150	0					
ANR	136757	Identifier	axutil_hash_this		136150	0					
ANR	136758	ArgumentList	hi		136150	1					
ANR	136759	Argument	hi		136150	0					
ANR	136760	Identifier	hi		136150	0					
ANR	136761	Argument	NULL		136150	1					
ANR	136762	Identifier	NULL		136150	0					
ANR	136763	Argument	NULL		136150	2					
ANR	136764	Identifier	NULL		136150	0					
ANR	136765	Argument	& val		136150	3					
ANR	136766	UnaryOperationExpression	& val		136150	0					
ANR	136767	UnaryOperator	&		136150	0					
ANR	136768	Identifier	val		136150	1					
ANR	136769	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , val )"	400:27:16481:16530	136150	1	True				
ANR	136770	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , val )"		136150	0					
ANR	136771	Callee	AXIS2_FREE		136150	0					
ANR	136772	Identifier	AXIS2_FREE		136150	0					
ANR	136773	ArgumentList	Environment :: getEnv ( ) -> allocator		136150	1					
ANR	136774	Argument	Environment :: getEnv ( ) -> allocator		136150	0					
ANR	136775	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		136150	0					
ANR	136776	CallExpression	Environment :: getEnv ( )		136150	0					
ANR	136777	Callee	Environment :: getEnv		136150	0					
ANR	136778	Identifier	Environment :: getEnv		136150	0					
ANR	136779	ArgumentList			136150	1					
ANR	136780	Identifier	allocator		136150	1					
ANR	136781	Argument	val		136150	1					
ANR	136782	Identifier	val		136150	0					
ANR	136783	ExpressionStatement	"axutil_hash_free ( namespaces , Environment :: getEnv ( ) )"	402:23:16580:16631	136150	3	True				
ANR	136784	CallExpression	"axutil_hash_free ( namespaces , Environment :: getEnv ( ) )"		136150	0					
ANR	136785	Callee	axutil_hash_free		136150	0					
ANR	136786	Identifier	axutil_hash_free		136150	0					
ANR	136787	ArgumentList	namespaces		136150	1					
ANR	136788	Argument	namespaces		136150	0					
ANR	136789	Identifier	namespaces		136150	0					
ANR	136790	Argument	Environment :: getEnv ( )		136150	1					
ANR	136791	CallExpression	Environment :: getEnv ( )		136150	0					
ANR	136792	Callee	Environment :: getEnv		136150	0					
ANR	136793	Identifier	Environment :: getEnv		136150	0					
ANR	136794	ArgumentList			136150	1					
ANR	136795	ReturnStatement	return parent ;	406:12:16684:16697	136150	28	True				
ANR	136796	Identifier	parent		136150	0					
ANR	136797	ReturnType	WSF_CALL		136150	1					
ANR	136798	Identifier	AviaryQuery :: GetJobSummaryResponse :: serialize		136150	2					
ANR	136799	ParameterList	"axiom_node_t * parent , axiom_element_t * parent_element , int parent_tag_closed , axutil_hash_t * namespaces , int * next_ns_index"		136150	3					
ANR	136800	Parameter	axiom_node_t * parent	254:47:10451:10470	136150	0	True				
ANR	136801	ParameterType	axiom_node_t *		136150	0					
ANR	136802	Identifier	parent		136150	1					
ANR	136803	Parameter	axiom_element_t * parent_element	255:3:10477:10507	136150	1	True				
ANR	136804	ParameterType	axiom_element_t *		136150	0					
ANR	136805	Identifier	parent_element		136150	1					
ANR	136806	Parameter	int parent_tag_closed	256:3:10514:10534	136150	2	True				
ANR	136807	ParameterType	int		136150	0					
ANR	136808	Identifier	parent_tag_closed		136150	1					
ANR	136809	Parameter	axutil_hash_t * namespaces	257:3:10541:10565	136150	3	True				
ANR	136810	ParameterType	axutil_hash_t *		136150	0					
ANR	136811	Identifier	namespaces		136150	1					
ANR	136812	Parameter	int * next_ns_index	258:3:10572:10589	136150	4	True				
ANR	136813	ParameterType	int *		136150	0					
ANR	136814	Identifier	next_ns_index		136150	1					
ANR	136815	CFGEntryNode	ENTRY		136150		True				
ANR	136816	CFGExitNode	EXIT		136150		True				
ANR	136817	Symbol	& val		136150						
ANR	136818	Symbol	parent		136150						
ANR	136819	Symbol	hi		136150						
ANR	136820	Symbol	current_node		136150						
ANR	136821	Symbol	axutil_strlen		136150						
ANR	136822	Symbol	property_Jobs		136150						
ANR	136823	Symbol	& next_ns_index_value		136150						
ANR	136824	Symbol	ns1		136150						
ANR	136825	Symbol	& current_node		136150						
ANR	136826	Symbol	axutil_hash_next		136150						
ANR	136827	Symbol	axutil_hash_make		136150						
ANR	136828	Symbol	element		136150						
ANR	136829	Symbol	val		136150						
ANR	136830	Symbol	axiom_data_source_get_stream		136150						
ANR	136831	Symbol	NULL		136150						
ANR	136832	Symbol	count		136150						
ANR	136833	Symbol	parent_tag_closed		136150						
ANR	136834	Symbol	next_ns_index		136150						
ANR	136835	Symbol	data_source		136150						
ANR	136836	Symbol	start_input_str_len		136150						
ANR	136837	Symbol	axiom_data_source_create		136150						
ANR	136838	Symbol	qname_prefix		136150						
ANR	136839	Symbol	next_ns_index_value		136150						
ANR	136840	Symbol	axutil_strcmp		136150						
ANR	136841	Symbol	end_input_str		136150						
ANR	136842	Symbol	& parent		136150						
ANR	136843	Symbol	namespaces		136150						
ANR	136844	Symbol	AXIS2_HASH_KEY_STRING		136150						
ANR	136845	Symbol	Environment :: getEnv		136150						
ANR	136846	Symbol	* element		136150						
ANR	136847	Symbol	axiom_namespace_create		136150						
ANR	136848	Symbol	qname_uri		136150						
ANR	136849	Symbol	p_prefix		136150						
ANR	136850	Symbol	* property_Jobs		136150						
ANR	136851	Symbol	* * property_Jobs		136150						
ANR	136852	Symbol	stream		136150						
ANR	136853	Symbol	text_value_1		136150						
ANR	136854	Symbol	AXIS2_MALLOC		136150						
ANR	136855	Symbol	Environment :: getEnv ( ) -> allocator		136150						
ANR	136856	Symbol	property_Jobs -> size		136150						
ANR	136857	Symbol	parent_element		136150						
ANR	136858	Symbol	end_input_str_len		136150						
ANR	136859	Symbol	isValidJobs		136150						
ANR	136860	Symbol	tag_closed		136150						
ANR	136861	Symbol	false		136150						
ANR	136862	Symbol	i		136150						
ANR	136863	Symbol	start_input_str		136150						
ANR	136864	Symbol	* i		136150						
ANR	136865	Symbol	axutil_hash_first		136150						
ANR	136866	Symbol	* Environment :: getEnv		136150						
ANR	136867	Symbol	axutil_strdup		136150						
ANR	136868	Symbol	element -> isParticle		136150						
ANR	136869	Symbol	axiom_element_create		136150						
ANR	136870	Function	AviaryQuery :: GetJobSummaryResponse :: getProperty1	415:52:16858:16990							
ANR	136871	FunctionDef	AviaryQuery :: GetJobSummaryResponse :: getProperty1 ()		136870	0					
ANR	136872	CompoundStatement		417:12:16942:16990	136870	0					
ANR	136873	ReturnStatement	return getJobs ( ) ;	418:16:16960:16976	136870	0	True				
ANR	136874	CallExpression	getJobs ( )		136870	0					
ANR	136875	Callee	getJobs		136870	0					
ANR	136876	Identifier	getJobs		136870	0					
ANR	136877	ArgumentList			136870	1					
ANR	136878	ReturnType	WSF_CALL		136870	1					
ANR	136879	Identifier	AviaryQuery :: GetJobSummaryResponse :: getProperty1		136870	2					
ANR	136880	ParameterList			136870	3					
ANR	136881	CFGEntryNode	ENTRY		136870		True				
ANR	136882	CFGExitNode	EXIT		136870		True				
ANR	136883	Symbol	getJobs		136870						
ANR	136884	Function	AviaryQuery :: GetJobSummaryResponse :: getJobs	424:52:17109:17242							
ANR	136885	FunctionDef	AviaryQuery :: GetJobSummaryResponse :: getJobs ()		136884	0					
ANR	136886	CompoundStatement		426:13:17189:17242	136884	0					
ANR	136887	ReturnStatement	return property_Jobs ;	427:16:17207:17227	136884	0	True				
ANR	136888	Identifier	property_Jobs		136884	0					
ANR	136889	ReturnType	WSF_CALL		136884	1					
ANR	136890	Identifier	AviaryQuery :: GetJobSummaryResponse :: getJobs		136884	2					
ANR	136891	ParameterList			136884	3					
ANR	136892	CFGEntryNode	ENTRY		136884		True				
ANR	136893	CFGExitNode	EXIT		136884		True				
ANR	136894	Symbol	property_Jobs		136884						
ANR	136895	Function	AviaryQuery :: GetJobSummaryResponse :: setJobs	433:12:17320:18909							
ANR	136896	FunctionDef	AviaryQuery :: GetJobSummaryResponse :: setJobs (std :: vector < AviaryCommon :: JobSummary * > * arg_Jobs)		136895	0					
ANR	136897	CompoundStatement		436:13:17475:18909	136895	0					
ANR	136898	IdentifierDeclStatement	int size = 0 ;	438:17:17511:17523	136895	0	True				
ANR	136899	IdentifierDecl	size = 0		136895	0					
ANR	136900	IdentifierDeclType	int		136895	0					
ANR	136901	Identifier	size		136895	1					
ANR	136902	AssignmentExpression	size = 0		136895	2		=			
ANR	136903	Identifier	size		136895	0					
ANR	136904	PrimaryExpression	0		136895	1					
ANR	136905	IdentifierDeclStatement	int i = 0 ;	439:17:17542:17551	136895	1	True				
ANR	136906	IdentifierDecl	i = 0		136895	0					
ANR	136907	IdentifierDeclType	int		136895	0					
ANR	136908	Identifier	i		136895	1					
ANR	136909	AssignmentExpression	i = 0		136895	2		=			
ANR	136910	Identifier	i		136895	0					
ANR	136911	PrimaryExpression	0		136895	1					
ANR	136912	IdentifierDeclStatement	bool non_nil_exists = false ;	440:17:17570:17597	136895	2	True				
ANR	136913	IdentifierDecl	non_nil_exists = false		136895	0					
ANR	136914	IdentifierDeclType	bool		136895	0					
ANR	136915	Identifier	non_nil_exists		136895	1					
ANR	136916	AssignmentExpression	non_nil_exists = false		136895	2		=			
ANR	136917	Identifier	false		136895	0					
ANR	136918	Identifier	false		136895	1					
ANR	136919	IfStatement	if ( isValidJobs && arg_Jobs == property_Jobs )		136895	3					
ANR	136920	Condition	isValidJobs && arg_Jobs == property_Jobs	443:19:17636:17699	136895	0	True				
ANR	136921	AndExpression	isValidJobs && arg_Jobs == property_Jobs		136895	0		&&			
ANR	136922	Identifier	isValidJobs		136895	0					
ANR	136923	EqualityExpression	arg_Jobs == property_Jobs		136895	1		==			
ANR	136924	Identifier	arg_Jobs		136895	0					
ANR	136925	Identifier	property_Jobs		136895	1					
ANR	136926	CompoundStatement		10:16:242:242	136895	1					
ANR	136927	ReturnStatement	return true ;	447:20:17761:17772	136895	0	True				
ANR	136928	Identifier	true		136895	0					
ANR	136929	ExpressionStatement	size = arg_Jobs -> size ( )	451:17:17827:17850	136895	4	True				
ANR	136930	AssignmentExpression	size = arg_Jobs -> size ( )		136895	0		=			
ANR	136931	Identifier	size		136895	0					
ANR	136932	CallExpression	arg_Jobs -> size ( )		136895	1					
ANR	136933	Callee	arg_Jobs -> size		136895	0					
ANR	136934	PtrMemberAccess	arg_Jobs -> size		136895	0					
ANR	136935	Identifier	arg_Jobs		136895	0					
ANR	136936	Identifier	size		136895	1					
ANR	136937	ArgumentList			136895	1					
ANR	136938	IfStatement	if ( size < 0 )		136895	5					
ANR	136939	Condition	size < 0	453:21:17891:17898	136895	0	True				
ANR	136940	RelationalExpression	size < 0		136895	0		<			
ANR	136941	Identifier	size		136895	0					
ANR	136942	PrimaryExpression	0		136895	1					
ANR	136943	CompoundStatement		19:17:442:442	136895	1					
ANR	136944	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""jobs has less than minOccurs(0)"" )"	455:21:17941:18032	136895	0	True				
ANR	136945	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""jobs has less than minOccurs(0)"" )"		136895	0					
ANR	136946	Callee	WSF_LOG_ERROR_MSG		136895	0					
ANR	136947	Identifier	WSF_LOG_ERROR_MSG		136895	0					
ANR	136948	ArgumentList	Environment :: getEnv ( ) -> log		136895	1					
ANR	136949	Argument	Environment :: getEnv ( ) -> log		136895	0					
ANR	136950	PtrMemberAccess	Environment :: getEnv ( ) -> log		136895	0					
ANR	136951	CallExpression	Environment :: getEnv ( )		136895	0					
ANR	136952	Callee	Environment :: getEnv		136895	0					
ANR	136953	Identifier	Environment :: getEnv		136895	0					
ANR	136954	ArgumentList			136895	1					
ANR	136955	Identifier	log		136895	1					
ANR	136956	Argument	WSF_LOG_SI		136895	1					
ANR	136957	Identifier	WSF_LOG_SI		136895	0					
ANR	136958	Argument	"""jobs has less than minOccurs(0)"""		136895	2					
ANR	136959	PrimaryExpression	"""jobs has less than minOccurs(0)"""		136895	0					
ANR	136960	ReturnStatement	return false ;	456:21:18055:18067	136895	1	True				
ANR	136961	Identifier	false		136895	0					
ANR	136962	ForStatement	for ( i = 0 ; i < size ; i ++ )		136895	6					
ANR	136963	ForInit	i = 0 ;	458:21:18109:18114	136895	0	True				
ANR	136964	AssignmentExpression	i = 0		136895	0		=			
ANR	136965	Identifier	i		136895	0					
ANR	136966	PrimaryExpression	0		136895	1					
ANR	136967	Condition	i < size	458:28:18116:18123	136895	1	True				
ANR	136968	RelationalExpression	i < size		136895	0		<			
ANR	136969	Identifier	i		136895	0					
ANR	136970	Identifier	size		136895	1					
ANR	136971	PostIncDecOperationExpression	i ++	458:38:18126:18129	136895	2	True				
ANR	136972	Identifier	i		136895	0					
ANR	136973	IncDec	++		136895	1					
ANR	136974	CompoundStatement		24:17:674:674	136895	3					
ANR	136975	IfStatement	if ( NULL != ( * arg_Jobs ) [ i ] )		136895	0					
ANR	136976	Condition	NULL != ( * arg_Jobs ) [ i ]	460:24:18176:18197	136895	0	True				
ANR	136977	EqualityExpression	NULL != ( * arg_Jobs ) [ i ]		136895	0		!=			
ANR	136978	Identifier	NULL		136895	0					
ANR	136979	ArrayIndexing	( * arg_Jobs ) [ i ]		136895	1					
ANR	136980	UnaryOperationExpression	* arg_Jobs		136895	0					
ANR	136981	UnaryOperator	*		136895	0					
ANR	136982	Identifier	arg_Jobs		136895	1					
ANR	136983	Identifier	i		136895	1					
ANR	136984	CompoundStatement		26:21:745:745	136895	1					
ANR	136985	ExpressionStatement	non_nil_exists = true	462:25:18248:18269	136895	0	True				
ANR	136986	AssignmentExpression	non_nil_exists = true		136895	0		=			
ANR	136987	Identifier	non_nil_exists		136895	0					
ANR	136988	Identifier	true		136895	1					
ANR	136989	BreakStatement	break ;	463:25:18296:18301	136895	1	True				
ANR	136990	ExpressionStatement	resetJobs ( )	470:16:18398:18409	136895	7	True				
ANR	136991	CallExpression	resetJobs ( )		136895	0					
ANR	136992	Callee	resetJobs		136895	0					
ANR	136993	Identifier	resetJobs		136895	0					
ANR	136994	ArgumentList			136895	1					
ANR	136995	IfStatement	if ( NULL == arg_Jobs )		136895	8					
ANR	136996	Condition	NULL == arg_Jobs	473:23:18452:18467	136895	0	True				
ANR	136997	EqualityExpression	NULL == arg_Jobs		136895	0		==			
ANR	136998	Identifier	NULL		136895	0					
ANR	136999	Identifier	arg_Jobs		136895	1					
ANR	137000	CompoundStatement		40:16:1036:1036	136895	1					
ANR	137001	ReturnStatement	return true ;	477:20:18580:18591	136895	0	True				
ANR	137002	Identifier	true		136895	0					
ANR	137003	ExpressionStatement	property_Jobs = arg_Jobs	480:24:18652:18676	136895	9	True				
ANR	137004	AssignmentExpression	property_Jobs = arg_Jobs		136895	0		=			
ANR	137005	Identifier	property_Jobs		136895	0					
ANR	137006	Identifier	arg_Jobs		136895	1					
ANR	137007	IfStatement	if ( non_nil_exists )		136895	10					
ANR	137008	Condition	non_nil_exists	481:27:18705:18718	136895	0	True				
ANR	137009	Identifier	non_nil_exists		136895	0					
ANR	137010	CompoundStatement		47:24:1269:1269	136895	1					
ANR	137011	ExpressionStatement	isValidJobs = true	483:28:18775:18793	136895	0	True				
ANR	137012	AssignmentExpression	isValidJobs = true		136895	0		=			
ANR	137013	Identifier	isValidJobs		136895	0					
ANR	137014	Identifier	true		136895	1					
ANR	137015	ReturnStatement	return true ;	487:16:18883:18894	136895	11	True				
ANR	137016	Identifier	true		136895	0					
ANR	137017	ReturnType	bool WSF_CALL		136895	1					
ANR	137018	Identifier	AviaryQuery :: GetJobSummaryResponse :: setJobs		136895	2					
ANR	137019	ParameterList	std :: vector < AviaryCommon :: JobSummary * > * arg_Jobs		136895	3					
ANR	137020	Parameter	std :: vector < AviaryCommon :: JobSummary * > * arg_Jobs	435:20:17411:17459	136895	0	True				
ANR	137021	ParameterType	std :: vector < AviaryCommon :: JobSummary * > *		136895	0					
ANR	137022	Identifier	arg_Jobs		136895	1					
ANR	137023	CFGEntryNode	ENTRY		136895		True				
ANR	137024	CFGExitNode	EXIT		136895		True				
ANR	137025	Symbol	* arg_Jobs		136895						
ANR	137026	Symbol	Environment :: getEnv		136895						
ANR	137027	Symbol	NULL		136895						
ANR	137028	Symbol	isValidJobs		136895						
ANR	137029	Symbol	* * arg_Jobs		136895						
ANR	137030	Symbol	arg_Jobs		136895						
ANR	137031	Symbol	false		136895						
ANR	137032	Symbol	i		136895						
ANR	137033	Symbol	property_Jobs		136895						
ANR	137034	Symbol	Environment :: getEnv ( ) -> log		136895						
ANR	137035	Symbol	* i		136895						
ANR	137036	Symbol	size		136895						
ANR	137037	Symbol	WSF_LOG_SI		136895						
ANR	137038	Symbol	* Environment :: getEnv		136895						
ANR	137039	Symbol	non_nil_exists		136895						
ANR	137040	Symbol	true		136895						
ANR	137041	Symbol	arg_Jobs -> size		136895						
ANR	137042	Function	AviaryQuery :: GetJobSummaryResponse :: getJobsAt	494:38:19035:19442							
ANR	137043	FunctionDef	AviaryQuery :: GetJobSummaryResponse :: getJobsAt (int i)		137042	0					
ANR	137044	CompoundStatement		496:12:19121:19442	137042	0					
ANR	137045	IdentifierDeclStatement	AviaryCommon :: JobSummary * ret_val ;	497:16:19139:19172	137042	0	True				
ANR	137046	IdentifierDecl	* ret_val		137042	0					
ANR	137047	IdentifierDeclType	AviaryCommon :: JobSummary *		137042	0					
ANR	137048	Identifier	ret_val		137042	1					
ANR	137049	IfStatement	if ( property_Jobs == NULL )		137042	1					
ANR	137050	Condition	property_Jobs == NULL	498:19:19193:19213	137042	0	True				
ANR	137051	EqualityExpression	property_Jobs == NULL		137042	0		==			
ANR	137052	Identifier	property_Jobs		137042	0					
ANR	137053	Identifier	NULL		137042	1					
ANR	137054	CompoundStatement		4:16:110:110	137042	1					
ANR	137055	ReturnStatement	return ( AviaryCommon :: JobSummary * ) 0 ;	500:20:19254:19289	137042	0	True				
ANR	137056	CastExpression	( AviaryCommon :: JobSummary * ) 0		137042	0					
ANR	137057	CastTarget	AviaryCommon :: JobSummary *		137042	0					
ANR	137058	PrimaryExpression	0		137042	1					
ANR	137059	ExpressionStatement	ret_val = ( * property_Jobs ) [ i ]	502:16:19325:19356	137042	2	True				
ANR	137060	AssignmentExpression	ret_val = ( * property_Jobs ) [ i ]		137042	0		=			
ANR	137061	Identifier	ret_val		137042	0					
ANR	137062	ArrayIndexing	( * property_Jobs ) [ i ]		137042	1					
ANR	137063	UnaryOperationExpression	* property_Jobs		137042	0					
ANR	137064	UnaryOperator	*		137042	0					
ANR	137065	Identifier	property_Jobs		137042	1					
ANR	137066	Identifier	i		137042	1					
ANR	137067	ReturnStatement	return ret_val ;	504:20:19395:19409	137042	3	True				
ANR	137068	Identifier	ret_val		137042	0					
ANR	137069	ReturnType	WSF_CALL		137042	1					
ANR	137070	Identifier	AviaryQuery :: GetJobSummaryResponse :: getJobsAt		137042	2					
ANR	137071	ParameterList	int i		137042	3					
ANR	137072	Parameter	int i	495:58:19102:19106	137042	0	True				
ANR	137073	ParameterType	int		137042	0					
ANR	137074	Identifier	i		137042	1					
ANR	137075	CFGEntryNode	ENTRY		137042		True				
ANR	137076	CFGExitNode	EXIT		137042		True				
ANR	137077	Symbol	NULL		137042						
ANR	137078	Symbol	* i		137042						
ANR	137079	Symbol	i		137042						
ANR	137080	Symbol	* property_Jobs		137042						
ANR	137081	Symbol	* * property_Jobs		137042						
ANR	137082	Symbol	property_Jobs		137042						
ANR	137083	Symbol	ret_val		137042						
ANR	137084	Function	AviaryQuery :: GetJobSummaryResponse :: setJobsAt	511:11:19532:21312							
ANR	137085	FunctionDef	"AviaryQuery :: GetJobSummaryResponse :: setJobsAt (int i , AviaryCommon :: JobSummary * arg_Jobs)"		137084	0					
ANR	137086	CompoundStatement		514:12:19679:21312	137084	0					
ANR	137087	IdentifierDeclStatement	AviaryCommon :: JobSummary * element ;	515:17:19698:19731	137084	0	True				
ANR	137088	IdentifierDecl	* element		137084	0					
ANR	137089	IdentifierDeclType	AviaryCommon :: JobSummary *		137084	0					
ANR	137090	Identifier	element		137084	1					
ANR	137091	IdentifierDeclStatement	int size = 0 ;	516:16:19749:19761	137084	1	True				
ANR	137092	IdentifierDecl	size = 0		137084	0					
ANR	137093	IdentifierDeclType	int		137084	0					
ANR	137094	Identifier	size		137084	1					
ANR	137095	AssignmentExpression	size = 0		137084	2		=			
ANR	137096	Identifier	size		137084	0					
ANR	137097	PrimaryExpression	0		137084	1					
ANR	137098	IdentifierDeclStatement	int non_nil_count ;	518:16:19780:19797	137084	2	True				
ANR	137099	IdentifierDecl	non_nil_count		137084	0					
ANR	137100	IdentifierDeclType	int		137084	0					
ANR	137101	Identifier	non_nil_count		137084	1					
ANR	137102	IdentifierDeclStatement	bool non_nil_exists = false ;	519:16:19815:19842	137084	3	True				
ANR	137103	IdentifierDecl	non_nil_exists = false		137084	0					
ANR	137104	IdentifierDeclType	bool		137084	0					
ANR	137105	Identifier	non_nil_exists		137084	1					
ANR	137106	AssignmentExpression	non_nil_exists = false		137084	2		=			
ANR	137107	Identifier	false		137084	0					
ANR	137108	Identifier	false		137084	1					
ANR	137109	IfStatement	if ( isValidJobs && property_Jobs && arg_Jobs == ( * property_Jobs ) [ i ] )		137084	4					
ANR	137110	Condition	isValidJobs && property_Jobs && arg_Jobs == ( * property_Jobs ) [ i ]	523:20:19884:20005	137084	0	True				
ANR	137111	AndExpression	isValidJobs && property_Jobs && arg_Jobs == ( * property_Jobs ) [ i ]		137084	0		&&			
ANR	137112	Identifier	isValidJobs		137084	0					
ANR	137113	AndExpression	property_Jobs && arg_Jobs == ( * property_Jobs ) [ i ]		137084	1		&&			
ANR	137114	Identifier	property_Jobs		137084	0					
ANR	137115	EqualityExpression	arg_Jobs == ( * property_Jobs ) [ i ]		137084	1		==			
ANR	137116	Identifier	arg_Jobs		137084	0					
ANR	137117	ArrayIndexing	( * property_Jobs ) [ i ]		137084	1					
ANR	137118	UnaryOperationExpression	* property_Jobs		137084	0					
ANR	137119	UnaryOperator	*		137084	0					
ANR	137120	Identifier	property_Jobs		137084	1					
ANR	137121	Identifier	i		137084	1					
ANR	137122	CompoundStatement		15:17:364:364	137084	1					
ANR	137123	ReturnStatement	return AXIS2_SUCCESS ;	530:20:20087:20107	137084	0	True				
ANR	137124	Identifier	AXIS2_SUCCESS		137084	0					
ANR	137125	ExpressionStatement	non_nil_exists = true	534:21:20170:20191	137084	5	True				
ANR	137126	AssignmentExpression	non_nil_exists = true		137084	0		=			
ANR	137127	Identifier	non_nil_exists		137084	0					
ANR	137128	Identifier	true		137084	1					
ANR	137129	IfStatement	if ( property_Jobs == NULL )		137084	6					
ANR	137130	Condition	property_Jobs == NULL	537:19:20232:20252	137084	0	True				
ANR	137131	EqualityExpression	property_Jobs == NULL		137084	0		==			
ANR	137132	Identifier	property_Jobs		137084	0					
ANR	137133	Identifier	NULL		137084	1					
ANR	137134	CompoundStatement		25:16:591:591	137084	1					
ANR	137135	ExpressionStatement	property_Jobs = new std :: vector < AviaryCommon :: JobSummary * > ( )	539:20:20293:20353	137084	0	True				
ANR	137136	AssignmentExpression	property_Jobs = new std :: vector < AviaryCommon :: JobSummary * > ( )		137084	0		=			
ANR	137137	Identifier	property_Jobs		137084	0					
ANR	137138	UnaryExpression	new std :: vector < AviaryCommon :: JobSummary * > ( )		137084	1					
ANR	137139	ElseStatement	else		137084	0					
ANR	137140	CompoundStatement		28:20:713:713	137084	0					
ANR	137141	ExpressionStatement	element = ( * property_Jobs ) [ i ]	543:16:20478:20507	137084	0	True				
ANR	137142	AssignmentExpression	element = ( * property_Jobs ) [ i ]		137084	0		=			
ANR	137143	Identifier	element		137084	0					
ANR	137144	ArrayIndexing	( * property_Jobs ) [ i ]		137084	1					
ANR	137145	UnaryOperationExpression	* property_Jobs		137084	0					
ANR	137146	UnaryOperator	*		137084	0					
ANR	137147	Identifier	property_Jobs		137084	1					
ANR	137148	Identifier	i		137084	1					
ANR	137149	IfStatement	if ( NULL != element )		137084	7					
ANR	137150	Condition	NULL != element	547:27:20572:20586	137084	0	True				
ANR	137151	EqualityExpression	NULL != element		137084	0		!=			
ANR	137152	Identifier	NULL		137084	0					
ANR	137153	Identifier	element		137084	1					
ANR	137154	CompoundStatement		35:24:933:933	137084	1					
ANR	137155	Statement	delete	552:32:20728:20733	137084	0	True				
ANR	137156	ExpressionStatement	element	552:39:20735:20742	137084	1	True				
ANR	137157	Identifier	element		137084	0					
ANR	137158	IfStatement	if ( ! non_nil_exists )		137084	8					
ANR	137159	Condition	! non_nil_exists	557:23:20869:20883	137084	0	True				
ANR	137160	UnaryOperationExpression	! non_nil_exists		137084	0					
ANR	137161	UnaryOperator	!		137084	0					
ANR	137162	Identifier	non_nil_exists		137084	1					
ANR	137163	CompoundStatement		45:20:1226:1226	137084	1					
ANR	137164	ExpressionStatement	isValidJobs = true	560:24:20957:20975	137084	0	True				
ANR	137165	AssignmentExpression	isValidJobs = true		137084	0		=			
ANR	137166	Identifier	isValidJobs		137084	0					
ANR	137167	Identifier	true		137084	1					
ANR	137168	ExpressionStatement	( * property_Jobs ) [ i ] = NULL	561:24:21001:21026	137084	1	True				
ANR	137169	AssignmentExpression	( * property_Jobs ) [ i ] = NULL		137084	0		=			
ANR	137170	ArrayIndexing	( * property_Jobs ) [ i ]		137084	0					
ANR	137171	UnaryOperationExpression	* property_Jobs		137084	0					
ANR	137172	UnaryOperator	*		137084	0					
ANR	137173	Identifier	property_Jobs		137084	1					
ANR	137174	Identifier	i		137084	1					
ANR	137175	Identifier	NULL		137084	1					
ANR	137176	ReturnStatement	return AXIS2_SUCCESS ;	563:24:21077:21097	137084	2	True				
ANR	137177	Identifier	AXIS2_SUCCESS		137084	0					
ANR	137178	ExpressionStatement	( * property_Jobs ) [ i ] = arg_Jobs	566:20:21158:21188	137084	9	True				
ANR	137179	AssignmentExpression	( * property_Jobs ) [ i ] = arg_Jobs		137084	0		=			
ANR	137180	ArrayIndexing	( * property_Jobs ) [ i ]		137084	0					
ANR	137181	UnaryOperationExpression	* property_Jobs		137084	0					
ANR	137182	UnaryOperator	*		137084	0					
ANR	137183	Identifier	property_Jobs		137084	1					
ANR	137184	Identifier	i		137084	1					
ANR	137185	Identifier	arg_Jobs		137084	1					
ANR	137186	ExpressionStatement	isValidJobs = true	569:15:21225:21243	137084	10	True				
ANR	137187	AssignmentExpression	isValidJobs = true		137084	0		=			
ANR	137188	Identifier	isValidJobs		137084	0					
ANR	137189	Identifier	true		137084	1					
ANR	137190	ReturnStatement	return AXIS2_SUCCESS ;	571:16:21278:21298	137084	11	True				
ANR	137191	Identifier	AXIS2_SUCCESS		137084	0					
ANR	137192	ReturnType	bool WSF_CALL		137084	1					
ANR	137193	Identifier	AviaryQuery :: GetJobSummaryResponse :: setJobsAt		137084	2					
ANR	137194	ParameterList	"int i , AviaryCommon :: JobSummary * arg_Jobs"		137084	3					
ANR	137195	Parameter	int i	512:58:19604:19608	137084	0	True				
ANR	137196	ParameterType	int		137084	0					
ANR	137197	Identifier	i		137084	1					
ANR	137198	Parameter	AviaryCommon :: JobSummary * arg_Jobs	513:20:19631:19664	137084	1	True				
ANR	137199	ParameterType	AviaryCommon :: JobSummary *		137084	0					
ANR	137200	Identifier	arg_Jobs		137084	1					
ANR	137201	CFGEntryNode	ENTRY		137084		True				
ANR	137202	CFGExitNode	EXIT		137084		True				
ANR	137203	Symbol	NULL		137084						
ANR	137204	Symbol	isValidJobs		137084						
ANR	137205	Symbol	arg_Jobs		137084						
ANR	137206	Symbol	false		137084						
ANR	137207	Symbol	i		137084						
ANR	137208	Symbol	* * property_Jobs		137084						
ANR	137209	Symbol	* property_Jobs		137084						
ANR	137210	Symbol	property_Jobs		137084						
ANR	137211	Symbol	non_nil_count		137084						
ANR	137212	Symbol	* i		137084						
ANR	137213	Symbol	size		137084						
ANR	137214	Symbol	non_nil_exists		137084						
ANR	137215	Symbol	true		137084						
ANR	137216	Symbol	element		137084						
ANR	137217	Symbol	AXIS2_SUCCESS		137084						
ANR	137218	Function	AviaryQuery :: GetJobSummaryResponse :: addJobs	577:12:21387:22083							
ANR	137219	FunctionDef	AviaryQuery :: GetJobSummaryResponse :: addJobs (AviaryCommon :: JobSummary * arg_Jobs)		137218	0					
ANR	137220	CompoundStatement		580:13:21527:22083	137218	0					
ANR	137221	IfStatement	if ( NULL == arg_Jobs )		137218	0					
ANR	137222	Condition	NULL == arg_Jobs	583:24:21571:21586	137218	0	True				
ANR	137223	EqualityExpression	NULL == arg_Jobs		137218	0		==			
ANR	137224	Identifier	NULL		137218	0					
ANR	137225	Identifier	arg_Jobs		137218	1					
ANR	137226	CompoundStatement		6:20:103:103	137218	1					
ANR	137227	ReturnStatement	return true ;	587:27:21683:21694	137218	0	True				
ANR	137228	Identifier	true		137218	0					
ANR	137229	IfStatement	if ( property_Jobs == NULL )		137218	1					
ANR	137230	Condition	property_Jobs == NULL	592:19:21783:21803	137218	0	True				
ANR	137231	EqualityExpression	property_Jobs == NULL		137218	0		==			
ANR	137232	Identifier	property_Jobs		137218	0					
ANR	137233	Identifier	NULL		137218	1					
ANR	137234	CompoundStatement		14:16:294:294	137218	1					
ANR	137235	ExpressionStatement	property_Jobs = new std :: vector < AviaryCommon :: JobSummary * > ( )	594:20:21844:21904	137218	0	True				
ANR	137236	AssignmentExpression	property_Jobs = new std :: vector < AviaryCommon :: JobSummary * > ( )		137218	0		=			
ANR	137237	Identifier	property_Jobs		137218	0					
ANR	137238	UnaryExpression	new std :: vector < AviaryCommon :: JobSummary * > ( )		137218	1					
ANR	137239	ExpressionStatement	property_Jobs -> push_back ( arg_Jobs )	597:15:21954:21988	137218	2	True				
ANR	137240	CallExpression	property_Jobs -> push_back ( arg_Jobs )		137218	0					
ANR	137241	Callee	property_Jobs -> push_back		137218	0					
ANR	137242	PtrMemberAccess	property_Jobs -> push_back		137218	0					
ANR	137243	Identifier	property_Jobs		137218	0					
ANR	137244	Identifier	push_back		137218	1					
ANR	137245	ArgumentList	arg_Jobs		137218	1					
ANR	137246	Argument	arg_Jobs		137218	0					
ANR	137247	Identifier	arg_Jobs		137218	0					
ANR	137248	ExpressionStatement	isValidJobs = true	599:16:22021:22039	137218	3	True				
ANR	137249	AssignmentExpression	isValidJobs = true		137218	0		=			
ANR	137250	Identifier	isValidJobs		137218	0					
ANR	137251	Identifier	true		137218	1					
ANR	137252	ReturnStatement	return true ;	600:16:22057:22068	137218	4	True				
ANR	137253	Identifier	true		137218	0					
ANR	137254	ReturnType	bool WSF_CALL		137218	1					
ANR	137255	Identifier	AviaryQuery :: GetJobSummaryResponse :: addJobs		137218	2					
ANR	137256	ParameterList	AviaryCommon :: JobSummary * arg_Jobs		137218	3					
ANR	137257	Parameter	AviaryCommon :: JobSummary * arg_Jobs	579:20:21478:21511	137218	0	True				
ANR	137258	ParameterType	AviaryCommon :: JobSummary *		137218	0					
ANR	137259	Identifier	arg_Jobs		137218	1					
ANR	137260	CFGEntryNode	ENTRY		137218		True				
ANR	137261	CFGExitNode	EXIT		137218		True				
ANR	137262	Symbol	NULL		137218						
ANR	137263	Symbol	isValidJobs		137218						
ANR	137264	Symbol	arg_Jobs		137218						
ANR	137265	Symbol	true		137218						
ANR	137266	Symbol	property_Jobs		137218						
ANR	137267	Function	AviaryQuery :: GetJobSummaryResponse :: sizeofJobs	606:12:22177:22432							
ANR	137268	FunctionDef	AviaryQuery :: GetJobSummaryResponse :: sizeofJobs ()		137267	0					
ANR	137269	CompoundStatement		608:12:22263:22432	137267	0					
ANR	137270	IfStatement	if ( property_Jobs == NULL )		137267	0					
ANR	137271	Condition	property_Jobs == NULL	610:19:22285:22305	137267	0	True				
ANR	137272	EqualityExpression	property_Jobs == NULL		137267	0		==			
ANR	137273	Identifier	property_Jobs		137267	0					
ANR	137274	Identifier	NULL		137267	1					
ANR	137275	CompoundStatement		4:16:60:60	137267	1					
ANR	137276	ReturnStatement	return 0 ;	612:20:22346:22354	137267	0	True				
ANR	137277	PrimaryExpression	0		137267	0					
ANR	137278	ReturnStatement	return property_Jobs -> size ( ) ;	614:16:22390:22418	137267	1	True				
ANR	137279	CallExpression	property_Jobs -> size ( )		137267	0					
ANR	137280	Callee	property_Jobs -> size		137267	0					
ANR	137281	PtrMemberAccess	property_Jobs -> size		137267	0					
ANR	137282	Identifier	property_Jobs		137267	0					
ANR	137283	Identifier	size		137267	1					
ANR	137284	ArgumentList			137267	1					
ANR	137285	ReturnType	int WSF_CALL		137267	1					
ANR	137286	Identifier	AviaryQuery :: GetJobSummaryResponse :: sizeofJobs		137267	2					
ANR	137287	ParameterList			137267	3					
ANR	137288	CFGEntryNode	ENTRY		137267		True				
ANR	137289	CFGExitNode	EXIT		137267		True				
ANR	137290	Symbol	NULL		137267						
ANR	137291	Symbol	* property_Jobs		137267						
ANR	137292	Symbol	property_Jobs		137267						
ANR	137293	Symbol	property_Jobs -> size		137267						
ANR	137294	Function	AviaryQuery :: GetJobSummaryResponse :: removeJobsAt	620:12:22538:22686							
ANR	137295	FunctionDef	AviaryQuery :: GetJobSummaryResponse :: removeJobsAt (int i)		137294	0					
ANR	137296	CompoundStatement		622:12:22632:22686	137294	0					
ANR	137297	ReturnStatement	return setJobsNilAt ( i ) ;	623:16:22650:22672	137294	0	True				
ANR	137298	CallExpression	setJobsNilAt ( i )		137294	0					
ANR	137299	Callee	setJobsNilAt		137294	0					
ANR	137300	Identifier	setJobsNilAt		137294	0					
ANR	137301	ArgumentList	i		137294	1					
ANR	137302	Argument	i		137294	0					
ANR	137303	Identifier	i		137294	0					
ANR	137304	ReturnType	bool WSF_CALL		137294	1					
ANR	137305	Identifier	AviaryQuery :: GetJobSummaryResponse :: removeJobsAt		137294	2					
ANR	137306	ParameterList	int i		137294	3					
ANR	137307	Parameter	int i	621:61:22613:22617	137294	0	True				
ANR	137308	ParameterType	int		137294	0					
ANR	137309	Identifier	i		137294	1					
ANR	137310	CFGEntryNode	ENTRY		137294		True				
ANR	137311	CFGExitNode	EXIT		137294		True				
ANR	137312	Symbol	i		137294						
ANR	137313	Symbol	setJobsNilAt		137294						
ANR	137314	Function	AviaryQuery :: GetJobSummaryResponse :: resetJobs	631:11:22776:23744							
ANR	137315	FunctionDef	AviaryQuery :: GetJobSummaryResponse :: resetJobs ()		137314	0					
ANR	137316	CompoundStatement		633:11:22860:23744	137314	0					
ANR	137317	IdentifierDeclStatement	int i = 0 ;	634:15:22877:22886	137314	0	True				
ANR	137318	IdentifierDecl	i = 0		137314	0					
ANR	137319	IdentifierDeclType	int		137314	0					
ANR	137320	Identifier	i		137314	1					
ANR	137321	AssignmentExpression	i = 0		137314	2		=			
ANR	137322	Identifier	i		137314	0					
ANR	137323	PrimaryExpression	0		137314	1					
ANR	137324	IdentifierDeclStatement	int count = 0 ;	635:15:22903:22916	137314	1	True				
ANR	137325	IdentifierDecl	count = 0		137314	0					
ANR	137326	IdentifierDeclType	int		137314	0					
ANR	137327	Identifier	count		137314	1					
ANR	137328	AssignmentExpression	count = 0		137314	2		=			
ANR	137329	Identifier	count		137314	0					
ANR	137330	PrimaryExpression	0		137314	1					
ANR	137331	IfStatement	if ( property_Jobs != NULL )		137314	2					
ANR	137332	Condition	property_Jobs != NULL	639:20:22956:22976	137314	0	True				
ANR	137333	EqualityExpression	property_Jobs != NULL		137314	0		!=			
ANR	137334	Identifier	property_Jobs		137314	0					
ANR	137335	Identifier	NULL		137314	1					
ANR	137336	CompoundStatement		9:18:154:231	137314	1					
ANR	137337	IdentifierDeclStatement	std :: vector < AviaryCommon :: JobSummary * > :: iterator it = property_Jobs -> begin ( ) ;	641:18:23015:23092	137314	0	True				
ANR	137338	IdentifierDecl	it = property_Jobs -> begin ( )		137314	0					
ANR	137339	IdentifierDeclType	std :: vector < AviaryCommon :: JobSummary * > :: iterator		137314	0					
ANR	137340	Identifier	it		137314	1					
ANR	137341	AssignmentExpression	it = property_Jobs -> begin ( )		137314	2		=			
ANR	137342	Identifier	it		137314	0					
ANR	137343	CallExpression	property_Jobs -> begin ( )		137314	1					
ANR	137344	Callee	property_Jobs -> begin		137314	0					
ANR	137345	PtrMemberAccess	property_Jobs -> begin		137314	0					
ANR	137346	Identifier	property_Jobs		137314	0					
ANR	137347	Identifier	begin		137314	1					
ANR	137348	ArgumentList			137314	1					
ANR	137349	ForStatement	for ( ; it < property_Jobs -> end ( ) ; ++ it )		137314	1					
ANR	137350	Condition	it < property_Jobs -> end ( )	642:25:23119:23144	137314	0	True				
ANR	137351	RelationalExpression	it < property_Jobs -> end ( )		137314	0		<			
ANR	137352	Identifier	it		137314	0					
ANR	137353	CallExpression	property_Jobs -> end ( )		137314	1					
ANR	137354	Callee	property_Jobs -> end		137314	0					
ANR	137355	PtrMemberAccess	property_Jobs -> end		137314	0					
ANR	137356	Identifier	property_Jobs		137314	0					
ANR	137357	Identifier	end		137314	1					
ANR	137358	ArgumentList			137314	1					
ANR	137359	UnaryExpression	++ it	642:54:23148:23151	137314	1	True				
ANR	137360	IncDec	++		137314	0					
ANR	137361	Identifier	it		137314	1					
ANR	137362	CompoundStatement		12:21:334:373	137314	2					
ANR	137363	IdentifierDeclStatement	AviaryCommon :: JobSummary * element = * it ;	644:21:23195:23234	137314	0	True				
ANR	137364	IdentifierDecl	* element = * it		137314	0					
ANR	137365	IdentifierDeclType	AviaryCommon :: JobSummary *		137314	0					
ANR	137366	Identifier	element		137314	1					
ANR	137367	AssignmentExpression	* element = * it		137314	2		=			
ANR	137368	Identifier	element		137314	0					
ANR	137369	UnaryOperationExpression	* it		137314	1					
ANR	137370	UnaryOperator	*		137314	0					
ANR	137371	Identifier	it		137314	1					
ANR	137372	IfStatement	if ( element != NULL )		137314	1					
ANR	137373	Condition	element != NULL	649:19:23303:23317	137314	0	True				
ANR	137374	EqualityExpression	element != NULL		137314	0		!=			
ANR	137375	Identifier	element		137314	0					
ANR	137376	Identifier	NULL		137314	1					
ANR	137377	CompoundStatement		18:16:475:475	137314	1					
ANR	137378	Statement	delete	653:25:23403:23408	137314	0	True				
ANR	137379	ExpressionStatement	element	653:33:23411:23418	137314	1	True				
ANR	137380	Identifier	element		137314	0					
ANR	137381	IfStatement	if ( NULL != property_Jobs )		137314	3					
ANR	137382	Condition	NULL != property_Jobs	665:23:23589:23609	137314	0	True				
ANR	137383	EqualityExpression	NULL != property_Jobs		137314	0		!=			
ANR	137384	Identifier	NULL		137314	0					
ANR	137385	Identifier	property_Jobs		137314	1					
ANR	137386	Statement	delete	666:17:23629:23634	137314	1	True				
ANR	137387	ExpressionStatement	property_Jobs	666:24:23636:23649	137314	4	True				
ANR	137388	Identifier	property_Jobs		137314	0					
ANR	137389	ExpressionStatement	isValidJobs = false	668:15:23683:23702	137314	5	True				
ANR	137390	AssignmentExpression	isValidJobs = false		137314	0		=			
ANR	137391	Identifier	isValidJobs		137314	0					
ANR	137392	Identifier	false		137314	1					
ANR	137393	ReturnStatement	return true ;	669:15:23720:23731	137314	6	True				
ANR	137394	Identifier	true		137314	0					
ANR	137395	ReturnType	bool WSF_CALL		137314	1					
ANR	137396	Identifier	AviaryQuery :: GetJobSummaryResponse :: resetJobs		137314	2					
ANR	137397	ParameterList			137314	3					
ANR	137398	CFGEntryNode	ENTRY		137314		True				
ANR	137399	CFGExitNode	EXIT		137314		True				
ANR	137400	Symbol	NULL		137314						
ANR	137401	Symbol	isValidJobs		137314						
ANR	137402	Symbol	count		137314						
ANR	137403	Symbol	false		137314						
ANR	137404	Symbol	i		137314						
ANR	137405	Symbol	* property_Jobs		137314						
ANR	137406	Symbol	property_Jobs		137314						
ANR	137407	Symbol	it		137314						
ANR	137408	Symbol	* it		137314						
ANR	137409	Symbol	property_Jobs -> begin		137314						
ANR	137410	Symbol	true		137314						
ANR	137411	Symbol	property_Jobs -> end		137314						
ANR	137412	Symbol	element		137314						
ANR	137413	Function	AviaryQuery :: GetJobSummaryResponse :: isJobsNil	675:11:23829:23962							
ANR	137414	FunctionDef	AviaryQuery :: GetJobSummaryResponse :: isJobsNil ()		137413	0					
ANR	137415	CompoundStatement		677:11:23913:23962	137413	0					
ANR	137416	ReturnStatement	return ! isValidJobs ;	678:15:23930:23949	137413	0	True				
ANR	137417	UnaryOperationExpression	! isValidJobs		137413	0					
ANR	137418	UnaryOperator	!		137413	0					
ANR	137419	Identifier	isValidJobs		137413	1					
ANR	137420	ReturnType	bool WSF_CALL		137413	1					
ANR	137421	Identifier	AviaryQuery :: GetJobSummaryResponse :: isJobsNil		137413	2					
ANR	137422	ParameterList			137413	3					
ANR	137423	CFGEntryNode	ENTRY		137413		True				
ANR	137424	CFGExitNode	EXIT		137413		True				
ANR	137425	Symbol	isValidJobs		137413						
ANR	137426	Function	AviaryQuery :: GetJobSummaryResponse :: setJobsNil	684:11:24067:24200							
ANR	137427	FunctionDef	AviaryQuery :: GetJobSummaryResponse :: setJobsNil ()		137426	0					
ANR	137428	CompoundStatement		686:11:24152:24200	137426	0					
ANR	137429	ReturnStatement	return resetJobs ( ) ;	687:15:24169:24187	137426	0	True				
ANR	137430	CallExpression	resetJobs ( )		137426	0					
ANR	137431	Callee	resetJobs		137426	0					
ANR	137432	Identifier	resetJobs		137426	0					
ANR	137433	ArgumentList			137426	1					
ANR	137434	ReturnType	bool WSF_CALL		137426	1					
ANR	137435	Identifier	AviaryQuery :: GetJobSummaryResponse :: setJobsNil		137426	2					
ANR	137436	ParameterList			137426	3					
ANR	137437	CFGEntryNode	ENTRY		137426		True				
ANR	137438	CFGExitNode	EXIT		137426		True				
ANR	137439	Symbol	resetJobs		137426						
ANR	137440	Function	AviaryQuery :: GetJobSummaryResponse :: isJobsNilAt	694:11:24302:24553							
ANR	137441	FunctionDef	AviaryQuery :: GetJobSummaryResponse :: isJobsNilAt (int i)		137440	0					
ANR	137442	CompoundStatement		696:11:24393:24553	137440	0					
ANR	137443	ReturnStatement	return ( isValidJobs == false || NULL == property_Jobs || NULL == ( * property_Jobs ) [ i ] ) ;	697:15:24410:24539	137440	0	True				
ANR	137444	OrExpression	isValidJobs == false || NULL == property_Jobs || NULL == ( * property_Jobs ) [ i ]		137440	0		||			
ANR	137445	EqualityExpression	isValidJobs == false		137440	0		==			
ANR	137446	Identifier	isValidJobs		137440	0					
ANR	137447	Identifier	false		137440	1					
ANR	137448	OrExpression	NULL == property_Jobs || NULL == ( * property_Jobs ) [ i ]		137440	1		||			
ANR	137449	EqualityExpression	NULL == property_Jobs		137440	0		==			
ANR	137450	Identifier	NULL		137440	0					
ANR	137451	Identifier	property_Jobs		137440	1					
ANR	137452	EqualityExpression	NULL == ( * property_Jobs ) [ i ]		137440	1		==			
ANR	137453	Identifier	NULL		137440	0					
ANR	137454	ArrayIndexing	( * property_Jobs ) [ i ]		137440	1					
ANR	137455	UnaryOperationExpression	* property_Jobs		137440	0					
ANR	137456	UnaryOperator	*		137440	0					
ANR	137457	Identifier	property_Jobs		137440	1					
ANR	137458	Identifier	i		137440	1					
ANR	137459	ReturnType	bool WSF_CALL		137440	1					
ANR	137460	Identifier	AviaryQuery :: GetJobSummaryResponse :: isJobsNilAt		137440	2					
ANR	137461	ParameterList	int i		137440	3					
ANR	137462	Parameter	int i	695:59:24375:24379	137440	0	True				
ANR	137463	ParameterType	int		137440	0					
ANR	137464	Identifier	i		137440	1					
ANR	137465	CFGEntryNode	ENTRY		137440		True				
ANR	137466	CFGExitNode	EXIT		137440		True				
ANR	137467	Symbol	* i		137440						
ANR	137468	Symbol	NULL		137440						
ANR	137469	Symbol	isValidJobs		137440						
ANR	137470	Symbol	false		137440						
ANR	137471	Symbol	i		137440						
ANR	137472	Symbol	* * property_Jobs		137440						
ANR	137473	Symbol	* property_Jobs		137440						
ANR	137474	Symbol	property_Jobs		137440						
ANR	137475	Function	AviaryQuery :: GetJobSummaryResponse :: setJobsNilAt	705:11:24632:26882							
ANR	137476	FunctionDef	AviaryQuery :: GetJobSummaryResponse :: setJobsNilAt (int i)		137475	0					
ANR	137477	CompoundStatement		707:11:24724:26882	137475	0					
ANR	137478	IdentifierDeclStatement	int size = 0 ;	708:16:24742:24754	137475	0	True				
ANR	137479	IdentifierDecl	size = 0		137475	0					
ANR	137480	IdentifierDeclType	int		137475	0					
ANR	137481	Identifier	size		137475	1					
ANR	137482	AssignmentExpression	size = 0		137475	2		=			
ANR	137483	Identifier	size		137475	0					
ANR	137484	PrimaryExpression	0		137475	1					
ANR	137485	IdentifierDeclStatement	int j ;	709:16:24772:24777	137475	1	True				
ANR	137486	IdentifierDecl	j		137475	0					
ANR	137487	IdentifierDeclType	int		137475	0					
ANR	137488	Identifier	j		137475	1					
ANR	137489	IdentifierDeclStatement	bool non_nil_exists = false ;	710:16:24795:24822	137475	2	True				
ANR	137490	IdentifierDecl	non_nil_exists = false		137475	0					
ANR	137491	IdentifierDeclType	bool		137475	0					
ANR	137492	Identifier	non_nil_exists		137475	1					
ANR	137493	AssignmentExpression	non_nil_exists = false		137475	2		=			
ANR	137494	Identifier	false		137475	0					
ANR	137495	Identifier	false		137475	1					
ANR	137496	IdentifierDeclStatement	int k = 0 ;	712:16:24841:24850	137475	3	True				
ANR	137497	IdentifierDecl	k = 0		137475	0					
ANR	137498	IdentifierDeclType	int		137475	0					
ANR	137499	Identifier	k		137475	1					
ANR	137500	AssignmentExpression	k = 0		137475	2		=			
ANR	137501	Identifier	k		137475	0					
ANR	137502	PrimaryExpression	0		137475	1					
ANR	137503	IfStatement	if ( property_Jobs == NULL || isValidJobs == false )		137475	4					
ANR	137504	Condition	property_Jobs == NULL || isValidJobs == false	714:19:24872:24944	137475	0	True				
ANR	137505	OrExpression	property_Jobs == NULL || isValidJobs == false		137475	0		||			
ANR	137506	EqualityExpression	property_Jobs == NULL		137475	0		==			
ANR	137507	Identifier	property_Jobs		137475	0					
ANR	137508	Identifier	NULL		137475	1					
ANR	137509	EqualityExpression	isValidJobs == false		137475	1		==			
ANR	137510	Identifier	isValidJobs		137475	0					
ANR	137511	Identifier	false		137475	1					
ANR	137512	CompoundStatement		10:16:238:238	137475	1					
ANR	137513	ExpressionStatement	non_nil_exists = false	718:20:25006:25028	137475	0	True				
ANR	137514	AssignmentExpression	non_nil_exists = false		137475	0		=			
ANR	137515	Identifier	non_nil_exists		137475	0					
ANR	137516	Identifier	false		137475	1					
ANR	137517	ElseStatement	else		137475	0					
ANR	137518	CompoundStatement		15:16:360:360	137475	0					
ANR	137519	ExpressionStatement	size = property_Jobs -> size ( )	722:20:25107:25135	137475	0	True				
ANR	137520	AssignmentExpression	size = property_Jobs -> size ( )		137475	0		=			
ANR	137521	Identifier	size		137475	0					
ANR	137522	CallExpression	property_Jobs -> size ( )		137475	1					
ANR	137523	Callee	property_Jobs -> size		137475	0					
ANR	137524	PtrMemberAccess	property_Jobs -> size		137475	0					
ANR	137525	Identifier	property_Jobs		137475	0					
ANR	137526	Identifier	size		137475	1					
ANR	137527	ArgumentList			137475	1					
ANR	137528	ForStatement	"for ( j = 0 , k = 0 ; j < size ; j ++ )"		137475	1					
ANR	137529	ForInit	"j = 0 , k = 0 ;"	723:24:25161:25173	137475	0	True				
ANR	137530	Expression	"j = 0 , k = 0"		137475	0					
ANR	137531	AssignmentExpression	j = 0		137475	0		=			
ANR	137532	Identifier	j		137475	0					
ANR	137533	PrimaryExpression	0		137475	1					
ANR	137534	AssignmentExpression	k = 0		137475	1		=			
ANR	137535	Identifier	k		137475	0					
ANR	137536	PrimaryExpression	0		137475	1					
ANR	137537	Condition	j < size	723:38:25175:25182	137475	1	True				
ANR	137538	RelationalExpression	j < size		137475	0		<			
ANR	137539	Identifier	j		137475	0					
ANR	137540	Identifier	size		137475	1					
ANR	137541	PostIncDecOperationExpression	j ++	723:48:25185:25188	137475	2	True				
ANR	137542	Identifier	j		137475	0					
ANR	137543	IncDec	++		137475	1					
ANR	137544	CompoundStatement		18:20:487:487	137475	3					
ANR	137545	IfStatement	if ( i == j )		137475	0					
ANR	137546	Condition	i == j	725:27:25241:25246	137475	0	True				
ANR	137547	EqualityExpression	i == j		137475	0		==			
ANR	137548	Identifier	i		137475	0					
ANR	137549	Identifier	j		137475	1					
ANR	137550	ContinueStatement	continue ;	725:35:25249:25257	137475	1	True				
ANR	137551	IfStatement	if ( NULL != ( * property_Jobs ) [ i ] )		137475	1					
ANR	137552	Condition	NULL != ( * property_Jobs ) [ i ]	726:27:25287:25313	137475	0	True				
ANR	137553	EqualityExpression	NULL != ( * property_Jobs ) [ i ]		137475	0		!=			
ANR	137554	Identifier	NULL		137475	0					
ANR	137555	ArrayIndexing	( * property_Jobs ) [ i ]		137475	1					
ANR	137556	UnaryOperationExpression	* property_Jobs		137475	0					
ANR	137557	UnaryOperator	*		137475	0					
ANR	137558	Identifier	property_Jobs		137475	1					
ANR	137559	Identifier	i		137475	1					
ANR	137560	CompoundStatement		21:24:615:615	137475	1					
ANR	137561	ExpressionStatement	k ++	728:28:25370:25373	137475	0	True				
ANR	137562	PostIncDecOperationExpression	k ++		137475	0					
ANR	137563	Identifier	k		137475	0					
ANR	137564	IncDec	++		137475	1					
ANR	137565	ExpressionStatement	non_nil_exists = true	729:28:25403:25424	137475	1	True				
ANR	137566	AssignmentExpression	non_nil_exists = true		137475	0		=			
ANR	137567	Identifier	non_nil_exists		137475	0					
ANR	137568	Identifier	true		137475	1					
ANR	137569	IfStatement	if ( k >= 0 )		137475	2					
ANR	137570	Condition	k >= 0	730:32:25458:25463	137475	0	True				
ANR	137571	RelationalExpression	k >= 0		137475	0		>=			
ANR	137572	Identifier	k		137475	0					
ANR	137573	PrimaryExpression	0		137475	1					
ANR	137574	CompoundStatement		25:28:769:769	137475	1					
ANR	137575	BreakStatement	break ;	732:32:25528:25533	137475	0	True				
ANR	137576	IfStatement	if ( k < 0 )		137475	5					
ANR	137577	Condition	k < 0	739:20:25669:25673	137475	0	True				
ANR	137578	RelationalExpression	k < 0		137475	0		<			
ANR	137579	Identifier	k		137475	0					
ANR	137580	PrimaryExpression	0		137475	1					
ANR	137581	CompoundStatement		34:16:967:967	137475	1					
ANR	137582	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""Size of the array of jobs is beinng set to be smaller than the specificed number of minOccurs(0)"" )"	741:23:25717:25874	137475	0	True				
ANR	137583	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""Size of the array of jobs is beinng set to be smaller than the specificed number of minOccurs(0)"" )"		137475	0					
ANR	137584	Callee	WSF_LOG_ERROR_MSG		137475	0					
ANR	137585	Identifier	WSF_LOG_ERROR_MSG		137475	0					
ANR	137586	ArgumentList	Environment :: getEnv ( ) -> log		137475	1					
ANR	137587	Argument	Environment :: getEnv ( ) -> log		137475	0					
ANR	137588	PtrMemberAccess	Environment :: getEnv ( ) -> log		137475	0					
ANR	137589	CallExpression	Environment :: getEnv ( )		137475	0					
ANR	137590	Callee	Environment :: getEnv		137475	0					
ANR	137591	Identifier	Environment :: getEnv		137475	0					
ANR	137592	ArgumentList			137475	1					
ANR	137593	Identifier	log		137475	1					
ANR	137594	Argument	WSF_LOG_SI		137475	1					
ANR	137595	Identifier	WSF_LOG_SI		137475	0					
ANR	137596	Argument	"""Size of the array of jobs is beinng set to be smaller than the specificed number of minOccurs(0)"""		137475	2					
ANR	137597	PrimaryExpression	"""Size of the array of jobs is beinng set to be smaller than the specificed number of minOccurs(0)"""		137475	0					
ANR	137598	ReturnStatement	return AXIS2_FAILURE ;	742:23:25899:25919	137475	1	True				
ANR	137599	Identifier	AXIS2_FAILURE		137475	0					
ANR	137600	IfStatement	if ( property_Jobs == NULL )		137475	6					
ANR	137601	Condition	property_Jobs == NULL	745:19:25960:25980	137475	0	True				
ANR	137602	EqualityExpression	property_Jobs == NULL		137475	0		==			
ANR	137603	Identifier	property_Jobs		137475	0					
ANR	137604	Identifier	NULL		137475	1					
ANR	137605	CompoundStatement		40:16:1274:1274	137475	1					
ANR	137606	ExpressionStatement	isValidJobs = false	747:20:26021:26040	137475	0	True				
ANR	137607	AssignmentExpression	isValidJobs = false		137475	0		=			
ANR	137608	Identifier	isValidJobs		137475	0					
ANR	137609	Identifier	false		137475	1					
ANR	137610	ReturnStatement	return true ;	749:20:26083:26094	137475	1	True				
ANR	137611	Identifier	true		137475	0					
ANR	137612	IdentifierDeclStatement	AviaryCommon :: JobSummary * element = ( * property_Jobs ) [ i ] ;	753:17:26217:26272	137475	7	True				
ANR	137613	IdentifierDecl	* element = ( * property_Jobs ) [ i ]		137475	0					
ANR	137614	IdentifierDeclType	AviaryCommon :: JobSummary *		137475	0					
ANR	137615	Identifier	element		137475	1					
ANR	137616	AssignmentExpression	* element = ( * property_Jobs ) [ i ]		137475	2		=			
ANR	137617	Identifier	element		137475	0					
ANR	137618	ArrayIndexing	( * property_Jobs ) [ i ]		137475	1					
ANR	137619	UnaryOperationExpression	* property_Jobs		137475	0					
ANR	137620	UnaryOperator	*		137475	0					
ANR	137621	Identifier	property_Jobs		137475	1					
ANR	137622	Identifier	i		137475	1					
ANR	137623	IfStatement	if ( NULL != element )		137475	8					
ANR	137624	Condition	NULL != element	754:19:26293:26307	137475	0	True				
ANR	137625	EqualityExpression	NULL != element		137475	0		!=			
ANR	137626	Identifier	NULL		137475	0					
ANR	137627	Identifier	element		137475	1					
ANR	137628	CompoundStatement		49:16:1601:1601	137475	1					
ANR	137629	Statement	delete	759:24:26409:26414	137475	0	True				
ANR	137630	ExpressionStatement	element	759:31:26416:26423	137475	1	True				
ANR	137631	Identifier	element		137475	0					
ANR	137632	IfStatement	if ( ! non_nil_exists )		137475	9					
ANR	137633	Condition	! non_nil_exists	763:23:26507:26521	137475	0	True				
ANR	137634	UnaryOperationExpression	! non_nil_exists		137475	0					
ANR	137635	UnaryOperator	!		137475	0					
ANR	137636	Identifier	non_nil_exists		137475	1					
ANR	137637	CompoundStatement		58:20:1819:1819	137475	1					
ANR	137638	ExpressionStatement	isValidJobs = false	766:24:26595:26614	137475	0	True				
ANR	137639	AssignmentExpression	isValidJobs = false		137475	0		=			
ANR	137640	Identifier	isValidJobs		137475	0					
ANR	137641	Identifier	false		137475	1					
ANR	137642	ExpressionStatement	( * property_Jobs ) [ i ] = NULL	767:24:26640:26666	137475	1	True				
ANR	137643	AssignmentExpression	( * property_Jobs ) [ i ] = NULL		137475	0		=			
ANR	137644	ArrayIndexing	( * property_Jobs ) [ i ]		137475	0					
ANR	137645	UnaryOperationExpression	* property_Jobs		137475	0					
ANR	137646	UnaryOperator	*		137475	0					
ANR	137647	Identifier	property_Jobs		137475	1					
ANR	137648	Identifier	i		137475	1					
ANR	137649	Identifier	NULL		137475	1					
ANR	137650	ReturnStatement	return AXIS2_SUCCESS ;	768:24:26692:26712	137475	2	True				
ANR	137651	Identifier	AXIS2_SUCCESS		137475	0					
ANR	137652	ExpressionStatement	( * property_Jobs ) [ i ] = NULL	773:16:26787:26813	137475	10	True				
ANR	137653	AssignmentExpression	( * property_Jobs ) [ i ] = NULL		137475	0		=			
ANR	137654	ArrayIndexing	( * property_Jobs ) [ i ]		137475	0					
ANR	137655	UnaryOperationExpression	* property_Jobs		137475	0					
ANR	137656	UnaryOperator	*		137475	0					
ANR	137657	Identifier	property_Jobs		137475	1					
ANR	137658	Identifier	i		137475	1					
ANR	137659	Identifier	NULL		137475	1					
ANR	137660	ReturnStatement	return AXIS2_SUCCESS ;	775:16:26848:26868	137475	11	True				
ANR	137661	Identifier	AXIS2_SUCCESS		137475	0					
ANR	137662	ReturnType	bool WSF_CALL		137475	1					
ANR	137663	Identifier	AviaryQuery :: GetJobSummaryResponse :: setJobsNilAt		137475	2					
ANR	137664	ParameterList	int i		137475	3					
ANR	137665	Parameter	int i	706:60:24706:24710	137475	0	True				
ANR	137666	ParameterType	int		137475	0					
ANR	137667	Identifier	i		137475	1					
ANR	137668	CFGEntryNode	ENTRY		137475		True				
ANR	137669	CFGExitNode	EXIT		137475		True				
ANR	137670	Symbol	Environment :: getEnv		137475						
ANR	137671	Symbol	NULL		137475						
ANR	137672	Symbol	isValidJobs		137475						
ANR	137673	Symbol	false		137475						
ANR	137674	Symbol	i		137475						
ANR	137675	Symbol	* property_Jobs		137475						
ANR	137676	Symbol	* * property_Jobs		137475						
ANR	137677	Symbol	j		137475						
ANR	137678	Symbol	property_Jobs		137475						
ANR	137679	Symbol	k		137475						
ANR	137680	Symbol	Environment :: getEnv ( ) -> log		137475						
ANR	137681	Symbol	AXIS2_FAILURE		137475						
ANR	137682	Symbol	* i		137475						
ANR	137683	Symbol	size		137475						
ANR	137684	Symbol	WSF_LOG_SI		137475						
ANR	137685	Symbol	* Environment :: getEnv		137475						
ANR	137686	Symbol	non_nil_exists		137475						
ANR	137687	Symbol	true		137475						
ANR	137688	Symbol	property_Jobs -> size		137475						
ANR	137689	Symbol	element		137475						
ANR	137690	Symbol	AXIS2_SUCCESS		137475						
