command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1280193	File	data/converged/CVE-2011-4930_htcondor/dynuser.WINDOWS.cpp								
ANR	1280194	Function	getSystemAccountName	36:0:1165:1249							
ANR	1280195	FunctionDef	getSystemAccountName ()		1280194	0					
ANR	1280196	CompoundStatement		36:29:1194:1249	1280194	0					
ANR	1280197	ReturnStatement	return getWellKnownName ( SECURITY_LOCAL_SYSTEM_RID ) ;	37:1:1197:1247	1280194	0	True				
ANR	1280198	CallExpression	getWellKnownName ( SECURITY_LOCAL_SYSTEM_RID )		1280194	0					
ANR	1280199	Callee	getWellKnownName		1280194	0					
ANR	1280200	Identifier	getWellKnownName		1280194	0					
ANR	1280201	ArgumentList	SECURITY_LOCAL_SYSTEM_RID		1280194	1					
ANR	1280202	Argument	SECURITY_LOCAL_SYSTEM_RID		1280194	0					
ANR	1280203	Identifier	SECURITY_LOCAL_SYSTEM_RID		1280194	0					
ANR	1280204	ReturnType	char *		1280194	1					
ANR	1280205	Identifier	getSystemAccountName		1280194	2					
ANR	1280206	ParameterList			1280194	3					
ANR	1280207	CFGEntryNode	ENTRY		1280194		True				
ANR	1280208	CFGExitNode	EXIT		1280194		True				
ANR	1280209	Symbol	getWellKnownName		1280194						
ANR	1280210	Symbol	SECURITY_LOCAL_SYSTEM_RID		1280194						
ANR	1280211	Function	getUserGroupName	42:0:1343:1452							
ANR	1280212	FunctionDef	getUserGroupName ()		1280211	0					
ANR	1280213	CompoundStatement		42:25:1368:1452	1280211	0					
ANR	1280214	ReturnStatement	"return getWellKnownName ( SECURITY_BUILTIN_DOMAIN_RID , DOMAIN_ALIAS_RID_USERS ) ;"	43:1:1371:1450	1280211	0	True				
ANR	1280215	CallExpression	"getWellKnownName ( SECURITY_BUILTIN_DOMAIN_RID , DOMAIN_ALIAS_RID_USERS )"		1280211	0					
ANR	1280216	Callee	getWellKnownName		1280211	0					
ANR	1280217	Identifier	getWellKnownName		1280211	0					
ANR	1280218	ArgumentList	SECURITY_BUILTIN_DOMAIN_RID		1280211	1					
ANR	1280219	Argument	SECURITY_BUILTIN_DOMAIN_RID		1280211	0					
ANR	1280220	Identifier	SECURITY_BUILTIN_DOMAIN_RID		1280211	0					
ANR	1280221	Argument	DOMAIN_ALIAS_RID_USERS		1280211	1					
ANR	1280222	Identifier	DOMAIN_ALIAS_RID_USERS		1280211	0					
ANR	1280223	ReturnType	char *		1280211	1					
ANR	1280224	Identifier	getUserGroupName		1280211	2					
ANR	1280225	ParameterList			1280211	3					
ANR	1280226	CFGEntryNode	ENTRY		1280211		True				
ANR	1280227	CFGExitNode	EXIT		1280211		True				
ANR	1280228	Symbol	DOMAIN_ALIAS_RID_USERS		1280211						
ANR	1280229	Symbol	getWellKnownName		1280211						
ANR	1280230	Symbol	SECURITY_BUILTIN_DOMAIN_RID		1280211						
ANR	1280231	Function	getBuiltinDomainName	49:0:1565:1684							
ANR	1280232	FunctionDef	getBuiltinDomainName ()		1280231	0					
ANR	1280233	CompoundStatement		50:23:1594:1684	1280231	0					
ANR	1280234	ReturnStatement	"return getWellKnownName ( SECURITY_BUILTIN_DOMAIN_RID , DOMAIN_ALIAS_RID_USERS , true ) ;"	51:1:1597:1682	1280231	0	True				
ANR	1280235	CallExpression	"getWellKnownName ( SECURITY_BUILTIN_DOMAIN_RID , DOMAIN_ALIAS_RID_USERS , true )"		1280231	0					
ANR	1280236	Callee	getWellKnownName		1280231	0					
ANR	1280237	Identifier	getWellKnownName		1280231	0					
ANR	1280238	ArgumentList	SECURITY_BUILTIN_DOMAIN_RID		1280231	1					
ANR	1280239	Argument	SECURITY_BUILTIN_DOMAIN_RID		1280231	0					
ANR	1280240	Identifier	SECURITY_BUILTIN_DOMAIN_RID		1280231	0					
ANR	1280241	Argument	DOMAIN_ALIAS_RID_USERS		1280231	1					
ANR	1280242	Identifier	DOMAIN_ALIAS_RID_USERS		1280231	0					
ANR	1280243	Argument	true		1280231	2					
ANR	1280244	Identifier	true		1280231	0					
ANR	1280245	ReturnType	char *		1280231	1					
ANR	1280246	Identifier	getBuiltinDomainName		1280231	2					
ANR	1280247	ParameterList			1280231	3					
ANR	1280248	CFGEntryNode	ENTRY		1280231		True				
ANR	1280249	CFGExitNode	EXIT		1280231		True				
ANR	1280250	Symbol	getWellKnownName		1280231						
ANR	1280251	Symbol	DOMAIN_ALIAS_RID_USERS		1280231						
ANR	1280252	Symbol	true		1280231						
ANR	1280253	Symbol	SECURITY_BUILTIN_DOMAIN_RID		1280231						
ANR	1280254	Function	getNTAuthorityDomainName	57:0:1808:1905							
ANR	1280255	FunctionDef	getNTAuthorityDomainName ()		1280254	0					
ANR	1280256	CompoundStatement		58:27:1841:1905	1280254	0					
ANR	1280257	ReturnStatement	"return getWellKnownName ( SECURITY_LOCAL_SYSTEM_RID , 0 , true ) ;"	59:1:1844:1903	1280254	0	True				
ANR	1280258	CallExpression	"getWellKnownName ( SECURITY_LOCAL_SYSTEM_RID , 0 , true )"		1280254	0					
ANR	1280259	Callee	getWellKnownName		1280254	0					
ANR	1280260	Identifier	getWellKnownName		1280254	0					
ANR	1280261	ArgumentList	SECURITY_LOCAL_SYSTEM_RID		1280254	1					
ANR	1280262	Argument	SECURITY_LOCAL_SYSTEM_RID		1280254	0					
ANR	1280263	Identifier	SECURITY_LOCAL_SYSTEM_RID		1280254	0					
ANR	1280264	Argument	0		1280254	1					
ANR	1280265	PrimaryExpression	0		1280254	0					
ANR	1280266	Argument	true		1280254	2					
ANR	1280267	Identifier	true		1280254	0					
ANR	1280268	ReturnType	char *		1280254	1					
ANR	1280269	Identifier	getNTAuthorityDomainName		1280254	2					
ANR	1280270	ParameterList			1280254	3					
ANR	1280271	CFGEntryNode	ENTRY		1280254		True				
ANR	1280272	CFGExitNode	EXIT		1280254		True				
ANR	1280273	Symbol	getWellKnownName		1280254						
ANR	1280274	Symbol	SECURITY_LOCAL_SYSTEM_RID		1280254						
ANR	1280275	Symbol	true		1280254						
ANR	1280276	Function	getWellKnownName	67:0:2157:3391							
ANR	1280277	FunctionDef	"getWellKnownName (DWORD subAuth1 , DWORD subAuth2 , bool domainname)"		1280276	0					
ANR	1280278	CompoundStatement		68:68:2232:3391	1280276	0					
ANR	1280279	IdentifierDeclStatement	PSID pSystemSID ;	70:1:2237:2252	1280276	0	True				
ANR	1280280	IdentifierDecl	pSystemSID		1280276	0					
ANR	1280281	IdentifierDeclType	PSID		1280276	0					
ANR	1280282	Identifier	pSystemSID		1280276	1					
ANR	1280283	IdentifierDeclStatement	SID_IDENTIFIER_AUTHORITY auth = SECURITY_NT_AUTHORITY ;	71:1:2255:2308	1280276	1	True				
ANR	1280284	IdentifierDecl	auth = SECURITY_NT_AUTHORITY		1280276	0					
ANR	1280285	IdentifierDeclType	SID_IDENTIFIER_AUTHORITY		1280276	0					
ANR	1280286	Identifier	auth		1280276	1					
ANR	1280287	AssignmentExpression	auth = SECURITY_NT_AUTHORITY		1280276	2		=			
ANR	1280288	Identifier	SECURITY_NT_AUTHORITY		1280276	0					
ANR	1280289	Identifier	SECURITY_NT_AUTHORITY		1280276	1					
ANR	1280290	IdentifierDeclStatement	char * systemName ;	72:1:2311:2327	1280276	2	True				
ANR	1280291	IdentifierDecl	* systemName		1280276	0					
ANR	1280292	IdentifierDeclType	char *		1280276	0					
ANR	1280293	Identifier	systemName		1280276	1					
ANR	1280294	IdentifierDeclStatement	char * systemDomain ;	73:1:2330:2348	1280276	3	True				
ANR	1280295	IdentifierDecl	* systemDomain		1280276	0					
ANR	1280296	IdentifierDeclType	char *		1280276	0					
ANR	1280297	Identifier	systemDomain		1280276	1					
ANR	1280298	IdentifierDeclStatement	"DWORD name_size , domain_size ;"	74:1:2351:2379	1280276	4	True				
ANR	1280299	IdentifierDecl	name_size		1280276	0					
ANR	1280300	IdentifierDeclType	DWORD		1280276	0					
ANR	1280301	Identifier	name_size		1280276	1					
ANR	1280302	IdentifierDecl	domain_size		1280276	1					
ANR	1280303	IdentifierDeclType	DWORD		1280276	0					
ANR	1280304	Identifier	domain_size		1280276	1					
ANR	1280305	IdentifierDeclStatement	SID_NAME_USE sidUse ;	75:1:2382:2401	1280276	5	True				
ANR	1280306	IdentifierDecl	sidUse		1280276	0					
ANR	1280307	IdentifierDeclType	SID_NAME_USE		1280276	0					
ANR	1280308	Identifier	sidUse		1280276	1					
ANR	1280309	IdentifierDeclStatement	bool result ;	76:1:2404:2415	1280276	6	True				
ANR	1280310	IdentifierDecl	result		1280276	0					
ANR	1280311	IdentifierDeclType	bool		1280276	0					
ANR	1280312	Identifier	result		1280276	1					
ANR	1280313	ExpressionStatement	name_size = domain_size = 255	78:1:2420:2449	1280276	7	True				
ANR	1280314	AssignmentExpression	name_size = domain_size = 255		1280276	0		=			
ANR	1280315	Identifier	name_size		1280276	0					
ANR	1280316	AssignmentExpression	domain_size = 255		1280276	1		=			
ANR	1280317	Identifier	domain_size		1280276	0					
ANR	1280318	PrimaryExpression	255		1280276	1					
ANR	1280319	ExpressionStatement	systemName = new char [ name_size ]	79:1:2452:2484	1280276	8	True				
ANR	1280320	AssignmentExpression	systemName = new char [ name_size ]		1280276	0		=			
ANR	1280321	Identifier	systemName		1280276	0					
ANR	1280322	Identifier	name_size		1280276	1					
ANR	1280323	ExpressionStatement	systemDomain = new char [ domain_size ]	80:1:2487:2523	1280276	9	True				
ANR	1280324	AssignmentExpression	systemDomain = new char [ domain_size ]		1280276	0		=			
ANR	1280325	Identifier	systemDomain		1280276	0					
ANR	1280326	Identifier	domain_size		1280276	1					
ANR	1280327	IfStatement	"if ( ! AllocateAndInitializeSid ( & auth , ( ( subAuth2 ) ? 2 : 1 ) , subAuth1 , subAuth2 , 0 , 0 , 0 , 0 , 0 , 0 , & pSystemSID ) )"		1280276	10					
ANR	1280328	Condition	"! AllocateAndInitializeSid ( & auth , ( ( subAuth2 ) ? 2 : 1 ) , subAuth1 , subAuth2 , 0 , 0 , 0 , 0 , 0 , 0 , & pSystemSID )"	84:4:2581:2694	1280276	0	True				
ANR	1280329	UnaryOperationExpression	"! AllocateAndInitializeSid ( & auth , ( ( subAuth2 ) ? 2 : 1 ) , subAuth1 , subAuth2 , 0 , 0 , 0 , 0 , 0 , 0 , & pSystemSID )"		1280276	0					
ANR	1280330	UnaryOperator	!		1280276	0					
ANR	1280331	CallExpression	"AllocateAndInitializeSid ( & auth , ( ( subAuth2 ) ? 2 : 1 ) , subAuth1 , subAuth2 , 0 , 0 , 0 , 0 , 0 , 0 , & pSystemSID )"		1280276	1					
ANR	1280332	Callee	AllocateAndInitializeSid		1280276	0					
ANR	1280333	Identifier	AllocateAndInitializeSid		1280276	0					
ANR	1280334	ArgumentList	& auth		1280276	1					
ANR	1280335	Argument	& auth		1280276	0					
ANR	1280336	UnaryOperationExpression	& auth		1280276	0					
ANR	1280337	UnaryOperator	&		1280276	0					
ANR	1280338	Identifier	auth		1280276	1					
ANR	1280339	Argument	( subAuth2 ) ? 2 : 1		1280276	1					
ANR	1280340	ConditionalExpression	( subAuth2 ) ? 2 : 1		1280276	0					
ANR	1280341	Condition	subAuth2		1280276	0					
ANR	1280342	Identifier	subAuth2		1280276	0					
ANR	1280343	PrimaryExpression	2		1280276	1					
ANR	1280344	PrimaryExpression	1		1280276	2					
ANR	1280345	Argument	subAuth1		1280276	2					
ANR	1280346	Identifier	subAuth1		1280276	0					
ANR	1280347	Argument	subAuth2		1280276	3					
ANR	1280348	Identifier	subAuth2		1280276	0					
ANR	1280349	Argument	0		1280276	4					
ANR	1280350	PrimaryExpression	0		1280276	0					
ANR	1280351	Argument	0		1280276	5					
ANR	1280352	PrimaryExpression	0		1280276	0					
ANR	1280353	Argument	0		1280276	6					
ANR	1280354	PrimaryExpression	0		1280276	0					
ANR	1280355	Argument	0		1280276	7					
ANR	1280356	PrimaryExpression	0		1280276	0					
ANR	1280357	Argument	0		1280276	8					
ANR	1280358	PrimaryExpression	0		1280276	0					
ANR	1280359	Argument	0		1280276	9					
ANR	1280360	PrimaryExpression	0		1280276	0					
ANR	1280361	Argument	& pSystemSID		1280276	10					
ANR	1280362	UnaryOperationExpression	& pSystemSID		1280276	0					
ANR	1280363	UnaryOperator	&		1280276	0					
ANR	1280364	Identifier	pSystemSID		1280276	1					
ANR	1280365	CompoundStatement		21:17:465:465	1280276	1					
ANR	1280366	ExpressionStatement	"printf ( ""AllocateAndInitializeSid Error %u\\n"" , GetLastError ( ) )"	89:2:2702:2765	1280276	0	True				
ANR	1280367	CallExpression	"printf ( ""AllocateAndInitializeSid Error %u\\n"" , GetLastError ( ) )"		1280276	0					
ANR	1280368	Callee	printf		1280276	0					
ANR	1280369	Identifier	printf		1280276	0					
ANR	1280370	ArgumentList	"""AllocateAndInitializeSid Error %u\\n"""		1280276	1					
ANR	1280371	Argument	"""AllocateAndInitializeSid Error %u\\n"""		1280276	0					
ANR	1280372	PrimaryExpression	"""AllocateAndInitializeSid Error %u\\n"""		1280276	0					
ANR	1280373	Argument	GetLastError ( )		1280276	1					
ANR	1280374	CallExpression	GetLastError ( )		1280276	0					
ANR	1280375	Callee	GetLastError		1280276	0					
ANR	1280376	Identifier	GetLastError		1280276	0					
ANR	1280377	ArgumentList			1280276	1					
ANR	1280378	ReturnStatement	return NULL ;	90:2:2769:2780	1280276	1	True				
ANR	1280379	Identifier	NULL		1280276	0					
ANR	1280380	ExpressionStatement	"result = LookupAccountSid ( NULL , pSystemSID , systemName , & name_size , systemDomain , & domain_size , & sidUse )"	95:1:2847:3138	1280276	11	True				
ANR	1280381	AssignmentExpression	"result = LookupAccountSid ( NULL , pSystemSID , systemName , & name_size , systemDomain , & domain_size , & sidUse )"		1280276	0		=			
ANR	1280382	Identifier	result		1280276	0					
ANR	1280383	CallExpression	"LookupAccountSid ( NULL , pSystemSID , systemName , & name_size , systemDomain , & domain_size , & sidUse )"		1280276	1					
ANR	1280384	Callee	LookupAccountSid		1280276	0					
ANR	1280385	Identifier	LookupAccountSid		1280276	0					
ANR	1280386	ArgumentList	NULL		1280276	1					
ANR	1280387	Argument	NULL		1280276	0					
ANR	1280388	Identifier	NULL		1280276	0					
ANR	1280389	Argument	pSystemSID		1280276	1					
ANR	1280390	Identifier	pSystemSID		1280276	0					
ANR	1280391	Argument	systemName		1280276	2					
ANR	1280392	Identifier	systemName		1280276	0					
ANR	1280393	Argument	& name_size		1280276	3					
ANR	1280394	UnaryOperationExpression	& name_size		1280276	0					
ANR	1280395	UnaryOperator	&		1280276	0					
ANR	1280396	Identifier	name_size		1280276	1					
ANR	1280397	Argument	systemDomain		1280276	4					
ANR	1280398	Identifier	systemDomain		1280276	0					
ANR	1280399	Argument	& domain_size		1280276	5					
ANR	1280400	UnaryOperationExpression	& domain_size		1280276	0					
ANR	1280401	UnaryOperator	&		1280276	0					
ANR	1280402	Identifier	domain_size		1280276	1					
ANR	1280403	Argument	& sidUse		1280276	6					
ANR	1280404	UnaryOperationExpression	& sidUse		1280276	0					
ANR	1280405	UnaryOperator	&		1280276	0					
ANR	1280406	Identifier	sidUse		1280276	1					
ANR	1280407	ExpressionStatement	FreeSid ( pSystemSID )	104:1:3141:3160	1280276	12	True				
ANR	1280408	CallExpression	FreeSid ( pSystemSID )		1280276	0					
ANR	1280409	Callee	FreeSid		1280276	0					
ANR	1280410	Identifier	FreeSid		1280276	0					
ANR	1280411	ArgumentList	pSystemSID		1280276	1					
ANR	1280412	Argument	pSystemSID		1280276	0					
ANR	1280413	Identifier	pSystemSID		1280276	0					
ANR	1280414	IfStatement	if ( ! result )		1280276	13					
ANR	1280415	Condition	! result	106:6:3170:3177	1280276	0	True				
ANR	1280416	UnaryOperationExpression	! result		1280276	0					
ANR	1280417	UnaryOperator	!		1280276	0					
ANR	1280418	Identifier	result		1280276	1					
ANR	1280419	CompoundStatement		39:17:948:948	1280276	1					
ANR	1280420	ExpressionStatement	"printf ( ""LookupAccountSid Error %u\\n"" , GetLastError ( ) )"	107:2:3185:3240	1280276	0	True				
ANR	1280421	CallExpression	"printf ( ""LookupAccountSid Error %u\\n"" , GetLastError ( ) )"		1280276	0					
ANR	1280422	Callee	printf		1280276	0					
ANR	1280423	Identifier	printf		1280276	0					
ANR	1280424	ArgumentList	"""LookupAccountSid Error %u\\n"""		1280276	1					
ANR	1280425	Argument	"""LookupAccountSid Error %u\\n"""		1280276	0					
ANR	1280426	PrimaryExpression	"""LookupAccountSid Error %u\\n"""		1280276	0					
ANR	1280427	Argument	GetLastError ( )		1280276	1					
ANR	1280428	CallExpression	GetLastError ( )		1280276	0					
ANR	1280429	Callee	GetLastError		1280276	0					
ANR	1280430	Identifier	GetLastError		1280276	0					
ANR	1280431	ArgumentList			1280276	1					
ANR	1280432	ReturnStatement	return NULL ;	108:2:3244:3255	1280276	1	True				
ANR	1280433	Identifier	NULL		1280276	0					
ANR	1280434	ElseStatement	else		1280276	0					
ANR	1280435	IfStatement	if ( domainname )		1280276	0					
ANR	1280436	Condition	domainname	109:13:3270:3279	1280276	0	True				
ANR	1280437	Identifier	domainname		1280276	0					
ANR	1280438	CompoundStatement		42:26:1050:1050	1280276	1					
ANR	1280439	Statement	delete	110:2:3287:3292	1280276	0	True				
ANR	1280440	Statement	[	110:8:3293:3293	1280276	1	True				
ANR	1280441	Statement	]	110:9:3294:3294	1280276	2	True				
ANR	1280442	ExpressionStatement	systemName	110:11:3296:3306	1280276	3	True				
ANR	1280443	Identifier	systemName		1280276	0					
ANR	1280444	ReturnStatement	return systemDomain ;	111:2:3310:3329	1280276	4	True				
ANR	1280445	Identifier	systemDomain		1280276	0					
ANR	1280446	ElseStatement	else		1280276	0					
ANR	1280447	CompoundStatement		45:8:1107:1107	1280276	0					
ANR	1280448	Statement	delete	113:2:3344:3349	1280276	0	True				
ANR	1280449	Statement	[	113:8:3350:3350	1280276	1	True				
ANR	1280450	Statement	]	113:9:3351:3351	1280276	2	True				
ANR	1280451	ExpressionStatement	systemDomain	113:11:3353:3365	1280276	3	True				
ANR	1280452	Identifier	systemDomain		1280276	0					
ANR	1280453	ReturnStatement	return systemName ;	114:2:3369:3386	1280276	4	True				
ANR	1280454	Identifier	systemName		1280276	0					
ANR	1280455	ReturnType	char *		1280276	1					
ANR	1280456	Identifier	getWellKnownName		1280276	2					
ANR	1280457	ParameterList	"DWORD subAuth1 , DWORD subAuth2 , bool domainname"		1280276	3					
ANR	1280458	Parameter	DWORD subAuth1	68:18:2182:2195	1280276	0	True				
ANR	1280459	ParameterType	DWORD		1280276	0					
ANR	1280460	Identifier	subAuth1		1280276	1					
ANR	1280461	Parameter	DWORD subAuth2	68:34:2198:2211	1280276	1	True				
ANR	1280462	ParameterType	DWORD		1280276	0					
ANR	1280463	Identifier	subAuth2		1280276	1					
ANR	1280464	Parameter	bool domainname	68:50:2214:2228	1280276	2	True				
ANR	1280465	ParameterType	bool		1280276	0					
ANR	1280466	Identifier	domainname		1280276	1					
ANR	1280467	CFGEntryNode	ENTRY		1280276		True				
ANR	1280468	CFGExitNode	EXIT		1280276		True				
ANR	1280469	Symbol	AllocateAndInitializeSid		1280276						
ANR	1280470	Symbol	NULL		1280276						
ANR	1280471	Symbol	auth		1280276						
ANR	1280472	Symbol	domainname		1280276						
ANR	1280473	Symbol	sidUse		1280276						
ANR	1280474	Symbol	& auth		1280276						
ANR	1280475	Symbol	domain_size		1280276						
ANR	1280476	Symbol	subAuth2		1280276						
ANR	1280477	Symbol	subAuth1		1280276						
ANR	1280478	Symbol	pSystemSID		1280276						
ANR	1280479	Symbol	systemDomain		1280276						
ANR	1280480	Symbol	result		1280276						
ANR	1280481	Symbol	& name_size		1280276						
ANR	1280482	Symbol	systemName		1280276						
ANR	1280483	Symbol	& sidUse		1280276						
ANR	1280484	Symbol	GetLastError		1280276						
ANR	1280485	Symbol	LookupAccountSid		1280276						
ANR	1280486	Symbol	SECURITY_NT_AUTHORITY		1280276						
ANR	1280487	Symbol	& pSystemSID		1280276						
ANR	1280488	Symbol	& domain_size		1280276						
ANR	1280489	Symbol	name_size		1280276						
ANR	1280490	Function	dynuser :: dynuser	124:0:3451:3742							
ANR	1280491	FunctionDef	dynuser :: dynuser ()		1280490	0					
ANR	1280492	CompoundStatement		124:19:3470:3742	1280490	0					
ANR	1280493	ExpressionStatement	psid = ( PSID ) & sidBuffer	125:1:3473:3496	1280490	0	True				
ANR	1280494	AssignmentExpression	psid = ( PSID ) & sidBuffer		1280490	0		=			
ANR	1280495	Identifier	psid		1280490	0					
ANR	1280496	CastExpression	( PSID ) & sidBuffer		1280490	1					
ANR	1280497	CastTarget	PSID		1280490	0					
ANR	1280498	UnaryOperationExpression	& sidBuffer		1280490	1					
ANR	1280499	UnaryOperator	&		1280490	0					
ANR	1280500	Identifier	sidBuffer		1280490	1					
ANR	1280501	ExpressionStatement	sidBufferSize = max_sid_length	126:1:3499:3529	1280490	1	True				
ANR	1280502	AssignmentExpression	sidBufferSize = max_sid_length		1280490	0		=			
ANR	1280503	Identifier	sidBufferSize		1280490	0					
ANR	1280504	Identifier	max_sid_length		1280490	1					
ANR	1280505	ExpressionStatement	domainBufferSize = max_domain_length	127:1:3532:3568	1280490	2	True				
ANR	1280506	AssignmentExpression	domainBufferSize = max_domain_length		1280490	0		=			
ANR	1280507	Identifier	domainBufferSize		1280490	0					
ANR	1280508	Identifier	max_domain_length		1280490	1					
ANR	1280509	ExpressionStatement	logon_token = NULL	128:1:3571:3589	1280490	3	True				
ANR	1280510	AssignmentExpression	logon_token = NULL		1280490	0		=			
ANR	1280511	Identifier	logon_token		1280490	0					
ANR	1280512	Identifier	NULL		1280490	1					
ANR	1280513	ExpressionStatement	accountname = NULL	129:1:3592:3610	1280490	4	True				
ANR	1280514	AssignmentExpression	accountname = NULL		1280490	0		=			
ANR	1280515	Identifier	accountname		1280490	0					
ANR	1280516	Identifier	NULL		1280490	1					
ANR	1280517	ExpressionStatement	password = NULL	130:1:3613:3628	1280490	5	True				
ANR	1280518	AssignmentExpression	password = NULL		1280490	0		=			
ANR	1280519	Identifier	password		1280490	0					
ANR	1280520	Identifier	NULL		1280490	1					
ANR	1280521	ExpressionStatement	accountname_t = NULL	131:1:3631:3651	1280490	6	True				
ANR	1280522	AssignmentExpression	accountname_t = NULL		1280490	0		=			
ANR	1280523	Identifier	accountname_t		1280490	0					
ANR	1280524	Identifier	NULL		1280490	1					
ANR	1280525	ExpressionStatement	password_t = NULL	132:1:3654:3671	1280490	7	True				
ANR	1280526	AssignmentExpression	password_t = NULL		1280490	0		=			
ANR	1280527	Identifier	password_t		1280490	0					
ANR	1280528	Identifier	NULL		1280490	1					
ANR	1280529	ExpressionStatement	reuse_account = true	133:1:3674:3694	1280490	8	True				
ANR	1280530	AssignmentExpression	reuse_account = true		1280490	0		=			
ANR	1280531	Identifier	reuse_account		1280490	0					
ANR	1280532	Identifier	true		1280490	1					
ANR	1280533	Identifier	dynuser :: dynuser		1280490	1					
ANR	1280534	ParameterList			1280490	2					
ANR	1280535	CFGEntryNode	ENTRY		1280490		True				
ANR	1280536	CFGExitNode	EXIT		1280490		True				
ANR	1280537	Symbol	domainBufferSize		1280490						
ANR	1280538	Symbol	logon_token		1280490						
ANR	1280539	Symbol	NULL		1280490						
ANR	1280540	Symbol	max_sid_length		1280490						
ANR	1280541	Symbol	psid		1280490						
ANR	1280542	Symbol	sidBufferSize		1280490						
ANR	1280543	Symbol	password		1280490						
ANR	1280544	Symbol	accountname		1280490						
ANR	1280545	Symbol	password_t		1280490						
ANR	1280546	Symbol	accountname_t		1280490						
ANR	1280547	Symbol	reuse_account		1280490						
ANR	1280548	Symbol	true		1280490						
ANR	1280549	Symbol	max_domain_length		1280490						
ANR	1280550	Symbol	& sidBuffer		1280490						
ANR	1280551	Function	dynuser :: init_user	143:0:3903:6191							
ANR	1280552	FunctionDef	dynuser :: init_user ()		1280551	0					
ANR	1280553	CompoundStatement		143:26:3929:6191	1280551	0					
ANR	1280554	IfStatement	if ( ! accountname )		1280551	0					
ANR	1280555	Condition	! accountname	147:7:4021:4032	1280551	0	True				
ANR	1280556	UnaryOperationExpression	! accountname		1280551	0					
ANR	1280557	UnaryOperator	!		1280551	0					
ANR	1280558	Identifier	accountname		1280551	1					
ANR	1280559	CompoundStatement		16:2:377:394	1280551	1					
ANR	1280560	ExpressionStatement	accountname = new char [ 100 ]	148:3:4041:4068	1280551	0	True				
ANR	1280561	AssignmentExpression	accountname = new char [ 100 ]		1280551	0		=			
ANR	1280562	Identifier	accountname		1280551	0					
ANR	1280563	PrimaryExpression	100		1280551	1					
ANR	1280564	IdentifierDeclStatement	char * logappend = NULL ;	156:2:4261:4283	1280551	1	True				
ANR	1280565	IdentifierDecl	* logappend = NULL		1280551	0					
ANR	1280566	IdentifierDeclType	char *		1280551	0					
ANR	1280567	Identifier	logappend		1280551	1					
ANR	1280568	AssignmentExpression	* logappend = NULL		1280551	2		=			
ANR	1280569	Identifier	NULL		1280551	0					
ANR	1280570	Identifier	NULL		1280551	1					
ANR	1280571	IdentifierDeclStatement	char * tmp = NULL ;	157:2:4287:4303	1280551	2	True				
ANR	1280572	IdentifierDecl	* tmp = NULL		1280551	0					
ANR	1280573	IdentifierDeclType	char *		1280551	0					
ANR	1280574	Identifier	tmp		1280551	1					
ANR	1280575	AssignmentExpression	* tmp = NULL		1280551	2		=			
ANR	1280576	Identifier	NULL		1280551	0					
ANR	1280577	Identifier	NULL		1280551	1					
ANR	1280578	IdentifierDeclStatement	char slot_num [ 10 ] ;	158:2:4307:4324	1280551	3	True				
ANR	1280579	IdentifierDecl	slot_num [ 10 ]		1280551	0					
ANR	1280580	IdentifierDeclType	char [ 10 ]		1280551	0					
ANR	1280581	Identifier	slot_num		1280551	1					
ANR	1280582	PrimaryExpression	10		1280551	2					
ANR	1280583	ExpressionStatement	"reuse_account = param_boolean_crufty ( ""REUSE_CONDOR_RUN_ACCOUNT"" , true )"	160:2:4329:4399	1280551	4	True				
ANR	1280584	AssignmentExpression	"reuse_account = param_boolean_crufty ( ""REUSE_CONDOR_RUN_ACCOUNT"" , true )"		1280551	0		=			
ANR	1280585	Identifier	reuse_account		1280551	0					
ANR	1280586	CallExpression	"param_boolean_crufty ( ""REUSE_CONDOR_RUN_ACCOUNT"" , true )"		1280551	1					
ANR	1280587	Callee	param_boolean_crufty		1280551	0					
ANR	1280588	Identifier	param_boolean_crufty		1280551	0					
ANR	1280589	ArgumentList	"""REUSE_CONDOR_RUN_ACCOUNT"""		1280551	1					
ANR	1280590	Argument	"""REUSE_CONDOR_RUN_ACCOUNT"""		1280551	0					
ANR	1280591	PrimaryExpression	"""REUSE_CONDOR_RUN_ACCOUNT"""		1280551	0					
ANR	1280592	Argument	true		1280551	1					
ANR	1280593	Identifier	true		1280551	0					
ANR	1280594	IfStatement	if ( reuse_account )		1280551	5					
ANR	1280595	Condition	reuse_account	162:7:4411:4423	1280551	0	True				
ANR	1280596	Identifier	reuse_account		1280551	0					
ANR	1280597	CompoundStatement		23:3:524:579	1280551	1					
ANR	1280598	IdentifierDeclStatement	MyString prefix ;	164:3:4434:4449	1280551	0	True				
ANR	1280599	IdentifierDecl	prefix		1280551	0					
ANR	1280600	IdentifierDeclType	MyString		1280551	0					
ANR	1280601	Identifier	prefix		1280551	1					
ANR	1280602	IdentifierDeclStatement	"char * resource_prefix = param ( ""STARTD_RESOURCE_PREFIX"" ) ;"	165:3:4454:4509	1280551	1	True				
ANR	1280603	IdentifierDecl	"* resource_prefix = param ( ""STARTD_RESOURCE_PREFIX"" )"		1280551	0					
ANR	1280604	IdentifierDeclType	char *		1280551	0					
ANR	1280605	Identifier	resource_prefix		1280551	1					
ANR	1280606	AssignmentExpression	"* resource_prefix = param ( ""STARTD_RESOURCE_PREFIX"" )"		1280551	2		=			
ANR	1280607	Identifier	resource_prefix		1280551	0					
ANR	1280608	CallExpression	"param ( ""STARTD_RESOURCE_PREFIX"" )"		1280551	1					
ANR	1280609	Callee	param		1280551	0					
ANR	1280610	Identifier	param		1280551	0					
ANR	1280611	ArgumentList	"""STARTD_RESOURCE_PREFIX"""		1280551	1					
ANR	1280612	Argument	"""STARTD_RESOURCE_PREFIX"""		1280551	0					
ANR	1280613	PrimaryExpression	"""STARTD_RESOURCE_PREFIX"""		1280551	0					
ANR	1280614	IfStatement	if ( resource_prefix != NULL )		1280551	2					
ANR	1280615	Condition	resource_prefix != NULL	166:7:4518:4540	1280551	0	True				
ANR	1280616	EqualityExpression	resource_prefix != NULL		1280551	0		!=			
ANR	1280617	Identifier	resource_prefix		1280551	0					
ANR	1280618	Identifier	NULL		1280551	1					
ANR	1280619	CompoundStatement		24:32:613:613	1280551	1					
ANR	1280620	ExpressionStatement	"prefix . sprintf ( "".%s"" , resource_prefix )"	167:4:4549:4587	1280551	0	True				
ANR	1280621	CallExpression	"prefix . sprintf ( "".%s"" , resource_prefix )"		1280551	0					
ANR	1280622	Callee	prefix . sprintf		1280551	0					
ANR	1280623	MemberAccess	prefix . sprintf		1280551	0					
ANR	1280624	Identifier	prefix		1280551	0					
ANR	1280625	Identifier	sprintf		1280551	1					
ANR	1280626	ArgumentList	""".%s"""		1280551	1					
ANR	1280627	Argument	""".%s"""		1280551	0					
ANR	1280628	PrimaryExpression	""".%s"""		1280551	0					
ANR	1280629	Argument	resource_prefix		1280551	1					
ANR	1280630	Identifier	resource_prefix		1280551	0					
ANR	1280631	ExpressionStatement	free ( resource_prefix )	168:4:4593:4614	1280551	1	True				
ANR	1280632	CallExpression	free ( resource_prefix )		1280551	0					
ANR	1280633	Callee	free		1280551	0					
ANR	1280634	Identifier	free		1280551	0					
ANR	1280635	ArgumentList	resource_prefix		1280551	1					
ANR	1280636	Argument	resource_prefix		1280551	0					
ANR	1280637	Identifier	resource_prefix		1280551	0					
ANR	1280638	ElseStatement	else		1280551	0					
ANR	1280639	CompoundStatement		28:8:699:699	1280551	0					
ANR	1280640	ExpressionStatement	"prefix = "".slot"""	171:4:4635:4651	1280551	0	True				
ANR	1280641	AssignmentExpression	"prefix = "".slot"""		1280551	0		=			
ANR	1280642	Identifier	prefix		1280551	0					
ANR	1280643	PrimaryExpression	""".slot"""		1280551	1					
ANR	1280644	ExpressionStatement	"logappend = param ( ""STARTER_LOG"" )"	174:3:4666:4698	1280551	3	True				
ANR	1280645	AssignmentExpression	"logappend = param ( ""STARTER_LOG"" )"		1280551	0		=			
ANR	1280646	Identifier	logappend		1280551	0					
ANR	1280647	CallExpression	"param ( ""STARTER_LOG"" )"		1280551	1					
ANR	1280648	Callee	param		1280551	0					
ANR	1280649	Identifier	param		1280551	0					
ANR	1280650	ArgumentList	"""STARTER_LOG"""		1280551	1					
ANR	1280651	Argument	"""STARTER_LOG"""		1280551	0					
ANR	1280652	PrimaryExpression	"""STARTER_LOG"""		1280551	0					
ANR	1280653	ExpressionStatement	"tmp = strstr ( logappend , prefix . Value ( ) )"	175:3:4703:4742	1280551	4	True				
ANR	1280654	AssignmentExpression	"tmp = strstr ( logappend , prefix . Value ( ) )"		1280551	0		=			
ANR	1280655	Identifier	tmp		1280551	0					
ANR	1280656	CallExpression	"strstr ( logappend , prefix . Value ( ) )"		1280551	1					
ANR	1280657	Callee	strstr		1280551	0					
ANR	1280658	Identifier	strstr		1280551	0					
ANR	1280659	ArgumentList	logappend		1280551	1					
ANR	1280660	Argument	logappend		1280551	0					
ANR	1280661	Identifier	logappend		1280551	0					
ANR	1280662	Argument	prefix . Value ( )		1280551	1					
ANR	1280663	CallExpression	prefix . Value ( )		1280551	0					
ANR	1280664	Callee	prefix . Value		1280551	0					
ANR	1280665	MemberAccess	prefix . Value		1280551	0					
ANR	1280666	Identifier	prefix		1280551	0					
ANR	1280667	Identifier	Value		1280551	1					
ANR	1280668	ArgumentList			1280551	1					
ANR	1280669	IfStatement	if ( tmp )		1280551	5					
ANR	1280670	Condition	tmp	177:8:4756:4758	1280551	0	True				
ANR	1280671	Identifier	tmp		1280551	0					
ANR	1280672	CompoundStatement		35:14:832:832	1280551	1					
ANR	1280673	ExpressionStatement	"strncpy ( slot_num , tmp + 1 , 10 )"	181:4:4820:4848	1280551	0	True				
ANR	1280674	CallExpression	"strncpy ( slot_num , tmp + 1 , 10 )"		1280551	0					
ANR	1280675	Callee	strncpy		1280551	0					
ANR	1280676	Identifier	strncpy		1280551	0					
ANR	1280677	ArgumentList	slot_num		1280551	1					
ANR	1280678	Argument	slot_num		1280551	0					
ANR	1280679	Identifier	slot_num		1280551	0					
ANR	1280680	Argument	tmp + 1		1280551	1					
ANR	1280681	AdditiveExpression	tmp + 1		1280551	0		+			
ANR	1280682	Identifier	tmp		1280551	0					
ANR	1280683	PrimaryExpression	1		1280551	1					
ANR	1280684	Argument	10		1280551	2					
ANR	1280685	PrimaryExpression	10		1280551	0					
ANR	1280686	ExpressionStatement	slot_num [ 9 ] = '\\0'	182:4:4854:4872	1280551	1	True				
ANR	1280687	AssignmentExpression	slot_num [ 9 ] = '\\0'		1280551	0		=			
ANR	1280688	ArrayIndexing	slot_num [ 9 ]		1280551	0					
ANR	1280689	Identifier	slot_num		1280551	0					
ANR	1280690	PrimaryExpression	9		1280551	1					
ANR	1280691	PrimaryExpression	'\\0'		1280551	1					
ANR	1280692	ElseStatement	else		1280551	0					
ANR	1280693	CompoundStatement		42:10:984:984	1280551	0					
ANR	1280694	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Dynuser: Couldn't param slot# - using 1 by default\\n"" )"	188:4:4983:5059	1280551	0	True				
ANR	1280695	CallExpression	"dprintf ( D_FULLDEBUG , ""Dynuser: Couldn't param slot# - using 1 by default\\n"" )"		1280551	0					
ANR	1280696	Callee	dprintf		1280551	0					
ANR	1280697	Identifier	dprintf		1280551	0					
ANR	1280698	ArgumentList	D_FULLDEBUG		1280551	1					
ANR	1280699	Argument	D_FULLDEBUG		1280551	0					
ANR	1280700	Identifier	D_FULLDEBUG		1280551	0					
ANR	1280701	Argument	"""Dynuser: Couldn't param slot# - using 1 by default\\n"""		1280551	1					
ANR	1280702	PrimaryExpression	"""Dynuser: Couldn't param slot# - using 1 by default\\n"""		1280551	0					
ANR	1280703	ExpressionStatement	"snprintf ( slot_num , 10 , ""slot1"" )"	189:4:5065:5094	1280551	1	True				
ANR	1280704	CallExpression	"snprintf ( slot_num , 10 , ""slot1"" )"		1280551	0					
ANR	1280705	Callee	snprintf		1280551	0					
ANR	1280706	Identifier	snprintf		1280551	0					
ANR	1280707	ArgumentList	slot_num		1280551	1					
ANR	1280708	Argument	slot_num		1280551	0					
ANR	1280709	Identifier	slot_num		1280551	0					
ANR	1280710	Argument	10		1280551	1					
ANR	1280711	PrimaryExpression	10		1280551	0					
ANR	1280712	Argument	"""slot1"""		1280551	2					
ANR	1280713	PrimaryExpression	"""slot1"""		1280551	0					
ANR	1280714	Statement	int	191:3:5105:5107	1280551	6	True				
ANR	1280715	Statement	ret	191:7:5109:5111	1280551	7	True				
ANR	1280716	Statement	=	191:10:5112:5112	1280551	8	True				
ANR	1280717	Statement	_snprintf	191:11:5113:5121	1280551	9	True				
ANR	1280718	Statement	(	191:20:5122:5122	1280551	10	True				
ANR	1280719	Statement	accountname	191:21:5123:5133	1280551	11	True				
ANR	1280720	Statement	","	191:32:5134:5134	1280551	12	True				
ANR	1280721	Statement	100	191:34:5136:5138	1280551	13	True				
ANR	1280722	Statement	","	191:37:5139:5139	1280551	14	True				
ANR	1280723	Statement	ACCOUNT_PREFIX_REUSE	192:4:5146:5165	1280551	15	True				
ANR	1280724	Statement	"""%s"""	192:25:5167:5170	1280551	16	True				
ANR	1280725	Statement	","	192:29:5171:5171	1280551	17	True				
ANR	1280726	Statement	slot_num	192:31:5173:5180	1280551	18	True				
ANR	1280727	Statement	)	192:39:5181:5181	1280551	19	True				
ANR	1280728	ExpressionStatement		192:40:5182:5182	1280551	20	True				
ANR	1280729	IfStatement	if ( ret < 0 )		1280551	21					
ANR	1280730	Condition	ret < 0	193:9:5193:5199	1280551	0	True				
ANR	1280731	RelationalExpression	ret < 0		1280551	0		<			
ANR	1280732	Identifier	ret		1280551	0					
ANR	1280733	PrimaryExpression	0		1280551	1					
ANR	1280734	CompoundStatement		51:19:1273:1273	1280551	1					
ANR	1280735	ExpressionStatement	"EXCEPT ( ""account name to create too long"" )"	194:5:5210:5251	1280551	0	True				
ANR	1280736	CallExpression	"EXCEPT ( ""account name to create too long"" )"		1280551	0					
ANR	1280737	Callee	EXCEPT		1280551	0					
ANR	1280738	Identifier	EXCEPT		1280551	0					
ANR	1280739	ArgumentList	"""account name to create too long"""		1280551	1					
ANR	1280740	Argument	"""account name to create too long"""		1280551	0					
ANR	1280741	PrimaryExpression	"""account name to create too long"""		1280551	0					
ANR	1280742	ElseStatement	else		1280551	0					
ANR	1280743	CompoundStatement		62:3:1619:1658	1280551	0					
ANR	1280744	IdentifierDeclStatement	int current_pid = GetCurrentProcessId ( ) ;	204:3:5549:5588	1280551	0	True				
ANR	1280745	IdentifierDecl	current_pid = GetCurrentProcessId ( )		1280551	0					
ANR	1280746	IdentifierDeclType	int		1280551	0					
ANR	1280747	Identifier	current_pid		1280551	1					
ANR	1280748	AssignmentExpression	current_pid = GetCurrentProcessId ( )		1280551	2		=			
ANR	1280749	Identifier	current_pid		1280551	0					
ANR	1280750	CallExpression	GetCurrentProcessId ( )		1280551	1					
ANR	1280751	Callee	GetCurrentProcessId		1280551	0					
ANR	1280752	Identifier	GetCurrentProcessId		1280551	0					
ANR	1280753	ArgumentList			1280551	1					
ANR	1280754	Statement	int	205:3:5593:5595	1280551	1	True				
ANR	1280755	Statement	ret	205:7:5597:5599	1280551	2	True				
ANR	1280756	Statement	=	205:10:5600:5600	1280551	3	True				
ANR	1280757	Statement	_snprintf	205:11:5601:5609	1280551	4	True				
ANR	1280758	Statement	(	205:20:5610:5610	1280551	5	True				
ANR	1280759	Statement	accountname	205:21:5611:5621	1280551	6	True				
ANR	1280760	Statement	","	205:32:5622:5622	1280551	7	True				
ANR	1280761	Statement	100	205:34:5624:5626	1280551	8	True				
ANR	1280762	Statement	","	205:37:5627:5627	1280551	9	True				
ANR	1280763	Statement	ACCOUNT_PREFIX	206:4:5634:5647	1280551	10	True				
ANR	1280764	Statement	"""%d"""	206:19:5649:5652	1280551	11	True				
ANR	1280765	Statement	","	206:23:5653:5653	1280551	12	True				
ANR	1280766	Statement	current_pid	206:25:5655:5665	1280551	13	True				
ANR	1280767	Statement	)	206:36:5666:5666	1280551	14	True				
ANR	1280768	ExpressionStatement		206:37:5667:5667	1280551	15	True				
ANR	1280769	IfStatement	if ( ret < 0 )		1280551	16					
ANR	1280770	Condition	ret < 0	207:9:5678:5684	1280551	0	True				
ANR	1280771	RelationalExpression	ret < 0		1280551	0		<			
ANR	1280772	Identifier	ret		1280551	0					
ANR	1280773	PrimaryExpression	0		1280551	1					
ANR	1280774	CompoundStatement		65:19:1758:1758	1280551	1					
ANR	1280775	ExpressionStatement	"EXCEPT ( ""account name to create too long"" )"	208:5:5695:5736	1280551	0	True				
ANR	1280776	CallExpression	"EXCEPT ( ""account name to create too long"" )"		1280551	0					
ANR	1280777	Callee	EXCEPT		1280551	0					
ANR	1280778	Identifier	EXCEPT		1280551	0					
ANR	1280779	ArgumentList	"""account name to create too long"""		1280551	1					
ANR	1280780	Argument	"""account name to create too long"""		1280551	0					
ANR	1280781	PrimaryExpression	"""account name to create too long"""		1280551	0					
ANR	1280782	IfStatement	if ( logappend )		1280551	6					
ANR	1280783	Condition	logappend	212:7:5756:5764	1280551	0	True				
ANR	1280784	Identifier	logappend		1280551	0					
ANR	1280785	CompoundStatement		70:19:1838:1838	1280551	1					
ANR	1280786	ExpressionStatement	free ( logappend )	212:21:5770:5785	1280551	0	True				
ANR	1280787	CallExpression	free ( logappend )		1280551	0					
ANR	1280788	Callee	free		1280551	0					
ANR	1280789	Identifier	free		1280551	0					
ANR	1280790	ArgumentList	logappend		1280551	1					
ANR	1280791	Argument	logappend		1280551	0					
ANR	1280792	Identifier	logappend		1280551	0					
ANR	1280793	ExpressionStatement	logappend = NULL	212:38:5787:5803	1280551	1	True				
ANR	1280794	AssignmentExpression	logappend = NULL		1280551	0		=			
ANR	1280795	Identifier	logappend		1280551	0					
ANR	1280796	Identifier	NULL		1280551	1					
ANR	1280797	ExpressionStatement	tmp = NULL	212:56:5805:5815	1280551	2	True				
ANR	1280798	AssignmentExpression	tmp = NULL		1280551	0		=			
ANR	1280799	Identifier	tmp		1280551	0					
ANR	1280800	Identifier	NULL		1280551	1					
ANR	1280801	ElseStatement	else		1280551	0					
ANR	1280802	IfStatement	if ( logon_token && accountname )		1280551	0					
ANR	1280803	Condition	logon_token && accountname	215:13:5836:5861	1280551	0	True				
ANR	1280804	AndExpression	logon_token && accountname		1280551	0		&&			
ANR	1280805	Identifier	logon_token		1280551	0					
ANR	1280806	Identifier	accountname		1280551	1					
ANR	1280807	CompoundStatement		73:42:1935:1935	1280551	1					
ANR	1280808	ReturnStatement	return true ;	217:2:5920:5931	1280551	0	True				
ANR	1280809	Identifier	true		1280551	0					
ANR	1280810	IfStatement	if ( ! password )		1280551	1					
ANR	1280811	Condition	! password	224:5:6062:6071	1280551	0	True				
ANR	1280812	UnaryOperationExpression	! password		1280551	0					
ANR	1280813	UnaryOperator	!		1280551	0					
ANR	1280814	Identifier	password		1280551	1					
ANR	1280815	CompoundStatement		82:18:2145:2145	1280551	1					
ANR	1280816	ExpressionStatement	password = new char [ 100 ]	225:3:6080:6104	1280551	0	True				
ANR	1280817	AssignmentExpression	password = new char [ 100 ]		1280551	0		=			
ANR	1280818	Identifier	password		1280551	0					
ANR	1280819	PrimaryExpression	100		1280551	1					
ANR	1280820	ExpressionStatement	createpass ( )	227:1:6110:6122	1280551	2	True				
ANR	1280821	CallExpression	createpass ( )		1280551	0					
ANR	1280822	Callee	createpass		1280551	0					
ANR	1280823	Identifier	createpass		1280551	0					
ANR	1280824	ArgumentList			1280551	1					
ANR	1280825	ReturnStatement	return logon_user ( ) ;	231:1:6170:6189	1280551	3	True				
ANR	1280826	CallExpression	logon_user ( )		1280551	0					
ANR	1280827	Callee	logon_user		1280551	0					
ANR	1280828	Identifier	logon_user		1280551	0					
ANR	1280829	ArgumentList			1280551	1					
ANR	1280830	ReturnType	bool		1280551	1					
ANR	1280831	Identifier	dynuser :: init_user		1280551	2					
ANR	1280832	ParameterList			1280551	3					
ANR	1280833	CFGEntryNode	ENTRY		1280551		True				
ANR	1280834	CFGExitNode	EXIT		1280551		True				
ANR	1280835	Symbol	ret		1280551						
ANR	1280836	Symbol	logon_token		1280551						
ANR	1280837	Symbol	NULL		1280551						
ANR	1280838	Symbol	prefix . Value		1280551						
ANR	1280839	Symbol	slot_num		1280551						
ANR	1280840	Symbol	prefix		1280551						
ANR	1280841	Symbol	resource_prefix		1280551						
ANR	1280842	Symbol	* slot_num		1280551						
ANR	1280843	Symbol	D_FULLDEBUG		1280551						
ANR	1280844	Symbol	GetCurrentProcessId		1280551						
ANR	1280845	Symbol	password		1280551						
ANR	1280846	Symbol	accountname		1280551						
ANR	1280847	Symbol	param		1280551						
ANR	1280848	Symbol	strstr		1280551						
ANR	1280849	Symbol	tmp		1280551						
ANR	1280850	Symbol	reuse_account		1280551						
ANR	1280851	Symbol	true		1280551						
ANR	1280852	Symbol	logappend		1280551						
ANR	1280853	Symbol	param_boolean_crufty		1280551						
ANR	1280854	Symbol	logon_user		1280551						
ANR	1280855	Symbol	current_pid		1280551						
ANR	1280856	Function	dynuser :: logon_user	240:0:6397:8683							
ANR	1280857	FunctionDef	dynuser :: logon_user ()		1280856	0					
ANR	1280858	CompoundStatement		240:26:6423:8683	1280856	0					
ANR	1280859	IfStatement	if ( ! accountname_t )		1280856	0					
ANR	1280860	Condition	! accountname_t	241:5:6431:6444	1280856	0	True				
ANR	1280861	UnaryOperationExpression	! accountname_t		1280856	0					
ANR	1280862	UnaryOperator	!		1280856	0					
ANR	1280863	Identifier	accountname_t		1280856	1					
ANR	1280864	ExpressionStatement	accountname_t = new wchar_t [ 100 ]	242:2:6449:6481	1280856	1	True				
ANR	1280865	AssignmentExpression	accountname_t = new wchar_t [ 100 ]		1280856	0		=			
ANR	1280866	Identifier	accountname_t		1280856	0					
ANR	1280867	PrimaryExpression	100		1280856	1					
ANR	1280868	IfStatement	if ( ! password_t )		1280856	1					
ANR	1280869	Condition	! password_t	243:5:6488:6498	1280856	0	True				
ANR	1280870	UnaryOperationExpression	! password_t		1280856	0					
ANR	1280871	UnaryOperator	!		1280856	0					
ANR	1280872	Identifier	password_t		1280856	1					
ANR	1280873	ExpressionStatement	password_t = new wchar_t [ 100 ]	244:2:6503:6532	1280856	1	True				
ANR	1280874	AssignmentExpression	password_t = new wchar_t [ 100 ]		1280856	0		=			
ANR	1280875	Identifier	password_t		1280856	0					
ANR	1280876	PrimaryExpression	100		1280856	1					
ANR	1280877	ExpressionStatement	this -> update_t ( )	246:1:6536:6552	1280856	2	True				
ANR	1280878	CallExpression	this -> update_t ( )		1280856	0					
ANR	1280879	Callee	this -> update_t		1280856	0					
ANR	1280880	PtrMemberAccess	this -> update_t		1280856	0					
ANR	1280881	Identifier	this		1280856	0					
ANR	1280882	Identifier	update_t		1280856	1					
ANR	1280883	ArgumentList			1280856	1					
ANR	1280884	IfStatement	if ( ! this -> update_psid ( ) )		1280856	3					
ANR	1280885	Condition	! this -> update_psid ( )	250:5:6653:6673	1280856	0	True				
ANR	1280886	UnaryOperationExpression	! this -> update_psid ( )		1280856	0					
ANR	1280887	UnaryOperator	!		1280856	0					
ANR	1280888	CallExpression	this -> update_psid ( )		1280856	1					
ANR	1280889	Callee	this -> update_psid		1280856	0					
ANR	1280890	PtrMemberAccess	this -> update_psid		1280856	0					
ANR	1280891	Identifier	this		1280856	0					
ANR	1280892	Identifier	update_psid		1280856	1					
ANR	1280893	ArgumentList			1280856	1					
ANR	1280894	CompoundStatement		11:29:253:253	1280856	1					
ANR	1280895	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""update_psid() failed, so creating a new account\\n"" )"	253:2:6771:6844	1280856	0	True				
ANR	1280896	CallExpression	"dprintf ( D_FULLDEBUG , ""update_psid() failed, so creating a new account\\n"" )"		1280856	0					
ANR	1280897	Callee	dprintf		1280856	0					
ANR	1280898	Identifier	dprintf		1280856	0					
ANR	1280899	ArgumentList	D_FULLDEBUG		1280856	1					
ANR	1280900	Argument	D_FULLDEBUG		1280856	0					
ANR	1280901	Identifier	D_FULLDEBUG		1280856	0					
ANR	1280902	Argument	"""update_psid() failed, so creating a new account\\n"""		1280856	1					
ANR	1280903	PrimaryExpression	"""update_psid() failed, so creating a new account\\n"""		1280856	0					
ANR	1280904	ExpressionStatement	this -> createaccount ( )	256:2:6907:6928	1280856	1	True				
ANR	1280905	CallExpression	this -> createaccount ( )		1280856	0					
ANR	1280906	Callee	this -> createaccount		1280856	0					
ANR	1280907	PtrMemberAccess	this -> createaccount		1280856	0					
ANR	1280908	Identifier	this		1280856	0					
ANR	1280909	Identifier	createaccount		1280856	1					
ANR	1280910	ArgumentList			1280856	1					
ANR	1280911	IfStatement	if ( ! this -> update_psid ( ) )		1280856	2					
ANR	1280912	Condition	! this -> update_psid ( )	259:6:7050:7070	1280856	0	True				
ANR	1280913	UnaryOperationExpression	! this -> update_psid ( )		1280856	0					
ANR	1280914	UnaryOperator	!		1280856	0					
ANR	1280915	CallExpression	this -> update_psid ( )		1280856	1					
ANR	1280916	Callee	this -> update_psid		1280856	0					
ANR	1280917	PtrMemberAccess	this -> update_psid		1280856	0					
ANR	1280918	Identifier	this		1280856	0					
ANR	1280919	Identifier	update_psid		1280856	1					
ANR	1280920	ArgumentList			1280856	1					
ANR	1280921	CompoundStatement		20:30:650:650	1280856	1					
ANR	1280922	ExpressionStatement	"dprintf ( D_ALWAYS , ""update_psid() failed after account creation!\\n"" )"	260:3:7098:7165	1280856	0	True				
ANR	1280923	CallExpression	"dprintf ( D_ALWAYS , ""update_psid() failed after account creation!\\n"" )"		1280856	0					
ANR	1280924	Callee	dprintf		1280856	0					
ANR	1280925	Identifier	dprintf		1280856	0					
ANR	1280926	ArgumentList	D_ALWAYS		1280856	1					
ANR	1280927	Argument	D_ALWAYS		1280856	0					
ANR	1280928	Identifier	D_ALWAYS		1280856	0					
ANR	1280929	Argument	"""update_psid() failed after account creation!\\n"""		1280856	1					
ANR	1280930	PrimaryExpression	"""update_psid() failed after account creation!\\n"""		1280856	0					
ANR	1280931	ReturnStatement	return false ;	261:3:7170:7182	1280856	1	True				
ANR	1280932	Identifier	false		1280856	0					
ANR	1280933	IfStatement	if ( ! this -> add_users_group ( ) )		1280856	3					
ANR	1280934	Condition	! this -> add_users_group ( )	264:6:7195:7218	1280856	0	True				
ANR	1280935	UnaryOperationExpression	! this -> add_users_group ( )		1280856	0					
ANR	1280936	UnaryOperator	!		1280856	0					
ANR	1280937	CallExpression	this -> add_users_group ( )		1280856	1					
ANR	1280938	Callee	this -> add_users_group		1280856	0					
ANR	1280939	PtrMemberAccess	this -> add_users_group		1280856	0					
ANR	1280940	Identifier	this		1280856	0					
ANR	1280941	Identifier	add_users_group		1280856	1					
ANR	1280942	ArgumentList			1280856	1					
ANR	1280943	CompoundStatement		25:32:797:797	1280856	1					
ANR	1280944	ExpressionStatement	"dprintf ( D_ALWAYS , ""dynuser::logon_user() - Failed to add account to users group!\\n"" )"	265:3:7262:7346	1280856	0	True				
ANR	1280945	CallExpression	"dprintf ( D_ALWAYS , ""dynuser::logon_user() - Failed to add account to users group!\\n"" )"		1280856	0					
ANR	1280946	Callee	dprintf		1280856	0					
ANR	1280947	Identifier	dprintf		1280856	0					
ANR	1280948	ArgumentList	D_ALWAYS		1280856	1					
ANR	1280949	Argument	D_ALWAYS		1280856	0					
ANR	1280950	Identifier	D_ALWAYS		1280856	0					
ANR	1280951	Argument	"""dynuser::logon_user() - Failed to add account to users group!\\n"""		1280856	1					
ANR	1280952	PrimaryExpression	"""dynuser::logon_user() - Failed to add account to users group!\\n"""		1280856	0					
ANR	1280953	IfStatement	if ( ! this -> hide_user ( ) )		1280856	4					
ANR	1280954	Condition	! this -> hide_user ( )	268:6:7359:7376	1280856	0	True				
ANR	1280955	UnaryOperationExpression	! this -> hide_user ( )		1280856	0					
ANR	1280956	UnaryOperator	!		1280856	0					
ANR	1280957	CallExpression	this -> hide_user ( )		1280856	1					
ANR	1280958	Callee	this -> hide_user		1280856	0					
ANR	1280959	PtrMemberAccess	this -> hide_user		1280856	0					
ANR	1280960	Identifier	this		1280856	0					
ANR	1280961	Identifier	hide_user		1280856	1					
ANR	1280962	ArgumentList			1280856	1					
ANR	1280963	CompoundStatement		29:26:955:955	1280856	1					
ANR	1280964	Statement	dprintf	269:3:7402:7408	1280856	0	True				
ANR	1280965	Statement	(	269:10:7409:7409	1280856	1	True				
ANR	1280966	Statement	D_ALWAYS	269:11:7410:7417	1280856	2	True				
ANR	1280967	Statement	","	269:19:7418:7418	1280856	3	True				
ANR	1280968	Statement	"""dynuser::logon_user() - Failed to """	269:21:7420:7455	1280856	4	True				
ANR	1280969	Statement	"""hide the user from the welcome screen!\\n"""	270:4:7461:7502	1280856	5	True				
ANR	1280970	Statement	)	270:46:7503:7503	1280856	6	True				
ANR	1280971	ExpressionStatement		270:47:7504:7504	1280856	7	True				
ANR	1280972	ElseStatement	else		1280856	0					
ANR	1280973	CompoundStatement		43:2:1375:1414	1280856	0					
ANR	1280974	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""dynuser: Re-enabling account (%s)\\n"" , accountname )"	278:2:7641:7713	1280856	0	True				
ANR	1280975	CallExpression	"dprintf ( D_FULLDEBUG , ""dynuser: Re-enabling account (%s)\\n"" , accountname )"		1280856	0					
ANR	1280976	Callee	dprintf		1280856	0					
ANR	1280977	Identifier	dprintf		1280856	0					
ANR	1280978	ArgumentList	D_FULLDEBUG		1280856	1					
ANR	1280979	Argument	D_FULLDEBUG		1280856	0					
ANR	1280980	Identifier	D_FULLDEBUG		1280856	0					
ANR	1280981	Argument	"""dynuser: Re-enabling account (%s)\\n"""		1280856	1					
ANR	1280982	PrimaryExpression	"""dynuser: Re-enabling account (%s)\\n"""		1280856	0					
ANR	1280983	Argument	accountname		1280856	2					
ANR	1280984	Identifier	accountname		1280856	0					
ANR	1280985	ExpressionStatement	enable_account ( )	279:2:7717:7733	1280856	1	True				
ANR	1280986	CallExpression	enable_account ( )		1280856	0					
ANR	1280987	Callee	enable_account		1280856	0					
ANR	1280988	Identifier	enable_account		1280856	0					
ANR	1280989	ArgumentList			1280856	1					
ANR	1280990	IdentifierDeclStatement	USER_INFO_1003 ui = { password_t } ;	282:2:7799:7838	1280856	2	True				
ANR	1280991	IdentifierDecl	ui = { password_t }		1280856	0					
ANR	1280992	IdentifierDeclType	USER_INFO_1003		1280856	0					
ANR	1280993	Identifier	ui		1280856	1					
ANR	1280994	AssignmentExpression	ui = { password_t }		1280856	2		=			
ANR	1280995	Identifier	ui		1280856	0					
ANR	1280996	InitializerList	password_t		1280856	1					
ANR	1280997	Identifier	password_t		1280856	0					
ANR	1280998	IfStatement	"if ( NERR_Success != NetUserSetInfo ( NULL , accountname_t , 1003 , ( LPBYTE ) & ui , NULL ) )"		1280856	3					
ANR	1280999	Condition	"NERR_Success != NetUserSetInfo ( NULL , accountname_t , 1003 , ( LPBYTE ) & ui , NULL )"	286:7:7849:8074	1280856	0	True				
ANR	1281000	EqualityExpression	"NERR_Success != NetUserSetInfo ( NULL , accountname_t , 1003 , ( LPBYTE ) & ui , NULL )"		1280856	0		!=			
ANR	1281001	Identifier	NERR_Success		1280856	0					
ANR	1281002	CallExpression	"NetUserSetInfo ( NULL , accountname_t , 1003 , ( LPBYTE ) & ui , NULL )"		1280856	1					
ANR	1281003	Callee	NetUserSetInfo		1280856	0					
ANR	1281004	Identifier	NetUserSetInfo		1280856	0					
ANR	1281005	ArgumentList	NULL		1280856	1					
ANR	1281006	Argument	NULL		1280856	0					
ANR	1281007	Identifier	NULL		1280856	0					
ANR	1281008	Argument	accountname_t		1280856	1					
ANR	1281009	Identifier	accountname_t		1280856	0					
ANR	1281010	Argument	1003		1280856	2					
ANR	1281011	PrimaryExpression	1003		1280856	0					
ANR	1281012	Argument	( LPBYTE ) & ui		1280856	3					
ANR	1281013	CastExpression	( LPBYTE ) & ui		1280856	0					
ANR	1281014	CastTarget	LPBYTE		1280856	0					
ANR	1281015	UnaryOperationExpression	& ui		1280856	1					
ANR	1281016	UnaryOperator	&		1280856	0					
ANR	1281017	Identifier	ui		1280856	1					
ANR	1281018	Argument	NULL		1280856	4					
ANR	1281019	Identifier	NULL		1280856	0					
ANR	1281020	CompoundStatement		53:6:1653:1653	1280856	1					
ANR	1281021	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error setting password on account %s\\n"" , accountname )"	293:6:8085:8165	1280856	0	True				
ANR	1281022	CallExpression	"dprintf ( D_ALWAYS , ""Error setting password on account %s\\n"" , accountname )"		1280856	0					
ANR	1281023	Callee	dprintf		1280856	0					
ANR	1281024	Identifier	dprintf		1280856	0					
ANR	1281025	ArgumentList	D_ALWAYS		1280856	1					
ANR	1281026	Argument	D_ALWAYS		1280856	0					
ANR	1281027	Identifier	D_ALWAYS		1280856	0					
ANR	1281028	Argument	"""Error setting password on account %s\\n"""		1280856	1					
ANR	1281029	PrimaryExpression	"""Error setting password on account %s\\n"""		1280856	0					
ANR	1281030	Argument	accountname		1280856	2					
ANR	1281031	Identifier	accountname		1280856	0					
ANR	1281032	IfStatement	"if ( ! LogonUser ( accountname , ""."" , password , LOGON32_LOGON_INTERACTIVE , LOGON32_PROVIDER_DEFAULT , & logon_token ) )"		1280856	4					
ANR	1281033	Condition	"! LogonUser ( accountname , ""."" , password , LOGON32_LOGON_INTERACTIVE , LOGON32_PROVIDER_DEFAULT , & logon_token )"	300:5:8233:8426	1280856	0	True				
ANR	1281034	UnaryOperationExpression	"! LogonUser ( accountname , ""."" , password , LOGON32_LOGON_INTERACTIVE , LOGON32_PROVIDER_DEFAULT , & logon_token )"		1280856	0					
ANR	1281035	UnaryOperator	!		1280856	0					
ANR	1281036	CallExpression	"LogonUser ( accountname , ""."" , password , LOGON32_LOGON_INTERACTIVE , LOGON32_PROVIDER_DEFAULT , & logon_token )"		1280856	1					
ANR	1281037	Callee	LogonUser		1280856	0					
ANR	1281038	Identifier	LogonUser		1280856	0					
ANR	1281039	ArgumentList	accountname		1280856	1					
ANR	1281040	Argument	accountname		1280856	0					
ANR	1281041	Identifier	accountname		1280856	0					
ANR	1281042	Argument	"""."""		1280856	1					
ANR	1281043	PrimaryExpression	"""."""		1280856	0					
ANR	1281044	Argument	password		1280856	2					
ANR	1281045	Identifier	password		1280856	0					
ANR	1281046	Argument	LOGON32_LOGON_INTERACTIVE		1280856	3					
ANR	1281047	Identifier	LOGON32_LOGON_INTERACTIVE		1280856	0					
ANR	1281048	Argument	LOGON32_PROVIDER_DEFAULT		1280856	4					
ANR	1281049	Identifier	LOGON32_PROVIDER_DEFAULT		1280856	0					
ANR	1281050	Argument	& logon_token		1280856	5					
ANR	1281051	UnaryOperationExpression	& logon_token		1280856	0					
ANR	1281052	UnaryOperator	&		1280856	0					
ANR	1281053	Identifier	logon_token		1280856	1					
ANR	1281054	CompoundStatement		67:4:2044:2044	1280856	1					
ANR	1281055	ExpressionStatement	"dprintf ( D_ALWAYS , ""LogonUser(%s, ... ) failed with status %d\\n"" , accountname , GetLastError ( ) )"	307:3:8473:8568	1280856	0	True				
ANR	1281056	CallExpression	"dprintf ( D_ALWAYS , ""LogonUser(%s, ... ) failed with status %d\\n"" , accountname , GetLastError ( ) )"		1280856	0					
ANR	1281057	Callee	dprintf		1280856	0					
ANR	1281058	Identifier	dprintf		1280856	0					
ANR	1281059	ArgumentList	D_ALWAYS		1280856	1					
ANR	1281060	Argument	D_ALWAYS		1280856	0					
ANR	1281061	Identifier	D_ALWAYS		1280856	0					
ANR	1281062	Argument	"""LogonUser(%s, ... ) failed with status %d\\n"""		1280856	1					
ANR	1281063	PrimaryExpression	"""LogonUser(%s, ... ) failed with status %d\\n"""		1280856	0					
ANR	1281064	Argument	accountname		1280856	2					
ANR	1281065	Identifier	accountname		1280856	0					
ANR	1281066	Argument	GetLastError ( )		1280856	3					
ANR	1281067	CallExpression	GetLastError ( )		1280856	0					
ANR	1281068	Callee	GetLastError		1280856	0					
ANR	1281069	Identifier	GetLastError		1280856	0					
ANR	1281070	ArgumentList			1280856	1					
ANR	1281071	ReturnStatement	return false ;	309:3:8573:8585	1280856	1	True				
ANR	1281072	Identifier	false		1280856	0					
ANR	1281073	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""dynuser::createuser(%s) successful\\n"" , accountname )"	312:1:8593:8664	1280856	5	True				
ANR	1281074	CallExpression	"dprintf ( D_FULLDEBUG , ""dynuser::createuser(%s) successful\\n"" , accountname )"		1280856	0					
ANR	1281075	Callee	dprintf		1280856	0					
ANR	1281076	Identifier	dprintf		1280856	0					
ANR	1281077	ArgumentList	D_FULLDEBUG		1280856	1					
ANR	1281078	Argument	D_FULLDEBUG		1280856	0					
ANR	1281079	Identifier	D_FULLDEBUG		1280856	0					
ANR	1281080	Argument	"""dynuser::createuser(%s) successful\\n"""		1280856	1					
ANR	1281081	PrimaryExpression	"""dynuser::createuser(%s) successful\\n"""		1280856	0					
ANR	1281082	Argument	accountname		1280856	2					
ANR	1281083	Identifier	accountname		1280856	0					
ANR	1281084	ReturnStatement	return true ;	314:1:8669:8680	1280856	6	True				
ANR	1281085	Identifier	true		1280856	0					
ANR	1281086	ReturnType	bool		1280856	1					
ANR	1281087	Identifier	dynuser :: logon_user		1280856	2					
ANR	1281088	ParameterList			1280856	3					
ANR	1281089	CFGEntryNode	ENTRY		1280856		True				
ANR	1281090	CFGExitNode	EXIT		1280856		True				
ANR	1281091	Symbol	NULL		1280856						
ANR	1281092	Symbol	& logon_token		1280856						
ANR	1281093	Symbol	LOGON32_LOGON_INTERACTIVE		1280856						
ANR	1281094	Symbol	this		1280856						
ANR	1281095	Symbol	D_ALWAYS		1280856						
ANR	1281096	Symbol	false		1280856						
ANR	1281097	Symbol	NERR_Success		1280856						
ANR	1281098	Symbol	LOGON32_PROVIDER_DEFAULT		1280856						
ANR	1281099	Symbol	D_FULLDEBUG		1280856						
ANR	1281100	Symbol	* this		1280856						
ANR	1281101	Symbol	this -> update_psid		1280856						
ANR	1281102	Symbol	this -> hide_user		1280856						
ANR	1281103	Symbol	password		1280856						
ANR	1281104	Symbol	NetUserSetInfo		1280856						
ANR	1281105	Symbol	accountname		1280856						
ANR	1281106	Symbol	ui		1280856						
ANR	1281107	Symbol	password_t		1280856						
ANR	1281108	Symbol	accountname_t		1280856						
ANR	1281109	Symbol	GetLastError		1280856						
ANR	1281110	Symbol	true		1280856						
ANR	1281111	Symbol	LogonUser		1280856						
ANR	1281112	Symbol	this -> add_users_group		1280856						
ANR	1281113	Symbol	& ui		1280856						
ANR	1281114	Function	dynuser :: reset	324:0:8792:9202							
ANR	1281115	FunctionDef	dynuser :: reset ()		1281114	0					
ANR	1281116	CompoundStatement		325:17:8814:9202	1281114	0					
ANR	1281117	ExpressionStatement	reuse_account = true	327:1:8818:8838	1281114	0	True				
ANR	1281118	AssignmentExpression	reuse_account = true		1281114	0		=			
ANR	1281119	Identifier	reuse_account		1281114	0					
ANR	1281120	Identifier	true		1281114	1					
ANR	1281121	IfStatement	if ( accountname )		1281114	1					
ANR	1281122	Condition	accountname	329:6:8847:8857	1281114	0	True				
ANR	1281123	Identifier	accountname		1281114	0					
ANR	1281124	CompoundStatement		5:20:46:46	1281114	1					
ANR	1281125	Statement	delete	330:2:8865:8870	1281114	0	True				
ANR	1281126	Statement	[	330:9:8872:8872	1281114	1	True				
ANR	1281127	Statement	]	330:10:8873:8873	1281114	2	True				
ANR	1281128	ExpressionStatement	accountname	330:12:8875:8886	1281114	3	True				
ANR	1281129	Identifier	accountname		1281114	0					
ANR	1281130	ExpressionStatement	accountname = NULL	331:2:8890:8908	1281114	4	True				
ANR	1281131	AssignmentExpression	accountname = NULL		1281114	0		=			
ANR	1281132	Identifier	accountname		1281114	0					
ANR	1281133	Identifier	NULL		1281114	1					
ANR	1281134	IfStatement	if ( accountname_t )		1281114	2					
ANR	1281135	Condition	accountname_t	333:6:8919:8931	1281114	0	True				
ANR	1281136	Identifier	accountname_t		1281114	0					
ANR	1281137	CompoundStatement		9:22:120:120	1281114	1					
ANR	1281138	Statement	delete	334:2:8939:8944	1281114	0	True				
ANR	1281139	Statement	[	334:9:8946:8946	1281114	1	True				
ANR	1281140	Statement	]	334:10:8947:8947	1281114	2	True				
ANR	1281141	ExpressionStatement	accountname_t	334:12:8949:8962	1281114	3	True				
ANR	1281142	Identifier	accountname_t		1281114	0					
ANR	1281143	ExpressionStatement	accountname_t = NULL	335:2:8966:8986	1281114	4	True				
ANR	1281144	AssignmentExpression	accountname_t = NULL		1281114	0		=			
ANR	1281145	Identifier	accountname_t		1281114	0					
ANR	1281146	Identifier	NULL		1281114	1					
ANR	1281147	IfStatement	if ( password )		1281114	3					
ANR	1281148	Condition	password	337:6:8997:9004	1281114	0	True				
ANR	1281149	Identifier	password		1281114	0					
ANR	1281150	CompoundStatement		13:17:193:193	1281114	1					
ANR	1281151	Statement	delete	338:2:9012:9017	1281114	0	True				
ANR	1281152	Statement	[	338:9:9019:9019	1281114	1	True				
ANR	1281153	Statement	]	338:10:9020:9020	1281114	2	True				
ANR	1281154	ExpressionStatement	password	338:12:9022:9030	1281114	3	True				
ANR	1281155	Identifier	password		1281114	0					
ANR	1281156	ExpressionStatement	password = NULL	339:2:9034:9049	1281114	4	True				
ANR	1281157	AssignmentExpression	password = NULL		1281114	0		=			
ANR	1281158	Identifier	password		1281114	0					
ANR	1281159	Identifier	NULL		1281114	1					
ANR	1281160	IfStatement	if ( password_t )		1281114	4					
ANR	1281161	Condition	password_t	341:6:9060:9069	1281114	0	True				
ANR	1281162	Identifier	password_t		1281114	0					
ANR	1281163	CompoundStatement		17:19:258:258	1281114	1					
ANR	1281164	Statement	delete	342:2:9077:9082	1281114	0	True				
ANR	1281165	Statement	[	342:9:9084:9084	1281114	1	True				
ANR	1281166	Statement	]	342:10:9085:9085	1281114	2	True				
ANR	1281167	ExpressionStatement	password_t	342:12:9087:9097	1281114	3	True				
ANR	1281168	Identifier	password_t		1281114	0					
ANR	1281169	ExpressionStatement	password_t = NULL	343:2:9101:9118	1281114	4	True				
ANR	1281170	AssignmentExpression	password_t = NULL		1281114	0		=			
ANR	1281171	Identifier	password_t		1281114	0					
ANR	1281172	Identifier	NULL		1281114	1					
ANR	1281173	IfStatement	if ( logon_token )		1281114	5					
ANR	1281174	Condition	logon_token	345:6:9130:9140	1281114	0	True				
ANR	1281175	Identifier	logon_token		1281114	0					
ANR	1281176	CompoundStatement		21:20:329:329	1281114	1					
ANR	1281177	ExpressionStatement	CloseHandle ( logon_token )	346:2:9148:9175	1281114	0	True				
ANR	1281178	CallExpression	CloseHandle ( logon_token )		1281114	0					
ANR	1281179	Callee	CloseHandle		1281114	0					
ANR	1281180	Identifier	CloseHandle		1281114	0					
ANR	1281181	ArgumentList	logon_token		1281114	1					
ANR	1281182	Argument	logon_token		1281114	0					
ANR	1281183	Identifier	logon_token		1281114	0					
ANR	1281184	ExpressionStatement	logon_token = NULL	347:2:9179:9197	1281114	1	True				
ANR	1281185	AssignmentExpression	logon_token = NULL		1281114	0		=			
ANR	1281186	Identifier	logon_token		1281114	0					
ANR	1281187	Identifier	NULL		1281114	1					
ANR	1281188	ReturnType	void		1281114	1					
ANR	1281189	Identifier	dynuser :: reset		1281114	2					
ANR	1281190	ParameterList			1281114	3					
ANR	1281191	CFGEntryNode	ENTRY		1281114		True				
ANR	1281192	CFGExitNode	EXIT		1281114		True				
ANR	1281193	Symbol	password		1281114						
ANR	1281194	Symbol	logon_token		1281114						
ANR	1281195	Symbol	NULL		1281114						
ANR	1281196	Symbol	accountname		1281114						
ANR	1281197	Symbol	password_t		1281114						
ANR	1281198	Symbol	accountname_t		1281114						
ANR	1281199	Symbol	reuse_account		1281114						
ANR	1281200	Symbol	true		1281114						
ANR	1281201	Function	dynuser :: ~dynuser	358:0:9293:9479							
ANR	1281202	FunctionDef	dynuser :: ~dynuser ()		1281201	0					
ANR	1281203	CompoundStatement		358:20:9313:9479	1281201	0					
ANR	1281204	IfStatement	if ( ! reuse_account )		1281201	0					
ANR	1281205	Condition	! reuse_account	360:5:9321:9334	1281201	0	True				
ANR	1281206	UnaryOperationExpression	! reuse_account		1281201	0					
ANR	1281207	UnaryOperator	!		1281201	0					
ANR	1281208	Identifier	reuse_account		1281201	1					
ANR	1281209	CompoundStatement		3:21:23:23	1281201	1					
ANR	1281210	ExpressionStatement	deleteuser ( accountname )	361:5:9344:9367	1281201	0	True				
ANR	1281211	CallExpression	deleteuser ( accountname )		1281201	0					
ANR	1281212	Callee	deleteuser		1281201	0					
ANR	1281213	Identifier	deleteuser		1281201	0					
ANR	1281214	ArgumentList	accountname		1281201	1					
ANR	1281215	Argument	accountname		1281201	0					
ANR	1281216	Identifier	accountname		1281201	0					
ANR	1281217	ElseStatement	else		1281201	0					
ANR	1281218	CompoundStatement		5:11:66:66	1281201	0					
ANR	1281219	ExpressionStatement	disable_account ( )	365:2:9417:9434	1281201	0	True				
ANR	1281220	CallExpression	disable_account ( )		1281201	0					
ANR	1281221	Callee	disable_account		1281201	0					
ANR	1281222	Identifier	disable_account		1281201	0					
ANR	1281223	ArgumentList			1281201	1					
ANR	1281224	ExpressionStatement	reset ( )	369:1:9470:9477	1281201	1	True				
ANR	1281225	CallExpression	reset ( )		1281201	0					
ANR	1281226	Callee	reset		1281201	0					
ANR	1281227	Identifier	reset		1281201	0					
ANR	1281228	ArgumentList			1281201	1					
ANR	1281229	Identifier	dynuser :: ~dynuser		1281201	1					
ANR	1281230	ParameterList			1281201	2					
ANR	1281231	CFGEntryNode	ENTRY		1281201		True				
ANR	1281232	CFGExitNode	EXIT		1281201		True				
ANR	1281233	Symbol	accountname		1281201						
ANR	1281234	Symbol	reuse_account		1281201						
ANR	1281235	Function	dynuser :: enable_account	373:0:9531:9987							
ANR	1281236	FunctionDef	dynuser :: enable_account ()		1281235	0					
ANR	1281237	CompoundStatement		373:31:9562:9987	1281235	0					
ANR	1281238	IfStatement	if ( ! accountname_t )		1281235	0					
ANR	1281239	Condition	! accountname_t	375:5:9571:9585	1281235	0	True				
ANR	1281240	UnaryOperationExpression	! accountname_t		1281235	0					
ANR	1281241	UnaryOperator	!		1281235	0					
ANR	1281242	Identifier	accountname_t		1281235	1					
ANR	1281243	CompoundStatement		3:23:26:26	1281235	1					
ANR	1281244	ReturnStatement	return ;	375:25:9591:9597	1281235	0	True				
ANR	1281245	IdentifierDeclStatement	USER_INFO_1008 ui = { UF_PASSWD_CANT_CHANGE | UF_DONT_EXPIRE_PASSWD } ;	377:1:9603:9675	1281235	1	True				
ANR	1281246	IdentifierDecl	ui = { UF_PASSWD_CANT_CHANGE | UF_DONT_EXPIRE_PASSWD }		1281235	0					
ANR	1281247	IdentifierDeclType	USER_INFO_1008		1281235	0					
ANR	1281248	Identifier	ui		1281235	1					
ANR	1281249	AssignmentExpression	ui = { UF_PASSWD_CANT_CHANGE | UF_DONT_EXPIRE_PASSWD }		1281235	2		=			
ANR	1281250	Identifier	ui		1281235	0					
ANR	1281251	InitializerList	UF_PASSWD_CANT_CHANGE | UF_DONT_EXPIRE_PASSWD		1281235	1					
ANR	1281252	InclusiveOrExpression	UF_PASSWD_CANT_CHANGE | UF_DONT_EXPIRE_PASSWD		1281235	0		|			
ANR	1281253	Identifier	UF_PASSWD_CANT_CHANGE		1281235	0					
ANR	1281254	Identifier	UF_DONT_EXPIRE_PASSWD		1281235	1					
ANR	1281255	IfStatement	"if ( NERR_Success != NetUserSetInfo ( NULL , accountname_t , 1008 , ( LPBYTE ) & ui , NULL ) )"		1281235	2					
ANR	1281256	Condition	"NERR_Success != NetUserSetInfo ( NULL , accountname_t , 1008 , ( LPBYTE ) & ui , NULL )"	381:6:9685:9904	1281235	0	True				
ANR	1281257	EqualityExpression	"NERR_Success != NetUserSetInfo ( NULL , accountname_t , 1008 , ( LPBYTE ) & ui , NULL )"		1281235	0		!=			
ANR	1281258	Identifier	NERR_Success		1281235	0					
ANR	1281259	CallExpression	"NetUserSetInfo ( NULL , accountname_t , 1008 , ( LPBYTE ) & ui , NULL )"		1281235	1					
ANR	1281260	Callee	NetUserSetInfo		1281235	0					
ANR	1281261	Identifier	NetUserSetInfo		1281235	0					
ANR	1281262	ArgumentList	NULL		1281235	1					
ANR	1281263	Argument	NULL		1281235	0					
ANR	1281264	Identifier	NULL		1281235	0					
ANR	1281265	Argument	accountname_t		1281235	1					
ANR	1281266	Identifier	accountname_t		1281235	0					
ANR	1281267	Argument	1008		1281235	2					
ANR	1281268	PrimaryExpression	1008		1281235	0					
ANR	1281269	Argument	( LPBYTE ) & ui		1281235	3					
ANR	1281270	CastExpression	( LPBYTE ) & ui		1281235	0					
ANR	1281271	CastTarget	LPBYTE		1281235	0					
ANR	1281272	UnaryOperationExpression	& ui		1281235	1					
ANR	1281273	UnaryOperator	&		1281235	0					
ANR	1281274	Identifier	ui		1281235	1					
ANR	1281275	Argument	NULL		1281235	4					
ANR	1281276	Identifier	NULL		1281235	0					
ANR	1281277	CompoundStatement		15:5:344:344	1281235	1					
ANR	1281278	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error enabling account %s\\n"" , accountname )"	388:5:9914:9982	1281235	0	True				
ANR	1281279	CallExpression	"dprintf ( D_ALWAYS , ""Error enabling account %s\\n"" , accountname )"		1281235	0					
ANR	1281280	Callee	dprintf		1281235	0					
ANR	1281281	Identifier	dprintf		1281235	0					
ANR	1281282	ArgumentList	D_ALWAYS		1281235	1					
ANR	1281283	Argument	D_ALWAYS		1281235	0					
ANR	1281284	Identifier	D_ALWAYS		1281235	0					
ANR	1281285	Argument	"""Error enabling account %s\\n"""		1281235	1					
ANR	1281286	PrimaryExpression	"""Error enabling account %s\\n"""		1281235	0					
ANR	1281287	Argument	accountname		1281235	2					
ANR	1281288	Identifier	accountname		1281235	0					
ANR	1281289	ReturnType	void		1281235	1					
ANR	1281290	Identifier	dynuser :: enable_account		1281235	2					
ANR	1281291	ParameterList			1281235	3					
ANR	1281292	CFGEntryNode	ENTRY		1281235		True				
ANR	1281293	CFGExitNode	EXIT		1281235		True				
ANR	1281294	Symbol	UF_PASSWD_CANT_CHANGE		1281235						
ANR	1281295	Symbol	NULL		1281235						
ANR	1281296	Symbol	NetUserSetInfo		1281235						
ANR	1281297	Symbol	ui		1281235						
ANR	1281298	Symbol	accountname		1281235						
ANR	1281299	Symbol	accountname_t		1281235						
ANR	1281300	Symbol	NERR_Success		1281235						
ANR	1281301	Symbol	D_ALWAYS		1281235						
ANR	1281302	Symbol	UF_DONT_EXPIRE_PASSWD		1281235						
ANR	1281303	Symbol	& ui		1281235						
ANR	1281304	Function	dynuser :: disable_account	394:0:10041:10987							
ANR	1281305	FunctionDef	dynuser :: disable_account ()		1281304	0					
ANR	1281306	CompoundStatement		394:32:10073:10987	1281304	0					
ANR	1281307	IdentifierDeclStatement	NET_API_STATUS rval ;	396:1:10077:10096	1281304	0	True				
ANR	1281308	IdentifierDecl	rval		1281304	0					
ANR	1281309	IdentifierDeclType	NET_API_STATUS		1281304	0					
ANR	1281310	Identifier	rval		1281304	1					
ANR	1281311	IfStatement	if ( ! accountname_t )		1281304	1					
ANR	1281312	Condition	! accountname_t	398:5:10104:10118	1281304	0	True				
ANR	1281313	UnaryOperationExpression	! accountname_t		1281304	0					
ANR	1281314	UnaryOperator	!		1281304	0					
ANR	1281315	Identifier	accountname_t		1281304	1					
ANR	1281316	CompoundStatement		5:23:48:48	1281304	1					
ANR	1281317	ReturnStatement	return ;	398:25:10124:10130	1281304	0	True				
ANR	1281318	IdentifierDeclStatement	USER_INFO_1008 ui = { UF_ACCOUNTDISABLE | UF_PASSWD_CANT_CHANGE | UF_DONT_EXPIRE_PASSWD } ;	400:1:10136:10228	1281304	2	True				
ANR	1281319	IdentifierDecl	ui = { UF_ACCOUNTDISABLE | UF_PASSWD_CANT_CHANGE | UF_DONT_EXPIRE_PASSWD }		1281304	0					
ANR	1281320	IdentifierDeclType	USER_INFO_1008		1281304	0					
ANR	1281321	Identifier	ui		1281304	1					
ANR	1281322	AssignmentExpression	ui = { UF_ACCOUNTDISABLE | UF_PASSWD_CANT_CHANGE | UF_DONT_EXPIRE_PASSWD }		1281304	2		=			
ANR	1281323	Identifier	ui		1281304	0					
ANR	1281324	InitializerList	UF_ACCOUNTDISABLE | UF_PASSWD_CANT_CHANGE | UF_DONT_EXPIRE_PASSWD		1281304	1					
ANR	1281325	InclusiveOrExpression	UF_ACCOUNTDISABLE | UF_PASSWD_CANT_CHANGE | UF_DONT_EXPIRE_PASSWD		1281304	0		|			
ANR	1281326	Identifier	UF_ACCOUNTDISABLE		1281304	0					
ANR	1281327	InclusiveOrExpression	UF_PASSWD_CANT_CHANGE | UF_DONT_EXPIRE_PASSWD		1281304	1		|			
ANR	1281328	Identifier	UF_PASSWD_CANT_CHANGE		1281304	0					
ANR	1281329	Identifier	UF_DONT_EXPIRE_PASSWD		1281304	1					
ANR	1281330	ExpressionStatement	"rval = NetUserSetInfo ( NULL , accountname_t , 1008 , ( LPBYTE ) & ui , NULL )"	404:1:10233:10443	1281304	3	True				
ANR	1281331	AssignmentExpression	"rval = NetUserSetInfo ( NULL , accountname_t , 1008 , ( LPBYTE ) & ui , NULL )"		1281304	0		=			
ANR	1281332	Identifier	rval		1281304	0					
ANR	1281333	CallExpression	"NetUserSetInfo ( NULL , accountname_t , 1008 , ( LPBYTE ) & ui , NULL )"		1281304	1					
ANR	1281334	Callee	NetUserSetInfo		1281304	0					
ANR	1281335	Identifier	NetUserSetInfo		1281304	0					
ANR	1281336	ArgumentList	NULL		1281304	1					
ANR	1281337	Argument	NULL		1281304	0					
ANR	1281338	Identifier	NULL		1281304	0					
ANR	1281339	Argument	accountname_t		1281304	1					
ANR	1281340	Identifier	accountname_t		1281304	0					
ANR	1281341	Argument	1008		1281304	2					
ANR	1281342	PrimaryExpression	1008		1281304	0					
ANR	1281343	Argument	( LPBYTE ) & ui		1281304	3					
ANR	1281344	CastExpression	( LPBYTE ) & ui		1281304	0					
ANR	1281345	CastTarget	LPBYTE		1281304	0					
ANR	1281346	UnaryOperationExpression	& ui		1281304	1					
ANR	1281347	UnaryOperator	&		1281304	0					
ANR	1281348	Identifier	ui		1281304	1					
ANR	1281349	Argument	NULL		1281304	4					
ANR	1281350	Identifier	NULL		1281304	0					
ANR	1281351	IfStatement	if ( NERR_Success == rval )		1281304	4					
ANR	1281352	Condition	NERR_Success == rval	411:6:10451:10470	1281304	0	True				
ANR	1281353	EqualityExpression	NERR_Success == rval		1281304	0		==			
ANR	1281354	Identifier	NERR_Success		1281304	0					
ANR	1281355	Identifier	rval		1281304	1					
ANR	1281356	CompoundStatement		18:29:400:400	1281304	1					
ANR	1281357	ReturnStatement	return ;	412:5:10481:10487	1281304	0	True				
ANR	1281358	ElseStatement	else		1281304	0					
ANR	1281359	IfStatement	if ( ERROR_ACCESS_DENIED == rval )		1281304	0					
ANR	1281360	Condition	ERROR_ACCESS_DENIED == rval	413:13:10502:10528	1281304	0	True				
ANR	1281361	EqualityExpression	ERROR_ACCESS_DENIED == rval		1281304	0		==			
ANR	1281362	Identifier	ERROR_ACCESS_DENIED		1281304	0					
ANR	1281363	Identifier	rval		1281304	1					
ANR	1281364	CompoundStatement		20:43:458:458	1281304	1					
ANR	1281365	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error disabling account %s (ACCESS DENIED)\\n"" , accountname )"	414:2:10536:10621	1281304	0	True				
ANR	1281366	CallExpression	"dprintf ( D_ALWAYS , ""Error disabling account %s (ACCESS DENIED)\\n"" , accountname )"		1281304	0					
ANR	1281367	Callee	dprintf		1281304	0					
ANR	1281368	Identifier	dprintf		1281304	0					
ANR	1281369	ArgumentList	D_ALWAYS		1281304	1					
ANR	1281370	Argument	D_ALWAYS		1281304	0					
ANR	1281371	Identifier	D_ALWAYS		1281304	0					
ANR	1281372	Argument	"""Error disabling account %s (ACCESS DENIED)\\n"""		1281304	1					
ANR	1281373	PrimaryExpression	"""Error disabling account %s (ACCESS DENIED)\\n"""		1281304	0					
ANR	1281374	Argument	accountname		1281304	2					
ANR	1281375	Identifier	accountname		1281304	0					
ANR	1281376	ElseStatement	else		1281304	0					
ANR	1281377	IfStatement	if ( ERROR_INVALID_PARAMETER )		1281304	0					
ANR	1281378	Condition	ERROR_INVALID_PARAMETER	416:13:10636:10658	1281304	0	True				
ANR	1281379	Identifier	ERROR_INVALID_PARAMETER		1281304	0					
ANR	1281380	CompoundStatement		23:39:588:588	1281304	1					
ANR	1281381	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error disabling account %s (INVALID PARAMETER)\\n"" , accountname )"	417:3:10667:10756	1281304	0	True				
ANR	1281382	CallExpression	"dprintf ( D_ALWAYS , ""Error disabling account %s (INVALID PARAMETER)\\n"" , accountname )"		1281304	0					
ANR	1281383	Callee	dprintf		1281304	0					
ANR	1281384	Identifier	dprintf		1281304	0					
ANR	1281385	ArgumentList	D_ALWAYS		1281304	1					
ANR	1281386	Argument	D_ALWAYS		1281304	0					
ANR	1281387	Identifier	D_ALWAYS		1281304	0					
ANR	1281388	Argument	"""Error disabling account %s (INVALID PARAMETER)\\n"""		1281304	1					
ANR	1281389	PrimaryExpression	"""Error disabling account %s (INVALID PARAMETER)\\n"""		1281304	0					
ANR	1281390	Argument	accountname		1281304	2					
ANR	1281391	Identifier	accountname		1281304	0					
ANR	1281392	ElseStatement	else		1281304	0					
ANR	1281393	IfStatement	if ( NERR_UserNotFound )		1281304	0					
ANR	1281394	Condition	NERR_UserNotFound	419:13:10771:10787	1281304	0	True				
ANR	1281395	Identifier	NERR_UserNotFound		1281304	0					
ANR	1281396	CompoundStatement		26:33:717:717	1281304	1					
ANR	1281397	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error disabling account %s (User Not Found)\\n"" , accountname )"	420:3:10796:10882	1281304	0	True				
ANR	1281398	CallExpression	"dprintf ( D_ALWAYS , ""Error disabling account %s (User Not Found)\\n"" , accountname )"		1281304	0					
ANR	1281399	Callee	dprintf		1281304	0					
ANR	1281400	Identifier	dprintf		1281304	0					
ANR	1281401	ArgumentList	D_ALWAYS		1281304	1					
ANR	1281402	Argument	D_ALWAYS		1281304	0					
ANR	1281403	Identifier	D_ALWAYS		1281304	0					
ANR	1281404	Argument	"""Error disabling account %s (User Not Found)\\n"""		1281304	1					
ANR	1281405	PrimaryExpression	"""Error disabling account %s (User Not Found)\\n"""		1281304	0					
ANR	1281406	Argument	accountname		1281304	2					
ANR	1281407	Identifier	accountname		1281304	0					
ANR	1281408	ElseStatement	else		1281304	0					
ANR	1281409	CompoundStatement		29:8:818:818	1281304	0					
ANR	1281410	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error disabling account %s (Unknown error)\\n"" , accountname )"	423:3:10897:10982	1281304	0	True				
ANR	1281411	CallExpression	"dprintf ( D_ALWAYS , ""Error disabling account %s (Unknown error)\\n"" , accountname )"		1281304	0					
ANR	1281412	Callee	dprintf		1281304	0					
ANR	1281413	Identifier	dprintf		1281304	0					
ANR	1281414	ArgumentList	D_ALWAYS		1281304	1					
ANR	1281415	Argument	D_ALWAYS		1281304	0					
ANR	1281416	Identifier	D_ALWAYS		1281304	0					
ANR	1281417	Argument	"""Error disabling account %s (Unknown error)\\n"""		1281304	1					
ANR	1281418	PrimaryExpression	"""Error disabling account %s (Unknown error)\\n"""		1281304	0					
ANR	1281419	Argument	accountname		1281304	2					
ANR	1281420	Identifier	accountname		1281304	0					
ANR	1281421	ReturnType	void		1281304	1					
ANR	1281422	Identifier	dynuser :: disable_account		1281304	2					
ANR	1281423	ParameterList			1281304	3					
ANR	1281424	CFGEntryNode	ENTRY		1281304		True				
ANR	1281425	CFGExitNode	EXIT		1281304		True				
ANR	1281426	Symbol	UF_PASSWD_CANT_CHANGE		1281304						
ANR	1281427	Symbol	UF_ACCOUNTDISABLE		1281304						
ANR	1281428	Symbol	NULL		1281304						
ANR	1281429	Symbol	NERR_Success		1281304						
ANR	1281430	Symbol	D_ALWAYS		1281304						
ANR	1281431	Symbol	ERROR_INVALID_PARAMETER		1281304						
ANR	1281432	Symbol	ERROR_ACCESS_DENIED		1281304						
ANR	1281433	Symbol	NetUserSetInfo		1281304						
ANR	1281434	Symbol	ui		1281304						
ANR	1281435	Symbol	accountname		1281304						
ANR	1281436	Symbol	accountname_t		1281304						
ANR	1281437	Symbol	rval		1281304						
ANR	1281438	Symbol	UF_DONT_EXPIRE_PASSWD		1281304						
ANR	1281439	Symbol	NERR_UserNotFound		1281304						
ANR	1281440	Symbol	& ui		1281304						
ANR	1281441	Function	dynuser :: createpass	430:0:10992:11352							
ANR	1281442	FunctionDef	dynuser :: createpass ()		1281441	0					
ANR	1281443	CompoundStatement		430:27:11019:11352	1281441	0					
ANR	1281444	ExpressionStatement	ASSERT ( password != NULL )	432:1:11024:11050	1281441	0	True				
ANR	1281445	CallExpression	ASSERT ( password != NULL )		1281441	0					
ANR	1281446	Callee	ASSERT		1281441	0					
ANR	1281447	Identifier	ASSERT		1281441	0					
ANR	1281448	ArgumentList	password != NULL		1281441	1					
ANR	1281449	Argument	password != NULL		1281441	0					
ANR	1281450	EqualityExpression	password != NULL		1281441	0		!=			
ANR	1281451	Identifier	password		1281441	0					
ANR	1281452	Identifier	NULL		1281441	1					
ANR	1281453	ForStatement	for ( int i = 0 ; i < 14 ; i ++ )		1281441	1					
ANR	1281454	ForInit	int i = 0 ;	434:7:11062:11071	1281441	0	True				
ANR	1281455	IdentifierDeclStatement	int i = 0 ;		1281441	0					
ANR	1281456	IdentifierDecl	i = 0		1281441	0					
ANR	1281457	IdentifierDeclType	int		1281441	0					
ANR	1281458	Identifier	i		1281441	1					
ANR	1281459	AssignmentExpression	i = 0		1281441	2		=			
ANR	1281460	Identifier	i		1281441	0					
ANR	1281461	PrimaryExpression	0		1281441	1					
ANR	1281462	Condition	i < 14	434:18:11073:11078	1281441	1	True				
ANR	1281463	RelationalExpression	i < 14		1281441	0		<			
ANR	1281464	Identifier	i		1281441	0					
ANR	1281465	PrimaryExpression	14		1281441	1					
ANR	1281466	PostIncDecOperationExpression	i ++	434:26:11081:11083	1281441	2	True				
ANR	1281467	Identifier	i		1281441	0					
ANR	1281468	IncDec	++		1281441	1					
ANR	1281469	CompoundStatement		6:2:71:103	1281441	3					
ANR	1281470	IdentifierDeclStatement	char c = ( char ) ( rand ( ) % 128 ) ;	435:2:11091:11123	1281441	0	True				
ANR	1281471	IdentifierDecl	c = ( char ) ( rand ( ) % 128 )		1281441	0					
ANR	1281472	IdentifierDeclType	char		1281441	0					
ANR	1281473	Identifier	c		1281441	1					
ANR	1281474	AssignmentExpression	c = ( char ) ( rand ( ) % 128 )		1281441	2		=			
ANR	1281475	Identifier	c		1281441	0					
ANR	1281476	CastExpression	( char ) ( rand ( ) % 128 )		1281441	1					
ANR	1281477	CastTarget	char		1281441	0					
ANR	1281478	MultiplicativeExpression	rand ( ) % 128		1281441	1		%			
ANR	1281479	CallExpression	rand ( )		1281441	0					
ANR	1281480	Callee	rand		1281441	0					
ANR	1281481	Identifier	rand		1281441	0					
ANR	1281482	ArgumentList			1281441	1					
ANR	1281483	PrimaryExpression	128		1281441	1					
ANR	1281484	IfStatement	if ( ! isprint ( c ) )		1281441	1					
ANR	1281485	Condition	! isprint ( c )	437:7:11133:11145	1281441	0	True				
ANR	1281486	UnaryOperationExpression	! isprint ( c )		1281441	0					
ANR	1281487	UnaryOperator	!		1281441	0					
ANR	1281488	CallExpression	isprint ( c )		1281441	1					
ANR	1281489	Callee	isprint		1281441	0					
ANR	1281490	Identifier	isprint		1281441	0					
ANR	1281491	ArgumentList	c		1281441	1					
ANR	1281492	Argument	c		1281441	0					
ANR	1281493	Identifier	c		1281441	0					
ANR	1281494	CompoundStatement		8:23:129:129	1281441	1					
ANR	1281495	ExpressionStatement	i --	439:3:11227:11230	1281441	0	True				
ANR	1281496	PostIncDecOperationExpression	i --		1281441	0					
ANR	1281497	Identifier	i		1281441	0					
ANR	1281498	IncDec	--		1281441	1					
ANR	1281499	ElseStatement	else		1281441	0					
ANR	1281500	CompoundStatement		11:9:221:221	1281441	0					
ANR	1281501	ExpressionStatement	password [ i ] = c	441:3:11246:11261	1281441	0	True				
ANR	1281502	AssignmentExpression	password [ i ] = c		1281441	0		=			
ANR	1281503	ArrayIndexing	password [ i ]		1281441	0					
ANR	1281504	Identifier	password		1281441	0					
ANR	1281505	Identifier	i		1281441	1					
ANR	1281506	Identifier	c		1281441	1					
ANR	1281507	ExpressionStatement	password [ 14 ] = '\\0'	445:1:11272:11291	1281441	2	True				
ANR	1281508	AssignmentExpression	password [ 14 ] = '\\0'		1281441	0		=			
ANR	1281509	ArrayIndexing	password [ 14 ]		1281441	0					
ANR	1281510	Identifier	password		1281441	0					
ANR	1281511	PrimaryExpression	14		1281441	1					
ANR	1281512	PrimaryExpression	'\\0'		1281441	1					
ANR	1281513	ReturnType	void		1281441	1					
ANR	1281514	Identifier	dynuser :: createpass		1281441	2					
ANR	1281515	ParameterList			1281441	3					
ANR	1281516	CFGEntryNode	ENTRY		1281441		True				
ANR	1281517	CFGExitNode	EXIT		1281441		True				
ANR	1281518	Symbol	rand		1281441						
ANR	1281519	Symbol	password		1281441						
ANR	1281520	Symbol	NULL		1281441						
ANR	1281521	Symbol	c		1281441						
ANR	1281522	Symbol	* i		1281441						
ANR	1281523	Symbol	* password		1281441						
ANR	1281524	Symbol	isprint		1281441						
ANR	1281525	Symbol	i		1281441						
ANR	1281526	Function	dynuser :: update_t	451:0:11356:12580							
ANR	1281527	FunctionDef	dynuser :: update_t ()		1281526	0					
ANR	1281528	CompoundStatement		451:25:11381:12580	1281526	0					
ANR	1281529	IfStatement	if ( accountname && accountname_t )		1281526	0					
ANR	1281530	Condition	accountname && accountname_t	452:6:11389:11416	1281526	0	True				
ANR	1281531	AndExpression	accountname && accountname_t		1281526	0		&&			
ANR	1281532	Identifier	accountname		1281526	0					
ANR	1281533	Identifier	accountname_t		1281526	1					
ANR	1281534	CompoundStatement		2:37:38:38	1281526	1					
ANR	1281535	IfStatement	"if ( ! MultiByteToWideChar ( CP_ACP , MB_ERR_INVALID_CHARS , accountname , - 1 , accountname_t , 100 ) )"		1281526	0					
ANR	1281536	Condition	"! MultiByteToWideChar ( CP_ACP , MB_ERR_INVALID_CHARS , accountname , - 1 , accountname_t , 100 )"	453:6:11428:11521	1281526	0	True				
ANR	1281537	UnaryOperationExpression	"! MultiByteToWideChar ( CP_ACP , MB_ERR_INVALID_CHARS , accountname , - 1 , accountname_t , 100 )"		1281526	0					
ANR	1281538	UnaryOperator	!		1281526	0					
ANR	1281539	CallExpression	"MultiByteToWideChar ( CP_ACP , MB_ERR_INVALID_CHARS , accountname , - 1 , accountname_t , 100 )"		1281526	1					
ANR	1281540	Callee	MultiByteToWideChar		1281526	0					
ANR	1281541	Identifier	MultiByteToWideChar		1281526	0					
ANR	1281542	ArgumentList	CP_ACP		1281526	1					
ANR	1281543	Argument	CP_ACP		1281526	0					
ANR	1281544	Identifier	CP_ACP		1281526	0					
ANR	1281545	Argument	MB_ERR_INVALID_CHARS		1281526	1					
ANR	1281546	Identifier	MB_ERR_INVALID_CHARS		1281526	0					
ANR	1281547	Argument	accountname		1281526	2					
ANR	1281548	Identifier	accountname		1281526	0					
ANR	1281549	Argument	- 1		1281526	3					
ANR	1281550	UnaryOperationExpression	- 1		1281526	0					
ANR	1281551	UnaryOperator	-		1281526	0					
ANR	1281552	PrimaryExpression	1		1281526	1					
ANR	1281553	Argument	accountname_t		1281526	4					
ANR	1281554	Identifier	accountname_t		1281526	0					
ANR	1281555	Argument	100		1281526	5					
ANR	1281556	PrimaryExpression	100		1281526	0					
ANR	1281557	CompoundStatement		4:43:142:142	1281526	1					
ANR	1281558	Statement	dprintf	455:3:11529:11535	1281526	0	True				
ANR	1281559	Statement	(	455:10:11536:11536	1281526	1	True				
ANR	1281560	Statement	D_ALWAYS	455:11:11537:11544	1281526	2	True				
ANR	1281561	Statement	","	455:19:11545:11545	1281526	3	True				
ANR	1281562	Statement	"""DynUser: MultiByteToWideChar() failed """	455:21:11547:11586	1281526	4	True				
ANR	1281563	Statement	"""error=%li\\n"""	456:5:11593:11605	1281526	5	True				
ANR	1281564	Statement	","	456:18:11606:11606	1281526	6	True				
ANR	1281565	Statement	GetLastError	456:20:11608:11619	1281526	7	True				
ANR	1281566	Statement	(	456:32:11620:11620	1281526	8	True				
ANR	1281567	Statement	)	456:33:11621:11621	1281526	9	True				
ANR	1281568	Statement	)	456:34:11622:11622	1281526	10	True				
ANR	1281569	ExpressionStatement		456:35:11623:11623	1281526	11	True				
ANR	1281570	ExpressionStatement	"EXCEPT ( ""Unexpected failure in dynuser:update_t\\n"" )"	457:3:11628:11678	1281526	12	True				
ANR	1281571	CallExpression	"EXCEPT ( ""Unexpected failure in dynuser:update_t\\n"" )"		1281526	0					
ANR	1281572	Callee	EXCEPT		1281526	0					
ANR	1281573	Identifier	EXCEPT		1281526	0					
ANR	1281574	ArgumentList	"""Unexpected failure in dynuser:update_t\\n"""		1281526	1					
ANR	1281575	Argument	"""Unexpected failure in dynuser:update_t\\n"""		1281526	0					
ANR	1281576	PrimaryExpression	"""Unexpected failure in dynuser:update_t\\n"""		1281526	0					
ANR	1281577	IfStatement	if ( password && password_t )		1281526	1					
ANR	1281578	Condition	password && password_t	460:6:11693:11714	1281526	0	True				
ANR	1281579	AndExpression	password && password_t		1281526	0		&&			
ANR	1281580	Identifier	password		1281526	0					
ANR	1281581	Identifier	password_t		1281526	1					
ANR	1281582	CompoundStatement		10:31:336:336	1281526	1					
ANR	1281583	IfStatement	"if ( MultiByteToWideChar ( CP_ACP , MB_ERR_INVALID_CHARS , password , - 1 , password_t , 100 ) )"		1281526	0					
ANR	1281584	Condition	"MultiByteToWideChar ( CP_ACP , MB_ERR_INVALID_CHARS , password , - 1 , password_t , 100 )"	471:6:12167:12251	1281526	0	True				
ANR	1281585	CallExpression	"MultiByteToWideChar ( CP_ACP , MB_ERR_INVALID_CHARS , password , - 1 , password_t , 100 )"		1281526	0					
ANR	1281586	Callee	MultiByteToWideChar		1281526	0					
ANR	1281587	Identifier	MultiByteToWideChar		1281526	0					
ANR	1281588	ArgumentList	CP_ACP		1281526	1					
ANR	1281589	Argument	CP_ACP		1281526	0					
ANR	1281590	Identifier	CP_ACP		1281526	0					
ANR	1281591	Argument	MB_ERR_INVALID_CHARS		1281526	1					
ANR	1281592	Identifier	MB_ERR_INVALID_CHARS		1281526	0					
ANR	1281593	Argument	password		1281526	2					
ANR	1281594	Identifier	password		1281526	0					
ANR	1281595	Argument	- 1		1281526	3					
ANR	1281596	UnaryOperationExpression	- 1		1281526	0					
ANR	1281597	UnaryOperator	-		1281526	0					
ANR	1281598	PrimaryExpression	1		1281526	1					
ANR	1281599	Argument	password_t		1281526	4					
ANR	1281600	Identifier	password_t		1281526	0					
ANR	1281601	Argument	100		1281526	5					
ANR	1281602	PrimaryExpression	100		1281526	0					
ANR	1281603	CompoundStatement		22:35:872:872	1281526	1					
ANR	1281604	ReturnStatement	return ;	474:4:12275:12281	1281526	0	True				
ANR	1281605	ElseStatement	else		1281526	0					
ANR	1281606	IfStatement	"if ( MultiByteToWideChar ( CP_THREAD_ACP , MB_ERR_INVALID_CHARS , password , - 1 , password_t , 100 ) )"		1281526	0					
ANR	1281607	Condition	"MultiByteToWideChar ( CP_THREAD_ACP , MB_ERR_INVALID_CHARS , password , - 1 , password_t , 100 )"	475:13:12296:12387	1281526	0	True				
ANR	1281608	CallExpression	"MultiByteToWideChar ( CP_THREAD_ACP , MB_ERR_INVALID_CHARS , password , - 1 , password_t , 100 )"		1281526	0					
ANR	1281609	Callee	MultiByteToWideChar		1281526	0					
ANR	1281610	Identifier	MultiByteToWideChar		1281526	0					
ANR	1281611	ArgumentList	CP_THREAD_ACP		1281526	1					
ANR	1281612	Argument	CP_THREAD_ACP		1281526	0					
ANR	1281613	Identifier	CP_THREAD_ACP		1281526	0					
ANR	1281614	Argument	MB_ERR_INVALID_CHARS		1281526	1					
ANR	1281615	Identifier	MB_ERR_INVALID_CHARS		1281526	0					
ANR	1281616	Argument	password		1281526	2					
ANR	1281617	Identifier	password		1281526	0					
ANR	1281618	Argument	- 1		1281526	3					
ANR	1281619	UnaryOperationExpression	- 1		1281526	0					
ANR	1281620	UnaryOperator	-		1281526	0					
ANR	1281621	PrimaryExpression	1		1281526	1					
ANR	1281622	Argument	password_t		1281526	4					
ANR	1281623	Identifier	password_t		1281526	0					
ANR	1281624	Argument	100		1281526	5					
ANR	1281625	PrimaryExpression	100		1281526	0					
ANR	1281626	CompoundStatement		26:35:1008:1008	1281526	1					
ANR	1281627	ReturnStatement	return ;	478:4:12412:12418	1281526	0	True				
ANR	1281628	Statement	dprintf	481:2:12428:12434	1281526	1	True				
ANR	1281629	Statement	(	481:9:12435:12435	1281526	2	True				
ANR	1281630	Statement	D_ALWAYS	481:10:12436:12443	1281526	3	True				
ANR	1281631	Statement	","	481:18:12444:12444	1281526	4	True				
ANR	1281632	Statement	"""DynUser: MultiByteToWideChar() failed """	481:20:12446:12485	1281526	5	True				
ANR	1281633	Statement	"""error=%li\\n"""	482:4:12491:12503	1281526	6	True				
ANR	1281634	Statement	","	482:17:12504:12504	1281526	7	True				
ANR	1281635	Statement	GetLastError	482:19:12506:12517	1281526	8	True				
ANR	1281636	Statement	(	482:31:12518:12518	1281526	9	True				
ANR	1281637	Statement	)	482:32:12519:12519	1281526	10	True				
ANR	1281638	Statement	)	482:33:12520:12520	1281526	11	True				
ANR	1281639	ExpressionStatement		482:34:12521:12521	1281526	12	True				
ANR	1281640	ExpressionStatement	"EXCEPT ( ""Unexpected failure in dynuser:update_t\\n"" )"	483:2:12525:12575	1281526	13	True				
ANR	1281641	CallExpression	"EXCEPT ( ""Unexpected failure in dynuser:update_t\\n"" )"		1281526	0					
ANR	1281642	Callee	EXCEPT		1281526	0					
ANR	1281643	Identifier	EXCEPT		1281526	0					
ANR	1281644	ArgumentList	"""Unexpected failure in dynuser:update_t\\n"""		1281526	1					
ANR	1281645	Argument	"""Unexpected failure in dynuser:update_t\\n"""		1281526	0					
ANR	1281646	PrimaryExpression	"""Unexpected failure in dynuser:update_t\\n"""		1281526	0					
ANR	1281647	ReturnType	void		1281526	1					
ANR	1281648	Identifier	dynuser :: update_t		1281526	2					
ANR	1281649	ParameterList			1281526	3					
ANR	1281650	CFGEntryNode	ENTRY		1281526		True				
ANR	1281651	CFGExitNode	EXIT		1281526		True				
ANR	1281652	Symbol	password		1281526						
ANR	1281653	Symbol	CP_THREAD_ACP		1281526						
ANR	1281654	Symbol	accountname		1281526						
ANR	1281655	Symbol	CP_ACP		1281526						
ANR	1281656	Symbol	password_t		1281526						
ANR	1281657	Symbol	accountname_t		1281526						
ANR	1281658	Symbol	MB_ERR_INVALID_CHARS		1281526						
ANR	1281659	Symbol	MultiByteToWideChar		1281526						
ANR	1281660	Function	dynuser :: get_token	488:0:12584:12641							
ANR	1281661	FunctionDef	dynuser :: get_token ()		1281660	0					
ANR	1281662	CompoundStatement		488:28:12612:12641	1281660	0					
ANR	1281663	ReturnStatement	return this -> logon_token ;	489:1:12615:12639	1281660	0	True				
ANR	1281664	PtrMemberAccess	this -> logon_token		1281660	0					
ANR	1281665	Identifier	this		1281660	0					
ANR	1281666	Identifier	logon_token		1281660	1					
ANR	1281667	ReturnType	HANDLE		1281660	1					
ANR	1281668	Identifier	dynuser :: get_token		1281660	2					
ANR	1281669	ParameterList			1281660	3					
ANR	1281670	CFGEntryNode	ENTRY		1281660		True				
ANR	1281671	CFGExitNode	EXIT		1281660		True				
ANR	1281672	Symbol	* this		1281660						
ANR	1281673	Symbol	this -> logon_token		1281660						
ANR	1281674	Symbol	this		1281660						
ANR	1281675	Function	dynuser :: get_accountname	492:0:12644:12762							
ANR	1281676	FunctionDef	dynuser :: get_accountname ()		1281675	0					
ANR	1281677	CompoundStatement		493:27:12683:12762	1281675	0					
ANR	1281678	IfStatement	if ( logon_token && accountname )		1281675	0					
ANR	1281679	Condition	logon_token && accountname	494:5:12690:12715	1281675	0	True				
ANR	1281680	AndExpression	logon_token && accountname		1281675	0		&&			
ANR	1281681	Identifier	logon_token		1281675	0					
ANR	1281682	Identifier	accountname		1281675	1					
ANR	1281683	ReturnStatement	return accountname ;	495:2:12721:12739	1281675	1	True				
ANR	1281684	Identifier	accountname		1281675	0					
ANR	1281685	ElseStatement	else		1281675	0					
ANR	1281686	ReturnStatement	return NULL ;	497:2:12749:12760	1281675	0	True				
ANR	1281687	Identifier	NULL		1281675	0					
ANR	1281688	ReturnType	const char *		1281675	1					
ANR	1281689	Identifier	dynuser :: get_accountname		1281675	2					
ANR	1281690	ParameterList			1281675	3					
ANR	1281691	CFGEntryNode	ENTRY		1281675		True				
ANR	1281692	CFGExitNode	EXIT		1281675		True				
ANR	1281693	Symbol	logon_token		1281675						
ANR	1281694	Symbol	NULL		1281675						
ANR	1281695	Symbol	accountname		1281675						
ANR	1281696	Function	InitString	500:0:12765:12952							
ANR	1281697	FunctionDef	"InitString (UNICODE_STRING & us , wchar_t * psz)"		1281696	0					
ANR	1281698	CompoundStatement		500:52:12817:12952	1281696	0					
ANR	1281699	IdentifierDeclStatement	USHORT cch = wcslen ( psz ) ;	501:1:12820:12846	1281696	0	True				
ANR	1281700	IdentifierDecl	cch = wcslen ( psz )		1281696	0					
ANR	1281701	IdentifierDeclType	USHORT		1281696	0					
ANR	1281702	Identifier	cch		1281696	1					
ANR	1281703	AssignmentExpression	cch = wcslen ( psz )		1281696	2		=			
ANR	1281704	Identifier	cch		1281696	0					
ANR	1281705	CallExpression	wcslen ( psz )		1281696	1					
ANR	1281706	Callee	wcslen		1281696	0					
ANR	1281707	Identifier	wcslen		1281696	0					
ANR	1281708	ArgumentList	psz		1281696	1					
ANR	1281709	Argument	psz		1281696	0					
ANR	1281710	Identifier	psz		1281696	0					
ANR	1281711	ExpressionStatement	us . Length = cch * sizeof ( wchar_t )	502:1:12849:12882	1281696	1	True				
ANR	1281712	AssignmentExpression	us . Length = cch * sizeof ( wchar_t )		1281696	0		=			
ANR	1281713	MemberAccess	us . Length		1281696	0					
ANR	1281714	Identifier	us		1281696	0					
ANR	1281715	Identifier	Length		1281696	1					
ANR	1281716	MultiplicativeExpression	cch * sizeof ( wchar_t )		1281696	1		*			
ANR	1281717	Identifier	cch		1281696	0					
ANR	1281718	SizeofExpression	sizeof ( wchar_t )		1281696	1					
ANR	1281719	Sizeof	sizeof		1281696	0					
ANR	1281720	SizeofOperand	wchar_t		1281696	1					
ANR	1281721	ExpressionStatement	us . MaximumLength = ( cch + 1 ) * sizeof ( wchar_t )	503:1:12885:12932	1281696	2	True				
ANR	1281722	AssignmentExpression	us . MaximumLength = ( cch + 1 ) * sizeof ( wchar_t )		1281696	0		=			
ANR	1281723	MemberAccess	us . MaximumLength		1281696	0					
ANR	1281724	Identifier	us		1281696	0					
ANR	1281725	Identifier	MaximumLength		1281696	1					
ANR	1281726	MultiplicativeExpression	( cch + 1 ) * sizeof ( wchar_t )		1281696	1		*			
ANR	1281727	AdditiveExpression	cch + 1		1281696	0		+			
ANR	1281728	Identifier	cch		1281696	0					
ANR	1281729	PrimaryExpression	1		1281696	1					
ANR	1281730	SizeofExpression	sizeof ( wchar_t )		1281696	1					
ANR	1281731	Sizeof	sizeof		1281696	0					
ANR	1281732	SizeofOperand	wchar_t		1281696	1					
ANR	1281733	ExpressionStatement	us . Buffer = psz	504:1:12935:12950	1281696	3	True				
ANR	1281734	AssignmentExpression	us . Buffer = psz		1281696	0		=			
ANR	1281735	MemberAccess	us . Buffer		1281696	0					
ANR	1281736	Identifier	us		1281696	0					
ANR	1281737	Identifier	Buffer		1281696	1					
ANR	1281738	Identifier	psz		1281696	1					
ANR	1281739	ReturnType	void		1281696	1					
ANR	1281740	Identifier	InitString		1281696	2					
ANR	1281741	ParameterList	"UNICODE_STRING & us , wchar_t * psz"		1281696	3					
ANR	1281742	Parameter	UNICODE_STRING & us	500:17:12782:12799	1281696	0	True				
ANR	1281743	ParameterType	UNICODE_STRING &		1281696	0					
ANR	1281744	Identifier	us		1281696	1					
ANR	1281745	Parameter	wchar_t * psz	500:37:12802:12813	1281696	1	True				
ANR	1281746	ParameterType	wchar_t *		1281696	0					
ANR	1281747	Identifier	psz		1281696	1					
ANR	1281748	CFGEntryNode	ENTRY		1281696		True				
ANR	1281749	CFGExitNode	EXIT		1281696		True				
ANR	1281750	Symbol	us . MaximumLength		1281696						
ANR	1281751	Symbol	psz		1281696						
ANR	1281752	Symbol	wcslen		1281696						
ANR	1281753	Symbol	us . Length		1281696						
ANR	1281754	Symbol	cch		1281696						
ANR	1281755	Symbol	us . Buffer		1281696						
ANR	1281756	Symbol	us		1281696						
ANR	1281757	Function	dynuser :: createaccount	513:0:13020:14048							
ANR	1281758	FunctionDef	dynuser :: createaccount ()		1281757	0					
ANR	1281759	CompoundStatement		513:30:13050:14048	1281757	0					
ANR	1281760	Statement	USER_INFO_1	514:1:13053:13063	1281757	0	True				
ANR	1281761	Statement	userInfo	514:13:13065:13072	1281757	1	True				
ANR	1281762	Statement	=	514:22:13074:13074	1281757	2	True				
ANR	1281763	CompoundStatement		2:24:25:25	1281757	3					
ANR	1281764	Statement	accountname_t	514:26:13078:13090	1281757	0	True				
ANR	1281765	Statement	","	514:39:13091:13091	1281757	1	True				
ANR	1281766	Statement	password_t	514:41:13093:13102	1281757	2	True				
ANR	1281767	Statement	","	514:51:13103:13103	1281757	3	True				
ANR	1281768	Statement	0	514:53:13105:13105	1281757	4	True				
ANR	1281769	Statement	","	514:54:13106:13106	1281757	5	True				
ANR	1281770	Statement	USER_PRIV_USER	515:8:13138:13151	1281757	6	True				
ANR	1281771	Statement	","	515:22:13152:13152	1281757	7	True				
ANR	1281772	Statement	L	516:8:13183:13183	1281757	8	True				
ANR	1281773	Statement	""""""	516:9:13184:13185	1281757	9	True				
ANR	1281774	Statement	","	516:11:13186:13186	1281757	10	True				
ANR	1281775	Statement	L	517:8:13217:13217	1281757	11	True				
ANR	1281776	Statement	"""Dynamically created Condor account."""	517:9:13218:13254	1281757	12	True				
ANR	1281777	Statement	","	517:46:13255:13255	1281757	13	True				
ANR	1281778	Statement	UF_SCRIPT	518:8:13276:13284	1281757	14	True				
ANR	1281779	Statement	","	518:17:13285:13285	1281757	15	True				
ANR	1281780	Statement	L	519:8:13320:13320	1281757	16	True				
ANR	1281781	Statement	""""""	519:9:13321:13322	1281757	17	True				
ANR	1281782	ExpressionStatement		519:13:13325:13325	1281757	4	True				
ANR	1281783	IdentifierDeclStatement	DWORD nParam = 0 ;	520:1:13352:13368	1281757	5	True				
ANR	1281784	IdentifierDecl	nParam = 0		1281757	0					
ANR	1281785	IdentifierDeclType	DWORD		1281757	0					
ANR	1281786	Identifier	nParam		1281757	1					
ANR	1281787	AssignmentExpression	nParam = 0		1281757	2		=			
ANR	1281788	Identifier	nParam		1281757	0					
ANR	1281789	PrimaryExpression	0		1281757	1					
ANR	1281790	IdentifierDeclStatement	"NET_API_STATUS nerr = NetUserAdd ( 0 , 1 , ( BYTE * ) & userInfo , & nParam ) ;"	529:1:13553:13676	1281757	6	True				
ANR	1281791	IdentifierDecl	"nerr = NetUserAdd ( 0 , 1 , ( BYTE * ) & userInfo , & nParam )"		1281757	0					
ANR	1281792	IdentifierDeclType	NET_API_STATUS		1281757	0					
ANR	1281793	Identifier	nerr		1281757	1					
ANR	1281794	AssignmentExpression	"nerr = NetUserAdd ( 0 , 1 , ( BYTE * ) & userInfo , & nParam )"		1281757	2		=			
ANR	1281795	Identifier	nerr		1281757	0					
ANR	1281796	CallExpression	"NetUserAdd ( 0 , 1 , ( BYTE * ) & userInfo , & nParam )"		1281757	1					
ANR	1281797	Callee	NetUserAdd		1281757	0					
ANR	1281798	Identifier	NetUserAdd		1281757	0					
ANR	1281799	ArgumentList	0		1281757	1					
ANR	1281800	Argument	0		1281757	0					
ANR	1281801	PrimaryExpression	0		1281757	0					
ANR	1281802	Argument	1		1281757	1					
ANR	1281803	PrimaryExpression	1		1281757	0					
ANR	1281804	Argument	( BYTE * ) & userInfo		1281757	2					
ANR	1281805	CastExpression	( BYTE * ) & userInfo		1281757	0					
ANR	1281806	CastTarget	BYTE *		1281757	0					
ANR	1281807	UnaryOperationExpression	& userInfo		1281757	1					
ANR	1281808	UnaryOperator	&		1281757	0					
ANR	1281809	Identifier	userInfo		1281757	1					
ANR	1281810	Argument	& nParam		1281757	3					
ANR	1281811	UnaryOperationExpression	& nParam		1281757	0					
ANR	1281812	UnaryOperator	&		1281757	0					
ANR	1281813	Identifier	nParam		1281757	1					
ANR	1281814	IfStatement	if ( NERR_Success == nerr )		1281757	7					
ANR	1281815	Condition	NERR_Success == nerr	534:6:13685:13704	1281757	0	True				
ANR	1281816	EqualityExpression	NERR_Success == nerr		1281757	0		==			
ANR	1281817	Identifier	NERR_Success		1281757	0					
ANR	1281818	Identifier	nerr		1281757	1					
ANR	1281819	CompoundStatement		22:29:657:657	1281757	1					
ANR	1281820	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Account %s created successfully\\n"" , accountname )"	535:2:13712:13781	1281757	0	True				
ANR	1281821	CallExpression	"dprintf ( D_FULLDEBUG , ""Account %s created successfully\\n"" , accountname )"		1281757	0					
ANR	1281822	Callee	dprintf		1281757	0					
ANR	1281823	Identifier	dprintf		1281757	0					
ANR	1281824	ArgumentList	D_FULLDEBUG		1281757	1					
ANR	1281825	Argument	D_FULLDEBUG		1281757	0					
ANR	1281826	Identifier	D_FULLDEBUG		1281757	0					
ANR	1281827	Argument	"""Account %s created successfully\\n"""		1281757	1					
ANR	1281828	PrimaryExpression	"""Account %s created successfully\\n"""		1281757	0					
ANR	1281829	Argument	accountname		1281757	2					
ANR	1281830	Identifier	accountname		1281757	0					
ANR	1281831	ElseStatement	else		1281757	0					
ANR	1281832	IfStatement	if ( NERR_UserExists == nerr )		1281757	0					
ANR	1281833	Condition	NERR_UserExists == nerr	536:13:13796:13818	1281757	0	True				
ANR	1281834	EqualityExpression	NERR_UserExists == nerr		1281757	0		==			
ANR	1281835	Identifier	NERR_UserExists		1281757	0					
ANR	1281836	Identifier	nerr		1281757	1					
ANR	1281837	CompoundStatement		24:39:771:771	1281757	1					
ANR	1281838	ExpressionStatement	"dprintf ( D_ALWAYS , ""Account %s already exists!\\n"" , accountname )"	537:2:13826:13887	1281757	0	True				
ANR	1281839	CallExpression	"dprintf ( D_ALWAYS , ""Account %s already exists!\\n"" , accountname )"		1281757	0					
ANR	1281840	Callee	dprintf		1281757	0					
ANR	1281841	Identifier	dprintf		1281757	0					
ANR	1281842	ArgumentList	D_ALWAYS		1281757	1					
ANR	1281843	Argument	D_ALWAYS		1281757	0					
ANR	1281844	Identifier	D_ALWAYS		1281757	0					
ANR	1281845	Argument	"""Account %s already exists!\\n"""		1281757	1					
ANR	1281846	PrimaryExpression	"""Account %s already exists!\\n"""		1281757	0					
ANR	1281847	Argument	accountname		1281757	2					
ANR	1281848	Identifier	accountname		1281757	0					
ANR	1281849	ElseStatement	else		1281757	0					
ANR	1281850	CompoundStatement		27:8:911:911	1281757	0					
ANR	1281851	ExpressionStatement	"dprintf ( D_ALWAYS , ""Account %s creation failed! (err=%d)\\n"" , accountname , nerr )"	540:2:13966:14042	1281757	0	True				
ANR	1281852	CallExpression	"dprintf ( D_ALWAYS , ""Account %s creation failed! (err=%d)\\n"" , accountname , nerr )"		1281757	0					
ANR	1281853	Callee	dprintf		1281757	0					
ANR	1281854	Identifier	dprintf		1281757	0					
ANR	1281855	ArgumentList	D_ALWAYS		1281757	1					
ANR	1281856	Argument	D_ALWAYS		1281757	0					
ANR	1281857	Identifier	D_ALWAYS		1281757	0					
ANR	1281858	Argument	"""Account %s creation failed! (err=%d)\\n"""		1281757	1					
ANR	1281859	PrimaryExpression	"""Account %s creation failed! (err=%d)\\n"""		1281757	0					
ANR	1281860	Argument	accountname		1281757	2					
ANR	1281861	Identifier	accountname		1281757	0					
ANR	1281862	Argument	nerr		1281757	3					
ANR	1281863	Identifier	nerr		1281757	0					
ANR	1281864	ReturnType	void		1281757	1					
ANR	1281865	Identifier	dynuser :: createaccount		1281757	2					
ANR	1281866	ParameterList			1281757	3					
ANR	1281867	CFGEntryNode	ENTRY		1281757		True				
ANR	1281868	CFGExitNode	EXIT		1281757		True				
ANR	1281869	Symbol	NetUserAdd		1281757						
ANR	1281870	Symbol	nerr		1281757						
ANR	1281871	Symbol	accountname		1281757						
ANR	1281872	Symbol	nParam		1281757						
ANR	1281873	Symbol	& nParam		1281757						
ANR	1281874	Symbol	NERR_Success		1281757						
ANR	1281875	Symbol	NERR_UserExists		1281757						
ANR	1281876	Symbol	D_ALWAYS		1281757						
ANR	1281877	Symbol	D_FULLDEBUG		1281757						
ANR	1281878	Symbol	& userInfo		1281757						
ANR	1281879	Function	dynuser :: hide_user	558:0:14390:16058							
ANR	1281880	FunctionDef	dynuser :: hide_user ()		1281879	0					
ANR	1281881	CompoundStatement		558:26:14416:16058	1281879	0					
ANR	1281882	IdentifierDeclStatement	HKEY subkey = NULL ;	560:1:14420:14439	1281879	0	True				
ANR	1281883	IdentifierDecl	subkey = NULL		1281879	0					
ANR	1281884	IdentifierDeclType	HKEY		1281879	0					
ANR	1281885	Identifier	subkey		1281879	1					
ANR	1281886	AssignmentExpression	subkey = NULL		1281879	2		=			
ANR	1281887	Identifier	NULL		1281879	0					
ANR	1281888	Identifier	NULL		1281879	1					
ANR	1281889	Statement	LPCTSTR	561:1:14442:14448	1281879	1	True				
ANR	1281890	Statement	subkey_name	561:9:14450:14460	1281879	2	True				
ANR	1281891	Statement	=	561:21:14462:14462	1281879	3	True				
ANR	1281892	Statement	"""SOFTWARE\\\\Microsoft\\\\Windows NT\\\\"""	561:23:14464:14498	1281879	4	True				
ANR	1281893	ExpressionStatement	"""CurrentVersion\\\\Winlogon\\\\SpecialAccounts\\\\UserList"""	562:2:14502:14555	1281879	5	True				
ANR	1281894	PrimaryExpression	"""CurrentVersion\\\\Winlogon\\\\SpecialAccounts\\\\UserList"""		1281879	0					
ANR	1281895	IdentifierDeclStatement	DWORD hide_user = 0 ;	563:1:14558:14577	1281879	6	True				
ANR	1281896	IdentifierDecl	hide_user = 0		1281879	0					
ANR	1281897	IdentifierDeclType	DWORD		1281879	0					
ANR	1281898	Identifier	hide_user		1281879	1					
ANR	1281899	AssignmentExpression	hide_user = 0		1281879	2		=			
ANR	1281900	Identifier	hide_user		1281879	0					
ANR	1281901	PrimaryExpression	0		1281879	1					
ANR	1281902	IdentifierDeclStatement	LONG ok = ERROR_SUCCESS ;	564:1:14580:14605	1281879	7	True				
ANR	1281903	IdentifierDecl	ok = ERROR_SUCCESS		1281879	0					
ANR	1281904	IdentifierDeclType	LONG		1281879	0					
ANR	1281905	Identifier	ok		1281879	1					
ANR	1281906	AssignmentExpression	ok = ERROR_SUCCESS		1281879	2		=			
ANR	1281907	Identifier	ERROR_SUCCESS		1281879	0					
ANR	1281908	Identifier	ERROR_SUCCESS		1281879	1					
ANR	1281909	IdentifierDeclStatement	REGSAM rsAccessMask = 0 ;	565:1:14608:14629	1281879	8	True				
ANR	1281910	IdentifierDecl	rsAccessMask = 0		1281879	0					
ANR	1281911	IdentifierDeclType	REGSAM		1281879	0					
ANR	1281912	Identifier	rsAccessMask		1281879	1					
ANR	1281913	AssignmentExpression	rsAccessMask = 0		1281879	2		=			
ANR	1281914	Identifier	rsAccessMask		1281879	0					
ANR	1281915	PrimaryExpression	0		1281879	1					
ANR	1281916	IdentifierDeclStatement	DWORD dwDisposition = 0 ;	566:1:14632:14653	1281879	9	True				
ANR	1281917	IdentifierDecl	dwDisposition = 0		1281879	0					
ANR	1281918	IdentifierDeclType	DWORD		1281879	0					
ANR	1281919	Identifier	dwDisposition		1281879	1					
ANR	1281920	AssignmentExpression	dwDisposition = 0		1281879	2		=			
ANR	1281921	Identifier	dwDisposition		1281879	0					
ANR	1281922	PrimaryExpression	0		1281879	1					
ANR	1281923	ExpressionStatement	rsAccessMask = KEY_WOW64_64KEY	569:2:14700:14730	1281879	10	True				
ANR	1281924	AssignmentExpression	rsAccessMask = KEY_WOW64_64KEY		1281879	0		=			
ANR	1281925	Identifier	rsAccessMask		1281879	0					
ANR	1281926	Identifier	KEY_WOW64_64KEY		1281879	1					
ANR	1281927	Statement	__try	571:1:14735:14739	1281879	11	True				
ANR	1281928	CompoundStatement		14:7:324:324	1281879	12					
ANR	1281929	ExpressionStatement	"ok = RegCreateKeyEx ( HKEY_LOCAL_MACHINE , subkey_name , 0 , NULL , REG_OPTION_NON_VOLATILE , KEY_READ | KEY_WRITE | rsAccessMask , NULL , & subkey , & dwDisposition )"	576:2:14830:15028	1281879	0	True				
ANR	1281930	AssignmentExpression	"ok = RegCreateKeyEx ( HKEY_LOCAL_MACHINE , subkey_name , 0 , NULL , REG_OPTION_NON_VOLATILE , KEY_READ | KEY_WRITE | rsAccessMask , NULL , & subkey , & dwDisposition )"		1281879	0		=			
ANR	1281931	Identifier	ok		1281879	0					
ANR	1281932	CallExpression	"RegCreateKeyEx ( HKEY_LOCAL_MACHINE , subkey_name , 0 , NULL , REG_OPTION_NON_VOLATILE , KEY_READ | KEY_WRITE | rsAccessMask , NULL , & subkey , & dwDisposition )"		1281879	1					
ANR	1281933	Callee	RegCreateKeyEx		1281879	0					
ANR	1281934	Identifier	RegCreateKeyEx		1281879	0					
ANR	1281935	ArgumentList	HKEY_LOCAL_MACHINE		1281879	1					
ANR	1281936	Argument	HKEY_LOCAL_MACHINE		1281879	0					
ANR	1281937	Identifier	HKEY_LOCAL_MACHINE		1281879	0					
ANR	1281938	Argument	subkey_name		1281879	1					
ANR	1281939	Identifier	subkey_name		1281879	0					
ANR	1281940	Argument	0		1281879	2					
ANR	1281941	PrimaryExpression	0		1281879	0					
ANR	1281942	Argument	NULL		1281879	3					
ANR	1281943	Identifier	NULL		1281879	0					
ANR	1281944	Argument	REG_OPTION_NON_VOLATILE		1281879	4					
ANR	1281945	Identifier	REG_OPTION_NON_VOLATILE		1281879	0					
ANR	1281946	Argument	KEY_READ | KEY_WRITE | rsAccessMask		1281879	5					
ANR	1281947	InclusiveOrExpression	KEY_READ | KEY_WRITE | rsAccessMask		1281879	0		|			
ANR	1281948	Identifier	KEY_READ		1281879	0					
ANR	1281949	InclusiveOrExpression	KEY_WRITE | rsAccessMask		1281879	1		|			
ANR	1281950	Identifier	KEY_WRITE		1281879	0					
ANR	1281951	Identifier	rsAccessMask		1281879	1					
ANR	1281952	Argument	NULL		1281879	6					
ANR	1281953	Identifier	NULL		1281879	0					
ANR	1281954	Argument	& subkey		1281879	7					
ANR	1281955	UnaryOperationExpression	& subkey		1281879	0					
ANR	1281956	UnaryOperator	&		1281879	0					
ANR	1281957	Identifier	subkey		1281879	1					
ANR	1281958	Argument	& dwDisposition		1281879	8					
ANR	1281959	UnaryOperationExpression	& dwDisposition		1281879	0					
ANR	1281960	UnaryOperator	&		1281879	0					
ANR	1281961	Identifier	dwDisposition		1281879	1					
ANR	1281962	IfStatement	if ( ERROR_SUCCESS != ok || NULL == subkey )		1281879	1					
ANR	1281963	Condition	ERROR_SUCCESS != ok || NULL == subkey	587:7:15038:15074	1281879	0	True				
ANR	1281964	OrExpression	ERROR_SUCCESS != ok || NULL == subkey		1281879	0		||			
ANR	1281965	EqualityExpression	ERROR_SUCCESS != ok		1281879	0		!=			
ANR	1281966	Identifier	ERROR_SUCCESS		1281879	0					
ANR	1281967	Identifier	ok		1281879	1					
ANR	1281968	EqualityExpression	NULL == subkey		1281879	1		==			
ANR	1281969	Identifier	NULL		1281879	0					
ANR	1281970	Identifier	subkey		1281879	1					
ANR	1281971	CompoundStatement		30:47:661:661	1281879	1					
ANR	1281972	Statement	dprintf	588:3:15083:15089	1281879	0	True				
ANR	1281973	Statement	(	588:11:15091:15091	1281879	1	True				
ANR	1281974	Statement	D_FULLDEBUG	588:13:15093:15103	1281879	2	True				
ANR	1281975	Statement	","	588:24:15104:15104	1281879	3	True				
ANR	1281976	Statement	"""dynuser::hide_user() """	588:25:15105:15127	1281879	4	True				
ANR	1281977	Statement	"""RegCreateKey(HKEY_LOCAL_MACHINE, %s) failed """	589:4:15133:15178	1281879	5	True				
ANR	1281978	Statement	"""(error=%d)\\n"""	590:4:15184:15197	1281879	6	True				
ANR	1281979	Statement	","	590:18:15198:15198	1281879	7	True				
ANR	1281980	Statement	subkey_name	590:20:15200:15210	1281879	8	True				
ANR	1281981	Statement	","	590:31:15211:15211	1281879	9	True				
ANR	1281982	Statement	GetLastError	590:33:15213:15224	1281879	10	True				
ANR	1281983	Statement	(	590:46:15226:15226	1281879	11	True				
ANR	1281984	Statement	)	590:47:15227:15227	1281879	12	True				
ANR	1281985	Statement	)	590:49:15229:15229	1281879	13	True				
ANR	1281986	ExpressionStatement		590:50:15230:15230	1281879	14	True				
ANR	1281987	ExpressionStatement	__leave	591:3:15235:15242	1281879	15	True				
ANR	1281988	Identifier	__leave		1281879	0					
ANR	1281989	ExpressionStatement	"ok = RegSetValueEx ( subkey , accountname , 0 , REG_DWORD , ( LPBYTE ) & hide_user , sizeof ( DWORD ) )"	595:2:15316:15441	1281879	2	True				
ANR	1281990	AssignmentExpression	"ok = RegSetValueEx ( subkey , accountname , 0 , REG_DWORD , ( LPBYTE ) & hide_user , sizeof ( DWORD ) )"		1281879	0		=			
ANR	1281991	Identifier	ok		1281879	0					
ANR	1281992	CallExpression	"RegSetValueEx ( subkey , accountname , 0 , REG_DWORD , ( LPBYTE ) & hide_user , sizeof ( DWORD ) )"		1281879	1					
ANR	1281993	Callee	RegSetValueEx		1281879	0					
ANR	1281994	Identifier	RegSetValueEx		1281879	0					
ANR	1281995	ArgumentList	subkey		1281879	1					
ANR	1281996	Argument	subkey		1281879	0					
ANR	1281997	Identifier	subkey		1281879	0					
ANR	1281998	Argument	accountname		1281879	1					
ANR	1281999	Identifier	accountname		1281879	0					
ANR	1282000	Argument	0		1281879	2					
ANR	1282001	PrimaryExpression	0		1281879	0					
ANR	1282002	Argument	REG_DWORD		1281879	3					
ANR	1282003	Identifier	REG_DWORD		1281879	0					
ANR	1282004	Argument	( LPBYTE ) & hide_user		1281879	4					
ANR	1282005	CastExpression	( LPBYTE ) & hide_user		1281879	0					
ANR	1282006	CastTarget	LPBYTE		1281879	0					
ANR	1282007	UnaryOperationExpression	& hide_user		1281879	1					
ANR	1282008	UnaryOperator	&		1281879	0					
ANR	1282009	Identifier	hide_user		1281879	1					
ANR	1282010	Argument	sizeof ( DWORD )		1281879	5					
ANR	1282011	SizeofExpression	sizeof ( DWORD )		1281879	0					
ANR	1282012	Sizeof	sizeof		1281879	0					
ANR	1282013	SizeofOperand	DWORD		1281879	1					
ANR	1282014	IfStatement	if ( ERROR_SUCCESS != ok )		1281879	3					
ANR	1282015	Condition	ERROR_SUCCESS != ok	603:7:15451:15469	1281879	0	True				
ANR	1282016	EqualityExpression	ERROR_SUCCESS != ok		1281879	0		!=			
ANR	1282017	Identifier	ERROR_SUCCESS		1281879	0					
ANR	1282018	Identifier	ok		1281879	1					
ANR	1282019	CompoundStatement		46:29:1056:1056	1281879	1					
ANR	1282020	Statement	dprintf	604:3:15478:15484	1281879	0	True				
ANR	1282021	Statement	(	604:11:15486:15486	1281879	1	True				
ANR	1282022	Statement	D_FULLDEBUG	604:13:15488:15498	1281879	2	True				
ANR	1282023	Statement	","	604:24:15499:15499	1281879	3	True				
ANR	1282024	Statement	"""dynuser::hide_user() """	604:25:15500:15522	1281879	4	True				
ANR	1282025	Statement	"""RegSetValueEx(%s, hide_user=0)) failed """	605:4:15528:15568	1281879	5	True				
ANR	1282026	Statement	"""(error=%d)\\n"""	606:4:15574:15587	1281879	6	True				
ANR	1282027	Statement	","	606:18:15588:15588	1281879	7	True				
ANR	1282028	Statement	accountname	606:20:15590:15600	1281879	8	True				
ANR	1282029	Statement	","	606:31:15601:15601	1281879	9	True				
ANR	1282030	Statement	GetLastError	606:33:15603:15614	1281879	10	True				
ANR	1282031	Statement	(	606:46:15616:15616	1281879	11	True				
ANR	1282032	Statement	)	606:47:15617:15617	1281879	12	True				
ANR	1282033	Statement	)	606:49:15619:15619	1281879	13	True				
ANR	1282034	ExpressionStatement		606:50:15620:15620	1281879	14	True				
ANR	1282035	ExpressionStatement	__leave	607:3:15625:15632	1281879	15	True				
ANR	1282036	Identifier	__leave		1281879	0					
ANR	1282037	Statement	__finally	614:1:15751:15759	1281879	13	True				
ANR	1282038	CompoundStatement		57:11:1344:1344	1281879	14					
ANR	1282039	IfStatement	if ( NULL != subkey )		1281879	0					
ANR	1282040	Condition	NULL != subkey	616:7:15773:15786	1281879	0	True				
ANR	1282041	EqualityExpression	NULL != subkey		1281879	0		!=			
ANR	1282042	Identifier	NULL		1281879	0					
ANR	1282043	Identifier	subkey		1281879	1					
ANR	1282044	CompoundStatement		59:24:1373:1373	1281879	1					
ANR	1282045	ExpressionStatement	RegCloseKey ( subkey )	617:3:15795:15817	1281879	0	True				
ANR	1282046	CallExpression	RegCloseKey ( subkey )		1281879	0					
ANR	1282047	Callee	RegCloseKey		1281879	0					
ANR	1282048	Identifier	RegCloseKey		1281879	0					
ANR	1282049	ArgumentList	subkey		1281879	1					
ANR	1282050	Argument	subkey		1281879	0					
ANR	1282051	Identifier	subkey		1281879	0					
ANR	1282052	IfStatement	if ( ERROR_SUCCESS != ok )		1281879	15					
ANR	1282053	Condition	ERROR_SUCCESS != ok	622:6:15836:15854	1281879	0	True				
ANR	1282054	EqualityExpression	ERROR_SUCCESS != ok		1281879	0		!=			
ANR	1282055	Identifier	ERROR_SUCCESS		1281879	0					
ANR	1282056	Identifier	ok		1281879	1					
ANR	1282057	CompoundStatement		65:28:1441:1441	1281879	1					
ANR	1282058	Statement	dprintf	623:2:15862:15868	1281879	0	True				
ANR	1282059	Statement	(	623:10:15870:15870	1281879	1	True				
ANR	1282060	Statement	D_FULLDEBUG	623:12:15872:15882	1281879	2	True				
ANR	1282061	Statement	","	623:23:15883:15883	1281879	3	True				
ANR	1282062	Statement	"""dynuser::hide_user() failed """	623:24:15884:15913	1281879	4	True				
ANR	1282063	Statement	"""to hide user \\""%s\\"" from the Windows Welcom Screen """	624:3:15918:15970	1281879	5	True				
ANR	1282064	Statement	"""(error=%d)\\n"""	625:3:15975:15988	1281879	6	True				
ANR	1282065	Statement	","	625:17:15989:15989	1281879	7	True				
ANR	1282066	Statement	accountname	625:19:15991:16001	1281879	8	True				
ANR	1282067	Statement	","	625:30:16002:16002	1281879	9	True				
ANR	1282068	Statement	GetLastError	625:32:16004:16015	1281879	10	True				
ANR	1282069	Statement	(	625:45:16017:16017	1281879	11	True				
ANR	1282070	Statement	)	625:46:16018:16018	1281879	12	True				
ANR	1282071	Statement	)	625:48:16020:16020	1281879	13	True				
ANR	1282072	ExpressionStatement		625:49:16021:16021	1281879	14	True				
ANR	1282073	ReturnStatement	return false ;	626:2:16025:16037	1281879	15	True				
ANR	1282074	Identifier	false		1281879	0					
ANR	1282075	ReturnStatement	return true ;	629:1:16044:16055	1281879	16	True				
ANR	1282076	Identifier	true		1281879	0					
ANR	1282077	ReturnType	bool		1281879	1					
ANR	1282078	Identifier	dynuser :: hide_user		1281879	2					
ANR	1282079	ParameterList			1281879	3					
ANR	1282080	CFGEntryNode	ENTRY		1281879		True				
ANR	1282081	CFGExitNode	EXIT		1281879		True				
ANR	1282082	Symbol	KEY_WOW64_64KEY		1281879						
ANR	1282083	Symbol	NULL		1281879						
ANR	1282084	Symbol	subkey		1281879						
ANR	1282085	Symbol	HKEY_LOCAL_MACHINE		1281879						
ANR	1282086	Symbol	rsAccessMask		1281879						
ANR	1282087	Symbol	RegSetValueEx		1281879						
ANR	1282088	Symbol	false		1281879						
ANR	1282089	Symbol	& subkey		1281879						
ANR	1282090	Symbol	hide_user		1281879						
ANR	1282091	Symbol	REG_OPTION_NON_VOLATILE		1281879						
ANR	1282092	Symbol	KEY_WRITE		1281879						
ANR	1282093	Symbol	& hide_user		1281879						
ANR	1282094	Symbol	subkey_name		1281879						
ANR	1282095	Symbol	KEY_READ		1281879						
ANR	1282096	Symbol	RegCreateKeyEx		1281879						
ANR	1282097	Symbol	ERROR_SUCCESS		1281879						
ANR	1282098	Symbol	accountname		1281879						
ANR	1282099	Symbol	dwDisposition		1281879						
ANR	1282100	Symbol	& dwDisposition		1281879						
ANR	1282101	Symbol	true		1281879						
ANR	1282102	Symbol	REG_DWORD		1281879						
ANR	1282103	Symbol	ok		1281879						
ANR	1282104	Function	dynuser :: add_users_group	639:0:16142:16971							
ANR	1282105	FunctionDef	dynuser :: add_users_group ()		1282104	0					
ANR	1282106	CompoundStatement		639:32:16174:16971	1282104	0					
ANR	1282107	IdentifierDeclStatement	LOCALGROUP_MEMBERS_INFO_0 lmi ;	641:1:16212:16241	1282104	0	True				
ANR	1282108	IdentifierDecl	lmi		1282104	0					
ANR	1282109	IdentifierDeclType	LOCALGROUP_MEMBERS_INFO_0		1282104	0					
ANR	1282110	Identifier	lmi		1282104	1					
ANR	1282111	IdentifierDeclStatement	wchar_t UserGroupName [ 255 ] ;	642:1:16244:16270	1282104	1	True				
ANR	1282112	IdentifierDecl	UserGroupName [ 255 ]		1282104	0					
ANR	1282113	IdentifierDeclType	wchar_t [ 255 ]		1282104	0					
ANR	1282114	Identifier	UserGroupName		1282104	1					
ANR	1282115	PrimaryExpression	255		1282104	2					
ANR	1282116	IdentifierDeclStatement	char * tmp ;	643:1:16273:16282	1282104	2	True				
ANR	1282117	IdentifierDecl	* tmp		1282104	0					
ANR	1282118	IdentifierDeclType	char *		1282104	0					
ANR	1282119	Identifier	tmp		1282104	1					
ANR	1282120	ExpressionStatement	tmp = getUserGroupName ( )	645:1:16286:16310	1282104	3	True				
ANR	1282121	AssignmentExpression	tmp = getUserGroupName ( )		1282104	0		=			
ANR	1282122	Identifier	tmp		1282104	0					
ANR	1282123	CallExpression	getUserGroupName ( )		1282104	1					
ANR	1282124	Callee	getUserGroupName		1282104	0					
ANR	1282125	Identifier	getUserGroupName		1282104	0					
ANR	1282126	ArgumentList			1282104	1					
ANR	1282127	Statement	swprintf	646:1:16313:16320	1282104	4	True				
ANR	1282128	Statement	(	646:9:16321:16321	1282104	5	True				
ANR	1282129	Statement	UserGroupName	646:10:16322:16334	1282104	6	True				
ANR	1282130	Statement	","	646:23:16335:16335	1282104	7	True				
ANR	1282131	Statement	L	646:25:16337:16337	1282104	8	True				
ANR	1282132	Statement	"""%S"""	646:26:16338:16341	1282104	9	True				
ANR	1282133	Statement	","	646:30:16342:16342	1282104	10	True				
ANR	1282134	Statement	tmp	646:32:16344:16346	1282104	11	True				
ANR	1282135	Statement	)	646:35:16347:16347	1282104	12	True				
ANR	1282136	ExpressionStatement		646:36:16348:16348	1282104	13	True				
ANR	1282137	Statement	delete	647:1:16351:16356	1282104	14	True				
ANR	1282138	Statement	[	647:7:16357:16357	1282104	15	True				
ANR	1282139	Statement	]	647:8:16358:16358	1282104	16	True				
ANR	1282140	ExpressionStatement	tmp	647:10:16360:16363	1282104	17	True				
ANR	1282141	Identifier	tmp		1282104	0					
ANR	1282142	ExpressionStatement	tmp = NULL	648:1:16366:16376	1282104	18	True				
ANR	1282143	AssignmentExpression	tmp = NULL		1282104	0		=			
ANR	1282144	Identifier	tmp		1282104	0					
ANR	1282145	Identifier	NULL		1282104	1					
ANR	1282146	ExpressionStatement	lmi . lgrmi0_sid = this -> psid	650:1:16380:16407	1282104	19	True				
ANR	1282147	AssignmentExpression	lmi . lgrmi0_sid = this -> psid		1282104	0		=			
ANR	1282148	MemberAccess	lmi . lgrmi0_sid		1282104	0					
ANR	1282149	Identifier	lmi		1282104	0					
ANR	1282150	Identifier	lgrmi0_sid		1282104	1					
ANR	1282151	PtrMemberAccess	this -> psid		1282104	1					
ANR	1282152	Identifier	this		1282104	0					
ANR	1282153	Identifier	psid		1282104	1					
ANR	1282154	IdentifierDeclStatement	"NET_API_STATUS nerr = NetLocalGroupAddMembers ( NULL , UserGroupName , 0 , ( LPBYTE ) & lmi , 1 ) ;"	652:1:16411:16667	1282104	20	True				
ANR	1282155	IdentifierDecl	"nerr = NetLocalGroupAddMembers ( NULL , UserGroupName , 0 , ( LPBYTE ) & lmi , 1 )"		1282104	0					
ANR	1282156	IdentifierDeclType	NET_API_STATUS		1282104	0					
ANR	1282157	Identifier	nerr		1282104	1					
ANR	1282158	AssignmentExpression	"nerr = NetLocalGroupAddMembers ( NULL , UserGroupName , 0 , ( LPBYTE ) & lmi , 1 )"		1282104	2		=			
ANR	1282159	Identifier	nerr		1282104	0					
ANR	1282160	CallExpression	"NetLocalGroupAddMembers ( NULL , UserGroupName , 0 , ( LPBYTE ) & lmi , 1 )"		1282104	1					
ANR	1282161	Callee	NetLocalGroupAddMembers		1282104	0					
ANR	1282162	Identifier	NetLocalGroupAddMembers		1282104	0					
ANR	1282163	ArgumentList	NULL		1282104	1					
ANR	1282164	Argument	NULL		1282104	0					
ANR	1282165	Identifier	NULL		1282104	0					
ANR	1282166	Argument	UserGroupName		1282104	1					
ANR	1282167	Identifier	UserGroupName		1282104	0					
ANR	1282168	Argument	0		1282104	2					
ANR	1282169	PrimaryExpression	0		1282104	0					
ANR	1282170	Argument	( LPBYTE ) & lmi		1282104	3					
ANR	1282171	CastExpression	( LPBYTE ) & lmi		1282104	0					
ANR	1282172	CastTarget	LPBYTE		1282104	0					
ANR	1282173	UnaryOperationExpression	& lmi		1282104	1					
ANR	1282174	UnaryOperator	&		1282104	0					
ANR	1282175	Identifier	lmi		1282104	1					
ANR	1282176	Argument	1		1282104	4					
ANR	1282177	PrimaryExpression	1		1282104	0					
ANR	1282178	IfStatement	if ( NERR_Success == nerr )		1282104	21					
ANR	1282179	Condition	NERR_Success == nerr	660:6:16676:16695	1282104	0	True				
ANR	1282180	EqualityExpression	NERR_Success == nerr		1282104	0		==			
ANR	1282181	Identifier	NERR_Success		1282104	0					
ANR	1282182	Identifier	nerr		1282104	1					
ANR	1282183	CompoundStatement		22:29:524:524	1282104	1					
ANR	1282184	ReturnStatement	return true ;	661:2:16703:16714	1282104	0	True				
ANR	1282185	Identifier	true		1282104	0					
ANR	1282186	ElseStatement	else		1282104	0					
ANR	1282187	IfStatement	if ( nerr == ERROR_ACCESS_DENIED )		1282104	0					
ANR	1282188	Condition	nerr == ERROR_ACCESS_DENIED	663:11:16730:16756	1282104	0	True				
ANR	1282189	EqualityExpression	nerr == ERROR_ACCESS_DENIED		1282104	0		==			
ANR	1282190	Identifier	nerr		1282104	0					
ANR	1282191	Identifier	ERROR_ACCESS_DENIED		1282104	1					
ANR	1282192	CompoundStatement		25:41:585:585	1282104	1					
ANR	1282193	ExpressionStatement	"EXCEPT ( ""User %s not added to \\""Users\\"" group, access denied."" , accountname )"	664:2:16764:16838	1282104	0	True				
ANR	1282194	CallExpression	"EXCEPT ( ""User %s not added to \\""Users\\"" group, access denied."" , accountname )"		1282104	0					
ANR	1282195	Callee	EXCEPT		1282104	0					
ANR	1282196	Identifier	EXCEPT		1282104	0					
ANR	1282197	ArgumentList	"""User %s not added to \\""Users\\"" group, access denied."""		1282104	1					
ANR	1282198	Argument	"""User %s not added to \\""Users\\"" group, access denied."""		1282104	0					
ANR	1282199	PrimaryExpression	"""User %s not added to \\""Users\\"" group, access denied."""		1282104	0					
ANR	1282200	Argument	accountname		1282104	1					
ANR	1282201	Identifier	accountname		1282104	0					
ANR	1282202	ExpressionStatement	"EXCEPT ( ""Cannot add %s to \\""Users\\"" group, unknown error (err=%d)."" , accountname , nerr )"	668:1:16868:16952	1282104	22	True				
ANR	1282203	CallExpression	"EXCEPT ( ""Cannot add %s to \\""Users\\"" group, unknown error (err=%d)."" , accountname , nerr )"		1282104	0					
ANR	1282204	Callee	EXCEPT		1282104	0					
ANR	1282205	Identifier	EXCEPT		1282104	0					
ANR	1282206	ArgumentList	"""Cannot add %s to \\""Users\\"" group, unknown error (err=%d)."""		1282104	1					
ANR	1282207	Argument	"""Cannot add %s to \\""Users\\"" group, unknown error (err=%d)."""		1282104	0					
ANR	1282208	PrimaryExpression	"""Cannot add %s to \\""Users\\"" group, unknown error (err=%d)."""		1282104	0					
ANR	1282209	Argument	accountname		1282104	1					
ANR	1282210	Identifier	accountname		1282104	0					
ANR	1282211	Argument	nerr		1282104	2					
ANR	1282212	Identifier	nerr		1282104	0					
ANR	1282213	ReturnStatement	return false ;	670:1:16957:16969	1282104	23	True				
ANR	1282214	Identifier	false		1282104	0					
ANR	1282215	ReturnType	bool		1282104	1					
ANR	1282216	Identifier	dynuser :: add_users_group		1282104	2					
ANR	1282217	ParameterList			1282104	3					
ANR	1282218	CFGEntryNode	ENTRY		1282104		True				
ANR	1282219	CFGExitNode	EXIT		1282104		True				
ANR	1282220	Symbol	getUserGroupName		1282104						
ANR	1282221	Symbol	NULL		1282104						
ANR	1282222	Symbol	nerr		1282104						
ANR	1282223	Symbol	this		1282104						
ANR	1282224	Symbol	NERR_Success		1282104						
ANR	1282225	Symbol	false		1282104						
ANR	1282226	Symbol	lmi		1282104						
ANR	1282227	Symbol	& lmi		1282104						
ANR	1282228	Symbol	this -> psid		1282104						
ANR	1282229	Symbol	* this		1282104						
ANR	1282230	Symbol	ERROR_ACCESS_DENIED		1282104						
ANR	1282231	Symbol	accountname		1282104						
ANR	1282232	Symbol	tmp		1282104						
ANR	1282233	Symbol	lmi . lgrmi0_sid		1282104						
ANR	1282234	Symbol	UserGroupName		1282104						
ANR	1282235	Symbol	true		1282104						
ANR	1282236	Symbol	NetLocalGroupAddMembers		1282104						
ANR	1282237	Function	dynuser :: del_users_group	680:0:17061:17735							
ANR	1282238	FunctionDef	dynuser :: del_users_group ()		1282237	0					
ANR	1282239	CompoundStatement		680:32:17093:17735	1282237	0					
ANR	1282240	IdentifierDeclStatement	LOCALGROUP_MEMBERS_INFO_0 lmi ;	682:1:17131:17160	1282237	0	True				
ANR	1282241	IdentifierDecl	lmi		1282237	0					
ANR	1282242	IdentifierDeclType	LOCALGROUP_MEMBERS_INFO_0		1282237	0					
ANR	1282243	Identifier	lmi		1282237	1					
ANR	1282244	IdentifierDeclStatement	wchar_t UserGroupName [ 255 ] ;	683:1:17163:17189	1282237	1	True				
ANR	1282245	IdentifierDecl	UserGroupName [ 255 ]		1282237	0					
ANR	1282246	IdentifierDeclType	wchar_t [ 255 ]		1282237	0					
ANR	1282247	Identifier	UserGroupName		1282237	1					
ANR	1282248	PrimaryExpression	255		1282237	2					
ANR	1282249	IdentifierDeclStatement	char * tmp ;	684:1:17192:17201	1282237	2	True				
ANR	1282250	IdentifierDecl	* tmp		1282237	0					
ANR	1282251	IdentifierDeclType	char *		1282237	0					
ANR	1282252	Identifier	tmp		1282237	1					
ANR	1282253	ExpressionStatement	tmp = getUserGroupName ( )	686:1:17205:17229	1282237	3	True				
ANR	1282254	AssignmentExpression	tmp = getUserGroupName ( )		1282237	0		=			
ANR	1282255	Identifier	tmp		1282237	0					
ANR	1282256	CallExpression	getUserGroupName ( )		1282237	1					
ANR	1282257	Callee	getUserGroupName		1282237	0					
ANR	1282258	Identifier	getUserGroupName		1282237	0					
ANR	1282259	ArgumentList			1282237	1					
ANR	1282260	Statement	swprintf	687:1:17232:17239	1282237	4	True				
ANR	1282261	Statement	(	687:9:17240:17240	1282237	5	True				
ANR	1282262	Statement	UserGroupName	687:10:17241:17253	1282237	6	True				
ANR	1282263	Statement	","	687:23:17254:17254	1282237	7	True				
ANR	1282264	Statement	L	687:25:17256:17256	1282237	8	True				
ANR	1282265	Statement	"""%S"""	687:26:17257:17260	1282237	9	True				
ANR	1282266	Statement	","	687:30:17261:17261	1282237	10	True				
ANR	1282267	Statement	tmp	687:32:17263:17265	1282237	11	True				
ANR	1282268	Statement	)	687:35:17266:17266	1282237	12	True				
ANR	1282269	ExpressionStatement		687:36:17267:17267	1282237	13	True				
ANR	1282270	Statement	delete	688:1:17270:17275	1282237	14	True				
ANR	1282271	Statement	[	688:7:17276:17276	1282237	15	True				
ANR	1282272	Statement	]	688:8:17277:17277	1282237	16	True				
ANR	1282273	ExpressionStatement	tmp	688:10:17279:17282	1282237	17	True				
ANR	1282274	Identifier	tmp		1282237	0					
ANR	1282275	ExpressionStatement	tmp = NULL	689:1:17285:17295	1282237	18	True				
ANR	1282276	AssignmentExpression	tmp = NULL		1282237	0		=			
ANR	1282277	Identifier	tmp		1282237	0					
ANR	1282278	Identifier	NULL		1282237	1					
ANR	1282279	ExpressionStatement	lmi . lgrmi0_sid = this -> psid	691:1:17299:17326	1282237	19	True				
ANR	1282280	AssignmentExpression	lmi . lgrmi0_sid = this -> psid		1282237	0		=			
ANR	1282281	MemberAccess	lmi . lgrmi0_sid		1282237	0					
ANR	1282282	Identifier	lmi		1282237	0					
ANR	1282283	Identifier	lgrmi0_sid		1282237	1					
ANR	1282284	PtrMemberAccess	this -> psid		1282237	1					
ANR	1282285	Identifier	this		1282237	0					
ANR	1282286	Identifier	psid		1282237	1					
ANR	1282287	IdentifierDeclStatement	"NET_API_STATUS nerr = NetLocalGroupDelMembers ( NULL , UserGroupName , 0 , ( LPBYTE ) & lmi , 1 ) ;"	693:1:17330:17584	1282237	20	True				
ANR	1282288	IdentifierDecl	"nerr = NetLocalGroupDelMembers ( NULL , UserGroupName , 0 , ( LPBYTE ) & lmi , 1 )"		1282237	0					
ANR	1282289	IdentifierDeclType	NET_API_STATUS		1282237	0					
ANR	1282290	Identifier	nerr		1282237	1					
ANR	1282291	AssignmentExpression	"nerr = NetLocalGroupDelMembers ( NULL , UserGroupName , 0 , ( LPBYTE ) & lmi , 1 )"		1282237	2		=			
ANR	1282292	Identifier	nerr		1282237	0					
ANR	1282293	CallExpression	"NetLocalGroupDelMembers ( NULL , UserGroupName , 0 , ( LPBYTE ) & lmi , 1 )"		1282237	1					
ANR	1282294	Callee	NetLocalGroupDelMembers		1282237	0					
ANR	1282295	Identifier	NetLocalGroupDelMembers		1282237	0					
ANR	1282296	ArgumentList	NULL		1282237	1					
ANR	1282297	Argument	NULL		1282237	0					
ANR	1282298	Identifier	NULL		1282237	0					
ANR	1282299	Argument	UserGroupName		1282237	1					
ANR	1282300	Identifier	UserGroupName		1282237	0					
ANR	1282301	Argument	0		1282237	2					
ANR	1282302	PrimaryExpression	0		1282237	0					
ANR	1282303	Argument	( LPBYTE ) & lmi		1282237	3					
ANR	1282304	CastExpression	( LPBYTE ) & lmi		1282237	0					
ANR	1282305	CastTarget	LPBYTE		1282237	0					
ANR	1282306	UnaryOperationExpression	& lmi		1282237	1					
ANR	1282307	UnaryOperator	&		1282237	0					
ANR	1282308	Identifier	lmi		1282237	1					
ANR	1282309	Argument	1		1282237	4					
ANR	1282310	PrimaryExpression	1		1282237	0					
ANR	1282311	IfStatement	if ( NERR_Success == nerr )		1282237	21					
ANR	1282312	Condition	NERR_Success == nerr	701:6:17593:17612	1282237	0	True				
ANR	1282313	EqualityExpression	NERR_Success == nerr		1282237	0		==			
ANR	1282314	Identifier	NERR_Success		1282237	0					
ANR	1282315	Identifier	nerr		1282237	1					
ANR	1282316	CompoundStatement		22:29:522:522	1282237	1					
ANR	1282317	ReturnStatement	return true ;	702:2:17620:17631	1282237	0	True				
ANR	1282318	Identifier	true		1282237	0					
ANR	1282319	ExpressionStatement	"dprintf ( D_ALWAYS , ""dynuser::del_users_group() NetLocalGroupDelMembers failed\\n"" )"	705:1:17638:17717	1282237	22	True				
ANR	1282320	CallExpression	"dprintf ( D_ALWAYS , ""dynuser::del_users_group() NetLocalGroupDelMembers failed\\n"" )"		1282237	0					
ANR	1282321	Callee	dprintf		1282237	0					
ANR	1282322	Identifier	dprintf		1282237	0					
ANR	1282323	ArgumentList	D_ALWAYS		1282237	1					
ANR	1282324	Argument	D_ALWAYS		1282237	0					
ANR	1282325	Identifier	D_ALWAYS		1282237	0					
ANR	1282326	Argument	"""dynuser::del_users_group() NetLocalGroupDelMembers failed\\n"""		1282237	1					
ANR	1282327	PrimaryExpression	"""dynuser::del_users_group() NetLocalGroupDelMembers failed\\n"""		1282237	0					
ANR	1282328	ReturnStatement	return false ;	706:1:17721:17733	1282237	23	True				
ANR	1282329	Identifier	false		1282237	0					
ANR	1282330	ReturnType	bool		1282237	1					
ANR	1282331	Identifier	dynuser :: del_users_group		1282237	2					
ANR	1282332	ParameterList			1282237	3					
ANR	1282333	CFGEntryNode	ENTRY		1282237		True				
ANR	1282334	CFGExitNode	EXIT		1282237		True				
ANR	1282335	Symbol	getUserGroupName		1282237						
ANR	1282336	Symbol	NULL		1282237						
ANR	1282337	Symbol	nerr		1282237						
ANR	1282338	Symbol	this		1282237						
ANR	1282339	Symbol	NERR_Success		1282237						
ANR	1282340	Symbol	D_ALWAYS		1282237						
ANR	1282341	Symbol	false		1282237						
ANR	1282342	Symbol	lmi		1282237						
ANR	1282343	Symbol	& lmi		1282237						
ANR	1282344	Symbol	this -> psid		1282237						
ANR	1282345	Symbol	* this		1282237						
ANR	1282346	Symbol	tmp		1282237						
ANR	1282347	Symbol	lmi . lgrmi0_sid		1282237						
ANR	1282348	Symbol	UserGroupName		1282237						
ANR	1282349	Symbol	true		1282237						
ANR	1282350	Symbol	NetLocalGroupDelMembers		1282237						
ANR	1282351	Function	dynuser :: dump_groups	711:0:17766:18638							
ANR	1282352	FunctionDef	dynuser :: dump_groups ()		1282351	0					
ANR	1282353	CompoundStatement		711:28:17794:18638	1282351	0					
ANR	1282354	IdentifierDeclStatement	LOCALGROUP_INFO_0 * lgz ;	713:1:17798:17820	1282351	0	True				
ANR	1282355	IdentifierDecl	* lgz		1282351	0					
ANR	1282356	IdentifierDeclType	LOCALGROUP_INFO_0 *		1282351	0					
ANR	1282357	Identifier	lgz		1282351	1					
ANR	1282358	IdentifierDeclStatement	unsigned long numentries ;	714:1:17823:17847	1282351	1	True				
ANR	1282359	IdentifierDecl	numentries		1282351	0					
ANR	1282360	IdentifierDeclType	unsigned long		1282351	0					
ANR	1282361	Identifier	numentries		1282351	1					
ANR	1282362	IdentifierDeclStatement	unsigned long totalentries ;	715:1:17850:17876	1282351	2	True				
ANR	1282363	IdentifierDecl	totalentries		1282351	0					
ANR	1282364	IdentifierDeclType	unsigned long		1282351	0					
ANR	1282365	Identifier	totalentries		1282351	1					
ANR	1282366	IdentifierDeclStatement	"NET_API_STATUS nerr = NetLocalGroupEnum ( NULL , ( DWORD ) 0 , ( BYTE * * ) & lgz , 100 * sizeof ( LOCALGROUP_INFO_0 ) , & numentries , & totalentries , NULL ) ;"	717:1:17880:18246	1282351	3	True				
ANR	1282367	IdentifierDecl	"nerr = NetLocalGroupEnum ( NULL , ( DWORD ) 0 , ( BYTE * * ) & lgz , 100 * sizeof ( LOCALGROUP_INFO_0 ) , & numentries , & totalentries , NULL )"		1282351	0					
ANR	1282368	IdentifierDeclType	NET_API_STATUS		1282351	0					
ANR	1282369	Identifier	nerr		1282351	1					
ANR	1282370	AssignmentExpression	"nerr = NetLocalGroupEnum ( NULL , ( DWORD ) 0 , ( BYTE * * ) & lgz , 100 * sizeof ( LOCALGROUP_INFO_0 ) , & numentries , & totalentries , NULL )"		1282351	2		=			
ANR	1282371	Identifier	nerr		1282351	0					
ANR	1282372	CallExpression	"NetLocalGroupEnum ( NULL , ( DWORD ) 0 , ( BYTE * * ) & lgz , 100 * sizeof ( LOCALGROUP_INFO_0 ) , & numentries , & totalentries , NULL )"		1282351	1					
ANR	1282373	Callee	NetLocalGroupEnum		1282351	0					
ANR	1282374	Identifier	NetLocalGroupEnum		1282351	0					
ANR	1282375	ArgumentList	NULL		1282351	1					
ANR	1282376	Argument	NULL		1282351	0					
ANR	1282377	Identifier	NULL		1282351	0					
ANR	1282378	Argument	( DWORD ) 0		1282351	1					
ANR	1282379	CastExpression	( DWORD ) 0		1282351	0					
ANR	1282380	CastTarget	DWORD		1282351	0					
ANR	1282381	PrimaryExpression	0		1282351	1					
ANR	1282382	Argument	( BYTE * * ) & lgz		1282351	2					
ANR	1282383	CastExpression	( BYTE * * ) & lgz		1282351	0					
ANR	1282384	CastTarget	BYTE * *		1282351	0					
ANR	1282385	UnaryOperationExpression	& lgz		1282351	1					
ANR	1282386	UnaryOperator	&		1282351	0					
ANR	1282387	Identifier	lgz		1282351	1					
ANR	1282388	Argument	100 * sizeof ( LOCALGROUP_INFO_0 )		1282351	3					
ANR	1282389	MultiplicativeExpression	100 * sizeof ( LOCALGROUP_INFO_0 )		1282351	0		*			
ANR	1282390	PrimaryExpression	100		1282351	0					
ANR	1282391	SizeofExpression	sizeof ( LOCALGROUP_INFO_0 )		1282351	1					
ANR	1282392	Sizeof	sizeof		1282351	0					
ANR	1282393	SizeofOperand	LOCALGROUP_INFO_0		1282351	1					
ANR	1282394	Argument	& numentries		1282351	4					
ANR	1282395	UnaryOperationExpression	& numentries		1282351	0					
ANR	1282396	UnaryOperator	&		1282351	0					
ANR	1282397	Identifier	numentries		1282351	1					
ANR	1282398	Argument	& totalentries		1282351	5					
ANR	1282399	UnaryOperationExpression	& totalentries		1282351	0					
ANR	1282400	UnaryOperator	&		1282351	0					
ANR	1282401	Identifier	totalentries		1282351	1					
ANR	1282402	Argument	NULL		1282351	6					
ANR	1282403	Identifier	NULL		1282351	0					
ANR	1282404	IfStatement	if ( nerr == NERR_Success )		1282351	4					
ANR	1282405	Condition	nerr == NERR_Success	727:6:18255:18274	1282351	0	True				
ANR	1282406	EqualityExpression	nerr == NERR_Success		1282351	0		==			
ANR	1282407	Identifier	nerr		1282351	0					
ANR	1282408	Identifier	NERR_Success		1282351	1					
ANR	1282409	CompoundStatement		17:29:483:483	1282351	1					
ANR	1282410	ExpressionStatement	"cout << ""Got the dump of "" << numentries << "" things!"" << endl"	728:2:18282:18338	1282351	0	True				
ANR	1282411	ShiftExpression	"cout << ""Got the dump of "" << numentries << "" things!"" << endl"		1282351	0		<<			
ANR	1282412	Identifier	cout		1282351	0					
ANR	1282413	ShiftExpression	"""Got the dump of "" << numentries << "" things!"" << endl"		1282351	1		<<			
ANR	1282414	PrimaryExpression	"""Got the dump of """		1282351	0					
ANR	1282415	ShiftExpression	"numentries << "" things!"" << endl"		1282351	1		<<			
ANR	1282416	Identifier	numentries		1282351	0					
ANR	1282417	ShiftExpression	""" things!"" << endl"		1282351	1		<<			
ANR	1282418	PrimaryExpression	""" things!"""		1282351	0					
ANR	1282419	Identifier	endl		1282351	1					
ANR	1282420	ForStatement	for ( int i = 0 ; i < numentries ; i ++ )		1282351	1					
ANR	1282421	ForInit	int i = 0 ;	729:7:18347:18356	1282351	0	True				
ANR	1282422	IdentifierDeclStatement	int i = 0 ;		1282351	0					
ANR	1282423	IdentifierDecl	i = 0		1282351	0					
ANR	1282424	IdentifierDeclType	int		1282351	0					
ANR	1282425	Identifier	i		1282351	1					
ANR	1282426	AssignmentExpression	i = 0		1282351	2		=			
ANR	1282427	Identifier	i		1282351	0					
ANR	1282428	PrimaryExpression	0		1282351	1					
ANR	1282429	Condition	i < numentries	729:18:18358:18371	1282351	1	True				
ANR	1282430	RelationalExpression	i < numentries		1282351	0		<			
ANR	1282431	Identifier	i		1282351	0					
ANR	1282432	Identifier	numentries		1282351	1					
ANR	1282433	PostIncDecOperationExpression	i ++	729:34:18374:18376	1282351	2	True				
ANR	1282434	Identifier	i		1282351	0					
ANR	1282435	IncDec	++		1282351	1					
ANR	1282436	CompoundStatement		19:39:584:584	1282351	3					
ANR	1282437	ExpressionStatement	"cout << ""Group "" << i << "":\\t"""	730:3:18384:18410	1282351	0	True				
ANR	1282438	ShiftExpression	"cout << ""Group "" << i << "":\\t"""		1282351	0		<<			
ANR	1282439	Identifier	cout		1282351	0					
ANR	1282440	ShiftExpression	"""Group "" << i << "":\\t"""		1282351	1		<<			
ANR	1282441	PrimaryExpression	"""Group """		1282351	0					
ANR	1282442	ShiftExpression	"i << "":\\t"""		1282351	1		<<			
ANR	1282443	Identifier	i		1282351	0					
ANR	1282444	PrimaryExpression	""":\\t"""		1282351	1					
ANR	1282445	ExpressionStatement	wcout << lgz [ i ] . lgrpi0_name	731:3:18415:18442	1282351	1	True				
ANR	1282446	ShiftExpression	wcout << lgz [ i ] . lgrpi0_name		1282351	0		<<			
ANR	1282447	Identifier	wcout		1282351	0					
ANR	1282448	MemberAccess	lgz [ i ] . lgrpi0_name		1282351	1					
ANR	1282449	ArrayIndexing	lgz [ i ]		1282351	0					
ANR	1282450	Identifier	lgz		1282351	0					
ANR	1282451	Identifier	i		1282351	1					
ANR	1282452	Identifier	lgrpi0_name		1282351	1					
ANR	1282453	ExpressionStatement	"cout << ""\\t"""	732:3:18447:18459	1282351	2	True				
ANR	1282454	ShiftExpression	"cout << ""\\t"""		1282351	0		<<			
ANR	1282455	Identifier	cout		1282351	0					
ANR	1282456	PrimaryExpression	"""\\t"""		1282351	1					
ANR	1282457	ExpressionStatement	cout << lgz [ i ] . lgrpi0_name << endl	734:3:18465:18499	1282351	3	True				
ANR	1282458	ShiftExpression	cout << lgz [ i ] . lgrpi0_name << endl		1282351	0		<<			
ANR	1282459	Identifier	cout		1282351	0					
ANR	1282460	ShiftExpression	lgz [ i ] . lgrpi0_name << endl		1282351	1		<<			
ANR	1282461	MemberAccess	lgz [ i ] . lgrpi0_name		1282351	0					
ANR	1282462	ArrayIndexing	lgz [ i ]		1282351	0					
ANR	1282463	Identifier	lgz		1282351	0					
ANR	1282464	Identifier	i		1282351	1					
ANR	1282465	Identifier	lgrpi0_name		1282351	1					
ANR	1282466	Identifier	endl		1282351	1					
ANR	1282467	ReturnStatement	return true ;	737:2:18508:18519	1282351	2	True				
ANR	1282468	Identifier	true		1282351	0					
ANR	1282469	ExpressionStatement	"cout << ""Didn't get the dump!"" << endl"	740:1:18526:18562	1282351	5	True				
ANR	1282470	ShiftExpression	"cout << ""Didn't get the dump!"" << endl"		1282351	0		<<			
ANR	1282471	Identifier	cout		1282351	0					
ANR	1282472	ShiftExpression	"""Didn't get the dump!"" << endl"		1282351	1		<<			
ANR	1282473	PrimaryExpression	"""Didn't get the dump!"""		1282351	0					
ANR	1282474	Identifier	endl		1282351	1					
ANR	1282475	ReturnStatement	return false ;	744:1:18623:18635	1282351	6	True				
ANR	1282476	Identifier	false		1282351	0					
ANR	1282477	ReturnType	bool		1282351	1					
ANR	1282478	Identifier	dynuser :: dump_groups		1282351	2					
ANR	1282479	ParameterList			1282351	3					
ANR	1282480	CFGEntryNode	ENTRY		1282351		True				
ANR	1282481	CFGExitNode	EXIT		1282351		True				
ANR	1282482	Symbol	& lgz		1282351						
ANR	1282483	Symbol	NULL		1282351						
ANR	1282484	Symbol	nerr		1282351						
ANR	1282485	Symbol	& numentries		1282351						
ANR	1282486	Symbol	NERR_Success		1282351						
ANR	1282487	Symbol	false		1282351						
ANR	1282488	Symbol	i		1282351						
ANR	1282489	Symbol	* lgz		1282351						
ANR	1282490	Symbol	& totalentries		1282351						
ANR	1282491	Symbol	NetLocalGroupEnum		1282351						
ANR	1282492	Symbol	totalentries		1282351						
ANR	1282493	Symbol	* i		1282351						
ANR	1282494	Symbol	true		1282351						
ANR	1282495	Symbol	numentries		1282351						
ANR	1282496	Symbol	lgz		1282351						
ANR	1282497	Function	dynuser :: update_psid	749:0:18649:19273							
ANR	1282498	FunctionDef	dynuser :: update_psid ()		1282497	0					
ANR	1282499	CompoundStatement		749:28:18677:19273	1282497	0					
ANR	1282500	IdentifierDeclStatement	SID_NAME_USE snu ;	750:1:18680:18696	1282497	0	True				
ANR	1282501	IdentifierDecl	snu		1282497	0					
ANR	1282502	IdentifierDeclType	SID_NAME_USE		1282497	0					
ANR	1282503	Identifier	snu		1282497	1					
ANR	1282504	IdentifierDeclStatement	bool result ;	751:1:18699:18710	1282497	1	True				
ANR	1282505	IdentifierDecl	result		1282497	0					
ANR	1282506	IdentifierDeclType	bool		1282497	0					
ANR	1282507	Identifier	result		1282497	1					
ANR	1282508	ExpressionStatement	result = TRUE	753:1:18715:18728	1282497	2	True				
ANR	1282509	AssignmentExpression	result = TRUE		1282497	0		=			
ANR	1282510	Identifier	result		1282497	0					
ANR	1282511	Identifier	TRUE		1282497	1					
ANR	1282512	ExpressionStatement	sidBufferSize = max_sid_length	755:1:18733:18763	1282497	3	True				
ANR	1282513	AssignmentExpression	sidBufferSize = max_sid_length		1282497	0		=			
ANR	1282514	Identifier	sidBufferSize		1282497	0					
ANR	1282515	Identifier	max_sid_length		1282497	1					
ANR	1282516	ExpressionStatement	domainBufferSize = max_domain_length	756:1:18766:18802	1282497	4	True				
ANR	1282517	AssignmentExpression	domainBufferSize = max_domain_length		1282497	0		=			
ANR	1282518	Identifier	domainBufferSize		1282497	0					
ANR	1282519	Identifier	max_domain_length		1282497	1					
ANR	1282520	IfStatement	"if ( ! LookupAccountName ( 0 , accountname , psid , & sidBufferSize , domainBuffer , & domainBufferSize , & snu ) )"		1282497	5					
ANR	1282521	Condition	"! LookupAccountName ( 0 , accountname , psid , & sidBufferSize , domainBuffer , & domainBufferSize , & snu )"	758:6:18811:18969	1282497	0	True				
ANR	1282522	UnaryOperationExpression	"! LookupAccountName ( 0 , accountname , psid , & sidBufferSize , domainBuffer , & domainBufferSize , & snu )"		1282497	0					
ANR	1282523	UnaryOperator	!		1282497	0					
ANR	1282524	CallExpression	"LookupAccountName ( 0 , accountname , psid , & sidBufferSize , domainBuffer , & domainBufferSize , & snu )"		1282497	1					
ANR	1282525	Callee	LookupAccountName		1282497	0					
ANR	1282526	Identifier	LookupAccountName		1282497	0					
ANR	1282527	ArgumentList	0		1282497	1					
ANR	1282528	Argument	0		1282497	0					
ANR	1282529	PrimaryExpression	0		1282497	0					
ANR	1282530	Argument	accountname		1282497	1					
ANR	1282531	Identifier	accountname		1282497	0					
ANR	1282532	Argument	psid		1282497	2					
ANR	1282533	Identifier	psid		1282497	0					
ANR	1282534	Argument	& sidBufferSize		1282497	3					
ANR	1282535	UnaryOperationExpression	& sidBufferSize		1282497	0					
ANR	1282536	UnaryOperator	&		1282497	0					
ANR	1282537	Identifier	sidBufferSize		1282497	1					
ANR	1282538	Argument	domainBuffer		1282497	4					
ANR	1282539	Identifier	domainBuffer		1282497	0					
ANR	1282540	Argument	& domainBufferSize		1282497	5					
ANR	1282541	UnaryOperationExpression	& domainBufferSize		1282497	0					
ANR	1282542	UnaryOperator	&		1282497	0					
ANR	1282543	Identifier	domainBufferSize		1282497	1					
ANR	1282544	Argument	& snu		1282497	6					
ANR	1282545	UnaryOperationExpression	& snu		1282497	0					
ANR	1282546	UnaryOperator	&		1282497	0					
ANR	1282547	Identifier	snu		1282497	1					
ANR	1282548	CompoundStatement		15:1:314:314	1282497	1					
ANR	1282549	Statement	dprintf	766:2:19108:19114	1282497	0	True				
ANR	1282550	Statement	(	766:9:19115:19115	1282497	1	True				
ANR	1282551	Statement	D_FULLDEBUG	766:10:19116:19126	1282497	2	True				
ANR	1282552	Statement	","	766:21:19127:19127	1282497	3	True				
ANR	1282553	Statement	"""dynuser::update_psid() LookupAccountName(%s)"""	766:23:19129:19174	1282497	4	True				
ANR	1282554	Statement	""" failed!\\n"""	767:3:19179:19190	1282497	5	True				
ANR	1282555	Statement	","	767:15:19191:19191	1282497	6	True				
ANR	1282556	Statement	accountname	767:17:19193:19203	1282497	7	True				
ANR	1282557	Statement	)	767:28:19204:19204	1282497	8	True				
ANR	1282558	ExpressionStatement		767:29:19205:19205	1282497	9	True				
ANR	1282559	ExpressionStatement	result = FALSE	769:2:19210:19224	1282497	10	True				
ANR	1282560	AssignmentExpression	result = FALSE		1282497	0		=			
ANR	1282561	Identifier	result		1282497	0					
ANR	1282562	Identifier	FALSE		1282497	1					
ANR	1282563	ElseStatement	else		1282497	0					
ANR	1282564	CompoundStatement		22:8:556:556	1282497	0					
ANR	1282565	ExpressionStatement	result = TRUE	771:2:19238:19251	1282497	0	True				
ANR	1282566	AssignmentExpression	result = TRUE		1282497	0		=			
ANR	1282567	Identifier	result		1282497	0					
ANR	1282568	Identifier	TRUE		1282497	1					
ANR	1282569	ReturnStatement	return result ;	774:1:19258:19271	1282497	6	True				
ANR	1282570	Identifier	result		1282497	0					
ANR	1282571	ReturnType	bool		1282497	1					
ANR	1282572	Identifier	dynuser :: update_psid		1282497	2					
ANR	1282573	ParameterList			1282497	3					
ANR	1282574	CFGEntryNode	ENTRY		1282497		True				
ANR	1282575	CFGExitNode	EXIT		1282497		True				
ANR	1282576	Symbol	domainBufferSize		1282497						
ANR	1282577	Symbol	& snu		1282497						
ANR	1282578	Symbol	TRUE		1282497						
ANR	1282579	Symbol	max_sid_length		1282497						
ANR	1282580	Symbol	psid		1282497						
ANR	1282581	Symbol	domainBuffer		1282497						
ANR	1282582	Symbol	result		1282497						
ANR	1282583	Symbol	sidBufferSize		1282497						
ANR	1282584	Symbol	accountname		1282497						
ANR	1282585	Symbol	& domainBufferSize		1282497						
ANR	1282586	Symbol	FALSE		1282497						
ANR	1282587	Symbol	snu		1282497						
ANR	1282588	Symbol	LookupAccountName		1282497						
ANR	1282589	Symbol	max_domain_length		1282497						
ANR	1282590	Symbol	& sidBufferSize		1282497						
ANR	1282591	Function	dynuser :: deleteuser	778:0:19277:22488							
ANR	1282592	FunctionDef	dynuser :: deleteuser (char const * username)		1282591	0					
ANR	1282593	CompoundStatement		778:49:19326:22488	1282591	0					
ANR	1282594	IdentifierDeclStatement	bool retval = true ;	780:1:19330:19348	1282591	0	True				
ANR	1282595	IdentifierDecl	retval = true		1282591	0					
ANR	1282596	IdentifierDeclType	bool		1282591	0					
ANR	1282597	Identifier	retval		1282591	1					
ANR	1282598	AssignmentExpression	retval = true		1282591	2		=			
ANR	1282599	Identifier	true		1282591	0					
ANR	1282600	Identifier	true		1282591	1					
ANR	1282601	IfStatement	if ( ! username )		1282591	1					
ANR	1282602	Condition	! username	782:5:19356:19364	1282591	0	True				
ANR	1282603	UnaryOperationExpression	! username		1282591	0					
ANR	1282604	UnaryOperator	!		1282591	0					
ANR	1282605	Identifier	username		1282591	1					
ANR	1282606	CompoundStatement		5:16:40:40	1282591	1					
ANR	1282607	ReturnStatement	return false ;	783:2:19371:19383	1282591	0	True				
ANR	1282608	Identifier	false		1282591	0					
ANR	1282609	IdentifierDeclStatement	const char * prefix = ACCOUNT_PREFIX ;	789:1:19593:19628	1282591	2	True				
ANR	1282610	IdentifierDecl	* prefix = ACCOUNT_PREFIX		1282591	0					
ANR	1282611	IdentifierDeclType	const char *		1282591	0					
ANR	1282612	Identifier	prefix		1282591	1					
ANR	1282613	AssignmentExpression	* prefix = ACCOUNT_PREFIX		1282591	2		=			
ANR	1282614	Identifier	ACCOUNT_PREFIX		1282591	0					
ANR	1282615	Identifier	ACCOUNT_PREFIX		1282591	1					
ANR	1282616	IfStatement	"if ( strncmp ( prefix , username , strlen ( prefix ) ) != 0 )"		1282591	3					
ANR	1282617	Condition	"strncmp ( prefix , username , strlen ( prefix ) ) != 0"	790:6:19636:19679	1282591	0	True				
ANR	1282618	EqualityExpression	"strncmp ( prefix , username , strlen ( prefix ) ) != 0"		1282591	0		!=			
ANR	1282619	CallExpression	"strncmp ( prefix , username , strlen ( prefix ) )"		1282591	0					
ANR	1282620	Callee	strncmp		1282591	0					
ANR	1282621	Identifier	strncmp		1282591	0					
ANR	1282622	ArgumentList	prefix		1282591	1					
ANR	1282623	Argument	prefix		1282591	0					
ANR	1282624	Identifier	prefix		1282591	0					
ANR	1282625	Argument	username		1282591	1					
ANR	1282626	Identifier	username		1282591	0					
ANR	1282627	Argument	strlen ( prefix )		1282591	2					
ANR	1282628	CallExpression	strlen ( prefix )		1282591	0					
ANR	1282629	Callee	strlen		1282591	0					
ANR	1282630	Identifier	strlen		1282591	0					
ANR	1282631	ArgumentList	prefix		1282591	1					
ANR	1282632	Argument	prefix		1282591	0					
ANR	1282633	Identifier	prefix		1282591	0					
ANR	1282634	PrimaryExpression	0		1282591	1					
ANR	1282635	CompoundStatement		13:53:356:356	1282591	1					
ANR	1282636	ExpressionStatement	"dprintf ( D_ALWAYS , ""Yikes! Asked to delete account %s - ig!\\n"" , username )"	791:2:19687:19765	1282591	0	True				
ANR	1282637	CallExpression	"dprintf ( D_ALWAYS , ""Yikes! Asked to delete account %s - ig!\\n"" , username )"		1282591	0					
ANR	1282638	Callee	dprintf		1282591	0					
ANR	1282639	Identifier	dprintf		1282591	0					
ANR	1282640	ArgumentList	D_ALWAYS		1282591	1					
ANR	1282641	Argument	D_ALWAYS		1282591	0					
ANR	1282642	Identifier	D_ALWAYS		1282591	0					
ANR	1282643	Argument	"""Yikes! Asked to delete account %s - ig!\\n"""		1282591	1					
ANR	1282644	PrimaryExpression	"""Yikes! Asked to delete account %s - ig!\\n"""		1282591	0					
ANR	1282645	Argument	username		1282591	2					
ANR	1282646	Identifier	username		1282591	0					
ANR	1282647	ReturnStatement	return false ;	794:2:19769:19781	1282591	1	True				
ANR	1282648	Identifier	false		1282591	0					
ANR	1282649	IfStatement	if ( ! accountname )		1282591	4					
ANR	1282650	Condition	! accountname	798:5:19833:19844	1282591	0	True				
ANR	1282651	UnaryOperationExpression	! accountname		1282591	0					
ANR	1282652	UnaryOperator	!		1282591	0					
ANR	1282653	Identifier	accountname		1282591	1					
ANR	1282654	ExpressionStatement	accountname = new char [ 100 ]	799:2:19850:19877	1282591	1	True				
ANR	1282655	AssignmentExpression	accountname = new char [ 100 ]		1282591	0		=			
ANR	1282656	Identifier	accountname		1282591	0					
ANR	1282657	PrimaryExpression	100		1282591	1					
ANR	1282658	IfStatement	if ( ! accountname_t )		1282591	5					
ANR	1282659	Condition	! accountname_t	800:5:19884:19897	1282591	0	True				
ANR	1282660	UnaryOperationExpression	! accountname_t		1282591	0					
ANR	1282661	UnaryOperator	!		1282591	0					
ANR	1282662	Identifier	accountname_t		1282591	1					
ANR	1282663	ExpressionStatement	accountname_t = new wchar_t [ 100 ]	801:2:19902:19934	1282591	1	True				
ANR	1282664	AssignmentExpression	accountname_t = new wchar_t [ 100 ]		1282591	0		=			
ANR	1282665	Identifier	accountname_t		1282591	0					
ANR	1282666	PrimaryExpression	100		1282591	1					
ANR	1282667	ExpressionStatement	"strcpy ( accountname , username )"	803:1:19938:19968	1282591	6	True				
ANR	1282668	CallExpression	"strcpy ( accountname , username )"		1282591	0					
ANR	1282669	Callee	strcpy		1282591	0					
ANR	1282670	Identifier	strcpy		1282591	0					
ANR	1282671	ArgumentList	accountname		1282591	1					
ANR	1282672	Argument	accountname		1282591	0					
ANR	1282673	Identifier	accountname		1282591	0					
ANR	1282674	Argument	username		1282591	1					
ANR	1282675	Identifier	username		1282591	0					
ANR	1282676	ExpressionStatement	this -> update_t ( )	805:1:20018:20035	1282591	7	True				
ANR	1282677	CallExpression	this -> update_t ( )		1282591	0					
ANR	1282678	Callee	this -> update_t		1282591	0					
ANR	1282679	PtrMemberAccess	this -> update_t		1282591	0					
ANR	1282680	Identifier	this		1282591	0					
ANR	1282681	Identifier	update_t		1282591	1					
ANR	1282682	ArgumentList			1282591	1					
ANR	1282683	ExpressionStatement	this -> update_psid ( )	806:1:20091:20110	1282591	8	True				
ANR	1282684	CallExpression	this -> update_psid ( )		1282591	0					
ANR	1282685	Callee	this -> update_psid		1282591	0					
ANR	1282686	PtrMemberAccess	this -> update_psid		1282591	0					
ANR	1282687	Identifier	this		1282591	0					
ANR	1282688	Identifier	update_psid		1282591	1					
ANR	1282689	ArgumentList			1282591	1					
ANR	1282690	IdentifierDeclStatement	UNICODE_STRING machine ;	811:1:20161:20183	1282591	9	True				
ANR	1282691	IdentifierDecl	machine		1282591	0					
ANR	1282692	IdentifierDeclType	UNICODE_STRING		1282591	0					
ANR	1282693	Identifier	machine		1282591	1					
ANR	1282694	CompoundStatement		37:2:902:980	1282591	10					
ANR	1282695	IdentifierDeclStatement	PWKSTA_INFO_100 pwkiWorkstationInfo ;	813:2:20190:20225	1282591	0	True				
ANR	1282696	IdentifierDecl	pwkiWorkstationInfo		1282591	0					
ANR	1282697	IdentifierDeclType	PWKSTA_INFO_100		1282591	0					
ANR	1282698	Identifier	pwkiWorkstationInfo		1282591	1					
ANR	1282699	IdentifierDeclStatement	"DWORD netret = NetWkstaGetInfo ( NULL , 100 , ( LPBYTE * ) & pwkiWorkstationInfo ) ;"	814:2:20229:20307	1282591	1	True				
ANR	1282700	IdentifierDecl	"netret = NetWkstaGetInfo ( NULL , 100 , ( LPBYTE * ) & pwkiWorkstationInfo )"		1282591	0					
ANR	1282701	IdentifierDeclType	DWORD		1282591	0					
ANR	1282702	Identifier	netret		1282591	1					
ANR	1282703	AssignmentExpression	"netret = NetWkstaGetInfo ( NULL , 100 , ( LPBYTE * ) & pwkiWorkstationInfo )"		1282591	2		=			
ANR	1282704	Identifier	netret		1282591	0					
ANR	1282705	CallExpression	"NetWkstaGetInfo ( NULL , 100 , ( LPBYTE * ) & pwkiWorkstationInfo )"		1282591	1					
ANR	1282706	Callee	NetWkstaGetInfo		1282591	0					
ANR	1282707	Identifier	NetWkstaGetInfo		1282591	0					
ANR	1282708	ArgumentList	NULL		1282591	1					
ANR	1282709	Argument	NULL		1282591	0					
ANR	1282710	Identifier	NULL		1282591	0					
ANR	1282711	Argument	100		1282591	1					
ANR	1282712	PrimaryExpression	100		1282591	0					
ANR	1282713	Argument	( LPBYTE * ) & pwkiWorkstationInfo		1282591	2					
ANR	1282714	CastExpression	( LPBYTE * ) & pwkiWorkstationInfo		1282591	0					
ANR	1282715	CastTarget	LPBYTE *		1282591	0					
ANR	1282716	UnaryOperationExpression	& pwkiWorkstationInfo		1282591	1					
ANR	1282717	UnaryOperator	&		1282591	0					
ANR	1282718	Identifier	pwkiWorkstationInfo		1282591	1					
ANR	1282719	IfStatement	if ( netret != NERR_Success )		1282591	2					
ANR	1282720	Condition	netret != NERR_Success	816:7:20316:20337	1282591	0	True				
ANR	1282721	EqualityExpression	netret != NERR_Success		1282591	0		!=			
ANR	1282722	Identifier	netret		1282591	0					
ANR	1282723	Identifier	NERR_Success		1282591	1					
ANR	1282724	CompoundStatement		39:32:1014:1014	1282591	1					
ANR	1282725	ExpressionStatement	"EXCEPT ( ""dynuser::deleteuser(): Cannot determine workstation name\\n"" )"	817:3:20346:20414	1282591	0	True				
ANR	1282726	CallExpression	"EXCEPT ( ""dynuser::deleteuser(): Cannot determine workstation name\\n"" )"		1282591	0					
ANR	1282727	Callee	EXCEPT		1282591	0					
ANR	1282728	Identifier	EXCEPT		1282591	0					
ANR	1282729	ArgumentList	"""dynuser::deleteuser(): Cannot determine workstation name\\n"""		1282591	1					
ANR	1282730	Argument	"""dynuser::deleteuser(): Cannot determine workstation name\\n"""		1282591	0					
ANR	1282731	PrimaryExpression	"""dynuser::deleteuser(): Cannot determine workstation name\\n"""		1282591	0					
ANR	1282732	ExpressionStatement	"InitString ( machine , ( wchar_t * ) pwkiWorkstationInfo -> wki100_computername )"	819:2:20422:20499	1282591	3	True				
ANR	1282733	CallExpression	"InitString ( machine , ( wchar_t * ) pwkiWorkstationInfo -> wki100_computername )"		1282591	0					
ANR	1282734	Callee	InitString		1282591	0					
ANR	1282735	Identifier	InitString		1282591	0					
ANR	1282736	ArgumentList	machine		1282591	1					
ANR	1282737	Argument	machine		1282591	0					
ANR	1282738	Identifier	machine		1282591	0					
ANR	1282739	Argument	( wchar_t * ) pwkiWorkstationInfo -> wki100_computername		1282591	1					
ANR	1282740	CastExpression	( wchar_t * ) pwkiWorkstationInfo -> wki100_computername		1282591	0					
ANR	1282741	CastTarget	wchar_t *		1282591	0					
ANR	1282742	PtrMemberAccess	pwkiWorkstationInfo -> wki100_computername		1282591	1					
ANR	1282743	Identifier	pwkiWorkstationInfo		1282591	0					
ANR	1282744	Identifier	wki100_computername		1282591	1					
ANR	1282745	IdentifierDeclStatement	LSA_HANDLE hPolicy = 0 ;	824:1:20524:20546	1282591	11	True				
ANR	1282746	IdentifierDecl	hPolicy = 0		1282591	0					
ANR	1282747	IdentifierDeclType	LSA_HANDLE		1282591	0					
ANR	1282748	Identifier	hPolicy		1282591	1					
ANR	1282749	AssignmentExpression	hPolicy = 0		1282591	2		=			
ANR	1282750	Identifier	hPolicy		1282591	0					
ANR	1282751	PrimaryExpression	0		1282591	1					
ANR	1282752	IdentifierDeclStatement	LSA_OBJECT_ATTRIBUTES oa ;	825:1:20549:20573	1282591	12	True				
ANR	1282753	IdentifierDecl	oa		1282591	0					
ANR	1282754	IdentifierDeclType	LSA_OBJECT_ATTRIBUTES		1282591	0					
ANR	1282755	Identifier	oa		1282591	1					
ANR	1282756	ExpressionStatement	"ZeroMemory ( & oa , sizeof ( oa ) )"	826:1:20595:20622	1282591	13	True				
ANR	1282757	CallExpression	"ZeroMemory ( & oa , sizeof ( oa ) )"		1282591	0					
ANR	1282758	Callee	ZeroMemory		1282591	0					
ANR	1282759	Identifier	ZeroMemory		1282591	0					
ANR	1282760	ArgumentList	& oa		1282591	1					
ANR	1282761	Argument	& oa		1282591	0					
ANR	1282762	UnaryOperationExpression	& oa		1282591	0					
ANR	1282763	UnaryOperator	&		1282591	0					
ANR	1282764	Identifier	oa		1282591	1					
ANR	1282765	Argument	sizeof ( oa )		1282591	1					
ANR	1282766	SizeofExpression	sizeof ( oa )		1282591	0					
ANR	1282767	Sizeof	sizeof		1282591	0					
ANR	1282768	SizeofOperand	oa		1282591	1					
ANR	1282769	IfStatement	"if ( LsaOpenPolicy ( NULL , & oa , POLICY_LOOKUP_NAMES | POLICY_CREATE_ACCOUNT | POLICY_ALL_ACCESS , & hPolicy ) != STATUS_SUCCESS )"		1282591	14					
ANR	1282770	Condition	"LsaOpenPolicy ( NULL , & oa , POLICY_LOOKUP_NAMES | POLICY_CREATE_ACCOUNT | POLICY_ALL_ACCESS , & hPolicy ) != STATUS_SUCCESS"	827:5:20629:20847	1282591	0	True				
ANR	1282771	EqualityExpression	"LsaOpenPolicy ( NULL , & oa , POLICY_LOOKUP_NAMES | POLICY_CREATE_ACCOUNT | POLICY_ALL_ACCESS , & hPolicy ) != STATUS_SUCCESS"		1282591	0		!=			
ANR	1282772	CallExpression	"LsaOpenPolicy ( NULL , & oa , POLICY_LOOKUP_NAMES | POLICY_CREATE_ACCOUNT | POLICY_ALL_ACCESS , & hPolicy )"		1282591	0					
ANR	1282773	Callee	LsaOpenPolicy		1282591	0					
ANR	1282774	Identifier	LsaOpenPolicy		1282591	0					
ANR	1282775	ArgumentList	NULL		1282591	1					
ANR	1282776	Argument	NULL		1282591	0					
ANR	1282777	Identifier	NULL		1282591	0					
ANR	1282778	Argument	& oa		1282591	1					
ANR	1282779	UnaryOperationExpression	& oa		1282591	0					
ANR	1282780	UnaryOperator	&		1282591	0					
ANR	1282781	Identifier	oa		1282591	1					
ANR	1282782	Argument	POLICY_LOOKUP_NAMES | POLICY_CREATE_ACCOUNT | POLICY_ALL_ACCESS		1282591	2					
ANR	1282783	InclusiveOrExpression	POLICY_LOOKUP_NAMES | POLICY_CREATE_ACCOUNT | POLICY_ALL_ACCESS		1282591	0		|			
ANR	1282784	Identifier	POLICY_LOOKUP_NAMES		1282591	0					
ANR	1282785	InclusiveOrExpression	POLICY_CREATE_ACCOUNT | POLICY_ALL_ACCESS		1282591	1		|			
ANR	1282786	Identifier	POLICY_CREATE_ACCOUNT		1282591	0					
ANR	1282787	Identifier	POLICY_ALL_ACCESS		1282591	1					
ANR	1282788	Argument	& hPolicy		1282591	3					
ANR	1282789	UnaryOperationExpression	& hPolicy		1282591	0					
ANR	1282790	UnaryOperator	&		1282591	0					
ANR	1282791	Identifier	hPolicy		1282591	1					
ANR	1282792	Identifier	STATUS_SUCCESS		1282591	1					
ANR	1282793	CompoundStatement		54:1:1561:1561	1282591	1					
ANR	1282794	ExpressionStatement	"dprintf ( D_ALWAYS , ""dynuser::deleteuser() LsaOpenPolicy failed\\n"" )"	832:2:20892:20956	1282591	0	True				
ANR	1282795	CallExpression	"dprintf ( D_ALWAYS , ""dynuser::deleteuser() LsaOpenPolicy failed\\n"" )"		1282591	0					
ANR	1282796	Callee	dprintf		1282591	0					
ANR	1282797	Identifier	dprintf		1282591	0					
ANR	1282798	ArgumentList	D_ALWAYS		1282591	1					
ANR	1282799	Argument	D_ALWAYS		1282591	0					
ANR	1282800	Identifier	D_ALWAYS		1282591	0					
ANR	1282801	Argument	"""dynuser::deleteuser() LsaOpenPolicy failed\\n"""		1282591	1					
ANR	1282802	PrimaryExpression	"""dynuser::deleteuser() LsaOpenPolicy failed\\n"""		1282591	0					
ANR	1282803	ExpressionStatement	retval = false	833:2:20960:20974	1282591	1	True				
ANR	1282804	AssignmentExpression	retval = false		1282591	0		=			
ANR	1282805	Identifier	retval		1282591	0					
ANR	1282806	Identifier	false		1282591	1					
ANR	1282807	ExpressionStatement	SetLastError ( 0 )	836:1:20981:20996	1282591	15	True				
ANR	1282808	CallExpression	SetLastError ( 0 )		1282591	0					
ANR	1282809	Callee	SetLastError		1282591	0					
ANR	1282810	Identifier	SetLastError		1282591	0					
ANR	1282811	ArgumentList	0		1282591	1					
ANR	1282812	Argument	0		1282591	0					
ANR	1282813	PrimaryExpression	0		1282591	0					
ANR	1282814	IdentifierDeclStatement	NTSTATUS result ;	843:1:21378:21393	1282591	16	True				
ANR	1282815	IdentifierDecl	result		1282591	0					
ANR	1282816	IdentifierDeclType	NTSTATUS		1282591	0					
ANR	1282817	Identifier	result		1282591	1					
ANR	1282818	ExpressionStatement	"result = LsaRemoveAccountRights ( hPolicy , psid , 1 , 0 , 0 )"	844:1:21396:21453	1282591	17	True				
ANR	1282819	AssignmentExpression	"result = LsaRemoveAccountRights ( hPolicy , psid , 1 , 0 , 0 )"		1282591	0		=			
ANR	1282820	Identifier	result		1282591	0					
ANR	1282821	CallExpression	"LsaRemoveAccountRights ( hPolicy , psid , 1 , 0 , 0 )"		1282591	1					
ANR	1282822	Callee	LsaRemoveAccountRights		1282591	0					
ANR	1282823	Identifier	LsaRemoveAccountRights		1282591	0					
ANR	1282824	ArgumentList	hPolicy		1282591	1					
ANR	1282825	Argument	hPolicy		1282591	0					
ANR	1282826	Identifier	hPolicy		1282591	0					
ANR	1282827	Argument	psid		1282591	1					
ANR	1282828	Identifier	psid		1282591	0					
ANR	1282829	Argument	1		1282591	2					
ANR	1282830	PrimaryExpression	1		1282591	0					
ANR	1282831	Argument	0		1282591	3					
ANR	1282832	PrimaryExpression	0		1282591	0					
ANR	1282833	Argument	0		1282591	4					
ANR	1282834	PrimaryExpression	0		1282591	0					
ANR	1282835	IfStatement	if ( ! retval || result != STATUS_SUCCESS )		1282591	18					
ANR	1282836	Condition	! retval || result != STATUS_SUCCESS	845:5:21460:21494	1282591	0	True				
ANR	1282837	OrExpression	! retval || result != STATUS_SUCCESS		1282591	0		||			
ANR	1282838	UnaryOperationExpression	! retval		1282591	0					
ANR	1282839	UnaryOperator	!		1282591	0					
ANR	1282840	Identifier	retval		1282591	1					
ANR	1282841	EqualityExpression	result != STATUS_SUCCESS		1282591	1		!=			
ANR	1282842	Identifier	result		1282591	0					
ANR	1282843	Identifier	STATUS_SUCCESS		1282591	1					
ANR	1282844	CompoundStatement		68:42:2170:2170	1282591	1					
ANR	1282845	ExpressionStatement	"dprintf ( D_ALWAYS , ""dynuser: LsaRemoveAccountRights Failed winerr=%ul\\n"" , LsaNtStatusToWinError ( result ) )"	848:2:21543:21648	1282591	0	True				
ANR	1282846	CallExpression	"dprintf ( D_ALWAYS , ""dynuser: LsaRemoveAccountRights Failed winerr=%ul\\n"" , LsaNtStatusToWinError ( result ) )"		1282591	0					
ANR	1282847	Callee	dprintf		1282591	0					
ANR	1282848	Identifier	dprintf		1282591	0					
ANR	1282849	ArgumentList	D_ALWAYS		1282591	1					
ANR	1282850	Argument	D_ALWAYS		1282591	0					
ANR	1282851	Identifier	D_ALWAYS		1282591	0					
ANR	1282852	Argument	"""dynuser: LsaRemoveAccountRights Failed winerr=%ul\\n"""		1282591	1					
ANR	1282853	PrimaryExpression	"""dynuser: LsaRemoveAccountRights Failed winerr=%ul\\n"""		1282591	0					
ANR	1282854	Argument	LsaNtStatusToWinError ( result )		1282591	2					
ANR	1282855	CallExpression	LsaNtStatusToWinError ( result )		1282591	0					
ANR	1282856	Callee	LsaNtStatusToWinError		1282591	0					
ANR	1282857	Identifier	LsaNtStatusToWinError		1282591	0					
ANR	1282858	ArgumentList	result		1282591	1					
ANR	1282859	Argument	result		1282591	0					
ANR	1282860	Identifier	result		1282591	0					
ANR	1282861	ElseStatement	else		1282591	0					
ANR	1282862	CompoundStatement		83:8:2651:2706	1282591	0					
ANR	1282863	IdentifierDeclStatement	"NET_API_STATUS nerr = NetUserDel ( NULL , accountname_t ) ;"	860:8:21978:22033	1282591	0	True				
ANR	1282864	IdentifierDecl	"nerr = NetUserDel ( NULL , accountname_t )"		1282591	0					
ANR	1282865	IdentifierDeclType	NET_API_STATUS		1282591	0					
ANR	1282866	Identifier	nerr		1282591	1					
ANR	1282867	AssignmentExpression	"nerr = NetUserDel ( NULL , accountname_t )"		1282591	2		=			
ANR	1282868	Identifier	nerr		1282591	0					
ANR	1282869	CallExpression	"NetUserDel ( NULL , accountname_t )"		1282591	1					
ANR	1282870	Callee	NetUserDel		1282591	0					
ANR	1282871	Identifier	NetUserDel		1282591	0					
ANR	1282872	ArgumentList	NULL		1282591	1					
ANR	1282873	Argument	NULL		1282591	0					
ANR	1282874	Identifier	NULL		1282591	0					
ANR	1282875	Argument	accountname_t		1282591	1					
ANR	1282876	Identifier	accountname_t		1282591	0					
ANR	1282877	IfStatement	if ( nerr != NERR_Success && nerr != NERR_UserNotFound )		1282591	1					
ANR	1282878	Condition	nerr != NERR_Success && nerr != NERR_UserNotFound	861:13:22048:22096	1282591	0	True				
ANR	1282879	AndExpression	nerr != NERR_Success && nerr != NERR_UserNotFound		1282591	0		&&			
ANR	1282880	EqualityExpression	nerr != NERR_Success		1282591	0		!=			
ANR	1282881	Identifier	nerr		1282591	0					
ANR	1282882	Identifier	NERR_Success		1282591	1					
ANR	1282883	EqualityExpression	nerr != NERR_UserNotFound		1282591	1		!=			
ANR	1282884	Identifier	nerr		1282591	0					
ANR	1282885	Identifier	NERR_UserNotFound		1282591	1					
ANR	1282886	CompoundStatement		84:65:2773:2773	1282591	1					
ANR	1282887	ExpressionStatement	"dprintf ( D_ALWAYS , ""dynuser::deleteuser() failed! nerr=%d\\n"" , nerr )"	862:3:22108:22173	1282591	0	True				
ANR	1282888	CallExpression	"dprintf ( D_ALWAYS , ""dynuser::deleteuser() failed! nerr=%d\\n"" , nerr )"		1282591	0					
ANR	1282889	Callee	dprintf		1282591	0					
ANR	1282890	Identifier	dprintf		1282591	0					
ANR	1282891	ArgumentList	D_ALWAYS		1282591	1					
ANR	1282892	Argument	D_ALWAYS		1282591	0					
ANR	1282893	Identifier	D_ALWAYS		1282591	0					
ANR	1282894	Argument	"""dynuser::deleteuser() failed! nerr=%d\\n"""		1282591	1					
ANR	1282895	PrimaryExpression	"""dynuser::deleteuser() failed! nerr=%d\\n"""		1282591	0					
ANR	1282896	Argument	nerr		1282591	2					
ANR	1282897	Identifier	nerr		1282591	0					
ANR	1282898	ExpressionStatement	retval = false	863:3:22178:22192	1282591	1	True				
ANR	1282899	AssignmentExpression	retval = false		1282591	0		=			
ANR	1282900	Identifier	retval		1282591	0					
ANR	1282901	Identifier	false		1282591	1					
ANR	1282902	ElseStatement	else		1282591	0					
ANR	1282903	CompoundStatement		87:9:2876:2876	1282591	0					
ANR	1282904	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""dynuser::deleteuser() Successfully deleted user %s\\n"" , username )"	865:3:22208:22304	1282591	0	True				
ANR	1282905	CallExpression	"dprintf ( D_FULLDEBUG , ""dynuser::deleteuser() Successfully deleted user %s\\n"" , username )"		1282591	0					
ANR	1282906	Callee	dprintf		1282591	0					
ANR	1282907	Identifier	dprintf		1282591	0					
ANR	1282908	ArgumentList	D_FULLDEBUG		1282591	1					
ANR	1282909	Argument	D_FULLDEBUG		1282591	0					
ANR	1282910	Identifier	D_FULLDEBUG		1282591	0					
ANR	1282911	Argument	"""dynuser::deleteuser() Successfully deleted user %s\\n"""		1282591	1					
ANR	1282912	PrimaryExpression	"""dynuser::deleteuser() Successfully deleted user %s\\n"""		1282591	0					
ANR	1282913	Argument	username		1282591	2					
ANR	1282914	Identifier	username		1282591	0					
ANR	1282915	ExpressionStatement	LsaClose ( hPolicy )	873:1:22317:22336	1282591	19	True				
ANR	1282916	CallExpression	LsaClose ( hPolicy )		1282591	0					
ANR	1282917	Callee	LsaClose		1282591	0					
ANR	1282918	Identifier	LsaClose		1282591	0					
ANR	1282919	ArgumentList	hPolicy		1282591	1					
ANR	1282920	Argument	hPolicy		1282591	0					
ANR	1282921	Identifier	hPolicy		1282591	0					
ANR	1282922	Statement	delete	877:1:22421:22426	1282591	20	True				
ANR	1282923	Statement	[	877:8:22428:22428	1282591	21	True				
ANR	1282924	Statement	]	877:9:22429:22429	1282591	22	True				
ANR	1282925	ExpressionStatement	accountname_t	877:11:22431:22444	1282591	23	True				
ANR	1282926	Identifier	accountname_t		1282591	0					
ANR	1282927	ExpressionStatement	accountname_t = NULL	878:1:22447:22467	1282591	24	True				
ANR	1282928	AssignmentExpression	accountname_t = NULL		1282591	0		=			
ANR	1282929	Identifier	accountname_t		1282591	0					
ANR	1282930	Identifier	NULL		1282591	1					
ANR	1282931	ReturnStatement	return retval ;	880:1:22472:22485	1282591	25	True				
ANR	1282932	Identifier	retval		1282591	0					
ANR	1282933	ReturnType	bool		1282591	1					
ANR	1282934	Identifier	dynuser :: deleteuser		1282591	2					
ANR	1282935	ParameterList	char const * username		1282591	3					
ANR	1282936	Parameter	char const * username	778:25:19302:19322	1282591	0	True				
ANR	1282937	ParameterType	char const *		1282591	0					
ANR	1282938	Identifier	username		1282591	1					
ANR	1282939	CFGEntryNode	ENTRY		1282591		True				
ANR	1282940	CFGExitNode	EXIT		1282591		True				
ANR	1282941	Symbol	POLICY_CREATE_ACCOUNT		1282591						
ANR	1282942	Symbol	nerr		1282591						
ANR	1282943	Symbol	prefix		1282591						
ANR	1282944	Symbol	& pwkiWorkstationInfo		1282591						
ANR	1282945	Symbol	LsaNtStatusToWinError		1282591						
ANR	1282946	Symbol	result		1282591						
ANR	1282947	Symbol	strncmp		1282591						
ANR	1282948	Symbol	strlen		1282591						
ANR	1282949	Symbol	oa		1282591						
ANR	1282950	Symbol	LsaRemoveAccountRights		1282591						
ANR	1282951	Symbol	accountname		1282591						
ANR	1282952	Symbol	accountname_t		1282591						
ANR	1282953	Symbol	NetUserDel		1282591						
ANR	1282954	Symbol	LsaOpenPolicy		1282591						
ANR	1282955	Symbol	& oa		1282591						
ANR	1282956	Symbol	NERR_UserNotFound		1282591						
ANR	1282957	Symbol	netret		1282591						
ANR	1282958	Symbol	hPolicy		1282591						
ANR	1282959	Symbol	NULL		1282591						
ANR	1282960	Symbol	POLICY_LOOKUP_NAMES		1282591						
ANR	1282961	Symbol	ACCOUNT_PREFIX		1282591						
ANR	1282962	Symbol	false		1282591						
ANR	1282963	Symbol	D_ALWAYS		1282591						
ANR	1282964	Symbol	this		1282591						
ANR	1282965	Symbol	NERR_Success		1282591						
ANR	1282966	Symbol	& hPolicy		1282591						
ANR	1282967	Symbol	pwkiWorkstationInfo		1282591						
ANR	1282968	Symbol	psid		1282591						
ANR	1282969	Symbol	D_FULLDEBUG		1282591						
ANR	1282970	Symbol	retval		1282591						
ANR	1282971	Symbol	NetWkstaGetInfo		1282591						
ANR	1282972	Symbol	POLICY_ALL_ACCESS		1282591						
ANR	1282973	Symbol	* pwkiWorkstationInfo		1282591						
ANR	1282974	Symbol	machine		1282591						
ANR	1282975	Symbol	true		1282591						
ANR	1282976	Symbol	STATUS_SUCCESS		1282591						
ANR	1282977	Symbol	pwkiWorkstationInfo -> wki100_computername		1282591						
ANR	1282978	Symbol	username		1282591						
ANR	1282979	Function	dynuser :: cleanup_condor_users	887:0:22561:24612							
ANR	1282980	FunctionDef	dynuser :: cleanup_condor_users (char * user_prefix)		1282979	0					
ANR	1282981	CompoundStatement		887:54:22615:24612	1282979	0					
ANR	1282982	IdentifierDeclStatement	LPUSER_INFO_10 pBuf = NULL ;	889:1:22619:22645	1282979	0	True				
ANR	1282983	IdentifierDecl	pBuf = NULL		1282979	0					
ANR	1282984	IdentifierDeclType	LPUSER_INFO_10		1282979	0					
ANR	1282985	Identifier	pBuf		1282979	1					
ANR	1282986	AssignmentExpression	pBuf = NULL		1282979	2		=			
ANR	1282987	Identifier	NULL		1282979	0					
ANR	1282988	Identifier	NULL		1282979	1					
ANR	1282989	IdentifierDeclStatement	LPUSER_INFO_10 pTmpBuf ;	890:1:22648:22670	1282979	1	True				
ANR	1282990	IdentifierDecl	pTmpBuf		1282979	0					
ANR	1282991	IdentifierDeclType	LPUSER_INFO_10		1282979	0					
ANR	1282992	Identifier	pTmpBuf		1282979	1					
ANR	1282993	IdentifierDeclStatement	DWORD dwEntriesRead = 0 ;	891:1:22673:22696	1282979	2	True				
ANR	1282994	IdentifierDecl	dwEntriesRead = 0		1282979	0					
ANR	1282995	IdentifierDeclType	DWORD		1282979	0					
ANR	1282996	Identifier	dwEntriesRead		1282979	1					
ANR	1282997	AssignmentExpression	dwEntriesRead = 0		1282979	2		=			
ANR	1282998	Identifier	dwEntriesRead		1282979	0					
ANR	1282999	PrimaryExpression	0		1282979	1					
ANR	1283000	IdentifierDeclStatement	DWORD dwTotalEntries = 0 ;	892:1:22699:22723	1282979	3	True				
ANR	1283001	IdentifierDecl	dwTotalEntries = 0		1282979	0					
ANR	1283002	IdentifierDeclType	DWORD		1282979	0					
ANR	1283003	Identifier	dwTotalEntries		1282979	1					
ANR	1283004	AssignmentExpression	dwTotalEntries = 0		1282979	2		=			
ANR	1283005	Identifier	dwTotalEntries		1282979	0					
ANR	1283006	PrimaryExpression	0		1282979	1					
ANR	1283007	IdentifierDeclStatement	DWORD dwResumeHandle = 0 ;	893:1:22726:22750	1282979	4	True				
ANR	1283008	IdentifierDecl	dwResumeHandle = 0		1282979	0					
ANR	1283009	IdentifierDeclType	DWORD		1282979	0					
ANR	1283010	Identifier	dwResumeHandle		1282979	1					
ANR	1283011	AssignmentExpression	dwResumeHandle = 0		1282979	2		=			
ANR	1283012	Identifier	dwResumeHandle		1282979	0					
ANR	1283013	PrimaryExpression	0		1282979	1					
ANR	1283014	IdentifierDeclStatement	DWORD dwTotalCount = 0 ;	894:1:22753:22775	1282979	5	True				
ANR	1283015	IdentifierDecl	dwTotalCount = 0		1282979	0					
ANR	1283016	IdentifierDeclType	DWORD		1282979	0					
ANR	1283017	Identifier	dwTotalCount		1282979	1					
ANR	1283018	AssignmentExpression	dwTotalCount = 0		1282979	2		=			
ANR	1283019	Identifier	dwTotalCount		1282979	0					
ANR	1283020	PrimaryExpression	0		1282979	1					
ANR	1283021	IdentifierDeclStatement	NET_API_STATUS nStatus ;	895:1:22778:22800	1282979	6	True				
ANR	1283022	IdentifierDecl	nStatus		1282979	0					
ANR	1283023	IdentifierDeclType	NET_API_STATUS		1282979	0					
ANR	1283024	Identifier	nStatus		1282979	1					
ANR	1283025	IdentifierDeclStatement	bool retval = true ;	897:1:22804:22822	1282979	7	True				
ANR	1283026	IdentifierDecl	retval = true		1282979	0					
ANR	1283027	IdentifierDeclType	bool		1282979	0					
ANR	1283028	Identifier	retval		1282979	1					
ANR	1283029	AssignmentExpression	retval = true		1282979	2		=			
ANR	1283030	Identifier	true		1282979	0					
ANR	1283031	Identifier	true		1282979	1					
ANR	1283032	IfStatement	if ( ! user_prefix || ! * user_prefix )		1282979	8					
ANR	1283033	Condition	! user_prefix || ! * user_prefix	901:5:22866:22894	1282979	0	True				
ANR	1283034	OrExpression	! user_prefix || ! * user_prefix		1282979	0		||			
ANR	1283035	UnaryOperationExpression	! user_prefix		1282979	0					
ANR	1283036	UnaryOperator	!		1282979	0					
ANR	1283037	Identifier	user_prefix		1282979	1					
ANR	1283038	UnaryOperationExpression	! * user_prefix		1282979	1					
ANR	1283039	UnaryOperator	!		1282979	0					
ANR	1283040	UnaryOperationExpression	* user_prefix		1282979	1					
ANR	1283041	UnaryOperator	*		1282979	0					
ANR	1283042	Identifier	user_prefix		1282979	1					
ANR	1283043	CompoundStatement		15:36:281:281	1282979	1					
ANR	1283044	ExpressionStatement	"dprintf ( D_ALWAYS , ""dynuser::cleanup_condor_users() called with no user_prefix\\n"" )"	902:2:22901:22981	1282979	0	True				
ANR	1283045	CallExpression	"dprintf ( D_ALWAYS , ""dynuser::cleanup_condor_users() called with no user_prefix\\n"" )"		1282979	0					
ANR	1283046	Callee	dprintf		1282979	0					
ANR	1283047	Identifier	dprintf		1282979	0					
ANR	1283048	ArgumentList	D_ALWAYS		1282979	1					
ANR	1283049	Argument	D_ALWAYS		1282979	0					
ANR	1283050	Identifier	D_ALWAYS		1282979	0					
ANR	1283051	Argument	"""dynuser::cleanup_condor_users() called with no user_prefix\\n"""		1282979	1					
ANR	1283052	PrimaryExpression	"""dynuser::cleanup_condor_users() called with no user_prefix\\n"""		1282979	0					
ANR	1283053	ReturnStatement	return false ;	903:2:22985:22997	1282979	1	True				
ANR	1283054	Identifier	false		1282979	0					
ANR	1283055	DoStatement	do		1282979	9					
ANR	1283056	CompoundStatement		20:4:391:391	1282979	0					
ANR	1283057	ExpressionStatement	"nStatus = NetUserEnum ( NULL , 10 , FILTER_NORMAL_ACCOUNT , ( LPBYTE * ) & pBuf , MAX_PREFERRED_LENGTH , & dwEntriesRead , & dwTotalEntries , & dwResumeHandle )"	907:2:23011:23343	1282979	0	True				
ANR	1283058	AssignmentExpression	"nStatus = NetUserEnum ( NULL , 10 , FILTER_NORMAL_ACCOUNT , ( LPBYTE * ) & pBuf , MAX_PREFERRED_LENGTH , & dwEntriesRead , & dwTotalEntries , & dwResumeHandle )"		1282979	0		=			
ANR	1283059	Identifier	nStatus		1282979	0					
ANR	1283060	CallExpression	"NetUserEnum ( NULL , 10 , FILTER_NORMAL_ACCOUNT , ( LPBYTE * ) & pBuf , MAX_PREFERRED_LENGTH , & dwEntriesRead , & dwTotalEntries , & dwResumeHandle )"		1282979	1					
ANR	1283061	Callee	NetUserEnum		1282979	0					
ANR	1283062	Identifier	NetUserEnum		1282979	0					
ANR	1283063	ArgumentList	NULL		1282979	1					
ANR	1283064	Argument	NULL		1282979	0					
ANR	1283065	Identifier	NULL		1282979	0					
ANR	1283066	Argument	10		1282979	1					
ANR	1283067	PrimaryExpression	10		1282979	0					
ANR	1283068	Argument	FILTER_NORMAL_ACCOUNT		1282979	2					
ANR	1283069	Identifier	FILTER_NORMAL_ACCOUNT		1282979	0					
ANR	1283070	Argument	( LPBYTE * ) & pBuf		1282979	3					
ANR	1283071	CastExpression	( LPBYTE * ) & pBuf		1282979	0					
ANR	1283072	CastTarget	LPBYTE *		1282979	0					
ANR	1283073	UnaryOperationExpression	& pBuf		1282979	1					
ANR	1283074	UnaryOperator	&		1282979	0					
ANR	1283075	Identifier	pBuf		1282979	1					
ANR	1283076	Argument	MAX_PREFERRED_LENGTH		1282979	4					
ANR	1283077	Identifier	MAX_PREFERRED_LENGTH		1282979	0					
ANR	1283078	Argument	& dwEntriesRead		1282979	5					
ANR	1283079	UnaryOperationExpression	& dwEntriesRead		1282979	0					
ANR	1283080	UnaryOperator	&		1282979	0					
ANR	1283081	Identifier	dwEntriesRead		1282979	1					
ANR	1283082	Argument	& dwTotalEntries		1282979	6					
ANR	1283083	UnaryOperationExpression	& dwTotalEntries		1282979	0					
ANR	1283084	UnaryOperator	&		1282979	0					
ANR	1283085	Identifier	dwTotalEntries		1282979	1					
ANR	1283086	Argument	& dwResumeHandle		1282979	7					
ANR	1283087	UnaryOperationExpression	& dwResumeHandle		1282979	0					
ANR	1283088	UnaryOperator	&		1282979	0					
ANR	1283089	Identifier	dwResumeHandle		1282979	1					
ANR	1283090	IfStatement	if ( ( nStatus == NERR_Success ) || ( nStatus == ERROR_MORE_DATA ) )		1282979	1					
ANR	1283091	Condition	( nStatus == NERR_Success ) || ( nStatus == ERROR_MORE_DATA )	917:6:23379:23435	1282979	0	True				
ANR	1283092	OrExpression	( nStatus == NERR_Success ) || ( nStatus == ERROR_MORE_DATA )		1282979	0		||			
ANR	1283093	EqualityExpression	nStatus == NERR_Success		1282979	0		==			
ANR	1283094	Identifier	nStatus		1282979	0					
ANR	1283095	Identifier	NERR_Success		1282979	1					
ANR	1283096	EqualityExpression	nStatus == ERROR_MORE_DATA		1282979	1		==			
ANR	1283097	Identifier	nStatus		1282979	0					
ANR	1283098	Identifier	ERROR_MORE_DATA		1282979	1					
ANR	1283099	CompoundStatement		31:65:822:822	1282979	1					
ANR	1283100	IfStatement	if ( ( pTmpBuf = pBuf ) != NULL )		1282979	0					
ANR	1283101	Condition	( pTmpBuf = pBuf ) != NULL	918:7:23447:23470	1282979	0	True				
ANR	1283102	EqualityExpression	( pTmpBuf = pBuf ) != NULL		1282979	0		!=			
ANR	1283103	AssignmentExpression	pTmpBuf = pBuf		1282979	0		=			
ANR	1283104	Identifier	pTmpBuf		1282979	0					
ANR	1283105	Identifier	pBuf		1282979	1					
ANR	1283106	Identifier	NULL		1282979	1					
ANR	1283107	CompoundStatement		32:33:857:857	1282979	1					
ANR	1283108	ForStatement	for ( DWORD i = 0 ; ( i < dwEntriesRead ) ; i ++ )		1282979	0					
ANR	1283109	ForInit	DWORD i = 0 ;	921:9:23520:23531	1282979	0	True				
ANR	1283110	IdentifierDeclStatement	DWORD i = 0 ;		1282979	0					
ANR	1283111	IdentifierDecl	i = 0		1282979	0					
ANR	1283112	IdentifierDeclType	DWORD		1282979	0					
ANR	1283113	Identifier	i		1282979	1					
ANR	1283114	AssignmentExpression	i = 0		1282979	2		=			
ANR	1283115	Identifier	i		1282979	0					
ANR	1283116	PrimaryExpression	0		1282979	1					
ANR	1283117	Condition	i < dwEntriesRead	921:22:23533:23551	1282979	1	True				
ANR	1283118	RelationalExpression	i < dwEntriesRead		1282979	0		<			
ANR	1283119	Identifier	i		1282979	0					
ANR	1283120	Identifier	dwEntriesRead		1282979	1					
ANR	1283121	PostIncDecOperationExpression	i ++	921:43:23554:23556	1282979	2	True				
ANR	1283122	Identifier	i		1282979	0					
ANR	1283123	IncDec	++		1282979	1					
ANR	1283124	CompoundStatement		45:5:1168:1182	1282979	3					
ANR	1283125	ExpressionStatement	assert ( pTmpBuf != NULL )	922:5:23566:23589	1282979	0	True				
ANR	1283126	CallExpression	assert ( pTmpBuf != NULL )		1282979	0					
ANR	1283127	Callee	assert		1282979	0					
ANR	1283128	Identifier	assert		1282979	0					
ANR	1283129	ArgumentList	pTmpBuf != NULL		1282979	1					
ANR	1283130	Argument	pTmpBuf != NULL		1282979	0					
ANR	1283131	EqualityExpression	pTmpBuf != NULL		1282979	0		!=			
ANR	1283132	Identifier	pTmpBuf		1282979	0					
ANR	1283133	Identifier	NULL		1282979	1					
ANR	1283134	IfStatement	if ( pTmpBuf == NULL )		1282979	1					
ANR	1283135	Condition	pTmpBuf == NULL	924:9:23601:23615	1282979	0	True				
ANR	1283136	EqualityExpression	pTmpBuf == NULL		1282979	0		==			
ANR	1283137	Identifier	pTmpBuf		1282979	0					
ANR	1283138	Identifier	NULL		1282979	1					
ANR	1283139	CompoundStatement		38:26:1002:1002	1282979	1					
ANR	1283140	ExpressionStatement	"dprintf ( D_ALWAYS , ""dynuser::cleanup_condor_users() Access violation\\n"" )"	925:6:23626:23696	1282979	0	True				
ANR	1283141	CallExpression	"dprintf ( D_ALWAYS , ""dynuser::cleanup_condor_users() Access violation\\n"" )"		1282979	0					
ANR	1283142	Callee	dprintf		1282979	0					
ANR	1283143	Identifier	dprintf		1282979	0					
ANR	1283144	ArgumentList	D_ALWAYS		1282979	1					
ANR	1283145	Argument	D_ALWAYS		1282979	0					
ANR	1283146	Identifier	D_ALWAYS		1282979	0					
ANR	1283147	Argument	"""dynuser::cleanup_condor_users() Access violation\\n"""		1282979	1					
ANR	1283148	PrimaryExpression	"""dynuser::cleanup_condor_users() Access violation\\n"""		1282979	0					
ANR	1283149	ExpressionStatement	retval = false	926:6:23704:23718	1282979	1	True				
ANR	1283150	AssignmentExpression	retval = false		1282979	0		=			
ANR	1283151	Identifier	retval		1282979	0					
ANR	1283152	Identifier	false		1282979	1					
ANR	1283153	BreakStatement	break ;	927:6:23726:23731	1282979	2	True				
ANR	1283154	IdentifierDeclStatement	char buf [ 1024 ] ;	931:5:23784:23798	1282979	2	True				
ANR	1283155	IdentifierDecl	buf [ 1024 ]		1282979	0					
ANR	1283156	IdentifierDeclType	char [ 1024 ]		1282979	0					
ANR	1283157	Identifier	buf		1282979	1					
ANR	1283158	PrimaryExpression	1024		1282979	2					
ANR	1283159	ExpressionStatement	"wsprintf ( buf , ""%ws"" , pTmpBuf -> usri10_name )"	932:5:23861:23903	1282979	3	True				
ANR	1283160	CallExpression	"wsprintf ( buf , ""%ws"" , pTmpBuf -> usri10_name )"		1282979	0					
ANR	1283161	Callee	wsprintf		1282979	0					
ANR	1283162	Identifier	wsprintf		1282979	0					
ANR	1283163	ArgumentList	buf		1282979	1					
ANR	1283164	Argument	buf		1282979	0					
ANR	1283165	Identifier	buf		1282979	0					
ANR	1283166	Argument	"""%ws"""		1282979	1					
ANR	1283167	PrimaryExpression	"""%ws"""		1282979	0					
ANR	1283168	Argument	pTmpBuf -> usri10_name		1282979	2					
ANR	1283169	PtrMemberAccess	pTmpBuf -> usri10_name		1282979	0					
ANR	1283170	Identifier	pTmpBuf		1282979	0					
ANR	1283171	Identifier	usri10_name		1282979	1					
ANR	1283172	IfStatement	"if ( strnicmp ( buf , user_prefix , strlen ( user_prefix ) ) == 0 )"		1282979	4					
ANR	1283173	Condition	"strnicmp ( buf , user_prefix , strlen ( user_prefix ) ) == 0"	935:9:23921:23973	1282979	0	True				
ANR	1283174	EqualityExpression	"strnicmp ( buf , user_prefix , strlen ( user_prefix ) ) == 0"		1282979	0		==			
ANR	1283175	CallExpression	"strnicmp ( buf , user_prefix , strlen ( user_prefix ) )"		1282979	0					
ANR	1283176	Callee	strnicmp		1282979	0					
ANR	1283177	Identifier	strnicmp		1282979	0					
ANR	1283178	ArgumentList	buf		1282979	1					
ANR	1283179	Argument	buf		1282979	0					
ANR	1283180	Identifier	buf		1282979	0					
ANR	1283181	Argument	user_prefix		1282979	1					
ANR	1283182	Identifier	user_prefix		1282979	0					
ANR	1283183	Argument	strlen ( user_prefix )		1282979	2					
ANR	1283184	CallExpression	strlen ( user_prefix )		1282979	0					
ANR	1283185	Callee	strlen		1282979	0					
ANR	1283186	Identifier	strlen		1282979	0					
ANR	1283187	ArgumentList	user_prefix		1282979	1					
ANR	1283188	Argument	user_prefix		1282979	0					
ANR	1283189	Identifier	user_prefix		1282979	0					
ANR	1283190	PrimaryExpression	0		1282979	1					
ANR	1283191	CompoundStatement		49:64:1360:1360	1282979	1					
ANR	1283192	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""dynuser::cleanup_condor_users() Found orphaned account: %s\\n"" , buf )"	936:6:23984:24072	1282979	0	True				
ANR	1283193	CallExpression	"dprintf ( D_FULLDEBUG , ""dynuser::cleanup_condor_users() Found orphaned account: %s\\n"" , buf )"		1282979	0					
ANR	1283194	Callee	dprintf		1282979	0					
ANR	1283195	Identifier	dprintf		1282979	0					
ANR	1283196	ArgumentList	D_FULLDEBUG		1282979	1					
ANR	1283197	Argument	D_FULLDEBUG		1282979	0					
ANR	1283198	Identifier	D_FULLDEBUG		1282979	0					
ANR	1283199	Argument	"""dynuser::cleanup_condor_users() Found orphaned account: %s\\n"""		1282979	1					
ANR	1283200	PrimaryExpression	"""dynuser::cleanup_condor_users() Found orphaned account: %s\\n"""		1282979	0					
ANR	1283201	Argument	buf		1282979	2					
ANR	1283202	Identifier	buf		1282979	0					
ANR	1283203	CompoundStatement		52:7:1473:1483	1282979	1					
ANR	1283204	IdentifierDeclStatement	dynuser du ;	938:7:24089:24099	1282979	0	True				
ANR	1283205	IdentifierDecl	du		1282979	0					
ANR	1283206	IdentifierDeclType	dynuser		1282979	0					
ANR	1283207	Identifier	du		1282979	1					
ANR	1283208	ExpressionStatement	retval = retval && du . deleteuser ( buf )	939:7:24108:24145	1282979	1	True				
ANR	1283209	AssignmentExpression	retval = retval && du . deleteuser ( buf )		1282979	0		=			
ANR	1283210	Identifier	retval		1282979	0					
ANR	1283211	AndExpression	retval && du . deleteuser ( buf )		1282979	1		&&			
ANR	1283212	Identifier	retval		1282979	0					
ANR	1283213	CallExpression	du . deleteuser ( buf )		1282979	1					
ANR	1283214	Callee	du . deleteuser		1282979	0					
ANR	1283215	MemberAccess	du . deleteuser		1282979	0					
ANR	1283216	Identifier	du		1282979	0					
ANR	1283217	Identifier	deleteuser		1282979	1					
ANR	1283218	ArgumentList	buf		1282979	1					
ANR	1283219	Argument	buf		1282979	0					
ANR	1283220	Identifier	buf		1282979	0					
ANR	1283221	ExpressionStatement	pTmpBuf ++	943:5:24168:24177	1282979	5	True				
ANR	1283222	PostIncDecOperationExpression	pTmpBuf ++		1282979	0					
ANR	1283223	Identifier	pTmpBuf		1282979	0					
ANR	1283224	IncDec	++		1282979	1					
ANR	1283225	ExpressionStatement	dwTotalCount ++	944:5:24184:24198	1282979	6	True				
ANR	1283226	PostIncDecOperationExpression	dwTotalCount ++		1282979	0					
ANR	1283227	Identifier	dwTotalCount		1282979	0					
ANR	1283228	IncDec	++		1282979	1					
ANR	1283229	ElseStatement	else		1282979	0					
ANR	1283230	CompoundStatement		61:9:1604:1604	1282979	0					
ANR	1283231	ExpressionStatement	"dprintf ( D_ALWAYS , ""dynuser::cleanup_condor_users() Got bad status (%d) from NetUserEnum\\n"" , nStatus )"	948:3:24225:24324	1282979	0	True				
ANR	1283232	CallExpression	"dprintf ( D_ALWAYS , ""dynuser::cleanup_condor_users() Got bad status (%d) from NetUserEnum\\n"" , nStatus )"		1282979	0					
ANR	1283233	Callee	dprintf		1282979	0					
ANR	1283234	Identifier	dprintf		1282979	0					
ANR	1283235	ArgumentList	D_ALWAYS		1282979	1					
ANR	1283236	Argument	D_ALWAYS		1282979	0					
ANR	1283237	Identifier	D_ALWAYS		1282979	0					
ANR	1283238	Argument	"""dynuser::cleanup_condor_users() Got bad status (%d) from NetUserEnum\\n"""		1282979	1					
ANR	1283239	PrimaryExpression	"""dynuser::cleanup_condor_users() Got bad status (%d) from NetUserEnum\\n"""		1282979	0					
ANR	1283240	Argument	nStatus		1282979	2					
ANR	1283241	Identifier	nStatus		1282979	0					
ANR	1283242	ExpressionStatement	retval = false	949:3:24329:24343	1282979	1	True				
ANR	1283243	AssignmentExpression	retval = false		1282979	0		=			
ANR	1283244	Identifier	retval		1282979	0					
ANR	1283245	Identifier	false		1282979	1					
ANR	1283246	IfStatement	if ( pBuf != NULL )		1282979	2					
ANR	1283247	Condition	pBuf != NULL	953:6:24388:24399	1282979	0	True				
ANR	1283248	EqualityExpression	pBuf != NULL		1282979	0		!=			
ANR	1283249	Identifier	pBuf		1282979	0					
ANR	1283250	Identifier	NULL		1282979	1					
ANR	1283251	CompoundStatement		67:20:1786:1786	1282979	1					
ANR	1283252	ExpressionStatement	NetApiBufferFree ( pBuf )	954:3:24407:24429	1282979	0	True				
ANR	1283253	CallExpression	NetApiBufferFree ( pBuf )		1282979	0					
ANR	1283254	Callee	NetApiBufferFree		1282979	0					
ANR	1283255	Identifier	NetApiBufferFree		1282979	0					
ANR	1283256	ArgumentList	pBuf		1282979	1					
ANR	1283257	Argument	pBuf		1282979	0					
ANR	1283258	Identifier	pBuf		1282979	0					
ANR	1283259	ExpressionStatement	pBuf = NULL	955:3:24434:24445	1282979	1	True				
ANR	1283260	AssignmentExpression	pBuf = NULL		1282979	0		=			
ANR	1283261	Identifier	pBuf		1282979	0					
ANR	1283262	Identifier	NULL		1282979	1					
ANR	1283263	Condition	nStatus == ERROR_MORE_DATA	957:10:24461:24486	1282979	1	True				
ANR	1283264	EqualityExpression	nStatus == ERROR_MORE_DATA		1282979	0		==			
ANR	1283265	Identifier	nStatus		1282979	0					
ANR	1283266	Identifier	ERROR_MORE_DATA		1282979	1					
ANR	1283267	IfStatement	if ( pBuf != NULL )		1282979	10					
ANR	1283268	Condition	pBuf != NULL	961:5:24535:24546	1282979	0	True				
ANR	1283269	EqualityExpression	pBuf != NULL		1282979	0		!=			
ANR	1283270	Identifier	pBuf		1282979	0					
ANR	1283271	Identifier	NULL		1282979	1					
ANR	1283272	CompoundStatement		75:19:1933:1933	1282979	1					
ANR	1283273	ExpressionStatement	NetApiBufferFree ( pBuf )	962:2:24553:24575	1282979	0	True				
ANR	1283274	CallExpression	NetApiBufferFree ( pBuf )		1282979	0					
ANR	1283275	Callee	NetApiBufferFree		1282979	0					
ANR	1283276	Identifier	NetApiBufferFree		1282979	0					
ANR	1283277	ArgumentList	pBuf		1282979	1					
ANR	1283278	Argument	pBuf		1282979	0					
ANR	1283279	Identifier	pBuf		1282979	0					
ANR	1283280	ExpressionStatement	pBuf = NULL	963:2:24579:24590	1282979	1	True				
ANR	1283281	AssignmentExpression	pBuf = NULL		1282979	0		=			
ANR	1283282	Identifier	pBuf		1282979	0					
ANR	1283283	Identifier	NULL		1282979	1					
ANR	1283284	ReturnStatement	return retval ;	966:1:24597:24610	1282979	11	True				
ANR	1283285	Identifier	retval		1282979	0					
ANR	1283286	ReturnType	bool		1282979	1					
ANR	1283287	Identifier	dynuser :: cleanup_condor_users		1282979	2					
ANR	1283288	ParameterList	char * user_prefix		1282979	3					
ANR	1283289	Parameter	char * user_prefix	887:35:22596:22612	1282979	0	True				
ANR	1283290	ParameterType	char *		1282979	0					
ANR	1283291	Identifier	user_prefix		1282979	1					
ANR	1283292	CFGEntryNode	ENTRY		1282979		True				
ANR	1283293	CFGExitNode	EXIT		1282979		True				
ANR	1283294	Symbol	& dwResumeHandle		1282979						
ANR	1283295	Symbol	user_prefix		1282979						
ANR	1283296	Symbol	MAX_PREFERRED_LENGTH		1282979						
ANR	1283297	Symbol	pBuf		1282979						
ANR	1283298	Symbol	* user_prefix		1282979						
ANR	1283299	Symbol	strlen		1282979						
ANR	1283300	Symbol	du		1282979						
ANR	1283301	Symbol	dwTotalEntries		1282979						
ANR	1283302	Symbol	NetUserEnum		1282979						
ANR	1283303	Symbol	& pBuf		1282979						
ANR	1283304	Symbol	* pTmpBuf		1282979						
ANR	1283305	Symbol	ERROR_MORE_DATA		1282979						
ANR	1283306	Symbol	strnicmp		1282979						
ANR	1283307	Symbol	nStatus		1282979						
ANR	1283308	Symbol	NULL		1282979						
ANR	1283309	Symbol	dwResumeHandle		1282979						
ANR	1283310	Symbol	du . deleteuser		1282979						
ANR	1283311	Symbol	pTmpBuf -> usri10_name		1282979						
ANR	1283312	Symbol	pTmpBuf		1282979						
ANR	1283313	Symbol	D_ALWAYS		1282979						
ANR	1283314	Symbol	false		1282979						
ANR	1283315	Symbol	NERR_Success		1282979						
ANR	1283316	Symbol	i		1282979						
ANR	1283317	Symbol	D_FULLDEBUG		1282979						
ANR	1283318	Symbol	retval		1282979						
ANR	1283319	Symbol	FILTER_NORMAL_ACCOUNT		1282979						
ANR	1283320	Symbol	& dwEntriesRead		1282979						
ANR	1283321	Symbol	buf		1282979						
ANR	1283322	Symbol	dwEntriesRead		1282979						
ANR	1283323	Symbol	dwTotalCount		1282979						
ANR	1283324	Symbol	true		1282979						
ANR	1283325	Symbol	& dwTotalEntries		1282979						
