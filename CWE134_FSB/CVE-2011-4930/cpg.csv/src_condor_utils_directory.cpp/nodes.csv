command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4703743	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_directory.cpp								
ANR	4703744	DeclStmt									
ANR	4703745	Decl							priv_state	priv_state	saved_priv
ANR	4703746	Function	DeleteFileLater :: DeleteFileLater	53:0:1803:1900							
ANR	4703747	FunctionDef	DeleteFileLater :: DeleteFileLater (const char * _name)		4703746	0					
ANR	4703748	CompoundStatement		54:0:1857:1900	4703746	0					
ANR	4703749	ExpressionStatement	filename = _name ? strdup ( _name ) : NULL	55:4:1863:1898	4703746	0	True				
ANR	4703750	AssignmentExpression	filename = _name ? strdup ( _name ) : NULL		4703746	0		=			
ANR	4703751	Identifier	filename		4703746	0					
ANR	4703752	ConditionalExpression	_name ? strdup ( _name ) : NULL		4703746	1					
ANR	4703753	Condition	_name		4703746	0					
ANR	4703754	Identifier	_name		4703746	0					
ANR	4703755	CallExpression	strdup ( _name )		4703746	1					
ANR	4703756	Callee	strdup		4703746	0					
ANR	4703757	Identifier	strdup		4703746	0					
ANR	4703758	ArgumentList	_name		4703746	1					
ANR	4703759	Argument	_name		4703746	0					
ANR	4703760	Identifier	_name		4703746	0					
ANR	4703761	Identifier	NULL		4703746	2					
ANR	4703762	Identifier	DeleteFileLater :: DeleteFileLater		4703746	1					
ANR	4703763	ParameterList	const char * _name		4703746	2					
ANR	4703764	Parameter	const char * _name	53:34:1837:1854	4703746	0	True				
ANR	4703765	ParameterType	const char *		4703746	0					
ANR	4703766	Identifier	_name		4703746	1					
ANR	4703767	CFGEntryNode	ENTRY		4703746		True				
ANR	4703768	CFGExitNode	EXIT		4703746		True				
ANR	4703769	Symbol	NULL		4703746						
ANR	4703770	Symbol	filename		4703746						
ANR	4703771	Symbol	_name		4703746						
ANR	4703772	Symbol	strdup		4703746						
ANR	4703773	Function	DeleteFileLater :: ~DeleteFileLater	58:0:1903:2153							
ANR	4703774	FunctionDef	DeleteFileLater :: ~DeleteFileLater ()		4703773	0					
ANR	4703775	CompoundStatement		59:0:1940:2153	4703773	0					
ANR	4703776	IfStatement	if ( filename )		4703773	0					
ANR	4703777	Condition	filename	60:5:1947:1954	4703773	0	True				
ANR	4703778	Identifier	filename		4703773	0					
ANR	4703779	CompoundStatement		2:15:16:16	4703773	1					
ANR	4703780	IfStatement	if ( unlink ( filename ) )		4703773	0					
ANR	4703781	Condition	unlink ( filename )	61:12:1971:1986	4703773	0	True				
ANR	4703782	CallExpression	unlink ( filename )		4703773	0					
ANR	4703783	Callee	unlink		4703773	0					
ANR	4703784	Identifier	unlink		4703773	0					
ANR	4703785	ArgumentList	filename		4703773	1					
ANR	4703786	Argument	filename		4703773	0					
ANR	4703787	Identifier	filename		4703773	0					
ANR	4703788	CompoundStatement		3:30:48:48	4703773	1					
ANR	4703789	ExpressionStatement	"dprintf ( D_ALWAYS , ""DeleteFileLater of %s failed err=%d"" , filename , errno )"	62:12:2046:2119	4703773	0	True				
ANR	4703790	CallExpression	"dprintf ( D_ALWAYS , ""DeleteFileLater of %s failed err=%d"" , filename , errno )"		4703773	0					
ANR	4703791	Callee	dprintf		4703773	0					
ANR	4703792	Identifier	dprintf		4703773	0					
ANR	4703793	ArgumentList	D_ALWAYS		4703773	1					
ANR	4703794	Argument	D_ALWAYS		4703773	0					
ANR	4703795	Identifier	D_ALWAYS		4703773	0					
ANR	4703796	Argument	"""DeleteFileLater of %s failed err=%d"""		4703773	1					
ANR	4703797	PrimaryExpression	"""DeleteFileLater of %s failed err=%d"""		4703773	0					
ANR	4703798	Argument	filename		4703773	2					
ANR	4703799	Identifier	filename		4703773	0					
ANR	4703800	Argument	errno		4703773	3					
ANR	4703801	Identifier	errno		4703773	0					
ANR	4703802	ExpressionStatement	free ( filename )	64:2:2133:2148	4703773	1	True				
ANR	4703803	CallExpression	free ( filename )		4703773	0					
ANR	4703804	Callee	free		4703773	0					
ANR	4703805	Identifier	free		4703773	0					
ANR	4703806	ArgumentList	filename		4703773	1					
ANR	4703807	Argument	filename		4703773	0					
ANR	4703808	Identifier	filename		4703773	0					
ANR	4703809	Identifier	DeleteFileLater :: ~DeleteFileLater		4703773	1					
ANR	4703810	ParameterList			4703773	2					
ANR	4703811	CFGEntryNode	ENTRY		4703773		True				
ANR	4703812	CFGExitNode	EXIT		4703773		True				
ANR	4703813	Symbol	errno		4703773						
ANR	4703814	Symbol	filename		4703773						
ANR	4703815	Symbol	unlink		4703773						
ANR	4703816	Symbol	D_ALWAYS		4703773						
ANR	4703817	DeclStmt									
ANR	4703818	Decl							bool	"bool ( const char * path , uid_t * owner , gid_t * group , si_error_t & err )"	GetIds
ANR	4703819	DeclStmt									
ANR	4703820	Decl							bool	"bool ( const char * path , perm * po )"	recursive_chown_win32
ANR	4703821	Function	Directory :: Directory	77:0:2349:2683							
ANR	4703822	FunctionDef	"Directory :: Directory (const char * name , priv_state priv)"		4703821	0					
ANR	4703823	CompoundStatement		78:0:2408:2683	4703821	0					
ANR	4703824	ExpressionStatement	initialize ( priv )	79:1:2411:2429	4703821	0	True				
ANR	4703825	CallExpression	initialize ( priv )		4703821	0					
ANR	4703826	Callee	initialize		4703821	0					
ANR	4703827	Identifier	initialize		4703821	0					
ANR	4703828	ArgumentList	priv		4703821	1					
ANR	4703829	Argument	priv		4703821	0					
ANR	4703830	Identifier	priv		4703821	0					
ANR	4703831	ExpressionStatement	curr_dir = strnewp ( name )	81:1:2433:2457	4703821	1	True				
ANR	4703832	AssignmentExpression	curr_dir = strnewp ( name )		4703821	0		=			
ANR	4703833	Identifier	curr_dir		4703821	0					
ANR	4703834	CallExpression	strnewp ( name )		4703821	1					
ANR	4703835	Callee	strnewp		4703821	0					
ANR	4703836	Identifier	strnewp		4703821	0					
ANR	4703837	ArgumentList	name		4703821	1					
ANR	4703838	Argument	name		4703821	0					
ANR	4703839	Identifier	name		4703821	0					
ANR	4703840	ExpressionStatement	ASSERT ( curr_dir )	82:1:2460:2476	4703821	2	True				
ANR	4703841	CallExpression	ASSERT ( curr_dir )		4703821	0					
ANR	4703842	Callee	ASSERT		4703821	0					
ANR	4703843	Identifier	ASSERT		4703821	0					
ANR	4703844	ArgumentList	curr_dir		4703821	1					
ANR	4703845	Argument	curr_dir		4703821	0					
ANR	4703846	Identifier	curr_dir		4703821	0					
ANR	4703847	ExpressionStatement	owner_ids_inited = false	85:1:2494:2518	4703821	3	True				
ANR	4703848	AssignmentExpression	owner_ids_inited = false		4703821	0		=			
ANR	4703849	Identifier	owner_ids_inited		4703821	0					
ANR	4703850	Identifier	false		4703821	1					
ANR	4703851	ExpressionStatement	owner_uid = owner_gid = - 1	86:1:2521:2547	4703821	4	True				
ANR	4703852	AssignmentExpression	owner_uid = owner_gid = - 1		4703821	0		=			
ANR	4703853	Identifier	owner_uid		4703821	0					
ANR	4703854	AssignmentExpression	owner_gid = - 1		4703821	1		=			
ANR	4703855	Identifier	owner_gid		4703821	0					
ANR	4703856	UnaryOperationExpression	- 1		4703821	1					
ANR	4703857	UnaryOperator	-		4703821	0					
ANR	4703858	PrimaryExpression	1		4703821	1					
ANR	4703859	IfStatement	if ( priv == PRIV_FILE_OWNER )		4703821	5					
ANR	4703860	Condition	priv == PRIV_FILE_OWNER	87:5:2554:2576	4703821	0	True				
ANR	4703861	EqualityExpression	priv == PRIV_FILE_OWNER		4703821	0		==			
ANR	4703862	Identifier	priv		4703821	0					
ANR	4703863	Identifier	PRIV_FILE_OWNER		4703821	1					
ANR	4703864	CompoundStatement		10:31:171:171	4703821	1					
ANR	4703865	Statement	EXCEPT	88:2:2584:2589	4703821	0	True				
ANR	4703866	Statement	(	88:8:2590:2590	4703821	1	True				
ANR	4703867	Statement	"""Internal error: """	88:10:2592:2609	4703821	2	True				
ANR	4703868	Statement	"""Directory instantiated with PRIV_FILE_OWNER"""	89:13:2624:2668	4703821	3	True				
ANR	4703869	Statement	)	89:59:2670:2670	4703821	4	True				
ANR	4703870	ExpressionStatement		89:60:2671:2671	4703821	5	True				
ANR	4703871	Identifier	Directory :: Directory		4703821	1					
ANR	4703872	ParameterList	"const char * name , priv_state priv"		4703821	2					
ANR	4703873	Parameter	const char * name	77:22:2371:2386	4703821	0	True				
ANR	4703874	ParameterType	const char *		4703821	0					
ANR	4703875	Identifier	name		4703821	1					
ANR	4703876	Parameter	priv_state priv	77:40:2389:2403	4703821	1	True				
ANR	4703877	ParameterType	priv_state		4703821	0					
ANR	4703878	Identifier	priv		4703821	1					
ANR	4703879	CFGEntryNode	ENTRY		4703821		True				
ANR	4703880	CFGExitNode	EXIT		4703821		True				
ANR	4703881	Symbol	PRIV_FILE_OWNER		4703821						
ANR	4703882	Symbol	owner_gid		4703821						
ANR	4703883	Symbol	owner_ids_inited		4703821						
ANR	4703884	Symbol	owner_uid		4703821						
ANR	4703885	Symbol	name		4703821						
ANR	4703886	Symbol	false		4703821						
ANR	4703887	Symbol	strnewp		4703821						
ANR	4703888	Symbol	curr_dir		4703821						
ANR	4703889	Symbol	priv		4703821						
ANR	4703890	Function	Directory :: Directory	95:0:2687:3080							
ANR	4703891	FunctionDef	"Directory :: Directory (StatInfo * info , priv_state priv)"		4703890	0					
ANR	4703892	CompoundStatement		96:0:2744:3080	4703890	0					
ANR	4703893	ExpressionStatement	ASSERT ( info )	97:1:2747:2759	4703890	0	True				
ANR	4703894	CallExpression	ASSERT ( info )		4703890	0					
ANR	4703895	Callee	ASSERT		4703890	0					
ANR	4703896	Identifier	ASSERT		4703890	0					
ANR	4703897	ArgumentList	info		4703890	1					
ANR	4703898	Argument	info		4703890	0					
ANR	4703899	Identifier	info		4703890	0					
ANR	4703900	ExpressionStatement	initialize ( priv )	98:1:2762:2780	4703890	1	True				
ANR	4703901	CallExpression	initialize ( priv )		4703890	0					
ANR	4703902	Callee	initialize		4703890	0					
ANR	4703903	Identifier	initialize		4703890	0					
ANR	4703904	ArgumentList	priv		4703890	1					
ANR	4703905	Argument	priv		4703890	0					
ANR	4703906	Identifier	priv		4703890	0					
ANR	4703907	ExpressionStatement	curr_dir = strnewp ( info -> FullPath ( ) )	100:1:2784:2822	4703890	2	True				
ANR	4703908	AssignmentExpression	curr_dir = strnewp ( info -> FullPath ( ) )		4703890	0		=			
ANR	4703909	Identifier	curr_dir		4703890	0					
ANR	4703910	CallExpression	strnewp ( info -> FullPath ( ) )		4703890	1					
ANR	4703911	Callee	strnewp		4703890	0					
ANR	4703912	Identifier	strnewp		4703890	0					
ANR	4703913	ArgumentList	info -> FullPath ( )		4703890	1					
ANR	4703914	Argument	info -> FullPath ( )		4703890	0					
ANR	4703915	CallExpression	info -> FullPath ( )		4703890	0					
ANR	4703916	Callee	info -> FullPath		4703890	0					
ANR	4703917	PtrMemberAccess	info -> FullPath		4703890	0					
ANR	4703918	Identifier	info		4703890	0					
ANR	4703919	Identifier	FullPath		4703890	1					
ANR	4703920	ArgumentList			4703890	1					
ANR	4703921	ExpressionStatement	ASSERT ( curr_dir )	101:1:2825:2841	4703890	3	True				
ANR	4703922	CallExpression	ASSERT ( curr_dir )		4703890	0					
ANR	4703923	Callee	ASSERT		4703890	0					
ANR	4703924	Identifier	ASSERT		4703890	0					
ANR	4703925	ArgumentList	curr_dir		4703890	1					
ANR	4703926	Argument	curr_dir		4703890	0					
ANR	4703927	Identifier	curr_dir		4703890	0					
ANR	4703928	ExpressionStatement	owner_uid = info -> GetOwner ( )	104:1:2859:2887	4703890	4	True				
ANR	4703929	AssignmentExpression	owner_uid = info -> GetOwner ( )		4703890	0		=			
ANR	4703930	Identifier	owner_uid		4703890	0					
ANR	4703931	CallExpression	info -> GetOwner ( )		4703890	1					
ANR	4703932	Callee	info -> GetOwner		4703890	0					
ANR	4703933	PtrMemberAccess	info -> GetOwner		4703890	0					
ANR	4703934	Identifier	info		4703890	0					
ANR	4703935	Identifier	GetOwner		4703890	1					
ANR	4703936	ArgumentList			4703890	1					
ANR	4703937	ExpressionStatement	owner_gid = info -> GetGroup ( )	105:1:2890:2918	4703890	5	True				
ANR	4703938	AssignmentExpression	owner_gid = info -> GetGroup ( )		4703890	0		=			
ANR	4703939	Identifier	owner_gid		4703890	0					
ANR	4703940	CallExpression	info -> GetGroup ( )		4703890	1					
ANR	4703941	Callee	info -> GetGroup		4703890	0					
ANR	4703942	PtrMemberAccess	info -> GetGroup		4703890	0					
ANR	4703943	Identifier	info		4703890	0					
ANR	4703944	Identifier	GetGroup		4703890	1					
ANR	4703945	ArgumentList			4703890	1					
ANR	4703946	ExpressionStatement	owner_ids_inited = true	106:1:2921:2944	4703890	6	True				
ANR	4703947	AssignmentExpression	owner_ids_inited = true		4703890	0		=			
ANR	4703948	Identifier	owner_ids_inited		4703890	0					
ANR	4703949	Identifier	true		4703890	1					
ANR	4703950	IfStatement	if ( priv == PRIV_FILE_OWNER )		4703890	7					
ANR	4703951	Condition	priv == PRIV_FILE_OWNER	107:5:2951:2973	4703890	0	True				
ANR	4703952	EqualityExpression	priv == PRIV_FILE_OWNER		4703890	0		==			
ANR	4703953	Identifier	priv		4703890	0					
ANR	4703954	Identifier	PRIV_FILE_OWNER		4703890	1					
ANR	4703955	CompoundStatement		12:31:232:232	4703890	1					
ANR	4703956	Statement	EXCEPT	108:2:2981:2986	4703890	0	True				
ANR	4703957	Statement	(	108:8:2987:2987	4703890	1	True				
ANR	4703958	Statement	"""Internal error: """	108:10:2989:3006	4703890	2	True				
ANR	4703959	Statement	"""Directory instantiated with PRIV_FILE_OWNER"""	109:13:3021:3065	4703890	3	True				
ANR	4703960	Statement	)	109:59:3067:3067	4703890	4	True				
ANR	4703961	ExpressionStatement		109:60:3068:3068	4703890	5	True				
ANR	4703962	Identifier	Directory :: Directory		4703890	1					
ANR	4703963	ParameterList	"StatInfo * info , priv_state priv"		4703890	2					
ANR	4703964	Parameter	StatInfo * info	95:22:2709:2722	4703890	0	True				
ANR	4703965	ParameterType	StatInfo *		4703890	0					
ANR	4703966	Identifier	info		4703890	1					
ANR	4703967	Parameter	priv_state priv	95:38:2725:2739	4703890	1	True				
ANR	4703968	ParameterType	priv_state		4703890	0					
ANR	4703969	Identifier	priv		4703890	1					
ANR	4703970	CFGEntryNode	ENTRY		4703890		True				
ANR	4703971	CFGExitNode	EXIT		4703890		True				
ANR	4703972	Symbol	PRIV_FILE_OWNER		4703890						
ANR	4703973	Symbol	owner_gid		4703890						
ANR	4703974	Symbol	info -> GetGroup		4703890						
ANR	4703975	Symbol	info -> FullPath		4703890						
ANR	4703976	Symbol	curr_dir		4703890						
ANR	4703977	Symbol	info -> GetOwner		4703890						
ANR	4703978	Symbol	owner_uid		4703890						
ANR	4703979	Symbol	owner_ids_inited		4703890						
ANR	4703980	Symbol	true		4703890						
ANR	4703981	Symbol	strnewp		4703890						
ANR	4703982	Symbol	priv		4703890						
ANR	4703983	Symbol	* info		4703890						
ANR	4703984	Symbol	info		4703890						
ANR	4703985	Function	Directory :: initialize	115:0:3084:3552							
ANR	4703986	FunctionDef	Directory :: initialize (priv_state priv)		4703985	0					
ANR	4703987	CompoundStatement		117:0:3130:3552	4703985	0					
ANR	4703988	ExpressionStatement	curr = NULL	118:1:3133:3144	4703985	0	True				
ANR	4703989	AssignmentExpression	curr = NULL		4703985	0		=			
ANR	4703990	Identifier	curr		4703985	0					
ANR	4703991	Identifier	NULL		4703985	1					
ANR	4703992	ExpressionStatement	dirp = - 1	121:1:3161:3170	4703985	1	True				
ANR	4703993	AssignmentExpression	dirp = - 1		4703985	0		=			
ANR	4703994	Identifier	dirp		4703985	0					
ANR	4703995	UnaryOperationExpression	- 1		4703985	1					
ANR	4703996	UnaryOperator	-		4703985	0					
ANR	4703997	PrimaryExpression	1		4703985	1					
ANR	4703998	IfStatement	if ( can_switch_ids ( ) )		4703985	2					
ANR	4703999	Condition	can_switch_ids ( )	126:5:3206:3221	4703985	0	True				
ANR	4704000	CallExpression	can_switch_ids ( )		4703985	0					
ANR	4704001	Callee	can_switch_ids		4703985	0					
ANR	4704002	Identifier	can_switch_ids		4703985	0					
ANR	4704003	ArgumentList			4703985	1					
ANR	4704004	CompoundStatement		10:24:94:94	4703985	1					
ANR	4704005	ExpressionStatement	desired_priv_state = priv	127:2:3229:3254	4703985	0	True				
ANR	4704006	AssignmentExpression	desired_priv_state = priv		4703985	0		=			
ANR	4704007	Identifier	desired_priv_state		4703985	0					
ANR	4704008	Identifier	priv		4703985	1					
ANR	4704009	IfStatement	if ( priv == PRIV_UNKNOWN )		4703985	1					
ANR	4704010	Condition	priv == PRIV_UNKNOWN	128:6:3262:3281	4703985	0	True				
ANR	4704011	EqualityExpression	priv == PRIV_UNKNOWN		4703985	0		==			
ANR	4704012	Identifier	priv		4703985	0					
ANR	4704013	Identifier	PRIV_UNKNOWN		4703985	1					
ANR	4704014	CompoundStatement		12:29:154:154	4703985	1					
ANR	4704015	ExpressionStatement	want_priv_change = false	129:3:3290:3314	4703985	0	True				
ANR	4704016	AssignmentExpression	want_priv_change = false		4703985	0		=			
ANR	4704017	Identifier	want_priv_change		4703985	0					
ANR	4704018	Identifier	false		4703985	1					
ANR	4704019	ElseStatement	else		4703985	0					
ANR	4704020	CompoundStatement		14:9:194:194	4703985	0					
ANR	4704021	ExpressionStatement	want_priv_change = true	131:3:3330:3353	4703985	0	True				
ANR	4704022	AssignmentExpression	want_priv_change = true		4703985	0		=			
ANR	4704023	Identifier	want_priv_change		4703985	0					
ANR	4704024	Identifier	true		4703985	1					
ANR	4704025	ElseStatement	else		4703985	0					
ANR	4704026	CompoundStatement		17:8:236:236	4703985	0					
ANR	4704027	ExpressionStatement	desired_priv_state = PRIV_CONDOR	136:2:3487:3519	4703985	0	True				
ANR	4704028	AssignmentExpression	desired_priv_state = PRIV_CONDOR		4703985	0		=			
ANR	4704029	Identifier	desired_priv_state		4703985	0					
ANR	4704030	Identifier	PRIV_CONDOR		4703985	1					
ANR	4704031	ExpressionStatement	want_priv_change = false	137:2:3523:3547	4703985	1	True				
ANR	4704032	AssignmentExpression	want_priv_change = false		4703985	0		=			
ANR	4704033	Identifier	want_priv_change		4703985	0					
ANR	4704034	Identifier	false		4703985	1					
ANR	4704035	ReturnType	void		4703985	1					
ANR	4704036	Identifier	Directory :: initialize		4703985	2					
ANR	4704037	ParameterList	priv_state priv		4703985	3					
ANR	4704038	Parameter	priv_state priv	116:23:3112:3126	4703985	0	True				
ANR	4704039	ParameterType	priv_state		4703985	0					
ANR	4704040	Identifier	priv		4703985	1					
ANR	4704041	CFGEntryNode	ENTRY		4703985		True				
ANR	4704042	CFGExitNode	EXIT		4703985		True				
ANR	4704043	Symbol	NULL		4703985						
ANR	4704044	Symbol	can_switch_ids		4703985						
ANR	4704045	Symbol	false		4703985						
ANR	4704046	Symbol	true		4703985						
ANR	4704047	Symbol	priv		4703985						
ANR	4704048	Symbol	curr		4703985						
ANR	4704049	Symbol	dirp		4703985						
ANR	4704050	Symbol	PRIV_CONDOR		4703985						
ANR	4704051	Symbol	desired_priv_state		4703985						
ANR	4704052	Symbol	PRIV_UNKNOWN		4703985						
ANR	4704053	Symbol	want_priv_change		4703985						
ANR	4704054	Function	Directory :: ~Directory	142:0:3556:3781							
ANR	4704055	FunctionDef	Directory :: ~Directory ()		4704054	0					
ANR	4704056	CompoundStatement		143:0:3580:3781	4704054	0					
ANR	4704057	Statement	delete	144:1:3583:3588	4704054	0	True				
ANR	4704058	Statement	[	144:8:3590:3590	4704054	1	True				
ANR	4704059	Statement	]	144:9:3591:3591	4704054	2	True				
ANR	4704060	ExpressionStatement	curr_dir	144:11:3593:3601	4704054	3	True				
ANR	4704061	Identifier	curr_dir		4704054	0					
ANR	4704062	IfStatement	if ( curr )		4704054	4					
ANR	4704063	Condition	curr	145:5:3608:3611	4704054	0	True				
ANR	4704064	Identifier	curr		4704054	0					
ANR	4704065	CompoundStatement		3:12:34:34	4704054	1					
ANR	4704066	Statement	delete	146:2:3619:3624	4704054	0	True				
ANR	4704067	ExpressionStatement	curr	146:9:3626:3630	4704054	1	True				
ANR	4704068	Identifier	curr		4704054	0					
ANR	4704069	IfStatement	if ( dirp )		4704054	5					
ANR	4704070	Condition	dirp	151:5:3664:3667	4704054	0	True				
ANR	4704071	Identifier	dirp		4704054	0					
ANR	4704072	CompoundStatement		9:12:90:90	4704054	1					
ANR	4704073	ExpressionStatement	( void ) condor_closedir ( dirp )	152:2:3675:3704	4704054	0	True				
ANR	4704074	CastExpression	( void ) condor_closedir ( dirp )		4704054	0					
ANR	4704075	CastTarget	void		4704054	0					
ANR	4704076	CallExpression	condor_closedir ( dirp )		4704054	1					
ANR	4704077	Callee	condor_closedir		4704054	0					
ANR	4704078	Identifier	condor_closedir		4704054	0					
ANR	4704079	ArgumentList	dirp		4704054	1					
ANR	4704080	Argument	dirp		4704054	0					
ANR	4704081	Identifier	dirp		4704054	0					
ANR	4704082	Identifier	Directory :: ~Directory		4704054	1					
ANR	4704083	ParameterList			4704054	2					
ANR	4704084	CFGEntryNode	ENTRY		4704054		True				
ANR	4704085	CFGExitNode	EXIT		4704054		True				
ANR	4704086	Symbol	curr		4704054						
ANR	4704087	Symbol	dirp		4704054						
ANR	4704088	Function	Directory :: GetDirectorySize	162:0:3784:4216							
ANR	4704089	FunctionDef	Directory :: GetDirectorySize ()		4704088	0					
ANR	4704090	CompoundStatement		164:0:3825:4216	4704088	0					
ANR	4704091	IdentifierDeclStatement	const char * thefile = NULL ;	165:1:3828:3854	4704088	0	True				
ANR	4704092	IdentifierDecl	* thefile = NULL		4704088	0					
ANR	4704093	IdentifierDeclType	const char *		4704088	0					
ANR	4704094	Identifier	thefile		4704088	1					
ANR	4704095	AssignmentExpression	* thefile = NULL		4704088	2		=			
ANR	4704096	Identifier	NULL		4704088	0					
ANR	4704097	Identifier	NULL		4704088	1					
ANR	4704098	IdentifierDeclStatement	filesize_t dir_size = 0 ;	166:1:3857:3880	4704088	1	True				
ANR	4704099	IdentifierDecl	dir_size = 0		4704088	0					
ANR	4704100	IdentifierDeclType	filesize_t		4704088	0					
ANR	4704101	Identifier	dir_size		4704088	1					
ANR	4704102	AssignmentExpression	dir_size = 0		4704088	2		=			
ANR	4704103	Identifier	dir_size		4704088	0					
ANR	4704104	PrimaryExpression	0		4704088	1					
ANR	4704105	ExpressionStatement	Set_Access_Priv ( )	168:1:3884:3901	4704088	2	True				
ANR	4704106	CallExpression	Set_Access_Priv ( )		4704088	0					
ANR	4704107	Callee	Set_Access_Priv		4704088	0					
ANR	4704108	Identifier	Set_Access_Priv		4704088	0					
ANR	4704109	ArgumentList			4704088	1					
ANR	4704110	ExpressionStatement	Rewind ( )	170:1:3905:3913	4704088	3	True				
ANR	4704111	CallExpression	Rewind ( )		4704088	0					
ANR	4704112	Callee	Rewind		4704088	0					
ANR	4704113	Identifier	Rewind		4704088	0					
ANR	4704114	ArgumentList			4704088	1					
ANR	4704115	WhileStatement	while ( ( thefile = Next ( ) ) )		4704088	4					
ANR	4704116	Condition	thefile = Next ( )	172:9:3925:3940	4704088	0	True				
ANR	4704117	AssignmentExpression	thefile = Next ( )		4704088	0		=			
ANR	4704118	Identifier	thefile		4704088	0					
ANR	4704119	CallExpression	Next ( )		4704088	1					
ANR	4704120	Callee	Next		4704088	0					
ANR	4704121	Identifier	Next		4704088	0					
ANR	4704122	ArgumentList			4704088	1					
ANR	4704123	CompoundStatement		9:28:118:118	4704088	1					
ANR	4704124	IfStatement	if ( IsDirectory ( ) && ! IsSymlink ( ) )		4704088	0					
ANR	4704125	Condition	IsDirectory ( ) && ! IsSymlink ( )	173:7:3953:3981	4704088	0	True				
ANR	4704126	AndExpression	IsDirectory ( ) && ! IsSymlink ( )		4704088	0		&&			
ANR	4704127	CallExpression	IsDirectory ( )		4704088	0					
ANR	4704128	Callee	IsDirectory		4704088	0					
ANR	4704129	Identifier	IsDirectory		4704088	0					
ANR	4704130	ArgumentList			4704088	1					
ANR	4704131	UnaryOperationExpression	! IsSymlink ( )		4704088	1					
ANR	4704132	UnaryOperator	!		4704088	0					
ANR	4704133	CallExpression	IsSymlink ( )		4704088	1					
ANR	4704134	Callee	IsSymlink		4704088	0					
ANR	4704135	Identifier	IsSymlink		4704088	0					
ANR	4704136	ArgumentList			4704088	1					
ANR	4704137	CompoundStatement		12:3:211:264	4704088	1					
ANR	4704138	IdentifierDeclStatement	"Directory subdir ( GetFullPath ( ) , desired_priv_state ) ;"	175:3:4037:4090	4704088	0	True				
ANR	4704139	IdentifierDecl	"subdir ( GetFullPath ( ) , desired_priv_state )"		4704088	0					
ANR	4704140	IdentifierDeclType	Directory		4704088	0					
ANR	4704141	Identifier	subdir		4704088	1					
ANR	4704142	Expression	"GetFullPath ( ) , desired_priv_state"		4704088	2					
ANR	4704143	CallExpression	GetFullPath ( )		4704088	0					
ANR	4704144	Callee	GetFullPath		4704088	0					
ANR	4704145	Identifier	GetFullPath		4704088	0					
ANR	4704146	ArgumentList			4704088	1					
ANR	4704147	Identifier	desired_priv_state		4704088	1					
ANR	4704148	ExpressionStatement	dir_size += subdir . GetDirectorySize ( )	176:3:4095:4132	4704088	1	True				
ANR	4704149	AssignmentExpression	dir_size += subdir . GetDirectorySize ( )		4704088	0		+=			
ANR	4704150	Identifier	dir_size		4704088	0					
ANR	4704151	CallExpression	subdir . GetDirectorySize ( )		4704088	1					
ANR	4704152	Callee	subdir . GetDirectorySize		4704088	0					
ANR	4704153	MemberAccess	subdir . GetDirectorySize		4704088	0					
ANR	4704154	Identifier	subdir		4704088	0					
ANR	4704155	Identifier	GetDirectorySize		4704088	1					
ANR	4704156	ArgumentList			4704088	1					
ANR	4704157	ElseStatement	else		4704088	0					
ANR	4704158	CompoundStatement		14:9:317:317	4704088	0					
ANR	4704159	ExpressionStatement	dir_size += GetFileSize ( )	178:3:4148:4173	4704088	0	True				
ANR	4704160	AssignmentExpression	dir_size += GetFileSize ( )		4704088	0		+=			
ANR	4704161	Identifier	dir_size		4704088	0					
ANR	4704162	CallExpression	GetFileSize ( )		4704088	1					
ANR	4704163	Callee	GetFileSize		4704088	0					
ANR	4704164	Identifier	GetFileSize		4704088	0					
ANR	4704165	ArgumentList			4704088	1					
ANR	4704166	ExpressionStatement	return_and_resetpriv ( dir_size )	182:1:4184:4214	4704088	5	True				
ANR	4704167	CallExpression	return_and_resetpriv ( dir_size )		4704088	0					
ANR	4704168	Callee	return_and_resetpriv		4704088	0					
ANR	4704169	Identifier	return_and_resetpriv		4704088	0					
ANR	4704170	ArgumentList	dir_size		4704088	1					
ANR	4704171	Argument	dir_size		4704088	0					
ANR	4704172	Identifier	dir_size		4704088	0					
ANR	4704173	ReturnType	filesize_t		4704088	1					
ANR	4704174	Identifier	Directory :: GetDirectorySize		4704088	2					
ANR	4704175	ParameterList			4704088	3					
ANR	4704176	CFGEntryNode	ENTRY		4704088		True				
ANR	4704177	CFGExitNode	EXIT		4704088		True				
ANR	4704178	Symbol	subdir		4704088						
ANR	4704179	Symbol	NULL		4704088						
ANR	4704180	Symbol	IsDirectory		4704088						
ANR	4704181	Symbol	subdir . GetDirectorySize		4704088						
ANR	4704182	Symbol	thefile		4704088						
ANR	4704183	Symbol	Next		4704088						
ANR	4704184	Symbol	IsSymlink		4704088						
ANR	4704185	Symbol	dir_size		4704088						
ANR	4704186	Symbol	GetFileSize		4704088						
ANR	4704187	Function	Directory :: Find_Named_Entry	185:0:4219:4524							
ANR	4704188	FunctionDef	Directory :: Find_Named_Entry (const char * name)		4704187	0					
ANR	4704189	CompoundStatement		187:0:4272:4524	4704187	0					
ANR	4704190	ExpressionStatement	ASSERT ( name )	188:1:4275:4287	4704187	0	True				
ANR	4704191	CallExpression	ASSERT ( name )		4704187	0					
ANR	4704192	Callee	ASSERT		4704187	0					
ANR	4704193	Identifier	ASSERT		4704187	0					
ANR	4704194	ArgumentList	name		4704187	1					
ANR	4704195	Argument	name		4704187	0					
ANR	4704196	Identifier	name		4704187	0					
ANR	4704197	IdentifierDeclStatement	const char * entry = NULL ;	189:1:4290:4314	4704187	1	True				
ANR	4704198	IdentifierDecl	* entry = NULL		4704187	0					
ANR	4704199	IdentifierDeclType	const char *		4704187	0					
ANR	4704200	Identifier	entry		4704187	1					
ANR	4704201	AssignmentExpression	* entry = NULL		4704187	2		=			
ANR	4704202	Identifier	NULL		4704187	0					
ANR	4704203	Identifier	NULL		4704187	1					
ANR	4704204	IdentifierDeclStatement	bool ret_value = false ;	190:1:4317:4339	4704187	2	True				
ANR	4704205	IdentifierDecl	ret_value = false		4704187	0					
ANR	4704206	IdentifierDeclType	bool		4704187	0					
ANR	4704207	Identifier	ret_value		4704187	1					
ANR	4704208	AssignmentExpression	ret_value = false		4704187	2		=			
ANR	4704209	Identifier	false		4704187	0					
ANR	4704210	Identifier	false		4704187	1					
ANR	4704211	ExpressionStatement	Set_Access_Priv ( )	192:1:4343:4360	4704187	3	True				
ANR	4704212	CallExpression	Set_Access_Priv ( )		4704187	0					
ANR	4704213	Callee	Set_Access_Priv		4704187	0					
ANR	4704214	Identifier	Set_Access_Priv		4704187	0					
ANR	4704215	ArgumentList			4704187	1					
ANR	4704216	ExpressionStatement	Rewind ( )	194:1:4364:4372	4704187	4	True				
ANR	4704217	CallExpression	Rewind ( )		4704187	0					
ANR	4704218	Callee	Rewind		4704187	0					
ANR	4704219	Identifier	Rewind		4704187	0					
ANR	4704220	ArgumentList			4704187	1					
ANR	4704221	WhileStatement	while ( ( entry = Next ( ) ) )		4704187	5					
ANR	4704222	Condition	entry = Next ( )	196:9:4384:4399	4704187	0	True				
ANR	4704223	AssignmentExpression	entry = Next ( )		4704187	0		=			
ANR	4704224	Identifier	entry		4704187	0					
ANR	4704225	CallExpression	Next ( )		4704187	1					
ANR	4704226	Callee	Next		4704187	0					
ANR	4704227	Identifier	Next		4704187	0					
ANR	4704228	ArgumentList			4704187	1					
ANR	4704229	CompoundStatement		10:28:130:130	4704187	1					
ANR	4704230	IfStatement	"if ( ! strcmp ( entry , name ) )"		4704187	0					
ANR	4704231	Condition	"! strcmp ( entry , name )"	197:7:4412:4434	4704187	0	True				
ANR	4704232	UnaryOperationExpression	"! strcmp ( entry , name )"		4704187	0					
ANR	4704233	UnaryOperator	!		4704187	0					
ANR	4704234	CallExpression	"strcmp ( entry , name )"		4704187	1					
ANR	4704235	Callee	strcmp		4704187	0					
ANR	4704236	Identifier	strcmp		4704187	0					
ANR	4704237	ArgumentList	entry		4704187	1					
ANR	4704238	Argument	entry		4704187	0					
ANR	4704239	Identifier	entry		4704187	0					
ANR	4704240	Argument	name		4704187	1					
ANR	4704241	Identifier	name		4704187	0					
ANR	4704242	CompoundStatement		11:33:165:165	4704187	1					
ANR	4704243	ExpressionStatement	ret_value = true	198:3:4443:4459	4704187	0	True				
ANR	4704244	AssignmentExpression	ret_value = true		4704187	0		=			
ANR	4704245	Identifier	ret_value		4704187	0					
ANR	4704246	Identifier	true		4704187	1					
ANR	4704247	BreakStatement	break ;	199:3:4464:4469	4704187	1	True				
ANR	4704248	ExpressionStatement	return_and_resetpriv ( ret_value )	204:1:4489:4522	4704187	6	True				
ANR	4704249	CallExpression	return_and_resetpriv ( ret_value )		4704187	0					
ANR	4704250	Callee	return_and_resetpriv		4704187	0					
ANR	4704251	Identifier	return_and_resetpriv		4704187	0					
ANR	4704252	ArgumentList	ret_value		4704187	1					
ANR	4704253	Argument	ret_value		4704187	0					
ANR	4704254	Identifier	ret_value		4704187	0					
ANR	4704255	ReturnType	bool		4704187	1					
ANR	4704256	Identifier	Directory :: Find_Named_Entry		4704187	2					
ANR	4704257	ParameterList	const char * name		4704187	3					
ANR	4704258	Parameter	const char * name	186:29:4253:4268	4704187	0	True				
ANR	4704259	ParameterType	const char *		4704187	0					
ANR	4704260	Identifier	name		4704187	1					
ANR	4704261	CFGEntryNode	ENTRY		4704187		True				
ANR	4704262	CFGExitNode	EXIT		4704187		True				
ANR	4704263	Symbol	strcmp		4704187						
ANR	4704264	Symbol	entry		4704187						
ANR	4704265	Symbol	NULL		4704187						
ANR	4704266	Symbol	Next		4704187						
ANR	4704267	Symbol	name		4704187						
ANR	4704268	Symbol	false		4704187						
ANR	4704269	Symbol	ret_value		4704187						
ANR	4704270	Symbol	true		4704187						
ANR	4704271	Function	Directory :: Remove_Entire_Directory	207:0:4527:4832							
ANR	4704272	FunctionDef	Directory :: Remove_Entire_Directory ()		4704271	0					
ANR	4704273	CompoundStatement		209:0:4575:4832	4704271	0					
ANR	4704274	IdentifierDeclStatement	const char * thefile = NULL ;	210:1:4578:4604	4704271	0	True				
ANR	4704275	IdentifierDecl	* thefile = NULL		4704271	0					
ANR	4704276	IdentifierDeclType	const char *		4704271	0					
ANR	4704277	Identifier	thefile		4704271	1					
ANR	4704278	AssignmentExpression	* thefile = NULL		4704271	2		=			
ANR	4704279	Identifier	NULL		4704271	0					
ANR	4704280	Identifier	NULL		4704271	1					
ANR	4704281	IdentifierDeclStatement	bool ret_value = true ;	211:1:4607:4628	4704271	1	True				
ANR	4704282	IdentifierDecl	ret_value = true		4704271	0					
ANR	4704283	IdentifierDeclType	bool		4704271	0					
ANR	4704284	Identifier	ret_value		4704271	1					
ANR	4704285	AssignmentExpression	ret_value = true		4704271	2		=			
ANR	4704286	Identifier	true		4704271	0					
ANR	4704287	Identifier	true		4704271	1					
ANR	4704288	ExpressionStatement	Set_Access_Priv ( )	213:1:4632:4649	4704271	2	True				
ANR	4704289	CallExpression	Set_Access_Priv ( )		4704271	0					
ANR	4704290	Callee	Set_Access_Priv		4704271	0					
ANR	4704291	Identifier	Set_Access_Priv		4704271	0					
ANR	4704292	ArgumentList			4704271	1					
ANR	4704293	IfStatement	if ( ! Rewind ( ) )		4704271	3					
ANR	4704294	Condition	! Rewind ( )	215:4:4656:4664	4704271	0	True				
ANR	4704295	UnaryOperationExpression	! Rewind ( )		4704271	0					
ANR	4704296	UnaryOperator	!		4704271	0					
ANR	4704297	CallExpression	Rewind ( )		4704271	1					
ANR	4704298	Callee	Rewind		4704271	0					
ANR	4704299	Identifier	Rewind		4704271	0					
ANR	4704300	ArgumentList			4704271	1					
ANR	4704301	CompoundStatement		7:15:91:91	4704271	1					
ANR	4704302	ExpressionStatement	return_and_resetpriv ( false )	216:2:4671:4698	4704271	0	True				
ANR	4704303	CallExpression	return_and_resetpriv ( false )		4704271	0					
ANR	4704304	Callee	return_and_resetpriv		4704271	0					
ANR	4704305	Identifier	return_and_resetpriv		4704271	0					
ANR	4704306	ArgumentList	false		4704271	1					
ANR	4704307	Argument	false		4704271	0					
ANR	4704308	Identifier	false		4704271	0					
ANR	4704309	WhileStatement	while ( ( thefile = Next ( ) ) )		4704271	4					
ANR	4704310	Condition	thefile = Next ( )	219:9:4713:4728	4704271	0	True				
ANR	4704311	AssignmentExpression	thefile = Next ( )		4704271	0		=			
ANR	4704312	Identifier	thefile		4704271	0					
ANR	4704313	CallExpression	Next ( )		4704271	1					
ANR	4704314	Callee	Next		4704271	0					
ANR	4704315	Identifier	Next		4704271	0					
ANR	4704316	ArgumentList			4704271	1					
ANR	4704317	CompoundStatement		11:28:156:156	4704271	1					
ANR	4704318	IfStatement	if ( ! Remove_Current_File ( ) )		4704271	0					
ANR	4704319	Condition	! Remove_Current_File ( )	220:6:4740:4762	4704271	0	True				
ANR	4704320	UnaryOperationExpression	! Remove_Current_File ( )		4704271	0					
ANR	4704321	UnaryOperator	!		4704271	0					
ANR	4704322	CallExpression	Remove_Current_File ( )		4704271	1					
ANR	4704323	Callee	Remove_Current_File		4704271	0					
ANR	4704324	Identifier	Remove_Current_File		4704271	0					
ANR	4704325	ArgumentList			4704271	1					
ANR	4704326	CompoundStatement		12:32:190:190	4704271	1					
ANR	4704327	ExpressionStatement	ret_value = false	221:3:4771:4788	4704271	0	True				
ANR	4704328	AssignmentExpression	ret_value = false		4704271	0		=			
ANR	4704329	Identifier	ret_value		4704271	0					
ANR	4704330	Identifier	false		4704271	1					
ANR	4704331	ExpressionStatement	return_and_resetpriv ( ret_value )	225:1:4799:4830	4704271	5	True				
ANR	4704332	CallExpression	return_and_resetpriv ( ret_value )		4704271	0					
ANR	4704333	Callee	return_and_resetpriv		4704271	0					
ANR	4704334	Identifier	return_and_resetpriv		4704271	0					
ANR	4704335	ArgumentList	ret_value		4704271	1					
ANR	4704336	Argument	ret_value		4704271	0					
ANR	4704337	Identifier	ret_value		4704271	0					
ANR	4704338	ReturnType	bool		4704271	1					
ANR	4704339	Identifier	Directory :: Remove_Entire_Directory		4704271	2					
ANR	4704340	ParameterList			4704271	3					
ANR	4704341	CFGEntryNode	ENTRY		4704271		True				
ANR	4704342	CFGExitNode	EXIT		4704271		True				
ANR	4704343	Symbol	NULL		4704271						
ANR	4704344	Symbol	Remove_Current_File		4704271						
ANR	4704345	Symbol	thefile		4704271						
ANR	4704346	Symbol	Next		4704271						
ANR	4704347	Symbol	true		4704271						
ANR	4704348	Symbol	ret_value		4704271						
ANR	4704349	Symbol	false		4704271						
ANR	4704350	Symbol	Rewind		4704271						
ANR	4704351	Function	Directory :: Recursive_Chown	229:0:4856:5057							
ANR	4704352	FunctionDef	"Directory :: Recursive_Chown (uid_t src_uid , uid_t dst_uid , gid_t dst_gid , bool non_root_okay)"		4704351	0					
ANR	4704353	CompoundStatement		232:0:4966:5057	4704351	0					
ANR	4704354	ReturnStatement	"return recursive_chown ( GetDirectoryPath ( ) , src_uid , dst_uid , dst_gid , non_root_okay ) ;"	233:1:4969:5055	4704351	0	True				
ANR	4704355	CallExpression	"recursive_chown ( GetDirectoryPath ( ) , src_uid , dst_uid , dst_gid , non_root_okay )"		4704351	0					
ANR	4704356	Callee	recursive_chown		4704351	0					
ANR	4704357	Identifier	recursive_chown		4704351	0					
ANR	4704358	ArgumentList	GetDirectoryPath ( )		4704351	1					
ANR	4704359	Argument	GetDirectoryPath ( )		4704351	0					
ANR	4704360	CallExpression	GetDirectoryPath ( )		4704351	0					
ANR	4704361	Callee	GetDirectoryPath		4704351	0					
ANR	4704362	Identifier	GetDirectoryPath		4704351	0					
ANR	4704363	ArgumentList			4704351	1					
ANR	4704364	Argument	src_uid		4704351	1					
ANR	4704365	Identifier	src_uid		4704351	0					
ANR	4704366	Argument	dst_uid		4704351	2					
ANR	4704367	Identifier	dst_uid		4704351	0					
ANR	4704368	Argument	dst_gid		4704351	3					
ANR	4704369	Identifier	dst_gid		4704351	0					
ANR	4704370	Argument	non_root_okay		4704351	4					
ANR	4704371	Identifier	non_root_okay		4704351	0					
ANR	4704372	ReturnType	bool		4704351	1					
ANR	4704373	Identifier	Directory :: Recursive_Chown		4704351	2					
ANR	4704374	ParameterList	"uid_t src_uid , uid_t dst_uid , gid_t dst_gid , bool non_root_okay"		4704351	3					
ANR	4704375	Parameter	uid_t src_uid	230:27:4888:4900	4704351	0	True				
ANR	4704376	ParameterType	uid_t		4704351	0					
ANR	4704377	Identifier	src_uid		4704351	1					
ANR	4704378	Parameter	uid_t dst_uid	230:42:4903:4915	4704351	1	True				
ANR	4704379	ParameterType	uid_t		4704351	0					
ANR	4704380	Identifier	dst_uid		4704351	1					
ANR	4704381	Parameter	gid_t dst_gid	230:57:4918:4930	4704351	2	True				
ANR	4704382	ParameterType	gid_t		4704351	0					
ANR	4704383	Identifier	dst_gid		4704351	1					
ANR	4704384	Parameter	bool non_root_okay	231:2:4935:4952	4704351	3	True				
ANR	4704385	ParameterType	bool		4704351	0					
ANR	4704386	Identifier	non_root_okay		4704351	1					
ANR	4704387	CFGEntryNode	ENTRY		4704351		True				
ANR	4704388	CFGExitNode	EXIT		4704351		True				
ANR	4704389	Symbol	src_uid		4704351						
ANR	4704390	Symbol	dst_gid		4704351						
ANR	4704391	Symbol	non_root_okay		4704351						
ANR	4704392	Symbol	GetDirectoryPath		4704351						
ANR	4704393	Symbol	dst_uid		4704351						
ANR	4704394	Symbol	recursive_chown		4704351						
ANR	4704395	Function	Directory :: Remove_Full_Path	238:0:5090:5179							
ANR	4704396	FunctionDef	Directory :: Remove_Full_Path (const char * path)		4704395	0					
ANR	4704397	CompoundStatement		240:0:5143:5179	4704395	0					
ANR	4704398	ReturnStatement	"return do_remove ( path , false ) ;"	241:1:5146:5177	4704395	0	True				
ANR	4704399	CallExpression	"do_remove ( path , false )"		4704395	0					
ANR	4704400	Callee	do_remove		4704395	0					
ANR	4704401	Identifier	do_remove		4704395	0					
ANR	4704402	ArgumentList	path		4704395	1					
ANR	4704403	Argument	path		4704395	0					
ANR	4704404	Identifier	path		4704395	0					
ANR	4704405	Argument	false		4704395	1					
ANR	4704406	Identifier	false		4704395	0					
ANR	4704407	ReturnType	bool		4704395	1					
ANR	4704408	Identifier	Directory :: Remove_Full_Path		4704395	2					
ANR	4704409	ParameterList	const char * path		4704395	3					
ANR	4704410	Parameter	const char * path	239:29:5124:5139	4704395	0	True				
ANR	4704411	ParameterType	const char *		4704395	0					
ANR	4704412	Identifier	path		4704395	1					
ANR	4704413	CFGEntryNode	ENTRY		4704395		True				
ANR	4704414	CFGExitNode	EXIT		4704395		True				
ANR	4704415	Symbol	do_remove		4704395						
ANR	4704416	Symbol	path		4704395						
ANR	4704417	Symbol	false		4704395						
ANR	4704418	Function	Directory :: Remove_Current_File	244:0:5182:5391							
ANR	4704419	FunctionDef	Directory :: Remove_Current_File ()		4704418	0					
ANR	4704420	CompoundStatement		246:0:5227:5391	4704418	0					
ANR	4704421	IfStatement	if ( curr == NULL )		4704418	0					
ANR	4704422	Condition	curr == NULL	247:6:5235:5246	4704418	0	True				
ANR	4704423	EqualityExpression	curr == NULL		4704418	0		==			
ANR	4704424	Identifier	curr		4704418	0					
ANR	4704425	Identifier	NULL		4704418	1					
ANR	4704426	CompoundStatement		2:21:22:22	4704418	1					
ANR	4704427	ReturnStatement	return false ;	250:2:5329:5341	4704418	0	True				
ANR	4704428	Identifier	false		4704418	0					
ANR	4704429	ReturnStatement	"return do_remove ( curr -> FullPath ( ) , true ) ;"	252:1:5347:5389	4704418	1	True				
ANR	4704430	CallExpression	"do_remove ( curr -> FullPath ( ) , true )"		4704418	0					
ANR	4704431	Callee	do_remove		4704418	0					
ANR	4704432	Identifier	do_remove		4704418	0					
ANR	4704433	ArgumentList	curr -> FullPath ( )		4704418	1					
ANR	4704434	Argument	curr -> FullPath ( )		4704418	0					
ANR	4704435	CallExpression	curr -> FullPath ( )		4704418	0					
ANR	4704436	Callee	curr -> FullPath		4704418	0					
ANR	4704437	PtrMemberAccess	curr -> FullPath		4704418	0					
ANR	4704438	Identifier	curr		4704418	0					
ANR	4704439	Identifier	FullPath		4704418	1					
ANR	4704440	ArgumentList			4704418	1					
ANR	4704441	Argument	true		4704418	1					
ANR	4704442	Identifier	true		4704418	0					
ANR	4704443	ReturnType	bool		4704418	1					
ANR	4704444	Identifier	Directory :: Remove_Current_File		4704418	2					
ANR	4704445	ParameterList			4704418	3					
ANR	4704446	CFGEntryNode	ENTRY		4704418		True				
ANR	4704447	CFGExitNode	EXIT		4704418		True				
ANR	4704448	Symbol	do_remove		4704418						
ANR	4704449	Symbol	NULL		4704418						
ANR	4704450	Symbol	* curr		4704418						
ANR	4704451	Symbol	false		4704418						
ANR	4704452	Symbol	true		4704418						
ANR	4704453	Symbol	curr		4704418						
ANR	4704454	Symbol	curr -> FullPath		4704418						
ANR	4704455	Function	Directory :: do_remove	256:0:5396:5837							
ANR	4704456	FunctionDef	"Directory :: do_remove (const char * path , bool is_curr)"		4704455	0					
ANR	4704457	CompoundStatement		258:0:5457:5837	4704455	0					
ANR	4704458	IdentifierDeclStatement	bool is_dir = false ;	259:1:5460:5479	4704455	0	True				
ANR	4704459	IdentifierDecl	is_dir = false		4704455	0					
ANR	4704460	IdentifierDeclType	bool		4704455	0					
ANR	4704461	Identifier	is_dir		4704455	1					
ANR	4704462	AssignmentExpression	is_dir = false		4704455	2		=			
ANR	4704463	Identifier	false		4704455	0					
ANR	4704464	Identifier	false		4704455	1					
ANR	4704465	IfStatement	if ( is_curr )		4704455	1					
ANR	4704466	Condition	is_curr	264:5:5614:5620	4704455	0	True				
ANR	4704467	Identifier	is_curr		4704455	0					
ANR	4704468	CompoundStatement		7:15:166:166	4704455	1					
ANR	4704469	ExpressionStatement	is_dir = IsDirectory ( ) && ! IsSymlink ( )	265:2:5628:5666	4704455	0	True				
ANR	4704470	AssignmentExpression	is_dir = IsDirectory ( ) && ! IsSymlink ( )		4704455	0		=			
ANR	4704471	Identifier	is_dir		4704455	0					
ANR	4704472	AndExpression	IsDirectory ( ) && ! IsSymlink ( )		4704455	1		&&			
ANR	4704473	CallExpression	IsDirectory ( )		4704455	0					
ANR	4704474	Callee	IsDirectory		4704455	0					
ANR	4704475	Identifier	IsDirectory		4704455	0					
ANR	4704476	ArgumentList			4704455	1					
ANR	4704477	UnaryOperationExpression	! IsSymlink ( )		4704455	1					
ANR	4704478	UnaryOperator	!		4704455	0					
ANR	4704479	CallExpression	IsSymlink ( )		4704455	1					
ANR	4704480	Callee	IsSymlink		4704455	0					
ANR	4704481	Identifier	IsSymlink		4704455	0					
ANR	4704482	ArgumentList			4704455	1					
ANR	4704483	ElseStatement	else		4704455	0					
ANR	4704484	CompoundStatement		10:2:222:241	4704455	0					
ANR	4704485	IdentifierDeclStatement	StatInfo si ( path ) ;	267:2:5680:5699	4704455	0	True				
ANR	4704486	IdentifierDecl	si ( path )		4704455	0					
ANR	4704487	IdentifierDeclType	StatInfo		4704455	0					
ANR	4704488	Identifier	si		4704455	1					
ANR	4704489	Identifier	path		4704455	2					
ANR	4704490	ExpressionStatement	is_dir = si . IsDirectory ( ) && ! si . IsSymlink ( )	268:2:5703:5748	4704455	1	True				
ANR	4704491	AssignmentExpression	is_dir = si . IsDirectory ( ) && ! si . IsSymlink ( )		4704455	0		=			
ANR	4704492	Identifier	is_dir		4704455	0					
ANR	4704493	AndExpression	si . IsDirectory ( ) && ! si . IsSymlink ( )		4704455	1		&&			
ANR	4704494	CallExpression	si . IsDirectory ( )		4704455	0					
ANR	4704495	Callee	si . IsDirectory		4704455	0					
ANR	4704496	MemberAccess	si . IsDirectory		4704455	0					
ANR	4704497	Identifier	si		4704455	0					
ANR	4704498	Identifier	IsDirectory		4704455	1					
ANR	4704499	ArgumentList			4704455	1					
ANR	4704500	UnaryOperationExpression	! si . IsSymlink ( )		4704455	1					
ANR	4704501	UnaryOperator	!		4704455	0					
ANR	4704502	CallExpression	si . IsSymlink ( )		4704455	1					
ANR	4704503	Callee	si . IsSymlink		4704455	0					
ANR	4704504	MemberAccess	si . IsSymlink		4704455	0					
ANR	4704505	Identifier	si		4704455	0					
ANR	4704506	Identifier	IsSymlink		4704455	1					
ANR	4704507	ArgumentList			4704455	1					
ANR	4704508	IfStatement	if ( is_dir )		4704455	2					
ANR	4704509	Condition	is_dir	271:5:5759:5764	4704455	0	True				
ANR	4704510	Identifier	is_dir		4704455	0					
ANR	4704511	CompoundStatement		14:14:310:310	4704455	1					
ANR	4704512	ReturnStatement	return do_remove_dir ( path ) ;	272:2:5772:5800	4704455	0	True				
ANR	4704513	CallExpression	do_remove_dir ( path )		4704455	0					
ANR	4704514	Callee	do_remove_dir		4704455	0					
ANR	4704515	Identifier	do_remove_dir		4704455	0					
ANR	4704516	ArgumentList	path		4704455	1					
ANR	4704517	Argument	path		4704455	0					
ANR	4704518	Identifier	path		4704455	0					
ANR	4704519	ReturnStatement	return do_remove_file ( path ) ;	274:1:5806:5835	4704455	3	True				
ANR	4704520	CallExpression	do_remove_file ( path )		4704455	0					
ANR	4704521	Callee	do_remove_file		4704455	0					
ANR	4704522	Identifier	do_remove_file		4704455	0					
ANR	4704523	ArgumentList	path		4704455	1					
ANR	4704524	Argument	path		4704455	0					
ANR	4704525	Identifier	path		4704455	0					
ANR	4704526	ReturnType	bool		4704455	1					
ANR	4704527	Identifier	Directory :: do_remove		4704455	2					
ANR	4704528	ParameterList	"const char * path , bool is_curr"		4704455	3					
ANR	4704529	Parameter	const char * path	257:22:5424:5439	4704455	0	True				
ANR	4704530	ParameterType	const char *		4704455	0					
ANR	4704531	Identifier	path		4704455	1					
ANR	4704532	Parameter	bool is_curr	257:40:5442:5453	4704455	1	True				
ANR	4704533	ParameterType	bool		4704455	0					
ANR	4704534	Identifier	is_curr		4704455	1					
ANR	4704535	CFGEntryNode	ENTRY		4704455		True				
ANR	4704536	CFGExitNode	EXIT		4704455		True				
ANR	4704537	Symbol	path		4704455						
ANR	4704538	Symbol	is_curr		4704455						
ANR	4704539	Symbol	si . IsDirectory		4704455						
ANR	4704540	Symbol	IsDirectory		4704455						
ANR	4704541	Symbol	do_remove_dir		4704455						
ANR	4704542	Symbol	is_dir		4704455						
ANR	4704543	Symbol	si		4704455						
ANR	4704544	Symbol	false		4704455						
ANR	4704545	Symbol	IsSymlink		4704455						
ANR	4704546	Symbol	do_remove_file		4704455						
ANR	4704547	Symbol	si . IsSymlink		4704455						
ANR	4704548	Function	Directory :: do_remove_dir	278:0:5841:9716							
ANR	4704549	FunctionDef	Directory :: do_remove_dir (const char * path)		4704548	0					
ANR	4704550	CompoundStatement		280:0:5892:9716	4704548	0					
ANR	4704551	ExpressionStatement	"rmdirAttempt ( path , desired_priv_state )"	287:1:6152:6192	4704548	0	True				
ANR	4704552	CallExpression	"rmdirAttempt ( path , desired_priv_state )"		4704548	0					
ANR	4704553	Callee	rmdirAttempt		4704548	0					
ANR	4704554	Identifier	rmdirAttempt		4704548	0					
ANR	4704555	ArgumentList	path		4704548	1					
ANR	4704556	Argument	path		4704548	0					
ANR	4704557	Identifier	path		4704548	0					
ANR	4704558	Argument	desired_priv_state		4704548	1					
ANR	4704559	Identifier	desired_priv_state		4704548	0					
ANR	4704560	IdentifierDeclStatement	StatInfo si1 ( path ) ;	288:1:6195:6215	4704548	1	True				
ANR	4704561	IdentifierDecl	si1 ( path )		4704548	0					
ANR	4704562	IdentifierDeclType	StatInfo		4704548	0					
ANR	4704563	Identifier	si1		4704548	1					
ANR	4704564	Identifier	path		4704548	2					
ANR	4704565	IfStatement	if ( si1 . Error ( ) == SINoFile )		4704548	2					
ANR	4704566	Condition	si1 . Error ( ) == SINoFile	289:5:6222:6244	4704548	0	True				
ANR	4704567	EqualityExpression	si1 . Error ( ) == SINoFile		4704548	0		==			
ANR	4704568	CallExpression	si1 . Error ( )		4704548	0					
ANR	4704569	Callee	si1 . Error		4704548	0					
ANR	4704570	MemberAccess	si1 . Error		4704548	0					
ANR	4704571	Identifier	si1		4704548	0					
ANR	4704572	Identifier	Error		4704548	1					
ANR	4704573	ArgumentList			4704548	1					
ANR	4704574	Identifier	SINoFile		4704548	1					
ANR	4704575	CompoundStatement		10:31:355:355	4704548	1					
ANR	4704576	ReturnStatement	return true ;	294:2:6453:6464	4704548	0	True				
ANR	4704577	Identifier	true		4704548	0					
ANR	4704578	IdentifierDeclStatement	"char * usr , * dom ;"	302:1:6638:6653	4704548	3	True				
ANR	4704579	IdentifierDecl	* usr		4704548	0					
ANR	4704580	IdentifierDeclType	char *		4704548	0					
ANR	4704581	Identifier	usr		4704548	1					
ANR	4704582	IdentifierDecl	* dom		4704548	1					
ANR	4704583	IdentifierDeclType	char *		4704548	0					
ANR	4704584	Identifier	dom		4704548	1					
ANR	4704585	IdentifierDeclStatement	extern int rmdir_with_acls_win32 ( const char * path ) ;	305:4:6666:6717	4704548	4	True				
ANR	4704586	IdentifierDecl	rmdir_with_acls_win32 ( const char * path )		4704548	0					
ANR	4704587	IdentifierDeclType	extern int ( const char * path )		4704548	0					
ANR	4704588	Identifier	rmdir_with_acls_win32		4704548	1					
ANR	4704589	Identifier	path		4704548	2					
ANR	4704590	ExpressionStatement	rmdir_with_acls_win32 ( path )	306:4:6723:6752	4704548	5	True				
ANR	4704591	CallExpression	rmdir_with_acls_win32 ( path )		4704548	0					
ANR	4704592	Callee	rmdir_with_acls_win32		4704548	0					
ANR	4704593	Identifier	rmdir_with_acls_win32		4704548	0					
ANR	4704594	ArgumentList	path		4704548	1					
ANR	4704595	Argument	path		4704548	0					
ANR	4704596	Identifier	path		4704548	0					
ANR	4704597	IdentifierDeclStatement	StatInfo si2 ( path ) ;	318:1:6912:6932	4704548	6	True				
ANR	4704598	IdentifierDecl	si2 ( path )		4704548	0					
ANR	4704599	IdentifierDeclType	StatInfo		4704548	0					
ANR	4704600	Identifier	si2		4704548	1					
ANR	4704601	Identifier	path		4704548	2					
ANR	4704602	IfStatement	if ( si2 . Error ( ) == SINoFile )		4704548	7					
ANR	4704603	Condition	si2 . Error ( ) == SINoFile	320:5:6940:6962	4704548	0	True				
ANR	4704604	EqualityExpression	si2 . Error ( ) == SINoFile		4704548	0		==			
ANR	4704605	CallExpression	si2 . Error ( )		4704548	0					
ANR	4704606	Callee	si2 . Error		4704548	0					
ANR	4704607	MemberAccess	si2 . Error		4704548	0					
ANR	4704608	Identifier	si2		4704548	0					
ANR	4704609	Identifier	Error		4704548	1					
ANR	4704610	ArgumentList			4704548	1					
ANR	4704611	Identifier	SINoFile		4704548	1					
ANR	4704612	CompoundStatement		41:31:1073:1073	4704548	1					
ANR	4704613	ReturnStatement	return true ;	321:2:6970:6981	4704548	0	True				
ANR	4704614	Identifier	true		4704548	0					
ANR	4704615	ElseStatement	else		4704548	0					
ANR	4704616	CompoundStatement		43:8:1098:1098	4704548	0					
ANR	4704617	Statement	dprintf	324:2:6997:7003	4704548	0	True				
ANR	4704618	Statement	(	324:9:7004:7004	4704548	1	True				
ANR	4704619	Statement	D_ALWAYS	324:11:7006:7013	4704548	2	True				
ANR	4704620	Statement	","	324:19:7014:7014	4704548	3	True				
ANR	4704621	Statement	"""ERROR: %s still exists after trying """	324:21:7016:7053	4704548	4	True				
ANR	4704622	Statement	"""to add Full control to ACLs for %s\\n"""	325:5:7060:7097	4704548	5	True				
ANR	4704623	Statement	","	325:43:7098:7098	4704548	6	True				
ANR	4704624	Statement	path	325:45:7100:7103	4704548	7	True				
ANR	4704625	Statement	","	325:49:7104:7104	4704548	8	True				
ANR	4704626	Statement	priv_to_string	326:5:7112:7125	4704548	9	True				
ANR	4704627	Statement	(	326:19:7126:7126	4704548	10	True				
ANR	4704628	Statement	desired_priv_state	326:20:7127:7144	4704548	11	True				
ANR	4704629	Statement	)	326:38:7145:7145	4704548	12	True				
ANR	4704630	Statement	)	326:40:7147:7147	4704548	13	True				
ANR	4704631	ExpressionStatement		326:41:7148:7148	4704548	14	True				
ANR	4704632	ReturnStatement	return false ;	327:2:7152:7164	4704548	15	True				
ANR	4704633	Identifier	false		4704548	0					
ANR	4704634	ExpressionStatement	"EXCEPT ( ""Programmer error: Directory::do_remove_dir() didn't return"" )"	398:1:9629:9699	4704548	8	True				
ANR	4704635	CallExpression	"EXCEPT ( ""Programmer error: Directory::do_remove_dir() didn't return"" )"		4704548	0					
ANR	4704636	Callee	EXCEPT		4704548	0					
ANR	4704637	Identifier	EXCEPT		4704548	0					
ANR	4704638	ArgumentList	"""Programmer error: Directory::do_remove_dir() didn't return"""		4704548	1					
ANR	4704639	Argument	"""Programmer error: Directory::do_remove_dir() didn't return"""		4704548	0					
ANR	4704640	PrimaryExpression	"""Programmer error: Directory::do_remove_dir() didn't return"""		4704548	0					
ANR	4704641	ReturnStatement	return false ;	399:1:9702:9714	4704548	9	True				
ANR	4704642	Identifier	false		4704548	0					
ANR	4704643	ReturnType	bool		4704548	1					
ANR	4704644	Identifier	Directory :: do_remove_dir		4704548	2					
ANR	4704645	ParameterList	const char * path		4704548	3					
ANR	4704646	Parameter	const char * path	279:26:5873:5888	4704548	0	True				
ANR	4704647	ParameterType	const char *		4704548	0					
ANR	4704648	Identifier	path		4704548	1					
ANR	4704649	CFGEntryNode	ENTRY		4704548		True				
ANR	4704650	CFGExitNode	EXIT		4704548		True				
ANR	4704651	Symbol	path		4704548						
ANR	4704652	Symbol	SINoFile		4704548						
ANR	4704653	Symbol	dom		4704548						
ANR	4704654	Symbol	usr		4704548						
ANR	4704655	Symbol	si1 . Error		4704548						
ANR	4704656	Symbol	true		4704548						
ANR	4704657	Symbol	si2 . Error		4704548						
ANR	4704658	Symbol	false		4704548						
ANR	4704659	Symbol	si1		4704548						
ANR	4704660	Symbol	desired_priv_state		4704548						
ANR	4704661	Symbol	si2		4704548						
ANR	4704662	Symbol	rmdir_with_acls_win32		4704548						
ANR	4704663	Function	Directory :: do_remove_file	403:0:9720:11446							
ANR	4704664	FunctionDef	Directory :: do_remove_file (const char * path)		4704663	0					
ANR	4704665	CompoundStatement		405:0:9772:11446	4704663	0					
ANR	4704666	IdentifierDeclStatement	bool ret_val = true ;	406:4:9778:9797	4704663	0	True				
ANR	4704667	IdentifierDecl	ret_val = true		4704663	0					
ANR	4704668	IdentifierDeclType	bool		4704663	0					
ANR	4704669	Identifier	ret_val		4704663	1					
ANR	4704670	AssignmentExpression	ret_val = true		4704663	2		=			
ANR	4704671	Identifier	true		4704663	0					
ANR	4704672	Identifier	true		4704663	1					
ANR	4704673	ExpressionStatement	Set_Access_Priv ( )	407:1:9841:9858	4704663	1	True				
ANR	4704674	CallExpression	Set_Access_Priv ( )		4704663	0					
ANR	4704675	Callee	Set_Access_Priv		4704663	0					
ANR	4704676	Identifier	Set_Access_Priv		4704663	0					
ANR	4704677	ArgumentList			4704663	1					
ANR	4704678	ExpressionStatement	"dprintf ( D_ALWAYS , ""Directory: about to unlink %s\\n"" , path )"	410:1:9888:9948	4704663	2	True				
ANR	4704679	CallExpression	"dprintf ( D_ALWAYS , ""Directory: about to unlink %s\\n"" , path )"		4704663	0					
ANR	4704680	Callee	dprintf		4704663	0					
ANR	4704681	Identifier	dprintf		4704663	0					
ANR	4704682	ArgumentList	D_ALWAYS		4704663	1					
ANR	4704683	Argument	D_ALWAYS		4704663	0					
ANR	4704684	Identifier	D_ALWAYS		4704663	0					
ANR	4704685	Argument	"""Directory: about to unlink %s\\n"""		4704663	1					
ANR	4704686	PrimaryExpression	"""Directory: about to unlink %s\\n"""		4704663	0					
ANR	4704687	Argument	path		4704663	2					
ANR	4704688	Identifier	path		4704663	0					
ANR	4704689	IfStatement	if ( ret_val == false && errno == ENOENT )		4704663	3					
ANR	4704690	Condition	ret_val == false && errno == ENOENT	454:5:11351:11386	4704663	0	True				
ANR	4704691	AndExpression	ret_val == false && errno == ENOENT		4704663	0		&&			
ANR	4704692	EqualityExpression	ret_val == false		4704663	0		==			
ANR	4704693	Identifier	ret_val		4704663	0					
ANR	4704694	Identifier	false		4704663	1					
ANR	4704695	EqualityExpression	errno == ENOENT		4704663	1		==			
ANR	4704696	Identifier	errno		4704663	0					
ANR	4704697	Identifier	ENOENT		4704663	1					
ANR	4704698	CompoundStatement		50:44:1617:1617	4704663	1					
ANR	4704699	ExpressionStatement	ret_val = true	455:2:11394:11408	4704663	0	True				
ANR	4704700	AssignmentExpression	ret_val = true		4704663	0		=			
ANR	4704701	Identifier	ret_val		4704663	0					
ANR	4704702	Identifier	true		4704663	1					
ANR	4704703	ExpressionStatement	return_and_resetpriv ( ret_val )	457:1:11415:11444	4704663	4	True				
ANR	4704704	CallExpression	return_and_resetpriv ( ret_val )		4704663	0					
ANR	4704705	Callee	return_and_resetpriv		4704663	0					
ANR	4704706	Identifier	return_and_resetpriv		4704663	0					
ANR	4704707	ArgumentList	ret_val		4704663	1					
ANR	4704708	Argument	ret_val		4704663	0					
ANR	4704709	Identifier	ret_val		4704663	0					
ANR	4704710	ReturnType	bool		4704663	1					
ANR	4704711	Identifier	Directory :: do_remove_file		4704663	2					
ANR	4704712	ParameterList	const char * path		4704663	3					
ANR	4704713	Parameter	const char * path	404:27:9753:9768	4704663	0	True				
ANR	4704714	ParameterType	const char *		4704663	0					
ANR	4704715	Identifier	path		4704663	1					
ANR	4704716	CFGEntryNode	ENTRY		4704663		True				
ANR	4704717	CFGExitNode	EXIT		4704663		True				
ANR	4704718	Symbol	path		4704663						
ANR	4704719	Symbol	errno		4704663						
ANR	4704720	Symbol	true		4704663						
ANR	4704721	Symbol	D_ALWAYS		4704663						
ANR	4704722	Symbol	false		4704663						
ANR	4704723	Symbol	ENOENT		4704663						
ANR	4704724	Symbol	ret_val		4704663						
ANR	4704725	Function	Directory :: rmdirAttempt	461:0:11450:15797							
ANR	4704726	FunctionDef	"Directory :: rmdirAttempt (const char * path , priv_state priv)"		4704725	0					
ANR	4704727	CompoundStatement		463:0:11516:15797	4704725	0					
ANR	4704728	IdentifierDeclStatement	MyString rm_buf ;	465:1:11520:11535	4704725	0	True				
ANR	4704729	IdentifierDecl	rm_buf		4704725	0					
ANR	4704730	IdentifierDeclType	MyString		4704725	0					
ANR	4704731	Identifier	rm_buf		4704725	1					
ANR	4704732	IdentifierDeclStatement	const char * log_msg = 0 ;	466:1:11538:11559	4704725	1	True				
ANR	4704733	IdentifierDecl	* log_msg = 0		4704725	0					
ANR	4704734	IdentifierDeclType	const char *		4704725	0					
ANR	4704735	Identifier	log_msg		4704725	1					
ANR	4704736	AssignmentExpression	* log_msg = 0		4704725	2		=			
ANR	4704737	Identifier	log_msg		4704725	0					
ANR	4704738	PrimaryExpression	0		4704725	1					
ANR	4704739	IdentifierDeclStatement	priv_state saved_priv = PRIV_UNKNOWN ;	467:1:11562:11596	4704725	2	True				
ANR	4704740	IdentifierDecl	saved_priv = PRIV_UNKNOWN		4704725	0					
ANR	4704741	IdentifierDeclType	priv_state		4704725	0					
ANR	4704742	Identifier	saved_priv		4704725	1					
ANR	4704743	AssignmentExpression	saved_priv = PRIV_UNKNOWN		4704725	2		=			
ANR	4704744	Identifier	PRIV_UNKNOWN		4704725	0					
ANR	4704745	Identifier	PRIV_UNKNOWN		4704725	1					
ANR	4704746	IdentifierDeclStatement	int rval ;	468:1:11599:11607	4704725	3	True				
ANR	4704747	IdentifierDecl	rval		4704725	0					
ANR	4704748	IdentifierDeclType	int		4704725	0					
ANR	4704749	Identifier	rval		4704725	1					
ANR	4704750	IdentifierDeclStatement	si_error_t err = SIGood ;	479:1:11977:12000	4704725	4	True				
ANR	4704751	IdentifierDecl	err = SIGood		4704725	0					
ANR	4704752	IdentifierDeclType	si_error_t		4704725	0					
ANR	4704753	Identifier	err		4704725	1					
ANR	4704754	AssignmentExpression	err = SIGood		4704725	2		=			
ANR	4704755	Identifier	SIGood		4704725	0					
ANR	4704756	Identifier	SIGood		4704725	1					
ANR	4704757	IfStatement	if ( want_priv_change )		4704725	5					
ANR	4704758	Condition	want_priv_change	481:5:12014:12029	4704725	0	True				
ANR	4704759	Identifier	want_priv_change		4704725	0					
ANR	4704760	CompoundStatement		19:24:516:516	4704725	1					
ANR	4704761	SwitchStatement	switch ( priv )		4704725	0					
ANR	4704762	Condition	priv	482:10:12045:12048	4704725	0	True				
ANR	4704763	Identifier	priv		4704725	0					
ANR	4704764	CompoundStatement		20:17:535:535	4704725	1					
ANR	4704765	Label	case PRIV_UNKNOWN :	484:2:12057:12074	4704725	0	True				
ANR	4704766	Identifier	PRIV_UNKNOWN		4704725	0					
ANR	4704767	ExpressionStatement	log_msg = priv_identifier ( get_priv ( ) )	485:3:12079:12118	4704725	1	True				
ANR	4704768	AssignmentExpression	log_msg = priv_identifier ( get_priv ( ) )		4704725	0		=			
ANR	4704769	Identifier	log_msg		4704725	0					
ANR	4704770	CallExpression	priv_identifier ( get_priv ( ) )		4704725	1					
ANR	4704771	Callee	priv_identifier		4704725	0					
ANR	4704772	Identifier	priv_identifier		4704725	0					
ANR	4704773	ArgumentList	get_priv ( )		4704725	1					
ANR	4704774	Argument	get_priv ( )		4704725	0					
ANR	4704775	CallExpression	get_priv ( )		4704725	0					
ANR	4704776	Callee	get_priv		4704725	0					
ANR	4704777	Identifier	get_priv		4704725	0					
ANR	4704778	ArgumentList			4704725	1					
ANR	4704779	BreakStatement	break ;	486:3:12123:12128	4704725	2	True				
ANR	4704780	Label	case PRIV_FILE_OWNER :	488:2:12133:12153	4704725	3	True				
ANR	4704781	Identifier	PRIV_FILE_OWNER		4704725	0					
ANR	4704782	Statement	EXCEPT	490:3:12171:12176	4704725	4	True				
ANR	4704783	Statement	(	490:9:12177:12177	4704725	5	True				
ANR	4704784	Statement	"""Programmer error: Directory::rmdirAttempt() called """	490:11:12179:12231	4704725	6	True				
ANR	4704785	Statement	"""with PRIV_FILE_OWNER on WIN32!"""	491:5:12238:12269	4704725	7	True				
ANR	4704786	Statement	)	491:38:12271:12271	4704725	8	True				
ANR	4704787	ExpressionStatement		491:39:12272:12272	4704725	9	True				
ANR	4704788	BreakStatement	break ;	496:3:12371:12376	4704725	10	True				
ANR	4704789	Label	case PRIV_USER :	498:2:12381:12395	4704725	11	True				
ANR	4704790	Identifier	PRIV_USER		4704725	0					
ANR	4704791	Label	case PRIV_ROOT :	499:2:12399:12413	4704725	12	True				
ANR	4704792	Identifier	PRIV_ROOT		4704725	0					
ANR	4704793	Label	case PRIV_CONDOR :	500:2:12417:12433	4704725	13	True				
ANR	4704794	Identifier	PRIV_CONDOR		4704725	0					
ANR	4704795	ExpressionStatement	saved_priv = set_priv ( priv )	501:3:12438:12467	4704725	14	True				
ANR	4704796	AssignmentExpression	saved_priv = set_priv ( priv )		4704725	0		=			
ANR	4704797	Identifier	saved_priv		4704725	0					
ANR	4704798	CallExpression	set_priv ( priv )		4704725	1					
ANR	4704799	Callee	set_priv		4704725	0					
ANR	4704800	Identifier	set_priv		4704725	0					
ANR	4704801	ArgumentList	priv		4704725	1					
ANR	4704802	Argument	priv		4704725	0					
ANR	4704803	Identifier	priv		4704725	0					
ANR	4704804	ExpressionStatement	log_msg = priv_identifier ( priv )	502:3:12472:12505	4704725	15	True				
ANR	4704805	AssignmentExpression	log_msg = priv_identifier ( priv )		4704725	0		=			
ANR	4704806	Identifier	log_msg		4704725	0					
ANR	4704807	CallExpression	priv_identifier ( priv )		4704725	1					
ANR	4704808	Callee	priv_identifier		4704725	0					
ANR	4704809	Identifier	priv_identifier		4704725	0					
ANR	4704810	ArgumentList	priv		4704725	1					
ANR	4704811	Argument	priv		4704725	0					
ANR	4704812	Identifier	priv		4704725	0					
ANR	4704813	BreakStatement	break ;	503:3:12510:12515	4704725	16	True				
ANR	4704814	Label	default :	505:2:12520:12527	4704725	17	True				
ANR	4704815	Identifier	default		4704725	0					
ANR	4704816	Statement	EXCEPT	506:3:12532:12537	4704725	18	True				
ANR	4704817	Statement	(	506:9:12538:12538	4704725	19	True				
ANR	4704818	Statement	"""Programmer error: Directory::rmdirAttempt() called """	506:11:12540:12592	4704725	20	True				
ANR	4704819	Statement	"""with unexpected priv_state (%d: %s)"""	507:5:12599:12635	4704725	21	True				
ANR	4704820	Statement	","	507:42:12636:12636	4704725	22	True				
ANR	4704821	Statement	priv	507:44:12638:12641	4704725	23	True				
ANR	4704822	Statement	","	507:48:12642:12642	4704725	24	True				
ANR	4704823	Statement	priv_to_string	508:5:12649:12662	4704725	25	True				
ANR	4704824	Statement	(	508:19:12663:12663	4704725	26	True				
ANR	4704825	Statement	priv	508:20:12664:12667	4704725	27	True				
ANR	4704826	Statement	)	508:24:12668:12668	4704725	28	True				
ANR	4704827	Statement	)	508:26:12670:12670	4704725	29	True				
ANR	4704828	ExpressionStatement		508:27:12671:12671	4704725	30	True				
ANR	4704829	BreakStatement	break ;	509:3:12676:12681	4704725	31	True				
ANR	4704830	ElseStatement	else		4704725	0					
ANR	4704831	CompoundStatement		49:8:1178:1178	4704725	0					
ANR	4704832	ExpressionStatement	log_msg = priv_identifier ( get_priv ( ) )	518:2:13040:13079	4704725	0	True				
ANR	4704833	AssignmentExpression	log_msg = priv_identifier ( get_priv ( ) )		4704725	0		=			
ANR	4704834	Identifier	log_msg		4704725	0					
ANR	4704835	CallExpression	priv_identifier ( get_priv ( ) )		4704725	1					
ANR	4704836	Callee	priv_identifier		4704725	0					
ANR	4704837	Identifier	priv_identifier		4704725	0					
ANR	4704838	ArgumentList	get_priv ( )		4704725	1					
ANR	4704839	Argument	get_priv ( )		4704725	0					
ANR	4704840	CallExpression	get_priv ( )		4704725	0					
ANR	4704841	Callee	get_priv		4704725	0					
ANR	4704842	Identifier	get_priv		4704725	0					
ANR	4704843	ArgumentList			4704725	1					
ANR	4704844	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Attempting to remove %s as %s\\n"" , path , log_msg )"	522:1:13118:13194	4704725	6	True				
ANR	4704845	CallExpression	"dprintf ( D_FULLDEBUG , ""Attempting to remove %s as %s\\n"" , path , log_msg )"		4704725	0					
ANR	4704846	Callee	dprintf		4704725	0					
ANR	4704847	Identifier	dprintf		4704725	0					
ANR	4704848	ArgumentList	D_FULLDEBUG		4704725	1					
ANR	4704849	Argument	D_FULLDEBUG		4704725	0					
ANR	4704850	Identifier	D_FULLDEBUG		4704725	0					
ANR	4704851	Argument	"""Attempting to remove %s as %s\\n"""		4704725	1					
ANR	4704852	PrimaryExpression	"""Attempting to remove %s as %s\\n"""		4704725	0					
ANR	4704853	Argument	path		4704725	2					
ANR	4704854	Identifier	path		4704725	0					
ANR	4704855	Argument	log_msg		4704725	3					
ANR	4704856	Identifier	log_msg		4704725	0					
ANR	4704857	IdentifierDeclStatement	"char * rmdir_exe_p = param ( ""WINDOWS_RMDIR"" ) ;"	526:8:13218:13261	4704725	7	True				
ANR	4704858	IdentifierDecl	"* rmdir_exe_p = param ( ""WINDOWS_RMDIR"" )"		4704725	0					
ANR	4704859	IdentifierDeclType	char *		4704725	0					
ANR	4704860	Identifier	rmdir_exe_p		4704725	1					
ANR	4704861	AssignmentExpression	"* rmdir_exe_p = param ( ""WINDOWS_RMDIR"" )"		4704725	2		=			
ANR	4704862	Identifier	rmdir_exe_p		4704725	0					
ANR	4704863	CallExpression	"param ( ""WINDOWS_RMDIR"" )"		4704725	1					
ANR	4704864	Callee	param		4704725	0					
ANR	4704865	Identifier	param		4704725	0					
ANR	4704866	ArgumentList	"""WINDOWS_RMDIR"""		4704725	1					
ANR	4704867	Argument	"""WINDOWS_RMDIR"""		4704725	0					
ANR	4704868	PrimaryExpression	"""WINDOWS_RMDIR"""		4704725	0					
ANR	4704869	IdentifierDeclStatement	"char * rmdir_opts_p = param ( ""WINDOWS_RMDIR_OPTIONS"" ) ;"	527:8:13271:13323	4704725	8	True				
ANR	4704870	IdentifierDecl	"* rmdir_opts_p = param ( ""WINDOWS_RMDIR_OPTIONS"" )"		4704725	0					
ANR	4704871	IdentifierDeclType	char *		4704725	0					
ANR	4704872	Identifier	rmdir_opts_p		4704725	1					
ANR	4704873	AssignmentExpression	"* rmdir_opts_p = param ( ""WINDOWS_RMDIR_OPTIONS"" )"		4704725	2		=			
ANR	4704874	Identifier	rmdir_opts_p		4704725	0					
ANR	4704875	CallExpression	"param ( ""WINDOWS_RMDIR_OPTIONS"" )"		4704725	1					
ANR	4704876	Callee	param		4704725	0					
ANR	4704877	Identifier	param		4704725	0					
ANR	4704878	ArgumentList	"""WINDOWS_RMDIR_OPTIONS"""		4704725	1					
ANR	4704879	Argument	"""WINDOWS_RMDIR_OPTIONS"""		4704725	0					
ANR	4704880	PrimaryExpression	"""WINDOWS_RMDIR_OPTIONS"""		4704725	0					
ANR	4704881	IdentifierDeclStatement	bool fNativeRmdir = false ;	528:8:13333:13358	4704725	9	True				
ANR	4704882	IdentifierDecl	fNativeRmdir = false		4704725	0					
ANR	4704883	IdentifierDeclType	bool		4704725	0					
ANR	4704884	Identifier	fNativeRmdir		4704725	1					
ANR	4704885	AssignmentExpression	fNativeRmdir = false		4704725	2		=			
ANR	4704886	Identifier	false		4704725	0					
ANR	4704887	Identifier	false		4704725	1					
ANR	4704888	IdentifierDeclStatement	bool fCondorRmdir = false ;	529:8:13368:13393	4704725	10	True				
ANR	4704889	IdentifierDecl	fCondorRmdir = false		4704725	0					
ANR	4704890	IdentifierDeclType	bool		4704725	0					
ANR	4704891	Identifier	fCondorRmdir		4704725	1					
ANR	4704892	AssignmentExpression	fCondorRmdir = false		4704725	2		=			
ANR	4704893	Identifier	false		4704725	0					
ANR	4704894	Identifier	false		4704725	1					
ANR	4704895	IfStatement	if ( ! rmdir_exe_p || ! rmdir_exe_p [ 0 ] )		4704725	11					
ANR	4704896	Condition	! rmdir_exe_p || ! rmdir_exe_p [ 0 ]	530:13:13408:13440	4704725	0	True				
ANR	4704897	OrExpression	! rmdir_exe_p || ! rmdir_exe_p [ 0 ]		4704725	0		||			
ANR	4704898	UnaryOperationExpression	! rmdir_exe_p		4704725	0					
ANR	4704899	UnaryOperator	!		4704725	0					
ANR	4704900	Identifier	rmdir_exe_p		4704725	1					
ANR	4704901	UnaryOperationExpression	! rmdir_exe_p [ 0 ]		4704725	1					
ANR	4704902	UnaryOperator	!		4704725	0					
ANR	4704903	ArrayIndexing	rmdir_exe_p [ 0 ]		4704725	1					
ANR	4704904	Identifier	rmdir_exe_p		4704725	0					
ANR	4704905	PrimaryExpression	0		4704725	1					
ANR	4704906	ExpressionStatement	fNativeRmdir = true	531:11:13454:13473	4704725	1	True				
ANR	4704907	AssignmentExpression	fNativeRmdir = true		4704725	0		=			
ANR	4704908	Identifier	fNativeRmdir		4704725	0					
ANR	4704909	Identifier	true		4704725	1					
ANR	4704910	ElseStatement	else		4704725	0					
ANR	4704911	IfStatement	"if ( ! strcasecmp ( rmdir_exe_p , ""rmdir"" ) || ! strcasecmp ( rmdir_exe_p , ""rd"" ) )"		4704725	0					
ANR	4704912	Condition	"! strcasecmp ( rmdir_exe_p , ""rmdir"" ) || ! strcasecmp ( rmdir_exe_p , ""rd"" )"	532:18:13493:13561	4704725	0	True				
ANR	4704913	OrExpression	"! strcasecmp ( rmdir_exe_p , ""rmdir"" ) || ! strcasecmp ( rmdir_exe_p , ""rd"" )"		4704725	0		||			
ANR	4704914	UnaryOperationExpression	"! strcasecmp ( rmdir_exe_p , ""rmdir"" )"		4704725	0					
ANR	4704915	UnaryOperator	!		4704725	0					
ANR	4704916	CallExpression	"strcasecmp ( rmdir_exe_p , ""rmdir"" )"		4704725	1					
ANR	4704917	Callee	strcasecmp		4704725	0					
ANR	4704918	Identifier	strcasecmp		4704725	0					
ANR	4704919	ArgumentList	rmdir_exe_p		4704725	1					
ANR	4704920	Argument	rmdir_exe_p		4704725	0					
ANR	4704921	Identifier	rmdir_exe_p		4704725	0					
ANR	4704922	Argument	"""rmdir"""		4704725	1					
ANR	4704923	PrimaryExpression	"""rmdir"""		4704725	0					
ANR	4704924	UnaryOperationExpression	"! strcasecmp ( rmdir_exe_p , ""rd"" )"		4704725	1					
ANR	4704925	UnaryOperator	!		4704725	0					
ANR	4704926	CallExpression	"strcasecmp ( rmdir_exe_p , ""rd"" )"		4704725	1					
ANR	4704927	Callee	strcasecmp		4704725	0					
ANR	4704928	Identifier	strcasecmp		4704725	0					
ANR	4704929	ArgumentList	rmdir_exe_p		4704725	1					
ANR	4704930	Argument	rmdir_exe_p		4704725	0					
ANR	4704931	Identifier	rmdir_exe_p		4704725	0					
ANR	4704932	Argument	"""rd"""		4704725	1					
ANR	4704933	PrimaryExpression	"""rd"""		4704725	0					
ANR	4704934	ExpressionStatement	fNativeRmdir = true	533:11:13575:13594	4704725	1	True				
ANR	4704935	AssignmentExpression	fNativeRmdir = true		4704725	0		=			
ANR	4704936	Identifier	fNativeRmdir		4704725	0					
ANR	4704937	Identifier	true		4704725	1					
ANR	4704938	ElseStatement	else		4704725	0					
ANR	4704939	IfStatement	if ( INVALID_FILE_ATTRIBUTES == GetFileAttributes ( rmdir_exe_p ) )		4704725	0					
ANR	4704940	Condition	INVALID_FILE_ATTRIBUTES == GetFileAttributes ( rmdir_exe_p )	534:17:13613:13669	4704725	0	True				
ANR	4704941	EqualityExpression	INVALID_FILE_ATTRIBUTES == GetFileAttributes ( rmdir_exe_p )		4704725	0		==			
ANR	4704942	Identifier	INVALID_FILE_ATTRIBUTES		4704725	0					
ANR	4704943	CallExpression	GetFileAttributes ( rmdir_exe_p )		4704725	1					
ANR	4704944	Callee	GetFileAttributes		4704725	0					
ANR	4704945	Identifier	GetFileAttributes		4704725	0					
ANR	4704946	ArgumentList	rmdir_exe_p		4704725	1					
ANR	4704947	Argument	rmdir_exe_p		4704725	0					
ANR	4704948	Identifier	rmdir_exe_p		4704725	0					
ANR	4704949	CompoundStatement		72:76:2155:2155	4704725	1					
ANR	4704950	ExpressionStatement	fNativeRmdir = true	535:11:13685:13704	4704725	0	True				
ANR	4704951	AssignmentExpression	fNativeRmdir = true		4704725	0		=			
ANR	4704952	Identifier	fNativeRmdir		4704725	0					
ANR	4704953	Identifier	true		4704725	1					
ANR	4704954	ExpressionStatement	"dprintf ( D_ALWAYS , ""Warning: WINDOWS_RMDIR - '%s' is not valid - Error %d\\n"" , rmdir_exe_p , GetLastError ( ) )"	536:11:13717:13823	4704725	1	True				
ANR	4704955	CallExpression	"dprintf ( D_ALWAYS , ""Warning: WINDOWS_RMDIR - '%s' is not valid - Error %d\\n"" , rmdir_exe_p , GetLastError ( ) )"		4704725	0					
ANR	4704956	Callee	dprintf		4704725	0					
ANR	4704957	Identifier	dprintf		4704725	0					
ANR	4704958	ArgumentList	D_ALWAYS		4704725	1					
ANR	4704959	Argument	D_ALWAYS		4704725	0					
ANR	4704960	Identifier	D_ALWAYS		4704725	0					
ANR	4704961	Argument	"""Warning: WINDOWS_RMDIR - '%s' is not valid - Error %d\\n"""		4704725	1					
ANR	4704962	PrimaryExpression	"""Warning: WINDOWS_RMDIR - '%s' is not valid - Error %d\\n"""		4704725	0					
ANR	4704963	Argument	rmdir_exe_p		4704725	2					
ANR	4704964	Identifier	rmdir_exe_p		4704725	0					
ANR	4704965	Argument	GetLastError ( )		4704725	3					
ANR	4704966	CallExpression	GetLastError ( )		4704725	0					
ANR	4704967	Callee	GetLastError		4704725	0					
ANR	4704968	Identifier	GetLastError		4704725	0					
ANR	4704969	ArgumentList			4704725	1					
ANR	4704970	ElseStatement	else		4704725	0					
ANR	4704971	CompoundStatement		78:11:2446:2471	4704725	0					
ANR	4704972	IdentifierDeclStatement	MyString exe ( rmdir_exe_p ) ;	540:11:13963:13988	4704725	0	True				
ANR	4704973	IdentifierDecl	exe ( rmdir_exe_p )		4704725	0					
ANR	4704974	IdentifierDeclType	MyString		4704725	0					
ANR	4704975	Identifier	exe		4704725	1					
ANR	4704976	Identifier	rmdir_exe_p		4704725	2					
ANR	4704977	ExpressionStatement	exe . lower_case ( )	541:11:14001:14017	4704725	1	True				
ANR	4704978	CallExpression	exe . lower_case ( )		4704725	0					
ANR	4704979	Callee	exe . lower_case		4704725	0					
ANR	4704980	MemberAccess	exe . lower_case		4704725	0					
ANR	4704981	Identifier	exe		4704725	0					
ANR	4704982	Identifier	lower_case		4704725	1					
ANR	4704983	ArgumentList			4704725	1					
ANR	4704984	ExpressionStatement	"fCondorRmdir = ( exe . find ( ""condor_rmdir.exe"" , 0 ) >= 0 )"	542:11:14030:14082	4704725	2	True				
ANR	4704985	AssignmentExpression	"fCondorRmdir = ( exe . find ( ""condor_rmdir.exe"" , 0 ) >= 0 )"		4704725	0		=			
ANR	4704986	Identifier	fCondorRmdir		4704725	0					
ANR	4704987	RelationalExpression	"exe . find ( ""condor_rmdir.exe"" , 0 ) >= 0"		4704725	1		>=			
ANR	4704988	CallExpression	"exe . find ( ""condor_rmdir.exe"" , 0 )"		4704725	0					
ANR	4704989	Callee	exe . find		4704725	0					
ANR	4704990	MemberAccess	exe . find		4704725	0					
ANR	4704991	Identifier	exe		4704725	0					
ANR	4704992	Identifier	find		4704725	1					
ANR	4704993	ArgumentList	"""condor_rmdir.exe"""		4704725	1					
ANR	4704994	Argument	"""condor_rmdir.exe"""		4704725	0					
ANR	4704995	PrimaryExpression	"""condor_rmdir.exe"""		4704725	0					
ANR	4704996	Argument	0		4704725	1					
ANR	4704997	PrimaryExpression	0		4704725	0					
ANR	4704998	PrimaryExpression	0		4704725	1					
ANR	4704999	IfStatement	if ( fNativeRmdir )		4704725	12					
ANR	4705000	Condition	fNativeRmdir	545:12:14107:14118	4704725	0	True				
ANR	4705001	Identifier	fNativeRmdir		4704725	0					
ANR	4705002	CompoundStatement		83:26:2604:2604	4704725	1					
ANR	4705003	ExpressionStatement	"rm_buf = ""cmd.exe /s /c \\""rmdir /s /q \\"""""	546:11:14134:14175	4704725	0	True				
ANR	4705004	AssignmentExpression	"rm_buf = ""cmd.exe /s /c \\""rmdir /s /q \\"""""		4704725	0		=			
ANR	4705005	Identifier	rm_buf		4704725	0					
ANR	4705006	PrimaryExpression	"""cmd.exe /s /c \\""rmdir /s /q \\"""""		4704725	1					
ANR	4705007	ExpressionStatement	rm_buf += path	547:11:14188:14202	4704725	1	True				
ANR	4705008	AssignmentExpression	rm_buf += path		4704725	0		+=			
ANR	4705009	Identifier	rm_buf		4704725	0					
ANR	4705010	Identifier	path		4704725	1					
ANR	4705011	ExpressionStatement	"rm_buf += ""\\"" \\"""""	548:11:14215:14232	4704725	2	True				
ANR	4705012	AssignmentExpression	"rm_buf += ""\\"" \\"""""		4704725	0		+=			
ANR	4705013	Identifier	rm_buf		4704725	0					
ANR	4705014	PrimaryExpression	"""\\"" \\"""""		4704725	1					
ANR	4705015	ElseStatement	else		4704725	0					
ANR	4705016	CompoundStatement		87:15:2732:2732	4704725	0					
ANR	4705017	ExpressionStatement	rm_buf = rmdir_exe_p	550:11:14262:14282	4704725	0	True				
ANR	4705018	AssignmentExpression	rm_buf = rmdir_exe_p		4704725	0		=			
ANR	4705019	Identifier	rm_buf		4704725	0					
ANR	4705020	Identifier	rmdir_exe_p		4704725	1					
ANR	4705021	ExpressionStatement	"rm_buf += "" """	551:11:14295:14308	4704725	1	True				
ANR	4705022	AssignmentExpression	"rm_buf += "" """		4704725	0		+=			
ANR	4705023	Identifier	rm_buf		4704725	0					
ANR	4705024	PrimaryExpression	""" """		4704725	1					
ANR	4705025	IfStatement	if ( fCondorRmdir )		4704725	2					
ANR	4705026	Condition	fCondorRmdir	552:15:14325:14336	4704725	0	True				
ANR	4705027	Identifier	fCondorRmdir		4704725	0					
ANR	4705028	ExpressionStatement	"rm_buf += ""/s """	553:14:14353:14368	4704725	1	True				
ANR	4705029	AssignmentExpression	"rm_buf += ""/s """		4704725	0		+=			
ANR	4705030	Identifier	rm_buf		4704725	0					
ANR	4705031	PrimaryExpression	"""/s """		4704725	1					
ANR	4705032	IfStatement	if ( rmdir_opts_p && rmdir_opts_p [ 0 ] )		4704725	3					
ANR	4705033	Condition	rmdir_opts_p && rmdir_opts_p [ 0 ]	555:15:14405:14435	4704725	0	True				
ANR	4705034	AndExpression	rmdir_opts_p && rmdir_opts_p [ 0 ]		4704725	0		&&			
ANR	4705035	Identifier	rmdir_opts_p		4704725	0					
ANR	4705036	ArrayIndexing	rmdir_opts_p [ 0 ]		4704725	1					
ANR	4705037	Identifier	rmdir_opts_p		4704725	0					
ANR	4705038	PrimaryExpression	0		4704725	1					
ANR	4705039	ExpressionStatement	rm_buf += rmdir_opts_p	556:14:14452:14474	4704725	1	True				
ANR	4705040	AssignmentExpression	rm_buf += rmdir_opts_p		4704725	0		+=			
ANR	4705041	Identifier	rm_buf		4704725	0					
ANR	4705042	Identifier	rmdir_opts_p		4704725	1					
ANR	4705043	ElseStatement	else		4704725	0					
ANR	4705044	IfStatement	if ( fCondorRmdir )		4704725	0					
ANR	4705045	Condition	fCondorRmdir	557:20:14496:14507	4704725	0	True				
ANR	4705046	Identifier	fCondorRmdir		4704725	0					
ANR	4705047	ExpressionStatement	"rm_buf += "" /c"""	558:14:14524:14539	4704725	1	True				
ANR	4705048	AssignmentExpression	"rm_buf += "" /c"""		4704725	0		+=			
ANR	4705049	Identifier	rm_buf		4704725	0					
ANR	4705050	PrimaryExpression	""" /c"""		4704725	1					
ANR	4705051	ExpressionStatement	"rm_buf += "" \\"""""	560:11:14580:14595	4704725	4	True				
ANR	4705052	AssignmentExpression	"rm_buf += "" \\"""""		4704725	0		+=			
ANR	4705053	Identifier	rm_buf		4704725	0					
ANR	4705054	PrimaryExpression	""" \\"""""		4704725	1					
ANR	4705055	ExpressionStatement	rm_buf += path	561:11:14608:14622	4704725	5	True				
ANR	4705056	AssignmentExpression	rm_buf += path		4704725	0		+=			
ANR	4705057	Identifier	rm_buf		4704725	0					
ANR	4705058	Identifier	path		4704725	1					
ANR	4705059	ExpressionStatement	"rm_buf += ""\\"""""	562:11:14635:14649	4704725	6	True				
ANR	4705060	AssignmentExpression	"rm_buf += ""\\"""""		4704725	0		+=			
ANR	4705061	Identifier	rm_buf		4704725	0					
ANR	4705062	PrimaryExpression	"""\\"""""		4704725	1					
ANR	4705063	ExpressionStatement	"dprintf ( D_ALWAYS , ""rmdirAttempt using command: %s\\n"" , rm_buf . Value ( ) )"	566:8:14684:14754	4704725	13	True				
ANR	4705064	CallExpression	"dprintf ( D_ALWAYS , ""rmdirAttempt using command: %s\\n"" , rm_buf . Value ( ) )"		4704725	0					
ANR	4705065	Callee	dprintf		4704725	0					
ANR	4705066	Identifier	dprintf		4704725	0					
ANR	4705067	ArgumentList	D_ALWAYS		4704725	1					
ANR	4705068	Argument	D_ALWAYS		4704725	0					
ANR	4705069	Identifier	D_ALWAYS		4704725	0					
ANR	4705070	Argument	"""rmdirAttempt using command: %s\\n"""		4704725	1					
ANR	4705071	PrimaryExpression	"""rmdirAttempt using command: %s\\n"""		4704725	0					
ANR	4705072	Argument	rm_buf . Value ( )		4704725	2					
ANR	4705073	CallExpression	rm_buf . Value ( )		4704725	0					
ANR	4705074	Callee	rm_buf . Value		4704725	0					
ANR	4705075	MemberAccess	rm_buf . Value		4704725	0					
ANR	4705076	Identifier	rm_buf		4704725	0					
ANR	4705077	Identifier	Value		4704725	1					
ANR	4705078	ArgumentList			4704725	1					
ANR	4705079	IfStatement	if ( rmdir_exe_p )		4704725	14					
ANR	4705080	Condition	rmdir_exe_p	570:12:14864:14874	4704725	0	True				
ANR	4705081	Identifier	rmdir_exe_p		4704725	0					
ANR	4705082	ExpressionStatement	free ( rmdir_exe_p )	570:25:14877:14895	4704725	1	True				
ANR	4705083	CallExpression	free ( rmdir_exe_p )		4704725	0					
ANR	4705084	Callee	free		4704725	0					
ANR	4705085	Identifier	free		4704725	0					
ANR	4705086	ArgumentList	rmdir_exe_p		4704725	1					
ANR	4705087	Argument	rmdir_exe_p		4704725	0					
ANR	4705088	Identifier	rmdir_exe_p		4704725	0					
ANR	4705089	IfStatement	if ( rmdir_opts_p )		4704725	15					
ANR	4705090	Condition	rmdir_opts_p	571:12:14909:14920	4704725	0	True				
ANR	4705091	Identifier	rmdir_opts_p		4704725	0					
ANR	4705092	ExpressionStatement	free ( rmdir_opts_p )	571:26:14923:14942	4704725	1	True				
ANR	4705093	CallExpression	free ( rmdir_opts_p )		4704725	0					
ANR	4705094	Callee	free		4704725	0					
ANR	4705095	Identifier	free		4704725	0					
ANR	4705096	ArgumentList	rmdir_opts_p		4704725	1					
ANR	4705097	Argument	rmdir_opts_p		4704725	0					
ANR	4705098	Identifier	rmdir_opts_p		4704725	0					
ANR	4705099	ExpressionStatement	"dprintf ( D_ALWAYS , ""Directory: about to call \\""%s\\"" as %s\\n"" , rm_buf . Value ( ) , log_msg )"	579:1:15056:15147	4704725	16	True				
ANR	4705100	CallExpression	"dprintf ( D_ALWAYS , ""Directory: about to call \\""%s\\"" as %s\\n"" , rm_buf . Value ( ) , log_msg )"		4704725	0					
ANR	4705101	Callee	dprintf		4704725	0					
ANR	4705102	Identifier	dprintf		4704725	0					
ANR	4705103	ArgumentList	D_ALWAYS		4704725	1					
ANR	4705104	Argument	D_ALWAYS		4704725	0					
ANR	4705105	Identifier	D_ALWAYS		4704725	0					
ANR	4705106	Argument	"""Directory: about to call \\""%s\\"" as %s\\n"""		4704725	1					
ANR	4705107	PrimaryExpression	"""Directory: about to call \\""%s\\"" as %s\\n"""		4704725	0					
ANR	4705108	Argument	rm_buf . Value ( )		4704725	2					
ANR	4705109	CallExpression	rm_buf . Value ( )		4704725	0					
ANR	4705110	Callee	rm_buf . Value		4704725	0					
ANR	4705111	MemberAccess	rm_buf . Value		4704725	0					
ANR	4705112	Identifier	rm_buf		4704725	0					
ANR	4705113	Identifier	Value		4704725	1					
ANR	4705114	ArgumentList			4704725	1					
ANR	4705115	Argument	log_msg		4704725	3					
ANR	4705116	Identifier	log_msg		4704725	0					
ANR	4705117	IfStatement	if ( want_priv_change )		4704725	17					
ANR	4705118	Condition	want_priv_change	589:5:15428:15443	4704725	0	True				
ANR	4705119	Identifier	want_priv_change		4704725	0					
ANR	4705120	CompoundStatement		127:24:3930:3930	4704725	1					
ANR	4705121	ExpressionStatement	set_priv ( saved_priv )	590:2:15451:15473	4704725	0	True				
ANR	4705122	CallExpression	set_priv ( saved_priv )		4704725	0					
ANR	4705123	Callee	set_priv		4704725	0					
ANR	4705124	Identifier	set_priv		4704725	0					
ANR	4705125	ArgumentList	saved_priv		4704725	1					
ANR	4705126	Argument	saved_priv		4704725	0					
ANR	4705127	Identifier	saved_priv		4704725	0					
ANR	4705128	IfStatement	if ( rval != 0 )		4704725	18					
ANR	4705129	Condition	rval != 0	593:5:15484:15492	4704725	0	True				
ANR	4705130	EqualityExpression	rval != 0		4704725	0		!=			
ANR	4705131	Identifier	rval		4704725	0					
ANR	4705132	PrimaryExpression	0		4704725	1					
ANR	4705133	CompoundStatement		132:2:3984:3999	4704725	1					
ANR	4705134	IdentifierDeclStatement	MyString errmsg ;	594:2:15501:15516	4704725	0	True				
ANR	4705135	IdentifierDecl	errmsg		4704725	0					
ANR	4705136	IdentifierDeclType	MyString		4704725	0					
ANR	4705137	Identifier	errmsg		4704725	1					
ANR	4705138	IfStatement	if ( rval < 0 )		4704725	1					
ANR	4705139	Condition	rval < 0	595:6:15524:15531	4704725	0	True				
ANR	4705140	RelationalExpression	rval < 0		4704725	0		<			
ANR	4705141	Identifier	rval		4704725	0					
ANR	4705142	PrimaryExpression	0		4704725	1					
ANR	4705143	CompoundStatement		133:17:4018:4018	4704725	1					
ANR	4705144	ExpressionStatement	"errmsg = ""my_spawnl returned """	596:3:15540:15570	4704725	0	True				
ANR	4705145	AssignmentExpression	"errmsg = ""my_spawnl returned """		4704725	0		=			
ANR	4705146	Identifier	errmsg		4704725	0					
ANR	4705147	PrimaryExpression	"""my_spawnl returned """		4704725	1					
ANR	4705148	ExpressionStatement	errmsg += rval	597:3:15575:15589	4704725	1	True				
ANR	4705149	AssignmentExpression	errmsg += rval		4704725	0		+=			
ANR	4705150	Identifier	errmsg		4704725	0					
ANR	4705151	Identifier	rval		4704725	1					
ANR	4705152	ElseStatement	else		4704725	0					
ANR	4705153	CompoundStatement		136:9:4083:4083	4704725	0					
ANR	4705154	ExpressionStatement	"errmsg = ""/bin/rm """	599:3:15605:15624	4704725	0	True				
ANR	4705155	AssignmentExpression	"errmsg = ""/bin/rm """		4704725	0		=			
ANR	4705156	Identifier	errmsg		4704725	0					
ANR	4705157	PrimaryExpression	"""/bin/rm """		4704725	1					
ANR	4705158	ExpressionStatement	"statusString ( rval , errmsg )"	600:3:15629:15657	4704725	1	True				
ANR	4705159	CallExpression	"statusString ( rval , errmsg )"		4704725	0					
ANR	4705160	Callee	statusString		4704725	0					
ANR	4705161	Identifier	statusString		4704725	0					
ANR	4705162	ArgumentList	rval		4704725	1					
ANR	4705163	Argument	rval		4704725	0					
ANR	4705164	Identifier	rval		4704725	0					
ANR	4705165	Argument	errmsg		4704725	1					
ANR	4705166	Identifier	errmsg		4704725	0					
ANR	4705167	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Removing \\""%s\\"" as %s failed: %s\\n"" , path , log_msg , errmsg . Value ( ) )"	602:2:15665:15762	4704725	2	True				
ANR	4705168	CallExpression	"dprintf ( D_FULLDEBUG , ""Removing \\""%s\\"" as %s failed: %s\\n"" , path , log_msg , errmsg . Value ( ) )"		4704725	0					
ANR	4705169	Callee	dprintf		4704725	0					
ANR	4705170	Identifier	dprintf		4704725	0					
ANR	4705171	ArgumentList	D_FULLDEBUG		4704725	1					
ANR	4705172	Argument	D_FULLDEBUG		4704725	0					
ANR	4705173	Identifier	D_FULLDEBUG		4704725	0					
ANR	4705174	Argument	"""Removing \\""%s\\"" as %s failed: %s\\n"""		4704725	1					
ANR	4705175	PrimaryExpression	"""Removing \\""%s\\"" as %s failed: %s\\n"""		4704725	0					
ANR	4705176	Argument	path		4704725	2					
ANR	4705177	Identifier	path		4704725	0					
ANR	4705178	Argument	log_msg		4704725	3					
ANR	4705179	Identifier	log_msg		4704725	0					
ANR	4705180	Argument	errmsg . Value ( )		4704725	4					
ANR	4705181	CallExpression	errmsg . Value ( )		4704725	0					
ANR	4705182	Callee	errmsg . Value		4704725	0					
ANR	4705183	MemberAccess	errmsg . Value		4704725	0					
ANR	4705184	Identifier	errmsg		4704725	0					
ANR	4705185	Identifier	Value		4704725	1					
ANR	4705186	ArgumentList			4704725	1					
ANR	4705187	ReturnStatement	return false ;	604:2:15766:15778	4704725	3	True				
ANR	4705188	Identifier	false		4704725	0					
ANR	4705189	ReturnStatement	return true ;	606:1:15784:15795	4704725	19	True				
ANR	4705190	Identifier	true		4704725	0					
ANR	4705191	ReturnType	bool		4704725	1					
ANR	4705192	Identifier	Directory :: rmdirAttempt		4704725	2					
ANR	4705193	ParameterList	"const char * path , priv_state priv"		4704725	3					
ANR	4705194	Parameter	const char * path	462:25:11480:11495	4704725	0	True				
ANR	4705195	ParameterType	const char *		4704725	0					
ANR	4705196	Identifier	path		4704725	1					
ANR	4705197	Parameter	priv_state priv	462:43:11498:11512	4704725	1	True				
ANR	4705198	ParameterType	priv_state		4704725	0					
ANR	4705199	Identifier	priv		4704725	1					
ANR	4705200	CFGEntryNode	ENTRY		4704725		True				
ANR	4705201	CFGExitNode	EXIT		4704725		True				
ANR	4705202	Symbol	rmdir_opts_p		4704725						
ANR	4705203	Symbol	fNativeRmdir		4704725						
ANR	4705204	Symbol	rm_buf . Value		4704725						
ANR	4705205	Symbol	fCondorRmdir		4704725						
ANR	4705206	Symbol	PRIV_UNKNOWN		4704725						
ANR	4705207	Symbol	path		4704725						
ANR	4705208	Symbol	* rmdir_exe_p		4704725						
ANR	4705209	Symbol	exe		4704725						
ANR	4705210	Symbol	param		4704725						
ANR	4705211	Symbol	INVALID_FILE_ATTRIBUTES		4704725						
ANR	4705212	Symbol	rm_buf		4704725						
ANR	4705213	Symbol	rval		4704725						
ANR	4705214	Symbol	priv		4704725						
ANR	4705215	Symbol	strcasecmp		4704725						
ANR	4705216	Symbol	errmsg . Value		4704725						
ANR	4705217	Symbol	err		4704725						
ANR	4705218	Symbol	exe . find		4704725						
ANR	4705219	Symbol	log_msg		4704725						
ANR	4705220	Symbol	false		4704725						
ANR	4705221	Symbol	D_ALWAYS		4704725						
ANR	4705222	Symbol	errmsg		4704725						
ANR	4705223	Symbol	D_FULLDEBUG		4704725						
ANR	4705224	Symbol	GetFileAttributes		4704725						
ANR	4705225	Symbol	rmdir_exe_p		4704725						
ANR	4705226	Symbol	priv_identifier		4704725						
ANR	4705227	Symbol	set_priv		4704725						
ANR	4705228	Symbol	GetLastError		4704725						
ANR	4705229	Symbol	* rmdir_opts_p		4704725						
ANR	4705230	Symbol	get_priv		4704725						
ANR	4705231	Symbol	saved_priv		4704725						
ANR	4705232	Symbol	true		4704725						
ANR	4705233	Symbol	SIGood		4704725						
ANR	4705234	Symbol	want_priv_change		4704725						
ANR	4705235	Function	Directory :: setOwnerPriv	612:0:15816:16976							
ANR	4705236	FunctionDef	"Directory :: setOwnerPriv (const char * path , si_error_t & err)"		4705235	0					
ANR	4705237	CompoundStatement		614:0:15887:16976	4705235	0					
ANR	4705238	IdentifierDeclStatement	uid_t uid ;	615:1:15890:15899	4705235	0	True				
ANR	4705239	IdentifierDecl	uid		4705235	0					
ANR	4705240	IdentifierDeclType	uid_t		4705235	0					
ANR	4705241	Identifier	uid		4705235	1					
ANR	4705242	IdentifierDeclStatement	gid_t gid ;	616:1:15902:15911	4705235	1	True				
ANR	4705243	IdentifierDecl	gid		4705235	0					
ANR	4705244	IdentifierDeclType	gid_t		4705235	0					
ANR	4705245	Identifier	gid		4705235	1					
ANR	4705246	IdentifierDeclStatement	bool is_root_dir = false ;	617:1:15914:15938	4705235	2	True				
ANR	4705247	IdentifierDecl	is_root_dir = false		4705235	0					
ANR	4705248	IdentifierDeclType	bool		4705235	0					
ANR	4705249	Identifier	is_root_dir		4705235	1					
ANR	4705250	AssignmentExpression	is_root_dir = false		4705235	2		=			
ANR	4705251	Identifier	false		4705235	0					
ANR	4705252	Identifier	false		4705235	1					
ANR	4705253	IfStatement	"if ( ! strcmp ( path , curr_dir ) )"		4705235	3					
ANR	4705254	Condition	"! strcmp ( path , curr_dir )"	619:5:15946:15969	4705235	0	True				
ANR	4705255	UnaryOperationExpression	"! strcmp ( path , curr_dir )"		4705235	0					
ANR	4705256	UnaryOperator	!		4705235	0					
ANR	4705257	CallExpression	"strcmp ( path , curr_dir )"		4705235	1					
ANR	4705258	Callee	strcmp		4705235	0					
ANR	4705259	Identifier	strcmp		4705235	0					
ANR	4705260	ArgumentList	path		4705235	1					
ANR	4705261	Argument	path		4705235	0					
ANR	4705262	Identifier	path		4705235	0					
ANR	4705263	Argument	curr_dir		4705235	1					
ANR	4705264	Identifier	curr_dir		4705235	0					
ANR	4705265	CompoundStatement		6:32:85:85	4705235	1					
ANR	4705266	ExpressionStatement	is_root_dir = true	620:2:15977:15995	4705235	0	True				
ANR	4705267	AssignmentExpression	is_root_dir = true		4705235	0		=			
ANR	4705268	Identifier	is_root_dir		4705235	0					
ANR	4705269	Identifier	true		4705235	1					
ANR	4705270	IfStatement	if ( is_root_dir && owner_ids_inited )		4705235	4					
ANR	4705271	Condition	is_root_dir && owner_ids_inited	623:5:16007:16037	4705235	0	True				
ANR	4705272	AndExpression	is_root_dir && owner_ids_inited		4705235	0		&&			
ANR	4705273	Identifier	is_root_dir		4705235	0					
ANR	4705274	Identifier	owner_ids_inited		4705235	1					
ANR	4705275	CompoundStatement		10:39:153:153	4705235	1					
ANR	4705276	ExpressionStatement	uid = owner_uid	624:2:16045:16060	4705235	0	True				
ANR	4705277	AssignmentExpression	uid = owner_uid		4705235	0		=			
ANR	4705278	Identifier	uid		4705235	0					
ANR	4705279	Identifier	owner_uid		4705235	1					
ANR	4705280	ExpressionStatement	gid = owner_gid	625:2:16064:16079	4705235	1	True				
ANR	4705281	AssignmentExpression	gid = owner_gid		4705235	0		=			
ANR	4705282	Identifier	gid		4705235	0					
ANR	4705283	Identifier	owner_gid		4705235	1					
ANR	4705284	ElseStatement	else		4705235	0					
ANR	4705285	CompoundStatement		13:8:201:201	4705235	0					
ANR	4705286	IfStatement	"if ( ! GetIds ( path , & uid , & gid , err ) )"		4705235	0					
ANR	4705287	Condition	"! GetIds ( path , & uid , & gid , err )"	629:6:16185:16217	4705235	0	True				
ANR	4705288	UnaryOperationExpression	"! GetIds ( path , & uid , & gid , err )"		4705235	0					
ANR	4705289	UnaryOperator	!		4705235	0					
ANR	4705290	CallExpression	"GetIds ( path , & uid , & gid , err )"		4705235	1					
ANR	4705291	Callee	GetIds		4705235	0					
ANR	4705292	Identifier	GetIds		4705235	0					
ANR	4705293	ArgumentList	path		4705235	1					
ANR	4705294	Argument	path		4705235	0					
ANR	4705295	Identifier	path		4705235	0					
ANR	4705296	Argument	& uid		4705235	1					
ANR	4705297	UnaryOperationExpression	& uid		4705235	0					
ANR	4705298	UnaryOperator	&		4705235	0					
ANR	4705299	Identifier	uid		4705235	1					
ANR	4705300	Argument	& gid		4705235	2					
ANR	4705301	UnaryOperationExpression	& gid		4705235	0					
ANR	4705302	UnaryOperator	&		4705235	0					
ANR	4705303	Identifier	gid		4705235	1					
ANR	4705304	Argument	err		4705235	3					
ANR	4705305	Identifier	err		4705235	0					
ANR	4705306	CompoundStatement		16:42:333:333	4705235	1					
ANR	4705307	IfStatement	if ( err == SINoFile )		4705235	0					
ANR	4705308	Condition	err == SINoFile	630:7:16230:16244	4705235	0	True				
ANR	4705309	EqualityExpression	err == SINoFile		4705235	0		==			
ANR	4705310	Identifier	err		4705235	0					
ANR	4705311	Identifier	SINoFile		4705235	1					
ANR	4705312	CompoundStatement		17:24:359:359	4705235	1					
ANR	4705313	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Directory::setOwnerPriv() -- path %s does not exist (yet).\\n"" , path )"	631:4:16253:16343	4705235	0	True				
ANR	4705314	CallExpression	"dprintf ( D_FULLDEBUG , ""Directory::setOwnerPriv() -- path %s does not exist (yet).\\n"" , path )"		4705235	0					
ANR	4705315	Callee	dprintf		4705235	0					
ANR	4705316	Identifier	dprintf		4705235	0					
ANR	4705317	ArgumentList	D_FULLDEBUG		4705235	1					
ANR	4705318	Argument	D_FULLDEBUG		4705235	0					
ANR	4705319	Identifier	D_FULLDEBUG		4705235	0					
ANR	4705320	Argument	"""Directory::setOwnerPriv() -- path %s does not exist (yet).\\n"""		4705235	1					
ANR	4705321	PrimaryExpression	"""Directory::setOwnerPriv() -- path %s does not exist (yet).\\n"""		4705235	0					
ANR	4705322	Argument	path		4705235	2					
ANR	4705323	Identifier	path		4705235	0					
ANR	4705324	ElseStatement	else		4705235	0					
ANR	4705325	CompoundStatement		19:10:467:467	4705235	0					
ANR	4705326	ExpressionStatement	"dprintf ( D_ALWAYS , ""Directory::setOwnerPriv() -- failed to find owner of %s\\n"" , path )"	633:4:16361:16447	4705235	0	True				
ANR	4705327	CallExpression	"dprintf ( D_ALWAYS , ""Directory::setOwnerPriv() -- failed to find owner of %s\\n"" , path )"		4705235	0					
ANR	4705328	Callee	dprintf		4705235	0					
ANR	4705329	Identifier	dprintf		4705235	0					
ANR	4705330	ArgumentList	D_ALWAYS		4705235	1					
ANR	4705331	Argument	D_ALWAYS		4705235	0					
ANR	4705332	Identifier	D_ALWAYS		4705235	0					
ANR	4705333	Argument	"""Directory::setOwnerPriv() -- failed to find owner of %s\\n"""		4705235	1					
ANR	4705334	PrimaryExpression	"""Directory::setOwnerPriv() -- failed to find owner of %s\\n"""		4705235	0					
ANR	4705335	Argument	path		4705235	2					
ANR	4705336	Identifier	path		4705235	0					
ANR	4705337	ReturnStatement	return PRIV_UNKNOWN ;	635:3:16457:16476	4705235	1	True				
ANR	4705338	Identifier	PRIV_UNKNOWN		4705235	0					
ANR	4705339	IfStatement	if ( is_root_dir )		4705235	1					
ANR	4705340	Condition	is_root_dir	637:6:16488:16498	4705235	0	True				
ANR	4705341	Identifier	is_root_dir		4705235	0					
ANR	4705342	CompoundStatement		24:20:614:614	4705235	1					
ANR	4705343	ExpressionStatement	owner_uid = uid	638:3:16507:16522	4705235	0	True				
ANR	4705344	AssignmentExpression	owner_uid = uid		4705235	0		=			
ANR	4705345	Identifier	owner_uid		4705235	0					
ANR	4705346	Identifier	uid		4705235	1					
ANR	4705347	ExpressionStatement	owner_gid = gid	639:3:16527:16542	4705235	1	True				
ANR	4705348	AssignmentExpression	owner_gid = gid		4705235	0		=			
ANR	4705349	Identifier	owner_gid		4705235	0					
ANR	4705350	Identifier	gid		4705235	1					
ANR	4705351	ExpressionStatement	owner_ids_inited = true	640:3:16547:16570	4705235	2	True				
ANR	4705352	AssignmentExpression	owner_ids_inited = true		4705235	0		=			
ANR	4705353	Identifier	owner_ids_inited		4705235	0					
ANR	4705354	Identifier	true		4705235	1					
ANR	4705355	IfStatement	if ( ( 0 == uid ) || ( 0 == gid ) )		4705235	5					
ANR	4705356	Condition	( 0 == uid ) || ( 0 == gid )	645:6:16627:16650	4705235	0	True				
ANR	4705357	OrExpression	( 0 == uid ) || ( 0 == gid )		4705235	0		||			
ANR	4705358	EqualityExpression	0 == uid		4705235	0		==			
ANR	4705359	PrimaryExpression	0		4705235	0					
ANR	4705360	Identifier	uid		4705235	1					
ANR	4705361	EqualityExpression	0 == gid		4705235	1		==			
ANR	4705362	PrimaryExpression	0		4705235	0					
ANR	4705363	Identifier	gid		4705235	1					
ANR	4705364	CompoundStatement		32:33:766:766	4705235	1					
ANR	4705365	Statement	dprintf	646:2:16658:16664	4705235	0	True				
ANR	4705366	Statement	(	646:9:16665:16665	4705235	1	True				
ANR	4705367	Statement	D_ALWAYS	646:11:16667:16674	4705235	2	True				
ANR	4705368	Statement	","	646:19:16675:16675	4705235	3	True				
ANR	4705369	Statement	"""Directory::setOwnerPriv(): NOT changing """	646:21:16677:16718	4705235	4	True				
ANR	4705370	Statement	"""priv state to owner of \\""%s\\"" (%d.%d), that's root!\\n"""	647:5:16725:16779	4705235	5	True				
ANR	4705371	Statement	","	647:60:16780:16780	4705235	6	True				
ANR	4705372	Statement	path	648:5:16787:16790	4705235	7	True				
ANR	4705373	Statement	","	648:9:16791:16791	4705235	8	True				
ANR	4705374	Statement	(	648:11:16793:16793	4705235	9	True				
ANR	4705375	Statement	int	648:12:16794:16796	4705235	10	True				
ANR	4705376	Statement	)	648:15:16797:16797	4705235	11	True				
ANR	4705377	Statement	uid	648:16:16798:16800	4705235	12	True				
ANR	4705378	Statement	","	648:19:16801:16801	4705235	13	True				
ANR	4705379	Statement	(	648:21:16803:16803	4705235	14	True				
ANR	4705380	Statement	int	648:22:16804:16806	4705235	15	True				
ANR	4705381	Statement	)	648:25:16807:16807	4705235	16	True				
ANR	4705382	Statement	gid	648:26:16808:16810	4705235	17	True				
ANR	4705383	Statement	)	648:30:16812:16812	4705235	18	True				
ANR	4705384	ExpressionStatement		648:31:16813:16813	4705235	19	True				
ANR	4705385	ReturnStatement	return PRIV_UNKNOWN ;	649:2:16817:16836	4705235	20	True				
ANR	4705386	Identifier	PRIV_UNKNOWN		4705235	0					
ANR	4705387	ExpressionStatement	uninit_file_owner_ids ( )	653:1:16887:16910	4705235	6	True				
ANR	4705388	CallExpression	uninit_file_owner_ids ( )		4705235	0					
ANR	4705389	Callee	uninit_file_owner_ids		4705235	0					
ANR	4705390	Identifier	uninit_file_owner_ids		4705235	0					
ANR	4705391	ArgumentList			4705235	1					
ANR	4705392	ExpressionStatement	"set_file_owner_ids ( uid , gid )"	654:1:16913:16943	4705235	7	True				
ANR	4705393	CallExpression	"set_file_owner_ids ( uid , gid )"		4705235	0					
ANR	4705394	Callee	set_file_owner_ids		4705235	0					
ANR	4705395	Identifier	set_file_owner_ids		4705235	0					
ANR	4705396	ArgumentList	uid		4705235	1					
ANR	4705397	Argument	uid		4705235	0					
ANR	4705398	Identifier	uid		4705235	0					
ANR	4705399	Argument	gid		4705235	1					
ANR	4705400	Identifier	gid		4705235	0					
ANR	4705401	ReturnStatement	return set_file_owner_priv ( ) ;	655:1:16946:16974	4705235	8	True				
ANR	4705402	CallExpression	set_file_owner_priv ( )		4705235	0					
ANR	4705403	Callee	set_file_owner_priv		4705235	0					
ANR	4705404	Identifier	set_file_owner_priv		4705235	0					
ANR	4705405	ArgumentList			4705235	1					
ANR	4705406	ReturnType	priv_state		4705235	1					
ANR	4705407	Identifier	Directory :: setOwnerPriv		4705235	2					
ANR	4705408	ParameterList	"const char * path , si_error_t & err"		4705235	3					
ANR	4705409	Parameter	const char * path	613:25:15852:15867	4705235	0	True				
ANR	4705410	ParameterType	const char *		4705235	0					
ANR	4705411	Identifier	path		4705235	1					
ANR	4705412	Parameter	si_error_t & err	613:43:15870:15884	4705235	1	True				
ANR	4705413	ParameterType	si_error_t &		4705235	0					
ANR	4705414	Identifier	err		4705235	1					
ANR	4705415	CFGEntryNode	ENTRY		4705235		True				
ANR	4705416	CFGExitNode	EXIT		4705235		True				
ANR	4705417	Symbol	strcmp		4705235						
ANR	4705418	Symbol	gid		4705235						
ANR	4705419	Symbol	err		4705235						
ANR	4705420	Symbol	owner_gid		4705235						
ANR	4705421	Symbol	is_root_dir		4705235						
ANR	4705422	Symbol	set_file_owner_priv		4705235						
ANR	4705423	Symbol	false		4705235						
ANR	4705424	Symbol	D_ALWAYS		4705235						
ANR	4705425	Symbol	curr_dir		4705235						
ANR	4705426	Symbol	D_FULLDEBUG		4705235						
ANR	4705427	Symbol	PRIV_UNKNOWN		4705235						
ANR	4705428	Symbol	GetIds		4705235						
ANR	4705429	Symbol	& gid		4705235						
ANR	4705430	Symbol	path		4705235						
ANR	4705431	Symbol	uid		4705235						
ANR	4705432	Symbol	& uid		4705235						
ANR	4705433	Symbol	SINoFile		4705235						
ANR	4705434	Symbol	owner_ids_inited		4705235						
ANR	4705435	Symbol	owner_uid		4705235						
ANR	4705436	Symbol	true		4705235						
ANR	4705437	Function	Directory :: chmodDirectories	659:0:16980:19065							
ANR	4705438	FunctionDef	Directory :: chmodDirectories (mode_t mode)		4705437	0					
ANR	4705439	CompoundStatement		661:0:17028:19065	4705437	0					
ANR	4705440	IdentifierDeclStatement	const char * thefile = NULL ;	662:1:17031:17057	4705437	0	True				
ANR	4705441	IdentifierDecl	* thefile = NULL		4705437	0					
ANR	4705442	IdentifierDeclType	const char *		4705437	0					
ANR	4705443	Identifier	thefile		4705437	1					
ANR	4705444	AssignmentExpression	* thefile = NULL		4705437	2		=			
ANR	4705445	Identifier	NULL		4705437	0					
ANR	4705446	Identifier	NULL		4705437	1					
ANR	4705447	IdentifierDeclStatement	int chmod_rval ;	663:1:17061:17075	4705437	1	True				
ANR	4705448	IdentifierDecl	chmod_rval		4705437	0					
ANR	4705449	IdentifierDeclType	int		4705437	0					
ANR	4705450	Identifier	chmod_rval		4705437	1					
ANR	4705451	IdentifierDeclStatement	bool rval = true ;	664:1:17078:17094	4705437	2	True				
ANR	4705452	IdentifierDecl	rval = true		4705437	0					
ANR	4705453	IdentifierDeclType	bool		4705437	0					
ANR	4705454	Identifier	rval		4705437	1					
ANR	4705455	AssignmentExpression	rval = true		4705437	2		=			
ANR	4705456	Identifier	true		4705437	0					
ANR	4705457	Identifier	true		4705437	1					
ANR	4705458	IdentifierDeclStatement	priv_state saved_priv = PRIV_UNKNOWN ;	665:1:17097:17131	4705437	3	True				
ANR	4705459	IdentifierDecl	saved_priv = PRIV_UNKNOWN		4705437	0					
ANR	4705460	IdentifierDeclType	priv_state		4705437	0					
ANR	4705461	Identifier	saved_priv		4705437	1					
ANR	4705462	AssignmentExpression	saved_priv = PRIV_UNKNOWN		4705437	2		=			
ANR	4705463	Identifier	PRIV_UNKNOWN		4705437	0					
ANR	4705464	Identifier	PRIV_UNKNOWN		4705437	1					
ANR	4705465	IfStatement	if ( want_priv_change )		4705437	4					
ANR	4705466	Condition	want_priv_change	674:5:17560:17575	4705437	0	True				
ANR	4705467	Identifier	want_priv_change		4705437	0					
ANR	4705468	CompoundStatement		15:2:554:577	4705437	1					
ANR	4705469	IdentifierDeclStatement	si_error_t err = SIGood ;	675:2:17583:17606	4705437	0	True				
ANR	4705470	IdentifierDecl	err = SIGood		4705437	0					
ANR	4705471	IdentifierDeclType	si_error_t		4705437	0					
ANR	4705472	Identifier	err		4705437	1					
ANR	4705473	AssignmentExpression	err = SIGood		4705437	2		=			
ANR	4705474	Identifier	SIGood		4705437	0					
ANR	4705475	Identifier	SIGood		4705437	1					
ANR	4705476	ExpressionStatement	"saved_priv = setOwnerPriv ( GetDirectoryPath ( ) , err )"	676:2:17610:17662	4705437	1	True				
ANR	4705477	AssignmentExpression	"saved_priv = setOwnerPriv ( GetDirectoryPath ( ) , err )"		4705437	0		=			
ANR	4705478	Identifier	saved_priv		4705437	0					
ANR	4705479	CallExpression	"setOwnerPriv ( GetDirectoryPath ( ) , err )"		4705437	1					
ANR	4705480	Callee	setOwnerPriv		4705437	0					
ANR	4705481	Identifier	setOwnerPriv		4705437	0					
ANR	4705482	ArgumentList	GetDirectoryPath ( )		4705437	1					
ANR	4705483	Argument	GetDirectoryPath ( )		4705437	0					
ANR	4705484	CallExpression	GetDirectoryPath ( )		4705437	0					
ANR	4705485	Callee	GetDirectoryPath		4705437	0					
ANR	4705486	Identifier	GetDirectoryPath		4705437	0					
ANR	4705487	ArgumentList			4705437	1					
ANR	4705488	Argument	err		4705437	1					
ANR	4705489	Identifier	err		4705437	0					
ANR	4705490	IfStatement	if ( saved_priv == PRIV_UNKNOWN )		4705437	2					
ANR	4705491	Condition	saved_priv == PRIV_UNKNOWN	677:6:17670:17695	4705437	0	True				
ANR	4705492	EqualityExpression	saved_priv == PRIV_UNKNOWN		4705437	0		==			
ANR	4705493	Identifier	saved_priv		4705437	0					
ANR	4705494	Identifier	PRIV_UNKNOWN		4705437	1					
ANR	4705495	CompoundStatement		17:35:670:670	4705437	1					
ANR	4705496	IfStatement	if ( err == SINoFile )		4705437	0					
ANR	4705497	Condition	err == SINoFile	678:7:17708:17722	4705437	0	True				
ANR	4705498	EqualityExpression	err == SINoFile		4705437	0		==			
ANR	4705499	Identifier	err		4705437	0					
ANR	4705500	Identifier	SINoFile		4705437	1					
ANR	4705501	Statement	dprintf	679:4:17729:17735	4705437	1	True				
ANR	4705502	ElseStatement	else		4705437	0					
ANR	4705503	Statement	dprintf	683:4:17873:17879	4705437	0	True				
ANR	4705504	Statement	(	679:11:17736:17736	4705437	1	True				
ANR	4705505	Statement	D_FULLDEBUG	679:13:17738:17748	4705437	2	True				
ANR	4705506	Statement	","	679:24:17749:17749	4705437	3	True				
ANR	4705507	Statement	"""Directory::chmodDirectories(): """	679:26:17751:17783	4705437	4	True				
ANR	4705508	Statement	"""path \\""%s\\"" does not exist (yet).\\n"""	680:7:17792:17828	4705437	5	True				
ANR	4705509	Statement	","	680:44:17829:17829	4705437	6	True				
ANR	4705510	Statement	GetDirectoryPath	681:7:17838:17853	4705437	7	True				
ANR	4705511	Statement	(	681:23:17854:17854	4705437	8	True				
ANR	4705512	Statement	)	681:24:17855:17855	4705437	9	True				
ANR	4705513	Statement	)	681:26:17857:17857	4705437	10	True				
ANR	4705514	ExpressionStatement		681:27:17858:17858	4705437	11	True				
ANR	4705515	Statement	(	683:11:17880:17880	4705437	12	True				
ANR	4705516	Statement	D_ALWAYS	683:13:17882:17889	4705437	13	True				
ANR	4705517	Statement	","	683:21:17890:17890	4705437	14	True				
ANR	4705518	Statement	"""Directory::chmodDirectories(): """	683:23:17892:17924	4705437	15	True				
ANR	4705519	Statement	"""failed to find owner of \\""%s\\""\\n"""	684:6:17932:17965	4705437	16	True				
ANR	4705520	Statement	","	684:40:17966:17966	4705437	17	True				
ANR	4705521	Statement	GetDirectoryPath	685:6:17974:17989	4705437	18	True				
ANR	4705522	Statement	(	685:22:17990:17990	4705437	19	True				
ANR	4705523	Statement	)	685:23:17991:17991	4705437	20	True				
ANR	4705524	Statement	)	685:25:17993:17993	4705437	21	True				
ANR	4705525	ExpressionStatement		685:26:17994:17994	4705437	22	True				
ANR	4705526	ReturnStatement	return false ;	689:3:18170:18182	4705437	23	True				
ANR	4705527	Identifier	false		4705437	0					
ANR	4705528	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Attempting to chmod %s as %s\\n"" , GetDirectoryPath ( ) , priv_identifier ( get_priv ( ) ) )"	694:1:18225:18335	4705437	5	True				
ANR	4705529	CallExpression	"dprintf ( D_FULLDEBUG , ""Attempting to chmod %s as %s\\n"" , GetDirectoryPath ( ) , priv_identifier ( get_priv ( ) ) )"		4705437	0					
ANR	4705530	Callee	dprintf		4705437	0					
ANR	4705531	Identifier	dprintf		4705437	0					
ANR	4705532	ArgumentList	D_FULLDEBUG		4705437	1					
ANR	4705533	Argument	D_FULLDEBUG		4705437	0					
ANR	4705534	Identifier	D_FULLDEBUG		4705437	0					
ANR	4705535	Argument	"""Attempting to chmod %s as %s\\n"""		4705437	1					
ANR	4705536	PrimaryExpression	"""Attempting to chmod %s as %s\\n"""		4705437	0					
ANR	4705537	Argument	GetDirectoryPath ( )		4705437	2					
ANR	4705538	CallExpression	GetDirectoryPath ( )		4705437	0					
ANR	4705539	Callee	GetDirectoryPath		4705437	0					
ANR	4705540	Identifier	GetDirectoryPath		4705437	0					
ANR	4705541	ArgumentList			4705437	1					
ANR	4705542	Argument	priv_identifier ( get_priv ( ) )		4705437	3					
ANR	4705543	CallExpression	priv_identifier ( get_priv ( ) )		4705437	0					
ANR	4705544	Callee	priv_identifier		4705437	0					
ANR	4705545	Identifier	priv_identifier		4705437	0					
ANR	4705546	ArgumentList	get_priv ( )		4705437	1					
ANR	4705547	Argument	get_priv ( )		4705437	0					
ANR	4705548	CallExpression	get_priv ( )		4705437	0					
ANR	4705549	Callee	get_priv		4705437	0					
ANR	4705550	Identifier	get_priv		4705437	0					
ANR	4705551	ArgumentList			4705437	1					
ANR	4705552	ExpressionStatement	"chmod_rval = chmod ( GetDirectoryPath ( ) , mode )"	698:1:18399:18445	4705437	6	True				
ANR	4705553	AssignmentExpression	"chmod_rval = chmod ( GetDirectoryPath ( ) , mode )"		4705437	0		=			
ANR	4705554	Identifier	chmod_rval		4705437	0					
ANR	4705555	CallExpression	"chmod ( GetDirectoryPath ( ) , mode )"		4705437	1					
ANR	4705556	Callee	chmod		4705437	0					
ANR	4705557	Identifier	chmod		4705437	0					
ANR	4705558	ArgumentList	GetDirectoryPath ( )		4705437	1					
ANR	4705559	Argument	GetDirectoryPath ( )		4705437	0					
ANR	4705560	CallExpression	GetDirectoryPath ( )		4705437	0					
ANR	4705561	Callee	GetDirectoryPath		4705437	0					
ANR	4705562	Identifier	GetDirectoryPath		4705437	0					
ANR	4705563	ArgumentList			4705437	1					
ANR	4705564	Argument	mode		4705437	1					
ANR	4705565	Identifier	mode		4705437	0					
ANR	4705566	IfStatement	if ( chmod_rval < 0 )		4705437	7					
ANR	4705567	Condition	chmod_rval < 0	700:5:18453:18466	4705437	0	True				
ANR	4705568	RelationalExpression	chmod_rval < 0		4705437	0		<			
ANR	4705569	Identifier	chmod_rval		4705437	0					
ANR	4705570	PrimaryExpression	0		4705437	1					
ANR	4705571	CompoundStatement		40:22:1441:1441	4705437	1					
ANR	4705572	ExpressionStatement	"dprintf ( D_ALWAYS , ""chmod(%s) failed: %s (errno %d)\\n"" , GetDirectoryPath ( ) , strerror ( errno ) , errno )"	701:2:18474:18579	4705437	0	True				
ANR	4705573	CallExpression	"dprintf ( D_ALWAYS , ""chmod(%s) failed: %s (errno %d)\\n"" , GetDirectoryPath ( ) , strerror ( errno ) , errno )"		4705437	0					
ANR	4705574	Callee	dprintf		4705437	0					
ANR	4705575	Identifier	dprintf		4705437	0					
ANR	4705576	ArgumentList	D_ALWAYS		4705437	1					
ANR	4705577	Argument	D_ALWAYS		4705437	0					
ANR	4705578	Identifier	D_ALWAYS		4705437	0					
ANR	4705579	Argument	"""chmod(%s) failed: %s (errno %d)\\n"""		4705437	1					
ANR	4705580	PrimaryExpression	"""chmod(%s) failed: %s (errno %d)\\n"""		4705437	0					
ANR	4705581	Argument	GetDirectoryPath ( )		4705437	2					
ANR	4705582	CallExpression	GetDirectoryPath ( )		4705437	0					
ANR	4705583	Callee	GetDirectoryPath		4705437	0					
ANR	4705584	Identifier	GetDirectoryPath		4705437	0					
ANR	4705585	ArgumentList			4705437	1					
ANR	4705586	Argument	strerror ( errno )		4705437	3					
ANR	4705587	CallExpression	strerror ( errno )		4705437	0					
ANR	4705588	Callee	strerror		4705437	0					
ANR	4705589	Identifier	strerror		4705437	0					
ANR	4705590	ArgumentList	errno		4705437	1					
ANR	4705591	Argument	errno		4705437	0					
ANR	4705592	Identifier	errno		4705437	0					
ANR	4705593	Argument	errno		4705437	4					
ANR	4705594	Identifier	errno		4705437	0					
ANR	4705595	ExpressionStatement	return_and_resetpriv ( false )	703:2:18583:18612	4705437	1	True				
ANR	4705596	CallExpression	return_and_resetpriv ( false )		4705437	0					
ANR	4705597	Callee	return_and_resetpriv		4705437	0					
ANR	4705598	Identifier	return_and_resetpriv		4705437	0					
ANR	4705599	ArgumentList	false		4705437	1					
ANR	4705600	Argument	false		4705437	0					
ANR	4705601	Identifier	false		4705437	0					
ANR	4705602	ExpressionStatement	Rewind ( )	710:1:18831:18839	4705437	8	True				
ANR	4705603	CallExpression	Rewind ( )		4705437	0					
ANR	4705604	Callee	Rewind		4705437	0					
ANR	4705605	Identifier	Rewind		4705437	0					
ANR	4705606	ArgumentList			4705437	1					
ANR	4705607	WhileStatement	while ( ( thefile = Next ( ) ) )		4705437	9					
ANR	4705608	Condition	thefile = Next ( )	711:8:18849:18866	4705437	0	True				
ANR	4705609	AssignmentExpression	thefile = Next ( )		4705437	0		=			
ANR	4705610	Identifier	thefile		4705437	0					
ANR	4705611	CallExpression	Next ( )		4705437	1					
ANR	4705612	Callee	Next		4705437	0					
ANR	4705613	Identifier	Next		4705437	0					
ANR	4705614	ArgumentList			4705437	1					
ANR	4705615	CompoundStatement		51:29:1841:1841	4705437	1					
ANR	4705616	IfStatement	if ( IsDirectory ( ) && ! IsSymlink ( ) )		4705437	0					
ANR	4705617	Condition	IsDirectory ( ) && ! IsSymlink ( )	712:6:18878:18906	4705437	0	True				
ANR	4705618	AndExpression	IsDirectory ( ) && ! IsSymlink ( )		4705437	0		&&			
ANR	4705619	CallExpression	IsDirectory ( )		4705437	0					
ANR	4705620	Callee	IsDirectory		4705437	0					
ANR	4705621	Identifier	IsDirectory		4705437	0					
ANR	4705622	ArgumentList			4705437	1					
ANR	4705623	UnaryOperationExpression	! IsSymlink ( )		4705437	1					
ANR	4705624	UnaryOperator	!		4705437	0					
ANR	4705625	CallExpression	IsSymlink ( )		4705437	1					
ANR	4705626	Callee	IsSymlink		4705437	0					
ANR	4705627	Identifier	IsSymlink		4705437	0					
ANR	4705628	ArgumentList			4705437	1					
ANR	4705629	CompoundStatement		53:3:1886:1930	4705437	1					
ANR	4705630	IdentifierDeclStatement	"Directory subdir ( curr , desired_priv_state ) ;"	713:3:18915:18959	4705437	0	True				
ANR	4705631	IdentifierDecl	"subdir ( curr , desired_priv_state )"		4705437	0					
ANR	4705632	IdentifierDeclType	Directory		4705437	0					
ANR	4705633	Identifier	subdir		4705437	1					
ANR	4705634	Expression	"curr , desired_priv_state"		4705437	2					
ANR	4705635	Identifier	curr		4705437	0					
ANR	4705636	Identifier	desired_priv_state		4705437	1					
ANR	4705637	IfStatement	if ( ! subdir . chmodDirectories ( mode ) )		4705437	1					
ANR	4705638	Condition	! subdir . chmodDirectories ( mode )	714:7:18968:18998	4705437	0	True				
ANR	4705639	UnaryOperationExpression	! subdir . chmodDirectories ( mode )		4705437	0					
ANR	4705640	UnaryOperator	!		4705437	0					
ANR	4705641	CallExpression	subdir . chmodDirectories ( mode )		4705437	1					
ANR	4705642	Callee	subdir . chmodDirectories		4705437	0					
ANR	4705643	MemberAccess	subdir . chmodDirectories		4705437	0					
ANR	4705644	Identifier	subdir		4705437	0					
ANR	4705645	Identifier	chmodDirectories		4705437	1					
ANR	4705646	ArgumentList	mode		4705437	1					
ANR	4705647	Argument	mode		4705437	0					
ANR	4705648	Identifier	mode		4705437	0					
ANR	4705649	CompoundStatement		54:41:1973:1973	4705437	1					
ANR	4705650	ExpressionStatement	rval = false	715:4:19008:19020	4705437	0	True				
ANR	4705651	AssignmentExpression	rval = false		4705437	0		=			
ANR	4705652	Identifier	rval		4705437	0					
ANR	4705653	Identifier	false		4705437	1					
ANR	4705654	ExpressionStatement	return_and_resetpriv ( rval )	719:1:19035:19063	4705437	10	True				
ANR	4705655	CallExpression	return_and_resetpriv ( rval )		4705437	0					
ANR	4705656	Callee	return_and_resetpriv		4705437	0					
ANR	4705657	Identifier	return_and_resetpriv		4705437	0					
ANR	4705658	ArgumentList	rval		4705437	1					
ANR	4705659	Argument	rval		4705437	0					
ANR	4705660	Identifier	rval		4705437	0					
ANR	4705661	ReturnType	bool		4705437	1					
ANR	4705662	Identifier	Directory :: chmodDirectories		4705437	2					
ANR	4705663	ParameterList	mode_t mode		4705437	3					
ANR	4705664	Parameter	mode_t mode	660:29:17014:17024	4705437	0	True				
ANR	4705665	ParameterType	mode_t		4705437	0					
ANR	4705666	Identifier	mode		4705437	1					
ANR	4705667	CFGEntryNode	ENTRY		4705437		True				
ANR	4705668	CFGExitNode	EXIT		4705437		True				
ANR	4705669	Symbol	IsDirectory		4705437						
ANR	4705670	Symbol	setOwnerPriv		4705437						
ANR	4705671	Symbol	chmod_rval		4705437						
ANR	4705672	Symbol	PRIV_UNKNOWN		4705437						
ANR	4705673	Symbol	mode		4705437						
ANR	4705674	Symbol	subdir		4705437						
ANR	4705675	Symbol	SINoFile		4705437						
ANR	4705676	Symbol	chmod		4705437						
ANR	4705677	Symbol	rval		4705437						
ANR	4705678	Symbol	errno		4705437						
ANR	4705679	Symbol	NULL		4705437						
ANR	4705680	Symbol	err		4705437						
ANR	4705681	Symbol	thefile		4705437						
ANR	4705682	Symbol	false		4705437						
ANR	4705683	Symbol	D_ALWAYS		4705437						
ANR	4705684	Symbol	subdir . chmodDirectories		4705437						
ANR	4705685	Symbol	D_FULLDEBUG		4705437						
ANR	4705686	Symbol	IsSymlink		4705437						
ANR	4705687	Symbol	priv_identifier		4705437						
ANR	4705688	Symbol	strerror		4705437						
ANR	4705689	Symbol	GetDirectoryPath		4705437						
ANR	4705690	Symbol	get_priv		4705437						
ANR	4705691	Symbol	Next		4705437						
ANR	4705692	Symbol	true		4705437						
ANR	4705693	Symbol	saved_priv		4705437						
ANR	4705694	Symbol	SIGood		4705437						
ANR	4705695	Symbol	want_priv_change		4705437						
ANR	4705696	Function	Directory :: Rewind	725:0:19091:21031							
ANR	4705697	FunctionDef	Directory :: Rewind ()		4705696	0					
ANR	4705698	CompoundStatement		727:0:19116:21031	4705696	0					
ANR	4705699	IfStatement	if ( curr )		4705696	0					
ANR	4705700	Condition	curr	728:5:19123:19126	4705696	0	True				
ANR	4705701	Identifier	curr		4705696	0					
ANR	4705702	CompoundStatement		2:12:13:13	4705696	1					
ANR	4705703	Statement	delete	729:2:19134:19139	4705696	0	True				
ANR	4705704	ExpressionStatement	curr	729:9:19141:19145	4705696	1	True				
ANR	4705705	Identifier	curr		4705696	0					
ANR	4705706	ExpressionStatement	curr = NULL	730:2:19149:19160	4705696	2	True				
ANR	4705707	AssignmentExpression	curr = NULL		4705696	0		=			
ANR	4705708	Identifier	curr		4705696	0					
ANR	4705709	Identifier	NULL		4705696	1					
ANR	4705710	ExpressionStatement	Set_Access_Priv ( )	733:1:19167:19184	4705696	1	True				
ANR	4705711	CallExpression	Set_Access_Priv ( )		4705696	0					
ANR	4705712	Callee	Set_Access_Priv		4705696	0					
ANR	4705713	Identifier	Set_Access_Priv		4705696	0					
ANR	4705714	ArgumentList			4705696	1					
ANR	4705715	IfStatement	if ( dirp == NULL )		4705696	2					
ANR	4705716	Condition	dirp == NULL	737:5:19215:19226	4705696	0	True				
ANR	4705717	EqualityExpression	dirp == NULL		4705696	0		==			
ANR	4705718	Identifier	dirp		4705696	0					
ANR	4705719	Identifier	NULL		4705696	1					
ANR	4705720	CompoundStatement		11:20:113:113	4705696	1					
ANR	4705721	ExpressionStatement	errno = 0	738:2:19234:19243	4705696	0	True				
ANR	4705722	AssignmentExpression	errno = 0		4705696	0		=			
ANR	4705723	Identifier	errno		4705696	0					
ANR	4705724	PrimaryExpression	0		4705696	1					
ANR	4705725	ExpressionStatement	dirp = condor_opendir ( curr_dir )	739:2:19247:19280	4705696	1	True				
ANR	4705726	AssignmentExpression	dirp = condor_opendir ( curr_dir )		4705696	0		=			
ANR	4705727	Identifier	dirp		4705696	0					
ANR	4705728	CallExpression	condor_opendir ( curr_dir )		4705696	1					
ANR	4705729	Callee	condor_opendir		4705696	0					
ANR	4705730	Identifier	condor_opendir		4705696	0					
ANR	4705731	ArgumentList	curr_dir		4705696	1					
ANR	4705732	Argument	curr_dir		4705696	0					
ANR	4705733	Identifier	curr_dir		4705696	0					
ANR	4705734	IfStatement	if ( dirp == NULL )		4705696	2					
ANR	4705735	Condition	dirp == NULL	740:6:19288:19299	4705696	0	True				
ANR	4705736	EqualityExpression	dirp == NULL		4705696	0		==			
ANR	4705737	Identifier	dirp		4705696	0					
ANR	4705738	Identifier	NULL		4705696	1					
ANR	4705739	CompoundStatement		31:3:863:914	4705696	1					
ANR	4705740	IfStatement	if ( ! want_priv_change )		4705696	0					
ANR	4705741	Condition	! want_priv_change	747:7:19657:19674	4705696	0	True				
ANR	4705742	UnaryOperationExpression	! want_priv_change		4705696	0					
ANR	4705743	UnaryOperator	!		4705696	0					
ANR	4705744	Identifier	want_priv_change		4705696	1					
ANR	4705745	CompoundStatement		21:28:561:561	4705696	1					
ANR	4705746	Statement	dprintf	748:4:19684:19690	4705696	0	True				
ANR	4705747	Statement	(	748:11:19691:19691	4705696	1	True				
ANR	4705748	Statement	D_ALWAYS	748:13:19693:19700	4705696	2	True				
ANR	4705749	Statement	","	748:21:19701:19701	4705696	3	True				
ANR	4705750	Statement	"""Can't open directory \\""%s\\"" as %s, """	748:23:19703:19739	4705696	4	True				
ANR	4705751	Statement	"""errno: %d (%s)\\n"""	749:7:19748:19765	4705696	5	True				
ANR	4705752	Statement	","	749:25:19766:19766	4705696	6	True				
ANR	4705753	Statement	curr_dir	749:27:19768:19775	4705696	7	True				
ANR	4705754	Statement	","	749:35:19776:19776	4705696	8	True				
ANR	4705755	Statement	priv_to_string	750:7:19786:19799	4705696	9	True				
ANR	4705756	Statement	(	750:21:19800:19800	4705696	10	True				
ANR	4705757	Statement	get_priv	750:22:19801:19808	4705696	11	True				
ANR	4705758	Statement	(	750:30:19809:19809	4705696	12	True				
ANR	4705759	Statement	)	750:31:19810:19810	4705696	13	True				
ANR	4705760	Statement	)	750:32:19811:19811	4705696	14	True				
ANR	4705761	Statement	","	750:33:19812:19812	4705696	15	True				
ANR	4705762	Statement	errno	750:35:19814:19818	4705696	16	True				
ANR	4705763	Statement	","	750:40:19819:19819	4705696	17	True				
ANR	4705764	Statement	strerror	751:7:19829:19836	4705696	18	True				
ANR	4705765	Statement	(	751:15:19837:19837	4705696	19	True				
ANR	4705766	Statement	errno	751:16:19838:19842	4705696	20	True				
ANR	4705767	Statement	)	751:21:19843:19843	4705696	21	True				
ANR	4705768	Statement	)	751:23:19845:19845	4705696	22	True				
ANR	4705769	ExpressionStatement		751:24:19846:19846	4705696	23	True				
ANR	4705770	ExpressionStatement	return_and_resetpriv ( false )	752:4:19852:19879	4705696	24	True				
ANR	4705771	CallExpression	return_and_resetpriv ( false )		4705696	0					
ANR	4705772	Callee	return_and_resetpriv		4705696	0					
ANR	4705773	Identifier	return_and_resetpriv		4705696	0					
ANR	4705774	ArgumentList	false		4705696	1					
ANR	4705775	Argument	false		4705696	0					
ANR	4705776	Identifier	false		4705696	0					
ANR	4705777	IdentifierDeclStatement	si_error_t err = SIGood ;	756:3:19951:19974	4705696	1	True				
ANR	4705778	IdentifierDecl	err = SIGood		4705696	0					
ANR	4705779	IdentifierDeclType	si_error_t		4705696	0					
ANR	4705780	Identifier	err		4705696	1					
ANR	4705781	AssignmentExpression	err = SIGood		4705696	2		=			
ANR	4705782	Identifier	SIGood		4705696	0					
ANR	4705783	Identifier	SIGood		4705696	1					
ANR	4705784	IdentifierDeclStatement	"priv_state old_priv = setOwnerPriv ( curr_dir , err ) ;"	757:3:19980:20031	4705696	2	True				
ANR	4705785	IdentifierDecl	"old_priv = setOwnerPriv ( curr_dir , err )"		4705696	0					
ANR	4705786	IdentifierDeclType	priv_state		4705696	0					
ANR	4705787	Identifier	old_priv		4705696	1					
ANR	4705788	AssignmentExpression	"old_priv = setOwnerPriv ( curr_dir , err )"		4705696	2		=			
ANR	4705789	Identifier	old_priv		4705696	0					
ANR	4705790	CallExpression	"setOwnerPriv ( curr_dir , err )"		4705696	1					
ANR	4705791	Callee	setOwnerPriv		4705696	0					
ANR	4705792	Identifier	setOwnerPriv		4705696	0					
ANR	4705793	ArgumentList	curr_dir		4705696	1					
ANR	4705794	Argument	curr_dir		4705696	0					
ANR	4705795	Identifier	curr_dir		4705696	0					
ANR	4705796	Argument	err		4705696	1					
ANR	4705797	Identifier	err		4705696	0					
ANR	4705798	IfStatement	if ( old_priv == PRIV_UNKNOWN )		4705696	3					
ANR	4705799	Condition	old_priv == PRIV_UNKNOWN	758:7:20040:20063	4705696	0	True				
ANR	4705800	EqualityExpression	old_priv == PRIV_UNKNOWN		4705696	0		==			
ANR	4705801	Identifier	old_priv		4705696	0					
ANR	4705802	Identifier	PRIV_UNKNOWN		4705696	1					
ANR	4705803	CompoundStatement		32:34:950:950	4705696	1					
ANR	4705804	IfStatement	if ( err == SINoFile )		4705696	0					
ANR	4705805	Condition	err == SINoFile	759:8:20077:20091	4705696	0	True				
ANR	4705806	EqualityExpression	err == SINoFile		4705696	0		==			
ANR	4705807	Identifier	err		4705696	0					
ANR	4705808	Identifier	SINoFile		4705696	1					
ANR	4705809	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Directory::Rewind(): path \\""%s\\"" does not exist (yet) \\n"" , curr_dir )"	760:5:20099:20189	4705696	1	True				
ANR	4705810	CallExpression	"dprintf ( D_FULLDEBUG , ""Directory::Rewind(): path \\""%s\\"" does not exist (yet) \\n"" , curr_dir )"		4705696	0					
ANR	4705811	Callee	dprintf		4705696	0					
ANR	4705812	Identifier	dprintf		4705696	0					
ANR	4705813	ArgumentList	D_FULLDEBUG		4705696	1					
ANR	4705814	Argument	D_FULLDEBUG		4705696	0					
ANR	4705815	Identifier	D_FULLDEBUG		4705696	0					
ANR	4705816	Argument	"""Directory::Rewind(): path \\""%s\\"" does not exist (yet) \\n"""		4705696	1					
ANR	4705817	PrimaryExpression	"""Directory::Rewind(): path \\""%s\\"" does not exist (yet) \\n"""		4705696	0					
ANR	4705818	Argument	curr_dir		4705696	2					
ANR	4705819	Identifier	curr_dir		4705696	0					
ANR	4705820	ElseStatement	else		4705696	0					
ANR	4705821	Statement	dprintf	762:5:20206:20212	4705696	0	True				
ANR	4705822	Statement	(	762:12:20213:20213	4705696	1	True				
ANR	4705823	Statement	D_ALWAYS	762:14:20215:20222	4705696	2	True				
ANR	4705824	Statement	","	762:22:20223:20223	4705696	3	True				
ANR	4705825	Statement	"""Directory::Rewind(): """	762:24:20225:20247	4705696	4	True				
ANR	4705826	Statement	"""failed to find owner of \\""%s\\""\\n"""	763:8:20257:20290	4705696	5	True				
ANR	4705827	Statement	","	763:42:20291:20291	4705696	6	True				
ANR	4705828	Statement	curr_dir	763:44:20293:20300	4705696	7	True				
ANR	4705829	Statement	)	763:53:20302:20302	4705696	8	True				
ANR	4705830	ExpressionStatement		763:54:20303:20303	4705696	9	True				
ANR	4705831	ExpressionStatement	return_and_resetpriv ( false )	766:4:20410:20437	4705696	10	True				
ANR	4705832	CallExpression	return_and_resetpriv ( false )		4705696	0					
ANR	4705833	Callee	return_and_resetpriv		4705696	0					
ANR	4705834	Identifier	return_and_resetpriv		4705696	0					
ANR	4705835	ArgumentList	false		4705696	1					
ANR	4705836	Argument	false		4705696	0					
ANR	4705837	Identifier	false		4705696	0					
ANR	4705838	ExpressionStatement	errno = 0	770:3:20547:20556	4705696	4	True				
ANR	4705839	AssignmentExpression	errno = 0		4705696	0		=			
ANR	4705840	Identifier	errno		4705696	0					
ANR	4705841	PrimaryExpression	0		4705696	1					
ANR	4705842	ExpressionStatement	dirp = condor_opendir ( curr_dir )	771:3:20561:20594	4705696	5	True				
ANR	4705843	AssignmentExpression	dirp = condor_opendir ( curr_dir )		4705696	0		=			
ANR	4705844	Identifier	dirp		4705696	0					
ANR	4705845	CallExpression	condor_opendir ( curr_dir )		4705696	1					
ANR	4705846	Callee	condor_opendir		4705696	0					
ANR	4705847	Identifier	condor_opendir		4705696	0					
ANR	4705848	ArgumentList	curr_dir		4705696	1					
ANR	4705849	Argument	curr_dir		4705696	0					
ANR	4705850	Identifier	curr_dir		4705696	0					
ANR	4705851	IfStatement	if ( dirp == NULL )		4705696	6					
ANR	4705852	Condition	dirp == NULL	772:7:20603:20614	4705696	0	True				
ANR	4705853	EqualityExpression	dirp == NULL		4705696	0		==			
ANR	4705854	Identifier	dirp		4705696	0					
ANR	4705855	Identifier	NULL		4705696	1					
ANR	4705856	CompoundStatement		46:22:1501:1501	4705696	1					
ANR	4705857	Statement	dprintf	773:4:20624:20630	4705696	0	True				
ANR	4705858	Statement	(	773:11:20631:20631	4705696	1	True				
ANR	4705859	Statement	D_ALWAYS	773:13:20633:20640	4705696	2	True				
ANR	4705860	Statement	","	773:21:20641:20641	4705696	3	True				
ANR	4705861	Statement	"""Can't open directory \\""%s\\"" as owner, """	773:23:20643:20682	4705696	4	True				
ANR	4705862	Statement	"""errno: %d (%s)"""	774:7:20691:20706	4705696	5	True				
ANR	4705863	Statement	","	774:23:20707:20707	4705696	6	True				
ANR	4705864	Statement	curr_dir	774:25:20709:20716	4705696	7	True				
ANR	4705865	Statement	","	774:33:20717:20717	4705696	8	True				
ANR	4705866	Statement	errno	774:35:20719:20723	4705696	9	True				
ANR	4705867	Statement	","	774:40:20724:20724	4705696	10	True				
ANR	4705868	Statement	strerror	774:42:20726:20733	4705696	11	True				
ANR	4705869	Statement	(	774:50:20734:20734	4705696	12	True				
ANR	4705870	Statement	errno	774:51:20735:20739	4705696	13	True				
ANR	4705871	Statement	)	774:56:20740:20740	4705696	14	True				
ANR	4705872	Statement	)	774:58:20742:20742	4705696	15	True				
ANR	4705873	ExpressionStatement		774:59:20743:20743	4705696	16	True				
ANR	4705874	ExpressionStatement	return_and_resetpriv ( false )	777:4:20848:20875	4705696	17	True				
ANR	4705875	CallExpression	return_and_resetpriv ( false )		4705696	0					
ANR	4705876	Callee	return_and_resetpriv		4705696	0					
ANR	4705877	Identifier	return_and_resetpriv		4705696	0					
ANR	4705878	ArgumentList	false		4705696	1					
ANR	4705879	Argument	false		4705696	0					
ANR	4705880	Identifier	false		4705696	0					
ANR	4705881	ExpressionStatement	condor_rewinddir ( dirp )	781:1:20890:20914	4705696	3	True				
ANR	4705882	CallExpression	condor_rewinddir ( dirp )		4705696	0					
ANR	4705883	Callee	condor_rewinddir		4705696	0					
ANR	4705884	Identifier	condor_rewinddir		4705696	0					
ANR	4705885	ArgumentList	dirp		4705696	1					
ANR	4705886	Argument	dirp		4705696	0					
ANR	4705887	Identifier	dirp		4705696	0					
ANR	4705888	ExpressionStatement	return_and_resetpriv ( true )	790:1:21003:21029	4705696	4	True				
ANR	4705889	CallExpression	return_and_resetpriv ( true )		4705696	0					
ANR	4705890	Callee	return_and_resetpriv		4705696	0					
ANR	4705891	Identifier	return_and_resetpriv		4705696	0					
ANR	4705892	ArgumentList	true		4705696	1					
ANR	4705893	Argument	true		4705696	0					
ANR	4705894	Identifier	true		4705696	0					
ANR	4705895	ReturnType	bool		4705696	1					
ANR	4705896	Identifier	Directory :: Rewind		4705696	2					
ANR	4705897	ParameterList			4705696	3					
ANR	4705898	CFGEntryNode	ENTRY		4705696		True				
ANR	4705899	CFGExitNode	EXIT		4705696		True				
ANR	4705900	Symbol	errno		4705696						
ANR	4705901	Symbol	NULL		4705696						
ANR	4705902	Symbol	err		4705696						
ANR	4705903	Symbol	false		4705696						
ANR	4705904	Symbol	curr_dir		4705696						
ANR	4705905	Symbol	D_FULLDEBUG		4705696						
ANR	4705906	Symbol	dirp		4705696						
ANR	4705907	Symbol	setOwnerPriv		4705696						
ANR	4705908	Symbol	PRIV_UNKNOWN		4705696						
ANR	4705909	Symbol	old_priv		4705696						
ANR	4705910	Symbol	SINoFile		4705696						
ANR	4705911	Symbol	true		4705696						
ANR	4705912	Symbol	SIGood		4705696						
ANR	4705913	Symbol	curr		4705696						
ANR	4705914	Symbol	want_priv_change		4705696						
ANR	4705915	Symbol	condor_opendir		4705696						
ANR	4705916	Function	Directory :: Next	793:0:21034:23025							
ANR	4705917	FunctionDef	Directory :: Next ()		4705916	0					
ANR	4705918	CompoundStatement		795:0:21065:23025	4705916	0					
ANR	4705919	IdentifierDeclStatement	MyString path ;	796:1:21068:21081	4705916	0	True				
ANR	4705920	IdentifierDecl	path		4705916	0					
ANR	4705921	IdentifierDeclType	MyString		4705916	0					
ANR	4705922	Identifier	path		4705916	1					
ANR	4705923	IdentifierDeclStatement	bool done = false ;	797:1:21084:21101	4705916	1	True				
ANR	4705924	IdentifierDecl	done = false		4705916	0					
ANR	4705925	IdentifierDeclType	bool		4705916	0					
ANR	4705926	Identifier	done		4705916	1					
ANR	4705927	AssignmentExpression	done = false		4705916	2		=			
ANR	4705928	Identifier	false		4705916	0					
ANR	4705929	Identifier	false		4705916	1					
ANR	4705930	ExpressionStatement	Set_Access_Priv ( )	798:1:21104:21121	4705916	2	True				
ANR	4705931	CallExpression	Set_Access_Priv ( )		4705916	0					
ANR	4705932	Callee	Set_Access_Priv		4705916	0					
ANR	4705933	Identifier	Set_Access_Priv		4705916	0					
ANR	4705934	ArgumentList			4705916	1					
ANR	4705935	IfStatement	if ( curr )		4705916	3					
ANR	4705936	Condition	curr	799:5:21128:21131	4705916	0	True				
ANR	4705937	Identifier	curr		4705916	0					
ANR	4705938	CompoundStatement		5:12:69:69	4705916	1					
ANR	4705939	Statement	delete	800:2:21139:21144	4705916	0	True				
ANR	4705940	ExpressionStatement	curr	800:9:21146:21150	4705916	1	True				
ANR	4705941	Identifier	curr		4705916	0					
ANR	4705942	ExpressionStatement	curr = NULL	801:2:21154:21165	4705916	2	True				
ANR	4705943	AssignmentExpression	curr = NULL		4705916	0		=			
ANR	4705944	Identifier	curr		4705916	0					
ANR	4705945	Identifier	NULL		4705916	1					
ANR	4705946	IfStatement	if ( dirp == NULL )		4705916	4					
ANR	4705947	Condition	dirp == NULL	805:5:21190:21201	4705916	0	True				
ANR	4705948	EqualityExpression	dirp == NULL		4705916	0		==			
ANR	4705949	Identifier	dirp		4705916	0					
ANR	4705950	Identifier	NULL		4705916	1					
ANR	4705951	CompoundStatement		11:20:139:139	4705916	1					
ANR	4705952	ExpressionStatement	Rewind ( )	806:2:21209:21217	4705916	0	True				
ANR	4705953	CallExpression	Rewind ( )		4705916	0					
ANR	4705954	Callee	Rewind		4705916	0					
ANR	4705955	Identifier	Rewind		4705916	0					
ANR	4705956	ArgumentList			4705916	1					
ANR	4705957	IdentifierDeclStatement	condor_dirent * dirent ;	809:1:21232:21253	4705916	5	True				
ANR	4705958	IdentifierDecl	* dirent		4705916	0					
ANR	4705959	IdentifierDeclType	condor_dirent *		4705916	0					
ANR	4705960	Identifier	dirent		4705916	1					
ANR	4705961	WhileStatement	while ( ! done && dirp && ( dirent = condor_readdir ( dirp ) ) )		4705916	6					
ANR	4705962	Condition	! done && dirp && ( dirent = condor_readdir ( dirp ) )	810:8:21263:21311	4705916	0	True				
ANR	4705963	AndExpression	! done && dirp && ( dirent = condor_readdir ( dirp ) )		4705916	0		&&			
ANR	4705964	UnaryOperationExpression	! done		4705916	0					
ANR	4705965	UnaryOperator	!		4705916	0					
ANR	4705966	Identifier	done		4705916	1					
ANR	4705967	AndExpression	dirp && ( dirent = condor_readdir ( dirp ) )		4705916	1		&&			
ANR	4705968	Identifier	dirp		4705916	0					
ANR	4705969	AssignmentExpression	dirent = condor_readdir ( dirp )		4705916	1		=			
ANR	4705970	Identifier	dirent		4705916	0					
ANR	4705971	CallExpression	condor_readdir ( dirp )		4705916	1					
ANR	4705972	Callee	condor_readdir		4705916	0					
ANR	4705973	Identifier	condor_readdir		4705916	0					
ANR	4705974	ArgumentList	dirp		4705916	1					
ANR	4705975	Argument	dirp		4705916	0					
ANR	4705976	Identifier	dirp		4705916	0					
ANR	4705977	CompoundStatement		16:60:249:249	4705916	1					
ANR	4705978	IfStatement	"if ( strcmp ( ""."" , dirent -> d_name ) == MATCH )"		4705916	0					
ANR	4705979	Condition	"strcmp ( ""."" , dirent -> d_name ) == MATCH"	811:6:21323:21357	4705916	0	True				
ANR	4705980	EqualityExpression	"strcmp ( ""."" , dirent -> d_name ) == MATCH"		4705916	0		==			
ANR	4705981	CallExpression	"strcmp ( ""."" , dirent -> d_name )"		4705916	0					
ANR	4705982	Callee	strcmp		4705916	0					
ANR	4705983	Identifier	strcmp		4705916	0					
ANR	4705984	ArgumentList	"""."""		4705916	1					
ANR	4705985	Argument	"""."""		4705916	0					
ANR	4705986	PrimaryExpression	"""."""		4705916	0					
ANR	4705987	Argument	dirent -> d_name		4705916	1					
ANR	4705988	PtrMemberAccess	dirent -> d_name		4705916	0					
ANR	4705989	Identifier	dirent		4705916	0					
ANR	4705990	Identifier	d_name		4705916	1					
ANR	4705991	Identifier	MATCH		4705916	1					
ANR	4705992	CompoundStatement		17:44:295:295	4705916	1					
ANR	4705993	ContinueStatement	continue ;	812:3:21366:21374	4705916	0	True				
ANR	4705994	IfStatement	"if ( strcmp ( "".."" , dirent -> d_name ) == MATCH )"		4705916	1					
ANR	4705995	Condition	"strcmp ( "".."" , dirent -> d_name ) == MATCH"	814:6:21386:21421	4705916	0	True				
ANR	4705996	EqualityExpression	"strcmp ( "".."" , dirent -> d_name ) == MATCH"		4705916	0		==			
ANR	4705997	CallExpression	"strcmp ( "".."" , dirent -> d_name )"		4705916	0					
ANR	4705998	Callee	strcmp		4705916	0					
ANR	4705999	Identifier	strcmp		4705916	0					
ANR	4706000	ArgumentList	""".."""		4705916	1					
ANR	4706001	Argument	""".."""		4705916	0					
ANR	4706002	PrimaryExpression	""".."""		4705916	0					
ANR	4706003	Argument	dirent -> d_name		4705916	1					
ANR	4706004	PtrMemberAccess	dirent -> d_name		4705916	0					
ANR	4706005	Identifier	dirent		4705916	0					
ANR	4706006	Identifier	d_name		4705916	1					
ANR	4706007	Identifier	MATCH		4705916	1					
ANR	4706008	CompoundStatement		20:45:359:359	4705916	1					
ANR	4706009	ContinueStatement	continue ;	815:3:21430:21438	4705916	0	True				
ANR	4706010	CompoundStatement		23:2:380:380	4705916	2					
ANR	4706011	ExpressionStatement	path = curr_dir	818:3:21451:21466	4705916	0	True				
ANR	4706012	AssignmentExpression	path = curr_dir		4705916	0		=			
ANR	4706013	Identifier	path		4705916	0					
ANR	4706014	Identifier	curr_dir		4705916	1					
ANR	4706015	ExpressionStatement	path += DIR_DELIM_CHAR	819:3:21471:21493	4705916	1	True				
ANR	4706016	AssignmentExpression	path += DIR_DELIM_CHAR		4705916	0		+=			
ANR	4706017	Identifier	path		4705916	0					
ANR	4706018	Identifier	DIR_DELIM_CHAR		4705916	1					
ANR	4706019	ExpressionStatement	path += dirent -> d_name	820:3:21498:21520	4705916	2	True				
ANR	4706020	AssignmentExpression	path += dirent -> d_name		4705916	0		+=			
ANR	4706021	Identifier	path		4705916	0					
ANR	4706022	PtrMemberAccess	dirent -> d_name		4705916	1					
ANR	4706023	Identifier	dirent		4705916	0					
ANR	4706024	Identifier	d_name		4705916	1					
ANR	4706025	ExpressionStatement	curr = new StatInfo ( path . Value ( ) )	821:3:21525:21560	4705916	3	True				
ANR	4706026	AssignmentExpression	curr = new StatInfo ( path . Value ( ) )		4705916	0		=			
ANR	4706027	Identifier	curr		4705916	0					
ANR	4706028	CallExpression	path . Value ( )		4705916	1					
ANR	4706029	Callee	path . Value		4705916	0					
ANR	4706030	MemberAccess	path . Value		4705916	0					
ANR	4706031	Identifier	path		4705916	0					
ANR	4706032	Identifier	Value		4705916	1					
ANR	4706033	ArgumentList			4705916	1					
ANR	4706034	SwitchStatement	switch ( curr -> Error ( ) )		4705916	4					
ANR	4706035	Condition	curr -> Error ( )	822:11:21573:21585	4705916	0	True				
ANR	4706036	CallExpression	curr -> Error ( )		4705916	0					
ANR	4706037	Callee	curr -> Error		4705916	0					
ANR	4706038	PtrMemberAccess	curr -> Error		4705916	0					
ANR	4706039	Identifier	curr		4705916	0					
ANR	4706040	Identifier	Error		4705916	1					
ANR	4706041	ArgumentList			4705916	1					
ANR	4706042	CompoundStatement		28:27:523:523	4705916	1					
ANR	4706043	Label	case SINoFile :	823:3:21594:21607	4705916	0	True				
ANR	4706044	Identifier	SINoFile		4705916	0					
ANR	4706045	Statement	delete	825:4:21674:21679	4705916	1	True				
ANR	4706046	ExpressionStatement	curr	825:11:21681:21685	4705916	2	True				
ANR	4706047	Identifier	curr		4705916	0					
ANR	4706048	ExpressionStatement	curr = NULL	826:4:21692:21703	4705916	3	True				
ANR	4706049	AssignmentExpression	curr = NULL		4705916	0		=			
ANR	4706050	Identifier	curr		4705916	0					
ANR	4706051	Identifier	NULL		4705916	1					
ANR	4706052	BreakStatement	break ;	827:4:21709:21714	4705916	4	True				
ANR	4706053	Label	case SIFailure :	828:3:21719:21733	4705916	5	True				
ANR	4706054	Identifier	SIFailure		4705916	0					
ANR	4706055	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Directory::stat() failed for \\""%s\\"", errno: %d (%s)\\n"" , path . Value ( ) , curr -> Errno ( ) , strerror ( curr -> Errno ( ) ) )"	830:4:21777:21922	4705916	6	True				
ANR	4706056	CallExpression	"dprintf ( D_FULLDEBUG , ""Directory::stat() failed for \\""%s\\"", errno: %d (%s)\\n"" , path . Value ( ) , curr -> Errno ( ) , strerror ( curr -> Errno ( ) ) )"		4705916	0					
ANR	4706057	Callee	dprintf		4705916	0					
ANR	4706058	Identifier	dprintf		4705916	0					
ANR	4706059	ArgumentList	D_FULLDEBUG		4705916	1					
ANR	4706060	Argument	D_FULLDEBUG		4705916	0					
ANR	4706061	Identifier	D_FULLDEBUG		4705916	0					
ANR	4706062	Argument	"""Directory::stat() failed for \\""%s\\"", errno: %d (%s)\\n"""		4705916	1					
ANR	4706063	PrimaryExpression	"""Directory::stat() failed for \\""%s\\"", errno: %d (%s)\\n"""		4705916	0					
ANR	4706064	Argument	path . Value ( )		4705916	2					
ANR	4706065	CallExpression	path . Value ( )		4705916	0					
ANR	4706066	Callee	path . Value		4705916	0					
ANR	4706067	MemberAccess	path . Value		4705916	0					
ANR	4706068	Identifier	path		4705916	0					
ANR	4706069	Identifier	Value		4705916	1					
ANR	4706070	ArgumentList			4705916	1					
ANR	4706071	Argument	curr -> Errno ( )		4705916	3					
ANR	4706072	CallExpression	curr -> Errno ( )		4705916	0					
ANR	4706073	Callee	curr -> Errno		4705916	0					
ANR	4706074	PtrMemberAccess	curr -> Errno		4705916	0					
ANR	4706075	Identifier	curr		4705916	0					
ANR	4706076	Identifier	Errno		4705916	1					
ANR	4706077	ArgumentList			4705916	1					
ANR	4706078	Argument	strerror ( curr -> Errno ( ) )		4705916	4					
ANR	4706079	CallExpression	strerror ( curr -> Errno ( ) )		4705916	0					
ANR	4706080	Callee	strerror		4705916	0					
ANR	4706081	Identifier	strerror		4705916	0					
ANR	4706082	ArgumentList	curr -> Errno ( )		4705916	1					
ANR	4706083	Argument	curr -> Errno ( )		4705916	0					
ANR	4706084	CallExpression	curr -> Errno ( )		4705916	0					
ANR	4706085	Callee	curr -> Errno		4705916	0					
ANR	4706086	PtrMemberAccess	curr -> Errno		4705916	0					
ANR	4706087	Identifier	curr		4705916	0					
ANR	4706088	Identifier	Errno		4705916	1					
ANR	4706089	ArgumentList			4705916	1					
ANR	4706090	Statement	delete	833:4:21928:21933	4705916	7	True				
ANR	4706091	ExpressionStatement	curr	833:11:21935:21939	4705916	8	True				
ANR	4706092	Identifier	curr		4705916	0					
ANR	4706093	ExpressionStatement	curr = NULL	834:4:21945:21956	4705916	9	True				
ANR	4706094	AssignmentExpression	curr = NULL		4705916	0		=			
ANR	4706095	Identifier	curr		4705916	0					
ANR	4706096	Identifier	NULL		4705916	1					
ANR	4706097	BreakStatement	break ;	835:4:21962:21967	4705916	10	True				
ANR	4706098	Label	default :	836:3:21972:21979	4705916	11	True				
ANR	4706099	Identifier	default		4705916	0					
ANR	4706100	ExpressionStatement	done = true	838:4:22024:22035	4705916	12	True				
ANR	4706101	AssignmentExpression	done = true		4705916	0		=			
ANR	4706102	Identifier	done		4705916	0					
ANR	4706103	Identifier	true		4705916	1					
ANR	4706104	BreakStatement	break ;	839:4:22041:22046	4705916	13	True				
ANR	4706105	IfStatement	if ( curr )		4705916	7					
ANR	4706106	Condition	curr	875:5:22925:22928	4705916	0	True				
ANR	4706107	Identifier	curr		4705916	0					
ANR	4706108	CompoundStatement		81:12:1866:1866	4705916	1					
ANR	4706109	ExpressionStatement	return_and_resetpriv ( curr -> BaseName ( ) )	876:2:22936:22976	4705916	0	True				
ANR	4706110	CallExpression	return_and_resetpriv ( curr -> BaseName ( ) )		4705916	0					
ANR	4706111	Callee	return_and_resetpriv		4705916	0					
ANR	4706112	Identifier	return_and_resetpriv		4705916	0					
ANR	4706113	ArgumentList	curr -> BaseName ( )		4705916	1					
ANR	4706114	Argument	curr -> BaseName ( )		4705916	0					
ANR	4706115	CallExpression	curr -> BaseName ( )		4705916	0					
ANR	4706116	Callee	curr -> BaseName		4705916	0					
ANR	4706117	PtrMemberAccess	curr -> BaseName		4705916	0					
ANR	4706118	Identifier	curr		4705916	0					
ANR	4706119	Identifier	BaseName		4705916	1					
ANR	4706120	ArgumentList			4705916	1					
ANR	4706121	ElseStatement	else		4705916	0					
ANR	4706122	CompoundStatement		83:8:1922:1922	4705916	0					
ANR	4706123	ExpressionStatement	return_and_resetpriv ( NULL )	878:2:22992:23020	4705916	0	True				
ANR	4706124	CallExpression	return_and_resetpriv ( NULL )		4705916	0					
ANR	4706125	Callee	return_and_resetpriv		4705916	0					
ANR	4706126	Identifier	return_and_resetpriv		4705916	0					
ANR	4706127	ArgumentList	NULL		4705916	1					
ANR	4706128	Argument	NULL		4705916	0					
ANR	4706129	Identifier	NULL		4705916	0					
ANR	4706130	ReturnType	const char *		4705916	1					
ANR	4706131	Identifier	Directory :: Next		4705916	2					
ANR	4706132	ParameterList			4705916	3					
ANR	4706133	CFGEntryNode	ENTRY		4705916		True				
ANR	4706134	CFGExitNode	EXIT		4705916		True				
ANR	4706135	Symbol	strcmp		4705916						
ANR	4706136	Symbol	NULL		4705916						
ANR	4706137	Symbol	DIR_DELIM_CHAR		4705916						
ANR	4706138	Symbol	false		4705916						
ANR	4706139	Symbol	curr_dir		4705916						
ANR	4706140	Symbol	D_FULLDEBUG		4705916						
ANR	4706141	Symbol	dirp		4705916						
ANR	4706142	Symbol	done		4705916						
ANR	4706143	Symbol	curr -> Error		4705916						
ANR	4706144	Symbol	* dirent		4705916						
ANR	4706145	Symbol	dirent -> d_name		4705916						
ANR	4706146	Symbol	curr -> Errno		4705916						
ANR	4706147	Symbol	strerror		4705916						
ANR	4706148	Symbol	path		4705916						
ANR	4706149	Symbol	* curr		4705916						
ANR	4706150	Symbol	true		4705916						
ANR	4706151	Symbol	path . Value		4705916						
ANR	4706152	Symbol	curr -> BaseName		4705916						
ANR	4706153	Symbol	condor_readdir		4705916						
ANR	4706154	Symbol	curr		4705916						
ANR	4706155	Symbol	MATCH		4705916						
ANR	4706156	Symbol	dirent		4705916						
ANR	4706157	Function	Directory :: Recursive_Chown	883:0:23029:23168							
ANR	4706158	FunctionDef	"Directory :: Recursive_Chown (const char * username , const char * domain)"		4706157	0					
ANR	4706159	CompoundStatement		884:69:23103:23168	4706157	0					
ANR	4706160	ReturnStatement	"return recursive_chown ( GetDirectoryPath ( ) , username , domain ) ;"	885:1:23106:23166	4706157	0	True				
ANR	4706161	CallExpression	"recursive_chown ( GetDirectoryPath ( ) , username , domain )"		4706157	0					
ANR	4706162	Callee	recursive_chown		4706157	0					
ANR	4706163	Identifier	recursive_chown		4706157	0					
ANR	4706164	ArgumentList	GetDirectoryPath ( )		4706157	1					
ANR	4706165	Argument	GetDirectoryPath ( )		4706157	0					
ANR	4706166	CallExpression	GetDirectoryPath ( )		4706157	0					
ANR	4706167	Callee	GetDirectoryPath		4706157	0					
ANR	4706168	Identifier	GetDirectoryPath		4706157	0					
ANR	4706169	ArgumentList			4706157	1					
ANR	4706170	Argument	username		4706157	1					
ANR	4706171	Identifier	username		4706157	0					
ANR	4706172	Argument	domain		4706157	2					
ANR	4706173	Identifier	domain		4706157	0					
ANR	4706174	ReturnType	bool		4706157	1					
ANR	4706175	Identifier	Directory :: Recursive_Chown		4706157	2					
ANR	4706176	ParameterList	"const char * username , const char * domain"		4706157	3					
ANR	4706177	Parameter	const char * username	884:27:23061:23080	4706157	0	True				
ANR	4706178	ParameterType	const char *		4706157	0					
ANR	4706179	Identifier	username		4706157	1					
ANR	4706180	Parameter	const char * domain	884:49:23083:23100	4706157	1	True				
ANR	4706181	ParameterType	const char *		4706157	0					
ANR	4706182	Identifier	domain		4706157	1					
ANR	4706183	CFGEntryNode	ENTRY		4706157		True				
ANR	4706184	CFGExitNode	EXIT		4706157		True				
ANR	4706185	Symbol	GetDirectoryPath		4706157						
ANR	4706186	Symbol	domain		4706157						
ANR	4706187	Symbol	recursive_chown		4706157						
ANR	4706188	Symbol	username		4706157						
ANR	4706189	Function	recursive_chown	893:0:23316:23910							
ANR	4706190	FunctionDef	"recursive_chown (const char * path , const char * username , const char * domain)"		4706189	0					
ANR	4706191	CompoundStatement		894:76:23398:23910	4706189	0					
ANR	4706192	IdentifierDeclStatement	perm po ;	902:1:23693:23700	4706189	0	True				
ANR	4706193	IdentifierDecl	po		4706189	0					
ANR	4706194	IdentifierDeclType	perm		4706189	0					
ANR	4706195	Identifier	po		4706189	1					
ANR	4706196	IfStatement	"if ( ! po . init ( username , domain ) )"		4706189	1					
ANR	4706197	Condition	"! po . init ( username , domain )"	904:6:23709:23735	4706189	0	True				
ANR	4706198	UnaryOperationExpression	"! po . init ( username , domain )"		4706189	0					
ANR	4706199	UnaryOperator	!		4706189	0					
ANR	4706200	CallExpression	"po . init ( username , domain )"		4706189	1					
ANR	4706201	Callee	po . init		4706189	0					
ANR	4706202	MemberAccess	po . init		4706189	0					
ANR	4706203	Identifier	po		4706189	0					
ANR	4706204	Identifier	init		4706189	1					
ANR	4706205	ArgumentList	username		4706189	1					
ANR	4706206	Argument	username		4706189	0					
ANR	4706207	Identifier	username		4706189	0					
ANR	4706208	Argument	domain		4706189	1					
ANR	4706209	Identifier	domain		4706189	0					
ANR	4706210	CompoundStatement		11:36:340:340	4706189	1					
ANR	4706211	Statement	dprintf	906:2:23744:23750	4706189	0	True				
ANR	4706212	Statement	(	906:9:23751:23751	4706189	1	True				
ANR	4706213	Statement	D_ALWAYS	906:10:23752:23759	4706189	2	True				
ANR	4706214	Statement	","	906:18:23760:23760	4706189	3	True				
ANR	4706215	Statement	"""recursive_chown() failed because the perm object """	906:20:23762:23812	4706189	4	True				
ANR	4706216	Statement	"""failed to initialize.\\n"""	907:4:23818:23842	4706189	5	True				
ANR	4706217	Statement	)	907:29:23843:23843	4706189	6	True				
ANR	4706218	ExpressionStatement		907:30:23844:23844	4706189	7	True				
ANR	4706219	ReturnStatement	return false ;	908:2:23848:23860	4706189	8	True				
ANR	4706220	Identifier	false		4706189	0					
ANR	4706221	ReturnStatement	"return recursive_chown_win32 ( path , & po ) ;"	911:1:23868:23907	4706189	2	True				
ANR	4706222	CallExpression	"recursive_chown_win32 ( path , & po )"		4706189	0					
ANR	4706223	Callee	recursive_chown_win32		4706189	0					
ANR	4706224	Identifier	recursive_chown_win32		4706189	0					
ANR	4706225	ArgumentList	path		4706189	1					
ANR	4706226	Argument	path		4706189	0					
ANR	4706227	Identifier	path		4706189	0					
ANR	4706228	Argument	& po		4706189	1					
ANR	4706229	UnaryOperationExpression	& po		4706189	0					
ANR	4706230	UnaryOperator	&		4706189	0					
ANR	4706231	Identifier	po		4706189	1					
ANR	4706232	ReturnType	bool		4706189	1					
ANR	4706233	Identifier	recursive_chown		4706189	2					
ANR	4706234	ParameterList	"const char * path , const char * username , const char * domain"		4706189	3					
ANR	4706235	Parameter	const char * path	894:16:23338:23353	4706189	0	True				
ANR	4706236	ParameterType	const char *		4706189	0					
ANR	4706237	Identifier	path		4706189	1					
ANR	4706238	Parameter	const char * username	894:34:23356:23375	4706189	1	True				
ANR	4706239	ParameterType	const char *		4706189	0					
ANR	4706240	Identifier	username		4706189	1					
ANR	4706241	Parameter	const char * domain	894:56:23378:23395	4706189	2	True				
ANR	4706242	ParameterType	const char *		4706189	0					
ANR	4706243	Identifier	domain		4706189	1					
ANR	4706244	CFGEntryNode	ENTRY		4706189		True				
ANR	4706245	CFGExitNode	EXIT		4706189		True				
ANR	4706246	Symbol	path		4706189						
ANR	4706247	Symbol	recursive_chown_win32		4706189						
ANR	4706248	Symbol	domain		4706189						
ANR	4706249	Symbol	false		4706189						
ANR	4706250	Symbol	& po		4706189						
ANR	4706251	Symbol	po . init		4706189						
ANR	4706252	Symbol	username		4706189						
ANR	4706253	Symbol	po		4706189						
ANR	4706254	Function	recursive_chown_win32	929:0:24185:25382							
ANR	4706255	FunctionDef	"recursive_chown_win32 (const char * path , perm * po)"		4706254	0					
ANR	4706256	CompoundStatement		930:51:24242:25382	4706254	0					
ANR	4706257	IdentifierDeclStatement	bool result = true ;	932:1:24246:24264	4706254	0	True				
ANR	4706258	IdentifierDecl	result = true		4706254	0					
ANR	4706259	IdentifierDeclType	bool		4706254	0					
ANR	4706260	Identifier	result		4706254	1					
ANR	4706261	AssignmentExpression	result = true		4706254	2		=			
ANR	4706262	Identifier	true		4706254	0					
ANR	4706263	Identifier	true		4706254	1					
ANR	4706264	IfStatement	if ( ! po -> set_acls ( path ) )		4706254	1					
ANR	4706265	Condition	! po -> set_acls ( path )	941:6:24469:24488	4706254	0	True				
ANR	4706266	UnaryOperationExpression	! po -> set_acls ( path )		4706254	0					
ANR	4706267	UnaryOperator	!		4706254	0					
ANR	4706268	CallExpression	po -> set_acls ( path )		4706254	1					
ANR	4706269	Callee	po -> set_acls		4706254	0					
ANR	4706270	PtrMemberAccess	po -> set_acls		4706254	0					
ANR	4706271	Identifier	po		4706254	0					
ANR	4706272	Identifier	set_acls		4706254	1					
ANR	4706273	ArgumentList	path		4706254	1					
ANR	4706274	Argument	path		4706254	0					
ANR	4706275	Identifier	path		4706254	0					
ANR	4706276	CompoundStatement		12:29:249:249	4706254	1					
ANR	4706277	IfStatement	if ( ! po -> set_owner ( path ) )		4706254	0					
ANR	4706278	Condition	! po -> set_owner ( path )	944:7:24557:24577	4706254	0	True				
ANR	4706279	UnaryOperationExpression	! po -> set_owner ( path )		4706254	0					
ANR	4706280	UnaryOperator	!		4706254	0					
ANR	4706281	CallExpression	po -> set_owner ( path )		4706254	1					
ANR	4706282	Callee	po -> set_owner		4706254	0					
ANR	4706283	PtrMemberAccess	po -> set_owner		4706254	0					
ANR	4706284	Identifier	po		4706254	0					
ANR	4706285	Identifier	set_owner		4706254	1					
ANR	4706286	ArgumentList	path		4706254	1					
ANR	4706287	Argument	path		4706254	0					
ANR	4706288	Identifier	path		4706254	0					
ANR	4706289	CompoundStatement		15:31:338:338	4706254	1					
ANR	4706290	Statement	dprintf	945:3:24586:24592	4706254	0	True				
ANR	4706291	Statement	(	945:10:24593:24593	4706254	1	True				
ANR	4706292	Statement	D_FULLDEBUG	945:11:24594:24604	4706254	2	True				
ANR	4706293	Statement	","	945:22:24605:24605	4706254	3	True				
ANR	4706294	Statement	"""perm obj failed to set ACLs and change owner"""	945:24:24607:24652	4706254	4	True				
ANR	4706295	Statement	""" on %s\\n"""	946:7:24661:24670	4706254	5	True				
ANR	4706296	Statement	","	946:17:24671:24671	4706254	6	True				
ANR	4706297	Statement	path	946:19:24673:24676	4706254	7	True				
ANR	4706298	Statement	)	946:23:24677:24677	4706254	8	True				
ANR	4706299	ExpressionStatement		946:24:24678:24678	4706254	9	True				
ANR	4706300	ExpressionStatement	result = false	947:3:24683:24697	4706254	10	True				
ANR	4706301	AssignmentExpression	result = false		4706254	0		=			
ANR	4706302	Identifier	result		4706254	0					
ANR	4706303	Identifier	false		4706254	1					
ANR	4706304	ElseStatement	else		4706254	0					
ANR	4706305	CompoundStatement		19:9:465:465	4706254	0					
ANR	4706306	IfStatement	if ( ! po -> set_acls ( path ) )		4706254	0					
ANR	4706307	Condition	! po -> set_acls ( path )	951:8:24819:24838	4706254	0	True				
ANR	4706308	UnaryOperationExpression	! po -> set_acls ( path )		4706254	0					
ANR	4706309	UnaryOperator	!		4706254	0					
ANR	4706310	CallExpression	po -> set_acls ( path )		4706254	1					
ANR	4706311	Callee	po -> set_acls		4706254	0					
ANR	4706312	PtrMemberAccess	po -> set_acls		4706254	0					
ANR	4706313	Identifier	po		4706254	0					
ANR	4706314	Identifier	set_acls		4706254	1					
ANR	4706315	ArgumentList	path		4706254	1					
ANR	4706316	Argument	path		4706254	0					
ANR	4706317	Identifier	path		4706254	0					
ANR	4706318	CompoundStatement		22:31:599:599	4706254	1					
ANR	4706319	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""perm obj failed to set ACLs on %s\\n"" , path )"	952:4:24848:24922	4706254	0	True				
ANR	4706320	CallExpression	"dprintf ( D_FULLDEBUG , ""perm obj failed to set ACLs on %s\\n"" , path )"		4706254	0					
ANR	4706321	Callee	dprintf		4706254	0					
ANR	4706322	Identifier	dprintf		4706254	0					
ANR	4706323	ArgumentList	D_FULLDEBUG		4706254	1					
ANR	4706324	Argument	D_FULLDEBUG		4706254	0					
ANR	4706325	Identifier	D_FULLDEBUG		4706254	0					
ANR	4706326	Argument	"""perm obj failed to set ACLs on %s\\n"""		4706254	1					
ANR	4706327	PrimaryExpression	"""perm obj failed to set ACLs on %s\\n"""		4706254	0					
ANR	4706328	Argument	path		4706254	2					
ANR	4706329	Identifier	path		4706254	0					
ANR	4706330	ExpressionStatement	result = false	954:4:24928:24942	4706254	1	True				
ANR	4706331	AssignmentExpression	result = false		4706254	0		=			
ANR	4706332	Identifier	result		4706254	0					
ANR	4706333	Identifier	false		4706254	1					
ANR	4706334	IfStatement	if ( IsDirectory ( path ) )		4706254	2					
ANR	4706335	Condition	IsDirectory ( path )	962:5:25042:25058	4706254	0	True				
ANR	4706336	CallExpression	IsDirectory ( path )		4706254	0					
ANR	4706337	Callee	IsDirectory		4706254	0					
ANR	4706338	Identifier	IsDirectory		4706254	0					
ANR	4706339	ArgumentList	path		4706254	1					
ANR	4706340	Argument	path		4706254	0					
ANR	4706341	Identifier	path		4706254	0					
ANR	4706342	CompoundStatement		35:2:846:871	4706254	1					
ANR	4706343	IdentifierDeclStatement	Directory dir ( path ) ;	963:2:25066:25085	4706254	0	True				
ANR	4706344	IdentifierDecl	dir ( path )		4706254	0					
ANR	4706345	IdentifierDeclType	Directory		4706254	0					
ANR	4706346	Identifier	dir		4706254	1					
ANR	4706347	Identifier	path		4706254	2					
ANR	4706348	IdentifierDeclStatement	const char * filename = 0 ;	964:2:25089:25114	4706254	1	True				
ANR	4706349	IdentifierDecl	* filename = 0		4706254	0					
ANR	4706350	IdentifierDeclType	const char *		4706254	0					
ANR	4706351	Identifier	filename		4706254	1					
ANR	4706352	AssignmentExpression	* filename = 0		4706254	2		=			
ANR	4706353	Identifier	filename		4706254	0					
ANR	4706354	PrimaryExpression	0		4706254	1					
ANR	4706355	WhileStatement	while ( ( filename = dir . Next ( ) ) )		4706254	2					
ANR	4706356	Condition	filename = dir . Next ( )	965:9:25125:25147	4706254	0	True				
ANR	4706357	AssignmentExpression	filename = dir . Next ( )		4706254	0		=			
ANR	4706358	Identifier	filename		4706254	0					
ANR	4706359	CallExpression	dir . Next ( )		4706254	1					
ANR	4706360	Callee	dir . Next		4706254	0					
ANR	4706361	MemberAccess	dir . Next		4706254	0					
ANR	4706362	Identifier	dir		4706254	0					
ANR	4706363	Identifier	Next		4706254	1					
ANR	4706364	ArgumentList			4706254	1					
ANR	4706365	CompoundStatement		36:35:908:908	4706254	1					
ANR	4706366	ExpressionStatement	filename = dir . GetFullPath ( )	966:3:25156:25184	4706254	0	True				
ANR	4706367	AssignmentExpression	filename = dir . GetFullPath ( )		4706254	0		=			
ANR	4706368	Identifier	filename		4706254	0					
ANR	4706369	CallExpression	dir . GetFullPath ( )		4706254	1					
ANR	4706370	Callee	dir . GetFullPath		4706254	0					
ANR	4706371	MemberAccess	dir . GetFullPath		4706254	0					
ANR	4706372	Identifier	dir		4706254	0					
ANR	4706373	Identifier	GetFullPath		4706254	1					
ANR	4706374	ArgumentList			4706254	1					
ANR	4706375	IfStatement	"if ( ! recursive_chown_win32 ( filename , po ) )"		4706254	1					
ANR	4706376	Condition	"! recursive_chown_win32 ( filename , po )"	967:7:25193:25229	4706254	0	True				
ANR	4706377	UnaryOperationExpression	"! recursive_chown_win32 ( filename , po )"		4706254	0					
ANR	4706378	UnaryOperator	!		4706254	0					
ANR	4706379	CallExpression	"recursive_chown_win32 ( filename , po )"		4706254	1					
ANR	4706380	Callee	recursive_chown_win32		4706254	0					
ANR	4706381	Identifier	recursive_chown_win32		4706254	0					
ANR	4706382	ArgumentList	filename		4706254	1					
ANR	4706383	Argument	filename		4706254	0					
ANR	4706384	Identifier	filename		4706254	0					
ANR	4706385	Argument	po		4706254	1					
ANR	4706386	Identifier	po		4706254	0					
ANR	4706387	CompoundStatement		38:47:990:990	4706254	1					
ANR	4706388	Statement	dprintf	968:4:25239:25245	4706254	0	True				
ANR	4706389	Statement	(	968:11:25246:25246	4706254	1	True				
ANR	4706390	Statement	D_FULLDEBUG	968:12:25247:25257	4706254	2	True				
ANR	4706391	Statement	","	968:23:25258:25258	4706254	3	True				
ANR	4706392	Statement	"""recursive_chown() failed for %s; """	968:25:25260:25294	4706254	4	True				
ANR	4706393	Statement	"""iteration stopping.\\n"""	969:6:25302:25324	4706254	5	True				
ANR	4706394	Statement	","	969:29:25325:25325	4706254	6	True				
ANR	4706395	Statement	path	969:31:25327:25330	4706254	7	True				
ANR	4706396	Statement	)	969:35:25331:25331	4706254	8	True				
ANR	4706397	ExpressionStatement		969:36:25332:25332	4706254	9	True				
ANR	4706398	ReturnStatement	return false ;	970:4:25338:25350	4706254	10	True				
ANR	4706399	Identifier	false		4706254	0					
ANR	4706400	ReturnStatement	return result ;	976:1:25367:25380	4706254	3	True				
ANR	4706401	Identifier	result		4706254	0					
ANR	4706402	ReturnType	bool		4706254	1					
ANR	4706403	Identifier	recursive_chown_win32		4706254	2					
ANR	4706404	ParameterList	"const char * path , perm * po"		4706254	3					
ANR	4706405	Parameter	const char * path	930:22:24213:24229	4706254	0	True				
ANR	4706406	ParameterType	const char *		4706254	0					
ANR	4706407	Identifier	path		4706254	1					
ANR	4706408	Parameter	perm * po	930:41:24232:24239	4706254	1	True				
ANR	4706409	ParameterType	perm *		4706254	0					
ANR	4706410	Identifier	po		4706254	1					
ANR	4706411	CFGEntryNode	ENTRY		4706254		True				
ANR	4706412	CFGExitNode	EXIT		4706254		True				
ANR	4706413	Symbol	recursive_chown_win32		4706254						
ANR	4706414	Symbol	po -> set_owner		4706254						
ANR	4706415	Symbol	IsDirectory		4706254						
ANR	4706416	Symbol	* po		4706254						
ANR	4706417	Symbol	false		4706254						
ANR	4706418	Symbol	D_FULLDEBUG		4706254						
ANR	4706419	Symbol	dir		4706254						
ANR	4706420	Symbol	dir . Next		4706254						
ANR	4706421	Symbol	result		4706254						
ANR	4706422	Symbol	dir . GetFullPath		4706254						
ANR	4706423	Symbol	path		4706254						
ANR	4706424	Symbol	filename		4706254						
ANR	4706425	Symbol	true		4706254						
ANR	4706426	Symbol	po -> set_acls		4706254						
ANR	4706427	Symbol	po		4706254						
ANR	4706428	Function	IsDirectory	981:0:25393:26041							
ANR	4706429	FunctionDef	IsDirectory (const char * path)		4706428	0					
ANR	4706430	CompoundStatement		983:0:25431:26041	4706428	0					
ANR	4706431	IfStatement	if ( path == NULL )		4706428	0					
ANR	4706432	Condition	path == NULL	984:5:25438:25449	4706428	0	True				
ANR	4706433	EqualityExpression	path == NULL		4706428	0		==			
ANR	4706434	Identifier	path		4706428	0					
ANR	4706435	Identifier	NULL		4706428	1					
ANR	4706436	CompoundStatement		2:19:20:20	4706428	1					
ANR	4706437	ReturnStatement	return false ;	988:2:25636:25648	4706428	0	True				
ANR	4706438	Identifier	false		4706428	0					
ANR	4706439	IdentifierDeclStatement	StatInfo si ( path ) ;	991:1:25655:25674	4706428	1	True				
ANR	4706440	IdentifierDecl	si ( path )		4706428	0					
ANR	4706441	IdentifierDeclType	StatInfo		4706428	0					
ANR	4706442	Identifier	si		4706428	1					
ANR	4706443	Identifier	path		4706428	2					
ANR	4706444	SwitchStatement	switch ( si . Error ( ) )		4706428	2					
ANR	4706445	Condition	si . Error ( )	992:9:25685:25694	4706428	0	True				
ANR	4706446	CallExpression	si . Error ( )		4706428	0					
ANR	4706447	Callee	si . Error		4706428	0					
ANR	4706448	MemberAccess	si . Error		4706428	0					
ANR	4706449	Identifier	si		4706428	0					
ANR	4706450	Identifier	Error		4706428	1					
ANR	4706451	ArgumentList			4706428	1					
ANR	4706452	CompoundStatement		10:22:266:266	4706428	1					
ANR	4706453	Label	case SIGood :	993:1:25701:25712	4706428	0	True				
ANR	4706454	Identifier	SIGood		4706428	0					
ANR	4706455	ReturnStatement	return si . IsDirectory ( ) ;	994:2:25716:25739	4706428	1	True				
ANR	4706456	CallExpression	si . IsDirectory ( )		4706428	0					
ANR	4706457	Callee	si . IsDirectory		4706428	0					
ANR	4706458	MemberAccess	si . IsDirectory		4706428	0					
ANR	4706459	Identifier	si		4706428	0					
ANR	4706460	Identifier	IsDirectory		4706428	1					
ANR	4706461	ArgumentList			4706428	1					
ANR	4706462	BreakStatement	break ;	995:2:25743:25748	4706428	2	True				
ANR	4706463	Label	case SINoFile :	996:1:25751:25764	4706428	3	True				
ANR	4706464	Identifier	SINoFile		4706428	0					
ANR	4706465	ReturnStatement	return false ;	998:2:25796:25808	4706428	4	True				
ANR	4706466	Identifier	false		4706428	0					
ANR	4706467	BreakStatement	break ;	999:2:25812:25817	4706428	5	True				
ANR	4706468	Label	case SIFailure :	1000:1:25820:25834	4706428	6	True				
ANR	4706469	Identifier	SIFailure		4706428	0					
ANR	4706470	ExpressionStatement	"dprintf ( D_ALWAYS , ""IsDirectory: Error in stat(%s), errno: %d\\n"" , path , si . Errno ( ) )"	1001:2:25838:25928	4706428	7	True				
ANR	4706471	CallExpression	"dprintf ( D_ALWAYS , ""IsDirectory: Error in stat(%s), errno: %d\\n"" , path , si . Errno ( ) )"		4706428	0					
ANR	4706472	Callee	dprintf		4706428	0					
ANR	4706473	Identifier	dprintf		4706428	0					
ANR	4706474	ArgumentList	D_ALWAYS		4706428	1					
ANR	4706475	Argument	D_ALWAYS		4706428	0					
ANR	4706476	Identifier	D_ALWAYS		4706428	0					
ANR	4706477	Argument	"""IsDirectory: Error in stat(%s), errno: %d\\n"""		4706428	1					
ANR	4706478	PrimaryExpression	"""IsDirectory: Error in stat(%s), errno: %d\\n"""		4706428	0					
ANR	4706479	Argument	path		4706428	2					
ANR	4706480	Identifier	path		4706428	0					
ANR	4706481	Argument	si . Errno ( )		4706428	3					
ANR	4706482	CallExpression	si . Errno ( )		4706428	0					
ANR	4706483	Callee	si . Errno		4706428	0					
ANR	4706484	MemberAccess	si . Errno		4706428	0					
ANR	4706485	Identifier	si		4706428	0					
ANR	4706486	Identifier	Errno		4706428	1					
ANR	4706487	ArgumentList			4706428	1					
ANR	4706488	ReturnStatement	return false ;	1003:2:25932:25944	4706428	8	True				
ANR	4706489	Identifier	false		4706428	0					
ANR	4706490	BreakStatement	break ;	1004:2:25948:25953	4706428	9	True				
ANR	4706491	ExpressionStatement	"EXCEPT ( ""IsDirectory() unexpected error code"" )"	1007:1:25960:26005	4706428	3	True				
ANR	4706492	CallExpression	"EXCEPT ( ""IsDirectory() unexpected error code"" )"		4706428	0					
ANR	4706493	Callee	EXCEPT		4706428	0					
ANR	4706494	Identifier	EXCEPT		4706428	0					
ANR	4706495	ArgumentList	"""IsDirectory() unexpected error code"""		4706428	1					
ANR	4706496	Argument	"""IsDirectory() unexpected error code"""		4706428	0					
ANR	4706497	PrimaryExpression	"""IsDirectory() unexpected error code"""		4706428	0					
ANR	4706498	ReturnStatement	return false ;	1008:1:26027:26039	4706428	4	True				
ANR	4706499	Identifier	false		4706428	0					
ANR	4706500	ReturnType	bool		4706428	1					
ANR	4706501	Identifier	IsDirectory		4706428	2					
ANR	4706502	ParameterList	const char * path		4706428	3					
ANR	4706503	Parameter	const char * path	982:13:25412:25427	4706428	0	True				
ANR	4706504	ParameterType	const char *		4706428	0					
ANR	4706505	Identifier	path		4706428	1					
ANR	4706506	CFGEntryNode	ENTRY		4706428		True				
ANR	4706507	CFGExitNode	EXIT		4706428		True				
ANR	4706508	Symbol	path		4706428						
ANR	4706509	Symbol	si . IsDirectory		4706428						
ANR	4706510	Symbol	NULL		4706428						
ANR	4706511	Symbol	si		4706428						
ANR	4706512	Symbol	false		4706428						
ANR	4706513	Symbol	D_ALWAYS		4706428						
ANR	4706514	Symbol	si . Errno		4706428						
ANR	4706515	Symbol	si . Error		4706428						
ANR	4706516	Function	IsSymlink	1011:0:26044:26682							
ANR	4706517	FunctionDef	IsSymlink (const char * path)		4706516	0					
ANR	4706518	CompoundStatement		1013:0:26080:26682	4706516	0					
ANR	4706519	IfStatement	if ( path == NULL )		4706516	0					
ANR	4706520	Condition	path == NULL	1014:5:26087:26098	4706516	0	True				
ANR	4706521	EqualityExpression	path == NULL		4706516	0		==			
ANR	4706522	Identifier	path		4706516	0					
ANR	4706523	Identifier	NULL		4706516	1					
ANR	4706524	CompoundStatement		2:19:20:20	4706516	1					
ANR	4706525	ReturnStatement	return false ;	1018:2:26283:26295	4706516	0	True				
ANR	4706526	Identifier	false		4706516	0					
ANR	4706527	IdentifierDeclStatement	StatInfo si ( path ) ;	1021:1:26302:26321	4706516	1	True				
ANR	4706528	IdentifierDecl	si ( path )		4706516	0					
ANR	4706529	IdentifierDeclType	StatInfo		4706516	0					
ANR	4706530	Identifier	si		4706516	1					
ANR	4706531	Identifier	path		4706516	2					
ANR	4706532	SwitchStatement	switch ( si . Error ( ) )		4706516	2					
ANR	4706533	Condition	si . Error ( )	1022:9:26332:26341	4706516	0	True				
ANR	4706534	CallExpression	si . Error ( )		4706516	0					
ANR	4706535	Callee	si . Error		4706516	0					
ANR	4706536	MemberAccess	si . Error		4706516	0					
ANR	4706537	Identifier	si		4706516	0					
ANR	4706538	Identifier	Error		4706516	1					
ANR	4706539	ArgumentList			4706516	1					
ANR	4706540	CompoundStatement		10:22:264:264	4706516	1					
ANR	4706541	Label	case SIGood :	1023:1:26348:26359	4706516	0	True				
ANR	4706542	Identifier	SIGood		4706516	0					
ANR	4706543	ReturnStatement	return si . IsSymlink ( ) ;	1024:2:26363:26384	4706516	1	True				
ANR	4706544	CallExpression	si . IsSymlink ( )		4706516	0					
ANR	4706545	Callee	si . IsSymlink		4706516	0					
ANR	4706546	MemberAccess	si . IsSymlink		4706516	0					
ANR	4706547	Identifier	si		4706516	0					
ANR	4706548	Identifier	IsSymlink		4706516	1					
ANR	4706549	ArgumentList			4706516	1					
ANR	4706550	BreakStatement	break ;	1025:2:26388:26393	4706516	2	True				
ANR	4706551	Label	case SINoFile :	1026:1:26396:26409	4706516	3	True				
ANR	4706552	Identifier	SINoFile		4706516	0					
ANR	4706553	ReturnStatement	return false ;	1028:2:26441:26453	4706516	4	True				
ANR	4706554	Identifier	false		4706516	0					
ANR	4706555	BreakStatement	break ;	1029:2:26457:26462	4706516	5	True				
ANR	4706556	Label	case SIFailure :	1030:1:26465:26479	4706516	6	True				
ANR	4706557	Identifier	SIFailure		4706516	0					
ANR	4706558	ExpressionStatement	"dprintf ( D_ALWAYS , ""IsSymlink: Error in stat(%s), errno: %d\\n"" , path , si . Errno ( ) )"	1031:2:26483:26571	4706516	7	True				
ANR	4706559	CallExpression	"dprintf ( D_ALWAYS , ""IsSymlink: Error in stat(%s), errno: %d\\n"" , path , si . Errno ( ) )"		4706516	0					
ANR	4706560	Callee	dprintf		4706516	0					
ANR	4706561	Identifier	dprintf		4706516	0					
ANR	4706562	ArgumentList	D_ALWAYS		4706516	1					
ANR	4706563	Argument	D_ALWAYS		4706516	0					
ANR	4706564	Identifier	D_ALWAYS		4706516	0					
ANR	4706565	Argument	"""IsSymlink: Error in stat(%s), errno: %d\\n"""		4706516	1					
ANR	4706566	PrimaryExpression	"""IsSymlink: Error in stat(%s), errno: %d\\n"""		4706516	0					
ANR	4706567	Argument	path		4706516	2					
ANR	4706568	Identifier	path		4706516	0					
ANR	4706569	Argument	si . Errno ( )		4706516	3					
ANR	4706570	CallExpression	si . Errno ( )		4706516	0					
ANR	4706571	Callee	si . Errno		4706516	0					
ANR	4706572	MemberAccess	si . Errno		4706516	0					
ANR	4706573	Identifier	si		4706516	0					
ANR	4706574	Identifier	Errno		4706516	1					
ANR	4706575	ArgumentList			4706516	1					
ANR	4706576	ReturnStatement	return false ;	1033:2:26575:26587	4706516	8	True				
ANR	4706577	Identifier	false		4706516	0					
ANR	4706578	BreakStatement	break ;	1034:2:26591:26596	4706516	9	True				
ANR	4706579	ExpressionStatement	"EXCEPT ( ""IsSymlink() unexpected error code"" )"	1037:1:26603:26646	4706516	3	True				
ANR	4706580	CallExpression	"EXCEPT ( ""IsSymlink() unexpected error code"" )"		4706516	0					
ANR	4706581	Callee	EXCEPT		4706516	0					
ANR	4706582	Identifier	EXCEPT		4706516	0					
ANR	4706583	ArgumentList	"""IsSymlink() unexpected error code"""		4706516	1					
ANR	4706584	Argument	"""IsSymlink() unexpected error code"""		4706516	0					
ANR	4706585	PrimaryExpression	"""IsSymlink() unexpected error code"""		4706516	0					
ANR	4706586	ReturnStatement	return false ;	1038:1:26668:26680	4706516	4	True				
ANR	4706587	Identifier	false		4706516	0					
ANR	4706588	ReturnType	bool		4706516	1					
ANR	4706589	Identifier	IsSymlink		4706516	2					
ANR	4706590	ParameterList	const char * path		4706516	3					
ANR	4706591	Parameter	const char * path	1012:11:26061:26076	4706516	0	True				
ANR	4706592	ParameterType	const char *		4706516	0					
ANR	4706593	Identifier	path		4706516	1					
ANR	4706594	CFGEntryNode	ENTRY		4706516		True				
ANR	4706595	CFGExitNode	EXIT		4706516		True				
ANR	4706596	Symbol	path		4706516						
ANR	4706597	Symbol	NULL		4706516						
ANR	4706598	Symbol	si		4706516						
ANR	4706599	Symbol	false		4706516						
ANR	4706600	Symbol	D_ALWAYS		4706516						
ANR	4706601	Symbol	si . Errno		4706516						
ANR	4706602	Symbol	si . Error		4706516						
ANR	4706603	Symbol	si . IsSymlink		4706516						
ANR	4706604	Function	GetIds	1043:0:26700:27252							
ANR	4706605	FunctionDef	"GetIds (const char * path , uid_t * owner , gid_t * group , si_error_t & err)"		4706604	0					
ANR	4706606	CompoundStatement		1045:0:26785:27252	4706604	0					
ANR	4706607	IdentifierDeclStatement	StatInfo si ( path ) ;	1046:1:26788:26807	4706604	0	True				
ANR	4706608	IdentifierDecl	si ( path )		4706604	0					
ANR	4706609	IdentifierDeclType	StatInfo		4706604	0					
ANR	4706610	Identifier	si		4706604	1					
ANR	4706611	Identifier	path		4706604	2					
ANR	4706612	ExpressionStatement	err = si . Error ( )	1047:1:26810:26826	4706604	1	True				
ANR	4706613	AssignmentExpression	err = si . Error ( )		4706604	0		=			
ANR	4706614	Identifier	err		4706604	0					
ANR	4706615	CallExpression	si . Error ( )		4706604	1					
ANR	4706616	Callee	si . Error		4706604	0					
ANR	4706617	MemberAccess	si . Error		4706604	0					
ANR	4706618	Identifier	si		4706604	0					
ANR	4706619	Identifier	Error		4706604	1					
ANR	4706620	ArgumentList			4706604	1					
ANR	4706621	SwitchStatement	switch ( si . Error ( ) )		4706604	2					
ANR	4706622	Condition	si . Error ( )	1048:9:26837:26846	4706604	0	True				
ANR	4706623	CallExpression	si . Error ( )		4706604	0					
ANR	4706624	Callee	si . Error		4706604	0					
ANR	4706625	MemberAccess	si . Error		4706604	0					
ANR	4706626	Identifier	si		4706604	0					
ANR	4706627	Identifier	Error		4706604	1					
ANR	4706628	ArgumentList			4706604	1					
ANR	4706629	CompoundStatement		4:22:64:64	4706604	1					
ANR	4706630	Label	case SIGood :	1049:1:26853:26864	4706604	0	True				
ANR	4706631	Identifier	SIGood		4706604	0					
ANR	4706632	ExpressionStatement	* owner = si . GetOwner ( )	1050:2:26868:26891	4706604	1	True				
ANR	4706633	AssignmentExpression	* owner = si . GetOwner ( )		4706604	0		=			
ANR	4706634	UnaryOperationExpression	* owner		4706604	0					
ANR	4706635	UnaryOperator	*		4706604	0					
ANR	4706636	Identifier	owner		4706604	1					
ANR	4706637	CallExpression	si . GetOwner ( )		4706604	1					
ANR	4706638	Callee	si . GetOwner		4706604	0					
ANR	4706639	MemberAccess	si . GetOwner		4706604	0					
ANR	4706640	Identifier	si		4706604	0					
ANR	4706641	Identifier	GetOwner		4706604	1					
ANR	4706642	ArgumentList			4706604	1					
ANR	4706643	ExpressionStatement	* group = si . GetGroup ( )	1051:2:26895:26918	4706604	2	True				
ANR	4706644	AssignmentExpression	* group = si . GetGroup ( )		4706604	0		=			
ANR	4706645	UnaryOperationExpression	* group		4706604	0					
ANR	4706646	UnaryOperator	*		4706604	0					
ANR	4706647	Identifier	group		4706604	1					
ANR	4706648	CallExpression	si . GetGroup ( )		4706604	1					
ANR	4706649	Callee	si . GetGroup		4706604	0					
ANR	4706650	MemberAccess	si . GetGroup		4706604	0					
ANR	4706651	Identifier	si		4706604	0					
ANR	4706652	Identifier	GetGroup		4706604	1					
ANR	4706653	ArgumentList			4706604	1					
ANR	4706654	ReturnStatement	return true ;	1052:2:26922:26933	4706604	3	True				
ANR	4706655	Identifier	true		4706604	0					
ANR	4706656	BreakStatement	break ;	1053:2:26937:26942	4706604	4	True				
ANR	4706657	Label	case SINoFile :	1054:1:26945:26958	4706604	5	True				
ANR	4706658	Identifier	SINoFile		4706604	0					
ANR	4706659	ReturnStatement	return false ;	1056:2:26990:27002	4706604	6	True				
ANR	4706660	Identifier	false		4706604	0					
ANR	4706661	BreakStatement	break ;	1057:2:27006:27011	4706604	7	True				
ANR	4706662	Label	case SIFailure :	1058:1:27014:27028	4706604	8	True				
ANR	4706663	Identifier	SIFailure		4706604	0					
ANR	4706664	ExpressionStatement	"dprintf ( D_ALWAYS , ""GetIds: Error in stat(%s), errno: %d (%s)\\n"" , path , si . Errno ( ) , strerror ( si . Errno ( ) ) )"	1059:2:27032:27144	4706604	9	True				
ANR	4706665	CallExpression	"dprintf ( D_ALWAYS , ""GetIds: Error in stat(%s), errno: %d (%s)\\n"" , path , si . Errno ( ) , strerror ( si . Errno ( ) ) )"		4706604	0					
ANR	4706666	Callee	dprintf		4706604	0					
ANR	4706667	Identifier	dprintf		4706604	0					
ANR	4706668	ArgumentList	D_ALWAYS		4706604	1					
ANR	4706669	Argument	D_ALWAYS		4706604	0					
ANR	4706670	Identifier	D_ALWAYS		4706604	0					
ANR	4706671	Argument	"""GetIds: Error in stat(%s), errno: %d (%s)\\n"""		4706604	1					
ANR	4706672	PrimaryExpression	"""GetIds: Error in stat(%s), errno: %d (%s)\\n"""		4706604	0					
ANR	4706673	Argument	path		4706604	2					
ANR	4706674	Identifier	path		4706604	0					
ANR	4706675	Argument	si . Errno ( )		4706604	3					
ANR	4706676	CallExpression	si . Errno ( )		4706604	0					
ANR	4706677	Callee	si . Errno		4706604	0					
ANR	4706678	MemberAccess	si . Errno		4706604	0					
ANR	4706679	Identifier	si		4706604	0					
ANR	4706680	Identifier	Errno		4706604	1					
ANR	4706681	ArgumentList			4706604	1					
ANR	4706682	Argument	strerror ( si . Errno ( ) )		4706604	4					
ANR	4706683	CallExpression	strerror ( si . Errno ( ) )		4706604	0					
ANR	4706684	Callee	strerror		4706604	0					
ANR	4706685	Identifier	strerror		4706604	0					
ANR	4706686	ArgumentList	si . Errno ( )		4706604	1					
ANR	4706687	Argument	si . Errno ( )		4706604	0					
ANR	4706688	CallExpression	si . Errno ( )		4706604	0					
ANR	4706689	Callee	si . Errno		4706604	0					
ANR	4706690	MemberAccess	si . Errno		4706604	0					
ANR	4706691	Identifier	si		4706604	0					
ANR	4706692	Identifier	Errno		4706604	1					
ANR	4706693	ArgumentList			4706604	1					
ANR	4706694	ReturnStatement	return false ;	1061:2:27148:27160	4706604	10	True				
ANR	4706695	Identifier	false		4706604	0					
ANR	4706696	BreakStatement	break ;	1062:2:27164:27169	4706604	11	True				
ANR	4706697	ExpressionStatement	"EXCEPT ( ""GetIds() unexpected error code"" )"	1065:1:27176:27216	4706604	3	True				
ANR	4706698	CallExpression	"EXCEPT ( ""GetIds() unexpected error code"" )"		4706604	0					
ANR	4706699	Callee	EXCEPT		4706604	0					
ANR	4706700	Identifier	EXCEPT		4706604	0					
ANR	4706701	ArgumentList	"""GetIds() unexpected error code"""		4706604	1					
ANR	4706702	Argument	"""GetIds() unexpected error code"""		4706604	0					
ANR	4706703	PrimaryExpression	"""GetIds() unexpected error code"""		4706604	0					
ANR	4706704	ReturnStatement	return false ;	1066:1:27238:27250	4706604	4	True				
ANR	4706705	Identifier	false		4706604	0					
ANR	4706706	ReturnType	static bool		4706604	1					
ANR	4706707	Identifier	GetIds		4706604	2					
ANR	4706708	ParameterList	"const char * path , uid_t * owner , gid_t * group , si_error_t & err"		4706604	3					
ANR	4706709	Parameter	const char * path	1044:8:26721:26736	4706604	0	True				
ANR	4706710	ParameterType	const char *		4706604	0					
ANR	4706711	Identifier	path		4706604	1					
ANR	4706712	Parameter	uid_t * owner	1044:26:26739:26750	4706604	1	True				
ANR	4706713	ParameterType	uid_t *		4706604	0					
ANR	4706714	Identifier	owner		4706604	1					
ANR	4706715	Parameter	gid_t * group	1044:40:26753:26764	4706604	2	True				
ANR	4706716	ParameterType	gid_t *		4706604	0					
ANR	4706717	Identifier	group		4706604	1					
ANR	4706718	Parameter	si_error_t & err	1044:54:26767:26781	4706604	3	True				
ANR	4706719	ParameterType	si_error_t &		4706604	0					
ANR	4706720	Identifier	err		4706604	1					
ANR	4706721	CFGEntryNode	ENTRY		4706604		True				
ANR	4706722	CFGExitNode	EXIT		4706604		True				
ANR	4706723	Symbol	owner		4706604						
ANR	4706724	Symbol	si . GetOwner		4706604						
ANR	4706725	Symbol	err		4706604						
ANR	4706726	Symbol	* group		4706604						
ANR	4706727	Symbol	false		4706604						
ANR	4706728	Symbol	D_ALWAYS		4706604						
ANR	4706729	Symbol	* owner		4706604						
ANR	4706730	Symbol	si . GetGroup		4706604						
ANR	4706731	Symbol	strerror		4706604						
ANR	4706732	Symbol	path		4706604						
ANR	4706733	Symbol	si		4706604						
ANR	4706734	Symbol	true		4706604						
ANR	4706735	Symbol	si . Errno		4706604						
ANR	4706736	Symbol	si . Error		4706604						
ANR	4706737	Symbol	group		4706604						
ANR	4706738	Function	create_temp_file	1079:0:27506:28360							
ANR	4706739	FunctionDef	create_temp_file (bool create_as_subdirectory)		4706738	0					
ANR	4706740	CompoundStatement		1080:46:27560:28360	4706738	0					
ANR	4706741	IdentifierDeclStatement	char * temp_dir = temp_dir_path ( ) ;	1081:1:27563:27596	4706738	0	True				
ANR	4706742	IdentifierDecl	* temp_dir = temp_dir_path ( )		4706738	0					
ANR	4706743	IdentifierDeclType	char *		4706738	0					
ANR	4706744	Identifier	temp_dir		4706738	1					
ANR	4706745	AssignmentExpression	* temp_dir = temp_dir_path ( )		4706738	2		=			
ANR	4706746	Identifier	temp_dir		4706738	0					
ANR	4706747	CallExpression	temp_dir_path ( )		4706738	1					
ANR	4706748	Callee	temp_dir_path		4706738	0					
ANR	4706749	Identifier	temp_dir_path		4706738	0					
ANR	4706750	ArgumentList			4706738	1					
ANR	4706751	IdentifierDeclStatement	char * filename = ( char * ) ( malloc ( 500 ) ) ;	1082:1:27599:27638	4706738	1	True				
ANR	4706752	IdentifierDecl	* filename = ( char * ) ( malloc ( 500 ) )		4706738	0					
ANR	4706753	IdentifierDeclType	char *		4706738	0					
ANR	4706754	Identifier	filename		4706738	1					
ANR	4706755	AssignmentExpression	* filename = ( char * ) ( malloc ( 500 ) )		4706738	2		=			
ANR	4706756	Identifier	filename		4706738	0					
ANR	4706757	CastExpression	( char * ) ( malloc ( 500 ) )		4706738	1					
ANR	4706758	CastTarget	char *		4706738	0					
ANR	4706759	CallExpression	malloc ( 500 )		4706738	1					
ANR	4706760	Callee	malloc		4706738	0					
ANR	4706761	Identifier	malloc		4706738	0					
ANR	4706762	ArgumentList	500		4706738	1					
ANR	4706763	Argument	500		4706738	0					
ANR	4706764	PrimaryExpression	500		4706738	0					
ANR	4706765	IdentifierDeclStatement	int mypid ;	1083:1:27641:27650	4706738	2	True				
ANR	4706766	IdentifierDecl	mypid		4706738	0					
ANR	4706767	IdentifierDeclType	int		4706738	0					
ANR	4706768	Identifier	mypid		4706738	1					
ANR	4706769	Statement	static	1084:1:27653:27658	4706738	3	True				
ANR	4706770	IdentifierDeclStatement	unsigned int counter = 0 ;	1084:8:27660:27684	4706738	4	True				
ANR	4706771	IdentifierDecl	counter = 0		4706738	0					
ANR	4706772	IdentifierDeclType	unsigned int		4706738	0					
ANR	4706773	Identifier	counter		4706738	1					
ANR	4706774	AssignmentExpression	counter = 0		4706738	2		=			
ANR	4706775	Identifier	counter		4706738	0					
ANR	4706776	PrimaryExpression	0		4706738	1					
ANR	4706777	ExpressionStatement	mypid = GetCurrentProcessId ( )	1087:1:27701:27730	4706738	5	True				
ANR	4706778	AssignmentExpression	mypid = GetCurrentProcessId ( )		4706738	0		=			
ANR	4706779	Identifier	mypid		4706738	0					
ANR	4706780	CallExpression	GetCurrentProcessId ( )		4706738	1					
ANR	4706781	Callee	GetCurrentProcessId		4706738	0					
ANR	4706782	Identifier	GetCurrentProcessId		4706738	0					
ANR	4706783	ArgumentList			4706738	1					
ANR	4706784	IdentifierDeclStatement	int timestamp = ( int ) time ( NULL ) ;	1093:1:27802:27833	4706738	6	True				
ANR	4706785	IdentifierDecl	timestamp = ( int ) time ( NULL )		4706738	0					
ANR	4706786	IdentifierDeclType	int		4706738	0					
ANR	4706787	Identifier	timestamp		4706738	1					
ANR	4706788	AssignmentExpression	timestamp = ( int ) time ( NULL )		4706738	2		=			
ANR	4706789	Identifier	timestamp		4706738	0					
ANR	4706790	CastExpression	( int ) time ( NULL )		4706738	1					
ANR	4706791	CastTarget	int		4706738	0					
ANR	4706792	CallExpression	time ( NULL )		4706738	1					
ANR	4706793	Callee	time		4706738	0					
ANR	4706794	Identifier	time		4706738	0					
ANR	4706795	ArgumentList	NULL		4706738	1					
ANR	4706796	Argument	NULL		4706738	0					
ANR	4706797	Identifier	NULL		4706738	0					
ANR	4706798	IdentifierDeclStatement	int fd = - 1 ;	1094:1:27836:27845	4706738	7	True				
ANR	4706799	IdentifierDecl	fd = - 1		4706738	0					
ANR	4706800	IdentifierDeclType	int		4706738	0					
ANR	4706801	Identifier	fd		4706738	1					
ANR	4706802	AssignmentExpression	fd = - 1		4706738	2		=			
ANR	4706803	Identifier	fd		4706738	0					
ANR	4706804	UnaryOperationExpression	- 1		4706738	1					
ANR	4706805	UnaryOperator	-		4706738	0					
ANR	4706806	PrimaryExpression	1		4706738	1					
ANR	4706807	IdentifierDeclStatement	int retry_count = 10 ;	1096:1:27849:27869	4706738	8	True				
ANR	4706808	IdentifierDecl	retry_count = 10		4706738	0					
ANR	4706809	IdentifierDeclType	int		4706738	0					
ANR	4706810	Identifier	retry_count		4706738	1					
ANR	4706811	AssignmentExpression	retry_count = 10		4706738	2		=			
ANR	4706812	Identifier	retry_count		4706738	0					
ANR	4706813	PrimaryExpression	10		4706738	1					
ANR	4706814	DoStatement	do		4706738	9					
ANR	4706815	CompoundStatement		19:4:315:315	4706738	0					
ANR	4706816	ExpressionStatement	"snprintf ( filename , 500 , ""%s/tmp.%d.%d.%d"" , temp_dir , mypid , timestamp ++ , counter ++ )"	1099:2:27880:27964	4706738	0	True				
ANR	4706817	CallExpression	"snprintf ( filename , 500 , ""%s/tmp.%d.%d.%d"" , temp_dir , mypid , timestamp ++ , counter ++ )"		4706738	0					
ANR	4706818	Callee	snprintf		4706738	0					
ANR	4706819	Identifier	snprintf		4706738	0					
ANR	4706820	ArgumentList	filename		4706738	1					
ANR	4706821	Argument	filename		4706738	0					
ANR	4706822	Identifier	filename		4706738	0					
ANR	4706823	Argument	500		4706738	1					
ANR	4706824	PrimaryExpression	500		4706738	0					
ANR	4706825	Argument	"""%s/tmp.%d.%d.%d"""		4706738	2					
ANR	4706826	PrimaryExpression	"""%s/tmp.%d.%d.%d"""		4706738	0					
ANR	4706827	Argument	temp_dir		4706738	3					
ANR	4706828	Identifier	temp_dir		4706738	0					
ANR	4706829	Argument	mypid		4706738	4					
ANR	4706830	Identifier	mypid		4706738	0					
ANR	4706831	Argument	timestamp ++		4706738	5					
ANR	4706832	PostIncDecOperationExpression	timestamp ++		4706738	0					
ANR	4706833	Identifier	timestamp		4706738	0					
ANR	4706834	IncDec	++		4706738	1					
ANR	4706835	Argument	counter ++		4706738	6					
ANR	4706836	PostIncDecOperationExpression	counter ++		4706738	0					
ANR	4706837	Identifier	counter		4706738	0					
ANR	4706838	IncDec	++		4706738	1					
ANR	4706839	Condition	"( -- retry_count > 0 ) && ( ( ! create_as_subdirectory && ( fd = safe_open_wrapper_follow ( filename , O_EXCL | O_CREAT , S_IREAD | S_IWRITE ) ) == - 1 ) || ( create_as_subdirectory && ( fd = mkdir ( filename , 0700 ) ) == - 1 ) )"	1100:10:27976:28189	4706738	1	True				
ANR	4706840	AndExpression	"( -- retry_count > 0 ) && ( ( ! create_as_subdirectory && ( fd = safe_open_wrapper_follow ( filename , O_EXCL | O_CREAT , S_IREAD | S_IWRITE ) ) == - 1 ) || ( create_as_subdirectory && ( fd = mkdir ( filename , 0700 ) ) == - 1 ) )"		4706738	0		&&			
ANR	4706841	RelationalExpression	-- retry_count > 0		4706738	0		>			
ANR	4706842	UnaryExpression	-- retry_count		4706738	0					
ANR	4706843	IncDec	--		4706738	0					
ANR	4706844	Identifier	retry_count		4706738	1					
ANR	4706845	PrimaryExpression	0		4706738	1					
ANR	4706846	OrExpression	"( ! create_as_subdirectory && ( fd = safe_open_wrapper_follow ( filename , O_EXCL | O_CREAT , S_IREAD | S_IWRITE ) ) == - 1 ) || ( create_as_subdirectory && ( fd = mkdir ( filename , 0700 ) ) == - 1 )"		4706738	1		||			
ANR	4706847	AndExpression	"! create_as_subdirectory && ( fd = safe_open_wrapper_follow ( filename , O_EXCL | O_CREAT , S_IREAD | S_IWRITE ) ) == - 1"		4706738	0		&&			
ANR	4706848	UnaryOperationExpression	! create_as_subdirectory		4706738	0					
ANR	4706849	UnaryOperator	!		4706738	0					
ANR	4706850	Identifier	create_as_subdirectory		4706738	1					
ANR	4706851	EqualityExpression	"( fd = safe_open_wrapper_follow ( filename , O_EXCL | O_CREAT , S_IREAD | S_IWRITE ) ) == - 1"		4706738	1		==			
ANR	4706852	AssignmentExpression	"fd = safe_open_wrapper_follow ( filename , O_EXCL | O_CREAT , S_IREAD | S_IWRITE )"		4706738	0		=			
ANR	4706853	Identifier	fd		4706738	0					
ANR	4706854	CallExpression	"safe_open_wrapper_follow ( filename , O_EXCL | O_CREAT , S_IREAD | S_IWRITE )"		4706738	1					
ANR	4706855	Callee	safe_open_wrapper_follow		4706738	0					
ANR	4706856	Identifier	safe_open_wrapper_follow		4706738	0					
ANR	4706857	ArgumentList	filename		4706738	1					
ANR	4706858	Argument	filename		4706738	0					
ANR	4706859	Identifier	filename		4706738	0					
ANR	4706860	Argument	O_EXCL | O_CREAT		4706738	1					
ANR	4706861	InclusiveOrExpression	O_EXCL | O_CREAT		4706738	0		|			
ANR	4706862	Identifier	O_EXCL		4706738	0					
ANR	4706863	Identifier	O_CREAT		4706738	1					
ANR	4706864	Argument	S_IREAD | S_IWRITE		4706738	2					
ANR	4706865	InclusiveOrExpression	S_IREAD | S_IWRITE		4706738	0		|			
ANR	4706866	Identifier	S_IREAD		4706738	0					
ANR	4706867	Identifier	S_IWRITE		4706738	1					
ANR	4706868	UnaryOperationExpression	- 1		4706738	1					
ANR	4706869	UnaryOperator	-		4706738	0					
ANR	4706870	PrimaryExpression	1		4706738	1					
ANR	4706871	AndExpression	"create_as_subdirectory && ( fd = mkdir ( filename , 0700 ) ) == - 1"		4706738	1		&&			
ANR	4706872	Identifier	create_as_subdirectory		4706738	0					
ANR	4706873	EqualityExpression	"( fd = mkdir ( filename , 0700 ) ) == - 1"		4706738	1		==			
ANR	4706874	AssignmentExpression	"fd = mkdir ( filename , 0700 )"		4706738	0		=			
ANR	4706875	Identifier	fd		4706738	0					
ANR	4706876	CallExpression	"mkdir ( filename , 0700 )"		4706738	1					
ANR	4706877	Callee	mkdir		4706738	0					
ANR	4706878	Identifier	mkdir		4706738	0					
ANR	4706879	ArgumentList	filename		4706738	1					
ANR	4706880	Argument	filename		4706738	0					
ANR	4706881	Identifier	filename		4706738	0					
ANR	4706882	Argument	0700		4706738	1					
ANR	4706883	PrimaryExpression	0700		4706738	0					
ANR	4706884	UnaryOperationExpression	- 1		4706738	1					
ANR	4706885	UnaryOperator	-		4706738	0					
ANR	4706886	PrimaryExpression	1		4706738	1					
ANR	4706887	IfStatement	if ( fd == - 1 )		4706738	10					
ANR	4706888	Condition	fd == - 1	1105:5:28204:28211	4706738	0	True				
ANR	4706889	EqualityExpression	fd == - 1		4706738	0		==			
ANR	4706890	Identifier	fd		4706738	0					
ANR	4706891	UnaryOperationExpression	- 1		4706738	1					
ANR	4706892	UnaryOperator	-		4706738	0					
ANR	4706893	PrimaryExpression	1		4706738	1					
ANR	4706894	CompoundStatement		26:15:653:653	4706738	1					
ANR	4706895	ExpressionStatement	free ( temp_dir )	1106:2:28218:28232	4706738	0	True				
ANR	4706896	CallExpression	free ( temp_dir )		4706738	0					
ANR	4706897	Callee	free		4706738	0					
ANR	4706898	Identifier	free		4706738	0					
ANR	4706899	ArgumentList	temp_dir		4706738	1					
ANR	4706900	Argument	temp_dir		4706738	0					
ANR	4706901	Identifier	temp_dir		4706738	0					
ANR	4706902	ExpressionStatement	free ( filename )	1107:2:28236:28250	4706738	1	True				
ANR	4706903	CallExpression	free ( filename )		4706738	0					
ANR	4706904	Callee	free		4706738	0					
ANR	4706905	Identifier	free		4706738	0					
ANR	4706906	ArgumentList	filename		4706738	1					
ANR	4706907	Argument	filename		4706738	0					
ANR	4706908	Identifier	filename		4706738	0					
ANR	4706909	ReturnStatement	return NULL ;	1108:2:28254:28265	4706738	2	True				
ANR	4706910	Identifier	NULL		4706738	0					
ANR	4706911	IfStatement	if ( ! create_as_subdirectory )		4706738	11					
ANR	4706912	Condition	! create_as_subdirectory	1111:6:28277:28299	4706738	0	True				
ANR	4706913	UnaryOperationExpression	! create_as_subdirectory		4706738	0					
ANR	4706914	UnaryOperator	!		4706738	0					
ANR	4706915	Identifier	create_as_subdirectory		4706738	1					
ANR	4706916	CompoundStatement		32:32:742:742	4706738	1					
ANR	4706917	ExpressionStatement	close ( fd )	1112:2:28307:28317	4706738	0	True				
ANR	4706918	CallExpression	close ( fd )		4706738	0					
ANR	4706919	Callee	close		4706738	0					
ANR	4706920	Identifier	close		4706738	0					
ANR	4706921	ArgumentList	fd		4706738	1					
ANR	4706922	Argument	fd		4706738	0					
ANR	4706923	Identifier	fd		4706738	0					
ANR	4706924	ExpressionStatement	free ( temp_dir )	1115:1:28324:28339	4706738	12	True				
ANR	4706925	CallExpression	free ( temp_dir )		4706738	0					
ANR	4706926	Callee	free		4706738	0					
ANR	4706927	Identifier	free		4706738	0					
ANR	4706928	ArgumentList	temp_dir		4706738	1					
ANR	4706929	Argument	temp_dir		4706738	0					
ANR	4706930	Identifier	temp_dir		4706738	0					
ANR	4706931	ReturnStatement	return filename ;	1117:1:28343:28358	4706738	13	True				
ANR	4706932	Identifier	filename		4706738	0					
ANR	4706933	ReturnType	char *		4706738	1					
ANR	4706934	Identifier	create_temp_file		4706738	2					
ANR	4706935	ParameterList	bool create_as_subdirectory		4706738	3					
ANR	4706936	Parameter	bool create_as_subdirectory	1080:17:27531:27557	4706738	0	True				
ANR	4706937	ParameterType	bool		4706738	0					
ANR	4706938	Identifier	create_as_subdirectory		4706738	1					
ANR	4706939	CFGEntryNode	ENTRY		4706738		True				
ANR	4706940	CFGExitNode	EXIT		4706738		True				
ANR	4706941	Symbol	malloc		4706738						
ANR	4706942	Symbol	NULL		4706738						
ANR	4706943	Symbol	safe_open_wrapper_follow		4706738						
ANR	4706944	Symbol	create_as_subdirectory		4706738						
ANR	4706945	Symbol	O_EXCL		4706738						
ANR	4706946	Symbol	O_CREAT		4706738						
ANR	4706947	Symbol	mypid		4706738						
ANR	4706948	Symbol	counter		4706738						
ANR	4706949	Symbol	GetCurrentProcessId		4706738						
ANR	4706950	Symbol	S_IWRITE		4706738						
ANR	4706951	Symbol	filename		4706738						
ANR	4706952	Symbol	temp_dir_path		4706738						
ANR	4706953	Symbol	temp_dir		4706738						
ANR	4706954	Symbol	retry_count		4706738						
ANR	4706955	Symbol	time		4706738						
ANR	4706956	Symbol	mkdir		4706738						
ANR	4706957	Symbol	fd		4706738						
ANR	4706958	Symbol	timestamp		4706738						
ANR	4706959	Symbol	S_IREAD		4706738						
ANR	4706960	DeclStmt									
ANR	4706961	Decl							bool	"bool ( const char * path , uid_t src_uid , uid_t dst_uid , gid_t dst_gid )"	recursive_chown_impl
ANR	4706962	Function	recursive_chown_impl_fast	1132:0:28657:30146							
ANR	4706963	FunctionDef	"recursive_chown_impl_fast (const char * path , uid_t src_uid , uid_t dst_uid , gid_t dst_gid)"		4706962	0					
ANR	4706964	CompoundStatement		1134:0:28760:30146	4706962	0					
ANR	4706965	IdentifierDeclStatement	StatInfo si ( path ) ;	1135:1:28763:28780	4706962	0	True				
ANR	4706966	IdentifierDecl	si ( path )		4706962	0					
ANR	4706967	IdentifierDeclType	StatInfo		4706962	0					
ANR	4706968	Identifier	si		4706962	1					
ANR	4706969	Identifier	path		4706962	2					
ANR	4706970	IfStatement	if ( si . Error ( ) != SIGood )		4706962	1					
ANR	4706971	Condition	si . Error ( ) != SIGood	1136:4:28786:28805	4706962	0	True				
ANR	4706972	EqualityExpression	si . Error ( ) != SIGood		4706962	0		!=			
ANR	4706973	CallExpression	si . Error ( )		4706962	0					
ANR	4706974	Callee	si . Error		4706962	0					
ANR	4706975	MemberAccess	si . Error		4706962	0					
ANR	4706976	Identifier	si		4706962	0					
ANR	4706977	Identifier	Error		4706962	1					
ANR	4706978	ArgumentList			4706962	1					
ANR	4706979	Identifier	SIGood		4706962	1					
ANR	4706980	CompoundStatement		3:26:47:47	4706962	1					
ANR	4706981	IfStatement	if ( si . Error ( ) == SINoFile )		4706962	0					
ANR	4706982	Condition	si . Error ( ) == SINoFile	1137:5:28815:28836	4706962	0	True				
ANR	4706983	EqualityExpression	si . Error ( ) == SINoFile		4706962	0		==			
ANR	4706984	CallExpression	si . Error ( )		4706962	0					
ANR	4706985	Callee	si . Error		4706962	0					
ANR	4706986	MemberAccess	si . Error		4706962	0					
ANR	4706987	Identifier	si		4706962	0					
ANR	4706988	Identifier	Error		4706962	1					
ANR	4706989	ArgumentList			4706962	1					
ANR	4706990	Identifier	SINoFile		4706962	1					
ANR	4706991	CompoundStatement		4:29:78:78	4706962	1					
ANR	4706992	Statement	dprintf	1138:3:28844:28850	4706962	0	True				
ANR	4706993	Statement	(	1138:10:28851:28851	4706962	1	True				
ANR	4706994	Statement	D_FULLDEBUG	1138:11:28852:28862	4706962	2	True				
ANR	4706995	Statement	","	1138:22:28863:28863	4706962	3	True				
ANR	4706996	Statement	"""Attempting to chown '%s', """	1138:24:28865:28892	4706962	4	True				
ANR	4706997	Statement	"""but it doesn't appear to exist.\\n"""	1139:4:28898:28932	4706962	5	True				
ANR	4706998	Statement	","	1139:39:28933:28933	4706962	6	True				
ANR	4706999	Statement	path	1139:41:28935:28938	4706962	7	True				
ANR	4707000	Statement	)	1139:45:28939:28939	4706962	8	True				
ANR	4707001	ExpressionStatement		1139:46:28940:28940	4706962	9	True				
ANR	4707002	ElseStatement	else		4706962	0					
ANR	4707003	CompoundStatement		7:9:191:191	4706962	0					
ANR	4707004	Statement	dprintf	1141:3:28957:28963	4706962	0	True				
ANR	4707005	Statement	(	1141:10:28964:28964	4706962	1	True				
ANR	4707006	Statement	D_ALWAYS	1141:11:28965:28972	4706962	2	True				
ANR	4707007	Statement	","	1141:19:28973:28973	4706962	3	True				
ANR	4707008	Statement	"""Attempting to chown '%s', """	1141:21:28975:29002	4706962	4	True				
ANR	4707009	Statement	"""but encountered an error inspecting it (errno %d)\\n"""	1142:4:29008:29060	4706962	5	True				
ANR	4707010	Statement	","	1142:57:29061:29061	4706962	6	True				
ANR	4707011	Statement	path	1143:4:29067:29070	4706962	7	True				
ANR	4707012	Statement	","	1143:8:29071:29071	4706962	8	True				
ANR	4707013	Statement	si	1143:10:29073:29074	4706962	9	True				
ANR	4707014	Statement	.	1143:12:29075:29075	4706962	10	True				
ANR	4707015	Statement	Errno	1143:13:29076:29080	4706962	11	True				
ANR	4707016	Statement	(	1143:18:29081:29081	4706962	12	True				
ANR	4707017	Statement	)	1143:19:29082:29082	4706962	13	True				
ANR	4707018	Statement	)	1143:20:29083:29083	4706962	14	True				
ANR	4707019	ExpressionStatement		1143:21:29084:29084	4706962	15	True				
ANR	4707020	ReturnStatement	return false ;	1145:2:29093:29105	4706962	1	True				
ANR	4707021	Identifier	false		4706962	0					
ANR	4707022	IdentifierDeclStatement	uid_t real_uid = si . GetOwner ( ) ;	1148:1:29112:29142	4706962	2	True				
ANR	4707023	IdentifierDecl	real_uid = si . GetOwner ( )		4706962	0					
ANR	4707024	IdentifierDeclType	uid_t		4706962	0					
ANR	4707025	Identifier	real_uid		4706962	1					
ANR	4707026	AssignmentExpression	real_uid = si . GetOwner ( )		4706962	2		=			
ANR	4707027	Identifier	real_uid		4706962	0					
ANR	4707028	CallExpression	si . GetOwner ( )		4706962	1					
ANR	4707029	Callee	si . GetOwner		4706962	0					
ANR	4707030	MemberAccess	si . GetOwner		4706962	0					
ANR	4707031	Identifier	si		4706962	0					
ANR	4707032	Identifier	GetOwner		4706962	1					
ANR	4707033	ArgumentList			4706962	1					
ANR	4707034	IfStatement	if ( real_uid != src_uid && real_uid != dst_uid )		4706962	3					
ANR	4707035	Condition	real_uid != src_uid && real_uid != dst_uid	1149:4:29148:29189	4706962	0	True				
ANR	4707036	AndExpression	real_uid != src_uid && real_uid != dst_uid		4706962	0		&&			
ANR	4707037	EqualityExpression	real_uid != src_uid		4706962	0		!=			
ANR	4707038	Identifier	real_uid		4706962	0					
ANR	4707039	Identifier	src_uid		4706962	1					
ANR	4707040	EqualityExpression	real_uid != dst_uid		4706962	1		!=			
ANR	4707041	Identifier	real_uid		4706962	0					
ANR	4707042	Identifier	dst_uid		4706962	1					
ANR	4707043	CompoundStatement		16:48:431:431	4706962	1					
ANR	4707044	Statement	dprintf	1150:2:29196:29202	4706962	0	True				
ANR	4707045	Statement	(	1150:9:29203:29203	4706962	1	True				
ANR	4707046	Statement	D_ALWAYS	1150:10:29204:29211	4706962	2	True				
ANR	4707047	Statement	","	1150:18:29212:29212	4706962	3	True				
ANR	4707048	Statement	"""Attempting to chown '%s' from %d to %d.%d,"""	1150:20:29214:29257	4706962	4	True				
ANR	4707049	Statement	""" but the path was unexpectedly owned by %d\\n"""	1151:3:29262:29307	4706962	5	True				
ANR	4707050	Statement	","	1151:49:29308:29308	4706962	6	True				
ANR	4707051	Statement	path	1152:3:29314:29317	4706962	7	True				
ANR	4707052	Statement	","	1152:7:29318:29318	4706962	8	True				
ANR	4707053	Statement	(	1152:9:29320:29320	4706962	9	True				
ANR	4707054	Statement	int	1152:10:29321:29323	4706962	10	True				
ANR	4707055	Statement	)	1152:13:29324:29324	4706962	11	True				
ANR	4707056	Statement	src_uid	1152:14:29325:29331	4706962	12	True				
ANR	4707057	Statement	","	1152:21:29332:29332	4706962	13	True				
ANR	4707058	Statement	(	1152:23:29334:29334	4706962	14	True				
ANR	4707059	Statement	int	1152:24:29335:29337	4706962	15	True				
ANR	4707060	Statement	)	1152:27:29338:29338	4706962	16	True				
ANR	4707061	Statement	dst_uid	1152:28:29339:29345	4706962	17	True				
ANR	4707062	Statement	","	1152:35:29346:29346	4706962	18	True				
ANR	4707063	Statement	(	1152:37:29348:29348	4706962	19	True				
ANR	4707064	Statement	int	1152:38:29349:29351	4706962	20	True				
ANR	4707065	Statement	)	1152:41:29352:29352	4706962	21	True				
ANR	4707066	Statement	dst_gid	1152:42:29353:29359	4706962	22	True				
ANR	4707067	Statement	","	1152:49:29360:29360	4706962	23	True				
ANR	4707068	Statement	(	1153:3:29366:29366	4706962	24	True				
ANR	4707069	Statement	int	1153:4:29367:29369	4706962	25	True				
ANR	4707070	Statement	)	1153:7:29370:29370	4706962	26	True				
ANR	4707071	Statement	real_uid	1153:8:29371:29378	4706962	27	True				
ANR	4707072	Statement	)	1153:16:29379:29379	4706962	28	True				
ANR	4707073	ExpressionStatement		1153:17:29380:29380	4706962	29	True				
ANR	4707074	ReturnStatement	return false ;	1154:2:29384:29396	4706962	30	True				
ANR	4707075	Identifier	false		4706962	0					
ANR	4707076	IfStatement	if ( IsDirectory ( path ) )		4706962	4					
ANR	4707077	Condition	IsDirectory ( path )	1157:5:29407:29423	4706962	0	True				
ANR	4707078	CallExpression	IsDirectory ( path )		4706962	0					
ANR	4707079	Callee	IsDirectory		4706962	0					
ANR	4707080	Identifier	IsDirectory		4706962	0					
ANR	4707081	ArgumentList	path		4706962	1					
ANR	4707082	Argument	path		4706962	0					
ANR	4707083	Identifier	path		4706962	0					
ANR	4707084	CompoundStatement		26:2:693:718	4706962	1					
ANR	4707085	IdentifierDeclStatement	Directory dir ( path ) ;	1158:2:29431:29450	4706962	0	True				
ANR	4707086	IdentifierDecl	dir ( path )		4706962	0					
ANR	4707087	IdentifierDeclType	Directory		4706962	0					
ANR	4707088	Identifier	dir		4706962	1					
ANR	4707089	Identifier	path		4706962	2					
ANR	4707090	IdentifierDeclStatement	const char * filename = 0 ;	1159:2:29454:29479	4706962	1	True				
ANR	4707091	IdentifierDecl	* filename = 0		4706962	0					
ANR	4707092	IdentifierDeclType	const char *		4706962	0					
ANR	4707093	Identifier	filename		4706962	1					
ANR	4707094	AssignmentExpression	* filename = 0		4706962	2		=			
ANR	4707095	Identifier	filename		4706962	0					
ANR	4707096	PrimaryExpression	0		4706962	1					
ANR	4707097	WhileStatement	while ( ( filename = dir . Next ( ) ) )		4706962	2					
ANR	4707098	Condition	filename = dir . Next ( )	1160:9:29490:29512	4706962	0	True				
ANR	4707099	AssignmentExpression	filename = dir . Next ( )		4706962	0		=			
ANR	4707100	Identifier	filename		4706962	0					
ANR	4707101	CallExpression	dir . Next ( )		4706962	1					
ANR	4707102	Callee	dir . Next		4706962	0					
ANR	4707103	MemberAccess	dir . Next		4706962	0					
ANR	4707104	Identifier	dir		4706962	0					
ANR	4707105	Identifier	Next		4706962	1					
ANR	4707106	ArgumentList			4706962	1					
ANR	4707107	CompoundStatement		27:35:755:755	4706962	1					
ANR	4707108	ExpressionStatement	filename = dir . GetFullPath ( )	1164:3:29669:29697	4706962	0	True				
ANR	4707109	AssignmentExpression	filename = dir . GetFullPath ( )		4706962	0		=			
ANR	4707110	Identifier	filename		4706962	0					
ANR	4707111	CallExpression	dir . GetFullPath ( )		4706962	1					
ANR	4707112	Callee	dir . GetFullPath		4706962	0					
ANR	4707113	MemberAccess	dir . GetFullPath		4706962	0					
ANR	4707114	Identifier	dir		4706962	0					
ANR	4707115	Identifier	GetFullPath		4706962	1					
ANR	4707116	ArgumentList			4706962	1					
ANR	4707117	IfStatement	"if ( ! recursive_chown_impl ( filename , src_uid , dst_uid , dst_gid ) )"		4706962	1					
ANR	4707118	Condition	"! recursive_chown_impl ( filename , src_uid , dst_uid , dst_gid )"	1165:7:29706:29769	4706962	0	True				
ANR	4707119	UnaryOperationExpression	"! recursive_chown_impl ( filename , src_uid , dst_uid , dst_gid )"		4706962	0					
ANR	4707120	UnaryOperator	!		4706962	0					
ANR	4707121	CallExpression	"recursive_chown_impl ( filename , src_uid , dst_uid , dst_gid )"		4706962	1					
ANR	4707122	Callee	recursive_chown_impl		4706962	0					
ANR	4707123	Identifier	recursive_chown_impl		4706962	0					
ANR	4707124	ArgumentList	filename		4706962	1					
ANR	4707125	Argument	filename		4706962	0					
ANR	4707126	Identifier	filename		4706962	0					
ANR	4707127	Argument	src_uid		4706962	1					
ANR	4707128	Identifier	src_uid		4706962	0					
ANR	4707129	Argument	dst_uid		4706962	2					
ANR	4707130	Identifier	dst_uid		4706962	0					
ANR	4707131	Argument	dst_gid		4706962	3					
ANR	4707132	Identifier	dst_gid		4706962	0					
ANR	4707133	CompoundStatement		33:25:1012:1012	4706962	1					
ANR	4707134	ReturnStatement	return false ;	1167:4:29779:29791	4706962	0	True				
ANR	4707135	Identifier	false		4706962	0					
ANR	4707136	IfStatement	"if ( chown ( path , dst_uid , dst_gid ) != 0 )"		4706962	5					
ANR	4707137	Condition	"chown ( path , dst_uid , dst_gid ) != 0"	1177:5:30074:30107	4706962	0	True				
ANR	4707138	EqualityExpression	"chown ( path , dst_uid , dst_gid ) != 0"		4706962	0		!=			
ANR	4707139	CallExpression	"chown ( path , dst_uid , dst_gid )"		4706962	0					
ANR	4707140	Callee	chown		4706962	0					
ANR	4707141	Identifier	chown		4706962	0					
ANR	4707142	ArgumentList	path		4706962	1					
ANR	4707143	Argument	path		4706962	0					
ANR	4707144	Identifier	path		4706962	0					
ANR	4707145	Argument	dst_uid		4706962	1					
ANR	4707146	Identifier	dst_uid		4706962	0					
ANR	4707147	Argument	dst_gid		4706962	2					
ANR	4707148	Identifier	dst_gid		4706962	0					
ANR	4707149	PrimaryExpression	0		4706962	1					
ANR	4707150	CompoundStatement		44:42:1350:1350	4706962	1					
ANR	4707151	ReturnStatement	return false ;	1178:2:30115:30127	4706962	0	True				
ANR	4707152	Identifier	false		4706962	0					
ANR	4707153	ReturnStatement	return true ;	1180:1:30133:30144	4706962	6	True				
ANR	4707154	Identifier	true		4706962	0					
ANR	4707155	ReturnType	static bool		4706962	1					
ANR	4707156	Identifier	recursive_chown_impl_fast		4706962	2					
ANR	4707157	ParameterList	"const char * path , uid_t src_uid , uid_t dst_uid , gid_t dst_gid"		4706962	3					
ANR	4707158	Parameter	const char * path	1132:38:28695:28711	4706962	0	True				
ANR	4707159	ParameterType	const char *		4706962	0					
ANR	4707160	Identifier	path		4706962	1					
ANR	4707161	Parameter	uid_t src_uid	1133:1:28715:28727	4706962	1	True				
ANR	4707162	ParameterType	uid_t		4706962	0					
ANR	4707163	Identifier	src_uid		4706962	1					
ANR	4707164	Parameter	uid_t dst_uid	1133:16:28730:28742	4706962	2	True				
ANR	4707165	ParameterType	uid_t		4706962	0					
ANR	4707166	Identifier	dst_uid		4706962	1					
ANR	4707167	Parameter	gid_t dst_gid	1133:31:28745:28757	4706962	3	True				
ANR	4707168	ParameterType	gid_t		4706962	0					
ANR	4707169	Identifier	dst_gid		4706962	1					
ANR	4707170	CFGEntryNode	ENTRY		4706962		True				
ANR	4707171	CFGExitNode	EXIT		4706962		True				
ANR	4707172	Symbol	src_uid		4706962						
ANR	4707173	Symbol	recursive_chown_impl		4706962						
ANR	4707174	Symbol	si . GetOwner		4706962						
ANR	4707175	Symbol	IsDirectory		4706962						
ANR	4707176	Symbol	chown		4706962						
ANR	4707177	Symbol	false		4706962						
ANR	4707178	Symbol	dst_uid		4706962						
ANR	4707179	Symbol	dir		4706962						
ANR	4707180	Symbol	dir . Next		4706962						
ANR	4707181	Symbol	real_uid		4706962						
ANR	4707182	Symbol	dir . GetFullPath		4706962						
ANR	4707183	Symbol	path		4706962						
ANR	4707184	Symbol	dst_gid		4706962						
ANR	4707185	Symbol	SINoFile		4706962						
ANR	4707186	Symbol	filename		4706962						
ANR	4707187	Symbol	si		4706962						
ANR	4707188	Symbol	true		4706962						
ANR	4707189	Symbol	SIGood		4706962						
ANR	4707190	Symbol	si . Error		4706962						
ANR	4707191	Function	recursive_chown_impl	1185:0:30192:30894							
ANR	4707192	FunctionDef	"recursive_chown_impl (const char * path , uid_t src_uid , uid_t dst_uid , gid_t dst_gid)"		4707191	0					
ANR	4707193	CompoundStatement		1187:0:30291:30894	4707191	0					
ANR	4707194	ExpressionStatement	ASSERT ( get_priv ( ) == PRIV_ROOT )	1188:1:30294:30325	4707191	0	True				
ANR	4707195	CallExpression	ASSERT ( get_priv ( ) == PRIV_ROOT )		4707191	0					
ANR	4707196	Callee	ASSERT		4707191	0					
ANR	4707197	Identifier	ASSERT		4707191	0					
ANR	4707198	ArgumentList	get_priv ( ) == PRIV_ROOT		4707191	1					
ANR	4707199	Argument	get_priv ( ) == PRIV_ROOT		4707191	0					
ANR	4707200	EqualityExpression	get_priv ( ) == PRIV_ROOT		4707191	0		==			
ANR	4707201	CallExpression	get_priv ( )		4707191	0					
ANR	4707202	Callee	get_priv		4707191	0					
ANR	4707203	Identifier	get_priv		4707191	0					
ANR	4707204	ArgumentList			4707191	1					
ANR	4707205	Identifier	PRIV_ROOT		4707191	1					
ANR	4707206	IfStatement	"if ( recursive_chown_impl_fast ( path , src_uid , dst_uid , dst_gid ) )"		4707191	1					
ANR	4707207	Condition	"recursive_chown_impl_fast ( path , src_uid , dst_uid , dst_gid )"	1190:5:30334:30391	4707191	0	True				
ANR	4707208	CallExpression	"recursive_chown_impl_fast ( path , src_uid , dst_uid , dst_gid )"		4707191	0					
ANR	4707209	Callee	recursive_chown_impl_fast		4707191	0					
ANR	4707210	Identifier	recursive_chown_impl_fast		4707191	0					
ANR	4707211	ArgumentList	path		4707191	1					
ANR	4707212	Argument	path		4707191	0					
ANR	4707213	Identifier	path		4707191	0					
ANR	4707214	Argument	src_uid		4707191	1					
ANR	4707215	Identifier	src_uid		4707191	0					
ANR	4707216	Argument	dst_uid		4707191	2					
ANR	4707217	Identifier	dst_uid		4707191	0					
ANR	4707218	Argument	dst_gid		4707191	3					
ANR	4707219	Identifier	dst_gid		4707191	0					
ANR	4707220	CompoundStatement		4:66:103:103	4707191	1					
ANR	4707221	ReturnStatement	return true ;	1191:2:30399:30410	4707191	0	True				
ANR	4707222	Identifier	true		4707191	0					
ANR	4707223	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Error: Unable to chown '%s' from %d to %d.%d\\n"" , path , ( int ) src_uid , ( int ) dst_uid , ( int ) dst_gid )"	1204:1:30757:30877	4707191	2	True				
ANR	4707224	CallExpression	"dprintf ( D_FULLDEBUG , ""Error: Unable to chown '%s' from %d to %d.%d\\n"" , path , ( int ) src_uid , ( int ) dst_uid , ( int ) dst_gid )"		4707191	0					
ANR	4707225	Callee	dprintf		4707191	0					
ANR	4707226	Identifier	dprintf		4707191	0					
ANR	4707227	ArgumentList	D_FULLDEBUG		4707191	1					
ANR	4707228	Argument	D_FULLDEBUG		4707191	0					
ANR	4707229	Identifier	D_FULLDEBUG		4707191	0					
ANR	4707230	Argument	"""Error: Unable to chown '%s' from %d to %d.%d\\n"""		4707191	1					
ANR	4707231	PrimaryExpression	"""Error: Unable to chown '%s' from %d to %d.%d\\n"""		4707191	0					
ANR	4707232	Argument	path		4707191	2					
ANR	4707233	Identifier	path		4707191	0					
ANR	4707234	Argument	( int ) src_uid		4707191	3					
ANR	4707235	CastExpression	( int ) src_uid		4707191	0					
ANR	4707236	CastTarget	int		4707191	0					
ANR	4707237	Identifier	src_uid		4707191	1					
ANR	4707238	Argument	( int ) dst_uid		4707191	4					
ANR	4707239	CastExpression	( int ) dst_uid		4707191	0					
ANR	4707240	CastTarget	int		4707191	0					
ANR	4707241	Identifier	dst_uid		4707191	1					
ANR	4707242	Argument	( int ) dst_gid		4707191	5					
ANR	4707243	CastExpression	( int ) dst_gid		4707191	0					
ANR	4707244	CastTarget	int		4707191	0					
ANR	4707245	Identifier	dst_gid		4707191	1					
ANR	4707246	ReturnStatement	return false ;	1206:1:30880:30892	4707191	3	True				
ANR	4707247	Identifier	false		4707191	0					
ANR	4707248	ReturnType	static bool		4707191	1					
ANR	4707249	Identifier	recursive_chown_impl		4707191	2					
ANR	4707250	ParameterList	"const char * path , uid_t src_uid , uid_t dst_uid , gid_t dst_gid"		4707191	3					
ANR	4707251	Parameter	const char * path	1185:33:30225:30241	4707191	0	True				
ANR	4707252	ParameterType	const char *		4707191	0					
ANR	4707253	Identifier	path		4707191	1					
ANR	4707254	Parameter	uid_t src_uid	1186:1:30246:30258	4707191	1	True				
ANR	4707255	ParameterType	uid_t		4707191	0					
ANR	4707256	Identifier	src_uid		4707191	1					
ANR	4707257	Parameter	uid_t dst_uid	1186:16:30261:30273	4707191	2	True				
ANR	4707258	ParameterType	uid_t		4707191	0					
ANR	4707259	Identifier	dst_uid		4707191	1					
ANR	4707260	Parameter	gid_t dst_gid	1186:31:30276:30288	4707191	3	True				
ANR	4707261	ParameterType	gid_t		4707191	0					
ANR	4707262	Identifier	dst_gid		4707191	1					
ANR	4707263	CFGEntryNode	ENTRY		4707191		True				
ANR	4707264	CFGExitNode	EXIT		4707191		True				
ANR	4707265	Symbol	src_uid		4707191						
ANR	4707266	Symbol	path		4707191						
ANR	4707267	Symbol	recursive_chown_impl_fast		4707191						
ANR	4707268	Symbol	dst_gid		4707191						
ANR	4707269	Symbol	get_priv		4707191						
ANR	4707270	Symbol	true		4707191						
ANR	4707271	Symbol	false		4707191						
ANR	4707272	Symbol	PRIV_ROOT		4707191						
ANR	4707273	Symbol	dst_uid		4707191						
ANR	4707274	Symbol	D_FULLDEBUG		4707191						
ANR	4707275	Function	recursive_chown	1214:0:31124:32114							
ANR	4707276	FunctionDef	"recursive_chown (const char * path , uid_t src_uid , uid_t dst_uid , gid_t dst_gid , bool non_root_okay)"		4707275	0					
ANR	4707277	CompoundStatement		1217:0:31245:32114	4707275	0					
ANR	4707278	IfStatement	if ( ! can_switch_ids ( ) )		4707275	0					
ANR	4707279	Condition	! can_switch_ids ( )	1219:5:31298:31315	4707275	0	True				
ANR	4707280	UnaryOperationExpression	! can_switch_ids ( )		4707275	0					
ANR	4707281	UnaryOperator	!		4707275	0					
ANR	4707282	CallExpression	can_switch_ids ( )		4707275	1					
ANR	4707283	Callee	can_switch_ids		4707275	0					
ANR	4707284	Identifier	can_switch_ids		4707275	0					
ANR	4707285	ArgumentList			4707275	1					
ANR	4707286	CompoundStatement		3:25:72:72	4707275	1					
ANR	4707287	IfStatement	if ( non_root_okay )		4707275	0					
ANR	4707288	Condition	non_root_okay	1222:6:31362:31374	4707275	0	True				
ANR	4707289	Identifier	non_root_okay		4707275	0					
ANR	4707290	CompoundStatement		6:21:131:131	4707275	1					
ANR	4707291	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Unable to chown %s from %d to %d.%d.  Process lacks the ability to change UIDs (probably isn't root).  This is probably harmless.  Skipping chown attempt.\\n"" , path , src_uid , dst_uid , dst_gid )"	1224:3:31403:31616	4707275	0	True				
ANR	4707292	CallExpression	"dprintf ( D_FULLDEBUG , ""Unable to chown %s from %d to %d.%d.  Process lacks the ability to change UIDs (probably isn't root).  This is probably harmless.  Skipping chown attempt.\\n"" , path , src_uid , dst_uid , dst_gid )"		4707275	0					
ANR	4707293	Callee	dprintf		4707275	0					
ANR	4707294	Identifier	dprintf		4707275	0					
ANR	4707295	ArgumentList	D_FULLDEBUG		4707275	1					
ANR	4707296	Argument	D_FULLDEBUG		4707275	0					
ANR	4707297	Identifier	D_FULLDEBUG		4707275	0					
ANR	4707298	Argument	"""Unable to chown %s from %d to %d.%d.  Process lacks the ability to change UIDs (probably isn't root).  This is probably harmless.  Skipping chown attempt.\\n"""		4707275	1					
ANR	4707299	PrimaryExpression	"""Unable to chown %s from %d to %d.%d.  Process lacks the ability to change UIDs (probably isn't root).  This is probably harmless.  Skipping chown attempt.\\n"""		4707275	0					
ANR	4707300	Argument	path		4707275	2					
ANR	4707301	Identifier	path		4707275	0					
ANR	4707302	Argument	src_uid		4707275	3					
ANR	4707303	Identifier	src_uid		4707275	0					
ANR	4707304	Argument	dst_uid		4707275	4					
ANR	4707305	Identifier	dst_uid		4707275	0					
ANR	4707306	Argument	dst_gid		4707275	5					
ANR	4707307	Identifier	dst_gid		4707275	0					
ANR	4707308	ReturnStatement	return true ;	1225:3:31621:31632	4707275	1	True				
ANR	4707309	Identifier	true		4707275	0					
ANR	4707310	ElseStatement	else		4707275	0					
ANR	4707311	CompoundStatement		11:9:398:398	4707275	0					
ANR	4707312	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error: Unable to chown %s to from %d %d.%d; we're not root.\\n"" , path , src_uid , dst_uid , dst_gid )"	1229:3:31685:31800	4707275	0	True				
ANR	4707313	CallExpression	"dprintf ( D_ALWAYS , ""Error: Unable to chown %s to from %d %d.%d; we're not root.\\n"" , path , src_uid , dst_uid , dst_gid )"		4707275	0					
ANR	4707314	Callee	dprintf		4707275	0					
ANR	4707315	Identifier	dprintf		4707275	0					
ANR	4707316	ArgumentList	D_ALWAYS		4707275	1					
ANR	4707317	Argument	D_ALWAYS		4707275	0					
ANR	4707318	Identifier	D_ALWAYS		4707275	0					
ANR	4707319	Argument	"""Error: Unable to chown %s to from %d %d.%d; we're not root.\\n"""		4707275	1					
ANR	4707320	PrimaryExpression	"""Error: Unable to chown %s to from %d %d.%d; we're not root.\\n"""		4707275	0					
ANR	4707321	Argument	path		4707275	2					
ANR	4707322	Identifier	path		4707275	0					
ANR	4707323	Argument	src_uid		4707275	3					
ANR	4707324	Identifier	src_uid		4707275	0					
ANR	4707325	Argument	dst_uid		4707275	4					
ANR	4707326	Identifier	dst_uid		4707275	0					
ANR	4707327	Argument	dst_gid		4707275	5					
ANR	4707328	Identifier	dst_gid		4707275	0					
ANR	4707329	ReturnStatement	return false ;	1230:3:31805:31817	4707275	1	True				
ANR	4707330	Identifier	false		4707275	0					
ANR	4707331	IdentifierDeclStatement	priv_state previous = set_priv ( PRIV_ROOT ) ;	1238:1:31973:32014	4707275	1	True				
ANR	4707332	IdentifierDecl	previous = set_priv ( PRIV_ROOT )		4707275	0					
ANR	4707333	IdentifierDeclType	priv_state		4707275	0					
ANR	4707334	Identifier	previous		4707275	1					
ANR	4707335	AssignmentExpression	previous = set_priv ( PRIV_ROOT )		4707275	2		=			
ANR	4707336	Identifier	previous		4707275	0					
ANR	4707337	CallExpression	set_priv ( PRIV_ROOT )		4707275	1					
ANR	4707338	Callee	set_priv		4707275	0					
ANR	4707339	Identifier	set_priv		4707275	0					
ANR	4707340	ArgumentList	PRIV_ROOT		4707275	1					
ANR	4707341	Argument	PRIV_ROOT		4707275	0					
ANR	4707342	Identifier	PRIV_ROOT		4707275	0					
ANR	4707343	IdentifierDeclStatement	"bool ret = recursive_chown_impl ( path , src_uid , dst_uid , dst_gid ) ;"	1239:1:32017:32078	4707275	2	True				
ANR	4707344	IdentifierDecl	"ret = recursive_chown_impl ( path , src_uid , dst_uid , dst_gid )"		4707275	0					
ANR	4707345	IdentifierDeclType	bool		4707275	0					
ANR	4707346	Identifier	ret		4707275	1					
ANR	4707347	AssignmentExpression	"ret = recursive_chown_impl ( path , src_uid , dst_uid , dst_gid )"		4707275	2		=			
ANR	4707348	Identifier	ret		4707275	0					
ANR	4707349	CallExpression	"recursive_chown_impl ( path , src_uid , dst_uid , dst_gid )"		4707275	1					
ANR	4707350	Callee	recursive_chown_impl		4707275	0					
ANR	4707351	Identifier	recursive_chown_impl		4707275	0					
ANR	4707352	ArgumentList	path		4707275	1					
ANR	4707353	Argument	path		4707275	0					
ANR	4707354	Identifier	path		4707275	0					
ANR	4707355	Argument	src_uid		4707275	1					
ANR	4707356	Identifier	src_uid		4707275	0					
ANR	4707357	Argument	dst_uid		4707275	2					
ANR	4707358	Identifier	dst_uid		4707275	0					
ANR	4707359	Argument	dst_gid		4707275	3					
ANR	4707360	Identifier	dst_gid		4707275	0					
ANR	4707361	ExpressionStatement	set_priv ( previous )	1240:1:32081:32099	4707275	3	True				
ANR	4707362	CallExpression	set_priv ( previous )		4707275	0					
ANR	4707363	Callee	set_priv		4707275	0					
ANR	4707364	Identifier	set_priv		4707275	0					
ANR	4707365	ArgumentList	previous		4707275	1					
ANR	4707366	Argument	previous		4707275	0					
ANR	4707367	Identifier	previous		4707275	0					
ANR	4707368	ReturnStatement	return ret ;	1241:1:32102:32112	4707275	4	True				
ANR	4707369	Identifier	ret		4707275	0					
ANR	4707370	ReturnType	bool		4707275	1					
ANR	4707371	Identifier	recursive_chown		4707275	2					
ANR	4707372	ParameterList	"const char * path , uid_t src_uid , uid_t dst_uid , gid_t dst_gid , bool non_root_okay"		4707275	3					
ANR	4707373	Parameter	const char * path	1214:21:31145:31161	4707275	0	True				
ANR	4707374	ParameterType	const char *		4707275	0					
ANR	4707375	Identifier	path		4707275	1					
ANR	4707376	Parameter	uid_t src_uid	1215:1:31165:31177	4707275	1	True				
ANR	4707377	ParameterType	uid_t		4707275	0					
ANR	4707378	Identifier	src_uid		4707275	1					
ANR	4707379	Parameter	uid_t dst_uid	1215:16:31180:31192	4707275	2	True				
ANR	4707380	ParameterType	uid_t		4707275	0					
ANR	4707381	Identifier	dst_uid		4707275	1					
ANR	4707382	Parameter	gid_t dst_gid	1215:31:31195:31207	4707275	3	True				
ANR	4707383	ParameterType	gid_t		4707275	0					
ANR	4707384	Identifier	dst_gid		4707275	1					
ANR	4707385	Parameter	bool non_root_okay	1216:1:31212:31229	4707275	4	True				
ANR	4707386	ParameterType	bool		4707275	0					
ANR	4707387	Identifier	non_root_okay		4707275	1					
ANR	4707388	CFGEntryNode	ENTRY		4707275		True				
ANR	4707389	CFGExitNode	EXIT		4707275		True				
ANR	4707390	Symbol	src_uid		4707275						
ANR	4707391	Symbol	ret		4707275						
ANR	4707392	Symbol	recursive_chown_impl		4707275						
ANR	4707393	Symbol	previous		4707275						
ANR	4707394	Symbol	D_ALWAYS		4707275						
ANR	4707395	Symbol	false		4707275						
ANR	4707396	Symbol	dst_uid		4707275						
ANR	4707397	Symbol	D_FULLDEBUG		4707275						
ANR	4707398	Symbol	path		4707275						
ANR	4707399	Symbol	set_priv		4707275						
ANR	4707400	Symbol	dst_gid		4707275						
ANR	4707401	Symbol	can_switch_ids		4707275						
ANR	4707402	Symbol	non_root_okay		4707275						
ANR	4707403	Symbol	true		4707275						
ANR	4707404	Symbol	PRIV_ROOT		4707275						
ANR	4707405	Function	mkdir_and_parents_if_needed_cur_priv	1246:0:32148:33470							
ANR	4707406	FunctionDef	"mkdir_and_parents_if_needed_cur_priv (const char * path , mode_t mode)"		4707405	0					
ANR	4707407	CompoundStatement		1247:0:32223:33470	4707405	0					
ANR	4707408	IdentifierDeclStatement	int tries = 0 ;	1248:1:32226:32239	4707405	0	True				
ANR	4707409	IdentifierDecl	tries = 0		4707405	0					
ANR	4707410	IdentifierDeclType	int		4707405	0					
ANR	4707411	Identifier	tries		4707405	1					
ANR	4707412	AssignmentExpression	tries = 0		4707405	2		=			
ANR	4707413	Identifier	tries		4707405	0					
ANR	4707414	PrimaryExpression	0		4707405	1					
ANR	4707415	ForStatement	for ( tries = 0 ; tries < 100 ; tries ++ )		4707405	1					
ANR	4707416	ForInit	tries = 0 ;	1259:5:32712:32719	4707405	0	True				
ANR	4707417	AssignmentExpression	tries = 0		4707405	0		=			
ANR	4707418	Identifier	tries		4707405	0					
ANR	4707419	PrimaryExpression	0		4707405	1					
ANR	4707420	Condition	tries < 100	1259:14:32721:32731	4707405	1	True				
ANR	4707421	RelationalExpression	tries < 100		4707405	0		<			
ANR	4707422	Identifier	tries		4707405	0					
ANR	4707423	PrimaryExpression	100		4707405	1					
ANR	4707424	PostIncDecOperationExpression	tries ++	1259:27:32734:32740	4707405	2	True				
ANR	4707425	Identifier	tries		4707405	0					
ANR	4707426	IncDec	++		4707405	1					
ANR	4707427	CompoundStatement		32:2:983:1006	4707405	3					
ANR	4707428	IfStatement	"if ( mkdir ( path , mode ) == 0 )"		4707405	0					
ANR	4707429	Condition	"mkdir ( path , mode ) == 0"	1264:6:32881:32904	4707405	0	True				
ANR	4707430	EqualityExpression	"mkdir ( path , mode ) == 0"		4707405	0		==			
ANR	4707431	CallExpression	"mkdir ( path , mode )"		4707405	0					
ANR	4707432	Callee	mkdir		4707405	0					
ANR	4707433	Identifier	mkdir		4707405	0					
ANR	4707434	ArgumentList	path		4707405	1					
ANR	4707435	Argument	path		4707405	0					
ANR	4707436	Identifier	path		4707405	0					
ANR	4707437	Argument	mode		4707405	1					
ANR	4707438	Identifier	mode		4707405	0					
ANR	4707439	PrimaryExpression	0		4707405	1					
ANR	4707440	CompoundStatement		18:33:684:684	4707405	1					
ANR	4707441	ExpressionStatement	errno = 0	1265:3:32913:32922	4707405	0	True				
ANR	4707442	AssignmentExpression	errno = 0		4707405	0		=			
ANR	4707443	Identifier	errno		4707405	0					
ANR	4707444	PrimaryExpression	0		4707405	1					
ANR	4707445	ReturnStatement	return true ;	1266:3:32974:32985	4707405	1	True				
ANR	4707446	Identifier	true		4707405	0					
ANR	4707447	IfStatement	if ( errno == EEXIST )		4707405	1					
ANR	4707448	Condition	errno == EEXIST	1269:6:32998:33012	4707405	0	True				
ANR	4707449	EqualityExpression	errno == EEXIST		4707405	0		==			
ANR	4707450	Identifier	errno		4707405	0					
ANR	4707451	Identifier	EEXIST		4707405	1					
ANR	4707452	CompoundStatement		23:24:792:792	4707405	1					
ANR	4707453	ReturnStatement	return true ;	1271:3:33078:33089	4707405	0	True				
ANR	4707454	Identifier	true		4707405	0					
ANR	4707455	IfStatement	if ( errno != ENOENT )		4707405	2					
ANR	4707456	Condition	errno != ENOENT	1273:6:33101:33115	4707405	0	True				
ANR	4707457	EqualityExpression	errno != ENOENT		4707405	0		!=			
ANR	4707458	Identifier	errno		4707405	0					
ANR	4707459	Identifier	ENOENT		4707405	1					
ANR	4707460	CompoundStatement		27:24:895:895	4707405	1					
ANR	4707461	ReturnStatement	return false ;	1275:3:33186:33198	4707405	0	True				
ANR	4707462	Identifier	false		4707405	0					
ANR	4707463	IdentifierDeclStatement	"std :: string parent , junk ;"	1278:2:33207:33230	4707405	3	True				
ANR	4707464	IdentifierDecl	parent		4707405	0					
ANR	4707465	IdentifierDeclType	std :: string		4707405	0					
ANR	4707466	Identifier	parent		4707405	1					
ANR	4707467	IdentifierDecl	junk		4707405	1					
ANR	4707468	IdentifierDeclType	std :: string		4707405	0					
ANR	4707469	Identifier	junk		4707405	1					
ANR	4707470	IfStatement	"if ( filename_split ( path , parent , junk ) )"		4707405	4					
ANR	4707471	Condition	"filename_split ( path , parent , junk )"	1279:6:33238:33269	4707405	0	True				
ANR	4707472	CallExpression	"filename_split ( path , parent , junk )"		4707405	0					
ANR	4707473	Callee	filename_split		4707405	0					
ANR	4707474	Identifier	filename_split		4707405	0					
ANR	4707475	ArgumentList	path		4707405	1					
ANR	4707476	Argument	path		4707405	0					
ANR	4707477	Identifier	path		4707405	0					
ANR	4707478	Argument	parent		4707405	1					
ANR	4707479	Identifier	parent		4707405	0					
ANR	4707480	Argument	junk		4707405	2					
ANR	4707481	Identifier	junk		4707405	0					
ANR	4707482	CompoundStatement		33:41:1049:1049	4707405	1					
ANR	4707483	IfStatement	"if ( ! mkdir_and_parents_if_needed_cur_priv ( parent . c_str ( ) , mode ) )"		4707405	0					
ANR	4707484	Condition	"! mkdir_and_parents_if_needed_cur_priv ( parent . c_str ( ) , mode )"	1280:6:33281:33339	4707405	0	True				
ANR	4707485	UnaryOperationExpression	"! mkdir_and_parents_if_needed_cur_priv ( parent . c_str ( ) , mode )"		4707405	0					
ANR	4707486	UnaryOperator	!		4707405	0					
ANR	4707487	CallExpression	"mkdir_and_parents_if_needed_cur_priv ( parent . c_str ( ) , mode )"		4707405	1					
ANR	4707488	Callee	mkdir_and_parents_if_needed_cur_priv		4707405	0					
ANR	4707489	Identifier	mkdir_and_parents_if_needed_cur_priv		4707405	0					
ANR	4707490	ArgumentList	parent . c_str ( )		4707405	1					
ANR	4707491	Argument	parent . c_str ( )		4707405	0					
ANR	4707492	CallExpression	parent . c_str ( )		4707405	0					
ANR	4707493	Callee	parent . c_str		4707405	0					
ANR	4707494	MemberAccess	parent . c_str		4707405	0					
ANR	4707495	Identifier	parent		4707405	0					
ANR	4707496	Identifier	c_str		4707405	1					
ANR	4707497	ArgumentList			4707405	1					
ANR	4707498	Argument	mode		4707405	1					
ANR	4707499	Identifier	mode		4707405	0					
ANR	4707500	CompoundStatement		34:67:1118:1118	4707405	1					
ANR	4707501	ReturnStatement	return false ;	1281:4:33348:33360	4707405	0	True				
ANR	4707502	Identifier	false		4707405	0					
ANR	4707503	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to create %s after %d attempts.\\n"" , path , tries )"	1286:1:33376:33453	4707405	2	True				
ANR	4707504	CallExpression	"dprintf ( D_ALWAYS , ""Failed to create %s after %d attempts.\\n"" , path , tries )"		4707405	0					
ANR	4707505	Callee	dprintf		4707405	0					
ANR	4707506	Identifier	dprintf		4707405	0					
ANR	4707507	ArgumentList	D_ALWAYS		4707405	1					
ANR	4707508	Argument	D_ALWAYS		4707405	0					
ANR	4707509	Identifier	D_ALWAYS		4707405	0					
ANR	4707510	Argument	"""Failed to create %s after %d attempts.\\n"""		4707405	1					
ANR	4707511	PrimaryExpression	"""Failed to create %s after %d attempts.\\n"""		4707405	0					
ANR	4707512	Argument	path		4707405	2					
ANR	4707513	Identifier	path		4707405	0					
ANR	4707514	Argument	tries		4707405	3					
ANR	4707515	Identifier	tries		4707405	0					
ANR	4707516	ReturnStatement	return false ;	1288:1:33456:33468	4707405	3	True				
ANR	4707517	Identifier	false		4707405	0					
ANR	4707518	ReturnType	bool		4707405	1					
ANR	4707519	Identifier	mkdir_and_parents_if_needed_cur_priv		4707405	2					
ANR	4707520	ParameterList	"const char * path , mode_t mode"		4707405	3					
ANR	4707521	Parameter	const char * path	1246:43:32191:32206	4707405	0	True				
ANR	4707522	ParameterType	const char *		4707405	0					
ANR	4707523	Identifier	path		4707405	1					
ANR	4707524	Parameter	mode_t mode	1246:61:32209:32219	4707405	1	True				
ANR	4707525	ParameterType	mode_t		4707405	0					
ANR	4707526	Identifier	mode		4707405	1					
ANR	4707527	CFGEntryNode	ENTRY		4707405		True				
ANR	4707528	CFGExitNode	EXIT		4707405		True				
ANR	4707529	Symbol	tries		4707405						
ANR	4707530	Symbol	EEXIST		4707405						
ANR	4707531	Symbol	parent		4707405						
ANR	4707532	Symbol	errno		4707405						
ANR	4707533	Symbol	false		4707405						
ANR	4707534	Symbol	D_ALWAYS		4707405						
ANR	4707535	Symbol	ENOENT		4707405						
ANR	4707536	Symbol	mode		4707405						
ANR	4707537	Symbol	mkdir_and_parents_if_needed_cur_priv		4707405						
ANR	4707538	Symbol	path		4707405						
ANR	4707539	Symbol	true		4707405						
ANR	4707540	Symbol	junk		4707405						
ANR	4707541	Symbol	parent . c_str		4707405						
ANR	4707542	Symbol	mkdir		4707405						
ANR	4707543	Symbol	filename_split		4707405						
ANR	4707544	Function	mkdir_and_parents_if_needed	1291:0:33473:33795							
ANR	4707545	FunctionDef	"mkdir_and_parents_if_needed (const char * path , mode_t mode , priv_state priv)"		4707544	0					
ANR	4707546	CompoundStatement		1292:0:33556:33795	4707544	0					
ANR	4707547	IdentifierDeclStatement	bool retval ;	1293:1:33559:33570	4707544	0	True				
ANR	4707548	IdentifierDecl	retval		4707544	0					
ANR	4707549	IdentifierDeclType	bool		4707544	0					
ANR	4707550	Identifier	retval		4707544	1					
ANR	4707551	IdentifierDeclStatement	priv_state saved_priv ;	1294:1:33573:33594	4707544	1	True				
ANR	4707552	IdentifierDecl	saved_priv		4707544	0					
ANR	4707553	IdentifierDeclType	priv_state		4707544	0					
ANR	4707554	Identifier	saved_priv		4707544	1					
ANR	4707555	IfStatement	if ( priv != PRIV_UNKNOWN )		4707544	2					
ANR	4707556	Condition	priv != PRIV_UNKNOWN	1296:5:33602:33621	4707544	0	True				
ANR	4707557	EqualityExpression	priv != PRIV_UNKNOWN		4707544	0		!=			
ANR	4707558	Identifier	priv		4707544	0					
ANR	4707559	Identifier	PRIV_UNKNOWN		4707544	1					
ANR	4707560	CompoundStatement		5:28:68:68	4707544	1					
ANR	4707561	ExpressionStatement	saved_priv = set_priv ( priv )	1297:2:33629:33656	4707544	0	True				
ANR	4707562	AssignmentExpression	saved_priv = set_priv ( priv )		4707544	0		=			
ANR	4707563	Identifier	saved_priv		4707544	0					
ANR	4707564	CallExpression	set_priv ( priv )		4707544	1					
ANR	4707565	Callee	set_priv		4707544	0					
ANR	4707566	Identifier	set_priv		4707544	0					
ANR	4707567	ArgumentList	priv		4707544	1					
ANR	4707568	Argument	priv		4707544	0					
ANR	4707569	Identifier	priv		4707544	0					
ANR	4707570	ExpressionStatement	"retval = mkdir_and_parents_if_needed_cur_priv ( path , mode )"	1300:1:33663:33719	4707544	3	True				
ANR	4707571	AssignmentExpression	"retval = mkdir_and_parents_if_needed_cur_priv ( path , mode )"		4707544	0		=			
ANR	4707572	Identifier	retval		4707544	0					
ANR	4707573	CallExpression	"mkdir_and_parents_if_needed_cur_priv ( path , mode )"		4707544	1					
ANR	4707574	Callee	mkdir_and_parents_if_needed_cur_priv		4707544	0					
ANR	4707575	Identifier	mkdir_and_parents_if_needed_cur_priv		4707544	0					
ANR	4707576	ArgumentList	path		4707544	1					
ANR	4707577	Argument	path		4707544	0					
ANR	4707578	Identifier	path		4707544	0					
ANR	4707579	Argument	mode		4707544	1					
ANR	4707580	Identifier	mode		4707544	0					
ANR	4707581	IfStatement	if ( priv != PRIV_UNKNOWN )		4707544	4					
ANR	4707582	Condition	priv != PRIV_UNKNOWN	1302:5:33727:33746	4707544	0	True				
ANR	4707583	EqualityExpression	priv != PRIV_UNKNOWN		4707544	0		!=			
ANR	4707584	Identifier	priv		4707544	0					
ANR	4707585	Identifier	PRIV_UNKNOWN		4707544	1					
ANR	4707586	CompoundStatement		11:28:193:193	4707544	1					
ANR	4707587	ExpressionStatement	set_priv ( saved_priv )	1303:2:33754:33774	4707544	0	True				
ANR	4707588	CallExpression	set_priv ( saved_priv )		4707544	0					
ANR	4707589	Callee	set_priv		4707544	0					
ANR	4707590	Identifier	set_priv		4707544	0					
ANR	4707591	ArgumentList	saved_priv		4707544	1					
ANR	4707592	Argument	saved_priv		4707544	0					
ANR	4707593	Identifier	saved_priv		4707544	0					
ANR	4707594	ReturnStatement	return retval ;	1305:1:33780:33793	4707544	5	True				
ANR	4707595	Identifier	retval		4707544	0					
ANR	4707596	ReturnType	bool		4707544	1					
ANR	4707597	Identifier	mkdir_and_parents_if_needed		4707544	2					
ANR	4707598	ParameterList	"const char * path , mode_t mode , priv_state priv"		4707544	3					
ANR	4707599	Parameter	const char * path	1291:34:33507:33522	4707544	0	True				
ANR	4707600	ParameterType	const char *		4707544	0					
ANR	4707601	Identifier	path		4707544	1					
ANR	4707602	Parameter	mode_t mode	1291:52:33525:33535	4707544	1	True				
ANR	4707603	ParameterType	mode_t		4707544	0					
ANR	4707604	Identifier	mode		4707544	1					
ANR	4707605	Parameter	priv_state priv	1291:65:33538:33552	4707544	2	True				
ANR	4707606	ParameterType	priv_state		4707544	0					
ANR	4707607	Identifier	priv		4707544	1					
ANR	4707608	CFGEntryNode	ENTRY		4707544		True				
ANR	4707609	CFGExitNode	EXIT		4707544		True				
ANR	4707610	Symbol	mode		4707544						
ANR	4707611	Symbol	mkdir_and_parents_if_needed_cur_priv		4707544						
ANR	4707612	Symbol	path		4707544						
ANR	4707613	Symbol	set_priv		4707544						
ANR	4707614	Symbol	saved_priv		4707544						
ANR	4707615	Symbol	priv		4707544						
ANR	4707616	Symbol	retval		4707544						
ANR	4707617	Symbol	PRIV_UNKNOWN		4707544						
ANR	4707618	Function	make_parents_if_needed	1308:0:33798:34044							
ANR	4707619	FunctionDef	"make_parents_if_needed (const char * path , mode_t mode , priv_state priv)"		4707618	0					
ANR	4707620	CompoundStatement		1309:0:33876:34044	4707618	0					
ANR	4707621	IdentifierDeclStatement	"std :: string parent , junk ;"	1310:1:33879:33902	4707618	0	True				
ANR	4707622	IdentifierDecl	parent		4707618	0					
ANR	4707623	IdentifierDeclType	std :: string		4707618	0					
ANR	4707624	Identifier	parent		4707618	1					
ANR	4707625	IdentifierDecl	junk		4707618	1					
ANR	4707626	IdentifierDeclType	std :: string		4707618	0					
ANR	4707627	Identifier	junk		4707618	1					
ANR	4707628	ExpressionStatement	ASSERT ( path )	1312:1:33906:33920	4707618	1	True				
ANR	4707629	CallExpression	ASSERT ( path )		4707618	0					
ANR	4707630	Callee	ASSERT		4707618	0					
ANR	4707631	Identifier	ASSERT		4707618	0					
ANR	4707632	ArgumentList	path		4707618	1					
ANR	4707633	Argument	path		4707618	0					
ANR	4707634	Identifier	path		4707618	0					
ANR	4707635	IfStatement	"if ( filename_split ( path , parent , junk ) )"		4707618	2					
ANR	4707636	Condition	"filename_split ( path , parent , junk )"	1314:4:33927:33958	4707618	0	True				
ANR	4707637	CallExpression	"filename_split ( path , parent , junk )"		4707618	0					
ANR	4707638	Callee	filename_split		4707618	0					
ANR	4707639	Identifier	filename_split		4707618	0					
ANR	4707640	ArgumentList	path		4707618	1					
ANR	4707641	Argument	path		4707618	0					
ANR	4707642	Identifier	path		4707618	0					
ANR	4707643	Argument	parent		4707618	1					
ANR	4707644	Identifier	parent		4707618	0					
ANR	4707645	Argument	junk		4707618	2					
ANR	4707646	Identifier	junk		4707618	0					
ANR	4707647	ReturnStatement	"return mkdir_and_parents_if_needed ( parent . c_str ( ) , mode , priv ) ;"	1315:2:33963:34027	4707618	1	True				
ANR	4707648	CallExpression	"mkdir_and_parents_if_needed ( parent . c_str ( ) , mode , priv )"		4707618	0					
ANR	4707649	Callee	mkdir_and_parents_if_needed		4707618	0					
ANR	4707650	Identifier	mkdir_and_parents_if_needed		4707618	0					
ANR	4707651	ArgumentList	parent . c_str ( )		4707618	1					
ANR	4707652	Argument	parent . c_str ( )		4707618	0					
ANR	4707653	CallExpression	parent . c_str ( )		4707618	0					
ANR	4707654	Callee	parent . c_str		4707618	0					
ANR	4707655	MemberAccess	parent . c_str		4707618	0					
ANR	4707656	Identifier	parent		4707618	0					
ANR	4707657	Identifier	c_str		4707618	1					
ANR	4707658	ArgumentList			4707618	1					
ANR	4707659	Argument	mode		4707618	1					
ANR	4707660	Identifier	mode		4707618	0					
ANR	4707661	Argument	priv		4707618	2					
ANR	4707662	Identifier	priv		4707618	0					
ANR	4707663	ReturnStatement	return false ;	1316:1:34030:34042	4707618	3	True				
ANR	4707664	Identifier	false		4707618	0					
ANR	4707665	ReturnType	bool		4707618	1					
ANR	4707666	Identifier	make_parents_if_needed		4707618	2					
ANR	4707667	ParameterList	"const char * path , mode_t mode , priv_state priv"		4707618	3					
ANR	4707668	Parameter	const char * path	1308:29:33827:33842	4707618	0	True				
ANR	4707669	ParameterType	const char *		4707618	0					
ANR	4707670	Identifier	path		4707618	1					
ANR	4707671	Parameter	mode_t mode	1308:47:33845:33855	4707618	1	True				
ANR	4707672	ParameterType	mode_t		4707618	0					
ANR	4707673	Identifier	mode		4707618	1					
ANR	4707674	Parameter	priv_state priv	1308:60:33858:33872	4707618	2	True				
ANR	4707675	ParameterType	priv_state		4707618	0					
ANR	4707676	Identifier	priv		4707618	1					
ANR	4707677	CFGEntryNode	ENTRY		4707618		True				
ANR	4707678	CFGExitNode	EXIT		4707618		True				
ANR	4707679	Symbol	mode		4707618						
ANR	4707680	Symbol	path		4707618						
ANR	4707681	Symbol	parent		4707618						
ANR	4707682	Symbol	false		4707618						
ANR	4707683	Symbol	junk		4707618						
ANR	4707684	Symbol	parent . c_str		4707618						
ANR	4707685	Symbol	priv		4707618						
ANR	4707686	Symbol	filename_split		4707618						
ANR	4707687	Symbol	mkdir_and_parents_if_needed		4707618						
