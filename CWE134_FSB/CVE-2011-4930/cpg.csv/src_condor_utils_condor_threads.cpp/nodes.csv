command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4668716	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_condor_threads.cpp								
ANR	4668717	DeclStmt									
ANR	4668718	Decl							CRITICAL_SECTION	CRITICAL_SECTION	pthread_mutex_t
ANR	4668719	DeclStmt									
ANR	4668720	Decl							DWORD	DWORD	pthread_t
ANR	4668721	DeclStmt									
ANR	4668722	Decl							int	int	pthread_mutexattr_t
ANR	4668723	DeclStmt									
ANR	4668724	Decl							int	int	pthread_condattr_t
ANR	4668725	DeclStmt									
ANR	4668726	Decl							int	int	pthread_key_t
ANR	4668727	Function	pthread_self	68:0:2051:2115							
ANR	4668728	FunctionDef	pthread_self ()		4668727	0					
ANR	4668729	CompoundStatement		70:0:2083:2115	4668727	0					
ANR	4668730	ReturnStatement	return GetCurrentThreadId ( ) ;	71:1:2086:2113	4668727	0	True				
ANR	4668731	CallExpression	GetCurrentThreadId ( )		4668727	0					
ANR	4668732	Callee	GetCurrentThreadId		4668727	0					
ANR	4668733	Identifier	GetCurrentThreadId		4668727	0					
ANR	4668734	ArgumentList			4668727	1					
ANR	4668735	ReturnType	static pthread_t		4668727	1					
ANR	4668736	Identifier	pthread_self		4668727	2					
ANR	4668737	ParameterList			4668727	3					
ANR	4668738	CFGEntryNode	ENTRY		4668727		True				
ANR	4668739	CFGExitNode	EXIT		4668727		True				
ANR	4668740	Symbol	GetCurrentThreadId		4668727						
ANR	4668741	Function	pthread_equal	74:0:2118:2199							
ANR	4668742	FunctionDef	"pthread_equal (pthread_t t1 , pthread_t t2)"		4668741	0					
ANR	4668743	CompoundStatement		76:0:2171:2199	4668741	0					
ANR	4668744	ReturnStatement	return t1 == t2 ? 1 : 0 ;	77:1:2174:2197	4668741	0	True				
ANR	4668745	ConditionalExpression	t1 == t2 ? 1 : 0		4668741	0					
ANR	4668746	Condition	t1 == t2		4668741	0					
ANR	4668747	EqualityExpression	t1 == t2		4668741	0		==			
ANR	4668748	Identifier	t1		4668741	0					
ANR	4668749	Identifier	t2		4668741	1					
ANR	4668750	PrimaryExpression	1		4668741	1					
ANR	4668751	PrimaryExpression	0		4668741	2					
ANR	4668752	ReturnType	static int		4668741	1					
ANR	4668753	Identifier	pthread_equal		4668741	2					
ANR	4668754	ParameterList	"pthread_t t1 , pthread_t t2"		4668741	3					
ANR	4668755	Parameter	pthread_t t1	75:14:2143:2154	4668741	0	True				
ANR	4668756	ParameterType	pthread_t		4668741	0					
ANR	4668757	Identifier	t1		4668741	1					
ANR	4668758	Parameter	pthread_t t2	75:28:2157:2168	4668741	1	True				
ANR	4668759	ParameterType	pthread_t		4668741	0					
ANR	4668760	Identifier	t2		4668741	1					
ANR	4668761	CFGEntryNode	ENTRY		4668741		True				
ANR	4668762	CFGExitNode	EXIT		4668741		True				
ANR	4668763	Symbol	t1		4668741						
ANR	4668764	Symbol	t2		4668741						
ANR	4668765	Function	pthread_mutex_destroy	94:0:2419:2514							
ANR	4668766	FunctionDef	pthread_mutex_destroy (pthread_mutex_t * mv)		4668765	0					
ANR	4668767	CompoundStatement		96:0:2473:2514	4668765	0					
ANR	4668768	ExpressionStatement	DeleteCriticalSection ( mv )	97:1:2476:2501	4668765	0	True				
ANR	4668769	CallExpression	DeleteCriticalSection ( mv )		4668765	0					
ANR	4668770	Callee	DeleteCriticalSection		4668765	0					
ANR	4668771	Identifier	DeleteCriticalSection		4668765	0					
ANR	4668772	ArgumentList	mv		4668765	1					
ANR	4668773	Argument	mv		4668765	0					
ANR	4668774	Identifier	mv		4668765	0					
ANR	4668775	ReturnStatement	return 0 ;	98:1:2504:2512	4668765	1	True				
ANR	4668776	PrimaryExpression	0		4668765	0					
ANR	4668777	ReturnType	static int		4668765	1					
ANR	4668778	Identifier	pthread_mutex_destroy		4668765	2					
ANR	4668779	ParameterList	pthread_mutex_t * mv		4668765	3					
ANR	4668780	Parameter	pthread_mutex_t * mv	95:22:2452:2470	4668765	0	True				
ANR	4668781	ParameterType	pthread_mutex_t *		4668765	0					
ANR	4668782	Identifier	mv		4668765	1					
ANR	4668783	CFGEntryNode	ENTRY		4668765		True				
ANR	4668784	CFGExitNode	EXIT		4668765		True				
ANR	4668785	Symbol	mv		4668765						
ANR	4668786	Function	pthread_mutex_lock	101:0:2517:2610							
ANR	4668787	FunctionDef	pthread_mutex_lock (pthread_mutex_t * mv)		4668786	0					
ANR	4668788	CompoundStatement		103:0:2570:2610	4668786	0					
ANR	4668789	ExpressionStatement	EnterCriticalSection ( mv )	104:1:2573:2597	4668786	0	True				
ANR	4668790	CallExpression	EnterCriticalSection ( mv )		4668786	0					
ANR	4668791	Callee	EnterCriticalSection		4668786	0					
ANR	4668792	Identifier	EnterCriticalSection		4668786	0					
ANR	4668793	ArgumentList	mv		4668786	1					
ANR	4668794	Argument	mv		4668786	0					
ANR	4668795	Identifier	mv		4668786	0					
ANR	4668796	ReturnStatement	return 0 ;	105:1:2600:2608	4668786	1	True				
ANR	4668797	PrimaryExpression	0		4668786	0					
ANR	4668798	ReturnType	static int		4668786	1					
ANR	4668799	Identifier	pthread_mutex_lock		4668786	2					
ANR	4668800	ParameterList	pthread_mutex_t * mv		4668786	3					
ANR	4668801	Parameter	pthread_mutex_t * mv	102:20:2549:2567	4668786	0	True				
ANR	4668802	ParameterType	pthread_mutex_t *		4668786	0					
ANR	4668803	Identifier	mv		4668786	1					
ANR	4668804	CFGEntryNode	ENTRY		4668786		True				
ANR	4668805	CFGExitNode	EXIT		4668786		True				
ANR	4668806	Symbol	mv		4668786						
ANR	4668807	Function	pthread_mutex_unlock	108:0:2613:2706							
ANR	4668808	FunctionDef	pthread_mutex_unlock (pthread_mutex_t * mv)		4668807	0					
ANR	4668809	CompoundStatement		110:0:2666:2706	4668807	0					
ANR	4668810	ExpressionStatement	LeaveCriticalSection ( mv )	111:1:2669:2693	4668807	0	True				
ANR	4668811	CallExpression	LeaveCriticalSection ( mv )		4668807	0					
ANR	4668812	Callee	LeaveCriticalSection		4668807	0					
ANR	4668813	Identifier	LeaveCriticalSection		4668807	0					
ANR	4668814	ArgumentList	mv		4668807	1					
ANR	4668815	Argument	mv		4668807	0					
ANR	4668816	Identifier	mv		4668807	0					
ANR	4668817	ReturnStatement	return 0 ;	112:1:2696:2704	4668807	1	True				
ANR	4668818	PrimaryExpression	0		4668807	0					
ANR	4668819	ReturnType	static int		4668807	1					
ANR	4668820	Identifier	pthread_mutex_unlock		4668807	2					
ANR	4668821	ParameterList	pthread_mutex_t * mv		4668807	3					
ANR	4668822	Parameter	pthread_mutex_t * mv	109:21:2645:2663	4668807	0	True				
ANR	4668823	ParameterType	pthread_mutex_t *		4668807	0					
ANR	4668824	Identifier	mv		4668807	1					
ANR	4668825	CFGEntryNode	ENTRY		4668807		True				
ANR	4668826	CFGExitNode	EXIT		4668807		True				
ANR	4668827	Symbol	mv		4668807						
ANR	4668828	ClassDef	<unnamed>	115:7:2716:2778							
ANR	4668829	ClassDef	<unnamed>	122:8:2790:3034							
ANR	4668830	DeclStmt									
ANR	4668831	Decl							u_int	u_int	waiters_count_
ANR	4668832	DeclStmt									
ANR	4668833	Decl							CRITICAL_SECTION	CRITICAL_SECTION	waiters_count_lock_
ANR	4668834	DeclStmt									
ANR	4668835	Decl							HANDLE	HANDLE [ MAX_EVENTS ]	events_
ANR	4668836	DeclStmt									
ANR	4668837	Decl									pthread_cond_t
ANR	4668838	Function	pthread_cond_wait	163:0:4053:5258							
ANR	4668839	FunctionDef	"pthread_cond_wait (pthread_cond_t * cv , pthread_mutex_t * external_mutex)"		4668838	0					
ANR	4668840	CompoundStatement		166:0:4156:5258	4668838	0					
ANR	4668841	ExpressionStatement	EnterCriticalSection ( & cv -> waiters_count_lock_ )	168:2:4188:4235	4668838	0	True				
ANR	4668842	CallExpression	EnterCriticalSection ( & cv -> waiters_count_lock_ )		4668838	0					
ANR	4668843	Callee	EnterCriticalSection		4668838	0					
ANR	4668844	Identifier	EnterCriticalSection		4668838	0					
ANR	4668845	ArgumentList	& cv -> waiters_count_lock_		4668838	1					
ANR	4668846	Argument	& cv -> waiters_count_lock_		4668838	0					
ANR	4668847	UnaryOperationExpression	& cv -> waiters_count_lock_		4668838	0					
ANR	4668848	UnaryOperator	&		4668838	0					
ANR	4668849	PtrMemberAccess	cv -> waiters_count_lock_		4668838	1					
ANR	4668850	Identifier	cv		4668838	0					
ANR	4668851	Identifier	waiters_count_lock_		4668838	1					
ANR	4668852	ExpressionStatement	cv -> waiters_count_ ++	169:2:4239:4259	4668838	1	True				
ANR	4668853	PostIncDecOperationExpression	cv -> waiters_count_ ++		4668838	0					
ANR	4668854	PtrMemberAccess	cv -> waiters_count_		4668838	0					
ANR	4668855	Identifier	cv		4668838	0					
ANR	4668856	Identifier	waiters_count_		4668838	1					
ANR	4668857	IncDec	++		4668838	1					
ANR	4668858	ExpressionStatement	LeaveCriticalSection ( & cv -> waiters_count_lock_ )	170:2:4263:4310	4668838	2	True				
ANR	4668859	CallExpression	LeaveCriticalSection ( & cv -> waiters_count_lock_ )		4668838	0					
ANR	4668860	Callee	LeaveCriticalSection		4668838	0					
ANR	4668861	Identifier	LeaveCriticalSection		4668838	0					
ANR	4668862	ArgumentList	& cv -> waiters_count_lock_		4668838	1					
ANR	4668863	Argument	& cv -> waiters_count_lock_		4668838	0					
ANR	4668864	UnaryOperationExpression	& cv -> waiters_count_lock_		4668838	0					
ANR	4668865	UnaryOperator	&		4668838	0					
ANR	4668866	PtrMemberAccess	cv -> waiters_count_lock_		4668838	1					
ANR	4668867	Identifier	cv		4668838	0					
ANR	4668868	Identifier	waiters_count_lock_		4668838	1					
ANR	4668869	ExpressionStatement	LeaveCriticalSection ( external_mutex )	175:2:4487:4524	4668838	3	True				
ANR	4668870	CallExpression	LeaveCriticalSection ( external_mutex )		4668838	0					
ANR	4668871	Callee	LeaveCriticalSection		4668838	0					
ANR	4668872	Identifier	LeaveCriticalSection		4668838	0					
ANR	4668873	ArgumentList	external_mutex		4668838	1					
ANR	4668874	Argument	external_mutex		4668838	0					
ANR	4668875	Identifier	external_mutex		4668838	0					
ANR	4668876	IdentifierDeclStatement	"int result = WaitForMultipleObjects ( 2 , cv -> events_ , FALSE , INFINITE ) ;"	179:2:4664:4733	4668838	4	True				
ANR	4668877	IdentifierDecl	"result = WaitForMultipleObjects ( 2 , cv -> events_ , FALSE , INFINITE )"		4668838	0					
ANR	4668878	IdentifierDeclType	int		4668838	0					
ANR	4668879	Identifier	result		4668838	1					
ANR	4668880	AssignmentExpression	"result = WaitForMultipleObjects ( 2 , cv -> events_ , FALSE , INFINITE )"		4668838	2		=			
ANR	4668881	Identifier	result		4668838	0					
ANR	4668882	CallExpression	"WaitForMultipleObjects ( 2 , cv -> events_ , FALSE , INFINITE )"		4668838	1					
ANR	4668883	Callee	WaitForMultipleObjects		4668838	0					
ANR	4668884	Identifier	WaitForMultipleObjects		4668838	0					
ANR	4668885	ArgumentList	2		4668838	1					
ANR	4668886	Argument	2		4668838	0					
ANR	4668887	PrimaryExpression	2		4668838	0					
ANR	4668888	Argument	cv -> events_		4668838	1					
ANR	4668889	PtrMemberAccess	cv -> events_		4668838	0					
ANR	4668890	Identifier	cv		4668838	0					
ANR	4668891	Identifier	events_		4668838	1					
ANR	4668892	Argument	FALSE		4668838	2					
ANR	4668893	Identifier	FALSE		4668838	0					
ANR	4668894	Argument	INFINITE		4668838	3					
ANR	4668895	Identifier	INFINITE		4668838	0					
ANR	4668896	ExpressionStatement	EnterCriticalSection ( & cv -> waiters_count_lock_ )	181:2:4738:4785	4668838	5	True				
ANR	4668897	CallExpression	EnterCriticalSection ( & cv -> waiters_count_lock_ )		4668838	0					
ANR	4668898	Callee	EnterCriticalSection		4668838	0					
ANR	4668899	Identifier	EnterCriticalSection		4668838	0					
ANR	4668900	ArgumentList	& cv -> waiters_count_lock_		4668838	1					
ANR	4668901	Argument	& cv -> waiters_count_lock_		4668838	0					
ANR	4668902	UnaryOperationExpression	& cv -> waiters_count_lock_		4668838	0					
ANR	4668903	UnaryOperator	&		4668838	0					
ANR	4668904	PtrMemberAccess	cv -> waiters_count_lock_		4668838	1					
ANR	4668905	Identifier	cv		4668838	0					
ANR	4668906	Identifier	waiters_count_lock_		4668838	1					
ANR	4668907	ExpressionStatement	cv -> waiters_count_ --	182:2:4789:4809	4668838	6	True				
ANR	4668908	PostIncDecOperationExpression	cv -> waiters_count_ --		4668838	0					
ANR	4668909	PtrMemberAccess	cv -> waiters_count_		4668838	0					
ANR	4668910	Identifier	cv		4668838	0					
ANR	4668911	Identifier	waiters_count_		4668838	1					
ANR	4668912	IncDec	--		4668838	1					
ANR	4668913	IdentifierDeclStatement	int last_waiter = result == WAIT_OBJECT_0 + BROADCAST && cv -> waiters_count_ == 0 ;	183:2:4813:4902	4668838	7	True				
ANR	4668914	IdentifierDecl	last_waiter = result == WAIT_OBJECT_0 + BROADCAST && cv -> waiters_count_ == 0		4668838	0					
ANR	4668915	IdentifierDeclType	int		4668838	0					
ANR	4668916	Identifier	last_waiter		4668838	1					
ANR	4668917	AssignmentExpression	last_waiter = result == WAIT_OBJECT_0 + BROADCAST && cv -> waiters_count_ == 0		4668838	2		=			
ANR	4668918	Identifier	last_waiter		4668838	0					
ANR	4668919	AndExpression	result == WAIT_OBJECT_0 + BROADCAST && cv -> waiters_count_ == 0		4668838	1		&&			
ANR	4668920	EqualityExpression	result == WAIT_OBJECT_0 + BROADCAST		4668838	0		==			
ANR	4668921	Identifier	result		4668838	0					
ANR	4668922	AdditiveExpression	WAIT_OBJECT_0 + BROADCAST		4668838	1		+			
ANR	4668923	Identifier	WAIT_OBJECT_0		4668838	0					
ANR	4668924	Identifier	BROADCAST		4668838	1					
ANR	4668925	EqualityExpression	cv -> waiters_count_ == 0		4668838	1		==			
ANR	4668926	PtrMemberAccess	cv -> waiters_count_		4668838	0					
ANR	4668927	Identifier	cv		4668838	0					
ANR	4668928	Identifier	waiters_count_		4668838	1					
ANR	4668929	PrimaryExpression	0		4668838	1					
ANR	4668930	ExpressionStatement	LeaveCriticalSection ( & cv -> waiters_count_lock_ )	186:2:4906:4953	4668838	8	True				
ANR	4668931	CallExpression	LeaveCriticalSection ( & cv -> waiters_count_lock_ )		4668838	0					
ANR	4668932	Callee	LeaveCriticalSection		4668838	0					
ANR	4668933	Identifier	LeaveCriticalSection		4668838	0					
ANR	4668934	ArgumentList	& cv -> waiters_count_lock_		4668838	1					
ANR	4668935	Argument	& cv -> waiters_count_lock_		4668838	0					
ANR	4668936	UnaryOperationExpression	& cv -> waiters_count_lock_		4668838	0					
ANR	4668937	UnaryOperator	&		4668838	0					
ANR	4668938	PtrMemberAccess	cv -> waiters_count_lock_		4668838	1					
ANR	4668939	Identifier	cv		4668838	0					
ANR	4668940	Identifier	waiters_count_lock_		4668838	1					
ANR	4668941	IfStatement	if ( last_waiter )		4668838	9					
ANR	4668942	Condition	last_waiter	189:6:5012:5022	4668838	0	True				
ANR	4668943	Identifier	last_waiter		4668838	0					
ANR	4668944	ExpressionStatement	ResetEvent ( cv -> events_ [ BROADCAST ] )	192:4:5128:5163	4668838	1	True				
ANR	4668945	CallExpression	ResetEvent ( cv -> events_ [ BROADCAST ] )		4668838	0					
ANR	4668946	Callee	ResetEvent		4668838	0					
ANR	4668947	Identifier	ResetEvent		4668838	0					
ANR	4668948	ArgumentList	cv -> events_ [ BROADCAST ]		4668838	1					
ANR	4668949	Argument	cv -> events_ [ BROADCAST ]		4668838	0					
ANR	4668950	ArrayIndexing	cv -> events_ [ BROADCAST ]		4668838	0					
ANR	4668951	PtrMemberAccess	cv -> events_		4668838	0					
ANR	4668952	Identifier	cv		4668838	0					
ANR	4668953	Identifier	events_		4668838	1					
ANR	4668954	Identifier	BROADCAST		4668838	1					
ANR	4668955	ExpressionStatement	EnterCriticalSection ( external_mutex )	195:2:5206:5243	4668838	10	True				
ANR	4668956	CallExpression	EnterCriticalSection ( external_mutex )		4668838	0					
ANR	4668957	Callee	EnterCriticalSection		4668838	0					
ANR	4668958	Identifier	EnterCriticalSection		4668838	0					
ANR	4668959	ArgumentList	external_mutex		4668838	1					
ANR	4668960	Argument	external_mutex		4668838	0					
ANR	4668961	Identifier	external_mutex		4668838	0					
ANR	4668962	ReturnStatement	return 0 ;	197:2:5248:5256	4668838	11	True				
ANR	4668963	PrimaryExpression	0		4668838	0					
ANR	4668964	ReturnType	static int		4668838	1					
ANR	4668965	Identifier	pthread_cond_wait		4668838	2					
ANR	4668966	ParameterList	"pthread_cond_t * cv , pthread_mutex_t * external_mutex"		4668838	3					
ANR	4668967	Parameter	pthread_cond_t * cv	164:19:4084:4101	4668838	0	True				
ANR	4668968	ParameterType	pthread_cond_t *		4668838	0					
ANR	4668969	Identifier	cv		4668838	1					
ANR	4668970	Parameter	pthread_mutex_t * external_mutex	165:19:4123:4153	4668838	1	True				
ANR	4668971	ParameterType	pthread_mutex_t *		4668838	0					
ANR	4668972	Identifier	external_mutex		4668838	1					
ANR	4668973	CFGEntryNode	ENTRY		4668838		True				
ANR	4668974	CFGExitNode	EXIT		4668838		True				
ANR	4668975	Symbol	cv -> waiters_count_		4668838						
ANR	4668976	Symbol	* BROADCAST		4668838						
ANR	4668977	Symbol	external_mutex		4668838						
ANR	4668978	Symbol	INFINITE		4668838						
ANR	4668979	Symbol	& cv -> waiters_count_lock_		4668838						
ANR	4668980	Symbol	result		4668838						
ANR	4668981	Symbol	cv		4668838						
ANR	4668982	Symbol	last_waiter		4668838						
ANR	4668983	Symbol	BROADCAST		4668838						
ANR	4668984	Symbol	WAIT_OBJECT_0		4668838						
ANR	4668985	Symbol	* cv		4668838						
ANR	4668986	Symbol	FALSE		4668838						
ANR	4668987	Symbol	* cv -> events_		4668838						
ANR	4668988	Symbol	cv -> events_		4668838						
ANR	4668989	Symbol	* * cv		4668838						
ANR	4668990	Symbol	WaitForMultipleObjects		4668838						
ANR	4668991	Function	pthread_cond_broadcast	200:0:5261:5567							
ANR	4668992	FunctionDef	pthread_cond_broadcast (pthread_cond_t * cv)		4668991	0					
ANR	4668993	CompoundStatement		202:0:5317:5567	4668991	0					
ANR	4668994	ExpressionStatement	EnterCriticalSection ( & cv -> waiters_count_lock_ )	204:2:5349:5396	4668991	0	True				
ANR	4668995	CallExpression	EnterCriticalSection ( & cv -> waiters_count_lock_ )		4668991	0					
ANR	4668996	Callee	EnterCriticalSection		4668991	0					
ANR	4668997	Identifier	EnterCriticalSection		4668991	0					
ANR	4668998	ArgumentList	& cv -> waiters_count_lock_		4668991	1					
ANR	4668999	Argument	& cv -> waiters_count_lock_		4668991	0					
ANR	4669000	UnaryOperationExpression	& cv -> waiters_count_lock_		4668991	0					
ANR	4669001	UnaryOperator	&		4668991	0					
ANR	4669002	PtrMemberAccess	cv -> waiters_count_lock_		4668991	1					
ANR	4669003	Identifier	cv		4668991	0					
ANR	4669004	Identifier	waiters_count_lock_		4668991	1					
ANR	4669005	IdentifierDeclStatement	int have_waiters = cv -> waiters_count_ > 0 ;	205:2:5400:5441	4668991	1	True				
ANR	4669006	IdentifierDecl	have_waiters = cv -> waiters_count_ > 0		4668991	0					
ANR	4669007	IdentifierDeclType	int		4668991	0					
ANR	4669008	Identifier	have_waiters		4668991	1					
ANR	4669009	AssignmentExpression	have_waiters = cv -> waiters_count_ > 0		4668991	2		=			
ANR	4669010	Identifier	have_waiters		4668991	0					
ANR	4669011	RelationalExpression	cv -> waiters_count_ > 0		4668991	1		>			
ANR	4669012	PtrMemberAccess	cv -> waiters_count_		4668991	0					
ANR	4669013	Identifier	cv		4668991	0					
ANR	4669014	Identifier	waiters_count_		4668991	1					
ANR	4669015	PrimaryExpression	0		4668991	1					
ANR	4669016	ExpressionStatement	LeaveCriticalSection ( & cv -> waiters_count_lock_ )	206:2:5445:5492	4668991	2	True				
ANR	4669017	CallExpression	LeaveCriticalSection ( & cv -> waiters_count_lock_ )		4668991	0					
ANR	4669018	Callee	LeaveCriticalSection		4668991	0					
ANR	4669019	Identifier	LeaveCriticalSection		4668991	0					
ANR	4669020	ArgumentList	& cv -> waiters_count_lock_		4668991	1					
ANR	4669021	Argument	& cv -> waiters_count_lock_		4668991	0					
ANR	4669022	UnaryOperationExpression	& cv -> waiters_count_lock_		4668991	0					
ANR	4669023	UnaryOperator	&		4668991	0					
ANR	4669024	PtrMemberAccess	cv -> waiters_count_lock_		4668991	1					
ANR	4669025	Identifier	cv		4668991	0					
ANR	4669026	Identifier	waiters_count_lock_		4668991	1					
ANR	4669027	IfStatement	if ( have_waiters )		4668991	3					
ANR	4669028	Condition	have_waiters	208:6:5501:5512	4668991	0	True				
ANR	4669029	Identifier	have_waiters		4668991	0					
ANR	4669030	ExpressionStatement	SetEvent ( cv -> events_ [ BROADCAST ] )	209:4:5519:5552	4668991	1	True				
ANR	4669031	CallExpression	SetEvent ( cv -> events_ [ BROADCAST ] )		4668991	0					
ANR	4669032	Callee	SetEvent		4668991	0					
ANR	4669033	Identifier	SetEvent		4668991	0					
ANR	4669034	ArgumentList	cv -> events_ [ BROADCAST ]		4668991	1					
ANR	4669035	Argument	cv -> events_ [ BROADCAST ]		4668991	0					
ANR	4669036	ArrayIndexing	cv -> events_ [ BROADCAST ]		4668991	0					
ANR	4669037	PtrMemberAccess	cv -> events_		4668991	0					
ANR	4669038	Identifier	cv		4668991	0					
ANR	4669039	Identifier	events_		4668991	1					
ANR	4669040	Identifier	BROADCAST		4668991	1					
ANR	4669041	ReturnStatement	return 0 ;	211:2:5557:5565	4668991	4	True				
ANR	4669042	PrimaryExpression	0		4668991	0					
ANR	4669043	ReturnType	static int		4668991	1					
ANR	4669044	Identifier	pthread_cond_broadcast		4668991	2					
ANR	4669045	ParameterList	pthread_cond_t * cv		4668991	3					
ANR	4669046	Parameter	pthread_cond_t * cv	201:24:5297:5314	4668991	0	True				
ANR	4669047	ParameterType	pthread_cond_t *		4668991	0					
ANR	4669048	Identifier	cv		4668991	1					
ANR	4669049	CFGEntryNode	ENTRY		4668991		True				
ANR	4669050	CFGExitNode	EXIT		4668991		True				
ANR	4669051	Symbol	cv -> waiters_count_		4668991						
ANR	4669052	Symbol	cv		4668991						
ANR	4669053	Symbol	* BROADCAST		4668991						
ANR	4669054	Symbol	BROADCAST		4668991						
ANR	4669055	Symbol	* cv		4668991						
ANR	4669056	Symbol	have_waiters		4668991						
ANR	4669057	Symbol	* cv -> events_		4668991						
ANR	4669058	Symbol	* * cv		4668991						
ANR	4669059	Symbol	cv -> events_		4668991						
ANR	4669060	Symbol	& cv -> waiters_count_lock_		4668991						
ANR	4669061	Function	pthread_cond_signal	214:0:5570:5870							
ANR	4669062	FunctionDef	pthread_cond_signal (pthread_cond_t * cv)		4669061	0					
ANR	4669063	CompoundStatement		216:0:5623:5870	4669061	0					
ANR	4669064	ExpressionStatement	EnterCriticalSection ( & cv -> waiters_count_lock_ )	218:2:5655:5702	4669061	0	True				
ANR	4669065	CallExpression	EnterCriticalSection ( & cv -> waiters_count_lock_ )		4669061	0					
ANR	4669066	Callee	EnterCriticalSection		4669061	0					
ANR	4669067	Identifier	EnterCriticalSection		4669061	0					
ANR	4669068	ArgumentList	& cv -> waiters_count_lock_		4669061	1					
ANR	4669069	Argument	& cv -> waiters_count_lock_		4669061	0					
ANR	4669070	UnaryOperationExpression	& cv -> waiters_count_lock_		4669061	0					
ANR	4669071	UnaryOperator	&		4669061	0					
ANR	4669072	PtrMemberAccess	cv -> waiters_count_lock_		4669061	1					
ANR	4669073	Identifier	cv		4669061	0					
ANR	4669074	Identifier	waiters_count_lock_		4669061	1					
ANR	4669075	IdentifierDeclStatement	int have_waiters = cv -> waiters_count_ > 0 ;	219:2:5706:5747	4669061	1	True				
ANR	4669076	IdentifierDecl	have_waiters = cv -> waiters_count_ > 0		4669061	0					
ANR	4669077	IdentifierDeclType	int		4669061	0					
ANR	4669078	Identifier	have_waiters		4669061	1					
ANR	4669079	AssignmentExpression	have_waiters = cv -> waiters_count_ > 0		4669061	2		=			
ANR	4669080	Identifier	have_waiters		4669061	0					
ANR	4669081	RelationalExpression	cv -> waiters_count_ > 0		4669061	1		>			
ANR	4669082	PtrMemberAccess	cv -> waiters_count_		4669061	0					
ANR	4669083	Identifier	cv		4669061	0					
ANR	4669084	Identifier	waiters_count_		4669061	1					
ANR	4669085	PrimaryExpression	0		4669061	1					
ANR	4669086	ExpressionStatement	LeaveCriticalSection ( & cv -> waiters_count_lock_ )	220:2:5751:5798	4669061	2	True				
ANR	4669087	CallExpression	LeaveCriticalSection ( & cv -> waiters_count_lock_ )		4669061	0					
ANR	4669088	Callee	LeaveCriticalSection		4669061	0					
ANR	4669089	Identifier	LeaveCriticalSection		4669061	0					
ANR	4669090	ArgumentList	& cv -> waiters_count_lock_		4669061	1					
ANR	4669091	Argument	& cv -> waiters_count_lock_		4669061	0					
ANR	4669092	UnaryOperationExpression	& cv -> waiters_count_lock_		4669061	0					
ANR	4669093	UnaryOperator	&		4669061	0					
ANR	4669094	PtrMemberAccess	cv -> waiters_count_lock_		4669061	1					
ANR	4669095	Identifier	cv		4669061	0					
ANR	4669096	Identifier	waiters_count_lock_		4669061	1					
ANR	4669097	IfStatement	if ( have_waiters )		4669061	3					
ANR	4669098	Condition	have_waiters	222:6:5807:5818	4669061	0	True				
ANR	4669099	Identifier	have_waiters		4669061	0					
ANR	4669100	ExpressionStatement	SetEvent ( cv -> events_ [ SIGNAL ] )	223:4:5825:5855	4669061	1	True				
ANR	4669101	CallExpression	SetEvent ( cv -> events_ [ SIGNAL ] )		4669061	0					
ANR	4669102	Callee	SetEvent		4669061	0					
ANR	4669103	Identifier	SetEvent		4669061	0					
ANR	4669104	ArgumentList	cv -> events_ [ SIGNAL ]		4669061	1					
ANR	4669105	Argument	cv -> events_ [ SIGNAL ]		4669061	0					
ANR	4669106	ArrayIndexing	cv -> events_ [ SIGNAL ]		4669061	0					
ANR	4669107	PtrMemberAccess	cv -> events_		4669061	0					
ANR	4669108	Identifier	cv		4669061	0					
ANR	4669109	Identifier	events_		4669061	1					
ANR	4669110	Identifier	SIGNAL		4669061	1					
ANR	4669111	ReturnStatement	return 0 ;	225:2:5860:5868	4669061	4	True				
ANR	4669112	PrimaryExpression	0		4669061	0					
ANR	4669113	ReturnType	static int		4669061	1					
ANR	4669114	Identifier	pthread_cond_signal		4669061	2					
ANR	4669115	ParameterList	pthread_cond_t * cv		4669061	3					
ANR	4669116	Parameter	pthread_cond_t * cv	215:21:5603:5620	4669061	0	True				
ANR	4669117	ParameterType	pthread_cond_t *		4669061	0					
ANR	4669118	Identifier	cv		4669061	1					
ANR	4669119	CFGEntryNode	ENTRY		4669061		True				
ANR	4669120	CFGExitNode	EXIT		4669061		True				
ANR	4669121	Symbol	SIGNAL		4669061						
ANR	4669122	Symbol	cv -> waiters_count_		4669061						
ANR	4669123	Symbol	cv		4669061						
ANR	4669124	Symbol	* cv		4669061						
ANR	4669125	Symbol	have_waiters		4669061						
ANR	4669126	Symbol	* cv -> events_		4669061						
ANR	4669127	Symbol	cv -> events_		4669061						
ANR	4669128	Symbol	* * cv		4669061						
ANR	4669129	Symbol	& cv -> waiters_count_lock_		4669061						
ANR	4669130	Symbol	* SIGNAL		4669061						
ANR	4669131	DeclStmt									
ANR	4669132	Decl							int	int	ThreadImplementation :: m_CurrentTid
ANR	4669133	DeclStmt									
ANR	4669134	Decl							ThreadImplementation	ThreadImplementation *	TI
ANR	4669135	Function	WorkerThread :: WorkerThread	251:0:6508:6705							
ANR	4669136	FunctionDef	WorkerThread :: WorkerThread ()		4669135	0					
ANR	4669137	CompoundStatement		252:0:6537:6705	4669135	0					
ANR	4669138	ExpressionStatement	name_ = NULL	253:1:6540:6552	4669135	0	True				
ANR	4669139	AssignmentExpression	name_ = NULL		4669135	0		=			
ANR	4669140	Identifier	name_		4669135	0					
ANR	4669141	Identifier	NULL		4669135	1					
ANR	4669142	ExpressionStatement	routine_ = NULL	254:1:6555:6570	4669135	1	True				
ANR	4669143	AssignmentExpression	routine_ = NULL		4669135	0		=			
ANR	4669144	Identifier	routine_		4669135	0					
ANR	4669145	Identifier	NULL		4669135	1					
ANR	4669146	ExpressionStatement	arg_ = NULL	255:1:6573:6584	4669135	2	True				
ANR	4669147	AssignmentExpression	arg_ = NULL		4669135	0		=			
ANR	4669148	Identifier	arg_		4669135	0					
ANR	4669149	Identifier	NULL		4669135	1					
ANR	4669150	ExpressionStatement	user_pointer_ = NULL	256:1:6587:6607	4669135	3	True				
ANR	4669151	AssignmentExpression	user_pointer_ = NULL		4669135	0		=			
ANR	4669152	Identifier	user_pointer_		4669135	0					
ANR	4669153	Identifier	NULL		4669135	1					
ANR	4669154	ExpressionStatement	tid_ = 0	257:1:6610:6618	4669135	4	True				
ANR	4669155	AssignmentExpression	tid_ = 0		4669135	0		=			
ANR	4669156	Identifier	tid_		4669135	0					
ANR	4669157	PrimaryExpression	0		4669135	1					
ANR	4669158	ExpressionStatement	enable_parallel_flag_ = false	258:1:6621:6650	4669135	5	True				
ANR	4669159	AssignmentExpression	enable_parallel_flag_ = false		4669135	0		=			
ANR	4669160	Identifier	enable_parallel_flag_		4669135	0					
ANR	4669161	Identifier	false		4669135	1					
ANR	4669162	ExpressionStatement	parallel_mode_count_ = 0	259:1:6653:6677	4669135	6	True				
ANR	4669163	AssignmentExpression	parallel_mode_count_ = 0		4669135	0		=			
ANR	4669164	Identifier	parallel_mode_count_		4669135	0					
ANR	4669165	PrimaryExpression	0		4669135	1					
ANR	4669166	ExpressionStatement	status_ = THREAD_UNBORN	260:1:6680:6703	4669135	7	True				
ANR	4669167	AssignmentExpression	status_ = THREAD_UNBORN		4669135	0		=			
ANR	4669168	Identifier	status_		4669135	0					
ANR	4669169	Identifier	THREAD_UNBORN		4669135	1					
ANR	4669170	Identifier	WorkerThread :: WorkerThread		4669135	1					
ANR	4669171	ParameterList			4669135	2					
ANR	4669172	CFGEntryNode	ENTRY		4669135		True				
ANR	4669173	CFGExitNode	EXIT		4669135		True				
ANR	4669174	Symbol	THREAD_UNBORN		4669135						
ANR	4669175	Symbol	status_		4669135						
ANR	4669176	Symbol	NULL		4669135						
ANR	4669177	Symbol	arg_		4669135						
ANR	4669178	Symbol	tid_		4669135						
ANR	4669179	Symbol	false		4669135						
ANR	4669180	Symbol	enable_parallel_flag_		4669135						
ANR	4669181	Symbol	user_pointer_		4669135						
ANR	4669182	Symbol	name_		4669135						
ANR	4669183	Symbol	routine_		4669135						
ANR	4669184	Symbol	parallel_mode_count_		4669135						
ANR	4669185	Function	WorkerThread :: WorkerThread	263:0:6708:7022							
ANR	4669186	FunctionDef	"WorkerThread :: WorkerThread (const char * name , condor_thread_func_t routine , void * arg)"		4669185	0					
ANR	4669187	CompoundStatement		264:0:6794:7022	4669185	0					
ANR	4669188	ExpressionStatement	name_ = NULL	265:1:6797:6809	4669185	0	True				
ANR	4669189	AssignmentExpression	name_ = NULL		4669185	0		=			
ANR	4669190	Identifier	name_		4669185	0					
ANR	4669191	Identifier	NULL		4669185	1					
ANR	4669192	ExpressionStatement	routine_ = NULL	266:1:6812:6827	4669185	1	True				
ANR	4669193	AssignmentExpression	routine_ = NULL		4669185	0		=			
ANR	4669194	Identifier	routine_		4669185	0					
ANR	4669195	Identifier	NULL		4669185	1					
ANR	4669196	ExpressionStatement	arg_ = NULL	267:1:6830:6841	4669185	2	True				
ANR	4669197	AssignmentExpression	arg_ = NULL		4669185	0		=			
ANR	4669198	Identifier	arg_		4669185	0					
ANR	4669199	Identifier	NULL		4669185	1					
ANR	4669200	ExpressionStatement	user_pointer_ = NULL	268:1:6844:6864	4669185	3	True				
ANR	4669201	AssignmentExpression	user_pointer_ = NULL		4669185	0		=			
ANR	4669202	Identifier	user_pointer_		4669185	0					
ANR	4669203	Identifier	NULL		4669185	1					
ANR	4669204	ExpressionStatement	tid_ = 0	269:1:6867:6875	4669185	4	True				
ANR	4669205	AssignmentExpression	tid_ = 0		4669185	0		=			
ANR	4669206	Identifier	tid_		4669185	0					
ANR	4669207	PrimaryExpression	0		4669185	1					
ANR	4669208	ExpressionStatement	enable_parallel_flag_ = false	270:1:6878:6907	4669185	5	True				
ANR	4669209	AssignmentExpression	enable_parallel_flag_ = false		4669185	0		=			
ANR	4669210	Identifier	enable_parallel_flag_		4669185	0					
ANR	4669211	Identifier	false		4669185	1					
ANR	4669212	ExpressionStatement	parallel_mode_count_ = 0	271:1:6910:6934	4669185	6	True				
ANR	4669213	AssignmentExpression	parallel_mode_count_ = 0		4669185	0		=			
ANR	4669214	Identifier	parallel_mode_count_		4669185	0					
ANR	4669215	PrimaryExpression	0		4669185	1					
ANR	4669216	ExpressionStatement	status_ = THREAD_UNBORN	272:1:6937:6960	4669185	7	True				
ANR	4669217	AssignmentExpression	status_ = THREAD_UNBORN		4669185	0		=			
ANR	4669218	Identifier	status_		4669185	0					
ANR	4669219	Identifier	THREAD_UNBORN		4669185	1					
ANR	4669220	ExpressionStatement	name_ = strnewp ( name )	275:1:6965:6986	4669185	8	True				
ANR	4669221	AssignmentExpression	name_ = strnewp ( name )		4669185	0		=			
ANR	4669222	Identifier	name_		4669185	0					
ANR	4669223	CallExpression	strnewp ( name )		4669185	1					
ANR	4669224	Callee	strnewp		4669185	0					
ANR	4669225	Identifier	strnewp		4669185	0					
ANR	4669226	ArgumentList	name		4669185	1					
ANR	4669227	Argument	name		4669185	0					
ANR	4669228	Identifier	name		4669185	0					
ANR	4669229	ExpressionStatement	routine_ = routine	276:1:6989:7007	4669185	9	True				
ANR	4669230	AssignmentExpression	routine_ = routine		4669185	0		=			
ANR	4669231	Identifier	routine_		4669185	0					
ANR	4669232	Identifier	routine		4669185	1					
ANR	4669233	ExpressionStatement	arg_ = arg	277:1:7010:7020	4669185	10	True				
ANR	4669234	AssignmentExpression	arg_ = arg		4669185	0		=			
ANR	4669235	Identifier	arg_		4669185	0					
ANR	4669236	Identifier	arg		4669185	1					
ANR	4669237	Identifier	WorkerThread :: WorkerThread		4669185	1					
ANR	4669238	ParameterList	"const char * name , condor_thread_func_t routine , void * arg"		4669185	2					
ANR	4669239	Parameter	const char * name	263:27:6735:6750	4669185	0	True				
ANR	4669240	ParameterType	const char *		4669185	0					
ANR	4669241	Identifier	name		4669185	1					
ANR	4669242	Parameter	condor_thread_func_t routine	263:45:6753:6780	4669185	1	True				
ANR	4669243	ParameterType	condor_thread_func_t		4669185	0					
ANR	4669244	Identifier	routine		4669185	1					
ANR	4669245	Parameter	void * arg	263:75:6783:6791	4669185	2	True				
ANR	4669246	ParameterType	void *		4669185	0					
ANR	4669247	Identifier	arg		4669185	1					
ANR	4669248	CFGEntryNode	ENTRY		4669185		True				
ANR	4669249	CFGExitNode	EXIT		4669185		True				
ANR	4669250	Symbol	THREAD_UNBORN		4669185						
ANR	4669251	Symbol	status_		4669185						
ANR	4669252	Symbol	NULL		4669185						
ANR	4669253	Symbol	arg_		4669185						
ANR	4669254	Symbol	tid_		4669185						
ANR	4669255	Symbol	false		4669185						
ANR	4669256	Symbol	enable_parallel_flag_		4669185						
ANR	4669257	Symbol	name_		4669185						
ANR	4669258	Symbol	routine_		4669185						
ANR	4669259	Symbol	parallel_mode_count_		4669185						
ANR	4669260	Symbol	routine		4669185						
ANR	4669261	Symbol	arg		4669185						
ANR	4669262	Symbol	name		4669185						
ANR	4669263	Symbol	strnewp		4669185						
ANR	4669264	Symbol	user_pointer_		4669185						
ANR	4669265	Function	WorkerThread :: ~WorkerThread	282:0:7047:7279							
ANR	4669266	FunctionDef	WorkerThread :: ~WorkerThread ()		4669265	0					
ANR	4669267	CompoundStatement		283:0:7077:7279	4669265	0					
ANR	4669268	IfStatement	if ( name_ )		4669265	0					
ANR	4669269	Condition	name_	285:5:7117:7121	4669265	0	True				
ANR	4669270	Identifier	name_		4669265	0					
ANR	4669271	Statement	delete	285:12:7124:7129	4669265	1	True				
ANR	4669272	Statement	[	285:19:7131:7131	4669265	1	True				
ANR	4669273	Statement	]	285:20:7132:7132	4669265	2	True				
ANR	4669274	ExpressionStatement	name_	285:22:7134:7139	4669265	3	True				
ANR	4669275	Identifier	name_		4669265	0					
ANR	4669276	IfStatement	if ( user_pointer_ )		4669265	4					
ANR	4669277	Condition	user_pointer_	286:5:7146:7158	4669265	0	True				
ANR	4669278	Identifier	user_pointer_		4669265	0					
ANR	4669279	Statement	delete	286:20:7161:7166	4669265	1	True				
ANR	4669280	ExpressionStatement	( Service * ) user_pointer_	286:27:7168:7192	4669265	5	True				
ANR	4669281	CastExpression	( Service * ) user_pointer_		4669265	0					
ANR	4669282	CastTarget	Service *		4669265	0					
ANR	4669283	Identifier	user_pointer_		4669265	1					
ANR	4669284	IfStatement	if ( tid_ && TI )		4669265	6					
ANR	4669285	Condition	tid_ && TI	289:6:7236:7246	4669265	0	True				
ANR	4669286	AndExpression	tid_ && TI		4669265	0		&&			
ANR	4669287	Identifier	tid_		4669265	0					
ANR	4669288	Identifier	TI		4669265	1					
ANR	4669289	CompoundStatement		7:20:172:172	4669265	1					
ANR	4669290	ExpressionStatement	TI -> remove_tid ( tid_ )	290:2:7254:7274	4669265	0	True				
ANR	4669291	CallExpression	TI -> remove_tid ( tid_ )		4669265	0					
ANR	4669292	Callee	TI -> remove_tid		4669265	0					
ANR	4669293	PtrMemberAccess	TI -> remove_tid		4669265	0					
ANR	4669294	Identifier	TI		4669265	0					
ANR	4669295	Identifier	remove_tid		4669265	1					
ANR	4669296	ArgumentList	tid_		4669265	1					
ANR	4669297	Argument	tid_		4669265	0					
ANR	4669298	Identifier	tid_		4669265	0					
ANR	4669299	Identifier	WorkerThread :: ~WorkerThread		4669265	1					
ANR	4669300	ParameterList			4669265	2					
ANR	4669301	CFGEntryNode	ENTRY		4669265		True				
ANR	4669302	CFGExitNode	EXIT		4669265		True				
ANR	4669303	Symbol	TI		4669265						
ANR	4669304	Symbol	tid_		4669265						
ANR	4669305	Symbol	user_pointer_		4669265						
ANR	4669306	Symbol	name_		4669265						
ANR	4669307	Function	WorkerThread :: create	294:0:7282:7548							
ANR	4669308	FunctionDef	"WorkerThread :: create (const char * name , condor_thread_func_t routine , void * arg)"		4669307	0					
ANR	4669309	CompoundStatement		296:0:7382:7548	4669307	0					
ANR	4669310	IdentifierDeclStatement	"WorkerThread * newthread_rawptr = new WorkerThread ( name , routine , arg ) ;"	297:1:7385:7452	4669307	0	True				
ANR	4669311	IdentifierDecl	"* newthread_rawptr = new WorkerThread ( name , routine , arg )"		4669307	0					
ANR	4669312	IdentifierDeclType	WorkerThread *		4669307	0					
ANR	4669313	Identifier	newthread_rawptr		4669307	1					
ANR	4669314	AssignmentExpression	"* newthread_rawptr = new WorkerThread ( name , routine , arg )"		4669307	2		=			
ANR	4669315	Identifier	newthread_rawptr		4669307	0					
ANR	4669316	Expression	"name , routine , arg"		4669307	1					
ANR	4669317	Identifier	name		4669307	0					
ANR	4669318	Expression	"routine , arg"		4669307	1					
ANR	4669319	Identifier	routine		4669307	0					
ANR	4669320	Identifier	arg		4669307	1					
ANR	4669321	ExpressionStatement	ASSERT ( newthread_rawptr )	298:1:7455:7479	4669307	1	True				
ANR	4669322	CallExpression	ASSERT ( newthread_rawptr )		4669307	0					
ANR	4669323	Callee	ASSERT		4669307	0					
ANR	4669324	Identifier	ASSERT		4669307	0					
ANR	4669325	ArgumentList	newthread_rawptr		4669307	1					
ANR	4669326	Argument	newthread_rawptr		4669307	0					
ANR	4669327	Identifier	newthread_rawptr		4669307	0					
ANR	4669328	IdentifierDeclStatement	WorkerThreadPtr_t newthread ( newthread_rawptr ) ;	299:1:7482:7527	4669307	2	True				
ANR	4669329	IdentifierDecl	newthread ( newthread_rawptr )		4669307	0					
ANR	4669330	IdentifierDeclType	WorkerThreadPtr_t		4669307	0					
ANR	4669331	Identifier	newthread		4669307	1					
ANR	4669332	Identifier	newthread_rawptr		4669307	2					
ANR	4669333	ReturnStatement	return newthread ;	300:1:7530:7546	4669307	3	True				
ANR	4669334	Identifier	newthread		4669307	0					
ANR	4669335	ReturnType	WorkerThreadPtr_t		4669307	1					
ANR	4669336	Identifier	WorkerThread :: create		4669307	2					
ANR	4669337	ParameterList	"const char * name , condor_thread_func_t routine , void * arg"		4669307	3					
ANR	4669338	Parameter	const char * name	295:21:7322:7337	4669307	0	True				
ANR	4669339	ParameterType	const char *		4669307	0					
ANR	4669340	Identifier	name		4669307	1					
ANR	4669341	Parameter	condor_thread_func_t routine	295:39:7340:7367	4669307	1	True				
ANR	4669342	ParameterType	condor_thread_func_t		4669307	0					
ANR	4669343	Identifier	routine		4669307	1					
ANR	4669344	Parameter	void * arg	295:69:7370:7378	4669307	2	True				
ANR	4669345	ParameterType	void *		4669307	0					
ANR	4669346	Identifier	arg		4669307	1					
ANR	4669347	CFGEntryNode	ENTRY		4669307		True				
ANR	4669348	CFGExitNode	EXIT		4669307		True				
ANR	4669349	Symbol	routine		4669307						
ANR	4669350	Symbol	newthread_rawptr		4669307						
ANR	4669351	Symbol	arg		4669307						
ANR	4669352	Symbol	name		4669307						
ANR	4669353	Symbol	newthread		4669307						
ANR	4669354	Function	WorkerThread :: get_status_string	304:0:7607:7850							
ANR	4669355	FunctionDef	WorkerThread :: get_status_string (thread_status_t s)		4669354	0					
ANR	4669356	CompoundStatement		306:0:7670:7850	4669354	0					
ANR	4669357	SwitchStatement	switch ( s )		4669354	0					
ANR	4669358	Condition	s	307:10:7682:7682	4669354	0	True				
ANR	4669359	Identifier	s		4669354	0					
ANR	4669360	CompoundStatement		2:14:15:15	4669354	1					
ANR	4669361	Statement	THREADSTATUS	308:2:7690:7701	4669354	0	True				
ANR	4669362	Statement	(	308:14:7702:7702	4669354	1	True				
ANR	4669363	Statement	UNBORN	308:16:7704:7709	4669354	2	True				
ANR	4669364	Statement	)	308:23:7711:7711	4669354	3	True				
ANR	4669365	Statement	THREADSTATUS	309:2:7715:7726	4669354	4	True				
ANR	4669366	Statement	(	309:14:7727:7727	4669354	5	True				
ANR	4669367	Statement	READY	309:16:7729:7733	4669354	6	True				
ANR	4669368	Statement	)	309:22:7735:7735	4669354	7	True				
ANR	4669369	Statement	THREADSTATUS	310:2:7739:7750	4669354	8	True				
ANR	4669370	Statement	(	310:14:7751:7751	4669354	9	True				
ANR	4669371	Statement	RUNNING	310:16:7753:7759	4669354	10	True				
ANR	4669372	Statement	)	310:24:7761:7761	4669354	11	True				
ANR	4669373	Statement	THREADSTATUS	311:2:7765:7776	4669354	12	True				
ANR	4669374	Statement	(	311:14:7777:7777	4669354	13	True				
ANR	4669375	Statement	WAITING	311:16:7779:7785	4669354	14	True				
ANR	4669376	Statement	)	311:24:7787:7787	4669354	15	True				
ANR	4669377	Statement	THREADSTATUS	312:2:7791:7802	4669354	16	True				
ANR	4669378	Statement	(	312:14:7803:7803	4669354	17	True				
ANR	4669379	Statement	COMPLETED	312:16:7805:7813	4669354	18	True				
ANR	4669380	Statement	)	312:26:7815:7815	4669354	19	True				
ANR	4669381	Label	default :	313:1:7818:7825	4669354	20	True				
ANR	4669382	Identifier	default		4669354	0					
ANR	4669383	ReturnStatement	"return ""Unknown"" ;"	314:2:7829:7845	4669354	21	True				
ANR	4669384	PrimaryExpression	"""Unknown"""		4669354	0					
ANR	4669385	ReturnType	const char *		4669354	1					
ANR	4669386	Identifier	WorkerThread :: get_status_string		4669354	2					
ANR	4669387	ParameterList	thread_status_t s		4669354	3					
ANR	4669388	Parameter	thread_status_t s	305:32:7651:7667	4669354	0	True				
ANR	4669389	ParameterType	thread_status_t		4669354	0					
ANR	4669390	Identifier	s		4669354	1					
ANR	4669391	CFGEntryNode	ENTRY		4669354		True				
ANR	4669392	CFGExitNode	EXIT		4669354		True				
ANR	4669393	Symbol	s		4669354						
ANR	4669394	Function	ThreadImplementation :: get_main_thread_ptr	321:0:7928:8463							
ANR	4669395	FunctionDef	ThreadImplementation :: get_main_thread_ptr ()		4669394	0					
ANR	4669396	CompoundStatement		323:0:7997:8463	4669394	0					
ANR	4669397	Statement	static	324:1:8000:8005	4669394	0	True				
ANR	4669398	IdentifierDeclStatement	bool already_been_here = false ;	324:8:8007:8037	4669394	1	True				
ANR	4669399	IdentifierDecl	already_been_here = false		4669394	0					
ANR	4669400	IdentifierDeclType	bool		4669394	0					
ANR	4669401	Identifier	already_been_here		4669394	1					
ANR	4669402	AssignmentExpression	already_been_here = false		4669394	2		=			
ANR	4669403	Identifier	false		4669394	0					
ANR	4669404	Identifier	false		4669394	1					
ANR	4669405	Statement	static	325:1:8040:8045	4669394	2	True				
ANR	4669406	IdentifierDeclStatement	WorkerThreadPtr_t main_thread_ptr ;	325:8:8047:8080	4669394	3	True				
ANR	4669407	IdentifierDecl	main_thread_ptr		4669394	0					
ANR	4669408	IdentifierDeclType	WorkerThreadPtr_t		4669394	0					
ANR	4669409	Identifier	main_thread_ptr		4669394	1					
ANR	4669410	IfStatement	if ( main_thread_ptr . is_null ( ) )		4669394	4					
ANR	4669411	Condition	main_thread_ptr . is_null ( )	328:6:8159:8183	4669394	0	True				
ANR	4669412	CallExpression	main_thread_ptr . is_null ( )		4669394	0					
ANR	4669413	Callee	main_thread_ptr . is_null		4669394	0					
ANR	4669414	MemberAccess	main_thread_ptr . is_null		4669394	0					
ANR	4669415	Identifier	main_thread_ptr		4669394	0					
ANR	4669416	Identifier	is_null		4669394	1					
ANR	4669417	ArgumentList			4669394	1					
ANR	4669418	CompoundStatement		8:2:234:305	4669394	1					
ANR	4669419	ExpressionStatement	ASSERT ( already_been_here == false )	329:2:8191:8228	4669394	0	True				
ANR	4669420	CallExpression	ASSERT ( already_been_here == false )		4669394	0					
ANR	4669421	Callee	ASSERT		4669394	0					
ANR	4669422	Identifier	ASSERT		4669394	0					
ANR	4669423	ArgumentList	already_been_here == false		4669394	1					
ANR	4669424	Argument	already_been_here == false		4669394	0					
ANR	4669425	EqualityExpression	already_been_here == false		4669394	0		==			
ANR	4669426	Identifier	already_been_here		4669394	0					
ANR	4669427	Identifier	false		4669394	1					
ANR	4669428	IdentifierDeclStatement	"WorkerThreadPtr_t main_thread_tmp ( new WorkerThread ( ""Main Thread"" , NULL ) ) ;"	330:2:8232:8303	4669394	1	True				
ANR	4669429	IdentifierDecl	"main_thread_tmp ( new WorkerThread ( ""Main Thread"" , NULL ) )"		4669394	0					
ANR	4669430	IdentifierDeclType	WorkerThreadPtr_t		4669394	0					
ANR	4669431	Identifier	main_thread_tmp		4669394	1					
ANR	4669432	Expression	"""Main Thread"" , NULL"		4669394	2					
ANR	4669433	PrimaryExpression	"""Main Thread"""		4669394	0					
ANR	4669434	Identifier	NULL		4669394	1					
ANR	4669435	ExpressionStatement	main_thread_ptr = main_thread_tmp	331:2:8307:8340	4669394	2	True				
ANR	4669436	AssignmentExpression	main_thread_ptr = main_thread_tmp		4669394	0		=			
ANR	4669437	Identifier	main_thread_ptr		4669394	0					
ANR	4669438	Identifier	main_thread_tmp		4669394	1					
ANR	4669439	ExpressionStatement	already_been_here = true	332:2:8344:8368	4669394	3	True				
ANR	4669440	AssignmentExpression	already_been_here = true		4669394	0		=			
ANR	4669441	Identifier	already_been_here		4669394	0					
ANR	4669442	Identifier	true		4669394	1					
ANR	4669443	ExpressionStatement	main_thread_ptr -> tid_ = 1	333:2:8372:8397	4669394	4	True				
ANR	4669444	AssignmentExpression	main_thread_ptr -> tid_ = 1		4669394	0		=			
ANR	4669445	PtrMemberAccess	main_thread_ptr -> tid_		4669394	0					
ANR	4669446	Identifier	main_thread_ptr		4669394	0					
ANR	4669447	Identifier	tid_		4669394	1					
ANR	4669448	PrimaryExpression	1		4669394	1					
ANR	4669449	ReturnStatement	return main_thread_ptr ;	336:1:8439:8461	4669394	5	True				
ANR	4669450	Identifier	main_thread_ptr		4669394	0					
ANR	4669451	ReturnType	const WorkerThreadPtr_t		4669394	1					
ANR	4669452	Identifier	ThreadImplementation :: get_main_thread_ptr		4669394	2					
ANR	4669453	ParameterList			4669394	3					
ANR	4669454	CFGEntryNode	ENTRY		4669394		True				
ANR	4669455	CFGExitNode	EXIT		4669394		True				
ANR	4669456	Symbol	main_thread_tmp		4669394						
ANR	4669457	Symbol	already_been_here		4669394						
ANR	4669458	Symbol	main_thread_ptr		4669394						
ANR	4669459	Symbol	main_thread_ptr . is_null		4669394						
ANR	4669460	Symbol	false		4669394						
ANR	4669461	Symbol	true		4669394						
ANR	4669462	Symbol	main_thread_ptr -> tid_		4669394						
ANR	4669463	Symbol	* main_thread_ptr		4669394						
ANR	4669464	Function	operator ==	341:0:8489:8595							
ANR	4669465	FunctionDef	"operator == (const ThreadInfo & lhs , const ThreadInfo & rhs)"		4669464	0					
ANR	4669466	CompoundStatement		342:0:8552:8595	4669464	0					
ANR	4669467	ReturnStatement	return ( & lhs == & rhs ? true : false ) ;	343:1:8555:8593	4669464	0	True				
ANR	4669468	ConditionalExpression	& lhs == & rhs ? true : false		4669464	0					
ANR	4669469	Condition	& lhs == & rhs		4669464	0					
ANR	4669470	EqualityExpression	& lhs == & rhs		4669464	0		==			
ANR	4669471	UnaryOperationExpression	& lhs		4669464	0					
ANR	4669472	UnaryOperator	&		4669464	0					
ANR	4669473	Identifier	lhs		4669464	1					
ANR	4669474	UnaryOperationExpression	& rhs		4669464	1					
ANR	4669475	UnaryOperator	&		4669464	0					
ANR	4669476	Identifier	rhs		4669464	1					
ANR	4669477	Identifier	true		4669464	1					
ANR	4669478	Identifier	false		4669464	2					
ANR	4669479	ReturnType	bool		4669464	1					
ANR	4669480	Identifier	operator ==		4669464	2					
ANR	4669481	ParameterList	"const ThreadInfo & lhs , const ThreadInfo & rhs"		4669464	3					
ANR	4669482	Parameter	const ThreadInfo & lhs	341:17:8506:8526	4669464	0	True				
ANR	4669483	ParameterType	const ThreadInfo &		4669464	0					
ANR	4669484	Identifier	lhs		4669464	1					
ANR	4669485	Parameter	const ThreadInfo & rhs	341:40:8529:8549	4669464	1	True				
ANR	4669486	ParameterType	const ThreadInfo &		4669464	0					
ANR	4669487	Identifier	rhs		4669464	1					
ANR	4669488	CFGEntryNode	ENTRY		4669464		True				
ANR	4669489	CFGExitNode	EXIT		4669464		True				
ANR	4669490	Symbol	& rhs		4669464						
ANR	4669491	Symbol	lhs		4669464						
ANR	4669492	Symbol	true		4669464						
ANR	4669493	Symbol	false		4669464						
ANR	4669494	Symbol	& lhs		4669464						
ANR	4669495	Symbol	rhs		4669464						
ANR	4669496	Function	operator ==	355:0:8733:8877							
ANR	4669497	FunctionDef	"operator == (const ThreadInfo & lhs , const ThreadInfo & rhs)"		4669496	0					
ANR	4669498	CompoundStatement		356:0:8796:8877	4669496	0					
ANR	4669499	ReturnStatement	"return ( pthread_equal ( lhs . get_pthread ( ) , rhs . get_pthread ( ) ) ? true : false ) ;"	357:1:8799:8875	4669496	0	True				
ANR	4669500	ConditionalExpression	"pthread_equal ( lhs . get_pthread ( ) , rhs . get_pthread ( ) ) ? true : false"		4669496	0					
ANR	4669501	Condition	"pthread_equal ( lhs . get_pthread ( ) , rhs . get_pthread ( ) )"		4669496	0					
ANR	4669502	CallExpression	"pthread_equal ( lhs . get_pthread ( ) , rhs . get_pthread ( ) )"		4669496	0					
ANR	4669503	Callee	pthread_equal		4669496	0					
ANR	4669504	Identifier	pthread_equal		4669496	0					
ANR	4669505	ArgumentList	lhs . get_pthread ( )		4669496	1					
ANR	4669506	Argument	lhs . get_pthread ( )		4669496	0					
ANR	4669507	CallExpression	lhs . get_pthread ( )		4669496	0					
ANR	4669508	Callee	lhs . get_pthread		4669496	0					
ANR	4669509	MemberAccess	lhs . get_pthread		4669496	0					
ANR	4669510	Identifier	lhs		4669496	0					
ANR	4669511	Identifier	get_pthread		4669496	1					
ANR	4669512	ArgumentList			4669496	1					
ANR	4669513	Argument	rhs . get_pthread ( )		4669496	1					
ANR	4669514	CallExpression	rhs . get_pthread ( )		4669496	0					
ANR	4669515	Callee	rhs . get_pthread		4669496	0					
ANR	4669516	MemberAccess	rhs . get_pthread		4669496	0					
ANR	4669517	Identifier	rhs		4669496	0					
ANR	4669518	Identifier	get_pthread		4669496	1					
ANR	4669519	ArgumentList			4669496	1					
ANR	4669520	Identifier	true		4669496	1					
ANR	4669521	Identifier	false		4669496	2					
ANR	4669522	ReturnType	bool		4669496	1					
ANR	4669523	Identifier	operator ==		4669496	2					
ANR	4669524	ParameterList	"const ThreadInfo & lhs , const ThreadInfo & rhs"		4669496	3					
ANR	4669525	Parameter	const ThreadInfo & lhs	355:17:8750:8770	4669496	0	True				
ANR	4669526	ParameterType	const ThreadInfo &		4669496	0					
ANR	4669527	Identifier	lhs		4669496	1					
ANR	4669528	Parameter	const ThreadInfo & rhs	355:40:8773:8793	4669496	1	True				
ANR	4669529	ParameterType	const ThreadInfo &		4669496	0					
ANR	4669530	Identifier	rhs		4669496	1					
ANR	4669531	CFGEntryNode	ENTRY		4669496		True				
ANR	4669532	CFGExitNode	EXIT		4669496		True				
ANR	4669533	Symbol	lhs		4669496						
ANR	4669534	Symbol	lhs . get_pthread		4669496						
ANR	4669535	Symbol	rhs . get_pthread		4669496						
ANR	4669536	Symbol	false		4669496						
ANR	4669537	Symbol	true		4669496						
ANR	4669538	Symbol	rhs		4669496						
ANR	4669539	Symbol	pthread_equal		4669496						
ANR	4669540	Function	WorkerThread :: set_status	360:0:8880:12256							
ANR	4669541	FunctionDef	WorkerThread :: set_status (thread_status_t newstatus)		4669540	0					
ANR	4669542	CompoundStatement		362:0:8937:12256	4669540	0					
ANR	4669543	Statement	static	363:1:8940:8945	4669540	0	True				
ANR	4669544	IdentifierDeclStatement	int previous_ready_tid = 0 ;	363:8:8947:8973	4669540	1	True				
ANR	4669545	IdentifierDecl	previous_ready_tid = 0		4669540	0					
ANR	4669546	IdentifierDeclType	int		4669540	0					
ANR	4669547	Identifier	previous_ready_tid		4669540	1					
ANR	4669548	AssignmentExpression	previous_ready_tid = 0		4669540	2		=			
ANR	4669549	Identifier	previous_ready_tid		4669540	0					
ANR	4669550	PrimaryExpression	0		4669540	1					
ANR	4669551	Statement	static	364:1:8976:8981	4669540	2	True				
ANR	4669552	IdentifierDeclStatement	int previous_running_tid = 0 ;	364:8:8983:9011	4669540	3	True				
ANR	4669553	IdentifierDecl	previous_running_tid = 0		4669540	0					
ANR	4669554	IdentifierDeclType	int		4669540	0					
ANR	4669555	Identifier	previous_running_tid		4669540	1					
ANR	4669556	AssignmentExpression	previous_running_tid = 0		4669540	2		=			
ANR	4669557	Identifier	previous_running_tid		4669540	0					
ANR	4669558	PrimaryExpression	0		4669540	1					
ANR	4669559	Statement	static	365:1:9014:9019	4669540	4	True				
ANR	4669560	IdentifierDeclStatement	char previous_ready_message [ 200 ] ;	365:8:9021:9053	4669540	5	True				
ANR	4669561	IdentifierDecl	previous_ready_message [ 200 ]		4669540	0					
ANR	4669562	IdentifierDeclType	char [ 200 ]		4669540	0					
ANR	4669563	Identifier	previous_ready_message		4669540	1					
ANR	4669564	PrimaryExpression	200		4669540	2					
ANR	4669565	IdentifierDeclStatement	bool same_thread_running = false ;	366:1:9056:9088	4669540	6	True				
ANR	4669566	IdentifierDecl	same_thread_running = false		4669540	0					
ANR	4669567	IdentifierDeclType	bool		4669540	0					
ANR	4669568	Identifier	same_thread_running		4669540	1					
ANR	4669569	AssignmentExpression	same_thread_running = false		4669540	2		=			
ANR	4669570	Identifier	false		4669540	0					
ANR	4669571	Identifier	false		4669540	1					
ANR	4669572	IfStatement	if ( status_ == THREAD_COMPLETED )		4669540	7					
ANR	4669573	Condition	status_ == THREAD_COMPLETED	374:6:9321:9347	4669540	0	True				
ANR	4669574	EqualityExpression	status_ == THREAD_COMPLETED		4669540	0		==			
ANR	4669575	Identifier	status_		4669540	0					
ANR	4669576	Identifier	THREAD_COMPLETED		4669540	1					
ANR	4669577	CompoundStatement		13:37:414:414	4669540	1					
ANR	4669578	ReturnStatement	return ;	375:2:9358:9364	4669540	0	True				
ANR	4669579	IfStatement	if ( status_ == newstatus )		4669540	8					
ANR	4669580	Condition	status_ == newstatus	379:6:9439:9458	4669540	0	True				
ANR	4669581	EqualityExpression	status_ == newstatus		4669540	0		==			
ANR	4669582	Identifier	status_		4669540	0					
ANR	4669583	Identifier	newstatus		4669540	1					
ANR	4669584	CompoundStatement		18:29:524:524	4669540	1					
ANR	4669585	ReturnStatement	return ;	380:2:9466:9472	4669540	0	True				
ANR	4669586	IdentifierDeclStatement	int mytid = get_tid ( ) ;	383:1:9479:9500	4669540	9	True				
ANR	4669587	IdentifierDecl	mytid = get_tid ( )		4669540	0					
ANR	4669588	IdentifierDeclType	int		4669540	0					
ANR	4669589	Identifier	mytid		4669540	1					
ANR	4669590	AssignmentExpression	mytid = get_tid ( )		4669540	2		=			
ANR	4669591	Identifier	mytid		4669540	0					
ANR	4669592	CallExpression	get_tid ( )		4669540	1					
ANR	4669593	Callee	get_tid		4669540	0					
ANR	4669594	Identifier	get_tid		4669540	0					
ANR	4669595	ArgumentList			4669540	1					
ANR	4669596	IdentifierDeclStatement	thread_status_t currentstatus = status_ ;	384:1:9503:9542	4669540	10	True				
ANR	4669597	IdentifierDecl	currentstatus = status_		4669540	0					
ANR	4669598	IdentifierDeclType	thread_status_t		4669540	0					
ANR	4669599	Identifier	currentstatus		4669540	1					
ANR	4669600	AssignmentExpression	currentstatus = status_		4669540	2		=			
ANR	4669601	Identifier	status_		4669540	0					
ANR	4669602	Identifier	status_		4669540	1					
ANR	4669603	ExpressionStatement	status_ = newstatus	387:1:9569:9588	4669540	11	True				
ANR	4669604	AssignmentExpression	status_ = newstatus		4669540	0		=			
ANR	4669605	Identifier	status_		4669540	0					
ANR	4669606	Identifier	newstatus		4669540	1					
ANR	4669607	IfStatement	if ( ! TI )		4669540	12					
ANR	4669608	Condition	! TI	391:6:9713:9715	4669540	0	True				
ANR	4669609	UnaryOperationExpression	! TI		4669540	0					
ANR	4669610	UnaryOperator	!		4669540	0					
ANR	4669611	Identifier	TI		4669540	1					
ANR	4669612	CompoundStatement		30:12:781:781	4669540	1					
ANR	4669613	ReturnStatement	return ;	392:2:9723:9729	4669540	0	True				
ANR	4669614	ExpressionStatement	pthread_mutex_lock ( & ( TI -> set_status_lock ) )	404:1:10194:10236	4669540	13	True				
ANR	4669615	CallExpression	pthread_mutex_lock ( & ( TI -> set_status_lock ) )		4669540	0					
ANR	4669616	Callee	pthread_mutex_lock		4669540	0					
ANR	4669617	Identifier	pthread_mutex_lock		4669540	0					
ANR	4669618	ArgumentList	& ( TI -> set_status_lock )		4669540	1					
ANR	4669619	Argument	& ( TI -> set_status_lock )		4669540	0					
ANR	4669620	UnaryOperationExpression	& ( TI -> set_status_lock )		4669540	0					
ANR	4669621	UnaryOperator	&		4669540	0					
ANR	4669622	PtrMemberAccess	TI -> set_status_lock		4669540	1					
ANR	4669623	Identifier	TI		4669540	0					
ANR	4669624	Identifier	set_status_lock		4669540	1					
ANR	4669625	IfStatement	if ( previous_running_tid > 0 && newstatus == THREAD_RUNNING && mytid != previous_running_tid )		4669540	14					
ANR	4669626	Condition	previous_running_tid > 0 && newstatus == THREAD_RUNNING && mytid != previous_running_tid	407:6:10306:10397	4669540	0	True				
ANR	4669627	AndExpression	previous_running_tid > 0 && newstatus == THREAD_RUNNING && mytid != previous_running_tid		4669540	0		&&			
ANR	4669628	RelationalExpression	previous_running_tid > 0		4669540	0		>			
ANR	4669629	Identifier	previous_running_tid		4669540	0					
ANR	4669630	PrimaryExpression	0		4669540	1					
ANR	4669631	AndExpression	newstatus == THREAD_RUNNING && mytid != previous_running_tid		4669540	1		&&			
ANR	4669632	EqualityExpression	newstatus == THREAD_RUNNING		4669540	0		==			
ANR	4669633	Identifier	newstatus		4669540	0					
ANR	4669634	Identifier	THREAD_RUNNING		4669540	1					
ANR	4669635	EqualityExpression	mytid != previous_running_tid		4669540	1		!=			
ANR	4669636	Identifier	mytid		4669540	0					
ANR	4669637	Identifier	previous_running_tid		4669540	1					
ANR	4669638	CompoundStatement		49:2:1469:1544	4669540	1					
ANR	4669639	IdentifierDeclStatement	WorkerThreadPtr_t context = CondorThreads :: get_handle ( previous_running_tid ) ;	410:2:10407:10482	4669540	0	True				
ANR	4669640	IdentifierDecl	context = CondorThreads :: get_handle ( previous_running_tid )		4669540	0					
ANR	4669641	IdentifierDeclType	WorkerThreadPtr_t		4669540	0					
ANR	4669642	Identifier	context		4669540	1					
ANR	4669643	AssignmentExpression	context = CondorThreads :: get_handle ( previous_running_tid )		4669540	2		=			
ANR	4669644	Identifier	context		4669540	0					
ANR	4669645	CallExpression	CondorThreads :: get_handle ( previous_running_tid )		4669540	1					
ANR	4669646	Callee	CondorThreads :: get_handle		4669540	0					
ANR	4669647	Identifier	CondorThreads :: get_handle		4669540	0					
ANR	4669648	ArgumentList	previous_running_tid		4669540	1					
ANR	4669649	Argument	previous_running_tid		4669540	0					
ANR	4669650	Identifier	previous_running_tid		4669540	0					
ANR	4669651	IfStatement	if ( ! context . is_null ( ) )		4669540	1					
ANR	4669652	Condition	! context . is_null ( )	411:7:10491:10508	4669540	0	True				
ANR	4669653	UnaryOperationExpression	! context . is_null ( )		4669540	0					
ANR	4669654	UnaryOperator	!		4669540	0					
ANR	4669655	CallExpression	context . is_null ( )		4669540	1					
ANR	4669656	Callee	context . is_null		4669540	0					
ANR	4669657	MemberAccess	context . is_null		4669540	0					
ANR	4669658	Identifier	context		4669540	0					
ANR	4669659	Identifier	is_null		4669540	1					
ANR	4669660	ArgumentList			4669540	1					
ANR	4669661	CompoundStatement		50:28:1574:1574	4669540	1					
ANR	4669662	IfStatement	if ( context -> status_ == THREAD_RUNNING )		4669540	0					
ANR	4669663	Condition	context -> status_ == THREAD_RUNNING	412:8:10522:10555	4669540	0	True				
ANR	4669664	EqualityExpression	context -> status_ == THREAD_RUNNING		4669540	0		==			
ANR	4669665	PtrMemberAccess	context -> status_		4669540	0					
ANR	4669666	Identifier	context		4669540	0					
ANR	4669667	Identifier	status_		4669540	1					
ANR	4669668	Identifier	THREAD_RUNNING		4669540	1					
ANR	4669669	CompoundStatement		51:45:1621:1621	4669540	1					
ANR	4669670	ExpressionStatement	context -> status_ = THREAD_READY	413:4:10565:10596	4669540	0	True				
ANR	4669671	AssignmentExpression	context -> status_ = THREAD_READY		4669540	0		=			
ANR	4669672	PtrMemberAccess	context -> status_		4669540	0					
ANR	4669673	Identifier	context		4669540	0					
ANR	4669674	Identifier	status_		4669540	1					
ANR	4669675	Identifier	THREAD_READY		4669540	1					
ANR	4669676	ExpressionStatement	"dprintf ( D_THREADS , ""Thread %d (%s) status change from %s to %s\\n"" , previous_running_tid , context -> get_name ( ) , get_status_string ( THREAD_RUNNING ) , get_status_string ( THREAD_READY ) )"	414:4:10602:10792	4669540	1	True				
ANR	4669677	CallExpression	"dprintf ( D_THREADS , ""Thread %d (%s) status change from %s to %s\\n"" , previous_running_tid , context -> get_name ( ) , get_status_string ( THREAD_RUNNING ) , get_status_string ( THREAD_READY ) )"		4669540	0					
ANR	4669678	Callee	dprintf		4669540	0					
ANR	4669679	Identifier	dprintf		4669540	0					
ANR	4669680	ArgumentList	D_THREADS		4669540	1					
ANR	4669681	Argument	D_THREADS		4669540	0					
ANR	4669682	Identifier	D_THREADS		4669540	0					
ANR	4669683	Argument	"""Thread %d (%s) status change from %s to %s\\n"""		4669540	1					
ANR	4669684	PrimaryExpression	"""Thread %d (%s) status change from %s to %s\\n"""		4669540	0					
ANR	4669685	Argument	previous_running_tid		4669540	2					
ANR	4669686	Identifier	previous_running_tid		4669540	0					
ANR	4669687	Argument	context -> get_name ( )		4669540	3					
ANR	4669688	CallExpression	context -> get_name ( )		4669540	0					
ANR	4669689	Callee	context -> get_name		4669540	0					
ANR	4669690	PtrMemberAccess	context -> get_name		4669540	0					
ANR	4669691	Identifier	context		4669540	0					
ANR	4669692	Identifier	get_name		4669540	1					
ANR	4669693	ArgumentList			4669540	1					
ANR	4669694	Argument	get_status_string ( THREAD_RUNNING )		4669540	4					
ANR	4669695	CallExpression	get_status_string ( THREAD_RUNNING )		4669540	0					
ANR	4669696	Callee	get_status_string		4669540	0					
ANR	4669697	Identifier	get_status_string		4669540	0					
ANR	4669698	ArgumentList	THREAD_RUNNING		4669540	1					
ANR	4669699	Argument	THREAD_RUNNING		4669540	0					
ANR	4669700	Identifier	THREAD_RUNNING		4669540	0					
ANR	4669701	Argument	get_status_string ( THREAD_READY )		4669540	5					
ANR	4669702	CallExpression	get_status_string ( THREAD_READY )		4669540	0					
ANR	4669703	Callee	get_status_string		4669540	0					
ANR	4669704	Identifier	get_status_string		4669540	0					
ANR	4669705	ArgumentList	THREAD_READY		4669540	1					
ANR	4669706	Argument	THREAD_READY		4669540	0					
ANR	4669707	Identifier	THREAD_READY		4669540	0					
ANR	4669708	IfStatement	if ( ( currentstatus == THREAD_RUNNING && newstatus == THREAD_READY ) )		4669540	15					
ANR	4669709	Condition	currentstatus == THREAD_RUNNING && newstatus == THREAD_READY	422:6:10813:10874	4669540	0	True				
ANR	4669710	AndExpression	currentstatus == THREAD_RUNNING && newstatus == THREAD_READY		4669540	0		&&			
ANR	4669711	EqualityExpression	currentstatus == THREAD_RUNNING		4669540	0		==			
ANR	4669712	Identifier	currentstatus		4669540	0					
ANR	4669713	Identifier	THREAD_RUNNING		4669540	1					
ANR	4669714	EqualityExpression	newstatus == THREAD_READY		4669540	1		==			
ANR	4669715	Identifier	newstatus		4669540	0					
ANR	4669716	Identifier	THREAD_READY		4669540	1					
ANR	4669717	CompoundStatement		62:1:1940:1940	4669540	1					
ANR	4669718	ExpressionStatement	"snprintf ( previous_ready_message , sizeof ( previous_ready_message ) , ""Thread %d (%s) status change from %s to %s\\n"" , mytid , get_name ( ) , get_status_string ( currentstatus ) , get_status_string ( newstatus ) )"	424:2:10882:11079	4669540	0	True				
ANR	4669719	CallExpression	"snprintf ( previous_ready_message , sizeof ( previous_ready_message ) , ""Thread %d (%s) status change from %s to %s\\n"" , mytid , get_name ( ) , get_status_string ( currentstatus ) , get_status_string ( newstatus ) )"		4669540	0					
ANR	4669720	Callee	snprintf		4669540	0					
ANR	4669721	Identifier	snprintf		4669540	0					
ANR	4669722	ArgumentList	previous_ready_message		4669540	1					
ANR	4669723	Argument	previous_ready_message		4669540	0					
ANR	4669724	Identifier	previous_ready_message		4669540	0					
ANR	4669725	Argument	sizeof ( previous_ready_message )		4669540	1					
ANR	4669726	SizeofExpression	sizeof ( previous_ready_message )		4669540	0					
ANR	4669727	Sizeof	sizeof		4669540	0					
ANR	4669728	SizeofOperand	previous_ready_message		4669540	1					
ANR	4669729	Argument	"""Thread %d (%s) status change from %s to %s\\n"""		4669540	2					
ANR	4669730	PrimaryExpression	"""Thread %d (%s) status change from %s to %s\\n"""		4669540	0					
ANR	4669731	Argument	mytid		4669540	3					
ANR	4669732	Identifier	mytid		4669540	0					
ANR	4669733	Argument	get_name ( )		4669540	4					
ANR	4669734	CallExpression	get_name ( )		4669540	0					
ANR	4669735	Callee	get_name		4669540	0					
ANR	4669736	Identifier	get_name		4669540	0					
ANR	4669737	ArgumentList			4669540	1					
ANR	4669738	Argument	get_status_string ( currentstatus )		4669540	5					
ANR	4669739	CallExpression	get_status_string ( currentstatus )		4669540	0					
ANR	4669740	Callee	get_status_string		4669540	0					
ANR	4669741	Identifier	get_status_string		4669540	0					
ANR	4669742	ArgumentList	currentstatus		4669540	1					
ANR	4669743	Argument	currentstatus		4669540	0					
ANR	4669744	Identifier	currentstatus		4669540	0					
ANR	4669745	Argument	get_status_string ( newstatus )		4669540	6					
ANR	4669746	CallExpression	get_status_string ( newstatus )		4669540	0					
ANR	4669747	Callee	get_status_string		4669540	0					
ANR	4669748	Identifier	get_status_string		4669540	0					
ANR	4669749	ArgumentList	newstatus		4669540	1					
ANR	4669750	Argument	newstatus		4669540	0					
ANR	4669751	Identifier	newstatus		4669540	0					
ANR	4669752	ExpressionStatement	previous_ready_tid = mytid	427:2:11083:11109	4669540	1	True				
ANR	4669753	AssignmentExpression	previous_ready_tid = mytid		4669540	0		=			
ANR	4669754	Identifier	previous_ready_tid		4669540	0					
ANR	4669755	Identifier	mytid		4669540	1					
ANR	4669756	ElseStatement	else		4669540	0					
ANR	4669757	IfStatement	if ( currentstatus == THREAD_READY && newstatus == THREAD_RUNNING )		4669540	0					
ANR	4669758	Condition	currentstatus == THREAD_READY && newstatus == THREAD_RUNNING	430:6:11128:11187	4669540	0	True				
ANR	4669759	AndExpression	currentstatus == THREAD_READY && newstatus == THREAD_RUNNING		4669540	0		&&			
ANR	4669760	EqualityExpression	currentstatus == THREAD_READY		4669540	0		==			
ANR	4669761	Identifier	currentstatus		4669540	0					
ANR	4669762	Identifier	THREAD_READY		4669540	1					
ANR	4669763	EqualityExpression	newstatus == THREAD_RUNNING		4669540	1		==			
ANR	4669764	Identifier	newstatus		4669540	0					
ANR	4669765	Identifier	THREAD_RUNNING		4669540	1					
ANR	4669766	CompoundStatement		70:1:2255:2255	4669540	1					
ANR	4669767	IfStatement	if ( ( mytid != previous_ready_tid ) )		4669540	0					
ANR	4669768	Condition	mytid != previous_ready_tid	432:7:11202:11230	4669540	0	True				
ANR	4669769	EqualityExpression	mytid != previous_ready_tid		4669540	0		!=			
ANR	4669770	Identifier	mytid		4669540	0					
ANR	4669771	Identifier	previous_ready_tid		4669540	1					
ANR	4669772	CompoundStatement		71:38:2295:2295	4669540	1					
ANR	4669773	IfStatement	if ( previous_ready_tid )		4669540	0					
ANR	4669774	Condition	previous_ready_tid	433:8:11243:11260	4669540	0	True				
ANR	4669775	Identifier	previous_ready_tid		4669540	0					
ANR	4669776	CompoundStatement		72:29:2326:2326	4669540	1					
ANR	4669777	ExpressionStatement	"dprintf ( D_THREADS , ""%s\\n"" , previous_ready_message )"	434:4:11270:11318	4669540	0	True				
ANR	4669778	CallExpression	"dprintf ( D_THREADS , ""%s\\n"" , previous_ready_message )"		4669540	0					
ANR	4669779	Callee	dprintf		4669540	0					
ANR	4669780	Identifier	dprintf		4669540	0					
ANR	4669781	ArgumentList	D_THREADS		4669540	1					
ANR	4669782	Argument	D_THREADS		4669540	0					
ANR	4669783	Identifier	D_THREADS		4669540	0					
ANR	4669784	Argument	"""%s\\n"""		4669540	1					
ANR	4669785	PrimaryExpression	"""%s\\n"""		4669540	0					
ANR	4669786	Argument	previous_ready_message		4669540	2					
ANR	4669787	Identifier	previous_ready_message		4669540	0					
ANR	4669788	ExpressionStatement	"dprintf ( D_THREADS , ""Thread %d (%s) status change from %s to %s\\n"" , mytid , get_name ( ) , get_status_string ( currentstatus ) , get_status_string ( newstatus ) )"	436:3:11330:11484	4669540	1	True				
ANR	4669789	CallExpression	"dprintf ( D_THREADS , ""Thread %d (%s) status change from %s to %s\\n"" , mytid , get_name ( ) , get_status_string ( currentstatus ) , get_status_string ( newstatus ) )"		4669540	0					
ANR	4669790	Callee	dprintf		4669540	0					
ANR	4669791	Identifier	dprintf		4669540	0					
ANR	4669792	ArgumentList	D_THREADS		4669540	1					
ANR	4669793	Argument	D_THREADS		4669540	0					
ANR	4669794	Identifier	D_THREADS		4669540	0					
ANR	4669795	Argument	"""Thread %d (%s) status change from %s to %s\\n"""		4669540	1					
ANR	4669796	PrimaryExpression	"""Thread %d (%s) status change from %s to %s\\n"""		4669540	0					
ANR	4669797	Argument	mytid		4669540	2					
ANR	4669798	Identifier	mytid		4669540	0					
ANR	4669799	Argument	get_name ( )		4669540	3					
ANR	4669800	CallExpression	get_name ( )		4669540	0					
ANR	4669801	Callee	get_name		4669540	0					
ANR	4669802	Identifier	get_name		4669540	0					
ANR	4669803	ArgumentList			4669540	1					
ANR	4669804	Argument	get_status_string ( currentstatus )		4669540	4					
ANR	4669805	CallExpression	get_status_string ( currentstatus )		4669540	0					
ANR	4669806	Callee	get_status_string		4669540	0					
ANR	4669807	Identifier	get_status_string		4669540	0					
ANR	4669808	ArgumentList	currentstatus		4669540	1					
ANR	4669809	Argument	currentstatus		4669540	0					
ANR	4669810	Identifier	currentstatus		4669540	0					
ANR	4669811	Argument	get_status_string ( newstatus )		4669540	5					
ANR	4669812	CallExpression	get_status_string ( newstatus )		4669540	0					
ANR	4669813	Callee	get_status_string		4669540	0					
ANR	4669814	Identifier	get_status_string		4669540	0					
ANR	4669815	ArgumentList	newstatus		4669540	1					
ANR	4669816	Argument	newstatus		4669540	0					
ANR	4669817	Identifier	newstatus		4669540	0					
ANR	4669818	ElseStatement	else		4669540	0					
ANR	4669819	CompoundStatement		78:9:2557:2557	4669540	0					
ANR	4669820	ExpressionStatement	same_thread_running = true	440:3:11500:11526	4669540	0	True				
ANR	4669821	AssignmentExpression	same_thread_running = true		4669540	0		=			
ANR	4669822	Identifier	same_thread_running		4669540	0					
ANR	4669823	Identifier	true		4669540	1					
ANR	4669824	ExpressionStatement	previous_ready_tid = 0	442:2:11534:11556	4669540	1	True				
ANR	4669825	AssignmentExpression	previous_ready_tid = 0		4669540	0		=			
ANR	4669826	Identifier	previous_ready_tid		4669540	0					
ANR	4669827	PrimaryExpression	0		4669540	1					
ANR	4669828	ElseStatement	else		4669540	0					
ANR	4669829	CompoundStatement		84:1:2631:2631	4669540	0					
ANR	4669830	IfStatement	if ( previous_ready_tid )		4669540	0					
ANR	4669831	Condition	previous_ready_tid	446:7:11578:11595	4669540	0	True				
ANR	4669832	Identifier	previous_ready_tid		4669540	0					
ANR	4669833	CompoundStatement		85:28:2661:2661	4669540	1					
ANR	4669834	ExpressionStatement	"dprintf ( D_THREADS , ""%s\\n"" , previous_ready_message )"	447:3:11604:11652	4669540	0	True				
ANR	4669835	CallExpression	"dprintf ( D_THREADS , ""%s\\n"" , previous_ready_message )"		4669540	0					
ANR	4669836	Callee	dprintf		4669540	0					
ANR	4669837	Identifier	dprintf		4669540	0					
ANR	4669838	ArgumentList	D_THREADS		4669540	1					
ANR	4669839	Argument	D_THREADS		4669540	0					
ANR	4669840	Identifier	D_THREADS		4669540	0					
ANR	4669841	Argument	"""%s\\n"""		4669540	1					
ANR	4669842	PrimaryExpression	"""%s\\n"""		4669540	0					
ANR	4669843	Argument	previous_ready_message		4669540	2					
ANR	4669844	Identifier	previous_ready_message		4669540	0					
ANR	4669845	ExpressionStatement	previous_ready_tid = 0	449:2:11662:11684	4669540	1	True				
ANR	4669846	AssignmentExpression	previous_ready_tid = 0		4669540	0		=			
ANR	4669847	Identifier	previous_ready_tid		4669540	0					
ANR	4669848	PrimaryExpression	0		4669540	1					
ANR	4669849	ExpressionStatement	"dprintf ( D_THREADS , ""Thread %d (%s) status change from %s to %s\\n"" , mytid , get_name ( ) , get_status_string ( currentstatus ) , get_status_string ( newstatus ) )"	450:2:11688:11840	4669540	2	True				
ANR	4669850	CallExpression	"dprintf ( D_THREADS , ""Thread %d (%s) status change from %s to %s\\n"" , mytid , get_name ( ) , get_status_string ( currentstatus ) , get_status_string ( newstatus ) )"		4669540	0					
ANR	4669851	Callee	dprintf		4669540	0					
ANR	4669852	Identifier	dprintf		4669540	0					
ANR	4669853	ArgumentList	D_THREADS		4669540	1					
ANR	4669854	Argument	D_THREADS		4669540	0					
ANR	4669855	Identifier	D_THREADS		4669540	0					
ANR	4669856	Argument	"""Thread %d (%s) status change from %s to %s\\n"""		4669540	1					
ANR	4669857	PrimaryExpression	"""Thread %d (%s) status change from %s to %s\\n"""		4669540	0					
ANR	4669858	Argument	mytid		4669540	2					
ANR	4669859	Identifier	mytid		4669540	0					
ANR	4669860	Argument	get_name ( )		4669540	3					
ANR	4669861	CallExpression	get_name ( )		4669540	0					
ANR	4669862	Callee	get_name		4669540	0					
ANR	4669863	Identifier	get_name		4669540	0					
ANR	4669864	ArgumentList			4669540	1					
ANR	4669865	Argument	get_status_string ( currentstatus )		4669540	4					
ANR	4669866	CallExpression	get_status_string ( currentstatus )		4669540	0					
ANR	4669867	Callee	get_status_string		4669540	0					
ANR	4669868	Identifier	get_status_string		4669540	0					
ANR	4669869	ArgumentList	currentstatus		4669540	1					
ANR	4669870	Argument	currentstatus		4669540	0					
ANR	4669871	Identifier	currentstatus		4669540	0					
ANR	4669872	Argument	get_status_string ( newstatus )		4669540	5					
ANR	4669873	CallExpression	get_status_string ( newstatus )		4669540	0					
ANR	4669874	Callee	get_status_string		4669540	0					
ANR	4669875	Identifier	get_status_string		4669540	0					
ANR	4669876	ArgumentList	newstatus		4669540	1					
ANR	4669877	Argument	newstatus		4669540	0					
ANR	4669878	Identifier	newstatus		4669540	0					
ANR	4669879	IfStatement	if ( newstatus == THREAD_RUNNING )		4669540	16					
ANR	4669880	Condition	newstatus == THREAD_RUNNING	455:6:11852:11878	4669540	0	True				
ANR	4669881	EqualityExpression	newstatus == THREAD_RUNNING		4669540	0		==			
ANR	4669882	Identifier	newstatus		4669540	0					
ANR	4669883	Identifier	THREAD_RUNNING		4669540	1					
ANR	4669884	CompoundStatement		94:36:2944:2944	4669540	1					
ANR	4669885	ExpressionStatement	previous_running_tid = mytid	456:2:11886:11914	4669540	0	True				
ANR	4669886	AssignmentExpression	previous_running_tid = mytid		4669540	0		=			
ANR	4669887	Identifier	previous_running_tid		4669540	0					
ANR	4669888	Identifier	mytid		4669540	1					
ANR	4669889	ExpressionStatement	pthread_mutex_unlock ( & ( TI -> set_status_lock ) )	459:1:11921:11965	4669540	17	True				
ANR	4669890	CallExpression	pthread_mutex_unlock ( & ( TI -> set_status_lock ) )		4669540	0					
ANR	4669891	Callee	pthread_mutex_unlock		4669540	0					
ANR	4669892	Identifier	pthread_mutex_unlock		4669540	0					
ANR	4669893	ArgumentList	& ( TI -> set_status_lock )		4669540	1					
ANR	4669894	Argument	& ( TI -> set_status_lock )		4669540	0					
ANR	4669895	UnaryOperationExpression	& ( TI -> set_status_lock )		4669540	0					
ANR	4669896	UnaryOperator	&		4669540	0					
ANR	4669897	PtrMemberAccess	TI -> set_status_lock		4669540	1					
ANR	4669898	Identifier	TI		4669540	0					
ANR	4669899	Identifier	set_status_lock		4669540	1					
ANR	4669900	IfStatement	if ( newstatus == THREAD_RUNNING && same_thread_running == false )		4669540	18					
ANR	4669901	Condition	newstatus == THREAD_RUNNING && same_thread_running == false	461:6:11974:12032	4669540	0	True				
ANR	4669902	AndExpression	newstatus == THREAD_RUNNING && same_thread_running == false		4669540	0		&&			
ANR	4669903	EqualityExpression	newstatus == THREAD_RUNNING		4669540	0		==			
ANR	4669904	Identifier	newstatus		4669540	0					
ANR	4669905	Identifier	THREAD_RUNNING		4669540	1					
ANR	4669906	EqualityExpression	same_thread_running == false		4669540	1		==			
ANR	4669907	Identifier	same_thread_running		4669540	0					
ANR	4669908	Identifier	false		4669540	1					
ANR	4669909	CompoundStatement		101:1:3099:3099	4669540	1					
ANR	4669910	IfStatement	if ( TI -> switch_callback )		4669540	0					
ANR	4669911	Condition	TI -> switch_callback	465:7:12180:12198	4669540	0	True				
ANR	4669912	PtrMemberAccess	TI -> switch_callback		4669540	0					
ANR	4669913	Identifier	TI		4669540	0					
ANR	4669914	Identifier	switch_callback		4669540	1					
ANR	4669915	CompoundStatement		104:29:3264:3264	4669540	1					
ANR	4669916	ExpressionStatement	( * ( TI -> switch_callback ) ) ( user_pointer_ )	466:3:12207:12246	4669540	0	True				
ANR	4669917	CallExpression	( * ( TI -> switch_callback ) ) ( user_pointer_ )		4669540	0					
ANR	4669918	Callee	* ( TI -> switch_callback )		4669540	0					
ANR	4669919	UnaryOperationExpression	* ( TI -> switch_callback )		4669540	0					
ANR	4669920	UnaryOperator	*		4669540	0					
ANR	4669921	PtrMemberAccess	TI -> switch_callback		4669540	1					
ANR	4669922	Identifier	TI		4669540	0					
ANR	4669923	Identifier	switch_callback		4669540	1					
ANR	4669924	ArgumentList	user_pointer_		4669540	1					
ANR	4669925	Argument	user_pointer_		4669540	0					
ANR	4669926	Identifier	user_pointer_		4669540	0					
ANR	4669927	ReturnType	void		4669540	1					
ANR	4669928	Identifier	WorkerThread :: set_status		4669540	2					
ANR	4669929	ParameterList	thread_status_t newstatus		4669540	3					
ANR	4669930	Parameter	thread_status_t newstatus	361:25:8910:8934	4669540	0	True				
ANR	4669931	ParameterType	thread_status_t		4669540	0					
ANR	4669932	Identifier	newstatus		4669540	1					
ANR	4669933	CFGEntryNode	ENTRY		4669540		True				
ANR	4669934	CFGExitNode	EXIT		4669540		True				
ANR	4669935	Symbol	status_		4669540						
ANR	4669936	Symbol	previous_ready_message		4669540						
ANR	4669937	Symbol	newstatus		4669540						
ANR	4669938	Symbol	D_THREADS		4669540						
ANR	4669939	Symbol	previous_ready_tid		4669540						
ANR	4669940	Symbol	get_status_string		4669540						
ANR	4669941	Symbol	context . is_null		4669540						
ANR	4669942	Symbol	context		4669540						
ANR	4669943	Symbol	get_name		4669540						
ANR	4669944	Symbol	mytid		4669540						
ANR	4669945	Symbol	CondorThreads :: get_handle		4669540						
ANR	4669946	Symbol	context -> get_name		4669540						
ANR	4669947	Symbol	currentstatus		4669540						
ANR	4669948	Symbol	THREAD_RUNNING		4669540						
ANR	4669949	Symbol	THREAD_READY		4669540						
ANR	4669950	Symbol	false		4669540						
ANR	4669951	Symbol	& TI -> set_status_lock		4669540						
ANR	4669952	Symbol	get_tid		4669540						
ANR	4669953	Symbol	* context		4669540						
ANR	4669954	Symbol	THREAD_COMPLETED		4669540						
ANR	4669955	Symbol	TI		4669540						
ANR	4669956	Symbol	previous_running_tid		4669540						
ANR	4669957	Symbol	context -> status_		4669540						
ANR	4669958	Symbol	same_thread_running		4669540						
ANR	4669959	Symbol	true		4669540						
ANR	4669960	Symbol	* TI		4669540						
ANR	4669961	Symbol	TI -> switch_callback		4669540						
ANR	4669962	Symbol	user_pointer_		4669540						
ANR	4669963	Function	ThreadImplementation :: hashFuncThreadInfo	472:0:12260:13066							
ANR	4669964	FunctionDef	ThreadImplementation :: hashFuncThreadInfo (const ThreadInfo & mythread)		4669963	0					
ANR	4669965	CompoundStatement		474:0:12343:13066	4669963	0					
ANR	4669966	IdentifierDeclStatement	unsigned int hash = 0 ;	479:1:12611:12632	4669963	0	True				
ANR	4669967	IdentifierDecl	hash = 0		4669963	0					
ANR	4669968	IdentifierDeclType	unsigned int		4669963	0					
ANR	4669969	Identifier	hash		4669963	1					
ANR	4669970	AssignmentExpression	hash = 0		4669963	2		=			
ANR	4669971	Identifier	hash		4669963	0					
ANR	4669972	PrimaryExpression	0		4669963	1					
ANR	4669973	IdentifierDeclStatement	unsigned int j = sizeof ( pthread_t ) ;	481:1:12636:12670	4669963	1	True				
ANR	4669974	IdentifierDecl	j = sizeof ( pthread_t )		4669963	0					
ANR	4669975	IdentifierDeclType	unsigned int		4669963	0					
ANR	4669976	Identifier	j		4669963	1					
ANR	4669977	AssignmentExpression	j = sizeof ( pthread_t )		4669963	2		=			
ANR	4669978	Identifier	j		4669963	0					
ANR	4669979	SizeofExpression	sizeof ( pthread_t )		4669963	1					
ANR	4669980	Sizeof	sizeof		4669963	0					
ANR	4669981	SizeofOperand	pthread_t		4669963	1					
ANR	4669982	IdentifierDeclStatement	int i = 0 ;	482:1:12673:12682	4669963	2	True				
ANR	4669983	IdentifierDecl	i = 0		4669963	0					
ANR	4669984	IdentifierDeclType	int		4669963	0					
ANR	4669985	Identifier	i		4669963	1					
ANR	4669986	AssignmentExpression	i = 0		4669963	2		=			
ANR	4669987	Identifier	i		4669963	0					
ANR	4669988	PrimaryExpression	0		4669963	1					
ANR	4669989	IdentifierDeclStatement	pthread_t thread = mythread . get_pthread ( ) ;	483:1:12685:12726	4669963	3	True				
ANR	4669990	IdentifierDecl	thread = mythread . get_pthread ( )		4669963	0					
ANR	4669991	IdentifierDeclType	pthread_t		4669963	0					
ANR	4669992	Identifier	thread		4669963	1					
ANR	4669993	AssignmentExpression	thread = mythread . get_pthread ( )		4669963	2		=			
ANR	4669994	Identifier	thread		4669963	0					
ANR	4669995	CallExpression	mythread . get_pthread ( )		4669963	1					
ANR	4669996	Callee	mythread . get_pthread		4669963	0					
ANR	4669997	MemberAccess	mythread . get_pthread		4669963	0					
ANR	4669998	Identifier	mythread		4669963	0					
ANR	4669999	Identifier	get_pthread		4669963	1					
ANR	4670000	ArgumentList			4669963	1					
ANR	4670001	IdentifierDeclStatement	unsigned int * buf = ( unsigned int * ) & thread ;	484:1:12729:12772	4669963	4	True				
ANR	4670002	IdentifierDecl	* buf = ( unsigned int * ) & thread		4669963	0					
ANR	4670003	IdentifierDeclType	unsigned int *		4669963	0					
ANR	4670004	Identifier	buf		4669963	1					
ANR	4670005	AssignmentExpression	* buf = ( unsigned int * ) & thread		4669963	2		=			
ANR	4670006	Identifier	buf		4669963	0					
ANR	4670007	CastExpression	( unsigned int * ) & thread		4669963	1					
ANR	4670008	CastTarget	unsigned int *		4669963	0					
ANR	4670009	UnaryOperationExpression	& thread		4669963	1					
ANR	4670010	UnaryOperator	&		4669963	0					
ANR	4670011	Identifier	thread		4669963	1					
ANR	4670012	WhileStatement	while ( j >= sizeof ( unsigned int ) )		4669963	5					
ANR	4670013	Condition	j >= sizeof ( unsigned int )	488:8:12825:12849	4669963	0	True				
ANR	4670014	RelationalExpression	j >= sizeof ( unsigned int )		4669963	0		>=			
ANR	4670015	Identifier	j		4669963	0					
ANR	4670016	SizeofExpression	sizeof ( unsigned int )		4669963	1					
ANR	4670017	Sizeof	sizeof		4669963	0					
ANR	4670018	SizeofOperand	unsigned int		4669963	1					
ANR	4670019	CompoundStatement		15:36:509:509	4669963	1					
ANR	4670020	ExpressionStatement	hash += buf [ i ]	489:2:12857:12871	4669963	0	True				
ANR	4670021	AssignmentExpression	hash += buf [ i ]		4669963	0		+=			
ANR	4670022	Identifier	hash		4669963	0					
ANR	4670023	ArrayIndexing	buf [ i ]		4669963	1					
ANR	4670024	Identifier	buf		4669963	0					
ANR	4670025	Identifier	i		4669963	1					
ANR	4670026	ExpressionStatement	i ++	490:2:12875:12878	4669963	1	True				
ANR	4670027	PostIncDecOperationExpression	i ++		4669963	0					
ANR	4670028	Identifier	i		4669963	0					
ANR	4670029	IncDec	++		4669963	1					
ANR	4670030	ExpressionStatement	j -= sizeof ( unsigned int )	491:2:12882:12907	4669963	2	True				
ANR	4670031	AssignmentExpression	j -= sizeof ( unsigned int )		4669963	0		-=			
ANR	4670032	Identifier	j		4669963	0					
ANR	4670033	SizeofExpression	sizeof ( unsigned int )		4669963	1					
ANR	4670034	Sizeof	sizeof		4669963	0					
ANR	4670035	SizeofOperand	unsigned int		4669963	1					
ANR	4670036	IdentifierDeclStatement	unsigned char * n = ( unsigned char * ) & buf [ i ] ;	495:1:12954:12998	4669963	6	True				
ANR	4670037	IdentifierDecl	* n = ( unsigned char * ) & buf [ i ]		4669963	0					
ANR	4670038	IdentifierDeclType	unsigned char *		4669963	0					
ANR	4670039	Identifier	n		4669963	1					
ANR	4670040	AssignmentExpression	* n = ( unsigned char * ) & buf [ i ]		4669963	2		=			
ANR	4670041	Identifier	n		4669963	0					
ANR	4670042	CastExpression	( unsigned char * ) & buf [ i ]		4669963	1					
ANR	4670043	CastTarget	unsigned char *		4669963	0					
ANR	4670044	UnaryOperationExpression	& buf [ i ]		4669963	1					
ANR	4670045	UnaryOperator	&		4669963	0					
ANR	4670046	ArrayIndexing	buf [ i ]		4669963	1					
ANR	4670047	Identifier	buf		4669963	0					
ANR	4670048	Identifier	i		4669963	1					
ANR	4670049	ForStatement	"for ( i = 0 ; j > 0 ; j -- , i ++ )"		4669963	7					
ANR	4670050	ForInit	i = 0 ;	496:6:13006:13009	4669963	0	True				
ANR	4670051	AssignmentExpression	i = 0		4669963	0		=			
ANR	4670052	Identifier	i		4669963	0					
ANR	4670053	PrimaryExpression	0		4669963	1					
ANR	4670054	Condition	j > 0	496:12:13012:13016	4669963	1	True				
ANR	4670055	RelationalExpression	j > 0		4669963	0		>			
ANR	4670056	Identifier	j		4669963	0					
ANR	4670057	PrimaryExpression	0		4669963	1					
ANR	4670058	Expression	"j -- , i ++"	496:19:13019:13026	4669963	2	True				
ANR	4670059	PostIncDecOperationExpression	j --		4669963	0					
ANR	4670060	Identifier	j		4669963	0					
ANR	4670061	IncDec	--		4669963	1					
ANR	4670062	PostIncDecOperationExpression	i ++		4669963	1					
ANR	4670063	Identifier	i		4669963	0					
ANR	4670064	IncDec	++		4669963	1					
ANR	4670065	CompoundStatement		23:30:686:686	4669963	3					
ANR	4670066	ExpressionStatement	hash += n [ i ]	497:2:13034:13046	4669963	0	True				
ANR	4670067	AssignmentExpression	hash += n [ i ]		4669963	0		+=			
ANR	4670068	Identifier	hash		4669963	0					
ANR	4670069	ArrayIndexing	n [ i ]		4669963	1					
ANR	4670070	Identifier	n		4669963	0					
ANR	4670071	Identifier	i		4669963	1					
ANR	4670072	ReturnStatement	return hash ;	500:1:13053:13064	4669963	8	True				
ANR	4670073	Identifier	hash		4669963	0					
ANR	4670074	ReturnType	unsigned int		4669963	1					
ANR	4670075	Identifier	ThreadImplementation :: hashFuncThreadInfo		4669963	2					
ANR	4670076	ParameterList	const ThreadInfo & mythread		4669963	3					
ANR	4670077	Parameter	const ThreadInfo & mythread	473:41:12314:12340	4669963	0	True				
ANR	4670078	ParameterType	const ThreadInfo &		4669963	0					
ANR	4670079	Identifier	mythread		4669963	1					
ANR	4670080	CFGEntryNode	ENTRY		4669963		True				
ANR	4670081	CFGExitNode	EXIT		4669963		True				
ANR	4670082	Symbol	& thread		4669963						
ANR	4670083	Symbol	buf		4669963						
ANR	4670084	Symbol	* buf		4669963						
ANR	4670085	Symbol	* i		4669963						
ANR	4670086	Symbol	mythread		4669963						
ANR	4670087	Symbol	mythread . get_pthread		4669963						
ANR	4670088	Symbol	* n		4669963						
ANR	4670089	Symbol	i		4669963						
ANR	4670090	Symbol	j		4669963						
ANR	4670091	Symbol	thread		4669963						
ANR	4670092	Symbol	hash		4669963						
ANR	4670093	Symbol	n		4669963						
ANR	4670094	Function	ThreadImplementation :: yield	504:0:13070:13417							
ANR	4670095	FunctionDef	ThreadImplementation :: yield ()		4670094	0					
ANR	4670096	CompoundStatement		506:0:13104:13417	4670094	0					
ANR	4670097	IfStatement	if ( get_handle ( ) -> status_ == WorkerThread :: THREAD_RUNNING )		4670094	0					
ANR	4670098	Condition	get_handle ( ) -> status_ == WorkerThread :: THREAD_RUNNING	508:6:13140:13192	4670094	0	True				
ANR	4670099	EqualityExpression	get_handle ( ) -> status_ == WorkerThread :: THREAD_RUNNING		4670094	0		==			
ANR	4670100	PtrMemberAccess	get_handle ( ) -> status_		4670094	0					
ANR	4670101	CallExpression	get_handle ( )		4670094	0					
ANR	4670102	Callee	get_handle		4670094	0					
ANR	4670103	Identifier	get_handle		4670094	0					
ANR	4670104	ArgumentList			4670094	1					
ANR	4670105	Identifier	status_		4670094	1					
ANR	4670106	Identifier	WorkerThread :: THREAD_RUNNING		4670094	1					
ANR	4670107	CompoundStatement		3:62:91:91	4670094	1					
ANR	4670108	ExpressionStatement	get_handle ( ) -> set_status ( WorkerThread :: THREAD_READY )	509:2:13200:13254	4670094	0	True				
ANR	4670109	CallExpression	get_handle ( ) -> set_status ( WorkerThread :: THREAD_READY )		4670094	0					
ANR	4670110	Callee	get_handle ( ) -> set_status		4670094	0					
ANR	4670111	PtrMemberAccess	get_handle ( ) -> set_status		4670094	0					
ANR	4670112	CallExpression	get_handle ( )		4670094	0					
ANR	4670113	Callee	get_handle		4670094	0					
ANR	4670114	Identifier	get_handle		4670094	0					
ANR	4670115	ArgumentList			4670094	1					
ANR	4670116	Identifier	set_status		4670094	1					
ANR	4670117	ArgumentList	WorkerThread :: THREAD_READY		4670094	1					
ANR	4670118	Argument	WorkerThread :: THREAD_READY		4670094	0					
ANR	4670119	Identifier	WorkerThread :: THREAD_READY		4670094	0					
ANR	4670120	ExpressionStatement	mutex_biglock_unlock ( )	511:1:13260:13282	4670094	1	True				
ANR	4670121	CallExpression	mutex_biglock_unlock ( )		4670094	0					
ANR	4670122	Callee	mutex_biglock_unlock		4670094	0					
ANR	4670123	Identifier	mutex_biglock_unlock		4670094	0					
ANR	4670124	ArgumentList			4670094	1					
ANR	4670125	ExpressionStatement	mutex_biglock_lock ( )	514:1:13324:13344	4670094	2	True				
ANR	4670126	CallExpression	mutex_biglock_lock ( )		4670094	0					
ANR	4670127	Callee	mutex_biglock_lock		4670094	0					
ANR	4670128	Identifier	mutex_biglock_lock		4670094	0					
ANR	4670129	ArgumentList			4670094	1					
ANR	4670130	ExpressionStatement	get_handle ( ) -> set_status ( WorkerThread :: THREAD_RUNNING )	515:1:13347:13403	4670094	3	True				
ANR	4670131	CallExpression	get_handle ( ) -> set_status ( WorkerThread :: THREAD_RUNNING )		4670094	0					
ANR	4670132	Callee	get_handle ( ) -> set_status		4670094	0					
ANR	4670133	PtrMemberAccess	get_handle ( ) -> set_status		4670094	0					
ANR	4670134	CallExpression	get_handle ( )		4670094	0					
ANR	4670135	Callee	get_handle		4670094	0					
ANR	4670136	Identifier	get_handle		4670094	0					
ANR	4670137	ArgumentList			4670094	1					
ANR	4670138	Identifier	set_status		4670094	1					
ANR	4670139	ArgumentList	WorkerThread :: THREAD_RUNNING		4670094	1					
ANR	4670140	Argument	WorkerThread :: THREAD_RUNNING		4670094	0					
ANR	4670141	Identifier	WorkerThread :: THREAD_RUNNING		4670094	0					
ANR	4670142	ReturnStatement	return 0 ;	517:1:13407:13415	4670094	4	True				
ANR	4670143	PrimaryExpression	0		4670094	0					
ANR	4670144	ReturnType	int		4670094	1					
ANR	4670145	Identifier	ThreadImplementation :: yield		4670094	2					
ANR	4670146	ParameterList			4670094	3					
ANR	4670147	CFGEntryNode	ENTRY		4670094		True				
ANR	4670148	CFGExitNode	EXIT		4670094		True				
ANR	4670149	Symbol	WorkerThread :: THREAD_READY		4670094						
ANR	4670150	Symbol	* get_handle		4670094						
ANR	4670151	Symbol	get_handle		4670094						
ANR	4670152	Symbol	WorkerThread :: THREAD_RUNNING		4670094						
ANR	4670153	Symbol	get_handle ( ) -> status_		4670094						
ANR	4670154	Function	ThreadImplementation :: mutex_biglock_lock	520:11:13431:13818							
ANR	4670155	FunctionDef	ThreadImplementation :: mutex_biglock_lock ()		4670154	0					
ANR	4670156	CompoundStatement		522:0:13479:13818	4670154	0					
ANR	4670157	IfStatement	if ( ! TI )		4670154	0					
ANR	4670158	Condition	! TI	526:5:13596:13599	4670154	0	True				
ANR	4670159	UnaryOperationExpression	! TI		4670154	0					
ANR	4670160	UnaryOperator	!		4670154	0					
ANR	4670161	Identifier	TI		4670154	1					
ANR	4670162	ReturnStatement	return ;	526:12:13603:13609	4670154	1	True				
ANR	4670163	ExpressionStatement	pthread_mutex_lock ( & ( TI -> big_lock ) )	531:1:13779:13814	4670154	1	True				
ANR	4670164	CallExpression	pthread_mutex_lock ( & ( TI -> big_lock ) )		4670154	0					
ANR	4670165	Callee	pthread_mutex_lock		4670154	0					
ANR	4670166	Identifier	pthread_mutex_lock		4670154	0					
ANR	4670167	ArgumentList	& ( TI -> big_lock )		4670154	1					
ANR	4670168	Argument	& ( TI -> big_lock )		4670154	0					
ANR	4670169	UnaryOperationExpression	& ( TI -> big_lock )		4670154	0					
ANR	4670170	UnaryOperator	&		4670154	0					
ANR	4670171	PtrMemberAccess	TI -> big_lock		4670154	1					
ANR	4670172	Identifier	TI		4670154	0					
ANR	4670173	Identifier	big_lock		4670154	1					
ANR	4670174	ReturnType	void		4670154	1					
ANR	4670175	Identifier	ThreadImplementation :: mutex_biglock_lock		4670154	2					
ANR	4670176	ParameterList			4670154	3					
ANR	4670177	CFGEntryNode	ENTRY		4670154		True				
ANR	4670178	CFGExitNode	EXIT		4670154		True				
ANR	4670179	Symbol	& TI -> big_lock		4670154						
ANR	4670180	Symbol	TI		4670154						
ANR	4670181	Function	ThreadImplementation :: mutex_biglock_unlock	535:11:13832:14223							
ANR	4670182	FunctionDef	ThreadImplementation :: mutex_biglock_unlock ()		4670181	0					
ANR	4670183	CompoundStatement		537:0:13882:14223	4670181	0					
ANR	4670184	IfStatement	if ( ! TI )		4670181	0					
ANR	4670185	Condition	! TI	541:5:14000:14003	4670181	0	True				
ANR	4670186	UnaryOperationExpression	! TI		4670181	0					
ANR	4670187	UnaryOperator	!		4670181	0					
ANR	4670188	Identifier	TI		4670181	1					
ANR	4670189	ReturnStatement	return ;	541:12:14007:14013	4670181	1	True				
ANR	4670190	ExpressionStatement	pthread_mutex_unlock ( & ( TI -> big_lock ) )	546:1:14183:14220	4670181	1	True				
ANR	4670191	CallExpression	pthread_mutex_unlock ( & ( TI -> big_lock ) )		4670181	0					
ANR	4670192	Callee	pthread_mutex_unlock		4670181	0					
ANR	4670193	Identifier	pthread_mutex_unlock		4670181	0					
ANR	4670194	ArgumentList	& ( TI -> big_lock )		4670181	1					
ANR	4670195	Argument	& ( TI -> big_lock )		4670181	0					
ANR	4670196	UnaryOperationExpression	& ( TI -> big_lock )		4670181	0					
ANR	4670197	UnaryOperator	&		4670181	0					
ANR	4670198	PtrMemberAccess	TI -> big_lock		4670181	1					
ANR	4670199	Identifier	TI		4670181	0					
ANR	4670200	Identifier	big_lock		4670181	1					
ANR	4670201	ReturnType	void		4670181	1					
ANR	4670202	Identifier	ThreadImplementation :: mutex_biglock_unlock		4670181	2					
ANR	4670203	ParameterList			4670181	3					
ANR	4670204	CFGEntryNode	ENTRY		4670181		True				
ANR	4670205	CFGExitNode	EXIT		4670181		True				
ANR	4670206	Symbol	& TI -> big_lock		4670181						
ANR	4670207	Symbol	TI		4670181						
ANR	4670208	Function	ThreadImplementation :: mutex_handle_lock	549:11:14237:14648							
ANR	4670209	FunctionDef	ThreadImplementation :: mutex_handle_lock ()		4670208	0					
ANR	4670210	CompoundStatement		551:0:14284:14648	4670208	0					
ANR	4670211	IfStatement	if ( TI )		4670208	0					
ANR	4670212	Condition	TI	558:6:14595:14596	4670208	0	True				
ANR	4670213	Identifier	TI		4670208	0					
ANR	4670214	ExpressionStatement	pthread_mutex_lock ( & ( TI -> get_handle_lock ) )	559:2:14603:14645	4670208	1	True				
ANR	4670215	CallExpression	pthread_mutex_lock ( & ( TI -> get_handle_lock ) )		4670208	0					
ANR	4670216	Callee	pthread_mutex_lock		4670208	0					
ANR	4670217	Identifier	pthread_mutex_lock		4670208	0					
ANR	4670218	ArgumentList	& ( TI -> get_handle_lock )		4670208	1					
ANR	4670219	Argument	& ( TI -> get_handle_lock )		4670208	0					
ANR	4670220	UnaryOperationExpression	& ( TI -> get_handle_lock )		4670208	0					
ANR	4670221	UnaryOperator	&		4670208	0					
ANR	4670222	PtrMemberAccess	TI -> get_handle_lock		4670208	1					
ANR	4670223	Identifier	TI		4670208	0					
ANR	4670224	Identifier	get_handle_lock		4670208	1					
ANR	4670225	ReturnType	void		4670208	1					
ANR	4670226	Identifier	ThreadImplementation :: mutex_handle_lock		4670208	2					
ANR	4670227	ParameterList			4670208	3					
ANR	4670228	CFGEntryNode	ENTRY		4670208		True				
ANR	4670229	CFGExitNode	EXIT		4670208		True				
ANR	4670230	Symbol	TI		4670208						
ANR	4670231	Symbol	& TI -> get_handle_lock		4670208						
ANR	4670232	Function	ThreadImplementation :: mutex_handle_unlock	562:11:14662:15077							
ANR	4670233	FunctionDef	ThreadImplementation :: mutex_handle_unlock ()		4670232	0					
ANR	4670234	CompoundStatement		564:0:14711:15077	4670232	0					
ANR	4670235	IfStatement	if ( TI )		4670232	0					
ANR	4670236	Condition	TI	571:6:15022:15023	4670232	0	True				
ANR	4670237	Identifier	TI		4670232	0					
ANR	4670238	ExpressionStatement	pthread_mutex_unlock ( & ( TI -> get_handle_lock ) )	572:2:15030:15074	4670232	1	True				
ANR	4670239	CallExpression	pthread_mutex_unlock ( & ( TI -> get_handle_lock ) )		4670232	0					
ANR	4670240	Callee	pthread_mutex_unlock		4670232	0					
ANR	4670241	Identifier	pthread_mutex_unlock		4670232	0					
ANR	4670242	ArgumentList	& ( TI -> get_handle_lock )		4670232	1					
ANR	4670243	Argument	& ( TI -> get_handle_lock )		4670232	0					
ANR	4670244	UnaryOperationExpression	& ( TI -> get_handle_lock )		4670232	0					
ANR	4670245	UnaryOperator	&		4670232	0					
ANR	4670246	PtrMemberAccess	TI -> get_handle_lock		4670232	1					
ANR	4670247	Identifier	TI		4670232	0					
ANR	4670248	Identifier	get_handle_lock		4670232	1					
ANR	4670249	ReturnType	void		4670232	1					
ANR	4670250	Identifier	ThreadImplementation :: mutex_handle_unlock		4670232	2					
ANR	4670251	ParameterList			4670232	3					
ANR	4670252	CFGEntryNode	ENTRY		4670232		True				
ANR	4670253	CFGExitNode	EXIT		4670232		True				
ANR	4670254	Symbol	TI		4670232						
ANR	4670255	Symbol	& TI -> get_handle_lock		4670232						
ANR	4670256	Function	ThreadImplementation :: pool_add	575:0:15080:16646							
ANR	4670257	FunctionDef	"ThreadImplementation :: pool_add (condor_thread_func_t routine , void * arg , int * pTid , const char * pDescrip)"		4670256	0					
ANR	4670258	CompoundStatement		578:0:15191:16646	4670256	0					
ANR	4670259	ExpressionStatement	"dprintf ( D_THREADS , ""Queing work to thread pool - w=%d tbusy=%d tmax=%d\\n"" , work_queue . Length ( ) , num_threads_busy_ , num_threads_ )"	583:1:15350:15478	4670256	0	True				
ANR	4670260	CallExpression	"dprintf ( D_THREADS , ""Queing work to thread pool - w=%d tbusy=%d tmax=%d\\n"" , work_queue . Length ( ) , num_threads_busy_ , num_threads_ )"		4670256	0					
ANR	4670261	Callee	dprintf		4670256	0					
ANR	4670262	Identifier	dprintf		4670256	0					
ANR	4670263	ArgumentList	D_THREADS		4670256	1					
ANR	4670264	Argument	D_THREADS		4670256	0					
ANR	4670265	Identifier	D_THREADS		4670256	0					
ANR	4670266	Argument	"""Queing work to thread pool - w=%d tbusy=%d tmax=%d\\n"""		4670256	1					
ANR	4670267	PrimaryExpression	"""Queing work to thread pool - w=%d tbusy=%d tmax=%d\\n"""		4670256	0					
ANR	4670268	Argument	work_queue . Length ( )		4670256	2					
ANR	4670269	CallExpression	work_queue . Length ( )		4670256	0					
ANR	4670270	Callee	work_queue . Length		4670256	0					
ANR	4670271	MemberAccess	work_queue . Length		4670256	0					
ANR	4670272	Identifier	work_queue		4670256	0					
ANR	4670273	Identifier	Length		4670256	1					
ANR	4670274	ArgumentList			4670256	1					
ANR	4670275	Argument	num_threads_busy_		4670256	3					
ANR	4670276	Identifier	num_threads_busy_		4670256	0					
ANR	4670277	Argument	num_threads_		4670256	4					
ANR	4670278	Identifier	num_threads_		4670256	0					
ANR	4670279	WhileStatement	while ( num_threads_busy_ >= num_threads_ )		4670256	1					
ANR	4670280	Condition	num_threads_busy_ >= num_threads_	585:9:15489:15521	4670256	0	True				
ANR	4670281	RelationalExpression	num_threads_busy_ >= num_threads_		4670256	0		>=			
ANR	4670282	Identifier	num_threads_busy_		4670256	0					
ANR	4670283	Identifier	num_threads_		4670256	1					
ANR	4670284	CompoundStatement		8:45:333:333	4670256	1					
ANR	4670285	ExpressionStatement	"dprintf ( D_ALWAYS , ""WARNING: thread pool full - w=%d tbusy=%d tmax=%d\\n"" , work_queue . Length ( ) , num_threads_busy_ , num_threads_ )"	586:2:15529:15655	4670256	0	True				
ANR	4670286	CallExpression	"dprintf ( D_ALWAYS , ""WARNING: thread pool full - w=%d tbusy=%d tmax=%d\\n"" , work_queue . Length ( ) , num_threads_busy_ , num_threads_ )"		4670256	0					
ANR	4670287	Callee	dprintf		4670256	0					
ANR	4670288	Identifier	dprintf		4670256	0					
ANR	4670289	ArgumentList	D_ALWAYS		4670256	1					
ANR	4670290	Argument	D_ALWAYS		4670256	0					
ANR	4670291	Identifier	D_ALWAYS		4670256	0					
ANR	4670292	Argument	"""WARNING: thread pool full - w=%d tbusy=%d tmax=%d\\n"""		4670256	1					
ANR	4670293	PrimaryExpression	"""WARNING: thread pool full - w=%d tbusy=%d tmax=%d\\n"""		4670256	0					
ANR	4670294	Argument	work_queue . Length ( )		4670256	2					
ANR	4670295	CallExpression	work_queue . Length ( )		4670256	0					
ANR	4670296	Callee	work_queue . Length		4670256	0					
ANR	4670297	MemberAccess	work_queue . Length		4670256	0					
ANR	4670298	Identifier	work_queue		4670256	0					
ANR	4670299	Identifier	Length		4670256	1					
ANR	4670300	ArgumentList			4670256	1					
ANR	4670301	Argument	num_threads_busy_		4670256	3					
ANR	4670302	Identifier	num_threads_busy_		4670256	0					
ANR	4670303	Argument	num_threads_		4670256	4					
ANR	4670304	Identifier	num_threads_		4670256	0					
ANR	4670305	ExpressionStatement	"pthread_cond_wait ( & workers_avail_cond , & big_lock )"	588:2:15659:15707	4670256	1	True				
ANR	4670306	CallExpression	"pthread_cond_wait ( & workers_avail_cond , & big_lock )"		4670256	0					
ANR	4670307	Callee	pthread_cond_wait		4670256	0					
ANR	4670308	Identifier	pthread_cond_wait		4670256	0					
ANR	4670309	ArgumentList	& workers_avail_cond		4670256	1					
ANR	4670310	Argument	& workers_avail_cond		4670256	0					
ANR	4670311	UnaryOperationExpression	& workers_avail_cond		4670256	0					
ANR	4670312	UnaryOperator	&		4670256	0					
ANR	4670313	Identifier	workers_avail_cond		4670256	1					
ANR	4670314	Argument	& big_lock		4670256	1					
ANR	4670315	UnaryOperationExpression	& big_lock		4670256	0					
ANR	4670316	UnaryOperator	&		4670256	0					
ANR	4670317	Identifier	big_lock		4670256	1					
ANR	4670318	IdentifierDeclStatement	"WorkerThreadPtr_t newthread = WorkerThread :: create ( pDescrip ? pDescrip : ""Unnamed"" , routine , arg ) ;"	592:1:15715:15813	4670256	2	True				
ANR	4670319	IdentifierDecl	"newthread = WorkerThread :: create ( pDescrip ? pDescrip : ""Unnamed"" , routine , arg )"		4670256	0					
ANR	4670320	IdentifierDeclType	WorkerThreadPtr_t		4670256	0					
ANR	4670321	Identifier	newthread		4670256	1					
ANR	4670322	AssignmentExpression	"newthread = WorkerThread :: create ( pDescrip ? pDescrip : ""Unnamed"" , routine , arg )"		4670256	2		=			
ANR	4670323	Identifier	newthread		4670256	0					
ANR	4670324	CallExpression	"WorkerThread :: create ( pDescrip ? pDescrip : ""Unnamed"" , routine , arg )"		4670256	1					
ANR	4670325	Callee	WorkerThread :: create		4670256	0					
ANR	4670326	Identifier	WorkerThread :: create		4670256	0					
ANR	4670327	ArgumentList	"pDescrip ? pDescrip : ""Unnamed"""		4670256	1					
ANR	4670328	Argument	"pDescrip ? pDescrip : ""Unnamed"""		4670256	0					
ANR	4670329	ConditionalExpression	"pDescrip ? pDescrip : ""Unnamed"""		4670256	0					
ANR	4670330	Condition	pDescrip		4670256	0					
ANR	4670331	Identifier	pDescrip		4670256	0					
ANR	4670332	Identifier	pDescrip		4670256	1					
ANR	4670333	PrimaryExpression	"""Unnamed"""		4670256	2					
ANR	4670334	Argument	routine		4670256	1					
ANR	4670335	Identifier	routine		4670256	0					
ANR	4670336	Argument	arg		4670256	2					
ANR	4670337	Identifier	arg		4670256	0					
ANR	4670338	ExpressionStatement	mutex_handle_lock ( )	596:1:15868:15887	4670256	3	True				
ANR	4670339	CallExpression	mutex_handle_lock ( )		4670256	0					
ANR	4670340	Callee	mutex_handle_lock		4670256	0					
ANR	4670341	Identifier	mutex_handle_lock		4670256	0					
ANR	4670342	ArgumentList			4670256	1					
ANR	4670343	DoStatement	do		4670256	4					
ANR	4670344	CompoundStatement		20:4:701:701	4670256	0					
ANR	4670345	ExpressionStatement	next_tid_ ++	598:2:15897:15908	4670256	0	True				
ANR	4670346	PostIncDecOperationExpression	next_tid_ ++		4670256	0					
ANR	4670347	Identifier	next_tid_		4670256	0					
ANR	4670348	IncDec	++		4670256	1					
ANR	4670349	IfStatement	if ( next_tid_ == 1 )		4670256	1					
ANR	4670350	Condition	next_tid_ == 1	599:7:15917:15930	4670256	0	True				
ANR	4670351	EqualityExpression	next_tid_ == 1		4670256	0		==			
ANR	4670352	Identifier	next_tid_		4670256	0					
ANR	4670353	PrimaryExpression	1		4670256	1					
ANR	4670354	ExpressionStatement	next_tid_ ++	599:24:15934:15945	4670256	1	True				
ANR	4670355	PostIncDecOperationExpression	next_tid_ ++		4670256	0					
ANR	4670356	Identifier	next_tid_		4670256	0					
ANR	4670357	IncDec	++		4670256	1					
ANR	4670358	IfStatement	if ( next_tid_ == INT_MAX )		4670256	2					
ANR	4670359	Condition	next_tid_ == INT_MAX	600:7:15982:16001	4670256	0	True				
ANR	4670360	EqualityExpression	next_tid_ == INT_MAX		4670256	0		==			
ANR	4670361	Identifier	next_tid_		4670256	0					
ANR	4670362	Identifier	INT_MAX		4670256	1					
ANR	4670363	ExpressionStatement	next_tid_ = 2	600:30:16005:16018	4670256	1	True				
ANR	4670364	AssignmentExpression	next_tid_ = 2		4670256	0		=			
ANR	4670365	Identifier	next_tid_		4670256	0					
ANR	4670366	PrimaryExpression	2		4670256	1					
ANR	4670367	Condition	hashTidToWorker . exists ( next_tid_ ) == 0	601:11:16046:16083	4670256	1	True				
ANR	4670368	EqualityExpression	hashTidToWorker . exists ( next_tid_ ) == 0		4670256	0		==			
ANR	4670369	CallExpression	hashTidToWorker . exists ( next_tid_ )		4670256	0					
ANR	4670370	Callee	hashTidToWorker . exists		4670256	0					
ANR	4670371	MemberAccess	hashTidToWorker . exists		4670256	0					
ANR	4670372	Identifier	hashTidToWorker		4670256	0					
ANR	4670373	Identifier	exists		4670256	1					
ANR	4670374	ArgumentList	next_tid_		4670256	1					
ANR	4670375	Argument	next_tid_		4670256	0					
ANR	4670376	Identifier	next_tid_		4670256	0					
ANR	4670377	PrimaryExpression	0		4670256	1					
ANR	4670378	IdentifierDeclStatement	int mytid = next_tid_ ;	602:1:16090:16111	4670256	5	True				
ANR	4670379	IdentifierDecl	mytid = next_tid_		4670256	0					
ANR	4670380	IdentifierDeclType	int		4670256	0					
ANR	4670381	Identifier	mytid		4670256	1					
ANR	4670382	AssignmentExpression	mytid = next_tid_		4670256	2		=			
ANR	4670383	Identifier	next_tid_		4670256	0					
ANR	4670384	Identifier	next_tid_		4670256	1					
ANR	4670385	ExpressionStatement	"hashTidToWorker . insert ( mytid , newthread )"	603:1:16114:16153	4670256	6	True				
ANR	4670386	CallExpression	"hashTidToWorker . insert ( mytid , newthread )"		4670256	0					
ANR	4670387	Callee	hashTidToWorker . insert		4670256	0					
ANR	4670388	MemberAccess	hashTidToWorker . insert		4670256	0					
ANR	4670389	Identifier	hashTidToWorker		4670256	0					
ANR	4670390	Identifier	insert		4670256	1					
ANR	4670391	ArgumentList	mytid		4670256	1					
ANR	4670392	Argument	mytid		4670256	0					
ANR	4670393	Identifier	mytid		4670256	0					
ANR	4670394	Argument	newthread		4670256	1					
ANR	4670395	Identifier	newthread		4670256	0					
ANR	4670396	ExpressionStatement	mutex_handle_unlock ( )	604:1:16156:16177	4670256	7	True				
ANR	4670397	CallExpression	mutex_handle_unlock ( )		4670256	0					
ANR	4670398	Callee	mutex_handle_unlock		4670256	0					
ANR	4670399	Identifier	mutex_handle_unlock		4670256	0					
ANR	4670400	ArgumentList			4670256	1					
ANR	4670401	ExpressionStatement	newthread -> tid_ = mytid	606:1:16182:16205	4670256	8	True				
ANR	4670402	AssignmentExpression	newthread -> tid_ = mytid		4670256	0		=			
ANR	4670403	PtrMemberAccess	newthread -> tid_		4670256	0					
ANR	4670404	Identifier	newthread		4670256	0					
ANR	4670405	Identifier	tid_		4670256	1					
ANR	4670406	Identifier	mytid		4670256	1					
ANR	4670407	IfStatement	if ( pTid )		4670256	9					
ANR	4670408	Condition	pTid	607:5:16212:16215	4670256	0	True				
ANR	4670409	Identifier	pTid		4670256	0					
ANR	4670410	CompoundStatement		30:11:1026:1026	4670256	1					
ANR	4670411	ExpressionStatement	* pTid = mytid	608:2:16222:16235	4670256	0	True				
ANR	4670412	AssignmentExpression	* pTid = mytid		4670256	0		=			
ANR	4670413	UnaryOperationExpression	* pTid		4670256	0					
ANR	4670414	UnaryOperator	*		4670256	0					
ANR	4670415	Identifier	pTid		4670256	1					
ANR	4670416	Identifier	mytid		4670256	1					
ANR	4670417	ExpressionStatement	work_queue . enqueue ( newthread )	612:1:16264:16293	4670256	10	True				
ANR	4670418	CallExpression	work_queue . enqueue ( newthread )		4670256	0					
ANR	4670419	Callee	work_queue . enqueue		4670256	0					
ANR	4670420	MemberAccess	work_queue . enqueue		4670256	0					
ANR	4670421	Identifier	work_queue		4670256	0					
ANR	4670422	Identifier	enqueue		4670256	1					
ANR	4670423	ArgumentList	newthread		4670256	1					
ANR	4670424	Argument	newthread		4670256	0					
ANR	4670425	Identifier	newthread		4670256	0					
ANR	4670426	ExpressionStatement	"dprintf ( D_THREADS , ""Thread %s tid=%d status set to %s\\n"" , newthread -> get_name ( ) , newthread -> get_tid ( ) , newthread -> get_status_string ( newthread -> get_status ( ) ) )"	614:1:16297:16458	4670256	11	True				
ANR	4670427	CallExpression	"dprintf ( D_THREADS , ""Thread %s tid=%d status set to %s\\n"" , newthread -> get_name ( ) , newthread -> get_tid ( ) , newthread -> get_status_string ( newthread -> get_status ( ) ) )"		4670256	0					
ANR	4670428	Callee	dprintf		4670256	0					
ANR	4670429	Identifier	dprintf		4670256	0					
ANR	4670430	ArgumentList	D_THREADS		4670256	1					
ANR	4670431	Argument	D_THREADS		4670256	0					
ANR	4670432	Identifier	D_THREADS		4670256	0					
ANR	4670433	Argument	"""Thread %s tid=%d status set to %s\\n"""		4670256	1					
ANR	4670434	PrimaryExpression	"""Thread %s tid=%d status set to %s\\n"""		4670256	0					
ANR	4670435	Argument	newthread -> get_name ( )		4670256	2					
ANR	4670436	CallExpression	newthread -> get_name ( )		4670256	0					
ANR	4670437	Callee	newthread -> get_name		4670256	0					
ANR	4670438	PtrMemberAccess	newthread -> get_name		4670256	0					
ANR	4670439	Identifier	newthread		4670256	0					
ANR	4670440	Identifier	get_name		4670256	1					
ANR	4670441	ArgumentList			4670256	1					
ANR	4670442	Argument	newthread -> get_tid ( )		4670256	3					
ANR	4670443	CallExpression	newthread -> get_tid ( )		4670256	0					
ANR	4670444	Callee	newthread -> get_tid		4670256	0					
ANR	4670445	PtrMemberAccess	newthread -> get_tid		4670256	0					
ANR	4670446	Identifier	newthread		4670256	0					
ANR	4670447	Identifier	get_tid		4670256	1					
ANR	4670448	ArgumentList			4670256	1					
ANR	4670449	Argument	newthread -> get_status_string ( newthread -> get_status ( ) )		4670256	4					
ANR	4670450	CallExpression	newthread -> get_status_string ( newthread -> get_status ( ) )		4670256	0					
ANR	4670451	Callee	newthread -> get_status_string		4670256	0					
ANR	4670452	PtrMemberAccess	newthread -> get_status_string		4670256	0					
ANR	4670453	Identifier	newthread		4670256	0					
ANR	4670454	Identifier	get_status_string		4670256	1					
ANR	4670455	ArgumentList	newthread -> get_status ( )		4670256	1					
ANR	4670456	Argument	newthread -> get_status ( )		4670256	0					
ANR	4670457	CallExpression	newthread -> get_status ( )		4670256	0					
ANR	4670458	Callee	newthread -> get_status		4670256	0					
ANR	4670459	PtrMemberAccess	newthread -> get_status		4670256	0					
ANR	4670460	Identifier	newthread		4670256	0					
ANR	4670461	Identifier	get_status		4670256	1					
ANR	4670462	ArgumentList			4670256	1					
ANR	4670463	IfStatement	if ( work_queue . Length ( ) == 1 )		4670256	12					
ANR	4670464	Condition	work_queue . Length ( ) == 1	620:6:16542:16565	4670256	0	True				
ANR	4670465	EqualityExpression	work_queue . Length ( ) == 1		4670256	0		==			
ANR	4670466	CallExpression	work_queue . Length ( )		4670256	0					
ANR	4670467	Callee	work_queue . Length		4670256	0					
ANR	4670468	MemberAccess	work_queue . Length		4670256	0					
ANR	4670469	Identifier	work_queue		4670256	0					
ANR	4670470	Identifier	Length		4670256	1					
ANR	4670471	ArgumentList			4670256	1					
ANR	4670472	PrimaryExpression	1		4670256	1					
ANR	4670473	CompoundStatement		43:33:1377:1377	4670256	1					
ANR	4670474	ExpressionStatement	pthread_cond_broadcast ( & work_queue_cond )	621:2:16573:16613	4670256	0	True				
ANR	4670475	CallExpression	pthread_cond_broadcast ( & work_queue_cond )		4670256	0					
ANR	4670476	Callee	pthread_cond_broadcast		4670256	0					
ANR	4670477	Identifier	pthread_cond_broadcast		4670256	0					
ANR	4670478	ArgumentList	& work_queue_cond		4670256	1					
ANR	4670479	Argument	& work_queue_cond		4670256	0					
ANR	4670480	UnaryOperationExpression	& work_queue_cond		4670256	0					
ANR	4670481	UnaryOperator	&		4670256	0					
ANR	4670482	Identifier	work_queue_cond		4670256	1					
ANR	4670483	ExpressionStatement	yield ( )	624:1:16621:16628	4670256	13	True				
ANR	4670484	CallExpression	yield ( )		4670256	0					
ANR	4670485	Callee	yield		4670256	0					
ANR	4670486	Identifier	yield		4670256	0					
ANR	4670487	ArgumentList			4670256	1					
ANR	4670488	ReturnStatement	return mytid ;	626:1:16632:16644	4670256	14	True				
ANR	4670489	Identifier	mytid		4670256	0					
ANR	4670490	ReturnType	int		4670256	1					
ANR	4670491	Identifier	ThreadImplementation :: pool_add		4670256	2					
ANR	4670492	ParameterList	"condor_thread_func_t routine , void * arg , int * pTid , const char * pDescrip"		4670256	3					
ANR	4670493	Parameter	condor_thread_func_t routine	576:31:15115:15142	4670256	0	True				
ANR	4670494	ParameterType	condor_thread_func_t		4670256	0					
ANR	4670495	Identifier	routine		4670256	1					
ANR	4670496	Parameter	void * arg	576:61:15145:15153	4670256	1	True				
ANR	4670497	ParameterType	void *		4670256	0					
ANR	4670498	Identifier	arg		4670256	1					
ANR	4670499	Parameter	int * pTid	577:2:15158:15166	4670256	2	True				
ANR	4670500	ParameterType	int *		4670256	0					
ANR	4670501	Identifier	pTid		4670256	1					
ANR	4670502	Parameter	const char * pDescrip	577:13:15169:15188	4670256	3	True				
ANR	4670503	ParameterType	const char *		4670256	0					
ANR	4670504	Identifier	pDescrip		4670256	1					
ANR	4670505	CFGEntryNode	ENTRY		4670256		True				
ANR	4670506	CFGExitNode	EXIT		4670256		True				
ANR	4670507	Symbol	& big_lock		4670256						
ANR	4670508	Symbol	newthread -> tid_		4670256						
ANR	4670509	Symbol	newthread -> get_name		4670256						
ANR	4670510	Symbol	D_THREADS		4670256						
ANR	4670511	Symbol	pTid		4670256						
ANR	4670512	Symbol	newthread -> get_status		4670256						
ANR	4670513	Symbol	work_queue . Length		4670256						
ANR	4670514	Symbol	hashTidToWorker		4670256						
ANR	4670515	Symbol	newthread		4670256						
ANR	4670516	Symbol	pDescrip		4670256						
ANR	4670517	Symbol	routine		4670256						
ANR	4670518	Symbol	& work_queue_cond		4670256						
ANR	4670519	Symbol	arg		4670256						
ANR	4670520	Symbol	* pTid		4670256						
ANR	4670521	Symbol	INT_MAX		4670256						
ANR	4670522	Symbol	hashTidToWorker . exists		4670256						
ANR	4670523	Symbol	mytid		4670256						
ANR	4670524	Symbol	newthread -> get_status_string		4670256						
ANR	4670525	Symbol	D_ALWAYS		4670256						
ANR	4670526	Symbol	* newthread		4670256						
ANR	4670527	Symbol	next_tid_		4670256						
ANR	4670528	Symbol	num_threads_busy_		4670256						
ANR	4670529	Symbol	num_threads_		4670256						
ANR	4670530	Symbol	work_queue		4670256						
ANR	4670531	Symbol	& workers_avail_cond		4670256						
ANR	4670532	Symbol	newthread -> get_tid		4670256						
ANR	4670533	Symbol	WorkerThread :: create		4670256						
ANR	4670534	Function	ThreadImplementation :: get_handle	629:0:16649:17879							
ANR	4670535	FunctionDef	ThreadImplementation :: get_handle (int tid)		4670534	0					
ANR	4670536	CompoundStatement		631:0:16716:17879	4670534	0					
ANR	4670537	Statement	static	632:1:16719:16724	4670534	0	True				
ANR	4670538	IdentifierDeclStatement	bool inserted_main_thread = false ;	632:8:16726:16759	4670534	1	True				
ANR	4670539	IdentifierDecl	inserted_main_thread = false		4670534	0					
ANR	4670540	IdentifierDeclType	bool		4670534	0					
ANR	4670541	Identifier	inserted_main_thread		4670534	1					
ANR	4670542	AssignmentExpression	inserted_main_thread = false		4670534	2		=			
ANR	4670543	Identifier	false		4670534	0					
ANR	4670544	Identifier	false		4670534	1					
ANR	4670545	Statement	static	633:1:16762:16767	4670534	2	True				
ANR	4670546	IdentifierDeclStatement	"WorkerThreadPtr_t zombie = WorkerThread :: create ( ""zombie"" , NULL ) ;"	633:8:16769:16831	4670534	3	True				
ANR	4670547	IdentifierDecl	"zombie = WorkerThread :: create ( ""zombie"" , NULL )"		4670534	0					
ANR	4670548	IdentifierDeclType	WorkerThreadPtr_t		4670534	0					
ANR	4670549	Identifier	zombie		4670534	1					
ANR	4670550	AssignmentExpression	"zombie = WorkerThread :: create ( ""zombie"" , NULL )"		4670534	2		=			
ANR	4670551	Identifier	zombie		4670534	0					
ANR	4670552	CallExpression	"WorkerThread :: create ( ""zombie"" , NULL )"		4670534	1					
ANR	4670553	Callee	WorkerThread :: create		4670534	0					
ANR	4670554	Identifier	WorkerThread :: create		4670534	0					
ANR	4670555	ArgumentList	"""zombie"""		4670534	1					
ANR	4670556	Argument	"""zombie"""		4670534	0					
ANR	4670557	PrimaryExpression	"""zombie"""		4670534	0					
ANR	4670558	Argument	NULL		4670534	1					
ANR	4670559	Identifier	NULL		4670534	0					
ANR	4670560	IfStatement	if ( ! TI )		4670534	4					
ANR	4670561	Condition	! TI	635:6:16840:16842	4670534	0	True				
ANR	4670562	UnaryOperationExpression	! TI		4670534	0					
ANR	4670563	UnaryOperator	!		4670534	0					
ANR	4670564	Identifier	TI		4670534	1					
ANR	4670565	CompoundStatement		5:13:130:130	4670534	1					
ANR	4670566	ExpressionStatement	tid = 1	636:2:16851:16858	4670534	0	True				
ANR	4670567	AssignmentExpression	tid = 1		4670534	0		=			
ANR	4670568	Identifier	tid		4670534	0					
ANR	4670569	PrimaryExpression	1		4670534	1					
ANR	4670570	IfStatement	if ( tid == 1 )		4670534	5					
ANR	4670571	Condition	tid == 1	639:6:16870:16877	4670534	0	True				
ANR	4670572	EqualityExpression	tid == 1		4670534	0		==			
ANR	4670573	Identifier	tid		4670534	0					
ANR	4670574	PrimaryExpression	1		4670534	1					
ANR	4670575	CompoundStatement		9:17:164:164	4670534	1					
ANR	4670576	ReturnStatement	return get_main_thread_ptr ( ) ;	640:2:16887:16915	4670534	0	True				
ANR	4670577	CallExpression	get_main_thread_ptr ( )		4670534	0					
ANR	4670578	Callee	get_main_thread_ptr		4670534	0					
ANR	4670579	Identifier	get_main_thread_ptr		4670534	0					
ANR	4670580	ArgumentList			4670534	1					
ANR	4670581	IfStatement	if ( tid < 0 )		4670534	6					
ANR	4670582	Condition	tid < 0	643:6:16927:16933	4670534	0	True				
ANR	4670583	RelationalExpression	tid < 0		4670534	0		<			
ANR	4670584	Identifier	tid		4670534	0					
ANR	4670585	PrimaryExpression	0		4670534	1					
ANR	4670586	CompoundStatement		13:16:220:220	4670534	1					
ANR	4670587	ExpressionStatement	tid = 0	644:2:16941:16948	4670534	0	True				
ANR	4670588	AssignmentExpression	tid = 0		4670534	0		=			
ANR	4670589	Identifier	tid		4670534	0					
ANR	4670590	PrimaryExpression	0		4670534	1					
ANR	4670591	IdentifierDeclStatement	WorkerThreadPtr_t worker ;	647:1:16955:16979	4670534	7	True				
ANR	4670592	IdentifierDecl	worker		4670534	0					
ANR	4670593	IdentifierDeclType	WorkerThreadPtr_t		4670534	0					
ANR	4670594	Identifier	worker		4670534	1					
ANR	4670595	ExpressionStatement	mutex_handle_lock ( )	649:1:16983:17002	4670534	8	True				
ANR	4670596	CallExpression	mutex_handle_lock ( )		4670534	0					
ANR	4670597	Callee	mutex_handle_lock		4670534	0					
ANR	4670598	Identifier	mutex_handle_lock		4670534	0					
ANR	4670599	ArgumentList			4670534	1					
ANR	4670600	IfStatement	if ( tid )		4670534	9					
ANR	4670601	Condition	tid	651:6:17011:17013	4670534	0	True				
ANR	4670602	Identifier	tid		4670534	0					
ANR	4670603	CompoundStatement		21:12:300:300	4670534	1					
ANR	4670604	ExpressionStatement	"TI -> hashTidToWorker . lookup ( tid , worker )"	652:2:17021:17059	4670534	0	True				
ANR	4670605	CallExpression	"TI -> hashTidToWorker . lookup ( tid , worker )"		4670534	0					
ANR	4670606	Callee	TI -> hashTidToWorker . lookup		4670534	0					
ANR	4670607	MemberAccess	TI -> hashTidToWorker . lookup		4670534	0					
ANR	4670608	PtrMemberAccess	TI -> hashTidToWorker		4670534	0					
ANR	4670609	Identifier	TI		4670534	0					
ANR	4670610	Identifier	hashTidToWorker		4670534	1					
ANR	4670611	Identifier	lookup		4670534	1					
ANR	4670612	ArgumentList	tid		4670534	1					
ANR	4670613	Argument	tid		4670534	0					
ANR	4670614	Identifier	tid		4670534	0					
ANR	4670615	Argument	worker		4670534	1					
ANR	4670616	Identifier	worker		4670534	0					
ANR	4670617	ElseStatement	else		4670534	0					
ANR	4670618	CompoundStatement		24:2:356:387	4670534	0					
ANR	4670619	IdentifierDeclStatement	ThreadInfo ti ( pthread_self ( ) ) ;	654:2:17073:17104	4670534	0	True				
ANR	4670620	IdentifierDecl	ti ( pthread_self ( ) )		4670534	0					
ANR	4670621	IdentifierDeclType	ThreadInfo		4670534	0					
ANR	4670622	Identifier	ti		4670534	1					
ANR	4670623	CallExpression	pthread_self ( )		4670534	2					
ANR	4670624	Callee	pthread_self		4670534	0					
ANR	4670625	Identifier	pthread_self		4670534	0					
ANR	4670626	ArgumentList			4670534	1					
ANR	4670627	ExpressionStatement	"TI -> hashThreadToWorker . lookup ( ti , worker )"	655:2:17108:17148	4670534	1	True				
ANR	4670628	CallExpression	"TI -> hashThreadToWorker . lookup ( ti , worker )"		4670534	0					
ANR	4670629	Callee	TI -> hashThreadToWorker . lookup		4670534	0					
ANR	4670630	MemberAccess	TI -> hashThreadToWorker . lookup		4670534	0					
ANR	4670631	PtrMemberAccess	TI -> hashThreadToWorker		4670534	0					
ANR	4670632	Identifier	TI		4670534	0					
ANR	4670633	Identifier	hashThreadToWorker		4670534	1					
ANR	4670634	Identifier	lookup		4670534	1					
ANR	4670635	ArgumentList	ti		4670534	1					
ANR	4670636	Argument	ti		4670534	0					
ANR	4670637	Identifier	ti		4670534	0					
ANR	4670638	Argument	worker		4670534	1					
ANR	4670639	Identifier	worker		4670534	0					
ANR	4670640	IfStatement	if ( worker . is_null ( ) )		4670534	2					
ANR	4670641	Condition	worker . is_null ( )	657:7:17158:17173	4670534	0	True				
ANR	4670642	CallExpression	worker . is_null ( )		4670534	0					
ANR	4670643	Callee	worker . is_null		4670534	0					
ANR	4670644	MemberAccess	worker . is_null		4670534	0					
ANR	4670645	Identifier	worker		4670534	0					
ANR	4670646	Identifier	is_null		4670534	1					
ANR	4670647	ArgumentList			4670534	1					
ANR	4670648	CompoundStatement		27:26:460:460	4670534	1					
ANR	4670649	IfStatement	if ( inserted_main_thread == false )		4670534	0					
ANR	4670650	Condition	inserted_main_thread == false	662:8:17399:17427	4670534	0	True				
ANR	4670651	EqualityExpression	inserted_main_thread == false		4670534	0		==			
ANR	4670652	Identifier	inserted_main_thread		4670534	0					
ANR	4670653	Identifier	false		4670534	1					
ANR	4670654	CompoundStatement		32:40:714:714	4670534	1					
ANR	4670655	ExpressionStatement	worker = get_main_thread_ptr ( )	663:4:17437:17467	4670534	0	True				
ANR	4670656	AssignmentExpression	worker = get_main_thread_ptr ( )		4670534	0		=			
ANR	4670657	Identifier	worker		4670534	0					
ANR	4670658	CallExpression	get_main_thread_ptr ( )		4670534	1					
ANR	4670659	Callee	get_main_thread_ptr		4670534	0					
ANR	4670660	Identifier	get_main_thread_ptr		4670534	0					
ANR	4670661	ArgumentList			4670534	1					
ANR	4670662	ExpressionStatement	"TI -> hashThreadToWorker . insert ( ti , worker )"	664:4:17473:17513	4670534	1	True				
ANR	4670663	CallExpression	"TI -> hashThreadToWorker . insert ( ti , worker )"		4670534	0					
ANR	4670664	Callee	TI -> hashThreadToWorker . insert		4670534	0					
ANR	4670665	MemberAccess	TI -> hashThreadToWorker . insert		4670534	0					
ANR	4670666	PtrMemberAccess	TI -> hashThreadToWorker		4670534	0					
ANR	4670667	Identifier	TI		4670534	0					
ANR	4670668	Identifier	hashThreadToWorker		4670534	1					
ANR	4670669	Identifier	insert		4670534	1					
ANR	4670670	ArgumentList	ti		4670534	1					
ANR	4670671	Argument	ti		4670534	0					
ANR	4670672	Identifier	ti		4670534	0					
ANR	4670673	Argument	worker		4670534	1					
ANR	4670674	Identifier	worker		4670534	0					
ANR	4670675	ExpressionStatement	inserted_main_thread = true	665:4:17519:17546	4670534	2	True				
ANR	4670676	AssignmentExpression	inserted_main_thread = true		4670534	0		=			
ANR	4670677	Identifier	inserted_main_thread		4670534	0					
ANR	4670678	Identifier	true		4670534	1					
ANR	4670679	ElseStatement	else		4670534	0					
ANR	4670680	CompoundStatement		36:10:841:841	4670534	0					
ANR	4670681	ExpressionStatement	worker = zombie	671:4:17808:17823	4670534	0	True				
ANR	4670682	AssignmentExpression	worker = zombie		4670534	0		=			
ANR	4670683	Identifier	worker		4670534	0					
ANR	4670684	Identifier	zombie		4670534	1					
ANR	4670685	ExpressionStatement	mutex_handle_unlock ( )	676:1:17839:17860	4670534	10	True				
ANR	4670686	CallExpression	mutex_handle_unlock ( )		4670534	0					
ANR	4670687	Callee	mutex_handle_unlock		4670534	0					
ANR	4670688	Identifier	mutex_handle_unlock		4670534	0					
ANR	4670689	ArgumentList			4670534	1					
ANR	4670690	ReturnStatement	return worker ;	678:1:17864:17877	4670534	11	True				
ANR	4670691	Identifier	worker		4670534	0					
ANR	4670692	ReturnType	const WorkerThreadPtr_t		4670534	1					
ANR	4670693	Identifier	ThreadImplementation :: get_handle		4670534	2					
ANR	4670694	ParameterList	int tid		4670534	3					
ANR	4670695	Parameter	int tid	630:33:16707:16713	4670534	0	True				
ANR	4670696	ParameterType	int		4670534	0					
ANR	4670697	Identifier	tid		4670534	1					
ANR	4670698	CFGEntryNode	ENTRY		4670534		True				
ANR	4670699	CFGExitNode	EXIT		4670534		True				
ANR	4670700	Symbol	NULL		4670534						
ANR	4670701	Symbol	false		4670534						
ANR	4670702	Symbol	worker . is_null		4670534						
ANR	4670703	Symbol	TI -> hashTidToWorker		4670534						
ANR	4670704	Symbol	tid		4670534						
ANR	4670705	Symbol	inserted_main_thread		4670534						
ANR	4670706	Symbol	TI		4670534						
ANR	4670707	Symbol	ti		4670534						
ANR	4670708	Symbol	get_main_thread_ptr		4670534						
ANR	4670709	Symbol	zombie		4670534						
ANR	4670710	Symbol	* TI		4670534						
ANR	4670711	Symbol	true		4670534						
ANR	4670712	Symbol	TI -> hashThreadToWorker		4670534						
ANR	4670713	Symbol	worker		4670534						
ANR	4670714	Symbol	WorkerThread :: create		4670534						
ANR	4670715	Function	ThreadImplementation :: set_switch_callback	681:0:17882:17994							
ANR	4670716	FunctionDef	ThreadImplementation :: set_switch_callback (condor_thread_switch_callback_t func)		4670715	0					
ANR	4670717	CompoundStatement		683:0:17967:17994	4670715	0					
ANR	4670718	ExpressionStatement	switch_callback = func	684:1:17970:17992	4670715	0	True				
ANR	4670719	AssignmentExpression	switch_callback = func		4670715	0		=			
ANR	4670720	Identifier	switch_callback		4670715	0					
ANR	4670721	Identifier	func		4670715	1					
ANR	4670722	ReturnType	void		4670715	1					
ANR	4670723	Identifier	ThreadImplementation :: set_switch_callback		4670715	2					
ANR	4670724	ParameterList	condor_thread_switch_callback_t func		4670715	3					
ANR	4670725	Parameter	condor_thread_switch_callback_t func	682:42:17929:17964	4670715	0	True				
ANR	4670726	ParameterType	condor_thread_switch_callback_t		4670715	0					
ANR	4670727	Identifier	func		4670715	1					
ANR	4670728	CFGEntryNode	ENTRY		4670715		True				
ANR	4670729	CFGExitNode	EXIT		4670715		True				
ANR	4670730	Symbol	func		4670715						
ANR	4670731	Symbol	switch_callback		4670715						
ANR	4670732	Function	ThreadImplementation :: get_tid	687:0:17997:18249							
ANR	4670733	FunctionDef	ThreadImplementation :: get_tid ()		4670732	0					
ANR	4670734	CompoundStatement		689:0:18033:18249	4670732	0					
ANR	4670735	IdentifierDeclStatement	int return_val = 0 ;	690:1:18036:18054	4670732	0	True				
ANR	4670736	IdentifierDecl	return_val = 0		4670732	0					
ANR	4670737	IdentifierDeclType	int		4670732	0					
ANR	4670738	Identifier	return_val		4670732	1					
ANR	4670739	AssignmentExpression	return_val = 0		4670732	2		=			
ANR	4670740	Identifier	return_val		4670732	0					
ANR	4670741	PrimaryExpression	0		4670732	1					
ANR	4670742	ExpressionStatement	return_val = m_CurrentTid	693:1:18071:18096	4670732	1	True				
ANR	4670743	AssignmentExpression	return_val = m_CurrentTid		4670732	0		=			
ANR	4670744	Identifier	return_val		4670732	0					
ANR	4670745	Identifier	m_CurrentTid		4670732	1					
ANR	4670746	ReturnStatement	return return_val ;	701:1:18230:18247	4670732	2	True				
ANR	4670747	Identifier	return_val		4670732	0					
ANR	4670748	ReturnType	int		4670732	1					
ANR	4670749	Identifier	ThreadImplementation :: get_tid		4670732	2					
ANR	4670750	ParameterList			4670732	3					
ANR	4670751	CFGEntryNode	ENTRY		4670732		True				
ANR	4670752	CFGExitNode	EXIT		4670732		True				
ANR	4670753	Symbol	m_CurrentTid		4670732						
ANR	4670754	Symbol	return_val		4670732						
ANR	4670755	Function	ThreadImplementation :: setCurrentTid	704:0:18252:18586							
ANR	4670756	FunctionDef	ThreadImplementation :: setCurrentTid (int tid)		4670755	0					
ANR	4670757	CompoundStatement		706:0:18302:18586	4670755	0					
ANR	4670758	ExpressionStatement	m_CurrentTid = tid	708:1:18318:18336	4670755	0	True				
ANR	4670759	AssignmentExpression	m_CurrentTid = tid		4670755	0		=			
ANR	4670760	Identifier	m_CurrentTid		4670755	0					
ANR	4670761	Identifier	tid		4670755	1					
ANR	4670762	ReturnType	void		4670755	1					
ANR	4670763	Identifier	ThreadImplementation :: setCurrentTid		4670755	2					
ANR	4670764	ParameterList	int tid		4670755	3					
ANR	4670765	Parameter	int tid	705:36:18293:18299	4670755	0	True				
ANR	4670766	ParameterType	int		4670755	0					
ANR	4670767	Identifier	tid		4670755	1					
ANR	4670768	CFGEntryNode	ENTRY		4670755		True				
ANR	4670769	CFGExitNode	EXIT		4670755		True				
ANR	4670770	Symbol	m_CurrentTid		4670755						
ANR	4670771	Symbol	tid		4670755						
ANR	4670772	DeclStmt									
ANR	4670773	Decl							WorkerThreadPtr_t	WorkerThreadPtr_t	item
ANR	4670774	DeclStmt									
ANR	4670775	Decl							pthread_t	pthread_t	pthread_info
ANR	4670776	DeclStmt									
ANR	4670777	Decl							ThreadInfo	ThreadInfo ( pthread_info )	ti
ANR	4670778	Function	free_CurrentTidKey	792:0:20740:20803							
ANR	4670779	FunctionDef	free_CurrentTidKey (void * tidp)		4670778	0					
ANR	4670780	CompoundStatement		793:0:20776:20803	4670778	0					
ANR	4670781	IfStatement	if ( tidp )		4670778	0					
ANR	4670782	Condition	tidp	794:6:20784:20787	4670778	0	True				
ANR	4670783	Identifier	tidp		4670778	0					
ANR	4670784	ExpressionStatement	free ( tidp )	794:13:20791:20801	4670778	1	True				
ANR	4670785	CallExpression	free ( tidp )		4670778	0					
ANR	4670786	Callee	free		4670778	0					
ANR	4670787	Identifier	free		4670778	0					
ANR	4670788	ArgumentList	tidp		4670778	1					
ANR	4670789	Argument	tidp		4670778	0					
ANR	4670790	Identifier	tidp		4670778	0					
ANR	4670791	ReturnType	void		4670778	1					
ANR	4670792	Identifier	free_CurrentTidKey		4670778	2					
ANR	4670793	ParameterList	void * tidp		4670778	3					
ANR	4670794	Parameter	void * tidp	792:24:20764:20773	4670778	0	True				
ANR	4670795	ParameterType	void *		4670778	0					
ANR	4670796	Identifier	tidp		4670778	1					
ANR	4670797	CFGEntryNode	ENTRY		4670778		True				
ANR	4670798	CFGExitNode	EXIT		4670778		True				
ANR	4670799	Symbol	tidp		4670778						
ANR	4670800	Function	ThreadImplementation :: initCurrentTid	798:0:20813:20958							
ANR	4670801	FunctionDef	ThreadImplementation :: initCurrentTid ()		4670800	0					
ANR	4670802	CompoundStatement		800:0:20857:20958	4670800	0					
ANR	4670803	ExpressionStatement	"pthread_key_create ( & m_CurrentTidKey , free_CurrentTidKey )"	802:1:20874:20930	4670800	0	True				
ANR	4670804	CallExpression	"pthread_key_create ( & m_CurrentTidKey , free_CurrentTidKey )"		4670800	0					
ANR	4670805	Callee	pthread_key_create		4670800	0					
ANR	4670806	Identifier	pthread_key_create		4670800	0					
ANR	4670807	ArgumentList	& m_CurrentTidKey		4670800	1					
ANR	4670808	Argument	& m_CurrentTidKey		4670800	0					
ANR	4670809	UnaryOperationExpression	& m_CurrentTidKey		4670800	0					
ANR	4670810	UnaryOperator	&		4670800	0					
ANR	4670811	Identifier	m_CurrentTidKey		4670800	1					
ANR	4670812	Argument	free_CurrentTidKey		4670800	1					
ANR	4670813	Identifier	free_CurrentTidKey		4670800	0					
ANR	4670814	ExpressionStatement	setCurrentTid ( 0 )	804:1:20940:20956	4670800	1	True				
ANR	4670815	CallExpression	setCurrentTid ( 0 )		4670800	0					
ANR	4670816	Callee	setCurrentTid		4670800	0					
ANR	4670817	Identifier	setCurrentTid		4670800	0					
ANR	4670818	ArgumentList	0		4670800	1					
ANR	4670819	Argument	0		4670800	0					
ANR	4670820	PrimaryExpression	0		4670800	0					
ANR	4670821	ReturnType	void		4670800	1					
ANR	4670822	Identifier	ThreadImplementation :: initCurrentTid		4670800	2					
ANR	4670823	ParameterList			4670800	3					
ANR	4670824	CFGEntryNode	ENTRY		4670800		True				
ANR	4670825	CFGExitNode	EXIT		4670800		True				
ANR	4670826	Symbol	& m_CurrentTidKey		4670800						
ANR	4670827	Symbol	free_CurrentTidKey		4670800						
ANR	4670828	Function	ThreadImplementation :: ThreadImplementation	807:0:20961:21564							
ANR	4670829	FunctionDef	ThreadImplementation :: ThreadImplementation ()		4670828	0					
ANR	4670830	CompoundStatement		809:0:21078:21564	4670828	0					
ANR	4670831	ExpressionStatement	num_threads_ = 0	810:1:21081:21097	4670828	0	True				
ANR	4670832	AssignmentExpression	num_threads_ = 0		4670828	0		=			
ANR	4670833	Identifier	num_threads_		4670828	0					
ANR	4670834	PrimaryExpression	0		4670828	1					
ANR	4670835	ExpressionStatement	num_threads_busy_ = 0	811:1:21100:21121	4670828	1	True				
ANR	4670836	AssignmentExpression	num_threads_busy_ = 0		4670828	0		=			
ANR	4670837	Identifier	num_threads_busy_		4670828	0					
ANR	4670838	PrimaryExpression	0		4670828	1					
ANR	4670839	ExpressionStatement	next_tid_ = 0	812:1:21124:21137	4670828	2	True				
ANR	4670840	AssignmentExpression	next_tid_ = 0		4670828	0		=			
ANR	4670841	Identifier	next_tid_		4670828	0					
ANR	4670842	PrimaryExpression	0		4670828	1					
ANR	4670843	ExpressionStatement	switch_callback = NULL	813:1:21140:21162	4670828	3	True				
ANR	4670844	AssignmentExpression	switch_callback = NULL		4670828	0		=			
ANR	4670845	Identifier	switch_callback		4670828	0					
ANR	4670846	Identifier	NULL		4670828	1					
ANR	4670847	IdentifierDeclStatement	pthread_mutexattr_t mutex_attrs ;	814:1:21165:21196	4670828	4	True				
ANR	4670848	IdentifierDecl	mutex_attrs		4670828	0					
ANR	4670849	IdentifierDeclType	pthread_mutexattr_t		4670828	0					
ANR	4670850	Identifier	mutex_attrs		4670828	1					
ANR	4670851	ExpressionStatement	pthread_mutexattr_init ( & mutex_attrs )	815:1:21199:21235	4670828	5	True				
ANR	4670852	CallExpression	pthread_mutexattr_init ( & mutex_attrs )		4670828	0					
ANR	4670853	Callee	pthread_mutexattr_init		4670828	0					
ANR	4670854	Identifier	pthread_mutexattr_init		4670828	0					
ANR	4670855	ArgumentList	& mutex_attrs		4670828	1					
ANR	4670856	Argument	& mutex_attrs		4670828	0					
ANR	4670857	UnaryOperationExpression	& mutex_attrs		4670828	0					
ANR	4670858	UnaryOperator	&		4670828	0					
ANR	4670859	Identifier	mutex_attrs		4670828	1					
ANR	4670860	ExpressionStatement	"pthread_mutexattr_settype ( & mutex_attrs , PTHREAD_MUTEX_RECURSIVE_NP )"	816:1:21238:21304	4670828	6	True				
ANR	4670861	CallExpression	"pthread_mutexattr_settype ( & mutex_attrs , PTHREAD_MUTEX_RECURSIVE_NP )"		4670828	0					
ANR	4670862	Callee	pthread_mutexattr_settype		4670828	0					
ANR	4670863	Identifier	pthread_mutexattr_settype		4670828	0					
ANR	4670864	ArgumentList	& mutex_attrs		4670828	1					
ANR	4670865	Argument	& mutex_attrs		4670828	0					
ANR	4670866	UnaryOperationExpression	& mutex_attrs		4670828	0					
ANR	4670867	UnaryOperator	&		4670828	0					
ANR	4670868	Identifier	mutex_attrs		4670828	1					
ANR	4670869	Argument	PTHREAD_MUTEX_RECURSIVE_NP		4670828	1					
ANR	4670870	Identifier	PTHREAD_MUTEX_RECURSIVE_NP		4670828	0					
ANR	4670871	ExpressionStatement	"pthread_mutex_init ( & big_lock , & mutex_attrs )"	817:1:21307:21349	4670828	7	True				
ANR	4670872	CallExpression	"pthread_mutex_init ( & big_lock , & mutex_attrs )"		4670828	0					
ANR	4670873	Callee	pthread_mutex_init		4670828	0					
ANR	4670874	Identifier	pthread_mutex_init		4670828	0					
ANR	4670875	ArgumentList	& big_lock		4670828	1					
ANR	4670876	Argument	& big_lock		4670828	0					
ANR	4670877	UnaryOperationExpression	& big_lock		4670828	0					
ANR	4670878	UnaryOperator	&		4670828	0					
ANR	4670879	Identifier	big_lock		4670828	1					
ANR	4670880	Argument	& mutex_attrs		4670828	1					
ANR	4670881	UnaryOperationExpression	& mutex_attrs		4670828	0					
ANR	4670882	UnaryOperator	&		4670828	0					
ANR	4670883	Identifier	mutex_attrs		4670828	1					
ANR	4670884	ExpressionStatement	"pthread_mutex_init ( & get_handle_lock , & mutex_attrs )"	818:1:21352:21401	4670828	8	True				
ANR	4670885	CallExpression	"pthread_mutex_init ( & get_handle_lock , & mutex_attrs )"		4670828	0					
ANR	4670886	Callee	pthread_mutex_init		4670828	0					
ANR	4670887	Identifier	pthread_mutex_init		4670828	0					
ANR	4670888	ArgumentList	& get_handle_lock		4670828	1					
ANR	4670889	Argument	& get_handle_lock		4670828	0					
ANR	4670890	UnaryOperationExpression	& get_handle_lock		4670828	0					
ANR	4670891	UnaryOperator	&		4670828	0					
ANR	4670892	Identifier	get_handle_lock		4670828	1					
ANR	4670893	Argument	& mutex_attrs		4670828	1					
ANR	4670894	UnaryOperationExpression	& mutex_attrs		4670828	0					
ANR	4670895	UnaryOperator	&		4670828	0					
ANR	4670896	Identifier	mutex_attrs		4670828	1					
ANR	4670897	ExpressionStatement	"pthread_mutex_init ( & set_status_lock , & mutex_attrs )"	819:1:21404:21453	4670828	9	True				
ANR	4670898	CallExpression	"pthread_mutex_init ( & set_status_lock , & mutex_attrs )"		4670828	0					
ANR	4670899	Callee	pthread_mutex_init		4670828	0					
ANR	4670900	Identifier	pthread_mutex_init		4670828	0					
ANR	4670901	ArgumentList	& set_status_lock		4670828	1					
ANR	4670902	Argument	& set_status_lock		4670828	0					
ANR	4670903	UnaryOperationExpression	& set_status_lock		4670828	0					
ANR	4670904	UnaryOperator	&		4670828	0					
ANR	4670905	Identifier	set_status_lock		4670828	1					
ANR	4670906	Argument	& mutex_attrs		4670828	1					
ANR	4670907	UnaryOperationExpression	& mutex_attrs		4670828	0					
ANR	4670908	UnaryOperator	&		4670828	0					
ANR	4670909	Identifier	mutex_attrs		4670828	1					
ANR	4670910	ExpressionStatement	"pthread_cond_init ( & work_queue_cond , NULL )"	820:1:21456:21496	4670828	10	True				
ANR	4670911	CallExpression	"pthread_cond_init ( & work_queue_cond , NULL )"		4670828	0					
ANR	4670912	Callee	pthread_cond_init		4670828	0					
ANR	4670913	Identifier	pthread_cond_init		4670828	0					
ANR	4670914	ArgumentList	& work_queue_cond		4670828	1					
ANR	4670915	Argument	& work_queue_cond		4670828	0					
ANR	4670916	UnaryOperationExpression	& work_queue_cond		4670828	0					
ANR	4670917	UnaryOperator	&		4670828	0					
ANR	4670918	Identifier	work_queue_cond		4670828	1					
ANR	4670919	Argument	NULL		4670828	1					
ANR	4670920	Identifier	NULL		4670828	0					
ANR	4670921	ExpressionStatement	"pthread_cond_init ( & workers_avail_cond , NULL )"	821:1:21499:21542	4670828	11	True				
ANR	4670922	CallExpression	"pthread_cond_init ( & workers_avail_cond , NULL )"		4670828	0					
ANR	4670923	Callee	pthread_cond_init		4670828	0					
ANR	4670924	Identifier	pthread_cond_init		4670828	0					
ANR	4670925	ArgumentList	& workers_avail_cond		4670828	1					
ANR	4670926	Argument	& workers_avail_cond		4670828	0					
ANR	4670927	UnaryOperationExpression	& workers_avail_cond		4670828	0					
ANR	4670928	UnaryOperator	&		4670828	0					
ANR	4670929	Identifier	workers_avail_cond		4670828	1					
ANR	4670930	Argument	NULL		4670828	1					
ANR	4670931	Identifier	NULL		4670828	0					
ANR	4670932	ExpressionStatement	initCurrentTid ( )	822:1:21546:21562	4670828	12	True				
ANR	4670933	CallExpression	initCurrentTid ( )		4670828	0					
ANR	4670934	Callee	initCurrentTid		4670828	0					
ANR	4670935	Identifier	initCurrentTid		4670828	0					
ANR	4670936	ArgumentList			4670828	1					
ANR	4670937	Identifier	ThreadImplementation :: ThreadImplementation		4670828	1					
ANR	4670938	ParameterList			4670828	2					
ANR	4670939	CFGEntryNode	ENTRY		4670828		True				
ANR	4670940	CFGExitNode	EXIT		4670828		True				
ANR	4670941	Symbol	& big_lock		4670828						
ANR	4670942	Symbol	NULL		4670828						
ANR	4670943	Symbol	& set_status_lock		4670828						
ANR	4670944	Symbol	& mutex_attrs		4670828						
ANR	4670945	Symbol	PTHREAD_MUTEX_RECURSIVE_NP		4670828						
ANR	4670946	Symbol	next_tid_		4670828						
ANR	4670947	Symbol	num_threads_busy_		4670828						
ANR	4670948	Symbol	& work_queue_cond		4670828						
ANR	4670949	Symbol	num_threads_		4670828						
ANR	4670950	Symbol	& get_handle_lock		4670828						
ANR	4670951	Symbol	& workers_avail_cond		4670828						
ANR	4670952	Symbol	mutex_attrs		4670828						
ANR	4670953	Symbol	switch_callback		4670828						
ANR	4670954	Function	ThreadImplementation :: ~ThreadImplementation	825:0:21567:21912							
ANR	4670955	FunctionDef	ThreadImplementation :: ~ThreadImplementation ()		4670954	0					
ANR	4670956	CompoundStatement		826:0:21613:21912	4670954	0					
ANR	4670957	ExpressionStatement	pthread_mutex_destroy ( & big_lock )	829:1:21700:21732	4670954	0	True				
ANR	4670958	CallExpression	pthread_mutex_destroy ( & big_lock )		4670954	0					
ANR	4670959	Callee	pthread_mutex_destroy		4670954	0					
ANR	4670960	Identifier	pthread_mutex_destroy		4670954	0					
ANR	4670961	ArgumentList	& big_lock		4670954	1					
ANR	4670962	Argument	& big_lock		4670954	0					
ANR	4670963	UnaryOperationExpression	& big_lock		4670954	0					
ANR	4670964	UnaryOperator	&		4670954	0					
ANR	4670965	Identifier	big_lock		4670954	1					
ANR	4670966	ExpressionStatement	pthread_mutex_destroy ( & get_handle_lock )	830:1:21735:21774	4670954	1	True				
ANR	4670967	CallExpression	pthread_mutex_destroy ( & get_handle_lock )		4670954	0					
ANR	4670968	Callee	pthread_mutex_destroy		4670954	0					
ANR	4670969	Identifier	pthread_mutex_destroy		4670954	0					
ANR	4670970	ArgumentList	& get_handle_lock		4670954	1					
ANR	4670971	Argument	& get_handle_lock		4670954	0					
ANR	4670972	UnaryOperationExpression	& get_handle_lock		4670954	0					
ANR	4670973	UnaryOperator	&		4670954	0					
ANR	4670974	Identifier	get_handle_lock		4670954	1					
ANR	4670975	ExpressionStatement	pthread_mutex_destroy ( & set_status_lock )	831:1:21777:21816	4670954	2	True				
ANR	4670976	CallExpression	pthread_mutex_destroy ( & set_status_lock )		4670954	0					
ANR	4670977	Callee	pthread_mutex_destroy		4670954	0					
ANR	4670978	Identifier	pthread_mutex_destroy		4670954	0					
ANR	4670979	ArgumentList	& set_status_lock		4670954	1					
ANR	4670980	Argument	& set_status_lock		4670954	0					
ANR	4670981	UnaryOperationExpression	& set_status_lock		4670954	0					
ANR	4670982	UnaryOperator	&		4670954	0					
ANR	4670983	Identifier	set_status_lock		4670954	1					
ANR	4670984	ExpressionStatement	pthread_key_delete ( m_CurrentTidKey )	833:1:21833:21868	4670954	3	True				
ANR	4670985	CallExpression	pthread_key_delete ( m_CurrentTidKey )		4670954	0					
ANR	4670986	Callee	pthread_key_delete		4670954	0					
ANR	4670987	Identifier	pthread_key_delete		4670954	0					
ANR	4670988	ArgumentList	m_CurrentTidKey		4670954	1					
ANR	4670989	Argument	m_CurrentTidKey		4670954	0					
ANR	4670990	Identifier	m_CurrentTidKey		4670954	0					
ANR	4670991	Identifier	ThreadImplementation :: ~ThreadImplementation		4670954	1					
ANR	4670992	ParameterList			4670954	2					
ANR	4670993	CFGEntryNode	ENTRY		4670954		True				
ANR	4670994	CFGExitNode	EXIT		4670954		True				
ANR	4670995	Symbol	& big_lock		4670954						
ANR	4670996	Symbol	m_CurrentTidKey		4670954						
ANR	4670997	Symbol	& get_handle_lock		4670954						
ANR	4670998	Symbol	& set_status_lock		4670954						
ANR	4670999	Function	ThreadImplementation :: pool_init	838:0:21915:23247							
ANR	4671000	FunctionDef	ThreadImplementation :: pool_init ()		4670999	0					
ANR	4671001	CompoundStatement		840:0:21954:23247	4670999	0					
ANR	4671002	IdentifierDeclStatement	int i ;	841:1:21957:21962	4670999	0	True				
ANR	4671003	IdentifierDecl	i		4670999	0					
ANR	4671004	IdentifierDeclType	int		4670999	0					
ANR	4671005	Identifier	i		4670999	1					
ANR	4671006	IfStatement	"if ( strcmp ( get_mySubSystem ( ) -> getName ( ) , ""COLLECTOR"" ) == 0 )"		4670999	1					
ANR	4671007	Condition	"strcmp ( get_mySubSystem ( ) -> getName ( ) , ""COLLECTOR"" ) == 0"	844:6:22034:22084	4670999	0	True				
ANR	4671008	EqualityExpression	"strcmp ( get_mySubSystem ( ) -> getName ( ) , ""COLLECTOR"" ) == 0"		4670999	0		==			
ANR	4671009	CallExpression	"strcmp ( get_mySubSystem ( ) -> getName ( ) , ""COLLECTOR"" )"		4670999	0					
ANR	4671010	Callee	strcmp		4670999	0					
ANR	4671011	Identifier	strcmp		4670999	0					
ANR	4671012	ArgumentList	get_mySubSystem ( ) -> getName ( )		4670999	1					
ANR	4671013	Argument	get_mySubSystem ( ) -> getName ( )		4670999	0					
ANR	4671014	CallExpression	get_mySubSystem ( ) -> getName ( )		4670999	0					
ANR	4671015	Callee	get_mySubSystem ( ) -> getName		4670999	0					
ANR	4671016	PtrMemberAccess	get_mySubSystem ( ) -> getName		4670999	0					
ANR	4671017	CallExpression	get_mySubSystem ( )		4670999	0					
ANR	4671018	Callee	get_mySubSystem		4670999	0					
ANR	4671019	Identifier	get_mySubSystem		4670999	0					
ANR	4671020	ArgumentList			4670999	1					
ANR	4671021	Identifier	getName		4670999	1					
ANR	4671022	ArgumentList			4670999	1					
ANR	4671023	Argument	"""COLLECTOR"""		4670999	1					
ANR	4671024	PrimaryExpression	"""COLLECTOR"""		4670999	0					
ANR	4671025	PrimaryExpression	0		4670999	1					
ANR	4671026	CompoundStatement		5:60:133:133	4670999	1					
ANR	4671027	ExpressionStatement	"num_threads_ = param_integer ( ""THREAD_WORKER_POOL_SIZE"" , 0 , 0 )"	845:2:22092:22151	4670999	0	True				
ANR	4671028	AssignmentExpression	"num_threads_ = param_integer ( ""THREAD_WORKER_POOL_SIZE"" , 0 , 0 )"		4670999	0		=			
ANR	4671029	Identifier	num_threads_		4670999	0					
ANR	4671030	CallExpression	"param_integer ( ""THREAD_WORKER_POOL_SIZE"" , 0 , 0 )"		4670999	1					
ANR	4671031	Callee	param_integer		4670999	0					
ANR	4671032	Identifier	param_integer		4670999	0					
ANR	4671033	ArgumentList	"""THREAD_WORKER_POOL_SIZE"""		4670999	1					
ANR	4671034	Argument	"""THREAD_WORKER_POOL_SIZE"""		4670999	0					
ANR	4671035	PrimaryExpression	"""THREAD_WORKER_POOL_SIZE"""		4670999	0					
ANR	4671036	Argument	0		4670999	1					
ANR	4671037	PrimaryExpression	0		4670999	0					
ANR	4671038	Argument	0		4670999	2					
ANR	4671039	PrimaryExpression	0		4670999	0					
ANR	4671040	ElseStatement	else		4670999	0					
ANR	4671041	CompoundStatement		7:8:206:206	4670999	0					
ANR	4671042	ExpressionStatement	num_threads_ = 0	847:2:22165:22181	4670999	0	True				
ANR	4671043	AssignmentExpression	num_threads_ = 0		4670999	0		=			
ANR	4671044	Identifier	num_threads_		4670999	0					
ANR	4671045	PrimaryExpression	0		4670999	1					
ANR	4671046	IfStatement	if ( num_threads_ == 0 )		4670999	2					
ANR	4671047	Condition	num_threads_ == 0	850:6:22193:22209	4670999	0	True				
ANR	4671048	EqualityExpression	num_threads_ == 0		4670999	0		==			
ANR	4671049	Identifier	num_threads_		4670999	0					
ANR	4671050	PrimaryExpression	0		4670999	1					
ANR	4671051	CompoundStatement		11:26:258:258	4670999	1					
ANR	4671052	ReturnStatement	return num_threads_ ;	852:2:22277:22296	4670999	0	True				
ANR	4671053	Identifier	num_threads_		4670999	0					
ANR	4671054	ExpressionStatement	mutex_biglock_lock ( )	858:1:22445:22465	4670999	3	True				
ANR	4671055	CallExpression	mutex_biglock_lock ( )		4670999	0					
ANR	4671056	Callee	mutex_biglock_lock		4670999	0					
ANR	4671057	Identifier	mutex_biglock_lock		4670999	0					
ANR	4671058	ArgumentList			4670999	1					
ANR	4671059	IdentifierDeclStatement	bool sane = ( get_main_thread_ptr ( ) . get ( ) == get_handle ( ) . get ( ) ) ;	864:1:22681:22747	4670999	4	True				
ANR	4671060	IdentifierDecl	sane = ( get_main_thread_ptr ( ) . get ( ) == get_handle ( ) . get ( ) )		4670999	0					
ANR	4671061	IdentifierDeclType	bool		4670999	0					
ANR	4671062	Identifier	sane		4670999	1					
ANR	4671063	AssignmentExpression	sane = ( get_main_thread_ptr ( ) . get ( ) == get_handle ( ) . get ( ) )		4670999	2		=			
ANR	4671064	Identifier	sane		4670999	0					
ANR	4671065	EqualityExpression	get_main_thread_ptr ( ) . get ( ) == get_handle ( ) . get ( )		4670999	1		==			
ANR	4671066	CallExpression	get_main_thread_ptr ( ) . get ( )		4670999	0					
ANR	4671067	Callee	get_main_thread_ptr ( ) . get		4670999	0					
ANR	4671068	MemberAccess	get_main_thread_ptr ( ) . get		4670999	0					
ANR	4671069	CallExpression	get_main_thread_ptr ( )		4670999	0					
ANR	4671070	Callee	get_main_thread_ptr		4670999	0					
ANR	4671071	Identifier	get_main_thread_ptr		4670999	0					
ANR	4671072	ArgumentList			4670999	1					
ANR	4671073	Identifier	get		4670999	1					
ANR	4671074	ArgumentList			4670999	1					
ANR	4671075	CallExpression	get_handle ( ) . get ( )		4670999	1					
ANR	4671076	Callee	get_handle ( ) . get		4670999	0					
ANR	4671077	MemberAccess	get_handle ( ) . get		4670999	0					
ANR	4671078	CallExpression	get_handle ( )		4670999	0					
ANR	4671079	Callee	get_handle		4670999	0					
ANR	4671080	Identifier	get_handle		4670999	0					
ANR	4671081	ArgumentList			4670999	1					
ANR	4671082	Identifier	get		4670999	1					
ANR	4671083	ArgumentList			4670999	1					
ANR	4671084	IfStatement	if ( ! sane )		4670999	5					
ANR	4671085	Condition	! sane	865:5:22754:22758	4670999	0	True				
ANR	4671086	UnaryOperationExpression	! sane		4670999	0					
ANR	4671087	UnaryOperator	!		4670999	0					
ANR	4671088	Identifier	sane		4670999	1					
ANR	4671089	CompoundStatement		26:12:806:806	4670999	1					
ANR	4671090	ExpressionStatement	"EXCEPT ( ""Thread pool not initialized in the main thread"" )"	866:2:22765:22821	4670999	0	True				
ANR	4671091	CallExpression	"EXCEPT ( ""Thread pool not initialized in the main thread"" )"		4670999	0					
ANR	4671092	Callee	EXCEPT		4670999	0					
ANR	4671093	Identifier	EXCEPT		4670999	0					
ANR	4671094	ArgumentList	"""Thread pool not initialized in the main thread"""		4670999	1					
ANR	4671095	Argument	"""Thread pool not initialized in the main thread"""		4670999	0					
ANR	4671096	PrimaryExpression	"""Thread pool not initialized in the main thread"""		4670999	0					
ANR	4671097	ForStatement	for ( i = 0 ; i < num_threads_ ; i ++ )		4670999	6					
ANR	4671098	ForInit	i = 0 ;	870:6:22887:22890	4670999	0	True				
ANR	4671099	AssignmentExpression	i = 0		4670999	0		=			
ANR	4671100	Identifier	i		4670999	0					
ANR	4671101	PrimaryExpression	0		4670999	1					
ANR	4671102	Condition	i < num_threads_	870:11:22892:22907	4670999	1	True				
ANR	4671103	RelationalExpression	i < num_threads_		4670999	0		<			
ANR	4671104	Identifier	i		4670999	0					
ANR	4671105	Identifier	num_threads_		4670999	1					
ANR	4671106	PostIncDecOperationExpression	i ++	870:29:22910:22912	4670999	2	True				
ANR	4671107	Identifier	i		4670999	0					
ANR	4671108	IncDec	++		4670999	1					
ANR	4671109	CompoundStatement		31:35:961:961	4670999	3					
ANR	4671110	ExpressionStatement	"_beginthread ( ThreadImplementation :: threadStart , 0 , NULL )"	872:2:22933:22987	4670999	0	True				
ANR	4671111	CallExpression	"_beginthread ( ThreadImplementation :: threadStart , 0 , NULL )"		4670999	0					
ANR	4671112	Callee	_beginthread		4670999	0					
ANR	4671113	Identifier	_beginthread		4670999	0					
ANR	4671114	ArgumentList	ThreadImplementation :: threadStart		4670999	1					
ANR	4671115	Argument	ThreadImplementation :: threadStart		4670999	0					
ANR	4671116	Identifier	ThreadImplementation :: threadStart		4670999	0					
ANR	4671117	Argument	0		4670999	1					
ANR	4671118	PrimaryExpression	0		4670999	0					
ANR	4671119	Argument	NULL		4670999	2					
ANR	4671120	Identifier	NULL		4670999	0					
ANR	4671121	IfStatement	if ( num_threads_ > 0 )		4670999	7					
ANR	4671122	Condition	num_threads_ > 0	881:6:23180:23195	4670999	0	True				
ANR	4671123	RelationalExpression	num_threads_ > 0		4670999	0		>			
ANR	4671124	Identifier	num_threads_		4670999	0					
ANR	4671125	PrimaryExpression	0		4670999	1					
ANR	4671126	CompoundStatement		42:25:1244:1244	4670999	1					
ANR	4671127	ExpressionStatement	setCurrentTid ( 1 )	882:2:23203:23219	4670999	0	True				
ANR	4671128	CallExpression	setCurrentTid ( 1 )		4670999	0					
ANR	4671129	Callee	setCurrentTid		4670999	0					
ANR	4671130	Identifier	setCurrentTid		4670999	0					
ANR	4671131	ArgumentList	1		4670999	1					
ANR	4671132	Argument	1		4670999	0					
ANR	4671133	PrimaryExpression	1		4670999	0					
ANR	4671134	ReturnStatement	return num_threads_ ;	885:1:23226:23245	4670999	8	True				
ANR	4671135	Identifier	num_threads_		4670999	0					
ANR	4671136	ReturnType	int		4670999	1					
ANR	4671137	Identifier	ThreadImplementation :: pool_init		4670999	2					
ANR	4671138	ParameterList			4670999	3					
ANR	4671139	CFGEntryNode	ENTRY		4670999		True				
ANR	4671140	CFGExitNode	EXIT		4670999		True				
ANR	4671141	Symbol	strcmp		4670999						
ANR	4671142	Symbol	get_main_thread_ptr ( ) . get		4670999						
ANR	4671143	Symbol	NULL		4670999						
ANR	4671144	Symbol	get_mySubSystem ( ) -> getName		4670999						
ANR	4671145	Symbol	ThreadImplementation :: threadStart		4670999						
ANR	4671146	Symbol	* get_mySubSystem		4670999						
ANR	4671147	Symbol	i		4670999						
ANR	4671148	Symbol	sane		4670999						
ANR	4671149	Symbol	num_threads_		4670999						
ANR	4671150	Symbol	get_handle		4670999						
ANR	4671151	Symbol	get_main_thread_ptr		4670999						
ANR	4671152	Symbol	get_handle ( ) . get		4670999						
ANR	4671153	Symbol	param_integer		4670999						
ANR	4671154	Symbol	get_mySubSystem		4670999						
ANR	4671155	Function	ThreadImplementation :: start_thread_safe_block	888:0:23250:24440							
ANR	4671156	FunctionDef	ThreadImplementation :: start_thread_safe_block ()		4671155	0					
ANR	4671157	CompoundStatement		890:0:23303:24440	4671155	0					
ANR	4671158	IdentifierDeclStatement	WorkerThreadPtr_t context = get_handle ( ) ;	895:1:23480:23520	4671155	0	True				
ANR	4671159	IdentifierDecl	context = get_handle ( )		4671155	0					
ANR	4671160	IdentifierDeclType	WorkerThreadPtr_t		4671155	0					
ANR	4671161	Identifier	context		4671155	1					
ANR	4671162	AssignmentExpression	context = get_handle ( )		4671155	2		=			
ANR	4671163	Identifier	context		4671155	0					
ANR	4671164	CallExpression	get_handle ( )		4671155	1					
ANR	4671165	Callee	get_handle		4671155	0					
ANR	4671166	Identifier	get_handle		4671155	0					
ANR	4671167	ArgumentList			4671155	1					
ANR	4671168	IfStatement	if ( ! context -> enable_parallel_flag_ )		4671155	1					
ANR	4671169	Condition	! context -> enable_parallel_flag_	898:5:23570:23600	4671155	0	True				
ANR	4671170	UnaryOperationExpression	! context -> enable_parallel_flag_		4671155	0					
ANR	4671171	UnaryOperator	!		4671155	0					
ANR	4671172	PtrMemberAccess	context -> enable_parallel_flag_		4671155	1					
ANR	4671173	Identifier	context		4671155	0					
ANR	4671174	Identifier	enable_parallel_flag_		4671155	1					
ANR	4671175	CompoundStatement		9:38:299:299	4671155	1					
ANR	4671176	ReturnStatement	return 1 ;	900:2:23666:23674	4671155	0	True				
ANR	4671177	PrimaryExpression	1		4671155	0					
ANR	4671178	ExpressionStatement	context -> parallel_mode_count_ += 1	908:1:23940:23974	4671155	2	True				
ANR	4671179	AssignmentExpression	context -> parallel_mode_count_ += 1		4671155	0		+=			
ANR	4671180	PtrMemberAccess	context -> parallel_mode_count_		4671155	0					
ANR	4671181	Identifier	context		4671155	0					
ANR	4671182	Identifier	parallel_mode_count_		4671155	1					
ANR	4671183	PrimaryExpression	1		4671155	1					
ANR	4671184	IfStatement	if ( context -> parallel_mode_count_ < 1 )		4671155	3					
ANR	4671185	Condition	context -> parallel_mode_count_ < 1	911:6:24049:24081	4671155	0	True				
ANR	4671186	RelationalExpression	context -> parallel_mode_count_ < 1		4671155	0		<			
ANR	4671187	PtrMemberAccess	context -> parallel_mode_count_		4671155	0					
ANR	4671188	Identifier	context		4671155	0					
ANR	4671189	Identifier	parallel_mode_count_		4671155	1					
ANR	4671190	PrimaryExpression	1		4671155	1					
ANR	4671191	CompoundStatement		22:42:781:781	4671155	1					
ANR	4671192	ExpressionStatement	"EXCEPT ( ""Thread %d has thread safe block mismatch"" , context -> tid_ )"	912:2:24091:24155	4671155	0	True				
ANR	4671193	CallExpression	"EXCEPT ( ""Thread %d has thread safe block mismatch"" , context -> tid_ )"		4671155	0					
ANR	4671194	Callee	EXCEPT		4671155	0					
ANR	4671195	Identifier	EXCEPT		4671155	0					
ANR	4671196	ArgumentList	"""Thread %d has thread safe block mismatch"""		4671155	1					
ANR	4671197	Argument	"""Thread %d has thread safe block mismatch"""		4671155	0					
ANR	4671198	PrimaryExpression	"""Thread %d has thread safe block mismatch"""		4671155	0					
ANR	4671199	Argument	context -> tid_		4671155	1					
ANR	4671200	PtrMemberAccess	context -> tid_		4671155	0					
ANR	4671201	Identifier	context		4671155	0					
ANR	4671202	Identifier	tid_		4671155	1					
ANR	4671203	IfStatement	if ( context -> parallel_mode_count_ == 1 )		4671155	4					
ANR	4671204	Condition	context -> parallel_mode_count_ == 1	916:6:24170:24203	4671155	0	True				
ANR	4671205	EqualityExpression	context -> parallel_mode_count_ == 1		4671155	0		==			
ANR	4671206	PtrMemberAccess	context -> parallel_mode_count_		4671155	0					
ANR	4671207	Identifier	context		4671155	0					
ANR	4671208	Identifier	parallel_mode_count_		4671155	1					
ANR	4671209	PrimaryExpression	1		4671155	1					
ANR	4671210	CompoundStatement		27:43:903:903	4671155	1					
ANR	4671211	ExpressionStatement	mutex_biglock_unlock ( )	918:2:24253:24275	4671155	0	True				
ANR	4671212	CallExpression	mutex_biglock_unlock ( )		4671155	0					
ANR	4671213	Callee	mutex_biglock_unlock		4671155	0					
ANR	4671214	Identifier	mutex_biglock_unlock		4671155	0					
ANR	4671215	ArgumentList			4671155	1					
ANR	4671216	ExpressionStatement	mutex_biglock_unlock ( )	925:1:24404:24426	4671155	5	True				
ANR	4671217	CallExpression	mutex_biglock_unlock ( )		4671155	0					
ANR	4671218	Callee	mutex_biglock_unlock		4671155	0					
ANR	4671219	Identifier	mutex_biglock_unlock		4671155	0					
ANR	4671220	ArgumentList			4671155	1					
ANR	4671221	ReturnStatement	return 0 ;	927:1:24430:24438	4671155	6	True				
ANR	4671222	PrimaryExpression	0		4671155	0					
ANR	4671223	ReturnType	int		4671155	1					
ANR	4671224	Identifier	ThreadImplementation :: start_thread_safe_block		4671155	2					
ANR	4671225	ParameterList			4671155	3					
ANR	4671226	CFGEntryNode	ENTRY		4671155		True				
ANR	4671227	CFGExitNode	EXIT		4671155		True				
ANR	4671228	Symbol	context -> tid_		4671155						
ANR	4671229	Symbol	get_handle		4671155						
ANR	4671230	Symbol	context -> parallel_mode_count_		4671155						
ANR	4671231	Symbol	context		4671155						
ANR	4671232	Symbol	context -> enable_parallel_flag_		4671155						
ANR	4671233	Symbol	* context		4671155						
ANR	4671234	Function	ThreadImplementation :: stop_thread_safe_block	930:0:24443:25631							
ANR	4671235	FunctionDef	ThreadImplementation :: stop_thread_safe_block ()		4671234	0					
ANR	4671236	CompoundStatement		932:0:24495:25631	4671234	0					
ANR	4671237	IdentifierDeclStatement	WorkerThreadPtr_t context = get_handle ( ) ;	937:1:24685:24725	4671234	0	True				
ANR	4671238	IdentifierDecl	context = get_handle ( )		4671234	0					
ANR	4671239	IdentifierDeclType	WorkerThreadPtr_t		4671234	0					
ANR	4671240	Identifier	context		4671234	1					
ANR	4671241	AssignmentExpression	context = get_handle ( )		4671234	2		=			
ANR	4671242	Identifier	context		4671234	0					
ANR	4671243	CallExpression	get_handle ( )		4671234	1					
ANR	4671244	Callee	get_handle		4671234	0					
ANR	4671245	Identifier	get_handle		4671234	0					
ANR	4671246	ArgumentList			4671234	1					
ANR	4671247	IfStatement	if ( ! context -> enable_parallel_flag_ )		4671234	1					
ANR	4671248	Condition	! context -> enable_parallel_flag_	940:5:24775:24805	4671234	0	True				
ANR	4671249	UnaryOperationExpression	! context -> enable_parallel_flag_		4671234	0					
ANR	4671250	UnaryOperator	!		4671234	0					
ANR	4671251	PtrMemberAccess	context -> enable_parallel_flag_		4671234	1					
ANR	4671252	Identifier	context		4671234	0					
ANR	4671253	Identifier	enable_parallel_flag_		4671234	1					
ANR	4671254	CompoundStatement		9:38:312:312	4671234	1					
ANR	4671255	ReturnStatement	return 1 ;	942:2:24871:24879	4671234	0	True				
ANR	4671256	PrimaryExpression	1		4671234	0					
ANR	4671257	ExpressionStatement	context -> parallel_mode_count_ -= 1	948:1:25077:25111	4671234	2	True				
ANR	4671258	AssignmentExpression	context -> parallel_mode_count_ -= 1		4671234	0		-=			
ANR	4671259	PtrMemberAccess	context -> parallel_mode_count_		4671234	0					
ANR	4671260	Identifier	context		4671234	0					
ANR	4671261	Identifier	parallel_mode_count_		4671234	1					
ANR	4671262	PrimaryExpression	1		4671234	1					
ANR	4671263	IfStatement	if ( context -> parallel_mode_count_ < 0 )		4671234	3					
ANR	4671264	Condition	context -> parallel_mode_count_ < 0	951:6:25186:25218	4671234	0	True				
ANR	4671265	RelationalExpression	context -> parallel_mode_count_ < 0		4671234	0		<			
ANR	4671266	PtrMemberAccess	context -> parallel_mode_count_		4671234	0					
ANR	4671267	Identifier	context		4671234	0					
ANR	4671268	Identifier	parallel_mode_count_		4671234	1					
ANR	4671269	PrimaryExpression	0		4671234	1					
ANR	4671270	CompoundStatement		20:42:726:726	4671234	1					
ANR	4671271	ExpressionStatement	"EXCEPT ( ""Thread %d has thread safe block mismatch"" , context -> tid_ )"	952:2:25226:25290	4671234	0	True				
ANR	4671272	CallExpression	"EXCEPT ( ""Thread %d has thread safe block mismatch"" , context -> tid_ )"		4671234	0					
ANR	4671273	Callee	EXCEPT		4671234	0					
ANR	4671274	Identifier	EXCEPT		4671234	0					
ANR	4671275	ArgumentList	"""Thread %d has thread safe block mismatch"""		4671234	1					
ANR	4671276	Argument	"""Thread %d has thread safe block mismatch"""		4671234	0					
ANR	4671277	PrimaryExpression	"""Thread %d has thread safe block mismatch"""		4671234	0					
ANR	4671278	Argument	context -> tid_		4671234	1					
ANR	4671279	PtrMemberAccess	context -> tid_		4671234	0					
ANR	4671280	Identifier	context		4671234	0					
ANR	4671281	Identifier	tid_		4671234	1					
ANR	4671282	IfStatement	if ( context -> parallel_mode_count_ == 0 )		4671234	4					
ANR	4671283	Condition	context -> parallel_mode_count_ == 0	955:6:25302:25335	4671234	0	True				
ANR	4671284	EqualityExpression	context -> parallel_mode_count_ == 0		4671234	0		==			
ANR	4671285	PtrMemberAccess	context -> parallel_mode_count_		4671234	0					
ANR	4671286	Identifier	context		4671234	0					
ANR	4671287	Identifier	parallel_mode_count_		4671234	1					
ANR	4671288	PrimaryExpression	0		4671234	1					
ANR	4671289	CompoundStatement		24:43:843:843	4671234	1					
ANR	4671290	ExpressionStatement	context -> set_status ( WorkerThread :: THREAD_READY )	956:2:25343:25392	4671234	0	True				
ANR	4671291	CallExpression	context -> set_status ( WorkerThread :: THREAD_READY )		4671234	0					
ANR	4671292	Callee	context -> set_status		4671234	0					
ANR	4671293	PtrMemberAccess	context -> set_status		4671234	0					
ANR	4671294	Identifier	context		4671234	0					
ANR	4671295	Identifier	set_status		4671234	1					
ANR	4671296	ArgumentList	WorkerThread :: THREAD_READY		4671234	1					
ANR	4671297	Argument	WorkerThread :: THREAD_READY		4671234	0					
ANR	4671298	Identifier	WorkerThread :: THREAD_READY		4671234	0					
ANR	4671299	ExpressionStatement	mutex_biglock_lock ( )	958:2:25438:25458	4671234	1	True				
ANR	4671300	CallExpression	mutex_biglock_lock ( )		4671234	0					
ANR	4671301	Callee	mutex_biglock_lock		4671234	0					
ANR	4671302	Identifier	mutex_biglock_lock		4671234	0					
ANR	4671303	ArgumentList			4671234	1					
ANR	4671304	ExpressionStatement	mutex_biglock_lock ( )	962:1:25472:25492	4671234	5	True				
ANR	4671305	CallExpression	mutex_biglock_lock ( )		4671234	0					
ANR	4671306	Callee	mutex_biglock_lock		4671234	0					
ANR	4671307	Identifier	mutex_biglock_lock		4671234	0					
ANR	4671308	ArgumentList			4671234	1					
ANR	4671309	ExpressionStatement	get_handle ( ) -> set_status ( WorkerThread :: THREAD_RUNNING )	964:1:25561:25617	4671234	6	True				
ANR	4671310	CallExpression	get_handle ( ) -> set_status ( WorkerThread :: THREAD_RUNNING )		4671234	0					
ANR	4671311	Callee	get_handle ( ) -> set_status		4671234	0					
ANR	4671312	PtrMemberAccess	get_handle ( ) -> set_status		4671234	0					
ANR	4671313	CallExpression	get_handle ( )		4671234	0					
ANR	4671314	Callee	get_handle		4671234	0					
ANR	4671315	Identifier	get_handle		4671234	0					
ANR	4671316	ArgumentList			4671234	1					
ANR	4671317	Identifier	set_status		4671234	1					
ANR	4671318	ArgumentList	WorkerThread :: THREAD_RUNNING		4671234	1					
ANR	4671319	Argument	WorkerThread :: THREAD_RUNNING		4671234	0					
ANR	4671320	Identifier	WorkerThread :: THREAD_RUNNING		4671234	0					
ANR	4671321	ReturnStatement	return 0 ;	966:1:25621:25629	4671234	7	True				
ANR	4671322	PrimaryExpression	0		4671234	0					
ANR	4671323	ReturnType	int		4671234	1					
ANR	4671324	Identifier	ThreadImplementation :: stop_thread_safe_block		4671234	2					
ANR	4671325	ParameterList			4671234	3					
ANR	4671326	CFGEntryNode	ENTRY		4671234		True				
ANR	4671327	CFGExitNode	EXIT		4671234		True				
ANR	4671328	Symbol	WorkerThread :: THREAD_READY		4671234						
ANR	4671329	Symbol	context -> tid_		4671234						
ANR	4671330	Symbol	get_handle		4671234						
ANR	4671331	Symbol	context -> parallel_mode_count_		4671234						
ANR	4671332	Symbol	WorkerThread :: THREAD_RUNNING		4671234						
ANR	4671333	Symbol	context		4671234						
ANR	4671334	Symbol	context -> enable_parallel_flag_		4671234						
ANR	4671335	Symbol	* context		4671234						
ANR	4671336	Function	ThreadImplementation :: remove_tid	969:0:25634:25813							
ANR	4671337	FunctionDef	ThreadImplementation :: remove_tid (int tid)		4671336	0					
ANR	4671338	CompoundStatement		971:0:25681:25813	4671336	0					
ANR	4671339	IfStatement	if ( tid < 2 )		4671336	0					
ANR	4671340	Condition	tid < 2	973:5:25711:25717	4671336	0	True				
ANR	4671341	RelationalExpression	tid < 2		4671336	0		<			
ANR	4671342	Identifier	tid		4671336	0					
ANR	4671343	PrimaryExpression	2		4671336	1					
ANR	4671344	CompoundStatement		3:15:39:39	4671336	1					
ANR	4671345	ReturnStatement	return ;	974:2:25725:25731	4671336	0	True				
ANR	4671346	ExpressionStatement	mutex_handle_lock ( )	977:1:25738:25757	4671336	1	True				
ANR	4671347	CallExpression	mutex_handle_lock ( )		4671336	0					
ANR	4671348	Callee	mutex_handle_lock		4671336	0					
ANR	4671349	Identifier	mutex_handle_lock		4671336	0					
ANR	4671350	ArgumentList			4671336	1					
ANR	4671351	ExpressionStatement	hashTidToWorker . remove ( tid )	978:1:25760:25787	4671336	2	True				
ANR	4671352	CallExpression	hashTidToWorker . remove ( tid )		4671336	0					
ANR	4671353	Callee	hashTidToWorker . remove		4671336	0					
ANR	4671354	MemberAccess	hashTidToWorker . remove		4671336	0					
ANR	4671355	Identifier	hashTidToWorker		4671336	0					
ANR	4671356	Identifier	remove		4671336	1					
ANR	4671357	ArgumentList	tid		4671336	1					
ANR	4671358	Argument	tid		4671336	0					
ANR	4671359	Identifier	tid		4671336	0					
ANR	4671360	ExpressionStatement	mutex_handle_unlock ( )	979:1:25790:25811	4671336	3	True				
ANR	4671361	CallExpression	mutex_handle_unlock ( )		4671336	0					
ANR	4671362	Callee	mutex_handle_unlock		4671336	0					
ANR	4671363	Identifier	mutex_handle_unlock		4671336	0					
ANR	4671364	ArgumentList			4671336	1					
ANR	4671365	ReturnType	void		4671336	1					
ANR	4671366	Identifier	ThreadImplementation :: remove_tid		4671336	2					
ANR	4671367	ParameterList	int tid		4671336	3					
ANR	4671368	Parameter	int tid	970:33:25672:25678	4671336	0	True				
ANR	4671369	ParameterType	int		4671336	0					
ANR	4671370	Identifier	tid		4671336	1					
ANR	4671371	CFGEntryNode	ENTRY		4671336		True				
ANR	4671372	CFGExitNode	EXIT		4671336		True				
ANR	4671373	Symbol	hashTidToWorker		4671336						
ANR	4671374	Symbol	tid		4671336						
ANR	4671375	Function	WorkerThread :: set_status	986:0:25897:26123							
ANR	4671376	FunctionDef	WorkerThread :: set_status (thread_status_t newstatus)		4671375	0					
ANR	4671377	CompoundStatement		988:0:25954:26123	4671375	0					
ANR	4671378	IfStatement	if ( status_ == THREAD_COMPLETED )		4671375	0					
ANR	4671379	Condition	status_ == THREAD_COMPLETED	990:6:26029:26055	4671375	0	True				
ANR	4671380	EqualityExpression	status_ == THREAD_COMPLETED		4671375	0		==			
ANR	4671381	Identifier	status_		4671375	0					
ANR	4671382	Identifier	THREAD_COMPLETED		4671375	1					
ANR	4671383	CompoundStatement		3:37:105:105	4671375	1					
ANR	4671384	ReturnStatement	return ;	991:2:26066:26072	4671375	0	True				
ANR	4671385	ExpressionStatement	status_ = newstatus	995:1:26102:26121	4671375	1	True				
ANR	4671386	AssignmentExpression	status_ = newstatus		4671375	0		=			
ANR	4671387	Identifier	status_		4671375	0					
ANR	4671388	Identifier	newstatus		4671375	1					
ANR	4671389	ReturnType	void		4671375	1					
ANR	4671390	Identifier	WorkerThread :: set_status		4671375	2					
ANR	4671391	ParameterList	thread_status_t newstatus		4671375	3					
ANR	4671392	Parameter	thread_status_t newstatus	987:25:25927:25951	4671375	0	True				
ANR	4671393	ParameterType	thread_status_t		4671375	0					
ANR	4671394	Identifier	newstatus		4671375	1					
ANR	4671395	CFGEntryNode	ENTRY		4671375		True				
ANR	4671396	CFGExitNode	EXIT		4671375		True				
ANR	4671397	Symbol	status_		4671375						
ANR	4671398	Symbol	newstatus		4671375						
ANR	4671399	Symbol	THREAD_COMPLETED		4671375						
ANR	4671400	Function	ThreadImplementation :: ThreadImplementation	1004:0:26229:26357							
ANR	4671401	FunctionDef	ThreadImplementation :: ThreadImplementation ()		4671400	0					
ANR	4671402	CompoundStatement		1006:0:26346:26357	4671400	0					
ANR	4671403	ReturnStatement	return ;	1007:1:26349:26355	4671400	0	True				
ANR	4671404	Identifier	ThreadImplementation :: ThreadImplementation		4671400	1					
ANR	4671405	ParameterList			4671400	2					
ANR	4671406	CFGEntryNode	ENTRY		4671400		True				
ANR	4671407	CFGExitNode	EXIT		4671400		True				
ANR	4671408	Function	ThreadImplementation :: ~ThreadImplementation	1010:0:26360:26417							
ANR	4671409	FunctionDef	ThreadImplementation :: ~ThreadImplementation ()		4671408	0					
ANR	4671410	CompoundStatement		1011:0:26406:26417	4671408	0					
ANR	4671411	ReturnStatement	return ;	1012:1:26409:26415	4671408	0	True				
ANR	4671412	Identifier	ThreadImplementation :: ~ThreadImplementation		4671408	1					
ANR	4671413	ParameterList			4671408	2					
ANR	4671414	CFGEntryNode	ENTRY		4671408		True				
ANR	4671415	CFGExitNode	EXIT		4671408		True				
ANR	4671416	Function	ThreadImplementation :: start_thread_safe_block	1015:0:26420:26486							
ANR	4671417	FunctionDef	ThreadImplementation :: start_thread_safe_block ()		4671416	0					
ANR	4671418	CompoundStatement		1016:0:26472:26486	4671416	0					
ANR	4671419	ReturnStatement	return - 1 ;	1017:1:26475:26484	4671416	0	True				
ANR	4671420	UnaryOperationExpression	- 1		4671416	0					
ANR	4671421	UnaryOperator	-		4671416	0					
ANR	4671422	PrimaryExpression	1		4671416	1					
ANR	4671423	ReturnType	int		4671416	1					
ANR	4671424	Identifier	ThreadImplementation :: start_thread_safe_block		4671416	2					
ANR	4671425	ParameterList			4671416	3					
ANR	4671426	CFGEntryNode	ENTRY		4671416		True				
ANR	4671427	CFGExitNode	EXIT		4671416		True				
ANR	4671428	Function	ThreadImplementation :: stop_thread_safe_block	1020:0:26489:26554							
ANR	4671429	FunctionDef	ThreadImplementation :: stop_thread_safe_block ()		4671428	0					
ANR	4671430	CompoundStatement		1021:0:26540:26554	4671428	0					
ANR	4671431	ReturnStatement	return - 1 ;	1022:1:26543:26552	4671428	0	True				
ANR	4671432	UnaryOperationExpression	- 1		4671428	0					
ANR	4671433	UnaryOperator	-		4671428	0					
ANR	4671434	PrimaryExpression	1		4671428	1					
ANR	4671435	ReturnType	int		4671428	1					
ANR	4671436	Identifier	ThreadImplementation :: stop_thread_safe_block		4671428	2					
ANR	4671437	ParameterList			4671428	3					
ANR	4671438	CFGEntryNode	ENTRY		4671428		True				
ANR	4671439	CFGExitNode	EXIT		4671428		True				
ANR	4671440	Function	ThreadImplementation :: yield	1025:0:26557:26606							
ANR	4671441	FunctionDef	ThreadImplementation :: yield ()		4671440	0					
ANR	4671442	CompoundStatement		1026:0:26592:26606	4671440	0					
ANR	4671443	ReturnStatement	return - 1 ;	1027:1:26595:26604	4671440	0	True				
ANR	4671444	UnaryOperationExpression	- 1		4671440	0					
ANR	4671445	UnaryOperator	-		4671440	0					
ANR	4671446	PrimaryExpression	1		4671440	1					
ANR	4671447	ReturnType	int		4671440	1					
ANR	4671448	Identifier	ThreadImplementation :: yield		4671440	2					
ANR	4671449	ParameterList			4671440	3					
ANR	4671450	CFGEntryNode	ENTRY		4671440		True				
ANR	4671451	CFGExitNode	EXIT		4671440		True				
ANR	4671452	Function	ThreadImplementation :: get_tid	1030:0:26609:26659							
ANR	4671453	FunctionDef	ThreadImplementation :: get_tid ()		4671452	0					
ANR	4671454	CompoundStatement		1031:0:26645:26659	4671452	0					
ANR	4671455	ReturnStatement	return - 1 ;	1032:1:26648:26657	4671452	0	True				
ANR	4671456	UnaryOperationExpression	- 1		4671452	0					
ANR	4671457	UnaryOperator	-		4671452	0					
ANR	4671458	PrimaryExpression	1		4671452	1					
ANR	4671459	ReturnType	int		4671452	1					
ANR	4671460	Identifier	ThreadImplementation :: get_tid		4671452	2					
ANR	4671461	ParameterList			4671452	3					
ANR	4671462	CFGEntryNode	ENTRY		4671452		True				
ANR	4671463	CFGExitNode	EXIT		4671452		True				
ANR	4671464	Function	ThreadImplementation :: pool_init	1040:0:26757:26809							
ANR	4671465	FunctionDef	ThreadImplementation :: pool_init ()		4671464	0					
ANR	4671466	CompoundStatement		1041:0:26795:26809	4671464	0					
ANR	4671467	ReturnStatement	return - 1 ;	1042:1:26798:26807	4671464	0	True				
ANR	4671468	UnaryOperationExpression	- 1		4671464	0					
ANR	4671469	UnaryOperator	-		4671464	0					
ANR	4671470	PrimaryExpression	1		4671464	1					
ANR	4671471	ReturnType	int		4671464	1					
ANR	4671472	Identifier	ThreadImplementation :: pool_init		4671464	2					
ANR	4671473	ParameterList			4671464	3					
ANR	4671474	CFGEntryNode	ENTRY		4671464		True				
ANR	4671475	CFGExitNode	EXIT		4671464		True				
ANR	4671476	Function	CondorThreads :: pool_init	1064:0:27189:27501							
ANR	4671477	FunctionDef	CondorThreads :: pool_init ()		4671476	0					
ANR	4671478	CompoundStatement		1066:0:27221:27501	4671476	0					
ANR	4671479	Statement	static	1067:1:27224:27229	4671476	0	True				
ANR	4671480	IdentifierDeclStatement	bool already_been_here = false ;	1067:8:27231:27261	4671476	1	True				
ANR	4671481	IdentifierDecl	already_been_here = false		4671476	0					
ANR	4671482	IdentifierDeclType	bool		4671476	0					
ANR	4671483	Identifier	already_been_here		4671476	1					
ANR	4671484	AssignmentExpression	already_been_here = false		4671476	2		=			
ANR	4671485	Identifier	false		4671476	0					
ANR	4671486	Identifier	false		4671476	1					
ANR	4671487	IfStatement	if ( already_been_here )		4671476	2					
ANR	4671488	Condition	already_been_here	1070:6:27300:27316	4671476	0	True				
ANR	4671489	Identifier	already_been_here		4671476	0					
ANR	4671490	ReturnStatement	return - 2 ;	1070:26:27320:27329	4671476	1	True				
ANR	4671491	UnaryOperationExpression	- 2		4671476	0					
ANR	4671492	UnaryOperator	-		4671476	0					
ANR	4671493	PrimaryExpression	2		4671476	1					
ANR	4671494	ExpressionStatement	already_been_here = true	1071:1:27332:27356	4671476	3	True				
ANR	4671495	AssignmentExpression	already_been_here = true		4671476	0		=			
ANR	4671496	Identifier	already_been_here		4671476	0					
ANR	4671497	Identifier	true		4671476	1					
ANR	4671498	Statement	TI	1073:1:27360:27361	4671476	4	True				
ANR	4671499	Statement	=	1073:4:27363:27363	4671476	5	True				
ANR	4671500	Statement	new	1073:6:27365:27367	4671476	6	True				
ANR	4671501	ExpressionStatement	ThreadImplementation	1073:10:27369:27389	4671476	7	True				
ANR	4671502	Identifier	ThreadImplementation		4671476	0					
ANR	4671503	IdentifierDeclStatement	int numThreads = TI -> pool_init ( ) ;	1074:1:27392:27424	4671476	8	True				
ANR	4671504	IdentifierDecl	numThreads = TI -> pool_init ( )		4671476	0					
ANR	4671505	IdentifierDeclType	int		4671476	0					
ANR	4671506	Identifier	numThreads		4671476	1					
ANR	4671507	AssignmentExpression	numThreads = TI -> pool_init ( )		4671476	2		=			
ANR	4671508	Identifier	numThreads		4671476	0					
ANR	4671509	CallExpression	TI -> pool_init ( )		4671476	1					
ANR	4671510	Callee	TI -> pool_init		4671476	0					
ANR	4671511	PtrMemberAccess	TI -> pool_init		4671476	0					
ANR	4671512	Identifier	TI		4671476	0					
ANR	4671513	Identifier	pool_init		4671476	1					
ANR	4671514	ArgumentList			4671476	1					
ANR	4671515	IfStatement	if ( numThreads < 1 )		4671476	9					
ANR	4671516	Condition	numThreads < 1	1075:6:27432:27445	4671476	0	True				
ANR	4671517	RelationalExpression	numThreads < 1		4671476	0		<			
ANR	4671518	Identifier	numThreads		4671476	0					
ANR	4671519	PrimaryExpression	1		4671476	1					
ANR	4671520	CompoundStatement		10:23:227:227	4671476	1					
ANR	4671521	Statement	delete	1076:2:27453:27458	4671476	0	True				
ANR	4671522	ExpressionStatement	TI	1076:9:27460:27462	4671476	1	True				
ANR	4671523	Identifier	TI		4671476	0					
ANR	4671524	ExpressionStatement	TI = NULL	1077:2:27466:27475	4671476	2	True				
ANR	4671525	AssignmentExpression	TI = NULL		4671476	0		=			
ANR	4671526	Identifier	TI		4671476	0					
ANR	4671527	Identifier	NULL		4671476	1					
ANR	4671528	ReturnStatement	return numThreads ;	1080:1:27482:27499	4671476	10	True				
ANR	4671529	Identifier	numThreads		4671476	0					
ANR	4671530	ReturnType	int		4671476	1					
ANR	4671531	Identifier	CondorThreads :: pool_init		4671476	2					
ANR	4671532	ParameterList			4671476	3					
ANR	4671533	CFGEntryNode	ENTRY		4671476		True				
ANR	4671534	CFGExitNode	EXIT		4671476		True				
ANR	4671535	Symbol	already_been_here		4671476						
ANR	4671536	Symbol	NULL		4671476						
ANR	4671537	Symbol	TI		4671476						
ANR	4671538	Symbol	false		4671476						
ANR	4671539	Symbol	true		4671476						
ANR	4671540	Symbol	TI -> pool_init		4671476						
ANR	4671541	Symbol	* TI		4671476						
ANR	4671542	Symbol	numThreads		4671476						
ANR	4671543	Function	CondorThreads :: pool_size	1083:0:27504:27626							
ANR	4671544	FunctionDef	CondorThreads :: pool_size ()		4671543	0					
ANR	4671545	CompoundStatement		1085:0:27535:27626	4671543	0					
ANR	4671546	IdentifierDeclStatement	int size ;	1086:1:27538:27546	4671543	0	True				
ANR	4671547	IdentifierDecl	size		4671543	0					
ANR	4671548	IdentifierDeclType	int		4671543	0					
ANR	4671549	Identifier	size		4671543	1					
ANR	4671550	IfStatement	if ( TI )		4671543	1					
ANR	4671551	Condition	TI	1088:5:27554:27555	4671543	0	True				
ANR	4671552	Identifier	TI		4671543	0					
ANR	4671553	CompoundStatement		4:9:22:22	4671543	1					
ANR	4671554	ExpressionStatement	size = TI -> pool_size ( )	1089:2:27562:27584	4671543	0	True				
ANR	4671555	AssignmentExpression	size = TI -> pool_size ( )		4671543	0		=			
ANR	4671556	Identifier	size		4671543	0					
ANR	4671557	CallExpression	TI -> pool_size ( )		4671543	1					
ANR	4671558	Callee	TI -> pool_size		4671543	0					
ANR	4671559	PtrMemberAccess	TI -> pool_size		4671543	0					
ANR	4671560	Identifier	TI		4671543	0					
ANR	4671561	Identifier	pool_size		4671543	1					
ANR	4671562	ArgumentList			4671543	1					
ANR	4671563	ElseStatement	else		4671543	0					
ANR	4671564	CompoundStatement		6:8:58:58	4671543	0					
ANR	4671565	ExpressionStatement	size = 0	1091:2:27598:27606	4671543	0	True				
ANR	4671566	AssignmentExpression	size = 0		4671543	0		=			
ANR	4671567	Identifier	size		4671543	0					
ANR	4671568	PrimaryExpression	0		4671543	1					
ANR	4671569	ReturnStatement	return size ;	1094:1:27613:27624	4671543	2	True				
ANR	4671570	Identifier	size		4671543	0					
ANR	4671571	ReturnType	int		4671543	1					
ANR	4671572	Identifier	CondorThreads :: pool_size		4671543	2					
ANR	4671573	ParameterList			4671543	3					
ANR	4671574	CFGEntryNode	ENTRY		4671543		True				
ANR	4671575	CFGExitNode	EXIT		4671543		True				
ANR	4671576	Symbol	size		4671543						
ANR	4671577	Symbol	TI		4671543						
ANR	4671578	Symbol	* TI		4671543						
ANR	4671579	Symbol	TI -> pool_size		4671543						
ANR	4671580	Function	CondorThreads :: pool_add	1097:0:27629:28001							
ANR	4671581	FunctionDef	"CondorThreads :: pool_add (condor_thread_func_t routine , void * arg , int * tid , const char * descrip)"		4671580	0					
ANR	4671582	CompoundStatement		1100:0:27734:28001	4671580	0					
ANR	4671583	IfStatement	if ( ! TI )		4671580	0					
ANR	4671584	Condition	! TI	1105:6:27851:27853	4671580	0	True				
ANR	4671585	UnaryOperationExpression	! TI		4671580	0					
ANR	4671586	UnaryOperator	!		4671580	0					
ANR	4671587	Identifier	TI		4671580	1					
ANR	4671588	CompoundStatement		6:12:122:122	4671580	1					
ANR	4671589	IfStatement	if ( tid )		4671580	0					
ANR	4671590	Condition	tid	1106:7:27866:27868	4671580	0	True				
ANR	4671591	Identifier	tid		4671580	0					
ANR	4671592	CompoundStatement		7:14:138:138	4671580	1					
ANR	4671593	ExpressionStatement	* tid = 0	1107:3:27878:27886	4671580	0	True				
ANR	4671594	AssignmentExpression	* tid = 0		4671580	0		=			
ANR	4671595	UnaryOperationExpression	* tid		4671580	0					
ANR	4671596	UnaryOperator	*		4671580	0					
ANR	4671597	Identifier	tid		4671580	1					
ANR	4671598	PrimaryExpression	0		4671580	1					
ANR	4671599	ExpressionStatement	( * ( routine ) ) ( arg )	1109:2:27894:27911	4671580	1	True				
ANR	4671600	CallExpression	( * ( routine ) ) ( arg )		4671580	0					
ANR	4671601	Callee	* ( routine )		4671580	0					
ANR	4671602	UnaryOperationExpression	* ( routine )		4671580	0					
ANR	4671603	UnaryOperator	*		4671580	0					
ANR	4671604	Identifier	routine		4671580	1					
ANR	4671605	ArgumentList	arg		4671580	1					
ANR	4671606	Argument	arg		4671580	0					
ANR	4671607	Identifier	arg		4671580	0					
ANR	4671608	ReturnStatement	return 0 ;	1110:2:27940:27948	4671580	2	True				
ANR	4671609	PrimaryExpression	0		4671580	0					
ANR	4671610	ReturnStatement	"return TI -> pool_add ( routine , arg , tid , descrip ) ;"	1113:1:27955:27999	4671580	1	True				
ANR	4671611	CallExpression	"TI -> pool_add ( routine , arg , tid , descrip )"		4671580	0					
ANR	4671612	Callee	TI -> pool_add		4671580	0					
ANR	4671613	PtrMemberAccess	TI -> pool_add		4671580	0					
ANR	4671614	Identifier	TI		4671580	0					
ANR	4671615	Identifier	pool_add		4671580	1					
ANR	4671616	ArgumentList	routine		4671580	1					
ANR	4671617	Argument	routine		4671580	0					
ANR	4671618	Identifier	routine		4671580	0					
ANR	4671619	Argument	arg		4671580	1					
ANR	4671620	Identifier	arg		4671580	0					
ANR	4671621	Argument	tid		4671580	2					
ANR	4671622	Identifier	tid		4671580	0					
ANR	4671623	Argument	descrip		4671580	3					
ANR	4671624	Identifier	descrip		4671580	0					
ANR	4671625	ReturnType	int		4671580	1					
ANR	4671626	Identifier	CondorThreads :: pool_add		4671580	2					
ANR	4671627	ParameterList	"condor_thread_func_t routine , void * arg , int * tid , const char * descrip"		4671580	3					
ANR	4671628	Parameter	condor_thread_func_t routine	1098:24:27658:27685	4671580	0	True				
ANR	4671629	ParameterType	condor_thread_func_t		4671580	0					
ANR	4671630	Identifier	routine		4671580	1					
ANR	4671631	Parameter	void * arg	1098:54:27688:27696	4671580	1	True				
ANR	4671632	ParameterType	void *		4671580	0					
ANR	4671633	Identifier	arg		4671580	1					
ANR	4671634	Parameter	int * tid	1098:65:27699:27706	4671580	2	True				
ANR	4671635	ParameterType	int *		4671580	0					
ANR	4671636	Identifier	tid		4671580	1					
ANR	4671637	Parameter	const char * descrip	1099:4:27713:27731	4671580	3	True				
ANR	4671638	ParameterType	const char *		4671580	0					
ANR	4671639	Identifier	descrip		4671580	1					
ANR	4671640	CFGEntryNode	ENTRY		4671580		True				
ANR	4671641	CFGExitNode	EXIT		4671580		True				
ANR	4671642	Symbol	TI -> pool_add		4671580						
ANR	4671643	Symbol	routine		4671580						
ANR	4671644	Symbol	descrip		4671580						
ANR	4671645	Symbol	TI		4671580						
ANR	4671646	Symbol	arg		4671580						
ANR	4671647	Symbol	* TI		4671580						
ANR	4671648	Symbol	* tid		4671580						
ANR	4671649	Symbol	tid		4671580						
ANR	4671650	Function	CondorThreads :: start_thread_safe_block	1116:0:28004:28111							
ANR	4671651	FunctionDef	CondorThreads :: start_thread_safe_block ()		4671650	0					
ANR	4671652	CompoundStatement		1118:0:28049:28111	4671650	0					
ANR	4671653	IfStatement	if ( ! TI )		4671650	0					
ANR	4671654	Condition	! TI	1119:5:28056:28058	4671650	0	True				
ANR	4671655	UnaryOperationExpression	! TI		4671650	0					
ANR	4671656	UnaryOperator	!		4671650	0					
ANR	4671657	Identifier	TI		4671650	1					
ANR	4671658	ReturnStatement	return - 1 ;	1119:10:28061:28070	4671650	1	True				
ANR	4671659	UnaryOperationExpression	- 1		4671650	0					
ANR	4671660	UnaryOperator	-		4671650	0					
ANR	4671661	PrimaryExpression	1		4671650	1					
ANR	4671662	ReturnStatement	return TI -> start_thread_safe_block ( ) ;	1120:1:28073:28109	4671650	1	True				
ANR	4671663	CallExpression	TI -> start_thread_safe_block ( )		4671650	0					
ANR	4671664	Callee	TI -> start_thread_safe_block		4671650	0					
ANR	4671665	PtrMemberAccess	TI -> start_thread_safe_block		4671650	0					
ANR	4671666	Identifier	TI		4671650	0					
ANR	4671667	Identifier	start_thread_safe_block		4671650	1					
ANR	4671668	ArgumentList			4671650	1					
ANR	4671669	ReturnType	int		4671650	1					
ANR	4671670	Identifier	CondorThreads :: start_thread_safe_block		4671650	2					
ANR	4671671	ParameterList			4671650	3					
ANR	4671672	CFGEntryNode	ENTRY		4671650		True				
ANR	4671673	CFGExitNode	EXIT		4671650		True				
ANR	4671674	Symbol	TI		4671650						
ANR	4671675	Symbol	* TI		4671650						
ANR	4671676	Symbol	TI -> start_thread_safe_block		4671650						
ANR	4671677	Function	CondorThreads :: stop_thread_safe_block	1123:0:28114:28219							
ANR	4671678	FunctionDef	CondorThreads :: stop_thread_safe_block ()		4671677	0					
ANR	4671679	CompoundStatement		1125:0:28158:28219	4671677	0					
ANR	4671680	IfStatement	if ( ! TI )		4671677	0					
ANR	4671681	Condition	! TI	1126:5:28165:28167	4671677	0	True				
ANR	4671682	UnaryOperationExpression	! TI		4671677	0					
ANR	4671683	UnaryOperator	!		4671677	0					
ANR	4671684	Identifier	TI		4671677	1					
ANR	4671685	ReturnStatement	return - 1 ;	1126:10:28170:28179	4671677	1	True				
ANR	4671686	UnaryOperationExpression	- 1		4671677	0					
ANR	4671687	UnaryOperator	-		4671677	0					
ANR	4671688	PrimaryExpression	1		4671677	1					
ANR	4671689	ReturnStatement	return TI -> stop_thread_safe_block ( ) ;	1127:1:28182:28217	4671677	1	True				
ANR	4671690	CallExpression	TI -> stop_thread_safe_block ( )		4671677	0					
ANR	4671691	Callee	TI -> stop_thread_safe_block		4671677	0					
ANR	4671692	PtrMemberAccess	TI -> stop_thread_safe_block		4671677	0					
ANR	4671693	Identifier	TI		4671677	0					
ANR	4671694	Identifier	stop_thread_safe_block		4671677	1					
ANR	4671695	ArgumentList			4671677	1					
ANR	4671696	ReturnType	int		4671677	1					
ANR	4671697	Identifier	CondorThreads :: stop_thread_safe_block		4671677	2					
ANR	4671698	ParameterList			4671677	3					
ANR	4671699	CFGEntryNode	ENTRY		4671677		True				
ANR	4671700	CFGExitNode	EXIT		4671677		True				
ANR	4671701	Symbol	TI		4671677						
ANR	4671702	Symbol	TI -> stop_thread_safe_block		4671677						
ANR	4671703	Symbol	* TI		4671677						
ANR	4671704	Function	CondorThreads :: yield	1130:0:28222:28294							
ANR	4671705	FunctionDef	CondorThreads :: yield ()		4671704	0					
ANR	4671706	CompoundStatement		1132:0:28250:28294	4671704	0					
ANR	4671707	IfStatement	if ( ! TI )		4671704	0					
ANR	4671708	Condition	! TI	1133:5:28257:28259	4671704	0	True				
ANR	4671709	UnaryOperationExpression	! TI		4671704	0					
ANR	4671710	UnaryOperator	!		4671704	0					
ANR	4671711	Identifier	TI		4671704	1					
ANR	4671712	ReturnStatement	return - 1 ;	1133:10:28262:28271	4671704	1	True				
ANR	4671713	UnaryOperationExpression	- 1		4671704	0					
ANR	4671714	UnaryOperator	-		4671704	0					
ANR	4671715	PrimaryExpression	1		4671704	1					
ANR	4671716	ReturnStatement	return TI -> yield ( ) ;	1134:1:28274:28292	4671704	1	True				
ANR	4671717	CallExpression	TI -> yield ( )		4671704	0					
ANR	4671718	Callee	TI -> yield		4671704	0					
ANR	4671719	PtrMemberAccess	TI -> yield		4671704	0					
ANR	4671720	Identifier	TI		4671704	0					
ANR	4671721	Identifier	yield		4671704	1					
ANR	4671722	ArgumentList			4671704	1					
ANR	4671723	ReturnType	int		4671704	1					
ANR	4671724	Identifier	CondorThreads :: yield		4671704	2					
ANR	4671725	ParameterList			4671704	3					
ANR	4671726	CFGEntryNode	ENTRY		4671704		True				
ANR	4671727	CFGExitNode	EXIT		4671704		True				
ANR	4671728	Symbol	TI		4671704						
ANR	4671729	Symbol	* TI		4671704						
ANR	4671730	Symbol	TI -> yield		4671704						
ANR	4671731	Function	CondorThreads :: set_switch_callback	1137:0:28297:28428							
ANR	4671732	FunctionDef	CondorThreads :: set_switch_callback (condor_thread_switch_callback_t func)		4671731	0					
ANR	4671733	CompoundStatement		1139:0:28376:28428	4671731	0					
ANR	4671734	IfStatement	if ( ! TI )		4671731	0					
ANR	4671735	Condition	! TI	1140:5:28383:28385	4671731	0	True				
ANR	4671736	UnaryOperationExpression	! TI		4671731	0					
ANR	4671737	UnaryOperator	!		4671731	0					
ANR	4671738	Identifier	TI		4671731	1					
ANR	4671739	ReturnStatement	return ;	1140:10:28388:28394	4671731	1	True				
ANR	4671740	ExpressionStatement	TI -> set_switch_callback ( func )	1141:1:28397:28426	4671731	1	True				
ANR	4671741	CallExpression	TI -> set_switch_callback ( func )		4671731	0					
ANR	4671742	Callee	TI -> set_switch_callback		4671731	0					
ANR	4671743	PtrMemberAccess	TI -> set_switch_callback		4671731	0					
ANR	4671744	Identifier	TI		4671731	0					
ANR	4671745	Identifier	set_switch_callback		4671731	1					
ANR	4671746	ArgumentList	func		4671731	1					
ANR	4671747	Argument	func		4671731	0					
ANR	4671748	Identifier	func		4671731	0					
ANR	4671749	ReturnType	void		4671731	1					
ANR	4671750	Identifier	CondorThreads :: set_switch_callback		4671731	2					
ANR	4671751	ParameterList	condor_thread_switch_callback_t func		4671731	3					
ANR	4671752	Parameter	condor_thread_switch_callback_t func	1138:35:28338:28373	4671731	0	True				
ANR	4671753	ParameterType	condor_thread_switch_callback_t		4671731	0					
ANR	4671754	Identifier	func		4671731	1					
ANR	4671755	CFGEntryNode	ENTRY		4671731		True				
ANR	4671756	CFGExitNode	EXIT		4671731		True				
ANR	4671757	Symbol	func		4671731						
ANR	4671758	Symbol	TI		4671731						
ANR	4671759	Function	CondorThreads :: get_tid	1144:0:28431:28507							
ANR	4671760	FunctionDef	CondorThreads :: get_tid ()		4671759	0					
ANR	4671761	CompoundStatement		1146:0:28461:28507	4671759	0					
ANR	4671762	IfStatement	if ( ! TI )		4671759	0					
ANR	4671763	Condition	! TI	1147:5:28468:28470	4671759	0	True				
ANR	4671764	UnaryOperationExpression	! TI		4671759	0					
ANR	4671765	UnaryOperator	!		4671759	0					
ANR	4671766	Identifier	TI		4671759	1					
ANR	4671767	ReturnStatement	return - 1 ;	1147:10:28473:28482	4671759	1	True				
ANR	4671768	UnaryOperationExpression	- 1		4671759	0					
ANR	4671769	UnaryOperator	-		4671759	0					
ANR	4671770	PrimaryExpression	1		4671759	1					
ANR	4671771	ReturnStatement	return TI -> get_tid ( ) ;	1148:1:28485:28505	4671759	1	True				
ANR	4671772	CallExpression	TI -> get_tid ( )		4671759	0					
ANR	4671773	Callee	TI -> get_tid		4671759	0					
ANR	4671774	PtrMemberAccess	TI -> get_tid		4671759	0					
ANR	4671775	Identifier	TI		4671759	0					
ANR	4671776	Identifier	get_tid		4671759	1					
ANR	4671777	ArgumentList			4671759	1					
ANR	4671778	ReturnType	int		4671759	1					
ANR	4671779	Identifier	CondorThreads :: get_tid		4671759	2					
ANR	4671780	ParameterList			4671759	3					
ANR	4671781	CFGEntryNode	ENTRY		4671759		True				
ANR	4671782	CFGExitNode	EXIT		4671759		True				
ANR	4671783	Symbol	TI		4671759						
ANR	4671784	Symbol	* TI		4671759						
ANR	4671785	Symbol	TI -> get_tid		4671759						
ANR	4671786	Function	CondorThreads :: get_handle	1151:0:28510:28671							
ANR	4671787	FunctionDef	CondorThreads :: get_handle (int tid)		4671786	0					
ANR	4671788	CompoundStatement		1153:0:28570:28671	4671786	0					
ANR	4671789	ReturnStatement	return ThreadImplementation :: get_handle ( tid ) ;	1155:1:28625:28669	4671786	0	True				
ANR	4671790	CallExpression	ThreadImplementation :: get_handle ( tid )		4671786	0					
ANR	4671791	Callee	ThreadImplementation :: get_handle		4671786	0					
ANR	4671792	Identifier	ThreadImplementation :: get_handle		4671786	0					
ANR	4671793	ArgumentList	tid		4671786	1					
ANR	4671794	Argument	tid		4671786	0					
ANR	4671795	Identifier	tid		4671786	0					
ANR	4671796	ReturnType	const WorkerThreadPtr_t		4671786	1					
ANR	4671797	Identifier	CondorThreads :: get_handle		4671786	2					
ANR	4671798	ParameterList	int tid		4671786	3					
ANR	4671799	Parameter	int tid	1152:26:28561:28567	4671786	0	True				
ANR	4671800	ParameterType	int		4671786	0					
ANR	4671801	Identifier	tid		4671786	1					
ANR	4671802	CFGEntryNode	ENTRY		4671786		True				
ANR	4671803	CFGExitNode	EXIT		4671786		True				
ANR	4671804	Symbol	ThreadImplementation :: get_handle		4671786						
ANR	4671805	Symbol	tid		4671786						
ANR	4671806	Function	CondorThreads_pool_size	1160:1:28737:28809							
ANR	4671807	FunctionDef	CondorThreads_pool_size ()		4671806	0					
ANR	4671808	CompoundStatement		1161:1:28769:28809	4671806	0					
ANR	4671809	ReturnStatement	return CondorThreads :: pool_size ( ) ;	1162:2:28773:28806	4671806	0	True				
ANR	4671810	CallExpression	CondorThreads :: pool_size ( )		4671806	0					
ANR	4671811	Callee	CondorThreads :: pool_size		4671806	0					
ANR	4671812	Identifier	CondorThreads :: pool_size		4671806	0					
ANR	4671813	ArgumentList			4671806	1					
ANR	4671814	ReturnType	int		4671806	1					
ANR	4671815	Identifier	CondorThreads_pool_size		4671806	2					
ANR	4671816	ParameterList			4671806	3					
ANR	4671817	CFGEntryNode	ENTRY		4671806		True				
ANR	4671818	CFGExitNode	EXIT		4671806		True				
ANR	4671819	Symbol	CondorThreads :: pool_size		4671806						
ANR	4671820	Function	CondorThreads_gettid	1165:1:28813:28880							
ANR	4671821	FunctionDef	CondorThreads_gettid ()		4671820	0					
ANR	4671822	CompoundStatement		1166:1:28841:28880	4671820	0					
ANR	4671823	ReturnStatement	return CondorThreads :: get_tid ( ) ;	1167:2:28845:28876	4671820	0	True				
ANR	4671824	CallExpression	CondorThreads :: get_tid ( )		4671820	0					
ANR	4671825	Callee	CondorThreads :: get_tid		4671820	0					
ANR	4671826	Identifier	CondorThreads :: get_tid		4671820	0					
ANR	4671827	ArgumentList			4671820	1					
ANR	4671828	ReturnType	int		4671820	1					
ANR	4671829	Identifier	CondorThreads_gettid		4671820	2					
ANR	4671830	ParameterList			4671820	3					
ANR	4671831	CFGEntryNode	ENTRY		4671820		True				
ANR	4671832	CFGExitNode	EXIT		4671820		True				
ANR	4671833	Symbol	CondorThreads :: get_tid		4671820						
