command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1296285	File	data/converged/CVE-2011-4930_htcondor/env.cpp								
ANR	1296286	DeclStmt									
ANR	1296287	Decl							const char	const char	unix_env_delim
ANR	1296288	DeclStmt									
ANR	1296289	Decl							const char	const char	windows_env_delim
ANR	1296290	DeclStmt									
ANR	1296291	Decl							const char	const char	env_delimiter
ANR	1296292	DeclStmt									
ANR	1296293	Decl							const char	const char	env_delimiter
ANR	1296294	Function	Env :: Env	41:0:1283:1435							
ANR	1296295	FunctionDef	Env :: Env ()		1296294	0					
ANR	1296296	CompoundStatement		42:0:1294:1435	1296294	0					
ANR	1296297	ExpressionStatement	input_was_v1 = false	43:1:1297:1317	1296294	0	True				
ANR	1296298	AssignmentExpression	input_was_v1 = false		1296294	0		=			
ANR	1296299	Identifier	input_was_v1		1296294	0					
ANR	1296300	Identifier	false		1296294	1					
ANR	1296301	ExpressionStatement	"_envTable = new HashTable < MyString , MyString > ( 127 , & MyStringHash , updateDuplicateKeys )"	44:1:1320:1411	1296294	1	True				
ANR	1296302	AssignmentExpression	"_envTable = new HashTable < MyString , MyString > ( 127 , & MyStringHash , updateDuplicateKeys )"		1296294	0		=			
ANR	1296303	Identifier	_envTable		1296294	0					
ANR	1296304	Expression	"127 , & MyStringHash , updateDuplicateKeys"		1296294	1					
ANR	1296305	PrimaryExpression	127		1296294	0					
ANR	1296306	Expression	"& MyStringHash , updateDuplicateKeys"		1296294	1					
ANR	1296307	UnaryOperationExpression	& MyStringHash		1296294	0					
ANR	1296308	UnaryOperator	&		1296294	0					
ANR	1296309	Identifier	MyStringHash		1296294	1					
ANR	1296310	Identifier	updateDuplicateKeys		1296294	1					
ANR	1296311	ExpressionStatement	ASSERT ( _envTable )	46:1:1414:1433	1296294	2	True				
ANR	1296312	CallExpression	ASSERT ( _envTable )		1296294	0					
ANR	1296313	Callee	ASSERT		1296294	0					
ANR	1296314	Identifier	ASSERT		1296294	0					
ANR	1296315	ArgumentList	_envTable		1296294	1					
ANR	1296316	Argument	_envTable		1296294	0					
ANR	1296317	Identifier	_envTable		1296294	0					
ANR	1296318	Identifier	Env :: Env		1296294	1					
ANR	1296319	ParameterList			1296294	2					
ANR	1296320	CFGEntryNode	ENTRY		1296294		True				
ANR	1296321	CFGExitNode	EXIT		1296294		True				
ANR	1296322	Symbol	_envTable		1296294						
ANR	1296323	Symbol	false		1296294						
ANR	1296324	Symbol	input_was_v1		1296294						
ANR	1296325	Symbol	& MyStringHash		1296294						
ANR	1296326	Symbol	updateDuplicateKeys		1296294						
ANR	1296327	Function	Env :: ~Env	49:0:1438:1471							
ANR	1296328	FunctionDef	Env :: ~Env ()		1296327	0					
ANR	1296329	CompoundStatement		50:0:1450:1471	1296327	0					
ANR	1296330	Statement	delete	51:1:1453:1458	1296327	0	True				
ANR	1296331	ExpressionStatement	_envTable	51:8:1460:1469	1296327	1	True				
ANR	1296332	Identifier	_envTable		1296327	0					
ANR	1296333	Identifier	Env :: ~Env		1296327	1					
ANR	1296334	ParameterList			1296327	2					
ANR	1296335	CFGEntryNode	ENTRY		1296327		True				
ANR	1296336	CFGExitNode	EXIT		1296327		True				
ANR	1296337	Function	Env :: Count	54:0:1474:1536							
ANR	1296338	FunctionDef	Env :: Count ()		1296337	0					
ANR	1296339	CompoundStatement		56:0:1497:1536	1296337	0					
ANR	1296340	ReturnStatement	return _envTable -> getNumElements ( ) ;	57:1:1500:1534	1296337	0	True				
ANR	1296341	CallExpression	_envTable -> getNumElements ( )		1296337	0					
ANR	1296342	Callee	_envTable -> getNumElements		1296337	0					
ANR	1296343	PtrMemberAccess	_envTable -> getNumElements		1296337	0					
ANR	1296344	Identifier	_envTable		1296337	0					
ANR	1296345	Identifier	getNumElements		1296337	1					
ANR	1296346	ArgumentList			1296337	1					
ANR	1296347	ReturnType	int		1296337	1					
ANR	1296348	Identifier	Env :: Count		1296337	2					
ANR	1296349	ParameterList			1296337	3					
ANR	1296350	CFGEntryNode	ENTRY		1296337		True				
ANR	1296351	CFGExitNode	EXIT		1296337		True				
ANR	1296352	Symbol	_envTable		1296337						
ANR	1296353	Symbol	_envTable -> getNumElements		1296337						
ANR	1296354	Symbol	* _envTable		1296337						
ANR	1296355	Function	Env :: Clear	60:0:1539:1634							
ANR	1296356	FunctionDef	Env :: Clear ()		1296355	0					
ANR	1296357	CompoundStatement		62:0:1557:1634	1296355	0					
ANR	1296358	ExpressionStatement	_envTable -> clear ( )	63:1:1560:1578	1296355	0	True				
ANR	1296359	CallExpression	_envTable -> clear ( )		1296355	0					
ANR	1296360	Callee	_envTable -> clear		1296355	0					
ANR	1296361	PtrMemberAccess	_envTable -> clear		1296355	0					
ANR	1296362	Identifier	_envTable		1296355	0					
ANR	1296363	Identifier	clear		1296355	1					
ANR	1296364	ArgumentList			1296355	1					
ANR	1296365	ExpressionStatement	m_sorted_varnames . clear ( )	65:1:1600:1625	1296355	1	True				
ANR	1296366	CallExpression	m_sorted_varnames . clear ( )		1296355	0					
ANR	1296367	Callee	m_sorted_varnames . clear		1296355	0					
ANR	1296368	MemberAccess	m_sorted_varnames . clear		1296355	0					
ANR	1296369	Identifier	m_sorted_varnames		1296355	0					
ANR	1296370	Identifier	clear		1296355	1					
ANR	1296371	ArgumentList			1296355	1					
ANR	1296372	ReturnType	void		1296355	1					
ANR	1296373	Identifier	Env :: Clear		1296355	2					
ANR	1296374	ParameterList			1296355	3					
ANR	1296375	CFGEntryNode	ENTRY		1296355		True				
ANR	1296376	CFGExitNode	EXIT		1296355		True				
ANR	1296377	Symbol	_envTable		1296355						
ANR	1296378	Symbol	m_sorted_varnames		1296355						
ANR	1296379	Function	Env :: AddErrorMessage	69:0:1637:1750							
ANR	1296380	FunctionDef	"Env :: AddErrorMessage (char const * msg , MyString * error_buffer)"		1296379	0					
ANR	1296381	CompoundStatement		71:0:1703:1750	1296379	0					
ANR	1296382	ExpressionStatement	"ArgList :: AddErrorMessage ( msg , error_buffer )"	72:1:1706:1748	1296379	0	True				
ANR	1296383	CallExpression	"ArgList :: AddErrorMessage ( msg , error_buffer )"		1296379	0					
ANR	1296384	Callee	ArgList :: AddErrorMessage		1296379	0					
ANR	1296385	Identifier	ArgList :: AddErrorMessage		1296379	0					
ANR	1296386	ArgumentList	msg		1296379	1					
ANR	1296387	Argument	msg		1296379	0					
ANR	1296388	Identifier	msg		1296379	0					
ANR	1296389	Argument	error_buffer		1296379	1					
ANR	1296390	Identifier	error_buffer		1296379	0					
ANR	1296391	ReturnType	void		1296379	1					
ANR	1296392	Identifier	Env :: AddErrorMessage		1296379	2					
ANR	1296393	ParameterList	"char const * msg , MyString * error_buffer"		1296379	3					
ANR	1296394	Parameter	char const * msg	70:21:1663:1677	1296379	0	True				
ANR	1296395	ParameterType	char const *		1296379	0					
ANR	1296396	Identifier	msg		1296379	1					
ANR	1296397	Parameter	MyString * error_buffer	70:37:1679:1700	1296379	1	True				
ANR	1296398	ParameterType	MyString *		1296379	0					
ANR	1296399	Identifier	error_buffer		1296379	1					
ANR	1296400	CFGEntryNode	ENTRY		1296379		True				
ANR	1296401	CFGExitNode	EXIT		1296379		True				
ANR	1296402	Symbol	msg		1296379						
ANR	1296403	Symbol	error_buffer		1296379						
ANR	1296404	Function	Env :: MergeFrom	75:0:1753:2492							
ANR	1296405	FunctionDef	"Env :: MergeFrom (const ClassAd * ad , MyString * error_msg)"		1296404	0					
ANR	1296406	CompoundStatement		77:0:1815:2492	1296404	0					
ANR	1296407	IfStatement	if ( ! ad )		1296404	0					
ANR	1296408	Condition	! ad	78:4:1821:1823	1296404	0	True				
ANR	1296409	UnaryOperationExpression	! ad		1296404	0					
ANR	1296410	UnaryOperator	!		1296404	0					
ANR	1296411	Identifier	ad		1296404	1					
ANR	1296412	ReturnStatement	return true ;	78:9:1826:1837	1296404	1	True				
ANR	1296413	Identifier	true		1296404	0					
ANR	1296414	IdentifierDeclStatement	char * env1 = NULL ;	79:1:1840:1857	1296404	1	True				
ANR	1296415	IdentifierDecl	* env1 = NULL		1296404	0					
ANR	1296416	IdentifierDeclType	char *		1296404	0					
ANR	1296417	Identifier	env1		1296404	1					
ANR	1296418	AssignmentExpression	* env1 = NULL		1296404	2		=			
ANR	1296419	Identifier	NULL		1296404	0					
ANR	1296420	Identifier	NULL		1296404	1					
ANR	1296421	IdentifierDeclStatement	char * env2 = NULL ;	80:1:1860:1877	1296404	2	True				
ANR	1296422	IdentifierDecl	* env2 = NULL		1296404	0					
ANR	1296423	IdentifierDeclType	char *		1296404	0					
ANR	1296424	Identifier	env2		1296404	1					
ANR	1296425	AssignmentExpression	* env2 = NULL		1296404	2		=			
ANR	1296426	Identifier	NULL		1296404	0					
ANR	1296427	Identifier	NULL		1296404	1					
ANR	1296428	IdentifierDeclStatement	bool merge_success = false ;	81:1:1880:1906	1296404	3	True				
ANR	1296429	IdentifierDecl	merge_success = false		1296404	0					
ANR	1296430	IdentifierDeclType	bool		1296404	0					
ANR	1296431	Identifier	merge_success		1296404	1					
ANR	1296432	AssignmentExpression	merge_success = false		1296404	2		=			
ANR	1296433	Identifier	false		1296404	0					
ANR	1296434	Identifier	false		1296404	1					
ANR	1296435	IfStatement	"if ( ad -> LookupString ( ATTR_JOB_ENVIRONMENT2 , & env2 ) == 1 )"		1296404	4					
ANR	1296436	Condition	"ad -> LookupString ( ATTR_JOB_ENVIRONMENT2 , & env2 ) == 1"	83:5:1914:1964	1296404	0	True				
ANR	1296437	EqualityExpression	"ad -> LookupString ( ATTR_JOB_ENVIRONMENT2 , & env2 ) == 1"		1296404	0		==			
ANR	1296438	CallExpression	"ad -> LookupString ( ATTR_JOB_ENVIRONMENT2 , & env2 )"		1296404	0					
ANR	1296439	Callee	ad -> LookupString		1296404	0					
ANR	1296440	PtrMemberAccess	ad -> LookupString		1296404	0					
ANR	1296441	Identifier	ad		1296404	0					
ANR	1296442	Identifier	LookupString		1296404	1					
ANR	1296443	ArgumentList	ATTR_JOB_ENVIRONMENT2		1296404	1					
ANR	1296444	Argument	ATTR_JOB_ENVIRONMENT2		1296404	0					
ANR	1296445	Identifier	ATTR_JOB_ENVIRONMENT2		1296404	0					
ANR	1296446	Argument	& env2		1296404	1					
ANR	1296447	UnaryOperationExpression	& env2		1296404	0					
ANR	1296448	UnaryOperator	&		1296404	0					
ANR	1296449	Identifier	env2		1296404	1					
ANR	1296450	PrimaryExpression	1		1296404	1					
ANR	1296451	CompoundStatement		7:59:152:152	1296404	1					
ANR	1296452	ExpressionStatement	"merge_success = MergeFromV2Raw ( env2 , error_msg )"	84:2:1972:2018	1296404	0	True				
ANR	1296453	AssignmentExpression	"merge_success = MergeFromV2Raw ( env2 , error_msg )"		1296404	0		=			
ANR	1296454	Identifier	merge_success		1296404	0					
ANR	1296455	CallExpression	"MergeFromV2Raw ( env2 , error_msg )"		1296404	1					
ANR	1296456	Callee	MergeFromV2Raw		1296404	0					
ANR	1296457	Identifier	MergeFromV2Raw		1296404	0					
ANR	1296458	ArgumentList	env2		1296404	1					
ANR	1296459	Argument	env2		1296404	0					
ANR	1296460	Identifier	env2		1296404	0					
ANR	1296461	Argument	error_msg		1296404	1					
ANR	1296462	Identifier	error_msg		1296404	0					
ANR	1296463	ElseStatement	else		1296404	0					
ANR	1296464	IfStatement	"if ( ad -> LookupString ( ATTR_JOB_ENVIRONMENT1 , & env1 ) == 1 )"		1296404	0					
ANR	1296465	Condition	"ad -> LookupString ( ATTR_JOB_ENVIRONMENT1 , & env1 ) == 1"	86:10:2033:2083	1296404	0	True				
ANR	1296466	EqualityExpression	"ad -> LookupString ( ATTR_JOB_ENVIRONMENT1 , & env1 ) == 1"		1296404	0		==			
ANR	1296467	CallExpression	"ad -> LookupString ( ATTR_JOB_ENVIRONMENT1 , & env1 )"		1296404	0					
ANR	1296468	Callee	ad -> LookupString		1296404	0					
ANR	1296469	PtrMemberAccess	ad -> LookupString		1296404	0					
ANR	1296470	Identifier	ad		1296404	0					
ANR	1296471	Identifier	LookupString		1296404	1					
ANR	1296472	ArgumentList	ATTR_JOB_ENVIRONMENT1		1296404	1					
ANR	1296473	Argument	ATTR_JOB_ENVIRONMENT1		1296404	0					
ANR	1296474	Identifier	ATTR_JOB_ENVIRONMENT1		1296404	0					
ANR	1296475	Argument	& env1		1296404	1					
ANR	1296476	UnaryOperationExpression	& env1		1296404	0					
ANR	1296477	UnaryOperator	&		1296404	0					
ANR	1296478	Identifier	env1		1296404	1					
ANR	1296479	PrimaryExpression	1		1296404	1					
ANR	1296480	CompoundStatement		10:64:271:271	1296404	1					
ANR	1296481	ExpressionStatement	"merge_success = MergeFromV1Raw ( env1 , error_msg )"	87:2:2091:2137	1296404	0	True				
ANR	1296482	AssignmentExpression	"merge_success = MergeFromV1Raw ( env1 , error_msg )"		1296404	0		=			
ANR	1296483	Identifier	merge_success		1296404	0					
ANR	1296484	CallExpression	"MergeFromV1Raw ( env1 , error_msg )"		1296404	1					
ANR	1296485	Callee	MergeFromV1Raw		1296404	0					
ANR	1296486	Identifier	MergeFromV1Raw		1296404	0					
ANR	1296487	ArgumentList	env1		1296404	1					
ANR	1296488	Argument	env1		1296404	0					
ANR	1296489	Identifier	env1		1296404	0					
ANR	1296490	Argument	error_msg		1296404	1					
ANR	1296491	Identifier	error_msg		1296404	0					
ANR	1296492	ExpressionStatement	input_was_v1 = true	88:2:2141:2160	1296404	1	True				
ANR	1296493	AssignmentExpression	input_was_v1 = true		1296404	0		=			
ANR	1296494	Identifier	input_was_v1		1296404	0					
ANR	1296495	Identifier	true		1296404	1					
ANR	1296496	ElseStatement	else		1296404	0					
ANR	1296497	CompoundStatement		14:6:355:355	1296404	0					
ANR	1296498	ExpressionStatement	merge_success = true	94:2:2353:2373	1296404	0	True				
ANR	1296499	AssignmentExpression	merge_success = true		1296404	0		=			
ANR	1296500	Identifier	merge_success		1296404	0					
ANR	1296501	Identifier	true		1296404	1					
ANR	1296502	ExpressionStatement	free ( env1 )	98:1:2444:2454	1296404	5	True				
ANR	1296503	CallExpression	free ( env1 )		1296404	0					
ANR	1296504	Callee	free		1296404	0					
ANR	1296505	Identifier	free		1296404	0					
ANR	1296506	ArgumentList	env1		1296404	1					
ANR	1296507	Argument	env1		1296404	0					
ANR	1296508	Identifier	env1		1296404	0					
ANR	1296509	ExpressionStatement	free ( env2 )	99:1:2457:2467	1296404	6	True				
ANR	1296510	CallExpression	free ( env2 )		1296404	0					
ANR	1296511	Callee	free		1296404	0					
ANR	1296512	Identifier	free		1296404	0					
ANR	1296513	ArgumentList	env2		1296404	1					
ANR	1296514	Argument	env2		1296404	0					
ANR	1296515	Identifier	env2		1296404	0					
ANR	1296516	ReturnStatement	return merge_success ;	100:1:2470:2490	1296404	7	True				
ANR	1296517	Identifier	merge_success		1296404	0					
ANR	1296518	ReturnType	bool		1296404	1					
ANR	1296519	Identifier	Env :: MergeFrom		1296404	2					
ANR	1296520	ParameterList	"const ClassAd * ad , MyString * error_msg"		1296404	3					
ANR	1296521	Parameter	const ClassAd * ad	76:16:1774:1790	1296404	0	True				
ANR	1296522	ParameterType	const ClassAd *		1296404	0					
ANR	1296523	Identifier	ad		1296404	1					
ANR	1296524	Parameter	MyString * error_msg	76:35:1793:1811	1296404	1	True				
ANR	1296525	ParameterType	MyString *		1296404	0					
ANR	1296526	Identifier	error_msg		1296404	1					
ANR	1296527	CFGEntryNode	ENTRY		1296404		True				
ANR	1296528	CFGExitNode	EXIT		1296404		True				
ANR	1296529	Symbol	ad -> LookupString		1296404						
ANR	1296530	Symbol	ATTR_JOB_ENVIRONMENT2		1296404						
ANR	1296531	Symbol	ad		1296404						
ANR	1296532	Symbol	error_msg		1296404						
ANR	1296533	Symbol	NULL		1296404						
ANR	1296534	Symbol	ATTR_JOB_ENVIRONMENT1		1296404						
ANR	1296535	Symbol	false		1296404						
ANR	1296536	Symbol	env2		1296404						
ANR	1296537	Symbol	* ad		1296404						
ANR	1296538	Symbol	env1		1296404						
ANR	1296539	Symbol	MergeFromV2Raw		1296404						
ANR	1296540	Symbol	MergeFromV1Raw		1296404						
ANR	1296541	Symbol	merge_success		1296404						
ANR	1296542	Symbol	& env1		1296404						
ANR	1296543	Symbol	& env2		1296404						
ANR	1296544	Symbol	true		1296404						
ANR	1296545	Symbol	input_was_v1		1296404						
ANR	1296546	Function	Env :: CondorVersionRequiresV1	103:0:2495:2657							
ANR	1296547	FunctionDef	Env :: CondorVersionRequiresV1 (CondorVersionInfo const & condor_version)		1296546	0					
ANR	1296548	CompoundStatement		105:0:2570:2657	1296546	0					
ANR	1296549	ReturnStatement	"return ! condor_version . built_since_version ( 6 , 7 , 15 ) ;"	107:1:2605:2655	1296546	0	True				
ANR	1296550	UnaryOperationExpression	"! condor_version . built_since_version ( 6 , 7 , 15 )"		1296546	0					
ANR	1296551	UnaryOperator	!		1296546	0					
ANR	1296552	CallExpression	"condor_version . built_since_version ( 6 , 7 , 15 )"		1296546	1					
ANR	1296553	Callee	condor_version . built_since_version		1296546	0					
ANR	1296554	MemberAccess	condor_version . built_since_version		1296546	0					
ANR	1296555	Identifier	condor_version		1296546	0					
ANR	1296556	Identifier	built_since_version		1296546	1					
ANR	1296557	ArgumentList	6		1296546	1					
ANR	1296558	Argument	6		1296546	0					
ANR	1296559	PrimaryExpression	6		1296546	0					
ANR	1296560	Argument	7		1296546	1					
ANR	1296561	PrimaryExpression	7		1296546	0					
ANR	1296562	Argument	15		1296546	2					
ANR	1296563	PrimaryExpression	15		1296546	0					
ANR	1296564	ReturnType	bool		1296546	1					
ANR	1296565	Identifier	Env :: CondorVersionRequiresV1		1296546	2					
ANR	1296566	ParameterList	CondorVersionInfo const & condor_version		1296546	3					
ANR	1296567	Parameter	CondorVersionInfo const & condor_version	104:29:2529:2567	1296546	0	True				
ANR	1296568	ParameterType	CondorVersionInfo const &		1296546	0					
ANR	1296569	Identifier	condor_version		1296546	1					
ANR	1296570	CFGEntryNode	ENTRY		1296546		True				
ANR	1296571	CFGExitNode	EXIT		1296546		True				
ANR	1296572	Symbol	condor_version		1296546						
ANR	1296573	Symbol	condor_version . built_since_version		1296546						
ANR	1296574	Function	Env :: InsertEnvIntoClassAd	110:0:2660:5697							
ANR	1296575	FunctionDef	"Env :: InsertEnvIntoClassAd (ClassAd * ad , MyString * error_msg , char const * opsys , CondorVersionInfo * condor_version)"		1296574	0					
ANR	1296576	CompoundStatement		112:0:2786:5697	1296574	0					
ANR	1296577	IdentifierDeclStatement	bool has_env1 = ad -> LookupExpr ( ATTR_JOB_ENVIRONMENT1 ) != NULL ;	114:1:2790:2851	1296574	0	True				
ANR	1296578	IdentifierDecl	has_env1 = ad -> LookupExpr ( ATTR_JOB_ENVIRONMENT1 ) != NULL		1296574	0					
ANR	1296579	IdentifierDeclType	bool		1296574	0					
ANR	1296580	Identifier	has_env1		1296574	1					
ANR	1296581	AssignmentExpression	has_env1 = ad -> LookupExpr ( ATTR_JOB_ENVIRONMENT1 ) != NULL		1296574	2		=			
ANR	1296582	Identifier	has_env1		1296574	0					
ANR	1296583	EqualityExpression	ad -> LookupExpr ( ATTR_JOB_ENVIRONMENT1 ) != NULL		1296574	1		!=			
ANR	1296584	CallExpression	ad -> LookupExpr ( ATTR_JOB_ENVIRONMENT1 )		1296574	0					
ANR	1296585	Callee	ad -> LookupExpr		1296574	0					
ANR	1296586	PtrMemberAccess	ad -> LookupExpr		1296574	0					
ANR	1296587	Identifier	ad		1296574	0					
ANR	1296588	Identifier	LookupExpr		1296574	1					
ANR	1296589	ArgumentList	ATTR_JOB_ENVIRONMENT1		1296574	1					
ANR	1296590	Argument	ATTR_JOB_ENVIRONMENT1		1296574	0					
ANR	1296591	Identifier	ATTR_JOB_ENVIRONMENT1		1296574	0					
ANR	1296592	Identifier	NULL		1296574	1					
ANR	1296593	IdentifierDeclStatement	bool has_env2 = ad -> LookupExpr ( ATTR_JOB_ENVIRONMENT2 ) != NULL ;	115:1:2854:2915	1296574	1	True				
ANR	1296594	IdentifierDecl	has_env2 = ad -> LookupExpr ( ATTR_JOB_ENVIRONMENT2 ) != NULL		1296574	0					
ANR	1296595	IdentifierDeclType	bool		1296574	0					
ANR	1296596	Identifier	has_env2		1296574	1					
ANR	1296597	AssignmentExpression	has_env2 = ad -> LookupExpr ( ATTR_JOB_ENVIRONMENT2 ) != NULL		1296574	2		=			
ANR	1296598	Identifier	has_env2		1296574	0					
ANR	1296599	EqualityExpression	ad -> LookupExpr ( ATTR_JOB_ENVIRONMENT2 ) != NULL		1296574	1		!=			
ANR	1296600	CallExpression	ad -> LookupExpr ( ATTR_JOB_ENVIRONMENT2 )		1296574	0					
ANR	1296601	Callee	ad -> LookupExpr		1296574	0					
ANR	1296602	PtrMemberAccess	ad -> LookupExpr		1296574	0					
ANR	1296603	Identifier	ad		1296574	0					
ANR	1296604	Identifier	LookupExpr		1296574	1					
ANR	1296605	ArgumentList	ATTR_JOB_ENVIRONMENT2		1296574	1					
ANR	1296606	Argument	ATTR_JOB_ENVIRONMENT2		1296574	0					
ANR	1296607	Identifier	ATTR_JOB_ENVIRONMENT2		1296574	0					
ANR	1296608	Identifier	NULL		1296574	1					
ANR	1296609	IdentifierDeclStatement	bool requires_env1 = false ;	117:1:2919:2945	1296574	2	True				
ANR	1296610	IdentifierDecl	requires_env1 = false		1296574	0					
ANR	1296611	IdentifierDeclType	bool		1296574	0					
ANR	1296612	Identifier	requires_env1		1296574	1					
ANR	1296613	AssignmentExpression	requires_env1 = false		1296574	2		=			
ANR	1296614	Identifier	false		1296574	0					
ANR	1296615	Identifier	false		1296574	1					
ANR	1296616	IfStatement	if ( condor_version )		1296574	3					
ANR	1296617	Condition	condor_version	118:4:2951:2964	1296574	0	True				
ANR	1296618	Identifier	condor_version		1296574	0					
ANR	1296619	CompoundStatement		7:20:180:180	1296574	1					
ANR	1296620	ExpressionStatement	requires_env1 = CondorVersionRequiresV1 ( * condor_version )	119:2:2971:3027	1296574	0	True				
ANR	1296621	AssignmentExpression	requires_env1 = CondorVersionRequiresV1 ( * condor_version )		1296574	0		=			
ANR	1296622	Identifier	requires_env1		1296574	0					
ANR	1296623	CallExpression	CondorVersionRequiresV1 ( * condor_version )		1296574	1					
ANR	1296624	Callee	CondorVersionRequiresV1		1296574	0					
ANR	1296625	Identifier	CondorVersionRequiresV1		1296574	0					
ANR	1296626	ArgumentList	* condor_version		1296574	1					
ANR	1296627	Argument	* condor_version		1296574	0					
ANR	1296628	UnaryOperationExpression	* condor_version		1296574	0					
ANR	1296629	UnaryOperator	*		1296574	0					
ANR	1296630	Identifier	condor_version		1296574	1					
ANR	1296631	IfStatement	if ( requires_env1 )		1296574	4					
ANR	1296632	Condition	requires_env1	122:4:3037:3049	1296574	0	True				
ANR	1296633	Identifier	requires_env1		1296574	0					
ANR	1296634	CompoundStatement		11:19:265:265	1296574	1					
ANR	1296635	IfStatement	if ( has_env2 )		1296574	0					
ANR	1296636	Condition	has_env2	123:5:3059:3066	1296574	0	True				
ANR	1296637	Identifier	has_env2		1296574	0					
ANR	1296638	CompoundStatement		12:15:282:282	1296574	1					
ANR	1296639	ExpressionStatement	ad -> Delete ( ATTR_JOB_ENVIRONMENT2 )	124:3:3074:3107	1296574	0	True				
ANR	1296640	CallExpression	ad -> Delete ( ATTR_JOB_ENVIRONMENT2 )		1296574	0					
ANR	1296641	Callee	ad -> Delete		1296574	0					
ANR	1296642	PtrMemberAccess	ad -> Delete		1296574	0					
ANR	1296643	Identifier	ad		1296574	0					
ANR	1296644	Identifier	Delete		1296574	1					
ANR	1296645	ArgumentList	ATTR_JOB_ENVIRONMENT2		1296574	1					
ANR	1296646	Argument	ATTR_JOB_ENVIRONMENT2		1296574	0					
ANR	1296647	Identifier	ATTR_JOB_ENVIRONMENT2		1296574	0					
ANR	1296648	IfStatement	if ( ( has_env2 || ! has_env1 ) && ! requires_env1 )		1296574	5					
ANR	1296649	Condition	( has_env2 || ! has_env1 ) && ! requires_env1	128:5:3122:3162	1296574	0	True				
ANR	1296650	AndExpression	( has_env2 || ! has_env1 ) && ! requires_env1		1296574	0		&&			
ANR	1296651	OrExpression	has_env2 || ! has_env1		1296574	0		||			
ANR	1296652	Identifier	has_env2		1296574	0					
ANR	1296653	UnaryOperationExpression	! has_env1		1296574	1					
ANR	1296654	UnaryOperator	!		1296574	0					
ANR	1296655	Identifier	has_env1		1296574	1					
ANR	1296656	UnaryOperationExpression	! requires_env1		1296574	1					
ANR	1296657	UnaryOperator	!		1296574	0					
ANR	1296658	Identifier	requires_env1		1296574	1					
ANR	1296659	CompoundStatement		19:2:383:396	1296574	1					
ANR	1296660	IdentifierDeclStatement	MyString env2 ;	130:2:3170:3183	1296574	0	True				
ANR	1296661	IdentifierDecl	env2		1296574	0					
ANR	1296662	IdentifierDeclType	MyString		1296574	0					
ANR	1296663	Identifier	env2		1296574	1					
ANR	1296664	IfStatement	"if ( ! getDelimitedStringV2Raw ( & env2 , error_msg ) )"		1296574	1					
ANR	1296665	Condition	"! getDelimitedStringV2Raw ( & env2 , error_msg )"	131:5:3190:3230	1296574	0	True				
ANR	1296666	UnaryOperationExpression	"! getDelimitedStringV2Raw ( & env2 , error_msg )"		1296574	0					
ANR	1296667	UnaryOperator	!		1296574	0					
ANR	1296668	CallExpression	"getDelimitedStringV2Raw ( & env2 , error_msg )"		1296574	1					
ANR	1296669	Callee	getDelimitedStringV2Raw		1296574	0					
ANR	1296670	Identifier	getDelimitedStringV2Raw		1296574	0					
ANR	1296671	ArgumentList	& env2		1296574	1					
ANR	1296672	Argument	& env2		1296574	0					
ANR	1296673	UnaryOperationExpression	& env2		1296574	0					
ANR	1296674	UnaryOperator	&		1296574	0					
ANR	1296675	Identifier	env2		1296574	1					
ANR	1296676	Argument	error_msg		1296574	1					
ANR	1296677	Identifier	error_msg		1296574	0					
ANR	1296678	CompoundStatement		20:48:446:446	1296574	1					
ANR	1296679	ReturnStatement	return false ;	132:3:3238:3250	1296574	0	True				
ANR	1296680	Identifier	false		1296574	0					
ANR	1296681	ExpressionStatement	"ad -> Assign ( ATTR_JOB_ENVIRONMENT2 , env2 . Value ( ) )"	134:2:3258:3304	1296574	2	True				
ANR	1296682	CallExpression	"ad -> Assign ( ATTR_JOB_ENVIRONMENT2 , env2 . Value ( ) )"		1296574	0					
ANR	1296683	Callee	ad -> Assign		1296574	0					
ANR	1296684	PtrMemberAccess	ad -> Assign		1296574	0					
ANR	1296685	Identifier	ad		1296574	0					
ANR	1296686	Identifier	Assign		1296574	1					
ANR	1296687	ArgumentList	ATTR_JOB_ENVIRONMENT2		1296574	1					
ANR	1296688	Argument	ATTR_JOB_ENVIRONMENT2		1296574	0					
ANR	1296689	Identifier	ATTR_JOB_ENVIRONMENT2		1296574	0					
ANR	1296690	Argument	env2 . Value ( )		1296574	1					
ANR	1296691	CallExpression	env2 . Value ( )		1296574	0					
ANR	1296692	Callee	env2 . Value		1296574	0					
ANR	1296693	MemberAccess	env2 . Value		1296574	0					
ANR	1296694	Identifier	env2		1296574	0					
ANR	1296695	Identifier	Value		1296574	1					
ANR	1296696	ArgumentList			1296574	1					
ANR	1296697	IfStatement	if ( has_env1 || requires_env1 )		1296574	6					
ANR	1296698	Condition	has_env1 || requires_env1	136:4:3313:3337	1296574	0	True				
ANR	1296699	OrExpression	has_env1 || requires_env1		1296574	0		||			
ANR	1296700	Identifier	has_env1		1296574	0					
ANR	1296701	Identifier	requires_env1		1296574	1					
ANR	1296702	CompoundStatement		56:2:1509:1575	1296574	1					
ANR	1296703	IdentifierDeclStatement	char * lookup_delim = NULL ;	138:2:3413:3438	1296574	0	True				
ANR	1296704	IdentifierDecl	* lookup_delim = NULL		1296574	0					
ANR	1296705	IdentifierDeclType	char *		1296574	0					
ANR	1296706	Identifier	lookup_delim		1296574	1					
ANR	1296707	AssignmentExpression	* lookup_delim = NULL		1296574	2		=			
ANR	1296708	Identifier	NULL		1296574	0					
ANR	1296709	Identifier	NULL		1296574	1					
ANR	1296710	IdentifierDeclStatement	char delim = '\\0' ;	139:2:3442:3459	1296574	1	True				
ANR	1296711	IdentifierDecl	delim = '\\0'		1296574	0					
ANR	1296712	IdentifierDeclType	char		1296574	0					
ANR	1296713	Identifier	delim		1296574	1					
ANR	1296714	AssignmentExpression	delim = '\\0'		1296574	2		=			
ANR	1296715	Identifier	delim		1296574	0					
ANR	1296716	PrimaryExpression	'\\0'		1296574	1					
ANR	1296717	IfStatement	if ( opsys )		1296574	2					
ANR	1296718	Condition	opsys	140:5:3466:3470	1296574	0	True				
ANR	1296719	Identifier	opsys		1296574	0					
ANR	1296720	CompoundStatement		29:12:686:686	1296574	1					
ANR	1296721	ExpressionStatement	delim = GetEnvV1Delimiter ( opsys )	142:3:3516:3548	1296574	0	True				
ANR	1296722	AssignmentExpression	delim = GetEnvV1Delimiter ( opsys )		1296574	0		=			
ANR	1296723	Identifier	delim		1296574	0					
ANR	1296724	CallExpression	GetEnvV1Delimiter ( opsys )		1296574	1					
ANR	1296725	Callee	GetEnvV1Delimiter		1296574	0					
ANR	1296726	Identifier	GetEnvV1Delimiter		1296574	0					
ANR	1296727	ArgumentList	opsys		1296574	1					
ANR	1296728	Argument	opsys		1296574	0					
ANR	1296729	Identifier	opsys		1296574	0					
ANR	1296730	ElseStatement	else		1296574	0					
ANR	1296731	IfStatement	"if ( ad -> LookupString ( ATTR_JOB_ENVIRONMENT1_DELIM , & lookup_delim ) )"		1296574	0					
ANR	1296732	Condition	"ad -> LookupString ( ATTR_JOB_ENVIRONMENT1_DELIM , & lookup_delim )"	144:10:3564:3622	1296574	0	True				
ANR	1296733	CallExpression	"ad -> LookupString ( ATTR_JOB_ENVIRONMENT1_DELIM , & lookup_delim )"		1296574	0					
ANR	1296734	Callee	ad -> LookupString		1296574	0					
ANR	1296735	PtrMemberAccess	ad -> LookupString		1296574	0					
ANR	1296736	Identifier	ad		1296574	0					
ANR	1296737	Identifier	LookupString		1296574	1					
ANR	1296738	ArgumentList	ATTR_JOB_ENVIRONMENT1_DELIM		1296574	1					
ANR	1296739	Argument	ATTR_JOB_ENVIRONMENT1_DELIM		1296574	0					
ANR	1296740	Identifier	ATTR_JOB_ENVIRONMENT1_DELIM		1296574	0					
ANR	1296741	Argument	& lookup_delim		1296574	1					
ANR	1296742	UnaryOperationExpression	& lookup_delim		1296574	0					
ANR	1296743	UnaryOperator	&		1296574	0					
ANR	1296744	Identifier	lookup_delim		1296574	1					
ANR	1296745	CompoundStatement		33:71:838:838	1296574	1					
ANR	1296746	ExpressionStatement	delim = * lookup_delim	146:3:3687:3708	1296574	0	True				
ANR	1296747	AssignmentExpression	delim = * lookup_delim		1296574	0		=			
ANR	1296748	Identifier	delim		1296574	0					
ANR	1296749	UnaryOperationExpression	* lookup_delim		1296574	1					
ANR	1296750	UnaryOperator	*		1296574	0					
ANR	1296751	Identifier	lookup_delim		1296574	1					
ANR	1296752	ElseStatement	else		1296574	0					
ANR	1296753	CompoundStatement		37:7:934:934	1296574	0					
ANR	1296754	ExpressionStatement	delim = env_delimiter	150:3:3792:3813	1296574	0	True				
ANR	1296755	AssignmentExpression	delim = env_delimiter		1296574	0		=			
ANR	1296756	Identifier	delim		1296574	0					
ANR	1296757	Identifier	env_delimiter		1296574	1					
ANR	1296758	IfStatement	if ( ! lookup_delim )		1296574	3					
ANR	1296759	Condition	! lookup_delim	153:5:3825:3837	1296574	0	True				
ANR	1296760	UnaryOperationExpression	! lookup_delim		1296574	0					
ANR	1296761	UnaryOperator	!		1296574	0					
ANR	1296762	Identifier	lookup_delim		1296574	1					
ANR	1296763	CompoundStatement		49:3:1363:1380	1296574	1					
ANR	1296764	IdentifierDeclStatement	char delim_str [ 2 ] ;	160:3:4150:4167	1296574	0	True				
ANR	1296765	IdentifierDecl	delim_str [ 2 ]		1296574	0					
ANR	1296766	IdentifierDeclType	char [ 2 ]		1296574	0					
ANR	1296767	Identifier	delim_str		1296574	1					
ANR	1296768	PrimaryExpression	2		1296574	2					
ANR	1296769	ExpressionStatement	delim_str [ 0 ] = delim	161:3:4172:4192	1296574	1	True				
ANR	1296770	AssignmentExpression	delim_str [ 0 ] = delim		1296574	0		=			
ANR	1296771	ArrayIndexing	delim_str [ 0 ]		1296574	0					
ANR	1296772	Identifier	delim_str		1296574	0					
ANR	1296773	PrimaryExpression	0		1296574	1					
ANR	1296774	Identifier	delim		1296574	1					
ANR	1296775	ExpressionStatement	delim_str [ 1 ] = '\\0'	162:3:4197:4216	1296574	2	True				
ANR	1296776	AssignmentExpression	delim_str [ 1 ] = '\\0'		1296574	0		=			
ANR	1296777	ArrayIndexing	delim_str [ 1 ]		1296574	0					
ANR	1296778	Identifier	delim_str		1296574	0					
ANR	1296779	PrimaryExpression	1		1296574	1					
ANR	1296780	PrimaryExpression	'\\0'		1296574	1					
ANR	1296781	ExpressionStatement	"ad -> Assign ( ATTR_JOB_ENVIRONMENT1_DELIM , delim_str )"	163:3:4221:4270	1296574	3	True				
ANR	1296782	CallExpression	"ad -> Assign ( ATTR_JOB_ENVIRONMENT1_DELIM , delim_str )"		1296574	0					
ANR	1296783	Callee	ad -> Assign		1296574	0					
ANR	1296784	PtrMemberAccess	ad -> Assign		1296574	0					
ANR	1296785	Identifier	ad		1296574	0					
ANR	1296786	Identifier	Assign		1296574	1					
ANR	1296787	ArgumentList	ATTR_JOB_ENVIRONMENT1_DELIM		1296574	1					
ANR	1296788	Argument	ATTR_JOB_ENVIRONMENT1_DELIM		1296574	0					
ANR	1296789	Identifier	ATTR_JOB_ENVIRONMENT1_DELIM		1296574	0					
ANR	1296790	Argument	delim_str		1296574	1					
ANR	1296791	Identifier	delim_str		1296574	0					
ANR	1296792	IdentifierDeclStatement	MyString env1 ;	166:2:4279:4292	1296574	4	True				
ANR	1296793	IdentifierDecl	env1		1296574	0					
ANR	1296794	IdentifierDeclType	MyString		1296574	0					
ANR	1296795	Identifier	env1		1296574	1					
ANR	1296796	IdentifierDeclStatement	"bool env1_success = getDelimitedStringV1Raw ( & env1 , error_msg , delim ) ;"	167:2:4296:4362	1296574	5	True				
ANR	1296797	IdentifierDecl	"env1_success = getDelimitedStringV1Raw ( & env1 , error_msg , delim )"		1296574	0					
ANR	1296798	IdentifierDeclType	bool		1296574	0					
ANR	1296799	Identifier	env1_success		1296574	1					
ANR	1296800	AssignmentExpression	"env1_success = getDelimitedStringV1Raw ( & env1 , error_msg , delim )"		1296574	2		=			
ANR	1296801	Identifier	env1_success		1296574	0					
ANR	1296802	CallExpression	"getDelimitedStringV1Raw ( & env1 , error_msg , delim )"		1296574	1					
ANR	1296803	Callee	getDelimitedStringV1Raw		1296574	0					
ANR	1296804	Identifier	getDelimitedStringV1Raw		1296574	0					
ANR	1296805	ArgumentList	& env1		1296574	1					
ANR	1296806	Argument	& env1		1296574	0					
ANR	1296807	UnaryOperationExpression	& env1		1296574	0					
ANR	1296808	UnaryOperator	&		1296574	0					
ANR	1296809	Identifier	env1		1296574	1					
ANR	1296810	Argument	error_msg		1296574	1					
ANR	1296811	Identifier	error_msg		1296574	0					
ANR	1296812	Argument	delim		1296574	2					
ANR	1296813	Identifier	delim		1296574	0					
ANR	1296814	IfStatement	if ( lookup_delim )		1296574	6					
ANR	1296815	Condition	lookup_delim	169:5:4370:4381	1296574	0	True				
ANR	1296816	Identifier	lookup_delim		1296574	0					
ANR	1296817	CompoundStatement		58:19:1597:1597	1296574	1					
ANR	1296818	ExpressionStatement	free ( lookup_delim )	170:3:4389:4407	1296574	0	True				
ANR	1296819	CallExpression	free ( lookup_delim )		1296574	0					
ANR	1296820	Callee	free		1296574	0					
ANR	1296821	Identifier	free		1296574	0					
ANR	1296822	ArgumentList	lookup_delim		1296574	1					
ANR	1296823	Argument	lookup_delim		1296574	0					
ANR	1296824	Identifier	lookup_delim		1296574	0					
ANR	1296825	ExpressionStatement	lookup_delim = NULL	171:3:4412:4431	1296574	1	True				
ANR	1296826	AssignmentExpression	lookup_delim = NULL		1296574	0		=			
ANR	1296827	Identifier	lookup_delim		1296574	0					
ANR	1296828	Identifier	NULL		1296574	1					
ANR	1296829	IfStatement	if ( env1_success )		1296574	7					
ANR	1296830	Condition	env1_success	174:5:4443:4454	1296574	0	True				
ANR	1296831	Identifier	env1_success		1296574	0					
ANR	1296832	CompoundStatement		63:19:1670:1670	1296574	1					
ANR	1296833	ExpressionStatement	"ad -> Assign ( ATTR_JOB_ENVIRONMENT1 , env1 . Value ( ) )"	175:3:4462:4508	1296574	0	True				
ANR	1296834	CallExpression	"ad -> Assign ( ATTR_JOB_ENVIRONMENT1 , env1 . Value ( ) )"		1296574	0					
ANR	1296835	Callee	ad -> Assign		1296574	0					
ANR	1296836	PtrMemberAccess	ad -> Assign		1296574	0					
ANR	1296837	Identifier	ad		1296574	0					
ANR	1296838	Identifier	Assign		1296574	1					
ANR	1296839	ArgumentList	ATTR_JOB_ENVIRONMENT1		1296574	1					
ANR	1296840	Argument	ATTR_JOB_ENVIRONMENT1		1296574	0					
ANR	1296841	Identifier	ATTR_JOB_ENVIRONMENT1		1296574	0					
ANR	1296842	Argument	env1 . Value ( )		1296574	1					
ANR	1296843	CallExpression	env1 . Value ( )		1296574	0					
ANR	1296844	Callee	env1 . Value		1296574	0					
ANR	1296845	MemberAccess	env1 . Value		1296574	0					
ANR	1296846	Identifier	env1		1296574	0					
ANR	1296847	Identifier	Value		1296574	1					
ANR	1296848	ArgumentList			1296574	1					
ANR	1296849	ElseStatement	else		1296574	0					
ANR	1296850	CompoundStatement		66:7:1734:1734	1296574	0					
ANR	1296851	IfStatement	if ( has_env2 )		1296574	0					
ANR	1296852	Condition	has_env2	178:6:4529:4536	1296574	0	True				
ANR	1296853	Identifier	has_env2		1296574	0					
ANR	1296854	CompoundStatement		67:16:1752:1752	1296574	1					
ANR	1296855	ExpressionStatement	"ad -> Assign ( ATTR_JOB_ENVIRONMENT1 , ""ENVIRONMENT_CONVERSION_ERROR"" )"	193:4:5246:5310	1296574	0	True				
ANR	1296856	CallExpression	"ad -> Assign ( ATTR_JOB_ENVIRONMENT1 , ""ENVIRONMENT_CONVERSION_ERROR"" )"		1296574	0					
ANR	1296857	Callee	ad -> Assign		1296574	0					
ANR	1296858	PtrMemberAccess	ad -> Assign		1296574	0					
ANR	1296859	Identifier	ad		1296574	0					
ANR	1296860	Identifier	Assign		1296574	1					
ANR	1296861	ArgumentList	ATTR_JOB_ENVIRONMENT1		1296574	1					
ANR	1296862	Argument	ATTR_JOB_ENVIRONMENT1		1296574	0					
ANR	1296863	Identifier	ATTR_JOB_ENVIRONMENT1		1296574	0					
ANR	1296864	Argument	"""ENVIRONMENT_CONVERSION_ERROR"""		1296574	1					
ANR	1296865	PrimaryExpression	"""ENVIRONMENT_CONVERSION_ERROR"""		1296574	0					
ANR	1296866	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Failed to convert environment to V1 syntax: %s\\n"" , error_msg ? error_msg -> Value ( ) : """" )"	194:4:5316:5423	1296574	1	True				
ANR	1296867	CallExpression	"dprintf ( D_FULLDEBUG , ""Failed to convert environment to V1 syntax: %s\\n"" , error_msg ? error_msg -> Value ( ) : """" )"		1296574	0					
ANR	1296868	Callee	dprintf		1296574	0					
ANR	1296869	Identifier	dprintf		1296574	0					
ANR	1296870	ArgumentList	D_FULLDEBUG		1296574	1					
ANR	1296871	Argument	D_FULLDEBUG		1296574	0					
ANR	1296872	Identifier	D_FULLDEBUG		1296574	0					
ANR	1296873	Argument	"""Failed to convert environment to V1 syntax: %s\\n"""		1296574	1					
ANR	1296874	PrimaryExpression	"""Failed to convert environment to V1 syntax: %s\\n"""		1296574	0					
ANR	1296875	Argument	"error_msg ? error_msg -> Value ( ) : """""		1296574	2					
ANR	1296876	ConditionalExpression	"error_msg ? error_msg -> Value ( ) : """""		1296574	0					
ANR	1296877	Condition	error_msg		1296574	0					
ANR	1296878	Identifier	error_msg		1296574	0					
ANR	1296879	CallExpression	error_msg -> Value ( )		1296574	1					
ANR	1296880	Callee	error_msg -> Value		1296574	0					
ANR	1296881	PtrMemberAccess	error_msg -> Value		1296574	0					
ANR	1296882	Identifier	error_msg		1296574	0					
ANR	1296883	Identifier	Value		1296574	1					
ANR	1296884	ArgumentList			1296574	1					
ANR	1296885	PrimaryExpression	""""""		1296574	2					
ANR	1296886	ElseStatement	else		1296574	0					
ANR	1296887	CompoundStatement		85:8:2651:2651	1296574	0					
ANR	1296888	ExpressionStatement	"AddErrorMessage ( ""Failed to convert to target environment syntax."" , error_msg )"	200:4:5575:5651	1296574	0	True				
ANR	1296889	CallExpression	"AddErrorMessage ( ""Failed to convert to target environment syntax."" , error_msg )"		1296574	0					
ANR	1296890	Callee	AddErrorMessage		1296574	0					
ANR	1296891	Identifier	AddErrorMessage		1296574	0					
ANR	1296892	ArgumentList	"""Failed to convert to target environment syntax."""		1296574	1					
ANR	1296893	Argument	"""Failed to convert to target environment syntax."""		1296574	0					
ANR	1296894	PrimaryExpression	"""Failed to convert to target environment syntax."""		1296574	0					
ANR	1296895	Argument	error_msg		1296574	1					
ANR	1296896	Identifier	error_msg		1296574	0					
ANR	1296897	ReturnStatement	return false ;	201:4:5657:5669	1296574	1	True				
ANR	1296898	Identifier	false		1296574	0					
ANR	1296899	ReturnStatement	return true ;	205:1:5684:5695	1296574	7	True				
ANR	1296900	Identifier	true		1296574	0					
ANR	1296901	ReturnType	bool		1296574	1					
ANR	1296902	Identifier	Env :: InsertEnvIntoClassAd		1296574	2					
ANR	1296903	ParameterList	"ClassAd * ad , MyString * error_msg , char const * opsys , CondorVersionInfo * condor_version"		1296574	3					
ANR	1296904	Parameter	ClassAd * ad	111:27:2692:2702	1296574	0	True				
ANR	1296905	ParameterType	ClassAd *		1296574	0					
ANR	1296906	Identifier	ad		1296574	1					
ANR	1296907	Parameter	MyString * error_msg	111:40:2705:2723	1296574	1	True				
ANR	1296908	ParameterType	MyString *		1296574	0					
ANR	1296909	Identifier	error_msg		1296574	1					
ANR	1296910	Parameter	char const * opsys	111:61:2726:2742	1296574	2	True				
ANR	1296911	ParameterType	char const *		1296574	0					
ANR	1296912	Identifier	opsys		1296574	1					
ANR	1296913	Parameter	CondorVersionInfo * condor_version	111:80:2745:2777	1296574	3	True				
ANR	1296914	ParameterType	CondorVersionInfo *		1296574	0					
ANR	1296915	Identifier	condor_version		1296574	1					
ANR	1296916	CFGEntryNode	ENTRY		1296574		True				
ANR	1296917	CFGExitNode	EXIT		1296574		True				
ANR	1296918	Symbol	GetEnvV1Delimiter		1296574						
ANR	1296919	Symbol	* error_msg		1296574						
ANR	1296920	Symbol	* ad		1296574						
ANR	1296921	Symbol	env2		1296574						
ANR	1296922	Symbol	condor_version		1296574						
ANR	1296923	Symbol	env1		1296574						
ANR	1296924	Symbol	ATTR_JOB_ENVIRONMENT1_DELIM		1296574						
ANR	1296925	Symbol	getDelimitedStringV2Raw		1296574						
ANR	1296926	Symbol	requires_env1		1296574						
ANR	1296927	Symbol	lookup_delim		1296574						
ANR	1296928	Symbol	& env1		1296574						
ANR	1296929	Symbol	& env2		1296574						
ANR	1296930	Symbol	opsys		1296574						
ANR	1296931	Symbol	CondorVersionRequiresV1		1296574						
ANR	1296932	Symbol	delim		1296574						
ANR	1296933	Symbol	ad -> LookupExpr		1296574						
ANR	1296934	Symbol	ad -> LookupString		1296574						
ANR	1296935	Symbol	ATTR_JOB_ENVIRONMENT2		1296574						
ANR	1296936	Symbol	* lookup_delim		1296574						
ANR	1296937	Symbol	ad		1296574						
ANR	1296938	Symbol	error_msg		1296574						
ANR	1296939	Symbol	NULL		1296574						
ANR	1296940	Symbol	ATTR_JOB_ENVIRONMENT1		1296574						
ANR	1296941	Symbol	* condor_version		1296574						
ANR	1296942	Symbol	false		1296574						
ANR	1296943	Symbol	D_FULLDEBUG		1296574						
ANR	1296944	Symbol	* delim_str		1296574						
ANR	1296945	Symbol	delim_str		1296574						
ANR	1296946	Symbol	& lookup_delim		1296574						
ANR	1296947	Symbol	getDelimitedStringV1Raw		1296574						
ANR	1296948	Symbol	has_env2		1296574						
ANR	1296949	Symbol	env1 . Value		1296574						
ANR	1296950	Symbol	env_delimiter		1296574						
ANR	1296951	Symbol	has_env1		1296574						
ANR	1296952	Symbol	true		1296574						
ANR	1296953	Symbol	env1_success		1296574						
ANR	1296954	Symbol	error_msg -> Value		1296574						
ANR	1296955	Symbol	env2 . Value		1296574						
ANR	1296956	DeclStmt									
ANR	1296957	Decl							int	int	i
ANR	1296958	Function	Env :: MergeFrom	223:0:5949:6388							
ANR	1296959	FunctionDef	Env :: MergeFrom (char const * env_str)		1296958	0					
ANR	1296960	CompoundStatement		225:0:5993:6388	1296958	0					
ANR	1296961	IfStatement	if ( ! env_str )		1296958	0					
ANR	1296962	Condition	! env_str	226:6:6001:6008	1296958	0	True				
ANR	1296963	UnaryOperationExpression	! env_str		1296958	0					
ANR	1296964	UnaryOperator	!		1296958	0					
ANR	1296965	Identifier	env_str		1296958	1					
ANR	1296966	CompoundStatement		2:17:18:18	1296958	1					
ANR	1296967	ReturnStatement	return false ;	227:2:6016:6028	1296958	0	True				
ANR	1296968	Identifier	false		1296958	0					
ANR	1296969	IdentifierDeclStatement	const char * ptr = env_str ;	229:1:6034:6059	1296958	1	True				
ANR	1296970	IdentifierDecl	* ptr = env_str		1296958	0					
ANR	1296971	IdentifierDeclType	const char *		1296958	0					
ANR	1296972	Identifier	ptr		1296958	1					
ANR	1296973	AssignmentExpression	* ptr = env_str		1296958	2		=			
ANR	1296974	Identifier	env_str		1296958	0					
ANR	1296975	Identifier	env_str		1296958	1					
ANR	1296976	WhileStatement	while ( * ptr != '\\0' )		1296958	2					
ANR	1296977	Condition	* ptr != '\\0'	230:9:6070:6081	1296958	0	True				
ANR	1296978	EqualityExpression	* ptr != '\\0'		1296958	0		!=			
ANR	1296979	UnaryOperationExpression	* ptr		1296958	0					
ANR	1296980	UnaryOperator	*		1296958	0					
ANR	1296981	Identifier	ptr		1296958	1					
ANR	1296982	PrimaryExpression	'\\0'		1296958	1					
ANR	1296983	CompoundStatement		6:24:91:91	1296958	1					
ANR	1296984	ExpressionStatement	SetEnv ( ptr )	236:2:6330:6343	1296958	0	True				
ANR	1296985	CallExpression	SetEnv ( ptr )		1296958	0					
ANR	1296986	Callee	SetEnv		1296958	0					
ANR	1296987	Identifier	SetEnv		1296958	0					
ANR	1296988	ArgumentList	ptr		1296958	1					
ANR	1296989	Argument	ptr		1296958	0					
ANR	1296990	Identifier	ptr		1296958	0					
ANR	1296991	ExpressionStatement	ptr += strlen ( ptr ) + 1	237:2:6347:6369	1296958	1	True				
ANR	1296992	AssignmentExpression	ptr += strlen ( ptr ) + 1		1296958	0		+=			
ANR	1296993	Identifier	ptr		1296958	0					
ANR	1296994	AdditiveExpression	strlen ( ptr ) + 1		1296958	1		+			
ANR	1296995	CallExpression	strlen ( ptr )		1296958	0					
ANR	1296996	Callee	strlen		1296958	0					
ANR	1296997	Identifier	strlen		1296958	0					
ANR	1296998	ArgumentList	ptr		1296958	1					
ANR	1296999	Argument	ptr		1296958	0					
ANR	1297000	Identifier	ptr		1296958	0					
ANR	1297001	PrimaryExpression	1		1296958	1					
ANR	1297002	ReturnStatement	return true ;	239:1:6375:6386	1296958	3	True				
ANR	1297003	Identifier	true		1296958	0					
ANR	1297004	ReturnType	bool		1296958	1					
ANR	1297005	Identifier	Env :: MergeFrom		1296958	2					
ANR	1297006	ParameterList	char const * env_str		1296958	3					
ANR	1297007	Parameter	char const * env_str	224:16:5970:5989	1296958	0	True				
ANR	1297008	ParameterType	char const *		1296958	0					
ANR	1297009	Identifier	env_str		1296958	1					
ANR	1297010	CFGEntryNode	ENTRY		1296958		True				
ANR	1297011	CFGExitNode	EXIT		1296958		True				
ANR	1297012	Symbol	strlen		1296958						
ANR	1297013	Symbol	false		1296958						
ANR	1297014	Symbol	* ptr		1296958						
ANR	1297015	Symbol	true		1296958						
ANR	1297016	Symbol	env_str		1296958						
ANR	1297017	Symbol	ptr		1296958						
ANR	1297018	Function	Env :: MergeFrom	242:0:6391:6558							
ANR	1297019	FunctionDef	Env :: MergeFrom (Env const & env)		1297018	0					
ANR	1297020	CompoundStatement		244:0:6429:6558	1297018	0					
ANR	1297021	IdentifierDeclStatement	"MyString var , val ;"	245:1:6432:6448	1297018	0	True				
ANR	1297022	IdentifierDecl	var		1297018	0					
ANR	1297023	IdentifierDeclType	MyString		1297018	0					
ANR	1297024	Identifier	var		1297018	1					
ANR	1297025	IdentifierDecl	val		1297018	1					
ANR	1297026	IdentifierDeclType	MyString		1297018	0					
ANR	1297027	Identifier	val		1297018	1					
ANR	1297028	ExpressionStatement	env . _envTable -> startIterations ( )	247:1:6452:6484	1297018	1	True				
ANR	1297029	CallExpression	env . _envTable -> startIterations ( )		1297018	0					
ANR	1297030	Callee	env . _envTable -> startIterations		1297018	0					
ANR	1297031	PtrMemberAccess	env . _envTable -> startIterations		1297018	0					
ANR	1297032	MemberAccess	env . _envTable		1297018	0					
ANR	1297033	Identifier	env		1297018	0					
ANR	1297034	Identifier	_envTable		1297018	1					
ANR	1297035	Identifier	startIterations		1297018	1					
ANR	1297036	ArgumentList			1297018	1					
ANR	1297037	WhileStatement	"while ( env . _envTable -> iterate ( var , val ) )"		1297018	2					
ANR	1297038	Condition	"env . _envTable -> iterate ( var , val )"	248:7:6493:6523	1297018	0	True				
ANR	1297039	CallExpression	"env . _envTable -> iterate ( var , val )"		1297018	0					
ANR	1297040	Callee	env . _envTable -> iterate		1297018	0					
ANR	1297041	PtrMemberAccess	env . _envTable -> iterate		1297018	0					
ANR	1297042	MemberAccess	env . _envTable		1297018	0					
ANR	1297043	Identifier	env		1297018	0					
ANR	1297044	Identifier	_envTable		1297018	1					
ANR	1297045	Identifier	iterate		1297018	1					
ANR	1297046	ArgumentList	var		1297018	1					
ANR	1297047	Argument	var		1297018	0					
ANR	1297048	Identifier	var		1297018	0					
ANR	1297049	Argument	val		1297018	1					
ANR	1297050	Identifier	val		1297018	0					
ANR	1297051	CompoundStatement		5:40:96:96	1297018	1					
ANR	1297052	ExpressionStatement	"ASSERT ( SetEnv ( var , val ) )"	249:2:6530:6553	1297018	0	True				
ANR	1297053	CallExpression	"ASSERT ( SetEnv ( var , val ) )"		1297018	0					
ANR	1297054	Callee	ASSERT		1297018	0					
ANR	1297055	Identifier	ASSERT		1297018	0					
ANR	1297056	ArgumentList	"SetEnv ( var , val )"		1297018	1					
ANR	1297057	Argument	"SetEnv ( var , val )"		1297018	0					
ANR	1297058	CallExpression	"SetEnv ( var , val )"		1297018	0					
ANR	1297059	Callee	SetEnv		1297018	0					
ANR	1297060	Identifier	SetEnv		1297018	0					
ANR	1297061	ArgumentList	var		1297018	1					
ANR	1297062	Argument	var		1297018	0					
ANR	1297063	Identifier	var		1297018	0					
ANR	1297064	Argument	val		1297018	1					
ANR	1297065	Identifier	val		1297018	0					
ANR	1297066	ReturnType	void		1297018	1					
ANR	1297067	Identifier	Env :: MergeFrom		1297018	2					
ANR	1297068	ParameterList	Env const & env		1297018	3					
ANR	1297069	Parameter	Env const & env	243:16:6412:6425	1297018	0	True				
ANR	1297070	ParameterType	Env const &		1297018	0					
ANR	1297071	Identifier	env		1297018	1					
ANR	1297072	CFGEntryNode	ENTRY		1297018		True				
ANR	1297073	CFGExitNode	EXIT		1297018		True				
ANR	1297074	Symbol	val		1297018						
ANR	1297075	Symbol	env . _envTable -> iterate		1297018						
ANR	1297076	Symbol	env . _envTable		1297018						
ANR	1297077	Symbol	var		1297018						
ANR	1297078	Symbol	* env		1297018						
ANR	1297079	Symbol	env		1297018						
ANR	1297080	Symbol	SetEnv		1297018						
ANR	1297081	Symbol	* env . _envTable		1297018						
ANR	1297082	Function	Env :: IsSafeEnvV1Value	253:0:6561:7098							
ANR	1297083	FunctionDef	"Env :: IsSafeEnvV1Value (char const * str , char delim)"		1297082	0					
ANR	1297084	CompoundStatement		255:0:6616:7098	1297082	0					
ANR	1297085	IfStatement	if ( ! str )		1297082	0					
ANR	1297086	Condition	! str	259:4:6760:6763	1297082	0	True				
ANR	1297087	UnaryOperationExpression	! str		1297082	0					
ANR	1297088	UnaryOperator	!		1297082	0					
ANR	1297089	Identifier	str		1297082	1					
ANR	1297090	ReturnStatement	return false ;	259:10:6766:6778	1297082	1	True				
ANR	1297091	Identifier	false		1297082	0					
ANR	1297092	IfStatement	if ( ! delim )		1297082	1					
ANR	1297093	Condition	! delim	260:4:6784:6789	1297082	0	True				
ANR	1297094	UnaryOperationExpression	! delim		1297082	0					
ANR	1297095	UnaryOperator	!		1297082	0					
ANR	1297096	Identifier	delim		1297082	1					
ANR	1297097	ExpressionStatement	delim = env_delimiter	260:12:6792:6813	1297082	1	True				
ANR	1297098	AssignmentExpression	delim = env_delimiter		1297082	0		=			
ANR	1297099	Identifier	delim		1297082	0					
ANR	1297100	Identifier	env_delimiter		1297082	1					
ANR	1297101	IdentifierDeclStatement	"char specials [ ] = { '|' , '\\n' , '\\0' } ;"	262:1:6817:6850	1297082	2	True				
ANR	1297102	IdentifierDecl	"specials [ ] = { '|' , '\\n' , '\\0' }"		1297082	0					
ANR	1297103	IdentifierDeclType	char [ ]		1297082	0					
ANR	1297104	Identifier	specials		1297082	1					
ANR	1297105	AssignmentExpression	"specials [ ] = { '|' , '\\n' , '\\0' }"		1297082	2		=			
ANR	1297106	Identifier	specials		1297082	0					
ANR	1297107	InitializerList	'|'		1297082	1					
ANR	1297108	PrimaryExpression	'|'		1297082	0					
ANR	1297109	PrimaryExpression	'\\n'		1297082	1					
ANR	1297110	PrimaryExpression	'\\0'		1297082	2					
ANR	1297111	ExpressionStatement	specials [ 0 ] = delim	265:1:6940:6959	1297082	3	True				
ANR	1297112	AssignmentExpression	specials [ 0 ] = delim		1297082	0		=			
ANR	1297113	ArrayIndexing	specials [ 0 ]		1297082	0					
ANR	1297114	Identifier	specials		1297082	0					
ANR	1297115	PrimaryExpression	0		1297082	1					
ANR	1297116	Identifier	delim		1297082	1					
ANR	1297117	IdentifierDeclStatement	"size_t safe_length = strcspn ( str , specials ) ;"	267:1:6963:7005	1297082	4	True				
ANR	1297118	IdentifierDecl	"safe_length = strcspn ( str , specials )"		1297082	0					
ANR	1297119	IdentifierDeclType	size_t		1297082	0					
ANR	1297120	Identifier	safe_length		1297082	1					
ANR	1297121	AssignmentExpression	"safe_length = strcspn ( str , specials )"		1297082	2		=			
ANR	1297122	Identifier	safe_length		1297082	0					
ANR	1297123	CallExpression	"strcspn ( str , specials )"		1297082	1					
ANR	1297124	Callee	strcspn		1297082	0					
ANR	1297125	Identifier	strcspn		1297082	0					
ANR	1297126	ArgumentList	str		1297082	1					
ANR	1297127	Argument	str		1297082	0					
ANR	1297128	Identifier	str		1297082	0					
ANR	1297129	Argument	specials		1297082	1					
ANR	1297130	Identifier	specials		1297082	0					
ANR	1297131	ReturnStatement	return ! str [ safe_length ] ;	270:1:7072:7096	1297082	5	True				
ANR	1297132	UnaryOperationExpression	! str [ safe_length ]		1297082	0					
ANR	1297133	UnaryOperator	!		1297082	0					
ANR	1297134	ArrayIndexing	str [ safe_length ]		1297082	1					
ANR	1297135	Identifier	str		1297082	0					
ANR	1297136	Identifier	safe_length		1297082	1					
ANR	1297137	ReturnType	bool		1297082	1					
ANR	1297138	Identifier	Env :: IsSafeEnvV1Value		1297082	2					
ANR	1297139	ParameterList	"char const * str , char delim"		1297082	3					
ANR	1297140	Parameter	char const * str	254:22:6588:6602	1297082	0	True				
ANR	1297141	ParameterType	char const *		1297082	0					
ANR	1297142	Identifier	str		1297082	1					
ANR	1297143	Parameter	char delim	254:38:6604:6613	1297082	1	True				
ANR	1297144	ParameterType	char		1297082	0					
ANR	1297145	Identifier	delim		1297082	1					
ANR	1297146	CFGEntryNode	ENTRY		1297082		True				
ANR	1297147	CFGExitNode	EXIT		1297082		True				
ANR	1297148	Symbol	str		1297082						
ANR	1297149	Symbol	safe_length		1297082						
ANR	1297150	Symbol	specials		1297082						
ANR	1297151	Symbol	env_delimiter		1297082						
ANR	1297152	Symbol	false		1297082						
ANR	1297153	Symbol	* specials		1297082						
ANR	1297154	Symbol	* str		1297082						
ANR	1297155	Symbol	strcspn		1297082						
ANR	1297156	Symbol	delim		1297082						
ANR	1297157	Symbol	* safe_length		1297082						
ANR	1297158	Function	Env :: IsSafeEnvV2Value	273:0:7101:7574							
ANR	1297159	FunctionDef	Env :: IsSafeEnvV2Value (char const * str)		1297158	0					
ANR	1297160	CompoundStatement		275:0:7145:7574	1297158	0					
ANR	1297161	IfStatement	if ( ! str )		1297158	0					
ANR	1297162	Condition	! str	279:4:7264:7267	1297158	0	True				
ANR	1297163	UnaryOperationExpression	! str		1297158	0					
ANR	1297164	UnaryOperator	!		1297158	0					
ANR	1297165	Identifier	str		1297158	1					
ANR	1297166	ReturnStatement	return false ;	279:10:7270:7282	1297158	1	True				
ANR	1297167	Identifier	false		1297158	0					
ANR	1297168	IdentifierDeclStatement	"char specials [ ] = { '\\n' , '\\0' } ;"	284:1:7406:7435	1297158	1	True				
ANR	1297169	IdentifierDecl	"specials [ ] = { '\\n' , '\\0' }"		1297158	0					
ANR	1297170	IdentifierDeclType	char [ ]		1297158	0					
ANR	1297171	Identifier	specials		1297158	1					
ANR	1297172	AssignmentExpression	"specials [ ] = { '\\n' , '\\0' }"		1297158	2		=			
ANR	1297173	Identifier	specials		1297158	0					
ANR	1297174	InitializerList	'\\n'		1297158	1					
ANR	1297175	PrimaryExpression	'\\n'		1297158	0					
ANR	1297176	PrimaryExpression	'\\0'		1297158	1					
ANR	1297177	IdentifierDeclStatement	"size_t safe_length = strcspn ( str , specials ) ;"	286:1:7439:7481	1297158	2	True				
ANR	1297178	IdentifierDecl	"safe_length = strcspn ( str , specials )"		1297158	0					
ANR	1297179	IdentifierDeclType	size_t		1297158	0					
ANR	1297180	Identifier	safe_length		1297158	1					
ANR	1297181	AssignmentExpression	"safe_length = strcspn ( str , specials )"		1297158	2		=			
ANR	1297182	Identifier	safe_length		1297158	0					
ANR	1297183	CallExpression	"strcspn ( str , specials )"		1297158	1					
ANR	1297184	Callee	strcspn		1297158	0					
ANR	1297185	Identifier	strcspn		1297158	0					
ANR	1297186	ArgumentList	str		1297158	1					
ANR	1297187	Argument	str		1297158	0					
ANR	1297188	Identifier	str		1297158	0					
ANR	1297189	Argument	specials		1297158	1					
ANR	1297190	Identifier	specials		1297158	0					
ANR	1297191	ReturnStatement	return ! str [ safe_length ] ;	289:1:7548:7572	1297158	3	True				
ANR	1297192	UnaryOperationExpression	! str [ safe_length ]		1297158	0					
ANR	1297193	UnaryOperator	!		1297158	0					
ANR	1297194	ArrayIndexing	str [ safe_length ]		1297158	1					
ANR	1297195	Identifier	str		1297158	0					
ANR	1297196	Identifier	safe_length		1297158	1					
ANR	1297197	ReturnType	bool		1297158	1					
ANR	1297198	Identifier	Env :: IsSafeEnvV2Value		1297158	2					
ANR	1297199	ParameterList	char const * str		1297158	3					
ANR	1297200	Parameter	char const * str	274:22:7128:7142	1297158	0	True				
ANR	1297201	ParameterType	char const *		1297158	0					
ANR	1297202	Identifier	str		1297158	1					
ANR	1297203	CFGEntryNode	ENTRY		1297158		True				
ANR	1297204	CFGExitNode	EXIT		1297158		True				
ANR	1297205	Symbol	str		1297158						
ANR	1297206	Symbol	safe_length		1297158						
ANR	1297207	Symbol	specials		1297158						
ANR	1297208	Symbol	false		1297158						
ANR	1297209	Symbol	* str		1297158						
ANR	1297210	Symbol	strcspn		1297158						
ANR	1297211	Symbol	* safe_length		1297158						
ANR	1297212	Function	Env :: WriteToDelimitedString	292:0:7577:8428							
ANR	1297213	FunctionDef	"Env :: WriteToDelimitedString (char const * input , MyString & output)"		1297212	0					
ANR	1297214	CompoundStatement		293:64:7646:8428	1297212	0					
ANR	1297215	IdentifierDeclStatement	char const inner_specials [ ] = { '\\0' } ;	299:1:7826:7862	1297212	0	True				
ANR	1297216	IdentifierDecl	inner_specials [ ] = { '\\0' }		1297212	0					
ANR	1297217	IdentifierDeclType	char const [ ]		1297212	0					
ANR	1297218	Identifier	inner_specials		1297212	1					
ANR	1297219	AssignmentExpression	inner_specials [ ] = { '\\0' }		1297212	2		=			
ANR	1297220	Identifier	inner_specials		1297212	0					
ANR	1297221	InitializerList	'\\0'		1297212	1					
ANR	1297222	PrimaryExpression	'\\0'		1297212	0					
ANR	1297223	IdentifierDeclStatement	char const first_specials [ ] = { '\\0' } ;	300:1:7865:7901	1297212	1	True				
ANR	1297224	IdentifierDecl	first_specials [ ] = { '\\0' }		1297212	0					
ANR	1297225	IdentifierDeclType	char const [ ]		1297212	0					
ANR	1297226	Identifier	first_specials		1297212	1					
ANR	1297227	AssignmentExpression	first_specials [ ] = { '\\0' }		1297212	2		=			
ANR	1297228	Identifier	first_specials		1297212	0					
ANR	1297229	InitializerList	'\\0'		1297212	1					
ANR	1297230	PrimaryExpression	'\\0'		1297212	0					
ANR	1297231	IdentifierDeclStatement	char const * specials = first_specials ;	302:1:7905:7942	1297212	2	True				
ANR	1297232	IdentifierDecl	* specials = first_specials		1297212	0					
ANR	1297233	IdentifierDeclType	char const *		1297212	0					
ANR	1297234	Identifier	specials		1297212	1					
ANR	1297235	AssignmentExpression	* specials = first_specials		1297212	2		=			
ANR	1297236	Identifier	first_specials		1297212	0					
ANR	1297237	Identifier	first_specials		1297212	1					
ANR	1297238	IdentifierDeclStatement	char const * end ;	303:1:7945:7960	1297212	3	True				
ANR	1297239	IdentifierDecl	* end		1297212	0					
ANR	1297240	IdentifierDeclType	char const *		1297212	0					
ANR	1297241	Identifier	end		1297212	1					
ANR	1297242	IdentifierDeclStatement	bool ret ;	304:1:7963:7971	1297212	4	True				
ANR	1297243	IdentifierDecl	ret		1297212	0					
ANR	1297244	IdentifierDeclType	bool		1297212	0					
ANR	1297245	Identifier	ret		1297212	1					
ANR	1297246	IfStatement	if ( ! input )		1297212	5					
ANR	1297247	Condition	! input	306:4:7978:7983	1297212	0	True				
ANR	1297248	UnaryOperationExpression	! input		1297212	0					
ANR	1297249	UnaryOperator	!		1297212	0					
ANR	1297250	Identifier	input		1297212	1					
ANR	1297251	ReturnStatement	return ;	306:12:7986:7992	1297212	1	True				
ANR	1297252	WhileStatement	while ( * input )		1297212	6					
ANR	1297253	Condition	* input	308:7:8002:8007	1297212	0	True				
ANR	1297254	UnaryOperationExpression	* input		1297212	0					
ANR	1297255	UnaryOperator	*		1297212	0					
ANR	1297256	Identifier	input		1297212	1					
ANR	1297257	CompoundStatement		16:15:363:363	1297212	1					
ANR	1297258	ExpressionStatement	"end = input + strcspn ( input , specials )"	309:2:8014:8051	1297212	0	True				
ANR	1297259	AssignmentExpression	"end = input + strcspn ( input , specials )"		1297212	0		=			
ANR	1297260	Identifier	end		1297212	0					
ANR	1297261	AdditiveExpression	"input + strcspn ( input , specials )"		1297212	1		+			
ANR	1297262	Identifier	input		1297212	0					
ANR	1297263	CallExpression	"strcspn ( input , specials )"		1297212	1					
ANR	1297264	Callee	strcspn		1297212	0					
ANR	1297265	Identifier	strcspn		1297212	0					
ANR	1297266	ArgumentList	input		1297212	1					
ANR	1297267	Argument	input		1297212	0					
ANR	1297268	Identifier	input		1297212	0					
ANR	1297269	Argument	specials		1297212	1					
ANR	1297270	Identifier	specials		1297212	0					
ANR	1297271	ExpressionStatement	"ret = output . sprintf_cat ( ""%.*s"" , ( int ) ( end - input ) , input )"	310:2:8055:8112	1297212	1	True				
ANR	1297272	AssignmentExpression	"ret = output . sprintf_cat ( ""%.*s"" , ( int ) ( end - input ) , input )"		1297212	0		=			
ANR	1297273	Identifier	ret		1297212	0					
ANR	1297274	CallExpression	"output . sprintf_cat ( ""%.*s"" , ( int ) ( end - input ) , input )"		1297212	1					
ANR	1297275	Callee	output . sprintf_cat		1297212	0					
ANR	1297276	MemberAccess	output . sprintf_cat		1297212	0					
ANR	1297277	Identifier	output		1297212	0					
ANR	1297278	Identifier	sprintf_cat		1297212	1					
ANR	1297279	ArgumentList	"""%.*s"""		1297212	1					
ANR	1297280	Argument	"""%.*s"""		1297212	0					
ANR	1297281	PrimaryExpression	"""%.*s"""		1297212	0					
ANR	1297282	Argument	( int ) ( end - input )		1297212	1					
ANR	1297283	CastExpression	( int ) ( end - input )		1297212	0					
ANR	1297284	CastTarget	int		1297212	0					
ANR	1297285	AdditiveExpression	end - input		1297212	1		-			
ANR	1297286	Identifier	end		1297212	0					
ANR	1297287	Identifier	input		1297212	1					
ANR	1297288	Argument	input		1297212	2					
ANR	1297289	Identifier	input		1297212	0					
ANR	1297290	ExpressionStatement	ASSERT ( ret )	311:2:8116:8127	1297212	2	True				
ANR	1297291	CallExpression	ASSERT ( ret )		1297212	0					
ANR	1297292	Callee	ASSERT		1297212	0					
ANR	1297293	Identifier	ASSERT		1297212	0					
ANR	1297294	ArgumentList	ret		1297212	1					
ANR	1297295	Argument	ret		1297212	0					
ANR	1297296	Identifier	ret		1297212	0					
ANR	1297297	ExpressionStatement	input = end	312:2:8131:8142	1297212	3	True				
ANR	1297298	AssignmentExpression	input = end		1297212	0		=			
ANR	1297299	Identifier	input		1297212	0					
ANR	1297300	Identifier	end		1297212	1					
ANR	1297301	IfStatement	if ( * input != '\\0' )		1297212	4					
ANR	1297302	Condition	* input != '\\0'	314:5:8150:8163	1297212	0	True				
ANR	1297303	EqualityExpression	* input != '\\0'		1297212	0		!=			
ANR	1297304	UnaryOperationExpression	* input		1297212	0					
ANR	1297305	UnaryOperator	*		1297212	0					
ANR	1297306	Identifier	input		1297212	1					
ANR	1297307	PrimaryExpression	'\\0'		1297212	1					
ANR	1297308	CompoundStatement		22:21:519:519	1297212	1					
ANR	1297309	ExpressionStatement	"ret = output . sprintf_cat ( ""%c"" , * input )"	317:3:8274:8311	1297212	0	True				
ANR	1297310	AssignmentExpression	"ret = output . sprintf_cat ( ""%c"" , * input )"		1297212	0		=			
ANR	1297311	Identifier	ret		1297212	0					
ANR	1297312	CallExpression	"output . sprintf_cat ( ""%c"" , * input )"		1297212	1					
ANR	1297313	Callee	output . sprintf_cat		1297212	0					
ANR	1297314	MemberAccess	output . sprintf_cat		1297212	0					
ANR	1297315	Identifier	output		1297212	0					
ANR	1297316	Identifier	sprintf_cat		1297212	1					
ANR	1297317	ArgumentList	"""%c"""		1297212	1					
ANR	1297318	Argument	"""%c"""		1297212	0					
ANR	1297319	PrimaryExpression	"""%c"""		1297212	0					
ANR	1297320	Argument	* input		1297212	1					
ANR	1297321	UnaryOperationExpression	* input		1297212	0					
ANR	1297322	UnaryOperator	*		1297212	0					
ANR	1297323	Identifier	input		1297212	1					
ANR	1297324	ExpressionStatement	ASSERT ( ret )	318:3:8316:8327	1297212	1	True				
ANR	1297325	CallExpression	ASSERT ( ret )		1297212	0					
ANR	1297326	Callee	ASSERT		1297212	0					
ANR	1297327	Identifier	ASSERT		1297212	0					
ANR	1297328	ArgumentList	ret		1297212	1					
ANR	1297329	Argument	ret		1297212	0					
ANR	1297330	Identifier	ret		1297212	0					
ANR	1297331	ExpressionStatement	input ++	319:3:8332:8339	1297212	2	True				
ANR	1297332	PostIncDecOperationExpression	input ++		1297212	0					
ANR	1297333	Identifier	input		1297212	0					
ANR	1297334	IncDec	++		1297212	1					
ANR	1297335	ExpressionStatement	specials = inner_specials	323:2:8398:8423	1297212	5	True				
ANR	1297336	AssignmentExpression	specials = inner_specials		1297212	0		=			
ANR	1297337	Identifier	specials		1297212	0					
ANR	1297338	Identifier	inner_specials		1297212	1					
ANR	1297339	ReturnType	void		1297212	1					
ANR	1297340	Identifier	Env :: WriteToDelimitedString		1297212	2					
ANR	1297341	ParameterList	"char const * input , MyString & output"		1297212	3					
ANR	1297342	Parameter	char const * input	293:28:7610:7626	1297212	0	True				
ANR	1297343	ParameterType	char const *		1297212	0					
ANR	1297344	Identifier	input		1297212	1					
ANR	1297345	Parameter	MyString & output	293:46:7628:7643	1297212	1	True				
ANR	1297346	ParameterType	MyString &		1297212	0					
ANR	1297347	Identifier	output		1297212	1					
ANR	1297348	CFGEntryNode	ENTRY		1297212		True				
ANR	1297349	CFGExitNode	EXIT		1297212		True				
ANR	1297350	Symbol	output		1297212						
ANR	1297351	Symbol	ret		1297212						
ANR	1297352	Symbol	output . sprintf_cat		1297212						
ANR	1297353	Symbol	input		1297212						
ANR	1297354	Symbol	specials		1297212						
ANR	1297355	Symbol	first_specials		1297212						
ANR	1297356	Symbol	* input		1297212						
ANR	1297357	Symbol	end		1297212						
ANR	1297358	Symbol	strcspn		1297212						
ANR	1297359	Symbol	inner_specials		1297212						
ANR	1297360	Function	Env :: ReadFromDelimitedString	327:0:8431:9092							
ANR	1297361	FunctionDef	"Env :: ReadFromDelimitedString (char const * & input , char * output)"		1297360	0					
ANR	1297362	CompoundStatement		328:63:8499:9092	1297360	0					
ANR	1297363	WhileStatement	while ( * input == ' ' || * input == '\\t' || * input == '\\n' || * input == '\\r' )		1297360	0					
ANR	1297364	Condition	* input == ' ' || * input == '\\t' || * input == '\\n' || * input == '\\r'	333:8:8678:8737	1297360	0	True				
ANR	1297365	OrExpression	* input == ' ' || * input == '\\t' || * input == '\\n' || * input == '\\r'		1297360	0		||			
ANR	1297366	EqualityExpression	* input == ' '		1297360	0		==			
ANR	1297367	UnaryOperationExpression	* input		1297360	0					
ANR	1297368	UnaryOperator	*		1297360	0					
ANR	1297369	Identifier	input		1297360	1					
ANR	1297370	PrimaryExpression	' '		1297360	1					
ANR	1297371	OrExpression	* input == '\\t' || * input == '\\n' || * input == '\\r'		1297360	1		||			
ANR	1297372	EqualityExpression	* input == '\\t'		1297360	0		==			
ANR	1297373	UnaryOperationExpression	* input		1297360	0					
ANR	1297374	UnaryOperator	*		1297360	0					
ANR	1297375	Identifier	input		1297360	1					
ANR	1297376	PrimaryExpression	'\\t'		1297360	1					
ANR	1297377	OrExpression	* input == '\\n' || * input == '\\r'		1297360	1		||			
ANR	1297378	EqualityExpression	* input == '\\n'		1297360	0		==			
ANR	1297379	UnaryOperationExpression	* input		1297360	0					
ANR	1297380	UnaryOperator	*		1297360	0					
ANR	1297381	Identifier	input		1297360	1					
ANR	1297382	PrimaryExpression	'\\n'		1297360	1					
ANR	1297383	EqualityExpression	* input == '\\r'		1297360	1		==			
ANR	1297384	UnaryOperationExpression	* input		1297360	0					
ANR	1297385	UnaryOperator	*		1297360	0					
ANR	1297386	Identifier	input		1297360	1					
ANR	1297387	PrimaryExpression	'\\r'		1297360	1					
ANR	1297388	CompoundStatement		6:70:240:240	1297360	1					
ANR	1297389	ExpressionStatement	input ++	334:2:8744:8751	1297360	0	True				
ANR	1297390	PostIncDecOperationExpression	input ++		1297360	0					
ANR	1297391	Identifier	input		1297360	0					
ANR	1297392	IncDec	++		1297360	1					
ANR	1297393	WhileStatement	while ( * input )		1297360	1					
ANR	1297394	Condition	* input	337:8:8765:8770	1297360	0	True				
ANR	1297395	UnaryOperationExpression	* input		1297360	0					
ANR	1297396	UnaryOperator	*		1297360	0					
ANR	1297397	Identifier	input		1297360	1					
ANR	1297398	CompoundStatement		10:17:274:274	1297360	1					
ANR	1297399	IfStatement	if ( * input == '\\n' || * input == env_delimiter )		1297360	0					
ANR	1297400	Condition	* input == '\\n' || * input == env_delimiter	338:5:8781:8821	1297360	0	True				
ANR	1297401	OrExpression	* input == '\\n' || * input == env_delimiter		1297360	0		||			
ANR	1297402	EqualityExpression	* input == '\\n'		1297360	0		==			
ANR	1297403	UnaryOperationExpression	* input		1297360	0					
ANR	1297404	UnaryOperator	*		1297360	0					
ANR	1297405	Identifier	input		1297360	1					
ANR	1297406	PrimaryExpression	'\\n'		1297360	1					
ANR	1297407	EqualityExpression	* input == env_delimiter		1297360	1		==			
ANR	1297408	UnaryOperationExpression	* input		1297360	0					
ANR	1297409	UnaryOperator	*		1297360	0					
ANR	1297410	Identifier	input		1297360	1					
ANR	1297411	Identifier	env_delimiter		1297360	1					
ANR	1297412	CompoundStatement		11:48:324:324	1297360	1					
ANR	1297413	ExpressionStatement	input ++	341:3:8944:8951	1297360	0	True				
ANR	1297414	PostIncDecOperationExpression	input ++		1297360	0					
ANR	1297415	Identifier	input		1297360	0					
ANR	1297416	IncDec	++		1297360	1					
ANR	1297417	BreakStatement	break ;	342:3:8956:8961	1297360	1	True				
ANR	1297418	ElseStatement	else		1297360	0					
ANR	1297419	CompoundStatement		17:7:474:474	1297360	0					
ANR	1297420	ExpressionStatement	* ( output ++ ) = * ( input ++ )	346:3:9026:9050	1297360	0	True				
ANR	1297421	AssignmentExpression	* ( output ++ ) = * ( input ++ )		1297360	0		=			
ANR	1297422	UnaryOperationExpression	* ( output ++ )		1297360	0					
ANR	1297423	UnaryOperator	*		1297360	0					
ANR	1297424	PostIncDecOperationExpression	output ++		1297360	1					
ANR	1297425	Identifier	output		1297360	0					
ANR	1297426	IncDec	++		1297360	1					
ANR	1297427	UnaryOperationExpression	* ( input ++ )		1297360	1					
ANR	1297428	UnaryOperator	*		1297360	0					
ANR	1297429	PostIncDecOperationExpression	input ++		1297360	1					
ANR	1297430	Identifier	input		1297360	0					
ANR	1297431	IncDec	++		1297360	1					
ANR	1297432	ExpressionStatement	* output = '\\0'	350:1:9061:9075	1297360	2	True				
ANR	1297433	AssignmentExpression	* output = '\\0'		1297360	0		=			
ANR	1297434	UnaryOperationExpression	* output		1297360	0					
ANR	1297435	UnaryOperator	*		1297360	0					
ANR	1297436	Identifier	output		1297360	1					
ANR	1297437	PrimaryExpression	'\\0'		1297360	1					
ANR	1297438	ReturnStatement	return true ;	352:1:9079:9090	1297360	3	True				
ANR	1297439	Identifier	true		1297360	0					
ANR	1297440	ReturnType	bool		1297360	1					
ANR	1297441	Identifier	Env :: ReadFromDelimitedString		1297360	2					
ANR	1297442	ParameterList	"char const * & input , char * output"		1297360	3					
ANR	1297443	Parameter	char const * & input	328:29:8465:8482	1297360	0	True				
ANR	1297444	ParameterType	char const * &		1297360	0					
ANR	1297445	Identifier	input		1297360	1					
ANR	1297446	Parameter	char * output	328:49:8485:8496	1297360	1	True				
ANR	1297447	ParameterType	char *		1297360	0					
ANR	1297448	Identifier	output		1297360	1					
ANR	1297449	CFGEntryNode	ENTRY		1297360		True				
ANR	1297450	CFGExitNode	EXIT		1297360		True				
ANR	1297451	Symbol	output		1297360						
ANR	1297452	Symbol	input		1297360						
ANR	1297453	Symbol	* ( output ++ )		1297360						
ANR	1297454	Symbol	* ( input ++ )		1297360						
ANR	1297455	Symbol	env_delimiter		1297360						
ANR	1297456	Symbol	* input		1297360						
ANR	1297457	Symbol	true		1297360						
ANR	1297458	Symbol	* output		1297360						
ANR	1297459	Function	Env :: IsV2QuotedString	355:0:9095:9181							
ANR	1297460	FunctionDef	Env :: IsV2QuotedString (char const * str)		1297459	0					
ANR	1297461	CompoundStatement		357:0:9139:9181	1297459	0					
ANR	1297462	ReturnStatement	return ArgList :: IsV2QuotedString ( str ) ;	358:1:9142:9179	1297459	0	True				
ANR	1297463	CallExpression	ArgList :: IsV2QuotedString ( str )		1297459	0					
ANR	1297464	Callee	ArgList :: IsV2QuotedString		1297459	0					
ANR	1297465	Identifier	ArgList :: IsV2QuotedString		1297459	0					
ANR	1297466	ArgumentList	str		1297459	1					
ANR	1297467	Argument	str		1297459	0					
ANR	1297468	Identifier	str		1297459	0					
ANR	1297469	ReturnType	bool		1297459	1					
ANR	1297470	Identifier	Env :: IsV2QuotedString		1297459	2					
ANR	1297471	ParameterList	char const * str		1297459	3					
ANR	1297472	Parameter	char const * str	356:22:9122:9136	1297459	0	True				
ANR	1297473	ParameterType	char const *		1297459	0					
ANR	1297474	Identifier	str		1297459	1					
ANR	1297475	CFGEntryNode	ENTRY		1297459		True				
ANR	1297476	CFGExitNode	EXIT		1297459		True				
ANR	1297477	Symbol	str		1297459						
ANR	1297478	Symbol	ArgList :: IsV2QuotedString		1297459						
ANR	1297479	Function	Env :: V2QuotedToV2Raw	361:0:9184:9328							
ANR	1297480	FunctionDef	"Env :: V2QuotedToV2Raw (char const * v1_quoted , MyString * v2_raw , MyString * errmsg)"		1297479	0					
ANR	1297481	CompoundStatement		363:0:9267:9328	1297479	0					
ANR	1297482	ReturnStatement	"return ArgList :: V2QuotedToV2Raw ( v1_quoted , v2_raw , errmsg ) ;"	364:1:9270:9326	1297479	0	True				
ANR	1297483	CallExpression	"ArgList :: V2QuotedToV2Raw ( v1_quoted , v2_raw , errmsg )"		1297479	0					
ANR	1297484	Callee	ArgList :: V2QuotedToV2Raw		1297479	0					
ANR	1297485	Identifier	ArgList :: V2QuotedToV2Raw		1297479	0					
ANR	1297486	ArgumentList	v1_quoted		1297479	1					
ANR	1297487	Argument	v1_quoted		1297479	0					
ANR	1297488	Identifier	v1_quoted		1297479	0					
ANR	1297489	Argument	v2_raw		1297479	1					
ANR	1297490	Identifier	v2_raw		1297479	0					
ANR	1297491	Argument	errmsg		1297479	2					
ANR	1297492	Identifier	errmsg		1297479	0					
ANR	1297493	ReturnType	bool		1297479	1					
ANR	1297494	Identifier	Env :: V2QuotedToV2Raw		1297479	2					
ANR	1297495	ParameterList	"char const * v1_quoted , MyString * v2_raw , MyString * errmsg"		1297479	3					
ANR	1297496	Parameter	char const * v1_quoted	362:21:9210:9230	1297479	0	True				
ANR	1297497	ParameterType	char const *		1297479	0					
ANR	1297498	Identifier	v1_quoted		1297479	1					
ANR	1297499	Parameter	MyString * v2_raw	362:43:9232:9247	1297479	1	True				
ANR	1297500	ParameterType	MyString *		1297479	0					
ANR	1297501	Identifier	v2_raw		1297479	1					
ANR	1297502	Parameter	MyString * errmsg	362:60:9249:9264	1297479	2	True				
ANR	1297503	ParameterType	MyString *		1297479	0					
ANR	1297504	Identifier	errmsg		1297479	1					
ANR	1297505	CFGEntryNode	ENTRY		1297479		True				
ANR	1297506	CFGExitNode	EXIT		1297479		True				
ANR	1297507	Symbol	v1_quoted		1297479						
ANR	1297508	Symbol	ArgList :: V2QuotedToV2Raw		1297479						
ANR	1297509	Symbol	errmsg		1297479						
ANR	1297510	Symbol	v2_raw		1297479						
ANR	1297511	Function	Env :: MergeFromV1RawOrV2Quoted	367:0:9331:9701							
ANR	1297512	FunctionDef	"Env :: MergeFromV1RawOrV2Quoted (const char * delimitedString , MyString * error_msg)"		1297511	0					
ANR	1297513	CompoundStatement		369:0:9418:9701	1297511	0					
ANR	1297514	IfStatement	if ( ! delimitedString )		1297511	0					
ANR	1297515	Condition	! delimitedString	370:4:9424:9439	1297511	0	True				
ANR	1297516	UnaryOperationExpression	! delimitedString		1297511	0					
ANR	1297517	UnaryOperator	!		1297511	0					
ANR	1297518	Identifier	delimitedString		1297511	1					
ANR	1297519	ReturnStatement	return true ;	370:22:9442:9453	1297511	1	True				
ANR	1297520	Identifier	true		1297511	0					
ANR	1297521	IfStatement	if ( IsV2QuotedString ( delimitedString ) )		1297511	1					
ANR	1297522	Condition	IsV2QuotedString ( delimitedString )	371:4:9459:9491	1297511	0	True				
ANR	1297523	CallExpression	IsV2QuotedString ( delimitedString )		1297511	0					
ANR	1297524	Callee	IsV2QuotedString		1297511	0					
ANR	1297525	Identifier	IsV2QuotedString		1297511	0					
ANR	1297526	ArgumentList	delimitedString		1297511	1					
ANR	1297527	Argument	delimitedString		1297511	0					
ANR	1297528	Identifier	delimitedString		1297511	0					
ANR	1297529	CompoundStatement		4:2:79:90	1297511	1					
ANR	1297530	IdentifierDeclStatement	MyString v2 ;	372:2:9498:9509	1297511	0	True				
ANR	1297531	IdentifierDecl	v2		1297511	0					
ANR	1297532	IdentifierDeclType	MyString		1297511	0					
ANR	1297533	Identifier	v2		1297511	1					
ANR	1297534	IfStatement	"if ( ! V2QuotedToV2Raw ( delimitedString , & v2 , error_msg ) )"		1297511	1					
ANR	1297535	Condition	"! V2QuotedToV2Raw ( delimitedString , & v2 , error_msg )"	373:5:9516:9562	1297511	0	True				
ANR	1297536	UnaryOperationExpression	"! V2QuotedToV2Raw ( delimitedString , & v2 , error_msg )"		1297511	0					
ANR	1297537	UnaryOperator	!		1297511	0					
ANR	1297538	CallExpression	"V2QuotedToV2Raw ( delimitedString , & v2 , error_msg )"		1297511	1					
ANR	1297539	Callee	V2QuotedToV2Raw		1297511	0					
ANR	1297540	Identifier	V2QuotedToV2Raw		1297511	0					
ANR	1297541	ArgumentList	delimitedString		1297511	1					
ANR	1297542	Argument	delimitedString		1297511	0					
ANR	1297543	Identifier	delimitedString		1297511	0					
ANR	1297544	Argument	& v2		1297511	1					
ANR	1297545	UnaryOperationExpression	& v2		1297511	0					
ANR	1297546	UnaryOperator	&		1297511	0					
ANR	1297547	Identifier	v2		1297511	1					
ANR	1297548	Argument	error_msg		1297511	2					
ANR	1297549	Identifier	error_msg		1297511	0					
ANR	1297550	CompoundStatement		5:54:146:146	1297511	1					
ANR	1297551	ReturnStatement	return false ;	374:3:9570:9582	1297511	0	True				
ANR	1297552	Identifier	false		1297511	0					
ANR	1297553	ReturnStatement	"return MergeFromV2Raw ( v2 . Value ( ) , error_msg ) ;"	376:2:9590:9633	1297511	2	True				
ANR	1297554	CallExpression	"MergeFromV2Raw ( v2 . Value ( ) , error_msg )"		1297511	0					
ANR	1297555	Callee	MergeFromV2Raw		1297511	0					
ANR	1297556	Identifier	MergeFromV2Raw		1297511	0					
ANR	1297557	ArgumentList	v2 . Value ( )		1297511	1					
ANR	1297558	Argument	v2 . Value ( )		1297511	0					
ANR	1297559	CallExpression	v2 . Value ( )		1297511	0					
ANR	1297560	Callee	v2 . Value		1297511	0					
ANR	1297561	MemberAccess	v2 . Value		1297511	0					
ANR	1297562	Identifier	v2		1297511	0					
ANR	1297563	Identifier	Value		1297511	1					
ANR	1297564	ArgumentList			1297511	1					
ANR	1297565	Argument	error_msg		1297511	1					
ANR	1297566	Identifier	error_msg		1297511	0					
ANR	1297567	ElseStatement	else		1297511	0					
ANR	1297568	CompoundStatement		10:6:225:225	1297511	0					
ANR	1297569	ReturnStatement	"return MergeFromV1Raw ( delimitedString , error_msg ) ;"	379:2:9648:9696	1297511	0	True				
ANR	1297570	CallExpression	"MergeFromV1Raw ( delimitedString , error_msg )"		1297511	0					
ANR	1297571	Callee	MergeFromV1Raw		1297511	0					
ANR	1297572	Identifier	MergeFromV1Raw		1297511	0					
ANR	1297573	ArgumentList	delimitedString		1297511	1					
ANR	1297574	Argument	delimitedString		1297511	0					
ANR	1297575	Identifier	delimitedString		1297511	0					
ANR	1297576	Argument	error_msg		1297511	1					
ANR	1297577	Identifier	error_msg		1297511	0					
ANR	1297578	ReturnType	bool		1297511	1					
ANR	1297579	Identifier	Env :: MergeFromV1RawOrV2Quoted		1297511	2					
ANR	1297580	ParameterList	"const char * delimitedString , MyString * error_msg"		1297511	3					
ANR	1297581	Parameter	const char * delimitedString	368:31:9367:9393	1297511	0	True				
ANR	1297582	ParameterType	const char *		1297511	0					
ANR	1297583	Identifier	delimitedString		1297511	1					
ANR	1297584	Parameter	MyString * error_msg	368:60:9396:9414	1297511	1	True				
ANR	1297585	ParameterType	MyString *		1297511	0					
ANR	1297586	Identifier	error_msg		1297511	1					
ANR	1297587	CFGEntryNode	ENTRY		1297511		True				
ANR	1297588	CFGExitNode	EXIT		1297511		True				
ANR	1297589	Symbol	delimitedString		1297511						
ANR	1297590	Symbol	V2QuotedToV2Raw		1297511						
ANR	1297591	Symbol	error_msg		1297511						
ANR	1297592	Symbol	& v2		1297511						
ANR	1297593	Symbol	true		1297511						
ANR	1297594	Symbol	IsV2QuotedString		1297511						
ANR	1297595	Symbol	false		1297511						
ANR	1297596	Symbol	v2 . Value		1297511						
ANR	1297597	Symbol	v2		1297511						
ANR	1297598	Symbol	MergeFromV2Raw		1297511						
ANR	1297599	Symbol	MergeFromV1Raw		1297511						
ANR	1297600	Function	Env :: MergeFromV2Quoted	383:0:9704:10121							
ANR	1297601	FunctionDef	"Env :: MergeFromV2Quoted (const char * delimitedString , MyString * error_msg)"		1297600	0					
ANR	1297602	CompoundStatement		385:0:9784:10121	1297600	0					
ANR	1297603	IfStatement	if ( ! delimitedString )		1297600	0					
ANR	1297604	Condition	! delimitedString	386:4:9790:9805	1297600	0	True				
ANR	1297605	UnaryOperationExpression	! delimitedString		1297600	0					
ANR	1297606	UnaryOperator	!		1297600	0					
ANR	1297607	Identifier	delimitedString		1297600	1					
ANR	1297608	ReturnStatement	return true ;	386:22:9808:9819	1297600	1	True				
ANR	1297609	Identifier	true		1297600	0					
ANR	1297610	IfStatement	if ( IsV2QuotedString ( delimitedString ) )		1297600	1					
ANR	1297611	Condition	IsV2QuotedString ( delimitedString )	387:4:9825:9857	1297600	0	True				
ANR	1297612	CallExpression	IsV2QuotedString ( delimitedString )		1297600	0					
ANR	1297613	Callee	IsV2QuotedString		1297600	0					
ANR	1297614	Identifier	IsV2QuotedString		1297600	0					
ANR	1297615	ArgumentList	delimitedString		1297600	1					
ANR	1297616	Argument	delimitedString		1297600	0					
ANR	1297617	Identifier	delimitedString		1297600	0					
ANR	1297618	CompoundStatement		4:2:79:90	1297600	1					
ANR	1297619	IdentifierDeclStatement	MyString v2 ;	388:2:9864:9875	1297600	0	True				
ANR	1297620	IdentifierDecl	v2		1297600	0					
ANR	1297621	IdentifierDeclType	MyString		1297600	0					
ANR	1297622	Identifier	v2		1297600	1					
ANR	1297623	IfStatement	"if ( ! V2QuotedToV2Raw ( delimitedString , & v2 , error_msg ) )"		1297600	1					
ANR	1297624	Condition	"! V2QuotedToV2Raw ( delimitedString , & v2 , error_msg )"	389:5:9882:9928	1297600	0	True				
ANR	1297625	UnaryOperationExpression	"! V2QuotedToV2Raw ( delimitedString , & v2 , error_msg )"		1297600	0					
ANR	1297626	UnaryOperator	!		1297600	0					
ANR	1297627	CallExpression	"V2QuotedToV2Raw ( delimitedString , & v2 , error_msg )"		1297600	1					
ANR	1297628	Callee	V2QuotedToV2Raw		1297600	0					
ANR	1297629	Identifier	V2QuotedToV2Raw		1297600	0					
ANR	1297630	ArgumentList	delimitedString		1297600	1					
ANR	1297631	Argument	delimitedString		1297600	0					
ANR	1297632	Identifier	delimitedString		1297600	0					
ANR	1297633	Argument	& v2		1297600	1					
ANR	1297634	UnaryOperationExpression	& v2		1297600	0					
ANR	1297635	UnaryOperator	&		1297600	0					
ANR	1297636	Identifier	v2		1297600	1					
ANR	1297637	Argument	error_msg		1297600	2					
ANR	1297638	Identifier	error_msg		1297600	0					
ANR	1297639	CompoundStatement		5:54:146:146	1297600	1					
ANR	1297640	ReturnStatement	return false ;	390:3:9936:9948	1297600	0	True				
ANR	1297641	Identifier	false		1297600	0					
ANR	1297642	ReturnStatement	"return MergeFromV2Raw ( v2 . Value ( ) , error_msg ) ;"	392:2:9956:9999	1297600	2	True				
ANR	1297643	CallExpression	"MergeFromV2Raw ( v2 . Value ( ) , error_msg )"		1297600	0					
ANR	1297644	Callee	MergeFromV2Raw		1297600	0					
ANR	1297645	Identifier	MergeFromV2Raw		1297600	0					
ANR	1297646	ArgumentList	v2 . Value ( )		1297600	1					
ANR	1297647	Argument	v2 . Value ( )		1297600	0					
ANR	1297648	CallExpression	v2 . Value ( )		1297600	0					
ANR	1297649	Callee	v2 . Value		1297600	0					
ANR	1297650	MemberAccess	v2 . Value		1297600	0					
ANR	1297651	Identifier	v2		1297600	0					
ANR	1297652	Identifier	Value		1297600	1					
ANR	1297653	ArgumentList			1297600	1					
ANR	1297654	Argument	error_msg		1297600	1					
ANR	1297655	Identifier	error_msg		1297600	0					
ANR	1297656	ElseStatement	else		1297600	0					
ANR	1297657	CompoundStatement		10:6:225:225	1297600	0					
ANR	1297658	ExpressionStatement	"AddErrorMessage ( ""Expecting a double-quoted environment string (V2 format)."" , error_msg )"	395:2:10014:10100	1297600	0	True				
ANR	1297659	CallExpression	"AddErrorMessage ( ""Expecting a double-quoted environment string (V2 format)."" , error_msg )"		1297600	0					
ANR	1297660	Callee	AddErrorMessage		1297600	0					
ANR	1297661	Identifier	AddErrorMessage		1297600	0					
ANR	1297662	ArgumentList	"""Expecting a double-quoted environment string (V2 format)."""		1297600	1					
ANR	1297663	Argument	"""Expecting a double-quoted environment string (V2 format)."""		1297600	0					
ANR	1297664	PrimaryExpression	"""Expecting a double-quoted environment string (V2 format)."""		1297600	0					
ANR	1297665	Argument	error_msg		1297600	1					
ANR	1297666	Identifier	error_msg		1297600	0					
ANR	1297667	ReturnStatement	return false ;	396:2:10104:10116	1297600	1	True				
ANR	1297668	Identifier	false		1297600	0					
ANR	1297669	ReturnType	bool		1297600	1					
ANR	1297670	Identifier	Env :: MergeFromV2Quoted		1297600	2					
ANR	1297671	ParameterList	"const char * delimitedString , MyString * error_msg"		1297600	3					
ANR	1297672	Parameter	const char * delimitedString	384:24:9733:9759	1297600	0	True				
ANR	1297673	ParameterType	const char *		1297600	0					
ANR	1297674	Identifier	delimitedString		1297600	1					
ANR	1297675	Parameter	MyString * error_msg	384:53:9762:9780	1297600	1	True				
ANR	1297676	ParameterType	MyString *		1297600	0					
ANR	1297677	Identifier	error_msg		1297600	1					
ANR	1297678	CFGEntryNode	ENTRY		1297600		True				
ANR	1297679	CFGExitNode	EXIT		1297600		True				
ANR	1297680	Symbol	delimitedString		1297600						
ANR	1297681	Symbol	V2QuotedToV2Raw		1297600						
ANR	1297682	Symbol	error_msg		1297600						
ANR	1297683	Symbol	& v2		1297600						
ANR	1297684	Symbol	true		1297600						
ANR	1297685	Symbol	IsV2QuotedString		1297600						
ANR	1297686	Symbol	false		1297600						
ANR	1297687	Symbol	v2 . Value		1297600						
ANR	1297688	Symbol	v2		1297600						
ANR	1297689	Symbol	MergeFromV2Raw		1297600						
ANR	1297690	Function	Env :: MergeFromV2Raw	400:0:10124:10543							
ANR	1297691	FunctionDef	"Env :: MergeFromV2Raw (const char * delimitedString , MyString * error_msg)"		1297690	0					
ANR	1297692	CompoundStatement		402:0:10201:10543	1297690	0					
ANR	1297693	IdentifierDeclStatement	SimpleList < MyString > env_list ;	403:1:10204:10233	1297690	0	True				
ANR	1297694	IdentifierDecl	env_list		1297690	0					
ANR	1297695	IdentifierDeclType	SimpleList < MyString >		1297690	0					
ANR	1297696	Identifier	env_list		1297690	1					
ANR	1297697	IfStatement	if ( ! delimitedString )		1297690	1					
ANR	1297698	Condition	! delimitedString	405:4:10240:10255	1297690	0	True				
ANR	1297699	UnaryOperationExpression	! delimitedString		1297690	0					
ANR	1297700	UnaryOperator	!		1297690	0					
ANR	1297701	Identifier	delimitedString		1297690	1					
ANR	1297702	ReturnStatement	return true ;	405:22:10258:10269	1297690	1	True				
ANR	1297703	Identifier	true		1297690	0					
ANR	1297704	IfStatement	"if ( ! split_args ( delimitedString , & env_list , error_msg ) )"		1297690	2					
ANR	1297705	Condition	"! split_args ( delimitedString , & env_list , error_msg )"	407:4:10276:10323	1297690	0	True				
ANR	1297706	UnaryOperationExpression	"! split_args ( delimitedString , & env_list , error_msg )"		1297690	0					
ANR	1297707	UnaryOperator	!		1297690	0					
ANR	1297708	CallExpression	"split_args ( delimitedString , & env_list , error_msg )"		1297690	1					
ANR	1297709	Callee	split_args		1297690	0					
ANR	1297710	Identifier	split_args		1297690	0					
ANR	1297711	ArgumentList	delimitedString		1297690	1					
ANR	1297712	Argument	delimitedString		1297690	0					
ANR	1297713	Identifier	delimitedString		1297690	0					
ANR	1297714	Argument	& env_list		1297690	1					
ANR	1297715	UnaryOperationExpression	& env_list		1297690	0					
ANR	1297716	UnaryOperator	&		1297690	0					
ANR	1297717	Identifier	env_list		1297690	1					
ANR	1297718	Argument	error_msg		1297690	2					
ANR	1297719	Identifier	error_msg		1297690	0					
ANR	1297720	CompoundStatement		6:54:124:124	1297690	1					
ANR	1297721	ReturnStatement	return false ;	408:2:10330:10342	1297690	0	True				
ANR	1297722	Identifier	false		1297690	0					
ANR	1297723	IdentifierDeclStatement	SimpleListIterator < MyString > it ( env_list ) ;	411:1:10349:10390	1297690	3	True				
ANR	1297724	IdentifierDecl	it ( env_list )		1297690	0					
ANR	1297725	IdentifierDeclType	SimpleListIterator < MyString >		1297690	0					
ANR	1297726	Identifier	it		1297690	1					
ANR	1297727	Identifier	env_list		1297690	2					
ANR	1297728	IdentifierDeclStatement	MyString * env_entry ;	412:1:10393:10412	1297690	4	True				
ANR	1297729	IdentifierDecl	* env_entry		1297690	0					
ANR	1297730	IdentifierDeclType	MyString *		1297690	0					
ANR	1297731	Identifier	env_entry		1297690	1					
ANR	1297732	WhileStatement	while ( it . Next ( env_entry ) )		1297690	5					
ANR	1297733	Condition	it . Next ( env_entry )	413:7:10421:10438	1297690	0	True				
ANR	1297734	CallExpression	it . Next ( env_entry )		1297690	0					
ANR	1297735	Callee	it . Next		1297690	0					
ANR	1297736	MemberAccess	it . Next		1297690	0					
ANR	1297737	Identifier	it		1297690	0					
ANR	1297738	Identifier	Next		1297690	1					
ANR	1297739	ArgumentList	env_entry		1297690	1					
ANR	1297740	Argument	env_entry		1297690	0					
ANR	1297741	Identifier	env_entry		1297690	0					
ANR	1297742	CompoundStatement		12:27:239:239	1297690	1					
ANR	1297743	IfStatement	"if ( ! SetEnvWithErrorMessage ( env_entry -> Value ( ) , error_msg ) )"		1297690	0					
ANR	1297744	Condition	"! SetEnvWithErrorMessage ( env_entry -> Value ( ) , error_msg )"	414:5:10448:10500	1297690	0	True				
ANR	1297745	UnaryOperationExpression	"! SetEnvWithErrorMessage ( env_entry -> Value ( ) , error_msg )"		1297690	0					
ANR	1297746	UnaryOperator	!		1297690	0					
ANR	1297747	CallExpression	"SetEnvWithErrorMessage ( env_entry -> Value ( ) , error_msg )"		1297690	1					
ANR	1297748	Callee	SetEnvWithErrorMessage		1297690	0					
ANR	1297749	Identifier	SetEnvWithErrorMessage		1297690	0					
ANR	1297750	ArgumentList	env_entry -> Value ( )		1297690	1					
ANR	1297751	Argument	env_entry -> Value ( )		1297690	0					
ANR	1297752	CallExpression	env_entry -> Value ( )		1297690	0					
ANR	1297753	Callee	env_entry -> Value		1297690	0					
ANR	1297754	PtrMemberAccess	env_entry -> Value		1297690	0					
ANR	1297755	Identifier	env_entry		1297690	0					
ANR	1297756	Identifier	Value		1297690	1					
ANR	1297757	ArgumentList			1297690	1					
ANR	1297758	Argument	error_msg		1297690	1					
ANR	1297759	Identifier	error_msg		1297690	0					
ANR	1297760	CompoundStatement		13:60:301:301	1297690	1					
ANR	1297761	ReturnStatement	return false ;	415:3:10508:10520	1297690	0	True				
ANR	1297762	Identifier	false		1297690	0					
ANR	1297763	ReturnStatement	return true ;	418:1:10530:10541	1297690	6	True				
ANR	1297764	Identifier	true		1297690	0					
ANR	1297765	ReturnType	bool		1297690	1					
ANR	1297766	Identifier	Env :: MergeFromV2Raw		1297690	2					
ANR	1297767	ParameterList	"const char * delimitedString , MyString * error_msg"		1297690	3					
ANR	1297768	Parameter	const char * delimitedString	401:21:10150:10176	1297690	0	True				
ANR	1297769	ParameterType	const char *		1297690	0					
ANR	1297770	Identifier	delimitedString		1297690	1					
ANR	1297771	Parameter	MyString * error_msg	401:50:10179:10197	1297690	1	True				
ANR	1297772	ParameterType	MyString *		1297690	0					
ANR	1297773	Identifier	error_msg		1297690	1					
ANR	1297774	CFGEntryNode	ENTRY		1297690		True				
ANR	1297775	CFGExitNode	EXIT		1297690		True				
ANR	1297776	Symbol	error_msg		1297690						
ANR	1297777	Symbol	& env_list		1297690						
ANR	1297778	Symbol	false		1297690						
ANR	1297779	Symbol	it		1297690						
ANR	1297780	Symbol	SetEnvWithErrorMessage		1297690						
ANR	1297781	Symbol	delimitedString		1297690						
ANR	1297782	Symbol	it . Next		1297690						
ANR	1297783	Symbol	split_args		1297690						
ANR	1297784	Symbol	true		1297690						
ANR	1297785	Symbol	* env_entry		1297690						
ANR	1297786	Symbol	env_entry -> Value		1297690						
ANR	1297787	Symbol	env_list		1297690						
ANR	1297788	Symbol	env_entry		1297690						
ANR	1297789	Function	Env :: MergeFromV1Raw	421:0:10546:11269							
ANR	1297790	FunctionDef	"Env :: MergeFromV1Raw (const char * delimitedString , MyString * error_msg)"		1297789	0					
ANR	1297791	CompoundStatement		423:0:10623:11269	1297789	0					
ANR	1297792	IdentifierDeclStatement	char const * input ;	424:1:10626:10643	1297789	0	True				
ANR	1297793	IdentifierDecl	* input		1297789	0					
ANR	1297794	IdentifierDeclType	char const *		1297789	0					
ANR	1297795	Identifier	input		1297789	1					
ANR	1297796	IdentifierDeclStatement	char * output ;	425:1:10646:10658	1297789	1	True				
ANR	1297797	IdentifierDecl	* output		1297789	0					
ANR	1297798	IdentifierDeclType	char *		1297789	0					
ANR	1297799	Identifier	output		1297789	1					
ANR	1297800	IdentifierDeclStatement	int outputlen ;	426:1:10661:10674	1297789	2	True				
ANR	1297801	IdentifierDecl	outputlen		1297789	0					
ANR	1297802	IdentifierDeclType	int		1297789	0					
ANR	1297803	Identifier	outputlen		1297789	1					
ANR	1297804	IdentifierDeclStatement	bool retval = true ;	427:1:10677:10695	1297789	3	True				
ANR	1297805	IdentifierDecl	retval = true		1297789	0					
ANR	1297806	IdentifierDeclType	bool		1297789	0					
ANR	1297807	Identifier	retval		1297789	1					
ANR	1297808	AssignmentExpression	retval = true		1297789	2		=			
ANR	1297809	Identifier	true		1297789	0					
ANR	1297810	Identifier	true		1297789	1					
ANR	1297811	ExpressionStatement	input_was_v1 = true	429:1:10699:10718	1297789	4	True				
ANR	1297812	AssignmentExpression	input_was_v1 = true		1297789	0		=			
ANR	1297813	Identifier	input_was_v1		1297789	0					
ANR	1297814	Identifier	true		1297789	1					
ANR	1297815	IfStatement	if ( ! delimitedString )		1297789	5					
ANR	1297816	Condition	! delimitedString	430:4:10724:10739	1297789	0	True				
ANR	1297817	UnaryOperationExpression	! delimitedString		1297789	0					
ANR	1297818	UnaryOperator	!		1297789	0					
ANR	1297819	Identifier	delimitedString		1297789	1					
ANR	1297820	ReturnStatement	return true ;	430:22:10742:10753	1297789	1	True				
ANR	1297821	Identifier	true		1297789	0					
ANR	1297822	ExpressionStatement	outputlen = strlen ( delimitedString ) + 1	433:1:10834:10871	1297789	6	True				
ANR	1297823	AssignmentExpression	outputlen = strlen ( delimitedString ) + 1		1297789	0		=			
ANR	1297824	Identifier	outputlen		1297789	0					
ANR	1297825	AdditiveExpression	strlen ( delimitedString ) + 1		1297789	1		+			
ANR	1297826	CallExpression	strlen ( delimitedString )		1297789	0					
ANR	1297827	Callee	strlen		1297789	0					
ANR	1297828	Identifier	strlen		1297789	0					
ANR	1297829	ArgumentList	delimitedString		1297789	1					
ANR	1297830	Argument	delimitedString		1297789	0					
ANR	1297831	Identifier	delimitedString		1297789	0					
ANR	1297832	PrimaryExpression	1		1297789	1					
ANR	1297833	ExpressionStatement	output = new char [ outputlen ]	434:1:10874:10902	1297789	7	True				
ANR	1297834	AssignmentExpression	output = new char [ outputlen ]		1297789	0		=			
ANR	1297835	Identifier	output		1297789	0					
ANR	1297836	Identifier	outputlen		1297789	1					
ANR	1297837	ExpressionStatement	ASSERT ( output )	435:1:10905:10919	1297789	8	True				
ANR	1297838	CallExpression	ASSERT ( output )		1297789	0					
ANR	1297839	Callee	ASSERT		1297789	0					
ANR	1297840	Identifier	ASSERT		1297789	0					
ANR	1297841	ArgumentList	output		1297789	1					
ANR	1297842	Argument	output		1297789	0					
ANR	1297843	Identifier	output		1297789	0					
ANR	1297844	ExpressionStatement	input = delimitedString	437:1:10923:10946	1297789	9	True				
ANR	1297845	AssignmentExpression	input = delimitedString		1297789	0		=			
ANR	1297846	Identifier	input		1297789	0					
ANR	1297847	Identifier	delimitedString		1297789	1					
ANR	1297848	WhileStatement	while ( * input )		1297789	10					
ANR	1297849	Condition	* input	438:8:10956:10961	1297789	0	True				
ANR	1297850	UnaryOperationExpression	* input		1297789	0					
ANR	1297851	UnaryOperator	*		1297789	0					
ANR	1297852	Identifier	input		1297789	1					
ANR	1297853	CompoundStatement		16:17:341:341	1297789	1					
ANR	1297854	ExpressionStatement	"retval = ReadFromDelimitedString ( input , output )"	439:2:10969:11015	1297789	0	True				
ANR	1297855	AssignmentExpression	"retval = ReadFromDelimitedString ( input , output )"		1297789	0		=			
ANR	1297856	Identifier	retval		1297789	0					
ANR	1297857	CallExpression	"ReadFromDelimitedString ( input , output )"		1297789	1					
ANR	1297858	Callee	ReadFromDelimitedString		1297789	0					
ANR	1297859	Identifier	ReadFromDelimitedString		1297789	0					
ANR	1297860	ArgumentList	input		1297789	1					
ANR	1297861	Argument	input		1297789	0					
ANR	1297862	Identifier	input		1297789	0					
ANR	1297863	Argument	output		1297789	1					
ANR	1297864	Identifier	output		1297789	0					
ANR	1297865	IfStatement	if ( ! retval )		1297789	1					
ANR	1297866	Condition	! retval	441:5:11023:11029	1297789	0	True				
ANR	1297867	UnaryOperationExpression	! retval		1297789	0					
ANR	1297868	UnaryOperator	!		1297789	0					
ANR	1297869	Identifier	retval		1297789	1					
ANR	1297870	CompoundStatement		19:14:408:408	1297789	1					
ANR	1297871	BreakStatement	break ;	442:3:11037:11042	1297789	0	True				
ANR	1297872	IfStatement	if ( * output )		1297789	2					
ANR	1297873	Condition	* output	445:5:11091:11097	1297789	0	True				
ANR	1297874	UnaryOperationExpression	* output		1297789	0					
ANR	1297875	UnaryOperator	*		1297789	0					
ANR	1297876	Identifier	output		1297789	1					
ANR	1297877	CompoundStatement		23:14:476:476	1297789	1					
ANR	1297878	ExpressionStatement	"retval = SetEnvWithErrorMessage ( output , error_msg )"	446:3:11105:11154	1297789	0	True				
ANR	1297879	AssignmentExpression	"retval = SetEnvWithErrorMessage ( output , error_msg )"		1297789	0		=			
ANR	1297880	Identifier	retval		1297789	0					
ANR	1297881	CallExpression	"SetEnvWithErrorMessage ( output , error_msg )"		1297789	1					
ANR	1297882	Callee	SetEnvWithErrorMessage		1297789	0					
ANR	1297883	Identifier	SetEnvWithErrorMessage		1297789	0					
ANR	1297884	ArgumentList	output		1297789	1					
ANR	1297885	Argument	output		1297789	0					
ANR	1297886	Identifier	output		1297789	0					
ANR	1297887	Argument	error_msg		1297789	1					
ANR	1297888	Identifier	error_msg		1297789	0					
ANR	1297889	IfStatement	if ( ! retval )		1297789	1					
ANR	1297890	Condition	! retval	447:6:11162:11168	1297789	0	True				
ANR	1297891	UnaryOperationExpression	! retval		1297789	0					
ANR	1297892	UnaryOperator	!		1297789	0					
ANR	1297893	Identifier	retval		1297789	1					
ANR	1297894	CompoundStatement		25:15:547:547	1297789	1					
ANR	1297895	BreakStatement	break ;	448:4:11177:11182	1297789	0	True				
ANR	1297896	Statement	delete	452:1:11236:11241	1297789	11	True				
ANR	1297897	Statement	[	452:7:11242:11242	1297789	12	True				
ANR	1297898	Statement	]	452:8:11243:11243	1297789	13	True				
ANR	1297899	ExpressionStatement	output	452:10:11245:11251	1297789	14	True				
ANR	1297900	Identifier	output		1297789	0					
ANR	1297901	ReturnStatement	return retval ;	453:1:11254:11267	1297789	15	True				
ANR	1297902	Identifier	retval		1297789	0					
ANR	1297903	ReturnType	bool		1297789	1					
ANR	1297904	Identifier	Env :: MergeFromV1Raw		1297789	2					
ANR	1297905	ParameterList	"const char * delimitedString , MyString * error_msg"		1297789	3					
ANR	1297906	Parameter	const char * delimitedString	422:21:10572:10598	1297789	0	True				
ANR	1297907	ParameterType	const char *		1297789	0					
ANR	1297908	Identifier	delimitedString		1297789	1					
ANR	1297909	Parameter	MyString * error_msg	422:50:10601:10619	1297789	1	True				
ANR	1297910	ParameterType	MyString *		1297789	0					
ANR	1297911	Identifier	error_msg		1297789	1					
ANR	1297912	CFGEntryNode	ENTRY		1297789		True				
ANR	1297913	CFGExitNode	EXIT		1297789		True				
ANR	1297914	Symbol	error_msg		1297789						
ANR	1297915	Symbol	* input		1297789						
ANR	1297916	Symbol	retval		1297789						
ANR	1297917	Symbol	SetEnvWithErrorMessage		1297789						
ANR	1297918	Symbol	output		1297789						
ANR	1297919	Symbol	delimitedString		1297789						
ANR	1297920	Symbol	input		1297789						
ANR	1297921	Symbol	strlen		1297789						
ANR	1297922	Symbol	true		1297789						
ANR	1297923	Symbol	input_was_v1		1297789						
ANR	1297924	Symbol	outputlen		1297789						
ANR	1297925	Symbol	ReadFromDelimitedString		1297789						
ANR	1297926	Symbol	* output		1297789						
ANR	1297927	DeclStmt									
ANR	1297928	Decl							const char	const char	RAW_V2_ENV_MARKER
ANR	1297929	Function	Env :: MergeFromV1or2Raw	462:0:11556:11836							
ANR	1297930	FunctionDef	"Env :: MergeFromV1or2Raw (const char * delimitedString , MyString * error_msg)"		1297929	0					
ANR	1297931	CompoundStatement		464:0:11636:11836	1297929	0					
ANR	1297932	IfStatement	if ( ! delimitedString )		1297929	0					
ANR	1297933	Condition	! delimitedString	465:4:11642:11657	1297929	0	True				
ANR	1297934	UnaryOperationExpression	! delimitedString		1297929	0					
ANR	1297935	UnaryOperator	!		1297929	0					
ANR	1297936	Identifier	delimitedString		1297929	1					
ANR	1297937	ReturnStatement	return true ;	465:22:11660:11671	1297929	1	True				
ANR	1297938	Identifier	true		1297929	0					
ANR	1297939	IfStatement	if ( * delimitedString == RAW_V2_ENV_MARKER )		1297929	1					
ANR	1297940	Condition	* delimitedString == RAW_V2_ENV_MARKER	466:4:11677:11713	1297929	0	True				
ANR	1297941	EqualityExpression	* delimitedString == RAW_V2_ENV_MARKER		1297929	0		==			
ANR	1297942	UnaryOperationExpression	* delimitedString		1297929	0					
ANR	1297943	UnaryOperator	*		1297929	0					
ANR	1297944	Identifier	delimitedString		1297929	1					
ANR	1297945	Identifier	RAW_V2_ENV_MARKER		1297929	1					
ANR	1297946	CompoundStatement		3:43:79:79	1297929	1					
ANR	1297947	ReturnStatement	"return MergeFromV2Raw ( delimitedString , error_msg ) ;"	467:2:11720:11768	1297929	0	True				
ANR	1297948	CallExpression	"MergeFromV2Raw ( delimitedString , error_msg )"		1297929	0					
ANR	1297949	Callee	MergeFromV2Raw		1297929	0					
ANR	1297950	Identifier	MergeFromV2Raw		1297929	0					
ANR	1297951	ArgumentList	delimitedString		1297929	1					
ANR	1297952	Argument	delimitedString		1297929	0					
ANR	1297953	Identifier	delimitedString		1297929	0					
ANR	1297954	Argument	error_msg		1297929	1					
ANR	1297955	Identifier	error_msg		1297929	0					
ANR	1297956	ElseStatement	else		1297929	0					
ANR	1297957	CompoundStatement		6:6:142:142	1297929	0					
ANR	1297958	ReturnStatement	"return MergeFromV1Raw ( delimitedString , error_msg ) ;"	470:2:11783:11831	1297929	0	True				
ANR	1297959	CallExpression	"MergeFromV1Raw ( delimitedString , error_msg )"		1297929	0					
ANR	1297960	Callee	MergeFromV1Raw		1297929	0					
ANR	1297961	Identifier	MergeFromV1Raw		1297929	0					
ANR	1297962	ArgumentList	delimitedString		1297929	1					
ANR	1297963	Argument	delimitedString		1297929	0					
ANR	1297964	Identifier	delimitedString		1297929	0					
ANR	1297965	Argument	error_msg		1297929	1					
ANR	1297966	Identifier	error_msg		1297929	0					
ANR	1297967	ReturnType	bool		1297929	1					
ANR	1297968	Identifier	Env :: MergeFromV1or2Raw		1297929	2					
ANR	1297969	ParameterList	"const char * delimitedString , MyString * error_msg"		1297929	3					
ANR	1297970	Parameter	const char * delimitedString	463:24:11585:11611	1297929	0	True				
ANR	1297971	ParameterType	const char *		1297929	0					
ANR	1297972	Identifier	delimitedString		1297929	1					
ANR	1297973	Parameter	MyString * error_msg	463:53:11614:11632	1297929	1	True				
ANR	1297974	ParameterType	MyString *		1297929	0					
ANR	1297975	Identifier	error_msg		1297929	1					
ANR	1297976	CFGEntryNode	ENTRY		1297929		True				
ANR	1297977	CFGExitNode	EXIT		1297929		True				
ANR	1297978	Symbol	delimitedString		1297929						
ANR	1297979	Symbol	* delimitedString		1297929						
ANR	1297980	Symbol	error_msg		1297929						
ANR	1297981	Symbol	true		1297929						
ANR	1297982	Symbol	RAW_V2_ENV_MARKER		1297929						
ANR	1297983	Symbol	MergeFromV2Raw		1297929						
ANR	1297984	Symbol	MergeFromV1Raw		1297929						
ANR	1297985	DeclStmt									
ANR	1297986	Decl							char const	char const *	NO_ENVIRONMENT_VALUE
ANR	1297987	Function	Env :: SetEnvWithErrorMessage	479:0:12066:13213							
ANR	1297988	FunctionDef	"Env :: SetEnvWithErrorMessage (const char * nameValueExpr , MyString * error_msg)"		1297987	0					
ANR	1297989	CompoundStatement		481:0:12149:13213	1297987	0					
ANR	1297990	IdentifierDeclStatement	"char * expr , * delim ;"	482:1:12152:12170	1297987	0	True				
ANR	1297991	IdentifierDecl	* expr		1297987	0					
ANR	1297992	IdentifierDeclType	char *		1297987	0					
ANR	1297993	Identifier	expr		1297987	1					
ANR	1297994	IdentifierDecl	* delim		1297987	1					
ANR	1297995	IdentifierDeclType	char *		1297987	0					
ANR	1297996	Identifier	delim		1297987	1					
ANR	1297997	IdentifierDeclStatement	int retval ;	483:1:12173:12183	1297987	1	True				
ANR	1297998	IdentifierDecl	retval		1297987	0					
ANR	1297999	IdentifierDeclType	int		1297987	0					
ANR	1298000	Identifier	retval		1297987	1					
ANR	1298001	IfStatement	if ( nameValueExpr == NULL || nameValueExpr [ 0 ] == '\\0' )		1297987	2					
ANR	1298002	Condition	nameValueExpr == NULL || nameValueExpr [ 0 ] == '\\0'	485:5:12191:12239	1297987	0	True				
ANR	1298003	OrExpression	nameValueExpr == NULL || nameValueExpr [ 0 ] == '\\0'		1297987	0		||			
ANR	1298004	EqualityExpression	nameValueExpr == NULL		1297987	0		==			
ANR	1298005	Identifier	nameValueExpr		1297987	0					
ANR	1298006	Identifier	NULL		1297987	1					
ANR	1298007	EqualityExpression	nameValueExpr [ 0 ] == '\\0'		1297987	1		==			
ANR	1298008	ArrayIndexing	nameValueExpr [ 0 ]		1297987	0					
ANR	1298009	Identifier	nameValueExpr		1297987	0					
ANR	1298010	PrimaryExpression	0		1297987	1					
ANR	1298011	PrimaryExpression	'\\0'		1297987	1					
ANR	1298012	CompoundStatement		5:57:93:93	1297987	1					
ANR	1298013	ReturnStatement	return false ;	486:2:12247:12259	1297987	0	True				
ANR	1298014	Identifier	false		1297987	0					
ANR	1298015	ExpressionStatement	expr = strnewp ( nameValueExpr )	490:1:12313:12344	1297987	3	True				
ANR	1298016	AssignmentExpression	expr = strnewp ( nameValueExpr )		1297987	0		=			
ANR	1298017	Identifier	expr		1297987	0					
ANR	1298018	CallExpression	strnewp ( nameValueExpr )		1297987	1					
ANR	1298019	Callee	strnewp		1297987	0					
ANR	1298020	Identifier	strnewp		1297987	0					
ANR	1298021	ArgumentList	nameValueExpr		1297987	1					
ANR	1298022	Argument	nameValueExpr		1297987	0					
ANR	1298023	Identifier	nameValueExpr		1297987	0					
ANR	1298024	ExpressionStatement	ASSERT ( expr )	491:1:12347:12361	1297987	4	True				
ANR	1298025	CallExpression	ASSERT ( expr )		1297987	0					
ANR	1298026	Callee	ASSERT		1297987	0					
ANR	1298027	Identifier	ASSERT		1297987	0					
ANR	1298028	ArgumentList	expr		1297987	1					
ANR	1298029	Argument	expr		1297987	0					
ANR	1298030	Identifier	expr		1297987	0					
ANR	1298031	ExpressionStatement	"delim = strchr ( expr , '=' )"	494:1:12388:12415	1297987	5	True				
ANR	1298032	AssignmentExpression	"delim = strchr ( expr , '=' )"		1297987	0		=			
ANR	1298033	Identifier	delim		1297987	0					
ANR	1298034	CallExpression	"strchr ( expr , '=' )"		1297987	1					
ANR	1298035	Callee	strchr		1297987	0					
ANR	1298036	Identifier	strchr		1297987	0					
ANR	1298037	ArgumentList	expr		1297987	1					
ANR	1298038	Argument	expr		1297987	0					
ANR	1298039	Identifier	expr		1297987	0					
ANR	1298040	Argument	'='		1297987	1					
ANR	1298041	PrimaryExpression	'='		1297987	0					
ANR	1298042	IfStatement	"if ( delim == NULL && strstr ( expr , ""$$"" ) )"		1297987	6					
ANR	1298043	Condition	"delim == NULL && strstr ( expr , ""$$"" )"	496:4:12422:12455	1297987	0	True				
ANR	1298044	AndExpression	"delim == NULL && strstr ( expr , ""$$"" )"		1297987	0		&&			
ANR	1298045	EqualityExpression	delim == NULL		1297987	0		==			
ANR	1298046	Identifier	delim		1297987	0					
ANR	1298047	Identifier	NULL		1297987	1					
ANR	1298048	CallExpression	"strstr ( expr , ""$$"" )"		1297987	1					
ANR	1298049	Callee	strstr		1297987	0					
ANR	1298050	Identifier	strstr		1297987	0					
ANR	1298051	ArgumentList	expr		1297987	1					
ANR	1298052	Argument	expr		1297987	0					
ANR	1298053	Identifier	expr		1297987	0					
ANR	1298054	Argument	"""$$"""		1297987	1					
ANR	1298055	PrimaryExpression	"""$$"""		1297987	0					
ANR	1298056	CompoundStatement		16:40:308:308	1297987	1					
ANR	1298057	ExpressionStatement	"SetEnv ( expr , NO_ENVIRONMENT_VALUE )"	499:2:12577:12610	1297987	0	True				
ANR	1298058	CallExpression	"SetEnv ( expr , NO_ENVIRONMENT_VALUE )"		1297987	0					
ANR	1298059	Callee	SetEnv		1297987	0					
ANR	1298060	Identifier	SetEnv		1297987	0					
ANR	1298061	ArgumentList	expr		1297987	1					
ANR	1298062	Argument	expr		1297987	0					
ANR	1298063	Identifier	expr		1297987	0					
ANR	1298064	Argument	NO_ENVIRONMENT_VALUE		1297987	1					
ANR	1298065	Identifier	NO_ENVIRONMENT_VALUE		1297987	0					
ANR	1298066	Statement	delete	500:2:12614:12619	1297987	1	True				
ANR	1298067	Statement	[	500:8:12620:12620	1297987	2	True				
ANR	1298068	Statement	]	500:9:12621:12621	1297987	3	True				
ANR	1298069	ExpressionStatement	expr	500:11:12623:12627	1297987	4	True				
ANR	1298070	Identifier	expr		1297987	0					
ANR	1298071	ReturnStatement	return true ;	501:2:12631:12642	1297987	5	True				
ANR	1298072	Identifier	true		1297987	0					
ANR	1298073	IfStatement	if ( expr == delim || delim == NULL )		1297987	7					
ANR	1298074	Condition	expr == delim || delim == NULL	505:5:12697:12726	1297987	0	True				
ANR	1298075	OrExpression	expr == delim || delim == NULL		1297987	0		||			
ANR	1298076	EqualityExpression	expr == delim		1297987	0		==			
ANR	1298077	Identifier	expr		1297987	0					
ANR	1298078	Identifier	delim		1297987	1					
ANR	1298079	EqualityExpression	delim == NULL		1297987	1		==			
ANR	1298080	Identifier	delim		1297987	0					
ANR	1298081	Identifier	NULL		1297987	1					
ANR	1298082	CompoundStatement		25:38:580:580	1297987	1					
ANR	1298083	IfStatement	if ( error_msg )		1297987	0					
ANR	1298084	Condition	error_msg	506:5:12737:12745	1297987	0	True				
ANR	1298085	Identifier	error_msg		1297987	0					
ANR	1298086	CompoundStatement		27:3:603:615	1297987	1					
ANR	1298087	IdentifierDeclStatement	MyString msg ;	507:3:12753:12765	1297987	0	True				
ANR	1298088	IdentifierDecl	msg		1297987	0					
ANR	1298089	IdentifierDeclType	MyString		1297987	0					
ANR	1298090	Identifier	msg		1297987	1					
ANR	1298091	IfStatement	if ( delim == NULL )		1297987	1					
ANR	1298092	Condition	delim == NULL	508:6:12773:12785	1297987	0	True				
ANR	1298093	EqualityExpression	delim == NULL		1297987	0		==			
ANR	1298094	Identifier	delim		1297987	0					
ANR	1298095	Identifier	NULL		1297987	1					
ANR	1298096	CompoundStatement		28:21:638:638	1297987	1					
ANR	1298097	ExpressionStatement	"msg . sprintf ( ""ERROR: Missing '=' after environment variable '%s'."" , nameValueExpr )"	509:4:12794:12888	1297987	0	True				
ANR	1298098	CallExpression	"msg . sprintf ( ""ERROR: Missing '=' after environment variable '%s'."" , nameValueExpr )"		1297987	0					
ANR	1298099	Callee	msg . sprintf		1297987	0					
ANR	1298100	MemberAccess	msg . sprintf		1297987	0					
ANR	1298101	Identifier	msg		1297987	0					
ANR	1298102	Identifier	sprintf		1297987	1					
ANR	1298103	ArgumentList	"""ERROR: Missing '=' after environment variable '%s'."""		1297987	1					
ANR	1298104	Argument	"""ERROR: Missing '=' after environment variable '%s'."""		1297987	0					
ANR	1298105	PrimaryExpression	"""ERROR: Missing '=' after environment variable '%s'."""		1297987	0					
ANR	1298106	Argument	nameValueExpr		1297987	1					
ANR	1298107	Identifier	nameValueExpr		1297987	0					
ANR	1298108	ElseStatement	else		1297987	0					
ANR	1298109	CompoundStatement		33:8:753:753	1297987	0					
ANR	1298110	ExpressionStatement	"msg . sprintf ( ""ERROR: missing variable in '%s'."" , expr )"	514:4:12909:12961	1297987	0	True				
ANR	1298111	CallExpression	"msg . sprintf ( ""ERROR: missing variable in '%s'."" , expr )"		1297987	0					
ANR	1298112	Callee	msg . sprintf		1297987	0					
ANR	1298113	MemberAccess	msg . sprintf		1297987	0					
ANR	1298114	Identifier	msg		1297987	0					
ANR	1298115	Identifier	sprintf		1297987	1					
ANR	1298116	ArgumentList	"""ERROR: missing variable in '%s'."""		1297987	1					
ANR	1298117	Argument	"""ERROR: missing variable in '%s'."""		1297987	0					
ANR	1298118	PrimaryExpression	"""ERROR: missing variable in '%s'."""		1297987	0					
ANR	1298119	Argument	expr		1297987	1					
ANR	1298120	Identifier	expr		1297987	0					
ANR	1298121	ExpressionStatement	"AddErrorMessage ( msg . Value ( ) , error_msg )"	516:3:12971:13009	1297987	2	True				
ANR	1298122	CallExpression	"AddErrorMessage ( msg . Value ( ) , error_msg )"		1297987	0					
ANR	1298123	Callee	AddErrorMessage		1297987	0					
ANR	1298124	Identifier	AddErrorMessage		1297987	0					
ANR	1298125	ArgumentList	msg . Value ( )		1297987	1					
ANR	1298126	Argument	msg . Value ( )		1297987	0					
ANR	1298127	CallExpression	msg . Value ( )		1297987	0					
ANR	1298128	Callee	msg . Value		1297987	0					
ANR	1298129	MemberAccess	msg . Value		1297987	0					
ANR	1298130	Identifier	msg		1297987	0					
ANR	1298131	Identifier	Value		1297987	1					
ANR	1298132	ArgumentList			1297987	1					
ANR	1298133	Argument	error_msg		1297987	1					
ANR	1298134	Identifier	error_msg		1297987	0					
ANR	1298135	Statement	delete	518:2:13017:13022	1297987	1	True				
ANR	1298136	Statement	[	518:8:13023:13023	1297987	2	True				
ANR	1298137	Statement	]	518:9:13024:13024	1297987	3	True				
ANR	1298138	ExpressionStatement	expr	518:11:13026:13030	1297987	4	True				
ANR	1298139	Identifier	expr		1297987	0					
ANR	1298140	ReturnStatement	return false ;	519:2:13034:13046	1297987	5	True				
ANR	1298141	Identifier	false		1297987	0					
ANR	1298142	ExpressionStatement	* delim = '\\0'	523:1:13112:13125	1297987	8	True				
ANR	1298143	AssignmentExpression	* delim = '\\0'		1297987	0		=			
ANR	1298144	UnaryOperationExpression	* delim		1297987	0					
ANR	1298145	UnaryOperator	*		1297987	0					
ANR	1298146	Identifier	delim		1297987	1					
ANR	1298147	PrimaryExpression	'\\0'		1297987	1					
ANR	1298148	ExpressionStatement	"retval = SetEnv ( expr , delim + 1 )"	526:1:13145:13179	1297987	9	True				
ANR	1298149	AssignmentExpression	"retval = SetEnv ( expr , delim + 1 )"		1297987	0		=			
ANR	1298150	Identifier	retval		1297987	0					
ANR	1298151	CallExpression	"SetEnv ( expr , delim + 1 )"		1297987	1					
ANR	1298152	Callee	SetEnv		1297987	0					
ANR	1298153	Identifier	SetEnv		1297987	0					
ANR	1298154	ArgumentList	expr		1297987	1					
ANR	1298155	Argument	expr		1297987	0					
ANR	1298156	Identifier	expr		1297987	0					
ANR	1298157	Argument	delim + 1		1297987	1					
ANR	1298158	AdditiveExpression	delim + 1		1297987	0		+			
ANR	1298159	Identifier	delim		1297987	0					
ANR	1298160	PrimaryExpression	1		1297987	1					
ANR	1298161	Statement	delete	527:1:13182:13187	1297987	10	True				
ANR	1298162	Statement	[	527:7:13188:13188	1297987	11	True				
ANR	1298163	Statement	]	527:8:13189:13189	1297987	12	True				
ANR	1298164	ExpressionStatement	expr	527:10:13191:13195	1297987	13	True				
ANR	1298165	Identifier	expr		1297987	0					
ANR	1298166	ReturnStatement	return retval ;	528:1:13198:13211	1297987	14	True				
ANR	1298167	Identifier	retval		1297987	0					
ANR	1298168	ReturnType	bool		1297987	1					
ANR	1298169	Identifier	Env :: SetEnvWithErrorMessage		1297987	2					
ANR	1298170	ParameterList	"const char * nameValueExpr , MyString * error_msg"		1297987	3					
ANR	1298171	Parameter	const char * nameValueExpr	480:29:12100:12124	1297987	0	True				
ANR	1298172	ParameterType	const char *		1297987	0					
ANR	1298173	Identifier	nameValueExpr		1297987	1					
ANR	1298174	Parameter	MyString * error_msg	480:56:12127:12145	1297987	1	True				
ANR	1298175	ParameterType	MyString *		1297987	0					
ANR	1298176	Identifier	error_msg		1297987	1					
ANR	1298177	CFGEntryNode	ENTRY		1297987		True				
ANR	1298178	CFGExitNode	EXIT		1297987		True				
ANR	1298179	Symbol	msg		1297987						
ANR	1298180	Symbol	error_msg		1297987						
ANR	1298181	Symbol	NULL		1297987						
ANR	1298182	Symbol	nameValueExpr		1297987						
ANR	1298183	Symbol	false		1297987						
ANR	1298184	Symbol	* delim		1297987						
ANR	1298185	Symbol	strchr		1297987						
ANR	1298186	Symbol	SetEnv		1297987						
ANR	1298187	Symbol	retval		1297987						
ANR	1298188	Symbol	msg . Value		1297987						
ANR	1298189	Symbol	* nameValueExpr		1297987						
ANR	1298190	Symbol	NO_ENVIRONMENT_VALUE		1297987						
ANR	1298191	Symbol	strstr		1297987						
ANR	1298192	Symbol	true		1297987						
ANR	1298193	Symbol	strnewp		1297987						
ANR	1298194	Symbol	expr		1297987						
ANR	1298195	Symbol	delim		1297987						
ANR	1298196	Function	Env :: SetEnv	531:0:13216:13349							
ANR	1298197	FunctionDef	"Env :: SetEnv (const char * var , const char * val)"		1298196	0					
ANR	1298198	CompoundStatement		533:0:13269:13349	1298196	0					
ANR	1298199	IdentifierDeclStatement	MyString myVar = var ;	534:1:13272:13292	1298196	0	True				
ANR	1298200	IdentifierDecl	myVar = var		1298196	0					
ANR	1298201	IdentifierDeclType	MyString		1298196	0					
ANR	1298202	Identifier	myVar		1298196	1					
ANR	1298203	AssignmentExpression	myVar = var		1298196	2		=			
ANR	1298204	Identifier	var		1298196	0					
ANR	1298205	Identifier	var		1298196	1					
ANR	1298206	IdentifierDeclStatement	MyString myVal = val ;	535:1:13295:13315	1298196	1	True				
ANR	1298207	IdentifierDecl	myVal = val		1298196	0					
ANR	1298208	IdentifierDeclType	MyString		1298196	0					
ANR	1298209	Identifier	myVal		1298196	1					
ANR	1298210	AssignmentExpression	myVal = val		1298196	2		=			
ANR	1298211	Identifier	val		1298196	0					
ANR	1298212	Identifier	val		1298196	1					
ANR	1298213	ReturnStatement	"return SetEnv ( myVar , myVal ) ;"	536:1:13318:13347	1298196	2	True				
ANR	1298214	CallExpression	"SetEnv ( myVar , myVal )"		1298196	0					
ANR	1298215	Callee	SetEnv		1298196	0					
ANR	1298216	Identifier	SetEnv		1298196	0					
ANR	1298217	ArgumentList	myVar		1298196	1					
ANR	1298218	Argument	myVar		1298196	0					
ANR	1298219	Identifier	myVar		1298196	0					
ANR	1298220	Argument	myVal		1298196	1					
ANR	1298221	Identifier	myVal		1298196	0					
ANR	1298222	ReturnType	bool		1298196	1					
ANR	1298223	Identifier	Env :: SetEnv		1298196	2					
ANR	1298224	ParameterList	"const char * var , const char * val"		1298196	3					
ANR	1298225	Parameter	const char * var	532:13:13234:13248	1298196	0	True				
ANR	1298226	ParameterType	const char *		1298196	0					
ANR	1298227	Identifier	var		1298196	1					
ANR	1298228	Parameter	const char * val	532:30:13251:13265	1298196	1	True				
ANR	1298229	ParameterType	const char *		1298196	0					
ANR	1298230	Identifier	val		1298196	1					
ANR	1298231	CFGEntryNode	ENTRY		1298196		True				
ANR	1298232	CFGExitNode	EXIT		1298196		True				
ANR	1298233	Symbol	val		1298196						
ANR	1298234	Symbol	myVar		1298196						
ANR	1298235	Symbol	var		1298196						
ANR	1298236	Symbol	SetEnv		1298196						
ANR	1298237	Symbol	myVal		1298196						
ANR	1298238	Function	Env :: SetEnv	539:0:13352:13648							
ANR	1298239	FunctionDef	"Env :: SetEnv (const MyString & var , const MyString & val)"		1298238	0					
ANR	1298240	CompoundStatement		541:0:13415:13648	1298238	0					
ANR	1298241	IfStatement	if ( var . Length ( ) == 0 )		1298238	0					
ANR	1298242	Condition	var . Length ( ) == 0	542:5:13422:13438	1298238	0	True				
ANR	1298243	EqualityExpression	var . Length ( ) == 0		1298238	0		==			
ANR	1298244	CallExpression	var . Length ( )		1298238	0					
ANR	1298245	Callee	var . Length		1298238	0					
ANR	1298246	MemberAccess	var . Length		1298238	0					
ANR	1298247	Identifier	var		1298238	0					
ANR	1298248	Identifier	Length		1298238	1					
ANR	1298249	ArgumentList			1298238	1					
ANR	1298250	PrimaryExpression	0		1298238	1					
ANR	1298251	CompoundStatement		2:25:26:26	1298238	1					
ANR	1298252	ReturnStatement	return false ;	543:2:13446:13458	1298238	0	True				
ANR	1298253	Identifier	false		1298238	0					
ANR	1298254	IdentifierDeclStatement	"bool ret = ( _envTable -> insert ( var , val ) == 0 ) ;"	545:1:13464:13511	1298238	1	True				
ANR	1298255	IdentifierDecl	"ret = ( _envTable -> insert ( var , val ) == 0 )"		1298238	0					
ANR	1298256	IdentifierDeclType	bool		1298238	0					
ANR	1298257	Identifier	ret		1298238	1					
ANR	1298258	AssignmentExpression	"ret = ( _envTable -> insert ( var , val ) == 0 )"		1298238	2		=			
ANR	1298259	Identifier	ret		1298238	0					
ANR	1298260	EqualityExpression	"_envTable -> insert ( var , val ) == 0"		1298238	1		==			
ANR	1298261	CallExpression	"_envTable -> insert ( var , val )"		1298238	0					
ANR	1298262	Callee	_envTable -> insert		1298238	0					
ANR	1298263	PtrMemberAccess	_envTable -> insert		1298238	0					
ANR	1298264	Identifier	_envTable		1298238	0					
ANR	1298265	Identifier	insert		1298238	1					
ANR	1298266	ArgumentList	var		1298238	1					
ANR	1298267	Argument	var		1298238	0					
ANR	1298268	Identifier	var		1298238	0					
ANR	1298269	Argument	val		1298238	1					
ANR	1298270	Identifier	val		1298238	0					
ANR	1298271	PrimaryExpression	0		1298238	1					
ANR	1298272	IfStatement	if ( ret )		1298238	2					
ANR	1298273	Condition	ret	547:5:13537:13539	1298238	0	True				
ANR	1298274	Identifier	ret		1298238	0					
ANR	1298275	CompoundStatement		7:10:126:126	1298238	1					
ANR	1298276	ExpressionStatement	m_sorted_varnames . erase ( var . Value ( ) )	548:2:13546:13582	1298238	0	True				
ANR	1298277	CallExpression	m_sorted_varnames . erase ( var . Value ( ) )		1298238	0					
ANR	1298278	Callee	m_sorted_varnames . erase		1298238	0					
ANR	1298279	MemberAccess	m_sorted_varnames . erase		1298238	0					
ANR	1298280	Identifier	m_sorted_varnames		1298238	0					
ANR	1298281	Identifier	erase		1298238	1					
ANR	1298282	ArgumentList	var . Value ( )		1298238	1					
ANR	1298283	Argument	var . Value ( )		1298238	0					
ANR	1298284	CallExpression	var . Value ( )		1298238	0					
ANR	1298285	Callee	var . Value		1298238	0					
ANR	1298286	MemberAccess	var . Value		1298238	0					
ANR	1298287	Identifier	var		1298238	0					
ANR	1298288	Identifier	Value		1298238	1					
ANR	1298289	ArgumentList			1298238	1					
ANR	1298290	ExpressionStatement	m_sorted_varnames . insert ( var . Value ( ) )	549:2:13586:13623	1298238	1	True				
ANR	1298291	CallExpression	m_sorted_varnames . insert ( var . Value ( ) )		1298238	0					
ANR	1298292	Callee	m_sorted_varnames . insert		1298238	0					
ANR	1298293	MemberAccess	m_sorted_varnames . insert		1298238	0					
ANR	1298294	Identifier	m_sorted_varnames		1298238	0					
ANR	1298295	Identifier	insert		1298238	1					
ANR	1298296	ArgumentList	var . Value ( )		1298238	1					
ANR	1298297	Argument	var . Value ( )		1298238	0					
ANR	1298298	CallExpression	var . Value ( )		1298238	0					
ANR	1298299	Callee	var . Value		1298238	0					
ANR	1298300	MemberAccess	var . Value		1298238	0					
ANR	1298301	Identifier	var		1298238	0					
ANR	1298302	Identifier	Value		1298238	1					
ANR	1298303	ArgumentList			1298238	1					
ANR	1298304	ReturnStatement	return ret ;	552:1:13636:13646	1298238	3	True				
ANR	1298305	Identifier	ret		1298238	0					
ANR	1298306	ReturnType	bool		1298238	1					
ANR	1298307	Identifier	Env :: SetEnv		1298238	2					
ANR	1298308	ParameterList	"const MyString & var , const MyString & val"		1298238	3					
ANR	1298309	Parameter	const MyString & var	540:13:13370:13389	1298238	0	True				
ANR	1298310	ParameterType	const MyString &		1298238	0					
ANR	1298311	Identifier	var		1298238	1					
ANR	1298312	Parameter	const MyString & val	540:35:13392:13411	1298238	1	True				
ANR	1298313	ParameterType	const MyString &		1298238	0					
ANR	1298314	Identifier	val		1298238	1					
ANR	1298315	CFGEntryNode	ENTRY		1298238		True				
ANR	1298316	CFGExitNode	EXIT		1298238		True				
ANR	1298317	Symbol	val		1298238						
ANR	1298318	Symbol	ret		1298238						
ANR	1298319	Symbol	_envTable		1298238						
ANR	1298320	Symbol	m_sorted_varnames		1298238						
ANR	1298321	Symbol	var		1298238						
ANR	1298322	Symbol	var . Value		1298238						
ANR	1298323	Symbol	false		1298238						
ANR	1298324	Symbol	var . Length		1298238						
ANR	1298325	Symbol	_envTable -> insert		1298238						
ANR	1298326	Symbol	* _envTable		1298238						
ANR	1298327	Function	Env :: getDelimitedStringV1or2Raw	555:0:13651:14058							
ANR	1298328	FunctionDef	"Env :: getDelimitedStringV1or2Raw (ClassAd const * ad , MyString * result , MyString * error_msg)"		1298327	0					
ANR	1298329	CompoundStatement		557:0:13744:14058	1298327	0					
ANR	1298330	ExpressionStatement	Clear ( )	558:1:13747:13754	1298327	0	True				
ANR	1298331	CallExpression	Clear ( )		1298327	0					
ANR	1298332	Callee	Clear		1298327	0					
ANR	1298333	Identifier	Clear		1298327	0					
ANR	1298334	ArgumentList			1298327	1					
ANR	1298335	IfStatement	"if ( ! MergeFrom ( ad , error_msg ) )"		1298327	1					
ANR	1298336	Condition	"! MergeFrom ( ad , error_msg )"	559:4:13760:13783	1298327	0	True				
ANR	1298337	UnaryOperationExpression	"! MergeFrom ( ad , error_msg )"		1298327	0					
ANR	1298338	UnaryOperator	!		1298327	0					
ANR	1298339	CallExpression	"MergeFrom ( ad , error_msg )"		1298327	1					
ANR	1298340	Callee	MergeFrom		1298327	0					
ANR	1298341	Identifier	MergeFrom		1298327	0					
ANR	1298342	ArgumentList	ad		1298327	1					
ANR	1298343	Argument	ad		1298327	0					
ANR	1298344	Identifier	ad		1298327	0					
ANR	1298345	Argument	error_msg		1298327	1					
ANR	1298346	Identifier	error_msg		1298327	0					
ANR	1298347	CompoundStatement		3:30:41:41	1298327	1					
ANR	1298348	ReturnStatement	return false ;	560:2:13790:13802	1298327	0	True				
ANR	1298349	Identifier	false		1298327	0					
ANR	1298350	IdentifierDeclStatement	char * lookup_delim = NULL ;	563:1:13809:13834	1298327	2	True				
ANR	1298351	IdentifierDecl	* lookup_delim = NULL		1298327	0					
ANR	1298352	IdentifierDeclType	char *		1298327	0					
ANR	1298353	Identifier	lookup_delim		1298327	1					
ANR	1298354	AssignmentExpression	* lookup_delim = NULL		1298327	2		=			
ANR	1298355	Identifier	NULL		1298327	0					
ANR	1298356	Identifier	NULL		1298327	1					
ANR	1298357	IdentifierDeclStatement	char delim = env_delimiter ;	564:1:13837:13863	1298327	3	True				
ANR	1298358	IdentifierDecl	delim = env_delimiter		1298327	0					
ANR	1298359	IdentifierDeclType	char		1298327	0					
ANR	1298360	Identifier	delim		1298327	1					
ANR	1298361	AssignmentExpression	delim = env_delimiter		1298327	2		=			
ANR	1298362	Identifier	env_delimiter		1298327	0					
ANR	1298363	Identifier	env_delimiter		1298327	1					
ANR	1298364	ExpressionStatement	"ad -> LookupString ( ATTR_JOB_ENVIRONMENT1_DELIM , & lookup_delim )"	565:1:13866:13925	1298327	4	True				
ANR	1298365	CallExpression	"ad -> LookupString ( ATTR_JOB_ENVIRONMENT1_DELIM , & lookup_delim )"		1298327	0					
ANR	1298366	Callee	ad -> LookupString		1298327	0					
ANR	1298367	PtrMemberAccess	ad -> LookupString		1298327	0					
ANR	1298368	Identifier	ad		1298327	0					
ANR	1298369	Identifier	LookupString		1298327	1					
ANR	1298370	ArgumentList	ATTR_JOB_ENVIRONMENT1_DELIM		1298327	1					
ANR	1298371	Argument	ATTR_JOB_ENVIRONMENT1_DELIM		1298327	0					
ANR	1298372	Identifier	ATTR_JOB_ENVIRONMENT1_DELIM		1298327	0					
ANR	1298373	Argument	& lookup_delim		1298327	1					
ANR	1298374	UnaryOperationExpression	& lookup_delim		1298327	0					
ANR	1298375	UnaryOperator	&		1298327	0					
ANR	1298376	Identifier	lookup_delim		1298327	1					
ANR	1298377	IfStatement	if ( lookup_delim )		1298327	5					
ANR	1298378	Condition	lookup_delim	566:4:13931:13942	1298327	0	True				
ANR	1298379	Identifier	lookup_delim		1298327	0					
ANR	1298380	CompoundStatement		10:18:200:200	1298327	1					
ANR	1298381	ExpressionStatement	delim = * lookup_delim	567:2:13949:13970	1298327	0	True				
ANR	1298382	AssignmentExpression	delim = * lookup_delim		1298327	0		=			
ANR	1298383	Identifier	delim		1298327	0					
ANR	1298384	UnaryOperationExpression	* lookup_delim		1298327	1					
ANR	1298385	UnaryOperator	*		1298327	0					
ANR	1298386	Identifier	lookup_delim		1298327	1					
ANR	1298387	ExpressionStatement	free ( lookup_delim )	568:2:13974:13992	1298327	1	True				
ANR	1298388	CallExpression	free ( lookup_delim )		1298327	0					
ANR	1298389	Callee	free		1298327	0					
ANR	1298390	Identifier	free		1298327	0					
ANR	1298391	ArgumentList	lookup_delim		1298327	1					
ANR	1298392	Argument	lookup_delim		1298327	0					
ANR	1298393	Identifier	lookup_delim		1298327	0					
ANR	1298394	ReturnStatement	"return getDelimitedStringV1or2Raw ( result , error_msg , delim ) ;"	571:1:13999:14056	1298327	6	True				
ANR	1298395	CallExpression	"getDelimitedStringV1or2Raw ( result , error_msg , delim )"		1298327	0					
ANR	1298396	Callee	getDelimitedStringV1or2Raw		1298327	0					
ANR	1298397	Identifier	getDelimitedStringV1or2Raw		1298327	0					
ANR	1298398	ArgumentList	result		1298327	1					
ANR	1298399	Argument	result		1298327	0					
ANR	1298400	Identifier	result		1298327	0					
ANR	1298401	Argument	error_msg		1298327	1					
ANR	1298402	Identifier	error_msg		1298327	0					
ANR	1298403	Argument	delim		1298327	2					
ANR	1298404	Identifier	delim		1298327	0					
ANR	1298405	ReturnType	bool		1298327	1					
ANR	1298406	Identifier	Env :: getDelimitedStringV1or2Raw		1298327	2					
ANR	1298407	ParameterList	"ClassAd const * ad , MyString * result , MyString * error_msg"		1298327	3					
ANR	1298408	Parameter	ClassAd const * ad	556:32:13688:13704	1298327	0	True				
ANR	1298409	ParameterType	ClassAd const *		1298327	0					
ANR	1298410	Identifier	ad		1298327	1					
ANR	1298411	Parameter	MyString * result	556:50:13706:13721	1298327	1	True				
ANR	1298412	ParameterType	MyString *		1298327	0					
ANR	1298413	Identifier	result		1298327	1					
ANR	1298414	Parameter	MyString * error_msg	556:67:13723:13741	1298327	2	True				
ANR	1298415	ParameterType	MyString *		1298327	0					
ANR	1298416	Identifier	error_msg		1298327	1					
ANR	1298417	CFGEntryNode	ENTRY		1298327		True				
ANR	1298418	CFGExitNode	EXIT		1298327		True				
ANR	1298419	Symbol	* lookup_delim		1298327						
ANR	1298420	Symbol	ad		1298327						
ANR	1298421	Symbol	error_msg		1298327						
ANR	1298422	Symbol	NULL		1298327						
ANR	1298423	Symbol	MergeFrom		1298327						
ANR	1298424	Symbol	getDelimitedStringV1or2Raw		1298327						
ANR	1298425	Symbol	false		1298327						
ANR	1298426	Symbol	ATTR_JOB_ENVIRONMENT1_DELIM		1298327						
ANR	1298427	Symbol	& lookup_delim		1298327						
ANR	1298428	Symbol	result		1298327						
ANR	1298429	Symbol	lookup_delim		1298327						
ANR	1298430	Symbol	env_delimiter		1298327						
ANR	1298431	Symbol	delim		1298327						
ANR	1298432	Function	Env :: getDelimitedStringV1or2Raw	574:0:14061:14507							
ANR	1298433	FunctionDef	"Env :: getDelimitedStringV1or2Raw (MyString * result , MyString * error_msg , char v1_delim)"		1298432	0					
ANR	1298434	CompoundStatement		576:0:14156:14507	1298432	0					
ANR	1298435	ExpressionStatement	ASSERT ( result )	577:1:14159:14173	1298432	0	True				
ANR	1298436	CallExpression	ASSERT ( result )		1298432	0					
ANR	1298437	Callee	ASSERT		1298432	0					
ANR	1298438	Identifier	ASSERT		1298432	0					
ANR	1298439	ArgumentList	result		1298432	1					
ANR	1298440	Argument	result		1298432	0					
ANR	1298441	Identifier	result		1298432	0					
ANR	1298442	IdentifierDeclStatement	int old_len = result -> Length ( ) ;	578:1:14176:14206	1298432	1	True				
ANR	1298443	IdentifierDecl	old_len = result -> Length ( )		1298432	0					
ANR	1298444	IdentifierDeclType	int		1298432	0					
ANR	1298445	Identifier	old_len		1298432	1					
ANR	1298446	AssignmentExpression	old_len = result -> Length ( )		1298432	2		=			
ANR	1298447	Identifier	old_len		1298432	0					
ANR	1298448	CallExpression	result -> Length ( )		1298432	1					
ANR	1298449	Callee	result -> Length		1298432	0					
ANR	1298450	PtrMemberAccess	result -> Length		1298432	0					
ANR	1298451	Identifier	result		1298432	0					
ANR	1298452	Identifier	Length		1298432	1					
ANR	1298453	ArgumentList			1298432	1					
ANR	1298454	IfStatement	"if ( getDelimitedStringV1Raw ( result , NULL , v1_delim ) )"		1298432	2					
ANR	1298455	Condition	"getDelimitedStringV1Raw ( result , NULL , v1_delim )"	580:4:14213:14257	1298432	0	True				
ANR	1298456	CallExpression	"getDelimitedStringV1Raw ( result , NULL , v1_delim )"		1298432	0					
ANR	1298457	Callee	getDelimitedStringV1Raw		1298432	0					
ANR	1298458	Identifier	getDelimitedStringV1Raw		1298432	0					
ANR	1298459	ArgumentList	result		1298432	1					
ANR	1298460	Argument	result		1298432	0					
ANR	1298461	Identifier	result		1298432	0					
ANR	1298462	Argument	NULL		1298432	1					
ANR	1298463	Identifier	NULL		1298432	0					
ANR	1298464	Argument	v1_delim		1298432	2					
ANR	1298465	Identifier	v1_delim		1298432	0					
ANR	1298466	CompoundStatement		5:51:103:103	1298432	1					
ANR	1298467	ReturnStatement	return true ;	581:2:14264:14275	1298432	0	True				
ANR	1298468	Identifier	true		1298432	0					
ANR	1298469	IfStatement	if ( result -> Length ( ) > old_len )		1298432	3					
ANR	1298470	Condition	result -> Length ( ) > old_len	586:4:14325:14350	1298432	0	True				
ANR	1298471	RelationalExpression	result -> Length ( ) > old_len		1298432	0		>			
ANR	1298472	CallExpression	result -> Length ( )		1298432	0					
ANR	1298473	Callee	result -> Length		1298432	0					
ANR	1298474	PtrMemberAccess	result -> Length		1298432	0					
ANR	1298475	Identifier	result		1298432	0					
ANR	1298476	Identifier	Length		1298432	1					
ANR	1298477	ArgumentList			1298432	1					
ANR	1298478	Identifier	old_len		1298432	1					
ANR	1298479	CompoundStatement		11:32:196:196	1298432	1					
ANR	1298480	ExpressionStatement	"result -> setChar ( old_len , '\\0' )"	588:2:14416:14445	1298432	0	True				
ANR	1298481	CallExpression	"result -> setChar ( old_len , '\\0' )"		1298432	0					
ANR	1298482	Callee	result -> setChar		1298432	0					
ANR	1298483	PtrMemberAccess	result -> setChar		1298432	0					
ANR	1298484	Identifier	result		1298432	0					
ANR	1298485	Identifier	setChar		1298432	1					
ANR	1298486	ArgumentList	old_len		1298432	1					
ANR	1298487	Argument	old_len		1298432	0					
ANR	1298488	Identifier	old_len		1298432	0					
ANR	1298489	Argument	'\\0'		1298432	1					
ANR	1298490	PrimaryExpression	'\\0'		1298432	0					
ANR	1298491	ReturnStatement	"return getDelimitedStringV2Raw ( result , error_msg , true ) ;"	591:1:14452:14505	1298432	4	True				
ANR	1298492	CallExpression	"getDelimitedStringV2Raw ( result , error_msg , true )"		1298432	0					
ANR	1298493	Callee	getDelimitedStringV2Raw		1298432	0					
ANR	1298494	Identifier	getDelimitedStringV2Raw		1298432	0					
ANR	1298495	ArgumentList	result		1298432	1					
ANR	1298496	Argument	result		1298432	0					
ANR	1298497	Identifier	result		1298432	0					
ANR	1298498	Argument	error_msg		1298432	1					
ANR	1298499	Identifier	error_msg		1298432	0					
ANR	1298500	Argument	true		1298432	2					
ANR	1298501	Identifier	true		1298432	0					
ANR	1298502	ReturnType	bool		1298432	1					
ANR	1298503	Identifier	Env :: getDelimitedStringV1or2Raw		1298432	2					
ANR	1298504	ParameterList	"MyString * result , MyString * error_msg , char v1_delim"		1298432	3					
ANR	1298505	Parameter	MyString * result	575:32:14098:14113	1298432	0	True				
ANR	1298506	ParameterType	MyString *		1298432	0					
ANR	1298507	Identifier	result		1298432	1					
ANR	1298508	Parameter	MyString * error_msg	575:49:14115:14133	1298432	1	True				
ANR	1298509	ParameterType	MyString *		1298432	0					
ANR	1298510	Identifier	error_msg		1298432	1					
ANR	1298511	Parameter	char v1_delim	575:69:14135:14147	1298432	2	True				
ANR	1298512	ParameterType	char		1298432	0					
ANR	1298513	Identifier	v1_delim		1298432	1					
ANR	1298514	CFGEntryNode	ENTRY		1298432		True				
ANR	1298515	CFGExitNode	EXIT		1298432		True				
ANR	1298516	Symbol	result		1298432						
ANR	1298517	Symbol	old_len		1298432						
ANR	1298518	Symbol	getDelimitedStringV1Raw		1298432						
ANR	1298519	Symbol	getDelimitedStringV2Raw		1298432						
ANR	1298520	Symbol	v1_delim		1298432						
ANR	1298521	Symbol	error_msg		1298432						
ANR	1298522	Symbol	NULL		1298432						
ANR	1298523	Symbol	* result		1298432						
ANR	1298524	Symbol	result -> Length		1298432						
ANR	1298525	Symbol	true		1298432						
ANR	1298526	Function	Env :: getDelimitedStringV2Quoted	594:0:14510:14737							
ANR	1298527	FunctionDef	"Env :: getDelimitedStringV2Quoted (MyString * result , MyString * error_msg)"		1298526	0					
ANR	1298528	CompoundStatement		596:0:14591:14737	1298526	0					
ANR	1298529	IdentifierDeclStatement	MyString v2_raw ;	597:1:14594:14609	1298526	0	True				
ANR	1298530	IdentifierDecl	v2_raw		1298526	0					
ANR	1298531	IdentifierDeclType	MyString		1298526	0					
ANR	1298532	Identifier	v2_raw		1298526	1					
ANR	1298533	IfStatement	"if ( ! getDelimitedStringV2Raw ( & v2_raw , error_msg ) )"		1298526	1					
ANR	1298534	Condition	"! getDelimitedStringV2Raw ( & v2_raw , error_msg )"	598:4:14615:14657	1298526	0	True				
ANR	1298535	UnaryOperationExpression	"! getDelimitedStringV2Raw ( & v2_raw , error_msg )"		1298526	0					
ANR	1298536	UnaryOperator	!		1298526	0					
ANR	1298537	CallExpression	"getDelimitedStringV2Raw ( & v2_raw , error_msg )"		1298526	1					
ANR	1298538	Callee	getDelimitedStringV2Raw		1298526	0					
ANR	1298539	Identifier	getDelimitedStringV2Raw		1298526	0					
ANR	1298540	ArgumentList	& v2_raw		1298526	1					
ANR	1298541	Argument	& v2_raw		1298526	0					
ANR	1298542	UnaryOperationExpression	& v2_raw		1298526	0					
ANR	1298543	UnaryOperator	&		1298526	0					
ANR	1298544	Identifier	v2_raw		1298526	1					
ANR	1298545	Argument	error_msg		1298526	1					
ANR	1298546	Identifier	error_msg		1298526	0					
ANR	1298547	CompoundStatement		3:49:68:68	1298526	1					
ANR	1298548	ReturnStatement	return false ;	599:2:14664:14676	1298526	0	True				
ANR	1298549	Identifier	false		1298526	0					
ANR	1298550	ExpressionStatement	"ArgList :: V2RawToV2Quoted ( v2_raw , result )"	601:1:14682:14721	1298526	2	True				
ANR	1298551	CallExpression	"ArgList :: V2RawToV2Quoted ( v2_raw , result )"		1298526	0					
ANR	1298552	Callee	ArgList :: V2RawToV2Quoted		1298526	0					
ANR	1298553	Identifier	ArgList :: V2RawToV2Quoted		1298526	0					
ANR	1298554	ArgumentList	v2_raw		1298526	1					
ANR	1298555	Argument	v2_raw		1298526	0					
ANR	1298556	Identifier	v2_raw		1298526	0					
ANR	1298557	Argument	result		1298526	1					
ANR	1298558	Identifier	result		1298526	0					
ANR	1298559	ReturnStatement	return true ;	602:1:14724:14735	1298526	3	True				
ANR	1298560	Identifier	true		1298526	0					
ANR	1298561	ReturnType	bool		1298526	1					
ANR	1298562	Identifier	Env :: getDelimitedStringV2Quoted		1298526	2					
ANR	1298563	ParameterList	"MyString * result , MyString * error_msg"		1298526	3					
ANR	1298564	Parameter	MyString * result	595:32:14547:14562	1298526	0	True				
ANR	1298565	ParameterType	MyString *		1298526	0					
ANR	1298566	Identifier	result		1298526	1					
ANR	1298567	Parameter	MyString * error_msg	595:49:14564:14582	1298526	1	True				
ANR	1298568	ParameterType	MyString *		1298526	0					
ANR	1298569	Identifier	error_msg		1298526	1					
ANR	1298570	CFGEntryNode	ENTRY		1298526		True				
ANR	1298571	CFGExitNode	EXIT		1298526		True				
ANR	1298572	Symbol	result		1298526						
ANR	1298573	Symbol	getDelimitedStringV2Raw		1298526						
ANR	1298574	Symbol	& v2_raw		1298526						
ANR	1298575	Symbol	error_msg		1298526						
ANR	1298576	Symbol	false		1298526						
ANR	1298577	Symbol	true		1298526						
ANR	1298578	Symbol	v2_raw		1298526						
ANR	1298579	Function	Env :: getDelimitedStringV1RawOrV2Quoted	605:0:14740:14986							
ANR	1298580	FunctionDef	"Env :: getDelimitedStringV1RawOrV2Quoted (MyString * result , MyString * error_msg)"		1298579	0					
ANR	1298581	CompoundStatement		607:0:14828:14986	1298579	0					
ANR	1298582	IfStatement	"if ( getDelimitedStringV1Raw ( result , NULL ) )"		1298579	0					
ANR	1298583	Condition	"getDelimitedStringV1Raw ( result , NULL )"	608:4:14834:14869	1298579	0	True				
ANR	1298584	CallExpression	"getDelimitedStringV1Raw ( result , NULL )"		1298579	0					
ANR	1298585	Callee	getDelimitedStringV1Raw		1298579	0					
ANR	1298586	Identifier	getDelimitedStringV1Raw		1298579	0					
ANR	1298587	ArgumentList	result		1298579	1					
ANR	1298588	Argument	result		1298579	0					
ANR	1298589	Identifier	result		1298579	0					
ANR	1298590	Argument	NULL		1298579	1					
ANR	1298591	Identifier	NULL		1298579	0					
ANR	1298592	CompoundStatement		2:42:43:43	1298579	1					
ANR	1298593	ReturnStatement	return true ;	609:2:14876:14887	1298579	0	True				
ANR	1298594	Identifier	true		1298579	0					
ANR	1298595	ElseStatement	else		1298579	0					
ANR	1298596	CompoundStatement		5:6:69:69	1298579	0					
ANR	1298597	ExpressionStatement	"result -> setChar ( 0 , '\\0' )"	612:2:14902:14926	1298579	0	True				
ANR	1298598	CallExpression	"result -> setChar ( 0 , '\\0' )"		1298579	0					
ANR	1298599	Callee	result -> setChar		1298579	0					
ANR	1298600	PtrMemberAccess	result -> setChar		1298579	0					
ANR	1298601	Identifier	result		1298579	0					
ANR	1298602	Identifier	setChar		1298579	1					
ANR	1298603	ArgumentList	0		1298579	1					
ANR	1298604	Argument	0		1298579	0					
ANR	1298605	PrimaryExpression	0		1298579	0					
ANR	1298606	Argument	'\\0'		1298579	1					
ANR	1298607	PrimaryExpression	'\\0'		1298579	0					
ANR	1298608	ReturnStatement	"return getDelimitedStringV2Quoted ( result , error_msg ) ;"	613:2:14930:14981	1298579	1	True				
ANR	1298609	CallExpression	"getDelimitedStringV2Quoted ( result , error_msg )"		1298579	0					
ANR	1298610	Callee	getDelimitedStringV2Quoted		1298579	0					
ANR	1298611	Identifier	getDelimitedStringV2Quoted		1298579	0					
ANR	1298612	ArgumentList	result		1298579	1					
ANR	1298613	Argument	result		1298579	0					
ANR	1298614	Identifier	result		1298579	0					
ANR	1298615	Argument	error_msg		1298579	1					
ANR	1298616	Identifier	error_msg		1298579	0					
ANR	1298617	ReturnType	bool		1298579	1					
ANR	1298618	Identifier	Env :: getDelimitedStringV1RawOrV2Quoted		1298579	2					
ANR	1298619	ParameterList	"MyString * result , MyString * error_msg"		1298579	3					
ANR	1298620	Parameter	MyString * result	606:39:14784:14799	1298579	0	True				
ANR	1298621	ParameterType	MyString *		1298579	0					
ANR	1298622	Identifier	result		1298579	1					
ANR	1298623	Parameter	MyString * error_msg	606:56:14801:14819	1298579	1	True				
ANR	1298624	ParameterType	MyString *		1298579	0					
ANR	1298625	Identifier	error_msg		1298579	1					
ANR	1298626	CFGEntryNode	ENTRY		1298579		True				
ANR	1298627	CFGExitNode	EXIT		1298579		True				
ANR	1298628	Symbol	result		1298579						
ANR	1298629	Symbol	getDelimitedStringV1Raw		1298579						
ANR	1298630	Symbol	getDelimitedStringV2Quoted		1298579						
ANR	1298631	Symbol	error_msg		1298579						
ANR	1298632	Symbol	NULL		1298579						
ANR	1298633	Symbol	true		1298579						
ANR	1298634	DeclStmt									
ANR	1298635	Decl							MyString	MyString	var
ANR	1298636	Decl							MyString	MyString	val
ANR	1298637	DeclStmt									
ANR	1298638	Decl							SimpleList < MyString >	SimpleList < MyString >	env_list
ANR	1298639	DeclStmt									
ANR	1298640	Decl							MyString	MyString	var_val
ANR	1298641	Function	Env :: getDelimitedStringForDisplay	644:0:15515:15636							
ANR	1298642	FunctionDef	Env :: getDelimitedStringForDisplay (MyString * result)		1298641	0					
ANR	1298643	CompoundStatement		646:0:15578:15636	1298641	0					
ANR	1298644	ExpressionStatement	ASSERT ( result )	647:1:15581:15595	1298641	0	True				
ANR	1298645	CallExpression	ASSERT ( result )		1298641	0					
ANR	1298646	Callee	ASSERT		1298641	0					
ANR	1298647	Identifier	ASSERT		1298641	0					
ANR	1298648	ArgumentList	result		1298641	1					
ANR	1298649	Argument	result		1298641	0					
ANR	1298650	Identifier	result		1298641	0					
ANR	1298651	ExpressionStatement	"getDelimitedStringV2Raw ( result , NULL )"	648:1:15598:15634	1298641	1	True				
ANR	1298652	CallExpression	"getDelimitedStringV2Raw ( result , NULL )"		1298641	0					
ANR	1298653	Callee	getDelimitedStringV2Raw		1298641	0					
ANR	1298654	Identifier	getDelimitedStringV2Raw		1298641	0					
ANR	1298655	ArgumentList	result		1298641	1					
ANR	1298656	Argument	result		1298641	0					
ANR	1298657	Identifier	result		1298641	0					
ANR	1298658	Argument	NULL		1298641	1					
ANR	1298659	Identifier	NULL		1298641	0					
ANR	1298660	ReturnType	void		1298641	1					
ANR	1298661	Identifier	Env :: getDelimitedStringForDisplay		1298641	2					
ANR	1298662	ParameterList	MyString * result		1298641	3					
ANR	1298663	Parameter	MyString * result	645:34:15554:15569	1298641	0	True				
ANR	1298664	ParameterType	MyString *		1298641	0					
ANR	1298665	Identifier	result		1298641	1					
ANR	1298666	CFGEntryNode	ENTRY		1298641		True				
ANR	1298667	CFGExitNode	EXIT		1298641		True				
ANR	1298668	Symbol	result		1298641						
ANR	1298669	Symbol	NULL		1298641						
ANR	1298670	Function	Env :: GetEnvV1Delimiter	651:0:15639:15875							
ANR	1298671	FunctionDef	Env :: GetEnvV1Delimiter (char const * opsys)		1298670	0					
ANR	1298672	CompoundStatement		653:0:15686:15875	1298670	0					
ANR	1298673	IfStatement	if ( ! opsys )		1298670	0					
ANR	1298674	Condition	! opsys	654:4:15692:15697	1298670	0	True				
ANR	1298675	UnaryOperationExpression	! opsys		1298670	0					
ANR	1298676	UnaryOperator	!		1298670	0					
ANR	1298677	Identifier	opsys		1298670	1					
ANR	1298678	CompoundStatement		2:12:13:13	1298670	1					
ANR	1298679	ReturnStatement	return env_delimiter ;	655:2:15704:15724	1298670	0	True				
ANR	1298680	Identifier	env_delimiter		1298670	0					
ANR	1298681	ElseStatement	else		1298670	0					
ANR	1298682	IfStatement	"if ( ! strncmp ( opsys , ""WIN"" , 3 ) )"		1298670	0					
ANR	1298683	Condition	"! strncmp ( opsys , ""WIN"" , 3 )"	657:9:15738:15760	1298670	0	True				
ANR	1298684	UnaryOperationExpression	"! strncmp ( opsys , ""WIN"" , 3 )"		1298670	0					
ANR	1298685	UnaryOperator	!		1298670	0					
ANR	1298686	CallExpression	"strncmp ( opsys , ""WIN"" , 3 )"		1298670	1					
ANR	1298687	Callee	strncmp		1298670	0					
ANR	1298688	Identifier	strncmp		1298670	0					
ANR	1298689	ArgumentList	opsys		1298670	1					
ANR	1298690	Argument	opsys		1298670	0					
ANR	1298691	Identifier	opsys		1298670	0					
ANR	1298692	Argument	"""WIN"""		1298670	1					
ANR	1298693	PrimaryExpression	"""WIN"""		1298670	0					
ANR	1298694	Argument	3		1298670	2					
ANR	1298695	PrimaryExpression	3		1298670	0					
ANR	1298696	CompoundStatement		5:34:76:76	1298670	1					
ANR	1298697	ReturnStatement	return windows_env_delim ;	658:2:15810:15834	1298670	0	True				
ANR	1298698	Identifier	windows_env_delim		1298670	0					
ANR	1298699	ElseStatement	else		1298670	0					
ANR	1298700	CompoundStatement		8:6:158:158	1298670	0					
ANR	1298701	ReturnStatement	return unix_env_delim ;	661:2:15849:15870	1298670	0	True				
ANR	1298702	Identifier	unix_env_delim		1298670	0					
ANR	1298703	ReturnType	char		1298670	1					
ANR	1298704	Identifier	Env :: GetEnvV1Delimiter		1298670	2					
ANR	1298705	ParameterList	char const * opsys		1298670	3					
ANR	1298706	Parameter	char const * opsys	652:23:15667:15683	1298670	0	True				
ANR	1298707	ParameterType	char const *		1298670	0					
ANR	1298708	Identifier	opsys		1298670	1					
ANR	1298709	CFGEntryNode	ENTRY		1298670		True				
ANR	1298710	CFGExitNode	EXIT		1298670		True				
ANR	1298711	Symbol	strncmp		1298670						
ANR	1298712	Symbol	windows_env_delim		1298670						
ANR	1298713	Symbol	env_delimiter		1298670						
ANR	1298714	Symbol	opsys		1298670						
ANR	1298715	Symbol	unix_env_delim		1298670						
ANR	1298716	Function	Env :: getDelimitedStringV1Raw	665:0:15878:16783							
ANR	1298717	FunctionDef	"Env :: getDelimitedStringV1Raw (MyString * result , MyString * error_msg , char delim)"		1298716	0					
ANR	1298718	CompoundStatement		667:0:15967:16783	1298716	0					
ANR	1298719	IdentifierDeclStatement	"MyString var , val ;"	668:1:15970:15987	1298716	0	True				
ANR	1298720	IdentifierDecl	var		1298716	0					
ANR	1298721	IdentifierDeclType	MyString		1298716	0					
ANR	1298722	Identifier	var		1298716	1					
ANR	1298723	IdentifierDecl	val		1298716	1					
ANR	1298724	IdentifierDeclType	MyString		1298716	0					
ANR	1298725	Identifier	val		1298716	1					
ANR	1298726	IdentifierDeclStatement	bool emptyString = true ;	670:1:15991:16014	1298716	1	True				
ANR	1298727	IdentifierDecl	emptyString = true		1298716	0					
ANR	1298728	IdentifierDeclType	bool		1298716	0					
ANR	1298729	Identifier	emptyString		1298716	1					
ANR	1298730	AssignmentExpression	emptyString = true		1298716	2		=			
ANR	1298731	Identifier	true		1298716	0					
ANR	1298732	Identifier	true		1298716	1					
ANR	1298733	IfStatement	if ( ! delim )		1298716	2					
ANR	1298734	Condition	! delim	671:4:16020:16025	1298716	0	True				
ANR	1298735	UnaryOperationExpression	! delim		1298716	0					
ANR	1298736	UnaryOperator	!		1298716	0					
ANR	1298737	Identifier	delim		1298716	1					
ANR	1298738	ExpressionStatement	delim = env_delimiter	671:12:16028:16049	1298716	1	True				
ANR	1298739	AssignmentExpression	delim = env_delimiter		1298716	0		=			
ANR	1298740	Identifier	delim		1298716	0					
ANR	1298741	Identifier	env_delimiter		1298716	1					
ANR	1298742	ExpressionStatement	ASSERT ( result )	673:1:16053:16067	1298716	3	True				
ANR	1298743	CallExpression	ASSERT ( result )		1298716	0					
ANR	1298744	Callee	ASSERT		1298716	0					
ANR	1298745	Identifier	ASSERT		1298716	0					
ANR	1298746	ArgumentList	result		1298716	1					
ANR	1298747	Argument	result		1298716	0					
ANR	1298748	Identifier	result		1298716	0					
ANR	1298749	ExpressionStatement	_envTable -> startIterations ( )	675:1:16071:16099	1298716	4	True				
ANR	1298750	CallExpression	_envTable -> startIterations ( )		1298716	0					
ANR	1298751	Callee	_envTable -> startIterations		1298716	0					
ANR	1298752	PtrMemberAccess	_envTable -> startIterations		1298716	0					
ANR	1298753	Identifier	_envTable		1298716	0					
ANR	1298754	Identifier	startIterations		1298716	1					
ANR	1298755	ArgumentList			1298716	1					
ANR	1298756	WhileStatement	"while ( _envTable -> iterate ( var , val ) )"		1298716	5					
ANR	1298757	Condition	"_envTable -> iterate ( var , val )"	676:8:16109:16138	1298716	0	True				
ANR	1298758	CallExpression	"_envTable -> iterate ( var , val )"		1298716	0					
ANR	1298759	Callee	_envTable -> iterate		1298716	0					
ANR	1298760	PtrMemberAccess	_envTable -> iterate		1298716	0					
ANR	1298761	Identifier	_envTable		1298716	0					
ANR	1298762	Identifier	iterate		1298716	1					
ANR	1298763	ArgumentList	var		1298716	1					
ANR	1298764	Argument	var		1298716	0					
ANR	1298765	Identifier	var		1298716	0					
ANR	1298766	Argument	val		1298716	1					
ANR	1298767	Identifier	val		1298716	0					
ANR	1298768	CompoundStatement		10:41:174:174	1298716	1					
ANR	1298769	IfStatement	"if ( ! IsSafeEnvV1Value ( var . Value ( ) , delim ) || ! IsSafeEnvV1Value ( val . Value ( ) , delim ) )"		1298716	0					
ANR	1298770	Condition	"! IsSafeEnvV1Value ( var . Value ( ) , delim ) || ! IsSafeEnvV1Value ( val . Value ( ) , delim )"	677:5:16149:16229	1298716	0	True				
ANR	1298771	OrExpression	"! IsSafeEnvV1Value ( var . Value ( ) , delim ) || ! IsSafeEnvV1Value ( val . Value ( ) , delim )"		1298716	0		||			
ANR	1298772	UnaryOperationExpression	"! IsSafeEnvV1Value ( var . Value ( ) , delim )"		1298716	0					
ANR	1298773	UnaryOperator	!		1298716	0					
ANR	1298774	CallExpression	"IsSafeEnvV1Value ( var . Value ( ) , delim )"		1298716	1					
ANR	1298775	Callee	IsSafeEnvV1Value		1298716	0					
ANR	1298776	Identifier	IsSafeEnvV1Value		1298716	0					
ANR	1298777	ArgumentList	var . Value ( )		1298716	1					
ANR	1298778	Argument	var . Value ( )		1298716	0					
ANR	1298779	CallExpression	var . Value ( )		1298716	0					
ANR	1298780	Callee	var . Value		1298716	0					
ANR	1298781	MemberAccess	var . Value		1298716	0					
ANR	1298782	Identifier	var		1298716	0					
ANR	1298783	Identifier	Value		1298716	1					
ANR	1298784	ArgumentList			1298716	1					
ANR	1298785	Argument	delim		1298716	1					
ANR	1298786	Identifier	delim		1298716	0					
ANR	1298787	UnaryOperationExpression	"! IsSafeEnvV1Value ( val . Value ( ) , delim )"		1298716	1					
ANR	1298788	UnaryOperator	!		1298716	0					
ANR	1298789	CallExpression	"IsSafeEnvV1Value ( val . Value ( ) , delim )"		1298716	1					
ANR	1298790	Callee	IsSafeEnvV1Value		1298716	0					
ANR	1298791	Identifier	IsSafeEnvV1Value		1298716	0					
ANR	1298792	ArgumentList	val . Value ( )		1298716	1					
ANR	1298793	Argument	val . Value ( )		1298716	0					
ANR	1298794	CallExpression	val . Value ( )		1298716	0					
ANR	1298795	Callee	val . Value		1298716	0					
ANR	1298796	MemberAccess	val . Value		1298716	0					
ANR	1298797	Identifier	val		1298716	0					
ANR	1298798	Identifier	Value		1298716	1					
ANR	1298799	ArgumentList			1298716	1					
ANR	1298800	Argument	delim		1298716	1					
ANR	1298801	Identifier	delim		1298716	0					
ANR	1298802	CompoundStatement		12:43:264:264	1298716	1					
ANR	1298803	IfStatement	if ( error_msg )		1298716	0					
ANR	1298804	Condition	error_msg	680:6:16241:16249	1298716	0	True				
ANR	1298805	Identifier	error_msg		1298716	0					
ANR	1298806	CompoundStatement		15:4:290:302	1298716	1					
ANR	1298807	IdentifierDeclStatement	MyString msg ;	681:4:16258:16270	1298716	0	True				
ANR	1298808	IdentifierDecl	msg		1298716	0					
ANR	1298809	IdentifierDeclType	MyString		1298716	0					
ANR	1298810	Identifier	msg		1298716	1					
ANR	1298811	ExpressionStatement	"msg . sprintf ( ""Environment entry is not compatible with V1 syntax: %s=%s"" , var . Value ( ) , val . Value ( ) )"	682:4:16276:16372	1298716	1	True				
ANR	1298812	CallExpression	"msg . sprintf ( ""Environment entry is not compatible with V1 syntax: %s=%s"" , var . Value ( ) , val . Value ( ) )"		1298716	0					
ANR	1298813	Callee	msg . sprintf		1298716	0					
ANR	1298814	MemberAccess	msg . sprintf		1298716	0					
ANR	1298815	Identifier	msg		1298716	0					
ANR	1298816	Identifier	sprintf		1298716	1					
ANR	1298817	ArgumentList	"""Environment entry is not compatible with V1 syntax: %s=%s"""		1298716	1					
ANR	1298818	Argument	"""Environment entry is not compatible with V1 syntax: %s=%s"""		1298716	0					
ANR	1298819	PrimaryExpression	"""Environment entry is not compatible with V1 syntax: %s=%s"""		1298716	0					
ANR	1298820	Argument	var . Value ( )		1298716	1					
ANR	1298821	CallExpression	var . Value ( )		1298716	0					
ANR	1298822	Callee	var . Value		1298716	0					
ANR	1298823	MemberAccess	var . Value		1298716	0					
ANR	1298824	Identifier	var		1298716	0					
ANR	1298825	Identifier	Value		1298716	1					
ANR	1298826	ArgumentList			1298716	1					
ANR	1298827	Argument	val . Value ( )		1298716	2					
ANR	1298828	CallExpression	val . Value ( )		1298716	0					
ANR	1298829	Callee	val . Value		1298716	0					
ANR	1298830	MemberAccess	val . Value		1298716	0					
ANR	1298831	Identifier	val		1298716	0					
ANR	1298832	Identifier	Value		1298716	1					
ANR	1298833	ArgumentList			1298716	1					
ANR	1298834	ExpressionStatement	"AddErrorMessage ( msg . Value ( ) , error_msg )"	683:4:16378:16416	1298716	2	True				
ANR	1298835	CallExpression	"AddErrorMessage ( msg . Value ( ) , error_msg )"		1298716	0					
ANR	1298836	Callee	AddErrorMessage		1298716	0					
ANR	1298837	Identifier	AddErrorMessage		1298716	0					
ANR	1298838	ArgumentList	msg . Value ( )		1298716	1					
ANR	1298839	Argument	msg . Value ( )		1298716	0					
ANR	1298840	CallExpression	msg . Value ( )		1298716	0					
ANR	1298841	Callee	msg . Value		1298716	0					
ANR	1298842	MemberAccess	msg . Value		1298716	0					
ANR	1298843	Identifier	msg		1298716	0					
ANR	1298844	Identifier	Value		1298716	1					
ANR	1298845	ArgumentList			1298716	1					
ANR	1298846	Argument	error_msg		1298716	1					
ANR	1298847	Identifier	error_msg		1298716	0					
ANR	1298848	ReturnStatement	return false ;	685:3:16426:16438	1298716	1	True				
ANR	1298849	Identifier	false		1298716	0					
ANR	1298850	IfStatement	if ( ! emptyString )		1298716	1					
ANR	1298851	Condition	! emptyString	688:12:16518:16529	1298716	0	True				
ANR	1298852	UnaryOperationExpression	! emptyString		1298716	0					
ANR	1298853	UnaryOperator	!		1298716	0					
ANR	1298854	Identifier	emptyString		1298716	1					
ANR	1298855	CompoundStatement		22:27:565:565	1298716	1					
ANR	1298856	ExpressionStatement	( * result ) += delim	689:3:16538:16556	1298716	0	True				
ANR	1298857	AssignmentExpression	( * result ) += delim		1298716	0		+=			
ANR	1298858	UnaryOperationExpression	* result		1298716	0					
ANR	1298859	UnaryOperator	*		1298716	0					
ANR	1298860	Identifier	result		1298716	1					
ANR	1298861	Identifier	delim		1298716	1					
ANR	1298862	ExpressionStatement	"WriteToDelimitedString ( var . Value ( ) , * result )"	691:2:16570:16613	1298716	2	True				
ANR	1298863	CallExpression	"WriteToDelimitedString ( var . Value ( ) , * result )"		1298716	0					
ANR	1298864	Callee	WriteToDelimitedString		1298716	0					
ANR	1298865	Identifier	WriteToDelimitedString		1298716	0					
ANR	1298866	ArgumentList	var . Value ( )		1298716	1					
ANR	1298867	Argument	var . Value ( )		1298716	0					
ANR	1298868	CallExpression	var . Value ( )		1298716	0					
ANR	1298869	Callee	var . Value		1298716	0					
ANR	1298870	MemberAccess	var . Value		1298716	0					
ANR	1298871	Identifier	var		1298716	0					
ANR	1298872	Identifier	Value		1298716	1					
ANR	1298873	ArgumentList			1298716	1					
ANR	1298874	Argument	* result		1298716	1					
ANR	1298875	UnaryOperationExpression	* result		1298716	0					
ANR	1298876	UnaryOperator	*		1298716	0					
ANR	1298877	Identifier	result		1298716	1					
ANR	1298878	IfStatement	if ( val != NO_ENVIRONMENT_VALUE )		1298716	3					
ANR	1298879	Condition	val != NO_ENVIRONMENT_VALUE	692:5:16620:16646	1298716	0	True				
ANR	1298880	EqualityExpression	val != NO_ENVIRONMENT_VALUE		1298716	0		!=			
ANR	1298881	Identifier	val		1298716	0					
ANR	1298882	Identifier	NO_ENVIRONMENT_VALUE		1298716	1					
ANR	1298883	CompoundStatement		26:34:681:681	1298716	1					
ANR	1298884	ExpressionStatement	"WriteToDelimitedString ( ""="" , * result )"	693:3:16654:16689	1298716	0	True				
ANR	1298885	CallExpression	"WriteToDelimitedString ( ""="" , * result )"		1298716	0					
ANR	1298886	Callee	WriteToDelimitedString		1298716	0					
ANR	1298887	Identifier	WriteToDelimitedString		1298716	0					
ANR	1298888	ArgumentList	"""="""		1298716	1					
ANR	1298889	Argument	"""="""		1298716	0					
ANR	1298890	PrimaryExpression	"""="""		1298716	0					
ANR	1298891	Argument	* result		1298716	1					
ANR	1298892	UnaryOperationExpression	* result		1298716	0					
ANR	1298893	UnaryOperator	*		1298716	0					
ANR	1298894	Identifier	result		1298716	1					
ANR	1298895	ExpressionStatement	"WriteToDelimitedString ( val . Value ( ) , * result )"	694:3:16694:16737	1298716	1	True				
ANR	1298896	CallExpression	"WriteToDelimitedString ( val . Value ( ) , * result )"		1298716	0					
ANR	1298897	Callee	WriteToDelimitedString		1298716	0					
ANR	1298898	Identifier	WriteToDelimitedString		1298716	0					
ANR	1298899	ArgumentList	val . Value ( )		1298716	1					
ANR	1298900	Argument	val . Value ( )		1298716	0					
ANR	1298901	CallExpression	val . Value ( )		1298716	0					
ANR	1298902	Callee	val . Value		1298716	0					
ANR	1298903	MemberAccess	val . Value		1298716	0					
ANR	1298904	Identifier	val		1298716	0					
ANR	1298905	Identifier	Value		1298716	1					
ANR	1298906	ArgumentList			1298716	1					
ANR	1298907	Argument	* result		1298716	1					
ANR	1298908	UnaryOperationExpression	* result		1298716	0					
ANR	1298909	UnaryOperator	*		1298716	0					
ANR	1298910	Identifier	result		1298716	1					
ANR	1298911	ExpressionStatement	emptyString = false	696:2:16745:16764	1298716	4	True				
ANR	1298912	AssignmentExpression	emptyString = false		1298716	0		=			
ANR	1298913	Identifier	emptyString		1298716	0					
ANR	1298914	Identifier	false		1298716	1					
ANR	1298915	ReturnStatement	return true ;	698:1:16770:16781	1298716	6	True				
ANR	1298916	Identifier	true		1298716	0					
ANR	1298917	ReturnType	bool		1298716	1					
ANR	1298918	Identifier	Env :: getDelimitedStringV1Raw		1298716	2					
ANR	1298919	ParameterList	"MyString * result , MyString * error_msg , char delim"		1298716	3					
ANR	1298920	Parameter	MyString * result	666:29:15912:15927	1298716	0	True				
ANR	1298921	ParameterType	MyString *		1298716	0					
ANR	1298922	Identifier	result		1298716	1					
ANR	1298923	Parameter	MyString * error_msg	666:46:15929:15947	1298716	1	True				
ANR	1298924	ParameterType	MyString *		1298716	0					
ANR	1298925	Identifier	error_msg		1298716	1					
ANR	1298926	Parameter	char delim	666:66:15949:15958	1298716	2	True				
ANR	1298927	ParameterType	char		1298716	0					
ANR	1298928	Identifier	delim		1298716	1					
ANR	1298929	CFGEntryNode	ENTRY		1298716		True				
ANR	1298930	CFGExitNode	EXIT		1298716		True				
ANR	1298931	Symbol	val		1298716						
ANR	1298932	Symbol	msg		1298716						
ANR	1298933	Symbol	error_msg		1298716						
ANR	1298934	Symbol	var		1298716						
ANR	1298935	Symbol	val . Value		1298716						
ANR	1298936	Symbol	var . Value		1298716						
ANR	1298937	Symbol	_envTable -> iterate		1298716						
ANR	1298938	Symbol	false		1298716						
ANR	1298939	Symbol	* _envTable		1298716						
ANR	1298940	Symbol	msg . Value		1298716						
ANR	1298941	Symbol	result		1298716						
ANR	1298942	Symbol	_envTable		1298716						
ANR	1298943	Symbol	NO_ENVIRONMENT_VALUE		1298716						
ANR	1298944	Symbol	* result		1298716						
ANR	1298945	Symbol	env_delimiter		1298716						
ANR	1298946	Symbol	IsSafeEnvV1Value		1298716						
ANR	1298947	Symbol	true		1298716						
ANR	1298948	Symbol	emptyString		1298716						
ANR	1298949	Symbol	delim		1298716						
ANR	1298950	Function	Env :: getWindowsEnvironmentString	702:0:16805:17604							
ANR	1298951	FunctionDef	Env :: getWindowsEnvironmentString ()		1298950	0					
ANR	1298952	CompoundStatement		704:0:16852:17604	1298950	0					
ANR	1298953	IdentifierDeclStatement	std :: string output ;	711:1:17128:17146	1298950	0	True				
ANR	1298954	IdentifierDecl	output		1298950	0					
ANR	1298955	IdentifierDeclType	std :: string		1298950	0					
ANR	1298956	Identifier	output		1298950	1					
ANR	1298957	IdentifierDeclStatement	"std :: set < std :: string , toupper_string_less > set_t ;"	712:9:17157:17205	1298950	1	True				
ANR	1298958	IdentifierDecl	set_t		1298950	0					
ANR	1298959	IdentifierDeclType	"std :: set < std :: string , toupper_string_less >"		1298950	0					
ANR	1298960	Identifier	set_t		1298950	1					
ANR	1298961	ForStatement	for ( set_t :: const_iterator i = m_sorted_varnames . begin ( ) ; i != m_sorted_varnames . end ( ) ; i ++ )		1298950	2					
ANR	1298962	ForInit	set_t :: const_iterator i = m_sorted_varnames . begin ( ) ;	713:6:17213:17264	1298950	0	True				
ANR	1298963	IdentifierDeclStatement	set_t :: const_iterator i = m_sorted_varnames . begin ( ) ;		1298950	0					
ANR	1298964	IdentifierDecl	i = m_sorted_varnames . begin ( )		1298950	0					
ANR	1298965	IdentifierDeclType	set_t :: const_iterator		1298950	0					
ANR	1298966	Identifier	i		1298950	1					
ANR	1298967	AssignmentExpression	i = m_sorted_varnames . begin ( )		1298950	2		=			
ANR	1298968	Identifier	i		1298950	0					
ANR	1298969	CallExpression	m_sorted_varnames . begin ( )		1298950	1					
ANR	1298970	Callee	m_sorted_varnames . begin		1298950	0					
ANR	1298971	MemberAccess	m_sorted_varnames . begin		1298950	0					
ANR	1298972	Identifier	m_sorted_varnames		1298950	0					
ANR	1298973	Identifier	begin		1298950	1					
ANR	1298974	ArgumentList			1298950	1					
ANR	1298975	Condition	i != m_sorted_varnames . end ( )	714:6:17272:17299	1298950	1	True				
ANR	1298976	EqualityExpression	i != m_sorted_varnames . end ( )		1298950	0		!=			
ANR	1298977	Identifier	i		1298950	0					
ANR	1298978	CallExpression	m_sorted_varnames . end ( )		1298950	1					
ANR	1298979	Callee	m_sorted_varnames . end		1298950	0					
ANR	1298980	MemberAccess	m_sorted_varnames . end		1298950	0					
ANR	1298981	Identifier	m_sorted_varnames		1298950	0					
ANR	1298982	Identifier	end		1298950	1					
ANR	1298983	ArgumentList			1298950	1					
ANR	1298984	PostIncDecOperationExpression	i ++	715:6:17308:17310	1298950	2	True				
ANR	1298985	Identifier	i		1298950	0					
ANR	1298986	IncDec	++		1298950	1					
ANR	1298987	CompoundStatement		15:2:481:525	1298950	3					
ANR	1298988	IdentifierDeclStatement	MyString val ;	717:2:17318:17330	1298950	0	True				
ANR	1298989	IdentifierDecl	val		1298950	0					
ANR	1298990	IdentifierDeclType	MyString		1298950	0					
ANR	1298991	Identifier	val		1298950	1					
ANR	1298992	IdentifierDeclStatement	"int ret = _envTable -> lookup ( i -> c_str ( ) , val ) ;"	718:2:17334:17378	1298950	1	True				
ANR	1298993	IdentifierDecl	"ret = _envTable -> lookup ( i -> c_str ( ) , val )"		1298950	0					
ANR	1298994	IdentifierDeclType	int		1298950	0					
ANR	1298995	Identifier	ret		1298950	1					
ANR	1298996	AssignmentExpression	"ret = _envTable -> lookup ( i -> c_str ( ) , val )"		1298950	2		=			
ANR	1298997	Identifier	ret		1298950	0					
ANR	1298998	CallExpression	"_envTable -> lookup ( i -> c_str ( ) , val )"		1298950	1					
ANR	1298999	Callee	_envTable -> lookup		1298950	0					
ANR	1299000	PtrMemberAccess	_envTable -> lookup		1298950	0					
ANR	1299001	Identifier	_envTable		1298950	0					
ANR	1299002	Identifier	lookup		1298950	1					
ANR	1299003	ArgumentList	i -> c_str ( )		1298950	1					
ANR	1299004	Argument	i -> c_str ( )		1298950	0					
ANR	1299005	CallExpression	i -> c_str ( )		1298950	0					
ANR	1299006	Callee	i -> c_str		1298950	0					
ANR	1299007	PtrMemberAccess	i -> c_str		1298950	0					
ANR	1299008	Identifier	i		1298950	0					
ANR	1299009	Identifier	c_str		1298950	1					
ANR	1299010	ArgumentList			1298950	1					
ANR	1299011	Argument	val		1298950	1					
ANR	1299012	Identifier	val		1298950	0					
ANR	1299013	ExpressionStatement	ASSERT ( ret != - 1 )	719:2:17382:17399	1298950	2	True				
ANR	1299014	CallExpression	ASSERT ( ret != - 1 )		1298950	0					
ANR	1299015	Callee	ASSERT		1298950	0					
ANR	1299016	Identifier	ASSERT		1298950	0					
ANR	1299017	ArgumentList	ret != - 1		1298950	1					
ANR	1299018	Argument	ret != - 1		1298950	0					
ANR	1299019	EqualityExpression	ret != - 1		1298950	0		!=			
ANR	1299020	Identifier	ret		1298950	0					
ANR	1299021	UnaryOperationExpression	- 1		1298950	1					
ANR	1299022	UnaryOperator	-		1298950	0					
ANR	1299023	PrimaryExpression	1		1298950	1					
ANR	1299024	ExpressionStatement	output += * i	720:2:17403:17415	1298950	3	True				
ANR	1299025	AssignmentExpression	output += * i		1298950	0		+=			
ANR	1299026	Identifier	output		1298950	0					
ANR	1299027	UnaryOperationExpression	* i		1298950	1					
ANR	1299028	UnaryOperator	*		1298950	0					
ANR	1299029	Identifier	i		1298950	1					
ANR	1299030	ExpressionStatement	output += '='	721:2:17419:17432	1298950	4	True				
ANR	1299031	AssignmentExpression	output += '='		1298950	0		+=			
ANR	1299032	Identifier	output		1298950	0					
ANR	1299033	PrimaryExpression	'='		1298950	1					
ANR	1299034	ExpressionStatement	output += val . Value ( )	722:2:17436:17457	1298950	5	True				
ANR	1299035	AssignmentExpression	output += val . Value ( )		1298950	0		+=			
ANR	1299036	Identifier	output		1298950	0					
ANR	1299037	CallExpression	val . Value ( )		1298950	1					
ANR	1299038	Callee	val . Value		1298950	0					
ANR	1299039	MemberAccess	val . Value		1298950	0					
ANR	1299040	Identifier	val		1298950	0					
ANR	1299041	Identifier	Value		1298950	1					
ANR	1299042	ArgumentList			1298950	1					
ANR	1299043	ExpressionStatement	output += '\\0'	723:2:17461:17475	1298950	6	True				
ANR	1299044	AssignmentExpression	output += '\\0'		1298950	0		+=			
ANR	1299045	Identifier	output		1298950	0					
ANR	1299046	PrimaryExpression	'\\0'		1298950	1					
ANR	1299047	ExpressionStatement	output += '\\0'	725:1:17481:17495	1298950	3	True				
ANR	1299048	AssignmentExpression	output += '\\0'		1298950	0		+=			
ANR	1299049	Identifier	output		1298950	0					
ANR	1299050	PrimaryExpression	'\\0'		1298950	1					
ANR	1299051	IdentifierDeclStatement	char * ret = new char [ output . size ( ) ] ;	726:1:17498:17533	1298950	4	True				
ANR	1299052	IdentifierDecl	* ret = new char [ output . size ( ) ]		1298950	0					
ANR	1299053	IdentifierDeclType	char *		1298950	0					
ANR	1299054	Identifier	ret		1298950	1					
ANR	1299055	AssignmentExpression	* ret = new char [ output . size ( ) ]		1298950	2		=			
ANR	1299056	Identifier	ret		1298950	0					
ANR	1299057	CallExpression	output . size ( )		1298950	1					
ANR	1299058	Callee	output . size		1298950	0					
ANR	1299059	MemberAccess	output . size		1298950	0					
ANR	1299060	Identifier	output		1298950	0					
ANR	1299061	Identifier	size		1298950	1					
ANR	1299062	ArgumentList			1298950	1					
ANR	1299063	ExpressionStatement	ASSERT ( ret != NULL )	727:1:17536:17555	1298950	5	True				
ANR	1299064	CallExpression	ASSERT ( ret != NULL )		1298950	0					
ANR	1299065	Callee	ASSERT		1298950	0					
ANR	1299066	Identifier	ASSERT		1298950	0					
ANR	1299067	ArgumentList	ret != NULL		1298950	1					
ANR	1299068	Argument	ret != NULL		1298950	0					
ANR	1299069	EqualityExpression	ret != NULL		1298950	0		!=			
ANR	1299070	Identifier	ret		1298950	0					
ANR	1299071	Identifier	NULL		1298950	1					
ANR	1299072	ExpressionStatement	"output . copy ( ret , output . size ( ) )"	728:1:17558:17589	1298950	6	True				
ANR	1299073	CallExpression	"output . copy ( ret , output . size ( ) )"		1298950	0					
ANR	1299074	Callee	output . copy		1298950	0					
ANR	1299075	MemberAccess	output . copy		1298950	0					
ANR	1299076	Identifier	output		1298950	0					
ANR	1299077	Identifier	copy		1298950	1					
ANR	1299078	ArgumentList	ret		1298950	1					
ANR	1299079	Argument	ret		1298950	0					
ANR	1299080	Identifier	ret		1298950	0					
ANR	1299081	Argument	output . size ( )		1298950	1					
ANR	1299082	CallExpression	output . size ( )		1298950	0					
ANR	1299083	Callee	output . size		1298950	0					
ANR	1299084	MemberAccess	output . size		1298950	0					
ANR	1299085	Identifier	output		1298950	0					
ANR	1299086	Identifier	size		1298950	1					
ANR	1299087	ArgumentList			1298950	1					
ANR	1299088	ReturnStatement	return ret ;	729:1:17592:17602	1298950	7	True				
ANR	1299089	Identifier	ret		1298950	0					
ANR	1299090	ReturnType	char *		1298950	1					
ANR	1299091	Identifier	Env :: getWindowsEnvironmentString		1298950	2					
ANR	1299092	ParameterList			1298950	3					
ANR	1299093	CFGEntryNode	ENTRY		1298950		True				
ANR	1299094	CFGExitNode	EXIT		1298950		True				
ANR	1299095	Symbol	val		1298950						
ANR	1299096	Symbol	ret		1298950						
ANR	1299097	Symbol	i -> c_str		1298950						
ANR	1299098	Symbol	output . size		1298950						
ANR	1299099	Symbol	NULL		1298950						
ANR	1299100	Symbol	val . Value		1298950						
ANR	1299101	Symbol	i		1298950						
ANR	1299102	Symbol	_envTable -> lookup		1298950						
ANR	1299103	Symbol	m_sorted_varnames . begin		1298950						
ANR	1299104	Symbol	m_sorted_varnames . end		1298950						
ANR	1299105	Symbol	* _envTable		1298950						
ANR	1299106	Symbol	output		1298950						
ANR	1299107	Symbol	m_sorted_varnames		1298950						
ANR	1299108	Symbol	_envTable		1298950						
ANR	1299109	Symbol	set_t		1298950						
ANR	1299110	Symbol	* i		1298950						
ANR	1299111	Function	Env :: getStringArray	733:0:17614:18200							
ANR	1299112	FunctionDef	Env :: getStringArray ()		1299111	0					
ANR	1299113	CompoundStatement		734:28:17650:18200	1299111	0					
ANR	1299114	IdentifierDeclStatement	char * * array = NULL ;	735:1:17653:17672	1299111	0	True				
ANR	1299115	IdentifierDecl	* * array = NULL		1299111	0					
ANR	1299116	IdentifierDeclType	char * *		1299111	0					
ANR	1299117	Identifier	array		1299111	1					
ANR	1299118	AssignmentExpression	* * array = NULL		1299111	2		=			
ANR	1299119	Identifier	NULL		1299111	0					
ANR	1299120	Identifier	NULL		1299111	1					
ANR	1299121	IdentifierDeclStatement	int numVars = _envTable -> getNumElements ( ) ;	736:1:17675:17716	1299111	1	True				
ANR	1299122	IdentifierDecl	numVars = _envTable -> getNumElements ( )		1299111	0					
ANR	1299123	IdentifierDeclType	int		1299111	0					
ANR	1299124	Identifier	numVars		1299111	1					
ANR	1299125	AssignmentExpression	numVars = _envTable -> getNumElements ( )		1299111	2		=			
ANR	1299126	Identifier	numVars		1299111	0					
ANR	1299127	CallExpression	_envTable -> getNumElements ( )		1299111	1					
ANR	1299128	Callee	_envTable -> getNumElements		1299111	0					
ANR	1299129	PtrMemberAccess	_envTable -> getNumElements		1299111	0					
ANR	1299130	Identifier	_envTable		1299111	0					
ANR	1299131	Identifier	getNumElements		1299111	1					
ANR	1299132	ArgumentList			1299111	1					
ANR	1299133	IdentifierDeclStatement	int i ;	737:1:17719:17724	1299111	2	True				
ANR	1299134	IdentifierDecl	i		1299111	0					
ANR	1299135	IdentifierDeclType	int		1299111	0					
ANR	1299136	Identifier	i		1299111	1					
ANR	1299137	Statement	array	739:1:17728:17732	1299111	3	True				
ANR	1299138	Statement	=	739:7:17734:17734	1299111	4	True				
ANR	1299139	Statement	new	739:9:17736:17738	1299111	5	True				
ANR	1299140	Statement	char	739:13:17740:17743	1299111	6	True				
ANR	1299141	Statement	*	739:17:17744:17744	1299111	7	True				
ANR	1299142	Statement	[	739:18:17745:17745	1299111	8	True				
ANR	1299143	Statement	numVars	739:20:17747:17753	1299111	9	True				
ANR	1299144	Statement	+	739:27:17754:17754	1299111	10	True				
ANR	1299145	Statement	1	739:28:17755:17755	1299111	11	True				
ANR	1299146	Statement	]	739:30:17757:17757	1299111	12	True				
ANR	1299147	ExpressionStatement		739:31:17758:17758	1299111	13	True				
ANR	1299148	ExpressionStatement	ASSERT ( array )	740:1:17761:17776	1299111	14	True				
ANR	1299149	CallExpression	ASSERT ( array )		1299111	0					
ANR	1299150	Callee	ASSERT		1299111	0					
ANR	1299151	Identifier	ASSERT		1299111	0					
ANR	1299152	ArgumentList	array		1299111	1					
ANR	1299153	Argument	array		1299111	0					
ANR	1299154	Identifier	array		1299111	0					
ANR	1299155	IdentifierDeclStatement	"MyString var , val ;"	742:4:17783:17800	1299111	15	True				
ANR	1299156	IdentifierDecl	var		1299111	0					
ANR	1299157	IdentifierDeclType	MyString		1299111	0					
ANR	1299158	Identifier	var		1299111	1					
ANR	1299159	IdentifierDecl	val		1299111	1					
ANR	1299160	IdentifierDeclType	MyString		1299111	0					
ANR	1299161	Identifier	val		1299111	1					
ANR	1299162	ExpressionStatement	_envTable -> startIterations ( )	744:4:17807:17835	1299111	16	True				
ANR	1299163	CallExpression	_envTable -> startIterations ( )		1299111	0					
ANR	1299164	Callee	_envTable -> startIterations		1299111	0					
ANR	1299165	PtrMemberAccess	_envTable -> startIterations		1299111	0					
ANR	1299166	Identifier	_envTable		1299111	0					
ANR	1299167	Identifier	startIterations		1299111	1					
ANR	1299168	ArgumentList			1299111	1					
ANR	1299169	ForStatement	"for ( i = 0 ; _envTable -> iterate ( var , val ) ; i ++ )"		1299111	17					
ANR	1299170	ForInit	i = 0 ;	745:6:17843:17848	1299111	0	True				
ANR	1299171	AssignmentExpression	i = 0		1299111	0		=			
ANR	1299172	Identifier	i		1299111	0					
ANR	1299173	PrimaryExpression	0		1299111	1					
ANR	1299174	Condition	"_envTable -> iterate ( var , val )"	745:13:17850:17879	1299111	1	True				
ANR	1299175	CallExpression	"_envTable -> iterate ( var , val )"		1299111	0					
ANR	1299176	Callee	_envTable -> iterate		1299111	0					
ANR	1299177	PtrMemberAccess	_envTable -> iterate		1299111	0					
ANR	1299178	Identifier	_envTable		1299111	0					
ANR	1299179	Identifier	iterate		1299111	1					
ANR	1299180	ArgumentList	var		1299111	1					
ANR	1299181	Argument	var		1299111	0					
ANR	1299182	Identifier	var		1299111	0					
ANR	1299183	Argument	val		1299111	1					
ANR	1299184	Identifier	val		1299111	0					
ANR	1299185	PostIncDecOperationExpression	i ++	745:45:17882:17884	1299111	2	True				
ANR	1299186	Identifier	i		1299111	0					
ANR	1299187	IncDec	++		1299111	1					
ANR	1299188	CompoundStatement		12:51:237:237	1299111	3					
ANR	1299189	ExpressionStatement	ASSERT ( i < numVars )	746:2:17892:17913	1299111	0	True				
ANR	1299190	CallExpression	ASSERT ( i < numVars )		1299111	0					
ANR	1299191	Callee	ASSERT		1299111	0					
ANR	1299192	Identifier	ASSERT		1299111	0					
ANR	1299193	ArgumentList	i < numVars		1299111	1					
ANR	1299194	Argument	i < numVars		1299111	0					
ANR	1299195	RelationalExpression	i < numVars		1299111	0		<			
ANR	1299196	Identifier	i		1299111	0					
ANR	1299197	Identifier	numVars		1299111	1					
ANR	1299198	ExpressionStatement	ASSERT ( var . Length ( ) > 0 )	747:2:17917:17943	1299111	1	True				
ANR	1299199	CallExpression	ASSERT ( var . Length ( ) > 0 )		1299111	0					
ANR	1299200	Callee	ASSERT		1299111	0					
ANR	1299201	Identifier	ASSERT		1299111	0					
ANR	1299202	ArgumentList	var . Length ( ) > 0		1299111	1					
ANR	1299203	Argument	var . Length ( ) > 0		1299111	0					
ANR	1299204	RelationalExpression	var . Length ( ) > 0		1299111	0		>			
ANR	1299205	CallExpression	var . Length ( )		1299111	0					
ANR	1299206	Callee	var . Length		1299111	0					
ANR	1299207	MemberAccess	var . Length		1299111	0					
ANR	1299208	Identifier	var		1299111	0					
ANR	1299209	Identifier	Length		1299111	1					
ANR	1299210	ArgumentList			1299111	1					
ANR	1299211	PrimaryExpression	0		1299111	1					
ANR	1299212	ExpressionStatement	array [ i ] = new char [ var . Length ( ) + val . Length ( ) + 2 ]	748:2:17947:18001	1299111	2	True				
ANR	1299213	AssignmentExpression	array [ i ] = new char [ var . Length ( ) + val . Length ( ) + 2 ]		1299111	0		=			
ANR	1299214	ArrayIndexing	array [ i ]		1299111	0					
ANR	1299215	Identifier	array		1299111	0					
ANR	1299216	Identifier	i		1299111	1					
ANR	1299217	AdditiveExpression	var . Length ( ) + val . Length ( ) + 2		1299111	1		+			
ANR	1299218	CallExpression	var . Length ( )		1299111	0					
ANR	1299219	Callee	var . Length		1299111	0					
ANR	1299220	MemberAccess	var . Length		1299111	0					
ANR	1299221	Identifier	var		1299111	0					
ANR	1299222	Identifier	Length		1299111	1					
ANR	1299223	ArgumentList			1299111	1					
ANR	1299224	AdditiveExpression	val . Length ( ) + 2		1299111	1		+			
ANR	1299225	CallExpression	val . Length ( )		1299111	0					
ANR	1299226	Callee	val . Length		1299111	0					
ANR	1299227	MemberAccess	val . Length		1299111	0					
ANR	1299228	Identifier	val		1299111	0					
ANR	1299229	Identifier	Length		1299111	1					
ANR	1299230	ArgumentList			1299111	1					
ANR	1299231	PrimaryExpression	2		1299111	1					
ANR	1299232	ExpressionStatement	ASSERT ( array [ i ] )	749:2:18005:18023	1299111	3	True				
ANR	1299233	CallExpression	ASSERT ( array [ i ] )		1299111	0					
ANR	1299234	Callee	ASSERT		1299111	0					
ANR	1299235	Identifier	ASSERT		1299111	0					
ANR	1299236	ArgumentList	array [ i ]		1299111	1					
ANR	1299237	Argument	array [ i ]		1299111	0					
ANR	1299238	ArrayIndexing	array [ i ]		1299111	0					
ANR	1299239	Identifier	array		1299111	0					
ANR	1299240	Identifier	i		1299111	1					
ANR	1299241	ExpressionStatement	"strcpy ( array [ i ] , var . Value ( ) )"	750:2:18027:18058	1299111	4	True				
ANR	1299242	CallExpression	"strcpy ( array [ i ] , var . Value ( ) )"		1299111	0					
ANR	1299243	Callee	strcpy		1299111	0					
ANR	1299244	Identifier	strcpy		1299111	0					
ANR	1299245	ArgumentList	array [ i ]		1299111	1					
ANR	1299246	Argument	array [ i ]		1299111	0					
ANR	1299247	ArrayIndexing	array [ i ]		1299111	0					
ANR	1299248	Identifier	array		1299111	0					
ANR	1299249	Identifier	i		1299111	1					
ANR	1299250	Argument	var . Value ( )		1299111	1					
ANR	1299251	CallExpression	var . Value ( )		1299111	0					
ANR	1299252	Callee	var . Value		1299111	0					
ANR	1299253	MemberAccess	var . Value		1299111	0					
ANR	1299254	Identifier	var		1299111	0					
ANR	1299255	Identifier	Value		1299111	1					
ANR	1299256	ArgumentList			1299111	1					
ANR	1299257	IfStatement	if ( val != NO_ENVIRONMENT_VALUE )		1299111	5					
ANR	1299258	Condition	val != NO_ENVIRONMENT_VALUE	751:5:18065:18091	1299111	0	True				
ANR	1299259	EqualityExpression	val != NO_ENVIRONMENT_VALUE		1299111	0		!=			
ANR	1299260	Identifier	val		1299111	0					
ANR	1299261	Identifier	NO_ENVIRONMENT_VALUE		1299111	1					
ANR	1299262	CompoundStatement		18:34:443:443	1299111	1					
ANR	1299263	ExpressionStatement	"strcat ( array [ i ] , ""="" )"	752:3:18099:18122	1299111	0	True				
ANR	1299264	CallExpression	"strcat ( array [ i ] , ""="" )"		1299111	0					
ANR	1299265	Callee	strcat		1299111	0					
ANR	1299266	Identifier	strcat		1299111	0					
ANR	1299267	ArgumentList	array [ i ]		1299111	1					
ANR	1299268	Argument	array [ i ]		1299111	0					
ANR	1299269	ArrayIndexing	array [ i ]		1299111	0					
ANR	1299270	Identifier	array		1299111	0					
ANR	1299271	Identifier	i		1299111	1					
ANR	1299272	Argument	"""="""		1299111	1					
ANR	1299273	PrimaryExpression	"""="""		1299111	0					
ANR	1299274	ExpressionStatement	"strcat ( array [ i ] , val . Value ( ) )"	753:3:18127:18158	1299111	1	True				
ANR	1299275	CallExpression	"strcat ( array [ i ] , val . Value ( ) )"		1299111	0					
ANR	1299276	Callee	strcat		1299111	0					
ANR	1299277	Identifier	strcat		1299111	0					
ANR	1299278	ArgumentList	array [ i ]		1299111	1					
ANR	1299279	Argument	array [ i ]		1299111	0					
ANR	1299280	ArrayIndexing	array [ i ]		1299111	0					
ANR	1299281	Identifier	array		1299111	0					
ANR	1299282	Identifier	i		1299111	1					
ANR	1299283	Argument	val . Value ( )		1299111	1					
ANR	1299284	CallExpression	val . Value ( )		1299111	0					
ANR	1299285	Callee	val . Value		1299111	0					
ANR	1299286	MemberAccess	val . Value		1299111	0					
ANR	1299287	Identifier	val		1299111	0					
ANR	1299288	Identifier	Value		1299111	1					
ANR	1299289	ArgumentList			1299111	1					
ANR	1299290	ExpressionStatement	array [ i ] = NULL	756:1:18168:18183	1299111	18	True				
ANR	1299291	AssignmentExpression	array [ i ] = NULL		1299111	0		=			
ANR	1299292	ArrayIndexing	array [ i ]		1299111	0					
ANR	1299293	Identifier	array		1299111	0					
ANR	1299294	Identifier	i		1299111	1					
ANR	1299295	Identifier	NULL		1299111	1					
ANR	1299296	ReturnStatement	return array ;	757:1:18186:18198	1299111	19	True				
ANR	1299297	Identifier	array		1299111	0					
ANR	1299298	ReturnType	char * *		1299111	1					
ANR	1299299	Identifier	Env :: getStringArray		1299111	2					
ANR	1299300	ParameterList			1299111	3					
ANR	1299301	CFGEntryNode	ENTRY		1299111		True				
ANR	1299302	CFGExitNode	EXIT		1299111		True				
ANR	1299303	Symbol	val		1299111						
ANR	1299304	Symbol	NULL		1299111						
ANR	1299305	Symbol	var		1299111						
ANR	1299306	Symbol	var . Value		1299111						
ANR	1299307	Symbol	val . Value		1299111						
ANR	1299308	Symbol	_envTable -> iterate		1299111						
ANR	1299309	Symbol	i		1299111						
ANR	1299310	Symbol	var . Length		1299111						
ANR	1299311	Symbol	* array		1299111						
ANR	1299312	Symbol	* _envTable		1299111						
ANR	1299313	Symbol	numVars		1299111						
ANR	1299314	Symbol	_envTable		1299111						
ANR	1299315	Symbol	* i		1299111						
ANR	1299316	Symbol	val . Length		1299111						
ANR	1299317	Symbol	NO_ENVIRONMENT_VALUE		1299111						
ANR	1299318	Symbol	array		1299111						
ANR	1299319	Symbol	_envTable -> getNumElements		1299111						
ANR	1299320	Function	Env :: GetEnv	760:0:18203:18336							
ANR	1299321	FunctionDef	"Env :: GetEnv (MyString const & var , MyString & val)"		1299320	0					
ANR	1299322	CompoundStatement		762:0:18261:18336	1299320	0					
ANR	1299323	ReturnStatement	"return _envTable -> lookup ( var , val ) == 0 ;"	764:1:18296:18334	1299320	0	True				
ANR	1299324	EqualityExpression	"_envTable -> lookup ( var , val ) == 0"		1299320	0		==			
ANR	1299325	CallExpression	"_envTable -> lookup ( var , val )"		1299320	0					
ANR	1299326	Callee	_envTable -> lookup		1299320	0					
ANR	1299327	PtrMemberAccess	_envTable -> lookup		1299320	0					
ANR	1299328	Identifier	_envTable		1299320	0					
ANR	1299329	Identifier	lookup		1299320	1					
ANR	1299330	ArgumentList	var		1299320	1					
ANR	1299331	Argument	var		1299320	0					
ANR	1299332	Identifier	var		1299320	0					
ANR	1299333	Argument	val		1299320	1					
ANR	1299334	Identifier	val		1299320	0					
ANR	1299335	PrimaryExpression	0		1299320	1					
ANR	1299336	ReturnType	bool		1299320	1					
ANR	1299337	Identifier	Env :: GetEnv		1299320	2					
ANR	1299338	ParameterList	"MyString const & var , MyString & val"		1299320	3					
ANR	1299339	Parameter	MyString const & var	761:12:18220:18238	1299320	0	True				
ANR	1299340	ParameterType	MyString const &		1299320	0					
ANR	1299341	Identifier	var		1299320	1					
ANR	1299342	Parameter	MyString & val	761:32:18240:18252	1299320	1	True				
ANR	1299343	ParameterType	MyString &		1299320	0					
ANR	1299344	Identifier	val		1299320	1					
ANR	1299345	CFGEntryNode	ENTRY		1299320		True				
ANR	1299346	CFGExitNode	EXIT		1299320		True				
ANR	1299347	Symbol	val		1299320						
ANR	1299348	Symbol	_envTable		1299320						
ANR	1299349	Symbol	var		1299320						
ANR	1299350	Symbol	_envTable -> lookup		1299320						
ANR	1299351	Symbol	* _envTable		1299320						
ANR	1299352	Function	Env :: Import	767:0:18339:18909							
ANR	1299353	FunctionDef	Env :: Import ()		1299352	0					
ANR	1299354	CompoundStatement		769:0:18364:18909	1299352	0					
ANR	1299355	IdentifierDeclStatement	char * * my_environ = GetEnviron ( ) ;	770:1:18367:18399	1299352	0	True				
ANR	1299356	IdentifierDecl	* * my_environ = GetEnviron ( )		1299352	0					
ANR	1299357	IdentifierDeclType	char * *		1299352	0					
ANR	1299358	Identifier	my_environ		1299352	1					
ANR	1299359	AssignmentExpression	* * my_environ = GetEnviron ( )		1299352	2		=			
ANR	1299360	Identifier	my_environ		1299352	0					
ANR	1299361	CallExpression	GetEnviron ( )		1299352	1					
ANR	1299362	Callee	GetEnviron		1299352	0					
ANR	1299363	Identifier	GetEnviron		1299352	0					
ANR	1299364	ArgumentList			1299352	1					
ANR	1299365	ForStatement	for ( int i = 0 ; my_environ [ i ] ; i ++ )		1299352	1					
ANR	1299366	ForInit	int i = 0 ;	771:6:18407:18414	1299352	0	True				
ANR	1299367	IdentifierDeclStatement	int i = 0 ;		1299352	0					
ANR	1299368	IdentifierDecl	i = 0		1299352	0					
ANR	1299369	IdentifierDeclType	int		1299352	0					
ANR	1299370	Identifier	i		1299352	1					
ANR	1299371	AssignmentExpression	i = 0		1299352	2		=			
ANR	1299372	Identifier	i		1299352	0					
ANR	1299373	PrimaryExpression	0		1299352	1					
ANR	1299374	Condition	my_environ [ i ]	771:15:18416:18428	1299352	1	True				
ANR	1299375	ArrayIndexing	my_environ [ i ]		1299352	0					
ANR	1299376	Identifier	my_environ		1299352	0					
ANR	1299377	Identifier	i		1299352	1					
ANR	1299378	PostIncDecOperationExpression	i ++	771:30:18431:18433	1299352	2	True				
ANR	1299379	Identifier	i		1299352	0					
ANR	1299380	IncDec	++		1299352	1					
ANR	1299381	CompoundStatement		10:2:255:274	1299352	3					
ANR	1299382	IdentifierDeclStatement	const char * p = my_environ [ i ] ;	772:2:18440:18469	1299352	0	True				
ANR	1299383	IdentifierDecl	* p = my_environ [ i ]		1299352	0					
ANR	1299384	IdentifierDeclType	const char *		1299352	0					
ANR	1299385	Identifier	p		1299352	1					
ANR	1299386	AssignmentExpression	* p = my_environ [ i ]		1299352	2		=			
ANR	1299387	Identifier	p		1299352	0					
ANR	1299388	ArrayIndexing	my_environ [ i ]		1299352	1					
ANR	1299389	Identifier	my_environ		1299352	0					
ANR	1299390	Identifier	i		1299352	1					
ANR	1299391	IdentifierDeclStatement	int j ;	776:2:18584:18591	1299352	1	True				
ANR	1299392	IdentifierDecl	j		1299352	0					
ANR	1299393	IdentifierDeclType	int		1299352	0					
ANR	1299394	Identifier	j		1299352	1					
ANR	1299395	IdentifierDeclStatement	"MyString varname = """" ;"	777:2:18595:18616	1299352	2	True				
ANR	1299396	IdentifierDecl	"varname = """""		1299352	0					
ANR	1299397	IdentifierDeclType	MyString		1299352	0					
ANR	1299398	Identifier	varname		1299352	1					
ANR	1299399	AssignmentExpression	"varname = """""		1299352	2		=			
ANR	1299400	Identifier	varname		1299352	0					
ANR	1299401	PrimaryExpression	""""""		1299352	1					
ANR	1299402	IdentifierDeclStatement	"MyString value = """" ;"	778:2:18620:18639	1299352	3	True				
ANR	1299403	IdentifierDecl	"value = """""		1299352	0					
ANR	1299404	IdentifierDeclType	MyString		1299352	0					
ANR	1299405	Identifier	value		1299352	1					
ANR	1299406	AssignmentExpression	"value = """""		1299352	2		=			
ANR	1299407	Identifier	value		1299352	0					
ANR	1299408	PrimaryExpression	""""""		1299352	1					
ANR	1299409	ForStatement	for ( j = 0 ; ( p [ j ] != '\\0' ) && ( p [ j ] != '=' ) ; j ++ )		1299352	4					
ANR	1299410	ForInit	j = 0 ;	779:7:18648:18651	1299352	0	True				
ANR	1299411	AssignmentExpression	j = 0		1299352	0		=			
ANR	1299412	Identifier	j		1299352	0					
ANR	1299413	PrimaryExpression	0		1299352	1					
ANR	1299414	Condition	( p [ j ] != '\\0' ) && ( p [ j ] != '=' )	779:13:18654:18688	1299352	1	True				
ANR	1299415	AndExpression	( p [ j ] != '\\0' ) && ( p [ j ] != '=' )		1299352	0		&&			
ANR	1299416	EqualityExpression	p [ j ] != '\\0'		1299352	0		!=			
ANR	1299417	ArrayIndexing	p [ j ]		1299352	0					
ANR	1299418	Identifier	p		1299352	0					
ANR	1299419	Identifier	j		1299352	1					
ANR	1299420	PrimaryExpression	'\\0'		1299352	1					
ANR	1299421	EqualityExpression	p [ j ] != '='		1299352	1		!=			
ANR	1299422	ArrayIndexing	p [ j ]		1299352	0					
ANR	1299423	Identifier	p		1299352	0					
ANR	1299424	Identifier	j		1299352	1					
ANR	1299425	PrimaryExpression	'='		1299352	1					
ANR	1299426	PostIncDecOperationExpression	j ++	779:51:18692:18694	1299352	2	True				
ANR	1299427	Identifier	j		1299352	0					
ANR	1299428	IncDec	++		1299352	1					
ANR	1299429	CompoundStatement		11:56:332:332	1299352	3					
ANR	1299430	ExpressionStatement	varname += p [ j ]	780:3:18702:18717	1299352	0	True				
ANR	1299431	AssignmentExpression	varname += p [ j ]		1299352	0		+=			
ANR	1299432	Identifier	varname		1299352	0					
ANR	1299433	ArrayIndexing	p [ j ]		1299352	1					
ANR	1299434	Identifier	p		1299352	0					
ANR	1299435	Identifier	j		1299352	1					
ANR	1299436	IfStatement	if ( p [ j ] == '=' )		1299352	5					
ANR	1299437	Condition	p [ j ] == '='	782:7:18730:18740	1299352	0	True				
ANR	1299438	EqualityExpression	p [ j ] == '='		1299352	0		==			
ANR	1299439	ArrayIndexing	p [ j ]		1299352	0					
ANR	1299440	Identifier	p		1299352	0					
ANR	1299441	Identifier	j		1299352	1					
ANR	1299442	PrimaryExpression	'='		1299352	1					
ANR	1299443	CompoundStatement		14:21:379:379	1299352	1					
ANR	1299444	ExpressionStatement	value = p + j + 1	783:3:18749:18762	1299352	0	True				
ANR	1299445	AssignmentExpression	value = p + j + 1		1299352	0		=			
ANR	1299446	Identifier	value		1299352	0					
ANR	1299447	AdditiveExpression	p + j + 1		1299352	1		+			
ANR	1299448	Identifier	p		1299352	0					
ANR	1299449	AdditiveExpression	j + 1		1299352	1		+			
ANR	1299450	Identifier	j		1299352	0					
ANR	1299451	PrimaryExpression	1		1299352	1					
ANR	1299452	IfStatement	"if ( ImportFilter ( varname , value ) )"		1299352	6					
ANR	1299453	Condition	"ImportFilter ( varname , value )"	787:7:18824:18853	1299352	0	True				
ANR	1299454	CallExpression	"ImportFilter ( varname , value )"		1299352	0					
ANR	1299455	Callee	ImportFilter		1299352	0					
ANR	1299456	Identifier	ImportFilter		1299352	0					
ANR	1299457	ArgumentList	varname		1299352	1					
ANR	1299458	Argument	varname		1299352	0					
ANR	1299459	Identifier	varname		1299352	0					
ANR	1299460	Argument	value		1299352	1					
ANR	1299461	Identifier	value		1299352	0					
ANR	1299462	CompoundStatement		19:40:492:492	1299352	1					
ANR	1299463	ExpressionStatement	"SetEnv ( varname , value )"	788:3:18862:18886	1299352	0	True				
ANR	1299464	CallExpression	"SetEnv ( varname , value )"		1299352	0					
ANR	1299465	Callee	SetEnv		1299352	0					
ANR	1299466	Identifier	SetEnv		1299352	0					
ANR	1299467	ArgumentList	varname		1299352	1					
ANR	1299468	Argument	varname		1299352	0					
ANR	1299469	Identifier	varname		1299352	0					
ANR	1299470	Argument	value		1299352	1					
ANR	1299471	Identifier	value		1299352	0					
ANR	1299472	ReturnStatement	return true ;	791:1:18896:18907	1299352	2	True				
ANR	1299473	Identifier	true		1299352	0					
ANR	1299474	ReturnType	bool		1299352	1					
ANR	1299475	Identifier	Env :: Import		1299352	2					
ANR	1299476	ParameterList			1299352	3					
ANR	1299477	CFGEntryNode	ENTRY		1299352		True				
ANR	1299478	CFGExitNode	EXIT		1299352		True				
ANR	1299479	Symbol	ImportFilter		1299352						
ANR	1299480	Symbol	GetEnviron		1299352						
ANR	1299481	Symbol	i		1299352						
ANR	1299482	Symbol	my_environ		1299352						
ANR	1299483	Symbol	j		1299352						
ANR	1299484	Symbol	varname		1299352						
ANR	1299485	Symbol	p		1299352						
ANR	1299486	Symbol	* i		1299352						
ANR	1299487	Symbol	* j		1299352						
ANR	1299488	Symbol	true		1299352						
ANR	1299489	Symbol	* p		1299352						
ANR	1299490	Symbol	* my_environ		1299352						
ANR	1299491	Symbol	value		1299352						
