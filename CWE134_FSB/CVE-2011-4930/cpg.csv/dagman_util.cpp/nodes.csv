command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1134752	File	data/converged/CVE-2011-4930_htcondor/dagman_util.cpp								
ANR	1134753	Function	util_popen	34:0:1231:1941							
ANR	1134754	FunctionDef	util_popen (ArgList & args)		1134753	0					
ANR	1134755	CompoundStatement		34:31:1262:1941	1134753	0					
ANR	1134756	IdentifierDeclStatement	MyString cmd ;	35:1:1265:1277	1134753	0	True				
ANR	1134757	IdentifierDecl	cmd		1134753	0					
ANR	1134758	IdentifierDeclType	MyString		1134753	0					
ANR	1134759	Identifier	cmd		1134753	1					
ANR	1134760	ExpressionStatement	args . GetArgsStringForDisplay ( & cmd )	36:1:1300:1336	1134753	1	True				
ANR	1134761	CallExpression	args . GetArgsStringForDisplay ( & cmd )		1134753	0					
ANR	1134762	Callee	args . GetArgsStringForDisplay		1134753	0					
ANR	1134763	MemberAccess	args . GetArgsStringForDisplay		1134753	0					
ANR	1134764	Identifier	args		1134753	0					
ANR	1134765	Identifier	GetArgsStringForDisplay		1134753	1					
ANR	1134766	ArgumentList	& cmd		1134753	1					
ANR	1134767	Argument	& cmd		1134753	0					
ANR	1134768	UnaryOperationExpression	& cmd		1134753	0					
ANR	1134769	UnaryOperator	&		1134753	0					
ANR	1134770	Identifier	cmd		1134753	1					
ANR	1134771	ExpressionStatement	"debug_printf ( DEBUG_VERBOSE , ""Running: %s\\n"" , cmd . Value ( ) )"	37:4:1342:1401	1134753	2	True				
ANR	1134772	CallExpression	"debug_printf ( DEBUG_VERBOSE , ""Running: %s\\n"" , cmd . Value ( ) )"		1134753	0					
ANR	1134773	Callee	debug_printf		1134753	0					
ANR	1134774	Identifier	debug_printf		1134753	0					
ANR	1134775	ArgumentList	DEBUG_VERBOSE		1134753	1					
ANR	1134776	Argument	DEBUG_VERBOSE		1134753	0					
ANR	1134777	Identifier	DEBUG_VERBOSE		1134753	0					
ANR	1134778	Argument	"""Running: %s\\n"""		1134753	1					
ANR	1134779	PrimaryExpression	"""Running: %s\\n"""		1134753	0					
ANR	1134780	Argument	cmd . Value ( )		1134753	2					
ANR	1134781	CallExpression	cmd . Value ( )		1134753	0					
ANR	1134782	Callee	cmd . Value		1134753	0					
ANR	1134783	MemberAccess	cmd . Value		1134753	0					
ANR	1134784	Identifier	cmd		1134753	0					
ANR	1134785	Identifier	Value		1134753	1					
ANR	1134786	ArgumentList			1134753	1					
ANR	1134787	IdentifierDeclStatement	"FILE * fp = my_popen ( args , ""r"" , TRUE ) ;"	39:1:1405:1443	1134753	3	True				
ANR	1134788	IdentifierDecl	"* fp = my_popen ( args , ""r"" , TRUE )"		1134753	0					
ANR	1134789	IdentifierDeclType	FILE *		1134753	0					
ANR	1134790	Identifier	fp		1134753	1					
ANR	1134791	AssignmentExpression	"* fp = my_popen ( args , ""r"" , TRUE )"		1134753	2		=			
ANR	1134792	Identifier	fp		1134753	0					
ANR	1134793	CallExpression	"my_popen ( args , ""r"" , TRUE )"		1134753	1					
ANR	1134794	Callee	my_popen		1134753	0					
ANR	1134795	Identifier	my_popen		1134753	0					
ANR	1134796	ArgumentList	args		1134753	1					
ANR	1134797	Argument	args		1134753	0					
ANR	1134798	Identifier	args		1134753	0					
ANR	1134799	Argument	"""r"""		1134753	1					
ANR	1134800	PrimaryExpression	"""r"""		1134753	0					
ANR	1134801	Argument	TRUE		1134753	2					
ANR	1134802	Identifier	TRUE		1134753	0					
ANR	1134803	IdentifierDeclStatement	int r = 0 ;	41:4:1450:1459	1134753	4	True				
ANR	1134804	IdentifierDecl	r = 0		1134753	0					
ANR	1134805	IdentifierDeclType	int		1134753	0					
ANR	1134806	Identifier	r		1134753	1					
ANR	1134807	AssignmentExpression	r = 0		1134753	2		=			
ANR	1134808	Identifier	r		1134753	0					
ANR	1134809	PrimaryExpression	0		1134753	1					
ANR	1134810	IfStatement	if ( fp == NULL || ( r = my_pclose ( fp ) & 0xff ) != 0 )		1134753	5					
ANR	1134811	Condition	fp == NULL || ( r = my_pclose ( fp ) & 0xff ) != 0	42:8:1469:1513	1134753	0	True				
ANR	1134812	OrExpression	fp == NULL || ( r = my_pclose ( fp ) & 0xff ) != 0		1134753	0		||			
ANR	1134813	EqualityExpression	fp == NULL		1134753	0		==			
ANR	1134814	Identifier	fp		1134753	0					
ANR	1134815	Identifier	NULL		1134753	1					
ANR	1134816	EqualityExpression	( r = my_pclose ( fp ) & 0xff ) != 0		1134753	1		!=			
ANR	1134817	AssignmentExpression	r = my_pclose ( fp ) & 0xff		1134753	0		=			
ANR	1134818	Identifier	r		1134753	0					
ANR	1134819	BitAndExpression	my_pclose ( fp ) & 0xff		1134753	1		&			
ANR	1134820	CallExpression	my_pclose ( fp )		1134753	0					
ANR	1134821	Callee	my_pclose		1134753	0					
ANR	1134822	Identifier	my_pclose		1134753	0					
ANR	1134823	ArgumentList	fp		1134753	1					
ANR	1134824	Argument	fp		1134753	0					
ANR	1134825	Identifier	fp		1134753	0					
ANR	1134826	PrimaryExpression	0xff		1134753	1					
ANR	1134827	PrimaryExpression	0		1134753	1					
ANR	1134828	CompoundStatement		9:55:253:253	1134753	1					
ANR	1134829	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""Warning: failure: %s\\n"" , cmd . Value ( ) )"	43:2:1520:1586	1134753	0	True				
ANR	1134830	CallExpression	"debug_printf ( DEBUG_QUIET , ""Warning: failure: %s\\n"" , cmd . Value ( ) )"		1134753	0					
ANR	1134831	Callee	debug_printf		1134753	0					
ANR	1134832	Identifier	debug_printf		1134753	0					
ANR	1134833	ArgumentList	DEBUG_QUIET		1134753	1					
ANR	1134834	Argument	DEBUG_QUIET		1134753	0					
ANR	1134835	Identifier	DEBUG_QUIET		1134753	0					
ANR	1134836	Argument	"""Warning: failure: %s\\n"""		1134753	1					
ANR	1134837	PrimaryExpression	"""Warning: failure: %s\\n"""		1134753	0					
ANR	1134838	Argument	cmd . Value ( )		1134753	2					
ANR	1134839	CallExpression	cmd . Value ( )		1134753	0					
ANR	1134840	Callee	cmd . Value		1134753	0					
ANR	1134841	MemberAccess	cmd . Value		1134753	0					
ANR	1134842	Identifier	cmd		1134753	0					
ANR	1134843	Identifier	Value		1134753	1					
ANR	1134844	ArgumentList			1134753	1					
ANR	1134845	IfStatement	if ( fp != NULL )		1134753	1					
ANR	1134846	Condition	fp != NULL	44:6:1594:1603	1134753	0	True				
ANR	1134847	EqualityExpression	fp != NULL		1134753	0		!=			
ANR	1134848	Identifier	fp		1134753	0					
ANR	1134849	Identifier	NULL		1134753	1					
ANR	1134850	CompoundStatement		11:19:344:344	1134753	1					
ANR	1134851	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""\\t(my_pclose() returned %d (errno %d, %s))\\n"" , r , errno , strerror ( errno ) )"	45:3:1612:1729	1134753	0	True				
ANR	1134852	CallExpression	"debug_printf ( DEBUG_QUIET , ""\\t(my_pclose() returned %d (errno %d, %s))\\n"" , r , errno , strerror ( errno ) )"		1134753	0					
ANR	1134853	Callee	debug_printf		1134753	0					
ANR	1134854	Identifier	debug_printf		1134753	0					
ANR	1134855	ArgumentList	DEBUG_QUIET		1134753	1					
ANR	1134856	Argument	DEBUG_QUIET		1134753	0					
ANR	1134857	Identifier	DEBUG_QUIET		1134753	0					
ANR	1134858	Argument	"""\\t(my_pclose() returned %d (errno %d, %s))\\n"""		1134753	1					
ANR	1134859	PrimaryExpression	"""\\t(my_pclose() returned %d (errno %d, %s))\\n"""		1134753	0					
ANR	1134860	Argument	r		1134753	2					
ANR	1134861	Identifier	r		1134753	0					
ANR	1134862	Argument	errno		1134753	3					
ANR	1134863	Identifier	errno		1134753	0					
ANR	1134864	Argument	strerror ( errno )		1134753	4					
ANR	1134865	CallExpression	strerror ( errno )		1134753	0					
ANR	1134866	Callee	strerror		1134753	0					
ANR	1134867	Identifier	strerror		1134753	0					
ANR	1134868	ArgumentList	errno		1134753	1					
ANR	1134869	Argument	errno		1134753	0					
ANR	1134870	Identifier	errno		1134753	0					
ANR	1134871	ElseStatement	else		1134753	0					
ANR	1134872	CompoundStatement		15:9:477:477	1134753	0					
ANR	1134873	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""\\t(my_popen() returned NULL (errno %d, %s))\\n"" , errno , strerror ( errno ) )"	49:3:1745:1860	1134753	0	True				
ANR	1134874	CallExpression	"debug_printf ( DEBUG_QUIET , ""\\t(my_popen() returned NULL (errno %d, %s))\\n"" , errno , strerror ( errno ) )"		1134753	0					
ANR	1134875	Callee	debug_printf		1134753	0					
ANR	1134876	Identifier	debug_printf		1134753	0					
ANR	1134877	ArgumentList	DEBUG_QUIET		1134753	1					
ANR	1134878	Argument	DEBUG_QUIET		1134753	0					
ANR	1134879	Identifier	DEBUG_QUIET		1134753	0					
ANR	1134880	Argument	"""\\t(my_popen() returned NULL (errno %d, %s))\\n"""		1134753	1					
ANR	1134881	PrimaryExpression	"""\\t(my_popen() returned NULL (errno %d, %s))\\n"""		1134753	0					
ANR	1134882	Argument	errno		1134753	2					
ANR	1134883	Identifier	errno		1134753	0					
ANR	1134884	Argument	strerror ( errno )		1134753	3					
ANR	1134885	CallExpression	strerror ( errno )		1134753	0					
ANR	1134886	Callee	strerror		1134753	0					
ANR	1134887	Identifier	strerror		1134753	0					
ANR	1134888	ArgumentList	errno		1134753	1					
ANR	1134889	Argument	errno		1134753	0					
ANR	1134890	Identifier	errno		1134753	0					
ANR	1134891	ExpressionStatement	r = - 1	52:3:1865:1871	1134753	1	True				
ANR	1134892	AssignmentExpression	r = - 1		1134753	0		=			
ANR	1134893	Identifier	r		1134753	0					
ANR	1134894	UnaryOperationExpression	- 1		1134753	1					
ANR	1134895	UnaryOperator	-		1134753	0					
ANR	1134896	PrimaryExpression	1		1134753	1					
ANR	1134897	ExpressionStatement	check_warning_strictness ( DAG_STRICT_1 )	54:2:1879:1919	1134753	2	True				
ANR	1134898	CallExpression	check_warning_strictness ( DAG_STRICT_1 )		1134753	0					
ANR	1134899	Callee	check_warning_strictness		1134753	0					
ANR	1134900	Identifier	check_warning_strictness		1134753	0					
ANR	1134901	ArgumentList	DAG_STRICT_1		1134753	1					
ANR	1134902	Argument	DAG_STRICT_1		1134753	0					
ANR	1134903	Identifier	DAG_STRICT_1		1134753	0					
ANR	1134904	ReturnStatement	return r ;	56:4:1931:1939	1134753	6	True				
ANR	1134905	Identifier	r		1134753	0					
ANR	1134906	ReturnType	int		1134753	1					
ANR	1134907	Identifier	util_popen		1134753	2					
ANR	1134908	ParameterList	ArgList & args		1134753	3					
ANR	1134909	Parameter	ArgList & args	34:16:1247:1259	1134753	0	True				
ANR	1134910	ParameterType	ArgList &		1134753	0					
ANR	1134911	Identifier	args		1134753	1					
ANR	1134912	CFGEntryNode	ENTRY		1134753		True				
ANR	1134913	CFGExitNode	EXIT		1134753		True				
ANR	1134914	Symbol	errno		1134753						
ANR	1134915	Symbol	cmd . Value		1134753						
ANR	1134916	Symbol	NULL		1134753						
ANR	1134917	Symbol	& cmd		1134753						
ANR	1134918	Symbol	TRUE		1134753						
ANR	1134919	Symbol	fp		1134753						
ANR	1134920	Symbol	my_popen		1134753						
ANR	1134921	Symbol	DEBUG_QUIET		1134753						
ANR	1134922	Symbol	args		1134753						
ANR	1134923	Symbol	strerror		1134753						
ANR	1134924	Symbol	r		1134753						
ANR	1134925	Symbol	DAG_STRICT_1		1134753						
ANR	1134926	Symbol	cmd		1134753						
ANR	1134927	Symbol	DEBUG_VERBOSE		1134753						
ANR	1134928	Symbol	my_pclose		1134753						
ANR	1134929	Function	util_create_lock_file	61:0:2025:4623							
ANR	1134930	FunctionDef	"util_create_lock_file (const char * lockFileName , bool abortDuplicates)"		1134929	0					
ANR	1134931	CompoundStatement		61:74:2099:4623	1134929	0					
ANR	1134932	IdentifierDeclStatement	int result = 0 ;	62:1:2102:2116	1134929	0	True				
ANR	1134933	IdentifierDecl	result = 0		1134929	0					
ANR	1134934	IdentifierDeclType	int		1134929	0					
ANR	1134935	Identifier	result		1134929	1					
ANR	1134936	AssignmentExpression	result = 0		1134929	2		=			
ANR	1134937	Identifier	result		1134929	0					
ANR	1134938	PrimaryExpression	0		1134929	1					
ANR	1134939	IdentifierDeclStatement	"FILE * fp = safe_fopen_wrapper_follow ( lockFileName , ""w"" ) ;"	64:1:2120:2177	1134929	1	True				
ANR	1134940	IdentifierDecl	"* fp = safe_fopen_wrapper_follow ( lockFileName , ""w"" )"		1134929	0					
ANR	1134941	IdentifierDeclType	FILE *		1134929	0					
ANR	1134942	Identifier	fp		1134929	1					
ANR	1134943	AssignmentExpression	"* fp = safe_fopen_wrapper_follow ( lockFileName , ""w"" )"		1134929	2		=			
ANR	1134944	Identifier	fp		1134929	0					
ANR	1134945	CallExpression	"safe_fopen_wrapper_follow ( lockFileName , ""w"" )"		1134929	1					
ANR	1134946	Callee	safe_fopen_wrapper_follow		1134929	0					
ANR	1134947	Identifier	safe_fopen_wrapper_follow		1134929	0					
ANR	1134948	ArgumentList	lockFileName		1134929	1					
ANR	1134949	Argument	lockFileName		1134929	0					
ANR	1134950	Identifier	lockFileName		1134929	0					
ANR	1134951	Argument	"""w"""		1134929	1					
ANR	1134952	PrimaryExpression	"""w"""		1134929	0					
ANR	1134953	IfStatement	if ( fp == NULL )		1134929	2					
ANR	1134954	Condition	fp == NULL	65:6:2185:2194	1134929	0	True				
ANR	1134955	EqualityExpression	fp == NULL		1134929	0		==			
ANR	1134956	Identifier	fp		1134929	0					
ANR	1134957	Identifier	NULL		1134929	1					
ANR	1134958	CompoundStatement		5:19:98:98	1134929	1					
ANR	1134959	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""ERROR: could not open lock file %s for writing.\\n"" , lockFileName )"	66:2:2202:2305	1134929	0	True				
ANR	1134960	CallExpression	"debug_printf ( DEBUG_QUIET , ""ERROR: could not open lock file %s for writing.\\n"" , lockFileName )"		1134929	0					
ANR	1134961	Callee	debug_printf		1134929	0					
ANR	1134962	Identifier	debug_printf		1134929	0					
ANR	1134963	ArgumentList	DEBUG_QUIET		1134929	1					
ANR	1134964	Argument	DEBUG_QUIET		1134929	0					
ANR	1134965	Identifier	DEBUG_QUIET		1134929	0					
ANR	1134966	Argument	"""ERROR: could not open lock file %s for writing.\\n"""		1134929	1					
ANR	1134967	PrimaryExpression	"""ERROR: could not open lock file %s for writing.\\n"""		1134929	0					
ANR	1134968	Argument	lockFileName		1134929	2					
ANR	1134969	Identifier	lockFileName		1134929	0					
ANR	1134970	ExpressionStatement	result = - 1	69:2:2309:2320	1134929	1	True				
ANR	1134971	AssignmentExpression	result = - 1		1134929	0		=			
ANR	1134972	Identifier	result		1134929	0					
ANR	1134973	UnaryOperationExpression	- 1		1134929	1					
ANR	1134974	UnaryOperator	-		1134929	0					
ANR	1134975	PrimaryExpression	1		1134929	1					
ANR	1134976	IdentifierDeclStatement	ProcessId * procId = NULL ;	75:1:2371:2395	1134929	3	True				
ANR	1134977	IdentifierDecl	* procId = NULL		1134929	0					
ANR	1134978	IdentifierDeclType	ProcessId *		1134929	0					
ANR	1134979	Identifier	procId		1134929	1					
ANR	1134980	AssignmentExpression	* procId = NULL		1134929	2		=			
ANR	1134981	Identifier	NULL		1134929	0					
ANR	1134982	Identifier	NULL		1134929	1					
ANR	1134983	IfStatement	if ( result == 0 && abortDuplicates )		1134929	4					
ANR	1134984	Condition	result == 0 && abortDuplicates	76:6:2403:2432	1134929	0	True				
ANR	1134985	AndExpression	result == 0 && abortDuplicates		1134929	0		&&			
ANR	1134986	EqualityExpression	result == 0		1134929	0		==			
ANR	1134987	Identifier	result		1134929	0					
ANR	1134988	PrimaryExpression	0		1134929	1					
ANR	1134989	Identifier	abortDuplicates		1134929	1					
ANR	1134990	CompoundStatement		17:2:340:350	1134929	1					
ANR	1134991	IdentifierDeclStatement	int status ;	77:2:2440:2450	1134929	0	True				
ANR	1134992	IdentifierDecl	status		1134929	0					
ANR	1134993	IdentifierDeclType	int		1134929	0					
ANR	1134994	Identifier	status		1134929	1					
ANR	1134995	IfStatement	"if ( ProcAPI :: createProcessId ( daemonCore -> getpid ( ) , procId , status ) != PROCAPI_SUCCESS )"		1134929	1					
ANR	1134996	Condition	"ProcAPI :: createProcessId ( daemonCore -> getpid ( ) , procId , status ) != PROCAPI_SUCCESS"	78:7:2459:2546	1134929	0	True				
ANR	1134997	EqualityExpression	"ProcAPI :: createProcessId ( daemonCore -> getpid ( ) , procId , status ) != PROCAPI_SUCCESS"		1134929	0		!=			
ANR	1134998	CallExpression	"ProcAPI :: createProcessId ( daemonCore -> getpid ( ) , procId , status )"		1134929	0					
ANR	1134999	Callee	ProcAPI :: createProcessId		1134929	0					
ANR	1135000	Identifier	ProcAPI :: createProcessId		1134929	0					
ANR	1135001	ArgumentList	daemonCore -> getpid ( )		1134929	1					
ANR	1135002	Argument	daemonCore -> getpid ( )		1134929	0					
ANR	1135003	CallExpression	daemonCore -> getpid ( )		1134929	0					
ANR	1135004	Callee	daemonCore -> getpid		1134929	0					
ANR	1135005	PtrMemberAccess	daemonCore -> getpid		1134929	0					
ANR	1135006	Identifier	daemonCore		1134929	0					
ANR	1135007	Identifier	getpid		1134929	1					
ANR	1135008	ArgumentList			1134929	1					
ANR	1135009	Argument	procId		1134929	1					
ANR	1135010	Identifier	procId		1134929	0					
ANR	1135011	Argument	status		1134929	2					
ANR	1135012	Identifier	status		1134929	0					
ANR	1135013	Identifier	PROCAPI_SUCCESS		1134929	1					
ANR	1135014	CompoundStatement		19:35:450:450	1134929	1					
ANR	1135015	Statement	debug_printf	80:3:2555:2566	1134929	0	True				
ANR	1135016	Statement	(	80:15:2567:2567	1134929	1	True				
ANR	1135017	Statement	DEBUG_QUIET	80:17:2569:2579	1134929	2	True				
ANR	1135018	Statement	","	80:28:2580:2580	1134929	3	True				
ANR	1135019	Statement	"""ERROR: ProcAPI::createProcessId() """	80:30:2582:2617	1134929	4	True				
ANR	1135020	Statement	"""failed; %d\\n"""	81:6:2625:2638	1134929	5	True				
ANR	1135021	Statement	","	81:20:2639:2639	1134929	6	True				
ANR	1135022	Statement	status	81:22:2641:2646	1134929	7	True				
ANR	1135023	Statement	)	81:29:2648:2648	1134929	8	True				
ANR	1135024	ExpressionStatement		81:30:2649:2649	1134929	9	True				
ANR	1135025	ExpressionStatement	result = - 1	82:3:2654:2665	1134929	10	True				
ANR	1135026	AssignmentExpression	result = - 1		1134929	0		=			
ANR	1135027	Identifier	result		1134929	0					
ANR	1135028	UnaryOperationExpression	- 1		1134929	1					
ANR	1135029	UnaryOperator	-		1134929	0					
ANR	1135030	PrimaryExpression	1		1134929	1					
ANR	1135031	IfStatement	if ( result == 0 && abortDuplicates )		1134929	5					
ANR	1135032	Condition	result == 0 && abortDuplicates	89:6:2728:2757	1134929	0	True				
ANR	1135033	AndExpression	result == 0 && abortDuplicates		1134929	0		&&			
ANR	1135034	EqualityExpression	result == 0		1134929	0		==			
ANR	1135035	Identifier	result		1134929	0					
ANR	1135036	PrimaryExpression	0		1134929	1					
ANR	1135037	Identifier	abortDuplicates		1134929	1					
ANR	1135038	CompoundStatement		29:39:661:661	1134929	1					
ANR	1135039	IfStatement	if ( procId -> write ( fp ) != ProcessId :: SUCCESS )		1134929	0					
ANR	1135040	Condition	procId -> write ( fp ) != ProcessId :: SUCCESS	90:7:2770:2810	1134929	0	True				
ANR	1135041	EqualityExpression	procId -> write ( fp ) != ProcessId :: SUCCESS		1134929	0		!=			
ANR	1135042	CallExpression	procId -> write ( fp )		1134929	0					
ANR	1135043	Callee	procId -> write		1134929	0					
ANR	1135044	PtrMemberAccess	procId -> write		1134929	0					
ANR	1135045	Identifier	procId		1134929	0					
ANR	1135046	Identifier	write		1134929	1					
ANR	1135047	ArgumentList	fp		1134929	1					
ANR	1135048	Argument	fp		1134929	0					
ANR	1135049	Identifier	fp		1134929	0					
ANR	1135050	Identifier	ProcessId :: SUCCESS		1134929	1					
ANR	1135051	CompoundStatement		30:51:714:714	1134929	1					
ANR	1135052	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""ERROR: ProcessId::write() failed\\n"" )"	91:3:2819:2883	1134929	0	True				
ANR	1135053	CallExpression	"debug_printf ( DEBUG_QUIET , ""ERROR: ProcessId::write() failed\\n"" )"		1134929	0					
ANR	1135054	Callee	debug_printf		1134929	0					
ANR	1135055	Identifier	debug_printf		1134929	0					
ANR	1135056	ArgumentList	DEBUG_QUIET		1134929	1					
ANR	1135057	Argument	DEBUG_QUIET		1134929	0					
ANR	1135058	Identifier	DEBUG_QUIET		1134929	0					
ANR	1135059	Argument	"""ERROR: ProcessId::write() failed\\n"""		1134929	1					
ANR	1135060	PrimaryExpression	"""ERROR: ProcessId::write() failed\\n"""		1134929	0					
ANR	1135061	ExpressionStatement	result = - 1	92:3:2888:2899	1134929	1	True				
ANR	1135062	AssignmentExpression	result = - 1		1134929	0		=			
ANR	1135063	Identifier	result		1134929	0					
ANR	1135064	UnaryOperationExpression	- 1		1134929	1					
ANR	1135065	UnaryOperator	-		1134929	0					
ANR	1135066	PrimaryExpression	1		1134929	1					
ANR	1135067	IfStatement	if ( result == 0 && abortDuplicates )		1134929	6					
ANR	1135068	Condition	result == 0 && abortDuplicates	99:6:2982:3011	1134929	0	True				
ANR	1135069	AndExpression	result == 0 && abortDuplicates		1134929	0		&&			
ANR	1135070	EqualityExpression	result == 0		1134929	0		==			
ANR	1135071	Identifier	result		1134929	0					
ANR	1135072	PrimaryExpression	0		1134929	1					
ANR	1135073	Identifier	abortDuplicates		1134929	1					
ANR	1135074	CompoundStatement		41:2:981:1022	1134929	1					
ANR	1135075	IdentifierDeclStatement	const int maxSleepTime = 60 ;	100:2:3019:3046	1134929	0	True				
ANR	1135076	IdentifierDecl	maxSleepTime = 60		1134929	0					
ANR	1135077	IdentifierDeclType	const int		1134929	0					
ANR	1135078	Identifier	maxSleepTime		1134929	1					
ANR	1135079	AssignmentExpression	maxSleepTime = 60		1134929	2		=			
ANR	1135080	Identifier	maxSleepTime		1134929	0					
ANR	1135081	PrimaryExpression	60		1134929	1					
ANR	1135082	IdentifierDeclStatement	int sleepTime = procId -> computeWaitTime ( ) ;	101:2:3081:3122	1134929	1	True				
ANR	1135083	IdentifierDecl	sleepTime = procId -> computeWaitTime ( )		1134929	0					
ANR	1135084	IdentifierDeclType	int		1134929	0					
ANR	1135085	Identifier	sleepTime		1134929	1					
ANR	1135086	AssignmentExpression	sleepTime = procId -> computeWaitTime ( )		1134929	2		=			
ANR	1135087	Identifier	sleepTime		1134929	0					
ANR	1135088	CallExpression	procId -> computeWaitTime ( )		1134929	1					
ANR	1135089	Callee	procId -> computeWaitTime		1134929	0					
ANR	1135090	PtrMemberAccess	procId -> computeWaitTime		1134929	0					
ANR	1135091	Identifier	procId		1134929	0					
ANR	1135092	Identifier	computeWaitTime		1134929	1					
ANR	1135093	ArgumentList			1134929	1					
ANR	1135094	IfStatement	if ( sleepTime > maxSleepTime )		1134929	2					
ANR	1135095	Condition	sleepTime > maxSleepTime	103:7:3132:3155	1134929	0	True				
ANR	1135096	RelationalExpression	sleepTime > maxSleepTime		1134929	0		>			
ANR	1135097	Identifier	sleepTime		1134929	0					
ANR	1135098	Identifier	maxSleepTime		1134929	1					
ANR	1135099	CompoundStatement		43:34:1059:1059	1134929	1					
ANR	1135100	Statement	debug_printf	104:3:3164:3175	1134929	0	True				
ANR	1135101	Statement	(	104:15:3176:3176	1134929	1	True				
ANR	1135102	Statement	DEBUG_QUIET	104:17:3178:3188	1134929	2	True				
ANR	1135103	Statement	","	104:28:3189:3189	1134929	3	True				
ANR	1135104	Statement	"""Warning: ProcessId computed sleep """	104:30:3191:3226	1134929	4	True				
ANR	1135105	Statement	"""time (%d) exceeds maximum (%d); skipping sleep/"""	105:6:3234:3282	1134929	5	True				
ANR	1135106	Statement	"""confirm step\\n"""	106:6:3290:3305	1134929	6	True				
ANR	1135107	Statement	","	106:22:3306:3306	1134929	7	True				
ANR	1135108	Statement	sleepTime	106:24:3308:3316	1134929	8	True				
ANR	1135109	Statement	","	106:33:3317:3317	1134929	9	True				
ANR	1135110	Statement	maxSleepTime	106:35:3319:3330	1134929	10	True				
ANR	1135111	Statement	)	106:48:3332:3332	1134929	11	True				
ANR	1135112	ExpressionStatement		106:49:3333:3333	1134929	12	True				
ANR	1135113	ExpressionStatement	check_warning_strictness ( DAG_STRICT_3 )	107:3:3338:3378	1134929	13	True				
ANR	1135114	CallExpression	check_warning_strictness ( DAG_STRICT_3 )		1134929	0					
ANR	1135115	Callee	check_warning_strictness		1134929	0					
ANR	1135116	Identifier	check_warning_strictness		1134929	0					
ANR	1135117	ArgumentList	DAG_STRICT_3		1134929	1					
ANR	1135118	Argument	DAG_STRICT_3		1134929	0					
ANR	1135119	Identifier	DAG_STRICT_3		1134929	0					
ANR	1135120	ElseStatement	else		1134929	0					
ANR	1135121	CompoundStatement		61:3:1580:1590	1134929	0					
ANR	1135122	Statement	debug_printf	109:3:3394:3405	1134929	0	True				
ANR	1135123	Statement	(	109:15:3406:3406	1134929	1	True				
ANR	1135124	Statement	DEBUG_NORMAL	109:17:3408:3419	1134929	2	True				
ANR	1135125	Statement	","	109:29:3420:3420	1134929	3	True				
ANR	1135126	Statement	"""Sleeping for %d seconds to """	109:31:3422:3450	1134929	4	True				
ANR	1135127	Statement	"""ensure ProcessId uniqueness\\n"""	110:6:3458:3488	1134929	5	True				
ANR	1135128	Statement	","	110:37:3489:3489	1134929	6	True				
ANR	1135129	Statement	sleepTime	110:39:3491:3499	1134929	7	True				
ANR	1135130	Statement	)	110:49:3501:3501	1134929	8	True				
ANR	1135131	ExpressionStatement		110:50:3502:3502	1134929	9	True				
ANR	1135132	ExpressionStatement	sleep ( sleepTime )	113:3:3527:3545	1134929	10	True				
ANR	1135133	CallExpression	sleep ( sleepTime )		1134929	0					
ANR	1135134	Callee	sleep		1134929	0					
ANR	1135135	Identifier	sleep		1134929	0					
ANR	1135136	ArgumentList	sleepTime		1134929	1					
ANR	1135137	Argument	sleepTime		1134929	0					
ANR	1135138	Identifier	sleepTime		1134929	0					
ANR	1135139	IdentifierDeclStatement	int status ;	121:3:3680:3690	1134929	11	True				
ANR	1135140	IdentifierDecl	status		1134929	0					
ANR	1135141	IdentifierDeclType	int		1134929	0					
ANR	1135142	Identifier	status		1134929	1					
ANR	1135143	IfStatement	"if ( ProcAPI :: confirmProcessId ( * procId , status ) != PROCAPI_SUCCESS )"		1134929	12					
ANR	1135144	Condition	"ProcAPI :: confirmProcessId ( * procId , status ) != PROCAPI_SUCCESS"	122:8:3700:3768	1134929	0	True				
ANR	1135145	EqualityExpression	"ProcAPI :: confirmProcessId ( * procId , status ) != PROCAPI_SUCCESS"		1134929	0		!=			
ANR	1135146	CallExpression	"ProcAPI :: confirmProcessId ( * procId , status )"		1134929	0					
ANR	1135147	Callee	ProcAPI :: confirmProcessId		1134929	0					
ANR	1135148	Identifier	ProcAPI :: confirmProcessId		1134929	0					
ANR	1135149	ArgumentList	* procId		1134929	1					
ANR	1135150	Argument	* procId		1134929	0					
ANR	1135151	UnaryOperationExpression	* procId		1134929	0					
ANR	1135152	UnaryOperator	*		1134929	0					
ANR	1135153	Identifier	procId		1134929	1					
ANR	1135154	Argument	status		1134929	1					
ANR	1135155	Identifier	status		1134929	0					
ANR	1135156	Identifier	PROCAPI_SUCCESS		1134929	1					
ANR	1135157	CompoundStatement		63:24:1672:1672	1134929	1					
ANR	1135158	Statement	debug_printf	124:4:3778:3789	1134929	0	True				
ANR	1135159	Statement	(	124:16:3790:3790	1134929	1	True				
ANR	1135160	Statement	DEBUG_QUIET	124:18:3792:3802	1134929	2	True				
ANR	1135161	Statement	","	124:29:3803:3803	1134929	3	True				
ANR	1135162	Statement	"""Warning: ProcAPI::"""	124:31:3805:3824	1134929	4	True				
ANR	1135163	Statement	"""confirmProcessId() failed; %d\\n"""	125:7:3833:3865	1134929	5	True				
ANR	1135164	Statement	","	125:40:3866:3866	1134929	6	True				
ANR	1135165	Statement	status	125:42:3868:3873	1134929	7	True				
ANR	1135166	Statement	)	125:49:3875:3875	1134929	8	True				
ANR	1135167	ExpressionStatement		125:50:3876:3876	1134929	9	True				
ANR	1135168	ExpressionStatement	check_warning_strictness ( DAG_STRICT_3 )	126:4:3882:3922	1134929	10	True				
ANR	1135169	CallExpression	check_warning_strictness ( DAG_STRICT_3 )		1134929	0					
ANR	1135170	Callee	check_warning_strictness		1134929	0					
ANR	1135171	Identifier	check_warning_strictness		1134929	0					
ANR	1135172	ArgumentList	DAG_STRICT_3		1134929	1					
ANR	1135173	Argument	DAG_STRICT_3		1134929	0					
ANR	1135174	Identifier	DAG_STRICT_3		1134929	0					
ANR	1135175	ElseStatement	else		1134929	0					
ANR	1135176	CompoundStatement		67:10:1834:1834	1134929	0					
ANR	1135177	IfStatement	if ( ! procId -> isConfirmed ( ) )		1134929	0					
ANR	1135178	Condition	! procId -> isConfirmed ( )	128:9:3945:3966	1134929	0	True				
ANR	1135179	UnaryOperationExpression	! procId -> isConfirmed ( )		1134929	0					
ANR	1135180	UnaryOperator	!		1134929	0					
ANR	1135181	CallExpression	procId -> isConfirmed ( )		1134929	1					
ANR	1135182	Callee	procId -> isConfirmed		1134929	0					
ANR	1135183	PtrMemberAccess	procId -> isConfirmed		1134929	0					
ANR	1135184	Identifier	procId		1134929	0					
ANR	1135185	Identifier	isConfirmed		1134929	1					
ANR	1135186	ArgumentList			1134929	1					
ANR	1135187	CompoundStatement		68:34:1870:1870	1134929	1					
ANR	1135188	Statement	debug_printf	129:5:3977:3988	1134929	0	True				
ANR	1135189	Statement	(	129:17:3989:3989	1134929	1	True				
ANR	1135190	Statement	DEBUG_QUIET	129:19:3991:4001	1134929	2	True				
ANR	1135191	Statement	","	129:30:4002:4002	1134929	3	True				
ANR	1135192	Statement	"""Warning: ProcessId not """	129:32:4004:4028	1134929	4	True				
ANR	1135193	Statement	"""confirmed unique\\n"""	130:8:4038:4057	1134929	5	True				
ANR	1135194	Statement	)	130:29:4059:4059	1134929	6	True				
ANR	1135195	ExpressionStatement		130:30:4060:4060	1134929	7	True				
ANR	1135196	ExpressionStatement	check_warning_strictness ( DAG_STRICT_3 )	131:5:4067:4107	1134929	8	True				
ANR	1135197	CallExpression	check_warning_strictness ( DAG_STRICT_3 )		1134929	0					
ANR	1135198	Callee	check_warning_strictness		1134929	0					
ANR	1135199	Identifier	check_warning_strictness		1134929	0					
ANR	1135200	ArgumentList	DAG_STRICT_3		1134929	1					
ANR	1135201	Argument	DAG_STRICT_3		1134929	0					
ANR	1135202	Identifier	DAG_STRICT_3		1134929	0					
ANR	1135203	ElseStatement	else		1134929	0					
ANR	1135204	CompoundStatement		72:11:2020:2020	1134929	0					
ANR	1135205	IfStatement	if ( procId -> writeConfirmationOnly ( fp ) != ProcessId :: SUCCESS )		1134929	0					
ANR	1135206	Condition	procId -> writeConfirmationOnly ( fp ) != ProcessId :: SUCCESS	137:10:4188:4252	1134929	0	True				
ANR	1135207	EqualityExpression	procId -> writeConfirmationOnly ( fp ) != ProcessId :: SUCCESS		1134929	0		!=			
ANR	1135208	CallExpression	procId -> writeConfirmationOnly ( fp )		1134929	0					
ANR	1135209	Callee	procId -> writeConfirmationOnly		1134929	0					
ANR	1135210	PtrMemberAccess	procId -> writeConfirmationOnly		1134929	0					
ANR	1135211	Identifier	procId		1134929	0					
ANR	1135212	Identifier	writeConfirmationOnly		1134929	1					
ANR	1135213	ArgumentList	fp		1134929	1					
ANR	1135214	Argument	fp		1134929	0					
ANR	1135215	Identifier	fp		1134929	0					
ANR	1135216	Identifier	ProcessId :: SUCCESS		1134929	1					
ANR	1135217	CompoundStatement		78:29:2156:2156	1134929	1					
ANR	1135218	Statement	debug_printf	139:6:4264:4275	1134929	0	True				
ANR	1135219	Statement	(	139:18:4276:4276	1134929	1	True				
ANR	1135220	Statement	DEBUG_QUIET	139:20:4278:4288	1134929	2	True				
ANR	1135221	Statement	","	139:31:4289:4289	1134929	3	True				
ANR	1135222	Statement	"""ERROR: ProcessId::"""	139:33:4291:4310	1134929	4	True				
ANR	1135223	Statement	"""writeConfirmationOnly() failed\\n"""	140:9:4321:4354	1134929	5	True				
ANR	1135224	Statement	)	140:43:4355:4355	1134929	6	True				
ANR	1135225	ExpressionStatement		140:44:4356:4356	1134929	7	True				
ANR	1135226	ExpressionStatement	result = - 1	141:6:4364:4375	1134929	8	True				
ANR	1135227	AssignmentExpression	result = - 1		1134929	0		=			
ANR	1135228	Identifier	result		1134929	0					
ANR	1135229	UnaryOperationExpression	- 1		1134929	1					
ANR	1135230	UnaryOperator	-		1134929	0					
ANR	1135231	PrimaryExpression	1		1134929	1					
ANR	1135232	Statement	delete	148:1:4404:4409	1134929	7	True				
ANR	1135233	ExpressionStatement	procId	148:8:4411:4417	1134929	8	True				
ANR	1135234	Identifier	procId		1134929	0					
ANR	1135235	IfStatement	if ( fp != NULL )		1134929	9					
ANR	1135236	Condition	fp != NULL	150:6:4426:4435	1134929	0	True				
ANR	1135237	EqualityExpression	fp != NULL		1134929	0		!=			
ANR	1135238	Identifier	fp		1134929	0					
ANR	1135239	Identifier	NULL		1134929	1					
ANR	1135240	CompoundStatement		90:19:2339:2339	1134929	1					
ANR	1135241	IfStatement	if ( fclose ( fp ) != 0 )		1134929	0					
ANR	1135242	Condition	fclose ( fp ) != 0	151:7:4448:4464	1134929	0	True				
ANR	1135243	EqualityExpression	fclose ( fp ) != 0		1134929	0		!=			
ANR	1135244	CallExpression	fclose ( fp )		1134929	0					
ANR	1135245	Callee	fclose		1134929	0					
ANR	1135246	Identifier	fclose		1134929	0					
ANR	1135247	ArgumentList	fp		1134929	1					
ANR	1135248	Argument	fp		1134929	0					
ANR	1135249	Identifier	fp		1134929	0					
ANR	1135250	PrimaryExpression	0		1134929	1					
ANR	1135251	CompoundStatement		91:27:2368:2368	1134929	1					
ANR	1135252	Statement	debug_printf	152:3:4473:4484	1134929	0	True				
ANR	1135253	Statement	(	152:15:4485:4485	1134929	1	True				
ANR	1135254	Statement	DEBUG_QUIET	152:17:4487:4497	1134929	2	True				
ANR	1135255	Statement	","	152:28:4498:4498	1134929	3	True				
ANR	1135256	Statement	"""ERROR: closing lock """	152:30:4500:4521	1134929	4	True				
ANR	1135257	Statement	"""file failed with errno %d (%s)\\n"""	153:6:4529:4562	1134929	5	True				
ANR	1135258	Statement	","	153:40:4563:4563	1134929	6	True				
ANR	1135259	Statement	errno	153:42:4565:4569	1134929	7	True				
ANR	1135260	Statement	","	153:47:4570:4570	1134929	8	True				
ANR	1135261	Statement	strerror	154:6:4578:4585	1134929	9	True				
ANR	1135262	Statement	(	154:14:4586:4586	1134929	10	True				
ANR	1135263	Statement	errno	154:16:4588:4592	1134929	11	True				
ANR	1135264	Statement	)	154:22:4594:4594	1134929	12	True				
ANR	1135265	Statement	)	154:24:4596:4596	1134929	13	True				
ANR	1135266	ExpressionStatement		154:25:4597:4597	1134929	14	True				
ANR	1135267	ReturnStatement	return result ;	158:1:4608:4621	1134929	10	True				
ANR	1135268	Identifier	result		1134929	0					
ANR	1135269	ReturnType	int		1134929	1					
ANR	1135270	Identifier	util_create_lock_file		1134929	2					
ANR	1135271	ParameterList	"const char * lockFileName , bool abortDuplicates"		1134929	3					
ANR	1135272	Parameter	const char * lockFileName	61:26:2051:2074	1134929	0	True				
ANR	1135273	ParameterType	const char *		1134929	0					
ANR	1135274	Identifier	lockFileName		1134929	1					
ANR	1135275	Parameter	bool abortDuplicates	61:52:2077:2096	1134929	1	True				
ANR	1135276	ParameterType	bool		1134929	0					
ANR	1135277	Identifier	abortDuplicates		1134929	1					
ANR	1135278	CFGEntryNode	ENTRY		1134929		True				
ANR	1135279	CFGExitNode	EXIT		1134929		True				
ANR	1135280	Symbol	procId -> computeWaitTime		1134929						
ANR	1135281	Symbol	procId		1134929						
ANR	1135282	Symbol	daemonCore -> getpid		1134929						
ANR	1135283	Symbol	procId -> isConfirmed		1134929						
ANR	1135284	Symbol	abortDuplicates		1134929						
ANR	1135285	Symbol	fp		1134929						
ANR	1135286	Symbol	DEBUG_QUIET		1134929						
ANR	1135287	Symbol	result		1134929						
ANR	1135288	Symbol	DAG_STRICT_3		1134929						
ANR	1135289	Symbol	* procId		1134929						
ANR	1135290	Symbol	daemonCore		1134929						
ANR	1135291	Symbol	safe_fopen_wrapper_follow		1134929						
ANR	1135292	Symbol	ProcessId :: SUCCESS		1134929						
ANR	1135293	Symbol	ProcAPI :: createProcessId		1134929						
ANR	1135294	Symbol	NULL		1134929						
ANR	1135295	Symbol	fclose		1134929						
ANR	1135296	Symbol	maxSleepTime		1134929						
ANR	1135297	Symbol	PROCAPI_SUCCESS		1134929						
ANR	1135298	Symbol	lockFileName		1134929						
ANR	1135299	Symbol	ProcAPI :: confirmProcessId		1134929						
ANR	1135300	Symbol	procId -> write		1134929						
ANR	1135301	Symbol	* daemonCore		1134929						
ANR	1135302	Symbol	sleepTime		1134929						
ANR	1135303	Symbol	procId -> writeConfirmationOnly		1134929						
ANR	1135304	Symbol	status		1134929						
ANR	1135305	Function	util_check_lock_file	163:0:4707:6552							
ANR	1135306	FunctionDef	util_check_lock_file (const char * lockFileName)		1135305	0					
ANR	1135307	CompoundStatement		163:51:4758:6552	1135305	0					
ANR	1135308	IdentifierDeclStatement	int result = 0 ;	164:1:4761:4775	1135305	0	True				
ANR	1135309	IdentifierDecl	result = 0		1135305	0					
ANR	1135310	IdentifierDeclType	int		1135305	0					
ANR	1135311	Identifier	result		1135305	1					
ANR	1135312	AssignmentExpression	result = 0		1135305	2		=			
ANR	1135313	Identifier	result		1135305	0					
ANR	1135314	PrimaryExpression	0		1135305	1					
ANR	1135315	IdentifierDeclStatement	"FILE * fp = safe_fopen_wrapper_follow ( lockFileName , ""r"" ) ;"	166:1:4779:4836	1135305	1	True				
ANR	1135316	IdentifierDecl	"* fp = safe_fopen_wrapper_follow ( lockFileName , ""r"" )"		1135305	0					
ANR	1135317	IdentifierDeclType	FILE *		1135305	0					
ANR	1135318	Identifier	fp		1135305	1					
ANR	1135319	AssignmentExpression	"* fp = safe_fopen_wrapper_follow ( lockFileName , ""r"" )"		1135305	2		=			
ANR	1135320	Identifier	fp		1135305	0					
ANR	1135321	CallExpression	"safe_fopen_wrapper_follow ( lockFileName , ""r"" )"		1135305	1					
ANR	1135322	Callee	safe_fopen_wrapper_follow		1135305	0					
ANR	1135323	Identifier	safe_fopen_wrapper_follow		1135305	0					
ANR	1135324	ArgumentList	lockFileName		1135305	1					
ANR	1135325	Argument	lockFileName		1135305	0					
ANR	1135326	Identifier	lockFileName		1135305	0					
ANR	1135327	Argument	"""r"""		1135305	1					
ANR	1135328	PrimaryExpression	"""r"""		1135305	0					
ANR	1135329	IfStatement	if ( fp == NULL )		1135305	2					
ANR	1135330	Condition	fp == NULL	167:6:4844:4853	1135305	0	True				
ANR	1135331	EqualityExpression	fp == NULL		1135305	0		==			
ANR	1135332	Identifier	fp		1135305	0					
ANR	1135333	Identifier	NULL		1135305	1					
ANR	1135334	CompoundStatement		5:19:98:98	1135305	1					
ANR	1135335	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""ERROR: could not open lock file %s for reading.\\n"" , lockFileName )"	168:2:4861:4965	1135305	0	True				
ANR	1135336	CallExpression	"debug_printf ( DEBUG_QUIET , ""ERROR: could not open lock file %s for reading.\\n"" , lockFileName )"		1135305	0					
ANR	1135337	Callee	debug_printf		1135305	0					
ANR	1135338	Identifier	debug_printf		1135305	0					
ANR	1135339	ArgumentList	DEBUG_QUIET		1135305	1					
ANR	1135340	Argument	DEBUG_QUIET		1135305	0					
ANR	1135341	Identifier	DEBUG_QUIET		1135305	0					
ANR	1135342	Argument	"""ERROR: could not open lock file %s for reading.\\n"""		1135305	1					
ANR	1135343	PrimaryExpression	"""ERROR: could not open lock file %s for reading.\\n"""		1135305	0					
ANR	1135344	Argument	lockFileName		1135305	2					
ANR	1135345	Identifier	lockFileName		1135305	0					
ANR	1135346	ExpressionStatement	result = - 1	171:2:4969:4980	1135305	1	True				
ANR	1135347	AssignmentExpression	result = - 1		1135305	0		=			
ANR	1135348	Identifier	result		1135305	0					
ANR	1135349	UnaryOperationExpression	- 1		1135305	1					
ANR	1135350	UnaryOperator	-		1135305	0					
ANR	1135351	PrimaryExpression	1		1135305	1					
ANR	1135352	IdentifierDeclStatement	ProcessId * procId = NULL ;	174:1:4987:5011	1135305	3	True				
ANR	1135353	IdentifierDecl	* procId = NULL		1135305	0					
ANR	1135354	IdentifierDeclType	ProcessId *		1135305	0					
ANR	1135355	Identifier	procId		1135305	1					
ANR	1135356	AssignmentExpression	* procId = NULL		1135305	2		=			
ANR	1135357	Identifier	NULL		1135305	0					
ANR	1135358	Identifier	NULL		1135305	1					
ANR	1135359	IfStatement	if ( result != - 1 )		1135305	4					
ANR	1135360	Condition	result != - 1	175:6:5019:5030	1135305	0	True				
ANR	1135361	EqualityExpression	result != - 1		1135305	0		!=			
ANR	1135362	Identifier	result		1135305	0					
ANR	1135363	UnaryOperationExpression	- 1		1135305	1					
ANR	1135364	UnaryOperator	-		1135305	0					
ANR	1135365	PrimaryExpression	1		1135305	1					
ANR	1135366	CompoundStatement		14:2:279:289	1135305	1					
ANR	1135367	IdentifierDeclStatement	int status ;	176:2:5038:5048	1135305	0	True				
ANR	1135368	IdentifierDecl	status		1135305	0					
ANR	1135369	IdentifierDeclType	int		1135305	0					
ANR	1135370	Identifier	status		1135305	1					
ANR	1135371	ExpressionStatement	"procId = new ProcessId ( fp , status )"	177:2:5052:5088	1135305	1	True				
ANR	1135372	AssignmentExpression	"procId = new ProcessId ( fp , status )"		1135305	0		=			
ANR	1135373	Identifier	procId		1135305	0					
ANR	1135374	Expression	"fp , status"		1135305	1					
ANR	1135375	Identifier	fp		1135305	0					
ANR	1135376	Identifier	status		1135305	1					
ANR	1135377	IfStatement	if ( status != ProcessId :: SUCCESS )		1135305	2					
ANR	1135378	Condition	status != ProcessId :: SUCCESS	178:7:5097:5124	1135305	0	True				
ANR	1135379	EqualityExpression	status != ProcessId :: SUCCESS		1135305	0		!=			
ANR	1135380	Identifier	status		1135305	0					
ANR	1135381	Identifier	ProcessId :: SUCCESS		1135305	1					
ANR	1135382	CompoundStatement		16:38:369:369	1135305	1					
ANR	1135383	Statement	debug_printf	179:3:5133:5144	1135305	0	True				
ANR	1135384	Statement	(	179:15:5145:5145	1135305	1	True				
ANR	1135385	Statement	DEBUG_QUIET	179:17:5147:5157	1135305	2	True				
ANR	1135386	Statement	","	179:28:5158:5158	1135305	3	True				
ANR	1135387	Statement	"""ERROR: unable to create ProcessId """	179:30:5160:5195	1135305	4	True				
ANR	1135388	Statement	"""object from lock file %s\\n"""	180:6:5203:5230	1135305	5	True				
ANR	1135389	Statement	","	180:34:5231:5231	1135305	6	True				
ANR	1135390	Statement	lockFileName	180:36:5233:5244	1135305	7	True				
ANR	1135391	Statement	)	180:49:5246:5246	1135305	8	True				
ANR	1135392	ExpressionStatement		180:50:5247:5247	1135305	9	True				
ANR	1135393	ExpressionStatement	result = - 1	181:3:5252:5263	1135305	10	True				
ANR	1135394	AssignmentExpression	result = - 1		1135305	0		=			
ANR	1135395	Identifier	result		1135305	0					
ANR	1135396	UnaryOperationExpression	- 1		1135305	1					
ANR	1135397	UnaryOperator	-		1135305	0					
ANR	1135398	PrimaryExpression	1		1135305	1					
ANR	1135399	IfStatement	if ( result != - 1 )		1135305	5					
ANR	1135400	Condition	result != - 1	185:6:5279:5290	1135305	0	True				
ANR	1135401	EqualityExpression	result != - 1		1135305	0		!=			
ANR	1135402	Identifier	result		1135305	0					
ANR	1135403	UnaryOperationExpression	- 1		1135305	1					
ANR	1135404	UnaryOperator	-		1135305	0					
ANR	1135405	PrimaryExpression	1		1135305	1					
ANR	1135406	CompoundStatement		25:2:553:606	1135305	1					
ANR	1135407	IdentifierDeclStatement	int status ;	186:2:5298:5308	1135305	0	True				
ANR	1135408	IdentifierDecl	status		1135305	0					
ANR	1135409	IdentifierDeclType	int		1135305	0					
ANR	1135410	Identifier	status		1135305	1					
ANR	1135411	IdentifierDeclStatement	"int aliveResult = ProcAPI :: isAlive ( * procId , status ) ;"	187:2:5312:5365	1135305	1	True				
ANR	1135412	IdentifierDecl	"aliveResult = ProcAPI :: isAlive ( * procId , status )"		1135305	0					
ANR	1135413	IdentifierDeclType	int		1135305	0					
ANR	1135414	Identifier	aliveResult		1135305	1					
ANR	1135415	AssignmentExpression	"aliveResult = ProcAPI :: isAlive ( * procId , status )"		1135305	2		=			
ANR	1135416	Identifier	aliveResult		1135305	0					
ANR	1135417	CallExpression	"ProcAPI :: isAlive ( * procId , status )"		1135305	1					
ANR	1135418	Callee	ProcAPI :: isAlive		1135305	0					
ANR	1135419	Identifier	ProcAPI :: isAlive		1135305	0					
ANR	1135420	ArgumentList	* procId		1135305	1					
ANR	1135421	Argument	* procId		1135305	0					
ANR	1135422	UnaryOperationExpression	* procId		1135305	0					
ANR	1135423	UnaryOperator	*		1135305	0					
ANR	1135424	Identifier	procId		1135305	1					
ANR	1135425	Argument	status		1135305	1					
ANR	1135426	Identifier	status		1135305	0					
ANR	1135427	IfStatement	if ( aliveResult != PROCAPI_SUCCESS )		1135305	2					
ANR	1135428	Condition	aliveResult != PROCAPI_SUCCESS	188:7:5374:5403	1135305	0	True				
ANR	1135429	EqualityExpression	aliveResult != PROCAPI_SUCCESS		1135305	0		!=			
ANR	1135430	Identifier	aliveResult		1135305	0					
ANR	1135431	Identifier	PROCAPI_SUCCESS		1135305	1					
ANR	1135432	CompoundStatement		26:40:648:648	1135305	1					
ANR	1135433	Statement	debug_printf	189:3:5412:5423	1135305	0	True				
ANR	1135434	Statement	(	189:15:5424:5424	1135305	1	True				
ANR	1135435	Statement	DEBUG_QUIET	189:17:5426:5436	1135305	2	True				
ANR	1135436	Statement	","	189:28:5437:5437	1135305	3	True				
ANR	1135437	Statement	"""ERROR: failed to determine """	189:30:5439:5467	1135305	4	True				
ANR	1135438	Statement	"""whether DAGMan that wrote lock file is alive\\n"""	190:6:5475:5522	1135305	5	True				
ANR	1135439	Statement	)	190:55:5524:5524	1135305	6	True				
ANR	1135440	ExpressionStatement		190:56:5525:5525	1135305	7	True				
ANR	1135441	ExpressionStatement	result = - 1	191:3:5530:5541	1135305	8	True				
ANR	1135442	AssignmentExpression	result = - 1		1135305	0		=			
ANR	1135443	Identifier	result		1135305	0					
ANR	1135444	UnaryOperationExpression	- 1		1135305	1					
ANR	1135445	UnaryOperator	-		1135305	0					
ANR	1135446	PrimaryExpression	1		1135305	1					
ANR	1135447	ElseStatement	else		1135305	0					
ANR	1135448	CompoundStatement		30:9:793:793	1135305	0					
ANR	1135449	IfStatement	if ( status == PROCAPI_ALIVE )		1135305	0					
ANR	1135450	Condition	status == PROCAPI_ALIVE	194:8:5563:5585	1135305	0	True				
ANR	1135451	EqualityExpression	status == PROCAPI_ALIVE		1135305	0		==			
ANR	1135452	Identifier	status		1135305	0					
ANR	1135453	Identifier	PROCAPI_ALIVE		1135305	1					
ANR	1135454	CompoundStatement		32:34:830:830	1135305	1					
ANR	1135455	Statement	debug_printf	195:4:5595:5606	1135305	0	True				
ANR	1135456	Statement	(	195:16:5607:5607	1135305	1	True				
ANR	1135457	Statement	DEBUG_NORMAL	195:18:5609:5620	1135305	2	True				
ANR	1135458	Statement	","	195:30:5621:5621	1135305	3	True				
ANR	1135459	Statement	"""Duplicate DAGMan PID %d is alive; this DAGMan """	196:6:5629:5676	1135305	4	True				
ANR	1135460	Statement	"""should abort.\\n"""	197:6:5684:5700	1135305	5	True				
ANR	1135461	Statement	","	197:23:5701:5701	1135305	6	True				
ANR	1135462	Statement	procId	197:25:5703:5708	1135305	7	True				
ANR	1135463	Statement	->	197:31:5709:5710	1135305	8	True				
ANR	1135464	Statement	getPid	197:33:5711:5716	1135305	9	True				
ANR	1135465	Statement	(	197:39:5717:5717	1135305	10	True				
ANR	1135466	Statement	)	197:40:5718:5718	1135305	11	True				
ANR	1135467	Statement	)	197:42:5720:5720	1135305	12	True				
ANR	1135468	ExpressionStatement		197:43:5721:5721	1135305	13	True				
ANR	1135469	ExpressionStatement	result = 1	198:4:5727:5737	1135305	14	True				
ANR	1135470	AssignmentExpression	result = 1		1135305	0		=			
ANR	1135471	Identifier	result		1135305	0					
ANR	1135472	PrimaryExpression	1		1135305	1					
ANR	1135473	ElseStatement	else		1135305	0					
ANR	1135474	IfStatement	if ( status == PROCAPI_DEAD )		1135305	0					
ANR	1135475	Condition	status == PROCAPI_DEAD	200:15:5755:5776	1135305	0	True				
ANR	1135476	EqualityExpression	status == PROCAPI_DEAD		1135305	0		==			
ANR	1135477	Identifier	status		1135305	0					
ANR	1135478	Identifier	PROCAPI_DEAD		1135305	1					
ANR	1135479	CompoundStatement		38:40:1021:1021	1135305	1					
ANR	1135480	Statement	debug_printf	201:4:5786:5797	1135305	0	True				
ANR	1135481	Statement	(	201:16:5798:5798	1135305	1	True				
ANR	1135482	Statement	DEBUG_NORMAL	201:18:5800:5811	1135305	2	True				
ANR	1135483	Statement	","	201:30:5812:5812	1135305	3	True				
ANR	1135484	Statement	"""Duplicate DAGMan PID %d is no longer alive; """	202:6:5820:5865	1135305	4	True				
ANR	1135485	Statement	"""this DAGMan should continue.\\n"""	203:6:5873:5904	1135305	5	True				
ANR	1135486	Statement	","	203:38:5905:5905	1135305	6	True				
ANR	1135487	Statement	procId	204:6:5913:5918	1135305	7	True				
ANR	1135488	Statement	->	204:12:5919:5920	1135305	8	True				
ANR	1135489	Statement	getPid	204:14:5921:5926	1135305	9	True				
ANR	1135490	Statement	(	204:20:5927:5927	1135305	10	True				
ANR	1135491	Statement	)	204:21:5928:5928	1135305	11	True				
ANR	1135492	Statement	)	204:23:5930:5930	1135305	12	True				
ANR	1135493	ExpressionStatement		204:24:5931:5931	1135305	13	True				
ANR	1135494	ExpressionStatement	result = 0	205:4:5937:5947	1135305	14	True				
ANR	1135495	AssignmentExpression	result = 0		1135305	0		=			
ANR	1135496	Identifier	result		1135305	0					
ANR	1135497	PrimaryExpression	0		1135305	1					
ANR	1135498	ElseStatement	else		1135305	0					
ANR	1135499	IfStatement	if ( status == PROCAPI_UNCERTAIN )		1135305	0					
ANR	1135500	Condition	status == PROCAPI_UNCERTAIN	207:15:5965:5991	1135305	0	True				
ANR	1135501	EqualityExpression	status == PROCAPI_UNCERTAIN		1135305	0		==			
ANR	1135502	Identifier	status		1135305	0					
ANR	1135503	Identifier	PROCAPI_UNCERTAIN		1135305	1					
ANR	1135504	CompoundStatement		45:45:1236:1236	1135305	1					
ANR	1135505	Statement	debug_printf	208:4:6001:6012	1135305	0	True				
ANR	1135506	Statement	(	208:16:6013:6013	1135305	1	True				
ANR	1135507	Statement	DEBUG_NORMAL	208:18:6015:6026	1135305	2	True				
ANR	1135508	Statement	","	208:30:6027:6027	1135305	3	True				
ANR	1135509	Statement	"""Duplicate DAGMan PID %d *may* be alive; this """	209:6:6035:6081	1135305	4	True				
ANR	1135510	Statement	"""DAGMan is continuing, but this will cause """	210:6:6089:6132	1135305	5	True				
ANR	1135511	Statement	"""problems if the duplicate DAGMan is alive.\\n"""	211:6:6140:6185	1135305	6	True				
ANR	1135512	Statement	","	211:52:6186:6186	1135305	7	True				
ANR	1135513	Statement	procId	212:6:6194:6199	1135305	8	True				
ANR	1135514	Statement	->	212:12:6200:6201	1135305	9	True				
ANR	1135515	Statement	getPid	212:14:6202:6207	1135305	10	True				
ANR	1135516	Statement	(	212:20:6208:6208	1135305	11	True				
ANR	1135517	Statement	)	212:21:6209:6209	1135305	12	True				
ANR	1135518	Statement	)	212:23:6211:6211	1135305	13	True				
ANR	1135519	ExpressionStatement		212:24:6212:6212	1135305	14	True				
ANR	1135520	ExpressionStatement	result = 0	213:4:6218:6228	1135305	15	True				
ANR	1135521	AssignmentExpression	result = 0		1135305	0		=			
ANR	1135522	Identifier	result		1135305	0					
ANR	1135523	PrimaryExpression	0		1135305	1					
ANR	1135524	ElseStatement	else		1135305	0					
ANR	1135525	CompoundStatement		53:10:1482:1482	1135305	0					
ANR	1135526	ExpressionStatement	"EXCEPT ( ""Illegal ProcAPI::isAlive() status value: %d"" , status )"	216:4:6247:6317	1135305	0	True				
ANR	1135527	CallExpression	"EXCEPT ( ""Illegal ProcAPI::isAlive() status value: %d"" , status )"		1135305	0					
ANR	1135528	Callee	EXCEPT		1135305	0					
ANR	1135529	Identifier	EXCEPT		1135305	0					
ANR	1135530	ArgumentList	"""Illegal ProcAPI::isAlive() status value: %d"""		1135305	1					
ANR	1135531	Argument	"""Illegal ProcAPI::isAlive() status value: %d"""		1135305	0					
ANR	1135532	PrimaryExpression	"""Illegal ProcAPI::isAlive() status value: %d"""		1135305	0					
ANR	1135533	Argument	status		1135305	1					
ANR	1135534	Identifier	status		1135305	0					
ANR	1135535	Statement	delete	222:1:6333:6338	1135305	6	True				
ANR	1135536	ExpressionStatement	procId	222:8:6340:6346	1135305	7	True				
ANR	1135537	Identifier	procId		1135305	0					
ANR	1135538	IfStatement	if ( fp != NULL )		1135305	8					
ANR	1135539	Condition	fp != NULL	224:6:6355:6364	1135305	0	True				
ANR	1135540	EqualityExpression	fp != NULL		1135305	0		!=			
ANR	1135541	Identifier	fp		1135305	0					
ANR	1135542	Identifier	NULL		1135305	1					
ANR	1135543	CompoundStatement		62:19:1609:1609	1135305	1					
ANR	1135544	IfStatement	if ( fclose ( fp ) != 0 )		1135305	0					
ANR	1135545	Condition	fclose ( fp ) != 0	225:7:6377:6393	1135305	0	True				
ANR	1135546	EqualityExpression	fclose ( fp ) != 0		1135305	0		!=			
ANR	1135547	CallExpression	fclose ( fp )		1135305	0					
ANR	1135548	Callee	fclose		1135305	0					
ANR	1135549	Identifier	fclose		1135305	0					
ANR	1135550	ArgumentList	fp		1135305	1					
ANR	1135551	Argument	fp		1135305	0					
ANR	1135552	Identifier	fp		1135305	0					
ANR	1135553	PrimaryExpression	0		1135305	1					
ANR	1135554	CompoundStatement		63:27:1638:1638	1135305	1					
ANR	1135555	Statement	debug_printf	226:3:6402:6413	1135305	0	True				
ANR	1135556	Statement	(	226:15:6414:6414	1135305	1	True				
ANR	1135557	Statement	DEBUG_QUIET	226:17:6416:6426	1135305	2	True				
ANR	1135558	Statement	","	226:28:6427:6427	1135305	3	True				
ANR	1135559	Statement	"""ERROR: closing lock """	226:30:6429:6450	1135305	4	True				
ANR	1135560	Statement	"""file failed with errno %d (%s)\\n"""	227:6:6458:6491	1135305	5	True				
ANR	1135561	Statement	","	227:40:6492:6492	1135305	6	True				
ANR	1135562	Statement	errno	227:42:6494:6498	1135305	7	True				
ANR	1135563	Statement	","	227:47:6499:6499	1135305	8	True				
ANR	1135564	Statement	strerror	228:6:6507:6514	1135305	9	True				
ANR	1135565	Statement	(	228:14:6515:6515	1135305	10	True				
ANR	1135566	Statement	errno	228:16:6517:6521	1135305	11	True				
ANR	1135567	Statement	)	228:22:6523:6523	1135305	12	True				
ANR	1135568	Statement	)	228:24:6525:6525	1135305	13	True				
ANR	1135569	ExpressionStatement		228:25:6526:6526	1135305	14	True				
ANR	1135570	ReturnStatement	return result ;	232:1:6537:6550	1135305	9	True				
ANR	1135571	Identifier	result		1135305	0					
ANR	1135572	ReturnType	int		1135305	1					
ANR	1135573	Identifier	util_check_lock_file		1135305	2					
ANR	1135574	ParameterList	const char * lockFileName		1135305	3					
ANR	1135575	Parameter	const char * lockFileName	163:25:4732:4755	1135305	0	True				
ANR	1135576	ParameterType	const char *		1135305	0					
ANR	1135577	Identifier	lockFileName		1135305	1					
ANR	1135578	CFGEntryNode	ENTRY		1135305		True				
ANR	1135579	CFGExitNode	EXIT		1135305		True				
ANR	1135580	Symbol	PROCAPI_UNCERTAIN		1135305						
ANR	1135581	Symbol	NULL		1135305						
ANR	1135582	Symbol	fclose		1135305						
ANR	1135583	Symbol	procId		1135305						
ANR	1135584	Symbol	PROCAPI_SUCCESS		1135305						
ANR	1135585	Symbol	fp		1135305						
ANR	1135586	Symbol	ProcAPI :: isAlive		1135305						
ANR	1135587	Symbol	aliveResult		1135305						
ANR	1135588	Symbol	lockFileName		1135305						
ANR	1135589	Symbol	DEBUG_QUIET		1135305						
ANR	1135590	Symbol	PROCAPI_ALIVE		1135305						
ANR	1135591	Symbol	result		1135305						
ANR	1135592	Symbol	* procId		1135305						
ANR	1135593	Symbol	PROCAPI_DEAD		1135305						
ANR	1135594	Symbol	safe_fopen_wrapper_follow		1135305						
ANR	1135595	Symbol	status		1135305						
ANR	1135596	Symbol	ProcessId :: SUCCESS		1135305						
