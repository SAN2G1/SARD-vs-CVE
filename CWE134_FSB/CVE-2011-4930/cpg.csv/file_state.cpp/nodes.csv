command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1322792	File	data/converged/CVE-2011-4930_htcondor/file_state.cpp								
ANR	1322793	DeclStmt									
ANR	1322794	Decl							int	"int ( char * name , long long open_count , long long read_count , long long write_count , long long seek_count , long long read_bytes , long long write_bytes )"	REMOTE_CONDOR_report_file_info_new
ANR	1322795	DeclStmt									
ANR	1322796	Decl							int	"int ( char * logical_name , char * & actual_url )"	REMOTE_CONDOR_get_file_info_new
ANR	1322797	DeclStmt									
ANR	1322798	Decl							int	"int ( int * bytes , int * block_size , int * prefetch_size )"	REMOTE_CONDOR_get_buffer_info
ANR	1322799	DeclStmt									
ANR	1322800	Decl							int	int ( const char * path )	REMOTE_CONDOR_chdir
ANR	1322801	DeclStmt									
ANR	1322802	Decl							CondorFileTable	CondorFileTable *	FileTab
ANR	1322803	ClassDef	CondorFileInfo	66:0:2173:3055							
ANR	1322804	Function	CondorFileInfo	68:1:2205:2393							
ANR	1322805	FunctionDef	CondorFileInfo (char * n)		1322804	0					
ANR	1322806	CompoundStatement		68:27:2231:2393	1322804	0					
ANR	1322807	ExpressionStatement	info_name = strdup ( n )	69:2:2235:2256	1322804	0	True				
ANR	1322808	AssignmentExpression	info_name = strdup ( n )		1322804	0		=			
ANR	1322809	Identifier	info_name		1322804	0					
ANR	1322810	CallExpression	strdup ( n )		1322804	1					
ANR	1322811	Callee	strdup		1322804	0					
ANR	1322812	Identifier	strdup		1322804	0					
ANR	1322813	ArgumentList	n		1322804	1					
ANR	1322814	Argument	n		1322804	0					
ANR	1322815	Identifier	n		1322804	0					
ANR	1322816	ExpressionStatement	open_count = 0	70:2:2260:2274	1322804	1	True				
ANR	1322817	AssignmentExpression	open_count = 0		1322804	0		=			
ANR	1322818	Identifier	open_count		1322804	0					
ANR	1322819	PrimaryExpression	0		1322804	1					
ANR	1322820	ExpressionStatement	read_count = read_bytes = 0	71:2:2278:2305	1322804	2	True				
ANR	1322821	AssignmentExpression	read_count = read_bytes = 0		1322804	0		=			
ANR	1322822	Identifier	read_count		1322804	0					
ANR	1322823	AssignmentExpression	read_bytes = 0		1322804	1		=			
ANR	1322824	Identifier	read_bytes		1322804	0					
ANR	1322825	PrimaryExpression	0		1322804	1					
ANR	1322826	ExpressionStatement	write_count = write_bytes = 0	72:2:2309:2338	1322804	3	True				
ANR	1322827	AssignmentExpression	write_count = write_bytes = 0		1322804	0		=			
ANR	1322828	Identifier	write_count		1322804	0					
ANR	1322829	AssignmentExpression	write_bytes = 0		1322804	1		=			
ANR	1322830	Identifier	write_bytes		1322804	0					
ANR	1322831	PrimaryExpression	0		1322804	1					
ANR	1322832	ExpressionStatement	seek_count = 0	73:2:2342:2356	1322804	4	True				
ANR	1322833	AssignmentExpression	seek_count = 0		1322804	0		=			
ANR	1322834	Identifier	seek_count		1322804	0					
ANR	1322835	PrimaryExpression	0		1322804	1					
ANR	1322836	ExpressionStatement	already_warned = 0	74:2:2360:2378	1322804	5	True				
ANR	1322837	AssignmentExpression	already_warned = 0		1322804	0		=			
ANR	1322838	Identifier	already_warned		1322804	0					
ANR	1322839	PrimaryExpression	0		1322804	1					
ANR	1322840	ExpressionStatement	next = 0	75:2:2382:2390	1322804	6	True				
ANR	1322841	AssignmentExpression	next = 0		1322804	0		=			
ANR	1322842	Identifier	next		1322804	0					
ANR	1322843	PrimaryExpression	0		1322804	1					
ANR	1322844	Identifier	CondorFileInfo		1322804	1					
ANR	1322845	ParameterList	char * n		1322804	2					
ANR	1322846	Parameter	char * n	68:17:2221:2227	1322804	0	True				
ANR	1322847	ParameterType	char *		1322804	0					
ANR	1322848	Identifier	n		1322804	1					
ANR	1322849	CFGEntryNode	ENTRY		1322804		True				
ANR	1322850	CFGExitNode	EXIT		1322804		True				
ANR	1322851	Symbol	next		1322804						
ANR	1322852	Symbol	write_bytes		1322804						
ANR	1322853	Symbol	write_count		1322804						
ANR	1322854	Symbol	info_name		1322804						
ANR	1322855	Symbol	open_count		1322804						
ANR	1322856	Symbol	seek_count		1322804						
ANR	1322857	Symbol	strdup		1322804						
ANR	1322858	Symbol	already_warned		1322804						
ANR	1322859	Symbol	read_bytes		1322804						
ANR	1322860	Symbol	n		1322804						
ANR	1322861	Symbol	read_count		1322804						
ANR	1322862	Function	~CondorFileInfo	77:1:2396:2438							
ANR	1322863	FunctionDef	~CondorFileInfo ()		1322862	1					
ANR	1322864	CompoundStatement		77:19:2414:2438	1322862	0					
ANR	1322865	ExpressionStatement	free ( info_name )	78:2:2418:2435	1322862	0	True				
ANR	1322866	CallExpression	free ( info_name )		1322862	0					
ANR	1322867	Callee	free		1322862	0					
ANR	1322868	Identifier	free		1322862	0					
ANR	1322869	ArgumentList	info_name		1322862	1					
ANR	1322870	Argument	info_name		1322862	0					
ANR	1322871	Identifier	info_name		1322862	0					
ANR	1322872	Identifier	~CondorFileInfo		1322862	1					
ANR	1322873	ParameterList			1322862	2					
ANR	1322874	CFGEntryNode	ENTRY		1322862		True				
ANR	1322875	CFGExitNode	EXIT		1322862		True				
ANR	1322876	Symbol	info_name		1322862						
ANR	1322877	Function	report	81:1:2442:2621							
ANR	1322878	FunctionDef	report ()		1322877	2					
ANR	1322879	CompoundStatement		81:15:2456:2621	1322877	0					
ANR	1322880	IfStatement	if ( RemoteSysCalls ( ) )		1322877	0					
ANR	1322881	Condition	RemoteSysCalls ( )	82:6:2464:2479	1322877	0	True				
ANR	1322882	CallExpression	RemoteSysCalls ( )		1322877	0					
ANR	1322883	Callee	RemoteSysCalls		1322877	0					
ANR	1322884	Identifier	RemoteSysCalls		1322877	0					
ANR	1322885	ArgumentList			1322877	1					
ANR	1322886	CompoundStatement		2:25:26:26	1322877	1					
ANR	1322887	ExpressionStatement	"REMOTE_CONDOR_report_file_info_new ( info_name , open_count , read_count , write_count , seek_count , read_bytes , write_bytes )"	83:3:2488:2614	1322877	0	True				
ANR	1322888	CallExpression	"REMOTE_CONDOR_report_file_info_new ( info_name , open_count , read_count , write_count , seek_count , read_bytes , write_bytes )"		1322877	0					
ANR	1322889	Callee	REMOTE_CONDOR_report_file_info_new		1322877	0					
ANR	1322890	Identifier	REMOTE_CONDOR_report_file_info_new		1322877	0					
ANR	1322891	ArgumentList	info_name		1322877	1					
ANR	1322892	Argument	info_name		1322877	0					
ANR	1322893	Identifier	info_name		1322877	0					
ANR	1322894	Argument	open_count		1322877	1					
ANR	1322895	Identifier	open_count		1322877	0					
ANR	1322896	Argument	read_count		1322877	2					
ANR	1322897	Identifier	read_count		1322877	0					
ANR	1322898	Argument	write_count		1322877	3					
ANR	1322899	Identifier	write_count		1322877	0					
ANR	1322900	Argument	seek_count		1322877	4					
ANR	1322901	Identifier	seek_count		1322877	0					
ANR	1322902	Argument	read_bytes		1322877	5					
ANR	1322903	Identifier	read_bytes		1322877	0					
ANR	1322904	Argument	write_bytes		1322877	6					
ANR	1322905	Identifier	write_bytes		1322877	0					
ANR	1322906	ReturnType	void		1322877	1					
ANR	1322907	Identifier	report		1322877	2					
ANR	1322908	ParameterList			1322877	3					
ANR	1322909	CFGEntryNode	ENTRY		1322877		True				
ANR	1322910	CFGExitNode	EXIT		1322877		True				
ANR	1322911	Symbol	RemoteSysCalls		1322877						
ANR	1322912	Symbol	write_bytes		1322877						
ANR	1322913	Symbol	write_count		1322877						
ANR	1322914	Symbol	seek_count		1322877						
ANR	1322915	Symbol	info_name		1322877						
ANR	1322916	Symbol	open_count		1322877						
ANR	1322917	Symbol	read_bytes		1322877						
ANR	1322918	Symbol	read_count		1322877						
ANR	1322919	DeclStmt									
ANR	1322920	Decl							char	char *	info_name
ANR	1322921	DeclStmt									
ANR	1322922	Decl							long long	long long	open_count
ANR	1322923	DeclStmt									
ANR	1322924	Decl							long long	long long	read_count
ANR	1322925	Decl							long long	long long	read_bytes
ANR	1322926	DeclStmt									
ANR	1322927	Decl							long long	long long	write_count
ANR	1322928	Decl							long long	long long	write_bytes
ANR	1322929	DeclStmt									
ANR	1322930	Decl							long long	long long	seek_count
ANR	1322931	DeclStmt									
ANR	1322932	Decl							int	int	already_warned
ANR	1322933	DeclStmt									
ANR	1322934	Decl							CondorFileInfo	CondorFileInfo *	next
ANR	1322935	ClassDef	CondorFilePointer	114:0:3424:3759							
ANR	1322936	Function	CondorFilePointer	116:1:3459:3615							
ANR	1322937	FunctionDef	"CondorFilePointer (CondorFile * f , CondorFileInfo * i , int fl , char * n)"		1322936	0					
ANR	1322938	CompoundStatement		116:72:3530:3615	1322936	0					
ANR	1322939	ExpressionStatement	file = f	117:2:3534:3542	1322936	0	True				
ANR	1322940	AssignmentExpression	file = f		1322936	0		=			
ANR	1322941	Identifier	file		1322936	0					
ANR	1322942	Identifier	f		1322936	1					
ANR	1322943	ExpressionStatement	info = i	118:2:3546:3554	1322936	1	True				
ANR	1322944	AssignmentExpression	info = i		1322936	0		=			
ANR	1322945	Identifier	info		1322936	0					
ANR	1322946	Identifier	i		1322936	1					
ANR	1322947	ExpressionStatement	flags = fl	119:2:3558:3568	1322936	2	True				
ANR	1322948	AssignmentExpression	flags = fl		1322936	0		=			
ANR	1322949	Identifier	flags		1322936	0					
ANR	1322950	Identifier	fl		1322936	1					
ANR	1322951	ExpressionStatement	offset = 0	120:2:3572:3582	1322936	3	True				
ANR	1322952	AssignmentExpression	offset = 0		1322936	0		=			
ANR	1322953	Identifier	offset		1322936	0					
ANR	1322954	PrimaryExpression	0		1322936	1					
ANR	1322955	ExpressionStatement	logical_name = strdup ( n )	121:2:3586:3612	1322936	4	True				
ANR	1322956	AssignmentExpression	logical_name = strdup ( n )		1322936	0		=			
ANR	1322957	Identifier	logical_name		1322936	0					
ANR	1322958	CallExpression	strdup ( n )		1322936	1					
ANR	1322959	Callee	strdup		1322936	0					
ANR	1322960	Identifier	strdup		1322936	0					
ANR	1322961	ArgumentList	n		1322936	1					
ANR	1322962	Argument	n		1322936	0					
ANR	1322963	Identifier	n		1322936	0					
ANR	1322964	Identifier	CondorFilePointer		1322936	1					
ANR	1322965	ParameterList	"CondorFile * f , CondorFileInfo * i , int fl , char * n"		1322936	2					
ANR	1322966	Parameter	CondorFile * f	116:20:3478:3490	1322936	0	True				
ANR	1322967	ParameterType	CondorFile *		1322936	0					
ANR	1322968	Identifier	f		1322936	1					
ANR	1322969	Parameter	CondorFileInfo * i	116:35:3493:3509	1322936	1	True				
ANR	1322970	ParameterType	CondorFileInfo *		1322936	0					
ANR	1322971	Identifier	i		1322936	1					
ANR	1322972	Parameter	int fl	116:54:3512:3517	1322936	2	True				
ANR	1322973	ParameterType	int		1322936	0					
ANR	1322974	Identifier	fl		1322936	1					
ANR	1322975	Parameter	char * n	116:62:3520:3526	1322936	3	True				
ANR	1322976	ParameterType	char *		1322936	0					
ANR	1322977	Identifier	n		1322936	1					
ANR	1322978	CFGEntryNode	ENTRY		1322936		True				
ANR	1322979	CFGExitNode	EXIT		1322936		True				
ANR	1322980	Symbol	logical_name		1322936						
ANR	1322981	Symbol	file		1322936						
ANR	1322982	Symbol	offset		1322936						
ANR	1322983	Symbol	f		1322936						
ANR	1322984	Symbol	fl		1322936						
ANR	1322985	Symbol	flags		1322936						
ANR	1322986	Symbol	i		1322936						
ANR	1322987	Symbol	strdup		1322936						
ANR	1322988	Symbol	n		1322936						
ANR	1322989	Symbol	info		1322936						
ANR	1322990	Function	~CondorFilePointer	123:1:3618:3666							
ANR	1322991	FunctionDef	~CondorFilePointer ()		1322990	1					
ANR	1322992	CompoundStatement		123:22:3639:3666	1322990	0					
ANR	1322993	ExpressionStatement	free ( logical_name )	124:2:3643:3663	1322990	0	True				
ANR	1322994	CallExpression	free ( logical_name )		1322990	0					
ANR	1322995	Callee	free		1322990	0					
ANR	1322996	Identifier	free		1322990	0					
ANR	1322997	ArgumentList	logical_name		1322990	1					
ANR	1322998	Argument	logical_name		1322990	0					
ANR	1322999	Identifier	logical_name		1322990	0					
ANR	1323000	Identifier	~CondorFilePointer		1322990	1					
ANR	1323001	ParameterList			1322990	2					
ANR	1323002	CFGEntryNode	ENTRY		1322990		True				
ANR	1323003	CFGExitNode	EXIT		1322990		True				
ANR	1323004	Symbol	logical_name		1322990						
ANR	1323005	DeclStmt									
ANR	1323006	Decl							CondorFile	CondorFile *	file
ANR	1323007	DeclStmt									
ANR	1323008	Decl							CondorFileInfo	CondorFileInfo *	info
ANR	1323009	DeclStmt									
ANR	1323010	Decl							int	int	flags
ANR	1323011	DeclStmt									
ANR	1323012	Decl							off_t	off_t	offset
ANR	1323013	DeclStmt									
ANR	1323014	Decl							char	char *	logical_name
ANR	1323015	Function	_condor_file_table_shutdown	143:0:4208:4311							
ANR	1323016	FunctionDef	_condor_file_table_shutdown ()		1323015	0					
ANR	1323017	CompoundStatement		144:0:4250:4311	1323015	0					
ANR	1323018	ExpressionStatement	fflush ( 0 )	145:1:4253:4262	1323015	0	True				
ANR	1323019	CallExpression	fflush ( 0 )		1323015	0					
ANR	1323020	Callee	fflush		1323015	0					
ANR	1323021	Identifier	fflush		1323015	0					
ANR	1323022	ArgumentList	0		1323015	1					
ANR	1323023	Argument	0		1323015	0					
ANR	1323024	PrimaryExpression	0		1323015	0					
ANR	1323025	ExpressionStatement	FileTab -> close_all ( )	146:1:4265:4285	1323015	1	True				
ANR	1323026	CallExpression	FileTab -> close_all ( )		1323015	0					
ANR	1323027	Callee	FileTab -> close_all		1323015	0					
ANR	1323028	PtrMemberAccess	FileTab -> close_all		1323015	0					
ANR	1323029	Identifier	FileTab		1323015	0					
ANR	1323030	Identifier	close_all		1323015	1					
ANR	1323031	ArgumentList			1323015	1					
ANR	1323032	ExpressionStatement	FileTab -> report_all ( )	147:1:4288:4309	1323015	2	True				
ANR	1323033	CallExpression	FileTab -> report_all ( )		1323015	0					
ANR	1323034	Callee	FileTab -> report_all		1323015	0					
ANR	1323035	PtrMemberAccess	FileTab -> report_all		1323015	0					
ANR	1323036	Identifier	FileTab		1323015	0					
ANR	1323037	Identifier	report_all		1323015	1					
ANR	1323038	ArgumentList			1323015	1					
ANR	1323039	ReturnType	static void		1323015	1					
ANR	1323040	Identifier	_condor_file_table_shutdown		1323015	2					
ANR	1323041	ParameterList			1323015	3					
ANR	1323042	CFGEntryNode	ENTRY		1323015		True				
ANR	1323043	CFGExitNode	EXIT		1323015		True				
ANR	1323044	Symbol	FileTab		1323015						
ANR	1323045	Function	CondorFileTable :: init	158:0:4608:5380							
ANR	1323046	FunctionDef	CondorFileTable :: init ()		1323045	0					
ANR	1323047	CompoundStatement		159:0:4637:5380	1323045	0					
ANR	1323048	ExpressionStatement	got_buffer_info = 0	160:1:4640:4659	1323045	0	True				
ANR	1323049	AssignmentExpression	got_buffer_info = 0		1323045	0		=			
ANR	1323050	Identifier	got_buffer_info		1323045	0					
ANR	1323051	PrimaryExpression	0		1323045	1					
ANR	1323052	ExpressionStatement	buffer_size = 0	161:1:4662:4677	1323045	1	True				
ANR	1323053	AssignmentExpression	buffer_size = 0		1323045	0		=			
ANR	1323054	Identifier	buffer_size		1323045	0					
ANR	1323055	PrimaryExpression	0		1323045	1					
ANR	1323056	ExpressionStatement	buffer_block_size = 0	162:1:4680:4701	1323045	2	True				
ANR	1323057	AssignmentExpression	buffer_block_size = 0		1323045	0		=			
ANR	1323058	Identifier	buffer_block_size		1323045	0					
ANR	1323059	PrimaryExpression	0		1323045	1					
ANR	1323060	ExpressionStatement	info_count = 0	163:1:4704:4718	1323045	3	True				
ANR	1323061	AssignmentExpression	info_count = 0		1323045	0		=			
ANR	1323062	Identifier	info_count		1323045	0					
ANR	1323063	PrimaryExpression	0		1323045	1					
ANR	1323064	ExpressionStatement	aggravate_mode = 0	164:1:4721:4739	1323045	4	True				
ANR	1323065	AssignmentExpression	aggravate_mode = 0		1323045	0		=			
ANR	1323066	Identifier	aggravate_mode		1323045	0					
ANR	1323067	PrimaryExpression	0		1323045	1					
ANR	1323068	IdentifierDeclStatement	int scm = SetSyscalls ( SYS_UNMAPPED | SYS_LOCAL ) ;	166:1:4743:4792	1323045	5	True				
ANR	1323069	IdentifierDecl	scm = SetSyscalls ( SYS_UNMAPPED | SYS_LOCAL )		1323045	0					
ANR	1323070	IdentifierDeclType	int		1323045	0					
ANR	1323071	Identifier	scm		1323045	1					
ANR	1323072	AssignmentExpression	scm = SetSyscalls ( SYS_UNMAPPED | SYS_LOCAL )		1323045	2		=			
ANR	1323073	Identifier	scm		1323045	0					
ANR	1323074	CallExpression	SetSyscalls ( SYS_UNMAPPED | SYS_LOCAL )		1323045	1					
ANR	1323075	Callee	SetSyscalls		1323045	0					
ANR	1323076	Identifier	SetSyscalls		1323045	0					
ANR	1323077	ArgumentList	SYS_UNMAPPED | SYS_LOCAL		1323045	1					
ANR	1323078	Argument	SYS_UNMAPPED | SYS_LOCAL		1323045	0					
ANR	1323079	InclusiveOrExpression	SYS_UNMAPPED | SYS_LOCAL		1323045	0		|			
ANR	1323080	Identifier	SYS_UNMAPPED		1323045	0					
ANR	1323081	Identifier	SYS_LOCAL		1323045	1					
ANR	1323082	ExpressionStatement	length = sysconf ( _SC_OPEN_MAX )	167:1:4795:4825	1323045	6	True				
ANR	1323083	AssignmentExpression	length = sysconf ( _SC_OPEN_MAX )		1323045	0		=			
ANR	1323084	Identifier	length		1323045	0					
ANR	1323085	CallExpression	sysconf ( _SC_OPEN_MAX )		1323045	1					
ANR	1323086	Callee	sysconf		1323045	0					
ANR	1323087	Identifier	sysconf		1323045	0					
ANR	1323088	ArgumentList	_SC_OPEN_MAX		1323045	1					
ANR	1323089	Argument	_SC_OPEN_MAX		1323045	0					
ANR	1323090	Identifier	_SC_OPEN_MAX		1323045	0					
ANR	1323091	ExpressionStatement	SetSyscalls ( scm )	168:1:4828:4844	1323045	7	True				
ANR	1323092	CallExpression	SetSyscalls ( scm )		1323045	0					
ANR	1323093	Callee	SetSyscalls		1323045	0					
ANR	1323094	Identifier	SetSyscalls		1323045	0					
ANR	1323095	ArgumentList	scm		1323045	1					
ANR	1323096	Argument	scm		1323045	0					
ANR	1323097	Identifier	scm		1323045	0					
ANR	1323098	Statement	pointers	170:1:4848:4855	1323045	8	True				
ANR	1323099	Statement	=	170:10:4857:4857	1323045	9	True				
ANR	1323100	Statement	new	170:12:4859:4861	1323045	10	True				
ANR	1323101	Statement	CondorFilePointer	170:16:4863:4879	1323045	11	True				
ANR	1323102	Statement	*	170:34:4881:4881	1323045	12	True				
ANR	1323103	Statement	[	170:35:4882:4882	1323045	13	True				
ANR	1323104	Statement	length	170:36:4883:4888	1323045	14	True				
ANR	1323105	Statement	]	170:42:4889:4889	1323045	15	True				
ANR	1323106	ExpressionStatement		170:43:4890:4890	1323045	16	True				
ANR	1323107	IfStatement	if ( ! pointers )		1323045	17					
ANR	1323108	Condition	! pointers	171:4:4896:4904	1323045	0	True				
ANR	1323109	UnaryOperationExpression	! pointers		1323045	0					
ANR	1323110	UnaryOperator	!		1323045	0					
ANR	1323111	Identifier	pointers		1323045	1					
ANR	1323112	CompoundStatement		13:15:269:269	1323045	1					
ANR	1323113	ExpressionStatement	"_condor_error_retry ( ""Out of memory!\\n"" )"	172:2:4911:4950	1323045	0	True				
ANR	1323114	CallExpression	"_condor_error_retry ( ""Out of memory!\\n"" )"		1323045	0					
ANR	1323115	Callee	_condor_error_retry		1323045	0					
ANR	1323116	Identifier	_condor_error_retry		1323045	0					
ANR	1323117	ArgumentList	"""Out of memory!\\n"""		1323045	1					
ANR	1323118	Argument	"""Out of memory!\\n"""		1323045	0					
ANR	1323119	PrimaryExpression	"""Out of memory!\\n"""		1323045	0					
ANR	1323120	ForStatement	for ( int i = 0 ; i < length ; i ++ )		1323045	18					
ANR	1323121	ForInit	int i = 0 ;	175:6:4962:4969	1323045	0	True				
ANR	1323122	IdentifierDeclStatement	int i = 0 ;		1323045	0					
ANR	1323123	IdentifierDecl	i = 0		1323045	0					
ANR	1323124	IdentifierDeclType	int		1323045	0					
ANR	1323125	Identifier	i		1323045	1					
ANR	1323126	AssignmentExpression	i = 0		1323045	2		=			
ANR	1323127	Identifier	i		1323045	0					
ANR	1323128	PrimaryExpression	0		1323045	1					
ANR	1323129	Condition	i < length	175:15:4971:4978	1323045	1	True				
ANR	1323130	RelationalExpression	i < length		1323045	0		<			
ANR	1323131	Identifier	i		1323045	0					
ANR	1323132	Identifier	length		1323045	1					
ANR	1323133	PostIncDecOperationExpression	i ++	175:25:4981:4983	1323045	2	True				
ANR	1323134	Identifier	i		1323045	0					
ANR	1323135	IncDec	++		1323045	1					
ANR	1323136	CompoundStatement		17:31:349:349	1323045	3					
ANR	1323137	ExpressionStatement	pointers [ i ] = 0	176:2:4991:5004	1323045	0	True				
ANR	1323138	AssignmentExpression	pointers [ i ] = 0		1323045	0		=			
ANR	1323139	ArrayIndexing	pointers [ i ]		1323045	0					
ANR	1323140	Identifier	pointers		1323045	0					
ANR	1323141	Identifier	i		1323045	1					
ANR	1323142	PrimaryExpression	0		1323045	1					
ANR	1323143	ExpressionStatement	info_head = 0	179:1:5011:5024	1323045	19	True				
ANR	1323144	AssignmentExpression	info_head = 0		1323045	0		=			
ANR	1323145	Identifier	info_head		1323045	0					
ANR	1323146	PrimaryExpression	0		1323045	1					
ANR	1323147	ExpressionStatement	"pointers [ 0 ] = new CondorFilePointer ( 0 , make_info ( ""default stdin"" ) , O_RDONLY , ""default stdin"" )"	181:1:5028:5118	1323045	20	True				
ANR	1323148	AssignmentExpression	"pointers [ 0 ] = new CondorFilePointer ( 0 , make_info ( ""default stdin"" ) , O_RDONLY , ""default stdin"" )"		1323045	0		=			
ANR	1323149	ArrayIndexing	pointers [ 0 ]		1323045	0					
ANR	1323150	Identifier	pointers		1323045	0					
ANR	1323151	PrimaryExpression	0		1323045	1					
ANR	1323152	Expression	"0 , make_info ( ""default stdin"" ) , O_RDONLY , ""default stdin"""		1323045	1					
ANR	1323153	PrimaryExpression	0		1323045	0					
ANR	1323154	Expression	"make_info ( ""default stdin"" ) , O_RDONLY , ""default stdin"""		1323045	1					
ANR	1323155	CallExpression	"make_info ( ""default stdin"" )"		1323045	0					
ANR	1323156	Callee	make_info		1323045	0					
ANR	1323157	Identifier	make_info		1323045	0					
ANR	1323158	ArgumentList	"""default stdin"""		1323045	1					
ANR	1323159	Argument	"""default stdin"""		1323045	0					
ANR	1323160	PrimaryExpression	"""default stdin"""		1323045	0					
ANR	1323161	Expression	"O_RDONLY , ""default stdin"""		1323045	1					
ANR	1323162	Identifier	O_RDONLY		1323045	0					
ANR	1323163	PrimaryExpression	"""default stdin"""		1323045	1					
ANR	1323164	ExpressionStatement	"pointers [ 1 ] = new CondorFilePointer ( 0 , make_info ( ""default stdout"" ) , O_WRONLY , ""default stdout"" )"	182:1:5121:5213	1323045	21	True				
ANR	1323165	AssignmentExpression	"pointers [ 1 ] = new CondorFilePointer ( 0 , make_info ( ""default stdout"" ) , O_WRONLY , ""default stdout"" )"		1323045	0		=			
ANR	1323166	ArrayIndexing	pointers [ 1 ]		1323045	0					
ANR	1323167	Identifier	pointers		1323045	0					
ANR	1323168	PrimaryExpression	1		1323045	1					
ANR	1323169	Expression	"0 , make_info ( ""default stdout"" ) , O_WRONLY , ""default stdout"""		1323045	1					
ANR	1323170	PrimaryExpression	0		1323045	0					
ANR	1323171	Expression	"make_info ( ""default stdout"" ) , O_WRONLY , ""default stdout"""		1323045	1					
ANR	1323172	CallExpression	"make_info ( ""default stdout"" )"		1323045	0					
ANR	1323173	Callee	make_info		1323045	0					
ANR	1323174	Identifier	make_info		1323045	0					
ANR	1323175	ArgumentList	"""default stdout"""		1323045	1					
ANR	1323176	Argument	"""default stdout"""		1323045	0					
ANR	1323177	PrimaryExpression	"""default stdout"""		1323045	0					
ANR	1323178	Expression	"O_WRONLY , ""default stdout"""		1323045	1					
ANR	1323179	Identifier	O_WRONLY		1323045	0					
ANR	1323180	PrimaryExpression	"""default stdout"""		1323045	1					
ANR	1323181	ExpressionStatement	"pointers [ 2 ] = new CondorFilePointer ( 0 , make_info ( ""default stderr"" ) , O_WRONLY , ""default stderr"" )"	183:1:5216:5308	1323045	22	True				
ANR	1323182	AssignmentExpression	"pointers [ 2 ] = new CondorFilePointer ( 0 , make_info ( ""default stderr"" ) , O_WRONLY , ""default stderr"" )"		1323045	0		=			
ANR	1323183	ArrayIndexing	pointers [ 2 ]		1323045	0					
ANR	1323184	Identifier	pointers		1323045	0					
ANR	1323185	PrimaryExpression	2		1323045	1					
ANR	1323186	Expression	"0 , make_info ( ""default stderr"" ) , O_WRONLY , ""default stderr"""		1323045	1					
ANR	1323187	PrimaryExpression	0		1323045	0					
ANR	1323188	Expression	"make_info ( ""default stderr"" ) , O_WRONLY , ""default stderr"""		1323045	1					
ANR	1323189	CallExpression	"make_info ( ""default stderr"" )"		1323045	0					
ANR	1323190	Callee	make_info		1323045	0					
ANR	1323191	Identifier	make_info		1323045	0					
ANR	1323192	ArgumentList	"""default stderr"""		1323045	1					
ANR	1323193	Argument	"""default stderr"""		1323045	0					
ANR	1323194	PrimaryExpression	"""default stderr"""		1323045	0					
ANR	1323195	Expression	"O_WRONLY , ""default stderr"""		1323045	1					
ANR	1323196	Identifier	O_WRONLY		1323045	0					
ANR	1323197	PrimaryExpression	"""default stderr"""		1323045	1					
ANR	1323198	ExpressionStatement	"working_dir = strdup ( ""."" )"	185:1:5312:5337	1323045	23	True				
ANR	1323199	AssignmentExpression	"working_dir = strdup ( ""."" )"		1323045	0		=			
ANR	1323200	Identifier	working_dir		1323045	0					
ANR	1323201	CallExpression	"strdup ( ""."" )"		1323045	1					
ANR	1323202	Callee	strdup		1323045	0					
ANR	1323203	Identifier	strdup		1323045	0					
ANR	1323204	ArgumentList	"""."""		1323045	1					
ANR	1323205	Argument	"""."""		1323045	0					
ANR	1323206	PrimaryExpression	"""."""		1323045	0					
ANR	1323207	ExpressionStatement	atexit ( _condor_file_table_shutdown )	187:1:5341:5378	1323045	24	True				
ANR	1323208	CallExpression	atexit ( _condor_file_table_shutdown )		1323045	0					
ANR	1323209	Callee	atexit		1323045	0					
ANR	1323210	Identifier	atexit		1323045	0					
ANR	1323211	ArgumentList	_condor_file_table_shutdown		1323045	1					
ANR	1323212	Argument	_condor_file_table_shutdown		1323045	0					
ANR	1323213	Identifier	_condor_file_table_shutdown		1323045	0					
ANR	1323214	ReturnType	void		1323045	1					
ANR	1323215	Identifier	CondorFileTable :: init		1323045	2					
ANR	1323216	ParameterList			1323045	3					
ANR	1323217	CFGEntryNode	ENTRY		1323045		True				
ANR	1323218	CFGExitNode	EXIT		1323045		True				
ANR	1323219	Symbol	buffer_block_size		1323045						
ANR	1323220	Symbol	SYS_UNMAPPED		1323045						
ANR	1323221	Symbol	working_dir		1323045						
ANR	1323222	Symbol	buffer_size		1323045						
ANR	1323223	Symbol	_condor_file_table_shutdown		1323045						
ANR	1323224	Symbol	info_count		1323045						
ANR	1323225	Symbol	length		1323045						
ANR	1323226	Symbol	i		1323045						
ANR	1323227	Symbol	_SC_OPEN_MAX		1323045						
ANR	1323228	Symbol	make_info		1323045						
ANR	1323229	Symbol	aggravate_mode		1323045						
ANR	1323230	Symbol	* pointers		1323045						
ANR	1323231	Symbol	info_head		1323045						
ANR	1323232	Symbol	* i		1323045						
ANR	1323233	Symbol	O_RDONLY		1323045						
ANR	1323234	Symbol	SYS_LOCAL		1323045						
ANR	1323235	Symbol	SetSyscalls		1323045						
ANR	1323236	Symbol	got_buffer_info		1323045						
ANR	1323237	Symbol	sysconf		1323045						
ANR	1323238	Symbol	strdup		1323045						
ANR	1323239	Symbol	scm		1323045						
ANR	1323240	Symbol	O_WRONLY		1323045						
ANR	1323241	Symbol	pointers		1323045						
ANR	1323242	Function	CondorFileTable :: flush	190:0:5383:5543							
ANR	1323243	FunctionDef	CondorFileTable :: flush ()		1323242	0					
ANR	1323244	CompoundStatement		191:0:5413:5543	1323242	0					
ANR	1323245	ForStatement	for ( int i = 0 ; i < length ; i ++ )		1323242	0					
ANR	1323246	ForInit	int i = 0 ;	192:6:5421:5428	1323242	0	True				
ANR	1323247	IdentifierDeclStatement	int i = 0 ;		1323242	0					
ANR	1323248	IdentifierDecl	i = 0		1323242	0					
ANR	1323249	IdentifierDeclType	int		1323242	0					
ANR	1323250	Identifier	i		1323242	1					
ANR	1323251	AssignmentExpression	i = 0		1323242	2		=			
ANR	1323252	Identifier	i		1323242	0					
ANR	1323253	PrimaryExpression	0		1323242	1					
ANR	1323254	Condition	i < length	192:15:5430:5437	1323242	1	True				
ANR	1323255	RelationalExpression	i < length		1323242	0		<			
ANR	1323256	Identifier	i		1323242	0					
ANR	1323257	Identifier	length		1323242	1					
ANR	1323258	PostIncDecOperationExpression	i ++	192:25:5440:5442	1323242	2	True				
ANR	1323259	Identifier	i		1323242	0					
ANR	1323260	IncDec	++		1323242	1					
ANR	1323261	CompoundStatement		2:31:32:32	1323242	3					
ANR	1323262	IfStatement	if ( pointers [ i ] )		1323242	0					
ANR	1323263	Condition	pointers [ i ]	193:6:5454:5464	1323242	0	True				
ANR	1323264	ArrayIndexing	pointers [ i ]		1323242	0					
ANR	1323265	Identifier	pointers		1323242	0					
ANR	1323266	Identifier	i		1323242	1					
ANR	1323267	CompoundStatement		3:20:54:54	1323242	1					
ANR	1323268	IfStatement	if ( pointers [ i ] -> file )		1323242	0					
ANR	1323269	Condition	pointers [ i ] -> file	194:7:5477:5493	1323242	0	True				
ANR	1323270	PtrMemberAccess	pointers [ i ] -> file		1323242	0					
ANR	1323271	ArrayIndexing	pointers [ i ]		1323242	0					
ANR	1323272	Identifier	pointers		1323242	0					
ANR	1323273	Identifier	i		1323242	1					
ANR	1323274	Identifier	file		1323242	1					
ANR	1323275	CompoundStatement		4:27:83:83	1323242	1					
ANR	1323276	ExpressionStatement	pointers [ i ] -> file -> flush ( )	195:4:5503:5529	1323242	0	True				
ANR	1323277	CallExpression	pointers [ i ] -> file -> flush ( )		1323242	0					
ANR	1323278	Callee	pointers [ i ] -> file -> flush		1323242	0					
ANR	1323279	PtrMemberAccess	pointers [ i ] -> file -> flush		1323242	0					
ANR	1323280	PtrMemberAccess	pointers [ i ] -> file		1323242	0					
ANR	1323281	ArrayIndexing	pointers [ i ]		1323242	0					
ANR	1323282	Identifier	pointers		1323242	0					
ANR	1323283	Identifier	i		1323242	1					
ANR	1323284	Identifier	file		1323242	1					
ANR	1323285	Identifier	flush		1323242	1					
ANR	1323286	ArgumentList			1323242	1					
ANR	1323287	ReturnType	void		1323242	1					
ANR	1323288	Identifier	CondorFileTable :: flush		1323242	2					
ANR	1323289	ParameterList			1323242	3					
ANR	1323290	CFGEntryNode	ENTRY		1323242		True				
ANR	1323291	CFGExitNode	EXIT		1323242		True				
ANR	1323292	Symbol	* * i		1323242						
ANR	1323293	Symbol	* i		1323242						
ANR	1323294	Symbol	pointers [ i ] -> file		1323242						
ANR	1323295	Symbol	length		1323242						
ANR	1323296	Symbol	i		1323242						
ANR	1323297	Symbol	* * pointers		1323242						
ANR	1323298	Symbol	pointers		1323242						
ANR	1323299	Symbol	* pointers		1323242						
ANR	1323300	Function	CondorFileTable :: report_all	201:0:5546:5658							
ANR	1323301	FunctionDef	CondorFileTable :: report_all ()		1323300	0					
ANR	1323302	CompoundStatement		202:0:5581:5658	1323300	0					
ANR	1323303	IdentifierDeclStatement	CondorFileInfo * i ;	203:1:5584:5601	1323300	0	True				
ANR	1323304	IdentifierDecl	* i		1323300	0					
ANR	1323305	IdentifierDeclType	CondorFileInfo *		1323300	0					
ANR	1323306	Identifier	i		1323300	1					
ANR	1323307	ForStatement	for ( i = info_head ; i ; i = i -> next )		1323300	1					
ANR	1323308	ForInit	i = info_head ;	205:6:5610:5621	1323300	0	True				
ANR	1323309	AssignmentExpression	i = info_head		1323300	0		=			
ANR	1323310	Identifier	i		1323300	0					
ANR	1323311	Identifier	info_head		1323300	1					
ANR	1323312	Condition	i	205:19:5623:5623	1323300	1	True				
ANR	1323313	Identifier	i		1323300	0					
ANR	1323314	AssignmentExpression	i = i -> next	205:22:5626:5634	1323300	2	True	=			
ANR	1323315	Identifier	i		1323300	0					
ANR	1323316	PtrMemberAccess	i -> next		1323300	1					
ANR	1323317	Identifier	i		1323300	0					
ANR	1323318	Identifier	next		1323300	1					
ANR	1323319	CompoundStatement		4:34:56:56	1323300	3					
ANR	1323320	ExpressionStatement	i -> report ( )	206:2:5642:5653	1323300	0	True				
ANR	1323321	CallExpression	i -> report ( )		1323300	0					
ANR	1323322	Callee	i -> report		1323300	0					
ANR	1323323	PtrMemberAccess	i -> report		1323300	0					
ANR	1323324	Identifier	i		1323300	0					
ANR	1323325	Identifier	report		1323300	1					
ANR	1323326	ArgumentList			1323300	1					
ANR	1323327	ReturnType	void		1323300	1					
ANR	1323328	Identifier	CondorFileTable :: report_all		1323300	2					
ANR	1323329	ParameterList			1323300	3					
ANR	1323330	CFGEntryNode	ENTRY		1323300		True				
ANR	1323331	CFGExitNode	EXIT		1323300		True				
ANR	1323332	Symbol	info_head		1323300						
ANR	1323333	Symbol	* i		1323300						
ANR	1323334	Symbol	i		1323300						
ANR	1323335	Symbol	i -> next		1323300						
ANR	1323336	Function	CondorFileTable :: close_all	210:0:5661:5745							
ANR	1323337	FunctionDef	CondorFileTable :: close_all ()		1323336	0					
ANR	1323338	CompoundStatement		211:0:5695:5745	1323336	0					
ANR	1323339	ForStatement	for ( int i = 0 ; i < length ; i ++ )		1323336	0					
ANR	1323340	ForInit	int i = 0 ;	212:6:5703:5710	1323336	0	True				
ANR	1323341	IdentifierDeclStatement	int i = 0 ;		1323336	0					
ANR	1323342	IdentifierDecl	i = 0		1323336	0					
ANR	1323343	IdentifierDeclType	int		1323336	0					
ANR	1323344	Identifier	i		1323336	1					
ANR	1323345	AssignmentExpression	i = 0		1323336	2		=			
ANR	1323346	Identifier	i		1323336	0					
ANR	1323347	PrimaryExpression	0		1323336	1					
ANR	1323348	Condition	i < length	212:15:5712:5719	1323336	1	True				
ANR	1323349	RelationalExpression	i < length		1323336	0		<			
ANR	1323350	Identifier	i		1323336	0					
ANR	1323351	Identifier	length		1323336	1					
ANR	1323352	PostIncDecOperationExpression	i ++	212:25:5722:5724	1323336	2	True				
ANR	1323353	Identifier	i		1323336	0					
ANR	1323354	IncDec	++		1323336	1					
ANR	1323355	CompoundStatement		2:31:32:32	1323336	3					
ANR	1323356	ExpressionStatement	close ( i )	213:2:5732:5740	1323336	0	True				
ANR	1323357	CallExpression	close ( i )		1323336	0					
ANR	1323358	Callee	close		1323336	0					
ANR	1323359	Identifier	close		1323336	0					
ANR	1323360	ArgumentList	i		1323336	1					
ANR	1323361	Argument	i		1323336	0					
ANR	1323362	Identifier	i		1323336	0					
ANR	1323363	ReturnType	void		1323336	1					
ANR	1323364	Identifier	CondorFileTable :: close_all		1323336	2					
ANR	1323365	ParameterList			1323336	3					
ANR	1323366	CFGEntryNode	ENTRY		1323336		True				
ANR	1323367	CFGExitNode	EXIT		1323336		True				
ANR	1323368	Symbol	length		1323336						
ANR	1323369	Symbol	i		1323336						
ANR	1323370	Function	CondorFileTable :: set_aggravate_mode	217:0:5748:5831							
ANR	1323371	FunctionDef	CondorFileTable :: set_aggravate_mode (int on_off)		1323370	0					
ANR	1323372	CompoundStatement		218:0:5803:5831	1323370	0					
ANR	1323373	ExpressionStatement	aggravate_mode = on_off	219:1:5806:5829	1323370	0	True				
ANR	1323374	AssignmentExpression	aggravate_mode = on_off		1323370	0		=			
ANR	1323375	Identifier	aggravate_mode		1323370	0					
ANR	1323376	Identifier	on_off		1323370	1					
ANR	1323377	ReturnType	void		1323370	1					
ANR	1323378	Identifier	CondorFileTable :: set_aggravate_mode		1323370	2					
ANR	1323379	ParameterList	int on_off		1323370	3					
ANR	1323380	Parameter	int on_off	217:42:5790:5799	1323370	0	True				
ANR	1323381	ParameterType	int		1323370	0					
ANR	1323382	Identifier	on_off		1323370	1					
ANR	1323383	CFGEntryNode	ENTRY		1323370		True				
ANR	1323384	CFGExitNode	EXIT		1323370		True				
ANR	1323385	Symbol	on_off		1323370						
ANR	1323386	Symbol	aggravate_mode		1323370						
ANR	1323387	Function	CondorFileTable :: dump	222:0:5834:6582							
ANR	1323388	FunctionDef	CondorFileTable :: dump ()		1323387	0					
ANR	1323389	CompoundStatement		223:0:5863:6582	1323387	0					
ANR	1323390	IdentifierDeclStatement	CondorFilePointer * p ;	224:1:5866:5886	1323387	0	True				
ANR	1323391	IdentifierDecl	* p		1323387	0					
ANR	1323392	IdentifierDeclType	CondorFilePointer *		1323387	0					
ANR	1323393	Identifier	p		1323387	1					
ANR	1323394	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\nOPEN FILE TABLE:\\n"" )"	226:1:5890:5930	1323387	1	True				
ANR	1323395	CallExpression	"dprintf ( D_ALWAYS , ""\\nOPEN FILE TABLE:\\n"" )"		1323387	0					
ANR	1323396	Callee	dprintf		1323387	0					
ANR	1323397	Identifier	dprintf		1323387	0					
ANR	1323398	ArgumentList	D_ALWAYS		1323387	1					
ANR	1323399	Argument	D_ALWAYS		1323387	0					
ANR	1323400	Identifier	D_ALWAYS		1323387	0					
ANR	1323401	Argument	"""\\nOPEN FILE TABLE:\\n"""		1323387	1					
ANR	1323402	PrimaryExpression	"""\\nOPEN FILE TABLE:\\n"""		1323387	0					
ANR	1323403	ForStatement	for ( int j = 0 ; j < length ; j ++ )		1323387	2					
ANR	1323404	ForInit	int j = 0 ;	228:6:5939:5946	1323387	0	True				
ANR	1323405	IdentifierDeclStatement	int j = 0 ;		1323387	0					
ANR	1323406	IdentifierDecl	j = 0		1323387	0					
ANR	1323407	IdentifierDeclType	int		1323387	0					
ANR	1323408	Identifier	j		1323387	1					
ANR	1323409	AssignmentExpression	j = 0		1323387	2		=			
ANR	1323410	Identifier	j		1323387	0					
ANR	1323411	PrimaryExpression	0		1323387	1					
ANR	1323412	Condition	j < length	228:15:5948:5955	1323387	1	True				
ANR	1323413	RelationalExpression	j < length		1323387	0		<			
ANR	1323414	Identifier	j		1323387	0					
ANR	1323415	Identifier	length		1323387	1					
ANR	1323416	PostIncDecOperationExpression	j ++	228:25:5958:5960	1323387	2	True				
ANR	1323417	Identifier	j		1323387	0					
ANR	1323418	IncDec	++		1323387	1					
ANR	1323419	CompoundStatement		6:31:100:100	1323387	3					
ANR	1323420	ExpressionStatement	p = pointers [ j ]	230:2:5969:5984	1323387	0	True				
ANR	1323421	AssignmentExpression	p = pointers [ j ]		1323387	0		=			
ANR	1323422	Identifier	p		1323387	0					
ANR	1323423	ArrayIndexing	pointers [ j ]		1323387	1					
ANR	1323424	Identifier	pointers		1323387	0					
ANR	1323425	Identifier	j		1323387	1					
ANR	1323426	IfStatement	if ( p )		1323387	1					
ANR	1323427	Condition	p	231:6:5992:5992	1323387	0	True				
ANR	1323428	Identifier	p		1323387	0					
ANR	1323429	CompoundStatement		9:10:132:132	1323387	1					
ANR	1323430	ExpressionStatement	"dprintf ( D_ALWAYS , ""fd %d\\n"" , j )"	232:3:6001:6030	1323387	0	True				
ANR	1323431	CallExpression	"dprintf ( D_ALWAYS , ""fd %d\\n"" , j )"		1323387	0					
ANR	1323432	Callee	dprintf		1323387	0					
ANR	1323433	Identifier	dprintf		1323387	0					
ANR	1323434	ArgumentList	D_ALWAYS		1323387	1					
ANR	1323435	Argument	D_ALWAYS		1323387	0					
ANR	1323436	Identifier	D_ALWAYS		1323387	0					
ANR	1323437	Argument	"""fd %d\\n"""		1323387	1					
ANR	1323438	PrimaryExpression	"""fd %d\\n"""		1323387	0					
ANR	1323439	Argument	j		1323387	2					
ANR	1323440	Identifier	j		1323387	0					
ANR	1323441	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\tlogical name: %s\\n"" , p -> logical_name )"	233:3:6035:6091	1323387	1	True				
ANR	1323442	CallExpression	"dprintf ( D_ALWAYS , ""\\tlogical name: %s\\n"" , p -> logical_name )"		1323387	0					
ANR	1323443	Callee	dprintf		1323387	0					
ANR	1323444	Identifier	dprintf		1323387	0					
ANR	1323445	ArgumentList	D_ALWAYS		1323387	1					
ANR	1323446	Argument	D_ALWAYS		1323387	0					
ANR	1323447	Identifier	D_ALWAYS		1323387	0					
ANR	1323448	Argument	"""\\tlogical name: %s\\n"""		1323387	1					
ANR	1323449	PrimaryExpression	"""\\tlogical name: %s\\n"""		1323387	0					
ANR	1323450	Argument	p -> logical_name		1323387	2					
ANR	1323451	PtrMemberAccess	p -> logical_name		1323387	0					
ANR	1323452	Identifier	p		1323387	0					
ANR	1323453	Identifier	logical_name		1323387	1					
ANR	1323454	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\toffset:       %d\\n"" , p -> offset )"	234:3:6096:6146	1323387	2	True				
ANR	1323455	CallExpression	"dprintf ( D_ALWAYS , ""\\toffset:       %d\\n"" , p -> offset )"		1323387	0					
ANR	1323456	Callee	dprintf		1323387	0					
ANR	1323457	Identifier	dprintf		1323387	0					
ANR	1323458	ArgumentList	D_ALWAYS		1323387	1					
ANR	1323459	Argument	D_ALWAYS		1323387	0					
ANR	1323460	Identifier	D_ALWAYS		1323387	0					
ANR	1323461	Argument	"""\\toffset:       %d\\n"""		1323387	1					
ANR	1323462	PrimaryExpression	"""\\toffset:       %d\\n"""		1323387	0					
ANR	1323463	Argument	p -> offset		1323387	2					
ANR	1323464	PtrMemberAccess	p -> offset		1323387	0					
ANR	1323465	Identifier	p		1323387	0					
ANR	1323466	Identifier	offset		1323387	1					
ANR	1323467	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\tdups:         %d\\n"" , count_pointer_uses ( p ) )"	235:3:6151:6213	1323387	3	True				
ANR	1323468	CallExpression	"dprintf ( D_ALWAYS , ""\\tdups:         %d\\n"" , count_pointer_uses ( p ) )"		1323387	0					
ANR	1323469	Callee	dprintf		1323387	0					
ANR	1323470	Identifier	dprintf		1323387	0					
ANR	1323471	ArgumentList	D_ALWAYS		1323387	1					
ANR	1323472	Argument	D_ALWAYS		1323387	0					
ANR	1323473	Identifier	D_ALWAYS		1323387	0					
ANR	1323474	Argument	"""\\tdups:         %d\\n"""		1323387	1					
ANR	1323475	PrimaryExpression	"""\\tdups:         %d\\n"""		1323387	0					
ANR	1323476	Argument	count_pointer_uses ( p )		1323387	2					
ANR	1323477	CallExpression	count_pointer_uses ( p )		1323387	0					
ANR	1323478	Callee	count_pointer_uses		1323387	0					
ANR	1323479	Identifier	count_pointer_uses		1323387	0					
ANR	1323480	ArgumentList	p		1323387	1					
ANR	1323481	Argument	p		1323387	0					
ANR	1323482	Identifier	p		1323387	0					
ANR	1323483	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\topen flags:   0x%x\\n"" , p -> flags )"	236:3:6218:6269	1323387	4	True				
ANR	1323484	CallExpression	"dprintf ( D_ALWAYS , ""\\topen flags:   0x%x\\n"" , p -> flags )"		1323387	0					
ANR	1323485	Callee	dprintf		1323387	0					
ANR	1323486	Identifier	dprintf		1323387	0					
ANR	1323487	ArgumentList	D_ALWAYS		1323387	1					
ANR	1323488	Argument	D_ALWAYS		1323387	0					
ANR	1323489	Identifier	D_ALWAYS		1323387	0					
ANR	1323490	Argument	"""\\topen flags:   0x%x\\n"""		1323387	1					
ANR	1323491	PrimaryExpression	"""\\topen flags:   0x%x\\n"""		1323387	0					
ANR	1323492	Argument	p -> flags		1323387	2					
ANR	1323493	PtrMemberAccess	p -> flags		1323387	0					
ANR	1323494	Identifier	p		1323387	0					
ANR	1323495	Identifier	flags		1323387	1					
ANR	1323496	IfStatement	if ( p -> file )		1323387	5					
ANR	1323497	Condition	p -> file	237:7:6278:6284	1323387	0	True				
ANR	1323498	PtrMemberAccess	p -> file		1323387	0					
ANR	1323499	Identifier	p		1323387	0					
ANR	1323500	Identifier	file		1323387	1					
ANR	1323501	CompoundStatement		15:17:424:424	1323387	1					
ANR	1323502	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\turl:          %s\\n"" , p -> file -> get_url ( ) )"	238:4:6294:6353	1323387	0	True				
ANR	1323503	CallExpression	"dprintf ( D_ALWAYS , ""\\turl:          %s\\n"" , p -> file -> get_url ( ) )"		1323387	0					
ANR	1323504	Callee	dprintf		1323387	0					
ANR	1323505	Identifier	dprintf		1323387	0					
ANR	1323506	ArgumentList	D_ALWAYS		1323387	1					
ANR	1323507	Argument	D_ALWAYS		1323387	0					
ANR	1323508	Identifier	D_ALWAYS		1323387	0					
ANR	1323509	Argument	"""\\turl:          %s\\n"""		1323387	1					
ANR	1323510	PrimaryExpression	"""\\turl:          %s\\n"""		1323387	0					
ANR	1323511	Argument	p -> file -> get_url ( )		1323387	2					
ANR	1323512	CallExpression	p -> file -> get_url ( )		1323387	0					
ANR	1323513	Callee	p -> file -> get_url		1323387	0					
ANR	1323514	PtrMemberAccess	p -> file -> get_url		1323387	0					
ANR	1323515	PtrMemberAccess	p -> file		1323387	0					
ANR	1323516	Identifier	p		1323387	0					
ANR	1323517	Identifier	file		1323387	1					
ANR	1323518	Identifier	get_url		1323387	1					
ANR	1323519	ArgumentList			1323387	1					
ANR	1323520	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\tsize:         %ld\\n"" , ( long ) p -> file -> get_size ( ) )"	239:4:6359:6426	1323387	1	True				
ANR	1323521	CallExpression	"dprintf ( D_ALWAYS , ""\\tsize:         %ld\\n"" , ( long ) p -> file -> get_size ( ) )"		1323387	0					
ANR	1323522	Callee	dprintf		1323387	0					
ANR	1323523	Identifier	dprintf		1323387	0					
ANR	1323524	ArgumentList	D_ALWAYS		1323387	1					
ANR	1323525	Argument	D_ALWAYS		1323387	0					
ANR	1323526	Identifier	D_ALWAYS		1323387	0					
ANR	1323527	Argument	"""\\tsize:         %ld\\n"""		1323387	1					
ANR	1323528	PrimaryExpression	"""\\tsize:         %ld\\n"""		1323387	0					
ANR	1323529	Argument	( long ) p -> file -> get_size ( )		1323387	2					
ANR	1323530	CastExpression	( long ) p -> file -> get_size ( )		1323387	0					
ANR	1323531	CastTarget	long		1323387	0					
ANR	1323532	CallExpression	p -> file -> get_size ( )		1323387	1					
ANR	1323533	Callee	p -> file -> get_size		1323387	0					
ANR	1323534	PtrMemberAccess	p -> file -> get_size		1323387	0					
ANR	1323535	PtrMemberAccess	p -> file		1323387	0					
ANR	1323536	Identifier	p		1323387	0					
ANR	1323537	Identifier	file		1323387	1					
ANR	1323538	Identifier	get_size		1323387	1					
ANR	1323539	ArgumentList			1323387	1					
ANR	1323540	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\topens:        %d\\n"" , count_file_uses ( p -> file ) )"	240:4:6432:6497	1323387	2	True				
ANR	1323541	CallExpression	"dprintf ( D_ALWAYS , ""\\topens:        %d\\n"" , count_file_uses ( p -> file ) )"		1323387	0					
ANR	1323542	Callee	dprintf		1323387	0					
ANR	1323543	Identifier	dprintf		1323387	0					
ANR	1323544	ArgumentList	D_ALWAYS		1323387	1					
ANR	1323545	Argument	D_ALWAYS		1323387	0					
ANR	1323546	Identifier	D_ALWAYS		1323387	0					
ANR	1323547	Argument	"""\\topens:        %d\\n"""		1323387	1					
ANR	1323548	PrimaryExpression	"""\\topens:        %d\\n"""		1323387	0					
ANR	1323549	Argument	count_file_uses ( p -> file )		1323387	2					
ANR	1323550	CallExpression	count_file_uses ( p -> file )		1323387	0					
ANR	1323551	Callee	count_file_uses		1323387	0					
ANR	1323552	Identifier	count_file_uses		1323387	0					
ANR	1323553	ArgumentList	p -> file		1323387	1					
ANR	1323554	Argument	p -> file		1323387	0					
ANR	1323555	PtrMemberAccess	p -> file		1323387	0					
ANR	1323556	Identifier	p		1323387	0					
ANR	1323557	Identifier	file		1323387	1					
ANR	1323558	ElseStatement	else		1323387	0					
ANR	1323559	CompoundStatement		19:10:645:645	1323387	0					
ANR	1323560	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\tnot currently bound to a url.\\n"" )"	242:4:6515:6568	1323387	0	True				
ANR	1323561	CallExpression	"dprintf ( D_ALWAYS , ""\\tnot currently bound to a url.\\n"" )"		1323387	0					
ANR	1323562	Callee	dprintf		1323387	0					
ANR	1323563	Identifier	dprintf		1323387	0					
ANR	1323564	ArgumentList	D_ALWAYS		1323387	1					
ANR	1323565	Argument	D_ALWAYS		1323387	0					
ANR	1323566	Identifier	D_ALWAYS		1323387	0					
ANR	1323567	Argument	"""\\tnot currently bound to a url.\\n"""		1323387	1					
ANR	1323568	PrimaryExpression	"""\\tnot currently bound to a url.\\n"""		1323387	0					
ANR	1323569	ReturnType	void		1323387	1					
ANR	1323570	Identifier	CondorFileTable :: dump		1323387	2					
ANR	1323571	ParameterList			1323387	3					
ANR	1323572	CFGEntryNode	ENTRY		1323387		True				
ANR	1323573	CFGExitNode	EXIT		1323387		True				
ANR	1323574	Symbol	* p -> file		1323387						
ANR	1323575	Symbol	D_ALWAYS		1323387						
ANR	1323576	Symbol	length		1323387						
ANR	1323577	Symbol	j		1323387						
ANR	1323578	Symbol	* pointers		1323387						
ANR	1323579	Symbol	p -> file -> get_size		1323387						
ANR	1323580	Symbol	p		1323387						
ANR	1323581	Symbol	* j		1323387						
ANR	1323582	Symbol	p -> file		1323387						
ANR	1323583	Symbol	count_file_uses		1323387						
ANR	1323584	Symbol	p -> logical_name		1323387						
ANR	1323585	Symbol	p -> offset		1323387						
ANR	1323586	Symbol	p -> flags		1323387						
ANR	1323587	Symbol	* p		1323387						
ANR	1323588	Symbol	* * p		1323387						
ANR	1323589	Symbol	count_pointer_uses		1323387						
ANR	1323590	Symbol	p -> file -> get_url		1323387						
ANR	1323591	Symbol	pointers		1323387						
ANR	1323592	Function	CondorFileTable :: find_url	252:0:6649:6852							
ANR	1323593	FunctionDef	CondorFileTable :: find_url (char * url)		1323592	0					
ANR	1323594	CompoundStatement		253:0:6692:6852	1323592	0					
ANR	1323595	ForStatement	for ( int i = 0 ; i < length ; i ++ )		1323592	0					
ANR	1323596	ForInit	int i = 0 ;	254:6:6700:6707	1323592	0	True				
ANR	1323597	IdentifierDeclStatement	int i = 0 ;		1323592	0					
ANR	1323598	IdentifierDecl	i = 0		1323592	0					
ANR	1323599	IdentifierDeclType	int		1323592	0					
ANR	1323600	Identifier	i		1323592	1					
ANR	1323601	AssignmentExpression	i = 0		1323592	2		=			
ANR	1323602	Identifier	i		1323592	0					
ANR	1323603	PrimaryExpression	0		1323592	1					
ANR	1323604	Condition	i < length	254:15:6709:6716	1323592	1	True				
ANR	1323605	RelationalExpression	i < length		1323592	0		<			
ANR	1323606	Identifier	i		1323592	0					
ANR	1323607	Identifier	length		1323592	1					
ANR	1323608	PostIncDecOperationExpression	i ++	254:25:6719:6721	1323592	2	True				
ANR	1323609	Identifier	i		1323592	0					
ANR	1323610	IncDec	++		1323592	1					
ANR	1323611	IfStatement	if ( pointers [ i ] )		1323592	3					
ANR	1323612	Condition	pointers [ i ]	255:6:6731:6741	1323592	0	True				
ANR	1323613	ArrayIndexing	pointers [ i ]		1323592	0					
ANR	1323614	Identifier	pointers		1323592	0					
ANR	1323615	Identifier	i		1323592	1					
ANR	1323616	IfStatement	if ( pointers [ i ] -> file )		1323592	1					
ANR	1323617	Condition	pointers [ i ] -> file	256:7:6752:6768	1323592	0	True				
ANR	1323618	PtrMemberAccess	pointers [ i ] -> file		1323592	0					
ANR	1323619	ArrayIndexing	pointers [ i ]		1323592	0					
ANR	1323620	Identifier	pointers		1323592	0					
ANR	1323621	Identifier	i		1323592	1					
ANR	1323622	Identifier	file		1323592	1					
ANR	1323623	IfStatement	"if ( ! strcmp ( pointers [ i ] -> file -> get_url ( ) , url ) )"		1323592	1					
ANR	1323624	Condition	"! strcmp ( pointers [ i ] -> file -> get_url ( ) , url )"	257:8:6780:6820	1323592	0	True				
ANR	1323625	UnaryOperationExpression	"! strcmp ( pointers [ i ] -> file -> get_url ( ) , url )"		1323592	0					
ANR	1323626	UnaryOperator	!		1323592	0					
ANR	1323627	CallExpression	"strcmp ( pointers [ i ] -> file -> get_url ( ) , url )"		1323592	1					
ANR	1323628	Callee	strcmp		1323592	0					
ANR	1323629	Identifier	strcmp		1323592	0					
ANR	1323630	ArgumentList	pointers [ i ] -> file -> get_url ( )		1323592	1					
ANR	1323631	Argument	pointers [ i ] -> file -> get_url ( )		1323592	0					
ANR	1323632	CallExpression	pointers [ i ] -> file -> get_url ( )		1323592	0					
ANR	1323633	Callee	pointers [ i ] -> file -> get_url		1323592	0					
ANR	1323634	PtrMemberAccess	pointers [ i ] -> file -> get_url		1323592	0					
ANR	1323635	PtrMemberAccess	pointers [ i ] -> file		1323592	0					
ANR	1323636	ArrayIndexing	pointers [ i ]		1323592	0					
ANR	1323637	Identifier	pointers		1323592	0					
ANR	1323638	Identifier	i		1323592	1					
ANR	1323639	Identifier	file		1323592	1					
ANR	1323640	Identifier	get_url		1323592	1					
ANR	1323641	ArgumentList			1323592	1					
ANR	1323642	Argument	url		1323592	1					
ANR	1323643	Identifier	url		1323592	0					
ANR	1323644	ReturnStatement	return i ;	258:5:6829:6837	1323592	1	True				
ANR	1323645	Identifier	i		1323592	0					
ANR	1323646	ReturnStatement	return - 1 ;	260:1:6841:6850	1323592	1	True				
ANR	1323647	UnaryOperationExpression	- 1		1323592	0					
ANR	1323648	UnaryOperator	-		1323592	0					
ANR	1323649	PrimaryExpression	1		1323592	1					
ANR	1323650	ReturnType	int		1323592	1					
ANR	1323651	Identifier	CondorFileTable :: find_url		1323592	2					
ANR	1323652	ParameterList	char * url		1323592	3					
ANR	1323653	Parameter	char * url	252:31:6680:6688	1323592	0	True				
ANR	1323654	ParameterType	char *		1323592	0					
ANR	1323655	Identifier	url		1323592	1					
ANR	1323656	CFGEntryNode	ENTRY		1323592		True				
ANR	1323657	CFGExitNode	EXIT		1323592		True				
ANR	1323658	Symbol	strcmp		1323592						
ANR	1323659	Symbol	* * i		1323592						
ANR	1323660	Symbol	* pointers [ i ] -> file		1323592						
ANR	1323661	Symbol	pointers [ i ] -> file		1323592						
ANR	1323662	Symbol	length		1323592						
ANR	1323663	Symbol	i		1323592						
ANR	1323664	Symbol	url		1323592						
ANR	1323665	Symbol	* pointers		1323592						
ANR	1323666	Symbol	* i		1323592						
ANR	1323667	Symbol	pointers [ i ] -> file -> get_url		1323592						
ANR	1323668	Symbol	* * * i		1323592						
ANR	1323669	Symbol	* * * pointers		1323592						
ANR	1323670	Symbol	* * pointers		1323592						
ANR	1323671	Symbol	pointers		1323592						
ANR	1323672	Function	CondorFileTable :: find_logical_name	268:0:6929:7133							
ANR	1323673	FunctionDef	CondorFileTable :: find_logical_name (const char * logical_name)		1323672	0					
ANR	1323674	CompoundStatement		269:0:6996:7133	1323672	0					
ANR	1323675	ForStatement	for ( int i = 0 ; i < length ; i ++ )		1323672	0					
ANR	1323676	ForInit	int i = 0 ;	270:6:7004:7011	1323672	0	True				
ANR	1323677	IdentifierDeclStatement	int i = 0 ;		1323672	0					
ANR	1323678	IdentifierDecl	i = 0		1323672	0					
ANR	1323679	IdentifierDeclType	int		1323672	0					
ANR	1323680	Identifier	i		1323672	1					
ANR	1323681	AssignmentExpression	i = 0		1323672	2		=			
ANR	1323682	Identifier	i		1323672	0					
ANR	1323683	PrimaryExpression	0		1323672	1					
ANR	1323684	Condition	i < length	270:15:7013:7020	1323672	1	True				
ANR	1323685	RelationalExpression	i < length		1323672	0		<			
ANR	1323686	Identifier	i		1323672	0					
ANR	1323687	Identifier	length		1323672	1					
ANR	1323688	PostIncDecOperationExpression	i ++	270:25:7023:7025	1323672	2	True				
ANR	1323689	Identifier	i		1323672	0					
ANR	1323690	IncDec	++		1323672	1					
ANR	1323691	IfStatement	if ( pointers [ i ] )		1323672	3					
ANR	1323692	Condition	pointers [ i ]	271:6:7035:7045	1323672	0	True				
ANR	1323693	ArrayIndexing	pointers [ i ]		1323672	0					
ANR	1323694	Identifier	pointers		1323672	0					
ANR	1323695	Identifier	i		1323672	1					
ANR	1323696	IfStatement	"if ( ! strcmp ( pointers [ i ] -> logical_name , logical_name ) )"		1323672	1					
ANR	1323697	Condition	"! strcmp ( pointers [ i ] -> logical_name , logical_name )"	272:7:7056:7102	1323672	0	True				
ANR	1323698	UnaryOperationExpression	"! strcmp ( pointers [ i ] -> logical_name , logical_name )"		1323672	0					
ANR	1323699	UnaryOperator	!		1323672	0					
ANR	1323700	CallExpression	"strcmp ( pointers [ i ] -> logical_name , logical_name )"		1323672	1					
ANR	1323701	Callee	strcmp		1323672	0					
ANR	1323702	Identifier	strcmp		1323672	0					
ANR	1323703	ArgumentList	pointers [ i ] -> logical_name		1323672	1					
ANR	1323704	Argument	pointers [ i ] -> logical_name		1323672	0					
ANR	1323705	PtrMemberAccess	pointers [ i ] -> logical_name		1323672	0					
ANR	1323706	ArrayIndexing	pointers [ i ]		1323672	0					
ANR	1323707	Identifier	pointers		1323672	0					
ANR	1323708	Identifier	i		1323672	1					
ANR	1323709	Identifier	logical_name		1323672	1					
ANR	1323710	Argument	logical_name		1323672	1					
ANR	1323711	Identifier	logical_name		1323672	0					
ANR	1323712	ReturnStatement	return i ;	273:4:7110:7118	1323672	1	True				
ANR	1323713	Identifier	i		1323672	0					
ANR	1323714	ReturnStatement	return - 1 ;	275:1:7122:7131	1323672	1	True				
ANR	1323715	UnaryOperationExpression	- 1		1323672	0					
ANR	1323716	UnaryOperator	-		1323672	0					
ANR	1323717	PrimaryExpression	1		1323672	1					
ANR	1323718	ReturnType	int		1323672	1					
ANR	1323719	Identifier	CondorFileTable :: find_logical_name		1323672	2					
ANR	1323720	ParameterList	const char * logical_name		1323672	3					
ANR	1323721	Parameter	const char * logical_name	268:40:6969:6992	1323672	0	True				
ANR	1323722	ParameterType	const char *		1323672	0					
ANR	1323723	Identifier	logical_name		1323672	1					
ANR	1323724	CFGEntryNode	ENTRY		1323672		True				
ANR	1323725	CFGExitNode	EXIT		1323672		True				
ANR	1323726	Symbol	strcmp		1323672						
ANR	1323727	Symbol	logical_name		1323672						
ANR	1323728	Symbol	* * i		1323672						
ANR	1323729	Symbol	* i		1323672						
ANR	1323730	Symbol	pointers [ i ] -> logical_name		1323672						
ANR	1323731	Symbol	length		1323672						
ANR	1323732	Symbol	i		1323672						
ANR	1323733	Symbol	* * pointers		1323672						
ANR	1323734	Symbol	pointers		1323672						
ANR	1323735	Symbol	* pointers		1323672						
ANR	1323736	Function	CondorFileTable :: make_info	285:0:7383:7858							
ANR	1323737	FunctionDef	CondorFileTable :: make_info (char * logical_name)		1323736	0					
ANR	1323738	CompoundStatement		286:0:7449:7858	1323736	0					
ANR	1323739	IdentifierDeclStatement	CondorFileInfo * i ;	287:1:7452:7469	1323736	0	True				
ANR	1323740	IdentifierDecl	* i		1323736	0					
ANR	1323741	IdentifierDeclType	CondorFileInfo *		1323736	0					
ANR	1323742	Identifier	i		1323736	1					
ANR	1323743	ForStatement	for ( i = info_head ; i ; i = i -> next )		1323736	1					
ANR	1323744	ForInit	i = info_head ;	289:6:7478:7489	1323736	0	True				
ANR	1323745	AssignmentExpression	i = info_head		1323736	0		=			
ANR	1323746	Identifier	i		1323736	0					
ANR	1323747	Identifier	info_head		1323736	1					
ANR	1323748	Condition	i	289:19:7491:7491	1323736	1	True				
ANR	1323749	Identifier	i		1323736	0					
ANR	1323750	AssignmentExpression	i = i -> next	289:22:7494:7502	1323736	2	True	=			
ANR	1323751	Identifier	i		1323736	0					
ANR	1323752	PtrMemberAccess	i -> next		1323736	1					
ANR	1323753	Identifier	i		1323736	0					
ANR	1323754	Identifier	next		1323736	1					
ANR	1323755	IfStatement	"if ( ! strcmp ( logical_name , i -> info_name ) )"		1323736	3					
ANR	1323756	Condition	"! strcmp ( logical_name , i -> info_name )"	290:6:7512:7545	1323736	0	True				
ANR	1323757	UnaryOperationExpression	"! strcmp ( logical_name , i -> info_name )"		1323736	0					
ANR	1323758	UnaryOperator	!		1323736	0					
ANR	1323759	CallExpression	"strcmp ( logical_name , i -> info_name )"		1323736	1					
ANR	1323760	Callee	strcmp		1323736	0					
ANR	1323761	Identifier	strcmp		1323736	0					
ANR	1323762	ArgumentList	logical_name		1323736	1					
ANR	1323763	Argument	logical_name		1323736	0					
ANR	1323764	Identifier	logical_name		1323736	0					
ANR	1323765	Argument	i -> info_name		1323736	1					
ANR	1323766	PtrMemberAccess	i -> info_name		1323736	0					
ANR	1323767	Identifier	i		1323736	0					
ANR	1323768	Identifier	info_name		1323736	1					
ANR	1323769	ReturnStatement	return i ;	291:3:7552:7560	1323736	1	True				
ANR	1323770	Identifier	i		1323736	0					
ANR	1323771	IfStatement	if ( info_count < 100 )		1323736	2					
ANR	1323772	Condition	info_count < 100	293:5:7568:7581	1323736	0	True				
ANR	1323773	RelationalExpression	info_count < 100		1323736	0		<			
ANR	1323774	Identifier	info_count		1323736	0					
ANR	1323775	PrimaryExpression	100		1323736	1					
ANR	1323776	CompoundStatement		8:22:135:135	1323736	1					
ANR	1323777	ExpressionStatement	i = new CondorFileInfo ( logical_name )	294:2:7589:7627	1323736	0	True				
ANR	1323778	AssignmentExpression	i = new CondorFileInfo ( logical_name )		1323736	0		=			
ANR	1323779	Identifier	i		1323736	0					
ANR	1323780	Identifier	logical_name		1323736	1					
ANR	1323781	ExpressionStatement	i -> next = info_head	295:2:7631:7650	1323736	1	True				
ANR	1323782	AssignmentExpression	i -> next = info_head		1323736	0		=			
ANR	1323783	PtrMemberAccess	i -> next		1323736	0					
ANR	1323784	Identifier	i		1323736	0					
ANR	1323785	Identifier	next		1323736	1					
ANR	1323786	Identifier	info_head		1323736	1					
ANR	1323787	ExpressionStatement	info_head = i	296:2:7654:7667	1323736	2	True				
ANR	1323788	AssignmentExpression	info_head = i		1323736	0		=			
ANR	1323789	Identifier	info_head		1323736	0					
ANR	1323790	Identifier	i		1323736	1					
ANR	1323791	ElseStatement	else		1323736	0					
ANR	1323792	IfStatement	if ( info_count == 100 )		1323736	0					
ANR	1323793	Condition	info_count == 100	297:12:7681:7695	1323736	0	True				
ANR	1323794	EqualityExpression	info_count == 100		1323736	0		==			
ANR	1323795	Identifier	info_count		1323736	0					
ANR	1323796	PrimaryExpression	100		1323736	1					
ANR	1323797	CompoundStatement		12:30:249:249	1323736	1					
ANR	1323798	ExpressionStatement	"i = new CondorFileInfo ( ""everything else"" )"	298:2:7703:7746	1323736	0	True				
ANR	1323799	AssignmentExpression	"i = new CondorFileInfo ( ""everything else"" )"		1323736	0		=			
ANR	1323800	Identifier	i		1323736	0					
ANR	1323801	PrimaryExpression	"""everything else"""		1323736	1					
ANR	1323802	ExpressionStatement	i -> next = info_head	299:2:7750:7769	1323736	1	True				
ANR	1323803	AssignmentExpression	i -> next = info_head		1323736	0		=			
ANR	1323804	PtrMemberAccess	i -> next		1323736	0					
ANR	1323805	Identifier	i		1323736	0					
ANR	1323806	Identifier	next		1323736	1					
ANR	1323807	Identifier	info_head		1323736	1					
ANR	1323808	ExpressionStatement	info_head = i	300:2:7773:7786	1323736	2	True				
ANR	1323809	AssignmentExpression	info_head = i		1323736	0		=			
ANR	1323810	Identifier	info_head		1323736	0					
ANR	1323811	Identifier	i		1323736	1					
ANR	1323812	ElseStatement	else		1323736	0					
ANR	1323813	CompoundStatement		16:8:346:346	1323736	0					
ANR	1323814	ExpressionStatement	info_count ++	305:1:7824:7836	1323736	3	True				
ANR	1323815	PostIncDecOperationExpression	info_count ++		1323736	0					
ANR	1323816	Identifier	info_count		1323736	0					
ANR	1323817	IncDec	++		1323736	1					
ANR	1323818	ReturnStatement	return info_head ;	307:1:7840:7856	1323736	4	True				
ANR	1323819	Identifier	info_head		1323736	0					
ANR	1323820	ReturnType	CondorFileInfo *		1323736	1					
ANR	1323821	Identifier	CondorFileTable :: make_info		1323736	2					
ANR	1323822	ParameterList	char * logical_name		1323736	3					
ANR	1323823	Parameter	char * logical_name	285:45:7428:7445	1323736	0	True				
ANR	1323824	ParameterType	char *		1323736	0					
ANR	1323825	Identifier	logical_name		1323736	1					
ANR	1323826	CFGEntryNode	ENTRY		1323736		True				
ANR	1323827	CFGExitNode	EXIT		1323736		True				
ANR	1323828	Symbol	strcmp		1323736						
ANR	1323829	Symbol	logical_name		1323736						
ANR	1323830	Symbol	info_head		1323736						
ANR	1323831	Symbol	* i		1323736						
ANR	1323832	Symbol	info_count		1323736						
ANR	1323833	Symbol	i		1323736						
ANR	1323834	Symbol	i -> next		1323736						
ANR	1323835	Symbol	i -> info_name		1323736						
ANR	1323836	Function	CondorFileTable :: find_empty	316:0:8070:8279							
ANR	1323837	FunctionDef	CondorFileTable :: find_empty ()		1323836	0					
ANR	1323838	CompoundStatement		317:0:8104:8279	1323836	0					
ANR	1323839	IdentifierDeclStatement	int fd ;	318:1:8107:8113	1323836	0	True				
ANR	1323840	IdentifierDecl	fd		1323836	0					
ANR	1323841	IdentifierDeclType	int		1323836	0					
ANR	1323842	Identifier	fd		1323836	1					
ANR	1323843	ForStatement	for ( fd = 0 ; fd < length ; fd ++ )		1323836	1					
ANR	1323844	ForInit	fd = 0 ;	320:6:8122:8126	1323836	0	True				
ANR	1323845	AssignmentExpression	fd = 0		1323836	0		=			
ANR	1323846	Identifier	fd		1323836	0					
ANR	1323847	PrimaryExpression	0		1323836	1					
ANR	1323848	Condition	fd < length	320:12:8128:8136	1323836	1	True				
ANR	1323849	RelationalExpression	fd < length		1323836	0		<			
ANR	1323850	Identifier	fd		1323836	0					
ANR	1323851	Identifier	length		1323836	1					
ANR	1323852	PostIncDecOperationExpression	fd ++	320:23:8139:8142	1323836	2	True				
ANR	1323853	Identifier	fd		1323836	0					
ANR	1323854	IncDec	++		1323836	1					
ANR	1323855	CompoundStatement		4:30:41:41	1323836	3					
ANR	1323856	IfStatement	if ( aggravate_mode )		1323836	0					
ANR	1323857	Condition	aggravate_mode	321:6:8154:8167	1323836	0	True				
ANR	1323858	Identifier	aggravate_mode		1323836	0					
ANR	1323859	CompoundStatement		5:23:66:66	1323836	1					
ANR	1323860	IfStatement	if ( fd > 2 && fd < 32 )		1323836	0					
ANR	1323861	Condition	fd > 2 && fd < 32	322:7:8180:8192	1323836	0	True				
ANR	1323862	AndExpression	fd > 2 && fd < 32		1323836	0		&&			
ANR	1323863	RelationalExpression	fd > 2		1323836	0		>			
ANR	1323864	Identifier	fd		1323836	0					
ANR	1323865	PrimaryExpression	2		1323836	1					
ANR	1323866	RelationalExpression	fd < 32		1323836	1		<			
ANR	1323867	Identifier	fd		1323836	0					
ANR	1323868	PrimaryExpression	32		1323836	1					
ANR	1323869	CompoundStatement		6:23:91:91	1323836	1					
ANR	1323870	ContinueStatement	continue ;	323:4:8202:8210	1323836	0	True				
ANR	1323871	IfStatement	if ( ! pointers [ fd ] )		1323836	1					
ANR	1323872	Condition	! pointers [ fd ]	326:6:8227:8239	1323836	0	True				
ANR	1323873	UnaryOperationExpression	! pointers [ fd ]		1323836	0					
ANR	1323874	UnaryOperator	!		1323836	0					
ANR	1323875	ArrayIndexing	pointers [ fd ]		1323836	1					
ANR	1323876	Identifier	pointers		1323836	0					
ANR	1323877	Identifier	fd		1323836	1					
ANR	1323878	CompoundStatement		10:22:138:138	1323836	1					
ANR	1323879	ReturnStatement	return fd ;	327:3:8248:8257	1323836	0	True				
ANR	1323880	Identifier	fd		1323836	0					
ANR	1323881	ReturnStatement	return - 1 ;	331:1:8268:8277	1323836	2	True				
ANR	1323882	UnaryOperationExpression	- 1		1323836	0					
ANR	1323883	UnaryOperator	-		1323836	0					
ANR	1323884	PrimaryExpression	1		1323836	1					
ANR	1323885	ReturnType	int		1323836	1					
ANR	1323886	Identifier	CondorFileTable :: find_empty		1323836	2					
ANR	1323887	ParameterList			1323836	3					
ANR	1323888	CFGEntryNode	ENTRY		1323836		True				
ANR	1323889	CFGExitNode	EXIT		1323836		True				
ANR	1323890	Symbol	* fd		1323836						
ANR	1323891	Symbol	length		1323836						
ANR	1323892	Symbol	aggravate_mode		1323836						
ANR	1323893	Symbol	fd		1323836						
ANR	1323894	Symbol	* pointers		1323836						
ANR	1323895	Symbol	pointers		1323836						
ANR	1323896	Function	CondorFileTable :: count_pointer_uses	334:0:8282:8448							
ANR	1323897	FunctionDef	CondorFileTable :: count_pointer_uses (CondorFilePointer * p)		1323896	0					
ANR	1323898	CompoundStatement		335:0:8346:8448	1323896	0					
ANR	1323899	IdentifierDeclStatement	int count = 0 ;	336:1:8349:8360	1323896	0	True				
ANR	1323900	IdentifierDecl	count = 0		1323896	0					
ANR	1323901	IdentifierDeclType	int		1323896	0					
ANR	1323902	Identifier	count		1323896	1					
ANR	1323903	AssignmentExpression	count = 0		1323896	2		=			
ANR	1323904	Identifier	count		1323896	0					
ANR	1323905	PrimaryExpression	0		1323896	1					
ANR	1323906	ForStatement	for ( int fd = 0 ; fd < length ; fd ++ )		1323896	1					
ANR	1323907	ForInit	int fd = 0 ;	338:6:8369:8377	1323896	0	True				
ANR	1323908	IdentifierDeclStatement	int fd = 0 ;		1323896	0					
ANR	1323909	IdentifierDecl	fd = 0		1323896	0					
ANR	1323910	IdentifierDeclType	int		1323896	0					
ANR	1323911	Identifier	fd		1323896	1					
ANR	1323912	AssignmentExpression	fd = 0		1323896	2		=			
ANR	1323913	Identifier	fd		1323896	0					
ANR	1323914	PrimaryExpression	0		1323896	1					
ANR	1323915	Condition	fd < length	338:16:8379:8387	1323896	1	True				
ANR	1323916	RelationalExpression	fd < length		1323896	0		<			
ANR	1323917	Identifier	fd		1323896	0					
ANR	1323918	Identifier	length		1323896	1					
ANR	1323919	PostIncDecOperationExpression	fd ++	338:27:8390:8393	1323896	2	True				
ANR	1323920	Identifier	fd		1323896	0					
ANR	1323921	IncDec	++		1323896	1					
ANR	1323922	IfStatement	if ( pointers [ fd ] == p )		1323896	3					
ANR	1323923	Condition	pointers [ fd ] == p	339:5:8402:8416	1323896	0	True				
ANR	1323924	EqualityExpression	pointers [ fd ] == p		1323896	0		==			
ANR	1323925	ArrayIndexing	pointers [ fd ]		1323896	0					
ANR	1323926	Identifier	pointers		1323896	0					
ANR	1323927	Identifier	fd		1323896	1					
ANR	1323928	Identifier	p		1323896	1					
ANR	1323929	ExpressionStatement	count ++	340:3:8422:8429	1323896	1	True				
ANR	1323930	PostIncDecOperationExpression	count ++		1323896	0					
ANR	1323931	Identifier	count		1323896	0					
ANR	1323932	IncDec	++		1323896	1					
ANR	1323933	ReturnStatement	return count ;	342:1:8434:8446	1323896	2	True				
ANR	1323934	Identifier	count		1323896	0					
ANR	1323935	ReturnType	int		1323896	1					
ANR	1323936	Identifier	CondorFileTable :: count_pointer_uses		1323896	2					
ANR	1323937	ParameterList	CondorFilePointer * p		1323896	3					
ANR	1323938	Parameter	CondorFilePointer * p	334:41:8323:8342	1323896	0	True				
ANR	1323939	ParameterType	CondorFilePointer *		1323896	0					
ANR	1323940	Identifier	p		1323896	1					
ANR	1323941	CFGEntryNode	ENTRY		1323896		True				
ANR	1323942	CFGExitNode	EXIT		1323896		True				
ANR	1323943	Symbol	p		1323896						
ANR	1323944	Symbol	* fd		1323896						
ANR	1323945	Symbol	count		1323896						
ANR	1323946	Symbol	length		1323896						
ANR	1323947	Symbol	fd		1323896						
ANR	1323948	Symbol	* pointers		1323896						
ANR	1323949	Symbol	pointers		1323896						
ANR	1323950	Function	CondorFileTable :: count_file_uses	345:0:8451:8633							
ANR	1323951	FunctionDef	CondorFileTable :: count_file_uses (CondorFile * f)		1323950	0					
ANR	1323952	CompoundStatement		346:0:8505:8633	1323950	0					
ANR	1323953	IdentifierDeclStatement	int count = 0 ;	347:1:8508:8519	1323950	0	True				
ANR	1323954	IdentifierDecl	count = 0		1323950	0					
ANR	1323955	IdentifierDeclType	int		1323950	0					
ANR	1323956	Identifier	count		1323950	1					
ANR	1323957	AssignmentExpression	count = 0		1323950	2		=			
ANR	1323958	Identifier	count		1323950	0					
ANR	1323959	PrimaryExpression	0		1323950	1					
ANR	1323960	ForStatement	for ( int fd = 0 ; fd < length ; fd ++ )		1323950	1					
ANR	1323961	ForInit	int fd = 0 ;	349:6:8528:8536	1323950	0	True				
ANR	1323962	IdentifierDeclStatement	int fd = 0 ;		1323950	0					
ANR	1323963	IdentifierDecl	fd = 0		1323950	0					
ANR	1323964	IdentifierDeclType	int		1323950	0					
ANR	1323965	Identifier	fd		1323950	1					
ANR	1323966	AssignmentExpression	fd = 0		1323950	2		=			
ANR	1323967	Identifier	fd		1323950	0					
ANR	1323968	PrimaryExpression	0		1323950	1					
ANR	1323969	Condition	fd < length	349:16:8538:8546	1323950	1	True				
ANR	1323970	RelationalExpression	fd < length		1323950	0		<			
ANR	1323971	Identifier	fd		1323950	0					
ANR	1323972	Identifier	length		1323950	1					
ANR	1323973	PostIncDecOperationExpression	fd ++	349:27:8549:8552	1323950	2	True				
ANR	1323974	Identifier	fd		1323950	0					
ANR	1323975	IncDec	++		1323950	1					
ANR	1323976	IfStatement	if ( pointers [ fd ] )		1323950	3					
ANR	1323977	Condition	pointers [ fd ]	350:5:8561:8572	1323950	0	True				
ANR	1323978	ArrayIndexing	pointers [ fd ]		1323950	0					
ANR	1323979	Identifier	pointers		1323950	0					
ANR	1323980	Identifier	fd		1323950	1					
ANR	1323981	IfStatement	if ( pointers [ fd ] -> file == f )		1323950	1					
ANR	1323982	Condition	pointers [ fd ] -> file == f	351:6:8581:8601	1323950	0	True				
ANR	1323983	EqualityExpression	pointers [ fd ] -> file == f		1323950	0		==			
ANR	1323984	PtrMemberAccess	pointers [ fd ] -> file		1323950	0					
ANR	1323985	ArrayIndexing	pointers [ fd ]		1323950	0					
ANR	1323986	Identifier	pointers		1323950	0					
ANR	1323987	Identifier	fd		1323950	1					
ANR	1323988	Identifier	file		1323950	1					
ANR	1323989	Identifier	f		1323950	1					
ANR	1323990	ExpressionStatement	count ++	352:4:8608:8615	1323950	1	True				
ANR	1323991	PostIncDecOperationExpression	count ++		1323950	0					
ANR	1323992	Identifier	count		1323950	0					
ANR	1323993	IncDec	++		1323950	1					
ANR	1323994	ReturnStatement	return count ;	354:1:8619:8631	1323950	2	True				
ANR	1323995	Identifier	count		1323950	0					
ANR	1323996	ReturnType	int		1323950	1					
ANR	1323997	Identifier	CondorFileTable :: count_file_uses		1323950	2					
ANR	1323998	ParameterList	CondorFile * f		1323950	3					
ANR	1323999	Parameter	CondorFile * f	345:38:8489:8501	1323950	0	True				
ANR	1324000	ParameterType	CondorFile *		1323950	0					
ANR	1324001	Identifier	f		1323950	1					
ANR	1324002	CFGEntryNode	ENTRY		1323950		True				
ANR	1324003	CFGExitNode	EXIT		1323950		True				
ANR	1324004	Symbol	f		1323950						
ANR	1324005	Symbol	* fd		1323950						
ANR	1324006	Symbol	count		1323950						
ANR	1324007	Symbol	length		1323950						
ANR	1324008	Symbol	* * fd		1323950						
ANR	1324009	Symbol	pointers [ fd ] -> file		1323950						
ANR	1324010	Symbol	* * pointers		1323950						
ANR	1324011	Symbol	fd		1323950						
ANR	1324012	Symbol	* pointers		1323950						
ANR	1324013	Symbol	pointers		1323950						
ANR	1324014	Function	CondorFileTable :: lookup_url	361:0:8881:10596							
ANR	1324015	FunctionDef	"CondorFileTable :: lookup_url (char * logical_name , char * * url)"		1324014	0					
ANR	1324016	CompoundStatement		362:0:8948:10596	1324014	0					
ANR	1324017	Statement	static	363:1:8951:8956	1324014	0	True				
ANR	1324018	IdentifierDeclStatement	int never_ask_shadow = FALSE ;	363:8:8958:8986	1324014	1	True				
ANR	1324019	IdentifierDecl	never_ask_shadow = FALSE		1324014	0					
ANR	1324020	IdentifierDeclType	int		1324014	0					
ANR	1324021	Identifier	never_ask_shadow		1324014	1					
ANR	1324022	AssignmentExpression	never_ask_shadow = FALSE		1324014	2		=			
ANR	1324023	Identifier	FALSE		1324014	0					
ANR	1324024	Identifier	FALSE		1324014	1					
ANR	1324025	IfStatement	"if ( ! strcmp ( logical_name , ""default stdin"" ) )"		1324014	2					
ANR	1324026	Condition	"! strcmp ( logical_name , ""default stdin"" )"	368:4:9107:9143	1324014	0	True				
ANR	1324027	UnaryOperationExpression	"! strcmp ( logical_name , ""default stdin"" )"		1324014	0					
ANR	1324028	UnaryOperator	!		1324014	0					
ANR	1324029	CallExpression	"strcmp ( logical_name , ""default stdin"" )"		1324014	1					
ANR	1324030	Callee	strcmp		1324014	0					
ANR	1324031	Identifier	strcmp		1324014	0					
ANR	1324032	ArgumentList	logical_name		1324014	1					
ANR	1324033	Argument	logical_name		1324014	0					
ANR	1324034	Identifier	logical_name		1324014	0					
ANR	1324035	Argument	"""default stdin"""		1324014	1					
ANR	1324036	PrimaryExpression	"""default stdin"""		1324014	0					
ANR	1324037	CompoundStatement		7:43:197:197	1324014	1					
ANR	1324038	ExpressionStatement	"* url = strdup ( ""fd:0"" )"	369:2:9150:9171	1324014	0	True				
ANR	1324039	AssignmentExpression	"* url = strdup ( ""fd:0"" )"		1324014	0		=			
ANR	1324040	UnaryOperationExpression	* url		1324014	0					
ANR	1324041	UnaryOperator	*		1324014	0					
ANR	1324042	Identifier	url		1324014	1					
ANR	1324043	CallExpression	"strdup ( ""fd:0"" )"		1324014	1					
ANR	1324044	Callee	strdup		1324014	0					
ANR	1324045	Identifier	strdup		1324014	0					
ANR	1324046	ArgumentList	"""fd:0"""		1324014	1					
ANR	1324047	Argument	"""fd:0"""		1324014	0					
ANR	1324048	PrimaryExpression	"""fd:0"""		1324014	0					
ANR	1324049	ReturnStatement	return ;	370:2:9175:9181	1324014	1	True				
ANR	1324050	ElseStatement	else		1324014	0					
ANR	1324051	IfStatement	"if ( ! strcmp ( logical_name , ""default stdout"" ) )"		1324014	0					
ANR	1324052	Condition	"! strcmp ( logical_name , ""default stdout"" )"	371:11:9194:9231	1324014	0	True				
ANR	1324053	UnaryOperationExpression	"! strcmp ( logical_name , ""default stdout"" )"		1324014	0					
ANR	1324054	UnaryOperator	!		1324014	0					
ANR	1324055	CallExpression	"strcmp ( logical_name , ""default stdout"" )"		1324014	1					
ANR	1324056	Callee	strcmp		1324014	0					
ANR	1324057	Identifier	strcmp		1324014	0					
ANR	1324058	ArgumentList	logical_name		1324014	1					
ANR	1324059	Argument	logical_name		1324014	0					
ANR	1324060	Identifier	logical_name		1324014	0					
ANR	1324061	Argument	"""default stdout"""		1324014	1					
ANR	1324062	PrimaryExpression	"""default stdout"""		1324014	0					
ANR	1324063	CompoundStatement		10:51:285:285	1324014	1					
ANR	1324064	ExpressionStatement	"* url = strdup ( ""fd:1"" )"	372:2:9238:9259	1324014	0	True				
ANR	1324065	AssignmentExpression	"* url = strdup ( ""fd:1"" )"		1324014	0		=			
ANR	1324066	UnaryOperationExpression	* url		1324014	0					
ANR	1324067	UnaryOperator	*		1324014	0					
ANR	1324068	Identifier	url		1324014	1					
ANR	1324069	CallExpression	"strdup ( ""fd:1"" )"		1324014	1					
ANR	1324070	Callee	strdup		1324014	0					
ANR	1324071	Identifier	strdup		1324014	0					
ANR	1324072	ArgumentList	"""fd:1"""		1324014	1					
ANR	1324073	Argument	"""fd:1"""		1324014	0					
ANR	1324074	PrimaryExpression	"""fd:1"""		1324014	0					
ANR	1324075	ReturnStatement	return ;	373:2:9263:9269	1324014	1	True				
ANR	1324076	ElseStatement	else		1324014	0					
ANR	1324077	IfStatement	"if ( ! strcmp ( logical_name , ""default stderr"" ) )"		1324014	0					
ANR	1324078	Condition	"! strcmp ( logical_name , ""default stderr"" )"	374:11:9282:9319	1324014	0	True				
ANR	1324079	UnaryOperationExpression	"! strcmp ( logical_name , ""default stderr"" )"		1324014	0					
ANR	1324080	UnaryOperator	!		1324014	0					
ANR	1324081	CallExpression	"strcmp ( logical_name , ""default stderr"" )"		1324014	1					
ANR	1324082	Callee	strcmp		1324014	0					
ANR	1324083	Identifier	strcmp		1324014	0					
ANR	1324084	ArgumentList	logical_name		1324014	1					
ANR	1324085	Argument	logical_name		1324014	0					
ANR	1324086	Identifier	logical_name		1324014	0					
ANR	1324087	Argument	"""default stderr"""		1324014	1					
ANR	1324088	PrimaryExpression	"""default stderr"""		1324014	0					
ANR	1324089	CompoundStatement		13:51:373:373	1324014	1					
ANR	1324090	ExpressionStatement	"* url = strdup ( ""fd:2"" )"	375:2:9326:9347	1324014	0	True				
ANR	1324091	AssignmentExpression	"* url = strdup ( ""fd:2"" )"		1324014	0		=			
ANR	1324092	UnaryOperationExpression	* url		1324014	0					
ANR	1324093	UnaryOperator	*		1324014	0					
ANR	1324094	Identifier	url		1324014	1					
ANR	1324095	CallExpression	"strdup ( ""fd:2"" )"		1324014	1					
ANR	1324096	Callee	strdup		1324014	0					
ANR	1324097	Identifier	strdup		1324014	0					
ANR	1324098	ArgumentList	"""fd:2"""		1324014	1					
ANR	1324099	Argument	"""fd:2"""		1324014	0					
ANR	1324100	PrimaryExpression	"""fd:2"""		1324014	0					
ANR	1324101	ReturnStatement	return ;	376:2:9351:9357	1324014	1	True				
ANR	1324102	IfStatement	if ( LocalSysCalls ( ) || ( never_ask_shadow == TRUE ) )		1324014	3					
ANR	1324103	Condition	LocalSysCalls ( ) || ( never_ask_shadow == TRUE )	382:5:9495:9539	1324014	0	True				
ANR	1324104	OrExpression	LocalSysCalls ( ) || ( never_ask_shadow == TRUE )		1324014	0		||			
ANR	1324105	CallExpression	LocalSysCalls ( )		1324014	0					
ANR	1324106	Callee	LocalSysCalls		1324014	0					
ANR	1324107	Identifier	LocalSysCalls		1324014	0					
ANR	1324108	ArgumentList			1324014	1					
ANR	1324109	EqualityExpression	never_ask_shadow == TRUE		1324014	1		==			
ANR	1324110	Identifier	never_ask_shadow		1324014	0					
ANR	1324111	Identifier	TRUE		1324014	1					
ANR	1324112	CompoundStatement		21:52:593:593	1324014	1					
ANR	1324113	ExpressionStatement	* url = ( char * ) malloc ( strlen ( logical_name ) + 7 )	383:2:9546:9591	1324014	0	True				
ANR	1324114	AssignmentExpression	* url = ( char * ) malloc ( strlen ( logical_name ) + 7 )		1324014	0		=			
ANR	1324115	UnaryOperationExpression	* url		1324014	0					
ANR	1324116	UnaryOperator	*		1324014	0					
ANR	1324117	Identifier	url		1324014	1					
ANR	1324118	CastExpression	( char * ) malloc ( strlen ( logical_name ) + 7 )		1324014	1					
ANR	1324119	CastTarget	char *		1324014	0					
ANR	1324120	CallExpression	malloc ( strlen ( logical_name ) + 7 )		1324014	1					
ANR	1324121	Callee	malloc		1324014	0					
ANR	1324122	Identifier	malloc		1324014	0					
ANR	1324123	ArgumentList	strlen ( logical_name ) + 7		1324014	1					
ANR	1324124	Argument	strlen ( logical_name ) + 7		1324014	0					
ANR	1324125	AdditiveExpression	strlen ( logical_name ) + 7		1324014	0		+			
ANR	1324126	CallExpression	strlen ( logical_name )		1324014	0					
ANR	1324127	Callee	strlen		1324014	0					
ANR	1324128	Identifier	strlen		1324014	0					
ANR	1324129	ArgumentList	logical_name		1324014	1					
ANR	1324130	Argument	logical_name		1324014	0					
ANR	1324131	Identifier	logical_name		1324014	0					
ANR	1324132	PrimaryExpression	7		1324014	1					
ANR	1324133	ExpressionStatement	"sprintf ( * url , ""local:%s"" , logical_name )"	384:2:9595:9632	1324014	1	True				
ANR	1324134	CallExpression	"sprintf ( * url , ""local:%s"" , logical_name )"		1324014	0					
ANR	1324135	Callee	sprintf		1324014	0					
ANR	1324136	Identifier	sprintf		1324014	0					
ANR	1324137	ArgumentList	* url		1324014	1					
ANR	1324138	Argument	* url		1324014	0					
ANR	1324139	UnaryOperationExpression	* url		1324014	0					
ANR	1324140	UnaryOperator	*		1324014	0					
ANR	1324141	Identifier	url		1324014	1					
ANR	1324142	Argument	"""local:%s"""		1324014	1					
ANR	1324143	PrimaryExpression	"""local:%s"""		1324014	0					
ANR	1324144	Argument	logical_name		1324014	2					
ANR	1324145	Identifier	logical_name		1324014	0					
ANR	1324146	ElseStatement	else		1324014	0					
ANR	1324147	CompoundStatement		24:8:693:693	1324014	0					
ANR	1324148	IfStatement	if ( never_ask_shadow == FALSE )		1324014	0					
ANR	1324149	Condition	never_ask_shadow == FALSE	386:6:9650:9674	1324014	0	True				
ANR	1324150	EqualityExpression	never_ask_shadow == FALSE		1324014	0		==			
ANR	1324151	Identifier	never_ask_shadow		1324014	0					
ANR	1324152	Identifier	FALSE		1324014	1					
ANR	1324153	CompoundStatement		26:3:734:744	1324014	1					
ANR	1324154	IdentifierDeclStatement	int result ;	387:3:9683:9693	1324014	0	True				
ANR	1324155	IdentifierDecl	result		1324014	0					
ANR	1324156	IdentifierDeclType	int		1324014	0					
ANR	1324157	Identifier	result		1324014	1					
ANR	1324158	ExpressionStatement	"result = REMOTE_CONDOR_get_file_info_new ( logical_name , * url )"	399:3:10156:10218	1324014	1	True				
ANR	1324159	AssignmentExpression	"result = REMOTE_CONDOR_get_file_info_new ( logical_name , * url )"		1324014	0		=			
ANR	1324160	Identifier	result		1324014	0					
ANR	1324161	CallExpression	"REMOTE_CONDOR_get_file_info_new ( logical_name , * url )"		1324014	1					
ANR	1324162	Callee	REMOTE_CONDOR_get_file_info_new		1324014	0					
ANR	1324163	Identifier	REMOTE_CONDOR_get_file_info_new		1324014	0					
ANR	1324164	ArgumentList	logical_name		1324014	1					
ANR	1324165	Argument	logical_name		1324014	0					
ANR	1324166	Identifier	logical_name		1324014	0					
ANR	1324167	Argument	* url		1324014	1					
ANR	1324168	UnaryOperationExpression	* url		1324014	0					
ANR	1324169	UnaryOperator	*		1324014	0					
ANR	1324170	Identifier	url		1324014	1					
ANR	1324171	IfStatement	if ( result == 1 )		1324014	2					
ANR	1324172	Condition	result == 1	401:7:10228:10238	1324014	0	True				
ANR	1324173	EqualityExpression	result == 1		1324014	0		==			
ANR	1324174	Identifier	result		1324014	0					
ANR	1324175	PrimaryExpression	1		1324014	1					
ANR	1324176	CompoundStatement		40:20:1292:1292	1324014	1					
ANR	1324177	ExpressionStatement	never_ask_shadow = TRUE	402:4:10247:10270	1324014	0	True				
ANR	1324178	AssignmentExpression	never_ask_shadow = TRUE		1324014	0		=			
ANR	1324179	Identifier	never_ask_shadow		1324014	0					
ANR	1324180	Identifier	TRUE		1324014	1					
ANR	1324181	ElseStatement	else		1324014	0					
ANR	1324182	IfStatement	if ( result < 0 )		1324014	0					
ANR	1324183	Condition	result < 0	403:14:10286:10295	1324014	0	True				
ANR	1324184	RelationalExpression	result < 0		1324014	0		<			
ANR	1324185	Identifier	result		1324014	0					
ANR	1324186	PrimaryExpression	0		1324014	1					
ANR	1324187	CompoundStatement		42:27:1350:1350	1324014	1					
ANR	1324188	ExpressionStatement	free ( * url )	404:4:10305:10317	1324014	0	True				
ANR	1324189	CallExpression	free ( * url )		1324014	0					
ANR	1324190	Callee	free		1324014	0					
ANR	1324191	Identifier	free		1324014	0					
ANR	1324192	ArgumentList	* url		1324014	1					
ANR	1324193	Argument	* url		1324014	0					
ANR	1324194	UnaryOperationExpression	* url		1324014	0					
ANR	1324195	UnaryOperator	*		1324014	0					
ANR	1324196	Identifier	url		1324014	1					
ANR	1324197	ExpressionStatement	* url = ( char * ) malloc ( strlen ( logical_name ) + 8 )	405:4:10323:10368	1324014	1	True				
ANR	1324198	AssignmentExpression	* url = ( char * ) malloc ( strlen ( logical_name ) + 8 )		1324014	0		=			
ANR	1324199	UnaryOperationExpression	* url		1324014	0					
ANR	1324200	UnaryOperator	*		1324014	0					
ANR	1324201	Identifier	url		1324014	1					
ANR	1324202	CastExpression	( char * ) malloc ( strlen ( logical_name ) + 8 )		1324014	1					
ANR	1324203	CastTarget	char *		1324014	0					
ANR	1324204	CallExpression	malloc ( strlen ( logical_name ) + 8 )		1324014	1					
ANR	1324205	Callee	malloc		1324014	0					
ANR	1324206	Identifier	malloc		1324014	0					
ANR	1324207	ArgumentList	strlen ( logical_name ) + 8		1324014	1					
ANR	1324208	Argument	strlen ( logical_name ) + 8		1324014	0					
ANR	1324209	AdditiveExpression	strlen ( logical_name ) + 8		1324014	0		+			
ANR	1324210	CallExpression	strlen ( logical_name )		1324014	0					
ANR	1324211	Callee	strlen		1324014	0					
ANR	1324212	Identifier	strlen		1324014	0					
ANR	1324213	ArgumentList	logical_name		1324014	1					
ANR	1324214	Argument	logical_name		1324014	0					
ANR	1324215	Identifier	logical_name		1324014	0					
ANR	1324216	PrimaryExpression	8		1324014	1					
ANR	1324217	ExpressionStatement	"sprintf ( * url , ""buffer:remote:%s"" , logical_name )"	406:4:10374:10419	1324014	2	True				
ANR	1324218	CallExpression	"sprintf ( * url , ""buffer:remote:%s"" , logical_name )"		1324014	0					
ANR	1324219	Callee	sprintf		1324014	0					
ANR	1324220	Identifier	sprintf		1324014	0					
ANR	1324221	ArgumentList	* url		1324014	1					
ANR	1324222	Argument	* url		1324014	0					
ANR	1324223	UnaryOperationExpression	* url		1324014	0					
ANR	1324224	UnaryOperator	*		1324014	0					
ANR	1324225	Identifier	url		1324014	1					
ANR	1324226	Argument	"""buffer:remote:%s"""		1324014	1					
ANR	1324227	PrimaryExpression	"""buffer:remote:%s"""		1324014	0					
ANR	1324228	Argument	logical_name		1324014	2					
ANR	1324229	Identifier	logical_name		1324014	0					
ANR	1324230	IfStatement	if ( ! got_buffer_info )		1324014	3					
ANR	1324231	Condition	! got_buffer_info	409:6:10434:10449	1324014	0	True				
ANR	1324232	UnaryOperationExpression	! got_buffer_info		1324014	0					
ANR	1324233	UnaryOperator	!		1324014	0					
ANR	1324234	Identifier	got_buffer_info		1324014	1					
ANR	1324235	CompoundStatement		49:4:1509:1517	1324014	1					
ANR	1324236	IdentifierDeclStatement	int temp ;	410:4:10458:10466	1324014	0	True				
ANR	1324237	IdentifierDecl	temp		1324014	0					
ANR	1324238	IdentifierDeclType	int		1324014	0					
ANR	1324239	Identifier	temp		1324014	1					
ANR	1324240	ExpressionStatement	"REMOTE_CONDOR_get_buffer_info ( & buffer_size , & buffer_block_size , & temp )"	411:4:10472:10557	1324014	1	True				
ANR	1324241	CallExpression	"REMOTE_CONDOR_get_buffer_info ( & buffer_size , & buffer_block_size , & temp )"		1324014	0					
ANR	1324242	Callee	REMOTE_CONDOR_get_buffer_info		1324014	0					
ANR	1324243	Identifier	REMOTE_CONDOR_get_buffer_info		1324014	0					
ANR	1324244	ArgumentList	& buffer_size		1324014	1					
ANR	1324245	Argument	& buffer_size		1324014	0					
ANR	1324246	UnaryOperationExpression	& buffer_size		1324014	0					
ANR	1324247	UnaryOperator	&		1324014	0					
ANR	1324248	Identifier	buffer_size		1324014	1					
ANR	1324249	Argument	& buffer_block_size		1324014	1					
ANR	1324250	UnaryOperationExpression	& buffer_block_size		1324014	0					
ANR	1324251	UnaryOperator	&		1324014	0					
ANR	1324252	Identifier	buffer_block_size		1324014	1					
ANR	1324253	Argument	& temp		1324014	2					
ANR	1324254	UnaryOperationExpression	& temp		1324014	0					
ANR	1324255	UnaryOperator	&		1324014	0					
ANR	1324256	Identifier	temp		1324014	1					
ANR	1324257	ExpressionStatement	got_buffer_info = 1	413:4:10563:10582	1324014	2	True				
ANR	1324258	AssignmentExpression	got_buffer_info = 1		1324014	0		=			
ANR	1324259	Identifier	got_buffer_info		1324014	0					
ANR	1324260	PrimaryExpression	1		1324014	1					
ANR	1324261	ReturnType	void		1324014	1					
ANR	1324262	Identifier	CondorFileTable :: lookup_url		1324014	2					
ANR	1324263	ParameterList	"char * logical_name , char * * url"		1324014	3					
ANR	1324264	Parameter	char * logical_name	361:34:8915:8932	1324014	0	True				
ANR	1324265	ParameterType	char *		1324014	0					
ANR	1324266	Identifier	logical_name		1324014	1					
ANR	1324267	Parameter	char * * url	361:54:8935:8944	1324014	1	True				
ANR	1324268	ParameterType	char * *		1324014	0					
ANR	1324269	Identifier	url		1324014	1					
ANR	1324270	CFGEntryNode	ENTRY		1324014		True				
ANR	1324271	CFGExitNode	EXIT		1324014		True				
ANR	1324272	Symbol	strcmp		1324014						
ANR	1324273	Symbol	malloc		1324014						
ANR	1324274	Symbol	logical_name		1324014						
ANR	1324275	Symbol	temp		1324014						
ANR	1324276	Symbol	& buffer_block_size		1324014						
ANR	1324277	Symbol	TRUE		1324014						
ANR	1324278	Symbol	& buffer_size		1324014						
ANR	1324279	Symbol	LocalSysCalls		1324014						
ANR	1324280	Symbol	REMOTE_CONDOR_get_file_info_new		1324014						
ANR	1324281	Symbol	url		1324014						
ANR	1324282	Symbol	result		1324014						
ANR	1324283	Symbol	never_ask_shadow		1324014						
ANR	1324284	Symbol	strlen		1324014						
ANR	1324285	Symbol	* url		1324014						
ANR	1324286	Symbol	FALSE		1324014						
ANR	1324287	Symbol	got_buffer_info		1324014						
ANR	1324288	Symbol	strdup		1324014						
ANR	1324289	Symbol	& temp		1324014						
ANR	1324290	Function	CondorFileTable :: create_url_chain	424:0:10757:11030							
ANR	1324291	FunctionDef	CondorFileTable :: create_url_chain (char const * url)		1324290	0					
ANR	1324292	CompoundStatement		425:0:10823:11030	1324290	0					
ANR	1324293	IdentifierDeclStatement	char * method = ( char * ) malloc ( strlen ( url ) + 1 ) ;	426:1:10826:10870	1324290	0	True				
ANR	1324294	IdentifierDecl	* method = ( char * ) malloc ( strlen ( url ) + 1 )		1324290	0					
ANR	1324295	IdentifierDeclType	char *		1324290	0					
ANR	1324296	Identifier	method		1324290	1					
ANR	1324297	AssignmentExpression	* method = ( char * ) malloc ( strlen ( url ) + 1 )		1324290	2		=			
ANR	1324298	Identifier	method		1324290	0					
ANR	1324299	CastExpression	( char * ) malloc ( strlen ( url ) + 1 )		1324290	1					
ANR	1324300	CastTarget	char *		1324290	0					
ANR	1324301	CallExpression	malloc ( strlen ( url ) + 1 )		1324290	1					
ANR	1324302	Callee	malloc		1324290	0					
ANR	1324303	Identifier	malloc		1324290	0					
ANR	1324304	ArgumentList	strlen ( url ) + 1		1324290	1					
ANR	1324305	Argument	strlen ( url ) + 1		1324290	0					
ANR	1324306	AdditiveExpression	strlen ( url ) + 1		1324290	0		+			
ANR	1324307	CallExpression	strlen ( url )		1324290	0					
ANR	1324308	Callee	strlen		1324290	0					
ANR	1324309	Identifier	strlen		1324290	0					
ANR	1324310	ArgumentList	url		1324290	1					
ANR	1324311	Argument	url		1324290	0					
ANR	1324312	Identifier	url		1324290	0					
ANR	1324313	PrimaryExpression	1		1324290	1					
ANR	1324314	IdentifierDeclStatement	char * rest = ( char * ) malloc ( strlen ( url ) + 1 ) ;	427:1:10873:10915	1324290	1	True				
ANR	1324315	IdentifierDecl	* rest = ( char * ) malloc ( strlen ( url ) + 1 )		1324290	0					
ANR	1324316	IdentifierDeclType	char *		1324290	0					
ANR	1324317	Identifier	rest		1324290	1					
ANR	1324318	AssignmentExpression	* rest = ( char * ) malloc ( strlen ( url ) + 1 )		1324290	2		=			
ANR	1324319	Identifier	rest		1324290	0					
ANR	1324320	CastExpression	( char * ) malloc ( strlen ( url ) + 1 )		1324290	1					
ANR	1324321	CastTarget	char *		1324290	0					
ANR	1324322	CallExpression	malloc ( strlen ( url ) + 1 )		1324290	1					
ANR	1324323	Callee	malloc		1324290	0					
ANR	1324324	Identifier	malloc		1324290	0					
ANR	1324325	ArgumentList	strlen ( url ) + 1		1324290	1					
ANR	1324326	Argument	strlen ( url ) + 1		1324290	0					
ANR	1324327	AdditiveExpression	strlen ( url ) + 1		1324290	0		+			
ANR	1324328	CallExpression	strlen ( url )		1324290	0					
ANR	1324329	Callee	strlen		1324290	0					
ANR	1324330	Identifier	strlen		1324290	0					
ANR	1324331	ArgumentList	url		1324290	1					
ANR	1324332	Argument	url		1324290	0					
ANR	1324333	Identifier	url		1324290	0					
ANR	1324334	PrimaryExpression	1		1324290	1					
ANR	1324335	IdentifierDeclStatement	"CondorFile * result = create_url_chain ( url , method , rest ) ;"	429:1:10919:10978	1324290	2	True				
ANR	1324336	IdentifierDecl	"* result = create_url_chain ( url , method , rest )"		1324290	0					
ANR	1324337	IdentifierDeclType	CondorFile *		1324290	0					
ANR	1324338	Identifier	result		1324290	1					
ANR	1324339	AssignmentExpression	"* result = create_url_chain ( url , method , rest )"		1324290	2		=			
ANR	1324340	Identifier	result		1324290	0					
ANR	1324341	CallExpression	"create_url_chain ( url , method , rest )"		1324290	1					
ANR	1324342	Callee	create_url_chain		1324290	0					
ANR	1324343	Identifier	create_url_chain		1324290	0					
ANR	1324344	ArgumentList	url		1324290	1					
ANR	1324345	Argument	url		1324290	0					
ANR	1324346	Identifier	url		1324290	0					
ANR	1324347	Argument	method		1324290	1					
ANR	1324348	Identifier	method		1324290	0					
ANR	1324349	Argument	rest		1324290	2					
ANR	1324350	Identifier	rest		1324290	0					
ANR	1324351	ExpressionStatement	free ( method )	431:1:10982:10996	1324290	3	True				
ANR	1324352	CallExpression	free ( method )		1324290	0					
ANR	1324353	Callee	free		1324290	0					
ANR	1324354	Identifier	free		1324290	0					
ANR	1324355	ArgumentList	method		1324290	1					
ANR	1324356	Argument	method		1324290	0					
ANR	1324357	Identifier	method		1324290	0					
ANR	1324358	ExpressionStatement	free ( rest )	432:1:10999:11011	1324290	4	True				
ANR	1324359	CallExpression	free ( rest )		1324290	0					
ANR	1324360	Callee	free		1324290	0					
ANR	1324361	Identifier	free		1324290	0					
ANR	1324362	ArgumentList	rest		1324290	1					
ANR	1324363	Argument	rest		1324290	0					
ANR	1324364	Identifier	rest		1324290	0					
ANR	1324365	ReturnStatement	return result ;	434:1:11015:11028	1324290	5	True				
ANR	1324366	Identifier	result		1324290	0					
ANR	1324367	ReturnType	CondorFile *		1324290	1					
ANR	1324368	Identifier	CondorFileTable :: create_url_chain		1324290	2					
ANR	1324369	ParameterList	char const * url		1324290	3					
ANR	1324370	Parameter	char const * url	424:48:10805:10819	1324290	0	True				
ANR	1324371	ParameterType	char const *		1324290	0					
ANR	1324372	Identifier	url		1324290	1					
ANR	1324373	CFGEntryNode	ENTRY		1324290		True				
ANR	1324374	CFGExitNode	EXIT		1324290		True				
ANR	1324375	Symbol	result		1324290						
ANR	1324376	Symbol	strlen		1324290						
ANR	1324377	Symbol	malloc		1324290						
ANR	1324378	Symbol	rest		1324290						
ANR	1324379	Symbol	create_url_chain		1324290						
ANR	1324380	Symbol	method		1324290						
ANR	1324381	Symbol	url		1324290						
ANR	1324382	Function	CondorFileTable :: create_url_chain	437:0:11033:12738							
ANR	1324383	FunctionDef	"CondorFileTable :: create_url_chain (char const * url , char * method , char * rest)"		1324382	0					
ANR	1324384	CompoundStatement		438:0:11125:12738	1324382	0					
ANR	1324385	IdentifierDeclStatement	char * next ;	439:1:11128:11138	1324382	0	True				
ANR	1324386	IdentifierDecl	* next		1324382	0					
ANR	1324387	IdentifierDeclType	char *		1324382	0					
ANR	1324388	Identifier	next		1324382	1					
ANR	1324389	IdentifierDeclStatement	CondorFile * f ;	440:1:11141:11154	1324382	1	True				
ANR	1324390	IdentifierDecl	* f		1324382	0					
ANR	1324391	IdentifierDeclType	CondorFile *		1324382	0					
ANR	1324392	Identifier	f		1324382	1					
ANR	1324393	IdentifierDeclStatement	"int fields = sscanf ( url , ""%[^:]:%[\\x1-\\x7F]"" , method , rest ) ;"	446:1:11322:11383	1324382	2	True				
ANR	1324394	IdentifierDecl	"fields = sscanf ( url , ""%[^:]:%[\\x1-\\x7F]"" , method , rest )"		1324382	0					
ANR	1324395	IdentifierDeclType	int		1324382	0					
ANR	1324396	Identifier	fields		1324382	1					
ANR	1324397	AssignmentExpression	"fields = sscanf ( url , ""%[^:]:%[\\x1-\\x7F]"" , method , rest )"		1324382	2		=			
ANR	1324398	Identifier	fields		1324382	0					
ANR	1324399	CallExpression	"sscanf ( url , ""%[^:]:%[\\x1-\\x7F]"" , method , rest )"		1324382	1					
ANR	1324400	Callee	sscanf		1324382	0					
ANR	1324401	Identifier	sscanf		1324382	0					
ANR	1324402	ArgumentList	url		1324382	1					
ANR	1324403	Argument	url		1324382	0					
ANR	1324404	Identifier	url		1324382	0					
ANR	1324405	Argument	"""%[^:]:%[\\x1-\\x7F]"""		1324382	1					
ANR	1324406	PrimaryExpression	"""%[^:]:%[\\x1-\\x7F]"""		1324382	0					
ANR	1324407	Argument	method		1324382	2					
ANR	1324408	Identifier	method		1324382	0					
ANR	1324409	Argument	rest		1324382	3					
ANR	1324410	Identifier	rest		1324382	0					
ANR	1324411	IfStatement	if ( fields != 2 )		1324382	3					
ANR	1324412	Condition	fields != 2	451:5:11470:11478	1324382	0	True				
ANR	1324413	EqualityExpression	fields != 2		1324382	0		!=			
ANR	1324414	Identifier	fields		1324382	0					
ANR	1324415	PrimaryExpression	2		1324382	1					
ANR	1324416	ReturnStatement	return 0 ;	451:17:11482:11490	1324382	1	True				
ANR	1324417	PrimaryExpression	0		1324382	0					
ANR	1324418	ExpressionStatement	next = rest	456:1:11604:11615	1324382	4	True				
ANR	1324419	AssignmentExpression	next = rest		1324382	0		=			
ANR	1324420	Identifier	next		1324382	0					
ANR	1324421	Identifier	rest		1324382	1					
ANR	1324422	IfStatement	if ( * next == '(' )		1324382	5					
ANR	1324423	Condition	* next == '('	457:5:11622:11631	1324382	0	True				
ANR	1324424	EqualityExpression	* next == '('		1324382	0		==			
ANR	1324425	UnaryOperationExpression	* next		1324382	0					
ANR	1324426	UnaryOperator	*		1324382	0					
ANR	1324427	Identifier	next		1324382	1					
ANR	1324428	PrimaryExpression	'('		1324382	1					
ANR	1324429	CompoundStatement		20:18:509:509	1324382	1					
ANR	1324430	WhileStatement	while ( * next )		1324382	0					
ANR	1324431	Condition	* next	458:8:11645:11649	1324382	0	True				
ANR	1324432	UnaryOperationExpression	* next		1324382	0					
ANR	1324433	UnaryOperator	*		1324382	0					
ANR	1324434	Identifier	next		1324382	1					
ANR	1324435	CompoundStatement		21:15:526:526	1324382	1					
ANR	1324436	ExpressionStatement	next ++	459:3:11657:11663	1324382	0	True				
ANR	1324437	PostIncDecOperationExpression	next ++		1324382	0					
ANR	1324438	Identifier	next		1324382	0					
ANR	1324439	IncDec	++		1324382	1					
ANR	1324440	IfStatement	if ( * next == ')' )		1324382	1					
ANR	1324441	Condition	* next == ')'	460:6:11671:11680	1324382	0	True				
ANR	1324442	EqualityExpression	* next == ')'		1324382	0		==			
ANR	1324443	UnaryOperationExpression	* next		1324382	0					
ANR	1324444	UnaryOperator	*		1324382	0					
ANR	1324445	Identifier	next		1324382	1					
ANR	1324446	PrimaryExpression	')'		1324382	1					
ANR	1324447	CompoundStatement		23:18:557:557	1324382	1					
ANR	1324448	ExpressionStatement	next ++	461:4:11689:11695	1324382	0	True				
ANR	1324449	PostIncDecOperationExpression	next ++		1324382	0					
ANR	1324450	Identifier	next		1324382	0					
ANR	1324451	IncDec	++		1324382	1					
ANR	1324452	BreakStatement	break ;	462:4:11701:11706	1324382	1	True				
ANR	1324453	IfStatement	"if ( ! strcmp ( method , ""local"" ) )"		1324382	6					
ANR	1324454	Condition	"! strcmp ( method , ""local"" )"	469:5:11758:11783	1324382	0	True				
ANR	1324455	UnaryOperationExpression	"! strcmp ( method , ""local"" )"		1324382	0					
ANR	1324456	UnaryOperator	!		1324382	0					
ANR	1324457	CallExpression	"strcmp ( method , ""local"" )"		1324382	1					
ANR	1324458	Callee	strcmp		1324382	0					
ANR	1324459	Identifier	strcmp		1324382	0					
ANR	1324460	ArgumentList	method		1324382	1					
ANR	1324461	Argument	method		1324382	0					
ANR	1324462	Identifier	method		1324382	0					
ANR	1324463	Argument	"""local"""		1324382	1					
ANR	1324464	PrimaryExpression	"""local"""		1324382	0					
ANR	1324465	CompoundStatement		32:34:661:661	1324382	1					
ANR	1324466	Statement	return	470:2:11791:11796	1324382	0	True				
ANR	1324467	Statement	new	470:9:11798:11800	1324382	1	True				
ANR	1324468	ExpressionStatement	CondorFileLocal	470:13:11802:11817	1324382	2	True				
ANR	1324469	Identifier	CondorFileLocal		1324382	0					
ANR	1324470	ElseStatement	else		1324382	0					
ANR	1324471	IfStatement	"if ( ! strcmp ( method , ""fd"" ) )"		1324382	0					
ANR	1324472	Condition	"! strcmp ( method , ""fd"" )"	471:12:11831:11853	1324382	0	True				
ANR	1324473	UnaryOperationExpression	"! strcmp ( method , ""fd"" )"		1324382	0					
ANR	1324474	UnaryOperator	!		1324382	0					
ANR	1324475	CallExpression	"strcmp ( method , ""fd"" )"		1324382	1					
ANR	1324476	Callee	strcmp		1324382	0					
ANR	1324477	Identifier	strcmp		1324382	0					
ANR	1324478	ArgumentList	method		1324382	1					
ANR	1324479	Argument	method		1324382	0					
ANR	1324480	Identifier	method		1324382	0					
ANR	1324481	Argument	"""fd"""		1324382	1					
ANR	1324482	PrimaryExpression	"""fd"""		1324382	0					
ANR	1324483	CompoundStatement		34:39:732:732	1324382	1					
ANR	1324484	Statement	return	472:2:11862:11867	1324382	0	True				
ANR	1324485	Statement	new	472:9:11869:11871	1324382	1	True				
ANR	1324486	ExpressionStatement	CondorFileFD	472:13:11873:11885	1324382	2	True				
ANR	1324487	Identifier	CondorFileFD		1324382	0					
ANR	1324488	ElseStatement	else		1324382	0					
ANR	1324489	IfStatement	"if ( ! strcmp ( method , ""special"" ) )"		1324382	0					
ANR	1324490	Condition	"! strcmp ( method , ""special"" )"	473:12:11899:11926	1324382	0	True				
ANR	1324491	UnaryOperationExpression	"! strcmp ( method , ""special"" )"		1324382	0					
ANR	1324492	UnaryOperator	!		1324382	0					
ANR	1324493	CallExpression	"strcmp ( method , ""special"" )"		1324382	1					
ANR	1324494	Callee	strcmp		1324382	0					
ANR	1324495	Identifier	strcmp		1324382	0					
ANR	1324496	ArgumentList	method		1324382	1					
ANR	1324497	Argument	method		1324382	0					
ANR	1324498	Identifier	method		1324382	0					
ANR	1324499	Argument	"""special"""		1324382	1					
ANR	1324500	PrimaryExpression	"""special"""		1324382	0					
ANR	1324501	CompoundStatement		36:43:804:804	1324382	1					
ANR	1324502	Statement	return	474:2:11934:11939	1324382	0	True				
ANR	1324503	Statement	new	474:9:11941:11943	1324382	1	True				
ANR	1324504	ExpressionStatement	CondorFileSpecial	474:13:11945:11962	1324382	2	True				
ANR	1324505	Identifier	CondorFileSpecial		1324382	0					
ANR	1324506	ElseStatement	else		1324382	0					
ANR	1324507	IfStatement	"if ( ! strcmp ( method , ""remote"" ) )"		1324382	0					
ANR	1324508	Condition	"! strcmp ( method , ""remote"" )"	475:12:11976:12002	1324382	0	True				
ANR	1324509	UnaryOperationExpression	"! strcmp ( method , ""remote"" )"		1324382	0					
ANR	1324510	UnaryOperator	!		1324382	0					
ANR	1324511	CallExpression	"strcmp ( method , ""remote"" )"		1324382	1					
ANR	1324512	Callee	strcmp		1324382	0					
ANR	1324513	Identifier	strcmp		1324382	0					
ANR	1324514	ArgumentList	method		1324382	1					
ANR	1324515	Argument	method		1324382	0					
ANR	1324516	Identifier	method		1324382	0					
ANR	1324517	Argument	"""remote"""		1324382	1					
ANR	1324518	PrimaryExpression	"""remote"""		1324382	0					
ANR	1324519	CompoundStatement		38:42:880:880	1324382	1					
ANR	1324520	Statement	return	476:2:12010:12015	1324382	0	True				
ANR	1324521	Statement	new	476:9:12017:12019	1324382	1	True				
ANR	1324522	ExpressionStatement	CondorFileRemote	476:13:12021:12037	1324382	2	True				
ANR	1324523	Identifier	CondorFileRemote		1324382	0					
ANR	1324524	ElseStatement	else		1324382	0					
ANR	1324525	IfStatement	"if ( ! strcmp ( method , ""buffer"" ) )"		1324382	0					
ANR	1324526	Condition	"! strcmp ( method , ""buffer"" )"	477:12:12051:12077	1324382	0	True				
ANR	1324527	UnaryOperationExpression	"! strcmp ( method , ""buffer"" )"		1324382	0					
ANR	1324528	UnaryOperator	!		1324382	0					
ANR	1324529	CallExpression	"strcmp ( method , ""buffer"" )"		1324382	1					
ANR	1324530	Callee	strcmp		1324382	0					
ANR	1324531	Identifier	strcmp		1324382	0					
ANR	1324532	ArgumentList	method		1324382	1					
ANR	1324533	Argument	method		1324382	0					
ANR	1324534	Identifier	method		1324382	0					
ANR	1324535	Argument	"""buffer"""		1324382	1					
ANR	1324536	PrimaryExpression	"""buffer"""		1324382	0					
ANR	1324537	CompoundStatement		40:42:955:955	1324382	1					
ANR	1324538	ExpressionStatement	f = create_url_chain ( next )	478:2:12085:12113	1324382	0	True				
ANR	1324539	AssignmentExpression	f = create_url_chain ( next )		1324382	0		=			
ANR	1324540	Identifier	f		1324382	0					
ANR	1324541	CallExpression	create_url_chain ( next )		1324382	1					
ANR	1324542	Callee	create_url_chain		1324382	0					
ANR	1324543	Identifier	create_url_chain		1324382	0					
ANR	1324544	ArgumentList	next		1324382	1					
ANR	1324545	Argument	next		1324382	0					
ANR	1324546	Identifier	next		1324382	0					
ANR	1324547	IfStatement	if ( f )		1324382	1					
ANR	1324548	Condition	f	479:5:12120:12120	1324382	0	True				
ANR	1324549	Identifier	f		1324382	0					
ANR	1324550	ReturnStatement	"return new CondorFileBuffer ( f , buffer_size , buffer_block_size ) ;"	479:8:12123:12187	1324382	1	True				
ANR	1324551	Expression	"f , buffer_size , buffer_block_size"		1324382	0					
ANR	1324552	Identifier	f		1324382	0					
ANR	1324553	Expression	"buffer_size , buffer_block_size"		1324382	1					
ANR	1324554	Identifier	buffer_size		1324382	0					
ANR	1324555	Identifier	buffer_block_size		1324382	1					
ANR	1324556	ElseStatement	else		1324382	0					
ANR	1324557	ReturnStatement	return 0 ;	480:7:12196:12204	1324382	0	True				
ANR	1324558	PrimaryExpression	0		1324382	0					
ANR	1324559	ElseStatement	else		1324382	0					
ANR	1324560	IfStatement	"if ( ! strcmp ( method , ""fetch"" ) )"		1324382	0					
ANR	1324561	Condition	"! strcmp ( method , ""fetch"" )"	481:12:12218:12243	1324382	0	True				
ANR	1324562	UnaryOperationExpression	"! strcmp ( method , ""fetch"" )"		1324382	0					
ANR	1324563	UnaryOperator	!		1324382	0					
ANR	1324564	CallExpression	"strcmp ( method , ""fetch"" )"		1324382	1					
ANR	1324565	Callee	strcmp		1324382	0					
ANR	1324566	Identifier	strcmp		1324382	0					
ANR	1324567	ArgumentList	method		1324382	1					
ANR	1324568	Argument	method		1324382	0					
ANR	1324569	Identifier	method		1324382	0					
ANR	1324570	Argument	"""fetch"""		1324382	1					
ANR	1324571	PrimaryExpression	"""fetch"""		1324382	0					
ANR	1324572	CompoundStatement		44:41:1121:1121	1324382	1					
ANR	1324573	ExpressionStatement	f = create_url_chain ( next )	482:2:12251:12279	1324382	0	True				
ANR	1324574	AssignmentExpression	f = create_url_chain ( next )		1324382	0		=			
ANR	1324575	Identifier	f		1324382	0					
ANR	1324576	CallExpression	create_url_chain ( next )		1324382	1					
ANR	1324577	Callee	create_url_chain		1324382	0					
ANR	1324578	Identifier	create_url_chain		1324382	0					
ANR	1324579	ArgumentList	next		1324382	1					
ANR	1324580	Argument	next		1324382	0					
ANR	1324581	Identifier	next		1324382	0					
ANR	1324582	IfStatement	if ( f )		1324382	1					
ANR	1324583	Condition	f	483:5:12286:12286	1324382	0	True				
ANR	1324584	Identifier	f		1324382	0					
ANR	1324585	ReturnStatement	return new CondorFileAgent ( f ) ;	483:8:12289:12320	1324382	1	True				
ANR	1324586	Identifier	f		1324382	0					
ANR	1324587	ElseStatement	else		1324382	0					
ANR	1324588	ReturnStatement	return 0 ;	484:7:12329:12337	1324382	0	True				
ANR	1324589	PrimaryExpression	0		1324382	0					
ANR	1324590	ElseStatement	else		1324382	0					
ANR	1324591	IfStatement	"if ( ! strcmp ( method , ""compress"" ) )"		1324382	0					
ANR	1324592	Condition	"! strcmp ( method , ""compress"" )"	485:12:12351:12379	1324382	0	True				
ANR	1324593	UnaryOperationExpression	"! strcmp ( method , ""compress"" )"		1324382	0					
ANR	1324594	UnaryOperator	!		1324382	0					
ANR	1324595	CallExpression	"strcmp ( method , ""compress"" )"		1324382	1					
ANR	1324596	Callee	strcmp		1324382	0					
ANR	1324597	Identifier	strcmp		1324382	0					
ANR	1324598	ArgumentList	method		1324382	1					
ANR	1324599	Argument	method		1324382	0					
ANR	1324600	Identifier	method		1324382	0					
ANR	1324601	Argument	"""compress"""		1324382	1					
ANR	1324602	PrimaryExpression	"""compress"""		1324382	0					
ANR	1324603	CompoundStatement		48:44:1257:1257	1324382	1					
ANR	1324604	ExpressionStatement	f = create_url_chain ( next )	486:2:12387:12415	1324382	0	True				
ANR	1324605	AssignmentExpression	f = create_url_chain ( next )		1324382	0		=			
ANR	1324606	Identifier	f		1324382	0					
ANR	1324607	CallExpression	create_url_chain ( next )		1324382	1					
ANR	1324608	Callee	create_url_chain		1324382	0					
ANR	1324609	Identifier	create_url_chain		1324382	0					
ANR	1324610	ArgumentList	next		1324382	1					
ANR	1324611	Argument	next		1324382	0					
ANR	1324612	Identifier	next		1324382	0					
ANR	1324613	IfStatement	if ( f )		1324382	1					
ANR	1324614	Condition	f	487:5:12422:12422	1324382	0	True				
ANR	1324615	Identifier	f		1324382	0					
ANR	1324616	ReturnStatement	return new CondorFileCompress ( f ) ;	487:8:12425:12459	1324382	1	True				
ANR	1324617	Identifier	f		1324382	0					
ANR	1324618	ElseStatement	else		1324382	0					
ANR	1324619	ReturnStatement	return 0 ;	488:7:12468:12476	1324382	0	True				
ANR	1324620	PrimaryExpression	0		1324382	0					
ANR	1324621	ElseStatement	else		1324382	0					
ANR	1324622	IfStatement	"if ( ! strcmp ( method , ""append"" ) )"		1324382	0					
ANR	1324623	Condition	"! strcmp ( method , ""append"" )"	489:12:12490:12516	1324382	0	True				
ANR	1324624	UnaryOperationExpression	"! strcmp ( method , ""append"" )"		1324382	0					
ANR	1324625	UnaryOperator	!		1324382	0					
ANR	1324626	CallExpression	"strcmp ( method , ""append"" )"		1324382	1					
ANR	1324627	Callee	strcmp		1324382	0					
ANR	1324628	Identifier	strcmp		1324382	0					
ANR	1324629	ArgumentList	method		1324382	1					
ANR	1324630	Argument	method		1324382	0					
ANR	1324631	Identifier	method		1324382	0					
ANR	1324632	Argument	"""append"""		1324382	1					
ANR	1324633	PrimaryExpression	"""append"""		1324382	0					
ANR	1324634	CompoundStatement		52:42:1394:1394	1324382	1					
ANR	1324635	ExpressionStatement	f = create_url_chain ( next )	490:2:12524:12552	1324382	0	True				
ANR	1324636	AssignmentExpression	f = create_url_chain ( next )		1324382	0		=			
ANR	1324637	Identifier	f		1324382	0					
ANR	1324638	CallExpression	create_url_chain ( next )		1324382	1					
ANR	1324639	Callee	create_url_chain		1324382	0					
ANR	1324640	Identifier	create_url_chain		1324382	0					
ANR	1324641	ArgumentList	next		1324382	1					
ANR	1324642	Argument	next		1324382	0					
ANR	1324643	Identifier	next		1324382	0					
ANR	1324644	IfStatement	if ( f )		1324382	1					
ANR	1324645	Condition	f	491:5:12559:12559	1324382	0	True				
ANR	1324646	Identifier	f		1324382	0					
ANR	1324647	ReturnStatement	return new CondorFileAppend ( f ) ;	491:8:12562:12594	1324382	1	True				
ANR	1324648	Identifier	f		1324382	0					
ANR	1324649	ElseStatement	else		1324382	0					
ANR	1324650	ReturnStatement	return 0 ;	492:7:12603:12611	1324382	0	True				
ANR	1324651	PrimaryExpression	0		1324382	0					
ANR	1324652	ElseStatement	else		1324382	0					
ANR	1324653	CompoundStatement		56:8:1495:1495	1324382	0					
ANR	1324654	ExpressionStatement	"_condor_warning ( CONDOR_WARNING_KIND_BADURL , ""I don't understand url (%s)."" , url )"	494:2:12625:12703	1324382	0	True				
ANR	1324655	CallExpression	"_condor_warning ( CONDOR_WARNING_KIND_BADURL , ""I don't understand url (%s)."" , url )"		1324382	0					
ANR	1324656	Callee	_condor_warning		1324382	0					
ANR	1324657	Identifier	_condor_warning		1324382	0					
ANR	1324658	ArgumentList	CONDOR_WARNING_KIND_BADURL		1324382	1					
ANR	1324659	Argument	CONDOR_WARNING_KIND_BADURL		1324382	0					
ANR	1324660	Identifier	CONDOR_WARNING_KIND_BADURL		1324382	0					
ANR	1324661	Argument	"""I don't understand url (%s)."""		1324382	1					
ANR	1324662	PrimaryExpression	"""I don't understand url (%s)."""		1324382	0					
ANR	1324663	Argument	url		1324382	2					
ANR	1324664	Identifier	url		1324382	0					
ANR	1324665	ExpressionStatement	errno = ENOENT	495:2:12707:12721	1324382	1	True				
ANR	1324666	AssignmentExpression	errno = ENOENT		1324382	0		=			
ANR	1324667	Identifier	errno		1324382	0					
ANR	1324668	Identifier	ENOENT		1324382	1					
ANR	1324669	ReturnStatement	return 0 ;	496:2:12725:12733	1324382	2	True				
ANR	1324670	PrimaryExpression	0		1324382	0					
ANR	1324671	ReturnType	CondorFile *		1324382	1					
ANR	1324672	Identifier	CondorFileTable :: create_url_chain		1324382	2					
ANR	1324673	ParameterList	"char const * url , char * method , char * rest"		1324382	3					
ANR	1324674	Parameter	char const * url	437:48:11081:11095	1324382	0	True				
ANR	1324675	ParameterType	char const *		1324382	0					
ANR	1324676	Identifier	url		1324382	1					
ANR	1324677	Parameter	char * method	437:65:11098:11109	1324382	1	True				
ANR	1324678	ParameterType	char *		1324382	0					
ANR	1324679	Identifier	method		1324382	1					
ANR	1324680	Parameter	char * rest	437:79:11112:11121	1324382	2	True				
ANR	1324681	ParameterType	char *		1324382	0					
ANR	1324682	Identifier	rest		1324382	1					
ANR	1324683	CFGEntryNode	ENTRY		1324382		True				
ANR	1324684	CFGExitNode	EXIT		1324382		True				
ANR	1324685	Symbol	next		1324382						
ANR	1324686	Symbol	strcmp		1324382						
ANR	1324687	Symbol	rest		1324382						
ANR	1324688	Symbol	create_url_chain		1324382						
ANR	1324689	Symbol	errno		1324382						
ANR	1324690	Symbol	method		1324382						
ANR	1324691	Symbol	buffer_block_size		1324382						
ANR	1324692	Symbol	f		1324382						
ANR	1324693	Symbol	buffer_size		1324382						
ANR	1324694	Symbol	* next		1324382						
ANR	1324695	Symbol	ENOENT		1324382						
ANR	1324696	Symbol	CONDOR_WARNING_KIND_BADURL		1324382						
ANR	1324697	Symbol	url		1324382						
ANR	1324698	Symbol	sscanf		1324382						
ANR	1324699	Symbol	fields		1324382						
ANR	1324700	Function	CondorFileTable :: open_url	502:0:12790:13142							
ANR	1324701	FunctionDef	"CondorFileTable :: open_url (char const * url , int flags , int mode)"		1324700	0					
ANR	1324702	CompoundStatement		503:0:12869:13142	1324700	0					
ANR	1324703	IdentifierDeclStatement	CondorFile * f = create_url_chain ( url ) ;	504:1:12872:12911	1324700	0	True				
ANR	1324704	IdentifierDecl	* f = create_url_chain ( url )		1324700	0					
ANR	1324705	IdentifierDeclType	CondorFile *		1324700	0					
ANR	1324706	Identifier	f		1324700	1					
ANR	1324707	AssignmentExpression	* f = create_url_chain ( url )		1324700	2		=			
ANR	1324708	Identifier	f		1324700	0					
ANR	1324709	CallExpression	create_url_chain ( url )		1324700	1					
ANR	1324710	Callee	create_url_chain		1324700	0					
ANR	1324711	Identifier	create_url_chain		1324700	0					
ANR	1324712	ArgumentList	url		1324700	1					
ANR	1324713	Argument	url		1324700	0					
ANR	1324714	Identifier	url		1324700	0					
ANR	1324715	IfStatement	if ( ! f )		1324700	1					
ANR	1324716	Condition	! f	506:5:12919:12920	1324700	0	True				
ANR	1324717	UnaryOperationExpression	! f		1324700	0					
ANR	1324718	UnaryOperator	!		1324700	0					
ANR	1324719	Identifier	f		1324700	1					
ANR	1324720	CompoundStatement		4:10:54:54	1324700	1					
ANR	1324721	ExpressionStatement	"_condor_warning ( CONDOR_WARNING_KIND_BADURL , ""I can't parse url type (%s)."" , url )"	507:2:12928:13006	1324700	0	True				
ANR	1324722	CallExpression	"_condor_warning ( CONDOR_WARNING_KIND_BADURL , ""I can't parse url type (%s)."" , url )"		1324700	0					
ANR	1324723	Callee	_condor_warning		1324700	0					
ANR	1324724	Identifier	_condor_warning		1324700	0					
ANR	1324725	ArgumentList	CONDOR_WARNING_KIND_BADURL		1324700	1					
ANR	1324726	Argument	CONDOR_WARNING_KIND_BADURL		1324700	0					
ANR	1324727	Identifier	CONDOR_WARNING_KIND_BADURL		1324700	0					
ANR	1324728	Argument	"""I can't parse url type (%s)."""		1324700	1					
ANR	1324729	PrimaryExpression	"""I can't parse url type (%s)."""		1324700	0					
ANR	1324730	Argument	url		1324700	2					
ANR	1324731	Identifier	url		1324700	0					
ANR	1324732	ExpressionStatement	errno = ENOENT	508:2:13010:13024	1324700	1	True				
ANR	1324733	AssignmentExpression	errno = ENOENT		1324700	0		=			
ANR	1324734	Identifier	errno		1324700	0					
ANR	1324735	Identifier	ENOENT		1324700	1					
ANR	1324736	ReturnStatement	return 0 ;	509:2:13028:13036	1324700	2	True				
ANR	1324737	PrimaryExpression	0		1324700	0					
ANR	1324738	ElseStatement	else		1324700	0					
ANR	1324739	CompoundStatement		8:8:176:176	1324700	0					
ANR	1324740	IfStatement	"if ( f -> open ( url , flags , mode ) >= 0 )"		1324700	0					
ANR	1324741	Condition	"f -> open ( url , flags , mode ) >= 0"	511:6:13054:13079	1324700	0	True				
ANR	1324742	RelationalExpression	"f -> open ( url , flags , mode ) >= 0"		1324700	0		>=			
ANR	1324743	CallExpression	"f -> open ( url , flags , mode )"		1324700	0					
ANR	1324744	Callee	f -> open		1324700	0					
ANR	1324745	PtrMemberAccess	f -> open		1324700	0					
ANR	1324746	Identifier	f		1324700	0					
ANR	1324747	Identifier	open		1324700	1					
ANR	1324748	ArgumentList	url		1324700	1					
ANR	1324749	Argument	url		1324700	0					
ANR	1324750	Identifier	url		1324700	0					
ANR	1324751	Argument	flags		1324700	1					
ANR	1324752	Identifier	flags		1324700	0					
ANR	1324753	Argument	mode		1324700	2					
ANR	1324754	Identifier	mode		1324700	0					
ANR	1324755	PrimaryExpression	0		1324700	1					
ANR	1324756	CompoundStatement		9:35:213:213	1324700	1					
ANR	1324757	ReturnStatement	return f ;	512:3:13088:13096	1324700	0	True				
ANR	1324758	Identifier	f		1324700	0					
ANR	1324759	ElseStatement	else		1324700	0					
ANR	1324760	CompoundStatement		11:9:237:237	1324700	0					
ANR	1324761	Statement	delete	514:3:13112:13117	1324700	0	True				
ANR	1324762	ExpressionStatement	f	514:10:13119:13120	1324700	1	True				
ANR	1324763	Identifier	f		1324700	0					
ANR	1324764	ReturnStatement	return 0 ;	515:3:13125:13133	1324700	2	True				
ANR	1324765	PrimaryExpression	0		1324700	0					
ANR	1324766	ReturnType	CondorFile *		1324700	1					
ANR	1324767	Identifier	CondorFileTable :: open_url		1324700	2					
ANR	1324768	ParameterList	"char const * url , int flags , int mode"		1324700	3					
ANR	1324769	Parameter	char const * url	502:40:12830:12844	1324700	0	True				
ANR	1324770	ParameterType	char const *		1324700	0					
ANR	1324771	Identifier	url		1324700	1					
ANR	1324772	Parameter	int flags	502:57:12847:12855	1324700	1	True				
ANR	1324773	ParameterType	int		1324700	0					
ANR	1324774	Identifier	flags		1324700	1					
ANR	1324775	Parameter	int mode	502:68:12858:12865	1324700	2	True				
ANR	1324776	ParameterType	int		1324700	0					
ANR	1324777	Identifier	mode		1324700	1					
ANR	1324778	CFGEntryNode	ENTRY		1324700		True				
ANR	1324779	CFGExitNode	EXIT		1324700		True				
ANR	1324780	Symbol	mode		1324700						
ANR	1324781	Symbol	* f		1324700						
ANR	1324782	Symbol	create_url_chain		1324700						
ANR	1324783	Symbol	errno		1324700						
ANR	1324784	Symbol	f		1324700						
ANR	1324785	Symbol	flags		1324700						
ANR	1324786	Symbol	f -> open		1324700						
ANR	1324787	Symbol	ENOENT		1324700						
ANR	1324788	Symbol	CONDOR_WARNING_KIND_BADURL		1324700						
ANR	1324789	Symbol	url		1324700						
ANR	1324790	Function	CondorFileTable :: open_url_retry	522:0:13227:13760							
ANR	1324791	FunctionDef	"CondorFileTable :: open_url_retry (char const * url , int flags , int mode)"		1324790	0					
ANR	1324792	CompoundStatement		523:0:13312:13760	1324790	0					
ANR	1324793	IdentifierDeclStatement	CondorFile * f ;	524:1:13315:13328	1324790	0	True				
ANR	1324794	IdentifierDecl	* f		1324790	0					
ANR	1324795	IdentifierDeclType	CondorFile *		1324790	0					
ANR	1324796	Identifier	f		1324790	1					
ANR	1324797	ExpressionStatement	"f = open_url ( url , flags , mode )"	526:1:13332:13364	1324790	1	True				
ANR	1324798	AssignmentExpression	"f = open_url ( url , flags , mode )"		1324790	0		=			
ANR	1324799	Identifier	f		1324790	0					
ANR	1324800	CallExpression	"open_url ( url , flags , mode )"		1324790	1					
ANR	1324801	Callee	open_url		1324790	0					
ANR	1324802	Identifier	open_url		1324790	0					
ANR	1324803	ArgumentList	url		1324790	1					
ANR	1324804	Argument	url		1324790	0					
ANR	1324805	Identifier	url		1324790	0					
ANR	1324806	Argument	flags		1324790	1					
ANR	1324807	Identifier	flags		1324790	0					
ANR	1324808	Argument	mode		1324790	2					
ANR	1324809	Identifier	mode		1324790	0					
ANR	1324810	IfStatement	if ( f )		1324790	2					
ANR	1324811	Condition	f	527:4:13370:13370	1324790	0	True				
ANR	1324812	Identifier	f		1324790	0					
ANR	1324813	ReturnStatement	return f ;	527:7:13373:13381	1324790	1	True				
ANR	1324814	Identifier	f		1324790	0					
ANR	1324815	IfStatement	if ( RemoteSysCalls ( ) )		1324790	3					
ANR	1324816	Condition	RemoteSysCalls ( )	529:5:13389:13404	1324790	0	True				
ANR	1324817	CallExpression	RemoteSysCalls ( )		1324790	0					
ANR	1324818	Callee	RemoteSysCalls		1324790	0					
ANR	1324819	Identifier	RemoteSysCalls		1324790	0					
ANR	1324820	ArgumentList			1324790	1					
ANR	1324821	CompoundStatement		20:2:341:394	1324790	1					
ANR	1324822	IdentifierDeclStatement	char * path ;	530:2:13412:13422	1324790	0	True				
ANR	1324823	IdentifierDecl	* path		1324790	0					
ANR	1324824	IdentifierDeclType	char *		1324790	0					
ANR	1324825	Identifier	path		1324790	1					
ANR	1324826	IfStatement	"if ( strstr ( url , ""remote:"" ) )"		1324790	1					
ANR	1324827	Condition	"strstr ( url , ""remote:"" )"	532:6:13431:13451	1324790	0	True				
ANR	1324828	CallExpression	"strstr ( url , ""remote:"" )"		1324790	0					
ANR	1324829	Callee	strstr		1324790	0					
ANR	1324830	Identifier	strstr		1324790	0					
ANR	1324831	ArgumentList	url		1324790	1					
ANR	1324832	Argument	url		1324790	0					
ANR	1324833	Identifier	url		1324790	0					
ANR	1324834	Argument	"""remote:"""		1324790	1					
ANR	1324835	PrimaryExpression	"""remote:"""		1324790	0					
ANR	1324836	ReturnStatement	return 0 ;	532:30:13455:13463	1324790	1	True				
ANR	1324837	PrimaryExpression	0		1324790	0					
ANR	1324838	ExpressionStatement	"path = ( char * ) strrchr ( url , ':' )"	534:2:13468:13498	1324790	2	True				
ANR	1324839	AssignmentExpression	"path = ( char * ) strrchr ( url , ':' )"		1324790	0		=			
ANR	1324840	Identifier	path		1324790	0					
ANR	1324841	CastExpression	"( char * ) strrchr ( url , ':' )"		1324790	1					
ANR	1324842	CastTarget	char *		1324790	0					
ANR	1324843	CallExpression	"strrchr ( url , ':' )"		1324790	1					
ANR	1324844	Callee	strrchr		1324790	0					
ANR	1324845	Identifier	strrchr		1324790	0					
ANR	1324846	ArgumentList	url		1324790	1					
ANR	1324847	Argument	url		1324790	0					
ANR	1324848	Identifier	url		1324790	0					
ANR	1324849	Argument	':'		1324790	1					
ANR	1324850	PrimaryExpression	':'		1324790	0					
ANR	1324851	IfStatement	if ( ! path )		1324790	3					
ANR	1324852	Condition	! path	535:5:13505:13509	1324790	0	True				
ANR	1324853	UnaryOperationExpression	! path		1324790	0					
ANR	1324854	UnaryOperator	!		1324790	0					
ANR	1324855	Identifier	path		1324790	1					
ANR	1324856	ReturnStatement	return 0 ;	535:12:13512:13520	1324790	1	True				
ANR	1324857	PrimaryExpression	0		1324790	0					
ANR	1324858	ExpressionStatement	path ++	537:2:13525:13531	1324790	4	True				
ANR	1324859	PostIncDecOperationExpression	path ++		1324790	0					
ANR	1324860	Identifier	path		1324790	0					
ANR	1324861	IncDec	++		1324790	1					
ANR	1324862	IfStatement	if ( ! * path )		1324790	5					
ANR	1324863	Condition	! * path	538:5:13538:13543	1324790	0	True				
ANR	1324864	UnaryOperationExpression	! * path		1324790	0					
ANR	1324865	UnaryOperator	!		1324790	0					
ANR	1324866	UnaryOperationExpression	* path		1324790	1					
ANR	1324867	UnaryOperator	*		1324790	0					
ANR	1324868	Identifier	path		1324790	1					
ANR	1324869	ReturnStatement	return 0 ;	538:13:13546:13554	1324790	1	True				
ANR	1324870	PrimaryExpression	0		1324790	0					
ANR	1324871	IdentifierDeclStatement	char * new_url = ( char * ) malloc ( strlen ( path ) + 15 ) ;	540:2:13559:13606	1324790	6	True				
ANR	1324872	IdentifierDecl	* new_url = ( char * ) malloc ( strlen ( path ) + 15 )		1324790	0					
ANR	1324873	IdentifierDeclType	char *		1324790	0					
ANR	1324874	Identifier	new_url		1324790	1					
ANR	1324875	AssignmentExpression	* new_url = ( char * ) malloc ( strlen ( path ) + 15 )		1324790	2		=			
ANR	1324876	Identifier	new_url		1324790	0					
ANR	1324877	CastExpression	( char * ) malloc ( strlen ( path ) + 15 )		1324790	1					
ANR	1324878	CastTarget	char *		1324790	0					
ANR	1324879	CallExpression	malloc ( strlen ( path ) + 15 )		1324790	1					
ANR	1324880	Callee	malloc		1324790	0					
ANR	1324881	Identifier	malloc		1324790	0					
ANR	1324882	ArgumentList	strlen ( path ) + 15		1324790	1					
ANR	1324883	Argument	strlen ( path ) + 15		1324790	0					
ANR	1324884	AdditiveExpression	strlen ( path ) + 15		1324790	0		+			
ANR	1324885	CallExpression	strlen ( path )		1324790	0					
ANR	1324886	Callee	strlen		1324790	0					
ANR	1324887	Identifier	strlen		1324790	0					
ANR	1324888	ArgumentList	path		1324790	1					
ANR	1324889	Argument	path		1324790	0					
ANR	1324890	Identifier	path		1324790	0					
ANR	1324891	PrimaryExpression	15		1324790	1					
ANR	1324892	ExpressionStatement	"sprintf ( new_url , ""buffer:remote:%s"" , path )"	541:2:13610:13650	1324790	7	True				
ANR	1324893	CallExpression	"sprintf ( new_url , ""buffer:remote:%s"" , path )"		1324790	0					
ANR	1324894	Callee	sprintf		1324790	0					
ANR	1324895	Identifier	sprintf		1324790	0					
ANR	1324896	ArgumentList	new_url		1324790	1					
ANR	1324897	Argument	new_url		1324790	0					
ANR	1324898	Identifier	new_url		1324790	0					
ANR	1324899	Argument	"""buffer:remote:%s"""		1324790	1					
ANR	1324900	PrimaryExpression	"""buffer:remote:%s"""		1324790	0					
ANR	1324901	Argument	path		1324790	2					
ANR	1324902	Identifier	path		1324790	0					
ANR	1324903	IdentifierDeclStatement	"CondorFile * result = open_url ( new_url , flags , mode ) ;"	542:2:13654:13707	1324790	8	True				
ANR	1324904	IdentifierDecl	"* result = open_url ( new_url , flags , mode )"		1324790	0					
ANR	1324905	IdentifierDeclType	CondorFile *		1324790	0					
ANR	1324906	Identifier	result		1324790	1					
ANR	1324907	AssignmentExpression	"* result = open_url ( new_url , flags , mode )"		1324790	2		=			
ANR	1324908	Identifier	result		1324790	0					
ANR	1324909	CallExpression	"open_url ( new_url , flags , mode )"		1324790	1					
ANR	1324910	Callee	open_url		1324790	0					
ANR	1324911	Identifier	open_url		1324790	0					
ANR	1324912	ArgumentList	new_url		1324790	1					
ANR	1324913	Argument	new_url		1324790	0					
ANR	1324914	Identifier	new_url		1324790	0					
ANR	1324915	Argument	flags		1324790	1					
ANR	1324916	Identifier	flags		1324790	0					
ANR	1324917	Argument	mode		1324790	2					
ANR	1324918	Identifier	mode		1324790	0					
ANR	1324919	ExpressionStatement	free ( new_url )	543:2:13711:13726	1324790	9	True				
ANR	1324920	CallExpression	free ( new_url )		1324790	0					
ANR	1324921	Callee	free		1324790	0					
ANR	1324922	Identifier	free		1324790	0					
ANR	1324923	ArgumentList	new_url		1324790	1					
ANR	1324924	Argument	new_url		1324790	0					
ANR	1324925	Identifier	new_url		1324790	0					
ANR	1324926	ReturnStatement	return result ;	544:2:13730:13743	1324790	10	True				
ANR	1324927	Identifier	result		1324790	0					
ANR	1324928	ReturnStatement	return 0 ;	547:1:13750:13758	1324790	4	True				
ANR	1324929	PrimaryExpression	0		1324790	0					
ANR	1324930	ReturnType	CondorFile *		1324790	1					
ANR	1324931	Identifier	CondorFileTable :: open_url_retry		1324790	2					
ANR	1324932	ParameterList	"char const * url , int flags , int mode"		1324790	3					
ANR	1324933	Parameter	char const * url	522:46:13273:13287	1324790	0	True				
ANR	1324934	ParameterType	char const *		1324790	0					
ANR	1324935	Identifier	url		1324790	1					
ANR	1324936	Parameter	int flags	522:63:13290:13298	1324790	1	True				
ANR	1324937	ParameterType	int		1324790	0					
ANR	1324938	Identifier	flags		1324790	1					
ANR	1324939	Parameter	int mode	522:74:13301:13308	1324790	2	True				
ANR	1324940	ParameterType	int		1324790	0					
ANR	1324941	Identifier	mode		1324790	1					
ANR	1324942	CFGEntryNode	ENTRY		1324790		True				
ANR	1324943	CFGExitNode	EXIT		1324790		True				
ANR	1324944	Symbol	malloc		1324790						
ANR	1324945	Symbol	f		1324790						
ANR	1324946	Symbol	flags		1324790						
ANR	1324947	Symbol	open_url		1324790						
ANR	1324948	Symbol	url		1324790						
ANR	1324949	Symbol	mode		1324790						
ANR	1324950	Symbol	RemoteSysCalls		1324790						
ANR	1324951	Symbol	new_url		1324790						
ANR	1324952	Symbol	result		1324790						
ANR	1324953	Symbol	path		1324790						
ANR	1324954	Symbol	strlen		1324790						
ANR	1324955	Symbol	strstr		1324790						
ANR	1324956	Symbol	strrchr		1324790						
ANR	1324957	Symbol	* path		1324790						
ANR	1324958	Function	needs_reopen	554:0:13928:14137							
ANR	1324959	FunctionDef	"needs_reopen (int old_flags , int new_flags)"		1324958	0					
ANR	1324960	CompoundStatement		555:0:13984:14137	1324958	0					
ANR	1324961	IdentifierDeclStatement	int mask = ( O_RDONLY | O_WRONLY | O_RDWR ) ;	556:1:13987:14024	1324958	0	True				
ANR	1324962	IdentifierDecl	mask = ( O_RDONLY | O_WRONLY | O_RDWR )		1324958	0					
ANR	1324963	IdentifierDeclType	int		1324958	0					
ANR	1324964	Identifier	mask		1324958	1					
ANR	1324965	AssignmentExpression	mask = ( O_RDONLY | O_WRONLY | O_RDWR )		1324958	2		=			
ANR	1324966	Identifier	mask		1324958	0					
ANR	1324967	InclusiveOrExpression	O_RDONLY | O_WRONLY | O_RDWR		1324958	1		|			
ANR	1324968	Identifier	O_RDONLY		1324958	0					
ANR	1324969	InclusiveOrExpression	O_WRONLY | O_RDWR		1324958	1		|			
ANR	1324970	Identifier	O_WRONLY		1324958	0					
ANR	1324971	Identifier	O_RDWR		1324958	1					
ANR	1324972	IfStatement	if ( ( old_flags & mask ) == ( new_flags & mask ) )		1324958	1					
ANR	1324973	Condition	( old_flags & mask ) == ( new_flags & mask )	558:5:14032:14067	1324958	0	True				
ANR	1324974	EqualityExpression	( old_flags & mask ) == ( new_flags & mask )		1324958	0		==			
ANR	1324975	BitAndExpression	old_flags & mask		1324958	0		&			
ANR	1324976	Identifier	old_flags		1324958	0					
ANR	1324977	Identifier	mask		1324958	1					
ANR	1324978	BitAndExpression	new_flags & mask		1324958	1		&			
ANR	1324979	Identifier	new_flags		1324958	0					
ANR	1324980	Identifier	mask		1324958	1					
ANR	1324981	ReturnStatement	return 0 ;	558:44:14071:14079	1324958	1	True				
ANR	1324982	PrimaryExpression	0		1324958	0					
ANR	1324983	IfStatement	if ( ( old_flags & mask ) == O_RDWR )		1324958	2					
ANR	1324984	Condition	( old_flags & mask ) == O_RDWR	559:5:14086:14111	1324958	0	True				
ANR	1324985	EqualityExpression	( old_flags & mask ) == O_RDWR		1324958	0		==			
ANR	1324986	BitAndExpression	old_flags & mask		1324958	0		&			
ANR	1324987	Identifier	old_flags		1324958	0					
ANR	1324988	Identifier	mask		1324958	1					
ANR	1324989	Identifier	O_RDWR		1324958	1					
ANR	1324990	ReturnStatement	return 0 ;	559:34:14115:14123	1324958	1	True				
ANR	1324991	PrimaryExpression	0		1324958	0					
ANR	1324992	ReturnStatement	return 1 ;	561:1:14127:14135	1324958	3	True				
ANR	1324993	PrimaryExpression	1		1324958	0					
ANR	1324994	ReturnType	static int		1324958	1					
ANR	1324995	Identifier	needs_reopen		1324958	2					
ANR	1324996	ParameterList	"int old_flags , int new_flags"		1324958	3					
ANR	1324997	Parameter	int old_flags	554:25:13953:13965	1324958	0	True				
ANR	1324998	ParameterType	int		1324958	0					
ANR	1324999	Identifier	old_flags		1324958	1					
ANR	1325000	Parameter	int new_flags	554:40:13968:13980	1324958	1	True				
ANR	1325001	ParameterType	int		1324958	0					
ANR	1325002	Identifier	new_flags		1324958	1					
ANR	1325003	CFGEntryNode	ENTRY		1324958		True				
ANR	1325004	CFGExitNode	EXIT		1324958		True				
ANR	1325005	Symbol	O_RDWR		1324958						
ANR	1325006	Symbol	O_RDONLY		1324958						
ANR	1325007	Symbol	new_flags		1324958						
ANR	1325008	Symbol	old_flags		1324958						
ANR	1325009	Symbol	O_WRONLY		1324958						
ANR	1325010	Symbol	mask		1324958						
ANR	1325011	Function	CondorFileTable :: replace_file	568:0:14206:14415							
ANR	1325012	FunctionDef	"CondorFileTable :: replace_file (CondorFile * old_file , CondorFile * new_file)"		1325011	0					
ANR	1325013	CompoundStatement		569:0:14287:14415	1325011	0					
ANR	1325014	IdentifierDeclStatement	int i ;	570:1:14290:14295	1325011	0	True				
ANR	1325015	IdentifierDecl	i		1325011	0					
ANR	1325016	IdentifierDeclType	int		1325011	0					
ANR	1325017	Identifier	i		1325011	1					
ANR	1325018	ForStatement	for ( i = 0 ; i < length ; i ++ )		1325011	1					
ANR	1325019	ForInit	i = 0 ;	572:6:14304:14307	1325011	0	True				
ANR	1325020	AssignmentExpression	i = 0		1325011	0		=			
ANR	1325021	Identifier	i		1325011	0					
ANR	1325022	PrimaryExpression	0		1325011	1					
ANR	1325023	Condition	i < length	572:10:14308:14315	1325011	1	True				
ANR	1325024	RelationalExpression	i < length		1325011	0		<			
ANR	1325025	Identifier	i		1325011	0					
ANR	1325026	Identifier	length		1325011	1					
ANR	1325027	PostIncDecOperationExpression	i ++	572:20:14318:14320	1325011	2	True				
ANR	1325028	Identifier	i		1325011	0					
ANR	1325029	IncDec	++		1325011	1					
ANR	1325030	CompoundStatement		4:26:36:36	1325011	3					
ANR	1325031	IfStatement	if ( pointers [ i ] && pointers [ i ] -> file == old_file )		1325011	0					
ANR	1325032	Condition	pointers [ i ] && pointers [ i ] -> file == old_file	573:5:14331:14372	1325011	0	True				
ANR	1325033	AndExpression	pointers [ i ] && pointers [ i ] -> file == old_file		1325011	0		&&			
ANR	1325034	ArrayIndexing	pointers [ i ]		1325011	0					
ANR	1325035	Identifier	pointers		1325011	0					
ANR	1325036	Identifier	i		1325011	1					
ANR	1325037	EqualityExpression	pointers [ i ] -> file == old_file		1325011	1		==			
ANR	1325038	PtrMemberAccess	pointers [ i ] -> file		1325011	0					
ANR	1325039	ArrayIndexing	pointers [ i ]		1325011	0					
ANR	1325040	Identifier	pointers		1325011	0					
ANR	1325041	Identifier	i		1325011	1					
ANR	1325042	Identifier	file		1325011	1					
ANR	1325043	Identifier	old_file		1325011	1					
ANR	1325044	CompoundStatement		5:49:87:87	1325011	1					
ANR	1325045	ExpressionStatement	pointers [ i ] -> file = new_file	574:3:14380:14406	1325011	0	True				
ANR	1325046	AssignmentExpression	pointers [ i ] -> file = new_file		1325011	0		=			
ANR	1325047	PtrMemberAccess	pointers [ i ] -> file		1325011	0					
ANR	1325048	ArrayIndexing	pointers [ i ]		1325011	0					
ANR	1325049	Identifier	pointers		1325011	0					
ANR	1325050	Identifier	i		1325011	1					
ANR	1325051	Identifier	file		1325011	1					
ANR	1325052	Identifier	new_file		1325011	1					
ANR	1325053	ReturnType	void		1325011	1					
ANR	1325054	Identifier	CondorFileTable :: replace_file		1325011	2					
ANR	1325055	ParameterList	"CondorFile * old_file , CondorFile * new_file"		1325011	3					
ANR	1325056	Parameter	CondorFile * old_file	568:36:14242:14261	1325011	0	True				
ANR	1325057	ParameterType	CondorFile *		1325011	0					
ANR	1325058	Identifier	old_file		1325011	1					
ANR	1325059	Parameter	CondorFile * new_file	568:58:14264:14283	1325011	1	True				
ANR	1325060	ParameterType	CondorFile *		1325011	0					
ANR	1325061	Identifier	new_file		1325011	1					
ANR	1325062	CFGEntryNode	ENTRY		1325011		True				
ANR	1325063	CFGExitNode	EXIT		1325011		True				
ANR	1325064	Symbol	* * i		1325011						
ANR	1325065	Symbol	* i		1325011						
ANR	1325066	Symbol	old_file		1325011						
ANR	1325067	Symbol	pointers [ i ] -> file		1325011						
ANR	1325068	Symbol	length		1325011						
ANR	1325069	Symbol	new_file		1325011						
ANR	1325070	Symbol	i		1325011						
ANR	1325071	Symbol	* * pointers		1325011						
ANR	1325072	Symbol	pointers		1325011						
ANR	1325073	Symbol	* pointers		1325011						
ANR	1325074	Function	CondorFileTable :: open_file_unique	588:0:14724:15932							
ANR	1325075	FunctionDef	"CondorFileTable :: open_file_unique (char * logical_name , int flags , int mode)"		1325074	0					
ANR	1325076	CompoundStatement		589:0:14814:15932	1325074	0					
ANR	1325077	IdentifierDeclStatement	int match = find_logical_name ( logical_name ) ;	591:1:14818:14863	1325074	0	True				
ANR	1325078	IdentifierDecl	match = find_logical_name ( logical_name )		1325074	0					
ANR	1325079	IdentifierDeclType	int		1325074	0					
ANR	1325080	Identifier	match		1325074	1					
ANR	1325081	AssignmentExpression	match = find_logical_name ( logical_name )		1325074	2		=			
ANR	1325082	Identifier	match		1325074	0					
ANR	1325083	CallExpression	find_logical_name ( logical_name )		1325074	1					
ANR	1325084	Callee	find_logical_name		1325074	0					
ANR	1325085	Identifier	find_logical_name		1325074	0					
ANR	1325086	ArgumentList	logical_name		1325074	1					
ANR	1325087	Argument	logical_name		1325074	0					
ANR	1325088	Identifier	logical_name		1325074	0					
ANR	1325089	IfStatement	if ( match == - 1 || ! pointers [ match ] -> file )		1325074	1					
ANR	1325090	Condition	match == - 1 || ! pointers [ match ] -> file	592:5:14870:14904	1325074	0	True				
ANR	1325091	OrExpression	match == - 1 || ! pointers [ match ] -> file		1325074	0		||			
ANR	1325092	EqualityExpression	match == - 1		1325074	0		==			
ANR	1325093	Identifier	match		1325074	0					
ANR	1325094	UnaryOperationExpression	- 1		1325074	1					
ANR	1325095	UnaryOperator	-		1325074	0					
ANR	1325096	PrimaryExpression	1		1325074	1					
ANR	1325097	UnaryOperationExpression	! pointers [ match ] -> file		1325074	1					
ANR	1325098	UnaryOperator	!		1325074	0					
ANR	1325099	PtrMemberAccess	pointers [ match ] -> file		1325074	1					
ANR	1325100	ArrayIndexing	pointers [ match ]		1325074	0					
ANR	1325101	Identifier	pointers		1325074	0					
ANR	1325102	Identifier	match		1325074	1					
ANR	1325103	Identifier	file		1325074	1					
ANR	1325104	CompoundStatement		5:2:97:113	1325074	1					
ANR	1325105	IdentifierDeclStatement	char * url = NULL ;	593:2:14912:14928	1325074	0	True				
ANR	1325106	IdentifierDecl	* url = NULL		1325074	0					
ANR	1325107	IdentifierDeclType	char *		1325074	0					
ANR	1325108	Identifier	url		1325074	1					
ANR	1325109	AssignmentExpression	* url = NULL		1325074	2		=			
ANR	1325110	Identifier	NULL		1325074	0					
ANR	1325111	Identifier	NULL		1325074	1					
ANR	1325112	ExpressionStatement	"lookup_url ( ( char * ) logical_name , & url )"	594:2:14932:14971	1325074	1	True				
ANR	1325113	CallExpression	"lookup_url ( ( char * ) logical_name , & url )"		1325074	0					
ANR	1325114	Callee	lookup_url		1325074	0					
ANR	1325115	Identifier	lookup_url		1325074	0					
ANR	1325116	ArgumentList	( char * ) logical_name		1325074	1					
ANR	1325117	Argument	( char * ) logical_name		1325074	0					
ANR	1325118	CastExpression	( char * ) logical_name		1325074	0					
ANR	1325119	CastTarget	char *		1325074	0					
ANR	1325120	Identifier	logical_name		1325074	1					
ANR	1325121	Argument	& url		1325074	1					
ANR	1325122	UnaryOperationExpression	& url		1325074	0					
ANR	1325123	UnaryOperator	&		1325074	0					
ANR	1325124	Identifier	url		1325074	1					
ANR	1325125	IfStatement	if ( url )		1325074	2					
ANR	1325126	Condition	url	595:6:14979:14981	1325074	0	True				
ANR	1325127	Identifier	url		1325074	0					
ANR	1325128	CompoundStatement		7:12:170:170	1325074	1					
ANR	1325129	ExpressionStatement	match = find_url ( url )	596:3:14990:15013	1325074	0	True				
ANR	1325130	AssignmentExpression	match = find_url ( url )		1325074	0		=			
ANR	1325131	Identifier	match		1325074	0					
ANR	1325132	CallExpression	find_url ( url )		1325074	1					
ANR	1325133	Callee	find_url		1325074	0					
ANR	1325134	Identifier	find_url		1325074	0					
ANR	1325135	ArgumentList	url		1325074	1					
ANR	1325136	Argument	url		1325074	0					
ANR	1325137	Identifier	url		1325074	0					
ANR	1325138	IfStatement	if ( match == - 1 )		1325074	1					
ANR	1325139	Condition	match == - 1	597:7:15022:15030	1325074	0	True				
ANR	1325140	EqualityExpression	match == - 1		1325074	0		==			
ANR	1325141	Identifier	match		1325074	0					
ANR	1325142	UnaryOperationExpression	- 1		1325074	1					
ANR	1325143	UnaryOperator	-		1325074	0					
ANR	1325144	PrimaryExpression	1		1325074	1					
ANR	1325145	CompoundStatement		10:4:225:275	1325074	1					
ANR	1325146	IdentifierDeclStatement	"CondorFile * f = open_url_retry ( url , flags , mode ) ;"	598:4:15040:15090	1325074	0	True				
ANR	1325147	IdentifierDecl	"* f = open_url_retry ( url , flags , mode )"		1325074	0					
ANR	1325148	IdentifierDeclType	CondorFile *		1325074	0					
ANR	1325149	Identifier	f		1325074	1					
ANR	1325150	AssignmentExpression	"* f = open_url_retry ( url , flags , mode )"		1325074	2		=			
ANR	1325151	Identifier	f		1325074	0					
ANR	1325152	CallExpression	"open_url_retry ( url , flags , mode )"		1325074	1					
ANR	1325153	Callee	open_url_retry		1325074	0					
ANR	1325154	Identifier	open_url_retry		1325074	0					
ANR	1325155	ArgumentList	url		1325074	1					
ANR	1325156	Argument	url		1325074	0					
ANR	1325157	Identifier	url		1325074	0					
ANR	1325158	Argument	flags		1325074	1					
ANR	1325159	Identifier	flags		1325074	0					
ANR	1325160	Argument	mode		1325074	2					
ANR	1325161	Identifier	mode		1325074	0					
ANR	1325162	ExpressionStatement	free ( url )	599:4:15096:15107	1325074	1	True				
ANR	1325163	CallExpression	free ( url )		1325074	0					
ANR	1325164	Callee	free		1325074	0					
ANR	1325165	Identifier	free		1325074	0					
ANR	1325166	ArgumentList	url		1325074	1					
ANR	1325167	Argument	url		1325074	0					
ANR	1325168	Identifier	url		1325074	0					
ANR	1325169	ReturnStatement	return f ;	600:4:15113:15121	1325074	2	True				
ANR	1325170	Identifier	f		1325074	0					
ANR	1325171	ExpressionStatement	free ( url )	602:3:15131:15142	1325074	2	True				
ANR	1325172	CallExpression	free ( url )		1325074	0					
ANR	1325173	Callee	free		1325074	0					
ANR	1325174	Identifier	free		1325074	0					
ANR	1325175	ArgumentList	url		1325074	1					
ANR	1325176	Argument	url		1325074	0					
ANR	1325177	Identifier	url		1325074	0					
ANR	1325178	IdentifierDeclStatement	CondorFilePointer * p = pointers [ match ] ;	606:1:15153:15191	1325074	2	True				
ANR	1325179	IdentifierDecl	* p = pointers [ match ]		1325074	0					
ANR	1325180	IdentifierDeclType	CondorFilePointer *		1325074	0					
ANR	1325181	Identifier	p		1325074	1					
ANR	1325182	AssignmentExpression	* p = pointers [ match ]		1325074	2		=			
ANR	1325183	Identifier	p		1325074	0					
ANR	1325184	ArrayIndexing	pointers [ match ]		1325074	1					
ANR	1325185	Identifier	pointers		1325074	0					
ANR	1325186	Identifier	match		1325074	1					
ANR	1325187	IdentifierDeclStatement	CondorFile * old_file ;	607:1:15194:15214	1325074	3	True				
ANR	1325188	IdentifierDecl	* old_file		1325074	0					
ANR	1325189	IdentifierDeclType	CondorFile *		1325074	0					
ANR	1325190	Identifier	old_file		1325074	1					
ANR	1325191	IfStatement	"if ( needs_reopen ( p -> flags , flags ) )"		1325074	4					
ANR	1325192	Condition	"needs_reopen ( p -> flags , flags )"	609:5:15222:15252	1325074	0	True				
ANR	1325193	CallExpression	"needs_reopen ( p -> flags , flags )"		1325074	0					
ANR	1325194	Callee	needs_reopen		1325074	0					
ANR	1325195	Identifier	needs_reopen		1325074	0					
ANR	1325196	ArgumentList	p -> flags		1325074	1					
ANR	1325197	Argument	p -> flags		1325074	0					
ANR	1325198	PtrMemberAccess	p -> flags		1325074	0					
ANR	1325199	Identifier	p		1325074	0					
ANR	1325200	Identifier	flags		1325074	1					
ANR	1325201	Argument	flags		1325074	1					
ANR	1325202	Identifier	flags		1325074	0					
ANR	1325203	CompoundStatement		28:2:534:599	1325074	1					
ANR	1325204	ExpressionStatement	flags &= ~ ( O_RDONLY )	610:2:15260:15280	1325074	0	True				
ANR	1325205	AssignmentExpression	flags &= ~ ( O_RDONLY )		1325074	0		&=			
ANR	1325206	Identifier	flags		1325074	0					
ANR	1325207	UnaryOperationExpression	~ ( O_RDONLY )		1325074	1					
ANR	1325208	UnaryOperator	~		1325074	0					
ANR	1325209	Identifier	O_RDONLY		1325074	1					
ANR	1325210	ExpressionStatement	flags &= ~ ( O_WRONLY )	611:2:15284:15304	1325074	1	True				
ANR	1325211	AssignmentExpression	flags &= ~ ( O_WRONLY )		1325074	0		&=			
ANR	1325212	Identifier	flags		1325074	0					
ANR	1325213	UnaryOperationExpression	~ ( O_WRONLY )		1325074	1					
ANR	1325214	UnaryOperator	~		1325074	0					
ANR	1325215	Identifier	O_WRONLY		1325074	1					
ANR	1325216	ExpressionStatement	flags |= O_RDWR	612:2:15308:15323	1325074	2	True				
ANR	1325217	AssignmentExpression	flags |= O_RDWR		1325074	0		|=			
ANR	1325218	Identifier	flags		1325074	0					
ANR	1325219	Identifier	O_RDWR		1325074	1					
ANR	1325220	ExpressionStatement	p -> file -> flush ( )	614:2:15328:15344	1325074	3	True				
ANR	1325221	CallExpression	p -> file -> flush ( )		1325074	0					
ANR	1325222	Callee	p -> file -> flush		1325074	0					
ANR	1325223	PtrMemberAccess	p -> file -> flush		1325074	0					
ANR	1325224	PtrMemberAccess	p -> file		1325074	0					
ANR	1325225	Identifier	p		1325074	0					
ANR	1325226	Identifier	file		1325074	1					
ANR	1325227	Identifier	flush		1325074	1					
ANR	1325228	ArgumentList			1325074	1					
ANR	1325229	IdentifierDeclStatement	"CondorFile * f = open_url_retry ( p -> file -> get_url ( ) , flags , mode ) ;"	616:2:15349:15414	1325074	4	True				
ANR	1325230	IdentifierDecl	"* f = open_url_retry ( p -> file -> get_url ( ) , flags , mode )"		1325074	0					
ANR	1325231	IdentifierDeclType	CondorFile *		1325074	0					
ANR	1325232	Identifier	f		1325074	1					
ANR	1325233	AssignmentExpression	"* f = open_url_retry ( p -> file -> get_url ( ) , flags , mode )"		1325074	2		=			
ANR	1325234	Identifier	f		1325074	0					
ANR	1325235	CallExpression	"open_url_retry ( p -> file -> get_url ( ) , flags , mode )"		1325074	1					
ANR	1325236	Callee	open_url_retry		1325074	0					
ANR	1325237	Identifier	open_url_retry		1325074	0					
ANR	1325238	ArgumentList	p -> file -> get_url ( )		1325074	1					
ANR	1325239	Argument	p -> file -> get_url ( )		1325074	0					
ANR	1325240	CallExpression	p -> file -> get_url ( )		1325074	0					
ANR	1325241	Callee	p -> file -> get_url		1325074	0					
ANR	1325242	PtrMemberAccess	p -> file -> get_url		1325074	0					
ANR	1325243	PtrMemberAccess	p -> file		1325074	0					
ANR	1325244	Identifier	p		1325074	0					
ANR	1325245	Identifier	file		1325074	1					
ANR	1325246	Identifier	get_url		1325074	1					
ANR	1325247	ArgumentList			1325074	1					
ANR	1325248	Argument	flags		1325074	1					
ANR	1325249	Identifier	flags		1325074	0					
ANR	1325250	Argument	mode		1325074	2					
ANR	1325251	Identifier	mode		1325074	0					
ANR	1325252	IfStatement	if ( ! f )		1325074	5					
ANR	1325253	Condition	! f	617:5:15421:15422	1325074	0	True				
ANR	1325254	UnaryOperationExpression	! f		1325074	0					
ANR	1325255	UnaryOperator	!		1325074	0					
ANR	1325256	Identifier	f		1325074	1					
ANR	1325257	ReturnStatement	return 0 ;	617:9:15425:15433	1325074	1	True				
ANR	1325258	PrimaryExpression	0		1325074	0					
ANR	1325259	ExpressionStatement	old_file = p -> file	619:2:15438:15456	1325074	6	True				
ANR	1325260	AssignmentExpression	old_file = p -> file		1325074	0		=			
ANR	1325261	Identifier	old_file		1325074	0					
ANR	1325262	PtrMemberAccess	p -> file		1325074	1					
ANR	1325263	Identifier	p		1325074	0					
ANR	1325264	Identifier	file		1325074	1					
ANR	1325265	IfStatement	if ( old_file -> close ( ) != 0 )		1325074	7					
ANR	1325266	Condition	old_file -> close ( ) != 0	620:6:15464:15483	1325074	0	True				
ANR	1325267	EqualityExpression	old_file -> close ( ) != 0		1325074	0		!=			
ANR	1325268	CallExpression	old_file -> close ( )		1325074	0					
ANR	1325269	Callee	old_file -> close		1325074	0					
ANR	1325270	PtrMemberAccess	old_file -> close		1325074	0					
ANR	1325271	Identifier	old_file		1325074	0					
ANR	1325272	Identifier	close		1325074	1					
ANR	1325273	ArgumentList			1325074	1					
ANR	1325274	PrimaryExpression	0		1325074	1					
ANR	1325275	ReturnStatement	return 0 ;	620:29:15487:15495	1325074	1	True				
ANR	1325276	PrimaryExpression	0		1325074	0					
ANR	1325277	ExpressionStatement	"replace_file ( old_file , f )"	622:2:15500:15527	1325074	8	True				
ANR	1325278	CallExpression	"replace_file ( old_file , f )"		1325074	0					
ANR	1325279	Callee	replace_file		1325074	0					
ANR	1325280	Identifier	replace_file		1325074	0					
ANR	1325281	ArgumentList	old_file		1325074	1					
ANR	1325282	Argument	old_file		1325074	0					
ANR	1325283	Identifier	old_file		1325074	0					
ANR	1325284	Argument	f		1325074	1					
ANR	1325285	Identifier	f		1325074	0					
ANR	1325286	Statement	delete	633:2:15894:15899	1325074	9	True				
ANR	1325287	ExpressionStatement	old_file	633:9:15901:15909	1325074	10	True				
ANR	1325288	Identifier	old_file		1325074	0					
ANR	1325289	ReturnStatement	return p -> file ;	636:1:15916:15930	1325074	5	True				
ANR	1325290	PtrMemberAccess	p -> file		1325074	0					
ANR	1325291	Identifier	p		1325074	0					
ANR	1325292	Identifier	file		1325074	1					
ANR	1325293	ReturnType	CondorFile *		1325074	1					
ANR	1325294	Identifier	CondorFileTable :: open_file_unique		1325074	2					
ANR	1325295	ParameterList	"char * logical_name , int flags , int mode"		1325074	3					
ANR	1325296	Parameter	char * logical_name	588:48:14772:14789	1325074	0	True				
ANR	1325297	ParameterType	char *		1325074	0					
ANR	1325298	Identifier	logical_name		1325074	1					
ANR	1325299	Parameter	int flags	588:68:14792:14800	1325074	1	True				
ANR	1325300	ParameterType	int		1325074	0					
ANR	1325301	Identifier	flags		1325074	1					
ANR	1325302	Parameter	int mode	588:79:14803:14810	1325074	2	True				
ANR	1325303	ParameterType	int		1325074	0					
ANR	1325304	Identifier	mode		1325074	1					
ANR	1325305	CFGEntryNode	ENTRY		1325074		True				
ANR	1325306	CFGExitNode	EXIT		1325074		True				
ANR	1325307	Symbol	* match		1325074						
ANR	1325308	Symbol	logical_name		1325074						
ANR	1325309	Symbol	old_file		1325074						
ANR	1325310	Symbol	flags		1325074						
ANR	1325311	Symbol	find_logical_name		1325074						
ANR	1325312	Symbol	mode		1325074						
ANR	1325313	Symbol	& url		1325074						
ANR	1325314	Symbol	O_RDWR		1325074						
ANR	1325315	Symbol	p -> file		1325074						
ANR	1325316	Symbol	* * p		1325074						
ANR	1325317	Symbol	* * pointers		1325074						
ANR	1325318	Symbol	p -> file -> get_url		1325074						
ANR	1325319	Symbol	pointers		1325074						
ANR	1325320	Symbol	find_url		1325074						
ANR	1325321	Symbol	NULL		1325074						
ANR	1325322	Symbol	* p -> file		1325074						
ANR	1325323	Symbol	f		1325074						
ANR	1325324	Symbol	* old_file		1325074						
ANR	1325325	Symbol	match		1325074						
ANR	1325326	Symbol	pointers [ match ] -> file		1325074						
ANR	1325327	Symbol	* pointers		1325074						
ANR	1325328	Symbol	url		1325074						
ANR	1325329	Symbol	p		1325074						
ANR	1325330	Symbol	O_RDONLY		1325074						
ANR	1325331	Symbol	old_file -> close		1325074						
ANR	1325332	Symbol	* * match		1325074						
ANR	1325333	Symbol	needs_reopen		1325074						
ANR	1325334	Symbol	p -> flags		1325074						
ANR	1325335	Symbol	open_url_retry		1325074						
ANR	1325336	Symbol	* p		1325074						
ANR	1325337	Symbol	O_WRONLY		1325074						
ANR	1325338	Function	CondorFileTable :: complete_path	645:0:16095:16496							
ANR	1325339	FunctionDef	"CondorFileTable :: complete_path (const char * short_path , char * * full_path)"		1325338	0					
ANR	1325340	CompoundStatement		646:0:16175:16496	1325338	0					
ANR	1325341	IfStatement	if ( short_path [ 0 ] == '/' )		1325338	0					
ANR	1325342	Condition	short_path [ 0 ] == '/'	647:11:16188:16205	1325338	0	True				
ANR	1325343	EqualityExpression	short_path [ 0 ] == '/'		1325338	0		==			
ANR	1325344	ArrayIndexing	short_path [ 0 ]		1325338	0					
ANR	1325345	Identifier	short_path		1325338	0					
ANR	1325346	PrimaryExpression	0		1325338	1					
ANR	1325347	PrimaryExpression	'/'		1325338	1					
ANR	1325348	CompoundStatement		2:31:32:32	1325338	1					
ANR	1325349	ExpressionStatement	* full_path = strdup ( short_path )	648:16:16226:16257	1325338	0	True				
ANR	1325350	AssignmentExpression	* full_path = strdup ( short_path )		1325338	0		=			
ANR	1325351	UnaryOperationExpression	* full_path		1325338	0					
ANR	1325352	UnaryOperator	*		1325338	0					
ANR	1325353	Identifier	full_path		1325338	1					
ANR	1325354	CallExpression	strdup ( short_path )		1325338	1					
ANR	1325355	Callee	strdup		1325338	0					
ANR	1325356	Identifier	strdup		1325338	0					
ANR	1325357	ArgumentList	short_path		1325338	1					
ANR	1325358	Argument	short_path		1325338	0					
ANR	1325359	Identifier	short_path		1325338	0					
ANR	1325360	ElseStatement	else		1325338	0					
ANR	1325361	CompoundStatement		4:15:98:98	1325338	0					
ANR	1325362	ExpressionStatement	* full_path = ( char * ) malloc ( strlen ( working_dir ) + strlen ( short_path ) + 2 )	650:16:16292:16361	1325338	0	True				
ANR	1325363	AssignmentExpression	* full_path = ( char * ) malloc ( strlen ( working_dir ) + strlen ( short_path ) + 2 )		1325338	0		=			
ANR	1325364	UnaryOperationExpression	* full_path		1325338	0					
ANR	1325365	UnaryOperator	*		1325338	0					
ANR	1325366	Identifier	full_path		1325338	1					
ANR	1325367	CastExpression	( char * ) malloc ( strlen ( working_dir ) + strlen ( short_path ) + 2 )		1325338	1					
ANR	1325368	CastTarget	char *		1325338	0					
ANR	1325369	CallExpression	malloc ( strlen ( working_dir ) + strlen ( short_path ) + 2 )		1325338	1					
ANR	1325370	Callee	malloc		1325338	0					
ANR	1325371	Identifier	malloc		1325338	0					
ANR	1325372	ArgumentList	strlen ( working_dir ) + strlen ( short_path ) + 2		1325338	1					
ANR	1325373	Argument	strlen ( working_dir ) + strlen ( short_path ) + 2		1325338	0					
ANR	1325374	AdditiveExpression	strlen ( working_dir ) + strlen ( short_path ) + 2		1325338	0		+			
ANR	1325375	CallExpression	strlen ( working_dir )		1325338	0					
ANR	1325376	Callee	strlen		1325338	0					
ANR	1325377	Identifier	strlen		1325338	0					
ANR	1325378	ArgumentList	working_dir		1325338	1					
ANR	1325379	Argument	working_dir		1325338	0					
ANR	1325380	Identifier	working_dir		1325338	0					
ANR	1325381	AdditiveExpression	strlen ( short_path ) + 2		1325338	1		+			
ANR	1325382	CallExpression	strlen ( short_path )		1325338	0					
ANR	1325383	Callee	strlen		1325338	0					
ANR	1325384	Identifier	strlen		1325338	0					
ANR	1325385	ArgumentList	short_path		1325338	1					
ANR	1325386	Argument	short_path		1325338	0					
ANR	1325387	Identifier	short_path		1325338	0					
ANR	1325388	PrimaryExpression	2		1325338	1					
ANR	1325389	ExpressionStatement	"strcpy ( * full_path , working_dir )"	651:4:16367:16397	1325338	1	True				
ANR	1325390	CallExpression	"strcpy ( * full_path , working_dir )"		1325338	0					
ANR	1325391	Callee	strcpy		1325338	0					
ANR	1325392	Identifier	strcpy		1325338	0					
ANR	1325393	ArgumentList	* full_path		1325338	1					
ANR	1325394	Argument	* full_path		1325338	0					
ANR	1325395	UnaryOperationExpression	* full_path		1325338	0					
ANR	1325396	UnaryOperator	*		1325338	0					
ANR	1325397	Identifier	full_path		1325338	1					
ANR	1325398	Argument	working_dir		1325338	1					
ANR	1325399	Identifier	working_dir		1325338	0					
ANR	1325400	ExpressionStatement	"strcat ( * full_path , ""/"" )"	652:16:16415:16437	1325338	2	True				
ANR	1325401	CallExpression	"strcat ( * full_path , ""/"" )"		1325338	0					
ANR	1325402	Callee	strcat		1325338	0					
ANR	1325403	Identifier	strcat		1325338	0					
ANR	1325404	ArgumentList	* full_path		1325338	1					
ANR	1325405	Argument	* full_path		1325338	0					
ANR	1325406	UnaryOperationExpression	* full_path		1325338	0					
ANR	1325407	UnaryOperator	*		1325338	0					
ANR	1325408	Identifier	full_path		1325338	1					
ANR	1325409	Argument	"""/"""		1325338	1					
ANR	1325410	PrimaryExpression	"""/"""		1325338	0					
ANR	1325411	ExpressionStatement	"strcat ( * full_path , short_path )"	653:16:16455:16484	1325338	3	True				
ANR	1325412	CallExpression	"strcat ( * full_path , short_path )"		1325338	0					
ANR	1325413	Callee	strcat		1325338	0					
ANR	1325414	Identifier	strcat		1325338	0					
ANR	1325415	ArgumentList	* full_path		1325338	1					
ANR	1325416	Argument	* full_path		1325338	0					
ANR	1325417	UnaryOperationExpression	* full_path		1325338	0					
ANR	1325418	UnaryOperator	*		1325338	0					
ANR	1325419	Identifier	full_path		1325338	1					
ANR	1325420	Argument	short_path		1325338	1					
ANR	1325421	Identifier	short_path		1325338	0					
ANR	1325422	ReturnType	void		1325338	1					
ANR	1325423	Identifier	CondorFileTable :: complete_path		1325338	2					
ANR	1325424	ParameterList	"const char * short_path , char * * full_path"		1325338	3					
ANR	1325425	Parameter	const char * short_path	645:37:16132:16153	1325338	0	True				
ANR	1325426	ParameterType	const char *		1325338	0					
ANR	1325427	Identifier	short_path		1325338	1					
ANR	1325428	Parameter	char * * full_path	645:61:16156:16171	1325338	1	True				
ANR	1325429	ParameterType	char * *		1325338	0					
ANR	1325430	Identifier	full_path		1325338	1					
ANR	1325431	CFGEntryNode	ENTRY		1325338		True				
ANR	1325432	CFGExitNode	EXIT		1325338		True				
ANR	1325433	Symbol	malloc		1325338						
ANR	1325434	Symbol	strlen		1325338						
ANR	1325435	Symbol	* full_path		1325338						
ANR	1325436	Symbol	working_dir		1325338						
ANR	1325437	Symbol	strdup		1325338						
ANR	1325438	Symbol	full_path		1325338						
ANR	1325439	Symbol	short_path		1325338						
ANR	1325440	Symbol	* short_path		1325338						
ANR	1325441	Function	CondorFileTable :: open	657:0:16499:17332							
ANR	1325442	FunctionDef	"CondorFileTable :: open (const char * logical_name , int flags , int mode)"		1325441	0					
ANR	1325443	CompoundStatement		658:0:16574:17332	1325441	0					
ANR	1325444	IdentifierDeclStatement	char * full_logical_name = NULL ;	659:1:16577:16607	1325441	0	True				
ANR	1325445	IdentifierDecl	* full_logical_name = NULL		1325441	0					
ANR	1325446	IdentifierDeclType	char *		1325441	0					
ANR	1325447	Identifier	full_logical_name		1325441	1					
ANR	1325448	AssignmentExpression	* full_logical_name = NULL		1325441	2		=			
ANR	1325449	Identifier	NULL		1325441	0					
ANR	1325450	Identifier	NULL		1325441	1					
ANR	1325451	IdentifierDeclStatement	CondorFile * file = 0 ;	661:1:16611:16629	1325441	1	True				
ANR	1325452	IdentifierDecl	* file = 0		1325441	0					
ANR	1325453	IdentifierDeclType	CondorFile *		1325441	0					
ANR	1325454	Identifier	file		1325441	1					
ANR	1325455	AssignmentExpression	* file = 0		1325441	2		=			
ANR	1325456	Identifier	file		1325441	0					
ANR	1325457	PrimaryExpression	0		1325441	1					
ANR	1325458	IdentifierDeclStatement	CondorFileInfo * info = 0 ;	662:1:16632:16654	1325441	2	True				
ANR	1325459	IdentifierDecl	* info = 0		1325441	0					
ANR	1325460	IdentifierDeclType	CondorFileInfo *		1325441	0					
ANR	1325461	Identifier	info		1325441	1					
ANR	1325462	AssignmentExpression	* info = 0		1325441	2		=			
ANR	1325463	Identifier	info		1325441	0					
ANR	1325464	PrimaryExpression	0		1325441	1					
ANR	1325465	ExpressionStatement	"complete_path ( logical_name , & full_logical_name )"	666:1:16708:16757	1325441	3	True				
ANR	1325466	CallExpression	"complete_path ( logical_name , & full_logical_name )"		1325441	0					
ANR	1325467	Callee	complete_path		1325441	0					
ANR	1325468	Identifier	complete_path		1325441	0					
ANR	1325469	ArgumentList	logical_name		1325441	1					
ANR	1325470	Argument	logical_name		1325441	0					
ANR	1325471	Identifier	logical_name		1325441	0					
ANR	1325472	Argument	& full_logical_name		1325441	1					
ANR	1325473	UnaryOperationExpression	& full_logical_name		1325441	0					
ANR	1325474	UnaryOperator	&		1325441	0					
ANR	1325475	Identifier	full_logical_name		1325441	1					
ANR	1325476	IdentifierDeclStatement	int fd = find_empty ( ) ;	670:1:16795:16816	1325441	4	True				
ANR	1325477	IdentifierDecl	fd = find_empty ( )		1325441	0					
ANR	1325478	IdentifierDeclType	int		1325441	0					
ANR	1325479	Identifier	fd		1325441	1					
ANR	1325480	AssignmentExpression	fd = find_empty ( )		1325441	2		=			
ANR	1325481	Identifier	fd		1325441	0					
ANR	1325482	CallExpression	find_empty ( )		1325441	1					
ANR	1325483	Callee	find_empty		1325441	0					
ANR	1325484	Identifier	find_empty		1325441	0					
ANR	1325485	ArgumentList			1325441	1					
ANR	1325486	IfStatement	if ( fd < 0 )		1325441	5					
ANR	1325487	Condition	fd < 0	671:4:16822:16825	1325441	0	True				
ANR	1325488	RelationalExpression	fd < 0		1325441	0		<			
ANR	1325489	Identifier	fd		1325441	0					
ANR	1325490	PrimaryExpression	0		1325441	1					
ANR	1325491	CompoundStatement		14:10:253:253	1325441	1					
ANR	1325492	ExpressionStatement	errno = EMFILE	672:2:16832:16846	1325441	0	True				
ANR	1325493	AssignmentExpression	errno = EMFILE		1325441	0		=			
ANR	1325494	Identifier	errno		1325441	0					
ANR	1325495	Identifier	EMFILE		1325441	1					
ANR	1325496	ExpressionStatement	free ( full_logical_name )	673:2:16850:16875	1325441	1	True				
ANR	1325497	CallExpression	free ( full_logical_name )		1325441	0					
ANR	1325498	Callee	free		1325441	0					
ANR	1325499	Identifier	free		1325441	0					
ANR	1325500	ArgumentList	full_logical_name		1325441	1					
ANR	1325501	Argument	full_logical_name		1325441	0					
ANR	1325502	Identifier	full_logical_name		1325441	0					
ANR	1325503	ReturnStatement	return - 1 ;	674:2:16879:16888	1325441	2	True				
ANR	1325504	UnaryOperationExpression	- 1		1325441	0					
ANR	1325505	UnaryOperator	-		1325441	0					
ANR	1325506	PrimaryExpression	1		1325441	1					
ANR	1325507	ExpressionStatement	"file = open_file_unique ( full_logical_name , flags , mode )"	677:1:16895:16952	1325441	6	True				
ANR	1325508	AssignmentExpression	"file = open_file_unique ( full_logical_name , flags , mode )"		1325441	0		=			
ANR	1325509	Identifier	file		1325441	0					
ANR	1325510	CallExpression	"open_file_unique ( full_logical_name , flags , mode )"		1325441	1					
ANR	1325511	Callee	open_file_unique		1325441	0					
ANR	1325512	Identifier	open_file_unique		1325441	0					
ANR	1325513	ArgumentList	full_logical_name		1325441	1					
ANR	1325514	Argument	full_logical_name		1325441	0					
ANR	1325515	Identifier	full_logical_name		1325441	0					
ANR	1325516	Argument	flags		1325441	1					
ANR	1325517	Identifier	flags		1325441	0					
ANR	1325518	Argument	mode		1325441	2					
ANR	1325519	Identifier	mode		1325441	0					
ANR	1325520	IfStatement	if ( ! file )		1325441	7					
ANR	1325521	Condition	! file	678:4:16958:16962	1325441	0	True				
ANR	1325522	UnaryOperationExpression	! file		1325441	0					
ANR	1325523	UnaryOperator	!		1325441	0					
ANR	1325524	Identifier	file		1325441	1					
ANR	1325525	CompoundStatement		21:11:390:390	1325441	1					
ANR	1325526	ExpressionStatement	free ( full_logical_name )	679:2:16969:16994	1325441	0	True				
ANR	1325527	CallExpression	free ( full_logical_name )		1325441	0					
ANR	1325528	Callee	free		1325441	0					
ANR	1325529	Identifier	free		1325441	0					
ANR	1325530	ArgumentList	full_logical_name		1325441	1					
ANR	1325531	Argument	full_logical_name		1325441	0					
ANR	1325532	Identifier	full_logical_name		1325441	0					
ANR	1325533	ReturnStatement	return - 1 ;	680:2:16998:17007	1325441	1	True				
ANR	1325534	UnaryOperationExpression	- 1		1325441	0					
ANR	1325535	UnaryOperator	-		1325441	0					
ANR	1325536	PrimaryExpression	1		1325441	1					
ANR	1325537	ExpressionStatement	info = make_info ( full_logical_name )	683:1:17014:17051	1325441	8	True				
ANR	1325538	AssignmentExpression	info = make_info ( full_logical_name )		1325441	0		=			
ANR	1325539	Identifier	info		1325441	0					
ANR	1325540	CallExpression	make_info ( full_logical_name )		1325441	1					
ANR	1325541	Callee	make_info		1325441	0					
ANR	1325542	Identifier	make_info		1325441	0					
ANR	1325543	ArgumentList	full_logical_name		1325441	1					
ANR	1325544	Argument	full_logical_name		1325441	0					
ANR	1325545	Identifier	full_logical_name		1325441	0					
ANR	1325546	ExpressionStatement	info -> open_count ++	684:1:17054:17072	1325441	9	True				
ANR	1325547	PostIncDecOperationExpression	info -> open_count ++		1325441	0					
ANR	1325548	PtrMemberAccess	info -> open_count		1325441	0					
ANR	1325549	Identifier	info		1325441	0					
ANR	1325550	Identifier	open_count		1325441	1					
ANR	1325551	IncDec	++		1325441	1					
ANR	1325552	ExpressionStatement	flags &= ~ ( O_TRUNC )	688:1:17136:17155	1325441	10	True				
ANR	1325553	AssignmentExpression	flags &= ~ ( O_TRUNC )		1325441	0		&=			
ANR	1325554	Identifier	flags		1325441	0					
ANR	1325555	UnaryOperationExpression	~ ( O_TRUNC )		1325441	1					
ANR	1325556	UnaryOperator	~		1325441	0					
ANR	1325557	Identifier	O_TRUNC		1325441	1					
ANR	1325558	ExpressionStatement	flags &= ~ ( O_CREAT )	689:1:17158:17177	1325441	11	True				
ANR	1325559	AssignmentExpression	flags &= ~ ( O_CREAT )		1325441	0		&=			
ANR	1325560	Identifier	flags		1325441	0					
ANR	1325561	UnaryOperationExpression	~ ( O_CREAT )		1325441	1					
ANR	1325562	UnaryOperator	~		1325441	0					
ANR	1325563	Identifier	O_CREAT		1325441	1					
ANR	1325564	ExpressionStatement	"pointers [ fd ] = new CondorFilePointer ( file , info , flags , full_logical_name )"	693:1:17219:17290	1325441	12	True				
ANR	1325565	AssignmentExpression	"pointers [ fd ] = new CondorFilePointer ( file , info , flags , full_logical_name )"		1325441	0		=			
ANR	1325566	ArrayIndexing	pointers [ fd ]		1325441	0					
ANR	1325567	Identifier	pointers		1325441	0					
ANR	1325568	Identifier	fd		1325441	1					
ANR	1325569	Expression	"file , info , flags , full_logical_name"		1325441	1					
ANR	1325570	Identifier	file		1325441	0					
ANR	1325571	Expression	"info , flags , full_logical_name"		1325441	1					
ANR	1325572	Identifier	info		1325441	0					
ANR	1325573	Expression	"flags , full_logical_name"		1325441	1					
ANR	1325574	Identifier	flags		1325441	0					
ANR	1325575	Identifier	full_logical_name		1325441	1					
ANR	1325576	ExpressionStatement	free ( full_logical_name )	694:1:17293:17318	1325441	13	True				
ANR	1325577	CallExpression	free ( full_logical_name )		1325441	0					
ANR	1325578	Callee	free		1325441	0					
ANR	1325579	Identifier	free		1325441	0					
ANR	1325580	ArgumentList	full_logical_name		1325441	1					
ANR	1325581	Argument	full_logical_name		1325441	0					
ANR	1325582	Identifier	full_logical_name		1325441	0					
ANR	1325583	ReturnStatement	return fd ;	695:1:17321:17330	1325441	14	True				
ANR	1325584	Identifier	fd		1325441	0					
ANR	1325585	ReturnType	int		1325441	1					
ANR	1325586	Identifier	CondorFileTable :: open		1325441	2					
ANR	1325587	ParameterList	"const char * logical_name , int flags , int mode"		1325441	3					
ANR	1325588	Parameter	const char * logical_name	657:27:16526:16549	1325441	0	True				
ANR	1325589	ParameterType	const char *		1325441	0					
ANR	1325590	Identifier	logical_name		1325441	1					
ANR	1325591	Parameter	int flags	657:53:16552:16560	1325441	1	True				
ANR	1325592	ParameterType	int		1325441	0					
ANR	1325593	Identifier	flags		1325441	1					
ANR	1325594	Parameter	int mode	657:64:16563:16570	1325441	2	True				
ANR	1325595	ParameterType	int		1325441	0					
ANR	1325596	Identifier	mode		1325441	1					
ANR	1325597	CFGEntryNode	ENTRY		1325441		True				
ANR	1325598	CFGExitNode	EXIT		1325441		True				
ANR	1325599	Symbol	logical_name		1325441						
ANR	1325600	Symbol	errno		1325441						
ANR	1325601	Symbol	NULL		1325441						
ANR	1325602	Symbol	find_empty		1325441						
ANR	1325603	Symbol	O_CREAT		1325441						
ANR	1325604	Symbol	* fd		1325441						
ANR	1325605	Symbol	flags		1325441						
ANR	1325606	Symbol	make_info		1325441						
ANR	1325607	Symbol	full_logical_name		1325441						
ANR	1325608	Symbol	* pointers		1325441						
ANR	1325609	Symbol	mode		1325441						
ANR	1325610	Symbol	O_TRUNC		1325441						
ANR	1325611	Symbol	file		1325441						
ANR	1325612	Symbol	& full_logical_name		1325441						
ANR	1325613	Symbol	info -> open_count		1325441						
ANR	1325614	Symbol	EMFILE		1325441						
ANR	1325615	Symbol	* info		1325441						
ANR	1325616	Symbol	open_file_unique		1325441						
ANR	1325617	Symbol	fd		1325441						
ANR	1325618	Symbol	pointers		1325441						
ANR	1325619	Symbol	info		1325441						
ANR	1325620	Function	CondorFileTable :: install_special	698:0:17335:17674							
ANR	1325621	FunctionDef	"CondorFileTable :: install_special (int real_fd , char * kind)"		1325620	0					
ANR	1325622	CompoundStatement		699:0:17399:17674	1325620	0					
ANR	1325623	IdentifierDeclStatement	int fd = find_empty ( ) ;	700:1:17402:17423	1325620	0	True				
ANR	1325624	IdentifierDecl	fd = find_empty ( )		1325620	0					
ANR	1325625	IdentifierDeclType	int		1325620	0					
ANR	1325626	Identifier	fd		1325620	1					
ANR	1325627	AssignmentExpression	fd = find_empty ( )		1325620	2		=			
ANR	1325628	Identifier	fd		1325620	0					
ANR	1325629	CallExpression	find_empty ( )		1325620	1					
ANR	1325630	Callee	find_empty		1325620	0					
ANR	1325631	Identifier	find_empty		1325620	0					
ANR	1325632	ArgumentList			1325620	1					
ANR	1325633	IfStatement	if ( fd < 0 )		1325620	1					
ANR	1325634	Condition	fd < 0	701:4:17429:17432	1325620	0	True				
ANR	1325635	RelationalExpression	fd < 0		1325620	0		<			
ANR	1325636	Identifier	fd		1325620	0					
ANR	1325637	PrimaryExpression	0		1325620	1					
ANR	1325638	ReturnStatement	return - 1 ;	701:10:17435:17444	1325620	1	True				
ANR	1325639	UnaryOperationExpression	- 1		1325620	0					
ANR	1325640	UnaryOperator	-		1325620	0					
ANR	1325641	PrimaryExpression	1		1325620	1					
ANR	1325642	IdentifierDeclStatement	CondorFileInfo * i = make_info ( kind ) ;	703:1:17448:17482	1325620	2	True				
ANR	1325643	IdentifierDecl	* i = make_info ( kind )		1325620	0					
ANR	1325644	IdentifierDeclType	CondorFileInfo *		1325620	0					
ANR	1325645	Identifier	i		1325620	1					
ANR	1325646	AssignmentExpression	* i = make_info ( kind )		1325620	2		=			
ANR	1325647	Identifier	i		1325620	0					
ANR	1325648	CallExpression	make_info ( kind )		1325620	1					
ANR	1325649	Callee	make_info		1325620	0					
ANR	1325650	Identifier	make_info		1325620	0					
ANR	1325651	ArgumentList	kind		1325620	1					
ANR	1325652	Argument	kind		1325620	0					
ANR	1325653	Identifier	kind		1325620	0					
ANR	1325654	ExpressionStatement	i -> already_warned = 1	704:1:17485:17506	1325620	3	True				
ANR	1325655	AssignmentExpression	i -> already_warned = 1		1325620	0		=			
ANR	1325656	PtrMemberAccess	i -> already_warned		1325620	0					
ANR	1325657	Identifier	i		1325620	0					
ANR	1325658	Identifier	already_warned		1325620	1					
ANR	1325659	PrimaryExpression	1		1325620	1					
ANR	1325660	ExpressionStatement	i -> open_count ++	705:1:17509:17524	1325620	4	True				
ANR	1325661	PostIncDecOperationExpression	i -> open_count ++		1325620	0					
ANR	1325662	PtrMemberAccess	i -> open_count		1325620	0					
ANR	1325663	Identifier	i		1325620	0					
ANR	1325664	Identifier	open_count		1325620	1					
ANR	1325665	IncDec	++		1325620	1					
ANR	1325666	IdentifierDeclStatement	CondorFileSpecial * s = new CondorFileSpecial ( ) ;	707:1:17528:17574	1325620	5	True				
ANR	1325667	IdentifierDecl	* s = new CondorFileSpecial ( )		1325620	0					
ANR	1325668	IdentifierDeclType	CondorFileSpecial *		1325620	0					
ANR	1325669	Identifier	s		1325620	1					
ANR	1325670	AssignmentExpression	* s = new CondorFileSpecial ( )		1325620	2		=			
ANR	1325671	Identifier	s		1325620	0					
ANR	1325672	UnaryExpression	new CondorFileSpecial ( )		1325620	1					
ANR	1325673	ExpressionStatement	s -> attach ( real_fd )	708:1:17577:17597	1325620	6	True				
ANR	1325674	CallExpression	s -> attach ( real_fd )		1325620	0					
ANR	1325675	Callee	s -> attach		1325620	0					
ANR	1325676	PtrMemberAccess	s -> attach		1325620	0					
ANR	1325677	Identifier	s		1325620	0					
ANR	1325678	Identifier	attach		1325620	1					
ANR	1325679	ArgumentList	real_fd		1325620	1					
ANR	1325680	Argument	real_fd		1325620	0					
ANR	1325681	Identifier	real_fd		1325620	0					
ANR	1325682	ExpressionStatement	"pointers [ fd ] = new CondorFilePointer ( s , i , O_RDWR , kind )"	710:1:17601:17659	1325620	7	True				
ANR	1325683	AssignmentExpression	"pointers [ fd ] = new CondorFilePointer ( s , i , O_RDWR , kind )"		1325620	0		=			
ANR	1325684	ArrayIndexing	pointers [ fd ]		1325620	0					
ANR	1325685	Identifier	pointers		1325620	0					
ANR	1325686	Identifier	fd		1325620	1					
ANR	1325687	Expression	"s , i , O_RDWR , kind"		1325620	1					
ANR	1325688	Identifier	s		1325620	0					
ANR	1325689	Expression	"i , O_RDWR , kind"		1325620	1					
ANR	1325690	Identifier	i		1325620	0					
ANR	1325691	Expression	"O_RDWR , kind"		1325620	1					
ANR	1325692	Identifier	O_RDWR		1325620	0					
ANR	1325693	Identifier	kind		1325620	1					
ANR	1325694	ReturnStatement	return fd ;	712:1:17663:17672	1325620	8	True				
ANR	1325695	Identifier	fd		1325620	0					
ANR	1325696	ReturnType	int		1325620	1					
ANR	1325697	Identifier	CondorFileTable :: install_special		1325620	2					
ANR	1325698	ParameterList	"int real_fd , char * kind"		1325620	3					
ANR	1325699	Parameter	int real_fd	698:38:17373:17383	1325620	0	True				
ANR	1325700	ParameterType	int		1325620	0					
ANR	1325701	Identifier	real_fd		1325620	1					
ANR	1325702	Parameter	char * kind	698:51:17386:17395	1325620	1	True				
ANR	1325703	ParameterType	char *		1325620	0					
ANR	1325704	Identifier	kind		1325620	1					
ANR	1325705	CFGEntryNode	ENTRY		1325620		True				
ANR	1325706	CFGExitNode	EXIT		1325620		True				
ANR	1325707	Symbol	find_empty		1325620						
ANR	1325708	Symbol	kind		1325620						
ANR	1325709	Symbol	* fd		1325620						
ANR	1325710	Symbol	i -> already_warned		1325620						
ANR	1325711	Symbol	i		1325620						
ANR	1325712	Symbol	make_info		1325620						
ANR	1325713	Symbol	* pointers		1325620						
ANR	1325714	Symbol	O_RDWR		1325620						
ANR	1325715	Symbol	* i		1325620						
ANR	1325716	Symbol	s		1325620						
ANR	1325717	Symbol	real_fd		1325620						
ANR	1325718	Symbol	fd		1325620						
ANR	1325719	Symbol	i -> open_count		1325620						
ANR	1325720	Symbol	pointers		1325620						
ANR	1325721	Function	CondorFileTable :: pipe	721:0:17879:18213							
ANR	1325722	FunctionDef	CondorFileTable :: pipe (int fds [ ])		1325721	0					
ANR	1325723	CompoundStatement		722:0:17916:18213	1325721	0					
ANR	1325724	IdentifierDeclStatement	int real_fds [ 2 ] ;	723:1:17919:17934	1325721	0	True				
ANR	1325725	IdentifierDecl	real_fds [ 2 ]		1325721	0					
ANR	1325726	IdentifierDeclType	int [ 2 ]		1325721	0					
ANR	1325727	Identifier	real_fds		1325721	1					
ANR	1325728	PrimaryExpression	2		1325721	2					
ANR	1325729	IdentifierDeclStatement	int scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED ) ;	725:1:17938:17985	1325721	1	True				
ANR	1325730	IdentifierDecl	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		1325721	0					
ANR	1325731	IdentifierDeclType	int		1325721	0					
ANR	1325732	Identifier	scm		1325721	1					
ANR	1325733	AssignmentExpression	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		1325721	2		=			
ANR	1325734	Identifier	scm		1325721	0					
ANR	1325735	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		1325721	1					
ANR	1325736	Callee	SetSyscalls		1325721	0					
ANR	1325737	Identifier	SetSyscalls		1325721	0					
ANR	1325738	ArgumentList	SYS_LOCAL | SYS_UNMAPPED		1325721	1					
ANR	1325739	Argument	SYS_LOCAL | SYS_UNMAPPED		1325721	0					
ANR	1325740	InclusiveOrExpression	SYS_LOCAL | SYS_UNMAPPED		1325721	0		|			
ANR	1325741	Identifier	SYS_LOCAL		1325721	0					
ANR	1325742	Identifier	SYS_UNMAPPED		1325721	1					
ANR	1325743	Statement	int	726:1:17988:17990	1325721	2	True				
ANR	1325744	Statement	result	726:5:17992:17997	1325721	3	True				
ANR	1325745	Statement	=	726:12:17999:17999	1325721	4	True				
ANR	1325746	Statement	::	726:14:18001:18002	1325721	5	True				
ANR	1325747	ExpressionStatement	pipe ( real_fds )	726:16:18003:18017	1325721	6	True				
ANR	1325748	CallExpression	pipe ( real_fds )		1325721	0					
ANR	1325749	Callee	pipe		1325721	0					
ANR	1325750	Identifier	pipe		1325721	0					
ANR	1325751	ArgumentList	real_fds		1325721	1					
ANR	1325752	Argument	real_fds		1325721	0					
ANR	1325753	Identifier	real_fds		1325721	0					
ANR	1325754	ExpressionStatement	SetSyscalls ( scm )	727:1:18020:18036	1325721	7	True				
ANR	1325755	CallExpression	SetSyscalls ( scm )		1325721	0					
ANR	1325756	Callee	SetSyscalls		1325721	0					
ANR	1325757	Identifier	SetSyscalls		1325721	0					
ANR	1325758	ArgumentList	scm		1325721	1					
ANR	1325759	Argument	scm		1325721	0					
ANR	1325760	Identifier	scm		1325721	0					
ANR	1325761	IfStatement	if ( result < 0 )		1325721	8					
ANR	1325762	Condition	result < 0	729:4:18043:18050	1325721	0	True				
ANR	1325763	RelationalExpression	result < 0		1325721	0		<			
ANR	1325764	Identifier	result		1325721	0					
ANR	1325765	PrimaryExpression	0		1325721	1					
ANR	1325766	ReturnStatement	return - 1 ;	729:14:18053:18062	1325721	1	True				
ANR	1325767	UnaryOperationExpression	- 1		1325721	0					
ANR	1325768	UnaryOperator	-		1325721	0					
ANR	1325769	PrimaryExpression	1		1325721	1					
ANR	1325770	ExpressionStatement	"fds [ 0 ] = install_special ( real_fds [ 0 ] , ""pipes"" )"	731:1:18066:18111	1325721	9	True				
ANR	1325771	AssignmentExpression	"fds [ 0 ] = install_special ( real_fds [ 0 ] , ""pipes"" )"		1325721	0		=			
ANR	1325772	ArrayIndexing	fds [ 0 ]		1325721	0					
ANR	1325773	Identifier	fds		1325721	0					
ANR	1325774	PrimaryExpression	0		1325721	1					
ANR	1325775	CallExpression	"install_special ( real_fds [ 0 ] , ""pipes"" )"		1325721	1					
ANR	1325776	Callee	install_special		1325721	0					
ANR	1325777	Identifier	install_special		1325721	0					
ANR	1325778	ArgumentList	real_fds [ 0 ]		1325721	1					
ANR	1325779	Argument	real_fds [ 0 ]		1325721	0					
ANR	1325780	ArrayIndexing	real_fds [ 0 ]		1325721	0					
ANR	1325781	Identifier	real_fds		1325721	0					
ANR	1325782	PrimaryExpression	0		1325721	1					
ANR	1325783	Argument	"""pipes"""		1325721	1					
ANR	1325784	PrimaryExpression	"""pipes"""		1325721	0					
ANR	1325785	ExpressionStatement	"fds [ 1 ] = install_special ( real_fds [ 1 ] , ""pipes"" )"	732:1:18114:18159	1325721	10	True				
ANR	1325786	AssignmentExpression	"fds [ 1 ] = install_special ( real_fds [ 1 ] , ""pipes"" )"		1325721	0		=			
ANR	1325787	ArrayIndexing	fds [ 1 ]		1325721	0					
ANR	1325788	Identifier	fds		1325721	0					
ANR	1325789	PrimaryExpression	1		1325721	1					
ANR	1325790	CallExpression	"install_special ( real_fds [ 1 ] , ""pipes"" )"		1325721	1					
ANR	1325791	Callee	install_special		1325721	0					
ANR	1325792	Identifier	install_special		1325721	0					
ANR	1325793	ArgumentList	real_fds [ 1 ]		1325721	1					
ANR	1325794	Argument	real_fds [ 1 ]		1325721	0					
ANR	1325795	ArrayIndexing	real_fds [ 1 ]		1325721	0					
ANR	1325796	Identifier	real_fds		1325721	0					
ANR	1325797	PrimaryExpression	1		1325721	1					
ANR	1325798	Argument	"""pipes"""		1325721	1					
ANR	1325799	PrimaryExpression	"""pipes"""		1325721	0					
ANR	1325800	IfStatement	if ( fds [ 0 ] < 0 || fds [ 1 ] < 0 )		1325721	11					
ANR	1325801	Condition	fds [ 0 ] < 0 || fds [ 1 ] < 0	734:5:18167:18186	1325721	0	True				
ANR	1325802	OrExpression	fds [ 0 ] < 0 || fds [ 1 ] < 0		1325721	0		||			
ANR	1325803	RelationalExpression	fds [ 0 ] < 0		1325721	0		<			
ANR	1325804	ArrayIndexing	fds [ 0 ]		1325721	0					
ANR	1325805	Identifier	fds		1325721	0					
ANR	1325806	PrimaryExpression	0		1325721	1					
ANR	1325807	PrimaryExpression	0		1325721	1					
ANR	1325808	RelationalExpression	fds [ 1 ] < 0		1325721	1		<			
ANR	1325809	ArrayIndexing	fds [ 1 ]		1325721	0					
ANR	1325810	Identifier	fds		1325721	0					
ANR	1325811	PrimaryExpression	1		1325721	1					
ANR	1325812	PrimaryExpression	0		1325721	1					
ANR	1325813	ReturnStatement	return - 1 ;	734:28:18190:18199	1325721	1	True				
ANR	1325814	UnaryOperationExpression	- 1		1325721	0					
ANR	1325815	UnaryOperator	-		1325721	0					
ANR	1325816	PrimaryExpression	1		1325721	1					
ANR	1325817	ReturnStatement	return 0 ;	736:1:18203:18211	1325721	12	True				
ANR	1325818	PrimaryExpression	0		1325721	0					
ANR	1325819	ReturnType	int		1325721	1					
ANR	1325820	Identifier	CondorFileTable :: pipe		1325721	2					
ANR	1325821	ParameterList	int fds [ ]		1325721	3					
ANR	1325822	Parameter	int fds [ ]	721:26:17905:17913	1325721	0	True				
ANR	1325823	ParameterType	int [ ]		1325721	0					
ANR	1325824	Identifier	fds		1325721	1					
ANR	1325825	CFGEntryNode	ENTRY		1325721		True				
ANR	1325826	CFGExitNode	EXIT		1325721		True				
ANR	1325827	Symbol	result		1325721						
ANR	1325828	Symbol	* fds		1325721						
ANR	1325829	Symbol	* real_fds		1325721						
ANR	1325830	Symbol	fds		1325721						
ANR	1325831	Symbol	real_fds		1325721						
ANR	1325832	Symbol	install_special		1325721						
ANR	1325833	Symbol	SYS_UNMAPPED		1325721						
ANR	1325834	Symbol	SYS_LOCAL		1325721						
ANR	1325835	Symbol	SetSyscalls		1325721						
ANR	1325836	Symbol	scm		1325721						
ANR	1325837	Function	CondorFileTable :: socket	745:0:18397:18666							
ANR	1325838	FunctionDef	"CondorFileTable :: socket (int domain , int type , int protocol)"		1325837	0					
ANR	1325839	CompoundStatement		746:0:18463:18666	1325837	0					
ANR	1325840	IdentifierDeclStatement	int scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED ) ;	747:1:18466:18513	1325837	0	True				
ANR	1325841	IdentifierDecl	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		1325837	0					
ANR	1325842	IdentifierDeclType	int		1325837	0					
ANR	1325843	Identifier	scm		1325837	1					
ANR	1325844	AssignmentExpression	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		1325837	2		=			
ANR	1325845	Identifier	scm		1325837	0					
ANR	1325846	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		1325837	1					
ANR	1325847	Callee	SetSyscalls		1325837	0					
ANR	1325848	Identifier	SetSyscalls		1325837	0					
ANR	1325849	ArgumentList	SYS_LOCAL | SYS_UNMAPPED		1325837	1					
ANR	1325850	Argument	SYS_LOCAL | SYS_UNMAPPED		1325837	0					
ANR	1325851	InclusiveOrExpression	SYS_LOCAL | SYS_UNMAPPED		1325837	0		|			
ANR	1325852	Identifier	SYS_LOCAL		1325837	0					
ANR	1325853	Identifier	SYS_UNMAPPED		1325837	1					
ANR	1325854	Statement	int	748:1:18517:18519	1325837	1	True				
ANR	1325855	Statement	real_fd	748:5:18521:18527	1325837	2	True				
ANR	1325856	Statement	=	748:13:18529:18529	1325837	3	True				
ANR	1325857	Statement	::	748:15:18531:18532	1325837	4	True				
ANR	1325858	ExpressionStatement	"socket ( domain , type , protocol )"	748:17:18533:18561	1325837	5	True				
ANR	1325859	CallExpression	"socket ( domain , type , protocol )"		1325837	0					
ANR	1325860	Callee	socket		1325837	0					
ANR	1325861	Identifier	socket		1325837	0					
ANR	1325862	ArgumentList	domain		1325837	1					
ANR	1325863	Argument	domain		1325837	0					
ANR	1325864	Identifier	domain		1325837	0					
ANR	1325865	Argument	type		1325837	1					
ANR	1325866	Identifier	type		1325837	0					
ANR	1325867	Argument	protocol		1325837	2					
ANR	1325868	Identifier	protocol		1325837	0					
ANR	1325869	ExpressionStatement	SetSyscalls ( scm )	749:1:18564:18580	1325837	6	True				
ANR	1325870	CallExpression	SetSyscalls ( scm )		1325837	0					
ANR	1325871	Callee	SetSyscalls		1325837	0					
ANR	1325872	Identifier	SetSyscalls		1325837	0					
ANR	1325873	ArgumentList	scm		1325837	1					
ANR	1325874	Argument	scm		1325837	0					
ANR	1325875	Identifier	scm		1325837	0					
ANR	1325876	IfStatement	if ( real_fd < 0 )		1325837	7					
ANR	1325877	Condition	real_fd < 0	751:4:18587:18595	1325837	0	True				
ANR	1325878	RelationalExpression	real_fd < 0		1325837	0		<			
ANR	1325879	Identifier	real_fd		1325837	0					
ANR	1325880	PrimaryExpression	0		1325837	1					
ANR	1325881	ReturnStatement	return - 1 ;	751:15:18598:18607	1325837	1	True				
ANR	1325882	UnaryOperationExpression	- 1		1325837	0					
ANR	1325883	UnaryOperator	-		1325837	0					
ANR	1325884	PrimaryExpression	1		1325837	1					
ANR	1325885	ReturnStatement	"return install_special ( real_fd , ""network connections"" ) ;"	753:1:18611:18664	1325837	8	True				
ANR	1325886	CallExpression	"install_special ( real_fd , ""network connections"" )"		1325837	0					
ANR	1325887	Callee	install_special		1325837	0					
ANR	1325888	Identifier	install_special		1325837	0					
ANR	1325889	ArgumentList	real_fd		1325837	1					
ANR	1325890	Argument	real_fd		1325837	0					
ANR	1325891	Identifier	real_fd		1325837	0					
ANR	1325892	Argument	"""network connections"""		1325837	1					
ANR	1325893	PrimaryExpression	"""network connections"""		1325837	0					
ANR	1325894	ReturnType	int		1325837	1					
ANR	1325895	Identifier	CondorFileTable :: socket		1325837	2					
ANR	1325896	ParameterList	"int domain , int type , int protocol"		1325837	3					
ANR	1325897	Parameter	int domain	745:29:18426:18435	1325837	0	True				
ANR	1325898	ParameterType	int		1325837	0					
ANR	1325899	Identifier	domain		1325837	1					
ANR	1325900	Parameter	int type	745:41:18438:18445	1325837	1	True				
ANR	1325901	ParameterType	int		1325837	0					
ANR	1325902	Identifier	type		1325837	1					
ANR	1325903	Parameter	int protocol	745:51:18448:18459	1325837	2	True				
ANR	1325904	ParameterType	int		1325837	0					
ANR	1325905	Identifier	protocol		1325837	1					
ANR	1325906	CFGEntryNode	ENTRY		1325837		True				
ANR	1325907	CFGExitNode	EXIT		1325837		True				
ANR	1325908	Symbol	protocol		1325837						
ANR	1325909	Symbol	install_special		1325837						
ANR	1325910	Symbol	SYS_UNMAPPED		1325837						
ANR	1325911	Symbol	real_fd		1325837						
ANR	1325912	Symbol	domain		1325837						
ANR	1325913	Symbol	SYS_LOCAL		1325837						
ANR	1325914	Symbol	SetSyscalls		1325837						
ANR	1325915	Symbol	type		1325837						
ANR	1325916	Symbol	scm		1325837						
ANR	1325917	Function	CondorFileTable :: close	765:0:18912:20280							
ANR	1325918	FunctionDef	CondorFileTable :: close (int fd)		1325917	0					
ANR	1325919	CompoundStatement		766:0:18949:20280	1325917	0					
ANR	1325920	IfStatement	if ( ( fd < 0 ) || ( fd >= length ) || ( pointers [ fd ] == 0 ) )		1325917	0					
ANR	1325921	Condition	( fd < 0 ) || ( fd >= length ) || ( pointers [ fd ] == 0 )	767:5:18956:18998	1325917	0	True				
ANR	1325922	OrExpression	( fd < 0 ) || ( fd >= length ) || ( pointers [ fd ] == 0 )		1325917	0		||			
ANR	1325923	RelationalExpression	fd < 0		1325917	0		<			
ANR	1325924	Identifier	fd		1325917	0					
ANR	1325925	PrimaryExpression	0		1325917	1					
ANR	1325926	OrExpression	( fd >= length ) || ( pointers [ fd ] == 0 )		1325917	1		||			
ANR	1325927	RelationalExpression	fd >= length		1325917	0		>=			
ANR	1325928	Identifier	fd		1325917	0					
ANR	1325929	Identifier	length		1325917	1					
ANR	1325930	EqualityExpression	pointers [ fd ] == 0		1325917	1		==			
ANR	1325931	ArrayIndexing	pointers [ fd ]		1325917	0					
ANR	1325932	Identifier	pointers		1325917	0					
ANR	1325933	Identifier	fd		1325917	1					
ANR	1325934	PrimaryExpression	0		1325917	1					
ANR	1325935	CompoundStatement		2:51:52:52	1325917	1					
ANR	1325936	ExpressionStatement	errno = EBADF	768:2:19006:19019	1325917	0	True				
ANR	1325937	AssignmentExpression	errno = EBADF		1325917	0		=			
ANR	1325938	Identifier	errno		1325917	0					
ANR	1325939	Identifier	EBADF		1325917	1					
ANR	1325940	ReturnStatement	return - 1 ;	769:2:19023:19032	1325917	1	True				
ANR	1325941	UnaryOperationExpression	- 1		1325917	0					
ANR	1325942	UnaryOperator	-		1325917	0					
ANR	1325943	PrimaryExpression	1		1325917	1					
ANR	1325944	IdentifierDeclStatement	CondorFilePointer * p = pointers [ fd ] ;	772:1:19039:19074	1325917	1	True				
ANR	1325945	IdentifierDecl	* p = pointers [ fd ]		1325917	0					
ANR	1325946	IdentifierDeclType	CondorFilePointer *		1325917	0					
ANR	1325947	Identifier	p		1325917	1					
ANR	1325948	AssignmentExpression	* p = pointers [ fd ]		1325917	2		=			
ANR	1325949	Identifier	p		1325917	0					
ANR	1325950	ArrayIndexing	pointers [ fd ]		1325917	1					
ANR	1325951	Identifier	pointers		1325917	0					
ANR	1325952	Identifier	fd		1325917	1					
ANR	1325953	IdentifierDeclStatement	CondorFile * f = p -> file ;	774:1:19109:19132	1325917	2	True				
ANR	1325954	IdentifierDecl	* f = p -> file		1325917	0					
ANR	1325955	IdentifierDeclType	CondorFile *		1325917	0					
ANR	1325956	Identifier	f		1325917	1					
ANR	1325957	AssignmentExpression	* f = p -> file		1325917	2		=			
ANR	1325958	Identifier	f		1325917	0					
ANR	1325959	PtrMemberAccess	p -> file		1325917	1					
ANR	1325960	Identifier	p		1325917	0					
ANR	1325961	Identifier	file		1325917	1					
ANR	1325962	IfStatement	if ( f && count_file_uses ( f ) == 1 )		1325917	3					
ANR	1325963	Condition	f && count_file_uses ( f ) == 1	780:4:19302:19327	1325917	0	True				
ANR	1325964	AndExpression	f && count_file_uses ( f ) == 1		1325917	0		&&			
ANR	1325965	Identifier	f		1325917	0					
ANR	1325966	EqualityExpression	count_file_uses ( f ) == 1		1325917	1		==			
ANR	1325967	CallExpression	count_file_uses ( f )		1325917	0					
ANR	1325968	Callee	count_file_uses		1325917	0					
ANR	1325969	Identifier	count_file_uses		1325917	0					
ANR	1325970	ArgumentList	f		1325917	1					
ANR	1325971	Argument	f		1325917	0					
ANR	1325972	Identifier	f		1325917	0					
ANR	1325973	PrimaryExpression	1		1325917	1					
ANR	1325974	CompoundStatement		31:2:973:996	1325917	1					
ANR	1325975	IdentifierDeclStatement	int result = f -> close ( ) ;	796:2:19923:19946	1325917	0	True				
ANR	1325976	IdentifierDecl	result = f -> close ( )		1325917	0					
ANR	1325977	IdentifierDeclType	int		1325917	0					
ANR	1325978	Identifier	result		1325917	1					
ANR	1325979	AssignmentExpression	result = f -> close ( )		1325917	2		=			
ANR	1325980	Identifier	result		1325917	0					
ANR	1325981	CallExpression	f -> close ( )		1325917	1					
ANR	1325982	Callee	f -> close		1325917	0					
ANR	1325983	PtrMemberAccess	f -> close		1325917	0					
ANR	1325984	Identifier	f		1325917	0					
ANR	1325985	Identifier	close		1325917	1					
ANR	1325986	ArgumentList			1325917	1					
ANR	1325987	IfStatement	if ( result != 0 )		1325917	1					
ANR	1325988	Condition	result != 0	797:6:19954:19962	1325917	0	True				
ANR	1325989	EqualityExpression	result != 0		1325917	0		!=			
ANR	1325990	Identifier	result		1325917	0					
ANR	1325991	PrimaryExpression	0		1325917	1					
ANR	1325992	CompoundStatement		32:18:1016:1016	1325917	1					
ANR	1325993	ReturnStatement	return result ;	798:3:19971:19984	1325917	0	True				
ANR	1325994	Identifier	result		1325917	0					
ANR	1325995	Statement	delete	800:2:19992:19997	1325917	2	True				
ANR	1325996	ExpressionStatement	f	800:9:19999:20000	1325917	3	True				
ANR	1325997	Identifier	f		1325917	0					
ANR	1325998	IfStatement	if ( count_pointer_uses ( p ) == 1 )		1325917	4					
ANR	1325999	Condition	count_pointer_uses ( p ) == 1	807:4:20152:20175	1325917	0	True				
ANR	1326000	EqualityExpression	count_pointer_uses ( p ) == 1		1325917	0		==			
ANR	1326001	CallExpression	count_pointer_uses ( p )		1325917	0					
ANR	1326002	Callee	count_pointer_uses		1325917	0					
ANR	1326003	Identifier	count_pointer_uses		1325917	0					
ANR	1326004	ArgumentList	p		1325917	1					
ANR	1326005	Argument	p		1325917	0					
ANR	1326006	Identifier	p		1325917	0					
ANR	1326007	PrimaryExpression	1		1325917	1					
ANR	1326008	CompoundStatement		42:30:1228:1228	1325917	1					
ANR	1326009	Statement	delete	808:2:20182:20187	1325917	0	True				
ANR	1326010	ExpressionStatement	p	808:9:20189:20190	1325917	1	True				
ANR	1326011	Identifier	p		1325917	0					
ANR	1326012	ExpressionStatement	pointers [ fd ] = 0	814:1:20253:20267	1325917	5	True				
ANR	1326013	AssignmentExpression	pointers [ fd ] = 0		1325917	0		=			
ANR	1326014	ArrayIndexing	pointers [ fd ]		1325917	0					
ANR	1326015	Identifier	pointers		1325917	0					
ANR	1326016	Identifier	fd		1325917	1					
ANR	1326017	PrimaryExpression	0		1325917	1					
ANR	1326018	ReturnStatement	return 0 ;	815:1:20270:20278	1325917	6	True				
ANR	1326019	PrimaryExpression	0		1325917	0					
ANR	1326020	ReturnType	int		1325917	1					
ANR	1326021	Identifier	CondorFileTable :: close		1325917	2					
ANR	1326022	ParameterList	int fd		1325917	3					
ANR	1326023	Parameter	int fd	765:28:18940:18945	1325917	0	True				
ANR	1326024	ParameterType	int		1325917	0					
ANR	1326025	Identifier	fd		1325917	1					
ANR	1326026	CFGEntryNode	ENTRY		1325917		True				
ANR	1326027	CFGExitNode	EXIT		1325917		True				
ANR	1326028	Symbol	errno		1325917						
ANR	1326029	Symbol	f		1325917						
ANR	1326030	Symbol	* fd		1325917						
ANR	1326031	Symbol	length		1325917						
ANR	1326032	Symbol	f -> close		1325917						
ANR	1326033	Symbol	EBADF		1325917						
ANR	1326034	Symbol	* pointers		1325917						
ANR	1326035	Symbol	p		1325917						
ANR	1326036	Symbol	result		1325917						
ANR	1326037	Symbol	* f		1325917						
ANR	1326038	Symbol	p -> file		1325917						
ANR	1326039	Symbol	count_file_uses		1325917						
ANR	1326040	Symbol	* p		1325917						
ANR	1326041	Symbol	count_pointer_uses		1325917						
ANR	1326042	Symbol	fd		1325917						
ANR	1326043	Symbol	pointers		1325917						
ANR	1326044	Function	CondorFileTable :: read	818:0:20283:21031							
ANR	1326045	FunctionDef	"CondorFileTable :: read (int fd , void * data , size_t nbyte)"		1326044	0					
ANR	1326046	CompoundStatement		819:0:20349:21031	1326044	0					
ANR	1326047	IfStatement	if ( resume ( fd ) < 0 )		1326044	0					
ANR	1326048	Condition	resume ( fd ) < 0	820:5:20356:20367	1326044	0	True				
ANR	1326049	RelationalExpression	resume ( fd ) < 0		1326044	0		<			
ANR	1326050	CallExpression	resume ( fd )		1326044	0					
ANR	1326051	Callee	resume		1326044	0					
ANR	1326052	Identifier	resume		1326044	0					
ANR	1326053	ArgumentList	fd		1326044	1					
ANR	1326054	Argument	fd		1326044	0					
ANR	1326055	Identifier	fd		1326044	0					
ANR	1326056	PrimaryExpression	0		1326044	1					
ANR	1326057	ReturnStatement	return - 1 ;	820:20:20371:20380	1326044	1	True				
ANR	1326058	UnaryOperationExpression	- 1		1326044	0					
ANR	1326059	UnaryOperator	-		1326044	0					
ANR	1326060	PrimaryExpression	1		1326044	1					
ANR	1326061	IfStatement	if ( ! pointers [ fd ] -> file -> is_readable ( ) )		1326044	1					
ANR	1326062	Condition	! pointers [ fd ] -> file -> is_readable ( )	822:5:20388:20421	1326044	0	True				
ANR	1326063	UnaryOperationExpression	! pointers [ fd ] -> file -> is_readable ( )		1326044	0					
ANR	1326064	UnaryOperator	!		1326044	0					
ANR	1326065	CallExpression	pointers [ fd ] -> file -> is_readable ( )		1326044	1					
ANR	1326066	Callee	pointers [ fd ] -> file -> is_readable		1326044	0					
ANR	1326067	PtrMemberAccess	pointers [ fd ] -> file -> is_readable		1326044	0					
ANR	1326068	PtrMemberAccess	pointers [ fd ] -> file		1326044	0					
ANR	1326069	ArrayIndexing	pointers [ fd ]		1326044	0					
ANR	1326070	Identifier	pointers		1326044	0					
ANR	1326071	Identifier	fd		1326044	1					
ANR	1326072	Identifier	file		1326044	1					
ANR	1326073	Identifier	is_readable		1326044	1					
ANR	1326074	ArgumentList			1326044	1					
ANR	1326075	CompoundStatement		4:42:75:75	1326044	1					
ANR	1326076	ExpressionStatement	errno = EBADF	823:2:20429:20442	1326044	0	True				
ANR	1326077	AssignmentExpression	errno = EBADF		1326044	0		=			
ANR	1326078	Identifier	errno		1326044	0					
ANR	1326079	Identifier	EBADF		1326044	1					
ANR	1326080	ReturnStatement	return - 1 ;	824:2:20446:20455	1326044	1	True				
ANR	1326081	UnaryOperationExpression	- 1		1326044	0					
ANR	1326082	UnaryOperator	-		1326044	0					
ANR	1326083	PrimaryExpression	1		1326044	1					
ANR	1326084	IfStatement	if ( ( ! data ) || ( nbyte < 0 ) )		1326044	2					
ANR	1326085	Condition	( ! data ) || ( nbyte < 0 )	827:5:20467:20486	1326044	0	True				
ANR	1326086	OrExpression	( ! data ) || ( nbyte < 0 )		1326044	0		||			
ANR	1326087	UnaryOperationExpression	! data		1326044	0					
ANR	1326088	UnaryOperator	!		1326044	0					
ANR	1326089	Identifier	data		1326044	1					
ANR	1326090	RelationalExpression	nbyte < 0		1326044	1		<			
ANR	1326091	Identifier	nbyte		1326044	0					
ANR	1326092	PrimaryExpression	0		1326044	1					
ANR	1326093	CompoundStatement		9:28:140:140	1326044	1					
ANR	1326094	ExpressionStatement	errno = EINVAL	828:2:20494:20508	1326044	0	True				
ANR	1326095	AssignmentExpression	errno = EINVAL		1326044	0		=			
ANR	1326096	Identifier	errno		1326044	0					
ANR	1326097	Identifier	EINVAL		1326044	1					
ANR	1326098	ReturnStatement	return - 1 ;	829:2:20512:20521	1326044	1	True				
ANR	1326099	UnaryOperationExpression	- 1		1326044	0					
ANR	1326100	UnaryOperator	-		1326044	0					
ANR	1326101	PrimaryExpression	1		1326044	1					
ANR	1326102	IdentifierDeclStatement	CondorFilePointer * fp = pointers [ fd ] ;	832:1:20528:20564	1326044	3	True				
ANR	1326103	IdentifierDecl	* fp = pointers [ fd ]		1326044	0					
ANR	1326104	IdentifierDeclType	CondorFilePointer *		1326044	0					
ANR	1326105	Identifier	fp		1326044	1					
ANR	1326106	AssignmentExpression	* fp = pointers [ fd ]		1326044	2		=			
ANR	1326107	Identifier	fp		1326044	0					
ANR	1326108	ArrayIndexing	pointers [ fd ]		1326044	1					
ANR	1326109	Identifier	pointers		1326044	0					
ANR	1326110	Identifier	fd		1326044	1					
ANR	1326111	IdentifierDeclStatement	CondorFile * f = fp -> file ;	833:1:20567:20591	1326044	4	True				
ANR	1326112	IdentifierDecl	* f = fp -> file		1326044	0					
ANR	1326113	IdentifierDeclType	CondorFile *		1326044	0					
ANR	1326114	Identifier	f		1326044	1					
ANR	1326115	AssignmentExpression	* f = fp -> file		1326044	2		=			
ANR	1326116	Identifier	f		1326044	0					
ANR	1326117	PtrMemberAccess	fp -> file		1326044	1					
ANR	1326118	Identifier	fp		1326044	0					
ANR	1326119	Identifier	file		1326044	1					
ANR	1326120	IfStatement	if ( nbyte == 0 )		1326044	5					
ANR	1326121	Condition	nbyte == 0	835:5:20599:20606	1326044	0	True				
ANR	1326122	EqualityExpression	nbyte == 0		1326044	0		==			
ANR	1326123	Identifier	nbyte		1326044	0					
ANR	1326124	PrimaryExpression	0		1326044	1					
ANR	1326125	ReturnStatement	return 0 ;	835:16:20610:20618	1326044	1	True				
ANR	1326126	PrimaryExpression	0		1326044	0					
ANR	1326127	IdentifierDeclStatement	"int actual = f -> read ( fp -> offset , ( char * ) data , nbyte ) ;"	838:1:20655:20710	1326044	6	True				
ANR	1326128	IdentifierDecl	"actual = f -> read ( fp -> offset , ( char * ) data , nbyte )"		1326044	0					
ANR	1326129	IdentifierDeclType	int		1326044	0					
ANR	1326130	Identifier	actual		1326044	1					
ANR	1326131	AssignmentExpression	"actual = f -> read ( fp -> offset , ( char * ) data , nbyte )"		1326044	2		=			
ANR	1326132	Identifier	actual		1326044	0					
ANR	1326133	CallExpression	"f -> read ( fp -> offset , ( char * ) data , nbyte )"		1326044	1					
ANR	1326134	Callee	f -> read		1326044	0					
ANR	1326135	PtrMemberAccess	f -> read		1326044	0					
ANR	1326136	Identifier	f		1326044	0					
ANR	1326137	Identifier	read		1326044	1					
ANR	1326138	ArgumentList	fp -> offset		1326044	1					
ANR	1326139	Argument	fp -> offset		1326044	0					
ANR	1326140	PtrMemberAccess	fp -> offset		1326044	0					
ANR	1326141	Identifier	fp		1326044	0					
ANR	1326142	Identifier	offset		1326044	1					
ANR	1326143	Argument	( char * ) data		1326044	1					
ANR	1326144	CastExpression	( char * ) data		1326044	0					
ANR	1326145	CastTarget	char *		1326044	0					
ANR	1326146	Identifier	data		1326044	1					
ANR	1326147	Argument	nbyte		1326044	2					
ANR	1326148	Identifier	nbyte		1326044	0					
ANR	1326149	IfStatement	if ( actual < 0 )		1326044	7					
ANR	1326150	Condition	actual < 0	841:4:20767:20774	1326044	0	True				
ANR	1326151	RelationalExpression	actual < 0		1326044	0		<			
ANR	1326152	Identifier	actual		1326044	0					
ANR	1326153	PrimaryExpression	0		1326044	1					
ANR	1326154	ReturnStatement	return - 1 ;	841:14:20777:20786	1326044	1	True				
ANR	1326155	UnaryOperationExpression	- 1		1326044	0					
ANR	1326156	UnaryOperator	-		1326044	0					
ANR	1326157	PrimaryExpression	1		1326044	1					
ANR	1326158	ExpressionStatement	fp -> offset += actual	844:1:20812:20832	1326044	8	True				
ANR	1326159	AssignmentExpression	fp -> offset += actual		1326044	0		+=			
ANR	1326160	PtrMemberAccess	fp -> offset		1326044	0					
ANR	1326161	Identifier	fp		1326044	0					
ANR	1326162	Identifier	offset		1326044	1					
ANR	1326163	Identifier	actual		1326044	1					
ANR	1326164	ExpressionStatement	fp -> info -> read_count ++	847:1:20868:20890	1326044	9	True				
ANR	1326165	PostIncDecOperationExpression	fp -> info -> read_count ++		1326044	0					
ANR	1326166	PtrMemberAccess	fp -> info -> read_count		1326044	0					
ANR	1326167	PtrMemberAccess	fp -> info		1326044	0					
ANR	1326168	Identifier	fp		1326044	0					
ANR	1326169	Identifier	info		1326044	1					
ANR	1326170	Identifier	read_count		1326044	1					
ANR	1326171	IncDec	++		1326044	1					
ANR	1326172	ExpressionStatement	fp -> info -> read_bytes += actual	848:1:20893:20921	1326044	10	True				
ANR	1326173	AssignmentExpression	fp -> info -> read_bytes += actual		1326044	0		+=			
ANR	1326174	PtrMemberAccess	fp -> info -> read_bytes		1326044	0					
ANR	1326175	PtrMemberAccess	fp -> info		1326044	0					
ANR	1326176	Identifier	fp		1326044	0					
ANR	1326177	Identifier	info		1326044	1					
ANR	1326178	Identifier	read_bytes		1326044	1					
ANR	1326179	Identifier	actual		1326044	1					
ANR	1326180	ExpressionStatement	check_safety ( fp )	851:1:20960:20976	1326044	11	True				
ANR	1326181	CallExpression	check_safety ( fp )		1326044	0					
ANR	1326182	Callee	check_safety		1326044	0					
ANR	1326183	Identifier	check_safety		1326044	0					
ANR	1326184	ArgumentList	fp		1326044	1					
ANR	1326185	Argument	fp		1326044	0					
ANR	1326186	Identifier	fp		1326044	0					
ANR	1326187	ReturnStatement	return actual ;	854:1:21016:21029	1326044	12	True				
ANR	1326188	Identifier	actual		1326044	0					
ANR	1326189	ReturnType	ssize_t		1326044	1					
ANR	1326190	Identifier	CondorFileTable :: read		1326044	2					
ANR	1326191	ParameterList	"int fd , void * data , size_t nbyte"		1326044	3					
ANR	1326192	Parameter	int fd	818:31:20314:20319	1326044	0	True				
ANR	1326193	ParameterType	int		1326044	0					
ANR	1326194	Identifier	fd		1326044	1					
ANR	1326195	Parameter	void * data	818:39:20322:20331	1326044	1	True				
ANR	1326196	ParameterType	void *		1326044	0					
ANR	1326197	Identifier	data		1326044	1					
ANR	1326198	Parameter	size_t nbyte	818:51:20334:20345	1326044	2	True				
ANR	1326199	ParameterType	size_t		1326044	0					
ANR	1326200	Identifier	nbyte		1326044	1					
ANR	1326201	CFGEntryNode	ENTRY		1326044		True				
ANR	1326202	CFGExitNode	EXIT		1326044		True				
ANR	1326203	Symbol	data		1326044						
ANR	1326204	Symbol	nbyte		1326044						
ANR	1326205	Symbol	fp		1326044						
ANR	1326206	Symbol	f -> read		1326044						
ANR	1326207	Symbol	* fp -> info		1326044						
ANR	1326208	Symbol	* fp		1326044						
ANR	1326209	Symbol	fp -> info -> read_bytes		1326044						
ANR	1326210	Symbol	pointers [ fd ] -> file -> is_readable		1326044						
ANR	1326211	Symbol	* * * pointers		1326044						
ANR	1326212	Symbol	* * * fd		1326044						
ANR	1326213	Symbol	pointers [ fd ] -> file		1326044						
ANR	1326214	Symbol	* * pointers		1326044						
ANR	1326215	Symbol	pointers		1326044						
ANR	1326216	Symbol	fp -> offset		1326044						
ANR	1326217	Symbol	resume		1326044						
ANR	1326218	Symbol	actual		1326044						
ANR	1326219	Symbol	errno		1326044						
ANR	1326220	Symbol	fp -> file		1326044						
ANR	1326221	Symbol	f		1326044						
ANR	1326222	Symbol	* fd		1326044						
ANR	1326223	Symbol	* * fd		1326044						
ANR	1326224	Symbol	fp -> info -> read_count		1326044						
ANR	1326225	Symbol	EBADF		1326044						
ANR	1326226	Symbol	* pointers		1326044						
ANR	1326227	Symbol	EINVAL		1326044						
ANR	1326228	Symbol	* f		1326044						
ANR	1326229	Symbol	* pointers [ fd ] -> file		1326044						
ANR	1326230	Symbol	* * fp		1326044						
ANR	1326231	Symbol	fp -> info		1326044						
ANR	1326232	Symbol	fd		1326044						
ANR	1326233	Function	CondorFileTable :: write	857:0:21034:22242							
ANR	1326234	FunctionDef	"CondorFileTable :: write (int fd , const void * data , size_t nbyte)"		1326233	0					
ANR	1326235	CompoundStatement		858:0:21107:22242	1326233	0					
ANR	1326236	IfStatement	if ( resume ( fd ) < 0 )		1326233	0					
ANR	1326237	Condition	resume ( fd ) < 0	859:5:21114:21125	1326233	0	True				
ANR	1326238	RelationalExpression	resume ( fd ) < 0		1326233	0		<			
ANR	1326239	CallExpression	resume ( fd )		1326233	0					
ANR	1326240	Callee	resume		1326233	0					
ANR	1326241	Identifier	resume		1326233	0					
ANR	1326242	ArgumentList	fd		1326233	1					
ANR	1326243	Argument	fd		1326233	0					
ANR	1326244	Identifier	fd		1326233	0					
ANR	1326245	PrimaryExpression	0		1326233	1					
ANR	1326246	ReturnStatement	return - 1 ;	859:20:21129:21138	1326233	1	True				
ANR	1326247	UnaryOperationExpression	- 1		1326233	0					
ANR	1326248	UnaryOperator	-		1326233	0					
ANR	1326249	PrimaryExpression	1		1326233	1					
ANR	1326250	IfStatement	if ( ! pointers [ fd ] -> file -> is_writeable ( ) )		1326233	1					
ANR	1326251	Condition	! pointers [ fd ] -> file -> is_writeable ( )	861:5:21146:21180	1326233	0	True				
ANR	1326252	UnaryOperationExpression	! pointers [ fd ] -> file -> is_writeable ( )		1326233	0					
ANR	1326253	UnaryOperator	!		1326233	0					
ANR	1326254	CallExpression	pointers [ fd ] -> file -> is_writeable ( )		1326233	1					
ANR	1326255	Callee	pointers [ fd ] -> file -> is_writeable		1326233	0					
ANR	1326256	PtrMemberAccess	pointers [ fd ] -> file -> is_writeable		1326233	0					
ANR	1326257	PtrMemberAccess	pointers [ fd ] -> file		1326233	0					
ANR	1326258	ArrayIndexing	pointers [ fd ]		1326233	0					
ANR	1326259	Identifier	pointers		1326233	0					
ANR	1326260	Identifier	fd		1326233	1					
ANR	1326261	Identifier	file		1326233	1					
ANR	1326262	Identifier	is_writeable		1326233	1					
ANR	1326263	ArgumentList			1326233	1					
ANR	1326264	CompoundStatement		4:43:76:76	1326233	1					
ANR	1326265	ExpressionStatement	errno = EBADF	862:2:21188:21201	1326233	0	True				
ANR	1326266	AssignmentExpression	errno = EBADF		1326233	0		=			
ANR	1326267	Identifier	errno		1326233	0					
ANR	1326268	Identifier	EBADF		1326233	1					
ANR	1326269	ReturnStatement	return - 1 ;	863:2:21205:21214	1326233	1	True				
ANR	1326270	UnaryOperationExpression	- 1		1326233	0					
ANR	1326271	UnaryOperator	-		1326233	0					
ANR	1326272	PrimaryExpression	1		1326233	1					
ANR	1326273	IfStatement	if ( ( ! data ) || ( nbyte < 0 ) )		1326233	2					
ANR	1326274	Condition	( ! data ) || ( nbyte < 0 )	866:5:21225:21244	1326233	0	True				
ANR	1326275	OrExpression	( ! data ) || ( nbyte < 0 )		1326233	0		||			
ANR	1326276	UnaryOperationExpression	! data		1326233	0					
ANR	1326277	UnaryOperator	!		1326233	0					
ANR	1326278	Identifier	data		1326233	1					
ANR	1326279	RelationalExpression	nbyte < 0		1326233	1		<			
ANR	1326280	Identifier	nbyte		1326233	0					
ANR	1326281	PrimaryExpression	0		1326233	1					
ANR	1326282	CompoundStatement		9:28:140:140	1326233	1					
ANR	1326283	ExpressionStatement	errno = EINVAL	867:2:21252:21266	1326233	0	True				
ANR	1326284	AssignmentExpression	errno = EINVAL		1326233	0		=			
ANR	1326285	Identifier	errno		1326233	0					
ANR	1326286	Identifier	EINVAL		1326233	1					
ANR	1326287	ReturnStatement	return - 1 ;	868:2:21270:21279	1326233	1	True				
ANR	1326288	UnaryOperationExpression	- 1		1326233	0					
ANR	1326289	UnaryOperator	-		1326233	0					
ANR	1326290	PrimaryExpression	1		1326233	1					
ANR	1326291	IfStatement	if ( nbyte == 0 )		1326233	3					
ANR	1326292	Condition	nbyte == 0	871:5:21290:21297	1326233	0	True				
ANR	1326293	EqualityExpression	nbyte == 0		1326233	0		==			
ANR	1326294	Identifier	nbyte		1326233	0					
ANR	1326295	PrimaryExpression	0		1326233	1					
ANR	1326296	ReturnStatement	return 0 ;	871:16:21301:21309	1326233	1	True				
ANR	1326297	PrimaryExpression	0		1326233	0					
ANR	1326298	IdentifierDeclStatement	CondorFilePointer * fp = pointers [ fd ] ;	873:1:21313:21349	1326233	4	True				
ANR	1326299	IdentifierDecl	* fp = pointers [ fd ]		1326233	0					
ANR	1326300	IdentifierDeclType	CondorFilePointer *		1326233	0					
ANR	1326301	Identifier	fp		1326233	1					
ANR	1326302	AssignmentExpression	* fp = pointers [ fd ]		1326233	2		=			
ANR	1326303	Identifier	fp		1326233	0					
ANR	1326304	ArrayIndexing	pointers [ fd ]		1326233	1					
ANR	1326305	Identifier	pointers		1326233	0					
ANR	1326306	Identifier	fd		1326233	1					
ANR	1326307	IdentifierDeclStatement	CondorFile * f = fp -> file ;	874:1:21352:21376	1326233	5	True				
ANR	1326308	IdentifierDecl	* f = fp -> file		1326233	0					
ANR	1326309	IdentifierDeclType	CondorFile *		1326233	0					
ANR	1326310	Identifier	f		1326233	1					
ANR	1326311	AssignmentExpression	* f = fp -> file		1326233	2		=			
ANR	1326312	Identifier	f		1326233	0					
ANR	1326313	PtrMemberAccess	fp -> file		1326233	1					
ANR	1326314	Identifier	fp		1326233	0					
ANR	1326315	Identifier	file		1326233	1					
ANR	1326316	IdentifierDeclStatement	"int actual = f -> write ( fp -> offset , ( char * ) data , nbyte ) ;"	883:1:21767:21822	1326233	6	True				
ANR	1326317	IdentifierDecl	"actual = f -> write ( fp -> offset , ( char * ) data , nbyte )"		1326233	0					
ANR	1326318	IdentifierDeclType	int		1326233	0					
ANR	1326319	Identifier	actual		1326233	1					
ANR	1326320	AssignmentExpression	"actual = f -> write ( fp -> offset , ( char * ) data , nbyte )"		1326233	2		=			
ANR	1326321	Identifier	actual		1326233	0					
ANR	1326322	CallExpression	"f -> write ( fp -> offset , ( char * ) data , nbyte )"		1326233	1					
ANR	1326323	Callee	f -> write		1326233	0					
ANR	1326324	PtrMemberAccess	f -> write		1326233	0					
ANR	1326325	Identifier	f		1326233	0					
ANR	1326326	Identifier	write		1326233	1					
ANR	1326327	ArgumentList	fp -> offset		1326233	1					
ANR	1326328	Argument	fp -> offset		1326233	0					
ANR	1326329	PtrMemberAccess	fp -> offset		1326233	0					
ANR	1326330	Identifier	fp		1326233	0					
ANR	1326331	Identifier	offset		1326233	1					
ANR	1326332	Argument	( char * ) data		1326233	1					
ANR	1326333	CastExpression	( char * ) data		1326233	0					
ANR	1326334	CastTarget	char *		1326233	0					
ANR	1326335	Identifier	data		1326233	1					
ANR	1326336	Argument	nbyte		1326233	2					
ANR	1326337	Identifier	nbyte		1326233	0					
ANR	1326338	IfStatement	if ( actual < 0 )		1326233	7					
ANR	1326339	Condition	actual < 0	886:4:21880:21887	1326233	0	True				
ANR	1326340	RelationalExpression	actual < 0		1326233	0		<			
ANR	1326341	Identifier	actual		1326233	0					
ANR	1326342	PrimaryExpression	0		1326233	1					
ANR	1326343	ReturnStatement	return - 1 ;	886:14:21890:21899	1326233	1	True				
ANR	1326344	UnaryOperationExpression	- 1		1326233	0					
ANR	1326345	UnaryOperator	-		1326233	0					
ANR	1326346	PrimaryExpression	1		1326233	1					
ANR	1326347	IfStatement	if ( fd == 2 )		1326233	8					
ANR	1326348	Condition	fd == 2	889:4:21952:21956	1326233	0	True				
ANR	1326349	EqualityExpression	fd == 2		1326233	0		==			
ANR	1326350	Identifier	fd		1326233	0					
ANR	1326351	PrimaryExpression	2		1326233	1					
ANR	1326352	ExpressionStatement	f -> flush ( )	889:11:21959:21969	1326233	1	True				
ANR	1326353	CallExpression	f -> flush ( )		1326233	0					
ANR	1326354	Callee	f -> flush		1326233	0					
ANR	1326355	PtrMemberAccess	f -> flush		1326233	0					
ANR	1326356	Identifier	f		1326233	0					
ANR	1326357	Identifier	flush		1326233	1					
ANR	1326358	ArgumentList			1326233	1					
ANR	1326359	ExpressionStatement	fp -> offset += actual	892:1:22017:22037	1326233	9	True				
ANR	1326360	AssignmentExpression	fp -> offset += actual		1326233	0		+=			
ANR	1326361	PtrMemberAccess	fp -> offset		1326233	0					
ANR	1326362	Identifier	fp		1326233	0					
ANR	1326363	Identifier	offset		1326233	1					
ANR	1326364	Identifier	actual		1326233	1					
ANR	1326365	ExpressionStatement	fp -> info -> write_count ++	895:1:22074:22097	1326233	10	True				
ANR	1326366	PostIncDecOperationExpression	fp -> info -> write_count ++		1326233	0					
ANR	1326367	PtrMemberAccess	fp -> info -> write_count		1326233	0					
ANR	1326368	PtrMemberAccess	fp -> info		1326233	0					
ANR	1326369	Identifier	fp		1326233	0					
ANR	1326370	Identifier	info		1326233	1					
ANR	1326371	Identifier	write_count		1326233	1					
ANR	1326372	IncDec	++		1326233	1					
ANR	1326373	ExpressionStatement	fp -> info -> write_bytes += actual	896:1:22100:22129	1326233	11	True				
ANR	1326374	AssignmentExpression	fp -> info -> write_bytes += actual		1326233	0		+=			
ANR	1326375	PtrMemberAccess	fp -> info -> write_bytes		1326233	0					
ANR	1326376	PtrMemberAccess	fp -> info		1326233	0					
ANR	1326377	Identifier	fp		1326233	0					
ANR	1326378	Identifier	info		1326233	1					
ANR	1326379	Identifier	write_bytes		1326233	1					
ANR	1326380	Identifier	actual		1326233	1					
ANR	1326381	ExpressionStatement	check_safety ( fp )	899:1:22168:22184	1326233	12	True				
ANR	1326382	CallExpression	check_safety ( fp )		1326233	0					
ANR	1326383	Callee	check_safety		1326233	0					
ANR	1326384	Identifier	check_safety		1326233	0					
ANR	1326385	ArgumentList	fp		1326233	1					
ANR	1326386	Argument	fp		1326233	0					
ANR	1326387	Identifier	fp		1326233	0					
ANR	1326388	ReturnStatement	return actual ;	902:1:22227:22240	1326233	13	True				
ANR	1326389	Identifier	actual		1326233	0					
ANR	1326390	ReturnType	ssize_t		1326233	1					
ANR	1326391	Identifier	CondorFileTable :: write		1326233	2					
ANR	1326392	ParameterList	"int fd , const void * data , size_t nbyte"		1326233	3					
ANR	1326393	Parameter	int fd	857:32:21066:21071	1326233	0	True				
ANR	1326394	ParameterType	int		1326233	0					
ANR	1326395	Identifier	fd		1326233	1					
ANR	1326396	Parameter	const void * data	857:40:21074:21089	1326233	1	True				
ANR	1326397	ParameterType	const void *		1326233	0					
ANR	1326398	Identifier	data		1326233	1					
ANR	1326399	Parameter	size_t nbyte	857:58:21092:21103	1326233	2	True				
ANR	1326400	ParameterType	size_t		1326233	0					
ANR	1326401	Identifier	nbyte		1326233	1					
ANR	1326402	CFGEntryNode	ENTRY		1326233		True				
ANR	1326403	CFGExitNode	EXIT		1326233		True				
ANR	1326404	Symbol	data		1326233						
ANR	1326405	Symbol	nbyte		1326233						
ANR	1326406	Symbol	fp		1326233						
ANR	1326407	Symbol	pointers [ fd ] -> file -> is_writeable		1326233						
ANR	1326408	Symbol	* fp -> info		1326233						
ANR	1326409	Symbol	* fp		1326233						
ANR	1326410	Symbol	* * * fd		1326233						
ANR	1326411	Symbol	* * * pointers		1326233						
ANR	1326412	Symbol	pointers [ fd ] -> file		1326233						
ANR	1326413	Symbol	fp -> info -> write_bytes		1326233						
ANR	1326414	Symbol	* * pointers		1326233						
ANR	1326415	Symbol	pointers		1326233						
ANR	1326416	Symbol	fp -> offset		1326233						
ANR	1326417	Symbol	resume		1326233						
ANR	1326418	Symbol	actual		1326233						
ANR	1326419	Symbol	errno		1326233						
ANR	1326420	Symbol	fp -> file		1326233						
ANR	1326421	Symbol	f		1326233						
ANR	1326422	Symbol	* fd		1326233						
ANR	1326423	Symbol	* * fd		1326233						
ANR	1326424	Symbol	EBADF		1326233						
ANR	1326425	Symbol	* pointers		1326233						
ANR	1326426	Symbol	fp -> info -> write_count		1326233						
ANR	1326427	Symbol	f -> write		1326233						
ANR	1326428	Symbol	EINVAL		1326233						
ANR	1326429	Symbol	* f		1326233						
ANR	1326430	Symbol	* pointers [ fd ] -> file		1326233						
ANR	1326431	Symbol	* * fp		1326233						
ANR	1326432	Symbol	fp -> info		1326233						
ANR	1326433	Symbol	fd		1326233						
ANR	1326434	Function	CondorFileTable :: check_safety	905:0:22245:22572							
ANR	1326435	FunctionDef	CondorFileTable :: check_safety (CondorFilePointer * fp)		1326434	0					
ANR	1326436	CompoundStatement		906:0:22305:22572	1326434	0					
ANR	1326437	IfStatement	if ( fp -> info -> read_bytes && fp -> info -> write_bytes && ! fp -> info -> already_warned )		1326434	0					
ANR	1326438	Condition	fp -> info -> read_bytes && fp -> info -> write_bytes && ! fp -> info -> already_warned	907:5:22312:22385	1326434	0	True				
ANR	1326439	AndExpression	fp -> info -> read_bytes && fp -> info -> write_bytes && ! fp -> info -> already_warned		1326434	0		&&			
ANR	1326440	PtrMemberAccess	fp -> info -> read_bytes		1326434	0					
ANR	1326441	PtrMemberAccess	fp -> info		1326434	0					
ANR	1326442	Identifier	fp		1326434	0					
ANR	1326443	Identifier	info		1326434	1					
ANR	1326444	Identifier	read_bytes		1326434	1					
ANR	1326445	AndExpression	fp -> info -> write_bytes && ! fp -> info -> already_warned		1326434	1		&&			
ANR	1326446	PtrMemberAccess	fp -> info -> write_bytes		1326434	0					
ANR	1326447	PtrMemberAccess	fp -> info		1326434	0					
ANR	1326448	Identifier	fp		1326434	0					
ANR	1326449	Identifier	info		1326434	1					
ANR	1326450	Identifier	write_bytes		1326434	1					
ANR	1326451	UnaryOperationExpression	! fp -> info -> already_warned		1326434	1					
ANR	1326452	UnaryOperator	!		1326434	0					
ANR	1326453	PtrMemberAccess	fp -> info -> already_warned		1326434	1					
ANR	1326454	PtrMemberAccess	fp -> info		1326434	0					
ANR	1326455	Identifier	fp		1326434	0					
ANR	1326456	Identifier	info		1326434	1					
ANR	1326457	Identifier	already_warned		1326434	1					
ANR	1326458	CompoundStatement		2:82:83:83	1326434	1					
ANR	1326459	ExpressionStatement	fp -> info -> already_warned = 1	908:2:22393:22421	1326434	0	True				
ANR	1326460	AssignmentExpression	fp -> info -> already_warned = 1		1326434	0		=			
ANR	1326461	PtrMemberAccess	fp -> info -> already_warned		1326434	0					
ANR	1326462	PtrMemberAccess	fp -> info		1326434	0					
ANR	1326463	Identifier	fp		1326434	0					
ANR	1326464	Identifier	info		1326434	1					
ANR	1326465	Identifier	already_warned		1326434	1					
ANR	1326466	PrimaryExpression	1		1326434	1					
ANR	1326467	ExpressionStatement	"_condor_warning ( CONDOR_WARNING_KIND_READWRITE , ""File '%s' used for both reading and writing.  This is not checkpoint-safe.\\n"" , fp -> logical_name )"	909:2:22425:22567	1326434	1	True				
ANR	1326468	CallExpression	"_condor_warning ( CONDOR_WARNING_KIND_READWRITE , ""File '%s' used for both reading and writing.  This is not checkpoint-safe.\\n"" , fp -> logical_name )"		1326434	0					
ANR	1326469	Callee	_condor_warning		1326434	0					
ANR	1326470	Identifier	_condor_warning		1326434	0					
ANR	1326471	ArgumentList	CONDOR_WARNING_KIND_READWRITE		1326434	1					
ANR	1326472	Argument	CONDOR_WARNING_KIND_READWRITE		1326434	0					
ANR	1326473	Identifier	CONDOR_WARNING_KIND_READWRITE		1326434	0					
ANR	1326474	Argument	"""File '%s' used for both reading and writing.  This is not checkpoint-safe.\\n"""		1326434	1					
ANR	1326475	PrimaryExpression	"""File '%s' used for both reading and writing.  This is not checkpoint-safe.\\n"""		1326434	0					
ANR	1326476	Argument	fp -> logical_name		1326434	2					
ANR	1326477	PtrMemberAccess	fp -> logical_name		1326434	0					
ANR	1326478	Identifier	fp		1326434	0					
ANR	1326479	Identifier	logical_name		1326434	1					
ANR	1326480	ReturnType	void		1326434	1					
ANR	1326481	Identifier	CondorFileTable :: check_safety		1326434	2					
ANR	1326482	ParameterList	CondorFilePointer * fp		1326434	3					
ANR	1326483	Parameter	CondorFilePointer * fp	905:36:22281:22301	1326434	0	True				
ANR	1326484	ParameterType	CondorFilePointer *		1326434	0					
ANR	1326485	Identifier	fp		1326434	1					
ANR	1326486	CFGEntryNode	ENTRY		1326434		True				
ANR	1326487	CFGExitNode	EXIT		1326434		True				
ANR	1326488	Symbol	* fp -> info		1326434						
ANR	1326489	Symbol	* fp		1326434						
ANR	1326490	Symbol	fp -> logical_name		1326434						
ANR	1326491	Symbol	* * fp		1326434						
ANR	1326492	Symbol	fp -> info -> read_bytes		1326434						
ANR	1326493	Symbol	CONDOR_WARNING_KIND_READWRITE		1326434						
ANR	1326494	Symbol	fp -> info		1326434						
ANR	1326495	Symbol	fp -> info -> already_warned		1326434						
ANR	1326496	Symbol	fp		1326434						
ANR	1326497	Symbol	fp -> info -> write_bytes		1326434						
ANR	1326498	Function	CondorFileTable :: lseek	913:0:22575:23639							
ANR	1326499	FunctionDef	"CondorFileTable :: lseek (int fd , off_t offset , int whence)"		1326498	0					
ANR	1326500	CompoundStatement		914:0:22640:23639	1326498	0					
ANR	1326501	IfStatement	if ( resume ( fd ) < 0 )		1326498	0					
ANR	1326502	Condition	resume ( fd ) < 0	915:5:22647:22658	1326498	0	True				
ANR	1326503	RelationalExpression	resume ( fd ) < 0		1326498	0		<			
ANR	1326504	CallExpression	resume ( fd )		1326498	0					
ANR	1326505	Callee	resume		1326498	0					
ANR	1326506	Identifier	resume		1326498	0					
ANR	1326507	ArgumentList	fd		1326498	1					
ANR	1326508	Argument	fd		1326498	0					
ANR	1326509	Identifier	fd		1326498	0					
ANR	1326510	PrimaryExpression	0		1326498	1					
ANR	1326511	ReturnStatement	return - 1 ;	915:20:22662:22671	1326498	1	True				
ANR	1326512	UnaryOperationExpression	- 1		1326498	0					
ANR	1326513	UnaryOperator	-		1326498	0					
ANR	1326514	PrimaryExpression	1		1326498	1					
ANR	1326515	IfStatement	if ( ( fd < 0 ) || ( fd >= length ) || ( pointers [ fd ] == 0 ) )		1326498	1					
ANR	1326516	Condition	( fd < 0 ) || ( fd >= length ) || ( pointers [ fd ] == 0 )	917:5:22679:22721	1326498	0	True				
ANR	1326517	OrExpression	( fd < 0 ) || ( fd >= length ) || ( pointers [ fd ] == 0 )		1326498	0		||			
ANR	1326518	RelationalExpression	fd < 0		1326498	0		<			
ANR	1326519	Identifier	fd		1326498	0					
ANR	1326520	PrimaryExpression	0		1326498	1					
ANR	1326521	OrExpression	( fd >= length ) || ( pointers [ fd ] == 0 )		1326498	1		||			
ANR	1326522	RelationalExpression	fd >= length		1326498	0		>=			
ANR	1326523	Identifier	fd		1326498	0					
ANR	1326524	Identifier	length		1326498	1					
ANR	1326525	EqualityExpression	pointers [ fd ] == 0		1326498	1		==			
ANR	1326526	ArrayIndexing	pointers [ fd ]		1326498	0					
ANR	1326527	Identifier	pointers		1326498	0					
ANR	1326528	Identifier	fd		1326498	1					
ANR	1326529	PrimaryExpression	0		1326498	1					
ANR	1326530	CompoundStatement		4:51:84:84	1326498	1					
ANR	1326531	ExpressionStatement	errno = EBADF	918:2:22729:22742	1326498	0	True				
ANR	1326532	AssignmentExpression	errno = EBADF		1326498	0		=			
ANR	1326533	Identifier	errno		1326498	0					
ANR	1326534	Identifier	EBADF		1326498	1					
ANR	1326535	ReturnStatement	return - 1 ;	919:2:22746:22755	1326498	1	True				
ANR	1326536	UnaryOperationExpression	- 1		1326498	0					
ANR	1326537	UnaryOperator	-		1326498	0					
ANR	1326538	PrimaryExpression	1		1326498	1					
ANR	1326539	IdentifierDeclStatement	CondorFilePointer * fp = pointers [ fd ] ;	922:1:22762:22798	1326498	2	True				
ANR	1326540	IdentifierDecl	* fp = pointers [ fd ]		1326498	0					
ANR	1326541	IdentifierDeclType	CondorFilePointer *		1326498	0					
ANR	1326542	Identifier	fp		1326498	1					
ANR	1326543	AssignmentExpression	* fp = pointers [ fd ]		1326498	2		=			
ANR	1326544	Identifier	fp		1326498	0					
ANR	1326545	ArrayIndexing	pointers [ fd ]		1326498	1					
ANR	1326546	Identifier	pointers		1326498	0					
ANR	1326547	Identifier	fd		1326498	1					
ANR	1326548	IdentifierDeclStatement	CondorFile * f = fp -> file ;	923:1:22801:22825	1326498	3	True				
ANR	1326549	IdentifierDecl	* f = fp -> file		1326498	0					
ANR	1326550	IdentifierDeclType	CondorFile *		1326498	0					
ANR	1326551	Identifier	f		1326498	1					
ANR	1326552	AssignmentExpression	* f = fp -> file		1326498	2		=			
ANR	1326553	Identifier	f		1326498	0					
ANR	1326554	PtrMemberAccess	fp -> file		1326498	1					
ANR	1326555	Identifier	fp		1326498	0					
ANR	1326556	Identifier	file		1326498	1					
ANR	1326557	IdentifierDeclStatement	off_t temp ;	924:1:22828:22838	1326498	4	True				
ANR	1326558	IdentifierDecl	temp		1326498	0					
ANR	1326559	IdentifierDeclType	off_t		1326498	0					
ANR	1326560	Identifier	temp		1326498	1					
ANR	1326561	IfStatement	if ( ! f -> is_seekable ( ) )		1326498	5					
ANR	1326562	Condition	! f -> is_seekable ( )	930:5:23092:23108	1326498	0	True				
ANR	1326563	UnaryOperationExpression	! f -> is_seekable ( )		1326498	0					
ANR	1326564	UnaryOperator	!		1326498	0					
ANR	1326565	CallExpression	f -> is_seekable ( )		1326498	1					
ANR	1326566	Callee	f -> is_seekable		1326498	0					
ANR	1326567	PtrMemberAccess	f -> is_seekable		1326498	0					
ANR	1326568	Identifier	f		1326498	0					
ANR	1326569	Identifier	is_seekable		1326498	1					
ANR	1326570	ArgumentList			1326498	1					
ANR	1326571	CompoundStatement		17:25:471:471	1326498	1					
ANR	1326572	ExpressionStatement	"_condor_error_fatal ( ""Seek operation attempted on non-seekable file %s."" , f -> get_url ( ) )"	931:2:23116:23201	1326498	0	True				
ANR	1326573	CallExpression	"_condor_error_fatal ( ""Seek operation attempted on non-seekable file %s."" , f -> get_url ( ) )"		1326498	0					
ANR	1326574	Callee	_condor_error_fatal		1326498	0					
ANR	1326575	Identifier	_condor_error_fatal		1326498	0					
ANR	1326576	ArgumentList	"""Seek operation attempted on non-seekable file %s."""		1326498	1					
ANR	1326577	Argument	"""Seek operation attempted on non-seekable file %s."""		1326498	0					
ANR	1326578	PrimaryExpression	"""Seek operation attempted on non-seekable file %s."""		1326498	0					
ANR	1326579	Argument	f -> get_url ( )		1326498	1					
ANR	1326580	CallExpression	f -> get_url ( )		1326498	0					
ANR	1326581	Callee	f -> get_url		1326498	0					
ANR	1326582	PtrMemberAccess	f -> get_url		1326498	0					
ANR	1326583	Identifier	f		1326498	0					
ANR	1326584	Identifier	get_url		1326498	1					
ANR	1326585	ArgumentList			1326498	1					
ANR	1326586	IfStatement	if ( whence == SEEK_SET )		1326498	6					
ANR	1326587	Condition	whence == SEEK_SET	937:5:23298:23315	1326498	0	True				
ANR	1326588	EqualityExpression	whence == SEEK_SET		1326498	0		==			
ANR	1326589	Identifier	whence		1326498	0					
ANR	1326590	Identifier	SEEK_SET		1326498	1					
ANR	1326591	CompoundStatement		24:26:678:678	1326498	1					
ANR	1326592	ExpressionStatement	temp = offset	938:2:23323:23336	1326498	0	True				
ANR	1326593	AssignmentExpression	temp = offset		1326498	0		=			
ANR	1326594	Identifier	temp		1326498	0					
ANR	1326595	Identifier	offset		1326498	1					
ANR	1326596	ElseStatement	else		1326498	0					
ANR	1326597	IfStatement	if ( whence == SEEK_CUR )		1326498	0					
ANR	1326598	Condition	whence == SEEK_CUR	939:12:23350:23367	1326498	0	True				
ANR	1326599	EqualityExpression	whence == SEEK_CUR		1326498	0		==			
ANR	1326600	Identifier	whence		1326498	0					
ANR	1326601	Identifier	SEEK_CUR		1326498	1					
ANR	1326602	CompoundStatement		26:33:730:730	1326498	1					
ANR	1326603	ExpressionStatement	temp = fp -> offset + offset	940:9:23382:23406	1326498	0	True				
ANR	1326604	AssignmentExpression	temp = fp -> offset + offset		1326498	0		=			
ANR	1326605	Identifier	temp		1326498	0					
ANR	1326606	AdditiveExpression	fp -> offset + offset		1326498	1		+			
ANR	1326607	PtrMemberAccess	fp -> offset		1326498	0					
ANR	1326608	Identifier	fp		1326498	0					
ANR	1326609	Identifier	offset		1326498	1					
ANR	1326610	Identifier	offset		1326498	1					
ANR	1326611	ElseStatement	else		1326498	0					
ANR	1326612	IfStatement	if ( whence == SEEK_END )		1326498	0					
ANR	1326613	Condition	whence == SEEK_END	941:12:23420:23437	1326498	0	True				
ANR	1326614	EqualityExpression	whence == SEEK_END		1326498	0		==			
ANR	1326615	Identifier	whence		1326498	0					
ANR	1326616	Identifier	SEEK_END		1326498	1					
ANR	1326617	CompoundStatement		28:33:800:800	1326498	1					
ANR	1326618	ExpressionStatement	temp = f -> get_size ( ) + offset	942:2:23445:23472	1326498	0	True				
ANR	1326619	AssignmentExpression	temp = f -> get_size ( ) + offset		1326498	0		=			
ANR	1326620	Identifier	temp		1326498	0					
ANR	1326621	AdditiveExpression	f -> get_size ( ) + offset		1326498	1		+			
ANR	1326622	CallExpression	f -> get_size ( )		1326498	0					
ANR	1326623	Callee	f -> get_size		1326498	0					
ANR	1326624	PtrMemberAccess	f -> get_size		1326498	0					
ANR	1326625	Identifier	f		1326498	0					
ANR	1326626	Identifier	get_size		1326498	1					
ANR	1326627	ArgumentList			1326498	1					
ANR	1326628	Identifier	offset		1326498	1					
ANR	1326629	ElseStatement	else		1326498	0					
ANR	1326630	CompoundStatement		30:8:841:841	1326498	0					
ANR	1326631	ExpressionStatement	errno = EINVAL	944:2:23486:23500	1326498	0	True				
ANR	1326632	AssignmentExpression	errno = EINVAL		1326498	0		=			
ANR	1326633	Identifier	errno		1326498	0					
ANR	1326634	Identifier	EINVAL		1326498	1					
ANR	1326635	ReturnStatement	return - 1 ;	945:2:23504:23513	1326498	1	True				
ANR	1326636	UnaryOperationExpression	- 1		1326498	0					
ANR	1326637	UnaryOperator	-		1326498	0					
ANR	1326638	PrimaryExpression	1		1326498	1					
ANR	1326639	IfStatement	if ( temp < 0 )		1326498	7					
ANR	1326640	Condition	temp < 0	948:4:23523:23528	1326498	0	True				
ANR	1326641	RelationalExpression	temp < 0		1326498	0		<			
ANR	1326642	Identifier	temp		1326498	0					
ANR	1326643	PrimaryExpression	0		1326498	1					
ANR	1326644	CompoundStatement		35:12:890:890	1326498	1					
ANR	1326645	ExpressionStatement	errno = EINVAL	949:2:23535:23549	1326498	0	True				
ANR	1326646	AssignmentExpression	errno = EINVAL		1326498	0		=			
ANR	1326647	Identifier	errno		1326498	0					
ANR	1326648	Identifier	EINVAL		1326498	1					
ANR	1326649	ReturnStatement	return - 1 ;	950:2:23553:23562	1326498	1	True				
ANR	1326650	UnaryOperationExpression	- 1		1326498	0					
ANR	1326651	UnaryOperator	-		1326498	0					
ANR	1326652	PrimaryExpression	1		1326498	1					
ANR	1326653	ElseStatement	else		1326498	0					
ANR	1326654	CompoundStatement		38:8:931:931	1326498	0					
ANR	1326655	ExpressionStatement	fp -> offset = temp	952:2:23576:23593	1326498	0	True				
ANR	1326656	AssignmentExpression	fp -> offset = temp		1326498	0		=			
ANR	1326657	PtrMemberAccess	fp -> offset		1326498	0					
ANR	1326658	Identifier	fp		1326498	0					
ANR	1326659	Identifier	offset		1326498	1					
ANR	1326660	Identifier	temp		1326498	1					
ANR	1326661	ExpressionStatement	fp -> info -> seek_count ++	953:2:23597:23619	1326498	1	True				
ANR	1326662	PostIncDecOperationExpression	fp -> info -> seek_count ++		1326498	0					
ANR	1326663	PtrMemberAccess	fp -> info -> seek_count		1326498	0					
ANR	1326664	PtrMemberAccess	fp -> info		1326498	0					
ANR	1326665	Identifier	fp		1326498	0					
ANR	1326666	Identifier	info		1326498	1					
ANR	1326667	Identifier	seek_count		1326498	1					
ANR	1326668	IncDec	++		1326498	1					
ANR	1326669	ReturnStatement	return temp ;	954:2:23623:23634	1326498	2	True				
ANR	1326670	Identifier	temp		1326498	0					
ANR	1326671	ReturnType	off_t		1326498	1					
ANR	1326672	Identifier	CondorFileTable :: lseek		1326498	2					
ANR	1326673	ParameterList	"int fd , off_t offset , int whence"		1326498	3					
ANR	1326674	Parameter	int fd	913:30:22605:22610	1326498	0	True				
ANR	1326675	ParameterType	int		1326498	0					
ANR	1326676	Identifier	fd		1326498	1					
ANR	1326677	Parameter	off_t offset	913:38:22613:22624	1326498	1	True				
ANR	1326678	ParameterType	off_t		1326498	0					
ANR	1326679	Identifier	offset		1326498	1					
ANR	1326680	Parameter	int whence	913:52:22627:22636	1326498	2	True				
ANR	1326681	ParameterType	int		1326498	0					
ANR	1326682	Identifier	whence		1326498	1					
ANR	1326683	CFGEntryNode	ENTRY		1326498		True				
ANR	1326684	CFGExitNode	EXIT		1326498		True				
ANR	1326685	Symbol	f -> is_seekable		1326498						
ANR	1326686	Symbol	SEEK_CUR		1326498						
ANR	1326687	Symbol	fp		1326498						
ANR	1326688	Symbol	* fp -> info		1326498						
ANR	1326689	Symbol	* fp		1326498						
ANR	1326690	Symbol	f -> get_size		1326498						
ANR	1326691	Symbol	f -> get_url		1326498						
ANR	1326692	Symbol	pointers		1326498						
ANR	1326693	Symbol	fp -> offset		1326498						
ANR	1326694	Symbol	resume		1326498						
ANR	1326695	Symbol	SEEK_SET		1326498						
ANR	1326696	Symbol	errno		1326498						
ANR	1326697	Symbol	temp		1326498						
ANR	1326698	Symbol	offset		1326498						
ANR	1326699	Symbol	fp -> file		1326498						
ANR	1326700	Symbol	whence		1326498						
ANR	1326701	Symbol	f		1326498						
ANR	1326702	Symbol	* fd		1326498						
ANR	1326703	Symbol	length		1326498						
ANR	1326704	Symbol	EBADF		1326498						
ANR	1326705	Symbol	* pointers		1326498						
ANR	1326706	Symbol	SEEK_END		1326498						
ANR	1326707	Symbol	* f		1326498						
ANR	1326708	Symbol	EINVAL		1326498						
ANR	1326709	Symbol	fp -> info -> seek_count		1326498						
ANR	1326710	Symbol	* * fp		1326498						
ANR	1326711	Symbol	fp -> info		1326498						
ANR	1326712	Symbol	fd		1326498						
ANR	1326713	Function	CondorFileTable :: dup	958:0:23642:23709							
ANR	1326714	FunctionDef	CondorFileTable :: dup (int fd)		1326713	0					
ANR	1326715	CompoundStatement		959:0:23677:23709	1326713	0					
ANR	1326716	ReturnStatement	"return search_dup2 ( fd , 0 ) ;"	960:1:23680:23707	1326713	0	True				
ANR	1326717	CallExpression	"search_dup2 ( fd , 0 )"		1326713	0					
ANR	1326718	Callee	search_dup2		1326713	0					
ANR	1326719	Identifier	search_dup2		1326713	0					
ANR	1326720	ArgumentList	fd		1326713	1					
ANR	1326721	Argument	fd		1326713	0					
ANR	1326722	Identifier	fd		1326713	0					
ANR	1326723	Argument	0		1326713	1					
ANR	1326724	PrimaryExpression	0		1326713	0					
ANR	1326725	ReturnType	int		1326713	1					
ANR	1326726	Identifier	CondorFileTable :: dup		1326713	2					
ANR	1326727	ParameterList	int fd		1326713	3					
ANR	1326728	Parameter	int fd	958:26:23668:23673	1326713	0	True				
ANR	1326729	ParameterType	int		1326713	0					
ANR	1326730	Identifier	fd		1326713	1					
ANR	1326731	CFGEntryNode	ENTRY		1326713		True				
ANR	1326732	CFGExitNode	EXIT		1326713		True				
ANR	1326733	Symbol	fd		1326713						
ANR	1326734	Symbol	search_dup2		1326713						
ANR	1326735	Function	CondorFileTable :: search_dup2	963:0:23712:24042							
ANR	1326736	FunctionDef	"CondorFileTable :: search_dup2 (int fd , int search)"		1326735	0					
ANR	1326737	CompoundStatement		964:0:23767:24042	1326735	0					
ANR	1326738	IfStatement	if ( ( fd < 0 ) || ( fd >= length ) || ( pointers [ fd ] == 0 ) || ( search < 0 ) || ( search >= length ) )		1326735	0					
ANR	1326739	Condition	( fd < 0 ) || ( fd >= length ) || ( pointers [ fd ] == 0 ) || ( search < 0 ) || ( search >= length )	965:5:23774:23850	1326735	0	True				
ANR	1326740	OrExpression	( fd < 0 ) || ( fd >= length ) || ( pointers [ fd ] == 0 ) || ( search < 0 ) || ( search >= length )		1326735	0		||			
ANR	1326741	RelationalExpression	fd < 0		1326735	0		<			
ANR	1326742	Identifier	fd		1326735	0					
ANR	1326743	PrimaryExpression	0		1326735	1					
ANR	1326744	OrExpression	( fd >= length ) || ( pointers [ fd ] == 0 ) || ( search < 0 ) || ( search >= length )		1326735	1		||			
ANR	1326745	RelationalExpression	fd >= length		1326735	0		>=			
ANR	1326746	Identifier	fd		1326735	0					
ANR	1326747	Identifier	length		1326735	1					
ANR	1326748	OrExpression	( pointers [ fd ] == 0 ) || ( search < 0 ) || ( search >= length )		1326735	1		||			
ANR	1326749	EqualityExpression	pointers [ fd ] == 0		1326735	0		==			
ANR	1326750	ArrayIndexing	pointers [ fd ]		1326735	0					
ANR	1326751	Identifier	pointers		1326735	0					
ANR	1326752	Identifier	fd		1326735	1					
ANR	1326753	PrimaryExpression	0		1326735	1					
ANR	1326754	OrExpression	( search < 0 ) || ( search >= length )		1326735	1		||			
ANR	1326755	RelationalExpression	search < 0		1326735	0		<			
ANR	1326756	Identifier	search		1326735	0					
ANR	1326757	PrimaryExpression	0		1326735	1					
ANR	1326758	RelationalExpression	search >= length		1326735	1		>=			
ANR	1326759	Identifier	search		1326735	0					
ANR	1326760	Identifier	length		1326735	1					
ANR	1326761	CompoundStatement		2:85:86:86	1326735	1					
ANR	1326762	ExpressionStatement	errno = EBADF	966:2:23858:23871	1326735	0	True				
ANR	1326763	AssignmentExpression	errno = EBADF		1326735	0		=			
ANR	1326764	Identifier	errno		1326735	0					
ANR	1326765	Identifier	EBADF		1326735	1					
ANR	1326766	ReturnStatement	return - 1 ;	967:2:23875:23884	1326735	1	True				
ANR	1326767	UnaryOperationExpression	- 1		1326735	0					
ANR	1326768	UnaryOperator	-		1326735	0					
ANR	1326769	PrimaryExpression	1		1326735	1					
ANR	1326770	IdentifierDeclStatement	int i ;	970:1:23891:23896	1326735	1	True				
ANR	1326771	IdentifierDecl	i		1326735	0					
ANR	1326772	IdentifierDeclType	int		1326735	0					
ANR	1326773	Identifier	i		1326735	1					
ANR	1326774	ForStatement	for ( i = search ; i < length ; i ++ )		1326735	2					
ANR	1326775	ForInit	i = search ;	972:6:23905:23913	1326735	0	True				
ANR	1326776	AssignmentExpression	i = search		1326735	0		=			
ANR	1326777	Identifier	i		1326735	0					
ANR	1326778	Identifier	search		1326735	1					
ANR	1326779	Condition	i < length	972:16:23915:23922	1326735	1	True				
ANR	1326780	RelationalExpression	i < length		1326735	0		<			
ANR	1326781	Identifier	i		1326735	0					
ANR	1326782	Identifier	length		1326735	1					
ANR	1326783	PostIncDecOperationExpression	i ++	972:26:23925:23927	1326735	2	True				
ANR	1326784	Identifier	i		1326735	0					
ANR	1326785	IncDec	++		1326735	1					
ANR	1326786	IfStatement	if ( ! pointers [ i ] )		1326735	3					
ANR	1326787	Condition	! pointers [ i ]	973:5:23936:23947	1326735	0	True				
ANR	1326788	UnaryOperationExpression	! pointers [ i ]		1326735	0					
ANR	1326789	UnaryOperator	!		1326735	0					
ANR	1326790	ArrayIndexing	pointers [ i ]		1326735	1					
ANR	1326791	Identifier	pointers		1326735	0					
ANR	1326792	Identifier	i		1326735	1					
ANR	1326793	BreakStatement	break ;	973:19:23950:23955	1326735	1	True				
ANR	1326794	IfStatement	if ( i == length )		1326735	3					
ANR	1326795	Condition	i == length	975:5:23963:23971	1326735	0	True				
ANR	1326796	EqualityExpression	i == length		1326735	0		==			
ANR	1326797	Identifier	i		1326735	0					
ANR	1326798	Identifier	length		1326735	1					
ANR	1326799	CompoundStatement		12:17:207:207	1326735	1					
ANR	1326800	ExpressionStatement	errno = EMFILE	976:2:23979:23993	1326735	0	True				
ANR	1326801	AssignmentExpression	errno = EMFILE		1326735	0		=			
ANR	1326802	Identifier	errno		1326735	0					
ANR	1326803	Identifier	EMFILE		1326735	1					
ANR	1326804	ReturnStatement	return - 1 ;	977:2:23997:24006	1326735	1	True				
ANR	1326805	UnaryOperationExpression	- 1		1326735	0					
ANR	1326806	UnaryOperator	-		1326735	0					
ANR	1326807	PrimaryExpression	1		1326735	1					
ANR	1326808	ElseStatement	else		1326735	0					
ANR	1326809	CompoundStatement		15:8:248:248	1326735	0					
ANR	1326810	ReturnStatement	"return dup2 ( fd , i ) ;"	979:2:24020:24037	1326735	0	True				
ANR	1326811	CallExpression	"dup2 ( fd , i )"		1326735	0					
ANR	1326812	Callee	dup2		1326735	0					
ANR	1326813	Identifier	dup2		1326735	0					
ANR	1326814	ArgumentList	fd		1326735	1					
ANR	1326815	Argument	fd		1326735	0					
ANR	1326816	Identifier	fd		1326735	0					
ANR	1326817	Argument	i		1326735	1					
ANR	1326818	Identifier	i		1326735	0					
ANR	1326819	ReturnType	int		1326735	1					
ANR	1326820	Identifier	CondorFileTable :: search_dup2		1326735	2					
ANR	1326821	ParameterList	"int fd , int search"		1326735	3					
ANR	1326822	Parameter	int fd	963:34:23746:23751	1326735	0	True				
ANR	1326823	ParameterType	int		1326735	0					
ANR	1326824	Identifier	fd		1326735	1					
ANR	1326825	Parameter	int search	963:42:23754:23763	1326735	1	True				
ANR	1326826	ParameterType	int		1326735	0					
ANR	1326827	Identifier	search		1326735	1					
ANR	1326828	CFGEntryNode	ENTRY		1326735		True				
ANR	1326829	CFGExitNode	EXIT		1326735		True				
ANR	1326830	Symbol	search		1326735						
ANR	1326831	Symbol	errno		1326735						
ANR	1326832	Symbol	* i		1326735						
ANR	1326833	Symbol	* fd		1326735						
ANR	1326834	Symbol	length		1326735						
ANR	1326835	Symbol	EMFILE		1326735						
ANR	1326836	Symbol	i		1326735						
ANR	1326837	Symbol	dup2		1326735						
ANR	1326838	Symbol	EBADF		1326735						
ANR	1326839	Symbol	fd		1326735						
ANR	1326840	Symbol	pointers		1326735						
ANR	1326841	Symbol	* pointers		1326735						
ANR	1326842	Function	CondorFileTable :: dup2	983:0:24045:24518							
ANR	1326843	FunctionDef	"CondorFileTable :: dup2 (int fd , int nfd)"		1326842	0					
ANR	1326844	CompoundStatement		984:0:24090:24518	1326842	0					
ANR	1326845	IdentifierDeclStatement	int result ;	985:1:24093:24103	1326842	0	True				
ANR	1326846	IdentifierDecl	result		1326842	0					
ANR	1326847	IdentifierDeclType	int		1326842	0					
ANR	1326848	Identifier	result		1326842	1					
ANR	1326849	IfStatement	if ( resume ( fd ) < 0 )		1326842	1					
ANR	1326850	Condition	resume ( fd ) < 0	987:5:24111:24122	1326842	0	True				
ANR	1326851	RelationalExpression	resume ( fd ) < 0		1326842	0		<			
ANR	1326852	CallExpression	resume ( fd )		1326842	0					
ANR	1326853	Callee	resume		1326842	0					
ANR	1326854	Identifier	resume		1326842	0					
ANR	1326855	ArgumentList	fd		1326842	1					
ANR	1326856	Argument	fd		1326842	0					
ANR	1326857	Identifier	fd		1326842	0					
ANR	1326858	PrimaryExpression	0		1326842	1					
ANR	1326859	ReturnStatement	return - 1 ;	987:20:24126:24135	1326842	1	True				
ANR	1326860	UnaryOperationExpression	- 1		1326842	0					
ANR	1326861	UnaryOperator	-		1326842	0					
ANR	1326862	PrimaryExpression	1		1326842	1					
ANR	1326863	IfStatement	if ( ( nfd < 0 ) || ( nfd >= length ) )		1326842	2					
ANR	1326864	Condition	( nfd < 0 ) || ( nfd >= length )	989:5:24143:24166	1326842	0	True				
ANR	1326865	OrExpression	( nfd < 0 ) || ( nfd >= length )		1326842	0		||			
ANR	1326866	RelationalExpression	nfd < 0		1326842	0		<			
ANR	1326867	Identifier	nfd		1326842	0					
ANR	1326868	PrimaryExpression	0		1326842	1					
ANR	1326869	RelationalExpression	nfd >= length		1326842	1		>=			
ANR	1326870	Identifier	nfd		1326842	0					
ANR	1326871	Identifier	length		1326842	1					
ANR	1326872	CompoundStatement		6:32:79:79	1326842	1					
ANR	1326873	ExpressionStatement	errno = EBADF	990:2:24174:24187	1326842	0	True				
ANR	1326874	AssignmentExpression	errno = EBADF		1326842	0		=			
ANR	1326875	Identifier	errno		1326842	0					
ANR	1326876	Identifier	EBADF		1326842	1					
ANR	1326877	ReturnStatement	return - 1 ;	991:2:24191:24200	1326842	1	True				
ANR	1326878	UnaryOperationExpression	- 1		1326842	0					
ANR	1326879	UnaryOperator	-		1326842	0					
ANR	1326880	PrimaryExpression	1		1326842	1					
ANR	1326881	IfStatement	if ( fd == nfd )		1326842	3					
ANR	1326882	Condition	fd == nfd	994:5:24211:24217	1326842	0	True				
ANR	1326883	EqualityExpression	fd == nfd		1326842	0		==			
ANR	1326884	Identifier	fd		1326842	0					
ANR	1326885	Identifier	nfd		1326842	1					
ANR	1326886	ReturnStatement	return fd ;	994:15:24221:24230	1326842	1	True				
ANR	1326887	Identifier	fd		1326842	0					
ANR	1326888	IfStatement	if ( pointers [ nfd ] != 0 )		1326842	4					
ANR	1326889	Condition	pointers [ nfd ] != 0	1000:5:24377:24392	1326842	0	True				
ANR	1326890	EqualityExpression	pointers [ nfd ] != 0		1326842	0		!=			
ANR	1326891	ArrayIndexing	pointers [ nfd ]		1326842	0					
ANR	1326892	Identifier	pointers		1326842	0					
ANR	1326893	Identifier	nfd		1326842	1					
ANR	1326894	PrimaryExpression	0		1326842	1					
ANR	1326895	CompoundStatement		17:24:305:305	1326842	1					
ANR	1326896	ExpressionStatement	result = close ( nfd )	1001:2:24400:24419	1326842	0	True				
ANR	1326897	AssignmentExpression	result = close ( nfd )		1326842	0		=			
ANR	1326898	Identifier	result		1326842	0					
ANR	1326899	CallExpression	close ( nfd )		1326842	1					
ANR	1326900	Callee	close		1326842	0					
ANR	1326901	Identifier	close		1326842	0					
ANR	1326902	ArgumentList	nfd		1326842	1					
ANR	1326903	Argument	nfd		1326842	0					
ANR	1326904	Identifier	nfd		1326842	0					
ANR	1326905	IfStatement	if ( result == - 1 )		1326842	1					
ANR	1326906	Condition	result == - 1	1002:6:24427:24436	1326842	0	True				
ANR	1326907	EqualityExpression	result == - 1		1326842	0		==			
ANR	1326908	Identifier	result		1326842	0					
ANR	1326909	UnaryOperationExpression	- 1		1326842	1					
ANR	1326910	UnaryOperator	-		1326842	0					
ANR	1326911	PrimaryExpression	1		1326842	1					
ANR	1326912	CompoundStatement		19:19:349:349	1326842	1					
ANR	1326913	ReturnStatement	return result ;	1003:3:24445:24458	1326842	0	True				
ANR	1326914	Identifier	result		1326842	0					
ANR	1326915	ExpressionStatement	pointers [ nfd ] = pointers [ fd ]	1007:1:24469:24497	1326842	5	True				
ANR	1326916	AssignmentExpression	pointers [ nfd ] = pointers [ fd ]		1326842	0		=			
ANR	1326917	ArrayIndexing	pointers [ nfd ]		1326842	0					
ANR	1326918	Identifier	pointers		1326842	0					
ANR	1326919	Identifier	nfd		1326842	1					
ANR	1326920	ArrayIndexing	pointers [ fd ]		1326842	1					
ANR	1326921	Identifier	pointers		1326842	0					
ANR	1326922	Identifier	fd		1326842	1					
ANR	1326923	ReturnStatement	return nfd ;	1009:1:24506:24516	1326842	6	True				
ANR	1326924	Identifier	nfd		1326842	0					
ANR	1326925	ReturnType	int		1326842	1					
ANR	1326926	Identifier	CondorFileTable :: dup2		1326842	2					
ANR	1326927	ParameterList	"int fd , int nfd"		1326842	3					
ANR	1326928	Parameter	int fd	983:27:24072:24077	1326842	0	True				
ANR	1326929	ParameterType	int		1326842	0					
ANR	1326930	Identifier	fd		1326842	1					
ANR	1326931	Parameter	int nfd	983:35:24080:24086	1326842	1	True				
ANR	1326932	ParameterType	int		1326842	0					
ANR	1326933	Identifier	nfd		1326842	1					
ANR	1326934	CFGEntryNode	ENTRY		1326842		True				
ANR	1326935	CFGExitNode	EXIT		1326842		True				
ANR	1326936	Symbol	result		1326842						
ANR	1326937	Symbol	resume		1326842						
ANR	1326938	Symbol	errno		1326842						
ANR	1326939	Symbol	* nfd		1326842						
ANR	1326940	Symbol	* fd		1326842						
ANR	1326941	Symbol	length		1326842						
ANR	1326942	Symbol	nfd		1326842						
ANR	1326943	Symbol	EBADF		1326842						
ANR	1326944	Symbol	close		1326842						
ANR	1326945	Symbol	fd		1326842						
ANR	1326946	Symbol	* pointers		1326842						
ANR	1326947	Symbol	pointers		1326842						
ANR	1326948	Function	CondorFileTable :: fchdir	1024:0:24867:25091							
ANR	1326949	FunctionDef	CondorFileTable :: fchdir (int fd)		1326948	0					
ANR	1326950	CompoundStatement		1025:0:24905:25091	1326948	0					
ANR	1326951	IfStatement	if ( resume ( fd ) < 0 )		1326948	0					
ANR	1326952	Condition	resume ( fd ) < 0	1026:5:24912:24923	1326948	0	True				
ANR	1326953	RelationalExpression	resume ( fd ) < 0		1326948	0		<			
ANR	1326954	CallExpression	resume ( fd )		1326948	0					
ANR	1326955	Callee	resume		1326948	0					
ANR	1326956	Identifier	resume		1326948	0					
ANR	1326957	ArgumentList	fd		1326948	1					
ANR	1326958	Argument	fd		1326948	0					
ANR	1326959	Identifier	fd		1326948	0					
ANR	1326960	PrimaryExpression	0		1326948	1					
ANR	1326961	ReturnStatement	return - 1 ;	1026:20:24927:24936	1326948	1	True				
ANR	1326962	UnaryOperationExpression	- 1		1326948	0					
ANR	1326963	UnaryOperator	-		1326948	0					
ANR	1326964	PrimaryExpression	1		1326948	1					
ANR	1326965	ExpressionStatement	"dprintf ( D_ALWAYS , ""CondorFileTable::fchdir(%d) will try chdir(%s)\\n"" , fd , pointers [ fd ] -> logical_name )"	1028:1:24940:25043	1326948	1	True				
ANR	1326966	CallExpression	"dprintf ( D_ALWAYS , ""CondorFileTable::fchdir(%d) will try chdir(%s)\\n"" , fd , pointers [ fd ] -> logical_name )"		1326948	0					
ANR	1326967	Callee	dprintf		1326948	0					
ANR	1326968	Identifier	dprintf		1326948	0					
ANR	1326969	ArgumentList	D_ALWAYS		1326948	1					
ANR	1326970	Argument	D_ALWAYS		1326948	0					
ANR	1326971	Identifier	D_ALWAYS		1326948	0					
ANR	1326972	Argument	"""CondorFileTable::fchdir(%d) will try chdir(%s)\\n"""		1326948	1					
ANR	1326973	PrimaryExpression	"""CondorFileTable::fchdir(%d) will try chdir(%s)\\n"""		1326948	0					
ANR	1326974	Argument	fd		1326948	2					
ANR	1326975	Identifier	fd		1326948	0					
ANR	1326976	Argument	pointers [ fd ] -> logical_name		1326948	3					
ANR	1326977	PtrMemberAccess	pointers [ fd ] -> logical_name		1326948	0					
ANR	1326978	ArrayIndexing	pointers [ fd ]		1326948	0					
ANR	1326979	Identifier	pointers		1326948	0					
ANR	1326980	Identifier	fd		1326948	1					
ANR	1326981	Identifier	logical_name		1326948	1					
ANR	1326982	ReturnStatement	return chdir ( pointers [ fd ] -> logical_name ) ;	1031:1:25047:25089	1326948	2	True				
ANR	1326983	CallExpression	chdir ( pointers [ fd ] -> logical_name )		1326948	0					
ANR	1326984	Callee	chdir		1326948	0					
ANR	1326985	Identifier	chdir		1326948	0					
ANR	1326986	ArgumentList	pointers [ fd ] -> logical_name		1326948	1					
ANR	1326987	Argument	pointers [ fd ] -> logical_name		1326948	0					
ANR	1326988	PtrMemberAccess	pointers [ fd ] -> logical_name		1326948	0					
ANR	1326989	ArrayIndexing	pointers [ fd ]		1326948	0					
ANR	1326990	Identifier	pointers		1326948	0					
ANR	1326991	Identifier	fd		1326948	1					
ANR	1326992	Identifier	logical_name		1326948	1					
ANR	1326993	ReturnType	int		1326948	1					
ANR	1326994	Identifier	CondorFileTable :: fchdir		1326948	2					
ANR	1326995	ParameterList	int fd		1326948	3					
ANR	1326996	Parameter	int fd	1024:29:24896:24901	1326948	0	True				
ANR	1326997	ParameterType	int		1326948	0					
ANR	1326998	Identifier	fd		1326948	1					
ANR	1326999	CFGEntryNode	ENTRY		1326948		True				
ANR	1327000	CFGExitNode	EXIT		1326948		True				
ANR	1327001	Symbol	resume		1326948						
ANR	1327002	Symbol	pointers [ fd ] -> logical_name		1326948						
ANR	1327003	Symbol	* fd		1326948						
ANR	1327004	Symbol	D_ALWAYS		1326948						
ANR	1327005	Symbol	* * fd		1326948						
ANR	1327006	Symbol	chdir		1326948						
ANR	1327007	Symbol	* * pointers		1326948						
ANR	1327008	Symbol	fd		1326948						
ANR	1327009	Symbol	pointers		1326948						
ANR	1327010	Symbol	* pointers		1326948						
ANR	1327011	Function	CondorFileTable :: chdir	1042:0:25362:26487							
ANR	1327012	FunctionDef	CondorFileTable :: chdir (const char * path)		1327011	0					
ANR	1327013	CompoundStatement		1043:0:25409:26487	1327011	0					
ANR	1327014	IdentifierDeclStatement	int result ;	1044:1:25412:25422	1327011	0	True				
ANR	1327015	IdentifierDecl	result		1327011	0					
ANR	1327016	IdentifierDeclType	int		1327011	0					
ANR	1327017	Identifier	result		1327011	1					
ANR	1327018	IdentifierDeclStatement	char * nmem = NULL ;	1045:1:25425:25442	1327011	1	True				
ANR	1327019	IdentifierDecl	* nmem = NULL		1327011	0					
ANR	1327020	IdentifierDeclType	char *		1327011	0					
ANR	1327021	Identifier	nmem		1327011	1					
ANR	1327022	AssignmentExpression	* nmem = NULL		1327011	2		=			
ANR	1327023	Identifier	NULL		1327011	0					
ANR	1327024	Identifier	NULL		1327011	1					
ANR	1327025	IfStatement	if ( MyImage . GetMode ( ) != STANDALONE )		1327011	2					
ANR	1327026	Condition	MyImage . GetMode ( ) != STANDALONE	1047:5:25450:25480	1327011	0	True				
ANR	1327027	EqualityExpression	MyImage . GetMode ( ) != STANDALONE		1327011	0		!=			
ANR	1327028	CallExpression	MyImage . GetMode ( )		1327011	0					
ANR	1327029	Callee	MyImage . GetMode		1327011	0					
ANR	1327030	MemberAccess	MyImage . GetMode		1327011	0					
ANR	1327031	Identifier	MyImage		1327011	0					
ANR	1327032	Identifier	GetMode		1327011	1					
ANR	1327033	ArgumentList			1327011	1					
ANR	1327034	Identifier	STANDALONE		1327011	1					
ANR	1327035	CompoundStatement		5:39:74:74	1327011	1					
ANR	1327036	ExpressionStatement	result = REMOTE_CONDOR_chdir ( path )	1048:2:25488:25524	1327011	0	True				
ANR	1327037	AssignmentExpression	result = REMOTE_CONDOR_chdir ( path )		1327011	0		=			
ANR	1327038	Identifier	result		1327011	0					
ANR	1327039	CallExpression	REMOTE_CONDOR_chdir ( path )		1327011	1					
ANR	1327040	Callee	REMOTE_CONDOR_chdir		1327011	0					
ANR	1327041	Identifier	REMOTE_CONDOR_chdir		1327011	0					
ANR	1327042	ArgumentList	path		1327011	1					
ANR	1327043	Argument	path		1327011	0					
ANR	1327044	Identifier	path		1327011	0					
ANR	1327045	ElseStatement	else		1327011	0					
ANR	1327046	CompoundStatement		7:8:124:124	1327011	0					
ANR	1327047	ExpressionStatement	"result = syscall ( SYS_chdir , path )"	1050:2:25538:25573	1327011	0	True				
ANR	1327048	AssignmentExpression	"result = syscall ( SYS_chdir , path )"		1327011	0		=			
ANR	1327049	Identifier	result		1327011	0					
ANR	1327050	CallExpression	"syscall ( SYS_chdir , path )"		1327011	1					
ANR	1327051	Callee	syscall		1327011	0					
ANR	1327052	Identifier	syscall		1327011	0					
ANR	1327053	ArgumentList	SYS_chdir		1327011	1					
ANR	1327054	Argument	SYS_chdir		1327011	0					
ANR	1327055	Identifier	SYS_chdir		1327011	0					
ANR	1327056	Argument	path		1327011	1					
ANR	1327057	Identifier	path		1327011	0					
ANR	1327058	IfStatement	if ( result == - 1 )		1327011	3					
ANR	1327059	Condition	result == - 1	1053:5:25584:25593	1327011	0	True				
ANR	1327060	EqualityExpression	result == - 1		1327011	0		==			
ANR	1327061	Identifier	result		1327011	0					
ANR	1327062	UnaryOperationExpression	- 1		1327011	1					
ANR	1327063	UnaryOperator	-		1327011	0					
ANR	1327064	PrimaryExpression	1		1327011	1					
ANR	1327065	ReturnStatement	return result ;	1053:18:25597:25610	1327011	1	True				
ANR	1327066	Identifier	result		1327011	0					
ANR	1327067	IfStatement	if ( path [ 0 ] == '/' )		1327011	4					
ANR	1327068	Condition	path [ 0 ] == '/'	1055:5:25618:25629	1327011	0	True				
ANR	1327069	EqualityExpression	path [ 0 ] == '/'		1327011	0		==			
ANR	1327070	ArrayIndexing	path [ 0 ]		1327011	0					
ANR	1327071	Identifier	path		1327011	0					
ANR	1327072	PrimaryExpression	0		1327011	1					
ANR	1327073	PrimaryExpression	'/'		1327011	1					
ANR	1327074	CompoundStatement		13:20:223:223	1327011	1					
ANR	1327075	ExpressionStatement	nmem = strdup ( path )	1058:2:25744:25765	1327011	0	True				
ANR	1327076	AssignmentExpression	nmem = strdup ( path )		1327011	0		=			
ANR	1327077	Identifier	nmem		1327011	0					
ANR	1327078	CallExpression	strdup ( path )		1327011	1					
ANR	1327079	Callee	strdup		1327011	0					
ANR	1327080	Identifier	strdup		1327011	0					
ANR	1327081	ArgumentList	path		1327011	1					
ANR	1327082	Argument	path		1327011	0					
ANR	1327083	Identifier	path		1327011	0					
ANR	1327084	ExpressionStatement	free ( working_dir )	1059:2:25769:25788	1327011	1	True				
ANR	1327085	CallExpression	free ( working_dir )		1327011	0					
ANR	1327086	Callee	free		1327011	0					
ANR	1327087	Identifier	free		1327011	0					
ANR	1327088	ArgumentList	working_dir		1327011	1					
ANR	1327089	Argument	working_dir		1327011	0					
ANR	1327090	Identifier	working_dir		1327011	0					
ANR	1327091	ExpressionStatement	working_dir = nmem	1060:2:25792:25810	1327011	2	True				
ANR	1327092	AssignmentExpression	working_dir = nmem		1327011	0		=			
ANR	1327093	Identifier	working_dir		1327011	0					
ANR	1327094	Identifier	nmem		1327011	1					
ANR	1327095	ElseStatement	else		1327011	0					
ANR	1327096	CompoundStatement		19:8:410:410	1327011	0					
ANR	1327097	ExpressionStatement	"nmem = ( char * ) realloc ( working_dir , strlen ( path ) + strlen ( working_dir ) + 2 )"	1062:2:25824:25894	1327011	0	True				
ANR	1327098	AssignmentExpression	"nmem = ( char * ) realloc ( working_dir , strlen ( path ) + strlen ( working_dir ) + 2 )"		1327011	0		=			
ANR	1327099	Identifier	nmem		1327011	0					
ANR	1327100	CastExpression	"( char * ) realloc ( working_dir , strlen ( path ) + strlen ( working_dir ) + 2 )"		1327011	1					
ANR	1327101	CastTarget	char *		1327011	0					
ANR	1327102	CallExpression	"realloc ( working_dir , strlen ( path ) + strlen ( working_dir ) + 2 )"		1327011	1					
ANR	1327103	Callee	realloc		1327011	0					
ANR	1327104	Identifier	realloc		1327011	0					
ANR	1327105	ArgumentList	working_dir		1327011	1					
ANR	1327106	Argument	working_dir		1327011	0					
ANR	1327107	Identifier	working_dir		1327011	0					
ANR	1327108	Argument	strlen ( path ) + strlen ( working_dir ) + 2		1327011	1					
ANR	1327109	AdditiveExpression	strlen ( path ) + strlen ( working_dir ) + 2		1327011	0		+			
ANR	1327110	CallExpression	strlen ( path )		1327011	0					
ANR	1327111	Callee	strlen		1327011	0					
ANR	1327112	Identifier	strlen		1327011	0					
ANR	1327113	ArgumentList	path		1327011	1					
ANR	1327114	Argument	path		1327011	0					
ANR	1327115	Identifier	path		1327011	0					
ANR	1327116	AdditiveExpression	strlen ( working_dir ) + 2		1327011	1		+			
ANR	1327117	CallExpression	strlen ( working_dir )		1327011	0					
ANR	1327118	Callee	strlen		1327011	0					
ANR	1327119	Identifier	strlen		1327011	0					
ANR	1327120	ArgumentList	working_dir		1327011	1					
ANR	1327121	Argument	working_dir		1327011	0					
ANR	1327122	Identifier	working_dir		1327011	0					
ANR	1327123	PrimaryExpression	2		1327011	1					
ANR	1327124	IfStatement	if ( nmem == NULL )		1327011	1					
ANR	1327125	Condition	nmem == NULL	1063:6:25902:25913	1327011	0	True				
ANR	1327126	EqualityExpression	nmem == NULL		1327011	0		==			
ANR	1327127	Identifier	nmem		1327011	0					
ANR	1327128	Identifier	NULL		1327011	1					
ANR	1327129	CompoundStatement		21:20:506:506	1327011	1					
ANR	1327130	ExpressionStatement	errno = ENOMEM	1069:3:26171:26185	1327011	0	True				
ANR	1327131	AssignmentExpression	errno = ENOMEM		1327011	0		=			
ANR	1327132	Identifier	errno		1327011	0					
ANR	1327133	Identifier	ENOMEM		1327011	1					
ANR	1327134	ReturnStatement	return - 1 ;	1070:3:26190:26199	1327011	1	True				
ANR	1327135	UnaryOperationExpression	- 1		1327011	0					
ANR	1327136	UnaryOperator	-		1327011	0					
ANR	1327137	PrimaryExpression	1		1327011	1					
ANR	1327138	ExpressionStatement	working_dir = nmem	1075:2:26386:26404	1327011	2	True				
ANR	1327139	AssignmentExpression	working_dir = nmem		1327011	0		=			
ANR	1327140	Identifier	working_dir		1327011	0					
ANR	1327141	Identifier	nmem		1327011	1					
ANR	1327142	ExpressionStatement	"strcat ( working_dir , ""/"" )"	1076:2:26408:26434	1327011	3	True				
ANR	1327143	CallExpression	"strcat ( working_dir , ""/"" )"		1327011	0					
ANR	1327144	Callee	strcat		1327011	0					
ANR	1327145	Identifier	strcat		1327011	0					
ANR	1327146	ArgumentList	working_dir		1327011	1					
ANR	1327147	Argument	working_dir		1327011	0					
ANR	1327148	Identifier	working_dir		1327011	0					
ANR	1327149	Argument	"""/"""		1327011	1					
ANR	1327150	PrimaryExpression	"""/"""		1327011	0					
ANR	1327151	ExpressionStatement	"strcat ( working_dir , path )"	1077:2:26438:26465	1327011	4	True				
ANR	1327152	CallExpression	"strcat ( working_dir , path )"		1327011	0					
ANR	1327153	Callee	strcat		1327011	0					
ANR	1327154	Identifier	strcat		1327011	0					
ANR	1327155	ArgumentList	working_dir		1327011	1					
ANR	1327156	Argument	working_dir		1327011	0					
ANR	1327157	Identifier	working_dir		1327011	0					
ANR	1327158	Argument	path		1327011	1					
ANR	1327159	Identifier	path		1327011	0					
ANR	1327160	ReturnStatement	return result ;	1080:1:26472:26485	1327011	5	True				
ANR	1327161	Identifier	result		1327011	0					
ANR	1327162	ReturnType	int		1327011	1					
ANR	1327163	Identifier	CondorFileTable :: chdir		1327011	2					
ANR	1327164	ParameterList	const char * path		1327011	3					
ANR	1327165	Parameter	const char * path	1042:28:25390:25405	1327011	0	True				
ANR	1327166	ParameterType	const char *		1327011	0					
ANR	1327167	Identifier	path		1327011	1					
ANR	1327168	CFGEntryNode	ENTRY		1327011		True				
ANR	1327169	CFGExitNode	EXIT		1327011		True				
ANR	1327170	Symbol	syscall		1327011						
ANR	1327171	Symbol	ENOMEM		1327011						
ANR	1327172	Symbol	errno		1327011						
ANR	1327173	Symbol	NULL		1327011						
ANR	1327174	Symbol	REMOTE_CONDOR_chdir		1327011						
ANR	1327175	Symbol	working_dir		1327011						
ANR	1327176	Symbol	MyImage . GetMode		1327011						
ANR	1327177	Symbol	SYS_chdir		1327011						
ANR	1327178	Symbol	realloc		1327011						
ANR	1327179	Symbol	result		1327011						
ANR	1327180	Symbol	path		1327011						
ANR	1327181	Symbol	strlen		1327011						
ANR	1327182	Symbol	STANDALONE		1327011						
ANR	1327183	Symbol	nmem		1327011						
ANR	1327184	Symbol	* path		1327011						
ANR	1327185	Symbol	strdup		1327011						
ANR	1327186	Symbol	MyImage		1327011						
ANR	1327187	Function	CondorFileTable :: ioctl	1089:0:26640:26773							
ANR	1327188	FunctionDef	"CondorFileTable :: ioctl (int fd , int cmd , long arg)"		1327187	0					
ANR	1327189	CompoundStatement		1090:0:26696:26773	1327187	0					
ANR	1327190	IfStatement	if ( resume ( fd ) < 0 )		1327187	0					
ANR	1327191	Condition	resume ( fd ) < 0	1091:5:26703:26714	1327187	0	True				
ANR	1327192	RelationalExpression	resume ( fd ) < 0		1327187	0		<			
ANR	1327193	CallExpression	resume ( fd )		1327187	0					
ANR	1327194	Callee	resume		1327187	0					
ANR	1327195	Identifier	resume		1327187	0					
ANR	1327196	ArgumentList	fd		1327187	1					
ANR	1327197	Argument	fd		1327187	0					
ANR	1327198	Identifier	fd		1327187	0					
ANR	1327199	PrimaryExpression	0		1327187	1					
ANR	1327200	ReturnStatement	return - 1 ;	1091:20:26718:26727	1327187	1	True				
ANR	1327201	UnaryOperationExpression	- 1		1327187	0					
ANR	1327202	UnaryOperator	-		1327187	0					
ANR	1327203	PrimaryExpression	1		1327187	1					
ANR	1327204	ReturnStatement	"return pointers [ fd ] -> file -> ioctl ( cmd , arg ) ;"	1092:1:26730:26771	1327187	1	True				
ANR	1327205	CallExpression	"pointers [ fd ] -> file -> ioctl ( cmd , arg )"		1327187	0					
ANR	1327206	Callee	pointers [ fd ] -> file -> ioctl		1327187	0					
ANR	1327207	PtrMemberAccess	pointers [ fd ] -> file -> ioctl		1327187	0					
ANR	1327208	PtrMemberAccess	pointers [ fd ] -> file		1327187	0					
ANR	1327209	ArrayIndexing	pointers [ fd ]		1327187	0					
ANR	1327210	Identifier	pointers		1327187	0					
ANR	1327211	Identifier	fd		1327187	1					
ANR	1327212	Identifier	file		1327187	1					
ANR	1327213	Identifier	ioctl		1327187	1					
ANR	1327214	ArgumentList	cmd		1327187	1					
ANR	1327215	Argument	cmd		1327187	0					
ANR	1327216	Identifier	cmd		1327187	0					
ANR	1327217	Argument	arg		1327187	1					
ANR	1327218	Identifier	arg		1327187	0					
ANR	1327219	ReturnType	int		1327187	1					
ANR	1327220	Identifier	CondorFileTable :: ioctl		1327187	2					
ANR	1327221	ParameterList	"int fd , int cmd , long arg"		1327187	3					
ANR	1327222	Parameter	int fd	1089:28:26668:26673	1327187	0	True				
ANR	1327223	ParameterType	int		1327187	0					
ANR	1327224	Identifier	fd		1327187	1					
ANR	1327225	Parameter	int cmd	1089:36:26676:26682	1327187	1	True				
ANR	1327226	ParameterType	int		1327187	0					
ANR	1327227	Identifier	cmd		1327187	1					
ANR	1327228	Parameter	long arg	1089:45:26685:26692	1327187	2	True				
ANR	1327229	ParameterType	long		1327187	0					
ANR	1327230	Identifier	arg		1327187	1					
ANR	1327231	CFGEntryNode	ENTRY		1327187		True				
ANR	1327232	CFGExitNode	EXIT		1327187		True				
ANR	1327233	Symbol	resume		1327187						
ANR	1327234	Symbol	* fd		1327187						
ANR	1327235	Symbol	* * fd		1327187						
ANR	1327236	Symbol	pointers [ fd ] -> file -> ioctl		1327187						
ANR	1327237	Symbol	* pointers		1327187						
ANR	1327238	Symbol	* pointers [ fd ] -> file		1327187						
ANR	1327239	Symbol	arg		1327187						
ANR	1327240	Symbol	* * * pointers		1327187						
ANR	1327241	Symbol	* * * fd		1327187						
ANR	1327242	Symbol	cmd		1327187						
ANR	1327243	Symbol	pointers [ fd ] -> file		1327187						
ANR	1327244	Symbol	* * pointers		1327187						
ANR	1327245	Symbol	fd		1327187						
ANR	1327246	Symbol	pointers		1327187						
ANR	1327247	Function	CondorFileTable :: ftruncate	1095:0:26776:26909							
ANR	1327248	FunctionDef	"CondorFileTable :: ftruncate (int fd , size_t size)"		1327247	0					
ANR	1327249	CompoundStatement		1096:0:26830:26909	1327247	0					
ANR	1327250	IfStatement	if ( resume ( fd ) < 0 )		1327247	0					
ANR	1327251	Condition	resume ( fd ) < 0	1097:5:26837:26848	1327247	0	True				
ANR	1327252	RelationalExpression	resume ( fd ) < 0		1327247	0		<			
ANR	1327253	CallExpression	resume ( fd )		1327247	0					
ANR	1327254	Callee	resume		1327247	0					
ANR	1327255	Identifier	resume		1327247	0					
ANR	1327256	ArgumentList	fd		1327247	1					
ANR	1327257	Argument	fd		1327247	0					
ANR	1327258	Identifier	fd		1327247	0					
ANR	1327259	PrimaryExpression	0		1327247	1					
ANR	1327260	ReturnStatement	return - 1 ;	1097:20:26852:26861	1327247	1	True				
ANR	1327261	UnaryOperationExpression	- 1		1327247	0					
ANR	1327262	UnaryOperator	-		1327247	0					
ANR	1327263	PrimaryExpression	1		1327247	1					
ANR	1327264	ReturnStatement	return pointers [ fd ] -> file -> ftruncate ( size ) ;	1099:1:26865:26907	1327247	1	True				
ANR	1327265	CallExpression	pointers [ fd ] -> file -> ftruncate ( size )		1327247	0					
ANR	1327266	Callee	pointers [ fd ] -> file -> ftruncate		1327247	0					
ANR	1327267	PtrMemberAccess	pointers [ fd ] -> file -> ftruncate		1327247	0					
ANR	1327268	PtrMemberAccess	pointers [ fd ] -> file		1327247	0					
ANR	1327269	ArrayIndexing	pointers [ fd ]		1327247	0					
ANR	1327270	Identifier	pointers		1327247	0					
ANR	1327271	Identifier	fd		1327247	1					
ANR	1327272	Identifier	file		1327247	1					
ANR	1327273	Identifier	ftruncate		1327247	1					
ANR	1327274	ArgumentList	size		1327247	1					
ANR	1327275	Argument	size		1327247	0					
ANR	1327276	Identifier	size		1327247	0					
ANR	1327277	ReturnType	int		1327247	1					
ANR	1327278	Identifier	CondorFileTable :: ftruncate		1327247	2					
ANR	1327279	ParameterList	"int fd , size_t size"		1327247	3					
ANR	1327280	Parameter	int fd	1095:32:26808:26813	1327247	0	True				
ANR	1327281	ParameterType	int		1327247	0					
ANR	1327282	Identifier	fd		1327247	1					
ANR	1327283	Parameter	size_t size	1095:40:26816:26826	1327247	1	True				
ANR	1327284	ParameterType	size_t		1327247	0					
ANR	1327285	Identifier	size		1327247	1					
ANR	1327286	CFGEntryNode	ENTRY		1327247		True				
ANR	1327287	CFGExitNode	EXIT		1327247		True				
ANR	1327288	Symbol	resume		1327247						
ANR	1327289	Symbol	* fd		1327247						
ANR	1327290	Symbol	pointers [ fd ] -> file -> ftruncate		1327247						
ANR	1327291	Symbol	* * fd		1327247						
ANR	1327292	Symbol	* pointers		1327247						
ANR	1327293	Symbol	* pointers [ fd ] -> file		1327247						
ANR	1327294	Symbol	size		1327247						
ANR	1327295	Symbol	* * * fd		1327247						
ANR	1327296	Symbol	* * * pointers		1327247						
ANR	1327297	Symbol	pointers [ fd ] -> file		1327247						
ANR	1327298	Symbol	* * pointers		1327247						
ANR	1327299	Symbol	fd		1327247						
ANR	1327300	Symbol	pointers		1327247						
ANR	1327301	Function	CondorFileTable :: fcntl	1111:0:27155:28335							
ANR	1327302	FunctionDef	"CondorFileTable :: fcntl (int fd , int cmd , int arg)"		1327301	0					
ANR	1327303	CompoundStatement		1112:0:27210:28335	1327301	0					
ANR	1327304	IfStatement	if ( resume ( fd ) < 0 )		1327301	0					
ANR	1327305	Condition	resume ( fd ) < 0	1114:5:27218:27229	1327301	0	True				
ANR	1327306	RelationalExpression	resume ( fd ) < 0		1327301	0		<			
ANR	1327307	CallExpression	resume ( fd )		1327301	0					
ANR	1327308	Callee	resume		1327301	0					
ANR	1327309	Identifier	resume		1327301	0					
ANR	1327310	ArgumentList	fd		1327301	1					
ANR	1327311	Argument	fd		1327301	0					
ANR	1327312	Identifier	fd		1327301	0					
ANR	1327313	PrimaryExpression	0		1327301	1					
ANR	1327314	ReturnStatement	return - 1 ;	1114:20:27233:27242	1327301	1	True				
ANR	1327315	UnaryOperationExpression	- 1		1327301	0					
ANR	1327316	UnaryOperator	-		1327301	0					
ANR	1327317	PrimaryExpression	1		1327301	1					
ANR	1327318	SwitchStatement	switch ( cmd )		1327301	1					
ANR	1327319	Condition	cmd	1116:8:27253:27255	1327301	0	True				
ANR	1327320	Identifier	cmd		1327301	0					
ANR	1327321	CompoundStatement		5:13:47:47	1327301	1					
ANR	1327322	Label	case F_DUPFD :	1118:2:27279:27291	1327301	0	True				
ANR	1327323	Identifier	F_DUPFD		1327301	0					
ANR	1327324	ReturnStatement	"return search_dup2 ( fd , arg ) ;"	1119:3:27296:27322	1327301	1	True				
ANR	1327325	CallExpression	"search_dup2 ( fd , arg )"		1327301	0					
ANR	1327326	Callee	search_dup2		1327301	0					
ANR	1327327	Identifier	search_dup2		1327301	0					
ANR	1327328	ArgumentList	fd		1327301	1					
ANR	1327329	Argument	fd		1327301	0					
ANR	1327330	Identifier	fd		1327301	0					
ANR	1327331	Argument	arg		1327301	1					
ANR	1327332	Identifier	arg		1327301	0					
ANR	1327333	BreakStatement	break ;	1120:3:27327:27332	1327301	2	True				
ANR	1327334	Label	case F_DUP2FD :	1124:2:27364:27377	1327301	3	True				
ANR	1327335	Identifier	F_DUP2FD		1327301	0					
ANR	1327336	ReturnStatement	"return dup2 ( fd , arg ) ;"	1125:3:27382:27401	1327301	4	True				
ANR	1327337	CallExpression	"dup2 ( fd , arg )"		1327301	0					
ANR	1327338	Callee	dup2		1327301	0					
ANR	1327339	Identifier	dup2		1327301	0					
ANR	1327340	ArgumentList	fd		1327301	1					
ANR	1327341	Argument	fd		1327301	0					
ANR	1327342	Identifier	fd		1327301	0					
ANR	1327343	Argument	arg		1327301	1					
ANR	1327344	Identifier	arg		1327301	0					
ANR	1327345	BreakStatement	break ;	1126:3:27406:27411	1327301	5	True				
ANR	1327346	Label	case F_FREESP :	1140:2:27758:27771	1327301	6	True				
ANR	1327347	Identifier	F_FREESP		1327301	0					
ANR	1327348	CompoundStatement		31:4:571:608	1327301	7					
ANR	1327349	IdentifierDeclStatement	struct flock * f = ( struct flock * ) arg ;	1142:4:27782:27819	1327301	0	True				
ANR	1327350	IdentifierDecl	* f = ( struct flock * ) arg		1327301	0					
ANR	1327351	IdentifierDeclType	struct flock *		1327301	0					
ANR	1327352	Identifier	f		1327301	1					
ANR	1327353	AssignmentExpression	* f = ( struct flock * ) arg		1327301	2		=			
ANR	1327354	Identifier	f		1327301	0					
ANR	1327355	CastExpression	( struct flock * ) arg		1327301	1					
ANR	1327356	CastTarget	struct flock *		1327301	0					
ANR	1327357	Identifier	arg		1327301	1					
ANR	1327358	IfStatement	if ( ( f -> l_whence == 0 ) && ( f -> l_len == 0 ) )		1327301	1					
ANR	1327359	Condition	( f -> l_whence == 0 ) && ( f -> l_len == 0 )	1144:8:27830:27862	1327301	0	True				
ANR	1327360	AndExpression	( f -> l_whence == 0 ) && ( f -> l_len == 0 )		1327301	0		&&			
ANR	1327361	EqualityExpression	f -> l_whence == 0		1327301	0		==			
ANR	1327362	PtrMemberAccess	f -> l_whence		1327301	0					
ANR	1327363	Identifier	f		1327301	0					
ANR	1327364	Identifier	l_whence		1327301	1					
ANR	1327365	PrimaryExpression	0		1327301	1					
ANR	1327366	EqualityExpression	f -> l_len == 0		1327301	1		==			
ANR	1327367	PtrMemberAccess	f -> l_len		1327301	0					
ANR	1327368	Identifier	f		1327301	0					
ANR	1327369	Identifier	l_len		1327301	1					
ANR	1327370	PrimaryExpression	0		1327301	1					
ANR	1327371	CompoundStatement		33:44:655:655	1327301	1					
ANR	1327372	ReturnStatement	"return FileTab -> ftruncate ( fd , f -> l_start ) ;"	1145:5:27873:27913	1327301	0	True				
ANR	1327373	CallExpression	"FileTab -> ftruncate ( fd , f -> l_start )"		1327301	0					
ANR	1327374	Callee	FileTab -> ftruncate		1327301	0					
ANR	1327375	PtrMemberAccess	FileTab -> ftruncate		1327301	0					
ANR	1327376	Identifier	FileTab		1327301	0					
ANR	1327377	Identifier	ftruncate		1327301	1					
ANR	1327378	ArgumentList	fd		1327301	1					
ANR	1327379	Argument	fd		1327301	0					
ANR	1327380	Identifier	fd		1327301	0					
ANR	1327381	Argument	f -> l_start		1327301	1					
ANR	1327382	PtrMemberAccess	f -> l_start		1327301	0					
ANR	1327383	Identifier	f		1327301	0					
ANR	1327384	Identifier	l_start		1327301	1					
ANR	1327385	ReturnStatement	"return pointers [ fd ] -> file -> fcntl ( cmd , arg ) ;"	1147:4:27925:27966	1327301	2	True				
ANR	1327386	CallExpression	"pointers [ fd ] -> file -> fcntl ( cmd , arg )"		1327301	0					
ANR	1327387	Callee	pointers [ fd ] -> file -> fcntl		1327301	0					
ANR	1327388	PtrMemberAccess	pointers [ fd ] -> file -> fcntl		1327301	0					
ANR	1327389	PtrMemberAccess	pointers [ fd ] -> file		1327301	0					
ANR	1327390	ArrayIndexing	pointers [ fd ]		1327301	0					
ANR	1327391	Identifier	pointers		1327301	0					
ANR	1327392	Identifier	fd		1327301	1					
ANR	1327393	Identifier	file		1327301	1					
ANR	1327394	Identifier	fcntl		1327301	1					
ANR	1327395	ArgumentList	cmd		1327301	1					
ANR	1327396	Argument	cmd		1327301	0					
ANR	1327397	Identifier	cmd		1327301	0					
ANR	1327398	Argument	arg		1327301	1					
ANR	1327399	Identifier	arg		1327301	0					
ANR	1327400	BreakStatement	break ;	1149:3:27976:27981	1327301	8	True				
ANR	1327401	Label	case F_FREESP64 :	1153:2:28015:28030	1327301	9	True				
ANR	1327402	Identifier	F_FREESP64		1327301	0					
ANR	1327403	CompoundStatement		44:4:830:873	1327301	10					
ANR	1327404	IdentifierDeclStatement	struct flock64 * f64 = ( struct flock64 * ) arg ;	1155:4:28041:28084	1327301	0	True				
ANR	1327405	IdentifierDecl	* f64 = ( struct flock64 * ) arg		1327301	0					
ANR	1327406	IdentifierDeclType	struct flock64 *		1327301	0					
ANR	1327407	Identifier	f64		1327301	1					
ANR	1327408	AssignmentExpression	* f64 = ( struct flock64 * ) arg		1327301	2		=			
ANR	1327409	Identifier	f64		1327301	0					
ANR	1327410	CastExpression	( struct flock64 * ) arg		1327301	1					
ANR	1327411	CastTarget	struct flock64 *		1327301	0					
ANR	1327412	Identifier	arg		1327301	1					
ANR	1327413	IfStatement	if ( ( f64 -> l_whence == 0 ) && ( f64 -> l_len == 0 ) )		1327301	1					
ANR	1327414	Condition	( f64 -> l_whence == 0 ) && ( f64 -> l_len == 0 )	1157:8:28095:28131	1327301	0	True				
ANR	1327415	AndExpression	( f64 -> l_whence == 0 ) && ( f64 -> l_len == 0 )		1327301	0		&&			
ANR	1327416	EqualityExpression	f64 -> l_whence == 0		1327301	0		==			
ANR	1327417	PtrMemberAccess	f64 -> l_whence		1327301	0					
ANR	1327418	Identifier	f64		1327301	0					
ANR	1327419	Identifier	l_whence		1327301	1					
ANR	1327420	PrimaryExpression	0		1327301	1					
ANR	1327421	EqualityExpression	f64 -> l_len == 0		1327301	1		==			
ANR	1327422	PtrMemberAccess	f64 -> l_len		1327301	0					
ANR	1327423	Identifier	f64		1327301	0					
ANR	1327424	Identifier	l_len		1327301	1					
ANR	1327425	PrimaryExpression	0		1327301	1					
ANR	1327426	CompoundStatement		46:48:924:924	1327301	1					
ANR	1327427	ReturnStatement	"return FileTab -> ftruncate ( fd , f64 -> l_start ) ;"	1158:5:28142:28184	1327301	0	True				
ANR	1327428	CallExpression	"FileTab -> ftruncate ( fd , f64 -> l_start )"		1327301	0					
ANR	1327429	Callee	FileTab -> ftruncate		1327301	0					
ANR	1327430	PtrMemberAccess	FileTab -> ftruncate		1327301	0					
ANR	1327431	Identifier	FileTab		1327301	0					
ANR	1327432	Identifier	ftruncate		1327301	1					
ANR	1327433	ArgumentList	fd		1327301	1					
ANR	1327434	Argument	fd		1327301	0					
ANR	1327435	Identifier	fd		1327301	0					
ANR	1327436	Argument	f64 -> l_start		1327301	1					
ANR	1327437	PtrMemberAccess	f64 -> l_start		1327301	0					
ANR	1327438	Identifier	f64		1327301	0					
ANR	1327439	Identifier	l_start		1327301	1					
ANR	1327440	ReturnStatement	"return pointers [ fd ] -> file -> fcntl ( cmd , arg ) ;"	1161:4:28197:28238	1327301	2	True				
ANR	1327441	CallExpression	"pointers [ fd ] -> file -> fcntl ( cmd , arg )"		1327301	0					
ANR	1327442	Callee	pointers [ fd ] -> file -> fcntl		1327301	0					
ANR	1327443	PtrMemberAccess	pointers [ fd ] -> file -> fcntl		1327301	0					
ANR	1327444	PtrMemberAccess	pointers [ fd ] -> file		1327301	0					
ANR	1327445	ArrayIndexing	pointers [ fd ]		1327301	0					
ANR	1327446	Identifier	pointers		1327301	0					
ANR	1327447	Identifier	fd		1327301	1					
ANR	1327448	Identifier	file		1327301	1					
ANR	1327449	Identifier	fcntl		1327301	1					
ANR	1327450	ArgumentList	cmd		1327301	1					
ANR	1327451	Argument	cmd		1327301	0					
ANR	1327452	Identifier	cmd		1327301	0					
ANR	1327453	Argument	arg		1327301	1					
ANR	1327454	Identifier	arg		1327301	0					
ANR	1327455	BreakStatement	break ;	1163:3:28248:28253	1327301	11	True				
ANR	1327456	Label	default :	1166:2:28267:28274	1327301	12	True				
ANR	1327457	Identifier	default		1327301	0					
ANR	1327458	ReturnStatement	"return pointers [ fd ] -> file -> fcntl ( cmd , arg ) ;"	1167:3:28279:28320	1327301	13	True				
ANR	1327459	CallExpression	"pointers [ fd ] -> file -> fcntl ( cmd , arg )"		1327301	0					
ANR	1327460	Callee	pointers [ fd ] -> file -> fcntl		1327301	0					
ANR	1327461	PtrMemberAccess	pointers [ fd ] -> file -> fcntl		1327301	0					
ANR	1327462	PtrMemberAccess	pointers [ fd ] -> file		1327301	0					
ANR	1327463	ArrayIndexing	pointers [ fd ]		1327301	0					
ANR	1327464	Identifier	pointers		1327301	0					
ANR	1327465	Identifier	fd		1327301	1					
ANR	1327466	Identifier	file		1327301	1					
ANR	1327467	Identifier	fcntl		1327301	1					
ANR	1327468	ArgumentList	cmd		1327301	1					
ANR	1327469	Argument	cmd		1327301	0					
ANR	1327470	Identifier	cmd		1327301	0					
ANR	1327471	Argument	arg		1327301	1					
ANR	1327472	Identifier	arg		1327301	0					
ANR	1327473	BreakStatement	break ;	1168:3:28325:28330	1327301	14	True				
ANR	1327474	ReturnType	int		1327301	1					
ANR	1327475	Identifier	CondorFileTable :: fcntl		1327301	2					
ANR	1327476	ParameterList	"int fd , int cmd , int arg"		1327301	3					
ANR	1327477	Parameter	int fd	1111:28:27183:27188	1327301	0	True				
ANR	1327478	ParameterType	int		1327301	0					
ANR	1327479	Identifier	fd		1327301	1					
ANR	1327480	Parameter	int cmd	1111:36:27191:27197	1327301	1	True				
ANR	1327481	ParameterType	int		1327301	0					
ANR	1327482	Identifier	cmd		1327301	1					
ANR	1327483	Parameter	int arg	1111:45:27200:27206	1327301	2	True				
ANR	1327484	ParameterType	int		1327301	0					
ANR	1327485	Identifier	arg		1327301	1					
ANR	1327486	CFGEntryNode	ENTRY		1327301		True				
ANR	1327487	CFGExitNode	EXIT		1327301		True				
ANR	1327488	Symbol	f64 -> l_len		1327301						
ANR	1327489	Symbol	* FileTab		1327301						
ANR	1327490	Symbol	f64 -> l_start		1327301						
ANR	1327491	Symbol	arg		1327301						
ANR	1327492	Symbol	f64 -> l_whence		1327301						
ANR	1327493	Symbol	* * * fd		1327301						
ANR	1327494	Symbol	* * * pointers		1327301						
ANR	1327495	Symbol	FileTab		1327301						
ANR	1327496	Symbol	pointers [ fd ] -> file		1327301						
ANR	1327497	Symbol	* * pointers		1327301						
ANR	1327498	Symbol	f -> l_start		1327301						
ANR	1327499	Symbol	search_dup2		1327301						
ANR	1327500	Symbol	pointers		1327301						
ANR	1327501	Symbol	resume		1327301						
ANR	1327502	Symbol	f64		1327301						
ANR	1327503	Symbol	f		1327301						
ANR	1327504	Symbol	* fd		1327301						
ANR	1327505	Symbol	* * fd		1327301						
ANR	1327506	Symbol	pointers [ fd ] -> file -> fcntl		1327301						
ANR	1327507	Symbol	f -> l_len		1327301						
ANR	1327508	Symbol	* pointers		1327301						
ANR	1327509	Symbol	* f		1327301						
ANR	1327510	Symbol	* f64		1327301						
ANR	1327511	Symbol	* pointers [ fd ] -> file		1327301						
ANR	1327512	Symbol	f -> l_whence		1327301						
ANR	1327513	Symbol	FileTab -> ftruncate		1327301						
ANR	1327514	Symbol	cmd		1327301						
ANR	1327515	Symbol	dup2		1327301						
ANR	1327516	Symbol	fd		1327301						
ANR	1327517	Function	CondorFileTable :: fsync	1172:0:28338:28445							
ANR	1327518	FunctionDef	CondorFileTable :: fsync (int fd)		1327517	0					
ANR	1327519	CompoundStatement		1173:0:28375:28445	1327517	0					
ANR	1327520	IfStatement	if ( resume ( fd ) < 0 )		1327517	0					
ANR	1327521	Condition	resume ( fd ) < 0	1174:5:28382:28393	1327517	0	True				
ANR	1327522	RelationalExpression	resume ( fd ) < 0		1327517	0		<			
ANR	1327523	CallExpression	resume ( fd )		1327517	0					
ANR	1327524	Callee	resume		1327517	0					
ANR	1327525	Identifier	resume		1327517	0					
ANR	1327526	ArgumentList	fd		1327517	1					
ANR	1327527	Argument	fd		1327517	0					
ANR	1327528	Identifier	fd		1327517	0					
ANR	1327529	PrimaryExpression	0		1327517	1					
ANR	1327530	ReturnStatement	return - 1 ;	1174:20:28397:28406	1327517	1	True				
ANR	1327531	UnaryOperationExpression	- 1		1327517	0					
ANR	1327532	UnaryOperator	-		1327517	0					
ANR	1327533	PrimaryExpression	1		1327517	1					
ANR	1327534	ReturnStatement	return pointers [ fd ] -> file -> fsync ( ) ;	1175:1:28409:28443	1327517	1	True				
ANR	1327535	CallExpression	pointers [ fd ] -> file -> fsync ( )		1327517	0					
ANR	1327536	Callee	pointers [ fd ] -> file -> fsync		1327517	0					
ANR	1327537	PtrMemberAccess	pointers [ fd ] -> file -> fsync		1327517	0					
ANR	1327538	PtrMemberAccess	pointers [ fd ] -> file		1327517	0					
ANR	1327539	ArrayIndexing	pointers [ fd ]		1327517	0					
ANR	1327540	Identifier	pointers		1327517	0					
ANR	1327541	Identifier	fd		1327517	1					
ANR	1327542	Identifier	file		1327517	1					
ANR	1327543	Identifier	fsync		1327517	1					
ANR	1327544	ArgumentList			1327517	1					
ANR	1327545	ReturnType	int		1327517	1					
ANR	1327546	Identifier	CondorFileTable :: fsync		1327517	2					
ANR	1327547	ParameterList	int fd		1327517	3					
ANR	1327548	Parameter	int fd	1172:28:28366:28371	1327517	0	True				
ANR	1327549	ParameterType	int		1327517	0					
ANR	1327550	Identifier	fd		1327517	1					
ANR	1327551	CFGEntryNode	ENTRY		1327517		True				
ANR	1327552	CFGExitNode	EXIT		1327517		True				
ANR	1327553	Symbol	resume		1327517						
ANR	1327554	Symbol	* pointers [ fd ] -> file		1327517						
ANR	1327555	Symbol	* fd		1327517						
ANR	1327556	Symbol	* * fd		1327517						
ANR	1327557	Symbol	pointers [ fd ] -> file -> fsync		1327517						
ANR	1327558	Symbol	* * * fd		1327517						
ANR	1327559	Symbol	* * * pointers		1327517						
ANR	1327560	Symbol	pointers [ fd ] -> file		1327517						
ANR	1327561	Symbol	* * pointers		1327517						
ANR	1327562	Symbol	fd		1327517						
ANR	1327563	Symbol	* pointers		1327517						
ANR	1327564	Symbol	pointers		1327517						
ANR	1327565	Function	CondorFileTable :: fstat	1178:0:28448:28575							
ANR	1327566	FunctionDef	"CondorFileTable :: fstat (int fd , struct stat * buf)"		1327565	0					
ANR	1327567	CompoundStatement		1179:0:28502:28575	1327565	0					
ANR	1327568	IfStatement	if ( resume ( fd ) < 0 )		1327565	0					
ANR	1327569	Condition	resume ( fd ) < 0	1180:5:28509:28520	1327565	0	True				
ANR	1327570	RelationalExpression	resume ( fd ) < 0		1327565	0		<			
ANR	1327571	CallExpression	resume ( fd )		1327565	0					
ANR	1327572	Callee	resume		1327565	0					
ANR	1327573	Identifier	resume		1327565	0					
ANR	1327574	ArgumentList	fd		1327565	1					
ANR	1327575	Argument	fd		1327565	0					
ANR	1327576	Identifier	fd		1327565	0					
ANR	1327577	PrimaryExpression	0		1327565	1					
ANR	1327578	ReturnStatement	return - 1 ;	1180:20:28524:28533	1327565	1	True				
ANR	1327579	UnaryOperationExpression	- 1		1327565	0					
ANR	1327580	UnaryOperator	-		1327565	0					
ANR	1327581	PrimaryExpression	1		1327565	1					
ANR	1327582	ReturnStatement	return pointers [ fd ] -> file -> fstat ( buf ) ;	1181:1:28536:28573	1327565	1	True				
ANR	1327583	CallExpression	pointers [ fd ] -> file -> fstat ( buf )		1327565	0					
ANR	1327584	Callee	pointers [ fd ] -> file -> fstat		1327565	0					
ANR	1327585	PtrMemberAccess	pointers [ fd ] -> file -> fstat		1327565	0					
ANR	1327586	PtrMemberAccess	pointers [ fd ] -> file		1327565	0					
ANR	1327587	ArrayIndexing	pointers [ fd ]		1327565	0					
ANR	1327588	Identifier	pointers		1327565	0					
ANR	1327589	Identifier	fd		1327565	1					
ANR	1327590	Identifier	file		1327565	1					
ANR	1327591	Identifier	fstat		1327565	1					
ANR	1327592	ArgumentList	buf		1327565	1					
ANR	1327593	Argument	buf		1327565	0					
ANR	1327594	Identifier	buf		1327565	0					
ANR	1327595	ReturnType	int		1327565	1					
ANR	1327596	Identifier	CondorFileTable :: fstat		1327565	2					
ANR	1327597	ParameterList	"int fd , struct stat * buf"		1327565	3					
ANR	1327598	Parameter	int fd	1178:28:28476:28481	1327565	0	True				
ANR	1327599	ParameterType	int		1327565	0					
ANR	1327600	Identifier	fd		1327565	1					
ANR	1327601	Parameter	struct stat * buf	1178:36:28484:28499	1327565	1	True				
ANR	1327602	ParameterType	struct stat *		1327565	0					
ANR	1327603	Identifier	buf		1327565	1					
ANR	1327604	CFGEntryNode	ENTRY		1327565		True				
ANR	1327605	CFGExitNode	EXIT		1327565		True				
ANR	1327606	Symbol	resume		1327565						
ANR	1327607	Symbol	pointers [ fd ] -> file -> fstat		1327565						
ANR	1327608	Symbol	* fd		1327565						
ANR	1327609	Symbol	* * fd		1327565						
ANR	1327610	Symbol	* pointers		1327565						
ANR	1327611	Symbol	buf		1327565						
ANR	1327612	Symbol	* pointers [ fd ] -> file		1327565						
ANR	1327613	Symbol	* * * pointers		1327565						
ANR	1327614	Symbol	* * * fd		1327565						
ANR	1327615	Symbol	pointers [ fd ] -> file		1327565						
ANR	1327616	Symbol	* * pointers		1327565						
ANR	1327617	Symbol	fd		1327565						
ANR	1327618	Symbol	pointers		1327565						
ANR	1327619	Function	CondorFileTable :: stat	1184:0:28578:29760							
ANR	1327620	FunctionDef	"CondorFileTable :: stat (const char * name , struct stat * buf)"		1327619	0					
ANR	1327621	CompoundStatement		1185:0:28641:29760	1327619	0					
ANR	1327622	IdentifierDeclStatement	int fd ;	1186:1:28644:28650	1327619	0	True				
ANR	1327623	IdentifierDecl	fd		1327619	0					
ANR	1327624	IdentifierDeclType	int		1327619	0					
ANR	1327625	Identifier	fd		1327619	1					
ANR	1327626	IdentifierDeclStatement	"int scm , oscm ;"	1187:1:28653:28666	1327619	1	True				
ANR	1327627	IdentifierDecl	scm		1327619	0					
ANR	1327628	IdentifierDeclType	int		1327619	0					
ANR	1327629	Identifier	scm		1327619	1					
ANR	1327630	IdentifierDecl	oscm		1327619	1					
ANR	1327631	IdentifierDeclType	int		1327619	0					
ANR	1327632	Identifier	oscm		1327619	1					
ANR	1327633	IdentifierDeclStatement	int ret ;	1188:1:28669:28676	1327619	2	True				
ANR	1327634	IdentifierDecl	ret		1327619	0					
ANR	1327635	IdentifierDeclType	int		1327619	0					
ANR	1327636	Identifier	ret		1327619	1					
ANR	1327637	IdentifierDeclStatement	int do_local ;	1189:1:28679:28691	1327619	3	True				
ANR	1327638	IdentifierDecl	do_local		1327619	0					
ANR	1327639	IdentifierDeclType	int		1327619	0					
ANR	1327640	Identifier	do_local		1327619	1					
ANR	1327641	ExpressionStatement	fd = find_logical_name ( name )	1194:1:28881:28911	1327619	4	True				
ANR	1327642	AssignmentExpression	fd = find_logical_name ( name )		1327619	0		=			
ANR	1327643	Identifier	fd		1327619	0					
ANR	1327644	CallExpression	find_logical_name ( name )		1327619	1					
ANR	1327645	Callee	find_logical_name		1327619	0					
ANR	1327646	Identifier	find_logical_name		1327619	0					
ANR	1327647	ArgumentList	name		1327619	1					
ANR	1327648	Argument	name		1327619	0					
ANR	1327649	Identifier	name		1327619	0					
ANR	1327650	IfStatement	if ( fd == - 1 )		1327619	5					
ANR	1327651	Condition	fd == - 1	1195:5:28918:28925	1327619	0	True				
ANR	1327652	EqualityExpression	fd == - 1		1327619	0		==			
ANR	1327653	Identifier	fd		1327619	0					
ANR	1327654	UnaryOperationExpression	- 1		1327619	1					
ANR	1327655	UnaryOperator	-		1327619	0					
ANR	1327656	PrimaryExpression	1		1327619	1					
ANR	1327657	CompoundStatement		16:2:389:409	1327619	1					
ANR	1327658	ExpressionStatement	oscm = scm = GetSyscallMode ( )	1197:2:28933:28962	1327619	0	True				
ANR	1327659	AssignmentExpression	oscm = scm = GetSyscallMode ( )		1327619	0		=			
ANR	1327660	Identifier	oscm		1327619	0					
ANR	1327661	AssignmentExpression	scm = GetSyscallMode ( )		1327619	1		=			
ANR	1327662	Identifier	scm		1327619	0					
ANR	1327663	CallExpression	GetSyscallMode ( )		1327619	1					
ANR	1327664	Callee	GetSyscallMode		1327619	0					
ANR	1327665	Identifier	GetSyscallMode		1327619	0					
ANR	1327666	ArgumentList			1327619	1					
ANR	1327667	IdentifierDeclStatement	char * newname = NULL ;	1200:2:29031:29051	1327619	1	True				
ANR	1327668	IdentifierDecl	* newname = NULL		1327619	0					
ANR	1327669	IdentifierDeclType	char *		1327619	0					
ANR	1327670	Identifier	newname		1327619	1					
ANR	1327671	AssignmentExpression	* newname = NULL		1327619	2		=			
ANR	1327672	Identifier	NULL		1327619	0					
ANR	1327673	Identifier	NULL		1327619	1					
ANR	1327674	ExpressionStatement	"do_local = _condor_is_file_name_local ( name , & newname )"	1201:2:29055:29110	1327619	2	True				
ANR	1327675	AssignmentExpression	"do_local = _condor_is_file_name_local ( name , & newname )"		1327619	0		=			
ANR	1327676	Identifier	do_local		1327619	0					
ANR	1327677	CallExpression	"_condor_is_file_name_local ( name , & newname )"		1327619	1					
ANR	1327678	Callee	_condor_is_file_name_local		1327619	0					
ANR	1327679	Identifier	_condor_is_file_name_local		1327619	0					
ANR	1327680	ArgumentList	name		1327619	1					
ANR	1327681	Argument	name		1327619	0					
ANR	1327682	Identifier	name		1327619	0					
ANR	1327683	Argument	& newname		1327619	1					
ANR	1327684	UnaryOperationExpression	& newname		1327619	0					
ANR	1327685	UnaryOperator	&		1327619	0					
ANR	1327686	Identifier	newname		1327619	1					
ANR	1327687	IfStatement	if ( LocalSysCalls ( ) || do_local )		1327619	3					
ANR	1327688	Condition	LocalSysCalls ( ) || do_local	1202:6:29118:29144	1327619	0	True				
ANR	1327689	OrExpression	LocalSysCalls ( ) || do_local		1327619	0		||			
ANR	1327690	CallExpression	LocalSysCalls ( )		1327619	0					
ANR	1327691	Callee	LocalSysCalls		1327619	0					
ANR	1327692	Identifier	LocalSysCalls		1327619	0					
ANR	1327693	ArgumentList			1327619	1					
ANR	1327694	Identifier	do_local		1327619	1					
ANR	1327695	CompoundStatement		18:35:505:505	1327619	1					
ANR	1327696	ExpressionStatement	scm |= SYS_LOCAL	1203:3:29152:29168	1327619	0	True				
ANR	1327697	AssignmentExpression	scm |= SYS_LOCAL		1327619	0		|=			
ANR	1327698	Identifier	scm		1327619	0					
ANR	1327699	Identifier	SYS_LOCAL		1327619	1					
ANR	1327700	ExpressionStatement	scm &= ~ ( SYS_REMOTE )	1204:3:29198:29218	1327619	1	True				
ANR	1327701	AssignmentExpression	scm &= ~ ( SYS_REMOTE )		1327619	0		&=			
ANR	1327702	Identifier	scm		1327619	0					
ANR	1327703	UnaryOperationExpression	~ ( SYS_REMOTE )		1327619	1					
ANR	1327704	UnaryOperator	~		1327619	0					
ANR	1327705	Identifier	SYS_REMOTE		1327619	1					
ANR	1327706	ElseStatement	else		1327619	0					
ANR	1327707	CompoundStatement		22:7:615:615	1327619	0					
ANR	1327708	ExpressionStatement	scm |= SYS_REMOTE	1207:3:29262:29279	1327619	0	True				
ANR	1327709	AssignmentExpression	scm |= SYS_REMOTE		1327619	0		|=			
ANR	1327710	Identifier	scm		1327619	0					
ANR	1327711	Identifier	SYS_REMOTE		1327619	1					
ANR	1327712	ExpressionStatement	scm &= ~ ( SYS_LOCAL )	1208:3:29310:29329	1327619	1	True				
ANR	1327713	AssignmentExpression	scm &= ~ ( SYS_LOCAL )		1327619	0		&=			
ANR	1327714	Identifier	scm		1327619	0					
ANR	1327715	UnaryOperationExpression	~ ( SYS_LOCAL )		1327619	1					
ANR	1327716	UnaryOperator	~		1327619	0					
ANR	1327717	Identifier	SYS_LOCAL		1327619	1					
ANR	1327718	ExpressionStatement	scm |= SYS_UNMAPPED	1212:2:29437:29456	1327619	4	True				
ANR	1327719	AssignmentExpression	scm |= SYS_UNMAPPED		1327619	0		|=			
ANR	1327720	Identifier	scm		1327619	0					
ANR	1327721	Identifier	SYS_UNMAPPED		1327619	1					
ANR	1327722	ExpressionStatement	scm &= ~ ( SYS_MAPPED )	1213:2:29487:29507	1327619	5	True				
ANR	1327723	AssignmentExpression	scm &= ~ ( SYS_MAPPED )		1327619	0		&=			
ANR	1327724	Identifier	scm		1327619	0					
ANR	1327725	UnaryOperationExpression	~ ( SYS_MAPPED )		1327619	1					
ANR	1327726	UnaryOperator	~		1327619	0					
ANR	1327727	Identifier	SYS_MAPPED		1327619	1					
ANR	1327728	ExpressionStatement	SetSyscalls ( scm )	1216:2:29596:29612	1327619	6	True				
ANR	1327729	CallExpression	SetSyscalls ( scm )		1327619	0					
ANR	1327730	Callee	SetSyscalls		1327619	0					
ANR	1327731	Identifier	SetSyscalls		1327619	0					
ANR	1327732	ArgumentList	scm		1327619	1					
ANR	1327733	Argument	scm		1327619	0					
ANR	1327734	Identifier	scm		1327619	0					
ANR	1327735	Statement	ret	1217:2:29616:29618	1327619	7	True				
ANR	1327736	Statement	=	1217:6:29620:29620	1327619	8	True				
ANR	1327737	Statement	::	1217:8:29622:29623	1327619	9	True				
ANR	1327738	ExpressionStatement	"stat ( newname , buf )"	1217:10:29624:29642	1327619	10	True				
ANR	1327739	CallExpression	"stat ( newname , buf )"		1327619	0					
ANR	1327740	Callee	stat		1327619	0					
ANR	1327741	Identifier	stat		1327619	0					
ANR	1327742	ArgumentList	newname		1327619	1					
ANR	1327743	Argument	newname		1327619	0					
ANR	1327744	Identifier	newname		1327619	0					
ANR	1327745	Argument	buf		1327619	1					
ANR	1327746	Identifier	buf		1327619	0					
ANR	1327747	ExpressionStatement	SetSyscalls ( oscm )	1218:2:29646:29663	1327619	11	True				
ANR	1327748	CallExpression	SetSyscalls ( oscm )		1327619	0					
ANR	1327749	Callee	SetSyscalls		1327619	0					
ANR	1327750	Identifier	SetSyscalls		1327619	0					
ANR	1327751	ArgumentList	oscm		1327619	1					
ANR	1327752	Argument	oscm		1327619	0					
ANR	1327753	Identifier	oscm		1327619	0					
ANR	1327754	ExpressionStatement	free ( newname )	1220:2:29701:29716	1327619	12	True				
ANR	1327755	CallExpression	free ( newname )		1327619	0					
ANR	1327756	Callee	free		1327619	0					
ANR	1327757	Identifier	free		1327619	0					
ANR	1327758	ArgumentList	newname		1327619	1					
ANR	1327759	Argument	newname		1327619	0					
ANR	1327760	Identifier	newname		1327619	0					
ANR	1327761	ReturnStatement	return ret ;	1222:2:29721:29731	1327619	13	True				
ANR	1327762	Identifier	ret		1327619	0					
ANR	1327763	ReturnStatement	"return fstat ( fd , buf ) ;"	1224:1:29737:29758	1327619	6	True				
ANR	1327764	CallExpression	"fstat ( fd , buf )"		1327619	0					
ANR	1327765	Callee	fstat		1327619	0					
ANR	1327766	Identifier	fstat		1327619	0					
ANR	1327767	ArgumentList	fd		1327619	1					
ANR	1327768	Argument	fd		1327619	0					
ANR	1327769	Identifier	fd		1327619	0					
ANR	1327770	Argument	buf		1327619	1					
ANR	1327771	Identifier	buf		1327619	0					
ANR	1327772	ReturnType	int		1327619	1					
ANR	1327773	Identifier	CondorFileTable :: stat		1327619	2					
ANR	1327774	ParameterList	"const char * name , struct stat * buf"		1327619	3					
ANR	1327775	Parameter	const char * name	1184:27:28605:28620	1327619	0	True				
ANR	1327776	ParameterType	const char *		1327619	0					
ANR	1327777	Identifier	name		1327619	1					
ANR	1327778	Parameter	struct stat * buf	1184:45:28623:28638	1327619	1	True				
ANR	1327779	ParameterType	struct stat *		1327619	0					
ANR	1327780	Identifier	buf		1327619	1					
ANR	1327781	CFGEntryNode	ENTRY		1327619		True				
ANR	1327782	CFGExitNode	EXIT		1327619		True				
ANR	1327783	Symbol	ret		1327619						
ANR	1327784	Symbol	NULL		1327619						
ANR	1327785	Symbol	& newname		1327619						
ANR	1327786	Symbol	_condor_is_file_name_local		1327619						
ANR	1327787	Symbol	SYS_UNMAPPED		1327619						
ANR	1327788	Symbol	find_logical_name		1327619						
ANR	1327789	Symbol	fstat		1327619						
ANR	1327790	Symbol	newname		1327619						
ANR	1327791	Symbol	LocalSysCalls		1327619						
ANR	1327792	Symbol	SYS_MAPPED		1327619						
ANR	1327793	Symbol	SYS_REMOTE		1327619						
ANR	1327794	Symbol	buf		1327619						
ANR	1327795	Symbol	SYS_LOCAL		1327619						
ANR	1327796	Symbol	name		1327619						
ANR	1327797	Symbol	GetSyscallMode		1327619						
ANR	1327798	Symbol	oscm		1327619						
ANR	1327799	Symbol	scm		1327619						
ANR	1327800	Symbol	do_local		1327619						
ANR	1327801	Symbol	fd		1327619						
ANR	1327802	Function	CondorFileTable :: lstat	1227:0:29763:30890							
ANR	1327803	FunctionDef	"CondorFileTable :: lstat (const char * name , struct stat * buf)"		1327802	0					
ANR	1327804	CompoundStatement		1228:0:29827:30890	1327802	0					
ANR	1327805	IdentifierDeclStatement	int fd ;	1229:1:29830:29836	1327802	0	True				
ANR	1327806	IdentifierDecl	fd		1327802	0					
ANR	1327807	IdentifierDeclType	int		1327802	0					
ANR	1327808	Identifier	fd		1327802	1					
ANR	1327809	IdentifierDeclStatement	"int scm , oscm ;"	1230:1:29839:29852	1327802	1	True				
ANR	1327810	IdentifierDecl	scm		1327802	0					
ANR	1327811	IdentifierDeclType	int		1327802	0					
ANR	1327812	Identifier	scm		1327802	1					
ANR	1327813	IdentifierDecl	oscm		1327802	1					
ANR	1327814	IdentifierDeclType	int		1327802	0					
ANR	1327815	Identifier	oscm		1327802	1					
ANR	1327816	IdentifierDeclStatement	int ret ;	1231:1:29855:29862	1327802	2	True				
ANR	1327817	IdentifierDecl	ret		1327802	0					
ANR	1327818	IdentifierDeclType	int		1327802	0					
ANR	1327819	Identifier	ret		1327802	1					
ANR	1327820	IdentifierDeclStatement	int do_local ;	1232:1:29865:29877	1327802	3	True				
ANR	1327821	IdentifierDecl	do_local		1327802	0					
ANR	1327822	IdentifierDeclType	int		1327802	0					
ANR	1327823	Identifier	do_local		1327802	1					
ANR	1327824	ExpressionStatement	fd = find_logical_name ( name )	1237:1:30068:30098	1327802	4	True				
ANR	1327825	AssignmentExpression	fd = find_logical_name ( name )		1327802	0		=			
ANR	1327826	Identifier	fd		1327802	0					
ANR	1327827	CallExpression	find_logical_name ( name )		1327802	1					
ANR	1327828	Callee	find_logical_name		1327802	0					
ANR	1327829	Identifier	find_logical_name		1327802	0					
ANR	1327830	ArgumentList	name		1327802	1					
ANR	1327831	Argument	name		1327802	0					
ANR	1327832	Identifier	name		1327802	0					
ANR	1327833	IfStatement	if ( fd == - 1 )		1327802	5					
ANR	1327834	Condition	fd == - 1	1238:5:30105:30112	1327802	0	True				
ANR	1327835	EqualityExpression	fd == - 1		1327802	0		==			
ANR	1327836	Identifier	fd		1327802	0					
ANR	1327837	UnaryOperationExpression	- 1		1327802	1					
ANR	1327838	UnaryOperator	-		1327802	0					
ANR	1327839	PrimaryExpression	1		1327802	1					
ANR	1327840	CompoundStatement		16:2:390:410	1327802	1					
ANR	1327841	ExpressionStatement	oscm = scm = GetSyscallMode ( )	1240:2:30120:30149	1327802	0	True				
ANR	1327842	AssignmentExpression	oscm = scm = GetSyscallMode ( )		1327802	0		=			
ANR	1327843	Identifier	oscm		1327802	0					
ANR	1327844	AssignmentExpression	scm = GetSyscallMode ( )		1327802	1		=			
ANR	1327845	Identifier	scm		1327802	0					
ANR	1327846	CallExpression	GetSyscallMode ( )		1327802	1					
ANR	1327847	Callee	GetSyscallMode		1327802	0					
ANR	1327848	Identifier	GetSyscallMode		1327802	0					
ANR	1327849	ArgumentList			1327802	1					
ANR	1327850	IdentifierDeclStatement	char * newname = NULL ;	1243:2:30218:30238	1327802	1	True				
ANR	1327851	IdentifierDecl	* newname = NULL		1327802	0					
ANR	1327852	IdentifierDeclType	char *		1327802	0					
ANR	1327853	Identifier	newname		1327802	1					
ANR	1327854	AssignmentExpression	* newname = NULL		1327802	2		=			
ANR	1327855	Identifier	NULL		1327802	0					
ANR	1327856	Identifier	NULL		1327802	1					
ANR	1327857	ExpressionStatement	"do_local = _condor_is_file_name_local ( name , & newname )"	1244:2:30242:30297	1327802	2	True				
ANR	1327858	AssignmentExpression	"do_local = _condor_is_file_name_local ( name , & newname )"		1327802	0		=			
ANR	1327859	Identifier	do_local		1327802	0					
ANR	1327860	CallExpression	"_condor_is_file_name_local ( name , & newname )"		1327802	1					
ANR	1327861	Callee	_condor_is_file_name_local		1327802	0					
ANR	1327862	Identifier	_condor_is_file_name_local		1327802	0					
ANR	1327863	ArgumentList	name		1327802	1					
ANR	1327864	Argument	name		1327802	0					
ANR	1327865	Identifier	name		1327802	0					
ANR	1327866	Argument	& newname		1327802	1					
ANR	1327867	UnaryOperationExpression	& newname		1327802	0					
ANR	1327868	UnaryOperator	&		1327802	0					
ANR	1327869	Identifier	newname		1327802	1					
ANR	1327870	IfStatement	if ( LocalSysCalls ( ) || do_local )		1327802	3					
ANR	1327871	Condition	LocalSysCalls ( ) || do_local	1245:6:30305:30331	1327802	0	True				
ANR	1327872	OrExpression	LocalSysCalls ( ) || do_local		1327802	0		||			
ANR	1327873	CallExpression	LocalSysCalls ( )		1327802	0					
ANR	1327874	Callee	LocalSysCalls		1327802	0					
ANR	1327875	Identifier	LocalSysCalls		1327802	0					
ANR	1327876	ArgumentList			1327802	1					
ANR	1327877	Identifier	do_local		1327802	1					
ANR	1327878	CompoundStatement		18:35:506:506	1327802	1					
ANR	1327879	ExpressionStatement	scm |= SYS_LOCAL	1246:3:30339:30355	1327802	0	True				
ANR	1327880	AssignmentExpression	scm |= SYS_LOCAL		1327802	0		|=			
ANR	1327881	Identifier	scm		1327802	0					
ANR	1327882	Identifier	SYS_LOCAL		1327802	1					
ANR	1327883	ExpressionStatement	scm &= ~ ( SYS_REMOTE )	1247:3:30385:30405	1327802	1	True				
ANR	1327884	AssignmentExpression	scm &= ~ ( SYS_REMOTE )		1327802	0		&=			
ANR	1327885	Identifier	scm		1327802	0					
ANR	1327886	UnaryOperationExpression	~ ( SYS_REMOTE )		1327802	1					
ANR	1327887	UnaryOperator	~		1327802	0					
ANR	1327888	Identifier	SYS_REMOTE		1327802	1					
ANR	1327889	ElseStatement	else		1327802	0					
ANR	1327890	CompoundStatement		22:7:616:616	1327802	0					
ANR	1327891	ExpressionStatement	scm |= SYS_REMOTE	1250:3:30449:30466	1327802	0	True				
ANR	1327892	AssignmentExpression	scm |= SYS_REMOTE		1327802	0		|=			
ANR	1327893	Identifier	scm		1327802	0					
ANR	1327894	Identifier	SYS_REMOTE		1327802	1					
ANR	1327895	ExpressionStatement	scm &= ~ ( SYS_LOCAL )	1251:3:30497:30516	1327802	1	True				
ANR	1327896	AssignmentExpression	scm &= ~ ( SYS_LOCAL )		1327802	0		&=			
ANR	1327897	Identifier	scm		1327802	0					
ANR	1327898	UnaryOperationExpression	~ ( SYS_LOCAL )		1327802	1					
ANR	1327899	UnaryOperator	~		1327802	0					
ANR	1327900	Identifier	SYS_LOCAL		1327802	1					
ANR	1327901	ExpressionStatement	scm |= SYS_UNMAPPED	1255:2:30624:30643	1327802	4	True				
ANR	1327902	AssignmentExpression	scm |= SYS_UNMAPPED		1327802	0		|=			
ANR	1327903	Identifier	scm		1327802	0					
ANR	1327904	Identifier	SYS_UNMAPPED		1327802	1					
ANR	1327905	ExpressionStatement	scm &= ~ ( SYS_MAPPED )	1256:2:30674:30694	1327802	5	True				
ANR	1327906	AssignmentExpression	scm &= ~ ( SYS_MAPPED )		1327802	0		&=			
ANR	1327907	Identifier	scm		1327802	0					
ANR	1327908	UnaryOperationExpression	~ ( SYS_MAPPED )		1327802	1					
ANR	1327909	UnaryOperator	~		1327802	0					
ANR	1327910	Identifier	SYS_MAPPED		1327802	1					
ANR	1327911	ExpressionStatement	SetSyscalls ( scm )	1258:2:30725:30741	1327802	6	True				
ANR	1327912	CallExpression	SetSyscalls ( scm )		1327802	0					
ANR	1327913	Callee	SetSyscalls		1327802	0					
ANR	1327914	Identifier	SetSyscalls		1327802	0					
ANR	1327915	ArgumentList	scm		1327802	1					
ANR	1327916	Argument	scm		1327802	0					
ANR	1327917	Identifier	scm		1327802	0					
ANR	1327918	Statement	ret	1259:2:30745:30747	1327802	7	True				
ANR	1327919	Statement	=	1259:6:30749:30749	1327802	8	True				
ANR	1327920	Statement	::	1259:8:30751:30752	1327802	9	True				
ANR	1327921	ExpressionStatement	"lstat ( newname , buf )"	1259:10:30753:30772	1327802	10	True				
ANR	1327922	CallExpression	"lstat ( newname , buf )"		1327802	0					
ANR	1327923	Callee	lstat		1327802	0					
ANR	1327924	Identifier	lstat		1327802	0					
ANR	1327925	ArgumentList	newname		1327802	1					
ANR	1327926	Argument	newname		1327802	0					
ANR	1327927	Identifier	newname		1327802	0					
ANR	1327928	Argument	buf		1327802	1					
ANR	1327929	Identifier	buf		1327802	0					
ANR	1327930	ExpressionStatement	SetSyscalls ( oscm )	1260:2:30776:30793	1327802	11	True				
ANR	1327931	CallExpression	SetSyscalls ( oscm )		1327802	0					
ANR	1327932	Callee	SetSyscalls		1327802	0					
ANR	1327933	Identifier	SetSyscalls		1327802	0					
ANR	1327934	ArgumentList	oscm		1327802	1					
ANR	1327935	Argument	oscm		1327802	0					
ANR	1327936	Identifier	oscm		1327802	0					
ANR	1327937	ExpressionStatement	free ( newname )	1262:2:30831:30846	1327802	12	True				
ANR	1327938	CallExpression	free ( newname )		1327802	0					
ANR	1327939	Callee	free		1327802	0					
ANR	1327940	Identifier	free		1327802	0					
ANR	1327941	ArgumentList	newname		1327802	1					
ANR	1327942	Argument	newname		1327802	0					
ANR	1327943	Identifier	newname		1327802	0					
ANR	1327944	ReturnStatement	return ret ;	1264:2:30851:30861	1327802	13	True				
ANR	1327945	Identifier	ret		1327802	0					
ANR	1327946	ReturnStatement	"return fstat ( fd , buf ) ;"	1266:1:30867:30888	1327802	6	True				
ANR	1327947	CallExpression	"fstat ( fd , buf )"		1327802	0					
ANR	1327948	Callee	fstat		1327802	0					
ANR	1327949	Identifier	fstat		1327802	0					
ANR	1327950	ArgumentList	fd		1327802	1					
ANR	1327951	Argument	fd		1327802	0					
ANR	1327952	Identifier	fd		1327802	0					
ANR	1327953	Argument	buf		1327802	1					
ANR	1327954	Identifier	buf		1327802	0					
ANR	1327955	ReturnType	int		1327802	1					
ANR	1327956	Identifier	CondorFileTable :: lstat		1327802	2					
ANR	1327957	ParameterList	"const char * name , struct stat * buf"		1327802	3					
ANR	1327958	Parameter	const char * name	1227:28:29791:29806	1327802	0	True				
ANR	1327959	ParameterType	const char *		1327802	0					
ANR	1327960	Identifier	name		1327802	1					
ANR	1327961	Parameter	struct stat * buf	1227:46:29809:29824	1327802	1	True				
ANR	1327962	ParameterType	struct stat *		1327802	0					
ANR	1327963	Identifier	buf		1327802	1					
ANR	1327964	CFGEntryNode	ENTRY		1327802		True				
ANR	1327965	CFGExitNode	EXIT		1327802		True				
ANR	1327966	Symbol	ret		1327802						
ANR	1327967	Symbol	NULL		1327802						
ANR	1327968	Symbol	& newname		1327802						
ANR	1327969	Symbol	_condor_is_file_name_local		1327802						
ANR	1327970	Symbol	SYS_UNMAPPED		1327802						
ANR	1327971	Symbol	find_logical_name		1327802						
ANR	1327972	Symbol	fstat		1327802						
ANR	1327973	Symbol	newname		1327802						
ANR	1327974	Symbol	LocalSysCalls		1327802						
ANR	1327975	Symbol	SYS_MAPPED		1327802						
ANR	1327976	Symbol	SYS_REMOTE		1327802						
ANR	1327977	Symbol	buf		1327802						
ANR	1327978	Symbol	SYS_LOCAL		1327802						
ANR	1327979	Symbol	name		1327802						
ANR	1327980	Symbol	GetSyscallMode		1327802						
ANR	1327981	Symbol	oscm		1327802						
ANR	1327982	Symbol	scm		1327802						
ANR	1327983	Symbol	do_local		1327802						
ANR	1327984	Symbol	fd		1327802						
ANR	1327985	Function	CondorFileTable :: poll	1273:0:31048:31813							
ANR	1327986	FunctionDef	"CondorFileTable :: poll (struct pollfd * fds , int nfds , int timeout)"		1327985	0					
ANR	1327987	CompoundStatement		1274:0:31119:31813	1327985	0					
ANR	1327988	IdentifierDeclStatement	struct pollfd * realfds ;	1275:1:31122:31144	1327985	0	True				
ANR	1327989	IdentifierDecl	* realfds		1327985	0					
ANR	1327990	IdentifierDeclType	struct pollfd *		1327985	0					
ANR	1327991	Identifier	realfds		1327985	1					
ANR	1327992	ExpressionStatement	realfds = ( struct pollfd * ) malloc ( sizeof ( struct pollfd ) * nfds )	1277:1:31148:31212	1327985	1	True				
ANR	1327993	AssignmentExpression	realfds = ( struct pollfd * ) malloc ( sizeof ( struct pollfd ) * nfds )		1327985	0		=			
ANR	1327994	Identifier	realfds		1327985	0					
ANR	1327995	CastExpression	( struct pollfd * ) malloc ( sizeof ( struct pollfd ) * nfds )		1327985	1					
ANR	1327996	CastTarget	struct pollfd *		1327985	0					
ANR	1327997	CallExpression	malloc ( sizeof ( struct pollfd ) * nfds )		1327985	1					
ANR	1327998	Callee	malloc		1327985	0					
ANR	1327999	Identifier	malloc		1327985	0					
ANR	1328000	ArgumentList	sizeof ( struct pollfd ) * nfds		1327985	1					
ANR	1328001	Argument	sizeof ( struct pollfd ) * nfds		1327985	0					
ANR	1328002	MultiplicativeExpression	sizeof ( struct pollfd ) * nfds		1327985	0		*			
ANR	1328003	SizeofExpression	sizeof ( struct pollfd )		1327985	0					
ANR	1328004	Sizeof	sizeof		1327985	0					
ANR	1328005	SizeofOperand	struct pollfd		1327985	1					
ANR	1328006	Identifier	nfds		1327985	1					
ANR	1328007	IfStatement	if ( ! realfds )		1327985	2					
ANR	1328008	Condition	! realfds	1278:4:31218:31225	1327985	0	True				
ANR	1328009	UnaryOperationExpression	! realfds		1327985	0					
ANR	1328010	UnaryOperator	!		1327985	0					
ANR	1328011	Identifier	realfds		1327985	1					
ANR	1328012	CompoundStatement		5:14:108:108	1327985	1					
ANR	1328013	ExpressionStatement	errno = ENOMEM	1279:2:31232:31246	1327985	0	True				
ANR	1328014	AssignmentExpression	errno = ENOMEM		1327985	0		=			
ANR	1328015	Identifier	errno		1327985	0					
ANR	1328016	Identifier	ENOMEM		1327985	1					
ANR	1328017	ReturnStatement	return - 1 ;	1280:2:31250:31259	1327985	1	True				
ANR	1328018	UnaryOperationExpression	- 1		1327985	0					
ANR	1328019	UnaryOperator	-		1327985	0					
ANR	1328020	PrimaryExpression	1		1327985	1					
ANR	1328021	ForStatement	for ( int i = 0 ; i < nfds ; i ++ )		1327985	3					
ANR	1328022	ForInit	int i = 0 ;	1283:6:31271:31278	1327985	0	True				
ANR	1328023	IdentifierDeclStatement	int i = 0 ;		1327985	0					
ANR	1328024	IdentifierDecl	i = 0		1327985	0					
ANR	1328025	IdentifierDeclType	int		1327985	0					
ANR	1328026	Identifier	i		1327985	1					
ANR	1328027	AssignmentExpression	i = 0		1327985	2		=			
ANR	1328028	Identifier	i		1327985	0					
ANR	1328029	PrimaryExpression	0		1327985	1					
ANR	1328030	Condition	i < nfds	1283:15:31280:31285	1327985	1	True				
ANR	1328031	RelationalExpression	i < nfds		1327985	0		<			
ANR	1328032	Identifier	i		1327985	0					
ANR	1328033	Identifier	nfds		1327985	1					
ANR	1328034	PostIncDecOperationExpression	i ++	1283:23:31288:31290	1327985	2	True				
ANR	1328035	Identifier	i		1327985	0					
ANR	1328036	IncDec	++		1327985	1					
ANR	1328037	CompoundStatement		10:29:174:174	1327985	3					
ANR	1328038	IfStatement	if ( _condor_is_fd_local ( fds [ i ] . fd ) )		1327985	0					
ANR	1328039	Condition	_condor_is_fd_local ( fds [ i ] . fd )	1284:5:31301:31330	1327985	0	True				
ANR	1328040	CallExpression	_condor_is_fd_local ( fds [ i ] . fd )		1327985	0					
ANR	1328041	Callee	_condor_is_fd_local		1327985	0					
ANR	1328042	Identifier	_condor_is_fd_local		1327985	0					
ANR	1328043	ArgumentList	fds [ i ] . fd		1327985	1					
ANR	1328044	Argument	fds [ i ] . fd		1327985	0					
ANR	1328045	MemberAccess	fds [ i ] . fd		1327985	0					
ANR	1328046	ArrayIndexing	fds [ i ]		1327985	0					
ANR	1328047	Identifier	fds		1327985	0					
ANR	1328048	Identifier	i		1327985	1					
ANR	1328049	Identifier	fd		1327985	1					
ANR	1328050	CompoundStatement		11:37:213:213	1327985	1					
ANR	1328051	ExpressionStatement	realfds [ i ] . fd = _condor_get_unmapped_fd ( fds [ i ] . fd )	1285:3:31338:31388	1327985	0	True				
ANR	1328052	AssignmentExpression	realfds [ i ] . fd = _condor_get_unmapped_fd ( fds [ i ] . fd )		1327985	0		=			
ANR	1328053	MemberAccess	realfds [ i ] . fd		1327985	0					
ANR	1328054	ArrayIndexing	realfds [ i ]		1327985	0					
ANR	1328055	Identifier	realfds		1327985	0					
ANR	1328056	Identifier	i		1327985	1					
ANR	1328057	Identifier	fd		1327985	1					
ANR	1328058	CallExpression	_condor_get_unmapped_fd ( fds [ i ] . fd )		1327985	1					
ANR	1328059	Callee	_condor_get_unmapped_fd		1327985	0					
ANR	1328060	Identifier	_condor_get_unmapped_fd		1327985	0					
ANR	1328061	ArgumentList	fds [ i ] . fd		1327985	1					
ANR	1328062	Argument	fds [ i ] . fd		1327985	0					
ANR	1328063	MemberAccess	fds [ i ] . fd		1327985	0					
ANR	1328064	ArrayIndexing	fds [ i ]		1327985	0					
ANR	1328065	Identifier	fds		1327985	0					
ANR	1328066	Identifier	i		1327985	1					
ANR	1328067	Identifier	fd		1327985	1					
ANR	1328068	ExpressionStatement	realfds [ i ] . events = fds [ i ] . events	1286:3:31393:31426	1327985	1	True				
ANR	1328069	AssignmentExpression	realfds [ i ] . events = fds [ i ] . events		1327985	0		=			
ANR	1328070	MemberAccess	realfds [ i ] . events		1327985	0					
ANR	1328071	ArrayIndexing	realfds [ i ]		1327985	0					
ANR	1328072	Identifier	realfds		1327985	0					
ANR	1328073	Identifier	i		1327985	1					
ANR	1328074	Identifier	events		1327985	1					
ANR	1328075	MemberAccess	fds [ i ] . events		1327985	1					
ANR	1328076	ArrayIndexing	fds [ i ]		1327985	0					
ANR	1328077	Identifier	fds		1327985	0					
ANR	1328078	Identifier	i		1327985	1					
ANR	1328079	Identifier	events		1327985	1					
ANR	1328080	ElseStatement	else		1327985	0					
ANR	1328081	CompoundStatement		14:9:317:317	1327985	0					
ANR	1328082	ExpressionStatement	"_condor_warning ( CONDOR_WARNING_KIND_UNSUP , ""poll() is not supported for remote files"" )"	1288:3:31442:31527	1327985	0	True				
ANR	1328083	CallExpression	"_condor_warning ( CONDOR_WARNING_KIND_UNSUP , ""poll() is not supported for remote files"" )"		1327985	0					
ANR	1328084	Callee	_condor_warning		1327985	0					
ANR	1328085	Identifier	_condor_warning		1327985	0					
ANR	1328086	ArgumentList	CONDOR_WARNING_KIND_UNSUP		1327985	1					
ANR	1328087	Argument	CONDOR_WARNING_KIND_UNSUP		1327985	0					
ANR	1328088	Identifier	CONDOR_WARNING_KIND_UNSUP		1327985	0					
ANR	1328089	Argument	"""poll() is not supported for remote files"""		1327985	1					
ANR	1328090	PrimaryExpression	"""poll() is not supported for remote files"""		1327985	0					
ANR	1328091	ExpressionStatement	free ( realfds )	1289:3:31532:31545	1327985	1	True				
ANR	1328092	CallExpression	free ( realfds )		1327985	0					
ANR	1328093	Callee	free		1327985	0					
ANR	1328094	Identifier	free		1327985	0					
ANR	1328095	ArgumentList	realfds		1327985	1					
ANR	1328096	Argument	realfds		1327985	0					
ANR	1328097	Identifier	realfds		1327985	0					
ANR	1328098	ExpressionStatement	errno = EINVAL	1290:3:31550:31564	1327985	2	True				
ANR	1328099	AssignmentExpression	errno = EINVAL		1327985	0		=			
ANR	1328100	Identifier	errno		1327985	0					
ANR	1328101	Identifier	EINVAL		1327985	1					
ANR	1328102	ReturnStatement	return - 1 ;	1291:3:31569:31578	1327985	3	True				
ANR	1328103	UnaryOperationExpression	- 1		1327985	0					
ANR	1328104	UnaryOperator	-		1327985	0					
ANR	1328105	PrimaryExpression	1		1327985	1					
ANR	1328106	IdentifierDeclStatement	int scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED ) ;	1295:1:31589:31636	1327985	4	True				
ANR	1328107	IdentifierDecl	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		1327985	0					
ANR	1328108	IdentifierDeclType	int		1327985	0					
ANR	1328109	Identifier	scm		1327985	1					
ANR	1328110	AssignmentExpression	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		1327985	2		=			
ANR	1328111	Identifier	scm		1327985	0					
ANR	1328112	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		1327985	1					
ANR	1328113	Callee	SetSyscalls		1327985	0					
ANR	1328114	Identifier	SetSyscalls		1327985	0					
ANR	1328115	ArgumentList	SYS_LOCAL | SYS_UNMAPPED		1327985	1					
ANR	1328116	Argument	SYS_LOCAL | SYS_UNMAPPED		1327985	0					
ANR	1328117	InclusiveOrExpression	SYS_LOCAL | SYS_UNMAPPED		1327985	0		|			
ANR	1328118	Identifier	SYS_LOCAL		1327985	0					
ANR	1328119	Identifier	SYS_UNMAPPED		1327985	1					
ANR	1328120	Statement	int	1296:1:31639:31641	1327985	5	True				
ANR	1328121	Statement	result	1296:5:31643:31648	1327985	6	True				
ANR	1328122	Statement	=	1296:12:31650:31650	1327985	7	True				
ANR	1328123	Statement	::	1296:14:31652:31653	1327985	8	True				
ANR	1328124	ExpressionStatement	"poll ( realfds , nfds , timeout )"	1296:16:31654:31684	1327985	9	True				
ANR	1328125	CallExpression	"poll ( realfds , nfds , timeout )"		1327985	0					
ANR	1328126	Callee	poll		1327985	0					
ANR	1328127	Identifier	poll		1327985	0					
ANR	1328128	ArgumentList	realfds		1327985	1					
ANR	1328129	Argument	realfds		1327985	0					
ANR	1328130	Identifier	realfds		1327985	0					
ANR	1328131	Argument	nfds		1327985	1					
ANR	1328132	Identifier	nfds		1327985	0					
ANR	1328133	Argument	timeout		1327985	2					
ANR	1328134	Identifier	timeout		1327985	0					
ANR	1328135	ExpressionStatement	SetSyscalls ( scm )	1297:1:31687:31703	1327985	10	True				
ANR	1328136	CallExpression	SetSyscalls ( scm )		1327985	0					
ANR	1328137	Callee	SetSyscalls		1327985	0					
ANR	1328138	Identifier	SetSyscalls		1327985	0					
ANR	1328139	ArgumentList	scm		1327985	1					
ANR	1328140	Argument	scm		1327985	0					
ANR	1328141	Identifier	scm		1327985	0					
ANR	1328142	ForStatement	for ( int i = 0 ; i < nfds ; i ++ )		1327985	11					
ANR	1328143	ForInit	int i = 0 ;	1299:6:31712:31719	1327985	0	True				
ANR	1328144	IdentifierDeclStatement	int i = 0 ;		1327985	0					
ANR	1328145	IdentifierDecl	i = 0		1327985	0					
ANR	1328146	IdentifierDeclType	int		1327985	0					
ANR	1328147	Identifier	i		1327985	1					
ANR	1328148	AssignmentExpression	i = 0		1327985	2		=			
ANR	1328149	Identifier	i		1327985	0					
ANR	1328150	PrimaryExpression	0		1327985	1					
ANR	1328151	Condition	i < nfds	1299:15:31721:31726	1327985	1	True				
ANR	1328152	RelationalExpression	i < nfds		1327985	0		<			
ANR	1328153	Identifier	i		1327985	0					
ANR	1328154	Identifier	nfds		1327985	1					
ANR	1328155	PostIncDecOperationExpression	i ++	1299:23:31729:31731	1327985	2	True				
ANR	1328156	Identifier	i		1327985	0					
ANR	1328157	IncDec	++		1327985	1					
ANR	1328158	CompoundStatement		26:29:615:615	1327985	3					
ANR	1328159	ExpressionStatement	fds [ i ] . revents = realfds [ i ] . revents	1300:2:31739:31774	1327985	0	True				
ANR	1328160	AssignmentExpression	fds [ i ] . revents = realfds [ i ] . revents		1327985	0		=			
ANR	1328161	MemberAccess	fds [ i ] . revents		1327985	0					
ANR	1328162	ArrayIndexing	fds [ i ]		1327985	0					
ANR	1328163	Identifier	fds		1327985	0					
ANR	1328164	Identifier	i		1327985	1					
ANR	1328165	Identifier	revents		1327985	1					
ANR	1328166	MemberAccess	realfds [ i ] . revents		1327985	1					
ANR	1328167	ArrayIndexing	realfds [ i ]		1327985	0					
ANR	1328168	Identifier	realfds		1327985	0					
ANR	1328169	Identifier	i		1327985	1					
ANR	1328170	Identifier	revents		1327985	1					
ANR	1328171	ExpressionStatement	free ( realfds )	1303:1:31781:31794	1327985	12	True				
ANR	1328172	CallExpression	free ( realfds )		1327985	0					
ANR	1328173	Callee	free		1327985	0					
ANR	1328174	Identifier	free		1327985	0					
ANR	1328175	ArgumentList	realfds		1327985	1					
ANR	1328176	Argument	realfds		1327985	0					
ANR	1328177	Identifier	realfds		1327985	0					
ANR	1328178	ReturnStatement	return result ;	1305:1:31798:31811	1327985	13	True				
ANR	1328179	Identifier	result		1327985	0					
ANR	1328180	ReturnType	int		1327985	1					
ANR	1328181	Identifier	CondorFileTable :: poll		1327985	2					
ANR	1328182	ParameterList	"struct pollfd * fds , int nfds , int timeout"		1327985	3					
ANR	1328183	Parameter	struct pollfd * fds	1273:27:31075:31092	1327985	0	True				
ANR	1328184	ParameterType	struct pollfd *		1327985	0					
ANR	1328185	Identifier	fds		1327985	1					
ANR	1328186	Parameter	int nfds	1273:47:31095:31102	1327985	1	True				
ANR	1328187	ParameterType	int		1327985	0					
ANR	1328188	Identifier	nfds		1327985	1					
ANR	1328189	Parameter	int timeout	1273:57:31105:31115	1327985	2	True				
ANR	1328190	ParameterType	int		1327985	0					
ANR	1328191	Identifier	timeout		1327985	1					
ANR	1328192	CFGEntryNode	ENTRY		1327985		True				
ANR	1328193	CFGExitNode	EXIT		1327985		True				
ANR	1328194	Symbol	ENOMEM		1327985						
ANR	1328195	Symbol	SYS_UNMAPPED		1327985						
ANR	1328196	Symbol	_condor_get_unmapped_fd		1327985						
ANR	1328197	Symbol	timeout		1327985						
ANR	1328198	Symbol	result		1327985						
ANR	1328199	Symbol	SetSyscalls		1327985						
ANR	1328200	Symbol	scm		1327985						
ANR	1328201	Symbol	fds [ i ] . fd		1327985						
ANR	1328202	Symbol	* fds		1327985						
ANR	1328203	Symbol	realfds [ i ] . fd		1327985						
ANR	1328204	Symbol	malloc		1327985						
ANR	1328205	Symbol	errno		1327985						
ANR	1328206	Symbol	realfds [ i ] . events		1327985						
ANR	1328207	Symbol	* realfds		1327985						
ANR	1328208	Symbol	i		1327985						
ANR	1328209	Symbol	fds [ i ] . events		1327985						
ANR	1328210	Symbol	EINVAL		1327985						
ANR	1328211	Symbol	CONDOR_WARNING_KIND_UNSUP		1327985						
ANR	1328212	Symbol	* i		1327985						
ANR	1328213	Symbol	fds		1327985						
ANR	1328214	Symbol	nfds		1327985						
ANR	1328215	Symbol	SYS_LOCAL		1327985						
ANR	1328216	Symbol	fds [ i ] . revents		1327985						
ANR	1328217	Symbol	realfds [ i ] . revents		1327985						
ANR	1328218	Symbol	_condor_is_fd_local		1327985						
ANR	1328219	Symbol	realfds		1327985						
ANR	1328220	Function	CondorFileTable :: select	1312:0:31979:33511							
ANR	1328221	FunctionDef	"CondorFileTable :: select (int n , fd_set * r , fd_set * w , fd_set * e , struct timeval * timeout)"		1328220	0					
ANR	1328222	CompoundStatement		1313:0:32074:33511	1328220	0					
ANR	1328223	IdentifierDeclStatement	"fd_set r_real , w_real , e_real ;"	1314:1:32077:32106	1328220	0	True				
ANR	1328224	IdentifierDecl	r_real		1328220	0					
ANR	1328225	IdentifierDeclType	fd_set		1328220	0					
ANR	1328226	Identifier	r_real		1328220	1					
ANR	1328227	IdentifierDecl	w_real		1328220	1					
ANR	1328228	IdentifierDeclType	fd_set		1328220	0					
ANR	1328229	Identifier	w_real		1328220	1					
ANR	1328230	IdentifierDecl	e_real		1328220	2					
ANR	1328231	IdentifierDeclType	fd_set		1328220	0					
ANR	1328232	Identifier	e_real		1328220	1					
ANR	1328233	IdentifierDeclStatement	"int n_real , fd , fd_real ;"	1315:1:32109:32132	1328220	1	True				
ANR	1328234	IdentifierDecl	n_real		1328220	0					
ANR	1328235	IdentifierDeclType	int		1328220	0					
ANR	1328236	Identifier	n_real		1328220	1					
ANR	1328237	IdentifierDecl	fd		1328220	1					
ANR	1328238	IdentifierDeclType	int		1328220	0					
ANR	1328239	Identifier	fd		1328220	1					
ANR	1328240	IdentifierDecl	fd_real		1328220	2					
ANR	1328241	IdentifierDeclType	int		1328220	0					
ANR	1328242	Identifier	fd_real		1328220	1					
ANR	1328243	IdentifierDeclStatement	"int result , scm ;"	1316:1:32135:32150	1328220	2	True				
ANR	1328244	IdentifierDecl	result		1328220	0					
ANR	1328245	IdentifierDeclType	int		1328220	0					
ANR	1328246	Identifier	result		1328220	1					
ANR	1328247	IdentifierDecl	scm		1328220	1					
ANR	1328248	IdentifierDeclType	int		1328220	0					
ANR	1328249	Identifier	scm		1328220	1					
ANR	1328250	ExpressionStatement	FD_ZERO ( & r_real )	1318:1:32154:32172	1328220	3	True				
ANR	1328251	CallExpression	FD_ZERO ( & r_real )		1328220	0					
ANR	1328252	Callee	FD_ZERO		1328220	0					
ANR	1328253	Identifier	FD_ZERO		1328220	0					
ANR	1328254	ArgumentList	& r_real		1328220	1					
ANR	1328255	Argument	& r_real		1328220	0					
ANR	1328256	UnaryOperationExpression	& r_real		1328220	0					
ANR	1328257	UnaryOperator	&		1328220	0					
ANR	1328258	Identifier	r_real		1328220	1					
ANR	1328259	ExpressionStatement	FD_ZERO ( & w_real )	1319:1:32175:32193	1328220	4	True				
ANR	1328260	CallExpression	FD_ZERO ( & w_real )		1328220	0					
ANR	1328261	Callee	FD_ZERO		1328220	0					
ANR	1328262	Identifier	FD_ZERO		1328220	0					
ANR	1328263	ArgumentList	& w_real		1328220	1					
ANR	1328264	Argument	& w_real		1328220	0					
ANR	1328265	UnaryOperationExpression	& w_real		1328220	0					
ANR	1328266	UnaryOperator	&		1328220	0					
ANR	1328267	Identifier	w_real		1328220	1					
ANR	1328268	ExpressionStatement	FD_ZERO ( & e_real )	1320:1:32196:32214	1328220	5	True				
ANR	1328269	CallExpression	FD_ZERO ( & e_real )		1328220	0					
ANR	1328270	Callee	FD_ZERO		1328220	0					
ANR	1328271	Identifier	FD_ZERO		1328220	0					
ANR	1328272	ArgumentList	& e_real		1328220	1					
ANR	1328273	Argument	& e_real		1328220	0					
ANR	1328274	UnaryOperationExpression	& e_real		1328220	0					
ANR	1328275	UnaryOperator	&		1328220	0					
ANR	1328276	Identifier	e_real		1328220	1					
ANR	1328277	ExpressionStatement	n_real = 0	1322:1:32218:32228	1328220	6	True				
ANR	1328278	AssignmentExpression	n_real = 0		1328220	0		=			
ANR	1328279	Identifier	n_real		1328220	0					
ANR	1328280	PrimaryExpression	0		1328220	1					
ANR	1328281	ForStatement	for ( fd = 0 ; fd < n ; fd ++ )		1328220	7					
ANR	1328282	ForInit	fd = 0 ;	1326:6:32307:32311	1328220	0	True				
ANR	1328283	AssignmentExpression	fd = 0		1328220	0		=			
ANR	1328284	Identifier	fd		1328220	0					
ANR	1328285	PrimaryExpression	0		1328220	1					
ANR	1328286	Condition	fd < n	1326:12:32313:32316	1328220	1	True				
ANR	1328287	RelationalExpression	fd < n		1328220	0		<			
ANR	1328288	Identifier	fd		1328220	0					
ANR	1328289	Identifier	n		1328220	1					
ANR	1328290	PostIncDecOperationExpression	fd ++	1326:18:32319:32322	1328220	2	True				
ANR	1328291	Identifier	fd		1328220	0					
ANR	1328292	IncDec	++		1328220	1					
ANR	1328293	CompoundStatement		14:25:251:251	1328220	3					
ANR	1328294	ExpressionStatement	fd_real = _condor_get_unmapped_fd ( fd )	1327:2:32330:32367	1328220	0	True				
ANR	1328295	AssignmentExpression	fd_real = _condor_get_unmapped_fd ( fd )		1328220	0		=			
ANR	1328296	Identifier	fd_real		1328220	0					
ANR	1328297	CallExpression	_condor_get_unmapped_fd ( fd )		1328220	1					
ANR	1328298	Callee	_condor_get_unmapped_fd		1328220	0					
ANR	1328299	Identifier	_condor_get_unmapped_fd		1328220	0					
ANR	1328300	ArgumentList	fd		1328220	1					
ANR	1328301	Argument	fd		1328220	0					
ANR	1328302	Identifier	fd		1328220	0					
ANR	1328303	IfStatement	if ( fd_real >= 0 )		1328220	1					
ANR	1328304	Condition	fd_real >= 0	1328:6:32375:32384	1328220	0	True				
ANR	1328305	RelationalExpression	fd_real >= 0		1328220	0		>=			
ANR	1328306	Identifier	fd_real		1328220	0					
ANR	1328307	PrimaryExpression	0		1328220	1					
ANR	1328308	CompoundStatement		16:19:313:313	1328220	1					
ANR	1328309	IfStatement	if ( _condor_is_fd_local ( fd ) )		1328220	0					
ANR	1328310	Condition	_condor_is_fd_local ( fd )	1329:7:32397:32419	1328220	0	True				
ANR	1328311	CallExpression	_condor_is_fd_local ( fd )		1328220	0					
ANR	1328312	Callee	_condor_is_fd_local		1328220	0					
ANR	1328313	Identifier	_condor_is_fd_local		1328220	0					
ANR	1328314	ArgumentList	fd		1328220	1					
ANR	1328315	Argument	fd		1328220	0					
ANR	1328316	Identifier	fd		1328220	0					
ANR	1328317	CompoundStatement		17:33:348:348	1328220	1					
ANR	1328318	IfStatement	"if ( r && FD_ISSET ( fd , r ) )"		1328220	0					
ANR	1328319	Condition	"r && FD_ISSET ( fd , r )"	1330:8:32433:32451	1328220	0	True				
ANR	1328320	AndExpression	"r && FD_ISSET ( fd , r )"		1328220	0		&&			
ANR	1328321	Identifier	r		1328220	0					
ANR	1328322	CallExpression	"FD_ISSET ( fd , r )"		1328220	1					
ANR	1328323	Callee	FD_ISSET		1328220	0					
ANR	1328324	Identifier	FD_ISSET		1328220	0					
ANR	1328325	ArgumentList	fd		1328220	1					
ANR	1328326	Argument	fd		1328220	0					
ANR	1328327	Identifier	fd		1328220	0					
ANR	1328328	Argument	r		1328220	1					
ANR	1328329	Identifier	r		1328220	0					
ANR	1328330	ExpressionStatement	"FD_SET ( fd_real , & r_real )"	1331:5:32460:32483	1328220	1	True				
ANR	1328331	CallExpression	"FD_SET ( fd_real , & r_real )"		1328220	0					
ANR	1328332	Callee	FD_SET		1328220	0					
ANR	1328333	Identifier	FD_SET		1328220	0					
ANR	1328334	ArgumentList	fd_real		1328220	1					
ANR	1328335	Argument	fd_real		1328220	0					
ANR	1328336	Identifier	fd_real		1328220	0					
ANR	1328337	Argument	& r_real		1328220	1					
ANR	1328338	UnaryOperationExpression	& r_real		1328220	0					
ANR	1328339	UnaryOperator	&		1328220	0					
ANR	1328340	Identifier	r_real		1328220	1					
ANR	1328341	IfStatement	"if ( w && FD_ISSET ( fd , w ) )"		1328220	1					
ANR	1328342	Condition	"w && FD_ISSET ( fd , w )"	1332:8:32493:32511	1328220	0	True				
ANR	1328343	AndExpression	"w && FD_ISSET ( fd , w )"		1328220	0		&&			
ANR	1328344	Identifier	w		1328220	0					
ANR	1328345	CallExpression	"FD_ISSET ( fd , w )"		1328220	1					
ANR	1328346	Callee	FD_ISSET		1328220	0					
ANR	1328347	Identifier	FD_ISSET		1328220	0					
ANR	1328348	ArgumentList	fd		1328220	1					
ANR	1328349	Argument	fd		1328220	0					
ANR	1328350	Identifier	fd		1328220	0					
ANR	1328351	Argument	w		1328220	1					
ANR	1328352	Identifier	w		1328220	0					
ANR	1328353	ExpressionStatement	"FD_SET ( fd_real , & w_real )"	1333:5:32520:32543	1328220	1	True				
ANR	1328354	CallExpression	"FD_SET ( fd_real , & w_real )"		1328220	0					
ANR	1328355	Callee	FD_SET		1328220	0					
ANR	1328356	Identifier	FD_SET		1328220	0					
ANR	1328357	ArgumentList	fd_real		1328220	1					
ANR	1328358	Argument	fd_real		1328220	0					
ANR	1328359	Identifier	fd_real		1328220	0					
ANR	1328360	Argument	& w_real		1328220	1					
ANR	1328361	UnaryOperationExpression	& w_real		1328220	0					
ANR	1328362	UnaryOperator	&		1328220	0					
ANR	1328363	Identifier	w_real		1328220	1					
ANR	1328364	IfStatement	"if ( e && FD_ISSET ( fd , e ) )"		1328220	2					
ANR	1328365	Condition	"e && FD_ISSET ( fd , e )"	1334:8:32553:32571	1328220	0	True				
ANR	1328366	AndExpression	"e && FD_ISSET ( fd , e )"		1328220	0		&&			
ANR	1328367	Identifier	e		1328220	0					
ANR	1328368	CallExpression	"FD_ISSET ( fd , e )"		1328220	1					
ANR	1328369	Callee	FD_ISSET		1328220	0					
ANR	1328370	Identifier	FD_ISSET		1328220	0					
ANR	1328371	ArgumentList	fd		1328220	1					
ANR	1328372	Argument	fd		1328220	0					
ANR	1328373	Identifier	fd		1328220	0					
ANR	1328374	Argument	e		1328220	1					
ANR	1328375	Identifier	e		1328220	0					
ANR	1328376	ExpressionStatement	"FD_SET ( fd_real , & e_real )"	1335:5:32580:32603	1328220	1	True				
ANR	1328377	CallExpression	"FD_SET ( fd_real , & e_real )"		1328220	0					
ANR	1328378	Callee	FD_SET		1328220	0					
ANR	1328379	Identifier	FD_SET		1328220	0					
ANR	1328380	ArgumentList	fd_real		1328220	1					
ANR	1328381	Argument	fd_real		1328220	0					
ANR	1328382	Identifier	fd_real		1328220	0					
ANR	1328383	Argument	& e_real		1328220	1					
ANR	1328384	UnaryOperationExpression	& e_real		1328220	0					
ANR	1328385	UnaryOperator	&		1328220	0					
ANR	1328386	Identifier	e_real		1328220	1					
ANR	1328387	ExpressionStatement	"n_real = MAX ( n_real , fd_real + 1 )"	1336:4:32609:32642	1328220	3	True				
ANR	1328388	AssignmentExpression	"n_real = MAX ( n_real , fd_real + 1 )"		1328220	0		=			
ANR	1328389	Identifier	n_real		1328220	0					
ANR	1328390	CallExpression	"MAX ( n_real , fd_real + 1 )"		1328220	1					
ANR	1328391	Callee	MAX		1328220	0					
ANR	1328392	Identifier	MAX		1328220	0					
ANR	1328393	ArgumentList	n_real		1328220	1					
ANR	1328394	Argument	n_real		1328220	0					
ANR	1328395	Identifier	n_real		1328220	0					
ANR	1328396	Argument	fd_real + 1		1328220	1					
ANR	1328397	AdditiveExpression	fd_real + 1		1328220	0		+			
ANR	1328398	Identifier	fd_real		1328220	0					
ANR	1328399	PrimaryExpression	1		1328220	1					
ANR	1328400	ElseStatement	else		1328220	0					
ANR	1328401	CompoundStatement		25:10:579:579	1328220	0					
ANR	1328402	IfStatement	"if ( ( r && FD_ISSET ( fd , r ) ) || ( w && FD_ISSET ( fd , w ) ) || ( e && FD_ISSET ( fd , e ) ) )"		1328220	0					
ANR	1328403	Condition	"( r && FD_ISSET ( fd , r ) ) || ( w && FD_ISSET ( fd , w ) ) || ( e && FD_ISSET ( fd , e ) )"	1338:8:32664:32750	1328220	0	True				
ANR	1328404	OrExpression	"( r && FD_ISSET ( fd , r ) ) || ( w && FD_ISSET ( fd , w ) ) || ( e && FD_ISSET ( fd , e ) )"		1328220	0		||			
ANR	1328405	AndExpression	"r && FD_ISSET ( fd , r )"		1328220	0		&&			
ANR	1328406	Identifier	r		1328220	0					
ANR	1328407	CallExpression	"FD_ISSET ( fd , r )"		1328220	1					
ANR	1328408	Callee	FD_ISSET		1328220	0					
ANR	1328409	Identifier	FD_ISSET		1328220	0					
ANR	1328410	ArgumentList	fd		1328220	1					
ANR	1328411	Argument	fd		1328220	0					
ANR	1328412	Identifier	fd		1328220	0					
ANR	1328413	Argument	r		1328220	1					
ANR	1328414	Identifier	r		1328220	0					
ANR	1328415	OrExpression	"( w && FD_ISSET ( fd , w ) ) || ( e && FD_ISSET ( fd , e ) )"		1328220	1		||			
ANR	1328416	AndExpression	"w && FD_ISSET ( fd , w )"		1328220	0		&&			
ANR	1328417	Identifier	w		1328220	0					
ANR	1328418	CallExpression	"FD_ISSET ( fd , w )"		1328220	1					
ANR	1328419	Callee	FD_ISSET		1328220	0					
ANR	1328420	Identifier	FD_ISSET		1328220	0					
ANR	1328421	ArgumentList	fd		1328220	1					
ANR	1328422	Argument	fd		1328220	0					
ANR	1328423	Identifier	fd		1328220	0					
ANR	1328424	Argument	w		1328220	1					
ANR	1328425	Identifier	w		1328220	0					
ANR	1328426	AndExpression	"e && FD_ISSET ( fd , e )"		1328220	1		&&			
ANR	1328427	Identifier	e		1328220	0					
ANR	1328428	CallExpression	"FD_ISSET ( fd , e )"		1328220	1					
ANR	1328429	Callee	FD_ISSET		1328220	0					
ANR	1328430	Identifier	FD_ISSET		1328220	0					
ANR	1328431	ArgumentList	fd		1328220	1					
ANR	1328432	Argument	fd		1328220	0					
ANR	1328433	Identifier	fd		1328220	0					
ANR	1328434	Argument	e		1328220	1					
ANR	1328435	Identifier	e		1328220	0					
ANR	1328436	CompoundStatement		28:32:679:679	1328220	1					
ANR	1328437	ExpressionStatement	"_condor_warning ( CONDOR_WARNING_KIND_UNSUP , ""select() is not supported for remote files."" )"	1341:5:32761:32849	1328220	0	True				
ANR	1328438	CallExpression	"_condor_warning ( CONDOR_WARNING_KIND_UNSUP , ""select() is not supported for remote files."" )"		1328220	0					
ANR	1328439	Callee	_condor_warning		1328220	0					
ANR	1328440	Identifier	_condor_warning		1328220	0					
ANR	1328441	ArgumentList	CONDOR_WARNING_KIND_UNSUP		1328220	1					
ANR	1328442	Argument	CONDOR_WARNING_KIND_UNSUP		1328220	0					
ANR	1328443	Identifier	CONDOR_WARNING_KIND_UNSUP		1328220	0					
ANR	1328444	Argument	"""select() is not supported for remote files."""		1328220	1					
ANR	1328445	PrimaryExpression	"""select() is not supported for remote files."""		1328220	0					
ANR	1328446	ExpressionStatement	errno = EINVAL	1342:5:32856:32870	1328220	1	True				
ANR	1328447	AssignmentExpression	errno = EINVAL		1328220	0		=			
ANR	1328448	Identifier	errno		1328220	0					
ANR	1328449	Identifier	EINVAL		1328220	1					
ANR	1328450	ReturnStatement	return - 1 ;	1343:5:32877:32886	1328220	2	True				
ANR	1328451	UnaryOperationExpression	- 1		1328220	0					
ANR	1328452	UnaryOperator	-		1328220	0					
ANR	1328453	PrimaryExpression	1		1328220	1					
ANR	1328454	ExpressionStatement	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )	1351:1:32934:32977	1328220	8	True				
ANR	1328455	AssignmentExpression	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		1328220	0		=			
ANR	1328456	Identifier	scm		1328220	0					
ANR	1328457	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		1328220	1					
ANR	1328458	Callee	SetSyscalls		1328220	0					
ANR	1328459	Identifier	SetSyscalls		1328220	0					
ANR	1328460	ArgumentList	SYS_LOCAL | SYS_UNMAPPED		1328220	1					
ANR	1328461	Argument	SYS_LOCAL | SYS_UNMAPPED		1328220	0					
ANR	1328462	InclusiveOrExpression	SYS_LOCAL | SYS_UNMAPPED		1328220	0		|			
ANR	1328463	Identifier	SYS_LOCAL		1328220	0					
ANR	1328464	Identifier	SYS_UNMAPPED		1328220	1					
ANR	1328465	Statement	result	1352:1:32980:32985	1328220	9	True				
ANR	1328466	Statement	=	1352:8:32987:32987	1328220	10	True				
ANR	1328467	Statement	::	1352:10:32989:32990	1328220	11	True				
ANR	1328468	ExpressionStatement	"select ( n_real , & r_real , & w_real , & e_real , timeout )"	1352:12:32991:33043	1328220	12	True				
ANR	1328469	CallExpression	"select ( n_real , & r_real , & w_real , & e_real , timeout )"		1328220	0					
ANR	1328470	Callee	select		1328220	0					
ANR	1328471	Identifier	select		1328220	0					
ANR	1328472	ArgumentList	n_real		1328220	1					
ANR	1328473	Argument	n_real		1328220	0					
ANR	1328474	Identifier	n_real		1328220	0					
ANR	1328475	Argument	& r_real		1328220	1					
ANR	1328476	UnaryOperationExpression	& r_real		1328220	0					
ANR	1328477	UnaryOperator	&		1328220	0					
ANR	1328478	Identifier	r_real		1328220	1					
ANR	1328479	Argument	& w_real		1328220	2					
ANR	1328480	UnaryOperationExpression	& w_real		1328220	0					
ANR	1328481	UnaryOperator	&		1328220	0					
ANR	1328482	Identifier	w_real		1328220	1					
ANR	1328483	Argument	& e_real		1328220	3					
ANR	1328484	UnaryOperationExpression	& e_real		1328220	0					
ANR	1328485	UnaryOperator	&		1328220	0					
ANR	1328486	Identifier	e_real		1328220	1					
ANR	1328487	Argument	timeout		1328220	4					
ANR	1328488	Identifier	timeout		1328220	0					
ANR	1328489	ExpressionStatement	SetSyscalls ( scm )	1353:1:33046:33062	1328220	13	True				
ANR	1328490	CallExpression	SetSyscalls ( scm )		1328220	0					
ANR	1328491	Callee	SetSyscalls		1328220	0					
ANR	1328492	Identifier	SetSyscalls		1328220	0					
ANR	1328493	ArgumentList	scm		1328220	1					
ANR	1328494	Argument	scm		1328220	0					
ANR	1328495	Identifier	scm		1328220	0					
ANR	1328496	IfStatement	if ( r )		1328220	14					
ANR	1328497	Condition	r	1355:5:33070:33070	1328220	0	True				
ANR	1328498	Identifier	r		1328220	0					
ANR	1328499	ExpressionStatement	FD_ZERO ( r )	1355:9:33074:33086	1328220	1	True				
ANR	1328500	CallExpression	FD_ZERO ( r )		1328220	0					
ANR	1328501	Callee	FD_ZERO		1328220	0					
ANR	1328502	Identifier	FD_ZERO		1328220	0					
ANR	1328503	ArgumentList	r		1328220	1					
ANR	1328504	Argument	r		1328220	0					
ANR	1328505	Identifier	r		1328220	0					
ANR	1328506	IfStatement	if ( w )		1328220	15					
ANR	1328507	Condition	w	1356:5:33093:33093	1328220	0	True				
ANR	1328508	Identifier	w		1328220	0					
ANR	1328509	ExpressionStatement	FD_ZERO ( w )	1356:9:33097:33109	1328220	1	True				
ANR	1328510	CallExpression	FD_ZERO ( w )		1328220	0					
ANR	1328511	Callee	FD_ZERO		1328220	0					
ANR	1328512	Identifier	FD_ZERO		1328220	0					
ANR	1328513	ArgumentList	w		1328220	1					
ANR	1328514	Argument	w		1328220	0					
ANR	1328515	Identifier	w		1328220	0					
ANR	1328516	IfStatement	if ( e )		1328220	16					
ANR	1328517	Condition	e	1357:5:33116:33116	1328220	0	True				
ANR	1328518	Identifier	e		1328220	0					
ANR	1328519	ExpressionStatement	FD_ZERO ( e )	1357:9:33120:33132	1328220	1	True				
ANR	1328520	CallExpression	FD_ZERO ( e )		1328220	0					
ANR	1328521	Callee	FD_ZERO		1328220	0					
ANR	1328522	Identifier	FD_ZERO		1328220	0					
ANR	1328523	ArgumentList	e		1328220	1					
ANR	1328524	Argument	e		1328220	0					
ANR	1328525	Identifier	e		1328220	0					
ANR	1328526	ForStatement	for ( fd = 0 ; fd < n ; fd ++ )		1328220	17					
ANR	1328527	ForInit	fd = 0 ;	1361:6:33203:33207	1328220	0	True				
ANR	1328528	AssignmentExpression	fd = 0		1328220	0		=			
ANR	1328529	Identifier	fd		1328220	0					
ANR	1328530	PrimaryExpression	0		1328220	1					
ANR	1328531	Condition	fd < n	1361:12:33209:33212	1328220	1	True				
ANR	1328532	RelationalExpression	fd < n		1328220	0		<			
ANR	1328533	Identifier	fd		1328220	0					
ANR	1328534	Identifier	n		1328220	1					
ANR	1328535	PostIncDecOperationExpression	fd ++	1361:18:33215:33218	1328220	2	True				
ANR	1328536	Identifier	fd		1328220	0					
ANR	1328537	IncDec	++		1328220	1					
ANR	1328538	CompoundStatement		49:25:1147:1147	1328220	3					
ANR	1328539	ExpressionStatement	fd_real = _condor_get_unmapped_fd ( fd )	1362:2:33226:33263	1328220	0	True				
ANR	1328540	AssignmentExpression	fd_real = _condor_get_unmapped_fd ( fd )		1328220	0		=			
ANR	1328541	Identifier	fd_real		1328220	0					
ANR	1328542	CallExpression	_condor_get_unmapped_fd ( fd )		1328220	1					
ANR	1328543	Callee	_condor_get_unmapped_fd		1328220	0					
ANR	1328544	Identifier	_condor_get_unmapped_fd		1328220	0					
ANR	1328545	ArgumentList	fd		1328220	1					
ANR	1328546	Argument	fd		1328220	0					
ANR	1328547	Identifier	fd		1328220	0					
ANR	1328548	IfStatement	if ( fd_real >= 0 && _condor_is_fd_local ( fd ) )		1328220	1					
ANR	1328549	Condition	fd_real >= 0 && _condor_is_fd_local ( fd )	1363:6:33271:33307	1328220	0	True				
ANR	1328550	AndExpression	fd_real >= 0 && _condor_is_fd_local ( fd )		1328220	0		&&			
ANR	1328551	RelationalExpression	fd_real >= 0		1328220	0		>=			
ANR	1328552	Identifier	fd_real		1328220	0					
ANR	1328553	PrimaryExpression	0		1328220	1					
ANR	1328554	CallExpression	_condor_is_fd_local ( fd )		1328220	1					
ANR	1328555	Callee	_condor_is_fd_local		1328220	0					
ANR	1328556	Identifier	_condor_is_fd_local		1328220	0					
ANR	1328557	ArgumentList	fd		1328220	1					
ANR	1328558	Argument	fd		1328220	0					
ANR	1328559	Identifier	fd		1328220	0					
ANR	1328560	CompoundStatement		51:46:1236:1236	1328220	1					
ANR	1328561	IfStatement	"if ( r && FD_ISSET ( fd_real , & r_real ) )"		1328220	0					
ANR	1328562	Condition	"r && FD_ISSET ( fd_real , & r_real )"	1364:7:33320:33349	1328220	0	True				
ANR	1328563	AndExpression	"r && FD_ISSET ( fd_real , & r_real )"		1328220	0		&&			
ANR	1328564	Identifier	r		1328220	0					
ANR	1328565	CallExpression	"FD_ISSET ( fd_real , & r_real )"		1328220	1					
ANR	1328566	Callee	FD_ISSET		1328220	0					
ANR	1328567	Identifier	FD_ISSET		1328220	0					
ANR	1328568	ArgumentList	fd_real		1328220	1					
ANR	1328569	Argument	fd_real		1328220	0					
ANR	1328570	Identifier	fd_real		1328220	0					
ANR	1328571	Argument	& r_real		1328220	1					
ANR	1328572	UnaryOperationExpression	& r_real		1328220	0					
ANR	1328573	UnaryOperator	&		1328220	0					
ANR	1328574	Identifier	r_real		1328220	1					
ANR	1328575	ExpressionStatement	"FD_SET ( fd , r )"	1365:4:33357:33369	1328220	1	True				
ANR	1328576	CallExpression	"FD_SET ( fd , r )"		1328220	0					
ANR	1328577	Callee	FD_SET		1328220	0					
ANR	1328578	Identifier	FD_SET		1328220	0					
ANR	1328579	ArgumentList	fd		1328220	1					
ANR	1328580	Argument	fd		1328220	0					
ANR	1328581	Identifier	fd		1328220	0					
ANR	1328582	Argument	r		1328220	1					
ANR	1328583	Identifier	r		1328220	0					
ANR	1328584	IfStatement	"if ( w && FD_ISSET ( fd_real , & w_real ) )"		1328220	1					
ANR	1328585	Condition	"w && FD_ISSET ( fd_real , & w_real )"	1366:7:33378:33407	1328220	0	True				
ANR	1328586	AndExpression	"w && FD_ISSET ( fd_real , & w_real )"		1328220	0		&&			
ANR	1328587	Identifier	w		1328220	0					
ANR	1328588	CallExpression	"FD_ISSET ( fd_real , & w_real )"		1328220	1					
ANR	1328589	Callee	FD_ISSET		1328220	0					
ANR	1328590	Identifier	FD_ISSET		1328220	0					
ANR	1328591	ArgumentList	fd_real		1328220	1					
ANR	1328592	Argument	fd_real		1328220	0					
ANR	1328593	Identifier	fd_real		1328220	0					
ANR	1328594	Argument	& w_real		1328220	1					
ANR	1328595	UnaryOperationExpression	& w_real		1328220	0					
ANR	1328596	UnaryOperator	&		1328220	0					
ANR	1328597	Identifier	w_real		1328220	1					
ANR	1328598	ExpressionStatement	"FD_SET ( fd , w )"	1367:4:33415:33427	1328220	1	True				
ANR	1328599	CallExpression	"FD_SET ( fd , w )"		1328220	0					
ANR	1328600	Callee	FD_SET		1328220	0					
ANR	1328601	Identifier	FD_SET		1328220	0					
ANR	1328602	ArgumentList	fd		1328220	1					
ANR	1328603	Argument	fd		1328220	0					
ANR	1328604	Identifier	fd		1328220	0					
ANR	1328605	Argument	w		1328220	1					
ANR	1328606	Identifier	w		1328220	0					
ANR	1328607	IfStatement	"if ( e && FD_ISSET ( fd_real , & e_real ) )"		1328220	2					
ANR	1328608	Condition	"e && FD_ISSET ( fd_real , & e_real )"	1368:7:33436:33465	1328220	0	True				
ANR	1328609	AndExpression	"e && FD_ISSET ( fd_real , & e_real )"		1328220	0		&&			
ANR	1328610	Identifier	e		1328220	0					
ANR	1328611	CallExpression	"FD_ISSET ( fd_real , & e_real )"		1328220	1					
ANR	1328612	Callee	FD_ISSET		1328220	0					
ANR	1328613	Identifier	FD_ISSET		1328220	0					
ANR	1328614	ArgumentList	fd_real		1328220	1					
ANR	1328615	Argument	fd_real		1328220	0					
ANR	1328616	Identifier	fd_real		1328220	0					
ANR	1328617	Argument	& e_real		1328220	1					
ANR	1328618	UnaryOperationExpression	& e_real		1328220	0					
ANR	1328619	UnaryOperator	&		1328220	0					
ANR	1328620	Identifier	e_real		1328220	1					
ANR	1328621	ExpressionStatement	"FD_SET ( fd , e )"	1369:4:33473:33485	1328220	1	True				
ANR	1328622	CallExpression	"FD_SET ( fd , e )"		1328220	0					
ANR	1328623	Callee	FD_SET		1328220	0					
ANR	1328624	Identifier	FD_SET		1328220	0					
ANR	1328625	ArgumentList	fd		1328220	1					
ANR	1328626	Argument	fd		1328220	0					
ANR	1328627	Identifier	fd		1328220	0					
ANR	1328628	Argument	e		1328220	1					
ANR	1328629	Identifier	e		1328220	0					
ANR	1328630	ReturnStatement	return result ;	1373:1:33496:33509	1328220	18	True				
ANR	1328631	Identifier	result		1328220	0					
ANR	1328632	ReturnType	int		1328220	1					
ANR	1328633	Identifier	CondorFileTable :: select		1328220	2					
ANR	1328634	ParameterList	"int n , fd_set * r , fd_set * w , fd_set * e , struct timeval * timeout"		1328220	3					
ANR	1328635	Parameter	int n	1312:29:32008:32012	1328220	0	True				
ANR	1328636	ParameterType	int		1328220	0					
ANR	1328637	Identifier	n		1328220	1					
ANR	1328638	Parameter	fd_set * r	1312:36:32015:32023	1328220	1	True				
ANR	1328639	ParameterType	fd_set *		1328220	0					
ANR	1328640	Identifier	r		1328220	1					
ANR	1328641	Parameter	fd_set * w	1312:47:32026:32034	1328220	2	True				
ANR	1328642	ParameterType	fd_set *		1328220	0					
ANR	1328643	Identifier	w		1328220	1					
ANR	1328644	Parameter	fd_set * e	1312:58:32037:32045	1328220	3	True				
ANR	1328645	ParameterType	fd_set *		1328220	0					
ANR	1328646	Identifier	e		1328220	1					
ANR	1328647	Parameter	struct timeval * timeout	1312:69:32048:32070	1328220	4	True				
ANR	1328648	ParameterType	struct timeval *		1328220	0					
ANR	1328649	Identifier	timeout		1328220	1					
ANR	1328650	CFGEntryNode	ENTRY		1328220		True				
ANR	1328651	CFGExitNode	EXIT		1328220		True				
ANR	1328652	Symbol	MAX		1328220						
ANR	1328653	Symbol	SYS_UNMAPPED		1328220						
ANR	1328654	Symbol	_condor_get_unmapped_fd		1328220						
ANR	1328655	Symbol	timeout		1328220						
ANR	1328656	Symbol	& e_real		1328220						
ANR	1328657	Symbol	result		1328220						
ANR	1328658	Symbol	& w_real		1328220						
ANR	1328659	Symbol	FD_ISSET		1328220						
ANR	1328660	Symbol	SetSyscalls		1328220						
ANR	1328661	Symbol	scm		1328220						
ANR	1328662	Symbol	errno		1328220						
ANR	1328663	Symbol	e		1328220						
ANR	1328664	Symbol	w_real		1328220						
ANR	1328665	Symbol	& r_real		1328220						
ANR	1328666	Symbol	n_real		1328220						
ANR	1328667	Symbol	n		1328220						
ANR	1328668	Symbol	fd_real		1328220						
ANR	1328669	Symbol	EINVAL		1328220						
ANR	1328670	Symbol	e_real		1328220						
ANR	1328671	Symbol	CONDOR_WARNING_KIND_UNSUP		1328220						
ANR	1328672	Symbol	r		1328220						
ANR	1328673	Symbol	r_real		1328220						
ANR	1328674	Symbol	w		1328220						
ANR	1328675	Symbol	SYS_LOCAL		1328220						
ANR	1328676	Symbol	_condor_is_fd_local		1328220						
ANR	1328677	Symbol	fd		1328220						
ANR	1328678	Function	CondorFileTable :: checkpoint	1380:0:33975:34659							
ANR	1328679	FunctionDef	CondorFileTable :: checkpoint ()		1328678	0					
ANR	1328680	CompoundStatement		1381:0:34010:34659	1328678	0					
ANR	1328681	IdentifierDeclStatement	int temp ;	1382:1:34013:34021	1328678	0	True				
ANR	1328682	IdentifierDecl	temp		1328678	0					
ANR	1328683	IdentifierDeclType	int		1328678	0					
ANR	1328684	Identifier	temp		1328678	1					
ANR	1328685	ExpressionStatement	"dprintf ( D_ALWAYS , ""CondorFileTable::checkpoint\\n"" )"	1384:1:34025:34074	1328678	1	True				
ANR	1328686	CallExpression	"dprintf ( D_ALWAYS , ""CondorFileTable::checkpoint\\n"" )"		1328678	0					
ANR	1328687	Callee	dprintf		1328678	0					
ANR	1328688	Identifier	dprintf		1328678	0					
ANR	1328689	ArgumentList	D_ALWAYS		1328678	1					
ANR	1328690	Argument	D_ALWAYS		1328678	0					
ANR	1328691	Identifier	D_ALWAYS		1328678	0					
ANR	1328692	Argument	"""CondorFileTable::checkpoint\\n"""		1328678	1					
ANR	1328693	PrimaryExpression	"""CondorFileTable::checkpoint\\n"""		1328678	0					
ANR	1328694	ExpressionStatement	dump ( )	1386:1:34078:34084	1328678	2	True				
ANR	1328695	CallExpression	dump ( )		1328678	0					
ANR	1328696	Callee	dump		1328678	0					
ANR	1328697	Identifier	dump		1328678	0					
ANR	1328698	ArgumentList			1328678	1					
ANR	1328699	IfStatement	if ( MyImage . GetMode ( ) != STANDALONE )		1328678	3					
ANR	1328700	Condition	MyImage . GetMode ( ) != STANDALONE	1388:5:34092:34122	1328678	0	True				
ANR	1328701	EqualityExpression	MyImage . GetMode ( ) != STANDALONE		1328678	0		!=			
ANR	1328702	CallExpression	MyImage . GetMode ( )		1328678	0					
ANR	1328703	Callee	MyImage . GetMode		1328678	0					
ANR	1328704	MemberAccess	MyImage . GetMode		1328678	0					
ANR	1328705	Identifier	MyImage		1328678	0					
ANR	1328706	Identifier	GetMode		1328678	1					
ANR	1328707	ArgumentList			1328678	1					
ANR	1328708	Identifier	STANDALONE		1328678	1					
ANR	1328709	CompoundStatement		8:39:115:115	1328678	1					
ANR	1328710	ExpressionStatement	"REMOTE_CONDOR_get_buffer_info ( & buffer_size , & buffer_block_size , & temp )"	1389:2:34130:34206	1328678	0	True				
ANR	1328711	CallExpression	"REMOTE_CONDOR_get_buffer_info ( & buffer_size , & buffer_block_size , & temp )"		1328678	0					
ANR	1328712	Callee	REMOTE_CONDOR_get_buffer_info		1328678	0					
ANR	1328713	Identifier	REMOTE_CONDOR_get_buffer_info		1328678	0					
ANR	1328714	ArgumentList	& buffer_size		1328678	1					
ANR	1328715	Argument	& buffer_size		1328678	0					
ANR	1328716	UnaryOperationExpression	& buffer_size		1328678	0					
ANR	1328717	UnaryOperator	&		1328678	0					
ANR	1328718	Identifier	buffer_size		1328678	1					
ANR	1328719	Argument	& buffer_block_size		1328678	1					
ANR	1328720	UnaryOperationExpression	& buffer_block_size		1328678	0					
ANR	1328721	UnaryOperator	&		1328678	0					
ANR	1328722	Identifier	buffer_block_size		1328678	1					
ANR	1328723	Argument	& temp		1328678	2					
ANR	1328724	UnaryOperationExpression	& temp		1328678	0					
ANR	1328725	UnaryOperator	&		1328678	0					
ANR	1328726	Identifier	temp		1328678	1					
ANR	1328727	ExpressionStatement	"dprintf ( D_ALWAYS , ""working dir = %s\\n"" , working_dir )"	1392:1:34212:34262	1328678	4	True				
ANR	1328728	CallExpression	"dprintf ( D_ALWAYS , ""working dir = %s\\n"" , working_dir )"		1328678	0					
ANR	1328729	Callee	dprintf		1328678	0					
ANR	1328730	Identifier	dprintf		1328678	0					
ANR	1328731	ArgumentList	D_ALWAYS		1328678	1					
ANR	1328732	Argument	D_ALWAYS		1328678	0					
ANR	1328733	Identifier	D_ALWAYS		1328678	0					
ANR	1328734	Argument	"""working dir = %s\\n"""		1328678	1					
ANR	1328735	PrimaryExpression	"""working dir = %s\\n"""		1328678	0					
ANR	1328736	Argument	working_dir		1328678	2					
ANR	1328737	Identifier	working_dir		1328678	0					
ANR	1328738	ForStatement	for ( int i = 0 ; i < length ; i ++ )		1328678	5					
ANR	1328739	ForInit	int i = 0 ;	1394:6:34271:34278	1328678	0	True				
ANR	1328740	IdentifierDeclStatement	int i = 0 ;		1328678	0					
ANR	1328741	IdentifierDecl	i = 0		1328678	0					
ANR	1328742	IdentifierDeclType	int		1328678	0					
ANR	1328743	Identifier	i		1328678	1					
ANR	1328744	AssignmentExpression	i = 0		1328678	2		=			
ANR	1328745	Identifier	i		1328678	0					
ANR	1328746	PrimaryExpression	0		1328678	1					
ANR	1328747	Condition	i < length	1394:15:34280:34287	1328678	1	True				
ANR	1328748	RelationalExpression	i < length		1328678	0		<			
ANR	1328749	Identifier	i		1328678	0					
ANR	1328750	Identifier	length		1328678	1					
ANR	1328751	PostIncDecOperationExpression	i ++	1394:25:34290:34292	1328678	2	True				
ANR	1328752	Identifier	i		1328678	0					
ANR	1328753	IncDec	++		1328678	1					
ANR	1328754	CompoundStatement		14:31:285:285	1328678	3					
ANR	1328755	IfStatement	if ( pointers [ i ] )		1328678	0					
ANR	1328756	Condition	pointers [ i ]	1395:6:34304:34314	1328678	0	True				
ANR	1328757	ArrayIndexing	pointers [ i ]		1328678	0					
ANR	1328758	Identifier	pointers		1328678	0					
ANR	1328759	Identifier	i		1328678	1					
ANR	1328760	CompoundStatement		15:20:307:307	1328678	1					
ANR	1328761	IfStatement	if ( pointers [ i ] -> file )		1328678	0					
ANR	1328762	Condition	pointers [ i ] -> file	1396:7:34327:34343	1328678	0	True				
ANR	1328763	PtrMemberAccess	pointers [ i ] -> file		1328678	0					
ANR	1328764	ArrayIndexing	pointers [ i ]		1328678	0					
ANR	1328765	Identifier	pointers		1328678	0					
ANR	1328766	Identifier	i		1328678	1					
ANR	1328767	Identifier	file		1328678	1					
ANR	1328768	CompoundStatement		16:27:336:336	1328678	1					
ANR	1328769	IfStatement	if ( count_file_uses ( pointers [ i ] -> file ) == 1 )		1328678	0					
ANR	1328770	Condition	count_file_uses ( pointers [ i ] -> file ) == 1	1397:8:34357:34393	1328678	0	True				
ANR	1328771	EqualityExpression	count_file_uses ( pointers [ i ] -> file ) == 1		1328678	0		==			
ANR	1328772	CallExpression	count_file_uses ( pointers [ i ] -> file )		1328678	0					
ANR	1328773	Callee	count_file_uses		1328678	0					
ANR	1328774	Identifier	count_file_uses		1328678	0					
ANR	1328775	ArgumentList	pointers [ i ] -> file		1328678	1					
ANR	1328776	Argument	pointers [ i ] -> file		1328678	0					
ANR	1328777	PtrMemberAccess	pointers [ i ] -> file		1328678	0					
ANR	1328778	ArrayIndexing	pointers [ i ]		1328678	0					
ANR	1328779	Identifier	pointers		1328678	0					
ANR	1328780	Identifier	i		1328678	1					
ANR	1328781	Identifier	file		1328678	1					
ANR	1328782	PrimaryExpression	1		1328678	1					
ANR	1328783	CompoundStatement		17:48:386:386	1328678	1					
ANR	1328784	ExpressionStatement	temp = pointers [ i ] -> file -> close ( )	1398:5:34404:34437	1328678	0	True				
ANR	1328785	AssignmentExpression	temp = pointers [ i ] -> file -> close ( )		1328678	0		=			
ANR	1328786	Identifier	temp		1328678	0					
ANR	1328787	CallExpression	pointers [ i ] -> file -> close ( )		1328678	1					
ANR	1328788	Callee	pointers [ i ] -> file -> close		1328678	0					
ANR	1328789	PtrMemberAccess	pointers [ i ] -> file -> close		1328678	0					
ANR	1328790	PtrMemberAccess	pointers [ i ] -> file		1328678	0					
ANR	1328791	ArrayIndexing	pointers [ i ]		1328678	0					
ANR	1328792	Identifier	pointers		1328678	0					
ANR	1328793	Identifier	i		1328678	1					
ANR	1328794	Identifier	file		1328678	1					
ANR	1328795	Identifier	close		1328678	1					
ANR	1328796	ArgumentList			1328678	1					
ANR	1328797	IfStatement	if ( temp == - 1 )		1328678	1					
ANR	1328798	Condition	temp == - 1	1399:9:34448:34455	1328678	0	True				
ANR	1328799	EqualityExpression	temp == - 1		1328678	0		==			
ANR	1328800	Identifier	temp		1328678	0					
ANR	1328801	UnaryOperationExpression	- 1		1328678	1					
ANR	1328802	UnaryOperator	-		1328678	0					
ANR	1328803	PrimaryExpression	1		1328678	1					
ANR	1328804	CompoundStatement		19:20:448:448	1328678	1					
ANR	1328805	ExpressionStatement	"_condor_error_retry ( ""Unable to commit data to file %s!\\n"" , pointers [ i ] -> file -> get_url ( ) )"	1400:6:34467:34554	1328678	0	True				
ANR	1328806	CallExpression	"_condor_error_retry ( ""Unable to commit data to file %s!\\n"" , pointers [ i ] -> file -> get_url ( ) )"		1328678	0					
ANR	1328807	Callee	_condor_error_retry		1328678	0					
ANR	1328808	Identifier	_condor_error_retry		1328678	0					
ANR	1328809	ArgumentList	"""Unable to commit data to file %s!\\n"""		1328678	1					
ANR	1328810	Argument	"""Unable to commit data to file %s!\\n"""		1328678	0					
ANR	1328811	PrimaryExpression	"""Unable to commit data to file %s!\\n"""		1328678	0					
ANR	1328812	Argument	pointers [ i ] -> file -> get_url ( )		1328678	1					
ANR	1328813	CallExpression	pointers [ i ] -> file -> get_url ( )		1328678	0					
ANR	1328814	Callee	pointers [ i ] -> file -> get_url		1328678	0					
ANR	1328815	PtrMemberAccess	pointers [ i ] -> file -> get_url		1328678	0					
ANR	1328816	PtrMemberAccess	pointers [ i ] -> file		1328678	0					
ANR	1328817	ArrayIndexing	pointers [ i ]		1328678	0					
ANR	1328818	Identifier	pointers		1328678	0					
ANR	1328819	Identifier	i		1328678	1					
ANR	1328820	Identifier	file		1328678	1					
ANR	1328821	Identifier	get_url		1328678	1					
ANR	1328822	ArgumentList			1328678	1					
ANR	1328823	Statement	delete	1402:5:34568:34573	1328678	2	True				
ANR	1328824	ExpressionStatement	pointers [ i ] -> file	1402:12:34575:34592	1328678	3	True				
ANR	1328825	PtrMemberAccess	pointers [ i ] -> file		1328678	0					
ANR	1328826	ArrayIndexing	pointers [ i ]		1328678	0					
ANR	1328827	Identifier	pointers		1328678	0					
ANR	1328828	Identifier	i		1328678	1					
ANR	1328829	Identifier	file		1328678	1					
ANR	1328830	ExpressionStatement	pointers [ i ] -> file = 0	1404:4:34604:34623	1328678	1	True				
ANR	1328831	AssignmentExpression	pointers [ i ] -> file = 0		1328678	0		=			
ANR	1328832	PtrMemberAccess	pointers [ i ] -> file		1328678	0					
ANR	1328833	ArrayIndexing	pointers [ i ]		1328678	0					
ANR	1328834	Identifier	pointers		1328678	0					
ANR	1328835	Identifier	i		1328678	1					
ANR	1328836	Identifier	file		1328678	1					
ANR	1328837	PrimaryExpression	0		1328678	1					
ANR	1328838	ExpressionStatement	report_all ( )	1409:1:34645:34657	1328678	6	True				
ANR	1328839	CallExpression	report_all ( )		1328678	0					
ANR	1328840	Callee	report_all		1328678	0					
ANR	1328841	Identifier	report_all		1328678	0					
ANR	1328842	ArgumentList			1328678	1					
ANR	1328843	ReturnType	void		1328678	1					
ANR	1328844	Identifier	CondorFileTable :: checkpoint		1328678	2					
ANR	1328845	ParameterList			1328678	3					
ANR	1328846	CFGEntryNode	ENTRY		1328678		True				
ANR	1328847	CFGExitNode	EXIT		1328678		True				
ANR	1328848	Symbol	temp		1328678						
ANR	1328849	Symbol	* * i		1328678						
ANR	1328850	Symbol	* pointers [ i ] -> file		1328678						
ANR	1328851	Symbol	& buffer_block_size		1328678						
ANR	1328852	Symbol	working_dir		1328678						
ANR	1328853	Symbol	pointers [ i ] -> file		1328678						
ANR	1328854	Symbol	D_ALWAYS		1328678						
ANR	1328855	Symbol	MyImage . GetMode		1328678						
ANR	1328856	Symbol	length		1328678						
ANR	1328857	Symbol	& buffer_size		1328678						
ANR	1328858	Symbol	i		1328678						
ANR	1328859	Symbol	pointers [ i ] -> file -> close		1328678						
ANR	1328860	Symbol	* pointers		1328678						
ANR	1328861	Symbol	STANDALONE		1328678						
ANR	1328862	Symbol	* i		1328678						
ANR	1328863	Symbol	pointers [ i ] -> file -> get_url		1328678						
ANR	1328864	Symbol	count_file_uses		1328678						
ANR	1328865	Symbol	* * * i		1328678						
ANR	1328866	Symbol	* * * pointers		1328678						
ANR	1328867	Symbol	* * pointers		1328678						
ANR	1328868	Symbol	MyImage		1328678						
ANR	1328869	Symbol	pointers		1328678						
ANR	1328870	Symbol	& temp		1328678						
ANR	1328871	Function	CondorFileTable :: resume	1416:0:34845:35338							
ANR	1328872	FunctionDef	CondorFileTable :: resume ()		1328871	0					
ANR	1328873	CompoundStatement		1417:0:34876:35338	1328871	0					
ANR	1328874	IdentifierDeclStatement	int result ;	1418:1:34879:34889	1328871	0	True				
ANR	1328875	IdentifierDecl	result		1328871	0					
ANR	1328876	IdentifierDeclType	int		1328871	0					
ANR	1328877	Identifier	result		1328871	1					
ANR	1328878	IdentifierDeclStatement	int temp ;	1419:1:34892:34900	1328871	1	True				
ANR	1328879	IdentifierDecl	temp		1328871	0					
ANR	1328880	IdentifierDeclType	int		1328871	0					
ANR	1328881	Identifier	temp		1328871	1					
ANR	1328882	ExpressionStatement	"dprintf ( D_ALWAYS , ""CondorFileTable::resume\\n"" )"	1421:1:34904:34949	1328871	2	True				
ANR	1328883	CallExpression	"dprintf ( D_ALWAYS , ""CondorFileTable::resume\\n"" )"		1328871	0					
ANR	1328884	Callee	dprintf		1328871	0					
ANR	1328885	Identifier	dprintf		1328871	0					
ANR	1328886	ArgumentList	D_ALWAYS		1328871	1					
ANR	1328887	Argument	D_ALWAYS		1328871	0					
ANR	1328888	Identifier	D_ALWAYS		1328871	0					
ANR	1328889	Argument	"""CondorFileTable::resume\\n"""		1328871	1					
ANR	1328890	PrimaryExpression	"""CondorFileTable::resume\\n"""		1328871	0					
ANR	1328891	ExpressionStatement	"dprintf ( D_ALWAYS , ""working dir = %s\\n"" , working_dir )"	1422:1:34952:35002	1328871	3	True				
ANR	1328892	CallExpression	"dprintf ( D_ALWAYS , ""working dir = %s\\n"" , working_dir )"		1328871	0					
ANR	1328893	Callee	dprintf		1328871	0					
ANR	1328894	Identifier	dprintf		1328871	0					
ANR	1328895	ArgumentList	D_ALWAYS		1328871	1					
ANR	1328896	Argument	D_ALWAYS		1328871	0					
ANR	1328897	Identifier	D_ALWAYS		1328871	0					
ANR	1328898	Argument	"""working dir = %s\\n"""		1328871	1					
ANR	1328899	PrimaryExpression	"""working dir = %s\\n"""		1328871	0					
ANR	1328900	Argument	working_dir		1328871	2					
ANR	1328901	Identifier	working_dir		1328871	0					
ANR	1328902	IfStatement	if ( MyImage . GetMode ( ) != STANDALONE )		1328871	4					
ANR	1328903	Condition	MyImage . GetMode ( ) != STANDALONE	1424:4:35009:35037	1328871	0	True				
ANR	1328904	EqualityExpression	MyImage . GetMode ( ) != STANDALONE		1328871	0		!=			
ANR	1328905	CallExpression	MyImage . GetMode ( )		1328871	0					
ANR	1328906	Callee	MyImage . GetMode		1328871	0					
ANR	1328907	MemberAccess	MyImage . GetMode		1328871	0					
ANR	1328908	Identifier	MyImage		1328871	0					
ANR	1328909	Identifier	GetMode		1328871	1					
ANR	1328910	ArgumentList			1328871	1					
ANR	1328911	Identifier	STANDALONE		1328871	1					
ANR	1328912	CompoundStatement		8:35:163:163	1328871	1					
ANR	1328913	ExpressionStatement	"REMOTE_CONDOR_get_buffer_info ( & buffer_size , & buffer_block_size , & temp )"	1425:2:35044:35120	1328871	0	True				
ANR	1328914	CallExpression	"REMOTE_CONDOR_get_buffer_info ( & buffer_size , & buffer_block_size , & temp )"		1328871	0					
ANR	1328915	Callee	REMOTE_CONDOR_get_buffer_info		1328871	0					
ANR	1328916	Identifier	REMOTE_CONDOR_get_buffer_info		1328871	0					
ANR	1328917	ArgumentList	& buffer_size		1328871	1					
ANR	1328918	Argument	& buffer_size		1328871	0					
ANR	1328919	UnaryOperationExpression	& buffer_size		1328871	0					
ANR	1328920	UnaryOperator	&		1328871	0					
ANR	1328921	Identifier	buffer_size		1328871	1					
ANR	1328922	Argument	& buffer_block_size		1328871	1					
ANR	1328923	UnaryOperationExpression	& buffer_block_size		1328871	0					
ANR	1328924	UnaryOperator	&		1328871	0					
ANR	1328925	Identifier	buffer_block_size		1328871	1					
ANR	1328926	Argument	& temp		1328871	2					
ANR	1328927	UnaryOperationExpression	& temp		1328871	0					
ANR	1328928	UnaryOperator	&		1328871	0					
ANR	1328929	Identifier	temp		1328871	1					
ANR	1328930	ExpressionStatement	result = REMOTE_CONDOR_chdir ( working_dir )	1427:2:35124:35165	1328871	1	True				
ANR	1328931	AssignmentExpression	result = REMOTE_CONDOR_chdir ( working_dir )		1328871	0		=			
ANR	1328932	Identifier	result		1328871	0					
ANR	1328933	CallExpression	REMOTE_CONDOR_chdir ( working_dir )		1328871	1					
ANR	1328934	Callee	REMOTE_CONDOR_chdir		1328871	0					
ANR	1328935	Identifier	REMOTE_CONDOR_chdir		1328871	0					
ANR	1328936	ArgumentList	working_dir		1328871	1					
ANR	1328937	Argument	working_dir		1328871	0					
ANR	1328938	Identifier	working_dir		1328871	0					
ANR	1328939	ElseStatement	else		1328871	0					
ANR	1328940	CompoundStatement		12:8:298:298	1328871	0					
ANR	1328941	Statement	result	1429:2:35179:35184	1328871	0	True				
ANR	1328942	Statement	=	1429:9:35186:35186	1328871	1	True				
ANR	1328943	Statement	::	1429:11:35188:35189	1328871	2	True				
ANR	1328944	ExpressionStatement	chdir ( working_dir )	1429:13:35190:35210	1328871	3	True				
ANR	1328945	CallExpression	chdir ( working_dir )		1328871	0					
ANR	1328946	Callee	chdir		1328871	0					
ANR	1328947	Identifier	chdir		1328871	0					
ANR	1328948	ArgumentList	working_dir		1328871	1					
ANR	1328949	Argument	working_dir		1328871	0					
ANR	1328950	Identifier	working_dir		1328871	0					
ANR	1328951	IfStatement	if ( result < 0 )		1328871	5					
ANR	1328952	Condition	result < 0	1432:4:35220:35227	1328871	0	True				
ANR	1328953	RelationalExpression	result < 0		1328871	0		<			
ANR	1328954	Identifier	result		1328871	0					
ANR	1328955	PrimaryExpression	0		1328871	1					
ANR	1328956	ExpressionStatement	"_condor_error_retry ( ""Couldn't move to '%s' (%s).  Please fix it.\\n"" , working_dir , strerror ( errno ) )"	1432:14:35230:35326	1328871	1	True				
ANR	1328957	CallExpression	"_condor_error_retry ( ""Couldn't move to '%s' (%s).  Please fix it.\\n"" , working_dir , strerror ( errno ) )"		1328871	0					
ANR	1328958	Callee	_condor_error_retry		1328871	0					
ANR	1328959	Identifier	_condor_error_retry		1328871	0					
ANR	1328960	ArgumentList	"""Couldn't move to '%s' (%s).  Please fix it.\\n"""		1328871	1					
ANR	1328961	Argument	"""Couldn't move to '%s' (%s).  Please fix it.\\n"""		1328871	0					
ANR	1328962	PrimaryExpression	"""Couldn't move to '%s' (%s).  Please fix it.\\n"""		1328871	0					
ANR	1328963	Argument	working_dir		1328871	1					
ANR	1328964	Identifier	working_dir		1328871	0					
ANR	1328965	Argument	strerror ( errno )		1328871	2					
ANR	1328966	CallExpression	strerror ( errno )		1328871	0					
ANR	1328967	Callee	strerror		1328871	0					
ANR	1328968	Identifier	strerror		1328871	0					
ANR	1328969	ArgumentList	errno		1328871	1					
ANR	1328970	Argument	errno		1328871	0					
ANR	1328971	Identifier	errno		1328871	0					
ANR	1328972	ExpressionStatement	dump ( )	1434:1:35330:35336	1328871	6	True				
ANR	1328973	CallExpression	dump ( )		1328871	0					
ANR	1328974	Callee	dump		1328871	0					
ANR	1328975	Identifier	dump		1328871	0					
ANR	1328976	ArgumentList			1328871	1					
ANR	1328977	ReturnType	void		1328871	1					
ANR	1328978	Identifier	CondorFileTable :: resume		1328871	2					
ANR	1328979	ParameterList			1328871	3					
ANR	1328980	CFGEntryNode	ENTRY		1328871		True				
ANR	1328981	CFGExitNode	EXIT		1328871		True				
ANR	1328982	Symbol	temp		1328871						
ANR	1328983	Symbol	errno		1328871						
ANR	1328984	Symbol	& buffer_block_size		1328871						
ANR	1328985	Symbol	working_dir		1328871						
ANR	1328986	Symbol	REMOTE_CONDOR_chdir		1328871						
ANR	1328987	Symbol	D_ALWAYS		1328871						
ANR	1328988	Symbol	MyImage . GetMode		1328871						
ANR	1328989	Symbol	& buffer_size		1328871						
ANR	1328990	Symbol	result		1328871						
ANR	1328991	Symbol	strerror		1328871						
ANR	1328992	Symbol	STANDALONE		1328871						
ANR	1328993	Symbol	MyImage		1328871						
ANR	1328994	Symbol	& temp		1328871						
ANR	1328995	Function	CondorFileTable :: resume	1441:0:35612:35993							
ANR	1328996	FunctionDef	CondorFileTable :: resume (int fd)		1328995	0					
ANR	1328997	CompoundStatement		1442:0:35650:35993	1328995	0					
ANR	1328998	IdentifierDeclStatement	CondorFilePointer * p ;	1443:1:35653:35673	1328995	0	True				
ANR	1328999	IdentifierDecl	* p		1328995	0					
ANR	1329000	IdentifierDeclType	CondorFilePointer *		1328995	0					
ANR	1329001	Identifier	p		1328995	1					
ANR	1329002	IfStatement	if ( fd < 0 || fd >= length || ! pointers [ fd ] )		1328995	1					
ANR	1329003	Condition	fd < 0 || fd >= length || ! pointers [ fd ]	1445:5:35681:35715	1328995	0	True				
ANR	1329004	OrExpression	fd < 0 || fd >= length || ! pointers [ fd ]		1328995	0		||			
ANR	1329005	RelationalExpression	fd < 0		1328995	0		<			
ANR	1329006	Identifier	fd		1328995	0					
ANR	1329007	PrimaryExpression	0		1328995	1					
ANR	1329008	OrExpression	fd >= length || ! pointers [ fd ]		1328995	1		||			
ANR	1329009	RelationalExpression	fd >= length		1328995	0		>=			
ANR	1329010	Identifier	fd		1328995	0					
ANR	1329011	Identifier	length		1328995	1					
ANR	1329012	UnaryOperationExpression	! pointers [ fd ]		1328995	1					
ANR	1329013	UnaryOperator	!		1328995	0					
ANR	1329014	ArrayIndexing	pointers [ fd ]		1328995	1					
ANR	1329015	Identifier	pointers		1328995	0					
ANR	1329016	Identifier	fd		1328995	1					
ANR	1329017	CompoundStatement		4:43:68:68	1328995	1					
ANR	1329018	ExpressionStatement	errno = EBADF	1446:2:35723:35736	1328995	0	True				
ANR	1329019	AssignmentExpression	errno = EBADF		1328995	0		=			
ANR	1329020	Identifier	errno		1328995	0					
ANR	1329021	Identifier	EBADF		1328995	1					
ANR	1329022	ReturnStatement	return - 1 ;	1447:2:35740:35749	1328995	1	True				
ANR	1329023	UnaryOperationExpression	- 1		1328995	0					
ANR	1329024	UnaryOperator	-		1328995	0					
ANR	1329025	PrimaryExpression	1		1328995	1					
ANR	1329026	ExpressionStatement	p = pointers [ fd ]	1450:1:35756:35772	1328995	2	True				
ANR	1329027	AssignmentExpression	p = pointers [ fd ]		1328995	0		=			
ANR	1329028	Identifier	p		1328995	0					
ANR	1329029	ArrayIndexing	pointers [ fd ]		1328995	1					
ANR	1329030	Identifier	pointers		1328995	0					
ANR	1329031	Identifier	fd		1328995	1					
ANR	1329032	IfStatement	if ( ! p -> file )		1328995	3					
ANR	1329033	Condition	! p -> file	1452:5:35780:35787	1328995	0	True				
ANR	1329034	UnaryOperationExpression	! p -> file		1328995	0					
ANR	1329035	UnaryOperator	!		1328995	0					
ANR	1329036	PtrMemberAccess	p -> file		1328995	1					
ANR	1329037	Identifier	p		1328995	0					
ANR	1329038	Identifier	file		1328995	1					
ANR	1329039	CompoundStatement		11:16:140:140	1328995	1					
ANR	1329040	ExpressionStatement	"p -> file = open_file_unique ( p -> logical_name , p -> flags , 0 )"	1453:2:35795:35853	1328995	0	True				
ANR	1329041	AssignmentExpression	"p -> file = open_file_unique ( p -> logical_name , p -> flags , 0 )"		1328995	0		=			
ANR	1329042	PtrMemberAccess	p -> file		1328995	0					
ANR	1329043	Identifier	p		1328995	0					
ANR	1329044	Identifier	file		1328995	1					
ANR	1329045	CallExpression	"open_file_unique ( p -> logical_name , p -> flags , 0 )"		1328995	1					
ANR	1329046	Callee	open_file_unique		1328995	0					
ANR	1329047	Identifier	open_file_unique		1328995	0					
ANR	1329048	ArgumentList	p -> logical_name		1328995	1					
ANR	1329049	Argument	p -> logical_name		1328995	0					
ANR	1329050	PtrMemberAccess	p -> logical_name		1328995	0					
ANR	1329051	Identifier	p		1328995	0					
ANR	1329052	Identifier	logical_name		1328995	1					
ANR	1329053	Argument	p -> flags		1328995	1					
ANR	1329054	PtrMemberAccess	p -> flags		1328995	0					
ANR	1329055	Identifier	p		1328995	0					
ANR	1329056	Identifier	flags		1328995	1					
ANR	1329057	Argument	0		1328995	2					
ANR	1329058	PrimaryExpression	0		1328995	0					
ANR	1329059	IfStatement	if ( ! p -> file )		1328995	1					
ANR	1329060	Condition	! p -> file	1454:6:35861:35868	1328995	0	True				
ANR	1329061	UnaryOperationExpression	! p -> file		1328995	0					
ANR	1329062	UnaryOperator	!		1328995	0					
ANR	1329063	PtrMemberAccess	p -> file		1328995	1					
ANR	1329064	Identifier	p		1328995	0					
ANR	1329065	Identifier	file		1328995	1					
ANR	1329066	CompoundStatement		13:17:221:221	1328995	1					
ANR	1329067	ExpressionStatement	"_condor_error_retry ( ""Couldn't re-open '%s' after a restart.  Please fix it.\\n"" , p -> logical_name )"	1455:3:35877:35972	1328995	0	True				
ANR	1329068	CallExpression	"_condor_error_retry ( ""Couldn't re-open '%s' after a restart.  Please fix it.\\n"" , p -> logical_name )"		1328995	0					
ANR	1329069	Callee	_condor_error_retry		1328995	0					
ANR	1329070	Identifier	_condor_error_retry		1328995	0					
ANR	1329071	ArgumentList	"""Couldn't re-open '%s' after a restart.  Please fix it.\\n"""		1328995	1					
ANR	1329072	Argument	"""Couldn't re-open '%s' after a restart.  Please fix it.\\n"""		1328995	0					
ANR	1329073	PrimaryExpression	"""Couldn't re-open '%s' after a restart.  Please fix it.\\n"""		1328995	0					
ANR	1329074	Argument	p -> logical_name		1328995	1					
ANR	1329075	PtrMemberAccess	p -> logical_name		1328995	0					
ANR	1329076	Identifier	p		1328995	0					
ANR	1329077	Identifier	logical_name		1328995	1					
ANR	1329078	ReturnStatement	return 0 ;	1459:1:35983:35991	1328995	4	True				
ANR	1329079	PrimaryExpression	0		1328995	0					
ANR	1329080	ReturnType	int		1328995	1					
ANR	1329081	Identifier	CondorFileTable :: resume		1328995	2					
ANR	1329082	ParameterList	int fd		1328995	3					
ANR	1329083	Parameter	int fd	1441:29:35641:35646	1328995	0	True				
ANR	1329084	ParameterType	int		1328995	0					
ANR	1329085	Identifier	fd		1328995	1					
ANR	1329086	CFGEntryNode	ENTRY		1328995		True				
ANR	1329087	CFGExitNode	EXIT		1328995		True				
ANR	1329088	Symbol	errno		1328995						
ANR	1329089	Symbol	* fd		1328995						
ANR	1329090	Symbol	length		1328995						
ANR	1329091	Symbol	EBADF		1328995						
ANR	1329092	Symbol	* pointers		1328995						
ANR	1329093	Symbol	p		1328995						
ANR	1329094	Symbol	p -> file		1328995						
ANR	1329095	Symbol	p -> flags		1328995						
ANR	1329096	Symbol	p -> logical_name		1328995						
ANR	1329097	Symbol	* p		1328995						
ANR	1329098	Symbol	open_file_unique		1328995						
ANR	1329099	Symbol	fd		1328995						
ANR	1329100	Symbol	pointers		1328995						
ANR	1329101	Function	CondorFileTable :: get_unmapped_fd	1462:0:35996:36123							
ANR	1329102	FunctionDef	CondorFileTable :: get_unmapped_fd (int fd)		1329101	0					
ANR	1329103	CompoundStatement		1463:0:36043:36123	1329101	0					
ANR	1329104	IfStatement	if ( resume ( fd ) < 0 )		1329101	0					
ANR	1329105	Condition	resume ( fd ) < 0	1464:5:36050:36061	1329101	0	True				
ANR	1329106	RelationalExpression	resume ( fd ) < 0		1329101	0		<			
ANR	1329107	CallExpression	resume ( fd )		1329101	0					
ANR	1329108	Callee	resume		1329101	0					
ANR	1329109	Identifier	resume		1329101	0					
ANR	1329110	ArgumentList	fd		1329101	1					
ANR	1329111	Argument	fd		1329101	0					
ANR	1329112	Identifier	fd		1329101	0					
ANR	1329113	PrimaryExpression	0		1329101	1					
ANR	1329114	ReturnStatement	return - 1 ;	1464:20:36065:36074	1329101	1	True				
ANR	1329115	UnaryOperationExpression	- 1		1329101	0					
ANR	1329116	UnaryOperator	-		1329101	0					
ANR	1329117	PrimaryExpression	1		1329101	1					
ANR	1329118	ReturnStatement	return pointers [ fd ] -> file -> get_unmapped_fd ( ) ;	1465:1:36077:36121	1329101	1	True				
ANR	1329119	CallExpression	pointers [ fd ] -> file -> get_unmapped_fd ( )		1329101	0					
ANR	1329120	Callee	pointers [ fd ] -> file -> get_unmapped_fd		1329101	0					
ANR	1329121	PtrMemberAccess	pointers [ fd ] -> file -> get_unmapped_fd		1329101	0					
ANR	1329122	PtrMemberAccess	pointers [ fd ] -> file		1329101	0					
ANR	1329123	ArrayIndexing	pointers [ fd ]		1329101	0					
ANR	1329124	Identifier	pointers		1329101	0					
ANR	1329125	Identifier	fd		1329101	1					
ANR	1329126	Identifier	file		1329101	1					
ANR	1329127	Identifier	get_unmapped_fd		1329101	1					
ANR	1329128	ArgumentList			1329101	1					
ANR	1329129	ReturnType	int		1329101	1					
ANR	1329130	Identifier	CondorFileTable :: get_unmapped_fd		1329101	2					
ANR	1329131	ParameterList	int fd		1329101	3					
ANR	1329132	Parameter	int fd	1462:38:36034:36039	1329101	0	True				
ANR	1329133	ParameterType	int		1329101	0					
ANR	1329134	Identifier	fd		1329101	1					
ANR	1329135	CFGEntryNode	ENTRY		1329101		True				
ANR	1329136	CFGExitNode	EXIT		1329101		True				
ANR	1329137	Symbol	resume		1329101						
ANR	1329138	Symbol	* pointers [ fd ] -> file		1329101						
ANR	1329139	Symbol	pointers [ fd ] -> file -> get_unmapped_fd		1329101						
ANR	1329140	Symbol	* fd		1329101						
ANR	1329141	Symbol	* * fd		1329101						
ANR	1329142	Symbol	* * * fd		1329101						
ANR	1329143	Symbol	* * * pointers		1329101						
ANR	1329144	Symbol	pointers [ fd ] -> file		1329101						
ANR	1329145	Symbol	* * pointers		1329101						
ANR	1329146	Symbol	fd		1329101						
ANR	1329147	Symbol	pointers		1329101						
ANR	1329148	Symbol	* pointers		1329101						
ANR	1329149	Function	CondorFileTable :: is_fd_local	1468:0:36126:36247							
ANR	1329150	FunctionDef	CondorFileTable :: is_fd_local (int fd)		1329149	0					
ANR	1329151	CompoundStatement		1469:0:36169:36247	1329149	0					
ANR	1329152	IfStatement	if ( resume ( fd ) < 0 )		1329149	0					
ANR	1329153	Condition	resume ( fd ) < 0	1470:5:36176:36187	1329149	0	True				
ANR	1329154	RelationalExpression	resume ( fd ) < 0		1329149	0		<			
ANR	1329155	CallExpression	resume ( fd )		1329149	0					
ANR	1329156	Callee	resume		1329149	0					
ANR	1329157	Identifier	resume		1329149	0					
ANR	1329158	ArgumentList	fd		1329149	1					
ANR	1329159	Argument	fd		1329149	0					
ANR	1329160	Identifier	fd		1329149	0					
ANR	1329161	PrimaryExpression	0		1329149	1					
ANR	1329162	ReturnStatement	return - 1 ;	1470:20:36191:36200	1329149	1	True				
ANR	1329163	UnaryOperationExpression	- 1		1329149	0					
ANR	1329164	UnaryOperator	-		1329149	0					
ANR	1329165	PrimaryExpression	1		1329149	1					
ANR	1329166	ReturnStatement	return pointers [ fd ] -> file -> is_file_local ( ) ;	1471:1:36203:36245	1329149	1	True				
ANR	1329167	CallExpression	pointers [ fd ] -> file -> is_file_local ( )		1329149	0					
ANR	1329168	Callee	pointers [ fd ] -> file -> is_file_local		1329149	0					
ANR	1329169	PtrMemberAccess	pointers [ fd ] -> file -> is_file_local		1329149	0					
ANR	1329170	PtrMemberAccess	pointers [ fd ] -> file		1329149	0					
ANR	1329171	ArrayIndexing	pointers [ fd ]		1329149	0					
ANR	1329172	Identifier	pointers		1329149	0					
ANR	1329173	Identifier	fd		1329149	1					
ANR	1329174	Identifier	file		1329149	1					
ANR	1329175	Identifier	is_file_local		1329149	1					
ANR	1329176	ArgumentList			1329149	1					
ANR	1329177	ReturnType	int		1329149	1					
ANR	1329178	Identifier	CondorFileTable :: is_fd_local		1329149	2					
ANR	1329179	ParameterList	int fd		1329149	3					
ANR	1329180	Parameter	int fd	1468:34:36160:36165	1329149	0	True				
ANR	1329181	ParameterType	int		1329149	0					
ANR	1329182	Identifier	fd		1329149	1					
ANR	1329183	CFGEntryNode	ENTRY		1329149		True				
ANR	1329184	CFGExitNode	EXIT		1329149		True				
ANR	1329185	Symbol	resume		1329149						
ANR	1329186	Symbol	* pointers [ fd ] -> file		1329149						
ANR	1329187	Symbol	* fd		1329149						
ANR	1329188	Symbol	* * fd		1329149						
ANR	1329189	Symbol	* * * fd		1329149						
ANR	1329190	Symbol	* * * pointers		1329149						
ANR	1329191	Symbol	pointers [ fd ] -> file		1329149						
ANR	1329192	Symbol	* * pointers		1329149						
ANR	1329193	Symbol	fd		1329149						
ANR	1329194	Symbol	* pointers		1329149						
ANR	1329195	Symbol	pointers [ fd ] -> file -> is_file_local		1329149						
ANR	1329196	Symbol	pointers		1329149						
ANR	1329197	Function	CondorFileTable :: is_file_name_local	1474:0:36250:37302							
ANR	1329198	FunctionDef	"CondorFileTable :: is_file_name_local (const char * incomplete_name , char * * local_name)"		1329197	0					
ANR	1329199	CompoundStatement		1475:0:36340:37302	1329197	0					
ANR	1329200	IdentifierDeclStatement	char * url = NULL ;	1476:1:36343:36359	1329197	0	True				
ANR	1329201	IdentifierDecl	* url = NULL		1329197	0					
ANR	1329202	IdentifierDeclType	char *		1329197	0					
ANR	1329203	Identifier	url		1329197	1					
ANR	1329204	AssignmentExpression	* url = NULL		1329197	2		=			
ANR	1329205	Identifier	NULL		1329197	0					
ANR	1329206	Identifier	NULL		1329197	1					
ANR	1329207	IdentifierDeclStatement	char * logical_name = NULL ;	1477:1:36362:36387	1329197	1	True				
ANR	1329208	IdentifierDecl	* logical_name = NULL		1329197	0					
ANR	1329209	IdentifierDeclType	char *		1329197	0					
ANR	1329210	Identifier	logical_name		1329197	1					
ANR	1329211	AssignmentExpression	* logical_name = NULL		1329197	2		=			
ANR	1329212	Identifier	NULL		1329197	0					
ANR	1329213	Identifier	NULL		1329197	1					
ANR	1329214	ExpressionStatement	assert ( local_name != NULL && * local_name == NULL )	1479:1:36391:36442	1329197	2	True				
ANR	1329215	CallExpression	assert ( local_name != NULL && * local_name == NULL )		1329197	0					
ANR	1329216	Callee	assert		1329197	0					
ANR	1329217	Identifier	assert		1329197	0					
ANR	1329218	ArgumentList	local_name != NULL && * local_name == NULL		1329197	1					
ANR	1329219	Argument	local_name != NULL && * local_name == NULL		1329197	0					
ANR	1329220	AndExpression	local_name != NULL && * local_name == NULL		1329197	0		&&			
ANR	1329221	EqualityExpression	local_name != NULL		1329197	0		!=			
ANR	1329222	Identifier	local_name		1329197	0					
ANR	1329223	Identifier	NULL		1329197	1					
ANR	1329224	EqualityExpression	* local_name == NULL		1329197	1		==			
ANR	1329225	UnaryOperationExpression	* local_name		1329197	0					
ANR	1329226	UnaryOperator	*		1329197	0					
ANR	1329227	Identifier	local_name		1329197	1					
ANR	1329228	Identifier	NULL		1329197	1					
ANR	1329229	ExpressionStatement	"complete_path ( incomplete_name , & logical_name )"	1482:1:36499:36546	1329197	3	True				
ANR	1329230	CallExpression	"complete_path ( incomplete_name , & logical_name )"		1329197	0					
ANR	1329231	Callee	complete_path		1329197	0					
ANR	1329232	Identifier	complete_path		1329197	0					
ANR	1329233	ArgumentList	incomplete_name		1329197	1					
ANR	1329234	Argument	incomplete_name		1329197	0					
ANR	1329235	Identifier	incomplete_name		1329197	0					
ANR	1329236	Argument	& logical_name		1329197	1					
ANR	1329237	UnaryOperationExpression	& logical_name		1329197	0					
ANR	1329238	UnaryOperator	&		1329197	0					
ANR	1329239	Identifier	logical_name		1329197	1					
ANR	1329240	IdentifierDeclStatement	int match = find_logical_name ( logical_name ) ;	1487:1:36643:36688	1329197	4	True				
ANR	1329241	IdentifierDecl	match = find_logical_name ( logical_name )		1329197	0					
ANR	1329242	IdentifierDeclType	int		1329197	0					
ANR	1329243	Identifier	match		1329197	1					
ANR	1329244	AssignmentExpression	match = find_logical_name ( logical_name )		1329197	2		=			
ANR	1329245	Identifier	match		1329197	0					
ANR	1329246	CallExpression	find_logical_name ( logical_name )		1329197	1					
ANR	1329247	Callee	find_logical_name		1329197	0					
ANR	1329248	Identifier	find_logical_name		1329197	0					
ANR	1329249	ArgumentList	logical_name		1329197	1					
ANR	1329250	Argument	logical_name		1329197	0					
ANR	1329251	Identifier	logical_name		1329197	0					
ANR	1329252	IfStatement	if ( match != - 1 )		1329197	5					
ANR	1329253	Condition	match != - 1	1488:4:36694:36702	1329197	0	True				
ANR	1329254	EqualityExpression	match != - 1		1329197	0		!=			
ANR	1329255	Identifier	match		1329197	0					
ANR	1329256	UnaryOperationExpression	- 1		1329197	1					
ANR	1329257	UnaryOperator	-		1329197	0					
ANR	1329258	PrimaryExpression	1		1329197	1					
ANR	1329259	CompoundStatement		15:2:368:384	1329197	1					
ANR	1329260	IdentifierDeclStatement	CondorFile * file ;	1489:2:36709:36725	1329197	0	True				
ANR	1329261	IdentifierDecl	* file		1329197	0					
ANR	1329262	IdentifierDeclType	CondorFile *		1329197	0					
ANR	1329263	Identifier	file		1329197	1					
ANR	1329264	ExpressionStatement	resume ( match )	1490:2:36729:36742	1329197	1	True				
ANR	1329265	CallExpression	resume ( match )		1329197	0					
ANR	1329266	Callee	resume		1329197	0					
ANR	1329267	Identifier	resume		1329197	0					
ANR	1329268	ArgumentList	match		1329197	1					
ANR	1329269	Argument	match		1329197	0					
ANR	1329270	Identifier	match		1329197	0					
ANR	1329271	ExpressionStatement	file = pointers [ match ] -> file	1491:2:36746:36774	1329197	2	True				
ANR	1329272	AssignmentExpression	file = pointers [ match ] -> file		1329197	0		=			
ANR	1329273	Identifier	file		1329197	0					
ANR	1329274	PtrMemberAccess	pointers [ match ] -> file		1329197	1					
ANR	1329275	ArrayIndexing	pointers [ match ]		1329197	0					
ANR	1329276	Identifier	pointers		1329197	0					
ANR	1329277	Identifier	match		1329197	1					
ANR	1329278	Identifier	file		1329197	1					
ANR	1329279	ExpressionStatement	"* local_name = strdup ( strrchr ( file -> get_url ( ) , ':' ) + 1 )"	1492:2:36778:36830	1329197	3	True				
ANR	1329280	AssignmentExpression	"* local_name = strdup ( strrchr ( file -> get_url ( ) , ':' ) + 1 )"		1329197	0		=			
ANR	1329281	UnaryOperationExpression	* local_name		1329197	0					
ANR	1329282	UnaryOperator	*		1329197	0					
ANR	1329283	Identifier	local_name		1329197	1					
ANR	1329284	CallExpression	"strdup ( strrchr ( file -> get_url ( ) , ':' ) + 1 )"		1329197	1					
ANR	1329285	Callee	strdup		1329197	0					
ANR	1329286	Identifier	strdup		1329197	0					
ANR	1329287	ArgumentList	"strrchr ( file -> get_url ( ) , ':' ) + 1"		1329197	1					
ANR	1329288	Argument	"strrchr ( file -> get_url ( ) , ':' ) + 1"		1329197	0					
ANR	1329289	AdditiveExpression	"strrchr ( file -> get_url ( ) , ':' ) + 1"		1329197	0		+			
ANR	1329290	CallExpression	"strrchr ( file -> get_url ( ) , ':' )"		1329197	0					
ANR	1329291	Callee	strrchr		1329197	0					
ANR	1329292	Identifier	strrchr		1329197	0					
ANR	1329293	ArgumentList	file -> get_url ( )		1329197	1					
ANR	1329294	Argument	file -> get_url ( )		1329197	0					
ANR	1329295	CallExpression	file -> get_url ( )		1329197	0					
ANR	1329296	Callee	file -> get_url		1329197	0					
ANR	1329297	PtrMemberAccess	file -> get_url		1329197	0					
ANR	1329298	Identifier	file		1329197	0					
ANR	1329299	Identifier	get_url		1329197	1					
ANR	1329300	ArgumentList			1329197	1					
ANR	1329301	Argument	':'		1329197	1					
ANR	1329302	PrimaryExpression	':'		1329197	0					
ANR	1329303	PrimaryExpression	1		1329197	1					
ANR	1329304	ExpressionStatement	free ( logical_name )	1493:2:36835:36855	1329197	4	True				
ANR	1329305	CallExpression	free ( logical_name )		1329197	0					
ANR	1329306	Callee	free		1329197	0					
ANR	1329307	Identifier	free		1329197	0					
ANR	1329308	ArgumentList	logical_name		1329197	1					
ANR	1329309	Argument	logical_name		1329197	0					
ANR	1329310	Identifier	logical_name		1329197	0					
ANR	1329311	ReturnStatement	return file -> is_file_local ( ) ;	1494:2:36859:36887	1329197	5	True				
ANR	1329312	CallExpression	file -> is_file_local ( )		1329197	0					
ANR	1329313	Callee	file -> is_file_local		1329197	0					
ANR	1329314	PtrMemberAccess	file -> is_file_local		1329197	0					
ANR	1329315	Identifier	file		1329197	0					
ANR	1329316	Identifier	is_file_local		1329197	1					
ANR	1329317	ArgumentList			1329197	1					
ANR	1329318	ExpressionStatement	"lookup_url ( logical_name , & url )"	1498:1:36944:36976	1329197	6	True				
ANR	1329319	CallExpression	"lookup_url ( logical_name , & url )"		1329197	0					
ANR	1329320	Callee	lookup_url		1329197	0					
ANR	1329321	Identifier	lookup_url		1329197	0					
ANR	1329322	ArgumentList	logical_name		1329197	1					
ANR	1329323	Argument	logical_name		1329197	0					
ANR	1329324	Identifier	logical_name		1329197	0					
ANR	1329325	Argument	& url		1329197	1					
ANR	1329326	UnaryOperationExpression	& url		1329197	0					
ANR	1329327	UnaryOperator	&		1329197	0					
ANR	1329328	Identifier	url		1329197	1					
ANR	1329329	ExpressionStatement	free ( logical_name )	1499:1:36979:36999	1329197	7	True				
ANR	1329330	CallExpression	free ( logical_name )		1329197	0					
ANR	1329331	Callee	free		1329197	0					
ANR	1329332	Identifier	free		1329197	0					
ANR	1329333	ArgumentList	logical_name		1329197	1					
ANR	1329334	Argument	logical_name		1329197	0					
ANR	1329335	Identifier	logical_name		1329197	0					
ANR	1329336	ExpressionStatement	"* local_name = strdup ( strrchr ( url , ':' ) + 1 )"	1502:1:37036:37076	1329197	8	True				
ANR	1329337	AssignmentExpression	"* local_name = strdup ( strrchr ( url , ':' ) + 1 )"		1329197	0		=			
ANR	1329338	UnaryOperationExpression	* local_name		1329197	0					
ANR	1329339	UnaryOperator	*		1329197	0					
ANR	1329340	Identifier	local_name		1329197	1					
ANR	1329341	CallExpression	"strdup ( strrchr ( url , ':' ) + 1 )"		1329197	1					
ANR	1329342	Callee	strdup		1329197	0					
ANR	1329343	Identifier	strdup		1329197	0					
ANR	1329344	ArgumentList	"strrchr ( url , ':' ) + 1"		1329197	1					
ANR	1329345	Argument	"strrchr ( url , ':' ) + 1"		1329197	0					
ANR	1329346	AdditiveExpression	"strrchr ( url , ':' ) + 1"		1329197	0		+			
ANR	1329347	CallExpression	"strrchr ( url , ':' )"		1329197	0					
ANR	1329348	Callee	strrchr		1329197	0					
ANR	1329349	Identifier	strrchr		1329197	0					
ANR	1329350	ArgumentList	url		1329197	1					
ANR	1329351	Argument	url		1329197	0					
ANR	1329352	Identifier	url		1329197	0					
ANR	1329353	Argument	':'		1329197	1					
ANR	1329354	PrimaryExpression	':'		1329197	0					
ANR	1329355	PrimaryExpression	1		1329197	1					
ANR	1329356	IdentifierDeclStatement	CondorFile * f = create_url_chain ( url ) ;	1505:1:37130:37167	1329197	9	True				
ANR	1329357	IdentifierDecl	* f = create_url_chain ( url )		1329197	0					
ANR	1329358	IdentifierDeclType	CondorFile *		1329197	0					
ANR	1329359	Identifier	f		1329197	1					
ANR	1329360	AssignmentExpression	* f = create_url_chain ( url )		1329197	2		=			
ANR	1329361	Identifier	f		1329197	0					
ANR	1329362	CallExpression	create_url_chain ( url )		1329197	1					
ANR	1329363	Callee	create_url_chain		1329197	0					
ANR	1329364	Identifier	create_url_chain		1329197	0					
ANR	1329365	ArgumentList	url		1329197	1					
ANR	1329366	Argument	url		1329197	0					
ANR	1329367	Identifier	url		1329197	0					
ANR	1329368	ExpressionStatement	free ( url )	1506:1:37170:37181	1329197	10	True				
ANR	1329369	CallExpression	free ( url )		1329197	0					
ANR	1329370	Callee	free		1329197	0					
ANR	1329371	Identifier	free		1329197	0					
ANR	1329372	ArgumentList	url		1329197	1					
ANR	1329373	Argument	url		1329197	0					
ANR	1329374	Identifier	url		1329197	0					
ANR	1329375	IfStatement	if ( f )		1329197	11					
ANR	1329376	Condition	f	1507:4:37187:37187	1329197	0	True				
ANR	1329377	Identifier	f		1329197	0					
ANR	1329378	CompoundStatement		33:7:849:849	1329197	1					
ANR	1329379	IfStatement	if ( f -> is_file_local ( ) )		1329197	0					
ANR	1329380	Condition	f -> is_file_local ( )	1508:6:37198:37215	1329197	0	True				
ANR	1329381	CallExpression	f -> is_file_local ( )		1329197	0					
ANR	1329382	Callee	f -> is_file_local		1329197	0					
ANR	1329383	PtrMemberAccess	f -> is_file_local		1329197	0					
ANR	1329384	Identifier	f		1329197	0					
ANR	1329385	Identifier	is_file_local		1329197	1					
ANR	1329386	ArgumentList			1329197	1					
ANR	1329387	CompoundStatement		34:27:878:878	1329197	1					
ANR	1329388	Statement	delete	1509:3:37224:37229	1329197	0	True				
ANR	1329389	ExpressionStatement	f	1509:10:37231:37232	1329197	1	True				
ANR	1329390	Identifier	f		1329197	0					
ANR	1329391	ReturnStatement	return 1 ;	1510:3:37237:37245	1329197	2	True				
ANR	1329392	PrimaryExpression	1		1329197	0					
ANR	1329393	ElseStatement	else		1329197	0					
ANR	1329394	CompoundStatement		37:9:915:915	1329197	0					
ANR	1329395	Statement	delete	1512:3:37261:37266	1329197	0	True				
ANR	1329396	ExpressionStatement	f	1512:10:37268:37269	1329197	1	True				
ANR	1329397	Identifier	f		1329197	0					
ANR	1329398	ReturnStatement	return 0 ;	1513:3:37274:37282	1329197	2	True				
ANR	1329399	PrimaryExpression	0		1329197	0					
ANR	1329400	ReturnStatement	return 0 ;	1516:1:37292:37300	1329197	12	True				
ANR	1329401	PrimaryExpression	0		1329197	0					
ANR	1329402	ReturnType	int		1329197	1					
ANR	1329403	Identifier	CondorFileTable :: is_file_name_local		1329197	2					
ANR	1329404	ParameterList	"const char * incomplete_name , char * * local_name"		1329197	3					
ANR	1329405	Parameter	const char * incomplete_name	1474:41:36291:36317	1329197	0	True				
ANR	1329406	ParameterType	const char *		1329197	0					
ANR	1329407	Identifier	incomplete_name		1329197	1					
ANR	1329408	Parameter	char * * local_name	1474:70:36320:36336	1329197	1	True				
ANR	1329409	ParameterType	char * *		1329197	0					
ANR	1329410	Identifier	local_name		1329197	1					
ANR	1329411	CFGEntryNode	ENTRY		1329197		True				
ANR	1329412	CFGExitNode	EXIT		1329197		True				
ANR	1329413	Symbol	* match		1329197						
ANR	1329414	Symbol	file -> is_file_local		1329197						
ANR	1329415	Symbol	logical_name		1329197						
ANR	1329416	Symbol	create_url_chain		1329197						
ANR	1329417	Symbol	incomplete_name		1329197						
ANR	1329418	Symbol	find_logical_name		1329197						
ANR	1329419	Symbol	& url		1329197						
ANR	1329420	Symbol	file		1329197						
ANR	1329421	Symbol	f -> is_file_local		1329197						
ANR	1329422	Symbol	* * pointers		1329197						
ANR	1329423	Symbol	pointers		1329197						
ANR	1329424	Symbol	NULL		1329197						
ANR	1329425	Symbol	f		1329197						
ANR	1329426	Symbol	match		1329197						
ANR	1329427	Symbol	pointers [ match ] -> file		1329197						
ANR	1329428	Symbol	& logical_name		1329197						
ANR	1329429	Symbol	* file		1329197						
ANR	1329430	Symbol	local_name		1329197						
ANR	1329431	Symbol	url		1329197						
ANR	1329432	Symbol	* pointers		1329197						
ANR	1329433	Symbol	* f		1329197						
ANR	1329434	Symbol	strrchr		1329197						
ANR	1329435	Symbol	* * match		1329197						
ANR	1329436	Symbol	* local_name		1329197						
ANR	1329437	Symbol	file -> get_url		1329197						
ANR	1329438	Symbol	strdup		1329197						
