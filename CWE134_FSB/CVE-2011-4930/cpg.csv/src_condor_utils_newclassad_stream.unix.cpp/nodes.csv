command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4828118	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_newclassad_stream.unix.cpp								
ANR	4828119	Function	StreamPut	27:0:949:1132							
ANR	4828120	FunctionDef	"StreamPut (Stream * stream , const classad :: ClassAd & ad)"		4828119	0					
ANR	4828121	CompoundStatement		29:0:1009:1132	4828119	0					
ANR	4828122	IdentifierDeclStatement	classad :: ClassAdUnParser unparser ;	30:1:1012:1045	4828119	0	True				
ANR	4828123	IdentifierDecl	unparser		4828119	0					
ANR	4828124	IdentifierDeclType	classad :: ClassAdUnParser		4828119	0					
ANR	4828125	Identifier	unparser		4828119	1					
ANR	4828126	IdentifierDeclStatement	string str ;	31:1:1048:1063	4828119	1	True				
ANR	4828127	IdentifierDecl	str		4828119	0					
ANR	4828128	IdentifierDeclType	string		4828119	0					
ANR	4828129	Identifier	str		4828119	1					
ANR	4828130	ExpressionStatement	"unparser . Unparse ( str , & ad )"	32:1:1066:1094	4828119	2	True				
ANR	4828131	CallExpression	"unparser . Unparse ( str , & ad )"		4828119	0					
ANR	4828132	Callee	unparser . Unparse		4828119	0					
ANR	4828133	MemberAccess	unparser . Unparse		4828119	0					
ANR	4828134	Identifier	unparser		4828119	0					
ANR	4828135	Identifier	Unparse		4828119	1					
ANR	4828136	ArgumentList	str		4828119	1					
ANR	4828137	Argument	str		4828119	0					
ANR	4828138	Identifier	str		4828119	0					
ANR	4828139	Argument	& ad		4828119	1					
ANR	4828140	UnaryOperationExpression	& ad		4828119	0					
ANR	4828141	UnaryOperator	&		4828119	0					
ANR	4828142	Identifier	ad		4828119	1					
ANR	4828143	ReturnStatement	return stream -> put ( str . c_str ( ) ) ;	33:1:1097:1130	4828119	3	True				
ANR	4828144	CallExpression	stream -> put ( str . c_str ( ) )		4828119	0					
ANR	4828145	Callee	stream -> put		4828119	0					
ANR	4828146	PtrMemberAccess	stream -> put		4828119	0					
ANR	4828147	Identifier	stream		4828119	0					
ANR	4828148	Identifier	put		4828119	1					
ANR	4828149	ArgumentList	str . c_str ( )		4828119	1					
ANR	4828150	Argument	str . c_str ( )		4828119	0					
ANR	4828151	CallExpression	str . c_str ( )		4828119	0					
ANR	4828152	Callee	str . c_str		4828119	0					
ANR	4828153	MemberAccess	str . c_str		4828119	0					
ANR	4828154	Identifier	str		4828119	0					
ANR	4828155	Identifier	c_str		4828119	1					
ANR	4828156	ArgumentList			4828119	1					
ANR	4828157	ReturnType	int		4828119	1					
ANR	4828158	Identifier	StreamPut		4828119	2					
ANR	4828159	ParameterList	"Stream * stream , const classad :: ClassAd & ad"		4828119	3					
ANR	4828160	Parameter	Stream * stream	28:11:964:977	4828119	0	True				
ANR	4828161	ParameterType	Stream *		4828119	0					
ANR	4828162	Identifier	stream		4828119	1					
ANR	4828163	Parameter	const classad :: ClassAd & ad	28:27:980:1005	4828119	1	True				
ANR	4828164	ParameterType	const classad :: ClassAd &		4828119	0					
ANR	4828165	Identifier	ad		4828119	1					
ANR	4828166	CFGEntryNode	ENTRY		4828119		True				
ANR	4828167	CFGExitNode	EXIT		4828119		True				
ANR	4828168	Symbol	str		4828119						
ANR	4828169	Symbol	ad		4828119						
ANR	4828170	Symbol	stream		4828119						
ANR	4828171	Symbol	stream -> put		4828119						
ANR	4828172	Symbol	* stream		4828119						
ANR	4828173	Symbol	str . c_str		4828119						
ANR	4828174	Symbol	unparser		4828119						
ANR	4828175	Symbol	& ad		4828119						
ANR	4828176	Function	StreamPut	36:0:1135:1495							
ANR	4828177	FunctionDef	"StreamPut (Stream * stream , list < const classad :: ClassAd * > & ad_list)"		4828176	0					
ANR	4828178	CompoundStatement		38:0:1208:1495	4828176	0					
ANR	4828179	IfStatement	if ( ! stream -> put ( ( int ) ad_list . size ( ) ) )		4828176	0					
ANR	4828180	Condition	! stream -> put ( ( int ) ad_list . size ( ) )	39:6:1216:1251	4828176	0	True				
ANR	4828181	UnaryOperationExpression	! stream -> put ( ( int ) ad_list . size ( ) )		4828176	0					
ANR	4828182	UnaryOperator	!		4828176	0					
ANR	4828183	CallExpression	stream -> put ( ( int ) ad_list . size ( ) )		4828176	1					
ANR	4828184	Callee	stream -> put		4828176	0					
ANR	4828185	PtrMemberAccess	stream -> put		4828176	0					
ANR	4828186	Identifier	stream		4828176	0					
ANR	4828187	Identifier	put		4828176	1					
ANR	4828188	ArgumentList	( int ) ad_list . size ( )		4828176	1					
ANR	4828189	Argument	( int ) ad_list . size ( )		4828176	0					
ANR	4828190	CastExpression	( int ) ad_list . size ( )		4828176	0					
ANR	4828191	CastTarget	int		4828176	0					
ANR	4828192	CallExpression	ad_list . size ( )		4828176	1					
ANR	4828193	Callee	ad_list . size		4828176	0					
ANR	4828194	MemberAccess	ad_list . size		4828176	0					
ANR	4828195	Identifier	ad_list		4828176	0					
ANR	4828196	Identifier	size		4828176	1					
ANR	4828197	ArgumentList			4828176	1					
ANR	4828198	CompoundStatement		2:45:46:46	4828176	1					
ANR	4828199	ReturnStatement	return 0 ;	40:2:1259:1267	4828176	0	True				
ANR	4828200	PrimaryExpression	0		4828176	0					
ANR	4828201	IdentifierDeclStatement	list < const classad :: ClassAd * > :: iterator iter ;	42:1:1273:1319	4828176	1	True				
ANR	4828202	IdentifierDecl	iter		4828176	0					
ANR	4828203	IdentifierDeclType	list < const classad :: ClassAd * > :: iterator		4828176	0					
ANR	4828204	Identifier	iter		4828176	1					
ANR	4828205	ForStatement	for ( iter = ad_list . begin ( ) ; iter != ad_list . end ( ) ; iter ++ )		4828176	2					
ANR	4828206	ForInit	iter = ad_list . begin ( ) ;	43:7:1328:1350	4828176	0	True				
ANR	4828207	AssignmentExpression	iter = ad_list . begin ( )		4828176	0		=			
ANR	4828208	Identifier	iter		4828176	0					
ANR	4828209	CallExpression	ad_list . begin ( )		4828176	1					
ANR	4828210	Callee	ad_list . begin		4828176	0					
ANR	4828211	MemberAccess	ad_list . begin		4828176	0					
ANR	4828212	Identifier	ad_list		4828176	0					
ANR	4828213	Identifier	begin		4828176	1					
ANR	4828214	ArgumentList			4828176	1					
ANR	4828215	Condition	iter != ad_list . end ( )	43:32:1353:1373	4828176	1	True				
ANR	4828216	EqualityExpression	iter != ad_list . end ( )		4828176	0		!=			
ANR	4828217	Identifier	iter		4828176	0					
ANR	4828218	CallExpression	ad_list . end ( )		4828176	1					
ANR	4828219	Callee	ad_list . end		4828176	0					
ANR	4828220	MemberAccess	ad_list . end		4828176	0					
ANR	4828221	Identifier	ad_list		4828176	0					
ANR	4828222	Identifier	end		4828176	1					
ANR	4828223	ArgumentList			4828176	1					
ANR	4828224	PostIncDecOperationExpression	iter ++	43:56:1377:1382	4828176	2	True				
ANR	4828225	Identifier	iter		4828176	0					
ANR	4828226	IncDec	++		4828176	1					
ANR	4828227	CompoundStatement		8:2:182:216	4828176	3					
ANR	4828228	IdentifierDeclStatement	const classad :: ClassAd * ad = * iter ;	45:2:1391:1425	4828176	0	True				
ANR	4828229	IdentifierDecl	* ad = * iter		4828176	0					
ANR	4828230	IdentifierDeclType	const classad :: ClassAd *		4828176	0					
ANR	4828231	Identifier	ad		4828176	1					
ANR	4828232	AssignmentExpression	* ad = * iter		4828176	2		=			
ANR	4828233	Identifier	ad		4828176	0					
ANR	4828234	UnaryOperationExpression	* iter		4828176	1					
ANR	4828235	UnaryOperator	*		4828176	0					
ANR	4828236	Identifier	iter		4828176	1					
ANR	4828237	IfStatement	"if ( ! StreamPut ( stream , * ad ) )"		4828176	1					
ANR	4828238	Condition	"! StreamPut ( stream , * ad )"	46:7:1434:1458	4828176	0	True				
ANR	4828239	UnaryOperationExpression	"! StreamPut ( stream , * ad )"		4828176	0					
ANR	4828240	UnaryOperator	!		4828176	0					
ANR	4828241	CallExpression	"StreamPut ( stream , * ad )"		4828176	1					
ANR	4828242	Callee	StreamPut		4828176	0					
ANR	4828243	Identifier	StreamPut		4828176	0					
ANR	4828244	ArgumentList	stream		4828176	1					
ANR	4828245	Argument	stream		4828176	0					
ANR	4828246	Identifier	stream		4828176	0					
ANR	4828247	Argument	* ad		4828176	1					
ANR	4828248	UnaryOperationExpression	* ad		4828176	0					
ANR	4828249	UnaryOperator	*		4828176	0					
ANR	4828250	Identifier	ad		4828176	1					
ANR	4828251	CompoundStatement		9:35:253:253	4828176	1					
ANR	4828252	ReturnStatement	return 0 ;	47:3:1467:1475	4828176	0	True				
ANR	4828253	PrimaryExpression	0		4828176	0					
ANR	4828254	ReturnStatement	return 1 ;	50:1:1485:1493	4828176	3	True				
ANR	4828255	PrimaryExpression	1		4828176	0					
ANR	4828256	ReturnType	int		4828176	1					
ANR	4828257	Identifier	StreamPut		4828176	2					
ANR	4828258	ParameterList	"Stream * stream , list < const classad :: ClassAd * > & ad_list"		4828176	3					
ANR	4828259	Parameter	Stream * stream	37:11:1150:1163	4828176	0	True				
ANR	4828260	ParameterType	Stream *		4828176	0					
ANR	4828261	Identifier	stream		4828176	1					
ANR	4828262	Parameter	list < const classad :: ClassAd * > & ad_list	37:27:1166:1204	4828176	1	True				
ANR	4828263	ParameterType	list < const classad :: ClassAd * > &		4828176	0					
ANR	4828264	Identifier	ad_list		4828176	1					
ANR	4828265	CFGEntryNode	ENTRY		4828176		True				
ANR	4828266	CFGExitNode	EXIT		4828176		True				
ANR	4828267	Symbol	ad_list . end		4828176						
ANR	4828268	Symbol	* iter		4828176						
ANR	4828269	Symbol	ad		4828176						
ANR	4828270	Symbol	ad_list		4828176						
ANR	4828271	Symbol	stream		4828176						
ANR	4828272	Symbol	stream -> put		4828176						
ANR	4828273	Symbol	* stream		4828176						
ANR	4828274	Symbol	iter		4828176						
ANR	4828275	Symbol	ad_list . begin		4828176						
ANR	4828276	Symbol	* ad		4828176						
ANR	4828277	Symbol	ad_list . size		4828176						
ANR	4828278	Symbol	StreamPut		4828176						
ANR	4828279	Function	StreamGet	53:0:1498:1871							
ANR	4828280	FunctionDef	"StreamGet (Stream * stream , list < classad :: ClassAd * > & ad_list)"		4828279	0					
ANR	4828281	CompoundStatement		54:0:1565:1871	4828279	0					
ANR	4828282	IdentifierDeclStatement	int num_ads ;	55:1:1568:1580	4828279	0	True				
ANR	4828283	IdentifierDecl	num_ads		4828279	0					
ANR	4828284	IdentifierDeclType	int		4828279	0					
ANR	4828285	Identifier	num_ads		4828279	1					
ANR	4828286	IfStatement	if ( ! stream -> get ( num_ads ) )		4828279	1					
ANR	4828287	Condition	! stream -> get ( num_ads )	56:6:1588:1610	4828279	0	True				
ANR	4828288	UnaryOperationExpression	! stream -> get ( num_ads )		4828279	0					
ANR	4828289	UnaryOperator	!		4828279	0					
ANR	4828290	CallExpression	stream -> get ( num_ads )		4828279	1					
ANR	4828291	Callee	stream -> get		4828279	0					
ANR	4828292	PtrMemberAccess	stream -> get		4828279	0					
ANR	4828293	Identifier	stream		4828279	0					
ANR	4828294	Identifier	get		4828279	1					
ANR	4828295	ArgumentList	num_ads		4828279	1					
ANR	4828296	Argument	num_ads		4828279	0					
ANR	4828297	Identifier	num_ads		4828279	0					
ANR	4828298	CompoundStatement		3:32:48:48	4828279	1					
ANR	4828299	ReturnStatement	return 0 ;	57:2:1618:1626	4828279	0	True				
ANR	4828300	PrimaryExpression	0		4828279	0					
ANR	4828301	IfStatement	if ( num_ads < 0 )		4828279	2					
ANR	4828302	Condition	num_ads < 0	59:6:1637:1647	4828279	0	True				
ANR	4828303	RelationalExpression	num_ads < 0		4828279	0		<			
ANR	4828304	Identifier	num_ads		4828279	0					
ANR	4828305	PrimaryExpression	0		4828279	1					
ANR	4828306	CompoundStatement		6:20:85:85	4828279	1					
ANR	4828307	ReturnStatement	return 0 ;	60:2:1655:1663	4828279	0	True				
ANR	4828308	PrimaryExpression	0		4828279	0					
ANR	4828309	ForStatement	for ( int ad_num = 0 ; ad_num < num_ads ; ad_num ++ )		4828279	3					
ANR	4828310	ForInit	int ad_num = 0 ;	62:6:1674:1688	4828279	0	True				
ANR	4828311	IdentifierDeclStatement	int ad_num = 0 ;		4828279	0					
ANR	4828312	IdentifierDecl	ad_num = 0		4828279	0					
ANR	4828313	IdentifierDeclType	int		4828279	0					
ANR	4828314	Identifier	ad_num		4828279	1					
ANR	4828315	AssignmentExpression	ad_num = 0		4828279	2		=			
ANR	4828316	Identifier	ad_num		4828279	0					
ANR	4828317	PrimaryExpression	0		4828279	1					
ANR	4828318	Condition	ad_num < num_ads	62:23:1691:1706	4828279	1	True				
ANR	4828319	RelationalExpression	ad_num < num_ads		4828279	0		<			
ANR	4828320	Identifier	ad_num		4828279	0					
ANR	4828321	Identifier	num_ads		4828279	1					
ANR	4828322	PostIncDecOperationExpression	ad_num ++	62:42:1710:1717	4828279	2	True				
ANR	4828323	Identifier	ad_num		4828279	0					
ANR	4828324	IncDec	++		4828279	1					
ANR	4828325	CompoundStatement		9:53:155:155	4828279	3					
ANR	4828326	Statement	classad	63:2:1725:1731	4828279	0	True				
ANR	4828327	Statement	::	63:9:1732:1733	4828279	1	True				
ANR	4828328	Statement	ClassAd	63:11:1734:1740	4828279	2	True				
ANR	4828329	Statement	*	63:19:1742:1742	4828279	3	True				
ANR	4828330	Statement	ad	63:20:1743:1744	4828279	4	True				
ANR	4828331	Statement	=	63:23:1746:1746	4828279	5	True				
ANR	4828332	Statement	new	63:25:1748:1750	4828279	6	True				
ANR	4828333	ExpressionStatement	classad :: ClassAd	63:29:1752:1768	4828279	7	True				
ANR	4828334	Identifier	classad :: ClassAd		4828279	0					
ANR	4828335	IfStatement	"if ( ! StreamGet ( stream , * ad ) )"		4828279	8					
ANR	4828336	Condition	"! StreamGet ( stream , * ad )"	64:7:1777:1801	4828279	0	True				
ANR	4828337	UnaryOperationExpression	"! StreamGet ( stream , * ad )"		4828279	0					
ANR	4828338	UnaryOperator	!		4828279	0					
ANR	4828339	CallExpression	"StreamGet ( stream , * ad )"		4828279	1					
ANR	4828340	Callee	StreamGet		4828279	0					
ANR	4828341	Identifier	StreamGet		4828279	0					
ANR	4828342	ArgumentList	stream		4828279	1					
ANR	4828343	Argument	stream		4828279	0					
ANR	4828344	Identifier	stream		4828279	0					
ANR	4828345	Argument	* ad		4828279	1					
ANR	4828346	UnaryOperationExpression	* ad		4828279	0					
ANR	4828347	UnaryOperator	*		4828279	0					
ANR	4828348	Identifier	ad		4828279	1					
ANR	4828349	CompoundStatement		11:35:239:239	4828279	1					
ANR	4828350	ReturnStatement	return 0 ;	65:3:1810:1818	4828279	0	True				
ANR	4828351	PrimaryExpression	0		4828279	0					
ANR	4828352	ExpressionStatement	ad_list . push_back ( ad )	67:2:1826:1849	4828279	9	True				
ANR	4828353	CallExpression	ad_list . push_back ( ad )		4828279	0					
ANR	4828354	Callee	ad_list . push_back		4828279	0					
ANR	4828355	MemberAccess	ad_list . push_back		4828279	0					
ANR	4828356	Identifier	ad_list		4828279	0					
ANR	4828357	Identifier	push_back		4828279	1					
ANR	4828358	ArgumentList	ad		4828279	1					
ANR	4828359	Argument	ad		4828279	0					
ANR	4828360	Identifier	ad		4828279	0					
ANR	4828361	ReturnStatement	return num_ads ;	69:1:1855:1869	4828279	4	True				
ANR	4828362	Identifier	num_ads		4828279	0					
ANR	4828363	ReturnType	int		4828279	1					
ANR	4828364	Identifier	StreamGet		4828279	2					
ANR	4828365	ParameterList	"Stream * stream , list < classad :: ClassAd * > & ad_list"		4828279	3					
ANR	4828366	Parameter	Stream * stream	53:15:1513:1526	4828279	0	True				
ANR	4828367	ParameterType	Stream *		4828279	0					
ANR	4828368	Identifier	stream		4828279	1					
ANR	4828369	Parameter	list < classad :: ClassAd * > & ad_list	53:31:1529:1561	4828279	1	True				
ANR	4828370	ParameterType	list < classad :: ClassAd * > &		4828279	0					
ANR	4828371	Identifier	ad_list		4828279	1					
ANR	4828372	CFGEntryNode	ENTRY		4828279		True				
ANR	4828373	CFGExitNode	EXIT		4828279		True				
ANR	4828374	Symbol	stream -> get		4828279						
ANR	4828375	Symbol	ad		4828279						
ANR	4828376	Symbol	ad_list		4828279						
ANR	4828377	Symbol	stream		4828279						
ANR	4828378	Symbol	num_ads		4828279						
ANR	4828379	Symbol	StreamGet		4828279						
ANR	4828380	Symbol	* stream		4828279						
ANR	4828381	Symbol	* ad		4828279						
ANR	4828382	Symbol	ad_num		4828279						
ANR	4828383	Function	StreamGet	72:0:1874:2190							
ANR	4828384	FunctionDef	"StreamGet (Stream * stream , classad :: ClassAd & ad)"		4828383	0					
ANR	4828385	CompoundStatement		73:0:1928:2190	4828383	0					
ANR	4828386	IdentifierDeclStatement	char * cstr = NULL ;	74:1:1931:1949	4828383	0	True				
ANR	4828387	IdentifierDecl	* cstr = NULL		4828383	0					
ANR	4828388	IdentifierDeclType	char *		4828383	0					
ANR	4828389	Identifier	cstr		4828383	1					
ANR	4828390	AssignmentExpression	* cstr = NULL		4828383	2		=			
ANR	4828391	Identifier	NULL		4828383	0					
ANR	4828392	Identifier	NULL		4828383	1					
ANR	4828393	IfStatement	if ( ! stream -> get ( cstr ) )		4828383	1					
ANR	4828394	Condition	! stream -> get ( cstr )	75:6:1957:1976	4828383	0	True				
ANR	4828395	UnaryOperationExpression	! stream -> get ( cstr )		4828383	0					
ANR	4828396	UnaryOperator	!		4828383	0					
ANR	4828397	CallExpression	stream -> get ( cstr )		4828383	1					
ANR	4828398	Callee	stream -> get		4828383	0					
ANR	4828399	PtrMemberAccess	stream -> get		4828383	0					
ANR	4828400	Identifier	stream		4828383	0					
ANR	4828401	Identifier	get		4828383	1					
ANR	4828402	ArgumentList	cstr		4828383	1					
ANR	4828403	Argument	cstr		4828383	0					
ANR	4828404	Identifier	cstr		4828383	0					
ANR	4828405	CompoundStatement		3:29:51:51	4828383	1					
ANR	4828406	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""get( %p ) failed\\n"" , cstr )"	76:2:1984:2034	4828383	0	True				
ANR	4828407	CallExpression	"dprintf ( D_FULLDEBUG , ""get( %p ) failed\\n"" , cstr )"		4828383	0					
ANR	4828408	Callee	dprintf		4828383	0					
ANR	4828409	Identifier	dprintf		4828383	0					
ANR	4828410	ArgumentList	D_FULLDEBUG		4828383	1					
ANR	4828411	Argument	D_FULLDEBUG		4828383	0					
ANR	4828412	Identifier	D_FULLDEBUG		4828383	0					
ANR	4828413	Argument	"""get( %p ) failed\\n"""		4828383	1					
ANR	4828414	PrimaryExpression	"""get( %p ) failed\\n"""		4828383	0					
ANR	4828415	Argument	cstr		4828383	2					
ANR	4828416	Identifier	cstr		4828383	0					
ANR	4828417	ReturnStatement	return 0 ;	77:2:2038:2046	4828383	1	True				
ANR	4828418	PrimaryExpression	0		4828383	0					
ANR	4828419	IdentifierDeclStatement	classad :: ClassAdParser parser ;	79:1:2052:2081	4828383	2	True				
ANR	4828420	IdentifierDecl	parser		4828383	0					
ANR	4828421	IdentifierDeclType	classad :: ClassAdParser		4828383	0					
ANR	4828422	Identifier	parser		4828383	1					
ANR	4828423	IfStatement	"if ( ! parser . ParseClassAd ( cstr , ad , true ) )"		4828383	3					
ANR	4828424	Condition	"! parser . ParseClassAd ( cstr , ad , true )"	80:6:2089:2127	4828383	0	True				
ANR	4828425	UnaryOperationExpression	"! parser . ParseClassAd ( cstr , ad , true )"		4828383	0					
ANR	4828426	UnaryOperator	!		4828383	0					
ANR	4828427	CallExpression	"parser . ParseClassAd ( cstr , ad , true )"		4828383	1					
ANR	4828428	Callee	parser . ParseClassAd		4828383	0					
ANR	4828429	MemberAccess	parser . ParseClassAd		4828383	0					
ANR	4828430	Identifier	parser		4828383	0					
ANR	4828431	Identifier	ParseClassAd		4828383	1					
ANR	4828432	ArgumentList	cstr		4828383	1					
ANR	4828433	Argument	cstr		4828383	0					
ANR	4828434	Identifier	cstr		4828383	0					
ANR	4828435	Argument	ad		4828383	1					
ANR	4828436	Identifier	ad		4828383	0					
ANR	4828437	Argument	true		4828383	2					
ANR	4828438	Identifier	true		4828383	0					
ANR	4828439	CompoundStatement		8:48:202:202	4828383	1					
ANR	4828440	ExpressionStatement	free ( cstr )	81:2:2135:2147	4828383	0	True				
ANR	4828441	CallExpression	free ( cstr )		4828383	0					
ANR	4828442	Callee	free		4828383	0					
ANR	4828443	Identifier	free		4828383	0					
ANR	4828444	ArgumentList	cstr		4828383	1					
ANR	4828445	Argument	cstr		4828383	0					
ANR	4828446	Identifier	cstr		4828383	0					
ANR	4828447	ReturnStatement	return 0 ;	82:2:2151:2159	4828383	1	True				
ANR	4828448	PrimaryExpression	0		4828383	0					
ANR	4828449	ExpressionStatement	free ( cstr )	84:1:2165:2177	4828383	4	True				
ANR	4828450	CallExpression	free ( cstr )		4828383	0					
ANR	4828451	Callee	free		4828383	0					
ANR	4828452	Identifier	free		4828383	0					
ANR	4828453	ArgumentList	cstr		4828383	1					
ANR	4828454	Argument	cstr		4828383	0					
ANR	4828455	Identifier	cstr		4828383	0					
ANR	4828456	ReturnStatement	return 1 ;	85:1:2180:2188	4828383	5	True				
ANR	4828457	PrimaryExpression	1		4828383	0					
ANR	4828458	ReturnType	int		4828383	1					
ANR	4828459	Identifier	StreamGet		4828383	2					
ANR	4828460	ParameterList	"Stream * stream , classad :: ClassAd & ad"		4828383	3					
ANR	4828461	Parameter	Stream * stream	72:15:1889:1902	4828383	0	True				
ANR	4828462	ParameterType	Stream *		4828383	0					
ANR	4828463	Identifier	stream		4828383	1					
ANR	4828464	Parameter	classad :: ClassAd & ad	72:31:1905:1924	4828383	1	True				
ANR	4828465	ParameterType	classad :: ClassAd &		4828383	0					
ANR	4828466	Identifier	ad		4828383	1					
ANR	4828467	CFGEntryNode	ENTRY		4828383		True				
ANR	4828468	CFGExitNode	EXIT		4828383		True				
ANR	4828469	Symbol	cstr		4828383						
ANR	4828470	Symbol	stream -> get		4828383						
ANR	4828471	Symbol	ad		4828383						
ANR	4828472	Symbol	NULL		4828383						
ANR	4828473	Symbol	parser		4828383						
ANR	4828474	Symbol	stream		4828383						
ANR	4828475	Symbol	* stream		4828383						
ANR	4828476	Symbol	true		4828383						
ANR	4828477	Symbol	D_FULLDEBUG		4828383						
ANR	4828478	Symbol	parser . ParseClassAd		4828383						
