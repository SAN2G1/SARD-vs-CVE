command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4250009	File	data/converged/CVE-2011-4930_htcondor/src_condor_tools_tool.cpp								
ANR	4250010	DeclStmt									
ANR	4250011	Decl							void	void ( void )	computeRealAction
ANR	4250012	DeclStmt									
ANR	4250013	Decl							bool	"bool ( DaemonList * daemon_list , StringList * name_list )"	resolveNames
ANR	4250014	DeclStmt									
ANR	4250015	Decl							void	void ( Daemon * d )	doCommand
ANR	4250016	DeclStmt									
ANR	4250017	Decl							int	"int ( int argc , char * argv [ ] , char * MyName )"	doCommands
ANR	4250018	DeclStmt									
ANR	4250019	Decl							void	void ( )	version
ANR	4250020	DeclStmt									
ANR	4250021	Decl							void	void ( )	handleAll
ANR	4250022	DeclStmt									
ANR	4250023	Decl							void	void ( char * addr )	doSquawk
ANR	4250024	DeclStmt									
ANR	4250025	Decl							int	"int ( char * line , char * addr )"	handleSquawk
ANR	4250026	DeclStmt									
ANR	4250027	Decl							int	int ( char * addr )	doSquawkReconnect
ANR	4250028	DeclStmt									
ANR	4250029	Decl							void	void ( char * token )	squawkHelp
ANR	4250030	DeclStmt									
ANR	4250031	Decl							int	"int ( ClassAd * ad , char * filename )"	printAdToFile
ANR	4250032	DeclStmt									
ANR	4250033	Decl							int	"int ( const char * s1 , const char * s2 )"	strncmp_auto
ANR	4250034	DeclStmt									
ANR	4250035	Decl							int	int	cmd
ANR	4250036	DeclStmt									
ANR	4250037	Decl							int	int	real_cmd
ANR	4250038	DeclStmt									
ANR	4250039	Decl							daemon_t	daemon_t	dt
ANR	4250040	DeclStmt									
ANR	4250041	Decl							daemon_t	daemon_t	real_dt
ANR	4250042	DeclStmt									
ANR	4250043	Decl							DCCollector	DCCollector *	pool
ANR	4250044	DeclStmt									
ANR	4250045	Decl							bool	bool	fast
ANR	4250046	DeclStmt									
ANR	4250047	Decl							bool	bool	peaceful_shutdown
ANR	4250048	DeclStmt									
ANR	4250049	Decl							bool	bool	full
ANR	4250050	DeclStmt									
ANR	4250051	Decl							bool	bool	all
ANR	4250052	DeclStmt									
ANR	4250053	Decl							char	char *	constraint
ANR	4250054	DeclStmt									
ANR	4250055	Decl							const char	const char *	subsys
ANR	4250056	DeclStmt									
ANR	4250057	Decl							const char	const char *	exec_program
ANR	4250058	DeclStmt									
ANR	4250059	Decl							int	int	takes_subsys
ANR	4250060	DeclStmt									
ANR	4250061	Decl							int	int	cmd_set
ANR	4250062	DeclStmt									
ANR	4250063	Decl							char	char *	subsys_arg
ANR	4250064	DeclStmt									
ANR	4250065	Decl							bool	bool	IgnoreMissingDaemon
ANR	4250066	DeclStmt									
ANR	4250067	Decl							bool	bool	all_good
ANR	4250068	DeclStmt									
ANR	4250069	Decl							"HashTable < MyString , bool >"	"HashTable < MyString , bool >"	addresses_sent
ANR	4250070	Function	usage	92:0:2754:7631							
ANR	4250071	FunctionDef	"usage (char * str , int iExitCode)"		4250070	0					
ANR	4250072	CompoundStatement		94:0:2793:7631	4250070	0					
ANR	4250073	IfStatement	if ( ! str )		4250070	0					
ANR	4250074	Condition	! str	95:5:2800:2804	4250070	0	True				
ANR	4250075	UnaryOperationExpression	! str		4250070	0					
ANR	4250076	UnaryOperator	!		4250070	0					
ANR	4250077	Identifier	str		4250070	1					
ANR	4250078	CompoundStatement		2:13:14:14	4250070	1					
ANR	4250079	ExpressionStatement	"fprintf ( stderr , ""Use \\""-help\\"" to see usage information\\n"" )"	96:2:2812:2873	4250070	0	True				
ANR	4250080	CallExpression	"fprintf ( stderr , ""Use \\""-help\\"" to see usage information\\n"" )"		4250070	0					
ANR	4250081	Callee	fprintf		4250070	0					
ANR	4250082	Identifier	fprintf		4250070	0					
ANR	4250083	ArgumentList	stderr		4250070	1					
ANR	4250084	Argument	stderr		4250070	0					
ANR	4250085	Identifier	stderr		4250070	0					
ANR	4250086	Argument	"""Use \\""-help\\"" to see usage information\\n"""		4250070	1					
ANR	4250087	PrimaryExpression	"""Use \\""-help\\"" to see usage information\\n"""		4250070	0					
ANR	4250088	ExpressionStatement	exit ( 1 )	97:2:2877:2886	4250070	1	True				
ANR	4250089	CallExpression	exit ( 1 )		4250070	0					
ANR	4250090	Callee	exit		4250070	0					
ANR	4250091	Identifier	exit		4250070	0					
ANR	4250092	ArgumentList	1		4250070	1					
ANR	4250093	Argument	1		4250070	0					
ANR	4250094	PrimaryExpression	1		4250070	0					
ANR	4250095	IdentifierDeclStatement	"char * tmp = strchr ( str , '_' ) ;"	100:1:2893:2923	4250070	1	True				
ANR	4250096	IdentifierDecl	"* tmp = strchr ( str , '_' )"		4250070	0					
ANR	4250097	IdentifierDeclType	char *		4250070	0					
ANR	4250098	Identifier	tmp		4250070	1					
ANR	4250099	AssignmentExpression	"* tmp = strchr ( str , '_' )"		4250070	2		=			
ANR	4250100	Identifier	tmp		4250070	0					
ANR	4250101	CallExpression	"strchr ( str , '_' )"		4250070	1					
ANR	4250102	Callee	strchr		4250070	0					
ANR	4250103	Identifier	strchr		4250070	0					
ANR	4250104	ArgumentList	str		4250070	1					
ANR	4250105	Argument	str		4250070	0					
ANR	4250106	Identifier	str		4250070	0					
ANR	4250107	Argument	'_'		4250070	1					
ANR	4250108	PrimaryExpression	'_'		4250070	0					
ANR	4250109	IfStatement	if ( ! tmp )		4250070	2					
ANR	4250110	Condition	! tmp	101:5:2930:2933	4250070	0	True				
ANR	4250111	UnaryOperationExpression	! tmp		4250070	0					
ANR	4250112	UnaryOperator	!		4250070	0					
ANR	4250113	Identifier	tmp		4250070	1					
ANR	4250114	CompoundStatement		8:12:143:143	4250070	1					
ANR	4250115	ExpressionStatement	"fprintf ( stderr , ""Usage: %s [command] "" , str )"	102:2:2941:2987	4250070	0	True				
ANR	4250116	CallExpression	"fprintf ( stderr , ""Usage: %s [command] "" , str )"		4250070	0					
ANR	4250117	Callee	fprintf		4250070	0					
ANR	4250118	Identifier	fprintf		4250070	0					
ANR	4250119	ArgumentList	stderr		4250070	1					
ANR	4250120	Argument	stderr		4250070	0					
ANR	4250121	Identifier	stderr		4250070	0					
ANR	4250122	Argument	"""Usage: %s [command] """		4250070	1					
ANR	4250123	PrimaryExpression	"""Usage: %s [command] """		4250070	0					
ANR	4250124	Argument	str		4250070	2					
ANR	4250125	Identifier	str		4250070	0					
ANR	4250126	ElseStatement	else		4250070	0					
ANR	4250127	CompoundStatement		10:8:203:203	4250070	0					
ANR	4250128	ExpressionStatement	"fprintf ( stderr , ""Usage: %s "" , str )"	104:2:3001:3037	4250070	0	True				
ANR	4250129	CallExpression	"fprintf ( stderr , ""Usage: %s "" , str )"		4250070	0					
ANR	4250130	Callee	fprintf		4250070	0					
ANR	4250131	Identifier	fprintf		4250070	0					
ANR	4250132	ArgumentList	stderr		4250070	1					
ANR	4250133	Argument	stderr		4250070	0					
ANR	4250134	Identifier	stderr		4250070	0					
ANR	4250135	Argument	"""Usage: %s """		4250070	1					
ANR	4250136	PrimaryExpression	"""Usage: %s """		4250070	0					
ANR	4250137	Argument	str		4250070	2					
ANR	4250138	Identifier	str		4250070	0					
ANR	4250139	ExpressionStatement	"fprintf ( stderr , ""[general-options] [targets]"" )"	107:1:3044:3092	4250070	3	True				
ANR	4250140	CallExpression	"fprintf ( stderr , ""[general-options] [targets]"" )"		4250070	0					
ANR	4250141	Callee	fprintf		4250070	0					
ANR	4250142	Identifier	fprintf		4250070	0					
ANR	4250143	ArgumentList	stderr		4250070	1					
ANR	4250144	Argument	stderr		4250070	0					
ANR	4250145	Identifier	stderr		4250070	0					
ANR	4250146	Argument	"""[general-options] [targets]"""		4250070	1					
ANR	4250147	PrimaryExpression	"""[general-options] [targets]"""		4250070	0					
ANR	4250148	IfStatement	if ( takes_subsys )		4250070	4					
ANR	4250149	Condition	takes_subsys	108:5:3099:3110	4250070	0	True				
ANR	4250150	Identifier	takes_subsys		4250070	0					
ANR	4250151	CompoundStatement		15:20:320:320	4250070	1					
ANR	4250152	ExpressionStatement	"fprintf ( stderr , "" [daemon]"" )"	109:2:3118:3148	4250070	0	True				
ANR	4250153	CallExpression	"fprintf ( stderr , "" [daemon]"" )"		4250070	0					
ANR	4250154	Callee	fprintf		4250070	0					
ANR	4250155	Identifier	fprintf		4250070	0					
ANR	4250156	ArgumentList	stderr		4250070	1					
ANR	4250157	Argument	stderr		4250070	0					
ANR	4250158	Identifier	stderr		4250070	0					
ANR	4250159	Argument	""" [daemon]"""		4250070	1					
ANR	4250160	PrimaryExpression	""" [daemon]"""		4250070	0					
ANR	4250161	ExpressionStatement	"fprintf ( stderr , ""\\nwhere [general-options] can be zero or more of:\\n"" )"	111:1:3154:3226	4250070	5	True				
ANR	4250162	CallExpression	"fprintf ( stderr , ""\\nwhere [general-options] can be zero or more of:\\n"" )"		4250070	0					
ANR	4250163	Callee	fprintf		4250070	0					
ANR	4250164	Identifier	fprintf		4250070	0					
ANR	4250165	ArgumentList	stderr		4250070	1					
ANR	4250166	Argument	stderr		4250070	0					
ANR	4250167	Identifier	stderr		4250070	0					
ANR	4250168	Argument	"""\\nwhere [general-options] can be zero or more of:\\n"""		4250070	1					
ANR	4250169	PrimaryExpression	"""\\nwhere [general-options] can be zero or more of:\\n"""		4250070	0					
ANR	4250170	ExpressionStatement	"fprintf ( stderr , ""    -help\\t\\tgives this usage information\\n"" )"	112:1:3229:3293	4250070	6	True				
ANR	4250171	CallExpression	"fprintf ( stderr , ""    -help\\t\\tgives this usage information\\n"" )"		4250070	0					
ANR	4250172	Callee	fprintf		4250070	0					
ANR	4250173	Identifier	fprintf		4250070	0					
ANR	4250174	ArgumentList	stderr		4250070	1					
ANR	4250175	Argument	stderr		4250070	0					
ANR	4250176	Identifier	stderr		4250070	0					
ANR	4250177	Argument	"""    -help\\t\\tgives this usage information\\n"""		4250070	1					
ANR	4250178	PrimaryExpression	"""    -help\\t\\tgives this usage information\\n"""		4250070	0					
ANR	4250179	ExpressionStatement	"fprintf ( stderr , ""    -version\\t\\tprints the version\\n"" )"	113:1:3296:3353	4250070	7	True				
ANR	4250180	CallExpression	"fprintf ( stderr , ""    -version\\t\\tprints the version\\n"" )"		4250070	0					
ANR	4250181	Callee	fprintf		4250070	0					
ANR	4250182	Identifier	fprintf		4250070	0					
ANR	4250183	ArgumentList	stderr		4250070	1					
ANR	4250184	Argument	stderr		4250070	0					
ANR	4250185	Identifier	stderr		4250070	0					
ANR	4250186	Argument	"""    -version\\t\\tprints the version\\n"""		4250070	1					
ANR	4250187	PrimaryExpression	"""    -version\\t\\tprints the version\\n"""		4250070	0					
ANR	4250188	ExpressionStatement	"fprintf ( stderr , ""    -pool hostname\\tuse the given central manager to find daemons\\n"" )"	114:1:3356:3449	4250070	8	True				
ANR	4250189	CallExpression	"fprintf ( stderr , ""    -pool hostname\\tuse the given central manager to find daemons\\n"" )"		4250070	0					
ANR	4250190	Callee	fprintf		4250070	0					
ANR	4250191	Identifier	fprintf		4250070	0					
ANR	4250192	ArgumentList	stderr		4250070	1					
ANR	4250193	Argument	stderr		4250070	0					
ANR	4250194	Identifier	stderr		4250070	0					
ANR	4250195	Argument	"""    -pool hostname\\tuse the given central manager to find daemons\\n"""		4250070	1					
ANR	4250196	PrimaryExpression	"""    -pool hostname\\tuse the given central manager to find daemons\\n"""		4250070	0					
ANR	4250197	IfStatement	if ( cmd == DAEMONS_OFF || cmd == DAEMON_OFF || cmd == RESTART )		4250070	9					
ANR	4250198	Condition	cmd == DAEMONS_OFF || cmd == DAEMON_OFF || cmd == RESTART	116:5:3456:3512	4250070	0	True				
ANR	4250199	OrExpression	cmd == DAEMONS_OFF || cmd == DAEMON_OFF || cmd == RESTART		4250070	0		||			
ANR	4250200	EqualityExpression	cmd == DAEMONS_OFF		4250070	0		==			
ANR	4250201	Identifier	cmd		4250070	0					
ANR	4250202	Identifier	DAEMONS_OFF		4250070	1					
ANR	4250203	OrExpression	cmd == DAEMON_OFF || cmd == RESTART		4250070	1		||			
ANR	4250204	EqualityExpression	cmd == DAEMON_OFF		4250070	0		==			
ANR	4250205	Identifier	cmd		4250070	0					
ANR	4250206	Identifier	DAEMON_OFF		4250070	1					
ANR	4250207	EqualityExpression	cmd == RESTART		4250070	1		==			
ANR	4250208	Identifier	cmd		4250070	0					
ANR	4250209	Identifier	RESTART		4250070	1					
ANR	4250210	CompoundStatement		23:65:722:722	4250070	1					
ANR	4250211	ExpressionStatement	"fprintf ( stderr , ""    -graceful\\t\\tgracefully shutdown daemons %s\\n"" , ""(the default)"" )"	117:2:3520:3613	4250070	0	True				
ANR	4250212	CallExpression	"fprintf ( stderr , ""    -graceful\\t\\tgracefully shutdown daemons %s\\n"" , ""(the default)"" )"		4250070	0					
ANR	4250213	Callee	fprintf		4250070	0					
ANR	4250214	Identifier	fprintf		4250070	0					
ANR	4250215	ArgumentList	stderr		4250070	1					
ANR	4250216	Argument	stderr		4250070	0					
ANR	4250217	Identifier	stderr		4250070	0					
ANR	4250218	Argument	"""    -graceful\\t\\tgracefully shutdown daemons %s\\n"""		4250070	1					
ANR	4250219	PrimaryExpression	"""    -graceful\\t\\tgracefully shutdown daemons %s\\n"""		4250070	0					
ANR	4250220	Argument	"""(the default)"""		4250070	2					
ANR	4250221	PrimaryExpression	"""(the default)"""		4250070	0					
ANR	4250222	ExpressionStatement	"fprintf ( stderr , ""    -fast\\t\\tquickly shutdown daemons\\n"" )"	119:2:3617:3677	4250070	1	True				
ANR	4250223	CallExpression	"fprintf ( stderr , ""    -fast\\t\\tquickly shutdown daemons\\n"" )"		4250070	0					
ANR	4250224	Callee	fprintf		4250070	0					
ANR	4250225	Identifier	fprintf		4250070	0					
ANR	4250226	ArgumentList	stderr		4250070	1					
ANR	4250227	Argument	stderr		4250070	0					
ANR	4250228	Identifier	stderr		4250070	0					
ANR	4250229	Argument	"""    -fast\\t\\tquickly shutdown daemons\\n"""		4250070	1					
ANR	4250230	PrimaryExpression	"""    -fast\\t\\tquickly shutdown daemons\\n"""		4250070	0					
ANR	4250231	ExpressionStatement	"fprintf ( stderr , ""    -peaceful\\t\\twait indefinitely for jobs to finish\\n"" )"	120:2:3681:3757	4250070	2	True				
ANR	4250232	CallExpression	"fprintf ( stderr , ""    -peaceful\\t\\twait indefinitely for jobs to finish\\n"" )"		4250070	0					
ANR	4250233	Callee	fprintf		4250070	0					
ANR	4250234	Identifier	fprintf		4250070	0					
ANR	4250235	ArgumentList	stderr		4250070	1					
ANR	4250236	Argument	stderr		4250070	0					
ANR	4250237	Identifier	stderr		4250070	0					
ANR	4250238	Argument	"""    -peaceful\\t\\twait indefinitely for jobs to finish\\n"""		4250070	1					
ANR	4250239	PrimaryExpression	"""    -peaceful\\t\\twait indefinitely for jobs to finish\\n"""		4250070	0					
ANR	4250240	IfStatement	if ( cmd == VACATE_CLAIM )		4250070	10					
ANR	4250241	Condition	cmd == VACATE_CLAIM	122:5:3767:3785	4250070	0	True				
ANR	4250242	EqualityExpression	cmd == VACATE_CLAIM		4250070	0		==			
ANR	4250243	Identifier	cmd		4250070	0					
ANR	4250244	Identifier	VACATE_CLAIM		4250070	1					
ANR	4250245	CompoundStatement		29:27:995:995	4250070	1					
ANR	4250246	ExpressionStatement	"fprintf ( stderr , ""    -graceful\\t\\tgracefully vacate the jobs (the default)\\n"" )"	123:2:3793:3879	4250070	0	True				
ANR	4250247	CallExpression	"fprintf ( stderr , ""    -graceful\\t\\tgracefully vacate the jobs (the default)\\n"" )"		4250070	0					
ANR	4250248	Callee	fprintf		4250070	0					
ANR	4250249	Identifier	fprintf		4250070	0					
ANR	4250250	ArgumentList	stderr		4250070	1					
ANR	4250251	Argument	stderr		4250070	0					
ANR	4250252	Identifier	stderr		4250070	0					
ANR	4250253	Argument	"""    -graceful\\t\\tgracefully vacate the jobs (the default)\\n"""		4250070	1					
ANR	4250254	PrimaryExpression	"""    -graceful\\t\\tgracefully vacate the jobs (the default)\\n"""		4250070	0					
ANR	4250255	ExpressionStatement	"fprintf ( stderr , ""    -fast\\t\\tquickly vacate the jobs (no checkpointing)\\n"" )"	125:2:3883:3967	4250070	1	True				
ANR	4250256	CallExpression	"fprintf ( stderr , ""    -fast\\t\\tquickly vacate the jobs (no checkpointing)\\n"" )"		4250070	0					
ANR	4250257	Callee	fprintf		4250070	0					
ANR	4250258	Identifier	fprintf		4250070	0					
ANR	4250259	ArgumentList	stderr		4250070	1					
ANR	4250260	Argument	stderr		4250070	0					
ANR	4250261	Identifier	stderr		4250070	0					
ANR	4250262	Argument	"""    -fast\\t\\tquickly vacate the jobs (no checkpointing)\\n"""		4250070	1					
ANR	4250263	PrimaryExpression	"""    -fast\\t\\tquickly vacate the jobs (no checkpointing)\\n"""		4250070	0					
ANR	4250264	ExpressionStatement	"fprintf ( stderr , ""where [targets] can be zero or more of:\\n"" )"	128:1:3973:4035	4250070	11	True				
ANR	4250265	CallExpression	"fprintf ( stderr , ""where [targets] can be zero or more of:\\n"" )"		4250070	0					
ANR	4250266	Callee	fprintf		4250070	0					
ANR	4250267	Identifier	fprintf		4250070	0					
ANR	4250268	ArgumentList	stderr		4250070	1					
ANR	4250269	Argument	stderr		4250070	0					
ANR	4250270	Identifier	stderr		4250070	0					
ANR	4250271	Argument	"""where [targets] can be zero or more of:\\n"""		4250070	1					
ANR	4250272	PrimaryExpression	"""where [targets] can be zero or more of:\\n"""		4250070	0					
ANR	4250273	ExpressionStatement	"fprintf ( stderr , ""    -all\\t\\tall hosts in your pool (overrides other targets)\\n"" )"	129:1:4038:4126	4250070	12	True				
ANR	4250274	CallExpression	"fprintf ( stderr , ""    -all\\t\\tall hosts in your pool (overrides other targets)\\n"" )"		4250070	0					
ANR	4250275	Callee	fprintf		4250070	0					
ANR	4250276	Identifier	fprintf		4250070	0					
ANR	4250277	ArgumentList	stderr		4250070	1					
ANR	4250278	Argument	stderr		4250070	0					
ANR	4250279	Identifier	stderr		4250070	0					
ANR	4250280	Argument	"""    -all\\t\\tall hosts in your pool (overrides other targets)\\n"""		4250070	1					
ANR	4250281	PrimaryExpression	"""    -all\\t\\tall hosts in your pool (overrides other targets)\\n"""		4250070	0					
ANR	4250282	ExpressionStatement	"fprintf ( stderr , ""    hostname\\t\\tgiven host\\n"" )"	131:1:4129:4178	4250070	13	True				
ANR	4250283	CallExpression	"fprintf ( stderr , ""    hostname\\t\\tgiven host\\n"" )"		4250070	0					
ANR	4250284	Callee	fprintf		4250070	0					
ANR	4250285	Identifier	fprintf		4250070	0					
ANR	4250286	ArgumentList	stderr		4250070	1					
ANR	4250287	Argument	stderr		4250070	0					
ANR	4250288	Identifier	stderr		4250070	0					
ANR	4250289	Argument	"""    hostname\\t\\tgiven host\\n"""		4250070	1					
ANR	4250290	PrimaryExpression	"""    hostname\\t\\tgiven host\\n"""		4250070	0					
ANR	4250291	ExpressionStatement	"fprintf ( stderr , ""    <ip.address:port>\\tgiven \\""sinful string\\""\\n"" )"	132:1:4181:4250	4250070	14	True				
ANR	4250292	CallExpression	"fprintf ( stderr , ""    <ip.address:port>\\tgiven \\""sinful string\\""\\n"" )"		4250070	0					
ANR	4250293	Callee	fprintf		4250070	0					
ANR	4250294	Identifier	fprintf		4250070	0					
ANR	4250295	ArgumentList	stderr		4250070	1					
ANR	4250296	Argument	stderr		4250070	0					
ANR	4250297	Identifier	stderr		4250070	0					
ANR	4250298	Argument	"""    <ip.address:port>\\tgiven \\""sinful string\\""\\n"""		4250070	1					
ANR	4250299	PrimaryExpression	"""    <ip.address:port>\\tgiven \\""sinful string\\""\\n"""		4250070	0					
ANR	4250300	ExpressionStatement	"fprintf ( stderr , ""  (for compatibility with other Condor tools, you can also use:)\\n"" )"	133:1:4253:4344	4250070	15	True				
ANR	4250301	CallExpression	"fprintf ( stderr , ""  (for compatibility with other Condor tools, you can also use:)\\n"" )"		4250070	0					
ANR	4250302	Callee	fprintf		4250070	0					
ANR	4250303	Identifier	fprintf		4250070	0					
ANR	4250304	ArgumentList	stderr		4250070	1					
ANR	4250305	Argument	stderr		4250070	0					
ANR	4250306	Identifier	stderr		4250070	0					
ANR	4250307	Argument	"""  (for compatibility with other Condor tools, you can also use:)\\n"""		4250070	1					
ANR	4250308	PrimaryExpression	"""  (for compatibility with other Condor tools, you can also use:)\\n"""		4250070	0					
ANR	4250309	ExpressionStatement	"fprintf ( stderr , ""    -name name\\tgiven host\\n"" )"	135:1:4347:4396	4250070	16	True				
ANR	4250310	CallExpression	"fprintf ( stderr , ""    -name name\\tgiven host\\n"" )"		4250070	0					
ANR	4250311	Callee	fprintf		4250070	0					
ANR	4250312	Identifier	fprintf		4250070	0					
ANR	4250313	ArgumentList	stderr		4250070	1					
ANR	4250314	Argument	stderr		4250070	0					
ANR	4250315	Identifier	stderr		4250070	0					
ANR	4250316	Argument	"""    -name name\\tgiven host\\n"""		4250070	1					
ANR	4250317	PrimaryExpression	"""    -name name\\tgiven host\\n"""		4250070	0					
ANR	4250318	ExpressionStatement	"fprintf ( stderr , ""    -constraint constraint\\tconstraint\\n"" )"	136:1:4399:4460	4250070	17	True				
ANR	4250319	CallExpression	"fprintf ( stderr , ""    -constraint constraint\\tconstraint\\n"" )"		4250070	0					
ANR	4250320	Callee	fprintf		4250070	0					
ANR	4250321	Identifier	fprintf		4250070	0					
ANR	4250322	ArgumentList	stderr		4250070	1					
ANR	4250323	Argument	stderr		4250070	0					
ANR	4250324	Identifier	stderr		4250070	0					
ANR	4250325	Argument	"""    -constraint constraint\\tconstraint\\n"""		4250070	1					
ANR	4250326	PrimaryExpression	"""    -constraint constraint\\tconstraint\\n"""		4250070	0					
ANR	4250327	ExpressionStatement	"fprintf ( stderr , ""    -addr <addr:port>\\tgiven \\""sinful string\\""\\n"" )"	137:1:4463:4532	4250070	18	True				
ANR	4250328	CallExpression	"fprintf ( stderr , ""    -addr <addr:port>\\tgiven \\""sinful string\\""\\n"" )"		4250070	0					
ANR	4250329	Callee	fprintf		4250070	0					
ANR	4250330	Identifier	fprintf		4250070	0					
ANR	4250331	ArgumentList	stderr		4250070	1					
ANR	4250332	Argument	stderr		4250070	0					
ANR	4250333	Identifier	stderr		4250070	0					
ANR	4250334	Argument	"""    -addr <addr:port>\\tgiven \\""sinful string\\""\\n"""		4250070	1					
ANR	4250335	PrimaryExpression	"""    -addr <addr:port>\\tgiven \\""sinful string\\""\\n"""		4250070	0					
ANR	4250336	ExpressionStatement	"fprintf ( stderr , ""  (if no targets are specified, the local host is used)\\n"" )"	138:1:4535:4613	4250070	19	True				
ANR	4250337	CallExpression	"fprintf ( stderr , ""  (if no targets are specified, the local host is used)\\n"" )"		4250070	0					
ANR	4250338	Callee	fprintf		4250070	0					
ANR	4250339	Identifier	fprintf		4250070	0					
ANR	4250340	ArgumentList	stderr		4250070	1					
ANR	4250341	Argument	stderr		4250070	0					
ANR	4250342	Identifier	stderr		4250070	0					
ANR	4250343	Argument	"""  (if no targets are specified, the local host is used)\\n"""		4250070	1					
ANR	4250344	PrimaryExpression	"""  (if no targets are specified, the local host is used)\\n"""		4250070	0					
ANR	4250345	IfStatement	if ( takes_subsys )		4250070	20					
ANR	4250346	Condition	takes_subsys	139:5:4620:4631	4250070	0	True				
ANR	4250347	Identifier	takes_subsys		4250070	0					
ANR	4250348	CompoundStatement		46:20:1841:1841	4250070	1					
ANR	4250349	ExpressionStatement	"fprintf ( stderr , ""where [daemon] can be one of:\\n"" )"	140:2:4639:4691	4250070	0	True				
ANR	4250350	CallExpression	"fprintf ( stderr , ""where [daemon] can be one of:\\n"" )"		4250070	0					
ANR	4250351	Callee	fprintf		4250070	0					
ANR	4250352	Identifier	fprintf		4250070	0					
ANR	4250353	ArgumentList	stderr		4250070	1					
ANR	4250354	Argument	stderr		4250070	0					
ANR	4250355	Identifier	stderr		4250070	0					
ANR	4250356	Argument	"""where [daemon] can be one of:\\n"""		4250070	1					
ANR	4250357	PrimaryExpression	"""where [daemon] can be one of:\\n"""		4250070	0					
ANR	4250358	ExpressionStatement	"fprintf ( stderr , ""    -daemon <name>\\tspecify the target daemon by name.\\n"" )"	141:2:4695:4777	4250070	1	True				
ANR	4250359	CallExpression	"fprintf ( stderr , ""    -daemon <name>\\tspecify the target daemon by name.\\n"" )"		4250070	0					
ANR	4250360	Callee	fprintf		4250070	0					
ANR	4250361	Identifier	fprintf		4250070	0					
ANR	4250362	ArgumentList	stderr		4250070	1					
ANR	4250363	Argument	stderr		4250070	0					
ANR	4250364	Identifier	stderr		4250070	0					
ANR	4250365	Argument	"""    -daemon <name>\\tspecify the target daemon by name.\\n"""		4250070	1					
ANR	4250366	PrimaryExpression	"""    -daemon <name>\\tspecify the target daemon by name.\\n"""		4250070	0					
ANR	4250367	ExpressionStatement	"fprintf ( stderr , ""    The following named daemon options are deprecated, and\\n"" )"	143:2:4781:4864	4250070	2	True				
ANR	4250368	CallExpression	"fprintf ( stderr , ""    The following named daemon options are deprecated, and\\n"" )"		4250070	0					
ANR	4250369	Callee	fprintf		4250070	0					
ANR	4250370	Identifier	fprintf		4250070	0					
ANR	4250371	ArgumentList	stderr		4250070	1					
ANR	4250372	Argument	stderr		4250070	0					
ANR	4250373	Identifier	stderr		4250070	0					
ANR	4250374	Argument	"""    The following named daemon options are deprecated, and\\n"""		4250070	1					
ANR	4250375	PrimaryExpression	"""    The following named daemon options are deprecated, and\\n"""		4250070	0					
ANR	4250376	ExpressionStatement	"fprintf ( stderr , ""    may be discontinued in a future release:\\n"" )"	145:2:4868:4934	4250070	3	True				
ANR	4250377	CallExpression	"fprintf ( stderr , ""    may be discontinued in a future release:\\n"" )"		4250070	0					
ANR	4250378	Callee	fprintf		4250070	0					
ANR	4250379	Identifier	fprintf		4250070	0					
ANR	4250380	ArgumentList	stderr		4250070	1					
ANR	4250381	Argument	stderr		4250070	0					
ANR	4250382	Identifier	stderr		4250070	0					
ANR	4250383	Argument	"""    may be discontinued in a future release:\\n"""		4250070	1					
ANR	4250384	PrimaryExpression	"""    may be discontinued in a future release:\\n"""		4250070	0					
ANR	4250385	IfStatement	if ( cmd == DAEMONS_OFF || cmd == DAEMON_OFF )		4250070	4					
ANR	4250386	Condition	cmd == DAEMONS_OFF || cmd == DAEMON_OFF	146:6:4942:4980	4250070	0	True				
ANR	4250387	OrExpression	cmd == DAEMONS_OFF || cmd == DAEMON_OFF		4250070	0		||			
ANR	4250388	EqualityExpression	cmd == DAEMONS_OFF		4250070	0		==			
ANR	4250389	Identifier	cmd		4250070	0					
ANR	4250390	Identifier	DAEMONS_OFF		4250070	1					
ANR	4250391	EqualityExpression	cmd == DAEMON_OFF		4250070	1		==			
ANR	4250392	Identifier	cmd		4250070	0					
ANR	4250393	Identifier	DAEMON_OFF		4250070	1					
ANR	4250394	CompoundStatement		53:48:2190:2190	4250070	1					
ANR	4250395	ExpressionStatement	"fprintf ( stderr , ""    -master\\n"" )"	147:3:4989:5023	4250070	0	True				
ANR	4250396	CallExpression	"fprintf ( stderr , ""    -master\\n"" )"		4250070	0					
ANR	4250397	Callee	fprintf		4250070	0					
ANR	4250398	Identifier	fprintf		4250070	0					
ANR	4250399	ArgumentList	stderr		4250070	1					
ANR	4250400	Argument	stderr		4250070	0					
ANR	4250401	Identifier	stderr		4250070	0					
ANR	4250402	Argument	"""    -master\\n"""		4250070	1					
ANR	4250403	PrimaryExpression	"""    -master\\n"""		4250070	0					
ANR	4250404	ElseStatement	else		4250070	0					
ANR	4250405	CompoundStatement		55:9:2240:2240	4250070	0					
ANR	4250406	ExpressionStatement	"fprintf ( stderr , ""    -master\\t\\t(the default)\\n"" )"	149:3:5039:5090	4250070	0	True				
ANR	4250407	CallExpression	"fprintf ( stderr , ""    -master\\t\\t(the default)\\n"" )"		4250070	0					
ANR	4250408	Callee	fprintf		4250070	0					
ANR	4250409	Identifier	fprintf		4250070	0					
ANR	4250410	ArgumentList	stderr		4250070	1					
ANR	4250411	Argument	stderr		4250070	0					
ANR	4250412	Identifier	stderr		4250070	0					
ANR	4250413	Argument	"""    -master\\t\\t(the default)\\n"""		4250070	1					
ANR	4250414	PrimaryExpression	"""    -master\\t\\t(the default)\\n"""		4250070	0					
ANR	4250415	ExpressionStatement	"fprintf ( stderr , ""    -startd\\n"" )"	151:2:5098:5132	4250070	5	True				
ANR	4250416	CallExpression	"fprintf ( stderr , ""    -startd\\n"" )"		4250070	0					
ANR	4250417	Callee	fprintf		4250070	0					
ANR	4250418	Identifier	fprintf		4250070	0					
ANR	4250419	ArgumentList	stderr		4250070	1					
ANR	4250420	Argument	stderr		4250070	0					
ANR	4250421	Identifier	stderr		4250070	0					
ANR	4250422	Argument	"""    -startd\\n"""		4250070	1					
ANR	4250423	PrimaryExpression	"""    -startd\\n"""		4250070	0					
ANR	4250424	ExpressionStatement	"fprintf ( stderr , ""    -schedd\\n"" )"	152:2:5136:5170	4250070	6	True				
ANR	4250425	CallExpression	"fprintf ( stderr , ""    -schedd\\n"" )"		4250070	0					
ANR	4250426	Callee	fprintf		4250070	0					
ANR	4250427	Identifier	fprintf		4250070	0					
ANR	4250428	ArgumentList	stderr		4250070	1					
ANR	4250429	Argument	stderr		4250070	0					
ANR	4250430	Identifier	stderr		4250070	0					
ANR	4250431	Argument	"""    -schedd\\n"""		4250070	1					
ANR	4250432	PrimaryExpression	"""    -schedd\\n"""		4250070	0					
ANR	4250433	ExpressionStatement	"fprintf ( stderr , ""    -collector\\n"" )"	153:2:5174:5211	4250070	7	True				
ANR	4250434	CallExpression	"fprintf ( stderr , ""    -collector\\n"" )"		4250070	0					
ANR	4250435	Callee	fprintf		4250070	0					
ANR	4250436	Identifier	fprintf		4250070	0					
ANR	4250437	ArgumentList	stderr		4250070	1					
ANR	4250438	Argument	stderr		4250070	0					
ANR	4250439	Identifier	stderr		4250070	0					
ANR	4250440	Argument	"""    -collector\\n"""		4250070	1					
ANR	4250441	PrimaryExpression	"""    -collector\\n"""		4250070	0					
ANR	4250442	ExpressionStatement	"fprintf ( stderr , ""    -negotiator\\n"" )"	154:2:5215:5253	4250070	8	True				
ANR	4250443	CallExpression	"fprintf ( stderr , ""    -negotiator\\n"" )"		4250070	0					
ANR	4250444	Callee	fprintf		4250070	0					
ANR	4250445	Identifier	fprintf		4250070	0					
ANR	4250446	ArgumentList	stderr		4250070	1					
ANR	4250447	Argument	stderr		4250070	0					
ANR	4250448	Identifier	stderr		4250070	0					
ANR	4250449	Argument	"""    -negotiator\\n"""		4250070	1					
ANR	4250450	PrimaryExpression	"""    -negotiator\\n"""		4250070	0					
ANR	4250451	ExpressionStatement	"fprintf ( stderr , ""    -kbdd\\n"" )"	155:2:5257:5289	4250070	9	True				
ANR	4250452	CallExpression	"fprintf ( stderr , ""    -kbdd\\n"" )"		4250070	0					
ANR	4250453	Callee	fprintf		4250070	0					
ANR	4250454	Identifier	fprintf		4250070	0					
ANR	4250455	ArgumentList	stderr		4250070	1					
ANR	4250456	Argument	stderr		4250070	0					
ANR	4250457	Identifier	stderr		4250070	0					
ANR	4250458	Argument	"""    -kbdd\\n"""		4250070	1					
ANR	4250459	PrimaryExpression	"""    -kbdd\\n"""		4250070	0					
ANR	4250460	ExpressionStatement	"fprintf ( stderr , ""    -quill\\n"" )"	157:2:5320:5353	4250070	10	True				
ANR	4250461	CallExpression	"fprintf ( stderr , ""    -quill\\n"" )"		4250070	0					
ANR	4250462	Callee	fprintf		4250070	0					
ANR	4250463	Identifier	fprintf		4250070	0					
ANR	4250464	ArgumentList	stderr		4250070	1					
ANR	4250465	Argument	stderr		4250070	0					
ANR	4250466	Identifier	stderr		4250070	0					
ANR	4250467	Argument	"""    -quill\\n"""		4250070	1					
ANR	4250468	PrimaryExpression	"""    -quill\\n"""		4250070	0					
ANR	4250469	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	160:1:5366:5389	4250070	21	True				
ANR	4250470	CallExpression	"fprintf ( stderr , ""\\n"" )"		4250070	0					
ANR	4250471	Callee	fprintf		4250070	0					
ANR	4250472	Identifier	fprintf		4250070	0					
ANR	4250473	ArgumentList	stderr		4250070	1					
ANR	4250474	Argument	stderr		4250070	0					
ANR	4250475	Identifier	stderr		4250070	0					
ANR	4250476	Argument	"""\\n"""		4250070	1					
ANR	4250477	PrimaryExpression	"""\\n"""		4250070	0					
ANR	4250478	SwitchStatement	switch ( cmd )		4250070	22					
ANR	4250479	Condition	cmd	162:9:5401:5403	4250070	0	True				
ANR	4250480	Identifier	cmd		4250070	0					
ANR	4250481	CompoundStatement		69:15:2613:2613	4250070	1					
ANR	4250482	Label	case DAEMONS_ON :	163:1:5410:5425	4250070	0	True				
ANR	4250483	Identifier	DAEMONS_ON		4250070	0					
ANR	4250484	ExpressionStatement	"fprintf ( stderr , ""  %s turns on the condor daemons specified in the config file.\\n"" , str )"	164:2:5429:5530	4250070	1	True				
ANR	4250485	CallExpression	"fprintf ( stderr , ""  %s turns on the condor daemons specified in the config file.\\n"" , str )"		4250070	0					
ANR	4250486	Callee	fprintf		4250070	0					
ANR	4250487	Identifier	fprintf		4250070	0					
ANR	4250488	ArgumentList	stderr		4250070	1					
ANR	4250489	Argument	stderr		4250070	0					
ANR	4250490	Identifier	stderr		4250070	0					
ANR	4250491	Argument	"""  %s turns on the condor daemons specified in the config file.\\n"""		4250070	1					
ANR	4250492	PrimaryExpression	"""  %s turns on the condor daemons specified in the config file.\\n"""		4250070	0					
ANR	4250493	Argument	str		4250070	2					
ANR	4250494	Identifier	str		4250070	0					
ANR	4250495	BreakStatement	break ;	167:2:5534:5539	4250070	2	True				
ANR	4250496	Label	case DAEMONS_OFF :	168:1:5542:5558	4250070	3	True				
ANR	4250497	Identifier	DAEMONS_OFF		4250070	0					
ANR	4250498	Label	case DC_OFF_GRACEFUL :	169:1:5561:5581	4250070	4	True				
ANR	4250499	Identifier	DC_OFF_GRACEFUL		4250070	0					
ANR	4250500	ExpressionStatement	"fprintf ( stderr , ""  %s turns off the specified daemon.\\n"" , str )"	170:2:5585:5655	4250070	5	True				
ANR	4250501	CallExpression	"fprintf ( stderr , ""  %s turns off the specified daemon.\\n"" , str )"		4250070	0					
ANR	4250502	Callee	fprintf		4250070	0					
ANR	4250503	Identifier	fprintf		4250070	0					
ANR	4250504	ArgumentList	stderr		4250070	1					
ANR	4250505	Argument	stderr		4250070	0					
ANR	4250506	Identifier	stderr		4250070	0					
ANR	4250507	Argument	"""  %s turns off the specified daemon.\\n"""		4250070	1					
ANR	4250508	PrimaryExpression	"""  %s turns off the specified daemon.\\n"""		4250070	0					
ANR	4250509	Argument	str		4250070	2					
ANR	4250510	Identifier	str		4250070	0					
ANR	4250511	ExpressionStatement	"fprintf ( stderr , ""  If no daemon is given, everything except the master is shut down.\\n"" )"	172:2:5659:5755	4250070	6	True				
ANR	4250512	CallExpression	"fprintf ( stderr , ""  If no daemon is given, everything except the master is shut down.\\n"" )"		4250070	0					
ANR	4250513	Callee	fprintf		4250070	0					
ANR	4250514	Identifier	fprintf		4250070	0					
ANR	4250515	ArgumentList	stderr		4250070	1					
ANR	4250516	Argument	stderr		4250070	0					
ANR	4250517	Identifier	stderr		4250070	0					
ANR	4250518	Argument	"""  If no daemon is given, everything except the master is shut down.\\n"""		4250070	1					
ANR	4250519	PrimaryExpression	"""  If no daemon is given, everything except the master is shut down.\\n"""		4250070	0					
ANR	4250520	BreakStatement	break ;	174:2:5759:5764	4250070	7	True				
ANR	4250521	Label	case RESTART :	175:1:5767:5779	4250070	8	True				
ANR	4250522	Identifier	RESTART		4250070	0					
ANR	4250523	ExpressionStatement	"fprintf ( stderr , ""  %s causes specified daemon to restart itself.\\n"" , str )"	176:2:5783:5858	4250070	9	True				
ANR	4250524	CallExpression	"fprintf ( stderr , ""  %s causes specified daemon to restart itself.\\n"" , str )"		4250070	0					
ANR	4250525	Callee	fprintf		4250070	0					
ANR	4250526	Identifier	fprintf		4250070	0					
ANR	4250527	ArgumentList	stderr		4250070	1					
ANR	4250528	Argument	stderr		4250070	0					
ANR	4250529	Identifier	stderr		4250070	0					
ANR	4250530	Argument	"""  %s causes specified daemon to restart itself.\\n"""		4250070	1					
ANR	4250531	PrimaryExpression	"""  %s causes specified daemon to restart itself.\\n"""		4250070	0					
ANR	4250532	Argument	str		4250070	2					
ANR	4250533	Identifier	str		4250070	0					
ANR	4250534	ExpressionStatement	"fprintf ( stderr , ""  If sent to the master, all daemons on that host will restart.\\n"" )"	177:2:5862:5954	4250070	10	True				
ANR	4250535	CallExpression	"fprintf ( stderr , ""  If sent to the master, all daemons on that host will restart.\\n"" )"		4250070	0					
ANR	4250536	Callee	fprintf		4250070	0					
ANR	4250537	Identifier	fprintf		4250070	0					
ANR	4250538	ArgumentList	stderr		4250070	1					
ANR	4250539	Argument	stderr		4250070	0					
ANR	4250540	Identifier	stderr		4250070	0					
ANR	4250541	Argument	"""  If sent to the master, all daemons on that host will restart.\\n"""		4250070	1					
ANR	4250542	PrimaryExpression	"""  If sent to the master, all daemons on that host will restart.\\n"""		4250070	0					
ANR	4250543	BreakStatement	break ;	179:2:5958:5963	4250070	11	True				
ANR	4250544	Label	case DC_RECONFIG_FULL :	181:1:5967:5988	4250070	12	True				
ANR	4250545	Identifier	DC_RECONFIG_FULL		4250070	0					
ANR	4250546	ExpressionStatement	"fprintf ( stderr , ""  %s causes the specified daemon to reconfigure itself.\\n"" , str )"	182:2:5992:6087	4250070	13	True				
ANR	4250547	CallExpression	"fprintf ( stderr , ""  %s causes the specified daemon to reconfigure itself.\\n"" , str )"		4250070	0					
ANR	4250548	Callee	fprintf		4250070	0					
ANR	4250549	Identifier	fprintf		4250070	0					
ANR	4250550	ArgumentList	stderr		4250070	1					
ANR	4250551	Argument	stderr		4250070	0					
ANR	4250552	Identifier	stderr		4250070	0					
ANR	4250553	Argument	"""  %s causes the specified daemon to reconfigure itself.\\n"""		4250070	1					
ANR	4250554	PrimaryExpression	"""  %s causes the specified daemon to reconfigure itself.\\n"""		4250070	0					
ANR	4250555	Argument	str		4250070	2					
ANR	4250556	Identifier	str		4250070	0					
ANR	4250557	ExpressionStatement	"fprintf ( stderr , ""  If sent to the master, all daemons on that host will reconfigure.\\n"" )"	185:2:6091:6187	4250070	14	True				
ANR	4250558	CallExpression	"fprintf ( stderr , ""  If sent to the master, all daemons on that host will reconfigure.\\n"" )"		4250070	0					
ANR	4250559	Callee	fprintf		4250070	0					
ANR	4250560	Identifier	fprintf		4250070	0					
ANR	4250561	ArgumentList	stderr		4250070	1					
ANR	4250562	Argument	stderr		4250070	0					
ANR	4250563	Identifier	stderr		4250070	0					
ANR	4250564	Argument	"""  If sent to the master, all daemons on that host will reconfigure.\\n"""		4250070	1					
ANR	4250565	PrimaryExpression	"""  If sent to the master, all daemons on that host will reconfigure.\\n"""		4250070	0					
ANR	4250566	BreakStatement	break ;	187:2:6191:6196	4250070	15	True				
ANR	4250567	Label	case RESCHEDULE :	188:1:6199:6214	4250070	16	True				
ANR	4250568	Identifier	RESCHEDULE		4250070	0					
ANR	4250569	ExpressionStatement	"fprintf ( stderr , ""  %s %s\\n  %s\\n"" , str , ""causes the condor_schedd to update the central manager"" , ""and initiate a new negotiation cycle."" )"	189:2:6218:6369	4250070	17	True				
ANR	4250570	CallExpression	"fprintf ( stderr , ""  %s %s\\n  %s\\n"" , str , ""causes the condor_schedd to update the central manager"" , ""and initiate a new negotiation cycle."" )"		4250070	0					
ANR	4250571	Callee	fprintf		4250070	0					
ANR	4250572	Identifier	fprintf		4250070	0					
ANR	4250573	ArgumentList	stderr		4250070	1					
ANR	4250574	Argument	stderr		4250070	0					
ANR	4250575	Identifier	stderr		4250070	0					
ANR	4250576	Argument	"""  %s %s\\n  %s\\n"""		4250070	1					
ANR	4250577	PrimaryExpression	"""  %s %s\\n  %s\\n"""		4250070	0					
ANR	4250578	Argument	str		4250070	2					
ANR	4250579	Identifier	str		4250070	0					
ANR	4250580	Argument	"""causes the condor_schedd to update the central manager"""		4250070	3					
ANR	4250581	PrimaryExpression	"""causes the condor_schedd to update the central manager"""		4250070	0					
ANR	4250582	Argument	"""and initiate a new negotiation cycle."""		4250070	4					
ANR	4250583	PrimaryExpression	"""and initiate a new negotiation cycle."""		4250070	0					
ANR	4250584	BreakStatement	break ;	192:2:6373:6378	4250070	18	True				
ANR	4250585	Label	case VACATE_CLAIM :	193:1:6381:6398	4250070	19	True				
ANR	4250586	Identifier	VACATE_CLAIM		4250070	0					
ANR	4250587	Statement	fprintf	194:2:6402:6408	4250070	20	True				
ANR	4250588	Statement	(	194:9:6409:6409	4250070	21	True				
ANR	4250589	Statement	stderr	194:11:6411:6416	4250070	22	True				
ANR	4250590	Statement	","	194:17:6417:6417	4250070	23	True				
ANR	4250591	Statement	"""  %s causes the condor_startd to vacate the running\\n"""	195:5:6425:6479	4250070	24	True				
ANR	4250592	Statement	"""  job(s) on specific machines.  If you specify a slot\\n"""	196:5:6486:6542	4250070	25	True				
ANR	4250593	Statement	"""  (for example, \\""slot1@hostname\\""), only that slot will be\\n"""	197:5:6549:6611	4250070	26	True				
ANR	4250594	Statement	"""  vacated.  If you specify just a hostname, all jobs running under\\n"""	198:5:6618:6687	4250070	27	True				
ANR	4250595	Statement	"""  any slots at that host will be vacated.  By default,\\n"""	199:5:6694:6751	4250070	28	True				
ANR	4250596	Statement	"""  the jobs will be checkpointed (if possible), though if you\\n"""	200:5:6758:6821	4250070	29	True				
ANR	4250597	Statement	"""  specify the -fast option, they will be immediately killed.\\n"""	201:5:6828:6891	4250070	30	True				
ANR	4250598	Statement	","	201:69:6892:6892	4250070	31	True				
ANR	4250599	Statement	str	202:5:6899:6901	4250070	32	True				
ANR	4250600	Statement	)	202:9:6903:6903	4250070	33	True				
ANR	4250601	ExpressionStatement		202:10:6904:6904	4250070	34	True				
ANR	4250602	BreakStatement	break ;	203:2:6908:6913	4250070	35	True				
ANR	4250603	Label	case PCKPT_JOB :	204:1:6916:6930	4250070	36	True				
ANR	4250604	Identifier	PCKPT_JOB		4250070	0					
ANR	4250605	Statement	fprintf	205:2:6934:6940	4250070	37	True				
ANR	4250606	Statement	(	205:9:6941:6941	4250070	38	True				
ANR	4250607	Statement	stderr	205:11:6943:6948	4250070	39	True				
ANR	4250608	Statement	","	205:17:6949:6949	4250070	40	True				
ANR	4250609	Statement	"""  %s\\n"""	206:5:6956:6963	4250070	41	True				
ANR	4250610	Statement	"""  causes the condor_startd to perform a periodic"""	207:5:6970:7019	4250070	42	True				
ANR	4250611	Statement	"""checkpoint on running jobs on specific machines.\\n"""	208:5:7026:7077	4250070	43	True				
ANR	4250612	Statement	"""  The jobs continue to run once """	209:5:7084:7117	4250070	44	True				
ANR	4250613	Statement	"""they are done checkpointing.\\n"""	210:5:7124:7155	4250070	45	True				
ANR	4250614	Statement	","	210:37:7156:7156	4250070	46	True				
ANR	4250615	Statement	str	211:5:7163:7165	4250070	47	True				
ANR	4250616	Statement	)	211:8:7166:7166	4250070	48	True				
ANR	4250617	ExpressionStatement		211:9:7167:7167	4250070	49	True				
ANR	4250618	BreakStatement	break ;	212:2:7171:7176	4250070	50	True				
ANR	4250619	Label	case SQUAWK :	213:1:7179:7190	4250070	51	True				
ANR	4250620	Identifier	SQUAWK		4250070	0					
ANR	4250621	Statement	fprintf	214:2:7194:7200	4250070	52	True				
ANR	4250622	Statement	(	214:9:7201:7201	4250070	53	True				
ANR	4250623	Statement	stderr	214:11:7203:7208	4250070	54	True				
ANR	4250624	Statement	","	214:17:7209:7209	4250070	55	True				
ANR	4250625	Statement	"""  %s\\n"""	214:19:7211:7218	4250070	56	True				
ANR	4250626	Statement	"""is a developer-only command used to talk to daemons."""	215:5:7225:7278	4250070	57	True				
ANR	4250627	Statement	","	215:59:7279:7279	4250070	58	True				
ANR	4250628	Statement	str	216:5:7287:7289	4250070	59	True				
ANR	4250629	Statement	)	216:9:7291:7291	4250070	60	True				
ANR	4250630	ExpressionStatement		216:10:7292:7292	4250070	61	True				
ANR	4250631	BreakStatement	break ;	217:2:7296:7301	4250070	62	True				
ANR	4250632	Label	default :	218:1:7304:7311	4250070	63	True				
ANR	4250633	Identifier	default		4250070	0					
ANR	4250634	ExpressionStatement	"fprintf ( stderr , ""  Valid commands are:\\n%s%s"" , ""\\toff, on, restart, reconfig, reschedule, "" , ""vacate, checkpoint, set_shutdown\\n\\n"" )"	219:2:7315:7459	4250070	64	True				
ANR	4250635	CallExpression	"fprintf ( stderr , ""  Valid commands are:\\n%s%s"" , ""\\toff, on, restart, reconfig, reschedule, "" , ""vacate, checkpoint, set_shutdown\\n\\n"" )"		4250070	0					
ANR	4250636	Callee	fprintf		4250070	0					
ANR	4250637	Identifier	fprintf		4250070	0					
ANR	4250638	ArgumentList	stderr		4250070	1					
ANR	4250639	Argument	stderr		4250070	0					
ANR	4250640	Identifier	stderr		4250070	0					
ANR	4250641	Argument	"""  Valid commands are:\\n%s%s"""		4250070	1					
ANR	4250642	PrimaryExpression	"""  Valid commands are:\\n%s%s"""		4250070	0					
ANR	4250643	Argument	"""\\toff, on, restart, reconfig, reschedule, """		4250070	2					
ANR	4250644	PrimaryExpression	"""\\toff, on, restart, reconfig, reschedule, """		4250070	0					
ANR	4250645	Argument	"""vacate, checkpoint, set_shutdown\\n\\n"""		4250070	3					
ANR	4250646	PrimaryExpression	"""vacate, checkpoint, set_shutdown\\n\\n"""		4250070	0					
ANR	4250647	ExpressionStatement	"fprintf ( stderr , ""  Use \\""%s [command] -help\\"" for more information %s\\n"" , str , ""on a given command."" )"	222:2:7463:7572	4250070	65	True				
ANR	4250648	CallExpression	"fprintf ( stderr , ""  Use \\""%s [command] -help\\"" for more information %s\\n"" , str , ""on a given command."" )"		4250070	0					
ANR	4250649	Callee	fprintf		4250070	0					
ANR	4250650	Identifier	fprintf		4250070	0					
ANR	4250651	ArgumentList	stderr		4250070	1					
ANR	4250652	Argument	stderr		4250070	0					
ANR	4250653	Identifier	stderr		4250070	0					
ANR	4250654	Argument	"""  Use \\""%s [command] -help\\"" for more information %s\\n"""		4250070	1					
ANR	4250655	PrimaryExpression	"""  Use \\""%s [command] -help\\"" for more information %s\\n"""		4250070	0					
ANR	4250656	Argument	str		4250070	2					
ANR	4250657	Identifier	str		4250070	0					
ANR	4250658	Argument	"""on a given command."""		4250070	3					
ANR	4250659	PrimaryExpression	"""on a given command."""		4250070	0					
ANR	4250660	BreakStatement	break ;	224:2:7576:7581	4250070	66	True				
ANR	4250661	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	226:1:7587:7609	4250070	23	True				
ANR	4250662	CallExpression	"fprintf ( stderr , ""\\n"" )"		4250070	0					
ANR	4250663	Callee	fprintf		4250070	0					
ANR	4250664	Identifier	fprintf		4250070	0					
ANR	4250665	ArgumentList	stderr		4250070	1					
ANR	4250666	Argument	stderr		4250070	0					
ANR	4250667	Identifier	stderr		4250070	0					
ANR	4250668	Argument	"""\\n"""		4250070	1					
ANR	4250669	PrimaryExpression	"""\\n"""		4250070	0					
ANR	4250670	ExpressionStatement	exit ( iExitCode )	227:1:7612:7629	4250070	24	True				
ANR	4250671	CallExpression	exit ( iExitCode )		4250070	0					
ANR	4250672	Callee	exit		4250070	0					
ANR	4250673	Identifier	exit		4250070	0					
ANR	4250674	ArgumentList	iExitCode		4250070	1					
ANR	4250675	Argument	iExitCode		4250070	0					
ANR	4250676	Identifier	iExitCode		4250070	0					
ANR	4250677	ReturnType	void		4250070	1					
ANR	4250678	Identifier	usage		4250070	2					
ANR	4250679	ParameterList	"char * str , int iExitCode"		4250070	3					
ANR	4250680	Parameter	char * str	93:7:2766:2774	4250070	0	True				
ANR	4250681	ParameterType	char *		4250070	0					
ANR	4250682	Identifier	str		4250070	1					
ANR	4250683	Parameter	int iExitCode	93:18:2777:2789	4250070	1	True				
ANR	4250684	ParameterType	int		4250070	0					
ANR	4250685	Identifier	iExitCode		4250070	1					
ANR	4250686	CFGEntryNode	ENTRY		4250070		True				
ANR	4250687	CFGExitNode	EXIT		4250070		True				
ANR	4250688	Symbol	str		4250070						
ANR	4250689	Symbol	tmp		4250070						
ANR	4250690	Symbol	strchr		4250070						
ANR	4250691	Symbol	RESTART		4250070						
ANR	4250692	Symbol	iExitCode		4250070						
ANR	4250693	Symbol	DAEMONS_OFF		4250070						
ANR	4250694	Symbol	cmd		4250070						
ANR	4250695	Symbol	stderr		4250070						
ANR	4250696	Symbol	takes_subsys		4250070						
ANR	4250697	Symbol	DAEMON_OFF		4250070						
ANR	4250698	Symbol	VACATE_CLAIM		4250070						
ANR	4250699	Function	pool_target_usage	231:0:7635:7942							
ANR	4250700	FunctionDef	pool_target_usage ()		4250699	0					
ANR	4250701	CompoundStatement		233:0:7666:7942	4250699	0					
ANR	4250702	Statement	fprintf	234:1:7669:7675	4250699	0	True				
ANR	4250703	Statement	(	234:8:7676:7676	4250699	1	True				
ANR	4250704	Statement	stderr	234:10:7678:7683	4250699	2	True				
ANR	4250705	Statement	","	234:16:7684:7684	4250699	3	True				
ANR	4250706	Statement	"""ERROR: You have asked to find a machine in """	234:18:7686:7730	4250699	4	True				
ANR	4250707	Statement	"""another pool (with\\n"""	235:4:7736:7757	4250699	5	True				
ANR	4250708	Statement	"""the -pool option) but you have not specified which machine.\\n"""	236:4:7763:7825	4250699	6	True				
ANR	4250709	Statement	"""Please also use -addr, -name, or list the name(s).\\n"""	237:4:7831:7884	4250699	7	True				
ANR	4250710	Statement	"""For more information, use -help.\\n"""	238:4:7890:7925	4250699	8	True				
ANR	4250711	Statement	)	238:41:7927:7927	4250699	9	True				
ANR	4250712	ExpressionStatement		238:42:7928:7928	4250699	10	True				
ANR	4250713	ExpressionStatement	exit ( 1 )	239:1:7931:7940	4250699	11	True				
ANR	4250714	CallExpression	exit ( 1 )		4250699	0					
ANR	4250715	Callee	exit		4250699	0					
ANR	4250716	Identifier	exit		4250699	0					
ANR	4250717	ArgumentList	1		4250699	1					
ANR	4250718	Argument	1		4250699	0					
ANR	4250719	PrimaryExpression	1		4250699	0					
ANR	4250720	ReturnType	void		4250699	1					
ANR	4250721	Identifier	pool_target_usage		4250699	2					
ANR	4250722	ParameterList			4250699	3					
ANR	4250723	CFGEntryNode	ENTRY		4250699		True				
ANR	4250724	CFGExitNode	EXIT		4250699		True				
ANR	4250725	Function	cmdToStr	243:0:7946:9309							
ANR	4250726	FunctionDef	cmdToStr (int c)		4250725	0					
ANR	4250727	CompoundStatement		245:0:7976:9309	4250725	0					
ANR	4250728	SwitchStatement	switch ( c )		4250725	0					
ANR	4250729	Condition	c	246:9:7987:7987	4250725	0	True				
ANR	4250730	Identifier	c		4250725	0					
ANR	4250731	CompoundStatement		2:13:14:14	4250725	1					
ANR	4250732	Label	case DAEMONS_OFF :	247:1:7994:8010	4250725	0	True				
ANR	4250733	Identifier	DAEMONS_OFF		4250725	0					
ANR	4250734	ReturnStatement	"return ""Kill-All-Daemons"" ;"	248:2:8014:8039	4250725	1	True				
ANR	4250735	PrimaryExpression	"""Kill-All-Daemons"""		4250725	0					
ANR	4250736	Label	case DAEMONS_OFF_FAST :	249:1:8042:8063	4250725	2	True				
ANR	4250737	Identifier	DAEMONS_OFF_FAST		4250725	0					
ANR	4250738	ReturnStatement	"return ""Kill-All-Daemons-Fast"" ;"	250:2:8067:8097	4250725	3	True				
ANR	4250739	PrimaryExpression	"""Kill-All-Daemons-Fast"""		4250725	0					
ANR	4250740	Label	case DAEMONS_OFF_PEACEFUL :	251:1:8100:8125	4250725	4	True				
ANR	4250741	Identifier	DAEMONS_OFF_PEACEFUL		4250725	0					
ANR	4250742	ReturnStatement	"return ""Kill-All-Daemons-Peacefully"" ;"	252:2:8129:8165	4250725	5	True				
ANR	4250743	PrimaryExpression	"""Kill-All-Daemons-Peacefully"""		4250725	0					
ANR	4250744	Label	case DAEMON_OFF :	253:1:8168:8183	4250725	6	True				
ANR	4250745	Identifier	DAEMON_OFF		4250725	0					
ANR	4250746	Label	case DC_OFF_GRACEFUL :	254:1:8186:8206	4250725	7	True				
ANR	4250747	Identifier	DC_OFF_GRACEFUL		4250725	0					
ANR	4250748	ReturnStatement	"return ""Kill-Daemon"" ;"	255:2:8210:8230	4250725	8	True				
ANR	4250749	PrimaryExpression	"""Kill-Daemon"""		4250725	0					
ANR	4250750	Label	case DAEMON_OFF_FAST :	256:1:8233:8253	4250725	9	True				
ANR	4250751	Identifier	DAEMON_OFF_FAST		4250725	0					
ANR	4250752	Label	case DC_OFF_FAST :	257:1:8256:8272	4250725	10	True				
ANR	4250753	Identifier	DC_OFF_FAST		4250725	0					
ANR	4250754	ReturnStatement	"return ""Kill-Daemon-Fast"" ;"	258:2:8276:8301	4250725	11	True				
ANR	4250755	PrimaryExpression	"""Kill-Daemon-Fast"""		4250725	0					
ANR	4250756	Label	case DAEMON_OFF_PEACEFUL :	259:1:8304:8328	4250725	12	True				
ANR	4250757	Identifier	DAEMON_OFF_PEACEFUL		4250725	0					
ANR	4250758	Label	case DC_OFF_PEACEFUL :	260:1:8331:8351	4250725	13	True				
ANR	4250759	Identifier	DC_OFF_PEACEFUL		4250725	0					
ANR	4250760	ReturnStatement	"return ""Kill-Daemon-Peacefully"" ;"	261:2:8355:8386	4250725	14	True				
ANR	4250761	PrimaryExpression	"""Kill-Daemon-Peacefully"""		4250725	0					
ANR	4250762	Label	case DC_SET_PEACEFUL_SHUTDOWN :	262:1:8389:8418	4250725	15	True				
ANR	4250763	Identifier	DC_SET_PEACEFUL_SHUTDOWN		4250725	0					
ANR	4250764	ReturnStatement	"return ""Set-Peaceful-Shutdown"" ;"	263:2:8422:8452	4250725	16	True				
ANR	4250765	PrimaryExpression	"""Set-Peaceful-Shutdown"""		4250725	0					
ANR	4250766	Label	case DAEMONS_ON :	264:1:8455:8470	4250725	17	True				
ANR	4250767	Identifier	DAEMONS_ON		4250725	0					
ANR	4250768	ReturnStatement	"return ""Spawn-All-Daemons"" ;"	265:2:8474:8500	4250725	18	True				
ANR	4250769	PrimaryExpression	"""Spawn-All-Daemons"""		4250725	0					
ANR	4250770	Label	case DAEMON_ON :	266:1:8503:8517	4250725	19	True				
ANR	4250771	Identifier	DAEMON_ON		4250725	0					
ANR	4250772	ReturnStatement	"return ""Spawn-Daemon"" ;"	267:2:8521:8542	4250725	20	True				
ANR	4250773	PrimaryExpression	"""Spawn-Daemon"""		4250725	0					
ANR	4250774	Label	case RESTART :	268:1:8545:8557	4250725	21	True				
ANR	4250775	Identifier	RESTART		4250725	0					
ANR	4250776	IfStatement	if ( fast )		4250725	22					
ANR	4250777	Condition	fast	269:6:8565:8568	4250725	0	True				
ANR	4250778	Identifier	fast		4250725	0					
ANR	4250779	CompoundStatement		25:13:595:595	4250725	1					
ANR	4250780	ReturnStatement	"return ""Restart-Fast"" ;"	270:3:8577:8598	4250725	0	True				
ANR	4250781	PrimaryExpression	"""Restart-Fast"""		4250725	0					
ANR	4250782	ElseStatement	else		4250725	0					
ANR	4250783	IfStatement	if ( peaceful_shutdown )		4250725	0					
ANR	4250784	Condition	peaceful_shutdown	271:13:8613:8629	4250725	0	True				
ANR	4250785	Identifier	peaceful_shutdown		4250725	0					
ANR	4250786	CompoundStatement		27:33:656:656	4250725	1					
ANR	4250787	ReturnStatement	"return ""Restart-Peaceful"" ;"	272:3:8638:8663	4250725	0	True				
ANR	4250788	PrimaryExpression	"""Restart-Peaceful"""		4250725	0					
ANR	4250789	ElseStatement	else		4250725	0					
ANR	4250790	CompoundStatement		29:9:697:697	4250725	0					
ANR	4250791	ReturnStatement	"return ""Restart"" ;"	274:3:8679:8695	4250725	0	True				
ANR	4250792	PrimaryExpression	"""Restart"""		4250725	0					
ANR	4250793	Label	case VACATE_CLAIM :	276:1:8702:8719	4250725	23	True				
ANR	4250794	Identifier	VACATE_CLAIM		4250725	0					
ANR	4250795	ReturnStatement	"return ""Vacate-Claim"" ;"	277:2:8723:8744	4250725	24	True				
ANR	4250796	PrimaryExpression	"""Vacate-Claim"""		4250725	0					
ANR	4250797	Label	case VACATE_CLAIM_FAST :	278:1:8747:8769	4250725	25	True				
ANR	4250798	Identifier	VACATE_CLAIM_FAST		4250725	0					
ANR	4250799	ReturnStatement	"return ""Vacate-Claim-Fast"" ;"	279:2:8773:8799	4250725	26	True				
ANR	4250800	PrimaryExpression	"""Vacate-Claim-Fast"""		4250725	0					
ANR	4250801	Label	case VACATE_ALL_CLAIMS :	280:1:8802:8824	4250725	27	True				
ANR	4250802	Identifier	VACATE_ALL_CLAIMS		4250725	0					
ANR	4250803	ReturnStatement	"return ""Vacate-All-Claims"" ;"	281:2:8828:8854	4250725	28	True				
ANR	4250804	PrimaryExpression	"""Vacate-All-Claims"""		4250725	0					
ANR	4250805	Label	case VACATE_ALL_FAST :	282:1:8857:8877	4250725	29	True				
ANR	4250806	Identifier	VACATE_ALL_FAST		4250725	0					
ANR	4250807	ReturnStatement	"return ""Vacate-All-Claims-Fast"" ;"	283:2:8881:8912	4250725	30	True				
ANR	4250808	PrimaryExpression	"""Vacate-All-Claims-Fast"""		4250725	0					
ANR	4250809	Label	case PCKPT_JOB :	284:1:8915:8929	4250725	31	True				
ANR	4250810	Identifier	PCKPT_JOB		4250725	0					
ANR	4250811	ReturnStatement	"return ""Checkpoint-Job"" ;"	285:2:8933:8956	4250725	32	True				
ANR	4250812	PrimaryExpression	"""Checkpoint-Job"""		4250725	0					
ANR	4250813	Label	case PCKPT_ALL_JOBS :	286:1:8959:8978	4250725	33	True				
ANR	4250814	Identifier	PCKPT_ALL_JOBS		4250725	0					
ANR	4250815	ReturnStatement	"return ""Checkpoint-All-Jobs"" ;"	287:2:8982:9010	4250725	34	True				
ANR	4250816	PrimaryExpression	"""Checkpoint-All-Jobs"""		4250725	0					
ANR	4250817	Label	case RESCHEDULE :	288:1:9013:9028	4250725	35	True				
ANR	4250818	Identifier	RESCHEDULE		4250725	0					
ANR	4250819	ReturnStatement	"return ""Reschedule"" ;"	289:2:9032:9051	4250725	36	True				
ANR	4250820	PrimaryExpression	"""Reschedule"""		4250725	0					
ANR	4250821	Label	case DC_RECONFIG_FULL :	290:1:9054:9075	4250725	37	True				
ANR	4250822	Identifier	DC_RECONFIG_FULL		4250725	0					
ANR	4250823	ReturnStatement	"return ""Reconfig"" ;"	291:2:9079:9096	4250725	38	True				
ANR	4250824	PrimaryExpression	"""Reconfig"""		4250725	0					
ANR	4250825	Label	case SQUAWK :	292:1:9099:9110	4250725	39	True				
ANR	4250826	Identifier	SQUAWK		4250725	0					
ANR	4250827	ReturnStatement	"return ""Squawk"" ;"	293:2:9114:9129	4250725	40	True				
ANR	4250828	PrimaryExpression	"""Squawk"""		4250725	0					
ANR	4250829	Label	case SET_SHUTDOWN_PROGRAM :	294:1:9132:9157	4250725	41	True				
ANR	4250830	Identifier	SET_SHUTDOWN_PROGRAM		4250725	0					
ANR	4250831	ReturnStatement	"return ""Set-Shutdown-Program"" ;"	295:2:9161:9190	4250725	42	True				
ANR	4250832	PrimaryExpression	"""Set-Shutdown-Program"""		4250725	0					
ANR	4250833	ExpressionStatement	"fprintf ( stderr , ""Unknown Command (%d) in cmdToStr()\\n"" , c )"	297:1:9196:9256	4250725	1	True				
ANR	4250834	CallExpression	"fprintf ( stderr , ""Unknown Command (%d) in cmdToStr()\\n"" , c )"		4250725	0					
ANR	4250835	Callee	fprintf		4250725	0					
ANR	4250836	Identifier	fprintf		4250725	0					
ANR	4250837	ArgumentList	stderr		4250725	1					
ANR	4250838	Argument	stderr		4250725	0					
ANR	4250839	Identifier	stderr		4250725	0					
ANR	4250840	Argument	"""Unknown Command (%d) in cmdToStr()\\n"""		4250725	1					
ANR	4250841	PrimaryExpression	"""Unknown Command (%d) in cmdToStr()\\n"""		4250725	0					
ANR	4250842	Argument	c		4250725	2					
ANR	4250843	Identifier	c		4250725	0					
ANR	4250844	ExpressionStatement	exit ( 1 )	298:1:9259:9266	4250725	2	True				
ANR	4250845	CallExpression	exit ( 1 )		4250725	0					
ANR	4250846	Callee	exit		4250725	0					
ANR	4250847	Identifier	exit		4250725	0					
ANR	4250848	ArgumentList	1		4250725	1					
ANR	4250849	Argument	1		4250725	0					
ANR	4250850	PrimaryExpression	1		4250725	0					
ANR	4250851	ReturnStatement	"return ""UNKNOWN"" ;"	300:1:9270:9286	4250725	3	True				
ANR	4250852	PrimaryExpression	"""UNKNOWN"""		4250725	0					
ANR	4250853	ReturnType	const char *		4250725	1					
ANR	4250854	Identifier	cmdToStr		4250725	2					
ANR	4250855	ParameterList	int c		4250725	3					
ANR	4250856	Parameter	int c	244:10:7968:7972	4250725	0	True				
ANR	4250857	ParameterType	int		4250725	0					
ANR	4250858	Identifier	c		4250725	1					
ANR	4250859	CFGEntryNode	ENTRY		4250725		True				
ANR	4250860	CFGExitNode	EXIT		4250725		True				
ANR	4250861	Symbol	c		4250725						
ANR	4250862	Symbol	fast		4250725						
ANR	4250863	Symbol	peaceful_shutdown		4250725						
ANR	4250864	Symbol	stderr		4250725						
ANR	4250865	Function	subsys_check	304:0:9314:9608							
ANR	4250866	FunctionDef	subsys_check (char * MyName)		4250865	0					
ANR	4250867	CompoundStatement		306:0:9348:9608	4250865	0					
ANR	4250868	IfStatement	if ( ! takes_subsys )		4250865	0					
ANR	4250869	Condition	! takes_subsys	307:5:9355:9368	4250865	0	True				
ANR	4250870	UnaryOperationExpression	! takes_subsys		4250865	0					
ANR	4250871	UnaryOperator	!		4250865	0					
ANR	4250872	Identifier	takes_subsys		4250865	1					
ANR	4250873	CompoundStatement		2:22:23:23	4250865	1					
ANR	4250874	ExpressionStatement	"fprintf ( stderr , ""ERROR: Can't specify a daemon flag with %s.\\n"" , MyName )"	308:2:9376:9463	4250865	0	True				
ANR	4250875	CallExpression	"fprintf ( stderr , ""ERROR: Can't specify a daemon flag with %s.\\n"" , MyName )"		4250865	0					
ANR	4250876	Callee	fprintf		4250865	0					
ANR	4250877	Identifier	fprintf		4250865	0					
ANR	4250878	ArgumentList	stderr		4250865	1					
ANR	4250879	Argument	stderr		4250865	0					
ANR	4250880	Identifier	stderr		4250865	0					
ANR	4250881	Argument	"""ERROR: Can't specify a daemon flag with %s.\\n"""		4250865	1					
ANR	4250882	PrimaryExpression	"""ERROR: Can't specify a daemon flag with %s.\\n"""		4250865	0					
ANR	4250883	Argument	MyName		4250865	2					
ANR	4250884	Identifier	MyName		4250865	0					
ANR	4250885	ExpressionStatement	usage ( MyName )	311:2:9467:9482	4250865	1	True				
ANR	4250886	CallExpression	usage ( MyName )		4250865	0					
ANR	4250887	Callee	usage		4250865	0					
ANR	4250888	Identifier	usage		4250865	0					
ANR	4250889	ArgumentList	MyName		4250865	1					
ANR	4250890	Argument	MyName		4250865	0					
ANR	4250891	Identifier	MyName		4250865	0					
ANR	4250892	IfStatement	if ( dt )		4250865	1					
ANR	4250893	Condition	dt	313:5:9492:9493	4250865	0	True				
ANR	4250894	Identifier	dt		4250865	0					
ANR	4250895	CompoundStatement		8:10:148:148	4250865	1					
ANR	4250896	ExpressionStatement	"fprintf ( stderr , ""ERROR: can only specify one daemon flag.\\n"" )"	314:2:9501:9564	4250865	0	True				
ANR	4250897	CallExpression	"fprintf ( stderr , ""ERROR: can only specify one daemon flag.\\n"" )"		4250865	0					
ANR	4250898	Callee	fprintf		4250865	0					
ANR	4250899	Identifier	fprintf		4250865	0					
ANR	4250900	ArgumentList	stderr		4250865	1					
ANR	4250901	Argument	stderr		4250865	0					
ANR	4250902	Identifier	stderr		4250865	0					
ANR	4250903	Argument	"""ERROR: can only specify one daemon flag.\\n"""		4250865	1					
ANR	4250904	PrimaryExpression	"""ERROR: can only specify one daemon flag.\\n"""		4250865	0					
ANR	4250905	ExpressionStatement	usage ( MyName )	315:2:9568:9583	4250865	1	True				
ANR	4250906	CallExpression	usage ( MyName )		4250865	0					
ANR	4250907	Callee	usage		4250865	0					
ANR	4250908	Identifier	usage		4250865	0					
ANR	4250909	ArgumentList	MyName		4250865	1					
ANR	4250910	Argument	MyName		4250865	0					
ANR	4250911	Identifier	MyName		4250865	0					
ANR	4250912	ExpressionStatement	subsys = ( char * ) 1	317:1:9589:9606	4250865	2	True				
ANR	4250913	AssignmentExpression	subsys = ( char * ) 1		4250865	0		=			
ANR	4250914	Identifier	subsys		4250865	0					
ANR	4250915	CastExpression	( char * ) 1		4250865	1					
ANR	4250916	CastTarget	char *		4250865	0					
ANR	4250917	PrimaryExpression	1		4250865	1					
ANR	4250918	ReturnType	void		4250865	1					
ANR	4250919	Identifier	subsys_check		4250865	2					
ANR	4250920	ParameterList	char * MyName		4250865	3					
ANR	4250921	Parameter	char * MyName	305:14:9333:9344	4250865	0	True				
ANR	4250922	ParameterType	char *		4250865	0					
ANR	4250923	Identifier	MyName		4250865	1					
ANR	4250924	CFGEntryNode	ENTRY		4250865		True				
ANR	4250925	CFGExitNode	EXIT		4250865		True				
ANR	4250926	Symbol	dt		4250865						
ANR	4250927	Symbol	subsys		4250865						
ANR	4250928	Symbol	MyName		4250865						
ANR	4250929	Symbol	takes_subsys		4250865						
ANR	4250930	Symbol	stderr		4250865						
ANR	4250931	Function	main	321:0:9612:23032							
ANR	4250932	FunctionDef	"main (int argc , char * argv [ ])"		4250931	0					
ANR	4250933	CompoundStatement		323:0:9647:23032	4250931	0					
ANR	4250934	IdentifierDeclStatement	char * MyName = argv [ 0 ] ;	324:1:9650:9672	4250931	0	True				
ANR	4250935	IdentifierDecl	* MyName = argv [ 0 ]		4250931	0					
ANR	4250936	IdentifierDeclType	char *		4250931	0					
ANR	4250937	Identifier	MyName		4250931	1					
ANR	4250938	AssignmentExpression	* MyName = argv [ 0 ]		4250931	2		=			
ANR	4250939	Identifier	MyName		4250931	0					
ANR	4250940	ArrayIndexing	argv [ 0 ]		4250931	1					
ANR	4250941	Identifier	argv		4250931	0					
ANR	4250942	PrimaryExpression	0		4250931	1					
ANR	4250943	IdentifierDeclStatement	"char * cmd_str , * * tmp ;"	325:1:9675:9695	4250931	1	True				
ANR	4250944	IdentifierDecl	* cmd_str		4250931	0					
ANR	4250945	IdentifierDeclType	char *		4250931	0					
ANR	4250946	Identifier	cmd_str		4250931	1					
ANR	4250947	IdentifierDecl	* * tmp		4250931	1					
ANR	4250948	IdentifierDeclType	char * *		4250931	0					
ANR	4250949	Identifier	tmp		4250931	1					
ANR	4250950	IdentifierDeclStatement	int size ;	326:1:9698:9706	4250931	2	True				
ANR	4250951	IdentifierDecl	size		4250931	0					
ANR	4250952	IdentifierDeclType	int		4250931	0					
ANR	4250953	Identifier	size		4250931	1					
ANR	4250954	IdentifierDeclStatement	int rc ;	327:1:9709:9715	4250931	3	True				
ANR	4250955	IdentifierDecl	rc		4250931	0					
ANR	4250956	IdentifierDeclType	int		4250931	0					
ANR	4250957	Identifier	rc		4250931	1					
ANR	4250958	IdentifierDeclStatement	param_functions * p_funcs = NULL ;	328:1:9718:9749	4250931	4	True				
ANR	4250959	IdentifierDecl	* p_funcs = NULL		4250931	0					
ANR	4250960	IdentifierDeclType	param_functions *		4250931	0					
ANR	4250961	Identifier	p_funcs		4250931	1					
ANR	4250962	AssignmentExpression	* p_funcs = NULL		4250931	2		=			
ANR	4250963	Identifier	NULL		4250931	0					
ANR	4250964	Identifier	NULL		4250931	1					
ANR	4250965	ExpressionStatement	"install_sig_handler ( SIGPIPE , SIG_IGN )"	333:1:9858:9896	4250931	5	True				
ANR	4250966	CallExpression	"install_sig_handler ( SIGPIPE , SIG_IGN )"		4250931	0					
ANR	4250967	Callee	install_sig_handler		4250931	0					
ANR	4250968	Identifier	install_sig_handler		4250931	0					
ANR	4250969	ArgumentList	SIGPIPE		4250931	1					
ANR	4250970	Argument	SIGPIPE		4250931	0					
ANR	4250971	Identifier	SIGPIPE		4250931	0					
ANR	4250972	Argument	SIG_IGN		4250931	1					
ANR	4250973	Identifier	SIG_IGN		4250931	0					
ANR	4250974	ExpressionStatement	"myDistro -> Init ( argc , argv )"	336:1:9907:9935	4250931	6	True				
ANR	4250975	CallExpression	"myDistro -> Init ( argc , argv )"		4250931	0					
ANR	4250976	Callee	myDistro -> Init		4250931	0					
ANR	4250977	PtrMemberAccess	myDistro -> Init		4250931	0					
ANR	4250978	Identifier	myDistro		4250931	0					
ANR	4250979	Identifier	Init		4250931	1					
ANR	4250980	ArgumentList	argc		4250931	1					
ANR	4250981	Argument	argc		4250931	0					
ANR	4250982	Identifier	argc		4250931	0					
ANR	4250983	Argument	argv		4250931	1					
ANR	4250984	Identifier	argv		4250931	0					
ANR	4250985	ExpressionStatement	config ( )	337:1:9938:9946	4250931	7	True				
ANR	4250986	CallExpression	config ( )		4250931	0					
ANR	4250987	Callee	config		4250931	0					
ANR	4250988	Identifier	config		4250931	0					
ANR	4250989	ArgumentList			4250931	1					
ANR	4250990	ExpressionStatement	"MyName = strrchr ( argv [ 0 ] , DIR_DELIM_CHAR )"	339:1:9950:9993	4250931	8	True				
ANR	4250991	AssignmentExpression	"MyName = strrchr ( argv [ 0 ] , DIR_DELIM_CHAR )"		4250931	0		=			
ANR	4250992	Identifier	MyName		4250931	0					
ANR	4250993	CallExpression	"strrchr ( argv [ 0 ] , DIR_DELIM_CHAR )"		4250931	1					
ANR	4250994	Callee	strrchr		4250931	0					
ANR	4250995	Identifier	strrchr		4250931	0					
ANR	4250996	ArgumentList	argv [ 0 ]		4250931	1					
ANR	4250997	Argument	argv [ 0 ]		4250931	0					
ANR	4250998	ArrayIndexing	argv [ 0 ]		4250931	0					
ANR	4250999	Identifier	argv		4250931	0					
ANR	4251000	PrimaryExpression	0		4250931	1					
ANR	4251001	Argument	DIR_DELIM_CHAR		4250931	1					
ANR	4251002	Identifier	DIR_DELIM_CHAR		4250931	0					
ANR	4251003	IfStatement	if ( ! MyName )		4250931	9					
ANR	4251004	Condition	! MyName	340:5:10000:10006	4250931	0	True				
ANR	4251005	UnaryOperationExpression	! MyName		4250931	0					
ANR	4251006	UnaryOperator	!		4250931	0					
ANR	4251007	Identifier	MyName		4250931	1					
ANR	4251008	CompoundStatement		18:15:362:362	4250931	1					
ANR	4251009	ExpressionStatement	MyName = argv [ 0 ]	341:2:10014:10030	4250931	0	True				
ANR	4251010	AssignmentExpression	MyName = argv [ 0 ]		4250931	0		=			
ANR	4251011	Identifier	MyName		4250931	0					
ANR	4251012	ArrayIndexing	argv [ 0 ]		4250931	1					
ANR	4251013	Identifier	argv		4250931	0					
ANR	4251014	PrimaryExpression	0		4250931	1					
ANR	4251015	ElseStatement	else		4250931	0					
ANR	4251016	CompoundStatement		20:8:392:392	4250931	0					
ANR	4251017	ExpressionStatement	MyName ++	343:2:10044:10052	4250931	0	True				
ANR	4251018	PostIncDecOperationExpression	MyName ++		4250931	0					
ANR	4251019	Identifier	MyName		4250931	0					
ANR	4251020	IncDec	++		4250931	1					
ANR	4251021	ExpressionStatement	"cmd_str = strchr ( MyName , '_' )"	346:1:10123:10153	4250931	10	True				
ANR	4251022	AssignmentExpression	"cmd_str = strchr ( MyName , '_' )"		4250931	0		=			
ANR	4251023	Identifier	cmd_str		4250931	0					
ANR	4251024	CallExpression	"strchr ( MyName , '_' )"		4250931	1					
ANR	4251025	Callee	strchr		4250931	0					
ANR	4251026	Identifier	strchr		4250931	0					
ANR	4251027	ArgumentList	MyName		4250931	1					
ANR	4251028	Argument	MyName		4250931	0					
ANR	4251029	Identifier	MyName		4250931	0					
ANR	4251030	Argument	'_'		4250931	1					
ANR	4251031	PrimaryExpression	'_'		4250931	0					
ANR	4251032	IfStatement	if ( ! cmd_str )		4250931	11					
ANR	4251033	Condition	! cmd_str	347:5:10160:10167	4250931	0	True				
ANR	4251034	UnaryOperationExpression	! cmd_str		4250931	0					
ANR	4251035	UnaryOperator	!		4250931	0					
ANR	4251036	Identifier	cmd_str		4250931	1					
ANR	4251037	CompoundStatement		25:16:523:523	4250931	1					
ANR	4251038	IfStatement	if ( ! argv [ 1 ] )		4250931	0					
ANR	4251039	Condition	! argv [ 1 ]	350:6:10222:10230	4250931	0	True				
ANR	4251040	UnaryOperationExpression	! argv [ 1 ]		4250931	0					
ANR	4251041	UnaryOperator	!		4250931	0					
ANR	4251042	ArrayIndexing	argv [ 1 ]		4250931	1					
ANR	4251043	Identifier	argv		4250931	0					
ANR	4251044	PrimaryExpression	1		4250931	1					
ANR	4251045	CompoundStatement		28:18:586:586	4250931	1					
ANR	4251046	ExpressionStatement	usage ( MyName )	350:20:10236:10251	4250931	0	True				
ANR	4251047	CallExpression	usage ( MyName )		4250931	0					
ANR	4251048	Callee	usage		4250931	0					
ANR	4251049	Identifier	usage		4250931	0					
ANR	4251050	ArgumentList	MyName		4250931	1					
ANR	4251051	Argument	MyName		4250931	0					
ANR	4251052	Identifier	MyName		4250931	0					
ANR	4251053	IfStatement	if ( argv [ 1 ] [ 0 ] == '-' )		4250931	1					
ANR	4251054	Condition	argv [ 1 ] [ 0 ] == '-'	353:6:10323:10339	4250931	0	True				
ANR	4251055	EqualityExpression	argv [ 1 ] [ 0 ] == '-'		4250931	0		==			
ANR	4251056	ArrayIndexing	argv [ 1 ] [ 0 ]		4250931	0					
ANR	4251057	ArrayIndexing	argv [ 1 ]		4250931	0					
ANR	4251058	Identifier	argv		4250931	0					
ANR	4251059	PrimaryExpression	1		4250931	1					
ANR	4251060	PrimaryExpression	0		4250931	1					
ANR	4251061	PrimaryExpression	'-'		4250931	1					
ANR	4251062	CompoundStatement		31:26:695:695	4250931	1					
ANR	4251063	IfStatement	if ( argv [ 1 ] [ 1 ] == 'v' )		4250931	0					
ANR	4251064	Condition	argv [ 1 ] [ 1 ] == 'v'	356:7:10461:10477	4250931	0	True				
ANR	4251065	EqualityExpression	argv [ 1 ] [ 1 ] == 'v'		4250931	0		==			
ANR	4251066	ArrayIndexing	argv [ 1 ] [ 1 ]		4250931	0					
ANR	4251067	ArrayIndexing	argv [ 1 ]		4250931	0					
ANR	4251068	Identifier	argv		4250931	0					
ANR	4251069	PrimaryExpression	1		4250931	1					
ANR	4251070	PrimaryExpression	1		4250931	1					
ANR	4251071	PrimaryExpression	'v'		4250931	1					
ANR	4251072	CompoundStatement		34:27:833:833	4250931	1					
ANR	4251073	ExpressionStatement	version ( )	357:4:10487:10496	4250931	0	True				
ANR	4251074	CallExpression	version ( )		4250931	0					
ANR	4251075	Callee	version		4250931	0					
ANR	4251076	Identifier	version		4250931	0					
ANR	4251077	ArgumentList			4250931	1					
ANR	4251078	ElseStatement	else		4250931	0					
ANR	4251079	CompoundStatement		36:10:860:860	4250931	0					
ANR	4251080	ExpressionStatement	usage ( MyName )	359:4:10514:10529	4250931	0	True				
ANR	4251081	CallExpression	usage ( MyName )		4250931	0					
ANR	4251082	Callee	usage		4250931	0					
ANR	4251083	Identifier	usage		4250931	0					
ANR	4251084	ArgumentList	MyName		4250931	1					
ANR	4251085	Argument	MyName		4250931	0					
ANR	4251086	Identifier	MyName		4250931	0					
ANR	4251087	ExpressionStatement	size = strlen ( argv [ 1 ] )	362:2:10542:10566	4250931	2	True				
ANR	4251088	AssignmentExpression	size = strlen ( argv [ 1 ] )		4250931	0		=			
ANR	4251089	Identifier	size		4250931	0					
ANR	4251090	CallExpression	strlen ( argv [ 1 ] )		4250931	1					
ANR	4251091	Callee	strlen		4250931	0					
ANR	4251092	Identifier	strlen		4250931	0					
ANR	4251093	ArgumentList	argv [ 1 ]		4250931	1					
ANR	4251094	Argument	argv [ 1 ]		4250931	0					
ANR	4251095	ArrayIndexing	argv [ 1 ]		4250931	0					
ANR	4251096	Identifier	argv		4250931	0					
ANR	4251097	PrimaryExpression	1		4250931	1					
ANR	4251098	ExpressionStatement	MyName = ( char * ) malloc ( size + 8 )	363:2:10570:10604	4250931	3	True				
ANR	4251099	AssignmentExpression	MyName = ( char * ) malloc ( size + 8 )		4250931	0		=			
ANR	4251100	Identifier	MyName		4250931	0					
ANR	4251101	CastExpression	( char * ) malloc ( size + 8 )		4250931	1					
ANR	4251102	CastTarget	char *		4250931	0					
ANR	4251103	CallExpression	malloc ( size + 8 )		4250931	1					
ANR	4251104	Callee	malloc		4250931	0					
ANR	4251105	Identifier	malloc		4250931	0					
ANR	4251106	ArgumentList	size + 8		4250931	1					
ANR	4251107	Argument	size + 8		4250931	0					
ANR	4251108	AdditiveExpression	size + 8		4250931	0		+			
ANR	4251109	Identifier	size		4250931	0					
ANR	4251110	PrimaryExpression	8		4250931	1					
ANR	4251111	ExpressionStatement	"sprintf ( MyName , ""condor_%s"" , argv [ 1 ] )"	364:2:10608:10647	4250931	4	True				
ANR	4251112	CallExpression	"sprintf ( MyName , ""condor_%s"" , argv [ 1 ] )"		4250931	0					
ANR	4251113	Callee	sprintf		4250931	0					
ANR	4251114	Identifier	sprintf		4250931	0					
ANR	4251115	ArgumentList	MyName		4250931	1					
ANR	4251116	Argument	MyName		4250931	0					
ANR	4251117	Identifier	MyName		4250931	0					
ANR	4251118	Argument	"""condor_%s"""		4250931	1					
ANR	4251119	PrimaryExpression	"""condor_%s"""		4250931	0					
ANR	4251120	Argument	argv [ 1 ]		4250931	2					
ANR	4251121	ArrayIndexing	argv [ 1 ]		4250931	0					
ANR	4251122	Identifier	argv		4250931	0					
ANR	4251123	PrimaryExpression	1		4250931	1					
ANR	4251124	ExpressionStatement	cmd_str = MyName + 6	365:2:10651:10669	4250931	5	True				
ANR	4251125	AssignmentExpression	cmd_str = MyName + 6		4250931	0		=			
ANR	4251126	Identifier	cmd_str		4250931	0					
ANR	4251127	AdditiveExpression	MyName + 6		4250931	1		+			
ANR	4251128	Identifier	MyName		4250931	0					
ANR	4251129	PrimaryExpression	6		4250931	1					
ANR	4251130	ExpressionStatement	argv ++	366:2:10673:10679	4250931	6	True				
ANR	4251131	PostIncDecOperationExpression	argv ++		4250931	0					
ANR	4251132	Identifier	argv		4250931	0					
ANR	4251133	IncDec	++		4250931	1					
ANR	4251134	ExpressionStatement	argc --	366:10:10681:10687	4250931	7	True				
ANR	4251135	PostIncDecOperationExpression	argc --		4250931	0					
ANR	4251136	Identifier	argc		4250931	0					
ANR	4251137	IncDec	--		4250931	1					
ANR	4251138	IfStatement	"if ( ! strncmp_auto ( cmd_str , ""_reconfig_schedd"" ) )"		4250931	12					
ANR	4251139	Condition	"! strncmp_auto ( cmd_str , ""_reconfig_schedd"" )"	372:5:10904:10947	4250931	0	True				
ANR	4251140	UnaryOperationExpression	"! strncmp_auto ( cmd_str , ""_reconfig_schedd"" )"		4250931	0					
ANR	4251141	UnaryOperator	!		4250931	0					
ANR	4251142	CallExpression	"strncmp_auto ( cmd_str , ""_reconfig_schedd"" )"		4250931	1					
ANR	4251143	Callee	strncmp_auto		4250931	0					
ANR	4251144	Identifier	strncmp_auto		4250931	0					
ANR	4251145	ArgumentList	cmd_str		4250931	1					
ANR	4251146	Argument	cmd_str		4250931	0					
ANR	4251147	Identifier	cmd_str		4250931	0					
ANR	4251148	Argument	"""_reconfig_schedd"""		4250931	1					
ANR	4251149	PrimaryExpression	"""_reconfig_schedd"""		4250931	0					
ANR	4251150	CompoundStatement		50:52:1303:1303	4250931	1					
ANR	4251151	ExpressionStatement	"fprintf ( stderr , ""WARNING: condor_reconfig_schedd is deprecated.\\n"" )"	373:2:10955:11024	4250931	0	True				
ANR	4251152	CallExpression	"fprintf ( stderr , ""WARNING: condor_reconfig_schedd is deprecated.\\n"" )"		4250931	0					
ANR	4251153	Callee	fprintf		4250931	0					
ANR	4251154	Identifier	fprintf		4250931	0					
ANR	4251155	ArgumentList	stderr		4250931	1					
ANR	4251156	Argument	stderr		4250931	0					
ANR	4251157	Identifier	stderr		4250931	0					
ANR	4251158	Argument	"""WARNING: condor_reconfig_schedd is deprecated.\\n"""		4250931	1					
ANR	4251159	PrimaryExpression	"""WARNING: condor_reconfig_schedd is deprecated.\\n"""		4250931	0					
ANR	4251160	ExpressionStatement	"fprintf ( stderr , ""\\t Use: \\""condor_reconfig -schedd\\"" instead.\\n"" )"	374:2:11028:11095	4250931	1	True				
ANR	4251161	CallExpression	"fprintf ( stderr , ""\\t Use: \\""condor_reconfig -schedd\\"" instead.\\n"" )"		4250931	0					
ANR	4251162	Callee	fprintf		4250931	0					
ANR	4251163	Identifier	fprintf		4250931	0					
ANR	4251164	ArgumentList	stderr		4250931	1					
ANR	4251165	Argument	stderr		4250931	0					
ANR	4251166	Identifier	stderr		4250931	0					
ANR	4251167	Argument	"""\\t Use: \\""condor_reconfig -schedd\\"" instead.\\n"""		4250931	1					
ANR	4251168	PrimaryExpression	"""\\t Use: \\""condor_reconfig -schedd\\"" instead.\\n"""		4250931	0					
ANR	4251169	ExpressionStatement	cmd = DC_RECONFIG_FULL	375:2:11099:11121	4250931	2	True				
ANR	4251170	AssignmentExpression	cmd = DC_RECONFIG_FULL		4250931	0		=			
ANR	4251171	Identifier	cmd		4250931	0					
ANR	4251172	Identifier	DC_RECONFIG_FULL		4250931	1					
ANR	4251173	ExpressionStatement	dt = DT_SCHEDD	376:2:11125:11139	4250931	3	True				
ANR	4251174	AssignmentExpression	dt = DT_SCHEDD		4250931	0		=			
ANR	4251175	Identifier	dt		4250931	0					
ANR	4251176	Identifier	DT_SCHEDD		4250931	1					
ANR	4251177	ElseStatement	else		4250931	0					
ANR	4251178	IfStatement	"if ( ! strncmp_auto ( cmd_str , ""_reconfig"" ) )"		4250931	0					
ANR	4251179	Condition	"! strncmp_auto ( cmd_str , ""_reconfig"" )"	377:15:11156:11192	4250931	0	True				
ANR	4251180	UnaryOperationExpression	"! strncmp_auto ( cmd_str , ""_reconfig"" )"		4250931	0					
ANR	4251181	UnaryOperator	!		4250931	0					
ANR	4251182	CallExpression	"strncmp_auto ( cmd_str , ""_reconfig"" )"		4250931	1					
ANR	4251183	Callee	strncmp_auto		4250931	0					
ANR	4251184	Identifier	strncmp_auto		4250931	0					
ANR	4251185	ArgumentList	cmd_str		4250931	1					
ANR	4251186	Argument	cmd_str		4250931	0					
ANR	4251187	Identifier	cmd_str		4250931	0					
ANR	4251188	Argument	"""_reconfig"""		4250931	1					
ANR	4251189	PrimaryExpression	"""_reconfig"""		4250931	0					
ANR	4251190	CompoundStatement		55:55:1548:1548	4250931	1					
ANR	4251191	ExpressionStatement	cmd = DC_RECONFIG_FULL	378:2:11200:11222	4250931	0	True				
ANR	4251192	AssignmentExpression	cmd = DC_RECONFIG_FULL		4250931	0		=			
ANR	4251193	Identifier	cmd		4250931	0					
ANR	4251194	Identifier	DC_RECONFIG_FULL		4250931	1					
ANR	4251195	ExpressionStatement	takes_subsys = 1	379:2:11226:11242	4250931	1	True				
ANR	4251196	AssignmentExpression	takes_subsys = 1		4250931	0		=			
ANR	4251197	Identifier	takes_subsys		4250931	0					
ANR	4251198	PrimaryExpression	1		4250931	1					
ANR	4251199	ElseStatement	else		4250931	0					
ANR	4251200	IfStatement	"if ( ! strncmp_auto ( cmd_str , ""_restart"" ) )"		4250931	0					
ANR	4251201	Condition	"! strncmp_auto ( cmd_str , ""_restart"" )"	380:12:11256:11291	4250931	0	True				
ANR	4251202	UnaryOperationExpression	"! strncmp_auto ( cmd_str , ""_restart"" )"		4250931	0					
ANR	4251203	UnaryOperator	!		4250931	0					
ANR	4251204	CallExpression	"strncmp_auto ( cmd_str , ""_restart"" )"		4250931	1					
ANR	4251205	Callee	strncmp_auto		4250931	0					
ANR	4251206	Identifier	strncmp_auto		4250931	0					
ANR	4251207	ArgumentList	cmd_str		4250931	1					
ANR	4251208	Argument	cmd_str		4250931	0					
ANR	4251209	Identifier	cmd_str		4250931	0					
ANR	4251210	Argument	"""_restart"""		4250931	1					
ANR	4251211	PrimaryExpression	"""_restart"""		4250931	0					
ANR	4251212	CompoundStatement		58:51:1647:1647	4250931	1					
ANR	4251213	ExpressionStatement	cmd = RESTART	381:2:11299:11312	4250931	0	True				
ANR	4251214	AssignmentExpression	cmd = RESTART		4250931	0		=			
ANR	4251215	Identifier	cmd		4250931	0					
ANR	4251216	Identifier	RESTART		4250931	1					
ANR	4251217	ExpressionStatement	takes_subsys = 1	382:2:11316:11332	4250931	1	True				
ANR	4251218	AssignmentExpression	takes_subsys = 1		4250931	0		=			
ANR	4251219	Identifier	takes_subsys		4250931	0					
ANR	4251220	PrimaryExpression	1		4250931	1					
ANR	4251221	ElseStatement	else		4250931	0					
ANR	4251222	IfStatement	"if ( ! strncmp_auto ( cmd_str , ""_off"" ) )"		4250931	0					
ANR	4251223	Condition	"! strncmp_auto ( cmd_str , ""_off"" )"	383:12:11346:11377	4250931	0	True				
ANR	4251224	UnaryOperationExpression	"! strncmp_auto ( cmd_str , ""_off"" )"		4250931	0					
ANR	4251225	UnaryOperator	!		4250931	0					
ANR	4251226	CallExpression	"strncmp_auto ( cmd_str , ""_off"" )"		4250931	1					
ANR	4251227	Callee	strncmp_auto		4250931	0					
ANR	4251228	Identifier	strncmp_auto		4250931	0					
ANR	4251229	ArgumentList	cmd_str		4250931	1					
ANR	4251230	Argument	cmd_str		4250931	0					
ANR	4251231	Identifier	cmd_str		4250931	0					
ANR	4251232	Argument	"""_off"""		4250931	1					
ANR	4251233	PrimaryExpression	"""_off"""		4250931	0					
ANR	4251234	CompoundStatement		61:47:1733:1733	4250931	1					
ANR	4251235	ExpressionStatement	cmd = DAEMONS_OFF	384:2:11385:11402	4250931	0	True				
ANR	4251236	AssignmentExpression	cmd = DAEMONS_OFF		4250931	0		=			
ANR	4251237	Identifier	cmd		4250931	0					
ANR	4251238	Identifier	DAEMONS_OFF		4250931	1					
ANR	4251239	ExpressionStatement	takes_subsys = 1	385:2:11406:11422	4250931	1	True				
ANR	4251240	AssignmentExpression	takes_subsys = 1		4250931	0		=			
ANR	4251241	Identifier	takes_subsys		4250931	0					
ANR	4251242	PrimaryExpression	1		4250931	1					
ANR	4251243	ElseStatement	else		4250931	0					
ANR	4251244	IfStatement	"if ( ! strncmp_auto ( cmd_str , ""_on"" ) )"		4250931	0					
ANR	4251245	Condition	"! strncmp_auto ( cmd_str , ""_on"" )"	386:12:11436:11466	4250931	0	True				
ANR	4251246	UnaryOperationExpression	"! strncmp_auto ( cmd_str , ""_on"" )"		4250931	0					
ANR	4251247	UnaryOperator	!		4250931	0					
ANR	4251248	CallExpression	"strncmp_auto ( cmd_str , ""_on"" )"		4250931	1					
ANR	4251249	Callee	strncmp_auto		4250931	0					
ANR	4251250	Identifier	strncmp_auto		4250931	0					
ANR	4251251	ArgumentList	cmd_str		4250931	1					
ANR	4251252	Argument	cmd_str		4250931	0					
ANR	4251253	Identifier	cmd_str		4250931	0					
ANR	4251254	Argument	"""_on"""		4250931	1					
ANR	4251255	PrimaryExpression	"""_on"""		4250931	0					
ANR	4251256	CompoundStatement		64:46:1822:1822	4250931	1					
ANR	4251257	ExpressionStatement	cmd = DAEMONS_ON	387:2:11474:11490	4250931	0	True				
ANR	4251258	AssignmentExpression	cmd = DAEMONS_ON		4250931	0		=			
ANR	4251259	Identifier	cmd		4250931	0					
ANR	4251260	Identifier	DAEMONS_ON		4250931	1					
ANR	4251261	ExpressionStatement	takes_subsys = 1	388:2:11494:11510	4250931	1	True				
ANR	4251262	AssignmentExpression	takes_subsys = 1		4250931	0		=			
ANR	4251263	Identifier	takes_subsys		4250931	0					
ANR	4251264	PrimaryExpression	1		4250931	1					
ANR	4251265	ElseStatement	else		4250931	0					
ANR	4251266	IfStatement	"if ( ! strncmp_auto ( cmd_str , ""_master_off"" ) )"		4250931	0					
ANR	4251267	Condition	"! strncmp_auto ( cmd_str , ""_master_off"" )"	389:12:11524:11562	4250931	0	True				
ANR	4251268	UnaryOperationExpression	"! strncmp_auto ( cmd_str , ""_master_off"" )"		4250931	0					
ANR	4251269	UnaryOperator	!		4250931	0					
ANR	4251270	CallExpression	"strncmp_auto ( cmd_str , ""_master_off"" )"		4250931	1					
ANR	4251271	Callee	strncmp_auto		4250931	0					
ANR	4251272	Identifier	strncmp_auto		4250931	0					
ANR	4251273	ArgumentList	cmd_str		4250931	1					
ANR	4251274	Argument	cmd_str		4250931	0					
ANR	4251275	Identifier	cmd_str		4250931	0					
ANR	4251276	Argument	"""_master_off"""		4250931	1					
ANR	4251277	PrimaryExpression	"""_master_off"""		4250931	0					
ANR	4251278	CompoundStatement		67:54:1918:1918	4250931	1					
ANR	4251279	ExpressionStatement	"fprintf ( stderr , ""WARNING: condor_master_off is deprecated.\\n"" )"	390:2:11570:11634	4250931	0	True				
ANR	4251280	CallExpression	"fprintf ( stderr , ""WARNING: condor_master_off is deprecated.\\n"" )"		4250931	0					
ANR	4251281	Callee	fprintf		4250931	0					
ANR	4251282	Identifier	fprintf		4250931	0					
ANR	4251283	ArgumentList	stderr		4250931	1					
ANR	4251284	Argument	stderr		4250931	0					
ANR	4251285	Identifier	stderr		4250931	0					
ANR	4251286	Argument	"""WARNING: condor_master_off is deprecated.\\n"""		4250931	1					
ANR	4251287	PrimaryExpression	"""WARNING: condor_master_off is deprecated.\\n"""		4250931	0					
ANR	4251288	ExpressionStatement	"fprintf ( stderr , ""\\t Use: \\""condor_off -master\\"" instead.\\n"" )"	391:2:11638:11700	4250931	1	True				
ANR	4251289	CallExpression	"fprintf ( stderr , ""\\t Use: \\""condor_off -master\\"" instead.\\n"" )"		4250931	0					
ANR	4251290	Callee	fprintf		4250931	0					
ANR	4251291	Identifier	fprintf		4250931	0					
ANR	4251292	ArgumentList	stderr		4250931	1					
ANR	4251293	Argument	stderr		4250931	0					
ANR	4251294	Identifier	stderr		4250931	0					
ANR	4251295	Argument	"""\\t Use: \\""condor_off -master\\"" instead.\\n"""		4250931	1					
ANR	4251296	PrimaryExpression	"""\\t Use: \\""condor_off -master\\"" instead.\\n"""		4250931	0					
ANR	4251297	ExpressionStatement	cmd = DC_OFF_GRACEFUL	392:2:11704:11725	4250931	2	True				
ANR	4251298	AssignmentExpression	cmd = DC_OFF_GRACEFUL		4250931	0		=			
ANR	4251299	Identifier	cmd		4250931	0					
ANR	4251300	Identifier	DC_OFF_GRACEFUL		4250931	1					
ANR	4251301	ExpressionStatement	dt = DT_MASTER	393:2:11729:11743	4250931	3	True				
ANR	4251302	AssignmentExpression	dt = DT_MASTER		4250931	0		=			
ANR	4251303	Identifier	dt		4250931	0					
ANR	4251304	Identifier	DT_MASTER		4250931	1					
ANR	4251305	ExpressionStatement	takes_subsys = 0	394:2:11747:11763	4250931	4	True				
ANR	4251306	AssignmentExpression	takes_subsys = 0		4250931	0		=			
ANR	4251307	Identifier	takes_subsys		4250931	0					
ANR	4251308	PrimaryExpression	0		4250931	1					
ANR	4251309	ElseStatement	else		4250931	0					
ANR	4251310	IfStatement	"if ( ! strncmp_auto ( cmd_str , ""_reschedule"" ) )"		4250931	0					
ANR	4251311	Condition	"! strncmp_auto ( cmd_str , ""_reschedule"" )"	395:12:11777:11815	4250931	0	True				
ANR	4251312	UnaryOperationExpression	"! strncmp_auto ( cmd_str , ""_reschedule"" )"		4250931	0					
ANR	4251313	UnaryOperator	!		4250931	0					
ANR	4251314	CallExpression	"strncmp_auto ( cmd_str , ""_reschedule"" )"		4250931	1					
ANR	4251315	Callee	strncmp_auto		4250931	0					
ANR	4251316	Identifier	strncmp_auto		4250931	0					
ANR	4251317	ArgumentList	cmd_str		4250931	1					
ANR	4251318	Argument	cmd_str		4250931	0					
ANR	4251319	Identifier	cmd_str		4250931	0					
ANR	4251320	Argument	"""_reschedule"""		4250931	1					
ANR	4251321	PrimaryExpression	"""_reschedule"""		4250931	0					
ANR	4251322	CompoundStatement		73:54:2171:2171	4250931	1					
ANR	4251323	ExpressionStatement	cmd = RESCHEDULE	396:2:11823:11839	4250931	0	True				
ANR	4251324	AssignmentExpression	cmd = RESCHEDULE		4250931	0		=			
ANR	4251325	Identifier	cmd		4250931	0					
ANR	4251326	Identifier	RESCHEDULE		4250931	1					
ANR	4251327	ElseStatement	else		4250931	0					
ANR	4251328	IfStatement	"if ( ! strncmp_auto ( cmd_str , ""_vacate"" ) )"		4250931	0					
ANR	4251329	Condition	"! strncmp_auto ( cmd_str , ""_vacate"" )"	397:12:11853:11887	4250931	0	True				
ANR	4251330	UnaryOperationExpression	"! strncmp_auto ( cmd_str , ""_vacate"" )"		4250931	0					
ANR	4251331	UnaryOperator	!		4250931	0					
ANR	4251332	CallExpression	"strncmp_auto ( cmd_str , ""_vacate"" )"		4250931	1					
ANR	4251333	Callee	strncmp_auto		4250931	0					
ANR	4251334	Identifier	strncmp_auto		4250931	0					
ANR	4251335	ArgumentList	cmd_str		4250931	1					
ANR	4251336	Argument	cmd_str		4250931	0					
ANR	4251337	Identifier	cmd_str		4250931	0					
ANR	4251338	Argument	"""_vacate"""		4250931	1					
ANR	4251339	PrimaryExpression	"""_vacate"""		4250931	0					
ANR	4251340	CompoundStatement		75:50:2243:2243	4250931	1					
ANR	4251341	ExpressionStatement	cmd = VACATE_CLAIM	398:2:11895:11913	4250931	0	True				
ANR	4251342	AssignmentExpression	cmd = VACATE_CLAIM		4250931	0		=			
ANR	4251343	Identifier	cmd		4250931	0					
ANR	4251344	Identifier	VACATE_CLAIM		4250931	1					
ANR	4251345	ElseStatement	else		4250931	0					
ANR	4251346	IfStatement	"if ( ! strncmp_auto ( cmd_str , ""_checkpoint"" ) )"		4250931	0					
ANR	4251347	Condition	"! strncmp_auto ( cmd_str , ""_checkpoint"" )"	399:12:11927:11965	4250931	0	True				
ANR	4251348	UnaryOperationExpression	"! strncmp_auto ( cmd_str , ""_checkpoint"" )"		4250931	0					
ANR	4251349	UnaryOperator	!		4250931	0					
ANR	4251350	CallExpression	"strncmp_auto ( cmd_str , ""_checkpoint"" )"		4250931	1					
ANR	4251351	Callee	strncmp_auto		4250931	0					
ANR	4251352	Identifier	strncmp_auto		4250931	0					
ANR	4251353	ArgumentList	cmd_str		4250931	1					
ANR	4251354	Argument	cmd_str		4250931	0					
ANR	4251355	Identifier	cmd_str		4250931	0					
ANR	4251356	Argument	"""_checkpoint"""		4250931	1					
ANR	4251357	PrimaryExpression	"""_checkpoint"""		4250931	0					
ANR	4251358	CompoundStatement		77:54:2321:2321	4250931	1					
ANR	4251359	ExpressionStatement	cmd = PCKPT_JOB	400:2:11973:11988	4250931	0	True				
ANR	4251360	AssignmentExpression	cmd = PCKPT_JOB		4250931	0		=			
ANR	4251361	Identifier	cmd		4250931	0					
ANR	4251362	Identifier	PCKPT_JOB		4250931	1					
ANR	4251363	ElseStatement	else		4250931	0					
ANR	4251364	IfStatement	"if ( ! strncmp_auto ( cmd_str , ""_squawk"" ) )"		4250931	0					
ANR	4251365	Condition	"! strncmp_auto ( cmd_str , ""_squawk"" )"	401:13:12003:12037	4250931	0	True				
ANR	4251366	UnaryOperationExpression	"! strncmp_auto ( cmd_str , ""_squawk"" )"		4250931	0					
ANR	4251367	UnaryOperator	!		4250931	0					
ANR	4251368	CallExpression	"strncmp_auto ( cmd_str , ""_squawk"" )"		4250931	1					
ANR	4251369	Callee	strncmp_auto		4250931	0					
ANR	4251370	Identifier	strncmp_auto		4250931	0					
ANR	4251371	ArgumentList	cmd_str		4250931	1					
ANR	4251372	Argument	cmd_str		4250931	0					
ANR	4251373	Identifier	cmd_str		4250931	0					
ANR	4251374	Argument	"""_squawk"""		4250931	1					
ANR	4251375	PrimaryExpression	"""_squawk"""		4250931	0					
ANR	4251376	CompoundStatement		79:51:2393:2393	4250931	1					
ANR	4251377	ExpressionStatement	cmd = SQUAWK	402:2:12045:12057	4250931	0	True				
ANR	4251378	AssignmentExpression	cmd = SQUAWK		4250931	0		=			
ANR	4251379	Identifier	cmd		4250931	0					
ANR	4251380	Identifier	SQUAWK		4250931	1					
ANR	4251381	ExpressionStatement	takes_subsys = 1	403:2:12061:12077	4250931	1	True				
ANR	4251382	AssignmentExpression	takes_subsys = 1		4250931	0		=			
ANR	4251383	Identifier	takes_subsys		4250931	0					
ANR	4251384	PrimaryExpression	1		4250931	1					
ANR	4251385	ElseStatement	else		4250931	0					
ANR	4251386	IfStatement	"if ( ! strncmp_auto ( cmd_str , ""_set_shutdown"" ) )"		4250931	0					
ANR	4251387	Condition	"! strncmp_auto ( cmd_str , ""_set_shutdown"" )"	404:13:12092:12132	4250931	0	True				
ANR	4251388	UnaryOperationExpression	"! strncmp_auto ( cmd_str , ""_set_shutdown"" )"		4250931	0					
ANR	4251389	UnaryOperator	!		4250931	0					
ANR	4251390	CallExpression	"strncmp_auto ( cmd_str , ""_set_shutdown"" )"		4250931	1					
ANR	4251391	Callee	strncmp_auto		4250931	0					
ANR	4251392	Identifier	strncmp_auto		4250931	0					
ANR	4251393	ArgumentList	cmd_str		4250931	1					
ANR	4251394	Argument	cmd_str		4250931	0					
ANR	4251395	Identifier	cmd_str		4250931	0					
ANR	4251396	Argument	"""_set_shutdown"""		4250931	1					
ANR	4251397	PrimaryExpression	"""_set_shutdown"""		4250931	0					
ANR	4251398	CompoundStatement		82:57:2488:2488	4250931	1					
ANR	4251399	ExpressionStatement	cmd = SET_SHUTDOWN_PROGRAM	405:2:12140:12166	4250931	0	True				
ANR	4251400	AssignmentExpression	cmd = SET_SHUTDOWN_PROGRAM		4250931	0		=			
ANR	4251401	Identifier	cmd		4250931	0					
ANR	4251402	Identifier	SET_SHUTDOWN_PROGRAM		4250931	1					
ANR	4251403	ElseStatement	else		4250931	0					
ANR	4251404	CompoundStatement		84:8:2528:2528	4250931	0					
ANR	4251405	ExpressionStatement	"fprintf ( stderr , ""ERROR: unknown command %s\\n"" , MyName )"	407:2:12180:12236	4250931	0	True				
ANR	4251406	CallExpression	"fprintf ( stderr , ""ERROR: unknown command %s\\n"" , MyName )"		4250931	0					
ANR	4251407	Callee	fprintf		4250931	0					
ANR	4251408	Identifier	fprintf		4250931	0					
ANR	4251409	ArgumentList	stderr		4250931	1					
ANR	4251410	Argument	stderr		4250931	0					
ANR	4251411	Identifier	stderr		4250931	0					
ANR	4251412	Argument	"""ERROR: unknown command %s\\n"""		4250931	1					
ANR	4251413	PrimaryExpression	"""ERROR: unknown command %s\\n"""		4250931	0					
ANR	4251414	Argument	MyName		4250931	2					
ANR	4251415	Identifier	MyName		4250931	0					
ANR	4251416	ExpressionStatement	"usage ( ""condor"" )"	408:2:12240:12257	4250931	1	True				
ANR	4251417	CallExpression	"usage ( ""condor"" )"		4250931	0					
ANR	4251418	Callee	usage		4250931	0					
ANR	4251419	Identifier	usage		4250931	0					
ANR	4251420	ArgumentList	"""condor"""		4250931	1					
ANR	4251421	Argument	"""condor"""		4250931	0					
ANR	4251422	PrimaryExpression	"""condor"""		4250931	0					
ANR	4251423	ExpressionStatement	tmp = argv	412:1:12312:12322	4250931	13	True				
ANR	4251424	AssignmentExpression	tmp = argv		4250931	0		=			
ANR	4251425	Identifier	tmp		4250931	0					
ANR	4251426	Identifier	argv		4250931	1					
ANR	4251427	ForStatement	for ( tmp ++ ; * tmp ; tmp ++ )		4250931	14					
ANR	4251428	ForInit	tmp ++ ;	413:6:12330:12335	4250931	0	True				
ANR	4251429	PostIncDecOperationExpression	tmp ++		4250931	0					
ANR	4251430	Identifier	tmp		4250931	0					
ANR	4251431	IncDec	++		4250931	1					
ANR	4251432	Condition	* tmp	413:13:12337:12340	4250931	1	True				
ANR	4251433	UnaryOperationExpression	* tmp		4250931	0					
ANR	4251434	UnaryOperator	*		4250931	0					
ANR	4251435	Identifier	tmp		4250931	1					
ANR	4251436	PostIncDecOperationExpression	tmp ++	413:19:12343:12347	4250931	2	True				
ANR	4251437	Identifier	tmp		4250931	0					
ANR	4251438	IncDec	++		4250931	1					
ANR	4251439	CompoundStatement		91:27:2703:2703	4250931	3					
ANR	4251440	IfStatement	if ( ( * tmp ) [ 0 ] != '-' )		4250931	0					
ANR	4251441	Condition	( * tmp ) [ 0 ] != '-'	414:6:12359:12374	4250931	0	True				
ANR	4251442	EqualityExpression	( * tmp ) [ 0 ] != '-'		4250931	0		!=			
ANR	4251443	ArrayIndexing	( * tmp ) [ 0 ]		4250931	0					
ANR	4251444	UnaryOperationExpression	* tmp		4250931	0					
ANR	4251445	UnaryOperator	*		4250931	0					
ANR	4251446	Identifier	tmp		4250931	1					
ANR	4251447	PrimaryExpression	0		4250931	1					
ANR	4251448	PrimaryExpression	'-'		4250931	1					
ANR	4251449	CompoundStatement		92:25:2730:2730	4250931	1					
ANR	4251450	ContinueStatement	continue ;	416:3:12428:12436	4250931	0	True				
ANR	4251451	SwitchStatement	switch ( ( * tmp ) [ 1 ] )		4250931	1					
ANR	4251452	Condition	( * tmp ) [ 1 ]	418:10:12452:12460	4250931	0	True				
ANR	4251453	ArrayIndexing	( * tmp ) [ 1 ]		4250931	0					
ANR	4251454	UnaryOperationExpression	* tmp		4250931	0					
ANR	4251455	UnaryOperator	*		4250931	0					
ANR	4251456	Identifier	tmp		4250931	1					
ANR	4251457	PrimaryExpression	1		4250931	1					
ANR	4251458	CompoundStatement		96:22:2816:2816	4250931	1					
ANR	4251459	Label	case 'v' :	419:2:12468:12476	4250931	0	True				
ANR	4251460	ExpressionStatement	version ( )	420:3:12481:12490	4250931	1	True				
ANR	4251461	CallExpression	version ( )		4250931	0					
ANR	4251462	Callee	version		4250931	0					
ANR	4251463	Identifier	version		4250931	0					
ANR	4251464	ArgumentList			4250931	1					
ANR	4251465	BreakStatement	break ;	421:3:12495:12500	4250931	2	True				
ANR	4251466	Label	case 'q' :	423:2:12531:12539	4250931	3	True				
ANR	4251467	ExpressionStatement	subsys_check ( MyName )	424:3:12544:12566	4250931	4	True				
ANR	4251468	CallExpression	subsys_check ( MyName )		4250931	0					
ANR	4251469	Callee	subsys_check		4250931	0					
ANR	4251470	Identifier	subsys_check		4250931	0					
ANR	4251471	ArgumentList	MyName		4250931	1					
ANR	4251472	Argument	MyName		4250931	0					
ANR	4251473	Identifier	MyName		4250931	0					
ANR	4251474	ExpressionStatement	dt = DT_QUILL	425:3:12571:12584	4250931	5	True				
ANR	4251475	AssignmentExpression	dt = DT_QUILL		4250931	0		=			
ANR	4251476	Identifier	dt		4250931	0					
ANR	4251477	Identifier	DT_QUILL		4250931	1					
ANR	4251478	BreakStatement	break ;	426:3:12589:12594	4250931	6	True				
ANR	4251479	Label	case 'h' :	428:2:12605:12613	4250931	7	True				
ANR	4251480	ExpressionStatement	"usage ( MyName , 0 )"	429:3:12618:12636	4250931	8	True				
ANR	4251481	CallExpression	"usage ( MyName , 0 )"		4250931	0					
ANR	4251482	Callee	usage		4250931	0					
ANR	4251483	Identifier	usage		4250931	0					
ANR	4251484	ArgumentList	MyName		4250931	1					
ANR	4251485	Argument	MyName		4250931	0					
ANR	4251486	Identifier	MyName		4250931	0					
ANR	4251487	Argument	0		4250931	1					
ANR	4251488	PrimaryExpression	0		4250931	0					
ANR	4251489	BreakStatement	break ;	430:3:12641:12646	4250931	9	True				
ANR	4251490	Label	case 'p' :	431:2:12650:12658	4250931	10	True				
ANR	4251491	IfStatement	if ( ( * tmp ) [ 2 ] == 'e' )		4250931	11					
ANR	4251492	Condition	( * tmp ) [ 2 ] == 'e'	432:6:12666:12681	4250931	0	True				
ANR	4251493	EqualityExpression	( * tmp ) [ 2 ] == 'e'		4250931	0		==			
ANR	4251494	ArrayIndexing	( * tmp ) [ 2 ]		4250931	0					
ANR	4251495	UnaryOperationExpression	* tmp		4250931	0					
ANR	4251496	UnaryOperator	*		4250931	0					
ANR	4251497	Identifier	tmp		4250931	1					
ANR	4251498	PrimaryExpression	2		4250931	1					
ANR	4251499	PrimaryExpression	'e'		4250931	1					
ANR	4251500	CompoundStatement		110:24:3036:3036	4250931	1					
ANR	4251501	ExpressionStatement	peaceful_shutdown = true	433:4:12703:12727	4250931	0	True				
ANR	4251502	AssignmentExpression	peaceful_shutdown = true		4250931	0		=			
ANR	4251503	Identifier	peaceful_shutdown		4250931	0					
ANR	4251504	Identifier	true		4250931	1					
ANR	4251505	ExpressionStatement	fast = false	434:4:12733:12745	4250931	1	True				
ANR	4251506	AssignmentExpression	fast = false		4250931	0		=			
ANR	4251507	Identifier	fast		4250931	0					
ANR	4251508	Identifier	false		4250931	1					
ANR	4251509	SwitchStatement	switch ( cmd )		4250931	2					
ANR	4251510	Condition	cmd	435:12:12759:12761	4250931	0	True				
ANR	4251511	Identifier	cmd		4250931	0					
ANR	4251512	CompoundStatement		113:18:3117:3117	4250931	1					
ANR	4251513	Label	case DAEMONS_OFF :	436:4:12771:12787	4250931	0	True				
ANR	4251514	Identifier	DAEMONS_OFF		4250931	0					
ANR	4251515	Label	case DC_OFF_GRACEFUL :	437:4:12793:12813	4250931	1	True				
ANR	4251516	Identifier	DC_OFF_GRACEFUL		4250931	0					
ANR	4251517	Label	case RESTART :	438:4:12819:12831	4250931	2	True				
ANR	4251518	Identifier	RESTART		4250931	0					
ANR	4251519	BreakStatement	break ;	439:5:12838:12843	4250931	3	True				
ANR	4251520	Label	default :	440:4:12849:12856	4250931	4	True				
ANR	4251521	Identifier	default		4250931	0					
ANR	4251522	Statement	fprintf	441:5:12863:12869	4250931	5	True				
ANR	4251523	Statement	(	441:12:12870:12870	4250931	6	True				
ANR	4251524	Statement	stderr	441:14:12872:12877	4250931	7	True				
ANR	4251525	Statement	","	441:20:12878:12878	4250931	8	True				
ANR	4251526	Statement	"""ERROR: \\""-peaceful\\"" """	441:22:12880:12902	4250931	9	True				
ANR	4251527	Statement	"""is not valid with %s\\n"""	442:8:12912:12935	4250931	10	True				
ANR	4251528	Statement	","	442:32:12936:12936	4250931	11	True				
ANR	4251529	Statement	MyName	442:34:12938:12943	4250931	12	True				
ANR	4251530	Statement	)	442:41:12945:12945	4250931	13	True				
ANR	4251531	ExpressionStatement		442:42:12946:12946	4250931	14	True				
ANR	4251532	ExpressionStatement	usage ( NULL )	443:5:12953:12966	4250931	15	True				
ANR	4251533	CallExpression	usage ( NULL )		4250931	0					
ANR	4251534	Callee	usage		4250931	0					
ANR	4251535	Identifier	usage		4250931	0					
ANR	4251536	ArgumentList	NULL		4250931	1					
ANR	4251537	Argument	NULL		4250931	0					
ANR	4251538	Identifier	NULL		4250931	0					
ANR	4251539	ElseStatement	else		4250931	0					
ANR	4251540	IfStatement	if ( ( * tmp ) [ 2 ] == '\\0' || ( * tmp ) [ 2 ] == 'o' )		4250931	0					
ANR	4251541	Condition	( * tmp ) [ 2 ] == '\\0' || ( * tmp ) [ 2 ] == 'o'	446:12:12991:13027	4250931	0	True				
ANR	4251542	OrExpression	( * tmp ) [ 2 ] == '\\0' || ( * tmp ) [ 2 ] == 'o'		4250931	0		||			
ANR	4251543	EqualityExpression	( * tmp ) [ 2 ] == '\\0'		4250931	0		==			
ANR	4251544	ArrayIndexing	( * tmp ) [ 2 ]		4250931	0					
ANR	4251545	UnaryOperationExpression	* tmp		4250931	0					
ANR	4251546	UnaryOperator	*		4250931	0					
ANR	4251547	Identifier	tmp		4250931	1					
ANR	4251548	PrimaryExpression	2		4250931	1					
ANR	4251549	PrimaryExpression	'\\0'		4250931	1					
ANR	4251550	EqualityExpression	( * tmp ) [ 2 ] == 'o'		4250931	1		==			
ANR	4251551	ArrayIndexing	( * tmp ) [ 2 ]		4250931	0					
ANR	4251552	UnaryOperationExpression	* tmp		4250931	0					
ANR	4251553	UnaryOperator	*		4250931	0					
ANR	4251554	Identifier	tmp		4250931	1					
ANR	4251555	PrimaryExpression	2		4250931	1					
ANR	4251556	PrimaryExpression	'o'		4250931	1					
ANR	4251557	CompoundStatement		124:52:3383:3383	4250931	1					
ANR	4251558	ExpressionStatement	tmp ++	447:4:13045:13050	4250931	0	True				
ANR	4251559	PostIncDecOperationExpression	tmp ++		4250931	0					
ANR	4251560	Identifier	tmp		4250931	0					
ANR	4251561	IncDec	++		4250931	1					
ANR	4251562	IfStatement	if ( tmp && * tmp )		4250931	1					
ANR	4251563	Condition	tmp && * tmp	448:8:13060:13070	4250931	0	True				
ANR	4251564	AndExpression	tmp && * tmp		4250931	0		&&			
ANR	4251565	Identifier	tmp		4250931	0					
ANR	4251566	UnaryOperationExpression	* tmp		4250931	1					
ANR	4251567	UnaryOperator	*		4250931	0					
ANR	4251568	Identifier	tmp		4250931	1					
ANR	4251569	CompoundStatement		126:22:3426:3426	4250931	1					
ANR	4251570	ExpressionStatement	pool = new DCCollector ( * tmp )	449:5:13081:13111	4250931	0	True				
ANR	4251571	AssignmentExpression	pool = new DCCollector ( * tmp )		4250931	0		=			
ANR	4251572	Identifier	pool		4250931	0					
ANR	4251573	UnaryOperationExpression	* tmp		4250931	1					
ANR	4251574	UnaryOperator	*		4250931	0					
ANR	4251575	Identifier	tmp		4250931	1					
ANR	4251576	IfStatement	if ( ! pool -> addr ( ) )		4250931	1					
ANR	4251577	Condition	! pool -> addr ( )	450:9:13122:13135	4250931	0	True				
ANR	4251578	UnaryOperationExpression	! pool -> addr ( )		4250931	0					
ANR	4251579	UnaryOperator	!		4250931	0					
ANR	4251580	CallExpression	pool -> addr ( )		4250931	1					
ANR	4251581	Callee	pool -> addr		4250931	0					
ANR	4251582	PtrMemberAccess	pool -> addr		4250931	0					
ANR	4251583	Identifier	pool		4250931	0					
ANR	4251584	Identifier	addr		4250931	1					
ANR	4251585	ArgumentList			4250931	1					
ANR	4251586	CompoundStatement		128:26:3491:3491	4250931	1					
ANR	4251587	ExpressionStatement	"fprintf ( stderr , ""%s: %s\\n"" , MyName , pool -> error ( ) )"	451:6:13147:13199	4250931	0	True				
ANR	4251588	CallExpression	"fprintf ( stderr , ""%s: %s\\n"" , MyName , pool -> error ( ) )"		4250931	0					
ANR	4251589	Callee	fprintf		4250931	0					
ANR	4251590	Identifier	fprintf		4250931	0					
ANR	4251591	ArgumentList	stderr		4250931	1					
ANR	4251592	Argument	stderr		4250931	0					
ANR	4251593	Identifier	stderr		4250931	0					
ANR	4251594	Argument	"""%s: %s\\n"""		4250931	1					
ANR	4251595	PrimaryExpression	"""%s: %s\\n"""		4250931	0					
ANR	4251596	Argument	MyName		4250931	2					
ANR	4251597	Identifier	MyName		4250931	0					
ANR	4251598	Argument	pool -> error ( )		4250931	3					
ANR	4251599	CallExpression	pool -> error ( )		4250931	0					
ANR	4251600	Callee	pool -> error		4250931	0					
ANR	4251601	PtrMemberAccess	pool -> error		4250931	0					
ANR	4251602	Identifier	pool		4250931	0					
ANR	4251603	Identifier	error		4250931	1					
ANR	4251604	ArgumentList			4250931	1					
ANR	4251605	ExpressionStatement	exit ( 1 )	452:6:13207:13216	4250931	1	True				
ANR	4251606	CallExpression	exit ( 1 )		4250931	0					
ANR	4251607	Callee	exit		4250931	0					
ANR	4251608	Identifier	exit		4250931	0					
ANR	4251609	ArgumentList	1		4250931	1					
ANR	4251610	Argument	1		4250931	0					
ANR	4251611	PrimaryExpression	1		4250931	0					
ANR	4251612	ElseStatement	else		4250931	0					
ANR	4251613	CompoundStatement		132:11:3588:3588	4250931	0					
ANR	4251614	ExpressionStatement	"fprintf ( stderr , ""ERROR: -pool requires another argument\\n"" )"	455:5:13243:13304	4250931	0	True				
ANR	4251615	CallExpression	"fprintf ( stderr , ""ERROR: -pool requires another argument\\n"" )"		4250931	0					
ANR	4251616	Callee	fprintf		4250931	0					
ANR	4251617	Identifier	fprintf		4250931	0					
ANR	4251618	ArgumentList	stderr		4250931	1					
ANR	4251619	Argument	stderr		4250931	0					
ANR	4251620	Identifier	stderr		4250931	0					
ANR	4251621	Argument	"""ERROR: -pool requires another argument\\n"""		4250931	1					
ANR	4251622	PrimaryExpression	"""ERROR: -pool requires another argument\\n"""		4250931	0					
ANR	4251623	ExpressionStatement	usage ( NULL )	456:5:13311:13324	4250931	1	True				
ANR	4251624	CallExpression	usage ( NULL )		4250931	0					
ANR	4251625	Callee	usage		4250931	0					
ANR	4251626	Identifier	usage		4250931	0					
ANR	4251627	ArgumentList	NULL		4250931	1					
ANR	4251628	Argument	NULL		4250931	0					
ANR	4251629	Identifier	NULL		4250931	0					
ANR	4251630	ElseStatement	else		4250931	0					
ANR	4251631	CompoundStatement		137:8:3697:3697	4250931	0					
ANR	4251632	Statement	fprintf	460:4:13351:13357	4250931	0	True				
ANR	4251633	Statement	(	460:11:13358:13358	4250931	1	True				
ANR	4251634	Statement	stderr	460:13:13360:13365	4250931	2	True				
ANR	4251635	Statement	","	460:19:13366:13366	4250931	3	True				
ANR	4251636	Statement	"""ERROR: \\""%s\\"" """	460:21:13368:13383	4250931	4	True				
ANR	4251637	Statement	"""is not a valid option\\n"""	461:7:13392:13416	4250931	5	True				
ANR	4251638	Statement	","	461:32:13417:13417	4250931	6	True				
ANR	4251639	Statement	(	461:34:13419:13419	4250931	7	True				
ANR	4251640	Statement	*	461:35:13420:13420	4250931	8	True				
ANR	4251641	Statement	tmp	461:36:13421:13423	4250931	9	True				
ANR	4251642	Statement	)	461:39:13424:13424	4250931	10	True				
ANR	4251643	Statement	)	461:41:13426:13426	4250931	11	True				
ANR	4251644	ExpressionStatement		461:42:13427:13427	4250931	12	True				
ANR	4251645	ExpressionStatement	usage ( NULL )	462:4:13433:13446	4250931	13	True				
ANR	4251646	CallExpression	usage ( NULL )		4250931	0					
ANR	4251647	Callee	usage		4250931	0					
ANR	4251648	Identifier	usage		4250931	0					
ANR	4251649	ArgumentList	NULL		4250931	1					
ANR	4251650	Argument	NULL		4250931	0					
ANR	4251651	Identifier	NULL		4250931	0					
ANR	4251652	BreakStatement	break ;	464:3:13456:13461	4250931	12	True				
ANR	4251653	Label	case 'f' :	465:2:13465:13473	4250931	13	True				
ANR	4251654	IfStatement	if ( ( * tmp ) [ 2 ] )		4250931	14					
ANR	4251655	Condition	( * tmp ) [ 2 ]	466:7:13482:13490	4250931	0	True				
ANR	4251656	ArrayIndexing	( * tmp ) [ 2 ]		4250931	0					
ANR	4251657	UnaryOperationExpression	* tmp		4250931	0					
ANR	4251658	UnaryOperator	*		4250931	0					
ANR	4251659	Identifier	tmp		4250931	1					
ANR	4251660	PrimaryExpression	2		4250931	1					
ANR	4251661	CompoundStatement		144:19:3846:3846	4250931	1					
ANR	4251662	SwitchStatement	switch ( ( * tmp ) [ 2 ] )		4250931	0					
ANR	4251663	Condition	( * tmp ) [ 2 ]	467:12:13508:13516	4250931	0	True				
ANR	4251664	ArrayIndexing	( * tmp ) [ 2 ]		4250931	0					
ANR	4251665	UnaryOperationExpression	* tmp		4250931	0					
ANR	4251666	UnaryOperator	*		4250931	0					
ANR	4251667	Identifier	tmp		4250931	1					
ANR	4251668	PrimaryExpression	2		4250931	1					
ANR	4251669	CompoundStatement		145:24:3872:3872	4250931	1					
ANR	4251670	Label	case 'u' :	468:4:13526:13534	4250931	0	True				
ANR	4251671	IfStatement	if ( cmd != DC_RECONFIG_FULL )		4250931	1					
ANR	4251672	Condition	cmd != DC_RECONFIG_FULL	471:9:13646:13668	4250931	0	True				
ANR	4251673	EqualityExpression	cmd != DC_RECONFIG_FULL		4250931	0		!=			
ANR	4251674	Identifier	cmd		4250931	0					
ANR	4251675	Identifier	DC_RECONFIG_FULL		4250931	1					
ANR	4251676	CompoundStatement		149:35:4024:4024	4250931	1					
ANR	4251677	Statement	fprintf	472:6:13680:13686	4250931	0	True				
ANR	4251678	Statement	(	472:13:13687:13687	4250931	1	True				
ANR	4251679	Statement	stderr	472:15:13689:13694	4250931	2	True				
ANR	4251680	Statement	","	472:21:13695:13695	4250931	3	True				
ANR	4251681	Statement	"""ERROR: \\""-full\\"" """	472:23:13697:13715	4250931	4	True				
ANR	4251682	Statement	"""is not valid with %s\\n"""	473:9:13726:13749	4250931	5	True				
ANR	4251683	Statement	","	473:33:13750:13750	4250931	6	True				
ANR	4251684	Statement	MyName	473:35:13752:13757	4250931	7	True				
ANR	4251685	Statement	)	473:42:13759:13759	4250931	8	True				
ANR	4251686	ExpressionStatement		473:43:13760:13760	4250931	9	True				
ANR	4251687	ExpressionStatement	usage ( NULL )	474:6:13768:13781	4250931	10	True				
ANR	4251688	CallExpression	usage ( NULL )		4250931	0					
ANR	4251689	Callee	usage		4250931	0					
ANR	4251690	Identifier	usage		4250931	0					
ANR	4251691	ArgumentList	NULL		4250931	1					
ANR	4251692	Argument	NULL		4250931	0					
ANR	4251693	Identifier	NULL		4250931	0					
ANR	4251694	BreakStatement	break ;	476:5:13795:13800	4250931	2	True				
ANR	4251695	Label	case 'a' :	477:4:13806:13814	4250931	3	True				
ANR	4251696	ExpressionStatement	fast = true	478:5:13821:13832	4250931	4	True				
ANR	4251697	AssignmentExpression	fast = true		4250931	0		=			
ANR	4251698	Identifier	fast		4250931	0					
ANR	4251699	Identifier	true		4250931	1					
ANR	4251700	ExpressionStatement	peaceful_shutdown = false	479:5:13839:13864	4250931	5	True				
ANR	4251701	AssignmentExpression	peaceful_shutdown = false		4250931	0		=			
ANR	4251702	Identifier	peaceful_shutdown		4250931	0					
ANR	4251703	Identifier	false		4250931	1					
ANR	4251704	SwitchStatement	switch ( cmd )		4250931	6					
ANR	4251705	Condition	cmd	480:13:13879:13881	4250931	0	True				
ANR	4251706	Identifier	cmd		4250931	0					
ANR	4251707	CompoundStatement		158:19:4237:4237	4250931	1					
ANR	4251708	Label	case DAEMONS_OFF :	481:5:13892:13908	4250931	0	True				
ANR	4251709	Identifier	DAEMONS_OFF		4250931	0					
ANR	4251710	Label	case DC_OFF_GRACEFUL :	482:5:13915:13935	4250931	1	True				
ANR	4251711	Identifier	DC_OFF_GRACEFUL		4250931	0					
ANR	4251712	Label	case RESTART :	483:5:13942:13954	4250931	2	True				
ANR	4251713	Identifier	RESTART		4250931	0					
ANR	4251714	Label	case VACATE_CLAIM :	484:5:13961:13978	4250931	3	True				
ANR	4251715	Identifier	VACATE_CLAIM		4250931	0					
ANR	4251716	BreakStatement	break ;	485:6:13986:13991	4250931	4	True				
ANR	4251717	Label	default :	486:5:13998:14005	4250931	5	True				
ANR	4251718	Identifier	default		4250931	0					
ANR	4251719	Statement	fprintf	487:6:14013:14019	4250931	6	True				
ANR	4251720	Statement	(	487:13:14020:14020	4250931	7	True				
ANR	4251721	Statement	stderr	487:15:14022:14027	4250931	8	True				
ANR	4251722	Statement	","	487:21:14028:14028	4250931	9	True				
ANR	4251723	Statement	"""ERROR: \\""-fast\\"" """	487:23:14030:14048	4250931	10	True				
ANR	4251724	Statement	"""is not valid with %s\\n"""	488:9:14059:14082	4250931	11	True				
ANR	4251725	Statement	","	488:33:14083:14083	4250931	12	True				
ANR	4251726	Statement	MyName	488:35:14085:14090	4250931	13	True				
ANR	4251727	Statement	)	488:42:14092:14092	4250931	14	True				
ANR	4251728	ExpressionStatement		488:43:14093:14093	4250931	15	True				
ANR	4251729	ExpressionStatement	usage ( NULL )	489:6:14101:14114	4250931	16	True				
ANR	4251730	CallExpression	usage ( NULL )		4250931	0					
ANR	4251731	Callee	usage		4250931	0					
ANR	4251732	Identifier	usage		4250931	0					
ANR	4251733	ArgumentList	NULL		4250931	1					
ANR	4251734	Argument	NULL		4250931	0					
ANR	4251735	Identifier	NULL		4250931	0					
ANR	4251736	BreakStatement	break ;	491:5:14128:14133	4250931	7	True				
ANR	4251737	Label	default :	492:4:14139:14146	4250931	8	True				
ANR	4251738	Identifier	default		4250931	0					
ANR	4251739	ExpressionStatement	"fprintf ( stderr , ""ERROR: unknown parameter: \\""%s\\""\\n"" , * tmp )"	493:5:14153:14231	4250931	9	True				
ANR	4251740	CallExpression	"fprintf ( stderr , ""ERROR: unknown parameter: \\""%s\\""\\n"" , * tmp )"		4250931	0					
ANR	4251741	Callee	fprintf		4250931	0					
ANR	4251742	Identifier	fprintf		4250931	0					
ANR	4251743	ArgumentList	stderr		4250931	1					
ANR	4251744	Argument	stderr		4250931	0					
ANR	4251745	Identifier	stderr		4250931	0					
ANR	4251746	Argument	"""ERROR: unknown parameter: \\""%s\\""\\n"""		4250931	1					
ANR	4251747	PrimaryExpression	"""ERROR: unknown parameter: \\""%s\\""\\n"""		4250931	0					
ANR	4251748	Argument	* tmp		4250931	2					
ANR	4251749	UnaryOperationExpression	* tmp		4250931	0					
ANR	4251750	UnaryOperator	*		4250931	0					
ANR	4251751	Identifier	tmp		4250931	1					
ANR	4251752	ExpressionStatement	usage ( NULL )	496:5:14239:14252	4250931	10	True				
ANR	4251753	CallExpression	usage ( NULL )		4250931	0					
ANR	4251754	Callee	usage		4250931	0					
ANR	4251755	Identifier	usage		4250931	0					
ANR	4251756	ArgumentList	NULL		4250931	1					
ANR	4251757	Argument	NULL		4250931	0					
ANR	4251758	Identifier	NULL		4250931	0					
ANR	4251759	BreakStatement	break ;	497:5:14259:14264	4250931	11	True				
ANR	4251760	ElseStatement	else		4250931	0					
ANR	4251761	CompoundStatement		177:10:4634:4634	4250931	0					
ANR	4251762	ExpressionStatement	"fprintf ( stderr , ""ERROR: ambiguous parameter: \\""%s\\""\\n"" , * tmp )"	500:4:14288:14366	4250931	0	True				
ANR	4251763	CallExpression	"fprintf ( stderr , ""ERROR: ambiguous parameter: \\""%s\\""\\n"" , * tmp )"		4250931	0					
ANR	4251764	Callee	fprintf		4250931	0					
ANR	4251765	Identifier	fprintf		4250931	0					
ANR	4251766	ArgumentList	stderr		4250931	1					
ANR	4251767	Argument	stderr		4250931	0					
ANR	4251768	Identifier	stderr		4250931	0					
ANR	4251769	Argument	"""ERROR: ambiguous parameter: \\""%s\\""\\n"""		4250931	1					
ANR	4251770	PrimaryExpression	"""ERROR: ambiguous parameter: \\""%s\\""\\n"""		4250931	0					
ANR	4251771	Argument	* tmp		4250931	2					
ANR	4251772	UnaryOperationExpression	* tmp		4250931	0					
ANR	4251773	UnaryOperator	*		4250931	0					
ANR	4251774	Identifier	tmp		4250931	1					
ANR	4251775	ExpressionStatement	"fprintf ( stderr , ""Please specify \\""-full\\"" or \\""-fast\\""\\n"" )"	503:4:14373:14441	4250931	1	True				
ANR	4251776	CallExpression	"fprintf ( stderr , ""Please specify \\""-full\\"" or \\""-fast\\""\\n"" )"		4250931	0					
ANR	4251777	Callee	fprintf		4250931	0					
ANR	4251778	Identifier	fprintf		4250931	0					
ANR	4251779	ArgumentList	stderr		4250931	1					
ANR	4251780	Argument	stderr		4250931	0					
ANR	4251781	Identifier	stderr		4250931	0					
ANR	4251782	Argument	"""Please specify \\""-full\\"" or \\""-fast\\""\\n"""		4250931	1					
ANR	4251783	PrimaryExpression	"""Please specify \\""-full\\"" or \\""-fast\\""\\n"""		4250931	0					
ANR	4251784	ExpressionStatement	usage ( NULL )	505:4:14447:14460	4250931	2	True				
ANR	4251785	CallExpression	usage ( NULL )		4250931	0					
ANR	4251786	Callee	usage		4250931	0					
ANR	4251787	Identifier	usage		4250931	0					
ANR	4251788	ArgumentList	NULL		4250931	1					
ANR	4251789	Argument	NULL		4250931	0					
ANR	4251790	Identifier	NULL		4250931	0					
ANR	4251791	BreakStatement	break ;	507:3:14470:14475	4250931	15	True				
ANR	4251792	Label	case 'd' :	508:2:14479:14487	4250931	16	True				
ANR	4251793	IfStatement	if ( ! ( * tmp ) [ 2 ] || ( * tmp ) [ 2 ] == 'e' )		4250931	17					
ANR	4251794	Condition	! ( * tmp ) [ 2 ] || ( * tmp ) [ 2 ] == 'e'	509:7:14496:14525	4250931	0	True				
ANR	4251795	OrExpression	! ( * tmp ) [ 2 ] || ( * tmp ) [ 2 ] == 'e'		4250931	0		||			
ANR	4251796	UnaryOperationExpression	! ( * tmp ) [ 2 ]		4250931	0					
ANR	4251797	UnaryOperator	!		4250931	0					
ANR	4251798	ArrayIndexing	( * tmp ) [ 2 ]		4250931	1					
ANR	4251799	UnaryOperationExpression	* tmp		4250931	0					
ANR	4251800	UnaryOperator	*		4250931	0					
ANR	4251801	Identifier	tmp		4250931	1					
ANR	4251802	PrimaryExpression	2		4250931	1					
ANR	4251803	EqualityExpression	( * tmp ) [ 2 ] == 'e'		4250931	1		==			
ANR	4251804	ArrayIndexing	( * tmp ) [ 2 ]		4250931	0					
ANR	4251805	UnaryOperationExpression	* tmp		4250931	0					
ANR	4251806	UnaryOperator	*		4250931	0					
ANR	4251807	Identifier	tmp		4250931	1					
ANR	4251808	PrimaryExpression	2		4250931	1					
ANR	4251809	PrimaryExpression	'e'		4250931	1					
ANR	4251810	CompoundStatement		187:39:4880:4880	4250931	1					
ANR	4251811	ExpressionStatement	Termlog = 1	510:4:14534:14545	4250931	0	True				
ANR	4251812	AssignmentExpression	Termlog = 1		4250931	0		=			
ANR	4251813	Identifier	Termlog		4250931	0					
ANR	4251814	PrimaryExpression	1		4250931	1					
ANR	4251815	ExpressionStatement	p_funcs = get_param_functions ( )	511:4:14551:14582	4250931	1	True				
ANR	4251816	AssignmentExpression	p_funcs = get_param_functions ( )		4250931	0		=			
ANR	4251817	Identifier	p_funcs		4250931	0					
ANR	4251818	CallExpression	get_param_functions ( )		4250931	1					
ANR	4251819	Callee	get_param_functions		4250931	0					
ANR	4251820	Identifier	get_param_functions		4250931	0					
ANR	4251821	ArgumentList			4250931	1					
ANR	4251822	ExpressionStatement	"dprintf_config ( ""TOOL"" , p_funcs )"	512:4:14588:14620	4250931	2	True				
ANR	4251823	CallExpression	"dprintf_config ( ""TOOL"" , p_funcs )"		4250931	0					
ANR	4251824	Callee	dprintf_config		4250931	0					
ANR	4251825	Identifier	dprintf_config		4250931	0					
ANR	4251826	ArgumentList	"""TOOL"""		4250931	1					
ANR	4251827	Argument	"""TOOL"""		4250931	0					
ANR	4251828	PrimaryExpression	"""TOOL"""		4250931	0					
ANR	4251829	Argument	p_funcs		4250931	1					
ANR	4251830	Identifier	p_funcs		4250931	0					
ANR	4251831	ElseStatement	else		4250931	0					
ANR	4251832	IfStatement	if ( ( * tmp ) [ 2 ] == 'a' )		4250931	0					
ANR	4251833	Condition	( * tmp ) [ 2 ] == 'a'	513:14:14636:14651	4250931	0	True				
ANR	4251834	EqualityExpression	( * tmp ) [ 2 ] == 'a'		4250931	0		==			
ANR	4251835	ArrayIndexing	( * tmp ) [ 2 ]		4250931	0					
ANR	4251836	UnaryOperationExpression	* tmp		4250931	0					
ANR	4251837	UnaryOperator	*		4250931	0					
ANR	4251838	Identifier	tmp		4250931	1					
ANR	4251839	PrimaryExpression	2		4250931	1					
ANR	4251840	PrimaryExpression	'a'		4250931	1					
ANR	4251841	CompoundStatement		191:33:5007:5007	4250931	1					
ANR	4251842	ExpressionStatement	subsys_check ( MyName )	514:4:14661:14683	4250931	0	True				
ANR	4251843	CallExpression	subsys_check ( MyName )		4250931	0					
ANR	4251844	Callee	subsys_check		4250931	0					
ANR	4251845	Identifier	subsys_check		4250931	0					
ANR	4251846	ArgumentList	MyName		4250931	1					
ANR	4251847	Argument	MyName		4250931	0					
ANR	4251848	Identifier	MyName		4250931	0					
ANR	4251849	ExpressionStatement	tmp ++	517:4:14770:14775	4250931	1	True				
ANR	4251850	PostIncDecOperationExpression	tmp ++		4250931	0					
ANR	4251851	Identifier	tmp		4250931	0					
ANR	4251852	IncDec	++		4250931	1					
ANR	4251853	IfStatement	if ( tmp && * tmp )		4250931	2					
ANR	4251854	Condition	tmp && * tmp	518:8:14785:14795	4250931	0	True				
ANR	4251855	AndExpression	tmp && * tmp		4250931	0		&&			
ANR	4251856	Identifier	tmp		4250931	0					
ANR	4251857	UnaryOperationExpression	* tmp		4250931	1					
ANR	4251858	UnaryOperator	*		4250931	0					
ANR	4251859	Identifier	tmp		4250931	1					
ANR	4251860	CompoundStatement		196:22:5151:5151	4250931	1					
ANR	4251861	ExpressionStatement	subsys_arg = * tmp	519:5:14806:14823	4250931	0	True				
ANR	4251862	AssignmentExpression	subsys_arg = * tmp		4250931	0		=			
ANR	4251863	Identifier	subsys_arg		4250931	0					
ANR	4251864	UnaryOperationExpression	* tmp		4250931	1					
ANR	4251865	UnaryOperator	*		4250931	0					
ANR	4251866	Identifier	tmp		4250931	1					
ANR	4251867	ExpressionStatement	dt = stringToDaemonType ( subsys_arg )	520:5:14830:14865	4250931	1	True				
ANR	4251868	AssignmentExpression	dt = stringToDaemonType ( subsys_arg )		4250931	0		=			
ANR	4251869	Identifier	dt		4250931	0					
ANR	4251870	CallExpression	stringToDaemonType ( subsys_arg )		4250931	1					
ANR	4251871	Callee	stringToDaemonType		4250931	0					
ANR	4251872	Identifier	stringToDaemonType		4250931	0					
ANR	4251873	ArgumentList	subsys_arg		4250931	1					
ANR	4251874	Argument	subsys_arg		4250931	0					
ANR	4251875	Identifier	subsys_arg		4250931	0					
ANR	4251876	IfStatement	if ( dt == DT_NONE )		4250931	2					
ANR	4251877	Condition	dt == DT_NONE	521:9:14876:14888	4250931	0	True				
ANR	4251878	EqualityExpression	dt == DT_NONE		4250931	0		==			
ANR	4251879	Identifier	dt		4250931	0					
ANR	4251880	Identifier	DT_NONE		4250931	1					
ANR	4251881	CompoundStatement		199:25:5244:5244	4250931	1					
ANR	4251882	ExpressionStatement	dt = DT_GENERIC	522:6:14900:14915	4250931	0	True				
ANR	4251883	AssignmentExpression	dt = DT_GENERIC		4250931	0		=			
ANR	4251884	Identifier	dt		4250931	0					
ANR	4251885	Identifier	DT_GENERIC		4250931	1					
ANR	4251886	ElseStatement	else		4250931	0					
ANR	4251887	CompoundStatement		202:11:5287:5287	4250931	0					
ANR	4251888	ExpressionStatement	"fprintf ( stderr , ""ERROR: -daemon requires another argument\\n"" )"	525:5:14942:15014	4250931	0	True				
ANR	4251889	CallExpression	"fprintf ( stderr , ""ERROR: -daemon requires another argument\\n"" )"		4250931	0					
ANR	4251890	Callee	fprintf		4250931	0					
ANR	4251891	Identifier	fprintf		4250931	0					
ANR	4251892	ArgumentList	stderr		4250931	1					
ANR	4251893	Argument	stderr		4250931	0					
ANR	4251894	Identifier	stderr		4250931	0					
ANR	4251895	Argument	"""ERROR: -daemon requires another argument\\n"""		4250931	1					
ANR	4251896	PrimaryExpression	"""ERROR: -daemon requires another argument\\n"""		4250931	0					
ANR	4251897	ExpressionStatement	usage ( NULL )	527:5:15022:15035	4250931	1	True				
ANR	4251898	CallExpression	usage ( NULL )		4250931	0					
ANR	4251899	Callee	usage		4250931	0					
ANR	4251900	Identifier	usage		4250931	0					
ANR	4251901	ArgumentList	NULL		4250931	1					
ANR	4251902	Argument	NULL		4250931	0					
ANR	4251903	Identifier	NULL		4250931	0					
ANR	4251904	ExpressionStatement	exit ( 1 )	528:5:15042:15051	4250931	2	True				
ANR	4251905	CallExpression	exit ( 1 )		4250931	0					
ANR	4251906	Callee	exit		4250931	0					
ANR	4251907	Identifier	exit		4250931	0					
ANR	4251908	ArgumentList	1		4250931	1					
ANR	4251909	Argument	1		4250931	0					
ANR	4251910	PrimaryExpression	1		4250931	0					
ANR	4251911	ElseStatement	else		4250931	0					
ANR	4251912	CompoundStatement		208:10:5421:5421	4250931	0					
ANR	4251913	ExpressionStatement	"fprintf ( stderr , ""ERROR: unknown parameter: \\""%s\\""\\n"" , * tmp )"	531:4:15075:15151	4250931	0	True				
ANR	4251914	CallExpression	"fprintf ( stderr , ""ERROR: unknown parameter: \\""%s\\""\\n"" , * tmp )"		4250931	0					
ANR	4251915	Callee	fprintf		4250931	0					
ANR	4251916	Identifier	fprintf		4250931	0					
ANR	4251917	ArgumentList	stderr		4250931	1					
ANR	4251918	Argument	stderr		4250931	0					
ANR	4251919	Identifier	stderr		4250931	0					
ANR	4251920	Argument	"""ERROR: unknown parameter: \\""%s\\""\\n"""		4250931	1					
ANR	4251921	PrimaryExpression	"""ERROR: unknown parameter: \\""%s\\""\\n"""		4250931	0					
ANR	4251922	Argument	* tmp		4250931	2					
ANR	4251923	UnaryOperationExpression	* tmp		4250931	0					
ANR	4251924	UnaryOperator	*		4250931	0					
ANR	4251925	Identifier	tmp		4250931	1					
ANR	4251926	ExpressionStatement	usage ( NULL )	534:4:15159:15172	4250931	1	True				
ANR	4251927	CallExpression	usage ( NULL )		4250931	0					
ANR	4251928	Callee	usage		4250931	0					
ANR	4251929	Identifier	usage		4250931	0					
ANR	4251930	ArgumentList	NULL		4250931	1					
ANR	4251931	Argument	NULL		4250931	0					
ANR	4251932	Identifier	NULL		4250931	0					
ANR	4251933	BreakStatement	break ;	536:3:15182:15187	4250931	18	True				
ANR	4251934	Label	case 'e' :	537:2:15191:15199	4250931	19	True				
ANR	4251935	IfStatement	"if ( strcmp ( * tmp , ""-exec"" ) )"		4250931	20					
ANR	4251936	Condition	"strcmp ( * tmp , ""-exec"" )"	538:8:15209:15231	4250931	0	True				
ANR	4251937	CallExpression	"strcmp ( * tmp , ""-exec"" )"		4250931	0					
ANR	4251938	Callee	strcmp		4250931	0					
ANR	4251939	Identifier	strcmp		4250931	0					
ANR	4251940	ArgumentList	* tmp		4250931	1					
ANR	4251941	Argument	* tmp		4250931	0					
ANR	4251942	UnaryOperationExpression	* tmp		4250931	0					
ANR	4251943	UnaryOperator	*		4250931	0					
ANR	4251944	Identifier	tmp		4250931	1					
ANR	4251945	Argument	"""-exec"""		4250931	1					
ANR	4251946	PrimaryExpression	"""-exec"""		4250931	0					
ANR	4251947	CompoundStatement		216:34:5587:5587	4250931	1					
ANR	4251948	ExpressionStatement	"fprintf ( stderr , ""Unknown option '%s'\\n"" , * tmp )"	539:4:15241:15289	4250931	0	True				
ANR	4251949	CallExpression	"fprintf ( stderr , ""Unknown option '%s'\\n"" , * tmp )"		4250931	0					
ANR	4251950	Callee	fprintf		4250931	0					
ANR	4251951	Identifier	fprintf		4250931	0					
ANR	4251952	ArgumentList	stderr		4250931	1					
ANR	4251953	Argument	stderr		4250931	0					
ANR	4251954	Identifier	stderr		4250931	0					
ANR	4251955	Argument	"""Unknown option '%s'\\n"""		4250931	1					
ANR	4251956	PrimaryExpression	"""Unknown option '%s'\\n"""		4250931	0					
ANR	4251957	Argument	* tmp		4250931	2					
ANR	4251958	UnaryOperationExpression	* tmp		4250931	0					
ANR	4251959	UnaryOperator	*		4250931	0					
ANR	4251960	Identifier	tmp		4250931	1					
ANR	4251961	ExpressionStatement	usage ( NULL )	540:4:15295:15308	4250931	1	True				
ANR	4251962	CallExpression	usage ( NULL )		4250931	0					
ANR	4251963	Callee	usage		4250931	0					
ANR	4251964	Identifier	usage		4250931	0					
ANR	4251965	ArgumentList	NULL		4250931	1					
ANR	4251966	Argument	NULL		4250931	0					
ANR	4251967	Identifier	NULL		4250931	0					
ANR	4251968	BreakStatement	break ;	541:4:15314:15319	4250931	2	True				
ANR	4251969	IfStatement	if ( cmd != SET_SHUTDOWN_PROGRAM )		4250931	21					
ANR	4251970	Condition	cmd != SET_SHUTDOWN_PROGRAM	543:8:15334:15360	4250931	0	True				
ANR	4251971	EqualityExpression	cmd != SET_SHUTDOWN_PROGRAM		4250931	0		!=			
ANR	4251972	Identifier	cmd		4250931	0					
ANR	4251973	Identifier	SET_SHUTDOWN_PROGRAM		4250931	1					
ANR	4251974	CompoundStatement		221:38:5716:5716	4250931	1					
ANR	4251975	ExpressionStatement	"fprintf ( stderr , ""ERROR: \\""-exec\\"" is not valid with %s\\n"" , MyName )"	544:4:15370:15445	4250931	0	True				
ANR	4251976	CallExpression	"fprintf ( stderr , ""ERROR: \\""-exec\\"" is not valid with %s\\n"" , MyName )"		4250931	0					
ANR	4251977	Callee	fprintf		4250931	0					
ANR	4251978	Identifier	fprintf		4250931	0					
ANR	4251979	ArgumentList	stderr		4250931	1					
ANR	4251980	Argument	stderr		4250931	0					
ANR	4251981	Identifier	stderr		4250931	0					
ANR	4251982	Argument	"""ERROR: \\""-exec\\"" is not valid with %s\\n"""		4250931	1					
ANR	4251983	PrimaryExpression	"""ERROR: \\""-exec\\"" is not valid with %s\\n"""		4250931	0					
ANR	4251984	Argument	MyName		4250931	2					
ANR	4251985	Identifier	MyName		4250931	0					
ANR	4251986	ExpressionStatement	usage ( NULL )	546:4:15451:15464	4250931	1	True				
ANR	4251987	CallExpression	usage ( NULL )		4250931	0					
ANR	4251988	Callee	usage		4250931	0					
ANR	4251989	Identifier	usage		4250931	0					
ANR	4251990	ArgumentList	NULL		4250931	1					
ANR	4251991	Argument	NULL		4250931	0					
ANR	4251992	Identifier	NULL		4250931	0					
ANR	4251993	BreakStatement	break ;	547:4:15470:15475	4250931	2	True				
ANR	4251994	ExpressionStatement	tmp ++	549:3:15485:15490	4250931	22	True				
ANR	4251995	PostIncDecOperationExpression	tmp ++		4250931	0					
ANR	4251996	Identifier	tmp		4250931	0					
ANR	4251997	IncDec	++		4250931	1					
ANR	4251998	IfStatement	if ( ! ( tmp && * tmp ) )		4250931	23					
ANR	4251999	Condition	! ( tmp && * tmp )	550:7:15499:15513	4250931	0	True				
ANR	4252000	UnaryOperationExpression	! ( tmp && * tmp )		4250931	0					
ANR	4252001	UnaryOperator	!		4250931	0					
ANR	4252002	AndExpression	tmp && * tmp		4250931	1		&&			
ANR	4252003	Identifier	tmp		4250931	0					
ANR	4252004	UnaryOperationExpression	* tmp		4250931	1					
ANR	4252005	UnaryOperator	*		4250931	0					
ANR	4252006	Identifier	tmp		4250931	1					
ANR	4252007	CompoundStatement		228:25:5869:5869	4250931	1					
ANR	4252008	ExpressionStatement	"fprintf ( stderr , ""ERROR: \\""-exec\\"" requires another argument\\n"" )"	551:4:15523:15596	4250931	0	True				
ANR	4252009	CallExpression	"fprintf ( stderr , ""ERROR: \\""-exec\\"" requires another argument\\n"" )"		4250931	0					
ANR	4252010	Callee	fprintf		4250931	0					
ANR	4252011	Identifier	fprintf		4250931	0					
ANR	4252012	ArgumentList	stderr		4250931	1					
ANR	4252013	Argument	stderr		4250931	0					
ANR	4252014	Identifier	stderr		4250931	0					
ANR	4252015	Argument	"""ERROR: \\""-exec\\"" requires another argument\\n"""		4250931	1					
ANR	4252016	PrimaryExpression	"""ERROR: \\""-exec\\"" requires another argument\\n"""		4250931	0					
ANR	4252017	ExpressionStatement	usage ( NULL )	553:4:15603:15616	4250931	1	True				
ANR	4252018	CallExpression	usage ( NULL )		4250931	0					
ANR	4252019	Callee	usage		4250931	0					
ANR	4252020	Identifier	usage		4250931	0					
ANR	4252021	ArgumentList	NULL		4250931	1					
ANR	4252022	Argument	NULL		4250931	0					
ANR	4252023	Identifier	NULL		4250931	0					
ANR	4252024	BreakStatement	break ;	554:4:15622:15627	4250931	2	True				
ANR	4252025	ExpressionStatement	exec_program = * tmp	556:3:15637:15656	4250931	24	True				
ANR	4252026	AssignmentExpression	exec_program = * tmp		4250931	0		=			
ANR	4252027	Identifier	exec_program		4250931	0					
ANR	4252028	UnaryOperationExpression	* tmp		4250931	1					
ANR	4252029	UnaryOperator	*		4250931	0					
ANR	4252030	Identifier	tmp		4250931	1					
ANR	4252031	ExpressionStatement	"printf ( ""Set exec to %s\\n"" , exec_program )"	557:3:15661:15703	4250931	25	True				
ANR	4252032	CallExpression	"printf ( ""Set exec to %s\\n"" , exec_program )"		4250931	0					
ANR	4252033	Callee	printf		4250931	0					
ANR	4252034	Identifier	printf		4250931	0					
ANR	4252035	ArgumentList	"""Set exec to %s\\n"""		4250931	1					
ANR	4252036	Argument	"""Set exec to %s\\n"""		4250931	0					
ANR	4252037	PrimaryExpression	"""Set exec to %s\\n"""		4250931	0					
ANR	4252038	Argument	exec_program		4250931	1					
ANR	4252039	Identifier	exec_program		4250931	0					
ANR	4252040	BreakStatement	break ;	558:3:15708:15713	4250931	26	True				
ANR	4252041	Label	case 'g' :	559:2:15717:15725	4250931	27	True				
ANR	4252042	ExpressionStatement	fast = false	560:3:15730:15742	4250931	28	True				
ANR	4252043	AssignmentExpression	fast = false		4250931	0		=			
ANR	4252044	Identifier	fast		4250931	0					
ANR	4252045	Identifier	false		4250931	1					
ANR	4252046	ExpressionStatement	peaceful_shutdown = false	561:3:15747:15772	4250931	29	True				
ANR	4252047	AssignmentExpression	peaceful_shutdown = false		4250931	0		=			
ANR	4252048	Identifier	peaceful_shutdown		4250931	0					
ANR	4252049	Identifier	false		4250931	1					
ANR	4252050	BreakStatement	break ;	562:3:15777:15782	4250931	30	True				
ANR	4252051	Label	case 'a' :	563:2:15786:15794	4250931	31	True				
ANR	4252052	IfStatement	if ( ( * tmp ) [ 2 ] )		4250931	32					
ANR	4252053	Condition	( * tmp ) [ 2 ]	564:7:15803:15811	4250931	0	True				
ANR	4252054	ArrayIndexing	( * tmp ) [ 2 ]		4250931	0					
ANR	4252055	UnaryOperationExpression	* tmp		4250931	0					
ANR	4252056	UnaryOperator	*		4250931	0					
ANR	4252057	Identifier	tmp		4250931	1					
ANR	4252058	PrimaryExpression	2		4250931	1					
ANR	4252059	CompoundStatement		242:19:6167:6167	4250931	1					
ANR	4252060	SwitchStatement	switch ( ( * tmp ) [ 2 ] )		4250931	0					
ANR	4252061	Condition	( * tmp ) [ 2 ]	565:12:15829:15837	4250931	0	True				
ANR	4252062	ArrayIndexing	( * tmp ) [ 2 ]		4250931	0					
ANR	4252063	UnaryOperationExpression	* tmp		4250931	0					
ANR	4252064	UnaryOperator	*		4250931	0					
ANR	4252065	Identifier	tmp		4250931	1					
ANR	4252066	PrimaryExpression	2		4250931	1					
ANR	4252067	CompoundStatement		243:24:6193:6193	4250931	1					
ANR	4252068	Label	case 'd' :	566:4:15847:15855	4250931	0	True				
ANR	4252069	ExpressionStatement	tmp ++	569:5:15941:15946	4250931	1	True				
ANR	4252070	PostIncDecOperationExpression	tmp ++		4250931	0					
ANR	4252071	Identifier	tmp		4250931	0					
ANR	4252072	IncDec	++		4250931	1					
ANR	4252073	IfStatement	if ( ! ( tmp && * tmp ) )		4250931	2					
ANR	4252074	Condition	! ( tmp && * tmp )	570:9:15957:15971	4250931	0	True				
ANR	4252075	UnaryOperationExpression	! ( tmp && * tmp )		4250931	0					
ANR	4252076	UnaryOperator	!		4250931	0					
ANR	4252077	AndExpression	tmp && * tmp		4250931	1		&&			
ANR	4252078	Identifier	tmp		4250931	0					
ANR	4252079	UnaryOperationExpression	* tmp		4250931	1					
ANR	4252080	UnaryOperator	*		4250931	0					
ANR	4252081	Identifier	tmp		4250931	1					
ANR	4252082	CompoundStatement		248:27:6327:6327	4250931	1					
ANR	4252083	ExpressionStatement	"fprintf ( stderr , ""ERROR: -addr requires another argument\\n"" )"	571:6:15983:16054	4250931	0	True				
ANR	4252084	CallExpression	"fprintf ( stderr , ""ERROR: -addr requires another argument\\n"" )"		4250931	0					
ANR	4252085	Callee	fprintf		4250931	0					
ANR	4252086	Identifier	fprintf		4250931	0					
ANR	4252087	ArgumentList	stderr		4250931	1					
ANR	4252088	Argument	stderr		4250931	0					
ANR	4252089	Identifier	stderr		4250931	0					
ANR	4252090	Argument	"""ERROR: -addr requires another argument\\n"""		4250931	1					
ANR	4252091	PrimaryExpression	"""ERROR: -addr requires another argument\\n"""		4250931	0					
ANR	4252092	ExpressionStatement	usage ( NULL )	573:6:16063:16076	4250931	1	True				
ANR	4252093	CallExpression	usage ( NULL )		4250931	0					
ANR	4252094	Callee	usage		4250931	0					
ANR	4252095	Identifier	usage		4250931	0					
ANR	4252096	ArgumentList	NULL		4250931	1					
ANR	4252097	Argument	NULL		4250931	0					
ANR	4252098	Identifier	NULL		4250931	0					
ANR	4252099	BreakStatement	break ;	575:5:16090:16095	4250931	3	True				
ANR	4252100	Label	case 'l' :	576:4:16101:16109	4250931	4	True				
ANR	4252101	ExpressionStatement	all = true	578:5:16156:16166	4250931	5	True				
ANR	4252102	AssignmentExpression	all = true		4250931	0		=			
ANR	4252103	Identifier	all		4250931	0					
ANR	4252104	Identifier	true		4250931	1					
ANR	4252105	BreakStatement	break ;	579:5:16173:16178	4250931	6	True				
ANR	4252106	Label	default :	580:4:16184:16191	4250931	7	True				
ANR	4252107	Identifier	default		4250931	0					
ANR	4252108	ExpressionStatement	"fprintf ( stderr , ""ERROR: unknown parameter: \\""%s\\""\\n"" , * tmp )"	581:5:16198:16276	4250931	8	True				
ANR	4252109	CallExpression	"fprintf ( stderr , ""ERROR: unknown parameter: \\""%s\\""\\n"" , * tmp )"		4250931	0					
ANR	4252110	Callee	fprintf		4250931	0					
ANR	4252111	Identifier	fprintf		4250931	0					
ANR	4252112	ArgumentList	stderr		4250931	1					
ANR	4252113	Argument	stderr		4250931	0					
ANR	4252114	Identifier	stderr		4250931	0					
ANR	4252115	Argument	"""ERROR: unknown parameter: \\""%s\\""\\n"""		4250931	1					
ANR	4252116	PrimaryExpression	"""ERROR: unknown parameter: \\""%s\\""\\n"""		4250931	0					
ANR	4252117	Argument	* tmp		4250931	2					
ANR	4252118	UnaryOperationExpression	* tmp		4250931	0					
ANR	4252119	UnaryOperator	*		4250931	0					
ANR	4252120	Identifier	tmp		4250931	1					
ANR	4252121	ExpressionStatement	usage ( NULL )	584:5:16284:16297	4250931	9	True				
ANR	4252122	CallExpression	usage ( NULL )		4250931	0					
ANR	4252123	Callee	usage		4250931	0					
ANR	4252124	Identifier	usage		4250931	0					
ANR	4252125	ArgumentList	NULL		4250931	1					
ANR	4252126	Argument	NULL		4250931	0					
ANR	4252127	Identifier	NULL		4250931	0					
ANR	4252128	BreakStatement	break ;	585:5:16304:16309	4250931	10	True				
ANR	4252129	ElseStatement	else		4250931	0					
ANR	4252130	CompoundStatement		265:10:6679:6679	4250931	0					
ANR	4252131	ExpressionStatement	"fprintf ( stderr , ""ERROR: ambiguous parameter: \\""%s\\""\\n"" , * tmp )"	588:4:16333:16411	4250931	0	True				
ANR	4252132	CallExpression	"fprintf ( stderr , ""ERROR: ambiguous parameter: \\""%s\\""\\n"" , * tmp )"		4250931	0					
ANR	4252133	Callee	fprintf		4250931	0					
ANR	4252134	Identifier	fprintf		4250931	0					
ANR	4252135	ArgumentList	stderr		4250931	1					
ANR	4252136	Argument	stderr		4250931	0					
ANR	4252137	Identifier	stderr		4250931	0					
ANR	4252138	Argument	"""ERROR: ambiguous parameter: \\""%s\\""\\n"""		4250931	1					
ANR	4252139	PrimaryExpression	"""ERROR: ambiguous parameter: \\""%s\\""\\n"""		4250931	0					
ANR	4252140	Argument	* tmp		4250931	2					
ANR	4252141	UnaryOperationExpression	* tmp		4250931	0					
ANR	4252142	UnaryOperator	*		4250931	0					
ANR	4252143	Identifier	tmp		4250931	1					
ANR	4252144	ExpressionStatement	"fprintf ( stderr , ""Please specify \\""-addr\\"" or \\""-all\\""\\n"" )"	591:4:16418:16485	4250931	1	True				
ANR	4252145	CallExpression	"fprintf ( stderr , ""Please specify \\""-addr\\"" or \\""-all\\""\\n"" )"		4250931	0					
ANR	4252146	Callee	fprintf		4250931	0					
ANR	4252147	Identifier	fprintf		4250931	0					
ANR	4252148	ArgumentList	stderr		4250931	1					
ANR	4252149	Argument	stderr		4250931	0					
ANR	4252150	Identifier	stderr		4250931	0					
ANR	4252151	Argument	"""Please specify \\""-addr\\"" or \\""-all\\""\\n"""		4250931	1					
ANR	4252152	PrimaryExpression	"""Please specify \\""-addr\\"" or \\""-all\\""\\n"""		4250931	0					
ANR	4252153	ExpressionStatement	usage ( NULL )	593:4:16491:16504	4250931	2	True				
ANR	4252154	CallExpression	usage ( NULL )		4250931	0					
ANR	4252155	Callee	usage		4250931	0					
ANR	4252156	Identifier	usage		4250931	0					
ANR	4252157	ArgumentList	NULL		4250931	1					
ANR	4252158	Argument	NULL		4250931	0					
ANR	4252159	Identifier	NULL		4250931	0					
ANR	4252160	BreakStatement	break ;	595:3:16514:16519	4250931	33	True				
ANR	4252161	Label	case 'n' :	596:2:16523:16531	4250931	34	True				
ANR	4252162	IfStatement	if ( ( * tmp ) [ 2 ] )		4250931	35					
ANR	4252163	Condition	( * tmp ) [ 2 ]	597:7:16540:16548	4250931	0	True				
ANR	4252164	ArrayIndexing	( * tmp ) [ 2 ]		4250931	0					
ANR	4252165	UnaryOperationExpression	* tmp		4250931	0					
ANR	4252166	UnaryOperator	*		4250931	0					
ANR	4252167	Identifier	tmp		4250931	1					
ANR	4252168	PrimaryExpression	2		4250931	1					
ANR	4252169	CompoundStatement		275:19:6904:6904	4250931	1					
ANR	4252170	SwitchStatement	switch ( ( * tmp ) [ 2 ] )		4250931	0					
ANR	4252171	Condition	( * tmp ) [ 2 ]	598:12:16566:16574	4250931	0	True				
ANR	4252172	ArrayIndexing	( * tmp ) [ 2 ]		4250931	0					
ANR	4252173	UnaryOperationExpression	* tmp		4250931	0					
ANR	4252174	UnaryOperator	*		4250931	0					
ANR	4252175	Identifier	tmp		4250931	1					
ANR	4252176	PrimaryExpression	2		4250931	1					
ANR	4252177	CompoundStatement		276:24:6930:6930	4250931	1					
ANR	4252178	Label	case 'a' :	599:4:16584:16592	4250931	0	True				
ANR	4252179	ExpressionStatement	tmp ++	602:5:16681:16686	4250931	1	True				
ANR	4252180	PostIncDecOperationExpression	tmp ++		4250931	0					
ANR	4252181	Identifier	tmp		4250931	0					
ANR	4252182	IncDec	++		4250931	1					
ANR	4252183	IfStatement	if ( ! ( tmp && * tmp ) )		4250931	2					
ANR	4252184	Condition	! ( tmp && * tmp )	603:9:16697:16711	4250931	0	True				
ANR	4252185	UnaryOperationExpression	! ( tmp && * tmp )		4250931	0					
ANR	4252186	UnaryOperator	!		4250931	0					
ANR	4252187	AndExpression	tmp && * tmp		4250931	1		&&			
ANR	4252188	Identifier	tmp		4250931	0					
ANR	4252189	UnaryOperationExpression	* tmp		4250931	1					
ANR	4252190	UnaryOperator	*		4250931	0					
ANR	4252191	Identifier	tmp		4250931	1					
ANR	4252192	CompoundStatement		281:27:7067:7067	4250931	1					
ANR	4252193	ExpressionStatement	"fprintf ( stderr , ""ERROR: -name requires another argument\\n"" )"	604:6:16723:16794	4250931	0	True				
ANR	4252194	CallExpression	"fprintf ( stderr , ""ERROR: -name requires another argument\\n"" )"		4250931	0					
ANR	4252195	Callee	fprintf		4250931	0					
ANR	4252196	Identifier	fprintf		4250931	0					
ANR	4252197	ArgumentList	stderr		4250931	1					
ANR	4252198	Argument	stderr		4250931	0					
ANR	4252199	Identifier	stderr		4250931	0					
ANR	4252200	Argument	"""ERROR: -name requires another argument\\n"""		4250931	1					
ANR	4252201	PrimaryExpression	"""ERROR: -name requires another argument\\n"""		4250931	0					
ANR	4252202	ExpressionStatement	usage ( NULL )	606:6:16802:16815	4250931	1	True				
ANR	4252203	CallExpression	usage ( NULL )		4250931	0					
ANR	4252204	Callee	usage		4250931	0					
ANR	4252205	Identifier	usage		4250931	0					
ANR	4252206	ArgumentList	NULL		4250931	1					
ANR	4252207	Argument	NULL		4250931	0					
ANR	4252208	Identifier	NULL		4250931	0					
ANR	4252209	BreakStatement	break ;	608:5:16829:16834	4250931	3	True				
ANR	4252210	Label	case 'e' :	609:4:16840:16848	4250931	4	True				
ANR	4252211	ExpressionStatement	subsys_check ( MyName )	611:5:16887:16909	4250931	5	True				
ANR	4252212	CallExpression	subsys_check ( MyName )		4250931	0					
ANR	4252213	Callee	subsys_check		4250931	0					
ANR	4252214	Identifier	subsys_check		4250931	0					
ANR	4252215	ArgumentList	MyName		4250931	1					
ANR	4252216	Argument	MyName		4250931	0					
ANR	4252217	Identifier	MyName		4250931	0					
ANR	4252218	ExpressionStatement	dt = DT_NEGOTIATOR	612:5:16916:16934	4250931	6	True				
ANR	4252219	AssignmentExpression	dt = DT_NEGOTIATOR		4250931	0		=			
ANR	4252220	Identifier	dt		4250931	0					
ANR	4252221	Identifier	DT_NEGOTIATOR		4250931	1					
ANR	4252222	BreakStatement	break ;	613:5:16941:16946	4250931	7	True				
ANR	4252223	Label	default :	614:4:16952:16959	4250931	8	True				
ANR	4252224	Identifier	default		4250931	0					
ANR	4252225	ExpressionStatement	"fprintf ( stderr , ""ERROR: invalid option: \\""%s\\""\\n"" , * tmp )"	615:5:16966:17041	4250931	9	True				
ANR	4252226	CallExpression	"fprintf ( stderr , ""ERROR: invalid option: \\""%s\\""\\n"" , * tmp )"		4250931	0					
ANR	4252227	Callee	fprintf		4250931	0					
ANR	4252228	Identifier	fprintf		4250931	0					
ANR	4252229	ArgumentList	stderr		4250931	1					
ANR	4252230	Argument	stderr		4250931	0					
ANR	4252231	Identifier	stderr		4250931	0					
ANR	4252232	Argument	"""ERROR: invalid option: \\""%s\\""\\n"""		4250931	1					
ANR	4252233	PrimaryExpression	"""ERROR: invalid option: \\""%s\\""\\n"""		4250931	0					
ANR	4252234	Argument	* tmp		4250931	2					
ANR	4252235	UnaryOperationExpression	* tmp		4250931	0					
ANR	4252236	UnaryOperator	*		4250931	0					
ANR	4252237	Identifier	tmp		4250931	1					
ANR	4252238	ExpressionStatement	usage ( NULL )	618:5:17050:17063	4250931	10	True				
ANR	4252239	CallExpression	usage ( NULL )		4250931	0					
ANR	4252240	Callee	usage		4250931	0					
ANR	4252241	Identifier	usage		4250931	0					
ANR	4252242	ArgumentList	NULL		4250931	1					
ANR	4252243	Argument	NULL		4250931	0					
ANR	4252244	Identifier	NULL		4250931	0					
ANR	4252245	BreakStatement	break ;	619:5:17070:17075	4250931	11	True				
ANR	4252246	ElseStatement	else		4250931	0					
ANR	4252247	CompoundStatement		299:10:7445:7445	4250931	0					
ANR	4252248	ExpressionStatement	"fprintf ( stderr , ""ERROR: ambiguous option: \\""%s\\""\\n"" , * tmp )"	622:4:17099:17174	4250931	0	True				
ANR	4252249	CallExpression	"fprintf ( stderr , ""ERROR: ambiguous option: \\""%s\\""\\n"" , * tmp )"		4250931	0					
ANR	4252250	Callee	fprintf		4250931	0					
ANR	4252251	Identifier	fprintf		4250931	0					
ANR	4252252	ArgumentList	stderr		4250931	1					
ANR	4252253	Argument	stderr		4250931	0					
ANR	4252254	Identifier	stderr		4250931	0					
ANR	4252255	Argument	"""ERROR: ambiguous option: \\""%s\\""\\n"""		4250931	1					
ANR	4252256	PrimaryExpression	"""ERROR: ambiguous option: \\""%s\\""\\n"""		4250931	0					
ANR	4252257	Argument	* tmp		4250931	2					
ANR	4252258	UnaryOperationExpression	* tmp		4250931	0					
ANR	4252259	UnaryOperator	*		4250931	0					
ANR	4252260	Identifier	tmp		4250931	1					
ANR	4252261	ExpressionStatement	"fprintf ( stderr , ""Please specify \\""-name\\"" or \\""-negotiator\\""\\n"" )"	625:4:17181:17255	4250931	1	True				
ANR	4252262	CallExpression	"fprintf ( stderr , ""Please specify \\""-name\\"" or \\""-negotiator\\""\\n"" )"		4250931	0					
ANR	4252263	Callee	fprintf		4250931	0					
ANR	4252264	Identifier	fprintf		4250931	0					
ANR	4252265	ArgumentList	stderr		4250931	1					
ANR	4252266	Argument	stderr		4250931	0					
ANR	4252267	Identifier	stderr		4250931	0					
ANR	4252268	Argument	"""Please specify \\""-name\\"" or \\""-negotiator\\""\\n"""		4250931	1					
ANR	4252269	PrimaryExpression	"""Please specify \\""-name\\"" or \\""-negotiator\\""\\n"""		4250931	0					
ANR	4252270	ExpressionStatement	usage ( NULL )	627:4:17261:17274	4250931	2	True				
ANR	4252271	CallExpression	usage ( NULL )		4250931	0					
ANR	4252272	Callee	usage		4250931	0					
ANR	4252273	Identifier	usage		4250931	0					
ANR	4252274	ArgumentList	NULL		4250931	1					
ANR	4252275	Argument	NULL		4250931	0					
ANR	4252276	Identifier	NULL		4250931	0					
ANR	4252277	BreakStatement	break ;	629:3:17284:17289	4250931	36	True				
ANR	4252278	Label	case 'm' :	630:2:17293:17301	4250931	37	True				
ANR	4252279	ExpressionStatement	subsys_check ( MyName )	631:3:17306:17328	4250931	38	True				
ANR	4252280	CallExpression	subsys_check ( MyName )		4250931	0					
ANR	4252281	Callee	subsys_check		4250931	0					
ANR	4252282	Identifier	subsys_check		4250931	0					
ANR	4252283	ArgumentList	MyName		4250931	1					
ANR	4252284	Argument	MyName		4250931	0					
ANR	4252285	Identifier	MyName		4250931	0					
ANR	4252286	ExpressionStatement	dt = DT_MASTER	632:3:17333:17347	4250931	39	True				
ANR	4252287	AssignmentExpression	dt = DT_MASTER		4250931	0		=			
ANR	4252288	Identifier	dt		4250931	0					
ANR	4252289	Identifier	DT_MASTER		4250931	1					
ANR	4252290	BreakStatement	break ;	633:3:17352:17357	4250931	40	True				
ANR	4252291	Label	case 'c' :	634:2:17361:17369	4250931	41	True				
ANR	4252292	IfStatement	if ( ( * tmp ) [ 2 ] )		4250931	42					
ANR	4252293	Condition	( * tmp ) [ 2 ]	635:7:17378:17386	4250931	0	True				
ANR	4252294	ArrayIndexing	( * tmp ) [ 2 ]		4250931	0					
ANR	4252295	UnaryOperationExpression	* tmp		4250931	0					
ANR	4252296	UnaryOperator	*		4250931	0					
ANR	4252297	Identifier	tmp		4250931	1					
ANR	4252298	PrimaryExpression	2		4250931	1					
ANR	4252299	CompoundStatement		313:19:7742:7742	4250931	1					
ANR	4252300	SwitchStatement	switch ( ( * tmp ) [ 2 ] )		4250931	0					
ANR	4252301	Condition	( * tmp ) [ 2 ]	636:12:17404:17412	4250931	0	True				
ANR	4252302	ArrayIndexing	( * tmp ) [ 2 ]		4250931	0					
ANR	4252303	UnaryOperationExpression	* tmp		4250931	0					
ANR	4252304	UnaryOperator	*		4250931	0					
ANR	4252305	Identifier	tmp		4250931	1					
ANR	4252306	PrimaryExpression	2		4250931	1					
ANR	4252307	CompoundStatement		314:24:7768:7768	4250931	1					
ANR	4252308	Label	case 'm' :	637:4:17422:17430	4250931	0	True				
ANR	4252309	ExpressionStatement	tmp ++	640:5:17518:17523	4250931	1	True				
ANR	4252310	PostIncDecOperationExpression	tmp ++		4250931	0					
ANR	4252311	Identifier	tmp		4250931	0					
ANR	4252312	IncDec	++		4250931	1					
ANR	4252313	IfStatement	if ( tmp && * tmp )		4250931	2					
ANR	4252314	Condition	tmp && * tmp	641:9:17534:17544	4250931	0	True				
ANR	4252315	AndExpression	tmp && * tmp		4250931	0		&&			
ANR	4252316	Identifier	tmp		4250931	0					
ANR	4252317	UnaryOperationExpression	* tmp		4250931	1					
ANR	4252318	UnaryOperator	*		4250931	0					
ANR	4252319	Identifier	tmp		4250931	1					
ANR	4252320	CompoundStatement		319:23:7900:7900	4250931	1					
ANR	4252321	ExpressionStatement	cmd = atoi ( * tmp )	642:6:17556:17574	4250931	0	True				
ANR	4252322	AssignmentExpression	cmd = atoi ( * tmp )		4250931	0		=			
ANR	4252323	Identifier	cmd		4250931	0					
ANR	4252324	CallExpression	atoi ( * tmp )		4250931	1					
ANR	4252325	Callee	atoi		4250931	0					
ANR	4252326	Identifier	atoi		4250931	0					
ANR	4252327	ArgumentList	* tmp		4250931	1					
ANR	4252328	Argument	* tmp		4250931	0					
ANR	4252329	UnaryOperationExpression	* tmp		4250931	0					
ANR	4252330	UnaryOperator	*		4250931	0					
ANR	4252331	Identifier	tmp		4250931	1					
ANR	4252332	ExpressionStatement	cmd_set = 1	643:6:17582:17593	4250931	1	True				
ANR	4252333	AssignmentExpression	cmd_set = 1		4250931	0		=			
ANR	4252334	Identifier	cmd_set		4250931	0					
ANR	4252335	PrimaryExpression	1		4250931	1					
ANR	4252336	IfStatement	if ( ! cmd )		4250931	2					
ANR	4252337	Condition	! cmd	644:10:17605:17608	4250931	0	True				
ANR	4252338	UnaryOperationExpression	! cmd		4250931	0					
ANR	4252339	UnaryOperator	!		4250931	0					
ANR	4252340	Identifier	cmd		4250931	1					
ANR	4252341	CompoundStatement		322:17:7964:7964	4250931	1					
ANR	4252342	ExpressionStatement	"fprintf ( stderr , ""ERROR: invalid argument to -cmd (\\""%s\\"")\\n"" , * tmp )"	645:7:17621:17711	4250931	0	True				
ANR	4252343	CallExpression	"fprintf ( stderr , ""ERROR: invalid argument to -cmd (\\""%s\\"")\\n"" , * tmp )"		4250931	0					
ANR	4252344	Callee	fprintf		4250931	0					
ANR	4252345	Identifier	fprintf		4250931	0					
ANR	4252346	ArgumentList	stderr		4250931	1					
ANR	4252347	Argument	stderr		4250931	0					
ANR	4252348	Identifier	stderr		4250931	0					
ANR	4252349	Argument	"""ERROR: invalid argument to -cmd (\\""%s\\"")\\n"""		4250931	1					
ANR	4252350	PrimaryExpression	"""ERROR: invalid argument to -cmd (\\""%s\\"")\\n"""		4250931	0					
ANR	4252351	Argument	* tmp		4250931	2					
ANR	4252352	UnaryOperationExpression	* tmp		4250931	0					
ANR	4252353	UnaryOperator	*		4250931	0					
ANR	4252354	Identifier	tmp		4250931	1					
ANR	4252355	ExpressionStatement	exit ( 1 )	648:7:17720:17729	4250931	1	True				
ANR	4252356	CallExpression	exit ( 1 )		4250931	0					
ANR	4252357	Callee	exit		4250931	0					
ANR	4252358	Identifier	exit		4250931	0					
ANR	4252359	ArgumentList	1		4250931	1					
ANR	4252360	Argument	1		4250931	0					
ANR	4252361	PrimaryExpression	1		4250931	0					
ANR	4252362	ElseStatement	else		4250931	0					
ANR	4252363	CompoundStatement		328:12:8103:8103	4250931	0					
ANR	4252364	ExpressionStatement	"fprintf ( stderr , ""ERROR: -cmd requires another argument\\n"" )"	651:6:17759:17829	4250931	0	True				
ANR	4252365	CallExpression	"fprintf ( stderr , ""ERROR: -cmd requires another argument\\n"" )"		4250931	0					
ANR	4252366	Callee	fprintf		4250931	0					
ANR	4252367	Identifier	fprintf		4250931	0					
ANR	4252368	ArgumentList	stderr		4250931	1					
ANR	4252369	Argument	stderr		4250931	0					
ANR	4252370	Identifier	stderr		4250931	0					
ANR	4252371	Argument	"""ERROR: -cmd requires another argument\\n"""		4250931	1					
ANR	4252372	PrimaryExpression	"""ERROR: -cmd requires another argument\\n"""		4250931	0					
ANR	4252373	ExpressionStatement	exit ( 1 )	653:6:17838:17847	4250931	1	True				
ANR	4252374	CallExpression	exit ( 1 )		4250931	0					
ANR	4252375	Callee	exit		4250931	0					
ANR	4252376	Identifier	exit		4250931	0					
ANR	4252377	ArgumentList	1		4250931	1					
ANR	4252378	Argument	1		4250931	0					
ANR	4252379	PrimaryExpression	1		4250931	0					
ANR	4252380	BreakStatement	break ;	655:5:17861:17866	4250931	3	True				
ANR	4252381	Label	case 'o' :	656:4:17872:17880	4250931	4	True				
ANR	4252382	IfStatement	if ( ( * tmp ) [ 3 ] )		4250931	5					
ANR	4252383	Condition	( * tmp ) [ 3 ]	657:10:17892:17900	4250931	0	True				
ANR	4252384	ArrayIndexing	( * tmp ) [ 3 ]		4250931	0					
ANR	4252385	UnaryOperationExpression	* tmp		4250931	0					
ANR	4252386	UnaryOperator	*		4250931	0					
ANR	4252387	Identifier	tmp		4250931	1					
ANR	4252388	PrimaryExpression	3		4250931	1					
ANR	4252389	CompoundStatement		335:22:8256:8256	4250931	1					
ANR	4252390	SwitchStatement	switch ( ( * tmp ) [ 3 ] )		4250931	0					
ANR	4252391	Condition	( * tmp ) [ 3 ]	658:16:17922:17930	4250931	0	True				
ANR	4252392	ArrayIndexing	( * tmp ) [ 3 ]		4250931	0					
ANR	4252393	UnaryOperationExpression	* tmp		4250931	0					
ANR	4252394	UnaryOperator	*		4250931	0					
ANR	4252395	Identifier	tmp		4250931	1					
ANR	4252396	PrimaryExpression	3		4250931	1					
ANR	4252397	CompoundStatement		336:28:8286:8286	4250931	1					
ANR	4252398	Label	case 'n' :	659:8:17944:17952	4250931	0	True				
ANR	4252399	ExpressionStatement	tmp ++	662:10:18060:18065	4250931	1	True				
ANR	4252400	PostIncDecOperationExpression	tmp ++		4250931	0					
ANR	4252401	Identifier	tmp		4250931	0					
ANR	4252402	IncDec	++		4250931	1					
ANR	4252403	IfStatement	if ( tmp && * tmp )		4250931	2					
ANR	4252404	Condition	tmp && * tmp	663:14:18081:18091	4250931	0	True				
ANR	4252405	AndExpression	tmp && * tmp		4250931	0		&&			
ANR	4252406	Identifier	tmp		4250931	0					
ANR	4252407	UnaryOperationExpression	* tmp		4250931	1					
ANR	4252408	UnaryOperator	*		4250931	0					
ANR	4252409	Identifier	tmp		4250931	1					
ANR	4252410	CompoundStatement		341:28:8447:8447	4250931	1					
ANR	4252411	ExpressionStatement	constraint = * tmp	664:5:18102:18119	4250931	0	True				
ANR	4252412	AssignmentExpression	constraint = * tmp		4250931	0		=			
ANR	4252413	Identifier	constraint		4250931	0					
ANR	4252414	UnaryOperationExpression	* tmp		4250931	1					
ANR	4252415	UnaryOperator	*		4250931	0					
ANR	4252416	Identifier	tmp		4250931	1					
ANR	4252417	ElseStatement	else		4250931	0					
ANR	4252418	CompoundStatement		343:17:8490:8490	4250931	0					
ANR	4252419	ExpressionStatement	"fprintf ( stderr , ""ERROR: -constraint requires another argument\\n"" )"	666:5:18145:18212	4250931	0	True				
ANR	4252420	CallExpression	"fprintf ( stderr , ""ERROR: -constraint requires another argument\\n"" )"		4250931	0					
ANR	4252421	Callee	fprintf		4250931	0					
ANR	4252422	Identifier	fprintf		4250931	0					
ANR	4252423	ArgumentList	stderr		4250931	1					
ANR	4252424	Argument	stderr		4250931	0					
ANR	4252425	Identifier	stderr		4250931	0					
ANR	4252426	Argument	"""ERROR: -constraint requires another argument\\n"""		4250931	1					
ANR	4252427	PrimaryExpression	"""ERROR: -constraint requires another argument\\n"""		4250931	0					
ANR	4252428	ExpressionStatement	usage ( NULL )	667:5:18219:18232	4250931	1	True				
ANR	4252429	CallExpression	usage ( NULL )		4250931	0					
ANR	4252430	Callee	usage		4250931	0					
ANR	4252431	Identifier	usage		4250931	0					
ANR	4252432	ArgumentList	NULL		4250931	1					
ANR	4252433	Argument	NULL		4250931	0					
ANR	4252434	Identifier	NULL		4250931	0					
ANR	4252435	BreakStatement	break ;	670:10:18257:18262	4250931	3	True				
ANR	4252436	Label	case 'l' :	671:8:18272:18280	4250931	4	True				
ANR	4252437	ExpressionStatement	subsys_check ( MyName )	672:5:18287:18309	4250931	5	True				
ANR	4252438	CallExpression	subsys_check ( MyName )		4250931	0					
ANR	4252439	Callee	subsys_check		4250931	0					
ANR	4252440	Identifier	subsys_check		4250931	0					
ANR	4252441	ArgumentList	MyName		4250931	1					
ANR	4252442	Argument	MyName		4250931	0					
ANR	4252443	Identifier	MyName		4250931	0					
ANR	4252444	ExpressionStatement	dt = DT_COLLECTOR	673:5:18316:18333	4250931	6	True				
ANR	4252445	AssignmentExpression	dt = DT_COLLECTOR		4250931	0		=			
ANR	4252446	Identifier	dt		4250931	0					
ANR	4252447	Identifier	DT_COLLECTOR		4250931	1					
ANR	4252448	BreakStatement	break ;	674:5:18340:18345	4250931	7	True				
ANR	4252449	Label	default :	675:8:18355:18362	4250931	8	True				
ANR	4252450	Identifier	default		4250931	0					
ANR	4252451	ExpressionStatement	"fprintf ( stderr , ""ERROR: unknown parameter: \\""%s\\""\\n"" , * tmp )"	676:10:18374:18460	4250931	9	True				
ANR	4252452	CallExpression	"fprintf ( stderr , ""ERROR: unknown parameter: \\""%s\\""\\n"" , * tmp )"		4250931	0					
ANR	4252453	Callee	fprintf		4250931	0					
ANR	4252454	Identifier	fprintf		4250931	0					
ANR	4252455	ArgumentList	stderr		4250931	1					
ANR	4252456	Argument	stderr		4250931	0					
ANR	4252457	Identifier	stderr		4250931	0					
ANR	4252458	Argument	"""ERROR: unknown parameter: \\""%s\\""\\n"""		4250931	1					
ANR	4252459	PrimaryExpression	"""ERROR: unknown parameter: \\""%s\\""\\n"""		4250931	0					
ANR	4252460	Argument	* tmp		4250931	2					
ANR	4252461	UnaryOperationExpression	* tmp		4250931	0					
ANR	4252462	UnaryOperator	*		4250931	0					
ANR	4252463	Identifier	tmp		4250931	1					
ANR	4252464	ExpressionStatement	usage ( NULL )	679:10:18474:18487	4250931	10	True				
ANR	4252465	CallExpression	usage ( NULL )		4250931	0					
ANR	4252466	Callee	usage		4250931	0					
ANR	4252467	Identifier	usage		4250931	0					
ANR	4252468	ArgumentList	NULL		4250931	1					
ANR	4252469	Argument	NULL		4250931	0					
ANR	4252470	Identifier	NULL		4250931	0					
ANR	4252471	BreakStatement	break ;	680:10:18499:18504	4250931	11	True				
ANR	4252472	ElseStatement	else		4250931	0					
ANR	4252473	CompoundStatement		360:13:8881:8881	4250931	0					
ANR	4252474	ExpressionStatement	"fprintf ( stderr , ""ERROR: ambigous parameter: \\""%s\\""\\n"" , * tmp )"	683:8:18539:18622	4250931	0	True				
ANR	4252475	CallExpression	"fprintf ( stderr , ""ERROR: ambigous parameter: \\""%s\\""\\n"" , * tmp )"		4250931	0					
ANR	4252476	Callee	fprintf		4250931	0					
ANR	4252477	Identifier	fprintf		4250931	0					
ANR	4252478	ArgumentList	stderr		4250931	1					
ANR	4252479	Argument	stderr		4250931	0					
ANR	4252480	Identifier	stderr		4250931	0					
ANR	4252481	Argument	"""ERROR: ambigous parameter: \\""%s\\""\\n"""		4250931	1					
ANR	4252482	PrimaryExpression	"""ERROR: ambigous parameter: \\""%s\\""\\n"""		4250931	0					
ANR	4252483	Argument	* tmp		4250931	2					
ANR	4252484	UnaryOperationExpression	* tmp		4250931	0					
ANR	4252485	UnaryOperator	*		4250931	0					
ANR	4252486	Identifier	tmp		4250931	1					
ANR	4252487	ExpressionStatement	"fprintf ( stderr , ""Please specify \\""-collector\\"" or \\""-constraint\\""\\n"" )"	686:8:18634:18716	4250931	1	True				
ANR	4252488	CallExpression	"fprintf ( stderr , ""Please specify \\""-collector\\"" or \\""-constraint\\""\\n"" )"		4250931	0					
ANR	4252489	Callee	fprintf		4250931	0					
ANR	4252490	Identifier	fprintf		4250931	0					
ANR	4252491	ArgumentList	stderr		4250931	1					
ANR	4252492	Argument	stderr		4250931	0					
ANR	4252493	Identifier	stderr		4250931	0					
ANR	4252494	Argument	"""Please specify \\""-collector\\"" or \\""-constraint\\""\\n"""		4250931	1					
ANR	4252495	PrimaryExpression	"""Please specify \\""-collector\\"" or \\""-constraint\\""\\n"""		4250931	0					
ANR	4252496	ExpressionStatement	usage ( NULL )	688:8:18726:18739	4250931	2	True				
ANR	4252497	CallExpression	usage ( NULL )		4250931	0					
ANR	4252498	Callee	usage		4250931	0					
ANR	4252499	Identifier	usage		4250931	0					
ANR	4252500	ArgumentList	NULL		4250931	1					
ANR	4252501	Argument	NULL		4250931	0					
ANR	4252502	Identifier	NULL		4250931	0					
ANR	4252503	BreakStatement	break ;	690:6:18755:18760	4250931	6	True				
ANR	4252504	Label	default :	691:4:18766:18773	4250931	7	True				
ANR	4252505	Identifier	default		4250931	0					
ANR	4252506	ExpressionStatement	"fprintf ( stderr , ""ERROR: unknown parameter: \\""%s\\""\\n"" , * tmp )"	692:5:18780:18858	4250931	8	True				
ANR	4252507	CallExpression	"fprintf ( stderr , ""ERROR: unknown parameter: \\""%s\\""\\n"" , * tmp )"		4250931	0					
ANR	4252508	Callee	fprintf		4250931	0					
ANR	4252509	Identifier	fprintf		4250931	0					
ANR	4252510	ArgumentList	stderr		4250931	1					
ANR	4252511	Argument	stderr		4250931	0					
ANR	4252512	Identifier	stderr		4250931	0					
ANR	4252513	Argument	"""ERROR: unknown parameter: \\""%s\\""\\n"""		4250931	1					
ANR	4252514	PrimaryExpression	"""ERROR: unknown parameter: \\""%s\\""\\n"""		4250931	0					
ANR	4252515	Argument	* tmp		4250931	2					
ANR	4252516	UnaryOperationExpression	* tmp		4250931	0					
ANR	4252517	UnaryOperator	*		4250931	0					
ANR	4252518	Identifier	tmp		4250931	1					
ANR	4252519	ExpressionStatement	usage ( NULL )	695:5:18867:18880	4250931	9	True				
ANR	4252520	CallExpression	usage ( NULL )		4250931	0					
ANR	4252521	Callee	usage		4250931	0					
ANR	4252522	Identifier	usage		4250931	0					
ANR	4252523	ArgumentList	NULL		4250931	1					
ANR	4252524	Argument	NULL		4250931	0					
ANR	4252525	Identifier	NULL		4250931	0					
ANR	4252526	BreakStatement	break ;	696:5:18887:18892	4250931	10	True				
ANR	4252527	ElseStatement	else		4250931	0					
ANR	4252528	CompoundStatement		376:10:9262:9262	4250931	0					
ANR	4252529	ExpressionStatement	"fprintf ( stderr , ""ERROR: ambiguous parameter: \\""%s\\""\\n"" , * tmp )"	699:4:18916:18994	4250931	0	True				
ANR	4252530	CallExpression	"fprintf ( stderr , ""ERROR: ambiguous parameter: \\""%s\\""\\n"" , * tmp )"		4250931	0					
ANR	4252531	Callee	fprintf		4250931	0					
ANR	4252532	Identifier	fprintf		4250931	0					
ANR	4252533	ArgumentList	stderr		4250931	1					
ANR	4252534	Argument	stderr		4250931	0					
ANR	4252535	Identifier	stderr		4250931	0					
ANR	4252536	Argument	"""ERROR: ambiguous parameter: \\""%s\\""\\n"""		4250931	1					
ANR	4252537	PrimaryExpression	"""ERROR: ambiguous parameter: \\""%s\\""\\n"""		4250931	0					
ANR	4252538	Argument	* tmp		4250931	2					
ANR	4252539	UnaryOperationExpression	* tmp		4250931	0					
ANR	4252540	UnaryOperator	*		4250931	0					
ANR	4252541	Identifier	tmp		4250931	1					
ANR	4252542	ExpressionStatement	usage ( NULL )	702:4:19001:19014	4250931	1	True				
ANR	4252543	CallExpression	usage ( NULL )		4250931	0					
ANR	4252544	Callee	usage		4250931	0					
ANR	4252545	Identifier	usage		4250931	0					
ANR	4252546	ArgumentList	NULL		4250931	1					
ANR	4252547	Argument	NULL		4250931	0					
ANR	4252548	Identifier	NULL		4250931	0					
ANR	4252549	BreakStatement	break ;	704:3:19024:19029	4250931	43	True				
ANR	4252550	Label	case 'k' :	705:2:19033:19041	4250931	44	True				
ANR	4252551	ExpressionStatement	subsys_check ( MyName )	706:3:19046:19068	4250931	45	True				
ANR	4252552	CallExpression	subsys_check ( MyName )		4250931	0					
ANR	4252553	Callee	subsys_check		4250931	0					
ANR	4252554	Identifier	subsys_check		4250931	0					
ANR	4252555	ArgumentList	MyName		4250931	1					
ANR	4252556	Argument	MyName		4250931	0					
ANR	4252557	Identifier	MyName		4250931	0					
ANR	4252558	ExpressionStatement	dt = DT_KBDD	707:3:19073:19085	4250931	46	True				
ANR	4252559	AssignmentExpression	dt = DT_KBDD		4250931	0		=			
ANR	4252560	Identifier	dt		4250931	0					
ANR	4252561	Identifier	DT_KBDD		4250931	1					
ANR	4252562	BreakStatement	break ;	708:3:19090:19095	4250931	47	True				
ANR	4252563	Label	case 's' :	709:2:19099:19107	4250931	48	True				
ANR	4252564	ExpressionStatement	subsys_check ( MyName )	710:3:19112:19134	4250931	49	True				
ANR	4252565	CallExpression	subsys_check ( MyName )		4250931	0					
ANR	4252566	Callee	subsys_check		4250931	0					
ANR	4252567	Identifier	subsys_check		4250931	0					
ANR	4252568	ArgumentList	MyName		4250931	1					
ANR	4252569	Argument	MyName		4250931	0					
ANR	4252570	Identifier	MyName		4250931	0					
ANR	4252571	IfStatement	if ( ( * tmp ) [ 2 ] )		4250931	50					
ANR	4252572	Condition	( * tmp ) [ 2 ]	711:7:19143:19151	4250931	0	True				
ANR	4252573	ArrayIndexing	( * tmp ) [ 2 ]		4250931	0					
ANR	4252574	UnaryOperationExpression	* tmp		4250931	0					
ANR	4252575	UnaryOperator	*		4250931	0					
ANR	4252576	Identifier	tmp		4250931	1					
ANR	4252577	PrimaryExpression	2		4250931	1					
ANR	4252578	CompoundStatement		389:19:9507:9507	4250931	1					
ANR	4252579	SwitchStatement	switch ( ( * tmp ) [ 2 ] )		4250931	0					
ANR	4252580	Condition	( * tmp ) [ 2 ]	712:12:19169:19177	4250931	0	True				
ANR	4252581	ArrayIndexing	( * tmp ) [ 2 ]		4250931	0					
ANR	4252582	UnaryOperationExpression	* tmp		4250931	0					
ANR	4252583	UnaryOperator	*		4250931	0					
ANR	4252584	Identifier	tmp		4250931	1					
ANR	4252585	PrimaryExpression	2		4250931	1					
ANR	4252586	CompoundStatement		390:24:9533:9533	4250931	1					
ANR	4252587	Label	case 'c' :	713:4:19187:19195	4250931	0	True				
ANR	4252588	ExpressionStatement	dt = DT_SCHEDD	714:5:19202:19216	4250931	1	True				
ANR	4252589	AssignmentExpression	dt = DT_SCHEDD		4250931	0		=			
ANR	4252590	Identifier	dt		4250931	0					
ANR	4252591	Identifier	DT_SCHEDD		4250931	1					
ANR	4252592	BreakStatement	break ;	715:5:19223:19228	4250931	2	True				
ANR	4252593	Label	case 't' :	716:4:19234:19242	4250931	3	True				
ANR	4252594	ExpressionStatement	dt = DT_STARTD	717:5:19249:19263	4250931	4	True				
ANR	4252595	AssignmentExpression	dt = DT_STARTD		4250931	0		=			
ANR	4252596	Identifier	dt		4250931	0					
ANR	4252597	Identifier	DT_STARTD		4250931	1					
ANR	4252598	BreakStatement	break ;	718:5:19270:19275	4250931	5	True				
ANR	4252599	Label	case 'u' :	719:4:19281:19289	4250931	6	True				
ANR	4252600	ExpressionStatement	tmp ++	722:5:19383:19388	4250931	7	True				
ANR	4252601	PostIncDecOperationExpression	tmp ++		4250931	0					
ANR	4252602	Identifier	tmp		4250931	0					
ANR	4252603	IncDec	++		4250931	1					
ANR	4252604	IfStatement	if ( tmp && * tmp )		4250931	8					
ANR	4252605	Condition	tmp && * tmp	723:9:19399:19409	4250931	0	True				
ANR	4252606	AndExpression	tmp && * tmp		4250931	0		&&			
ANR	4252607	Identifier	tmp		4250931	0					
ANR	4252608	UnaryOperationExpression	* tmp		4250931	1					
ANR	4252609	UnaryOperator	*		4250931	0					
ANR	4252610	Identifier	tmp		4250931	1					
ANR	4252611	CompoundStatement		401:23:9765:9765	4250931	1					
ANR	4252612	ExpressionStatement	subsys_check ( MyName )	724:6:19421:19443	4250931	0	True				
ANR	4252613	CallExpression	subsys_check ( MyName )		4250931	0					
ANR	4252614	Callee	subsys_check		4250931	0					
ANR	4252615	Identifier	subsys_check		4250931	0					
ANR	4252616	ArgumentList	MyName		4250931	1					
ANR	4252617	Argument	MyName		4250931	0					
ANR	4252618	Identifier	MyName		4250931	0					
ANR	4252619	ExpressionStatement	subsys_arg = * tmp	725:6:19451:19468	4250931	1	True				
ANR	4252620	AssignmentExpression	subsys_arg = * tmp		4250931	0		=			
ANR	4252621	Identifier	subsys_arg		4250931	0					
ANR	4252622	UnaryOperationExpression	* tmp		4250931	1					
ANR	4252623	UnaryOperator	*		4250931	0					
ANR	4252624	Identifier	tmp		4250931	1					
ANR	4252625	ExpressionStatement	dt = stringToDaemonType ( subsys_arg )	726:6:19476:19511	4250931	2	True				
ANR	4252626	AssignmentExpression	dt = stringToDaemonType ( subsys_arg )		4250931	0		=			
ANR	4252627	Identifier	dt		4250931	0					
ANR	4252628	CallExpression	stringToDaemonType ( subsys_arg )		4250931	1					
ANR	4252629	Callee	stringToDaemonType		4250931	0					
ANR	4252630	Identifier	stringToDaemonType		4250931	0					
ANR	4252631	ArgumentList	subsys_arg		4250931	1					
ANR	4252632	Argument	subsys_arg		4250931	0					
ANR	4252633	Identifier	subsys_arg		4250931	0					
ANR	4252634	IfStatement	if ( dt == DT_NONE )		4250931	3					
ANR	4252635	Condition	dt == DT_NONE	727:10:19523:19535	4250931	0	True				
ANR	4252636	EqualityExpression	dt == DT_NONE		4250931	0		==			
ANR	4252637	Identifier	dt		4250931	0					
ANR	4252638	Identifier	DT_NONE		4250931	1					
ANR	4252639	CompoundStatement		405:26:9891:9891	4250931	1					
ANR	4252640	ExpressionStatement	dt = DT_GENERIC	728:7:19548:19563	4250931	0	True				
ANR	4252641	AssignmentExpression	dt = DT_GENERIC		4250931	0		=			
ANR	4252642	Identifier	dt		4250931	0					
ANR	4252643	Identifier	DT_GENERIC		4250931	1					
ANR	4252644	ElseStatement	else		4250931	0					
ANR	4252645	CompoundStatement		408:12:9937:9937	4250931	0					
ANR	4252646	ExpressionStatement	"fprintf ( stderr , ""ERROR: -daemon requires another argument\\n"" )"	731:6:19593:19665	4250931	0	True				
ANR	4252647	CallExpression	"fprintf ( stderr , ""ERROR: -daemon requires another argument\\n"" )"		4250931	0					
ANR	4252648	Callee	fprintf		4250931	0					
ANR	4252649	Identifier	fprintf		4250931	0					
ANR	4252650	ArgumentList	stderr		4250931	1					
ANR	4252651	Argument	stderr		4250931	0					
ANR	4252652	Identifier	stderr		4250931	0					
ANR	4252653	Argument	"""ERROR: -daemon requires another argument\\n"""		4250931	1					
ANR	4252654	PrimaryExpression	"""ERROR: -daemon requires another argument\\n"""		4250931	0					
ANR	4252655	ExpressionStatement	usage ( NULL )	733:6:19674:19687	4250931	1	True				
ANR	4252656	CallExpression	usage ( NULL )		4250931	0					
ANR	4252657	Callee	usage		4250931	0					
ANR	4252658	Identifier	usage		4250931	0					
ANR	4252659	ArgumentList	NULL		4250931	1					
ANR	4252660	Argument	NULL		4250931	0					
ANR	4252661	Identifier	NULL		4250931	0					
ANR	4252662	ExpressionStatement	exit ( 1 )	734:6:19695:19704	4250931	2	True				
ANR	4252663	CallExpression	exit ( 1 )		4250931	0					
ANR	4252664	Callee	exit		4250931	0					
ANR	4252665	Identifier	exit		4250931	0					
ANR	4252666	ArgumentList	1		4250931	1					
ANR	4252667	Argument	1		4250931	0					
ANR	4252668	PrimaryExpression	1		4250931	0					
ANR	4252669	BreakStatement	break ;	736:5:19718:19723	4250931	9	True				
ANR	4252670	Label	default :	737:4:19729:19736	4250931	10	True				
ANR	4252671	Identifier	default		4250931	0					
ANR	4252672	ExpressionStatement	"fprintf ( stderr , ""ERROR: unknown parameter: \\""%s\\""\\n"" , * tmp )"	738:5:19744:19822	4250931	11	True				
ANR	4252673	CallExpression	"fprintf ( stderr , ""ERROR: unknown parameter: \\""%s\\""\\n"" , * tmp )"		4250931	0					
ANR	4252674	Callee	fprintf		4250931	0					
ANR	4252675	Identifier	fprintf		4250931	0					
ANR	4252676	ArgumentList	stderr		4250931	1					
ANR	4252677	Argument	stderr		4250931	0					
ANR	4252678	Identifier	stderr		4250931	0					
ANR	4252679	Argument	"""ERROR: unknown parameter: \\""%s\\""\\n"""		4250931	1					
ANR	4252680	PrimaryExpression	"""ERROR: unknown parameter: \\""%s\\""\\n"""		4250931	0					
ANR	4252681	Argument	* tmp		4250931	2					
ANR	4252682	UnaryOperationExpression	* tmp		4250931	0					
ANR	4252683	UnaryOperator	*		4250931	0					
ANR	4252684	Identifier	tmp		4250931	1					
ANR	4252685	ExpressionStatement	usage ( NULL )	741:5:19831:19844	4250931	12	True				
ANR	4252686	CallExpression	usage ( NULL )		4250931	0					
ANR	4252687	Callee	usage		4250931	0					
ANR	4252688	Identifier	usage		4250931	0					
ANR	4252689	ArgumentList	NULL		4250931	1					
ANR	4252690	Argument	NULL		4250931	0					
ANR	4252691	Identifier	NULL		4250931	0					
ANR	4252692	BreakStatement	break ;	742:5:19851:19856	4250931	13	True				
ANR	4252693	ElseStatement	else		4250931	0					
ANR	4252694	CompoundStatement		422:10:10226:10226	4250931	0					
ANR	4252695	ExpressionStatement	"fprintf ( stderr , ""ERROR: ambiguous argument \\""%s\\""\\n"" , * tmp )"	745:4:19880:19956	4250931	0	True				
ANR	4252696	CallExpression	"fprintf ( stderr , ""ERROR: ambiguous argument \\""%s\\""\\n"" , * tmp )"		4250931	0					
ANR	4252697	Callee	fprintf		4250931	0					
ANR	4252698	Identifier	fprintf		4250931	0					
ANR	4252699	ArgumentList	stderr		4250931	1					
ANR	4252700	Argument	stderr		4250931	0					
ANR	4252701	Identifier	stderr		4250931	0					
ANR	4252702	Argument	"""ERROR: ambiguous argument \\""%s\\""\\n"""		4250931	1					
ANR	4252703	PrimaryExpression	"""ERROR: ambiguous argument \\""%s\\""\\n"""		4250931	0					
ANR	4252704	Argument	* tmp		4250931	2					
ANR	4252705	UnaryOperationExpression	* tmp		4250931	0					
ANR	4252706	UnaryOperator	*		4250931	0					
ANR	4252707	Identifier	tmp		4250931	1					
ANR	4252708	ExpressionStatement	"fprintf ( stderr , ""Please specify \\""-daemon\\"", \\""-startd\\"" or \\""-schedd\\""\\n"" )"	748:4:19962:20044	4250931	1	True				
ANR	4252709	CallExpression	"fprintf ( stderr , ""Please specify \\""-daemon\\"", \\""-startd\\"" or \\""-schedd\\""\\n"" )"		4250931	0					
ANR	4252710	Callee	fprintf		4250931	0					
ANR	4252711	Identifier	fprintf		4250931	0					
ANR	4252712	ArgumentList	stderr		4250931	1					
ANR	4252713	Argument	stderr		4250931	0					
ANR	4252714	Identifier	stderr		4250931	0					
ANR	4252715	Argument	"""Please specify \\""-daemon\\"", \\""-startd\\"" or \\""-schedd\\""\\n"""		4250931	1					
ANR	4252716	PrimaryExpression	"""Please specify \\""-daemon\\"", \\""-startd\\"" or \\""-schedd\\""\\n"""		4250931	0					
ANR	4252717	ExpressionStatement	usage ( NULL )	750:4:20050:20063	4250931	2	True				
ANR	4252718	CallExpression	usage ( NULL )		4250931	0					
ANR	4252719	Callee	usage		4250931	0					
ANR	4252720	Identifier	usage		4250931	0					
ANR	4252721	ArgumentList	NULL		4250931	1					
ANR	4252722	Argument	NULL		4250931	0					
ANR	4252723	Identifier	NULL		4250931	0					
ANR	4252724	BreakStatement	break ;	752:3:20073:20078	4250931	51	True				
ANR	4252725	Label	default :	753:2:20082:20089	4250931	52	True				
ANR	4252726	Identifier	default		4250931	0					
ANR	4252727	ExpressionStatement	"fprintf ( stderr , ""ERROR: invalid argument \\""%s\\""\\n"" , * tmp )"	754:3:20094:20159	4250931	53	True				
ANR	4252728	CallExpression	"fprintf ( stderr , ""ERROR: invalid argument \\""%s\\""\\n"" , * tmp )"		4250931	0					
ANR	4252729	Callee	fprintf		4250931	0					
ANR	4252730	Identifier	fprintf		4250931	0					
ANR	4252731	ArgumentList	stderr		4250931	1					
ANR	4252732	Argument	stderr		4250931	0					
ANR	4252733	Identifier	stderr		4250931	0					
ANR	4252734	Argument	"""ERROR: invalid argument \\""%s\\""\\n"""		4250931	1					
ANR	4252735	PrimaryExpression	"""ERROR: invalid argument \\""%s\\""\\n"""		4250931	0					
ANR	4252736	Argument	* tmp		4250931	2					
ANR	4252737	UnaryOperationExpression	* tmp		4250931	0					
ANR	4252738	UnaryOperator	*		4250931	0					
ANR	4252739	Identifier	tmp		4250931	1					
ANR	4252740	ExpressionStatement	usage ( MyName )	756:3:20164:20179	4250931	54	True				
ANR	4252741	CallExpression	usage ( MyName )		4250931	0					
ANR	4252742	Callee	usage		4250931	0					
ANR	4252743	Identifier	usage		4250931	0					
ANR	4252744	ArgumentList	MyName		4250931	1					
ANR	4252745	Argument	MyName		4250931	0					
ANR	4252746	Identifier	MyName		4250931	0					
ANR	4252747	ExpressionStatement	computeRealAction ( )	767:1:20616:20635	4250931	15	True				
ANR	4252748	CallExpression	computeRealAction ( )		4250931	0					
ANR	4252749	Callee	computeRealAction		4250931	0					
ANR	4252750	Identifier	computeRealAction		4250931	0					
ANR	4252751	ArgumentList			4250931	1					
ANR	4252752	IfStatement	if ( subsys )		4250931	16					
ANR	4252753	Condition	subsys	774:5:20938:20943	4250931	0	True				
ANR	4252754	Identifier	subsys		4250931	0					
ANR	4252755	CompoundStatement		452:14:11299:11299	4250931	1					
ANR	4252756	IfStatement	if ( ( dt == DT_ANY || dt == DT_GENERIC ) && subsys_arg )		4250931	0					
ANR	4252757	Condition	( dt == DT_ANY || dt == DT_GENERIC ) && subsys_arg	775:6:20955:21002	4250931	0	True				
ANR	4252758	AndExpression	( dt == DT_ANY || dt == DT_GENERIC ) && subsys_arg		4250931	0		&&			
ANR	4252759	OrExpression	dt == DT_ANY || dt == DT_GENERIC		4250931	0		||			
ANR	4252760	EqualityExpression	dt == DT_ANY		4250931	0		==			
ANR	4252761	Identifier	dt		4250931	0					
ANR	4252762	Identifier	DT_ANY		4250931	1					
ANR	4252763	EqualityExpression	dt == DT_GENERIC		4250931	1		==			
ANR	4252764	Identifier	dt		4250931	0					
ANR	4252765	Identifier	DT_GENERIC		4250931	1					
ANR	4252766	Identifier	subsys_arg		4250931	1					
ANR	4252767	CompoundStatement		453:57:11358:11358	4250931	1					
ANR	4252768	ExpressionStatement	subsys = subsys_arg	776:3:21011:21030	4250931	0	True				
ANR	4252769	AssignmentExpression	subsys = subsys_arg		4250931	0		=			
ANR	4252770	Identifier	subsys		4250931	0					
ANR	4252771	Identifier	subsys_arg		4250931	1					
ANR	4252772	ElseStatement	else		4250931	0					
ANR	4252773	CompoundStatement		455:9:11394:11394	4250931	0					
ANR	4252774	ExpressionStatement	subsys = daemonString ( dt )	778:3:21048:21075	4250931	0	True				
ANR	4252775	AssignmentExpression	subsys = daemonString ( dt )		4250931	0		=			
ANR	4252776	Identifier	subsys		4250931	0					
ANR	4252777	CallExpression	daemonString ( dt )		4250931	1					
ANR	4252778	Callee	daemonString		4250931	0					
ANR	4252779	Identifier	daemonString		4250931	0					
ANR	4252780	ArgumentList	dt		4250931	1					
ANR	4252781	Argument	dt		4250931	0					
ANR	4252782	Identifier	dt		4250931	0					
ANR	4252783	IfStatement	if ( ( SET_SHUTDOWN_PROGRAM == cmd ) && ( NULL == exec_program ) )		4250931	17					
ANR	4252784	Condition	( SET_SHUTDOWN_PROGRAM == cmd ) && ( NULL == exec_program )	783:7:21139:21193	4250931	0	True				
ANR	4252785	AndExpression	( SET_SHUTDOWN_PROGRAM == cmd ) && ( NULL == exec_program )		4250931	0		&&			
ANR	4252786	EqualityExpression	SET_SHUTDOWN_PROGRAM == cmd		4250931	0		==			
ANR	4252787	Identifier	SET_SHUTDOWN_PROGRAM		4250931	0					
ANR	4252788	Identifier	cmd		4250931	1					
ANR	4252789	EqualityExpression	NULL == exec_program		4250931	1		==			
ANR	4252790	Identifier	NULL		4250931	0					
ANR	4252791	Identifier	exec_program		4250931	1					
ANR	4252792	CompoundStatement		461:65:11549:11549	4250931	1					
ANR	4252793	ExpressionStatement	"fprintf ( stderr , ""ERROR: \\""-exec\\"" required for %s\\n"" , MyName )"	784:2:21201:21264	4250931	0	True				
ANR	4252794	CallExpression	"fprintf ( stderr , ""ERROR: \\""-exec\\"" required for %s\\n"" , MyName )"		4250931	0					
ANR	4252795	Callee	fprintf		4250931	0					
ANR	4252796	Identifier	fprintf		4250931	0					
ANR	4252797	ArgumentList	stderr		4250931	1					
ANR	4252798	Argument	stderr		4250931	0					
ANR	4252799	Identifier	stderr		4250931	0					
ANR	4252800	Argument	"""ERROR: \\""-exec\\"" required for %s\\n"""		4250931	1					
ANR	4252801	PrimaryExpression	"""ERROR: \\""-exec\\"" required for %s\\n"""		4250931	0					
ANR	4252802	Argument	MyName		4250931	2					
ANR	4252803	Identifier	MyName		4250931	0					
ANR	4252804	ExpressionStatement	usage ( NULL )	785:2:21268:21281	4250931	1	True				
ANR	4252805	CallExpression	usage ( NULL )		4250931	0					
ANR	4252806	Callee	usage		4250931	0					
ANR	4252807	Identifier	usage		4250931	0					
ANR	4252808	ArgumentList	NULL		4250931	1					
ANR	4252809	Argument	NULL		4250931	0					
ANR	4252810	Identifier	NULL		4250931	0					
ANR	4252811	IfStatement	if ( peaceful_shutdown && real_dt == DT_MASTER )		4250931	18					
ANR	4252812	Condition	peaceful_shutdown && real_dt == DT_MASTER	797:5:21722:21762	4250931	0	True				
ANR	4252813	AndExpression	peaceful_shutdown && real_dt == DT_MASTER		4250931	0		&&			
ANR	4252814	Identifier	peaceful_shutdown		4250931	0					
ANR	4252815	EqualityExpression	real_dt == DT_MASTER		4250931	1		==			
ANR	4252816	Identifier	real_dt		4250931	0					
ANR	4252817	Identifier	DT_MASTER		4250931	1					
ANR	4252818	CompoundStatement		475:49:12118:12118	4250931	1					
ANR	4252819	IfStatement	"if ( ( real_cmd == DAEMONS_OFF ) || ( real_cmd == DAEMON_OFF && subsys && ! strcmp ( subsys , ""startd"" ) ) || ( real_cmd == DAEMON_OFF && subsys && ! strcmp ( subsys , ""schedd"" ) ) || ( real_cmd == DC_OFF_GRACEFUL ) || ( real_cmd == RESTART ) )"		4250931	0					
ANR	4252820	Condition	"( real_cmd == DAEMONS_OFF ) || ( real_cmd == DAEMON_OFF && subsys && ! strcmp ( subsys , ""startd"" ) ) || ( real_cmd == DAEMON_OFF && subsys && ! strcmp ( subsys , ""schedd"" ) ) || ( real_cmd == DC_OFF_GRACEFUL ) || ( real_cmd == RESTART )"	798:6:21774:22000	4250931	0	True				
ANR	4252821	OrExpression	"( real_cmd == DAEMONS_OFF ) || ( real_cmd == DAEMON_OFF && subsys && ! strcmp ( subsys , ""startd"" ) ) || ( real_cmd == DAEMON_OFF && subsys && ! strcmp ( subsys , ""schedd"" ) ) || ( real_cmd == DC_OFF_GRACEFUL ) || ( real_cmd == RESTART )"		4250931	0		||			
ANR	4252822	EqualityExpression	real_cmd == DAEMONS_OFF		4250931	0		==			
ANR	4252823	Identifier	real_cmd		4250931	0					
ANR	4252824	Identifier	DAEMONS_OFF		4250931	1					
ANR	4252825	OrExpression	"( real_cmd == DAEMON_OFF && subsys && ! strcmp ( subsys , ""startd"" ) ) || ( real_cmd == DAEMON_OFF && subsys && ! strcmp ( subsys , ""schedd"" ) ) || ( real_cmd == DC_OFF_GRACEFUL ) || ( real_cmd == RESTART )"		4250931	1		||			
ANR	4252826	AndExpression	"real_cmd == DAEMON_OFF && subsys && ! strcmp ( subsys , ""startd"" )"		4250931	0		&&			
ANR	4252827	EqualityExpression	real_cmd == DAEMON_OFF		4250931	0		==			
ANR	4252828	Identifier	real_cmd		4250931	0					
ANR	4252829	Identifier	DAEMON_OFF		4250931	1					
ANR	4252830	AndExpression	"subsys && ! strcmp ( subsys , ""startd"" )"		4250931	1		&&			
ANR	4252831	Identifier	subsys		4250931	0					
ANR	4252832	UnaryOperationExpression	"! strcmp ( subsys , ""startd"" )"		4250931	1					
ANR	4252833	UnaryOperator	!		4250931	0					
ANR	4252834	CallExpression	"strcmp ( subsys , ""startd"" )"		4250931	1					
ANR	4252835	Callee	strcmp		4250931	0					
ANR	4252836	Identifier	strcmp		4250931	0					
ANR	4252837	ArgumentList	subsys		4250931	1					
ANR	4252838	Argument	subsys		4250931	0					
ANR	4252839	Identifier	subsys		4250931	0					
ANR	4252840	Argument	"""startd"""		4250931	1					
ANR	4252841	PrimaryExpression	"""startd"""		4250931	0					
ANR	4252842	OrExpression	"( real_cmd == DAEMON_OFF && subsys && ! strcmp ( subsys , ""schedd"" ) ) || ( real_cmd == DC_OFF_GRACEFUL ) || ( real_cmd == RESTART )"		4250931	1		||			
ANR	4252843	AndExpression	"real_cmd == DAEMON_OFF && subsys && ! strcmp ( subsys , ""schedd"" )"		4250931	0		&&			
ANR	4252844	EqualityExpression	real_cmd == DAEMON_OFF		4250931	0		==			
ANR	4252845	Identifier	real_cmd		4250931	0					
ANR	4252846	Identifier	DAEMON_OFF		4250931	1					
ANR	4252847	AndExpression	"subsys && ! strcmp ( subsys , ""schedd"" )"		4250931	1		&&			
ANR	4252848	Identifier	subsys		4250931	0					
ANR	4252849	UnaryOperationExpression	"! strcmp ( subsys , ""schedd"" )"		4250931	1					
ANR	4252850	UnaryOperator	!		4250931	0					
ANR	4252851	CallExpression	"strcmp ( subsys , ""schedd"" )"		4250931	1					
ANR	4252852	Callee	strcmp		4250931	0					
ANR	4252853	Identifier	strcmp		4250931	0					
ANR	4252854	ArgumentList	subsys		4250931	1					
ANR	4252855	Argument	subsys		4250931	0					
ANR	4252856	Identifier	subsys		4250931	0					
ANR	4252857	Argument	"""schedd"""		4250931	1					
ANR	4252858	PrimaryExpression	"""schedd"""		4250931	0					
ANR	4252859	OrExpression	( real_cmd == DC_OFF_GRACEFUL ) || ( real_cmd == RESTART )		4250931	1		||			
ANR	4252860	EqualityExpression	real_cmd == DC_OFF_GRACEFUL		4250931	0		==			
ANR	4252861	Identifier	real_cmd		4250931	0					
ANR	4252862	Identifier	DC_OFF_GRACEFUL		4250931	1					
ANR	4252863	EqualityExpression	real_cmd == RESTART		4250931	1		==			
ANR	4252864	Identifier	real_cmd		4250931	0					
ANR	4252865	Identifier	RESTART		4250931	1					
ANR	4252866	CompoundStatement		486:3:12524:12575	4250931	1					
ANR	4252867	IdentifierDeclStatement	daemon_t orig_real_dt = real_dt ;	805:3:22080:22111	4250931	0	True				
ANR	4252868	IdentifierDecl	orig_real_dt = real_dt		4250931	0					
ANR	4252869	IdentifierDeclType	daemon_t		4250931	0					
ANR	4252870	Identifier	orig_real_dt		4250931	1					
ANR	4252871	AssignmentExpression	orig_real_dt = real_dt		4250931	2		=			
ANR	4252872	Identifier	real_dt		4250931	0					
ANR	4252873	Identifier	real_dt		4250931	1					
ANR	4252874	IdentifierDeclStatement	int orig_real_cmd = real_cmd ;	806:3:22116:22144	4250931	1	True				
ANR	4252875	IdentifierDecl	orig_real_cmd = real_cmd		4250931	0					
ANR	4252876	IdentifierDeclType	int		4250931	0					
ANR	4252877	Identifier	orig_real_cmd		4250931	1					
ANR	4252878	AssignmentExpression	orig_real_cmd = real_cmd		4250931	2		=			
ANR	4252879	Identifier	real_cmd		4250931	0					
ANR	4252880	Identifier	real_cmd		4250931	1					
ANR	4252881	IdentifierDeclStatement	int orig_cmd = cmd ;	807:3:22149:22167	4250931	2	True				
ANR	4252882	IdentifierDecl	orig_cmd = cmd		4250931	0					
ANR	4252883	IdentifierDeclType	int		4250931	0					
ANR	4252884	Identifier	orig_cmd		4250931	1					
ANR	4252885	AssignmentExpression	orig_cmd = cmd		4250931	2		=			
ANR	4252886	Identifier	cmd		4250931	0					
ANR	4252887	Identifier	cmd		4250931	1					
ANR	4252888	IdentifierDeclStatement	bool orig_IgnoreMissingDaemon = IgnoreMissingDaemon ;	808:3:22172:22223	4250931	3	True				
ANR	4252889	IdentifierDecl	orig_IgnoreMissingDaemon = IgnoreMissingDaemon		4250931	0					
ANR	4252890	IdentifierDeclType	bool		4250931	0					
ANR	4252891	Identifier	orig_IgnoreMissingDaemon		4250931	1					
ANR	4252892	AssignmentExpression	orig_IgnoreMissingDaemon = IgnoreMissingDaemon		4250931	2		=			
ANR	4252893	Identifier	IgnoreMissingDaemon		4250931	0					
ANR	4252894	Identifier	IgnoreMissingDaemon		4250931	1					
ANR	4252895	ExpressionStatement	cmd = real_cmd = DC_SET_PEACEFUL_SHUTDOWN	810:3:22229:22270	4250931	4	True				
ANR	4252896	AssignmentExpression	cmd = real_cmd = DC_SET_PEACEFUL_SHUTDOWN		4250931	0		=			
ANR	4252897	Identifier	cmd		4250931	0					
ANR	4252898	AssignmentExpression	real_cmd = DC_SET_PEACEFUL_SHUTDOWN		4250931	1		=			
ANR	4252899	Identifier	real_cmd		4250931	0					
ANR	4252900	Identifier	DC_SET_PEACEFUL_SHUTDOWN		4250931	1					
ANR	4252901	ExpressionStatement	IgnoreMissingDaemon = true	816:3:22531:22557	4250931	5	True				
ANR	4252902	AssignmentExpression	IgnoreMissingDaemon = true		4250931	0		=			
ANR	4252903	Identifier	IgnoreMissingDaemon		4250931	0					
ANR	4252904	Identifier	true		4250931	1					
ANR	4252905	IfStatement	"if ( ! subsys || ! strcmp ( subsys , ""startd"" ) )"		4250931	6					
ANR	4252906	Condition	"! subsys || ! strcmp ( subsys , ""startd"" )"	818:7:22567:22601	4250931	0	True				
ANR	4252907	OrExpression	"! subsys || ! strcmp ( subsys , ""startd"" )"		4250931	0		||			
ANR	4252908	UnaryOperationExpression	! subsys		4250931	0					
ANR	4252909	UnaryOperator	!		4250931	0					
ANR	4252910	Identifier	subsys		4250931	1					
ANR	4252911	UnaryOperationExpression	"! strcmp ( subsys , ""startd"" )"		4250931	1					
ANR	4252912	UnaryOperator	!		4250931	0					
ANR	4252913	CallExpression	"strcmp ( subsys , ""startd"" )"		4250931	1					
ANR	4252914	Callee	strcmp		4250931	0					
ANR	4252915	Identifier	strcmp		4250931	0					
ANR	4252916	ArgumentList	subsys		4250931	1					
ANR	4252917	Argument	subsys		4250931	0					
ANR	4252918	Identifier	subsys		4250931	0					
ANR	4252919	Argument	"""startd"""		4250931	1					
ANR	4252920	PrimaryExpression	"""startd"""		4250931	0					
ANR	4252921	CompoundStatement		496:45:12957:12957	4250931	1					
ANR	4252922	ExpressionStatement	real_dt = DT_STARTD	819:4:22611:22630	4250931	0	True				
ANR	4252923	AssignmentExpression	real_dt = DT_STARTD		4250931	0		=			
ANR	4252924	Identifier	real_dt		4250931	0					
ANR	4252925	Identifier	DT_STARTD		4250931	1					
ANR	4252926	ExpressionStatement	"rc = doCommands ( argc , argv , MyName )"	820:4:22636:22669	4250931	1	True				
ANR	4252927	AssignmentExpression	"rc = doCommands ( argc , argv , MyName )"		4250931	0		=			
ANR	4252928	Identifier	rc		4250931	0					
ANR	4252929	CallExpression	"doCommands ( argc , argv , MyName )"		4250931	1					
ANR	4252930	Callee	doCommands		4250931	0					
ANR	4252931	Identifier	doCommands		4250931	0					
ANR	4252932	ArgumentList	argc		4250931	1					
ANR	4252933	Argument	argc		4250931	0					
ANR	4252934	Identifier	argc		4250931	0					
ANR	4252935	Argument	argv		4250931	1					
ANR	4252936	Identifier	argv		4250931	0					
ANR	4252937	Argument	MyName		4250931	2					
ANR	4252938	Identifier	MyName		4250931	0					
ANR	4252939	IfStatement	if ( rc )		4250931	2					
ANR	4252940	Condition	rc	821:7:22678:22679	4250931	0	True				
ANR	4252941	Identifier	rc		4250931	0					
ANR	4252942	ReturnStatement	return rc ;	821:11:22682:22691	4250931	1	True				
ANR	4252943	Identifier	rc		4250931	0					
ANR	4252944	IfStatement	"if ( ! subsys || ! strcmp ( subsys , ""schedd"" ) )"		4250931	7					
ANR	4252945	Condition	"! subsys || ! strcmp ( subsys , ""schedd"" )"	823:7:22705:22739	4250931	0	True				
ANR	4252946	OrExpression	"! subsys || ! strcmp ( subsys , ""schedd"" )"		4250931	0		||			
ANR	4252947	UnaryOperationExpression	! subsys		4250931	0					
ANR	4252948	UnaryOperator	!		4250931	0					
ANR	4252949	Identifier	subsys		4250931	1					
ANR	4252950	UnaryOperationExpression	"! strcmp ( subsys , ""schedd"" )"		4250931	1					
ANR	4252951	UnaryOperator	!		4250931	0					
ANR	4252952	CallExpression	"strcmp ( subsys , ""schedd"" )"		4250931	1					
ANR	4252953	Callee	strcmp		4250931	0					
ANR	4252954	Identifier	strcmp		4250931	0					
ANR	4252955	ArgumentList	subsys		4250931	1					
ANR	4252956	Argument	subsys		4250931	0					
ANR	4252957	Identifier	subsys		4250931	0					
ANR	4252958	Argument	"""schedd"""		4250931	1					
ANR	4252959	PrimaryExpression	"""schedd"""		4250931	0					
ANR	4252960	CompoundStatement		501:45:13095:13095	4250931	1					
ANR	4252961	ExpressionStatement	real_dt = DT_SCHEDD	824:4:22749:22768	4250931	0	True				
ANR	4252962	AssignmentExpression	real_dt = DT_SCHEDD		4250931	0		=			
ANR	4252963	Identifier	real_dt		4250931	0					
ANR	4252964	Identifier	DT_SCHEDD		4250931	1					
ANR	4252965	ExpressionStatement	"rc = doCommands ( argc , argv , MyName )"	825:4:22774:22807	4250931	1	True				
ANR	4252966	AssignmentExpression	"rc = doCommands ( argc , argv , MyName )"		4250931	0		=			
ANR	4252967	Identifier	rc		4250931	0					
ANR	4252968	CallExpression	"doCommands ( argc , argv , MyName )"		4250931	1					
ANR	4252969	Callee	doCommands		4250931	0					
ANR	4252970	Identifier	doCommands		4250931	0					
ANR	4252971	ArgumentList	argc		4250931	1					
ANR	4252972	Argument	argc		4250931	0					
ANR	4252973	Identifier	argc		4250931	0					
ANR	4252974	Argument	argv		4250931	1					
ANR	4252975	Identifier	argv		4250931	0					
ANR	4252976	Argument	MyName		4250931	2					
ANR	4252977	Identifier	MyName		4250931	0					
ANR	4252978	IfStatement	if ( rc )		4250931	2					
ANR	4252979	Condition	rc	826:7:22816:22817	4250931	0	True				
ANR	4252980	Identifier	rc		4250931	0					
ANR	4252981	ReturnStatement	return rc ;	826:11:22820:22829	4250931	1	True				
ANR	4252982	Identifier	rc		4250931	0					
ANR	4252983	ExpressionStatement	real_dt = orig_real_dt	830:3:22863:22885	4250931	8	True				
ANR	4252984	AssignmentExpression	real_dt = orig_real_dt		4250931	0		=			
ANR	4252985	Identifier	real_dt		4250931	0					
ANR	4252986	Identifier	orig_real_dt		4250931	1					
ANR	4252987	ExpressionStatement	real_cmd = orig_real_cmd	831:3:22890:22914	4250931	9	True				
ANR	4252988	AssignmentExpression	real_cmd = orig_real_cmd		4250931	0		=			
ANR	4252989	Identifier	real_cmd		4250931	0					
ANR	4252990	Identifier	orig_real_cmd		4250931	1					
ANR	4252991	ExpressionStatement	cmd = orig_cmd	832:3:22919:22933	4250931	10	True				
ANR	4252992	AssignmentExpression	cmd = orig_cmd		4250931	0		=			
ANR	4252993	Identifier	cmd		4250931	0					
ANR	4252994	Identifier	orig_cmd		4250931	1					
ANR	4252995	ExpressionStatement	IgnoreMissingDaemon = orig_IgnoreMissingDaemon	833:3:22938:22984	4250931	11	True				
ANR	4252996	AssignmentExpression	IgnoreMissingDaemon = orig_IgnoreMissingDaemon		4250931	0		=			
ANR	4252997	Identifier	IgnoreMissingDaemon		4250931	0					
ANR	4252998	Identifier	orig_IgnoreMissingDaemon		4250931	1					
ANR	4252999	ReturnStatement	"return doCommands ( argc , argv , MyName ) ;"	837:1:22995:23030	4250931	19	True				
ANR	4253000	CallExpression	"doCommands ( argc , argv , MyName )"		4250931	0					
ANR	4253001	Callee	doCommands		4250931	0					
ANR	4253002	Identifier	doCommands		4250931	0					
ANR	4253003	ArgumentList	argc		4250931	1					
ANR	4253004	Argument	argc		4250931	0					
ANR	4253005	Identifier	argc		4250931	0					
ANR	4253006	Argument	argv		4250931	1					
ANR	4253007	Identifier	argv		4250931	0					
ANR	4253008	Argument	MyName		4250931	2					
ANR	4253009	Identifier	MyName		4250931	0					
ANR	4253010	ReturnType	int		4250931	1					
ANR	4253011	Identifier	main		4250931	2					
ANR	4253012	ParameterList	"int argc , char * argv [ ]"		4250931	3					
ANR	4253013	Parameter	int argc	322:6:9622:9629	4250931	0	True				
ANR	4253014	ParameterType	int		4250931	0					
ANR	4253015	Identifier	argc		4250931	1					
ANR	4253016	Parameter	char * argv [ ]	322:16:9632:9643	4250931	1	True				
ANR	4253017	ParameterType	char * [ ]		4250931	0					
ANR	4253018	Identifier	argv		4250931	1					
ANR	4253019	CFGEntryNode	ENTRY		4250931		True				
ANR	4253020	CFGExitNode	EXIT		4250931		True				
ANR	4253021	Symbol	SQUAWK		4250931						
ANR	4253022	Symbol	DT_GENERIC		4250931						
ANR	4253023	Symbol	IgnoreMissingDaemon		4250931						
ANR	4253024	Symbol	strchr		4250931						
ANR	4253025	Symbol	* argv		4250931						
ANR	4253026	Symbol	p_funcs		4250931						
ANR	4253027	Symbol	DAEMON_OFF		4250931						
ANR	4253028	Symbol	PCKPT_JOB		4250931						
ANR	4253029	Symbol	pool -> addr		4250931						
ANR	4253030	Symbol	exec_program		4250931						
ANR	4253031	Symbol	dt		4250931						
ANR	4253032	Symbol	strlen		4250931						
ANR	4253033	Symbol	orig_cmd		4250931						
ANR	4253034	Symbol	tmp		4250931						
ANR	4253035	Symbol	myDistro		4250931						
ANR	4253036	Symbol	* * argv		4250931						
ANR	4253037	Symbol	cmd_str		4250931						
ANR	4253038	Symbol	SIGPIPE		4250931						
ANR	4253039	Symbol	pool -> error		4250931						
ANR	4253040	Symbol	strcmp		4250931						
ANR	4253041	Symbol	all		4250931						
ANR	4253042	Symbol	NULL		4250931						
ANR	4253043	Symbol	get_param_functions		4250931						
ANR	4253044	Symbol	pool		4250931						
ANR	4253045	Symbol	SIG_IGN		4250931						
ANR	4253046	Symbol	DT_COLLECTOR		4250931						
ANR	4253047	Symbol	DAEMONS_OFF		4250931						
ANR	4253048	Symbol	stderr		4250931						
ANR	4253049	Symbol	takes_subsys		4250931						
ANR	4253050	Symbol	orig_real_dt		4250931						
ANR	4253051	Symbol	VACATE_CLAIM		4250931						
ANR	4253052	Symbol	stringToDaemonType		4250931						
ANR	4253053	Symbol	rc		4250931						
ANR	4253054	Symbol	DT_STARTD		4250931						
ANR	4253055	Symbol	SET_SHUTDOWN_PROGRAM		4250931						
ANR	4253056	Symbol	size		4250931						
ANR	4253057	Symbol	true		4250931						
ANR	4253058	Symbol	real_dt		4250931						
ANR	4253059	Symbol	DT_NEGOTIATOR		4250931						
ANR	4253060	Symbol	DT_KBDD		4250931						
ANR	4253061	Symbol	cmd		4250931						
ANR	4253062	Symbol	orig_real_cmd		4250931						
ANR	4253063	Symbol	* tmp		4250931						
ANR	4253064	Symbol	DC_OFF_GRACEFUL		4250931						
ANR	4253065	Symbol	MyName		4250931						
ANR	4253066	Symbol	daemonString		4250931						
ANR	4253067	Symbol	strncmp_auto		4250931						
ANR	4253068	Symbol	DT_ANY		4250931						
ANR	4253069	Symbol	peaceful_shutdown		4250931						
ANR	4253070	Symbol	DC_SET_PEACEFUL_SHUTDOWN		4250931						
ANR	4253071	Symbol	argv		4250931						
ANR	4253072	Symbol	RESCHEDULE		4250931						
ANR	4253073	Symbol	orig_IgnoreMissingDaemon		4250931						
ANR	4253074	Symbol	DT_MASTER		4250931						
ANR	4253075	Symbol	subsys		4250931						
ANR	4253076	Symbol	RESTART		4250931						
ANR	4253077	Symbol	DT_NONE		4250931						
ANR	4253078	Symbol	real_cmd		4250931						
ANR	4253079	Symbol	DAEMONS_ON		4250931						
ANR	4253080	Symbol	argc		4250931						
ANR	4253081	Symbol	atoi		4250931						
ANR	4253082	Symbol	malloc		4250931						
ANR	4253083	Symbol	DT_QUILL		4250931						
ANR	4253084	Symbol	Termlog		4250931						
ANR	4253085	Symbol	DIR_DELIM_CHAR		4250931						
ANR	4253086	Symbol	DT_SCHEDD		4250931						
ANR	4253087	Symbol	false		4250931						
ANR	4253088	Symbol	cmd_set		4250931						
ANR	4253089	Symbol	* * tmp		4250931						
ANR	4253090	Symbol	* pool		4250931						
ANR	4253091	Symbol	fast		4250931						
ANR	4253092	Symbol	strrchr		4250931						
ANR	4253093	Symbol	DC_RECONFIG_FULL		4250931						
ANR	4253094	Symbol	constraint		4250931						
ANR	4253095	Symbol	subsys_arg		4250931						
ANR	4253096	Symbol	doCommands		4250931						
ANR	4253097	DeclStmt									
ANR	4253098	Decl							StringList	StringList	names
ANR	4253099	DeclStmt									
ANR	4253100	Decl							StringList	StringList	addrs
ANR	4253101	DeclStmt									
ANR	4253102	Decl							DaemonList	DaemonList	daemons
ANR	4253103	DeclStmt									
ANR	4253104	Decl							char	char *	daemonname
ANR	4253105	DeclStmt									
ANR	4253106	Decl							bool	bool	found_one
ANR	4253107	DeclStmt									
ANR	4253108	Decl							Daemon	"Daemon ( real_dt , NULL )"	local_d
ANR	4253109	DeclStmt									
ANR	4253110	Decl							Daemon	Daemon *	d
ANR	4253111	DeclStmt									
ANR	4253112	Decl							char	char *	addr
ANR	4253113	Function	computeRealAction	1009:0:27845:29722							
ANR	4253114	FunctionDef	computeRealAction ()		4253113	0					
ANR	4253115	CompoundStatement		1011:0:27876:29722	4253113	0					
ANR	4253116	ExpressionStatement	real_cmd = - 1	1012:1:27879:27892	4253113	0	True				
ANR	4253117	AssignmentExpression	real_cmd = - 1		4253113	0		=			
ANR	4253118	Identifier	real_cmd		4253113	0					
ANR	4253119	UnaryOperationExpression	- 1		4253113	1					
ANR	4253120	UnaryOperator	-		4253113	0					
ANR	4253121	PrimaryExpression	1		4253113	1					
ANR	4253122	SwitchStatement	switch ( cmd )		4253113	1					
ANR	4253123	Condition	cmd	1013:9:27903:27905	4253113	0	True				
ANR	4253124	Identifier	cmd		4253113	0					
ANR	4253125	CompoundStatement		3:15:32:32	4253113	1					
ANR	4253126	Label	case DC_RECONFIG_FULL :	1015:1:27913:27934	4253113	0	True				
ANR	4253127	Identifier	DC_RECONFIG_FULL		4253113	0					
ANR	4253128	BreakStatement	break ;	1017:2:27953:27958	4253113	1	True				
ANR	4253129	Label	case RESTART :	1019:1:27962:27974	4253113	2	True				
ANR	4253130	Identifier	RESTART		4253113	0					
ANR	4253131	IfStatement	if ( subsys && dt != DT_MASTER )		4253113	3					
ANR	4253132	Condition	subsys && dt != DT_MASTER	1020:6:27982:28006	4253113	0	True				
ANR	4253133	AndExpression	subsys && dt != DT_MASTER		4253113	0		&&			
ANR	4253134	Identifier	subsys		4253113	0					
ANR	4253135	EqualityExpression	dt != DT_MASTER		4253113	1		!=			
ANR	4253136	Identifier	dt		4253113	0					
ANR	4253137	Identifier	DT_MASTER		4253113	1					
ANR	4253138	CompoundStatement		10:34:133:133	4253113	1					
ANR	4253139	ExpressionStatement	real_cmd = DC_OFF_GRACEFUL	1027:3:28358:28384	4253113	0	True				
ANR	4253140	AssignmentExpression	real_cmd = DC_OFF_GRACEFUL		4253113	0		=			
ANR	4253141	Identifier	real_cmd		4253113	0					
ANR	4253142	Identifier	DC_OFF_GRACEFUL		4253113	1					
ANR	4253143	BreakStatement	break ;	1029:2:28392:28397	4253113	4	True				
ANR	4253144	Label	case DAEMONS_OFF :	1031:1:28401:28417	4253113	5	True				
ANR	4253145	Identifier	DAEMONS_OFF		4253113	0					
ANR	4253146	IfStatement	if ( subsys )		4253113	6					
ANR	4253147	Condition	subsys	1032:6:28425:28430	4253113	0	True				
ANR	4253148	Identifier	subsys		4253113	0					
ANR	4253149	CompoundStatement		22:15:557:557	4253113	1					
ANR	4253150	IfStatement	if ( dt == DT_MASTER )		4253113	0					
ANR	4253151	Condition	dt == DT_MASTER	1037:7:28651:28665	4253113	0	True				
ANR	4253152	EqualityExpression	dt == DT_MASTER		4253113	0		==			
ANR	4253153	Identifier	dt		4253113	0					
ANR	4253154	Identifier	DT_MASTER		4253113	1					
ANR	4253155	CompoundStatement		27:25:792:792	4253113	1					
ANR	4253156	ExpressionStatement	real_cmd = DC_OFF_GRACEFUL	1038:4:28675:28701	4253113	0	True				
ANR	4253157	AssignmentExpression	real_cmd = DC_OFF_GRACEFUL		4253113	0		=			
ANR	4253158	Identifier	real_cmd		4253113	0					
ANR	4253159	Identifier	DC_OFF_GRACEFUL		4253113	1					
ANR	4253160	ElseStatement	else		4253113	0					
ANR	4253161	CompoundStatement		29:10:836:836	4253113	0					
ANR	4253162	ExpressionStatement	real_cmd = DAEMON_OFF	1040:4:28719:28740	4253113	0	True				
ANR	4253163	AssignmentExpression	real_cmd = DAEMON_OFF		4253113	0		=			
ANR	4253164	Identifier	real_cmd		4253113	0					
ANR	4253165	Identifier	DAEMON_OFF		4253113	1					
ANR	4253166	ExpressionStatement	real_dt = DT_MASTER	1042:3:28750:28769	4253113	1	True				
ANR	4253167	AssignmentExpression	real_dt = DT_MASTER		4253113	0		=			
ANR	4253168	Identifier	real_dt		4253113	0					
ANR	4253169	Identifier	DT_MASTER		4253113	1					
ANR	4253170	BreakStatement	break ;	1044:2:28777:28782	4253113	7	True				
ANR	4253171	Label	case DAEMONS_ON :	1046:1:28786:28801	4253113	8	True				
ANR	4253172	Identifier	DAEMONS_ON		4253113	0					
ANR	4253173	ExpressionStatement	real_dt = DT_MASTER	1049:2:28888:28907	4253113	9	True				
ANR	4253174	AssignmentExpression	real_dt = DT_MASTER		4253113	0		=			
ANR	4253175	Identifier	real_dt		4253113	0					
ANR	4253176	Identifier	DT_MASTER		4253113	1					
ANR	4253177	IfStatement	if ( subsys && dt != DT_MASTER )		4253113	10					
ANR	4253178	Condition	subsys && dt != DT_MASTER	1050:6:28915:28939	4253113	0	True				
ANR	4253179	AndExpression	subsys && dt != DT_MASTER		4253113	0		&&			
ANR	4253180	Identifier	subsys		4253113	0					
ANR	4253181	EqualityExpression	dt != DT_MASTER		4253113	1		!=			
ANR	4253182	Identifier	dt		4253113	0					
ANR	4253183	Identifier	DT_MASTER		4253113	1					
ANR	4253184	CompoundStatement		40:34:1066:1066	4253113	1					
ANR	4253185	ExpressionStatement	real_cmd = DAEMON_ON	1054:3:29086:29106	4253113	0	True				
ANR	4253186	AssignmentExpression	real_cmd = DAEMON_ON		4253113	0		=			
ANR	4253187	Identifier	real_cmd		4253113	0					
ANR	4253188	Identifier	DAEMON_ON		4253113	1					
ANR	4253189	BreakStatement	break ;	1056:2:29114:29119	4253113	11	True				
ANR	4253190	Label	case RESCHEDULE :	1058:1:29123:29138	4253113	12	True				
ANR	4253191	Identifier	RESCHEDULE		4253113	0					
ANR	4253192	ExpressionStatement	dt = real_dt = DT_SCHEDD	1059:2:29142:29166	4253113	13	True				
ANR	4253193	AssignmentExpression	dt = real_dt = DT_SCHEDD		4253113	0		=			
ANR	4253194	Identifier	dt		4253113	0					
ANR	4253195	AssignmentExpression	real_dt = DT_SCHEDD		4253113	1		=			
ANR	4253196	Identifier	real_dt		4253113	0					
ANR	4253197	Identifier	DT_SCHEDD		4253113	1					
ANR	4253198	BreakStatement	break ;	1060:2:29170:29175	4253113	14	True				
ANR	4253199	Label	case VACATE_CLAIM :	1062:1:29179:29196	4253113	15	True				
ANR	4253200	Identifier	VACATE_CLAIM		4253113	0					
ANR	4253201	Label	case PCKPT_JOB :	1063:1:29199:29213	4253113	16	True				
ANR	4253202	Identifier	PCKPT_JOB		4253113	0					
ANR	4253203	ExpressionStatement	dt = real_dt = DT_STARTD	1064:2:29217:29241	4253113	17	True				
ANR	4253204	AssignmentExpression	dt = real_dt = DT_STARTD		4253113	0		=			
ANR	4253205	Identifier	dt		4253113	0					
ANR	4253206	AssignmentExpression	real_dt = DT_STARTD		4253113	1		=			
ANR	4253207	Identifier	real_dt		4253113	0					
ANR	4253208	Identifier	DT_STARTD		4253113	1					
ANR	4253209	BreakStatement	break ;	1065:2:29245:29250	4253113	18	True				
ANR	4253210	Label	case SET_SHUTDOWN_PROGRAM :	1067:1:29254:29279	4253113	19	True				
ANR	4253211	Identifier	SET_SHUTDOWN_PROGRAM		4253113	0					
ANR	4253212	ExpressionStatement	real_dt = DT_MASTER	1068:2:29283:29302	4253113	20	True				
ANR	4253213	AssignmentExpression	real_dt = DT_MASTER		4253113	0		=			
ANR	4253214	Identifier	real_dt		4253113	0					
ANR	4253215	Identifier	DT_MASTER		4253113	1					
ANR	4253216	BreakStatement	break ;	1069:2:29306:29311	4253113	21	True				
ANR	4253217	Label	case SQUAWK :	1071:1:29315:29326	4253113	22	True				
ANR	4253218	Identifier	SQUAWK		4253113	0					
ANR	4253219	BreakStatement	break ;	1072:2:29330:29335	4253113	23	True				
ANR	4253220	IfStatement	if ( real_cmd < 0 )		4253113	2					
ANR	4253221	Condition	real_cmd < 0	1075:5:29346:29357	4253113	0	True				
ANR	4253222	RelationalExpression	real_cmd < 0		4253113	0		<			
ANR	4253223	Identifier	real_cmd		4253113	0					
ANR	4253224	PrimaryExpression	0		4253113	1					
ANR	4253225	CompoundStatement		65:20:1484:1484	4253113	1					
ANR	4253226	ExpressionStatement	real_cmd = cmd	1078:2:29461:29475	4253113	0	True				
ANR	4253227	AssignmentExpression	real_cmd = cmd		4253113	0		=			
ANR	4253228	Identifier	real_cmd		4253113	0					
ANR	4253229	Identifier	cmd		4253113	1					
ANR	4253230	IfStatement	if ( real_dt == DT_NONE )		4253113	3					
ANR	4253231	Condition	real_dt == DT_NONE	1084:5:29627:29644	4253113	0	True				
ANR	4253232	EqualityExpression	real_dt == DT_NONE		4253113	0		==			
ANR	4253233	Identifier	real_dt		4253113	0					
ANR	4253234	Identifier	DT_NONE		4253113	1					
ANR	4253235	CompoundStatement		74:26:1771:1771	4253113	1					
ANR	4253236	IfStatement	if ( dt )		4253113	0					
ANR	4253237	Condition	dt	1085:6:29656:29657	4253113	0	True				
ANR	4253238	Identifier	dt		4253113	0					
ANR	4253239	CompoundStatement		75:11:1784:1784	4253113	1					
ANR	4253240	ExpressionStatement	real_dt = dt	1086:3:29666:29678	4253113	0	True				
ANR	4253241	AssignmentExpression	real_dt = dt		4253113	0		=			
ANR	4253242	Identifier	real_dt		4253113	0					
ANR	4253243	Identifier	dt		4253113	1					
ANR	4253244	ElseStatement	else		4253113	0					
ANR	4253245	CompoundStatement		77:9:1812:1812	4253113	0					
ANR	4253246	ExpressionStatement	real_dt = DT_MASTER	1088:3:29694:29713	4253113	0	True				
ANR	4253247	AssignmentExpression	real_dt = DT_MASTER		4253113	0		=			
ANR	4253248	Identifier	real_dt		4253113	0					
ANR	4253249	Identifier	DT_MASTER		4253113	1					
ANR	4253250	ReturnType	void		4253113	1					
ANR	4253251	Identifier	computeRealAction		4253113	2					
ANR	4253252	ParameterList			4253113	3					
ANR	4253253	CFGEntryNode	ENTRY		4253113		True				
ANR	4253254	CFGExitNode	EXIT		4253113		True				
ANR	4253255	Symbol	dt		4253113						
ANR	4253256	Symbol	subsys		4253113						
ANR	4253257	Symbol	DT_MASTER		4253113						
ANR	4253258	Symbol	DAEMON_ON		4253113						
ANR	4253259	Symbol	DT_STARTD		4253113						
ANR	4253260	Symbol	DC_OFF_GRACEFUL		4253113						
ANR	4253261	Symbol	real_dt		4253113						
ANR	4253262	Symbol	DT_SCHEDD		4253113						
ANR	4253263	Symbol	real_cmd		4253113						
ANR	4253264	Symbol	DT_NONE		4253113						
ANR	4253265	Symbol	cmd		4253113						
ANR	4253266	Symbol	DAEMON_OFF		4253113						
ANR	4253267	Function	resolveNames	1094:0:29726:35917							
ANR	4253268	FunctionDef	"resolveNames (DaemonList * daemon_list , StringList * name_list)"		4253267	0					
ANR	4253269	CompoundStatement		1096:0:29794:35917	4253267	0					
ANR	4253270	IdentifierDeclStatement	Daemon * d = NULL ;	1097:1:29797:29813	4253267	0	True				
ANR	4253271	IdentifierDecl	* d = NULL		4253267	0					
ANR	4253272	IdentifierDeclType	Daemon *		4253267	0					
ANR	4253273	Identifier	d		4253267	1					
ANR	4253274	AssignmentExpression	* d = NULL		4253267	2		=			
ANR	4253275	Identifier	NULL		4253267	0					
ANR	4253276	Identifier	NULL		4253267	1					
ANR	4253277	IdentifierDeclStatement	char * name = NULL ;	1098:1:29816:29833	4253267	1	True				
ANR	4253278	IdentifierDecl	* name = NULL		4253267	0					
ANR	4253279	IdentifierDeclType	char *		4253267	0					
ANR	4253280	Identifier	name		4253267	1					
ANR	4253281	AssignmentExpression	* name = NULL		4253267	2		=			
ANR	4253282	Identifier	NULL		4253267	0					
ANR	4253283	Identifier	NULL		4253267	1					
ANR	4253284	IdentifierDeclStatement	char * tmp = NULL ;	1099:1:29836:29852	4253267	2	True				
ANR	4253285	IdentifierDecl	* tmp = NULL		4253267	0					
ANR	4253286	IdentifierDeclType	char *		4253267	0					
ANR	4253287	Identifier	tmp		4253267	1					
ANR	4253288	AssignmentExpression	* tmp = NULL		4253267	2		=			
ANR	4253289	Identifier	NULL		4253267	0					
ANR	4253290	Identifier	NULL		4253267	1					
ANR	4253291	IdentifierDeclStatement	const char * host = NULL ;	1100:1:29855:29878	4253267	3	True				
ANR	4253292	IdentifierDecl	* host = NULL		4253267	0					
ANR	4253293	IdentifierDeclType	const char *		4253267	0					
ANR	4253294	Identifier	host		4253267	1					
ANR	4253295	AssignmentExpression	* host = NULL		4253267	2		=			
ANR	4253296	Identifier	NULL		4253267	0					
ANR	4253297	Identifier	NULL		4253267	1					
ANR	4253298	IdentifierDeclStatement	bool had_error = false ;	1101:1:29881:29903	4253267	4	True				
ANR	4253299	IdentifierDecl	had_error = false		4253267	0					
ANR	4253300	IdentifierDeclType	bool		4253267	0					
ANR	4253301	Identifier	had_error		4253267	1					
ANR	4253302	AssignmentExpression	had_error = false		4253267	2		=			
ANR	4253303	Identifier	false		4253267	0					
ANR	4253304	Identifier	false		4253267	1					
ANR	4253305	IfStatement	if ( ! daemon_list )		4253267	5					
ANR	4253306	Condition	! daemon_list	1103:5:29911:29923	4253267	0	True				
ANR	4253307	UnaryOperationExpression	! daemon_list		4253267	0					
ANR	4253308	UnaryOperator	!		4253267	0					
ANR	4253309	Identifier	daemon_list		4253267	1					
ANR	4253310	CompoundStatement		8:21:132:132	4253267	1					
ANR	4253311	ExpressionStatement	"EXCEPT ( ""resolveNames() called with NULL daemon_list"" )"	1104:2:29931:29986	4253267	0	True				
ANR	4253312	CallExpression	"EXCEPT ( ""resolveNames() called with NULL daemon_list"" )"		4253267	0					
ANR	4253313	Callee	EXCEPT		4253267	0					
ANR	4253314	Identifier	EXCEPT		4253267	0					
ANR	4253315	ArgumentList	"""resolveNames() called with NULL daemon_list"""		4253267	1					
ANR	4253316	Argument	"""resolveNames() called with NULL daemon_list"""		4253267	0					
ANR	4253317	PrimaryExpression	"""resolveNames() called with NULL daemon_list"""		4253267	0					
ANR	4253318	IfStatement	if ( name_list && name_list -> isEmpty ( ) )		4253267	6					
ANR	4253319	Condition	name_list && name_list -> isEmpty ( )	1109:5:30159:30191	4253267	0	True				
ANR	4253320	AndExpression	name_list && name_list -> isEmpty ( )		4253267	0		&&			
ANR	4253321	Identifier	name_list		4253267	0					
ANR	4253322	CallExpression	name_list -> isEmpty ( )		4253267	1					
ANR	4253323	Callee	name_list -> isEmpty		4253267	0					
ANR	4253324	PtrMemberAccess	name_list -> isEmpty		4253267	0					
ANR	4253325	Identifier	name_list		4253267	0					
ANR	4253326	Identifier	isEmpty		4253267	1					
ANR	4253327	ArgumentList			4253267	1					
ANR	4253328	CompoundStatement		14:41:400:400	4253267	1					
ANR	4253329	ReturnStatement	return true ;	1110:2:30199:30210	4253267	0	True				
ANR	4253330	Identifier	true		4253267	0					
ANR	4253331	IdentifierDeclStatement	AdTypes adtype = MASTER_AD ;	1113:1:30217:30243	4253267	7	True				
ANR	4253332	IdentifierDecl	adtype = MASTER_AD		4253267	0					
ANR	4253333	IdentifierDeclType	AdTypes		4253267	0					
ANR	4253334	Identifier	adtype		4253267	1					
ANR	4253335	AssignmentExpression	adtype = MASTER_AD		4253267	2		=			
ANR	4253336	Identifier	MASTER_AD		4253267	0					
ANR	4253337	Identifier	MASTER_AD		4253267	1					
ANR	4253338	SwitchStatement	switch ( real_dt )		4253267	8					
ANR	4253339	Condition	real_dt	1114:9:30254:30260	4253267	0	True				
ANR	4253340	Identifier	real_dt		4253267	0					
ANR	4253341	CompoundStatement		19:19:469:469	4253267	1					
ANR	4253342	Label	case DT_MASTER :	1115:1:30267:30281	4253267	0	True				
ANR	4253343	Identifier	DT_MASTER		4253267	0					
ANR	4253344	ExpressionStatement	adtype = MASTER_AD	1116:2:30285:30303	4253267	1	True				
ANR	4253345	AssignmentExpression	adtype = MASTER_AD		4253267	0		=			
ANR	4253346	Identifier	adtype		4253267	0					
ANR	4253347	Identifier	MASTER_AD		4253267	1					
ANR	4253348	BreakStatement	break ;	1117:2:30307:30312	4253267	2	True				
ANR	4253349	Label	case DT_STARTD :	1118:1:30315:30329	4253267	3	True				
ANR	4253350	Identifier	DT_STARTD		4253267	0					
ANR	4253351	ExpressionStatement	adtype = STARTD_AD	1119:2:30333:30351	4253267	4	True				
ANR	4253352	AssignmentExpression	adtype = STARTD_AD		4253267	0		=			
ANR	4253353	Identifier	adtype		4253267	0					
ANR	4253354	Identifier	STARTD_AD		4253267	1					
ANR	4253355	BreakStatement	break ;	1120:2:30355:30360	4253267	5	True				
ANR	4253356	Label	case DT_SCHEDD :	1121:1:30363:30377	4253267	6	True				
ANR	4253357	Identifier	DT_SCHEDD		4253267	0					
ANR	4253358	ExpressionStatement	adtype = SCHEDD_AD	1122:2:30381:30399	4253267	7	True				
ANR	4253359	AssignmentExpression	adtype = SCHEDD_AD		4253267	0		=			
ANR	4253360	Identifier	adtype		4253267	0					
ANR	4253361	Identifier	SCHEDD_AD		4253267	1					
ANR	4253362	BreakStatement	break ;	1123:2:30403:30408	4253267	8	True				
ANR	4253363	Label	case DT_CLUSTER :	1124:1:30411:30426	4253267	9	True				
ANR	4253364	Identifier	DT_CLUSTER		4253267	0					
ANR	4253365	ExpressionStatement	adtype = CLUSTER_AD	1125:2:30430:30449	4253267	10	True				
ANR	4253366	AssignmentExpression	adtype = CLUSTER_AD		4253267	0		=			
ANR	4253367	Identifier	adtype		4253267	0					
ANR	4253368	Identifier	CLUSTER_AD		4253267	1					
ANR	4253369	BreakStatement	break ;	1126:2:30453:30458	4253267	11	True				
ANR	4253370	Label	case DT_COLLECTOR :	1127:1:30461:30478	4253267	12	True				
ANR	4253371	Identifier	DT_COLLECTOR		4253267	0					
ANR	4253372	ExpressionStatement	adtype = COLLECTOR_AD	1128:2:30482:30503	4253267	13	True				
ANR	4253373	AssignmentExpression	adtype = COLLECTOR_AD		4253267	0		=			
ANR	4253374	Identifier	adtype		4253267	0					
ANR	4253375	Identifier	COLLECTOR_AD		4253267	1					
ANR	4253376	BreakStatement	break ;	1129:2:30507:30512	4253267	14	True				
ANR	4253377	Label	case DT_NEGOTIATOR :	1130:1:30515:30533	4253267	15	True				
ANR	4253378	Identifier	DT_NEGOTIATOR		4253267	0					
ANR	4253379	ExpressionStatement	adtype = NEGOTIATOR_AD	1131:2:30537:30559	4253267	16	True				
ANR	4253380	AssignmentExpression	adtype = NEGOTIATOR_AD		4253267	0		=			
ANR	4253381	Identifier	adtype		4253267	0					
ANR	4253382	Identifier	NEGOTIATOR_AD		4253267	1					
ANR	4253383	BreakStatement	break ;	1132:2:30563:30568	4253267	17	True				
ANR	4253384	Label	case DT_CREDD :	1133:1:30571:30584	4253267	18	True				
ANR	4253385	Identifier	DT_CREDD		4253267	0					
ANR	4253386	ExpressionStatement	adtype = CREDD_AD	1134:2:30588:30605	4253267	19	True				
ANR	4253387	AssignmentExpression	adtype = CREDD_AD		4253267	0		=			
ANR	4253388	Identifier	adtype		4253267	0					
ANR	4253389	Identifier	CREDD_AD		4253267	1					
ANR	4253390	BreakStatement	break ;	1135:2:30609:30614	4253267	20	True				
ANR	4253391	Label	case DT_QUILL :	1136:1:30617:30630	4253267	21	True				
ANR	4253392	Identifier	DT_QUILL		4253267	0					
ANR	4253393	ExpressionStatement	adtype = QUILL_AD	1137:2:30634:30651	4253267	22	True				
ANR	4253394	AssignmentExpression	adtype = QUILL_AD		4253267	0		=			
ANR	4253395	Identifier	adtype		4253267	0					
ANR	4253396	Identifier	QUILL_AD		4253267	1					
ANR	4253397	BreakStatement	break ;	1138:2:30655:30660	4253267	23	True				
ANR	4253398	Label	case DT_LEASE_MANAGER :	1139:1:30663:30684	4253267	24	True				
ANR	4253399	Identifier	DT_LEASE_MANAGER		4253267	0					
ANR	4253400	ExpressionStatement	adtype = LEASE_MANAGER_AD	1140:2:30688:30713	4253267	25	True				
ANR	4253401	AssignmentExpression	adtype = LEASE_MANAGER_AD		4253267	0		=			
ANR	4253402	Identifier	adtype		4253267	0					
ANR	4253403	Identifier	LEASE_MANAGER_AD		4253267	1					
ANR	4253404	BreakStatement	break ;	1141:2:30717:30722	4253267	26	True				
ANR	4253405	Label	case DT_GENERIC :	1142:1:30725:30740	4253267	27	True				
ANR	4253406	Identifier	DT_GENERIC		4253267	0					
ANR	4253407	ExpressionStatement	adtype = GENERIC_AD	1143:2:30744:30763	4253267	28	True				
ANR	4253408	AssignmentExpression	adtype = GENERIC_AD		4253267	0		=			
ANR	4253409	Identifier	adtype		4253267	0					
ANR	4253410	Identifier	GENERIC_AD		4253267	1					
ANR	4253411	BreakStatement	break ;	1144:2:30767:30772	4253267	29	True				
ANR	4253412	Label	case DT_HAD :	1145:1:30775:30786	4253267	30	True				
ANR	4253413	Identifier	DT_HAD		4253267	0					
ANR	4253414	ExpressionStatement	adtype = HAD_AD	1146:2:30790:30805	4253267	31	True				
ANR	4253415	AssignmentExpression	adtype = HAD_AD		4253267	0		=			
ANR	4253416	Identifier	adtype		4253267	0					
ANR	4253417	Identifier	HAD_AD		4253267	1					
ANR	4253418	BreakStatement	break ;	1147:2:30809:30814	4253267	32	True				
ANR	4253419	Label	default :	1148:1:30817:30824	4253267	33	True				
ANR	4253420	Identifier	default		4253267	0					
ANR	4253421	ExpressionStatement	"fprintf ( stderr , ""Unrecognized daemon type while resolving names\\n"" )"	1150:2:30868:30937	4253267	34	True				
ANR	4253422	CallExpression	"fprintf ( stderr , ""Unrecognized daemon type while resolving names\\n"" )"		4253267	0					
ANR	4253423	Callee	fprintf		4253267	0					
ANR	4253424	Identifier	fprintf		4253267	0					
ANR	4253425	ArgumentList	stderr		4253267	1					
ANR	4253426	Argument	stderr		4253267	0					
ANR	4253427	Identifier	stderr		4253267	0					
ANR	4253428	Argument	"""Unrecognized daemon type while resolving names\\n"""		4253267	1					
ANR	4253429	PrimaryExpression	"""Unrecognized daemon type while resolving names\\n"""		4253267	0					
ANR	4253430	ExpressionStatement	usage ( NULL )	1151:2:30941:30954	4253267	35	True				
ANR	4253431	CallExpression	usage ( NULL )		4253267	0					
ANR	4253432	Callee	usage		4253267	0					
ANR	4253433	Identifier	usage		4253267	0					
ANR	4253434	ArgumentList	NULL		4253267	1					
ANR	4253435	Argument	NULL		4253267	0					
ANR	4253436	Identifier	NULL		4253267	0					
ANR	4253437	IdentifierDeclStatement	char * pool_addr = pool ? pool -> addr ( ) : NULL ;	1154:1:30961:31005	4253267	9	True				
ANR	4253438	IdentifierDecl	* pool_addr = pool ? pool -> addr ( ) : NULL		4253267	0					
ANR	4253439	IdentifierDeclType	char *		4253267	0					
ANR	4253440	Identifier	pool_addr		4253267	1					
ANR	4253441	AssignmentExpression	* pool_addr = pool ? pool -> addr ( ) : NULL		4253267	2		=			
ANR	4253442	Identifier	pool_addr		4253267	0					
ANR	4253443	ConditionalExpression	pool ? pool -> addr ( ) : NULL		4253267	1					
ANR	4253444	Condition	pool		4253267	0					
ANR	4253445	Identifier	pool		4253267	0					
ANR	4253446	CallExpression	pool -> addr ( )		4253267	1					
ANR	4253447	Callee	pool -> addr		4253267	0					
ANR	4253448	PtrMemberAccess	pool -> addr		4253267	0					
ANR	4253449	Identifier	pool		4253267	0					
ANR	4253450	Identifier	addr		4253267	1					
ANR	4253451	ArgumentList			4253267	1					
ANR	4253452	Identifier	NULL		4253267	2					
ANR	4253453	IdentifierDeclStatement	CondorQuery query ( adtype ) ;	1155:1:31008:31033	4253267	10	True				
ANR	4253454	IdentifierDecl	query ( adtype )		4253267	0					
ANR	4253455	IdentifierDeclType	CondorQuery		4253267	0					
ANR	4253456	Identifier	query		4253267	1					
ANR	4253457	Identifier	adtype		4253267	2					
ANR	4253458	IdentifierDeclStatement	ClassAd * ad ;	1156:1:31036:31047	4253267	11	True				
ANR	4253459	IdentifierDecl	* ad		4253267	0					
ANR	4253460	IdentifierDeclType	ClassAd *		4253267	0					
ANR	4253461	Identifier	ad		4253267	1					
ANR	4253462	IdentifierDeclStatement	ClassAdList ads ;	1157:1:31050:31065	4253267	12	True				
ANR	4253463	IdentifierDecl	ads		4253267	0					
ANR	4253464	IdentifierDeclType	ClassAdList		4253267	0					
ANR	4253465	Identifier	ads		4253267	1					
ANR	4253466	IdentifierDeclStatement	CondorError errstack ;	1159:1:31069:31089	4253267	13	True				
ANR	4253467	IdentifierDecl	errstack		4253267	0					
ANR	4253468	IdentifierDeclType	CondorError		4253267	0					
ANR	4253469	Identifier	errstack		4253267	1					
ANR	4253470	IdentifierDeclStatement	QueryResult q_result ;	1160:1:31092:31112	4253267	14	True				
ANR	4253471	IdentifierDecl	q_result		4253267	0					
ANR	4253472	IdentifierDeclType	QueryResult		4253267	0					
ANR	4253473	Identifier	q_result		4253267	1					
ANR	4253474	IdentifierDeclStatement	MyString buffer ;	1161:1:31115:31130	4253267	15	True				
ANR	4253475	IdentifierDecl	buffer		4253267	0					
ANR	4253476	IdentifierDeclType	MyString		4253267	0					
ANR	4253477	Identifier	buffer		4253267	1					
ANR	4253478	IfStatement	if ( adtype == GENERIC_AD )		4253267	16					
ANR	4253479	Condition	adtype == GENERIC_AD	1163:5:31138:31157	4253267	0	True				
ANR	4253480	EqualityExpression	adtype == GENERIC_AD		4253267	0		==			
ANR	4253481	Identifier	adtype		4253267	0					
ANR	4253482	Identifier	GENERIC_AD		4253267	1					
ANR	4253483	CompoundStatement		68:27:1365:1365	4253267	1					
ANR	4253484	ExpressionStatement	query . setGenericQueryType ( subsys )	1164:2:31164:31197	4253267	0	True				
ANR	4253485	CallExpression	query . setGenericQueryType ( subsys )		4253267	0					
ANR	4253486	Callee	query . setGenericQueryType		4253267	0					
ANR	4253487	MemberAccess	query . setGenericQueryType		4253267	0					
ANR	4253488	Identifier	query		4253267	0					
ANR	4253489	Identifier	setGenericQueryType		4253267	1					
ANR	4253490	ArgumentList	subsys		4253267	1					
ANR	4253491	Argument	subsys		4253267	0					
ANR	4253492	Identifier	subsys		4253267	0					
ANR	4253493	IfStatement	if ( constraint != NULL )		4253267	17					
ANR	4253494	Condition	constraint != NULL	1166:5:31207:31222	4253267	0	True				
ANR	4253495	EqualityExpression	constraint != NULL		4253267	0		!=			
ANR	4253496	Identifier	constraint		4253267	0					
ANR	4253497	Identifier	NULL		4253267	1					
ANR	4253498	CompoundStatement		71:23:1430:1430	4253267	1					
ANR	4253499	ExpressionStatement	query . addANDConstraint ( constraint )	1167:3:31230:31264	4253267	0	True				
ANR	4253500	CallExpression	query . addANDConstraint ( constraint )		4253267	0					
ANR	4253501	Callee	query . addANDConstraint		4253267	0					
ANR	4253502	MemberAccess	query . addANDConstraint		4253267	0					
ANR	4253503	Identifier	query		4253267	0					
ANR	4253504	Identifier	addANDConstraint		4253267	1					
ANR	4253505	ArgumentList	constraint		4253267	1					
ANR	4253506	Argument	constraint		4253267	0					
ANR	4253507	Identifier	constraint		4253267	0					
ANR	4253508	IfStatement	if ( pool_addr )		4253267	18					
ANR	4253509	Condition	pool_addr	1171:5:31276:31284	4253267	0	True				
ANR	4253510	Identifier	pool_addr		4253267	0					
ANR	4253511	CompoundStatement		76:16:1492:1492	4253267	1					
ANR	4253512	ExpressionStatement	"q_result = query . fetchAds ( ads , pool_addr , & errstack )"	1172:2:31291:31343	4253267	0	True				
ANR	4253513	AssignmentExpression	"q_result = query . fetchAds ( ads , pool_addr , & errstack )"		4253267	0		=			
ANR	4253514	Identifier	q_result		4253267	0					
ANR	4253515	CallExpression	"query . fetchAds ( ads , pool_addr , & errstack )"		4253267	1					
ANR	4253516	Callee	query . fetchAds		4253267	0					
ANR	4253517	MemberAccess	query . fetchAds		4253267	0					
ANR	4253518	Identifier	query		4253267	0					
ANR	4253519	Identifier	fetchAds		4253267	1					
ANR	4253520	ArgumentList	ads		4253267	1					
ANR	4253521	Argument	ads		4253267	0					
ANR	4253522	Identifier	ads		4253267	0					
ANR	4253523	Argument	pool_addr		4253267	1					
ANR	4253524	Identifier	pool_addr		4253267	0					
ANR	4253525	Argument	& errstack		4253267	2					
ANR	4253526	UnaryOperationExpression	& errstack		4253267	0					
ANR	4253527	UnaryOperator	&		4253267	0					
ANR	4253528	Identifier	errstack		4253267	1					
ANR	4253529	ElseStatement	else		4253267	0					
ANR	4253530	CompoundStatement		79:2:1562:1614	4253267	0					
ANR	4253531	IdentifierDeclStatement	CollectorList * collectors = CollectorList :: create ( ) ;	1174:2:31357:31409	4253267	0	True				
ANR	4253532	IdentifierDecl	* collectors = CollectorList :: create ( )		4253267	0					
ANR	4253533	IdentifierDeclType	CollectorList *		4253267	0					
ANR	4253534	Identifier	collectors		4253267	1					
ANR	4253535	AssignmentExpression	* collectors = CollectorList :: create ( )		4253267	2		=			
ANR	4253536	Identifier	collectors		4253267	0					
ANR	4253537	CallExpression	CollectorList :: create ( )		4253267	1					
ANR	4253538	Callee	CollectorList :: create		4253267	0					
ANR	4253539	Identifier	CollectorList :: create		4253267	0					
ANR	4253540	ArgumentList			4253267	1					
ANR	4253541	ExpressionStatement	"q_result = collectors -> query ( query , ads )"	1175:2:31413:31454	4253267	1	True				
ANR	4253542	AssignmentExpression	"q_result = collectors -> query ( query , ads )"		4253267	0		=			
ANR	4253543	Identifier	q_result		4253267	0					
ANR	4253544	CallExpression	"collectors -> query ( query , ads )"		4253267	1					
ANR	4253545	Callee	collectors -> query		4253267	0					
ANR	4253546	PtrMemberAccess	collectors -> query		4253267	0					
ANR	4253547	Identifier	collectors		4253267	0					
ANR	4253548	Identifier	query		4253267	1					
ANR	4253549	ArgumentList	query		4253267	1					
ANR	4253550	Argument	query		4253267	0					
ANR	4253551	Identifier	query		4253267	0					
ANR	4253552	Argument	ads		4253267	1					
ANR	4253553	Identifier	ads		4253267	0					
ANR	4253554	Statement	delete	1176:2:31458:31463	4253267	2	True				
ANR	4253555	ExpressionStatement	collectors	1176:9:31465:31475	4253267	3	True				
ANR	4253556	Identifier	collectors		4253267	0					
ANR	4253557	IfStatement	if ( q_result != Q_OK )		4253267	19					
ANR	4253558	Condition	q_result != Q_OK	1178:5:31485:31500	4253267	0	True				
ANR	4253559	EqualityExpression	q_result != Q_OK		4253267	0		!=			
ANR	4253560	Identifier	q_result		4253267	0					
ANR	4253561	Identifier	Q_OK		4253267	1					
ANR	4253562	CompoundStatement		83:24:1709:1709	4253267	1					
ANR	4253563	ExpressionStatement	"fprintf ( stderr , ""%s\\n"" , errstack . getFullText ( true ) )"	1179:2:31508:31561	4253267	0	True				
ANR	4253564	CallExpression	"fprintf ( stderr , ""%s\\n"" , errstack . getFullText ( true ) )"		4253267	0					
ANR	4253565	Callee	fprintf		4253267	0					
ANR	4253566	Identifier	fprintf		4253267	0					
ANR	4253567	ArgumentList	stderr		4253267	1					
ANR	4253568	Argument	stderr		4253267	0					
ANR	4253569	Identifier	stderr		4253267	0					
ANR	4253570	Argument	"""%s\\n"""		4253267	1					
ANR	4253571	PrimaryExpression	"""%s\\n"""		4253267	0					
ANR	4253572	Argument	errstack . getFullText ( true )		4253267	2					
ANR	4253573	CallExpression	errstack . getFullText ( true )		4253267	0					
ANR	4253574	Callee	errstack . getFullText		4253267	0					
ANR	4253575	MemberAccess	errstack . getFullText		4253267	0					
ANR	4253576	Identifier	errstack		4253267	0					
ANR	4253577	Identifier	getFullText		4253267	1					
ANR	4253578	ArgumentList	true		4253267	1					
ANR	4253579	Argument	true		4253267	0					
ANR	4253580	Identifier	true		4253267	0					
ANR	4253581	ExpressionStatement	"fprintf ( stderr , ""ERROR: can't connect to %s\\n"" , pool ? pool -> idStr ( ) : ""local collector"" )"	1180:2:31565:31661	4253267	1	True				
ANR	4253582	CallExpression	"fprintf ( stderr , ""ERROR: can't connect to %s\\n"" , pool ? pool -> idStr ( ) : ""local collector"" )"		4253267	0					
ANR	4253583	Callee	fprintf		4253267	0					
ANR	4253584	Identifier	fprintf		4253267	0					
ANR	4253585	ArgumentList	stderr		4253267	1					
ANR	4253586	Argument	stderr		4253267	0					
ANR	4253587	Identifier	stderr		4253267	0					
ANR	4253588	Argument	"""ERROR: can't connect to %s\\n"""		4253267	1					
ANR	4253589	PrimaryExpression	"""ERROR: can't connect to %s\\n"""		4253267	0					
ANR	4253590	Argument	"pool ? pool -> idStr ( ) : ""local collector"""		4253267	2					
ANR	4253591	ConditionalExpression	"pool ? pool -> idStr ( ) : ""local collector"""		4253267	0					
ANR	4253592	Condition	pool		4253267	0					
ANR	4253593	Identifier	pool		4253267	0					
ANR	4253594	CallExpression	pool -> idStr ( )		4253267	1					
ANR	4253595	Callee	pool -> idStr		4253267	0					
ANR	4253596	PtrMemberAccess	pool -> idStr		4253267	0					
ANR	4253597	Identifier	pool		4253267	0					
ANR	4253598	Identifier	idStr		4253267	1					
ANR	4253599	ArgumentList			4253267	1					
ANR	4253600	PrimaryExpression	"""local collector"""		4253267	2					
ANR	4253601	ExpressionStatement	had_error = true	1182:2:31665:31681	4253267	2	True				
ANR	4253602	AssignmentExpression	had_error = true		4253267	0		=			
ANR	4253603	Identifier	had_error		4253267	0					
ANR	4253604	Identifier	true		4253267	1					
ANR	4253605	ElseStatement	else		4253267	0					
ANR	4253606	IfStatement	if ( ads . Length ( ) <= 0 )		4253267	0					
ANR	4253607	Condition	ads . Length ( ) <= 0	1183:12:31695:31711	4253267	0	True				
ANR	4253608	RelationalExpression	ads . Length ( ) <= 0		4253267	0		<=			
ANR	4253609	CallExpression	ads . Length ( )		4253267	0					
ANR	4253610	Callee	ads . Length		4253267	0					
ANR	4253611	MemberAccess	ads . Length		4253267	0					
ANR	4253612	Identifier	ads		4253267	0					
ANR	4253613	Identifier	Length		4253267	1					
ANR	4253614	ArgumentList			4253267	1					
ANR	4253615	PrimaryExpression	0		4253267	1					
ANR	4253616	CompoundStatement		88:32:1920:1920	4253267	1					
ANR	4253617	IfStatement	if ( IgnoreMissingDaemon )		4253267	0					
ANR	4253618	Condition	IgnoreMissingDaemon	1185:6:31760:31778	4253267	0	True				
ANR	4253619	Identifier	IgnoreMissingDaemon		4253267	0					
ANR	4253620	CompoundStatement		90:28:1987:1987	4253267	1					
ANR	4253621	ReturnStatement	return true ;	1186:3:31787:31798	4253267	0	True				
ANR	4253622	Identifier	true		4253267	0					
ANR	4253623	ExpressionStatement	"fprintf ( stderr , ""Found no ClassAds when querying pool (%s)\\n"" , pool ? pool -> name ( ) : ""local"" )"	1188:2:31806:31906	4253267	1	True				
ANR	4253624	CallExpression	"fprintf ( stderr , ""Found no ClassAds when querying pool (%s)\\n"" , pool ? pool -> name ( ) : ""local"" )"		4253267	0					
ANR	4253625	Callee	fprintf		4253267	0					
ANR	4253626	Identifier	fprintf		4253267	0					
ANR	4253627	ArgumentList	stderr		4253267	1					
ANR	4253628	Argument	stderr		4253267	0					
ANR	4253629	Identifier	stderr		4253267	0					
ANR	4253630	Argument	"""Found no ClassAds when querying pool (%s)\\n"""		4253267	1					
ANR	4253631	PrimaryExpression	"""Found no ClassAds when querying pool (%s)\\n"""		4253267	0					
ANR	4253632	Argument	"pool ? pool -> name ( ) : ""local"""		4253267	2					
ANR	4253633	ConditionalExpression	"pool ? pool -> name ( ) : ""local"""		4253267	0					
ANR	4253634	Condition	pool		4253267	0					
ANR	4253635	Identifier	pool		4253267	0					
ANR	4253636	CallExpression	pool -> name ( )		4253267	1					
ANR	4253637	Callee	pool -> name		4253267	0					
ANR	4253638	PtrMemberAccess	pool -> name		4253267	0					
ANR	4253639	Identifier	pool		4253267	0					
ANR	4253640	Identifier	name		4253267	1					
ANR	4253641	ArgumentList			4253267	1					
ANR	4253642	PrimaryExpression	"""local"""		4253267	2					
ANR	4253643	ExpressionStatement	had_error = true	1190:2:31910:31926	4253267	2	True				
ANR	4253644	AssignmentExpression	had_error = true		4253267	0		=			
ANR	4253645	Identifier	had_error		4253267	0					
ANR	4253646	Identifier	true		4253267	1					
ANR	4253647	IfStatement	if ( had_error )		4253267	20					
ANR	4253648	Condition	had_error	1192:5:31936:31944	4253267	0	True				
ANR	4253649	Identifier	had_error		4253267	0					
ANR	4253650	CompoundStatement		97:17:2153:2153	4253267	1					
ANR	4253651	IfStatement	if ( ! name_list )		4253267	0					
ANR	4253652	Condition	! name_list	1193:6:31956:31966	4253267	0	True				
ANR	4253653	UnaryOperationExpression	! name_list		4253267	0					
ANR	4253654	UnaryOperator	!		4253267	0					
ANR	4253655	Identifier	name_list		4253267	1					
ANR	4253656	CompoundStatement		98:20:2175:2175	4253267	1					
ANR	4253657	IfStatement	if ( constraint != NULL )		4253267	0					
ANR	4253658	Condition	constraint != NULL	1194:9:31981:31996	4253267	0	True				
ANR	4253659	EqualityExpression	constraint != NULL		4253267	0		!=			
ANR	4253660	Identifier	constraint		4253267	0					
ANR	4253661	Identifier	NULL		4253267	1					
ANR	4253662	CompoundStatement		99:28:2205:2205	4253267	1					
ANR	4253663	ExpressionStatement	"fprintf ( stderr , ""Can't find addresses for %s's for constraint '%s'\\n"" , real_dt ? daemonString ( real_dt ) : ""daemon"" , constraint )"	1195:6:32008:32145	4253267	0	True				
ANR	4253664	CallExpression	"fprintf ( stderr , ""Can't find addresses for %s's for constraint '%s'\\n"" , real_dt ? daemonString ( real_dt ) : ""daemon"" , constraint )"		4253267	0					
ANR	4253665	Callee	fprintf		4253267	0					
ANR	4253666	Identifier	fprintf		4253267	0					
ANR	4253667	ArgumentList	stderr		4253267	1					
ANR	4253668	Argument	stderr		4253267	0					
ANR	4253669	Identifier	stderr		4253267	0					
ANR	4253670	Argument	"""Can't find addresses for %s's for constraint '%s'\\n"""		4253267	1					
ANR	4253671	PrimaryExpression	"""Can't find addresses for %s's for constraint '%s'\\n"""		4253267	0					
ANR	4253672	Argument	"real_dt ? daemonString ( real_dt ) : ""daemon"""		4253267	2					
ANR	4253673	ConditionalExpression	"real_dt ? daemonString ( real_dt ) : ""daemon"""		4253267	0					
ANR	4253674	Condition	real_dt		4253267	0					
ANR	4253675	Identifier	real_dt		4253267	0					
ANR	4253676	CallExpression	daemonString ( real_dt )		4253267	1					
ANR	4253677	Callee	daemonString		4253267	0					
ANR	4253678	Identifier	daemonString		4253267	0					
ANR	4253679	ArgumentList	real_dt		4253267	1					
ANR	4253680	Argument	real_dt		4253267	0					
ANR	4253681	Identifier	real_dt		4253267	0					
ANR	4253682	PrimaryExpression	"""daemon"""		4253267	2					
ANR	4253683	Argument	constraint		4253267	3					
ANR	4253684	Identifier	constraint		4253267	0					
ANR	4253685	ElseStatement	else		4253267	0					
ANR	4253686	CompoundStatement		102:11:2363:2363	4253267	0					
ANR	4253687	ExpressionStatement	"fprintf ( stderr , ""Can't find addresses for %s's for -all\\n"" , real_dt ? daemonString ( real_dt ) : ""daemon"" )"	1198:6:32166:32280	4253267	0	True				
ANR	4253688	CallExpression	"fprintf ( stderr , ""Can't find addresses for %s's for -all\\n"" , real_dt ? daemonString ( real_dt ) : ""daemon"" )"		4253267	0					
ANR	4253689	Callee	fprintf		4253267	0					
ANR	4253690	Identifier	fprintf		4253267	0					
ANR	4253691	ArgumentList	stderr		4253267	1					
ANR	4253692	Argument	stderr		4253267	0					
ANR	4253693	Identifier	stderr		4253267	0					
ANR	4253694	Argument	"""Can't find addresses for %s's for -all\\n"""		4253267	1					
ANR	4253695	PrimaryExpression	"""Can't find addresses for %s's for -all\\n"""		4253267	0					
ANR	4253696	Argument	"real_dt ? daemonString ( real_dt ) : ""daemon"""		4253267	2					
ANR	4253697	ConditionalExpression	"real_dt ? daemonString ( real_dt ) : ""daemon"""		4253267	0					
ANR	4253698	Condition	real_dt		4253267	0					
ANR	4253699	Identifier	real_dt		4253267	0					
ANR	4253700	CallExpression	daemonString ( real_dt )		4253267	1					
ANR	4253701	Callee	daemonString		4253267	0					
ANR	4253702	Identifier	daemonString		4253267	0					
ANR	4253703	ArgumentList	real_dt		4253267	1					
ANR	4253704	Argument	real_dt		4253267	0					
ANR	4253705	Identifier	real_dt		4253267	0					
ANR	4253706	PrimaryExpression	"""daemon"""		4253267	2					
ANR	4253707	ElseStatement	else		4253267	0					
ANR	4253708	CompoundStatement		106:9:2502:2502	4253267	0					
ANR	4253709	ExpressionStatement	name_list -> rewind ( )	1202:3:32302:32321	4253267	0	True				
ANR	4253710	CallExpression	name_list -> rewind ( )		4253267	0					
ANR	4253711	Callee	name_list -> rewind		4253267	0					
ANR	4253712	PtrMemberAccess	name_list -> rewind		4253267	0					
ANR	4253713	Identifier	name_list		4253267	0					
ANR	4253714	Identifier	rewind		4253267	1					
ANR	4253715	ArgumentList			4253267	1					
ANR	4253716	WhileStatement	while ( ( name = name_list -> next ( ) ) )		4253267	1					
ANR	4253717	Condition	name = name_list -> next ( )	1203:10:32333:32358	4253267	0	True				
ANR	4253718	AssignmentExpression	name = name_list -> next ( )		4253267	0		=			
ANR	4253719	Identifier	name		4253267	0					
ANR	4253720	CallExpression	name_list -> next ( )		4253267	1					
ANR	4253721	Callee	name_list -> next		4253267	0					
ANR	4253722	PtrMemberAccess	name_list -> next		4253267	0					
ANR	4253723	Identifier	name_list		4253267	0					
ANR	4253724	Identifier	next		4253267	1					
ANR	4253725	ArgumentList			4253267	1					
ANR	4253726	CompoundStatement		108:39:2567:2567	4253267	1					
ANR	4253727	ExpressionStatement	"fprintf ( stderr , ""Can't find address for %s %s\\n"" , real_dt ? daemonString ( real_dt ) : ""daemon"" , name )"	1204:4:32368:32477	4253267	0	True				
ANR	4253728	CallExpression	"fprintf ( stderr , ""Can't find address for %s %s\\n"" , real_dt ? daemonString ( real_dt ) : ""daemon"" , name )"		4253267	0					
ANR	4253729	Callee	fprintf		4253267	0					
ANR	4253730	Identifier	fprintf		4253267	0					
ANR	4253731	ArgumentList	stderr		4253267	1					
ANR	4253732	Argument	stderr		4253267	0					
ANR	4253733	Identifier	stderr		4253267	0					
ANR	4253734	Argument	"""Can't find address for %s %s\\n"""		4253267	1					
ANR	4253735	PrimaryExpression	"""Can't find address for %s %s\\n"""		4253267	0					
ANR	4253736	Argument	"real_dt ? daemonString ( real_dt ) : ""daemon"""		4253267	2					
ANR	4253737	ConditionalExpression	"real_dt ? daemonString ( real_dt ) : ""daemon"""		4253267	0					
ANR	4253738	Condition	real_dt		4253267	0					
ANR	4253739	Identifier	real_dt		4253267	0					
ANR	4253740	CallExpression	daemonString ( real_dt )		4253267	1					
ANR	4253741	Callee	daemonString		4253267	0					
ANR	4253742	Identifier	daemonString		4253267	0					
ANR	4253743	ArgumentList	real_dt		4253267	1					
ANR	4253744	Argument	real_dt		4253267	0					
ANR	4253745	Identifier	real_dt		4253267	0					
ANR	4253746	PrimaryExpression	"""daemon"""		4253267	2					
ANR	4253747	Argument	name		4253267	3					
ANR	4253748	Identifier	name		4253267	0					
ANR	4253749	ExpressionStatement	"fprintf ( stderr , ""Perhaps you need to query another pool.\\n"" )"	1208:2:32490:32552	4253267	1	True				
ANR	4253750	CallExpression	"fprintf ( stderr , ""Perhaps you need to query another pool.\\n"" )"		4253267	0					
ANR	4253751	Callee	fprintf		4253267	0					
ANR	4253752	Identifier	fprintf		4253267	0					
ANR	4253753	ArgumentList	stderr		4253267	1					
ANR	4253754	Argument	stderr		4253267	0					
ANR	4253755	Identifier	stderr		4253267	0					
ANR	4253756	Argument	"""Perhaps you need to query another pool.\\n"""		4253267	1					
ANR	4253757	PrimaryExpression	"""Perhaps you need to query another pool.\\n"""		4253267	0					
ANR	4253758	ExpressionStatement	exit ( 1 )	1209:2:32556:32565	4253267	2	True				
ANR	4253759	CallExpression	exit ( 1 )		4253267	0					
ANR	4253760	Callee	exit		4253267	0					
ANR	4253761	Identifier	exit		4253267	0					
ANR	4253762	ArgumentList	1		4253267	1					
ANR	4253763	Argument	1		4253267	0					
ANR	4253764	PrimaryExpression	1		4253267	0					
ANR	4253765	IfStatement	if ( ! name_list )		4253267	21					
ANR	4253766	Condition	! name_list	1213:5:32577:32587	4253267	0	True				
ANR	4253767	UnaryOperationExpression	! name_list		4253267	0					
ANR	4253768	UnaryOperator	!		4253267	0					
ANR	4253769	Identifier	name_list		4253267	1					
ANR	4253770	CompoundStatement		118:19:2796:2796	4253267	1					
ANR	4253771	ExpressionStatement	ads . Rewind ( )	1215:2:32651:32663	4253267	0	True				
ANR	4253772	CallExpression	ads . Rewind ( )		4253267	0					
ANR	4253773	Callee	ads . Rewind		4253267	0					
ANR	4253774	MemberAccess	ads . Rewind		4253267	0					
ANR	4253775	Identifier	ads		4253267	0					
ANR	4253776	Identifier	Rewind		4253267	1					
ANR	4253777	ArgumentList			4253267	1					
ANR	4253778	WhileStatement	while ( ( ad = ads . Next ( ) ) )		4253267	1					
ANR	4253779	Condition	ad = ads . Next ( )	1216:9:32674:32690	4253267	0	True				
ANR	4253780	AssignmentExpression	ad = ads . Next ( )		4253267	0		=			
ANR	4253781	Identifier	ad		4253267	0					
ANR	4253782	CallExpression	ads . Next ( )		4253267	1					
ANR	4253783	Callee	ads . Next		4253267	0					
ANR	4253784	MemberAccess	ads . Next		4253267	0					
ANR	4253785	Identifier	ads		4253267	0					
ANR	4253786	Identifier	Next		4253267	1					
ANR	4253787	ArgumentList			4253267	1					
ANR	4253788	CompoundStatement		121:29:2899:2899	4253267	1					
ANR	4253789	ExpressionStatement	"d = new Daemon ( ad , real_dt , pool_addr )"	1217:3:32699:32739	4253267	0	True				
ANR	4253790	AssignmentExpression	"d = new Daemon ( ad , real_dt , pool_addr )"		4253267	0		=			
ANR	4253791	Identifier	d		4253267	0					
ANR	4253792	Expression	"ad , real_dt , pool_addr"		4253267	1					
ANR	4253793	Identifier	ad		4253267	0					
ANR	4253794	Expression	"real_dt , pool_addr"		4253267	1					
ANR	4253795	Identifier	real_dt		4253267	0					
ANR	4253796	Identifier	pool_addr		4253267	1					
ANR	4253797	ExpressionStatement	daemon_list -> append ( d )	1218:3:32744:32768	4253267	1	True				
ANR	4253798	CallExpression	daemon_list -> append ( d )		4253267	0					
ANR	4253799	Callee	daemon_list -> append		4253267	0					
ANR	4253800	PtrMemberAccess	daemon_list -> append		4253267	0					
ANR	4253801	Identifier	daemon_list		4253267	0					
ANR	4253802	Identifier	append		4253267	1					
ANR	4253803	ArgumentList	d		4253267	1					
ANR	4253804	Argument	d		4253267	0					
ANR	4253805	Identifier	d		4253267	0					
ANR	4253806	ReturnStatement	return true ;	1220:2:32776:32787	4253267	2	True				
ANR	4253807	Identifier	true		4253267	0					
ANR	4253808	ExpressionStatement	name_list -> rewind ( )	1231:1:33254:33273	4253267	22	True				
ANR	4253809	CallExpression	name_list -> rewind ( )		4253267	0					
ANR	4253810	Callee	name_list -> rewind		4253267	0					
ANR	4253811	PtrMemberAccess	name_list -> rewind		4253267	0					
ANR	4253812	Identifier	name_list		4253267	0					
ANR	4253813	Identifier	rewind		4253267	1					
ANR	4253814	ArgumentList			4253267	1					
ANR	4253815	WhileStatement	while ( ( name = name_list -> next ( ) ) )		4253267	23					
ANR	4253816	Condition	name = name_list -> next ( )	1232:8:33283:33308	4253267	0	True				
ANR	4253817	AssignmentExpression	name = name_list -> next ( )		4253267	0		=			
ANR	4253818	Identifier	name		4253267	0					
ANR	4253819	CallExpression	name_list -> next ( )		4253267	1					
ANR	4253820	Callee	name_list -> next		4253267	0					
ANR	4253821	PtrMemberAccess	name_list -> next		4253267	0					
ANR	4253822	Identifier	name_list		4253267	0					
ANR	4253823	Identifier	next		4253267	1					
ANR	4253824	ArgumentList			4253267	1					
ANR	4253825	CompoundStatement		137:37:3517:3517	4253267	1					
ANR	4253826	ExpressionStatement	ads . Rewind ( )	1233:2:33316:33328	4253267	0	True				
ANR	4253827	CallExpression	ads . Rewind ( )		4253267	0					
ANR	4253828	Callee	ads . Rewind		4253267	0					
ANR	4253829	MemberAccess	ads . Rewind		4253267	0					
ANR	4253830	Identifier	ads		4253267	0					
ANR	4253831	Identifier	Rewind		4253267	1					
ANR	4253832	ArgumentList			4253267	1					
ANR	4253833	WhileStatement	while ( ! d && ( ad = ads . Next ( ) ) )		4253267	1					
ANR	4253834	Condition	! d && ( ad = ads . Next ( ) )	1234:9:33339:33361	4253267	0	True				
ANR	4253835	AndExpression	! d && ( ad = ads . Next ( ) )		4253267	0		&&			
ANR	4253836	UnaryOperationExpression	! d		4253267	0					
ANR	4253837	UnaryOperator	!		4253267	0					
ANR	4253838	Identifier	d		4253267	1					
ANR	4253839	AssignmentExpression	ad = ads . Next ( )		4253267	1		=			
ANR	4253840	Identifier	ad		4253267	0					
ANR	4253841	CallExpression	ads . Next ( )		4253267	1					
ANR	4253842	Callee	ads . Next		4253267	0					
ANR	4253843	MemberAccess	ads . Next		4253267	0					
ANR	4253844	Identifier	ads		4253267	0					
ANR	4253845	Identifier	Next		4253267	1					
ANR	4253846	ArgumentList			4253267	1					
ANR	4253847	CompoundStatement		139:35:3570:3570	4253267	1					
ANR	4253848	IfStatement	"if ( real_dt == DT_STARTD && ! strchr ( name , '@' ) )"		4253267	0					
ANR	4253849	Condition	"real_dt == DT_STARTD && ! strchr ( name , '@' )"	1241:7:33709:33751	4253267	0	True				
ANR	4253850	AndExpression	"real_dt == DT_STARTD && ! strchr ( name , '@' )"		4253267	0		&&			
ANR	4253851	EqualityExpression	real_dt == DT_STARTD		4253267	0		==			
ANR	4253852	Identifier	real_dt		4253267	0					
ANR	4253853	Identifier	DT_STARTD		4253267	1					
ANR	4253854	UnaryOperationExpression	"! strchr ( name , '@' )"		4253267	1					
ANR	4253855	UnaryOperator	!		4253267	0					
ANR	4253856	CallExpression	"strchr ( name , '@' )"		4253267	1					
ANR	4253857	Callee	strchr		4253267	0					
ANR	4253858	Identifier	strchr		4253267	0					
ANR	4253859	ArgumentList	name		4253267	1					
ANR	4253860	Argument	name		4253267	0					
ANR	4253861	Identifier	name		4253267	0					
ANR	4253862	Argument	'@'		4253267	1					
ANR	4253863	PrimaryExpression	'@'		4253267	0					
ANR	4253864	CompoundStatement		146:53:3960:3960	4253267	1					
ANR	4253865	ExpressionStatement	host = get_host_part ( name )	1242:4:33761:33789	4253267	0	True				
ANR	4253866	AssignmentExpression	host = get_host_part ( name )		4253267	0		=			
ANR	4253867	Identifier	host		4253267	0					
ANR	4253868	CallExpression	get_host_part ( name )		4253267	1					
ANR	4253869	Callee	get_host_part		4253267	0					
ANR	4253870	Identifier	get_host_part		4253267	0					
ANR	4253871	ArgumentList	name		4253267	1					
ANR	4253872	Argument	name		4253267	0					
ANR	4253873	Identifier	name		4253267	0					
ANR	4253874	ExpressionStatement	"ad -> LookupString ( ATTR_MACHINE , & tmp )"	1243:4:33795:33833	4253267	1	True				
ANR	4253875	CallExpression	"ad -> LookupString ( ATTR_MACHINE , & tmp )"		4253267	0					
ANR	4253876	Callee	ad -> LookupString		4253267	0					
ANR	4253877	PtrMemberAccess	ad -> LookupString		4253267	0					
ANR	4253878	Identifier	ad		4253267	0					
ANR	4253879	Identifier	LookupString		4253267	1					
ANR	4253880	ArgumentList	ATTR_MACHINE		4253267	1					
ANR	4253881	Argument	ATTR_MACHINE		4253267	0					
ANR	4253882	Identifier	ATTR_MACHINE		4253267	0					
ANR	4253883	Argument	& tmp		4253267	1					
ANR	4253884	UnaryOperationExpression	& tmp		4253267	0					
ANR	4253885	UnaryOperator	&		4253267	0					
ANR	4253886	Identifier	tmp		4253267	1					
ANR	4253887	IfStatement	if ( ! tmp )		4253267	2					
ANR	4253888	Condition	! tmp	1244:8:33843:33847	4253267	0	True				
ANR	4253889	UnaryOperationExpression	! tmp		4253267	0					
ANR	4253890	UnaryOperator	!		4253267	0					
ANR	4253891	Identifier	tmp		4253267	1					
ANR	4253892	CompoundStatement		149:16:4056:4056	4253267	1					
ANR	4253893	ContinueStatement	continue ;	1247:5:33924:33932	4253267	0	True				
ANR	4253894	IfStatement	"if ( strcasecmp ( tmp , host ) )"		4253267	3					
ANR	4253895	Condition	"strcasecmp ( tmp , host )"	1249:8:33948:33968	4253267	0	True				
ANR	4253896	CallExpression	"strcasecmp ( tmp , host )"		4253267	0					
ANR	4253897	Callee	strcasecmp		4253267	0					
ANR	4253898	Identifier	strcasecmp		4253267	0					
ANR	4253899	ArgumentList	tmp		4253267	1					
ANR	4253900	Argument	tmp		4253267	0					
ANR	4253901	Identifier	tmp		4253267	0					
ANR	4253902	Argument	host		4253267	1					
ANR	4253903	Identifier	host		4253267	0					
ANR	4253904	CompoundStatement		154:32:4177:4177	4253267	1					
ANR	4253905	ExpressionStatement	free ( tmp )	1250:5:33992:34003	4253267	0	True				
ANR	4253906	CallExpression	free ( tmp )		4253267	0					
ANR	4253907	Callee	free		4253267	0					
ANR	4253908	Identifier	free		4253267	0					
ANR	4253909	ArgumentList	tmp		4253267	1					
ANR	4253910	Argument	tmp		4253267	0					
ANR	4253911	Identifier	tmp		4253267	0					
ANR	4253912	ExpressionStatement	tmp = NULL	1251:5:34010:34020	4253267	1	True				
ANR	4253913	AssignmentExpression	tmp = NULL		4253267	0		=			
ANR	4253914	Identifier	tmp		4253267	0					
ANR	4253915	Identifier	NULL		4253267	1					
ANR	4253916	ContinueStatement	continue ;	1252:5:34027:34035	4253267	2	True				
ANR	4253917	ExpressionStatement	"ad -> Assign ( ATTR_NAME , name )"	1272:4:34863:34891	4253267	4	True				
ANR	4253918	CallExpression	"ad -> Assign ( ATTR_NAME , name )"		4253267	0					
ANR	4253919	Callee	ad -> Assign		4253267	0					
ANR	4253920	PtrMemberAccess	ad -> Assign		4253267	0					
ANR	4253921	Identifier	ad		4253267	0					
ANR	4253922	Identifier	Assign		4253267	1					
ANR	4253923	ArgumentList	ATTR_NAME		4253267	1					
ANR	4253924	Argument	ATTR_NAME		4253267	0					
ANR	4253925	Identifier	ATTR_NAME		4253267	0					
ANR	4253926	Argument	name		4253267	1					
ANR	4253927	Identifier	name		4253267	0					
ANR	4253928	ExpressionStatement	"d = new Daemon ( ad , real_dt , pool_addr )"	1273:4:34897:34937	4253267	5	True				
ANR	4253929	AssignmentExpression	"d = new Daemon ( ad , real_dt , pool_addr )"		4253267	0		=			
ANR	4253930	Identifier	d		4253267	0					
ANR	4253931	Expression	"ad , real_dt , pool_addr"		4253267	1					
ANR	4253932	Identifier	ad		4253267	0					
ANR	4253933	Expression	"real_dt , pool_addr"		4253267	1					
ANR	4253934	Identifier	real_dt		4253267	0					
ANR	4253935	Identifier	pool_addr		4253267	1					
ANR	4253936	ExpressionStatement	free ( tmp )	1274:4:34943:34954	4253267	6	True				
ANR	4253937	CallExpression	free ( tmp )		4253267	0					
ANR	4253938	Callee	free		4253267	0					
ANR	4253939	Identifier	free		4253267	0					
ANR	4253940	ArgumentList	tmp		4253267	1					
ANR	4253941	Argument	tmp		4253267	0					
ANR	4253942	Identifier	tmp		4253267	0					
ANR	4253943	ExpressionStatement	tmp = NULL	1275:4:34960:34970	4253267	7	True				
ANR	4253944	AssignmentExpression	tmp = NULL		4253267	0		=			
ANR	4253945	Identifier	tmp		4253267	0					
ANR	4253946	Identifier	NULL		4253267	1					
ANR	4253947	ElseStatement	else		4253267	0					
ANR	4253948	CompoundStatement		182:10:5188:5188	4253267	0					
ANR	4253949	ExpressionStatement	"ad -> LookupString ( ATTR_NAME , & tmp )"	1279:4:35082:35117	4253267	0	True				
ANR	4253950	CallExpression	"ad -> LookupString ( ATTR_NAME , & tmp )"		4253267	0					
ANR	4253951	Callee	ad -> LookupString		4253267	0					
ANR	4253952	PtrMemberAccess	ad -> LookupString		4253267	0					
ANR	4253953	Identifier	ad		4253267	0					
ANR	4253954	Identifier	LookupString		4253267	1					
ANR	4253955	ArgumentList	ATTR_NAME		4253267	1					
ANR	4253956	Argument	ATTR_NAME		4253267	0					
ANR	4253957	Identifier	ATTR_NAME		4253267	0					
ANR	4253958	Argument	& tmp		4253267	1					
ANR	4253959	UnaryOperationExpression	& tmp		4253267	0					
ANR	4253960	UnaryOperator	&		4253267	0					
ANR	4253961	Identifier	tmp		4253267	1					
ANR	4253962	IfStatement	if ( ! tmp )		4253267	1					
ANR	4253963	Condition	! tmp	1280:8:35127:35131	4253267	0	True				
ANR	4253964	UnaryOperationExpression	! tmp		4253267	0					
ANR	4253965	UnaryOperator	!		4253267	0					
ANR	4253966	Identifier	tmp		4253267	1					
ANR	4253967	CompoundStatement		185:16:5340:5340	4253267	1					
ANR	4253968	ContinueStatement	continue ;	1283:5:35208:35216	4253267	0	True				
ANR	4253969	IfStatement	"if ( ! strchr ( name , '@' ) )"		4253267	2					
ANR	4253970	Condition	"! strchr ( name , '@' )"	1285:8:35232:35250	4253267	0	True				
ANR	4253971	UnaryOperationExpression	"! strchr ( name , '@' )"		4253267	0					
ANR	4253972	UnaryOperator	!		4253267	0					
ANR	4253973	CallExpression	"strchr ( name , '@' )"		4253267	1					
ANR	4253974	Callee	strchr		4253267	0					
ANR	4253975	Identifier	strchr		4253267	0					
ANR	4253976	ArgumentList	name		4253267	1					
ANR	4253977	Argument	name		4253267	0					
ANR	4253978	Identifier	name		4253267	0					
ANR	4253979	Argument	'@'		4253267	1					
ANR	4253980	PrimaryExpression	'@'		4253267	0					
ANR	4253981	CompoundStatement		190:30:5459:5459	4253267	1					
ANR	4253982	ExpressionStatement	host = get_host_part ( tmp )	1286:5:35261:35288	4253267	0	True				
ANR	4253983	AssignmentExpression	host = get_host_part ( tmp )		4253267	0		=			
ANR	4253984	Identifier	host		4253267	0					
ANR	4253985	CallExpression	get_host_part ( tmp )		4253267	1					
ANR	4253986	Callee	get_host_part		4253267	0					
ANR	4253987	Identifier	get_host_part		4253267	0					
ANR	4253988	ArgumentList	tmp		4253267	1					
ANR	4253989	Argument	tmp		4253267	0					
ANR	4253990	Identifier	tmp		4253267	0					
ANR	4253991	ElseStatement	else		4253267	0					
ANR	4253992	CompoundStatement		192:11:5506:5506	4253267	0					
ANR	4253993	ExpressionStatement	host = tmp	1288:5:35308:35318	4253267	0	True				
ANR	4253994	AssignmentExpression	host = tmp		4253267	0		=			
ANR	4253995	Identifier	host		4253267	0					
ANR	4253996	Identifier	tmp		4253267	1					
ANR	4253997	IfStatement	"if ( ! strcasecmp ( host , name ) )"		4253267	3					
ANR	4253998	Condition	"! strcasecmp ( host , name )"	1290:8:35334:35357	4253267	0	True				
ANR	4253999	UnaryOperationExpression	"! strcasecmp ( host , name )"		4253267	0					
ANR	4254000	UnaryOperator	!		4253267	0					
ANR	4254001	CallExpression	"strcasecmp ( host , name )"		4253267	1					
ANR	4254002	Callee	strcasecmp		4253267	0					
ANR	4254003	Identifier	strcasecmp		4253267	0					
ANR	4254004	ArgumentList	host		4253267	1					
ANR	4254005	Argument	host		4253267	0					
ANR	4254006	Identifier	host		4253267	0					
ANR	4254007	Argument	name		4253267	1					
ANR	4254008	Identifier	name		4253267	0					
ANR	4254009	CompoundStatement		195:35:5566:5566	4253267	1					
ANR	4254010	ExpressionStatement	"d = new Daemon ( ad , real_dt , pool_addr )"	1291:5:35368:35408	4253267	0	True				
ANR	4254011	AssignmentExpression	"d = new Daemon ( ad , real_dt , pool_addr )"		4253267	0		=			
ANR	4254012	Identifier	d		4253267	0					
ANR	4254013	Expression	"ad , real_dt , pool_addr"		4253267	1					
ANR	4254014	Identifier	ad		4253267	0					
ANR	4254015	Expression	"real_dt , pool_addr"		4253267	1					
ANR	4254016	Identifier	real_dt		4253267	0					
ANR	4254017	Identifier	pool_addr		4253267	1					
ANR	4254018	ExpressionStatement	free ( tmp )	1293:4:35420:35431	4253267	4	True				
ANR	4254019	CallExpression	free ( tmp )		4253267	0					
ANR	4254020	Callee	free		4253267	0					
ANR	4254021	Identifier	free		4253267	0					
ANR	4254022	ArgumentList	tmp		4253267	1					
ANR	4254023	Argument	tmp		4253267	0					
ANR	4254024	Identifier	tmp		4253267	0					
ANR	4254025	ExpressionStatement	tmp = NULL	1294:4:35437:35447	4253267	5	True				
ANR	4254026	AssignmentExpression	tmp = NULL		4253267	0		=			
ANR	4254027	Identifier	tmp		4253267	0					
ANR	4254028	Identifier	NULL		4253267	1					
ANR	4254029	IfStatement	if ( d )		4253267	2					
ANR	4254030	Condition	d	1298:6:35519:35519	4253267	0	True				
ANR	4254031	Identifier	d		4253267	0					
ANR	4254032	CompoundStatement		203:10:5728:5728	4253267	1					
ANR	4254033	ExpressionStatement	daemon_list -> append ( d )	1300:3:35583:35607	4253267	0	True				
ANR	4254034	CallExpression	daemon_list -> append ( d )		4253267	0					
ANR	4254035	Callee	daemon_list -> append		4253267	0					
ANR	4254036	PtrMemberAccess	daemon_list -> append		4253267	0					
ANR	4254037	Identifier	daemon_list		4253267	0					
ANR	4254038	Identifier	append		4253267	1					
ANR	4254039	ArgumentList	d		4253267	1					
ANR	4254040	Argument	d		4253267	0					
ANR	4254041	Identifier	d		4253267	0					
ANR	4254042	ExpressionStatement	d = NULL	1301:3:35612:35620	4253267	1	True				
ANR	4254043	AssignmentExpression	d = NULL		4253267	0		=			
ANR	4254044	Identifier	d		4253267	0					
ANR	4254045	Identifier	NULL		4253267	1					
ANR	4254046	ElseStatement	else		4253267	0					
ANR	4254047	CompoundStatement		207:9:5836:5836	4253267	0					
ANR	4254048	ExpressionStatement	"fprintf ( stderr , ""Can't find address for %s %s\\n"" , daemonString ( real_dt ) , name )"	1303:3:35636:35722	4253267	0	True				
ANR	4254049	CallExpression	"fprintf ( stderr , ""Can't find address for %s %s\\n"" , daemonString ( real_dt ) , name )"		4253267	0					
ANR	4254050	Callee	fprintf		4253267	0					
ANR	4254051	Identifier	fprintf		4253267	0					
ANR	4254052	ArgumentList	stderr		4253267	1					
ANR	4254053	Argument	stderr		4253267	0					
ANR	4254054	Identifier	stderr		4253267	0					
ANR	4254055	Argument	"""Can't find address for %s %s\\n"""		4253267	1					
ANR	4254056	PrimaryExpression	"""Can't find address for %s %s\\n"""		4253267	0					
ANR	4254057	Argument	daemonString ( real_dt )		4253267	2					
ANR	4254058	CallExpression	daemonString ( real_dt )		4253267	0					
ANR	4254059	Callee	daemonString		4253267	0					
ANR	4254060	Identifier	daemonString		4253267	0					
ANR	4254061	ArgumentList	real_dt		4253267	1					
ANR	4254062	Argument	real_dt		4253267	0					
ANR	4254063	Identifier	real_dt		4253267	0					
ANR	4254064	Argument	name		4253267	3					
ANR	4254065	Identifier	name		4253267	0					
ANR	4254066	ExpressionStatement	had_error = true	1305:3:35727:35743	4253267	1	True				
ANR	4254067	AssignmentExpression	had_error = true		4253267	0		=			
ANR	4254068	Identifier	had_error		4253267	0					
ANR	4254069	Identifier	true		4253267	1					
ANR	4254070	IfStatement	if ( had_error )		4253267	24					
ANR	4254071	Condition	had_error	1309:5:35795:35803	4253267	0	True				
ANR	4254072	Identifier	had_error		4253267	0					
ANR	4254073	CompoundStatement		214:17:6012:6012	4253267	1					
ANR	4254074	ExpressionStatement	"fprintf ( stderr , ""Perhaps you need to query another pool.\\n"" )"	1310:2:35811:35878	4253267	0	True				
ANR	4254075	CallExpression	"fprintf ( stderr , ""Perhaps you need to query another pool.\\n"" )"		4253267	0					
ANR	4254076	Callee	fprintf		4253267	0					
ANR	4254077	Identifier	fprintf		4253267	0					
ANR	4254078	ArgumentList	stderr		4253267	1					
ANR	4254079	Argument	stderr		4253267	0					
ANR	4254080	Identifier	stderr		4253267	0					
ANR	4254081	Argument	"""Perhaps you need to query another pool.\\n"""		4253267	1					
ANR	4254082	PrimaryExpression	"""Perhaps you need to query another pool.\\n"""		4253267	0					
ANR	4254083	ExpressionStatement	all_good = false	1312:2:35882:35898	4253267	1	True				
ANR	4254084	AssignmentExpression	all_good = false		4253267	0		=			
ANR	4254085	Identifier	all_good		4253267	0					
ANR	4254086	Identifier	false		4253267	1					
ANR	4254087	ReturnStatement	return true ;	1314:1:35904:35915	4253267	25	True				
ANR	4254088	Identifier	true		4253267	0					
ANR	4254089	ReturnType	bool		4253267	1					
ANR	4254090	Identifier	resolveNames		4253267	2					
ANR	4254091	ParameterList	"DaemonList * daemon_list , StringList * name_list"		4253267	3					
ANR	4254092	Parameter	DaemonList * daemon_list	1095:14:29745:29767	4253267	0	True				
ANR	4254093	ParameterType	DaemonList *		4253267	0					
ANR	4254094	Identifier	daemon_list		4253267	1					
ANR	4254095	Parameter	StringList * name_list	1095:39:29770:29790	4253267	1	True				
ANR	4254096	ParameterType	StringList *		4253267	0					
ANR	4254097	Identifier	name_list		4253267	1					
ANR	4254098	CFGEntryNode	ENTRY		4253267		True				
ANR	4254099	CFGExitNode	EXIT		4253267		True				
ANR	4254100	Symbol	ATTR_NAME		4253267						
ANR	4254101	Symbol	daemon_list		4253267						
ANR	4254102	Symbol	CREDD_AD		4253267						
ANR	4254103	Symbol	IgnoreMissingDaemon		4253267						
ANR	4254104	Symbol	q_result		4253267						
ANR	4254105	Symbol	strchr		4253267						
ANR	4254106	Symbol	pool -> addr		4253267						
ANR	4254107	Symbol	MASTER_AD		4253267						
ANR	4254108	Symbol	CLUSTER_AD		4253267						
ANR	4254109	Symbol	tmp		4253267						
ANR	4254110	Symbol	host		4253267						
ANR	4254111	Symbol	& errstack		4253267						
ANR	4254112	Symbol	buffer		4253267						
ANR	4254113	Symbol	strcasecmp		4253267						
ANR	4254114	Symbol	CollectorList :: create		4253267						
ANR	4254115	Symbol	pool -> idStr		4253267						
ANR	4254116	Symbol	GENERIC_AD		4253267						
ANR	4254117	Symbol	NULL		4253267						
ANR	4254118	Symbol	ad		4253267						
ANR	4254119	Symbol	LEASE_MANAGER_AD		4253267						
ANR	4254120	Symbol	query		4253267						
ANR	4254121	Symbol	QUILL_AD		4253267						
ANR	4254122	Symbol	pool		4253267						
ANR	4254123	Symbol	collectors -> query		4253267						
ANR	4254124	Symbol	stderr		4253267						
ANR	4254125	Symbol	Q_OK		4253267						
ANR	4254126	Symbol	pool_addr		4253267						
ANR	4254127	Symbol	ads		4253267						
ANR	4254128	Symbol	DT_STARTD		4253267						
ANR	4254129	Symbol	all_good		4253267						
ANR	4254130	Symbol	errstack		4253267						
ANR	4254131	Symbol	collectors		4253267						
ANR	4254132	Symbol	name		4253267						
ANR	4254133	Symbol	true		4253267						
ANR	4254134	Symbol	real_dt		4253267						
ANR	4254135	Symbol	& tmp		4253267						
ANR	4254136	Symbol	had_error		4253267						
ANR	4254137	Symbol	name_list -> isEmpty		4253267						
ANR	4254138	Symbol	NEGOTIATOR_AD		4253267						
ANR	4254139	Symbol	daemonString		4253267						
ANR	4254140	Symbol	ads . Length		4253267						
ANR	4254141	Symbol	COLLECTOR_AD		4253267						
ANR	4254142	Symbol	* collectors		4253267						
ANR	4254143	Symbol	subsys		4253267						
ANR	4254144	Symbol	ads . Next		4253267						
ANR	4254145	Symbol	query . fetchAds		4253267						
ANR	4254146	Symbol	name_list		4253267						
ANR	4254147	Symbol	name_list -> next		4253267						
ANR	4254148	Symbol	adtype		4253267						
ANR	4254149	Symbol	d		4253267						
ANR	4254150	Symbol	HAD_AD		4253267						
ANR	4254151	Symbol	* name_list		4253267						
ANR	4254152	Symbol	false		4253267						
ANR	4254153	Symbol	SCHEDD_AD		4253267						
ANR	4254154	Symbol	get_host_part		4253267						
ANR	4254155	Symbol	pool -> name		4253267						
ANR	4254156	Symbol	ATTR_MACHINE		4253267						
ANR	4254157	Symbol	* pool		4253267						
ANR	4254158	Symbol	STARTD_AD		4253267						
ANR	4254159	Symbol	errstack . getFullText		4253267						
ANR	4254160	Symbol	constraint		4253267						
ANR	4254161	Function	doCommand	1318:0:35921:43152							
ANR	4254162	FunctionDef	doCommand (Daemon * d)		4254161	0					
ANR	4254163	CompoundStatement		1320:0:35950:43152	4254161	0					
ANR	4254164	IdentifierDeclStatement	bool done = false ;	1321:1:35953:35970	4254161	0	True				
ANR	4254165	IdentifierDecl	done = false		4254161	0					
ANR	4254166	IdentifierDeclType	bool		4254161	0					
ANR	4254167	Identifier	done		4254161	1					
ANR	4254168	AssignmentExpression	done = false		4254161	2		=			
ANR	4254169	Identifier	false		4254161	0					
ANR	4254170	Identifier	false		4254161	1					
ANR	4254171	IdentifierDeclStatement	int my_cmd = real_cmd ;	1322:1:35973:35994	4254161	1	True				
ANR	4254172	IdentifierDecl	my_cmd = real_cmd		4254161	0					
ANR	4254173	IdentifierDeclType	int		4254161	0					
ANR	4254174	Identifier	my_cmd		4254161	1					
ANR	4254175	AssignmentExpression	my_cmd = real_cmd		4254161	2		=			
ANR	4254176	Identifier	real_cmd		4254161	0					
ANR	4254177	Identifier	real_cmd		4254161	1					
ANR	4254178	IdentifierDeclStatement	CondorError errstack ;	1323:1:35997:36017	4254161	2	True				
ANR	4254179	IdentifierDecl	errstack		4254161	0					
ANR	4254180	IdentifierDeclType	CondorError		4254161	0					
ANR	4254181	Identifier	errstack		4254161	1					
ANR	4254182	IdentifierDeclStatement	bool error = true ;	1324:1:36020:36037	4254161	3	True				
ANR	4254183	IdentifierDecl	error = true		4254161	0					
ANR	4254184	IdentifierDeclType	bool		4254161	0					
ANR	4254185	Identifier	error		4254161	1					
ANR	4254186	AssignmentExpression	error = true		4254161	2		=			
ANR	4254187	Identifier	true		4254161	0					
ANR	4254188	Identifier	true		4254161	1					
ANR	4254189	IdentifierDeclStatement	char * name ;	1325:1:36040:36050	4254161	4	True				
ANR	4254190	IdentifierDecl	* name		4254161	0					
ANR	4254191	IdentifierDeclType	char *		4254161	0					
ANR	4254192	Identifier	name		4254161	1					
ANR	4254193	IdentifierDeclStatement	bool is_local ;	1326:1:36053:36066	4254161	5	True				
ANR	4254194	IdentifierDecl	is_local		4254161	0					
ANR	4254195	IdentifierDeclType	bool		4254161	0					
ANR	4254196	Identifier	is_local		4254161	1					
ANR	4254197	IdentifierDeclStatement	daemon_t d_type ;	1327:1:36069:36084	4254161	6	True				
ANR	4254198	IdentifierDecl	d_type		4254161	0					
ANR	4254199	IdentifierDeclType	daemon_t		4254161	0					
ANR	4254200	Identifier	d_type		4254161	1					
ANR	4254201	DoStatement	do		4254161	7					
ANR	4254202	CompoundStatement		28:2:863:899	4254161	0					
ANR	4254203	ExpressionStatement	name = d -> name ( )	1331:2:36158:36174	4254161	0	True				
ANR	4254204	AssignmentExpression	name = d -> name ( )		4254161	0		=			
ANR	4254205	Identifier	name		4254161	0					
ANR	4254206	CallExpression	d -> name ( )		4254161	1					
ANR	4254207	Callee	d -> name		4254161	0					
ANR	4254208	PtrMemberAccess	d -> name		4254161	0					
ANR	4254209	Identifier	d		4254161	0					
ANR	4254210	Identifier	name		4254161	1					
ANR	4254211	ArgumentList			4254161	1					
ANR	4254212	ExpressionStatement	d_type = d -> type ( )	1332:2:36178:36196	4254161	1	True				
ANR	4254213	AssignmentExpression	d_type = d -> type ( )		4254161	0		=			
ANR	4254214	Identifier	d_type		4254161	0					
ANR	4254215	CallExpression	d -> type ( )		4254161	1					
ANR	4254216	Callee	d -> type		4254161	0					
ANR	4254217	PtrMemberAccess	d -> type		4254161	0					
ANR	4254218	Identifier	d		4254161	0					
ANR	4254219	Identifier	type		4254161	1					
ANR	4254220	ArgumentList			4254161	1					
ANR	4254221	ExpressionStatement	is_local = d -> isLocal ( )	1333:2:36200:36223	4254161	2	True				
ANR	4254222	AssignmentExpression	is_local = d -> isLocal ( )		4254161	0		=			
ANR	4254223	Identifier	is_local		4254161	0					
ANR	4254224	CallExpression	d -> isLocal ( )		4254161	1					
ANR	4254225	Callee	d -> isLocal		4254161	0					
ANR	4254226	PtrMemberAccess	d -> isLocal		4254161	0					
ANR	4254227	Identifier	d		4254161	0					
ANR	4254228	Identifier	isLocal		4254161	1					
ANR	4254229	ArgumentList			4254161	1					
ANR	4254230	IdentifierDeclStatement	ReliSock sock ;	1334:2:36227:36240	4254161	3	True				
ANR	4254231	IdentifierDecl	sock		4254161	0					
ANR	4254232	IdentifierDeclType	ReliSock		4254161	0					
ANR	4254233	Identifier	sock		4254161	1					
ANR	4254234	ExpressionStatement	done = false	1335:2:36244:36256	4254161	4	True				
ANR	4254235	AssignmentExpression	done = false		4254161	0		=			
ANR	4254236	Identifier	done		4254161	0					
ANR	4254237	Identifier	false		4254161	1					
ANR	4254238	ExpressionStatement	my_cmd = real_cmd	1336:2:36260:36277	4254161	5	True				
ANR	4254239	AssignmentExpression	my_cmd = real_cmd		4254161	0		=			
ANR	4254240	Identifier	my_cmd		4254161	0					
ANR	4254241	Identifier	real_cmd		4254161	1					
ANR	4254242	IdentifierDeclStatement	bool is_per_claim_startd_cmd = false ;	1347:2:36814:36850	4254161	6	True				
ANR	4254243	IdentifierDecl	is_per_claim_startd_cmd = false		4254161	0					
ANR	4254244	IdentifierDeclType	bool		4254161	0					
ANR	4254245	Identifier	is_per_claim_startd_cmd		4254161	1					
ANR	4254246	AssignmentExpression	is_per_claim_startd_cmd = false		4254161	2		=			
ANR	4254247	Identifier	false		4254161	0					
ANR	4254248	Identifier	false		4254161	1					
ANR	4254249	IfStatement	if ( real_cmd == VACATE_CLAIM || real_cmd == PCKPT_JOB )		4254161	7					
ANR	4254250	Condition	real_cmd == VACATE_CLAIM || real_cmd == PCKPT_JOB	1348:6:36858:36906	4254161	0	True				
ANR	4254251	OrExpression	real_cmd == VACATE_CLAIM || real_cmd == PCKPT_JOB		4254161	0		||			
ANR	4254252	EqualityExpression	real_cmd == VACATE_CLAIM		4254161	0		==			
ANR	4254253	Identifier	real_cmd		4254161	0					
ANR	4254254	Identifier	VACATE_CLAIM		4254161	1					
ANR	4254255	EqualityExpression	real_cmd == PCKPT_JOB		4254161	1		==			
ANR	4254256	Identifier	real_cmd		4254161	0					
ANR	4254257	Identifier	PCKPT_JOB		4254161	1					
ANR	4254258	CompoundStatement		29:58:959:959	4254161	1					
ANR	4254259	IfStatement	"if ( ! all && d_type != DT_ANY && ! is_local && ( name && strchr ( name , '@' ) ) )"		4254161	0					
ANR	4254260	Condition	"! all && d_type != DT_ANY && ! is_local && ( name && strchr ( name , '@' ) )"	1349:7:36919:36990	4254161	0	True				
ANR	4254261	AndExpression	"! all && d_type != DT_ANY && ! is_local && ( name && strchr ( name , '@' ) )"		4254161	0		&&			
ANR	4254262	UnaryOperationExpression	! all		4254161	0					
ANR	4254263	UnaryOperator	!		4254161	0					
ANR	4254264	Identifier	all		4254161	1					
ANR	4254265	AndExpression	"d_type != DT_ANY && ! is_local && ( name && strchr ( name , '@' ) )"		4254161	1		&&			
ANR	4254266	EqualityExpression	d_type != DT_ANY		4254161	0		!=			
ANR	4254267	Identifier	d_type		4254161	0					
ANR	4254268	Identifier	DT_ANY		4254161	1					
ANR	4254269	AndExpression	"! is_local && ( name && strchr ( name , '@' ) )"		4254161	1		&&			
ANR	4254270	UnaryOperationExpression	! is_local		4254161	0					
ANR	4254271	UnaryOperator	!		4254161	0					
ANR	4254272	Identifier	is_local		4254161	1					
ANR	4254273	AndExpression	"name && strchr ( name , '@' )"		4254161	1		&&			
ANR	4254274	Identifier	name		4254161	0					
ANR	4254275	CallExpression	"strchr ( name , '@' )"		4254161	1					
ANR	4254276	Callee	strchr		4254161	0					
ANR	4254277	Identifier	strchr		4254161	0					
ANR	4254278	ArgumentList	name		4254161	1					
ANR	4254279	Argument	name		4254161	0					
ANR	4254280	Identifier	name		4254161	0					
ANR	4254281	Argument	'@'		4254161	1					
ANR	4254282	PrimaryExpression	'@'		4254161	0					
ANR	4254283	CompoundStatement		32:3:1046:1046	4254161	1					
ANR	4254284	ExpressionStatement	is_per_claim_startd_cmd = true	1352:4:37003:37033	4254161	0	True				
ANR	4254285	AssignmentExpression	is_per_claim_startd_cmd = true		4254161	0		=			
ANR	4254286	Identifier	is_per_claim_startd_cmd		4254161	0					
ANR	4254287	Identifier	true		4254161	1					
ANR	4254288	IfStatement	if ( ! is_per_claim_startd_cmd )		4254161	8					
ANR	4254289	Condition	! is_per_claim_startd_cmd	1362:6:37397:37421	4254161	0	True				
ANR	4254290	UnaryOperationExpression	! is_per_claim_startd_cmd		4254161	0					
ANR	4254291	UnaryOperator	!		4254161	0					
ANR	4254292	Identifier	is_per_claim_startd_cmd		4254161	1					
ANR	4254293	CompoundStatement		45:3:1513:1533	4254161	1					
ANR	4254294	IdentifierDeclStatement	MyString hash_key = d -> addr ( ) ;	1363:3:37430:37459	4254161	0	True				
ANR	4254295	IdentifierDecl	hash_key = d -> addr ( )		4254161	0					
ANR	4254296	IdentifierDeclType	MyString		4254161	0					
ANR	4254297	Identifier	hash_key		4254161	1					
ANR	4254298	AssignmentExpression	hash_key = d -> addr ( )		4254161	2		=			
ANR	4254299	Identifier	hash_key		4254161	0					
ANR	4254300	CallExpression	d -> addr ( )		4254161	1					
ANR	4254301	Callee	d -> addr		4254161	0					
ANR	4254302	PtrMemberAccess	d -> addr		4254161	0					
ANR	4254303	Identifier	d		4254161	0					
ANR	4254304	Identifier	addr		4254161	1					
ANR	4254305	ArgumentList			4254161	1					
ANR	4254306	IdentifierDeclStatement	bool sent_it = false ;	1364:3:37464:37484	4254161	1	True				
ANR	4254307	IdentifierDecl	sent_it = false		4254161	0					
ANR	4254308	IdentifierDeclType	bool		4254161	0					
ANR	4254309	Identifier	sent_it		4254161	1					
ANR	4254310	AssignmentExpression	sent_it = false		4254161	2		=			
ANR	4254311	Identifier	false		4254161	0					
ANR	4254312	Identifier	false		4254161	1					
ANR	4254313	IfStatement	"if ( addresses_sent . lookup ( hash_key , sent_it ) >= 0 && sent_it )"		4254161	2					
ANR	4254314	Condition	"addresses_sent . lookup ( hash_key , sent_it ) >= 0 && sent_it"	1365:7:37493:37548	4254161	0	True				
ANR	4254315	AndExpression	"addresses_sent . lookup ( hash_key , sent_it ) >= 0 && sent_it"		4254161	0		&&			
ANR	4254316	RelationalExpression	"addresses_sent . lookup ( hash_key , sent_it ) >= 0"		4254161	0		>=			
ANR	4254317	CallExpression	"addresses_sent . lookup ( hash_key , sent_it )"		4254161	0					
ANR	4254318	Callee	addresses_sent . lookup		4254161	0					
ANR	4254319	MemberAccess	addresses_sent . lookup		4254161	0					
ANR	4254320	Identifier	addresses_sent		4254161	0					
ANR	4254321	Identifier	lookup		4254161	1					
ANR	4254322	ArgumentList	hash_key		4254161	1					
ANR	4254323	Argument	hash_key		4254161	0					
ANR	4254324	Identifier	hash_key		4254161	0					
ANR	4254325	Argument	sent_it		4254161	1					
ANR	4254326	Identifier	sent_it		4254161	0					
ANR	4254327	PrimaryExpression	0		4254161	1					
ANR	4254328	Identifier	sent_it		4254161	1					
ANR	4254329	CompoundStatement		46:66:1601:1601	4254161	1					
ANR	4254330	ReturnStatement	return ;	1366:4:37558:37564	4254161	0	True				
ANR	4254331	ExpressionStatement	"addresses_sent . insert ( hash_key , true )"	1368:3:37574:37613	4254161	3	True				
ANR	4254332	CallExpression	"addresses_sent . insert ( hash_key , true )"		4254161	0					
ANR	4254333	Callee	addresses_sent . insert		4254161	0					
ANR	4254334	MemberAccess	addresses_sent . insert		4254161	0					
ANR	4254335	Identifier	addresses_sent		4254161	0					
ANR	4254336	Identifier	insert		4254161	1					
ANR	4254337	ArgumentList	hash_key		4254161	1					
ANR	4254338	Argument	hash_key		4254161	0					
ANR	4254339	Identifier	hash_key		4254161	0					
ANR	4254340	Argument	true		4254161	1					
ANR	4254341	Identifier	true		4254161	0					
ANR	4254342	IfStatement	if ( real_cmd == SQUAWK )		4254161	9					
ANR	4254343	Condition	real_cmd == SQUAWK	1372:6:37669:37686	4254161	0	True				
ANR	4254344	EqualityExpression	real_cmd == SQUAWK		4254161	0		==			
ANR	4254345	Identifier	real_cmd		4254161	0					
ANR	4254346	Identifier	SQUAWK		4254161	1					
ANR	4254347	CompoundStatement		53:27:1739:1739	4254161	1					
ANR	4254348	ExpressionStatement	doSquawk ( d -> addr ( ) )	1373:3:37695:37716	4254161	0	True				
ANR	4254349	CallExpression	doSquawk ( d -> addr ( ) )		4254161	0					
ANR	4254350	Callee	doSquawk		4254161	0					
ANR	4254351	Identifier	doSquawk		4254161	0					
ANR	4254352	ArgumentList	d -> addr ( )		4254161	1					
ANR	4254353	Argument	d -> addr ( )		4254161	0					
ANR	4254354	CallExpression	d -> addr ( )		4254161	0					
ANR	4254355	Callee	d -> addr		4254161	0					
ANR	4254356	PtrMemberAccess	d -> addr		4254161	0					
ANR	4254357	Identifier	d		4254161	0					
ANR	4254358	Identifier	addr		4254161	1					
ANR	4254359	ArgumentList			4254161	1					
ANR	4254360	ExpressionStatement	"printf ( ""Bye!\\n"" )"	1374:3:37721:37740	4254161	1	True				
ANR	4254361	CallExpression	"printf ( ""Bye!\\n"" )"		4254161	0					
ANR	4254362	Callee	printf		4254161	0					
ANR	4254363	Identifier	printf		4254161	0					
ANR	4254364	ArgumentList	"""Bye!\\n"""		4254161	1					
ANR	4254365	Argument	"""Bye!\\n"""		4254161	0					
ANR	4254366	PrimaryExpression	"""Bye!\\n"""		4254161	0					
ANR	4254367	ReturnStatement	return ;	1375:3:37745:37751	4254161	2	True				
ANR	4254368	IfStatement	if ( sock . connect ( d -> addr ( ) ) )		4254161	10					
ANR	4254369	Condition	sock . connect ( d -> addr ( ) )	1379:6:37794:37816	4254161	0	True				
ANR	4254370	CallExpression	sock . connect ( d -> addr ( ) )		4254161	0					
ANR	4254371	Callee	sock . connect		4254161	0					
ANR	4254372	MemberAccess	sock . connect		4254161	0					
ANR	4254373	Identifier	sock		4254161	0					
ANR	4254374	Identifier	connect		4254161	1					
ANR	4254375	ArgumentList	d -> addr ( )		4254161	1					
ANR	4254376	Argument	d -> addr ( )		4254161	0					
ANR	4254377	CallExpression	d -> addr ( )		4254161	0					
ANR	4254378	Callee	d -> addr		4254161	0					
ANR	4254379	PtrMemberAccess	d -> addr		4254161	0					
ANR	4254380	Identifier	d		4254161	0					
ANR	4254381	Identifier	addr		4254161	1					
ANR	4254382	ArgumentList			4254161	1					
ANR	4254383	CompoundStatement		60:32:1869:1869	4254161	1					
ANR	4254384	ExpressionStatement	error = false	1380:3:37825:37838	4254161	0	True				
ANR	4254385	AssignmentExpression	error = false		4254161	0		=			
ANR	4254386	Identifier	error		4254161	0					
ANR	4254387	Identifier	false		4254161	1					
ANR	4254388	ElseStatement	else		4254161	0					
ANR	4254389	CompoundStatement		63:9:1910:1910	4254161	0					
ANR	4254390	ContinueStatement	continue ;	1383:3:37866:37874	4254161	0	True				
ANR	4254391	Statement	char	1386:2:37883:37886	4254161	11	True				
ANR	4254392	Statement	*	1386:7:37888:37888	4254161	12	True				
ANR	4254393	Statement	psubsys	1386:8:37889:37895	4254161	13	True				
ANR	4254394	Statement	=	1386:16:37897:37897	4254161	14	True				
ANR	4254395	Statement	const_cast	1386:18:37899:37908	4254161	15	True				
ANR	4254396	Statement	<	1386:28:37909:37909	4254161	16	True				
ANR	4254397	Statement	char	1386:29:37910:37913	4254161	17	True				
ANR	4254398	Statement	*	1386:34:37915:37915	4254161	18	True				
ANR	4254399	Statement	>	1386:35:37916:37916	4254161	19	True				
ANR	4254400	ExpressionStatement	subsys	1386:36:37917:37925	4254161	20	True				
ANR	4254401	Identifier	subsys		4254161	0					
ANR	4254402	SwitchStatement	switch ( real_cmd )		4254161	21					
ANR	4254403	Condition	real_cmd	1387:9:37936:37943	4254161	0	True				
ANR	4254404	Identifier	real_cmd		4254161	0					
ANR	4254405	CompoundStatement		68:19:1995:1995	4254161	1					
ANR	4254406	Label	case VACATE_CLAIM :	1388:2:37950:37967	4254161	0	True				
ANR	4254407	Identifier	VACATE_CLAIM		4254161	0					
ANR	4254408	IfStatement	if ( is_per_claim_startd_cmd )		4254161	1					
ANR	4254409	Condition	is_per_claim_startd_cmd	1389:7:37976:37998	4254161	0	True				
ANR	4254410	Identifier	is_per_claim_startd_cmd		4254161	0					
ANR	4254411	CompoundStatement		70:33:2051:2051	4254161	1					
ANR	4254412	IfStatement	if ( fast )		4254161	0					
ANR	4254413	Condition	fast	1392:8:38092:38095	4254161	0	True				
ANR	4254414	Identifier	fast		4254161	0					
ANR	4254415	CompoundStatement		73:15:2148:2148	4254161	1					
ANR	4254416	ExpressionStatement	my_cmd = VACATE_CLAIM_FAST	1393:5:38106:38132	4254161	0	True				
ANR	4254417	AssignmentExpression	my_cmd = VACATE_CLAIM_FAST		4254161	0		=			
ANR	4254418	Identifier	my_cmd		4254161	0					
ANR	4254419	Identifier	VACATE_CLAIM_FAST		4254161	1					
ANR	4254420	IfStatement	"if ( ! d -> startCommand ( my_cmd , & sock , 0 , & errstack ) )"		4254161	1					
ANR	4254421	Condition	"! d -> startCommand ( my_cmd , & sock , 0 , & errstack )"	1395:8:38148:38192	4254161	0	True				
ANR	4254422	UnaryOperationExpression	"! d -> startCommand ( my_cmd , & sock , 0 , & errstack )"		4254161	0					
ANR	4254423	UnaryOperator	!		4254161	0					
ANR	4254424	CallExpression	"d -> startCommand ( my_cmd , & sock , 0 , & errstack )"		4254161	1					
ANR	4254425	Callee	d -> startCommand		4254161	0					
ANR	4254426	PtrMemberAccess	d -> startCommand		4254161	0					
ANR	4254427	Identifier	d		4254161	0					
ANR	4254428	Identifier	startCommand		4254161	1					
ANR	4254429	ArgumentList	my_cmd		4254161	1					
ANR	4254430	Argument	my_cmd		4254161	0					
ANR	4254431	Identifier	my_cmd		4254161	0					
ANR	4254432	Argument	& sock		4254161	1					
ANR	4254433	UnaryOperationExpression	& sock		4254161	0					
ANR	4254434	UnaryOperator	&		4254161	0					
ANR	4254435	Identifier	sock		4254161	1					
ANR	4254436	Argument	0		4254161	2					
ANR	4254437	PrimaryExpression	0		4254161	0					
ANR	4254438	Argument	& errstack		4254161	3					
ANR	4254439	UnaryOperationExpression	& errstack		4254161	0					
ANR	4254440	UnaryOperator	&		4254161	0					
ANR	4254441	Identifier	errstack		4254161	1					
ANR	4254442	CompoundStatement		76:55:2244:2244	4254161	1					
ANR	4254443	ExpressionStatement	"fprintf ( stderr , ""ERROR\\n%s\\n"" , errstack . getFullText ( true ) )"	1396:5:38202:38260	4254161	0	True				
ANR	4254444	CallExpression	"fprintf ( stderr , ""ERROR\\n%s\\n"" , errstack . getFullText ( true ) )"		4254161	0					
ANR	4254445	Callee	fprintf		4254161	0					
ANR	4254446	Identifier	fprintf		4254161	0					
ANR	4254447	ArgumentList	stderr		4254161	1					
ANR	4254448	Argument	stderr		4254161	0					
ANR	4254449	Identifier	stderr		4254161	0					
ANR	4254450	Argument	"""ERROR\\n%s\\n"""		4254161	1					
ANR	4254451	PrimaryExpression	"""ERROR\\n%s\\n"""		4254161	0					
ANR	4254452	Argument	errstack . getFullText ( true )		4254161	2					
ANR	4254453	CallExpression	errstack . getFullText ( true )		4254161	0					
ANR	4254454	Callee	errstack . getFullText		4254161	0					
ANR	4254455	MemberAccess	errstack . getFullText		4254161	0					
ANR	4254456	Identifier	errstack		4254161	0					
ANR	4254457	Identifier	getFullText		4254161	1					
ANR	4254458	ArgumentList	true		4254161	1					
ANR	4254459	Argument	true		4254161	0					
ANR	4254460	Identifier	true		4254161	0					
ANR	4254461	IfStatement	if ( ! sock . code ( name ) || ! sock . end_of_message ( ) )		4254161	2					
ANR	4254462	Condition	! sock . code ( name ) || ! sock . end_of_message ( )	1398:8:38276:38317	4254161	0	True				
ANR	4254463	OrExpression	! sock . code ( name ) || ! sock . end_of_message ( )		4254161	0		||			
ANR	4254464	UnaryOperationExpression	! sock . code ( name )		4254161	0					
ANR	4254465	UnaryOperator	!		4254161	0					
ANR	4254466	CallExpression	sock . code ( name )		4254161	1					
ANR	4254467	Callee	sock . code		4254161	0					
ANR	4254468	MemberAccess	sock . code		4254161	0					
ANR	4254469	Identifier	sock		4254161	0					
ANR	4254470	Identifier	code		4254161	1					
ANR	4254471	ArgumentList	name		4254161	1					
ANR	4254472	Argument	name		4254161	0					
ANR	4254473	Identifier	name		4254161	0					
ANR	4254474	UnaryOperationExpression	! sock . end_of_message ( )		4254161	1					
ANR	4254475	UnaryOperator	!		4254161	0					
ANR	4254476	CallExpression	sock . end_of_message ( )		4254161	1					
ANR	4254477	Callee	sock . end_of_message		4254161	0					
ANR	4254478	MemberAccess	sock . end_of_message		4254161	0					
ANR	4254479	Identifier	sock		4254161	0					
ANR	4254480	Identifier	end_of_message		4254161	1					
ANR	4254481	ArgumentList			4254161	1					
ANR	4254482	CompoundStatement		79:53:2370:2370	4254161	1					
ANR	4254483	ExpressionStatement	"fprintf ( stderr , ""Can't send %s command to %s\\n"" , cmdToStr ( my_cmd ) , d -> idStr ( ) )"	1399:5:38328:38418	4254161	0	True				
ANR	4254484	CallExpression	"fprintf ( stderr , ""Can't send %s command to %s\\n"" , cmdToStr ( my_cmd ) , d -> idStr ( ) )"		4254161	0					
ANR	4254485	Callee	fprintf		4254161	0					
ANR	4254486	Identifier	fprintf		4254161	0					
ANR	4254487	ArgumentList	stderr		4254161	1					
ANR	4254488	Argument	stderr		4254161	0					
ANR	4254489	Identifier	stderr		4254161	0					
ANR	4254490	Argument	"""Can't send %s command to %s\\n"""		4254161	1					
ANR	4254491	PrimaryExpression	"""Can't send %s command to %s\\n"""		4254161	0					
ANR	4254492	Argument	cmdToStr ( my_cmd )		4254161	2					
ANR	4254493	CallExpression	cmdToStr ( my_cmd )		4254161	0					
ANR	4254494	Callee	cmdToStr		4254161	0					
ANR	4254495	Identifier	cmdToStr		4254161	0					
ANR	4254496	ArgumentList	my_cmd		4254161	1					
ANR	4254497	Argument	my_cmd		4254161	0					
ANR	4254498	Identifier	my_cmd		4254161	0					
ANR	4254499	Argument	d -> idStr ( )		4254161	3					
ANR	4254500	CallExpression	d -> idStr ( )		4254161	0					
ANR	4254501	Callee	d -> idStr		4254161	0					
ANR	4254502	PtrMemberAccess	d -> idStr		4254161	0					
ANR	4254503	Identifier	d		4254161	0					
ANR	4254504	Identifier	idStr		4254161	1					
ANR	4254505	ArgumentList			4254161	1					
ANR	4254506	ExpressionStatement	all_good = false	1401:5:38425:38441	4254161	1	True				
ANR	4254507	AssignmentExpression	all_good = false		4254161	0		=			
ANR	4254508	Identifier	all_good		4254161	0					
ANR	4254509	Identifier	false		4254161	1					
ANR	4254510	ReturnStatement	return ;	1402:5:38448:38454	4254161	2	True				
ANR	4254511	ElseStatement	else		4254161	0					
ANR	4254512	CompoundStatement		84:11:2516:2516	4254161	0					
ANR	4254513	ExpressionStatement	done = true	1404:5:38474:38485	4254161	0	True				
ANR	4254514	AssignmentExpression	done = true		4254161	0		=			
ANR	4254515	Identifier	done		4254161	0					
ANR	4254516	Identifier	true		4254161	1					
ANR	4254517	ElseStatement	else		4254161	0					
ANR	4254518	CompoundStatement		87:10:2552:2552	4254161	0					
ANR	4254519	IfStatement	if ( fast )		4254161	0					
ANR	4254520	Condition	fast	1407:8:38513:38516	4254161	0	True				
ANR	4254521	Identifier	fast		4254161	0					
ANR	4254522	CompoundStatement		88:15:2569:2569	4254161	1					
ANR	4254523	ExpressionStatement	my_cmd = VACATE_ALL_FAST	1408:5:38527:38551	4254161	0	True				
ANR	4254524	AssignmentExpression	my_cmd = VACATE_ALL_FAST		4254161	0		=			
ANR	4254525	Identifier	my_cmd		4254161	0					
ANR	4254526	Identifier	VACATE_ALL_FAST		4254161	1					
ANR	4254527	ElseStatement	else		4254161	0					
ANR	4254528	CompoundStatement		90:11:2613:2613	4254161	0					
ANR	4254529	ExpressionStatement	my_cmd = VACATE_ALL_CLAIMS	1410:5:38571:38597	4254161	0	True				
ANR	4254530	AssignmentExpression	my_cmd = VACATE_ALL_CLAIMS		4254161	0		=			
ANR	4254531	Identifier	my_cmd		4254161	0					
ANR	4254532	Identifier	VACATE_ALL_CLAIMS		4254161	1					
ANR	4254533	BreakStatement	break ;	1413:3:38613:38618	4254161	2	True				
ANR	4254534	Label	case PCKPT_JOB :	1415:2:38623:38637	4254161	3	True				
ANR	4254535	Identifier	PCKPT_JOB		4254161	0					
ANR	4254536	IfStatement	if ( is_per_claim_startd_cmd )		4254161	4					
ANR	4254537	Condition	is_per_claim_startd_cmd	1416:7:38646:38668	4254161	0	True				
ANR	4254538	Identifier	is_per_claim_startd_cmd		4254161	0					
ANR	4254539	CompoundStatement		97:33:2721:2721	4254161	1					
ANR	4254540	IfStatement	"if ( ! d -> startCommand ( my_cmd , & sock , 0 , & errstack ) )"		4254161	0					
ANR	4254541	Condition	"! d -> startCommand ( my_cmd , & sock , 0 , & errstack )"	1419:8:38762:38806	4254161	0	True				
ANR	4254542	UnaryOperationExpression	"! d -> startCommand ( my_cmd , & sock , 0 , & errstack )"		4254161	0					
ANR	4254543	UnaryOperator	!		4254161	0					
ANR	4254544	CallExpression	"d -> startCommand ( my_cmd , & sock , 0 , & errstack )"		4254161	1					
ANR	4254545	Callee	d -> startCommand		4254161	0					
ANR	4254546	PtrMemberAccess	d -> startCommand		4254161	0					
ANR	4254547	Identifier	d		4254161	0					
ANR	4254548	Identifier	startCommand		4254161	1					
ANR	4254549	ArgumentList	my_cmd		4254161	1					
ANR	4254550	Argument	my_cmd		4254161	0					
ANR	4254551	Identifier	my_cmd		4254161	0					
ANR	4254552	Argument	& sock		4254161	1					
ANR	4254553	UnaryOperationExpression	& sock		4254161	0					
ANR	4254554	UnaryOperator	&		4254161	0					
ANR	4254555	Identifier	sock		4254161	1					
ANR	4254556	Argument	0		4254161	2					
ANR	4254557	PrimaryExpression	0		4254161	0					
ANR	4254558	Argument	& errstack		4254161	3					
ANR	4254559	UnaryOperationExpression	& errstack		4254161	0					
ANR	4254560	UnaryOperator	&		4254161	0					
ANR	4254561	Identifier	errstack		4254161	1					
ANR	4254562	CompoundStatement		100:56:2859:2859	4254161	1					
ANR	4254563	ExpressionStatement	"fprintf ( stderr , ""ERROR\\n%s\\n"" , errstack . getFullText ( true ) )"	1420:5:38817:38876	4254161	0	True				
ANR	4254564	CallExpression	"fprintf ( stderr , ""ERROR\\n%s\\n"" , errstack . getFullText ( true ) )"		4254161	0					
ANR	4254565	Callee	fprintf		4254161	0					
ANR	4254566	Identifier	fprintf		4254161	0					
ANR	4254567	ArgumentList	stderr		4254161	1					
ANR	4254568	Argument	stderr		4254161	0					
ANR	4254569	Identifier	stderr		4254161	0					
ANR	4254570	Argument	"""ERROR\\n%s\\n"""		4254161	1					
ANR	4254571	PrimaryExpression	"""ERROR\\n%s\\n"""		4254161	0					
ANR	4254572	Argument	errstack . getFullText ( true )		4254161	2					
ANR	4254573	CallExpression	errstack . getFullText ( true )		4254161	0					
ANR	4254574	Callee	errstack . getFullText		4254161	0					
ANR	4254575	MemberAccess	errstack . getFullText		4254161	0					
ANR	4254576	Identifier	errstack		4254161	0					
ANR	4254577	Identifier	getFullText		4254161	1					
ANR	4254578	ArgumentList	true		4254161	1					
ANR	4254579	Argument	true		4254161	0					
ANR	4254580	Identifier	true		4254161	0					
ANR	4254581	IfStatement	if ( ! sock . code ( name ) || ! sock . end_of_message ( ) )		4254161	1					
ANR	4254582	Condition	! sock . code ( name ) || ! sock . end_of_message ( )	1422:8:38892:38933	4254161	0	True				
ANR	4254583	OrExpression	! sock . code ( name ) || ! sock . end_of_message ( )		4254161	0		||			
ANR	4254584	UnaryOperationExpression	! sock . code ( name )		4254161	0					
ANR	4254585	UnaryOperator	!		4254161	0					
ANR	4254586	CallExpression	sock . code ( name )		4254161	1					
ANR	4254587	Callee	sock . code		4254161	0					
ANR	4254588	MemberAccess	sock . code		4254161	0					
ANR	4254589	Identifier	sock		4254161	0					
ANR	4254590	Identifier	code		4254161	1					
ANR	4254591	ArgumentList	name		4254161	1					
ANR	4254592	Argument	name		4254161	0					
ANR	4254593	Identifier	name		4254161	0					
ANR	4254594	UnaryOperationExpression	! sock . end_of_message ( )		4254161	1					
ANR	4254595	UnaryOperator	!		4254161	0					
ANR	4254596	CallExpression	sock . end_of_message ( )		4254161	1					
ANR	4254597	Callee	sock . end_of_message		4254161	0					
ANR	4254598	MemberAccess	sock . end_of_message		4254161	0					
ANR	4254599	Identifier	sock		4254161	0					
ANR	4254600	Identifier	end_of_message		4254161	1					
ANR	4254601	ArgumentList			4254161	1					
ANR	4254602	CompoundStatement		103:53:2986:2986	4254161	1					
ANR	4254603	ExpressionStatement	"fprintf ( stderr , ""Can't send %s command to %s\\n"" , cmdToStr ( my_cmd ) , d -> idStr ( ) )"	1423:5:38944:39033	4254161	0	True				
ANR	4254604	CallExpression	"fprintf ( stderr , ""Can't send %s command to %s\\n"" , cmdToStr ( my_cmd ) , d -> idStr ( ) )"		4254161	0					
ANR	4254605	Callee	fprintf		4254161	0					
ANR	4254606	Identifier	fprintf		4254161	0					
ANR	4254607	ArgumentList	stderr		4254161	1					
ANR	4254608	Argument	stderr		4254161	0					
ANR	4254609	Identifier	stderr		4254161	0					
ANR	4254610	Argument	"""Can't send %s command to %s\\n"""		4254161	1					
ANR	4254611	PrimaryExpression	"""Can't send %s command to %s\\n"""		4254161	0					
ANR	4254612	Argument	cmdToStr ( my_cmd )		4254161	2					
ANR	4254613	CallExpression	cmdToStr ( my_cmd )		4254161	0					
ANR	4254614	Callee	cmdToStr		4254161	0					
ANR	4254615	Identifier	cmdToStr		4254161	0					
ANR	4254616	ArgumentList	my_cmd		4254161	1					
ANR	4254617	Argument	my_cmd		4254161	0					
ANR	4254618	Identifier	my_cmd		4254161	0					
ANR	4254619	Argument	d -> idStr ( )		4254161	3					
ANR	4254620	CallExpression	d -> idStr ( )		4254161	0					
ANR	4254621	Callee	d -> idStr		4254161	0					
ANR	4254622	PtrMemberAccess	d -> idStr		4254161	0					
ANR	4254623	Identifier	d		4254161	0					
ANR	4254624	Identifier	idStr		4254161	1					
ANR	4254625	ArgumentList			4254161	1					
ANR	4254626	ExpressionStatement	all_good = false	1425:5:39040:39056	4254161	1	True				
ANR	4254627	AssignmentExpression	all_good = false		4254161	0		=			
ANR	4254628	Identifier	all_good		4254161	0					
ANR	4254629	Identifier	false		4254161	1					
ANR	4254630	ReturnStatement	return ;	1426:5:39063:39069	4254161	2	True				
ANR	4254631	ElseStatement	else		4254161	0					
ANR	4254632	CompoundStatement		108:11:3131:3131	4254161	0					
ANR	4254633	ExpressionStatement	done = true	1428:5:39089:39100	4254161	0	True				
ANR	4254634	AssignmentExpression	done = true		4254161	0		=			
ANR	4254635	Identifier	done		4254161	0					
ANR	4254636	Identifier	true		4254161	1					
ANR	4254637	ElseStatement	else		4254161	0					
ANR	4254638	CompoundStatement		111:10:3167:3167	4254161	0					
ANR	4254639	ExpressionStatement	my_cmd = PCKPT_ALL_JOBS	1431:4:39124:39147	4254161	0	True				
ANR	4254640	AssignmentExpression	my_cmd = PCKPT_ALL_JOBS		4254161	0		=			
ANR	4254641	Identifier	my_cmd		4254161	0					
ANR	4254642	Identifier	PCKPT_ALL_JOBS		4254161	1					
ANR	4254643	BreakStatement	break ;	1433:3:39157:39162	4254161	5	True				
ANR	4254644	Label	case DAEMON_OFF :	1435:2:39167:39182	4254161	6	True				
ANR	4254645	Identifier	DAEMON_OFF		4254161	0					
ANR	4254646	IfStatement	if ( fast )		4254161	7					
ANR	4254647	Condition	fast	1437:7:39253:39256	4254161	0	True				
ANR	4254648	Identifier	fast		4254161	0					
ANR	4254649	CompoundStatement		118:14:3309:3309	4254161	1					
ANR	4254650	ExpressionStatement	my_cmd = DAEMON_OFF_FAST	1438:4:39266:39290	4254161	0	True				
ANR	4254651	AssignmentExpression	my_cmd = DAEMON_OFF_FAST		4254161	0		=			
ANR	4254652	Identifier	my_cmd		4254161	0					
ANR	4254653	Identifier	DAEMON_OFF_FAST		4254161	1					
ANR	4254654	ElseStatement	else		4254161	0					
ANR	4254655	IfStatement	if ( peaceful_shutdown )		4254161	0					
ANR	4254656	Condition	peaceful_shutdown	1439:14:39306:39322	4254161	0	True				
ANR	4254657	Identifier	peaceful_shutdown		4254161	0					
ANR	4254658	CompoundStatement		120:34:3375:3375	4254161	1					
ANR	4254659	ExpressionStatement	my_cmd = DAEMON_OFF_PEACEFUL	1440:4:39332:39360	4254161	0	True				
ANR	4254660	AssignmentExpression	my_cmd = DAEMON_OFF_PEACEFUL		4254161	0		=			
ANR	4254661	Identifier	my_cmd		4254161	0					
ANR	4254662	Identifier	DAEMON_OFF_PEACEFUL		4254161	1					
ANR	4254663	IfStatement	"if ( ! d -> startCommand ( my_cmd , & sock , 0 , & errstack ) )"		4254161	8					
ANR	4254664	Condition	"! d -> startCommand ( my_cmd , & sock , 0 , & errstack )"	1442:7:39374:39419	4254161	0	True				
ANR	4254665	UnaryOperationExpression	"! d -> startCommand ( my_cmd , & sock , 0 , & errstack )"		4254161	0					
ANR	4254666	UnaryOperator	!		4254161	0					
ANR	4254667	CallExpression	"d -> startCommand ( my_cmd , & sock , 0 , & errstack )"		4254161	1					
ANR	4254668	Callee	d -> startCommand		4254161	0					
ANR	4254669	PtrMemberAccess	d -> startCommand		4254161	0					
ANR	4254670	Identifier	d		4254161	0					
ANR	4254671	Identifier	startCommand		4254161	1					
ANR	4254672	ArgumentList	my_cmd		4254161	1					
ANR	4254673	Argument	my_cmd		4254161	0					
ANR	4254674	Identifier	my_cmd		4254161	0					
ANR	4254675	Argument	& sock		4254161	1					
ANR	4254676	UnaryOperationExpression	& sock		4254161	0					
ANR	4254677	UnaryOperator	&		4254161	0					
ANR	4254678	Identifier	sock		4254161	1					
ANR	4254679	Argument	0		4254161	2					
ANR	4254680	PrimaryExpression	0		4254161	0					
ANR	4254681	Argument	& errstack		4254161	3					
ANR	4254682	UnaryOperationExpression	& errstack		4254161	0					
ANR	4254683	UnaryOperator	&		4254161	0					
ANR	4254684	Identifier	errstack		4254161	1					
ANR	4254685	CompoundStatement		123:56:3472:3472	4254161	1					
ANR	4254686	ExpressionStatement	"fprintf ( stderr , ""ERROR\\n%s\\n"" , errstack . getFullText ( true ) )"	1443:4:39429:39489	4254161	0	True				
ANR	4254687	CallExpression	"fprintf ( stderr , ""ERROR\\n%s\\n"" , errstack . getFullText ( true ) )"		4254161	0					
ANR	4254688	Callee	fprintf		4254161	0					
ANR	4254689	Identifier	fprintf		4254161	0					
ANR	4254690	ArgumentList	stderr		4254161	1					
ANR	4254691	Argument	stderr		4254161	0					
ANR	4254692	Identifier	stderr		4254161	0					
ANR	4254693	Argument	"""ERROR\\n%s\\n"""		4254161	1					
ANR	4254694	PrimaryExpression	"""ERROR\\n%s\\n"""		4254161	0					
ANR	4254695	Argument	errstack . getFullText ( true )		4254161	2					
ANR	4254696	CallExpression	errstack . getFullText ( true )		4254161	0					
ANR	4254697	Callee	errstack . getFullText		4254161	0					
ANR	4254698	MemberAccess	errstack . getFullText		4254161	0					
ANR	4254699	Identifier	errstack		4254161	0					
ANR	4254700	Identifier	getFullText		4254161	1					
ANR	4254701	ArgumentList	true		4254161	1					
ANR	4254702	Argument	true		4254161	0					
ANR	4254703	Identifier	true		4254161	0					
ANR	4254704	IfStatement	if ( ! sock . code ( psubsys ) || ! sock . end_of_message ( ) )		4254161	9					
ANR	4254705	Condition	! sock . code ( psubsys ) || ! sock . end_of_message ( )	1445:7:39503:39549	4254161	0	True				
ANR	4254706	OrExpression	! sock . code ( psubsys ) || ! sock . end_of_message ( )		4254161	0		||			
ANR	4254707	UnaryOperationExpression	! sock . code ( psubsys )		4254161	0					
ANR	4254708	UnaryOperator	!		4254161	0					
ANR	4254709	CallExpression	sock . code ( psubsys )		4254161	1					
ANR	4254710	Callee	sock . code		4254161	0					
ANR	4254711	MemberAccess	sock . code		4254161	0					
ANR	4254712	Identifier	sock		4254161	0					
ANR	4254713	Identifier	code		4254161	1					
ANR	4254714	ArgumentList	psubsys		4254161	1					
ANR	4254715	Argument	psubsys		4254161	0					
ANR	4254716	Identifier	psubsys		4254161	0					
ANR	4254717	UnaryOperationExpression	! sock . end_of_message ( )		4254161	1					
ANR	4254718	UnaryOperator	!		4254161	0					
ANR	4254719	CallExpression	sock . end_of_message ( )		4254161	1					
ANR	4254720	Callee	sock . end_of_message		4254161	0					
ANR	4254721	MemberAccess	sock . end_of_message		4254161	0					
ANR	4254722	Identifier	sock		4254161	0					
ANR	4254723	Identifier	end_of_message		4254161	1					
ANR	4254724	ArgumentList			4254161	1					
ANR	4254725	CompoundStatement		126:57:3602:3602	4254161	1					
ANR	4254726	ExpressionStatement	"fprintf ( stderr , ""Can't send %s command to %s\\n"" , cmdToStr ( my_cmd ) , d -> idStr ( ) )"	1446:4:39559:39646	4254161	0	True				
ANR	4254727	CallExpression	"fprintf ( stderr , ""Can't send %s command to %s\\n"" , cmdToStr ( my_cmd ) , d -> idStr ( ) )"		4254161	0					
ANR	4254728	Callee	fprintf		4254161	0					
ANR	4254729	Identifier	fprintf		4254161	0					
ANR	4254730	ArgumentList	stderr		4254161	1					
ANR	4254731	Argument	stderr		4254161	0					
ANR	4254732	Identifier	stderr		4254161	0					
ANR	4254733	Argument	"""Can't send %s command to %s\\n"""		4254161	1					
ANR	4254734	PrimaryExpression	"""Can't send %s command to %s\\n"""		4254161	0					
ANR	4254735	Argument	cmdToStr ( my_cmd )		4254161	2					
ANR	4254736	CallExpression	cmdToStr ( my_cmd )		4254161	0					
ANR	4254737	Callee	cmdToStr		4254161	0					
ANR	4254738	Identifier	cmdToStr		4254161	0					
ANR	4254739	ArgumentList	my_cmd		4254161	1					
ANR	4254740	Argument	my_cmd		4254161	0					
ANR	4254741	Identifier	my_cmd		4254161	0					
ANR	4254742	Argument	d -> idStr ( )		4254161	3					
ANR	4254743	CallExpression	d -> idStr ( )		4254161	0					
ANR	4254744	Callee	d -> idStr		4254161	0					
ANR	4254745	PtrMemberAccess	d -> idStr		4254161	0					
ANR	4254746	Identifier	d		4254161	0					
ANR	4254747	Identifier	idStr		4254161	1					
ANR	4254748	ArgumentList			4254161	1					
ANR	4254749	ExpressionStatement	all_good = false	1448:4:39652:39668	4254161	1	True				
ANR	4254750	AssignmentExpression	all_good = false		4254161	0		=			
ANR	4254751	Identifier	all_good		4254161	0					
ANR	4254752	Identifier	false		4254161	1					
ANR	4254753	ReturnStatement	return ;	1449:4:39674:39680	4254161	2	True				
ANR	4254754	ElseStatement	else		4254161	0					
ANR	4254755	CompoundStatement		131:10:3741:3741	4254161	0					
ANR	4254756	ExpressionStatement	done = true	1451:4:39698:39709	4254161	0	True				
ANR	4254757	AssignmentExpression	done = true		4254161	0		=			
ANR	4254758	Identifier	done		4254161	0					
ANR	4254759	Identifier	true		4254161	1					
ANR	4254760	BreakStatement	break ;	1453:3:39719:39724	4254161	10	True				
ANR	4254761	Label	case DAEMON_ON :	1455:2:39729:39743	4254161	11	True				
ANR	4254762	Identifier	DAEMON_ON		4254161	0					
ANR	4254763	IfStatement	"if ( ! d -> startCommand ( my_cmd , & sock , 0 , & errstack ) )"		4254161	12					
ANR	4254764	Condition	"! d -> startCommand ( my_cmd , & sock , 0 , & errstack )"	1456:7:39752:39796	4254161	0	True				
ANR	4254765	UnaryOperationExpression	"! d -> startCommand ( my_cmd , & sock , 0 , & errstack )"		4254161	0					
ANR	4254766	UnaryOperator	!		4254161	0					
ANR	4254767	CallExpression	"d -> startCommand ( my_cmd , & sock , 0 , & errstack )"		4254161	1					
ANR	4254768	Callee	d -> startCommand		4254161	0					
ANR	4254769	PtrMemberAccess	d -> startCommand		4254161	0					
ANR	4254770	Identifier	d		4254161	0					
ANR	4254771	Identifier	startCommand		4254161	1					
ANR	4254772	ArgumentList	my_cmd		4254161	1					
ANR	4254773	Argument	my_cmd		4254161	0					
ANR	4254774	Identifier	my_cmd		4254161	0					
ANR	4254775	Argument	& sock		4254161	1					
ANR	4254776	UnaryOperationExpression	& sock		4254161	0					
ANR	4254777	UnaryOperator	&		4254161	0					
ANR	4254778	Identifier	sock		4254161	1					
ANR	4254779	Argument	0		4254161	2					
ANR	4254780	PrimaryExpression	0		4254161	0					
ANR	4254781	Argument	& errstack		4254161	3					
ANR	4254782	UnaryOperationExpression	& errstack		4254161	0					
ANR	4254783	UnaryOperator	&		4254161	0					
ANR	4254784	Identifier	errstack		4254161	1					
ANR	4254785	CompoundStatement		137:55:3849:3849	4254161	1					
ANR	4254786	ExpressionStatement	"fprintf ( stderr , ""ERROR\\n%s\\n"" , errstack . getFullText ( true ) )"	1457:4:39806:39866	4254161	0	True				
ANR	4254787	CallExpression	"fprintf ( stderr , ""ERROR\\n%s\\n"" , errstack . getFullText ( true ) )"		4254161	0					
ANR	4254788	Callee	fprintf		4254161	0					
ANR	4254789	Identifier	fprintf		4254161	0					
ANR	4254790	ArgumentList	stderr		4254161	1					
ANR	4254791	Argument	stderr		4254161	0					
ANR	4254792	Identifier	stderr		4254161	0					
ANR	4254793	Argument	"""ERROR\\n%s\\n"""		4254161	1					
ANR	4254794	PrimaryExpression	"""ERROR\\n%s\\n"""		4254161	0					
ANR	4254795	Argument	errstack . getFullText ( true )		4254161	2					
ANR	4254796	CallExpression	errstack . getFullText ( true )		4254161	0					
ANR	4254797	Callee	errstack . getFullText		4254161	0					
ANR	4254798	MemberAccess	errstack . getFullText		4254161	0					
ANR	4254799	Identifier	errstack		4254161	0					
ANR	4254800	Identifier	getFullText		4254161	1					
ANR	4254801	ArgumentList	true		4254161	1					
ANR	4254802	Argument	true		4254161	0					
ANR	4254803	Identifier	true		4254161	0					
ANR	4254804	IfStatement	if ( ! sock . code ( psubsys ) || ! sock . end_of_message ( ) )		4254161	13					
ANR	4254805	Condition	! sock . code ( psubsys ) || ! sock . end_of_message ( )	1459:7:39880:39926	4254161	0	True				
ANR	4254806	OrExpression	! sock . code ( psubsys ) || ! sock . end_of_message ( )		4254161	0		||			
ANR	4254807	UnaryOperationExpression	! sock . code ( psubsys )		4254161	0					
ANR	4254808	UnaryOperator	!		4254161	0					
ANR	4254809	CallExpression	sock . code ( psubsys )		4254161	1					
ANR	4254810	Callee	sock . code		4254161	0					
ANR	4254811	MemberAccess	sock . code		4254161	0					
ANR	4254812	Identifier	sock		4254161	0					
ANR	4254813	Identifier	code		4254161	1					
ANR	4254814	ArgumentList	psubsys		4254161	1					
ANR	4254815	Argument	psubsys		4254161	0					
ANR	4254816	Identifier	psubsys		4254161	0					
ANR	4254817	UnaryOperationExpression	! sock . end_of_message ( )		4254161	1					
ANR	4254818	UnaryOperator	!		4254161	0					
ANR	4254819	CallExpression	sock . end_of_message ( )		4254161	1					
ANR	4254820	Callee	sock . end_of_message		4254161	0					
ANR	4254821	MemberAccess	sock . end_of_message		4254161	0					
ANR	4254822	Identifier	sock		4254161	0					
ANR	4254823	Identifier	end_of_message		4254161	1					
ANR	4254824	ArgumentList			4254161	1					
ANR	4254825	CompoundStatement		140:57:3979:3979	4254161	1					
ANR	4254826	ExpressionStatement	"fprintf ( stderr , ""Can't send %s command to %s\\n"" , cmdToStr ( my_cmd ) , d -> idStr ( ) )"	1460:4:39936:40023	4254161	0	True				
ANR	4254827	CallExpression	"fprintf ( stderr , ""Can't send %s command to %s\\n"" , cmdToStr ( my_cmd ) , d -> idStr ( ) )"		4254161	0					
ANR	4254828	Callee	fprintf		4254161	0					
ANR	4254829	Identifier	fprintf		4254161	0					
ANR	4254830	ArgumentList	stderr		4254161	1					
ANR	4254831	Argument	stderr		4254161	0					
ANR	4254832	Identifier	stderr		4254161	0					
ANR	4254833	Argument	"""Can't send %s command to %s\\n"""		4254161	1					
ANR	4254834	PrimaryExpression	"""Can't send %s command to %s\\n"""		4254161	0					
ANR	4254835	Argument	cmdToStr ( my_cmd )		4254161	2					
ANR	4254836	CallExpression	cmdToStr ( my_cmd )		4254161	0					
ANR	4254837	Callee	cmdToStr		4254161	0					
ANR	4254838	Identifier	cmdToStr		4254161	0					
ANR	4254839	ArgumentList	my_cmd		4254161	1					
ANR	4254840	Argument	my_cmd		4254161	0					
ANR	4254841	Identifier	my_cmd		4254161	0					
ANR	4254842	Argument	d -> idStr ( )		4254161	3					
ANR	4254843	CallExpression	d -> idStr ( )		4254161	0					
ANR	4254844	Callee	d -> idStr		4254161	0					
ANR	4254845	PtrMemberAccess	d -> idStr		4254161	0					
ANR	4254846	Identifier	d		4254161	0					
ANR	4254847	Identifier	idStr		4254161	1					
ANR	4254848	ArgumentList			4254161	1					
ANR	4254849	ExpressionStatement	all_good = false	1462:4:40029:40045	4254161	1	True				
ANR	4254850	AssignmentExpression	all_good = false		4254161	0		=			
ANR	4254851	Identifier	all_good		4254161	0					
ANR	4254852	Identifier	false		4254161	1					
ANR	4254853	ReturnStatement	return ;	1463:4:40051:40057	4254161	2	True				
ANR	4254854	ElseStatement	else		4254161	0					
ANR	4254855	CompoundStatement		145:10:4118:4118	4254161	0					
ANR	4254856	ExpressionStatement	done = true	1465:4:40075:40086	4254161	0	True				
ANR	4254857	AssignmentExpression	done = true		4254161	0		=			
ANR	4254858	Identifier	done		4254161	0					
ANR	4254859	Identifier	true		4254161	1					
ANR	4254860	BreakStatement	break ;	1467:3:40096:40101	4254161	14	True				
ANR	4254861	Label	case RESTART :	1469:2:40106:40118	4254161	15	True				
ANR	4254862	Identifier	RESTART		4254161	0					
ANR	4254863	IfStatement	if ( peaceful_shutdown )		4254161	16					
ANR	4254864	Condition	peaceful_shutdown	1470:7:40127:40143	4254161	0	True				
ANR	4254865	Identifier	peaceful_shutdown		4254161	0					
ANR	4254866	CompoundStatement		151:27:4196:4196	4254161	1					
ANR	4254867	ExpressionStatement	my_cmd = RESTART_PEACEFUL	1471:4:40153:40178	4254161	0	True				
ANR	4254868	AssignmentExpression	my_cmd = RESTART_PEACEFUL		4254161	0		=			
ANR	4254869	Identifier	my_cmd		4254161	0					
ANR	4254870	Identifier	RESTART_PEACEFUL		4254161	1					
ANR	4254871	BreakStatement	break ;	1473:3:40188:40193	4254161	17	True				
ANR	4254872	Label	case DAEMONS_OFF :	1475:2:40198:40214	4254161	18	True				
ANR	4254873	Identifier	DAEMONS_OFF		4254161	0					
ANR	4254874	IfStatement	if ( fast )		4254161	19					
ANR	4254875	Condition	fast	1477:7:40285:40288	4254161	0	True				
ANR	4254876	Identifier	fast		4254161	0					
ANR	4254877	CompoundStatement		158:14:4341:4341	4254161	1					
ANR	4254878	ExpressionStatement	my_cmd = DAEMONS_OFF_FAST	1478:4:40298:40323	4254161	0	True				
ANR	4254879	AssignmentExpression	my_cmd = DAEMONS_OFF_FAST		4254161	0		=			
ANR	4254880	Identifier	my_cmd		4254161	0					
ANR	4254881	Identifier	DAEMONS_OFF_FAST		4254161	1					
ANR	4254882	ElseStatement	else		4254161	0					
ANR	4254883	IfStatement	if ( peaceful_shutdown )		4254161	0					
ANR	4254884	Condition	peaceful_shutdown	1479:14:40339:40355	4254161	0	True				
ANR	4254885	Identifier	peaceful_shutdown		4254161	0					
ANR	4254886	CompoundStatement		160:34:4408:4408	4254161	1					
ANR	4254887	ExpressionStatement	my_cmd = DAEMONS_OFF_PEACEFUL	1480:4:40365:40394	4254161	0	True				
ANR	4254888	AssignmentExpression	my_cmd = DAEMONS_OFF_PEACEFUL		4254161	0		=			
ANR	4254889	Identifier	my_cmd		4254161	0					
ANR	4254890	Identifier	DAEMONS_OFF_PEACEFUL		4254161	1					
ANR	4254891	IfStatement	if ( d_type != DT_MASTER )		4254161	20					
ANR	4254892	Condition	d_type != DT_MASTER	1482:7:40408:40426	4254161	0	True				
ANR	4254893	EqualityExpression	d_type != DT_MASTER		4254161	0		!=			
ANR	4254894	Identifier	d_type		4254161	0					
ANR	4254895	Identifier	DT_MASTER		4254161	1					
ANR	4254896	CompoundStatement		163:29:4479:4479	4254161	1					
ANR	4254897	IfStatement	if ( fast )		4254161	0					
ANR	4254898	Condition	fast	1487:8:40664:40667	4254161	0	True				
ANR	4254899	Identifier	fast		4254161	0					
ANR	4254900	CompoundStatement		168:15:4720:4720	4254161	1					
ANR	4254901	ExpressionStatement	my_cmd = DC_OFF_FAST	1488:5:40678:40698	4254161	0	True				
ANR	4254902	AssignmentExpression	my_cmd = DC_OFF_FAST		4254161	0		=			
ANR	4254903	Identifier	my_cmd		4254161	0					
ANR	4254904	Identifier	DC_OFF_FAST		4254161	1					
ANR	4254905	ElseStatement	else		4254161	0					
ANR	4254906	IfStatement	if ( peaceful_shutdown )		4254161	0					
ANR	4254907	Condition	peaceful_shutdown	1489:15:40715:40731	4254161	0	True				
ANR	4254908	Identifier	peaceful_shutdown		4254161	0					
ANR	4254909	CompoundStatement		170:35:4784:4784	4254161	1					
ANR	4254910	ExpressionStatement	my_cmd = DC_OFF_PEACEFUL	1490:5:40742:40766	4254161	0	True				
ANR	4254911	AssignmentExpression	my_cmd = DC_OFF_PEACEFUL		4254161	0		=			
ANR	4254912	Identifier	my_cmd		4254161	0					
ANR	4254913	Identifier	DC_OFF_PEACEFUL		4254161	1					
ANR	4254914	ElseStatement	else		4254161	0					
ANR	4254915	CompoundStatement		172:11:4828:4828	4254161	0					
ANR	4254916	ExpressionStatement	my_cmd = DC_OFF_GRACEFUL	1492:5:40786:40810	4254161	0	True				
ANR	4254917	AssignmentExpression	my_cmd = DC_OFF_GRACEFUL		4254161	0		=			
ANR	4254918	Identifier	my_cmd		4254161	0					
ANR	4254919	Identifier	DC_OFF_GRACEFUL		4254161	1					
ANR	4254920	BreakStatement	break ;	1495:3:40826:40831	4254161	21	True				
ANR	4254921	Label	case DC_OFF_GRACEFUL :	1497:2:40836:40856	4254161	22	True				
ANR	4254922	Identifier	DC_OFF_GRACEFUL		4254161	0					
ANR	4254923	IfStatement	if ( fast )		4254161	23					
ANR	4254924	Condition	fast	1499:7:40927:40930	4254161	0	True				
ANR	4254925	Identifier	fast		4254161	0					
ANR	4254926	CompoundStatement		180:14:4983:4983	4254161	1					
ANR	4254927	ExpressionStatement	my_cmd = DC_OFF_FAST	1500:4:40940:40960	4254161	0	True				
ANR	4254928	AssignmentExpression	my_cmd = DC_OFF_FAST		4254161	0		=			
ANR	4254929	Identifier	my_cmd		4254161	0					
ANR	4254930	Identifier	DC_OFF_FAST		4254161	1					
ANR	4254931	ElseStatement	else		4254161	0					
ANR	4254932	IfStatement	if ( peaceful_shutdown )		4254161	0					
ANR	4254933	Condition	peaceful_shutdown	1501:14:40976:40992	4254161	0	True				
ANR	4254934	Identifier	peaceful_shutdown		4254161	0					
ANR	4254935	CompoundStatement		182:34:5045:5045	4254161	1					
ANR	4254936	ExpressionStatement	my_cmd = DC_OFF_PEACEFUL	1502:4:41002:41026	4254161	0	True				
ANR	4254937	AssignmentExpression	my_cmd = DC_OFF_PEACEFUL		4254161	0		=			
ANR	4254938	Identifier	my_cmd		4254161	0					
ANR	4254939	Identifier	DC_OFF_PEACEFUL		4254161	1					
ANR	4254940	BreakStatement	break ;	1504:3:41036:41041	4254161	24	True				
ANR	4254941	Label	case DC_RECONFIG_FULL :	1506:2:41046:41067	4254161	25	True				
ANR	4254942	Identifier	DC_RECONFIG_FULL		4254161	0					
ANR	4254943	BreakStatement	break ;	1508:3:41093:41098	4254161	26	True				
ANR	4254944	Label	case SET_SHUTDOWN_PROGRAM :	1509:2:41102:41127	4254161	27	True				
ANR	4254945	Identifier	SET_SHUTDOWN_PROGRAM		4254161	0					
ANR	4254946	CompoundStatement		191:2:5180:5180	4254161	28					
ANR	4254947	Statement	char	1511:3:41136:41139	4254161	0	True				
ANR	4254948	Statement	*	1511:8:41141:41141	4254161	1	True				
ANR	4254949	Statement	pexec	1511:9:41142:41146	4254161	2	True				
ANR	4254950	Statement	=	1511:15:41148:41148	4254161	3	True				
ANR	4254951	Statement	const_cast	1511:17:41150:41159	4254161	4	True				
ANR	4254952	Statement	<	1511:27:41160:41160	4254161	5	True				
ANR	4254953	Statement	char	1511:28:41161:41164	4254161	6	True				
ANR	4254954	Statement	*	1511:33:41166:41166	4254161	7	True				
ANR	4254955	Statement	>	1511:34:41167:41167	4254161	8	True				
ANR	4254956	ExpressionStatement	exec_program	1511:35:41168:41182	4254161	9	True				
ANR	4254957	Identifier	exec_program		4254161	0					
ANR	4254958	IfStatement	"if ( ! d -> startCommand ( my_cmd , & sock , 0 , & errstack ) )"		4254161	10					
ANR	4254959	Condition	"! d -> startCommand ( my_cmd , & sock , 0 , & errstack )"	1512:7:41192:41236	4254161	0	True				
ANR	4254960	UnaryOperationExpression	"! d -> startCommand ( my_cmd , & sock , 0 , & errstack )"		4254161	0					
ANR	4254961	UnaryOperator	!		4254161	0					
ANR	4254962	CallExpression	"d -> startCommand ( my_cmd , & sock , 0 , & errstack )"		4254161	1					
ANR	4254963	Callee	d -> startCommand		4254161	0					
ANR	4254964	PtrMemberAccess	d -> startCommand		4254161	0					
ANR	4254965	Identifier	d		4254161	0					
ANR	4254966	Identifier	startCommand		4254161	1					
ANR	4254967	ArgumentList	my_cmd		4254161	1					
ANR	4254968	Argument	my_cmd		4254161	0					
ANR	4254969	Identifier	my_cmd		4254161	0					
ANR	4254970	Argument	& sock		4254161	1					
ANR	4254971	UnaryOperationExpression	& sock		4254161	0					
ANR	4254972	UnaryOperator	&		4254161	0					
ANR	4254973	Identifier	sock		4254161	1					
ANR	4254974	Argument	0		4254161	2					
ANR	4254975	PrimaryExpression	0		4254161	0					
ANR	4254976	Argument	& errstack		4254161	3					
ANR	4254977	UnaryOperationExpression	& errstack		4254161	0					
ANR	4254978	UnaryOperator	&		4254161	0					
ANR	4254979	Identifier	errstack		4254161	1					
ANR	4254980	CompoundStatement		193:55:5289:5289	4254161	1					
ANR	4254981	ExpressionStatement	"fprintf ( stderr , ""ERROR\\n%s\\n"" , errstack . getFullText ( true ) )"	1513:4:41246:41306	4254161	0	True				
ANR	4254982	CallExpression	"fprintf ( stderr , ""ERROR\\n%s\\n"" , errstack . getFullText ( true ) )"		4254161	0					
ANR	4254983	Callee	fprintf		4254161	0					
ANR	4254984	Identifier	fprintf		4254161	0					
ANR	4254985	ArgumentList	stderr		4254161	1					
ANR	4254986	Argument	stderr		4254161	0					
ANR	4254987	Identifier	stderr		4254161	0					
ANR	4254988	Argument	"""ERROR\\n%s\\n"""		4254161	1					
ANR	4254989	PrimaryExpression	"""ERROR\\n%s\\n"""		4254161	0					
ANR	4254990	Argument	errstack . getFullText ( true )		4254161	2					
ANR	4254991	CallExpression	errstack . getFullText ( true )		4254161	0					
ANR	4254992	Callee	errstack . getFullText		4254161	0					
ANR	4254993	MemberAccess	errstack . getFullText		4254161	0					
ANR	4254994	Identifier	errstack		4254161	0					
ANR	4254995	Identifier	getFullText		4254161	1					
ANR	4254996	ArgumentList	true		4254161	1					
ANR	4254997	Argument	true		4254161	0					
ANR	4254998	Identifier	true		4254161	0					
ANR	4254999	IfStatement	if ( ! sock . code ( pexec ) || ! sock . end_of_message ( ) )		4254161	11					
ANR	4255000	Condition	! sock . code ( pexec ) || ! sock . end_of_message ( )	1515:7:41320:41364	4254161	0	True				
ANR	4255001	OrExpression	! sock . code ( pexec ) || ! sock . end_of_message ( )		4254161	0		||			
ANR	4255002	UnaryOperationExpression	! sock . code ( pexec )		4254161	0					
ANR	4255003	UnaryOperator	!		4254161	0					
ANR	4255004	CallExpression	sock . code ( pexec )		4254161	1					
ANR	4255005	Callee	sock . code		4254161	0					
ANR	4255006	MemberAccess	sock . code		4254161	0					
ANR	4255007	Identifier	sock		4254161	0					
ANR	4255008	Identifier	code		4254161	1					
ANR	4255009	ArgumentList	pexec		4254161	1					
ANR	4255010	Argument	pexec		4254161	0					
ANR	4255011	Identifier	pexec		4254161	0					
ANR	4255012	UnaryOperationExpression	! sock . end_of_message ( )		4254161	1					
ANR	4255013	UnaryOperator	!		4254161	0					
ANR	4255014	CallExpression	sock . end_of_message ( )		4254161	1					
ANR	4255015	Callee	sock . end_of_message		4254161	0					
ANR	4255016	MemberAccess	sock . end_of_message		4254161	0					
ANR	4255017	Identifier	sock		4254161	0					
ANR	4255018	Identifier	end_of_message		4254161	1					
ANR	4255019	ArgumentList			4254161	1					
ANR	4255020	CompoundStatement		196:55:5417:5417	4254161	1					
ANR	4255021	ExpressionStatement	"fprintf ( stderr , ""Can't send %s command to %s\\n"" , cmdToStr ( my_cmd ) , d -> idStr ( ) )"	1516:4:41374:41461	4254161	0	True				
ANR	4255022	CallExpression	"fprintf ( stderr , ""Can't send %s command to %s\\n"" , cmdToStr ( my_cmd ) , d -> idStr ( ) )"		4254161	0					
ANR	4255023	Callee	fprintf		4254161	0					
ANR	4255024	Identifier	fprintf		4254161	0					
ANR	4255025	ArgumentList	stderr		4254161	1					
ANR	4255026	Argument	stderr		4254161	0					
ANR	4255027	Identifier	stderr		4254161	0					
ANR	4255028	Argument	"""Can't send %s command to %s\\n"""		4254161	1					
ANR	4255029	PrimaryExpression	"""Can't send %s command to %s\\n"""		4254161	0					
ANR	4255030	Argument	cmdToStr ( my_cmd )		4254161	2					
ANR	4255031	CallExpression	cmdToStr ( my_cmd )		4254161	0					
ANR	4255032	Callee	cmdToStr		4254161	0					
ANR	4255033	Identifier	cmdToStr		4254161	0					
ANR	4255034	ArgumentList	my_cmd		4254161	1					
ANR	4255035	Argument	my_cmd		4254161	0					
ANR	4255036	Identifier	my_cmd		4254161	0					
ANR	4255037	Argument	d -> idStr ( )		4254161	3					
ANR	4255038	CallExpression	d -> idStr ( )		4254161	0					
ANR	4255039	Callee	d -> idStr		4254161	0					
ANR	4255040	PtrMemberAccess	d -> idStr		4254161	0					
ANR	4255041	Identifier	d		4254161	0					
ANR	4255042	Identifier	idStr		4254161	1					
ANR	4255043	ArgumentList			4254161	1					
ANR	4255044	ExpressionStatement	all_good = false	1518:4:41467:41483	4254161	1	True				
ANR	4255045	AssignmentExpression	all_good = false		4254161	0		=			
ANR	4255046	Identifier	all_good		4254161	0					
ANR	4255047	Identifier	false		4254161	1					
ANR	4255048	ReturnStatement	return ;	1519:4:41489:41495	4254161	2	True				
ANR	4255049	ElseStatement	else		4254161	0					
ANR	4255050	CompoundStatement		201:10:5556:5556	4254161	0					
ANR	4255051	ExpressionStatement	done = true	1521:4:41513:41524	4254161	0	True				
ANR	4255052	AssignmentExpression	done = true		4254161	0		=			
ANR	4255053	Identifier	done		4254161	0					
ANR	4255054	Identifier	true		4254161	1					
ANR	4255055	BreakStatement	break ;	1523:3:41534:41539	4254161	12	True				
ANR	4255056	Label	default :	1526:2:41548:41555	4254161	29	True				
ANR	4255057	Identifier	default		4254161	0					
ANR	4255058	BreakStatement	break ;	1527:3:41560:41565	4254161	30	True				
ANR	4255059	IfStatement	if ( ! done )		4254161	22					
ANR	4255060	Condition	! done	1530:6:41578:41582	4254161	0	True				
ANR	4255061	UnaryOperationExpression	! done		4254161	0					
ANR	4255062	UnaryOperator	!		4254161	0					
ANR	4255063	Identifier	done		4254161	1					
ANR	4255064	CompoundStatement		211:14:5635:5635	4254161	1					
ANR	4255065	IfStatement	"if ( ! d -> sendCommand ( my_cmd , & sock , 0 , & errstack ) )"		4254161	0					
ANR	4255066	Condition	"! d -> sendCommand ( my_cmd , & sock , 0 , & errstack )"	1531:7:41595:41638	4254161	0	True				
ANR	4255067	UnaryOperationExpression	"! d -> sendCommand ( my_cmd , & sock , 0 , & errstack )"		4254161	0					
ANR	4255068	UnaryOperator	!		4254161	0					
ANR	4255069	CallExpression	"d -> sendCommand ( my_cmd , & sock , 0 , & errstack )"		4254161	1					
ANR	4255070	Callee	d -> sendCommand		4254161	0					
ANR	4255071	PtrMemberAccess	d -> sendCommand		4254161	0					
ANR	4255072	Identifier	d		4254161	0					
ANR	4255073	Identifier	sendCommand		4254161	1					
ANR	4255074	ArgumentList	my_cmd		4254161	1					
ANR	4255075	Argument	my_cmd		4254161	0					
ANR	4255076	Identifier	my_cmd		4254161	0					
ANR	4255077	Argument	& sock		4254161	1					
ANR	4255078	UnaryOperationExpression	& sock		4254161	0					
ANR	4255079	UnaryOperator	&		4254161	0					
ANR	4255080	Identifier	sock		4254161	1					
ANR	4255081	Argument	0		4254161	2					
ANR	4255082	PrimaryExpression	0		4254161	0					
ANR	4255083	Argument	& errstack		4254161	3					
ANR	4255084	UnaryOperationExpression	& errstack		4254161	0					
ANR	4255085	UnaryOperator	&		4254161	0					
ANR	4255086	Identifier	errstack		4254161	1					
ANR	4255087	CompoundStatement		212:54:5691:5691	4254161	1					
ANR	4255088	ExpressionStatement	"fprintf ( stderr , ""ERROR\\n%s\\n"" , errstack . getFullText ( true ) )"	1532:4:41648:41708	4254161	0	True				
ANR	4255089	CallExpression	"fprintf ( stderr , ""ERROR\\n%s\\n"" , errstack . getFullText ( true ) )"		4254161	0					
ANR	4255090	Callee	fprintf		4254161	0					
ANR	4255091	Identifier	fprintf		4254161	0					
ANR	4255092	ArgumentList	stderr		4254161	1					
ANR	4255093	Argument	stderr		4254161	0					
ANR	4255094	Identifier	stderr		4254161	0					
ANR	4255095	Argument	"""ERROR\\n%s\\n"""		4254161	1					
ANR	4255096	PrimaryExpression	"""ERROR\\n%s\\n"""		4254161	0					
ANR	4255097	Argument	errstack . getFullText ( true )		4254161	2					
ANR	4255098	CallExpression	errstack . getFullText ( true )		4254161	0					
ANR	4255099	Callee	errstack . getFullText		4254161	0					
ANR	4255100	MemberAccess	errstack . getFullText		4254161	0					
ANR	4255101	Identifier	errstack		4254161	0					
ANR	4255102	Identifier	getFullText		4254161	1					
ANR	4255103	ArgumentList	true		4254161	1					
ANR	4255104	Argument	true		4254161	0					
ANR	4255105	Identifier	true		4254161	0					
ANR	4255106	ExpressionStatement	"fprintf ( stderr , ""Can't send %s command to %s\\n"" , cmdToStr ( my_cmd ) , d -> idStr ( ) )"	1533:4:41714:41802	4254161	1	True				
ANR	4255107	CallExpression	"fprintf ( stderr , ""Can't send %s command to %s\\n"" , cmdToStr ( my_cmd ) , d -> idStr ( ) )"		4254161	0					
ANR	4255108	Callee	fprintf		4254161	0					
ANR	4255109	Identifier	fprintf		4254161	0					
ANR	4255110	ArgumentList	stderr		4254161	1					
ANR	4255111	Argument	stderr		4254161	0					
ANR	4255112	Identifier	stderr		4254161	0					
ANR	4255113	Argument	"""Can't send %s command to %s\\n"""		4254161	1					
ANR	4255114	PrimaryExpression	"""Can't send %s command to %s\\n"""		4254161	0					
ANR	4255115	Argument	cmdToStr ( my_cmd )		4254161	2					
ANR	4255116	CallExpression	cmdToStr ( my_cmd )		4254161	0					
ANR	4255117	Callee	cmdToStr		4254161	0					
ANR	4255118	Identifier	cmdToStr		4254161	0					
ANR	4255119	ArgumentList	my_cmd		4254161	1					
ANR	4255120	Argument	my_cmd		4254161	0					
ANR	4255121	Identifier	my_cmd		4254161	0					
ANR	4255122	Argument	d -> idStr ( )		4254161	3					
ANR	4255123	CallExpression	d -> idStr ( )		4254161	0					
ANR	4255124	Callee	d -> idStr		4254161	0					
ANR	4255125	PtrMemberAccess	d -> idStr		4254161	0					
ANR	4255126	Identifier	d		4254161	0					
ANR	4255127	Identifier	idStr		4254161	1					
ANR	4255128	ArgumentList			4254161	1					
ANR	4255129	ExpressionStatement	all_good = false	1535:4:41808:41824	4254161	2	True				
ANR	4255130	AssignmentExpression	all_good = false		4254161	0		=			
ANR	4255131	Identifier	all_good		4254161	0					
ANR	4255132	Identifier	false		4254161	1					
ANR	4255133	ReturnStatement	return ;	1536:4:41830:41836	4254161	3	True				
ANR	4255134	IfStatement	if ( cmd == RESTART )		4254161	23					
ANR	4255135	Condition	cmd == RESTART	1543:6:42006:42019	4254161	0	True				
ANR	4255136	EqualityExpression	cmd == RESTART		4254161	0		==			
ANR	4255137	Identifier	cmd		4254161	0					
ANR	4255138	Identifier	RESTART		4254161	1					
ANR	4255139	CompoundStatement		224:23:6072:6072	4254161	1					
ANR	4255140	ExpressionStatement	my_cmd = RESTART	1544:3:42028:42044	4254161	0	True				
ANR	4255141	AssignmentExpression	my_cmd = RESTART		4254161	0		=			
ANR	4255142	Identifier	my_cmd		4254161	0					
ANR	4255143	Identifier	RESTART		4254161	1					
ANR	4255144	IfStatement	if ( my_cmd == DAEMON_ON || my_cmd == DAEMON_OFF || my_cmd == DAEMON_OFF_FAST || ( ( my_cmd == DC_OFF_GRACEFUL || my_cmd == DC_OFF_FAST ) && real_dt == DT_MASTER ) )		4254161	24					
ANR	4255145	Condition	my_cmd == DAEMON_ON || my_cmd == DAEMON_OFF || my_cmd == DAEMON_OFF_FAST || ( ( my_cmd == DC_OFF_GRACEFUL || my_cmd == DC_OFF_FAST ) && real_dt == DT_MASTER )	1548:6:42119:42285	4254161	0	True				
ANR	4255146	OrExpression	my_cmd == DAEMON_ON || my_cmd == DAEMON_OFF || my_cmd == DAEMON_OFF_FAST || ( ( my_cmd == DC_OFF_GRACEFUL || my_cmd == DC_OFF_FAST ) && real_dt == DT_MASTER )		4254161	0		||			
ANR	4255147	EqualityExpression	my_cmd == DAEMON_ON		4254161	0		==			
ANR	4255148	Identifier	my_cmd		4254161	0					
ANR	4255149	Identifier	DAEMON_ON		4254161	1					
ANR	4255150	OrExpression	my_cmd == DAEMON_OFF || my_cmd == DAEMON_OFF_FAST || ( ( my_cmd == DC_OFF_GRACEFUL || my_cmd == DC_OFF_FAST ) && real_dt == DT_MASTER )		4254161	1		||			
ANR	4255151	EqualityExpression	my_cmd == DAEMON_OFF		4254161	0		==			
ANR	4255152	Identifier	my_cmd		4254161	0					
ANR	4255153	Identifier	DAEMON_OFF		4254161	1					
ANR	4255154	OrExpression	my_cmd == DAEMON_OFF_FAST || ( ( my_cmd == DC_OFF_GRACEFUL || my_cmd == DC_OFF_FAST ) && real_dt == DT_MASTER )		4254161	1		||			
ANR	4255155	EqualityExpression	my_cmd == DAEMON_OFF_FAST		4254161	0		==			
ANR	4255156	Identifier	my_cmd		4254161	0					
ANR	4255157	Identifier	DAEMON_OFF_FAST		4254161	1					
ANR	4255158	AndExpression	( my_cmd == DC_OFF_GRACEFUL || my_cmd == DC_OFF_FAST ) && real_dt == DT_MASTER		4254161	1		&&			
ANR	4255159	OrExpression	my_cmd == DC_OFF_GRACEFUL || my_cmd == DC_OFF_FAST		4254161	0		||			
ANR	4255160	EqualityExpression	my_cmd == DC_OFF_GRACEFUL		4254161	0		==			
ANR	4255161	Identifier	my_cmd		4254161	0					
ANR	4255162	Identifier	DC_OFF_GRACEFUL		4254161	1					
ANR	4255163	EqualityExpression	my_cmd == DC_OFF_FAST		4254161	1		==			
ANR	4255164	Identifier	my_cmd		4254161	0					
ANR	4255165	Identifier	DC_OFF_FAST		4254161	1					
ANR	4255166	EqualityExpression	real_dt == DT_MASTER		4254161	1		==			
ANR	4255167	Identifier	real_dt		4254161	0					
ANR	4255168	Identifier	DT_MASTER		4254161	1					
ANR	4255169	CompoundStatement		233:2:6340:6340	4254161	1					
ANR	4255170	IfStatement	if ( d_type == DT_ANY )		4254161	0					
ANR	4255171	Condition	d_type == DT_ANY	1553:7:42300:42315	4254161	0	True				
ANR	4255172	EqualityExpression	d_type == DT_ANY		4254161	0		==			
ANR	4255173	Identifier	d_type		4254161	0					
ANR	4255174	Identifier	DT_ANY		4254161	1					
ANR	4255175	CompoundStatement		234:26:6368:6368	4254161	1					
ANR	4255176	ExpressionStatement	"printf ( ""Sent \\""%s\\"" command to %s\\n"" , cmdToStr ( my_cmd ) , d -> idStr ( ) )"	1554:4:42325:42400	4254161	0	True				
ANR	4255177	CallExpression	"printf ( ""Sent \\""%s\\"" command to %s\\n"" , cmdToStr ( my_cmd ) , d -> idStr ( ) )"		4254161	0					
ANR	4255178	Callee	printf		4254161	0					
ANR	4255179	Identifier	printf		4254161	0					
ANR	4255180	ArgumentList	"""Sent \\""%s\\"" command to %s\\n"""		4254161	1					
ANR	4255181	Argument	"""Sent \\""%s\\"" command to %s\\n"""		4254161	0					
ANR	4255182	PrimaryExpression	"""Sent \\""%s\\"" command to %s\\n"""		4254161	0					
ANR	4255183	Argument	cmdToStr ( my_cmd )		4254161	1					
ANR	4255184	CallExpression	cmdToStr ( my_cmd )		4254161	0					
ANR	4255185	Callee	cmdToStr		4254161	0					
ANR	4255186	Identifier	cmdToStr		4254161	0					
ANR	4255187	ArgumentList	my_cmd		4254161	1					
ANR	4255188	Argument	my_cmd		4254161	0					
ANR	4255189	Identifier	my_cmd		4254161	0					
ANR	4255190	Argument	d -> idStr ( )		4254161	2					
ANR	4255191	CallExpression	d -> idStr ( )		4254161	0					
ANR	4255192	Callee	d -> idStr		4254161	0					
ANR	4255193	PtrMemberAccess	d -> idStr		4254161	0					
ANR	4255194	Identifier	d		4254161	0					
ANR	4255195	Identifier	idStr		4254161	1					
ANR	4255196	ArgumentList			4254161	1					
ANR	4255197	ElseStatement	else		4254161	0					
ANR	4255198	CompoundStatement		237:10:6461:6461	4254161	0					
ANR	4255199	ExpressionStatement	"printf ( ""Sent \\""%s\\"" command for \\""%s\\"" to %s\\n"" , cmdToStr ( my_cmd ) , subsys_arg ? subsys_arg : daemonString ( dt ) , d -> idStr ( ) )"	1557:4:42418:42561	4254161	0	True				
ANR	4255200	CallExpression	"printf ( ""Sent \\""%s\\"" command for \\""%s\\"" to %s\\n"" , cmdToStr ( my_cmd ) , subsys_arg ? subsys_arg : daemonString ( dt ) , d -> idStr ( ) )"		4254161	0					
ANR	4255201	Callee	printf		4254161	0					
ANR	4255202	Identifier	printf		4254161	0					
ANR	4255203	ArgumentList	"""Sent \\""%s\\"" command for \\""%s\\"" to %s\\n"""		4254161	1					
ANR	4255204	Argument	"""Sent \\""%s\\"" command for \\""%s\\"" to %s\\n"""		4254161	0					
ANR	4255205	PrimaryExpression	"""Sent \\""%s\\"" command for \\""%s\\"" to %s\\n"""		4254161	0					
ANR	4255206	Argument	cmdToStr ( my_cmd )		4254161	1					
ANR	4255207	CallExpression	cmdToStr ( my_cmd )		4254161	0					
ANR	4255208	Callee	cmdToStr		4254161	0					
ANR	4255209	Identifier	cmdToStr		4254161	0					
ANR	4255210	ArgumentList	my_cmd		4254161	1					
ANR	4255211	Argument	my_cmd		4254161	0					
ANR	4255212	Identifier	my_cmd		4254161	0					
ANR	4255213	Argument	subsys_arg ? subsys_arg : daemonString ( dt )		4254161	2					
ANR	4255214	ConditionalExpression	subsys_arg ? subsys_arg : daemonString ( dt )		4254161	0					
ANR	4255215	Condition	subsys_arg		4254161	0					
ANR	4255216	Identifier	subsys_arg		4254161	0					
ANR	4255217	Identifier	subsys_arg		4254161	1					
ANR	4255218	CallExpression	daemonString ( dt )		4254161	2					
ANR	4255219	Callee	daemonString		4254161	0					
ANR	4255220	Identifier	daemonString		4254161	0					
ANR	4255221	ArgumentList	dt		4254161	1					
ANR	4255222	Argument	dt		4254161	0					
ANR	4255223	Identifier	dt		4254161	0					
ANR	4255224	Argument	d -> idStr ( )		4254161	3					
ANR	4255225	CallExpression	d -> idStr ( )		4254161	0					
ANR	4255226	Callee	d -> idStr		4254161	0					
ANR	4255227	PtrMemberAccess	d -> idStr		4254161	0					
ANR	4255228	Identifier	d		4254161	0					
ANR	4255229	Identifier	idStr		4254161	1					
ANR	4255230	ArgumentList			4254161	1					
ANR	4255231	ElseStatement	else		4254161	0					
ANR	4255232	IfStatement	if ( d_type == DT_STARTD && all )		4254161	0					
ANR	4255233	Condition	d_type == DT_STARTD && all	1562:13:42581:42606	4254161	0	True				
ANR	4255234	AndExpression	d_type == DT_STARTD && all		4254161	0		&&			
ANR	4255235	EqualityExpression	d_type == DT_STARTD		4254161	0		==			
ANR	4255236	Identifier	d_type		4254161	0					
ANR	4255237	Identifier	DT_STARTD		4254161	1					
ANR	4255238	Identifier	all		4254161	1					
ANR	4255239	CompoundStatement		243:42:6659:6659	4254161	1					
ANR	4255240	ExpressionStatement	"printf ( ""Sent \\""%s\\"" command to startd %s\\n"" , cmdToStr ( my_cmd ) , d -> fullHostname ( ) )"	1565:3:42718:42806	4254161	0	True				
ANR	4255241	CallExpression	"printf ( ""Sent \\""%s\\"" command to startd %s\\n"" , cmdToStr ( my_cmd ) , d -> fullHostname ( ) )"		4254161	0					
ANR	4255242	Callee	printf		4254161	0					
ANR	4255243	Identifier	printf		4254161	0					
ANR	4255244	ArgumentList	"""Sent \\""%s\\"" command to startd %s\\n"""		4254161	1					
ANR	4255245	Argument	"""Sent \\""%s\\"" command to startd %s\\n"""		4254161	0					
ANR	4255246	PrimaryExpression	"""Sent \\""%s\\"" command to startd %s\\n"""		4254161	0					
ANR	4255247	Argument	cmdToStr ( my_cmd )		4254161	1					
ANR	4255248	CallExpression	cmdToStr ( my_cmd )		4254161	0					
ANR	4255249	Callee	cmdToStr		4254161	0					
ANR	4255250	Identifier	cmdToStr		4254161	0					
ANR	4255251	ArgumentList	my_cmd		4254161	1					
ANR	4255252	Argument	my_cmd		4254161	0					
ANR	4255253	Identifier	my_cmd		4254161	0					
ANR	4255254	Argument	d -> fullHostname ( )		4254161	2					
ANR	4255255	CallExpression	d -> fullHostname ( )		4254161	0					
ANR	4255256	Callee	d -> fullHostname		4254161	0					
ANR	4255257	PtrMemberAccess	d -> fullHostname		4254161	0					
ANR	4255258	Identifier	d		4254161	0					
ANR	4255259	Identifier	fullHostname		4254161	1					
ANR	4255260	ArgumentList			4254161	1					
ANR	4255261	ElseStatement	else		4254161	0					
ANR	4255262	IfStatement	if ( cmd_set )		4254161	0					
ANR	4255263	Condition	cmd_set	1567:13:42821:42827	4254161	0	True				
ANR	4255264	Identifier	cmd_set		4254161	0					
ANR	4255265	CompoundStatement		248:23:6880:6880	4254161	1					
ANR	4255266	ExpressionStatement	"printf ( ""Sent command \\""%d\\"" to %s\\n"" , my_cmd , d -> idStr ( ) )"	1568:3:42836:42895	4254161	0	True				
ANR	4255267	CallExpression	"printf ( ""Sent command \\""%d\\"" to %s\\n"" , my_cmd , d -> idStr ( ) )"		4254161	0					
ANR	4255268	Callee	printf		4254161	0					
ANR	4255269	Identifier	printf		4254161	0					
ANR	4255270	ArgumentList	"""Sent command \\""%d\\"" to %s\\n"""		4254161	1					
ANR	4255271	Argument	"""Sent command \\""%d\\"" to %s\\n"""		4254161	0					
ANR	4255272	PrimaryExpression	"""Sent command \\""%d\\"" to %s\\n"""		4254161	0					
ANR	4255273	Argument	my_cmd		4254161	1					
ANR	4255274	Identifier	my_cmd		4254161	0					
ANR	4255275	Argument	d -> idStr ( )		4254161	2					
ANR	4255276	CallExpression	d -> idStr ( )		4254161	0					
ANR	4255277	Callee	d -> idStr		4254161	0					
ANR	4255278	PtrMemberAccess	d -> idStr		4254161	0					
ANR	4255279	Identifier	d		4254161	0					
ANR	4255280	Identifier	idStr		4254161	1					
ANR	4255281	ArgumentList			4254161	1					
ANR	4255282	ElseStatement	else		4254161	0					
ANR	4255283	CompoundStatement		250:9:6955:6955	4254161	0					
ANR	4255284	ExpressionStatement	"printf ( ""Sent \\""%s\\"" command to %s\\n"" , cmdToStr ( my_cmd ) , d -> idStr ( ) )"	1570:3:42911:42980	4254161	0	True				
ANR	4255285	CallExpression	"printf ( ""Sent \\""%s\\"" command to %s\\n"" , cmdToStr ( my_cmd ) , d -> idStr ( ) )"		4254161	0					
ANR	4255286	Callee	printf		4254161	0					
ANR	4255287	Identifier	printf		4254161	0					
ANR	4255288	ArgumentList	"""Sent \\""%s\\"" command to %s\\n"""		4254161	1					
ANR	4255289	Argument	"""Sent \\""%s\\"" command to %s\\n"""		4254161	0					
ANR	4255290	PrimaryExpression	"""Sent \\""%s\\"" command to %s\\n"""		4254161	0					
ANR	4255291	Argument	cmdToStr ( my_cmd )		4254161	1					
ANR	4255292	CallExpression	cmdToStr ( my_cmd )		4254161	0					
ANR	4255293	Callee	cmdToStr		4254161	0					
ANR	4255294	Identifier	cmdToStr		4254161	0					
ANR	4255295	ArgumentList	my_cmd		4254161	1					
ANR	4255296	Argument	my_cmd		4254161	0					
ANR	4255297	Identifier	my_cmd		4254161	0					
ANR	4255298	Argument	d -> idStr ( )		4254161	2					
ANR	4255299	CallExpression	d -> idStr ( )		4254161	0					
ANR	4255300	Callee	d -> idStr		4254161	0					
ANR	4255301	PtrMemberAccess	d -> idStr		4254161	0					
ANR	4255302	Identifier	d		4254161	0					
ANR	4255303	Identifier	idStr		4254161	1					
ANR	4255304	ArgumentList			4254161	1					
ANR	4255305	ExpressionStatement	sock . close ( )	1572:2:42988:43000	4254161	25	True				
ANR	4255306	CallExpression	sock . close ( )		4254161	0					
ANR	4255307	Callee	sock . close		4254161	0					
ANR	4255308	MemberAccess	sock . close		4254161	0					
ANR	4255309	Identifier	sock		4254161	0					
ANR	4255310	Identifier	close		4254161	1					
ANR	4255311	ArgumentList			4254161	1					
ANR	4255312	Condition	d -> nextValidCm ( ) == true	1573:9:43011:43034	4254161	1	True				
ANR	4255313	EqualityExpression	d -> nextValidCm ( ) == true		4254161	0		==			
ANR	4255314	CallExpression	d -> nextValidCm ( )		4254161	0					
ANR	4255315	Callee	d -> nextValidCm		4254161	0					
ANR	4255316	PtrMemberAccess	d -> nextValidCm		4254161	0					
ANR	4255317	Identifier	d		4254161	0					
ANR	4255318	Identifier	nextValidCm		4254161	1					
ANR	4255319	ArgumentList			4254161	1					
ANR	4255320	Identifier	true		4254161	1					
ANR	4255321	IfStatement	if ( error == true )		4254161	8					
ANR	4255322	Condition	error == true	1574:5:43043:43055	4254161	0	True				
ANR	4255323	EqualityExpression	error == true		4254161	0		==			
ANR	4255324	Identifier	error		4254161	0					
ANR	4255325	Identifier	true		4254161	1					
ANR	4255326	CompoundStatement		255:21:7108:7108	4254161	1					
ANR	4255327	ExpressionStatement	"fprintf ( stderr , ""Can't connect to %s\\n"" , d -> idStr ( ) )"	1575:2:43063:43117	4254161	0	True				
ANR	4255328	CallExpression	"fprintf ( stderr , ""Can't connect to %s\\n"" , d -> idStr ( ) )"		4254161	0					
ANR	4255329	Callee	fprintf		4254161	0					
ANR	4255330	Identifier	fprintf		4254161	0					
ANR	4255331	ArgumentList	stderr		4254161	1					
ANR	4255332	Argument	stderr		4254161	0					
ANR	4255333	Identifier	stderr		4254161	0					
ANR	4255334	Argument	"""Can't connect to %s\\n"""		4254161	1					
ANR	4255335	PrimaryExpression	"""Can't connect to %s\\n"""		4254161	0					
ANR	4255336	Argument	d -> idStr ( )		4254161	2					
ANR	4255337	CallExpression	d -> idStr ( )		4254161	0					
ANR	4255338	Callee	d -> idStr		4254161	0					
ANR	4255339	PtrMemberAccess	d -> idStr		4254161	0					
ANR	4255340	Identifier	d		4254161	0					
ANR	4255341	Identifier	idStr		4254161	1					
ANR	4255342	ArgumentList			4254161	1					
ANR	4255343	ExpressionStatement	all_good = false	1576:2:43121:43137	4254161	1	True				
ANR	4255344	AssignmentExpression	all_good = false		4254161	0		=			
ANR	4255345	Identifier	all_good		4254161	0					
ANR	4255346	Identifier	false		4254161	1					
ANR	4255347	ReturnStatement	return ;	1577:2:43141:43147	4254161	2	True				
ANR	4255348	ReturnType	void		4254161	1					
ANR	4255349	Identifier	doCommand		4254161	2					
ANR	4255350	ParameterList	Daemon * d		4254161	3					
ANR	4255351	Parameter	Daemon * d	1319:11:35937:35945	4254161	0	True				
ANR	4255352	ParameterType	Daemon *		4254161	0					
ANR	4255353	Identifier	d		4254161	1					
ANR	4255354	CFGEntryNode	ENTRY		4254161		True				
ANR	4255355	CFGExitNode	EXIT		4254161		True				
ANR	4255356	Symbol	SQUAWK		4254161						
ANR	4255357	Symbol	d -> isLocal		4254161						
ANR	4255358	Symbol	d -> idStr		4254161						
ANR	4255359	Symbol	strchr		4254161						
ANR	4255360	Symbol	DAEMON_OFF		4254161						
ANR	4255361	Symbol	PCKPT_JOB		4254161						
ANR	4255362	Symbol	cmdToStr		4254161						
ANR	4255363	Symbol	DC_OFF_PEACEFUL		4254161						
ANR	4255364	Symbol	dt		4254161						
ANR	4255365	Symbol	DC_OFF_FAST		4254161						
ANR	4255366	Symbol	d -> type		4254161						
ANR	4255367	Symbol	sock . connect		4254161						
ANR	4255368	Symbol	is_per_claim_startd_cmd		4254161						
ANR	4255369	Symbol	& errstack		4254161						
ANR	4255370	Symbol	sock . code		4254161						
ANR	4255371	Symbol	is_local		4254161						
ANR	4255372	Symbol	d_type		4254161						
ANR	4255373	Symbol	all		4254161						
ANR	4255374	Symbol	DAEMONS_OFF_PEACEFUL		4254161						
ANR	4255375	Symbol	DAEMONS_OFF_FAST		4254161						
ANR	4255376	Symbol	stderr		4254161						
ANR	4255377	Symbol	done		4254161						
ANR	4255378	Symbol	VACATE_CLAIM		4254161						
ANR	4255379	Symbol	& sock		4254161						
ANR	4255380	Symbol	DAEMON_ON		4254161						
ANR	4255381	Symbol	DT_STARTD		4254161						
ANR	4255382	Symbol	all_good		4254161						
ANR	4255383	Symbol	errstack		4254161						
ANR	4255384	Symbol	VACATE_CLAIM_FAST		4254161						
ANR	4255385	Symbol	d -> sendCommand		4254161						
ANR	4255386	Symbol	true		4254161						
ANR	4255387	Symbol	name		4254161						
ANR	4255388	Symbol	sent_it		4254161						
ANR	4255389	Symbol	real_dt		4254161						
ANR	4255390	Symbol	cmd		4254161						
ANR	4255391	Symbol	d -> startCommand		4254161						
ANR	4255392	Symbol	DAEMON_OFF_PEACEFUL		4254161						
ANR	4255393	Symbol	d -> name		4254161						
ANR	4255394	Symbol	addresses_sent		4254161						
ANR	4255395	Symbol	DC_OFF_GRACEFUL		4254161						
ANR	4255396	Symbol	daemonString		4254161						
ANR	4255397	Symbol	VACATE_ALL_FAST		4254161						
ANR	4255398	Symbol	DT_ANY		4254161						
ANR	4255399	Symbol	peaceful_shutdown		4254161						
ANR	4255400	Symbol	error		4254161						
ANR	4255401	Symbol	d -> nextValidCm		4254161						
ANR	4255402	Symbol	DT_MASTER		4254161						
ANR	4255403	Symbol	d -> addr		4254161						
ANR	4255404	Symbol	sock . end_of_message		4254161						
ANR	4255405	Symbol	d -> fullHostname		4254161						
ANR	4255406	Symbol	DAEMON_OFF_FAST		4254161						
ANR	4255407	Symbol	PCKPT_ALL_JOBS		4254161						
ANR	4255408	Symbol	real_cmd		4254161						
ANR	4255409	Symbol	RESTART		4254161						
ANR	4255410	Symbol	RESTART_PEACEFUL		4254161						
ANR	4255411	Symbol	pexec		4254161						
ANR	4255412	Symbol	d		4254161						
ANR	4255413	Symbol	false		4254161						
ANR	4255414	Symbol	cmd_set		4254161						
ANR	4255415	Symbol	psubsys		4254161						
ANR	4255416	Symbol	VACATE_ALL_CLAIMS		4254161						
ANR	4255417	Symbol	* d		4254161						
ANR	4255418	Symbol	addresses_sent . lookup		4254161						
ANR	4255419	Symbol	my_cmd		4254161						
ANR	4255420	Symbol	sock		4254161						
ANR	4255421	Symbol	fast		4254161						
ANR	4255422	Symbol	hash_key		4254161						
ANR	4255423	Symbol	errstack . getFullText		4254161						
ANR	4255424	Symbol	subsys_arg		4254161						
ANR	4255425	Function	version	1582:0:43156:43243							
ANR	4255426	FunctionDef	version ()		4255425	0					
ANR	4255427	CompoundStatement		1584:0:43171:43243	4255425	0					
ANR	4255428	ExpressionStatement	"printf ( ""%s\\n%s\\n"" , CondorVersion ( ) , CondorPlatform ( ) )"	1585:1:43174:43229	4255425	0	True				
ANR	4255429	CallExpression	"printf ( ""%s\\n%s\\n"" , CondorVersion ( ) , CondorPlatform ( ) )"		4255425	0					
ANR	4255430	Callee	printf		4255425	0					
ANR	4255431	Identifier	printf		4255425	0					
ANR	4255432	ArgumentList	"""%s\\n%s\\n"""		4255425	1					
ANR	4255433	Argument	"""%s\\n%s\\n"""		4255425	0					
ANR	4255434	PrimaryExpression	"""%s\\n%s\\n"""		4255425	0					
ANR	4255435	Argument	CondorVersion ( )		4255425	1					
ANR	4255436	CallExpression	CondorVersion ( )		4255425	0					
ANR	4255437	Callee	CondorVersion		4255425	0					
ANR	4255438	Identifier	CondorVersion		4255425	0					
ANR	4255439	ArgumentList			4255425	1					
ANR	4255440	Argument	CondorPlatform ( )		4255425	2					
ANR	4255441	CallExpression	CondorPlatform ( )		4255425	0					
ANR	4255442	Callee	CondorPlatform		4255425	0					
ANR	4255443	Identifier	CondorPlatform		4255425	0					
ANR	4255444	ArgumentList			4255425	1					
ANR	4255445	ExpressionStatement	exit ( 0 )	1586:1:43232:43241	4255425	1	True				
ANR	4255446	CallExpression	exit ( 0 )		4255425	0					
ANR	4255447	Callee	exit		4255425	0					
ANR	4255448	Identifier	exit		4255425	0					
ANR	4255449	ArgumentList	0		4255425	1					
ANR	4255450	Argument	0		4255425	0					
ANR	4255451	PrimaryExpression	0		4255425	0					
ANR	4255452	ReturnType	void		4255425	1					
ANR	4255453	Identifier	version		4255425	2					
ANR	4255454	ParameterList			4255425	3					
ANR	4255455	CFGEntryNode	ENTRY		4255425		True				
ANR	4255456	CFGExitNode	EXIT		4255425		True				
ANR	4255457	Symbol	CondorVersion		4255425						
ANR	4255458	Symbol	CondorPlatform		4255425						
ANR	4255459	Function	handleAll	1592:0:43337:43838							
ANR	4255460	FunctionDef	handleAll ()		4255459	0					
ANR	4255461	CompoundStatement		1594:0:43354:43838	4255459	0					
ANR	4255462	IdentifierDeclStatement	DaemonList daemons ;	1595:1:43357:43375	4255459	0	True				
ANR	4255463	IdentifierDecl	daemons		4255459	0					
ANR	4255464	IdentifierDeclType	DaemonList		4255459	0					
ANR	4255465	Identifier	daemons		4255459	1					
ANR	4255466	IfStatement	"if ( ! resolveNames ( & daemons , NULL ) )"		4255459	1					
ANR	4255467	Condition	"! resolveNames ( & daemons , NULL )"	1597:5:43383:43412	4255459	0	True				
ANR	4255468	UnaryOperationExpression	"! resolveNames ( & daemons , NULL )"		4255459	0					
ANR	4255469	UnaryOperator	!		4255459	0					
ANR	4255470	CallExpression	"resolveNames ( & daemons , NULL )"		4255459	1					
ANR	4255471	Callee	resolveNames		4255459	0					
ANR	4255472	Identifier	resolveNames		4255459	0					
ANR	4255473	ArgumentList	& daemons		4255459	1					
ANR	4255474	Argument	& daemons		4255459	0					
ANR	4255475	UnaryOperationExpression	& daemons		4255459	0					
ANR	4255476	UnaryOperator	&		4255459	0					
ANR	4255477	Identifier	daemons		4255459	1					
ANR	4255478	Argument	NULL		4255459	1					
ANR	4255479	Identifier	NULL		4255459	0					
ANR	4255480	CompoundStatement		4:38:61:61	4255459	1					
ANR	4255481	IfStatement	if ( constraint != NULL )		4255459	0					
ANR	4255482	Condition	constraint != NULL	1598:8:43426:43441	4255459	0	True				
ANR	4255483	EqualityExpression	constraint != NULL		4255459	0		!=			
ANR	4255484	Identifier	constraint		4255459	0					
ANR	4255485	Identifier	NULL		4255459	1					
ANR	4255486	CompoundStatement		5:27:90:90	4255459	1					
ANR	4255487	ExpressionStatement	"fprintf ( stderr , ""ERROR: Failed to find daemons matching the constraint\\n"" )"	1599:5:43452:43528	4255459	0	True				
ANR	4255488	CallExpression	"fprintf ( stderr , ""ERROR: Failed to find daemons matching the constraint\\n"" )"		4255459	0					
ANR	4255489	Callee	fprintf		4255459	0					
ANR	4255490	Identifier	fprintf		4255459	0					
ANR	4255491	ArgumentList	stderr		4255459	1					
ANR	4255492	Argument	stderr		4255459	0					
ANR	4255493	Identifier	stderr		4255459	0					
ANR	4255494	Argument	"""ERROR: Failed to find daemons matching the constraint\\n"""		4255459	1					
ANR	4255495	PrimaryExpression	"""ERROR: Failed to find daemons matching the constraint\\n"""		4255459	0					
ANR	4255496	ElseStatement	else		4255459	0					
ANR	4255497	CompoundStatement		7:10:185:185	4255459	0					
ANR	4255498	ExpressionStatement	"fprintf ( stderr , ""ERROR: Failed to find daemons for -all\\n"" )"	1601:5:43547:43608	4255459	0	True				
ANR	4255499	CallExpression	"fprintf ( stderr , ""ERROR: Failed to find daemons for -all\\n"" )"		4255459	0					
ANR	4255500	Callee	fprintf		4255459	0					
ANR	4255501	Identifier	fprintf		4255459	0					
ANR	4255502	ArgumentList	stderr		4255459	1					
ANR	4255503	Argument	stderr		4255459	0					
ANR	4255504	Identifier	stderr		4255459	0					
ANR	4255505	Argument	"""ERROR: Failed to find daemons for -all\\n"""		4255459	1					
ANR	4255506	PrimaryExpression	"""ERROR: Failed to find daemons for -all\\n"""		4255459	0					
ANR	4255507	ExpressionStatement	exit ( 1 )	1603:3:43618:43627	4255459	1	True				
ANR	4255508	CallExpression	exit ( 1 )		4255459	0					
ANR	4255509	Callee	exit		4255459	0					
ANR	4255510	Identifier	exit		4255459	0					
ANR	4255511	ArgumentList	1		4255459	1					
ANR	4255512	Argument	1		4255459	0					
ANR	4255513	PrimaryExpression	1		4255459	0					
ANR	4255514	IdentifierDeclStatement	Daemon * d ;	1607:1:43692:43701	4255459	2	True				
ANR	4255515	IdentifierDecl	* d		4255459	0					
ANR	4255516	IdentifierDeclType	Daemon *		4255459	0					
ANR	4255517	Identifier	d		4255459	1					
ANR	4255518	ExpressionStatement	daemons . rewind ( )	1608:1:43704:43720	4255459	3	True				
ANR	4255519	CallExpression	daemons . rewind ( )		4255459	0					
ANR	4255520	Callee	daemons . rewind		4255459	0					
ANR	4255521	MemberAccess	daemons . rewind		4255459	0					
ANR	4255522	Identifier	daemons		4255459	0					
ANR	4255523	Identifier	rewind		4255459	1					
ANR	4255524	ArgumentList			4255459	1					
ANR	4255525	WhileStatement	while ( daemons . next ( d ) )		4255459	4					
ANR	4255526	Condition	daemons . next ( d )	1609:8:43731:43745	4255459	0	True				
ANR	4255527	CallExpression	daemons . next ( d )		4255459	0					
ANR	4255528	Callee	daemons . next		4255459	0					
ANR	4255529	MemberAccess	daemons . next		4255459	0					
ANR	4255530	Identifier	daemons		4255459	0					
ANR	4255531	Identifier	next		4255459	1					
ANR	4255532	ArgumentList	d		4255459	1					
ANR	4255533	Argument	d		4255459	0					
ANR	4255534	Identifier	d		4255459	0					
ANR	4255535	CompoundStatement		16:26:394:394	4255459	1					
ANR	4255536	IfStatement	if ( real_dt == DT_GENERIC )		4255459	0					
ANR	4255537	Condition	real_dt == DT_GENERIC	1610:6:43757:43777	4255459	0	True				
ANR	4255538	EqualityExpression	real_dt == DT_GENERIC		4255459	0		==			
ANR	4255539	Identifier	real_dt		4255459	0					
ANR	4255540	Identifier	DT_GENERIC		4255459	1					
ANR	4255541	CompoundStatement		17:30:426:426	4255459	1					
ANR	4255542	ExpressionStatement	d -> setSubsystem ( subsys )	1611:3:43786:43811	4255459	0	True				
ANR	4255543	CallExpression	d -> setSubsystem ( subsys )		4255459	0					
ANR	4255544	Callee	d -> setSubsystem		4255459	0					
ANR	4255545	PtrMemberAccess	d -> setSubsystem		4255459	0					
ANR	4255546	Identifier	d		4255459	0					
ANR	4255547	Identifier	setSubsystem		4255459	1					
ANR	4255548	ArgumentList	subsys		4255459	1					
ANR	4255549	Argument	subsys		4255459	0					
ANR	4255550	Identifier	subsys		4255459	0					
ANR	4255551	ExpressionStatement	doCommand ( d )	1613:2:43819:43833	4255459	1	True				
ANR	4255552	CallExpression	doCommand ( d )		4255459	0					
ANR	4255553	Callee	doCommand		4255459	0					
ANR	4255554	Identifier	doCommand		4255459	0					
ANR	4255555	ArgumentList	d		4255459	1					
ANR	4255556	Argument	d		4255459	0					
ANR	4255557	Identifier	d		4255459	0					
ANR	4255558	ReturnType	void		4255459	1					
ANR	4255559	Identifier	handleAll		4255459	2					
ANR	4255560	ParameterList			4255459	3					
ANR	4255561	CFGEntryNode	ENTRY		4255459		True				
ANR	4255562	CFGExitNode	EXIT		4255459		True				
ANR	4255563	Symbol	& daemons		4255459						
ANR	4255564	Symbol	subsys		4255459						
ANR	4255565	Symbol	DT_GENERIC		4255459						
ANR	4255566	Symbol	NULL		4255459						
ANR	4255567	Symbol	d		4255459						
ANR	4255568	Symbol	daemons . next		4255459						
ANR	4255569	Symbol	daemons		4255459						
ANR	4255570	Symbol	real_dt		4255459						
ANR	4255571	Symbol	constraint		4255459						
ANR	4255572	Symbol	resolveNames		4255459						
ANR	4255573	Symbol	stderr		4255459						
ANR	4255574	Function	doSquawk	1618:0:43842:44332							
ANR	4255575	FunctionDef	doSquawk (char * address)		4255574	0					
ANR	4255576	CompoundStatement		1619:26:43873:44332	4255574	0					
ANR	4255577	IdentifierDeclStatement	"char line [ 256 ] , addr [ 256 ] ;"	1622:1:43944:43969	4255574	0	True				
ANR	4255578	IdentifierDecl	line [ 256 ]		4255574	0					
ANR	4255579	IdentifierDeclType	char [ 256 ]		4255574	0					
ANR	4255580	Identifier	line		4255574	1					
ANR	4255581	PrimaryExpression	256		4255574	2					
ANR	4255582	IdentifierDecl	addr [ 256 ]		4255574	1					
ANR	4255583	IdentifierDeclType	char [ 256 ]		4255574	0					
ANR	4255584	Identifier	addr		4255574	1					
ANR	4255585	PrimaryExpression	256		4255574	2					
ANR	4255586	IdentifierDeclStatement	"int i , done = FALSE ;"	1623:1:43972:43991	4255574	1	True				
ANR	4255587	IdentifierDecl	i		4255574	0					
ANR	4255588	IdentifierDeclType	int		4255574	0					
ANR	4255589	Identifier	i		4255574	1					
ANR	4255590	IdentifierDecl	done = FALSE		4255574	1					
ANR	4255591	IdentifierDeclType	int		4255574	0					
ANR	4255592	Identifier	done		4255574	1					
ANR	4255593	AssignmentExpression	done = FALSE		4255574	2		=			
ANR	4255594	Identifier	FALSE		4255574	0					
ANR	4255595	Identifier	FALSE		4255574	1					
ANR	4255596	ExpressionStatement	"strcpy ( addr , address )"	1624:1:43994:44017	4255574	2	True				
ANR	4255597	CallExpression	"strcpy ( addr , address )"		4255574	0					
ANR	4255598	Callee	strcpy		4255574	0					
ANR	4255599	Identifier	strcpy		4255574	0					
ANR	4255600	ArgumentList	addr		4255574	1					
ANR	4255601	Argument	addr		4255574	0					
ANR	4255602	Identifier	addr		4255574	0					
ANR	4255603	Argument	address		4255574	1					
ANR	4255604	Identifier	address		4255574	0					
ANR	4255605	WhileStatement	while ( ! done )		4255574	3					
ANR	4255606	Condition	! done	1626:9:44030:44034	4255574	0	True				
ANR	4255607	UnaryOperationExpression	! done		4255574	0					
ANR	4255608	UnaryOperator	!		4255574	0					
ANR	4255609	Identifier	done		4255574	1					
ANR	4255610	CompoundStatement		8:17:164:164	4255574	1					
ANR	4255611	ExpressionStatement	"printf ( ""> "" )"	1627:2:44042:44057	4255574	0	True				
ANR	4255612	CallExpression	"printf ( ""> "" )"		4255574	0					
ANR	4255613	Callee	printf		4255574	0					
ANR	4255614	Identifier	printf		4255574	0					
ANR	4255615	ArgumentList	"""> """		4255574	1					
ANR	4255616	Argument	"""> """		4255574	0					
ANR	4255617	PrimaryExpression	"""> """		4255574	0					
ANR	4255618	ExpressionStatement	fflush ( stdout )	1628:2:44061:44078	4255574	1	True				
ANR	4255619	CallExpression	fflush ( stdout )		4255574	0					
ANR	4255620	Callee	fflush		4255574	0					
ANR	4255621	Identifier	fflush		4255574	0					
ANR	4255622	ArgumentList	stdout		4255574	1					
ANR	4255623	Argument	stdout		4255574	0					
ANR	4255624	Identifier	stdout		4255574	0					
ANR	4255625	IfStatement	"if ( ! fgets ( line , 256 , stdin ) )"		4255574	2					
ANR	4255626	Condition	"! fgets ( line , 256 , stdin )"	1630:7:44088:44113	4255574	0	True				
ANR	4255627	UnaryOperationExpression	"! fgets ( line , 256 , stdin )"		4255574	0					
ANR	4255628	UnaryOperator	!		4255574	0					
ANR	4255629	CallExpression	"fgets ( line , 256 , stdin )"		4255574	1					
ANR	4255630	Callee	fgets		4255574	0					
ANR	4255631	Identifier	fgets		4255574	0					
ANR	4255632	ArgumentList	line		4255574	1					
ANR	4255633	Argument	line		4255574	0					
ANR	4255634	Identifier	line		4255574	0					
ANR	4255635	Argument	256		4255574	1					
ANR	4255636	PrimaryExpression	256		4255574	0					
ANR	4255637	Argument	stdin		4255574	2					
ANR	4255638	Identifier	stdin		4255574	0					
ANR	4255639	CompoundStatement		12:36:243:243	4255574	1					
ANR	4255640	ExpressionStatement	done = TRUE	1631:3:44122:44133	4255574	0	True				
ANR	4255641	AssignmentExpression	done = TRUE		4255574	0		=			
ANR	4255642	Identifier	done		4255574	0					
ANR	4255643	Identifier	TRUE		4255574	1					
ANR	4255644	ElseStatement	else		4255574	0					
ANR	4255645	CompoundStatement		14:9:270:270	4255574	0					
ANR	4255646	ForStatement	for ( i = 0 ; line [ i ] != '\\0' ; i ++ )		4255574	0					
ANR	4255647	ForInit	i = 0 ;	1633:9:44155:44159	4255574	0	True				
ANR	4255648	AssignmentExpression	i = 0		4255574	0		=			
ANR	4255649	Identifier	i		4255574	0					
ANR	4255650	PrimaryExpression	0		4255574	1					
ANR	4255651	Condition	line [ i ] != '\\0'	1633:15:44161:44175	4255574	1	True				
ANR	4255652	EqualityExpression	line [ i ] != '\\0'		4255574	0		!=			
ANR	4255653	ArrayIndexing	line [ i ]		4255574	0					
ANR	4255654	Identifier	line		4255574	0					
ANR	4255655	Identifier	i		4255574	1					
ANR	4255656	PrimaryExpression	'\\0'		4255574	1					
ANR	4255657	PostIncDecOperationExpression	i ++	1633:33:44179:44181	4255574	2	True				
ANR	4255658	Identifier	i		4255574	0					
ANR	4255659	IncDec	++		4255574	1					
ANR	4255660	CompoundStatement		15:39:311:311	4255574	3					
ANR	4255661	ExpressionStatement	line [ i ] = tolower ( line [ i ] )	1634:4:44191:44220	4255574	0	True				
ANR	4255662	AssignmentExpression	line [ i ] = tolower ( line [ i ] )		4255574	0		=			
ANR	4255663	ArrayIndexing	line [ i ]		4255574	0					
ANR	4255664	Identifier	line		4255574	0					
ANR	4255665	Identifier	i		4255574	1					
ANR	4255666	CallExpression	tolower ( line [ i ] )		4255574	1					
ANR	4255667	Callee	tolower		4255574	0					
ANR	4255668	Identifier	tolower		4255574	0					
ANR	4255669	ArgumentList	line [ i ]		4255574	1					
ANR	4255670	Argument	line [ i ]		4255574	0					
ANR	4255671	ArrayIndexing	line [ i ]		4255574	0					
ANR	4255672	Identifier	line		4255574	0					
ANR	4255673	Identifier	i		4255574	1					
ANR	4255674	IfStatement	if ( line [ i - 1 ] == '\\n' )		4255574	1					
ANR	4255675	Condition	line [ i - 1 ] == '\\n'	1636:8:44235:44251	4255574	0	True				
ANR	4255676	EqualityExpression	line [ i - 1 ] == '\\n'		4255574	0		==			
ANR	4255677	ArrayIndexing	line [ i - 1 ]		4255574	0					
ANR	4255678	Identifier	line		4255574	0					
ANR	4255679	AdditiveExpression	i - 1		4255574	1		-			
ANR	4255680	Identifier	i		4255574	0					
ANR	4255681	PrimaryExpression	1		4255574	1					
ANR	4255682	PrimaryExpression	'\\n'		4255574	1					
ANR	4255683	CompoundStatement		18:28:381:381	4255574	1					
ANR	4255684	ExpressionStatement	line [ i - 1 ] = '\\0'	1637:4:44262:44278	4255574	0	True				
ANR	4255685	AssignmentExpression	line [ i - 1 ] = '\\0'		4255574	0		=			
ANR	4255686	ArrayIndexing	line [ i - 1 ]		4255574	0					
ANR	4255687	Identifier	line		4255574	0					
ANR	4255688	AdditiveExpression	i - 1		4255574	1		-			
ANR	4255689	Identifier	i		4255574	0					
ANR	4255690	PrimaryExpression	1		4255574	1					
ANR	4255691	PrimaryExpression	'\\0'		4255574	1					
ANR	4255692	ExpressionStatement	"done = ! handleSquawk ( line , addr )"	1639:3:44288:44323	4255574	2	True				
ANR	4255693	AssignmentExpression	"done = ! handleSquawk ( line , addr )"		4255574	0		=			
ANR	4255694	Identifier	done		4255574	0					
ANR	4255695	UnaryOperationExpression	"! handleSquawk ( line , addr )"		4255574	1					
ANR	4255696	UnaryOperator	!		4255574	0					
ANR	4255697	CallExpression	"handleSquawk ( line , addr )"		4255574	1					
ANR	4255698	Callee	handleSquawk		4255574	0					
ANR	4255699	Identifier	handleSquawk		4255574	0					
ANR	4255700	ArgumentList	line		4255574	1					
ANR	4255701	Argument	line		4255574	0					
ANR	4255702	Identifier	line		4255574	0					
ANR	4255703	Argument	addr		4255574	1					
ANR	4255704	Identifier	addr		4255574	0					
ANR	4255705	ReturnType	void		4255574	1					
ANR	4255706	Identifier	doSquawk		4255574	2					
ANR	4255707	ParameterList	char * address		4255574	3					
ANR	4255708	Parameter	char * address	1619:10:43857:43869	4255574	0	True				
ANR	4255709	ParameterType	char *		4255574	0					
ANR	4255710	Identifier	address		4255574	1					
ANR	4255711	CFGEntryNode	ENTRY		4255574		True				
ANR	4255712	CFGExitNode	EXIT		4255574		True				
ANR	4255713	Symbol	stdin		4255574						
ANR	4255714	Symbol	address		4255574						
ANR	4255715	Symbol	stdout		4255574						
ANR	4255716	Symbol	tolower		4255574						
ANR	4255717	Symbol	handleSquawk		4255574						
ANR	4255718	Symbol	line		4255574						
ANR	4255719	Symbol	i		4255574						
ANR	4255720	Symbol	TRUE		4255574						
ANR	4255721	Symbol	* line		4255574						
ANR	4255722	Symbol	done		4255574						
ANR	4255723	Symbol	fgets		4255574						
ANR	4255724	Symbol	* i		4255574						
ANR	4255725	Symbol	FALSE		4255574						
ANR	4255726	Symbol	addr		4255574						
ANR	4255727	Function	handleSquawk	1644:0:44335:47144							
ANR	4255728	FunctionDef	"handleSquawk (char * line , char * addr)"		4255727	0					
ANR	4255729	CompoundStatement		1645:39:44378:47144	4255727	0					
ANR	4255730	IdentifierDeclStatement	char * token ;	1647:1:44383:44394	4255727	0	True				
ANR	4255731	IdentifierDecl	* token		4255727	0					
ANR	4255732	IdentifierDeclType	char *		4255727	0					
ANR	4255733	Identifier	token		4255727	1					
ANR	4255734	IdentifierDeclStatement	"int command , signal ;"	1648:1:44397:44416	4255727	1	True				
ANR	4255735	IdentifierDecl	command		4255727	0					
ANR	4255736	IdentifierDeclType	int		4255727	0					
ANR	4255737	Identifier	command		4255727	1					
ANR	4255738	IdentifierDecl	signal		4255727	1					
ANR	4255739	IdentifierDeclType	int		4255727	0					
ANR	4255740	Identifier	signal		4255727	1					
ANR	4255741	IdentifierDeclStatement	ReliSock sock ;	1649:4:44422:44435	4255727	2	True				
ANR	4255742	IdentifierDecl	sock		4255727	0					
ANR	4255743	IdentifierDeclType	ReliSock		4255727	0					
ANR	4255744	Identifier	sock		4255727	1					
ANR	4255745	IfStatement	if ( ! sock . connect ( addr ) )		4255727	3					
ANR	4255746	Condition	! sock . connect ( addr )	1651:9:44447:44467	4255727	0	True				
ANR	4255747	UnaryOperationExpression	! sock . connect ( addr )		4255727	0					
ANR	4255748	UnaryOperator	!		4255727	0					
ANR	4255749	CallExpression	sock . connect ( addr )		4255727	1					
ANR	4255750	Callee	sock . connect		4255727	0					
ANR	4255751	MemberAccess	sock . connect		4255727	0					
ANR	4255752	Identifier	sock		4255727	0					
ANR	4255753	Identifier	connect		4255727	1					
ANR	4255754	ArgumentList	addr		4255727	1					
ANR	4255755	Argument	addr		4255727	0					
ANR	4255756	Identifier	addr		4255727	0					
ANR	4255757	CompoundStatement		7:33:92:92	4255727	1					
ANR	4255758	ExpressionStatement	"printf ( ""Problems connecting to %s\\n"" , addr )"	1652:8:44481:44527	4255727	0	True				
ANR	4255759	CallExpression	"printf ( ""Problems connecting to %s\\n"" , addr )"		4255727	0					
ANR	4255760	Callee	printf		4255727	0					
ANR	4255761	Identifier	printf		4255727	0					
ANR	4255762	ArgumentList	"""Problems connecting to %s\\n"""		4255727	1					
ANR	4255763	Argument	"""Problems connecting to %s\\n"""		4255727	0					
ANR	4255764	PrimaryExpression	"""Problems connecting to %s\\n"""		4255727	0					
ANR	4255765	Argument	addr		4255727	1					
ANR	4255766	Identifier	addr		4255727	0					
ANR	4255767	ReturnStatement	return TRUE ;	1653:8:44537:44548	4255727	1	True				
ANR	4255768	Identifier	TRUE		4255727	0					
ANR	4255769	ExpressionStatement	"token = strtok ( line , "" "" )"	1657:1:44567:44594	4255727	4	True				
ANR	4255770	AssignmentExpression	"token = strtok ( line , "" "" )"		4255727	0		=			
ANR	4255771	Identifier	token		4255727	0					
ANR	4255772	CallExpression	"strtok ( line , "" "" )"		4255727	1					
ANR	4255773	Callee	strtok		4255727	0					
ANR	4255774	Identifier	strtok		4255727	0					
ANR	4255775	ArgumentList	line		4255727	1					
ANR	4255776	Argument	line		4255727	0					
ANR	4255777	Identifier	line		4255727	0					
ANR	4255778	Argument	""" """		4255727	1					
ANR	4255779	PrimaryExpression	""" """		4255727	0					
ANR	4255780	IfStatement	if ( ! token )		4255727	5					
ANR	4255781	Condition	! token	1659:6:44603:44608	4255727	0	True				
ANR	4255782	UnaryOperationExpression	! token		4255727	0					
ANR	4255783	UnaryOperator	!		4255727	0					
ANR	4255784	Identifier	token		4255727	1					
ANR	4255785	ReturnStatement	return TRUE ;	1659:15:44612:44623	4255727	1	True				
ANR	4255786	Identifier	TRUE		4255727	0					
ANR	4255787	SwitchStatement	switch ( token [ 0 ] )		4255727	6					
ANR	4255788	Condition	token [ 0 ]	1661:10:44637:44644	4255727	0	True				
ANR	4255789	ArrayIndexing	token [ 0 ]		4255727	0					
ANR	4255790	Identifier	token		4255727	0					
ANR	4255791	PrimaryExpression	0		4255727	1					
ANR	4255792	CompoundStatement		17:21:269:269	4255727	1					
ANR	4255793	Label	case 'e' :	1662:1:44651:44659	4255727	0	True				
ANR	4255794	Label	case 'q' :	1663:1:44673:44681	4255727	1	True				
ANR	4255795	ReturnStatement	return FALSE ;	1664:2:44696:44708	4255727	2	True				
ANR	4255796	Identifier	FALSE		4255727	0					
ANR	4255797	Label	case 'd' :	1666:1:44714:44722	4255727	3	True				
ANR	4255798	CompoundStatement		31:2:570:580	4255727	4					
ANR	4255799	IdentifierDeclStatement	"Daemon d ( DT_ANY , addr ) ;"	1667:2:44745:44769	4255727	0	True				
ANR	4255800	IdentifierDecl	"d ( DT_ANY , addr )"		4255727	0					
ANR	4255801	IdentifierDeclType	Daemon		4255727	0					
ANR	4255802	Identifier	d		4255727	1					
ANR	4255803	Expression	"DT_ANY , addr"		4255727	2					
ANR	4255804	Identifier	DT_ANY		4255727	0					
ANR	4255805	Identifier	addr		4255727	1					
ANR	4255806	IdentifierDeclStatement	CondorError errstack ;	1668:2:44773:44793	4255727	1	True				
ANR	4255807	IdentifierDecl	errstack		4255727	0					
ANR	4255808	IdentifierDeclType	CondorError		4255727	0					
ANR	4255809	Identifier	errstack		4255727	1					
ANR	4255810	IfStatement	"if ( ! d . startCommand ( DUMP_STATE , & sock , 0 , & errstack ) )"		4255727	2					
ANR	4255811	Condition	"! d . startCommand ( DUMP_STATE , & sock , 0 , & errstack )"	1669:12:44807:44854	4255727	0	True				
ANR	4255812	UnaryOperationExpression	"! d . startCommand ( DUMP_STATE , & sock , 0 , & errstack )"		4255727	0					
ANR	4255813	UnaryOperator	!		4255727	0					
ANR	4255814	CallExpression	"d . startCommand ( DUMP_STATE , & sock , 0 , & errstack )"		4255727	1					
ANR	4255815	Callee	d . startCommand		4255727	0					
ANR	4255816	MemberAccess	d . startCommand		4255727	0					
ANR	4255817	Identifier	d		4255727	0					
ANR	4255818	Identifier	startCommand		4255727	1					
ANR	4255819	ArgumentList	DUMP_STATE		4255727	1					
ANR	4255820	Argument	DUMP_STATE		4255727	0					
ANR	4255821	Identifier	DUMP_STATE		4255727	0					
ANR	4255822	Argument	& sock		4255727	1					
ANR	4255823	UnaryOperationExpression	& sock		4255727	0					
ANR	4255824	UnaryOperator	&		4255727	0					
ANR	4255825	Identifier	sock		4255727	1					
ANR	4255826	Argument	0		4255727	2					
ANR	4255827	PrimaryExpression	0		4255727	0					
ANR	4255828	Argument	& errstack		4255727	3					
ANR	4255829	UnaryOperationExpression	& errstack		4255727	0					
ANR	4255830	UnaryOperator	&		4255727	0					
ANR	4255831	Identifier	errstack		4255727	1					
ANR	4255832	CompoundStatement		25:62:478:478	4255727	1					
ANR	4255833	ExpressionStatement	"fprintf ( stderr , ""ERROR\\n%s\\n"" , errstack . getFullText ( true ) )"	1670:3:44862:44922	4255727	0	True				
ANR	4255834	CallExpression	"fprintf ( stderr , ""ERROR\\n%s\\n"" , errstack . getFullText ( true ) )"		4255727	0					
ANR	4255835	Callee	fprintf		4255727	0					
ANR	4255836	Identifier	fprintf		4255727	0					
ANR	4255837	ArgumentList	stderr		4255727	1					
ANR	4255838	Argument	stderr		4255727	0					
ANR	4255839	Identifier	stderr		4255727	0					
ANR	4255840	Argument	"""ERROR\\n%s\\n"""		4255727	1					
ANR	4255841	PrimaryExpression	"""ERROR\\n%s\\n"""		4255727	0					
ANR	4255842	Argument	errstack . getFullText ( true )		4255727	2					
ANR	4255843	CallExpression	errstack . getFullText ( true )		4255727	0					
ANR	4255844	Callee	errstack . getFullText		4255727	0					
ANR	4255845	MemberAccess	errstack . getFullText		4255727	0					
ANR	4255846	Identifier	errstack		4255727	0					
ANR	4255847	Identifier	getFullText		4255727	1					
ANR	4255848	ArgumentList	true		4255727	1					
ANR	4255849	Argument	true		4255727	0					
ANR	4255850	Identifier	true		4255727	0					
ANR	4255851	ExpressionStatement	sock . decode ( )	1673:2:44931:44944	4255727	3	True				
ANR	4255852	CallExpression	sock . decode ( )		4255727	0					
ANR	4255853	Callee	sock . decode		4255727	0					
ANR	4255854	MemberAccess	sock . decode		4255727	0					
ANR	4255855	Identifier	sock		4255727	0					
ANR	4255856	Identifier	decode		4255727	1					
ANR	4255857	ArgumentList			4255727	1					
ANR	4255858	IdentifierDeclStatement	ClassAd ad ;	1675:2:44949:44959	4255727	4	True				
ANR	4255859	IdentifierDecl	ad		4255727	0					
ANR	4255860	IdentifierDeclType	ClassAd		4255727	0					
ANR	4255861	Identifier	ad		4255727	1					
ANR	4255862	ExpressionStatement	ad . initFromStream ( sock )	1676:2:44963:44988	4255727	5	True				
ANR	4255863	CallExpression	ad . initFromStream ( sock )		4255727	0					
ANR	4255864	Callee	ad . initFromStream		4255727	0					
ANR	4255865	MemberAccess	ad . initFromStream		4255727	0					
ANR	4255866	Identifier	ad		4255727	0					
ANR	4255867	Identifier	initFromStream		4255727	1					
ANR	4255868	ArgumentList	sock		4255727	1					
ANR	4255869	Argument	sock		4255727	0					
ANR	4255870	Identifier	sock		4255727	0					
ANR	4255871	ExpressionStatement	"printAdToFile ( & ad , NULL )"	1677:2:44992:45018	4255727	6	True				
ANR	4255872	CallExpression	"printAdToFile ( & ad , NULL )"		4255727	0					
ANR	4255873	Callee	printAdToFile		4255727	0					
ANR	4255874	Identifier	printAdToFile		4255727	0					
ANR	4255875	ArgumentList	& ad		4255727	1					
ANR	4255876	Argument	& ad		4255727	0					
ANR	4255877	UnaryOperationExpression	& ad		4255727	0					
ANR	4255878	UnaryOperator	&		4255727	0					
ANR	4255879	Identifier	ad		4255727	1					
ANR	4255880	Argument	NULL		4255727	1					
ANR	4255881	Identifier	NULL		4255727	0					
ANR	4255882	ReturnStatement	return TRUE ;	1679:2:45025:45036	4255727	7	True				
ANR	4255883	Identifier	TRUE		4255727	0					
ANR	4255884	Label	case 's' :	1681:1:45042:45050	4255727	5	True				
ANR	4255885	CompoundStatement		56:2:1128:1148	4255727	6					
ANR	4255886	ExpressionStatement	"token = strtok ( NULL , "" "" )"	1682:2:45080:45107	4255727	0	True				
ANR	4255887	AssignmentExpression	"token = strtok ( NULL , "" "" )"		4255727	0		=			
ANR	4255888	Identifier	token		4255727	0					
ANR	4255889	CallExpression	"strtok ( NULL , "" "" )"		4255727	1					
ANR	4255890	Callee	strtok		4255727	0					
ANR	4255891	Identifier	strtok		4255727	0					
ANR	4255892	ArgumentList	NULL		4255727	1					
ANR	4255893	Argument	NULL		4255727	0					
ANR	4255894	Identifier	NULL		4255727	0					
ANR	4255895	Argument	""" """		4255727	1					
ANR	4255896	PrimaryExpression	""" """		4255727	0					
ANR	4255897	IfStatement	if ( ! token )		4255727	1					
ANR	4255898	Condition	! token	1683:7:45116:45121	4255727	0	True				
ANR	4255899	UnaryOperationExpression	! token		4255727	0					
ANR	4255900	UnaryOperator	!		4255727	0					
ANR	4255901	Identifier	token		4255727	1					
ANR	4255902	CompoundStatement		39:16:746:746	4255727	1					
ANR	4255903	ExpressionStatement	"printf ( ""You must specify a signal to send.\\n"" )"	1684:3:45130:45179	4255727	0	True				
ANR	4255904	CallExpression	"printf ( ""You must specify a signal to send.\\n"" )"		4255727	0					
ANR	4255905	Callee	printf		4255727	0					
ANR	4255906	Identifier	printf		4255727	0					
ANR	4255907	ArgumentList	"""You must specify a signal to send.\\n"""		4255727	1					
ANR	4255908	Argument	"""You must specify a signal to send.\\n"""		4255727	0					
ANR	4255909	PrimaryExpression	"""You must specify a signal to send.\\n"""		4255727	0					
ANR	4255910	ReturnStatement	return TRUE ;	1685:3:45184:45195	4255727	1	True				
ANR	4255911	Identifier	TRUE		4255727	0					
ANR	4255912	IfStatement	"if ( strncmp ( token , ""dc_"" , 3 ) )"		4255727	2					
ANR	4255913	Condition	"strncmp ( token , ""dc_"" , 3 )"	1687:7:45208:45233	4255727	0	True				
ANR	4255914	CallExpression	"strncmp ( token , ""dc_"" , 3 )"		4255727	0					
ANR	4255915	Callee	strncmp		4255727	0					
ANR	4255916	Identifier	strncmp		4255727	0					
ANR	4255917	ArgumentList	token		4255727	1					
ANR	4255918	Argument	token		4255727	0					
ANR	4255919	Identifier	token		4255727	0					
ANR	4255920	Argument	"""dc_"""		4255727	1					
ANR	4255921	PrimaryExpression	"""dc_"""		4255727	0					
ANR	4255922	Argument	3		4255727	2					
ANR	4255923	PrimaryExpression	3		4255727	0					
ANR	4255924	CompoundStatement		43:36:858:858	4255727	1					
ANR	4255925	Statement	printf	1688:3:45242:45247	4255727	0	True				
ANR	4255926	Statement	(	1688:10:45249:45249	4255727	1	True				
ANR	4255927	Statement	"""The signal must be a daemoncore signal """	1688:12:45251:45291	4255727	2	True				
ANR	4255928	Statement	"""(starts with DC_).\\n"""	1689:6:45299:45320	4255727	3	True				
ANR	4255929	Statement	)	1689:29:45322:45322	4255727	4	True				
ANR	4255930	ExpressionStatement		1689:30:45323:45323	4255727	5	True				
ANR	4255931	ReturnStatement	return TRUE ;	1690:3:45328:45339	4255727	6	True				
ANR	4255932	Identifier	TRUE		4255727	0					
ANR	4255933	ExpressionStatement	signal = getCommandNum ( token )	1693:2:45350:45381	4255727	3	True				
ANR	4255934	AssignmentExpression	signal = getCommandNum ( token )		4255727	0		=			
ANR	4255935	Identifier	signal		4255727	0					
ANR	4255936	CallExpression	getCommandNum ( token )		4255727	1					
ANR	4255937	Callee	getCommandNum		4255727	0					
ANR	4255938	Identifier	getCommandNum		4255727	0					
ANR	4255939	ArgumentList	token		4255727	1					
ANR	4255940	Argument	token		4255727	0					
ANR	4255941	Identifier	token		4255727	0					
ANR	4255942	IfStatement	if ( signal == - 1 )		4255727	4					
ANR	4255943	Condition	signal == - 1	1694:7:45390:45401	4255727	0	True				
ANR	4255944	EqualityExpression	signal == - 1		4255727	0		==			
ANR	4255945	Identifier	signal		4255727	0					
ANR	4255946	UnaryOperationExpression	- 1		4255727	1					
ANR	4255947	UnaryOperator	-		4255727	0					
ANR	4255948	PrimaryExpression	1		4255727	1					
ANR	4255949	CompoundStatement		50:22:1026:1026	4255727	1					
ANR	4255950	ExpressionStatement	"printf ( ""Signal %s not known.\\n"" , token )"	1695:3:45410:45452	4255727	0	True				
ANR	4255951	CallExpression	"printf ( ""Signal %s not known.\\n"" , token )"		4255727	0					
ANR	4255952	Callee	printf		4255727	0					
ANR	4255953	Identifier	printf		4255727	0					
ANR	4255954	ArgumentList	"""Signal %s not known.\\n"""		4255727	1					
ANR	4255955	Argument	"""Signal %s not known.\\n"""		4255727	0					
ANR	4255956	PrimaryExpression	"""Signal %s not known.\\n"""		4255727	0					
ANR	4255957	Argument	token		4255727	1					
ANR	4255958	Identifier	token		4255727	0					
ANR	4255959	ReturnStatement	return TRUE ;	1696:3:45457:45468	4255727	1	True				
ANR	4255960	Identifier	TRUE		4255727	0					
ANR	4255961	IdentifierDeclStatement	"Daemon d ( DT_ANY , addr ) ;"	1699:2:45479:45503	4255727	5	True				
ANR	4255962	IdentifierDecl	"d ( DT_ANY , addr )"		4255727	0					
ANR	4255963	IdentifierDeclType	Daemon		4255727	0					
ANR	4255964	Identifier	d		4255727	1					
ANR	4255965	Expression	"DT_ANY , addr"		4255727	2					
ANR	4255966	Identifier	DT_ANY		4255727	0					
ANR	4255967	Identifier	addr		4255727	1					
ANR	4255968	IdentifierDeclStatement	CondorError errstack ;	1700:2:45507:45527	4255727	6	True				
ANR	4255969	IdentifierDecl	errstack		4255727	0					
ANR	4255970	IdentifierDeclType	CondorError		4255727	0					
ANR	4255971	Identifier	errstack		4255727	1					
ANR	4255972	IfStatement	"if ( ! d . startCommand ( DC_RAISESIGNAL , & sock , 0 , & errstack ) )"		4255727	7					
ANR	4255973	Condition	"! d . startCommand ( DC_RAISESIGNAL , & sock , 0 , & errstack )"	1701:6:45535:45587	4255727	0	True				
ANR	4255974	UnaryOperationExpression	"! d . startCommand ( DC_RAISESIGNAL , & sock , 0 , & errstack )"		4255727	0					
ANR	4255975	UnaryOperator	!		4255727	0					
ANR	4255976	CallExpression	"d . startCommand ( DC_RAISESIGNAL , & sock , 0 , & errstack )"		4255727	1					
ANR	4255977	Callee	d . startCommand		4255727	0					
ANR	4255978	MemberAccess	d . startCommand		4255727	0					
ANR	4255979	Identifier	d		4255727	0					
ANR	4255980	Identifier	startCommand		4255727	1					
ANR	4255981	ArgumentList	DC_RAISESIGNAL		4255727	1					
ANR	4255982	Argument	DC_RAISESIGNAL		4255727	0					
ANR	4255983	Identifier	DC_RAISESIGNAL		4255727	0					
ANR	4255984	Argument	& sock		4255727	1					
ANR	4255985	UnaryOperationExpression	& sock		4255727	0					
ANR	4255986	UnaryOperator	&		4255727	0					
ANR	4255987	Identifier	sock		4255727	1					
ANR	4255988	Argument	0		4255727	2					
ANR	4255989	PrimaryExpression	0		4255727	0					
ANR	4255990	Argument	& errstack		4255727	3					
ANR	4255991	UnaryOperationExpression	& errstack		4255727	0					
ANR	4255992	UnaryOperator	&		4255727	0					
ANR	4255993	Identifier	errstack		4255727	1					
ANR	4255994	CompoundStatement		57:61:1211:1211	4255727	1					
ANR	4255995	ExpressionStatement	"fprintf ( stderr , ""ERROR\\n%s\\n"" , errstack . getFullText ( true ) )"	1702:3:45595:45655	4255727	0	True				
ANR	4255996	CallExpression	"fprintf ( stderr , ""ERROR\\n%s\\n"" , errstack . getFullText ( true ) )"		4255727	0					
ANR	4255997	Callee	fprintf		4255727	0					
ANR	4255998	Identifier	fprintf		4255727	0					
ANR	4255999	ArgumentList	stderr		4255727	1					
ANR	4256000	Argument	stderr		4255727	0					
ANR	4256001	Identifier	stderr		4255727	0					
ANR	4256002	Argument	"""ERROR\\n%s\\n"""		4255727	1					
ANR	4256003	PrimaryExpression	"""ERROR\\n%s\\n"""		4255727	0					
ANR	4256004	Argument	errstack . getFullText ( true )		4255727	2					
ANR	4256005	CallExpression	errstack . getFullText ( true )		4255727	0					
ANR	4256006	Callee	errstack . getFullText		4255727	0					
ANR	4256007	MemberAccess	errstack . getFullText		4255727	0					
ANR	4256008	Identifier	errstack		4255727	0					
ANR	4256009	Identifier	getFullText		4255727	1					
ANR	4256010	ArgumentList	true		4255727	1					
ANR	4256011	Argument	true		4255727	0					
ANR	4256012	Identifier	true		4255727	0					
ANR	4256013	ExpressionStatement	sock . encode ( )	1705:2:45664:45677	4255727	8	True				
ANR	4256014	CallExpression	sock . encode ( )		4255727	0					
ANR	4256015	Callee	sock . encode		4255727	0					
ANR	4256016	MemberAccess	sock . encode		4255727	0					
ANR	4256017	Identifier	sock		4255727	0					
ANR	4256018	Identifier	encode		4255727	1					
ANR	4256019	ArgumentList			4255727	1					
ANR	4256020	ExpressionStatement	sock . code ( signal )	1706:2:45681:45700	4255727	9	True				
ANR	4256021	CallExpression	sock . code ( signal )		4255727	0					
ANR	4256022	Callee	sock . code		4255727	0					
ANR	4256023	MemberAccess	sock . code		4255727	0					
ANR	4256024	Identifier	sock		4255727	0					
ANR	4256025	Identifier	code		4255727	1					
ANR	4256026	ArgumentList	signal		4255727	1					
ANR	4256027	Argument	signal		4255727	0					
ANR	4256028	Identifier	signal		4255727	0					
ANR	4256029	ExpressionStatement	sock . end_of_message ( )	1707:2:45704:45725	4255727	10	True				
ANR	4256030	CallExpression	sock . end_of_message ( )		4255727	0					
ANR	4256031	Callee	sock . end_of_message		4255727	0					
ANR	4256032	MemberAccess	sock . end_of_message		4255727	0					
ANR	4256033	Identifier	sock		4255727	0					
ANR	4256034	Identifier	end_of_message		4255727	1					
ANR	4256035	ArgumentList			4255727	1					
ANR	4256036	ReturnStatement	return TRUE ;	1709:2:45732:45743	4255727	11	True				
ANR	4256037	Identifier	TRUE		4255727	0					
ANR	4256038	Label	case 'c' :	1711:1:45749:45757	4255727	7	True				
ANR	4256039	CompoundStatement		81:2:1693:1713	4255727	8					
ANR	4256040	ExpressionStatement	"token = strtok ( NULL , "" "" )"	1712:2:45787:45814	4255727	0	True				
ANR	4256041	AssignmentExpression	"token = strtok ( NULL , "" "" )"		4255727	0		=			
ANR	4256042	Identifier	token		4255727	0					
ANR	4256043	CallExpression	"strtok ( NULL , "" "" )"		4255727	1					
ANR	4256044	Callee	strtok		4255727	0					
ANR	4256045	Identifier	strtok		4255727	0					
ANR	4256046	ArgumentList	NULL		4255727	1					
ANR	4256047	Argument	NULL		4255727	0					
ANR	4256048	Identifier	NULL		4255727	0					
ANR	4256049	Argument	""" """		4255727	1					
ANR	4256050	PrimaryExpression	""" """		4255727	0					
ANR	4256051	IfStatement	if ( ! token )		4255727	1					
ANR	4256052	Condition	! token	1713:7:45823:45828	4255727	0	True				
ANR	4256053	UnaryOperationExpression	! token		4255727	0					
ANR	4256054	UnaryOperator	!		4255727	0					
ANR	4256055	Identifier	token		4255727	1					
ANR	4256056	CompoundStatement		69:16:1453:1453	4255727	1					
ANR	4256057	ExpressionStatement	"printf ( ""You must specify a command to send.\\n"" )"	1714:3:45837:45887	4255727	0	True				
ANR	4256058	CallExpression	"printf ( ""You must specify a command to send.\\n"" )"		4255727	0					
ANR	4256059	Callee	printf		4255727	0					
ANR	4256060	Identifier	printf		4255727	0					
ANR	4256061	ArgumentList	"""You must specify a command to send.\\n"""		4255727	1					
ANR	4256062	Argument	"""You must specify a command to send.\\n"""		4255727	0					
ANR	4256063	PrimaryExpression	"""You must specify a command to send.\\n"""		4255727	0					
ANR	4256064	ReturnStatement	return TRUE ;	1715:3:45892:45903	4255727	1	True				
ANR	4256065	Identifier	TRUE		4255727	0					
ANR	4256066	ExpressionStatement	command = getCommandNum ( token )	1718:2:45914:45946	4255727	2	True				
ANR	4256067	AssignmentExpression	command = getCommandNum ( token )		4255727	0		=			
ANR	4256068	Identifier	command		4255727	0					
ANR	4256069	CallExpression	getCommandNum ( token )		4255727	1					
ANR	4256070	Callee	getCommandNum		4255727	0					
ANR	4256071	Identifier	getCommandNum		4255727	0					
ANR	4256072	ArgumentList	token		4255727	1					
ANR	4256073	Argument	token		4255727	0					
ANR	4256074	Identifier	token		4255727	0					
ANR	4256075	IfStatement	if ( command == - 1 )		4255727	3					
ANR	4256076	Condition	command == - 1	1719:7:45955:45967	4255727	0	True				
ANR	4256077	EqualityExpression	command == - 1		4255727	0		==			
ANR	4256078	Identifier	command		4255727	0					
ANR	4256079	UnaryOperationExpression	- 1		4255727	1					
ANR	4256080	UnaryOperator	-		4255727	0					
ANR	4256081	PrimaryExpression	1		4255727	1					
ANR	4256082	CompoundStatement		75:23:1592:1592	4255727	1					
ANR	4256083	ExpressionStatement	"printf ( ""Command %s not known.\\n"" , token )"	1720:3:45976:46019	4255727	0	True				
ANR	4256084	CallExpression	"printf ( ""Command %s not known.\\n"" , token )"		4255727	0					
ANR	4256085	Callee	printf		4255727	0					
ANR	4256086	Identifier	printf		4255727	0					
ANR	4256087	ArgumentList	"""Command %s not known.\\n"""		4255727	1					
ANR	4256088	Argument	"""Command %s not known.\\n"""		4255727	0					
ANR	4256089	PrimaryExpression	"""Command %s not known.\\n"""		4255727	0					
ANR	4256090	Argument	token		4255727	1					
ANR	4256091	Identifier	token		4255727	0					
ANR	4256092	ReturnStatement	return TRUE ;	1721:3:46024:46035	4255727	1	True				
ANR	4256093	Identifier	TRUE		4255727	0					
ANR	4256094	IdentifierDeclStatement	"Daemon d ( DT_ANY , addr ) ;"	1724:2:46044:46068	4255727	4	True				
ANR	4256095	IdentifierDecl	"d ( DT_ANY , addr )"		4255727	0					
ANR	4256096	IdentifierDeclType	Daemon		4255727	0					
ANR	4256097	Identifier	d		4255727	1					
ANR	4256098	Expression	"DT_ANY , addr"		4255727	2					
ANR	4256099	Identifier	DT_ANY		4255727	0					
ANR	4256100	Identifier	addr		4255727	1					
ANR	4256101	IdentifierDeclStatement	CondorError errstack ;	1725:2:46072:46092	4255727	5	True				
ANR	4256102	IdentifierDecl	errstack		4255727	0					
ANR	4256103	IdentifierDeclType	CondorError		4255727	0					
ANR	4256104	Identifier	errstack		4255727	1					
ANR	4256105	IfStatement	"if ( ! d . startCommand ( command , & sock , 0 , & errstack ) )"		4255727	6					
ANR	4256106	Condition	"! d . startCommand ( command , & sock , 0 , & errstack )"	1726:6:46100:46146	4255727	0	True				
ANR	4256107	UnaryOperationExpression	"! d . startCommand ( command , & sock , 0 , & errstack )"		4255727	0					
ANR	4256108	UnaryOperator	!		4255727	0					
ANR	4256109	CallExpression	"d . startCommand ( command , & sock , 0 , & errstack )"		4255727	1					
ANR	4256110	Callee	d . startCommand		4255727	0					
ANR	4256111	MemberAccess	d . startCommand		4255727	0					
ANR	4256112	Identifier	d		4255727	0					
ANR	4256113	Identifier	startCommand		4255727	1					
ANR	4256114	ArgumentList	command		4255727	1					
ANR	4256115	Argument	command		4255727	0					
ANR	4256116	Identifier	command		4255727	0					
ANR	4256117	Argument	& sock		4255727	1					
ANR	4256118	UnaryOperationExpression	& sock		4255727	0					
ANR	4256119	UnaryOperator	&		4255727	0					
ANR	4256120	Identifier	sock		4255727	1					
ANR	4256121	Argument	0		4255727	2					
ANR	4256122	PrimaryExpression	0		4255727	0					
ANR	4256123	Argument	& errstack		4255727	3					
ANR	4256124	UnaryOperationExpression	& errstack		4255727	0					
ANR	4256125	UnaryOperator	&		4255727	0					
ANR	4256126	Identifier	errstack		4255727	1					
ANR	4256127	CompoundStatement		82:55:1770:1770	4255727	1					
ANR	4256128	ExpressionStatement	"fprintf ( stderr , ""%s\\n"" , errstack . getFullText ( true ) )"	1727:3:46154:46207	4255727	0	True				
ANR	4256129	CallExpression	"fprintf ( stderr , ""%s\\n"" , errstack . getFullText ( true ) )"		4255727	0					
ANR	4256130	Callee	fprintf		4255727	0					
ANR	4256131	Identifier	fprintf		4255727	0					
ANR	4256132	ArgumentList	stderr		4255727	1					
ANR	4256133	Argument	stderr		4255727	0					
ANR	4256134	Identifier	stderr		4255727	0					
ANR	4256135	Argument	"""%s\\n"""		4255727	1					
ANR	4256136	PrimaryExpression	"""%s\\n"""		4255727	0					
ANR	4256137	Argument	errstack . getFullText ( true )		4255727	2					
ANR	4256138	CallExpression	errstack . getFullText ( true )		4255727	0					
ANR	4256139	Callee	errstack . getFullText		4255727	0					
ANR	4256140	MemberAccess	errstack . getFullText		4255727	0					
ANR	4256141	Identifier	errstack		4255727	0					
ANR	4256142	Identifier	getFullText		4255727	1					
ANR	4256143	ArgumentList	true		4255727	1					
ANR	4256144	Argument	true		4255727	0					
ANR	4256145	Identifier	true		4255727	0					
ANR	4256146	ExpressionStatement	sock . encode ( )	1729:2:46215:46228	4255727	7	True				
ANR	4256147	CallExpression	sock . encode ( )		4255727	0					
ANR	4256148	Callee	sock . encode		4255727	0					
ANR	4256149	MemberAccess	sock . encode		4255727	0					
ANR	4256150	Identifier	sock		4255727	0					
ANR	4256151	Identifier	encode		4255727	1					
ANR	4256152	ArgumentList			4255727	1					
ANR	4256153	WhileStatement	"while ( ( token = strtok ( NULL , "" "" ) ) )"		4255727	8					
ANR	4256154	Condition	"token = strtok ( NULL , "" "" )"	1730:9:46239:46265	4255727	0	True				
ANR	4256155	AssignmentExpression	"token = strtok ( NULL , "" "" )"		4255727	0		=			
ANR	4256156	Identifier	token		4255727	0					
ANR	4256157	CallExpression	"strtok ( NULL , "" "" )"		4255727	1					
ANR	4256158	Callee	strtok		4255727	0					
ANR	4256159	Identifier	strtok		4255727	0					
ANR	4256160	ArgumentList	NULL		4255727	1					
ANR	4256161	Argument	NULL		4255727	0					
ANR	4256162	Identifier	NULL		4255727	0					
ANR	4256163	Argument	""" """		4255727	1					
ANR	4256164	PrimaryExpression	""" """		4255727	0					
ANR	4256165	CompoundStatement		86:39:1890:1890	4255727	1					
ANR	4256166	IfStatement	if ( isdigit ( token [ 0 ] ) )		4255727	0					
ANR	4256167	Condition	isdigit ( token [ 0 ] )	1731:8:46279:46295	4255727	0	True				
ANR	4256168	CallExpression	isdigit ( token [ 0 ] )		4255727	0					
ANR	4256169	Callee	isdigit		4255727	0					
ANR	4256170	Identifier	isdigit		4255727	0					
ANR	4256171	ArgumentList	token [ 0 ]		4255727	1					
ANR	4256172	Argument	token [ 0 ]		4255727	0					
ANR	4256173	ArrayIndexing	token [ 0 ]		4255727	0					
ANR	4256174	Identifier	token		4255727	0					
ANR	4256175	PrimaryExpression	0		4255727	1					
ANR	4256176	CompoundStatement		88:4:1926:1949	4255727	1					
ANR	4256177	IdentifierDeclStatement	int dig = atoi ( token ) ;	1732:4:46305:46328	4255727	0	True				
ANR	4256178	IdentifierDecl	dig = atoi ( token )		4255727	0					
ANR	4256179	IdentifierDeclType	int		4255727	0					
ANR	4256180	Identifier	dig		4255727	1					
ANR	4256181	AssignmentExpression	dig = atoi ( token )		4255727	2		=			
ANR	4256182	Identifier	dig		4255727	0					
ANR	4256183	CallExpression	atoi ( token )		4255727	1					
ANR	4256184	Callee	atoi		4255727	0					
ANR	4256185	Identifier	atoi		4255727	0					
ANR	4256186	ArgumentList	token		4255727	1					
ANR	4256187	Argument	token		4255727	0					
ANR	4256188	Identifier	token		4255727	0					
ANR	4256189	IfStatement	if ( ! sock . code ( dig ) )		4255727	1					
ANR	4256190	Condition	! sock . code ( dig )	1733:9:46339:46355	4255727	0	True				
ANR	4256191	UnaryOperationExpression	! sock . code ( dig )		4255727	0					
ANR	4256192	UnaryOperator	!		4255727	0					
ANR	4256193	CallExpression	sock . code ( dig )		4255727	1					
ANR	4256194	Callee	sock . code		4255727	0					
ANR	4256195	MemberAccess	sock . code		4255727	0					
ANR	4256196	Identifier	sock		4255727	0					
ANR	4256197	Identifier	code		4255727	1					
ANR	4256198	ArgumentList	dig		4255727	1					
ANR	4256199	Argument	dig		4255727	0					
ANR	4256200	Identifier	dig		4255727	0					
ANR	4256201	CompoundStatement		89:29:1980:1980	4255727	1					
ANR	4256202	ExpressionStatement	"printf ( ""Error coding %d.\\n"" , dig )"	1734:5:46366:46402	4255727	0	True				
ANR	4256203	CallExpression	"printf ( ""Error coding %d.\\n"" , dig )"		4255727	0					
ANR	4256204	Callee	printf		4255727	0					
ANR	4256205	Identifier	printf		4255727	0					
ANR	4256206	ArgumentList	"""Error coding %d.\\n"""		4255727	1					
ANR	4256207	Argument	"""Error coding %d.\\n"""		4255727	0					
ANR	4256208	PrimaryExpression	"""Error coding %d.\\n"""		4255727	0					
ANR	4256209	Argument	dig		4255727	1					
ANR	4256210	Identifier	dig		4255727	0					
ANR	4256211	ReturnStatement	return TRUE ;	1735:5:46409:46420	4255727	1	True				
ANR	4256212	Identifier	TRUE		4255727	0					
ANR	4256213	ElseStatement	else		4255727	0					
ANR	4256214	CompoundStatement		93:10:2059:2059	4255727	0					
ANR	4256215	IfStatement	if ( ! sock . code ( token ) )		4255727	0					
ANR	4256216	Condition	! sock . code ( token )	1738:9:46449:46467	4255727	0	True				
ANR	4256217	UnaryOperationExpression	! sock . code ( token )		4255727	0					
ANR	4256218	UnaryOperator	!		4255727	0					
ANR	4256219	CallExpression	sock . code ( token )		4255727	1					
ANR	4256220	Callee	sock . code		4255727	0					
ANR	4256221	MemberAccess	sock . code		4255727	0					
ANR	4256222	Identifier	sock		4255727	0					
ANR	4256223	Identifier	code		4255727	1					
ANR	4256224	ArgumentList	token		4255727	1					
ANR	4256225	Argument	token		4255727	0					
ANR	4256226	Identifier	token		4255727	0					
ANR	4256227	CompoundStatement		94:31:2092:2092	4255727	1					
ANR	4256228	ExpressionStatement	"printf ( ""Error coding %s.\\n"" , token )"	1739:5:46478:46516	4255727	0	True				
ANR	4256229	CallExpression	"printf ( ""Error coding %s.\\n"" , token )"		4255727	0					
ANR	4256230	Callee	printf		4255727	0					
ANR	4256231	Identifier	printf		4255727	0					
ANR	4256232	ArgumentList	"""Error coding %s.\\n"""		4255727	1					
ANR	4256233	Argument	"""Error coding %s.\\n"""		4255727	0					
ANR	4256234	PrimaryExpression	"""Error coding %s.\\n"""		4255727	0					
ANR	4256235	Argument	token		4255727	1					
ANR	4256236	Identifier	token		4255727	0					
ANR	4256237	ReturnStatement	return TRUE ;	1740:5:46523:46534	4255727	1	True				
ANR	4256238	Identifier	TRUE		4255727	0					
ANR	4256239	ExpressionStatement	sock . end_of_message ( )	1744:2:46553:46574	4255727	9	True				
ANR	4256240	CallExpression	sock . end_of_message ( )		4255727	0					
ANR	4256241	Callee	sock . end_of_message		4255727	0					
ANR	4256242	MemberAccess	sock . end_of_message		4255727	0					
ANR	4256243	Identifier	sock		4255727	0					
ANR	4256244	Identifier	end_of_message		4255727	1					
ANR	4256245	ArgumentList			4255727	1					
ANR	4256246	ReturnStatement	return TRUE ;	1746:2:46579:46590	4255727	10	True				
ANR	4256247	Identifier	TRUE		4255727	0					
ANR	4256248	Label	case 'r' :	1748:1:46596:46604	4255727	9	True				
ANR	4256249	IfStatement	if ( doSquawkReconnect ( addr ) )		4255727	10					
ANR	4256250	Condition	doSquawkReconnect ( addr )	1749:7:46613:46637	4255727	0	True				
ANR	4256251	CallExpression	doSquawkReconnect ( addr )		4255727	0					
ANR	4256252	Callee	doSquawkReconnect		4255727	0					
ANR	4256253	Identifier	doSquawkReconnect		4255727	0					
ANR	4256254	ArgumentList	addr		4255727	1					
ANR	4256255	Argument	addr		4255727	0					
ANR	4256256	Identifier	addr		4255727	0					
ANR	4256257	CompoundStatement		105:35:2262:2262	4255727	1					
ANR	4256258	ExpressionStatement	"printf ( ""Now talking to %s.\\n"" , addr )"	1750:3:46646:46685	4255727	0	True				
ANR	4256259	CallExpression	"printf ( ""Now talking to %s.\\n"" , addr )"		4255727	0					
ANR	4256260	Callee	printf		4255727	0					
ANR	4256261	Identifier	printf		4255727	0					
ANR	4256262	ArgumentList	"""Now talking to %s.\\n"""		4255727	1					
ANR	4256263	Argument	"""Now talking to %s.\\n"""		4255727	0					
ANR	4256264	PrimaryExpression	"""Now talking to %s.\\n"""		4255727	0					
ANR	4256265	Argument	addr		4255727	1					
ANR	4256266	Identifier	addr		4255727	0					
ANR	4256267	ReturnStatement	return TRUE ;	1752:2:46693:46704	4255727	11	True				
ANR	4256268	Identifier	TRUE		4255727	0					
ANR	4256269	Label	case '\\n' :	1754:1:46708:46717	4255727	12	True				
ANR	4256270	ReturnStatement	return TRUE ;	1755:2:46721:46732	4255727	13	True				
ANR	4256271	Identifier	TRUE		4255727	0					
ANR	4256272	Label	case 'h' :	1757:1:46736:46744	4255727	14	True				
ANR	4256273	IfStatement	"if ( ( token = strtok ( NULL , "" "" ) ) != NULL )"		4255727	15					
ANR	4256274	Condition	"( token = strtok ( NULL , "" "" ) ) != NULL"	1758:7:46764:46801	4255727	0	True				
ANR	4256275	EqualityExpression	"( token = strtok ( NULL , "" "" ) ) != NULL"		4255727	0		!=			
ANR	4256276	AssignmentExpression	"token = strtok ( NULL , "" "" )"		4255727	0		=			
ANR	4256277	Identifier	token		4255727	0					
ANR	4256278	CallExpression	"strtok ( NULL , "" "" )"		4255727	1					
ANR	4256279	Callee	strtok		4255727	0					
ANR	4256280	Identifier	strtok		4255727	0					
ANR	4256281	ArgumentList	NULL		4255727	1					
ANR	4256282	Argument	NULL		4255727	0					
ANR	4256283	Identifier	NULL		4255727	0					
ANR	4256284	Argument	""" """		4255727	1					
ANR	4256285	PrimaryExpression	""" """		4255727	0					
ANR	4256286	Identifier	NULL		4255727	1					
ANR	4256287	CompoundStatement		114:48:2426:2426	4255727	1					
ANR	4256288	ExpressionStatement	squawkHelp ( token )	1759:3:46810:46829	4255727	0	True				
ANR	4256289	CallExpression	squawkHelp ( token )		4255727	0					
ANR	4256290	Callee	squawkHelp		4255727	0					
ANR	4256291	Identifier	squawkHelp		4255727	0					
ANR	4256292	ArgumentList	token		4255727	1					
ANR	4256293	Argument	token		4255727	0					
ANR	4256294	Identifier	token		4255727	0					
ANR	4256295	ReturnStatement	return TRUE ;	1760:3:46834:46845	4255727	1	True				
ANR	4256296	Identifier	TRUE		4255727	0					
ANR	4256297	Label	default :	1763:1:46894:46901	4255727	16	True				
ANR	4256298	Identifier	default		4255727	0					
ANR	4256299	ExpressionStatement	"printf ( ""Valid commands are \\""help\\"", \\""signal\\"", \\""command\\"","" )"	1764:2:46905:46970	4255727	17	True				
ANR	4256300	CallExpression	"printf ( ""Valid commands are \\""help\\"", \\""signal\\"", \\""command\\"","" )"		4255727	0					
ANR	4256301	Callee	printf		4255727	0					
ANR	4256302	Identifier	printf		4255727	0					
ANR	4256303	ArgumentList	"""Valid commands are \\""help\\"", \\""signal\\"", \\""command\\"","""		4255727	1					
ANR	4256304	Argument	"""Valid commands are \\""help\\"", \\""signal\\"", \\""command\\"","""		4255727	0					
ANR	4256305	PrimaryExpression	"""Valid commands are \\""help\\"", \\""signal\\"", \\""command\\"","""		4255727	0					
ANR	4256306	ExpressionStatement	"printf ( ""\\""reconnect\\"",\\n\\""dump\\"" (state into a ClassAd) and"" )"	1765:2:46974:47037	4255727	18	True				
ANR	4256307	CallExpression	"printf ( ""\\""reconnect\\"",\\n\\""dump\\"" (state into a ClassAd) and"" )"		4255727	0					
ANR	4256308	Callee	printf		4255727	0					
ANR	4256309	Identifier	printf		4255727	0					
ANR	4256310	ArgumentList	"""\\""reconnect\\"",\\n\\""dump\\"" (state into a ClassAd) and"""		4255727	1					
ANR	4256311	Argument	"""\\""reconnect\\"",\\n\\""dump\\"" (state into a ClassAd) and"""		4255727	0					
ANR	4256312	PrimaryExpression	"""\\""reconnect\\"",\\n\\""dump\\"" (state into a ClassAd) and"""		4255727	0					
ANR	4256313	ExpressionStatement	"printf ( ""\\""quit\\"".\\n"" )"	1766:2:47041:47063	4255727	19	True				
ANR	4256314	CallExpression	"printf ( ""\\""quit\\"".\\n"" )"		4255727	0					
ANR	4256315	Callee	printf		4255727	0					
ANR	4256316	Identifier	printf		4255727	0					
ANR	4256317	ArgumentList	"""\\""quit\\"".\\n"""		4255727	1					
ANR	4256318	Argument	"""\\""quit\\"".\\n"""		4255727	0					
ANR	4256319	PrimaryExpression	"""\\""quit\\"".\\n"""		4255727	0					
ANR	4256320	ReturnStatement	return TRUE ;	1767:2:47067:47078	4255727	20	True				
ANR	4256321	Identifier	TRUE		4255727	0					
ANR	4256322	ReturnStatement	return TRUE ;	1770:1:47100:47111	4255727	7	True				
ANR	4256323	Identifier	TRUE		4255727	0					
ANR	4256324	ReturnType	int		4255727	1					
ANR	4256325	Identifier	handleSquawk		4255727	2					
ANR	4256326	ParameterList	"char * line , char * addr"		4255727	3					
ANR	4256327	Parameter	char * line	1645:14:44353:44362	4255727	0	True				
ANR	4256328	ParameterType	char *		4255727	0					
ANR	4256329	Identifier	line		4255727	1					
ANR	4256330	Parameter	char * addr	1645:26:44365:44374	4255727	1	True				
ANR	4256331	ParameterType	char *		4255727	0					
ANR	4256332	Identifier	addr		4255727	1					
ANR	4256333	CFGEntryNode	ENTRY		4255727		True				
ANR	4256334	CFGExitNode	EXIT		4255727		True				
ANR	4256335	Symbol	dig		4255727						
ANR	4256336	Symbol	line		4255727						
ANR	4256337	Symbol	& ad		4255727						
ANR	4256338	Symbol	getCommandNum		4255727						
ANR	4256339	Symbol	strncmp		4255727						
ANR	4256340	Symbol	sock . connect		4255727						
ANR	4256341	Symbol	DC_RAISESIGNAL		4255727						
ANR	4256342	Symbol	& errstack		4255727						
ANR	4256343	Symbol	DUMP_STATE		4255727						
ANR	4256344	Symbol	sock . code		4255727						
ANR	4256345	Symbol	addr		4255727						
ANR	4256346	Symbol	signal		4255727						
ANR	4256347	Symbol	isdigit		4255727						
ANR	4256348	Symbol	atoi		4255727						
ANR	4256349	Symbol	ad		4255727						
ANR	4256350	Symbol	NULL		4255727						
ANR	4256351	Symbol	doSquawkReconnect		4255727						
ANR	4256352	Symbol	d		4255727						
ANR	4256353	Symbol	TRUE		4255727						
ANR	4256354	Symbol	strtok		4255727						
ANR	4256355	Symbol	stderr		4255727						
ANR	4256356	Symbol	command		4255727						
ANR	4256357	Symbol	token		4255727						
ANR	4256358	Symbol	& sock		4255727						
ANR	4256359	Symbol	sock		4255727						
ANR	4256360	Symbol	d . startCommand		4255727						
ANR	4256361	Symbol	errstack		4255727						
ANR	4256362	Symbol	* token		4255727						
ANR	4256363	Symbol	true		4255727						
ANR	4256364	Symbol	errstack . getFullText		4255727						
ANR	4256365	Symbol	FALSE		4255727						
ANR	4256366	Function	doSquawkReconnect	1773:0:47147:48865							
ANR	4256367	FunctionDef	doSquawkReconnect (char * addr)		4256366	0					
ANR	4256368	CompoundStatement		1774:32:47183:48865	4256366	0					
ANR	4256369	IdentifierDeclStatement	char * token ;	1776:1:47188:47199	4256366	0	True				
ANR	4256370	IdentifierDecl	* token		4256366	0					
ANR	4256371	IdentifierDeclType	char *		4256366	0					
ANR	4256372	Identifier	token		4256366	1					
ANR	4256373	IfStatement	"if ( ( token = strtok ( NULL , "" "" ) ) == NULL )"		4256366	1					
ANR	4256374	Condition	"( token = strtok ( NULL , "" "" ) ) == NULL"	1778:6:47209:47245	4256366	0	True				
ANR	4256375	EqualityExpression	"( token = strtok ( NULL , "" "" ) ) == NULL"		4256366	0		==			
ANR	4256376	AssignmentExpression	"token = strtok ( NULL , "" "" )"		4256366	0		=			
ANR	4256377	Identifier	token		4256366	0					
ANR	4256378	CallExpression	"strtok ( NULL , "" "" )"		4256366	1					
ANR	4256379	Callee	strtok		4256366	0					
ANR	4256380	Identifier	strtok		4256366	0					
ANR	4256381	ArgumentList	NULL		4256366	1					
ANR	4256382	Argument	NULL		4256366	0					
ANR	4256383	Identifier	NULL		4256366	0					
ANR	4256384	Argument	""" """		4256366	1					
ANR	4256385	PrimaryExpression	""" """		4256366	0					
ANR	4256386	Identifier	NULL		4256366	1					
ANR	4256387	CompoundStatement		5:46:65:65	4256366	1					
ANR	4256388	ExpressionStatement	"printf ( ""You must specify a daemon to connect to...\\n"" )"	1779:2:47253:47310	4256366	0	True				
ANR	4256389	CallExpression	"printf ( ""You must specify a daemon to connect to...\\n"" )"		4256366	0					
ANR	4256390	Callee	printf		4256366	0					
ANR	4256391	Identifier	printf		4256366	0					
ANR	4256392	ArgumentList	"""You must specify a daemon to connect to...\\n"""		4256366	1					
ANR	4256393	Argument	"""You must specify a daemon to connect to...\\n"""		4256366	0					
ANR	4256394	PrimaryExpression	"""You must specify a daemon to connect to...\\n"""		4256366	0					
ANR	4256395	ReturnStatement	return FALSE ;	1780:2:47314:47326	4256366	1	True				
ANR	4256396	Identifier	FALSE		4256366	0					
ANR	4256397	IfStatement	if ( token [ 0 ] == '<' )		4256366	2					
ANR	4256398	Condition	token [ 0 ] == '<'	1783:6:47339:47353	4256366	0	True				
ANR	4256399	EqualityExpression	token [ 0 ] == '<'		4256366	0		==			
ANR	4256400	ArrayIndexing	token [ 0 ]		4256366	0					
ANR	4256401	Identifier	token		4256366	0					
ANR	4256402	PrimaryExpression	0		4256366	1					
ANR	4256403	PrimaryExpression	'<'		4256366	1					
ANR	4256404	CompoundStatement		10:24:173:173	4256366	1					
ANR	4256405	ExpressionStatement	"strcpy ( addr , token )"	1784:2:47361:47382	4256366	0	True				
ANR	4256406	CallExpression	"strcpy ( addr , token )"		4256366	0					
ANR	4256407	Callee	strcpy		4256366	0					
ANR	4256408	Identifier	strcpy		4256366	0					
ANR	4256409	ArgumentList	addr		4256366	1					
ANR	4256410	Argument	addr		4256366	0					
ANR	4256411	Identifier	addr		4256366	0					
ANR	4256412	Argument	token		4256366	1					
ANR	4256413	Identifier	token		4256366	0					
ANR	4256414	ReturnStatement	return TRUE ;	1785:2:47386:47397	4256366	1	True				
ANR	4256415	Identifier	TRUE		4256366	0					
ANR	4256416	IfStatement	if ( token [ 0 ] == '-' && token [ 1 ] == 'p' )		4256366	3					
ANR	4256417	Condition	token [ 0 ] == '-' && token [ 1 ] == 'p'	1789:6:47441:47474	4256366	0	True				
ANR	4256418	AndExpression	token [ 0 ] == '-' && token [ 1 ] == 'p'		4256366	0		&&			
ANR	4256419	EqualityExpression	token [ 0 ] == '-'		4256366	0		==			
ANR	4256420	ArrayIndexing	token [ 0 ]		4256366	0					
ANR	4256421	Identifier	token		4256366	0					
ANR	4256422	PrimaryExpression	0		4256366	1					
ANR	4256423	PrimaryExpression	'-'		4256366	1					
ANR	4256424	EqualityExpression	token [ 1 ] == 'p'		4256366	1		==			
ANR	4256425	ArrayIndexing	token [ 1 ]		4256366	0					
ANR	4256426	Identifier	token		4256366	0					
ANR	4256427	PrimaryExpression	1		4256366	1					
ANR	4256428	PrimaryExpression	'p'		4256366	1					
ANR	4256429	CompoundStatement		21:2:419:436	4256366	1					
ANR	4256430	IfStatement	"if ( ( token = strtok ( NULL , "" "" ) ) == NULL )"		4256366	0					
ANR	4256431	Condition	"( token = strtok ( NULL , "" "" ) ) == NULL"	1790:7:47487:47523	4256366	0	True				
ANR	4256432	EqualityExpression	"( token = strtok ( NULL , "" "" ) ) == NULL"		4256366	0		==			
ANR	4256433	AssignmentExpression	"token = strtok ( NULL , "" "" )"		4256366	0		=			
ANR	4256434	Identifier	token		4256366	0					
ANR	4256435	CallExpression	"strtok ( NULL , "" "" )"		4256366	1					
ANR	4256436	Callee	strtok		4256366	0					
ANR	4256437	Identifier	strtok		4256366	0					
ANR	4256438	ArgumentList	NULL		4256366	1					
ANR	4256439	Argument	NULL		4256366	0					
ANR	4256440	Identifier	NULL		4256366	0					
ANR	4256441	Argument	""" """		4256366	1					
ANR	4256442	PrimaryExpression	""" """		4256366	0					
ANR	4256443	Identifier	NULL		4256366	1					
ANR	4256444	CompoundStatement		17:47:343:343	4256366	1					
ANR	4256445	ExpressionStatement	"printf ( ""-pool needs another argument...\\n"" )"	1791:3:47532:47578	4256366	0	True				
ANR	4256446	CallExpression	"printf ( ""-pool needs another argument...\\n"" )"		4256366	0					
ANR	4256447	Callee	printf		4256366	0					
ANR	4256448	Identifier	printf		4256366	0					
ANR	4256449	ArgumentList	"""-pool needs another argument...\\n"""		4256366	1					
ANR	4256450	Argument	"""-pool needs another argument...\\n"""		4256366	0					
ANR	4256451	PrimaryExpression	"""-pool needs another argument...\\n"""		4256366	0					
ANR	4256452	ReturnStatement	return FALSE ;	1792:3:47583:47595	4256366	1	True				
ANR	4256453	Identifier	FALSE		4256366	0					
ANR	4256454	IdentifierDeclStatement	char * tmp = token ;	1794:2:47603:47620	4256366	1	True				
ANR	4256455	IdentifierDecl	* tmp = token		4256366	0					
ANR	4256456	IdentifierDeclType	char *		4256366	0					
ANR	4256457	Identifier	tmp		4256366	1					
ANR	4256458	AssignmentExpression	* tmp = token		4256366	2		=			
ANR	4256459	Identifier	token		4256366	0					
ANR	4256460	Identifier	token		4256366	1					
ANR	4256461	IfStatement	"if ( ( token = strtok ( NULL , "" "" ) ) == NULL )"		4256366	2					
ANR	4256462	Condition	"( token = strtok ( NULL , "" "" ) ) == NULL"	1795:7:47629:47665	4256366	0	True				
ANR	4256463	EqualityExpression	"( token = strtok ( NULL , "" "" ) ) == NULL"		4256366	0		==			
ANR	4256464	AssignmentExpression	"token = strtok ( NULL , "" "" )"		4256366	0		=			
ANR	4256465	Identifier	token		4256366	0					
ANR	4256466	CallExpression	"strtok ( NULL , "" "" )"		4256366	1					
ANR	4256467	Callee	strtok		4256366	0					
ANR	4256468	Identifier	strtok		4256366	0					
ANR	4256469	ArgumentList	NULL		4256366	1					
ANR	4256470	Argument	NULL		4256366	0					
ANR	4256471	Identifier	NULL		4256366	0					
ANR	4256472	Argument	""" """		4256366	1					
ANR	4256473	PrimaryExpression	""" """		4256366	0					
ANR	4256474	Identifier	NULL		4256366	1					
ANR	4256475	CompoundStatement		22:47:485:485	4256366	1					
ANR	4256476	ExpressionStatement	"printf ( ""Need more arguments.\\n"" )"	1796:3:47674:47709	4256366	0	True				
ANR	4256477	CallExpression	"printf ( ""Need more arguments.\\n"" )"		4256366	0					
ANR	4256478	Callee	printf		4256366	0					
ANR	4256479	Identifier	printf		4256366	0					
ANR	4256480	ArgumentList	"""Need more arguments.\\n"""		4256366	1					
ANR	4256481	Argument	"""Need more arguments.\\n"""		4256366	0					
ANR	4256482	PrimaryExpression	"""Need more arguments.\\n"""		4256366	0					
ANR	4256483	ReturnStatement	return FALSE ;	1797:3:47714:47726	4256366	1	True				
ANR	4256484	Identifier	FALSE		4256366	0					
ANR	4256485	IfStatement	if ( pool )		4256366	3					
ANR	4256486	Condition	pool	1800:7:47742:47745	4256366	0	True				
ANR	4256487	Identifier	pool		4256366	0					
ANR	4256488	Statement	delete	1800:14:47749:47754	4256366	1	True				
ANR	4256489	ExpressionStatement	pool	1800:21:47756:47760	4256366	4	True				
ANR	4256490	Identifier	pool		4256366	0					
ANR	4256491	ExpressionStatement	pool = new DCCollector ( tmp )	1801:2:47764:47793	4256366	5	True				
ANR	4256492	AssignmentExpression	pool = new DCCollector ( tmp )		4256366	0		=			
ANR	4256493	Identifier	pool		4256366	0					
ANR	4256494	Identifier	tmp		4256366	1					
ANR	4256495	IfStatement	if ( ! pool -> addr ( ) )		4256366	6					
ANR	4256496	Condition	! pool -> addr ( )	1802:6:47801:47814	4256366	0	True				
ANR	4256497	UnaryOperationExpression	! pool -> addr ( )		4256366	0					
ANR	4256498	UnaryOperator	!		4256366	0					
ANR	4256499	CallExpression	pool -> addr ( )		4256366	1					
ANR	4256500	Callee	pool -> addr		4256366	0					
ANR	4256501	PtrMemberAccess	pool -> addr		4256366	0					
ANR	4256502	Identifier	pool		4256366	0					
ANR	4256503	Identifier	addr		4256366	1					
ANR	4256504	ArgumentList			4256366	1					
ANR	4256505	CompoundStatement		29:23:634:634	4256366	1					
ANR	4256506	ExpressionStatement	"fprintf ( stderr , ""%s\\n"" , pool -> error ( ) )"	1803:3:47823:47863	4256366	0	True				
ANR	4256507	CallExpression	"fprintf ( stderr , ""%s\\n"" , pool -> error ( ) )"		4256366	0					
ANR	4256508	Callee	fprintf		4256366	0					
ANR	4256509	Identifier	fprintf		4256366	0					
ANR	4256510	ArgumentList	stderr		4256366	1					
ANR	4256511	Argument	stderr		4256366	0					
ANR	4256512	Identifier	stderr		4256366	0					
ANR	4256513	Argument	"""%s\\n"""		4256366	1					
ANR	4256514	PrimaryExpression	"""%s\\n"""		4256366	0					
ANR	4256515	Argument	pool -> error ( )		4256366	2					
ANR	4256516	CallExpression	pool -> error ( )		4256366	0					
ANR	4256517	Callee	pool -> error		4256366	0					
ANR	4256518	PtrMemberAccess	pool -> error		4256366	0					
ANR	4256519	Identifier	pool		4256366	0					
ANR	4256520	Identifier	error		4256366	1					
ANR	4256521	ArgumentList			4256366	1					
ANR	4256522	ReturnStatement	return FALSE ;	1804:3:47868:47880	4256366	1	True				
ANR	4256523	Identifier	FALSE		4256366	0					
ANR	4256524	ElseStatement	else		4256366	0					
ANR	4256525	CompoundStatement		32:9:707:707	4256366	0					
ANR	4256526	ExpressionStatement	"printf ( ""Using pool %s.\\n"" , pool -> name ( ) )"	1806:3:47896:47939	4256366	0	True				
ANR	4256527	CallExpression	"printf ( ""Using pool %s.\\n"" , pool -> name ( ) )"		4256366	0					
ANR	4256528	Callee	printf		4256366	0					
ANR	4256529	Identifier	printf		4256366	0					
ANR	4256530	ArgumentList	"""Using pool %s.\\n"""		4256366	1					
ANR	4256531	Argument	"""Using pool %s.\\n"""		4256366	0					
ANR	4256532	PrimaryExpression	"""Using pool %s.\\n"""		4256366	0					
ANR	4256533	Argument	pool -> name ( )		4256366	1					
ANR	4256534	CallExpression	pool -> name ( )		4256366	0					
ANR	4256535	Callee	pool -> name		4256366	0					
ANR	4256536	PtrMemberAccess	pool -> name		4256366	0					
ANR	4256537	Identifier	pool		4256366	0					
ANR	4256538	Identifier	name		4256366	1					
ANR	4256539	ArgumentList			4256366	1					
ANR	4256540	IdentifierDeclStatement	char * hostname ;	1811:1:47972:47986	4256366	4	True				
ANR	4256541	IdentifierDecl	* hostname		4256366	0					
ANR	4256542	IdentifierDeclType	char *		4256366	0					
ANR	4256543	Identifier	hostname		4256366	1					
ANR	4256544	IfStatement	if ( ( hostname = get_daemon_name ( token ) ) == NULL )		4256366	5					
ANR	4256545	Condition	( hostname = get_daemon_name ( token ) ) == NULL	1812:5:47993:48036	4256366	0	True				
ANR	4256546	EqualityExpression	( hostname = get_daemon_name ( token ) ) == NULL		4256366	0		==			
ANR	4256547	AssignmentExpression	hostname = get_daemon_name ( token )		4256366	0		=			
ANR	4256548	Identifier	hostname		4256366	0					
ANR	4256549	CallExpression	get_daemon_name ( token )		4256366	1					
ANR	4256550	Callee	get_daemon_name		4256366	0					
ANR	4256551	Identifier	get_daemon_name		4256366	0					
ANR	4256552	ArgumentList	token		4256366	1					
ANR	4256553	Argument	token		4256366	0					
ANR	4256554	Identifier	token		4256366	0					
ANR	4256555	Identifier	NULL		4256366	1					
ANR	4256556	CompoundStatement		39:52:856:856	4256366	1					
ANR	4256557	ExpressionStatement	"printf ( ""Unknown host %s\\n"" , get_host_part ( token ) )"	1813:2:48044:48095	4256366	0	True				
ANR	4256558	CallExpression	"printf ( ""Unknown host %s\\n"" , get_host_part ( token ) )"		4256366	0					
ANR	4256559	Callee	printf		4256366	0					
ANR	4256560	Identifier	printf		4256366	0					
ANR	4256561	ArgumentList	"""Unknown host %s\\n"""		4256366	1					
ANR	4256562	Argument	"""Unknown host %s\\n"""		4256366	0					
ANR	4256563	PrimaryExpression	"""Unknown host %s\\n"""		4256366	0					
ANR	4256564	Argument	get_host_part ( token )		4256366	1					
ANR	4256565	CallExpression	get_host_part ( token )		4256366	0					
ANR	4256566	Callee	get_host_part		4256366	0					
ANR	4256567	Identifier	get_host_part		4256366	0					
ANR	4256568	ArgumentList	token		4256366	1					
ANR	4256569	Argument	token		4256366	0					
ANR	4256570	Identifier	token		4256366	0					
ANR	4256571	ReturnStatement	return FALSE ;	1814:2:48099:48111	4256366	1	True				
ANR	4256572	Identifier	FALSE		4256366	0					
ANR	4256573	IfStatement	"if ( ( token = strtok ( NULL , "" "" ) ) == NULL )"		4256366	6					
ANR	4256574	Condition	"( token = strtok ( NULL , "" "" ) ) == NULL"	1817:6:48124:48160	4256366	0	True				
ANR	4256575	EqualityExpression	"( token = strtok ( NULL , "" "" ) ) == NULL"		4256366	0		==			
ANR	4256576	AssignmentExpression	"token = strtok ( NULL , "" "" )"		4256366	0		=			
ANR	4256577	Identifier	token		4256366	0					
ANR	4256578	CallExpression	"strtok ( NULL , "" "" )"		4256366	1					
ANR	4256579	Callee	strtok		4256366	0					
ANR	4256580	Identifier	strtok		4256366	0					
ANR	4256581	ArgumentList	NULL		4256366	1					
ANR	4256582	Argument	NULL		4256366	0					
ANR	4256583	Identifier	NULL		4256366	0					
ANR	4256584	Argument	""" """		4256366	1					
ANR	4256585	PrimaryExpression	""" """		4256366	0					
ANR	4256586	Identifier	NULL		4256366	1					
ANR	4256587	CompoundStatement		44:46:980:980	4256366	1					
ANR	4256588	ExpressionStatement	dt = DT_MASTER	1818:2:48168:48182	4256366	0	True				
ANR	4256589	AssignmentExpression	dt = DT_MASTER		4256366	0		=			
ANR	4256590	Identifier	dt		4256366	0					
ANR	4256591	Identifier	DT_MASTER		4256366	1					
ANR	4256592	ElseStatement	else		4256366	0					
ANR	4256593	CompoundStatement		46:8:1008:1008	4256366	0					
ANR	4256594	SwitchStatement	switch ( token [ 1 ] )		4256366	0					
ANR	4256595	Condition	token [ 1 ]	1820:11:48205:48212	4256366	0	True				
ANR	4256596	ArrayIndexing	token [ 1 ]		4256366	0					
ANR	4256597	Identifier	token		4256366	0					
ANR	4256598	PrimaryExpression	1		4256366	1					
ANR	4256599	CompoundStatement		47:22:1032:1032	4256366	1					
ANR	4256600	Label	case 's' :	1821:2:48236:48244	4256366	0	True				
ANR	4256601	IfStatement	if ( token [ 2 ] == 't' )		4256366	1					
ANR	4256602	Condition	token [ 2 ] == 't'	1822:8:48254:48268	4256366	0	True				
ANR	4256603	EqualityExpression	token [ 2 ] == 't'		4256366	0		==			
ANR	4256604	ArrayIndexing	token [ 2 ]		4256366	0					
ANR	4256605	Identifier	token		4256366	0					
ANR	4256606	PrimaryExpression	2		4256366	1					
ANR	4256607	PrimaryExpression	't'		4256366	1					
ANR	4256608	ExpressionStatement	dt = DT_STARTD	1822:26:48272:48286	4256366	1	True				
ANR	4256609	AssignmentExpression	dt = DT_STARTD		4256366	0		=			
ANR	4256610	Identifier	dt		4256366	0					
ANR	4256611	Identifier	DT_STARTD		4256366	1					
ANR	4256612	ElseStatement	else		4256366	0					
ANR	4256613	IfStatement	if ( token [ 2 ] == 'c' )		4256366	0					
ANR	4256614	Condition	token [ 2 ] == 'c'	1823:13:48301:48315	4256366	0	True				
ANR	4256615	EqualityExpression	token [ 2 ] == 'c'		4256366	0		==			
ANR	4256616	ArrayIndexing	token [ 2 ]		4256366	0					
ANR	4256617	Identifier	token		4256366	0					
ANR	4256618	PrimaryExpression	2		4256366	1					
ANR	4256619	PrimaryExpression	'c'		4256366	1					
ANR	4256620	ExpressionStatement	dt = DT_SCHEDD	1823:31:48319:48333	4256366	1	True				
ANR	4256621	AssignmentExpression	dt = DT_SCHEDD		4256366	0		=			
ANR	4256622	Identifier	dt		4256366	0					
ANR	4256623	Identifier	DT_SCHEDD		4256366	1					
ANR	4256624	ElseStatement	else		4256366	0					
ANR	4256625	ExpressionStatement	dt = DT_MASTER	1824:8:48343:48357	4256366	0	True				
ANR	4256626	AssignmentExpression	dt = DT_MASTER		4256366	0		=			
ANR	4256627	Identifier	dt		4256366	0					
ANR	4256628	Identifier	DT_MASTER		4256366	1					
ANR	4256629	BreakStatement	break ;	1825:3:48362:48367	4256366	2	True				
ANR	4256630	Label	case 'c' :	1826:2:48371:48379	4256366	3	True				
ANR	4256631	ExpressionStatement	dt = DT_COLLECTOR	1827:3:48384:48401	4256366	4	True				
ANR	4256632	AssignmentExpression	dt = DT_COLLECTOR		4256366	0		=			
ANR	4256633	Identifier	dt		4256366	0					
ANR	4256634	Identifier	DT_COLLECTOR		4256366	1					
ANR	4256635	BreakStatement	break ;	1828:3:48406:48411	4256366	5	True				
ANR	4256636	Label	case 'm' :	1829:2:48415:48423	4256366	6	True				
ANR	4256637	ExpressionStatement	dt = DT_MASTER	1830:3:48428:48442	4256366	7	True				
ANR	4256638	AssignmentExpression	dt = DT_MASTER		4256366	0		=			
ANR	4256639	Identifier	dt		4256366	0					
ANR	4256640	Identifier	DT_MASTER		4256366	1					
ANR	4256641	BreakStatement	break ;	1831:3:48447:48452	4256366	8	True				
ANR	4256642	Label	case 'n' :	1832:2:48456:48464	4256366	9	True				
ANR	4256643	ExpressionStatement	dt = DT_NEGOTIATOR	1833:3:48469:48487	4256366	10	True				
ANR	4256644	AssignmentExpression	dt = DT_NEGOTIATOR		4256366	0		=			
ANR	4256645	Identifier	dt		4256366	0					
ANR	4256646	Identifier	DT_NEGOTIATOR		4256366	1					
ANR	4256647	BreakStatement	break ;	1834:3:48492:48497	4256366	11	True				
ANR	4256648	Label	case 'k' :	1835:2:48501:48509	4256366	12	True				
ANR	4256649	ExpressionStatement	dt = DT_KBDD	1836:3:48514:48526	4256366	13	True				
ANR	4256650	AssignmentExpression	dt = DT_KBDD		4256366	0		=			
ANR	4256651	Identifier	dt		4256366	0					
ANR	4256652	Identifier	DT_KBDD		4256366	1					
ANR	4256653	BreakStatement	break ;	1837:3:48531:48536	4256366	14	True				
ANR	4256654	Label	default :	1838:2:48540:48547	4256366	15	True				
ANR	4256655	Identifier	default		4256366	0					
ANR	4256656	ExpressionStatement	dt = DT_MASTER	1839:3:48552:48566	4256366	16	True				
ANR	4256657	AssignmentExpression	dt = DT_MASTER		4256366	0		=			
ANR	4256658	Identifier	dt		4256366	0					
ANR	4256659	Identifier	DT_MASTER		4256366	1					
ANR	4256660	IdentifierDeclStatement	"Daemon d ( dt , hostname , pool ? pool -> addr ( ) : NULL ) ;"	1842:1:48576:48628	4256366	7	True				
ANR	4256661	IdentifierDecl	"d ( dt , hostname , pool ? pool -> addr ( ) : NULL )"		4256366	0					
ANR	4256662	IdentifierDeclType	Daemon		4256366	0					
ANR	4256663	Identifier	d		4256366	1					
ANR	4256664	Expression	"dt , hostname , pool ? pool -> addr ( ) : NULL"		4256366	2					
ANR	4256665	Identifier	dt		4256366	0					
ANR	4256666	Expression	"hostname , pool ? pool -> addr ( ) : NULL"		4256366	1					
ANR	4256667	Identifier	hostname		4256366	0					
ANR	4256668	ConditionalExpression	pool ? pool -> addr ( ) : NULL		4256366	1					
ANR	4256669	Condition	pool		4256366	0					
ANR	4256670	Identifier	pool		4256366	0					
ANR	4256671	CallExpression	pool -> addr ( )		4256366	1					
ANR	4256672	Callee	pool -> addr		4256366	0					
ANR	4256673	PtrMemberAccess	pool -> addr		4256366	0					
ANR	4256674	Identifier	pool		4256366	0					
ANR	4256675	Identifier	addr		4256366	1					
ANR	4256676	ArgumentList			4256366	1					
ANR	4256677	Identifier	NULL		4256366	2					
ANR	4256678	IfStatement	if ( real_dt == DT_GENERIC )		4256366	8					
ANR	4256679	Condition	real_dt == DT_GENERIC	1843:5:48635:48655	4256366	0	True				
ANR	4256680	EqualityExpression	real_dt == DT_GENERIC		4256366	0		==			
ANR	4256681	Identifier	real_dt		4256366	0					
ANR	4256682	Identifier	DT_GENERIC		4256366	1					
ANR	4256683	CompoundStatement		70:29:1475:1475	4256366	1					
ANR	4256684	ExpressionStatement	d . setSubsystem ( subsys )	1844:2:48663:48687	4256366	0	True				
ANR	4256685	CallExpression	d . setSubsystem ( subsys )		4256366	0					
ANR	4256686	Callee	d . setSubsystem		4256366	0					
ANR	4256687	MemberAccess	d . setSubsystem		4256366	0					
ANR	4256688	Identifier	d		4256366	0					
ANR	4256689	Identifier	setSubsystem		4256366	1					
ANR	4256690	ArgumentList	subsys		4256366	1					
ANR	4256691	Argument	subsys		4256366	0					
ANR	4256692	Identifier	subsys		4256366	0					
ANR	4256693	IfStatement	if ( ! d . locate ( ) )		4256366	9					
ANR	4256694	Condition	! d . locate ( )	1846:5:48697:48708	4256366	0	True				
ANR	4256695	UnaryOperationExpression	! d . locate ( )		4256366	0					
ANR	4256696	UnaryOperator	!		4256366	0					
ANR	4256697	CallExpression	d . locate ( )		4256366	1					
ANR	4256698	Callee	d . locate		4256366	0					
ANR	4256699	MemberAccess	d . locate		4256366	0					
ANR	4256700	Identifier	d		4256366	0					
ANR	4256701	Identifier	locate		4256366	1					
ANR	4256702	ArgumentList			4256366	1					
ANR	4256703	CompoundStatement		73:20:1528:1528	4256366	1					
ANR	4256704	ExpressionStatement	"printf ( ""Failed to contact daemon.\\n"" )"	1847:2:48716:48756	4256366	0	True				
ANR	4256705	CallExpression	"printf ( ""Failed to contact daemon.\\n"" )"		4256366	0					
ANR	4256706	Callee	printf		4256366	0					
ANR	4256707	Identifier	printf		4256366	0					
ANR	4256708	ArgumentList	"""Failed to contact daemon.\\n"""		4256366	1					
ANR	4256709	Argument	"""Failed to contact daemon.\\n"""		4256366	0					
ANR	4256710	PrimaryExpression	"""Failed to contact daemon.\\n"""		4256366	0					
ANR	4256711	Statement	delete	1848:2:48760:48765	4256366	1	True				
ANR	4256712	Statement	[	1848:9:48767:48767	4256366	2	True				
ANR	4256713	Statement	]	1848:10:48768:48768	4256366	3	True				
ANR	4256714	ExpressionStatement	hostname	1848:12:48770:48778	4256366	4	True				
ANR	4256715	Identifier	hostname		4256366	0					
ANR	4256716	ReturnStatement	return FALSE ;	1849:2:48782:48794	4256366	5	True				
ANR	4256717	Identifier	FALSE		4256366	0					
ANR	4256718	ExpressionStatement	"strcpy ( addr , d . addr ( ) )"	1851:1:48800:48825	4256366	10	True				
ANR	4256719	CallExpression	"strcpy ( addr , d . addr ( ) )"		4256366	0					
ANR	4256720	Callee	strcpy		4256366	0					
ANR	4256721	Identifier	strcpy		4256366	0					
ANR	4256722	ArgumentList	addr		4256366	1					
ANR	4256723	Argument	addr		4256366	0					
ANR	4256724	Identifier	addr		4256366	0					
ANR	4256725	Argument	d . addr ( )		4256366	1					
ANR	4256726	CallExpression	d . addr ( )		4256366	0					
ANR	4256727	Callee	d . addr		4256366	0					
ANR	4256728	MemberAccess	d . addr		4256366	0					
ANR	4256729	Identifier	d		4256366	0					
ANR	4256730	Identifier	addr		4256366	1					
ANR	4256731	ArgumentList			4256366	1					
ANR	4256732	Statement	delete	1852:1:48828:48833	4256366	11	True				
ANR	4256733	Statement	[	1852:8:48835:48835	4256366	12	True				
ANR	4256734	Statement	]	1852:9:48836:48836	4256366	13	True				
ANR	4256735	ExpressionStatement	hostname	1852:11:48838:48846	4256366	14	True				
ANR	4256736	Identifier	hostname		4256366	0					
ANR	4256737	ReturnStatement	return TRUE ;	1854:1:48851:48862	4256366	15	True				
ANR	4256738	Identifier	TRUE		4256366	0					
ANR	4256739	ReturnType	int		4256366	1					
ANR	4256740	Identifier	doSquawkReconnect		4256366	2					
ANR	4256741	ParameterList	char * addr		4256366	3					
ANR	4256742	Parameter	char * addr	1774:19:47170:47179	4256366	0	True				
ANR	4256743	ParameterType	char *		4256366	0					
ANR	4256744	Identifier	addr		4256366	1					
ANR	4256745	CFGEntryNode	ENTRY		4256366		True				
ANR	4256746	CFGExitNode	EXIT		4256366		True				
ANR	4256747	Symbol	DT_GENERIC		4256366						
ANR	4256748	Symbol	pool -> addr		4256366						
ANR	4256749	Symbol	dt		4256366						
ANR	4256750	Symbol	DT_MASTER		4256366						
ANR	4256751	Symbol	subsys		4256366						
ANR	4256752	Symbol	d . locate		4256366						
ANR	4256753	Symbol	hostname		4256366						
ANR	4256754	Symbol	tmp		4256366						
ANR	4256755	Symbol	addr		4256366						
ANR	4256756	Symbol	pool -> error		4256366						
ANR	4256757	Symbol	NULL		4256366						
ANR	4256758	Symbol	d		4256366						
ANR	4256759	Symbol	pool		4256366						
ANR	4256760	Symbol	DT_SCHEDD		4256366						
ANR	4256761	Symbol	TRUE		4256366						
ANR	4256762	Symbol	get_daemon_name		4256366						
ANR	4256763	Symbol	DT_COLLECTOR		4256366						
ANR	4256764	Symbol	strtok		4256366						
ANR	4256765	Symbol	stderr		4256366						
ANR	4256766	Symbol	get_host_part		4256366						
ANR	4256767	Symbol	token		4256366						
ANR	4256768	Symbol	pool -> name		4256366						
ANR	4256769	Symbol	* pool		4256366						
ANR	4256770	Symbol	DT_STARTD		4256366						
ANR	4256771	Symbol	d . addr		4256366						
ANR	4256772	Symbol	* token		4256366						
ANR	4256773	Symbol	real_dt		4256366						
ANR	4256774	Symbol	FALSE		4256366						
ANR	4256775	Symbol	DT_NEGOTIATOR		4256366						
ANR	4256776	Symbol	DT_KBDD		4256366						
ANR	4256777	Function	squawkHelp	1857:0:48868:49511							
ANR	4256778	FunctionDef	squawkHelp (char * token)		4256777	0					
ANR	4256779	CompoundStatement		1857:31:48899:49511	4256777	0					
ANR	4256780	SwitchStatement	switch ( token [ 0 ] )		4256777	0					
ANR	4256781	Condition	token [ 0 ]	1858:9:48910:48917	4256777	0	True				
ANR	4256782	ArrayIndexing	token [ 0 ]		4256777	0					
ANR	4256783	Identifier	token		4256777	0					
ANR	4256784	PrimaryExpression	0		4256777	1					
ANR	4256785	CompoundStatement		2:20:21:21	4256777	1					
ANR	4256786	Label	case 's' :	1859:1:48924:48932	4256777	0	True				
ANR	4256787	ExpressionStatement	"printf ( ""Send a daemoncore signal.\\n"" )"	1860:2:48937:48977	4256777	1	True				
ANR	4256788	CallExpression	"printf ( ""Send a daemoncore signal.\\n"" )"		4256777	0					
ANR	4256789	Callee	printf		4256777	0					
ANR	4256790	Identifier	printf		4256777	0					
ANR	4256791	ArgumentList	"""Send a daemoncore signal.\\n"""		4256777	1					
ANR	4256792	Argument	"""Send a daemoncore signal.\\n"""		4256777	0					
ANR	4256793	PrimaryExpression	"""Send a daemoncore signal.\\n"""		4256777	0					
ANR	4256794	BreakStatement	break ;	1861:2:48982:48987	4256777	2	True				
ANR	4256795	Label	case 'c' :	1862:1:48990:48998	4256777	3	True				
ANR	4256796	Statement	printf	1863:2:49003:49008	4256777	4	True				
ANR	4256797	Statement	(	1863:9:49010:49010	4256777	5	True				
ANR	4256798	Statement	"""Send a daemoncore command.  Each word after """	1863:11:49012:49057	4256777	6	True				
ANR	4256799	Statement	"""the command\\nwill also be sent.  If you send """	1864:5:49064:49110	4256777	7	True				
ANR	4256800	Statement	"""a number, it will be sent\\nas an integer.\\n"""	1865:5:49117:49161	4256777	8	True				
ANR	4256801	Statement	)	1865:51:49163:49163	4256777	9	True				
ANR	4256802	ExpressionStatement		1865:52:49164:49164	4256777	10	True				
ANR	4256803	BreakStatement	break ;	1866:2:49168:49173	4256777	11	True				
ANR	4256804	Label	case 'r' :	1867:1:49176:49184	4256777	12	True				
ANR	4256805	ExpressionStatement	"printf ( ""Connect to a different daemon.  The format is:\\n"" )"	1868:2:49188:49248	4256777	13	True				
ANR	4256806	CallExpression	"printf ( ""Connect to a different daemon.  The format is:\\n"" )"		4256777	0					
ANR	4256807	Callee	printf		4256777	0					
ANR	4256808	Identifier	printf		4256777	0					
ANR	4256809	ArgumentList	"""Connect to a different daemon.  The format is:\\n"""		4256777	1					
ANR	4256810	Argument	"""Connect to a different daemon.  The format is:\\n"""		4256777	0					
ANR	4256811	PrimaryExpression	"""Connect to a different daemon.  The format is:\\n"""		4256777	0					
ANR	4256812	ExpressionStatement	"printf ( ""reconnect <host:port> or\\n"" )"	1869:2:49252:49290	4256777	14	True				
ANR	4256813	CallExpression	"printf ( ""reconnect <host:port> or\\n"" )"		4256777	0					
ANR	4256814	Callee	printf		4256777	0					
ANR	4256815	Identifier	printf		4256777	0					
ANR	4256816	ArgumentList	"""reconnect <host:port> or\\n"""		4256777	1					
ANR	4256817	Argument	"""reconnect <host:port> or\\n"""		4256777	0					
ANR	4256818	PrimaryExpression	"""reconnect <host:port> or\\n"""		4256777	0					
ANR	4256819	ExpressionStatement	"printf ( ""reconnect [-pool poolname] hostname [-deamontype]\\n"" )"	1870:2:49294:49356	4256777	15	True				
ANR	4256820	CallExpression	"printf ( ""reconnect [-pool poolname] hostname [-deamontype]\\n"" )"		4256777	0					
ANR	4256821	Callee	printf		4256777	0					
ANR	4256822	Identifier	printf		4256777	0					
ANR	4256823	ArgumentList	"""reconnect [-pool poolname] hostname [-deamontype]\\n"""		4256777	1					
ANR	4256824	Argument	"""reconnect [-pool poolname] hostname [-deamontype]\\n"""		4256777	0					
ANR	4256825	PrimaryExpression	"""reconnect [-pool poolname] hostname [-deamontype]\\n"""		4256777	0					
ANR	4256826	BreakStatement	break ;	1871:2:49360:49365	4256777	16	True				
ANR	4256827	Label	case 'e' :	1872:1:49368:49376	4256777	17	True				
ANR	4256828	Label	case 'q' :	1873:1:49379:49387	4256777	18	True				
ANR	4256829	ExpressionStatement	"printf ( ""Terminates this squawking session.\\n"" )"	1874:2:49391:49439	4256777	19	True				
ANR	4256830	CallExpression	"printf ( ""Terminates this squawking session.\\n"" )"		4256777	0					
ANR	4256831	Callee	printf		4256777	0					
ANR	4256832	Identifier	printf		4256777	0					
ANR	4256833	ArgumentList	"""Terminates this squawking session.\\n"""		4256777	1					
ANR	4256834	Argument	"""Terminates this squawking session.\\n"""		4256777	0					
ANR	4256835	PrimaryExpression	"""Terminates this squawking session.\\n"""		4256777	0					
ANR	4256836	BreakStatement	break ;	1875:2:49443:49448	4256777	20	True				
ANR	4256837	Label	default :	1876:1:49451:49458	4256777	21	True				
ANR	4256838	Identifier	default		4256777	0					
ANR	4256839	ExpressionStatement	"printf ( ""Don't know command %s.\\n"" , token )"	1877:2:49462:49506	4256777	22	True				
ANR	4256840	CallExpression	"printf ( ""Don't know command %s.\\n"" , token )"		4256777	0					
ANR	4256841	Callee	printf		4256777	0					
ANR	4256842	Identifier	printf		4256777	0					
ANR	4256843	ArgumentList	"""Don't know command %s.\\n"""		4256777	1					
ANR	4256844	Argument	"""Don't know command %s.\\n"""		4256777	0					
ANR	4256845	PrimaryExpression	"""Don't know command %s.\\n"""		4256777	0					
ANR	4256846	Argument	token		4256777	1					
ANR	4256847	Identifier	token		4256777	0					
ANR	4256848	ReturnType	void		4256777	1					
ANR	4256849	Identifier	squawkHelp		4256777	2					
ANR	4256850	ParameterList	char * token		4256777	3					
ANR	4256851	Parameter	char * token	1857:17:48885:48895	4256777	0	True				
ANR	4256852	ParameterType	char *		4256777	0					
ANR	4256853	Identifier	token		4256777	1					
ANR	4256854	CFGEntryNode	ENTRY		4256777		True				
ANR	4256855	CFGExitNode	EXIT		4256777		True				
ANR	4256856	Symbol	* token		4256777						
ANR	4256857	Symbol	token		4256777						
ANR	4256858	Function	printAdToFile	1881:0:49514:50016							
ANR	4256859	FunctionDef	"printAdToFile (ClassAd * ad , char * filename)"		4256858	0					
ANR	4256860	CompoundStatement		1882:43:49562:50016	4256858	0					
ANR	4256861	IdentifierDeclStatement	FILE * fp ;	1884:1:49566:49574	4256858	0	True				
ANR	4256862	IdentifierDecl	* fp		4256858	0					
ANR	4256863	IdentifierDeclType	FILE *		4256858	0					
ANR	4256864	Identifier	fp		4256858	1					
ANR	4256865	IfStatement	if ( filename )		4256858	1					
ANR	4256866	Condition	filename	1886:6:49583:49590	4256858	0	True				
ANR	4256867	Identifier	filename		4256858	0					
ANR	4256868	CompoundStatement		5:17:31:31	4256858	1					
ANR	4256869	IfStatement	"if ( ( fp = safe_fopen_wrapper_follow ( filename , ""a"" ) ) == NULL )"		4256858	0					
ANR	4256870	Condition	"( fp = safe_fopen_wrapper_follow ( filename , ""a"" ) ) == NULL"	1887:10:49606:49659	4256858	0	True				
ANR	4256871	EqualityExpression	"( fp = safe_fopen_wrapper_follow ( filename , ""a"" ) ) == NULL"		4256858	0		==			
ANR	4256872	AssignmentExpression	"fp = safe_fopen_wrapper_follow ( filename , ""a"" )"		4256858	0		=			
ANR	4256873	Identifier	fp		4256858	0					
ANR	4256874	CallExpression	"safe_fopen_wrapper_follow ( filename , ""a"" )"		4256858	1					
ANR	4256875	Callee	safe_fopen_wrapper_follow		4256858	0					
ANR	4256876	Identifier	safe_fopen_wrapper_follow		4256858	0					
ANR	4256877	ArgumentList	filename		4256858	1					
ANR	4256878	Argument	filename		4256858	0					
ANR	4256879	Identifier	filename		4256858	0					
ANR	4256880	Argument	"""a"""		4256858	1					
ANR	4256881	PrimaryExpression	"""a"""		4256858	0					
ANR	4256882	Identifier	NULL		4256858	1					
ANR	4256883	CompoundStatement		6:67:100:100	4256858	1					
ANR	4256884	ExpressionStatement	"printf ( ""ERROR appending to %s.\\n"" , filename )"	1888:3:49668:49715	4256858	0	True				
ANR	4256885	CallExpression	"printf ( ""ERROR appending to %s.\\n"" , filename )"		4256858	0					
ANR	4256886	Callee	printf		4256858	0					
ANR	4256887	Identifier	printf		4256858	0					
ANR	4256888	ArgumentList	"""ERROR appending to %s.\\n"""		4256858	1					
ANR	4256889	Argument	"""ERROR appending to %s.\\n"""		4256858	0					
ANR	4256890	PrimaryExpression	"""ERROR appending to %s.\\n"""		4256858	0					
ANR	4256891	Argument	filename		4256858	1					
ANR	4256892	Identifier	filename		4256858	0					
ANR	4256893	ReturnStatement	return FALSE ;	1889:3:49720:49732	4256858	1	True				
ANR	4256894	Identifier	FALSE		4256858	0					
ANR	4256895	ElseStatement	else		4256858	0					
ANR	4256896	CompoundStatement		10:8:183:183	4256858	0					
ANR	4256897	ExpressionStatement	fp = stdout	1892:2:49750:49761	4256858	0	True				
ANR	4256898	AssignmentExpression	fp = stdout		4256858	0		=			
ANR	4256899	Identifier	fp		4256858	0					
ANR	4256900	Identifier	stdout		4256858	1					
ANR	4256901	IfStatement	if ( ! ad -> fPrint ( fp ) )		4256858	2					
ANR	4256902	Condition	! ad -> fPrint ( fp )	1895:8:49775:49789	4256858	0	True				
ANR	4256903	UnaryOperationExpression	! ad -> fPrint ( fp )		4256858	0					
ANR	4256904	UnaryOperator	!		4256858	0					
ANR	4256905	CallExpression	ad -> fPrint ( fp )		4256858	1					
ANR	4256906	Callee	ad -> fPrint		4256858	0					
ANR	4256907	PtrMemberAccess	ad -> fPrint		4256858	0					
ANR	4256908	Identifier	ad		4256858	0					
ANR	4256909	Identifier	fPrint		4256858	1					
ANR	4256910	ArgumentList	fp		4256858	1					
ANR	4256911	Argument	fp		4256858	0					
ANR	4256912	Identifier	fp		4256858	0					
ANR	4256913	CompoundStatement		14:25:229:229	4256858	1					
ANR	4256914	ExpressionStatement	"printf ( ""ERROR - failed to write ad to file.\\n"" )"	1896:8:49802:49851	4256858	0	True				
ANR	4256915	CallExpression	"printf ( ""ERROR - failed to write ad to file.\\n"" )"		4256858	0					
ANR	4256916	Callee	printf		4256858	0					
ANR	4256917	Identifier	printf		4256858	0					
ANR	4256918	ArgumentList	"""ERROR - failed to write ad to file.\\n"""		4256858	1					
ANR	4256919	Argument	"""ERROR - failed to write ad to file.\\n"""		4256858	0					
ANR	4256920	PrimaryExpression	"""ERROR - failed to write ad to file.\\n"""		4256858	0					
ANR	4256921	IfStatement	if ( filename )		4256858	1					
ANR	4256922	Condition	filename	1897:13:49866:49873	4256858	0	True				
ANR	4256923	Identifier	filename		4256858	0					
ANR	4256924	ExpressionStatement	fclose ( fp )	1897:24:49877:49887	4256858	1	True				
ANR	4256925	CallExpression	fclose ( fp )		4256858	0					
ANR	4256926	Callee	fclose		4256858	0					
ANR	4256927	Identifier	fclose		4256858	0					
ANR	4256928	ArgumentList	fp		4256858	1					
ANR	4256929	Argument	fp		4256858	0					
ANR	4256930	Identifier	fp		4256858	0					
ANR	4256931	ReturnStatement	return FALSE ;	1898:8:49897:49909	4256858	2	True				
ANR	4256932	Identifier	FALSE		4256858	0					
ANR	4256933	ExpressionStatement	"fprintf ( fp , ""***\\n"" )"	1900:4:49921:49940	4256858	3	True				
ANR	4256934	CallExpression	"fprintf ( fp , ""***\\n"" )"		4256858	0					
ANR	4256935	Callee	fprintf		4256858	0					
ANR	4256936	Identifier	fprintf		4256858	0					
ANR	4256937	ArgumentList	fp		4256858	1					
ANR	4256938	Argument	fp		4256858	0					
ANR	4256939	Identifier	fp		4256858	0					
ANR	4256940	Argument	"""***\\n"""		4256858	1					
ANR	4256941	PrimaryExpression	"""***\\n"""		4256858	0					
ANR	4256942	IfStatement	if ( filename )		4256858	4					
ANR	4256943	Condition	filename	1902:6:49965:49972	4256858	0	True				
ANR	4256944	Identifier	filename		4256858	0					
ANR	4256945	CompoundStatement		21:17:413:413	4256858	1					
ANR	4256946	ExpressionStatement	fclose ( fp )	1903:2:49980:49990	4256858	0	True				
ANR	4256947	CallExpression	fclose ( fp )		4256858	0					
ANR	4256948	Callee	fclose		4256858	0					
ANR	4256949	Identifier	fclose		4256858	0					
ANR	4256950	ArgumentList	fp		4256858	1					
ANR	4256951	Argument	fp		4256858	0					
ANR	4256952	Identifier	fp		4256858	0					
ANR	4256953	ReturnStatement	return TRUE ;	1906:4:50003:50014	4256858	5	True				
ANR	4256954	Identifier	TRUE		4256858	0					
ANR	4256955	ReturnType	int		4256858	1					
ANR	4256956	Identifier	printAdToFile		4256858	2					
ANR	4256957	ParameterList	"ClassAd * ad , char * filename"		4256858	3					
ANR	4256958	Parameter	ClassAd * ad	1882:14:49533:49543	4256858	0	True				
ANR	4256959	ParameterType	ClassAd *		4256858	0					
ANR	4256960	Identifier	ad		4256858	1					
ANR	4256961	Parameter	char * filename	1882:27:49546:49559	4256858	1	True				
ANR	4256962	ParameterType	char *		4256858	0					
ANR	4256963	Identifier	filename		4256858	1					
ANR	4256964	CFGEntryNode	ENTRY		4256858		True				
ANR	4256965	CFGExitNode	EXIT		4256858		True				
ANR	4256966	Symbol	ad		4256858						
ANR	4256967	Symbol	filename		4256858						
ANR	4256968	Symbol	NULL		4256858						
ANR	4256969	Symbol	stdout		4256858						
ANR	4256970	Symbol	TRUE		4256858						
ANR	4256971	Symbol	fp		4256858						
ANR	4256972	Symbol	FALSE		4256858						
ANR	4256973	Symbol	* ad		4256858						
ANR	4256974	Symbol	safe_fopen_wrapper_follow		4256858						
ANR	4256975	Symbol	ad -> fPrint		4256858						
ANR	4256976	Function	strncmp_auto	1910:0:50020:50115							
ANR	4256977	FunctionDef	"strncmp_auto (const char * s1 , const char * s2)"		4256976	0					
ANR	4256978	CompoundStatement		1911:0:50069:50115	4256976	0					
ANR	4256979	ReturnStatement	"return strncasecmp ( s1 , s2 , strlen ( s2 ) ) ;"	1912:4:50075:50113	4256976	0	True				
ANR	4256980	CallExpression	"strncasecmp ( s1 , s2 , strlen ( s2 ) )"		4256976	0					
ANR	4256981	Callee	strncasecmp		4256976	0					
ANR	4256982	Identifier	strncasecmp		4256976	0					
ANR	4256983	ArgumentList	s1		4256976	1					
ANR	4256984	Argument	s1		4256976	0					
ANR	4256985	Identifier	s1		4256976	0					
ANR	4256986	Argument	s2		4256976	1					
ANR	4256987	Identifier	s2		4256976	0					
ANR	4256988	Argument	strlen ( s2 )		4256976	2					
ANR	4256989	CallExpression	strlen ( s2 )		4256976	0					
ANR	4256990	Callee	strlen		4256976	0					
ANR	4256991	Identifier	strlen		4256976	0					
ANR	4256992	ArgumentList	s2		4256976	1					
ANR	4256993	Argument	s2		4256976	0					
ANR	4256994	Identifier	s2		4256976	0					
ANR	4256995	ReturnType	int		4256976	1					
ANR	4256996	Identifier	strncmp_auto		4256976	2					
ANR	4256997	ParameterList	"const char * s1 , const char * s2"		4256976	3					
ANR	4256998	Parameter	const char * s1	1910:17:50037:50050	4256976	0	True				
ANR	4256999	ParameterType	const char *		4256976	0					
ANR	4257000	Identifier	s1		4256976	1					
ANR	4257001	Parameter	const char * s2	1910:33:50053:50066	4256976	1	True				
ANR	4257002	ParameterType	const char *		4256976	0					
ANR	4257003	Identifier	s2		4256976	1					
ANR	4257004	CFGEntryNode	ENTRY		4256976		True				
ANR	4257005	CFGExitNode	EXIT		4256976		True				
ANR	4257006	Symbol	strlen		4256976						
ANR	4257007	Symbol	strncasecmp		4256976						
ANR	4257008	Symbol	s1		4256976						
ANR	4257009	Symbol	s2		4256976						
ANR	4257010	Function	SetSyscalls	1915:11:50129:50157							
ANR	4257011	FunctionDef	SetSyscalls ()		4257010	0					
ANR	4257012	CompoundStatement		1915:29:50147:50157	4257010	0					
ANR	4257013	ReturnStatement	return 0 ;	1915:0:50148:50156	4257010	0	True				
ANR	4257014	PrimaryExpression	0		4257010	0					
ANR	4257015	ReturnType	int		4257010	1					
ANR	4257016	Identifier	SetSyscalls		4257010	2					
ANR	4257017	ParameterList			4257010	3					
ANR	4257018	CFGEntryNode	ENTRY		4257010		True				
ANR	4257019	CFGExitNode	EXIT		4257010		True				
