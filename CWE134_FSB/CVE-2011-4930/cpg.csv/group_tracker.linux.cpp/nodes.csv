command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1575643	File	data/converged/CVE-2011-4930_htcondor/group_tracker.linux.cpp								
ANR	1575644	Function	GroupTracker :: GroupTracker	25:0:905:1279							
ANR	1575645	FunctionDef	"GroupTracker :: GroupTracker (ProcFamilyMonitor * pfm , gid_t min_gid , gid_t max_gid , bool allocating)"		1575644	0					
ANR	1575646	CompoundStatement		34:0:1277:1279	1575644	0					
ANR	1575647	Identifier	GroupTracker :: GroupTracker		1575644	1					
ANR	1575648	ParameterList	"ProcFamilyMonitor * pfm , gid_t min_gid , gid_t max_gid , bool allocating"		1575644	2					
ANR	1575649	Parameter	ProcFamilyMonitor * pfm	25:27:932:953	1575644	0	True				
ANR	1575650	ParameterType	ProcFamilyMonitor *		1575644	0					
ANR	1575651	Identifier	pfm		1575644	1					
ANR	1575652	Parameter	gid_t min_gid	26:27:983:995	1575644	1	True				
ANR	1575653	ParameterType	gid_t		1575644	0					
ANR	1575654	Identifier	min_gid		1575644	1					
ANR	1575655	Parameter	gid_t max_gid	27:27:1025:1037	1575644	2	True				
ANR	1575656	ParameterType	gid_t		1575644	0					
ANR	1575657	Identifier	max_gid		1575644	1					
ANR	1575658	Parameter	bool allocating	28:9:1049:1063	1575644	3	True				
ANR	1575659	ParameterType	bool		1575644	0					
ANR	1575660	Identifier	allocating		1575644	1					
ANR	1575661	CFGEntryNode	ENTRY		1575644		True				
ANR	1575662	CFGExitNode	EXIT		1575644		True				
ANR	1575663	Symbol	max_gid		1575644						
ANR	1575664	Symbol	pfm		1575644						
ANR	1575665	Symbol	allocating		1575644						
ANR	1575666	Symbol	min_gid		1575644						
ANR	1575667	Function	GroupTracker :: add_mapping	37:0:1282:1547							
ANR	1575668	FunctionDef	"GroupTracker :: add_mapping (ProcFamily * family , gid_t & gid)"		1575667	0					
ANR	1575669	CompoundStatement		39:0:1345:1547	1575667	0					
ANR	1575670	IfStatement	if ( m_allocating )		1575667	0					
ANR	1575671	Condition	m_allocating	40:5:1352:1363	1575667	0	True				
ANR	1575672	Identifier	m_allocating		1575667	0					
ANR	1575673	CompoundStatement		2:19:20:20	1575667	1					
ANR	1575674	ReturnStatement	"return m_gid_pool . allocate ( family , gid ) ;"	42:2:1414:1453	1575667	0	True				
ANR	1575675	CallExpression	"m_gid_pool . allocate ( family , gid )"		1575667	0					
ANR	1575676	Callee	m_gid_pool . allocate		1575667	0					
ANR	1575677	MemberAccess	m_gid_pool . allocate		1575667	0					
ANR	1575678	Identifier	m_gid_pool		1575667	0					
ANR	1575679	Identifier	allocate		1575667	1					
ANR	1575680	ArgumentList	family		1575667	1					
ANR	1575681	Argument	family		1575667	0					
ANR	1575682	Identifier	family		1575667	0					
ANR	1575683	Argument	gid		1575667	1					
ANR	1575684	Identifier	gid		1575667	0					
ANR	1575685	ReturnStatement	"return m_gid_pool . associate ( family , gid ) ;"	45:1:1505:1545	1575667	1	True				
ANR	1575686	CallExpression	"m_gid_pool . associate ( family , gid )"		1575667	0					
ANR	1575687	Callee	m_gid_pool . associate		1575667	0					
ANR	1575688	MemberAccess	m_gid_pool . associate		1575667	0					
ANR	1575689	Identifier	m_gid_pool		1575667	0					
ANR	1575690	Identifier	associate		1575667	1					
ANR	1575691	ArgumentList	family		1575667	1					
ANR	1575692	Argument	family		1575667	0					
ANR	1575693	Identifier	family		1575667	0					
ANR	1575694	Argument	gid		1575667	1					
ANR	1575695	Identifier	gid		1575667	0					
ANR	1575696	ReturnType	bool		1575667	1					
ANR	1575697	Identifier	GroupTracker :: add_mapping		1575667	2					
ANR	1575698	ParameterList	"ProcFamily * family , gid_t & gid"		1575667	3					
ANR	1575699	Parameter	ProcFamily * family	38:26:1313:1330	1575667	0	True				
ANR	1575700	ParameterType	ProcFamily *		1575667	0					
ANR	1575701	Identifier	family		1575667	1					
ANR	1575702	Parameter	gid_t & gid	38:46:1333:1342	1575667	1	True				
ANR	1575703	ParameterType	gid_t &		1575667	0					
ANR	1575704	Identifier	gid		1575667	1					
ANR	1575705	CFGEntryNode	ENTRY		1575667		True				
ANR	1575706	CFGExitNode	EXIT		1575667		True				
ANR	1575707	Symbol	gid		1575667						
ANR	1575708	Symbol	m_allocating		1575667						
ANR	1575709	Symbol	family		1575667						
ANR	1575710	Symbol	m_gid_pool . allocate		1575667						
ANR	1575711	Symbol	m_gid_pool		1575667						
ANR	1575712	Symbol	m_gid_pool . associate		1575667						
ANR	1575713	Function	GroupTracker :: remove_mapping	48:0:1550:1639							
ANR	1575714	FunctionDef	GroupTracker :: remove_mapping (ProcFamily * family)		1575713	0					
ANR	1575715	CompoundStatement		50:0:1604:1639	1575713	0					
ANR	1575716	ReturnStatement	return m_gid_pool . free ( family ) ;	51:1:1607:1637	1575713	0	True				
ANR	1575717	CallExpression	m_gid_pool . free ( family )		1575713	0					
ANR	1575718	Callee	m_gid_pool . free		1575713	0					
ANR	1575719	MemberAccess	m_gid_pool . free		1575713	0					
ANR	1575720	Identifier	m_gid_pool		1575713	0					
ANR	1575721	Identifier	free		1575713	1					
ANR	1575722	ArgumentList	family		1575713	1					
ANR	1575723	Argument	family		1575713	0					
ANR	1575724	Identifier	family		1575713	0					
ANR	1575725	ReturnType	bool		1575713	1					
ANR	1575726	Identifier	GroupTracker :: remove_mapping		1575713	2					
ANR	1575727	ParameterList	ProcFamily * family		1575713	3					
ANR	1575728	Parameter	ProcFamily * family	49:29:1584:1601	1575713	0	True				
ANR	1575729	ParameterType	ProcFamily *		1575713	0					
ANR	1575730	Identifier	family		1575713	1					
ANR	1575731	CFGEntryNode	ENTRY		1575713		True				
ANR	1575732	CFGExitNode	EXIT		1575713		True				
ANR	1575733	Symbol	m_gid_pool . free		1575713						
ANR	1575734	Symbol	family		1575713						
ANR	1575735	Symbol	m_gid_pool		1575713						
ANR	1575736	Function	GroupTracker :: check_process	54:0:1642:4042							
ANR	1575737	FunctionDef	GroupTracker :: check_process (procInfo * pi)		1575736	0					
ANR	1575738	CompoundStatement		56:0:1689:4042	1575736	0					
ANR	1575739	Statement	static	57:1:1692:1697	1575736	0	True				
ANR	1575740	IdentifierDeclStatement	"const char GROUPS_PREFIX [ ] = ""Groups:\\t"" ;"	57:8:1699:1739	1575736	1	True				
ANR	1575741	IdentifierDecl	"GROUPS_PREFIX [ ] = ""Groups:\\t"""		1575736	0					
ANR	1575742	IdentifierDeclType	const char [ ]		1575736	0					
ANR	1575743	Identifier	GROUPS_PREFIX		1575736	1					
ANR	1575744	AssignmentExpression	"GROUPS_PREFIX [ ] = ""Groups:\\t"""		1575736	2		=			
ANR	1575745	Identifier	GROUPS_PREFIX		1575736	0					
ANR	1575746	PrimaryExpression	"""Groups:\\t"""		1575736	1					
ANR	1575747	Statement	static	58:1:1742:1747	1575736	2	True				
ANR	1575748	IdentifierDeclStatement	const int GROUPS_PREFIX_SIZE = sizeof ( GROUPS_PREFIX ) - 1 ;	58:8:1749:1805	1575736	3	True				
ANR	1575749	IdentifierDecl	GROUPS_PREFIX_SIZE = sizeof ( GROUPS_PREFIX ) - 1		1575736	0					
ANR	1575750	IdentifierDeclType	const int		1575736	0					
ANR	1575751	Identifier	GROUPS_PREFIX_SIZE		1575736	1					
ANR	1575752	AssignmentExpression	GROUPS_PREFIX_SIZE = sizeof ( GROUPS_PREFIX ) - 1		1575736	2		=			
ANR	1575753	Identifier	GROUPS_PREFIX_SIZE		1575736	0					
ANR	1575754	AdditiveExpression	sizeof ( GROUPS_PREFIX ) - 1		1575736	1		-			
ANR	1575755	SizeofExpression	sizeof ( GROUPS_PREFIX )		1575736	0					
ANR	1575756	Sizeof	sizeof		1575736	0					
ANR	1575757	SizeofOperand	GROUPS_PREFIX		1575736	1					
ANR	1575758	PrimaryExpression	1		1575736	1					
ANR	1575759	IdentifierDeclStatement	char path [ 32 ] ;	62:1:1866:1879	1575736	4	True				
ANR	1575760	IdentifierDecl	path [ 32 ]		1575736	0					
ANR	1575761	IdentifierDeclType	char [ 32 ]		1575736	0					
ANR	1575762	Identifier	path		1575736	1					
ANR	1575763	PrimaryExpression	32		1575736	2					
ANR	1575764	IdentifierDeclStatement	"int ret = snprintf ( path , 32 , ""/proc/%u/status"" , pi -> pid ) ;"	63:1:1882:1938	1575736	5	True				
ANR	1575765	IdentifierDecl	"ret = snprintf ( path , 32 , ""/proc/%u/status"" , pi -> pid )"		1575736	0					
ANR	1575766	IdentifierDeclType	int		1575736	0					
ANR	1575767	Identifier	ret		1575736	1					
ANR	1575768	AssignmentExpression	"ret = snprintf ( path , 32 , ""/proc/%u/status"" , pi -> pid )"		1575736	2		=			
ANR	1575769	Identifier	ret		1575736	0					
ANR	1575770	CallExpression	"snprintf ( path , 32 , ""/proc/%u/status"" , pi -> pid )"		1575736	1					
ANR	1575771	Callee	snprintf		1575736	0					
ANR	1575772	Identifier	snprintf		1575736	0					
ANR	1575773	ArgumentList	path		1575736	1					
ANR	1575774	Argument	path		1575736	0					
ANR	1575775	Identifier	path		1575736	0					
ANR	1575776	Argument	32		1575736	1					
ANR	1575777	PrimaryExpression	32		1575736	0					
ANR	1575778	Argument	"""/proc/%u/status"""		1575736	2					
ANR	1575779	PrimaryExpression	"""/proc/%u/status"""		1575736	0					
ANR	1575780	Argument	pi -> pid		1575736	3					
ANR	1575781	PtrMemberAccess	pi -> pid		1575736	0					
ANR	1575782	Identifier	pi		1575736	0					
ANR	1575783	Identifier	pid		1575736	1					
ANR	1575784	IfStatement	if ( ret < 0 )		1575736	6					
ANR	1575785	Condition	ret < 0	64:5:1945:1951	1575736	0	True				
ANR	1575786	RelationalExpression	ret < 0		1575736	0		<			
ANR	1575787	Identifier	ret		1575736	0					
ANR	1575788	PrimaryExpression	0		1575736	1					
ANR	1575789	CompoundStatement		9:14:264:264	1575736	1					
ANR	1575790	ExpressionStatement	"dprintf ( D_ALWAYS , ""GroupTracker (pid = %u): snprintf error: %s (%d)\\n"" , pi -> pid , strerror ( errno ) , errno )"	65:2:1958:2102	1575736	0	True				
ANR	1575791	CallExpression	"dprintf ( D_ALWAYS , ""GroupTracker (pid = %u): snprintf error: %s (%d)\\n"" , pi -> pid , strerror ( errno ) , errno )"		1575736	0					
ANR	1575792	Callee	dprintf		1575736	0					
ANR	1575793	Identifier	dprintf		1575736	0					
ANR	1575794	ArgumentList	D_ALWAYS		1575736	1					
ANR	1575795	Argument	D_ALWAYS		1575736	0					
ANR	1575796	Identifier	D_ALWAYS		1575736	0					
ANR	1575797	Argument	"""GroupTracker (pid = %u): snprintf error: %s (%d)\\n"""		1575736	1					
ANR	1575798	PrimaryExpression	"""GroupTracker (pid = %u): snprintf error: %s (%d)\\n"""		1575736	0					
ANR	1575799	Argument	pi -> pid		1575736	2					
ANR	1575800	PtrMemberAccess	pi -> pid		1575736	0					
ANR	1575801	Identifier	pi		1575736	0					
ANR	1575802	Identifier	pid		1575736	1					
ANR	1575803	Argument	strerror ( errno )		1575736	3					
ANR	1575804	CallExpression	strerror ( errno )		1575736	0					
ANR	1575805	Callee	strerror		1575736	0					
ANR	1575806	Identifier	strerror		1575736	0					
ANR	1575807	ArgumentList	errno		1575736	1					
ANR	1575808	Argument	errno		1575736	0					
ANR	1575809	Identifier	errno		1575736	0					
ANR	1575810	Argument	errno		1575736	4					
ANR	1575811	Identifier	errno		1575736	0					
ANR	1575812	ReturnStatement	return false ;	70:2:2106:2118	1575736	1	True				
ANR	1575813	Identifier	false		1575736	0					
ANR	1575814	IfStatement	if ( ret >= 32 )		1575736	7					
ANR	1575815	Condition	ret >= 32	72:5:2128:2136	1575736	0	True				
ANR	1575816	RelationalExpression	ret >= 32		1575736	0		>=			
ANR	1575817	Identifier	ret		1575736	0					
ANR	1575818	PrimaryExpression	32		1575736	1					
ANR	1575819	CompoundStatement		17:16:449:449	1575736	1					
ANR	1575820	ExpressionStatement	"dprintf ( D_ALWAYS , ""GroupTracker (pid = %u): error: path buffer too small\\n"" , pi -> pid )"	73:2:2143:2248	1575736	0	True				
ANR	1575821	CallExpression	"dprintf ( D_ALWAYS , ""GroupTracker (pid = %u): error: path buffer too small\\n"" , pi -> pid )"		1575736	0					
ANR	1575822	Callee	dprintf		1575736	0					
ANR	1575823	Identifier	dprintf		1575736	0					
ANR	1575824	ArgumentList	D_ALWAYS		1575736	1					
ANR	1575825	Argument	D_ALWAYS		1575736	0					
ANR	1575826	Identifier	D_ALWAYS		1575736	0					
ANR	1575827	Argument	"""GroupTracker (pid = %u): error: path buffer too small\\n"""		1575736	1					
ANR	1575828	PrimaryExpression	"""GroupTracker (pid = %u): error: path buffer too small\\n"""		1575736	0					
ANR	1575829	Argument	pi -> pid		1575736	2					
ANR	1575830	PtrMemberAccess	pi -> pid		1575736	0					
ANR	1575831	Identifier	pi		1575736	0					
ANR	1575832	Identifier	pid		1575736	1					
ANR	1575833	ReturnStatement	return false ;	76:2:2252:2264	1575736	1	True				
ANR	1575834	Identifier	false		1575736	0					
ANR	1575835	IdentifierDeclStatement	"FILE * fp = safe_fopen_wrapper ( path , ""r"" ) ;"	81:1:2292:2332	1575736	8	True				
ANR	1575836	IdentifierDecl	"* fp = safe_fopen_wrapper ( path , ""r"" )"		1575736	0					
ANR	1575837	IdentifierDeclType	FILE *		1575736	0					
ANR	1575838	Identifier	fp		1575736	1					
ANR	1575839	AssignmentExpression	"* fp = safe_fopen_wrapper ( path , ""r"" )"		1575736	2		=			
ANR	1575840	Identifier	fp		1575736	0					
ANR	1575841	CallExpression	"safe_fopen_wrapper ( path , ""r"" )"		1575736	1					
ANR	1575842	Callee	safe_fopen_wrapper		1575736	0					
ANR	1575843	Identifier	safe_fopen_wrapper		1575736	0					
ANR	1575844	ArgumentList	path		1575736	1					
ANR	1575845	Argument	path		1575736	0					
ANR	1575846	Identifier	path		1575736	0					
ANR	1575847	Argument	"""r"""		1575736	1					
ANR	1575848	PrimaryExpression	"""r"""		1575736	0					
ANR	1575849	IfStatement	if ( fp == NULL )		1575736	9					
ANR	1575850	Condition	fp == NULL	82:5:2339:2348	1575736	0	True				
ANR	1575851	EqualityExpression	fp == NULL		1575736	0		==			
ANR	1575852	Identifier	fp		1575736	0					
ANR	1575853	Identifier	NULL		1575736	1					
ANR	1575854	CompoundStatement		27:17:661:661	1575736	1					
ANR	1575855	Statement	dprintf	83:2:2355:2361	1575736	0	True				
ANR	1575856	Statement	(	83:9:2362:2362	1575736	1	True				
ANR	1575857	Statement	D_ALWAYS	83:10:2363:2370	1575736	2	True				
ANR	1575858	Statement	","	83:18:2371:2371	1575736	3	True				
ANR	1575859	Statement	"""GroupTracker (pid = %u): fopen error: """	84:10:2383:2422	1575736	4	True				
ANR	1575860	Statement	"""Failed to open file '%s'. %s (%d)\\n"""	85:4:2428:2464	1575736	5	True				
ANR	1575861	Statement	","	85:41:2465:2465	1575736	6	True				
ANR	1575862	Statement	pi	86:10:2477:2478	1575736	7	True				
ANR	1575863	Statement	->	86:12:2479:2480	1575736	8	True				
ANR	1575864	Statement	pid	86:14:2481:2483	1575736	9	True				
ANR	1575865	Statement	","	86:17:2484:2484	1575736	10	True				
ANR	1575866	Statement	path	87:4:2490:2493	1575736	11	True				
ANR	1575867	Statement	","	87:8:2494:2494	1575736	12	True				
ANR	1575868	Statement	strerror	88:10:2506:2513	1575736	13	True				
ANR	1575869	Statement	(	88:18:2514:2514	1575736	14	True				
ANR	1575870	Statement	errno	88:19:2515:2519	1575736	15	True				
ANR	1575871	Statement	)	88:24:2520:2520	1575736	16	True				
ANR	1575872	Statement	","	88:25:2521:2521	1575736	17	True				
ANR	1575873	Statement	errno	89:10:2533:2537	1575736	18	True				
ANR	1575874	Statement	)	89:15:2538:2538	1575736	19	True				
ANR	1575875	ExpressionStatement		89:16:2539:2539	1575736	20	True				
ANR	1575876	ReturnStatement	return false ;	90:2:2543:2555	1575736	21	True				
ANR	1575877	Identifier	false		1575736	0					
ANR	1575878	IdentifierDeclStatement	char buffer [ 1024 ] ;	95:1:2612:2629	1575736	10	True				
ANR	1575879	IdentifierDecl	buffer [ 1024 ]		1575736	0					
ANR	1575880	IdentifierDeclType	char [ 1024 ]		1575736	0					
ANR	1575881	Identifier	buffer		1575736	1					
ANR	1575882	PrimaryExpression	1024		1575736	2					
ANR	1575883	IdentifierDeclStatement	bool found_groups = false ;	96:1:2632:2657	1575736	11	True				
ANR	1575884	IdentifierDecl	found_groups = false		1575736	0					
ANR	1575885	IdentifierDeclType	bool		1575736	0					
ANR	1575886	Identifier	found_groups		1575736	1					
ANR	1575887	AssignmentExpression	found_groups = false		1575736	2		=			
ANR	1575888	Identifier	false		1575736	0					
ANR	1575889	Identifier	false		1575736	1					
ANR	1575890	WhileStatement	"while ( fgets ( buffer , 1024 , fp ) )"		1575736	12					
ANR	1575891	Condition	"fgets ( buffer , 1024 , fp )"	97:8:2667:2689	1575736	0	True				
ANR	1575892	CallExpression	"fgets ( buffer , 1024 , fp )"		1575736	0					
ANR	1575893	Callee	fgets		1575736	0					
ANR	1575894	Identifier	fgets		1575736	0					
ANR	1575895	ArgumentList	buffer		1575736	1					
ANR	1575896	Argument	buffer		1575736	0					
ANR	1575897	Identifier	buffer		1575736	0					
ANR	1575898	Argument	1024		1575736	1					
ANR	1575899	PrimaryExpression	1024		1575736	0					
ANR	1575900	Argument	fp		1575736	2					
ANR	1575901	Identifier	fp		1575736	0					
ANR	1575902	CompoundStatement		42:33:1002:1002	1575736	1					
ANR	1575903	IfStatement	"if ( strncmp ( buffer , GROUPS_PREFIX , GROUPS_PREFIX_SIZE ) == 0 )"		1575736	0					
ANR	1575904	Condition	"strncmp ( buffer , GROUPS_PREFIX , GROUPS_PREFIX_SIZE ) == 0"	98:6:2700:2754	1575736	0	True				
ANR	1575905	EqualityExpression	"strncmp ( buffer , GROUPS_PREFIX , GROUPS_PREFIX_SIZE ) == 0"		1575736	0		==			
ANR	1575906	CallExpression	"strncmp ( buffer , GROUPS_PREFIX , GROUPS_PREFIX_SIZE )"		1575736	0					
ANR	1575907	Callee	strncmp		1575736	0					
ANR	1575908	Identifier	strncmp		1575736	0					
ANR	1575909	ArgumentList	buffer		1575736	1					
ANR	1575910	Argument	buffer		1575736	0					
ANR	1575911	Identifier	buffer		1575736	0					
ANR	1575912	Argument	GROUPS_PREFIX		1575736	1					
ANR	1575913	Identifier	GROUPS_PREFIX		1575736	0					
ANR	1575914	Argument	GROUPS_PREFIX_SIZE		1575736	2					
ANR	1575915	Identifier	GROUPS_PREFIX_SIZE		1575736	0					
ANR	1575916	PrimaryExpression	0		1575736	1					
ANR	1575917	CompoundStatement		43:63:1067:1067	1575736	1					
ANR	1575918	ExpressionStatement	found_groups = true	99:3:2762:2781	1575736	0	True				
ANR	1575919	AssignmentExpression	found_groups = true		1575736	0		=			
ANR	1575920	Identifier	found_groups		1575736	0					
ANR	1575921	Identifier	true		1575736	1					
ANR	1575922	BreakStatement	break ;	100:3:2786:2791	1575736	1	True				
ANR	1575923	IfStatement	if ( ! found_groups )		1575736	13					
ANR	1575924	Condition	! found_groups	103:5:2805:2817	1575736	0	True				
ANR	1575925	UnaryOperationExpression	! found_groups		1575736	0					
ANR	1575926	UnaryOperator	!		1575736	0					
ANR	1575927	Identifier	found_groups		1575736	1					
ANR	1575928	CompoundStatement		48:20:1130:1130	1575736	1					
ANR	1575929	IfStatement	if ( feof ( fp ) )		1575736	0					
ANR	1575930	Condition	feof ( fp )	104:6:2828:2835	1575736	0	True				
ANR	1575931	CallExpression	feof ( fp )		1575736	0					
ANR	1575932	Callee	feof		1575736	0					
ANR	1575933	Identifier	feof		1575736	0					
ANR	1575934	ArgumentList	fp		1575736	1					
ANR	1575935	Argument	fp		1575736	0					
ANR	1575936	Identifier	fp		1575736	0					
ANR	1575937	CompoundStatement		49:16:1148:1148	1575736	1					
ANR	1575938	Statement	dprintf	105:3:2843:2849	1575736	0	True				
ANR	1575939	Statement	(	105:10:2850:2850	1575736	1	True				
ANR	1575940	Statement	D_ALWAYS	105:11:2851:2858	1575736	2	True				
ANR	1575941	Statement	","	105:19:2859:2859	1575736	3	True				
ANR	1575942	Statement	"""GroupTracker (pid = %u): """	106:11:2872:2898	1575736	4	True				
ANR	1575943	Statement	"""groups not found in status file\\n"""	107:15:2915:2949	1575736	5	True				
ANR	1575944	Statement	","	107:50:2950:2950	1575736	6	True				
ANR	1575945	Statement	pi	108:11:2963:2964	1575736	7	True				
ANR	1575946	Statement	->	108:13:2965:2966	1575736	8	True				
ANR	1575947	Statement	pid	108:15:2967:2969	1575736	9	True				
ANR	1575948	Statement	)	108:18:2970:2970	1575736	10	True				
ANR	1575949	ExpressionStatement		108:19:2971:2971	1575736	11	True				
ANR	1575950	ElseStatement	else		1575736	0					
ANR	1575951	CompoundStatement		55:7:1294:1294	1575736	0					
ANR	1575952	Statement	dprintf	111:3:2989:2995	1575736	0	True				
ANR	1575953	Statement	(	111:10:2996:2996	1575736	1	True				
ANR	1575954	Statement	D_ALWAYS	111:11:2997:3004	1575736	2	True				
ANR	1575955	Statement	","	111:19:3005:3005	1575736	3	True				
ANR	1575956	Statement	"""GroupTracker (pid = %u): """	112:11:3018:3044	1575736	4	True				
ANR	1575957	Statement	"""error reading from status file: %s (%d)\\n"""	113:15:3061:3103	1575736	5	True				
ANR	1575958	Statement	","	113:58:3104:3104	1575736	6	True				
ANR	1575959	Statement	pi	114:11:3117:3118	1575736	7	True				
ANR	1575960	Statement	->	114:13:3119:3120	1575736	8	True				
ANR	1575961	Statement	pid	114:15:3121:3123	1575736	9	True				
ANR	1575962	Statement	","	114:18:3124:3124	1575736	10	True				
ANR	1575963	Statement	strerror	115:11:3137:3144	1575736	11	True				
ANR	1575964	Statement	(	115:19:3145:3145	1575736	12	True				
ANR	1575965	Statement	errno	115:20:3146:3150	1575736	13	True				
ANR	1575966	Statement	)	115:25:3151:3151	1575736	14	True				
ANR	1575967	Statement	","	115:26:3152:3152	1575736	15	True				
ANR	1575968	Statement	errno	116:11:3165:3169	1575736	16	True				
ANR	1575969	Statement	)	116:16:3170:3170	1575736	17	True				
ANR	1575970	ExpressionStatement		116:17:3171:3171	1575736	18	True				
ANR	1575971	ExpressionStatement	fclose ( fp )	118:2:3179:3189	1575736	1	True				
ANR	1575972	CallExpression	fclose ( fp )		1575736	0					
ANR	1575973	Callee	fclose		1575736	0					
ANR	1575974	Identifier	fclose		1575736	0					
ANR	1575975	ArgumentList	fp		1575736	1					
ANR	1575976	Argument	fp		1575736	0					
ANR	1575977	Identifier	fp		1575736	0					
ANR	1575978	ReturnStatement	return false ;	119:2:3193:3205	1575736	2	True				
ANR	1575979	Identifier	false		1575736	0					
ANR	1575980	ExpressionStatement	fclose ( fp )	121:1:3211:3221	1575736	14	True				
ANR	1575981	CallExpression	fclose ( fp )		1575736	0					
ANR	1575982	Callee	fclose		1575736	0					
ANR	1575983	Identifier	fclose		1575736	0					
ANR	1575984	ArgumentList	fp		1575736	1					
ANR	1575985	Argument	fp		1575736	0					
ANR	1575986	Identifier	fp		1575736	0					
ANR	1575987	IdentifierDeclStatement	int line_len = strlen ( buffer ) ;	125:1:3272:3301	1575736	15	True				
ANR	1575988	IdentifierDecl	line_len = strlen ( buffer )		1575736	0					
ANR	1575989	IdentifierDeclType	int		1575736	0					
ANR	1575990	Identifier	line_len		1575736	1					
ANR	1575991	AssignmentExpression	line_len = strlen ( buffer )		1575736	2		=			
ANR	1575992	Identifier	line_len		1575736	0					
ANR	1575993	CallExpression	strlen ( buffer )		1575736	1					
ANR	1575994	Callee	strlen		1575736	0					
ANR	1575995	Identifier	strlen		1575736	0					
ANR	1575996	ArgumentList	buffer		1575736	1					
ANR	1575997	Argument	buffer		1575736	0					
ANR	1575998	Identifier	buffer		1575736	0					
ANR	1575999	IfStatement	if ( buffer [ line_len - 1 ] != '\\n' )		1575736	16					
ANR	1576000	Condition	buffer [ line_len - 1 ] != '\\n'	126:5:3308:3335	1575736	0	True				
ANR	1576001	EqualityExpression	buffer [ line_len - 1 ] != '\\n'		1575736	0		!=			
ANR	1576002	ArrayIndexing	buffer [ line_len - 1 ]		1575736	0					
ANR	1576003	Identifier	buffer		1575736	0					
ANR	1576004	AdditiveExpression	line_len - 1		1575736	1		-			
ANR	1576005	Identifier	line_len		1575736	0					
ANR	1576006	PrimaryExpression	1		1575736	1					
ANR	1576007	PrimaryExpression	'\\n'		1575736	1					
ANR	1576008	CompoundStatement		71:35:1648:1648	1575736	1					
ANR	1576009	Statement	dprintf	127:2:3342:3348	1575736	0	True				
ANR	1576010	Statement	(	127:9:3349:3349	1575736	1	True				
ANR	1576011	Statement	D_ALWAYS	127:10:3350:3357	1575736	2	True				
ANR	1576012	Statement	","	127:18:3358:3358	1575736	3	True				
ANR	1576013	Statement	"""GroupTracker (pid = %u): """	128:10:3370:3396	1575736	4	True				
ANR	1576014	Statement	"""read partial line from status file\\n"""	129:14:3412:3449	1575736	5	True				
ANR	1576015	Statement	","	129:52:3450:3450	1575736	6	True				
ANR	1576016	Statement	pi	130:10:3462:3463	1575736	7	True				
ANR	1576017	Statement	->	130:12:3464:3465	1575736	8	True				
ANR	1576018	Statement	pid	130:14:3466:3468	1575736	9	True				
ANR	1576019	Statement	)	130:17:3469:3469	1575736	10	True				
ANR	1576020	ExpressionStatement		130:18:3470:3470	1575736	11	True				
ANR	1576021	ReturnStatement	return false ;	131:2:3474:3486	1575736	12	True				
ANR	1576022	Identifier	false		1575736	0					
ANR	1576023	ExpressionStatement	buffer [ line_len - 1 ] = '\\0'	133:1:3492:3519	1575736	17	True				
ANR	1576024	AssignmentExpression	buffer [ line_len - 1 ] = '\\0'		1575736	0		=			
ANR	1576025	ArrayIndexing	buffer [ line_len - 1 ]		1575736	0					
ANR	1576026	Identifier	buffer		1575736	0					
ANR	1576027	AdditiveExpression	line_len - 1		1575736	1		-			
ANR	1576028	Identifier	line_len		1575736	0					
ANR	1576029	PrimaryExpression	1		1575736	1					
ANR	1576030	PrimaryExpression	'\\0'		1575736	1					
ANR	1576031	IdentifierDeclStatement	char * buffer_ptr = buffer + GROUPS_PREFIX_SIZE ;	137:1:3601:3647	1575736	18	True				
ANR	1576032	IdentifierDecl	* buffer_ptr = buffer + GROUPS_PREFIX_SIZE		1575736	0					
ANR	1576033	IdentifierDeclType	char *		1575736	0					
ANR	1576034	Identifier	buffer_ptr		1575736	1					
ANR	1576035	AssignmentExpression	* buffer_ptr = buffer + GROUPS_PREFIX_SIZE		1575736	2		=			
ANR	1576036	Identifier	buffer_ptr		1575736	0					
ANR	1576037	AdditiveExpression	buffer + GROUPS_PREFIX_SIZE		1575736	1		+			
ANR	1576038	Identifier	buffer		1575736	0					
ANR	1576039	Identifier	GROUPS_PREFIX_SIZE		1575736	1					
ANR	1576040	IdentifierDeclStatement	char * strtok_ptr ;	138:1:3650:3666	1575736	19	True				
ANR	1576041	IdentifierDecl	* strtok_ptr		1575736	0					
ANR	1576042	IdentifierDeclType	char *		1575736	0					
ANR	1576043	Identifier	strtok_ptr		1575736	1					
ANR	1576044	IdentifierDeclStatement	"char * token = strtok_r ( buffer_ptr , "" "" , & strtok_ptr ) ;"	139:1:3669:3721	1575736	20	True				
ANR	1576045	IdentifierDecl	"* token = strtok_r ( buffer_ptr , "" "" , & strtok_ptr )"		1575736	0					
ANR	1576046	IdentifierDeclType	char *		1575736	0					
ANR	1576047	Identifier	token		1575736	1					
ANR	1576048	AssignmentExpression	"* token = strtok_r ( buffer_ptr , "" "" , & strtok_ptr )"		1575736	2		=			
ANR	1576049	Identifier	token		1575736	0					
ANR	1576050	CallExpression	"strtok_r ( buffer_ptr , "" "" , & strtok_ptr )"		1575736	1					
ANR	1576051	Callee	strtok_r		1575736	0					
ANR	1576052	Identifier	strtok_r		1575736	0					
ANR	1576053	ArgumentList	buffer_ptr		1575736	1					
ANR	1576054	Argument	buffer_ptr		1575736	0					
ANR	1576055	Identifier	buffer_ptr		1575736	0					
ANR	1576056	Argument	""" """		1575736	1					
ANR	1576057	PrimaryExpression	""" """		1575736	0					
ANR	1576058	Argument	& strtok_ptr		1575736	2					
ANR	1576059	UnaryOperationExpression	& strtok_ptr		1575736	0					
ANR	1576060	UnaryOperator	&		1575736	0					
ANR	1576061	Identifier	strtok_ptr		1575736	1					
ANR	1576062	WhileStatement	while ( token != NULL )		1575736	21					
ANR	1576063	Condition	token != NULL	140:8:3731:3743	1575736	0	True				
ANR	1576064	EqualityExpression	token != NULL		1575736	0		!=			
ANR	1576065	Identifier	token		1575736	0					
ANR	1576066	Identifier	NULL		1575736	1					
ANR	1576067	CompoundStatement		86:2:2060:2122	1575736	1					
ANR	1576068	IdentifierDeclStatement	ProcFamily * family = m_gid_pool . get_family ( ( gid_t ) atoi ( token ) ) ;	141:2:3750:3812	1575736	0	True				
ANR	1576069	IdentifierDecl	* family = m_gid_pool . get_family ( ( gid_t ) atoi ( token ) )		1575736	0					
ANR	1576070	IdentifierDeclType	ProcFamily *		1575736	0					
ANR	1576071	Identifier	family		1575736	1					
ANR	1576072	AssignmentExpression	* family = m_gid_pool . get_family ( ( gid_t ) atoi ( token ) )		1575736	2		=			
ANR	1576073	Identifier	family		1575736	0					
ANR	1576074	CallExpression	m_gid_pool . get_family ( ( gid_t ) atoi ( token ) )		1575736	1					
ANR	1576075	Callee	m_gid_pool . get_family		1575736	0					
ANR	1576076	MemberAccess	m_gid_pool . get_family		1575736	0					
ANR	1576077	Identifier	m_gid_pool		1575736	0					
ANR	1576078	Identifier	get_family		1575736	1					
ANR	1576079	ArgumentList	( gid_t ) atoi ( token )		1575736	1					
ANR	1576080	Argument	( gid_t ) atoi ( token )		1575736	0					
ANR	1576081	CastExpression	( gid_t ) atoi ( token )		1575736	0					
ANR	1576082	CastTarget	gid_t		1575736	0					
ANR	1576083	CallExpression	atoi ( token )		1575736	1					
ANR	1576084	Callee	atoi		1575736	0					
ANR	1576085	Identifier	atoi		1575736	0					
ANR	1576086	ArgumentList	token		1575736	1					
ANR	1576087	Argument	token		1575736	0					
ANR	1576088	Identifier	token		1575736	0					
ANR	1576089	IfStatement	if ( family != NULL )		1575736	1					
ANR	1576090	Condition	family != NULL	142:6:3820:3833	1575736	0	True				
ANR	1576091	EqualityExpression	family != NULL		1575736	0		!=			
ANR	1576092	Identifier	family		1575736	0					
ANR	1576093	Identifier	NULL		1575736	1					
ANR	1576094	CompoundStatement		87:22:2146:2146	1575736	1					
ANR	1576095	ExpressionStatement	"m_monitor -> add_member_to_family ( family , pi , ""GROUP"" )"	143:3:3841:3893	1575736	0	True				
ANR	1576096	CallExpression	"m_monitor -> add_member_to_family ( family , pi , ""GROUP"" )"		1575736	0					
ANR	1576097	Callee	m_monitor -> add_member_to_family		1575736	0					
ANR	1576098	PtrMemberAccess	m_monitor -> add_member_to_family		1575736	0					
ANR	1576099	Identifier	m_monitor		1575736	0					
ANR	1576100	Identifier	add_member_to_family		1575736	1					
ANR	1576101	ArgumentList	family		1575736	1					
ANR	1576102	Argument	family		1575736	0					
ANR	1576103	Identifier	family		1575736	0					
ANR	1576104	Argument	pi		1575736	1					
ANR	1576105	Identifier	pi		1575736	0					
ANR	1576106	Argument	"""GROUP"""		1575736	2					
ANR	1576107	PrimaryExpression	"""GROUP"""		1575736	0					
ANR	1576108	ReturnStatement	return true ;	144:3:3898:3909	1575736	1	True				
ANR	1576109	Identifier	true		1575736	0					
ANR	1576110	ExpressionStatement	"token = strtok_r ( NULL , "" "" , & strtok_ptr )"	146:2:3917:3957	1575736	2	True				
ANR	1576111	AssignmentExpression	"token = strtok_r ( NULL , "" "" , & strtok_ptr )"		1575736	0		=			
ANR	1576112	Identifier	token		1575736	0					
ANR	1576113	CallExpression	"strtok_r ( NULL , "" "" , & strtok_ptr )"		1575736	1					
ANR	1576114	Callee	strtok_r		1575736	0					
ANR	1576115	Identifier	strtok_r		1575736	0					
ANR	1576116	ArgumentList	NULL		1575736	1					
ANR	1576117	Argument	NULL		1575736	0					
ANR	1576118	Identifier	NULL		1575736	0					
ANR	1576119	Argument	""" """		1575736	1					
ANR	1576120	PrimaryExpression	""" """		1575736	0					
ANR	1576121	Argument	& strtok_ptr		1575736	2					
ANR	1576122	UnaryOperationExpression	& strtok_ptr		1575736	0					
ANR	1576123	UnaryOperator	&		1575736	0					
ANR	1576124	Identifier	strtok_ptr		1575736	1					
ANR	1576125	ReturnStatement	return false ;	151:1:4028:4040	1575736	22	True				
ANR	1576126	Identifier	false		1575736	0					
ANR	1576127	ReturnType	bool		1575736	1					
ANR	1576128	Identifier	GroupTracker :: check_process		1575736	2					
ANR	1576129	ParameterList	procInfo * pi		1575736	3					
ANR	1576130	Parameter	procInfo * pi	55:28:1675:1686	1575736	0	True				
ANR	1576131	ParameterType	procInfo *		1575736	0					
ANR	1576132	Identifier	pi		1575736	1					
ANR	1576133	CFGEntryNode	ENTRY		1575736		True				
ANR	1576134	CFGExitNode	EXIT		1575736		True				
ANR	1576135	Symbol	fp		1575736						
ANR	1576136	Symbol	GROUPS_PREFIX_SIZE		1575736						
ANR	1576137	Symbol	buffer_ptr		1575736						
ANR	1576138	Symbol	m_gid_pool . get_family		1575736						
ANR	1576139	Symbol	fgets		1575736						
ANR	1576140	Symbol	m_gid_pool		1575736						
ANR	1576141	Symbol	path		1575736						
ANR	1576142	Symbol	strncmp		1575736						
ANR	1576143	Symbol	strlen		1575736						
ANR	1576144	Symbol	line_len		1575736						
ANR	1576145	Symbol	buffer		1575736						
ANR	1576146	Symbol	snprintf		1575736						
ANR	1576147	Symbol	ret		1575736						
ANR	1576148	Symbol	& strtok_ptr		1575736						
ANR	1576149	Symbol	atoi		1575736						
ANR	1576150	Symbol	errno		1575736						
ANR	1576151	Symbol	* buffer		1575736						
ANR	1576152	Symbol	NULL		1575736						
ANR	1576153	Symbol	safe_fopen_wrapper		1575736						
ANR	1576154	Symbol	D_ALWAYS		1575736						
ANR	1576155	Symbol	false		1575736						
ANR	1576156	Symbol	strtok_r		1575736						
ANR	1576157	Symbol	m_monitor		1575736						
ANR	1576158	Symbol	token		1575736						
ANR	1576159	Symbol	strerror		1575736						
ANR	1576160	Symbol	GROUPS_PREFIX		1575736						
ANR	1576161	Symbol	pi -> pid		1575736						
ANR	1576162	Symbol	true		1575736						
ANR	1576163	Symbol	* line_len		1575736						
ANR	1576164	Symbol	pi		1575736						
ANR	1576165	Symbol	feof		1575736						
ANR	1576166	Symbol	* pi		1575736						
ANR	1576167	Symbol	found_groups		1575736						
ANR	1576168	Symbol	family		1575736						
ANR	1576169	Symbol	strtok_ptr		1575736						
