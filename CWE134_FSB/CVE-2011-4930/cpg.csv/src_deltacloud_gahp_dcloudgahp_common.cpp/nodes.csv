command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5066012	File	data/converged/CVE-2011-4930_htcondor/src_deltacloud_gahp_dcloudgahp_common.cpp								
ANR	5066013	DeclStmt									
ANR	5066014	Decl							pthread_mutex_t	pthread_mutex_t	dcloudprintf_mutex
ANR	5066015	Function	dcloudprintf_internal	10:0:204:583							
ANR	5066016	FunctionDef	"dcloudprintf_internal (const char * function , const char * fmt)"		5066015	0					
ANR	5066017	CompoundStatement		11:0:275:583	5066015	0					
ANR	5066018	IdentifierDeclStatement	va_list va_args ;	12:4:281:296	5066015	0	True				
ANR	5066019	IdentifierDecl	va_args		5066015	0					
ANR	5066020	IdentifierDeclType	va_list		5066015	0					
ANR	5066021	Identifier	va_args		5066015	1					
ANR	5066022	IfStatement	if ( logfp )		5066015	1					
ANR	5066023	Condition	logfp	14:8:307:311	5066015	0	True				
ANR	5066024	Identifier	logfp		5066015	0					
ANR	5066025	CompoundStatement		4:15:38:38	5066015	1					
ANR	5066026	ExpressionStatement	pthread_mutex_lock ( & dcloudprintf_mutex )	15:8:324:363	5066015	0	True				
ANR	5066027	CallExpression	pthread_mutex_lock ( & dcloudprintf_mutex )		5066015	0					
ANR	5066028	Callee	pthread_mutex_lock		5066015	0					
ANR	5066029	Identifier	pthread_mutex_lock		5066015	0					
ANR	5066030	ArgumentList	& dcloudprintf_mutex		5066015	1					
ANR	5066031	Argument	& dcloudprintf_mutex		5066015	0					
ANR	5066032	UnaryOperationExpression	& dcloudprintf_mutex		5066015	0					
ANR	5066033	UnaryOperator	&		5066015	0					
ANR	5066034	Identifier	dcloudprintf_mutex		5066015	1					
ANR	5066035	ExpressionStatement	"fprintf ( logfp , ""%s: "" , function )"	16:8:373:405	5066015	1	True				
ANR	5066036	CallExpression	"fprintf ( logfp , ""%s: "" , function )"		5066015	0					
ANR	5066037	Callee	fprintf		5066015	0					
ANR	5066038	Identifier	fprintf		5066015	0					
ANR	5066039	ArgumentList	logfp		5066015	1					
ANR	5066040	Argument	logfp		5066015	0					
ANR	5066041	Identifier	logfp		5066015	0					
ANR	5066042	Argument	"""%s: """		5066015	1					
ANR	5066043	PrimaryExpression	"""%s: """		5066015	0					
ANR	5066044	Argument	function		5066015	2					
ANR	5066045	Identifier	function		5066015	0					
ANR	5066046	ExpressionStatement	"va_start ( va_args , fmt )"	17:8:415:437	5066015	2	True				
ANR	5066047	CallExpression	"va_start ( va_args , fmt )"		5066015	0					
ANR	5066048	Callee	va_start		5066015	0					
ANR	5066049	Identifier	va_start		5066015	0					
ANR	5066050	ArgumentList	va_args		5066015	1					
ANR	5066051	Argument	va_args		5066015	0					
ANR	5066052	Identifier	va_args		5066015	0					
ANR	5066053	Argument	fmt		5066015	1					
ANR	5066054	Identifier	fmt		5066015	0					
ANR	5066055	ExpressionStatement	"vfprintf ( logfp , fmt , va_args )"	18:8:447:476	5066015	3	True				
ANR	5066056	CallExpression	"vfprintf ( logfp , fmt , va_args )"		5066015	0					
ANR	5066057	Callee	vfprintf		5066015	0					
ANR	5066058	Identifier	vfprintf		5066015	0					
ANR	5066059	ArgumentList	logfp		5066015	1					
ANR	5066060	Argument	logfp		5066015	0					
ANR	5066061	Identifier	logfp		5066015	0					
ANR	5066062	Argument	fmt		5066015	1					
ANR	5066063	Identifier	fmt		5066015	0					
ANR	5066064	Argument	va_args		5066015	2					
ANR	5066065	Identifier	va_args		5066015	0					
ANR	5066066	ExpressionStatement	va_end ( va_args )	19:8:486:501	5066015	4	True				
ANR	5066067	CallExpression	va_end ( va_args )		5066015	0					
ANR	5066068	Callee	va_end		5066015	0					
ANR	5066069	Identifier	va_end		5066015	0					
ANR	5066070	ArgumentList	va_args		5066015	1					
ANR	5066071	Argument	va_args		5066015	0					
ANR	5066072	Identifier	va_args		5066015	0					
ANR	5066073	ExpressionStatement	fflush ( logfp )	20:8:511:524	5066015	5	True				
ANR	5066074	CallExpression	fflush ( logfp )		5066015	0					
ANR	5066075	Callee	fflush		5066015	0					
ANR	5066076	Identifier	fflush		5066015	0					
ANR	5066077	ArgumentList	logfp		5066015	1					
ANR	5066078	Argument	logfp		5066015	0					
ANR	5066079	Identifier	logfp		5066015	0					
ANR	5066080	ExpressionStatement	pthread_mutex_unlock ( & dcloudprintf_mutex )	21:8:534:575	5066015	6	True				
ANR	5066081	CallExpression	pthread_mutex_unlock ( & dcloudprintf_mutex )		5066015	0					
ANR	5066082	Callee	pthread_mutex_unlock		5066015	0					
ANR	5066083	Identifier	pthread_mutex_unlock		5066015	0					
ANR	5066084	ArgumentList	& dcloudprintf_mutex		5066015	1					
ANR	5066085	Argument	& dcloudprintf_mutex		5066015	0					
ANR	5066086	UnaryOperationExpression	& dcloudprintf_mutex		5066015	0					
ANR	5066087	UnaryOperator	&		5066015	0					
ANR	5066088	Identifier	dcloudprintf_mutex		5066015	1					
ANR	5066089	ReturnType	void		5066015	1					
ANR	5066090	Identifier	dcloudprintf_internal		5066015	2					
ANR	5066091	ParameterList	"const char * function , const char * fmt"		5066015	3					
ANR	5066092	Parameter	const char * function	10:27:231:250	5066015	0	True				
ANR	5066093	ParameterType	const char *		5066015	0					
ANR	5066094	Identifier	function		5066015	1					
ANR	5066095	Parameter	const char * fmt	10:49:253:267	5066015	1	True				
ANR	5066096	ParameterType	const char *		5066015	0					
ANR	5066097	Identifier	fmt		5066015	1					
ANR	5066098	CFGEntryNode	ENTRY		5066015		True				
ANR	5066099	CFGExitNode	EXIT		5066015		True				
ANR	5066100	Symbol	& dcloudprintf_mutex		5066015						
ANR	5066101	Symbol	function		5066015						
ANR	5066102	Symbol	logfp		5066015						
ANR	5066103	Symbol	fmt		5066015						
ANR	5066104	Symbol	va_args		5066015						
ANR	5066105	Function	Gahp_Args :: Gahp_Args	25:0:586:661							
ANR	5066106	FunctionDef	Gahp_Args :: Gahp_Args ()		5066105	0					
ANR	5066107	CompoundStatement		26:0:609:661	5066105	0					
ANR	5066108	ExpressionStatement	argv = NULL	27:4:615:626	5066105	0	True				
ANR	5066109	AssignmentExpression	argv = NULL		5066105	0		=			
ANR	5066110	Identifier	argv		5066105	0					
ANR	5066111	Identifier	NULL		5066105	1					
ANR	5066112	ExpressionStatement	argc = 0	28:4:632:640	5066105	1	True				
ANR	5066113	AssignmentExpression	argc = 0		5066105	0		=			
ANR	5066114	Identifier	argc		5066105	0					
ANR	5066115	PrimaryExpression	0		5066105	1					
ANR	5066116	ExpressionStatement	argv_size = 0	29:4:646:659	5066105	2	True				
ANR	5066117	AssignmentExpression	argv_size = 0		5066105	0		=			
ANR	5066118	Identifier	argv_size		5066105	0					
ANR	5066119	PrimaryExpression	0		5066105	1					
ANR	5066120	Identifier	Gahp_Args :: Gahp_Args		5066105	1					
ANR	5066121	ParameterList			5066105	2					
ANR	5066122	CFGEntryNode	ENTRY		5066105		True				
ANR	5066123	CFGExitNode	EXIT		5066105		True				
ANR	5066124	Symbol	argc		5066105						
ANR	5066125	Symbol	argv_size		5066105						
ANR	5066126	Symbol	NULL		5066105						
ANR	5066127	Symbol	argv		5066105						
ANR	5066128	Function	Gahp_Args :: ~Gahp_Args	32:0:664:703							
ANR	5066129	FunctionDef	Gahp_Args :: ~Gahp_Args ()		5066128	0					
ANR	5066130	CompoundStatement		33:0:688:703	5066128	0					
ANR	5066131	ExpressionStatement	reset ( )	34:4:694:701	5066128	0	True				
ANR	5066132	CallExpression	reset ( )		5066128	0					
ANR	5066133	Callee	reset		5066128	0					
ANR	5066134	Identifier	reset		5066128	0					
ANR	5066135	ArgumentList			5066128	1					
ANR	5066136	Identifier	Gahp_Args :: ~Gahp_Args		5066128	1					
ANR	5066137	ParameterList			5066128	2					
ANR	5066138	CFGEntryNode	ENTRY		5066128		True				
ANR	5066139	CFGExitNode	EXIT		5066128		True				
ANR	5066140	Function	Gahp_Args :: reset	40:0:843:1073							
ANR	5066141	FunctionDef	Gahp_Args :: reset ()		5066140	0					
ANR	5066142	CompoundStatement		42:0:867:1073	5066140	0					
ANR	5066143	IdentifierDeclStatement	int i ;	43:4:873:878	5066140	0	True				
ANR	5066144	IdentifierDecl	i		5066140	0					
ANR	5066145	IdentifierDeclType	int		5066140	0					
ANR	5066146	Identifier	i		5066140	1					
ANR	5066147	IfStatement	if ( argv == NULL )		5066140	1					
ANR	5066148	Condition	argv == NULL	45:8:889:900	5066140	0	True				
ANR	5066149	EqualityExpression	argv == NULL		5066140	0		==			
ANR	5066150	Identifier	argv		5066140	0					
ANR	5066151	Identifier	NULL		5066140	1					
ANR	5066152	ReturnStatement	return ;	46:8:911:917	5066140	1	True				
ANR	5066153	ForStatement	for ( i = 0 ; i < argc ; i ++ )		5066140	2					
ANR	5066154	ForInit	i = 0 ;	48:9:929:934	5066140	0	True				
ANR	5066155	AssignmentExpression	i = 0		5066140	0		=			
ANR	5066156	Identifier	i		5066140	0					
ANR	5066157	PrimaryExpression	0		5066140	1					
ANR	5066158	Condition	i < argc	48:16:936:943	5066140	1	True				
ANR	5066159	RelationalExpression	i < argc		5066140	0		<			
ANR	5066160	Identifier	i		5066140	0					
ANR	5066161	Identifier	argc		5066140	1					
ANR	5066162	PostIncDecOperationExpression	i ++	48:26:946:948	5066140	2	True				
ANR	5066163	Identifier	i		5066140	0					
ANR	5066164	IncDec	++		5066140	1					
ANR	5066165	CompoundStatement		7:31:83:83	5066140	3					
ANR	5066166	ExpressionStatement	free ( argv [ i ] )	49:8:961:974	5066140	0	True				
ANR	5066167	CallExpression	free ( argv [ i ] )		5066140	0					
ANR	5066168	Callee	free		5066140	0					
ANR	5066169	Identifier	free		5066140	0					
ANR	5066170	ArgumentList	argv [ i ]		5066140	1					
ANR	5066171	Argument	argv [ i ]		5066140	0					
ANR	5066172	ArrayIndexing	argv [ i ]		5066140	0					
ANR	5066173	Identifier	argv		5066140	0					
ANR	5066174	Identifier	i		5066140	1					
ANR	5066175	ExpressionStatement	argv [ i ] = NULL	50:8:984:998	5066140	1	True				
ANR	5066176	AssignmentExpression	argv [ i ] = NULL		5066140	0		=			
ANR	5066177	ArrayIndexing	argv [ i ]		5066140	0					
ANR	5066178	Identifier	argv		5066140	0					
ANR	5066179	Identifier	i		5066140	1					
ANR	5066180	Identifier	NULL		5066140	1					
ANR	5066181	ExpressionStatement	free ( argv )	53:4:1011:1021	5066140	3	True				
ANR	5066182	CallExpression	free ( argv )		5066140	0					
ANR	5066183	Callee	free		5066140	0					
ANR	5066184	Identifier	free		5066140	0					
ANR	5066185	ArgumentList	argv		5066140	1					
ANR	5066186	Argument	argv		5066140	0					
ANR	5066187	Identifier	argv		5066140	0					
ANR	5066188	ExpressionStatement	argv = NULL	54:4:1027:1038	5066140	4	True				
ANR	5066189	AssignmentExpression	argv = NULL		5066140	0		=			
ANR	5066190	Identifier	argv		5066140	0					
ANR	5066191	Identifier	NULL		5066140	1					
ANR	5066192	ExpressionStatement	argv_size = 0	55:4:1044:1057	5066140	5	True				
ANR	5066193	AssignmentExpression	argv_size = 0		5066140	0		=			
ANR	5066194	Identifier	argv_size		5066140	0					
ANR	5066195	PrimaryExpression	0		5066140	1					
ANR	5066196	ExpressionStatement	argc = 0	56:4:1063:1071	5066140	6	True				
ANR	5066197	AssignmentExpression	argc = 0		5066140	0		=			
ANR	5066198	Identifier	argc		5066140	0					
ANR	5066199	PrimaryExpression	0		5066140	1					
ANR	5066200	ReturnType	void		5066140	1					
ANR	5066201	Identifier	Gahp_Args :: reset		5066140	2					
ANR	5066202	ParameterList			5066140	3					
ANR	5066203	CFGEntryNode	ENTRY		5066140		True				
ANR	5066204	CFGExitNode	EXIT		5066140		True				
ANR	5066205	Symbol	argc		5066140						
ANR	5066206	Symbol	argv_size		5066140						
ANR	5066207	Symbol	NULL		5066140						
ANR	5066208	Symbol	* i		5066140						
ANR	5066209	Symbol	i		5066140						
ANR	5066210	Symbol	* argv		5066140						
ANR	5066211	Symbol	argv		5066140						
ANR	5066212	Function	Gahp_Args :: add_arg	64:0:1349:1596							
ANR	5066213	FunctionDef	Gahp_Args :: add_arg (char * new_arg)		5066212	0					
ANR	5066214	CompoundStatement		66:0:1388:1596	5066212	0					
ANR	5066215	IfStatement	if ( new_arg == NULL )		5066212	0					
ANR	5066216	Condition	new_arg == NULL	67:8:1398:1412	5066212	0	True				
ANR	5066217	EqualityExpression	new_arg == NULL		5066212	0		==			
ANR	5066218	Identifier	new_arg		5066212	0					
ANR	5066219	Identifier	NULL		5066212	1					
ANR	5066220	ReturnStatement	return ;	68:8:1423:1429	5066212	1	True				
ANR	5066221	IfStatement	if ( argc >= argv_size )		5066212	1					
ANR	5066222	Condition	argc >= argv_size	69:8:1439:1455	5066212	0	True				
ANR	5066223	RelationalExpression	argc >= argv_size		5066212	0		>=			
ANR	5066224	Identifier	argc		5066212	0					
ANR	5066225	Identifier	argv_size		5066212	1					
ANR	5066226	CompoundStatement		4:27:69:69	5066212	1					
ANR	5066227	ExpressionStatement	argv_size += 60	70:8:1468:1483	5066212	0	True				
ANR	5066228	AssignmentExpression	argv_size += 60		5066212	0		+=			
ANR	5066229	Identifier	argv_size		5066212	0					
ANR	5066230	PrimaryExpression	60		5066212	1					
ANR	5066231	ExpressionStatement	"argv = ( char * * ) realloc ( argv , argv_size * sizeof ( char * ) )"	71:8:1493:1550	5066212	1	True				
ANR	5066232	AssignmentExpression	"argv = ( char * * ) realloc ( argv , argv_size * sizeof ( char * ) )"		5066212	0		=			
ANR	5066233	Identifier	argv		5066212	0					
ANR	5066234	CastExpression	"( char * * ) realloc ( argv , argv_size * sizeof ( char * ) )"		5066212	1					
ANR	5066235	CastTarget	char * *		5066212	0					
ANR	5066236	CallExpression	"realloc ( argv , argv_size * sizeof ( char * ) )"		5066212	1					
ANR	5066237	Callee	realloc		5066212	0					
ANR	5066238	Identifier	realloc		5066212	0					
ANR	5066239	ArgumentList	argv		5066212	1					
ANR	5066240	Argument	argv		5066212	0					
ANR	5066241	Identifier	argv		5066212	0					
ANR	5066242	Argument	argv_size * sizeof ( char * )		5066212	1					
ANR	5066243	MultiplicativeExpression	argv_size * sizeof ( char * )		5066212	0		*			
ANR	5066244	Identifier	argv_size		5066212	0					
ANR	5066245	SizeofExpression	sizeof ( char * )		5066212	1					
ANR	5066246	Sizeof	sizeof		5066212	0					
ANR	5066247	SizeofOperand	char *		5066212	1					
ANR	5066248	ExpressionStatement	argv [ argc ] = new_arg	73:4:1562:1582	5066212	2	True				
ANR	5066249	AssignmentExpression	argv [ argc ] = new_arg		5066212	0		=			
ANR	5066250	ArrayIndexing	argv [ argc ]		5066212	0					
ANR	5066251	Identifier	argv		5066212	0					
ANR	5066252	Identifier	argc		5066212	1					
ANR	5066253	Identifier	new_arg		5066212	1					
ANR	5066254	ExpressionStatement	argc ++	74:4:1588:1594	5066212	3	True				
ANR	5066255	PostIncDecOperationExpression	argc ++		5066212	0					
ANR	5066256	Identifier	argc		5066212	0					
ANR	5066257	IncDec	++		5066212	1					
ANR	5066258	ReturnType	void		5066212	1					
ANR	5066259	Identifier	Gahp_Args :: add_arg		5066212	2					
ANR	5066260	ParameterList	char * new_arg		5066212	3					
ANR	5066261	Parameter	char * new_arg	65:19:1373:1385	5066212	0	True				
ANR	5066262	ParameterType	char *		5066212	0					
ANR	5066263	Identifier	new_arg		5066212	1					
ANR	5066264	CFGEntryNode	ENTRY		5066212		True				
ANR	5066265	CFGExitNode	EXIT		5066212		True				
ANR	5066266	Symbol	argc		5066212						
ANR	5066267	Symbol	argv_size		5066212						
ANR	5066268	Symbol	NULL		5066212						
ANR	5066269	Symbol	new_arg		5066212						
ANR	5066270	Symbol	* argv		5066212						
ANR	5066271	Symbol	realloc		5066212						
ANR	5066272	Symbol	argv		5066212						
ANR	5066273	Symbol	* argc		5066212						
