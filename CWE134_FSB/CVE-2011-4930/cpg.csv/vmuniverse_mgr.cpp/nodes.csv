command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5573121	File	data/converged/CVE-2011-4930_htcondor/vmuniverse_mgr.cpp								
ANR	5573122	DeclStmt									
ANR	5573123	Decl							extern ResMgr	extern ResMgr *	resmgr
ANR	5573124	Function	get_image_size	42:0:1333:1456							
ANR	5573125	FunctionDef	get_image_size (procInfo & pi)		5573124	0					
ANR	5573126	CompoundStatement		43:0:1383:1456	5573124	0					
ANR	5573127	ReturnStatement	return pi . rssize ;	45:1:1405:1421	5573124	0	True				
ANR	5573128	MemberAccess	pi . rssize		5573124	0					
ANR	5573129	Identifier	pi		5573124	0					
ANR	5573130	Identifier	rssize		5573124	1					
ANR	5573131	ReturnType	static unsigned long		5573124	1					
ANR	5573132	Identifier	get_image_size		5573124	2					
ANR	5573133	ParameterList	procInfo & pi		5573124	3					
ANR	5573134	Parameter	procInfo & pi	42:36:1369:1380	5573124	0	True				
ANR	5573135	ParameterType	procInfo &		5573124	0					
ANR	5573136	Identifier	pi		5573124	1					
ANR	5573137	CFGEntryNode	ENTRY		5573124		True				
ANR	5573138	CFGExitNode	EXIT		5573124		True				
ANR	5573139	Symbol	pi . rssize		5573124						
ANR	5573140	Symbol	pi		5573124						
ANR	5573141	Function	VMStarterInfo :: VMStarterInfo	51:0:1459:1664							
ANR	5573142	FunctionDef	VMStarterInfo :: VMStarterInfo ()		5573141	0					
ANR	5573143	CompoundStatement		52:0:1490:1664	5573141	0					
ANR	5573144	ExpressionStatement	m_pid = 0	53:1:1493:1502	5573141	0	True				
ANR	5573145	AssignmentExpression	m_pid = 0		5573141	0		=			
ANR	5573146	Identifier	m_pid		5573141	0					
ANR	5573147	PrimaryExpression	0		5573141	1					
ANR	5573148	ExpressionStatement	m_memory = 0	54:1:1505:1517	5573141	1	True				
ANR	5573149	AssignmentExpression	m_memory = 0		5573141	0		=			
ANR	5573150	Identifier	m_memory		5573141	0					
ANR	5573151	PrimaryExpression	0		5573141	1					
ANR	5573152	ExpressionStatement	m_vcpus = 1	55:1:1520:1531	5573141	2	True				
ANR	5573153	AssignmentExpression	m_vcpus = 1		5573141	0		=			
ANR	5573154	Identifier	m_vcpus		5573141	0					
ANR	5573155	PrimaryExpression	1		5573141	1					
ANR	5573156	ExpressionStatement	m_vm_pid = 0	56:1:1534:1546	5573141	3	True				
ANR	5573157	AssignmentExpression	m_vm_pid = 0		5573141	0		=			
ANR	5573158	Identifier	m_vm_pid		5573141	0					
ANR	5573159	PrimaryExpression	0		5573141	1					
ANR	5573160	ExpressionStatement	"memset ( & m_vm_exited_pinfo , 0 , sizeof ( m_vm_exited_pinfo ) )"	57:1:1549:1605	5573141	4	True				
ANR	5573161	CallExpression	"memset ( & m_vm_exited_pinfo , 0 , sizeof ( m_vm_exited_pinfo ) )"		5573141	0					
ANR	5573162	Callee	memset		5573141	0					
ANR	5573163	Identifier	memset		5573141	0					
ANR	5573164	ArgumentList	& m_vm_exited_pinfo		5573141	1					
ANR	5573165	Argument	& m_vm_exited_pinfo		5573141	0					
ANR	5573166	UnaryOperationExpression	& m_vm_exited_pinfo		5573141	0					
ANR	5573167	UnaryOperator	&		5573141	0					
ANR	5573168	Identifier	m_vm_exited_pinfo		5573141	1					
ANR	5573169	Argument	0		5573141	1					
ANR	5573170	PrimaryExpression	0		5573141	0					
ANR	5573171	Argument	sizeof ( m_vm_exited_pinfo )		5573141	2					
ANR	5573172	SizeofExpression	sizeof ( m_vm_exited_pinfo )		5573141	0					
ANR	5573173	Sizeof	sizeof		5573141	0					
ANR	5573174	SizeofOperand	m_vm_exited_pinfo		5573141	1					
ANR	5573175	ExpressionStatement	"memset ( & m_vm_alive_pinfo , 0 , sizeof ( m_vm_alive_pinfo ) )"	58:1:1608:1662	5573141	5	True				
ANR	5573176	CallExpression	"memset ( & m_vm_alive_pinfo , 0 , sizeof ( m_vm_alive_pinfo ) )"		5573141	0					
ANR	5573177	Callee	memset		5573141	0					
ANR	5573178	Identifier	memset		5573141	0					
ANR	5573179	ArgumentList	& m_vm_alive_pinfo		5573141	1					
ANR	5573180	Argument	& m_vm_alive_pinfo		5573141	0					
ANR	5573181	UnaryOperationExpression	& m_vm_alive_pinfo		5573141	0					
ANR	5573182	UnaryOperator	&		5573141	0					
ANR	5573183	Identifier	m_vm_alive_pinfo		5573141	1					
ANR	5573184	Argument	0		5573141	1					
ANR	5573185	PrimaryExpression	0		5573141	0					
ANR	5573186	Argument	sizeof ( m_vm_alive_pinfo )		5573141	2					
ANR	5573187	SizeofExpression	sizeof ( m_vm_alive_pinfo )		5573141	0					
ANR	5573188	Sizeof	sizeof		5573141	0					
ANR	5573189	SizeofOperand	m_vm_alive_pinfo		5573141	1					
ANR	5573190	Identifier	VMStarterInfo :: VMStarterInfo		5573141	1					
ANR	5573191	ParameterList			5573141	2					
ANR	5573192	CFGEntryNode	ENTRY		5573141		True				
ANR	5573193	CFGExitNode	EXIT		5573141		True				
ANR	5573194	Symbol	m_memory		5573141						
ANR	5573195	Symbol	m_pid		5573141						
ANR	5573196	Symbol	& m_vm_alive_pinfo		5573141						
ANR	5573197	Symbol	m_vm_pid		5573141						
ANR	5573198	Symbol	m_vcpus		5573141						
ANR	5573199	Symbol	& m_vm_exited_pinfo		5573141						
ANR	5573200	Function	VMStarterInfo :: updateUsageOfVM	61:0:1667:2288							
ANR	5573201	FunctionDef	VMStarterInfo :: updateUsageOfVM ()		5573200	0					
ANR	5573202	CompoundStatement		63:0:1709:2288	5573200	0					
ANR	5573203	IfStatement	if ( m_vm_pid == 0 )		5573200	0					
ANR	5573204	Condition	m_vm_pid == 0	64:5:1716:1728	5573200	0	True				
ANR	5573205	EqualityExpression	m_vm_pid == 0		5573200	0		==			
ANR	5573206	Identifier	m_vm_pid		5573200	0					
ANR	5573207	PrimaryExpression	0		5573200	1					
ANR	5573208	CompoundStatement		2:20:21:21	5573200	1					
ANR	5573209	ReturnStatement	return false ;	65:2:1735:1747	5573200	0	True				
ANR	5573210	Identifier	false		5573200	0					
ANR	5573211	IdentifierDeclStatement	int proc_status = PROCAPI_OK ;	68:1:1754:1782	5573200	1	True				
ANR	5573212	IdentifierDecl	proc_status = PROCAPI_OK		5573200	0					
ANR	5573213	IdentifierDeclType	int		5573200	0					
ANR	5573214	Identifier	proc_status		5573200	1					
ANR	5573215	AssignmentExpression	proc_status = PROCAPI_OK		5573200	2		=			
ANR	5573216	Identifier	PROCAPI_OK		5573200	0					
ANR	5573217	Identifier	PROCAPI_OK		5573200	1					
ANR	5573218	IdentifierDeclStatement	piPTR pi = NULL ;	70:1:1786:1801	5573200	2	True				
ANR	5573219	IdentifierDecl	pi = NULL		5573200	0					
ANR	5573220	IdentifierDeclType	piPTR		5573200	0					
ANR	5573221	Identifier	pi		5573200	1					
ANR	5573222	AssignmentExpression	pi = NULL		5573200	2		=			
ANR	5573223	Identifier	NULL		5573200	0					
ANR	5573224	Identifier	NULL		5573200	1					
ANR	5573225	IfStatement	"if ( ProcAPI :: getProcInfo ( m_vm_pid , pi , proc_status ) == PROCAPI_SUCCESS )"		5573200	3					
ANR	5573226	Condition	"ProcAPI :: getProcInfo ( m_vm_pid , pi , proc_status ) == PROCAPI_SUCCESS"	71:5:1808:1877	5573200	0	True				
ANR	5573227	EqualityExpression	"ProcAPI :: getProcInfo ( m_vm_pid , pi , proc_status ) == PROCAPI_SUCCESS"		5573200	0		==			
ANR	5573228	CallExpression	"ProcAPI :: getProcInfo ( m_vm_pid , pi , proc_status )"		5573200	0					
ANR	5573229	Callee	ProcAPI :: getProcInfo		5573200	0					
ANR	5573230	Identifier	ProcAPI :: getProcInfo		5573200	0					
ANR	5573231	ArgumentList	m_vm_pid		5573200	1					
ANR	5573232	Argument	m_vm_pid		5573200	0					
ANR	5573233	Identifier	m_vm_pid		5573200	0					
ANR	5573234	Argument	pi		5573200	1					
ANR	5573235	Identifier	pi		5573200	0					
ANR	5573236	Argument	proc_status		5573200	2					
ANR	5573237	Identifier	proc_status		5573200	0					
ANR	5573238	Identifier	PROCAPI_SUCCESS		5573200	1					
ANR	5573239	CompoundStatement		10:21:171:171	5573200	1					
ANR	5573240	ExpressionStatement	"memcpy ( & m_vm_alive_pinfo , pi , sizeof ( struct procInfo ) )"	73:2:1885:1939	5573200	0	True				
ANR	5573241	CallExpression	"memcpy ( & m_vm_alive_pinfo , pi , sizeof ( struct procInfo ) )"		5573200	0					
ANR	5573242	Callee	memcpy		5573200	0					
ANR	5573243	Identifier	memcpy		5573200	0					
ANR	5573244	ArgumentList	& m_vm_alive_pinfo		5573200	1					
ANR	5573245	Argument	& m_vm_alive_pinfo		5573200	0					
ANR	5573246	UnaryOperationExpression	& m_vm_alive_pinfo		5573200	0					
ANR	5573247	UnaryOperator	&		5573200	0					
ANR	5573248	Identifier	m_vm_alive_pinfo		5573200	1					
ANR	5573249	Argument	pi		5573200	1					
ANR	5573250	Identifier	pi		5573200	0					
ANR	5573251	Argument	sizeof ( struct procInfo )		5573200	2					
ANR	5573252	SizeofExpression	sizeof ( struct procInfo )		5573200	0					
ANR	5573253	Sizeof	sizeof		5573200	0					
ANR	5573254	SizeofOperand	struct procInfo		5573200	1					
ANR	5573255	IfStatement	if ( ( DebugFlags & D_FULLDEBUG ) && ( DebugFlags & D_LOAD ) )		5573200	1					
ANR	5573256	Condition	( DebugFlags & D_FULLDEBUG ) && ( DebugFlags & D_LOAD )	74:6:1947:1997	5573200	0	True				
ANR	5573257	AndExpression	( DebugFlags & D_FULLDEBUG ) && ( DebugFlags & D_LOAD )		5573200	0		&&			
ANR	5573258	BitAndExpression	DebugFlags & D_FULLDEBUG		5573200	0		&			
ANR	5573259	Identifier	DebugFlags		5573200	0					
ANR	5573260	Identifier	D_FULLDEBUG		5573200	1					
ANR	5573261	BitAndExpression	DebugFlags & D_LOAD		5573200	1		&			
ANR	5573262	Identifier	DebugFlags		5573200	0					
ANR	5573263	Identifier	D_LOAD		5573200	1					
ANR	5573264	CompoundStatement		12:60:291:291	5573200	1					
ANR	5573265	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Usage of process[%d] for a VM is updated\\n"" , m_vm_pid )"	75:3:2006:2087	5573200	0	True				
ANR	5573266	CallExpression	"dprintf ( D_FULLDEBUG , ""Usage of process[%d] for a VM is updated\\n"" , m_vm_pid )"		5573200	0					
ANR	5573267	Callee	dprintf		5573200	0					
ANR	5573268	Identifier	dprintf		5573200	0					
ANR	5573269	ArgumentList	D_FULLDEBUG		5573200	1					
ANR	5573270	Argument	D_FULLDEBUG		5573200	0					
ANR	5573271	Identifier	D_FULLDEBUG		5573200	0					
ANR	5573272	Argument	"""Usage of process[%d] for a VM is updated\\n"""		5573200	1					
ANR	5573273	PrimaryExpression	"""Usage of process[%d] for a VM is updated\\n"""		5573200	0					
ANR	5573274	Argument	m_vm_pid		5573200	2					
ANR	5573275	Identifier	m_vm_pid		5573200	0					
ANR	5573276	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""sys_time=%lu, user_time=%lu, image_size=%lu\\n"" , pi -> sys_time , pi -> user_time , get_image_size ( * pi ) )"	77:3:2092:2216	5573200	1	True				
ANR	5573277	CallExpression	"dprintf ( D_FULLDEBUG , ""sys_time=%lu, user_time=%lu, image_size=%lu\\n"" , pi -> sys_time , pi -> user_time , get_image_size ( * pi ) )"		5573200	0					
ANR	5573278	Callee	dprintf		5573200	0					
ANR	5573279	Identifier	dprintf		5573200	0					
ANR	5573280	ArgumentList	D_FULLDEBUG		5573200	1					
ANR	5573281	Argument	D_FULLDEBUG		5573200	0					
ANR	5573282	Identifier	D_FULLDEBUG		5573200	0					
ANR	5573283	Argument	"""sys_time=%lu, user_time=%lu, image_size=%lu\\n"""		5573200	1					
ANR	5573284	PrimaryExpression	"""sys_time=%lu, user_time=%lu, image_size=%lu\\n"""		5573200	0					
ANR	5573285	Argument	pi -> sys_time		5573200	2					
ANR	5573286	PtrMemberAccess	pi -> sys_time		5573200	0					
ANR	5573287	Identifier	pi		5573200	0					
ANR	5573288	Identifier	sys_time		5573200	1					
ANR	5573289	Argument	pi -> user_time		5573200	3					
ANR	5573290	PtrMemberAccess	pi -> user_time		5573200	0					
ANR	5573291	Identifier	pi		5573200	0					
ANR	5573292	Identifier	user_time		5573200	1					
ANR	5573293	Argument	get_image_size ( * pi )		5573200	4					
ANR	5573294	CallExpression	get_image_size ( * pi )		5573200	0					
ANR	5573295	Callee	get_image_size		5573200	0					
ANR	5573296	Identifier	get_image_size		5573200	0					
ANR	5573297	ArgumentList	* pi		5573200	1					
ANR	5573298	Argument	* pi		5573200	0					
ANR	5573299	UnaryOperationExpression	* pi		5573200	0					
ANR	5573300	UnaryOperator	*		5573200	0					
ANR	5573301	Identifier	pi		5573200	1					
ANR	5573302	Statement	delete	80:2:2224:2229	5573200	2	True				
ANR	5573303	ExpressionStatement	pi	80:9:2231:2233	5573200	3	True				
ANR	5573304	Identifier	pi		5573200	0					
ANR	5573305	ReturnStatement	return true ;	81:2:2237:2248	5573200	4	True				
ANR	5573306	Identifier	true		5573200	0					
ANR	5573307	IfStatement	if ( pi )		5573200	4					
ANR	5573308	Condition	pi	83:5:2258:2259	5573200	0	True				
ANR	5573309	Identifier	pi		5573200	0					
ANR	5573310	Statement	delete	83:9:2262:2267	5573200	1	True				
ANR	5573311	ExpressionStatement	pi	83:16:2269:2271	5573200	5	True				
ANR	5573312	Identifier	pi		5573200	0					
ANR	5573313	ReturnStatement	return false ;	84:1:2274:2286	5573200	6	True				
ANR	5573314	Identifier	false		5573200	0					
ANR	5573315	ReturnType	bool		5573200	1					
ANR	5573316	Identifier	VMStarterInfo :: updateUsageOfVM		5573200	2					
ANR	5573317	ParameterList			5573200	3					
ANR	5573318	CFGEntryNode	ENTRY		5573200		True				
ANR	5573319	CFGExitNode	EXIT		5573200		True				
ANR	5573320	Symbol	NULL		5573200						
ANR	5573321	Symbol	PROCAPI_OK		5573200						
ANR	5573322	Symbol	get_image_size		5573200						
ANR	5573323	Symbol	pi -> user_time		5573200						
ANR	5573324	Symbol	false		5573200						
ANR	5573325	Symbol	PROCAPI_SUCCESS		5573200						
ANR	5573326	Symbol	D_LOAD		5573200						
ANR	5573327	Symbol	DebugFlags		5573200						
ANR	5573328	Symbol	D_FULLDEBUG		5573200						
ANR	5573329	Symbol	pi -> sys_time		5573200						
ANR	5573330	Symbol	m_vm_pid		5573200						
ANR	5573331	Symbol	ProcAPI :: getProcInfo		5573200						
ANR	5573332	Symbol	true		5573200						
ANR	5573333	Symbol	pi		5573200						
ANR	5573334	Symbol	& m_vm_alive_pinfo		5573200						
ANR	5573335	Symbol	proc_status		5573200						
ANR	5573336	Symbol	* pi		5573200						
ANR	5573337	Function	VMStarterInfo :: getUsageOfVM	87:0:2291:3591							
ANR	5573338	FunctionDef	VMStarterInfo :: getUsageOfVM (ProcFamilyUsage & usage)		5573337	0					
ANR	5573339	CompoundStatement		89:0:2348:3591	5573337	0					
ANR	5573340	IdentifierDeclStatement	bool updated = updateUsageOfVM ( ) ;	90:1:2351:2383	5573337	0	True				
ANR	5573341	IdentifierDecl	updated = updateUsageOfVM ( )		5573337	0					
ANR	5573342	IdentifierDeclType	bool		5573337	0					
ANR	5573343	Identifier	updated		5573337	1					
ANR	5573344	AssignmentExpression	updated = updateUsageOfVM ( )		5573337	2		=			
ANR	5573345	Identifier	updated		5573337	0					
ANR	5573346	CallExpression	updateUsageOfVM ( )		5573337	1					
ANR	5573347	Callee	updateUsageOfVM		5573337	0					
ANR	5573348	Identifier	updateUsageOfVM		5573337	0					
ANR	5573349	ArgumentList			5573337	1					
ANR	5573350	ExpressionStatement	usage . user_cpu_time = m_vm_exited_pinfo . user_time + m_vm_alive_pinfo . user_time	92:1:2387:2465	5573337	1	True				
ANR	5573351	AssignmentExpression	usage . user_cpu_time = m_vm_exited_pinfo . user_time + m_vm_alive_pinfo . user_time		5573337	0		=			
ANR	5573352	MemberAccess	usage . user_cpu_time		5573337	0					
ANR	5573353	Identifier	usage		5573337	0					
ANR	5573354	Identifier	user_cpu_time		5573337	1					
ANR	5573355	AdditiveExpression	m_vm_exited_pinfo . user_time + m_vm_alive_pinfo . user_time		5573337	1		+			
ANR	5573356	MemberAccess	m_vm_exited_pinfo . user_time		5573337	0					
ANR	5573357	Identifier	m_vm_exited_pinfo		5573337	0					
ANR	5573358	Identifier	user_time		5573337	1					
ANR	5573359	MemberAccess	m_vm_alive_pinfo . user_time		5573337	1					
ANR	5573360	Identifier	m_vm_alive_pinfo		5573337	0					
ANR	5573361	Identifier	user_time		5573337	1					
ANR	5573362	ExpressionStatement	usage . sys_cpu_time = m_vm_exited_pinfo . sys_time + m_vm_alive_pinfo . sys_time	93:1:2468:2543	5573337	2	True				
ANR	5573363	AssignmentExpression	usage . sys_cpu_time = m_vm_exited_pinfo . sys_time + m_vm_alive_pinfo . sys_time		5573337	0		=			
ANR	5573364	MemberAccess	usage . sys_cpu_time		5573337	0					
ANR	5573365	Identifier	usage		5573337	0					
ANR	5573366	Identifier	sys_cpu_time		5573337	1					
ANR	5573367	AdditiveExpression	m_vm_exited_pinfo . sys_time + m_vm_alive_pinfo . sys_time		5573337	1		+			
ANR	5573368	MemberAccess	m_vm_exited_pinfo . sys_time		5573337	0					
ANR	5573369	Identifier	m_vm_exited_pinfo		5573337	0					
ANR	5573370	Identifier	sys_time		5573337	1					
ANR	5573371	MemberAccess	m_vm_alive_pinfo . sys_time		5573337	1					
ANR	5573372	Identifier	m_vm_alive_pinfo		5573337	0					
ANR	5573373	Identifier	sys_time		5573337	1					
ANR	5573374	IfStatement	if ( updated )		5573337	3					
ANR	5573375	Condition	updated	95:5:2551:2557	5573337	0	True				
ANR	5573376	Identifier	updated		5573337	0					
ANR	5573377	CompoundStatement		7:15:212:212	5573337	1					
ANR	5573378	ExpressionStatement	usage . percent_cpu = m_vm_alive_pinfo . cpuusage	96:2:2565:2610	5573337	0	True				
ANR	5573379	AssignmentExpression	usage . percent_cpu = m_vm_alive_pinfo . cpuusage		5573337	0		=			
ANR	5573380	MemberAccess	usage . percent_cpu		5573337	0					
ANR	5573381	Identifier	usage		5573337	0					
ANR	5573382	Identifier	percent_cpu		5573337	1					
ANR	5573383	MemberAccess	m_vm_alive_pinfo . cpuusage		5573337	1					
ANR	5573384	Identifier	m_vm_alive_pinfo		5573337	0					
ANR	5573385	Identifier	cpuusage		5573337	1					
ANR	5573386	ElseStatement	else		5573337	0					
ANR	5573387	ExpressionStatement	usage . percent_cpu = 0	98:2:2621:2642	5573337	0	True				
ANR	5573388	AssignmentExpression	usage . percent_cpu = 0		5573337	0		=			
ANR	5573389	MemberAccess	usage . percent_cpu		5573337	0					
ANR	5573390	Identifier	usage		5573337	0					
ANR	5573391	Identifier	percent_cpu		5573337	1					
ANR	5573392	PrimaryExpression	0		5573337	1					
ANR	5573393	IdentifierDeclStatement	unsigned long exited_max_image = get_image_size ( m_vm_exited_pinfo ) ;	100:1:2646:2712	5573337	4	True				
ANR	5573394	IdentifierDecl	exited_max_image = get_image_size ( m_vm_exited_pinfo )		5573337	0					
ANR	5573395	IdentifierDeclType	unsigned long		5573337	0					
ANR	5573396	Identifier	exited_max_image		5573337	1					
ANR	5573397	AssignmentExpression	exited_max_image = get_image_size ( m_vm_exited_pinfo )		5573337	2		=			
ANR	5573398	Identifier	exited_max_image		5573337	0					
ANR	5573399	CallExpression	get_image_size ( m_vm_exited_pinfo )		5573337	1					
ANR	5573400	Callee	get_image_size		5573337	0					
ANR	5573401	Identifier	get_image_size		5573337	0					
ANR	5573402	ArgumentList	m_vm_exited_pinfo		5573337	1					
ANR	5573403	Argument	m_vm_exited_pinfo		5573337	0					
ANR	5573404	Identifier	m_vm_exited_pinfo		5573337	0					
ANR	5573405	IdentifierDeclStatement	unsigned long alive_max_image = get_image_size ( m_vm_alive_pinfo ) ;	101:1:2715:2779	5573337	5	True				
ANR	5573406	IdentifierDecl	alive_max_image = get_image_size ( m_vm_alive_pinfo )		5573337	0					
ANR	5573407	IdentifierDeclType	unsigned long		5573337	0					
ANR	5573408	Identifier	alive_max_image		5573337	1					
ANR	5573409	AssignmentExpression	alive_max_image = get_image_size ( m_vm_alive_pinfo )		5573337	2		=			
ANR	5573410	Identifier	alive_max_image		5573337	0					
ANR	5573411	CallExpression	get_image_size ( m_vm_alive_pinfo )		5573337	1					
ANR	5573412	Callee	get_image_size		5573337	0					
ANR	5573413	Identifier	get_image_size		5573337	0					
ANR	5573414	ArgumentList	m_vm_alive_pinfo		5573337	1					
ANR	5573415	Argument	m_vm_alive_pinfo		5573337	0					
ANR	5573416	Identifier	m_vm_alive_pinfo		5573337	0					
ANR	5573417	ExpressionStatement	usage . max_image_size = ( exited_max_image > alive_max_image ) ? exited_max_image : alive_max_image	103:1:2783:2885	5573337	6	True				
ANR	5573418	AssignmentExpression	usage . max_image_size = ( exited_max_image > alive_max_image ) ? exited_max_image : alive_max_image		5573337	0		=			
ANR	5573419	MemberAccess	usage . max_image_size		5573337	0					
ANR	5573420	Identifier	usage		5573337	0					
ANR	5573421	Identifier	max_image_size		5573337	1					
ANR	5573422	ConditionalExpression	( exited_max_image > alive_max_image ) ? exited_max_image : alive_max_image		5573337	1					
ANR	5573423	Condition	exited_max_image > alive_max_image		5573337	0					
ANR	5573424	RelationalExpression	exited_max_image > alive_max_image		5573337	0		>			
ANR	5573425	Identifier	exited_max_image		5573337	0					
ANR	5573426	Identifier	alive_max_image		5573337	1					
ANR	5573427	Identifier	exited_max_image		5573337	1					
ANR	5573428	Identifier	alive_max_image		5573337	2					
ANR	5573429	IfStatement	if ( updated )		5573337	7					
ANR	5573430	Condition	updated	106:5:2893:2899	5573337	0	True				
ANR	5573431	Identifier	updated		5573337	0					
ANR	5573432	CompoundStatement		18:15:554:554	5573337	1					
ANR	5573433	ExpressionStatement	usage . total_image_size = m_vm_alive_pinfo . imgsize	107:2:2907:2956	5573337	0	True				
ANR	5573434	AssignmentExpression	usage . total_image_size = m_vm_alive_pinfo . imgsize		5573337	0		=			
ANR	5573435	MemberAccess	usage . total_image_size		5573337	0					
ANR	5573436	Identifier	usage		5573337	0					
ANR	5573437	Identifier	total_image_size		5573337	1					
ANR	5573438	MemberAccess	m_vm_alive_pinfo . imgsize		5573337	1					
ANR	5573439	Identifier	m_vm_alive_pinfo		5573337	0					
ANR	5573440	Identifier	imgsize		5573337	1					
ANR	5573441	ExpressionStatement	usage . total_resident_set_size = m_vm_alive_pinfo . rssize	108:2:2960:3015	5573337	1	True				
ANR	5573442	AssignmentExpression	usage . total_resident_set_size = m_vm_alive_pinfo . rssize		5573337	0		=			
ANR	5573443	MemberAccess	usage . total_resident_set_size		5573337	0					
ANR	5573444	Identifier	usage		5573337	0					
ANR	5573445	Identifier	total_resident_set_size		5573337	1					
ANR	5573446	MemberAccess	m_vm_alive_pinfo . rssize		5573337	1					
ANR	5573447	Identifier	m_vm_alive_pinfo		5573337	0					
ANR	5573448	Identifier	rssize		5573337	1					
ANR	5573449	ExpressionStatement	usage . total_proportional_set_size = m_vm_alive_pinfo . pssize	110:2:3032:3091	5573337	2	True				
ANR	5573450	AssignmentExpression	usage . total_proportional_set_size = m_vm_alive_pinfo . pssize		5573337	0		=			
ANR	5573451	MemberAccess	usage . total_proportional_set_size		5573337	0					
ANR	5573452	Identifier	usage		5573337	0					
ANR	5573453	Identifier	total_proportional_set_size		5573337	1					
ANR	5573454	MemberAccess	m_vm_alive_pinfo . pssize		5573337	1					
ANR	5573455	Identifier	m_vm_alive_pinfo		5573337	0					
ANR	5573456	Identifier	pssize		5573337	1					
ANR	5573457	ExpressionStatement	usage . total_proportional_set_size = m_vm_alive_pinfo . pssize_available	111:2:3095:3164	5573337	3	True				
ANR	5573458	AssignmentExpression	usage . total_proportional_set_size = m_vm_alive_pinfo . pssize_available		5573337	0		=			
ANR	5573459	MemberAccess	usage . total_proportional_set_size		5573337	0					
ANR	5573460	Identifier	usage		5573337	0					
ANR	5573461	Identifier	total_proportional_set_size		5573337	1					
ANR	5573462	MemberAccess	m_vm_alive_pinfo . pssize_available		5573337	1					
ANR	5573463	Identifier	m_vm_alive_pinfo		5573337	0					
ANR	5573464	Identifier	pssize_available		5573337	1					
ANR	5573465	ElseStatement	else		5573337	0					
ANR	5573466	CompoundStatement		25:7:831:831	5573337	0					
ANR	5573467	ExpressionStatement	usage . total_image_size = 0	114:2:3184:3210	5573337	0	True				
ANR	5573468	AssignmentExpression	usage . total_image_size = 0		5573337	0		=			
ANR	5573469	MemberAccess	usage . total_image_size		5573337	0					
ANR	5573470	Identifier	usage		5573337	0					
ANR	5573471	Identifier	total_image_size		5573337	1					
ANR	5573472	PrimaryExpression	0		5573337	1					
ANR	5573473	ExpressionStatement	usage . total_resident_set_size = 0	115:8:3220:3253	5573337	1	True				
ANR	5573474	AssignmentExpression	usage . total_resident_set_size = 0		5573337	0		=			
ANR	5573475	MemberAccess	usage . total_resident_set_size		5573337	0					
ANR	5573476	Identifier	usage		5573337	0					
ANR	5573477	Identifier	total_resident_set_size		5573337	1					
ANR	5573478	PrimaryExpression	0		5573337	1					
ANR	5573479	ExpressionStatement	usage . total_proportional_set_size = 0	117:2:3270:3307	5573337	2	True				
ANR	5573480	AssignmentExpression	usage . total_proportional_set_size = 0		5573337	0		=			
ANR	5573481	MemberAccess	usage . total_proportional_set_size		5573337	0					
ANR	5573482	Identifier	usage		5573337	0					
ANR	5573483	Identifier	total_proportional_set_size		5573337	1					
ANR	5573484	PrimaryExpression	0		5573337	1					
ANR	5573485	ExpressionStatement	usage . total_proportional_set_size = false	118:2:3311:3352	5573337	3	True				
ANR	5573486	AssignmentExpression	usage . total_proportional_set_size = false		5573337	0		=			
ANR	5573487	MemberAccess	usage . total_proportional_set_size		5573337	0					
ANR	5573488	Identifier	usage		5573337	0					
ANR	5573489	Identifier	total_proportional_set_size		5573337	1					
ANR	5573490	Identifier	false		5573337	1					
ANR	5573491	IfStatement	if ( ( DebugFlags & D_FULLDEBUG ) && ( DebugFlags & D_LOAD ) )		5573337	8					
ANR	5573492	Condition	( DebugFlags & D_FULLDEBUG ) && ( DebugFlags & D_LOAD )	122:5:3370:3420	5573337	0	True				
ANR	5573493	AndExpression	( DebugFlags & D_FULLDEBUG ) && ( DebugFlags & D_LOAD )		5573337	0		&&			
ANR	5573494	BitAndExpression	DebugFlags & D_FULLDEBUG		5573337	0		&			
ANR	5573495	Identifier	DebugFlags		5573337	0					
ANR	5573496	Identifier	D_FULLDEBUG		5573337	1					
ANR	5573497	BitAndExpression	DebugFlags & D_LOAD		5573337	1		&			
ANR	5573498	Identifier	DebugFlags		5573337	0					
ANR	5573499	Identifier	D_LOAD		5573337	1					
ANR	5573500	CompoundStatement		34:59:1075:1075	5573337	1					
ANR	5573501	Statement	dprintf	123:2:3428:3434	5573337	0	True				
ANR	5573502	Statement	(	123:9:3435:3435	5573337	1	True				
ANR	5573503	Statement	D_FULLDEBUG	123:11:3437:3447	5573337	2	True				
ANR	5573504	Statement	","	123:22:3448:3448	5573337	3	True				
ANR	5573505	Statement	"""VMStarterInfo::getUsageOfVM(): Percent CPU usage """	124:4:3454:3504	5573337	4	True				
ANR	5573506	Statement	"""for VM process with pid %u is: %f\\n"""	125:4:3510:3546	5573337	5	True				
ANR	5573507	Statement	","	125:41:3547:3547	5573337	6	True				
ANR	5573508	Statement	m_vm_pid	126:4:3553:3560	5573337	7	True				
ANR	5573509	Statement	","	126:12:3561:3561	5573337	8	True				
ANR	5573510	Statement	usage	127:4:3567:3571	5573337	9	True				
ANR	5573511	Statement	.	127:9:3572:3572	5573337	10	True				
ANR	5573512	Statement	percent_cpu	127:10:3573:3583	5573337	11	True				
ANR	5573513	Statement	)	127:22:3585:3585	5573337	12	True				
ANR	5573514	ExpressionStatement		127:23:3586:3586	5573337	13	True				
ANR	5573515	ReturnType	void		5573337	1					
ANR	5573516	Identifier	VMStarterInfo :: getUsageOfVM		5573337	2					
ANR	5573517	ParameterList	ProcFamilyUsage & usage		5573337	3					
ANR	5573518	Parameter	ProcFamilyUsage & usage	88:28:2324:2345	5573337	0	True				
ANR	5573519	ParameterType	ProcFamilyUsage &		5573337	0					
ANR	5573520	Identifier	usage		5573337	1					
ANR	5573521	CFGEntryNode	ENTRY		5573337		True				
ANR	5573522	CFGExitNode	EXIT		5573337		True				
ANR	5573523	Symbol	usage . sys_cpu_time		5573337						
ANR	5573524	Symbol	usage		5573337						
ANR	5573525	Symbol	alive_max_image		5573337						
ANR	5573526	Symbol	m_vm_exited_pinfo . user_time		5573337						
ANR	5573527	Symbol	m_vm_alive_pinfo . sys_time		5573337						
ANR	5573528	Symbol	usage . percent_cpu		5573337						
ANR	5573529	Symbol	usage . total_proportional_set_size		5573337						
ANR	5573530	Symbol	exited_max_image		5573337						
ANR	5573531	Symbol	m_vm_exited_pinfo		5573337						
ANR	5573532	Symbol	usage . total_resident_set_size		5573337						
ANR	5573533	Symbol	get_image_size		5573337						
ANR	5573534	Symbol	m_vm_alive_pinfo . cpuusage		5573337						
ANR	5573535	Symbol	usage . max_image_size		5573337						
ANR	5573536	Symbol	false		5573337						
ANR	5573537	Symbol	D_LOAD		5573337						
ANR	5573538	Symbol	m_vm_alive_pinfo . pssize		5573337						
ANR	5573539	Symbol	D_FULLDEBUG		5573337						
ANR	5573540	Symbol	DebugFlags		5573337						
ANR	5573541	Symbol	usage . user_cpu_time		5573337						
ANR	5573542	Symbol	usage . total_image_size		5573337						
ANR	5573543	Symbol	m_vm_alive_pinfo . rssize		5573337						
ANR	5573544	Symbol	m_vm_alive_pinfo		5573337						
ANR	5573545	Symbol	m_vm_exited_pinfo . sys_time		5573337						
ANR	5573546	Symbol	m_vm_alive_pinfo . imgsize		5573337						
ANR	5573547	Symbol	updateUsageOfVM		5573337						
ANR	5573548	Symbol	m_vm_alive_pinfo . user_time		5573337						
ANR	5573549	Symbol	m_vm_alive_pinfo . pssize_available		5573337						
ANR	5573550	Symbol	updated		5573337						
ANR	5573551	Function	VMStarterInfo :: addProcessForVM	131:0:3594:4491							
ANR	5573552	FunctionDef	VMStarterInfo :: addProcessForVM (pid_t vm_pid)		5573551	0					
ANR	5573553	CompoundStatement		133:0:3644:4491	5573551	0					
ANR	5573554	IfStatement	if ( vm_pid < 0 )		5573551	0					
ANR	5573555	Condition	vm_pid < 0	134:5:3651:3660	5573551	0	True				
ANR	5573556	RelationalExpression	vm_pid < 0		5573551	0		<			
ANR	5573557	Identifier	vm_pid		5573551	0					
ANR	5573558	PrimaryExpression	0		5573551	1					
ANR	5573559	CompoundStatement		2:18:19:19	5573551	1					
ANR	5573560	ReturnStatement	return ;	135:2:3668:3674	5573551	0	True				
ANR	5573561	IfStatement	if ( vm_pid == m_vm_pid )		5573551	1					
ANR	5573562	Condition	vm_pid == m_vm_pid	138:5:3685:3702	5573551	0	True				
ANR	5573563	EqualityExpression	vm_pid == m_vm_pid		5573551	0		==			
ANR	5573564	Identifier	vm_pid		5573551	0					
ANR	5573565	Identifier	m_vm_pid		5573551	1					
ANR	5573566	CompoundStatement		6:26:61:61	5573551	1					
ANR	5573567	ReturnStatement	return ;	140:2:3737:3743	5573551	0	True				
ANR	5573568	ExpressionStatement	m_vm_exited_pinfo . sys_time += m_vm_alive_pinfo . sys_time	144:1:3793:3848	5573551	2	True				
ANR	5573569	AssignmentExpression	m_vm_exited_pinfo . sys_time += m_vm_alive_pinfo . sys_time		5573551	0		+=			
ANR	5573570	MemberAccess	m_vm_exited_pinfo . sys_time		5573551	0					
ANR	5573571	Identifier	m_vm_exited_pinfo		5573551	0					
ANR	5573572	Identifier	sys_time		5573551	1					
ANR	5573573	MemberAccess	m_vm_alive_pinfo . sys_time		5573551	1					
ANR	5573574	Identifier	m_vm_alive_pinfo		5573551	0					
ANR	5573575	Identifier	sys_time		5573551	1					
ANR	5573576	ExpressionStatement	m_vm_exited_pinfo . user_time += m_vm_alive_pinfo . user_time	145:1:3851:3908	5573551	3	True				
ANR	5573577	AssignmentExpression	m_vm_exited_pinfo . user_time += m_vm_alive_pinfo . user_time		5573551	0		+=			
ANR	5573578	MemberAccess	m_vm_exited_pinfo . user_time		5573551	0					
ANR	5573579	Identifier	m_vm_exited_pinfo		5573551	0					
ANR	5573580	Identifier	user_time		5573551	1					
ANR	5573581	MemberAccess	m_vm_alive_pinfo . user_time		5573551	1					
ANR	5573582	Identifier	m_vm_alive_pinfo		5573551	0					
ANR	5573583	Identifier	user_time		5573551	1					
ANR	5573584	IfStatement	if ( m_vm_alive_pinfo . rssize > m_vm_exited_pinfo . rssize )		5573551	4					
ANR	5573585	Condition	m_vm_alive_pinfo . rssize > m_vm_exited_pinfo . rssize	146:5:3915:3964	5573551	0	True				
ANR	5573586	RelationalExpression	m_vm_alive_pinfo . rssize > m_vm_exited_pinfo . rssize		5573551	0		>			
ANR	5573587	MemberAccess	m_vm_alive_pinfo . rssize		5573551	0					
ANR	5573588	Identifier	m_vm_alive_pinfo		5573551	0					
ANR	5573589	Identifier	rssize		5573551	1					
ANR	5573590	MemberAccess	m_vm_exited_pinfo . rssize		5573551	1					
ANR	5573591	Identifier	m_vm_exited_pinfo		5573551	0					
ANR	5573592	Identifier	rssize		5573551	1					
ANR	5573593	CompoundStatement		14:58:323:323	5573551	1					
ANR	5573594	ExpressionStatement	m_vm_exited_pinfo . rssize = m_vm_alive_pinfo . rssize	147:2:3972:4022	5573551	0	True				
ANR	5573595	AssignmentExpression	m_vm_exited_pinfo . rssize = m_vm_alive_pinfo . rssize		5573551	0		=			
ANR	5573596	MemberAccess	m_vm_exited_pinfo . rssize		5573551	0					
ANR	5573597	Identifier	m_vm_exited_pinfo		5573551	0					
ANR	5573598	Identifier	rssize		5573551	1					
ANR	5573599	MemberAccess	m_vm_alive_pinfo . rssize		5573551	1					
ANR	5573600	Identifier	m_vm_alive_pinfo		5573551	0					
ANR	5573601	Identifier	rssize		5573551	1					
ANR	5573602	IfStatement	if ( m_vm_alive_pinfo . imgsize > m_vm_exited_pinfo . imgsize )		5573551	5					
ANR	5573603	Condition	m_vm_alive_pinfo . imgsize > m_vm_exited_pinfo . imgsize	149:5:4032:4083	5573551	0	True				
ANR	5573604	RelationalExpression	m_vm_alive_pinfo . imgsize > m_vm_exited_pinfo . imgsize		5573551	0		>			
ANR	5573605	MemberAccess	m_vm_alive_pinfo . imgsize		5573551	0					
ANR	5573606	Identifier	m_vm_alive_pinfo		5573551	0					
ANR	5573607	Identifier	imgsize		5573551	1					
ANR	5573608	MemberAccess	m_vm_exited_pinfo . imgsize		5573551	1					
ANR	5573609	Identifier	m_vm_exited_pinfo		5573551	0					
ANR	5573610	Identifier	imgsize		5573551	1					
ANR	5573611	CompoundStatement		17:60:442:442	5573551	1					
ANR	5573612	ExpressionStatement	m_vm_exited_pinfo . imgsize = m_vm_alive_pinfo . imgsize	150:2:4091:4143	5573551	0	True				
ANR	5573613	AssignmentExpression	m_vm_exited_pinfo . imgsize = m_vm_alive_pinfo . imgsize		5573551	0		=			
ANR	5573614	MemberAccess	m_vm_exited_pinfo . imgsize		5573551	0					
ANR	5573615	Identifier	m_vm_exited_pinfo		5573551	0					
ANR	5573616	Identifier	imgsize		5573551	1					
ANR	5573617	MemberAccess	m_vm_alive_pinfo . imgsize		5573551	1					
ANR	5573618	Identifier	m_vm_alive_pinfo		5573551	0					
ANR	5573619	Identifier	imgsize		5573551	1					
ANR	5573620	IfStatement	if ( m_vm_alive_pinfo . pssize_available && m_vm_alive_pinfo . pssize > m_vm_exited_pinfo . pssize )		5573551	6					
ANR	5573621	Condition	m_vm_alive_pinfo . pssize_available && m_vm_alive_pinfo . pssize > m_vm_exited_pinfo . pssize	153:5:4166:4252	5573551	0	True				
ANR	5573622	AndExpression	m_vm_alive_pinfo . pssize_available && m_vm_alive_pinfo . pssize > m_vm_exited_pinfo . pssize		5573551	0		&&			
ANR	5573623	MemberAccess	m_vm_alive_pinfo . pssize_available		5573551	0					
ANR	5573624	Identifier	m_vm_alive_pinfo		5573551	0					
ANR	5573625	Identifier	pssize_available		5573551	1					
ANR	5573626	RelationalExpression	m_vm_alive_pinfo . pssize > m_vm_exited_pinfo . pssize		5573551	1		>			
ANR	5573627	MemberAccess	m_vm_alive_pinfo . pssize		5573551	0					
ANR	5573628	Identifier	m_vm_alive_pinfo		5573551	0					
ANR	5573629	Identifier	pssize		5573551	1					
ANR	5573630	MemberAccess	m_vm_exited_pinfo . pssize		5573551	1					
ANR	5573631	Identifier	m_vm_exited_pinfo		5573551	0					
ANR	5573632	Identifier	pssize		5573551	1					
ANR	5573633	CompoundStatement		21:95:611:611	5573551	1					
ANR	5573634	ExpressionStatement	m_vm_exited_pinfo . pssize_available = true	154:2:4260:4301	5573551	0	True				
ANR	5573635	AssignmentExpression	m_vm_exited_pinfo . pssize_available = true		5573551	0		=			
ANR	5573636	MemberAccess	m_vm_exited_pinfo . pssize_available		5573551	0					
ANR	5573637	Identifier	m_vm_exited_pinfo		5573551	0					
ANR	5573638	Identifier	pssize_available		5573551	1					
ANR	5573639	Identifier	true		5573551	1					
ANR	5573640	ExpressionStatement	m_vm_exited_pinfo . pssize = m_vm_alive_pinfo . pssize	155:2:4305:4355	5573551	1	True				
ANR	5573641	AssignmentExpression	m_vm_exited_pinfo . pssize = m_vm_alive_pinfo . pssize		5573551	0		=			
ANR	5573642	MemberAccess	m_vm_exited_pinfo . pssize		5573551	0					
ANR	5573643	Identifier	m_vm_exited_pinfo		5573551	0					
ANR	5573644	Identifier	pssize		5573551	1					
ANR	5573645	MemberAccess	m_vm_alive_pinfo . pssize		5573551	1					
ANR	5573646	Identifier	m_vm_alive_pinfo		5573551	0					
ANR	5573647	Identifier	pssize		5573551	1					
ANR	5573648	ExpressionStatement	"memset ( & m_vm_alive_pinfo , 0 , sizeof ( m_vm_alive_pinfo ) )"	160:1:4415:4469	5573551	7	True				
ANR	5573649	CallExpression	"memset ( & m_vm_alive_pinfo , 0 , sizeof ( m_vm_alive_pinfo ) )"		5573551	0					
ANR	5573650	Callee	memset		5573551	0					
ANR	5573651	Identifier	memset		5573551	0					
ANR	5573652	ArgumentList	& m_vm_alive_pinfo		5573551	1					
ANR	5573653	Argument	& m_vm_alive_pinfo		5573551	0					
ANR	5573654	UnaryOperationExpression	& m_vm_alive_pinfo		5573551	0					
ANR	5573655	UnaryOperator	&		5573551	0					
ANR	5573656	Identifier	m_vm_alive_pinfo		5573551	1					
ANR	5573657	Argument	0		5573551	1					
ANR	5573658	PrimaryExpression	0		5573551	0					
ANR	5573659	Argument	sizeof ( m_vm_alive_pinfo )		5573551	2					
ANR	5573660	SizeofExpression	sizeof ( m_vm_alive_pinfo )		5573551	0					
ANR	5573661	Sizeof	sizeof		5573551	0					
ANR	5573662	SizeofOperand	m_vm_alive_pinfo		5573551	1					
ANR	5573663	ExpressionStatement	m_vm_pid = vm_pid	161:1:4472:4489	5573551	8	True				
ANR	5573664	AssignmentExpression	m_vm_pid = vm_pid		5573551	0		=			
ANR	5573665	Identifier	m_vm_pid		5573551	0					
ANR	5573666	Identifier	vm_pid		5573551	1					
ANR	5573667	ReturnType	void		5573551	1					
ANR	5573668	Identifier	VMStarterInfo :: addProcessForVM		5573551	2					
ANR	5573669	ParameterList	pid_t vm_pid		5573551	3					
ANR	5573670	Parameter	pid_t vm_pid	132:31:3630:3641	5573551	0	True				
ANR	5573671	ParameterType	pid_t		5573551	0					
ANR	5573672	Identifier	vm_pid		5573551	1					
ANR	5573673	CFGEntryNode	ENTRY		5573551		True				
ANR	5573674	CFGExitNode	EXIT		5573551		True				
ANR	5573675	Symbol	m_vm_alive_pinfo . pssize		5573551						
ANR	5573676	Symbol	vm_pid		5573551						
ANR	5573677	Symbol	m_vm_exited_pinfo . pssize		5573551						
ANR	5573678	Symbol	m_vm_pid		5573551						
ANR	5573679	Symbol	m_vm_exited_pinfo . user_time		5573551						
ANR	5573680	Symbol	m_vm_alive_pinfo . rssize		5573551						
ANR	5573681	Symbol	m_vm_alive_pinfo		5573551						
ANR	5573682	Symbol	m_vm_exited_pinfo . sys_time		5573551						
ANR	5573683	Symbol	m_vm_alive_pinfo . sys_time		5573551						
ANR	5573684	Symbol	m_vm_alive_pinfo . imgsize		5573551						
ANR	5573685	Symbol	true		5573551						
ANR	5573686	Symbol	& m_vm_alive_pinfo		5573551						
ANR	5573687	Symbol	m_vm_alive_pinfo . user_time		5573551						
ANR	5573688	Symbol	m_vm_exited_pinfo . rssize		5573551						
ANR	5573689	Symbol	m_vm_exited_pinfo . imgsize		5573551						
ANR	5573690	Symbol	m_vm_alive_pinfo . pssize_available		5573551						
ANR	5573691	Symbol	m_vm_exited_pinfo		5573551						
ANR	5573692	Symbol	m_vm_exited_pinfo . pssize_available		5573551						
ANR	5573693	Function	VMStarterInfo :: getProcessForVM	164:0:4494:4557							
ANR	5573694	FunctionDef	VMStarterInfo :: getProcessForVM ()		5573693	0					
ANR	5573695	CompoundStatement		166:0:4537:4557	5573693	0					
ANR	5573696	ReturnStatement	return m_vm_pid ;	167:1:4540:4555	5573693	0	True				
ANR	5573697	Identifier	m_vm_pid		5573693	0					
ANR	5573698	ReturnType	pid_t		5573693	1					
ANR	5573699	Identifier	VMStarterInfo :: getProcessForVM		5573693	2					
ANR	5573700	ParameterList			5573693	3					
ANR	5573701	CFGEntryNode	ENTRY		5573693		True				
ANR	5573702	CFGExitNode	EXIT		5573693		True				
ANR	5573703	Symbol	m_vm_pid		5573693						
ANR	5573704	Function	VMStarterInfo :: addMACForVM	170:0:4560:4628							
ANR	5573705	FunctionDef	VMStarterInfo :: addMACForVM (const char * mac)		5573704	0					
ANR	5573706	CompoundStatement		172:0:4609:4628	5573704	0					
ANR	5573707	ExpressionStatement	m_vm_mac = mac	173:1:4612:4626	5573704	0	True				
ANR	5573708	AssignmentExpression	m_vm_mac = mac		5573704	0		=			
ANR	5573709	Identifier	m_vm_mac		5573704	0					
ANR	5573710	Identifier	mac		5573704	1					
ANR	5573711	ReturnType	void		5573704	1					
ANR	5573712	Identifier	VMStarterInfo :: addMACForVM		5573704	2					
ANR	5573713	ParameterList	const char * mac		5573704	3					
ANR	5573714	Parameter	const char * mac	171:27:4592:4606	5573704	0	True				
ANR	5573715	ParameterType	const char *		5573704	0					
ANR	5573716	Identifier	mac		5573704	1					
ANR	5573717	CFGEntryNode	ENTRY		5573704		True				
ANR	5573718	CFGExitNode	EXIT		5573704		True				
ANR	5573719	Symbol	m_vm_mac		5573704						
ANR	5573720	Symbol	mac		5573704						
ANR	5573721	Function	VMStarterInfo :: getMACForVM	176:0:4631:4705							
ANR	5573722	FunctionDef	VMStarterInfo :: getMACForVM ()		5573721	0					
ANR	5573723	CompoundStatement		178:0:4677:4705	5573721	0					
ANR	5573724	ReturnStatement	return m_vm_mac . Value ( ) ;	179:1:4680:4703	5573721	0	True				
ANR	5573725	CallExpression	m_vm_mac . Value ( )		5573721	0					
ANR	5573726	Callee	m_vm_mac . Value		5573721	0					
ANR	5573727	MemberAccess	m_vm_mac . Value		5573721	0					
ANR	5573728	Identifier	m_vm_mac		5573721	0					
ANR	5573729	Identifier	Value		5573721	1					
ANR	5573730	ArgumentList			5573721	1					
ANR	5573731	ReturnType	const char *		5573721	1					
ANR	5573732	Identifier	VMStarterInfo :: getMACForVM		5573721	2					
ANR	5573733	ParameterList			5573721	3					
ANR	5573734	CFGEntryNode	ENTRY		5573721		True				
ANR	5573735	CFGExitNode	EXIT		5573721		True				
ANR	5573736	Symbol	m_vm_mac		5573721						
ANR	5573737	Symbol	m_vm_mac . Value		5573721						
ANR	5573738	Function	VMStarterInfo :: addIPForVM	182:0:4708:4772							
ANR	5573739	FunctionDef	VMStarterInfo :: addIPForVM (const char * ip)		5573738	0					
ANR	5573740	CompoundStatement		184:0:4755:4772	5573738	0					
ANR	5573741	ExpressionStatement	m_vm_ip = ip	185:1:4758:4770	5573738	0	True				
ANR	5573742	AssignmentExpression	m_vm_ip = ip		5573738	0		=			
ANR	5573743	Identifier	m_vm_ip		5573738	0					
ANR	5573744	Identifier	ip		5573738	1					
ANR	5573745	ReturnType	void		5573738	1					
ANR	5573746	Identifier	VMStarterInfo :: addIPForVM		5573738	2					
ANR	5573747	ParameterList	const char * ip		5573738	3					
ANR	5573748	Parameter	const char * ip	183:26:4739:4752	5573738	0	True				
ANR	5573749	ParameterType	const char *		5573738	0					
ANR	5573750	Identifier	ip		5573738	1					
ANR	5573751	CFGEntryNode	ENTRY		5573738		True				
ANR	5573752	CFGExitNode	EXIT		5573738		True				
ANR	5573753	Symbol	ip		5573738						
ANR	5573754	Symbol	m_vm_ip		5573738						
ANR	5573755	Function	VMStarterInfo :: getIPForVM	188:0:4775:4847							
ANR	5573756	FunctionDef	VMStarterInfo :: getIPForVM ()		5573755	0					
ANR	5573757	CompoundStatement		190:0:4820:4847	5573755	0					
ANR	5573758	ReturnStatement	return m_vm_ip . Value ( ) ;	191:1:4823:4845	5573755	0	True				
ANR	5573759	CallExpression	m_vm_ip . Value ( )		5573755	0					
ANR	5573760	Callee	m_vm_ip . Value		5573755	0					
ANR	5573761	MemberAccess	m_vm_ip . Value		5573755	0					
ANR	5573762	Identifier	m_vm_ip		5573755	0					
ANR	5573763	Identifier	Value		5573755	1					
ANR	5573764	ArgumentList			5573755	1					
ANR	5573765	ReturnType	const char *		5573755	1					
ANR	5573766	Identifier	VMStarterInfo :: getIPForVM		5573755	2					
ANR	5573767	ParameterList			5573755	3					
ANR	5573768	CFGEntryNode	ENTRY		5573755		True				
ANR	5573769	CFGExitNode	EXIT		5573755		True				
ANR	5573770	Symbol	m_vm_ip . Value		5573755						
ANR	5573771	Symbol	m_vm_ip		5573755						
ANR	5573772	Function	VMUniverseMgr :: VMUniverseMgr	212:0:5222:5452							
ANR	5573773	FunctionDef	VMUniverseMgr :: VMUniverseMgr ()		5573772	0					
ANR	5573774	CompoundStatement		213:0:5253:5452	5573772	0					
ANR	5573775	ExpressionStatement	m_needCheck = false	214:1:5256:5275	5573772	0	True				
ANR	5573776	AssignmentExpression	m_needCheck = false		5573772	0		=			
ANR	5573777	Identifier	m_needCheck		5573772	0					
ANR	5573778	Identifier	false		5573772	1					
ANR	5573779	ExpressionStatement	m_starter_has_vmcode = false	215:1:5278:5306	5573772	1	True				
ANR	5573780	AssignmentExpression	m_starter_has_vmcode = false		5573772	0		=			
ANR	5573781	Identifier	m_starter_has_vmcode		5573772	0					
ANR	5573782	Identifier	false		5573772	1					
ANR	5573783	ExpressionStatement	m_vm_max_memory = 0	216:1:5309:5328	5573772	2	True				
ANR	5573784	AssignmentExpression	m_vm_max_memory = 0		5573772	0		=			
ANR	5573785	Identifier	m_vm_max_memory		5573772	0					
ANR	5573786	PrimaryExpression	0		5573772	1					
ANR	5573787	ExpressionStatement	m_vm_used_memory = 0	217:1:5331:5351	5573772	3	True				
ANR	5573788	AssignmentExpression	m_vm_used_memory = 0		5573772	0		=			
ANR	5573789	Identifier	m_vm_used_memory		5573772	0					
ANR	5573790	PrimaryExpression	0		5573772	1					
ANR	5573791	ExpressionStatement	m_vm_max_num = 0	218:1:5354:5370	5573772	4	True				
ANR	5573792	AssignmentExpression	m_vm_max_num = 0		5573772	0		=			
ANR	5573793	Identifier	m_vm_max_num		5573772	0					
ANR	5573794	PrimaryExpression	0		5573772	1					
ANR	5573795	ExpressionStatement	m_vm_networking = false	219:1:5385:5408	5573772	5	True				
ANR	5573796	AssignmentExpression	m_vm_networking = false		5573772	0		=			
ANR	5573797	Identifier	m_vm_networking		5573772	0					
ANR	5573798	Identifier	false		5573772	1					
ANR	5573799	ExpressionStatement	m_check_tid = - 1	220:1:5411:5427	5573772	6	True				
ANR	5573800	AssignmentExpression	m_check_tid = - 1		5573772	0		=			
ANR	5573801	Identifier	m_check_tid		5573772	0					
ANR	5573802	UnaryOperationExpression	- 1		5573772	1					
ANR	5573803	UnaryOperator	-		5573772	0					
ANR	5573804	PrimaryExpression	1		5573772	1					
ANR	5573805	ExpressionStatement	m_check_interval = 0	221:1:5430:5450	5573772	7	True				
ANR	5573806	AssignmentExpression	m_check_interval = 0		5573772	0		=			
ANR	5573807	Identifier	m_check_interval		5573772	0					
ANR	5573808	PrimaryExpression	0		5573772	1					
ANR	5573809	Identifier	VMUniverseMgr :: VMUniverseMgr		5573772	1					
ANR	5573810	ParameterList			5573772	2					
ANR	5573811	CFGEntryNode	ENTRY		5573772		True				
ANR	5573812	CFGExitNode	EXIT		5573772		True				
ANR	5573813	Symbol	m_vm_max_memory		5573772						
ANR	5573814	Symbol	m_starter_has_vmcode		5573772						
ANR	5573815	Symbol	m_vm_networking		5573772						
ANR	5573816	Symbol	m_vm_max_num		5573772						
ANR	5573817	Symbol	false		5573772						
ANR	5573818	Symbol	m_check_interval		5573772						
ANR	5573819	Symbol	m_vm_used_memory		5573772						
ANR	5573820	Symbol	m_needCheck		5573772						
ANR	5573821	Symbol	m_check_tid		5573772						
ANR	5573822	Function	VMUniverseMgr :: ~VMUniverseMgr	224:0:5455:5580							
ANR	5573823	FunctionDef	VMUniverseMgr :: ~VMUniverseMgr ()		5573822	0					
ANR	5573824	CompoundStatement		225:0:5487:5580	5573822	0					
ANR	5573825	IfStatement	if ( m_check_tid != - 1 )		5573822	0					
ANR	5573826	Condition	m_check_tid != - 1	226:5:5494:5510	5573822	0	True				
ANR	5573827	EqualityExpression	m_check_tid != - 1		5573822	0		!=			
ANR	5573828	Identifier	m_check_tid		5573822	0					
ANR	5573829	UnaryOperationExpression	- 1		5573822	1					
ANR	5573830	UnaryOperator	-		5573822	0					
ANR	5573831	PrimaryExpression	1		5573822	1					
ANR	5573832	CompoundStatement		2:25:26:26	5573822	1					
ANR	5573833	ExpressionStatement	daemonCore -> Cancel_Timer ( m_check_tid )	227:2:5518:5555	5573822	0	True				
ANR	5573834	CallExpression	daemonCore -> Cancel_Timer ( m_check_tid )		5573822	0					
ANR	5573835	Callee	daemonCore -> Cancel_Timer		5573822	0					
ANR	5573836	PtrMemberAccess	daemonCore -> Cancel_Timer		5573822	0					
ANR	5573837	Identifier	daemonCore		5573822	0					
ANR	5573838	Identifier	Cancel_Timer		5573822	1					
ANR	5573839	ArgumentList	m_check_tid		5573822	1					
ANR	5573840	Argument	m_check_tid		5573822	0					
ANR	5573841	Identifier	m_check_tid		5573822	0					
ANR	5573842	ExpressionStatement	m_check_tid = - 1	228:2:5559:5575	5573822	1	True				
ANR	5573843	AssignmentExpression	m_check_tid = - 1		5573822	0		=			
ANR	5573844	Identifier	m_check_tid		5573822	0					
ANR	5573845	UnaryOperationExpression	- 1		5573822	1					
ANR	5573846	UnaryOperator	-		5573822	0					
ANR	5573847	PrimaryExpression	1		5573822	1					
ANR	5573848	Identifier	VMUniverseMgr :: ~VMUniverseMgr		5573822	1					
ANR	5573849	ParameterList			5573822	2					
ANR	5573850	CFGEntryNode	ENTRY		5573822		True				
ANR	5573851	CFGExitNode	EXIT		5573822		True				
ANR	5573852	Symbol	daemonCore		5573822						
ANR	5573853	Symbol	m_check_tid		5573822						
ANR	5573854	Function	VMUniverseMgr :: init	232:0:5583:6919							
ANR	5573855	FunctionDef	VMUniverseMgr :: init ()		5573854	0					
ANR	5573856	CompoundStatement		234:0:5616:6919	5573854	0					
ANR	5573857	IdentifierDeclStatement	MyString vmtype ;	235:1:5619:5634	5573854	0	True				
ANR	5573858	IdentifierDecl	vmtype		5573854	0					
ANR	5573859	IdentifierDeclType	MyString		5573854	0					
ANR	5573860	Identifier	vmtype		5573854	1					
ANR	5573861	IdentifierDeclStatement	MyString vmgahppath ;	236:1:5637:5656	5573854	1	True				
ANR	5573862	IdentifierDecl	vmgahppath		5573854	0					
ANR	5573863	IdentifierDeclType	MyString		5573854	0					
ANR	5573864	Identifier	vmgahppath		5573854	1					
ANR	5573865	ExpressionStatement	"m_vm_type = """""	238:1:5660:5674	5573854	2	True				
ANR	5573866	AssignmentExpression	"m_vm_type = """""		5573854	0		=			
ANR	5573867	Identifier	m_vm_type		5573854	0					
ANR	5573868	PrimaryExpression	""""""		5573854	1					
ANR	5573869	IfStatement	if ( ! m_starter_has_vmcode )		5573854	3					
ANR	5573870	Condition	! m_starter_has_vmcode	240:5:5682:5702	5573854	0	True				
ANR	5573871	UnaryOperationExpression	! m_starter_has_vmcode		5573854	0					
ANR	5573872	UnaryOperator	!		5573854	0					
ANR	5573873	Identifier	m_starter_has_vmcode		5573854	1					
ANR	5573874	CompoundStatement		7:29:89:89	5573854	1					
ANR	5573875	Statement	dprintf	241:2:5710:5716	5573854	0	True				
ANR	5573876	Statement	(	241:9:5717:5717	5573854	1	True				
ANR	5573877	Statement	D_ALWAYS	241:11:5719:5726	5573854	2	True				
ANR	5573878	Statement	","	241:19:5727:5727	5573854	3	True				
ANR	5573879	Statement	"""VM universe will be disabled, """	241:21:5729:5760	5573854	4	True				
ANR	5573880	Statement	"""because Starter doesn't support vm universe\\n"""	242:4:5766:5812	5573854	5	True				
ANR	5573881	Statement	)	242:51:5813:5813	5573854	6	True				
ANR	5573882	ExpressionStatement		242:52:5814:5814	5573854	7	True				
ANR	5573883	ReturnStatement	return false ;	243:2:5818:5830	5573854	8	True				
ANR	5573884	Identifier	false		5573854	0					
ANR	5573885	IdentifierDeclStatement	char * tmp = NULL ;	246:1:5837:5853	5573854	4	True				
ANR	5573886	IdentifierDecl	* tmp = NULL		5573854	0					
ANR	5573887	IdentifierDeclType	char *		5573854	0					
ANR	5573888	Identifier	tmp		5573854	1					
ANR	5573889	AssignmentExpression	* tmp = NULL		5573854	2		=			
ANR	5573890	Identifier	NULL		5573854	0					
ANR	5573891	Identifier	NULL		5573854	1					
ANR	5573892	ExpressionStatement	"tmp = param ( ""VM_TYPE"" )"	247:1:5856:5880	5573854	5	True				
ANR	5573893	AssignmentExpression	"tmp = param ( ""VM_TYPE"" )"		5573854	0		=			
ANR	5573894	Identifier	tmp		5573854	0					
ANR	5573895	CallExpression	"param ( ""VM_TYPE"" )"		5573854	1					
ANR	5573896	Callee	param		5573854	0					
ANR	5573897	Identifier	param		5573854	0					
ANR	5573898	ArgumentList	"""VM_TYPE"""		5573854	1					
ANR	5573899	Argument	"""VM_TYPE"""		5573854	0					
ANR	5573900	PrimaryExpression	"""VM_TYPE"""		5573854	0					
ANR	5573901	IfStatement	if ( ! tmp )		5573854	6					
ANR	5573902	Condition	! tmp	248:5:5887:5890	5573854	0	True				
ANR	5573903	UnaryOperationExpression	! tmp		5573854	0					
ANR	5573904	UnaryOperator	!		5573854	0					
ANR	5573905	Identifier	tmp		5573854	1					
ANR	5573906	CompoundStatement		15:12:277:277	5573854	1					
ANR	5573907	ReturnStatement	return false ;	249:2:5898:5910	5573854	0	True				
ANR	5573908	Identifier	false		5573854	0					
ANR	5573909	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""VM_TYPE(%s) is defined in condor config file\\n"" , tmp )"	252:1:5917:5993	5573854	7	True				
ANR	5573910	CallExpression	"dprintf ( D_FULLDEBUG , ""VM_TYPE(%s) is defined in condor config file\\n"" , tmp )"		5573854	0					
ANR	5573911	Callee	dprintf		5573854	0					
ANR	5573912	Identifier	dprintf		5573854	0					
ANR	5573913	ArgumentList	D_FULLDEBUG		5573854	1					
ANR	5573914	Argument	D_FULLDEBUG		5573854	0					
ANR	5573915	Identifier	D_FULLDEBUG		5573854	0					
ANR	5573916	Argument	"""VM_TYPE(%s) is defined in condor config file\\n"""		5573854	1					
ANR	5573917	PrimaryExpression	"""VM_TYPE(%s) is defined in condor config file\\n"""		5573854	0					
ANR	5573918	Argument	tmp		5573854	2					
ANR	5573919	Identifier	tmp		5573854	0					
ANR	5573920	ExpressionStatement	vmtype = tmp	253:1:5996:6008	5573854	8	True				
ANR	5573921	AssignmentExpression	vmtype = tmp		5573854	0		=			
ANR	5573922	Identifier	vmtype		5573854	0					
ANR	5573923	Identifier	tmp		5573854	1					
ANR	5573924	ExpressionStatement	free ( tmp )	254:1:6011:6020	5573854	9	True				
ANR	5573925	CallExpression	free ( tmp )		5573854	0					
ANR	5573926	Callee	free		5573854	0					
ANR	5573927	Identifier	free		5573854	0					
ANR	5573928	ArgumentList	tmp		5573854	1					
ANR	5573929	Argument	tmp		5573854	0					
ANR	5573930	Identifier	tmp		5573854	0					
ANR	5573931	ExpressionStatement	"tmp = param ( ""VM_GAHP_SERVER"" )"	256:1:6024:6055	5573854	10	True				
ANR	5573932	AssignmentExpression	"tmp = param ( ""VM_GAHP_SERVER"" )"		5573854	0		=			
ANR	5573933	Identifier	tmp		5573854	0					
ANR	5573934	CallExpression	"param ( ""VM_GAHP_SERVER"" )"		5573854	1					
ANR	5573935	Callee	param		5573854	0					
ANR	5573936	Identifier	param		5573854	0					
ANR	5573937	ArgumentList	"""VM_GAHP_SERVER"""		5573854	1					
ANR	5573938	Argument	"""VM_GAHP_SERVER"""		5573854	0					
ANR	5573939	PrimaryExpression	"""VM_GAHP_SERVER"""		5573854	0					
ANR	5573940	IfStatement	if ( ! tmp )		5573854	11					
ANR	5573941	Condition	! tmp	257:5:6062:6065	5573854	0	True				
ANR	5573942	UnaryOperationExpression	! tmp		5573854	0					
ANR	5573943	UnaryOperator	!		5573854	0					
ANR	5573944	Identifier	tmp		5573854	1					
ANR	5573945	CompoundStatement		24:12:452:452	5573854	1					
ANR	5573946	Statement	dprintf	258:2:6073:6079	5573854	0	True				
ANR	5573947	Statement	(	258:9:6080:6080	5573854	1	True				
ANR	5573948	Statement	D_ALWAYS	258:11:6082:6089	5573854	2	True				
ANR	5573949	Statement	","	258:19:6090:6090	5573854	3	True				
ANR	5573950	Statement	"""To support vm universe, '%s' must be defined """	258:21:6092:6138	5573854	4	True				
ANR	5573951	Statement	"""in condor config file\\n"""	259:4:6144:6168	5573854	5	True				
ANR	5573952	Statement	","	259:29:6169:6169	5573854	6	True				
ANR	5573953	Statement	"""VM_GAHP_SERVER"""	259:31:6171:6186	5573854	7	True				
ANR	5573954	Statement	)	259:47:6187:6187	5573854	8	True				
ANR	5573955	ExpressionStatement		259:48:6188:6188	5573854	9	True				
ANR	5573956	ReturnStatement	return false ;	260:2:6193:6205	5573854	10	True				
ANR	5573957	Identifier	false		5573854	0					
ANR	5573958	IfStatement	"if ( access ( tmp , X_OK ) < 0 )"		5573854	12					
ANR	5573959	Condition	"access ( tmp , X_OK ) < 0"	263:5:6216:6235	5573854	0	True				
ANR	5573960	RelationalExpression	"access ( tmp , X_OK ) < 0"		5573854	0		<			
ANR	5573961	CallExpression	"access ( tmp , X_OK )"		5573854	0					
ANR	5573962	Callee	access		5573854	0					
ANR	5573963	Identifier	access		5573854	0					
ANR	5573964	ArgumentList	tmp		5573854	1					
ANR	5573965	Argument	tmp		5573854	0					
ANR	5573966	Identifier	tmp		5573854	0					
ANR	5573967	Argument	X_OK		5573854	1					
ANR	5573968	Identifier	X_OK		5573854	0					
ANR	5573969	PrimaryExpression	0		5573854	1					
ANR	5573970	CompoundStatement		30:27:621:621	5573854	1					
ANR	5573971	ExpressionStatement	"dprintf ( D_ALWAYS , ""To support vm universe, '%s' must be executable\\n"" , tmp )"	265:2:6283:6359	5573854	0	True				
ANR	5573972	CallExpression	"dprintf ( D_ALWAYS , ""To support vm universe, '%s' must be executable\\n"" , tmp )"		5573854	0					
ANR	5573973	Callee	dprintf		5573854	0					
ANR	5573974	Identifier	dprintf		5573854	0					
ANR	5573975	ArgumentList	D_ALWAYS		5573854	1					
ANR	5573976	Argument	D_ALWAYS		5573854	0					
ANR	5573977	Identifier	D_ALWAYS		5573854	0					
ANR	5573978	Argument	"""To support vm universe, '%s' must be executable\\n"""		5573854	1					
ANR	5573979	PrimaryExpression	"""To support vm universe, '%s' must be executable\\n"""		5573854	0					
ANR	5573980	Argument	tmp		5573854	2					
ANR	5573981	Identifier	tmp		5573854	0					
ANR	5573982	ExpressionStatement	free ( tmp )	266:2:6364:6373	5573854	1	True				
ANR	5573983	CallExpression	free ( tmp )		5573854	0					
ANR	5573984	Callee	free		5573854	0					
ANR	5573985	Identifier	free		5573854	0					
ANR	5573986	ArgumentList	tmp		5573854	1					
ANR	5573987	Argument	tmp		5573854	0					
ANR	5573988	Identifier	tmp		5573854	0					
ANR	5573989	ReturnStatement	return false ;	267:2:6377:6389	5573854	2	True				
ANR	5573990	Identifier	false		5573854	0					
ANR	5573991	ExpressionStatement	vmgahppath = tmp	269:1:6395:6411	5573854	13	True				
ANR	5573992	AssignmentExpression	vmgahppath = tmp		5573854	0		=			
ANR	5573993	Identifier	vmgahppath		5573854	0					
ANR	5573994	Identifier	tmp		5573854	1					
ANR	5573995	ExpressionStatement	free ( tmp )	270:1:6414:6423	5573854	14	True				
ANR	5573996	CallExpression	free ( tmp )		5573854	0					
ANR	5573997	Callee	free		5573854	0					
ANR	5573998	Identifier	free		5573854	0					
ANR	5573999	ArgumentList	tmp		5573854	1					
ANR	5574000	Argument	tmp		5573854	0					
ANR	5574001	Identifier	tmp		5573854	0					
ANR	5574002	ExpressionStatement	"m_vm_max_num = param_integer ( ""VM_MAX_NUMBER"" , 0 , 0 )"	272:1:6427:6478	5573854	15	True				
ANR	5574003	AssignmentExpression	"m_vm_max_num = param_integer ( ""VM_MAX_NUMBER"" , 0 , 0 )"		5573854	0		=			
ANR	5574004	Identifier	m_vm_max_num		5573854	0					
ANR	5574005	CallExpression	"param_integer ( ""VM_MAX_NUMBER"" , 0 , 0 )"		5573854	1					
ANR	5574006	Callee	param_integer		5573854	0					
ANR	5574007	Identifier	param_integer		5573854	0					
ANR	5574008	ArgumentList	"""VM_MAX_NUMBER"""		5573854	1					
ANR	5574009	Argument	"""VM_MAX_NUMBER"""		5573854	0					
ANR	5574010	PrimaryExpression	"""VM_MAX_NUMBER"""		5573854	0					
ANR	5574011	Argument	0		5573854	1					
ANR	5574012	PrimaryExpression	0		5573854	0					
ANR	5574013	Argument	0		5573854	2					
ANR	5574014	PrimaryExpression	0		5573854	0					
ANR	5574015	IfStatement	"if ( testVMGahp ( vmgahppath . Value ( ) , vmtype . Value ( ) ) == false )"		5573854	16					
ANR	5574016	Condition	"testVMGahp ( vmgahppath . Value ( ) , vmtype . Value ( ) ) == false"	278:5:6689:6743	5573854	0	True				
ANR	5574017	EqualityExpression	"testVMGahp ( vmgahppath . Value ( ) , vmtype . Value ( ) ) == false"		5573854	0		==			
ANR	5574018	CallExpression	"testVMGahp ( vmgahppath . Value ( ) , vmtype . Value ( ) )"		5573854	0					
ANR	5574019	Callee	testVMGahp		5573854	0					
ANR	5574020	Identifier	testVMGahp		5573854	0					
ANR	5574021	ArgumentList	vmgahppath . Value ( )		5573854	1					
ANR	5574022	Argument	vmgahppath . Value ( )		5573854	0					
ANR	5574023	CallExpression	vmgahppath . Value ( )		5573854	0					
ANR	5574024	Callee	vmgahppath . Value		5573854	0					
ANR	5574025	MemberAccess	vmgahppath . Value		5573854	0					
ANR	5574026	Identifier	vmgahppath		5573854	0					
ANR	5574027	Identifier	Value		5573854	1					
ANR	5574028	ArgumentList			5573854	1					
ANR	5574029	Argument	vmtype . Value ( )		5573854	1					
ANR	5574030	CallExpression	vmtype . Value ( )		5573854	0					
ANR	5574031	Callee	vmtype . Value		5573854	0					
ANR	5574032	MemberAccess	vmtype . Value		5573854	0					
ANR	5574033	Identifier	vmtype		5573854	0					
ANR	5574034	Identifier	Value		5573854	1					
ANR	5574035	ArgumentList			5573854	1					
ANR	5574036	Identifier	false		5573854	1					
ANR	5574037	CompoundStatement		45:63:1130:1130	5573854	1					
ANR	5574038	Statement	dprintf	279:2:6751:6757	5573854	0	True				
ANR	5574039	Statement	(	279:9:6758:6758	5573854	1	True				
ANR	5574040	Statement	D_ALWAYS	279:11:6760:6767	5573854	2	True				
ANR	5574041	Statement	","	279:19:6768:6768	5573854	3	True				
ANR	5574042	Statement	"""Test of vmgahp for VM_TYPE('%s') failed. """	279:21:6770:6812	5573854	4	True				
ANR	5574043	Statement	"""So we disabled VM Universe\\n"""	280:4:6818:6847	5573854	5	True				
ANR	5574044	Statement	","	280:34:6848:6848	5573854	6	True				
ANR	5574045	Statement	vmtype	280:36:6850:6855	5573854	7	True				
ANR	5574046	Statement	.	280:42:6856:6856	5573854	8	True				
ANR	5574047	Statement	Value	280:43:6857:6861	5573854	9	True				
ANR	5574048	Statement	(	280:48:6862:6862	5573854	10	True				
ANR	5574049	Statement	)	280:49:6863:6863	5573854	11	True				
ANR	5574050	Statement	)	280:50:6864:6864	5573854	12	True				
ANR	5574051	ExpressionStatement		280:51:6865:6865	5573854	13	True				
ANR	5574052	ExpressionStatement	"m_vm_type = """""	281:2:6869:6883	5573854	14	True				
ANR	5574053	AssignmentExpression	"m_vm_type = """""		5573854	0		=			
ANR	5574054	Identifier	m_vm_type		5573854	0					
ANR	5574055	PrimaryExpression	""""""		5573854	1					
ANR	5574056	ReturnStatement	return false ;	282:2:6887:6899	5573854	15	True				
ANR	5574057	Identifier	false		5573854	0					
ANR	5574058	ReturnStatement	return true ;	285:1:6906:6917	5573854	17	True				
ANR	5574059	Identifier	true		5573854	0					
ANR	5574060	ReturnType	bool		5573854	1					
ANR	5574061	Identifier	VMUniverseMgr :: init		5573854	2					
ANR	5574062	ParameterList			5573854	3					
ANR	5574063	CFGEntryNode	ENTRY		5573854		True				
ANR	5574064	CFGExitNode	EXIT		5573854		True				
ANR	5574065	Symbol	vmtype		5573854						
ANR	5574066	Symbol	NULL		5573854						
ANR	5574067	Symbol	access		5573854						
ANR	5574068	Symbol	m_starter_has_vmcode		5573854						
ANR	5574069	Symbol	false		5573854						
ANR	5574070	Symbol	D_ALWAYS		5573854						
ANR	5574071	Symbol	D_FULLDEBUG		5573854						
ANR	5574072	Symbol	X_OK		5573854						
ANR	5574073	Symbol	testVMGahp		5573854						
ANR	5574074	Symbol	vmgahppath . Value		5573854						
ANR	5574075	Symbol	m_vm_type		5573854						
ANR	5574076	Symbol	param		5573854						
ANR	5574077	Symbol	tmp		5573854						
ANR	5574078	Symbol	m_vm_max_num		5573854						
ANR	5574079	Symbol	vmtype . Value		5573854						
ANR	5574080	Symbol	vmgahppath		5573854						
ANR	5574081	Symbol	true		5573854						
ANR	5574082	Symbol	param_integer		5573854						
ANR	5574083	Function	VMUniverseMgr :: printVMGahpInfo	288:0:6922:7112							
ANR	5574084	FunctionDef	VMUniverseMgr :: printVMGahpInfo (int debug_level)		5574083	0					
ANR	5574085	CompoundStatement		290:0:6977:7112	5574083	0					
ANR	5574086	ExpressionStatement	"dprintf ( debug_level , ""........VMGAHP info........\\n"" )"	291:1:6980:7034	5574083	0	True				
ANR	5574087	CallExpression	"dprintf ( debug_level , ""........VMGAHP info........\\n"" )"		5574083	0					
ANR	5574088	Callee	dprintf		5574083	0					
ANR	5574089	Identifier	dprintf		5574083	0					
ANR	5574090	ArgumentList	debug_level		5574083	1					
ANR	5574091	Argument	debug_level		5574083	0					
ANR	5574092	Identifier	debug_level		5574083	0					
ANR	5574093	Argument	"""........VMGAHP info........\\n"""		5574083	1					
ANR	5574094	PrimaryExpression	"""........VMGAHP info........\\n"""		5574083	0					
ANR	5574095	ExpressionStatement	m_vmgahp_info . AttrList :: dPrint ( debug_level )	292:1:7037:7080	5574083	1	True				
ANR	5574096	CallExpression	m_vmgahp_info . AttrList :: dPrint ( debug_level )		5574083	0					
ANR	5574097	Callee	m_vmgahp_info . AttrList :: dPrint		5574083	0					
ANR	5574098	MemberAccess	m_vmgahp_info . AttrList :: dPrint		5574083	0					
ANR	5574099	Identifier	m_vmgahp_info		5574083	0					
ANR	5574100	Identifier	AttrList :: dPrint		5574083	1					
ANR	5574101	ArgumentList	debug_level		5574083	1					
ANR	5574102	Argument	debug_level		5574083	0					
ANR	5574103	Identifier	debug_level		5574083	0					
ANR	5574104	ExpressionStatement	"dprintf ( debug_level , ""\\n"" )"	293:1:7083:7110	5574083	2	True				
ANR	5574105	CallExpression	"dprintf ( debug_level , ""\\n"" )"		5574083	0					
ANR	5574106	Callee	dprintf		5574083	0					
ANR	5574107	Identifier	dprintf		5574083	0					
ANR	5574108	ArgumentList	debug_level		5574083	1					
ANR	5574109	Argument	debug_level		5574083	0					
ANR	5574110	Identifier	debug_level		5574083	0					
ANR	5574111	Argument	"""\\n"""		5574083	1					
ANR	5574112	PrimaryExpression	"""\\n"""		5574083	0					
ANR	5574113	ReturnType	void		5574083	1					
ANR	5574114	Identifier	VMUniverseMgr :: printVMGahpInfo		5574083	2					
ANR	5574115	ParameterList	int debug_level		5574083	3					
ANR	5574116	Parameter	int debug_level	289:32:6959:6973	5574083	0	True				
ANR	5574117	ParameterType	int		5574083	0					
ANR	5574118	Identifier	debug_level		5574083	1					
ANR	5574119	CFGEntryNode	ENTRY		5574083		True				
ANR	5574120	CFGExitNode	EXIT		5574083		True				
ANR	5574121	Symbol	m_vmgahp_info		5574083						
ANR	5574122	Symbol	debug_level		5574083						
ANR	5574123	DeclStmt									
ANR	5574124	Decl							int	int	avail_vm_num
ANR	5574125	DeclStmt									
ANR	5574126	Decl							ExprTree	ExprTree *	expr
ANR	5574127	DeclStmt									
ANR	5574128	Decl							const char	const char *	attr_name
ANR	5574129	DeclStmt									
ANR	5574130	Decl							int	int	freemem
ANR	5574131	DeclStmt									
ANR	5574132	Decl							MyString	MyString	all_macs
ANR	5574133	DeclStmt									
ANR	5574134	Decl							MyString	MyString	all_ips
ANR	5574135	DeclStmt									
ANR	5574136	Decl							VMStarterInfo	VMStarterInfo *	info
ANR	5574137	DeclStmt									
ANR	5574138	Decl							const char	const char *	guest_ip
ANR	5574139	DeclStmt									
ANR	5574140	Decl							const char	const char *	guest_mac
ANR	5574141	Function	VMUniverseMgr :: testVMGahp	368:0:8937:15426							
ANR	5574142	FunctionDef	"VMUniverseMgr :: testVMGahp (const char * gahppath , const char * vmtype)"		5574141	0					
ANR	5574143	CompoundStatement		370:0:9010:15426	5574141	0					
ANR	5574144	ExpressionStatement	m_needCheck = false	371:1:9013:9032	5574141	0	True				
ANR	5574145	AssignmentExpression	m_needCheck = false		5574141	0		=			
ANR	5574146	Identifier	m_needCheck		5574141	0					
ANR	5574147	Identifier	false		5574141	1					
ANR	5574148	IfStatement	if ( ! m_starter_has_vmcode )		5574141	1					
ANR	5574149	Condition	! m_starter_has_vmcode	373:5:9040:9060	5574141	0	True				
ANR	5574150	UnaryOperationExpression	! m_starter_has_vmcode		5574141	0					
ANR	5574151	UnaryOperator	!		5574141	0					
ANR	5574152	Identifier	m_starter_has_vmcode		5574141	1					
ANR	5574153	CompoundStatement		4:29:53:53	5574141	1					
ANR	5574154	ReturnStatement	return false ;	374:2:9068:9080	5574141	0	True				
ANR	5574155	Identifier	false		5574141	0					
ANR	5574156	IfStatement	if ( ! gahppath || ! vmtype )		5574141	2					
ANR	5574157	Condition	! gahppath || ! vmtype	377:5:9091:9110	5574141	0	True				
ANR	5574158	OrExpression	! gahppath || ! vmtype		5574141	0		||			
ANR	5574159	UnaryOperationExpression	! gahppath		5574141	0					
ANR	5574160	UnaryOperator	!		5574141	0					
ANR	5574161	Identifier	gahppath		5574141	1					
ANR	5574162	UnaryOperationExpression	! vmtype		5574141	1					
ANR	5574163	UnaryOperator	!		5574141	0					
ANR	5574164	Identifier	vmtype		5574141	1					
ANR	5574165	CompoundStatement		8:28:103:103	5574141	1					
ANR	5574166	ReturnStatement	return false ;	378:2:9118:9130	5574141	0	True				
ANR	5574167	Identifier	false		5574141	0					
ANR	5574168	IdentifierDeclStatement	"char * need_log_file = param ( ""VM_GAHP_LOG"" ) ;"	388:1:9483:9525	5574141	3	True				
ANR	5574169	IdentifierDecl	"* need_log_file = param ( ""VM_GAHP_LOG"" )"		5574141	0					
ANR	5574170	IdentifierDeclType	char *		5574141	0					
ANR	5574171	Identifier	need_log_file		5574141	1					
ANR	5574172	AssignmentExpression	"* need_log_file = param ( ""VM_GAHP_LOG"" )"		5574141	2		=			
ANR	5574173	Identifier	need_log_file		5574141	0					
ANR	5574174	CallExpression	"param ( ""VM_GAHP_LOG"" )"		5574141	1					
ANR	5574175	Callee	param		5574141	0					
ANR	5574176	Identifier	param		5574141	0					
ANR	5574177	ArgumentList	"""VM_GAHP_LOG"""		5574141	1					
ANR	5574178	Argument	"""VM_GAHP_LOG"""		5574141	0					
ANR	5574179	PrimaryExpression	"""VM_GAHP_LOG"""		5574141	0					
ANR	5574180	IfStatement	if ( need_log_file )		5574141	4					
ANR	5574181	Condition	need_log_file	389:5:9532:9544	5574141	0	True				
ANR	5574182	Identifier	need_log_file		5574141	0					
ANR	5574183	CompoundStatement		20:21:537:537	5574141	1					
ANR	5574184	ExpressionStatement	free ( need_log_file )	390:2:9552:9571	5574141	0	True				
ANR	5574185	CallExpression	free ( need_log_file )		5574141	0					
ANR	5574186	Callee	free		5574141	0					
ANR	5574187	Identifier	free		5574141	0					
ANR	5574188	ArgumentList	need_log_file		5574141	1					
ANR	5574189	Argument	need_log_file		5574141	0					
ANR	5574190	Identifier	need_log_file		5574141	0					
ANR	5574191	ElseStatement	else		5574141	0					
ANR	5574192	CompoundStatement		22:7:569:569	5574141	0					
ANR	5574193	Statement	dprintf	392:2:9584:9590	5574141	0	True				
ANR	5574194	Statement	(	392:9:9591:9591	5574141	1	True				
ANR	5574195	Statement	D_ALWAYS	392:11:9593:9600	5574141	2	True				
ANR	5574196	Statement	","	392:19:9601:9601	5574141	3	True				
ANR	5574197	Statement	"""To support vm universe, '%s' must be defined """	392:21:9603:9649	5574141	4	True				
ANR	5574198	Statement	"""in condor config file, which is a log file for vmgahp.\\n"""	393:4:9655:9712	5574141	5	True				
ANR	5574199	Statement	","	393:62:9713:9713	5574141	6	True				
ANR	5574200	Statement	"""VM_GAHP_LOG"""	394:4:9720:9732	5574141	7	True				
ANR	5574201	Statement	)	394:17:9733:9733	5574141	8	True				
ANR	5574202	ExpressionStatement		394:18:9734:9734	5574141	9	True				
ANR	5574203	ReturnStatement	return false ;	395:2:9739:9751	5574141	10	True				
ANR	5574204	Identifier	false		5574141	0					
ANR	5574205	IdentifierDeclStatement	ArgList systemcmd ;	403:1:9934:9951	5574141	5	True				
ANR	5574206	IdentifierDecl	systemcmd		5574141	0					
ANR	5574207	IdentifierDeclType	ArgList		5574141	0					
ANR	5574208	Identifier	systemcmd		5574141	1					
ANR	5574209	ExpressionStatement	systemcmd . AppendArg ( gahppath )	404:1:9954:9983	5574141	6	True				
ANR	5574210	CallExpression	systemcmd . AppendArg ( gahppath )		5574141	0					
ANR	5574211	Callee	systemcmd . AppendArg		5574141	0					
ANR	5574212	MemberAccess	systemcmd . AppendArg		5574141	0					
ANR	5574213	Identifier	systemcmd		5574141	0					
ANR	5574214	Identifier	AppendArg		5574141	1					
ANR	5574215	ArgumentList	gahppath		5574141	1					
ANR	5574216	Argument	gahppath		5574141	0					
ANR	5574217	Identifier	gahppath		5574141	0					
ANR	5574218	ExpressionStatement	"systemcmd . AppendArg ( ""-f"" )"	405:1:9986:10011	5574141	7	True				
ANR	5574219	CallExpression	"systemcmd . AppendArg ( ""-f"" )"		5574141	0					
ANR	5574220	Callee	systemcmd . AppendArg		5574141	0					
ANR	5574221	MemberAccess	systemcmd . AppendArg		5574141	0					
ANR	5574222	Identifier	systemcmd		5574141	0					
ANR	5574223	Identifier	AppendArg		5574141	1					
ANR	5574224	ArgumentList	"""-f"""		5574141	1					
ANR	5574225	Argument	"""-f"""		5574141	0					
ANR	5574226	PrimaryExpression	"""-f"""		5574141	0					
ANR	5574227	IdentifierDeclStatement	"char * gahp_log_file = param ( ""VM_GAHP_LOG"" ) ;"	406:1:10014:10056	5574141	8	True				
ANR	5574228	IdentifierDecl	"* gahp_log_file = param ( ""VM_GAHP_LOG"" )"		5574141	0					
ANR	5574229	IdentifierDeclType	char *		5574141	0					
ANR	5574230	Identifier	gahp_log_file		5574141	1					
ANR	5574231	AssignmentExpression	"* gahp_log_file = param ( ""VM_GAHP_LOG"" )"		5574141	2		=			
ANR	5574232	Identifier	gahp_log_file		5574141	0					
ANR	5574233	CallExpression	"param ( ""VM_GAHP_LOG"" )"		5574141	1					
ANR	5574234	Callee	param		5574141	0					
ANR	5574235	Identifier	param		5574141	0					
ANR	5574236	ArgumentList	"""VM_GAHP_LOG"""		5574141	1					
ANR	5574237	Argument	"""VM_GAHP_LOG"""		5574141	0					
ANR	5574238	PrimaryExpression	"""VM_GAHP_LOG"""		5574141	0					
ANR	5574239	IfStatement	if ( gahp_log_file )		5574141	9					
ANR	5574240	Condition	gahp_log_file	407:5:10063:10075	5574141	0	True				
ANR	5574241	Identifier	gahp_log_file		5574141	0					
ANR	5574242	CompoundStatement		38:21:1068:1068	5574141	1					
ANR	5574243	ExpressionStatement	free ( gahp_log_file )	408:2:10083:10102	5574141	0	True				
ANR	5574244	CallExpression	free ( gahp_log_file )		5574141	0					
ANR	5574245	Callee	free		5574141	0					
ANR	5574246	Identifier	free		5574141	0					
ANR	5574247	ArgumentList	gahp_log_file		5574141	1					
ANR	5574248	Argument	gahp_log_file		5574141	0					
ANR	5574249	Identifier	gahp_log_file		5574141	0					
ANR	5574250	ElseStatement	else		5574141	0					
ANR	5574251	CompoundStatement		40:7:1100:1100	5574141	0					
ANR	5574252	ExpressionStatement	"systemcmd . AppendArg ( ""-t"" )"	410:2:10115:10140	5574141	0	True				
ANR	5574253	CallExpression	"systemcmd . AppendArg ( ""-t"" )"		5574141	0					
ANR	5574254	Callee	systemcmd . AppendArg		5574141	0					
ANR	5574255	MemberAccess	systemcmd . AppendArg		5574141	0					
ANR	5574256	Identifier	systemcmd		5574141	0					
ANR	5574257	Identifier	AppendArg		5574141	1					
ANR	5574258	ArgumentList	"""-t"""		5574141	1					
ANR	5574259	Argument	"""-t"""		5574141	0					
ANR	5574260	PrimaryExpression	"""-t"""		5574141	0					
ANR	5574261	ExpressionStatement	"systemcmd . AppendArg ( ""-M"" )"	412:1:10146:10171	5574141	10	True				
ANR	5574262	CallExpression	"systemcmd . AppendArg ( ""-M"" )"		5574141	0					
ANR	5574263	Callee	systemcmd . AppendArg		5574141	0					
ANR	5574264	MemberAccess	systemcmd . AppendArg		5574141	0					
ANR	5574265	Identifier	systemcmd		5574141	0					
ANR	5574266	Identifier	AppendArg		5574141	1					
ANR	5574267	ArgumentList	"""-M"""		5574141	1					
ANR	5574268	Argument	"""-M"""		5574141	0					
ANR	5574269	PrimaryExpression	"""-M"""		5574141	0					
ANR	5574270	ExpressionStatement	systemcmd . AppendArg ( VMGAHP_TEST_MODE )	413:1:10174:10211	5574141	11	True				
ANR	5574271	CallExpression	systemcmd . AppendArg ( VMGAHP_TEST_MODE )		5574141	0					
ANR	5574272	Callee	systemcmd . AppendArg		5574141	0					
ANR	5574273	MemberAccess	systemcmd . AppendArg		5574141	0					
ANR	5574274	Identifier	systemcmd		5574141	0					
ANR	5574275	Identifier	AppendArg		5574141	1					
ANR	5574276	ArgumentList	VMGAHP_TEST_MODE		5574141	1					
ANR	5574277	Argument	VMGAHP_TEST_MODE		5574141	0					
ANR	5574278	Identifier	VMGAHP_TEST_MODE		5574141	0					
ANR	5574279	ExpressionStatement	"systemcmd . AppendArg ( ""vmtype"" )"	414:1:10214:10243	5574141	12	True				
ANR	5574280	CallExpression	"systemcmd . AppendArg ( ""vmtype"" )"		5574141	0					
ANR	5574281	Callee	systemcmd . AppendArg		5574141	0					
ANR	5574282	MemberAccess	systemcmd . AppendArg		5574141	0					
ANR	5574283	Identifier	systemcmd		5574141	0					
ANR	5574284	Identifier	AppendArg		5574141	1					
ANR	5574285	ArgumentList	"""vmtype"""		5574141	1					
ANR	5574286	Argument	"""vmtype"""		5574141	0					
ANR	5574287	PrimaryExpression	"""vmtype"""		5574141	0					
ANR	5574288	ExpressionStatement	systemcmd . AppendArg ( vmtype )	415:1:10246:10273	5574141	13	True				
ANR	5574289	CallExpression	systemcmd . AppendArg ( vmtype )		5574141	0					
ANR	5574290	Callee	systemcmd . AppendArg		5574141	0					
ANR	5574291	MemberAccess	systemcmd . AppendArg		5574141	0					
ANR	5574292	Identifier	systemcmd		5574141	0					
ANR	5574293	Identifier	AppendArg		5574141	1					
ANR	5574294	ArgumentList	vmtype		5574141	1					
ANR	5574295	Argument	vmtype		5574141	0					
ANR	5574296	Identifier	vmtype		5574141	0					
ANR	5574297	IfStatement	if ( can_switch_ids ( ) )		5574141	14					
ANR	5574298	Condition	can_switch_ids ( )	418:5:10301:10316	5574141	0	True				
ANR	5574299	CallExpression	can_switch_ids ( )		5574141	0					
ANR	5574300	Callee	can_switch_ids		5574141	0					
ANR	5574301	Identifier	can_switch_ids		5574141	0					
ANR	5574302	ArgumentList			5574141	1					
ANR	5574303	CompoundStatement		50:2:1313:1329	5574141	1					
ANR	5574304	IdentifierDeclStatement	MyString tmp_str ;	419:2:10324:10340	5574141	0	True				
ANR	5574305	IdentifierDecl	tmp_str		5574141	0					
ANR	5574306	IdentifierDeclType	MyString		5574141	0					
ANR	5574307	Identifier	tmp_str		5574141	1					
ANR	5574308	ExpressionStatement	"tmp_str . sprintf ( ""%d"" , ( int ) get_condor_uid ( ) )"	420:2:10344:10388	5574141	1	True				
ANR	5574309	CallExpression	"tmp_str . sprintf ( ""%d"" , ( int ) get_condor_uid ( ) )"		5574141	0					
ANR	5574310	Callee	tmp_str . sprintf		5574141	0					
ANR	5574311	MemberAccess	tmp_str . sprintf		5574141	0					
ANR	5574312	Identifier	tmp_str		5574141	0					
ANR	5574313	Identifier	sprintf		5574141	1					
ANR	5574314	ArgumentList	"""%d"""		5574141	1					
ANR	5574315	Argument	"""%d"""		5574141	0					
ANR	5574316	PrimaryExpression	"""%d"""		5574141	0					
ANR	5574317	Argument	( int ) get_condor_uid ( )		5574141	1					
ANR	5574318	CastExpression	( int ) get_condor_uid ( )		5574141	0					
ANR	5574319	CastTarget	int		5574141	0					
ANR	5574320	CallExpression	get_condor_uid ( )		5574141	1					
ANR	5574321	Callee	get_condor_uid		5574141	0					
ANR	5574322	Identifier	get_condor_uid		5574141	0					
ANR	5574323	ArgumentList			5574141	1					
ANR	5574324	ExpressionStatement	"SetEnv ( ""VMGAHP_USER_UID"" , tmp_str . Value ( ) )"	421:2:10392:10434	5574141	2	True				
ANR	5574325	CallExpression	"SetEnv ( ""VMGAHP_USER_UID"" , tmp_str . Value ( ) )"		5574141	0					
ANR	5574326	Callee	SetEnv		5574141	0					
ANR	5574327	Identifier	SetEnv		5574141	0					
ANR	5574328	ArgumentList	"""VMGAHP_USER_UID"""		5574141	1					
ANR	5574329	Argument	"""VMGAHP_USER_UID"""		5574141	0					
ANR	5574330	PrimaryExpression	"""VMGAHP_USER_UID"""		5574141	0					
ANR	5574331	Argument	tmp_str . Value ( )		5574141	1					
ANR	5574332	CallExpression	tmp_str . Value ( )		5574141	0					
ANR	5574333	Callee	tmp_str . Value		5574141	0					
ANR	5574334	MemberAccess	tmp_str . Value		5574141	0					
ANR	5574335	Identifier	tmp_str		5574141	0					
ANR	5574336	Identifier	Value		5574141	1					
ANR	5574337	ArgumentList			5574141	1					
ANR	5574338	IdentifierDeclStatement	priv_state prev_priv ;	425:1:10448:10468	5574141	15	True				
ANR	5574339	IdentifierDecl	prev_priv		5574141	0					
ANR	5574340	IdentifierDeclType	priv_state		5574141	0					
ANR	5574341	Identifier	prev_priv		5574141	1					
ANR	5574342	IfStatement	"if ( ( strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_XEN ) == MATCH ) || ( strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_KVM ) == MATCH ) )"		5574141	16					
ANR	5574343	Condition	"( strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_XEN ) == MATCH ) || ( strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_KVM ) == MATCH )"	426:5:10475:10584	5574141	0	True				
ANR	5574344	OrExpression	"( strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_XEN ) == MATCH ) || ( strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_KVM ) == MATCH )"		5574141	0		||			
ANR	5574345	EqualityExpression	"strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_XEN ) == MATCH"		5574141	0		==			
ANR	5574346	CallExpression	"strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_XEN )"		5574141	0					
ANR	5574347	Callee	strcasecmp		5574141	0					
ANR	5574348	Identifier	strcasecmp		5574141	0					
ANR	5574349	ArgumentList	vmtype		5574141	1					
ANR	5574350	Argument	vmtype		5574141	0					
ANR	5574351	Identifier	vmtype		5574141	0					
ANR	5574352	Argument	CONDOR_VM_UNIVERSE_XEN		5574141	1					
ANR	5574353	Identifier	CONDOR_VM_UNIVERSE_XEN		5574141	0					
ANR	5574354	Identifier	MATCH		5574141	1					
ANR	5574355	EqualityExpression	"strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_KVM ) == MATCH"		5574141	1		==			
ANR	5574356	CallExpression	"strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_KVM )"		5574141	0					
ANR	5574357	Callee	strcasecmp		5574141	0					
ANR	5574358	Identifier	strcasecmp		5574141	0					
ANR	5574359	ArgumentList	vmtype		5574141	1					
ANR	5574360	Argument	vmtype		5574141	0					
ANR	5574361	Identifier	vmtype		5574141	0					
ANR	5574362	Argument	CONDOR_VM_UNIVERSE_KVM		5574141	1					
ANR	5574363	Identifier	CONDOR_VM_UNIVERSE_KVM		5574141	0					
ANR	5574364	Identifier	MATCH		5574141	1					
ANR	5574365	CompoundStatement		57:118:1577:1577	5574141	1					
ANR	5574366	ExpressionStatement	prev_priv = set_root_priv ( )	428:2:10625:10652	5574141	0	True				
ANR	5574367	AssignmentExpression	prev_priv = set_root_priv ( )		5574141	0		=			
ANR	5574368	Identifier	prev_priv		5574141	0					
ANR	5574369	CallExpression	set_root_priv ( )		5574141	1					
ANR	5574370	Callee	set_root_priv		5574141	0					
ANR	5574371	Identifier	set_root_priv		5574141	0					
ANR	5574372	ArgumentList			5574141	1					
ANR	5574373	ElseStatement	else		5574141	0					
ANR	5574374	CompoundStatement		60:7:1650:1650	5574141	0					
ANR	5574375	ExpressionStatement	prev_priv = set_condor_priv ( )	430:2:10665:10694	5574141	0	True				
ANR	5574376	AssignmentExpression	prev_priv = set_condor_priv ( )		5574141	0		=			
ANR	5574377	Identifier	prev_priv		5574141	0					
ANR	5574378	CallExpression	set_condor_priv ( )		5574141	1					
ANR	5574379	Callee	set_condor_priv		5574141	0					
ANR	5574380	Identifier	set_condor_priv		5574141	0					
ANR	5574381	ArgumentList			5574141	1					
ANR	5574382	IdentifierDeclStatement	FILE * fp = NULL ;	433:1:10701:10716	5574141	17	True				
ANR	5574383	IdentifierDecl	* fp = NULL		5574141	0					
ANR	5574384	IdentifierDeclType	FILE *		5574141	0					
ANR	5574385	Identifier	fp		5574141	1					
ANR	5574386	AssignmentExpression	* fp = NULL		5574141	2		=			
ANR	5574387	Identifier	NULL		5574141	0					
ANR	5574388	Identifier	NULL		5574141	1					
ANR	5574389	ExpressionStatement	"fp = my_popen ( systemcmd , ""r"" , FALSE )"	434:1:10719:10756	5574141	18	True				
ANR	5574390	AssignmentExpression	"fp = my_popen ( systemcmd , ""r"" , FALSE )"		5574141	0		=			
ANR	5574391	Identifier	fp		5574141	0					
ANR	5574392	CallExpression	"my_popen ( systemcmd , ""r"" , FALSE )"		5574141	1					
ANR	5574393	Callee	my_popen		5574141	0					
ANR	5574394	Identifier	my_popen		5574141	0					
ANR	5574395	ArgumentList	systemcmd		5574141	1					
ANR	5574396	Argument	systemcmd		5574141	0					
ANR	5574397	Identifier	systemcmd		5574141	0					
ANR	5574398	Argument	"""r"""		5574141	1					
ANR	5574399	PrimaryExpression	"""r"""		5574141	0					
ANR	5574400	Argument	FALSE		5574141	2					
ANR	5574401	Identifier	FALSE		5574141	0					
ANR	5574402	ExpressionStatement	set_priv ( prev_priv )	435:1:10759:10778	5574141	19	True				
ANR	5574403	CallExpression	set_priv ( prev_priv )		5574141	0					
ANR	5574404	Callee	set_priv		5574141	0					
ANR	5574405	Identifier	set_priv		5574141	0					
ANR	5574406	ArgumentList	prev_priv		5574141	1					
ANR	5574407	Argument	prev_priv		5574141	0					
ANR	5574408	Identifier	prev_priv		5574141	0					
ANR	5574409	IfStatement	if ( ! fp )		5574141	20					
ANR	5574410	Condition	! fp	437:5:10786:10788	5574141	0	True				
ANR	5574411	UnaryOperationExpression	! fp		5574141	0					
ANR	5574412	UnaryOperator	!		5574141	0					
ANR	5574413	Identifier	fp		5574141	1					
ANR	5574414	CompoundStatement		68:11:1781:1781	5574141	1					
ANR	5574415	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to execute %s, ignoring\\n"" , gahppath )"	438:2:10796:10861	5574141	0	True				
ANR	5574416	CallExpression	"dprintf ( D_ALWAYS , ""Failed to execute %s, ignoring\\n"" , gahppath )"		5574141	0					
ANR	5574417	Callee	dprintf		5574141	0					
ANR	5574418	Identifier	dprintf		5574141	0					
ANR	5574419	ArgumentList	D_ALWAYS		5574141	1					
ANR	5574420	Argument	D_ALWAYS		5574141	0					
ANR	5574421	Identifier	D_ALWAYS		5574141	0					
ANR	5574422	Argument	"""Failed to execute %s, ignoring\\n"""		5574141	1					
ANR	5574423	PrimaryExpression	"""Failed to execute %s, ignoring\\n"""		5574141	0					
ANR	5574424	Argument	gahppath		5574141	2					
ANR	5574425	Identifier	gahppath		5574141	0					
ANR	5574426	ReturnStatement	return false ;	439:2:10865:10877	5574141	1	True				
ANR	5574427	Identifier	false		5574141	0					
ANR	5574428	IdentifierDeclStatement	bool read_something = false ;	442:1:10884:10911	5574141	21	True				
ANR	5574429	IdentifierDecl	read_something = false		5574141	0					
ANR	5574430	IdentifierDeclType	bool		5574141	0					
ANR	5574431	Identifier	read_something		5574141	1					
ANR	5574432	AssignmentExpression	read_something = false		5574141	2		=			
ANR	5574433	Identifier	false		5574141	0					
ANR	5574434	Identifier	false		5574141	1					
ANR	5574435	IdentifierDeclStatement	char buf [ 2048 ] ;	443:1:10914:10928	5574141	22	True				
ANR	5574436	IdentifierDecl	buf [ 2048 ]		5574141	0					
ANR	5574437	IdentifierDeclType	char [ 2048 ]		5574141	0					
ANR	5574438	Identifier	buf		5574141	1					
ANR	5574439	PrimaryExpression	2048		5574141	2					
ANR	5574440	ExpressionStatement	m_vmgahp_info . Clear ( )	445:1:10932:10953	5574141	23	True				
ANR	5574441	CallExpression	m_vmgahp_info . Clear ( )		5574141	0					
ANR	5574442	Callee	m_vmgahp_info . Clear		5574141	0					
ANR	5574443	MemberAccess	m_vmgahp_info . Clear		5574141	0					
ANR	5574444	Identifier	m_vmgahp_info		5574141	0					
ANR	5574445	Identifier	Clear		5574141	1					
ANR	5574446	ArgumentList			5574141	1					
ANR	5574447	WhileStatement	"while ( fgets ( buf , 2048 , fp ) )"		5574141	24					
ANR	5574448	Condition	"fgets ( buf , 2048 , fp )"	446:8:10963:10982	5574141	0	True				
ANR	5574449	CallExpression	"fgets ( buf , 2048 , fp )"		5574141	0					
ANR	5574450	Callee	fgets		5574141	0					
ANR	5574451	Identifier	fgets		5574141	0					
ANR	5574452	ArgumentList	buf		5574141	1					
ANR	5574453	Argument	buf		5574141	0					
ANR	5574454	Identifier	buf		5574141	0					
ANR	5574455	Argument	2048		5574141	1					
ANR	5574456	PrimaryExpression	2048		5574141	0					
ANR	5574457	Argument	fp		5574141	2					
ANR	5574458	Identifier	fp		5574141	0					
ANR	5574459	CompoundStatement		77:31:1975:1975	5574141	1					
ANR	5574460	IfStatement	if ( ! m_vmgahp_info . Insert ( buf ) )		5574141	0					
ANR	5574461	Condition	! m_vmgahp_info . Insert ( buf )	447:6:10994:11019	5574141	0	True				
ANR	5574462	UnaryOperationExpression	! m_vmgahp_info . Insert ( buf )		5574141	0					
ANR	5574463	UnaryOperator	!		5574141	0					
ANR	5574464	CallExpression	m_vmgahp_info . Insert ( buf )		5574141	1					
ANR	5574465	Callee	m_vmgahp_info . Insert		5574141	0					
ANR	5574466	MemberAccess	m_vmgahp_info . Insert		5574141	0					
ANR	5574467	Identifier	m_vmgahp_info		5574141	0					
ANR	5574468	Identifier	Insert		5574141	1					
ANR	5574469	ArgumentList	buf		5574141	1					
ANR	5574470	Argument	buf		5574141	0					
ANR	5574471	Identifier	buf		5574141	0					
ANR	5574472	CompoundStatement		78:35:2012:2012	5574141	1					
ANR	5574473	Statement	dprintf	448:3:11028:11034	5574141	0	True				
ANR	5574474	Statement	(	448:10:11035:11035	5574141	1	True				
ANR	5574475	Statement	D_ALWAYS	448:12:11037:11044	5574141	2	True				
ANR	5574476	Statement	","	448:20:11045:11045	5574141	3	True				
ANR	5574477	Statement	"""Failed to insert \\""%s\\"" into VMInfo, """	448:22:11047:11085	5574141	4	True				
ANR	5574478	Statement	"""ignoring invalid parameter\\n"""	449:6:11093:11122	5574141	5	True				
ANR	5574479	Statement	","	449:36:11123:11123	5574141	6	True				
ANR	5574480	Statement	buf	449:38:11125:11127	5574141	7	True				
ANR	5574481	Statement	)	449:42:11129:11129	5574141	8	True				
ANR	5574482	ExpressionStatement		449:43:11130:11130	5574141	9	True				
ANR	5574483	ContinueStatement	continue ;	450:3:11135:11143	5574141	10	True				
ANR	5574484	ExpressionStatement	read_something = true	452:2:11151:11172	5574141	1	True				
ANR	5574485	AssignmentExpression	read_something = true		5574141	0		=			
ANR	5574486	Identifier	read_something		5574141	0					
ANR	5574487	Identifier	true		5574141	1					
ANR	5574488	ExpressionStatement	my_pclose ( fp )	454:1:11178:11193	5574141	25	True				
ANR	5574489	CallExpression	my_pclose ( fp )		5574141	0					
ANR	5574490	Callee	my_pclose		5574141	0					
ANR	5574491	Identifier	my_pclose		5574141	0					
ANR	5574492	ArgumentList	fp		5574141	1					
ANR	5574493	Argument	fp		5574141	0					
ANR	5574494	Identifier	fp		5574141	0					
ANR	5574495	IfStatement	if ( ! read_something )		5574141	26					
ANR	5574496	Condition	! read_something	455:5:11200:11214	5574141	0	True				
ANR	5574497	UnaryOperationExpression	! read_something		5574141	0					
ANR	5574498	UnaryOperator	!		5574141	0					
ANR	5574499	Identifier	read_something		5574141	1					
ANR	5574500	CompoundStatement		87:2:2211:2231	5574141	1					
ANR	5574501	IdentifierDeclStatement	MyString args_string ;	456:2:11222:11242	5574141	0	True				
ANR	5574502	IdentifierDecl	args_string		5574141	0					
ANR	5574503	IdentifierDeclType	MyString		5574141	0					
ANR	5574504	Identifier	args_string		5574141	1					
ANR	5574505	ExpressionStatement	"systemcmd . GetArgsStringForDisplay ( & args_string , 0 )"	457:2:11246:11295	5574141	1	True				
ANR	5574506	CallExpression	"systemcmd . GetArgsStringForDisplay ( & args_string , 0 )"		5574141	0					
ANR	5574507	Callee	systemcmd . GetArgsStringForDisplay		5574141	0					
ANR	5574508	MemberAccess	systemcmd . GetArgsStringForDisplay		5574141	0					
ANR	5574509	Identifier	systemcmd		5574141	0					
ANR	5574510	Identifier	GetArgsStringForDisplay		5574141	1					
ANR	5574511	ArgumentList	& args_string		5574141	1					
ANR	5574512	Argument	& args_string		5574141	0					
ANR	5574513	UnaryOperationExpression	& args_string		5574141	0					
ANR	5574514	UnaryOperator	&		5574141	0					
ANR	5574515	Identifier	args_string		5574141	1					
ANR	5574516	Argument	0		5574141	1					
ANR	5574517	PrimaryExpression	0		5574141	0					
ANR	5574518	ExpressionStatement	"dprintf ( D_ALWAYS , ""Warning: '%s' did not produce any valid output.\\n"" , args_string . Value ( ) )"	458:2:11299:11403	5574141	2	True				
ANR	5574519	CallExpression	"dprintf ( D_ALWAYS , ""Warning: '%s' did not produce any valid output.\\n"" , args_string . Value ( ) )"		5574141	0					
ANR	5574520	Callee	dprintf		5574141	0					
ANR	5574521	Identifier	dprintf		5574141	0					
ANR	5574522	ArgumentList	D_ALWAYS		5574141	1					
ANR	5574523	Argument	D_ALWAYS		5574141	0					
ANR	5574524	Identifier	D_ALWAYS		5574141	0					
ANR	5574525	Argument	"""Warning: '%s' did not produce any valid output.\\n"""		5574141	1					
ANR	5574526	PrimaryExpression	"""Warning: '%s' did not produce any valid output.\\n"""		5574141	0					
ANR	5574527	Argument	args_string . Value ( )		5574141	2					
ANR	5574528	CallExpression	args_string . Value ( )		5574141	0					
ANR	5574529	Callee	args_string . Value		5574141	0					
ANR	5574530	MemberAccess	args_string . Value		5574141	0					
ANR	5574531	Identifier	args_string		5574141	0					
ANR	5574532	Identifier	Value		5574141	1					
ANR	5574533	ArgumentList			5574141	1					
ANR	5574534	IfStatement	"if ( ( strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_XEN ) == 0 ) )"		5574141	3					
ANR	5574535	Condition	"strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_XEN ) == 0"	461:6:11411:11459	5574141	0	True				
ANR	5574536	EqualityExpression	"strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_XEN ) == 0"		5574141	0		==			
ANR	5574537	CallExpression	"strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_XEN )"		5574141	0					
ANR	5574538	Callee	strcasecmp		5574141	0					
ANR	5574539	Identifier	strcasecmp		5574141	0					
ANR	5574540	ArgumentList	vmtype		5574141	1					
ANR	5574541	Argument	vmtype		5574141	0					
ANR	5574542	Identifier	vmtype		5574141	0					
ANR	5574543	Argument	CONDOR_VM_UNIVERSE_XEN		5574141	1					
ANR	5574544	Identifier	CONDOR_VM_UNIVERSE_XEN		5574141	0					
ANR	5574545	PrimaryExpression	0		5574141	1					
ANR	5574546	CompoundStatement		93:3:2457:2473	5574141	1					
ANR	5574547	IdentifierDeclStatement	MyString err_msg ;	462:3:11468:11484	5574141	0	True				
ANR	5574548	IdentifierDecl	err_msg		5574141	0					
ANR	5574549	IdentifierDeclType	MyString		5574141	0					
ANR	5574550	Identifier	err_msg		5574141	1					
ANR	5574551	ExpressionStatement	"err_msg += ""\\n#######################################################\\n"""	463:3:11489:11561	5574141	1	True				
ANR	5574552	AssignmentExpression	"err_msg += ""\\n#######################################################\\n"""		5574141	0		+=			
ANR	5574553	Identifier	err_msg		5574141	0					
ANR	5574554	PrimaryExpression	"""\\n#######################################################\\n"""		5574141	1					
ANR	5574555	ExpressionStatement	"err_msg += ""##### Make sure the followings """	464:3:11566:11610	5574141	2	True				
ANR	5574556	AssignmentExpression	"err_msg += ""##### Make sure the followings """		5574141	0		+=			
ANR	5574557	Identifier	err_msg		5574141	0					
ANR	5574558	PrimaryExpression	"""##### Make sure the followings """		5574141	1					
ANR	5574559	ExpressionStatement	"err_msg += ""to use VM universe for Xen\\n"""	465:3:11615:11656	5574141	3	True				
ANR	5574560	AssignmentExpression	"err_msg += ""to use VM universe for Xen\\n"""		5574141	0		+=			
ANR	5574561	Identifier	err_msg		5574141	0					
ANR	5574562	PrimaryExpression	"""to use VM universe for Xen\\n"""		5574141	1					
ANR	5574563	ExpressionStatement	"err_msg += ""### - The owner of script progrm like """	466:3:11661:11712	5574141	4	True				
ANR	5574564	AssignmentExpression	"err_msg += ""### - The owner of script progrm like """		5574141	0		+=			
ANR	5574565	Identifier	err_msg		5574141	0					
ANR	5574566	PrimaryExpression	"""### - The owner of script progrm like """		5574141	1					
ANR	5574567	ExpressionStatement	"err_msg += ""'condor_vm_xen.sh' must be root\\n"""	467:3:11717:11763	5574141	5	True				
ANR	5574568	AssignmentExpression	"err_msg += ""'condor_vm_xen.sh' must be root\\n"""		5574141	0		+=			
ANR	5574569	Identifier	err_msg		5574141	0					
ANR	5574570	PrimaryExpression	"""'condor_vm_xen.sh' must be root\\n"""		5574141	1					
ANR	5574571	ExpressionStatement	"err_msg += ""### - The script program must be executable\\n"""	468:3:11768:11826	5574141	6	True				
ANR	5574572	AssignmentExpression	"err_msg += ""### - The script program must be executable\\n"""		5574141	0		+=			
ANR	5574573	Identifier	err_msg		5574141	0					
ANR	5574574	PrimaryExpression	"""### - The script program must be executable\\n"""		5574141	1					
ANR	5574575	ExpressionStatement	"err_msg += ""### - Other writable bit for the above files is """	469:3:11831:11892	5574141	7	True				
ANR	5574576	AssignmentExpression	"err_msg += ""### - Other writable bit for the above files is """		5574141	0		+=			
ANR	5574577	Identifier	err_msg		5574141	0					
ANR	5574578	PrimaryExpression	"""### - Other writable bit for the above files is """		5574141	1					
ANR	5574579	ExpressionStatement	"err_msg += ""not allowed.\\n"""	470:3:11897:11924	5574141	8	True				
ANR	5574580	AssignmentExpression	"err_msg += ""not allowed.\\n"""		5574141	0		+=			
ANR	5574581	Identifier	err_msg		5574141	0					
ANR	5574582	PrimaryExpression	"""not allowed.\\n"""		5574141	1					
ANR	5574583	ExpressionStatement	"err_msg += ""#########################################################\\n"""	471:3:11929:12001	5574141	9	True				
ANR	5574584	AssignmentExpression	"err_msg += ""#########################################################\\n"""		5574141	0		+=			
ANR	5574585	Identifier	err_msg		5574141	0					
ANR	5574586	PrimaryExpression	"""#########################################################\\n"""		5574141	1					
ANR	5574587	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s"" , err_msg . Value ( ) )"	472:3:12006:12047	5574141	10	True				
ANR	5574588	CallExpression	"dprintf ( D_ALWAYS , ""%s"" , err_msg . Value ( ) )"		5574141	0					
ANR	5574589	Callee	dprintf		5574141	0					
ANR	5574590	Identifier	dprintf		5574141	0					
ANR	5574591	ArgumentList	D_ALWAYS		5574141	1					
ANR	5574592	Argument	D_ALWAYS		5574141	0					
ANR	5574593	Identifier	D_ALWAYS		5574141	0					
ANR	5574594	Argument	"""%s"""		5574141	1					
ANR	5574595	PrimaryExpression	"""%s"""		5574141	0					
ANR	5574596	Argument	err_msg . Value ( )		5574141	2					
ANR	5574597	CallExpression	err_msg . Value ( )		5574141	0					
ANR	5574598	Callee	err_msg . Value		5574141	0					
ANR	5574599	MemberAccess	err_msg . Value		5574141	0					
ANR	5574600	Identifier	err_msg		5574141	0					
ANR	5574601	Identifier	Value		5574141	1					
ANR	5574602	ArgumentList			5574141	1					
ANR	5574603	ElseStatement	else		5574141	0					
ANR	5574604	IfStatement	"if ( ( strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_KVM ) == 0 ) )"		5574141	0					
ANR	5574605	Condition	"strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_KVM ) == 0"	473:13:12062:12110	5574141	0	True				
ANR	5574606	EqualityExpression	"strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_KVM ) == 0"		5574141	0		==			
ANR	5574607	CallExpression	"strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_KVM )"		5574141	0					
ANR	5574608	Callee	strcasecmp		5574141	0					
ANR	5574609	Identifier	strcasecmp		5574141	0					
ANR	5574610	ArgumentList	vmtype		5574141	1					
ANR	5574611	Argument	vmtype		5574141	0					
ANR	5574612	Identifier	vmtype		5574141	0					
ANR	5574613	Argument	CONDOR_VM_UNIVERSE_KVM		5574141	1					
ANR	5574614	Identifier	CONDOR_VM_UNIVERSE_KVM		5574141	0					
ANR	5574615	PrimaryExpression	0		5574141	1					
ANR	5574616	CompoundStatement		105:10:3114:3130	5574141	1					
ANR	5574617	IdentifierDeclStatement	MyString err_msg ;	474:10:12125:12141	5574141	0	True				
ANR	5574618	IdentifierDecl	err_msg		5574141	0					
ANR	5574619	IdentifierDeclType	MyString		5574141	0					
ANR	5574620	Identifier	err_msg		5574141	1					
ANR	5574621	ExpressionStatement	"err_msg += ""\\n#######################################################\\n"""	475:3:12146:12218	5574141	1	True				
ANR	5574622	AssignmentExpression	"err_msg += ""\\n#######################################################\\n"""		5574141	0		+=			
ANR	5574623	Identifier	err_msg		5574141	0					
ANR	5574624	PrimaryExpression	"""\\n#######################################################\\n"""		5574141	1					
ANR	5574625	ExpressionStatement	"err_msg += ""##### Make sure the followings """	476:3:12223:12267	5574141	2	True				
ANR	5574626	AssignmentExpression	"err_msg += ""##### Make sure the followings """		5574141	0		+=			
ANR	5574627	Identifier	err_msg		5574141	0					
ANR	5574628	PrimaryExpression	"""##### Make sure the followings """		5574141	1					
ANR	5574629	ExpressionStatement	"err_msg += ""to use VM universe for KVM\\n"""	477:3:12272:12313	5574141	3	True				
ANR	5574630	AssignmentExpression	"err_msg += ""to use VM universe for KVM\\n"""		5574141	0		+=			
ANR	5574631	Identifier	err_msg		5574141	0					
ANR	5574632	PrimaryExpression	"""to use VM universe for KVM\\n"""		5574141	1					
ANR	5574633	ExpressionStatement	"err_msg += ""### - The owner of script progrm like """	478:3:12318:12369	5574141	4	True				
ANR	5574634	AssignmentExpression	"err_msg += ""### - The owner of script progrm like """		5574141	0		+=			
ANR	5574635	Identifier	err_msg		5574141	0					
ANR	5574636	PrimaryExpression	"""### - The owner of script progrm like """		5574141	1					
ANR	5574637	ExpressionStatement	"err_msg += ""'condor_vm_xen.sh' must be root\\n"""	479:3:12374:12420	5574141	5	True				
ANR	5574638	AssignmentExpression	"err_msg += ""'condor_vm_xen.sh' must be root\\n"""		5574141	0		+=			
ANR	5574639	Identifier	err_msg		5574141	0					
ANR	5574640	PrimaryExpression	"""'condor_vm_xen.sh' must be root\\n"""		5574141	1					
ANR	5574641	ExpressionStatement	"err_msg += ""### - The script program must be executable\\n"""	480:3:12425:12483	5574141	6	True				
ANR	5574642	AssignmentExpression	"err_msg += ""### - The script program must be executable\\n"""		5574141	0		+=			
ANR	5574643	Identifier	err_msg		5574141	0					
ANR	5574644	PrimaryExpression	"""### - The script program must be executable\\n"""		5574141	1					
ANR	5574645	ExpressionStatement	"err_msg += ""### - Other writable bit for the above files is """	481:3:12488:12549	5574141	7	True				
ANR	5574646	AssignmentExpression	"err_msg += ""### - Other writable bit for the above files is """		5574141	0		+=			
ANR	5574647	Identifier	err_msg		5574141	0					
ANR	5574648	PrimaryExpression	"""### - Other writable bit for the above files is """		5574141	1					
ANR	5574649	ExpressionStatement	"err_msg += ""not allowed.\\n"""	482:3:12554:12581	5574141	8	True				
ANR	5574650	AssignmentExpression	"err_msg += ""not allowed.\\n"""		5574141	0		+=			
ANR	5574651	Identifier	err_msg		5574141	0					
ANR	5574652	PrimaryExpression	"""not allowed.\\n"""		5574141	1					
ANR	5574653	ExpressionStatement	"err_msg += ""#########################################################\\n"""	483:3:12586:12658	5574141	9	True				
ANR	5574654	AssignmentExpression	"err_msg += ""#########################################################\\n"""		5574141	0		+=			
ANR	5574655	Identifier	err_msg		5574141	0					
ANR	5574656	PrimaryExpression	"""#########################################################\\n"""		5574141	1					
ANR	5574657	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s"" , err_msg . Value ( ) )"	484:3:12663:12704	5574141	10	True				
ANR	5574658	CallExpression	"dprintf ( D_ALWAYS , ""%s"" , err_msg . Value ( ) )"		5574141	0					
ANR	5574659	Callee	dprintf		5574141	0					
ANR	5574660	Identifier	dprintf		5574141	0					
ANR	5574661	ArgumentList	D_ALWAYS		5574141	1					
ANR	5574662	Argument	D_ALWAYS		5574141	0					
ANR	5574663	Identifier	D_ALWAYS		5574141	0					
ANR	5574664	Argument	"""%s"""		5574141	1					
ANR	5574665	PrimaryExpression	"""%s"""		5574141	0					
ANR	5574666	Argument	err_msg . Value ( )		5574141	2					
ANR	5574667	CallExpression	err_msg . Value ( )		5574141	0					
ANR	5574668	Callee	err_msg . Value		5574141	0					
ANR	5574669	MemberAccess	err_msg . Value		5574141	0					
ANR	5574670	Identifier	err_msg		5574141	0					
ANR	5574671	Identifier	Value		5574141	1					
ANR	5574672	ArgumentList			5574141	1					
ANR	5574673	ElseStatement	else		5574141	0					
ANR	5574674	IfStatement	"if ( strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_VMWARE ) == 0 )"		5574141	0					
ANR	5574675	Condition	"strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_VMWARE ) == 0"	485:12:12718:12768	5574141	0	True				
ANR	5574676	EqualityExpression	"strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_VMWARE ) == 0"		5574141	0		==			
ANR	5574677	CallExpression	"strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_VMWARE )"		5574141	0					
ANR	5574678	Callee	strcasecmp		5574141	0					
ANR	5574679	Identifier	strcasecmp		5574141	0					
ANR	5574680	ArgumentList	vmtype		5574141	1					
ANR	5574681	Argument	vmtype		5574141	0					
ANR	5574682	Identifier	vmtype		5574141	0					
ANR	5574683	Argument	CONDOR_VM_UNIVERSE_VMWARE		5574141	1					
ANR	5574684	Identifier	CONDOR_VM_UNIVERSE_VMWARE		5574141	0					
ANR	5574685	PrimaryExpression	0		5574141	1					
ANR	5574686	CompoundStatement		118:3:3787:3804	5574141	1					
ANR	5574687	IdentifierDeclStatement	MyString err_msg ;	486:3:12777:12793	5574141	0	True				
ANR	5574688	IdentifierDecl	err_msg		5574141	0					
ANR	5574689	IdentifierDeclType	MyString		5574141	0					
ANR	5574690	Identifier	err_msg		5574141	1					
ANR	5574691	IdentifierDeclStatement	MyString err_msg2 ;	487:3:12798:12815	5574141	1	True				
ANR	5574692	IdentifierDecl	err_msg2		5574141	0					
ANR	5574693	IdentifierDeclType	MyString		5574141	0					
ANR	5574694	Identifier	err_msg2		5574141	1					
ANR	5574695	ExpressionStatement	"err_msg += ""\\n#######################################################\\n"""	488:3:12820:12892	5574141	2	True				
ANR	5574696	AssignmentExpression	"err_msg += ""\\n#######################################################\\n"""		5574141	0		+=			
ANR	5574697	Identifier	err_msg		5574141	0					
ANR	5574698	PrimaryExpression	"""\\n#######################################################\\n"""		5574141	1					
ANR	5574699	ExpressionStatement	"err_msg += ""##### Make sure the followings """	489:3:12897:12941	5574141	3	True				
ANR	5574700	AssignmentExpression	"err_msg += ""##### Make sure the followings """		5574141	0		+=			
ANR	5574701	Identifier	err_msg		5574141	0					
ANR	5574702	PrimaryExpression	"""##### Make sure the followings """		5574141	1					
ANR	5574703	ExpressionStatement	"err_msg += ""to use VM universe for VMware\\n"""	490:3:12946:12990	5574141	4	True				
ANR	5574704	AssignmentExpression	"err_msg += ""to use VM universe for VMware\\n"""		5574141	0		+=			
ANR	5574705	Identifier	err_msg		5574141	0					
ANR	5574706	PrimaryExpression	"""to use VM universe for VMware\\n"""		5574141	1					
ANR	5574707	IfStatement	if ( can_switch_ids ( ) )		5574141	5					
ANR	5574708	Condition	can_switch_ids ( )	492:7:13000:13015	5574141	0	True				
ANR	5574709	CallExpression	can_switch_ids ( )		5574141	0					
ANR	5574710	Callee	can_switch_ids		5574141	0					
ANR	5574711	Identifier	can_switch_ids		5574141	0					
ANR	5574712	ArgumentList			5574141	1					
ANR	5574713	CompoundStatement		123:26:4008:4008	5574141	1					
ANR	5574714	ExpressionStatement	"err_msg += ""### - The script program like 'condor_vm_vmware.pl'"""	494:4:13052:13116	5574141	0	True				
ANR	5574715	AssignmentExpression	"err_msg += ""### - The script program like 'condor_vm_vmware.pl'"""		5574141	0		+=			
ANR	5574716	Identifier	err_msg		5574141	0					
ANR	5574717	PrimaryExpression	"""### - The script program like 'condor_vm_vmware.pl'"""		5574141	1					
ANR	5574718	ExpressionStatement	"err_msg += "" must be readable for anybody.\\n"""	495:4:13122:13167	5574141	1	True				
ANR	5574719	AssignmentExpression	"err_msg += "" must be readable for anybody.\\n"""		5574141	0		+=			
ANR	5574720	Identifier	err_msg		5574141	0					
ANR	5574721	PrimaryExpression	""" must be readable for anybody.\\n"""		5574141	1					
ANR	5574722	ExpressionStatement	"err_msg += ""### - Check the path of vmware-cmd, vmrun, and mkisofs """	498:3:13178:13246	5574141	6	True				
ANR	5574723	AssignmentExpression	"err_msg += ""### - Check the path of vmware-cmd, vmrun, and mkisofs """		5574141	0		+=			
ANR	5574724	Identifier	err_msg		5574141	0					
ANR	5574725	PrimaryExpression	"""### - Check the path of vmware-cmd, vmrun, and mkisofs """		5574141	1					
ANR	5574726	ExpressionStatement	"err_msg += ""in 'condor_vm_vmware.pl\\n'"""	499:3:13251:13290	5574141	7	True				
ANR	5574727	AssignmentExpression	"err_msg += ""in 'condor_vm_vmware.pl\\n'"""		5574141	0		+=			
ANR	5574728	Identifier	err_msg		5574141	0					
ANR	5574729	PrimaryExpression	"""in 'condor_vm_vmware.pl\\n'"""		5574141	1					
ANR	5574730	ExpressionStatement	"err_msg += ""#########################################################\\n"""	500:3:13295:13367	5574141	8	True				
ANR	5574731	AssignmentExpression	"err_msg += ""#########################################################\\n"""		5574141	0		+=			
ANR	5574732	Identifier	err_msg		5574141	0					
ANR	5574733	PrimaryExpression	"""#########################################################\\n"""		5574141	1					
ANR	5574734	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s"" , err_msg . Value ( ) )"	501:3:13372:13413	5574141	9	True				
ANR	5574735	CallExpression	"dprintf ( D_ALWAYS , ""%s"" , err_msg . Value ( ) )"		5574141	0					
ANR	5574736	Callee	dprintf		5574141	0					
ANR	5574737	Identifier	dprintf		5574141	0					
ANR	5574738	ArgumentList	D_ALWAYS		5574141	1					
ANR	5574739	Argument	D_ALWAYS		5574141	0					
ANR	5574740	Identifier	D_ALWAYS		5574141	0					
ANR	5574741	Argument	"""%s"""		5574141	1					
ANR	5574742	PrimaryExpression	"""%s"""		5574141	0					
ANR	5574743	Argument	err_msg . Value ( )		5574141	2					
ANR	5574744	CallExpression	err_msg . Value ( )		5574141	0					
ANR	5574745	Callee	err_msg . Value		5574141	0					
ANR	5574746	MemberAccess	err_msg . Value		5574141	0					
ANR	5574747	Identifier	err_msg		5574141	0					
ANR	5574748	Identifier	Value		5574141	1					
ANR	5574749	ArgumentList			5574141	1					
ANR	5574750	ReturnStatement	return false ;	503:2:13421:13433	5574141	4	True				
ANR	5574751	Identifier	false		5574141	0					
ANR	5574752	ExpressionStatement	printVMGahpInfo ( D_ALWAYS )	507:1:13454:13479	5574141	27	True				
ANR	5574753	CallExpression	printVMGahpInfo ( D_ALWAYS )		5574141	0					
ANR	5574754	Callee	printVMGahpInfo		5574141	0					
ANR	5574755	Identifier	printVMGahpInfo		5574141	0					
ANR	5574756	ArgumentList	D_ALWAYS		5574141	1					
ANR	5574757	Argument	D_ALWAYS		5574141	0					
ANR	5574758	Identifier	D_ALWAYS		5574141	0					
ANR	5574759	IdentifierDeclStatement	MyString tmp_vmtype ;	510:1:13500:13519	5574141	28	True				
ANR	5574760	IdentifierDecl	tmp_vmtype		5574141	0					
ANR	5574761	IdentifierDeclType	MyString		5574141	0					
ANR	5574762	Identifier	tmp_vmtype		5574141	1					
ANR	5574763	IfStatement	"if ( m_vmgahp_info . LookupString ( ATTR_VM_TYPE , tmp_vmtype ) != 1 )"		5574141	29					
ANR	5574764	Condition	"m_vmgahp_info . LookupString ( ATTR_VM_TYPE , tmp_vmtype ) != 1"	511:5:13526:13583	5574141	0	True				
ANR	5574765	EqualityExpression	"m_vmgahp_info . LookupString ( ATTR_VM_TYPE , tmp_vmtype ) != 1"		5574141	0		!=			
ANR	5574766	CallExpression	"m_vmgahp_info . LookupString ( ATTR_VM_TYPE , tmp_vmtype )"		5574141	0					
ANR	5574767	Callee	m_vmgahp_info . LookupString		5574141	0					
ANR	5574768	MemberAccess	m_vmgahp_info . LookupString		5574141	0					
ANR	5574769	Identifier	m_vmgahp_info		5574141	0					
ANR	5574770	Identifier	LookupString		5574141	1					
ANR	5574771	ArgumentList	ATTR_VM_TYPE		5574141	1					
ANR	5574772	Argument	ATTR_VM_TYPE		5574141	0					
ANR	5574773	Identifier	ATTR_VM_TYPE		5574141	0					
ANR	5574774	Argument	tmp_vmtype		5574141	1					
ANR	5574775	Identifier	tmp_vmtype		5574141	0					
ANR	5574776	PrimaryExpression	1		5574141	1					
ANR	5574777	CompoundStatement		142:66:4576:4576	5574141	1					
ANR	5574778	Statement	dprintf	512:2:13591:13597	5574141	0	True				
ANR	5574779	Statement	(	512:9:13598:13598	5574141	1	True				
ANR	5574780	Statement	D_ALWAYS	512:11:13600:13607	5574141	2	True				
ANR	5574781	Statement	","	512:19:13608:13608	5574141	3	True				
ANR	5574782	Statement	"""There is no %s in the output of vmgahp. """	512:21:13610:13651	5574141	4	True				
ANR	5574783	Statement	"""So VM Universe will be disabled\\n"""	513:4:13657:13691	5574141	5	True				
ANR	5574784	Statement	","	513:39:13692:13692	5574141	6	True				
ANR	5574785	Statement	ATTR_VM_TYPE	513:41:13694:13705	5574141	7	True				
ANR	5574786	Statement	)	513:53:13706:13706	5574141	8	True				
ANR	5574787	ExpressionStatement		513:54:13707:13707	5574141	9	True				
ANR	5574788	ReturnStatement	return false ;	514:2:13711:13723	5574141	10	True				
ANR	5574789	Identifier	false		5574141	0					
ANR	5574790	IfStatement	"if ( strcasecmp ( tmp_vmtype . Value ( ) , vmtype ) != 0 )"		5574141	30					
ANR	5574791	Condition	"strcasecmp ( tmp_vmtype . Value ( ) , vmtype ) != 0"	516:5:13733:13775	5574141	0	True				
ANR	5574792	EqualityExpression	"strcasecmp ( tmp_vmtype . Value ( ) , vmtype ) != 0"		5574141	0		!=			
ANR	5574793	CallExpression	"strcasecmp ( tmp_vmtype . Value ( ) , vmtype )"		5574141	0					
ANR	5574794	Callee	strcasecmp		5574141	0					
ANR	5574795	Identifier	strcasecmp		5574141	0					
ANR	5574796	ArgumentList	tmp_vmtype . Value ( )		5574141	1					
ANR	5574797	Argument	tmp_vmtype . Value ( )		5574141	0					
ANR	5574798	CallExpression	tmp_vmtype . Value ( )		5574141	0					
ANR	5574799	Callee	tmp_vmtype . Value		5574141	0					
ANR	5574800	MemberAccess	tmp_vmtype . Value		5574141	0					
ANR	5574801	Identifier	tmp_vmtype		5574141	0					
ANR	5574802	Identifier	Value		5574141	1					
ANR	5574803	ArgumentList			5574141	1					
ANR	5574804	Argument	vmtype		5574141	1					
ANR	5574805	Identifier	vmtype		5574141	0					
ANR	5574806	PrimaryExpression	0		5574141	1					
ANR	5574807	CompoundStatement		147:51:4768:4768	5574141	1					
ANR	5574808	ExpressionStatement	"dprintf ( D_ALWAYS , ""The vmgahp(%s) doesn't support this vmtype(%s)\\n"" , gahppath , vmtype )"	517:2:13783:13875	5574141	0	True				
ANR	5574809	CallExpression	"dprintf ( D_ALWAYS , ""The vmgahp(%s) doesn't support this vmtype(%s)\\n"" , gahppath , vmtype )"		5574141	0					
ANR	5574810	Callee	dprintf		5574141	0					
ANR	5574811	Identifier	dprintf		5574141	0					
ANR	5574812	ArgumentList	D_ALWAYS		5574141	1					
ANR	5574813	Argument	D_ALWAYS		5574141	0					
ANR	5574814	Identifier	D_ALWAYS		5574141	0					
ANR	5574815	Argument	"""The vmgahp(%s) doesn't support this vmtype(%s)\\n"""		5574141	1					
ANR	5574816	PrimaryExpression	"""The vmgahp(%s) doesn't support this vmtype(%s)\\n"""		5574141	0					
ANR	5574817	Argument	gahppath		5574141	2					
ANR	5574818	Identifier	gahppath		5574141	0					
ANR	5574819	Argument	vmtype		5574141	3					
ANR	5574820	Identifier	vmtype		5574141	0					
ANR	5574821	ReturnStatement	return false ;	519:2:13879:13891	5574141	1	True				
ANR	5574822	Identifier	false		5574141	0					
ANR	5574823	ExpressionStatement	"dprintf ( D_ALWAYS , ""VMType('%s') is supported\\n"" , vmtype )"	521:1:13897:13954	5574141	31	True				
ANR	5574824	CallExpression	"dprintf ( D_ALWAYS , ""VMType('%s') is supported\\n"" , vmtype )"		5574141	0					
ANR	5574825	Callee	dprintf		5574141	0					
ANR	5574826	Identifier	dprintf		5574141	0					
ANR	5574827	ArgumentList	D_ALWAYS		5574141	1					
ANR	5574828	Argument	D_ALWAYS		5574141	0					
ANR	5574829	Identifier	D_ALWAYS		5574141	0					
ANR	5574830	Argument	"""VMType('%s') is supported\\n"""		5574141	1					
ANR	5574831	PrimaryExpression	"""VMType('%s') is supported\\n"""		5574141	0					
ANR	5574832	Argument	vmtype		5574141	2					
ANR	5574833	Identifier	vmtype		5574141	0					
ANR	5574834	IfStatement	"if ( m_vmgahp_info . LookupInteger ( ATTR_VM_MEMORY , m_vm_max_memory ) != 1 )"		5574141	32					
ANR	5574835	Condition	"m_vmgahp_info . LookupInteger ( ATTR_VM_MEMORY , m_vm_max_memory ) != 1"	524:5:13981:14045	5574141	0	True				
ANR	5574836	EqualityExpression	"m_vmgahp_info . LookupInteger ( ATTR_VM_MEMORY , m_vm_max_memory ) != 1"		5574141	0		!=			
ANR	5574837	CallExpression	"m_vmgahp_info . LookupInteger ( ATTR_VM_MEMORY , m_vm_max_memory )"		5574141	0					
ANR	5574838	Callee	m_vmgahp_info . LookupInteger		5574141	0					
ANR	5574839	MemberAccess	m_vmgahp_info . LookupInteger		5574141	0					
ANR	5574840	Identifier	m_vmgahp_info		5574141	0					
ANR	5574841	Identifier	LookupInteger		5574141	1					
ANR	5574842	ArgumentList	ATTR_VM_MEMORY		5574141	1					
ANR	5574843	Argument	ATTR_VM_MEMORY		5574141	0					
ANR	5574844	Identifier	ATTR_VM_MEMORY		5574141	0					
ANR	5574845	Argument	m_vm_max_memory		5574141	1					
ANR	5574846	Identifier	m_vm_max_memory		5574141	0					
ANR	5574847	PrimaryExpression	1		5574141	1					
ANR	5574848	CompoundStatement		155:73:5038:5038	5574141	1					
ANR	5574849	ExpressionStatement	"dprintf ( D_ALWAYS , ""There is no %s in the output of vmgahp\\n"" , ATTR_VM_MEMORY )"	525:2:14053:14130	5574141	0	True				
ANR	5574850	CallExpression	"dprintf ( D_ALWAYS , ""There is no %s in the output of vmgahp\\n"" , ATTR_VM_MEMORY )"		5574141	0					
ANR	5574851	Callee	dprintf		5574141	0					
ANR	5574852	Identifier	dprintf		5574141	0					
ANR	5574853	ArgumentList	D_ALWAYS		5574141	1					
ANR	5574854	Argument	D_ALWAYS		5574141	0					
ANR	5574855	Identifier	D_ALWAYS		5574141	0					
ANR	5574856	Argument	"""There is no %s in the output of vmgahp\\n"""		5574141	1					
ANR	5574857	PrimaryExpression	"""There is no %s in the output of vmgahp\\n"""		5574141	0					
ANR	5574858	Argument	ATTR_VM_MEMORY		5574141	2					
ANR	5574859	Identifier	ATTR_VM_MEMORY		5574141	0					
ANR	5574860	ReturnStatement	return false ;	526:2:14134:14146	5574141	1	True				
ANR	5574861	Identifier	false		5574141	0					
ANR	5574862	IfStatement	if ( m_vm_max_memory == 0 )		5574141	33					
ANR	5574863	Condition	m_vm_max_memory == 0	528:5:14156:14175	5574141	0	True				
ANR	5574864	EqualityExpression	m_vm_max_memory == 0		5574141	0		==			
ANR	5574865	Identifier	m_vm_max_memory		5574141	0					
ANR	5574866	PrimaryExpression	0		5574141	1					
ANR	5574867	CompoundStatement		159:28:5168:5168	5574141	1					
ANR	5574868	ExpressionStatement	"dprintf ( D_ALWAYS , ""There is no sufficient memory for virtual machines\\n"" )"	529:2:14183:14257	5574141	0	True				
ANR	5574869	CallExpression	"dprintf ( D_ALWAYS , ""There is no sufficient memory for virtual machines\\n"" )"		5574141	0					
ANR	5574870	Callee	dprintf		5574141	0					
ANR	5574871	Identifier	dprintf		5574141	0					
ANR	5574872	ArgumentList	D_ALWAYS		5574141	1					
ANR	5574873	Argument	D_ALWAYS		5574141	0					
ANR	5574874	Identifier	D_ALWAYS		5574141	0					
ANR	5574875	Argument	"""There is no sufficient memory for virtual machines\\n"""		5574141	1					
ANR	5574876	PrimaryExpression	"""There is no sufficient memory for virtual machines\\n"""		5574141	0					
ANR	5574877	ReturnStatement	return false ;	530:2:14261:14273	5574141	1	True				
ANR	5574878	Identifier	false		5574141	0					
ANR	5574879	Statement	dprintf	533:1:14280:14286	5574141	34	True				
ANR	5574880	Statement	(	533:8:14287:14287	5574141	35	True				
ANR	5574881	Statement	D_ALWAYS	533:10:14289:14296	5574141	36	True				
ANR	5574882	Statement	","	533:18:14297:14297	5574141	37	True				
ANR	5574883	Statement	"""The maximum available memory for vm universe is """	533:20:14299:14348	5574141	38	True				
ANR	5574884	Statement	"""set to %d MB\\n"""	534:3:14353:14368	5574141	39	True				
ANR	5574885	Statement	","	534:19:14369:14369	5574141	40	True				
ANR	5574886	Statement	m_vm_max_memory	534:21:14371:14385	5574141	41	True				
ANR	5574887	Statement	)	534:36:14386:14386	5574141	42	True				
ANR	5574888	ExpressionStatement		534:37:14387:14387	5574141	43	True				
ANR	5574889	IdentifierDeclStatement	bool tmp_networking = false ;	537:1:14414:14441	5574141	44	True				
ANR	5574890	IdentifierDecl	tmp_networking = false		5574141	0					
ANR	5574891	IdentifierDeclType	bool		5574141	0					
ANR	5574892	Identifier	tmp_networking		5574141	1					
ANR	5574893	AssignmentExpression	tmp_networking = false		5574141	2		=			
ANR	5574894	Identifier	false		5574141	0					
ANR	5574895	Identifier	false		5574141	1					
ANR	5574896	IdentifierDeclStatement	MyString tmp_networking_types ;	538:1:14444:14473	5574141	45	True				
ANR	5574897	IdentifierDecl	tmp_networking_types		5574141	0					
ANR	5574898	IdentifierDeclType	MyString		5574141	0					
ANR	5574899	Identifier	tmp_networking_types		5574141	1					
ANR	5574900	ExpressionStatement	"m_vmgahp_info . LookupBool ( ATTR_VM_NETWORKING , tmp_networking )"	540:1:14477:14537	5574141	46	True				
ANR	5574901	CallExpression	"m_vmgahp_info . LookupBool ( ATTR_VM_NETWORKING , tmp_networking )"		5574141	0					
ANR	5574902	Callee	m_vmgahp_info . LookupBool		5574141	0					
ANR	5574903	MemberAccess	m_vmgahp_info . LookupBool		5574141	0					
ANR	5574904	Identifier	m_vmgahp_info		5574141	0					
ANR	5574905	Identifier	LookupBool		5574141	1					
ANR	5574906	ArgumentList	ATTR_VM_NETWORKING		5574141	1					
ANR	5574907	Argument	ATTR_VM_NETWORKING		5574141	0					
ANR	5574908	Identifier	ATTR_VM_NETWORKING		5574141	0					
ANR	5574909	Argument	tmp_networking		5574141	1					
ANR	5574910	Identifier	tmp_networking		5574141	0					
ANR	5574911	IfStatement	if ( tmp_networking )		5574141	47					
ANR	5574912	Condition	tmp_networking	541:5:14544:14557	5574141	0	True				
ANR	5574913	Identifier	tmp_networking		5574141	0					
ANR	5574914	CompoundStatement		172:22:5550:5550	5574141	1					
ANR	5574915	IfStatement	"if ( m_vmgahp_info . LookupString ( ATTR_VM_NETWORKING_TYPES , tmp_networking_types ) != 1 )"		5574141	0					
ANR	5574916	Condition	"m_vmgahp_info . LookupString ( ATTR_VM_NETWORKING_TYPES , tmp_networking_types ) != 1"	542:6:14569:14654	5574141	0	True				
ANR	5574917	EqualityExpression	"m_vmgahp_info . LookupString ( ATTR_VM_NETWORKING_TYPES , tmp_networking_types ) != 1"		5574141	0		!=			
ANR	5574918	CallExpression	"m_vmgahp_info . LookupString ( ATTR_VM_NETWORKING_TYPES , tmp_networking_types )"		5574141	0					
ANR	5574919	Callee	m_vmgahp_info . LookupString		5574141	0					
ANR	5574920	MemberAccess	m_vmgahp_info . LookupString		5574141	0					
ANR	5574921	Identifier	m_vmgahp_info		5574141	0					
ANR	5574922	Identifier	LookupString		5574141	1					
ANR	5574923	ArgumentList	ATTR_VM_NETWORKING_TYPES		5574141	1					
ANR	5574924	Argument	ATTR_VM_NETWORKING_TYPES		5574141	0					
ANR	5574925	Identifier	ATTR_VM_NETWORKING_TYPES		5574141	0					
ANR	5574926	Argument	tmp_networking_types		5574141	1					
ANR	5574927	Identifier	tmp_networking_types		5574141	0					
ANR	5574928	PrimaryExpression	1		5574141	1					
ANR	5574929	CompoundStatement		174:34:5647:5647	5574141	1					
ANR	5574930	ExpressionStatement	tmp_networking = false	544:3:14663:14685	5574141	0	True				
ANR	5574931	AssignmentExpression	tmp_networking = false		5574141	0		=			
ANR	5574932	Identifier	tmp_networking		5574141	0					
ANR	5574933	Identifier	false		5574141	1					
ANR	5574934	ExpressionStatement	"m_vmgahp_info . Assign ( ATTR_VM_NETWORKING , false )"	545:3:14690:14737	5574141	1	True				
ANR	5574935	CallExpression	"m_vmgahp_info . Assign ( ATTR_VM_NETWORKING , false )"		5574141	0					
ANR	5574936	Callee	m_vmgahp_info . Assign		5574141	0					
ANR	5574937	MemberAccess	m_vmgahp_info . Assign		5574141	0					
ANR	5574938	Identifier	m_vmgahp_info		5574141	0					
ANR	5574939	Identifier	Assign		5574141	1					
ANR	5574940	ArgumentList	ATTR_VM_NETWORKING		5574141	1					
ANR	5574941	Argument	ATTR_VM_NETWORKING		5574141	0					
ANR	5574942	Identifier	ATTR_VM_NETWORKING		5574141	0					
ANR	5574943	Argument	false		5574141	1					
ANR	5574944	Identifier	false		5574141	0					
ANR	5574945	ExpressionStatement	"m_vm_networking = param_boolean ( ""VM_NETWORKING"" , false )"	549:1:14748:14802	5574141	48	True				
ANR	5574946	AssignmentExpression	"m_vm_networking = param_boolean ( ""VM_NETWORKING"" , false )"		5574141	0		=			
ANR	5574947	Identifier	m_vm_networking		5574141	0					
ANR	5574948	CallExpression	"param_boolean ( ""VM_NETWORKING"" , false )"		5574141	1					
ANR	5574949	Callee	param_boolean		5574141	0					
ANR	5574950	Identifier	param_boolean		5574141	0					
ANR	5574951	ArgumentList	"""VM_NETWORKING"""		5574141	1					
ANR	5574952	Argument	"""VM_NETWORKING"""		5574141	0					
ANR	5574953	PrimaryExpression	"""VM_NETWORKING"""		5574141	0					
ANR	5574954	Argument	false		5574141	1					
ANR	5574955	Identifier	false		5574141	0					
ANR	5574956	IfStatement	if ( m_vm_networking )		5574141	49					
ANR	5574957	Condition	m_vm_networking	550:5:14809:14823	5574141	0	True				
ANR	5574958	Identifier	m_vm_networking		5574141	0					
ANR	5574959	CompoundStatement		181:23:5816:5816	5574141	1					
ANR	5574960	IfStatement	if ( ! tmp_networking )		5574141	0					
ANR	5574961	Condition	! tmp_networking	551:6:14835:14849	5574141	0	True				
ANR	5574962	UnaryOperationExpression	! tmp_networking		5574141	0					
ANR	5574963	UnaryOperator	!		5574141	0					
ANR	5574964	Identifier	tmp_networking		5574141	1					
ANR	5574965	CompoundStatement		182:24:5842:5842	5574141	1					
ANR	5574966	Statement	dprintf	552:3:14858:14864	5574141	0	True				
ANR	5574967	Statement	(	552:10:14865:14865	5574141	1	True				
ANR	5574968	Statement	D_ALWAYS	552:12:14867:14874	5574141	2	True				
ANR	5574969	Statement	","	552:20:14875:14875	5574141	3	True				
ANR	5574970	Statement	"""Even if VM_NETWORKING is TRUE in condor config,"""	552:22:14877:14925	5574141	4	True				
ANR	5574971	Statement	""" VM_NETWORKING is disabled because vmgahp doesn't """	553:5:14932:14983	5574141	5	True				
ANR	5574972	Statement	"""support VM_NETWORKING\\n"""	554:5:14990:15014	5574141	6	True				
ANR	5574973	Statement	)	554:30:15015:15015	5574141	7	True				
ANR	5574974	ExpressionStatement		554:31:15016:15016	5574141	8	True				
ANR	5574975	ExpressionStatement	m_vm_networking = false	555:3:15021:15044	5574141	9	True				
ANR	5574976	AssignmentExpression	m_vm_networking = false		5574141	0		=			
ANR	5574977	Identifier	m_vm_networking		5574141	0					
ANR	5574978	Identifier	false		5574141	1					
ANR	5574979	IfStatement	if ( m_vm_networking == false )		5574141	50					
ANR	5574980	Condition	m_vm_networking == false	558:5:15058:15081	5574141	0	True				
ANR	5574981	EqualityExpression	m_vm_networking == false		5574141	0		==			
ANR	5574982	Identifier	m_vm_networking		5574141	0					
ANR	5574983	Identifier	false		5574141	1					
ANR	5574984	CompoundStatement		189:32:6074:6074	5574141	1					
ANR	5574985	ExpressionStatement	"dprintf ( D_ALWAYS , ""VM networking is disabled\\n"" )"	559:2:15089:15138	5574141	0	True				
ANR	5574986	CallExpression	"dprintf ( D_ALWAYS , ""VM networking is disabled\\n"" )"		5574141	0					
ANR	5574987	Callee	dprintf		5574141	0					
ANR	5574988	Identifier	dprintf		5574141	0					
ANR	5574989	ArgumentList	D_ALWAYS		5574141	1					
ANR	5574990	Argument	D_ALWAYS		5574141	0					
ANR	5574991	Identifier	D_ALWAYS		5574141	0					
ANR	5574992	Argument	"""VM networking is disabled\\n"""		5574141	1					
ANR	5574993	PrimaryExpression	"""VM networking is disabled\\n"""		5574141	0					
ANR	5574994	ElseStatement	else		5574141	0					
ANR	5574995	CompoundStatement		191:7:6136:6136	5574141	0					
ANR	5574996	ExpressionStatement	"dprintf ( D_ALWAYS , ""VM networking is enabled\\n"" )"	561:2:15151:15199	5574141	0	True				
ANR	5574997	CallExpression	"dprintf ( D_ALWAYS , ""VM networking is enabled\\n"" )"		5574141	0					
ANR	5574998	Callee	dprintf		5574141	0					
ANR	5574999	Identifier	dprintf		5574141	0					
ANR	5575000	ArgumentList	D_ALWAYS		5574141	1					
ANR	5575001	Argument	D_ALWAYS		5574141	0					
ANR	5575002	Identifier	D_ALWAYS		5574141	0					
ANR	5575003	Argument	"""VM networking is enabled\\n"""		5574141	1					
ANR	5575004	PrimaryExpression	"""VM networking is enabled\\n"""		5574141	0					
ANR	5575005	ExpressionStatement	"dprintf ( D_ALWAYS , ""Supported networking types are %s\\n"" , tmp_networking_types . Value ( ) )"	562:2:15203:15295	5574141	1	True				
ANR	5575006	CallExpression	"dprintf ( D_ALWAYS , ""Supported networking types are %s\\n"" , tmp_networking_types . Value ( ) )"		5574141	0					
ANR	5575007	Callee	dprintf		5574141	0					
ANR	5575008	Identifier	dprintf		5574141	0					
ANR	5575009	ArgumentList	D_ALWAYS		5574141	1					
ANR	5575010	Argument	D_ALWAYS		5574141	0					
ANR	5575011	Identifier	D_ALWAYS		5574141	0					
ANR	5575012	Argument	"""Supported networking types are %s\\n"""		5574141	1					
ANR	5575013	PrimaryExpression	"""Supported networking types are %s\\n"""		5574141	0					
ANR	5575014	Argument	tmp_networking_types . Value ( )		5574141	2					
ANR	5575015	CallExpression	tmp_networking_types . Value ( )		5574141	0					
ANR	5575016	Callee	tmp_networking_types . Value		5574141	0					
ANR	5575017	MemberAccess	tmp_networking_types . Value		5574141	0					
ANR	5575018	Identifier	tmp_networking_types		5574141	0					
ANR	5575019	Identifier	Value		5574141	1					
ANR	5575020	ArgumentList			5574141	1					
ANR	5575021	ExpressionStatement	m_vm_type = tmp_vmtype	567:1:15358:15380	5574141	51	True				
ANR	5575022	AssignmentExpression	m_vm_type = tmp_vmtype		5574141	0		=			
ANR	5575023	Identifier	m_vm_type		5574141	0					
ANR	5575024	Identifier	tmp_vmtype		5574141	1					
ANR	5575025	ExpressionStatement	m_vmgahp_server = gahppath	568:1:15383:15409	5574141	52	True				
ANR	5575026	AssignmentExpression	m_vmgahp_server = gahppath		5574141	0		=			
ANR	5575027	Identifier	m_vmgahp_server		5574141	0					
ANR	5575028	Identifier	gahppath		5574141	1					
ANR	5575029	ReturnStatement	return true ;	570:1:15413:15424	5574141	53	True				
ANR	5575030	Identifier	true		5574141	0					
ANR	5575031	ReturnType	bool		5574141	1					
ANR	5575032	Identifier	VMUniverseMgr :: testVMGahp		5574141	2					
ANR	5575033	ParameterList	"const char * gahppath , const char * vmtype"		5574141	3					
ANR	5575034	Parameter	const char * gahppath	369:26:8968:8987	5574141	0	True				
ANR	5575035	ParameterType	const char *		5574141	0					
ANR	5575036	Identifier	gahppath		5574141	1					
ANR	5575037	Parameter	const char * vmtype	369:48:8990:9007	5574141	1	True				
ANR	5575038	ParameterType	const char *		5574141	0					
ANR	5575039	Identifier	vmtype		5574141	1					
ANR	5575040	CFGEntryNode	ENTRY		5574141		True				
ANR	5575041	CFGExitNode	EXIT		5574141		True				
ANR	5575042	Symbol	set_condor_priv		5574141						
ANR	5575043	Symbol	m_starter_has_vmcode		5574141						
ANR	5575044	Symbol	m_vmgahp_info . Insert		5574141						
ANR	5575045	Symbol	tmp_networking_types		5574141						
ANR	5575046	Symbol	m_vmgahp_server		5574141						
ANR	5575047	Symbol	fgets		5574141						
ANR	5575048	Symbol	m_vmgahp_info		5574141						
ANR	5575049	Symbol	tmp_networking_types . Value		5574141						
ANR	5575050	Symbol	ATTR_VM_NETWORKING_TYPES		5574141						
ANR	5575051	Symbol	need_log_file		5574141						
ANR	5575052	Symbol	can_switch_ids		5574141						
ANR	5575053	Symbol	CONDOR_VM_UNIVERSE_KVM		5574141						
ANR	5575054	Symbol	strcasecmp		5574141						
ANR	5575055	Symbol	read_something		5574141						
ANR	5575056	Symbol	gahp_log_file		5574141						
ANR	5575057	Symbol	tmp_str		5574141						
ANR	5575058	Symbol	NULL		5574141						
ANR	5575059	Symbol	ATTR_VM_MEMORY		5574141						
ANR	5575060	Symbol	args_string . Value		5574141						
ANR	5575061	Symbol	tmp_vmtype . Value		5574141						
ANR	5575062	Symbol	param_boolean		5574141						
ANR	5575063	Symbol	gahppath		5574141						
ANR	5575064	Symbol	ATTR_VM_TYPE		5574141						
ANR	5575065	Symbol	m_vm_type		5574141						
ANR	5575066	Symbol	m_vm_networking		5574141						
ANR	5575067	Symbol	true		5574141						
ANR	5575068	Symbol	err_msg2		5574141						
ANR	5575069	Symbol	CONDOR_VM_UNIVERSE_VMWARE		5574141						
ANR	5575070	Symbol	& args_string		5574141						
ANR	5575071	Symbol	tmp_networking		5574141						
ANR	5575072	Symbol	fp		5574141						
ANR	5575073	Symbol	my_popen		5574141						
ANR	5575074	Symbol	param		5574141						
ANR	5575075	Symbol	CONDOR_VM_UNIVERSE_XEN		5574141						
ANR	5575076	Symbol	m_vmgahp_info . LookupInteger		5574141						
ANR	5575077	Symbol	ATTR_VM_NETWORKING		5574141						
ANR	5575078	Symbol	m_vm_max_memory		5574141						
ANR	5575079	Symbol	args_string		5574141						
ANR	5575080	Symbol	vmtype		5574141						
ANR	5575081	Symbol	systemcmd		5574141						
ANR	5575082	Symbol	false		5574141						
ANR	5575083	Symbol	tmp_str . Value		5574141						
ANR	5575084	Symbol	D_ALWAYS		5574141						
ANR	5575085	Symbol	tmp_vmtype		5574141						
ANR	5575086	Symbol	set_root_priv		5574141						
ANR	5575087	Symbol	prev_priv		5574141						
ANR	5575088	Symbol	err_msg . Value		5574141						
ANR	5575089	Symbol	buf		5574141						
ANR	5575090	Symbol	m_vmgahp_info . LookupString		5574141						
ANR	5575091	Symbol	get_condor_uid		5574141						
ANR	5575092	Symbol	err_msg		5574141						
ANR	5575093	Symbol	m_needCheck		5574141						
ANR	5575094	Symbol	FALSE		5574141						
ANR	5575095	Symbol	VMGAHP_TEST_MODE		5574141						
ANR	5575096	Symbol	MATCH		5574141						
ANR	5575097	Function	VMUniverseMgr :: getFreeVMMemSize	573:0:15429:15515							
ANR	5575098	FunctionDef	VMUniverseMgr :: getFreeVMMemSize ()		5575097	0					
ANR	5575099	CompoundStatement		575:0:15467:15515	5575097	0					
ANR	5575100	ReturnStatement	return ( m_vm_max_memory - m_vm_used_memory ) ;	576:1:15470:15513	5575097	0	True				
ANR	5575101	AdditiveExpression	m_vm_max_memory - m_vm_used_memory		5575097	0		-			
ANR	5575102	Identifier	m_vm_max_memory		5575097	0					
ANR	5575103	Identifier	m_vm_used_memory		5575097	1					
ANR	5575104	ReturnType	int		5575097	1					
ANR	5575105	Identifier	VMUniverseMgr :: getFreeVMMemSize		5575097	2					
ANR	5575106	ParameterList			5575097	3					
ANR	5575107	CFGEntryNode	ENTRY		5575097		True				
ANR	5575108	CFGExitNode	EXIT		5575097		True				
ANR	5575109	Symbol	m_vm_max_memory		5575097						
ANR	5575110	Symbol	m_vm_used_memory		5575097						
ANR	5575111	Function	VMUniverseMgr :: canCreateVM	579:0:15518:16690							
ANR	5575112	FunctionDef	VMUniverseMgr :: canCreateVM (ClassAd * jobAd)		5575111	0					
ANR	5575113	CompoundStatement		581:0:15566:16690	5575111	0					
ANR	5575114	IfStatement	if ( ! m_starter_has_vmcode || ( m_vm_type . Length ( ) == 0 ) )		5575111	0					
ANR	5575115	Condition	! m_starter_has_vmcode || ( m_vm_type . Length ( ) == 0 )	582:5:15573:15624	5575111	0	True				
ANR	5575116	OrExpression	! m_starter_has_vmcode || ( m_vm_type . Length ( ) == 0 )		5575111	0		||			
ANR	5575117	UnaryOperationExpression	! m_starter_has_vmcode		5575111	0					
ANR	5575118	UnaryOperator	!		5575111	0					
ANR	5575119	Identifier	m_starter_has_vmcode		5575111	1					
ANR	5575120	EqualityExpression	m_vm_type . Length ( ) == 0		5575111	1		==			
ANR	5575121	CallExpression	m_vm_type . Length ( )		5575111	0					
ANR	5575122	Callee	m_vm_type . Length		5575111	0					
ANR	5575123	MemberAccess	m_vm_type . Length		5575111	0					
ANR	5575124	Identifier	m_vm_type		5575111	0					
ANR	5575125	Identifier	Length		5575111	1					
ANR	5575126	ArgumentList			5575111	1					
ANR	5575127	PrimaryExpression	0		5575111	1					
ANR	5575128	CompoundStatement		2:59:60:60	5575111	1					
ANR	5575129	ReturnStatement	return false ;	583:2:15631:15643	5575111	0	True				
ANR	5575130	Identifier	false		5575111	0					
ANR	5575131	IfStatement	if ( ( m_vm_max_num > 0 ) && ( numOfRunningVM ( ) >= m_vm_max_num ) )		5575111	1					
ANR	5575132	Condition	( m_vm_max_num > 0 ) && ( numOfRunningVM ( ) >= m_vm_max_num )	586:5:15654:15715	5575111	0	True				
ANR	5575133	AndExpression	( m_vm_max_num > 0 ) && ( numOfRunningVM ( ) >= m_vm_max_num )		5575111	0		&&			
ANR	5575134	RelationalExpression	m_vm_max_num > 0		5575111	0		>			
ANR	5575135	Identifier	m_vm_max_num		5575111	0					
ANR	5575136	PrimaryExpression	0		5575111	1					
ANR	5575137	RelationalExpression	numOfRunningVM ( ) >= m_vm_max_num		5575111	1		>=			
ANR	5575138	CallExpression	numOfRunningVM ( )		5575111	0					
ANR	5575139	Callee	numOfRunningVM		5575111	0					
ANR	5575140	Identifier	numOfRunningVM		5575111	0					
ANR	5575141	ArgumentList			5575111	1					
ANR	5575142	Identifier	m_vm_max_num		5575111	1					
ANR	5575143	CompoundStatement		7:40:152:152	5575111	1					
ANR	5575144	Statement	dprintf	588:2:15723:15729	5575111	0	True				
ANR	5575145	Statement	(	588:9:15730:15730	5575111	1	True				
ANR	5575146	Statement	D_ALWAYS	588:10:15731:15738	5575111	2	True				
ANR	5575147	Statement	","	588:18:15739:15739	5575111	3	True				
ANR	5575148	Statement	"""Current number(%d) of running VM reaches to """	588:20:15741:15786	5575111	4	True				
ANR	5575149	Statement	"""maximum number(%d)\\n"""	589:4:15792:15813	5575111	5	True				
ANR	5575150	Statement	","	589:26:15814:15814	5575111	6	True				
ANR	5575151	Statement	numOfRunningVM	589:28:15816:15829	5575111	7	True				
ANR	5575152	Statement	(	589:42:15830:15830	5575111	8	True				
ANR	5575153	Statement	)	589:43:15831:15831	5575111	9	True				
ANR	5575154	Statement	","	589:44:15832:15832	5575111	10	True				
ANR	5575155	Statement	m_vm_max_num	589:46:15834:15845	5575111	11	True				
ANR	5575156	Statement	)	589:58:15846:15846	5575111	12	True				
ANR	5575157	ExpressionStatement		589:59:15847:15847	5575111	13	True				
ANR	5575158	ReturnStatement	return false ;	590:2:15851:15863	5575111	14	True				
ANR	5575159	Identifier	false		5575111	0					
ANR	5575160	IfStatement	if ( ! jobAd )		5575111	2					
ANR	5575161	Condition	! jobAd	593:5:15874:15879	5575111	0	True				
ANR	5575162	UnaryOperationExpression	! jobAd		5575111	0					
ANR	5575163	UnaryOperator	!		5575111	0					
ANR	5575164	Identifier	jobAd		5575111	1					
ANR	5575165	CompoundStatement		13:14:316:316	5575111	1					
ANR	5575166	ReturnStatement	return true ;	594:2:15887:15898	5575111	0	True				
ANR	5575167	Identifier	true		5575111	0					
ANR	5575168	IdentifierDeclStatement	int int_value = 0 ;	598:1:15934:15951	5575111	3	True				
ANR	5575169	IdentifierDecl	int_value = 0		5575111	0					
ANR	5575170	IdentifierDeclType	int		5575111	0					
ANR	5575171	Identifier	int_value		5575111	1					
ANR	5575172	AssignmentExpression	int_value = 0		5575111	2		=			
ANR	5575173	Identifier	int_value		5575111	0					
ANR	5575174	PrimaryExpression	0		5575111	1					
ANR	5575175	IfStatement	"if ( jobAd -> LookupInteger ( ATTR_JOB_VM_MEMORY , int_value ) != 1 )"		5575111	4					
ANR	5575176	Condition	"jobAd -> LookupInteger ( ATTR_JOB_VM_MEMORY , int_value ) != 1"	599:5:15958:16013	5575111	0	True				
ANR	5575177	EqualityExpression	"jobAd -> LookupInteger ( ATTR_JOB_VM_MEMORY , int_value ) != 1"		5575111	0		!=			
ANR	5575178	CallExpression	"jobAd -> LookupInteger ( ATTR_JOB_VM_MEMORY , int_value )"		5575111	0					
ANR	5575179	Callee	jobAd -> LookupInteger		5575111	0					
ANR	5575180	PtrMemberAccess	jobAd -> LookupInteger		5575111	0					
ANR	5575181	Identifier	jobAd		5575111	0					
ANR	5575182	Identifier	LookupInteger		5575111	1					
ANR	5575183	ArgumentList	ATTR_JOB_VM_MEMORY		5575111	1					
ANR	5575184	Argument	ATTR_JOB_VM_MEMORY		5575111	0					
ANR	5575185	Identifier	ATTR_JOB_VM_MEMORY		5575111	0					
ANR	5575186	Argument	int_value		5575111	1					
ANR	5575187	Identifier	int_value		5575111	0					
ANR	5575188	PrimaryExpression	1		5575111	1					
ANR	5575189	CompoundStatement		19:64:450:450	5575111	1					
ANR	5575190	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't find VM memory in Job ClassAd\\n"" )"	600:2:16021:16079	5575111	0	True				
ANR	5575191	CallExpression	"dprintf ( D_ALWAYS , ""Can't find VM memory in Job ClassAd\\n"" )"		5575111	0					
ANR	5575192	Callee	dprintf		5575111	0					
ANR	5575193	Identifier	dprintf		5575111	0					
ANR	5575194	ArgumentList	D_ALWAYS		5575111	1					
ANR	5575195	Argument	D_ALWAYS		5575111	0					
ANR	5575196	Identifier	D_ALWAYS		5575111	0					
ANR	5575197	Argument	"""Can't find VM memory in Job ClassAd\\n"""		5575111	1					
ANR	5575198	PrimaryExpression	"""Can't find VM memory in Job ClassAd\\n"""		5575111	0					
ANR	5575199	ReturnStatement	return false ;	601:2:16083:16095	5575111	1	True				
ANR	5575200	Identifier	false		5575111	0					
ANR	5575201	IfStatement	if ( ! int_value || ( int_value > getFreeVMMemSize ( ) ) )		5575111	5					
ANR	5575202	Condition	! int_value || ( int_value > getFreeVMMemSize ( ) )	603:5:16105:16152	5575111	0	True				
ANR	5575203	OrExpression	! int_value || ( int_value > getFreeVMMemSize ( ) )		5575111	0		||			
ANR	5575204	UnaryOperationExpression	! int_value		5575111	0					
ANR	5575205	UnaryOperator	!		5575111	0					
ANR	5575206	Identifier	int_value		5575111	1					
ANR	5575207	RelationalExpression	int_value > getFreeVMMemSize ( )		5575111	1		>			
ANR	5575208	Identifier	int_value		5575111	0					
ANR	5575209	CallExpression	getFreeVMMemSize ( )		5575111	1					
ANR	5575210	Callee	getFreeVMMemSize		5575111	0					
ANR	5575211	Identifier	getFreeVMMemSize		5575111	0					
ANR	5575212	ArgumentList			5575111	1					
ANR	5575213	CompoundStatement		23:55:588:588	5575111	1					
ANR	5575214	Statement	dprintf	604:2:16159:16165	5575111	0	True				
ANR	5575215	Statement	(	604:9:16166:16166	5575111	1	True				
ANR	5575216	Statement	D_ALWAYS	604:10:16167:16174	5575111	2	True				
ANR	5575217	Statement	","	604:18:16175:16175	5575111	3	True				
ANR	5575218	Statement	"""Not enough memory for VM: Requested mem=%d(MB),"""	604:20:16177:16225	5575111	4	True				
ANR	5575219	Statement	""" Freemem=%d(MB)\\n"""	605:6:16233:16251	5575111	5	True				
ANR	5575220	Statement	","	605:25:16252:16252	5575111	6	True				
ANR	5575221	Statement	int_value	605:27:16254:16262	5575111	7	True				
ANR	5575222	Statement	","	605:36:16263:16263	5575111	8	True				
ANR	5575223	Statement	getFreeVMMemSize	605:38:16265:16280	5575111	9	True				
ANR	5575224	Statement	(	605:54:16281:16281	5575111	10	True				
ANR	5575225	Statement	)	605:55:16282:16282	5575111	11	True				
ANR	5575226	Statement	)	605:56:16283:16283	5575111	12	True				
ANR	5575227	ExpressionStatement		605:57:16284:16284	5575111	13	True				
ANR	5575228	ReturnStatement	return false ;	606:2:16289:16301	5575111	14	True				
ANR	5575229	Identifier	false		5575111	0					
ANR	5575230	IdentifierDeclStatement	MyString string_value ;	611:1:16391:16412	5575111	6	True				
ANR	5575231	IdentifierDecl	string_value		5575111	0					
ANR	5575232	IdentifierDeclType	MyString		5575111	0					
ANR	5575233	Identifier	string_value		5575111	1					
ANR	5575234	IfStatement	"if ( jobAd -> LookupString ( ATTR_VM_CKPT_MAC , string_value ) == 1 )"		5575111	7					
ANR	5575235	Condition	"jobAd -> LookupString ( ATTR_VM_CKPT_MAC , string_value ) == 1"	612:5:16419:16474	5575111	0	True				
ANR	5575236	EqualityExpression	"jobAd -> LookupString ( ATTR_VM_CKPT_MAC , string_value ) == 1"		5575111	0		==			
ANR	5575237	CallExpression	"jobAd -> LookupString ( ATTR_VM_CKPT_MAC , string_value )"		5575111	0					
ANR	5575238	Callee	jobAd -> LookupString		5575111	0					
ANR	5575239	PtrMemberAccess	jobAd -> LookupString		5575111	0					
ANR	5575240	Identifier	jobAd		5575111	0					
ANR	5575241	Identifier	LookupString		5575111	1					
ANR	5575242	ArgumentList	ATTR_VM_CKPT_MAC		5575111	1					
ANR	5575243	Argument	ATTR_VM_CKPT_MAC		5575111	0					
ANR	5575244	Identifier	ATTR_VM_CKPT_MAC		5575111	0					
ANR	5575245	Argument	string_value		5575111	1					
ANR	5575246	Identifier	string_value		5575111	0					
ANR	5575247	PrimaryExpression	1		5575111	1					
ANR	5575248	CompoundStatement		32:64:911:911	5575111	1					
ANR	5575249	IfStatement	if ( findVMStarterInfoWithMac ( string_value . Value ( ) ) )		5575111	0					
ANR	5575250	Condition	findVMStarterInfoWithMac ( string_value . Value ( ) )	613:6:16486:16531	5575111	0	True				
ANR	5575251	CallExpression	findVMStarterInfoWithMac ( string_value . Value ( ) )		5575111	0					
ANR	5575252	Callee	findVMStarterInfoWithMac		5575111	0					
ANR	5575253	Identifier	findVMStarterInfoWithMac		5575111	0					
ANR	5575254	ArgumentList	string_value . Value ( )		5575111	1					
ANR	5575255	Argument	string_value . Value ( )		5575111	0					
ANR	5575256	CallExpression	string_value . Value ( )		5575111	0					
ANR	5575257	Callee	string_value . Value		5575111	0					
ANR	5575258	MemberAccess	string_value . Value		5575111	0					
ANR	5575259	Identifier	string_value		5575111	0					
ANR	5575260	Identifier	Value		5575111	1					
ANR	5575261	ArgumentList			5575111	1					
ANR	5575262	CompoundStatement		33:55:968:968	5575111	1					
ANR	5575263	Statement	dprintf	614:3:16540:16546	5575111	0	True				
ANR	5575264	Statement	(	614:10:16547:16547	5575111	1	True				
ANR	5575265	Statement	D_ALWAYS	614:11:16548:16555	5575111	2	True				
ANR	5575266	Statement	","	614:19:16556:16556	5575111	3	True				
ANR	5575267	Statement	"""MAC address[%s] for VM is already being used """	614:21:16558:16604	5575111	4	True				
ANR	5575268	Statement	"""by other VM\\n"""	615:5:16611:16625	5575111	5	True				
ANR	5575269	Statement	","	615:20:16626:16626	5575111	6	True				
ANR	5575270	Statement	string_value	615:22:16628:16639	5575111	7	True				
ANR	5575271	Statement	.	615:34:16640:16640	5575111	8	True				
ANR	5575272	Statement	Value	615:35:16641:16645	5575111	9	True				
ANR	5575273	Statement	(	615:40:16646:16646	5575111	10	True				
ANR	5575274	Statement	)	615:41:16647:16647	5575111	11	True				
ANR	5575275	Statement	)	615:42:16648:16648	5575111	12	True				
ANR	5575276	ExpressionStatement		615:43:16649:16649	5575111	13	True				
ANR	5575277	ReturnStatement	return false ;	616:3:16654:16666	5575111	14	True				
ANR	5575278	Identifier	false		5575111	0					
ANR	5575279	ReturnStatement	return true ;	620:1:16677:16688	5575111	8	True				
ANR	5575280	Identifier	true		5575111	0					
ANR	5575281	ReturnType	bool		5575111	1					
ANR	5575282	Identifier	VMUniverseMgr :: canCreateVM		5575111	2					
ANR	5575283	ParameterList	ClassAd * jobAd		5575111	3					
ANR	5575284	Parameter	ClassAd * jobAd	580:27:15550:15563	5575111	0	True				
ANR	5575285	ParameterType	ClassAd *		5575111	0					
ANR	5575286	Identifier	jobAd		5575111	1					
ANR	5575287	CFGEntryNode	ENTRY		5575111		True				
ANR	5575288	CFGExitNode	EXIT		5575111		True				
ANR	5575289	Symbol	* jobAd		5575111						
ANR	5575290	Symbol	getFreeVMMemSize		5575111						
ANR	5575291	Symbol	jobAd -> LookupString		5575111						
ANR	5575292	Symbol	numOfRunningVM		5575111						
ANR	5575293	Symbol	ATTR_VM_CKPT_MAC		5575111						
ANR	5575294	Symbol	string_value		5575111						
ANR	5575295	Symbol	m_starter_has_vmcode		5575111						
ANR	5575296	Symbol	false		5575111						
ANR	5575297	Symbol	D_ALWAYS		5575111						
ANR	5575298	Symbol	jobAd		5575111						
ANR	5575299	Symbol	int_value		5575111						
ANR	5575300	Symbol	m_vm_type . Length		5575111						
ANR	5575301	Symbol	m_vm_type		5575111						
ANR	5575302	Symbol	string_value . Value		5575111						
ANR	5575303	Symbol	m_vm_max_num		5575111						
ANR	5575304	Symbol	jobAd -> LookupInteger		5575111						
ANR	5575305	Symbol	true		5575111						
ANR	5575306	Symbol	ATTR_JOB_VM_MEMORY		5575111						
ANR	5575307	Symbol	findVMStarterInfoWithMac		5575111						
ANR	5575308	Function	VMUniverseMgr :: allocVM	623:0:16693:17988							
ANR	5575309	FunctionDef	"VMUniverseMgr :: allocVM (pid_t s_pid , ClassAd & ad , char const * execute_dir)"		5575308	0					
ANR	5575310	CompoundStatement		625:0:16772:17988	5575308	0					
ANR	5575311	IfStatement	if ( canCreateVM ( & ad ) == false )		5575308	0					
ANR	5575312	Condition	canCreateVM ( & ad ) == false	626:5:16779:16803	5575308	0	True				
ANR	5575313	EqualityExpression	canCreateVM ( & ad ) == false		5575308	0		==			
ANR	5575314	CallExpression	canCreateVM ( & ad )		5575308	0					
ANR	5575315	Callee	canCreateVM		5575308	0					
ANR	5575316	Identifier	canCreateVM		5575308	0					
ANR	5575317	ArgumentList	& ad		5575308	1					
ANR	5575318	Argument	& ad		5575308	0					
ANR	5575319	UnaryOperationExpression	& ad		5575308	0					
ANR	5575320	UnaryOperator	&		5575308	0					
ANR	5575321	Identifier	ad		5575308	1					
ANR	5575322	Identifier	false		5575308	1					
ANR	5575323	CompoundStatement		2:33:34:34	5575308	1					
ANR	5575324	ReturnStatement	return false ;	627:2:16811:16823	5575308	0	True				
ANR	5575325	Identifier	false		5575308	0					
ANR	5575326	IdentifierDeclStatement	int vm_mem = 0 ;	631:1:16853:16867	5575308	1	True				
ANR	5575327	IdentifierDecl	vm_mem = 0		5575308	0					
ANR	5575328	IdentifierDeclType	int		5575308	0					
ANR	5575329	Identifier	vm_mem		5575308	1					
ANR	5575330	AssignmentExpression	vm_mem = 0		5575308	2		=			
ANR	5575331	Identifier	vm_mem		5575308	0					
ANR	5575332	PrimaryExpression	0		5575308	1					
ANR	5575333	IfStatement	"if ( ad . LookupInteger ( ATTR_JOB_VM_MEMORY , vm_mem ) != 1 )"		5575308	2					
ANR	5575334	Condition	"ad . LookupInteger ( ATTR_JOB_VM_MEMORY , vm_mem ) != 1"	632:5:16874:16922	5575308	0	True				
ANR	5575335	EqualityExpression	"ad . LookupInteger ( ATTR_JOB_VM_MEMORY , vm_mem ) != 1"		5575308	0		!=			
ANR	5575336	CallExpression	"ad . LookupInteger ( ATTR_JOB_VM_MEMORY , vm_mem )"		5575308	0					
ANR	5575337	Callee	ad . LookupInteger		5575308	0					
ANR	5575338	MemberAccess	ad . LookupInteger		5575308	0					
ANR	5575339	Identifier	ad		5575308	0					
ANR	5575340	Identifier	LookupInteger		5575308	1					
ANR	5575341	ArgumentList	ATTR_JOB_VM_MEMORY		5575308	1					
ANR	5575342	Argument	ATTR_JOB_VM_MEMORY		5575308	0					
ANR	5575343	Identifier	ATTR_JOB_VM_MEMORY		5575308	0					
ANR	5575344	Argument	vm_mem		5575308	1					
ANR	5575345	Identifier	vm_mem		5575308	0					
ANR	5575346	PrimaryExpression	1		5575308	1					
ANR	5575347	CompoundStatement		8:57:153:153	5575308	1					
ANR	5575348	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't find VM memory in Job ClassAd\\n"" )"	633:2:16930:16988	5575308	0	True				
ANR	5575349	CallExpression	"dprintf ( D_ALWAYS , ""Can't find VM memory in Job ClassAd\\n"" )"		5575308	0					
ANR	5575350	Callee	dprintf		5575308	0					
ANR	5575351	Identifier	dprintf		5575308	0					
ANR	5575352	ArgumentList	D_ALWAYS		5575308	1					
ANR	5575353	Argument	D_ALWAYS		5575308	0					
ANR	5575354	Identifier	D_ALWAYS		5575308	0					
ANR	5575355	Argument	"""Can't find VM memory in Job ClassAd\\n"""		5575308	1					
ANR	5575356	PrimaryExpression	"""Can't find VM memory in Job ClassAd\\n"""		5575308	0					
ANR	5575357	ReturnStatement	return false ;	634:2:16992:17004	5575308	1	True				
ANR	5575358	Identifier	false		5575308	0					
ANR	5575359	IdentifierDeclStatement	int vcpus = 0 ;	637:1:17011:17024	5575308	3	True				
ANR	5575360	IdentifierDecl	vcpus = 0		5575308	0					
ANR	5575361	IdentifierDeclType	int		5575308	0					
ANR	5575362	Identifier	vcpus		5575308	1					
ANR	5575363	AssignmentExpression	vcpus = 0		5575308	2		=			
ANR	5575364	Identifier	vcpus		5575308	0					
ANR	5575365	PrimaryExpression	0		5575308	1					
ANR	5575366	IfStatement	"if ( ad . LookupInteger ( ATTR_JOB_VM_VCPUS , vcpus ) != 1 )"		5575308	4					
ANR	5575367	Condition	"ad . LookupInteger ( ATTR_JOB_VM_VCPUS , vcpus ) != 1"	638:4:17030:17076	5575308	0	True				
ANR	5575368	EqualityExpression	"ad . LookupInteger ( ATTR_JOB_VM_VCPUS , vcpus ) != 1"		5575308	0		!=			
ANR	5575369	CallExpression	"ad . LookupInteger ( ATTR_JOB_VM_VCPUS , vcpus )"		5575308	0					
ANR	5575370	Callee	ad . LookupInteger		5575308	0					
ANR	5575371	MemberAccess	ad . LookupInteger		5575308	0					
ANR	5575372	Identifier	ad		5575308	0					
ANR	5575373	Identifier	LookupInteger		5575308	1					
ANR	5575374	ArgumentList	ATTR_JOB_VM_VCPUS		5575308	1					
ANR	5575375	Argument	ATTR_JOB_VM_VCPUS		5575308	0					
ANR	5575376	Identifier	ATTR_JOB_VM_VCPUS		5575308	0					
ANR	5575377	Argument	vcpus		5575308	1					
ANR	5575378	Identifier	vcpus		5575308	0					
ANR	5575379	PrimaryExpression	1		5575308	1					
ANR	5575380	CompoundStatement		15:3:309:309	5575308	1					
ANR	5575381	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Defaulting to one CPU\\n"" )"	640:5:17089:17136	5575308	0	True				
ANR	5575382	CallExpression	"dprintf ( D_FULLDEBUG , ""Defaulting to one CPU\\n"" )"		5575308	0					
ANR	5575383	Callee	dprintf		5575308	0					
ANR	5575384	Identifier	dprintf		5575308	0					
ANR	5575385	ArgumentList	D_FULLDEBUG		5575308	1					
ANR	5575386	Argument	D_FULLDEBUG		5575308	0					
ANR	5575387	Identifier	D_FULLDEBUG		5575308	0					
ANR	5575388	Argument	"""Defaulting to one CPU\\n"""		5575308	1					
ANR	5575389	PrimaryExpression	"""Defaulting to one CPU\\n"""		5575308	0					
ANR	5575390	ExpressionStatement	vcpus = 1	641:5:17143:17152	5575308	1	True				
ANR	5575391	AssignmentExpression	vcpus = 1		5575308	0		=			
ANR	5575392	Identifier	vcpus		5575308	0					
ANR	5575393	PrimaryExpression	1		5575308	1					
ANR	5575394	IdentifierDeclStatement	VMStarterInfo * oldinfo = findVMStarterInfoWithStarterPid ( s_pid ) ;	645:1:17203:17266	5575308	5	True				
ANR	5575395	IdentifierDecl	* oldinfo = findVMStarterInfoWithStarterPid ( s_pid )		5575308	0					
ANR	5575396	IdentifierDeclType	VMStarterInfo *		5575308	0					
ANR	5575397	Identifier	oldinfo		5575308	1					
ANR	5575398	AssignmentExpression	* oldinfo = findVMStarterInfoWithStarterPid ( s_pid )		5575308	2		=			
ANR	5575399	Identifier	oldinfo		5575308	0					
ANR	5575400	CallExpression	findVMStarterInfoWithStarterPid ( s_pid )		5575308	1					
ANR	5575401	Callee	findVMStarterInfoWithStarterPid		5575308	0					
ANR	5575402	Identifier	findVMStarterInfoWithStarterPid		5575308	0					
ANR	5575403	ArgumentList	s_pid		5575308	1					
ANR	5575404	Argument	s_pid		5575308	0					
ANR	5575405	Identifier	s_pid		5575308	0					
ANR	5575406	IfStatement	if ( oldinfo )		5575308	6					
ANR	5575407	Condition	oldinfo	646:5:17273:17279	5575308	0	True				
ANR	5575408	Identifier	oldinfo		5575308	0					
ANR	5575409	CompoundStatement		22:15:510:510	5575308	1					
ANR	5575410	ExpressionStatement	freeVM ( s_pid )	647:2:17287:17300	5575308	0	True				
ANR	5575411	CallExpression	freeVM ( s_pid )		5575308	0					
ANR	5575412	Callee	freeVM		5575308	0					
ANR	5575413	Identifier	freeVM		5575308	0					
ANR	5575414	ArgumentList	s_pid		5575308	1					
ANR	5575415	Argument	s_pid		5575308	0					
ANR	5575416	Identifier	s_pid		5575308	0					
ANR	5575417	ExpressionStatement	oldinfo = NULL	649:2:17327:17341	5575308	1	True				
ANR	5575418	AssignmentExpression	oldinfo = NULL		5575308	0		=			
ANR	5575419	Identifier	oldinfo		5575308	0					
ANR	5575420	Identifier	NULL		5575308	1					
ANR	5575421	Statement	VMStarterInfo	652:1:17349:17361	5575308	7	True				
ANR	5575422	Statement	*	652:15:17363:17363	5575308	8	True				
ANR	5575423	Statement	newinfo	652:16:17364:17370	5575308	9	True				
ANR	5575424	Statement	=	652:24:17372:17372	5575308	10	True				
ANR	5575425	Statement	new	652:26:17374:17376	5575308	11	True				
ANR	5575426	ExpressionStatement	VMStarterInfo	652:30:17378:17391	5575308	12	True				
ANR	5575427	Identifier	VMStarterInfo		5575308	0					
ANR	5575428	ExpressionStatement	ASSERT ( newinfo )	653:1:17394:17409	5575308	13	True				
ANR	5575429	CallExpression	ASSERT ( newinfo )		5575308	0					
ANR	5575430	Callee	ASSERT		5575308	0					
ANR	5575431	Identifier	ASSERT		5575308	0					
ANR	5575432	ArgumentList	newinfo		5575308	1					
ANR	5575433	Argument	newinfo		5575308	0					
ANR	5575434	Identifier	newinfo		5575308	0					
ANR	5575435	ExpressionStatement	m_vm_used_memory += vm_mem	655:1:17413:17439	5575308	14	True				
ANR	5575436	AssignmentExpression	m_vm_used_memory += vm_mem		5575308	0		+=			
ANR	5575437	Identifier	m_vm_used_memory		5575308	0					
ANR	5575438	Identifier	vm_mem		5575308	1					
ANR	5575439	ExpressionStatement	newinfo -> m_pid = s_pid	657:1:17443:17465	5575308	15	True				
ANR	5575440	AssignmentExpression	newinfo -> m_pid = s_pid		5575308	0		=			
ANR	5575441	PtrMemberAccess	newinfo -> m_pid		5575308	0					
ANR	5575442	Identifier	newinfo		5575308	0					
ANR	5575443	Identifier	m_pid		5575308	1					
ANR	5575444	Identifier	s_pid		5575308	1					
ANR	5575445	ExpressionStatement	newinfo -> m_memory = vm_mem	658:1:17468:17494	5575308	16	True				
ANR	5575446	AssignmentExpression	newinfo -> m_memory = vm_mem		5575308	0		=			
ANR	5575447	PtrMemberAccess	newinfo -> m_memory		5575308	0					
ANR	5575448	Identifier	newinfo		5575308	0					
ANR	5575449	Identifier	m_memory		5575308	1					
ANR	5575450	Identifier	vm_mem		5575308	1					
ANR	5575451	ExpressionStatement	newinfo -> m_job_ad = ad	659:1:17497:17519	5575308	17	True				
ANR	5575452	AssignmentExpression	newinfo -> m_job_ad = ad		5575308	0		=			
ANR	5575453	PtrMemberAccess	newinfo -> m_job_ad		5575308	0					
ANR	5575454	Identifier	newinfo		5575308	0					
ANR	5575455	Identifier	m_job_ad		5575308	1					
ANR	5575456	Identifier	ad		5575308	1					
ANR	5575457	ExpressionStatement	newinfo -> m_execute_dir = execute_dir	660:1:17523:17559	5575308	18	True				
ANR	5575458	AssignmentExpression	newinfo -> m_execute_dir = execute_dir		5575308	0		=			
ANR	5575459	PtrMemberAccess	newinfo -> m_execute_dir		5575308	0					
ANR	5575460	Identifier	newinfo		5575308	0					
ANR	5575461	Identifier	m_execute_dir		5575308	1					
ANR	5575462	Identifier	execute_dir		5575308	1					
ANR	5575463	ExpressionStatement	newinfo -> m_vcpus = vcpus	661:1:17562:17586	5575308	19	True				
ANR	5575464	AssignmentExpression	newinfo -> m_vcpus = vcpus		5575308	0		=			
ANR	5575465	PtrMemberAccess	newinfo -> m_vcpus		5575308	0					
ANR	5575466	Identifier	newinfo		5575308	0					
ANR	5575467	Identifier	m_vcpus		5575308	1					
ANR	5575468	Identifier	vcpus		5575308	1					
ANR	5575469	IdentifierDeclStatement	MyString string_value ;	665:1:17686:17707	5575308	20	True				
ANR	5575470	IdentifierDecl	string_value		5575308	0					
ANR	5575471	IdentifierDeclType	MyString		5575308	0					
ANR	5575472	Identifier	string_value		5575308	1					
ANR	5575473	IfStatement	"if ( ad . LookupString ( ATTR_VM_CKPT_MAC , string_value ) == 1 )"		5575308	21					
ANR	5575474	Condition	"ad . LookupString ( ATTR_VM_CKPT_MAC , string_value ) == 1"	666:5:17714:17765	5575308	0	True				
ANR	5575475	EqualityExpression	"ad . LookupString ( ATTR_VM_CKPT_MAC , string_value ) == 1"		5575308	0		==			
ANR	5575476	CallExpression	"ad . LookupString ( ATTR_VM_CKPT_MAC , string_value )"		5575308	0					
ANR	5575477	Callee	ad . LookupString		5575308	0					
ANR	5575478	MemberAccess	ad . LookupString		5575308	0					
ANR	5575479	Identifier	ad		5575308	0					
ANR	5575480	Identifier	LookupString		5575308	1					
ANR	5575481	ArgumentList	ATTR_VM_CKPT_MAC		5575308	1					
ANR	5575482	Argument	ATTR_VM_CKPT_MAC		5575308	0					
ANR	5575483	Identifier	ATTR_VM_CKPT_MAC		5575308	0					
ANR	5575484	Argument	string_value		5575308	1					
ANR	5575485	Identifier	string_value		5575308	0					
ANR	5575486	PrimaryExpression	1		5575308	1					
ANR	5575487	CompoundStatement		42:60:996:996	5575308	1					
ANR	5575488	ExpressionStatement	newinfo -> m_vm_mac = string_value	667:2:17773:17805	5575308	0	True				
ANR	5575489	AssignmentExpression	newinfo -> m_vm_mac = string_value		5575308	0		=			
ANR	5575490	PtrMemberAccess	newinfo -> m_vm_mac		5575308	0					
ANR	5575491	Identifier	newinfo		5575308	0					
ANR	5575492	Identifier	m_vm_mac		5575308	1					
ANR	5575493	Identifier	string_value		5575308	1					
ANR	5575494	ExpressionStatement	m_vm_starter_list . Append ( newinfo )	676:1:17939:17972	5575308	22	True				
ANR	5575495	CallExpression	m_vm_starter_list . Append ( newinfo )		5575308	0					
ANR	5575496	Callee	m_vm_starter_list . Append		5575308	0					
ANR	5575497	MemberAccess	m_vm_starter_list . Append		5575308	0					
ANR	5575498	Identifier	m_vm_starter_list		5575308	0					
ANR	5575499	Identifier	Append		5575308	1					
ANR	5575500	ArgumentList	newinfo		5575308	1					
ANR	5575501	Argument	newinfo		5575308	0					
ANR	5575502	Identifier	newinfo		5575308	0					
ANR	5575503	ReturnStatement	return true ;	677:1:17975:17986	5575308	23	True				
ANR	5575504	Identifier	true		5575308	0					
ANR	5575505	ReturnType	bool		5575308	1					
ANR	5575506	Identifier	VMUniverseMgr :: allocVM		5575308	2					
ANR	5575507	ParameterList	"pid_t s_pid , ClassAd & ad , char const * execute_dir"		5575308	3					
ANR	5575508	Parameter	pid_t s_pid	624:23:16721:16731	5575308	0	True				
ANR	5575509	ParameterType	pid_t		5575308	0					
ANR	5575510	Identifier	s_pid		5575308	1					
ANR	5575511	Parameter	ClassAd & ad	624:36:16734:16744	5575308	1	True				
ANR	5575512	ParameterType	ClassAd &		5575308	0					
ANR	5575513	Identifier	ad		5575308	1					
ANR	5575514	Parameter	char const * execute_dir	624:49:16747:16769	5575308	2	True				
ANR	5575515	ParameterType	char const *		5575308	0					
ANR	5575516	Identifier	execute_dir		5575308	1					
ANR	5575517	CFGEntryNode	ENTRY		5575308		True				
ANR	5575518	CFGExitNode	EXIT		5575308		True				
ANR	5575519	Symbol	newinfo -> m_vcpus		5575308						
ANR	5575520	Symbol	oldinfo		5575308						
ANR	5575521	Symbol	vm_mem		5575308						
ANR	5575522	Symbol	newinfo -> m_memory		5575308						
ANR	5575523	Symbol	newinfo -> m_vm_mac		5575308						
ANR	5575524	Symbol	newinfo		5575308						
ANR	5575525	Symbol	newinfo -> m_job_ad		5575308						
ANR	5575526	Symbol	& ad		5575308						
ANR	5575527	Symbol	ATTR_JOB_VM_VCPUS		5575308						
ANR	5575528	Symbol	ad . LookupInteger		5575308						
ANR	5575529	Symbol	newinfo -> m_pid		5575308						
ANR	5575530	Symbol	execute_dir		5575308						
ANR	5575531	Symbol	ATTR_VM_CKPT_MAC		5575308						
ANR	5575532	Symbol	ad		5575308						
ANR	5575533	Symbol	NULL		5575308						
ANR	5575534	Symbol	string_value		5575308						
ANR	5575535	Symbol	false		5575308						
ANR	5575536	Symbol	D_ALWAYS		5575308						
ANR	5575537	Symbol	m_vm_used_memory		5575308						
ANR	5575538	Symbol	D_FULLDEBUG		5575308						
ANR	5575539	Symbol	canCreateVM		5575308						
ANR	5575540	Symbol	vcpus		5575308						
ANR	5575541	Symbol	findVMStarterInfoWithStarterPid		5575308						
ANR	5575542	Symbol	ad . LookupString		5575308						
ANR	5575543	Symbol	m_vm_starter_list		5575308						
ANR	5575544	Symbol	newinfo -> m_execute_dir		5575308						
ANR	5575545	Symbol	true		5575308						
ANR	5575546	Symbol	ATTR_JOB_VM_MEMORY		5575308						
ANR	5575547	Symbol	* newinfo		5575308						
ANR	5575548	Symbol	s_pid		5575308						
ANR	5575549	Function	VMUniverseMgr :: freeVM	680:0:17991:18730							
ANR	5575550	FunctionDef	VMUniverseMgr :: freeVM (pid_t s_pid)		5575549	0					
ANR	5575551	CompoundStatement		682:0:18031:18730	5575549	0					
ANR	5575552	IdentifierDeclStatement	VMStarterInfo * info = findVMStarterInfoWithStarterPid ( s_pid ) ;	683:1:18034:18094	5575549	0	True				
ANR	5575553	IdentifierDecl	* info = findVMStarterInfoWithStarterPid ( s_pid )		5575549	0					
ANR	5575554	IdentifierDeclType	VMStarterInfo *		5575549	0					
ANR	5575555	Identifier	info		5575549	1					
ANR	5575556	AssignmentExpression	* info = findVMStarterInfoWithStarterPid ( s_pid )		5575549	2		=			
ANR	5575557	Identifier	info		5575549	0					
ANR	5575558	CallExpression	findVMStarterInfoWithStarterPid ( s_pid )		5575549	1					
ANR	5575559	Callee	findVMStarterInfoWithStarterPid		5575549	0					
ANR	5575560	Identifier	findVMStarterInfoWithStarterPid		5575549	0					
ANR	5575561	ArgumentList	s_pid		5575549	1					
ANR	5575562	Argument	s_pid		5575549	0					
ANR	5575563	Identifier	s_pid		5575549	0					
ANR	5575564	IfStatement	if ( ! info )		5575549	1					
ANR	5575565	Condition	! info	684:5:18101:18105	5575549	0	True				
ANR	5575566	UnaryOperationExpression	! info		5575549	0					
ANR	5575567	UnaryOperator	!		5575549	0					
ANR	5575568	Identifier	info		5575549	1					
ANR	5575569	CompoundStatement		3:13:77:77	5575549	1					
ANR	5575570	ReturnStatement	return ;	685:2:18113:18119	5575549	0	True				
ANR	5575571	IdentifierDeclStatement	MyString pid_dir ;	688:1:18126:18142	5575549	2	True				
ANR	5575572	IdentifierDecl	pid_dir		5575549	0					
ANR	5575573	IdentifierDeclType	MyString		5575549	0					
ANR	5575574	Identifier	pid_dir		5575549	1					
ANR	5575575	IdentifierDeclStatement	"Directory execute_dir ( info -> m_execute_dir . Value ( ) , PRIV_ROOT ) ;"	689:1:18145:18206	5575549	3	True				
ANR	5575576	IdentifierDecl	"execute_dir ( info -> m_execute_dir . Value ( ) , PRIV_ROOT )"		5575549	0					
ANR	5575577	IdentifierDeclType	Directory		5575549	0					
ANR	5575578	Identifier	execute_dir		5575549	1					
ANR	5575579	Expression	"info -> m_execute_dir . Value ( ) , PRIV_ROOT"		5575549	2					
ANR	5575580	CallExpression	info -> m_execute_dir . Value ( )		5575549	0					
ANR	5575581	Callee	info -> m_execute_dir . Value		5575549	0					
ANR	5575582	MemberAccess	info -> m_execute_dir . Value		5575549	0					
ANR	5575583	PtrMemberAccess	info -> m_execute_dir		5575549	0					
ANR	5575584	Identifier	info		5575549	0					
ANR	5575585	Identifier	m_execute_dir		5575549	1					
ANR	5575586	Identifier	Value		5575549	1					
ANR	5575587	ArgumentList			5575549	1					
ANR	5575588	Identifier	PRIV_ROOT		5575549	1					
ANR	5575589	ExpressionStatement	"pid_dir . sprintf ( ""dir_%ld"" , ( long ) s_pid )"	690:1:18209:18248	5575549	4	True				
ANR	5575590	CallExpression	"pid_dir . sprintf ( ""dir_%ld"" , ( long ) s_pid )"		5575549	0					
ANR	5575591	Callee	pid_dir . sprintf		5575549	0					
ANR	5575592	MemberAccess	pid_dir . sprintf		5575549	0					
ANR	5575593	Identifier	pid_dir		5575549	0					
ANR	5575594	Identifier	sprintf		5575549	1					
ANR	5575595	ArgumentList	"""dir_%ld"""		5575549	1					
ANR	5575596	Argument	"""dir_%ld"""		5575549	0					
ANR	5575597	PrimaryExpression	"""dir_%ld"""		5575549	0					
ANR	5575598	Argument	( long ) s_pid		5575549	1					
ANR	5575599	CastExpression	( long ) s_pid		5575549	0					
ANR	5575600	CastTarget	long		5575549	0					
ANR	5575601	Identifier	s_pid		5575549	1					
ANR	5575602	IfStatement	if ( execute_dir . Find_Named_Entry ( pid_dir . Value ( ) ) )		5575549	5					
ANR	5575603	Condition	execute_dir . Find_Named_Entry ( pid_dir . Value ( ) )	692:5:18256:18302	5575549	0	True				
ANR	5575604	CallExpression	execute_dir . Find_Named_Entry ( pid_dir . Value ( ) )		5575549	0					
ANR	5575605	Callee	execute_dir . Find_Named_Entry		5575549	0					
ANR	5575606	MemberAccess	execute_dir . Find_Named_Entry		5575549	0					
ANR	5575607	Identifier	execute_dir		5575549	0					
ANR	5575608	Identifier	Find_Named_Entry		5575549	1					
ANR	5575609	ArgumentList	pid_dir . Value ( )		5575549	1					
ANR	5575610	Argument	pid_dir . Value ( )		5575549	0					
ANR	5575611	CallExpression	pid_dir . Value ( )		5575549	0					
ANR	5575612	Callee	pid_dir . Value		5575549	0					
ANR	5575613	MemberAccess	pid_dir . Value		5575549	0					
ANR	5575614	Identifier	pid_dir		5575549	0					
ANR	5575615	Identifier	Value		5575549	1					
ANR	5575616	ArgumentList			5575549	1					
ANR	5575617	CompoundStatement		11:55:274:274	5575549	1					
ANR	5575618	ExpressionStatement	killVM ( info )	696:2:18447:18459	5575549	0	True				
ANR	5575619	CallExpression	killVM ( info )		5575549	0					
ANR	5575620	Callee	killVM		5575549	0					
ANR	5575621	Identifier	killVM		5575549	0					
ANR	5575622	ArgumentList	info		5575549	1					
ANR	5575623	Argument	info		5575549	0					
ANR	5575624	Identifier	info		5575549	0					
ANR	5575625	ExpressionStatement	m_vm_used_memory -= info -> m_memory	699:1:18466:18500	5575549	6	True				
ANR	5575626	AssignmentExpression	m_vm_used_memory -= info -> m_memory		5575549	0		-=			
ANR	5575627	Identifier	m_vm_used_memory		5575549	0					
ANR	5575628	PtrMemberAccess	info -> m_memory		5575549	1					
ANR	5575629	Identifier	info		5575549	0					
ANR	5575630	Identifier	m_memory		5575549	1					
ANR	5575631	ExpressionStatement	m_vm_starter_list . Delete ( info )	700:1:18503:18533	5575549	7	True				
ANR	5575632	CallExpression	m_vm_starter_list . Delete ( info )		5575549	0					
ANR	5575633	Callee	m_vm_starter_list . Delete		5575549	0					
ANR	5575634	MemberAccess	m_vm_starter_list . Delete		5575549	0					
ANR	5575635	Identifier	m_vm_starter_list		5575549	0					
ANR	5575636	Identifier	Delete		5575549	1					
ANR	5575637	ArgumentList	info		5575549	1					
ANR	5575638	Argument	info		5575549	0					
ANR	5575639	Identifier	info		5575549	0					
ANR	5575640	Statement	delete	701:1:18536:18541	5575549	8	True				
ANR	5575641	ExpressionStatement	info	701:8:18543:18547	5575549	9	True				
ANR	5575642	Identifier	info		5575549	0					
ANR	5575643	IfStatement	if ( ! m_vm_starter_list . Number ( ) && m_needCheck )		5575549	10					
ANR	5575644	Condition	! m_vm_starter_list . Number ( ) && m_needCheck	703:5:18555:18596	5575549	0	True				
ANR	5575645	AndExpression	! m_vm_starter_list . Number ( ) && m_needCheck		5575549	0		&&			
ANR	5575646	UnaryOperationExpression	! m_vm_starter_list . Number ( )		5575549	0					
ANR	5575647	UnaryOperator	!		5575549	0					
ANR	5575648	CallExpression	m_vm_starter_list . Number ( )		5575549	1					
ANR	5575649	Callee	m_vm_starter_list . Number		5575549	0					
ANR	5575650	MemberAccess	m_vm_starter_list . Number		5575549	0					
ANR	5575651	Identifier	m_vm_starter_list		5575549	0					
ANR	5575652	Identifier	Number		5575549	1					
ANR	5575653	ArgumentList			5575549	1					
ANR	5575654	Identifier	m_needCheck		5575549	1					
ANR	5575655	CompoundStatement		22:50:568:568	5575549	1					
ANR	5575656	ExpressionStatement	docheckVMUniverse ( )	706:2:18706:18725	5575549	0	True				
ANR	5575657	CallExpression	docheckVMUniverse ( )		5575549	0					
ANR	5575658	Callee	docheckVMUniverse		5575549	0					
ANR	5575659	Identifier	docheckVMUniverse		5575549	0					
ANR	5575660	ArgumentList			5575549	1					
ANR	5575661	ReturnType	void		5575549	1					
ANR	5575662	Identifier	VMUniverseMgr :: freeVM		5575549	2					
ANR	5575663	ParameterList	pid_t s_pid		5575549	3					
ANR	5575664	Parameter	pid_t s_pid	681:22:18018:18028	5575549	0	True				
ANR	5575665	ParameterType	pid_t		5575549	0					
ANR	5575666	Identifier	s_pid		5575549	1					
ANR	5575667	CFGEntryNode	ENTRY		5575549		True				
ANR	5575668	CFGExitNode	EXIT		5575549		True				
ANR	5575669	Symbol	execute_dir		5575549						
ANR	5575670	Symbol	m_vm_starter_list . Number		5575549						
ANR	5575671	Symbol	m_vm_used_memory		5575549						
ANR	5575672	Symbol	findVMStarterInfoWithStarterPid		5575549						
ANR	5575673	Symbol	execute_dir . Find_Named_Entry		5575549						
ANR	5575674	Symbol	info -> m_memory		5575549						
ANR	5575675	Symbol	pid_dir		5575549						
ANR	5575676	Symbol	pid_dir . Value		5575549						
ANR	5575677	Symbol	m_vm_starter_list		5575549						
ANR	5575678	Symbol	info -> m_execute_dir		5575549						
ANR	5575679	Symbol	m_needCheck		5575549						
ANR	5575680	Symbol	* info		5575549						
ANR	5575681	Symbol	s_pid		5575549						
ANR	5575682	Symbol	info		5575549						
ANR	5575683	Function	VMUniverseMgr :: findVMStarterInfoWithStarterPid	710:0:18733:19018							
ANR	5575684	FunctionDef	VMUniverseMgr :: findVMStarterInfoWithStarterPid (pid_t s_pid)		5575683	0					
ANR	5575685	CompoundStatement		712:0:18809:19018	5575683	0					
ANR	5575686	IfStatement	if ( s_pid <= 0 )		5575683	0					
ANR	5575687	Condition	s_pid <= 0	713:5:18816:18825	5575683	0	True				
ANR	5575688	RelationalExpression	s_pid <= 0		5575683	0		<=			
ANR	5575689	Identifier	s_pid		5575683	0					
ANR	5575690	PrimaryExpression	0		5575683	1					
ANR	5575691	CompoundStatement		2:18:19:19	5575683	1					
ANR	5575692	ReturnStatement	return NULL ;	714:2:18833:18844	5575683	0	True				
ANR	5575693	Identifier	NULL		5575683	0					
ANR	5575694	IdentifierDeclStatement	VMStarterInfo * info = NULL ;	717:1:18851:18877	5575683	1	True				
ANR	5575695	IdentifierDecl	* info = NULL		5575683	0					
ANR	5575696	IdentifierDeclType	VMStarterInfo *		5575683	0					
ANR	5575697	Identifier	info		5575683	1					
ANR	5575698	AssignmentExpression	* info = NULL		5575683	2		=			
ANR	5575699	Identifier	NULL		5575683	0					
ANR	5575700	Identifier	NULL		5575683	1					
ANR	5575701	ExpressionStatement	m_vm_starter_list . Rewind ( )	719:1:18881:18907	5575683	2	True				
ANR	5575702	CallExpression	m_vm_starter_list . Rewind ( )		5575683	0					
ANR	5575703	Callee	m_vm_starter_list . Rewind		5575683	0					
ANR	5575704	MemberAccess	m_vm_starter_list . Rewind		5575683	0					
ANR	5575705	Identifier	m_vm_starter_list		5575683	0					
ANR	5575706	Identifier	Rewind		5575683	1					
ANR	5575707	ArgumentList			5575683	1					
ANR	5575708	WhileStatement	while ( m_vm_starter_list . Next ( info ) )		5575683	3					
ANR	5575709	Condition	m_vm_starter_list . Next ( info )	720:8:18917:18944	5575683	0	True				
ANR	5575710	CallExpression	m_vm_starter_list . Next ( info )		5575683	0					
ANR	5575711	Callee	m_vm_starter_list . Next		5575683	0					
ANR	5575712	MemberAccess	m_vm_starter_list . Next		5575683	0					
ANR	5575713	Identifier	m_vm_starter_list		5575683	0					
ANR	5575714	Identifier	Next		5575683	1					
ANR	5575715	ArgumentList	info		5575683	1					
ANR	5575716	Argument	info		5575683	0					
ANR	5575717	Identifier	info		5575683	0					
ANR	5575718	CompoundStatement		9:39:138:138	5575683	1					
ANR	5575719	IfStatement	if ( info -> m_pid == s_pid )		5575683	0					
ANR	5575720	Condition	info -> m_pid == s_pid	721:6:18956:18975	5575683	0	True				
ANR	5575721	EqualityExpression	info -> m_pid == s_pid		5575683	0		==			
ANR	5575722	PtrMemberAccess	info -> m_pid		5575683	0					
ANR	5575723	Identifier	info		5575683	0					
ANR	5575724	Identifier	m_pid		5575683	1					
ANR	5575725	Identifier	s_pid		5575683	1					
ANR	5575726	CompoundStatement		10:29:169:169	5575683	1					
ANR	5575727	ReturnStatement	return info ;	722:3:18984:18995	5575683	0	True				
ANR	5575728	Identifier	info		5575683	0					
ANR	5575729	ReturnStatement	return NULL ;	725:1:19005:19016	5575683	4	True				
ANR	5575730	Identifier	NULL		5575683	0					
ANR	5575731	ReturnType	VMStarterInfo *		5575683	1					
ANR	5575732	Identifier	VMUniverseMgr :: findVMStarterInfoWithStarterPid		5575683	2					
ANR	5575733	ParameterList	pid_t s_pid		5575683	3					
ANR	5575734	Parameter	pid_t s_pid	711:47:18796:18806	5575683	0	True				
ANR	5575735	ParameterType	pid_t		5575683	0					
ANR	5575736	Identifier	s_pid		5575683	1					
ANR	5575737	CFGEntryNode	ENTRY		5575683		True				
ANR	5575738	CFGExitNode	EXIT		5575683		True				
ANR	5575739	Symbol	m_vm_starter_list		5575683						
ANR	5575740	Symbol	NULL		5575683						
ANR	5575741	Symbol	* info		5575683						
ANR	5575742	Symbol	info -> m_pid		5575683						
ANR	5575743	Symbol	m_vm_starter_list . Next		5575683						
ANR	5575744	Symbol	s_pid		5575683						
ANR	5575745	Symbol	info		5575683						
ANR	5575746	Function	VMUniverseMgr :: findVMStarterInfoWithVMPid	728:0:19021:19307							
ANR	5575747	FunctionDef	VMUniverseMgr :: findVMStarterInfoWithVMPid (pid_t vm_pid)		5575746	0					
ANR	5575748	CompoundStatement		730:0:19093:19307	5575746	0					
ANR	5575749	IfStatement	if ( vm_pid <= 0 )		5575746	0					
ANR	5575750	Condition	vm_pid <= 0	731:5:19100:19110	5575746	0	True				
ANR	5575751	RelationalExpression	vm_pid <= 0		5575746	0		<=			
ANR	5575752	Identifier	vm_pid		5575746	0					
ANR	5575753	PrimaryExpression	0		5575746	1					
ANR	5575754	CompoundStatement		2:19:20:20	5575746	1					
ANR	5575755	ReturnStatement	return NULL ;	732:2:19118:19129	5575746	0	True				
ANR	5575756	Identifier	NULL		5575746	0					
ANR	5575757	IdentifierDeclStatement	VMStarterInfo * info = NULL ;	735:1:19136:19162	5575746	1	True				
ANR	5575758	IdentifierDecl	* info = NULL		5575746	0					
ANR	5575759	IdentifierDeclType	VMStarterInfo *		5575746	0					
ANR	5575760	Identifier	info		5575746	1					
ANR	5575761	AssignmentExpression	* info = NULL		5575746	2		=			
ANR	5575762	Identifier	NULL		5575746	0					
ANR	5575763	Identifier	NULL		5575746	1					
ANR	5575764	ExpressionStatement	m_vm_starter_list . Rewind ( )	737:1:19166:19192	5575746	2	True				
ANR	5575765	CallExpression	m_vm_starter_list . Rewind ( )		5575746	0					
ANR	5575766	Callee	m_vm_starter_list . Rewind		5575746	0					
ANR	5575767	MemberAccess	m_vm_starter_list . Rewind		5575746	0					
ANR	5575768	Identifier	m_vm_starter_list		5575746	0					
ANR	5575769	Identifier	Rewind		5575746	1					
ANR	5575770	ArgumentList			5575746	1					
ANR	5575771	WhileStatement	while ( m_vm_starter_list . Next ( info ) )		5575746	3					
ANR	5575772	Condition	m_vm_starter_list . Next ( info )	738:8:19202:19229	5575746	0	True				
ANR	5575773	CallExpression	m_vm_starter_list . Next ( info )		5575746	0					
ANR	5575774	Callee	m_vm_starter_list . Next		5575746	0					
ANR	5575775	MemberAccess	m_vm_starter_list . Next		5575746	0					
ANR	5575776	Identifier	m_vm_starter_list		5575746	0					
ANR	5575777	Identifier	Next		5575746	1					
ANR	5575778	ArgumentList	info		5575746	1					
ANR	5575779	Argument	info		5575746	0					
ANR	5575780	Identifier	info		5575746	0					
ANR	5575781	CompoundStatement		9:39:139:139	5575746	1					
ANR	5575782	IfStatement	if ( info -> m_vm_pid == vm_pid )		5575746	0					
ANR	5575783	Condition	info -> m_vm_pid == vm_pid	739:6:19241:19264	5575746	0	True				
ANR	5575784	EqualityExpression	info -> m_vm_pid == vm_pid		5575746	0		==			
ANR	5575785	PtrMemberAccess	info -> m_vm_pid		5575746	0					
ANR	5575786	Identifier	info		5575746	0					
ANR	5575787	Identifier	m_vm_pid		5575746	1					
ANR	5575788	Identifier	vm_pid		5575746	1					
ANR	5575789	CompoundStatement		10:33:174:174	5575746	1					
ANR	5575790	ReturnStatement	return info ;	740:3:19273:19284	5575746	0	True				
ANR	5575791	Identifier	info		5575746	0					
ANR	5575792	ReturnStatement	return NULL ;	743:1:19294:19305	5575746	4	True				
ANR	5575793	Identifier	NULL		5575746	0					
ANR	5575794	ReturnType	VMStarterInfo *		5575746	1					
ANR	5575795	Identifier	VMUniverseMgr :: findVMStarterInfoWithVMPid		5575746	2					
ANR	5575796	ParameterList	pid_t vm_pid		5575746	3					
ANR	5575797	Parameter	pid_t vm_pid	729:42:19079:19090	5575746	0	True				
ANR	5575798	ParameterType	pid_t		5575746	0					
ANR	5575799	Identifier	vm_pid		5575746	1					
ANR	5575800	CFGEntryNode	ENTRY		5575746		True				
ANR	5575801	CFGExitNode	EXIT		5575746		True				
ANR	5575802	Symbol	info -> m_vm_pid		5575746						
ANR	5575803	Symbol	m_vm_starter_list		5575746						
ANR	5575804	Symbol	NULL		5575746						
ANR	5575805	Symbol	vm_pid		5575746						
ANR	5575806	Symbol	* info		5575746						
ANR	5575807	Symbol	m_vm_starter_list . Next		5575746						
ANR	5575808	Symbol	info		5575746						
ANR	5575809	Function	VMUniverseMgr :: findVMStarterInfoWithMac	746:0:19310:19606							
ANR	5575810	FunctionDef	VMUniverseMgr :: findVMStarterInfoWithMac (const char * mac)		5575809	0					
ANR	5575811	CompoundStatement		748:0:19383:19606	5575809	0					
ANR	5575812	IfStatement	if ( ! mac )		5575809	0					
ANR	5575813	Condition	! mac	749:5:19390:19393	5575809	0	True				
ANR	5575814	UnaryOperationExpression	! mac		5575809	0					
ANR	5575815	UnaryOperator	!		5575809	0					
ANR	5575816	Identifier	mac		5575809	1					
ANR	5575817	CompoundStatement		2:12:13:13	5575809	1					
ANR	5575818	ReturnStatement	return NULL ;	750:2:19401:19412	5575809	0	True				
ANR	5575819	Identifier	NULL		5575809	0					
ANR	5575820	IdentifierDeclStatement	VMStarterInfo * info = NULL ;	753:1:19419:19445	5575809	1	True				
ANR	5575821	IdentifierDecl	* info = NULL		5575809	0					
ANR	5575822	IdentifierDeclType	VMStarterInfo *		5575809	0					
ANR	5575823	Identifier	info		5575809	1					
ANR	5575824	AssignmentExpression	* info = NULL		5575809	2		=			
ANR	5575825	Identifier	NULL		5575809	0					
ANR	5575826	Identifier	NULL		5575809	1					
ANR	5575827	ExpressionStatement	m_vm_starter_list . Rewind ( )	755:1:19449:19475	5575809	2	True				
ANR	5575828	CallExpression	m_vm_starter_list . Rewind ( )		5575809	0					
ANR	5575829	Callee	m_vm_starter_list . Rewind		5575809	0					
ANR	5575830	MemberAccess	m_vm_starter_list . Rewind		5575809	0					
ANR	5575831	Identifier	m_vm_starter_list		5575809	0					
ANR	5575832	Identifier	Rewind		5575809	1					
ANR	5575833	ArgumentList			5575809	1					
ANR	5575834	WhileStatement	while ( m_vm_starter_list . Next ( info ) )		5575809	3					
ANR	5575835	Condition	m_vm_starter_list . Next ( info )	756:8:19485:19512	5575809	0	True				
ANR	5575836	CallExpression	m_vm_starter_list . Next ( info )		5575809	0					
ANR	5575837	Callee	m_vm_starter_list . Next		5575809	0					
ANR	5575838	MemberAccess	m_vm_starter_list . Next		5575809	0					
ANR	5575839	Identifier	m_vm_starter_list		5575809	0					
ANR	5575840	Identifier	Next		5575809	1					
ANR	5575841	ArgumentList	info		5575809	1					
ANR	5575842	Argument	info		5575809	0					
ANR	5575843	Identifier	info		5575809	0					
ANR	5575844	CompoundStatement		9:39:132:132	5575809	1					
ANR	5575845	IfStatement	"if ( ! strcasecmp ( info -> m_vm_mac . Value ( ) , mac ) )"		5575809	0					
ANR	5575846	Condition	"! strcasecmp ( info -> m_vm_mac . Value ( ) , mac )"	757:6:19524:19563	5575809	0	True				
ANR	5575847	UnaryOperationExpression	"! strcasecmp ( info -> m_vm_mac . Value ( ) , mac )"		5575809	0					
ANR	5575848	UnaryOperator	!		5575809	0					
ANR	5575849	CallExpression	"strcasecmp ( info -> m_vm_mac . Value ( ) , mac )"		5575809	1					
ANR	5575850	Callee	strcasecmp		5575809	0					
ANR	5575851	Identifier	strcasecmp		5575809	0					
ANR	5575852	ArgumentList	info -> m_vm_mac . Value ( )		5575809	1					
ANR	5575853	Argument	info -> m_vm_mac . Value ( )		5575809	0					
ANR	5575854	CallExpression	info -> m_vm_mac . Value ( )		5575809	0					
ANR	5575855	Callee	info -> m_vm_mac . Value		5575809	0					
ANR	5575856	MemberAccess	info -> m_vm_mac . Value		5575809	0					
ANR	5575857	PtrMemberAccess	info -> m_vm_mac		5575809	0					
ANR	5575858	Identifier	info		5575809	0					
ANR	5575859	Identifier	m_vm_mac		5575809	1					
ANR	5575860	Identifier	Value		5575809	1					
ANR	5575861	ArgumentList			5575809	1					
ANR	5575862	Argument	mac		5575809	1					
ANR	5575863	Identifier	mac		5575809	0					
ANR	5575864	CompoundStatement		10:49:183:183	5575809	1					
ANR	5575865	ReturnStatement	return info ;	758:3:19572:19583	5575809	0	True				
ANR	5575866	Identifier	info		5575809	0					
ANR	5575867	ReturnStatement	return NULL ;	761:1:19593:19604	5575809	4	True				
ANR	5575868	Identifier	NULL		5575809	0					
ANR	5575869	ReturnType	VMStarterInfo *		5575809	1					
ANR	5575870	Identifier	VMUniverseMgr :: findVMStarterInfoWithMac		5575809	2					
ANR	5575871	ParameterList	const char * mac		5575809	3					
ANR	5575872	Parameter	const char * mac	747:40:19366:19380	5575809	0	True				
ANR	5575873	ParameterType	const char *		5575809	0					
ANR	5575874	Identifier	mac		5575809	1					
ANR	5575875	CFGEntryNode	ENTRY		5575809		True				
ANR	5575876	CFGExitNode	EXIT		5575809		True				
ANR	5575877	Symbol	m_vm_starter_list		5575809						
ANR	5575878	Symbol	NULL		5575809						
ANR	5575879	Symbol	info -> m_vm_mac		5575809						
ANR	5575880	Symbol	* info		5575809						
ANR	5575881	Symbol	info -> m_vm_mac . Value		5575809						
ANR	5575882	Symbol	strcasecmp		5575809						
ANR	5575883	Symbol	m_vm_starter_list . Next		5575809						
ANR	5575884	Symbol	mac		5575809						
ANR	5575885	Symbol	info		5575809						
ANR	5575886	Function	VMUniverseMgr :: findVMStarterInfoWithIP	764:0:19609:19900							
ANR	5575887	FunctionDef	VMUniverseMgr :: findVMStarterInfoWithIP (const char * ip)		5575886	0					
ANR	5575888	CompoundStatement		766:0:19680:19900	5575886	0					
ANR	5575889	IfStatement	if ( ! ip )		5575886	0					
ANR	5575890	Condition	! ip	767:5:19687:19689	5575886	0	True				
ANR	5575891	UnaryOperationExpression	! ip		5575886	0					
ANR	5575892	UnaryOperator	!		5575886	0					
ANR	5575893	Identifier	ip		5575886	1					
ANR	5575894	CompoundStatement		2:11:12:12	5575886	1					
ANR	5575895	ReturnStatement	return NULL ;	768:2:19697:19708	5575886	0	True				
ANR	5575896	Identifier	NULL		5575886	0					
ANR	5575897	IdentifierDeclStatement	VMStarterInfo * info = NULL ;	771:1:19715:19741	5575886	1	True				
ANR	5575898	IdentifierDecl	* info = NULL		5575886	0					
ANR	5575899	IdentifierDeclType	VMStarterInfo *		5575886	0					
ANR	5575900	Identifier	info		5575886	1					
ANR	5575901	AssignmentExpression	* info = NULL		5575886	2		=			
ANR	5575902	Identifier	NULL		5575886	0					
ANR	5575903	Identifier	NULL		5575886	1					
ANR	5575904	ExpressionStatement	m_vm_starter_list . Rewind ( )	773:1:19745:19771	5575886	2	True				
ANR	5575905	CallExpression	m_vm_starter_list . Rewind ( )		5575886	0					
ANR	5575906	Callee	m_vm_starter_list . Rewind		5575886	0					
ANR	5575907	MemberAccess	m_vm_starter_list . Rewind		5575886	0					
ANR	5575908	Identifier	m_vm_starter_list		5575886	0					
ANR	5575909	Identifier	Rewind		5575886	1					
ANR	5575910	ArgumentList			5575886	1					
ANR	5575911	WhileStatement	while ( m_vm_starter_list . Next ( info ) )		5575886	3					
ANR	5575912	Condition	m_vm_starter_list . Next ( info )	774:8:19781:19808	5575886	0	True				
ANR	5575913	CallExpression	m_vm_starter_list . Next ( info )		5575886	0					
ANR	5575914	Callee	m_vm_starter_list . Next		5575886	0					
ANR	5575915	MemberAccess	m_vm_starter_list . Next		5575886	0					
ANR	5575916	Identifier	m_vm_starter_list		5575886	0					
ANR	5575917	Identifier	Next		5575886	1					
ANR	5575918	ArgumentList	info		5575886	1					
ANR	5575919	Argument	info		5575886	0					
ANR	5575920	Identifier	info		5575886	0					
ANR	5575921	CompoundStatement		9:39:131:131	5575886	1					
ANR	5575922	IfStatement	"if ( ! strcasecmp ( info -> m_vm_ip . Value ( ) , ip ) )"		5575886	0					
ANR	5575923	Condition	"! strcasecmp ( info -> m_vm_ip . Value ( ) , ip )"	775:6:19820:19857	5575886	0	True				
ANR	5575924	UnaryOperationExpression	"! strcasecmp ( info -> m_vm_ip . Value ( ) , ip )"		5575886	0					
ANR	5575925	UnaryOperator	!		5575886	0					
ANR	5575926	CallExpression	"strcasecmp ( info -> m_vm_ip . Value ( ) , ip )"		5575886	1					
ANR	5575927	Callee	strcasecmp		5575886	0					
ANR	5575928	Identifier	strcasecmp		5575886	0					
ANR	5575929	ArgumentList	info -> m_vm_ip . Value ( )		5575886	1					
ANR	5575930	Argument	info -> m_vm_ip . Value ( )		5575886	0					
ANR	5575931	CallExpression	info -> m_vm_ip . Value ( )		5575886	0					
ANR	5575932	Callee	info -> m_vm_ip . Value		5575886	0					
ANR	5575933	MemberAccess	info -> m_vm_ip . Value		5575886	0					
ANR	5575934	PtrMemberAccess	info -> m_vm_ip		5575886	0					
ANR	5575935	Identifier	info		5575886	0					
ANR	5575936	Identifier	m_vm_ip		5575886	1					
ANR	5575937	Identifier	Value		5575886	1					
ANR	5575938	ArgumentList			5575886	1					
ANR	5575939	Argument	ip		5575886	1					
ANR	5575940	Identifier	ip		5575886	0					
ANR	5575941	CompoundStatement		10:47:180:180	5575886	1					
ANR	5575942	ReturnStatement	return info ;	776:3:19866:19877	5575886	0	True				
ANR	5575943	Identifier	info		5575886	0					
ANR	5575944	ReturnStatement	return NULL ;	779:1:19887:19898	5575886	4	True				
ANR	5575945	Identifier	NULL		5575886	0					
ANR	5575946	ReturnType	VMStarterInfo *		5575886	1					
ANR	5575947	Identifier	VMUniverseMgr :: findVMStarterInfoWithIP		5575886	2					
ANR	5575948	ParameterList	const char * ip		5575886	3					
ANR	5575949	Parameter	const char * ip	765:39:19664:19677	5575886	0	True				
ANR	5575950	ParameterType	const char *		5575886	0					
ANR	5575951	Identifier	ip		5575886	1					
ANR	5575952	CFGEntryNode	ENTRY		5575886		True				
ANR	5575953	CFGExitNode	EXIT		5575886		True				
ANR	5575954	Symbol	m_vm_starter_list		5575886						
ANR	5575955	Symbol	NULL		5575886						
ANR	5575956	Symbol	info -> m_vm_ip		5575886						
ANR	5575957	Symbol	ip		5575886						
ANR	5575958	Symbol	info -> m_vm_ip . Value		5575886						
ANR	5575959	Symbol	* info		5575886						
ANR	5575960	Symbol	strcasecmp		5575886						
ANR	5575961	Symbol	m_vm_starter_list . Next		5575886						
ANR	5575962	Symbol	info		5575886						
ANR	5575963	Function	VMUniverseMgr :: checkVMUniverse	782:0:19903:20327							
ANR	5575964	FunctionDef	VMUniverseMgr :: checkVMUniverse ()		5575963	0					
ANR	5575965	CompoundStatement		784:0:19946:20327	5575963	0					
ANR	5575966	ExpressionStatement	"dprintf ( D_ALWAYS , ""VM-gahp server reported an internal error\\n"" )"	785:1:19949:20014	5575963	0	True				
ANR	5575967	CallExpression	"dprintf ( D_ALWAYS , ""VM-gahp server reported an internal error\\n"" )"		5575963	0					
ANR	5575968	Callee	dprintf		5575963	0					
ANR	5575969	Identifier	dprintf		5575963	0					
ANR	5575970	ArgumentList	D_ALWAYS		5575963	1					
ANR	5575971	Argument	D_ALWAYS		5575963	0					
ANR	5575972	Identifier	D_ALWAYS		5575963	0					
ANR	5575973	Argument	"""VM-gahp server reported an internal error\\n"""		5575963	1					
ANR	5575974	PrimaryExpression	"""VM-gahp server reported an internal error\\n"""		5575963	0					
ANR	5575975	IfStatement	if ( numOfRunningVM ( ) == 0 )		5575963	1					
ANR	5575976	Condition	numOfRunningVM ( ) == 0	787:5:20022:20042	5575963	0	True				
ANR	5575977	EqualityExpression	numOfRunningVM ( ) == 0		5575963	0		==			
ANR	5575978	CallExpression	numOfRunningVM ( )		5575963	0					
ANR	5575979	Callee	numOfRunningVM		5575963	0					
ANR	5575980	Identifier	numOfRunningVM		5575963	0					
ANR	5575981	ArgumentList			5575963	1					
ANR	5575982	PrimaryExpression	0		5575963	1					
ANR	5575983	CompoundStatement		4:29:99:99	5575963	1					
ANR	5575984	ExpressionStatement	docheckVMUniverse ( )	790:2:20119:20138	5575963	0	True				
ANR	5575985	CallExpression	docheckVMUniverse ( )		5575963	0					
ANR	5575986	Callee	docheckVMUniverse		5575963	0					
ANR	5575987	Identifier	docheckVMUniverse		5575963	0					
ANR	5575988	ArgumentList			5575963	1					
ANR	5575989	ReturnStatement	return ;	791:2:20142:20148	5575963	1	True				
ANR	5575990	ExpressionStatement	m_needCheck = true	797:1:20307:20325	5575963	2	True				
ANR	5575991	AssignmentExpression	m_needCheck = true		5575963	0		=			
ANR	5575992	Identifier	m_needCheck		5575963	0					
ANR	5575993	Identifier	true		5575963	1					
ANR	5575994	ReturnType	void		5575963	1					
ANR	5575995	Identifier	VMUniverseMgr :: checkVMUniverse		5575963	2					
ANR	5575996	ParameterList			5575963	3					
ANR	5575997	CFGEntryNode	ENTRY		5575963		True				
ANR	5575998	CFGExitNode	EXIT		5575963		True				
ANR	5575999	Symbol	numOfRunningVM		5575963						
ANR	5576000	Symbol	D_ALWAYS		5575963						
ANR	5576001	Symbol	true		5575963						
ANR	5576002	Symbol	m_needCheck		5575963						
ANR	5576003	Function	VMUniverseMgr :: docheckVMUniverse	800:0:20330:21615							
ANR	5576004	FunctionDef	VMUniverseMgr :: docheckVMUniverse ()		5576003	0					
ANR	5576005	CompoundStatement		802:0:20375:21615	5576003	0					
ANR	5576006	IdentifierDeclStatement	"char * vm_type = param ( ""VM_TYPE"" ) ;"	803:1:20378:20412	5576003	0	True				
ANR	5576007	IdentifierDecl	"* vm_type = param ( ""VM_TYPE"" )"		5576003	0					
ANR	5576008	IdentifierDeclType	char *		5576003	0					
ANR	5576009	Identifier	vm_type		5576003	1					
ANR	5576010	AssignmentExpression	"* vm_type = param ( ""VM_TYPE"" )"		5576003	2		=			
ANR	5576011	Identifier	vm_type		5576003	0					
ANR	5576012	CallExpression	"param ( ""VM_TYPE"" )"		5576003	1					
ANR	5576013	Callee	param		5576003	0					
ANR	5576014	Identifier	param		5576003	0					
ANR	5576015	ArgumentList	"""VM_TYPE"""		5576003	1					
ANR	5576016	Argument	"""VM_TYPE"""		5576003	0					
ANR	5576017	PrimaryExpression	"""VM_TYPE"""		5576003	0					
ANR	5576018	Statement	dprintf	804:1:20415:20421	5576003	1	True				
ANR	5576019	Statement	(	804:8:20422:20422	5576003	2	True				
ANR	5576020	Statement	D_ALWAYS	804:10:20424:20431	5576003	3	True				
ANR	5576021	Statement	","	804:18:20432:20432	5576003	4	True				
ANR	5576022	Statement	"""VM universe will be tested """	804:20:20434:20462	5576003	5	True				
ANR	5576023	Statement	"""to check if it is available\\n"""	805:3:20467:20497	5576003	6	True				
ANR	5576024	Statement	)	805:34:20498:20498	5576003	7	True				
ANR	5576025	ExpressionStatement		805:35:20499:20499	5576003	8	True				
ANR	5576026	IfStatement	if ( init ( ) == false && vm_type )		5576003	9					
ANR	5576027	Condition	init ( ) == false && vm_type	806:5:20506:20531	5576003	0	True				
ANR	5576028	AndExpression	init ( ) == false && vm_type		5576003	0		&&			
ANR	5576029	EqualityExpression	init ( ) == false		5576003	0		==			
ANR	5576030	CallExpression	init ( )		5576003	0					
ANR	5576031	Callee	init		5576003	0					
ANR	5576032	Identifier	init		5576003	0					
ANR	5576033	ArgumentList			5576003	1					
ANR	5576034	Identifier	false		5576003	1					
ANR	5576035	Identifier	vm_type		5576003	1					
ANR	5576036	CompoundStatement		5:34:159:159	5576003	1					
ANR	5576037	ExpressionStatement	"m_check_interval = param_integer ( ""VM_RECHECK_INTERVAL"" , 600 )"	815:2:20894:20954	5576003	0	True				
ANR	5576038	AssignmentExpression	"m_check_interval = param_integer ( ""VM_RECHECK_INTERVAL"" , 600 )"		5576003	0		=			
ANR	5576039	Identifier	m_check_interval		5576003	0					
ANR	5576040	CallExpression	"param_integer ( ""VM_RECHECK_INTERVAL"" , 600 )"		5576003	1					
ANR	5576041	Callee	param_integer		5576003	0					
ANR	5576042	Identifier	param_integer		5576003	0					
ANR	5576043	ArgumentList	"""VM_RECHECK_INTERVAL"""		5576003	1					
ANR	5576044	Argument	"""VM_RECHECK_INTERVAL"""		5576003	0					
ANR	5576045	PrimaryExpression	"""VM_RECHECK_INTERVAL"""		5576003	0					
ANR	5576046	Argument	600		5576003	1					
ANR	5576047	PrimaryExpression	600		5576003	0					
ANR	5576048	IfStatement	if ( m_check_tid >= 0 )		5576003	1					
ANR	5576049	Condition	m_check_tid >= 0	816:7:20963:20978	5576003	0	True				
ANR	5576050	RelationalExpression	m_check_tid >= 0		5576003	0		>=			
ANR	5576051	Identifier	m_check_tid		5576003	0					
ANR	5576052	PrimaryExpression	0		5576003	1					
ANR	5576053	CompoundStatement		15:26:606:606	5576003	1					
ANR	5576054	ExpressionStatement	"daemonCore -> Reset_Timer ( m_check_tid , m_check_interval )"	817:3:20987:21043	5576003	0	True				
ANR	5576055	CallExpression	"daemonCore -> Reset_Timer ( m_check_tid , m_check_interval )"		5576003	0					
ANR	5576056	Callee	daemonCore -> Reset_Timer		5576003	0					
ANR	5576057	PtrMemberAccess	daemonCore -> Reset_Timer		5576003	0					
ANR	5576058	Identifier	daemonCore		5576003	0					
ANR	5576059	Identifier	Reset_Timer		5576003	1					
ANR	5576060	ArgumentList	m_check_tid		5576003	1					
ANR	5576061	Argument	m_check_tid		5576003	0					
ANR	5576062	Identifier	m_check_tid		5576003	0					
ANR	5576063	Argument	m_check_interval		5576003	1					
ANR	5576064	Identifier	m_check_interval		5576003	0					
ANR	5576065	ElseStatement	else		5576003	0					
ANR	5576066	CompoundStatement		17:9:678:678	5576003	0					
ANR	5576067	ExpressionStatement	"m_check_tid = daemonCore -> Register_Timer ( m_check_interval , ( TimerHandlercpp ) & VMUniverseMgr :: docheckVMUniverse , ""VMUniverseMgr::docheckVMUniverse"" , this )"	819:3:21059:21219	5576003	0	True				
ANR	5576068	AssignmentExpression	"m_check_tid = daemonCore -> Register_Timer ( m_check_interval , ( TimerHandlercpp ) & VMUniverseMgr :: docheckVMUniverse , ""VMUniverseMgr::docheckVMUniverse"" , this )"		5576003	0		=			
ANR	5576069	Identifier	m_check_tid		5576003	0					
ANR	5576070	CallExpression	"daemonCore -> Register_Timer ( m_check_interval , ( TimerHandlercpp ) & VMUniverseMgr :: docheckVMUniverse , ""VMUniverseMgr::docheckVMUniverse"" , this )"		5576003	1					
ANR	5576071	Callee	daemonCore -> Register_Timer		5576003	0					
ANR	5576072	PtrMemberAccess	daemonCore -> Register_Timer		5576003	0					
ANR	5576073	Identifier	daemonCore		5576003	0					
ANR	5576074	Identifier	Register_Timer		5576003	1					
ANR	5576075	ArgumentList	m_check_interval		5576003	1					
ANR	5576076	Argument	m_check_interval		5576003	0					
ANR	5576077	Identifier	m_check_interval		5576003	0					
ANR	5576078	Argument	( TimerHandlercpp ) & VMUniverseMgr :: docheckVMUniverse		5576003	1					
ANR	5576079	CastExpression	( TimerHandlercpp ) & VMUniverseMgr :: docheckVMUniverse		5576003	0					
ANR	5576080	CastTarget	TimerHandlercpp		5576003	0					
ANR	5576081	UnaryOperationExpression	& VMUniverseMgr :: docheckVMUniverse		5576003	1					
ANR	5576082	UnaryOperator	&		5576003	0					
ANR	5576083	Identifier	VMUniverseMgr :: docheckVMUniverse		5576003	1					
ANR	5576084	Argument	"""VMUniverseMgr::docheckVMUniverse"""		5576003	2					
ANR	5576085	PrimaryExpression	"""VMUniverseMgr::docheckVMUniverse"""		5576003	0					
ANR	5576086	Argument	this		5576003	3					
ANR	5576087	Identifier	this		5576003	0					
ANR	5576088	Statement	dprintf	823:2:21227:21233	5576003	2	True				
ANR	5576089	Statement	(	823:9:21234:21234	5576003	3	True				
ANR	5576090	Statement	D_ALWAYS	823:11:21236:21243	5576003	4	True				
ANR	5576091	Statement	","	823:19:21244:21244	5576003	5	True				
ANR	5576092	Statement	"""Started a timer to test VM universe after """	823:21:21246:21289	5576003	6	True				
ANR	5576093	Statement	"""%d(seconds)\\n"""	824:6:21297:21311	5576003	7	True				
ANR	5576094	Statement	","	824:21:21312:21312	5576003	8	True				
ANR	5576095	Statement	m_check_interval	824:23:21314:21329	5576003	9	True				
ANR	5576096	Statement	)	824:39:21330:21330	5576003	10	True				
ANR	5576097	ExpressionStatement		824:40:21331:21331	5576003	11	True				
ANR	5576098	ElseStatement	else		5576003	0					
ANR	5576099	CompoundStatement		24:8:965:965	5576003	0					
ANR	5576100	IfStatement	if ( m_check_tid >= 0 )		5576003	0					
ANR	5576101	Condition	m_check_tid >= 0	826:7:21350:21365	5576003	0	True				
ANR	5576102	RelationalExpression	m_check_tid >= 0		5576003	0		>=			
ANR	5576103	Identifier	m_check_tid		5576003	0					
ANR	5576104	PrimaryExpression	0		5576003	1					
ANR	5576105	CompoundStatement		25:26:993:993	5576003	1					
ANR	5576106	ExpressionStatement	daemonCore -> Cancel_Timer ( m_check_tid )	827:3:21374:21413	5576003	0	True				
ANR	5576107	CallExpression	daemonCore -> Cancel_Timer ( m_check_tid )		5576003	0					
ANR	5576108	Callee	daemonCore -> Cancel_Timer		5576003	0					
ANR	5576109	PtrMemberAccess	daemonCore -> Cancel_Timer		5576003	0					
ANR	5576110	Identifier	daemonCore		5576003	0					
ANR	5576111	Identifier	Cancel_Timer		5576003	1					
ANR	5576112	ArgumentList	m_check_tid		5576003	1					
ANR	5576113	Argument	m_check_tid		5576003	0					
ANR	5576114	Identifier	m_check_tid		5576003	0					
ANR	5576115	ExpressionStatement	m_check_tid = - 1	828:3:21418:21434	5576003	1	True				
ANR	5576116	AssignmentExpression	m_check_tid = - 1		5576003	0		=			
ANR	5576117	Identifier	m_check_tid		5576003	0					
ANR	5576118	UnaryOperationExpression	- 1		5576003	1					
ANR	5576119	UnaryOperator	-		5576003	0					
ANR	5576120	PrimaryExpression	1		5576003	1					
ANR	5576121	IfStatement	if ( resmgr )		5576003	2					
ANR	5576122	Condition	resmgr	832:7:21538:21543	5576003	0	True				
ANR	5576123	Identifier	resmgr		5576003	0					
ANR	5576124	CompoundStatement		31:16:1171:1171	5576003	1					
ANR	5576125	ExpressionStatement	resmgr -> eval_and_update_all ( )	833:4:21553:21582	5576003	0	True				
ANR	5576126	CallExpression	resmgr -> eval_and_update_all ( )		5576003	0					
ANR	5576127	Callee	resmgr -> eval_and_update_all		5576003	0					
ANR	5576128	PtrMemberAccess	resmgr -> eval_and_update_all		5576003	0					
ANR	5576129	Identifier	resmgr		5576003	0					
ANR	5576130	Identifier	eval_and_update_all		5576003	1					
ANR	5576131	ArgumentList			5576003	1					
ANR	5576132	ExpressionStatement	free ( vm_type )	837:1:21598:21613	5576003	10	True				
ANR	5576133	CallExpression	free ( vm_type )		5576003	0					
ANR	5576134	Callee	free		5576003	0					
ANR	5576135	Identifier	free		5576003	0					
ANR	5576136	ArgumentList	vm_type		5576003	1					
ANR	5576137	Argument	vm_type		5576003	0					
ANR	5576138	Identifier	vm_type		5576003	0					
ANR	5576139	ReturnType	void		5576003	1					
ANR	5576140	Identifier	VMUniverseMgr :: docheckVMUniverse		5576003	2					
ANR	5576141	ParameterList			5576003	3					
ANR	5576142	CFGEntryNode	ENTRY		5576003		True				
ANR	5576143	CFGExitNode	EXIT		5576003		True				
ANR	5576144	Symbol	init		5576003						
ANR	5576145	Symbol	false		5576003						
ANR	5576146	Symbol	m_check_interval		5576003						
ANR	5576147	Symbol	this		5576003						
ANR	5576148	Symbol	m_check_tid		5576003						
ANR	5576149	Symbol	vm_type		5576003						
ANR	5576150	Symbol	param		5576003						
ANR	5576151	Symbol	resmgr		5576003						
ANR	5576152	Symbol	* daemonCore		5576003						
ANR	5576153	Symbol	daemonCore		5576003						
ANR	5576154	Symbol	daemonCore -> Register_Timer		5576003						
ANR	5576155	Symbol	param_integer		5576003						
ANR	5576156	Symbol	& VMUniverseMgr :: docheckVMUniverse		5576003						
ANR	5576157	Function	VMUniverseMgr :: setStarterAbility	840:0:21618:21712							
ANR	5576158	FunctionDef	VMUniverseMgr :: setStarterAbility (bool has_vmcode)		5576157	0					
ANR	5576159	CompoundStatement		842:0:21674:21712	5576157	0					
ANR	5576160	ExpressionStatement	m_starter_has_vmcode = has_vmcode	843:1:21677:21710	5576157	0	True				
ANR	5576161	AssignmentExpression	m_starter_has_vmcode = has_vmcode		5576157	0		=			
ANR	5576162	Identifier	m_starter_has_vmcode		5576157	0					
ANR	5576163	Identifier	has_vmcode		5576157	1					
ANR	5576164	ReturnType	void		5576157	1					
ANR	5576165	Identifier	VMUniverseMgr :: setStarterAbility		5576157	2					
ANR	5576166	ParameterList	bool has_vmcode		5576157	3					
ANR	5576167	Parameter	bool has_vmcode	841:33:21657:21671	5576157	0	True				
ANR	5576168	ParameterType	bool		5576157	0					
ANR	5576169	Identifier	has_vmcode		5576157	1					
ANR	5576170	CFGEntryNode	ENTRY		5576157		True				
ANR	5576171	CFGExitNode	EXIT		5576157		True				
ANR	5576172	Symbol	m_starter_has_vmcode		5576157						
ANR	5576173	Symbol	has_vmcode		5576157						
ANR	5576174	Function	VMUniverseMgr :: numOfRunningVM	846:0:21715:21793							
ANR	5576175	FunctionDef	VMUniverseMgr :: numOfRunningVM ()		5576174	0					
ANR	5576176	CompoundStatement		848:0:21755:21793	5576174	0					
ANR	5576177	ReturnStatement	return m_vm_starter_list . Number ( ) ;	849:1:21758:21791	5576174	0	True				
ANR	5576178	CallExpression	m_vm_starter_list . Number ( )		5576174	0					
ANR	5576179	Callee	m_vm_starter_list . Number		5576174	0					
ANR	5576180	MemberAccess	m_vm_starter_list . Number		5576174	0					
ANR	5576181	Identifier	m_vm_starter_list		5576174	0					
ANR	5576182	Identifier	Number		5576174	1					
ANR	5576183	ArgumentList			5576174	1					
ANR	5576184	ReturnType	int		5576174	1					
ANR	5576185	Identifier	VMUniverseMgr :: numOfRunningVM		5576174	2					
ANR	5576186	ParameterList			5576174	3					
ANR	5576187	CFGEntryNode	ENTRY		5576174		True				
ANR	5576188	CFGExitNode	EXIT		5576174		True				
ANR	5576189	Symbol	m_vm_starter_list		5576174						
ANR	5576190	Symbol	m_vm_starter_list . Number		5576174						
ANR	5576191	Function	VMUniverseMgr :: killVM	852:0:21796:23036							
ANR	5576192	FunctionDef	VMUniverseMgr :: killVM (const char * matchstring)		5576191	0					
ANR	5576193	CompoundStatement		854:0:21848:23036	5576191	0					
ANR	5576194	IfStatement	if ( ! matchstring )		5576191	0					
ANR	5576195	Condition	! matchstring	855:6:21856:21867	5576191	0	True				
ANR	5576196	UnaryOperationExpression	! matchstring		5576191	0					
ANR	5576197	UnaryOperator	!		5576191	0					
ANR	5576198	Identifier	matchstring		5576191	1					
ANR	5576199	CompoundStatement		2:21:22:22	5576191	1					
ANR	5576200	ReturnStatement	return ;	856:2:21875:21881	5576191	0	True				
ANR	5576201	IfStatement	if ( ! m_vm_type . Length ( ) || ! m_vmgahp_server . Length ( ) )		5576191	1					
ANR	5576202	Condition	! m_vm_type . Length ( ) || ! m_vmgahp_server . Length ( )	858:5:21891:21938	5576191	0	True				
ANR	5576203	OrExpression	! m_vm_type . Length ( ) || ! m_vmgahp_server . Length ( )		5576191	0		||			
ANR	5576204	UnaryOperationExpression	! m_vm_type . Length ( )		5576191	0					
ANR	5576205	UnaryOperator	!		5576191	0					
ANR	5576206	CallExpression	m_vm_type . Length ( )		5576191	1					
ANR	5576207	Callee	m_vm_type . Length		5576191	0					
ANR	5576208	MemberAccess	m_vm_type . Length		5576191	0					
ANR	5576209	Identifier	m_vm_type		5576191	0					
ANR	5576210	Identifier	Length		5576191	1					
ANR	5576211	ArgumentList			5576191	1					
ANR	5576212	UnaryOperationExpression	! m_vmgahp_server . Length ( )		5576191	1					
ANR	5576213	UnaryOperator	!		5576191	0					
ANR	5576214	CallExpression	m_vmgahp_server . Length ( )		5576191	1					
ANR	5576215	Callee	m_vmgahp_server . Length		5576191	0					
ANR	5576216	MemberAccess	m_vmgahp_server . Length		5576191	0					
ANR	5576217	Identifier	m_vmgahp_server		5576191	0					
ANR	5576218	Identifier	Length		5576191	1					
ANR	5576219	ArgumentList			5576191	1					
ANR	5576220	CompoundStatement		5:56:93:93	5576191	1					
ANR	5576221	ReturnStatement	return ;	859:2:21946:21952	5576191	0	True				
ANR	5576222	IdentifierDeclStatement	ArgList systemcmd ;	865:1:22106:22123	5576191	2	True				
ANR	5576223	IdentifierDecl	systemcmd		5576191	0					
ANR	5576224	IdentifierDeclType	ArgList		5576191	0					
ANR	5576225	Identifier	systemcmd		5576191	1					
ANR	5576226	ExpressionStatement	systemcmd . AppendArg ( m_vmgahp_server )	866:1:22126:22162	5576191	3	True				
ANR	5576227	CallExpression	systemcmd . AppendArg ( m_vmgahp_server )		5576191	0					
ANR	5576228	Callee	systemcmd . AppendArg		5576191	0					
ANR	5576229	MemberAccess	systemcmd . AppendArg		5576191	0					
ANR	5576230	Identifier	systemcmd		5576191	0					
ANR	5576231	Identifier	AppendArg		5576191	1					
ANR	5576232	ArgumentList	m_vmgahp_server		5576191	1					
ANR	5576233	Argument	m_vmgahp_server		5576191	0					
ANR	5576234	Identifier	m_vmgahp_server		5576191	0					
ANR	5576235	ExpressionStatement	"systemcmd . AppendArg ( ""-f"" )"	867:1:22165:22190	5576191	4	True				
ANR	5576236	CallExpression	"systemcmd . AppendArg ( ""-f"" )"		5576191	0					
ANR	5576237	Callee	systemcmd . AppendArg		5576191	0					
ANR	5576238	MemberAccess	systemcmd . AppendArg		5576191	0					
ANR	5576239	Identifier	systemcmd		5576191	0					
ANR	5576240	Identifier	AppendArg		5576191	1					
ANR	5576241	ArgumentList	"""-f"""		5576191	1					
ANR	5576242	Argument	"""-f"""		5576191	0					
ANR	5576243	PrimaryExpression	"""-f"""		5576191	0					
ANR	5576244	IdentifierDeclStatement	"char * gahp_log_file = param ( ""VM_GAHP_LOG"" ) ;"	868:1:22193:22235	5576191	5	True				
ANR	5576245	IdentifierDecl	"* gahp_log_file = param ( ""VM_GAHP_LOG"" )"		5576191	0					
ANR	5576246	IdentifierDeclType	char *		5576191	0					
ANR	5576247	Identifier	gahp_log_file		5576191	1					
ANR	5576248	AssignmentExpression	"* gahp_log_file = param ( ""VM_GAHP_LOG"" )"		5576191	2		=			
ANR	5576249	Identifier	gahp_log_file		5576191	0					
ANR	5576250	CallExpression	"param ( ""VM_GAHP_LOG"" )"		5576191	1					
ANR	5576251	Callee	param		5576191	0					
ANR	5576252	Identifier	param		5576191	0					
ANR	5576253	ArgumentList	"""VM_GAHP_LOG"""		5576191	1					
ANR	5576254	Argument	"""VM_GAHP_LOG"""		5576191	0					
ANR	5576255	PrimaryExpression	"""VM_GAHP_LOG"""		5576191	0					
ANR	5576256	IfStatement	if ( gahp_log_file )		5576191	6					
ANR	5576257	Condition	gahp_log_file	869:5:22242:22254	5576191	0	True				
ANR	5576258	Identifier	gahp_log_file		5576191	0					
ANR	5576259	CompoundStatement		16:21:409:409	5576191	1					
ANR	5576260	ExpressionStatement	free ( gahp_log_file )	870:2:22262:22281	5576191	0	True				
ANR	5576261	CallExpression	free ( gahp_log_file )		5576191	0					
ANR	5576262	Callee	free		5576191	0					
ANR	5576263	Identifier	free		5576191	0					
ANR	5576264	ArgumentList	gahp_log_file		5576191	1					
ANR	5576265	Argument	gahp_log_file		5576191	0					
ANR	5576266	Identifier	gahp_log_file		5576191	0					
ANR	5576267	ElseStatement	else		5576191	0					
ANR	5576268	CompoundStatement		18:7:441:441	5576191	0					
ANR	5576269	ExpressionStatement	"systemcmd . AppendArg ( ""-t"" )"	872:2:22294:22319	5576191	0	True				
ANR	5576270	CallExpression	"systemcmd . AppendArg ( ""-t"" )"		5576191	0					
ANR	5576271	Callee	systemcmd . AppendArg		5576191	0					
ANR	5576272	MemberAccess	systemcmd . AppendArg		5576191	0					
ANR	5576273	Identifier	systemcmd		5576191	0					
ANR	5576274	Identifier	AppendArg		5576191	1					
ANR	5576275	ArgumentList	"""-t"""		5576191	1					
ANR	5576276	Argument	"""-t"""		5576191	0					
ANR	5576277	PrimaryExpression	"""-t"""		5576191	0					
ANR	5576278	ExpressionStatement	"systemcmd . AppendArg ( ""-M"" )"	874:1:22325:22350	5576191	7	True				
ANR	5576279	CallExpression	"systemcmd . AppendArg ( ""-M"" )"		5576191	0					
ANR	5576280	Callee	systemcmd . AppendArg		5576191	0					
ANR	5576281	MemberAccess	systemcmd . AppendArg		5576191	0					
ANR	5576282	Identifier	systemcmd		5576191	0					
ANR	5576283	Identifier	AppendArg		5576191	1					
ANR	5576284	ArgumentList	"""-M"""		5576191	1					
ANR	5576285	Argument	"""-M"""		5576191	0					
ANR	5576286	PrimaryExpression	"""-M"""		5576191	0					
ANR	5576287	ExpressionStatement	systemcmd . AppendArg ( VMGAHP_KILL_MODE )	875:1:22353:22390	5576191	8	True				
ANR	5576288	CallExpression	systemcmd . AppendArg ( VMGAHP_KILL_MODE )		5576191	0					
ANR	5576289	Callee	systemcmd . AppendArg		5576191	0					
ANR	5576290	MemberAccess	systemcmd . AppendArg		5576191	0					
ANR	5576291	Identifier	systemcmd		5576191	0					
ANR	5576292	Identifier	AppendArg		5576191	1					
ANR	5576293	ArgumentList	VMGAHP_KILL_MODE		5576191	1					
ANR	5576294	Argument	VMGAHP_KILL_MODE		5576191	0					
ANR	5576295	Identifier	VMGAHP_KILL_MODE		5576191	0					
ANR	5576296	ExpressionStatement	"systemcmd . AppendArg ( ""vmtype"" )"	876:1:22393:22422	5576191	9	True				
ANR	5576297	CallExpression	"systemcmd . AppendArg ( ""vmtype"" )"		5576191	0					
ANR	5576298	Callee	systemcmd . AppendArg		5576191	0					
ANR	5576299	MemberAccess	systemcmd . AppendArg		5576191	0					
ANR	5576300	Identifier	systemcmd		5576191	0					
ANR	5576301	Identifier	AppendArg		5576191	1					
ANR	5576302	ArgumentList	"""vmtype"""		5576191	1					
ANR	5576303	Argument	"""vmtype"""		5576191	0					
ANR	5576304	PrimaryExpression	"""vmtype"""		5576191	0					
ANR	5576305	ExpressionStatement	systemcmd . AppendArg ( m_vm_type )	877:1:22425:22455	5576191	10	True				
ANR	5576306	CallExpression	systemcmd . AppendArg ( m_vm_type )		5576191	0					
ANR	5576307	Callee	systemcmd . AppendArg		5576191	0					
ANR	5576308	MemberAccess	systemcmd . AppendArg		5576191	0					
ANR	5576309	Identifier	systemcmd		5576191	0					
ANR	5576310	Identifier	AppendArg		5576191	1					
ANR	5576311	ArgumentList	m_vm_type		5576191	1					
ANR	5576312	Argument	m_vm_type		5576191	0					
ANR	5576313	Identifier	m_vm_type		5576191	0					
ANR	5576314	ExpressionStatement	"systemcmd . AppendArg ( ""match"" )"	878:1:22458:22486	5576191	11	True				
ANR	5576315	CallExpression	"systemcmd . AppendArg ( ""match"" )"		5576191	0					
ANR	5576316	Callee	systemcmd . AppendArg		5576191	0					
ANR	5576317	MemberAccess	systemcmd . AppendArg		5576191	0					
ANR	5576318	Identifier	systemcmd		5576191	0					
ANR	5576319	Identifier	AppendArg		5576191	1					
ANR	5576320	ArgumentList	"""match"""		5576191	1					
ANR	5576321	Argument	"""match"""		5576191	0					
ANR	5576322	PrimaryExpression	"""match"""		5576191	0					
ANR	5576323	ExpressionStatement	systemcmd . AppendArg ( matchstring )	879:1:22489:22521	5576191	12	True				
ANR	5576324	CallExpression	systemcmd . AppendArg ( matchstring )		5576191	0					
ANR	5576325	Callee	systemcmd . AppendArg		5576191	0					
ANR	5576326	MemberAccess	systemcmd . AppendArg		5576191	0					
ANR	5576327	Identifier	systemcmd		5576191	0					
ANR	5576328	Identifier	AppendArg		5576191	1					
ANR	5576329	ArgumentList	matchstring		5576191	1					
ANR	5576330	Argument	matchstring		5576191	0					
ANR	5576331	Identifier	matchstring		5576191	0					
ANR	5576332	IfStatement	if ( can_switch_ids ( ) )		5576191	13					
ANR	5576333	Condition	can_switch_ids ( )	882:5:22549:22564	5576191	0	True				
ANR	5576334	CallExpression	can_switch_ids ( )		5576191	0					
ANR	5576335	Callee	can_switch_ids		5576191	0					
ANR	5576336	Identifier	can_switch_ids		5576191	0					
ANR	5576337	ArgumentList			5576191	1					
ANR	5576338	CompoundStatement		30:2:723:739	5576191	1					
ANR	5576339	IdentifierDeclStatement	MyString tmp_str ;	883:2:22572:22588	5576191	0	True				
ANR	5576340	IdentifierDecl	tmp_str		5576191	0					
ANR	5576341	IdentifierDeclType	MyString		5576191	0					
ANR	5576342	Identifier	tmp_str		5576191	1					
ANR	5576343	ExpressionStatement	"tmp_str . sprintf ( ""%d"" , ( int ) get_condor_uid ( ) )"	884:2:22592:22636	5576191	1	True				
ANR	5576344	CallExpression	"tmp_str . sprintf ( ""%d"" , ( int ) get_condor_uid ( ) )"		5576191	0					
ANR	5576345	Callee	tmp_str . sprintf		5576191	0					
ANR	5576346	MemberAccess	tmp_str . sprintf		5576191	0					
ANR	5576347	Identifier	tmp_str		5576191	0					
ANR	5576348	Identifier	sprintf		5576191	1					
ANR	5576349	ArgumentList	"""%d"""		5576191	1					
ANR	5576350	Argument	"""%d"""		5576191	0					
ANR	5576351	PrimaryExpression	"""%d"""		5576191	0					
ANR	5576352	Argument	( int ) get_condor_uid ( )		5576191	1					
ANR	5576353	CastExpression	( int ) get_condor_uid ( )		5576191	0					
ANR	5576354	CastTarget	int		5576191	0					
ANR	5576355	CallExpression	get_condor_uid ( )		5576191	1					
ANR	5576356	Callee	get_condor_uid		5576191	0					
ANR	5576357	Identifier	get_condor_uid		5576191	0					
ANR	5576358	ArgumentList			5576191	1					
ANR	5576359	ExpressionStatement	"SetEnv ( ""VMGAHP_USER_UID"" , tmp_str . Value ( ) )"	885:2:22640:22682	5576191	2	True				
ANR	5576360	CallExpression	"SetEnv ( ""VMGAHP_USER_UID"" , tmp_str . Value ( ) )"		5576191	0					
ANR	5576361	Callee	SetEnv		5576191	0					
ANR	5576362	Identifier	SetEnv		5576191	0					
ANR	5576363	ArgumentList	"""VMGAHP_USER_UID"""		5576191	1					
ANR	5576364	Argument	"""VMGAHP_USER_UID"""		5576191	0					
ANR	5576365	PrimaryExpression	"""VMGAHP_USER_UID"""		5576191	0					
ANR	5576366	Argument	tmp_str . Value ( )		5576191	1					
ANR	5576367	CallExpression	tmp_str . Value ( )		5576191	0					
ANR	5576368	Callee	tmp_str . Value		5576191	0					
ANR	5576369	MemberAccess	tmp_str . Value		5576191	0					
ANR	5576370	Identifier	tmp_str		5576191	0					
ANR	5576371	Identifier	Value		5576191	1					
ANR	5576372	ArgumentList			5576191	1					
ANR	5576373	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	890:1:22735:22768	5576191	14	True				
ANR	5576374	IdentifierDecl	priv = set_root_priv ( )		5576191	0					
ANR	5576375	IdentifierDeclType	priv_state		5576191	0					
ANR	5576376	Identifier	priv		5576191	1					
ANR	5576377	AssignmentExpression	priv = set_root_priv ( )		5576191	2		=			
ANR	5576378	Identifier	priv		5576191	0					
ANR	5576379	CallExpression	set_root_priv ( )		5576191	1					
ANR	5576380	Callee	set_root_priv		5576191	0					
ANR	5576381	Identifier	set_root_priv		5576191	0					
ANR	5576382	ArgumentList			5576191	1					
ANR	5576383	IdentifierDeclStatement	int ret = my_system ( systemcmd ) ;	891:1:22771:22801	5576191	15	True				
ANR	5576384	IdentifierDecl	ret = my_system ( systemcmd )		5576191	0					
ANR	5576385	IdentifierDeclType	int		5576191	0					
ANR	5576386	Identifier	ret		5576191	1					
ANR	5576387	AssignmentExpression	ret = my_system ( systemcmd )		5576191	2		=			
ANR	5576388	Identifier	ret		5576191	0					
ANR	5576389	CallExpression	my_system ( systemcmd )		5576191	1					
ANR	5576390	Callee	my_system		5576191	0					
ANR	5576391	Identifier	my_system		5576191	0					
ANR	5576392	ArgumentList	systemcmd		5576191	1					
ANR	5576393	Argument	systemcmd		5576191	0					
ANR	5576394	Identifier	systemcmd		5576191	0					
ANR	5576395	ExpressionStatement	set_priv ( priv )	893:1:22826:22840	5576191	16	True				
ANR	5576396	CallExpression	set_priv ( priv )		5576191	0					
ANR	5576397	Callee	set_priv		5576191	0					
ANR	5576398	Identifier	set_priv		5576191	0					
ANR	5576399	ArgumentList	priv		5576191	1					
ANR	5576400	Argument	priv		5576191	0					
ANR	5576401	Identifier	priv		5576191	0					
ANR	5576402	IfStatement	if ( ret == 0 )		5576191	17					
ANR	5576403	Condition	ret == 0	895:5:22848:22855	5576191	0	True				
ANR	5576404	EqualityExpression	ret == 0		5576191	0		==			
ANR	5576405	Identifier	ret		5576191	0					
ANR	5576406	PrimaryExpression	0		5576191	1					
ANR	5576407	CompoundStatement		42:16:1010:1010	5576191	1					
ANR	5576408	Statement	dprintf	896:2:22863:22869	5576191	0	True				
ANR	5576409	Statement	(	896:9:22870:22870	5576191	1	True				
ANR	5576410	Statement	D_ALWAYS	896:11:22872:22879	5576191	2	True				
ANR	5576411	Statement	","	896:19:22880:22880	5576191	3	True				
ANR	5576412	Statement	"""VMUniverseMgr::killVM() is called with """	896:21:22882:22922	5576191	4	True				
ANR	5576413	Statement	"""'%s'\\n"""	897:6:22930:22937	5576191	5	True				
ANR	5576414	Statement	","	897:14:22938:22938	5576191	6	True				
ANR	5576415	Statement	matchstring	897:16:22940:22950	5576191	7	True				
ANR	5576416	Statement	)	897:28:22952:22952	5576191	8	True				
ANR	5576417	ExpressionStatement		897:29:22953:22953	5576191	9	True				
ANR	5576418	ElseStatement	else		5576191	0					
ANR	5576419	CompoundStatement		45:7:1113:1113	5576191	0					
ANR	5576420	ExpressionStatement	"dprintf ( D_ALWAYS , ""VMUniverseMgr::killVM() failed!\\n"" )"	899:2:22966:23021	5576191	0	True				
ANR	5576421	CallExpression	"dprintf ( D_ALWAYS , ""VMUniverseMgr::killVM() failed!\\n"" )"		5576191	0					
ANR	5576422	Callee	dprintf		5576191	0					
ANR	5576423	Identifier	dprintf		5576191	0					
ANR	5576424	ArgumentList	D_ALWAYS		5576191	1					
ANR	5576425	Argument	D_ALWAYS		5576191	0					
ANR	5576426	Identifier	D_ALWAYS		5576191	0					
ANR	5576427	Argument	"""VMUniverseMgr::killVM() failed!\\n"""		5576191	1					
ANR	5576428	PrimaryExpression	"""VMUniverseMgr::killVM() failed!\\n"""		5576191	0					
ANR	5576429	ReturnStatement	return ;	902:1:23028:23034	5576191	18	True				
ANR	5576430	ReturnType	void		5576191	1					
ANR	5576431	Identifier	VMUniverseMgr :: killVM		5576191	2					
ANR	5576432	ParameterList	const char * matchstring		5576191	3					
ANR	5576433	Parameter	const char * matchstring	853:22:21823:21845	5576191	0	True				
ANR	5576434	ParameterType	const char *		5576191	0					
ANR	5576435	Identifier	matchstring		5576191	1					
ANR	5576436	CFGEntryNode	ENTRY		5576191		True				
ANR	5576437	CFGExitNode	EXIT		5576191		True				
ANR	5576438	Symbol	ret		5576191						
ANR	5576439	Symbol	gahp_log_file		5576191						
ANR	5576440	Symbol	tmp_str		5576191						
ANR	5576441	Symbol	systemcmd		5576191						
ANR	5576442	Symbol	tmp_str . Value		5576191						
ANR	5576443	Symbol	D_ALWAYS		5576191						
ANR	5576444	Symbol	m_vmgahp_server		5576191						
ANR	5576445	Symbol	set_root_priv		5576191						
ANR	5576446	Symbol	m_vm_type . Length		5576191						
ANR	5576447	Symbol	m_vmgahp_server . Length		5576191						
ANR	5576448	Symbol	m_vm_type		5576191						
ANR	5576449	Symbol	can_switch_ids		5576191						
ANR	5576450	Symbol	get_condor_uid		5576191						
ANR	5576451	Symbol	param		5576191						
ANR	5576452	Symbol	priv		5576191						
ANR	5576453	Symbol	matchstring		5576191						
ANR	5576454	Symbol	VMGAHP_KILL_MODE		5576191						
ANR	5576455	Symbol	my_system		5576191						
ANR	5576456	Function	VMUniverseMgr :: killVM	905:0:23039:24031							
ANR	5576457	FunctionDef	VMUniverseMgr :: killVM (VMStarterInfo * info)		5576456	0					
ANR	5576458	CompoundStatement		907:0:23087:24031	5576456	0					
ANR	5576459	IfStatement	if ( ! info )		5576456	0					
ANR	5576460	Condition	! info	908:5:23094:23098	5576456	0	True				
ANR	5576461	UnaryOperationExpression	! info		5576456	0					
ANR	5576462	UnaryOperator	!		5576456	0					
ANR	5576463	Identifier	info		5576456	1					
ANR	5576464	CompoundStatement		2:13:14:14	5576456	1					
ANR	5576465	ReturnStatement	return ;	909:2:23106:23112	5576456	0	True				
ANR	5576466	IfStatement	if ( ! m_vm_type . Length ( ) || ! m_vmgahp_server . Length ( ) )		5576456	1					
ANR	5576467	Condition	! m_vm_type . Length ( ) || ! m_vmgahp_server . Length ( )	911:5:23122:23169	5576456	0	True				
ANR	5576468	OrExpression	! m_vm_type . Length ( ) || ! m_vmgahp_server . Length ( )		5576456	0		||			
ANR	5576469	UnaryOperationExpression	! m_vm_type . Length ( )		5576456	0					
ANR	5576470	UnaryOperator	!		5576456	0					
ANR	5576471	CallExpression	m_vm_type . Length ( )		5576456	1					
ANR	5576472	Callee	m_vm_type . Length		5576456	0					
ANR	5576473	MemberAccess	m_vm_type . Length		5576456	0					
ANR	5576474	Identifier	m_vm_type		5576456	0					
ANR	5576475	Identifier	Length		5576456	1					
ANR	5576476	ArgumentList			5576456	1					
ANR	5576477	UnaryOperationExpression	! m_vmgahp_server . Length ( )		5576456	1					
ANR	5576478	UnaryOperator	!		5576456	0					
ANR	5576479	CallExpression	m_vmgahp_server . Length ( )		5576456	1					
ANR	5576480	Callee	m_vmgahp_server . Length		5576456	0					
ANR	5576481	MemberAccess	m_vmgahp_server . Length		5576456	0					
ANR	5576482	Identifier	m_vmgahp_server		5576456	0					
ANR	5576483	Identifier	Length		5576456	1					
ANR	5576484	ArgumentList			5576456	1					
ANR	5576485	CompoundStatement		5:56:85:85	5576456	1					
ANR	5576486	ReturnStatement	return ;	912:2:23177:23183	5576456	0	True				
ANR	5576487	IfStatement	if ( info -> m_vm_pid > 0 )		5576456	2					
ANR	5576488	Condition	info -> m_vm_pid > 0	915:5:23194:23211	5576456	0	True				
ANR	5576489	RelationalExpression	info -> m_vm_pid > 0		5576456	0		>			
ANR	5576490	PtrMemberAccess	info -> m_vm_pid		5576456	0					
ANR	5576491	Identifier	info		5576456	0					
ANR	5576492	Identifier	m_vm_pid		5576456	1					
ANR	5576493	PrimaryExpression	0		5576456	1					
ANR	5576494	CompoundStatement		9:26:127:127	5576456	1					
ANR	5576495	Statement	dprintf	916:2:23219:23225	5576456	0	True				
ANR	5576496	Statement	(	916:9:23226:23226	5576456	1	True				
ANR	5576497	Statement	D_ALWAYS	916:11:23228:23235	5576456	2	True				
ANR	5576498	Statement	","	916:19:23236:23236	5576456	3	True				
ANR	5576499	Statement	"""In VMUniverseMgr::killVM(), """	916:21:23238:23267	5576456	4	True				
ANR	5576500	Statement	"""Sending SIGKILL to Process[%d]\\n"""	917:4:23273:23306	5576456	5	True				
ANR	5576501	Statement	","	917:38:23307:23307	5576456	6	True				
ANR	5576502	Statement	(	917:40:23309:23309	5576456	7	True				
ANR	5576503	Statement	int	917:41:23310:23312	5576456	8	True				
ANR	5576504	Statement	)	917:44:23313:23313	5576456	9	True				
ANR	5576505	Statement	info	917:45:23314:23317	5576456	10	True				
ANR	5576506	Statement	->	917:49:23318:23319	5576456	11	True				
ANR	5576507	Statement	m_vm_pid	917:51:23320:23327	5576456	12	True				
ANR	5576508	Statement	)	917:59:23328:23328	5576456	13	True				
ANR	5576509	ExpressionStatement		917:60:23329:23329	5576456	14	True				
ANR	5576510	ExpressionStatement	"daemonCore -> Send_Signal ( info -> m_vm_pid , SIGKILL )"	918:2:23333:23381	5576456	15	True				
ANR	5576511	CallExpression	"daemonCore -> Send_Signal ( info -> m_vm_pid , SIGKILL )"		5576456	0					
ANR	5576512	Callee	daemonCore -> Send_Signal		5576456	0					
ANR	5576513	PtrMemberAccess	daemonCore -> Send_Signal		5576456	0					
ANR	5576514	Identifier	daemonCore		5576456	0					
ANR	5576515	Identifier	Send_Signal		5576456	1					
ANR	5576516	ArgumentList	info -> m_vm_pid		5576456	1					
ANR	5576517	Argument	info -> m_vm_pid		5576456	0					
ANR	5576518	PtrMemberAccess	info -> m_vm_pid		5576456	0					
ANR	5576519	Identifier	info		5576456	0					
ANR	5576520	Identifier	m_vm_pid		5576456	1					
ANR	5576521	Argument	SIGKILL		5576456	1					
ANR	5576522	Identifier	SIGKILL		5576456	0					
ANR	5576523	IdentifierDeclStatement	MyString matchstring ;	921:1:23388:23408	5576456	3	True				
ANR	5576524	IdentifierDecl	matchstring		5576456	0					
ANR	5576525	IdentifierDeclType	MyString		5576456	0					
ANR	5576526	Identifier	matchstring		5576456	1					
ANR	5576527	IdentifierDeclStatement	MyString workingdir ;	922:1:23411:23430	5576456	4	True				
ANR	5576528	IdentifierDecl	workingdir		5576456	0					
ANR	5576529	IdentifierDeclType	MyString		5576456	0					
ANR	5576530	Identifier	workingdir		5576456	1					
ANR	5576531	ExpressionStatement	"workingdir . sprintf ( ""%s%cdir_%ld"" , info -> m_execute_dir . Value ( ) , DIR_DELIM_CHAR , ( long ) info -> m_pid )"	924:1:23434:23551	5576456	5	True				
ANR	5576532	CallExpression	"workingdir . sprintf ( ""%s%cdir_%ld"" , info -> m_execute_dir . Value ( ) , DIR_DELIM_CHAR , ( long ) info -> m_pid )"		5576456	0					
ANR	5576533	Callee	workingdir . sprintf		5576456	0					
ANR	5576534	MemberAccess	workingdir . sprintf		5576456	0					
ANR	5576535	Identifier	workingdir		5576456	0					
ANR	5576536	Identifier	sprintf		5576456	1					
ANR	5576537	ArgumentList	"""%s%cdir_%ld"""		5576456	1					
ANR	5576538	Argument	"""%s%cdir_%ld"""		5576456	0					
ANR	5576539	PrimaryExpression	"""%s%cdir_%ld"""		5576456	0					
ANR	5576540	Argument	info -> m_execute_dir . Value ( )		5576456	1					
ANR	5576541	CallExpression	info -> m_execute_dir . Value ( )		5576456	0					
ANR	5576542	Callee	info -> m_execute_dir . Value		5576456	0					
ANR	5576543	MemberAccess	info -> m_execute_dir . Value		5576456	0					
ANR	5576544	PtrMemberAccess	info -> m_execute_dir		5576456	0					
ANR	5576545	Identifier	info		5576456	0					
ANR	5576546	Identifier	m_execute_dir		5576456	1					
ANR	5576547	Identifier	Value		5576456	1					
ANR	5576548	ArgumentList			5576456	1					
ANR	5576549	Argument	DIR_DELIM_CHAR		5576456	2					
ANR	5576550	Identifier	DIR_DELIM_CHAR		5576456	0					
ANR	5576551	Argument	( long ) info -> m_pid		5576456	3					
ANR	5576552	CastExpression	( long ) info -> m_pid		5576456	0					
ANR	5576553	CastTarget	long		5576456	0					
ANR	5576554	PtrMemberAccess	info -> m_pid		5576456	1					
ANR	5576555	Identifier	info		5576456	0					
ANR	5576556	Identifier	m_pid		5576456	1					
ANR	5576557	IfStatement	"if ( ( strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_XEN ) == MATCH ) || ( strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_KVM ) == 0 ) )"		5576456	6					
ANR	5576558	Condition	"( strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_XEN ) == MATCH ) || ( strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_KVM ) == 0 )"	927:5:23559:23687	5576456	0	True				
ANR	5576559	OrExpression	"( strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_XEN ) == MATCH ) || ( strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_KVM ) == 0 )"		5576456	0		||			
ANR	5576560	EqualityExpression	"strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_XEN ) == MATCH"		5576456	0		==			
ANR	5576561	CallExpression	"strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_XEN )"		5576456	0					
ANR	5576562	Callee	strcasecmp		5576456	0					
ANR	5576563	Identifier	strcasecmp		5576456	0					
ANR	5576564	ArgumentList	m_vm_type . Value ( )		5576456	1					
ANR	5576565	Argument	m_vm_type . Value ( )		5576456	0					
ANR	5576566	CallExpression	m_vm_type . Value ( )		5576456	0					
ANR	5576567	Callee	m_vm_type . Value		5576456	0					
ANR	5576568	MemberAccess	m_vm_type . Value		5576456	0					
ANR	5576569	Identifier	m_vm_type		5576456	0					
ANR	5576570	Identifier	Value		5576456	1					
ANR	5576571	ArgumentList			5576456	1					
ANR	5576572	Argument	CONDOR_VM_UNIVERSE_XEN		5576456	1					
ANR	5576573	Identifier	CONDOR_VM_UNIVERSE_XEN		5576456	0					
ANR	5576574	Identifier	MATCH		5576456	1					
ANR	5576575	EqualityExpression	"strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_KVM ) == 0"		5576456	1		==			
ANR	5576576	CallExpression	"strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_KVM )"		5576456	0					
ANR	5576577	Callee	strcasecmp		5576456	0					
ANR	5576578	Identifier	strcasecmp		5576456	0					
ANR	5576579	ArgumentList	m_vm_type . Value ( )		5576456	1					
ANR	5576580	Argument	m_vm_type . Value ( )		5576456	0					
ANR	5576581	CallExpression	m_vm_type . Value ( )		5576456	0					
ANR	5576582	Callee	m_vm_type . Value		5576456	0					
ANR	5576583	MemberAccess	m_vm_type . Value		5576456	0					
ANR	5576584	Identifier	m_vm_type		5576456	0					
ANR	5576585	Identifier	Value		5576456	1					
ANR	5576586	ArgumentList			5576456	1					
ANR	5576587	Argument	CONDOR_VM_UNIVERSE_KVM		5576456	1					
ANR	5576588	Identifier	CONDOR_VM_UNIVERSE_KVM		5576456	0					
ANR	5576589	PrimaryExpression	0		5576456	1					
ANR	5576590	CompoundStatement		21:136:602:602	5576456	1					
ANR	5576591	IfStatement	"if ( create_name_for_VM ( & info -> m_job_ad , matchstring ) == false )"		5576456	0					
ANR	5576592	Condition	"create_name_for_VM ( & info -> m_job_ad , matchstring ) == false"	928:6:23698:23754	5576456	0	True				
ANR	5576593	EqualityExpression	"create_name_for_VM ( & info -> m_job_ad , matchstring ) == false"		5576456	0		==			
ANR	5576594	CallExpression	"create_name_for_VM ( & info -> m_job_ad , matchstring )"		5576456	0					
ANR	5576595	Callee	create_name_for_VM		5576456	0					
ANR	5576596	Identifier	create_name_for_VM		5576456	0					
ANR	5576597	ArgumentList	& info -> m_job_ad		5576456	1					
ANR	5576598	Argument	& info -> m_job_ad		5576456	0					
ANR	5576599	UnaryOperationExpression	& info -> m_job_ad		5576456	0					
ANR	5576600	UnaryOperator	&		5576456	0					
ANR	5576601	PtrMemberAccess	info -> m_job_ad		5576456	1					
ANR	5576602	Identifier	info		5576456	0					
ANR	5576603	Identifier	m_job_ad		5576456	1					
ANR	5576604	Argument	matchstring		5576456	1					
ANR	5576605	Identifier	matchstring		5576456	0					
ANR	5576606	Identifier	false		5576456	1					
ANR	5576607	CompoundStatement		22:66:670:670	5576456	1					
ANR	5576608	Statement	dprintf	929:3:23763:23769	5576456	0	True				
ANR	5576609	Statement	(	929:10:23770:23770	5576456	1	True				
ANR	5576610	Statement	D_ALWAYS	929:11:23771:23778	5576456	2	True				
ANR	5576611	Statement	","	929:19:23779:23779	5576456	3	True				
ANR	5576612	Statement	"""VMUniverseMgr::killVM() : """	929:21:23781:23808	5576456	4	True				
ANR	5576613	Statement	"""cannot make the name of VM\\n"""	930:5:23815:23844	5576456	5	True				
ANR	5576614	Statement	)	930:35:23845:23845	5576456	6	True				
ANR	5576615	ExpressionStatement		930:36:23846:23846	5576456	7	True				
ANR	5576616	ReturnStatement	return ;	931:3:23851:23857	5576456	8	True				
ANR	5576617	ElseStatement	else		5576456	0					
ANR	5576618	CompoundStatement		27:7:782:782	5576456	0					
ANR	5576619	ExpressionStatement	matchstring = workingdir	936:2:23969:23993	5576456	0	True				
ANR	5576620	AssignmentExpression	matchstring = workingdir		5576456	0		=			
ANR	5576621	Identifier	matchstring		5576456	0					
ANR	5576622	Identifier	workingdir		5576456	1					
ANR	5576623	ExpressionStatement	killVM ( matchstring . Value ( ) )	939:1:24000:24029	5576456	7	True				
ANR	5576624	CallExpression	killVM ( matchstring . Value ( ) )		5576456	0					
ANR	5576625	Callee	killVM		5576456	0					
ANR	5576626	Identifier	killVM		5576456	0					
ANR	5576627	ArgumentList	matchstring . Value ( )		5576456	1					
ANR	5576628	Argument	matchstring . Value ( )		5576456	0					
ANR	5576629	CallExpression	matchstring . Value ( )		5576456	0					
ANR	5576630	Callee	matchstring . Value		5576456	0					
ANR	5576631	MemberAccess	matchstring . Value		5576456	0					
ANR	5576632	Identifier	matchstring		5576456	0					
ANR	5576633	Identifier	Value		5576456	1					
ANR	5576634	ArgumentList			5576456	1					
ANR	5576635	ReturnType	void		5576456	1					
ANR	5576636	Identifier	VMUniverseMgr :: killVM		5576456	2					
ANR	5576637	ParameterList	VMStarterInfo * info		5576456	3					
ANR	5576638	Parameter	VMStarterInfo * info	906:22:23066:23084	5576456	0	True				
ANR	5576639	ParameterType	VMStarterInfo *		5576456	0					
ANR	5576640	Identifier	info		5576456	1					
ANR	5576641	CFGEntryNode	ENTRY		5576456		True				
ANR	5576642	CFGExitNode	EXIT		5576456		True				
ANR	5576643	Symbol	create_name_for_VM		5576456						
ANR	5576644	Symbol	& info -> m_job_ad		5576456						
ANR	5576645	Symbol	workingdir		5576456						
ANR	5576646	Symbol	DIR_DELIM_CHAR		5576456						
ANR	5576647	Symbol	info -> m_execute_dir . Value		5576456						
ANR	5576648	Symbol	m_vm_type . Value		5576456						
ANR	5576649	Symbol	false		5576456						
ANR	5576650	Symbol	m_vmgahp_server		5576456						
ANR	5576651	Symbol	info -> m_pid		5576456						
ANR	5576652	Symbol	SIGKILL		5576456						
ANR	5576653	Symbol	info -> m_vm_pid		5576456						
ANR	5576654	Symbol	m_vm_type . Length		5576456						
ANR	5576655	Symbol	m_vm_type		5576456						
ANR	5576656	Symbol	m_vmgahp_server . Length		5576456						
ANR	5576657	Symbol	info -> m_execute_dir		5576456						
ANR	5576658	Symbol	CONDOR_VM_UNIVERSE_KVM		5576456						
ANR	5576659	Symbol	matchstring . Value		5576456						
ANR	5576660	Symbol	daemonCore		5576456						
ANR	5576661	Symbol	CONDOR_VM_UNIVERSE_XEN		5576456						
ANR	5576662	Symbol	* info		5576456						
ANR	5576663	Symbol	strcasecmp		5576456						
ANR	5576664	Symbol	matchstring		5576456						
ANR	5576665	Symbol	MATCH		5576456						
ANR	5576666	Symbol	info		5576456						
ANR	5576667	Function	VMUniverseMgr :: isStarterForVM	942:0:24034:24204							
ANR	5576668	FunctionDef	VMUniverseMgr :: isStarterForVM (pid_t s_pid)		5576667	0					
ANR	5576669	CompoundStatement		944:0:24083:24204	5576667	0					
ANR	5576670	IdentifierDeclStatement	VMStarterInfo * info = findVMStarterInfoWithStarterPid ( s_pid ) ;	945:1:24086:24146	5576667	0	True				
ANR	5576671	IdentifierDecl	* info = findVMStarterInfoWithStarterPid ( s_pid )		5576667	0					
ANR	5576672	IdentifierDeclType	VMStarterInfo *		5576667	0					
ANR	5576673	Identifier	info		5576667	1					
ANR	5576674	AssignmentExpression	* info = findVMStarterInfoWithStarterPid ( s_pid )		5576667	2		=			
ANR	5576675	Identifier	info		5576667	0					
ANR	5576676	CallExpression	findVMStarterInfoWithStarterPid ( s_pid )		5576667	1					
ANR	5576677	Callee	findVMStarterInfoWithStarterPid		5576667	0					
ANR	5576678	Identifier	findVMStarterInfoWithStarterPid		5576667	0					
ANR	5576679	ArgumentList	s_pid		5576667	1					
ANR	5576680	Argument	s_pid		5576667	0					
ANR	5576681	Identifier	s_pid		5576667	0					
ANR	5576682	IfStatement	if ( info )		5576667	1					
ANR	5576683	Condition	info	947:4:24153:24156	5576667	0	True				
ANR	5576684	Identifier	info		5576667	0					
ANR	5576685	CompoundStatement		4:10:75:75	5576667	1					
ANR	5576686	ReturnStatement	return true ;	948:2:24163:24174	5576667	0	True				
ANR	5576687	Identifier	true		5576667	0					
ANR	5576688	ElseStatement	else		5576667	0					
ANR	5576689	CompoundStatement		6:7:99:99	5576667	0					
ANR	5576690	ReturnStatement	return false ;	950:2:24187:24199	5576667	0	True				
ANR	5576691	Identifier	false		5576667	0					
ANR	5576692	ReturnType	bool		5576667	1					
ANR	5576693	Identifier	VMUniverseMgr :: isStarterForVM		5576667	2					
ANR	5576694	ParameterList	pid_t s_pid		5576667	3					
ANR	5576695	Parameter	pid_t s_pid	943:30:24070:24080	5576667	0	True				
ANR	5576696	ParameterType	pid_t		5576667	0					
ANR	5576697	Identifier	s_pid		5576667	1					
ANR	5576698	CFGEntryNode	ENTRY		5576667		True				
ANR	5576699	CFGExitNode	EXIT		5576667		True				
ANR	5576700	Symbol	true		5576667						
ANR	5576701	Symbol	false		5576667						
ANR	5576702	Symbol	findVMStarterInfoWithStarterPid		5576667						
ANR	5576703	Symbol	s_pid		5576667						
ANR	5576704	Symbol	info		5576667						
ANR	5576705	Function	VMUniverseMgr :: getUsageForVM	954:0:24207:25030							
ANR	5576706	FunctionDef	"VMUniverseMgr :: getUsageForVM (pid_t s_pid , ProcFamilyUsage & usage)"		5576705	0					
ANR	5576707	CompoundStatement		956:0:24278:25030	5576705	0					
ANR	5576708	IdentifierDeclStatement	VMStarterInfo * info = findVMStarterInfoWithStarterPid ( s_pid ) ;	957:1:24281:24341	5576705	0	True				
ANR	5576709	IdentifierDecl	* info = findVMStarterInfoWithStarterPid ( s_pid )		5576705	0					
ANR	5576710	IdentifierDeclType	VMStarterInfo *		5576705	0					
ANR	5576711	Identifier	info		5576705	1					
ANR	5576712	AssignmentExpression	* info = findVMStarterInfoWithStarterPid ( s_pid )		5576705	2		=			
ANR	5576713	Identifier	info		5576705	0					
ANR	5576714	CallExpression	findVMStarterInfoWithStarterPid ( s_pid )		5576705	1					
ANR	5576715	Callee	findVMStarterInfoWithStarterPid		5576705	0					
ANR	5576716	Identifier	findVMStarterInfoWithStarterPid		5576705	0					
ANR	5576717	ArgumentList	s_pid		5576705	1					
ANR	5576718	Argument	s_pid		5576705	0					
ANR	5576719	Identifier	s_pid		5576705	0					
ANR	5576720	IfStatement	if ( ! info )		5576705	1					
ANR	5576721	Condition	! info	958:5:24348:24352	5576705	0	True				
ANR	5576722	UnaryOperationExpression	! info		5576705	0					
ANR	5576723	UnaryOperator	!		5576705	0					
ANR	5576724	Identifier	info		5576705	1					
ANR	5576725	CompoundStatement		3:13:77:77	5576705	1					
ANR	5576726	ReturnStatement	return false ;	959:2:24360:24372	5576705	0	True				
ANR	5576727	Identifier	false		5576705	0					
ANR	5576728	IdentifierDeclStatement	ProcFamilyUsage vm_usage ;	962:1:24379:24403	5576705	2	True				
ANR	5576729	IdentifierDecl	vm_usage		5576705	0					
ANR	5576730	IdentifierDeclType	ProcFamilyUsage		5576705	0					
ANR	5576731	Identifier	vm_usage		5576705	1					
ANR	5576732	ExpressionStatement	info -> getUsageOfVM ( vm_usage )	963:1:24406:24434	5576705	3	True				
ANR	5576733	CallExpression	info -> getUsageOfVM ( vm_usage )		5576705	0					
ANR	5576734	Callee	info -> getUsageOfVM		5576705	0					
ANR	5576735	PtrMemberAccess	info -> getUsageOfVM		5576705	0					
ANR	5576736	Identifier	info		5576705	0					
ANR	5576737	Identifier	getUsageOfVM		5576705	1					
ANR	5576738	ArgumentList	vm_usage		5576705	1					
ANR	5576739	Argument	vm_usage		5576705	0					
ANR	5576740	Identifier	vm_usage		5576705	0					
ANR	5576741	ExpressionStatement	usage . user_cpu_time += vm_usage . user_cpu_time	965:1:24438:24483	5576705	4	True				
ANR	5576742	AssignmentExpression	usage . user_cpu_time += vm_usage . user_cpu_time		5576705	0		+=			
ANR	5576743	MemberAccess	usage . user_cpu_time		5576705	0					
ANR	5576744	Identifier	usage		5576705	0					
ANR	5576745	Identifier	user_cpu_time		5576705	1					
ANR	5576746	MemberAccess	vm_usage . user_cpu_time		5576705	1					
ANR	5576747	Identifier	vm_usage		5576705	0					
ANR	5576748	Identifier	user_cpu_time		5576705	1					
ANR	5576749	ExpressionStatement	usage . sys_cpu_time += vm_usage . sys_cpu_time	966:1:24486:24529	5576705	5	True				
ANR	5576750	AssignmentExpression	usage . sys_cpu_time += vm_usage . sys_cpu_time		5576705	0		+=			
ANR	5576751	MemberAccess	usage . sys_cpu_time		5576705	0					
ANR	5576752	Identifier	usage		5576705	0					
ANR	5576753	Identifier	sys_cpu_time		5576705	1					
ANR	5576754	MemberAccess	vm_usage . sys_cpu_time		5576705	1					
ANR	5576755	Identifier	vm_usage		5576705	0					
ANR	5576756	Identifier	sys_cpu_time		5576705	1					
ANR	5576757	ExpressionStatement	usage . percent_cpu += vm_usage . percent_cpu	967:1:24532:24573	5576705	6	True				
ANR	5576758	AssignmentExpression	usage . percent_cpu += vm_usage . percent_cpu		5576705	0		+=			
ANR	5576759	MemberAccess	usage . percent_cpu		5576705	0					
ANR	5576760	Identifier	usage		5576705	0					
ANR	5576761	Identifier	percent_cpu		5576705	1					
ANR	5576762	MemberAccess	vm_usage . percent_cpu		5576705	1					
ANR	5576763	Identifier	vm_usage		5576705	0					
ANR	5576764	Identifier	percent_cpu		5576705	1					
ANR	5576765	IfStatement	if ( usage . max_image_size < vm_usage . max_image_size )		5576705	7					
ANR	5576766	Condition	usage . max_image_size < vm_usage . max_image_size	968:5:24580:24625	5576705	0	True				
ANR	5576767	RelationalExpression	usage . max_image_size < vm_usage . max_image_size		5576705	0		<			
ANR	5576768	MemberAccess	usage . max_image_size		5576705	0					
ANR	5576769	Identifier	usage		5576705	0					
ANR	5576770	Identifier	max_image_size		5576705	1					
ANR	5576771	MemberAccess	vm_usage . max_image_size		5576705	1					
ANR	5576772	Identifier	vm_usage		5576705	0					
ANR	5576773	Identifier	max_image_size		5576705	1					
ANR	5576774	CompoundStatement		13:54:350:350	5576705	1					
ANR	5576775	ExpressionStatement	usage . max_image_size = vm_usage . max_image_size	969:2:24633:24679	5576705	0	True				
ANR	5576776	AssignmentExpression	usage . max_image_size = vm_usage . max_image_size		5576705	0		=			
ANR	5576777	MemberAccess	usage . max_image_size		5576705	0					
ANR	5576778	Identifier	usage		5576705	0					
ANR	5576779	Identifier	max_image_size		5576705	1					
ANR	5576780	MemberAccess	vm_usage . max_image_size		5576705	1					
ANR	5576781	Identifier	vm_usage		5576705	0					
ANR	5576782	Identifier	max_image_size		5576705	1					
ANR	5576783	ExpressionStatement	usage . total_image_size += vm_usage . total_image_size	971:1:24685:24736	5576705	8	True				
ANR	5576784	AssignmentExpression	usage . total_image_size += vm_usage . total_image_size		5576705	0		+=			
ANR	5576785	MemberAccess	usage . total_image_size		5576705	0					
ANR	5576786	Identifier	usage		5576705	0					
ANR	5576787	Identifier	total_image_size		5576705	1					
ANR	5576788	MemberAccess	vm_usage . total_image_size		5576705	1					
ANR	5576789	Identifier	vm_usage		5576705	0					
ANR	5576790	Identifier	total_image_size		5576705	1					
ANR	5576791	ExpressionStatement	usage . total_resident_set_size += vm_usage . total_resident_set_size	972:1:24739:24804	5576705	9	True				
ANR	5576792	AssignmentExpression	usage . total_resident_set_size += vm_usage . total_resident_set_size		5576705	0		+=			
ANR	5576793	MemberAccess	usage . total_resident_set_size		5576705	0					
ANR	5576794	Identifier	usage		5576705	0					
ANR	5576795	Identifier	total_resident_set_size		5576705	1					
ANR	5576796	MemberAccess	vm_usage . total_resident_set_size		5576705	1					
ANR	5576797	Identifier	vm_usage		5576705	0					
ANR	5576798	Identifier	total_resident_set_size		5576705	1					
ANR	5576799	IfStatement	if ( vm_usage . total_proportional_set_size_available )		5576705	10					
ANR	5576800	Condition	vm_usage . total_proportional_set_size_available	974:5:24824:24869	5576705	0	True				
ANR	5576801	MemberAccess	vm_usage . total_proportional_set_size_available		5576705	0					
ANR	5576802	Identifier	vm_usage		5576705	0					
ANR	5576803	Identifier	total_proportional_set_size_available		5576705	1					
ANR	5576804	CompoundStatement		19:54:594:594	5576705	1					
ANR	5576805	ExpressionStatement	usage . total_proportional_set_size_available = true	975:2:24877:24927	5576705	0	True				
ANR	5576806	AssignmentExpression	usage . total_proportional_set_size_available = true		5576705	0		=			
ANR	5576807	MemberAccess	usage . total_proportional_set_size_available		5576705	0					
ANR	5576808	Identifier	usage		5576705	0					
ANR	5576809	Identifier	total_proportional_set_size_available		5576705	1					
ANR	5576810	Identifier	true		5576705	1					
ANR	5576811	ExpressionStatement	usage . total_proportional_set_size += vm_usage . total_proportional_set_size	976:2:24931:25004	5576705	1	True				
ANR	5576812	AssignmentExpression	usage . total_proportional_set_size += vm_usage . total_proportional_set_size		5576705	0		+=			
ANR	5576813	MemberAccess	usage . total_proportional_set_size		5576705	0					
ANR	5576814	Identifier	usage		5576705	0					
ANR	5576815	Identifier	total_proportional_set_size		5576705	1					
ANR	5576816	MemberAccess	vm_usage . total_proportional_set_size		5576705	1					
ANR	5576817	Identifier	vm_usage		5576705	0					
ANR	5576818	Identifier	total_proportional_set_size		5576705	1					
ANR	5576819	ReturnStatement	return true ;	979:1:25017:25028	5576705	11	True				
ANR	5576820	Identifier	true		5576705	0					
ANR	5576821	ReturnType	bool		5576705	1					
ANR	5576822	Identifier	VMUniverseMgr :: getUsageForVM		5576705	2					
ANR	5576823	ParameterList	"pid_t s_pid , ProcFamilyUsage & usage"		5576705	3					
ANR	5576824	Parameter	pid_t s_pid	955:29:24241:24251	5576705	0	True				
ANR	5576825	ParameterType	pid_t		5576705	0					
ANR	5576826	Identifier	s_pid		5576705	1					
ANR	5576827	Parameter	ProcFamilyUsage & usage	955:42:24254:24275	5576705	1	True				
ANR	5576828	ParameterType	ProcFamilyUsage &		5576705	0					
ANR	5576829	Identifier	usage		5576705	1					
ANR	5576830	CFGEntryNode	ENTRY		5576705		True				
ANR	5576831	CFGExitNode	EXIT		5576705		True				
ANR	5576832	Symbol	usage . total_resident_set_size		5576705						
ANR	5576833	Symbol	usage . sys_cpu_time		5576705						
ANR	5576834	Symbol	usage		5576705						
ANR	5576835	Symbol	false		5576705						
ANR	5576836	Symbol	usage . max_image_size		5576705						
ANR	5576837	Symbol	vm_usage . total_image_size		5576705						
ANR	5576838	Symbol	usage . user_cpu_time		5576705						
ANR	5576839	Symbol	findVMStarterInfoWithStarterPid		5576705						
ANR	5576840	Symbol	usage . total_image_size		5576705						
ANR	5576841	Symbol	vm_usage		5576705						
ANR	5576842	Symbol	vm_usage . total_resident_set_size		5576705						
ANR	5576843	Symbol	usage . percent_cpu		5576705						
ANR	5576844	Symbol	usage . total_proportional_set_size		5576705						
ANR	5576845	Symbol	vm_usage . percent_cpu		5576705						
ANR	5576846	Symbol	vm_usage . max_image_size		5576705						
ANR	5576847	Symbol	true		5576705						
ANR	5576848	Symbol	vm_usage . total_proportional_set_size		5576705						
ANR	5576849	Symbol	vm_usage . sys_cpu_time		5576705						
ANR	5576850	Symbol	vm_usage . user_cpu_time		5576705						
ANR	5576851	Symbol	usage . total_proportional_set_size_available		5576705						
ANR	5576852	Symbol	s_pid		5576705						
ANR	5576853	Symbol	info		5576705						
ANR	5576854	Symbol	vm_usage . total_proportional_set_size_available		5576705						
ANR	5576855	Function	VMUniverseMgr :: addProcessForVM	982:0:25033:25369							
ANR	5576856	FunctionDef	"VMUniverseMgr :: addProcessForVM (pid_t s_pid , pid_t vm_pid)"		5576855	0					
ANR	5576857	CompoundStatement		984:0:25096:25369	5576855	0					
ANR	5576858	IdentifierDeclStatement	VMStarterInfo * info = findVMStarterInfoWithStarterPid ( s_pid ) ;	985:1:25099:25159	5576855	0	True				
ANR	5576859	IdentifierDecl	* info = findVMStarterInfoWithStarterPid ( s_pid )		5576855	0					
ANR	5576860	IdentifierDeclType	VMStarterInfo *		5576855	0					
ANR	5576861	Identifier	info		5576855	1					
ANR	5576862	AssignmentExpression	* info = findVMStarterInfoWithStarterPid ( s_pid )		5576855	2		=			
ANR	5576863	Identifier	info		5576855	0					
ANR	5576864	CallExpression	findVMStarterInfoWithStarterPid ( s_pid )		5576855	1					
ANR	5576865	Callee	findVMStarterInfoWithStarterPid		5576855	0					
ANR	5576866	Identifier	findVMStarterInfoWithStarterPid		5576855	0					
ANR	5576867	ArgumentList	s_pid		5576855	1					
ANR	5576868	Argument	s_pid		5576855	0					
ANR	5576869	Identifier	s_pid		5576855	0					
ANR	5576870	IfStatement	if ( ! info )		5576855	1					
ANR	5576871	Condition	! info	986:5:25166:25170	5576855	0	True				
ANR	5576872	UnaryOperationExpression	! info		5576855	0					
ANR	5576873	UnaryOperator	!		5576855	0					
ANR	5576874	Identifier	info		5576855	1					
ANR	5576875	CompoundStatement		3:13:77:77	5576855	1					
ANR	5576876	ReturnStatement	return false ;	987:2:25178:25190	5576855	0	True				
ANR	5576877	Identifier	false		5576855	0					
ANR	5576878	ExpressionStatement	info -> addProcessForVM ( vm_pid )	990:1:25197:25226	5576855	2	True				
ANR	5576879	CallExpression	info -> addProcessForVM ( vm_pid )		5576855	0					
ANR	5576880	Callee	info -> addProcessForVM		5576855	0					
ANR	5576881	PtrMemberAccess	info -> addProcessForVM		5576855	0					
ANR	5576882	Identifier	info		5576855	0					
ANR	5576883	Identifier	addProcessForVM		5576855	1					
ANR	5576884	ArgumentList	vm_pid		5576855	1					
ANR	5576885	Argument	vm_pid		5576855	0					
ANR	5576886	Identifier	vm_pid		5576855	0					
ANR	5576887	Statement	dprintf	991:1:25229:25235	5576855	3	True				
ANR	5576888	Statement	(	991:8:25236:25236	5576855	4	True				
ANR	5576889	Statement	D_ALWAYS	991:9:25237:25244	5576855	5	True				
ANR	5576890	Statement	","	991:17:25245:25245	5576855	6	True				
ANR	5576891	Statement	"""In VMUniverseMgr::addProcessForVM, process[%d] is """	991:19:25247:25298	5576855	7	True				
ANR	5576892	Statement	"""added to Starter[%d]\\n"""	992:3:25303:25326	5576855	8	True				
ANR	5576893	Statement	","	992:27:25327:25327	5576855	9	True				
ANR	5576894	Statement	(	992:29:25329:25329	5576855	10	True				
ANR	5576895	Statement	int	992:30:25330:25332	5576855	11	True				
ANR	5576896	Statement	)	992:33:25333:25333	5576855	12	True				
ANR	5576897	Statement	vm_pid	992:34:25334:25339	5576855	13	True				
ANR	5576898	Statement	","	992:40:25340:25340	5576855	14	True				
ANR	5576899	Statement	(	992:42:25342:25342	5576855	15	True				
ANR	5576900	Statement	int	992:43:25343:25345	5576855	16	True				
ANR	5576901	Statement	)	992:46:25346:25346	5576855	17	True				
ANR	5576902	Statement	s_pid	992:47:25347:25351	5576855	18	True				
ANR	5576903	Statement	)	992:52:25352:25352	5576855	19	True				
ANR	5576904	ExpressionStatement		992:53:25353:25353	5576855	20	True				
ANR	5576905	ReturnStatement	return true ;	993:1:25356:25367	5576855	21	True				
ANR	5576906	Identifier	true		5576855	0					
ANR	5576907	ReturnType	bool		5576855	1					
ANR	5576908	Identifier	VMUniverseMgr :: addProcessForVM		5576855	2					
ANR	5576909	ParameterList	"pid_t s_pid , pid_t vm_pid"		5576855	3					
ANR	5576910	Parameter	pid_t s_pid	983:31:25069:25079	5576855	0	True				
ANR	5576911	ParameterType	pid_t		5576855	0					
ANR	5576912	Identifier	s_pid		5576855	1					
ANR	5576913	Parameter	pid_t vm_pid	983:44:25082:25093	5576855	1	True				
ANR	5576914	ParameterType	pid_t		5576855	0					
ANR	5576915	Identifier	vm_pid		5576855	1					
ANR	5576916	CFGEntryNode	ENTRY		5576855		True				
ANR	5576917	CFGExitNode	EXIT		5576855		True				
ANR	5576918	Symbol	false		5576855						
ANR	5576919	Symbol	true		5576855						
ANR	5576920	Symbol	vm_pid		5576855						
ANR	5576921	Symbol	findVMStarterInfoWithStarterPid		5576855						
ANR	5576922	Symbol	s_pid		5576855						
ANR	5576923	Symbol	info		5576855						
ANR	5576924	Function	VMUniverseMgr :: getProcessForVM	996:0:25372:25551							
ANR	5576925	FunctionDef	VMUniverseMgr :: getProcessForVM (pid_t s_pid)		5576924	0					
ANR	5576926	CompoundStatement		998:0:25422:25551	5576924	0					
ANR	5576927	IdentifierDeclStatement	VMStarterInfo * info = findVMStarterInfoWithStarterPid ( s_pid ) ;	999:1:25425:25485	5576924	0	True				
ANR	5576928	IdentifierDecl	* info = findVMStarterInfoWithStarterPid ( s_pid )		5576924	0					
ANR	5576929	IdentifierDeclType	VMStarterInfo *		5576924	0					
ANR	5576930	Identifier	info		5576924	1					
ANR	5576931	AssignmentExpression	* info = findVMStarterInfoWithStarterPid ( s_pid )		5576924	2		=			
ANR	5576932	Identifier	info		5576924	0					
ANR	5576933	CallExpression	findVMStarterInfoWithStarterPid ( s_pid )		5576924	1					
ANR	5576934	Callee	findVMStarterInfoWithStarterPid		5576924	0					
ANR	5576935	Identifier	findVMStarterInfoWithStarterPid		5576924	0					
ANR	5576936	ArgumentList	s_pid		5576924	1					
ANR	5576937	Argument	s_pid		5576924	0					
ANR	5576938	Identifier	s_pid		5576924	0					
ANR	5576939	IfStatement	if ( ! info )		5576924	1					
ANR	5576940	Condition	! info	1000:5:25492:25496	5576924	0	True				
ANR	5576941	UnaryOperationExpression	! info		5576924	0					
ANR	5576942	UnaryOperator	!		5576924	0					
ANR	5576943	Identifier	info		5576924	1					
ANR	5576944	CompoundStatement		3:13:77:77	5576924	1					
ANR	5576945	ReturnStatement	return 0 ;	1001:2:25504:25512	5576924	0	True				
ANR	5576946	PrimaryExpression	0		5576924	0					
ANR	5576947	ReturnStatement	return info -> getProcessForVM ( ) ;	1004:1:25519:25549	5576924	2	True				
ANR	5576948	CallExpression	info -> getProcessForVM ( )		5576924	0					
ANR	5576949	Callee	info -> getProcessForVM		5576924	0					
ANR	5576950	PtrMemberAccess	info -> getProcessForVM		5576924	0					
ANR	5576951	Identifier	info		5576924	0					
ANR	5576952	Identifier	getProcessForVM		5576924	1					
ANR	5576953	ArgumentList			5576924	1					
ANR	5576954	ReturnType	pid_t		5576924	1					
ANR	5576955	Identifier	VMUniverseMgr :: getProcessForVM		5576924	2					
ANR	5576956	ParameterList	pid_t s_pid		5576924	3					
ANR	5576957	Parameter	pid_t s_pid	997:31:25409:25419	5576924	0	True				
ANR	5576958	ParameterType	pid_t		5576924	0					
ANR	5576959	Identifier	s_pid		5576924	1					
ANR	5576960	CFGEntryNode	ENTRY		5576924		True				
ANR	5576961	CFGExitNode	EXIT		5576924		True				
ANR	5576962	Symbol	info -> getProcessForVM		5576924						
ANR	5576963	Symbol	* info		5576924						
ANR	5576964	Symbol	findVMStarterInfoWithStarterPid		5576924						
ANR	5576965	Symbol	s_pid		5576924						
ANR	5576966	Symbol	info		5576924						
ANR	5576967	Function	VMUniverseMgr :: addMACForVM	1007:0:25554:25849							
ANR	5576968	FunctionDef	"VMUniverseMgr :: addMACForVM (pid_t s_pid , const char * mac)"		5576967	0					
ANR	5576969	CompoundStatement		1009:0:25616:25849	5576967	0					
ANR	5576970	IdentifierDeclStatement	VMStarterInfo * info = findVMStarterInfoWithStarterPid ( s_pid ) ;	1010:1:25619:25679	5576967	0	True				
ANR	5576971	IdentifierDecl	* info = findVMStarterInfoWithStarterPid ( s_pid )		5576967	0					
ANR	5576972	IdentifierDeclType	VMStarterInfo *		5576967	0					
ANR	5576973	Identifier	info		5576967	1					
ANR	5576974	AssignmentExpression	* info = findVMStarterInfoWithStarterPid ( s_pid )		5576967	2		=			
ANR	5576975	Identifier	info		5576967	0					
ANR	5576976	CallExpression	findVMStarterInfoWithStarterPid ( s_pid )		5576967	1					
ANR	5576977	Callee	findVMStarterInfoWithStarterPid		5576967	0					
ANR	5576978	Identifier	findVMStarterInfoWithStarterPid		5576967	0					
ANR	5576979	ArgumentList	s_pid		5576967	1					
ANR	5576980	Argument	s_pid		5576967	0					
ANR	5576981	Identifier	s_pid		5576967	0					
ANR	5576982	IfStatement	if ( ! info )		5576967	1					
ANR	5576983	Condition	! info	1011:5:25686:25690	5576967	0	True				
ANR	5576984	UnaryOperationExpression	! info		5576967	0					
ANR	5576985	UnaryOperator	!		5576967	0					
ANR	5576986	Identifier	info		5576967	1					
ANR	5576987	CompoundStatement		3:13:77:77	5576967	1					
ANR	5576988	ReturnStatement	return ;	1012:2:25698:25704	5576967	0	True				
ANR	5576989	ExpressionStatement	info -> addMACForVM ( mac )	1015:1:25711:25733	5576967	2	True				
ANR	5576990	CallExpression	info -> addMACForVM ( mac )		5576967	0					
ANR	5576991	Callee	info -> addMACForVM		5576967	0					
ANR	5576992	PtrMemberAccess	info -> addMACForVM		5576967	0					
ANR	5576993	Identifier	info		5576967	0					
ANR	5576994	Identifier	addMACForVM		5576967	1					
ANR	5576995	ArgumentList	mac		5576967	1					
ANR	5576996	Argument	mac		5576967	0					
ANR	5576997	Identifier	mac		5576967	0					
ANR	5576998	Statement	dprintf	1016:1:25736:25742	5576967	3	True				
ANR	5576999	Statement	(	1016:8:25743:25743	5576967	4	True				
ANR	5577000	Statement	D_FULLDEBUG	1016:9:25744:25754	5576967	5	True				
ANR	5577001	Statement	","	1016:20:25755:25755	5576967	6	True				
ANR	5577002	Statement	"""In VMUniverseMgr::addMACForVM, mac[%s] is """	1016:22:25757:25800	5576967	7	True				
ANR	5577003	Statement	"""added to Starter[%d]\\n"""	1017:3:25805:25828	5576967	8	True				
ANR	5577004	Statement	","	1017:27:25829:25829	5576967	9	True				
ANR	5577005	Statement	mac	1017:29:25831:25833	5576967	10	True				
ANR	5577006	Statement	","	1017:32:25834:25834	5576967	11	True				
ANR	5577007	Statement	(	1017:34:25836:25836	5576967	12	True				
ANR	5577008	Statement	int	1017:35:25837:25839	5576967	13	True				
ANR	5577009	Statement	)	1017:38:25840:25840	5576967	14	True				
ANR	5577010	Statement	s_pid	1017:39:25841:25845	5576967	15	True				
ANR	5577011	Statement	)	1017:44:25846:25846	5576967	16	True				
ANR	5577012	ExpressionStatement		1017:45:25847:25847	5576967	17	True				
ANR	5577013	ReturnType	void		5576967	1					
ANR	5577014	Identifier	VMUniverseMgr :: addMACForVM		5576967	2					
ANR	5577015	ParameterList	"pid_t s_pid , const char * mac"		5576967	3					
ANR	5577016	Parameter	pid_t s_pid	1008:27:25586:25596	5576967	0	True				
ANR	5577017	ParameterType	pid_t		5576967	0					
ANR	5577018	Identifier	s_pid		5576967	1					
ANR	5577019	Parameter	const char * mac	1008:40:25599:25613	5576967	1	True				
ANR	5577020	ParameterType	const char *		5576967	0					
ANR	5577021	Identifier	mac		5576967	1					
ANR	5577022	CFGEntryNode	ENTRY		5576967		True				
ANR	5577023	CFGExitNode	EXIT		5576967		True				
ANR	5577024	Symbol	findVMStarterInfoWithStarterPid		5576967						
ANR	5577025	Symbol	s_pid		5576967						
ANR	5577026	Symbol	mac		5576967						
ANR	5577027	Symbol	info		5576967						
ANR	5577028	Function	VMUniverseMgr :: getMACForVM	1020:0:25852:26032							
ANR	5577029	FunctionDef	VMUniverseMgr :: getMACForVM (pid_t s_pid)		5577028	0					
ANR	5577030	CompoundStatement		1022:0:25904:26032	5577028	0					
ANR	5577031	IdentifierDeclStatement	VMStarterInfo * info = findVMStarterInfoWithStarterPid ( s_pid ) ;	1023:1:25907:25967	5577028	0	True				
ANR	5577032	IdentifierDecl	* info = findVMStarterInfoWithStarterPid ( s_pid )		5577028	0					
ANR	5577033	IdentifierDeclType	VMStarterInfo *		5577028	0					
ANR	5577034	Identifier	info		5577028	1					
ANR	5577035	AssignmentExpression	* info = findVMStarterInfoWithStarterPid ( s_pid )		5577028	2		=			
ANR	5577036	Identifier	info		5577028	0					
ANR	5577037	CallExpression	findVMStarterInfoWithStarterPid ( s_pid )		5577028	1					
ANR	5577038	Callee	findVMStarterInfoWithStarterPid		5577028	0					
ANR	5577039	Identifier	findVMStarterInfoWithStarterPid		5577028	0					
ANR	5577040	ArgumentList	s_pid		5577028	1					
ANR	5577041	Argument	s_pid		5577028	0					
ANR	5577042	Identifier	s_pid		5577028	0					
ANR	5577043	IfStatement	if ( ! info )		5577028	1					
ANR	5577044	Condition	! info	1024:5:25974:25978	5577028	0	True				
ANR	5577045	UnaryOperationExpression	! info		5577028	0					
ANR	5577046	UnaryOperator	!		5577028	0					
ANR	5577047	Identifier	info		5577028	1					
ANR	5577048	CompoundStatement		3:13:77:77	5577028	1					
ANR	5577049	ReturnStatement	return NULL ;	1025:2:25986:25997	5577028	0	True				
ANR	5577050	Identifier	NULL		5577028	0					
ANR	5577051	ReturnStatement	return info -> getMACForVM ( ) ;	1028:1:26004:26030	5577028	2	True				
ANR	5577052	CallExpression	info -> getMACForVM ( )		5577028	0					
ANR	5577053	Callee	info -> getMACForVM		5577028	0					
ANR	5577054	PtrMemberAccess	info -> getMACForVM		5577028	0					
ANR	5577055	Identifier	info		5577028	0					
ANR	5577056	Identifier	getMACForVM		5577028	1					
ANR	5577057	ArgumentList			5577028	1					
ANR	5577058	ReturnType	const char *		5577028	1					
ANR	5577059	Identifier	VMUniverseMgr :: getMACForVM		5577028	2					
ANR	5577060	ParameterList	pid_t s_pid		5577028	3					
ANR	5577061	Parameter	pid_t s_pid	1021:27:25891:25901	5577028	0	True				
ANR	5577062	ParameterType	pid_t		5577028	0					
ANR	5577063	Identifier	s_pid		5577028	1					
ANR	5577064	CFGEntryNode	ENTRY		5577028		True				
ANR	5577065	CFGExitNode	EXIT		5577028		True				
ANR	5577066	Symbol	info -> getMACForVM		5577028						
ANR	5577067	Symbol	NULL		5577028						
ANR	5577068	Symbol	* info		5577028						
ANR	5577069	Symbol	findVMStarterInfoWithStarterPid		5577028						
ANR	5577070	Symbol	s_pid		5577028						
ANR	5577071	Symbol	info		5577028						
ANR	5577072	Function	VMUniverseMgr :: addIPForVM	1031:0:26035:26323							
ANR	5577073	FunctionDef	"VMUniverseMgr :: addIPForVM (pid_t s_pid , const char * ip)"		5577072	0					
ANR	5577074	CompoundStatement		1033:0:26095:26323	5577072	0					
ANR	5577075	IdentifierDeclStatement	VMStarterInfo * info = findVMStarterInfoWithStarterPid ( s_pid ) ;	1034:1:26098:26158	5577072	0	True				
ANR	5577076	IdentifierDecl	* info = findVMStarterInfoWithStarterPid ( s_pid )		5577072	0					
ANR	5577077	IdentifierDeclType	VMStarterInfo *		5577072	0					
ANR	5577078	Identifier	info		5577072	1					
ANR	5577079	AssignmentExpression	* info = findVMStarterInfoWithStarterPid ( s_pid )		5577072	2		=			
ANR	5577080	Identifier	info		5577072	0					
ANR	5577081	CallExpression	findVMStarterInfoWithStarterPid ( s_pid )		5577072	1					
ANR	5577082	Callee	findVMStarterInfoWithStarterPid		5577072	0					
ANR	5577083	Identifier	findVMStarterInfoWithStarterPid		5577072	0					
ANR	5577084	ArgumentList	s_pid		5577072	1					
ANR	5577085	Argument	s_pid		5577072	0					
ANR	5577086	Identifier	s_pid		5577072	0					
ANR	5577087	IfStatement	if ( ! info )		5577072	1					
ANR	5577088	Condition	! info	1035:5:26165:26169	5577072	0	True				
ANR	5577089	UnaryOperationExpression	! info		5577072	0					
ANR	5577090	UnaryOperator	!		5577072	0					
ANR	5577091	Identifier	info		5577072	1					
ANR	5577092	CompoundStatement		3:13:77:77	5577072	1					
ANR	5577093	ReturnStatement	return ;	1036:2:26177:26183	5577072	0	True				
ANR	5577094	ExpressionStatement	info -> addIPForVM ( ip )	1039:1:26190:26210	5577072	2	True				
ANR	5577095	CallExpression	info -> addIPForVM ( ip )		5577072	0					
ANR	5577096	Callee	info -> addIPForVM		5577072	0					
ANR	5577097	PtrMemberAccess	info -> addIPForVM		5577072	0					
ANR	5577098	Identifier	info		5577072	0					
ANR	5577099	Identifier	addIPForVM		5577072	1					
ANR	5577100	ArgumentList	ip		5577072	1					
ANR	5577101	Argument	ip		5577072	0					
ANR	5577102	Identifier	ip		5577072	0					
ANR	5577103	Statement	dprintf	1040:1:26213:26219	5577072	3	True				
ANR	5577104	Statement	(	1040:8:26220:26220	5577072	4	True				
ANR	5577105	Statement	D_FULLDEBUG	1040:9:26221:26231	5577072	5	True				
ANR	5577106	Statement	","	1040:20:26232:26232	5577072	6	True				
ANR	5577107	Statement	"""In VMUniverseMgr::addIPForVM, ip[%s] is """	1040:22:26234:26275	5577072	7	True				
ANR	5577108	Statement	"""added to Starter[%d]\\n"""	1041:3:26280:26303	5577072	8	True				
ANR	5577109	Statement	","	1041:27:26304:26304	5577072	9	True				
ANR	5577110	Statement	ip	1041:29:26306:26307	5577072	10	True				
ANR	5577111	Statement	","	1041:31:26308:26308	5577072	11	True				
ANR	5577112	Statement	(	1041:33:26310:26310	5577072	12	True				
ANR	5577113	Statement	int	1041:34:26311:26313	5577072	13	True				
ANR	5577114	Statement	)	1041:37:26314:26314	5577072	14	True				
ANR	5577115	Statement	s_pid	1041:38:26315:26319	5577072	15	True				
ANR	5577116	Statement	)	1041:43:26320:26320	5577072	16	True				
ANR	5577117	ExpressionStatement		1041:44:26321:26321	5577072	17	True				
ANR	5577118	ReturnType	void		5577072	1					
ANR	5577119	Identifier	VMUniverseMgr :: addIPForVM		5577072	2					
ANR	5577120	ParameterList	"pid_t s_pid , const char * ip"		5577072	3					
ANR	5577121	Parameter	pid_t s_pid	1032:26:26066:26076	5577072	0	True				
ANR	5577122	ParameterType	pid_t		5577072	0					
ANR	5577123	Identifier	s_pid		5577072	1					
ANR	5577124	Parameter	const char * ip	1032:39:26079:26092	5577072	1	True				
ANR	5577125	ParameterType	const char *		5577072	0					
ANR	5577126	Identifier	ip		5577072	1					
ANR	5577127	CFGEntryNode	ENTRY		5577072		True				
ANR	5577128	CFGExitNode	EXIT		5577072		True				
ANR	5577129	Symbol	ip		5577072						
ANR	5577130	Symbol	findVMStarterInfoWithStarterPid		5577072						
ANR	5577131	Symbol	s_pid		5577072						
ANR	5577132	Symbol	info		5577072						
ANR	5577133	Function	VMUniverseMgr :: getIPForVM	1044:0:26326:26504							
ANR	5577134	FunctionDef	VMUniverseMgr :: getIPForVM (pid_t s_pid)		5577133	0					
ANR	5577135	CompoundStatement		1046:0:26377:26504	5577133	0					
ANR	5577136	IdentifierDeclStatement	VMStarterInfo * info = findVMStarterInfoWithStarterPid ( s_pid ) ;	1047:1:26380:26440	5577133	0	True				
ANR	5577137	IdentifierDecl	* info = findVMStarterInfoWithStarterPid ( s_pid )		5577133	0					
ANR	5577138	IdentifierDeclType	VMStarterInfo *		5577133	0					
ANR	5577139	Identifier	info		5577133	1					
ANR	5577140	AssignmentExpression	* info = findVMStarterInfoWithStarterPid ( s_pid )		5577133	2		=			
ANR	5577141	Identifier	info		5577133	0					
ANR	5577142	CallExpression	findVMStarterInfoWithStarterPid ( s_pid )		5577133	1					
ANR	5577143	Callee	findVMStarterInfoWithStarterPid		5577133	0					
ANR	5577144	Identifier	findVMStarterInfoWithStarterPid		5577133	0					
ANR	5577145	ArgumentList	s_pid		5577133	1					
ANR	5577146	Argument	s_pid		5577133	0					
ANR	5577147	Identifier	s_pid		5577133	0					
ANR	5577148	IfStatement	if ( ! info )		5577133	1					
ANR	5577149	Condition	! info	1048:5:26447:26451	5577133	0	True				
ANR	5577150	UnaryOperationExpression	! info		5577133	0					
ANR	5577151	UnaryOperator	!		5577133	0					
ANR	5577152	Identifier	info		5577133	1					
ANR	5577153	CompoundStatement		3:13:77:77	5577133	1					
ANR	5577154	ReturnStatement	return NULL ;	1049:2:26459:26470	5577133	0	True				
ANR	5577155	Identifier	NULL		5577133	0					
ANR	5577156	ReturnStatement	return info -> getIPForVM ( ) ;	1052:1:26477:26502	5577133	2	True				
ANR	5577157	CallExpression	info -> getIPForVM ( )		5577133	0					
ANR	5577158	Callee	info -> getIPForVM		5577133	0					
ANR	5577159	PtrMemberAccess	info -> getIPForVM		5577133	0					
ANR	5577160	Identifier	info		5577133	0					
ANR	5577161	Identifier	getIPForVM		5577133	1					
ANR	5577162	ArgumentList			5577133	1					
ANR	5577163	ReturnType	const char *		5577133	1					
ANR	5577164	Identifier	VMUniverseMgr :: getIPForVM		5577133	2					
ANR	5577165	ParameterList	pid_t s_pid		5577133	3					
ANR	5577166	Parameter	pid_t s_pid	1045:26:26364:26374	5577133	0	True				
ANR	5577167	ParameterType	pid_t		5577133	0					
ANR	5577168	Identifier	s_pid		5577133	1					
ANR	5577169	CFGEntryNode	ENTRY		5577133		True				
ANR	5577170	CFGExitNode	EXIT		5577133		True				
ANR	5577171	Symbol	info -> getIPForVM		5577133						
ANR	5577172	Symbol	NULL		5577133						
ANR	5577173	Symbol	* info		5577133						
ANR	5577174	Symbol	findVMStarterInfoWithStarterPid		5577133						
ANR	5577175	Symbol	s_pid		5577133						
ANR	5577176	Symbol	info		5577133						
ANR	5577177	Function	VMUniverseMgr :: publishVMInfo	1055:0:26507:26744							
ANR	5577178	FunctionDef	"VMUniverseMgr :: publishVMInfo (pid_t s_pid , ClassAd * ad , amask_t mask)"		5577177	0					
ANR	5577179	CompoundStatement		1057:0:26582:26744	5577177	0					
ANR	5577180	IfStatement	if ( ! ad )		5577177	0					
ANR	5577181	Condition	! ad	1058:5:26589:26591	5577177	0	True				
ANR	5577182	UnaryOperationExpression	! ad		5577177	0					
ANR	5577183	UnaryOperator	!		5577177	0					
ANR	5577184	Identifier	ad		5577177	1					
ANR	5577185	CompoundStatement		2:11:12:12	5577177	1					
ANR	5577186	ReturnStatement	return ;	1059:2:26599:26605	5577177	0	True				
ANR	5577187	IdentifierDeclStatement	VMStarterInfo * info = findVMStarterInfoWithStarterPid ( s_pid ) ;	1062:1:26612:26672	5577177	1	True				
ANR	5577188	IdentifierDecl	* info = findVMStarterInfoWithStarterPid ( s_pid )		5577177	0					
ANR	5577189	IdentifierDeclType	VMStarterInfo *		5577177	0					
ANR	5577190	Identifier	info		5577177	1					
ANR	5577191	AssignmentExpression	* info = findVMStarterInfoWithStarterPid ( s_pid )		5577177	2		=			
ANR	5577192	Identifier	info		5577177	0					
ANR	5577193	CallExpression	findVMStarterInfoWithStarterPid ( s_pid )		5577177	1					
ANR	5577194	Callee	findVMStarterInfoWithStarterPid		5577177	0					
ANR	5577195	Identifier	findVMStarterInfoWithStarterPid		5577177	0					
ANR	5577196	ArgumentList	s_pid		5577177	1					
ANR	5577197	Argument	s_pid		5577177	0					
ANR	5577198	Identifier	s_pid		5577177	0					
ANR	5577199	IfStatement	if ( ! info )		5577177	2					
ANR	5577200	Condition	! info	1063:5:26679:26683	5577177	0	True				
ANR	5577201	UnaryOperationExpression	! info		5577177	0					
ANR	5577202	UnaryOperator	!		5577177	0					
ANR	5577203	Identifier	info		5577177	1					
ANR	5577204	CompoundStatement		7:13:104:104	5577177	1					
ANR	5577205	ReturnStatement	return ;	1064:2:26691:26697	5577177	0	True				
ANR	5577206	ExpressionStatement	"info -> publishVMInfo ( ad , mask )"	1067:1:26704:26733	5577177	3	True				
ANR	5577207	CallExpression	"info -> publishVMInfo ( ad , mask )"		5577177	0					
ANR	5577208	Callee	info -> publishVMInfo		5577177	0					
ANR	5577209	PtrMemberAccess	info -> publishVMInfo		5577177	0					
ANR	5577210	Identifier	info		5577177	0					
ANR	5577211	Identifier	publishVMInfo		5577177	1					
ANR	5577212	ArgumentList	ad		5577177	1					
ANR	5577213	Argument	ad		5577177	0					
ANR	5577214	Identifier	ad		5577177	0					
ANR	5577215	Argument	mask		5577177	1					
ANR	5577216	Identifier	mask		5577177	0					
ANR	5577217	ReturnStatement	return ;	1068:1:26736:26742	5577177	4	True				
ANR	5577218	ReturnType	void		5577177	1					
ANR	5577219	Identifier	VMUniverseMgr :: publishVMInfo		5577177	2					
ANR	5577220	ParameterList	"pid_t s_pid , ClassAd * ad , amask_t mask"		5577177	3					
ANR	5577221	Parameter	pid_t s_pid	1056:29:26541:26551	5577177	0	True				
ANR	5577222	ParameterType	pid_t		5577177	0					
ANR	5577223	Identifier	s_pid		5577177	1					
ANR	5577224	Parameter	ClassAd * ad	1056:42:26554:26564	5577177	1	True				
ANR	5577225	ParameterType	ClassAd *		5577177	0					
ANR	5577226	Identifier	ad		5577177	1					
ANR	5577227	Parameter	amask_t mask	1056:55:26567:26578	5577177	2	True				
ANR	5577228	ParameterType	amask_t		5577177	0					
ANR	5577229	Identifier	mask		5577177	1					
ANR	5577230	CFGEntryNode	ENTRY		5577177		True				
ANR	5577231	CFGExitNode	EXIT		5577177		True				
ANR	5577232	Symbol	ad		5577177						
ANR	5577233	Symbol	findVMStarterInfoWithStarterPid		5577177						
ANR	5577234	Symbol	s_pid		5577177						
ANR	5577235	Symbol	mask		5577177						
ANR	5577236	Symbol	info		5577177						
