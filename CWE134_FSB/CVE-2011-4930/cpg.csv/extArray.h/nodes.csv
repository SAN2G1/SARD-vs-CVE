command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1310058	File	data/converged/CVE-2011-4930_htcondor/extArray.h								
ANR	1310059	ClassDef	ExtArray	26:0:911:1699							
ANR	1310060	DeclStmt									
ANR	1310061	Decl							Element	Element * ( void )	getarray
ANR	1310062	DeclStmt									
ANR	1310063	Decl							void	void ( int )	resize
ANR	1310064	DeclStmt									
ANR	1310065	Decl							void	void ( int )	truncate
ANR	1310066	DeclStmt									
ANR	1310067	Decl							void	void ( Element )	fill
ANR	1310068	DeclStmt									
ANR	1310069	Decl							void	void ( Element )	setFiller
ANR	1310070	DeclStmt									
ANR	1310071	Decl							Element	"Element ( int , Element )"	set
ANR	1310072	DeclStmt									
ANR	1310073	Decl							Element	Element ( Element )	add
ANR	1310074	DeclStmt									
ANR	1310075	Decl							Element	Element & ( int )	getElementAt
ANR	1310076	DeclStmt									
ANR	1310077	Decl							Element	Element *	array
ANR	1310078	DeclStmt									
ANR	1310079	Decl							int	int	size
ANR	1310080	DeclStmt									
ANR	1310081	Decl							int	int	last
ANR	1310082	DeclStmt									
ANR	1310083	Decl							Element	Element	filler
ANR	1310084	Function	ExtArray	69:0:1749:1935							
ANR	1310085	FunctionDef	ExtArray (int sz)		1310084	0					
ANR	1310086	CompoundStatement		70:0:1767:1935	1310084	0					
ANR	1310087	ExpressionStatement	size = sz	72:1:1804:1813	1310084	0	True				
ANR	1310088	AssignmentExpression	size = sz		1310084	0		=			
ANR	1310089	Identifier	size		1310084	0					
ANR	1310090	Identifier	sz		1310084	1					
ANR	1310091	ExpressionStatement	last = - 1	73:1:1816:1825	1310084	1	True				
ANR	1310092	AssignmentExpression	last = - 1		1310084	0		=			
ANR	1310093	Identifier	last		1310084	0					
ANR	1310094	UnaryOperationExpression	- 1		1310084	1					
ANR	1310095	UnaryOperator	-		1310084	0					
ANR	1310096	PrimaryExpression	1		1310084	1					
ANR	1310097	ExpressionStatement	array = new Element [ size ]	74:1:1828:1853	1310084	2	True				
ANR	1310098	AssignmentExpression	array = new Element [ size ]		1310084	0		=			
ANR	1310099	Identifier	array		1310084	0					
ANR	1310100	Identifier	size		1310084	1					
ANR	1310101	IfStatement	if ( ! array )		1310084	3					
ANR	1310102	Condition	! array	75:5:1860:1865	1310084	0	True				
ANR	1310103	UnaryOperationExpression	! array		1310084	0					
ANR	1310104	UnaryOperator	!		1310084	0					
ANR	1310105	Identifier	array		1310084	1					
ANR	1310106	CompoundStatement		7:1:101:101	1310084	1					
ANR	1310107	ExpressionStatement	"dprintf ( D_ALWAYS , ""ExtArray: Out of memory"" )"	77:2:1873:1918	1310084	0	True				
ANR	1310108	CallExpression	"dprintf ( D_ALWAYS , ""ExtArray: Out of memory"" )"		1310084	0					
ANR	1310109	Callee	dprintf		1310084	0					
ANR	1310110	Identifier	dprintf		1310084	0					
ANR	1310111	ArgumentList	D_ALWAYS		1310084	1					
ANR	1310112	Argument	D_ALWAYS		1310084	0					
ANR	1310113	Identifier	D_ALWAYS		1310084	0					
ANR	1310114	Argument	"""ExtArray: Out of memory"""		1310084	1					
ANR	1310115	PrimaryExpression	"""ExtArray: Out of memory"""		1310084	0					
ANR	1310116	ExpressionStatement	exit ( 1 )	78:2:1922:1930	1310084	1	True				
ANR	1310117	CallExpression	exit ( 1 )		1310084	0					
ANR	1310118	Callee	exit		1310084	0					
ANR	1310119	Identifier	exit		1310084	0					
ANR	1310120	ArgumentList	1		1310084	1					
ANR	1310121	Argument	1		1310084	0					
ANR	1310122	PrimaryExpression	1		1310084	0					
ANR	1310123	Identifier	ExtArray		1310084	1					
ANR	1310124	ParameterList	int sz		1310084	2					
ANR	1310125	Parameter	int sz	69:10:1759:1764	1310084	0	True				
ANR	1310126	ParameterType	int		1310084	0					
ANR	1310127	Identifier	sz		1310084	1					
ANR	1310128	CFGEntryNode	ENTRY		1310084		True				
ANR	1310129	CFGExitNode	EXIT		1310084		True				
ANR	1310130	Symbol	size		1310084						
ANR	1310131	Symbol	last		1310084						
ANR	1310132	Symbol	array		1310084						
ANR	1310133	Symbol	sz		1310084						
ANR	1310134	Symbol	D_ALWAYS		1310084						
ANR	1310135	Function	ExtArray	84:0:1983:2354							
ANR	1310136	FunctionDef	ExtArray (const ExtArray & old)		1310135	0					
ANR	1310137	CompoundStatement		85:0:2014:2354	1310135	0					
ANR	1310138	IdentifierDeclStatement	int i ;	86:1:2017:2022	1310135	0	True				
ANR	1310139	IdentifierDecl	i		1310135	0					
ANR	1310140	IdentifierDeclType	int		1310135	0					
ANR	1310141	Identifier	i		1310135	1					
ANR	1310142	ExpressionStatement	size = old . size	89:1:2068:2083	1310135	1	True				
ANR	1310143	AssignmentExpression	size = old . size		1310135	0		=			
ANR	1310144	Identifier	size		1310135	0					
ANR	1310145	MemberAccess	old . size		1310135	1					
ANR	1310146	Identifier	old		1310135	0					
ANR	1310147	Identifier	size		1310135	1					
ANR	1310148	ExpressionStatement	last = old . last	90:1:2086:2101	1310135	2	True				
ANR	1310149	AssignmentExpression	last = old . last		1310135	0		=			
ANR	1310150	Identifier	last		1310135	0					
ANR	1310151	MemberAccess	old . last		1310135	1					
ANR	1310152	Identifier	old		1310135	0					
ANR	1310153	Identifier	last		1310135	1					
ANR	1310154	ExpressionStatement	array = new Element [ size ]	91:1:2104:2129	1310135	3	True				
ANR	1310155	AssignmentExpression	array = new Element [ size ]		1310135	0		=			
ANR	1310156	Identifier	array		1310135	0					
ANR	1310157	Identifier	size		1310135	1					
ANR	1310158	IfStatement	if ( ! array )		1310135	4					
ANR	1310159	Condition	! array	92:5:2136:2141	1310135	0	True				
ANR	1310160	UnaryOperationExpression	! array		1310135	0					
ANR	1310161	UnaryOperator	!		1310135	0					
ANR	1310162	Identifier	array		1310135	1					
ANR	1310163	CompoundStatement		9:1:131:131	1310135	1					
ANR	1310164	ExpressionStatement	"dprintf ( D_ALWAYS , ""ExtArray: Out of memory"" )"	94:2:2150:2195	1310135	0	True				
ANR	1310165	CallExpression	"dprintf ( D_ALWAYS , ""ExtArray: Out of memory"" )"		1310135	0					
ANR	1310166	Callee	dprintf		1310135	0					
ANR	1310167	Identifier	dprintf		1310135	0					
ANR	1310168	ArgumentList	D_ALWAYS		1310135	1					
ANR	1310169	Argument	D_ALWAYS		1310135	0					
ANR	1310170	Identifier	D_ALWAYS		1310135	0					
ANR	1310171	Argument	"""ExtArray: Out of memory"""		1310135	1					
ANR	1310172	PrimaryExpression	"""ExtArray: Out of memory"""		1310135	0					
ANR	1310173	ExpressionStatement	exit ( 1 )	95:2:2199:2207	1310135	1	True				
ANR	1310174	CallExpression	exit ( 1 )		1310135	0					
ANR	1310175	Callee	exit		1310135	0					
ANR	1310176	Identifier	exit		1310135	0					
ANR	1310177	ArgumentList	1		1310135	1					
ANR	1310178	Argument	1		1310135	0					
ANR	1310179	PrimaryExpression	1		1310135	0					
ANR	1310180	ForStatement	for ( i = 0 ; i < size ; i ++ )		1310135	5					
ANR	1310181	ForInit	i = 0 ;	99:6:2242:2247	1310135	0	True				
ANR	1310182	AssignmentExpression	i = 0		1310135	0		=			
ANR	1310183	Identifier	i		1310135	0					
ANR	1310184	PrimaryExpression	0		1310135	1					
ANR	1310185	Condition	i < size	99:13:2249:2256	1310135	1	True				
ANR	1310186	RelationalExpression	i < size		1310135	0		<			
ANR	1310187	Identifier	i		1310135	0					
ANR	1310188	Identifier	size		1310135	1					
ANR	1310189	PostIncDecOperationExpression	i ++	99:23:2259:2261	1310135	2	True				
ANR	1310190	Identifier	i		1310135	0					
ANR	1310191	IncDec	++		1310135	1					
ANR	1310192	CompoundStatement		16:1:251:251	1310135	3					
ANR	1310193	ExpressionStatement	array [ i ] = old . array [ i ]	101:2:2270:2293	1310135	0	True				
ANR	1310194	AssignmentExpression	array [ i ] = old . array [ i ]		1310135	0		=			
ANR	1310195	ArrayIndexing	array [ i ]		1310135	0					
ANR	1310196	Identifier	array		1310135	0					
ANR	1310197	Identifier	i		1310135	1					
ANR	1310198	ArrayIndexing	old . array [ i ]		1310135	1					
ANR	1310199	MemberAccess	old . array		1310135	0					
ANR	1310200	Identifier	old		1310135	0					
ANR	1310201	Identifier	array		1310135	1					
ANR	1310202	Identifier	i		1310135	1					
ANR	1310203	ExpressionStatement	filler = old . filler	105:1:2333:2352	1310135	6	True				
ANR	1310204	AssignmentExpression	filler = old . filler		1310135	0		=			
ANR	1310205	Identifier	filler		1310135	0					
ANR	1310206	MemberAccess	old . filler		1310135	1					
ANR	1310207	Identifier	old		1310135	0					
ANR	1310208	Identifier	filler		1310135	1					
ANR	1310209	Identifier	ExtArray		1310135	1					
ANR	1310210	ParameterList	const ExtArray & old		1310135	2					
ANR	1310211	Parameter	const ExtArray & old	84:10:1993:2011	1310135	0	True				
ANR	1310212	ParameterType	const ExtArray &		1310135	0					
ANR	1310213	Identifier	old		1310135	1					
ANR	1310214	CFGEntryNode	ENTRY		1310135		True				
ANR	1310215	CFGExitNode	EXIT		1310135		True				
ANR	1310216	Symbol	old . array		1310135						
ANR	1310217	Symbol	last		1310135						
ANR	1310218	Symbol	old		1310135						
ANR	1310219	Symbol	old . size		1310135						
ANR	1310220	Symbol	D_ALWAYS		1310135						
ANR	1310221	Symbol	i		1310135						
ANR	1310222	Symbol	old . last		1310135						
ANR	1310223	Symbol	* array		1310135						
ANR	1310224	Symbol	* old		1310135						
ANR	1310225	Symbol	* i		1310135						
ANR	1310226	Symbol	size		1310135						
ANR	1310227	Symbol	array		1310135						
ANR	1310228	Symbol	* old . array		1310135						
ANR	1310229	Symbol	filler		1310135						
ANR	1310230	Symbol	old . filler		1310135						
ANR	1310231	Function	~ExtArray	111:0:2403:2436							
ANR	1310232	FunctionDef	~ExtArray ()		1310231	0					
ANR	1310233	CompoundStatement		112:0:2416:2436	1310231	0					
ANR	1310234	Statement	delete	113:1:2419:2424	1310231	0	True				
ANR	1310235	Statement	[	113:8:2426:2426	1310231	1	True				
ANR	1310236	Statement	]	113:9:2427:2427	1310231	2	True				
ANR	1310237	ExpressionStatement	array	113:11:2429:2434	1310231	3	True				
ANR	1310238	Identifier	array		1310231	0					
ANR	1310239	Identifier	~ExtArray		1310231	1					
ANR	1310240	ParameterList			1310231	2					
ANR	1310241	CFGEntryNode	ENTRY		1310231		True				
ANR	1310242	CFGExitNode	EXIT		1310231		True				
ANR	1310243	Function	operator [ ]	119:0:2500:2651							
ANR	1310244	FunctionDef	operator [ ] (int i)		1310243	0					
ANR	1310245	CompoundStatement		120:0:2525:2651	1310243	0					
ANR	1310246	IfStatement	if ( i < 0 )		1310243	0					
ANR	1310247	Condition	i < 0	122:5:2549:2553	1310243	0	True				
ANR	1310248	RelationalExpression	i < 0		1310243	0		<			
ANR	1310249	Identifier	i		1310243	0					
ANR	1310250	PrimaryExpression	0		1310243	1					
ANR	1310251	CompoundStatement		4:1:32:32	1310243	1					
ANR	1310252	ExpressionStatement	i = 0	124:2:2562:2567	1310243	0	True				
ANR	1310253	AssignmentExpression	i = 0		1310243	0		=			
ANR	1310254	Identifier	i		1310243	0					
ANR	1310255	PrimaryExpression	0		1310243	1					
ANR	1310256	ElseStatement	else		1310243	0					
ANR	1310257	IfStatement	if ( i > last )		1310243	0					
ANR	1310258	Condition	i > last	126:10:2582:2589	1310243	0	True				
ANR	1310259	RelationalExpression	i > last		1310243	0		>			
ANR	1310260	Identifier	i		1310243	0					
ANR	1310261	Identifier	last		1310243	1					
ANR	1310262	CompoundStatement		8:1:68:68	1310243	1					
ANR	1310263	ReturnStatement	return filler ;	128:2:2598:2611	1310243	0	True				
ANR	1310264	Identifier	filler		1310243	0					
ANR	1310265	ReturnStatement	return array [ i ] ;	132:1:2634:2649	1310243	1	True				
ANR	1310266	ArrayIndexing	array [ i ]		1310243	0					
ANR	1310267	Identifier	array		1310243	0					
ANR	1310268	Identifier	i		1310243	1					
ANR	1310269	Identifier	operator [ ]		1310243	1					
ANR	1310270	ParameterList	int i		1310243	2					
ANR	1310271	Parameter	int i	119:12:2512:2516	1310243	0	True				
ANR	1310272	ParameterType	int		1310243	0					
ANR	1310273	Identifier	i		1310243	1					
ANR	1310274	CFGEntryNode	ENTRY		1310243		True				
ANR	1310275	CFGExitNode	EXIT		1310243		True				
ANR	1310276	Symbol	* i		1310243						
ANR	1310277	Symbol	last		1310243						
ANR	1310278	Symbol	array		1310243						
ANR	1310279	Symbol	filler		1310243						
ANR	1310280	Symbol	i		1310243						
ANR	1310281	Symbol	* array		1310243						
ANR	1310282	Function	operator [ ]	138:0:2716:2893							
ANR	1310283	FunctionDef	operator [ ] (int i)		1310282	0					
ANR	1310284	CompoundStatement		139:0:2735:2893	1310282	0					
ANR	1310285	IfStatement	if ( i < 0 )		1310282	0					
ANR	1310286	Condition	i < 0	141:5:2763:2767	1310282	0	True				
ANR	1310287	RelationalExpression	i < 0		1310282	0		<			
ANR	1310288	Identifier	i		1310282	0					
ANR	1310289	PrimaryExpression	0		1310282	1					
ANR	1310290	CompoundStatement		4:1:36:36	1310282	1					
ANR	1310291	ExpressionStatement	i = 0	143:2:2776:2781	1310282	0	True				
ANR	1310292	AssignmentExpression	i = 0		1310282	0		=			
ANR	1310293	Identifier	i		1310282	0					
ANR	1310294	PrimaryExpression	0		1310282	1					
ANR	1310295	ElseStatement	else		1310282	0					
ANR	1310296	IfStatement	if ( i >= size )		1310282	0					
ANR	1310297	Condition	i >= size	146:5:2798:2806	1310282	0	True				
ANR	1310298	RelationalExpression	i >= size		1310282	0		>=			
ANR	1310299	Identifier	i		1310282	0					
ANR	1310300	Identifier	size		1310282	1					
ANR	1310301	CompoundStatement		9:1:75:75	1310282	1					
ANR	1310302	ExpressionStatement	resize ( 2 * i )	148:2:2815:2827	1310282	0	True				
ANR	1310303	CallExpression	resize ( 2 * i )		1310282	0					
ANR	1310304	Callee	resize		1310282	0					
ANR	1310305	Identifier	resize		1310282	0					
ANR	1310306	ArgumentList	2 * i		1310282	1					
ANR	1310307	Argument	2 * i		1310282	0					
ANR	1310308	MultiplicativeExpression	2 * i		1310282	0		*			
ANR	1310309	PrimaryExpression	2		1310282	0					
ANR	1310310	Identifier	i		1310282	1					
ANR	1310311	IfStatement	if ( i > last )		1310282	1					
ANR	1310312	Condition	i > last	152:5:2854:2861	1310282	0	True				
ANR	1310313	RelationalExpression	i > last		1310282	0		>			
ANR	1310314	Identifier	i		1310282	0					
ANR	1310315	Identifier	last		1310282	1					
ANR	1310316	ExpressionStatement	last = i	152:16:2865:2873	1310282	1	True				
ANR	1310317	AssignmentExpression	last = i		1310282	0		=			
ANR	1310318	Identifier	last		1310282	0					
ANR	1310319	Identifier	i		1310282	1					
ANR	1310320	ReturnStatement	return array [ i ] ;	153:1:2876:2891	1310282	2	True				
ANR	1310321	ArrayIndexing	array [ i ]		1310282	0					
ANR	1310322	Identifier	array		1310282	0					
ANR	1310323	Identifier	i		1310282	1					
ANR	1310324	Identifier	operator [ ]		1310282	1					
ANR	1310325	ParameterList	int i		1310282	2					
ANR	1310326	Parameter	int i	138:12:2728:2732	1310282	0	True				
ANR	1310327	ParameterType	int		1310282	0					
ANR	1310328	Identifier	i		1310282	1					
ANR	1310329	CFGEntryNode	ENTRY		1310282		True				
ANR	1310330	CFGExitNode	EXIT		1310282		True				
ANR	1310331	Symbol	* i		1310282						
ANR	1310332	Symbol	size		1310282						
ANR	1310333	Symbol	last		1310282						
ANR	1310334	Symbol	array		1310282						
ANR	1310335	Symbol	i		1310282						
ANR	1310336	Symbol	* array		1310282						
ANR	1310337	Function	set	163:0:3067:3806							
ANR	1310338	FunctionDef	"set (int idx , Element elt)"		1310337	0					
ANR	1310339	CompoundStatement		164:0:3096:3806	1310337	0					
ANR	1310340	IfStatement	if ( idx < 0 )		1310337	0					
ANR	1310341	Condition	idx < 0	171:6:3291:3297	1310337	0	True				
ANR	1310342	RelationalExpression	idx < 0		1310337	0		<			
ANR	1310343	Identifier	idx		1310337	0					
ANR	1310344	PrimaryExpression	0		1310337	1					
ANR	1310345	CompoundStatement		8:16:204:204	1310337	1					
ANR	1310346	ExpressionStatement	idx = 0	172:2:3306:3313	1310337	0	True				
ANR	1310347	AssignmentExpression	idx = 0		1310337	0		=			
ANR	1310348	Identifier	idx		1310337	0					
ANR	1310349	PrimaryExpression	0		1310337	1					
ANR	1310350	ElseStatement	else		1310337	0					
ANR	1310351	IfStatement	if ( idx >= this -> size )		1310337	0					
ANR	1310352	Condition	idx >= this -> size	177:13:3412:3428	1310337	0	True				
ANR	1310353	RelationalExpression	idx >= this -> size		1310337	0		>=			
ANR	1310354	Identifier	idx		1310337	0					
ANR	1310355	PtrMemberAccess	this -> size		1310337	1					
ANR	1310356	Identifier	this		1310337	0					
ANR	1310357	Identifier	size		1310337	1					
ANR	1310358	CompoundStatement		15:2:339:364	1310337	1					
ANR	1310359	IdentifierDeclStatement	int newSize = idx * 2 + 2 ;	178:2:3436:3461	1310337	0	True				
ANR	1310360	IdentifierDecl	newSize = idx * 2 + 2		1310337	0					
ANR	1310361	IdentifierDeclType	int		1310337	0					
ANR	1310362	Identifier	newSize		1310337	1					
ANR	1310363	AssignmentExpression	newSize = idx * 2 + 2		1310337	2		=			
ANR	1310364	Identifier	newSize		1310337	0					
ANR	1310365	AdditiveExpression	idx * 2 + 2		1310337	1		+			
ANR	1310366	MultiplicativeExpression	idx * 2		1310337	0		*			
ANR	1310367	Identifier	idx		1310337	0					
ANR	1310368	PrimaryExpression	2		1310337	1					
ANR	1310369	PrimaryExpression	2		1310337	1					
ANR	1310370	ExpressionStatement	this -> resize ( newSize )	179:2:3490:3513	1310337	1	True				
ANR	1310371	CallExpression	this -> resize ( newSize )		1310337	0					
ANR	1310372	Callee	this -> resize		1310337	0					
ANR	1310373	PtrMemberAccess	this -> resize		1310337	0					
ANR	1310374	Identifier	this		1310337	0					
ANR	1310375	Identifier	resize		1310337	1					
ANR	1310376	ArgumentList	newSize		1310337	1					
ANR	1310377	Argument	newSize		1310337	0					
ANR	1310378	Identifier	newSize		1310337	0					
ANR	1310379	IfStatement	if ( idx > this -> last )		1310337	1					
ANR	1310380	Condition	idx > this -> last	185:6:3625:3640	1310337	0	True				
ANR	1310381	RelationalExpression	idx > this -> last		1310337	0		>			
ANR	1310382	Identifier	idx		1310337	0					
ANR	1310383	PtrMemberAccess	this -> last		1310337	1					
ANR	1310384	Identifier	this		1310337	0					
ANR	1310385	Identifier	last		1310337	1					
ANR	1310386	CompoundStatement		22:25:547:547	1310337	1					
ANR	1310387	ExpressionStatement	this -> last = idx	186:2:3648:3664	1310337	0	True				
ANR	1310388	AssignmentExpression	this -> last = idx		1310337	0		=			
ANR	1310389	PtrMemberAccess	this -> last		1310337	0					
ANR	1310390	Identifier	this		1310337	0					
ANR	1310391	Identifier	last		1310337	1					
ANR	1310392	Identifier	idx		1310337	1					
ANR	1310393	IdentifierDeclStatement	Element orig = this -> array [ idx ] ;	192:1:3730:3761	1310337	2	True				
ANR	1310394	IdentifierDecl	orig = this -> array [ idx ]		1310337	0					
ANR	1310395	IdentifierDeclType	Element		1310337	0					
ANR	1310396	Identifier	orig		1310337	1					
ANR	1310397	AssignmentExpression	orig = this -> array [ idx ]		1310337	2		=			
ANR	1310398	Identifier	orig		1310337	0					
ANR	1310399	ArrayIndexing	this -> array [ idx ]		1310337	1					
ANR	1310400	PtrMemberAccess	this -> array		1310337	0					
ANR	1310401	Identifier	this		1310337	0					
ANR	1310402	Identifier	array		1310337	1					
ANR	1310403	Identifier	idx		1310337	1					
ANR	1310404	ExpressionStatement	this -> array [ idx ] = elt	193:1:3764:3786	1310337	3	True				
ANR	1310405	AssignmentExpression	this -> array [ idx ] = elt		1310337	0		=			
ANR	1310406	ArrayIndexing	this -> array [ idx ]		1310337	0					
ANR	1310407	PtrMemberAccess	this -> array		1310337	0					
ANR	1310408	Identifier	this		1310337	0					
ANR	1310409	Identifier	array		1310337	1					
ANR	1310410	Identifier	idx		1310337	1					
ANR	1310411	Identifier	elt		1310337	1					
ANR	1310412	ReturnStatement	return ( orig ) ;	194:1:3789:3804	1310337	4	True				
ANR	1310413	Identifier	orig		1310337	0					
ANR	1310414	Identifier	set		1310337	1					
ANR	1310415	ParameterList	"int idx , Element elt"		1310337	2					
ANR	1310416	Parameter	int idx	163:5:3072:3078	1310337	0	True				
ANR	1310417	ParameterType	int		1310337	0					
ANR	1310418	Identifier	idx		1310337	1					
ANR	1310419	Parameter	Element elt	163:14:3081:3091	1310337	1	True				
ANR	1310420	ParameterType	Element		1310337	0					
ANR	1310421	Identifier	elt		1310337	1					
ANR	1310422	CFGEntryNode	ENTRY		1310337		True				
ANR	1310423	CFGExitNode	EXIT		1310337		True				
ANR	1310424	Symbol	* this		1310337						
ANR	1310425	Symbol	orig		1310337						
ANR	1310426	Symbol	this -> size		1310337						
ANR	1310427	Symbol	this -> last		1310337						
ANR	1310428	Symbol	* * this		1310337						
ANR	1310429	Symbol	this		1310337						
ANR	1310430	Symbol	* idx		1310337						
ANR	1310431	Symbol	newSize		1310337						
ANR	1310432	Symbol	idx		1310337						
ANR	1310433	Symbol	elt		1310337						
ANR	1310434	Symbol	* this -> array		1310337						
ANR	1310435	Symbol	this -> array		1310337						
ANR	1310436	Function	add	204:0:3990:4175							
ANR	1310437	FunctionDef	add (Element elt)		1310436	0					
ANR	1310438	CompoundStatement		205:0:4010:4175	1310436	0					
ANR	1310439	ReturnStatement	"return ( this -> set ( this -> last + 1 , elt ) ) ;"	211:1:4130:4173	1310436	0	True				
ANR	1310440	CallExpression	"this -> set ( this -> last + 1 , elt )"		1310436	0					
ANR	1310441	Callee	this -> set		1310436	0					
ANR	1310442	PtrMemberAccess	this -> set		1310436	0					
ANR	1310443	Identifier	this		1310436	0					
ANR	1310444	Identifier	set		1310436	1					
ANR	1310445	ArgumentList	this -> last + 1		1310436	1					
ANR	1310446	Argument	this -> last + 1		1310436	0					
ANR	1310447	AdditiveExpression	this -> last + 1		1310436	0		+			
ANR	1310448	PtrMemberAccess	this -> last		1310436	0					
ANR	1310449	Identifier	this		1310436	0					
ANR	1310450	Identifier	last		1310436	1					
ANR	1310451	PrimaryExpression	1		1310436	1					
ANR	1310452	Argument	elt		1310436	1					
ANR	1310453	Identifier	elt		1310436	0					
ANR	1310454	Identifier	add		1310436	1					
ANR	1310455	ParameterList	Element elt		1310436	2					
ANR	1310456	Parameter	Element elt	204:5:3995:4005	1310436	0	True				
ANR	1310457	ParameterType	Element		1310436	0					
ANR	1310458	Identifier	elt		1310436	1					
ANR	1310459	CFGEntryNode	ENTRY		1310436		True				
ANR	1310460	CFGExitNode	EXIT		1310436		True				
ANR	1310461	Symbol	* this		1310436						
ANR	1310462	Symbol	this -> last		1310436						
ANR	1310463	Symbol	this		1310436						
ANR	1310464	Symbol	elt		1310436						
ANR	1310465	Symbol	this -> set		1310436						
ANR	1310466	Function	getElementAt	220:0:4267:4454							
ANR	1310467	FunctionDef	getElementAt (int idx)		1310466	0					
ANR	1310468	CompoundStatement		221:0:4291:4454	1310466	0					
ANR	1310469	IfStatement	if ( idx < 0 )		1310466	0					
ANR	1310470	Condition	idx < 0	225:6:4360:4366	1310466	0	True				
ANR	1310471	RelationalExpression	idx < 0		1310466	0		<			
ANR	1310472	Identifier	idx		1310466	0					
ANR	1310473	PrimaryExpression	0		1310466	1					
ANR	1310474	CompoundStatement		5:17:79:79	1310466	1					
ANR	1310475	ExpressionStatement	idx = 0	226:2:4375:4382	1310466	0	True				
ANR	1310476	AssignmentExpression	idx = 0		1310466	0		=			
ANR	1310477	Identifier	idx		1310466	0					
ANR	1310478	PrimaryExpression	0		1310466	1					
ANR	1310479	ElseStatement	else		1310466	0					
ANR	1310480	IfStatement	if ( idx >= size )		1310466	0					
ANR	1310481	Condition	idx >= size	227:13:4397:4407	1310466	0	True				
ANR	1310482	RelationalExpression	idx >= size		1310466	0		>=			
ANR	1310483	Identifier	idx		1310466	0					
ANR	1310484	Identifier	size		1310466	1					
ANR	1310485	CompoundStatement		7:27:119:119	1310466	1					
ANR	1310486	ExpressionStatement	idx = size	228:2:4415:4425	1310466	0	True				
ANR	1310487	AssignmentExpression	idx = size		1310466	0		=			
ANR	1310488	Identifier	idx		1310466	0					
ANR	1310489	Identifier	size		1310466	1					
ANR	1310490	ReturnStatement	return ( array [ idx ] ) ;	230:1:4431:4452	1310466	1	True				
ANR	1310491	ArrayIndexing	array [ idx ]		1310466	0					
ANR	1310492	Identifier	array		1310466	0					
ANR	1310493	Identifier	idx		1310466	1					
ANR	1310494	Identifier	getElementAt		1310466	1					
ANR	1310495	ParameterList	int idx		1310466	2					
ANR	1310496	Parameter	int idx	220:14:4281:4287	1310466	0	True				
ANR	1310497	ParameterType	int		1310466	0					
ANR	1310498	Identifier	idx		1310466	1					
ANR	1310499	CFGEntryNode	ENTRY		1310466		True				
ANR	1310500	CFGExitNode	EXIT		1310466		True				
ANR	1310501	Symbol	size		1310466						
ANR	1310502	Symbol	array		1310466						
ANR	1310503	Symbol	* idx		1310466						
ANR	1310504	Symbol	idx		1310466						
ANR	1310505	Symbol	* array		1310466						
ANR	1310506	Function	getsize	235:0:4513:4550							
ANR	1310507	FunctionDef	getsize ()		1310506	0					
ANR	1310508	CompoundStatement		236:0:4534:4550	1310506	0					
ANR	1310509	ReturnStatement	return size ;	237:1:4537:4548	1310506	0	True				
ANR	1310510	Identifier	size		1310506	0					
ANR	1310511	Identifier	getsize		1310506	1					
ANR	1310512	ParameterList			1310506	2					
ANR	1310513	CFGEntryNode	ENTRY		1310506		True				
ANR	1310514	CFGExitNode	EXIT		1310506		True				
ANR	1310515	Symbol	size		1310506						
ANR	1310516	Function	length	242:0:4609:4716							
ANR	1310517	FunctionDef	length ()		1310516	0					
ANR	1310518	CompoundStatement		243:0:4629:4716	1310516	0					
ANR	1310519	ReturnStatement	return this -> getlast ( ) + 1 ;	245:1:4688:4714	1310516	0	True				
ANR	1310520	AdditiveExpression	this -> getlast ( ) + 1		1310516	0		+			
ANR	1310521	CallExpression	this -> getlast ( )		1310516	0					
ANR	1310522	Callee	this -> getlast		1310516	0					
ANR	1310523	PtrMemberAccess	this -> getlast		1310516	0					
ANR	1310524	Identifier	this		1310516	0					
ANR	1310525	Identifier	getlast		1310516	1					
ANR	1310526	ArgumentList			1310516	1					
ANR	1310527	PrimaryExpression	1		1310516	1					
ANR	1310528	Identifier	length		1310516	1					
ANR	1310529	ParameterList			1310516	2					
ANR	1310530	CFGEntryNode	ENTRY		1310516		True				
ANR	1310531	CFGExitNode	EXIT		1310516		True				
ANR	1310532	Symbol	* this		1310516						
ANR	1310533	Symbol	this -> getlast		1310516						
ANR	1310534	Symbol	this		1310516						
ANR	1310535	Function	getlast	251:0:4776:4813							
ANR	1310536	FunctionDef	getlast ()		1310535	0					
ANR	1310537	CompoundStatement		252:0:4797:4813	1310535	0					
ANR	1310538	ReturnStatement	return last ;	253:1:4800:4811	1310535	0	True				
ANR	1310539	Identifier	last		1310535	0					
ANR	1310540	Identifier	getlast		1310535	1					
ANR	1310541	ParameterList			1310535	2					
ANR	1310542	CFGEntryNode	ENTRY		1310535		True				
ANR	1310543	CFGExitNode	EXIT		1310535		True				
ANR	1310544	Symbol	last		1310535						
ANR	1310545	Function	getarray	258:0:4877:4911							
ANR	1310546	FunctionDef	getarray ()		1310545	0					
ANR	1310547	CompoundStatement		259:0:4894:4911	1310545	0					
ANR	1310548	ReturnStatement	return array ;	260:1:4897:4909	1310545	0	True				
ANR	1310549	Identifier	array		1310545	0					
ANR	1310550	Identifier	getarray		1310545	1					
ANR	1310551	ParameterList			1310545	2					
ANR	1310552	CFGEntryNode	ENTRY		1310545		True				
ANR	1310553	CFGExitNode	EXIT		1310545		True				
ANR	1310554	Symbol	array		1310545						
ANR	1310555	Function	resize	266:0:4965:5538							
ANR	1310556	FunctionDef	resize (int newsz)		1310555	0					
ANR	1310557	CompoundStatement		266:19:4984:5538	1310555	0					
ANR	1310558	IdentifierDeclStatement	Element * newarray = new Element [ newsz ] ;	267:1:4987:5025	1310555	0	True				
ANR	1310559	IdentifierDecl	* newarray = new Element [ newsz ]		1310555	0					
ANR	1310560	IdentifierDeclType	Element *		1310555	0					
ANR	1310561	Identifier	newarray		1310555	1					
ANR	1310562	AssignmentExpression	* newarray = new Element [ newsz ]		1310555	2		=			
ANR	1310563	Identifier	newsz		1310555	0					
ANR	1310564	Identifier	newsz		1310555	1					
ANR	1310565	IdentifierDeclStatement	int index = ( size < newsz ) ? size : newsz ;	268:1:5028:5070	1310555	1	True				
ANR	1310566	IdentifierDecl	index = ( size < newsz ) ? size : newsz		1310555	0					
ANR	1310567	IdentifierDeclType	int		1310555	0					
ANR	1310568	Identifier	index		1310555	1					
ANR	1310569	AssignmentExpression	index = ( size < newsz ) ? size : newsz		1310555	2		=			
ANR	1310570	Identifier	index		1310555	0					
ANR	1310571	ConditionalExpression	( size < newsz ) ? size : newsz		1310555	1					
ANR	1310572	Condition	size < newsz		1310555	0					
ANR	1310573	RelationalExpression	size < newsz		1310555	0		<			
ANR	1310574	Identifier	size		1310555	0					
ANR	1310575	Identifier	newsz		1310555	1					
ANR	1310576	Identifier	size		1310555	1					
ANR	1310577	Identifier	newsz		1310555	2					
ANR	1310578	IdentifierDeclStatement	int i ;	269:1:5073:5078	1310555	2	True				
ANR	1310579	IdentifierDecl	i		1310555	0					
ANR	1310580	IdentifierDeclType	int		1310555	0					
ANR	1310581	Identifier	i		1310555	1					
ANR	1310582	IfStatement	if ( ! newarray )		1310555	3					
ANR	1310583	Condition	! newarray	272:5:5132:5140	1310555	0	True				
ANR	1310584	UnaryOperationExpression	! newarray		1310555	0					
ANR	1310585	UnaryOperator	!		1310555	0					
ANR	1310586	Identifier	newarray		1310555	1					
ANR	1310587	CompoundStatement		8:1:160:160	1310555	1					
ANR	1310588	ExpressionStatement	"dprintf ( D_ALWAYS , ""ExtArray: Out of memory"" )"	274:2:5149:5194	1310555	0	True				
ANR	1310589	CallExpression	"dprintf ( D_ALWAYS , ""ExtArray: Out of memory"" )"		1310555	0					
ANR	1310590	Callee	dprintf		1310555	0					
ANR	1310591	Identifier	dprintf		1310555	0					
ANR	1310592	ArgumentList	D_ALWAYS		1310555	1					
ANR	1310593	Argument	D_ALWAYS		1310555	0					
ANR	1310594	Identifier	D_ALWAYS		1310555	0					
ANR	1310595	Argument	"""ExtArray: Out of memory"""		1310555	1					
ANR	1310596	PrimaryExpression	"""ExtArray: Out of memory"""		1310555	0					
ANR	1310597	ExpressionStatement	exit ( 1 )	275:2:5198:5206	1310555	1	True				
ANR	1310598	CallExpression	exit ( 1 )		1310555	0					
ANR	1310599	Callee	exit		1310555	0					
ANR	1310600	Identifier	exit		1310555	0					
ANR	1310601	ArgumentList	1		1310555	1					
ANR	1310602	Argument	1		1310555	0					
ANR	1310603	PrimaryExpression	1		1310555	0					
ANR	1310604	ForStatement	for ( i = index ; i < newsz ; i ++ )		1310555	4					
ANR	1310605	ForInit	i = index ;	280:6:5314:5321	1310555	0	True				
ANR	1310606	AssignmentExpression	i = index		1310555	0		=			
ANR	1310607	Identifier	i		1310555	0					
ANR	1310608	Identifier	index		1310555	1					
ANR	1310609	Condition	i < newsz	280:14:5322:5328	1310555	1	True				
ANR	1310610	RelationalExpression	i < newsz		1310555	0		<			
ANR	1310611	Identifier	i		1310555	0					
ANR	1310612	Identifier	newsz		1310555	1					
ANR	1310613	PostIncDecOperationExpression	i ++	280:22:5330:5332	1310555	2	True				
ANR	1310614	Identifier	i		1310555	0					
ANR	1310615	IncDec	++		1310555	1					
ANR	1310616	CompoundStatement		16:1:352:352	1310555	3					
ANR	1310617	ExpressionStatement	newarray [ i ] = filler	282:2:5341:5361	1310555	0	True				
ANR	1310618	AssignmentExpression	newarray [ i ] = filler		1310555	0		=			
ANR	1310619	ArrayIndexing	newarray [ i ]		1310555	0					
ANR	1310620	Identifier	newarray		1310555	0					
ANR	1310621	Identifier	i		1310555	1					
ANR	1310622	Identifier	filler		1310555	1					
ANR	1310623	WhileStatement	while ( -- index >= 0 )		1310555	5					
ANR	1310624	Condition	-- index >= 0	286:8:5411:5422	1310555	0	True				
ANR	1310625	RelationalExpression	-- index >= 0		1310555	0		>=			
ANR	1310626	UnaryExpression	-- index		1310555	0					
ANR	1310627	IncDec	--		1310555	0					
ANR	1310628	Identifier	index		1310555	1					
ANR	1310629	PrimaryExpression	0		1310555	1					
ANR	1310630	CompoundStatement		22:1:442:442	1310555	1					
ANR	1310631	ExpressionStatement	newarray [ index ] = array [ index ]	288:2:5431:5461	1310555	0	True				
ANR	1310632	AssignmentExpression	newarray [ index ] = array [ index ]		1310555	0		=			
ANR	1310633	ArrayIndexing	newarray [ index ]		1310555	0					
ANR	1310634	Identifier	newarray		1310555	0					
ANR	1310635	Identifier	index		1310555	1					
ANR	1310636	ArrayIndexing	array [ index ]		1310555	1					
ANR	1310637	Identifier	array		1310555	0					
ANR	1310638	Identifier	index		1310555	1					
ANR	1310639	Statement	delete	292:1:5486:5491	1310555	6	True				
ANR	1310640	Statement	[	292:8:5493:5493	1310555	7	True				
ANR	1310641	Statement	]	292:9:5494:5494	1310555	8	True				
ANR	1310642	ExpressionStatement	array	292:11:5496:5501	1310555	9	True				
ANR	1310643	Identifier	array		1310555	0					
ANR	1310644	ExpressionStatement	size = newsz	293:1:5504:5516	1310555	10	True				
ANR	1310645	AssignmentExpression	size = newsz		1310555	0		=			
ANR	1310646	Identifier	size		1310555	0					
ANR	1310647	Identifier	newsz		1310555	1					
ANR	1310648	ExpressionStatement	array = newarray	294:1:5520:5536	1310555	11	True				
ANR	1310649	AssignmentExpression	array = newarray		1310555	0		=			
ANR	1310650	Identifier	array		1310555	0					
ANR	1310651	Identifier	newarray		1310555	1					
ANR	1310652	Identifier	resize		1310555	1					
ANR	1310653	ParameterList	int newsz		1310555	2					
ANR	1310654	Parameter	int newsz	266:8:4973:4981	1310555	0	True				
ANR	1310655	ParameterType	int		1310555	0					
ANR	1310656	Identifier	newsz		1310555	1					
ANR	1310657	CFGEntryNode	ENTRY		1310555		True				
ANR	1310658	CFGExitNode	EXIT		1310555		True				
ANR	1310659	Symbol	* newarray		1310555						
ANR	1310660	Symbol	* i		1310555						
ANR	1310661	Symbol	size		1310555						
ANR	1310662	Symbol	array		1310555						
ANR	1310663	Symbol	* index		1310555						
ANR	1310664	Symbol	D_ALWAYS		1310555						
ANR	1310665	Symbol	filler		1310555						
ANR	1310666	Symbol	index		1310555						
ANR	1310667	Symbol	i		1310555						
ANR	1310668	Symbol	newsz		1310555						
ANR	1310669	Symbol	newarray		1310555						
ANR	1310670	Symbol	* array		1310555						
ANR	1310671	Function	truncate	300:0:5592:5634							
ANR	1310672	FunctionDef	truncate (int newlast)		1310671	0					
ANR	1310673	CompoundStatement		301:0:5615:5634	1310671	0					
ANR	1310674	ExpressionStatement	last = newlast	302:1:5618:5632	1310671	0	True				
ANR	1310675	AssignmentExpression	last = newlast		1310671	0		=			
ANR	1310676	Identifier	last		1310671	0					
ANR	1310677	Identifier	newlast		1310671	1					
ANR	1310678	Identifier	truncate		1310671	1					
ANR	1310679	ParameterList	int newlast		1310671	2					
ANR	1310680	Parameter	int newlast	300:10:5602:5612	1310671	0	True				
ANR	1310681	ParameterType	int		1310671	0					
ANR	1310682	Identifier	newlast		1310671	1					
ANR	1310683	CFGEntryNode	ENTRY		1310671		True				
ANR	1310684	CFGExitNode	EXIT		1310671		True				
ANR	1310685	Symbol	newlast		1310671						
ANR	1310686	Symbol	last		1310671						
ANR	1310687	Function	fill	308:0:5690:5780							
ANR	1310688	FunctionDef	fill (Element elt)		1310687	0					
ANR	1310689	CompoundStatement		309:0:5709:5780	1310687	0					
ANR	1310690	IdentifierDeclStatement	int i ;	310:1:5712:5717	1310687	0	True				
ANR	1310691	IdentifierDecl	i		1310687	0					
ANR	1310692	IdentifierDeclType	int		1310687	0					
ANR	1310693	Identifier	i		1310687	1					
ANR	1310694	ForStatement	for ( i = 0 ; i < size ; i ++ )		1310687	1					
ANR	1310695	ForInit	i = 0 ;	311:6:5725:5730	1310687	0	True				
ANR	1310696	AssignmentExpression	i = 0		1310687	0		=			
ANR	1310697	Identifier	i		1310687	0					
ANR	1310698	PrimaryExpression	0		1310687	1					
ANR	1310699	Condition	i < size	311:13:5732:5739	1310687	1	True				
ANR	1310700	RelationalExpression	i < size		1310687	0		<			
ANR	1310701	Identifier	i		1310687	0					
ANR	1310702	Identifier	size		1310687	1					
ANR	1310703	PostIncDecOperationExpression	i ++	311:23:5742:5744	1310687	2	True				
ANR	1310704	Identifier	i		1310687	0					
ANR	1310705	IncDec	++		1310687	1					
ANR	1310706	ExpressionStatement	array [ i ] = elt	312:2:5749:5763	1310687	3	True				
ANR	1310707	AssignmentExpression	array [ i ] = elt		1310687	0		=			
ANR	1310708	ArrayIndexing	array [ i ]		1310687	0					
ANR	1310709	Identifier	array		1310687	0					
ANR	1310710	Identifier	i		1310687	1					
ANR	1310711	Identifier	elt		1310687	1					
ANR	1310712	ExpressionStatement	filler = elt	313:1:5766:5778	1310687	2	True				
ANR	1310713	AssignmentExpression	filler = elt		1310687	0		=			
ANR	1310714	Identifier	filler		1310687	0					
ANR	1310715	Identifier	elt		1310687	1					
ANR	1310716	Identifier	fill		1310687	1					
ANR	1310717	ParameterList	Element elt		1310687	2					
ANR	1310718	Parameter	Element elt	308:6:5696:5706	1310687	0	True				
ANR	1310719	ParameterType	Element		1310687	0					
ANR	1310720	Identifier	elt		1310687	1					
ANR	1310721	CFGEntryNode	ENTRY		1310687		True				
ANR	1310722	CFGExitNode	EXIT		1310687		True				
ANR	1310723	Symbol	* i		1310687						
ANR	1310724	Symbol	size		1310687						
ANR	1310725	Symbol	array		1310687						
ANR	1310726	Symbol	filler		1310687						
ANR	1310727	Symbol	i		1310687						
ANR	1310728	Symbol	elt		1310687						
ANR	1310729	Symbol	* array		1310687						
ANR	1310730	Function	setFiller	318:0:5833:5875							
ANR	1310731	FunctionDef	setFiller (Element elt)		1310730	0					
ANR	1310732	CompoundStatement		319:0:5858:5875	1310730	0					
ANR	1310733	ExpressionStatement	filler = elt	320:1:5861:5873	1310730	0	True				
ANR	1310734	AssignmentExpression	filler = elt		1310730	0		=			
ANR	1310735	Identifier	filler		1310730	0					
ANR	1310736	Identifier	elt		1310730	1					
ANR	1310737	Identifier	setFiller		1310730	1					
ANR	1310738	ParameterList	Element elt		1310730	2					
ANR	1310739	Parameter	Element elt	318:11:5844:5854	1310730	0	True				
ANR	1310740	ParameterType	Element		1310730	0					
ANR	1310741	Identifier	elt		1310730	1					
ANR	1310742	CFGEntryNode	ENTRY		1310730		True				
ANR	1310743	CFGExitNode	EXIT		1310730		True				
ANR	1310744	Symbol	filler		1310730						
ANR	1310745	Symbol	elt		1310730						
