command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	883804	File	data/converged/CVE-2011-4930_htcondor/condor_event.cpp								
ANR	883805	DeclStmt									
ANR	883806	Decl							extern FILESQL	extern FILESQL *	FILEObj
ANR	883807	DeclStmt									
ANR	883808	Decl							const char	const char * [ ]	ULogEventNumberNames
ANR	883809	DeclStmt									
ANR	883810	Decl							const char	const char * [ ]	ULogEventOutcomeNames
ANR	883811	Function	instantiateEvent	97:0:3379:3641							
ANR	883812	FunctionDef	instantiateEvent (ClassAd * ad)		883811	0					
ANR	883813	CompoundStatement		99:0:3422:3641	883811	0					
ANR	883814	IdentifierDeclStatement	ULogEvent * event ;	100:1:3425:3441	883811	0	True				
ANR	883815	IdentifierDecl	* event		883811	0					
ANR	883816	IdentifierDeclType	ULogEvent *		883811	0					
ANR	883817	Identifier	event		883811	1					
ANR	883818	IdentifierDeclStatement	int eventNumber ;	101:1:3444:3459	883811	1	True				
ANR	883819	IdentifierDecl	eventNumber		883811	0					
ANR	883820	IdentifierDeclType	int		883811	0					
ANR	883821	Identifier	eventNumber		883811	1					
ANR	883822	IfStatement	"if ( ! ad -> LookupInteger ( ""EventTypeNumber"" , eventNumber ) )"		883811	2					
ANR	883823	Condition	"! ad -> LookupInteger ( ""EventTypeNumber"" , eventNumber )"	102:4:3465:3513	883811	0	True				
ANR	883824	UnaryOperationExpression	"! ad -> LookupInteger ( ""EventTypeNumber"" , eventNumber )"		883811	0					
ANR	883825	UnaryOperator	!		883811	0					
ANR	883826	CallExpression	"ad -> LookupInteger ( ""EventTypeNumber"" , eventNumber )"		883811	1					
ANR	883827	Callee	ad -> LookupInteger		883811	0					
ANR	883828	PtrMemberAccess	ad -> LookupInteger		883811	0					
ANR	883829	Identifier	ad		883811	0					
ANR	883830	Identifier	LookupInteger		883811	1					
ANR	883831	ArgumentList	"""EventTypeNumber"""		883811	1					
ANR	883832	Argument	"""EventTypeNumber"""		883811	0					
ANR	883833	PrimaryExpression	"""EventTypeNumber"""		883811	0					
ANR	883834	Argument	eventNumber		883811	1					
ANR	883835	Identifier	eventNumber		883811	0					
ANR	883836	ReturnStatement	return NULL ;	102:55:3516:3527	883811	1	True				
ANR	883837	Identifier	NULL		883811	0					
ANR	883838	ExpressionStatement	event = instantiateEvent ( ( ULogEventNumber ) eventNumber )	104:1:3531:3585	883811	3	True				
ANR	883839	AssignmentExpression	event = instantiateEvent ( ( ULogEventNumber ) eventNumber )		883811	0		=			
ANR	883840	Identifier	event		883811	0					
ANR	883841	CallExpression	instantiateEvent ( ( ULogEventNumber ) eventNumber )		883811	1					
ANR	883842	Callee	instantiateEvent		883811	0					
ANR	883843	Identifier	instantiateEvent		883811	0					
ANR	883844	ArgumentList	( ULogEventNumber ) eventNumber		883811	1					
ANR	883845	Argument	( ULogEventNumber ) eventNumber		883811	0					
ANR	883846	CastExpression	( ULogEventNumber ) eventNumber		883811	0					
ANR	883847	CastTarget	ULogEventNumber		883811	0					
ANR	883848	Identifier	eventNumber		883811	1					
ANR	883849	IfStatement	if ( event )		883811	4					
ANR	883850	Condition	event	105:4:3591:3595	883811	0	True				
ANR	883851	Identifier	event		883811	0					
ANR	883852	ExpressionStatement	event -> initFromClassAd ( ad )	105:11:3598:3624	883811	1	True				
ANR	883853	CallExpression	event -> initFromClassAd ( ad )		883811	0					
ANR	883854	Callee	event -> initFromClassAd		883811	0					
ANR	883855	PtrMemberAccess	event -> initFromClassAd		883811	0					
ANR	883856	Identifier	event		883811	0					
ANR	883857	Identifier	initFromClassAd		883811	1					
ANR	883858	ArgumentList	ad		883811	1					
ANR	883859	Argument	ad		883811	0					
ANR	883860	Identifier	ad		883811	0					
ANR	883861	ReturnStatement	return event ;	106:1:3627:3639	883811	5	True				
ANR	883862	Identifier	event		883811	0					
ANR	883863	ReturnType	ULogEvent *		883811	1					
ANR	883864	Identifier	instantiateEvent		883811	2					
ANR	883865	ParameterList	ClassAd * ad		883811	3					
ANR	883866	Parameter	ClassAd * ad	98:18:3409:3419	883811	0	True				
ANR	883867	ParameterType	ClassAd *		883811	0					
ANR	883868	Identifier	ad		883811	1					
ANR	883869	CFGEntryNode	ENTRY		883811		True				
ANR	883870	CFGExitNode	EXIT		883811		True				
ANR	883871	Symbol	ad		883811						
ANR	883872	Symbol	NULL		883811						
ANR	883873	Symbol	eventNumber		883811						
ANR	883874	Symbol	* ad		883811						
ANR	883875	Symbol	ad -> LookupInteger		883811						
ANR	883876	Symbol	instantiateEvent		883811						
ANR	883877	Symbol	event		883811						
ANR	883878	Function	instantiateEvent	109:0:3644:5909							
ANR	883879	FunctionDef	instantiateEvent (ULogEventNumber event)		883878	0					
ANR	883880	CompoundStatement		111:0:3697:5909	883878	0					
ANR	883881	SwitchStatement	switch ( event )		883878	0					
ANR	883882	Condition	event	112:9:3708:3712	883878	0	True				
ANR	883883	Identifier	event		883878	0					
ANR	883884	CompoundStatement		3:1:18:18	883878	1					
ANR	883885	Label	case ULOG_SUBMIT :	114:3:3721:3737	883878	0	True				
ANR	883886	Identifier	ULOG_SUBMIT		883878	0					
ANR	883887	Statement	return	115:2:3741:3746	883878	1	True				
ANR	883888	Statement	new	115:9:3748:3750	883878	2	True				
ANR	883889	ExpressionStatement	SubmitEvent	115:13:3752:3763	883878	3	True				
ANR	883890	Identifier	SubmitEvent		883878	0					
ANR	883891	Label	case ULOG_EXECUTE :	117:3:3769:3786	883878	4	True				
ANR	883892	Identifier	ULOG_EXECUTE		883878	0					
ANR	883893	Statement	return	118:2:3790:3795	883878	5	True				
ANR	883894	Statement	new	118:9:3797:3799	883878	6	True				
ANR	883895	ExpressionStatement	ExecuteEvent	118:13:3801:3813	883878	7	True				
ANR	883896	Identifier	ExecuteEvent		883878	0					
ANR	883897	Label	case ULOG_EXECUTABLE_ERROR :	120:3:3819:3845	883878	8	True				
ANR	883898	Identifier	ULOG_EXECUTABLE_ERROR		883878	0					
ANR	883899	Statement	return	121:2:3849:3854	883878	9	True				
ANR	883900	Statement	new	121:9:3856:3858	883878	10	True				
ANR	883901	ExpressionStatement	ExecutableErrorEvent	121:13:3860:3880	883878	11	True				
ANR	883902	Identifier	ExecutableErrorEvent		883878	0					
ANR	883903	Label	case ULOG_CHECKPOINTED :	123:3:3886:3908	883878	12	True				
ANR	883904	Identifier	ULOG_CHECKPOINTED		883878	0					
ANR	883905	Statement	return	124:2:3912:3917	883878	13	True				
ANR	883906	Statement	new	124:9:3919:3921	883878	14	True				
ANR	883907	ExpressionStatement	CheckpointedEvent	124:13:3923:3940	883878	15	True				
ANR	883908	Identifier	CheckpointedEvent		883878	0					
ANR	883909	Label	case ULOG_JOB_EVICTED :	126:3:3946:3967	883878	16	True				
ANR	883910	Identifier	ULOG_JOB_EVICTED		883878	0					
ANR	883911	Statement	return	127:2:3971:3976	883878	17	True				
ANR	883912	Statement	new	127:9:3978:3980	883878	18	True				
ANR	883913	ExpressionStatement	JobEvictedEvent	127:13:3982:3997	883878	19	True				
ANR	883914	Identifier	JobEvictedEvent		883878	0					
ANR	883915	Label	case ULOG_JOB_TERMINATED :	129:3:4003:4027	883878	20	True				
ANR	883916	Identifier	ULOG_JOB_TERMINATED		883878	0					
ANR	883917	Statement	return	130:2:4031:4036	883878	21	True				
ANR	883918	Statement	new	130:9:4038:4040	883878	22	True				
ANR	883919	ExpressionStatement	JobTerminatedEvent	130:13:4042:4060	883878	23	True				
ANR	883920	Identifier	JobTerminatedEvent		883878	0					
ANR	883921	Label	case ULOG_IMAGE_SIZE :	132:3:4066:4086	883878	24	True				
ANR	883922	Identifier	ULOG_IMAGE_SIZE		883878	0					
ANR	883923	Statement	return	133:2:4090:4095	883878	25	True				
ANR	883924	Statement	new	133:9:4097:4099	883878	26	True				
ANR	883925	ExpressionStatement	JobImageSizeEvent	133:13:4101:4118	883878	27	True				
ANR	883926	Identifier	JobImageSizeEvent		883878	0					
ANR	883927	Label	case ULOG_SHADOW_EXCEPTION :	135:3:4124:4150	883878	28	True				
ANR	883928	Identifier	ULOG_SHADOW_EXCEPTION		883878	0					
ANR	883929	Statement	return	136:2:4154:4159	883878	29	True				
ANR	883930	Statement	new	136:9:4161:4163	883878	30	True				
ANR	883931	ExpressionStatement	ShadowExceptionEvent	136:13:4165:4185	883878	31	True				
ANR	883932	Identifier	ShadowExceptionEvent		883878	0					
ANR	883933	Label	case ULOG_GENERIC :	138:3:4191:4208	883878	32	True				
ANR	883934	Identifier	ULOG_GENERIC		883878	0					
ANR	883935	Statement	return	139:2:4212:4217	883878	33	True				
ANR	883936	Statement	new	139:9:4219:4221	883878	34	True				
ANR	883937	ExpressionStatement	GenericEvent	139:13:4223:4235	883878	35	True				
ANR	883938	Identifier	GenericEvent		883878	0					
ANR	883939	Label	case ULOG_JOB_ABORTED :	141:3:4241:4262	883878	36	True				
ANR	883940	Identifier	ULOG_JOB_ABORTED		883878	0					
ANR	883941	Statement	return	142:2:4266:4271	883878	37	True				
ANR	883942	Statement	new	142:9:4273:4275	883878	38	True				
ANR	883943	ExpressionStatement	JobAbortedEvent	142:13:4277:4292	883878	39	True				
ANR	883944	Identifier	JobAbortedEvent		883878	0					
ANR	883945	Label	case ULOG_JOB_SUSPENDED :	144:3:4298:4321	883878	40	True				
ANR	883946	Identifier	ULOG_JOB_SUSPENDED		883878	0					
ANR	883947	Statement	return	145:2:4325:4330	883878	41	True				
ANR	883948	Statement	new	145:9:4332:4334	883878	42	True				
ANR	883949	ExpressionStatement	JobSuspendedEvent	145:13:4336:4353	883878	43	True				
ANR	883950	Identifier	JobSuspendedEvent		883878	0					
ANR	883951	Label	case ULOG_JOB_UNSUSPENDED :	147:3:4359:4384	883878	44	True				
ANR	883952	Identifier	ULOG_JOB_UNSUSPENDED		883878	0					
ANR	883953	Statement	return	148:2:4388:4393	883878	45	True				
ANR	883954	Statement	new	148:9:4395:4397	883878	46	True				
ANR	883955	ExpressionStatement	JobUnsuspendedEvent	148:13:4399:4418	883878	47	True				
ANR	883956	Identifier	JobUnsuspendedEvent		883878	0					
ANR	883957	Label	case ULOG_JOB_HELD :	150:3:4424:4442	883878	48	True				
ANR	883958	Identifier	ULOG_JOB_HELD		883878	0					
ANR	883959	Statement	return	151:2:4446:4451	883878	49	True				
ANR	883960	Statement	new	151:9:4453:4455	883878	50	True				
ANR	883961	ExpressionStatement	JobHeldEvent	151:13:4457:4469	883878	51	True				
ANR	883962	Identifier	JobHeldEvent		883878	0					
ANR	883963	Label	case ULOG_JOB_RELEASED :	153:3:4475:4497	883878	52	True				
ANR	883964	Identifier	ULOG_JOB_RELEASED		883878	0					
ANR	883965	Statement	return	154:2:4501:4506	883878	53	True				
ANR	883966	Statement	new	154:9:4508:4510	883878	54	True				
ANR	883967	ExpressionStatement	JobReleasedEvent	154:13:4512:4528	883878	55	True				
ANR	883968	Identifier	JobReleasedEvent		883878	0					
ANR	883969	Label	case ULOG_NODE_EXECUTE :	156:3:4534:4556	883878	56	True				
ANR	883970	Identifier	ULOG_NODE_EXECUTE		883878	0					
ANR	883971	Statement	return	157:2:4560:4565	883878	57	True				
ANR	883972	Statement	new	157:9:4567:4569	883878	58	True				
ANR	883973	ExpressionStatement	NodeExecuteEvent	157:13:4571:4587	883878	59	True				
ANR	883974	Identifier	NodeExecuteEvent		883878	0					
ANR	883975	Label	case ULOG_NODE_TERMINATED :	159:3:4593:4618	883878	60	True				
ANR	883976	Identifier	ULOG_NODE_TERMINATED		883878	0					
ANR	883977	Statement	return	160:2:4622:4627	883878	61	True				
ANR	883978	Statement	new	160:9:4629:4631	883878	62	True				
ANR	883979	ExpressionStatement	NodeTerminatedEvent	160:13:4633:4652	883878	63	True				
ANR	883980	Identifier	NodeTerminatedEvent		883878	0					
ANR	883981	Label	case ULOG_POST_SCRIPT_TERMINATED :	162:3:4658:4690	883878	64	True				
ANR	883982	Identifier	ULOG_POST_SCRIPT_TERMINATED		883878	0					
ANR	883983	Statement	return	163:2:4694:4699	883878	65	True				
ANR	883984	Statement	new	163:9:4701:4703	883878	66	True				
ANR	883985	ExpressionStatement	PostScriptTerminatedEvent	163:13:4705:4730	883878	67	True				
ANR	883986	Identifier	PostScriptTerminatedEvent		883878	0					
ANR	883987	Label	case ULOG_GLOBUS_SUBMIT :	165:3:4736:4759	883878	68	True				
ANR	883988	Identifier	ULOG_GLOBUS_SUBMIT		883878	0					
ANR	883989	Statement	return	166:2:4763:4768	883878	69	True				
ANR	883990	Statement	new	166:9:4770:4772	883878	70	True				
ANR	883991	ExpressionStatement	GlobusSubmitEvent	166:13:4774:4791	883878	71	True				
ANR	883992	Identifier	GlobusSubmitEvent		883878	0					
ANR	883993	Label	case ULOG_GLOBUS_SUBMIT_FAILED :	168:3:4797:4827	883878	72	True				
ANR	883994	Identifier	ULOG_GLOBUS_SUBMIT_FAILED		883878	0					
ANR	883995	Statement	return	169:2:4831:4836	883878	73	True				
ANR	883996	Statement	new	169:9:4838:4840	883878	74	True				
ANR	883997	ExpressionStatement	GlobusSubmitFailedEvent	169:13:4842:4865	883878	75	True				
ANR	883998	Identifier	GlobusSubmitFailedEvent		883878	0					
ANR	883999	Label	case ULOG_GLOBUS_RESOURCE_DOWN :	171:3:4871:4901	883878	76	True				
ANR	884000	Identifier	ULOG_GLOBUS_RESOURCE_DOWN		883878	0					
ANR	884001	Statement	return	172:2:4905:4910	883878	77	True				
ANR	884002	Statement	new	172:9:4912:4914	883878	78	True				
ANR	884003	ExpressionStatement	GlobusResourceDownEvent	172:13:4916:4939	883878	79	True				
ANR	884004	Identifier	GlobusResourceDownEvent		883878	0					
ANR	884005	Label	case ULOG_GLOBUS_RESOURCE_UP :	174:3:4945:4973	883878	80	True				
ANR	884006	Identifier	ULOG_GLOBUS_RESOURCE_UP		883878	0					
ANR	884007	Statement	return	175:2:4977:4982	883878	81	True				
ANR	884008	Statement	new	175:9:4984:4986	883878	82	True				
ANR	884009	ExpressionStatement	GlobusResourceUpEvent	175:13:4988:5009	883878	83	True				
ANR	884010	Identifier	GlobusResourceUpEvent		883878	0					
ANR	884011	Label	case ULOG_REMOTE_ERROR :	177:1:5013:5035	883878	84	True				
ANR	884012	Identifier	ULOG_REMOTE_ERROR		883878	0					
ANR	884013	Statement	return	178:2:5039:5044	883878	85	True				
ANR	884014	Statement	new	178:9:5046:5048	883878	86	True				
ANR	884015	ExpressionStatement	RemoteErrorEvent	178:13:5050:5066	883878	87	True				
ANR	884016	Identifier	RemoteErrorEvent		883878	0					
ANR	884017	Label	case ULOG_JOB_DISCONNECTED :	180:1:5070:5096	883878	88	True				
ANR	884018	Identifier	ULOG_JOB_DISCONNECTED		883878	0					
ANR	884019	Statement	return	181:2:5100:5105	883878	89	True				
ANR	884020	Statement	new	181:9:5107:5109	883878	90	True				
ANR	884021	ExpressionStatement	JobDisconnectedEvent	181:13:5111:5131	883878	91	True				
ANR	884022	Identifier	JobDisconnectedEvent		883878	0					
ANR	884023	Label	case ULOG_JOB_RECONNECTED :	183:1:5135:5160	883878	92	True				
ANR	884024	Identifier	ULOG_JOB_RECONNECTED		883878	0					
ANR	884025	Statement	return	184:2:5164:5169	883878	93	True				
ANR	884026	Statement	new	184:9:5171:5173	883878	94	True				
ANR	884027	ExpressionStatement	JobReconnectedEvent	184:13:5175:5194	883878	95	True				
ANR	884028	Identifier	JobReconnectedEvent		883878	0					
ANR	884029	Label	case ULOG_JOB_RECONNECT_FAILED :	186:1:5198:5228	883878	96	True				
ANR	884030	Identifier	ULOG_JOB_RECONNECT_FAILED		883878	0					
ANR	884031	Statement	return	187:2:5232:5237	883878	97	True				
ANR	884032	Statement	new	187:9:5239:5241	883878	98	True				
ANR	884033	ExpressionStatement	JobReconnectFailedEvent	187:13:5243:5266	883878	99	True				
ANR	884034	Identifier	JobReconnectFailedEvent		883878	0					
ANR	884035	Label	case ULOG_GRID_RESOURCE_DOWN :	189:1:5270:5298	883878	100	True				
ANR	884036	Identifier	ULOG_GRID_RESOURCE_DOWN		883878	0					
ANR	884037	Statement	return	190:2:5302:5307	883878	101	True				
ANR	884038	Statement	new	190:9:5309:5311	883878	102	True				
ANR	884039	ExpressionStatement	GridResourceDownEvent	190:13:5313:5334	883878	103	True				
ANR	884040	Identifier	GridResourceDownEvent		883878	0					
ANR	884041	Label	case ULOG_GRID_RESOURCE_UP :	192:1:5338:5364	883878	104	True				
ANR	884042	Identifier	ULOG_GRID_RESOURCE_UP		883878	0					
ANR	884043	Statement	return	193:2:5368:5373	883878	105	True				
ANR	884044	Statement	new	193:9:5375:5377	883878	106	True				
ANR	884045	ExpressionStatement	GridResourceUpEvent	193:13:5379:5398	883878	107	True				
ANR	884046	Identifier	GridResourceUpEvent		883878	0					
ANR	884047	Label	case ULOG_GRID_SUBMIT :	195:1:5402:5423	883878	108	True				
ANR	884048	Identifier	ULOG_GRID_SUBMIT		883878	0					
ANR	884049	Statement	return	196:2:5427:5432	883878	109	True				
ANR	884050	Statement	new	196:9:5434:5436	883878	110	True				
ANR	884051	ExpressionStatement	GridSubmitEvent	196:13:5438:5453	883878	111	True				
ANR	884052	Identifier	GridSubmitEvent		883878	0					
ANR	884053	Label	case ULOG_JOB_AD_INFORMATION :	198:1:5457:5485	883878	112	True				
ANR	884054	Identifier	ULOG_JOB_AD_INFORMATION		883878	0					
ANR	884055	Statement	return	199:2:5489:5494	883878	113	True				
ANR	884056	Statement	new	199:9:5496:5498	883878	114	True				
ANR	884057	ExpressionStatement	JobAdInformationEvent	199:13:5500:5521	883878	115	True				
ANR	884058	Identifier	JobAdInformationEvent		883878	0					
ANR	884059	Label	case ULOG_JOB_STATUS_UNKNOWN :	201:1:5525:5553	883878	116	True				
ANR	884060	Identifier	ULOG_JOB_STATUS_UNKNOWN		883878	0					
ANR	884061	Statement	return	202:2:5557:5562	883878	117	True				
ANR	884062	Statement	new	202:9:5564:5566	883878	118	True				
ANR	884063	ExpressionStatement	JobStatusUnknownEvent	202:13:5568:5589	883878	119	True				
ANR	884064	Identifier	JobStatusUnknownEvent		883878	0					
ANR	884065	Label	case ULOG_JOB_STATUS_KNOWN :	204:1:5593:5619	883878	120	True				
ANR	884066	Identifier	ULOG_JOB_STATUS_KNOWN		883878	0					
ANR	884067	Statement	return	205:2:5623:5628	883878	121	True				
ANR	884068	Statement	new	205:9:5630:5632	883878	122	True				
ANR	884069	ExpressionStatement	JobStatusKnownEvent	205:13:5634:5653	883878	123	True				
ANR	884070	Identifier	JobStatusKnownEvent		883878	0					
ANR	884071	Label	case ULOG_ATTRIBUTE_UPDATE :	207:1:5657:5683	883878	124	True				
ANR	884072	Identifier	ULOG_ATTRIBUTE_UPDATE		883878	0					
ANR	884073	Statement	return	208:2:5687:5692	883878	125	True				
ANR	884074	Statement	new	208:9:5694:5696	883878	126	True				
ANR	884075	ExpressionStatement	AttributeUpdate	208:13:5698:5713	883878	127	True				
ANR	884076	Identifier	AttributeUpdate		883878	0					
ANR	884077	Label	default :	210:1:5717:5724	883878	128	True				
ANR	884078	Identifier	default		883878	0					
ANR	884079	ExpressionStatement	"dprintf ( D_ALWAYS , ""Invalid ULogEventNumber: %d\\n"" , event )"	211:2:5728:5787	883878	129	True				
ANR	884080	CallExpression	"dprintf ( D_ALWAYS , ""Invalid ULogEventNumber: %d\\n"" , event )"		883878	0					
ANR	884081	Callee	dprintf		883878	0					
ANR	884082	Identifier	dprintf		883878	0					
ANR	884083	ArgumentList	D_ALWAYS		883878	1					
ANR	884084	Argument	D_ALWAYS		883878	0					
ANR	884085	Identifier	D_ALWAYS		883878	0					
ANR	884086	Argument	"""Invalid ULogEventNumber: %d\\n"""		883878	1					
ANR	884087	PrimaryExpression	"""Invalid ULogEventNumber: %d\\n"""		883878	0					
ANR	884088	Argument	event		883878	2					
ANR	884089	Identifier	event		883878	0					
ANR	884090	ReturnStatement	return 0 ;	214:2:5881:5889	883878	130	True				
ANR	884091	PrimaryExpression	0		883878	0					
ANR	884092	ReturnStatement	return 0 ;	217:4:5899:5907	883878	1	True				
ANR	884093	PrimaryExpression	0		883878	0					
ANR	884094	ReturnType	ULogEvent *		883878	1					
ANR	884095	Identifier	instantiateEvent		883878	2					
ANR	884096	ParameterList	ULogEventNumber event		883878	3					
ANR	884097	Parameter	ULogEventNumber event	110:18:3674:3694	883878	0	True				
ANR	884098	ParameterType	ULogEventNumber		883878	0					
ANR	884099	Identifier	event		883878	1					
ANR	884100	CFGEntryNode	ENTRY		883878		True				
ANR	884101	CFGExitNode	EXIT		883878		True				
ANR	884102	Symbol	D_ALWAYS		883878						
ANR	884103	Symbol	event		883878						
ANR	884104	Function	ULogEvent :: ULogEvent	221:0:5913:6163							
ANR	884105	FunctionDef	ULogEvent :: ULogEvent ()		884104	0					
ANR	884106	CompoundStatement		222:0:5940:6163	884104	0					
ANR	884107	IdentifierDeclStatement	struct tm * tm ;	223:1:5943:5956	884104	0	True				
ANR	884108	IdentifierDecl	* tm		884104	0					
ANR	884109	IdentifierDeclType	struct tm *		884104	0					
ANR	884110	Identifier	tm		884104	1					
ANR	884111	ExpressionStatement	eventNumber = ( ULogEventNumber ) - 1	225:1:5960:5995	884104	1	True				
ANR	884112	AssignmentExpression	eventNumber = ( ULogEventNumber ) - 1		884104	0		=			
ANR	884113	Identifier	eventNumber		884104	0					
ANR	884114	CastExpression	( ULogEventNumber ) - 1		884104	1					
ANR	884115	CastTarget	ULogEventNumber		884104	0					
ANR	884116	UnaryOperationExpression	- 1		884104	1					
ANR	884117	UnaryOperator	-		884104	0					
ANR	884118	PrimaryExpression	1		884104	1					
ANR	884119	ExpressionStatement	cluster = proc = subproc = - 1	226:1:5998:6027	884104	2	True				
ANR	884120	AssignmentExpression	cluster = proc = subproc = - 1		884104	0		=			
ANR	884121	Identifier	cluster		884104	0					
ANR	884122	AssignmentExpression	proc = subproc = - 1		884104	1		=			
ANR	884123	Identifier	proc		884104	0					
ANR	884124	AssignmentExpression	subproc = - 1		884104	1		=			
ANR	884125	Identifier	subproc		884104	0					
ANR	884126	UnaryOperationExpression	- 1		884104	1					
ANR	884127	UnaryOperator	-		884104	0					
ANR	884128	PrimaryExpression	1		884104	1					
ANR	884129	ExpressionStatement	( void ) time ( ( time_t * ) & eventclock )	228:1:6031:6066	884104	3	True				
ANR	884130	CastExpression	( void ) time ( ( time_t * ) & eventclock )		884104	0					
ANR	884131	CastTarget	void		884104	0					
ANR	884132	CallExpression	time ( ( time_t * ) & eventclock )		884104	1					
ANR	884133	Callee	time		884104	0					
ANR	884134	Identifier	time		884104	0					
ANR	884135	ArgumentList	( time_t * ) & eventclock		884104	1					
ANR	884136	Argument	( time_t * ) & eventclock		884104	0					
ANR	884137	CastExpression	( time_t * ) & eventclock		884104	0					
ANR	884138	CastTarget	time_t *		884104	0					
ANR	884139	UnaryOperationExpression	& eventclock		884104	1					
ANR	884140	UnaryOperator	&		884104	0					
ANR	884141	Identifier	eventclock		884104	1					
ANR	884142	ExpressionStatement	tm = localtime ( ( time_t * ) & eventclock )	229:1:6069:6107	884104	4	True				
ANR	884143	AssignmentExpression	tm = localtime ( ( time_t * ) & eventclock )		884104	0		=			
ANR	884144	Identifier	tm		884104	0					
ANR	884145	CallExpression	localtime ( ( time_t * ) & eventclock )		884104	1					
ANR	884146	Callee	localtime		884104	0					
ANR	884147	Identifier	localtime		884104	0					
ANR	884148	ArgumentList	( time_t * ) & eventclock		884104	1					
ANR	884149	Argument	( time_t * ) & eventclock		884104	0					
ANR	884150	CastExpression	( time_t * ) & eventclock		884104	0					
ANR	884151	CastTarget	time_t *		884104	0					
ANR	884152	UnaryOperationExpression	& eventclock		884104	1					
ANR	884153	UnaryOperator	&		884104	0					
ANR	884154	Identifier	eventclock		884104	1					
ANR	884155	ExpressionStatement	eventTime = * tm	230:1:6110:6125	884104	5	True				
ANR	884156	AssignmentExpression	eventTime = * tm		884104	0		=			
ANR	884157	Identifier	eventTime		884104	0					
ANR	884158	UnaryOperationExpression	* tm		884104	1					
ANR	884159	UnaryOperator	*		884104	0					
ANR	884160	Identifier	tm		884104	1					
ANR	884161	ExpressionStatement	scheddname = NULL	231:1:6128:6145	884104	6	True				
ANR	884162	AssignmentExpression	scheddname = NULL		884104	0		=			
ANR	884163	Identifier	scheddname		884104	0					
ANR	884164	Identifier	NULL		884104	1					
ANR	884165	ExpressionStatement	m_gjid = NULL	232:1:6148:6161	884104	7	True				
ANR	884166	AssignmentExpression	m_gjid = NULL		884104	0		=			
ANR	884167	Identifier	m_gjid		884104	0					
ANR	884168	Identifier	NULL		884104	1					
ANR	884169	Identifier	ULogEvent :: ULogEvent		884104	1					
ANR	884170	ParameterList			884104	2					
ANR	884171	CFGEntryNode	ENTRY		884104		True				
ANR	884172	CFGExitNode	EXIT		884104		True				
ANR	884173	Symbol	localtime		884104						
ANR	884174	Symbol	cluster		884104						
ANR	884175	Symbol	proc		884104						
ANR	884176	Symbol	NULL		884104						
ANR	884177	Symbol	eventNumber		884104						
ANR	884178	Symbol	scheddname		884104						
ANR	884179	Symbol	eventTime		884104						
ANR	884180	Symbol	tm		884104						
ANR	884181	Symbol	subproc		884104						
ANR	884182	Symbol	& eventclock		884104						
ANR	884183	Symbol	m_gjid		884104						
ANR	884184	Symbol	* tm		884104						
ANR	884185	Function	ULogEvent :: ~ULogEvent	236:0:6167:6198							
ANR	884186	FunctionDef	ULogEvent :: ~ULogEvent ()		884185	0					
ANR	884187	CompoundStatement		237:0:6196:6198	884185	0					
ANR	884188	Identifier	ULogEvent :: ~ULogEvent		884185	1					
ANR	884189	ParameterList			884185	2					
ANR	884190	CFGEntryNode	ENTRY		884185		True				
ANR	884191	CFGExitNode	EXIT		884185		True				
ANR	884192	Function	ULogEvent :: getEvent	241:0:6202:6393							
ANR	884193	FunctionDef	ULogEvent :: getEvent (FILE * file)		884192	0					
ANR	884194	CompoundStatement		242:0:6239:6393	884192	0					
ANR	884195	IfStatement	if ( ! file )		884192	0					
ANR	884196	Condition	! file	243:5:6246:6250	884192	0	True				
ANR	884197	UnaryOperationExpression	! file		884192	0					
ANR	884198	UnaryOperator	!		884192	0					
ANR	884199	Identifier	file		884192	1					
ANR	884200	CompoundStatement		2:13:14:14	884192	1					
ANR	884201	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: file == NULL in ULogEvent::getEvent()\\n"" )"	244:2:6258:6327	884192	0	True				
ANR	884202	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: file == NULL in ULogEvent::getEvent()\\n"" )"		884192	0					
ANR	884203	Callee	dprintf		884192	0					
ANR	884204	Identifier	dprintf		884192	0					
ANR	884205	ArgumentList	D_ALWAYS		884192	1					
ANR	884206	Argument	D_ALWAYS		884192	0					
ANR	884207	Identifier	D_ALWAYS		884192	0					
ANR	884208	Argument	"""ERROR: file == NULL in ULogEvent::getEvent()\\n"""		884192	1					
ANR	884209	PrimaryExpression	"""ERROR: file == NULL in ULogEvent::getEvent()\\n"""		884192	0					
ANR	884210	ReturnStatement	return 0 ;	245:2:6331:6339	884192	1	True				
ANR	884211	PrimaryExpression	0		884192	0					
ANR	884212	ReturnStatement	return ( readHeader ( file ) && readEvent ( file ) ) ;	247:1:6345:6391	884192	1	True				
ANR	884213	AndExpression	readHeader ( file ) && readEvent ( file )		884192	0		&&			
ANR	884214	CallExpression	readHeader ( file )		884192	0					
ANR	884215	Callee	readHeader		884192	0					
ANR	884216	Identifier	readHeader		884192	0					
ANR	884217	ArgumentList	file		884192	1					
ANR	884218	Argument	file		884192	0					
ANR	884219	Identifier	file		884192	0					
ANR	884220	CallExpression	readEvent ( file )		884192	1					
ANR	884221	Callee	readEvent		884192	0					
ANR	884222	Identifier	readEvent		884192	0					
ANR	884223	ArgumentList	file		884192	1					
ANR	884224	Argument	file		884192	0					
ANR	884225	Identifier	file		884192	0					
ANR	884226	ReturnType	int		884192	1					
ANR	884227	Identifier	ULogEvent :: getEvent		884192	2					
ANR	884228	ParameterList	FILE * file		884192	3					
ANR	884229	Parameter	FILE * file	241:25:6227:6236	884192	0	True				
ANR	884230	ParameterType	FILE *		884192	0					
ANR	884231	Identifier	file		884192	1					
ANR	884232	CFGEntryNode	ENTRY		884192		True				
ANR	884233	CFGExitNode	EXIT		884192		True				
ANR	884234	Symbol	readEvent		884192						
ANR	884235	Symbol	file		884192						
ANR	884236	Symbol	D_ALWAYS		884192						
ANR	884237	Symbol	readHeader		884192						
ANR	884238	Function	ULogEvent :: putEvent	251:0:6397:6590							
ANR	884239	FunctionDef	ULogEvent :: putEvent (FILE * file)		884238	0					
ANR	884240	CompoundStatement		252:0:6434:6590	884238	0					
ANR	884241	IfStatement	if ( ! file )		884238	0					
ANR	884242	Condition	! file	253:5:6441:6445	884238	0	True				
ANR	884243	UnaryOperationExpression	! file		884238	0					
ANR	884244	UnaryOperator	!		884238	0					
ANR	884245	Identifier	file		884238	1					
ANR	884246	CompoundStatement		2:13:14:14	884238	1					
ANR	884247	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: file == NULL in ULogEvent::putEvent()\\n"" )"	254:2:6453:6522	884238	0	True				
ANR	884248	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: file == NULL in ULogEvent::putEvent()\\n"" )"		884238	0					
ANR	884249	Callee	dprintf		884238	0					
ANR	884250	Identifier	dprintf		884238	0					
ANR	884251	ArgumentList	D_ALWAYS		884238	1					
ANR	884252	Argument	D_ALWAYS		884238	0					
ANR	884253	Identifier	D_ALWAYS		884238	0					
ANR	884254	Argument	"""ERROR: file == NULL in ULogEvent::putEvent()\\n"""		884238	1					
ANR	884255	PrimaryExpression	"""ERROR: file == NULL in ULogEvent::putEvent()\\n"""		884238	0					
ANR	884256	ReturnStatement	return 0 ;	255:2:6526:6534	884238	1	True				
ANR	884257	PrimaryExpression	0		884238	0					
ANR	884258	ReturnStatement	return ( writeHeader ( file ) && writeEvent ( file ) ) ;	257:1:6540:6588	884238	1	True				
ANR	884259	AndExpression	writeHeader ( file ) && writeEvent ( file )		884238	0		&&			
ANR	884260	CallExpression	writeHeader ( file )		884238	0					
ANR	884261	Callee	writeHeader		884238	0					
ANR	884262	Identifier	writeHeader		884238	0					
ANR	884263	ArgumentList	file		884238	1					
ANR	884264	Argument	file		884238	0					
ANR	884265	Identifier	file		884238	0					
ANR	884266	CallExpression	writeEvent ( file )		884238	1					
ANR	884267	Callee	writeEvent		884238	0					
ANR	884268	Identifier	writeEvent		884238	0					
ANR	884269	ArgumentList	file		884238	1					
ANR	884270	Argument	file		884238	0					
ANR	884271	Identifier	file		884238	0					
ANR	884272	ReturnType	int		884238	1					
ANR	884273	Identifier	ULogEvent :: putEvent		884238	2					
ANR	884274	ParameterList	FILE * file		884238	3					
ANR	884275	Parameter	FILE * file	251:25:6422:6431	884238	0	True				
ANR	884276	ParameterType	FILE *		884238	0					
ANR	884277	Identifier	file		884238	1					
ANR	884278	CFGEntryNode	ENTRY		884238		True				
ANR	884279	CFGExitNode	EXIT		884238		True				
ANR	884280	Symbol	writeHeader		884238						
ANR	884281	Symbol	file		884238						
ANR	884282	Symbol	writeEvent		884238						
ANR	884283	Symbol	D_ALWAYS		884238						
ANR	884284	Function	ULogEvent :: eventName	261:0:6594:6746							
ANR	884285	FunctionDef	ULogEvent :: eventName ()		884284	0					
ANR	884286	CompoundStatement		262:0:6639:6746	884284	0					
ANR	884287	IfStatement	if ( eventNumber == ( ULogEventNumber ) - 1 )		884284	0					
ANR	884288	Condition	eventNumber == ( ULogEventNumber ) - 1	263:5:6646:6679	884284	0	True				
ANR	884289	EqualityExpression	eventNumber == ( ULogEventNumber ) - 1		884284	0		==			
ANR	884290	Identifier	eventNumber		884284	0					
ANR	884291	CastExpression	( ULogEventNumber ) - 1		884284	1					
ANR	884292	CastTarget	ULogEventNumber		884284	0					
ANR	884293	UnaryOperationExpression	- 1		884284	1					
ANR	884294	UnaryOperator	-		884284	0					
ANR	884295	PrimaryExpression	1		884284	1					
ANR	884296	CompoundStatement		2:42:43:43	884284	1					
ANR	884297	ReturnStatement	return NULL ;	264:2:6687:6698	884284	0	True				
ANR	884298	Identifier	NULL		884284	0					
ANR	884299	ReturnStatement	return ULogEventNumberNames [ eventNumber ] ;	266:1:6704:6744	884284	1	True				
ANR	884300	ArrayIndexing	ULogEventNumberNames [ eventNumber ]		884284	0					
ANR	884301	Identifier	ULogEventNumberNames		884284	0					
ANR	884302	Identifier	eventNumber		884284	1					
ANR	884303	ReturnType	const char *		884284	1					
ANR	884304	Identifier	ULogEvent :: eventName		884284	2					
ANR	884305	ParameterList			884284	3					
ANR	884306	CFGEntryNode	ENTRY		884284		True				
ANR	884307	CFGExitNode	EXIT		884284		True				
ANR	884308	Symbol	ULogEventNumberNames		884284						
ANR	884309	Symbol	NULL		884284						
ANR	884310	Symbol	eventNumber		884284						
ANR	884311	Symbol	* eventNumber		884284						
ANR	884312	Symbol	* ULogEventNumberNames		884284						
ANR	884313	Function	ULogEvent :: readHeader	275:0:7072:7547							
ANR	884314	FunctionDef	ULogEvent :: readHeader (FILE * file)		884313	0					
ANR	884315	CompoundStatement		277:0:7111:7547	884313	0					
ANR	884316	IdentifierDeclStatement	int retval ;	278:1:7114:7124	884313	0	True				
ANR	884317	IdentifierDecl	retval		884313	0					
ANR	884318	IdentifierDeclType	int		884313	0					
ANR	884319	Identifier	retval		884313	1					
ANR	884320	ExpressionStatement	"retval = fscanf ( file , "" (%d.%d.%d) %d/%d %d:%d:%d "" , & cluster , & proc , & subproc , & ( eventTime . tm_mon ) , & ( eventTime . tm_mday ) , & ( eventTime . tm_hour ) , & ( eventTime . tm_min ) , & ( eventTime . tm_sec ) )"	281:1:7147:7358	884313	1	True				
ANR	884321	AssignmentExpression	"retval = fscanf ( file , "" (%d.%d.%d) %d/%d %d:%d:%d "" , & cluster , & proc , & subproc , & ( eventTime . tm_mon ) , & ( eventTime . tm_mday ) , & ( eventTime . tm_hour ) , & ( eventTime . tm_min ) , & ( eventTime . tm_sec ) )"		884313	0		=			
ANR	884322	Identifier	retval		884313	0					
ANR	884323	CallExpression	"fscanf ( file , "" (%d.%d.%d) %d/%d %d:%d:%d "" , & cluster , & proc , & subproc , & ( eventTime . tm_mon ) , & ( eventTime . tm_mday ) , & ( eventTime . tm_hour ) , & ( eventTime . tm_min ) , & ( eventTime . tm_sec ) )"		884313	1					
ANR	884324	Callee	fscanf		884313	0					
ANR	884325	Identifier	fscanf		884313	0					
ANR	884326	ArgumentList	file		884313	1					
ANR	884327	Argument	file		884313	0					
ANR	884328	Identifier	file		884313	0					
ANR	884329	Argument	""" (%d.%d.%d) %d/%d %d:%d:%d """		884313	1					
ANR	884330	PrimaryExpression	""" (%d.%d.%d) %d/%d %d:%d:%d """		884313	0					
ANR	884331	Argument	& cluster		884313	2					
ANR	884332	UnaryOperationExpression	& cluster		884313	0					
ANR	884333	UnaryOperator	&		884313	0					
ANR	884334	Identifier	cluster		884313	1					
ANR	884335	Argument	& proc		884313	3					
ANR	884336	UnaryOperationExpression	& proc		884313	0					
ANR	884337	UnaryOperator	&		884313	0					
ANR	884338	Identifier	proc		884313	1					
ANR	884339	Argument	& subproc		884313	4					
ANR	884340	UnaryOperationExpression	& subproc		884313	0					
ANR	884341	UnaryOperator	&		884313	0					
ANR	884342	Identifier	subproc		884313	1					
ANR	884343	Argument	& ( eventTime . tm_mon )		884313	5					
ANR	884344	UnaryOperationExpression	& ( eventTime . tm_mon )		884313	0					
ANR	884345	UnaryOperator	&		884313	0					
ANR	884346	MemberAccess	eventTime . tm_mon		884313	1					
ANR	884347	Identifier	eventTime		884313	0					
ANR	884348	Identifier	tm_mon		884313	1					
ANR	884349	Argument	& ( eventTime . tm_mday )		884313	6					
ANR	884350	UnaryOperationExpression	& ( eventTime . tm_mday )		884313	0					
ANR	884351	UnaryOperator	&		884313	0					
ANR	884352	MemberAccess	eventTime . tm_mday		884313	1					
ANR	884353	Identifier	eventTime		884313	0					
ANR	884354	Identifier	tm_mday		884313	1					
ANR	884355	Argument	& ( eventTime . tm_hour )		884313	7					
ANR	884356	UnaryOperationExpression	& ( eventTime . tm_hour )		884313	0					
ANR	884357	UnaryOperator	&		884313	0					
ANR	884358	MemberAccess	eventTime . tm_hour		884313	1					
ANR	884359	Identifier	eventTime		884313	0					
ANR	884360	Identifier	tm_hour		884313	1					
ANR	884361	Argument	& ( eventTime . tm_min )		884313	8					
ANR	884362	UnaryOperationExpression	& ( eventTime . tm_min )		884313	0					
ANR	884363	UnaryOperator	&		884313	0					
ANR	884364	MemberAccess	eventTime . tm_min		884313	1					
ANR	884365	Identifier	eventTime		884313	0					
ANR	884366	Identifier	tm_min		884313	1					
ANR	884367	Argument	& ( eventTime . tm_sec )		884313	9					
ANR	884368	UnaryOperationExpression	& ( eventTime . tm_sec )		884313	0					
ANR	884369	UnaryOperator	&		884313	0					
ANR	884370	MemberAccess	eventTime . tm_sec		884313	1					
ANR	884371	Identifier	eventTime		884313	0					
ANR	884372	Identifier	tm_sec		884313	1					
ANR	884373	IfStatement	if ( retval != 8 )		884313	2					
ANR	884374	Condition	retval != 8	288:5:7413:7423	884313	0	True				
ANR	884375	EqualityExpression	retval != 8		884313	0		!=			
ANR	884376	Identifier	retval		884313	0					
ANR	884377	PrimaryExpression	8		884313	1					
ANR	884378	CompoundStatement		13:1:315:315	884313	1					
ANR	884379	ReturnStatement	return 0 ;	290:2:7431:7439	884313	0	True				
ANR	884380	PrimaryExpression	0		884313	0					
ANR	884381	ExpressionStatement	eventTime . tm_mon --	294:1:7515:7533	884313	3	True				
ANR	884382	PostIncDecOperationExpression	eventTime . tm_mon --		884313	0					
ANR	884383	MemberAccess	eventTime . tm_mon		884313	0					
ANR	884384	Identifier	eventTime		884313	0					
ANR	884385	Identifier	tm_mon		884313	1					
ANR	884386	IncDec	--		884313	1					
ANR	884387	ReturnStatement	return 1 ;	296:1:7537:7545	884313	4	True				
ANR	884388	PrimaryExpression	1		884313	0					
ANR	884389	ReturnType	int		884313	1					
ANR	884390	Identifier	ULogEvent :: readHeader		884313	2					
ANR	884391	ParameterList	FILE * file		884313	3					
ANR	884392	Parameter	FILE * file	276:23:7099:7108	884313	0	True				
ANR	884393	ParameterType	FILE *		884313	0					
ANR	884394	Identifier	file		884313	1					
ANR	884395	CFGEntryNode	ENTRY		884313		True				
ANR	884396	CFGExitNode	EXIT		884313		True				
ANR	884397	Symbol	& eventTime . tm_hour		884313						
ANR	884398	Symbol	& subproc		884313						
ANR	884399	Symbol	& cluster		884313						
ANR	884400	Symbol	& eventTime		884313						
ANR	884401	Symbol	retval		884313						
ANR	884402	Symbol	& eventTime . tm_min		884313						
ANR	884403	Symbol	& eventTime . tm_sec		884313						
ANR	884404	Symbol	fscanf		884313						
ANR	884405	Symbol	file		884313						
ANR	884406	Symbol	& eventTime . tm_mon		884313						
ANR	884407	Symbol	& eventTime . tm_mday		884313						
ANR	884408	Symbol	eventTime		884313						
ANR	884409	Symbol	eventTime . tm_mon		884313						
ANR	884410	Symbol	& proc		884313						
ANR	884411	Function	ULogEvent :: writeHeader	301:0:7597:8009							
ANR	884412	FunctionDef	ULogEvent :: writeHeader (FILE * file)		884411	0					
ANR	884413	CompoundStatement		303:0:7637:8009	884411	0					
ANR	884414	IdentifierDeclStatement	int retval ;	304:1:7640:7656	884411	0	True				
ANR	884415	IdentifierDecl	retval		884411	0					
ANR	884416	IdentifierDeclType	int		884411	0					
ANR	884417	Identifier	retval		884411	1					
ANR	884418	ExpressionStatement	"retval = fprintf ( file , ""%03d (%03d.%03d.%03d) %02d/%02d %02d:%02d:%02d "" , eventNumber , cluster , proc , subproc , eventTime . tm_mon + 1 , eventTime . tm_mday , eventTime . tm_hour , eventTime . tm_min , eventTime . tm_sec )"	307:1:7677:7910	884411	1	True				
ANR	884419	AssignmentExpression	"retval = fprintf ( file , ""%03d (%03d.%03d.%03d) %02d/%02d %02d:%02d:%02d "" , eventNumber , cluster , proc , subproc , eventTime . tm_mon + 1 , eventTime . tm_mday , eventTime . tm_hour , eventTime . tm_min , eventTime . tm_sec )"		884411	0		=			
ANR	884420	Identifier	retval		884411	0					
ANR	884421	CallExpression	"fprintf ( file , ""%03d (%03d.%03d.%03d) %02d/%02d %02d:%02d:%02d "" , eventNumber , cluster , proc , subproc , eventTime . tm_mon + 1 , eventTime . tm_mday , eventTime . tm_hour , eventTime . tm_min , eventTime . tm_sec )"		884411	1					
ANR	884422	Callee	fprintf		884411	0					
ANR	884423	Identifier	fprintf		884411	0					
ANR	884424	ArgumentList	file		884411	1					
ANR	884425	Argument	file		884411	0					
ANR	884426	Identifier	file		884411	0					
ANR	884427	Argument	"""%03d (%03d.%03d.%03d) %02d/%02d %02d:%02d:%02d """		884411	1					
ANR	884428	PrimaryExpression	"""%03d (%03d.%03d.%03d) %02d/%02d %02d:%02d:%02d """		884411	0					
ANR	884429	Argument	eventNumber		884411	2					
ANR	884430	Identifier	eventNumber		884411	0					
ANR	884431	Argument	cluster		884411	3					
ANR	884432	Identifier	cluster		884411	0					
ANR	884433	Argument	proc		884411	4					
ANR	884434	Identifier	proc		884411	0					
ANR	884435	Argument	subproc		884411	5					
ANR	884436	Identifier	subproc		884411	0					
ANR	884437	Argument	eventTime . tm_mon + 1		884411	6					
ANR	884438	AdditiveExpression	eventTime . tm_mon + 1		884411	0		+			
ANR	884439	MemberAccess	eventTime . tm_mon		884411	0					
ANR	884440	Identifier	eventTime		884411	0					
ANR	884441	Identifier	tm_mon		884411	1					
ANR	884442	PrimaryExpression	1		884411	1					
ANR	884443	Argument	eventTime . tm_mday		884411	7					
ANR	884444	MemberAccess	eventTime . tm_mday		884411	0					
ANR	884445	Identifier	eventTime		884411	0					
ANR	884446	Identifier	tm_mday		884411	1					
ANR	884447	Argument	eventTime . tm_hour		884411	8					
ANR	884448	MemberAccess	eventTime . tm_hour		884411	0					
ANR	884449	Identifier	eventTime		884411	0					
ANR	884450	Identifier	tm_hour		884411	1					
ANR	884451	Argument	eventTime . tm_min		884411	9					
ANR	884452	MemberAccess	eventTime . tm_min		884411	0					
ANR	884453	Identifier	eventTime		884411	0					
ANR	884454	Identifier	tm_min		884411	1					
ANR	884455	Argument	eventTime . tm_sec		884411	10					
ANR	884456	MemberAccess	eventTime . tm_sec		884411	0					
ANR	884457	Identifier	eventTime		884411	0					
ANR	884458	Identifier	tm_sec		884411	1					
ANR	884459	IfStatement	if ( retval < 0 )		884411	2					
ANR	884460	Condition	retval < 0	314:5:7967:7976	884411	0	True				
ANR	884461	RelationalExpression	retval < 0		884411	0		<			
ANR	884462	Identifier	retval		884411	0					
ANR	884463	PrimaryExpression	0		884411	1					
ANR	884464	CompoundStatement		13:1:342:342	884411	1					
ANR	884465	ReturnStatement	return 0 ;	316:2:7984:7992	884411	0	True				
ANR	884466	PrimaryExpression	0		884411	0					
ANR	884467	ReturnStatement	return 1 ;	319:1:7999:8007	884411	3	True				
ANR	884468	PrimaryExpression	1		884411	0					
ANR	884469	ReturnType	int		884411	1					
ANR	884470	Identifier	ULogEvent :: writeHeader		884411	2					
ANR	884471	ParameterList	FILE * file		884411	3					
ANR	884472	Parameter	FILE * file	302:24:7625:7634	884411	0	True				
ANR	884473	ParameterType	FILE *		884411	0					
ANR	884474	Identifier	file		884411	1					
ANR	884475	CFGEntryNode	ENTRY		884411		True				
ANR	884476	CFGExitNode	EXIT		884411		True				
ANR	884477	Symbol	cluster		884411						
ANR	884478	Symbol	proc		884411						
ANR	884479	Symbol	eventNumber		884411						
ANR	884480	Symbol	eventTime . tm_hour		884411						
ANR	884481	Symbol	fprintf		884411						
ANR	884482	Symbol	retval		884411						
ANR	884483	Symbol	file		884411						
ANR	884484	Symbol	eventTime		884411						
ANR	884485	Symbol	eventTime . tm_min		884411						
ANR	884486	Symbol	subproc		884411						
ANR	884487	Symbol	eventTime . tm_sec		884411						
ANR	884488	Symbol	eventTime . tm_mon		884411						
ANR	884489	Symbol	eventTime . tm_mday		884411						
ANR	884490	Function	ULogEvent :: toClassAd	322:0:8012:11659							
ANR	884491	FunctionDef	ULogEvent :: toClassAd ()		884490	0					
ANR	884492	CompoundStatement		324:0:8048:11659	884490	0					
ANR	884493	Statement	ClassAd	325:1:8051:8057	884490	0	True				
ANR	884494	Statement	*	325:8:8058:8058	884490	1	True				
ANR	884495	Statement	myad	325:10:8060:8063	884490	2	True				
ANR	884496	Statement	=	325:15:8065:8065	884490	3	True				
ANR	884497	Statement	new	325:17:8067:8069	884490	4	True				
ANR	884498	ExpressionStatement	ClassAd	325:21:8071:8078	884490	5	True				
ANR	884499	Identifier	ClassAd		884490	0					
ANR	884500	IdentifierDeclStatement	char buf0 [ 128 ] ;	327:1:8082:8096	884490	6	True				
ANR	884501	IdentifierDecl	buf0 [ 128 ]		884490	0					
ANR	884502	IdentifierDeclType	char [ 128 ]		884490	0					
ANR	884503	Identifier	buf0		884490	1					
ANR	884504	PrimaryExpression	128		884490	2					
ANR	884505	IfStatement	if ( eventNumber >= 0 )		884490	7					
ANR	884506	Condition	eventNumber >= 0	329:5:8104:8119	884490	0	True				
ANR	884507	RelationalExpression	eventNumber >= 0		884490	0		>=			
ANR	884508	Identifier	eventNumber		884490	0					
ANR	884509	PrimaryExpression	0		884490	1					
ANR	884510	CompoundStatement		6:24:74:74	884490	1					
ANR	884511	ExpressionStatement	"snprintf ( buf0 , 128 , ""EventTypeNumber = %d"" , eventNumber )"	330:2:8127:8183	884490	0	True				
ANR	884512	CallExpression	"snprintf ( buf0 , 128 , ""EventTypeNumber = %d"" , eventNumber )"		884490	0					
ANR	884513	Callee	snprintf		884490	0					
ANR	884514	Identifier	snprintf		884490	0					
ANR	884515	ArgumentList	buf0		884490	1					
ANR	884516	Argument	buf0		884490	0					
ANR	884517	Identifier	buf0		884490	0					
ANR	884518	Argument	128		884490	1					
ANR	884519	PrimaryExpression	128		884490	0					
ANR	884520	Argument	"""EventTypeNumber = %d"""		884490	2					
ANR	884521	PrimaryExpression	"""EventTypeNumber = %d"""		884490	0					
ANR	884522	Argument	eventNumber		884490	3					
ANR	884523	Identifier	eventNumber		884490	0					
ANR	884524	ExpressionStatement	buf0 [ 127 ] = 0	331:2:8187:8200	884490	1	True				
ANR	884525	AssignmentExpression	buf0 [ 127 ] = 0		884490	0		=			
ANR	884526	ArrayIndexing	buf0 [ 127 ]		884490	0					
ANR	884527	Identifier	buf0		884490	0					
ANR	884528	PrimaryExpression	127		884490	1					
ANR	884529	PrimaryExpression	0		884490	1					
ANR	884530	IfStatement	if ( ! myad -> Insert ( buf0 ) )		884490	2					
ANR	884531	Condition	! myad -> Insert ( buf0 )	332:6:8208:8226	884490	0	True				
ANR	884532	UnaryOperationExpression	! myad -> Insert ( buf0 )		884490	0					
ANR	884533	UnaryOperator	!		884490	0					
ANR	884534	CallExpression	myad -> Insert ( buf0 )		884490	1					
ANR	884535	Callee	myad -> Insert		884490	0					
ANR	884536	PtrMemberAccess	myad -> Insert		884490	0					
ANR	884537	Identifier	myad		884490	0					
ANR	884538	Identifier	Insert		884490	1					
ANR	884539	ArgumentList	buf0		884490	1					
ANR	884540	Argument	buf0		884490	0					
ANR	884541	Identifier	buf0		884490	0					
ANR	884542	ReturnStatement	return NULL ;	332:28:8230:8241	884490	1	True				
ANR	884543	Identifier	NULL		884490	0					
ANR	884544	SwitchStatement	switch ( ( ULogEventNumber ) eventNumber )		884490	8					
ANR	884545	Condition	( ULogEventNumber ) eventNumber	335:9:8256:8284	884490	0	True				
ANR	884546	CastExpression	( ULogEventNumber ) eventNumber		884490	0					
ANR	884547	CastTarget	ULogEventNumber		884490	0					
ANR	884548	Identifier	eventNumber		884490	1					
ANR	884549	CompoundStatement		13:1:240:240	884490	1					
ANR	884550	Label	case ULOG_SUBMIT :	337:3:8294:8310	884490	0	True				
ANR	884551	Identifier	ULOG_SUBMIT		884490	0					
ANR	884552	ExpressionStatement	"myad -> SetMyTypeName ( ""SubmitEvent"" )"	338:2:8314:8348	884490	1	True				
ANR	884553	CallExpression	"myad -> SetMyTypeName ( ""SubmitEvent"" )"		884490	0					
ANR	884554	Callee	myad -> SetMyTypeName		884490	0					
ANR	884555	PtrMemberAccess	myad -> SetMyTypeName		884490	0					
ANR	884556	Identifier	myad		884490	0					
ANR	884557	Identifier	SetMyTypeName		884490	1					
ANR	884558	ArgumentList	"""SubmitEvent"""		884490	1					
ANR	884559	Argument	"""SubmitEvent"""		884490	0					
ANR	884560	PrimaryExpression	"""SubmitEvent"""		884490	0					
ANR	884561	BreakStatement	break ;	339:2:8352:8357	884490	2	True				
ANR	884562	Label	case ULOG_EXECUTE :	340:3:8362:8379	884490	3	True				
ANR	884563	Identifier	ULOG_EXECUTE		884490	0					
ANR	884564	ExpressionStatement	"myad -> SetMyTypeName ( ""ExecuteEvent"" )"	341:2:8383:8418	884490	4	True				
ANR	884565	CallExpression	"myad -> SetMyTypeName ( ""ExecuteEvent"" )"		884490	0					
ANR	884566	Callee	myad -> SetMyTypeName		884490	0					
ANR	884567	PtrMemberAccess	myad -> SetMyTypeName		884490	0					
ANR	884568	Identifier	myad		884490	0					
ANR	884569	Identifier	SetMyTypeName		884490	1					
ANR	884570	ArgumentList	"""ExecuteEvent"""		884490	1					
ANR	884571	Argument	"""ExecuteEvent"""		884490	0					
ANR	884572	PrimaryExpression	"""ExecuteEvent"""		884490	0					
ANR	884573	BreakStatement	break ;	342:2:8422:8427	884490	5	True				
ANR	884574	Label	case ULOG_EXECUTABLE_ERROR :	343:3:8432:8458	884490	6	True				
ANR	884575	Identifier	ULOG_EXECUTABLE_ERROR		884490	0					
ANR	884576	ExpressionStatement	"myad -> SetMyTypeName ( ""ExecutableErrorEvent"" )"	344:2:8462:8505	884490	7	True				
ANR	884577	CallExpression	"myad -> SetMyTypeName ( ""ExecutableErrorEvent"" )"		884490	0					
ANR	884578	Callee	myad -> SetMyTypeName		884490	0					
ANR	884579	PtrMemberAccess	myad -> SetMyTypeName		884490	0					
ANR	884580	Identifier	myad		884490	0					
ANR	884581	Identifier	SetMyTypeName		884490	1					
ANR	884582	ArgumentList	"""ExecutableErrorEvent"""		884490	1					
ANR	884583	Argument	"""ExecutableErrorEvent"""		884490	0					
ANR	884584	PrimaryExpression	"""ExecutableErrorEvent"""		884490	0					
ANR	884585	BreakStatement	break ;	345:2:8509:8514	884490	8	True				
ANR	884586	Label	case ULOG_CHECKPOINTED :	346:3:8519:8541	884490	9	True				
ANR	884587	Identifier	ULOG_CHECKPOINTED		884490	0					
ANR	884588	ExpressionStatement	"myad -> SetMyTypeName ( ""CheckpointedEvent"" )"	347:2:8545:8585	884490	10	True				
ANR	884589	CallExpression	"myad -> SetMyTypeName ( ""CheckpointedEvent"" )"		884490	0					
ANR	884590	Callee	myad -> SetMyTypeName		884490	0					
ANR	884591	PtrMemberAccess	myad -> SetMyTypeName		884490	0					
ANR	884592	Identifier	myad		884490	0					
ANR	884593	Identifier	SetMyTypeName		884490	1					
ANR	884594	ArgumentList	"""CheckpointedEvent"""		884490	1					
ANR	884595	Argument	"""CheckpointedEvent"""		884490	0					
ANR	884596	PrimaryExpression	"""CheckpointedEvent"""		884490	0					
ANR	884597	BreakStatement	break ;	348:2:8589:8594	884490	11	True				
ANR	884598	Label	case ULOG_JOB_EVICTED :	349:3:8599:8620	884490	12	True				
ANR	884599	Identifier	ULOG_JOB_EVICTED		884490	0					
ANR	884600	ExpressionStatement	"myad -> SetMyTypeName ( ""JobEvictedEvent"" )"	350:2:8624:8662	884490	13	True				
ANR	884601	CallExpression	"myad -> SetMyTypeName ( ""JobEvictedEvent"" )"		884490	0					
ANR	884602	Callee	myad -> SetMyTypeName		884490	0					
ANR	884603	PtrMemberAccess	myad -> SetMyTypeName		884490	0					
ANR	884604	Identifier	myad		884490	0					
ANR	884605	Identifier	SetMyTypeName		884490	1					
ANR	884606	ArgumentList	"""JobEvictedEvent"""		884490	1					
ANR	884607	Argument	"""JobEvictedEvent"""		884490	0					
ANR	884608	PrimaryExpression	"""JobEvictedEvent"""		884490	0					
ANR	884609	BreakStatement	break ;	351:2:8666:8671	884490	14	True				
ANR	884610	Label	case ULOG_JOB_TERMINATED :	352:3:8676:8700	884490	15	True				
ANR	884611	Identifier	ULOG_JOB_TERMINATED		884490	0					
ANR	884612	ExpressionStatement	"myad -> SetMyTypeName ( ""JobTerminatedEvent"" )"	353:2:8704:8745	884490	16	True				
ANR	884613	CallExpression	"myad -> SetMyTypeName ( ""JobTerminatedEvent"" )"		884490	0					
ANR	884614	Callee	myad -> SetMyTypeName		884490	0					
ANR	884615	PtrMemberAccess	myad -> SetMyTypeName		884490	0					
ANR	884616	Identifier	myad		884490	0					
ANR	884617	Identifier	SetMyTypeName		884490	1					
ANR	884618	ArgumentList	"""JobTerminatedEvent"""		884490	1					
ANR	884619	Argument	"""JobTerminatedEvent"""		884490	0					
ANR	884620	PrimaryExpression	"""JobTerminatedEvent"""		884490	0					
ANR	884621	BreakStatement	break ;	354:2:8749:8754	884490	17	True				
ANR	884622	Label	case ULOG_IMAGE_SIZE :	355:3:8759:8779	884490	18	True				
ANR	884623	Identifier	ULOG_IMAGE_SIZE		884490	0					
ANR	884624	ExpressionStatement	"myad -> SetMyTypeName ( ""JobImageSizeEvent"" )"	356:2:8783:8823	884490	19	True				
ANR	884625	CallExpression	"myad -> SetMyTypeName ( ""JobImageSizeEvent"" )"		884490	0					
ANR	884626	Callee	myad -> SetMyTypeName		884490	0					
ANR	884627	PtrMemberAccess	myad -> SetMyTypeName		884490	0					
ANR	884628	Identifier	myad		884490	0					
ANR	884629	Identifier	SetMyTypeName		884490	1					
ANR	884630	ArgumentList	"""JobImageSizeEvent"""		884490	1					
ANR	884631	Argument	"""JobImageSizeEvent"""		884490	0					
ANR	884632	PrimaryExpression	"""JobImageSizeEvent"""		884490	0					
ANR	884633	BreakStatement	break ;	357:2:8827:8832	884490	20	True				
ANR	884634	Label	case ULOG_SHADOW_EXCEPTION :	358:3:8837:8863	884490	21	True				
ANR	884635	Identifier	ULOG_SHADOW_EXCEPTION		884490	0					
ANR	884636	ExpressionStatement	"myad -> SetMyTypeName ( ""ShadowExceptionEvent"" )"	359:2:8867:8910	884490	22	True				
ANR	884637	CallExpression	"myad -> SetMyTypeName ( ""ShadowExceptionEvent"" )"		884490	0					
ANR	884638	Callee	myad -> SetMyTypeName		884490	0					
ANR	884639	PtrMemberAccess	myad -> SetMyTypeName		884490	0					
ANR	884640	Identifier	myad		884490	0					
ANR	884641	Identifier	SetMyTypeName		884490	1					
ANR	884642	ArgumentList	"""ShadowExceptionEvent"""		884490	1					
ANR	884643	Argument	"""ShadowExceptionEvent"""		884490	0					
ANR	884644	PrimaryExpression	"""ShadowExceptionEvent"""		884490	0					
ANR	884645	BreakStatement	break ;	360:2:8914:8919	884490	23	True				
ANR	884646	Label	case ULOG_GENERIC :	361:3:8924:8941	884490	24	True				
ANR	884647	Identifier	ULOG_GENERIC		884490	0					
ANR	884648	ExpressionStatement	"myad -> SetMyTypeName ( ""GenericEvent"" )"	362:2:8945:8980	884490	25	True				
ANR	884649	CallExpression	"myad -> SetMyTypeName ( ""GenericEvent"" )"		884490	0					
ANR	884650	Callee	myad -> SetMyTypeName		884490	0					
ANR	884651	PtrMemberAccess	myad -> SetMyTypeName		884490	0					
ANR	884652	Identifier	myad		884490	0					
ANR	884653	Identifier	SetMyTypeName		884490	1					
ANR	884654	ArgumentList	"""GenericEvent"""		884490	1					
ANR	884655	Argument	"""GenericEvent"""		884490	0					
ANR	884656	PrimaryExpression	"""GenericEvent"""		884490	0					
ANR	884657	BreakStatement	break ;	363:2:8984:8989	884490	26	True				
ANR	884658	Label	case ULOG_JOB_ABORTED :	364:3:8994:9015	884490	27	True				
ANR	884659	Identifier	ULOG_JOB_ABORTED		884490	0					
ANR	884660	ExpressionStatement	"myad -> SetMyTypeName ( ""JobAbortedEvent"" )"	365:2:9019:9057	884490	28	True				
ANR	884661	CallExpression	"myad -> SetMyTypeName ( ""JobAbortedEvent"" )"		884490	0					
ANR	884662	Callee	myad -> SetMyTypeName		884490	0					
ANR	884663	PtrMemberAccess	myad -> SetMyTypeName		884490	0					
ANR	884664	Identifier	myad		884490	0					
ANR	884665	Identifier	SetMyTypeName		884490	1					
ANR	884666	ArgumentList	"""JobAbortedEvent"""		884490	1					
ANR	884667	Argument	"""JobAbortedEvent"""		884490	0					
ANR	884668	PrimaryExpression	"""JobAbortedEvent"""		884490	0					
ANR	884669	BreakStatement	break ;	366:2:9061:9066	884490	29	True				
ANR	884670	Label	case ULOG_JOB_SUSPENDED :	367:3:9071:9094	884490	30	True				
ANR	884671	Identifier	ULOG_JOB_SUSPENDED		884490	0					
ANR	884672	ExpressionStatement	"myad -> SetMyTypeName ( ""JobSuspendedEvent"" )"	368:2:9098:9138	884490	31	True				
ANR	884673	CallExpression	"myad -> SetMyTypeName ( ""JobSuspendedEvent"" )"		884490	0					
ANR	884674	Callee	myad -> SetMyTypeName		884490	0					
ANR	884675	PtrMemberAccess	myad -> SetMyTypeName		884490	0					
ANR	884676	Identifier	myad		884490	0					
ANR	884677	Identifier	SetMyTypeName		884490	1					
ANR	884678	ArgumentList	"""JobSuspendedEvent"""		884490	1					
ANR	884679	Argument	"""JobSuspendedEvent"""		884490	0					
ANR	884680	PrimaryExpression	"""JobSuspendedEvent"""		884490	0					
ANR	884681	BreakStatement	break ;	369:2:9142:9147	884490	32	True				
ANR	884682	Label	case ULOG_JOB_UNSUSPENDED :	370:3:9152:9177	884490	33	True				
ANR	884683	Identifier	ULOG_JOB_UNSUSPENDED		884490	0					
ANR	884684	ExpressionStatement	"myad -> SetMyTypeName ( ""JobUnsuspendedEvent"" )"	371:2:9181:9223	884490	34	True				
ANR	884685	CallExpression	"myad -> SetMyTypeName ( ""JobUnsuspendedEvent"" )"		884490	0					
ANR	884686	Callee	myad -> SetMyTypeName		884490	0					
ANR	884687	PtrMemberAccess	myad -> SetMyTypeName		884490	0					
ANR	884688	Identifier	myad		884490	0					
ANR	884689	Identifier	SetMyTypeName		884490	1					
ANR	884690	ArgumentList	"""JobUnsuspendedEvent"""		884490	1					
ANR	884691	Argument	"""JobUnsuspendedEvent"""		884490	0					
ANR	884692	PrimaryExpression	"""JobUnsuspendedEvent"""		884490	0					
ANR	884693	BreakStatement	break ;	372:2:9227:9232	884490	35	True				
ANR	884694	Label	case ULOG_JOB_HELD :	373:3:9237:9255	884490	36	True				
ANR	884695	Identifier	ULOG_JOB_HELD		884490	0					
ANR	884696	ExpressionStatement	"myad -> SetMyTypeName ( ""JobHeldEvent"" )"	374:2:9259:9294	884490	37	True				
ANR	884697	CallExpression	"myad -> SetMyTypeName ( ""JobHeldEvent"" )"		884490	0					
ANR	884698	Callee	myad -> SetMyTypeName		884490	0					
ANR	884699	PtrMemberAccess	myad -> SetMyTypeName		884490	0					
ANR	884700	Identifier	myad		884490	0					
ANR	884701	Identifier	SetMyTypeName		884490	1					
ANR	884702	ArgumentList	"""JobHeldEvent"""		884490	1					
ANR	884703	Argument	"""JobHeldEvent"""		884490	0					
ANR	884704	PrimaryExpression	"""JobHeldEvent"""		884490	0					
ANR	884705	BreakStatement	break ;	375:2:9298:9303	884490	38	True				
ANR	884706	Label	case ULOG_JOB_RELEASED :	376:3:9308:9330	884490	39	True				
ANR	884707	Identifier	ULOG_JOB_RELEASED		884490	0					
ANR	884708	ExpressionStatement	"myad -> SetMyTypeName ( ""JobReleaseEvent"" )"	377:2:9334:9372	884490	40	True				
ANR	884709	CallExpression	"myad -> SetMyTypeName ( ""JobReleaseEvent"" )"		884490	0					
ANR	884710	Callee	myad -> SetMyTypeName		884490	0					
ANR	884711	PtrMemberAccess	myad -> SetMyTypeName		884490	0					
ANR	884712	Identifier	myad		884490	0					
ANR	884713	Identifier	SetMyTypeName		884490	1					
ANR	884714	ArgumentList	"""JobReleaseEvent"""		884490	1					
ANR	884715	Argument	"""JobReleaseEvent"""		884490	0					
ANR	884716	PrimaryExpression	"""JobReleaseEvent"""		884490	0					
ANR	884717	BreakStatement	break ;	378:2:9376:9381	884490	41	True				
ANR	884718	Label	case ULOG_NODE_EXECUTE :	379:3:9386:9408	884490	42	True				
ANR	884719	Identifier	ULOG_NODE_EXECUTE		884490	0					
ANR	884720	ExpressionStatement	"myad -> SetMyTypeName ( ""NodeExecuteEvent"" )"	380:2:9412:9451	884490	43	True				
ANR	884721	CallExpression	"myad -> SetMyTypeName ( ""NodeExecuteEvent"" )"		884490	0					
ANR	884722	Callee	myad -> SetMyTypeName		884490	0					
ANR	884723	PtrMemberAccess	myad -> SetMyTypeName		884490	0					
ANR	884724	Identifier	myad		884490	0					
ANR	884725	Identifier	SetMyTypeName		884490	1					
ANR	884726	ArgumentList	"""NodeExecuteEvent"""		884490	1					
ANR	884727	Argument	"""NodeExecuteEvent"""		884490	0					
ANR	884728	PrimaryExpression	"""NodeExecuteEvent"""		884490	0					
ANR	884729	BreakStatement	break ;	381:2:9455:9460	884490	44	True				
ANR	884730	Label	case ULOG_NODE_TERMINATED :	382:3:9465:9490	884490	45	True				
ANR	884731	Identifier	ULOG_NODE_TERMINATED		884490	0					
ANR	884732	ExpressionStatement	"myad -> SetMyTypeName ( ""NodeTerminatedEvent"" )"	383:2:9494:9536	884490	46	True				
ANR	884733	CallExpression	"myad -> SetMyTypeName ( ""NodeTerminatedEvent"" )"		884490	0					
ANR	884734	Callee	myad -> SetMyTypeName		884490	0					
ANR	884735	PtrMemberAccess	myad -> SetMyTypeName		884490	0					
ANR	884736	Identifier	myad		884490	0					
ANR	884737	Identifier	SetMyTypeName		884490	1					
ANR	884738	ArgumentList	"""NodeTerminatedEvent"""		884490	1					
ANR	884739	Argument	"""NodeTerminatedEvent"""		884490	0					
ANR	884740	PrimaryExpression	"""NodeTerminatedEvent"""		884490	0					
ANR	884741	BreakStatement	break ;	384:2:9540:9545	884490	47	True				
ANR	884742	Label	case ULOG_POST_SCRIPT_TERMINATED :	385:3:9550:9582	884490	48	True				
ANR	884743	Identifier	ULOG_POST_SCRIPT_TERMINATED		884490	0					
ANR	884744	ExpressionStatement	"myad -> SetMyTypeName ( ""PostScriptTerminatedEvent"" )"	386:2:9586:9634	884490	49	True				
ANR	884745	CallExpression	"myad -> SetMyTypeName ( ""PostScriptTerminatedEvent"" )"		884490	0					
ANR	884746	Callee	myad -> SetMyTypeName		884490	0					
ANR	884747	PtrMemberAccess	myad -> SetMyTypeName		884490	0					
ANR	884748	Identifier	myad		884490	0					
ANR	884749	Identifier	SetMyTypeName		884490	1					
ANR	884750	ArgumentList	"""PostScriptTerminatedEvent"""		884490	1					
ANR	884751	Argument	"""PostScriptTerminatedEvent"""		884490	0					
ANR	884752	PrimaryExpression	"""PostScriptTerminatedEvent"""		884490	0					
ANR	884753	BreakStatement	break ;	387:2:9638:9643	884490	50	True				
ANR	884754	Label	case ULOG_GLOBUS_SUBMIT :	388:3:9648:9671	884490	51	True				
ANR	884755	Identifier	ULOG_GLOBUS_SUBMIT		884490	0					
ANR	884756	ExpressionStatement	"myad -> SetMyTypeName ( ""GlobusSubmitEvent"" )"	389:2:9675:9715	884490	52	True				
ANR	884757	CallExpression	"myad -> SetMyTypeName ( ""GlobusSubmitEvent"" )"		884490	0					
ANR	884758	Callee	myad -> SetMyTypeName		884490	0					
ANR	884759	PtrMemberAccess	myad -> SetMyTypeName		884490	0					
ANR	884760	Identifier	myad		884490	0					
ANR	884761	Identifier	SetMyTypeName		884490	1					
ANR	884762	ArgumentList	"""GlobusSubmitEvent"""		884490	1					
ANR	884763	Argument	"""GlobusSubmitEvent"""		884490	0					
ANR	884764	PrimaryExpression	"""GlobusSubmitEvent"""		884490	0					
ANR	884765	BreakStatement	break ;	390:2:9719:9724	884490	53	True				
ANR	884766	Label	case ULOG_GLOBUS_SUBMIT_FAILED :	391:3:9729:9759	884490	54	True				
ANR	884767	Identifier	ULOG_GLOBUS_SUBMIT_FAILED		884490	0					
ANR	884768	ExpressionStatement	"myad -> SetMyTypeName ( ""GlobusSubmitFailedEvent"" )"	392:2:9763:9809	884490	55	True				
ANR	884769	CallExpression	"myad -> SetMyTypeName ( ""GlobusSubmitFailedEvent"" )"		884490	0					
ANR	884770	Callee	myad -> SetMyTypeName		884490	0					
ANR	884771	PtrMemberAccess	myad -> SetMyTypeName		884490	0					
ANR	884772	Identifier	myad		884490	0					
ANR	884773	Identifier	SetMyTypeName		884490	1					
ANR	884774	ArgumentList	"""GlobusSubmitFailedEvent"""		884490	1					
ANR	884775	Argument	"""GlobusSubmitFailedEvent"""		884490	0					
ANR	884776	PrimaryExpression	"""GlobusSubmitFailedEvent"""		884490	0					
ANR	884777	BreakStatement	break ;	393:2:9813:9818	884490	56	True				
ANR	884778	Label	case ULOG_GLOBUS_RESOURCE_UP :	394:3:9823:9851	884490	57	True				
ANR	884779	Identifier	ULOG_GLOBUS_RESOURCE_UP		884490	0					
ANR	884780	ExpressionStatement	"myad -> SetMyTypeName ( ""GlobusResourceUpEvent"" )"	395:2:9855:9899	884490	58	True				
ANR	884781	CallExpression	"myad -> SetMyTypeName ( ""GlobusResourceUpEvent"" )"		884490	0					
ANR	884782	Callee	myad -> SetMyTypeName		884490	0					
ANR	884783	PtrMemberAccess	myad -> SetMyTypeName		884490	0					
ANR	884784	Identifier	myad		884490	0					
ANR	884785	Identifier	SetMyTypeName		884490	1					
ANR	884786	ArgumentList	"""GlobusResourceUpEvent"""		884490	1					
ANR	884787	Argument	"""GlobusResourceUpEvent"""		884490	0					
ANR	884788	PrimaryExpression	"""GlobusResourceUpEvent"""		884490	0					
ANR	884789	BreakStatement	break ;	396:2:9903:9908	884490	59	True				
ANR	884790	Label	case ULOG_GLOBUS_RESOURCE_DOWN :	397:3:9913:9943	884490	60	True				
ANR	884791	Identifier	ULOG_GLOBUS_RESOURCE_DOWN		884490	0					
ANR	884792	ExpressionStatement	"myad -> SetMyTypeName ( ""GlobusResourceDownEvent"" )"	398:2:9947:9993	884490	61	True				
ANR	884793	CallExpression	"myad -> SetMyTypeName ( ""GlobusResourceDownEvent"" )"		884490	0					
ANR	884794	Callee	myad -> SetMyTypeName		884490	0					
ANR	884795	PtrMemberAccess	myad -> SetMyTypeName		884490	0					
ANR	884796	Identifier	myad		884490	0					
ANR	884797	Identifier	SetMyTypeName		884490	1					
ANR	884798	ArgumentList	"""GlobusResourceDownEvent"""		884490	1					
ANR	884799	Argument	"""GlobusResourceDownEvent"""		884490	0					
ANR	884800	PrimaryExpression	"""GlobusResourceDownEvent"""		884490	0					
ANR	884801	BreakStatement	break ;	399:2:9997:10002	884490	62	True				
ANR	884802	Label	case ULOG_REMOTE_ERROR :	400:1:10005:10027	884490	63	True				
ANR	884803	Identifier	ULOG_REMOTE_ERROR		884490	0					
ANR	884804	ExpressionStatement	"myad -> SetMyTypeName ( ""RemoteErrorEvent"" )"	401:2:10031:10070	884490	64	True				
ANR	884805	CallExpression	"myad -> SetMyTypeName ( ""RemoteErrorEvent"" )"		884490	0					
ANR	884806	Callee	myad -> SetMyTypeName		884490	0					
ANR	884807	PtrMemberAccess	myad -> SetMyTypeName		884490	0					
ANR	884808	Identifier	myad		884490	0					
ANR	884809	Identifier	SetMyTypeName		884490	1					
ANR	884810	ArgumentList	"""RemoteErrorEvent"""		884490	1					
ANR	884811	Argument	"""RemoteErrorEvent"""		884490	0					
ANR	884812	PrimaryExpression	"""RemoteErrorEvent"""		884490	0					
ANR	884813	BreakStatement	break ;	402:2:10074:10079	884490	65	True				
ANR	884814	Label	case ULOG_JOB_DISCONNECTED :	403:1:10082:10108	884490	66	True				
ANR	884815	Identifier	ULOG_JOB_DISCONNECTED		884490	0					
ANR	884816	ExpressionStatement	"myad -> SetMyTypeName ( ""JobDisconnectedEvent"" )"	404:2:10112:10155	884490	67	True				
ANR	884817	CallExpression	"myad -> SetMyTypeName ( ""JobDisconnectedEvent"" )"		884490	0					
ANR	884818	Callee	myad -> SetMyTypeName		884490	0					
ANR	884819	PtrMemberAccess	myad -> SetMyTypeName		884490	0					
ANR	884820	Identifier	myad		884490	0					
ANR	884821	Identifier	SetMyTypeName		884490	1					
ANR	884822	ArgumentList	"""JobDisconnectedEvent"""		884490	1					
ANR	884823	Argument	"""JobDisconnectedEvent"""		884490	0					
ANR	884824	PrimaryExpression	"""JobDisconnectedEvent"""		884490	0					
ANR	884825	BreakStatement	break ;	405:2:10159:10164	884490	68	True				
ANR	884826	Label	case ULOG_JOB_RECONNECTED :	406:1:10167:10192	884490	69	True				
ANR	884827	Identifier	ULOG_JOB_RECONNECTED		884490	0					
ANR	884828	ExpressionStatement	"myad -> SetMyTypeName ( ""JobReconnectedEvent"" )"	407:2:10196:10238	884490	70	True				
ANR	884829	CallExpression	"myad -> SetMyTypeName ( ""JobReconnectedEvent"" )"		884490	0					
ANR	884830	Callee	myad -> SetMyTypeName		884490	0					
ANR	884831	PtrMemberAccess	myad -> SetMyTypeName		884490	0					
ANR	884832	Identifier	myad		884490	0					
ANR	884833	Identifier	SetMyTypeName		884490	1					
ANR	884834	ArgumentList	"""JobReconnectedEvent"""		884490	1					
ANR	884835	Argument	"""JobReconnectedEvent"""		884490	0					
ANR	884836	PrimaryExpression	"""JobReconnectedEvent"""		884490	0					
ANR	884837	BreakStatement	break ;	408:2:10242:10247	884490	71	True				
ANR	884838	Label	case ULOG_JOB_RECONNECT_FAILED :	409:1:10250:10280	884490	72	True				
ANR	884839	Identifier	ULOG_JOB_RECONNECT_FAILED		884490	0					
ANR	884840	ExpressionStatement	"myad -> SetMyTypeName ( ""JobReconnectFailedEvent"" )"	410:2:10284:10330	884490	73	True				
ANR	884841	CallExpression	"myad -> SetMyTypeName ( ""JobReconnectFailedEvent"" )"		884490	0					
ANR	884842	Callee	myad -> SetMyTypeName		884490	0					
ANR	884843	PtrMemberAccess	myad -> SetMyTypeName		884490	0					
ANR	884844	Identifier	myad		884490	0					
ANR	884845	Identifier	SetMyTypeName		884490	1					
ANR	884846	ArgumentList	"""JobReconnectFailedEvent"""		884490	1					
ANR	884847	Argument	"""JobReconnectFailedEvent"""		884490	0					
ANR	884848	PrimaryExpression	"""JobReconnectFailedEvent"""		884490	0					
ANR	884849	BreakStatement	break ;	411:2:10334:10339	884490	74	True				
ANR	884850	Label	case ULOG_GRID_RESOURCE_UP :	412:1:10342:10368	884490	75	True				
ANR	884851	Identifier	ULOG_GRID_RESOURCE_UP		884490	0					
ANR	884852	ExpressionStatement	"myad -> SetMyTypeName ( ""GridResourceUpEvent"" )"	413:2:10372:10414	884490	76	True				
ANR	884853	CallExpression	"myad -> SetMyTypeName ( ""GridResourceUpEvent"" )"		884490	0					
ANR	884854	Callee	myad -> SetMyTypeName		884490	0					
ANR	884855	PtrMemberAccess	myad -> SetMyTypeName		884490	0					
ANR	884856	Identifier	myad		884490	0					
ANR	884857	Identifier	SetMyTypeName		884490	1					
ANR	884858	ArgumentList	"""GridResourceUpEvent"""		884490	1					
ANR	884859	Argument	"""GridResourceUpEvent"""		884490	0					
ANR	884860	PrimaryExpression	"""GridResourceUpEvent"""		884490	0					
ANR	884861	BreakStatement	break ;	414:2:10418:10423	884490	77	True				
ANR	884862	Label	case ULOG_GRID_RESOURCE_DOWN :	415:1:10426:10454	884490	78	True				
ANR	884863	Identifier	ULOG_GRID_RESOURCE_DOWN		884490	0					
ANR	884864	ExpressionStatement	"myad -> SetMyTypeName ( ""GridResourceDownEvent"" )"	416:2:10458:10502	884490	79	True				
ANR	884865	CallExpression	"myad -> SetMyTypeName ( ""GridResourceDownEvent"" )"		884490	0					
ANR	884866	Callee	myad -> SetMyTypeName		884490	0					
ANR	884867	PtrMemberAccess	myad -> SetMyTypeName		884490	0					
ANR	884868	Identifier	myad		884490	0					
ANR	884869	Identifier	SetMyTypeName		884490	1					
ANR	884870	ArgumentList	"""GridResourceDownEvent"""		884490	1					
ANR	884871	Argument	"""GridResourceDownEvent"""		884490	0					
ANR	884872	PrimaryExpression	"""GridResourceDownEvent"""		884490	0					
ANR	884873	BreakStatement	break ;	417:2:10506:10511	884490	80	True				
ANR	884874	Label	case ULOG_GRID_SUBMIT :	418:1:10514:10535	884490	81	True				
ANR	884875	Identifier	ULOG_GRID_SUBMIT		884490	0					
ANR	884876	ExpressionStatement	"myad -> SetMyTypeName ( ""GridSubmitEvent"" )"	419:2:10539:10577	884490	82	True				
ANR	884877	CallExpression	"myad -> SetMyTypeName ( ""GridSubmitEvent"" )"		884490	0					
ANR	884878	Callee	myad -> SetMyTypeName		884490	0					
ANR	884879	PtrMemberAccess	myad -> SetMyTypeName		884490	0					
ANR	884880	Identifier	myad		884490	0					
ANR	884881	Identifier	SetMyTypeName		884490	1					
ANR	884882	ArgumentList	"""GridSubmitEvent"""		884490	1					
ANR	884883	Argument	"""GridSubmitEvent"""		884490	0					
ANR	884884	PrimaryExpression	"""GridSubmitEvent"""		884490	0					
ANR	884885	BreakStatement	break ;	420:2:10581:10586	884490	83	True				
ANR	884886	Label	case ULOG_JOB_AD_INFORMATION :	421:1:10589:10617	884490	84	True				
ANR	884887	Identifier	ULOG_JOB_AD_INFORMATION		884490	0					
ANR	884888	ExpressionStatement	"myad -> SetMyTypeName ( ""JobAdInformationEvent"" )"	422:2:10621:10665	884490	85	True				
ANR	884889	CallExpression	"myad -> SetMyTypeName ( ""JobAdInformationEvent"" )"		884490	0					
ANR	884890	Callee	myad -> SetMyTypeName		884490	0					
ANR	884891	PtrMemberAccess	myad -> SetMyTypeName		884490	0					
ANR	884892	Identifier	myad		884490	0					
ANR	884893	Identifier	SetMyTypeName		884490	1					
ANR	884894	ArgumentList	"""JobAdInformationEvent"""		884490	1					
ANR	884895	Argument	"""JobAdInformationEvent"""		884490	0					
ANR	884896	PrimaryExpression	"""JobAdInformationEvent"""		884490	0					
ANR	884897	BreakStatement	break ;	423:2:10669:10674	884490	86	True				
ANR	884898	Label	case ULOG_ATTRIBUTE_UPDATE :	424:1:10677:10703	884490	87	True				
ANR	884899	Identifier	ULOG_ATTRIBUTE_UPDATE		884490	0					
ANR	884900	ExpressionStatement	"myad -> SetMyTypeName ( ""AttributeUpdateEvent"" )"	425:2:10707:10750	884490	88	True				
ANR	884901	CallExpression	"myad -> SetMyTypeName ( ""AttributeUpdateEvent"" )"		884490	0					
ANR	884902	Callee	myad -> SetMyTypeName		884490	0					
ANR	884903	PtrMemberAccess	myad -> SetMyTypeName		884490	0					
ANR	884904	Identifier	myad		884490	0					
ANR	884905	Identifier	SetMyTypeName		884490	1					
ANR	884906	ArgumentList	"""AttributeUpdateEvent"""		884490	1					
ANR	884907	Argument	"""AttributeUpdateEvent"""		884490	0					
ANR	884908	PrimaryExpression	"""AttributeUpdateEvent"""		884490	0					
ANR	884909	BreakStatement	break ;	426:2:10754:10759	884490	89	True				
ANR	884910	Label	default :	427:3:10764:10771	884490	90	True				
ANR	884911	Identifier	default		884490	0					
ANR	884912	Statement	delete	428:2:10775:10780	884490	91	True				
ANR	884913	ExpressionStatement	myad	428:9:10782:10786	884490	92	True				
ANR	884914	Identifier	myad		884490	0					
ANR	884915	ReturnStatement	return NULL ;	429:2:10790:10801	884490	93	True				
ANR	884916	Identifier	NULL		884490	0					
ANR	884917	IdentifierDeclStatement	const struct tm tmdup = eventTime ;	432:1:10808:10841	884490	9	True				
ANR	884918	IdentifierDecl	tmdup = eventTime		884490	0					
ANR	884919	IdentifierDeclType	const struct tm		884490	0					
ANR	884920	Identifier	tmdup		884490	1					
ANR	884921	AssignmentExpression	tmdup = eventTime		884490	2		=			
ANR	884922	Identifier	eventTime		884490	0					
ANR	884923	Identifier	eventTime		884490	1					
ANR	884924	IdentifierDeclStatement	"char * eventTimeStr = time_to_iso8601 ( tmdup , ISO8601_ExtendedFormat , ISO8601_DateAndTime , FALSE ) ;"	433:1:10844:10950	884490	10	True				
ANR	884925	IdentifierDecl	"* eventTimeStr = time_to_iso8601 ( tmdup , ISO8601_ExtendedFormat , ISO8601_DateAndTime , FALSE )"		884490	0					
ANR	884926	IdentifierDeclType	char *		884490	0					
ANR	884927	Identifier	eventTimeStr		884490	1					
ANR	884928	AssignmentExpression	"* eventTimeStr = time_to_iso8601 ( tmdup , ISO8601_ExtendedFormat , ISO8601_DateAndTime , FALSE )"		884490	2		=			
ANR	884929	Identifier	eventTimeStr		884490	0					
ANR	884930	CallExpression	"time_to_iso8601 ( tmdup , ISO8601_ExtendedFormat , ISO8601_DateAndTime , FALSE )"		884490	1					
ANR	884931	Callee	time_to_iso8601		884490	0					
ANR	884932	Identifier	time_to_iso8601		884490	0					
ANR	884933	ArgumentList	tmdup		884490	1					
ANR	884934	Argument	tmdup		884490	0					
ANR	884935	Identifier	tmdup		884490	0					
ANR	884936	Argument	ISO8601_ExtendedFormat		884490	1					
ANR	884937	Identifier	ISO8601_ExtendedFormat		884490	0					
ANR	884938	Argument	ISO8601_DateAndTime		884490	2					
ANR	884939	Identifier	ISO8601_DateAndTime		884490	0					
ANR	884940	Argument	FALSE		884490	3					
ANR	884941	Identifier	FALSE		884490	0					
ANR	884942	IfStatement	if ( eventTimeStr )		884490	11					
ANR	884943	Condition	eventTimeStr	435:5:10957:10968	884490	0	True				
ANR	884944	Identifier	eventTimeStr		884490	0					
ANR	884945	CompoundStatement		113:2:2927:2940	884490	1					
ANR	884946	IdentifierDeclStatement	MyString buf1 ;	436:2:10976:10989	884490	0	True				
ANR	884947	IdentifierDecl	buf1		884490	0					
ANR	884948	IdentifierDeclType	MyString		884490	0					
ANR	884949	Identifier	buf1		884490	1					
ANR	884950	ExpressionStatement	"buf1 . sprintf ( ""EventTime = \\""%s\\"""" , eventTimeStr )"	437:2:10993:11041	884490	1	True				
ANR	884951	CallExpression	"buf1 . sprintf ( ""EventTime = \\""%s\\"""" , eventTimeStr )"		884490	0					
ANR	884952	Callee	buf1 . sprintf		884490	0					
ANR	884953	MemberAccess	buf1 . sprintf		884490	0					
ANR	884954	Identifier	buf1		884490	0					
ANR	884955	Identifier	sprintf		884490	1					
ANR	884956	ArgumentList	"""EventTime = \\""%s\\"""""		884490	1					
ANR	884957	Argument	"""EventTime = \\""%s\\"""""		884490	0					
ANR	884958	PrimaryExpression	"""EventTime = \\""%s\\"""""		884490	0					
ANR	884959	Argument	eventTimeStr		884490	1					
ANR	884960	Identifier	eventTimeStr		884490	0					
ANR	884961	ExpressionStatement	free ( eventTimeStr )	438:2:11045:11063	884490	2	True				
ANR	884962	CallExpression	free ( eventTimeStr )		884490	0					
ANR	884963	Callee	free		884490	0					
ANR	884964	Identifier	free		884490	0					
ANR	884965	ArgumentList	eventTimeStr		884490	1					
ANR	884966	Argument	eventTimeStr		884490	0					
ANR	884967	Identifier	eventTimeStr		884490	0					
ANR	884968	IfStatement	if ( ! myad -> Insert ( buf1 . Value ( ) ) )		884490	3					
ANR	884969	Condition	! myad -> Insert ( buf1 . Value ( ) )	439:6:11071:11097	884490	0	True				
ANR	884970	UnaryOperationExpression	! myad -> Insert ( buf1 . Value ( ) )		884490	0					
ANR	884971	UnaryOperator	!		884490	0					
ANR	884972	CallExpression	myad -> Insert ( buf1 . Value ( ) )		884490	1					
ANR	884973	Callee	myad -> Insert		884490	0					
ANR	884974	PtrMemberAccess	myad -> Insert		884490	0					
ANR	884975	Identifier	myad		884490	0					
ANR	884976	Identifier	Insert		884490	1					
ANR	884977	ArgumentList	buf1 . Value ( )		884490	1					
ANR	884978	Argument	buf1 . Value ( )		884490	0					
ANR	884979	CallExpression	buf1 . Value ( )		884490	0					
ANR	884980	Callee	buf1 . Value		884490	0					
ANR	884981	MemberAccess	buf1 . Value		884490	0					
ANR	884982	Identifier	buf1		884490	0					
ANR	884983	Identifier	Value		884490	1					
ANR	884984	ArgumentList			884490	1					
ANR	884985	CompoundStatement		116:36:3052:3052	884490	1					
ANR	884986	Statement	delete	440:3:11106:11111	884490	0	True				
ANR	884987	ExpressionStatement	myad	440:10:11113:11117	884490	1	True				
ANR	884988	Identifier	myad		884490	0					
ANR	884989	ReturnStatement	return NULL ;	441:3:11122:11133	884490	2	True				
ANR	884990	Identifier	NULL		884490	0					
ANR	884991	ElseStatement	else		884490	0					
ANR	884992	CompoundStatement		120:8:3098:3098	884490	0					
ANR	884993	Statement	delete	444:2:11151:11156	884490	0	True				
ANR	884994	ExpressionStatement	myad	444:9:11158:11162	884490	1	True				
ANR	884995	Identifier	myad		884490	0					
ANR	884996	ReturnStatement	return NULL ;	445:2:11166:11177	884490	2	True				
ANR	884997	Identifier	NULL		884490	0					
ANR	884998	IfStatement	if ( cluster >= 0 )		884490	12					
ANR	884999	Condition	cluster >= 0	448:5:11188:11199	884490	0	True				
ANR	885000	RelationalExpression	cluster >= 0		884490	0		>=			
ANR	885001	Identifier	cluster		884490	0					
ANR	885002	PrimaryExpression	0		884490	1					
ANR	885003	CompoundStatement		125:20:3154:3154	884490	1					
ANR	885004	ExpressionStatement	"snprintf ( buf0 , 128 , ""Cluster = %d"" , cluster )"	449:2:11207:11251	884490	0	True				
ANR	885005	CallExpression	"snprintf ( buf0 , 128 , ""Cluster = %d"" , cluster )"		884490	0					
ANR	885006	Callee	snprintf		884490	0					
ANR	885007	Identifier	snprintf		884490	0					
ANR	885008	ArgumentList	buf0		884490	1					
ANR	885009	Argument	buf0		884490	0					
ANR	885010	Identifier	buf0		884490	0					
ANR	885011	Argument	128		884490	1					
ANR	885012	PrimaryExpression	128		884490	0					
ANR	885013	Argument	"""Cluster = %d"""		884490	2					
ANR	885014	PrimaryExpression	"""Cluster = %d"""		884490	0					
ANR	885015	Argument	cluster		884490	3					
ANR	885016	Identifier	cluster		884490	0					
ANR	885017	ExpressionStatement	buf0 [ 127 ] = 0	450:2:11255:11268	884490	1	True				
ANR	885018	AssignmentExpression	buf0 [ 127 ] = 0		884490	0		=			
ANR	885019	ArrayIndexing	buf0 [ 127 ]		884490	0					
ANR	885020	Identifier	buf0		884490	0					
ANR	885021	PrimaryExpression	127		884490	1					
ANR	885022	PrimaryExpression	0		884490	1					
ANR	885023	IfStatement	if ( ! myad -> Insert ( buf0 ) )		884490	2					
ANR	885024	Condition	! myad -> Insert ( buf0 )	451:6:11276:11294	884490	0	True				
ANR	885025	UnaryOperationExpression	! myad -> Insert ( buf0 )		884490	0					
ANR	885026	UnaryOperator	!		884490	0					
ANR	885027	CallExpression	myad -> Insert ( buf0 )		884490	1					
ANR	885028	Callee	myad -> Insert		884490	0					
ANR	885029	PtrMemberAccess	myad -> Insert		884490	0					
ANR	885030	Identifier	myad		884490	0					
ANR	885031	Identifier	Insert		884490	1					
ANR	885032	ArgumentList	buf0		884490	1					
ANR	885033	Argument	buf0		884490	0					
ANR	885034	Identifier	buf0		884490	0					
ANR	885035	CompoundStatement		128:28:3249:3249	884490	1					
ANR	885036	Statement	delete	452:3:11303:11308	884490	0	True				
ANR	885037	ExpressionStatement	myad	452:10:11310:11314	884490	1	True				
ANR	885038	Identifier	myad		884490	0					
ANR	885039	ReturnStatement	return NULL ;	453:3:11319:11330	884490	2	True				
ANR	885040	Identifier	NULL		884490	0					
ANR	885041	IfStatement	if ( proc >= 0 )		884490	13					
ANR	885042	Condition	proc >= 0	457:5:11345:11353	884490	0	True				
ANR	885043	RelationalExpression	proc >= 0		884490	0		>=			
ANR	885044	Identifier	proc		884490	0					
ANR	885045	PrimaryExpression	0		884490	1					
ANR	885046	CompoundStatement		134:17:3308:3308	884490	1					
ANR	885047	ExpressionStatement	"snprintf ( buf0 , 128 , ""Proc = %d"" , proc )"	458:2:11361:11399	884490	0	True				
ANR	885048	CallExpression	"snprintf ( buf0 , 128 , ""Proc = %d"" , proc )"		884490	0					
ANR	885049	Callee	snprintf		884490	0					
ANR	885050	Identifier	snprintf		884490	0					
ANR	885051	ArgumentList	buf0		884490	1					
ANR	885052	Argument	buf0		884490	0					
ANR	885053	Identifier	buf0		884490	0					
ANR	885054	Argument	128		884490	1					
ANR	885055	PrimaryExpression	128		884490	0					
ANR	885056	Argument	"""Proc = %d"""		884490	2					
ANR	885057	PrimaryExpression	"""Proc = %d"""		884490	0					
ANR	885058	Argument	proc		884490	3					
ANR	885059	Identifier	proc		884490	0					
ANR	885060	ExpressionStatement	buf0 [ 127 ] = 0	459:2:11403:11416	884490	1	True				
ANR	885061	AssignmentExpression	buf0 [ 127 ] = 0		884490	0		=			
ANR	885062	ArrayIndexing	buf0 [ 127 ]		884490	0					
ANR	885063	Identifier	buf0		884490	0					
ANR	885064	PrimaryExpression	127		884490	1					
ANR	885065	PrimaryExpression	0		884490	1					
ANR	885066	IfStatement	if ( ! myad -> Insert ( buf0 ) )		884490	2					
ANR	885067	Condition	! myad -> Insert ( buf0 )	460:6:11424:11442	884490	0	True				
ANR	885068	UnaryOperationExpression	! myad -> Insert ( buf0 )		884490	0					
ANR	885069	UnaryOperator	!		884490	0					
ANR	885070	CallExpression	myad -> Insert ( buf0 )		884490	1					
ANR	885071	Callee	myad -> Insert		884490	0					
ANR	885072	PtrMemberAccess	myad -> Insert		884490	0					
ANR	885073	Identifier	myad		884490	0					
ANR	885074	Identifier	Insert		884490	1					
ANR	885075	ArgumentList	buf0		884490	1					
ANR	885076	Argument	buf0		884490	0					
ANR	885077	Identifier	buf0		884490	0					
ANR	885078	CompoundStatement		137:28:3397:3397	884490	1					
ANR	885079	Statement	delete	461:3:11451:11456	884490	0	True				
ANR	885080	ExpressionStatement	myad	461:10:11458:11462	884490	1	True				
ANR	885081	Identifier	myad		884490	0					
ANR	885082	ReturnStatement	return NULL ;	462:3:11467:11478	884490	2	True				
ANR	885083	Identifier	NULL		884490	0					
ANR	885084	IfStatement	if ( subproc >= 0 )		884490	14					
ANR	885085	Condition	subproc >= 0	466:5:11493:11504	884490	0	True				
ANR	885086	RelationalExpression	subproc >= 0		884490	0		>=			
ANR	885087	Identifier	subproc		884490	0					
ANR	885088	PrimaryExpression	0		884490	1					
ANR	885089	CompoundStatement		143:20:3459:3459	884490	1					
ANR	885090	ExpressionStatement	"snprintf ( buf0 , 128 , ""Subproc = %d"" , subproc )"	467:2:11512:11556	884490	0	True				
ANR	885091	CallExpression	"snprintf ( buf0 , 128 , ""Subproc = %d"" , subproc )"		884490	0					
ANR	885092	Callee	snprintf		884490	0					
ANR	885093	Identifier	snprintf		884490	0					
ANR	885094	ArgumentList	buf0		884490	1					
ANR	885095	Argument	buf0		884490	0					
ANR	885096	Identifier	buf0		884490	0					
ANR	885097	Argument	128		884490	1					
ANR	885098	PrimaryExpression	128		884490	0					
ANR	885099	Argument	"""Subproc = %d"""		884490	2					
ANR	885100	PrimaryExpression	"""Subproc = %d"""		884490	0					
ANR	885101	Argument	subproc		884490	3					
ANR	885102	Identifier	subproc		884490	0					
ANR	885103	ExpressionStatement	buf0 [ 127 ] = 0	468:2:11560:11573	884490	1	True				
ANR	885104	AssignmentExpression	buf0 [ 127 ] = 0		884490	0		=			
ANR	885105	ArrayIndexing	buf0 [ 127 ]		884490	0					
ANR	885106	Identifier	buf0		884490	0					
ANR	885107	PrimaryExpression	127		884490	1					
ANR	885108	PrimaryExpression	0		884490	1					
ANR	885109	IfStatement	if ( ! myad -> Insert ( buf0 ) )		884490	2					
ANR	885110	Condition	! myad -> Insert ( buf0 )	469:6:11581:11599	884490	0	True				
ANR	885111	UnaryOperationExpression	! myad -> Insert ( buf0 )		884490	0					
ANR	885112	UnaryOperator	!		884490	0					
ANR	885113	CallExpression	myad -> Insert ( buf0 )		884490	1					
ANR	885114	Callee	myad -> Insert		884490	0					
ANR	885115	PtrMemberAccess	myad -> Insert		884490	0					
ANR	885116	Identifier	myad		884490	0					
ANR	885117	Identifier	Insert		884490	1					
ANR	885118	ArgumentList	buf0		884490	1					
ANR	885119	Argument	buf0		884490	0					
ANR	885120	Identifier	buf0		884490	0					
ANR	885121	CompoundStatement		146:28:3554:3554	884490	1					
ANR	885122	Statement	delete	470:3:11608:11613	884490	0	True				
ANR	885123	ExpressionStatement	myad	470:10:11615:11619	884490	1	True				
ANR	885124	Identifier	myad		884490	0					
ANR	885125	ReturnStatement	return NULL ;	471:3:11624:11635	884490	2	True				
ANR	885126	Identifier	NULL		884490	0					
ANR	885127	ReturnStatement	return myad ;	475:1:11646:11657	884490	15	True				
ANR	885128	Identifier	myad		884490	0					
ANR	885129	ReturnType	ClassAd *		884490	1					
ANR	885130	Identifier	ULogEvent :: toClassAd		884490	2					
ANR	885131	ParameterList			884490	3					
ANR	885132	CFGEntryNode	ENTRY		884490		True				
ANR	885133	CFGExitNode	EXIT		884490		True				
ANR	885134	Symbol	cluster		884490						
ANR	885135	Symbol	proc		884490						
ANR	885136	Symbol	NULL		884490						
ANR	885137	Symbol	ISO8601_ExtendedFormat		884490						
ANR	885138	Symbol	* myad		884490						
ANR	885139	Symbol	eventNumber		884490						
ANR	885140	Symbol	myad -> Insert		884490						
ANR	885141	Symbol	* buf0		884490						
ANR	885142	Symbol	ISO8601_DateAndTime		884490						
ANR	885143	Symbol	buf1		884490						
ANR	885144	Symbol	buf1 . Value		884490						
ANR	885145	Symbol	buf0		884490						
ANR	885146	Symbol	tmdup		884490						
ANR	885147	Symbol	time_to_iso8601		884490						
ANR	885148	Symbol	eventTime		884490						
ANR	885149	Symbol	FALSE		884490						
ANR	885150	Symbol	eventTimeStr		884490						
ANR	885151	Symbol	subproc		884490						
ANR	885152	Symbol	myad		884490						
ANR	885153	Function	ULogEvent :: initFromClassAd	478:0:11662:12097							
ANR	885154	FunctionDef	ULogEvent :: initFromClassAd (ClassAd * ad)		885153	0					
ANR	885155	CompoundStatement		480:0:11707:12097	885153	0					
ANR	885156	IfStatement	if ( ! ad )		885153	0					
ANR	885157	Condition	! ad	481:5:11714:11716	885153	0	True				
ANR	885158	UnaryOperationExpression	! ad		885153	0					
ANR	885159	UnaryOperator	!		885153	0					
ANR	885160	Identifier	ad		885153	1					
ANR	885161	ReturnStatement	return ;	481:11:11720:11726	885153	1	True				
ANR	885162	IdentifierDeclStatement	int en ;	482:1:11729:11735	885153	1	True				
ANR	885163	IdentifierDecl	en		885153	0					
ANR	885164	IdentifierDeclType	int		885153	0					
ANR	885165	Identifier	en		885153	1					
ANR	885166	IfStatement	"if ( ad -> LookupInteger ( ""EventTypeNumber"" , en ) )"		885153	2					
ANR	885167	Condition	"ad -> LookupInteger ( ""EventTypeNumber"" , en )"	483:6:11743:11782	885153	0	True				
ANR	885168	CallExpression	"ad -> LookupInteger ( ""EventTypeNumber"" , en )"		885153	0					
ANR	885169	Callee	ad -> LookupInteger		885153	0					
ANR	885170	PtrMemberAccess	ad -> LookupInteger		885153	0					
ANR	885171	Identifier	ad		885153	0					
ANR	885172	Identifier	LookupInteger		885153	1					
ANR	885173	ArgumentList	"""EventTypeNumber"""		885153	1					
ANR	885174	Argument	"""EventTypeNumber"""		885153	0					
ANR	885175	PrimaryExpression	"""EventTypeNumber"""		885153	0					
ANR	885176	Argument	en		885153	1					
ANR	885177	Identifier	en		885153	0					
ANR	885178	CompoundStatement		4:49:78:78	885153	1					
ANR	885179	ExpressionStatement	eventNumber = ( ULogEventNumber ) en	484:2:11790:11824	885153	0	True				
ANR	885180	AssignmentExpression	eventNumber = ( ULogEventNumber ) en		885153	0		=			
ANR	885181	Identifier	eventNumber		885153	0					
ANR	885182	CastExpression	( ULogEventNumber ) en		885153	1					
ANR	885183	CastTarget	ULogEventNumber		885153	0					
ANR	885184	Identifier	en		885153	1					
ANR	885185	IdentifierDeclStatement	char * timestr = NULL ;	486:1:11830:11850	885153	3	True				
ANR	885186	IdentifierDecl	* timestr = NULL		885153	0					
ANR	885187	IdentifierDeclType	char *		885153	0					
ANR	885188	Identifier	timestr		885153	1					
ANR	885189	AssignmentExpression	* timestr = NULL		885153	2		=			
ANR	885190	Identifier	NULL		885153	0					
ANR	885191	Identifier	NULL		885153	1					
ANR	885192	IfStatement	"if ( ad -> LookupString ( ""EventTime"" , & timestr ) )"		885153	4					
ANR	885193	Condition	"ad -> LookupString ( ""EventTime"" , & timestr )"	487:5:11857:11895	885153	0	True				
ANR	885194	CallExpression	"ad -> LookupString ( ""EventTime"" , & timestr )"		885153	0					
ANR	885195	Callee	ad -> LookupString		885153	0					
ANR	885196	PtrMemberAccess	ad -> LookupString		885153	0					
ANR	885197	Identifier	ad		885153	0					
ANR	885198	Identifier	LookupString		885153	1					
ANR	885199	ArgumentList	"""EventTime"""		885153	1					
ANR	885200	Argument	"""EventTime"""		885153	0					
ANR	885201	PrimaryExpression	"""EventTime"""		885153	0					
ANR	885202	Argument	& timestr		885153	1					
ANR	885203	UnaryOperationExpression	& timestr		885153	0					
ANR	885204	UnaryOperator	&		885153	0					
ANR	885205	Identifier	timestr		885153	1					
ANR	885206	CompoundStatement		9:2:195:209	885153	1					
ANR	885207	IdentifierDeclStatement	bool f = FALSE ;	488:2:11903:11917	885153	0	True				
ANR	885208	IdentifierDecl	f = FALSE		885153	0					
ANR	885209	IdentifierDeclType	bool		885153	0					
ANR	885210	Identifier	f		885153	1					
ANR	885211	AssignmentExpression	f = FALSE		885153	2		=			
ANR	885212	Identifier	FALSE		885153	0					
ANR	885213	Identifier	FALSE		885153	1					
ANR	885214	ExpressionStatement	"iso8601_to_time ( timestr , & eventTime , & f )"	489:2:11921:11961	885153	1	True				
ANR	885215	CallExpression	"iso8601_to_time ( timestr , & eventTime , & f )"		885153	0					
ANR	885216	Callee	iso8601_to_time		885153	0					
ANR	885217	Identifier	iso8601_to_time		885153	0					
ANR	885218	ArgumentList	timestr		885153	1					
ANR	885219	Argument	timestr		885153	0					
ANR	885220	Identifier	timestr		885153	0					
ANR	885221	Argument	& eventTime		885153	1					
ANR	885222	UnaryOperationExpression	& eventTime		885153	0					
ANR	885223	UnaryOperator	&		885153	0					
ANR	885224	Identifier	eventTime		885153	1					
ANR	885225	Argument	& f		885153	2					
ANR	885226	UnaryOperationExpression	& f		885153	0					
ANR	885227	UnaryOperator	&		885153	0					
ANR	885228	Identifier	f		885153	1					
ANR	885229	ExpressionStatement	free ( timestr )	490:2:11965:11978	885153	2	True				
ANR	885230	CallExpression	free ( timestr )		885153	0					
ANR	885231	Callee	free		885153	0					
ANR	885232	Identifier	free		885153	0					
ANR	885233	ArgumentList	timestr		885153	1					
ANR	885234	Argument	timestr		885153	0					
ANR	885235	Identifier	timestr		885153	0					
ANR	885236	ExpressionStatement	"ad -> LookupInteger ( ""Cluster"" , cluster )"	492:1:11984:12021	885153	5	True				
ANR	885237	CallExpression	"ad -> LookupInteger ( ""Cluster"" , cluster )"		885153	0					
ANR	885238	Callee	ad -> LookupInteger		885153	0					
ANR	885239	PtrMemberAccess	ad -> LookupInteger		885153	0					
ANR	885240	Identifier	ad		885153	0					
ANR	885241	Identifier	LookupInteger		885153	1					
ANR	885242	ArgumentList	"""Cluster"""		885153	1					
ANR	885243	Argument	"""Cluster"""		885153	0					
ANR	885244	PrimaryExpression	"""Cluster"""		885153	0					
ANR	885245	Argument	cluster		885153	1					
ANR	885246	Identifier	cluster		885153	0					
ANR	885247	ExpressionStatement	"ad -> LookupInteger ( ""Proc"" , proc )"	493:1:12024:12055	885153	6	True				
ANR	885248	CallExpression	"ad -> LookupInteger ( ""Proc"" , proc )"		885153	0					
ANR	885249	Callee	ad -> LookupInteger		885153	0					
ANR	885250	PtrMemberAccess	ad -> LookupInteger		885153	0					
ANR	885251	Identifier	ad		885153	0					
ANR	885252	Identifier	LookupInteger		885153	1					
ANR	885253	ArgumentList	"""Proc"""		885153	1					
ANR	885254	Argument	"""Proc"""		885153	0					
ANR	885255	PrimaryExpression	"""Proc"""		885153	0					
ANR	885256	Argument	proc		885153	1					
ANR	885257	Identifier	proc		885153	0					
ANR	885258	ExpressionStatement	"ad -> LookupInteger ( ""Subproc"" , subproc )"	494:1:12058:12095	885153	7	True				
ANR	885259	CallExpression	"ad -> LookupInteger ( ""Subproc"" , subproc )"		885153	0					
ANR	885260	Callee	ad -> LookupInteger		885153	0					
ANR	885261	PtrMemberAccess	ad -> LookupInteger		885153	0					
ANR	885262	Identifier	ad		885153	0					
ANR	885263	Identifier	LookupInteger		885153	1					
ANR	885264	ArgumentList	"""Subproc"""		885153	1					
ANR	885265	Argument	"""Subproc"""		885153	0					
ANR	885266	PrimaryExpression	"""Subproc"""		885153	0					
ANR	885267	Argument	subproc		885153	1					
ANR	885268	Identifier	subproc		885153	0					
ANR	885269	ReturnType	void		885153	1					
ANR	885270	Identifier	ULogEvent :: initFromClassAd		885153	2					
ANR	885271	ParameterList	ClassAd * ad		885153	3					
ANR	885272	Parameter	ClassAd * ad	479:27:11694:11704	885153	0	True				
ANR	885273	ParameterType	ClassAd *		885153	0					
ANR	885274	Identifier	ad		885153	1					
ANR	885275	CFGEntryNode	ENTRY		885153		True				
ANR	885276	CFGExitNode	EXIT		885153		True				
ANR	885277	Symbol	ad -> LookupString		885153						
ANR	885278	Symbol	cluster		885153						
ANR	885279	Symbol	proc		885153						
ANR	885280	Symbol	ad		885153						
ANR	885281	Symbol	NULL		885153						
ANR	885282	Symbol	eventNumber		885153						
ANR	885283	Symbol	f		885153						
ANR	885284	Symbol	en		885153						
ANR	885285	Symbol	* ad		885153						
ANR	885286	Symbol	timestr		885153						
ANR	885287	Symbol	& f		885153						
ANR	885288	Symbol	& eventTime		885153						
ANR	885289	Symbol	& timestr		885153						
ANR	885290	Symbol	ad -> LookupInteger		885153						
ANR	885291	Symbol	FALSE		885153						
ANR	885292	Symbol	subproc		885153						
ANR	885293	Function	ULogEvent :: insertCommonIdentifiers	497:0:12100:12428							
ANR	885294	FunctionDef	ULogEvent :: insertCommonIdentifiers (ClassAd & adToFill)		885293	0					
ANR	885295	CompoundStatement		499:0:12159:12428	885293	0					
ANR	885296	IfStatement	if ( scheddname )		885293	0					
ANR	885297	Condition	scheddname	501:4:12192:12201	885293	0	True				
ANR	885298	Identifier	scheddname		885293	0					
ANR	885299	CompoundStatement		3:16:44:44	885293	1					
ANR	885300	ExpressionStatement	"adToFill . Assign ( ""scheddname"" , scheddname )"	502:3:12209:12250	885293	0	True				
ANR	885301	CallExpression	"adToFill . Assign ( ""scheddname"" , scheddname )"		885293	0					
ANR	885302	Callee	adToFill . Assign		885293	0					
ANR	885303	MemberAccess	adToFill . Assign		885293	0					
ANR	885304	Identifier	adToFill		885293	0					
ANR	885305	Identifier	Assign		885293	1					
ANR	885306	ArgumentList	"""scheddname"""		885293	1					
ANR	885307	Argument	"""scheddname"""		885293	0					
ANR	885308	PrimaryExpression	"""scheddname"""		885293	0					
ANR	885309	Argument	scheddname		885293	1					
ANR	885310	Identifier	scheddname		885293	0					
ANR	885311	IfStatement	if ( m_gjid )		885293	1					
ANR	885312	Condition	m_gjid	505:4:12260:12265	885293	0	True				
ANR	885313	Identifier	m_gjid		885293	0					
ANR	885314	CompoundStatement		7:12:108:108	885293	1					
ANR	885315	ExpressionStatement	"adToFill . Assign ( ""globaljobid"" , m_gjid )"	506:3:12273:12311	885293	0	True				
ANR	885316	CallExpression	"adToFill . Assign ( ""globaljobid"" , m_gjid )"		885293	0					
ANR	885317	Callee	adToFill . Assign		885293	0					
ANR	885318	MemberAccess	adToFill . Assign		885293	0					
ANR	885319	Identifier	adToFill		885293	0					
ANR	885320	Identifier	Assign		885293	1					
ANR	885321	ArgumentList	"""globaljobid"""		885293	1					
ANR	885322	Argument	"""globaljobid"""		885293	0					
ANR	885323	PrimaryExpression	"""globaljobid"""		885293	0					
ANR	885324	Argument	m_gjid		885293	1					
ANR	885325	Identifier	m_gjid		885293	0					
ANR	885326	ExpressionStatement	"adToFill . Assign ( ""cluster_id"" , cluster )"	509:1:12318:12356	885293	2	True				
ANR	885327	CallExpression	"adToFill . Assign ( ""cluster_id"" , cluster )"		885293	0					
ANR	885328	Callee	adToFill . Assign		885293	0					
ANR	885329	MemberAccess	adToFill . Assign		885293	0					
ANR	885330	Identifier	adToFill		885293	0					
ANR	885331	Identifier	Assign		885293	1					
ANR	885332	ArgumentList	"""cluster_id"""		885293	1					
ANR	885333	Argument	"""cluster_id"""		885293	0					
ANR	885334	PrimaryExpression	"""cluster_id"""		885293	0					
ANR	885335	Argument	cluster		885293	1					
ANR	885336	Identifier	cluster		885293	0					
ANR	885337	ExpressionStatement	"adToFill . Assign ( ""proc_id"" , proc )"	510:1:12359:12391	885293	3	True				
ANR	885338	CallExpression	"adToFill . Assign ( ""proc_id"" , proc )"		885293	0					
ANR	885339	Callee	adToFill . Assign		885293	0					
ANR	885340	MemberAccess	adToFill . Assign		885293	0					
ANR	885341	Identifier	adToFill		885293	0					
ANR	885342	Identifier	Assign		885293	1					
ANR	885343	ArgumentList	"""proc_id"""		885293	1					
ANR	885344	Argument	"""proc_id"""		885293	0					
ANR	885345	PrimaryExpression	"""proc_id"""		885293	0					
ANR	885346	Argument	proc		885293	1					
ANR	885347	Identifier	proc		885293	0					
ANR	885348	ExpressionStatement	"adToFill . Assign ( ""spid"" , subproc )"	511:1:12394:12426	885293	4	True				
ANR	885349	CallExpression	"adToFill . Assign ( ""spid"" , subproc )"		885293	0					
ANR	885350	Callee	adToFill . Assign		885293	0					
ANR	885351	MemberAccess	adToFill . Assign		885293	0					
ANR	885352	Identifier	adToFill		885293	0					
ANR	885353	Identifier	Assign		885293	1					
ANR	885354	ArgumentList	"""spid"""		885293	1					
ANR	885355	Argument	"""spid"""		885293	0					
ANR	885356	PrimaryExpression	"""spid"""		885293	0					
ANR	885357	Argument	subproc		885293	1					
ANR	885358	Identifier	subproc		885293	0					
ANR	885359	ReturnType	void		885293	1					
ANR	885360	Identifier	ULogEvent :: insertCommonIdentifiers		885293	2					
ANR	885361	ParameterList	ClassAd & adToFill		885293	3					
ANR	885362	Parameter	ClassAd & adToFill	498:35:12140:12156	885293	0	True				
ANR	885363	ParameterType	ClassAd &		885293	0					
ANR	885364	Identifier	adToFill		885293	1					
ANR	885365	CFGEntryNode	ENTRY		885293		True				
ANR	885366	CFGExitNode	EXIT		885293		True				
ANR	885367	Symbol	cluster		885293						
ANR	885368	Symbol	proc		885293						
ANR	885369	Symbol	adToFill		885293						
ANR	885370	Symbol	scheddname		885293						
ANR	885371	Symbol	m_gjid		885293						
ANR	885372	Symbol	subproc		885293						
ANR	885373	Function	SubmitEvent :: SubmitEvent	516:0:12463:12603							
ANR	885374	FunctionDef	SubmitEvent :: SubmitEvent ()		885373	0					
ANR	885375	CompoundStatement		517:0:12494:12603	885373	0					
ANR	885376	ExpressionStatement	submitHost = NULL	518:1:12497:12514	885373	0	True				
ANR	885377	AssignmentExpression	submitHost = NULL		885373	0		=			
ANR	885378	Identifier	submitHost		885373	0					
ANR	885379	Identifier	NULL		885373	1					
ANR	885380	ExpressionStatement	submitEventLogNotes = NULL	519:1:12517:12543	885373	1	True				
ANR	885381	AssignmentExpression	submitEventLogNotes = NULL		885373	0		=			
ANR	885382	Identifier	submitEventLogNotes		885373	0					
ANR	885383	Identifier	NULL		885373	1					
ANR	885384	ExpressionStatement	submitEventUserNotes = NULL	520:1:12546:12573	885373	2	True				
ANR	885385	AssignmentExpression	submitEventUserNotes = NULL		885373	0		=			
ANR	885386	Identifier	submitEventUserNotes		885373	0					
ANR	885387	Identifier	NULL		885373	1					
ANR	885388	ExpressionStatement	eventNumber = ULOG_SUBMIT	521:1:12576:12601	885373	3	True				
ANR	885389	AssignmentExpression	eventNumber = ULOG_SUBMIT		885373	0		=			
ANR	885390	Identifier	eventNumber		885373	0					
ANR	885391	Identifier	ULOG_SUBMIT		885373	1					
ANR	885392	Identifier	SubmitEvent :: SubmitEvent		885373	1					
ANR	885393	ParameterList			885373	2					
ANR	885394	CFGEntryNode	ENTRY		885373		True				
ANR	885395	CFGExitNode	EXIT		885373		True				
ANR	885396	Symbol	submitHost		885373						
ANR	885397	Symbol	NULL		885373						
ANR	885398	Symbol	eventNumber		885373						
ANR	885399	Symbol	ULOG_SUBMIT		885373						
ANR	885400	Symbol	submitEventLogNotes		885373						
ANR	885401	Symbol	submitEventUserNotes		885373						
ANR	885402	Function	SubmitEvent :: ~SubmitEvent	524:0:12606:12840							
ANR	885403	FunctionDef	SubmitEvent :: ~SubmitEvent ()		885402	0					
ANR	885404	CompoundStatement		525:0:12638:12840	885402	0					
ANR	885405	IfStatement	if ( submitHost )		885402	0					
ANR	885406	Condition	submitHost	526:5:12645:12654	885402	0	True				
ANR	885407	Identifier	submitHost		885402	0					
ANR	885408	CompoundStatement		2:18:19:19	885402	1					
ANR	885409	Statement	delete	527:2:12662:12667	885402	0	True				
ANR	885410	Statement	[	527:8:12668:12668	885402	1	True				
ANR	885411	Statement	]	527:9:12669:12669	885402	2	True				
ANR	885412	ExpressionStatement	submitHost	527:11:12671:12681	885402	3	True				
ANR	885413	Identifier	submitHost		885402	0					
ANR	885414	IfStatement	if ( submitEventLogNotes )		885402	1					
ANR	885415	Condition	submitEventLogNotes	529:8:12694:12712	885402	0	True				
ANR	885416	Identifier	submitEventLogNotes		885402	0					
ANR	885417	CompoundStatement		5:30:77:77	885402	1					
ANR	885418	Statement	delete	530:8:12726:12731	885402	0	True				
ANR	885419	Statement	[	530:14:12732:12732	885402	1	True				
ANR	885420	Statement	]	530:15:12733:12733	885402	2	True				
ANR	885421	ExpressionStatement	submitEventLogNotes	530:17:12735:12754	885402	3	True				
ANR	885422	Identifier	submitEventLogNotes		885402	0					
ANR	885423	IfStatement	if ( submitEventUserNotes )		885402	2					
ANR	885424	Condition	submitEventUserNotes	532:8:12770:12789	885402	0	True				
ANR	885425	Identifier	submitEventUserNotes		885402	0					
ANR	885426	CompoundStatement		8:31:154:154	885402	1					
ANR	885427	Statement	delete	533:8:12803:12808	885402	0	True				
ANR	885428	Statement	[	533:14:12809:12809	885402	1	True				
ANR	885429	Statement	]	533:15:12810:12810	885402	2	True				
ANR	885430	ExpressionStatement	submitEventUserNotes	533:17:12812:12832	885402	3	True				
ANR	885431	Identifier	submitEventUserNotes		885402	0					
ANR	885432	Identifier	SubmitEvent :: ~SubmitEvent		885402	1					
ANR	885433	ParameterList			885402	2					
ANR	885434	CFGEntryNode	ENTRY		885402		True				
ANR	885435	CFGExitNode	EXIT		885402		True				
ANR	885436	Symbol	submitHost		885402						
ANR	885437	Symbol	submitEventLogNotes		885402						
ANR	885438	Symbol	submitEventUserNotes		885402						
ANR	885439	Function	SubmitEvent :: setSubmitHost	537:0:12843:13044							
ANR	885440	FunctionDef	SubmitEvent :: setSubmitHost (char const * addr)		885439	0					
ANR	885441	CompoundStatement		539:0:12893:13044	885439	0					
ANR	885442	IfStatement	if ( submitHost )		885439	0					
ANR	885443	Condition	submitHost	540:5:12900:12909	885439	0	True				
ANR	885444	Identifier	submitHost		885439	0					
ANR	885445	CompoundStatement		2:18:19:19	885439	1					
ANR	885446	Statement	delete	541:2:12917:12922	885439	0	True				
ANR	885447	Statement	[	541:8:12923:12923	885439	1	True				
ANR	885448	Statement	]	541:9:12924:12924	885439	2	True				
ANR	885449	ExpressionStatement	submitHost	541:11:12926:12936	885439	3	True				
ANR	885450	Identifier	submitHost		885439	0					
ANR	885451	IfStatement	if ( addr )		885439	1					
ANR	885452	Condition	addr	543:5:12946:12949	885439	0	True				
ANR	885453	Identifier	addr		885439	0					
ANR	885454	CompoundStatement		5:12:59:59	885439	1					
ANR	885455	ExpressionStatement	submitHost = strnewp ( addr )	544:2:12957:12983	885439	0	True				
ANR	885456	AssignmentExpression	submitHost = strnewp ( addr )		885439	0		=			
ANR	885457	Identifier	submitHost		885439	0					
ANR	885458	CallExpression	strnewp ( addr )		885439	1					
ANR	885459	Callee	strnewp		885439	0					
ANR	885460	Identifier	strnewp		885439	0					
ANR	885461	ArgumentList	addr		885439	1					
ANR	885462	Argument	addr		885439	0					
ANR	885463	Identifier	addr		885439	0					
ANR	885464	ExpressionStatement	ASSERT ( submitHost )	545:2:12987:13007	885439	1	True				
ANR	885465	CallExpression	ASSERT ( submitHost )		885439	0					
ANR	885466	Callee	ASSERT		885439	0					
ANR	885467	Identifier	ASSERT		885439	0					
ANR	885468	ArgumentList	submitHost		885439	1					
ANR	885469	Argument	submitHost		885439	0					
ANR	885470	Identifier	submitHost		885439	0					
ANR	885471	ElseStatement	else		885439	0					
ANR	885472	CompoundStatement		9:6:124:124	885439	0					
ANR	885473	ExpressionStatement	submitHost = NULL	548:2:13022:13039	885439	0	True				
ANR	885474	AssignmentExpression	submitHost = NULL		885439	0		=			
ANR	885475	Identifier	submitHost		885439	0					
ANR	885476	Identifier	NULL		885439	1					
ANR	885477	ReturnType	void		885439	1					
ANR	885478	Identifier	SubmitEvent :: setSubmitHost		885439	2					
ANR	885479	ParameterList	char const * addr		885439	3					
ANR	885480	Parameter	char const * addr	538:27:12875:12890	885439	0	True				
ANR	885481	ParameterType	char const *		885439	0					
ANR	885482	Identifier	addr		885439	1					
ANR	885483	CFGEntryNode	ENTRY		885439		True				
ANR	885484	CFGExitNode	EXIT		885439		True				
ANR	885485	Symbol	submitHost		885439						
ANR	885486	Symbol	NULL		885439						
ANR	885487	Symbol	strnewp		885439						
ANR	885488	Symbol	addr		885439						
ANR	885489	Function	SubmitEvent :: writeEvent	552:0:13047:13532							
ANR	885490	FunctionDef	SubmitEvent :: writeEvent (FILE * file)		885489	0					
ANR	885491	CompoundStatement		554:0:13088:13532	885489	0					
ANR	885492	IfStatement	if ( ! submitHost )		885489	0					
ANR	885493	Condition	! submitHost	555:5:13095:13105	885489	0	True				
ANR	885494	UnaryOperationExpression	! submitHost		885489	0					
ANR	885495	UnaryOperator	!		885489	0					
ANR	885496	Identifier	submitHost		885489	1					
ANR	885497	CompoundStatement		2:19:20:20	885489	1					
ANR	885498	ExpressionStatement	"setSubmitHost ( """" )"	556:2:13113:13130	885489	0	True				
ANR	885499	CallExpression	"setSubmitHost ( """" )"		885489	0					
ANR	885500	Callee	setSubmitHost		885489	0					
ANR	885501	Identifier	setSubmitHost		885489	0					
ANR	885502	ArgumentList	""""""		885489	1					
ANR	885503	Argument	""""""		885489	0					
ANR	885504	PrimaryExpression	""""""		885489	0					
ANR	885505	IdentifierDeclStatement	"int retval = fprintf ( file , ""Job submitted from host: %s\\n"" , submitHost ) ;"	558:1:13136:13208	885489	1	True				
ANR	885506	IdentifierDecl	"retval = fprintf ( file , ""Job submitted from host: %s\\n"" , submitHost )"		885489	0					
ANR	885507	IdentifierDeclType	int		885489	0					
ANR	885508	Identifier	retval		885489	1					
ANR	885509	AssignmentExpression	"retval = fprintf ( file , ""Job submitted from host: %s\\n"" , submitHost )"		885489	2		=			
ANR	885510	Identifier	retval		885489	0					
ANR	885511	CallExpression	"fprintf ( file , ""Job submitted from host: %s\\n"" , submitHost )"		885489	1					
ANR	885512	Callee	fprintf		885489	0					
ANR	885513	Identifier	fprintf		885489	0					
ANR	885514	ArgumentList	file		885489	1					
ANR	885515	Argument	file		885489	0					
ANR	885516	Identifier	file		885489	0					
ANR	885517	Argument	"""Job submitted from host: %s\\n"""		885489	1					
ANR	885518	PrimaryExpression	"""Job submitted from host: %s\\n"""		885489	0					
ANR	885519	Argument	submitHost		885489	2					
ANR	885520	Identifier	submitHost		885489	0					
ANR	885521	IfStatement	if ( retval < 0 )		885489	2					
ANR	885522	Condition	retval < 0	559:5:13215:13224	885489	0	True				
ANR	885523	RelationalExpression	retval < 0		885489	0		<			
ANR	885524	Identifier	retval		885489	0					
ANR	885525	PrimaryExpression	0		885489	1					
ANR	885526	CompoundStatement		7:1:139:139	885489	1					
ANR	885527	ReturnStatement	return 0 ;	561:2:13232:13240	885489	0	True				
ANR	885528	PrimaryExpression	0		885489	0					
ANR	885529	IfStatement	if ( submitEventLogNotes )		885489	3					
ANR	885530	Condition	submitEventLogNotes	563:5:13250:13268	885489	0	True				
ANR	885531	Identifier	submitEventLogNotes		885489	0					
ANR	885532	CompoundStatement		10:27:183:183	885489	1					
ANR	885533	ExpressionStatement	"retval = fprintf ( file , ""    %.8191s\\n"" , submitEventLogNotes )"	564:2:13276:13338	885489	0	True				
ANR	885534	AssignmentExpression	"retval = fprintf ( file , ""    %.8191s\\n"" , submitEventLogNotes )"		885489	0		=			
ANR	885535	Identifier	retval		885489	0					
ANR	885536	CallExpression	"fprintf ( file , ""    %.8191s\\n"" , submitEventLogNotes )"		885489	1					
ANR	885537	Callee	fprintf		885489	0					
ANR	885538	Identifier	fprintf		885489	0					
ANR	885539	ArgumentList	file		885489	1					
ANR	885540	Argument	file		885489	0					
ANR	885541	Identifier	file		885489	0					
ANR	885542	Argument	"""    %.8191s\\n"""		885489	1					
ANR	885543	PrimaryExpression	"""    %.8191s\\n"""		885489	0					
ANR	885544	Argument	submitEventLogNotes		885489	2					
ANR	885545	Identifier	submitEventLogNotes		885489	0					
ANR	885546	IfStatement	if ( retval < 0 )		885489	1					
ANR	885547	Condition	retval < 0	565:6:13346:13355	885489	0	True				
ANR	885548	RelationalExpression	retval < 0		885489	0		<			
ANR	885549	Identifier	retval		885489	0					
ANR	885550	PrimaryExpression	0		885489	1					
ANR	885551	CompoundStatement		12:19:270:270	885489	1					
ANR	885552	ReturnStatement	return 0 ;	566:3:13364:13372	885489	0	True				
ANR	885553	PrimaryExpression	0		885489	0					
ANR	885554	IfStatement	if ( submitEventUserNotes )		885489	4					
ANR	885555	Condition	submitEventUserNotes	569:5:13386:13405	885489	0	True				
ANR	885556	Identifier	submitEventUserNotes		885489	0					
ANR	885557	CompoundStatement		16:28:320:320	885489	1					
ANR	885558	ExpressionStatement	"retval = fprintf ( file , ""    %.8191s\\n"" , submitEventUserNotes )"	570:2:13413:13476	885489	0	True				
ANR	885559	AssignmentExpression	"retval = fprintf ( file , ""    %.8191s\\n"" , submitEventUserNotes )"		885489	0		=			
ANR	885560	Identifier	retval		885489	0					
ANR	885561	CallExpression	"fprintf ( file , ""    %.8191s\\n"" , submitEventUserNotes )"		885489	1					
ANR	885562	Callee	fprintf		885489	0					
ANR	885563	Identifier	fprintf		885489	0					
ANR	885564	ArgumentList	file		885489	1					
ANR	885565	Argument	file		885489	0					
ANR	885566	Identifier	file		885489	0					
ANR	885567	Argument	"""    %.8191s\\n"""		885489	1					
ANR	885568	PrimaryExpression	"""    %.8191s\\n"""		885489	0					
ANR	885569	Argument	submitEventUserNotes		885489	2					
ANR	885570	Identifier	submitEventUserNotes		885489	0					
ANR	885571	IfStatement	if ( retval < 0 )		885489	1					
ANR	885572	Condition	retval < 0	571:6:13484:13493	885489	0	True				
ANR	885573	RelationalExpression	retval < 0		885489	0		<			
ANR	885574	Identifier	retval		885489	0					
ANR	885575	PrimaryExpression	0		885489	1					
ANR	885576	CompoundStatement		18:19:408:408	885489	1					
ANR	885577	ReturnStatement	return 0 ;	572:3:13502:13510	885489	0	True				
ANR	885578	PrimaryExpression	0		885489	0					
ANR	885579	ReturnStatement	return ( 1 ) ;	575:1:13520:13530	885489	5	True				
ANR	885580	PrimaryExpression	1		885489	0					
ANR	885581	ReturnType	int		885489	1					
ANR	885582	Identifier	SubmitEvent :: writeEvent		885489	2					
ANR	885583	ParameterList	FILE * file		885489	3					
ANR	885584	Parameter	FILE * file	553:25:13076:13085	885489	0	True				
ANR	885585	ParameterType	FILE *		885489	0					
ANR	885586	Identifier	file		885489	1					
ANR	885587	CFGEntryNode	ENTRY		885489		True				
ANR	885588	CFGExitNode	EXIT		885489		True				
ANR	885589	Symbol	submitHost		885489						
ANR	885590	Symbol	file		885489						
ANR	885591	Symbol	submitEventLogNotes		885489						
ANR	885592	Symbol	fprintf		885489						
ANR	885593	Symbol	retval		885489						
ANR	885594	Symbol	submitEventUserNotes		885489						
ANR	885595	Function	SubmitEvent :: readEvent	578:0:13535:15213							
ANR	885596	FunctionDef	SubmitEvent :: readEvent (FILE * file)		885595	0					
ANR	885597	CompoundStatement		580:0:13575:15213	885595	0					
ANR	885598	IdentifierDeclStatement	char s [ 8192 ] ;	581:1:13578:13590	885595	0	True				
ANR	885599	IdentifierDecl	s [ 8192 ]		885595	0					
ANR	885600	IdentifierDeclType	char [ 8192 ]		885595	0					
ANR	885601	Identifier	s		885595	1					
ANR	885602	PrimaryExpression	8192		885595	2					
ANR	885603	ExpressionStatement	s [ 0 ] = '\\0'	582:1:13593:13604	885595	1	True				
ANR	885604	AssignmentExpression	s [ 0 ] = '\\0'		885595	0		=			
ANR	885605	ArrayIndexing	s [ 0 ]		885595	0					
ANR	885606	Identifier	s		885595	0					
ANR	885607	PrimaryExpression	0		885595	1					
ANR	885608	PrimaryExpression	'\\0'		885595	1					
ANR	885609	Statement	delete	583:1:13607:13612	885595	2	True				
ANR	885610	Statement	[	583:7:13613:13613	885595	3	True				
ANR	885611	Statement	]	583:8:13614:13614	885595	4	True				
ANR	885612	ExpressionStatement	submitEventLogNotes	583:10:13616:13635	885595	5	True				
ANR	885613	Identifier	submitEventLogNotes		885595	0					
ANR	885614	ExpressionStatement	submitEventLogNotes = NULL	584:1:13638:13664	885595	6	True				
ANR	885615	AssignmentExpression	submitEventLogNotes = NULL		885595	0		=			
ANR	885616	Identifier	submitEventLogNotes		885595	0					
ANR	885617	Identifier	NULL		885595	1					
ANR	885618	IdentifierDeclStatement	MyString line ;	585:1:13667:13680	885595	7	True				
ANR	885619	IdentifierDecl	line		885595	0					
ANR	885620	IdentifierDeclType	MyString		885595	0					
ANR	885621	Identifier	line		885595	1					
ANR	885622	IfStatement	if ( ! line . readLine ( file ) )		885595	8					
ANR	885623	Condition	! line . readLine ( file )	586:5:13687:13706	885595	0	True				
ANR	885624	UnaryOperationExpression	! line . readLine ( file )		885595	0					
ANR	885625	UnaryOperator	!		885595	0					
ANR	885626	CallExpression	line . readLine ( file )		885595	1					
ANR	885627	Callee	line . readLine		885595	0					
ANR	885628	MemberAccess	line . readLine		885595	0					
ANR	885629	Identifier	line		885595	0					
ANR	885630	Identifier	readLine		885595	1					
ANR	885631	ArgumentList	file		885595	1					
ANR	885632	Argument	file		885595	0					
ANR	885633	Identifier	file		885595	0					
ANR	885634	CompoundStatement		7:28:134:134	885595	1					
ANR	885635	ReturnStatement	return 0 ;	587:2:13714:13722	885595	0	True				
ANR	885636	PrimaryExpression	0		885595	0					
ANR	885637	ExpressionStatement	setSubmitHost ( line . Value ( ) )	589:1:13728:13755	885595	9	True				
ANR	885638	CallExpression	setSubmitHost ( line . Value ( ) )		885595	0					
ANR	885639	Callee	setSubmitHost		885595	0					
ANR	885640	Identifier	setSubmitHost		885595	0					
ANR	885641	ArgumentList	line . Value ( )		885595	1					
ANR	885642	Argument	line . Value ( )		885595	0					
ANR	885643	CallExpression	line . Value ( )		885595	0					
ANR	885644	Callee	line . Value		885595	0					
ANR	885645	MemberAccess	line . Value		885595	0					
ANR	885646	Identifier	line		885595	0					
ANR	885647	Identifier	Value		885595	1					
ANR	885648	ArgumentList			885595	1					
ANR	885649	IfStatement	"if ( sscanf ( line . Value ( ) , ""Job submitted from host: %s\\n"" , submitHost ) != 1 )"		885595	10					
ANR	885650	Condition	"sscanf ( line . Value ( ) , ""Job submitted from host: %s\\n"" , submitHost ) != 1"	590:5:13781:13852	885595	0	True				
ANR	885651	EqualityExpression	"sscanf ( line . Value ( ) , ""Job submitted from host: %s\\n"" , submitHost ) != 1"		885595	0		!=			
ANR	885652	CallExpression	"sscanf ( line . Value ( ) , ""Job submitted from host: %s\\n"" , submitHost )"		885595	0					
ANR	885653	Callee	sscanf		885595	0					
ANR	885654	Identifier	sscanf		885595	0					
ANR	885655	ArgumentList	line . Value ( )		885595	1					
ANR	885656	Argument	line . Value ( )		885595	0					
ANR	885657	CallExpression	line . Value ( )		885595	0					
ANR	885658	Callee	line . Value		885595	0					
ANR	885659	MemberAccess	line . Value		885595	0					
ANR	885660	Identifier	line		885595	0					
ANR	885661	Identifier	Value		885595	1					
ANR	885662	ArgumentList			885595	1					
ANR	885663	Argument	"""Job submitted from host: %s\\n"""		885595	1					
ANR	885664	PrimaryExpression	"""Job submitted from host: %s\\n"""		885595	0					
ANR	885665	Argument	submitHost		885595	2					
ANR	885666	Identifier	submitHost		885595	0					
ANR	885667	PrimaryExpression	1		885595	1					
ANR	885668	CompoundStatement		11:80:280:280	885595	1					
ANR	885669	ReturnStatement	return 0 ;	591:2:13860:13868	885595	0	True				
ANR	885670	PrimaryExpression	0		885595	0					
ANR	885671	IfStatement	"if ( strncmp ( submitHost , ""..."" , 3 ) == 0 )"		885595	11					
ANR	885672	Condition	"strncmp ( submitHost , ""..."" , 3 ) == 0"	596:6:14000:14029	885595	0	True				
ANR	885673	EqualityExpression	"strncmp ( submitHost , ""..."" , 3 ) == 0"		885595	0		==			
ANR	885674	CallExpression	"strncmp ( submitHost , ""..."" , 3 )"		885595	0					
ANR	885675	Callee	strncmp		885595	0					
ANR	885676	Identifier	strncmp		885595	0					
ANR	885677	ArgumentList	submitHost		885595	1					
ANR	885678	Argument	submitHost		885595	0					
ANR	885679	Identifier	submitHost		885595	0					
ANR	885680	Argument	"""..."""		885595	1					
ANR	885681	PrimaryExpression	"""..."""		885595	0					
ANR	885682	Argument	3		885595	2					
ANR	885683	PrimaryExpression	3		885595	0					
ANR	885684	PrimaryExpression	0		885595	1					
ANR	885685	CompoundStatement		17:39:457:457	885595	1					
ANR	885686	ExpressionStatement	submitHost [ 0 ] = '\\0'	597:2:14037:14057	885595	0	True				
ANR	885687	AssignmentExpression	submitHost [ 0 ] = '\\0'		885595	0		=			
ANR	885688	ArrayIndexing	submitHost [ 0 ]		885595	0					
ANR	885689	Identifier	submitHost		885595	0					
ANR	885690	PrimaryExpression	0		885595	1					
ANR	885691	PrimaryExpression	'\\0'		885595	1					
ANR	885692	ExpressionStatement	"fseek ( file , - 4 , SEEK_CUR )"	599:2:14120:14147	885595	1	True				
ANR	885693	CallExpression	"fseek ( file , - 4 , SEEK_CUR )"		885595	0					
ANR	885694	Callee	fseek		885595	0					
ANR	885695	Identifier	fseek		885595	0					
ANR	885696	ArgumentList	file		885595	1					
ANR	885697	Argument	file		885595	0					
ANR	885698	Identifier	file		885595	0					
ANR	885699	Argument	- 4		885595	1					
ANR	885700	UnaryOperationExpression	- 4		885595	0					
ANR	885701	UnaryOperator	-		885595	0					
ANR	885702	PrimaryExpression	4		885595	1					
ANR	885703	Argument	SEEK_CUR		885595	2					
ANR	885704	Identifier	SEEK_CUR		885595	0					
ANR	885705	ReturnStatement	return 1 ;	600:2:14151:14159	885595	2	True				
ANR	885706	PrimaryExpression	1		885595	0					
ANR	885707	IdentifierDeclStatement	fpos_t filep ;	607:1:14338:14350	885595	12	True				
ANR	885708	IdentifierDecl	filep		885595	0					
ANR	885709	IdentifierDeclType	fpos_t		885595	0					
ANR	885710	Identifier	filep		885595	1					
ANR	885711	ExpressionStatement	"fgetpos ( file , & filep )"	608:1:14353:14376	885595	13	True				
ANR	885712	CallExpression	"fgetpos ( file , & filep )"		885595	0					
ANR	885713	Callee	fgetpos		885595	0					
ANR	885714	Identifier	fgetpos		885595	0					
ANR	885715	ArgumentList	file		885595	1					
ANR	885716	Argument	file		885595	0					
ANR	885717	Identifier	file		885595	0					
ANR	885718	Argument	& filep		885595	1					
ANR	885719	UnaryOperationExpression	& filep		885595	0					
ANR	885720	UnaryOperator	&		885595	0					
ANR	885721	Identifier	filep		885595	1					
ANR	885722	IfStatement	"if ( ! fgets ( s , 8192 , file ) || strcmp ( s , ""...\\n"" ) == 0 )"		885595	14					
ANR	885723	Condition	"! fgets ( s , 8192 , file ) || strcmp ( s , ""...\\n"" ) == 0"	610:5:14384:14435	885595	0	True				
ANR	885724	OrExpression	"! fgets ( s , 8192 , file ) || strcmp ( s , ""...\\n"" ) == 0"		885595	0		||			
ANR	885725	UnaryOperationExpression	"! fgets ( s , 8192 , file )"		885595	0					
ANR	885726	UnaryOperator	!		885595	0					
ANR	885727	CallExpression	"fgets ( s , 8192 , file )"		885595	1					
ANR	885728	Callee	fgets		885595	0					
ANR	885729	Identifier	fgets		885595	0					
ANR	885730	ArgumentList	s		885595	1					
ANR	885731	Argument	s		885595	0					
ANR	885732	Identifier	s		885595	0					
ANR	885733	Argument	8192		885595	1					
ANR	885734	PrimaryExpression	8192		885595	0					
ANR	885735	Argument	file		885595	2					
ANR	885736	Identifier	file		885595	0					
ANR	885737	EqualityExpression	"strcmp ( s , ""...\\n"" ) == 0"		885595	1		==			
ANR	885738	CallExpression	"strcmp ( s , ""...\\n"" )"		885595	0					
ANR	885739	Callee	strcmp		885595	0					
ANR	885740	Identifier	strcmp		885595	0					
ANR	885741	ArgumentList	s		885595	1					
ANR	885742	Argument	s		885595	0					
ANR	885743	Identifier	s		885595	0					
ANR	885744	Argument	"""...\\n"""		885595	1					
ANR	885745	PrimaryExpression	"""...\\n"""		885595	0					
ANR	885746	PrimaryExpression	0		885595	1					
ANR	885747	CompoundStatement		31:60:863:863	885595	1					
ANR	885748	ExpressionStatement	"fsetpos ( file , & filep )"	611:2:14443:14466	885595	0	True				
ANR	885749	CallExpression	"fsetpos ( file , & filep )"		885595	0					
ANR	885750	Callee	fsetpos		885595	0					
ANR	885751	Identifier	fsetpos		885595	0					
ANR	885752	ArgumentList	file		885595	1					
ANR	885753	Argument	file		885595	0					
ANR	885754	Identifier	file		885595	0					
ANR	885755	Argument	& filep		885595	1					
ANR	885756	UnaryOperationExpression	& filep		885595	0					
ANR	885757	UnaryOperator	&		885595	0					
ANR	885758	Identifier	filep		885595	1					
ANR	885759	ReturnStatement	return 1 ;	612:2:14470:14478	885595	1	True				
ANR	885760	PrimaryExpression	1		885595	0					
ANR	885761	ExpressionStatement	s [ strlen ( s ) - 1 ] = '\\0'	616:1:14513:14540	885595	15	True				
ANR	885762	AssignmentExpression	s [ strlen ( s ) - 1 ] = '\\0'		885595	0		=			
ANR	885763	ArrayIndexing	s [ strlen ( s ) - 1 ]		885595	0					
ANR	885764	Identifier	s		885595	0					
ANR	885765	AdditiveExpression	strlen ( s ) - 1		885595	1		-			
ANR	885766	CallExpression	strlen ( s )		885595	0					
ANR	885767	Callee	strlen		885595	0					
ANR	885768	Identifier	strlen		885595	0					
ANR	885769	ArgumentList	s		885595	1					
ANR	885770	Argument	s		885595	0					
ANR	885771	Identifier	s		885595	0					
ANR	885772	PrimaryExpression	1		885595	1					
ANR	885773	PrimaryExpression	'\\0'		885595	1					
ANR	885774	IdentifierDeclStatement	char const * strip_s = s ;	620:1:14668:14691	885595	16	True				
ANR	885775	IdentifierDecl	* strip_s = s		885595	0					
ANR	885776	IdentifierDeclType	char const *		885595	0					
ANR	885777	Identifier	strip_s		885595	1					
ANR	885778	AssignmentExpression	* strip_s = s		885595	2		=			
ANR	885779	Identifier	s		885595	0					
ANR	885780	Identifier	s		885595	1					
ANR	885781	WhileStatement	while ( * strip_s && isspace ( * strip_s ) )		885595	17					
ANR	885782	Condition	* strip_s && isspace ( * strip_s )	621:8:14701:14729	885595	0	True				
ANR	885783	AndExpression	* strip_s && isspace ( * strip_s )		885595	0		&&			
ANR	885784	UnaryOperationExpression	* strip_s		885595	0					
ANR	885785	UnaryOperator	*		885595	0					
ANR	885786	Identifier	strip_s		885595	1					
ANR	885787	CallExpression	isspace ( * strip_s )		885595	1					
ANR	885788	Callee	isspace		885595	0					
ANR	885789	Identifier	isspace		885595	0					
ANR	885790	ArgumentList	* strip_s		885595	1					
ANR	885791	Argument	* strip_s		885595	0					
ANR	885792	UnaryOperationExpression	* strip_s		885595	0					
ANR	885793	UnaryOperator	*		885595	0					
ANR	885794	Identifier	strip_s		885595	1					
ANR	885795	CompoundStatement		42:40:1157:1157	885595	1					
ANR	885796	ExpressionStatement	strip_s ++	622:2:14737:14746	885595	0	True				
ANR	885797	PostIncDecOperationExpression	strip_s ++		885595	0					
ANR	885798	Identifier	strip_s		885595	0					
ANR	885799	IncDec	++		885595	1					
ANR	885800	ExpressionStatement	submitEventLogNotes = strnewp ( strip_s )	625:1:14753:14793	885595	18	True				
ANR	885801	AssignmentExpression	submitEventLogNotes = strnewp ( strip_s )		885595	0		=			
ANR	885802	Identifier	submitEventLogNotes		885595	0					
ANR	885803	CallExpression	strnewp ( strip_s )		885595	1					
ANR	885804	Callee	strnewp		885595	0					
ANR	885805	Identifier	strnewp		885595	0					
ANR	885806	ArgumentList	strip_s		885595	1					
ANR	885807	Argument	strip_s		885595	0					
ANR	885808	Identifier	strip_s		885595	0					
ANR	885809	ExpressionStatement	"fgetpos ( file , & filep )"	631:1:14974:14997	885595	19	True				
ANR	885810	CallExpression	"fgetpos ( file , & filep )"		885595	0					
ANR	885811	Callee	fgetpos		885595	0					
ANR	885812	Identifier	fgetpos		885595	0					
ANR	885813	ArgumentList	file		885595	1					
ANR	885814	Argument	file		885595	0					
ANR	885815	Identifier	file		885595	0					
ANR	885816	Argument	& filep		885595	1					
ANR	885817	UnaryOperationExpression	& filep		885595	0					
ANR	885818	UnaryOperator	&		885595	0					
ANR	885819	Identifier	filep		885595	1					
ANR	885820	IfStatement	"if ( ! fgets ( s , 8192 , file ) || strcmp ( s , ""...\\n"" ) == 0 )"		885595	20					
ANR	885821	Condition	"! fgets ( s , 8192 , file ) || strcmp ( s , ""...\\n"" ) == 0"	633:5:15005:15056	885595	0	True				
ANR	885822	OrExpression	"! fgets ( s , 8192 , file ) || strcmp ( s , ""...\\n"" ) == 0"		885595	0		||			
ANR	885823	UnaryOperationExpression	"! fgets ( s , 8192 , file )"		885595	0					
ANR	885824	UnaryOperator	!		885595	0					
ANR	885825	CallExpression	"fgets ( s , 8192 , file )"		885595	1					
ANR	885826	Callee	fgets		885595	0					
ANR	885827	Identifier	fgets		885595	0					
ANR	885828	ArgumentList	s		885595	1					
ANR	885829	Argument	s		885595	0					
ANR	885830	Identifier	s		885595	0					
ANR	885831	Argument	8192		885595	1					
ANR	885832	PrimaryExpression	8192		885595	0					
ANR	885833	Argument	file		885595	2					
ANR	885834	Identifier	file		885595	0					
ANR	885835	EqualityExpression	"strcmp ( s , ""...\\n"" ) == 0"		885595	1		==			
ANR	885836	CallExpression	"strcmp ( s , ""...\\n"" )"		885595	0					
ANR	885837	Callee	strcmp		885595	0					
ANR	885838	Identifier	strcmp		885595	0					
ANR	885839	ArgumentList	s		885595	1					
ANR	885840	Argument	s		885595	0					
ANR	885841	Identifier	s		885595	0					
ANR	885842	Argument	"""...\\n"""		885595	1					
ANR	885843	PrimaryExpression	"""...\\n"""		885595	0					
ANR	885844	PrimaryExpression	0		885595	1					
ANR	885845	CompoundStatement		54:60:1484:1484	885595	1					
ANR	885846	ExpressionStatement	"fsetpos ( file , & filep )"	634:2:15064:15087	885595	0	True				
ANR	885847	CallExpression	"fsetpos ( file , & filep )"		885595	0					
ANR	885848	Callee	fsetpos		885595	0					
ANR	885849	Identifier	fsetpos		885595	0					
ANR	885850	ArgumentList	file		885595	1					
ANR	885851	Argument	file		885595	0					
ANR	885852	Identifier	file		885595	0					
ANR	885853	Argument	& filep		885595	1					
ANR	885854	UnaryOperationExpression	& filep		885595	0					
ANR	885855	UnaryOperator	&		885595	0					
ANR	885856	Identifier	filep		885595	1					
ANR	885857	ReturnStatement	return 1 ;	635:2:15091:15099	885595	1	True				
ANR	885858	PrimaryExpression	1		885595	0					
ANR	885859	ExpressionStatement	s [ strlen ( s ) - 1 ] = '\\0'	639:1:15134:15161	885595	21	True				
ANR	885860	AssignmentExpression	s [ strlen ( s ) - 1 ] = '\\0'		885595	0		=			
ANR	885861	ArrayIndexing	s [ strlen ( s ) - 1 ]		885595	0					
ANR	885862	Identifier	s		885595	0					
ANR	885863	AdditiveExpression	strlen ( s ) - 1		885595	1		-			
ANR	885864	CallExpression	strlen ( s )		885595	0					
ANR	885865	Callee	strlen		885595	0					
ANR	885866	Identifier	strlen		885595	0					
ANR	885867	ArgumentList	s		885595	1					
ANR	885868	Argument	s		885595	0					
ANR	885869	Identifier	s		885595	0					
ANR	885870	PrimaryExpression	1		885595	1					
ANR	885871	PrimaryExpression	'\\0'		885595	1					
ANR	885872	ExpressionStatement	submitEventUserNotes = strnewp ( s )	641:1:15165:15200	885595	22	True				
ANR	885873	AssignmentExpression	submitEventUserNotes = strnewp ( s )		885595	0		=			
ANR	885874	Identifier	submitEventUserNotes		885595	0					
ANR	885875	CallExpression	strnewp ( s )		885595	1					
ANR	885876	Callee	strnewp		885595	0					
ANR	885877	Identifier	strnewp		885595	0					
ANR	885878	ArgumentList	s		885595	1					
ANR	885879	Argument	s		885595	0					
ANR	885880	Identifier	s		885595	0					
ANR	885881	ReturnStatement	return 1 ;	642:1:15203:15211	885595	23	True				
ANR	885882	PrimaryExpression	1		885595	0					
ANR	885883	ReturnType	int		885595	1					
ANR	885884	Identifier	SubmitEvent :: readEvent		885595	2					
ANR	885885	ParameterList	FILE * file		885595	3					
ANR	885886	Parameter	FILE * file	579:24:13563:13572	885595	0	True				
ANR	885887	ParameterType	FILE *		885595	0					
ANR	885888	Identifier	file		885595	1					
ANR	885889	CFGEntryNode	ENTRY		885595		True				
ANR	885890	CFGExitNode	EXIT		885595		True				
ANR	885891	Symbol	line . readLine		885595						
ANR	885892	Symbol	strcmp		885595						
ANR	885893	Symbol	* strip_s		885595						
ANR	885894	Symbol	NULL		885595						
ANR	885895	Symbol	SEEK_CUR		885595						
ANR	885896	Symbol	line . Value		885595						
ANR	885897	Symbol	line		885595						
ANR	885898	Symbol	isspace		885595						
ANR	885899	Symbol	& filep		885595						
ANR	885900	Symbol	fgets		885595						
ANR	885901	Symbol	submitHost		885595						
ANR	885902	Symbol	strncmp		885595						
ANR	885903	Symbol	strlen		885595						
ANR	885904	Symbol	file		885595						
ANR	885905	Symbol	s		885595						
ANR	885906	Symbol	* strlen		885595						
ANR	885907	Symbol	sscanf		885595						
ANR	885908	Symbol	strnewp		885595						
ANR	885909	Symbol	* submitHost		885595						
ANR	885910	Symbol	filep		885595						
ANR	885911	Symbol	strip_s		885595						
ANR	885912	Symbol	submitEventLogNotes		885595						
ANR	885913	Symbol	* s		885595						
ANR	885914	Symbol	submitEventUserNotes		885595						
ANR	885915	Function	SubmitEvent :: toClassAd	645:0:15216:15694							
ANR	885916	FunctionDef	SubmitEvent :: toClassAd ()		885915	0					
ANR	885917	CompoundStatement		647:0:15254:15694	885915	0					
ANR	885918	IdentifierDeclStatement	ClassAd * myad = ULogEvent :: toClassAd ( ) ;	648:1:15257:15295	885915	0	True				
ANR	885919	IdentifierDecl	* myad = ULogEvent :: toClassAd ( )		885915	0					
ANR	885920	IdentifierDeclType	ClassAd *		885915	0					
ANR	885921	Identifier	myad		885915	1					
ANR	885922	AssignmentExpression	* myad = ULogEvent :: toClassAd ( )		885915	2		=			
ANR	885923	Identifier	myad		885915	0					
ANR	885924	CallExpression	ULogEvent :: toClassAd ( )		885915	1					
ANR	885925	Callee	ULogEvent :: toClassAd		885915	0					
ANR	885926	Identifier	ULogEvent :: toClassAd		885915	0					
ANR	885927	ArgumentList			885915	1					
ANR	885928	IfStatement	if ( ! myad )		885915	1					
ANR	885929	Condition	! myad	649:5:15302:15306	885915	0	True				
ANR	885930	UnaryOperationExpression	! myad		885915	0					
ANR	885931	UnaryOperator	!		885915	0					
ANR	885932	Identifier	myad		885915	1					
ANR	885933	ReturnStatement	return NULL ;	649:13:15310:15321	885915	1	True				
ANR	885934	Identifier	NULL		885915	0					
ANR	885935	IfStatement	if ( submitHost && submitHost [ 0 ] )		885915	2					
ANR	885936	Condition	submitHost && submitHost [ 0 ]	651:5:15329:15355	885915	0	True				
ANR	885937	AndExpression	submitHost && submitHost [ 0 ]		885915	0		&&			
ANR	885938	Identifier	submitHost		885915	0					
ANR	885939	ArrayIndexing	submitHost [ 0 ]		885915	1					
ANR	885940	Identifier	submitHost		885915	0					
ANR	885941	PrimaryExpression	0		885915	1					
ANR	885942	CompoundStatement		5:35:104:104	885915	1					
ANR	885943	IfStatement	"if ( ! myad -> Assign ( ""SubmitHost"" , submitHost ) )"		885915	0					
ANR	885944	Condition	"! myad -> Assign ( ""SubmitHost"" , submitHost )"	652:6:15367:15404	885915	0	True				
ANR	885945	UnaryOperationExpression	"! myad -> Assign ( ""SubmitHost"" , submitHost )"		885915	0					
ANR	885946	UnaryOperator	!		885915	0					
ANR	885947	CallExpression	"myad -> Assign ( ""SubmitHost"" , submitHost )"		885915	1					
ANR	885948	Callee	myad -> Assign		885915	0					
ANR	885949	PtrMemberAccess	myad -> Assign		885915	0					
ANR	885950	Identifier	myad		885915	0					
ANR	885951	Identifier	Assign		885915	1					
ANR	885952	ArgumentList	"""SubmitHost"""		885915	1					
ANR	885953	Argument	"""SubmitHost"""		885915	0					
ANR	885954	PrimaryExpression	"""SubmitHost"""		885915	0					
ANR	885955	Argument	submitHost		885915	1					
ANR	885956	Identifier	submitHost		885915	0					
ANR	885957	ReturnStatement	return NULL ;	652:47:15408:15419	885915	1	True				
ANR	885958	Identifier	NULL		885915	0					
ANR	885959	IfStatement	if ( submitEventLogNotes && submitEventLogNotes [ 0 ] )		885915	3					
ANR	885960	Condition	submitEventLogNotes && submitEventLogNotes [ 0 ]	655:5:15430:15474	885915	0	True				
ANR	885961	AndExpression	submitEventLogNotes && submitEventLogNotes [ 0 ]		885915	0		&&			
ANR	885962	Identifier	submitEventLogNotes		885915	0					
ANR	885963	ArrayIndexing	submitEventLogNotes [ 0 ]		885915	1					
ANR	885964	Identifier	submitEventLogNotes		885915	0					
ANR	885965	PrimaryExpression	0		885915	1					
ANR	885966	CompoundStatement		9:53:223:223	885915	1					
ANR	885967	IfStatement	"if ( ! myad -> Assign ( ""LogNotes"" , submitEventLogNotes ) )"		885915	0					
ANR	885968	Condition	"! myad -> Assign ( ""LogNotes"" , submitEventLogNotes )"	656:6:15486:15530	885915	0	True				
ANR	885969	UnaryOperationExpression	"! myad -> Assign ( ""LogNotes"" , submitEventLogNotes )"		885915	0					
ANR	885970	UnaryOperator	!		885915	0					
ANR	885971	CallExpression	"myad -> Assign ( ""LogNotes"" , submitEventLogNotes )"		885915	1					
ANR	885972	Callee	myad -> Assign		885915	0					
ANR	885973	PtrMemberAccess	myad -> Assign		885915	0					
ANR	885974	Identifier	myad		885915	0					
ANR	885975	Identifier	Assign		885915	1					
ANR	885976	ArgumentList	"""LogNotes"""		885915	1					
ANR	885977	Argument	"""LogNotes"""		885915	0					
ANR	885978	PrimaryExpression	"""LogNotes"""		885915	0					
ANR	885979	Argument	submitEventLogNotes		885915	1					
ANR	885980	Identifier	submitEventLogNotes		885915	0					
ANR	885981	ReturnStatement	return NULL ;	656:54:15534:15545	885915	1	True				
ANR	885982	Identifier	NULL		885915	0					
ANR	885983	IfStatement	if ( submitEventUserNotes && submitEventUserNotes [ 0 ] )		885915	4					
ANR	885984	Condition	submitEventUserNotes && submitEventUserNotes [ 0 ]	658:5:15555:15601	885915	0	True				
ANR	885985	AndExpression	submitEventUserNotes && submitEventUserNotes [ 0 ]		885915	0		&&			
ANR	885986	Identifier	submitEventUserNotes		885915	0					
ANR	885987	ArrayIndexing	submitEventUserNotes [ 0 ]		885915	1					
ANR	885988	Identifier	submitEventUserNotes		885915	0					
ANR	885989	PrimaryExpression	0		885915	1					
ANR	885990	CompoundStatement		12:55:350:350	885915	1					
ANR	885991	IfStatement	"if ( ! myad -> Assign ( ""UserNotes"" , submitEventUserNotes ) )"		885915	0					
ANR	885992	Condition	"! myad -> Assign ( ""UserNotes"" , submitEventUserNotes )"	659:6:15613:15659	885915	0	True				
ANR	885993	UnaryOperationExpression	"! myad -> Assign ( ""UserNotes"" , submitEventUserNotes )"		885915	0					
ANR	885994	UnaryOperator	!		885915	0					
ANR	885995	CallExpression	"myad -> Assign ( ""UserNotes"" , submitEventUserNotes )"		885915	1					
ANR	885996	Callee	myad -> Assign		885915	0					
ANR	885997	PtrMemberAccess	myad -> Assign		885915	0					
ANR	885998	Identifier	myad		885915	0					
ANR	885999	Identifier	Assign		885915	1					
ANR	886000	ArgumentList	"""UserNotes"""		885915	1					
ANR	886001	Argument	"""UserNotes"""		885915	0					
ANR	886002	PrimaryExpression	"""UserNotes"""		885915	0					
ANR	886003	Argument	submitEventUserNotes		885915	1					
ANR	886004	Identifier	submitEventUserNotes		885915	0					
ANR	886005	ReturnStatement	return NULL ;	659:56:15663:15674	885915	1	True				
ANR	886006	Identifier	NULL		885915	0					
ANR	886007	ReturnStatement	return myad ;	662:1:15681:15692	885915	5	True				
ANR	886008	Identifier	myad		885915	0					
ANR	886009	ReturnType	ClassAd *		885915	1					
ANR	886010	Identifier	SubmitEvent :: toClassAd		885915	2					
ANR	886011	ParameterList			885915	3					
ANR	886012	CFGEntryNode	ENTRY		885915		True				
ANR	886013	CFGExitNode	EXIT		885915		True				
ANR	886014	Symbol	submitHost		885915						
ANR	886015	Symbol	myad -> Assign		885915						
ANR	886016	Symbol	NULL		885915						
ANR	886017	Symbol	* submitEventUserNotes		885915						
ANR	886018	Symbol	* myad		885915						
ANR	886019	Symbol	* submitHost		885915						
ANR	886020	Symbol	submitEventLogNotes		885915						
ANR	886021	Symbol	myad		885915						
ANR	886022	Symbol	ULogEvent :: toClassAd		885915						
ANR	886023	Symbol	* submitEventLogNotes		885915						
ANR	886024	Symbol	submitEventUserNotes		885915						
ANR	886025	Function	SubmitEvent :: initFromClassAd	665:0:15697:16515							
ANR	886026	FunctionDef	SubmitEvent :: initFromClassAd (ClassAd * ad)		886025	0					
ANR	886027	CompoundStatement		667:0:15744:16515	886025	0					
ANR	886028	ExpressionStatement	ULogEvent :: initFromClassAd ( ad )	668:1:15747:15777	886025	0	True				
ANR	886029	CallExpression	ULogEvent :: initFromClassAd ( ad )		886025	0					
ANR	886030	Callee	ULogEvent :: initFromClassAd		886025	0					
ANR	886031	Identifier	ULogEvent :: initFromClassAd		886025	0					
ANR	886032	ArgumentList	ad		886025	1					
ANR	886033	Argument	ad		886025	0					
ANR	886034	Identifier	ad		886025	0					
ANR	886035	IfStatement	if ( ! ad )		886025	1					
ANR	886036	Condition	! ad	670:5:15785:15787	886025	0	True				
ANR	886037	UnaryOperationExpression	! ad		886025	0					
ANR	886038	UnaryOperator	!		886025	0					
ANR	886039	Identifier	ad		886025	1					
ANR	886040	ReturnStatement	return ;	670:11:15791:15797	886025	1	True				
ANR	886041	IdentifierDeclStatement	char * mallocstr = NULL ;	671:1:15800:15822	886025	2	True				
ANR	886042	IdentifierDecl	* mallocstr = NULL		886025	0					
ANR	886043	IdentifierDeclType	char *		886025	0					
ANR	886044	Identifier	mallocstr		886025	1					
ANR	886045	AssignmentExpression	* mallocstr = NULL		886025	2		=			
ANR	886046	Identifier	NULL		886025	0					
ANR	886047	Identifier	NULL		886025	1					
ANR	886048	ExpressionStatement	"ad -> LookupString ( ""SubmitHost"" , & mallocstr )"	672:1:15825:15867	886025	3	True				
ANR	886049	CallExpression	"ad -> LookupString ( ""SubmitHost"" , & mallocstr )"		886025	0					
ANR	886050	Callee	ad -> LookupString		886025	0					
ANR	886051	PtrMemberAccess	ad -> LookupString		886025	0					
ANR	886052	Identifier	ad		886025	0					
ANR	886053	Identifier	LookupString		886025	1					
ANR	886054	ArgumentList	"""SubmitHost"""		886025	1					
ANR	886055	Argument	"""SubmitHost"""		886025	0					
ANR	886056	PrimaryExpression	"""SubmitHost"""		886025	0					
ANR	886057	Argument	& mallocstr		886025	1					
ANR	886058	UnaryOperationExpression	& mallocstr		886025	0					
ANR	886059	UnaryOperator	&		886025	0					
ANR	886060	Identifier	mallocstr		886025	1					
ANR	886061	IfStatement	if ( mallocstr )		886025	4					
ANR	886062	Condition	mallocstr	673:5:15874:15882	886025	0	True				
ANR	886063	Identifier	mallocstr		886025	0					
ANR	886064	CompoundStatement		7:17:141:141	886025	1					
ANR	886065	ExpressionStatement	setSubmitHost ( mallocstr )	674:2:15890:15914	886025	0	True				
ANR	886066	CallExpression	setSubmitHost ( mallocstr )		886025	0					
ANR	886067	Callee	setSubmitHost		886025	0					
ANR	886068	Identifier	setSubmitHost		886025	0					
ANR	886069	ArgumentList	mallocstr		886025	1					
ANR	886070	Argument	mallocstr		886025	0					
ANR	886071	Identifier	mallocstr		886025	0					
ANR	886072	ExpressionStatement	free ( mallocstr )	675:2:15918:15933	886025	1	True				
ANR	886073	CallExpression	free ( mallocstr )		886025	0					
ANR	886074	Callee	free		886025	0					
ANR	886075	Identifier	free		886025	0					
ANR	886076	ArgumentList	mallocstr		886025	1					
ANR	886077	Argument	mallocstr		886025	0					
ANR	886078	Identifier	mallocstr		886025	0					
ANR	886079	ExpressionStatement	mallocstr = NULL	676:2:15937:15953	886025	2	True				
ANR	886080	AssignmentExpression	mallocstr = NULL		886025	0		=			
ANR	886081	Identifier	mallocstr		886025	0					
ANR	886082	Identifier	NULL		886025	1					
ANR	886083	ExpressionStatement	"ad -> LookupString ( ""LogNotes"" , & mallocstr )"	680:1:16033:16073	886025	5	True				
ANR	886084	CallExpression	"ad -> LookupString ( ""LogNotes"" , & mallocstr )"		886025	0					
ANR	886085	Callee	ad -> LookupString		886025	0					
ANR	886086	PtrMemberAccess	ad -> LookupString		886025	0					
ANR	886087	Identifier	ad		886025	0					
ANR	886088	Identifier	LookupString		886025	1					
ANR	886089	ArgumentList	"""LogNotes"""		886025	1					
ANR	886090	Argument	"""LogNotes"""		886025	0					
ANR	886091	PrimaryExpression	"""LogNotes"""		886025	0					
ANR	886092	Argument	& mallocstr		886025	1					
ANR	886093	UnaryOperationExpression	& mallocstr		886025	0					
ANR	886094	UnaryOperator	&		886025	0					
ANR	886095	Identifier	mallocstr		886025	1					
ANR	886096	IfStatement	if ( mallocstr )		886025	6					
ANR	886097	Condition	mallocstr	681:5:16080:16088	886025	0	True				
ANR	886098	Identifier	mallocstr		886025	0					
ANR	886099	CompoundStatement		15:17:347:347	886025	1					
ANR	886100	ExpressionStatement	submitEventLogNotes = new char [ strlen ( mallocstr ) + 1 ]	682:2:16096:16149	886025	0	True				
ANR	886101	AssignmentExpression	submitEventLogNotes = new char [ strlen ( mallocstr ) + 1 ]		886025	0		=			
ANR	886102	Identifier	submitEventLogNotes		886025	0					
ANR	886103	AdditiveExpression	strlen ( mallocstr ) + 1		886025	1		+			
ANR	886104	CallExpression	strlen ( mallocstr )		886025	0					
ANR	886105	Callee	strlen		886025	0					
ANR	886106	Identifier	strlen		886025	0					
ANR	886107	ArgumentList	mallocstr		886025	1					
ANR	886108	Argument	mallocstr		886025	0					
ANR	886109	Identifier	mallocstr		886025	0					
ANR	886110	PrimaryExpression	1		886025	1					
ANR	886111	ExpressionStatement	"strcpy ( submitEventLogNotes , mallocstr )"	683:2:16153:16191	886025	1	True				
ANR	886112	CallExpression	"strcpy ( submitEventLogNotes , mallocstr )"		886025	0					
ANR	886113	Callee	strcpy		886025	0					
ANR	886114	Identifier	strcpy		886025	0					
ANR	886115	ArgumentList	submitEventLogNotes		886025	1					
ANR	886116	Argument	submitEventLogNotes		886025	0					
ANR	886117	Identifier	submitEventLogNotes		886025	0					
ANR	886118	Argument	mallocstr		886025	1					
ANR	886119	Identifier	mallocstr		886025	0					
ANR	886120	ExpressionStatement	free ( mallocstr )	684:2:16195:16210	886025	2	True				
ANR	886121	CallExpression	free ( mallocstr )		886025	0					
ANR	886122	Callee	free		886025	0					
ANR	886123	Identifier	free		886025	0					
ANR	886124	ArgumentList	mallocstr		886025	1					
ANR	886125	Argument	mallocstr		886025	0					
ANR	886126	Identifier	mallocstr		886025	0					
ANR	886127	ExpressionStatement	mallocstr = NULL	685:2:16214:16230	886025	3	True				
ANR	886128	AssignmentExpression	mallocstr = NULL		886025	0		=			
ANR	886129	Identifier	mallocstr		886025	0					
ANR	886130	Identifier	NULL		886025	1					
ANR	886131	ExpressionStatement	"ad -> LookupString ( ""UserNotes"" , & mallocstr )"	689:1:16310:16351	886025	7	True				
ANR	886132	CallExpression	"ad -> LookupString ( ""UserNotes"" , & mallocstr )"		886025	0					
ANR	886133	Callee	ad -> LookupString		886025	0					
ANR	886134	PtrMemberAccess	ad -> LookupString		886025	0					
ANR	886135	Identifier	ad		886025	0					
ANR	886136	Identifier	LookupString		886025	1					
ANR	886137	ArgumentList	"""UserNotes"""		886025	1					
ANR	886138	Argument	"""UserNotes"""		886025	0					
ANR	886139	PrimaryExpression	"""UserNotes"""		886025	0					
ANR	886140	Argument	& mallocstr		886025	1					
ANR	886141	UnaryOperationExpression	& mallocstr		886025	0					
ANR	886142	UnaryOperator	&		886025	0					
ANR	886143	Identifier	mallocstr		886025	1					
ANR	886144	IfStatement	if ( mallocstr )		886025	8					
ANR	886145	Condition	mallocstr	690:5:16358:16366	886025	0	True				
ANR	886146	Identifier	mallocstr		886025	0					
ANR	886147	CompoundStatement		24:17:625:625	886025	1					
ANR	886148	ExpressionStatement	submitEventUserNotes = new char [ strlen ( mallocstr ) + 1 ]	691:2:16374:16428	886025	0	True				
ANR	886149	AssignmentExpression	submitEventUserNotes = new char [ strlen ( mallocstr ) + 1 ]		886025	0		=			
ANR	886150	Identifier	submitEventUserNotes		886025	0					
ANR	886151	AdditiveExpression	strlen ( mallocstr ) + 1		886025	1		+			
ANR	886152	CallExpression	strlen ( mallocstr )		886025	0					
ANR	886153	Callee	strlen		886025	0					
ANR	886154	Identifier	strlen		886025	0					
ANR	886155	ArgumentList	mallocstr		886025	1					
ANR	886156	Argument	mallocstr		886025	0					
ANR	886157	Identifier	mallocstr		886025	0					
ANR	886158	PrimaryExpression	1		886025	1					
ANR	886159	ExpressionStatement	"strcpy ( submitEventUserNotes , mallocstr )"	692:2:16432:16471	886025	1	True				
ANR	886160	CallExpression	"strcpy ( submitEventUserNotes , mallocstr )"		886025	0					
ANR	886161	Callee	strcpy		886025	0					
ANR	886162	Identifier	strcpy		886025	0					
ANR	886163	ArgumentList	submitEventUserNotes		886025	1					
ANR	886164	Argument	submitEventUserNotes		886025	0					
ANR	886165	Identifier	submitEventUserNotes		886025	0					
ANR	886166	Argument	mallocstr		886025	1					
ANR	886167	Identifier	mallocstr		886025	0					
ANR	886168	ExpressionStatement	free ( mallocstr )	693:2:16475:16490	886025	2	True				
ANR	886169	CallExpression	free ( mallocstr )		886025	0					
ANR	886170	Callee	free		886025	0					
ANR	886171	Identifier	free		886025	0					
ANR	886172	ArgumentList	mallocstr		886025	1					
ANR	886173	Argument	mallocstr		886025	0					
ANR	886174	Identifier	mallocstr		886025	0					
ANR	886175	ExpressionStatement	mallocstr = NULL	694:2:16494:16510	886025	3	True				
ANR	886176	AssignmentExpression	mallocstr = NULL		886025	0		=			
ANR	886177	Identifier	mallocstr		886025	0					
ANR	886178	Identifier	NULL		886025	1					
ANR	886179	ReturnType	void		886025	1					
ANR	886180	Identifier	SubmitEvent :: initFromClassAd		886025	2					
ANR	886181	ParameterList	ClassAd * ad		886025	3					
ANR	886182	Parameter	ClassAd * ad	666:29:15731:15741	886025	0	True				
ANR	886183	ParameterType	ClassAd *		886025	0					
ANR	886184	Identifier	ad		886025	1					
ANR	886185	CFGEntryNode	ENTRY		886025		True				
ANR	886186	CFGExitNode	EXIT		886025		True				
ANR	886187	Symbol	strlen		886025						
ANR	886188	Symbol	& mallocstr		886025						
ANR	886189	Symbol	ad		886025						
ANR	886190	Symbol	NULL		886025						
ANR	886191	Symbol	mallocstr		886025						
ANR	886192	Symbol	submitEventLogNotes		886025						
ANR	886193	Symbol	submitEventUserNotes		886025						
ANR	886194	Function	GlobusSubmitEvent :: GlobusSubmitEvent	699:0:16555:16697							
ANR	886195	FunctionDef	GlobusSubmitEvent :: GlobusSubmitEvent ()		886194	0					
ANR	886196	CompoundStatement		700:0:16598:16697	886194	0					
ANR	886197	ExpressionStatement	eventNumber = ULOG_GLOBUS_SUBMIT	701:1:16601:16633	886194	0	True				
ANR	886198	AssignmentExpression	eventNumber = ULOG_GLOBUS_SUBMIT		886194	0		=			
ANR	886199	Identifier	eventNumber		886194	0					
ANR	886200	Identifier	ULOG_GLOBUS_SUBMIT		886194	1					
ANR	886201	ExpressionStatement	rmContact = NULL	702:1:16636:16652	886194	1	True				
ANR	886202	AssignmentExpression	rmContact = NULL		886194	0		=			
ANR	886203	Identifier	rmContact		886194	0					
ANR	886204	Identifier	NULL		886194	1					
ANR	886205	ExpressionStatement	jmContact = NULL	703:1:16655:16671	886194	2	True				
ANR	886206	AssignmentExpression	jmContact = NULL		886194	0		=			
ANR	886207	Identifier	jmContact		886194	0					
ANR	886208	Identifier	NULL		886194	1					
ANR	886209	ExpressionStatement	restartableJM = false	704:1:16674:16695	886194	3	True				
ANR	886210	AssignmentExpression	restartableJM = false		886194	0		=			
ANR	886211	Identifier	restartableJM		886194	0					
ANR	886212	Identifier	false		886194	1					
ANR	886213	Identifier	GlobusSubmitEvent :: GlobusSubmitEvent		886194	1					
ANR	886214	ParameterList			886194	2					
ANR	886215	CFGEntryNode	ENTRY		886194		True				
ANR	886216	CFGExitNode	EXIT		886194		True				
ANR	886217	Symbol	NULL		886194						
ANR	886218	Symbol	eventNumber		886194						
ANR	886219	Symbol	ULOG_GLOBUS_SUBMIT		886194						
ANR	886220	Symbol	jmContact		886194						
ANR	886221	Symbol	false		886194						
ANR	886222	Symbol	restartableJM		886194						
ANR	886223	Symbol	rmContact		886194						
ANR	886224	Function	GlobusSubmitEvent :: ~GlobusSubmitEvent	707:0:16700:16788							
ANR	886225	FunctionDef	GlobusSubmitEvent :: ~GlobusSubmitEvent ()		886224	0					
ANR	886226	CompoundStatement		708:0:16744:16788	886224	0					
ANR	886227	Statement	delete	709:1:16747:16752	886224	0	True				
ANR	886228	Statement	[	709:7:16753:16753	886224	1	True				
ANR	886229	Statement	]	709:8:16754:16754	886224	2	True				
ANR	886230	ExpressionStatement	rmContact	709:10:16756:16765	886224	3	True				
ANR	886231	Identifier	rmContact		886224	0					
ANR	886232	Statement	delete	710:1:16768:16773	886224	4	True				
ANR	886233	Statement	[	710:7:16774:16774	886224	5	True				
ANR	886234	Statement	]	710:8:16775:16775	886224	6	True				
ANR	886235	ExpressionStatement	jmContact	710:10:16777:16786	886224	7	True				
ANR	886236	Identifier	jmContact		886224	0					
ANR	886237	Identifier	GlobusSubmitEvent :: ~GlobusSubmitEvent		886224	1					
ANR	886238	ParameterList			886224	2					
ANR	886239	CFGEntryNode	ENTRY		886224		True				
ANR	886240	CFGExitNode	EXIT		886224		True				
ANR	886241	Function	GlobusSubmitEvent :: writeEvent	713:0:16791:17455							
ANR	886242	FunctionDef	GlobusSubmitEvent :: writeEvent (FILE * file)		886241	0					
ANR	886243	CompoundStatement		714:0:16838:17455	886241	0					
ANR	886244	IdentifierDeclStatement	"const char * unknown = ""UNKNOWN"" ;"	715:1:16841:16873	886241	0	True				
ANR	886245	IdentifierDecl	"* unknown = ""UNKNOWN"""		886241	0					
ANR	886246	IdentifierDeclType	const char *		886241	0					
ANR	886247	Identifier	unknown		886241	1					
ANR	886248	AssignmentExpression	"* unknown = ""UNKNOWN"""		886241	2		=			
ANR	886249	Identifier	unknown		886241	0					
ANR	886250	PrimaryExpression	"""UNKNOWN"""		886241	1					
ANR	886251	IdentifierDeclStatement	const char * rm = unknown ;	716:1:16876:16901	886241	1	True				
ANR	886252	IdentifierDecl	* rm = unknown		886241	0					
ANR	886253	IdentifierDeclType	const char *		886241	0					
ANR	886254	Identifier	rm		886241	1					
ANR	886255	AssignmentExpression	* rm = unknown		886241	2		=			
ANR	886256	Identifier	unknown		886241	0					
ANR	886257	Identifier	unknown		886241	1					
ANR	886258	IdentifierDeclStatement	const char * jm = unknown ;	717:1:16904:16929	886241	2	True				
ANR	886259	IdentifierDecl	* jm = unknown		886241	0					
ANR	886260	IdentifierDeclType	const char *		886241	0					
ANR	886261	Identifier	jm		886241	1					
ANR	886262	AssignmentExpression	* jm = unknown		886241	2		=			
ANR	886263	Identifier	unknown		886241	0					
ANR	886264	Identifier	unknown		886241	1					
ANR	886265	IdentifierDeclStatement	"int retval = fprintf ( file , ""Job submitted to Globus\\n"" ) ;"	719:1:16933:16989	886241	3	True				
ANR	886266	IdentifierDecl	"retval = fprintf ( file , ""Job submitted to Globus\\n"" )"		886241	0					
ANR	886267	IdentifierDeclType	int		886241	0					
ANR	886268	Identifier	retval		886241	1					
ANR	886269	AssignmentExpression	"retval = fprintf ( file , ""Job submitted to Globus\\n"" )"		886241	2		=			
ANR	886270	Identifier	retval		886241	0					
ANR	886271	CallExpression	"fprintf ( file , ""Job submitted to Globus\\n"" )"		886241	1					
ANR	886272	Callee	fprintf		886241	0					
ANR	886273	Identifier	fprintf		886241	0					
ANR	886274	ArgumentList	file		886241	1					
ANR	886275	Argument	file		886241	0					
ANR	886276	Identifier	file		886241	0					
ANR	886277	Argument	"""Job submitted to Globus\\n"""		886241	1					
ANR	886278	PrimaryExpression	"""Job submitted to Globus\\n"""		886241	0					
ANR	886279	IfStatement	if ( retval < 0 )		886241	4					
ANR	886280	Condition	retval < 0	720:5:16996:17005	886241	0	True				
ANR	886281	RelationalExpression	retval < 0		886241	0		<			
ANR	886282	Identifier	retval		886241	0					
ANR	886283	PrimaryExpression	0		886241	1					
ANR	886284	CompoundStatement		8:1:170:170	886241	1					
ANR	886285	ReturnStatement	return 0 ;	722:2:17013:17021	886241	0	True				
ANR	886286	PrimaryExpression	0		886241	0					
ANR	886287	IfStatement	if ( rmContact )		886241	5					
ANR	886288	Condition	rmContact	725:6:17033:17041	886241	0	True				
ANR	886289	Identifier	rmContact		886241	0					
ANR	886290	ExpressionStatement	rm = rmContact	725:18:17045:17059	886241	1	True				
ANR	886291	AssignmentExpression	rm = rmContact		886241	0		=			
ANR	886292	Identifier	rm		886241	0					
ANR	886293	Identifier	rmContact		886241	1					
ANR	886294	IfStatement	if ( jmContact )		886241	6					
ANR	886295	Condition	jmContact	726:6:17067:17075	886241	0	True				
ANR	886296	Identifier	jmContact		886241	0					
ANR	886297	ExpressionStatement	jm = jmContact	726:18:17079:17093	886241	1	True				
ANR	886298	AssignmentExpression	jm = jmContact		886241	0		=			
ANR	886299	Identifier	jm		886241	0					
ANR	886300	Identifier	jmContact		886241	1					
ANR	886301	ExpressionStatement	"retval = fprintf ( file , ""    RM-Contact: %.8191s\\n"" , rm )"	728:1:17097:17154	886241	7	True				
ANR	886302	AssignmentExpression	"retval = fprintf ( file , ""    RM-Contact: %.8191s\\n"" , rm )"		886241	0		=			
ANR	886303	Identifier	retval		886241	0					
ANR	886304	CallExpression	"fprintf ( file , ""    RM-Contact: %.8191s\\n"" , rm )"		886241	1					
ANR	886305	Callee	fprintf		886241	0					
ANR	886306	Identifier	fprintf		886241	0					
ANR	886307	ArgumentList	file		886241	1					
ANR	886308	Argument	file		886241	0					
ANR	886309	Identifier	file		886241	0					
ANR	886310	Argument	"""    RM-Contact: %.8191s\\n"""		886241	1					
ANR	886311	PrimaryExpression	"""    RM-Contact: %.8191s\\n"""		886241	0					
ANR	886312	Argument	rm		886241	2					
ANR	886313	Identifier	rm		886241	0					
ANR	886314	IfStatement	if ( retval < 0 )		886241	8					
ANR	886315	Condition	retval < 0	729:5:17161:17170	886241	0	True				
ANR	886316	RelationalExpression	retval < 0		886241	0		<			
ANR	886317	Identifier	retval		886241	0					
ANR	886318	PrimaryExpression	0		886241	1					
ANR	886319	CompoundStatement		16:18:335:335	886241	1					
ANR	886320	ReturnStatement	return 0 ;	730:2:17178:17186	886241	0	True				
ANR	886321	PrimaryExpression	0		886241	0					
ANR	886322	ExpressionStatement	"retval = fprintf ( file , ""    JM-Contact: %.8191s\\n"" , jm )"	733:1:17193:17250	886241	9	True				
ANR	886323	AssignmentExpression	"retval = fprintf ( file , ""    JM-Contact: %.8191s\\n"" , jm )"		886241	0		=			
ANR	886324	Identifier	retval		886241	0					
ANR	886325	CallExpression	"fprintf ( file , ""    JM-Contact: %.8191s\\n"" , jm )"		886241	1					
ANR	886326	Callee	fprintf		886241	0					
ANR	886327	Identifier	fprintf		886241	0					
ANR	886328	ArgumentList	file		886241	1					
ANR	886329	Argument	file		886241	0					
ANR	886330	Identifier	file		886241	0					
ANR	886331	Argument	"""    JM-Contact: %.8191s\\n"""		886241	1					
ANR	886332	PrimaryExpression	"""    JM-Contact: %.8191s\\n"""		886241	0					
ANR	886333	Argument	jm		886241	2					
ANR	886334	Identifier	jm		886241	0					
ANR	886335	IfStatement	if ( retval < 0 )		886241	10					
ANR	886336	Condition	retval < 0	734:5:17257:17266	886241	0	True				
ANR	886337	RelationalExpression	retval < 0		886241	0		<			
ANR	886338	Identifier	retval		886241	0					
ANR	886339	PrimaryExpression	0		886241	1					
ANR	886340	CompoundStatement		21:18:431:431	886241	1					
ANR	886341	ReturnStatement	return 0 ;	735:2:17274:17282	886241	0	True				
ANR	886342	PrimaryExpression	0		886241	0					
ANR	886343	IdentifierDeclStatement	int newjm = 0 ;	738:1:17289:17302	886241	11	True				
ANR	886344	IdentifierDecl	newjm = 0		886241	0					
ANR	886345	IdentifierDeclType	int		886241	0					
ANR	886346	Identifier	newjm		886241	1					
ANR	886347	AssignmentExpression	newjm = 0		886241	2		=			
ANR	886348	Identifier	newjm		886241	0					
ANR	886349	PrimaryExpression	0		886241	1					
ANR	886350	IfStatement	if ( restartableJM )		886241	12					
ANR	886351	Condition	restartableJM	739:6:17310:17322	886241	0	True				
ANR	886352	Identifier	restartableJM		886241	0					
ANR	886353	CompoundStatement		26:22:487:487	886241	1					
ANR	886354	ExpressionStatement	newjm = 1	740:2:17330:17339	886241	0	True				
ANR	886355	AssignmentExpression	newjm = 1		886241	0		=			
ANR	886356	Identifier	newjm		886241	0					
ANR	886357	PrimaryExpression	1		886241	1					
ANR	886358	ExpressionStatement	"retval = fprintf ( file , ""    Can-Restart-JM: %d\\n"" , newjm )"	742:1:17345:17404	886241	13	True				
ANR	886359	AssignmentExpression	"retval = fprintf ( file , ""    Can-Restart-JM: %d\\n"" , newjm )"		886241	0		=			
ANR	886360	Identifier	retval		886241	0					
ANR	886361	CallExpression	"fprintf ( file , ""    Can-Restart-JM: %d\\n"" , newjm )"		886241	1					
ANR	886362	Callee	fprintf		886241	0					
ANR	886363	Identifier	fprintf		886241	0					
ANR	886364	ArgumentList	file		886241	1					
ANR	886365	Argument	file		886241	0					
ANR	886366	Identifier	file		886241	0					
ANR	886367	Argument	"""    Can-Restart-JM: %d\\n"""		886241	1					
ANR	886368	PrimaryExpression	"""    Can-Restart-JM: %d\\n"""		886241	0					
ANR	886369	Argument	newjm		886241	2					
ANR	886370	Identifier	newjm		886241	0					
ANR	886371	IfStatement	if ( retval < 0 )		886241	14					
ANR	886372	Condition	retval < 0	743:5:17411:17420	886241	0	True				
ANR	886373	RelationalExpression	retval < 0		886241	0		<			
ANR	886374	Identifier	retval		886241	0					
ANR	886375	PrimaryExpression	0		886241	1					
ANR	886376	CompoundStatement		30:18:585:585	886241	1					
ANR	886377	ReturnStatement	return 0 ;	744:2:17428:17436	886241	0	True				
ANR	886378	PrimaryExpression	0		886241	0					
ANR	886379	ReturnStatement	return ( 1 ) ;	747:1:17443:17453	886241	15	True				
ANR	886380	PrimaryExpression	1		886241	0					
ANR	886381	ReturnType	int		886241	1					
ANR	886382	Identifier	GlobusSubmitEvent :: writeEvent		886241	2					
ANR	886383	ParameterList	FILE * file		886241	3					
ANR	886384	Parameter	FILE * file	713:35:16826:16835	886241	0	True				
ANR	886385	ParameterType	FILE *		886241	0					
ANR	886386	Identifier	file		886241	1					
ANR	886387	CFGEntryNode	ENTRY		886241		True				
ANR	886388	CFGExitNode	EXIT		886241		True				
ANR	886389	Symbol	file		886241						
ANR	886390	Symbol	jm		886241						
ANR	886391	Symbol	jmContact		886241						
ANR	886392	Symbol	rm		886241						
ANR	886393	Symbol	restartableJM		886241						
ANR	886394	Symbol	rmContact		886241						
ANR	886395	Symbol	fprintf		886241						
ANR	886396	Symbol	retval		886241						
ANR	886397	Symbol	newjm		886241						
ANR	886398	Symbol	unknown		886241						
ANR	886399	Function	GlobusSubmitEvent :: readEvent	750:0:17458:18166							
ANR	886400	FunctionDef	GlobusSubmitEvent :: readEvent (FILE * file)		886399	0					
ANR	886401	CompoundStatement		751:0:17504:18166	886399	0					
ANR	886402	IdentifierDeclStatement	char s [ 8192 ] ;	752:1:17507:17519	886399	0	True				
ANR	886403	IdentifierDecl	s [ 8192 ]		886399	0					
ANR	886404	IdentifierDeclType	char [ 8192 ]		886399	0					
ANR	886405	Identifier	s		886399	1					
ANR	886406	PrimaryExpression	8192		886399	2					
ANR	886407	Statement	delete	754:1:17523:17528	886399	1	True				
ANR	886408	Statement	[	754:7:17529:17529	886399	2	True				
ANR	886409	Statement	]	754:8:17530:17530	886399	3	True				
ANR	886410	ExpressionStatement	rmContact	754:10:17532:17541	886399	4	True				
ANR	886411	Identifier	rmContact		886399	0					
ANR	886412	Statement	delete	755:1:17544:17549	886399	5	True				
ANR	886413	Statement	[	755:7:17550:17550	886399	6	True				
ANR	886414	Statement	]	755:8:17551:17551	886399	7	True				
ANR	886415	ExpressionStatement	jmContact	755:10:17553:17562	886399	8	True				
ANR	886416	Identifier	jmContact		886399	0					
ANR	886417	ExpressionStatement	rmContact = NULL	756:1:17565:17581	886399	9	True				
ANR	886418	AssignmentExpression	rmContact = NULL		886399	0		=			
ANR	886419	Identifier	rmContact		886399	0					
ANR	886420	Identifier	NULL		886399	1					
ANR	886421	ExpressionStatement	jmContact = NULL	757:1:17584:17600	886399	10	True				
ANR	886422	AssignmentExpression	jmContact = NULL		886399	0		=			
ANR	886423	Identifier	jmContact		886399	0					
ANR	886424	Identifier	NULL		886399	1					
ANR	886425	IdentifierDeclStatement	"int retval = fscanf ( file , ""Job submitted to Globus\\n"" ) ;"	758:1:17603:17658	886399	11	True				
ANR	886426	IdentifierDecl	"retval = fscanf ( file , ""Job submitted to Globus\\n"" )"		886399	0					
ANR	886427	IdentifierDeclType	int		886399	0					
ANR	886428	Identifier	retval		886399	1					
ANR	886429	AssignmentExpression	"retval = fscanf ( file , ""Job submitted to Globus\\n"" )"		886399	2		=			
ANR	886430	Identifier	retval		886399	0					
ANR	886431	CallExpression	"fscanf ( file , ""Job submitted to Globus\\n"" )"		886399	1					
ANR	886432	Callee	fscanf		886399	0					
ANR	886433	Identifier	fscanf		886399	0					
ANR	886434	ArgumentList	file		886399	1					
ANR	886435	Argument	file		886399	0					
ANR	886436	Identifier	file		886399	0					
ANR	886437	Argument	"""Job submitted to Globus\\n"""		886399	1					
ANR	886438	PrimaryExpression	"""Job submitted to Globus\\n"""		886399	0					
ANR	886439	IfStatement	if ( retval != 0 )		886399	12					
ANR	886440	Condition	retval != 0	759:8:17668:17678	886399	0	True				
ANR	886441	EqualityExpression	retval != 0		886399	0		!=			
ANR	886442	Identifier	retval		886399	0					
ANR	886443	PrimaryExpression	0		886399	1					
ANR	886444	CompoundStatement		10:4:180:180	886399	1					
ANR	886445	ReturnStatement	return 0 ;	761:2:17689:17697	886399	0	True				
ANR	886446	PrimaryExpression	0		886399	0					
ANR	886447	ExpressionStatement	s [ 0 ] = '\\0'	763:1:17706:17717	886399	13	True				
ANR	886448	AssignmentExpression	s [ 0 ] = '\\0'		886399	0		=			
ANR	886449	ArrayIndexing	s [ 0 ]		886399	0					
ANR	886450	Identifier	s		886399	0					
ANR	886451	PrimaryExpression	0		886399	1					
ANR	886452	PrimaryExpression	'\\0'		886399	1					
ANR	886453	ExpressionStatement	"retval = fscanf ( file , ""    RM-Contact: %8191s\\n"" , s )"	764:1:17720:17774	886399	14	True				
ANR	886454	AssignmentExpression	"retval = fscanf ( file , ""    RM-Contact: %8191s\\n"" , s )"		886399	0		=			
ANR	886455	Identifier	retval		886399	0					
ANR	886456	CallExpression	"fscanf ( file , ""    RM-Contact: %8191s\\n"" , s )"		886399	1					
ANR	886457	Callee	fscanf		886399	0					
ANR	886458	Identifier	fscanf		886399	0					
ANR	886459	ArgumentList	file		886399	1					
ANR	886460	Argument	file		886399	0					
ANR	886461	Identifier	file		886399	0					
ANR	886462	Argument	"""    RM-Contact: %8191s\\n"""		886399	1					
ANR	886463	PrimaryExpression	"""    RM-Contact: %8191s\\n"""		886399	0					
ANR	886464	Argument	s		886399	2					
ANR	886465	Identifier	s		886399	0					
ANR	886466	IfStatement	if ( retval != 1 )		886399	15					
ANR	886467	Condition	retval != 1	765:6:17782:17792	886399	0	True				
ANR	886468	EqualityExpression	retval != 1		886399	0		!=			
ANR	886469	Identifier	retval		886399	0					
ANR	886470	PrimaryExpression	1		886399	1					
ANR	886471	CompoundStatement		16:1:292:292	886399	1					
ANR	886472	ReturnStatement	return 0 ;	767:2:17801:17809	886399	0	True				
ANR	886473	PrimaryExpression	0		886399	0					
ANR	886474	ExpressionStatement	rmContact = strnewp ( s )	769:1:17815:17837	886399	16	True				
ANR	886475	AssignmentExpression	rmContact = strnewp ( s )		886399	0		=			
ANR	886476	Identifier	rmContact		886399	0					
ANR	886477	CallExpression	strnewp ( s )		886399	1					
ANR	886478	Callee	strnewp		886399	0					
ANR	886479	Identifier	strnewp		886399	0					
ANR	886480	ArgumentList	s		886399	1					
ANR	886481	Argument	s		886399	0					
ANR	886482	Identifier	s		886399	0					
ANR	886483	ExpressionStatement	"retval = fscanf ( file , ""    JM-Contact: %8191s\\n"" , s )"	770:1:17840:17894	886399	17	True				
ANR	886484	AssignmentExpression	"retval = fscanf ( file , ""    JM-Contact: %8191s\\n"" , s )"		886399	0		=			
ANR	886485	Identifier	retval		886399	0					
ANR	886486	CallExpression	"fscanf ( file , ""    JM-Contact: %8191s\\n"" , s )"		886399	1					
ANR	886487	Callee	fscanf		886399	0					
ANR	886488	Identifier	fscanf		886399	0					
ANR	886489	ArgumentList	file		886399	1					
ANR	886490	Argument	file		886399	0					
ANR	886491	Identifier	file		886399	0					
ANR	886492	Argument	"""    JM-Contact: %8191s\\n"""		886399	1					
ANR	886493	PrimaryExpression	"""    JM-Contact: %8191s\\n"""		886399	0					
ANR	886494	Argument	s		886399	2					
ANR	886495	Identifier	s		886399	0					
ANR	886496	IfStatement	if ( retval != 1 )		886399	18					
ANR	886497	Condition	retval != 1	771:6:17902:17912	886399	0	True				
ANR	886498	EqualityExpression	retval != 1		886399	0		!=			
ANR	886499	Identifier	retval		886399	0					
ANR	886500	PrimaryExpression	1		886399	1					
ANR	886501	CompoundStatement		22:1:412:412	886399	1					
ANR	886502	ReturnStatement	return 0 ;	773:2:17921:17929	886399	0	True				
ANR	886503	PrimaryExpression	0		886399	0					
ANR	886504	ExpressionStatement	jmContact = strnewp ( s )	775:1:17935:17957	886399	19	True				
ANR	886505	AssignmentExpression	jmContact = strnewp ( s )		886399	0		=			
ANR	886506	Identifier	jmContact		886399	0					
ANR	886507	CallExpression	strnewp ( s )		886399	1					
ANR	886508	Callee	strnewp		886399	0					
ANR	886509	Identifier	strnewp		886399	0					
ANR	886510	ArgumentList	s		886399	1					
ANR	886511	Argument	s		886399	0					
ANR	886512	Identifier	s		886399	0					
ANR	886513	IdentifierDeclStatement	int newjm = 0 ;	777:1:17961:17974	886399	20	True				
ANR	886514	IdentifierDecl	newjm = 0		886399	0					
ANR	886515	IdentifierDeclType	int		886399	0					
ANR	886516	Identifier	newjm		886399	1					
ANR	886517	AssignmentExpression	newjm = 0		886399	2		=			
ANR	886518	Identifier	newjm		886399	0					
ANR	886519	PrimaryExpression	0		886399	1					
ANR	886520	ExpressionStatement	"retval = fscanf ( file , ""    Can-Restart-JM: %d\\n"" , & newjm )"	778:1:17977:18036	886399	21	True				
ANR	886521	AssignmentExpression	"retval = fscanf ( file , ""    Can-Restart-JM: %d\\n"" , & newjm )"		886399	0		=			
ANR	886522	Identifier	retval		886399	0					
ANR	886523	CallExpression	"fscanf ( file , ""    Can-Restart-JM: %d\\n"" , & newjm )"		886399	1					
ANR	886524	Callee	fscanf		886399	0					
ANR	886525	Identifier	fscanf		886399	0					
ANR	886526	ArgumentList	file		886399	1					
ANR	886527	Argument	file		886399	0					
ANR	886528	Identifier	file		886399	0					
ANR	886529	Argument	"""    Can-Restart-JM: %d\\n"""		886399	1					
ANR	886530	PrimaryExpression	"""    Can-Restart-JM: %d\\n"""		886399	0					
ANR	886531	Argument	& newjm		886399	2					
ANR	886532	UnaryOperationExpression	& newjm		886399	0					
ANR	886533	UnaryOperator	&		886399	0					
ANR	886534	Identifier	newjm		886399	1					
ANR	886535	IfStatement	if ( retval != 1 )		886399	22					
ANR	886536	Condition	retval != 1	779:6:18044:18054	886399	0	True				
ANR	886537	EqualityExpression	retval != 1		886399	0		!=			
ANR	886538	Identifier	retval		886399	0					
ANR	886539	PrimaryExpression	1		886399	1					
ANR	886540	CompoundStatement		30:1:554:554	886399	1					
ANR	886541	ReturnStatement	return 0 ;	781:2:18063:18071	886399	0	True				
ANR	886542	PrimaryExpression	0		886399	0					
ANR	886543	IfStatement	if ( newjm )		886399	23					
ANR	886544	Condition	newjm	783:6:18082:18086	886399	0	True				
ANR	886545	Identifier	newjm		886399	0					
ANR	886546	CompoundStatement		33:14:585:585	886399	1					
ANR	886547	ExpressionStatement	restartableJM = true	784:2:18094:18114	886399	0	True				
ANR	886548	AssignmentExpression	restartableJM = true		886399	0		=			
ANR	886549	Identifier	restartableJM		886399	0					
ANR	886550	Identifier	true		886399	1					
ANR	886551	ElseStatement	else		886399	0					
ANR	886552	CompoundStatement		35:8:619:619	886399	0					
ANR	886553	ExpressionStatement	restartableJM = false	786:2:18128:18149	886399	0	True				
ANR	886554	AssignmentExpression	restartableJM = false		886399	0		=			
ANR	886555	Identifier	restartableJM		886399	0					
ANR	886556	Identifier	false		886399	1					
ANR	886557	ReturnStatement	return 1 ;	789:1:18156:18164	886399	24	True				
ANR	886558	PrimaryExpression	1		886399	0					
ANR	886559	ReturnType	int		886399	1					
ANR	886560	Identifier	GlobusSubmitEvent :: readEvent		886399	2					
ANR	886561	ParameterList	FILE * file		886399	3					
ANR	886562	Parameter	FILE * file	750:34:17492:17501	886399	0	True				
ANR	886563	ParameterType	FILE *		886399	0					
ANR	886564	Identifier	file		886399	1					
ANR	886565	CFGEntryNode	ENTRY		886399		True				
ANR	886566	CFGExitNode	EXIT		886399		True				
ANR	886567	Symbol	NULL		886399						
ANR	886568	Symbol	false		886399						
ANR	886569	Symbol	rmContact		886399						
ANR	886570	Symbol	& newjm		886399						
ANR	886571	Symbol	retval		886399						
ANR	886572	Symbol	fscanf		886399						
ANR	886573	Symbol	file		886399						
ANR	886574	Symbol	s		886399						
ANR	886575	Symbol	jmContact		886399						
ANR	886576	Symbol	true		886399						
ANR	886577	Symbol	strnewp		886399						
ANR	886578	Symbol	restartableJM		886399						
ANR	886579	Symbol	* s		886399						
ANR	886580	Symbol	newjm		886399						
ANR	886581	Function	GlobusSubmitEvent :: toClassAd	792:0:18169:18754							
ANR	886582	FunctionDef	GlobusSubmitEvent :: toClassAd ()		886581	0					
ANR	886583	CompoundStatement		794:0:18213:18754	886581	0					
ANR	886584	IdentifierDeclStatement	ClassAd * myad = ULogEvent :: toClassAd ( ) ;	795:1:18216:18254	886581	0	True				
ANR	886585	IdentifierDecl	* myad = ULogEvent :: toClassAd ( )		886581	0					
ANR	886586	IdentifierDeclType	ClassAd *		886581	0					
ANR	886587	Identifier	myad		886581	1					
ANR	886588	AssignmentExpression	* myad = ULogEvent :: toClassAd ( )		886581	2		=			
ANR	886589	Identifier	myad		886581	0					
ANR	886590	CallExpression	ULogEvent :: toClassAd ( )		886581	1					
ANR	886591	Callee	ULogEvent :: toClassAd		886581	0					
ANR	886592	Identifier	ULogEvent :: toClassAd		886581	0					
ANR	886593	ArgumentList			886581	1					
ANR	886594	IfStatement	if ( ! myad )		886581	1					
ANR	886595	Condition	! myad	796:5:18261:18265	886581	0	True				
ANR	886596	UnaryOperationExpression	! myad		886581	0					
ANR	886597	UnaryOperator	!		886581	0					
ANR	886598	Identifier	myad		886581	1					
ANR	886599	ReturnStatement	return NULL ;	796:13:18269:18280	886581	1	True				
ANR	886600	Identifier	NULL		886581	0					
ANR	886601	IdentifierDeclStatement	char buf0 [ 512 ] ;	797:1:18283:18297	886581	2	True				
ANR	886602	IdentifierDecl	buf0 [ 512 ]		886581	0					
ANR	886603	IdentifierDeclType	char [ 512 ]		886581	0					
ANR	886604	Identifier	buf0		886581	1					
ANR	886605	PrimaryExpression	512		886581	2					
ANR	886606	IfStatement	if ( rmContact && rmContact [ 0 ] )		886581	3					
ANR	886607	Condition	rmContact && rmContact [ 0 ]	799:5:18305:18329	886581	0	True				
ANR	886608	AndExpression	rmContact && rmContact [ 0 ]		886581	0		&&			
ANR	886609	Identifier	rmContact		886581	0					
ANR	886610	ArrayIndexing	rmContact [ 0 ]		886581	1					
ANR	886611	Identifier	rmContact		886581	0					
ANR	886612	PrimaryExpression	0		886581	1					
ANR	886613	CompoundStatement		7:2:123:136	886581	1					
ANR	886614	IdentifierDeclStatement	MyString buf2 ;	800:2:18337:18350	886581	0	True				
ANR	886615	IdentifierDecl	buf2		886581	0					
ANR	886616	IdentifierDeclType	MyString		886581	0					
ANR	886617	Identifier	buf2		886581	1					
ANR	886618	ExpressionStatement	"buf2 . sprintf ( ""RMContact = \\""%s\\"""" , rmContact )"	801:2:18354:18398	886581	1	True				
ANR	886619	CallExpression	"buf2 . sprintf ( ""RMContact = \\""%s\\"""" , rmContact )"		886581	0					
ANR	886620	Callee	buf2 . sprintf		886581	0					
ANR	886621	MemberAccess	buf2 . sprintf		886581	0					
ANR	886622	Identifier	buf2		886581	0					
ANR	886623	Identifier	sprintf		886581	1					
ANR	886624	ArgumentList	"""RMContact = \\""%s\\"""""		886581	1					
ANR	886625	Argument	"""RMContact = \\""%s\\"""""		886581	0					
ANR	886626	PrimaryExpression	"""RMContact = \\""%s\\"""""		886581	0					
ANR	886627	Argument	rmContact		886581	1					
ANR	886628	Identifier	rmContact		886581	0					
ANR	886629	IfStatement	if ( ! myad -> Insert ( buf2 . Value ( ) ) )		886581	2					
ANR	886630	Condition	! myad -> Insert ( buf2 . Value ( ) )	802:6:18406:18432	886581	0	True				
ANR	886631	UnaryOperationExpression	! myad -> Insert ( buf2 . Value ( ) )		886581	0					
ANR	886632	UnaryOperator	!		886581	0					
ANR	886633	CallExpression	myad -> Insert ( buf2 . Value ( ) )		886581	1					
ANR	886634	Callee	myad -> Insert		886581	0					
ANR	886635	PtrMemberAccess	myad -> Insert		886581	0					
ANR	886636	Identifier	myad		886581	0					
ANR	886637	Identifier	Insert		886581	1					
ANR	886638	ArgumentList	buf2 . Value ( )		886581	1					
ANR	886639	Argument	buf2 . Value ( )		886581	0					
ANR	886640	CallExpression	buf2 . Value ( )		886581	0					
ANR	886641	Callee	buf2 . Value		886581	0					
ANR	886642	MemberAccess	buf2 . Value		886581	0					
ANR	886643	Identifier	buf2		886581	0					
ANR	886644	Identifier	Value		886581	1					
ANR	886645	ArgumentList			886581	1					
ANR	886646	ReturnStatement	return NULL ;	802:36:18436:18447	886581	1	True				
ANR	886647	Identifier	NULL		886581	0					
ANR	886648	IfStatement	if ( jmContact && jmContact [ 0 ] )		886581	4					
ANR	886649	Condition	jmContact && jmContact [ 0 ]	804:5:18457:18481	886581	0	True				
ANR	886650	AndExpression	jmContact && jmContact [ 0 ]		886581	0		&&			
ANR	886651	Identifier	jmContact		886581	0					
ANR	886652	ArrayIndexing	jmContact [ 0 ]		886581	1					
ANR	886653	Identifier	jmContact		886581	0					
ANR	886654	PrimaryExpression	0		886581	1					
ANR	886655	CompoundStatement		12:2:275:288	886581	1					
ANR	886656	IdentifierDeclStatement	MyString buf3 ;	805:2:18489:18502	886581	0	True				
ANR	886657	IdentifierDecl	buf3		886581	0					
ANR	886658	IdentifierDeclType	MyString		886581	0					
ANR	886659	Identifier	buf3		886581	1					
ANR	886660	ExpressionStatement	"buf3 . sprintf ( ""JMContact = \\""%s\\"""" , jmContact )"	806:2:18506:18550	886581	1	True				
ANR	886661	CallExpression	"buf3 . sprintf ( ""JMContact = \\""%s\\"""" , jmContact )"		886581	0					
ANR	886662	Callee	buf3 . sprintf		886581	0					
ANR	886663	MemberAccess	buf3 . sprintf		886581	0					
ANR	886664	Identifier	buf3		886581	0					
ANR	886665	Identifier	sprintf		886581	1					
ANR	886666	ArgumentList	"""JMContact = \\""%s\\"""""		886581	1					
ANR	886667	Argument	"""JMContact = \\""%s\\"""""		886581	0					
ANR	886668	PrimaryExpression	"""JMContact = \\""%s\\"""""		886581	0					
ANR	886669	Argument	jmContact		886581	1					
ANR	886670	Identifier	jmContact		886581	0					
ANR	886671	IfStatement	if ( ! myad -> Insert ( buf3 . Value ( ) ) )		886581	2					
ANR	886672	Condition	! myad -> Insert ( buf3 . Value ( ) )	807:6:18558:18584	886581	0	True				
ANR	886673	UnaryOperationExpression	! myad -> Insert ( buf3 . Value ( ) )		886581	0					
ANR	886674	UnaryOperator	!		886581	0					
ANR	886675	CallExpression	myad -> Insert ( buf3 . Value ( ) )		886581	1					
ANR	886676	Callee	myad -> Insert		886581	0					
ANR	886677	PtrMemberAccess	myad -> Insert		886581	0					
ANR	886678	Identifier	myad		886581	0					
ANR	886679	Identifier	Insert		886581	1					
ANR	886680	ArgumentList	buf3 . Value ( )		886581	1					
ANR	886681	Argument	buf3 . Value ( )		886581	0					
ANR	886682	CallExpression	buf3 . Value ( )		886581	0					
ANR	886683	Callee	buf3 . Value		886581	0					
ANR	886684	MemberAccess	buf3 . Value		886581	0					
ANR	886685	Identifier	buf3		886581	0					
ANR	886686	Identifier	Value		886581	1					
ANR	886687	ArgumentList			886581	1					
ANR	886688	ReturnStatement	return NULL ;	807:36:18588:18599	886581	1	True				
ANR	886689	Identifier	NULL		886581	0					
ANR	886690	ExpressionStatement	"snprintf ( buf0 , 512 , ""RestartableJM = %s"" , restartableJM ? ""TRUE"" : ""FALSE"" )"	810:1:18606:18681	886581	5	True				
ANR	886691	CallExpression	"snprintf ( buf0 , 512 , ""RestartableJM = %s"" , restartableJM ? ""TRUE"" : ""FALSE"" )"		886581	0					
ANR	886692	Callee	snprintf		886581	0					
ANR	886693	Identifier	snprintf		886581	0					
ANR	886694	ArgumentList	buf0		886581	1					
ANR	886695	Argument	buf0		886581	0					
ANR	886696	Identifier	buf0		886581	0					
ANR	886697	Argument	512		886581	1					
ANR	886698	PrimaryExpression	512		886581	0					
ANR	886699	Argument	"""RestartableJM = %s"""		886581	2					
ANR	886700	PrimaryExpression	"""RestartableJM = %s"""		886581	0					
ANR	886701	Argument	"restartableJM ? ""TRUE"" : ""FALSE"""		886581	3					
ANR	886702	ConditionalExpression	"restartableJM ? ""TRUE"" : ""FALSE"""		886581	0					
ANR	886703	Condition	restartableJM		886581	0					
ANR	886704	Identifier	restartableJM		886581	0					
ANR	886705	PrimaryExpression	"""TRUE"""		886581	1					
ANR	886706	PrimaryExpression	"""FALSE"""		886581	2					
ANR	886707	ExpressionStatement	buf0 [ 511 ] = 0	811:1:18684:18697	886581	6	True				
ANR	886708	AssignmentExpression	buf0 [ 511 ] = 0		886581	0		=			
ANR	886709	ArrayIndexing	buf0 [ 511 ]		886581	0					
ANR	886710	Identifier	buf0		886581	0					
ANR	886711	PrimaryExpression	511		886581	1					
ANR	886712	PrimaryExpression	0		886581	1					
ANR	886713	IfStatement	if ( ! myad -> Insert ( buf0 ) )		886581	7					
ANR	886714	Condition	! myad -> Insert ( buf0 )	812:5:18704:18722	886581	0	True				
ANR	886715	UnaryOperationExpression	! myad -> Insert ( buf0 )		886581	0					
ANR	886716	UnaryOperator	!		886581	0					
ANR	886717	CallExpression	myad -> Insert ( buf0 )		886581	1					
ANR	886718	Callee	myad -> Insert		886581	0					
ANR	886719	PtrMemberAccess	myad -> Insert		886581	0					
ANR	886720	Identifier	myad		886581	0					
ANR	886721	Identifier	Insert		886581	1					
ANR	886722	ArgumentList	buf0		886581	1					
ANR	886723	Argument	buf0		886581	0					
ANR	886724	Identifier	buf0		886581	0					
ANR	886725	ReturnStatement	return NULL ;	812:27:18726:18737	886581	1	True				
ANR	886726	Identifier	NULL		886581	0					
ANR	886727	ReturnStatement	return myad ;	814:1:18741:18752	886581	8	True				
ANR	886728	Identifier	myad		886581	0					
ANR	886729	ReturnType	ClassAd *		886581	1					
ANR	886730	Identifier	GlobusSubmitEvent :: toClassAd		886581	2					
ANR	886731	ParameterList			886581	3					
ANR	886732	CFGEntryNode	ENTRY		886581		True				
ANR	886733	CFGExitNode	EXIT		886581		True				
ANR	886734	Symbol	NULL		886581						
ANR	886735	Symbol	* myad		886581						
ANR	886736	Symbol	myad -> Insert		886581						
ANR	886737	Symbol	buf3 . Value		886581						
ANR	886738	Symbol	rmContact		886581						
ANR	886739	Symbol	ULogEvent :: toClassAd		886581						
ANR	886740	Symbol	buf2 . Value		886581						
ANR	886741	Symbol	buf3		886581						
ANR	886742	Symbol	* buf0		886581						
ANR	886743	Symbol	buf2		886581						
ANR	886744	Symbol	buf0		886581						
ANR	886745	Symbol	* rmContact		886581						
ANR	886746	Symbol	jmContact		886581						
ANR	886747	Symbol	restartableJM		886581						
ANR	886748	Symbol	myad		886581						
ANR	886749	Symbol	* jmContact		886581						
ANR	886750	Function	GlobusSubmitEvent :: initFromClassAd	817:0:18757:19507							
ANR	886751	FunctionDef	GlobusSubmitEvent :: initFromClassAd (ClassAd * ad)		886750	0					
ANR	886752	CompoundStatement		819:0:18810:19507	886750	0					
ANR	886753	ExpressionStatement	ULogEvent :: initFromClassAd ( ad )	820:1:18813:18843	886750	0	True				
ANR	886754	CallExpression	ULogEvent :: initFromClassAd ( ad )		886750	0					
ANR	886755	Callee	ULogEvent :: initFromClassAd		886750	0					
ANR	886756	Identifier	ULogEvent :: initFromClassAd		886750	0					
ANR	886757	ArgumentList	ad		886750	1					
ANR	886758	Argument	ad		886750	0					
ANR	886759	Identifier	ad		886750	0					
ANR	886760	IfStatement	if ( ! ad )		886750	1					
ANR	886761	Condition	! ad	822:5:18851:18853	886750	0	True				
ANR	886762	UnaryOperationExpression	! ad		886750	0					
ANR	886763	UnaryOperator	!		886750	0					
ANR	886764	Identifier	ad		886750	1					
ANR	886765	ReturnStatement	return ;	822:11:18857:18863	886750	1	True				
ANR	886766	IdentifierDeclStatement	char * mallocstr = NULL ;	825:1:18940:18962	886750	2	True				
ANR	886767	IdentifierDecl	* mallocstr = NULL		886750	0					
ANR	886768	IdentifierDeclType	char *		886750	0					
ANR	886769	Identifier	mallocstr		886750	1					
ANR	886770	AssignmentExpression	* mallocstr = NULL		886750	2		=			
ANR	886771	Identifier	NULL		886750	0					
ANR	886772	Identifier	NULL		886750	1					
ANR	886773	ExpressionStatement	"ad -> LookupString ( ""RMContact"" , & mallocstr )"	826:1:18965:19006	886750	3	True				
ANR	886774	CallExpression	"ad -> LookupString ( ""RMContact"" , & mallocstr )"		886750	0					
ANR	886775	Callee	ad -> LookupString		886750	0					
ANR	886776	PtrMemberAccess	ad -> LookupString		886750	0					
ANR	886777	Identifier	ad		886750	0					
ANR	886778	Identifier	LookupString		886750	1					
ANR	886779	ArgumentList	"""RMContact"""		886750	1					
ANR	886780	Argument	"""RMContact"""		886750	0					
ANR	886781	PrimaryExpression	"""RMContact"""		886750	0					
ANR	886782	Argument	& mallocstr		886750	1					
ANR	886783	UnaryOperationExpression	& mallocstr		886750	0					
ANR	886784	UnaryOperator	&		886750	0					
ANR	886785	Identifier	mallocstr		886750	1					
ANR	886786	IfStatement	if ( mallocstr )		886750	4					
ANR	886787	Condition	mallocstr	827:5:19013:19021	886750	0	True				
ANR	886788	Identifier	mallocstr		886750	0					
ANR	886789	CompoundStatement		9:17:214:214	886750	1					
ANR	886790	ExpressionStatement	rmContact = new char [ strlen ( mallocstr ) + 1 ]	828:2:19029:19072	886750	0	True				
ANR	886791	AssignmentExpression	rmContact = new char [ strlen ( mallocstr ) + 1 ]		886750	0		=			
ANR	886792	Identifier	rmContact		886750	0					
ANR	886793	AdditiveExpression	strlen ( mallocstr ) + 1		886750	1		+			
ANR	886794	CallExpression	strlen ( mallocstr )		886750	0					
ANR	886795	Callee	strlen		886750	0					
ANR	886796	Identifier	strlen		886750	0					
ANR	886797	ArgumentList	mallocstr		886750	1					
ANR	886798	Argument	mallocstr		886750	0					
ANR	886799	Identifier	mallocstr		886750	0					
ANR	886800	PrimaryExpression	1		886750	1					
ANR	886801	ExpressionStatement	"strcpy ( rmContact , mallocstr )"	829:2:19076:19104	886750	1	True				
ANR	886802	CallExpression	"strcpy ( rmContact , mallocstr )"		886750	0					
ANR	886803	Callee	strcpy		886750	0					
ANR	886804	Identifier	strcpy		886750	0					
ANR	886805	ArgumentList	rmContact		886750	1					
ANR	886806	Argument	rmContact		886750	0					
ANR	886807	Identifier	rmContact		886750	0					
ANR	886808	Argument	mallocstr		886750	1					
ANR	886809	Identifier	mallocstr		886750	0					
ANR	886810	ExpressionStatement	free ( mallocstr )	830:2:19108:19123	886750	2	True				
ANR	886811	CallExpression	free ( mallocstr )		886750	0					
ANR	886812	Callee	free		886750	0					
ANR	886813	Identifier	free		886750	0					
ANR	886814	ArgumentList	mallocstr		886750	1					
ANR	886815	Argument	mallocstr		886750	0					
ANR	886816	Identifier	mallocstr		886750	0					
ANR	886817	ExpressionStatement	mallocstr = NULL	834:1:19203:19219	886750	5	True				
ANR	886818	AssignmentExpression	mallocstr = NULL		886750	0		=			
ANR	886819	Identifier	mallocstr		886750	0					
ANR	886820	Identifier	NULL		886750	1					
ANR	886821	ExpressionStatement	"ad -> LookupString ( ""JMContact"" , & mallocstr )"	835:1:19222:19263	886750	6	True				
ANR	886822	CallExpression	"ad -> LookupString ( ""JMContact"" , & mallocstr )"		886750	0					
ANR	886823	Callee	ad -> LookupString		886750	0					
ANR	886824	PtrMemberAccess	ad -> LookupString		886750	0					
ANR	886825	Identifier	ad		886750	0					
ANR	886826	Identifier	LookupString		886750	1					
ANR	886827	ArgumentList	"""JMContact"""		886750	1					
ANR	886828	Argument	"""JMContact"""		886750	0					
ANR	886829	PrimaryExpression	"""JMContact"""		886750	0					
ANR	886830	Argument	& mallocstr		886750	1					
ANR	886831	UnaryOperationExpression	& mallocstr		886750	0					
ANR	886832	UnaryOperator	&		886750	0					
ANR	886833	Identifier	mallocstr		886750	1					
ANR	886834	IfStatement	if ( mallocstr )		886750	7					
ANR	886835	Condition	mallocstr	836:5:19270:19278	886750	0	True				
ANR	886836	Identifier	mallocstr		886750	0					
ANR	886837	CompoundStatement		18:17:471:471	886750	1					
ANR	886838	ExpressionStatement	jmContact = new char [ strlen ( mallocstr ) + 1 ]	837:2:19286:19329	886750	0	True				
ANR	886839	AssignmentExpression	jmContact = new char [ strlen ( mallocstr ) + 1 ]		886750	0		=			
ANR	886840	Identifier	jmContact		886750	0					
ANR	886841	AdditiveExpression	strlen ( mallocstr ) + 1		886750	1		+			
ANR	886842	CallExpression	strlen ( mallocstr )		886750	0					
ANR	886843	Callee	strlen		886750	0					
ANR	886844	Identifier	strlen		886750	0					
ANR	886845	ArgumentList	mallocstr		886750	1					
ANR	886846	Argument	mallocstr		886750	0					
ANR	886847	Identifier	mallocstr		886750	0					
ANR	886848	PrimaryExpression	1		886750	1					
ANR	886849	ExpressionStatement	"strcpy ( jmContact , mallocstr )"	838:2:19333:19361	886750	1	True				
ANR	886850	CallExpression	"strcpy ( jmContact , mallocstr )"		886750	0					
ANR	886851	Callee	strcpy		886750	0					
ANR	886852	Identifier	strcpy		886750	0					
ANR	886853	ArgumentList	jmContact		886750	1					
ANR	886854	Argument	jmContact		886750	0					
ANR	886855	Identifier	jmContact		886750	0					
ANR	886856	Argument	mallocstr		886750	1					
ANR	886857	Identifier	mallocstr		886750	0					
ANR	886858	ExpressionStatement	free ( mallocstr )	839:2:19365:19380	886750	2	True				
ANR	886859	CallExpression	free ( mallocstr )		886750	0					
ANR	886860	Callee	free		886750	0					
ANR	886861	Identifier	free		886750	0					
ANR	886862	ArgumentList	mallocstr		886750	1					
ANR	886863	Argument	mallocstr		886750	0					
ANR	886864	Identifier	mallocstr		886750	0					
ANR	886865	IdentifierDeclStatement	int reallybool ;	842:1:19387:19401	886750	8	True				
ANR	886866	IdentifierDecl	reallybool		886750	0					
ANR	886867	IdentifierDeclType	int		886750	0					
ANR	886868	Identifier	reallybool		886750	1					
ANR	886869	IfStatement	"if ( ad -> LookupInteger ( ""RestartableJM"" , reallybool ) )"		886750	9					
ANR	886870	Condition	"ad -> LookupInteger ( ""RestartableJM"" , reallybool )"	843:5:19408:19453	886750	0	True				
ANR	886871	CallExpression	"ad -> LookupInteger ( ""RestartableJM"" , reallybool )"		886750	0					
ANR	886872	Callee	ad -> LookupInteger		886750	0					
ANR	886873	PtrMemberAccess	ad -> LookupInteger		886750	0					
ANR	886874	Identifier	ad		886750	0					
ANR	886875	Identifier	LookupInteger		886750	1					
ANR	886876	ArgumentList	"""RestartableJM"""		886750	1					
ANR	886877	Argument	"""RestartableJM"""		886750	0					
ANR	886878	PrimaryExpression	"""RestartableJM"""		886750	0					
ANR	886879	Argument	reallybool		886750	1					
ANR	886880	Identifier	reallybool		886750	0					
ANR	886881	CompoundStatement		25:54:646:646	886750	1					
ANR	886882	ExpressionStatement	restartableJM = reallybool ? TRUE : FALSE	844:2:19461:19502	886750	0	True				
ANR	886883	AssignmentExpression	restartableJM = reallybool ? TRUE : FALSE		886750	0		=			
ANR	886884	Identifier	restartableJM		886750	0					
ANR	886885	ConditionalExpression	reallybool ? TRUE : FALSE		886750	1					
ANR	886886	Condition	reallybool		886750	0					
ANR	886887	Identifier	reallybool		886750	0					
ANR	886888	Identifier	TRUE		886750	1					
ANR	886889	Identifier	FALSE		886750	2					
ANR	886890	ReturnType	void		886750	1					
ANR	886891	Identifier	GlobusSubmitEvent :: initFromClassAd		886750	2					
ANR	886892	ParameterList	ClassAd * ad		886750	3					
ANR	886893	Parameter	ClassAd * ad	818:35:18797:18807	886750	0	True				
ANR	886894	ParameterType	ClassAd *		886750	0					
ANR	886895	Identifier	ad		886750	1					
ANR	886896	CFGEntryNode	ENTRY		886750		True				
ANR	886897	CFGExitNode	EXIT		886750		True				
ANR	886898	Symbol	& mallocstr		886750						
ANR	886899	Symbol	ad		886750						
ANR	886900	Symbol	NULL		886750						
ANR	886901	Symbol	mallocstr		886750						
ANR	886902	Symbol	TRUE		886750						
ANR	886903	Symbol	* ad		886750						
ANR	886904	Symbol	rmContact		886750						
ANR	886905	Symbol	strlen		886750						
ANR	886906	Symbol	jmContact		886750						
ANR	886907	Symbol	ad -> LookupInteger		886750						
ANR	886908	Symbol	FALSE		886750						
ANR	886909	Symbol	restartableJM		886750						
ANR	886910	Symbol	reallybool		886750						
ANR	886911	Function	GlobusSubmitFailedEvent :: GlobusSubmitFailedEvent	849:0:19553:19668							
ANR	886912	FunctionDef	GlobusSubmitFailedEvent :: GlobusSubmitFailedEvent ()		886911	0					
ANR	886913	CompoundStatement		850:0:19608:19668	886911	0					
ANR	886914	ExpressionStatement	eventNumber = ULOG_GLOBUS_SUBMIT_FAILED	851:1:19611:19650	886911	0	True				
ANR	886915	AssignmentExpression	eventNumber = ULOG_GLOBUS_SUBMIT_FAILED		886911	0		=			
ANR	886916	Identifier	eventNumber		886911	0					
ANR	886917	Identifier	ULOG_GLOBUS_SUBMIT_FAILED		886911	1					
ANR	886918	ExpressionStatement	reason = NULL	852:1:19653:19666	886911	1	True				
ANR	886919	AssignmentExpression	reason = NULL		886911	0		=			
ANR	886920	Identifier	reason		886911	0					
ANR	886921	Identifier	NULL		886911	1					
ANR	886922	Identifier	GlobusSubmitFailedEvent :: GlobusSubmitFailedEvent		886911	1					
ANR	886923	ParameterList			886911	2					
ANR	886924	CFGEntryNode	ENTRY		886911		True				
ANR	886925	CFGExitNode	EXIT		886911		True				
ANR	886926	Symbol	reason		886911						
ANR	886927	Symbol	NULL		886911						
ANR	886928	Symbol	eventNumber		886911						
ANR	886929	Symbol	ULOG_GLOBUS_SUBMIT_FAILED		886911						
ANR	886930	Function	GlobusSubmitFailedEvent :: ~GlobusSubmitFailedEvent	855:0:19671:19747							
ANR	886931	FunctionDef	GlobusSubmitFailedEvent :: ~GlobusSubmitFailedEvent ()		886930	0					
ANR	886932	CompoundStatement		856:0:19727:19747	886930	0					
ANR	886933	Statement	delete	857:1:19730:19735	886930	0	True				
ANR	886934	Statement	[	857:7:19736:19736	886930	1	True				
ANR	886935	Statement	]	857:8:19737:19737	886930	2	True				
ANR	886936	ExpressionStatement	reason	857:10:19739:19745	886930	3	True				
ANR	886937	Identifier	reason		886930	0					
ANR	886938	Identifier	GlobusSubmitFailedEvent :: ~GlobusSubmitFailedEvent		886930	1					
ANR	886939	ParameterList			886930	2					
ANR	886940	CFGEntryNode	ENTRY		886930		True				
ANR	886941	CFGExitNode	EXIT		886930		True				
ANR	886942	Function	GlobusSubmitFailedEvent :: writeEvent	860:0:19750:20134							
ANR	886943	FunctionDef	GlobusSubmitFailedEvent :: writeEvent (FILE * file)		886942	0					
ANR	886944	CompoundStatement		862:0:19803:20134	886942	0					
ANR	886945	IdentifierDeclStatement	"const char * unknown = ""UNKNOWN"" ;"	863:1:19806:19838	886942	0	True				
ANR	886946	IdentifierDecl	"* unknown = ""UNKNOWN"""		886942	0					
ANR	886947	IdentifierDeclType	const char *		886942	0					
ANR	886948	Identifier	unknown		886942	1					
ANR	886949	AssignmentExpression	"* unknown = ""UNKNOWN"""		886942	2		=			
ANR	886950	Identifier	unknown		886942	0					
ANR	886951	PrimaryExpression	"""UNKNOWN"""		886942	1					
ANR	886952	IdentifierDeclStatement	const char * reasonString = unknown ;	864:1:19841:19876	886942	1	True				
ANR	886953	IdentifierDecl	* reasonString = unknown		886942	0					
ANR	886954	IdentifierDeclType	const char *		886942	0					
ANR	886955	Identifier	reasonString		886942	1					
ANR	886956	AssignmentExpression	* reasonString = unknown		886942	2		=			
ANR	886957	Identifier	unknown		886942	0					
ANR	886958	Identifier	unknown		886942	1					
ANR	886959	IdentifierDeclStatement	"int retval = fprintf ( file , ""Globus job submission failed!\\n"" ) ;"	866:1:19880:19942	886942	2	True				
ANR	886960	IdentifierDecl	"retval = fprintf ( file , ""Globus job submission failed!\\n"" )"		886942	0					
ANR	886961	IdentifierDeclType	int		886942	0					
ANR	886962	Identifier	retval		886942	1					
ANR	886963	AssignmentExpression	"retval = fprintf ( file , ""Globus job submission failed!\\n"" )"		886942	2		=			
ANR	886964	Identifier	retval		886942	0					
ANR	886965	CallExpression	"fprintf ( file , ""Globus job submission failed!\\n"" )"		886942	1					
ANR	886966	Callee	fprintf		886942	0					
ANR	886967	Identifier	fprintf		886942	0					
ANR	886968	ArgumentList	file		886942	1					
ANR	886969	Argument	file		886942	0					
ANR	886970	Identifier	file		886942	0					
ANR	886971	Argument	"""Globus job submission failed!\\n"""		886942	1					
ANR	886972	PrimaryExpression	"""Globus job submission failed!\\n"""		886942	0					
ANR	886973	IfStatement	if ( retval < 0 )		886942	3					
ANR	886974	Condition	retval < 0	867:5:19949:19958	886942	0	True				
ANR	886975	RelationalExpression	retval < 0		886942	0		<			
ANR	886976	Identifier	retval		886942	0					
ANR	886977	PrimaryExpression	0		886942	1					
ANR	886978	CompoundStatement		7:1:158:158	886942	1					
ANR	886979	ReturnStatement	return 0 ;	869:2:19966:19974	886942	0	True				
ANR	886980	PrimaryExpression	0		886942	0					
ANR	886981	IfStatement	if ( reason )		886942	4					
ANR	886982	Condition	reason	872:6:19986:19991	886942	0	True				
ANR	886983	Identifier	reason		886942	0					
ANR	886984	ExpressionStatement	reasonString = reason	872:15:19995:20016	886942	1	True				
ANR	886985	AssignmentExpression	reasonString = reason		886942	0		=			
ANR	886986	Identifier	reasonString		886942	0					
ANR	886987	Identifier	reason		886942	1					
ANR	886988	ExpressionStatement	"retval = fprintf ( file , ""    Reason: %.8191s\\n"" , reasonString )"	874:1:20020:20083	886942	5	True				
ANR	886989	AssignmentExpression	"retval = fprintf ( file , ""    Reason: %.8191s\\n"" , reasonString )"		886942	0		=			
ANR	886990	Identifier	retval		886942	0					
ANR	886991	CallExpression	"fprintf ( file , ""    Reason: %.8191s\\n"" , reasonString )"		886942	1					
ANR	886992	Callee	fprintf		886942	0					
ANR	886993	Identifier	fprintf		886942	0					
ANR	886994	ArgumentList	file		886942	1					
ANR	886995	Argument	file		886942	0					
ANR	886996	Identifier	file		886942	0					
ANR	886997	Argument	"""    Reason: %.8191s\\n"""		886942	1					
ANR	886998	PrimaryExpression	"""    Reason: %.8191s\\n"""		886942	0					
ANR	886999	Argument	reasonString		886942	2					
ANR	887000	Identifier	reasonString		886942	0					
ANR	887001	IfStatement	if ( retval < 0 )		886942	6					
ANR	887002	Condition	retval < 0	875:5:20090:20099	886942	0	True				
ANR	887003	RelationalExpression	retval < 0		886942	0		<			
ANR	887004	Identifier	retval		886942	0					
ANR	887005	PrimaryExpression	0		886942	1					
ANR	887006	CompoundStatement		14:18:299:299	886942	1					
ANR	887007	ReturnStatement	return 0 ;	876:2:20107:20115	886942	0	True				
ANR	887008	PrimaryExpression	0		886942	0					
ANR	887009	ReturnStatement	return ( 1 ) ;	879:1:20122:20132	886942	7	True				
ANR	887010	PrimaryExpression	1		886942	0					
ANR	887011	ReturnType	int		886942	1					
ANR	887012	Identifier	GlobusSubmitFailedEvent :: writeEvent		886942	2					
ANR	887013	ParameterList	FILE * file		886942	3					
ANR	887014	Parameter	FILE * file	861:37:19791:19800	886942	0	True				
ANR	887015	ParameterType	FILE *		886942	0					
ANR	887016	Identifier	file		886942	1					
ANR	887017	CFGEntryNode	ENTRY		886942		True				
ANR	887018	CFGExitNode	EXIT		886942		True				
ANR	887019	Symbol	reason		886942						
ANR	887020	Symbol	file		886942						
ANR	887021	Symbol	reasonString		886942						
ANR	887022	Symbol	fprintf		886942						
ANR	887023	Symbol	retval		886942						
ANR	887024	Symbol	unknown		886942						
ANR	887025	Function	GlobusSubmitFailedEvent :: readEvent	882:0:20137:20640							
ANR	887026	FunctionDef	GlobusSubmitFailedEvent :: readEvent (FILE * file)		887025	0					
ANR	887027	CompoundStatement		884:0:20189:20640	887025	0					
ANR	887028	IdentifierDeclStatement	char s [ 8192 ] ;	885:1:20192:20204	887025	0	True				
ANR	887029	IdentifierDecl	s [ 8192 ]		887025	0					
ANR	887030	IdentifierDeclType	char [ 8192 ]		887025	0					
ANR	887031	Identifier	s		887025	1					
ANR	887032	PrimaryExpression	8192		887025	2					
ANR	887033	Statement	delete	887:1:20208:20213	887025	1	True				
ANR	887034	Statement	[	887:7:20214:20214	887025	2	True				
ANR	887035	Statement	]	887:8:20215:20215	887025	3	True				
ANR	887036	ExpressionStatement	reason	887:10:20217:20223	887025	4	True				
ANR	887037	Identifier	reason		887025	0					
ANR	887038	ExpressionStatement	reason = NULL	888:1:20226:20239	887025	5	True				
ANR	887039	AssignmentExpression	reason = NULL		887025	0		=			
ANR	887040	Identifier	reason		887025	0					
ANR	887041	Identifier	NULL		887025	1					
ANR	887042	IdentifierDeclStatement	"int retval = fscanf ( file , ""Globus job submission failed!\\n"" ) ;"	889:1:20242:20303	887025	6	True				
ANR	887043	IdentifierDecl	"retval = fscanf ( file , ""Globus job submission failed!\\n"" )"		887025	0					
ANR	887044	IdentifierDeclType	int		887025	0					
ANR	887045	Identifier	retval		887025	1					
ANR	887046	AssignmentExpression	"retval = fscanf ( file , ""Globus job submission failed!\\n"" )"		887025	2		=			
ANR	887047	Identifier	retval		887025	0					
ANR	887048	CallExpression	"fscanf ( file , ""Globus job submission failed!\\n"" )"		887025	1					
ANR	887049	Callee	fscanf		887025	0					
ANR	887050	Identifier	fscanf		887025	0					
ANR	887051	ArgumentList	file		887025	1					
ANR	887052	Argument	file		887025	0					
ANR	887053	Identifier	file		887025	0					
ANR	887054	Argument	"""Globus job submission failed!\\n"""		887025	1					
ANR	887055	PrimaryExpression	"""Globus job submission failed!\\n"""		887025	0					
ANR	887056	IfStatement	if ( retval != 0 )		887025	7					
ANR	887057	Condition	retval != 0	890:8:20313:20323	887025	0	True				
ANR	887058	EqualityExpression	retval != 0		887025	0		!=			
ANR	887059	Identifier	retval		887025	0					
ANR	887060	PrimaryExpression	0		887025	1					
ANR	887061	CompoundStatement		8:4:140:140	887025	1					
ANR	887062	ReturnStatement	return 0 ;	892:2:20334:20342	887025	0	True				
ANR	887063	PrimaryExpression	0		887025	0					
ANR	887064	ExpressionStatement	s [ 0 ] = '\\0'	894:1:20351:20362	887025	8	True				
ANR	887065	AssignmentExpression	s [ 0 ] = '\\0'		887025	0		=			
ANR	887066	ArrayIndexing	s [ 0 ]		887025	0					
ANR	887067	Identifier	s		887025	0					
ANR	887068	PrimaryExpression	0		887025	1					
ANR	887069	PrimaryExpression	'\\0'		887025	1					
ANR	887070	IdentifierDeclStatement	fpos_t filep ;	896:1:20366:20378	887025	9	True				
ANR	887071	IdentifierDecl	filep		887025	0					
ANR	887072	IdentifierDeclType	fpos_t		887025	0					
ANR	887073	Identifier	filep		887025	1					
ANR	887074	ExpressionStatement	"fgetpos ( file , & filep )"	897:1:20381:20404	887025	10	True				
ANR	887075	CallExpression	"fgetpos ( file , & filep )"		887025	0					
ANR	887076	Callee	fgetpos		887025	0					
ANR	887077	Identifier	fgetpos		887025	0					
ANR	887078	ArgumentList	file		887025	1					
ANR	887079	Argument	file		887025	0					
ANR	887080	Identifier	file		887025	0					
ANR	887081	Argument	& filep		887025	1					
ANR	887082	UnaryOperationExpression	& filep		887025	0					
ANR	887083	UnaryOperator	&		887025	0					
ANR	887084	Identifier	filep		887025	1					
ANR	887085	IfStatement	"if ( ! fgets ( s , 8192 , file ) || strcmp ( s , ""...\\n"" ) == 0 )"		887025	11					
ANR	887086	Condition	"! fgets ( s , 8192 , file ) || strcmp ( s , ""...\\n"" ) == 0"	899:5:20412:20463	887025	0	True				
ANR	887087	OrExpression	"! fgets ( s , 8192 , file ) || strcmp ( s , ""...\\n"" ) == 0"		887025	0		||			
ANR	887088	UnaryOperationExpression	"! fgets ( s , 8192 , file )"		887025	0					
ANR	887089	UnaryOperator	!		887025	0					
ANR	887090	CallExpression	"fgets ( s , 8192 , file )"		887025	1					
ANR	887091	Callee	fgets		887025	0					
ANR	887092	Identifier	fgets		887025	0					
ANR	887093	ArgumentList	s		887025	1					
ANR	887094	Argument	s		887025	0					
ANR	887095	Identifier	s		887025	0					
ANR	887096	Argument	8192		887025	1					
ANR	887097	PrimaryExpression	8192		887025	0					
ANR	887098	Argument	file		887025	2					
ANR	887099	Identifier	file		887025	0					
ANR	887100	EqualityExpression	"strcmp ( s , ""...\\n"" ) == 0"		887025	1		==			
ANR	887101	CallExpression	"strcmp ( s , ""...\\n"" )"		887025	0					
ANR	887102	Callee	strcmp		887025	0					
ANR	887103	Identifier	strcmp		887025	0					
ANR	887104	ArgumentList	s		887025	1					
ANR	887105	Argument	s		887025	0					
ANR	887106	Identifier	s		887025	0					
ANR	887107	Argument	"""...\\n"""		887025	1					
ANR	887108	PrimaryExpression	"""...\\n"""		887025	0					
ANR	887109	PrimaryExpression	0		887025	1					
ANR	887110	CompoundStatement		16:60:277:277	887025	1					
ANR	887111	ExpressionStatement	"fsetpos ( file , & filep )"	900:2:20471:20494	887025	0	True				
ANR	887112	CallExpression	"fsetpos ( file , & filep )"		887025	0					
ANR	887113	Callee	fsetpos		887025	0					
ANR	887114	Identifier	fsetpos		887025	0					
ANR	887115	ArgumentList	file		887025	1					
ANR	887116	Argument	file		887025	0					
ANR	887117	Identifier	file		887025	0					
ANR	887118	Argument	& filep		887025	1					
ANR	887119	UnaryOperationExpression	& filep		887025	0					
ANR	887120	UnaryOperator	&		887025	0					
ANR	887121	Identifier	filep		887025	1					
ANR	887122	ReturnStatement	return 1 ;	901:2:20498:20506	887025	1	True				
ANR	887123	PrimaryExpression	1		887025	0					
ANR	887124	ExpressionStatement	s [ strlen ( s ) - 1 ] = '\\0'	905:1:20541:20568	887025	12	True				
ANR	887125	AssignmentExpression	s [ strlen ( s ) - 1 ] = '\\0'		887025	0		=			
ANR	887126	ArrayIndexing	s [ strlen ( s ) - 1 ]		887025	0					
ANR	887127	Identifier	s		887025	0					
ANR	887128	AdditiveExpression	strlen ( s ) - 1		887025	1		-			
ANR	887129	CallExpression	strlen ( s )		887025	0					
ANR	887130	Callee	strlen		887025	0					
ANR	887131	Identifier	strlen		887025	0					
ANR	887132	ArgumentList	s		887025	1					
ANR	887133	Argument	s		887025	0					
ANR	887134	Identifier	s		887025	0					
ANR	887135	PrimaryExpression	1		887025	1					
ANR	887136	PrimaryExpression	'\\0'		887025	1					
ANR	887137	ExpressionStatement	reason = strnewp ( & s [ 8 ] )	908:1:20602:20627	887025	13	True				
ANR	887138	AssignmentExpression	reason = strnewp ( & s [ 8 ] )		887025	0		=			
ANR	887139	Identifier	reason		887025	0					
ANR	887140	CallExpression	strnewp ( & s [ 8 ] )		887025	1					
ANR	887141	Callee	strnewp		887025	0					
ANR	887142	Identifier	strnewp		887025	0					
ANR	887143	ArgumentList	& s [ 8 ]		887025	1					
ANR	887144	Argument	& s [ 8 ]		887025	0					
ANR	887145	UnaryOperationExpression	& s [ 8 ]		887025	0					
ANR	887146	UnaryOperator	&		887025	0					
ANR	887147	ArrayIndexing	s [ 8 ]		887025	1					
ANR	887148	Identifier	s		887025	0					
ANR	887149	PrimaryExpression	8		887025	1					
ANR	887150	ReturnStatement	return 1 ;	909:1:20630:20638	887025	14	True				
ANR	887151	PrimaryExpression	1		887025	0					
ANR	887152	ReturnType	int		887025	1					
ANR	887153	Identifier	GlobusSubmitFailedEvent :: readEvent		887025	2					
ANR	887154	ParameterList	FILE * file		887025	3					
ANR	887155	Parameter	FILE * file	883:36:20177:20186	887025	0	True				
ANR	887156	ParameterType	FILE *		887025	0					
ANR	887157	Identifier	file		887025	1					
ANR	887158	CFGEntryNode	ENTRY		887025		True				
ANR	887159	CFGExitNode	EXIT		887025		True				
ANR	887160	Symbol	strcmp		887025						
ANR	887161	Symbol	reason		887025						
ANR	887162	Symbol	NULL		887025						
ANR	887163	Symbol	& filep		887025						
ANR	887164	Symbol	retval		887025						
ANR	887165	Symbol	fgets		887025						
ANR	887166	Symbol	strlen		887025						
ANR	887167	Symbol	fscanf		887025						
ANR	887168	Symbol	file		887025						
ANR	887169	Symbol	s		887025						
ANR	887170	Symbol	* strlen		887025						
ANR	887171	Symbol	strnewp		887025						
ANR	887172	Symbol	filep		887025						
ANR	887173	Symbol	* s		887025						
ANR	887174	Function	GlobusSubmitFailedEvent :: toClassAd	912:0:20643:20919							
ANR	887175	FunctionDef	GlobusSubmitFailedEvent :: toClassAd ()		887174	0					
ANR	887176	CompoundStatement		914:0:20693:20919	887174	0					
ANR	887177	IdentifierDeclStatement	ClassAd * myad = ULogEvent :: toClassAd ( ) ;	915:1:20696:20734	887174	0	True				
ANR	887178	IdentifierDecl	* myad = ULogEvent :: toClassAd ( )		887174	0					
ANR	887179	IdentifierDeclType	ClassAd *		887174	0					
ANR	887180	Identifier	myad		887174	1					
ANR	887181	AssignmentExpression	* myad = ULogEvent :: toClassAd ( )		887174	2		=			
ANR	887182	Identifier	myad		887174	0					
ANR	887183	CallExpression	ULogEvent :: toClassAd ( )		887174	1					
ANR	887184	Callee	ULogEvent :: toClassAd		887174	0					
ANR	887185	Identifier	ULogEvent :: toClassAd		887174	0					
ANR	887186	ArgumentList			887174	1					
ANR	887187	IfStatement	if ( ! myad )		887174	1					
ANR	887188	Condition	! myad	916:5:20741:20745	887174	0	True				
ANR	887189	UnaryOperationExpression	! myad		887174	0					
ANR	887190	UnaryOperator	!		887174	0					
ANR	887191	Identifier	myad		887174	1					
ANR	887192	ReturnStatement	return NULL ;	916:13:20749:20760	887174	1	True				
ANR	887193	Identifier	NULL		887174	0					
ANR	887194	IfStatement	if ( reason && reason [ 0 ] )		887174	2					
ANR	887195	Condition	reason && reason [ 0 ]	918:5:20768:20786	887174	0	True				
ANR	887196	AndExpression	reason && reason [ 0 ]		887174	0		&&			
ANR	887197	Identifier	reason		887174	0					
ANR	887198	ArrayIndexing	reason [ 0 ]		887174	1					
ANR	887199	Identifier	reason		887174	0					
ANR	887200	PrimaryExpression	0		887174	1					
ANR	887201	CompoundStatement		6:2:100:113	887174	1					
ANR	887202	IdentifierDeclStatement	MyString buf2 ;	919:2:20794:20807	887174	0	True				
ANR	887203	IdentifierDecl	buf2		887174	0					
ANR	887204	IdentifierDeclType	MyString		887174	0					
ANR	887205	Identifier	buf2		887174	1					
ANR	887206	ExpressionStatement	"buf2 . sprintf ( ""Reason = \\""%s\\"""" , reason )"	920:2:20811:20850	887174	1	True				
ANR	887207	CallExpression	"buf2 . sprintf ( ""Reason = \\""%s\\"""" , reason )"		887174	0					
ANR	887208	Callee	buf2 . sprintf		887174	0					
ANR	887209	MemberAccess	buf2 . sprintf		887174	0					
ANR	887210	Identifier	buf2		887174	0					
ANR	887211	Identifier	sprintf		887174	1					
ANR	887212	ArgumentList	"""Reason = \\""%s\\"""""		887174	1					
ANR	887213	Argument	"""Reason = \\""%s\\"""""		887174	0					
ANR	887214	PrimaryExpression	"""Reason = \\""%s\\"""""		887174	0					
ANR	887215	Argument	reason		887174	1					
ANR	887216	Identifier	reason		887174	0					
ANR	887217	IfStatement	if ( ! myad -> Insert ( buf2 . Value ( ) ) )		887174	2					
ANR	887218	Condition	! myad -> Insert ( buf2 . Value ( ) )	921:6:20858:20884	887174	0	True				
ANR	887219	UnaryOperationExpression	! myad -> Insert ( buf2 . Value ( ) )		887174	0					
ANR	887220	UnaryOperator	!		887174	0					
ANR	887221	CallExpression	myad -> Insert ( buf2 . Value ( ) )		887174	1					
ANR	887222	Callee	myad -> Insert		887174	0					
ANR	887223	PtrMemberAccess	myad -> Insert		887174	0					
ANR	887224	Identifier	myad		887174	0					
ANR	887225	Identifier	Insert		887174	1					
ANR	887226	ArgumentList	buf2 . Value ( )		887174	1					
ANR	887227	Argument	buf2 . Value ( )		887174	0					
ANR	887228	CallExpression	buf2 . Value ( )		887174	0					
ANR	887229	Callee	buf2 . Value		887174	0					
ANR	887230	MemberAccess	buf2 . Value		887174	0					
ANR	887231	Identifier	buf2		887174	0					
ANR	887232	Identifier	Value		887174	1					
ANR	887233	ArgumentList			887174	1					
ANR	887234	ReturnStatement	return NULL ;	921:36:20888:20899	887174	1	True				
ANR	887235	Identifier	NULL		887174	0					
ANR	887236	ReturnStatement	return myad ;	924:1:20906:20917	887174	3	True				
ANR	887237	Identifier	myad		887174	0					
ANR	887238	ReturnType	ClassAd *		887174	1					
ANR	887239	Identifier	GlobusSubmitFailedEvent :: toClassAd		887174	2					
ANR	887240	ParameterList			887174	3					
ANR	887241	CFGEntryNode	ENTRY		887174		True				
ANR	887242	CFGExitNode	EXIT		887174		True				
ANR	887243	Symbol	reason		887174						
ANR	887244	Symbol	buf2		887174						
ANR	887245	Symbol	NULL		887174						
ANR	887246	Symbol	* reason		887174						
ANR	887247	Symbol	* myad		887174						
ANR	887248	Symbol	myad -> Insert		887174						
ANR	887249	Symbol	myad		887174						
ANR	887250	Symbol	ULogEvent :: toClassAd		887174						
ANR	887251	Symbol	buf2 . Value		887174						
ANR	887252	Function	GlobusSubmitFailedEvent :: initFromClassAd	927:0:20922:21290							
ANR	887253	FunctionDef	GlobusSubmitFailedEvent :: initFromClassAd (ClassAd * ad)		887252	0					
ANR	887254	CompoundStatement		929:0:20981:21290	887252	0					
ANR	887255	ExpressionStatement	ULogEvent :: initFromClassAd ( ad )	930:1:20984:21014	887252	0	True				
ANR	887256	CallExpression	ULogEvent :: initFromClassAd ( ad )		887252	0					
ANR	887257	Callee	ULogEvent :: initFromClassAd		887252	0					
ANR	887258	Identifier	ULogEvent :: initFromClassAd		887252	0					
ANR	887259	ArgumentList	ad		887252	1					
ANR	887260	Argument	ad		887252	0					
ANR	887261	Identifier	ad		887252	0					
ANR	887262	IfStatement	if ( ! ad )		887252	1					
ANR	887263	Condition	! ad	932:5:21022:21024	887252	0	True				
ANR	887264	UnaryOperationExpression	! ad		887252	0					
ANR	887265	UnaryOperator	!		887252	0					
ANR	887266	Identifier	ad		887252	1					
ANR	887267	ReturnStatement	return ;	932:11:21028:21034	887252	1	True				
ANR	887268	IdentifierDeclStatement	char * mallocstr = NULL ;	935:1:21111:21133	887252	2	True				
ANR	887269	IdentifierDecl	* mallocstr = NULL		887252	0					
ANR	887270	IdentifierDeclType	char *		887252	0					
ANR	887271	Identifier	mallocstr		887252	1					
ANR	887272	AssignmentExpression	* mallocstr = NULL		887252	2		=			
ANR	887273	Identifier	NULL		887252	0					
ANR	887274	Identifier	NULL		887252	1					
ANR	887275	ExpressionStatement	"ad -> LookupString ( ""Reason"" , & mallocstr )"	936:1:21136:21174	887252	3	True				
ANR	887276	CallExpression	"ad -> LookupString ( ""Reason"" , & mallocstr )"		887252	0					
ANR	887277	Callee	ad -> LookupString		887252	0					
ANR	887278	PtrMemberAccess	ad -> LookupString		887252	0					
ANR	887279	Identifier	ad		887252	0					
ANR	887280	Identifier	LookupString		887252	1					
ANR	887281	ArgumentList	"""Reason"""		887252	1					
ANR	887282	Argument	"""Reason"""		887252	0					
ANR	887283	PrimaryExpression	"""Reason"""		887252	0					
ANR	887284	Argument	& mallocstr		887252	1					
ANR	887285	UnaryOperationExpression	& mallocstr		887252	0					
ANR	887286	UnaryOperator	&		887252	0					
ANR	887287	Identifier	mallocstr		887252	1					
ANR	887288	IfStatement	if ( mallocstr )		887252	4					
ANR	887289	Condition	mallocstr	937:5:21181:21189	887252	0	True				
ANR	887290	Identifier	mallocstr		887252	0					
ANR	887291	CompoundStatement		9:17:211:211	887252	1					
ANR	887292	ExpressionStatement	reason = new char [ strlen ( mallocstr ) + 1 ]	938:2:21197:21237	887252	0	True				
ANR	887293	AssignmentExpression	reason = new char [ strlen ( mallocstr ) + 1 ]		887252	0		=			
ANR	887294	Identifier	reason		887252	0					
ANR	887295	AdditiveExpression	strlen ( mallocstr ) + 1		887252	1		+			
ANR	887296	CallExpression	strlen ( mallocstr )		887252	0					
ANR	887297	Callee	strlen		887252	0					
ANR	887298	Identifier	strlen		887252	0					
ANR	887299	ArgumentList	mallocstr		887252	1					
ANR	887300	Argument	mallocstr		887252	0					
ANR	887301	Identifier	mallocstr		887252	0					
ANR	887302	PrimaryExpression	1		887252	1					
ANR	887303	ExpressionStatement	"strcpy ( reason , mallocstr )"	939:2:21241:21266	887252	1	True				
ANR	887304	CallExpression	"strcpy ( reason , mallocstr )"		887252	0					
ANR	887305	Callee	strcpy		887252	0					
ANR	887306	Identifier	strcpy		887252	0					
ANR	887307	ArgumentList	reason		887252	1					
ANR	887308	Argument	reason		887252	0					
ANR	887309	Identifier	reason		887252	0					
ANR	887310	Argument	mallocstr		887252	1					
ANR	887311	Identifier	mallocstr		887252	0					
ANR	887312	ExpressionStatement	free ( mallocstr )	940:2:21270:21285	887252	2	True				
ANR	887313	CallExpression	free ( mallocstr )		887252	0					
ANR	887314	Callee	free		887252	0					
ANR	887315	Identifier	free		887252	0					
ANR	887316	ArgumentList	mallocstr		887252	1					
ANR	887317	Argument	mallocstr		887252	0					
ANR	887318	Identifier	mallocstr		887252	0					
ANR	887319	ReturnType	void		887252	1					
ANR	887320	Identifier	GlobusSubmitFailedEvent :: initFromClassAd		887252	2					
ANR	887321	ParameterList	ClassAd * ad		887252	3					
ANR	887322	Parameter	ClassAd * ad	928:41:20968:20978	887252	0	True				
ANR	887323	ParameterType	ClassAd *		887252	0					
ANR	887324	Identifier	ad		887252	1					
ANR	887325	CFGEntryNode	ENTRY		887252		True				
ANR	887326	CFGExitNode	EXIT		887252		True				
ANR	887327	Symbol	strlen		887252						
ANR	887328	Symbol	reason		887252						
ANR	887329	Symbol	& mallocstr		887252						
ANR	887330	Symbol	ad		887252						
ANR	887331	Symbol	NULL		887252						
ANR	887332	Symbol	mallocstr		887252						
ANR	887333	Function	GlobusResourceUpEvent :: GlobusResourceUpEvent	945:0:21329:21441							
ANR	887334	FunctionDef	GlobusResourceUpEvent :: GlobusResourceUpEvent ()		887333	0					
ANR	887335	CompoundStatement		946:0:21380:21441	887333	0					
ANR	887336	ExpressionStatement	eventNumber = ULOG_GLOBUS_RESOURCE_UP	947:1:21383:21420	887333	0	True				
ANR	887337	AssignmentExpression	eventNumber = ULOG_GLOBUS_RESOURCE_UP		887333	0		=			
ANR	887338	Identifier	eventNumber		887333	0					
ANR	887339	Identifier	ULOG_GLOBUS_RESOURCE_UP		887333	1					
ANR	887340	ExpressionStatement	rmContact = NULL	948:1:21423:21439	887333	1	True				
ANR	887341	AssignmentExpression	rmContact = NULL		887333	0		=			
ANR	887342	Identifier	rmContact		887333	0					
ANR	887343	Identifier	NULL		887333	1					
ANR	887344	Identifier	GlobusResourceUpEvent :: GlobusResourceUpEvent		887333	1					
ANR	887345	ParameterList			887333	2					
ANR	887346	CFGEntryNode	ENTRY		887333		True				
ANR	887347	CFGExitNode	EXIT		887333		True				
ANR	887348	Symbol	NULL		887333						
ANR	887349	Symbol	eventNumber		887333						
ANR	887350	Symbol	ULOG_GLOBUS_RESOURCE_UP		887333						
ANR	887351	Symbol	rmContact		887333						
ANR	887352	Function	GlobusResourceUpEvent :: ~GlobusResourceUpEvent	951:0:21444:21519							
ANR	887353	FunctionDef	GlobusResourceUpEvent :: ~GlobusResourceUpEvent ()		887352	0					
ANR	887354	CompoundStatement		952:0:21496:21519	887352	0					
ANR	887355	Statement	delete	953:1:21499:21504	887352	0	True				
ANR	887356	Statement	[	953:7:21505:21505	887352	1	True				
ANR	887357	Statement	]	953:8:21506:21506	887352	2	True				
ANR	887358	ExpressionStatement	rmContact	953:10:21508:21517	887352	3	True				
ANR	887359	Identifier	rmContact		887352	0					
ANR	887360	Identifier	GlobusResourceUpEvent :: ~GlobusResourceUpEvent		887352	1					
ANR	887361	ParameterList			887352	2					
ANR	887362	CFGEntryNode	ENTRY		887352		True				
ANR	887363	CFGExitNode	EXIT		887352		True				
ANR	887364	Function	GlobusResourceUpEvent :: writeEvent	956:0:21522:21878							
ANR	887365	FunctionDef	GlobusResourceUpEvent :: writeEvent (FILE * file)		887364	0					
ANR	887366	CompoundStatement		958:0:21573:21878	887364	0					
ANR	887367	IdentifierDeclStatement	"const char * unknown = ""UNKNOWN"" ;"	959:1:21576:21608	887364	0	True				
ANR	887368	IdentifierDecl	"* unknown = ""UNKNOWN"""		887364	0					
ANR	887369	IdentifierDeclType	const char *		887364	0					
ANR	887370	Identifier	unknown		887364	1					
ANR	887371	AssignmentExpression	"* unknown = ""UNKNOWN"""		887364	2		=			
ANR	887372	Identifier	unknown		887364	0					
ANR	887373	PrimaryExpression	"""UNKNOWN"""		887364	1					
ANR	887374	IdentifierDeclStatement	const char * rm = unknown ;	960:1:21611:21636	887364	1	True				
ANR	887375	IdentifierDecl	* rm = unknown		887364	0					
ANR	887376	IdentifierDeclType	const char *		887364	0					
ANR	887377	Identifier	rm		887364	1					
ANR	887378	AssignmentExpression	* rm = unknown		887364	2		=			
ANR	887379	Identifier	unknown		887364	0					
ANR	887380	Identifier	unknown		887364	1					
ANR	887381	IdentifierDeclStatement	"int retval = fprintf ( file , ""Globus Resource Back Up\\n"" ) ;"	962:1:21640:21696	887364	2	True				
ANR	887382	IdentifierDecl	"retval = fprintf ( file , ""Globus Resource Back Up\\n"" )"		887364	0					
ANR	887383	IdentifierDeclType	int		887364	0					
ANR	887384	Identifier	retval		887364	1					
ANR	887385	AssignmentExpression	"retval = fprintf ( file , ""Globus Resource Back Up\\n"" )"		887364	2		=			
ANR	887386	Identifier	retval		887364	0					
ANR	887387	CallExpression	"fprintf ( file , ""Globus Resource Back Up\\n"" )"		887364	1					
ANR	887388	Callee	fprintf		887364	0					
ANR	887389	Identifier	fprintf		887364	0					
ANR	887390	ArgumentList	file		887364	1					
ANR	887391	Argument	file		887364	0					
ANR	887392	Identifier	file		887364	0					
ANR	887393	Argument	"""Globus Resource Back Up\\n"""		887364	1					
ANR	887394	PrimaryExpression	"""Globus Resource Back Up\\n"""		887364	0					
ANR	887395	IfStatement	if ( retval < 0 )		887364	3					
ANR	887396	Condition	retval < 0	963:5:21703:21712	887364	0	True				
ANR	887397	RelationalExpression	retval < 0		887364	0		<			
ANR	887398	Identifier	retval		887364	0					
ANR	887399	PrimaryExpression	0		887364	1					
ANR	887400	CompoundStatement		7:1:142:142	887364	1					
ANR	887401	ReturnStatement	return 0 ;	965:2:21720:21728	887364	0	True				
ANR	887402	PrimaryExpression	0		887364	0					
ANR	887403	IfStatement	if ( rmContact )		887364	4					
ANR	887404	Condition	rmContact	968:6:21740:21748	887364	0	True				
ANR	887405	Identifier	rmContact		887364	0					
ANR	887406	ExpressionStatement	rm = rmContact	968:18:21752:21766	887364	1	True				
ANR	887407	AssignmentExpression	rm = rmContact		887364	0		=			
ANR	887408	Identifier	rm		887364	0					
ANR	887409	Identifier	rmContact		887364	1					
ANR	887410	ExpressionStatement	"retval = fprintf ( file , ""    RM-Contact: %.8191s\\n"" , rm )"	970:1:21770:21827	887364	5	True				
ANR	887411	AssignmentExpression	"retval = fprintf ( file , ""    RM-Contact: %.8191s\\n"" , rm )"		887364	0		=			
ANR	887412	Identifier	retval		887364	0					
ANR	887413	CallExpression	"fprintf ( file , ""    RM-Contact: %.8191s\\n"" , rm )"		887364	1					
ANR	887414	Callee	fprintf		887364	0					
ANR	887415	Identifier	fprintf		887364	0					
ANR	887416	ArgumentList	file		887364	1					
ANR	887417	Argument	file		887364	0					
ANR	887418	Identifier	file		887364	0					
ANR	887419	Argument	"""    RM-Contact: %.8191s\\n"""		887364	1					
ANR	887420	PrimaryExpression	"""    RM-Contact: %.8191s\\n"""		887364	0					
ANR	887421	Argument	rm		887364	2					
ANR	887422	Identifier	rm		887364	0					
ANR	887423	IfStatement	if ( retval < 0 )		887364	6					
ANR	887424	Condition	retval < 0	971:5:21834:21843	887364	0	True				
ANR	887425	RelationalExpression	retval < 0		887364	0		<			
ANR	887426	Identifier	retval		887364	0					
ANR	887427	PrimaryExpression	0		887364	1					
ANR	887428	CompoundStatement		14:18:273:273	887364	1					
ANR	887429	ReturnStatement	return 0 ;	972:2:21851:21859	887364	0	True				
ANR	887430	PrimaryExpression	0		887364	0					
ANR	887431	ReturnStatement	return ( 1 ) ;	975:1:21866:21876	887364	7	True				
ANR	887432	PrimaryExpression	1		887364	0					
ANR	887433	ReturnType	int		887364	1					
ANR	887434	Identifier	GlobusResourceUpEvent :: writeEvent		887364	2					
ANR	887435	ParameterList	FILE * file		887364	3					
ANR	887436	Parameter	FILE * file	957:35:21561:21570	887364	0	True				
ANR	887437	ParameterType	FILE *		887364	0					
ANR	887438	Identifier	file		887364	1					
ANR	887439	CFGEntryNode	ENTRY		887364		True				
ANR	887440	CFGExitNode	EXIT		887364		True				
ANR	887441	Symbol	file		887364						
ANR	887442	Symbol	rm		887364						
ANR	887443	Symbol	rmContact		887364						
ANR	887444	Symbol	fprintf		887364						
ANR	887445	Symbol	retval		887364						
ANR	887446	Symbol	unknown		887364						
ANR	887447	Function	GlobusResourceUpEvent :: readEvent	978:0:21881:22237							
ANR	887448	FunctionDef	GlobusResourceUpEvent :: readEvent (FILE * file)		887447	0					
ANR	887449	CompoundStatement		980:0:21931:22237	887447	0					
ANR	887450	IdentifierDeclStatement	char s [ 8192 ] ;	981:1:21934:21946	887447	0	True				
ANR	887451	IdentifierDecl	s [ 8192 ]		887447	0					
ANR	887452	IdentifierDeclType	char [ 8192 ]		887447	0					
ANR	887453	Identifier	s		887447	1					
ANR	887454	PrimaryExpression	8192		887447	2					
ANR	887455	Statement	delete	983:1:21950:21955	887447	1	True				
ANR	887456	Statement	[	983:7:21956:21956	887447	2	True				
ANR	887457	Statement	]	983:8:21957:21957	887447	3	True				
ANR	887458	ExpressionStatement	rmContact	983:10:21959:21968	887447	4	True				
ANR	887459	Identifier	rmContact		887447	0					
ANR	887460	ExpressionStatement	rmContact = NULL	984:1:21971:21987	887447	5	True				
ANR	887461	AssignmentExpression	rmContact = NULL		887447	0		=			
ANR	887462	Identifier	rmContact		887447	0					
ANR	887463	Identifier	NULL		887447	1					
ANR	887464	IdentifierDeclStatement	"int retval = fscanf ( file , ""Globus Resource Back Up\\n"" ) ;"	985:1:21990:22045	887447	6	True				
ANR	887465	IdentifierDecl	"retval = fscanf ( file , ""Globus Resource Back Up\\n"" )"		887447	0					
ANR	887466	IdentifierDeclType	int		887447	0					
ANR	887467	Identifier	retval		887447	1					
ANR	887468	AssignmentExpression	"retval = fscanf ( file , ""Globus Resource Back Up\\n"" )"		887447	2		=			
ANR	887469	Identifier	retval		887447	0					
ANR	887470	CallExpression	"fscanf ( file , ""Globus Resource Back Up\\n"" )"		887447	1					
ANR	887471	Callee	fscanf		887447	0					
ANR	887472	Identifier	fscanf		887447	0					
ANR	887473	ArgumentList	file		887447	1					
ANR	887474	Argument	file		887447	0					
ANR	887475	Identifier	file		887447	0					
ANR	887476	Argument	"""Globus Resource Back Up\\n"""		887447	1					
ANR	887477	PrimaryExpression	"""Globus Resource Back Up\\n"""		887447	0					
ANR	887478	IfStatement	if ( retval != 0 )		887447	7					
ANR	887479	Condition	retval != 0	986:8:22055:22065	887447	0	True				
ANR	887480	EqualityExpression	retval != 0		887447	0		!=			
ANR	887481	Identifier	retval		887447	0					
ANR	887482	PrimaryExpression	0		887447	1					
ANR	887483	CompoundStatement		8:4:140:140	887447	1					
ANR	887484	ReturnStatement	return 0 ;	988:2:22076:22084	887447	0	True				
ANR	887485	PrimaryExpression	0		887447	0					
ANR	887486	ExpressionStatement	s [ 0 ] = '\\0'	990:1:22093:22104	887447	8	True				
ANR	887487	AssignmentExpression	s [ 0 ] = '\\0'		887447	0		=			
ANR	887488	ArrayIndexing	s [ 0 ]		887447	0					
ANR	887489	Identifier	s		887447	0					
ANR	887490	PrimaryExpression	0		887447	1					
ANR	887491	PrimaryExpression	'\\0'		887447	1					
ANR	887492	ExpressionStatement	"retval = fscanf ( file , ""    RM-Contact: %8191s\\n"" , s )"	991:1:22107:22161	887447	9	True				
ANR	887493	AssignmentExpression	"retval = fscanf ( file , ""    RM-Contact: %8191s\\n"" , s )"		887447	0		=			
ANR	887494	Identifier	retval		887447	0					
ANR	887495	CallExpression	"fscanf ( file , ""    RM-Contact: %8191s\\n"" , s )"		887447	1					
ANR	887496	Callee	fscanf		887447	0					
ANR	887497	Identifier	fscanf		887447	0					
ANR	887498	ArgumentList	file		887447	1					
ANR	887499	Argument	file		887447	0					
ANR	887500	Identifier	file		887447	0					
ANR	887501	Argument	"""    RM-Contact: %8191s\\n"""		887447	1					
ANR	887502	PrimaryExpression	"""    RM-Contact: %8191s\\n"""		887447	0					
ANR	887503	Argument	s		887447	2					
ANR	887504	Identifier	s		887447	0					
ANR	887505	IfStatement	if ( retval != 1 )		887447	10					
ANR	887506	Condition	retval != 1	992:6:22169:22179	887447	0	True				
ANR	887507	EqualityExpression	retval != 1		887447	0		!=			
ANR	887508	Identifier	retval		887447	0					
ANR	887509	PrimaryExpression	1		887447	1					
ANR	887510	CompoundStatement		14:1:252:252	887447	1					
ANR	887511	ReturnStatement	return 0 ;	994:2:22188:22196	887447	0	True				
ANR	887512	PrimaryExpression	0		887447	0					
ANR	887513	ExpressionStatement	rmContact = strnewp ( s )	996:1:22202:22224	887447	11	True				
ANR	887514	AssignmentExpression	rmContact = strnewp ( s )		887447	0		=			
ANR	887515	Identifier	rmContact		887447	0					
ANR	887516	CallExpression	strnewp ( s )		887447	1					
ANR	887517	Callee	strnewp		887447	0					
ANR	887518	Identifier	strnewp		887447	0					
ANR	887519	ArgumentList	s		887447	1					
ANR	887520	Argument	s		887447	0					
ANR	887521	Identifier	s		887447	0					
ANR	887522	ReturnStatement	return 1 ;	997:1:22227:22235	887447	12	True				
ANR	887523	PrimaryExpression	1		887447	0					
ANR	887524	ReturnType	int		887447	1					
ANR	887525	Identifier	GlobusResourceUpEvent :: readEvent		887447	2					
ANR	887526	ParameterList	FILE * file		887447	3					
ANR	887527	Parameter	FILE * file	979:34:21919:21928	887447	0	True				
ANR	887528	ParameterType	FILE *		887447	0					
ANR	887529	Identifier	file		887447	1					
ANR	887530	CFGEntryNode	ENTRY		887447		True				
ANR	887531	CFGExitNode	EXIT		887447		True				
ANR	887532	Symbol	fscanf		887447						
ANR	887533	Symbol	file		887447						
ANR	887534	Symbol	s		887447						
ANR	887535	Symbol	NULL		887447						
ANR	887536	Symbol	strnewp		887447						
ANR	887537	Symbol	rmContact		887447						
ANR	887538	Symbol	* s		887447						
ANR	887539	Symbol	retval		887447						
ANR	887540	Function	GlobusResourceUpEvent :: toClassAd	1000:0:22240:22525							
ANR	887541	FunctionDef	GlobusResourceUpEvent :: toClassAd ()		887540	0					
ANR	887542	CompoundStatement		1002:0:22288:22525	887540	0					
ANR	887543	IdentifierDeclStatement	ClassAd * myad = ULogEvent :: toClassAd ( ) ;	1003:1:22291:22329	887540	0	True				
ANR	887544	IdentifierDecl	* myad = ULogEvent :: toClassAd ( )		887540	0					
ANR	887545	IdentifierDeclType	ClassAd *		887540	0					
ANR	887546	Identifier	myad		887540	1					
ANR	887547	AssignmentExpression	* myad = ULogEvent :: toClassAd ( )		887540	2		=			
ANR	887548	Identifier	myad		887540	0					
ANR	887549	CallExpression	ULogEvent :: toClassAd ( )		887540	1					
ANR	887550	Callee	ULogEvent :: toClassAd		887540	0					
ANR	887551	Identifier	ULogEvent :: toClassAd		887540	0					
ANR	887552	ArgumentList			887540	1					
ANR	887553	IfStatement	if ( ! myad )		887540	1					
ANR	887554	Condition	! myad	1004:5:22336:22340	887540	0	True				
ANR	887555	UnaryOperationExpression	! myad		887540	0					
ANR	887556	UnaryOperator	!		887540	0					
ANR	887557	Identifier	myad		887540	1					
ANR	887558	ReturnStatement	return NULL ;	1004:13:22344:22355	887540	1	True				
ANR	887559	Identifier	NULL		887540	0					
ANR	887560	IfStatement	if ( rmContact && rmContact [ 0 ] )		887540	2					
ANR	887561	Condition	rmContact && rmContact [ 0 ]	1006:5:22363:22387	887540	0	True				
ANR	887562	AndExpression	rmContact && rmContact [ 0 ]		887540	0		&&			
ANR	887563	Identifier	rmContact		887540	0					
ANR	887564	ArrayIndexing	rmContact [ 0 ]		887540	1					
ANR	887565	Identifier	rmContact		887540	0					
ANR	887566	PrimaryExpression	0		887540	1					
ANR	887567	CompoundStatement		6:2:106:119	887540	1					
ANR	887568	IdentifierDeclStatement	MyString buf2 ;	1007:2:22395:22408	887540	0	True				
ANR	887569	IdentifierDecl	buf2		887540	0					
ANR	887570	IdentifierDeclType	MyString		887540	0					
ANR	887571	Identifier	buf2		887540	1					
ANR	887572	ExpressionStatement	"buf2 . sprintf ( ""RMContact = \\""%s\\"""" , rmContact )"	1008:2:22412:22456	887540	1	True				
ANR	887573	CallExpression	"buf2 . sprintf ( ""RMContact = \\""%s\\"""" , rmContact )"		887540	0					
ANR	887574	Callee	buf2 . sprintf		887540	0					
ANR	887575	MemberAccess	buf2 . sprintf		887540	0					
ANR	887576	Identifier	buf2		887540	0					
ANR	887577	Identifier	sprintf		887540	1					
ANR	887578	ArgumentList	"""RMContact = \\""%s\\"""""		887540	1					
ANR	887579	Argument	"""RMContact = \\""%s\\"""""		887540	0					
ANR	887580	PrimaryExpression	"""RMContact = \\""%s\\"""""		887540	0					
ANR	887581	Argument	rmContact		887540	1					
ANR	887582	Identifier	rmContact		887540	0					
ANR	887583	IfStatement	if ( ! myad -> Insert ( buf2 . Value ( ) ) )		887540	2					
ANR	887584	Condition	! myad -> Insert ( buf2 . Value ( ) )	1009:6:22464:22490	887540	0	True				
ANR	887585	UnaryOperationExpression	! myad -> Insert ( buf2 . Value ( ) )		887540	0					
ANR	887586	UnaryOperator	!		887540	0					
ANR	887587	CallExpression	myad -> Insert ( buf2 . Value ( ) )		887540	1					
ANR	887588	Callee	myad -> Insert		887540	0					
ANR	887589	PtrMemberAccess	myad -> Insert		887540	0					
ANR	887590	Identifier	myad		887540	0					
ANR	887591	Identifier	Insert		887540	1					
ANR	887592	ArgumentList	buf2 . Value ( )		887540	1					
ANR	887593	Argument	buf2 . Value ( )		887540	0					
ANR	887594	CallExpression	buf2 . Value ( )		887540	0					
ANR	887595	Callee	buf2 . Value		887540	0					
ANR	887596	MemberAccess	buf2 . Value		887540	0					
ANR	887597	Identifier	buf2		887540	0					
ANR	887598	Identifier	Value		887540	1					
ANR	887599	ArgumentList			887540	1					
ANR	887600	ReturnStatement	return NULL ;	1009:36:22494:22505	887540	1	True				
ANR	887601	Identifier	NULL		887540	0					
ANR	887602	ReturnStatement	return myad ;	1012:1:22512:22523	887540	3	True				
ANR	887603	Identifier	myad		887540	0					
ANR	887604	ReturnType	ClassAd *		887540	1					
ANR	887605	Identifier	GlobusResourceUpEvent :: toClassAd		887540	2					
ANR	887606	ParameterList			887540	3					
ANR	887607	CFGEntryNode	ENTRY		887540		True				
ANR	887608	CFGExitNode	EXIT		887540		True				
ANR	887609	Symbol	buf2		887540						
ANR	887610	Symbol	NULL		887540						
ANR	887611	Symbol	* rmContact		887540						
ANR	887612	Symbol	* myad		887540						
ANR	887613	Symbol	myad -> Insert		887540						
ANR	887614	Symbol	myad		887540						
ANR	887615	Symbol	rmContact		887540						
ANR	887616	Symbol	ULogEvent :: toClassAd		887540						
ANR	887617	Symbol	buf2 . Value		887540						
ANR	887618	Function	GlobusResourceUpEvent :: initFromClassAd	1015:0:22528:22903							
ANR	887619	FunctionDef	GlobusResourceUpEvent :: initFromClassAd (ClassAd * ad)		887618	0					
ANR	887620	CompoundStatement		1017:0:22585:22903	887618	0					
ANR	887621	ExpressionStatement	ULogEvent :: initFromClassAd ( ad )	1018:1:22588:22618	887618	0	True				
ANR	887622	CallExpression	ULogEvent :: initFromClassAd ( ad )		887618	0					
ANR	887623	Callee	ULogEvent :: initFromClassAd		887618	0					
ANR	887624	Identifier	ULogEvent :: initFromClassAd		887618	0					
ANR	887625	ArgumentList	ad		887618	1					
ANR	887626	Argument	ad		887618	0					
ANR	887627	Identifier	ad		887618	0					
ANR	887628	IfStatement	if ( ! ad )		887618	1					
ANR	887629	Condition	! ad	1020:5:22626:22628	887618	0	True				
ANR	887630	UnaryOperationExpression	! ad		887618	0					
ANR	887631	UnaryOperator	!		887618	0					
ANR	887632	Identifier	ad		887618	1					
ANR	887633	ReturnStatement	return ;	1020:11:22632:22638	887618	1	True				
ANR	887634	IdentifierDeclStatement	char * mallocstr = NULL ;	1023:1:22715:22737	887618	2	True				
ANR	887635	IdentifierDecl	* mallocstr = NULL		887618	0					
ANR	887636	IdentifierDeclType	char *		887618	0					
ANR	887637	Identifier	mallocstr		887618	1					
ANR	887638	AssignmentExpression	* mallocstr = NULL		887618	2		=			
ANR	887639	Identifier	NULL		887618	0					
ANR	887640	Identifier	NULL		887618	1					
ANR	887641	ExpressionStatement	"ad -> LookupString ( ""RMContact"" , & mallocstr )"	1024:1:22740:22781	887618	3	True				
ANR	887642	CallExpression	"ad -> LookupString ( ""RMContact"" , & mallocstr )"		887618	0					
ANR	887643	Callee	ad -> LookupString		887618	0					
ANR	887644	PtrMemberAccess	ad -> LookupString		887618	0					
ANR	887645	Identifier	ad		887618	0					
ANR	887646	Identifier	LookupString		887618	1					
ANR	887647	ArgumentList	"""RMContact"""		887618	1					
ANR	887648	Argument	"""RMContact"""		887618	0					
ANR	887649	PrimaryExpression	"""RMContact"""		887618	0					
ANR	887650	Argument	& mallocstr		887618	1					
ANR	887651	UnaryOperationExpression	& mallocstr		887618	0					
ANR	887652	UnaryOperator	&		887618	0					
ANR	887653	Identifier	mallocstr		887618	1					
ANR	887654	IfStatement	if ( mallocstr )		887618	4					
ANR	887655	Condition	mallocstr	1025:5:22788:22796	887618	0	True				
ANR	887656	Identifier	mallocstr		887618	0					
ANR	887657	CompoundStatement		9:17:214:214	887618	1					
ANR	887658	ExpressionStatement	rmContact = new char [ strlen ( mallocstr ) + 1 ]	1026:2:22804:22847	887618	0	True				
ANR	887659	AssignmentExpression	rmContact = new char [ strlen ( mallocstr ) + 1 ]		887618	0		=			
ANR	887660	Identifier	rmContact		887618	0					
ANR	887661	AdditiveExpression	strlen ( mallocstr ) + 1		887618	1		+			
ANR	887662	CallExpression	strlen ( mallocstr )		887618	0					
ANR	887663	Callee	strlen		887618	0					
ANR	887664	Identifier	strlen		887618	0					
ANR	887665	ArgumentList	mallocstr		887618	1					
ANR	887666	Argument	mallocstr		887618	0					
ANR	887667	Identifier	mallocstr		887618	0					
ANR	887668	PrimaryExpression	1		887618	1					
ANR	887669	ExpressionStatement	"strcpy ( rmContact , mallocstr )"	1027:2:22851:22879	887618	1	True				
ANR	887670	CallExpression	"strcpy ( rmContact , mallocstr )"		887618	0					
ANR	887671	Callee	strcpy		887618	0					
ANR	887672	Identifier	strcpy		887618	0					
ANR	887673	ArgumentList	rmContact		887618	1					
ANR	887674	Argument	rmContact		887618	0					
ANR	887675	Identifier	rmContact		887618	0					
ANR	887676	Argument	mallocstr		887618	1					
ANR	887677	Identifier	mallocstr		887618	0					
ANR	887678	ExpressionStatement	free ( mallocstr )	1028:2:22883:22898	887618	2	True				
ANR	887679	CallExpression	free ( mallocstr )		887618	0					
ANR	887680	Callee	free		887618	0					
ANR	887681	Identifier	free		887618	0					
ANR	887682	ArgumentList	mallocstr		887618	1					
ANR	887683	Argument	mallocstr		887618	0					
ANR	887684	Identifier	mallocstr		887618	0					
ANR	887685	ReturnType	void		887618	1					
ANR	887686	Identifier	GlobusResourceUpEvent :: initFromClassAd		887618	2					
ANR	887687	ParameterList	ClassAd * ad		887618	3					
ANR	887688	Parameter	ClassAd * ad	1016:39:22572:22582	887618	0	True				
ANR	887689	ParameterType	ClassAd *		887618	0					
ANR	887690	Identifier	ad		887618	1					
ANR	887691	CFGEntryNode	ENTRY		887618		True				
ANR	887692	CFGExitNode	EXIT		887618		True				
ANR	887693	Symbol	strlen		887618						
ANR	887694	Symbol	& mallocstr		887618						
ANR	887695	Symbol	ad		887618						
ANR	887696	Symbol	NULL		887618						
ANR	887697	Symbol	mallocstr		887618						
ANR	887698	Symbol	rmContact		887618						
ANR	887699	Function	GlobusResourceDownEvent :: GlobusResourceDownEvent	1034:0:22943:23061							
ANR	887700	FunctionDef	GlobusResourceDownEvent :: GlobusResourceDownEvent ()		887699	0					
ANR	887701	CompoundStatement		1035:0:22998:23061	887699	0					
ANR	887702	ExpressionStatement	eventNumber = ULOG_GLOBUS_RESOURCE_DOWN	1036:1:23001:23040	887699	0	True				
ANR	887703	AssignmentExpression	eventNumber = ULOG_GLOBUS_RESOURCE_DOWN		887699	0		=			
ANR	887704	Identifier	eventNumber		887699	0					
ANR	887705	Identifier	ULOG_GLOBUS_RESOURCE_DOWN		887699	1					
ANR	887706	ExpressionStatement	rmContact = NULL	1037:1:23043:23059	887699	1	True				
ANR	887707	AssignmentExpression	rmContact = NULL		887699	0		=			
ANR	887708	Identifier	rmContact		887699	0					
ANR	887709	Identifier	NULL		887699	1					
ANR	887710	Identifier	GlobusResourceDownEvent :: GlobusResourceDownEvent		887699	1					
ANR	887711	ParameterList			887699	2					
ANR	887712	CFGEntryNode	ENTRY		887699		True				
ANR	887713	CFGExitNode	EXIT		887699		True				
ANR	887714	Symbol	NULL		887699						
ANR	887715	Symbol	eventNumber		887699						
ANR	887716	Symbol	ULOG_GLOBUS_RESOURCE_DOWN		887699						
ANR	887717	Symbol	rmContact		887699						
ANR	887718	Function	GlobusResourceDownEvent :: ~GlobusResourceDownEvent	1040:0:23064:23143							
ANR	887719	FunctionDef	GlobusResourceDownEvent :: ~GlobusResourceDownEvent ()		887718	0					
ANR	887720	CompoundStatement		1041:0:23120:23143	887718	0					
ANR	887721	Statement	delete	1042:1:23123:23128	887718	0	True				
ANR	887722	Statement	[	1042:7:23129:23129	887718	1	True				
ANR	887723	Statement	]	1042:8:23130:23130	887718	2	True				
ANR	887724	ExpressionStatement	rmContact	1042:10:23132:23141	887718	3	True				
ANR	887725	Identifier	rmContact		887718	0					
ANR	887726	Identifier	GlobusResourceDownEvent :: ~GlobusResourceDownEvent		887718	1					
ANR	887727	ParameterList			887718	2					
ANR	887728	CFGEntryNode	ENTRY		887718		True				
ANR	887729	CFGExitNode	EXIT		887718		True				
ANR	887730	Function	GlobusResourceDownEvent :: writeEvent	1045:0:23146:23510							
ANR	887731	FunctionDef	GlobusResourceDownEvent :: writeEvent (FILE * file)		887730	0					
ANR	887732	CompoundStatement		1047:0:23199:23510	887730	0					
ANR	887733	IdentifierDeclStatement	"const char * unknown = ""UNKNOWN"" ;"	1048:1:23202:23234	887730	0	True				
ANR	887734	IdentifierDecl	"* unknown = ""UNKNOWN"""		887730	0					
ANR	887735	IdentifierDeclType	const char *		887730	0					
ANR	887736	Identifier	unknown		887730	1					
ANR	887737	AssignmentExpression	"* unknown = ""UNKNOWN"""		887730	2		=			
ANR	887738	Identifier	unknown		887730	0					
ANR	887739	PrimaryExpression	"""UNKNOWN"""		887730	1					
ANR	887740	IdentifierDeclStatement	const char * rm = unknown ;	1049:1:23237:23262	887730	1	True				
ANR	887741	IdentifierDecl	* rm = unknown		887730	0					
ANR	887742	IdentifierDeclType	const char *		887730	0					
ANR	887743	Identifier	rm		887730	1					
ANR	887744	AssignmentExpression	* rm = unknown		887730	2		=			
ANR	887745	Identifier	unknown		887730	0					
ANR	887746	Identifier	unknown		887730	1					
ANR	887747	IdentifierDeclStatement	"int retval = fprintf ( file , ""Detected Down Globus Resource\\n"" ) ;"	1051:1:23266:23328	887730	2	True				
ANR	887748	IdentifierDecl	"retval = fprintf ( file , ""Detected Down Globus Resource\\n"" )"		887730	0					
ANR	887749	IdentifierDeclType	int		887730	0					
ANR	887750	Identifier	retval		887730	1					
ANR	887751	AssignmentExpression	"retval = fprintf ( file , ""Detected Down Globus Resource\\n"" )"		887730	2		=			
ANR	887752	Identifier	retval		887730	0					
ANR	887753	CallExpression	"fprintf ( file , ""Detected Down Globus Resource\\n"" )"		887730	1					
ANR	887754	Callee	fprintf		887730	0					
ANR	887755	Identifier	fprintf		887730	0					
ANR	887756	ArgumentList	file		887730	1					
ANR	887757	Argument	file		887730	0					
ANR	887758	Identifier	file		887730	0					
ANR	887759	Argument	"""Detected Down Globus Resource\\n"""		887730	1					
ANR	887760	PrimaryExpression	"""Detected Down Globus Resource\\n"""		887730	0					
ANR	887761	IfStatement	if ( retval < 0 )		887730	3					
ANR	887762	Condition	retval < 0	1052:5:23335:23344	887730	0	True				
ANR	887763	RelationalExpression	retval < 0		887730	0		<			
ANR	887764	Identifier	retval		887730	0					
ANR	887765	PrimaryExpression	0		887730	1					
ANR	887766	CompoundStatement		7:1:148:148	887730	1					
ANR	887767	ReturnStatement	return 0 ;	1054:2:23352:23360	887730	0	True				
ANR	887768	PrimaryExpression	0		887730	0					
ANR	887769	IfStatement	if ( rmContact )		887730	4					
ANR	887770	Condition	rmContact	1057:6:23372:23380	887730	0	True				
ANR	887771	Identifier	rmContact		887730	0					
ANR	887772	ExpressionStatement	rm = rmContact	1057:18:23384:23398	887730	1	True				
ANR	887773	AssignmentExpression	rm = rmContact		887730	0		=			
ANR	887774	Identifier	rm		887730	0					
ANR	887775	Identifier	rmContact		887730	1					
ANR	887776	ExpressionStatement	"retval = fprintf ( file , ""    RM-Contact: %.8191s\\n"" , rm )"	1059:1:23402:23459	887730	5	True				
ANR	887777	AssignmentExpression	"retval = fprintf ( file , ""    RM-Contact: %.8191s\\n"" , rm )"		887730	0		=			
ANR	887778	Identifier	retval		887730	0					
ANR	887779	CallExpression	"fprintf ( file , ""    RM-Contact: %.8191s\\n"" , rm )"		887730	1					
ANR	887780	Callee	fprintf		887730	0					
ANR	887781	Identifier	fprintf		887730	0					
ANR	887782	ArgumentList	file		887730	1					
ANR	887783	Argument	file		887730	0					
ANR	887784	Identifier	file		887730	0					
ANR	887785	Argument	"""    RM-Contact: %.8191s\\n"""		887730	1					
ANR	887786	PrimaryExpression	"""    RM-Contact: %.8191s\\n"""		887730	0					
ANR	887787	Argument	rm		887730	2					
ANR	887788	Identifier	rm		887730	0					
ANR	887789	IfStatement	if ( retval < 0 )		887730	6					
ANR	887790	Condition	retval < 0	1060:5:23466:23475	887730	0	True				
ANR	887791	RelationalExpression	retval < 0		887730	0		<			
ANR	887792	Identifier	retval		887730	0					
ANR	887793	PrimaryExpression	0		887730	1					
ANR	887794	CompoundStatement		14:18:279:279	887730	1					
ANR	887795	ReturnStatement	return 0 ;	1061:2:23483:23491	887730	0	True				
ANR	887796	PrimaryExpression	0		887730	0					
ANR	887797	ReturnStatement	return ( 1 ) ;	1064:1:23498:23508	887730	7	True				
ANR	887798	PrimaryExpression	1		887730	0					
ANR	887799	ReturnType	int		887730	1					
ANR	887800	Identifier	GlobusResourceDownEvent :: writeEvent		887730	2					
ANR	887801	ParameterList	FILE * file		887730	3					
ANR	887802	Parameter	FILE * file	1046:37:23187:23196	887730	0	True				
ANR	887803	ParameterType	FILE *		887730	0					
ANR	887804	Identifier	file		887730	1					
ANR	887805	CFGEntryNode	ENTRY		887730		True				
ANR	887806	CFGExitNode	EXIT		887730		True				
ANR	887807	Symbol	file		887730						
ANR	887808	Symbol	rm		887730						
ANR	887809	Symbol	rmContact		887730						
ANR	887810	Symbol	fprintf		887730						
ANR	887811	Symbol	retval		887730						
ANR	887812	Symbol	unknown		887730						
ANR	887813	Function	GlobusResourceDownEvent :: readEvent	1067:0:23513:23877							
ANR	887814	FunctionDef	GlobusResourceDownEvent :: readEvent (FILE * file)		887813	0					
ANR	887815	CompoundStatement		1069:0:23565:23877	887813	0					
ANR	887816	IdentifierDeclStatement	char s [ 8192 ] ;	1070:1:23568:23580	887813	0	True				
ANR	887817	IdentifierDecl	s [ 8192 ]		887813	0					
ANR	887818	IdentifierDeclType	char [ 8192 ]		887813	0					
ANR	887819	Identifier	s		887813	1					
ANR	887820	PrimaryExpression	8192		887813	2					
ANR	887821	Statement	delete	1072:1:23584:23589	887813	1	True				
ANR	887822	Statement	[	1072:7:23590:23590	887813	2	True				
ANR	887823	Statement	]	1072:8:23591:23591	887813	3	True				
ANR	887824	ExpressionStatement	rmContact	1072:10:23593:23602	887813	4	True				
ANR	887825	Identifier	rmContact		887813	0					
ANR	887826	ExpressionStatement	rmContact = NULL	1073:1:23605:23621	887813	5	True				
ANR	887827	AssignmentExpression	rmContact = NULL		887813	0		=			
ANR	887828	Identifier	rmContact		887813	0					
ANR	887829	Identifier	NULL		887813	1					
ANR	887830	IdentifierDeclStatement	"int retval = fscanf ( file , ""Detected Down Globus Resource\\n"" ) ;"	1074:1:23624:23685	887813	6	True				
ANR	887831	IdentifierDecl	"retval = fscanf ( file , ""Detected Down Globus Resource\\n"" )"		887813	0					
ANR	887832	IdentifierDeclType	int		887813	0					
ANR	887833	Identifier	retval		887813	1					
ANR	887834	AssignmentExpression	"retval = fscanf ( file , ""Detected Down Globus Resource\\n"" )"		887813	2		=			
ANR	887835	Identifier	retval		887813	0					
ANR	887836	CallExpression	"fscanf ( file , ""Detected Down Globus Resource\\n"" )"		887813	1					
ANR	887837	Callee	fscanf		887813	0					
ANR	887838	Identifier	fscanf		887813	0					
ANR	887839	ArgumentList	file		887813	1					
ANR	887840	Argument	file		887813	0					
ANR	887841	Identifier	file		887813	0					
ANR	887842	Argument	"""Detected Down Globus Resource\\n"""		887813	1					
ANR	887843	PrimaryExpression	"""Detected Down Globus Resource\\n"""		887813	0					
ANR	887844	IfStatement	if ( retval != 0 )		887813	7					
ANR	887845	Condition	retval != 0	1075:8:23695:23705	887813	0	True				
ANR	887846	EqualityExpression	retval != 0		887813	0		!=			
ANR	887847	Identifier	retval		887813	0					
ANR	887848	PrimaryExpression	0		887813	1					
ANR	887849	CompoundStatement		8:4:146:146	887813	1					
ANR	887850	ReturnStatement	return 0 ;	1077:2:23716:23724	887813	0	True				
ANR	887851	PrimaryExpression	0		887813	0					
ANR	887852	ExpressionStatement	s [ 0 ] = '\\0'	1079:1:23733:23744	887813	8	True				
ANR	887853	AssignmentExpression	s [ 0 ] = '\\0'		887813	0		=			
ANR	887854	ArrayIndexing	s [ 0 ]		887813	0					
ANR	887855	Identifier	s		887813	0					
ANR	887856	PrimaryExpression	0		887813	1					
ANR	887857	PrimaryExpression	'\\0'		887813	1					
ANR	887858	ExpressionStatement	"retval = fscanf ( file , ""    RM-Contact: %8191s\\n"" , s )"	1080:1:23747:23801	887813	9	True				
ANR	887859	AssignmentExpression	"retval = fscanf ( file , ""    RM-Contact: %8191s\\n"" , s )"		887813	0		=			
ANR	887860	Identifier	retval		887813	0					
ANR	887861	CallExpression	"fscanf ( file , ""    RM-Contact: %8191s\\n"" , s )"		887813	1					
ANR	887862	Callee	fscanf		887813	0					
ANR	887863	Identifier	fscanf		887813	0					
ANR	887864	ArgumentList	file		887813	1					
ANR	887865	Argument	file		887813	0					
ANR	887866	Identifier	file		887813	0					
ANR	887867	Argument	"""    RM-Contact: %8191s\\n"""		887813	1					
ANR	887868	PrimaryExpression	"""    RM-Contact: %8191s\\n"""		887813	0					
ANR	887869	Argument	s		887813	2					
ANR	887870	Identifier	s		887813	0					
ANR	887871	IfStatement	if ( retval != 1 )		887813	10					
ANR	887872	Condition	retval != 1	1081:6:23809:23819	887813	0	True				
ANR	887873	EqualityExpression	retval != 1		887813	0		!=			
ANR	887874	Identifier	retval		887813	0					
ANR	887875	PrimaryExpression	1		887813	1					
ANR	887876	CompoundStatement		14:1:258:258	887813	1					
ANR	887877	ReturnStatement	return 0 ;	1083:2:23828:23836	887813	0	True				
ANR	887878	PrimaryExpression	0		887813	0					
ANR	887879	ExpressionStatement	rmContact = strnewp ( s )	1085:1:23842:23864	887813	11	True				
ANR	887880	AssignmentExpression	rmContact = strnewp ( s )		887813	0		=			
ANR	887881	Identifier	rmContact		887813	0					
ANR	887882	CallExpression	strnewp ( s )		887813	1					
ANR	887883	Callee	strnewp		887813	0					
ANR	887884	Identifier	strnewp		887813	0					
ANR	887885	ArgumentList	s		887813	1					
ANR	887886	Argument	s		887813	0					
ANR	887887	Identifier	s		887813	0					
ANR	887888	ReturnStatement	return 1 ;	1086:1:23867:23875	887813	12	True				
ANR	887889	PrimaryExpression	1		887813	0					
ANR	887890	ReturnType	int		887813	1					
ANR	887891	Identifier	GlobusResourceDownEvent :: readEvent		887813	2					
ANR	887892	ParameterList	FILE * file		887813	3					
ANR	887893	Parameter	FILE * file	1068:36:23553:23562	887813	0	True				
ANR	887894	ParameterType	FILE *		887813	0					
ANR	887895	Identifier	file		887813	1					
ANR	887896	CFGEntryNode	ENTRY		887813		True				
ANR	887897	CFGExitNode	EXIT		887813		True				
ANR	887898	Symbol	fscanf		887813						
ANR	887899	Symbol	file		887813						
ANR	887900	Symbol	s		887813						
ANR	887901	Symbol	NULL		887813						
ANR	887902	Symbol	strnewp		887813						
ANR	887903	Symbol	rmContact		887813						
ANR	887904	Symbol	* s		887813						
ANR	887905	Symbol	retval		887813						
ANR	887906	Function	GlobusResourceDownEvent :: toClassAd	1089:0:23880:24167							
ANR	887907	FunctionDef	GlobusResourceDownEvent :: toClassAd ()		887906	0					
ANR	887908	CompoundStatement		1091:0:23930:24167	887906	0					
ANR	887909	IdentifierDeclStatement	ClassAd * myad = ULogEvent :: toClassAd ( ) ;	1092:1:23933:23971	887906	0	True				
ANR	887910	IdentifierDecl	* myad = ULogEvent :: toClassAd ( )		887906	0					
ANR	887911	IdentifierDeclType	ClassAd *		887906	0					
ANR	887912	Identifier	myad		887906	1					
ANR	887913	AssignmentExpression	* myad = ULogEvent :: toClassAd ( )		887906	2		=			
ANR	887914	Identifier	myad		887906	0					
ANR	887915	CallExpression	ULogEvent :: toClassAd ( )		887906	1					
ANR	887916	Callee	ULogEvent :: toClassAd		887906	0					
ANR	887917	Identifier	ULogEvent :: toClassAd		887906	0					
ANR	887918	ArgumentList			887906	1					
ANR	887919	IfStatement	if ( ! myad )		887906	1					
ANR	887920	Condition	! myad	1093:5:23978:23982	887906	0	True				
ANR	887921	UnaryOperationExpression	! myad		887906	0					
ANR	887922	UnaryOperator	!		887906	0					
ANR	887923	Identifier	myad		887906	1					
ANR	887924	ReturnStatement	return NULL ;	1093:13:23986:23997	887906	1	True				
ANR	887925	Identifier	NULL		887906	0					
ANR	887926	IfStatement	if ( rmContact && rmContact [ 0 ] )		887906	2					
ANR	887927	Condition	rmContact && rmContact [ 0 ]	1095:5:24005:24029	887906	0	True				
ANR	887928	AndExpression	rmContact && rmContact [ 0 ]		887906	0		&&			
ANR	887929	Identifier	rmContact		887906	0					
ANR	887930	ArrayIndexing	rmContact [ 0 ]		887906	1					
ANR	887931	Identifier	rmContact		887906	0					
ANR	887932	PrimaryExpression	0		887906	1					
ANR	887933	CompoundStatement		6:2:106:119	887906	1					
ANR	887934	IdentifierDeclStatement	MyString buf2 ;	1096:2:24037:24050	887906	0	True				
ANR	887935	IdentifierDecl	buf2		887906	0					
ANR	887936	IdentifierDeclType	MyString		887906	0					
ANR	887937	Identifier	buf2		887906	1					
ANR	887938	ExpressionStatement	"buf2 . sprintf ( ""RMContact = \\""%s\\"""" , rmContact )"	1097:2:24054:24098	887906	1	True				
ANR	887939	CallExpression	"buf2 . sprintf ( ""RMContact = \\""%s\\"""" , rmContact )"		887906	0					
ANR	887940	Callee	buf2 . sprintf		887906	0					
ANR	887941	MemberAccess	buf2 . sprintf		887906	0					
ANR	887942	Identifier	buf2		887906	0					
ANR	887943	Identifier	sprintf		887906	1					
ANR	887944	ArgumentList	"""RMContact = \\""%s\\"""""		887906	1					
ANR	887945	Argument	"""RMContact = \\""%s\\"""""		887906	0					
ANR	887946	PrimaryExpression	"""RMContact = \\""%s\\"""""		887906	0					
ANR	887947	Argument	rmContact		887906	1					
ANR	887948	Identifier	rmContact		887906	0					
ANR	887949	IfStatement	if ( ! myad -> Insert ( buf2 . Value ( ) ) )		887906	2					
ANR	887950	Condition	! myad -> Insert ( buf2 . Value ( ) )	1098:6:24106:24132	887906	0	True				
ANR	887951	UnaryOperationExpression	! myad -> Insert ( buf2 . Value ( ) )		887906	0					
ANR	887952	UnaryOperator	!		887906	0					
ANR	887953	CallExpression	myad -> Insert ( buf2 . Value ( ) )		887906	1					
ANR	887954	Callee	myad -> Insert		887906	0					
ANR	887955	PtrMemberAccess	myad -> Insert		887906	0					
ANR	887956	Identifier	myad		887906	0					
ANR	887957	Identifier	Insert		887906	1					
ANR	887958	ArgumentList	buf2 . Value ( )		887906	1					
ANR	887959	Argument	buf2 . Value ( )		887906	0					
ANR	887960	CallExpression	buf2 . Value ( )		887906	0					
ANR	887961	Callee	buf2 . Value		887906	0					
ANR	887962	MemberAccess	buf2 . Value		887906	0					
ANR	887963	Identifier	buf2		887906	0					
ANR	887964	Identifier	Value		887906	1					
ANR	887965	ArgumentList			887906	1					
ANR	887966	ReturnStatement	return NULL ;	1098:36:24136:24147	887906	1	True				
ANR	887967	Identifier	NULL		887906	0					
ANR	887968	ReturnStatement	return myad ;	1101:1:24154:24165	887906	3	True				
ANR	887969	Identifier	myad		887906	0					
ANR	887970	ReturnType	ClassAd *		887906	1					
ANR	887971	Identifier	GlobusResourceDownEvent :: toClassAd		887906	2					
ANR	887972	ParameterList			887906	3					
ANR	887973	CFGEntryNode	ENTRY		887906		True				
ANR	887974	CFGExitNode	EXIT		887906		True				
ANR	887975	Symbol	buf2		887906						
ANR	887976	Symbol	NULL		887906						
ANR	887977	Symbol	* rmContact		887906						
ANR	887978	Symbol	* myad		887906						
ANR	887979	Symbol	myad -> Insert		887906						
ANR	887980	Symbol	myad		887906						
ANR	887981	Symbol	rmContact		887906						
ANR	887982	Symbol	ULogEvent :: toClassAd		887906						
ANR	887983	Symbol	buf2 . Value		887906						
ANR	887984	Function	GlobusResourceDownEvent :: initFromClassAd	1104:0:24170:24547							
ANR	887985	FunctionDef	GlobusResourceDownEvent :: initFromClassAd (ClassAd * ad)		887984	0					
ANR	887986	CompoundStatement		1106:0:24229:24547	887984	0					
ANR	887987	ExpressionStatement	ULogEvent :: initFromClassAd ( ad )	1107:1:24232:24262	887984	0	True				
ANR	887988	CallExpression	ULogEvent :: initFromClassAd ( ad )		887984	0					
ANR	887989	Callee	ULogEvent :: initFromClassAd		887984	0					
ANR	887990	Identifier	ULogEvent :: initFromClassAd		887984	0					
ANR	887991	ArgumentList	ad		887984	1					
ANR	887992	Argument	ad		887984	0					
ANR	887993	Identifier	ad		887984	0					
ANR	887994	IfStatement	if ( ! ad )		887984	1					
ANR	887995	Condition	! ad	1109:5:24270:24272	887984	0	True				
ANR	887996	UnaryOperationExpression	! ad		887984	0					
ANR	887997	UnaryOperator	!		887984	0					
ANR	887998	Identifier	ad		887984	1					
ANR	887999	ReturnStatement	return ;	1109:11:24276:24282	887984	1	True				
ANR	888000	IdentifierDeclStatement	char * mallocstr = NULL ;	1112:1:24359:24381	887984	2	True				
ANR	888001	IdentifierDecl	* mallocstr = NULL		887984	0					
ANR	888002	IdentifierDeclType	char *		887984	0					
ANR	888003	Identifier	mallocstr		887984	1					
ANR	888004	AssignmentExpression	* mallocstr = NULL		887984	2		=			
ANR	888005	Identifier	NULL		887984	0					
ANR	888006	Identifier	NULL		887984	1					
ANR	888007	ExpressionStatement	"ad -> LookupString ( ""RMContact"" , & mallocstr )"	1113:1:24384:24425	887984	3	True				
ANR	888008	CallExpression	"ad -> LookupString ( ""RMContact"" , & mallocstr )"		887984	0					
ANR	888009	Callee	ad -> LookupString		887984	0					
ANR	888010	PtrMemberAccess	ad -> LookupString		887984	0					
ANR	888011	Identifier	ad		887984	0					
ANR	888012	Identifier	LookupString		887984	1					
ANR	888013	ArgumentList	"""RMContact"""		887984	1					
ANR	888014	Argument	"""RMContact"""		887984	0					
ANR	888015	PrimaryExpression	"""RMContact"""		887984	0					
ANR	888016	Argument	& mallocstr		887984	1					
ANR	888017	UnaryOperationExpression	& mallocstr		887984	0					
ANR	888018	UnaryOperator	&		887984	0					
ANR	888019	Identifier	mallocstr		887984	1					
ANR	888020	IfStatement	if ( mallocstr )		887984	4					
ANR	888021	Condition	mallocstr	1114:5:24432:24440	887984	0	True				
ANR	888022	Identifier	mallocstr		887984	0					
ANR	888023	CompoundStatement		9:17:214:214	887984	1					
ANR	888024	ExpressionStatement	rmContact = new char [ strlen ( mallocstr ) + 1 ]	1115:2:24448:24491	887984	0	True				
ANR	888025	AssignmentExpression	rmContact = new char [ strlen ( mallocstr ) + 1 ]		887984	0		=			
ANR	888026	Identifier	rmContact		887984	0					
ANR	888027	AdditiveExpression	strlen ( mallocstr ) + 1		887984	1		+			
ANR	888028	CallExpression	strlen ( mallocstr )		887984	0					
ANR	888029	Callee	strlen		887984	0					
ANR	888030	Identifier	strlen		887984	0					
ANR	888031	ArgumentList	mallocstr		887984	1					
ANR	888032	Argument	mallocstr		887984	0					
ANR	888033	Identifier	mallocstr		887984	0					
ANR	888034	PrimaryExpression	1		887984	1					
ANR	888035	ExpressionStatement	"strcpy ( rmContact , mallocstr )"	1116:2:24495:24523	887984	1	True				
ANR	888036	CallExpression	"strcpy ( rmContact , mallocstr )"		887984	0					
ANR	888037	Callee	strcpy		887984	0					
ANR	888038	Identifier	strcpy		887984	0					
ANR	888039	ArgumentList	rmContact		887984	1					
ANR	888040	Argument	rmContact		887984	0					
ANR	888041	Identifier	rmContact		887984	0					
ANR	888042	Argument	mallocstr		887984	1					
ANR	888043	Identifier	mallocstr		887984	0					
ANR	888044	ExpressionStatement	free ( mallocstr )	1117:2:24527:24542	887984	2	True				
ANR	888045	CallExpression	free ( mallocstr )		887984	0					
ANR	888046	Callee	free		887984	0					
ANR	888047	Identifier	free		887984	0					
ANR	888048	ArgumentList	mallocstr		887984	1					
ANR	888049	Argument	mallocstr		887984	0					
ANR	888050	Identifier	mallocstr		887984	0					
ANR	888051	ReturnType	void		887984	1					
ANR	888052	Identifier	GlobusResourceDownEvent :: initFromClassAd		887984	2					
ANR	888053	ParameterList	ClassAd * ad		887984	3					
ANR	888054	Parameter	ClassAd * ad	1105:41:24216:24226	887984	0	True				
ANR	888055	ParameterType	ClassAd *		887984	0					
ANR	888056	Identifier	ad		887984	1					
ANR	888057	CFGEntryNode	ENTRY		887984		True				
ANR	888058	CFGExitNode	EXIT		887984		True				
ANR	888059	Symbol	strlen		887984						
ANR	888060	Symbol	& mallocstr		887984						
ANR	888061	Symbol	ad		887984						
ANR	888062	Symbol	NULL		887984						
ANR	888063	Symbol	mallocstr		887984						
ANR	888064	Symbol	rmContact		887984						
ANR	888065	Function	GenericEvent :: GenericEvent	1123:0:24583:24664							
ANR	888066	FunctionDef	GenericEvent :: GenericEvent ()		888065	0					
ANR	888067	CompoundStatement		1124:0:24616:24664	888065	0					
ANR	888068	ExpressionStatement	info [ 0 ] = '\\0'	1125:1:24619:24633	888065	0	True				
ANR	888069	AssignmentExpression	info [ 0 ] = '\\0'		888065	0		=			
ANR	888070	ArrayIndexing	info [ 0 ]		888065	0					
ANR	888071	Identifier	info		888065	0					
ANR	888072	PrimaryExpression	0		888065	1					
ANR	888073	PrimaryExpression	'\\0'		888065	1					
ANR	888074	ExpressionStatement	eventNumber = ULOG_GENERIC	1126:1:24636:24662	888065	1	True				
ANR	888075	AssignmentExpression	eventNumber = ULOG_GENERIC		888065	0		=			
ANR	888076	Identifier	eventNumber		888065	0					
ANR	888077	Identifier	ULOG_GENERIC		888065	1					
ANR	888078	Identifier	GenericEvent :: GenericEvent		888065	1					
ANR	888079	ParameterList			888065	2					
ANR	888080	CFGEntryNode	ENTRY		888065		True				
ANR	888081	CFGExitNode	EXIT		888065		True				
ANR	888082	Symbol	eventNumber		888065						
ANR	888083	Symbol	* info		888065						
ANR	888084	Symbol	ULOG_GENERIC		888065						
ANR	888085	Symbol	info		888065						
ANR	888086	Function	GenericEvent :: ~GenericEvent	1129:0:24667:24703							
ANR	888087	FunctionDef	GenericEvent :: ~GenericEvent ()		888086	0					
ANR	888088	CompoundStatement		1130:0:24701:24703	888086	0					
ANR	888089	Identifier	GenericEvent :: ~GenericEvent		888086	1					
ANR	888090	ParameterList			888086	2					
ANR	888091	CFGEntryNode	ENTRY		888086		True				
ANR	888092	CFGExitNode	EXIT		888086		True				
ANR	888093	Function	GenericEvent :: writeEvent	1133:0:24706:24854							
ANR	888094	FunctionDef	GenericEvent :: writeEvent (FILE * file)		888093	0					
ANR	888095	CompoundStatement		1135:0:24747:24854	888093	0					
ANR	888096	IdentifierDeclStatement	"int retval = fprintf ( file , ""%s\\n"" , info ) ;"	1136:4:24753:24793	888093	0	True				
ANR	888097	IdentifierDecl	"retval = fprintf ( file , ""%s\\n"" , info )"		888093	0					
ANR	888098	IdentifierDeclType	int		888093	0					
ANR	888099	Identifier	retval		888093	1					
ANR	888100	AssignmentExpression	"retval = fprintf ( file , ""%s\\n"" , info )"		888093	2		=			
ANR	888101	Identifier	retval		888093	0					
ANR	888102	CallExpression	"fprintf ( file , ""%s\\n"" , info )"		888093	1					
ANR	888103	Callee	fprintf		888093	0					
ANR	888104	Identifier	fprintf		888093	0					
ANR	888105	ArgumentList	file		888093	1					
ANR	888106	Argument	file		888093	0					
ANR	888107	Identifier	file		888093	0					
ANR	888108	Argument	"""%s\\n"""		888093	1					
ANR	888109	PrimaryExpression	"""%s\\n"""		888093	0					
ANR	888110	Argument	info		888093	2					
ANR	888111	Identifier	info		888093	0					
ANR	888112	IfStatement	if ( retval < 0 )		888093	1					
ANR	888113	Condition	retval < 0	1137:8:24803:24812	888093	0	True				
ANR	888114	RelationalExpression	retval < 0		888093	0		<			
ANR	888115	Identifier	retval		888093	0					
ANR	888116	PrimaryExpression	0		888093	1					
ANR	888117	CompoundStatement		4:4:71:71	888093	1					
ANR	888118	ReturnStatement	return 0 ;	1139:2:24823:24831	888093	0	True				
ANR	888119	PrimaryExpression	0		888093	0					
ANR	888120	ReturnStatement	return 1 ;	1142:4:24844:24852	888093	2	True				
ANR	888121	PrimaryExpression	1		888093	0					
ANR	888122	ReturnType	int		888093	1					
ANR	888123	Identifier	GenericEvent :: writeEvent		888093	2					
ANR	888124	ParameterList	FILE * file		888093	3					
ANR	888125	Parameter	FILE * file	1134:25:24735:24744	888093	0	True				
ANR	888126	ParameterType	FILE *		888093	0					
ANR	888127	Identifier	file		888093	1					
ANR	888128	CFGEntryNode	ENTRY		888093		True				
ANR	888129	CFGExitNode	EXIT		888093		True				
ANR	888130	Symbol	file		888093						
ANR	888131	Symbol	fprintf		888093						
ANR	888132	Symbol	retval		888093						
ANR	888133	Symbol	info		888093						
ANR	888134	Function	GenericEvent :: readEvent	1145:0:24857:25005							
ANR	888135	FunctionDef	GenericEvent :: readEvent (FILE * file)		888134	0					
ANR	888136	CompoundStatement		1147:0:24897:25005	888134	0					
ANR	888137	IdentifierDeclStatement	"int retval = fscanf ( file , ""%[^\\n]\\n"" , info ) ;"	1148:4:24903:24946	888134	0	True				
ANR	888138	IdentifierDecl	"retval = fscanf ( file , ""%[^\\n]\\n"" , info )"		888134	0					
ANR	888139	IdentifierDeclType	int		888134	0					
ANR	888140	Identifier	retval		888134	1					
ANR	888141	AssignmentExpression	"retval = fscanf ( file , ""%[^\\n]\\n"" , info )"		888134	2		=			
ANR	888142	Identifier	retval		888134	0					
ANR	888143	CallExpression	"fscanf ( file , ""%[^\\n]\\n"" , info )"		888134	1					
ANR	888144	Callee	fscanf		888134	0					
ANR	888145	Identifier	fscanf		888134	0					
ANR	888146	ArgumentList	file		888134	1					
ANR	888147	Argument	file		888134	0					
ANR	888148	Identifier	file		888134	0					
ANR	888149	Argument	"""%[^\\n]\\n"""		888134	1					
ANR	888150	PrimaryExpression	"""%[^\\n]\\n"""		888134	0					
ANR	888151	Argument	info		888134	2					
ANR	888152	Identifier	info		888134	0					
ANR	888153	IfStatement	if ( retval < 0 )		888134	1					
ANR	888154	Condition	retval < 0	1149:8:24956:24965	888134	0	True				
ANR	888155	RelationalExpression	retval < 0		888134	0		<			
ANR	888156	Identifier	retval		888134	0					
ANR	888157	PrimaryExpression	0		888134	1					
ANR	888158	CompoundStatement		4:4:74:74	888134	1					
ANR	888159	ReturnStatement	return 0 ;	1151:1:24975:24983	888134	0	True				
ANR	888160	PrimaryExpression	0		888134	0					
ANR	888161	ReturnStatement	return 1 ;	1153:4:24995:25003	888134	2	True				
ANR	888162	PrimaryExpression	1		888134	0					
ANR	888163	ReturnType	int		888134	1					
ANR	888164	Identifier	GenericEvent :: readEvent		888134	2					
ANR	888165	ParameterList	FILE * file		888134	3					
ANR	888166	Parameter	FILE * file	1146:24:24885:24894	888134	0	True				
ANR	888167	ParameterType	FILE *		888134	0					
ANR	888168	Identifier	file		888134	1					
ANR	888169	CFGEntryNode	ENTRY		888134		True				
ANR	888170	CFGExitNode	EXIT		888134		True				
ANR	888171	Symbol	fscanf		888134						
ANR	888172	Symbol	file		888134						
ANR	888173	Symbol	retval		888134						
ANR	888174	Symbol	info		888134						
ANR	888175	Function	GenericEvent :: toClassAd	1156:0:25008:25294							
ANR	888176	FunctionDef	GenericEvent :: toClassAd ()		888175	0					
ANR	888177	CompoundStatement		1158:0:25047:25294	888175	0					
ANR	888178	IdentifierDeclStatement	ClassAd * myad = ULogEvent :: toClassAd ( ) ;	1159:1:25050:25088	888175	0	True				
ANR	888179	IdentifierDecl	* myad = ULogEvent :: toClassAd ( )		888175	0					
ANR	888180	IdentifierDeclType	ClassAd *		888175	0					
ANR	888181	Identifier	myad		888175	1					
ANR	888182	AssignmentExpression	* myad = ULogEvent :: toClassAd ( )		888175	2		=			
ANR	888183	Identifier	myad		888175	0					
ANR	888184	CallExpression	ULogEvent :: toClassAd ( )		888175	1					
ANR	888185	Callee	ULogEvent :: toClassAd		888175	0					
ANR	888186	Identifier	ULogEvent :: toClassAd		888175	0					
ANR	888187	ArgumentList			888175	1					
ANR	888188	IfStatement	if ( ! myad )		888175	1					
ANR	888189	Condition	! myad	1160:5:25095:25099	888175	0	True				
ANR	888190	UnaryOperationExpression	! myad		888175	0					
ANR	888191	UnaryOperator	!		888175	0					
ANR	888192	Identifier	myad		888175	1					
ANR	888193	ReturnStatement	return NULL ;	1160:13:25103:25114	888175	1	True				
ANR	888194	Identifier	NULL		888175	0					
ANR	888195	IdentifierDeclStatement	char buf0 [ 2048 ] ;	1161:1:25117:25132	888175	2	True				
ANR	888196	IdentifierDecl	buf0 [ 2048 ]		888175	0					
ANR	888197	IdentifierDeclType	char [ 2048 ]		888175	0					
ANR	888198	Identifier	buf0		888175	1					
ANR	888199	PrimaryExpression	2048		888175	2					
ANR	888200	IfStatement	if ( info [ 0 ] )		888175	3					
ANR	888201	Condition	info [ 0 ]	1163:5:25140:25146	888175	0	True				
ANR	888202	ArrayIndexing	info [ 0 ]		888175	0					
ANR	888203	Identifier	info		888175	0					
ANR	888204	PrimaryExpression	0		888175	1					
ANR	888205	CompoundStatement		6:15:102:102	888175	1					
ANR	888206	ExpressionStatement	"snprintf ( buf0 , sizeof ( buf0 ) , ""Info = \\""%s\\"""" , info )"	1164:2:25154:25205	888175	0	True				
ANR	888207	CallExpression	"snprintf ( buf0 , sizeof ( buf0 ) , ""Info = \\""%s\\"""" , info )"		888175	0					
ANR	888208	Callee	snprintf		888175	0					
ANR	888209	Identifier	snprintf		888175	0					
ANR	888210	ArgumentList	buf0		888175	1					
ANR	888211	Argument	buf0		888175	0					
ANR	888212	Identifier	buf0		888175	0					
ANR	888213	Argument	sizeof ( buf0 )		888175	1					
ANR	888214	SizeofExpression	sizeof ( buf0 )		888175	0					
ANR	888215	Sizeof	sizeof		888175	0					
ANR	888216	SizeofOperand	buf0		888175	1					
ANR	888217	Argument	"""Info = \\""%s\\"""""		888175	2					
ANR	888218	PrimaryExpression	"""Info = \\""%s\\"""""		888175	0					
ANR	888219	Argument	info		888175	3					
ANR	888220	Identifier	info		888175	0					
ANR	888221	ExpressionStatement	buf0 [ sizeof ( buf0 ) - 1 ] = 0	1165:2:25209:25233	888175	1	True				
ANR	888222	AssignmentExpression	buf0 [ sizeof ( buf0 ) - 1 ] = 0		888175	0		=			
ANR	888223	ArrayIndexing	buf0 [ sizeof ( buf0 ) - 1 ]		888175	0					
ANR	888224	Identifier	buf0		888175	0					
ANR	888225	AdditiveExpression	sizeof ( buf0 ) - 1		888175	1		-			
ANR	888226	SizeofExpression	sizeof ( buf0 )		888175	0					
ANR	888227	Sizeof	sizeof		888175	0					
ANR	888228	SizeofOperand	buf0		888175	1					
ANR	888229	PrimaryExpression	1		888175	1					
ANR	888230	PrimaryExpression	0		888175	1					
ANR	888231	IfStatement	if ( ! myad -> Insert ( buf0 ) )		888175	2					
ANR	888232	Condition	! myad -> Insert ( buf0 )	1166:6:25241:25259	888175	0	True				
ANR	888233	UnaryOperationExpression	! myad -> Insert ( buf0 )		888175	0					
ANR	888234	UnaryOperator	!		888175	0					
ANR	888235	CallExpression	myad -> Insert ( buf0 )		888175	1					
ANR	888236	Callee	myad -> Insert		888175	0					
ANR	888237	PtrMemberAccess	myad -> Insert		888175	0					
ANR	888238	Identifier	myad		888175	0					
ANR	888239	Identifier	Insert		888175	1					
ANR	888240	ArgumentList	buf0		888175	1					
ANR	888241	Argument	buf0		888175	0					
ANR	888242	Identifier	buf0		888175	0					
ANR	888243	ReturnStatement	return NULL ;	1166:28:25263:25274	888175	1	True				
ANR	888244	Identifier	NULL		888175	0					
ANR	888245	ReturnStatement	return myad ;	1169:1:25281:25292	888175	4	True				
ANR	888246	Identifier	myad		888175	0					
ANR	888247	ReturnType	ClassAd *		888175	1					
ANR	888248	Identifier	GenericEvent :: toClassAd		888175	2					
ANR	888249	ParameterList			888175	3					
ANR	888250	CFGEntryNode	ENTRY		888175		True				
ANR	888251	CFGExitNode	EXIT		888175		True				
ANR	888252	Symbol	NULL		888175						
ANR	888253	Symbol	buf0		888175						
ANR	888254	Symbol	* myad		888175						
ANR	888255	Symbol	myad -> Insert		888175						
ANR	888256	Symbol	* info		888175						
ANR	888257	Symbol	myad		888175						
ANR	888258	Symbol	ULogEvent :: toClassAd		888175						
ANR	888259	Symbol	info		888175						
ANR	888260	Symbol	* buf0		888175						
ANR	888261	Function	GenericEvent :: initFromClassAd	1172:0:25297:25496							
ANR	888262	FunctionDef	GenericEvent :: initFromClassAd (ClassAd * ad)		888261	0					
ANR	888263	CompoundStatement		1174:0:25345:25496	888261	0					
ANR	888264	ExpressionStatement	ULogEvent :: initFromClassAd ( ad )	1175:1:25348:25378	888261	0	True				
ANR	888265	CallExpression	ULogEvent :: initFromClassAd ( ad )		888261	0					
ANR	888266	Callee	ULogEvent :: initFromClassAd		888261	0					
ANR	888267	Identifier	ULogEvent :: initFromClassAd		888261	0					
ANR	888268	ArgumentList	ad		888261	1					
ANR	888269	Argument	ad		888261	0					
ANR	888270	Identifier	ad		888261	0					
ANR	888271	IfStatement	if ( ! ad )		888261	1					
ANR	888272	Condition	! ad	1177:5:25386:25388	888261	0	True				
ANR	888273	UnaryOperationExpression	! ad		888261	0					
ANR	888274	UnaryOperator	!		888261	0					
ANR	888275	Identifier	ad		888261	1					
ANR	888276	ReturnStatement	return ;	1177:11:25392:25398	888261	1	True				
ANR	888277	IfStatement	"if ( ad -> LookupString ( ""Info"" , info , sizeof ( info ) - 1 ) )"		888261	2					
ANR	888278	Condition	"ad -> LookupString ( ""Info"" , info , sizeof ( info ) - 1 )"	1179:5:25406:25452	888261	0	True				
ANR	888279	CallExpression	"ad -> LookupString ( ""Info"" , info , sizeof ( info ) - 1 )"		888261	0					
ANR	888280	Callee	ad -> LookupString		888261	0					
ANR	888281	PtrMemberAccess	ad -> LookupString		888261	0					
ANR	888282	Identifier	ad		888261	0					
ANR	888283	Identifier	LookupString		888261	1					
ANR	888284	ArgumentList	"""Info"""		888261	1					
ANR	888285	Argument	"""Info"""		888261	0					
ANR	888286	PrimaryExpression	"""Info"""		888261	0					
ANR	888287	Argument	info		888261	1					
ANR	888288	Identifier	info		888261	0					
ANR	888289	Argument	sizeof ( info ) - 1		888261	2					
ANR	888290	AdditiveExpression	sizeof ( info ) - 1		888261	0		-			
ANR	888291	SizeofExpression	sizeof ( info )		888261	0					
ANR	888292	Sizeof	sizeof		888261	0					
ANR	888293	SizeofOperand	info		888261	1					
ANR	888294	PrimaryExpression	1		888261	1					
ANR	888295	CompoundStatement		6:55:110:110	888261	1					
ANR	888296	ExpressionStatement	info [ sizeof ( info ) - 1 ] = '\\0'	1180:2:25460:25491	888261	0	True				
ANR	888297	AssignmentExpression	info [ sizeof ( info ) - 1 ] = '\\0'		888261	0		=			
ANR	888298	ArrayIndexing	info [ sizeof ( info ) - 1 ]		888261	0					
ANR	888299	Identifier	info		888261	0					
ANR	888300	AdditiveExpression	sizeof ( info ) - 1		888261	1		-			
ANR	888301	SizeofExpression	sizeof ( info )		888261	0					
ANR	888302	Sizeof	sizeof		888261	0					
ANR	888303	SizeofOperand	info		888261	1					
ANR	888304	PrimaryExpression	1		888261	1					
ANR	888305	PrimaryExpression	'\\0'		888261	1					
ANR	888306	ReturnType	void		888261	1					
ANR	888307	Identifier	GenericEvent :: initFromClassAd		888261	2					
ANR	888308	ParameterList	ClassAd * ad		888261	3					
ANR	888309	Parameter	ClassAd * ad	1173:30:25332:25342	888261	0	True				
ANR	888310	ParameterType	ClassAd *		888261	0					
ANR	888311	Identifier	ad		888261	1					
ANR	888312	CFGEntryNode	ENTRY		888261		True				
ANR	888313	CFGExitNode	EXIT		888261		True				
ANR	888314	Symbol	ad -> LookupString		888261						
ANR	888315	Symbol	ad		888261						
ANR	888316	Symbol	* ad		888261						
ANR	888317	Symbol	* info		888261						
ANR	888318	Symbol	info		888261						
ANR	888319	Function	GenericEvent :: setInfoText	1184:0:25499:25642							
ANR	888320	FunctionDef	GenericEvent :: setInfoText (char const * str)		888319	0					
ANR	888321	CompoundStatement		1186:0:25547:25642	888319	0					
ANR	888322	ExpressionStatement	"strncpy ( info , str , sizeof ( info ) )"	1187:1:25550:25580	888319	0	True				
ANR	888323	CallExpression	"strncpy ( info , str , sizeof ( info ) )"		888319	0					
ANR	888324	Callee	strncpy		888319	0					
ANR	888325	Identifier	strncpy		888319	0					
ANR	888326	ArgumentList	info		888319	1					
ANR	888327	Argument	info		888319	0					
ANR	888328	Identifier	info		888319	0					
ANR	888329	Argument	str		888319	1					
ANR	888330	Identifier	str		888319	0					
ANR	888331	Argument	sizeof ( info )		888319	2					
ANR	888332	SizeofExpression	sizeof ( info )		888319	0					
ANR	888333	Sizeof	sizeof		888319	0					
ANR	888334	SizeofOperand	info		888319	1					
ANR	888335	ExpressionStatement	info [ sizeof ( info ) - 1 ] = '\\0'	1188:1:25583:25614	888319	1	True				
ANR	888336	AssignmentExpression	info [ sizeof ( info ) - 1 ] = '\\0'		888319	0		=			
ANR	888337	ArrayIndexing	info [ sizeof ( info ) - 1 ]		888319	0					
ANR	888338	Identifier	info		888319	0					
ANR	888339	AdditiveExpression	sizeof ( info ) - 1		888319	1		-			
ANR	888340	SizeofExpression	sizeof ( info )		888319	0					
ANR	888341	Sizeof	sizeof		888319	0					
ANR	888342	SizeofOperand	info		888319	1					
ANR	888343	PrimaryExpression	1		888319	1					
ANR	888344	PrimaryExpression	'\\0'		888319	1					
ANR	888345	ReturnType	void		888319	1					
ANR	888346	Identifier	GenericEvent :: setInfoText		888319	2					
ANR	888347	ParameterList	char const * str		888319	3					
ANR	888348	Parameter	char const * str	1185:26:25530:25544	888319	0	True				
ANR	888349	ParameterType	char const *		888319	0					
ANR	888350	Identifier	str		888319	1					
ANR	888351	CFGEntryNode	ENTRY		888319		True				
ANR	888352	CFGExitNode	EXIT		888319		True				
ANR	888353	Symbol	str		888319						
ANR	888354	Symbol	* info		888319						
ANR	888355	Symbol	info		888319						
ANR	888356	Function	RemoteErrorEvent :: RemoteErrorEvent	1192:0:25681:25892							
ANR	888357	FunctionDef	RemoteErrorEvent :: RemoteErrorEvent ()		888356	0					
ANR	888358	CompoundStatement		1193:0:25722:25892	888356	0					
ANR	888359	ExpressionStatement	error_str = NULL	1194:1:25725:25741	888356	0	True				
ANR	888360	AssignmentExpression	error_str = NULL		888356	0		=			
ANR	888361	Identifier	error_str		888356	0					
ANR	888362	Identifier	NULL		888356	1					
ANR	888363	ExpressionStatement	execute_host [ 0 ] = daemon_name [ 0 ] = '\\0'	1195:1:25744:25783	888356	1	True				
ANR	888364	AssignmentExpression	execute_host [ 0 ] = daemon_name [ 0 ] = '\\0'		888356	0		=			
ANR	888365	ArrayIndexing	execute_host [ 0 ]		888356	0					
ANR	888366	Identifier	execute_host		888356	0					
ANR	888367	PrimaryExpression	0		888356	1					
ANR	888368	AssignmentExpression	daemon_name [ 0 ] = '\\0'		888356	1		=			
ANR	888369	ArrayIndexing	daemon_name [ 0 ]		888356	0					
ANR	888370	Identifier	daemon_name		888356	0					
ANR	888371	PrimaryExpression	0		888356	1					
ANR	888372	PrimaryExpression	'\\0'		888356	1					
ANR	888373	ExpressionStatement	eventNumber = ULOG_REMOTE_ERROR	1196:1:25786:25817	888356	2	True				
ANR	888374	AssignmentExpression	eventNumber = ULOG_REMOTE_ERROR		888356	0		=			
ANR	888375	Identifier	eventNumber		888356	0					
ANR	888376	Identifier	ULOG_REMOTE_ERROR		888356	1					
ANR	888377	ExpressionStatement	critical_error = true	1197:1:25820:25841	888356	3	True				
ANR	888378	AssignmentExpression	critical_error = true		888356	0		=			
ANR	888379	Identifier	critical_error		888356	0					
ANR	888380	Identifier	true		888356	1					
ANR	888381	ExpressionStatement	hold_reason_code = 0	1198:1:25844:25864	888356	4	True				
ANR	888382	AssignmentExpression	hold_reason_code = 0		888356	0		=			
ANR	888383	Identifier	hold_reason_code		888356	0					
ANR	888384	PrimaryExpression	0		888356	1					
ANR	888385	ExpressionStatement	hold_reason_subcode = 0	1199:1:25867:25890	888356	5	True				
ANR	888386	AssignmentExpression	hold_reason_subcode = 0		888356	0		=			
ANR	888387	Identifier	hold_reason_subcode		888356	0					
ANR	888388	PrimaryExpression	0		888356	1					
ANR	888389	Identifier	RemoteErrorEvent :: RemoteErrorEvent		888356	1					
ANR	888390	ParameterList			888356	2					
ANR	888391	CFGEntryNode	ENTRY		888356		True				
ANR	888392	CFGExitNode	EXIT		888356		True				
ANR	888393	Symbol	hold_reason_code		888356						
ANR	888394	Symbol	ULOG_REMOTE_ERROR		888356						
ANR	888395	Symbol	NULL		888356						
ANR	888396	Symbol	error_str		888356						
ANR	888397	Symbol	hold_reason_subcode		888356						
ANR	888398	Symbol	* daemon_name		888356						
ANR	888399	Symbol	eventNumber		888356						
ANR	888400	Symbol	daemon_name		888356						
ANR	888401	Symbol	* execute_host		888356						
ANR	888402	Symbol	true		888356						
ANR	888403	Symbol	execute_host		888356						
ANR	888404	Symbol	critical_error		888356						
ANR	888405	Function	RemoteErrorEvent :: ~RemoteErrorEvent	1202:0:25895:25960							
ANR	888406	FunctionDef	RemoteErrorEvent :: ~RemoteErrorEvent ()		888405	0					
ANR	888407	CompoundStatement		1203:0:25937:25960	888405	0					
ANR	888408	Statement	delete	1204:1:25940:25945	888405	0	True				
ANR	888409	Statement	[	1204:7:25946:25946	888405	1	True				
ANR	888410	Statement	]	1204:8:25947:25947	888405	2	True				
ANR	888411	ExpressionStatement	error_str	1204:10:25949:25958	888405	3	True				
ANR	888412	Identifier	error_str		888405	0					
ANR	888413	Identifier	RemoteErrorEvent :: ~RemoteErrorEvent		888405	1					
ANR	888414	ParameterList			888405	2					
ANR	888415	CFGEntryNode	ENTRY		888405		True				
ANR	888416	CFGExitNode	EXIT		888405		True				
ANR	888417	Function	RemoteErrorEvent :: setHoldReasonCode	1207:0:25963:26080							
ANR	888418	FunctionDef	RemoteErrorEvent :: setHoldReasonCode (int hold_reason_code_arg)		888417	0					
ANR	888419	CompoundStatement		1209:0:26030:26080	888417	0					
ANR	888420	ExpressionStatement	this -> hold_reason_code = hold_reason_code_arg	1210:1:26033:26078	888417	0	True				
ANR	888421	AssignmentExpression	this -> hold_reason_code = hold_reason_code_arg		888417	0		=			
ANR	888422	PtrMemberAccess	this -> hold_reason_code		888417	0					
ANR	888423	Identifier	this		888417	0					
ANR	888424	Identifier	hold_reason_code		888417	1					
ANR	888425	Identifier	hold_reason_code_arg		888417	1					
ANR	888426	ReturnType	void		888417	1					
ANR	888427	Identifier	RemoteErrorEvent :: setHoldReasonCode		888417	2					
ANR	888428	ParameterList	int hold_reason_code_arg		888417	3					
ANR	888429	Parameter	int hold_reason_code_arg	1208:36:26004:26027	888417	0	True				
ANR	888430	ParameterType	int		888417	0					
ANR	888431	Identifier	hold_reason_code_arg		888417	1					
ANR	888432	CFGEntryNode	ENTRY		888417		True				
ANR	888433	CFGExitNode	EXIT		888417		True				
ANR	888434	Symbol	* this		888417						
ANR	888435	Symbol	this -> hold_reason_code		888417						
ANR	888436	Symbol	this		888417						
ANR	888437	Symbol	hold_reason_code_arg		888417						
ANR	888438	Function	RemoteErrorEvent :: setHoldReasonSubCode	1212:0:26082:26211							
ANR	888439	FunctionDef	RemoteErrorEvent :: setHoldReasonSubCode (int hold_reason_subcode_arg)		888438	0					
ANR	888440	CompoundStatement		1214:0:26155:26211	888438	0					
ANR	888441	ExpressionStatement	this -> hold_reason_subcode = hold_reason_subcode_arg	1215:1:26158:26209	888438	0	True				
ANR	888442	AssignmentExpression	this -> hold_reason_subcode = hold_reason_subcode_arg		888438	0		=			
ANR	888443	PtrMemberAccess	this -> hold_reason_subcode		888438	0					
ANR	888444	Identifier	this		888438	0					
ANR	888445	Identifier	hold_reason_subcode		888438	1					
ANR	888446	Identifier	hold_reason_subcode_arg		888438	1					
ANR	888447	ReturnType	void		888438	1					
ANR	888448	Identifier	RemoteErrorEvent :: setHoldReasonSubCode		888438	2					
ANR	888449	ParameterList	int hold_reason_subcode_arg		888438	3					
ANR	888450	Parameter	int hold_reason_subcode_arg	1213:39:26126:26152	888438	0	True				
ANR	888451	ParameterType	int		888438	0					
ANR	888452	Identifier	hold_reason_subcode_arg		888438	1					
ANR	888453	CFGEntryNode	ENTRY		888438		True				
ANR	888454	CFGExitNode	EXIT		888438		True				
ANR	888455	Symbol	* this		888438						
ANR	888456	Symbol	hold_reason_subcode_arg		888438						
ANR	888457	Symbol	this -> hold_reason_subcode		888438						
ANR	888458	Symbol	this		888438						
ANR	888459	Function	RemoteErrorEvent :: writeEvent	1218:0:26214:28411							
ANR	888460	FunctionDef	RemoteErrorEvent :: writeEvent (FILE * file)		888459	0					
ANR	888461	CompoundStatement		1220:0:26259:28411	888459	0					
ANR	888462	IdentifierDeclStatement	"char const * error_type = ""Error"" ;"	1221:1:26262:26294	888459	0	True				
ANR	888463	IdentifierDecl	"* error_type = ""Error"""		888459	0					
ANR	888464	IdentifierDeclType	char const *		888459	0					
ANR	888465	Identifier	error_type		888459	1					
ANR	888466	AssignmentExpression	"* error_type = ""Error"""		888459	2		=			
ANR	888467	Identifier	error_type		888459	0					
ANR	888468	PrimaryExpression	"""Error"""		888459	1					
ANR	888469	IdentifierDeclStatement	char messagestr [ 512 ] ;	1222:1:26297:26317	888459	1	True				
ANR	888470	IdentifierDecl	messagestr [ 512 ]		888459	0					
ANR	888471	IdentifierDeclType	char [ 512 ]		888459	0					
ANR	888472	Identifier	messagestr		888459	1					
ANR	888473	PrimaryExpression	512		888459	2					
ANR	888474	IdentifierDeclStatement	"ClassAd tmpCl1 , tmpCl2 ;"	1224:1:26321:26343	888459	2	True				
ANR	888475	IdentifierDecl	tmpCl1		888459	0					
ANR	888476	IdentifierDeclType	ClassAd		888459	0					
ANR	888477	Identifier	tmpCl1		888459	1					
ANR	888478	IdentifierDecl	tmpCl2		888459	1					
ANR	888479	IdentifierDeclType	ClassAd		888459	0					
ANR	888480	Identifier	tmpCl2		888459	1					
ANR	888481	IdentifierDeclStatement	int retval ;	1226:1:26397:26407	888459	3	True				
ANR	888482	IdentifierDecl	retval		888459	0					
ANR	888483	IdentifierDeclType	int		888459	0					
ANR	888484	Identifier	retval		888459	1					
ANR	888485	ExpressionStatement	"snprintf ( messagestr , 512 , ""Remote %s from %s on %s"" , error_type , daemon_name , execute_host )"	1228:1:26411:26511	888459	4	True				
ANR	888486	CallExpression	"snprintf ( messagestr , 512 , ""Remote %s from %s on %s"" , error_type , daemon_name , execute_host )"		888459	0					
ANR	888487	Callee	snprintf		888459	0					
ANR	888488	Identifier	snprintf		888459	0					
ANR	888489	ArgumentList	messagestr		888459	1					
ANR	888490	Argument	messagestr		888459	0					
ANR	888491	Identifier	messagestr		888459	0					
ANR	888492	Argument	512		888459	1					
ANR	888493	PrimaryExpression	512		888459	0					
ANR	888494	Argument	"""Remote %s from %s on %s"""		888459	2					
ANR	888495	PrimaryExpression	"""Remote %s from %s on %s"""		888459	0					
ANR	888496	Argument	error_type		888459	3					
ANR	888497	Identifier	error_type		888459	0					
ANR	888498	Argument	daemon_name		888459	4					
ANR	888499	Identifier	daemon_name		888459	0					
ANR	888500	Argument	execute_host		888459	5					
ANR	888501	Identifier	execute_host		888459	0					
ANR	888502	ExpressionStatement	scheddname = getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )	1233:1:26515:26567	888459	5	True				
ANR	888503	AssignmentExpression	scheddname = getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )		888459	0		=			
ANR	888504	Identifier	scheddname		888459	0					
ANR	888505	CallExpression	getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )		888459	1					
ANR	888506	Callee	getenv		888459	0					
ANR	888507	Identifier	getenv		888459	0					
ANR	888508	ArgumentList	EnvGetName ( ENV_SCHEDD_NAME )		888459	1					
ANR	888509	Argument	EnvGetName ( ENV_SCHEDD_NAME )		888459	0					
ANR	888510	CallExpression	EnvGetName ( ENV_SCHEDD_NAME )		888459	0					
ANR	888511	Callee	EnvGetName		888459	0					
ANR	888512	Identifier	EnvGetName		888459	0					
ANR	888513	ArgumentList	ENV_SCHEDD_NAME		888459	1					
ANR	888514	Argument	ENV_SCHEDD_NAME		888459	0					
ANR	888515	Identifier	ENV_SCHEDD_NAME		888459	0					
ANR	888516	IfStatement	if ( ! critical_error )		888459	6					
ANR	888517	Condition	! critical_error	1235:4:26574:26588	888459	0	True				
ANR	888518	UnaryOperationExpression	! critical_error		888459	0					
ANR	888519	UnaryOperator	!		888459	0					
ANR	888520	Identifier	critical_error		888459	1					
ANR	888521	ExpressionStatement	"error_type = ""Warning"""	1235:21:26591:26613	888459	1	True				
ANR	888522	AssignmentExpression	"error_type = ""Warning"""		888459	0		=			
ANR	888523	Identifier	error_type		888459	0					
ANR	888524	PrimaryExpression	"""Warning"""		888459	1					
ANR	888525	IfStatement	if ( critical_error )		888459	7					
ANR	888526	Condition	critical_error	1237:5:26621:26634	888459	0	True				
ANR	888527	Identifier	critical_error		888459	0					
ANR	888528	CompoundStatement		26:2:600:612	888459	1					
ANR	888529	ExpressionStatement	"tmpCl1 . Assign ( ""endts"" , ( int ) eventclock )"	1238:2:26641:26680	888459	0	True				
ANR	888530	CallExpression	"tmpCl1 . Assign ( ""endts"" , ( int ) eventclock )"		888459	0					
ANR	888531	Callee	tmpCl1 . Assign		888459	0					
ANR	888532	MemberAccess	tmpCl1 . Assign		888459	0					
ANR	888533	Identifier	tmpCl1		888459	0					
ANR	888534	Identifier	Assign		888459	1					
ANR	888535	ArgumentList	"""endts"""		888459	1					
ANR	888536	Argument	"""endts"""		888459	0					
ANR	888537	PrimaryExpression	"""endts"""		888459	0					
ANR	888538	Argument	( int ) eventclock		888459	1					
ANR	888539	CastExpression	( int ) eventclock		888459	0					
ANR	888540	CastTarget	int		888459	0					
ANR	888541	Identifier	eventclock		888459	1					
ANR	888542	ExpressionStatement	"tmpCl1 . Assign ( ""endtype"" , ULOG_REMOTE_ERROR )"	1239:2:26684:26727	888459	1	True				
ANR	888543	CallExpression	"tmpCl1 . Assign ( ""endtype"" , ULOG_REMOTE_ERROR )"		888459	0					
ANR	888544	Callee	tmpCl1 . Assign		888459	0					
ANR	888545	MemberAccess	tmpCl1 . Assign		888459	0					
ANR	888546	Identifier	tmpCl1		888459	0					
ANR	888547	Identifier	Assign		888459	1					
ANR	888548	ArgumentList	"""endtype"""		888459	1					
ANR	888549	Argument	"""endtype"""		888459	0					
ANR	888550	PrimaryExpression	"""endtype"""		888459	0					
ANR	888551	Argument	ULOG_REMOTE_ERROR		888459	1					
ANR	888552	Identifier	ULOG_REMOTE_ERROR		888459	0					
ANR	888553	ExpressionStatement	"tmpCl1 . Assign ( ""endmessage"" , messagestr )"	1240:2:26731:26770	888459	2	True				
ANR	888554	CallExpression	"tmpCl1 . Assign ( ""endmessage"" , messagestr )"		888459	0					
ANR	888555	Callee	tmpCl1 . Assign		888459	0					
ANR	888556	MemberAccess	tmpCl1 . Assign		888459	0					
ANR	888557	Identifier	tmpCl1		888459	0					
ANR	888558	Identifier	Assign		888459	1					
ANR	888559	ArgumentList	"""endmessage"""		888459	1					
ANR	888560	Argument	"""endmessage"""		888459	0					
ANR	888561	PrimaryExpression	"""endmessage"""		888459	0					
ANR	888562	Argument	messagestr		888459	1					
ANR	888563	Identifier	messagestr		888459	0					
ANR	888564	ExpressionStatement	insertCommonIdentifiers ( tmpCl2 )	1243:2:26824:26855	888459	3	True				
ANR	888565	CallExpression	insertCommonIdentifiers ( tmpCl2 )		888459	0					
ANR	888566	Callee	insertCommonIdentifiers		888459	0					
ANR	888567	Identifier	insertCommonIdentifiers		888459	0					
ANR	888568	ArgumentList	tmpCl2		888459	1					
ANR	888569	Argument	tmpCl2		888459	0					
ANR	888570	Identifier	tmpCl2		888459	0					
ANR	888571	IdentifierDeclStatement	MyString tmp ;	1245:2:26860:26872	888459	4	True				
ANR	888572	IdentifierDecl	tmp		888459	0					
ANR	888573	IdentifierDeclType	MyString		888459	0					
ANR	888574	Identifier	tmp		888459	1					
ANR	888575	ExpressionStatement	"tmp . sprintf ( ""endtype = null"" )"	1246:2:26876:26905	888459	5	True				
ANR	888576	CallExpression	"tmp . sprintf ( ""endtype = null"" )"		888459	0					
ANR	888577	Callee	tmp . sprintf		888459	0					
ANR	888578	MemberAccess	tmp . sprintf		888459	0					
ANR	888579	Identifier	tmp		888459	0					
ANR	888580	Identifier	sprintf		888459	1					
ANR	888581	ArgumentList	"""endtype = null"""		888459	1					
ANR	888582	Argument	"""endtype = null"""		888459	0					
ANR	888583	PrimaryExpression	"""endtype = null"""		888459	0					
ANR	888584	ExpressionStatement	tmpCl2 . Insert ( tmp . Value ( ) )	1247:2:26909:26935	888459	6	True				
ANR	888585	CallExpression	tmpCl2 . Insert ( tmp . Value ( ) )		888459	0					
ANR	888586	Callee	tmpCl2 . Insert		888459	0					
ANR	888587	MemberAccess	tmpCl2 . Insert		888459	0					
ANR	888588	Identifier	tmpCl2		888459	0					
ANR	888589	Identifier	Insert		888459	1					
ANR	888590	ArgumentList	tmp . Value ( )		888459	1					
ANR	888591	Argument	tmp . Value ( )		888459	0					
ANR	888592	CallExpression	tmp . Value ( )		888459	0					
ANR	888593	Callee	tmp . Value		888459	0					
ANR	888594	MemberAccess	tmp . Value		888459	0					
ANR	888595	Identifier	tmp		888459	0					
ANR	888596	Identifier	Value		888459	1					
ANR	888597	ArgumentList			888459	1					
ANR	888598	IfStatement	if ( FILEObj )		888459	7					
ANR	888599	Condition	FILEObj	1253:6:27166:27172	888459	0	True				
ANR	888600	Identifier	FILEObj		888459	0					
ANR	888601	CompoundStatement		34:15:915:915	888459	1					
ANR	888602	IfStatement	"if ( FILEObj -> file_updateEvent ( ""Runs"" , & tmpCl1 , & tmpCl2 ) == QUILL_FAILURE )"		888459	0					
ANR	888603	Condition	"FILEObj -> file_updateEvent ( ""Runs"" , & tmpCl1 , & tmpCl2 ) == QUILL_FAILURE"	1254:7:27184:27255	888459	0	True				
ANR	888604	EqualityExpression	"FILEObj -> file_updateEvent ( ""Runs"" , & tmpCl1 , & tmpCl2 ) == QUILL_FAILURE"		888459	0		==			
ANR	888605	CallExpression	"FILEObj -> file_updateEvent ( ""Runs"" , & tmpCl1 , & tmpCl2 )"		888459	0					
ANR	888606	Callee	FILEObj -> file_updateEvent		888459	0					
ANR	888607	PtrMemberAccess	FILEObj -> file_updateEvent		888459	0					
ANR	888608	Identifier	FILEObj		888459	0					
ANR	888609	Identifier	file_updateEvent		888459	1					
ANR	888610	ArgumentList	"""Runs"""		888459	1					
ANR	888611	Argument	"""Runs"""		888459	0					
ANR	888612	PrimaryExpression	"""Runs"""		888459	0					
ANR	888613	Argument	& tmpCl1		888459	1					
ANR	888614	UnaryOperationExpression	& tmpCl1		888459	0					
ANR	888615	UnaryOperator	&		888459	0					
ANR	888616	Identifier	tmpCl1		888459	1					
ANR	888617	Argument	& tmpCl2		888459	2					
ANR	888618	UnaryOperationExpression	& tmpCl2		888459	0					
ANR	888619	UnaryOperator	&		888459	0					
ANR	888620	Identifier	tmpCl2		888459	1					
ANR	888621	Identifier	QUILL_FAILURE		888459	1					
ANR	888622	CompoundStatement		36:22:998:998	888459	1					
ANR	888623	ExpressionStatement	"dprintf ( D_ALWAYS , ""Logging Event 5--- Error\\n"" )"	1256:4:27264:27311	888459	0	True				
ANR	888624	CallExpression	"dprintf ( D_ALWAYS , ""Logging Event 5--- Error\\n"" )"		888459	0					
ANR	888625	Callee	dprintf		888459	0					
ANR	888626	Identifier	dprintf		888459	0					
ANR	888627	ArgumentList	D_ALWAYS		888459	1					
ANR	888628	Argument	D_ALWAYS		888459	0					
ANR	888629	Identifier	D_ALWAYS		888459	0					
ANR	888630	Argument	"""Logging Event 5--- Error\\n"""		888459	1					
ANR	888631	PrimaryExpression	"""Logging Event 5--- Error\\n"""		888459	0					
ANR	888632	ReturnStatement	return 0 ;	1257:4:27317:27325	888459	1	True				
ANR	888633	PrimaryExpression	0		888459	0					
ANR	888634	ElseStatement	else		888459	0					
ANR	888635	CompoundStatement		42:8:1111:1111	888459	0					
ANR	888636	ExpressionStatement	insertCommonIdentifiers ( tmpCl1 )	1263:8:27438:27469	888459	0	True				
ANR	888637	CallExpression	insertCommonIdentifiers ( tmpCl1 )		888459	0					
ANR	888638	Callee	insertCommonIdentifiers		888459	0					
ANR	888639	Identifier	insertCommonIdentifiers		888459	0					
ANR	888640	ArgumentList	tmpCl1		888459	1					
ANR	888641	Argument	tmpCl1		888459	0					
ANR	888642	Identifier	tmpCl1		888459	0					
ANR	888643	ExpressionStatement	"tmpCl1 . Assign ( ""eventtype"" , ULOG_REMOTE_ERROR )"	1265:2:27474:27519	888459	1	True				
ANR	888644	CallExpression	"tmpCl1 . Assign ( ""eventtype"" , ULOG_REMOTE_ERROR )"		888459	0					
ANR	888645	Callee	tmpCl1 . Assign		888459	0					
ANR	888646	MemberAccess	tmpCl1 . Assign		888459	0					
ANR	888647	Identifier	tmpCl1		888459	0					
ANR	888648	Identifier	Assign		888459	1					
ANR	888649	ArgumentList	"""eventtype"""		888459	1					
ANR	888650	Argument	"""eventtype"""		888459	0					
ANR	888651	PrimaryExpression	"""eventtype"""		888459	0					
ANR	888652	Argument	ULOG_REMOTE_ERROR		888459	1					
ANR	888653	Identifier	ULOG_REMOTE_ERROR		888459	0					
ANR	888654	ExpressionStatement	"tmpCl1 . Assign ( ""eventtime"" , ( int ) eventclock )"	1266:2:27523:27566	888459	2	True				
ANR	888655	CallExpression	"tmpCl1 . Assign ( ""eventtime"" , ( int ) eventclock )"		888459	0					
ANR	888656	Callee	tmpCl1 . Assign		888459	0					
ANR	888657	MemberAccess	tmpCl1 . Assign		888459	0					
ANR	888658	Identifier	tmpCl1		888459	0					
ANR	888659	Identifier	Assign		888459	1					
ANR	888660	ArgumentList	"""eventtime"""		888459	1					
ANR	888661	Argument	"""eventtime"""		888459	0					
ANR	888662	PrimaryExpression	"""eventtime"""		888459	0					
ANR	888663	Argument	( int ) eventclock		888459	1					
ANR	888664	CastExpression	( int ) eventclock		888459	0					
ANR	888665	CastTarget	int		888459	0					
ANR	888666	Identifier	eventclock		888459	1					
ANR	888667	ExpressionStatement	"tmpCl1 . Assign ( ""description"" , messagestr )"	1267:2:27570:27610	888459	3	True				
ANR	888668	CallExpression	"tmpCl1 . Assign ( ""description"" , messagestr )"		888459	0					
ANR	888669	Callee	tmpCl1 . Assign		888459	0					
ANR	888670	MemberAccess	tmpCl1 . Assign		888459	0					
ANR	888671	Identifier	tmpCl1		888459	0					
ANR	888672	Identifier	Assign		888459	1					
ANR	888673	ArgumentList	"""description"""		888459	1					
ANR	888674	Argument	"""description"""		888459	0					
ANR	888675	PrimaryExpression	"""description"""		888459	0					
ANR	888676	Argument	messagestr		888459	1					
ANR	888677	Identifier	messagestr		888459	0					
ANR	888678	IfStatement	if ( FILEObj )		888459	4					
ANR	888679	Condition	FILEObj	1269:6:27619:27625	888459	0	True				
ANR	888680	Identifier	FILEObj		888459	0					
ANR	888681	CompoundStatement		50:15:1368:1368	888459	1					
ANR	888682	IfStatement	"if ( FILEObj -> file_newEvent ( ""Events"" , & tmpCl1 ) == QUILL_FAILURE )"		888459	0					
ANR	888683	Condition	"FILEObj -> file_newEvent ( ""Events"" , & tmpCl1 ) == QUILL_FAILURE"	1270:7:27637:27694	888459	0	True				
ANR	888684	EqualityExpression	"FILEObj -> file_newEvent ( ""Events"" , & tmpCl1 ) == QUILL_FAILURE"		888459	0		==			
ANR	888685	CallExpression	"FILEObj -> file_newEvent ( ""Events"" , & tmpCl1 )"		888459	0					
ANR	888686	Callee	FILEObj -> file_newEvent		888459	0					
ANR	888687	PtrMemberAccess	FILEObj -> file_newEvent		888459	0					
ANR	888688	Identifier	FILEObj		888459	0					
ANR	888689	Identifier	file_newEvent		888459	1					
ANR	888690	ArgumentList	"""Events"""		888459	1					
ANR	888691	Argument	"""Events"""		888459	0					
ANR	888692	PrimaryExpression	"""Events"""		888459	0					
ANR	888693	Argument	& tmpCl1		888459	1					
ANR	888694	UnaryOperationExpression	& tmpCl1		888459	0					
ANR	888695	UnaryOperator	&		888459	0					
ANR	888696	Identifier	tmpCl1		888459	1					
ANR	888697	Identifier	QUILL_FAILURE		888459	1					
ANR	888698	CompoundStatement		51:67:1437:1437	888459	1					
ANR	888699	ExpressionStatement	"dprintf ( D_ALWAYS , ""Logging Event 5--- Error\\n"" )"	1271:4:27703:27750	888459	0	True				
ANR	888700	CallExpression	"dprintf ( D_ALWAYS , ""Logging Event 5--- Error\\n"" )"		888459	0					
ANR	888701	Callee	dprintf		888459	0					
ANR	888702	Identifier	dprintf		888459	0					
ANR	888703	ArgumentList	D_ALWAYS		888459	1					
ANR	888704	Argument	D_ALWAYS		888459	0					
ANR	888705	Identifier	D_ALWAYS		888459	0					
ANR	888706	Argument	"""Logging Event 5--- Error\\n"""		888459	1					
ANR	888707	PrimaryExpression	"""Logging Event 5--- Error\\n"""		888459	0					
ANR	888708	ReturnStatement	return 0 ;	1272:4:27756:27764	888459	1	True				
ANR	888709	PrimaryExpression	0		888459	0					
ANR	888710	ExpressionStatement	"retval = fprintf ( file , ""%s from %s on %s:\\n"" , error_type , daemon_name , execute_host )"	1277:4:27809:27909	888459	8	True				
ANR	888711	AssignmentExpression	"retval = fprintf ( file , ""%s from %s on %s:\\n"" , error_type , daemon_name , execute_host )"		888459	0		=			
ANR	888712	Identifier	retval		888459	0					
ANR	888713	CallExpression	"fprintf ( file , ""%s from %s on %s:\\n"" , error_type , daemon_name , execute_host )"		888459	1					
ANR	888714	Callee	fprintf		888459	0					
ANR	888715	Identifier	fprintf		888459	0					
ANR	888716	ArgumentList	file		888459	1					
ANR	888717	Argument	file		888459	0					
ANR	888718	Identifier	file		888459	0					
ANR	888719	Argument	"""%s from %s on %s:\\n"""		888459	1					
ANR	888720	PrimaryExpression	"""%s from %s on %s:\\n"""		888459	0					
ANR	888721	Argument	error_type		888459	2					
ANR	888722	Identifier	error_type		888459	0					
ANR	888723	Argument	daemon_name		888459	3					
ANR	888724	Identifier	daemon_name		888459	0					
ANR	888725	Argument	execute_host		888459	4					
ANR	888726	Identifier	execute_host		888459	0					
ANR	888727	IfStatement	if ( retval < 0 )		888459	9					
ANR	888728	Condition	retval < 0	1286:8:27922:27931	888459	0	True				
ANR	888729	RelationalExpression	retval < 0		888459	0		<			
ANR	888730	Identifier	retval		888459	0					
ANR	888731	PrimaryExpression	0		888459	1					
ANR	888732	CompoundStatement		68:4:1678:1678	888459	1					
ANR	888733	ReturnStatement	return 0 ;	1288:1:27941:27949	888459	0	True				
ANR	888734	PrimaryExpression	0		888459	0					
ANR	888735	IdentifierDeclStatement	char * line = error_str ;	1292:1:28013:28035	888459	10	True				
ANR	888736	IdentifierDecl	* line = error_str		888459	0					
ANR	888737	IdentifierDeclType	char *		888459	0					
ANR	888738	Identifier	line		888459	1					
ANR	888739	AssignmentExpression	* line = error_str		888459	2		=			
ANR	888740	Identifier	error_str		888459	0					
ANR	888741	Identifier	error_str		888459	1					
ANR	888742	IfStatement	if ( line )		888459	11					
ANR	888743	Condition	line	1293:4:28041:28044	888459	0	True				
ANR	888744	Identifier	line		888459	0					
ANR	888745	WhileStatement	while ( * line )		888459	1					
ANR	888746	Condition	* line	1294:7:28054:28058	888459	0	True				
ANR	888747	UnaryOperationExpression	* line		888459	0					
ANR	888748	UnaryOperator	*		888459	0					
ANR	888749	Identifier	line		888459	1					
ANR	888750	CompoundStatement		76:2:1805:1840	888459	1					
ANR	888751	IdentifierDeclStatement	"char * next_line = strchr ( line , '\\n' ) ;"	1295:2:28065:28100	888459	0	True				
ANR	888752	IdentifierDecl	"* next_line = strchr ( line , '\\n' )"		888459	0					
ANR	888753	IdentifierDeclType	char *		888459	0					
ANR	888754	Identifier	next_line		888459	1					
ANR	888755	AssignmentExpression	"* next_line = strchr ( line , '\\n' )"		888459	2		=			
ANR	888756	Identifier	next_line		888459	0					
ANR	888757	CallExpression	"strchr ( line , '\\n' )"		888459	1					
ANR	888758	Callee	strchr		888459	0					
ANR	888759	Identifier	strchr		888459	0					
ANR	888760	ArgumentList	line		888459	1					
ANR	888761	Argument	line		888459	0					
ANR	888762	Identifier	line		888459	0					
ANR	888763	Argument	'\\n'		888459	1					
ANR	888764	PrimaryExpression	'\\n'		888459	0					
ANR	888765	IfStatement	if ( next_line )		888459	1					
ANR	888766	Condition	next_line	1296:5:28107:28115	888459	0	True				
ANR	888767	Identifier	next_line		888459	0					
ANR	888768	ExpressionStatement	* next_line = '\\0'	1296:16:28118:28135	888459	1	True				
ANR	888769	AssignmentExpression	* next_line = '\\0'		888459	0		=			
ANR	888770	UnaryOperationExpression	* next_line		888459	0					
ANR	888771	UnaryOperator	*		888459	0					
ANR	888772	Identifier	next_line		888459	1					
ANR	888773	PrimaryExpression	'\\0'		888459	1					
ANR	888774	ExpressionStatement	"retval = fprintf ( file , ""\\t%s\\n"" , line )"	1298:2:28140:28176	888459	2	True				
ANR	888775	AssignmentExpression	"retval = fprintf ( file , ""\\t%s\\n"" , line )"		888459	0		=			
ANR	888776	Identifier	retval		888459	0					
ANR	888777	CallExpression	"fprintf ( file , ""\\t%s\\n"" , line )"		888459	1					
ANR	888778	Callee	fprintf		888459	0					
ANR	888779	Identifier	fprintf		888459	0					
ANR	888780	ArgumentList	file		888459	1					
ANR	888781	Argument	file		888459	0					
ANR	888782	Identifier	file		888459	0					
ANR	888783	Argument	"""\\t%s\\n"""		888459	1					
ANR	888784	PrimaryExpression	"""\\t%s\\n"""		888459	0					
ANR	888785	Argument	line		888459	2					
ANR	888786	Identifier	line		888459	0					
ANR	888787	IfStatement	if ( retval < 0 )		888459	3					
ANR	888788	Condition	retval < 0	1299:5:28183:28192	888459	0	True				
ANR	888789	RelationalExpression	retval < 0		888459	0		<			
ANR	888790	Identifier	retval		888459	0					
ANR	888791	PrimaryExpression	0		888459	1					
ANR	888792	ReturnStatement	return 0 ;	1299:17:28195:28203	888459	1	True				
ANR	888793	PrimaryExpression	0		888459	0					
ANR	888794	IfStatement	if ( ! next_line )		888459	4					
ANR	888795	Condition	! next_line	1301:5:28211:28220	888459	0	True				
ANR	888796	UnaryOperationExpression	! next_line		888459	0					
ANR	888797	UnaryOperator	!		888459	0					
ANR	888798	Identifier	next_line		888459	1					
ANR	888799	BreakStatement	break ;	1301:17:28223:28228	888459	1	True				
ANR	888800	ExpressionStatement	* next_line = '\\n'	1302:2:28232:28249	888459	5	True				
ANR	888801	AssignmentExpression	* next_line = '\\n'		888459	0		=			
ANR	888802	UnaryOperationExpression	* next_line		888459	0					
ANR	888803	UnaryOperator	*		888459	0					
ANR	888804	Identifier	next_line		888459	1					
ANR	888805	PrimaryExpression	'\\n'		888459	1					
ANR	888806	ExpressionStatement	line = next_line + 1	1303:2:28253:28271	888459	6	True				
ANR	888807	AssignmentExpression	line = next_line + 1		888459	0		=			
ANR	888808	Identifier	line		888459	0					
ANR	888809	AdditiveExpression	next_line + 1		888459	1		+			
ANR	888810	Identifier	next_line		888459	0					
ANR	888811	PrimaryExpression	1		888459	1					
ANR	888812	IfStatement	if ( hold_reason_code )		888459	12					
ANR	888813	Condition	hold_reason_code	1306:5:28282:28297	888459	0	True				
ANR	888814	Identifier	hold_reason_code		888459	0					
ANR	888815	CompoundStatement		87:23:2040:2040	888459	1					
ANR	888816	ExpressionStatement	"fprintf ( file , ""\\tCode %d Subcode %d\\n"" , hold_reason_code , hold_reason_subcode )"	1307:2:28304:28391	888459	0	True				
ANR	888817	CallExpression	"fprintf ( file , ""\\tCode %d Subcode %d\\n"" , hold_reason_code , hold_reason_subcode )"		888459	0					
ANR	888818	Callee	fprintf		888459	0					
ANR	888819	Identifier	fprintf		888459	0					
ANR	888820	ArgumentList	file		888459	1					
ANR	888821	Argument	file		888459	0					
ANR	888822	Identifier	file		888459	0					
ANR	888823	Argument	"""\\tCode %d Subcode %d\\n"""		888459	1					
ANR	888824	PrimaryExpression	"""\\tCode %d Subcode %d\\n"""		888459	0					
ANR	888825	Argument	hold_reason_code		888459	2					
ANR	888826	Identifier	hold_reason_code		888459	0					
ANR	888827	Argument	hold_reason_subcode		888459	3					
ANR	888828	Identifier	hold_reason_subcode		888459	0					
ANR	888829	ReturnStatement	return 1 ;	1311:4:28401:28409	888459	13	True				
ANR	888830	PrimaryExpression	1		888459	0					
ANR	888831	ReturnType	int		888459	1					
ANR	888832	Identifier	RemoteErrorEvent :: writeEvent		888459	2					
ANR	888833	ParameterList	FILE * file		888459	3					
ANR	888834	Parameter	FILE * file	1219:29:26247:26256	888459	0	True				
ANR	888835	ParameterType	FILE *		888459	0					
ANR	888836	Identifier	file		888459	1					
ANR	888837	CFGEntryNode	ENTRY		888459		True				
ANR	888838	CFGExitNode	EXIT		888459		True				
ANR	888839	Symbol	scheddname		888459						
ANR	888840	Symbol	line		888459						
ANR	888841	Symbol	tmp . Value		888459						
ANR	888842	Symbol	strchr		888459						
ANR	888843	Symbol	next_line		888459						
ANR	888844	Symbol	* line		888459						
ANR	888845	Symbol	EnvGetName		888459						
ANR	888846	Symbol	ENV_SCHEDD_NAME		888459						
ANR	888847	Symbol	QUILL_FAILURE		888459						
ANR	888848	Symbol	execute_host		888459						
ANR	888849	Symbol	FILEObj		888459						
ANR	888850	Symbol	* FILEObj		888459						
ANR	888851	Symbol	& tmpCl1		888459						
ANR	888852	Symbol	file		888459						
ANR	888853	Symbol	error_str		888459						
ANR	888854	Symbol	eventclock		888459						
ANR	888855	Symbol	tmp		888459						
ANR	888856	Symbol	& tmpCl2		888459						
ANR	888857	Symbol	error_type		888459						
ANR	888858	Symbol	FILEObj -> file_newEvent		888459						
ANR	888859	Symbol	getenv		888459						
ANR	888860	Symbol	hold_reason_code		888459						
ANR	888861	Symbol	daemon_name		888459						
ANR	888862	Symbol	D_ALWAYS		888459						
ANR	888863	Symbol	fprintf		888459						
ANR	888864	Symbol	retval		888459						
ANR	888865	Symbol	critical_error		888459						
ANR	888866	Symbol	FILEObj -> file_updateEvent		888459						
ANR	888867	Symbol	ULOG_REMOTE_ERROR		888459						
ANR	888868	Symbol	messagestr		888459						
ANR	888869	Symbol	hold_reason_subcode		888459						
ANR	888870	Symbol	tmpCl2		888459						
ANR	888871	Symbol	tmpCl1		888459						
ANR	888872	Symbol	* next_line		888459						
ANR	888873	Function	RemoteErrorEvent :: readEvent	1314:0:28414:29694							
ANR	888874	FunctionDef	RemoteErrorEvent :: readEvent (FILE * file)		888873	0					
ANR	888875	CompoundStatement		1316:0:28458:29694	888873	0					
ANR	888876	IdentifierDeclStatement	char line [ 8192 ] ;	1317:1:28461:28476	888873	0	True				
ANR	888877	IdentifierDecl	line [ 8192 ]		888873	0					
ANR	888878	IdentifierDeclType	char [ 8192 ]		888873	0					
ANR	888879	Identifier	line		888873	1					
ANR	888880	PrimaryExpression	8192		888873	2					
ANR	888881	IdentifierDeclStatement	char error_type [ 128 ] ;	1318:1:28479:28499	888873	1	True				
ANR	888882	IdentifierDecl	error_type [ 128 ]		888873	0					
ANR	888883	IdentifierDeclType	char [ 128 ]		888873	0					
ANR	888884	Identifier	error_type		888873	1					
ANR	888885	PrimaryExpression	128		888873	2					
ANR	888886	IdentifierDeclStatement	"int retval = fscanf ( file , ""%127s from %127s on %127s\\n"" , error_type , daemon_name , execute_host ) ;"	1319:4:28505:28616	888873	2	True				
ANR	888887	IdentifierDecl	"retval = fscanf ( file , ""%127s from %127s on %127s\\n"" , error_type , daemon_name , execute_host )"		888873	0					
ANR	888888	IdentifierDeclType	int		888873	0					
ANR	888889	Identifier	retval		888873	1					
ANR	888890	AssignmentExpression	"retval = fscanf ( file , ""%127s from %127s on %127s\\n"" , error_type , daemon_name , execute_host )"		888873	2		=			
ANR	888891	Identifier	retval		888873	0					
ANR	888892	CallExpression	"fscanf ( file , ""%127s from %127s on %127s\\n"" , error_type , daemon_name , execute_host )"		888873	1					
ANR	888893	Callee	fscanf		888873	0					
ANR	888894	Identifier	fscanf		888873	0					
ANR	888895	ArgumentList	file		888873	1					
ANR	888896	Argument	file		888873	0					
ANR	888897	Identifier	file		888873	0					
ANR	888898	Argument	"""%127s from %127s on %127s\\n"""		888873	1					
ANR	888899	PrimaryExpression	"""%127s from %127s on %127s\\n"""		888873	0					
ANR	888900	Argument	error_type		888873	2					
ANR	888901	Identifier	error_type		888873	0					
ANR	888902	Argument	daemon_name		888873	3					
ANR	888903	Identifier	daemon_name		888873	0					
ANR	888904	Argument	execute_host		888873	4					
ANR	888905	Identifier	execute_host		888873	0					
ANR	888906	IfStatement	if ( retval < 0 )		888873	3					
ANR	888907	Condition	retval < 0	1326:8:28627:28636	888873	0	True				
ANR	888908	RelationalExpression	retval < 0		888873	0		<			
ANR	888909	Identifier	retval		888873	0					
ANR	888910	PrimaryExpression	0		888873	1					
ANR	888911	CompoundStatement		12:4:184:184	888873	1					
ANR	888912	ReturnStatement	return 0 ;	1328:1:28646:28654	888873	0	True				
ANR	888913	PrimaryExpression	0		888873	0					
ANR	888914	ExpressionStatement	error_type [ sizeof ( error_type ) - 1 ] = '\\0'	1331:1:28664:28703	888873	4	True				
ANR	888915	AssignmentExpression	error_type [ sizeof ( error_type ) - 1 ] = '\\0'		888873	0		=			
ANR	888916	ArrayIndexing	error_type [ sizeof ( error_type ) - 1 ]		888873	0					
ANR	888917	Identifier	error_type		888873	0					
ANR	888918	AdditiveExpression	sizeof ( error_type ) - 1		888873	1		-			
ANR	888919	SizeofExpression	sizeof ( error_type )		888873	0					
ANR	888920	Sizeof	sizeof		888873	0					
ANR	888921	SizeofOperand	error_type		888873	1					
ANR	888922	PrimaryExpression	1		888873	1					
ANR	888923	PrimaryExpression	'\\0'		888873	1					
ANR	888924	ExpressionStatement	daemon_name [ sizeof ( daemon_name ) - 1 ] = '\\0'	1332:1:28706:28747	888873	5	True				
ANR	888925	AssignmentExpression	daemon_name [ sizeof ( daemon_name ) - 1 ] = '\\0'		888873	0		=			
ANR	888926	ArrayIndexing	daemon_name [ sizeof ( daemon_name ) - 1 ]		888873	0					
ANR	888927	Identifier	daemon_name		888873	0					
ANR	888928	AdditiveExpression	sizeof ( daemon_name ) - 1		888873	1		-			
ANR	888929	SizeofExpression	sizeof ( daemon_name )		888873	0					
ANR	888930	Sizeof	sizeof		888873	0					
ANR	888931	SizeofOperand	daemon_name		888873	1					
ANR	888932	PrimaryExpression	1		888873	1					
ANR	888933	PrimaryExpression	'\\0'		888873	1					
ANR	888934	ExpressionStatement	execute_host [ sizeof ( execute_host ) - 1 ] = '\\0'	1333:1:28750:28793	888873	6	True				
ANR	888935	AssignmentExpression	execute_host [ sizeof ( execute_host ) - 1 ] = '\\0'		888873	0		=			
ANR	888936	ArrayIndexing	execute_host [ sizeof ( execute_host ) - 1 ]		888873	0					
ANR	888937	Identifier	execute_host		888873	0					
ANR	888938	AdditiveExpression	sizeof ( execute_host ) - 1		888873	1		-			
ANR	888939	SizeofExpression	sizeof ( execute_host )		888873	0					
ANR	888940	Sizeof	sizeof		888873	0					
ANR	888941	SizeofOperand	execute_host		888873	1					
ANR	888942	PrimaryExpression	1		888873	1					
ANR	888943	PrimaryExpression	'\\0'		888873	1					
ANR	888944	IfStatement	"if ( ! strcmp ( error_type , ""Error"" ) )"		888873	7					
ANR	888945	Condition	"! strcmp ( error_type , ""Error"" )"	1335:4:28800:28826	888873	0	True				
ANR	888946	UnaryOperationExpression	"! strcmp ( error_type , ""Error"" )"		888873	0					
ANR	888947	UnaryOperator	!		888873	0					
ANR	888948	CallExpression	"strcmp ( error_type , ""Error"" )"		888873	1					
ANR	888949	Callee	strcmp		888873	0					
ANR	888950	Identifier	strcmp		888873	0					
ANR	888951	ArgumentList	error_type		888873	1					
ANR	888952	Argument	error_type		888873	0					
ANR	888953	Identifier	error_type		888873	0					
ANR	888954	Argument	"""Error"""		888873	1					
ANR	888955	PrimaryExpression	"""Error"""		888873	0					
ANR	888956	ExpressionStatement	critical_error = true	1335:33:28829:28850	888873	1	True				
ANR	888957	AssignmentExpression	critical_error = true		888873	0		=			
ANR	888958	Identifier	critical_error		888873	0					
ANR	888959	Identifier	true		888873	1					
ANR	888960	ElseStatement	else		888873	0					
ANR	888961	IfStatement	"if ( ! strcmp ( error_type , ""Warning"" ) )"		888873	0					
ANR	888962	Condition	"! strcmp ( error_type , ""Warning"" )"	1336:9:28861:28889	888873	0	True				
ANR	888963	UnaryOperationExpression	"! strcmp ( error_type , ""Warning"" )"		888873	0					
ANR	888964	UnaryOperator	!		888873	0					
ANR	888965	CallExpression	"strcmp ( error_type , ""Warning"" )"		888873	1					
ANR	888966	Callee	strcmp		888873	0					
ANR	888967	Identifier	strcmp		888873	0					
ANR	888968	ArgumentList	error_type		888873	1					
ANR	888969	Argument	error_type		888873	0					
ANR	888970	Identifier	error_type		888873	0					
ANR	888971	Argument	"""Warning"""		888873	1					
ANR	888972	PrimaryExpression	"""Warning"""		888873	0					
ANR	888973	ExpressionStatement	critical_error = false	1336:40:28892:28914	888873	1	True				
ANR	888974	AssignmentExpression	critical_error = false		888873	0		=			
ANR	888975	Identifier	critical_error		888873	0					
ANR	888976	Identifier	false		888873	1					
ANR	888977	IdentifierDeclStatement	MyString lines ;	1339:1:28973:28987	888873	8	True				
ANR	888978	IdentifierDecl	lines		888873	0					
ANR	888979	IdentifierDeclType	MyString		888873	0					
ANR	888980	Identifier	lines		888873	1					
ANR	888981	WhileStatement	while ( ! feof ( file ) )		888873	9					
ANR	888982	Condition	! feof ( file )	1341:7:28997:29007	888873	0	True				
ANR	888983	UnaryOperationExpression	! feof ( file )		888873	0					
ANR	888984	UnaryOperator	!		888873	0					
ANR	888985	CallExpression	feof ( file )		888873	1					
ANR	888986	Callee	feof		888873	0					
ANR	888987	Identifier	feof		888873	0					
ANR	888988	ArgumentList	file		888873	1					
ANR	888989	Argument	file		888873	0					
ANR	888990	Identifier	file		888873	0					
ANR	888991	CompoundStatement		45:2:978:994	888873	1					
ANR	888992	IdentifierDeclStatement	fpos_t filep ;	1346:2:29189:29201	888873	0	True				
ANR	888993	IdentifierDecl	filep		888873	0					
ANR	888994	IdentifierDeclType	fpos_t		888873	0					
ANR	888995	Identifier	filep		888873	1					
ANR	888996	ExpressionStatement	"fgetpos ( file , & filep )"	1347:2:29205:29228	888873	1	True				
ANR	888997	CallExpression	"fgetpos ( file , & filep )"		888873	0					
ANR	888998	Callee	fgetpos		888873	0					
ANR	888999	Identifier	fgetpos		888873	0					
ANR	889000	ArgumentList	file		888873	1					
ANR	889001	Argument	file		888873	0					
ANR	889002	Identifier	file		888873	0					
ANR	889003	Argument	& filep		888873	1					
ANR	889004	UnaryOperationExpression	& filep		888873	0					
ANR	889005	UnaryOperator	&		888873	0					
ANR	889006	Identifier	filep		888873	1					
ANR	889007	IfStatement	"if ( ! fgets ( line , sizeof ( line ) , file ) || strcmp ( line , ""...\\n"" ) == 0 )"		888873	2					
ANR	889008	Condition	"! fgets ( line , sizeof ( line ) , file ) || strcmp ( line , ""...\\n"" ) == 0"	1349:6:29237:29298	888873	0	True				
ANR	889009	OrExpression	"! fgets ( line , sizeof ( line ) , file ) || strcmp ( line , ""...\\n"" ) == 0"		888873	0		||			
ANR	889010	UnaryOperationExpression	"! fgets ( line , sizeof ( line ) , file )"		888873	0					
ANR	889011	UnaryOperator	!		888873	0					
ANR	889012	CallExpression	"fgets ( line , sizeof ( line ) , file )"		888873	1					
ANR	889013	Callee	fgets		888873	0					
ANR	889014	Identifier	fgets		888873	0					
ANR	889015	ArgumentList	line		888873	1					
ANR	889016	Argument	line		888873	0					
ANR	889017	Identifier	line		888873	0					
ANR	889018	Argument	sizeof ( line )		888873	1					
ANR	889019	SizeofExpression	sizeof ( line )		888873	0					
ANR	889020	Sizeof	sizeof		888873	0					
ANR	889021	SizeofOperand	line		888873	1					
ANR	889022	Argument	file		888873	2					
ANR	889023	Identifier	file		888873	0					
ANR	889024	EqualityExpression	"strcmp ( line , ""...\\n"" ) == 0"		888873	1		==			
ANR	889025	CallExpression	"strcmp ( line , ""...\\n"" )"		888873	0					
ANR	889026	Callee	strcmp		888873	0					
ANR	889027	Identifier	strcmp		888873	0					
ANR	889028	ArgumentList	line		888873	1					
ANR	889029	Argument	line		888873	0					
ANR	889030	Identifier	line		888873	0					
ANR	889031	Argument	"""...\\n"""		888873	1					
ANR	889032	PrimaryExpression	"""...\\n"""		888873	0					
ANR	889033	PrimaryExpression	0		888873	1					
ANR	889034	CompoundStatement		34:71:843:843	888873	1					
ANR	889035	ExpressionStatement	"fsetpos ( file , & filep )"	1350:3:29307:29330	888873	0	True				
ANR	889036	CallExpression	"fsetpos ( file , & filep )"		888873	0					
ANR	889037	Callee	fsetpos		888873	0					
ANR	889038	Identifier	fsetpos		888873	0					
ANR	889039	ArgumentList	file		888873	1					
ANR	889040	Argument	file		888873	0					
ANR	889041	Identifier	file		888873	0					
ANR	889042	Argument	& filep		888873	1					
ANR	889043	UnaryOperationExpression	& filep		888873	0					
ANR	889044	UnaryOperator	&		888873	0					
ANR	889045	Identifier	filep		888873	1					
ANR	889046	BreakStatement	break ;	1351:3:29335:29340	888873	1	True				
ANR	889047	IdentifierDeclStatement	"char * l = strchr ( line , '\\n' ) ;"	1354:2:29349:29376	888873	3	True				
ANR	889048	IdentifierDecl	"* l = strchr ( line , '\\n' )"		888873	0					
ANR	889049	IdentifierDeclType	char *		888873	0					
ANR	889050	Identifier	l		888873	1					
ANR	889051	AssignmentExpression	"* l = strchr ( line , '\\n' )"		888873	2		=			
ANR	889052	Identifier	l		888873	0					
ANR	889053	CallExpression	"strchr ( line , '\\n' )"		888873	1					
ANR	889054	Callee	strchr		888873	0					
ANR	889055	Identifier	strchr		888873	0					
ANR	889056	ArgumentList	line		888873	1					
ANR	889057	Argument	line		888873	0					
ANR	889058	Identifier	line		888873	0					
ANR	889059	Argument	'\\n'		888873	1					
ANR	889060	PrimaryExpression	'\\n'		888873	0					
ANR	889061	IfStatement	if ( l )		888873	4					
ANR	889062	Condition	l	1355:5:29383:29383	888873	0	True				
ANR	889063	Identifier	l		888873	0					
ANR	889064	ExpressionStatement	* l = '\\0'	1355:8:29386:29395	888873	1	True				
ANR	889065	AssignmentExpression	* l = '\\0'		888873	0		=			
ANR	889066	UnaryOperationExpression	* l		888873	0					
ANR	889067	UnaryOperator	*		888873	0					
ANR	889068	Identifier	l		888873	1					
ANR	889069	PrimaryExpression	'\\0'		888873	1					
ANR	889070	ExpressionStatement	l = line	1357:2:29400:29408	888873	5	True				
ANR	889071	AssignmentExpression	l = line		888873	0		=			
ANR	889072	Identifier	l		888873	0					
ANR	889073	Identifier	line		888873	1					
ANR	889074	IfStatement	if ( l [ 0 ] == '\\t' )		888873	6					
ANR	889075	Condition	l [ 0 ] == '\\t'	1358:5:29415:29426	888873	0	True				
ANR	889076	EqualityExpression	l [ 0 ] == '\\t'		888873	0		==			
ANR	889077	ArrayIndexing	l [ 0 ]		888873	0					
ANR	889078	Identifier	l		888873	0					
ANR	889079	PrimaryExpression	0		888873	1					
ANR	889080	PrimaryExpression	'\\t'		888873	1					
ANR	889081	ExpressionStatement	l ++	1358:19:29429:29432	888873	1	True				
ANR	889082	PostIncDecOperationExpression	l ++		888873	0					
ANR	889083	Identifier	l		888873	0					
ANR	889084	IncDec	++		888873	1					
ANR	889085	IdentifierDeclStatement	"int code , subcode ;"	1360:2:29437:29453	888873	7	True				
ANR	889086	IdentifierDecl	code		888873	0					
ANR	889087	IdentifierDeclType	int		888873	0					
ANR	889088	Identifier	code		888873	1					
ANR	889089	IdentifierDecl	subcode		888873	1					
ANR	889090	IdentifierDeclType	int		888873	0					
ANR	889091	Identifier	subcode		888873	1					
ANR	889092	IfStatement	"if ( sscanf ( l , ""Code %d Subcode %d"" , & code , & subcode ) == 2 )"		888873	8					
ANR	889093	Condition	"sscanf ( l , ""Code %d Subcode %d"" , & code , & subcode ) == 2"	1361:6:29461:29510	888873	0	True				
ANR	889094	EqualityExpression	"sscanf ( l , ""Code %d Subcode %d"" , & code , & subcode ) == 2"		888873	0		==			
ANR	889095	CallExpression	"sscanf ( l , ""Code %d Subcode %d"" , & code , & subcode )"		888873	0					
ANR	889096	Callee	sscanf		888873	0					
ANR	889097	Identifier	sscanf		888873	0					
ANR	889098	ArgumentList	l		888873	1					
ANR	889099	Argument	l		888873	0					
ANR	889100	Identifier	l		888873	0					
ANR	889101	Argument	"""Code %d Subcode %d"""		888873	1					
ANR	889102	PrimaryExpression	"""Code %d Subcode %d"""		888873	0					
ANR	889103	Argument	& code		888873	2					
ANR	889104	UnaryOperationExpression	& code		888873	0					
ANR	889105	UnaryOperator	&		888873	0					
ANR	889106	Identifier	code		888873	1					
ANR	889107	Argument	& subcode		888873	3					
ANR	889108	UnaryOperationExpression	& subcode		888873	0					
ANR	889109	UnaryOperator	&		888873	0					
ANR	889110	Identifier	subcode		888873	1					
ANR	889111	PrimaryExpression	2		888873	1					
ANR	889112	CompoundStatement		46:59:1055:1055	888873	1					
ANR	889113	ExpressionStatement	hold_reason_code = code	1362:3:29519:29542	888873	0	True				
ANR	889114	AssignmentExpression	hold_reason_code = code		888873	0		=			
ANR	889115	Identifier	hold_reason_code		888873	0					
ANR	889116	Identifier	code		888873	1					
ANR	889117	ExpressionStatement	hold_reason_subcode = subcode	1363:3:29547:29576	888873	1	True				
ANR	889118	AssignmentExpression	hold_reason_subcode = subcode		888873	0		=			
ANR	889119	Identifier	hold_reason_subcode		888873	0					
ANR	889120	Identifier	subcode		888873	1					
ANR	889121	ContinueStatement	continue ;	1364:3:29581:29589	888873	2	True				
ANR	889122	IfStatement	if ( lines . Length ( ) )		888873	9					
ANR	889123	Condition	lines . Length ( )	1367:5:29601:29614	888873	0	True				
ANR	889124	CallExpression	lines . Length ( )		888873	0					
ANR	889125	Callee	lines . Length		888873	0					
ANR	889126	MemberAccess	lines . Length		888873	0					
ANR	889127	Identifier	lines		888873	0					
ANR	889128	Identifier	Length		888873	1					
ANR	889129	ArgumentList			888873	1					
ANR	889130	ExpressionStatement	"lines += ""\\n"""	1367:21:29617:29630	888873	1	True				
ANR	889131	AssignmentExpression	"lines += ""\\n"""		888873	0		+=			
ANR	889132	Identifier	lines		888873	0					
ANR	889133	PrimaryExpression	"""\\n"""		888873	1					
ANR	889134	ExpressionStatement	lines += l	1368:2:29634:29644	888873	10	True				
ANR	889135	AssignmentExpression	lines += l		888873	0		+=			
ANR	889136	Identifier	lines		888873	0					
ANR	889137	Identifier	l		888873	1					
ANR	889138	ExpressionStatement	setErrorText ( lines . Value ( ) )	1371:1:29651:29678	888873	10	True				
ANR	889139	CallExpression	setErrorText ( lines . Value ( ) )		888873	0					
ANR	889140	Callee	setErrorText		888873	0					
ANR	889141	Identifier	setErrorText		888873	0					
ANR	889142	ArgumentList	lines . Value ( )		888873	1					
ANR	889143	Argument	lines . Value ( )		888873	0					
ANR	889144	CallExpression	lines . Value ( )		888873	0					
ANR	889145	Callee	lines . Value		888873	0					
ANR	889146	MemberAccess	lines . Value		888873	0					
ANR	889147	Identifier	lines		888873	0					
ANR	889148	Identifier	Value		888873	1					
ANR	889149	ArgumentList			888873	1					
ANR	889150	ReturnStatement	return 1 ;	1372:4:29684:29692	888873	11	True				
ANR	889151	PrimaryExpression	1		888873	0					
ANR	889152	ReturnType	int		888873	1					
ANR	889153	Identifier	RemoteErrorEvent :: readEvent		888873	2					
ANR	889154	ParameterList	FILE * file		888873	3					
ANR	889155	Parameter	FILE * file	1315:28:28446:28455	888873	0	True				
ANR	889156	ParameterType	FILE *		888873	0					
ANR	889157	Identifier	file		888873	1					
ANR	889158	CFGEntryNode	ENTRY		888873		True				
ANR	889159	CFGExitNode	EXIT		888873		True				
ANR	889160	Symbol	code		888873						
ANR	889161	Symbol	* daemon_name		888873						
ANR	889162	Symbol	line		888873						
ANR	889163	Symbol	* error_type		888873						
ANR	889164	Symbol	& subcode		888873						
ANR	889165	Symbol	strchr		888873						
ANR	889166	Symbol	subcode		888873						
ANR	889167	Symbol	execute_host		888873						
ANR	889168	Symbol	fgets		888873						
ANR	889169	Symbol	file		888873						
ANR	889170	Symbol	lines . Value		888873						
ANR	889171	Symbol	error_type		888873						
ANR	889172	Symbol	* execute_host		888873						
ANR	889173	Symbol	lines		888873						
ANR	889174	Symbol	strcmp		888873						
ANR	889175	Symbol	hold_reason_code		888873						
ANR	889176	Symbol	lines . Length		888873						
ANR	889177	Symbol	daemon_name		888873						
ANR	889178	Symbol	false		888873						
ANR	889179	Symbol	& filep		888873						
ANR	889180	Symbol	l		888873						
ANR	889181	Symbol	retval		888873						
ANR	889182	Symbol	critical_error		888873						
ANR	889183	Symbol	& code		888873						
ANR	889184	Symbol	fscanf		888873						
ANR	889185	Symbol	hold_reason_subcode		888873						
ANR	889186	Symbol	* l		888873						
ANR	889187	Symbol	sscanf		888873						
ANR	889188	Symbol	true		888873						
ANR	889189	Symbol	feof		888873						
ANR	889190	Symbol	filep		888873						
ANR	889191	Function	RemoteErrorEvent :: toClassAd	1375:0:29697:30256							
ANR	889192	FunctionDef	RemoteErrorEvent :: toClassAd ()		889191	0					
ANR	889193	CompoundStatement		1377:0:29740:30256	889191	0					
ANR	889194	IdentifierDeclStatement	ClassAd * myad = ULogEvent :: toClassAd ( ) ;	1378:1:29743:29781	889191	0	True				
ANR	889195	IdentifierDecl	* myad = ULogEvent :: toClassAd ( )		889191	0					
ANR	889196	IdentifierDeclType	ClassAd *		889191	0					
ANR	889197	Identifier	myad		889191	1					
ANR	889198	AssignmentExpression	* myad = ULogEvent :: toClassAd ( )		889191	2		=			
ANR	889199	Identifier	myad		889191	0					
ANR	889200	CallExpression	ULogEvent :: toClassAd ( )		889191	1					
ANR	889201	Callee	ULogEvent :: toClassAd		889191	0					
ANR	889202	Identifier	ULogEvent :: toClassAd		889191	0					
ANR	889203	ArgumentList			889191	1					
ANR	889204	IfStatement	if ( ! myad )		889191	1					
ANR	889205	Condition	! myad	1379:5:29788:29792	889191	0	True				
ANR	889206	UnaryOperationExpression	! myad		889191	0					
ANR	889207	UnaryOperator	!		889191	0					
ANR	889208	Identifier	myad		889191	1					
ANR	889209	ReturnStatement	return NULL ;	1379:13:29796:29807	889191	1	True				
ANR	889210	Identifier	NULL		889191	0					
ANR	889211	IfStatement	if ( * daemon_name )		889191	2					
ANR	889212	Condition	* daemon_name	1381:4:29814:29825	889191	0	True				
ANR	889213	UnaryOperationExpression	* daemon_name		889191	0					
ANR	889214	UnaryOperator	*		889191	0					
ANR	889215	Identifier	daemon_name		889191	1					
ANR	889216	CompoundStatement		5:18:87:87	889191	1					
ANR	889217	ExpressionStatement	"myad -> Assign ( ""Daemon"" , daemon_name )"	1382:2:29832:29866	889191	0	True				
ANR	889218	CallExpression	"myad -> Assign ( ""Daemon"" , daemon_name )"		889191	0					
ANR	889219	Callee	myad -> Assign		889191	0					
ANR	889220	PtrMemberAccess	myad -> Assign		889191	0					
ANR	889221	Identifier	myad		889191	0					
ANR	889222	Identifier	Assign		889191	1					
ANR	889223	ArgumentList	"""Daemon"""		889191	1					
ANR	889224	Argument	"""Daemon"""		889191	0					
ANR	889225	PrimaryExpression	"""Daemon"""		889191	0					
ANR	889226	Argument	daemon_name		889191	1					
ANR	889227	Identifier	daemon_name		889191	0					
ANR	889228	IfStatement	if ( * execute_host )		889191	3					
ANR	889229	Condition	* execute_host	1384:4:29875:29887	889191	0	True				
ANR	889230	UnaryOperationExpression	* execute_host		889191	0					
ANR	889231	UnaryOperator	*		889191	0					
ANR	889232	Identifier	execute_host		889191	1					
ANR	889233	CompoundStatement		8:19:149:149	889191	1					
ANR	889234	ExpressionStatement	"myad -> Assign ( ""ExecuteHost"" , execute_host )"	1385:2:29894:29934	889191	0	True				
ANR	889235	CallExpression	"myad -> Assign ( ""ExecuteHost"" , execute_host )"		889191	0					
ANR	889236	Callee	myad -> Assign		889191	0					
ANR	889237	PtrMemberAccess	myad -> Assign		889191	0					
ANR	889238	Identifier	myad		889191	0					
ANR	889239	Identifier	Assign		889191	1					
ANR	889240	ArgumentList	"""ExecuteHost"""		889191	1					
ANR	889241	Argument	"""ExecuteHost"""		889191	0					
ANR	889242	PrimaryExpression	"""ExecuteHost"""		889191	0					
ANR	889243	Argument	execute_host		889191	1					
ANR	889244	Identifier	execute_host		889191	0					
ANR	889245	IfStatement	if ( error_str )		889191	4					
ANR	889246	Condition	error_str	1387:4:29943:29951	889191	0	True				
ANR	889247	Identifier	error_str		889191	0					
ANR	889248	CompoundStatement		11:15:213:213	889191	1					
ANR	889249	ExpressionStatement	"myad -> Assign ( ""ErrorMsg"" , error_str )"	1388:2:29958:29992	889191	0	True				
ANR	889250	CallExpression	"myad -> Assign ( ""ErrorMsg"" , error_str )"		889191	0					
ANR	889251	Callee	myad -> Assign		889191	0					
ANR	889252	PtrMemberAccess	myad -> Assign		889191	0					
ANR	889253	Identifier	myad		889191	0					
ANR	889254	Identifier	Assign		889191	1					
ANR	889255	ArgumentList	"""ErrorMsg"""		889191	1					
ANR	889256	Argument	"""ErrorMsg"""		889191	0					
ANR	889257	PrimaryExpression	"""ErrorMsg"""		889191	0					
ANR	889258	Argument	error_str		889191	1					
ANR	889259	Identifier	error_str		889191	0					
ANR	889260	IfStatement	if ( ! critical_error )		889191	5					
ANR	889261	Condition	! critical_error	1390:4:30001:30015	889191	0	True				
ANR	889262	UnaryOperationExpression	! critical_error		889191	0					
ANR	889263	UnaryOperator	!		889191	0					
ANR	889264	Identifier	critical_error		889191	1					
ANR	889265	CompoundStatement		14:21:277:277	889191	1					
ANR	889266	ExpressionStatement	"myad -> Assign ( ""CriticalError"" , ( int ) critical_error )"	1391:2:30040:30089	889191	0	True				
ANR	889267	CallExpression	"myad -> Assign ( ""CriticalError"" , ( int ) critical_error )"		889191	0					
ANR	889268	Callee	myad -> Assign		889191	0					
ANR	889269	PtrMemberAccess	myad -> Assign		889191	0					
ANR	889270	Identifier	myad		889191	0					
ANR	889271	Identifier	Assign		889191	1					
ANR	889272	ArgumentList	"""CriticalError"""		889191	1					
ANR	889273	Argument	"""CriticalError"""		889191	0					
ANR	889274	PrimaryExpression	"""CriticalError"""		889191	0					
ANR	889275	Argument	( int ) critical_error		889191	1					
ANR	889276	CastExpression	( int ) critical_error		889191	0					
ANR	889277	CastTarget	int		889191	0					
ANR	889278	Identifier	critical_error		889191	1					
ANR	889279	IfStatement	if ( hold_reason_code )		889191	6					
ANR	889280	Condition	hold_reason_code	1393:4:30098:30113	889191	0	True				
ANR	889281	Identifier	hold_reason_code		889191	0					
ANR	889282	CompoundStatement		17:22:375:375	889191	1					
ANR	889283	ExpressionStatement	"myad -> Assign ( ATTR_HOLD_REASON_CODE , hold_reason_code )"	1394:2:30120:30173	889191	0	True				
ANR	889284	CallExpression	"myad -> Assign ( ATTR_HOLD_REASON_CODE , hold_reason_code )"		889191	0					
ANR	889285	Callee	myad -> Assign		889191	0					
ANR	889286	PtrMemberAccess	myad -> Assign		889191	0					
ANR	889287	Identifier	myad		889191	0					
ANR	889288	Identifier	Assign		889191	1					
ANR	889289	ArgumentList	ATTR_HOLD_REASON_CODE		889191	1					
ANR	889290	Argument	ATTR_HOLD_REASON_CODE		889191	0					
ANR	889291	Identifier	ATTR_HOLD_REASON_CODE		889191	0					
ANR	889292	Argument	hold_reason_code		889191	1					
ANR	889293	Identifier	hold_reason_code		889191	0					
ANR	889294	ExpressionStatement	"myad -> Assign ( ATTR_HOLD_REASON_SUBCODE , hold_reason_subcode )"	1395:2:30177:30236	889191	1	True				
ANR	889295	CallExpression	"myad -> Assign ( ATTR_HOLD_REASON_SUBCODE , hold_reason_subcode )"		889191	0					
ANR	889296	Callee	myad -> Assign		889191	0					
ANR	889297	PtrMemberAccess	myad -> Assign		889191	0					
ANR	889298	Identifier	myad		889191	0					
ANR	889299	Identifier	Assign		889191	1					
ANR	889300	ArgumentList	ATTR_HOLD_REASON_SUBCODE		889191	1					
ANR	889301	Argument	ATTR_HOLD_REASON_SUBCODE		889191	0					
ANR	889302	Identifier	ATTR_HOLD_REASON_SUBCODE		889191	0					
ANR	889303	Argument	hold_reason_subcode		889191	1					
ANR	889304	Identifier	hold_reason_subcode		889191	0					
ANR	889305	ReturnStatement	return myad ;	1398:1:30243:30254	889191	7	True				
ANR	889306	Identifier	myad		889191	0					
ANR	889307	ReturnType	ClassAd *		889191	1					
ANR	889308	Identifier	RemoteErrorEvent :: toClassAd		889191	2					
ANR	889309	ParameterList			889191	3					
ANR	889310	CFGEntryNode	ENTRY		889191		True				
ANR	889311	CFGExitNode	EXIT		889191		True				
ANR	889312	Symbol	hold_reason_code		889191						
ANR	889313	Symbol	ATTR_HOLD_REASON_SUBCODE		889191						
ANR	889314	Symbol	NULL		889191						
ANR	889315	Symbol	* daemon_name		889191						
ANR	889316	Symbol	daemon_name		889191						
ANR	889317	Symbol	ULogEvent :: toClassAd		889191						
ANR	889318	Symbol	execute_host		889191						
ANR	889319	Symbol	critical_error		889191						
ANR	889320	Symbol	ATTR_HOLD_REASON_CODE		889191						
ANR	889321	Symbol	error_str		889191						
ANR	889322	Symbol	hold_reason_subcode		889191						
ANR	889323	Symbol	* execute_host		889191						
ANR	889324	Symbol	myad		889191						
ANR	889325	Function	RemoteErrorEvent :: initFromClassAd	1401:0:30259:30944							
ANR	889326	FunctionDef	RemoteErrorEvent :: initFromClassAd (ClassAd * ad)		889325	0					
ANR	889327	CompoundStatement		1403:0:30311:30944	889325	0					
ANR	889328	ExpressionStatement	ULogEvent :: initFromClassAd ( ad )	1404:1:30314:30344	889325	0	True				
ANR	889329	CallExpression	ULogEvent :: initFromClassAd ( ad )		889325	0					
ANR	889330	Callee	ULogEvent :: initFromClassAd		889325	0					
ANR	889331	Identifier	ULogEvent :: initFromClassAd		889325	0					
ANR	889332	ArgumentList	ad		889325	1					
ANR	889333	Argument	ad		889325	0					
ANR	889334	Identifier	ad		889325	0					
ANR	889335	IdentifierDeclStatement	char * buf ;	1405:1:30347:30356	889325	1	True				
ANR	889336	IdentifierDecl	* buf		889325	0					
ANR	889337	IdentifierDeclType	char *		889325	0					
ANR	889338	Identifier	buf		889325	1					
ANR	889339	IdentifierDeclStatement	int crit_err = 0 ;	1406:1:30359:30375	889325	2	True				
ANR	889340	IdentifierDecl	crit_err = 0		889325	0					
ANR	889341	IdentifierDeclType	int		889325	0					
ANR	889342	Identifier	crit_err		889325	1					
ANR	889343	AssignmentExpression	crit_err = 0		889325	2		=			
ANR	889344	Identifier	crit_err		889325	0					
ANR	889345	PrimaryExpression	0		889325	1					
ANR	889346	IfStatement	if ( ! ad )		889325	3					
ANR	889347	Condition	! ad	1408:5:30383:30385	889325	0	True				
ANR	889348	UnaryOperationExpression	! ad		889325	0					
ANR	889349	UnaryOperator	!		889325	0					
ANR	889350	Identifier	ad		889325	1					
ANR	889351	ReturnStatement	return ;	1408:11:30389:30395	889325	1	True				
ANR	889352	IfStatement	"if ( ad -> LookupString ( ""Daemon"" , daemon_name , sizeof ( daemon_name ) ) )"		889325	4					
ANR	889353	Condition	"ad -> LookupString ( ""Daemon"" , daemon_name , sizeof ( daemon_name ) )"	1410:5:30403:30462	889325	0	True				
ANR	889354	CallExpression	"ad -> LookupString ( ""Daemon"" , daemon_name , sizeof ( daemon_name ) )"		889325	0					
ANR	889355	Callee	ad -> LookupString		889325	0					
ANR	889356	PtrMemberAccess	ad -> LookupString		889325	0					
ANR	889357	Identifier	ad		889325	0					
ANR	889358	Identifier	LookupString		889325	1					
ANR	889359	ArgumentList	"""Daemon"""		889325	1					
ANR	889360	Argument	"""Daemon"""		889325	0					
ANR	889361	PrimaryExpression	"""Daemon"""		889325	0					
ANR	889362	Argument	daemon_name		889325	1					
ANR	889363	Identifier	daemon_name		889325	0					
ANR	889364	Argument	sizeof ( daemon_name )		889325	2					
ANR	889365	SizeofExpression	sizeof ( daemon_name )		889325	0					
ANR	889366	Sizeof	sizeof		889325	0					
ANR	889367	SizeofOperand	daemon_name		889325	1					
ANR	889368	CompoundStatement		8:68:154:154	889325	1					
ANR	889369	ExpressionStatement	daemon_name [ sizeof ( daemon_name ) - 1 ] = '\\0'	1411:2:30470:30511	889325	0	True				
ANR	889370	AssignmentExpression	daemon_name [ sizeof ( daemon_name ) - 1 ] = '\\0'		889325	0		=			
ANR	889371	ArrayIndexing	daemon_name [ sizeof ( daemon_name ) - 1 ]		889325	0					
ANR	889372	Identifier	daemon_name		889325	0					
ANR	889373	AdditiveExpression	sizeof ( daemon_name ) - 1		889325	1		-			
ANR	889374	SizeofExpression	sizeof ( daemon_name )		889325	0					
ANR	889375	Sizeof	sizeof		889325	0					
ANR	889376	SizeofOperand	daemon_name		889325	1					
ANR	889377	PrimaryExpression	1		889325	1					
ANR	889378	PrimaryExpression	'\\0'		889325	1					
ANR	889379	IfStatement	"if ( ad -> LookupString ( ""ExecuteHost"" , execute_host , sizeof ( execute_host ) ) )"		889325	5					
ANR	889380	Condition	"ad -> LookupString ( ""ExecuteHost"" , execute_host , sizeof ( execute_host ) )"	1413:5:30521:30587	889325	0	True				
ANR	889381	CallExpression	"ad -> LookupString ( ""ExecuteHost"" , execute_host , sizeof ( execute_host ) )"		889325	0					
ANR	889382	Callee	ad -> LookupString		889325	0					
ANR	889383	PtrMemberAccess	ad -> LookupString		889325	0					
ANR	889384	Identifier	ad		889325	0					
ANR	889385	Identifier	LookupString		889325	1					
ANR	889386	ArgumentList	"""ExecuteHost"""		889325	1					
ANR	889387	Argument	"""ExecuteHost"""		889325	0					
ANR	889388	PrimaryExpression	"""ExecuteHost"""		889325	0					
ANR	889389	Argument	execute_host		889325	1					
ANR	889390	Identifier	execute_host		889325	0					
ANR	889391	Argument	sizeof ( execute_host )		889325	2					
ANR	889392	SizeofExpression	sizeof ( execute_host )		889325	0					
ANR	889393	Sizeof	sizeof		889325	0					
ANR	889394	SizeofOperand	execute_host		889325	1					
ANR	889395	CompoundStatement		11:75:279:279	889325	1					
ANR	889396	ExpressionStatement	execute_host [ sizeof ( execute_host ) - 1 ] = '\\0'	1414:2:30595:30638	889325	0	True				
ANR	889397	AssignmentExpression	execute_host [ sizeof ( execute_host ) - 1 ] = '\\0'		889325	0		=			
ANR	889398	ArrayIndexing	execute_host [ sizeof ( execute_host ) - 1 ]		889325	0					
ANR	889399	Identifier	execute_host		889325	0					
ANR	889400	AdditiveExpression	sizeof ( execute_host ) - 1		889325	1		-			
ANR	889401	SizeofExpression	sizeof ( execute_host )		889325	0					
ANR	889402	Sizeof	sizeof		889325	0					
ANR	889403	SizeofOperand	execute_host		889325	1					
ANR	889404	PrimaryExpression	1		889325	1					
ANR	889405	PrimaryExpression	'\\0'		889325	1					
ANR	889406	IfStatement	"if ( ad -> LookupString ( ""ErrorMsg"" , & buf ) )"		889325	6					
ANR	889407	Condition	"ad -> LookupString ( ""ErrorMsg"" , & buf )"	1416:5:30648:30681	889325	0	True				
ANR	889408	CallExpression	"ad -> LookupString ( ""ErrorMsg"" , & buf )"		889325	0					
ANR	889409	Callee	ad -> LookupString		889325	0					
ANR	889410	PtrMemberAccess	ad -> LookupString		889325	0					
ANR	889411	Identifier	ad		889325	0					
ANR	889412	Identifier	LookupString		889325	1					
ANR	889413	ArgumentList	"""ErrorMsg"""		889325	1					
ANR	889414	Argument	"""ErrorMsg"""		889325	0					
ANR	889415	PrimaryExpression	"""ErrorMsg"""		889325	0					
ANR	889416	Argument	& buf		889325	1					
ANR	889417	UnaryOperationExpression	& buf		889325	0					
ANR	889418	UnaryOperator	&		889325	0					
ANR	889419	Identifier	buf		889325	1					
ANR	889420	CompoundStatement		14:42:373:373	889325	1					
ANR	889421	ExpressionStatement	setErrorText ( buf )	1417:2:30689:30706	889325	0	True				
ANR	889422	CallExpression	setErrorText ( buf )		889325	0					
ANR	889423	Callee	setErrorText		889325	0					
ANR	889424	Identifier	setErrorText		889325	0					
ANR	889425	ArgumentList	buf		889325	1					
ANR	889426	Argument	buf		889325	0					
ANR	889427	Identifier	buf		889325	0					
ANR	889428	ExpressionStatement	free ( buf )	1418:2:30710:30719	889325	1	True				
ANR	889429	CallExpression	free ( buf )		889325	0					
ANR	889430	Callee	free		889325	0					
ANR	889431	Identifier	free		889325	0					
ANR	889432	ArgumentList	buf		889325	1					
ANR	889433	Argument	buf		889325	0					
ANR	889434	Identifier	buf		889325	0					
ANR	889435	IfStatement	"if ( ad -> LookupInteger ( ""CriticalError"" , crit_err ) )"		889325	7					
ANR	889436	Condition	"ad -> LookupInteger ( ""CriticalError"" , crit_err )"	1420:5:30729:30771	889325	0	True				
ANR	889437	CallExpression	"ad -> LookupInteger ( ""CriticalError"" , crit_err )"		889325	0					
ANR	889438	Callee	ad -> LookupInteger		889325	0					
ANR	889439	PtrMemberAccess	ad -> LookupInteger		889325	0					
ANR	889440	Identifier	ad		889325	0					
ANR	889441	Identifier	LookupInteger		889325	1					
ANR	889442	ArgumentList	"""CriticalError"""		889325	1					
ANR	889443	Argument	"""CriticalError"""		889325	0					
ANR	889444	PrimaryExpression	"""CriticalError"""		889325	0					
ANR	889445	Argument	crit_err		889325	1					
ANR	889446	Identifier	crit_err		889325	0					
ANR	889447	CompoundStatement		18:51:463:463	889325	1					
ANR	889448	ExpressionStatement	critical_error = ( crit_err != 0 )	1421:2:30779:30811	889325	0	True				
ANR	889449	AssignmentExpression	critical_error = ( crit_err != 0 )		889325	0		=			
ANR	889450	Identifier	critical_error		889325	0					
ANR	889451	EqualityExpression	crit_err != 0		889325	1		!=			
ANR	889452	Identifier	crit_err		889325	0					
ANR	889453	PrimaryExpression	0		889325	1					
ANR	889454	ExpressionStatement	"ad -> LookupInteger ( ATTR_HOLD_REASON_CODE , hold_reason_code )"	1423:1:30817:30875	889325	8	True				
ANR	889455	CallExpression	"ad -> LookupInteger ( ATTR_HOLD_REASON_CODE , hold_reason_code )"		889325	0					
ANR	889456	Callee	ad -> LookupInteger		889325	0					
ANR	889457	PtrMemberAccess	ad -> LookupInteger		889325	0					
ANR	889458	Identifier	ad		889325	0					
ANR	889459	Identifier	LookupInteger		889325	1					
ANR	889460	ArgumentList	ATTR_HOLD_REASON_CODE		889325	1					
ANR	889461	Argument	ATTR_HOLD_REASON_CODE		889325	0					
ANR	889462	Identifier	ATTR_HOLD_REASON_CODE		889325	0					
ANR	889463	Argument	hold_reason_code		889325	1					
ANR	889464	Identifier	hold_reason_code		889325	0					
ANR	889465	ExpressionStatement	"ad -> LookupInteger ( ATTR_HOLD_REASON_SUBCODE , hold_reason_subcode )"	1424:1:30878:30942	889325	9	True				
ANR	889466	CallExpression	"ad -> LookupInteger ( ATTR_HOLD_REASON_SUBCODE , hold_reason_subcode )"		889325	0					
ANR	889467	Callee	ad -> LookupInteger		889325	0					
ANR	889468	PtrMemberAccess	ad -> LookupInteger		889325	0					
ANR	889469	Identifier	ad		889325	0					
ANR	889470	Identifier	LookupInteger		889325	1					
ANR	889471	ArgumentList	ATTR_HOLD_REASON_SUBCODE		889325	1					
ANR	889472	Argument	ATTR_HOLD_REASON_SUBCODE		889325	0					
ANR	889473	Identifier	ATTR_HOLD_REASON_SUBCODE		889325	0					
ANR	889474	Argument	hold_reason_subcode		889325	1					
ANR	889475	Identifier	hold_reason_subcode		889325	0					
ANR	889476	ReturnType	void		889325	1					
ANR	889477	Identifier	RemoteErrorEvent :: initFromClassAd		889325	2					
ANR	889478	ParameterList	ClassAd * ad		889325	3					
ANR	889479	Parameter	ClassAd * ad	1402:34:30298:30308	889325	0	True				
ANR	889480	ParameterType	ClassAd *		889325	0					
ANR	889481	Identifier	ad		889325	1					
ANR	889482	CFGEntryNode	ENTRY		889325		True				
ANR	889483	CFGExitNode	EXIT		889325		True				
ANR	889484	Symbol	ad -> LookupString		889325						
ANR	889485	Symbol	hold_reason_code		889325						
ANR	889486	Symbol	ATTR_HOLD_REASON_SUBCODE		889325						
ANR	889487	Symbol	ad		889325						
ANR	889488	Symbol	* daemon_name		889325						
ANR	889489	Symbol	daemon_name		889325						
ANR	889490	Symbol	* ad		889325						
ANR	889491	Symbol	execute_host		889325						
ANR	889492	Symbol	critical_error		889325						
ANR	889493	Symbol	ATTR_HOLD_REASON_CODE		889325						
ANR	889494	Symbol	buf		889325						
ANR	889495	Symbol	hold_reason_subcode		889325						
ANR	889496	Symbol	crit_err		889325						
ANR	889497	Symbol	* execute_host		889325						
ANR	889498	Symbol	ad -> LookupInteger		889325						
ANR	889499	Symbol	& buf		889325						
ANR	889500	Function	RemoteErrorEvent :: setCriticalError	1427:0:30947:31018							
ANR	889501	FunctionDef	RemoteErrorEvent :: setCriticalError (bool f)		889500	0					
ANR	889502	CompoundStatement		1429:0:30995:31018	889500	0					
ANR	889503	ExpressionStatement	critical_error = f	1430:1:30998:31016	889500	0	True				
ANR	889504	AssignmentExpression	critical_error = f		889500	0		=			
ANR	889505	Identifier	critical_error		889500	0					
ANR	889506	Identifier	f		889500	1					
ANR	889507	ReturnType	void		889500	1					
ANR	889508	Identifier	RemoteErrorEvent :: setCriticalError		889500	2					
ANR	889509	ParameterList	bool f		889500	3					
ANR	889510	Parameter	bool f	1428:35:30987:30992	889500	0	True				
ANR	889511	ParameterType	bool		889500	0					
ANR	889512	Identifier	f		889500	1					
ANR	889513	CFGEntryNode	ENTRY		889500		True				
ANR	889514	CFGExitNode	EXIT		889500		True				
ANR	889515	Symbol	f		889500						
ANR	889516	Symbol	critical_error		889500						
ANR	889517	Function	RemoteErrorEvent :: setErrorText	1433:0:31021:31139							
ANR	889518	FunctionDef	RemoteErrorEvent :: setErrorText (char const * str)		889517	0					
ANR	889519	CompoundStatement		1435:0:31074:31139	889517	0					
ANR	889520	IdentifierDeclStatement	char * s = strnewp ( str ) ;	1436:1:31077:31099	889517	0	True				
ANR	889521	IdentifierDecl	* s = strnewp ( str )		889517	0					
ANR	889522	IdentifierDeclType	char *		889517	0					
ANR	889523	Identifier	s		889517	1					
ANR	889524	AssignmentExpression	* s = strnewp ( str )		889517	2		=			
ANR	889525	Identifier	s		889517	0					
ANR	889526	CallExpression	strnewp ( str )		889517	1					
ANR	889527	Callee	strnewp		889517	0					
ANR	889528	Identifier	strnewp		889517	0					
ANR	889529	ArgumentList	str		889517	1					
ANR	889530	Argument	str		889517	0					
ANR	889531	Identifier	str		889517	0					
ANR	889532	Statement	delete	1437:1:31102:31107	889517	1	True				
ANR	889533	Statement	[	1437:8:31109:31109	889517	2	True				
ANR	889534	Statement	]	1437:9:31110:31110	889517	3	True				
ANR	889535	ExpressionStatement	error_str	1437:11:31112:31121	889517	4	True				
ANR	889536	Identifier	error_str		889517	0					
ANR	889537	ExpressionStatement	error_str = s	1438:1:31124:31137	889517	5	True				
ANR	889538	AssignmentExpression	error_str = s		889517	0		=			
ANR	889539	Identifier	error_str		889517	0					
ANR	889540	Identifier	s		889517	1					
ANR	889541	ReturnType	void		889517	1					
ANR	889542	Identifier	RemoteErrorEvent :: setErrorText		889517	2					
ANR	889543	ParameterList	char const * str		889517	3					
ANR	889544	Parameter	char const * str	1434:31:31057:31071	889517	0	True				
ANR	889545	ParameterType	char const *		889517	0					
ANR	889546	Identifier	str		889517	1					
ANR	889547	CFGEntryNode	ENTRY		889517		True				
ANR	889548	CFGExitNode	EXIT		889517		True				
ANR	889549	Symbol	str		889517						
ANR	889550	Symbol	s		889517						
ANR	889551	Symbol	error_str		889517						
ANR	889552	Symbol	strnewp		889517						
ANR	889553	Function	RemoteErrorEvent :: setDaemonName	1441:0:31142:31309							
ANR	889554	FunctionDef	RemoteErrorEvent :: setDaemonName (char const * str)		889553	0					
ANR	889555	CompoundStatement		1443:0:31196:31309	889553	0					
ANR	889556	IfStatement	if ( ! str )		889553	0					
ANR	889557	Condition	! str	1444:4:31202:31205	889553	0	True				
ANR	889558	UnaryOperationExpression	! str		889553	0					
ANR	889559	UnaryOperator	!		889553	0					
ANR	889560	Identifier	str		889553	1					
ANR	889561	ExpressionStatement	"str = """""	1444:10:31208:31216	889553	1	True				
ANR	889562	AssignmentExpression	"str = """""		889553	0		=			
ANR	889563	Identifier	str		889553	0					
ANR	889564	PrimaryExpression	""""""		889553	1					
ANR	889565	ExpressionStatement	"strncpy ( daemon_name , str , sizeof ( daemon_name ) )"	1445:1:31219:31263	889553	1	True				
ANR	889566	CallExpression	"strncpy ( daemon_name , str , sizeof ( daemon_name ) )"		889553	0					
ANR	889567	Callee	strncpy		889553	0					
ANR	889568	Identifier	strncpy		889553	0					
ANR	889569	ArgumentList	daemon_name		889553	1					
ANR	889570	Argument	daemon_name		889553	0					
ANR	889571	Identifier	daemon_name		889553	0					
ANR	889572	Argument	str		889553	1					
ANR	889573	Identifier	str		889553	0					
ANR	889574	Argument	sizeof ( daemon_name )		889553	2					
ANR	889575	SizeofExpression	sizeof ( daemon_name )		889553	0					
ANR	889576	Sizeof	sizeof		889553	0					
ANR	889577	SizeofOperand	daemon_name		889553	1					
ANR	889578	ExpressionStatement	daemon_name [ sizeof ( daemon_name ) - 1 ] = '\\0'	1446:1:31266:31307	889553	2	True				
ANR	889579	AssignmentExpression	daemon_name [ sizeof ( daemon_name ) - 1 ] = '\\0'		889553	0		=			
ANR	889580	ArrayIndexing	daemon_name [ sizeof ( daemon_name ) - 1 ]		889553	0					
ANR	889581	Identifier	daemon_name		889553	0					
ANR	889582	AdditiveExpression	sizeof ( daemon_name ) - 1		889553	1		-			
ANR	889583	SizeofExpression	sizeof ( daemon_name )		889553	0					
ANR	889584	Sizeof	sizeof		889553	0					
ANR	889585	SizeofOperand	daemon_name		889553	1					
ANR	889586	PrimaryExpression	1		889553	1					
ANR	889587	PrimaryExpression	'\\0'		889553	1					
ANR	889588	ReturnType	void		889553	1					
ANR	889589	Identifier	RemoteErrorEvent :: setDaemonName		889553	2					
ANR	889590	ParameterList	char const * str		889553	3					
ANR	889591	Parameter	char const * str	1442:32:31179:31193	889553	0	True				
ANR	889592	ParameterType	char const *		889553	0					
ANR	889593	Identifier	str		889553	1					
ANR	889594	CFGEntryNode	ENTRY		889553		True				
ANR	889595	CFGExitNode	EXIT		889553		True				
ANR	889596	Symbol	str		889553						
ANR	889597	Symbol	* daemon_name		889553						
ANR	889598	Symbol	daemon_name		889553						
ANR	889599	Function	RemoteErrorEvent :: setExecuteHost	1449:0:31312:31484							
ANR	889600	FunctionDef	RemoteErrorEvent :: setExecuteHost (char const * str)		889599	0					
ANR	889601	CompoundStatement		1451:0:31367:31484	889599	0					
ANR	889602	IfStatement	if ( ! str )		889599	0					
ANR	889603	Condition	! str	1452:4:31373:31376	889599	0	True				
ANR	889604	UnaryOperationExpression	! str		889599	0					
ANR	889605	UnaryOperator	!		889599	0					
ANR	889606	Identifier	str		889599	1					
ANR	889607	ExpressionStatement	"str = """""	1452:10:31379:31387	889599	1	True				
ANR	889608	AssignmentExpression	"str = """""		889599	0		=			
ANR	889609	Identifier	str		889599	0					
ANR	889610	PrimaryExpression	""""""		889599	1					
ANR	889611	ExpressionStatement	"strncpy ( execute_host , str , sizeof ( execute_host ) )"	1453:1:31390:31436	889599	1	True				
ANR	889612	CallExpression	"strncpy ( execute_host , str , sizeof ( execute_host ) )"		889599	0					
ANR	889613	Callee	strncpy		889599	0					
ANR	889614	Identifier	strncpy		889599	0					
ANR	889615	ArgumentList	execute_host		889599	1					
ANR	889616	Argument	execute_host		889599	0					
ANR	889617	Identifier	execute_host		889599	0					
ANR	889618	Argument	str		889599	1					
ANR	889619	Identifier	str		889599	0					
ANR	889620	Argument	sizeof ( execute_host )		889599	2					
ANR	889621	SizeofExpression	sizeof ( execute_host )		889599	0					
ANR	889622	Sizeof	sizeof		889599	0					
ANR	889623	SizeofOperand	execute_host		889599	1					
ANR	889624	ExpressionStatement	execute_host [ sizeof ( execute_host ) - 1 ] = '\\0'	1454:1:31439:31482	889599	2	True				
ANR	889625	AssignmentExpression	execute_host [ sizeof ( execute_host ) - 1 ] = '\\0'		889599	0		=			
ANR	889626	ArrayIndexing	execute_host [ sizeof ( execute_host ) - 1 ]		889599	0					
ANR	889627	Identifier	execute_host		889599	0					
ANR	889628	AdditiveExpression	sizeof ( execute_host ) - 1		889599	1		-			
ANR	889629	SizeofExpression	sizeof ( execute_host )		889599	0					
ANR	889630	Sizeof	sizeof		889599	0					
ANR	889631	SizeofOperand	execute_host		889599	1					
ANR	889632	PrimaryExpression	1		889599	1					
ANR	889633	PrimaryExpression	'\\0'		889599	1					
ANR	889634	ReturnType	void		889599	1					
ANR	889635	Identifier	RemoteErrorEvent :: setExecuteHost		889599	2					
ANR	889636	ParameterList	char const * str		889599	3					
ANR	889637	Parameter	char const * str	1450:33:31350:31364	889599	0	True				
ANR	889638	ParameterType	char const *		889599	0					
ANR	889639	Identifier	str		889599	1					
ANR	889640	CFGEntryNode	ENTRY		889599		True				
ANR	889641	CFGExitNode	EXIT		889599		True				
ANR	889642	Symbol	str		889599						
ANR	889643	Symbol	* execute_host		889599						
ANR	889644	Symbol	execute_host		889599						
ANR	889645	Function	ExecuteEvent :: ExecuteEvent	1458:0:31519:31624							
ANR	889646	FunctionDef	ExecuteEvent :: ExecuteEvent ()		889645	0					
ANR	889647	CompoundStatement		1459:0:31552:31624	889645	0					
ANR	889648	ExpressionStatement	executeHost = NULL	1460:1:31555:31573	889645	0	True				
ANR	889649	AssignmentExpression	executeHost = NULL		889645	0		=			
ANR	889650	Identifier	executeHost		889645	0					
ANR	889651	Identifier	NULL		889645	1					
ANR	889652	ExpressionStatement	remoteName = NULL	1461:1:31576:31593	889645	1	True				
ANR	889653	AssignmentExpression	remoteName = NULL		889645	0		=			
ANR	889654	Identifier	remoteName		889645	0					
ANR	889655	Identifier	NULL		889645	1					
ANR	889656	ExpressionStatement	eventNumber = ULOG_EXECUTE	1462:1:31596:31622	889645	2	True				
ANR	889657	AssignmentExpression	eventNumber = ULOG_EXECUTE		889645	0		=			
ANR	889658	Identifier	eventNumber		889645	0					
ANR	889659	Identifier	ULOG_EXECUTE		889645	1					
ANR	889660	Identifier	ExecuteEvent :: ExecuteEvent		889645	1					
ANR	889661	ParameterList			889645	2					
ANR	889662	CFGEntryNode	ENTRY		889645		True				
ANR	889663	CFGExitNode	EXIT		889645		True				
ANR	889664	Symbol	NULL		889645						
ANR	889665	Symbol	executeHost		889645						
ANR	889666	Symbol	eventNumber		889645						
ANR	889667	Symbol	ULOG_EXECUTE		889645						
ANR	889668	Symbol	remoteName		889645						
ANR	889669	Function	ExecuteEvent :: ~ExecuteEvent	1465:0:31627:31757							
ANR	889670	FunctionDef	ExecuteEvent :: ~ExecuteEvent ()		889669	0					
ANR	889671	CompoundStatement		1466:0:31661:31757	889669	0					
ANR	889672	IfStatement	if ( executeHost )		889669	0					
ANR	889673	Condition	executeHost	1467:5:31668:31678	889669	0	True				
ANR	889674	Identifier	executeHost		889669	0					
ANR	889675	CompoundStatement		2:19:20:20	889669	1					
ANR	889676	Statement	delete	1468:2:31686:31691	889669	0	True				
ANR	889677	Statement	[	1468:8:31692:31692	889669	1	True				
ANR	889678	Statement	]	1468:9:31693:31693	889669	2	True				
ANR	889679	ExpressionStatement	executeHost	1468:11:31695:31706	889669	3	True				
ANR	889680	Identifier	executeHost		889669	0					
ANR	889681	IfStatement	if ( remoteName )		889669	1					
ANR	889682	Condition	remoteName	1470:5:31716:31725	889669	0	True				
ANR	889683	Identifier	remoteName		889669	0					
ANR	889684	CompoundStatement		5:18:67:67	889669	1					
ANR	889685	Statement	delete	1471:2:31733:31738	889669	0	True				
ANR	889686	Statement	[	1471:8:31739:31739	889669	1	True				
ANR	889687	Statement	]	1471:9:31740:31740	889669	2	True				
ANR	889688	ExpressionStatement	remoteName	1471:11:31742:31752	889669	3	True				
ANR	889689	Identifier	remoteName		889669	0					
ANR	889690	Identifier	ExecuteEvent :: ~ExecuteEvent		889669	1					
ANR	889691	ParameterList			889669	2					
ANR	889692	CFGEntryNode	ENTRY		889669		True				
ANR	889693	CFGExitNode	EXIT		889669		True				
ANR	889694	Symbol	executeHost		889669						
ANR	889695	Symbol	remoteName		889669						
ANR	889696	Function	ExecuteEvent :: setExecuteHost	1475:0:31760:31968							
ANR	889697	FunctionDef	ExecuteEvent :: setExecuteHost (char const * addr)		889696	0					
ANR	889698	CompoundStatement		1477:0:31812:31968	889696	0					
ANR	889699	IfStatement	if ( executeHost )		889696	0					
ANR	889700	Condition	executeHost	1478:5:31819:31829	889696	0	True				
ANR	889701	Identifier	executeHost		889696	0					
ANR	889702	CompoundStatement		2:19:20:20	889696	1					
ANR	889703	Statement	delete	1479:2:31837:31842	889696	0	True				
ANR	889704	Statement	[	1479:8:31843:31843	889696	1	True				
ANR	889705	Statement	]	1479:9:31844:31844	889696	2	True				
ANR	889706	ExpressionStatement	executeHost	1479:11:31846:31857	889696	3	True				
ANR	889707	Identifier	executeHost		889696	0					
ANR	889708	IfStatement	if ( addr )		889696	1					
ANR	889709	Condition	addr	1481:5:31867:31870	889696	0	True				
ANR	889710	Identifier	addr		889696	0					
ANR	889711	CompoundStatement		5:12:61:61	889696	1					
ANR	889712	ExpressionStatement	executeHost = strnewp ( addr )	1482:2:31878:31905	889696	0	True				
ANR	889713	AssignmentExpression	executeHost = strnewp ( addr )		889696	0		=			
ANR	889714	Identifier	executeHost		889696	0					
ANR	889715	CallExpression	strnewp ( addr )		889696	1					
ANR	889716	Callee	strnewp		889696	0					
ANR	889717	Identifier	strnewp		889696	0					
ANR	889718	ArgumentList	addr		889696	1					
ANR	889719	Argument	addr		889696	0					
ANR	889720	Identifier	addr		889696	0					
ANR	889721	ExpressionStatement	ASSERT ( executeHost )	1483:2:31909:31930	889696	1	True				
ANR	889722	CallExpression	ASSERT ( executeHost )		889696	0					
ANR	889723	Callee	ASSERT		889696	0					
ANR	889724	Identifier	ASSERT		889696	0					
ANR	889725	ArgumentList	executeHost		889696	1					
ANR	889726	Argument	executeHost		889696	0					
ANR	889727	Identifier	executeHost		889696	0					
ANR	889728	ElseStatement	else		889696	0					
ANR	889729	CompoundStatement		9:6:128:128	889696	0					
ANR	889730	ExpressionStatement	executeHost = NULL	1486:2:31945:31963	889696	0	True				
ANR	889731	AssignmentExpression	executeHost = NULL		889696	0		=			
ANR	889732	Identifier	executeHost		889696	0					
ANR	889733	Identifier	NULL		889696	1					
ANR	889734	ReturnType	void		889696	1					
ANR	889735	Identifier	ExecuteEvent :: setExecuteHost		889696	2					
ANR	889736	ParameterList	char const * addr		889696	3					
ANR	889737	Parameter	char const * addr	1476:29:31794:31809	889696	0	True				
ANR	889738	ParameterType	char const *		889696	0					
ANR	889739	Identifier	addr		889696	1					
ANR	889740	CFGEntryNode	ENTRY		889696		True				
ANR	889741	CFGExitNode	EXIT		889696		True				
ANR	889742	Symbol	NULL		889696						
ANR	889743	Symbol	executeHost		889696						
ANR	889744	Symbol	strnewp		889696						
ANR	889745	Symbol	addr		889696						
ANR	889746	Function	ExecuteEvent :: setRemoteName	1490:0:31971:32173							
ANR	889747	FunctionDef	ExecuteEvent :: setRemoteName (char const * name)		889746	0					
ANR	889748	CompoundStatement		1491:0:32022:32173	889746	0					
ANR	889749	IfStatement	if ( remoteName )		889746	0					
ANR	889750	Condition	remoteName	1492:5:32029:32038	889746	0	True				
ANR	889751	Identifier	remoteName		889746	0					
ANR	889752	CompoundStatement		2:18:19:19	889746	1					
ANR	889753	Statement	delete	1493:2:32046:32051	889746	0	True				
ANR	889754	Statement	[	1493:8:32052:32052	889746	1	True				
ANR	889755	Statement	]	1493:9:32053:32053	889746	2	True				
ANR	889756	ExpressionStatement	remoteName	1493:11:32055:32065	889746	3	True				
ANR	889757	Identifier	remoteName		889746	0					
ANR	889758	IfStatement	if ( name )		889746	1					
ANR	889759	Condition	name	1495:5:32075:32078	889746	0	True				
ANR	889760	Identifier	name		889746	0					
ANR	889761	CompoundStatement		5:12:59:59	889746	1					
ANR	889762	ExpressionStatement	remoteName = strnewp ( name )	1496:2:32086:32112	889746	0	True				
ANR	889763	AssignmentExpression	remoteName = strnewp ( name )		889746	0		=			
ANR	889764	Identifier	remoteName		889746	0					
ANR	889765	CallExpression	strnewp ( name )		889746	1					
ANR	889766	Callee	strnewp		889746	0					
ANR	889767	Identifier	strnewp		889746	0					
ANR	889768	ArgumentList	name		889746	1					
ANR	889769	Argument	name		889746	0					
ANR	889770	Identifier	name		889746	0					
ANR	889771	ExpressionStatement	ASSERT ( remoteName )	1497:2:32116:32136	889746	1	True				
ANR	889772	CallExpression	ASSERT ( remoteName )		889746	0					
ANR	889773	Callee	ASSERT		889746	0					
ANR	889774	Identifier	ASSERT		889746	0					
ANR	889775	ArgumentList	remoteName		889746	1					
ANR	889776	Argument	remoteName		889746	0					
ANR	889777	Identifier	remoteName		889746	0					
ANR	889778	ElseStatement	else		889746	0					
ANR	889779	CompoundStatement		9:6:124:124	889746	0					
ANR	889780	ExpressionStatement	remoteName = NULL	1500:2:32151:32168	889746	0	True				
ANR	889781	AssignmentExpression	remoteName = NULL		889746	0		=			
ANR	889782	Identifier	remoteName		889746	0					
ANR	889783	Identifier	NULL		889746	1					
ANR	889784	ReturnType	void		889746	1					
ANR	889785	Identifier	ExecuteEvent :: setRemoteName		889746	2					
ANR	889786	ParameterList	char const * name		889746	3					
ANR	889787	Parameter	char const * name	1490:33:32004:32019	889746	0	True				
ANR	889788	ParameterType	char const *		889746	0					
ANR	889789	Identifier	name		889746	1					
ANR	889790	CFGEntryNode	ENTRY		889746		True				
ANR	889791	CFGExitNode	EXIT		889746		True				
ANR	889792	Symbol	NULL		889746						
ANR	889793	Symbol	name		889746						
ANR	889794	Symbol	strnewp		889746						
ANR	889795	Symbol	remoteName		889746						
ANR	889796	Function	ExecuteEvent :: getExecuteHost	1504:0:32176:32391							
ANR	889797	FunctionDef	ExecuteEvent :: getExecuteHost ()		889796	0					
ANR	889798	CompoundStatement		1506:0:32220:32391	889796	0					
ANR	889799	IfStatement	if ( ! executeHost )		889796	0					
ANR	889800	Condition	! executeHost	1507:5:32227:32238	889796	0	True				
ANR	889801	UnaryOperationExpression	! executeHost		889796	0					
ANR	889802	UnaryOperator	!		889796	0					
ANR	889803	Identifier	executeHost		889796	1					
ANR	889804	CompoundStatement		2:20:21:21	889796	1					
ANR	889805	ExpressionStatement	"setExecuteHost ( """" )"	1510:2:32347:32365	889796	0	True				
ANR	889806	CallExpression	"setExecuteHost ( """" )"		889796	0					
ANR	889807	Callee	setExecuteHost		889796	0					
ANR	889808	Identifier	setExecuteHost		889796	0					
ANR	889809	ArgumentList	""""""		889796	1					
ANR	889810	Argument	""""""		889796	0					
ANR	889811	PrimaryExpression	""""""		889796	0					
ANR	889812	ReturnStatement	return executeHost ;	1512:1:32371:32389	889796	1	True				
ANR	889813	Identifier	executeHost		889796	0					
ANR	889814	ReturnType	char const *		889796	1					
ANR	889815	Identifier	ExecuteEvent :: getExecuteHost		889796	2					
ANR	889816	ParameterList			889796	3					
ANR	889817	CFGEntryNode	ENTRY		889796		True				
ANR	889818	CFGExitNode	EXIT		889796		True				
ANR	889819	Symbol	executeHost		889796						
ANR	889820	Function	ExecuteEvent :: writeEvent	1515:0:32394:34866							
ANR	889821	FunctionDef	ExecuteEvent :: writeEvent (FILE * file)		889820	0					
ANR	889822	CompoundStatement		1517:0:32436:34866	889820	0					
ANR	889823	IdentifierDeclStatement	struct hostent * hp ;	1518:1:32439:32457	889820	0	True				
ANR	889824	IdentifierDecl	* hp		889820	0					
ANR	889825	IdentifierDeclType	struct hostent *		889820	0					
ANR	889826	Identifier	hp		889820	1					
ANR	889827	IdentifierDeclStatement	unsigned long addr = - 1 ;	1519:1:32460:32483	889820	1	True				
ANR	889828	IdentifierDecl	addr = - 1		889820	0					
ANR	889829	IdentifierDeclType	unsigned long		889820	0					
ANR	889830	Identifier	addr		889820	1					
ANR	889831	AssignmentExpression	addr = - 1		889820	2		=			
ANR	889832	Identifier	addr		889820	0					
ANR	889833	UnaryOperationExpression	- 1		889820	1					
ANR	889834	UnaryOperator	-		889820	0					
ANR	889835	PrimaryExpression	1		889820	1					
ANR	889836	IdentifierDeclStatement	"ClassAd tmpCl1 , tmpCl2 , tmpCl3 ;"	1520:1:32486:32516	889820	2	True				
ANR	889837	IdentifierDecl	tmpCl1		889820	0					
ANR	889838	IdentifierDeclType	ClassAd		889820	0					
ANR	889839	Identifier	tmpCl1		889820	1					
ANR	889840	IdentifierDecl	tmpCl2		889820	1					
ANR	889841	IdentifierDeclType	ClassAd		889820	0					
ANR	889842	Identifier	tmpCl2		889820	1					
ANR	889843	IdentifierDecl	tmpCl3		889820	2					
ANR	889844	IdentifierDeclType	ClassAd		889820	0					
ANR	889845	Identifier	tmpCl3		889820	1					
ANR	889846	IdentifierDeclStatement	"MyString tmp = """" ;"	1522:1:32590:32607	889820	3	True				
ANR	889847	IdentifierDecl	"tmp = """""		889820	0					
ANR	889848	IdentifierDeclType	MyString		889820	0					
ANR	889849	Identifier	tmp		889820	1					
ANR	889850	AssignmentExpression	"tmp = """""		889820	2		=			
ANR	889851	Identifier	tmp		889820	0					
ANR	889852	PrimaryExpression	""""""		889820	1					
ANR	889853	IdentifierDeclStatement	int retval ;	1523:1:32610:32620	889820	4	True				
ANR	889854	IdentifierDecl	retval		889820	0					
ANR	889855	IdentifierDeclType	int		889820	0					
ANR	889856	Identifier	retval		889820	1					
ANR	889857	ExpressionStatement	scheddname = getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )	1528:1:32732:32784	889820	5	True				
ANR	889858	AssignmentExpression	scheddname = getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )		889820	0		=			
ANR	889859	Identifier	scheddname		889820	0					
ANR	889860	CallExpression	getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )		889820	1					
ANR	889861	Callee	getenv		889820	0					
ANR	889862	Identifier	getenv		889820	0					
ANR	889863	ArgumentList	EnvGetName ( ENV_SCHEDD_NAME )		889820	1					
ANR	889864	Argument	EnvGetName ( ENV_SCHEDD_NAME )		889820	0					
ANR	889865	CallExpression	EnvGetName ( ENV_SCHEDD_NAME )		889820	0					
ANR	889866	Callee	EnvGetName		889820	0					
ANR	889867	Identifier	EnvGetName		889820	0					
ANR	889868	ArgumentList	ENV_SCHEDD_NAME		889820	1					
ANR	889869	Argument	ENV_SCHEDD_NAME		889820	0					
ANR	889870	Identifier	ENV_SCHEDD_NAME		889820	0					
ANR	889871	IfStatement	if ( scheddname )		889820	6					
ANR	889872	Condition	scheddname	1530:4:32791:32800	889820	0	True				
ANR	889873	Identifier	scheddname		889820	0					
ANR	889874	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""scheddname = %s\\n"" , scheddname )"	1531:2:32805:32858	889820	1	True				
ANR	889875	CallExpression	"dprintf ( D_FULLDEBUG , ""scheddname = %s\\n"" , scheddname )"		889820	0					
ANR	889876	Callee	dprintf		889820	0					
ANR	889877	Identifier	dprintf		889820	0					
ANR	889878	ArgumentList	D_FULLDEBUG		889820	1					
ANR	889879	Argument	D_FULLDEBUG		889820	0					
ANR	889880	Identifier	D_FULLDEBUG		889820	0					
ANR	889881	Argument	"""scheddname = %s\\n"""		889820	1					
ANR	889882	PrimaryExpression	"""scheddname = %s\\n"""		889820	0					
ANR	889883	Argument	scheddname		889820	2					
ANR	889884	Identifier	scheddname		889820	0					
ANR	889885	ElseStatement	else		889820	0					
ANR	889886	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""scheddname is null\\n"" )"	1533:2:32868:32912	889820	0	True				
ANR	889887	CallExpression	"dprintf ( D_FULLDEBUG , ""scheddname is null\\n"" )"		889820	0					
ANR	889888	Callee	dprintf		889820	0					
ANR	889889	Identifier	dprintf		889820	0					
ANR	889890	ArgumentList	D_FULLDEBUG		889820	1					
ANR	889891	Argument	D_FULLDEBUG		889820	0					
ANR	889892	Identifier	D_FULLDEBUG		889820	0					
ANR	889893	Argument	"""scheddname is null\\n"""		889820	1					
ANR	889894	PrimaryExpression	"""scheddname is null\\n"""		889820	0					
ANR	889895	IfStatement	if ( ! executeHost )		889820	7					
ANR	889896	Condition	! executeHost	1535:5:32920:32931	889820	0	True				
ANR	889897	UnaryOperationExpression	! executeHost		889820	0					
ANR	889898	UnaryOperator	!		889820	0					
ANR	889899	Identifier	executeHost		889820	1					
ANR	889900	CompoundStatement		19:20:498:498	889820	1					
ANR	889901	ExpressionStatement	"setExecuteHost ( """" )"	1536:2:32939:32957	889820	0	True				
ANR	889902	CallExpression	"setExecuteHost ( """" )"		889820	0					
ANR	889903	Callee	setExecuteHost		889820	0					
ANR	889904	Identifier	setExecuteHost		889820	0					
ANR	889905	ArgumentList	""""""		889820	1					
ANR	889906	Argument	""""""		889820	0					
ANR	889907	PrimaryExpression	""""""		889820	0					
ANR	889908	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""executeHost = %s\\n"" , executeHost )"	1539:1:32964:33019	889820	8	True				
ANR	889909	CallExpression	"dprintf ( D_FULLDEBUG , ""executeHost = %s\\n"" , executeHost )"		889820	0					
ANR	889910	Callee	dprintf		889820	0					
ANR	889911	Identifier	dprintf		889820	0					
ANR	889912	ArgumentList	D_FULLDEBUG		889820	1					
ANR	889913	Argument	D_FULLDEBUG		889820	0					
ANR	889914	Identifier	D_FULLDEBUG		889820	0					
ANR	889915	Argument	"""executeHost = %s\\n"""		889820	1					
ANR	889916	PrimaryExpression	"""executeHost = %s\\n"""		889820	0					
ANR	889917	Argument	executeHost		889820	2					
ANR	889918	Identifier	executeHost		889820	0					
ANR	889919	IdentifierDeclStatement	"char * start = index ( executeHost , '<' ) ;"	1541:1:33023:33060	889820	9	True				
ANR	889920	IdentifierDecl	"* start = index ( executeHost , '<' )"		889820	0					
ANR	889921	IdentifierDeclType	char *		889820	0					
ANR	889922	Identifier	start		889820	1					
ANR	889923	AssignmentExpression	"* start = index ( executeHost , '<' )"		889820	2		=			
ANR	889924	Identifier	start		889820	0					
ANR	889925	CallExpression	"index ( executeHost , '<' )"		889820	1					
ANR	889926	Callee	index		889820	0					
ANR	889927	Identifier	index		889820	0					
ANR	889928	ArgumentList	executeHost		889820	1					
ANR	889929	Argument	executeHost		889820	0					
ANR	889930	Identifier	executeHost		889820	0					
ANR	889931	Argument	'<'		889820	1					
ANR	889932	PrimaryExpression	'<'		889820	0					
ANR	889933	IdentifierDeclStatement	"char * end = index ( executeHost , ':' ) ;"	1542:1:33063:33098	889820	10	True				
ANR	889934	IdentifierDecl	"* end = index ( executeHost , ':' )"		889820	0					
ANR	889935	IdentifierDeclType	char *		889820	0					
ANR	889936	Identifier	end		889820	1					
ANR	889937	AssignmentExpression	"* end = index ( executeHost , ':' )"		889820	2		=			
ANR	889938	Identifier	end		889820	0					
ANR	889939	CallExpression	"index ( executeHost , ':' )"		889820	1					
ANR	889940	Callee	index		889820	0					
ANR	889941	Identifier	index		889820	0					
ANR	889942	ArgumentList	executeHost		889820	1					
ANR	889943	Argument	executeHost		889820	0					
ANR	889944	Identifier	executeHost		889820	0					
ANR	889945	Argument	':'		889820	1					
ANR	889946	PrimaryExpression	':'		889820	0					
ANR	889947	IfStatement	if ( start && end )		889820	11					
ANR	889948	Condition	start && end	1544:4:33105:33116	889820	0	True				
ANR	889949	AndExpression	start && end		889820	0		&&			
ANR	889950	Identifier	start		889820	0					
ANR	889951	Identifier	end		889820	1					
ANR	889952	CompoundStatement		29:2:686:699	889820	1					
ANR	889953	IdentifierDeclStatement	char * tmpaddr ;	1545:2:33123:33136	889820	0	True				
ANR	889954	IdentifierDecl	* tmpaddr		889820	0					
ANR	889955	IdentifierDeclType	char *		889820	0					
ANR	889956	Identifier	tmpaddr		889820	1					
ANR	889957	ExpressionStatement	tmpaddr = ( char * ) malloc ( 32 * sizeof ( char ) )	1546:2:33140:33184	889820	1	True				
ANR	889958	AssignmentExpression	tmpaddr = ( char * ) malloc ( 32 * sizeof ( char ) )		889820	0		=			
ANR	889959	Identifier	tmpaddr		889820	0					
ANR	889960	CastExpression	( char * ) malloc ( 32 * sizeof ( char ) )		889820	1					
ANR	889961	CastTarget	char *		889820	0					
ANR	889962	CallExpression	malloc ( 32 * sizeof ( char ) )		889820	1					
ANR	889963	Callee	malloc		889820	0					
ANR	889964	Identifier	malloc		889820	0					
ANR	889965	ArgumentList	32 * sizeof ( char )		889820	1					
ANR	889966	Argument	32 * sizeof ( char )		889820	0					
ANR	889967	MultiplicativeExpression	32 * sizeof ( char )		889820	0		*			
ANR	889968	PrimaryExpression	32		889820	0					
ANR	889969	SizeofExpression	sizeof ( char )		889820	1					
ANR	889970	Sizeof	sizeof		889820	0					
ANR	889971	SizeofOperand	char		889820	1					
ANR	889972	ExpressionStatement	"tmpaddr = strncpy ( tmpaddr , start + 1 , end - start - 1 )"	1547:2:33188:33236	889820	2	True				
ANR	889973	AssignmentExpression	"tmpaddr = strncpy ( tmpaddr , start + 1 , end - start - 1 )"		889820	0		=			
ANR	889974	Identifier	tmpaddr		889820	0					
ANR	889975	CallExpression	"strncpy ( tmpaddr , start + 1 , end - start - 1 )"		889820	1					
ANR	889976	Callee	strncpy		889820	0					
ANR	889977	Identifier	strncpy		889820	0					
ANR	889978	ArgumentList	tmpaddr		889820	1					
ANR	889979	Argument	tmpaddr		889820	0					
ANR	889980	Identifier	tmpaddr		889820	0					
ANR	889981	Argument	start + 1		889820	1					
ANR	889982	AdditiveExpression	start + 1		889820	0		+			
ANR	889983	Identifier	start		889820	0					
ANR	889984	PrimaryExpression	1		889820	1					
ANR	889985	Argument	end - start - 1		889820	2					
ANR	889986	AdditiveExpression	end - start - 1		889820	0		-			
ANR	889987	Identifier	end		889820	0					
ANR	889988	AdditiveExpression	start - 1		889820	1		-			
ANR	889989	Identifier	start		889820	0					
ANR	889990	PrimaryExpression	1		889820	1					
ANR	889991	ExpressionStatement	tmpaddr [ end - start - 1 ] = '\\0'	1548:2:33240:33267	889820	3	True				
ANR	889992	AssignmentExpression	tmpaddr [ end - start - 1 ] = '\\0'		889820	0		=			
ANR	889993	ArrayIndexing	tmpaddr [ end - start - 1 ]		889820	0					
ANR	889994	Identifier	tmpaddr		889820	0					
ANR	889995	AdditiveExpression	end - start - 1		889820	1		-			
ANR	889996	Identifier	end		889820	0					
ANR	889997	AdditiveExpression	start - 1		889820	1		-			
ANR	889998	Identifier	start		889820	0					
ANR	889999	PrimaryExpression	1		889820	1					
ANR	890000	PrimaryExpression	'\\0'		889820	1					
ANR	890001	ExpressionStatement	"inet_pton ( AF_INET , tmpaddr , & addr )"	1550:2:33272:33306	889820	4	True				
ANR	890002	CallExpression	"inet_pton ( AF_INET , tmpaddr , & addr )"		889820	0					
ANR	890003	Callee	inet_pton		889820	0					
ANR	890004	Identifier	inet_pton		889820	0					
ANR	890005	ArgumentList	AF_INET		889820	1					
ANR	890006	Argument	AF_INET		889820	0					
ANR	890007	Identifier	AF_INET		889820	0					
ANR	890008	Argument	tmpaddr		889820	1					
ANR	890009	Identifier	tmpaddr		889820	0					
ANR	890010	Argument	& addr		889820	2					
ANR	890011	UnaryOperationExpression	& addr		889820	0					
ANR	890012	UnaryOperator	&		889820	0					
ANR	890013	Identifier	addr		889820	1					
ANR	890014	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""start = %s\\n"" , start )"	1552:2:33311:33354	889820	5	True				
ANR	890015	CallExpression	"dprintf ( D_FULLDEBUG , ""start = %s\\n"" , start )"		889820	0					
ANR	890016	Callee	dprintf		889820	0					
ANR	890017	Identifier	dprintf		889820	0					
ANR	890018	ArgumentList	D_FULLDEBUG		889820	1					
ANR	890019	Argument	D_FULLDEBUG		889820	0					
ANR	890020	Identifier	D_FULLDEBUG		889820	0					
ANR	890021	Argument	"""start = %s\\n"""		889820	1					
ANR	890022	PrimaryExpression	"""start = %s\\n"""		889820	0					
ANR	890023	Argument	start		889820	2					
ANR	890024	Identifier	start		889820	0					
ANR	890025	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""end = %s\\n"" , end )"	1553:2:33358:33397	889820	6	True				
ANR	890026	CallExpression	"dprintf ( D_FULLDEBUG , ""end = %s\\n"" , end )"		889820	0					
ANR	890027	Callee	dprintf		889820	0					
ANR	890028	Identifier	dprintf		889820	0					
ANR	890029	ArgumentList	D_FULLDEBUG		889820	1					
ANR	890030	Argument	D_FULLDEBUG		889820	0					
ANR	890031	Identifier	D_FULLDEBUG		889820	0					
ANR	890032	Argument	"""end = %s\\n"""		889820	1					
ANR	890033	PrimaryExpression	"""end = %s\\n"""		889820	0					
ANR	890034	Argument	end		889820	2					
ANR	890035	Identifier	end		889820	0					
ANR	890036	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""tmpaddr = %s\\n"" , tmpaddr )"	1554:2:33401:33448	889820	7	True				
ANR	890037	CallExpression	"dprintf ( D_FULLDEBUG , ""tmpaddr = %s\\n"" , tmpaddr )"		889820	0					
ANR	890038	Callee	dprintf		889820	0					
ANR	890039	Identifier	dprintf		889820	0					
ANR	890040	ArgumentList	D_FULLDEBUG		889820	1					
ANR	890041	Argument	D_FULLDEBUG		889820	0					
ANR	890042	Identifier	D_FULLDEBUG		889820	0					
ANR	890043	Argument	"""tmpaddr = %s\\n"""		889820	1					
ANR	890044	PrimaryExpression	"""tmpaddr = %s\\n"""		889820	0					
ANR	890045	Argument	tmpaddr		889820	2					
ANR	890046	Identifier	tmpaddr		889820	0					
ANR	890047	ExpressionStatement	free ( tmpaddr )	1555:2:33452:33465	889820	8	True				
ANR	890048	CallExpression	free ( tmpaddr )		889820	0					
ANR	890049	Callee	free		889820	0					
ANR	890050	Identifier	free		889820	0					
ANR	890051	ArgumentList	tmpaddr		889820	1					
ANR	890052	Argument	tmpaddr		889820	0					
ANR	890053	Identifier	tmpaddr		889820	0					
ANR	890054	ElseStatement	else		889820	0					
ANR	890055	CompoundStatement		41:6:1039:1039	889820	0					
ANR	890056	ExpressionStatement	"inet_pton ( AF_INET , executeHost , & addr )"	1558:2:33480:33518	889820	0	True				
ANR	890057	CallExpression	"inet_pton ( AF_INET , executeHost , & addr )"		889820	0					
ANR	890058	Callee	inet_pton		889820	0					
ANR	890059	Identifier	inet_pton		889820	0					
ANR	890060	ArgumentList	AF_INET		889820	1					
ANR	890061	Argument	AF_INET		889820	0					
ANR	890062	Identifier	AF_INET		889820	0					
ANR	890063	Argument	executeHost		889820	1					
ANR	890064	Identifier	executeHost		889820	0					
ANR	890065	Argument	& addr		889820	2					
ANR	890066	UnaryOperationExpression	& addr		889820	0					
ANR	890067	UnaryOperator	&		889820	0					
ANR	890068	Identifier	addr		889820	1					
ANR	890069	ExpressionStatement	"hp = gethostbyaddr ( ( char * ) & addr , sizeof ( addr ) , AF_INET )"	1562:1:33594:33651	889820	12	True				
ANR	890070	AssignmentExpression	"hp = gethostbyaddr ( ( char * ) & addr , sizeof ( addr ) , AF_INET )"		889820	0		=			
ANR	890071	Identifier	hp		889820	0					
ANR	890072	CallExpression	"gethostbyaddr ( ( char * ) & addr , sizeof ( addr ) , AF_INET )"		889820	1					
ANR	890073	Callee	gethostbyaddr		889820	0					
ANR	890074	Identifier	gethostbyaddr		889820	0					
ANR	890075	ArgumentList	( char * ) & addr		889820	1					
ANR	890076	Argument	( char * ) & addr		889820	0					
ANR	890077	CastExpression	( char * ) & addr		889820	0					
ANR	890078	CastTarget	char *		889820	0					
ANR	890079	UnaryOperationExpression	& addr		889820	1					
ANR	890080	UnaryOperator	&		889820	0					
ANR	890081	Identifier	addr		889820	1					
ANR	890082	Argument	sizeof ( addr )		889820	1					
ANR	890083	SizeofExpression	sizeof ( addr )		889820	0					
ANR	890084	Sizeof	sizeof		889820	0					
ANR	890085	SizeofOperand	addr		889820	1					
ANR	890086	Argument	AF_INET		889820	2					
ANR	890087	Identifier	AF_INET		889820	0					
ANR	890088	IfStatement	if ( hp )		889820	13					
ANR	890089	Condition	hp	1563:4:33657:33658	889820	0	True				
ANR	890090	Identifier	hp		889820	0					
ANR	890091	CompoundStatement		47:8:1224:1224	889820	1					
ANR	890092	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Executehost name = %s (hp->h_name) \\n"" , hp -> h_name )"	1564:2:33665:33738	889820	0	True				
ANR	890093	CallExpression	"dprintf ( D_FULLDEBUG , ""Executehost name = %s (hp->h_name) \\n"" , hp -> h_name )"		889820	0					
ANR	890094	Callee	dprintf		889820	0					
ANR	890095	Identifier	dprintf		889820	0					
ANR	890096	ArgumentList	D_FULLDEBUG		889820	1					
ANR	890097	Argument	D_FULLDEBUG		889820	0					
ANR	890098	Identifier	D_FULLDEBUG		889820	0					
ANR	890099	Argument	"""Executehost name = %s (hp->h_name) \\n"""		889820	1					
ANR	890100	PrimaryExpression	"""Executehost name = %s (hp->h_name) \\n"""		889820	0					
ANR	890101	Argument	hp -> h_name		889820	2					
ANR	890102	PtrMemberAccess	hp -> h_name		889820	0					
ANR	890103	Identifier	hp		889820	0					
ANR	890104	Identifier	h_name		889820	1					
ANR	890105	ElseStatement	else		889820	0					
ANR	890106	CompoundStatement		50:6:1312:1312	889820	0					
ANR	890107	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Executehost name = %s (executeHost) \\n"" , executeHost )"	1567:2:33753:33828	889820	0	True				
ANR	890108	CallExpression	"dprintf ( D_FULLDEBUG , ""Executehost name = %s (executeHost) \\n"" , executeHost )"		889820	0					
ANR	890109	Callee	dprintf		889820	0					
ANR	890110	Identifier	dprintf		889820	0					
ANR	890111	ArgumentList	D_FULLDEBUG		889820	1					
ANR	890112	Argument	D_FULLDEBUG		889820	0					
ANR	890113	Identifier	D_FULLDEBUG		889820	0					
ANR	890114	Argument	"""Executehost name = %s (executeHost) \\n"""		889820	1					
ANR	890115	PrimaryExpression	"""Executehost name = %s (executeHost) \\n"""		889820	0					
ANR	890116	Argument	executeHost		889820	2					
ANR	890117	Identifier	executeHost		889820	0					
ANR	890118	ExpressionStatement	"tmpCl1 . Assign ( ""endts"" , ( int ) eventclock )"	1570:1:33835:33874	889820	14	True				
ANR	890119	CallExpression	"tmpCl1 . Assign ( ""endts"" , ( int ) eventclock )"		889820	0					
ANR	890120	Callee	tmpCl1 . Assign		889820	0					
ANR	890121	MemberAccess	tmpCl1 . Assign		889820	0					
ANR	890122	Identifier	tmpCl1		889820	0					
ANR	890123	Identifier	Assign		889820	1					
ANR	890124	ArgumentList	"""endts"""		889820	1					
ANR	890125	Argument	"""endts"""		889820	0					
ANR	890126	PrimaryExpression	"""endts"""		889820	0					
ANR	890127	Argument	( int ) eventclock		889820	1					
ANR	890128	CastExpression	( int ) eventclock		889820	0					
ANR	890129	CastTarget	int		889820	0					
ANR	890130	Identifier	eventclock		889820	1					
ANR	890131	ExpressionStatement	"tmp . sprintf ( ""endtype = -1"" )"	1572:1:33878:33905	889820	15	True				
ANR	890132	CallExpression	"tmp . sprintf ( ""endtype = -1"" )"		889820	0					
ANR	890133	Callee	tmp . sprintf		889820	0					
ANR	890134	MemberAccess	tmp . sprintf		889820	0					
ANR	890135	Identifier	tmp		889820	0					
ANR	890136	Identifier	sprintf		889820	1					
ANR	890137	ArgumentList	"""endtype = -1"""		889820	1					
ANR	890138	Argument	"""endtype = -1"""		889820	0					
ANR	890139	PrimaryExpression	"""endtype = -1"""		889820	0					
ANR	890140	ExpressionStatement	tmpCl1 . Insert ( tmp . Value ( ) )	1573:1:33908:33934	889820	16	True				
ANR	890141	CallExpression	tmpCl1 . Insert ( tmp . Value ( ) )		889820	0					
ANR	890142	Callee	tmpCl1 . Insert		889820	0					
ANR	890143	MemberAccess	tmpCl1 . Insert		889820	0					
ANR	890144	Identifier	tmpCl1		889820	0					
ANR	890145	Identifier	Insert		889820	1					
ANR	890146	ArgumentList	tmp . Value ( )		889820	1					
ANR	890147	Argument	tmp . Value ( )		889820	0					
ANR	890148	CallExpression	tmp . Value ( )		889820	0					
ANR	890149	Callee	tmp . Value		889820	0					
ANR	890150	MemberAccess	tmp . Value		889820	0					
ANR	890151	Identifier	tmp		889820	0					
ANR	890152	Identifier	Value		889820	1					
ANR	890153	ArgumentList			889820	1					
ANR	890154	ExpressionStatement	"tmp . sprintf ( ""endmessage = \\""UNKNOWN ERROR\\"""" )"	1575:1:33938:33983	889820	17	True				
ANR	890155	CallExpression	"tmp . sprintf ( ""endmessage = \\""UNKNOWN ERROR\\"""" )"		889820	0					
ANR	890156	Callee	tmp . sprintf		889820	0					
ANR	890157	MemberAccess	tmp . sprintf		889820	0					
ANR	890158	Identifier	tmp		889820	0					
ANR	890159	Identifier	sprintf		889820	1					
ANR	890160	ArgumentList	"""endmessage = \\""UNKNOWN ERROR\\"""""		889820	1					
ANR	890161	Argument	"""endmessage = \\""UNKNOWN ERROR\\"""""		889820	0					
ANR	890162	PrimaryExpression	"""endmessage = \\""UNKNOWN ERROR\\"""""		889820	0					
ANR	890163	ExpressionStatement	tmpCl1 . Insert ( tmp . Value ( ) )	1576:1:33986:34012	889820	18	True				
ANR	890164	CallExpression	tmpCl1 . Insert ( tmp . Value ( ) )		889820	0					
ANR	890165	Callee	tmpCl1 . Insert		889820	0					
ANR	890166	MemberAccess	tmpCl1 . Insert		889820	0					
ANR	890167	Identifier	tmpCl1		889820	0					
ANR	890168	Identifier	Insert		889820	1					
ANR	890169	ArgumentList	tmp . Value ( )		889820	1					
ANR	890170	Argument	tmp . Value ( )		889820	0					
ANR	890171	CallExpression	tmp . Value ( )		889820	0					
ANR	890172	Callee	tmp . Value		889820	0					
ANR	890173	MemberAccess	tmp . Value		889820	0					
ANR	890174	Identifier	tmp		889820	0					
ANR	890175	Identifier	Value		889820	1					
ANR	890176	ArgumentList			889820	1					
ANR	890177	ExpressionStatement	insertCommonIdentifiers ( tmpCl2 )	1579:1:34064:34095	889820	19	True				
ANR	890178	CallExpression	insertCommonIdentifiers ( tmpCl2 )		889820	0					
ANR	890179	Callee	insertCommonIdentifiers		889820	0					
ANR	890180	Identifier	insertCommonIdentifiers		889820	0					
ANR	890181	ArgumentList	tmpCl2		889820	1					
ANR	890182	Argument	tmpCl2		889820	0					
ANR	890183	Identifier	tmpCl2		889820	0					
ANR	890184	ExpressionStatement	"tmp . sprintf ( ""endtype = null"" )"	1581:1:34099:34128	889820	20	True				
ANR	890185	CallExpression	"tmp . sprintf ( ""endtype = null"" )"		889820	0					
ANR	890186	Callee	tmp . sprintf		889820	0					
ANR	890187	MemberAccess	tmp . sprintf		889820	0					
ANR	890188	Identifier	tmp		889820	0					
ANR	890189	Identifier	sprintf		889820	1					
ANR	890190	ArgumentList	"""endtype = null"""		889820	1					
ANR	890191	Argument	"""endtype = null"""		889820	0					
ANR	890192	PrimaryExpression	"""endtype = null"""		889820	0					
ANR	890193	ExpressionStatement	tmpCl2 . Insert ( tmp . Value ( ) )	1582:1:34131:34157	889820	21	True				
ANR	890194	CallExpression	tmpCl2 . Insert ( tmp . Value ( ) )		889820	0					
ANR	890195	Callee	tmpCl2 . Insert		889820	0					
ANR	890196	MemberAccess	tmpCl2 . Insert		889820	0					
ANR	890197	Identifier	tmpCl2		889820	0					
ANR	890198	Identifier	Insert		889820	1					
ANR	890199	ArgumentList	tmp . Value ( )		889820	1					
ANR	890200	Argument	tmp . Value ( )		889820	0					
ANR	890201	CallExpression	tmp . Value ( )		889820	0					
ANR	890202	Callee	tmp . Value		889820	0					
ANR	890203	MemberAccess	tmp . Value		889820	0					
ANR	890204	Identifier	tmp		889820	0					
ANR	890205	Identifier	Value		889820	1					
ANR	890206	ArgumentList			889820	1					
ANR	890207	IfStatement	if ( FILEObj )		889820	22					
ANR	890208	Condition	FILEObj	1584:5:34165:34171	889820	0	True				
ANR	890209	Identifier	FILEObj		889820	0					
ANR	890210	CompoundStatement		68:14:1737:1737	889820	1					
ANR	890211	IfStatement	"if ( FILEObj -> file_updateEvent ( ""Runs"" , & tmpCl1 , & tmpCl2 ) == QUILL_FAILURE )"		889820	0					
ANR	890212	Condition	"FILEObj -> file_updateEvent ( ""Runs"" , & tmpCl1 , & tmpCl2 ) == QUILL_FAILURE"	1585:6:34182:34249	889820	0	True				
ANR	890213	EqualityExpression	"FILEObj -> file_updateEvent ( ""Runs"" , & tmpCl1 , & tmpCl2 ) == QUILL_FAILURE"		889820	0		==			
ANR	890214	CallExpression	"FILEObj -> file_updateEvent ( ""Runs"" , & tmpCl1 , & tmpCl2 )"		889820	0					
ANR	890215	Callee	FILEObj -> file_updateEvent		889820	0					
ANR	890216	PtrMemberAccess	FILEObj -> file_updateEvent		889820	0					
ANR	890217	Identifier	FILEObj		889820	0					
ANR	890218	Identifier	file_updateEvent		889820	1					
ANR	890219	ArgumentList	"""Runs"""		889820	1					
ANR	890220	Argument	"""Runs"""		889820	0					
ANR	890221	PrimaryExpression	"""Runs"""		889820	0					
ANR	890222	Argument	& tmpCl1		889820	1					
ANR	890223	UnaryOperationExpression	& tmpCl1		889820	0					
ANR	890224	UnaryOperator	&		889820	0					
ANR	890225	Identifier	tmpCl1		889820	1					
ANR	890226	Argument	& tmpCl2		889820	2					
ANR	890227	UnaryOperationExpression	& tmpCl2		889820	0					
ANR	890228	UnaryOperator	&		889820	0					
ANR	890229	Identifier	tmpCl2		889820	1					
ANR	890230	Identifier	QUILL_FAILURE		889820	1					
ANR	890231	CompoundStatement		69:76:1815:1815	889820	1					
ANR	890232	ExpressionStatement	"dprintf ( D_ALWAYS , ""Logging Event 1--- Error\\n"" )"	1586:3:34257:34304	889820	0	True				
ANR	890233	CallExpression	"dprintf ( D_ALWAYS , ""Logging Event 1--- Error\\n"" )"		889820	0					
ANR	890234	Callee	dprintf		889820	0					
ANR	890235	Identifier	dprintf		889820	0					
ANR	890236	ArgumentList	D_ALWAYS		889820	1					
ANR	890237	Argument	D_ALWAYS		889820	0					
ANR	890238	Identifier	D_ALWAYS		889820	0					
ANR	890239	Argument	"""Logging Event 1--- Error\\n"""		889820	1					
ANR	890240	PrimaryExpression	"""Logging Event 1--- Error\\n"""		889820	0					
ANR	890241	ReturnStatement	return 0 ;	1587:3:34309:34317	889820	1	True				
ANR	890242	PrimaryExpression	0		889820	0					
ANR	890243	IfStatement	if ( ! remoteName )		889820	23					
ANR	890244	Condition	! remoteName	1591:5:34358:34368	889820	0	True				
ANR	890245	UnaryOperationExpression	! remoteName		889820	0					
ANR	890246	UnaryOperator	!		889820	0					
ANR	890247	Identifier	remoteName		889820	1					
ANR	890248	CompoundStatement		75:19:1935:1935	889820	1					
ANR	890249	ExpressionStatement	"setRemoteName ( """" )"	1592:2:34376:34393	889820	0	True				
ANR	890250	CallExpression	"setRemoteName ( """" )"		889820	0					
ANR	890251	Callee	setRemoteName		889820	0					
ANR	890252	Identifier	setRemoteName		889820	0					
ANR	890253	ArgumentList	""""""		889820	1					
ANR	890254	Argument	""""""		889820	0					
ANR	890255	PrimaryExpression	""""""		889820	0					
ANR	890256	ExpressionStatement	"tmpCl3 . Assign ( ""machine_id"" , remoteName )"	1594:1:34399:34438	889820	24	True				
ANR	890257	CallExpression	"tmpCl3 . Assign ( ""machine_id"" , remoteName )"		889820	0					
ANR	890258	Callee	tmpCl3 . Assign		889820	0					
ANR	890259	MemberAccess	tmpCl3 . Assign		889820	0					
ANR	890260	Identifier	tmpCl3		889820	0					
ANR	890261	Identifier	Assign		889820	1					
ANR	890262	ArgumentList	"""machine_id"""		889820	1					
ANR	890263	Argument	"""machine_id"""		889820	0					
ANR	890264	PrimaryExpression	"""machine_id"""		889820	0					
ANR	890265	Argument	remoteName		889820	1					
ANR	890266	Identifier	remoteName		889820	0					
ANR	890267	ExpressionStatement	insertCommonIdentifiers ( tmpCl3 )	1597:1:34490:34521	889820	25	True				
ANR	890268	CallExpression	insertCommonIdentifiers ( tmpCl3 )		889820	0					
ANR	890269	Callee	insertCommonIdentifiers		889820	0					
ANR	890270	Identifier	insertCommonIdentifiers		889820	0					
ANR	890271	ArgumentList	tmpCl3		889820	1					
ANR	890272	Argument	tmpCl3		889820	0					
ANR	890273	Identifier	tmpCl3		889820	0					
ANR	890274	ExpressionStatement	"tmpCl3 . Assign ( ""startts"" , ( int ) eventclock )"	1599:1:34525:34566	889820	26	True				
ANR	890275	CallExpression	"tmpCl3 . Assign ( ""startts"" , ( int ) eventclock )"		889820	0					
ANR	890276	Callee	tmpCl3 . Assign		889820	0					
ANR	890277	MemberAccess	tmpCl3 . Assign		889820	0					
ANR	890278	Identifier	tmpCl3		889820	0					
ANR	890279	Identifier	Assign		889820	1					
ANR	890280	ArgumentList	"""startts"""		889820	1					
ANR	890281	Argument	"""startts"""		889820	0					
ANR	890282	PrimaryExpression	"""startts"""		889820	0					
ANR	890283	Argument	( int ) eventclock		889820	1					
ANR	890284	CastExpression	( int ) eventclock		889820	0					
ANR	890285	CastTarget	int		889820	0					
ANR	890286	Identifier	eventclock		889820	1					
ANR	890287	IfStatement	if ( FILEObj )		889820	27					
ANR	890288	Condition	FILEObj	1601:4:34573:34579	889820	0	True				
ANR	890289	Identifier	FILEObj		889820	0					
ANR	890290	CompoundStatement		85:13:2145:2145	889820	1					
ANR	890291	IfStatement	"if ( FILEObj -> file_newEvent ( ""Runs"" , & tmpCl3 ) == QUILL_FAILURE )"		889820	0					
ANR	890292	Condition	"FILEObj -> file_newEvent ( ""Runs"" , & tmpCl3 ) == QUILL_FAILURE"	1602:6:34590:34645	889820	0	True				
ANR	890293	EqualityExpression	"FILEObj -> file_newEvent ( ""Runs"" , & tmpCl3 ) == QUILL_FAILURE"		889820	0		==			
ANR	890294	CallExpression	"FILEObj -> file_newEvent ( ""Runs"" , & tmpCl3 )"		889820	0					
ANR	890295	Callee	FILEObj -> file_newEvent		889820	0					
ANR	890296	PtrMemberAccess	FILEObj -> file_newEvent		889820	0					
ANR	890297	Identifier	FILEObj		889820	0					
ANR	890298	Identifier	file_newEvent		889820	1					
ANR	890299	ArgumentList	"""Runs"""		889820	1					
ANR	890300	Argument	"""Runs"""		889820	0					
ANR	890301	PrimaryExpression	"""Runs"""		889820	0					
ANR	890302	Argument	& tmpCl3		889820	1					
ANR	890303	UnaryOperationExpression	& tmpCl3		889820	0					
ANR	890304	UnaryOperator	&		889820	0					
ANR	890305	Identifier	tmpCl3		889820	1					
ANR	890306	Identifier	QUILL_FAILURE		889820	1					
ANR	890307	CompoundStatement		86:64:2211:2211	889820	1					
ANR	890308	ExpressionStatement	"dprintf ( D_ALWAYS , ""Logging Event 1--- Error\\n"" )"	1603:3:34653:34700	889820	0	True				
ANR	890309	CallExpression	"dprintf ( D_ALWAYS , ""Logging Event 1--- Error\\n"" )"		889820	0					
ANR	890310	Callee	dprintf		889820	0					
ANR	890311	Identifier	dprintf		889820	0					
ANR	890312	ArgumentList	D_ALWAYS		889820	1					
ANR	890313	Argument	D_ALWAYS		889820	0					
ANR	890314	Identifier	D_ALWAYS		889820	0					
ANR	890315	Argument	"""Logging Event 1--- Error\\n"""		889820	1					
ANR	890316	PrimaryExpression	"""Logging Event 1--- Error\\n"""		889820	0					
ANR	890317	ReturnStatement	return 0 ;	1604:3:34705:34713	889820	1	True				
ANR	890318	PrimaryExpression	0		889820	0					
ANR	890319	ExpressionStatement	"retval = fprintf ( file , ""Job executing on host: %s\\n"" , executeHost )"	1608:1:34750:34817	889820	28	True				
ANR	890320	AssignmentExpression	"retval = fprintf ( file , ""Job executing on host: %s\\n"" , executeHost )"		889820	0		=			
ANR	890321	Identifier	retval		889820	0					
ANR	890322	CallExpression	"fprintf ( file , ""Job executing on host: %s\\n"" , executeHost )"		889820	1					
ANR	890323	Callee	fprintf		889820	0					
ANR	890324	Identifier	fprintf		889820	0					
ANR	890325	ArgumentList	file		889820	1					
ANR	890326	Argument	file		889820	0					
ANR	890327	Identifier	file		889820	0					
ANR	890328	Argument	"""Job executing on host: %s\\n"""		889820	1					
ANR	890329	PrimaryExpression	"""Job executing on host: %s\\n"""		889820	0					
ANR	890330	Argument	executeHost		889820	2					
ANR	890331	Identifier	executeHost		889820	0					
ANR	890332	IfStatement	if ( retval < 0 )		889820	29					
ANR	890333	Condition	retval < 0	1610:5:34825:34834	889820	0	True				
ANR	890334	RelationalExpression	retval < 0		889820	0		<			
ANR	890335	Identifier	retval		889820	0					
ANR	890336	PrimaryExpression	0		889820	1					
ANR	890337	CompoundStatement		94:17:2400:2400	889820	1					
ANR	890338	ReturnStatement	return 0 ;	1611:2:34841:34849	889820	0	True				
ANR	890339	PrimaryExpression	0		889820	0					
ANR	890340	ReturnStatement	return 1 ;	1614:1:34856:34864	889820	30	True				
ANR	890341	PrimaryExpression	1		889820	0					
ANR	890342	ReturnType	int		889820	1					
ANR	890343	Identifier	ExecuteEvent :: writeEvent		889820	2					
ANR	890344	ParameterList	FILE * file		889820	3					
ANR	890345	Parameter	FILE * file	1516:26:32424:32433	889820	0	True				
ANR	890346	ParameterType	FILE *		889820	0					
ANR	890347	Identifier	file		889820	1					
ANR	890348	CFGEntryNode	ENTRY		889820		True				
ANR	890349	CFGExitNode	EXIT		889820		True				
ANR	890350	Symbol	scheddname		889820						
ANR	890351	Symbol	* start		889820						
ANR	890352	Symbol	hp		889820						
ANR	890353	Symbol	tmp . Value		889820						
ANR	890354	Symbol	ENV_SCHEDD_NAME		889820						
ANR	890355	Symbol	EnvGetName		889820						
ANR	890356	Symbol	QUILL_FAILURE		889820						
ANR	890357	Symbol	FILEObj		889820						
ANR	890358	Symbol	* FILEObj		889820						
ANR	890359	Symbol	& tmpCl1		889820						
ANR	890360	Symbol	file		889820						
ANR	890361	Symbol	eventclock		889820						
ANR	890362	Symbol	tmp		889820						
ANR	890363	Symbol	& tmpCl2		889820						
ANR	890364	Symbol	FILEObj -> file_newEvent		889820						
ANR	890365	Symbol	& tmpCl3		889820						
ANR	890366	Symbol	* tmpaddr		889820						
ANR	890367	Symbol	end		889820						
ANR	890368	Symbol	addr		889820						
ANR	890369	Symbol	hp -> h_name		889820						
ANR	890370	Symbol	getenv		889820						
ANR	890371	Symbol	malloc		889820						
ANR	890372	Symbol	tmpaddr		889820						
ANR	890373	Symbol	& addr		889820						
ANR	890374	Symbol	executeHost		889820						
ANR	890375	Symbol	start		889820						
ANR	890376	Symbol	D_ALWAYS		889820						
ANR	890377	Symbol	index		889820						
ANR	890378	Symbol	D_FULLDEBUG		889820						
ANR	890379	Symbol	AF_INET		889820						
ANR	890380	Symbol	* hp		889820						
ANR	890381	Symbol	fprintf		889820						
ANR	890382	Symbol	retval		889820						
ANR	890383	Symbol	FILEObj -> file_updateEvent		889820						
ANR	890384	Symbol	tmpCl2		889820						
ANR	890385	Symbol	tmpCl3		889820						
ANR	890386	Symbol	tmpCl1		889820						
ANR	890387	Symbol	strncpy		889820						
ANR	890388	Symbol	* end		889820						
ANR	890389	Symbol	gethostbyaddr		889820						
ANR	890390	Symbol	remoteName		889820						
ANR	890391	Function	ExecuteEvent :: readEvent	1617:0:34869:35321							
ANR	890392	FunctionDef	ExecuteEvent :: readEvent (FILE * file)		890391	0					
ANR	890393	CompoundStatement		1619:0:34910:35321	890391	0					
ANR	890394	IdentifierDeclStatement	MyString line ;	1620:1:34913:34926	890391	0	True				
ANR	890395	IdentifierDecl	line		890391	0					
ANR	890396	IdentifierDeclType	MyString		890391	0					
ANR	890397	Identifier	line		890391	1					
ANR	890398	IfStatement	if ( ! line . readLine ( file ) )		890391	1					
ANR	890399	Condition	! line . readLine ( file )	1621:6:34934:34954	890391	0	True				
ANR	890400	UnaryOperationExpression	! line . readLine ( file )		890391	0					
ANR	890401	UnaryOperator	!		890391	0					
ANR	890402	CallExpression	line . readLine ( file )		890391	1					
ANR	890403	Callee	line . readLine		890391	0					
ANR	890404	MemberAccess	line . readLine		890391	0					
ANR	890405	Identifier	line		890391	0					
ANR	890406	Identifier	readLine		890391	1					
ANR	890407	ArgumentList	file		890391	1					
ANR	890408	Argument	file		890391	0					
ANR	890409	Identifier	file		890391	0					
ANR	890410	CompoundStatement		4:1:48:48	890391	1					
ANR	890411	ReturnStatement	return 0 ;	1623:2:34963:34971	890391	0	True				
ANR	890412	PrimaryExpression	0		890391	0					
ANR	890413	ExpressionStatement	setExecuteHost ( line . Value ( ) )	1626:1:34994:35022	890391	2	True				
ANR	890414	CallExpression	setExecuteHost ( line . Value ( ) )		890391	0					
ANR	890415	Callee	setExecuteHost		890391	0					
ANR	890416	Identifier	setExecuteHost		890391	0					
ANR	890417	ArgumentList	line . Value ( )		890391	1					
ANR	890418	Argument	line . Value ( )		890391	0					
ANR	890419	CallExpression	line . Value ( )		890391	0					
ANR	890420	Callee	line . Value		890391	0					
ANR	890421	MemberAccess	line . Value		890391	0					
ANR	890422	Identifier	line		890391	0					
ANR	890423	Identifier	Value		890391	1					
ANR	890424	ArgumentList			890391	1					
ANR	890425	IdentifierDeclStatement	"int retval = sscanf ( line . Value ( ) , ""Job executing on host: %[^\\n]"" , executeHost ) ;"	1627:1:35044:35133	890391	3	True				
ANR	890426	IdentifierDecl	"retval = sscanf ( line . Value ( ) , ""Job executing on host: %[^\\n]"" , executeHost )"		890391	0					
ANR	890427	IdentifierDeclType	int		890391	0					
ANR	890428	Identifier	retval		890391	1					
ANR	890429	AssignmentExpression	"retval = sscanf ( line . Value ( ) , ""Job executing on host: %[^\\n]"" , executeHost )"		890391	2		=			
ANR	890430	Identifier	retval		890391	0					
ANR	890431	CallExpression	"sscanf ( line . Value ( ) , ""Job executing on host: %[^\\n]"" , executeHost )"		890391	1					
ANR	890432	Callee	sscanf		890391	0					
ANR	890433	Identifier	sscanf		890391	0					
ANR	890434	ArgumentList	line . Value ( )		890391	1					
ANR	890435	Argument	line . Value ( )		890391	0					
ANR	890436	CallExpression	line . Value ( )		890391	0					
ANR	890437	Callee	line . Value		890391	0					
ANR	890438	MemberAccess	line . Value		890391	0					
ANR	890439	Identifier	line		890391	0					
ANR	890440	Identifier	Value		890391	1					
ANR	890441	ArgumentList			890391	1					
ANR	890442	Argument	"""Job executing on host: %[^\\n]"""		890391	1					
ANR	890443	PrimaryExpression	"""Job executing on host: %[^\\n]"""		890391	0					
ANR	890444	Argument	executeHost		890391	2					
ANR	890445	Identifier	executeHost		890391	0					
ANR	890446	IfStatement	if ( retval == 1 )		890391	4					
ANR	890447	Condition	retval == 1	1629:5:35140:35150	890391	0	True				
ANR	890448	EqualityExpression	retval == 1		890391	0		==			
ANR	890449	Identifier	retval		890391	0					
ANR	890450	PrimaryExpression	1		890391	1					
ANR	890451	CompoundStatement		12:1:243:243	890391	1					
ANR	890452	ReturnStatement	return 1 ;	1631:2:35158:35166	890391	0	True				
ANR	890453	PrimaryExpression	1		890391	0					
ANR	890454	IfStatement	"if ( strcmp ( line . Value ( ) , ""Job executing on host: \\n"" ) == 0 )"		890391	5					
ANR	890455	Condition	"strcmp ( line . Value ( ) , ""Job executing on host: \\n"" ) == 0"	1634:4:35176:35229	890391	0	True				
ANR	890456	EqualityExpression	"strcmp ( line . Value ( ) , ""Job executing on host: \\n"" ) == 0"		890391	0		==			
ANR	890457	CallExpression	"strcmp ( line . Value ( ) , ""Job executing on host: \\n"" )"		890391	0					
ANR	890458	Callee	strcmp		890391	0					
ANR	890459	Identifier	strcmp		890391	0					
ANR	890460	ArgumentList	line . Value ( )		890391	1					
ANR	890461	Argument	line . Value ( )		890391	0					
ANR	890462	CallExpression	line . Value ( )		890391	0					
ANR	890463	Callee	line . Value		890391	0					
ANR	890464	MemberAccess	line . Value		890391	0					
ANR	890465	Identifier	line		890391	0					
ANR	890466	Identifier	Value		890391	1					
ANR	890467	ArgumentList			890391	1					
ANR	890468	Argument	"""Job executing on host: \\n"""		890391	1					
ANR	890469	PrimaryExpression	"""Job executing on host: \\n"""		890391	0					
ANR	890470	PrimaryExpression	0		890391	1					
ANR	890471	CompoundStatement		16:60:321:321	890391	1					
ANR	890472	ExpressionStatement	executeHost [ 0 ] = 0	1636:2:35274:35292	890391	0	True				
ANR	890473	AssignmentExpression	executeHost [ 0 ] = 0		890391	0		=			
ANR	890474	ArrayIndexing	executeHost [ 0 ]		890391	0					
ANR	890475	Identifier	executeHost		890391	0					
ANR	890476	PrimaryExpression	0		890391	1					
ANR	890477	PrimaryExpression	0		890391	1					
ANR	890478	ReturnStatement	return 1 ;	1637:2:35296:35304	890391	1	True				
ANR	890479	PrimaryExpression	1		890391	0					
ANR	890480	ReturnStatement	return 0 ;	1640:1:35311:35319	890391	6	True				
ANR	890481	PrimaryExpression	0		890391	0					
ANR	890482	ReturnType	int		890391	1					
ANR	890483	Identifier	ExecuteEvent :: readEvent		890391	2					
ANR	890484	ParameterList	FILE * file		890391	3					
ANR	890485	Parameter	FILE * file	1618:25:34898:34907	890391	0	True				
ANR	890486	ParameterType	FILE *		890391	0					
ANR	890487	Identifier	file		890391	1					
ANR	890488	CFGEntryNode	ENTRY		890391		True				
ANR	890489	CFGExitNode	EXIT		890391		True				
ANR	890490	Symbol	line . readLine		890391						
ANR	890491	Symbol	strcmp		890391						
ANR	890492	Symbol	file		890391						
ANR	890493	Symbol	line . Value		890391						
ANR	890494	Symbol	executeHost		890391						
ANR	890495	Symbol	line		890391						
ANR	890496	Symbol	sscanf		890391						
ANR	890497	Symbol	* executeHost		890391						
ANR	890498	Symbol	retval		890391						
ANR	890499	Function	ExecuteEvent :: toClassAd	1643:0:35324:35552							
ANR	890500	FunctionDef	ExecuteEvent :: toClassAd ()		890499	0					
ANR	890501	CompoundStatement		1645:0:35363:35552	890499	0					
ANR	890502	IdentifierDeclStatement	ClassAd * myad = ULogEvent :: toClassAd ( ) ;	1646:1:35366:35404	890499	0	True				
ANR	890503	IdentifierDecl	* myad = ULogEvent :: toClassAd ( )		890499	0					
ANR	890504	IdentifierDeclType	ClassAd *		890499	0					
ANR	890505	Identifier	myad		890499	1					
ANR	890506	AssignmentExpression	* myad = ULogEvent :: toClassAd ( )		890499	2		=			
ANR	890507	Identifier	myad		890499	0					
ANR	890508	CallExpression	ULogEvent :: toClassAd ( )		890499	1					
ANR	890509	Callee	ULogEvent :: toClassAd		890499	0					
ANR	890510	Identifier	ULogEvent :: toClassAd		890499	0					
ANR	890511	ArgumentList			890499	1					
ANR	890512	IfStatement	if ( ! myad )		890499	1					
ANR	890513	Condition	! myad	1647:5:35411:35415	890499	0	True				
ANR	890514	UnaryOperationExpression	! myad		890499	0					
ANR	890515	UnaryOperator	!		890499	0					
ANR	890516	Identifier	myad		890499	1					
ANR	890517	ReturnStatement	return NULL ;	1647:13:35419:35430	890499	1	True				
ANR	890518	Identifier	NULL		890499	0					
ANR	890519	IfStatement	if ( executeHost && executeHost [ 0 ] )		890499	2					
ANR	890520	Condition	executeHost && executeHost [ 0 ]	1649:5:35438:35466	890499	0	True				
ANR	890521	AndExpression	executeHost && executeHost [ 0 ]		890499	0		&&			
ANR	890522	Identifier	executeHost		890499	0					
ANR	890523	ArrayIndexing	executeHost [ 0 ]		890499	1					
ANR	890524	Identifier	executeHost		890499	0					
ANR	890525	PrimaryExpression	0		890499	1					
ANR	890526	CompoundStatement		5:37:106:106	890499	1					
ANR	890527	IfStatement	"if ( ! myad -> Assign ( ""ExecuteHost"" , executeHost ) )"		890499	0					
ANR	890528	Condition	"! myad -> Assign ( ""ExecuteHost"" , executeHost )"	1650:6:35478:35517	890499	0	True				
ANR	890529	UnaryOperationExpression	"! myad -> Assign ( ""ExecuteHost"" , executeHost )"		890499	0					
ANR	890530	UnaryOperator	!		890499	0					
ANR	890531	CallExpression	"myad -> Assign ( ""ExecuteHost"" , executeHost )"		890499	1					
ANR	890532	Callee	myad -> Assign		890499	0					
ANR	890533	PtrMemberAccess	myad -> Assign		890499	0					
ANR	890534	Identifier	myad		890499	0					
ANR	890535	Identifier	Assign		890499	1					
ANR	890536	ArgumentList	"""ExecuteHost"""		890499	1					
ANR	890537	Argument	"""ExecuteHost"""		890499	0					
ANR	890538	PrimaryExpression	"""ExecuteHost"""		890499	0					
ANR	890539	Argument	executeHost		890499	1					
ANR	890540	Identifier	executeHost		890499	0					
ANR	890541	ReturnStatement	return NULL ;	1650:49:35521:35532	890499	1	True				
ANR	890542	Identifier	NULL		890499	0					
ANR	890543	ReturnStatement	return myad ;	1653:1:35539:35550	890499	3	True				
ANR	890544	Identifier	myad		890499	0					
ANR	890545	ReturnType	ClassAd *		890499	1					
ANR	890546	Identifier	ExecuteEvent :: toClassAd		890499	2					
ANR	890547	ParameterList			890499	3					
ANR	890548	CFGEntryNode	ENTRY		890499		True				
ANR	890549	CFGExitNode	EXIT		890499		True				
ANR	890550	Symbol	myad -> Assign		890499						
ANR	890551	Symbol	NULL		890499						
ANR	890552	Symbol	* myad		890499						
ANR	890553	Symbol	executeHost		890499						
ANR	890554	Symbol	* executeHost		890499						
ANR	890555	Symbol	myad		890499						
ANR	890556	Symbol	ULogEvent :: toClassAd		890499						
ANR	890557	Function	ExecuteEvent :: initFromClassAd	1656:0:35555:35824							
ANR	890558	FunctionDef	ExecuteEvent :: initFromClassAd (ClassAd * ad)		890557	0					
ANR	890559	CompoundStatement		1658:0:35603:35824	890557	0					
ANR	890560	ExpressionStatement	ULogEvent :: initFromClassAd ( ad )	1659:1:35606:35636	890557	0	True				
ANR	890561	CallExpression	ULogEvent :: initFromClassAd ( ad )		890557	0					
ANR	890562	Callee	ULogEvent :: initFromClassAd		890557	0					
ANR	890563	Identifier	ULogEvent :: initFromClassAd		890557	0					
ANR	890564	ArgumentList	ad		890557	1					
ANR	890565	Argument	ad		890557	0					
ANR	890566	Identifier	ad		890557	0					
ANR	890567	IfStatement	if ( ! ad )		890557	1					
ANR	890568	Condition	! ad	1661:5:35644:35646	890557	0	True				
ANR	890569	UnaryOperationExpression	! ad		890557	0					
ANR	890570	UnaryOperator	!		890557	0					
ANR	890571	Identifier	ad		890557	1					
ANR	890572	ReturnStatement	return ;	1661:11:35650:35656	890557	1	True				
ANR	890573	IdentifierDeclStatement	char * mallocstr = NULL ;	1663:1:35660:35682	890557	2	True				
ANR	890574	IdentifierDecl	* mallocstr = NULL		890557	0					
ANR	890575	IdentifierDeclType	char *		890557	0					
ANR	890576	Identifier	mallocstr		890557	1					
ANR	890577	AssignmentExpression	* mallocstr = NULL		890557	2		=			
ANR	890578	Identifier	NULL		890557	0					
ANR	890579	Identifier	NULL		890557	1					
ANR	890580	ExpressionStatement	"ad -> LookupString ( ""ExecuteHost"" , & mallocstr )"	1664:1:35685:35728	890557	3	True				
ANR	890581	CallExpression	"ad -> LookupString ( ""ExecuteHost"" , & mallocstr )"		890557	0					
ANR	890582	Callee	ad -> LookupString		890557	0					
ANR	890583	PtrMemberAccess	ad -> LookupString		890557	0					
ANR	890584	Identifier	ad		890557	0					
ANR	890585	Identifier	LookupString		890557	1					
ANR	890586	ArgumentList	"""ExecuteHost"""		890557	1					
ANR	890587	Argument	"""ExecuteHost"""		890557	0					
ANR	890588	PrimaryExpression	"""ExecuteHost"""		890557	0					
ANR	890589	Argument	& mallocstr		890557	1					
ANR	890590	UnaryOperationExpression	& mallocstr		890557	0					
ANR	890591	UnaryOperator	&		890557	0					
ANR	890592	Identifier	mallocstr		890557	1					
ANR	890593	IfStatement	if ( mallocstr )		890557	4					
ANR	890594	Condition	mallocstr	1665:5:35735:35743	890557	0	True				
ANR	890595	Identifier	mallocstr		890557	0					
ANR	890596	CompoundStatement		8:17:143:143	890557	1					
ANR	890597	ExpressionStatement	setExecuteHost ( mallocstr )	1666:2:35751:35778	890557	0	True				
ANR	890598	CallExpression	setExecuteHost ( mallocstr )		890557	0					
ANR	890599	Callee	setExecuteHost		890557	0					
ANR	890600	Identifier	setExecuteHost		890557	0					
ANR	890601	ArgumentList	mallocstr		890557	1					
ANR	890602	Argument	mallocstr		890557	0					
ANR	890603	Identifier	mallocstr		890557	0					
ANR	890604	ExpressionStatement	free ( mallocstr )	1667:2:35782:35799	890557	1	True				
ANR	890605	CallExpression	free ( mallocstr )		890557	0					
ANR	890606	Callee	free		890557	0					
ANR	890607	Identifier	free		890557	0					
ANR	890608	ArgumentList	mallocstr		890557	1					
ANR	890609	Argument	mallocstr		890557	0					
ANR	890610	Identifier	mallocstr		890557	0					
ANR	890611	ExpressionStatement	mallocstr = NULL	1668:2:35803:35819	890557	2	True				
ANR	890612	AssignmentExpression	mallocstr = NULL		890557	0		=			
ANR	890613	Identifier	mallocstr		890557	0					
ANR	890614	Identifier	NULL		890557	1					
ANR	890615	ReturnType	void		890557	1					
ANR	890616	Identifier	ExecuteEvent :: initFromClassAd		890557	2					
ANR	890617	ParameterList	ClassAd * ad		890557	3					
ANR	890618	Parameter	ClassAd * ad	1657:30:35590:35600	890557	0	True				
ANR	890619	ParameterType	ClassAd *		890557	0					
ANR	890620	Identifier	ad		890557	1					
ANR	890621	CFGEntryNode	ENTRY		890557		True				
ANR	890622	CFGExitNode	EXIT		890557		True				
ANR	890623	Symbol	& mallocstr		890557						
ANR	890624	Symbol	ad		890557						
ANR	890625	Symbol	NULL		890557						
ANR	890626	Symbol	mallocstr		890557						
ANR	890627	Function	ExecutableErrorEvent :: ExecutableErrorEvent	1674:0:35863:35983							
ANR	890628	FunctionDef	ExecutableErrorEvent :: ExecutableErrorEvent ()		890627	0					
ANR	890629	CompoundStatement		1675:0:35912:35983	890627	0					
ANR	890630	ExpressionStatement	errType = ( ExecErrorType ) - 1	1676:1:35915:35943	890627	0	True				
ANR	890631	AssignmentExpression	errType = ( ExecErrorType ) - 1		890627	0		=			
ANR	890632	Identifier	errType		890627	0					
ANR	890633	CastExpression	( ExecErrorType ) - 1		890627	1					
ANR	890634	CastTarget	ExecErrorType		890627	0					
ANR	890635	UnaryOperationExpression	- 1		890627	1					
ANR	890636	UnaryOperator	-		890627	0					
ANR	890637	PrimaryExpression	1		890627	1					
ANR	890638	ExpressionStatement	eventNumber = ULOG_EXECUTABLE_ERROR	1677:1:35946:35981	890627	1	True				
ANR	890639	AssignmentExpression	eventNumber = ULOG_EXECUTABLE_ERROR		890627	0		=			
ANR	890640	Identifier	eventNumber		890627	0					
ANR	890641	Identifier	ULOG_EXECUTABLE_ERROR		890627	1					
ANR	890642	Identifier	ExecutableErrorEvent :: ExecutableErrorEvent		890627	1					
ANR	890643	ParameterList			890627	2					
ANR	890644	CFGEntryNode	ENTRY		890627		True				
ANR	890645	CFGExitNode	EXIT		890627		True				
ANR	890646	Symbol	errType		890627						
ANR	890647	Symbol	eventNumber		890627						
ANR	890648	Symbol	ULOG_EXECUTABLE_ERROR		890627						
ANR	890649	Function	ExecutableErrorEvent :: ~ExecutableErrorEvent	1681:0:35987:36039							
ANR	890650	FunctionDef	ExecutableErrorEvent :: ~ExecutableErrorEvent ()		890649	0					
ANR	890651	CompoundStatement		1682:0:36037:36039	890649	0					
ANR	890652	Identifier	ExecutableErrorEvent :: ~ExecutableErrorEvent		890649	1					
ANR	890653	ParameterList			890649	2					
ANR	890654	CFGEntryNode	ENTRY		890649		True				
ANR	890655	CFGExitNode	EXIT		890649		True				
ANR	890656	Function	ExecutableErrorEvent :: writeEvent	1685:0:36042:37291							
ANR	890657	FunctionDef	ExecutableErrorEvent :: writeEvent (FILE * file)		890656	0					
ANR	890658	CompoundStatement		1687:0:36092:37291	890656	0					
ANR	890659	IdentifierDeclStatement	int retval ;	1688:1:36095:36105	890656	0	True				
ANR	890660	IdentifierDecl	retval		890656	0					
ANR	890661	IdentifierDeclType	int		890656	0					
ANR	890662	Identifier	retval		890656	1					
ANR	890663	IdentifierDeclStatement	char messagestr [ 512 ] ;	1689:1:36108:36128	890656	1	True				
ANR	890664	IdentifierDecl	messagestr [ 512 ]		890656	0					
ANR	890665	IdentifierDeclType	char [ 512 ]		890656	0					
ANR	890666	Identifier	messagestr		890656	1					
ANR	890667	PrimaryExpression	512		890656	2					
ANR	890668	IdentifierDeclStatement	"ClassAd tmpCl1 , tmpCl2 ;"	1690:1:36131:36153	890656	2	True				
ANR	890669	IdentifierDecl	tmpCl1		890656	0					
ANR	890670	IdentifierDeclType	ClassAd		890656	0					
ANR	890671	Identifier	tmpCl1		890656	1					
ANR	890672	IdentifierDecl	tmpCl2		890656	1					
ANR	890673	IdentifierDeclType	ClassAd		890656	0					
ANR	890674	Identifier	tmpCl2		890656	1					
ANR	890675	IdentifierDeclStatement	"MyString tmp = """" ;"	1692:1:36207:36224	890656	3	True				
ANR	890676	IdentifierDecl	"tmp = """""		890656	0					
ANR	890677	IdentifierDeclType	MyString		890656	0					
ANR	890678	Identifier	tmp		890656	1					
ANR	890679	AssignmentExpression	"tmp = """""		890656	2		=			
ANR	890680	Identifier	tmp		890656	0					
ANR	890681	PrimaryExpression	""""""		890656	1					
ANR	890682	ExpressionStatement	scheddname = getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )	1694:1:36228:36280	890656	4	True				
ANR	890683	AssignmentExpression	scheddname = getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )		890656	0		=			
ANR	890684	Identifier	scheddname		890656	0					
ANR	890685	CallExpression	getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )		890656	1					
ANR	890686	Callee	getenv		890656	0					
ANR	890687	Identifier	getenv		890656	0					
ANR	890688	ArgumentList	EnvGetName ( ENV_SCHEDD_NAME )		890656	1					
ANR	890689	Argument	EnvGetName ( ENV_SCHEDD_NAME )		890656	0					
ANR	890690	CallExpression	EnvGetName ( ENV_SCHEDD_NAME )		890656	0					
ANR	890691	Callee	EnvGetName		890656	0					
ANR	890692	Identifier	EnvGetName		890656	0					
ANR	890693	ArgumentList	ENV_SCHEDD_NAME		890656	1					
ANR	890694	Argument	ENV_SCHEDD_NAME		890656	0					
ANR	890695	Identifier	ENV_SCHEDD_NAME		890656	0					
ANR	890696	ExpressionStatement	"tmpCl1 . Assign ( ""endts"" , ( int ) eventclock )"	1696:1:36284:36323	890656	5	True				
ANR	890697	CallExpression	"tmpCl1 . Assign ( ""endts"" , ( int ) eventclock )"		890656	0					
ANR	890698	Callee	tmpCl1 . Assign		890656	0					
ANR	890699	MemberAccess	tmpCl1 . Assign		890656	0					
ANR	890700	Identifier	tmpCl1		890656	0					
ANR	890701	Identifier	Assign		890656	1					
ANR	890702	ArgumentList	"""endts"""		890656	1					
ANR	890703	Argument	"""endts"""		890656	0					
ANR	890704	PrimaryExpression	"""endts"""		890656	0					
ANR	890705	Argument	( int ) eventclock		890656	1					
ANR	890706	CastExpression	( int ) eventclock		890656	0					
ANR	890707	CastTarget	int		890656	0					
ANR	890708	Identifier	eventclock		890656	1					
ANR	890709	ExpressionStatement	"tmpCl1 . Assign ( ""endtype"" , ULOG_EXECUTABLE_ERROR )"	1697:1:36326:36373	890656	6	True				
ANR	890710	CallExpression	"tmpCl1 . Assign ( ""endtype"" , ULOG_EXECUTABLE_ERROR )"		890656	0					
ANR	890711	Callee	tmpCl1 . Assign		890656	0					
ANR	890712	MemberAccess	tmpCl1 . Assign		890656	0					
ANR	890713	Identifier	tmpCl1		890656	0					
ANR	890714	Identifier	Assign		890656	1					
ANR	890715	ArgumentList	"""endtype"""		890656	1					
ANR	890716	Argument	"""endtype"""		890656	0					
ANR	890717	PrimaryExpression	"""endtype"""		890656	0					
ANR	890718	Argument	ULOG_EXECUTABLE_ERROR		890656	1					
ANR	890719	Identifier	ULOG_EXECUTABLE_ERROR		890656	0					
ANR	890720	ExpressionStatement	"tmpCl1 . Assign ( ""endmessage"" , messagestr )"	1698:1:36376:36415	890656	7	True				
ANR	890721	CallExpression	"tmpCl1 . Assign ( ""endmessage"" , messagestr )"		890656	0					
ANR	890722	Callee	tmpCl1 . Assign		890656	0					
ANR	890723	MemberAccess	tmpCl1 . Assign		890656	0					
ANR	890724	Identifier	tmpCl1		890656	0					
ANR	890725	Identifier	Assign		890656	1					
ANR	890726	ArgumentList	"""endmessage"""		890656	1					
ANR	890727	Argument	"""endmessage"""		890656	0					
ANR	890728	PrimaryExpression	"""endmessage"""		890656	0					
ANR	890729	Argument	messagestr		890656	1					
ANR	890730	Identifier	messagestr		890656	0					
ANR	890731	ExpressionStatement	insertCommonIdentifiers ( tmpCl2 )	1701:1:36467:36498	890656	8	True				
ANR	890732	CallExpression	insertCommonIdentifiers ( tmpCl2 )		890656	0					
ANR	890733	Callee	insertCommonIdentifiers		890656	0					
ANR	890734	Identifier	insertCommonIdentifiers		890656	0					
ANR	890735	ArgumentList	tmpCl2		890656	1					
ANR	890736	Argument	tmpCl2		890656	0					
ANR	890737	Identifier	tmpCl2		890656	0					
ANR	890738	ExpressionStatement	"tmp . sprintf ( ""endtype = null"" )"	1703:1:36502:36532	890656	9	True				
ANR	890739	CallExpression	"tmp . sprintf ( ""endtype = null"" )"		890656	0					
ANR	890740	Callee	tmp . sprintf		890656	0					
ANR	890741	MemberAccess	tmp . sprintf		890656	0					
ANR	890742	Identifier	tmp		890656	0					
ANR	890743	Identifier	sprintf		890656	1					
ANR	890744	ArgumentList	"""endtype = null"""		890656	1					
ANR	890745	Argument	"""endtype = null"""		890656	0					
ANR	890746	PrimaryExpression	"""endtype = null"""		890656	0					
ANR	890747	ExpressionStatement	tmpCl2 . Insert ( tmp . Value ( ) )	1704:1:36535:36561	890656	10	True				
ANR	890748	CallExpression	tmpCl2 . Insert ( tmp . Value ( ) )		890656	0					
ANR	890749	Callee	tmpCl2 . Insert		890656	0					
ANR	890750	MemberAccess	tmpCl2 . Insert		890656	0					
ANR	890751	Identifier	tmpCl2		890656	0					
ANR	890752	Identifier	Insert		890656	1					
ANR	890753	ArgumentList	tmp . Value ( )		890656	1					
ANR	890754	Argument	tmp . Value ( )		890656	0					
ANR	890755	CallExpression	tmp . Value ( )		890656	0					
ANR	890756	Callee	tmp . Value		890656	0					
ANR	890757	MemberAccess	tmp . Value		890656	0					
ANR	890758	Identifier	tmp		890656	0					
ANR	890759	Identifier	Value		890656	1					
ANR	890760	ArgumentList			890656	1					
ANR	890761	IfStatement	if ( FILEObj )		890656	11					
ANR	890762	Condition	FILEObj	1706:5:36569:36575	890656	0	True				
ANR	890763	Identifier	FILEObj		890656	0					
ANR	890764	CompoundStatement		20:14:485:485	890656	1					
ANR	890765	IfStatement	"if ( FILEObj -> file_updateEvent ( ""Runs"" , & tmpCl1 , & tmpCl2 ) == QUILL_FAILURE )"		890656	0					
ANR	890766	Condition	"FILEObj -> file_updateEvent ( ""Runs"" , & tmpCl1 , & tmpCl2 ) == QUILL_FAILURE"	1707:6:36586:36653	890656	0	True				
ANR	890767	EqualityExpression	"FILEObj -> file_updateEvent ( ""Runs"" , & tmpCl1 , & tmpCl2 ) == QUILL_FAILURE"		890656	0		==			
ANR	890768	CallExpression	"FILEObj -> file_updateEvent ( ""Runs"" , & tmpCl1 , & tmpCl2 )"		890656	0					
ANR	890769	Callee	FILEObj -> file_updateEvent		890656	0					
ANR	890770	PtrMemberAccess	FILEObj -> file_updateEvent		890656	0					
ANR	890771	Identifier	FILEObj		890656	0					
ANR	890772	Identifier	file_updateEvent		890656	1					
ANR	890773	ArgumentList	"""Runs"""		890656	1					
ANR	890774	Argument	"""Runs"""		890656	0					
ANR	890775	PrimaryExpression	"""Runs"""		890656	0					
ANR	890776	Argument	& tmpCl1		890656	1					
ANR	890777	UnaryOperationExpression	& tmpCl1		890656	0					
ANR	890778	UnaryOperator	&		890656	0					
ANR	890779	Identifier	tmpCl1		890656	1					
ANR	890780	Argument	& tmpCl2		890656	2					
ANR	890781	UnaryOperationExpression	& tmpCl2		890656	0					
ANR	890782	UnaryOperator	&		890656	0					
ANR	890783	Identifier	tmpCl2		890656	1					
ANR	890784	Identifier	QUILL_FAILURE		890656	1					
ANR	890785	CompoundStatement		21:76:563:563	890656	1					
ANR	890786	ExpressionStatement	"dprintf ( D_ALWAYS , ""Logging Event 12--- Error\\n"" )"	1708:3:36661:36709	890656	0	True				
ANR	890787	CallExpression	"dprintf ( D_ALWAYS , ""Logging Event 12--- Error\\n"" )"		890656	0					
ANR	890788	Callee	dprintf		890656	0					
ANR	890789	Identifier	dprintf		890656	0					
ANR	890790	ArgumentList	D_ALWAYS		890656	1					
ANR	890791	Argument	D_ALWAYS		890656	0					
ANR	890792	Identifier	D_ALWAYS		890656	0					
ANR	890793	Argument	"""Logging Event 12--- Error\\n"""		890656	1					
ANR	890794	PrimaryExpression	"""Logging Event 12--- Error\\n"""		890656	0					
ANR	890795	ReturnStatement	return 0 ;	1709:3:36714:36722	890656	1	True				
ANR	890796	PrimaryExpression	0		890656	0					
ANR	890797	SwitchStatement	switch ( errType )		890656	12					
ANR	890798	Condition	errType	1713:9:36767:36773	890656	0	True				
ANR	890799	Identifier	errType		890656	0					
ANR	890800	CompoundStatement		28:1:684:684	890656	1					
ANR	890801	Label	case CONDOR_EVENT_NOT_EXECUTABLE :	1715:3:36782:36814	890656	0	True				
ANR	890802	Identifier	CONDOR_EVENT_NOT_EXECUTABLE		890656	0					
ANR	890803	ExpressionStatement	"retval = fprintf ( file , ""(%d) Job file not executable.\\n"" , errType )"	1716:2:36818:36885	890656	1	True				
ANR	890804	AssignmentExpression	"retval = fprintf ( file , ""(%d) Job file not executable.\\n"" , errType )"		890656	0		=			
ANR	890805	Identifier	retval		890656	0					
ANR	890806	CallExpression	"fprintf ( file , ""(%d) Job file not executable.\\n"" , errType )"		890656	1					
ANR	890807	Callee	fprintf		890656	0					
ANR	890808	Identifier	fprintf		890656	0					
ANR	890809	ArgumentList	file		890656	1					
ANR	890810	Argument	file		890656	0					
ANR	890811	Identifier	file		890656	0					
ANR	890812	Argument	"""(%d) Job file not executable.\\n"""		890656	1					
ANR	890813	PrimaryExpression	"""(%d) Job file not executable.\\n"""		890656	0					
ANR	890814	Argument	errType		890656	2					
ANR	890815	Identifier	errType		890656	0					
ANR	890816	ExpressionStatement	"sprintf ( messagestr , ""Job file not executable"" )"	1717:2:36889:36936	890656	2	True				
ANR	890817	CallExpression	"sprintf ( messagestr , ""Job file not executable"" )"		890656	0					
ANR	890818	Callee	sprintf		890656	0					
ANR	890819	Identifier	sprintf		890656	0					
ANR	890820	ArgumentList	messagestr		890656	1					
ANR	890821	Argument	messagestr		890656	0					
ANR	890822	Identifier	messagestr		890656	0					
ANR	890823	Argument	"""Job file not executable"""		890656	1					
ANR	890824	PrimaryExpression	"""Job file not executable"""		890656	0					
ANR	890825	BreakStatement	break ;	1718:2:36940:36945	890656	3	True				
ANR	890826	Label	case CONDOR_EVENT_BAD_LINK :	1720:3:36951:36977	890656	4	True				
ANR	890827	Identifier	CONDOR_EVENT_BAD_LINK		890656	0					
ANR	890828	ExpressionStatement	"retval = fprintf ( file , ""(%d) Job not properly linked for Condor.\\n"" , errType )"	1721:2:36981:37055	890656	5	True				
ANR	890829	AssignmentExpression	"retval = fprintf ( file , ""(%d) Job not properly linked for Condor.\\n"" , errType )"		890656	0		=			
ANR	890830	Identifier	retval		890656	0					
ANR	890831	CallExpression	"fprintf ( file , ""(%d) Job not properly linked for Condor.\\n"" , errType )"		890656	1					
ANR	890832	Callee	fprintf		890656	0					
ANR	890833	Identifier	fprintf		890656	0					
ANR	890834	ArgumentList	file		890656	1					
ANR	890835	Argument	file		890656	0					
ANR	890836	Identifier	file		890656	0					
ANR	890837	Argument	"""(%d) Job not properly linked for Condor.\\n"""		890656	1					
ANR	890838	PrimaryExpression	"""(%d) Job not properly linked for Condor.\\n"""		890656	0					
ANR	890839	Argument	errType		890656	2					
ANR	890840	Identifier	errType		890656	0					
ANR	890841	ExpressionStatement	"sprintf ( messagestr , ""Job not properly linked for Condor"" )"	1722:2:37059:37117	890656	6	True				
ANR	890842	CallExpression	"sprintf ( messagestr , ""Job not properly linked for Condor"" )"		890656	0					
ANR	890843	Callee	sprintf		890656	0					
ANR	890844	Identifier	sprintf		890656	0					
ANR	890845	ArgumentList	messagestr		890656	1					
ANR	890846	Argument	messagestr		890656	0					
ANR	890847	Identifier	messagestr		890656	0					
ANR	890848	Argument	"""Job not properly linked for Condor"""		890656	1					
ANR	890849	PrimaryExpression	"""Job not properly linked for Condor"""		890656	0					
ANR	890850	BreakStatement	break ;	1723:2:37121:37126	890656	7	True				
ANR	890851	Label	default :	1725:3:37132:37139	890656	8	True				
ANR	890852	Identifier	default		890656	0					
ANR	890853	ExpressionStatement	"retval = fprintf ( file , ""(%d) [Bad error number.]\\n"" , errType )"	1726:2:37143:37205	890656	9	True				
ANR	890854	AssignmentExpression	"retval = fprintf ( file , ""(%d) [Bad error number.]\\n"" , errType )"		890656	0		=			
ANR	890855	Identifier	retval		890656	0					
ANR	890856	CallExpression	"fprintf ( file , ""(%d) [Bad error number.]\\n"" , errType )"		890656	1					
ANR	890857	Callee	fprintf		890656	0					
ANR	890858	Identifier	fprintf		890656	0					
ANR	890859	ArgumentList	file		890656	1					
ANR	890860	Argument	file		890656	0					
ANR	890861	Identifier	file		890656	0					
ANR	890862	Argument	"""(%d) [Bad error number.]\\n"""		890656	1					
ANR	890863	PrimaryExpression	"""(%d) [Bad error number.]\\n"""		890656	0					
ANR	890864	Argument	errType		890656	2					
ANR	890865	Identifier	errType		890656	0					
ANR	890866	ExpressionStatement	"sprintf ( messagestr , ""Unknown error"" )"	1727:2:37209:37246	890656	10	True				
ANR	890867	CallExpression	"sprintf ( messagestr , ""Unknown error"" )"		890656	0					
ANR	890868	Callee	sprintf		890656	0					
ANR	890869	Identifier	sprintf		890656	0					
ANR	890870	ArgumentList	messagestr		890656	1					
ANR	890871	Argument	messagestr		890656	0					
ANR	890872	Identifier	messagestr		890656	0					
ANR	890873	Argument	"""Unknown error"""		890656	1					
ANR	890874	PrimaryExpression	"""Unknown error"""		890656	0					
ANR	890875	IfStatement	if ( retval < 0 )		890656	13					
ANR	890876	Condition	retval < 0	1730:5:37257:37266	890656	0	True				
ANR	890877	RelationalExpression	retval < 0		890656	0		<			
ANR	890878	Identifier	retval		890656	0					
ANR	890879	PrimaryExpression	0		890656	1					
ANR	890880	ReturnStatement	return 0 ;	1730:17:37269:37277	890656	1	True				
ANR	890881	PrimaryExpression	0		890656	0					
ANR	890882	ReturnStatement	return 1 ;	1732:1:37281:37289	890656	14	True				
ANR	890883	PrimaryExpression	1		890656	0					
ANR	890884	ReturnType	int		890656	1					
ANR	890885	Identifier	ExecutableErrorEvent :: writeEvent		890656	2					
ANR	890886	ParameterList	FILE * file		890656	3					
ANR	890887	Parameter	FILE * file	1686:34:36080:36089	890656	0	True				
ANR	890888	ParameterType	FILE *		890656	0					
ANR	890889	Identifier	file		890656	1					
ANR	890890	CFGEntryNode	ENTRY		890656		True				
ANR	890891	CFGExitNode	EXIT		890656		True				
ANR	890892	Symbol	scheddname		890656						
ANR	890893	Symbol	D_ALWAYS		890656						
ANR	890894	Symbol	tmp . Value		890656						
ANR	890895	Symbol	EnvGetName		890656						
ANR	890896	Symbol	ENV_SCHEDD_NAME		890656						
ANR	890897	Symbol	QUILL_FAILURE		890656						
ANR	890898	Symbol	fprintf		890656						
ANR	890899	Symbol	retval		890656						
ANR	890900	Symbol	FILEObj		890656						
ANR	890901	Symbol	* FILEObj		890656						
ANR	890902	Symbol	& tmpCl1		890656						
ANR	890903	Symbol	FILEObj -> file_updateEvent		890656						
ANR	890904	Symbol	file		890656						
ANR	890905	Symbol	messagestr		890656						
ANR	890906	Symbol	errType		890656						
ANR	890907	Symbol	tmpCl2		890656						
ANR	890908	Symbol	eventclock		890656						
ANR	890909	Symbol	tmp		890656						
ANR	890910	Symbol	& tmpCl2		890656						
ANR	890911	Symbol	tmpCl1		890656						
ANR	890912	Symbol	ULOG_EXECUTABLE_ERROR		890656						
ANR	890913	Symbol	getenv		890656						
ANR	890914	Function	ExecutableErrorEvent :: readEvent	1736:0:37295:37594							
ANR	890915	FunctionDef	ExecutableErrorEvent :: readEvent (FILE * file)		890914	0					
ANR	890916	CompoundStatement		1738:0:37344:37594	890914	0					
ANR	890917	IdentifierDeclStatement	int retval ;	1739:1:37347:37358	890914	0	True				
ANR	890918	IdentifierDecl	retval		890914	0					
ANR	890919	IdentifierDeclType	int		890914	0					
ANR	890920	Identifier	retval		890914	1					
ANR	890921	IdentifierDeclStatement	char buffer [ 128 ] ;	1740:1:37361:37378	890914	1	True				
ANR	890922	IdentifierDecl	buffer [ 128 ]		890914	0					
ANR	890923	IdentifierDeclType	char [ 128 ]		890914	0					
ANR	890924	Identifier	buffer		890914	1					
ANR	890925	PrimaryExpression	128		890914	2					
ANR	890926	ExpressionStatement	"retval = fscanf ( file , ""(%d)"" , ( int * ) & errType )"	1743:1:37407:37453	890914	2	True				
ANR	890927	AssignmentExpression	"retval = fscanf ( file , ""(%d)"" , ( int * ) & errType )"		890914	0		=			
ANR	890928	Identifier	retval		890914	0					
ANR	890929	CallExpression	"fscanf ( file , ""(%d)"" , ( int * ) & errType )"		890914	1					
ANR	890930	Callee	fscanf		890914	0					
ANR	890931	Identifier	fscanf		890914	0					
ANR	890932	ArgumentList	file		890914	1					
ANR	890933	Argument	file		890914	0					
ANR	890934	Identifier	file		890914	0					
ANR	890935	Argument	"""(%d)"""		890914	1					
ANR	890936	PrimaryExpression	"""(%d)"""		890914	0					
ANR	890937	Argument	( int * ) & errType		890914	2					
ANR	890938	CastExpression	( int * ) & errType		890914	0					
ANR	890939	CastTarget	int *		890914	0					
ANR	890940	UnaryOperationExpression	& errType		890914	1					
ANR	890941	UnaryOperator	&		890914	0					
ANR	890942	Identifier	errType		890914	1					
ANR	890943	IfStatement	if ( retval != 1 )		890914	3					
ANR	890944	Condition	retval != 1	1744:5:37460:37470	890914	0	True				
ANR	890945	EqualityExpression	retval != 1		890914	0		!=			
ANR	890946	Identifier	retval		890914	0					
ANR	890947	PrimaryExpression	1		890914	1					
ANR	890948	CompoundStatement		8:1:129:129	890914	1					
ANR	890949	ReturnStatement	return 0 ;	1746:2:37478:37486	890914	0	True				
ANR	890950	PrimaryExpression	0		890914	0					
ANR	890951	IfStatement	"if ( fgets ( buffer , 128 , file ) == 0 )"		890914	4					
ANR	890952	Condition	"fgets ( buffer , 128 , file ) == 0"	1750:5:37532:37561	890914	0	True				
ANR	890953	EqualityExpression	"fgets ( buffer , 128 , file ) == 0"		890914	0		==			
ANR	890954	CallExpression	"fgets ( buffer , 128 , file )"		890914	0					
ANR	890955	Callee	fgets		890914	0					
ANR	890956	Identifier	fgets		890914	0					
ANR	890957	ArgumentList	buffer		890914	1					
ANR	890958	Argument	buffer		890914	0					
ANR	890959	Identifier	buffer		890914	0					
ANR	890960	Argument	128		890914	1					
ANR	890961	PrimaryExpression	128		890914	0					
ANR	890962	Argument	file		890914	2					
ANR	890963	Identifier	file		890914	0					
ANR	890964	PrimaryExpression	0		890914	1					
ANR	890965	CompoundStatement		14:1:220:220	890914	1					
ANR	890966	ReturnStatement	return 0 ;	1752:2:37569:37577	890914	0	True				
ANR	890967	PrimaryExpression	0		890914	0					
ANR	890968	ReturnStatement	return 1 ;	1755:1:37584:37592	890914	5	True				
ANR	890969	PrimaryExpression	1		890914	0					
ANR	890970	ReturnType	int		890914	1					
ANR	890971	Identifier	ExecutableErrorEvent :: readEvent		890914	2					
ANR	890972	ParameterList	FILE * file		890914	3					
ANR	890973	Parameter	FILE * file	1737:33:37332:37341	890914	0	True				
ANR	890974	ParameterType	FILE *		890914	0					
ANR	890975	Identifier	file		890914	1					
ANR	890976	CFGEntryNode	ENTRY		890914		True				
ANR	890977	CFGExitNode	EXIT		890914		True				
ANR	890978	Symbol	fscanf		890914						
ANR	890979	Symbol	file		890914						
ANR	890980	Symbol	buffer		890914						
ANR	890981	Symbol	retval		890914						
ANR	890982	Symbol	fgets		890914						
ANR	890983	Symbol	& errType		890914						
ANR	890984	Function	ExecutableErrorEvent :: toClassAd	1758:0:37597:37886							
ANR	890985	FunctionDef	ExecutableErrorEvent :: toClassAd ()		890984	0					
ANR	890986	CompoundStatement		1760:0:37644:37886	890984	0					
ANR	890987	IdentifierDeclStatement	ClassAd * myad = ULogEvent :: toClassAd ( ) ;	1761:1:37647:37685	890984	0	True				
ANR	890988	IdentifierDecl	* myad = ULogEvent :: toClassAd ( )		890984	0					
ANR	890989	IdentifierDeclType	ClassAd *		890984	0					
ANR	890990	Identifier	myad		890984	1					
ANR	890991	AssignmentExpression	* myad = ULogEvent :: toClassAd ( )		890984	2		=			
ANR	890992	Identifier	myad		890984	0					
ANR	890993	CallExpression	ULogEvent :: toClassAd ( )		890984	1					
ANR	890994	Callee	ULogEvent :: toClassAd		890984	0					
ANR	890995	Identifier	ULogEvent :: toClassAd		890984	0					
ANR	890996	ArgumentList			890984	1					
ANR	890997	IfStatement	if ( ! myad )		890984	1					
ANR	890998	Condition	! myad	1762:5:37692:37696	890984	0	True				
ANR	890999	UnaryOperationExpression	! myad		890984	0					
ANR	891000	UnaryOperator	!		890984	0					
ANR	891001	Identifier	myad		890984	1					
ANR	891002	ReturnStatement	return NULL ;	1762:13:37700:37711	890984	1	True				
ANR	891003	Identifier	NULL		890984	0					
ANR	891004	IdentifierDeclStatement	char buf0 [ 512 ] ;	1763:1:37714:37728	890984	2	True				
ANR	891005	IdentifierDecl	buf0 [ 512 ]		890984	0					
ANR	891006	IdentifierDeclType	char [ 512 ]		890984	0					
ANR	891007	Identifier	buf0		890984	1					
ANR	891008	PrimaryExpression	512		890984	2					
ANR	891009	IfStatement	if ( errType >= 0 )		890984	3					
ANR	891010	Condition	errType >= 0	1765:5:37736:37747	890984	0	True				
ANR	891011	RelationalExpression	errType >= 0		890984	0		>=			
ANR	891012	Identifier	errType		890984	0					
ANR	891013	PrimaryExpression	0		890984	1					
ANR	891014	CompoundStatement		6:20:106:106	890984	1					
ANR	891015	ExpressionStatement	"snprintf ( buf0 , 512 , ""ExecuteErrorType = %d"" , errType )"	1766:2:37755:37808	890984	0	True				
ANR	891016	CallExpression	"snprintf ( buf0 , 512 , ""ExecuteErrorType = %d"" , errType )"		890984	0					
ANR	891017	Callee	snprintf		890984	0					
ANR	891018	Identifier	snprintf		890984	0					
ANR	891019	ArgumentList	buf0		890984	1					
ANR	891020	Argument	buf0		890984	0					
ANR	891021	Identifier	buf0		890984	0					
ANR	891022	Argument	512		890984	1					
ANR	891023	PrimaryExpression	512		890984	0					
ANR	891024	Argument	"""ExecuteErrorType = %d"""		890984	2					
ANR	891025	PrimaryExpression	"""ExecuteErrorType = %d"""		890984	0					
ANR	891026	Argument	errType		890984	3					
ANR	891027	Identifier	errType		890984	0					
ANR	891028	ExpressionStatement	buf0 [ 511 ] = 0	1767:2:37812:37825	890984	1	True				
ANR	891029	AssignmentExpression	buf0 [ 511 ] = 0		890984	0		=			
ANR	891030	ArrayIndexing	buf0 [ 511 ]		890984	0					
ANR	891031	Identifier	buf0		890984	0					
ANR	891032	PrimaryExpression	511		890984	1					
ANR	891033	PrimaryExpression	0		890984	1					
ANR	891034	IfStatement	if ( ! myad -> Insert ( buf0 ) )		890984	2					
ANR	891035	Condition	! myad -> Insert ( buf0 )	1768:6:37833:37851	890984	0	True				
ANR	891036	UnaryOperationExpression	! myad -> Insert ( buf0 )		890984	0					
ANR	891037	UnaryOperator	!		890984	0					
ANR	891038	CallExpression	myad -> Insert ( buf0 )		890984	1					
ANR	891039	Callee	myad -> Insert		890984	0					
ANR	891040	PtrMemberAccess	myad -> Insert		890984	0					
ANR	891041	Identifier	myad		890984	0					
ANR	891042	Identifier	Insert		890984	1					
ANR	891043	ArgumentList	buf0		890984	1					
ANR	891044	Argument	buf0		890984	0					
ANR	891045	Identifier	buf0		890984	0					
ANR	891046	ReturnStatement	return NULL ;	1768:28:37855:37866	890984	1	True				
ANR	891047	Identifier	NULL		890984	0					
ANR	891048	ReturnStatement	return myad ;	1771:1:37873:37884	890984	4	True				
ANR	891049	Identifier	myad		890984	0					
ANR	891050	ReturnType	ClassAd *		890984	1					
ANR	891051	Identifier	ExecutableErrorEvent :: toClassAd		890984	2					
ANR	891052	ParameterList			890984	3					
ANR	891053	CFGEntryNode	ENTRY		890984		True				
ANR	891054	CFGExitNode	EXIT		890984		True				
ANR	891055	Symbol	NULL		890984						
ANR	891056	Symbol	buf0		890984						
ANR	891057	Symbol	errType		890984						
ANR	891058	Symbol	* myad		890984						
ANR	891059	Symbol	myad -> Insert		890984						
ANR	891060	Symbol	myad		890984						
ANR	891061	Symbol	ULogEvent :: toClassAd		890984						
ANR	891062	Symbol	* buf0		890984						
ANR	891063	Function	ExecutableErrorEvent :: initFromClassAd	1774:0:37889:38304							
ANR	891064	FunctionDef	ExecutableErrorEvent :: initFromClassAd (ClassAd * ad)		891063	0					
ANR	891065	CompoundStatement		1776:0:37945:38304	891063	0					
ANR	891066	ExpressionStatement	ULogEvent :: initFromClassAd ( ad )	1777:1:37948:37978	891063	0	True				
ANR	891067	CallExpression	ULogEvent :: initFromClassAd ( ad )		891063	0					
ANR	891068	Callee	ULogEvent :: initFromClassAd		891063	0					
ANR	891069	Identifier	ULogEvent :: initFromClassAd		891063	0					
ANR	891070	ArgumentList	ad		891063	1					
ANR	891071	Argument	ad		891063	0					
ANR	891072	Identifier	ad		891063	0					
ANR	891073	IfStatement	if ( ! ad )		891063	1					
ANR	891074	Condition	! ad	1779:5:37986:37988	891063	0	True				
ANR	891075	UnaryOperationExpression	! ad		891063	0					
ANR	891076	UnaryOperator	!		891063	0					
ANR	891077	Identifier	ad		891063	1					
ANR	891078	ReturnStatement	return ;	1779:11:37992:37998	891063	1	True				
ANR	891079	IdentifierDeclStatement	int reallyExecErrorType ;	1781:1:38002:38025	891063	2	True				
ANR	891080	IdentifierDecl	reallyExecErrorType		891063	0					
ANR	891081	IdentifierDeclType	int		891063	0					
ANR	891082	Identifier	reallyExecErrorType		891063	1					
ANR	891083	IfStatement	"if ( ad -> LookupInteger ( ""ExecuteErrorType"" , reallyExecErrorType ) )"		891063	3					
ANR	891084	Condition	"ad -> LookupInteger ( ""ExecuteErrorType"" , reallyExecErrorType )"	1782:5:38032:38089	891063	0	True				
ANR	891085	CallExpression	"ad -> LookupInteger ( ""ExecuteErrorType"" , reallyExecErrorType )"		891063	0					
ANR	891086	Callee	ad -> LookupInteger		891063	0					
ANR	891087	PtrMemberAccess	ad -> LookupInteger		891063	0					
ANR	891088	Identifier	ad		891063	0					
ANR	891089	Identifier	LookupInteger		891063	1					
ANR	891090	ArgumentList	"""ExecuteErrorType"""		891063	1					
ANR	891091	Argument	"""ExecuteErrorType"""		891063	0					
ANR	891092	PrimaryExpression	"""ExecuteErrorType"""		891063	0					
ANR	891093	Argument	reallyExecErrorType		891063	1					
ANR	891094	Identifier	reallyExecErrorType		891063	0					
ANR	891095	CompoundStatement		7:66:147:147	891063	1					
ANR	891096	SwitchStatement	switch ( reallyExecErrorType )		891063	0					
ANR	891097	Condition	reallyExecErrorType	1783:10:38105:38123	891063	0	True				
ANR	891098	Identifier	reallyExecErrorType		891063	0					
ANR	891099	CompoundStatement		8:32:181:181	891063	1					
ANR	891100	Label	case CONDOR_EVENT_NOT_EXECUTABLE :	1784:4:38133:38165	891063	0	True				
ANR	891101	Identifier	CONDOR_EVENT_NOT_EXECUTABLE		891063	0					
ANR	891102	ExpressionStatement	errType = CONDOR_EVENT_NOT_EXECUTABLE	1785:3:38170:38207	891063	1	True				
ANR	891103	AssignmentExpression	errType = CONDOR_EVENT_NOT_EXECUTABLE		891063	0		=			
ANR	891104	Identifier	errType		891063	0					
ANR	891105	Identifier	CONDOR_EVENT_NOT_EXECUTABLE		891063	1					
ANR	891106	BreakStatement	break ;	1786:3:38212:38217	891063	2	True				
ANR	891107	Label	case CONDOR_EVENT_BAD_LINK :	1787:4:38223:38249	891063	3	True				
ANR	891108	Identifier	CONDOR_EVENT_BAD_LINK		891063	0					
ANR	891109	ExpressionStatement	errType = CONDOR_EVENT_BAD_LINK	1788:3:38254:38285	891063	4	True				
ANR	891110	AssignmentExpression	errType = CONDOR_EVENT_BAD_LINK		891063	0		=			
ANR	891111	Identifier	errType		891063	0					
ANR	891112	Identifier	CONDOR_EVENT_BAD_LINK		891063	1					
ANR	891113	BreakStatement	break ;	1789:3:38290:38295	891063	5	True				
ANR	891114	ReturnType	void		891063	1					
ANR	891115	Identifier	ExecutableErrorEvent :: initFromClassAd		891063	2					
ANR	891116	ParameterList	ClassAd * ad		891063	3					
ANR	891117	Parameter	ClassAd * ad	1775:38:37932:37942	891063	0	True				
ANR	891118	ParameterType	ClassAd *		891063	0					
ANR	891119	Identifier	ad		891063	1					
ANR	891120	CFGEntryNode	ENTRY		891063		True				
ANR	891121	CFGExitNode	EXIT		891063		True				
ANR	891122	Symbol	reallyExecErrorType		891063						
ANR	891123	Symbol	ad		891063						
ANR	891124	Symbol	errType		891063						
ANR	891125	Symbol	CONDOR_EVENT_NOT_EXECUTABLE		891063						
ANR	891126	Symbol	ad -> LookupInteger		891063						
ANR	891127	Symbol	* ad		891063						
ANR	891128	Symbol	CONDOR_EVENT_BAD_LINK		891063						
ANR	891129	Function	CheckpointedEvent :: CheckpointedEvent	1795:0:38344:38563							
ANR	891130	FunctionDef	CheckpointedEvent :: CheckpointedEvent ()		891129	0					
ANR	891131	CompoundStatement		1796:0:38387:38563	891129	0					
ANR	891132	ExpressionStatement	"( void ) memset ( ( void * ) & run_local_rusage , 0 , ( size_t ) sizeof ( run_local_rusage ) )"	1797:1:38390:38464	891129	0	True				
ANR	891133	CastExpression	"( void ) memset ( ( void * ) & run_local_rusage , 0 , ( size_t ) sizeof ( run_local_rusage ) )"		891129	0					
ANR	891134	CastTarget	void		891129	0					
ANR	891135	CallExpression	"memset ( ( void * ) & run_local_rusage , 0 , ( size_t ) sizeof ( run_local_rusage ) )"		891129	1					
ANR	891136	Callee	memset		891129	0					
ANR	891137	Identifier	memset		891129	0					
ANR	891138	ArgumentList	( void * ) & run_local_rusage		891129	1					
ANR	891139	Argument	( void * ) & run_local_rusage		891129	0					
ANR	891140	CastExpression	( void * ) & run_local_rusage		891129	0					
ANR	891141	CastTarget	void *		891129	0					
ANR	891142	UnaryOperationExpression	& run_local_rusage		891129	1					
ANR	891143	UnaryOperator	&		891129	0					
ANR	891144	Identifier	run_local_rusage		891129	1					
ANR	891145	Argument	0		891129	1					
ANR	891146	PrimaryExpression	0		891129	0					
ANR	891147	Argument	( size_t ) sizeof ( run_local_rusage )		891129	2					
ANR	891148	CastExpression	( size_t ) sizeof ( run_local_rusage )		891129	0					
ANR	891149	CastTarget	size_t		891129	0					
ANR	891150	SizeofExpression	sizeof ( run_local_rusage )		891129	1					
ANR	891151	Sizeof	sizeof		891129	0					
ANR	891152	SizeofOperand	run_local_rusage		891129	1					
ANR	891153	ExpressionStatement	run_remote_rusage = run_local_rusage	1798:1:38467:38503	891129	1	True				
ANR	891154	AssignmentExpression	run_remote_rusage = run_local_rusage		891129	0		=			
ANR	891155	Identifier	run_remote_rusage		891129	0					
ANR	891156	Identifier	run_local_rusage		891129	1					
ANR	891157	ExpressionStatement	eventNumber = ULOG_CHECKPOINTED	1800:1:38507:38538	891129	2	True				
ANR	891158	AssignmentExpression	eventNumber = ULOG_CHECKPOINTED		891129	0		=			
ANR	891159	Identifier	eventNumber		891129	0					
ANR	891160	Identifier	ULOG_CHECKPOINTED		891129	1					
ANR	891161	ExpressionStatement	sent_bytes = 0.0	1802:4:38545:38561	891129	3	True				
ANR	891162	AssignmentExpression	sent_bytes = 0.0		891129	0		=			
ANR	891163	Identifier	sent_bytes		891129	0					
ANR	891164	PrimaryExpression	0.0		891129	1					
ANR	891165	Identifier	CheckpointedEvent :: CheckpointedEvent		891129	1					
ANR	891166	ParameterList			891129	2					
ANR	891167	CFGEntryNode	ENTRY		891129		True				
ANR	891168	CFGExitNode	EXIT		891129		True				
ANR	891169	Symbol	run_local_rusage		891129						
ANR	891170	Symbol	ULOG_CHECKPOINTED		891129						
ANR	891171	Symbol	eventNumber		891129						
ANR	891172	Symbol	run_remote_rusage		891129						
ANR	891173	Symbol	& run_local_rusage		891129						
ANR	891174	Symbol	sent_bytes		891129						
ANR	891175	Function	CheckpointedEvent :: ~CheckpointedEvent	1805:0:38566:38612							
ANR	891176	FunctionDef	CheckpointedEvent :: ~CheckpointedEvent ()		891175	0					
ANR	891177	CompoundStatement		1806:0:38610:38612	891175	0					
ANR	891178	Identifier	CheckpointedEvent :: ~CheckpointedEvent		891175	1					
ANR	891179	ParameterList			891175	2					
ANR	891180	CFGEntryNode	ENTRY		891175		True				
ANR	891181	CFGExitNode	EXIT		891175		True				
ANR	891182	Function	CheckpointedEvent :: writeEvent	1809:0:38615:39664							
ANR	891183	FunctionDef	CheckpointedEvent :: writeEvent (FILE * file)		891182	0					
ANR	891184	CompoundStatement		1811:0:38662:39664	891182	0					
ANR	891185	IdentifierDeclStatement	char messagestr [ 512 ] ;	1812:1:38665:38685	891182	0	True				
ANR	891186	IdentifierDecl	messagestr [ 512 ]		891182	0					
ANR	891187	IdentifierDeclType	char [ 512 ]		891182	0					
ANR	891188	Identifier	messagestr		891182	1					
ANR	891189	PrimaryExpression	512		891182	2					
ANR	891190	IdentifierDeclStatement	ClassAd tmpCl1 ;	1813:1:38688:38702	891182	1	True				
ANR	891191	IdentifierDecl	tmpCl1		891182	0					
ANR	891192	IdentifierDeclType	ClassAd		891182	0					
ANR	891193	Identifier	tmpCl1		891182	1					
ANR	891194	ExpressionStatement	"sprintf ( messagestr , ""Job was checkpointed"" )"	1816:1:38737:38781	891182	2	True				
ANR	891195	CallExpression	"sprintf ( messagestr , ""Job was checkpointed"" )"		891182	0					
ANR	891196	Callee	sprintf		891182	0					
ANR	891197	Identifier	sprintf		891182	0					
ANR	891198	ArgumentList	messagestr		891182	1					
ANR	891199	Argument	messagestr		891182	0					
ANR	891200	Identifier	messagestr		891182	0					
ANR	891201	Argument	"""Job was checkpointed"""		891182	1					
ANR	891202	PrimaryExpression	"""Job was checkpointed"""		891182	0					
ANR	891203	ExpressionStatement	scheddname = getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )	1818:1:38785:38837	891182	3	True				
ANR	891204	AssignmentExpression	scheddname = getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )		891182	0		=			
ANR	891205	Identifier	scheddname		891182	0					
ANR	891206	CallExpression	getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )		891182	1					
ANR	891207	Callee	getenv		891182	0					
ANR	891208	Identifier	getenv		891182	0					
ANR	891209	ArgumentList	EnvGetName ( ENV_SCHEDD_NAME )		891182	1					
ANR	891210	Argument	EnvGetName ( ENV_SCHEDD_NAME )		891182	0					
ANR	891211	CallExpression	EnvGetName ( ENV_SCHEDD_NAME )		891182	0					
ANR	891212	Callee	EnvGetName		891182	0					
ANR	891213	Identifier	EnvGetName		891182	0					
ANR	891214	ArgumentList	ENV_SCHEDD_NAME		891182	1					
ANR	891215	Argument	ENV_SCHEDD_NAME		891182	0					
ANR	891216	Identifier	ENV_SCHEDD_NAME		891182	0					
ANR	891217	ExpressionStatement	insertCommonIdentifiers ( tmpCl1 )	1821:1:38889:38920	891182	4	True				
ANR	891218	CallExpression	insertCommonIdentifiers ( tmpCl1 )		891182	0					
ANR	891219	Callee	insertCommonIdentifiers		891182	0					
ANR	891220	Identifier	insertCommonIdentifiers		891182	0					
ANR	891221	ArgumentList	tmpCl1		891182	1					
ANR	891222	Argument	tmpCl1		891182	0					
ANR	891223	Identifier	tmpCl1		891182	0					
ANR	891224	ExpressionStatement	"tmpCl1 . Assign ( ""eventtype"" , ULOG_CHECKPOINTED )"	1823:1:38924:38969	891182	5	True				
ANR	891225	CallExpression	"tmpCl1 . Assign ( ""eventtype"" , ULOG_CHECKPOINTED )"		891182	0					
ANR	891226	Callee	tmpCl1 . Assign		891182	0					
ANR	891227	MemberAccess	tmpCl1 . Assign		891182	0					
ANR	891228	Identifier	tmpCl1		891182	0					
ANR	891229	Identifier	Assign		891182	1					
ANR	891230	ArgumentList	"""eventtype"""		891182	1					
ANR	891231	Argument	"""eventtype"""		891182	0					
ANR	891232	PrimaryExpression	"""eventtype"""		891182	0					
ANR	891233	Argument	ULOG_CHECKPOINTED		891182	1					
ANR	891234	Identifier	ULOG_CHECKPOINTED		891182	0					
ANR	891235	ExpressionStatement	"tmpCl1 . Assign ( ""eventtime"" , ( int ) eventclock )"	1824:1:38972:39015	891182	6	True				
ANR	891236	CallExpression	"tmpCl1 . Assign ( ""eventtime"" , ( int ) eventclock )"		891182	0					
ANR	891237	Callee	tmpCl1 . Assign		891182	0					
ANR	891238	MemberAccess	tmpCl1 . Assign		891182	0					
ANR	891239	Identifier	tmpCl1		891182	0					
ANR	891240	Identifier	Assign		891182	1					
ANR	891241	ArgumentList	"""eventtime"""		891182	1					
ANR	891242	Argument	"""eventtime"""		891182	0					
ANR	891243	PrimaryExpression	"""eventtime"""		891182	0					
ANR	891244	Argument	( int ) eventclock		891182	1					
ANR	891245	CastExpression	( int ) eventclock		891182	0					
ANR	891246	CastTarget	int		891182	0					
ANR	891247	Identifier	eventclock		891182	1					
ANR	891248	ExpressionStatement	"tmpCl1 . Assign ( ""description"" , messagestr )"	1826:1:39019:39059	891182	7	True				
ANR	891249	CallExpression	"tmpCl1 . Assign ( ""description"" , messagestr )"		891182	0					
ANR	891250	Callee	tmpCl1 . Assign		891182	0					
ANR	891251	MemberAccess	tmpCl1 . Assign		891182	0					
ANR	891252	Identifier	tmpCl1		891182	0					
ANR	891253	Identifier	Assign		891182	1					
ANR	891254	ArgumentList	"""description"""		891182	1					
ANR	891255	Argument	"""description"""		891182	0					
ANR	891256	PrimaryExpression	"""description"""		891182	0					
ANR	891257	Argument	messagestr		891182	1					
ANR	891258	Identifier	messagestr		891182	0					
ANR	891259	IfStatement	if ( FILEObj )		891182	8					
ANR	891260	Condition	FILEObj	1828:5:39067:39073	891182	0	True				
ANR	891261	Identifier	FILEObj		891182	0					
ANR	891262	CompoundStatement		18:14:413:413	891182	1					
ANR	891263	IfStatement	"if ( FILEObj -> file_newEvent ( ""Events"" , & tmpCl1 ) == QUILL_FAILURE )"		891182	0					
ANR	891264	Condition	"FILEObj -> file_newEvent ( ""Events"" , & tmpCl1 ) == QUILL_FAILURE"	1829:6:39084:39141	891182	0	True				
ANR	891265	EqualityExpression	"FILEObj -> file_newEvent ( ""Events"" , & tmpCl1 ) == QUILL_FAILURE"		891182	0		==			
ANR	891266	CallExpression	"FILEObj -> file_newEvent ( ""Events"" , & tmpCl1 )"		891182	0					
ANR	891267	Callee	FILEObj -> file_newEvent		891182	0					
ANR	891268	PtrMemberAccess	FILEObj -> file_newEvent		891182	0					
ANR	891269	Identifier	FILEObj		891182	0					
ANR	891270	Identifier	file_newEvent		891182	1					
ANR	891271	ArgumentList	"""Events"""		891182	1					
ANR	891272	Argument	"""Events"""		891182	0					
ANR	891273	PrimaryExpression	"""Events"""		891182	0					
ANR	891274	Argument	& tmpCl1		891182	1					
ANR	891275	UnaryOperationExpression	& tmpCl1		891182	0					
ANR	891276	UnaryOperator	&		891182	0					
ANR	891277	Identifier	tmpCl1		891182	1					
ANR	891278	Identifier	QUILL_FAILURE		891182	1					
ANR	891279	CompoundStatement		19:66:481:481	891182	1					
ANR	891280	ExpressionStatement	"dprintf ( D_ALWAYS , ""Logging Event 6--- Error\\n"" )"	1830:3:39149:39196	891182	0	True				
ANR	891281	CallExpression	"dprintf ( D_ALWAYS , ""Logging Event 6--- Error\\n"" )"		891182	0					
ANR	891282	Callee	dprintf		891182	0					
ANR	891283	Identifier	dprintf		891182	0					
ANR	891284	ArgumentList	D_ALWAYS		891182	1					
ANR	891285	Argument	D_ALWAYS		891182	0					
ANR	891286	Identifier	D_ALWAYS		891182	0					
ANR	891287	Argument	"""Logging Event 6--- Error\\n"""		891182	1					
ANR	891288	PrimaryExpression	"""Logging Event 6--- Error\\n"""		891182	0					
ANR	891289	ReturnStatement	return 0 ;	1831:3:39201:39209	891182	1	True				
ANR	891290	PrimaryExpression	0		891182	0					
ANR	891291	IfStatement	"if ( fprintf ( file , ""Job was checkpointed.\\n"" ) < 0 || ( ! writeRusage ( file , run_remote_rusage ) ) || ( fprintf ( file , ""  -  Run Remote Usage\\n"" ) < 0 ) || ( ! writeRusage ( file , run_local_rusage ) ) || ( fprintf ( file , ""  -  Run Local Usage\\n"" ) < 0 ) )"		891182	9					
ANR	891292	Condition	"fprintf ( file , ""Job was checkpointed.\\n"" ) < 0 || ( ! writeRusage ( file , run_remote_rusage ) ) || ( fprintf ( file , ""  -  Run Remote Usage\\n"" ) < 0 ) || ( ! writeRusage ( file , run_local_rusage ) ) || ( fprintf ( file , ""  -  Run Local Usage\\n"" ) < 0 )"	1835:5:39250:39500	891182	0	True				
ANR	891293	OrExpression	"fprintf ( file , ""Job was checkpointed.\\n"" ) < 0 || ( ! writeRusage ( file , run_remote_rusage ) ) || ( fprintf ( file , ""  -  Run Remote Usage\\n"" ) < 0 ) || ( ! writeRusage ( file , run_local_rusage ) ) || ( fprintf ( file , ""  -  Run Local Usage\\n"" ) < 0 )"		891182	0		||			
ANR	891294	RelationalExpression	"fprintf ( file , ""Job was checkpointed.\\n"" ) < 0"		891182	0		<			
ANR	891295	CallExpression	"fprintf ( file , ""Job was checkpointed.\\n"" )"		891182	0					
ANR	891296	Callee	fprintf		891182	0					
ANR	891297	Identifier	fprintf		891182	0					
ANR	891298	ArgumentList	file		891182	1					
ANR	891299	Argument	file		891182	0					
ANR	891300	Identifier	file		891182	0					
ANR	891301	Argument	"""Job was checkpointed.\\n"""		891182	1					
ANR	891302	PrimaryExpression	"""Job was checkpointed.\\n"""		891182	0					
ANR	891303	PrimaryExpression	0		891182	1					
ANR	891304	OrExpression	"( ! writeRusage ( file , run_remote_rusage ) ) || ( fprintf ( file , ""  -  Run Remote Usage\\n"" ) < 0 ) || ( ! writeRusage ( file , run_local_rusage ) ) || ( fprintf ( file , ""  -  Run Local Usage\\n"" ) < 0 )"		891182	1		||			
ANR	891305	UnaryOperationExpression	"! writeRusage ( file , run_remote_rusage )"		891182	0					
ANR	891306	UnaryOperator	!		891182	0					
ANR	891307	CallExpression	"writeRusage ( file , run_remote_rusage )"		891182	1					
ANR	891308	Callee	writeRusage		891182	0					
ANR	891309	Identifier	writeRusage		891182	0					
ANR	891310	ArgumentList	file		891182	1					
ANR	891311	Argument	file		891182	0					
ANR	891312	Identifier	file		891182	0					
ANR	891313	Argument	run_remote_rusage		891182	1					
ANR	891314	Identifier	run_remote_rusage		891182	0					
ANR	891315	OrExpression	"( fprintf ( file , ""  -  Run Remote Usage\\n"" ) < 0 ) || ( ! writeRusage ( file , run_local_rusage ) ) || ( fprintf ( file , ""  -  Run Local Usage\\n"" ) < 0 )"		891182	1		||			
ANR	891316	RelationalExpression	"fprintf ( file , ""  -  Run Remote Usage\\n"" ) < 0"		891182	0		<			
ANR	891317	CallExpression	"fprintf ( file , ""  -  Run Remote Usage\\n"" )"		891182	0					
ANR	891318	Callee	fprintf		891182	0					
ANR	891319	Identifier	fprintf		891182	0					
ANR	891320	ArgumentList	file		891182	1					
ANR	891321	Argument	file		891182	0					
ANR	891322	Identifier	file		891182	0					
ANR	891323	Argument	"""  -  Run Remote Usage\\n"""		891182	1					
ANR	891324	PrimaryExpression	"""  -  Run Remote Usage\\n"""		891182	0					
ANR	891325	PrimaryExpression	0		891182	1					
ANR	891326	OrExpression	"( ! writeRusage ( file , run_local_rusage ) ) || ( fprintf ( file , ""  -  Run Local Usage\\n"" ) < 0 )"		891182	1		||			
ANR	891327	UnaryOperationExpression	"! writeRusage ( file , run_local_rusage )"		891182	0					
ANR	891328	UnaryOperator	!		891182	0					
ANR	891329	CallExpression	"writeRusage ( file , run_local_rusage )"		891182	1					
ANR	891330	Callee	writeRusage		891182	0					
ANR	891331	Identifier	writeRusage		891182	0					
ANR	891332	ArgumentList	file		891182	1					
ANR	891333	Argument	file		891182	0					
ANR	891334	Identifier	file		891182	0					
ANR	891335	Argument	run_local_rusage		891182	1					
ANR	891336	Identifier	run_local_rusage		891182	0					
ANR	891337	RelationalExpression	"fprintf ( file , ""  -  Run Local Usage\\n"" ) < 0"		891182	1		<			
ANR	891338	CallExpression	"fprintf ( file , ""  -  Run Local Usage\\n"" )"		891182	0					
ANR	891339	Callee	fprintf		891182	0					
ANR	891340	Identifier	fprintf		891182	0					
ANR	891341	ArgumentList	file		891182	1					
ANR	891342	Argument	file		891182	0					
ANR	891343	Identifier	file		891182	0					
ANR	891344	Argument	"""  -  Run Local Usage\\n"""		891182	1					
ANR	891345	PrimaryExpression	"""  -  Run Local Usage\\n"""		891182	0					
ANR	891346	PrimaryExpression	0		891182	1					
ANR	891347	ReturnStatement	return 0 ;	1840:2:39505:39513	891182	1	True				
ANR	891348	PrimaryExpression	0		891182	0					
ANR	891349	IfStatement	"if ( fprintf ( file , ""\\t%.0f  -  Run Bytes Sent By Job For Checkpoint\\n"" , sent_bytes ) < 0 )"		891182	10					
ANR	891350	Condition	"fprintf ( file , ""\\t%.0f  -  Run Bytes Sent By Job For Checkpoint\\n"" , sent_bytes ) < 0"	1842:8:39524:39621	891182	0	True				
ANR	891351	RelationalExpression	"fprintf ( file , ""\\t%.0f  -  Run Bytes Sent By Job For Checkpoint\\n"" , sent_bytes ) < 0"		891182	0		<			
ANR	891352	CallExpression	"fprintf ( file , ""\\t%.0f  -  Run Bytes Sent By Job For Checkpoint\\n"" , sent_bytes )"		891182	0					
ANR	891353	Callee	fprintf		891182	0					
ANR	891354	Identifier	fprintf		891182	0					
ANR	891355	ArgumentList	file		891182	1					
ANR	891356	Argument	file		891182	0					
ANR	891357	Identifier	file		891182	0					
ANR	891358	Argument	"""\\t%.0f  -  Run Bytes Sent By Job For Checkpoint\\n"""		891182	1					
ANR	891359	PrimaryExpression	"""\\t%.0f  -  Run Bytes Sent By Job For Checkpoint\\n"""		891182	0					
ANR	891360	Argument	sent_bytes		891182	2					
ANR	891361	Identifier	sent_bytes		891182	0					
ANR	891362	PrimaryExpression	0		891182	1					
ANR	891363	CompoundStatement		33:34:962:962	891182	1					
ANR	891364	ReturnStatement	return 0 ;	1844:8:39635:39643	891182	0	True				
ANR	891365	PrimaryExpression	0		891182	0					
ANR	891366	ReturnStatement	return 1 ;	1848:1:39654:39662	891182	11	True				
ANR	891367	PrimaryExpression	1		891182	0					
ANR	891368	ReturnType	int		891182	1					
ANR	891369	Identifier	CheckpointedEvent :: writeEvent		891182	2					
ANR	891370	ParameterList	FILE * file		891182	3					
ANR	891371	Parameter	FILE * file	1810:31:38650:38659	891182	0	True				
ANR	891372	ParameterType	FILE *		891182	0					
ANR	891373	Identifier	file		891182	1					
ANR	891374	CFGEntryNode	ENTRY		891182		True				
ANR	891375	CFGExitNode	EXIT		891182		True				
ANR	891376	Symbol	run_local_rusage		891182						
ANR	891377	Symbol	ULOG_CHECKPOINTED		891182						
ANR	891378	Symbol	scheddname		891182						
ANR	891379	Symbol	D_ALWAYS		891182						
ANR	891380	Symbol	writeRusage		891182						
ANR	891381	Symbol	EnvGetName		891182						
ANR	891382	Symbol	ENV_SCHEDD_NAME		891182						
ANR	891383	Symbol	QUILL_FAILURE		891182						
ANR	891384	Symbol	fprintf		891182						
ANR	891385	Symbol	FILEObj		891182						
ANR	891386	Symbol	sent_bytes		891182						
ANR	891387	Symbol	* FILEObj		891182						
ANR	891388	Symbol	& tmpCl1		891182						
ANR	891389	Symbol	file		891182						
ANR	891390	Symbol	messagestr		891182						
ANR	891391	Symbol	eventclock		891182						
ANR	891392	Symbol	tmpCl1		891182						
ANR	891393	Symbol	FILEObj -> file_newEvent		891182						
ANR	891394	Symbol	run_remote_rusage		891182						
ANR	891395	Symbol	getenv		891182						
ANR	891396	Function	CheckpointedEvent :: readEvent	1851:0:39667:40139							
ANR	891397	FunctionDef	CheckpointedEvent :: readEvent (FILE * file)		891396	0					
ANR	891398	CompoundStatement		1853:0:39713:40139	891396	0					
ANR	891399	IdentifierDeclStatement	"int retval = fscanf ( file , ""Job was checkpointed.\\n"" ) ;"	1854:1:39716:39769	891396	0	True				
ANR	891400	IdentifierDecl	"retval = fscanf ( file , ""Job was checkpointed.\\n"" )"		891396	0					
ANR	891401	IdentifierDeclType	int		891396	0					
ANR	891402	Identifier	retval		891396	1					
ANR	891403	AssignmentExpression	"retval = fscanf ( file , ""Job was checkpointed.\\n"" )"		891396	2		=			
ANR	891404	Identifier	retval		891396	0					
ANR	891405	CallExpression	"fscanf ( file , ""Job was checkpointed.\\n"" )"		891396	1					
ANR	891406	Callee	fscanf		891396	0					
ANR	891407	Identifier	fscanf		891396	0					
ANR	891408	ArgumentList	file		891396	1					
ANR	891409	Argument	file		891396	0					
ANR	891410	Identifier	file		891396	0					
ANR	891411	Argument	"""Job was checkpointed.\\n"""		891396	1					
ANR	891412	PrimaryExpression	"""Job was checkpointed.\\n"""		891396	0					
ANR	891413	IdentifierDeclStatement	char buffer [ 128 ] ;	1856:1:39773:39789	891396	1	True				
ANR	891414	IdentifierDecl	buffer [ 128 ]		891396	0					
ANR	891415	IdentifierDeclType	char [ 128 ]		891396	0					
ANR	891416	Identifier	buffer		891396	1					
ANR	891417	PrimaryExpression	128		891396	2					
ANR	891418	IfStatement	"if ( retval == EOF || ! readRusage ( file , run_remote_rusage ) || fgets ( buffer , 128 , file ) == 0 || ! readRusage ( file , run_local_rusage ) || fgets ( buffer , 128 , file ) == 0 )"		891396	2					
ANR	891419	Condition	"retval == EOF || ! readRusage ( file , run_remote_rusage ) || fgets ( buffer , 128 , file ) == 0 || ! readRusage ( file , run_local_rusage ) || fgets ( buffer , 128 , file ) == 0"	1857:5:39796:39955	891396	0	True				
ANR	891420	OrExpression	"retval == EOF || ! readRusage ( file , run_remote_rusage ) || fgets ( buffer , 128 , file ) == 0 || ! readRusage ( file , run_local_rusage ) || fgets ( buffer , 128 , file ) == 0"		891396	0		||			
ANR	891421	EqualityExpression	retval == EOF		891396	0		==			
ANR	891422	Identifier	retval		891396	0					
ANR	891423	Identifier	EOF		891396	1					
ANR	891424	OrExpression	"! readRusage ( file , run_remote_rusage ) || fgets ( buffer , 128 , file ) == 0 || ! readRusage ( file , run_local_rusage ) || fgets ( buffer , 128 , file ) == 0"		891396	1		||			
ANR	891425	UnaryOperationExpression	"! readRusage ( file , run_remote_rusage )"		891396	0					
ANR	891426	UnaryOperator	!		891396	0					
ANR	891427	CallExpression	"readRusage ( file , run_remote_rusage )"		891396	1					
ANR	891428	Callee	readRusage		891396	0					
ANR	891429	Identifier	readRusage		891396	0					
ANR	891430	ArgumentList	file		891396	1					
ANR	891431	Argument	file		891396	0					
ANR	891432	Identifier	file		891396	0					
ANR	891433	Argument	run_remote_rusage		891396	1					
ANR	891434	Identifier	run_remote_rusage		891396	0					
ANR	891435	OrExpression	"fgets ( buffer , 128 , file ) == 0 || ! readRusage ( file , run_local_rusage ) || fgets ( buffer , 128 , file ) == 0"		891396	1		||			
ANR	891436	EqualityExpression	"fgets ( buffer , 128 , file ) == 0"		891396	0		==			
ANR	891437	CallExpression	"fgets ( buffer , 128 , file )"		891396	0					
ANR	891438	Callee	fgets		891396	0					
ANR	891439	Identifier	fgets		891396	0					
ANR	891440	ArgumentList	buffer		891396	1					
ANR	891441	Argument	buffer		891396	0					
ANR	891442	Identifier	buffer		891396	0					
ANR	891443	Argument	128		891396	1					
ANR	891444	PrimaryExpression	128		891396	0					
ANR	891445	Argument	file		891396	2					
ANR	891446	Identifier	file		891396	0					
ANR	891447	PrimaryExpression	0		891396	1					
ANR	891448	OrExpression	"! readRusage ( file , run_local_rusage ) || fgets ( buffer , 128 , file ) == 0"		891396	1		||			
ANR	891449	UnaryOperationExpression	"! readRusage ( file , run_local_rusage )"		891396	0					
ANR	891450	UnaryOperator	!		891396	0					
ANR	891451	CallExpression	"readRusage ( file , run_local_rusage )"		891396	1					
ANR	891452	Callee	readRusage		891396	0					
ANR	891453	Identifier	readRusage		891396	0					
ANR	891454	ArgumentList	file		891396	1					
ANR	891455	Argument	file		891396	0					
ANR	891456	Identifier	file		891396	0					
ANR	891457	Argument	run_local_rusage		891396	1					
ANR	891458	Identifier	run_local_rusage		891396	0					
ANR	891459	EqualityExpression	"fgets ( buffer , 128 , file ) == 0"		891396	1		==			
ANR	891460	CallExpression	"fgets ( buffer , 128 , file )"		891396	0					
ANR	891461	Callee	fgets		891396	0					
ANR	891462	Identifier	fgets		891396	0					
ANR	891463	ArgumentList	buffer		891396	1					
ANR	891464	Argument	buffer		891396	0					
ANR	891465	Identifier	buffer		891396	0					
ANR	891466	Argument	128		891396	1					
ANR	891467	PrimaryExpression	128		891396	0					
ANR	891468	Argument	file		891396	2					
ANR	891469	Identifier	file		891396	0					
ANR	891470	PrimaryExpression	0		891396	1					
ANR	891471	ReturnStatement	return 0 ;	1860:2:39960:39968	891396	1	True				
ANR	891472	PrimaryExpression	0		891396	0					
ANR	891473	IfStatement	"if ( ! fscanf ( file , ""\\t%f  -  Run Bytes Sent By Job For Checkpoint\\n"" , & sent_bytes ) )"		891396	3					
ANR	891474	Condition	"! fscanf ( file , ""\\t%f  -  Run Bytes Sent By Job For Checkpoint\\n"" , & sent_bytes )"	1862:8:39979:40071	891396	0	True				
ANR	891475	UnaryOperationExpression	"! fscanf ( file , ""\\t%f  -  Run Bytes Sent By Job For Checkpoint\\n"" , & sent_bytes )"		891396	0					
ANR	891476	UnaryOperator	!		891396	0					
ANR	891477	CallExpression	"fscanf ( file , ""\\t%f  -  Run Bytes Sent By Job For Checkpoint\\n"" , & sent_bytes )"		891396	1					
ANR	891478	Callee	fscanf		891396	0					
ANR	891479	Identifier	fscanf		891396	0					
ANR	891480	ArgumentList	file		891396	1					
ANR	891481	Argument	file		891396	0					
ANR	891482	Identifier	file		891396	0					
ANR	891483	Argument	"""\\t%f  -  Run Bytes Sent By Job For Checkpoint\\n"""		891396	1					
ANR	891484	PrimaryExpression	"""\\t%f  -  Run Bytes Sent By Job For Checkpoint\\n"""		891396	0					
ANR	891485	Argument	& sent_bytes		891396	2					
ANR	891486	UnaryOperationExpression	& sent_bytes		891396	0					
ANR	891487	UnaryOperator	&		891396	0					
ANR	891488	Identifier	sent_bytes		891396	1					
ANR	891489	CompoundStatement		11:30:360:360	891396	1					
ANR	891490	ReturnStatement	return 1 ;	1864:8:40084:40092	891396	0	True				
ANR	891491	PrimaryExpression	1		891396	0					
ANR	891492	ReturnStatement	return 1 ;	1867:1:40129:40137	891396	4	True				
ANR	891493	PrimaryExpression	1		891396	0					
ANR	891494	ReturnType	int		891396	1					
ANR	891495	Identifier	CheckpointedEvent :: readEvent		891396	2					
ANR	891496	ParameterList	FILE * file		891396	3					
ANR	891497	Parameter	FILE * file	1852:30:39701:39710	891396	0	True				
ANR	891498	ParameterType	FILE *		891396	0					
ANR	891499	Identifier	file		891396	1					
ANR	891500	CFGEntryNode	ENTRY		891396		True				
ANR	891501	CFGExitNode	EXIT		891396		True				
ANR	891502	Symbol	run_local_rusage		891396						
ANR	891503	Symbol	fscanf		891396						
ANR	891504	Symbol	file		891396						
ANR	891505	Symbol	run_remote_rusage		891396						
ANR	891506	Symbol	buffer		891396						
ANR	891507	Symbol	readRusage		891396						
ANR	891508	Symbol	EOF		891396						
ANR	891509	Symbol	retval		891396						
ANR	891510	Symbol	fgets		891396						
ANR	891511	Symbol	& sent_bytes		891396						
ANR	891512	Function	CheckpointedEvent :: toClassAd	1870:0:40142:40718							
ANR	891513	FunctionDef	CheckpointedEvent :: toClassAd ()		891512	0					
ANR	891514	CompoundStatement		1872:0:40186:40718	891512	0					
ANR	891515	IdentifierDeclStatement	ClassAd * myad = ULogEvent :: toClassAd ( ) ;	1873:1:40189:40227	891512	0	True				
ANR	891516	IdentifierDecl	* myad = ULogEvent :: toClassAd ( )		891512	0					
ANR	891517	IdentifierDeclType	ClassAd *		891512	0					
ANR	891518	Identifier	myad		891512	1					
ANR	891519	AssignmentExpression	* myad = ULogEvent :: toClassAd ( )		891512	2		=			
ANR	891520	Identifier	myad		891512	0					
ANR	891521	CallExpression	ULogEvent :: toClassAd ( )		891512	1					
ANR	891522	Callee	ULogEvent :: toClassAd		891512	0					
ANR	891523	Identifier	ULogEvent :: toClassAd		891512	0					
ANR	891524	ArgumentList			891512	1					
ANR	891525	IfStatement	if ( ! myad )		891512	1					
ANR	891526	Condition	! myad	1874:5:40234:40238	891512	0	True				
ANR	891527	UnaryOperationExpression	! myad		891512	0					
ANR	891528	UnaryOperator	!		891512	0					
ANR	891529	Identifier	myad		891512	1					
ANR	891530	ReturnStatement	return NULL ;	1874:13:40242:40253	891512	1	True				
ANR	891531	Identifier	NULL		891512	0					
ANR	891532	IdentifierDeclStatement	char buf0 [ 512 ] ;	1875:1:40256:40270	891512	2	True				
ANR	891533	IdentifierDecl	buf0 [ 512 ]		891512	0					
ANR	891534	IdentifierDeclType	char [ 512 ]		891512	0					
ANR	891535	Identifier	buf0		891512	1					
ANR	891536	PrimaryExpression	512		891512	2					
ANR	891537	IdentifierDeclStatement	char * rs = rusageToStr ( run_local_rusage ) ;	1877:1:40274:40314	891512	3	True				
ANR	891538	IdentifierDecl	* rs = rusageToStr ( run_local_rusage )		891512	0					
ANR	891539	IdentifierDeclType	char *		891512	0					
ANR	891540	Identifier	rs		891512	1					
ANR	891541	AssignmentExpression	* rs = rusageToStr ( run_local_rusage )		891512	2		=			
ANR	891542	Identifier	rs		891512	0					
ANR	891543	CallExpression	rusageToStr ( run_local_rusage )		891512	1					
ANR	891544	Callee	rusageToStr		891512	0					
ANR	891545	Identifier	rusageToStr		891512	0					
ANR	891546	ArgumentList	run_local_rusage		891512	1					
ANR	891547	Argument	run_local_rusage		891512	0					
ANR	891548	Identifier	run_local_rusage		891512	0					
ANR	891549	ExpressionStatement	"snprintf ( buf0 , 512 , ""RunLocalUsage = \\""%s\\"""" , rs )"	1878:1:40317:40366	891512	4	True				
ANR	891550	CallExpression	"snprintf ( buf0 , 512 , ""RunLocalUsage = \\""%s\\"""" , rs )"		891512	0					
ANR	891551	Callee	snprintf		891512	0					
ANR	891552	Identifier	snprintf		891512	0					
ANR	891553	ArgumentList	buf0		891512	1					
ANR	891554	Argument	buf0		891512	0					
ANR	891555	Identifier	buf0		891512	0					
ANR	891556	Argument	512		891512	1					
ANR	891557	PrimaryExpression	512		891512	0					
ANR	891558	Argument	"""RunLocalUsage = \\""%s\\"""""		891512	2					
ANR	891559	PrimaryExpression	"""RunLocalUsage = \\""%s\\"""""		891512	0					
ANR	891560	Argument	rs		891512	3					
ANR	891561	Identifier	rs		891512	0					
ANR	891562	ExpressionStatement	free ( rs )	1879:1:40369:40377	891512	5	True				
ANR	891563	CallExpression	free ( rs )		891512	0					
ANR	891564	Callee	free		891512	0					
ANR	891565	Identifier	free		891512	0					
ANR	891566	ArgumentList	rs		891512	1					
ANR	891567	Argument	rs		891512	0					
ANR	891568	Identifier	rs		891512	0					
ANR	891569	ExpressionStatement	buf0 [ 511 ] = 0	1880:1:40380:40393	891512	6	True				
ANR	891570	AssignmentExpression	buf0 [ 511 ] = 0		891512	0		=			
ANR	891571	ArrayIndexing	buf0 [ 511 ]		891512	0					
ANR	891572	Identifier	buf0		891512	0					
ANR	891573	PrimaryExpression	511		891512	1					
ANR	891574	PrimaryExpression	0		891512	1					
ANR	891575	IfStatement	if ( ! myad -> Insert ( buf0 ) )		891512	7					
ANR	891576	Condition	! myad -> Insert ( buf0 )	1881:5:40400:40418	891512	0	True				
ANR	891577	UnaryOperationExpression	! myad -> Insert ( buf0 )		891512	0					
ANR	891578	UnaryOperator	!		891512	0					
ANR	891579	CallExpression	myad -> Insert ( buf0 )		891512	1					
ANR	891580	Callee	myad -> Insert		891512	0					
ANR	891581	PtrMemberAccess	myad -> Insert		891512	0					
ANR	891582	Identifier	myad		891512	0					
ANR	891583	Identifier	Insert		891512	1					
ANR	891584	ArgumentList	buf0		891512	1					
ANR	891585	Argument	buf0		891512	0					
ANR	891586	Identifier	buf0		891512	0					
ANR	891587	ReturnStatement	return NULL ;	1881:27:40422:40433	891512	1	True				
ANR	891588	Identifier	NULL		891512	0					
ANR	891589	ExpressionStatement	rs = rusageToStr ( run_remote_rusage )	1883:1:40437:40472	891512	8	True				
ANR	891590	AssignmentExpression	rs = rusageToStr ( run_remote_rusage )		891512	0		=			
ANR	891591	Identifier	rs		891512	0					
ANR	891592	CallExpression	rusageToStr ( run_remote_rusage )		891512	1					
ANR	891593	Callee	rusageToStr		891512	0					
ANR	891594	Identifier	rusageToStr		891512	0					
ANR	891595	ArgumentList	run_remote_rusage		891512	1					
ANR	891596	Argument	run_remote_rusage		891512	0					
ANR	891597	Identifier	run_remote_rusage		891512	0					
ANR	891598	ExpressionStatement	"snprintf ( buf0 , 512 , ""RunRemoteUsage = \\""%s\\"""" , rs )"	1884:1:40475:40525	891512	9	True				
ANR	891599	CallExpression	"snprintf ( buf0 , 512 , ""RunRemoteUsage = \\""%s\\"""" , rs )"		891512	0					
ANR	891600	Callee	snprintf		891512	0					
ANR	891601	Identifier	snprintf		891512	0					
ANR	891602	ArgumentList	buf0		891512	1					
ANR	891603	Argument	buf0		891512	0					
ANR	891604	Identifier	buf0		891512	0					
ANR	891605	Argument	512		891512	1					
ANR	891606	PrimaryExpression	512		891512	0					
ANR	891607	Argument	"""RunRemoteUsage = \\""%s\\"""""		891512	2					
ANR	891608	PrimaryExpression	"""RunRemoteUsage = \\""%s\\"""""		891512	0					
ANR	891609	Argument	rs		891512	3					
ANR	891610	Identifier	rs		891512	0					
ANR	891611	ExpressionStatement	free ( rs )	1885:1:40528:40536	891512	10	True				
ANR	891612	CallExpression	free ( rs )		891512	0					
ANR	891613	Callee	free		891512	0					
ANR	891614	Identifier	free		891512	0					
ANR	891615	ArgumentList	rs		891512	1					
ANR	891616	Argument	rs		891512	0					
ANR	891617	Identifier	rs		891512	0					
ANR	891618	ExpressionStatement	buf0 [ 511 ] = 0	1886:1:40539:40552	891512	11	True				
ANR	891619	AssignmentExpression	buf0 [ 511 ] = 0		891512	0		=			
ANR	891620	ArrayIndexing	buf0 [ 511 ]		891512	0					
ANR	891621	Identifier	buf0		891512	0					
ANR	891622	PrimaryExpression	511		891512	1					
ANR	891623	PrimaryExpression	0		891512	1					
ANR	891624	IfStatement	if ( ! myad -> Insert ( buf0 ) )		891512	12					
ANR	891625	Condition	! myad -> Insert ( buf0 )	1887:5:40559:40577	891512	0	True				
ANR	891626	UnaryOperationExpression	! myad -> Insert ( buf0 )		891512	0					
ANR	891627	UnaryOperator	!		891512	0					
ANR	891628	CallExpression	myad -> Insert ( buf0 )		891512	1					
ANR	891629	Callee	myad -> Insert		891512	0					
ANR	891630	PtrMemberAccess	myad -> Insert		891512	0					
ANR	891631	Identifier	myad		891512	0					
ANR	891632	Identifier	Insert		891512	1					
ANR	891633	ArgumentList	buf0		891512	1					
ANR	891634	Argument	buf0		891512	0					
ANR	891635	Identifier	buf0		891512	0					
ANR	891636	ReturnStatement	return NULL ;	1887:27:40581:40592	891512	1	True				
ANR	891637	Identifier	NULL		891512	0					
ANR	891638	ExpressionStatement	"snprintf ( buf0 , 512 , ""SentBytes = %f"" , sent_bytes )"	1889:1:40596:40645	891512	13	True				
ANR	891639	CallExpression	"snprintf ( buf0 , 512 , ""SentBytes = %f"" , sent_bytes )"		891512	0					
ANR	891640	Callee	snprintf		891512	0					
ANR	891641	Identifier	snprintf		891512	0					
ANR	891642	ArgumentList	buf0		891512	1					
ANR	891643	Argument	buf0		891512	0					
ANR	891644	Identifier	buf0		891512	0					
ANR	891645	Argument	512		891512	1					
ANR	891646	PrimaryExpression	512		891512	0					
ANR	891647	Argument	"""SentBytes = %f"""		891512	2					
ANR	891648	PrimaryExpression	"""SentBytes = %f"""		891512	0					
ANR	891649	Argument	sent_bytes		891512	3					
ANR	891650	Identifier	sent_bytes		891512	0					
ANR	891651	ExpressionStatement	buf0 [ 511 ] = 0	1890:1:40648:40661	891512	14	True				
ANR	891652	AssignmentExpression	buf0 [ 511 ] = 0		891512	0		=			
ANR	891653	ArrayIndexing	buf0 [ 511 ]		891512	0					
ANR	891654	Identifier	buf0		891512	0					
ANR	891655	PrimaryExpression	511		891512	1					
ANR	891656	PrimaryExpression	0		891512	1					
ANR	891657	IfStatement	if ( ! myad -> Insert ( buf0 ) )		891512	15					
ANR	891658	Condition	! myad -> Insert ( buf0 )	1891:5:40668:40686	891512	0	True				
ANR	891659	UnaryOperationExpression	! myad -> Insert ( buf0 )		891512	0					
ANR	891660	UnaryOperator	!		891512	0					
ANR	891661	CallExpression	myad -> Insert ( buf0 )		891512	1					
ANR	891662	Callee	myad -> Insert		891512	0					
ANR	891663	PtrMemberAccess	myad -> Insert		891512	0					
ANR	891664	Identifier	myad		891512	0					
ANR	891665	Identifier	Insert		891512	1					
ANR	891666	ArgumentList	buf0		891512	1					
ANR	891667	Argument	buf0		891512	0					
ANR	891668	Identifier	buf0		891512	0					
ANR	891669	ReturnStatement	return NULL ;	1891:27:40690:40701	891512	1	True				
ANR	891670	Identifier	NULL		891512	0					
ANR	891671	ReturnStatement	return myad ;	1893:1:40705:40716	891512	16	True				
ANR	891672	Identifier	myad		891512	0					
ANR	891673	ReturnType	ClassAd *		891512	1					
ANR	891674	Identifier	CheckpointedEvent :: toClassAd		891512	2					
ANR	891675	ParameterList			891512	3					
ANR	891676	CFGEntryNode	ENTRY		891512		True				
ANR	891677	CFGExitNode	EXIT		891512		True				
ANR	891678	Symbol	rs		891512						
ANR	891679	Symbol	run_local_rusage		891512						
ANR	891680	Symbol	rusageToStr		891512						
ANR	891681	Symbol	NULL		891512						
ANR	891682	Symbol	buf0		891512						
ANR	891683	Symbol	* myad		891512						
ANR	891684	Symbol	run_remote_rusage		891512						
ANR	891685	Symbol	myad -> Insert		891512						
ANR	891686	Symbol	myad		891512						
ANR	891687	Symbol	ULogEvent :: toClassAd		891512						
ANR	891688	Symbol	* buf0		891512						
ANR	891689	Symbol	sent_bytes		891512						
ANR	891690	Function	CheckpointedEvent :: initFromClassAd	1896:0:40721:41154							
ANR	891691	FunctionDef	CheckpointedEvent :: initFromClassAd (ClassAd * ad)		891690	0					
ANR	891692	CompoundStatement		1898:0:40774:41154	891690	0					
ANR	891693	ExpressionStatement	ULogEvent :: initFromClassAd ( ad )	1899:1:40777:40807	891690	0	True				
ANR	891694	CallExpression	ULogEvent :: initFromClassAd ( ad )		891690	0					
ANR	891695	Callee	ULogEvent :: initFromClassAd		891690	0					
ANR	891696	Identifier	ULogEvent :: initFromClassAd		891690	0					
ANR	891697	ArgumentList	ad		891690	1					
ANR	891698	Argument	ad		891690	0					
ANR	891699	Identifier	ad		891690	0					
ANR	891700	IfStatement	if ( ! ad )		891690	1					
ANR	891701	Condition	! ad	1901:5:40815:40817	891690	0	True				
ANR	891702	UnaryOperationExpression	! ad		891690	0					
ANR	891703	UnaryOperator	!		891690	0					
ANR	891704	Identifier	ad		891690	1					
ANR	891705	ReturnStatement	return ;	1901:11:40821:40827	891690	1	True				
ANR	891706	IdentifierDeclStatement	char * usageStr = NULL ;	1903:1:40831:40852	891690	2	True				
ANR	891707	IdentifierDecl	* usageStr = NULL		891690	0					
ANR	891708	IdentifierDeclType	char *		891690	0					
ANR	891709	Identifier	usageStr		891690	1					
ANR	891710	AssignmentExpression	* usageStr = NULL		891690	2		=			
ANR	891711	Identifier	NULL		891690	0					
ANR	891712	Identifier	NULL		891690	1					
ANR	891713	IfStatement	"if ( ad -> LookupString ( ""RunLocalUsage"" , & usageStr ) )"		891690	3					
ANR	891714	Condition	"ad -> LookupString ( ""RunLocalUsage"" , & usageStr )"	1904:5:40859:40902	891690	0	True				
ANR	891715	CallExpression	"ad -> LookupString ( ""RunLocalUsage"" , & usageStr )"		891690	0					
ANR	891716	Callee	ad -> LookupString		891690	0					
ANR	891717	PtrMemberAccess	ad -> LookupString		891690	0					
ANR	891718	Identifier	ad		891690	0					
ANR	891719	Identifier	LookupString		891690	1					
ANR	891720	ArgumentList	"""RunLocalUsage"""		891690	1					
ANR	891721	Argument	"""RunLocalUsage"""		891690	0					
ANR	891722	PrimaryExpression	"""RunLocalUsage"""		891690	0					
ANR	891723	Argument	& usageStr		891690	1					
ANR	891724	UnaryOperationExpression	& usageStr		891690	0					
ANR	891725	UnaryOperator	&		891690	0					
ANR	891726	Identifier	usageStr		891690	1					
ANR	891727	CompoundStatement		7:52:131:131	891690	1					
ANR	891728	ExpressionStatement	"strToRusage ( usageStr , run_local_rusage )"	1905:2:40910:40949	891690	0	True				
ANR	891729	CallExpression	"strToRusage ( usageStr , run_local_rusage )"		891690	0					
ANR	891730	Callee	strToRusage		891690	0					
ANR	891731	Identifier	strToRusage		891690	0					
ANR	891732	ArgumentList	usageStr		891690	1					
ANR	891733	Argument	usageStr		891690	0					
ANR	891734	Identifier	usageStr		891690	0					
ANR	891735	Argument	run_local_rusage		891690	1					
ANR	891736	Identifier	run_local_rusage		891690	0					
ANR	891737	ExpressionStatement	free ( usageStr )	1906:2:40953:40967	891690	1	True				
ANR	891738	CallExpression	free ( usageStr )		891690	0					
ANR	891739	Callee	free		891690	0					
ANR	891740	Identifier	free		891690	0					
ANR	891741	ArgumentList	usageStr		891690	1					
ANR	891742	Argument	usageStr		891690	0					
ANR	891743	Identifier	usageStr		891690	0					
ANR	891744	ExpressionStatement	usageStr = NULL	1908:1:40973:40988	891690	4	True				
ANR	891745	AssignmentExpression	usageStr = NULL		891690	0		=			
ANR	891746	Identifier	usageStr		891690	0					
ANR	891747	Identifier	NULL		891690	1					
ANR	891748	IfStatement	"if ( ad -> LookupString ( ""RunRemoteUsage"" , & usageStr ) )"		891690	5					
ANR	891749	Condition	"ad -> LookupString ( ""RunRemoteUsage"" , & usageStr )"	1909:5:40995:41039	891690	0	True				
ANR	891750	CallExpression	"ad -> LookupString ( ""RunRemoteUsage"" , & usageStr )"		891690	0					
ANR	891751	Callee	ad -> LookupString		891690	0					
ANR	891752	PtrMemberAccess	ad -> LookupString		891690	0					
ANR	891753	Identifier	ad		891690	0					
ANR	891754	Identifier	LookupString		891690	1					
ANR	891755	ArgumentList	"""RunRemoteUsage"""		891690	1					
ANR	891756	Argument	"""RunRemoteUsage"""		891690	0					
ANR	891757	PrimaryExpression	"""RunRemoteUsage"""		891690	0					
ANR	891758	Argument	& usageStr		891690	1					
ANR	891759	UnaryOperationExpression	& usageStr		891690	0					
ANR	891760	UnaryOperator	&		891690	0					
ANR	891761	Identifier	usageStr		891690	1					
ANR	891762	CompoundStatement		12:53:268:268	891690	1					
ANR	891763	ExpressionStatement	"strToRusage ( usageStr , run_remote_rusage )"	1910:2:41047:41087	891690	0	True				
ANR	891764	CallExpression	"strToRusage ( usageStr , run_remote_rusage )"		891690	0					
ANR	891765	Callee	strToRusage		891690	0					
ANR	891766	Identifier	strToRusage		891690	0					
ANR	891767	ArgumentList	usageStr		891690	1					
ANR	891768	Argument	usageStr		891690	0					
ANR	891769	Identifier	usageStr		891690	0					
ANR	891770	Argument	run_remote_rusage		891690	1					
ANR	891771	Identifier	run_remote_rusage		891690	0					
ANR	891772	ExpressionStatement	free ( usageStr )	1911:2:41091:41105	891690	1	True				
ANR	891773	CallExpression	free ( usageStr )		891690	0					
ANR	891774	Callee	free		891690	0					
ANR	891775	Identifier	free		891690	0					
ANR	891776	ArgumentList	usageStr		891690	1					
ANR	891777	Argument	usageStr		891690	0					
ANR	891778	Identifier	usageStr		891690	0					
ANR	891779	ExpressionStatement	"ad -> LookupFloat ( ""SentBytes"" , sent_bytes )"	1914:1:41112:41152	891690	6	True				
ANR	891780	CallExpression	"ad -> LookupFloat ( ""SentBytes"" , sent_bytes )"		891690	0					
ANR	891781	Callee	ad -> LookupFloat		891690	0					
ANR	891782	PtrMemberAccess	ad -> LookupFloat		891690	0					
ANR	891783	Identifier	ad		891690	0					
ANR	891784	Identifier	LookupFloat		891690	1					
ANR	891785	ArgumentList	"""SentBytes"""		891690	1					
ANR	891786	Argument	"""SentBytes"""		891690	0					
ANR	891787	PrimaryExpression	"""SentBytes"""		891690	0					
ANR	891788	Argument	sent_bytes		891690	1					
ANR	891789	Identifier	sent_bytes		891690	0					
ANR	891790	ReturnType	void		891690	1					
ANR	891791	Identifier	CheckpointedEvent :: initFromClassAd		891690	2					
ANR	891792	ParameterList	ClassAd * ad		891690	3					
ANR	891793	Parameter	ClassAd * ad	1897:35:40761:40771	891690	0	True				
ANR	891794	ParameterType	ClassAd *		891690	0					
ANR	891795	Identifier	ad		891690	1					
ANR	891796	CFGEntryNode	ENTRY		891690		True				
ANR	891797	CFGExitNode	EXIT		891690		True				
ANR	891798	Symbol	ad -> LookupString		891690						
ANR	891799	Symbol	& usageStr		891690						
ANR	891800	Symbol	run_local_rusage		891690						
ANR	891801	Symbol	ad		891690						
ANR	891802	Symbol	NULL		891690						
ANR	891803	Symbol	usageStr		891690						
ANR	891804	Symbol	run_remote_rusage		891690						
ANR	891805	Symbol	* ad		891690						
ANR	891806	Symbol	sent_bytes		891690						
ANR	891807	Function	JobEvictedEvent :: JobEvictedEvent	1918:0:41192:41567							
ANR	891808	FunctionDef	JobEvictedEvent :: JobEvictedEvent ()		891807	0					
ANR	891809	CompoundStatement		1919:0:41231:41567	891807	0					
ANR	891810	ExpressionStatement	eventNumber = ULOG_JOB_EVICTED	1920:1:41234:41264	891807	0	True				
ANR	891811	AssignmentExpression	eventNumber = ULOG_JOB_EVICTED		891807	0		=			
ANR	891812	Identifier	eventNumber		891807	0					
ANR	891813	Identifier	ULOG_JOB_EVICTED		891807	1					
ANR	891814	ExpressionStatement	checkpointed = false	1921:1:41267:41287	891807	1	True				
ANR	891815	AssignmentExpression	checkpointed = false		891807	0		=			
ANR	891816	Identifier	checkpointed		891807	0					
ANR	891817	Identifier	false		891807	1					
ANR	891818	ExpressionStatement	"( void ) memset ( ( void * ) & run_local_rusage , 0 , ( size_t ) sizeof ( run_local_rusage ) )"	1923:1:41291:41365	891807	2	True				
ANR	891819	CastExpression	"( void ) memset ( ( void * ) & run_local_rusage , 0 , ( size_t ) sizeof ( run_local_rusage ) )"		891807	0					
ANR	891820	CastTarget	void		891807	0					
ANR	891821	CallExpression	"memset ( ( void * ) & run_local_rusage , 0 , ( size_t ) sizeof ( run_local_rusage ) )"		891807	1					
ANR	891822	Callee	memset		891807	0					
ANR	891823	Identifier	memset		891807	0					
ANR	891824	ArgumentList	( void * ) & run_local_rusage		891807	1					
ANR	891825	Argument	( void * ) & run_local_rusage		891807	0					
ANR	891826	CastExpression	( void * ) & run_local_rusage		891807	0					
ANR	891827	CastTarget	void *		891807	0					
ANR	891828	UnaryOperationExpression	& run_local_rusage		891807	1					
ANR	891829	UnaryOperator	&		891807	0					
ANR	891830	Identifier	run_local_rusage		891807	1					
ANR	891831	Argument	0		891807	1					
ANR	891832	PrimaryExpression	0		891807	0					
ANR	891833	Argument	( size_t ) sizeof ( run_local_rusage )		891807	2					
ANR	891834	CastExpression	( size_t ) sizeof ( run_local_rusage )		891807	0					
ANR	891835	CastTarget	size_t		891807	0					
ANR	891836	SizeofExpression	sizeof ( run_local_rusage )		891807	1					
ANR	891837	Sizeof	sizeof		891807	0					
ANR	891838	SizeofOperand	run_local_rusage		891807	1					
ANR	891839	ExpressionStatement	run_remote_rusage = run_local_rusage	1924:1:41368:41404	891807	3	True				
ANR	891840	AssignmentExpression	run_remote_rusage = run_local_rusage		891807	0		=			
ANR	891841	Identifier	run_remote_rusage		891807	0					
ANR	891842	Identifier	run_local_rusage		891807	1					
ANR	891843	ExpressionStatement	sent_bytes = recvd_bytes = 0.0	1926:1:41408:41438	891807	4	True				
ANR	891844	AssignmentExpression	sent_bytes = recvd_bytes = 0.0		891807	0		=			
ANR	891845	Identifier	sent_bytes		891807	0					
ANR	891846	AssignmentExpression	recvd_bytes = 0.0		891807	1		=			
ANR	891847	Identifier	recvd_bytes		891807	0					
ANR	891848	PrimaryExpression	0.0		891807	1					
ANR	891849	ExpressionStatement	terminate_and_requeued = false	1928:1:41442:41472	891807	5	True				
ANR	891850	AssignmentExpression	terminate_and_requeued = false		891807	0		=			
ANR	891851	Identifier	terminate_and_requeued		891807	0					
ANR	891852	Identifier	false		891807	1					
ANR	891853	ExpressionStatement	normal = false	1929:1:41475:41489	891807	6	True				
ANR	891854	AssignmentExpression	normal = false		891807	0		=			
ANR	891855	Identifier	normal		891807	0					
ANR	891856	Identifier	false		891807	1					
ANR	891857	ExpressionStatement	return_value = - 1	1930:1:41492:41509	891807	7	True				
ANR	891858	AssignmentExpression	return_value = - 1		891807	0		=			
ANR	891859	Identifier	return_value		891807	0					
ANR	891860	UnaryOperationExpression	- 1		891807	1					
ANR	891861	UnaryOperator	-		891807	0					
ANR	891862	PrimaryExpression	1		891807	1					
ANR	891863	ExpressionStatement	signal_number = - 1	1931:1:41512:41530	891807	8	True				
ANR	891864	AssignmentExpression	signal_number = - 1		891807	0		=			
ANR	891865	Identifier	signal_number		891807	0					
ANR	891866	UnaryOperationExpression	- 1		891807	1					
ANR	891867	UnaryOperator	-		891807	0					
ANR	891868	PrimaryExpression	1		891807	1					
ANR	891869	ExpressionStatement	reason = NULL	1932:1:41533:41546	891807	9	True				
ANR	891870	AssignmentExpression	reason = NULL		891807	0		=			
ANR	891871	Identifier	reason		891807	0					
ANR	891872	Identifier	NULL		891807	1					
ANR	891873	ExpressionStatement	core_file = NULL	1933:1:41549:41565	891807	10	True				
ANR	891874	AssignmentExpression	core_file = NULL		891807	0		=			
ANR	891875	Identifier	core_file		891807	0					
ANR	891876	Identifier	NULL		891807	1					
ANR	891877	Identifier	JobEvictedEvent :: JobEvictedEvent		891807	1					
ANR	891878	ParameterList			891807	2					
ANR	891879	CFGEntryNode	ENTRY		891807		True				
ANR	891880	CFGExitNode	EXIT		891807		True				
ANR	891881	Symbol	terminate_and_requeued		891807						
ANR	891882	Symbol	run_local_rusage		891807						
ANR	891883	Symbol	normal		891807						
ANR	891884	Symbol	signal_number		891807						
ANR	891885	Symbol	reason		891807						
ANR	891886	Symbol	return_value		891807						
ANR	891887	Symbol	NULL		891807						
ANR	891888	Symbol	eventNumber		891807						
ANR	891889	Symbol	ULOG_JOB_EVICTED		891807						
ANR	891890	Symbol	false		891807						
ANR	891891	Symbol	& run_local_rusage		891807						
ANR	891892	Symbol	checkpointed		891807						
ANR	891893	Symbol	sent_bytes		891807						
ANR	891894	Symbol	recvd_bytes		891807						
ANR	891895	Symbol	run_remote_rusage		891807						
ANR	891896	Symbol	core_file		891807						
ANR	891897	Function	JobEvictedEvent :: ~JobEvictedEvent	1937:0:41571:41652							
ANR	891898	FunctionDef	JobEvictedEvent :: ~JobEvictedEvent ()		891897	0					
ANR	891899	CompoundStatement		1938:0:41611:41652	891897	0					
ANR	891900	Statement	delete	1939:1:41614:41619	891897	0	True				
ANR	891901	Statement	[	1939:7:41620:41620	891897	1	True				
ANR	891902	Statement	]	1939:8:41621:41621	891897	2	True				
ANR	891903	ExpressionStatement	reason	1939:10:41623:41629	891897	3	True				
ANR	891904	Identifier	reason		891897	0					
ANR	891905	Statement	delete	1940:1:41632:41637	891897	4	True				
ANR	891906	Statement	[	1940:7:41638:41638	891897	5	True				
ANR	891907	Statement	]	1940:8:41639:41639	891897	6	True				
ANR	891908	ExpressionStatement	core_file	1940:10:41641:41650	891897	7	True				
ANR	891909	Identifier	core_file		891897	0					
ANR	891910	Identifier	JobEvictedEvent :: ~JobEvictedEvent		891897	1					
ANR	891911	ParameterList			891897	2					
ANR	891912	CFGEntryNode	ENTRY		891897		True				
ANR	891913	CFGExitNode	EXIT		891897		True				
ANR	891914	Function	JobEvictedEvent :: setReason	1944:0:41656:41908							
ANR	891915	FunctionDef	JobEvictedEvent :: setReason (const char * reason_str)		891914	0					
ANR	891916	CompoundStatement		1946:0:41714:41908	891914	0					
ANR	891917	Statement	delete	1947:4:41720:41725	891914	0	True				
ANR	891918	Statement	[	1947:10:41726:41726	891914	1	True				
ANR	891919	Statement	]	1947:11:41727:41727	891914	2	True				
ANR	891920	ExpressionStatement	reason	1947:13:41729:41735	891914	3	True				
ANR	891921	Identifier	reason		891914	0					
ANR	891922	ExpressionStatement	reason = NULL	1948:4:41741:41754	891914	4	True				
ANR	891923	AssignmentExpression	reason = NULL		891914	0		=			
ANR	891924	Identifier	reason		891914	0					
ANR	891925	Identifier	NULL		891914	1					
ANR	891926	IfStatement	if ( reason_str )		891914	5					
ANR	891927	Condition	reason_str	1949:8:41764:41773	891914	0	True				
ANR	891928	Identifier	reason_str		891914	0					
ANR	891929	CompoundStatement		4:21:62:62	891914	1					
ANR	891930	ExpressionStatement	reason = strnewp ( reason_str )	1950:8:41787:41817	891914	0	True				
ANR	891931	AssignmentExpression	reason = strnewp ( reason_str )		891914	0		=			
ANR	891932	Identifier	reason		891914	0					
ANR	891933	CallExpression	strnewp ( reason_str )		891914	1					
ANR	891934	Callee	strnewp		891914	0					
ANR	891935	Identifier	strnewp		891914	0					
ANR	891936	ArgumentList	reason_str		891914	1					
ANR	891937	Argument	reason_str		891914	0					
ANR	891938	Identifier	reason_str		891914	0					
ANR	891939	IfStatement	if ( ! reason )		891914	1					
ANR	891940	Condition	! reason	1951:12:41831:41837	891914	0	True				
ANR	891941	UnaryOperationExpression	! reason		891914	0					
ANR	891942	UnaryOperator	!		891914	0					
ANR	891943	Identifier	reason		891914	1					
ANR	891944	CompoundStatement		6:22:126:126	891914	1					
ANR	891945	ExpressionStatement	"EXCEPT ( ""ERROR: out of memory!\\n"" )"	1952:12:41855:41890	891914	0	True				
ANR	891946	CallExpression	"EXCEPT ( ""ERROR: out of memory!\\n"" )"		891914	0					
ANR	891947	Callee	EXCEPT		891914	0					
ANR	891948	Identifier	EXCEPT		891914	0					
ANR	891949	ArgumentList	"""ERROR: out of memory!\\n"""		891914	1					
ANR	891950	Argument	"""ERROR: out of memory!\\n"""		891914	0					
ANR	891951	PrimaryExpression	"""ERROR: out of memory!\\n"""		891914	0					
ANR	891952	ReturnType	void		891914	1					
ANR	891953	Identifier	JobEvictedEvent :: setReason		891914	2					
ANR	891954	ParameterList	const char * reason_str		891914	3					
ANR	891955	Parameter	const char * reason_str	1945:28:41689:41710	891914	0	True				
ANR	891956	ParameterType	const char *		891914	0					
ANR	891957	Identifier	reason_str		891914	1					
ANR	891958	CFGEntryNode	ENTRY		891914		True				
ANR	891959	CFGExitNode	EXIT		891914		True				
ANR	891960	Symbol	reason_str		891914						
ANR	891961	Symbol	reason		891914						
ANR	891962	Symbol	NULL		891914						
ANR	891963	Symbol	strnewp		891914						
ANR	891964	Function	JobEvictedEvent :: getReason	1958:0:41912:41983							
ANR	891965	FunctionDef	JobEvictedEvent :: getReason ()		891964	0					
ANR	891966	CompoundStatement		1960:0:41965:41983	891964	0					
ANR	891967	ReturnStatement	return reason ;	1961:1:41968:41981	891964	0	True				
ANR	891968	Identifier	reason		891964	0					
ANR	891969	ReturnType	const char *		891964	1					
ANR	891970	Identifier	JobEvictedEvent :: getReason		891964	2					
ANR	891971	ParameterList			891964	3					
ANR	891972	CFGEntryNode	ENTRY		891964		True				
ANR	891973	CFGExitNode	EXIT		891964		True				
ANR	891974	Symbol	reason		891964						
ANR	891975	Function	JobEvictedEvent :: setCoreFile	1965:0:41987:42211							
ANR	891976	FunctionDef	JobEvictedEvent :: setCoreFile (const char * core_name)		891975	0					
ANR	891977	CompoundStatement		1967:0:42046:42211	891975	0					
ANR	891978	Statement	delete	1968:1:42049:42054	891975	0	True				
ANR	891979	Statement	[	1968:7:42055:42055	891975	1	True				
ANR	891980	Statement	]	1968:8:42056:42056	891975	2	True				
ANR	891981	ExpressionStatement	core_file	1968:10:42058:42067	891975	3	True				
ANR	891982	Identifier	core_file		891975	0					
ANR	891983	ExpressionStatement	core_file = NULL	1969:1:42070:42086	891975	4	True				
ANR	891984	AssignmentExpression	core_file = NULL		891975	0		=			
ANR	891985	Identifier	core_file		891975	0					
ANR	891986	Identifier	NULL		891975	1					
ANR	891987	IfStatement	if ( core_name )		891975	5					
ANR	891988	Condition	core_name	1970:5:42093:42101	891975	0	True				
ANR	891989	Identifier	core_name		891975	0					
ANR	891990	CompoundStatement		4:17:58:58	891975	1					
ANR	891991	ExpressionStatement	core_file = strnewp ( core_name )	1971:2:42109:42141	891975	0	True				
ANR	891992	AssignmentExpression	core_file = strnewp ( core_name )		891975	0		=			
ANR	891993	Identifier	core_file		891975	0					
ANR	891994	CallExpression	strnewp ( core_name )		891975	1					
ANR	891995	Callee	strnewp		891975	0					
ANR	891996	Identifier	strnewp		891975	0					
ANR	891997	ArgumentList	core_name		891975	1					
ANR	891998	Argument	core_name		891975	0					
ANR	891999	Identifier	core_name		891975	0					
ANR	892000	IfStatement	if ( ! core_file )		891975	1					
ANR	892001	Condition	! core_file	1972:6:42149:42158	891975	0	True				
ANR	892002	UnaryOperationExpression	! core_file		891975	0					
ANR	892003	UnaryOperator	!		891975	0					
ANR	892004	Identifier	core_file		891975	1					
ANR	892005	CompoundStatement		6:19:115:115	891975	1					
ANR	892006	ExpressionStatement	"EXCEPT ( ""ERROR: out of memory!\\n"" )"	1973:3:42167:42202	891975	0	True				
ANR	892007	CallExpression	"EXCEPT ( ""ERROR: out of memory!\\n"" )"		891975	0					
ANR	892008	Callee	EXCEPT		891975	0					
ANR	892009	Identifier	EXCEPT		891975	0					
ANR	892010	ArgumentList	"""ERROR: out of memory!\\n"""		891975	1					
ANR	892011	Argument	"""ERROR: out of memory!\\n"""		891975	0					
ANR	892012	PrimaryExpression	"""ERROR: out of memory!\\n"""		891975	0					
ANR	892013	ReturnType	void		891975	1					
ANR	892014	Identifier	JobEvictedEvent :: setCoreFile		891975	2					
ANR	892015	ParameterList	const char * core_name		891975	3					
ANR	892016	Parameter	const char * core_name	1966:30:42022:42042	891975	0	True				
ANR	892017	ParameterType	const char *		891975	0					
ANR	892018	Identifier	core_name		891975	1					
ANR	892019	CFGEntryNode	ENTRY		891975		True				
ANR	892020	CFGExitNode	EXIT		891975		True				
ANR	892021	Symbol	NULL		891975						
ANR	892022	Symbol	strnewp		891975						
ANR	892023	Symbol	core_name		891975						
ANR	892024	Symbol	core_file		891975						
ANR	892025	Function	JobEvictedEvent :: getCoreFile	1979:0:42215:42285							
ANR	892026	FunctionDef	JobEvictedEvent :: getCoreFile ()		892025	0					
ANR	892027	CompoundStatement		1981:0:42264:42285	892025	0					
ANR	892028	ReturnStatement	return core_file ;	1982:1:42267:42283	892025	0	True				
ANR	892029	Identifier	core_file		892025	0					
ANR	892030	ReturnType	const char *		892025	1					
ANR	892031	Identifier	JobEvictedEvent :: getCoreFile		892025	2					
ANR	892032	ParameterList			892025	3					
ANR	892033	CFGEntryNode	ENTRY		892025		True				
ANR	892034	CFGExitNode	EXIT		892025		True				
ANR	892035	Symbol	core_file		892025						
ANR	892036	Function	JobEvictedEvent :: readEvent	1986:0:42289:44875							
ANR	892037	FunctionDef	JobEvictedEvent :: readEvent (FILE * file)		892036	0					
ANR	892038	CompoundStatement		1988:0:42334:44875	892036	0					
ANR	892039	IdentifierDeclStatement	int ckpt ;	1989:1:42337:42346	892036	0	True				
ANR	892040	IdentifierDecl	ckpt		892036	0					
ANR	892041	IdentifierDeclType	int		892036	0					
ANR	892042	Identifier	ckpt		892036	1					
ANR	892043	IdentifierDeclStatement	char buffer [ 128 ] ;	1990:1:42349:42366	892036	1	True				
ANR	892044	IdentifierDecl	buffer [ 128 ]		892036	0					
ANR	892045	IdentifierDeclType	char [ 128 ]		892036	0					
ANR	892046	Identifier	buffer		892036	1					
ANR	892047	PrimaryExpression	128		892036	2					
ANR	892048	IfStatement	"if ( ( fscanf ( file , ""Job was evicted."" ) == EOF ) || ( fscanf ( file , ""\\n\\t(%d) "" , & ckpt ) != 1 ) )"		892036	2					
ANR	892049	Condition	"( fscanf ( file , ""Job was evicted."" ) == EOF ) || ( fscanf ( file , ""\\n\\t(%d) "" , & ckpt ) != 1 )"	1992:5:42374:42459	892036	0	True				
ANR	892050	OrExpression	"( fscanf ( file , ""Job was evicted."" ) == EOF ) || ( fscanf ( file , ""\\n\\t(%d) "" , & ckpt ) != 1 )"		892036	0		||			
ANR	892051	EqualityExpression	"fscanf ( file , ""Job was evicted."" ) == EOF"		892036	0		==			
ANR	892052	CallExpression	"fscanf ( file , ""Job was evicted."" )"		892036	0					
ANR	892053	Callee	fscanf		892036	0					
ANR	892054	Identifier	fscanf		892036	0					
ANR	892055	ArgumentList	file		892036	1					
ANR	892056	Argument	file		892036	0					
ANR	892057	Identifier	file		892036	0					
ANR	892058	Argument	"""Job was evicted."""		892036	1					
ANR	892059	PrimaryExpression	"""Job was evicted."""		892036	0					
ANR	892060	Identifier	EOF		892036	1					
ANR	892061	EqualityExpression	"fscanf ( file , ""\\n\\t(%d) "" , & ckpt ) != 1"		892036	1		!=			
ANR	892062	CallExpression	"fscanf ( file , ""\\n\\t(%d) "" , & ckpt )"		892036	0					
ANR	892063	Callee	fscanf		892036	0					
ANR	892064	Identifier	fscanf		892036	0					
ANR	892065	ArgumentList	file		892036	1					
ANR	892066	Argument	file		892036	0					
ANR	892067	Identifier	file		892036	0					
ANR	892068	Argument	"""\\n\\t(%d) """		892036	1					
ANR	892069	PrimaryExpression	"""\\n\\t(%d) """		892036	0					
ANR	892070	Argument	& ckpt		892036	2					
ANR	892071	UnaryOperationExpression	& ckpt		892036	0					
ANR	892072	UnaryOperator	&		892036	0					
ANR	892073	Identifier	ckpt		892036	1					
ANR	892074	PrimaryExpression	1		892036	1					
ANR	892075	CompoundStatement		7:1:129:129	892036	1					
ANR	892076	ReturnStatement	return 0 ;	1995:2:42468:42476	892036	0	True				
ANR	892077	PrimaryExpression	0		892036	0					
ANR	892078	ExpressionStatement	checkpointed = ( bool ) ckpt	1997:1:42482:42508	892036	3	True				
ANR	892079	AssignmentExpression	checkpointed = ( bool ) ckpt		892036	0		=			
ANR	892080	Identifier	checkpointed		892036	0					
ANR	892081	CastExpression	( bool ) ckpt		892036	1					
ANR	892082	CastTarget	bool		892036	0					
ANR	892083	Identifier	ckpt		892036	1					
ANR	892084	IfStatement	"if ( fgets ( buffer , 128 , file ) == 0 )"		892036	4					
ANR	892085	Condition	"fgets ( buffer , 128 , file ) == 0"	1998:5:42515:42543	892036	0	True				
ANR	892086	EqualityExpression	"fgets ( buffer , 128 , file ) == 0"		892036	0		==			
ANR	892087	CallExpression	"fgets ( buffer , 128 , file )"		892036	0					
ANR	892088	Callee	fgets		892036	0					
ANR	892089	Identifier	fgets		892036	0					
ANR	892090	ArgumentList	buffer		892036	1					
ANR	892091	Argument	buffer		892036	0					
ANR	892092	Identifier	buffer		892036	0					
ANR	892093	Argument	128		892036	1					
ANR	892094	PrimaryExpression	128		892036	0					
ANR	892095	Argument	file		892036	2					
ANR	892096	Identifier	file		892036	0					
ANR	892097	PrimaryExpression	0		892036	1					
ANR	892098	CompoundStatement		11:37:212:212	892036	1					
ANR	892099	ReturnStatement	return 0 ;	1999:2:42551:42559	892036	0	True				
ANR	892100	PrimaryExpression	0		892036	0					
ANR	892101	IfStatement	"if ( ! strncmp ( buffer , ""Job terminated and was requeued"" , 31 ) )"		892036	5					
ANR	892102	Condition	"! strncmp ( buffer , ""Job terminated and was requeued"" , 31 )"	2008:5:42824:42879	892036	0	True				
ANR	892103	UnaryOperationExpression	"! strncmp ( buffer , ""Job terminated and was requeued"" , 31 )"		892036	0					
ANR	892104	UnaryOperator	!		892036	0					
ANR	892105	CallExpression	"strncmp ( buffer , ""Job terminated and was requeued"" , 31 )"		892036	1					
ANR	892106	Callee	strncmp		892036	0					
ANR	892107	Identifier	strncmp		892036	0					
ANR	892108	ArgumentList	buffer		892036	1					
ANR	892109	Argument	buffer		892036	0					
ANR	892110	Identifier	buffer		892036	0					
ANR	892111	Argument	"""Job terminated and was requeued"""		892036	1					
ANR	892112	PrimaryExpression	"""Job terminated and was requeued"""		892036	0					
ANR	892113	Argument	31		892036	2					
ANR	892114	PrimaryExpression	31		892036	0					
ANR	892115	CompoundStatement		21:64:548:548	892036	1					
ANR	892116	ExpressionStatement	terminate_and_requeued = true	2009:2:42887:42916	892036	0	True				
ANR	892117	AssignmentExpression	terminate_and_requeued = true		892036	0		=			
ANR	892118	Identifier	terminate_and_requeued		892036	0					
ANR	892119	Identifier	true		892036	1					
ANR	892120	ElseStatement	else		892036	0					
ANR	892121	CompoundStatement		23:8:591:591	892036	0					
ANR	892122	ExpressionStatement	terminate_and_requeued = false	2011:2:42930:42960	892036	0	True				
ANR	892123	AssignmentExpression	terminate_and_requeued = false		892036	0		=			
ANR	892124	Identifier	terminate_and_requeued		892036	0					
ANR	892125	Identifier	false		892036	1					
ANR	892126	IfStatement	"if ( ! readRusage ( file , run_remote_rusage ) || ! fgets ( buffer , 128 , file ) || ! readRusage ( file , run_local_rusage ) || ! fgets ( buffer , 128 , file ) )"		892036	6					
ANR	892127	Condition	"! readRusage ( file , run_remote_rusage ) || ! fgets ( buffer , 128 , file ) || ! readRusage ( file , run_local_rusage ) || ! fgets ( buffer , 128 , file )"	2014:5:42971:43099	892036	0	True				
ANR	892128	OrExpression	"! readRusage ( file , run_remote_rusage ) || ! fgets ( buffer , 128 , file ) || ! readRusage ( file , run_local_rusage ) || ! fgets ( buffer , 128 , file )"		892036	0		||			
ANR	892129	UnaryOperationExpression	"! readRusage ( file , run_remote_rusage )"		892036	0					
ANR	892130	UnaryOperator	!		892036	0					
ANR	892131	CallExpression	"readRusage ( file , run_remote_rusage )"		892036	1					
ANR	892132	Callee	readRusage		892036	0					
ANR	892133	Identifier	readRusage		892036	0					
ANR	892134	ArgumentList	file		892036	1					
ANR	892135	Argument	file		892036	0					
ANR	892136	Identifier	file		892036	0					
ANR	892137	Argument	run_remote_rusage		892036	1					
ANR	892138	Identifier	run_remote_rusage		892036	0					
ANR	892139	OrExpression	"! fgets ( buffer , 128 , file ) || ! readRusage ( file , run_local_rusage ) || ! fgets ( buffer , 128 , file )"		892036	1		||			
ANR	892140	UnaryOperationExpression	"! fgets ( buffer , 128 , file )"		892036	0					
ANR	892141	UnaryOperator	!		892036	0					
ANR	892142	CallExpression	"fgets ( buffer , 128 , file )"		892036	1					
ANR	892143	Callee	fgets		892036	0					
ANR	892144	Identifier	fgets		892036	0					
ANR	892145	ArgumentList	buffer		892036	1					
ANR	892146	Argument	buffer		892036	0					
ANR	892147	Identifier	buffer		892036	0					
ANR	892148	Argument	128		892036	1					
ANR	892149	PrimaryExpression	128		892036	0					
ANR	892150	Argument	file		892036	2					
ANR	892151	Identifier	file		892036	0					
ANR	892152	OrExpression	"! readRusage ( file , run_local_rusage ) || ! fgets ( buffer , 128 , file )"		892036	1		||			
ANR	892153	UnaryOperationExpression	"! readRusage ( file , run_local_rusage )"		892036	0					
ANR	892154	UnaryOperator	!		892036	0					
ANR	892155	CallExpression	"readRusage ( file , run_local_rusage )"		892036	1					
ANR	892156	Callee	readRusage		892036	0					
ANR	892157	Identifier	readRusage		892036	0					
ANR	892158	ArgumentList	file		892036	1					
ANR	892159	Argument	file		892036	0					
ANR	892160	Identifier	file		892036	0					
ANR	892161	Argument	run_local_rusage		892036	1					
ANR	892162	Identifier	run_local_rusage		892036	0					
ANR	892163	UnaryOperationExpression	"! fgets ( buffer , 128 , file )"		892036	1					
ANR	892164	UnaryOperator	!		892036	0					
ANR	892165	CallExpression	"fgets ( buffer , 128 , file )"		892036	1					
ANR	892166	Callee	fgets		892036	0					
ANR	892167	Identifier	fgets		892036	0					
ANR	892168	ArgumentList	buffer		892036	1					
ANR	892169	Argument	buffer		892036	0					
ANR	892170	Identifier	buffer		892036	0					
ANR	892171	Argument	128		892036	1					
ANR	892172	PrimaryExpression	128		892036	0					
ANR	892173	Argument	file		892036	2					
ANR	892174	Identifier	file		892036	0					
ANR	892175	CompoundStatement		29:1:769:769	892036	1					
ANR	892176	ReturnStatement	return 0 ;	2017:2:43108:43116	892036	0	True				
ANR	892177	PrimaryExpression	0		892036	0					
ANR	892178	IfStatement	"if ( ! fscanf ( file , ""\\t%f  -  Run Bytes Sent By Job\\n"" , & sent_bytes ) || ! fscanf ( file , ""\\t%f  -  Run Bytes Received By Job\\n"" , & recvd_bytes ) )"		892036	7					
ANR	892179	Condition	"! fscanf ( file , ""\\t%f  -  Run Bytes Sent By Job\\n"" , & sent_bytes ) || ! fscanf ( file , ""\\t%f  -  Run Bytes Received By Job\\n"" , & recvd_bytes )"	2020:5:43127:43265	892036	0	True				
ANR	892180	OrExpression	"! fscanf ( file , ""\\t%f  -  Run Bytes Sent By Job\\n"" , & sent_bytes ) || ! fscanf ( file , ""\\t%f  -  Run Bytes Received By Job\\n"" , & recvd_bytes )"		892036	0		||			
ANR	892181	UnaryOperationExpression	"! fscanf ( file , ""\\t%f  -  Run Bytes Sent By Job\\n"" , & sent_bytes )"		892036	0					
ANR	892182	UnaryOperator	!		892036	0					
ANR	892183	CallExpression	"fscanf ( file , ""\\t%f  -  Run Bytes Sent By Job\\n"" , & sent_bytes )"		892036	1					
ANR	892184	Callee	fscanf		892036	0					
ANR	892185	Identifier	fscanf		892036	0					
ANR	892186	ArgumentList	file		892036	1					
ANR	892187	Argument	file		892036	0					
ANR	892188	Identifier	file		892036	0					
ANR	892189	Argument	"""\\t%f  -  Run Bytes Sent By Job\\n"""		892036	1					
ANR	892190	PrimaryExpression	"""\\t%f  -  Run Bytes Sent By Job\\n"""		892036	0					
ANR	892191	Argument	& sent_bytes		892036	2					
ANR	892192	UnaryOperationExpression	& sent_bytes		892036	0					
ANR	892193	UnaryOperator	&		892036	0					
ANR	892194	Identifier	sent_bytes		892036	1					
ANR	892195	UnaryOperationExpression	"! fscanf ( file , ""\\t%f  -  Run Bytes Received By Job\\n"" , & recvd_bytes )"		892036	1					
ANR	892196	UnaryOperator	!		892036	0					
ANR	892197	CallExpression	"fscanf ( file , ""\\t%f  -  Run Bytes Received By Job\\n"" , & recvd_bytes )"		892036	1					
ANR	892198	Callee	fscanf		892036	0					
ANR	892199	Identifier	fscanf		892036	0					
ANR	892200	ArgumentList	file		892036	1					
ANR	892201	Argument	file		892036	0					
ANR	892202	Identifier	file		892036	0					
ANR	892203	Argument	"""\\t%f  -  Run Bytes Received By Job\\n"""		892036	1					
ANR	892204	PrimaryExpression	"""\\t%f  -  Run Bytes Received By Job\\n"""		892036	0					
ANR	892205	Argument	& recvd_bytes		892036	2					
ANR	892206	UnaryOperationExpression	& recvd_bytes		892036	0					
ANR	892207	UnaryOperator	&		892036	0					
ANR	892208	Identifier	recvd_bytes		892036	1					
ANR	892209	CompoundStatement		36:1:935:935	892036	1					
ANR	892210	ReturnStatement	return 1 ;	2024:2:43274:43282	892036	0	True				
ANR	892211	PrimaryExpression	1		892036	0					
ANR	892212	IfStatement	if ( ! terminate_and_requeued )		892036	8					
ANR	892213	Condition	! terminate_and_requeued	2027:5:43323:43346	892036	0	True				
ANR	892214	UnaryOperationExpression	! terminate_and_requeued		892036	0					
ANR	892215	UnaryOperator	!		892036	0					
ANR	892216	Identifier	terminate_and_requeued		892036	1					
ANR	892217	CompoundStatement		40:32:1015:1015	892036	1					
ANR	892218	ReturnStatement	return 1 ;	2029:2:43381:43389	892036	0	True				
ANR	892219	PrimaryExpression	1		892036	0					
ANR	892220	IdentifierDeclStatement	int normal_term ;	2034:1:43455:43471	892036	9	True				
ANR	892221	IdentifierDecl	normal_term		892036	0					
ANR	892222	IdentifierDeclType	int		892036	0					
ANR	892223	Identifier	normal_term		892036	1					
ANR	892224	IdentifierDeclStatement	int got_core ;	2035:1:43474:43487	892036	10	True				
ANR	892225	IdentifierDecl	got_core		892036	0					
ANR	892226	IdentifierDeclType	int		892036	0					
ANR	892227	Identifier	got_core		892036	1					
ANR	892228	IfStatement	"if ( fscanf ( file , ""\\n\\t(%d) "" , & normal_term ) != 1 )"		892036	11					
ANR	892229	Condition	"fscanf ( file , ""\\n\\t(%d) "" , & normal_term ) != 1"	2037:5:43495:43538	892036	0	True				
ANR	892230	EqualityExpression	"fscanf ( file , ""\\n\\t(%d) "" , & normal_term ) != 1"		892036	0		!=			
ANR	892231	CallExpression	"fscanf ( file , ""\\n\\t(%d) "" , & normal_term )"		892036	0					
ANR	892232	Callee	fscanf		892036	0					
ANR	892233	Identifier	fscanf		892036	0					
ANR	892234	ArgumentList	file		892036	1					
ANR	892235	Argument	file		892036	0					
ANR	892236	Identifier	file		892036	0					
ANR	892237	Argument	"""\\n\\t(%d) """		892036	1					
ANR	892238	PrimaryExpression	"""\\n\\t(%d) """		892036	0					
ANR	892239	Argument	& normal_term		892036	2					
ANR	892240	UnaryOperationExpression	& normal_term		892036	0					
ANR	892241	UnaryOperator	&		892036	0					
ANR	892242	Identifier	normal_term		892036	1					
ANR	892243	PrimaryExpression	1		892036	1					
ANR	892244	CompoundStatement		50:52:1207:1207	892036	1					
ANR	892245	ReturnStatement	return 0 ;	2038:2:43546:43554	892036	0	True				
ANR	892246	PrimaryExpression	0		892036	0					
ANR	892247	IfStatement	if ( normal_term )		892036	12					
ANR	892248	Condition	normal_term	2040:5:43564:43574	892036	0	True				
ANR	892249	Identifier	normal_term		892036	0					
ANR	892250	CompoundStatement		53:19:1243:1243	892036	1					
ANR	892251	ExpressionStatement	normal = true	2041:2:43582:43595	892036	0	True				
ANR	892252	AssignmentExpression	normal = true		892036	0		=			
ANR	892253	Identifier	normal		892036	0					
ANR	892254	Identifier	true		892036	1					
ANR	892255	IfStatement	"if ( fscanf ( file , ""Normal termination (return value %d)\\n"" , & return_value ) != 1 )"		892036	1					
ANR	892256	Condition	"fscanf ( file , ""Normal termination (return value %d)\\n"" , & return_value ) != 1"	2042:6:43603:43682	892036	0	True				
ANR	892257	EqualityExpression	"fscanf ( file , ""Normal termination (return value %d)\\n"" , & return_value ) != 1"		892036	0		!=			
ANR	892258	CallExpression	"fscanf ( file , ""Normal termination (return value %d)\\n"" , & return_value )"		892036	0					
ANR	892259	Callee	fscanf		892036	0					
ANR	892260	Identifier	fscanf		892036	0					
ANR	892261	ArgumentList	file		892036	1					
ANR	892262	Argument	file		892036	0					
ANR	892263	Identifier	file		892036	0					
ANR	892264	Argument	"""Normal termination (return value %d)\\n"""		892036	1					
ANR	892265	PrimaryExpression	"""Normal termination (return value %d)\\n"""		892036	0					
ANR	892266	Argument	& return_value		892036	2					
ANR	892267	UnaryOperationExpression	& return_value		892036	0					
ANR	892268	UnaryOperator	&		892036	0					
ANR	892269	Identifier	return_value		892036	1					
ANR	892270	PrimaryExpression	1		892036	1					
ANR	892271	CompoundStatement		56:28:1351:1351	892036	1					
ANR	892272	ReturnStatement	return 0 ;	2044:3:43691:43699	892036	0	True				
ANR	892273	PrimaryExpression	0		892036	0					
ANR	892274	ElseStatement	else		892036	0					
ANR	892275	CompoundStatement		59:8:1378:1378	892036	0					
ANR	892276	ExpressionStatement	normal = false	2047:2:43717:43731	892036	0	True				
ANR	892277	AssignmentExpression	normal = false		892036	0		=			
ANR	892278	Identifier	normal		892036	0					
ANR	892279	Identifier	false		892036	1					
ANR	892280	IfStatement	"if ( fscanf ( file , ""Abnormal termination (signal %d)"" , & signal_number ) != 1 )"		892036	1					
ANR	892281	Condition	"fscanf ( file , ""Abnormal termination (signal %d)"" , & signal_number ) != 1"	2048:6:43739:43813	892036	0	True				
ANR	892282	EqualityExpression	"fscanf ( file , ""Abnormal termination (signal %d)"" , & signal_number ) != 1"		892036	0		!=			
ANR	892283	CallExpression	"fscanf ( file , ""Abnormal termination (signal %d)"" , & signal_number )"		892036	0					
ANR	892284	Callee	fscanf		892036	0					
ANR	892285	Identifier	fscanf		892036	0					
ANR	892286	ArgumentList	file		892036	1					
ANR	892287	Argument	file		892036	0					
ANR	892288	Identifier	file		892036	0					
ANR	892289	Argument	"""Abnormal termination (signal %d)"""		892036	1					
ANR	892290	PrimaryExpression	"""Abnormal termination (signal %d)"""		892036	0					
ANR	892291	Argument	& signal_number		892036	2					
ANR	892292	UnaryOperationExpression	& signal_number		892036	0					
ANR	892293	UnaryOperator	&		892036	0					
ANR	892294	Identifier	signal_number		892036	1					
ANR	892295	PrimaryExpression	1		892036	1					
ANR	892296	CompoundStatement		62:29:1482:1482	892036	1					
ANR	892297	ReturnStatement	return 0 ;	2050:3:43822:43830	892036	0	True				
ANR	892298	PrimaryExpression	0		892036	0					
ANR	892299	IfStatement	"if ( fscanf ( file , ""\\n\\t(%d) "" , & got_core ) != 1 )"		892036	2					
ANR	892300	Condition	"fscanf ( file , ""\\n\\t(%d) "" , & got_core ) != 1"	2052:6:43842:43882	892036	0	True				
ANR	892301	EqualityExpression	"fscanf ( file , ""\\n\\t(%d) "" , & got_core ) != 1"		892036	0		!=			
ANR	892302	CallExpression	"fscanf ( file , ""\\n\\t(%d) "" , & got_core )"		892036	0					
ANR	892303	Callee	fscanf		892036	0					
ANR	892304	Identifier	fscanf		892036	0					
ANR	892305	ArgumentList	file		892036	1					
ANR	892306	Argument	file		892036	0					
ANR	892307	Identifier	file		892036	0					
ANR	892308	Argument	"""\\n\\t(%d) """		892036	1					
ANR	892309	PrimaryExpression	"""\\n\\t(%d) """		892036	0					
ANR	892310	Argument	& got_core		892036	2					
ANR	892311	UnaryOperationExpression	& got_core		892036	0					
ANR	892312	UnaryOperator	&		892036	0					
ANR	892313	Identifier	got_core		892036	1					
ANR	892314	PrimaryExpression	1		892036	1					
ANR	892315	CompoundStatement		65:50:1551:1551	892036	1					
ANR	892316	ReturnStatement	return 0 ;	2053:3:43891:43899	892036	0	True				
ANR	892317	PrimaryExpression	0		892036	0					
ANR	892318	IfStatement	if ( got_core )		892036	3					
ANR	892319	Condition	got_core	2055:6:43911:43918	892036	0	True				
ANR	892320	Identifier	got_core		892036	0					
ANR	892321	CompoundStatement		68:17:1587:1587	892036	1					
ANR	892322	IfStatement	"if ( fscanf ( file , ""Corefile in: "" ) == EOF )"		892036	0					
ANR	892323	Condition	"fscanf ( file , ""Corefile in: "" ) == EOF"	2056:7:43931:43966	892036	0	True				
ANR	892324	EqualityExpression	"fscanf ( file , ""Corefile in: "" ) == EOF"		892036	0		==			
ANR	892325	CallExpression	"fscanf ( file , ""Corefile in: "" )"		892036	0					
ANR	892326	Callee	fscanf		892036	0					
ANR	892327	Identifier	fscanf		892036	0					
ANR	892328	ArgumentList	file		892036	1					
ANR	892329	Argument	file		892036	0					
ANR	892330	Identifier	file		892036	0					
ANR	892331	Argument	"""Corefile in: """		892036	1					
ANR	892332	PrimaryExpression	"""Corefile in: """		892036	0					
ANR	892333	Identifier	EOF		892036	1					
ANR	892334	CompoundStatement		69:46:1635:1635	892036	1					
ANR	892335	ReturnStatement	return 0 ;	2057:4:43976:43984	892036	0	True				
ANR	892336	PrimaryExpression	0		892036	0					
ANR	892337	IfStatement	"if ( ! fgets ( buffer , 128 , file ) )"		892036	1					
ANR	892338	Condition	"! fgets ( buffer , 128 , file )"	2059:7:43998:44022	892036	0	True				
ANR	892339	UnaryOperationExpression	"! fgets ( buffer , 128 , file )"		892036	0					
ANR	892340	UnaryOperator	!		892036	0					
ANR	892341	CallExpression	"fgets ( buffer , 128 , file )"		892036	1					
ANR	892342	Callee	fgets		892036	0					
ANR	892343	Identifier	fgets		892036	0					
ANR	892344	ArgumentList	buffer		892036	1					
ANR	892345	Argument	buffer		892036	0					
ANR	892346	Identifier	buffer		892036	0					
ANR	892347	Argument	128		892036	1					
ANR	892348	PrimaryExpression	128		892036	0					
ANR	892349	Argument	file		892036	2					
ANR	892350	Identifier	file		892036	0					
ANR	892351	CompoundStatement		72:35:1691:1691	892036	1					
ANR	892352	ReturnStatement	return 0 ;	2060:4:44032:44040	892036	0	True				
ANR	892353	PrimaryExpression	0		892036	0					
ANR	892354	ExpressionStatement	chomp ( buffer )	2062:3:44050:44065	892036	2	True				
ANR	892355	CallExpression	chomp ( buffer )		892036	0					
ANR	892356	Callee	chomp		892036	0					
ANR	892357	Identifier	chomp		892036	0					
ANR	892358	ArgumentList	buffer		892036	1					
ANR	892359	Argument	buffer		892036	0					
ANR	892360	Identifier	buffer		892036	0					
ANR	892361	ExpressionStatement	setCoreFile ( buffer )	2063:3:44070:44091	892036	3	True				
ANR	892362	CallExpression	setCoreFile ( buffer )		892036	0					
ANR	892363	Callee	setCoreFile		892036	0					
ANR	892364	Identifier	setCoreFile		892036	0					
ANR	892365	ArgumentList	buffer		892036	1					
ANR	892366	Argument	buffer		892036	0					
ANR	892367	Identifier	buffer		892036	0					
ANR	892368	ElseStatement	else		892036	0					
ANR	892369	CompoundStatement		77:9:1767:1767	892036	0					
ANR	892370	IfStatement	"if ( ! fgets ( buffer , 128 , file ) )"		892036	0					
ANR	892371	Condition	"! fgets ( buffer , 128 , file )"	2065:7:44111:44135	892036	0	True				
ANR	892372	UnaryOperationExpression	"! fgets ( buffer , 128 , file )"		892036	0					
ANR	892373	UnaryOperator	!		892036	0					
ANR	892374	CallExpression	"fgets ( buffer , 128 , file )"		892036	1					
ANR	892375	Callee	fgets		892036	0					
ANR	892376	Identifier	fgets		892036	0					
ANR	892377	ArgumentList	buffer		892036	1					
ANR	892378	Argument	buffer		892036	0					
ANR	892379	Identifier	buffer		892036	0					
ANR	892380	Argument	128		892036	1					
ANR	892381	PrimaryExpression	128		892036	0					
ANR	892382	Argument	file		892036	2					
ANR	892383	Identifier	file		892036	0					
ANR	892384	CompoundStatement		78:35:1804:1804	892036	1					
ANR	892385	ReturnStatement	return 0 ;	2066:4:44145:44153	892036	0	True				
ANR	892386	PrimaryExpression	0		892036	0					
ANR	892387	IdentifierDeclStatement	fpos_t filep ;	2074:1:44311:44323	892036	13	True				
ANR	892388	IdentifierDecl	filep		892036	0					
ANR	892389	IdentifierDeclType	fpos_t		892036	0					
ANR	892390	Identifier	filep		892036	1					
ANR	892391	ExpressionStatement	"fgetpos ( file , & filep )"	2075:1:44326:44349	892036	14	True				
ANR	892392	CallExpression	"fgetpos ( file , & filep )"		892036	0					
ANR	892393	Callee	fgetpos		892036	0					
ANR	892394	Identifier	fgetpos		892036	0					
ANR	892395	ArgumentList	file		892036	1					
ANR	892396	Argument	file		892036	0					
ANR	892397	Identifier	file		892036	0					
ANR	892398	Argument	& filep		892036	1					
ANR	892399	UnaryOperationExpression	& filep		892036	0					
ANR	892400	UnaryOperator	&		892036	0					
ANR	892401	Identifier	filep		892036	1					
ANR	892402	IdentifierDeclStatement	char reason_buf [ BUFSIZ ] ;	2077:4:44356:44379	892036	15	True				
ANR	892403	IdentifierDecl	reason_buf [ BUFSIZ ]		892036	0					
ANR	892404	IdentifierDeclType	char [ BUFSIZ ]		892036	0					
ANR	892405	Identifier	reason_buf		892036	1					
ANR	892406	Identifier	BUFSIZ		892036	2					
ANR	892407	IfStatement	"if ( ! fgets ( reason_buf , BUFSIZ , file ) || strcmp ( reason_buf , ""...\\n"" ) == 0 )"		892036	16					
ANR	892408	Condition	"! fgets ( reason_buf , BUFSIZ , file ) || strcmp ( reason_buf , ""...\\n"" ) == 0"	2078:8:44389:44462	892036	0	True				
ANR	892409	OrExpression	"! fgets ( reason_buf , BUFSIZ , file ) || strcmp ( reason_buf , ""...\\n"" ) == 0"		892036	0		||			
ANR	892410	UnaryOperationExpression	"! fgets ( reason_buf , BUFSIZ , file )"		892036	0					
ANR	892411	UnaryOperator	!		892036	0					
ANR	892412	CallExpression	"fgets ( reason_buf , BUFSIZ , file )"		892036	1					
ANR	892413	Callee	fgets		892036	0					
ANR	892414	Identifier	fgets		892036	0					
ANR	892415	ArgumentList	reason_buf		892036	1					
ANR	892416	Argument	reason_buf		892036	0					
ANR	892417	Identifier	reason_buf		892036	0					
ANR	892418	Argument	BUFSIZ		892036	1					
ANR	892419	Identifier	BUFSIZ		892036	0					
ANR	892420	Argument	file		892036	2					
ANR	892421	Identifier	file		892036	0					
ANR	892422	EqualityExpression	"strcmp ( reason_buf , ""...\\n"" ) == 0"		892036	1		==			
ANR	892423	CallExpression	"strcmp ( reason_buf , ""...\\n"" )"		892036	0					
ANR	892424	Callee	strcmp		892036	0					
ANR	892425	Identifier	strcmp		892036	0					
ANR	892426	ArgumentList	reason_buf		892036	1					
ANR	892427	Argument	reason_buf		892036	0					
ANR	892428	Identifier	reason_buf		892036	0					
ANR	892429	Argument	"""...\\n"""		892036	1					
ANR	892430	PrimaryExpression	"""...\\n"""		892036	0					
ANR	892431	PrimaryExpression	0		892036	1					
ANR	892432	CompoundStatement		92:39:2131:2131	892036	1					
ANR	892433	ExpressionStatement	"fsetpos ( file , & filep )"	2081:2:44471:44494	892036	0	True				
ANR	892434	CallExpression	"fsetpos ( file , & filep )"		892036	0					
ANR	892435	Callee	fsetpos		892036	0					
ANR	892436	Identifier	fsetpos		892036	0					
ANR	892437	ArgumentList	file		892036	1					
ANR	892438	Argument	file		892036	0					
ANR	892439	Identifier	file		892036	0					
ANR	892440	Argument	& filep		892036	1					
ANR	892441	UnaryOperationExpression	& filep		892036	0					
ANR	892442	UnaryOperator	&		892036	0					
ANR	892443	Identifier	filep		892036	1					
ANR	892444	ReturnStatement	return 1 ;	2082:2:44498:44506	892036	1	True				
ANR	892445	PrimaryExpression	1		892036	0					
ANR	892446	ExpressionStatement	chomp ( reason_buf )	2085:1:44540:44559	892036	17	True				
ANR	892447	CallExpression	chomp ( reason_buf )		892036	0					
ANR	892448	Callee	chomp		892036	0					
ANR	892449	Identifier	chomp		892036	0					
ANR	892450	ArgumentList	reason_buf		892036	1					
ANR	892451	Argument	reason_buf		892036	0					
ANR	892452	Identifier	reason_buf		892036	0					
ANR	892453	IfStatement	if ( reason_buf [ 0 ] == '\\t' && reason_buf [ 1 ] )		892036	18					
ANR	892454	Condition	reason_buf [ 0 ] == '\\t' && reason_buf [ 1 ]	2089:5:44750:44787	892036	0	True				
ANR	892455	AndExpression	reason_buf [ 0 ] == '\\t' && reason_buf [ 1 ]		892036	0		&&			
ANR	892456	EqualityExpression	reason_buf [ 0 ] == '\\t'		892036	0		==			
ANR	892457	ArrayIndexing	reason_buf [ 0 ]		892036	0					
ANR	892458	Identifier	reason_buf		892036	0					
ANR	892459	PrimaryExpression	0		892036	1					
ANR	892460	PrimaryExpression	'\\t'		892036	1					
ANR	892461	ArrayIndexing	reason_buf [ 1 ]		892036	1					
ANR	892462	Identifier	reason_buf		892036	0					
ANR	892463	PrimaryExpression	1		892036	1					
ANR	892464	CompoundStatement		102:46:2456:2456	892036	1					
ANR	892465	ExpressionStatement	setReason ( & reason_buf [ 1 ] )	2090:2:44795:44822	892036	0	True				
ANR	892466	CallExpression	setReason ( & reason_buf [ 1 ] )		892036	0					
ANR	892467	Callee	setReason		892036	0					
ANR	892468	Identifier	setReason		892036	0					
ANR	892469	ArgumentList	& reason_buf [ 1 ]		892036	1					
ANR	892470	Argument	& reason_buf [ 1 ]		892036	0					
ANR	892471	UnaryOperationExpression	& reason_buf [ 1 ]		892036	0					
ANR	892472	UnaryOperator	&		892036	0					
ANR	892473	ArrayIndexing	reason_buf [ 1 ]		892036	1					
ANR	892474	Identifier	reason_buf		892036	0					
ANR	892475	PrimaryExpression	1		892036	1					
ANR	892476	ElseStatement	else		892036	0					
ANR	892477	CompoundStatement		104:8:2497:2497	892036	0					
ANR	892478	ExpressionStatement	setReason ( reason_buf )	2092:2:44836:44859	892036	0	True				
ANR	892479	CallExpression	setReason ( reason_buf )		892036	0					
ANR	892480	Callee	setReason		892036	0					
ANR	892481	Identifier	setReason		892036	0					
ANR	892482	ArgumentList	reason_buf		892036	1					
ANR	892483	Argument	reason_buf		892036	0					
ANR	892484	Identifier	reason_buf		892036	0					
ANR	892485	ReturnStatement	return 1 ;	2094:1:44865:44873	892036	19	True				
ANR	892486	PrimaryExpression	1		892036	0					
ANR	892487	ReturnType	int		892036	1					
ANR	892488	Identifier	JobEvictedEvent :: readEvent		892036	2					
ANR	892489	ParameterList	FILE * file		892036	3					
ANR	892490	Parameter	FILE * file	1987:28:42321:42330	892036	0	True				
ANR	892491	ParameterType	FILE *		892036	0					
ANR	892492	Identifier	file		892036	1					
ANR	892493	CFGEntryNode	ENTRY		892036		True				
ANR	892494	CFGExitNode	EXIT		892036		True				
ANR	892495	Symbol	terminate_and_requeued		892036						
ANR	892496	Symbol	run_local_rusage		892036						
ANR	892497	Symbol	ckpt		892036						
ANR	892498	Symbol	& signal_number		892036						
ANR	892499	Symbol	fgets		892036						
ANR	892500	Symbol	& got_core		892036						
ANR	892501	Symbol	strncmp		892036						
ANR	892502	Symbol	file		892036						
ANR	892503	Symbol	& recvd_bytes		892036						
ANR	892504	Symbol	run_remote_rusage		892036						
ANR	892505	Symbol	buffer		892036						
ANR	892506	Symbol	& normal_term		892036						
ANR	892507	Symbol	EOF		892036						
ANR	892508	Symbol	strcmp		892036						
ANR	892509	Symbol	normal		892036						
ANR	892510	Symbol	false		892036						
ANR	892511	Symbol	normal_term		892036						
ANR	892512	Symbol	readRusage		892036						
ANR	892513	Symbol	& filep		892036						
ANR	892514	Symbol	checkpointed		892036						
ANR	892515	Symbol	& ckpt		892036						
ANR	892516	Symbol	reason_buf		892036						
ANR	892517	Symbol	& return_value		892036						
ANR	892518	Symbol	fscanf		892036						
ANR	892519	Symbol	true		892036						
ANR	892520	Symbol	got_core		892036						
ANR	892521	Symbol	filep		892036						
ANR	892522	Symbol	* reason_buf		892036						
ANR	892523	Symbol	& sent_bytes		892036						
ANR	892524	Symbol	BUFSIZ		892036						
ANR	892525	Function	JobEvictedEvent :: writeEvent	2098:0:44879:48221							
ANR	892526	FunctionDef	JobEvictedEvent :: writeEvent (FILE * file)		892525	0					
ANR	892527	CompoundStatement		2100:0:44925:48221	892525	0					
ANR	892528	IdentifierDeclStatement	"char messagestr [ 512 ] , checkpointedstr [ 6 ] , terminatestr [ 512 ] ;"	2101:2:44929:44988	892525	0	True				
ANR	892529	IdentifierDecl	messagestr [ 512 ]		892525	0					
ANR	892530	IdentifierDeclType	char [ 512 ]		892525	0					
ANR	892531	Identifier	messagestr		892525	1					
ANR	892532	PrimaryExpression	512		892525	2					
ANR	892533	IdentifierDecl	checkpointedstr [ 6 ]		892525	1					
ANR	892534	IdentifierDeclType	char [ 6 ]		892525	0					
ANR	892535	Identifier	checkpointedstr		892525	1					
ANR	892536	PrimaryExpression	6		892525	2					
ANR	892537	IdentifierDecl	terminatestr [ 512 ]		892525	2					
ANR	892538	IdentifierDeclType	char [ 512 ]		892525	0					
ANR	892539	Identifier	terminatestr		892525	1					
ANR	892540	PrimaryExpression	512		892525	2					
ANR	892541	IdentifierDeclStatement	"ClassAd tmpCl1 , tmpCl2 ;"	2102:2:44992:45014	892525	1	True				
ANR	892542	IdentifierDecl	tmpCl1		892525	0					
ANR	892543	IdentifierDeclType	ClassAd		892525	0					
ANR	892544	Identifier	tmpCl1		892525	1					
ANR	892545	IdentifierDecl	tmpCl2		892525	1					
ANR	892546	IdentifierDeclType	ClassAd		892525	0					
ANR	892547	Identifier	tmpCl2		892525	1					
ANR	892548	IdentifierDeclStatement	"MyString tmp = """" ;"	2104:2:45070:45087	892525	2	True				
ANR	892549	IdentifierDecl	"tmp = """""		892525	0					
ANR	892550	IdentifierDeclType	MyString		892525	0					
ANR	892551	Identifier	tmp		892525	1					
ANR	892552	AssignmentExpression	"tmp = """""		892525	2		=			
ANR	892553	Identifier	tmp		892525	0					
ANR	892554	PrimaryExpression	""""""		892525	1					
ANR	892555	ExpressionStatement	"strcpy ( checkpointedstr , """" )"	2109:2:45202:45229	892525	3	True				
ANR	892556	CallExpression	"strcpy ( checkpointedstr , """" )"		892525	0					
ANR	892557	Callee	strcpy		892525	0					
ANR	892558	Identifier	strcpy		892525	0					
ANR	892559	ArgumentList	checkpointedstr		892525	1					
ANR	892560	Argument	checkpointedstr		892525	0					
ANR	892561	Identifier	checkpointedstr		892525	0					
ANR	892562	Argument	""""""		892525	1					
ANR	892563	PrimaryExpression	""""""		892525	0					
ANR	892564	ExpressionStatement	"strcpy ( messagestr , """" )"	2110:2:45233:45255	892525	4	True				
ANR	892565	CallExpression	"strcpy ( messagestr , """" )"		892525	0					
ANR	892566	Callee	strcpy		892525	0					
ANR	892567	Identifier	strcpy		892525	0					
ANR	892568	ArgumentList	messagestr		892525	1					
ANR	892569	Argument	messagestr		892525	0					
ANR	892570	Identifier	messagestr		892525	0					
ANR	892571	Argument	""""""		892525	1					
ANR	892572	PrimaryExpression	""""""		892525	0					
ANR	892573	ExpressionStatement	"strcpy ( terminatestr , """" )"	2111:2:45259:45283	892525	5	True				
ANR	892574	CallExpression	"strcpy ( terminatestr , """" )"		892525	0					
ANR	892575	Callee	strcpy		892525	0					
ANR	892576	Identifier	strcpy		892525	0					
ANR	892577	ArgumentList	terminatestr		892525	1					
ANR	892578	Argument	terminatestr		892525	0					
ANR	892579	Identifier	terminatestr		892525	0					
ANR	892580	Argument	""""""		892525	1					
ANR	892581	PrimaryExpression	""""""		892525	0					
ANR	892582	IdentifierDeclStatement	int retval ;	2114:2:45289:45299	892525	6	True				
ANR	892583	IdentifierDecl	retval		892525	0					
ANR	892584	IdentifierDeclType	int		892525	0					
ANR	892585	Identifier	retval		892525	1					
ANR	892586	IfStatement	"if ( fprintf ( file , ""Job was evicted.\\n\\t"" ) < 0 )"		892525	7					
ANR	892587	Condition	"fprintf ( file , ""Job was evicted.\\n\\t"" ) < 0"	2116:6:45308:45348	892525	0	True				
ANR	892588	RelationalExpression	"fprintf ( file , ""Job was evicted.\\n\\t"" ) < 0"		892525	0		<			
ANR	892589	CallExpression	"fprintf ( file , ""Job was evicted.\\n\\t"" )"		892525	0					
ANR	892590	Callee	fprintf		892525	0					
ANR	892591	Identifier	fprintf		892525	0					
ANR	892592	ArgumentList	file		892525	1					
ANR	892593	Argument	file		892525	0					
ANR	892594	Identifier	file		892525	0					
ANR	892595	Argument	"""Job was evicted.\\n\\t"""		892525	1					
ANR	892596	PrimaryExpression	"""Job was evicted.\\n\\t"""		892525	0					
ANR	892597	PrimaryExpression	0		892525	1					
ANR	892598	CompoundStatement		17:50:426:426	892525	1					
ANR	892599	ReturnStatement	return 0 ;	2117:4:45358:45366	892525	0	True				
ANR	892600	PrimaryExpression	0		892525	0					
ANR	892601	IfStatement	if ( terminate_and_requeued )		892525	8					
ANR	892602	Condition	terminate_and_requeued	2120:6:45379:45400	892525	0	True				
ANR	892603	Identifier	terminate_and_requeued		892525	0					
ANR	892604	CompoundStatement		21:31:478:478	892525	1					
ANR	892605	ExpressionStatement	"retval = fprintf ( file , ""(0) Job terminated and was requeued\\n\\t"" )"	2121:4:45410:45477	892525	0	True				
ANR	892606	AssignmentExpression	"retval = fprintf ( file , ""(0) Job terminated and was requeued\\n\\t"" )"		892525	0		=			
ANR	892607	Identifier	retval		892525	0					
ANR	892608	CallExpression	"fprintf ( file , ""(0) Job terminated and was requeued\\n\\t"" )"		892525	1					
ANR	892609	Callee	fprintf		892525	0					
ANR	892610	Identifier	fprintf		892525	0					
ANR	892611	ArgumentList	file		892525	1					
ANR	892612	Argument	file		892525	0					
ANR	892613	Identifier	file		892525	0					
ANR	892614	Argument	"""(0) Job terminated and was requeued\\n\\t"""		892525	1					
ANR	892615	PrimaryExpression	"""(0) Job terminated and was requeued\\n\\t"""		892525	0					
ANR	892616	ExpressionStatement	"sprintf ( messagestr , ""Job evicted, terminated and was requeued"" )"	2122:4:45483:45547	892525	1	True				
ANR	892617	CallExpression	"sprintf ( messagestr , ""Job evicted, terminated and was requeued"" )"		892525	0					
ANR	892618	Callee	sprintf		892525	0					
ANR	892619	Identifier	sprintf		892525	0					
ANR	892620	ArgumentList	messagestr		892525	1					
ANR	892621	Argument	messagestr		892525	0					
ANR	892622	Identifier	messagestr		892525	0					
ANR	892623	Argument	"""Job evicted, terminated and was requeued"""		892525	1					
ANR	892624	PrimaryExpression	"""Job evicted, terminated and was requeued"""		892525	0					
ANR	892625	ExpressionStatement	"strcpy ( checkpointedstr , ""false"" )"	2123:4:45553:45585	892525	2	True				
ANR	892626	CallExpression	"strcpy ( checkpointedstr , ""false"" )"		892525	0					
ANR	892627	Callee	strcpy		892525	0					
ANR	892628	Identifier	strcpy		892525	0					
ANR	892629	ArgumentList	checkpointedstr		892525	1					
ANR	892630	Argument	checkpointedstr		892525	0					
ANR	892631	Identifier	checkpointedstr		892525	0					
ANR	892632	Argument	"""false"""		892525	1					
ANR	892633	PrimaryExpression	"""false"""		892525	0					
ANR	892634	ElseStatement	else		892525	0					
ANR	892635	IfStatement	if ( checkpointed )		892525	0					
ANR	892636	Condition	checkpointed	2124:13:45600:45611	892525	0	True				
ANR	892637	Identifier	checkpointed		892525	0					
ANR	892638	CompoundStatement		25:28:689:689	892525	1					
ANR	892639	ExpressionStatement	"retval = fprintf ( file , ""(1) Job was checkpointed.\\n\\t"" )"	2125:4:45621:45678	892525	0	True				
ANR	892640	AssignmentExpression	"retval = fprintf ( file , ""(1) Job was checkpointed.\\n\\t"" )"		892525	0		=			
ANR	892641	Identifier	retval		892525	0					
ANR	892642	CallExpression	"fprintf ( file , ""(1) Job was checkpointed.\\n\\t"" )"		892525	1					
ANR	892643	Callee	fprintf		892525	0					
ANR	892644	Identifier	fprintf		892525	0					
ANR	892645	ArgumentList	file		892525	1					
ANR	892646	Argument	file		892525	0					
ANR	892647	Identifier	file		892525	0					
ANR	892648	Argument	"""(1) Job was checkpointed.\\n\\t"""		892525	1					
ANR	892649	PrimaryExpression	"""(1) Job was checkpointed.\\n\\t"""		892525	0					
ANR	892650	ExpressionStatement	"sprintf ( messagestr , ""Job evicted and was checkpointed"" )"	2126:4:45684:45740	892525	1	True				
ANR	892651	CallExpression	"sprintf ( messagestr , ""Job evicted and was checkpointed"" )"		892525	0					
ANR	892652	Callee	sprintf		892525	0					
ANR	892653	Identifier	sprintf		892525	0					
ANR	892654	ArgumentList	messagestr		892525	1					
ANR	892655	Argument	messagestr		892525	0					
ANR	892656	Identifier	messagestr		892525	0					
ANR	892657	Argument	"""Job evicted and was checkpointed"""		892525	1					
ANR	892658	PrimaryExpression	"""Job evicted and was checkpointed"""		892525	0					
ANR	892659	ExpressionStatement	"strcpy ( checkpointedstr , ""true"" )"	2127:4:45746:45777	892525	2	True				
ANR	892660	CallExpression	"strcpy ( checkpointedstr , ""true"" )"		892525	0					
ANR	892661	Callee	strcpy		892525	0					
ANR	892662	Identifier	strcpy		892525	0					
ANR	892663	ArgumentList	checkpointedstr		892525	1					
ANR	892664	Argument	checkpointedstr		892525	0					
ANR	892665	Identifier	checkpointedstr		892525	0					
ANR	892666	Argument	"""true"""		892525	1					
ANR	892667	PrimaryExpression	"""true"""		892525	0					
ANR	892668	ElseStatement	else		892525	0					
ANR	892669	CompoundStatement		29:9:862:862	892525	0					
ANR	892670	ExpressionStatement	"retval = fprintf ( file , ""(0) Job was not checkpointed.\\n\\t"" )"	2129:4:45794:45855	892525	0	True				
ANR	892671	AssignmentExpression	"retval = fprintf ( file , ""(0) Job was not checkpointed.\\n\\t"" )"		892525	0		=			
ANR	892672	Identifier	retval		892525	0					
ANR	892673	CallExpression	"fprintf ( file , ""(0) Job was not checkpointed.\\n\\t"" )"		892525	1					
ANR	892674	Callee	fprintf		892525	0					
ANR	892675	Identifier	fprintf		892525	0					
ANR	892676	ArgumentList	file		892525	1					
ANR	892677	Argument	file		892525	0					
ANR	892678	Identifier	file		892525	0					
ANR	892679	Argument	"""(0) Job was not checkpointed.\\n\\t"""		892525	1					
ANR	892680	PrimaryExpression	"""(0) Job was not checkpointed.\\n\\t"""		892525	0					
ANR	892681	ExpressionStatement	"sprintf ( messagestr , ""Job evicted and was not checkpointed"" )"	2130:4:45861:45921	892525	1	True				
ANR	892682	CallExpression	"sprintf ( messagestr , ""Job evicted and was not checkpointed"" )"		892525	0					
ANR	892683	Callee	sprintf		892525	0					
ANR	892684	Identifier	sprintf		892525	0					
ANR	892685	ArgumentList	messagestr		892525	1					
ANR	892686	Argument	messagestr		892525	0					
ANR	892687	Identifier	messagestr		892525	0					
ANR	892688	Argument	"""Job evicted and was not checkpointed"""		892525	1					
ANR	892689	PrimaryExpression	"""Job evicted and was not checkpointed"""		892525	0					
ANR	892690	ExpressionStatement	"strcpy ( checkpointedstr , ""false"" )"	2131:4:45927:45959	892525	2	True				
ANR	892691	CallExpression	"strcpy ( checkpointedstr , ""false"" )"		892525	0					
ANR	892692	Callee	strcpy		892525	0					
ANR	892693	Identifier	strcpy		892525	0					
ANR	892694	ArgumentList	checkpointedstr		892525	1					
ANR	892695	Argument	checkpointedstr		892525	0					
ANR	892696	Identifier	checkpointedstr		892525	0					
ANR	892697	Argument	"""false"""		892525	1					
ANR	892698	PrimaryExpression	"""false"""		892525	0					
ANR	892699	IfStatement	if ( retval < 0 )		892525	9					
ANR	892700	Condition	retval < 0	2134:6:45972:45981	892525	0	True				
ANR	892701	RelationalExpression	retval < 0		892525	0		<			
ANR	892702	Identifier	retval		892525	0					
ANR	892703	PrimaryExpression	0		892525	1					
ANR	892704	CompoundStatement		35:19:1059:1059	892525	1					
ANR	892705	ReturnStatement	return 0 ;	2135:4:45991:45999	892525	0	True				
ANR	892706	PrimaryExpression	0		892525	0					
ANR	892707	IfStatement	"if ( ( ! writeRusage ( file , run_remote_rusage ) ) || ( fprintf ( file , ""  -  Run Remote Usage\\n\\t"" ) < 0 ) || ( ! writeRusage ( file , run_local_rusage ) ) || ( fprintf ( file , ""  -  Run Local Usage\\n"" ) < 0 ) )"		892525	10					
ANR	892708	Condition	"( ! writeRusage ( file , run_remote_rusage ) ) || ( fprintf ( file , ""  -  Run Remote Usage\\n\\t"" ) < 0 ) || ( ! writeRusage ( file , run_local_rusage ) ) || ( fprintf ( file , ""  -  Run Local Usage\\n"" ) < 0 )"	2138:6:46012:46222	892525	0	True				
ANR	892709	OrExpression	"( ! writeRusage ( file , run_remote_rusage ) ) || ( fprintf ( file , ""  -  Run Remote Usage\\n\\t"" ) < 0 ) || ( ! writeRusage ( file , run_local_rusage ) ) || ( fprintf ( file , ""  -  Run Local Usage\\n"" ) < 0 )"		892525	0		||			
ANR	892710	UnaryOperationExpression	"! writeRusage ( file , run_remote_rusage )"		892525	0					
ANR	892711	UnaryOperator	!		892525	0					
ANR	892712	CallExpression	"writeRusage ( file , run_remote_rusage )"		892525	1					
ANR	892713	Callee	writeRusage		892525	0					
ANR	892714	Identifier	writeRusage		892525	0					
ANR	892715	ArgumentList	file		892525	1					
ANR	892716	Argument	file		892525	0					
ANR	892717	Identifier	file		892525	0					
ANR	892718	Argument	run_remote_rusage		892525	1					
ANR	892719	Identifier	run_remote_rusage		892525	0					
ANR	892720	OrExpression	"( fprintf ( file , ""  -  Run Remote Usage\\n\\t"" ) < 0 ) || ( ! writeRusage ( file , run_local_rusage ) ) || ( fprintf ( file , ""  -  Run Local Usage\\n"" ) < 0 )"		892525	1		||			
ANR	892721	RelationalExpression	"fprintf ( file , ""  -  Run Remote Usage\\n\\t"" ) < 0"		892525	0		<			
ANR	892722	CallExpression	"fprintf ( file , ""  -  Run Remote Usage\\n\\t"" )"		892525	0					
ANR	892723	Callee	fprintf		892525	0					
ANR	892724	Identifier	fprintf		892525	0					
ANR	892725	ArgumentList	file		892525	1					
ANR	892726	Argument	file		892525	0					
ANR	892727	Identifier	file		892525	0					
ANR	892728	Argument	"""  -  Run Remote Usage\\n\\t"""		892525	1					
ANR	892729	PrimaryExpression	"""  -  Run Remote Usage\\n\\t"""		892525	0					
ANR	892730	PrimaryExpression	0		892525	1					
ANR	892731	OrExpression	"( ! writeRusage ( file , run_local_rusage ) ) || ( fprintf ( file , ""  -  Run Local Usage\\n"" ) < 0 )"		892525	1		||			
ANR	892732	UnaryOperationExpression	"! writeRusage ( file , run_local_rusage )"		892525	0					
ANR	892733	UnaryOperator	!		892525	0					
ANR	892734	CallExpression	"writeRusage ( file , run_local_rusage )"		892525	1					
ANR	892735	Callee	writeRusage		892525	0					
ANR	892736	Identifier	writeRusage		892525	0					
ANR	892737	ArgumentList	file		892525	1					
ANR	892738	Argument	file		892525	0					
ANR	892739	Identifier	file		892525	0					
ANR	892740	Argument	run_local_rusage		892525	1					
ANR	892741	Identifier	run_local_rusage		892525	0					
ANR	892742	RelationalExpression	"fprintf ( file , ""  -  Run Local Usage\\n"" ) < 0"		892525	1		<			
ANR	892743	CallExpression	"fprintf ( file , ""  -  Run Local Usage\\n"" )"		892525	0					
ANR	892744	Callee	fprintf		892525	0					
ANR	892745	Identifier	fprintf		892525	0					
ANR	892746	ArgumentList	file		892525	1					
ANR	892747	Argument	file		892525	0					
ANR	892748	Identifier	file		892525	0					
ANR	892749	Argument	"""  -  Run Local Usage\\n"""		892525	1					
ANR	892750	PrimaryExpression	"""  -  Run Local Usage\\n"""		892525	0					
ANR	892751	PrimaryExpression	0		892525	1					
ANR	892752	CompoundStatement		43:4:1304:1304	892525	1					
ANR	892753	ReturnStatement	return 0 ;	2143:6:46238:46246	892525	0	True				
ANR	892754	PrimaryExpression	0		892525	0					
ANR	892755	IfStatement	"if ( fprintf ( file , ""\\t%.0f  -  Run Bytes Sent By Job\\n"" , sent_bytes ) < 0 )"		892525	11					
ANR	892756	Condition	"fprintf ( file , ""\\t%.0f  -  Run Bytes Sent By Job\\n"" , sent_bytes ) < 0"	2146:6:46261:46334	892525	0	True				
ANR	892757	RelationalExpression	"fprintf ( file , ""\\t%.0f  -  Run Bytes Sent By Job\\n"" , sent_bytes ) < 0"		892525	0		<			
ANR	892758	CallExpression	"fprintf ( file , ""\\t%.0f  -  Run Bytes Sent By Job\\n"" , sent_bytes )"		892525	0					
ANR	892759	Callee	fprintf		892525	0					
ANR	892760	Identifier	fprintf		892525	0					
ANR	892761	ArgumentList	file		892525	1					
ANR	892762	Argument	file		892525	0					
ANR	892763	Identifier	file		892525	0					
ANR	892764	Argument	"""\\t%.0f  -  Run Bytes Sent By Job\\n"""		892525	1					
ANR	892765	PrimaryExpression	"""\\t%.0f  -  Run Bytes Sent By Job\\n"""		892525	0					
ANR	892766	Argument	sent_bytes		892525	2					
ANR	892767	Identifier	sent_bytes		892525	0					
ANR	892768	PrimaryExpression	0		892525	1					
ANR	892769	CompoundStatement		48:25:1412:1412	892525	1					
ANR	892770	ReturnStatement	return 0 ;	2148:4:46344:46352	892525	0	True				
ANR	892771	PrimaryExpression	0		892525	0					
ANR	892772	IfStatement	"if ( fprintf ( file , ""\\t%.0f  -  Run Bytes Received By Job\\n"" , recvd_bytes ) < 0 )"		892525	12					
ANR	892773	Condition	"fprintf ( file , ""\\t%.0f  -  Run Bytes Received By Job\\n"" , recvd_bytes ) < 0"	2150:6:46364:46442	892525	0	True				
ANR	892774	RelationalExpression	"fprintf ( file , ""\\t%.0f  -  Run Bytes Received By Job\\n"" , recvd_bytes ) < 0"		892525	0		<			
ANR	892775	CallExpression	"fprintf ( file , ""\\t%.0f  -  Run Bytes Received By Job\\n"" , recvd_bytes )"		892525	0					
ANR	892776	Callee	fprintf		892525	0					
ANR	892777	Identifier	fprintf		892525	0					
ANR	892778	ArgumentList	file		892525	1					
ANR	892779	Argument	file		892525	0					
ANR	892780	Identifier	file		892525	0					
ANR	892781	Argument	"""\\t%.0f  -  Run Bytes Received By Job\\n"""		892525	1					
ANR	892782	PrimaryExpression	"""\\t%.0f  -  Run Bytes Received By Job\\n"""		892525	0					
ANR	892783	Argument	recvd_bytes		892525	2					
ANR	892784	Identifier	recvd_bytes		892525	0					
ANR	892785	PrimaryExpression	0		892525	1					
ANR	892786	CompoundStatement		52:26:1520:1520	892525	1					
ANR	892787	ReturnStatement	return 0 ;	2152:4:46452:46460	892525	0	True				
ANR	892788	PrimaryExpression	0		892525	0					
ANR	892789	IfStatement	if ( terminate_and_requeued )		892525	13					
ANR	892790	Condition	terminate_and_requeued	2155:5:46472:46493	892525	0	True				
ANR	892791	Identifier	terminate_and_requeued		892525	0					
ANR	892792	CompoundStatement		56:30:1571:1571	892525	1					
ANR	892793	IfStatement	if ( normal )		892525	0					
ANR	892794	Condition	normal	2156:8:46507:46512	892525	0	True				
ANR	892795	Identifier	normal		892525	0					
ANR	892796	CompoundStatement		57:17:1590:1590	892525	1					
ANR	892797	IfStatement	"if ( fprintf ( file , ""\\t(1) Normal termination (return value %d)\\n"" , return_value ) < 0 )"		892525	0					
ANR	892798	Condition	"fprintf ( file , ""\\t(1) Normal termination (return value %d)\\n"" , return_value ) < 0"	2157:10:46528:46610	892525	0	True				
ANR	892799	RelationalExpression	"fprintf ( file , ""\\t(1) Normal termination (return value %d)\\n"" , return_value ) < 0"		892525	0		<			
ANR	892800	CallExpression	"fprintf ( file , ""\\t(1) Normal termination (return value %d)\\n"" , return_value )"		892525	0					
ANR	892801	Callee	fprintf		892525	0					
ANR	892802	Identifier	fprintf		892525	0					
ANR	892803	ArgumentList	file		892525	1					
ANR	892804	Argument	file		892525	0					
ANR	892805	Identifier	file		892525	0					
ANR	892806	Argument	"""\\t(1) Normal termination (return value %d)\\n"""		892525	1					
ANR	892807	PrimaryExpression	"""\\t(1) Normal termination (return value %d)\\n"""		892525	0					
ANR	892808	Argument	return_value		892525	2					
ANR	892809	Identifier	return_value		892525	0					
ANR	892810	PrimaryExpression	0		892525	1					
ANR	892811	CompoundStatement		59:24:1688:1688	892525	1					
ANR	892812	ReturnStatement	return 0 ;	2159:1:46617:46625	892525	0	True				
ANR	892813	PrimaryExpression	0		892525	0					
ANR	892814	ExpressionStatement	"sprintf ( terminatestr , "" (1) Normal termination (return value %d)"" , return_value )"	2161:6:46641:46722	892525	1	True				
ANR	892815	CallExpression	"sprintf ( terminatestr , "" (1) Normal termination (return value %d)"" , return_value )"		892525	0					
ANR	892816	Callee	sprintf		892525	0					
ANR	892817	Identifier	sprintf		892525	0					
ANR	892818	ArgumentList	terminatestr		892525	1					
ANR	892819	Argument	terminatestr		892525	0					
ANR	892820	Identifier	terminatestr		892525	0					
ANR	892821	Argument	""" (1) Normal termination (return value %d)"""		892525	1					
ANR	892822	PrimaryExpression	""" (1) Normal termination (return value %d)"""		892525	0					
ANR	892823	Argument	return_value		892525	2					
ANR	892824	Identifier	return_value		892525	0					
ANR	892825	ElseStatement	else		892525	0					
ANR	892826	CompoundStatement		64:9:1813:1813	892525	0					
ANR	892827	IfStatement	"if ( fprintf ( file , ""\\t(0) Abnormal termination (signal %d)\\n"" , signal_number ) < 0 )"		892525	0					
ANR	892828	Condition	"fprintf ( file , ""\\t(0) Abnormal termination (signal %d)\\n"" , signal_number ) < 0"	2164:10:46751:46830	892525	0	True				
ANR	892829	RelationalExpression	"fprintf ( file , ""\\t(0) Abnormal termination (signal %d)\\n"" , signal_number ) < 0"		892525	0		<			
ANR	892830	CallExpression	"fprintf ( file , ""\\t(0) Abnormal termination (signal %d)\\n"" , signal_number )"		892525	0					
ANR	892831	Callee	fprintf		892525	0					
ANR	892832	Identifier	fprintf		892525	0					
ANR	892833	ArgumentList	file		892525	1					
ANR	892834	Argument	file		892525	0					
ANR	892835	Identifier	file		892525	0					
ANR	892836	Argument	"""\\t(0) Abnormal termination (signal %d)\\n"""		892525	1					
ANR	892837	PrimaryExpression	"""\\t(0) Abnormal termination (signal %d)\\n"""		892525	0					
ANR	892838	Argument	signal_number		892525	2					
ANR	892839	Identifier	signal_number		892525	0					
ANR	892840	PrimaryExpression	0		892525	1					
ANR	892841	CompoundStatement		66:25:1908:1908	892525	1					
ANR	892842	ReturnStatement	return 0 ;	2166:1:46837:46845	892525	0	True				
ANR	892843	PrimaryExpression	0		892525	0					
ANR	892844	ExpressionStatement	"sprintf ( terminatestr , "" (0) Abnormal termination (signal %d)"" , signal_number )"	2168:6:46861:46939	892525	1	True				
ANR	892845	CallExpression	"sprintf ( terminatestr , "" (0) Abnormal termination (signal %d)"" , signal_number )"		892525	0					
ANR	892846	Callee	sprintf		892525	0					
ANR	892847	Identifier	sprintf		892525	0					
ANR	892848	ArgumentList	terminatestr		892525	1					
ANR	892849	Argument	terminatestr		892525	0					
ANR	892850	Identifier	terminatestr		892525	0					
ANR	892851	Argument	""" (0) Abnormal termination (signal %d)"""		892525	1					
ANR	892852	PrimaryExpression	""" (0) Abnormal termination (signal %d)"""		892525	0					
ANR	892853	Argument	signal_number		892525	2					
ANR	892854	Identifier	signal_number		892525	0					
ANR	892855	IfStatement	if ( core_file )		892525	2					
ANR	892856	Condition	core_file	2170:10:46952:46960	892525	0	True				
ANR	892857	Identifier	core_file		892525	0					
ANR	892858	CompoundStatement		71:22:2038:2038	892525	1					
ANR	892859	ExpressionStatement	"retval = fprintf ( file , ""\\t(1) Corefile in: %s\\n"" , core_file )"	2171:1:46967:47029	892525	0	True				
ANR	892860	AssignmentExpression	"retval = fprintf ( file , ""\\t(1) Corefile in: %s\\n"" , core_file )"		892525	0		=			
ANR	892861	Identifier	retval		892525	0					
ANR	892862	CallExpression	"fprintf ( file , ""\\t(1) Corefile in: %s\\n"" , core_file )"		892525	1					
ANR	892863	Callee	fprintf		892525	0					
ANR	892864	Identifier	fprintf		892525	0					
ANR	892865	ArgumentList	file		892525	1					
ANR	892866	Argument	file		892525	0					
ANR	892867	Identifier	file		892525	0					
ANR	892868	Argument	"""\\t(1) Corefile in: %s\\n"""		892525	1					
ANR	892869	PrimaryExpression	"""\\t(1) Corefile in: %s\\n"""		892525	0					
ANR	892870	Argument	core_file		892525	2					
ANR	892871	Identifier	core_file		892525	0					
ANR	892872	ExpressionStatement	"strcat ( terminatestr , "" (1) Corefile in: "" )"	2172:1:47032:47074	892525	1	True				
ANR	892873	CallExpression	"strcat ( terminatestr , "" (1) Corefile in: "" )"		892525	0					
ANR	892874	Callee	strcat		892525	0					
ANR	892875	Identifier	strcat		892525	0					
ANR	892876	ArgumentList	terminatestr		892525	1					
ANR	892877	Argument	terminatestr		892525	0					
ANR	892878	Identifier	terminatestr		892525	0					
ANR	892879	Argument	""" (1) Corefile in: """		892525	1					
ANR	892880	PrimaryExpression	""" (1) Corefile in: """		892525	0					
ANR	892881	ExpressionStatement	"strcat ( terminatestr , core_file )"	2173:1:47077:47108	892525	2	True				
ANR	892882	CallExpression	"strcat ( terminatestr , core_file )"		892525	0					
ANR	892883	Callee	strcat		892525	0					
ANR	892884	Identifier	strcat		892525	0					
ANR	892885	ArgumentList	terminatestr		892525	1					
ANR	892886	Argument	terminatestr		892525	0					
ANR	892887	Identifier	terminatestr		892525	0					
ANR	892888	Argument	core_file		892525	1					
ANR	892889	Identifier	core_file		892525	0					
ANR	892890	ElseStatement	else		892525	0					
ANR	892891	CompoundStatement		76:11:2203:2203	892525	0					
ANR	892892	ExpressionStatement	"retval = fprintf ( file , ""\\t(0) No core file\\n"" )"	2176:1:47132:47180	892525	0	True				
ANR	892893	AssignmentExpression	"retval = fprintf ( file , ""\\t(0) No core file\\n"" )"		892525	0		=			
ANR	892894	Identifier	retval		892525	0					
ANR	892895	CallExpression	"fprintf ( file , ""\\t(0) No core file\\n"" )"		892525	1					
ANR	892896	Callee	fprintf		892525	0					
ANR	892897	Identifier	fprintf		892525	0					
ANR	892898	ArgumentList	file		892525	1					
ANR	892899	Argument	file		892525	0					
ANR	892900	Identifier	file		892525	0					
ANR	892901	Argument	"""\\t(0) No core file\\n"""		892525	1					
ANR	892902	PrimaryExpression	"""\\t(0) No core file\\n"""		892525	0					
ANR	892903	ExpressionStatement	"strcat ( terminatestr , "" (0) No core file "" )"	2177:1:47183:47225	892525	1	True				
ANR	892904	CallExpression	"strcat ( terminatestr , "" (0) No core file "" )"		892525	0					
ANR	892905	Callee	strcat		892525	0					
ANR	892906	Identifier	strcat		892525	0					
ANR	892907	ArgumentList	terminatestr		892525	1					
ANR	892908	Argument	terminatestr		892525	0					
ANR	892909	Identifier	terminatestr		892525	0					
ANR	892910	Argument	""" (0) No core file """		892525	1					
ANR	892911	PrimaryExpression	""" (0) No core file """		892525	0					
ANR	892912	IfStatement	if ( retval < 0 )		892525	3					
ANR	892913	Condition	retval < 0	2179:10:47245:47254	892525	0	True				
ANR	892914	RelationalExpression	retval < 0		892525	0		<			
ANR	892915	Identifier	retval		892525	0					
ANR	892916	PrimaryExpression	0		892525	1					
ANR	892917	CompoundStatement		80:23:2332:2332	892525	1					
ANR	892918	ReturnStatement	return 0 ;	2180:1:47261:47269	892525	0	True				
ANR	892919	PrimaryExpression	0		892525	0					
ANR	892920	IfStatement	if ( reason )		892525	1					
ANR	892921	Condition	reason	2184:8:47294:47299	892525	0	True				
ANR	892922	Identifier	reason		892525	0					
ANR	892923	CompoundStatement		85:17:2377:2377	892525	1					
ANR	892924	IfStatement	"if ( fprintf ( file , ""\\t%s\\n"" , reason ) < 0 )"		892525	0					
ANR	892925	Condition	"fprintf ( file , ""\\t%s\\n"" , reason ) < 0"	2185:10:47315:47349	892525	0	True				
ANR	892926	RelationalExpression	"fprintf ( file , ""\\t%s\\n"" , reason ) < 0"		892525	0		<			
ANR	892927	CallExpression	"fprintf ( file , ""\\t%s\\n"" , reason )"		892525	0					
ANR	892928	Callee	fprintf		892525	0					
ANR	892929	Identifier	fprintf		892525	0					
ANR	892930	ArgumentList	file		892525	1					
ANR	892931	Argument	file		892525	0					
ANR	892932	Identifier	file		892525	0					
ANR	892933	Argument	"""\\t%s\\n"""		892525	1					
ANR	892934	PrimaryExpression	"""\\t%s\\n"""		892525	0					
ANR	892935	Argument	reason		892525	2					
ANR	892936	Identifier	reason		892525	0					
ANR	892937	PrimaryExpression	0		892525	1					
ANR	892938	CompoundStatement		86:48:2427:2427	892525	1					
ANR	892939	ReturnStatement	return 0 ;	2186:1:47356:47364	892525	0	True				
ANR	892940	PrimaryExpression	0		892525	0					
ANR	892941	ExpressionStatement	"strcat ( terminatestr , "" reason: "" )"	2188:6:47380:47414	892525	1	True				
ANR	892942	CallExpression	"strcat ( terminatestr , "" reason: "" )"		892525	0					
ANR	892943	Callee	strcat		892525	0					
ANR	892944	Identifier	strcat		892525	0					
ANR	892945	ArgumentList	terminatestr		892525	1					
ANR	892946	Argument	terminatestr		892525	0					
ANR	892947	Identifier	terminatestr		892525	0					
ANR	892948	Argument	""" reason: """		892525	1					
ANR	892949	PrimaryExpression	""" reason: """		892525	0					
ANR	892950	ExpressionStatement	"strcat ( terminatestr , reason )"	2189:6:47422:47451	892525	2	True				
ANR	892951	CallExpression	"strcat ( terminatestr , reason )"		892525	0					
ANR	892952	Callee	strcat		892525	0					
ANR	892953	Identifier	strcat		892525	0					
ANR	892954	ArgumentList	terminatestr		892525	1					
ANR	892955	Argument	terminatestr		892525	0					
ANR	892956	Identifier	terminatestr		892525	0					
ANR	892957	Argument	reason		892525	1					
ANR	892958	Identifier	reason		892525	0					
ANR	892959	ExpressionStatement	scheddname = getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )	2194:2:47467:47519	892525	14	True				
ANR	892960	AssignmentExpression	scheddname = getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )		892525	0		=			
ANR	892961	Identifier	scheddname		892525	0					
ANR	892962	CallExpression	getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )		892525	1					
ANR	892963	Callee	getenv		892525	0					
ANR	892964	Identifier	getenv		892525	0					
ANR	892965	ArgumentList	EnvGetName ( ENV_SCHEDD_NAME )		892525	1					
ANR	892966	Argument	EnvGetName ( ENV_SCHEDD_NAME )		892525	0					
ANR	892967	CallExpression	EnvGetName ( ENV_SCHEDD_NAME )		892525	0					
ANR	892968	Callee	EnvGetName		892525	0					
ANR	892969	Identifier	EnvGetName		892525	0					
ANR	892970	ArgumentList	ENV_SCHEDD_NAME		892525	1					
ANR	892971	Argument	ENV_SCHEDD_NAME		892525	0					
ANR	892972	Identifier	ENV_SCHEDD_NAME		892525	0					
ANR	892973	ExpressionStatement	"tmpCl1 . Assign ( ""endts"" , ( int ) eventclock )"	2196:2:47524:47563	892525	15	True				
ANR	892974	CallExpression	"tmpCl1 . Assign ( ""endts"" , ( int ) eventclock )"		892525	0					
ANR	892975	Callee	tmpCl1 . Assign		892525	0					
ANR	892976	MemberAccess	tmpCl1 . Assign		892525	0					
ANR	892977	Identifier	tmpCl1		892525	0					
ANR	892978	Identifier	Assign		892525	1					
ANR	892979	ArgumentList	"""endts"""		892525	1					
ANR	892980	Argument	"""endts"""		892525	0					
ANR	892981	PrimaryExpression	"""endts"""		892525	0					
ANR	892982	Argument	( int ) eventclock		892525	1					
ANR	892983	CastExpression	( int ) eventclock		892525	0					
ANR	892984	CastTarget	int		892525	0					
ANR	892985	Identifier	eventclock		892525	1					
ANR	892986	ExpressionStatement	"tmpCl1 . Assign ( ""endtype"" , ULOG_JOB_EVICTED )"	2197:2:47567:47609	892525	16	True				
ANR	892987	CallExpression	"tmpCl1 . Assign ( ""endtype"" , ULOG_JOB_EVICTED )"		892525	0					
ANR	892988	Callee	tmpCl1 . Assign		892525	0					
ANR	892989	MemberAccess	tmpCl1 . Assign		892525	0					
ANR	892990	Identifier	tmpCl1		892525	0					
ANR	892991	Identifier	Assign		892525	1					
ANR	892992	ArgumentList	"""endtype"""		892525	1					
ANR	892993	Argument	"""endtype"""		892525	0					
ANR	892994	PrimaryExpression	"""endtype"""		892525	0					
ANR	892995	Argument	ULOG_JOB_EVICTED		892525	1					
ANR	892996	Identifier	ULOG_JOB_EVICTED		892525	0					
ANR	892997	ExpressionStatement	"tmp . sprintf ( ""endmessage = \\""%s%s\\"""" , messagestr , terminatestr )"	2199:2:47614:47677	892525	17	True				
ANR	892998	CallExpression	"tmp . sprintf ( ""endmessage = \\""%s%s\\"""" , messagestr , terminatestr )"		892525	0					
ANR	892999	Callee	tmp . sprintf		892525	0					
ANR	893000	MemberAccess	tmp . sprintf		892525	0					
ANR	893001	Identifier	tmp		892525	0					
ANR	893002	Identifier	sprintf		892525	1					
ANR	893003	ArgumentList	"""endmessage = \\""%s%s\\"""""		892525	1					
ANR	893004	Argument	"""endmessage = \\""%s%s\\"""""		892525	0					
ANR	893005	PrimaryExpression	"""endmessage = \\""%s%s\\"""""		892525	0					
ANR	893006	Argument	messagestr		892525	1					
ANR	893007	Identifier	messagestr		892525	0					
ANR	893008	Argument	terminatestr		892525	2					
ANR	893009	Identifier	terminatestr		892525	0					
ANR	893010	ExpressionStatement	tmpCl1 . Insert ( tmp . Value ( ) )	2200:2:47681:47707	892525	18	True				
ANR	893011	CallExpression	tmpCl1 . Insert ( tmp . Value ( ) )		892525	0					
ANR	893012	Callee	tmpCl1 . Insert		892525	0					
ANR	893013	MemberAccess	tmpCl1 . Insert		892525	0					
ANR	893014	Identifier	tmpCl1		892525	0					
ANR	893015	Identifier	Insert		892525	1					
ANR	893016	ArgumentList	tmp . Value ( )		892525	1					
ANR	893017	Argument	tmp . Value ( )		892525	0					
ANR	893018	CallExpression	tmp . Value ( )		892525	0					
ANR	893019	Callee	tmp . Value		892525	0					
ANR	893020	MemberAccess	tmp . Value		892525	0					
ANR	893021	Identifier	tmp		892525	0					
ANR	893022	Identifier	Value		892525	1					
ANR	893023	ArgumentList			892525	1					
ANR	893024	ExpressionStatement	"tmpCl1 . Assign ( ""wascheckpointed"" , checkpointedstr )"	2202:2:47712:47761	892525	19	True				
ANR	893025	CallExpression	"tmpCl1 . Assign ( ""wascheckpointed"" , checkpointedstr )"		892525	0					
ANR	893026	Callee	tmpCl1 . Assign		892525	0					
ANR	893027	MemberAccess	tmpCl1 . Assign		892525	0					
ANR	893028	Identifier	tmpCl1		892525	0					
ANR	893029	Identifier	Assign		892525	1					
ANR	893030	ArgumentList	"""wascheckpointed"""		892525	1					
ANR	893031	Argument	"""wascheckpointed"""		892525	0					
ANR	893032	PrimaryExpression	"""wascheckpointed"""		892525	0					
ANR	893033	Argument	checkpointedstr		892525	1					
ANR	893034	Identifier	checkpointedstr		892525	0					
ANR	893035	ExpressionStatement	"tmpCl1 . Assign ( ""runbytessent"" , sent_bytes )"	2203:2:47765:47806	892525	20	True				
ANR	893036	CallExpression	"tmpCl1 . Assign ( ""runbytessent"" , sent_bytes )"		892525	0					
ANR	893037	Callee	tmpCl1 . Assign		892525	0					
ANR	893038	MemberAccess	tmpCl1 . Assign		892525	0					
ANR	893039	Identifier	tmpCl1		892525	0					
ANR	893040	Identifier	Assign		892525	1					
ANR	893041	ArgumentList	"""runbytessent"""		892525	1					
ANR	893042	Argument	"""runbytessent"""		892525	0					
ANR	893043	PrimaryExpression	"""runbytessent"""		892525	0					
ANR	893044	Argument	sent_bytes		892525	1					
ANR	893045	Identifier	sent_bytes		892525	0					
ANR	893046	ExpressionStatement	"tmpCl1 . Assign ( ""runbytesreceived"" , recvd_bytes )"	2204:2:47810:47856	892525	21	True				
ANR	893047	CallExpression	"tmpCl1 . Assign ( ""runbytesreceived"" , recvd_bytes )"		892525	0					
ANR	893048	Callee	tmpCl1 . Assign		892525	0					
ANR	893049	MemberAccess	tmpCl1 . Assign		892525	0					
ANR	893050	Identifier	tmpCl1		892525	0					
ANR	893051	Identifier	Assign		892525	1					
ANR	893052	ArgumentList	"""runbytesreceived"""		892525	1					
ANR	893053	Argument	"""runbytesreceived"""		892525	0					
ANR	893054	PrimaryExpression	"""runbytesreceived"""		892525	0					
ANR	893055	Argument	recvd_bytes		892525	1					
ANR	893056	Identifier	recvd_bytes		892525	0					
ANR	893057	ExpressionStatement	insertCommonIdentifiers ( tmpCl2 )	2207:2:47910:47941	892525	22	True				
ANR	893058	CallExpression	insertCommonIdentifiers ( tmpCl2 )		892525	0					
ANR	893059	Callee	insertCommonIdentifiers		892525	0					
ANR	893060	Identifier	insertCommonIdentifiers		892525	0					
ANR	893061	ArgumentList	tmpCl2		892525	1					
ANR	893062	Argument	tmpCl2		892525	0					
ANR	893063	Identifier	tmpCl2		892525	0					
ANR	893064	ExpressionStatement	"tmp . sprintf ( ""endtype = null"" )"	2209:2:47946:47976	892525	23	True				
ANR	893065	CallExpression	"tmp . sprintf ( ""endtype = null"" )"		892525	0					
ANR	893066	Callee	tmp . sprintf		892525	0					
ANR	893067	MemberAccess	tmp . sprintf		892525	0					
ANR	893068	Identifier	tmp		892525	0					
ANR	893069	Identifier	sprintf		892525	1					
ANR	893070	ArgumentList	"""endtype = null"""		892525	1					
ANR	893071	Argument	"""endtype = null"""		892525	0					
ANR	893072	PrimaryExpression	"""endtype = null"""		892525	0					
ANR	893073	ExpressionStatement	tmpCl2 . Insert ( tmp . Value ( ) )	2210:2:47980:48006	892525	24	True				
ANR	893074	CallExpression	tmpCl2 . Insert ( tmp . Value ( ) )		892525	0					
ANR	893075	Callee	tmpCl2 . Insert		892525	0					
ANR	893076	MemberAccess	tmpCl2 . Insert		892525	0					
ANR	893077	Identifier	tmpCl2		892525	0					
ANR	893078	Identifier	Insert		892525	1					
ANR	893079	ArgumentList	tmp . Value ( )		892525	1					
ANR	893080	Argument	tmp . Value ( )		892525	0					
ANR	893081	CallExpression	tmp . Value ( )		892525	0					
ANR	893082	Callee	tmp . Value		892525	0					
ANR	893083	MemberAccess	tmp . Value		892525	0					
ANR	893084	Identifier	tmp		892525	0					
ANR	893085	Identifier	Value		892525	1					
ANR	893086	ArgumentList			892525	1					
ANR	893087	IfStatement	if ( FILEObj )		892525	25					
ANR	893088	Condition	FILEObj	2212:6:48015:48021	892525	0	True				
ANR	893089	Identifier	FILEObj		892525	0					
ANR	893090	CompoundStatement		113:15:3098:3098	892525	1					
ANR	893091	IfStatement	"if ( FILEObj -> file_updateEvent ( ""Runs"" , & tmpCl1 , & tmpCl2 ) == QUILL_FAILURE )"		892525	0					
ANR	893092	Condition	"FILEObj -> file_updateEvent ( ""Runs"" , & tmpCl1 , & tmpCl2 ) == QUILL_FAILURE"	2213:7:48033:48100	892525	0	True				
ANR	893093	EqualityExpression	"FILEObj -> file_updateEvent ( ""Runs"" , & tmpCl1 , & tmpCl2 ) == QUILL_FAILURE"		892525	0		==			
ANR	893094	CallExpression	"FILEObj -> file_updateEvent ( ""Runs"" , & tmpCl1 , & tmpCl2 )"		892525	0					
ANR	893095	Callee	FILEObj -> file_updateEvent		892525	0					
ANR	893096	PtrMemberAccess	FILEObj -> file_updateEvent		892525	0					
ANR	893097	Identifier	FILEObj		892525	0					
ANR	893098	Identifier	file_updateEvent		892525	1					
ANR	893099	ArgumentList	"""Runs"""		892525	1					
ANR	893100	Argument	"""Runs"""		892525	0					
ANR	893101	PrimaryExpression	"""Runs"""		892525	0					
ANR	893102	Argument	& tmpCl1		892525	1					
ANR	893103	UnaryOperationExpression	& tmpCl1		892525	0					
ANR	893104	UnaryOperator	&		892525	0					
ANR	893105	Identifier	tmpCl1		892525	1					
ANR	893106	Argument	& tmpCl2		892525	2					
ANR	893107	UnaryOperationExpression	& tmpCl2		892525	0					
ANR	893108	UnaryOperator	&		892525	0					
ANR	893109	Identifier	tmpCl2		892525	1					
ANR	893110	Identifier	QUILL_FAILURE		892525	1					
ANR	893111	CompoundStatement		114:77:3177:3177	892525	1					
ANR	893112	ExpressionStatement	"dprintf ( D_ALWAYS , ""Logging Event 2 --- Error\\n"" )"	2214:4:48109:48157	892525	0	True				
ANR	893113	CallExpression	"dprintf ( D_ALWAYS , ""Logging Event 2 --- Error\\n"" )"		892525	0					
ANR	893114	Callee	dprintf		892525	0					
ANR	893115	Identifier	dprintf		892525	0					
ANR	893116	ArgumentList	D_ALWAYS		892525	1					
ANR	893117	Argument	D_ALWAYS		892525	0					
ANR	893118	Identifier	D_ALWAYS		892525	0					
ANR	893119	Argument	"""Logging Event 2 --- Error\\n"""		892525	1					
ANR	893120	PrimaryExpression	"""Logging Event 2 --- Error\\n"""		892525	0					
ANR	893121	ReturnStatement	return 0 ;	2215:4:48163:48171	892525	1	True				
ANR	893122	PrimaryExpression	0		892525	0					
ANR	893123	ReturnStatement	return 1 ;	2219:2:48211:48219	892525	26	True				
ANR	893124	PrimaryExpression	1		892525	0					
ANR	893125	ReturnType	int		892525	1					
ANR	893126	Identifier	JobEvictedEvent :: writeEvent		892525	2					
ANR	893127	ParameterList	FILE * file		892525	3					
ANR	893128	Parameter	FILE * file	2099:29:44912:44921	892525	0	True				
ANR	893129	ParameterType	FILE *		892525	0					
ANR	893130	Identifier	file		892525	1					
ANR	893131	CFGEntryNode	ENTRY		892525		True				
ANR	893132	CFGExitNode	EXIT		892525		True				
ANR	893133	Symbol	terminate_and_requeued		892525						
ANR	893134	Symbol	run_local_rusage		892525						
ANR	893135	Symbol	signal_number		892525						
ANR	893136	Symbol	reason		892525						
ANR	893137	Symbol	terminatestr		892525						
ANR	893138	Symbol	return_value		892525						
ANR	893139	Symbol	scheddname		892525						
ANR	893140	Symbol	tmp . Value		892525						
ANR	893141	Symbol	ENV_SCHEDD_NAME		892525						
ANR	893142	Symbol	EnvGetName		892525						
ANR	893143	Symbol	QUILL_FAILURE		892525						
ANR	893144	Symbol	FILEObj		892525						
ANR	893145	Symbol	sent_bytes		892525						
ANR	893146	Symbol	* FILEObj		892525						
ANR	893147	Symbol	& tmpCl1		892525						
ANR	893148	Symbol	file		892525						
ANR	893149	Symbol	eventclock		892525						
ANR	893150	Symbol	tmp		892525						
ANR	893151	Symbol	recvd_bytes		892525						
ANR	893152	Symbol	& tmpCl2		892525						
ANR	893153	Symbol	run_remote_rusage		892525						
ANR	893154	Symbol	checkpointedstr		892525						
ANR	893155	Symbol	getenv		892525						
ANR	893156	Symbol	normal		892525						
ANR	893157	Symbol	ULOG_JOB_EVICTED		892525						
ANR	893158	Symbol	writeRusage		892525						
ANR	893159	Symbol	D_ALWAYS		892525						
ANR	893160	Symbol	fprintf		892525						
ANR	893161	Symbol	retval		892525						
ANR	893162	Symbol	checkpointed		892525						
ANR	893163	Symbol	FILEObj -> file_updateEvent		892525						
ANR	893164	Symbol	messagestr		892525						
ANR	893165	Symbol	tmpCl2		892525						
ANR	893166	Symbol	tmpCl1		892525						
ANR	893167	Symbol	core_file		892525						
ANR	893168	Function	JobEvictedEvent :: toClassAd	2222:0:48224:49901							
ANR	893169	FunctionDef	JobEvictedEvent :: toClassAd ()		893168	0					
ANR	893170	CompoundStatement		2224:0:48266:49901	893168	0					
ANR	893171	IdentifierDeclStatement	ClassAd * myad = ULogEvent :: toClassAd ( ) ;	2225:1:48269:48307	893168	0	True				
ANR	893172	IdentifierDecl	* myad = ULogEvent :: toClassAd ( )		893168	0					
ANR	893173	IdentifierDeclType	ClassAd *		893168	0					
ANR	893174	Identifier	myad		893168	1					
ANR	893175	AssignmentExpression	* myad = ULogEvent :: toClassAd ( )		893168	2		=			
ANR	893176	Identifier	myad		893168	0					
ANR	893177	CallExpression	ULogEvent :: toClassAd ( )		893168	1					
ANR	893178	Callee	ULogEvent :: toClassAd		893168	0					
ANR	893179	Identifier	ULogEvent :: toClassAd		893168	0					
ANR	893180	ArgumentList			893168	1					
ANR	893181	IfStatement	if ( ! myad )		893168	1					
ANR	893182	Condition	! myad	2226:5:48314:48318	893168	0	True				
ANR	893183	UnaryOperationExpression	! myad		893168	0					
ANR	893184	UnaryOperator	!		893168	0					
ANR	893185	Identifier	myad		893168	1					
ANR	893186	ReturnStatement	return NULL ;	2226:13:48322:48333	893168	1	True				
ANR	893187	Identifier	NULL		893168	0					
ANR	893188	IdentifierDeclStatement	char buf0 [ 512 ] ;	2227:1:48336:48350	893168	2	True				
ANR	893189	IdentifierDecl	buf0 [ 512 ]		893168	0					
ANR	893190	IdentifierDeclType	char [ 512 ]		893168	0					
ANR	893191	Identifier	buf0		893168	1					
ANR	893192	PrimaryExpression	512		893168	2					
ANR	893193	ExpressionStatement	"snprintf ( buf0 , 512 , ""Checkpointed = %s"" , checkpointed ? ""TRUE"" : ""FALSE"" )"	2229:1:48354:48427	893168	3	True				
ANR	893194	CallExpression	"snprintf ( buf0 , 512 , ""Checkpointed = %s"" , checkpointed ? ""TRUE"" : ""FALSE"" )"		893168	0					
ANR	893195	Callee	snprintf		893168	0					
ANR	893196	Identifier	snprintf		893168	0					
ANR	893197	ArgumentList	buf0		893168	1					
ANR	893198	Argument	buf0		893168	0					
ANR	893199	Identifier	buf0		893168	0					
ANR	893200	Argument	512		893168	1					
ANR	893201	PrimaryExpression	512		893168	0					
ANR	893202	Argument	"""Checkpointed = %s"""		893168	2					
ANR	893203	PrimaryExpression	"""Checkpointed = %s"""		893168	0					
ANR	893204	Argument	"checkpointed ? ""TRUE"" : ""FALSE"""		893168	3					
ANR	893205	ConditionalExpression	"checkpointed ? ""TRUE"" : ""FALSE"""		893168	0					
ANR	893206	Condition	checkpointed		893168	0					
ANR	893207	Identifier	checkpointed		893168	0					
ANR	893208	PrimaryExpression	"""TRUE"""		893168	1					
ANR	893209	PrimaryExpression	"""FALSE"""		893168	2					
ANR	893210	ExpressionStatement	buf0 [ 511 ] = 0	2230:1:48430:48443	893168	4	True				
ANR	893211	AssignmentExpression	buf0 [ 511 ] = 0		893168	0		=			
ANR	893212	ArrayIndexing	buf0 [ 511 ]		893168	0					
ANR	893213	Identifier	buf0		893168	0					
ANR	893214	PrimaryExpression	511		893168	1					
ANR	893215	PrimaryExpression	0		893168	1					
ANR	893216	IfStatement	if ( ! myad -> Insert ( buf0 ) )		893168	5					
ANR	893217	Condition	! myad -> Insert ( buf0 )	2231:5:48450:48468	893168	0	True				
ANR	893218	UnaryOperationExpression	! myad -> Insert ( buf0 )		893168	0					
ANR	893219	UnaryOperator	!		893168	0					
ANR	893220	CallExpression	myad -> Insert ( buf0 )		893168	1					
ANR	893221	Callee	myad -> Insert		893168	0					
ANR	893222	PtrMemberAccess	myad -> Insert		893168	0					
ANR	893223	Identifier	myad		893168	0					
ANR	893224	Identifier	Insert		893168	1					
ANR	893225	ArgumentList	buf0		893168	1					
ANR	893226	Argument	buf0		893168	0					
ANR	893227	Identifier	buf0		893168	0					
ANR	893228	ReturnStatement	return NULL ;	2231:27:48472:48483	893168	1	True				
ANR	893229	Identifier	NULL		893168	0					
ANR	893230	IdentifierDeclStatement	char * rs = rusageToStr ( run_local_rusage ) ;	2233:1:48487:48527	893168	6	True				
ANR	893231	IdentifierDecl	* rs = rusageToStr ( run_local_rusage )		893168	0					
ANR	893232	IdentifierDeclType	char *		893168	0					
ANR	893233	Identifier	rs		893168	1					
ANR	893234	AssignmentExpression	* rs = rusageToStr ( run_local_rusage )		893168	2		=			
ANR	893235	Identifier	rs		893168	0					
ANR	893236	CallExpression	rusageToStr ( run_local_rusage )		893168	1					
ANR	893237	Callee	rusageToStr		893168	0					
ANR	893238	Identifier	rusageToStr		893168	0					
ANR	893239	ArgumentList	run_local_rusage		893168	1					
ANR	893240	Argument	run_local_rusage		893168	0					
ANR	893241	Identifier	run_local_rusage		893168	0					
ANR	893242	ExpressionStatement	"snprintf ( buf0 , 512 , ""RunLocalUsage = \\""%s\\"""" , rs )"	2234:1:48530:48579	893168	7	True				
ANR	893243	CallExpression	"snprintf ( buf0 , 512 , ""RunLocalUsage = \\""%s\\"""" , rs )"		893168	0					
ANR	893244	Callee	snprintf		893168	0					
ANR	893245	Identifier	snprintf		893168	0					
ANR	893246	ArgumentList	buf0		893168	1					
ANR	893247	Argument	buf0		893168	0					
ANR	893248	Identifier	buf0		893168	0					
ANR	893249	Argument	512		893168	1					
ANR	893250	PrimaryExpression	512		893168	0					
ANR	893251	Argument	"""RunLocalUsage = \\""%s\\"""""		893168	2					
ANR	893252	PrimaryExpression	"""RunLocalUsage = \\""%s\\"""""		893168	0					
ANR	893253	Argument	rs		893168	3					
ANR	893254	Identifier	rs		893168	0					
ANR	893255	ExpressionStatement	free ( rs )	2235:1:48582:48590	893168	8	True				
ANR	893256	CallExpression	free ( rs )		893168	0					
ANR	893257	Callee	free		893168	0					
ANR	893258	Identifier	free		893168	0					
ANR	893259	ArgumentList	rs		893168	1					
ANR	893260	Argument	rs		893168	0					
ANR	893261	Identifier	rs		893168	0					
ANR	893262	ExpressionStatement	buf0 [ 511 ] = 0	2236:1:48593:48606	893168	9	True				
ANR	893263	AssignmentExpression	buf0 [ 511 ] = 0		893168	0		=			
ANR	893264	ArrayIndexing	buf0 [ 511 ]		893168	0					
ANR	893265	Identifier	buf0		893168	0					
ANR	893266	PrimaryExpression	511		893168	1					
ANR	893267	PrimaryExpression	0		893168	1					
ANR	893268	IfStatement	if ( ! myad -> Insert ( buf0 ) )		893168	10					
ANR	893269	Condition	! myad -> Insert ( buf0 )	2237:5:48613:48631	893168	0	True				
ANR	893270	UnaryOperationExpression	! myad -> Insert ( buf0 )		893168	0					
ANR	893271	UnaryOperator	!		893168	0					
ANR	893272	CallExpression	myad -> Insert ( buf0 )		893168	1					
ANR	893273	Callee	myad -> Insert		893168	0					
ANR	893274	PtrMemberAccess	myad -> Insert		893168	0					
ANR	893275	Identifier	myad		893168	0					
ANR	893276	Identifier	Insert		893168	1					
ANR	893277	ArgumentList	buf0		893168	1					
ANR	893278	Argument	buf0		893168	0					
ANR	893279	Identifier	buf0		893168	0					
ANR	893280	ReturnStatement	return NULL ;	2237:27:48635:48646	893168	1	True				
ANR	893281	Identifier	NULL		893168	0					
ANR	893282	ExpressionStatement	rs = rusageToStr ( run_remote_rusage )	2239:1:48650:48685	893168	11	True				
ANR	893283	AssignmentExpression	rs = rusageToStr ( run_remote_rusage )		893168	0		=			
ANR	893284	Identifier	rs		893168	0					
ANR	893285	CallExpression	rusageToStr ( run_remote_rusage )		893168	1					
ANR	893286	Callee	rusageToStr		893168	0					
ANR	893287	Identifier	rusageToStr		893168	0					
ANR	893288	ArgumentList	run_remote_rusage		893168	1					
ANR	893289	Argument	run_remote_rusage		893168	0					
ANR	893290	Identifier	run_remote_rusage		893168	0					
ANR	893291	ExpressionStatement	"snprintf ( buf0 , 512 , ""RunRemoteUsage = \\""%s\\"""" , rs )"	2240:1:48688:48738	893168	12	True				
ANR	893292	CallExpression	"snprintf ( buf0 , 512 , ""RunRemoteUsage = \\""%s\\"""" , rs )"		893168	0					
ANR	893293	Callee	snprintf		893168	0					
ANR	893294	Identifier	snprintf		893168	0					
ANR	893295	ArgumentList	buf0		893168	1					
ANR	893296	Argument	buf0		893168	0					
ANR	893297	Identifier	buf0		893168	0					
ANR	893298	Argument	512		893168	1					
ANR	893299	PrimaryExpression	512		893168	0					
ANR	893300	Argument	"""RunRemoteUsage = \\""%s\\"""""		893168	2					
ANR	893301	PrimaryExpression	"""RunRemoteUsage = \\""%s\\"""""		893168	0					
ANR	893302	Argument	rs		893168	3					
ANR	893303	Identifier	rs		893168	0					
ANR	893304	ExpressionStatement	free ( rs )	2241:1:48741:48749	893168	13	True				
ANR	893305	CallExpression	free ( rs )		893168	0					
ANR	893306	Callee	free		893168	0					
ANR	893307	Identifier	free		893168	0					
ANR	893308	ArgumentList	rs		893168	1					
ANR	893309	Argument	rs		893168	0					
ANR	893310	Identifier	rs		893168	0					
ANR	893311	ExpressionStatement	buf0 [ 511 ] = 0	2242:1:48752:48765	893168	14	True				
ANR	893312	AssignmentExpression	buf0 [ 511 ] = 0		893168	0		=			
ANR	893313	ArrayIndexing	buf0 [ 511 ]		893168	0					
ANR	893314	Identifier	buf0		893168	0					
ANR	893315	PrimaryExpression	511		893168	1					
ANR	893316	PrimaryExpression	0		893168	1					
ANR	893317	IfStatement	if ( ! myad -> Insert ( buf0 ) )		893168	15					
ANR	893318	Condition	! myad -> Insert ( buf0 )	2243:5:48772:48790	893168	0	True				
ANR	893319	UnaryOperationExpression	! myad -> Insert ( buf0 )		893168	0					
ANR	893320	UnaryOperator	!		893168	0					
ANR	893321	CallExpression	myad -> Insert ( buf0 )		893168	1					
ANR	893322	Callee	myad -> Insert		893168	0					
ANR	893323	PtrMemberAccess	myad -> Insert		893168	0					
ANR	893324	Identifier	myad		893168	0					
ANR	893325	Identifier	Insert		893168	1					
ANR	893326	ArgumentList	buf0		893168	1					
ANR	893327	Argument	buf0		893168	0					
ANR	893328	Identifier	buf0		893168	0					
ANR	893329	ReturnStatement	return NULL ;	2243:27:48794:48805	893168	1	True				
ANR	893330	Identifier	NULL		893168	0					
ANR	893331	ExpressionStatement	"snprintf ( buf0 , 512 , ""SentBytes = %f"" , sent_bytes )"	2245:1:48809:48858	893168	16	True				
ANR	893332	CallExpression	"snprintf ( buf0 , 512 , ""SentBytes = %f"" , sent_bytes )"		893168	0					
ANR	893333	Callee	snprintf		893168	0					
ANR	893334	Identifier	snprintf		893168	0					
ANR	893335	ArgumentList	buf0		893168	1					
ANR	893336	Argument	buf0		893168	0					
ANR	893337	Identifier	buf0		893168	0					
ANR	893338	Argument	512		893168	1					
ANR	893339	PrimaryExpression	512		893168	0					
ANR	893340	Argument	"""SentBytes = %f"""		893168	2					
ANR	893341	PrimaryExpression	"""SentBytes = %f"""		893168	0					
ANR	893342	Argument	sent_bytes		893168	3					
ANR	893343	Identifier	sent_bytes		893168	0					
ANR	893344	ExpressionStatement	buf0 [ 511 ] = 0	2246:1:48861:48874	893168	17	True				
ANR	893345	AssignmentExpression	buf0 [ 511 ] = 0		893168	0		=			
ANR	893346	ArrayIndexing	buf0 [ 511 ]		893168	0					
ANR	893347	Identifier	buf0		893168	0					
ANR	893348	PrimaryExpression	511		893168	1					
ANR	893349	PrimaryExpression	0		893168	1					
ANR	893350	IfStatement	if ( ! myad -> Insert ( buf0 ) )		893168	18					
ANR	893351	Condition	! myad -> Insert ( buf0 )	2247:5:48881:48899	893168	0	True				
ANR	893352	UnaryOperationExpression	! myad -> Insert ( buf0 )		893168	0					
ANR	893353	UnaryOperator	!		893168	0					
ANR	893354	CallExpression	myad -> Insert ( buf0 )		893168	1					
ANR	893355	Callee	myad -> Insert		893168	0					
ANR	893356	PtrMemberAccess	myad -> Insert		893168	0					
ANR	893357	Identifier	myad		893168	0					
ANR	893358	Identifier	Insert		893168	1					
ANR	893359	ArgumentList	buf0		893168	1					
ANR	893360	Argument	buf0		893168	0					
ANR	893361	Identifier	buf0		893168	0					
ANR	893362	ReturnStatement	return NULL ;	2247:27:48903:48914	893168	1	True				
ANR	893363	Identifier	NULL		893168	0					
ANR	893364	ExpressionStatement	"snprintf ( buf0 , 512 , ""ReceivedBytes = %f"" , recvd_bytes )"	2248:1:48917:48971	893168	19	True				
ANR	893365	CallExpression	"snprintf ( buf0 , 512 , ""ReceivedBytes = %f"" , recvd_bytes )"		893168	0					
ANR	893366	Callee	snprintf		893168	0					
ANR	893367	Identifier	snprintf		893168	0					
ANR	893368	ArgumentList	buf0		893168	1					
ANR	893369	Argument	buf0		893168	0					
ANR	893370	Identifier	buf0		893168	0					
ANR	893371	Argument	512		893168	1					
ANR	893372	PrimaryExpression	512		893168	0					
ANR	893373	Argument	"""ReceivedBytes = %f"""		893168	2					
ANR	893374	PrimaryExpression	"""ReceivedBytes = %f"""		893168	0					
ANR	893375	Argument	recvd_bytes		893168	3					
ANR	893376	Identifier	recvd_bytes		893168	0					
ANR	893377	ExpressionStatement	buf0 [ 511 ] = 0	2249:1:48974:48987	893168	20	True				
ANR	893378	AssignmentExpression	buf0 [ 511 ] = 0		893168	0		=			
ANR	893379	ArrayIndexing	buf0 [ 511 ]		893168	0					
ANR	893380	Identifier	buf0		893168	0					
ANR	893381	PrimaryExpression	511		893168	1					
ANR	893382	PrimaryExpression	0		893168	1					
ANR	893383	IfStatement	if ( ! myad -> Insert ( buf0 ) )		893168	21					
ANR	893384	Condition	! myad -> Insert ( buf0 )	2250:5:48994:49012	893168	0	True				
ANR	893385	UnaryOperationExpression	! myad -> Insert ( buf0 )		893168	0					
ANR	893386	UnaryOperator	!		893168	0					
ANR	893387	CallExpression	myad -> Insert ( buf0 )		893168	1					
ANR	893388	Callee	myad -> Insert		893168	0					
ANR	893389	PtrMemberAccess	myad -> Insert		893168	0					
ANR	893390	Identifier	myad		893168	0					
ANR	893391	Identifier	Insert		893168	1					
ANR	893392	ArgumentList	buf0		893168	1					
ANR	893393	Argument	buf0		893168	0					
ANR	893394	Identifier	buf0		893168	0					
ANR	893395	ReturnStatement	return NULL ;	2250:27:49016:49027	893168	1	True				
ANR	893396	Identifier	NULL		893168	0					
ANR	893397	ExpressionStatement	"snprintf ( buf0 , 512 , ""TerminatedAndRequeued = %s"" , terminate_and_requeued ? ""TRUE"" : ""FALSE"" )"	2252:1:49031:49127	893168	22	True				
ANR	893398	CallExpression	"snprintf ( buf0 , 512 , ""TerminatedAndRequeued = %s"" , terminate_and_requeued ? ""TRUE"" : ""FALSE"" )"		893168	0					
ANR	893399	Callee	snprintf		893168	0					
ANR	893400	Identifier	snprintf		893168	0					
ANR	893401	ArgumentList	buf0		893168	1					
ANR	893402	Argument	buf0		893168	0					
ANR	893403	Identifier	buf0		893168	0					
ANR	893404	Argument	512		893168	1					
ANR	893405	PrimaryExpression	512		893168	0					
ANR	893406	Argument	"""TerminatedAndRequeued = %s"""		893168	2					
ANR	893407	PrimaryExpression	"""TerminatedAndRequeued = %s"""		893168	0					
ANR	893408	Argument	"terminate_and_requeued ? ""TRUE"" : ""FALSE"""		893168	3					
ANR	893409	ConditionalExpression	"terminate_and_requeued ? ""TRUE"" : ""FALSE"""		893168	0					
ANR	893410	Condition	terminate_and_requeued		893168	0					
ANR	893411	Identifier	terminate_and_requeued		893168	0					
ANR	893412	PrimaryExpression	"""TRUE"""		893168	1					
ANR	893413	PrimaryExpression	"""FALSE"""		893168	2					
ANR	893414	ExpressionStatement	buf0 [ 511 ] = 0	2254:1:49130:49143	893168	23	True				
ANR	893415	AssignmentExpression	buf0 [ 511 ] = 0		893168	0		=			
ANR	893416	ArrayIndexing	buf0 [ 511 ]		893168	0					
ANR	893417	Identifier	buf0		893168	0					
ANR	893418	PrimaryExpression	511		893168	1					
ANR	893419	PrimaryExpression	0		893168	1					
ANR	893420	IfStatement	if ( ! myad -> Insert ( buf0 ) )		893168	24					
ANR	893421	Condition	! myad -> Insert ( buf0 )	2255:5:49150:49168	893168	0	True				
ANR	893422	UnaryOperationExpression	! myad -> Insert ( buf0 )		893168	0					
ANR	893423	UnaryOperator	!		893168	0					
ANR	893424	CallExpression	myad -> Insert ( buf0 )		893168	1					
ANR	893425	Callee	myad -> Insert		893168	0					
ANR	893426	PtrMemberAccess	myad -> Insert		893168	0					
ANR	893427	Identifier	myad		893168	0					
ANR	893428	Identifier	Insert		893168	1					
ANR	893429	ArgumentList	buf0		893168	1					
ANR	893430	Argument	buf0		893168	0					
ANR	893431	Identifier	buf0		893168	0					
ANR	893432	ReturnStatement	return NULL ;	2255:27:49172:49183	893168	1	True				
ANR	893433	Identifier	NULL		893168	0					
ANR	893434	ExpressionStatement	"snprintf ( buf0 , 512 , ""TerminatedNormally = %s"" , normal ? ""TRUE"" : ""FALSE"" )"	2256:1:49186:49263	893168	25	True				
ANR	893435	CallExpression	"snprintf ( buf0 , 512 , ""TerminatedNormally = %s"" , normal ? ""TRUE"" : ""FALSE"" )"		893168	0					
ANR	893436	Callee	snprintf		893168	0					
ANR	893437	Identifier	snprintf		893168	0					
ANR	893438	ArgumentList	buf0		893168	1					
ANR	893439	Argument	buf0		893168	0					
ANR	893440	Identifier	buf0		893168	0					
ANR	893441	Argument	512		893168	1					
ANR	893442	PrimaryExpression	512		893168	0					
ANR	893443	Argument	"""TerminatedNormally = %s"""		893168	2					
ANR	893444	PrimaryExpression	"""TerminatedNormally = %s"""		893168	0					
ANR	893445	Argument	"normal ? ""TRUE"" : ""FALSE"""		893168	3					
ANR	893446	ConditionalExpression	"normal ? ""TRUE"" : ""FALSE"""		893168	0					
ANR	893447	Condition	normal		893168	0					
ANR	893448	Identifier	normal		893168	0					
ANR	893449	PrimaryExpression	"""TRUE"""		893168	1					
ANR	893450	PrimaryExpression	"""FALSE"""		893168	2					
ANR	893451	ExpressionStatement	buf0 [ 511 ] = 0	2258:1:49266:49279	893168	26	True				
ANR	893452	AssignmentExpression	buf0 [ 511 ] = 0		893168	0		=			
ANR	893453	ArrayIndexing	buf0 [ 511 ]		893168	0					
ANR	893454	Identifier	buf0		893168	0					
ANR	893455	PrimaryExpression	511		893168	1					
ANR	893456	PrimaryExpression	0		893168	1					
ANR	893457	IfStatement	if ( ! myad -> Insert ( buf0 ) )		893168	27					
ANR	893458	Condition	! myad -> Insert ( buf0 )	2259:5:49286:49304	893168	0	True				
ANR	893459	UnaryOperationExpression	! myad -> Insert ( buf0 )		893168	0					
ANR	893460	UnaryOperator	!		893168	0					
ANR	893461	CallExpression	myad -> Insert ( buf0 )		893168	1					
ANR	893462	Callee	myad -> Insert		893168	0					
ANR	893463	PtrMemberAccess	myad -> Insert		893168	0					
ANR	893464	Identifier	myad		893168	0					
ANR	893465	Identifier	Insert		893168	1					
ANR	893466	ArgumentList	buf0		893168	1					
ANR	893467	Argument	buf0		893168	0					
ANR	893468	Identifier	buf0		893168	0					
ANR	893469	ReturnStatement	return NULL ;	2259:27:49308:49319	893168	1	True				
ANR	893470	Identifier	NULL		893168	0					
ANR	893471	IfStatement	if ( return_value >= 0 )		893168	28					
ANR	893472	Condition	return_value >= 0	2261:5:49327:49343	893168	0	True				
ANR	893473	RelationalExpression	return_value >= 0		893168	0		>=			
ANR	893474	Identifier	return_value		893168	0					
ANR	893475	PrimaryExpression	0		893168	1					
ANR	893476	CompoundStatement		38:25:1080:1080	893168	1					
ANR	893477	ExpressionStatement	"snprintf ( buf0 , 512 , ""ReturnValue = %d"" , return_value )"	2262:2:49351:49404	893168	0	True				
ANR	893478	CallExpression	"snprintf ( buf0 , 512 , ""ReturnValue = %d"" , return_value )"		893168	0					
ANR	893479	Callee	snprintf		893168	0					
ANR	893480	Identifier	snprintf		893168	0					
ANR	893481	ArgumentList	buf0		893168	1					
ANR	893482	Argument	buf0		893168	0					
ANR	893483	Identifier	buf0		893168	0					
ANR	893484	Argument	512		893168	1					
ANR	893485	PrimaryExpression	512		893168	0					
ANR	893486	Argument	"""ReturnValue = %d"""		893168	2					
ANR	893487	PrimaryExpression	"""ReturnValue = %d"""		893168	0					
ANR	893488	Argument	return_value		893168	3					
ANR	893489	Identifier	return_value		893168	0					
ANR	893490	ExpressionStatement	buf0 [ 511 ] = 0	2263:2:49408:49421	893168	1	True				
ANR	893491	AssignmentExpression	buf0 [ 511 ] = 0		893168	0		=			
ANR	893492	ArrayIndexing	buf0 [ 511 ]		893168	0					
ANR	893493	Identifier	buf0		893168	0					
ANR	893494	PrimaryExpression	511		893168	1					
ANR	893495	PrimaryExpression	0		893168	1					
ANR	893496	IfStatement	if ( ! myad -> Insert ( buf0 ) )		893168	2					
ANR	893497	Condition	! myad -> Insert ( buf0 )	2264:6:49429:49447	893168	0	True				
ANR	893498	UnaryOperationExpression	! myad -> Insert ( buf0 )		893168	0					
ANR	893499	UnaryOperator	!		893168	0					
ANR	893500	CallExpression	myad -> Insert ( buf0 )		893168	1					
ANR	893501	Callee	myad -> Insert		893168	0					
ANR	893502	PtrMemberAccess	myad -> Insert		893168	0					
ANR	893503	Identifier	myad		893168	0					
ANR	893504	Identifier	Insert		893168	1					
ANR	893505	ArgumentList	buf0		893168	1					
ANR	893506	Argument	buf0		893168	0					
ANR	893507	Identifier	buf0		893168	0					
ANR	893508	ReturnStatement	return NULL ;	2264:28:49451:49462	893168	1	True				
ANR	893509	Identifier	NULL		893168	0					
ANR	893510	IfStatement	if ( signal_number >= 0 )		893168	29					
ANR	893511	Condition	signal_number >= 0	2266:5:49472:49489	893168	0	True				
ANR	893512	RelationalExpression	signal_number >= 0		893168	0		>=			
ANR	893513	Identifier	signal_number		893168	0					
ANR	893514	PrimaryExpression	0		893168	1					
ANR	893515	CompoundStatement		43:26:1226:1226	893168	1					
ANR	893516	ExpressionStatement	"snprintf ( buf0 , 512 , ""TerminatedBySignal = %d"" , signal_number )"	2267:2:49497:49558	893168	0	True				
ANR	893517	CallExpression	"snprintf ( buf0 , 512 , ""TerminatedBySignal = %d"" , signal_number )"		893168	0					
ANR	893518	Callee	snprintf		893168	0					
ANR	893519	Identifier	snprintf		893168	0					
ANR	893520	ArgumentList	buf0		893168	1					
ANR	893521	Argument	buf0		893168	0					
ANR	893522	Identifier	buf0		893168	0					
ANR	893523	Argument	512		893168	1					
ANR	893524	PrimaryExpression	512		893168	0					
ANR	893525	Argument	"""TerminatedBySignal = %d"""		893168	2					
ANR	893526	PrimaryExpression	"""TerminatedBySignal = %d"""		893168	0					
ANR	893527	Argument	signal_number		893168	3					
ANR	893528	Identifier	signal_number		893168	0					
ANR	893529	ExpressionStatement	buf0 [ 511 ] = 0	2268:2:49562:49575	893168	1	True				
ANR	893530	AssignmentExpression	buf0 [ 511 ] = 0		893168	0		=			
ANR	893531	ArrayIndexing	buf0 [ 511 ]		893168	0					
ANR	893532	Identifier	buf0		893168	0					
ANR	893533	PrimaryExpression	511		893168	1					
ANR	893534	PrimaryExpression	0		893168	1					
ANR	893535	IfStatement	if ( ! myad -> Insert ( buf0 ) )		893168	2					
ANR	893536	Condition	! myad -> Insert ( buf0 )	2269:6:49583:49601	893168	0	True				
ANR	893537	UnaryOperationExpression	! myad -> Insert ( buf0 )		893168	0					
ANR	893538	UnaryOperator	!		893168	0					
ANR	893539	CallExpression	myad -> Insert ( buf0 )		893168	1					
ANR	893540	Callee	myad -> Insert		893168	0					
ANR	893541	PtrMemberAccess	myad -> Insert		893168	0					
ANR	893542	Identifier	myad		893168	0					
ANR	893543	Identifier	Insert		893168	1					
ANR	893544	ArgumentList	buf0		893168	1					
ANR	893545	Argument	buf0		893168	0					
ANR	893546	Identifier	buf0		893168	0					
ANR	893547	ReturnStatement	return NULL ;	2269:28:49605:49616	893168	1	True				
ANR	893548	Identifier	NULL		893168	0					
ANR	893549	IfStatement	if ( reason )		893168	30					
ANR	893550	Condition	reason	2272:5:49627:49632	893168	0	True				
ANR	893551	Identifier	reason		893168	0					
ANR	893552	CompoundStatement		50:2:1373:1386	893168	1					
ANR	893553	IdentifierDeclStatement	MyString buf2 ;	2273:2:49640:49653	893168	0	True				
ANR	893554	IdentifierDecl	buf2		893168	0					
ANR	893555	IdentifierDeclType	MyString		893168	0					
ANR	893556	Identifier	buf2		893168	1					
ANR	893557	ExpressionStatement	"buf2 . sprintf ( ""Reason = \\""%s\\"""" , reason )"	2274:2:49657:49696	893168	1	True				
ANR	893558	CallExpression	"buf2 . sprintf ( ""Reason = \\""%s\\"""" , reason )"		893168	0					
ANR	893559	Callee	buf2 . sprintf		893168	0					
ANR	893560	MemberAccess	buf2 . sprintf		893168	0					
ANR	893561	Identifier	buf2		893168	0					
ANR	893562	Identifier	sprintf		893168	1					
ANR	893563	ArgumentList	"""Reason = \\""%s\\"""""		893168	1					
ANR	893564	Argument	"""Reason = \\""%s\\"""""		893168	0					
ANR	893565	PrimaryExpression	"""Reason = \\""%s\\"""""		893168	0					
ANR	893566	Argument	reason		893168	1					
ANR	893567	Identifier	reason		893168	0					
ANR	893568	IfStatement	if ( ! myad -> Insert ( buf2 . Value ( ) ) )		893168	2					
ANR	893569	Condition	! myad -> Insert ( buf2 . Value ( ) )	2275:6:49704:49730	893168	0	True				
ANR	893570	UnaryOperationExpression	! myad -> Insert ( buf2 . Value ( ) )		893168	0					
ANR	893571	UnaryOperator	!		893168	0					
ANR	893572	CallExpression	myad -> Insert ( buf2 . Value ( ) )		893168	1					
ANR	893573	Callee	myad -> Insert		893168	0					
ANR	893574	PtrMemberAccess	myad -> Insert		893168	0					
ANR	893575	Identifier	myad		893168	0					
ANR	893576	Identifier	Insert		893168	1					
ANR	893577	ArgumentList	buf2 . Value ( )		893168	1					
ANR	893578	Argument	buf2 . Value ( )		893168	0					
ANR	893579	CallExpression	buf2 . Value ( )		893168	0					
ANR	893580	Callee	buf2 . Value		893168	0					
ANR	893581	MemberAccess	buf2 . Value		893168	0					
ANR	893582	Identifier	buf2		893168	0					
ANR	893583	Identifier	Value		893168	1					
ANR	893584	ArgumentList			893168	1					
ANR	893585	ReturnStatement	return NULL ;	2275:36:49734:49745	893168	1	True				
ANR	893586	Identifier	NULL		893168	0					
ANR	893587	IfStatement	if ( core_file )		893168	31					
ANR	893588	Condition	core_file	2277:5:49755:49763	893168	0	True				
ANR	893589	Identifier	core_file		893168	0					
ANR	893590	CompoundStatement		55:2:1504:1517	893168	1					
ANR	893591	IdentifierDeclStatement	MyString buf3 ;	2278:2:49771:49784	893168	0	True				
ANR	893592	IdentifierDecl	buf3		893168	0					
ANR	893593	IdentifierDeclType	MyString		893168	0					
ANR	893594	Identifier	buf3		893168	1					
ANR	893595	ExpressionStatement	"buf3 . sprintf ( ""CoreFile = \\""%s\\"""" , core_file )"	2279:2:49788:49832	893168	1	True				
ANR	893596	CallExpression	"buf3 . sprintf ( ""CoreFile = \\""%s\\"""" , core_file )"		893168	0					
ANR	893597	Callee	buf3 . sprintf		893168	0					
ANR	893598	MemberAccess	buf3 . sprintf		893168	0					
ANR	893599	Identifier	buf3		893168	0					
ANR	893600	Identifier	sprintf		893168	1					
ANR	893601	ArgumentList	"""CoreFile = \\""%s\\"""""		893168	1					
ANR	893602	Argument	"""CoreFile = \\""%s\\"""""		893168	0					
ANR	893603	PrimaryExpression	"""CoreFile = \\""%s\\"""""		893168	0					
ANR	893604	Argument	core_file		893168	1					
ANR	893605	Identifier	core_file		893168	0					
ANR	893606	IfStatement	if ( ! myad -> Insert ( buf3 . Value ( ) ) )		893168	2					
ANR	893607	Condition	! myad -> Insert ( buf3 . Value ( ) )	2280:6:49840:49866	893168	0	True				
ANR	893608	UnaryOperationExpression	! myad -> Insert ( buf3 . Value ( ) )		893168	0					
ANR	893609	UnaryOperator	!		893168	0					
ANR	893610	CallExpression	myad -> Insert ( buf3 . Value ( ) )		893168	1					
ANR	893611	Callee	myad -> Insert		893168	0					
ANR	893612	PtrMemberAccess	myad -> Insert		893168	0					
ANR	893613	Identifier	myad		893168	0					
ANR	893614	Identifier	Insert		893168	1					
ANR	893615	ArgumentList	buf3 . Value ( )		893168	1					
ANR	893616	Argument	buf3 . Value ( )		893168	0					
ANR	893617	CallExpression	buf3 . Value ( )		893168	0					
ANR	893618	Callee	buf3 . Value		893168	0					
ANR	893619	MemberAccess	buf3 . Value		893168	0					
ANR	893620	Identifier	buf3		893168	0					
ANR	893621	Identifier	Value		893168	1					
ANR	893622	ArgumentList			893168	1					
ANR	893623	ReturnStatement	return NULL ;	2280:36:49870:49881	893168	1	True				
ANR	893624	Identifier	NULL		893168	0					
ANR	893625	ReturnStatement	return myad ;	2283:1:49888:49899	893168	32	True				
ANR	893626	Identifier	myad		893168	0					
ANR	893627	ReturnType	ClassAd *		893168	1					
ANR	893628	Identifier	JobEvictedEvent :: toClassAd		893168	2					
ANR	893629	ParameterList			893168	3					
ANR	893630	CFGEntryNode	ENTRY		893168		True				
ANR	893631	CFGExitNode	EXIT		893168		True				
ANR	893632	Symbol	terminate_and_requeued		893168						
ANR	893633	Symbol	run_local_rusage		893168						
ANR	893634	Symbol	rs		893168						
ANR	893635	Symbol	rusageToStr		893168						
ANR	893636	Symbol	normal		893168						
ANR	893637	Symbol	signal_number		893168						
ANR	893638	Symbol	reason		893168						
ANR	893639	Symbol	return_value		893168						
ANR	893640	Symbol	NULL		893168						
ANR	893641	Symbol	* myad		893168						
ANR	893642	Symbol	myad -> Insert		893168						
ANR	893643	Symbol	buf3 . Value		893168						
ANR	893644	Symbol	ULogEvent :: toClassAd		893168						
ANR	893645	Symbol	checkpointed		893168						
ANR	893646	Symbol	buf2 . Value		893168						
ANR	893647	Symbol	buf3		893168						
ANR	893648	Symbol	* buf0		893168						
ANR	893649	Symbol	sent_bytes		893168						
ANR	893650	Symbol	buf2		893168						
ANR	893651	Symbol	buf0		893168						
ANR	893652	Symbol	recvd_bytes		893168						
ANR	893653	Symbol	run_remote_rusage		893168						
ANR	893654	Symbol	myad		893168						
ANR	893655	Symbol	core_file		893168						
ANR	893656	Function	JobEvictedEvent :: initFromClassAd	2286:0:49904:51072							
ANR	893657	FunctionDef	JobEvictedEvent :: initFromClassAd (ClassAd * ad)		893656	0					
ANR	893658	CompoundStatement		2288:0:49955:51072	893656	0					
ANR	893659	ExpressionStatement	ULogEvent :: initFromClassAd ( ad )	2289:1:49958:49988	893656	0	True				
ANR	893660	CallExpression	ULogEvent :: initFromClassAd ( ad )		893656	0					
ANR	893661	Callee	ULogEvent :: initFromClassAd		893656	0					
ANR	893662	Identifier	ULogEvent :: initFromClassAd		893656	0					
ANR	893663	ArgumentList	ad		893656	1					
ANR	893664	Argument	ad		893656	0					
ANR	893665	Identifier	ad		893656	0					
ANR	893666	IfStatement	if ( ! ad )		893656	1					
ANR	893667	Condition	! ad	2291:5:49996:49998	893656	0	True				
ANR	893668	UnaryOperationExpression	! ad		893656	0					
ANR	893669	UnaryOperator	!		893656	0					
ANR	893670	Identifier	ad		893656	1					
ANR	893671	ReturnStatement	return ;	2291:11:50002:50008	893656	1	True				
ANR	893672	IdentifierDeclStatement	int reallybool ;	2293:1:50012:50026	893656	2	True				
ANR	893673	IdentifierDecl	reallybool		893656	0					
ANR	893674	IdentifierDeclType	int		893656	0					
ANR	893675	Identifier	reallybool		893656	1					
ANR	893676	IfStatement	"if ( ad -> LookupInteger ( ""Checkpointed"" , reallybool ) )"		893656	3					
ANR	893677	Condition	"ad -> LookupInteger ( ""Checkpointed"" , reallybool )"	2294:5:50033:50077	893656	0	True				
ANR	893678	CallExpression	"ad -> LookupInteger ( ""Checkpointed"" , reallybool )"		893656	0					
ANR	893679	Callee	ad -> LookupInteger		893656	0					
ANR	893680	PtrMemberAccess	ad -> LookupInteger		893656	0					
ANR	893681	Identifier	ad		893656	0					
ANR	893682	Identifier	LookupInteger		893656	1					
ANR	893683	ArgumentList	"""Checkpointed"""		893656	1					
ANR	893684	Argument	"""Checkpointed"""		893656	0					
ANR	893685	PrimaryExpression	"""Checkpointed"""		893656	0					
ANR	893686	Argument	reallybool		893656	1					
ANR	893687	Identifier	reallybool		893656	0					
ANR	893688	CompoundStatement		7:53:125:125	893656	1					
ANR	893689	ExpressionStatement	checkpointed = reallybool ? TRUE : FALSE	2295:2:50085:50125	893656	0	True				
ANR	893690	AssignmentExpression	checkpointed = reallybool ? TRUE : FALSE		893656	0		=			
ANR	893691	Identifier	checkpointed		893656	0					
ANR	893692	ConditionalExpression	reallybool ? TRUE : FALSE		893656	1					
ANR	893693	Condition	reallybool		893656	0					
ANR	893694	Identifier	reallybool		893656	0					
ANR	893695	Identifier	TRUE		893656	1					
ANR	893696	Identifier	FALSE		893656	2					
ANR	893697	IdentifierDeclStatement	char * usageStr = NULL ;	2298:1:50132:50153	893656	4	True				
ANR	893698	IdentifierDecl	* usageStr = NULL		893656	0					
ANR	893699	IdentifierDeclType	char *		893656	0					
ANR	893700	Identifier	usageStr		893656	1					
ANR	893701	AssignmentExpression	* usageStr = NULL		893656	2		=			
ANR	893702	Identifier	NULL		893656	0					
ANR	893703	Identifier	NULL		893656	1					
ANR	893704	IfStatement	"if ( ad -> LookupString ( ""RunLocalUsage"" , & usageStr ) )"		893656	5					
ANR	893705	Condition	"ad -> LookupString ( ""RunLocalUsage"" , & usageStr )"	2299:5:50160:50203	893656	0	True				
ANR	893706	CallExpression	"ad -> LookupString ( ""RunLocalUsage"" , & usageStr )"		893656	0					
ANR	893707	Callee	ad -> LookupString		893656	0					
ANR	893708	PtrMemberAccess	ad -> LookupString		893656	0					
ANR	893709	Identifier	ad		893656	0					
ANR	893710	Identifier	LookupString		893656	1					
ANR	893711	ArgumentList	"""RunLocalUsage"""		893656	1					
ANR	893712	Argument	"""RunLocalUsage"""		893656	0					
ANR	893713	PrimaryExpression	"""RunLocalUsage"""		893656	0					
ANR	893714	Argument	& usageStr		893656	1					
ANR	893715	UnaryOperationExpression	& usageStr		893656	0					
ANR	893716	UnaryOperator	&		893656	0					
ANR	893717	Identifier	usageStr		893656	1					
ANR	893718	CompoundStatement		12:52:251:251	893656	1					
ANR	893719	ExpressionStatement	"strToRusage ( usageStr , run_local_rusage )"	2300:2:50211:50250	893656	0	True				
ANR	893720	CallExpression	"strToRusage ( usageStr , run_local_rusage )"		893656	0					
ANR	893721	Callee	strToRusage		893656	0					
ANR	893722	Identifier	strToRusage		893656	0					
ANR	893723	ArgumentList	usageStr		893656	1					
ANR	893724	Argument	usageStr		893656	0					
ANR	893725	Identifier	usageStr		893656	0					
ANR	893726	Argument	run_local_rusage		893656	1					
ANR	893727	Identifier	run_local_rusage		893656	0					
ANR	893728	ExpressionStatement	free ( usageStr )	2301:2:50254:50268	893656	1	True				
ANR	893729	CallExpression	free ( usageStr )		893656	0					
ANR	893730	Callee	free		893656	0					
ANR	893731	Identifier	free		893656	0					
ANR	893732	ArgumentList	usageStr		893656	1					
ANR	893733	Argument	usageStr		893656	0					
ANR	893734	Identifier	usageStr		893656	0					
ANR	893735	ExpressionStatement	usageStr = NULL	2303:1:50274:50289	893656	6	True				
ANR	893736	AssignmentExpression	usageStr = NULL		893656	0		=			
ANR	893737	Identifier	usageStr		893656	0					
ANR	893738	Identifier	NULL		893656	1					
ANR	893739	IfStatement	"if ( ad -> LookupString ( ""RunRemoteUsage"" , & usageStr ) )"		893656	7					
ANR	893740	Condition	"ad -> LookupString ( ""RunRemoteUsage"" , & usageStr )"	2304:5:50296:50340	893656	0	True				
ANR	893741	CallExpression	"ad -> LookupString ( ""RunRemoteUsage"" , & usageStr )"		893656	0					
ANR	893742	Callee	ad -> LookupString		893656	0					
ANR	893743	PtrMemberAccess	ad -> LookupString		893656	0					
ANR	893744	Identifier	ad		893656	0					
ANR	893745	Identifier	LookupString		893656	1					
ANR	893746	ArgumentList	"""RunRemoteUsage"""		893656	1					
ANR	893747	Argument	"""RunRemoteUsage"""		893656	0					
ANR	893748	PrimaryExpression	"""RunRemoteUsage"""		893656	0					
ANR	893749	Argument	& usageStr		893656	1					
ANR	893750	UnaryOperationExpression	& usageStr		893656	0					
ANR	893751	UnaryOperator	&		893656	0					
ANR	893752	Identifier	usageStr		893656	1					
ANR	893753	CompoundStatement		17:53:388:388	893656	1					
ANR	893754	ExpressionStatement	"strToRusage ( usageStr , run_remote_rusage )"	2305:2:50348:50388	893656	0	True				
ANR	893755	CallExpression	"strToRusage ( usageStr , run_remote_rusage )"		893656	0					
ANR	893756	Callee	strToRusage		893656	0					
ANR	893757	Identifier	strToRusage		893656	0					
ANR	893758	ArgumentList	usageStr		893656	1					
ANR	893759	Argument	usageStr		893656	0					
ANR	893760	Identifier	usageStr		893656	0					
ANR	893761	Argument	run_remote_rusage		893656	1					
ANR	893762	Identifier	run_remote_rusage		893656	0					
ANR	893763	ExpressionStatement	free ( usageStr )	2306:2:50392:50406	893656	1	True				
ANR	893764	CallExpression	free ( usageStr )		893656	0					
ANR	893765	Callee	free		893656	0					
ANR	893766	Identifier	free		893656	0					
ANR	893767	ArgumentList	usageStr		893656	1					
ANR	893768	Argument	usageStr		893656	0					
ANR	893769	Identifier	usageStr		893656	0					
ANR	893770	ExpressionStatement	"ad -> LookupFloat ( ""SentBytes"" , sent_bytes )"	2309:1:50413:50453	893656	8	True				
ANR	893771	CallExpression	"ad -> LookupFloat ( ""SentBytes"" , sent_bytes )"		893656	0					
ANR	893772	Callee	ad -> LookupFloat		893656	0					
ANR	893773	PtrMemberAccess	ad -> LookupFloat		893656	0					
ANR	893774	Identifier	ad		893656	0					
ANR	893775	Identifier	LookupFloat		893656	1					
ANR	893776	ArgumentList	"""SentBytes"""		893656	1					
ANR	893777	Argument	"""SentBytes"""		893656	0					
ANR	893778	PrimaryExpression	"""SentBytes"""		893656	0					
ANR	893779	Argument	sent_bytes		893656	1					
ANR	893780	Identifier	sent_bytes		893656	0					
ANR	893781	ExpressionStatement	"ad -> LookupFloat ( ""ReceivedBytes"" , recvd_bytes )"	2310:1:50456:50501	893656	9	True				
ANR	893782	CallExpression	"ad -> LookupFloat ( ""ReceivedBytes"" , recvd_bytes )"		893656	0					
ANR	893783	Callee	ad -> LookupFloat		893656	0					
ANR	893784	PtrMemberAccess	ad -> LookupFloat		893656	0					
ANR	893785	Identifier	ad		893656	0					
ANR	893786	Identifier	LookupFloat		893656	1					
ANR	893787	ArgumentList	"""ReceivedBytes"""		893656	1					
ANR	893788	Argument	"""ReceivedBytes"""		893656	0					
ANR	893789	PrimaryExpression	"""ReceivedBytes"""		893656	0					
ANR	893790	Argument	recvd_bytes		893656	1					
ANR	893791	Identifier	recvd_bytes		893656	0					
ANR	893792	IfStatement	"if ( ad -> LookupInteger ( ""TerminatedAndRequeued"" , reallybool ) )"		893656	10					
ANR	893793	Condition	"ad -> LookupInteger ( ""TerminatedAndRequeued"" , reallybool )"	2312:5:50509:50562	893656	0	True				
ANR	893794	CallExpression	"ad -> LookupInteger ( ""TerminatedAndRequeued"" , reallybool )"		893656	0					
ANR	893795	Callee	ad -> LookupInteger		893656	0					
ANR	893796	PtrMemberAccess	ad -> LookupInteger		893656	0					
ANR	893797	Identifier	ad		893656	0					
ANR	893798	Identifier	LookupInteger		893656	1					
ANR	893799	ArgumentList	"""TerminatedAndRequeued"""		893656	1					
ANR	893800	Argument	"""TerminatedAndRequeued"""		893656	0					
ANR	893801	PrimaryExpression	"""TerminatedAndRequeued"""		893656	0					
ANR	893802	Argument	reallybool		893656	1					
ANR	893803	Identifier	reallybool		893656	0					
ANR	893804	CompoundStatement		25:62:610:610	893656	1					
ANR	893805	ExpressionStatement	terminate_and_requeued = reallybool ? TRUE : FALSE	2313:2:50570:50620	893656	0	True				
ANR	893806	AssignmentExpression	terminate_and_requeued = reallybool ? TRUE : FALSE		893656	0		=			
ANR	893807	Identifier	terminate_and_requeued		893656	0					
ANR	893808	ConditionalExpression	reallybool ? TRUE : FALSE		893656	1					
ANR	893809	Condition	reallybool		893656	0					
ANR	893810	Identifier	reallybool		893656	0					
ANR	893811	Identifier	TRUE		893656	1					
ANR	893812	Identifier	FALSE		893656	2					
ANR	893813	IfStatement	"if ( ad -> LookupInteger ( ""TerminatedNormally"" , reallybool ) )"		893656	11					
ANR	893814	Condition	"ad -> LookupInteger ( ""TerminatedNormally"" , reallybool )"	2315:5:50630:50680	893656	0	True				
ANR	893815	CallExpression	"ad -> LookupInteger ( ""TerminatedNormally"" , reallybool )"		893656	0					
ANR	893816	Callee	ad -> LookupInteger		893656	0					
ANR	893817	PtrMemberAccess	ad -> LookupInteger		893656	0					
ANR	893818	Identifier	ad		893656	0					
ANR	893819	Identifier	LookupInteger		893656	1					
ANR	893820	ArgumentList	"""TerminatedNormally"""		893656	1					
ANR	893821	Argument	"""TerminatedNormally"""		893656	0					
ANR	893822	PrimaryExpression	"""TerminatedNormally"""		893656	0					
ANR	893823	Argument	reallybool		893656	1					
ANR	893824	Identifier	reallybool		893656	0					
ANR	893825	CompoundStatement		28:59:728:728	893656	1					
ANR	893826	ExpressionStatement	normal = reallybool ? TRUE : FALSE	2316:2:50688:50722	893656	0	True				
ANR	893827	AssignmentExpression	normal = reallybool ? TRUE : FALSE		893656	0		=			
ANR	893828	Identifier	normal		893656	0					
ANR	893829	ConditionalExpression	reallybool ? TRUE : FALSE		893656	1					
ANR	893830	Condition	reallybool		893656	0					
ANR	893831	Identifier	reallybool		893656	0					
ANR	893832	Identifier	TRUE		893656	1					
ANR	893833	Identifier	FALSE		893656	2					
ANR	893834	ExpressionStatement	"ad -> LookupInteger ( ""ReturnValue"" , return_value )"	2319:1:50729:50775	893656	12	True				
ANR	893835	CallExpression	"ad -> LookupInteger ( ""ReturnValue"" , return_value )"		893656	0					
ANR	893836	Callee	ad -> LookupInteger		893656	0					
ANR	893837	PtrMemberAccess	ad -> LookupInteger		893656	0					
ANR	893838	Identifier	ad		893656	0					
ANR	893839	Identifier	LookupInteger		893656	1					
ANR	893840	ArgumentList	"""ReturnValue"""		893656	1					
ANR	893841	Argument	"""ReturnValue"""		893656	0					
ANR	893842	PrimaryExpression	"""ReturnValue"""		893656	0					
ANR	893843	Argument	return_value		893656	1					
ANR	893844	Identifier	return_value		893656	0					
ANR	893845	ExpressionStatement	"ad -> LookupInteger ( ""TerminatedBySignal"" , signal_number )"	2320:1:50778:50832	893656	13	True				
ANR	893846	CallExpression	"ad -> LookupInteger ( ""TerminatedBySignal"" , signal_number )"		893656	0					
ANR	893847	Callee	ad -> LookupInteger		893656	0					
ANR	893848	PtrMemberAccess	ad -> LookupInteger		893656	0					
ANR	893849	Identifier	ad		893656	0					
ANR	893850	Identifier	LookupInteger		893656	1					
ANR	893851	ArgumentList	"""TerminatedBySignal"""		893656	1					
ANR	893852	Argument	"""TerminatedBySignal"""		893656	0					
ANR	893853	PrimaryExpression	"""TerminatedBySignal"""		893656	0					
ANR	893854	Argument	signal_number		893656	1					
ANR	893855	Identifier	signal_number		893656	0					
ANR	893856	IdentifierDeclStatement	char * multi = NULL ;	2322:1:50836:50854	893656	14	True				
ANR	893857	IdentifierDecl	* multi = NULL		893656	0					
ANR	893858	IdentifierDeclType	char *		893656	0					
ANR	893859	Identifier	multi		893656	1					
ANR	893860	AssignmentExpression	* multi = NULL		893656	2		=			
ANR	893861	Identifier	NULL		893656	0					
ANR	893862	Identifier	NULL		893656	1					
ANR	893863	ExpressionStatement	"ad -> LookupString ( ""Reason"" , & multi )"	2323:1:50857:50891	893656	15	True				
ANR	893864	CallExpression	"ad -> LookupString ( ""Reason"" , & multi )"		893656	0					
ANR	893865	Callee	ad -> LookupString		893656	0					
ANR	893866	PtrMemberAccess	ad -> LookupString		893656	0					
ANR	893867	Identifier	ad		893656	0					
ANR	893868	Identifier	LookupString		893656	1					
ANR	893869	ArgumentList	"""Reason"""		893656	1					
ANR	893870	Argument	"""Reason"""		893656	0					
ANR	893871	PrimaryExpression	"""Reason"""		893656	0					
ANR	893872	Argument	& multi		893656	1					
ANR	893873	UnaryOperationExpression	& multi		893656	0					
ANR	893874	UnaryOperator	&		893656	0					
ANR	893875	Identifier	multi		893656	1					
ANR	893876	IfStatement	if ( multi )		893656	16					
ANR	893877	Condition	multi	2324:5:50898:50902	893656	0	True				
ANR	893878	Identifier	multi		893656	0					
ANR	893879	CompoundStatement		37:13:950:950	893656	1					
ANR	893880	ExpressionStatement	setReason ( multi )	2325:2:50910:50926	893656	0	True				
ANR	893881	CallExpression	setReason ( multi )		893656	0					
ANR	893882	Callee	setReason		893656	0					
ANR	893883	Identifier	setReason		893656	0					
ANR	893884	ArgumentList	multi		893656	1					
ANR	893885	Argument	multi		893656	0					
ANR	893886	Identifier	multi		893656	0					
ANR	893887	ExpressionStatement	free ( multi )	2326:2:50930:50941	893656	1	True				
ANR	893888	CallExpression	free ( multi )		893656	0					
ANR	893889	Callee	free		893656	0					
ANR	893890	Identifier	free		893656	0					
ANR	893891	ArgumentList	multi		893656	1					
ANR	893892	Argument	multi		893656	0					
ANR	893893	Identifier	multi		893656	0					
ANR	893894	ExpressionStatement	multi = NULL	2327:2:50945:50957	893656	2	True				
ANR	893895	AssignmentExpression	multi = NULL		893656	0		=			
ANR	893896	Identifier	multi		893656	0					
ANR	893897	Identifier	NULL		893656	1					
ANR	893898	ExpressionStatement	"ad -> LookupString ( ""CoreFile"" , & multi )"	2329:1:50963:50999	893656	17	True				
ANR	893899	CallExpression	"ad -> LookupString ( ""CoreFile"" , & multi )"		893656	0					
ANR	893900	Callee	ad -> LookupString		893656	0					
ANR	893901	PtrMemberAccess	ad -> LookupString		893656	0					
ANR	893902	Identifier	ad		893656	0					
ANR	893903	Identifier	LookupString		893656	1					
ANR	893904	ArgumentList	"""CoreFile"""		893656	1					
ANR	893905	Argument	"""CoreFile"""		893656	0					
ANR	893906	PrimaryExpression	"""CoreFile"""		893656	0					
ANR	893907	Argument	& multi		893656	1					
ANR	893908	UnaryOperationExpression	& multi		893656	0					
ANR	893909	UnaryOperator	&		893656	0					
ANR	893910	Identifier	multi		893656	1					
ANR	893911	IfStatement	if ( multi )		893656	18					
ANR	893912	Condition	multi	2330:5:51006:51010	893656	0	True				
ANR	893913	Identifier	multi		893656	0					
ANR	893914	CompoundStatement		43:13:1058:1058	893656	1					
ANR	893915	ExpressionStatement	setCoreFile ( multi )	2331:2:51018:51036	893656	0	True				
ANR	893916	CallExpression	setCoreFile ( multi )		893656	0					
ANR	893917	Callee	setCoreFile		893656	0					
ANR	893918	Identifier	setCoreFile		893656	0					
ANR	893919	ArgumentList	multi		893656	1					
ANR	893920	Argument	multi		893656	0					
ANR	893921	Identifier	multi		893656	0					
ANR	893922	ExpressionStatement	free ( multi )	2332:2:51040:51051	893656	1	True				
ANR	893923	CallExpression	free ( multi )		893656	0					
ANR	893924	Callee	free		893656	0					
ANR	893925	Identifier	free		893656	0					
ANR	893926	ArgumentList	multi		893656	1					
ANR	893927	Argument	multi		893656	0					
ANR	893928	Identifier	multi		893656	0					
ANR	893929	ExpressionStatement	multi = NULL	2333:2:51055:51067	893656	2	True				
ANR	893930	AssignmentExpression	multi = NULL		893656	0		=			
ANR	893931	Identifier	multi		893656	0					
ANR	893932	Identifier	NULL		893656	1					
ANR	893933	ReturnType	void		893656	1					
ANR	893934	Identifier	JobEvictedEvent :: initFromClassAd		893656	2					
ANR	893935	ParameterList	ClassAd * ad		893656	3					
ANR	893936	Parameter	ClassAd * ad	2287:33:49942:49952	893656	0	True				
ANR	893937	ParameterType	ClassAd *		893656	0					
ANR	893938	Identifier	ad		893656	1					
ANR	893939	CFGEntryNode	ENTRY		893656		True				
ANR	893940	CFGExitNode	EXIT		893656		True				
ANR	893941	Symbol	ad -> LookupString		893656						
ANR	893942	Symbol	terminate_and_requeued		893656						
ANR	893943	Symbol	& usageStr		893656						
ANR	893944	Symbol	run_local_rusage		893656						
ANR	893945	Symbol	normal		893656						
ANR	893946	Symbol	signal_number		893656						
ANR	893947	Symbol	& multi		893656						
ANR	893948	Symbol	return_value		893656						
ANR	893949	Symbol	ad		893656						
ANR	893950	Symbol	NULL		893656						
ANR	893951	Symbol	usageStr		893656						
ANR	893952	Symbol	TRUE		893656						
ANR	893953	Symbol	* ad		893656						
ANR	893954	Symbol	checkpointed		893656						
ANR	893955	Symbol	sent_bytes		893656						
ANR	893956	Symbol	multi		893656						
ANR	893957	Symbol	recvd_bytes		893656						
ANR	893958	Symbol	run_remote_rusage		893656						
ANR	893959	Symbol	ad -> LookupInteger		893656						
ANR	893960	Symbol	FALSE		893656						
ANR	893961	Symbol	reallybool		893656						
ANR	893962	Function	JobAbortedEvent :: JobAbortedEvent	2339:0:51107:51198							
ANR	893963	FunctionDef	JobAbortedEvent :: JobAbortedEvent ()		893962	0					
ANR	893964	CompoundStatement		2340:0:51147:51198	893962	0					
ANR	893965	ExpressionStatement	eventNumber = ULOG_JOB_ABORTED	2341:1:51150:51180	893962	0	True				
ANR	893966	AssignmentExpression	eventNumber = ULOG_JOB_ABORTED		893962	0		=			
ANR	893967	Identifier	eventNumber		893962	0					
ANR	893968	Identifier	ULOG_JOB_ABORTED		893962	1					
ANR	893969	ExpressionStatement	reason = NULL	2342:1:51183:51196	893962	1	True				
ANR	893970	AssignmentExpression	reason = NULL		893962	0		=			
ANR	893971	Identifier	reason		893962	0					
ANR	893972	Identifier	NULL		893962	1					
ANR	893973	Identifier	JobAbortedEvent :: JobAbortedEvent		893962	1					
ANR	893974	ParameterList			893962	2					
ANR	893975	CFGEntryNode	ENTRY		893962		True				
ANR	893976	CFGExitNode	EXIT		893962		True				
ANR	893977	Symbol	reason		893962						
ANR	893978	Symbol	NULL		893962						
ANR	893979	Symbol	eventNumber		893962						
ANR	893980	Symbol	ULOG_JOB_ABORTED		893962						
ANR	893981	Function	JobAbortedEvent :: ~JobAbortedEvent	2345:0:51201:51261							
ANR	893982	FunctionDef	JobAbortedEvent :: ~JobAbortedEvent ()		893981	0					
ANR	893983	CompoundStatement		2346:0:51241:51261	893981	0					
ANR	893984	Statement	delete	2347:1:51244:51249	893981	0	True				
ANR	893985	Statement	[	2347:7:51250:51250	893981	1	True				
ANR	893986	Statement	]	2347:8:51251:51251	893981	2	True				
ANR	893987	ExpressionStatement	reason	2347:10:51253:51259	893981	3	True				
ANR	893988	Identifier	reason		893981	0					
ANR	893989	Identifier	JobAbortedEvent :: ~JobAbortedEvent		893981	1					
ANR	893990	ParameterList			893981	2					
ANR	893991	CFGEntryNode	ENTRY		893981		True				
ANR	893992	CFGExitNode	EXIT		893981		True				
ANR	893993	Function	JobAbortedEvent :: setReason	2351:0:51265:51478							
ANR	893994	FunctionDef	JobAbortedEvent :: setReason (const char * reason_str)		893993	0					
ANR	893995	CompoundStatement		2353:0:51323:51478	893993	0					
ANR	893996	Statement	delete	2354:1:51326:51331	893993	0	True				
ANR	893997	Statement	[	2354:7:51332:51332	893993	1	True				
ANR	893998	Statement	]	2354:8:51333:51333	893993	2	True				
ANR	893999	ExpressionStatement	reason	2354:10:51335:51341	893993	3	True				
ANR	894000	Identifier	reason		893993	0					
ANR	894001	ExpressionStatement	reason = NULL	2355:1:51344:51357	893993	4	True				
ANR	894002	AssignmentExpression	reason = NULL		893993	0		=			
ANR	894003	Identifier	reason		893993	0					
ANR	894004	Identifier	NULL		893993	1					
ANR	894005	IfStatement	if ( reason_str )		893993	5					
ANR	894006	Condition	reason_str	2356:5:51364:51373	893993	0	True				
ANR	894007	Identifier	reason_str		893993	0					
ANR	894008	CompoundStatement		4:18:53:53	893993	1					
ANR	894009	ExpressionStatement	reason = strnewp ( reason_str )	2357:2:51381:51411	893993	0	True				
ANR	894010	AssignmentExpression	reason = strnewp ( reason_str )		893993	0		=			
ANR	894011	Identifier	reason		893993	0					
ANR	894012	CallExpression	strnewp ( reason_str )		893993	1					
ANR	894013	Callee	strnewp		893993	0					
ANR	894014	Identifier	strnewp		893993	0					
ANR	894015	ArgumentList	reason_str		893993	1					
ANR	894016	Argument	reason_str		893993	0					
ANR	894017	Identifier	reason_str		893993	0					
ANR	894018	IfStatement	if ( ! reason )		893993	1					
ANR	894019	Condition	! reason	2358:6:51419:51425	893993	0	True				
ANR	894020	UnaryOperationExpression	! reason		893993	0					
ANR	894021	UnaryOperator	!		893993	0					
ANR	894022	Identifier	reason		893993	1					
ANR	894023	CompoundStatement		6:16:105:105	893993	1					
ANR	894024	ExpressionStatement	"EXCEPT ( ""ERROR: out of memory!\\n"" )"	2359:3:51434:51469	893993	0	True				
ANR	894025	CallExpression	"EXCEPT ( ""ERROR: out of memory!\\n"" )"		893993	0					
ANR	894026	Callee	EXCEPT		893993	0					
ANR	894027	Identifier	EXCEPT		893993	0					
ANR	894028	ArgumentList	"""ERROR: out of memory!\\n"""		893993	1					
ANR	894029	Argument	"""ERROR: out of memory!\\n"""		893993	0					
ANR	894030	PrimaryExpression	"""ERROR: out of memory!\\n"""		893993	0					
ANR	894031	ReturnType	void		893993	1					
ANR	894032	Identifier	JobAbortedEvent :: setReason		893993	2					
ANR	894033	ParameterList	const char * reason_str		893993	3					
ANR	894034	Parameter	const char * reason_str	2352:28:51298:51319	893993	0	True				
ANR	894035	ParameterType	const char *		893993	0					
ANR	894036	Identifier	reason_str		893993	1					
ANR	894037	CFGEntryNode	ENTRY		893993		True				
ANR	894038	CFGExitNode	EXIT		893993		True				
ANR	894039	Symbol	reason_str		893993						
ANR	894040	Symbol	reason		893993						
ANR	894041	Symbol	NULL		893993						
ANR	894042	Symbol	strnewp		893993						
ANR	894043	Function	JobAbortedEvent :: getReason	2365:0:51482:51553							
ANR	894044	FunctionDef	JobAbortedEvent :: getReason ()		894043	0					
ANR	894045	CompoundStatement		2367:0:51535:51553	894043	0					
ANR	894046	ReturnStatement	return reason ;	2368:1:51538:51551	894043	0	True				
ANR	894047	Identifier	reason		894043	0					
ANR	894048	ReturnType	const char *		894043	1					
ANR	894049	Identifier	JobAbortedEvent :: getReason		894043	2					
ANR	894050	ParameterList			894043	3					
ANR	894051	CFGEntryNode	ENTRY		894043		True				
ANR	894052	CFGExitNode	EXIT		894043		True				
ANR	894053	Symbol	reason		894043						
ANR	894054	Function	JobAbortedEvent :: writeEvent	2372:0:51557:52473							
ANR	894055	FunctionDef	JobAbortedEvent :: writeEvent (FILE * file)		894054	0					
ANR	894056	CompoundStatement		2374:0:51602:52473	894054	0					
ANR	894057	IdentifierDeclStatement	char messagestr [ 512 ] ;	2376:1:51606:51626	894054	0	True				
ANR	894058	IdentifierDecl	messagestr [ 512 ]		894054	0					
ANR	894059	IdentifierDeclType	char [ 512 ]		894054	0					
ANR	894060	Identifier	messagestr		894054	1					
ANR	894061	PrimaryExpression	512		894054	2					
ANR	894062	IdentifierDeclStatement	ClassAd tmpCl1 ;	2377:1:51629:51643	894054	1	True				
ANR	894063	IdentifierDecl	tmpCl1		894054	0					
ANR	894064	IdentifierDeclType	ClassAd		894054	0					
ANR	894065	Identifier	tmpCl1		894054	1					
ANR	894066	IdentifierDeclStatement	"MyString tmp = """" ;"	2379:1:51677:51694	894054	2	True				
ANR	894067	IdentifierDecl	"tmp = """""		894054	0					
ANR	894068	IdentifierDeclType	MyString		894054	0					
ANR	894069	Identifier	tmp		894054	1					
ANR	894070	AssignmentExpression	"tmp = """""		894054	2		=			
ANR	894071	Identifier	tmp		894054	0					
ANR	894072	PrimaryExpression	""""""		894054	1					
ANR	894073	ExpressionStatement	scheddname = getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )	2381:1:51698:51750	894054	3	True				
ANR	894074	AssignmentExpression	scheddname = getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )		894054	0		=			
ANR	894075	Identifier	scheddname		894054	0					
ANR	894076	CallExpression	getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )		894054	1					
ANR	894077	Callee	getenv		894054	0					
ANR	894078	Identifier	getenv		894054	0					
ANR	894079	ArgumentList	EnvGetName ( ENV_SCHEDD_NAME )		894054	1					
ANR	894080	Argument	EnvGetName ( ENV_SCHEDD_NAME )		894054	0					
ANR	894081	CallExpression	EnvGetName ( ENV_SCHEDD_NAME )		894054	0					
ANR	894082	Callee	EnvGetName		894054	0					
ANR	894083	Identifier	EnvGetName		894054	0					
ANR	894084	ArgumentList	ENV_SCHEDD_NAME		894054	1					
ANR	894085	Argument	ENV_SCHEDD_NAME		894054	0					
ANR	894086	Identifier	ENV_SCHEDD_NAME		894054	0					
ANR	894087	IfStatement	if ( reason )		894054	4					
ANR	894088	Condition	reason	2383:5:51758:51763	894054	0	True				
ANR	894089	Identifier	reason		894054	0					
ANR	894090	ExpressionStatement	"snprintf ( messagestr , 512 , ""Job was aborted by the user: %s"" , reason )"	2384:2:51768:51837	894054	1	True				
ANR	894091	CallExpression	"snprintf ( messagestr , 512 , ""Job was aborted by the user: %s"" , reason )"		894054	0					
ANR	894092	Callee	snprintf		894054	0					
ANR	894093	Identifier	snprintf		894054	0					
ANR	894094	ArgumentList	messagestr		894054	1					
ANR	894095	Argument	messagestr		894054	0					
ANR	894096	Identifier	messagestr		894054	0					
ANR	894097	Argument	512		894054	1					
ANR	894098	PrimaryExpression	512		894054	0					
ANR	894099	Argument	"""Job was aborted by the user: %s"""		894054	2					
ANR	894100	PrimaryExpression	"""Job was aborted by the user: %s"""		894054	0					
ANR	894101	Argument	reason		894054	3					
ANR	894102	Identifier	reason		894054	0					
ANR	894103	ElseStatement	else		894054	0					
ANR	894104	ExpressionStatement	"sprintf ( messagestr , ""Job was aborted by the user"" )"	2386:2:51847:51898	894054	0	True				
ANR	894105	CallExpression	"sprintf ( messagestr , ""Job was aborted by the user"" )"		894054	0					
ANR	894106	Callee	sprintf		894054	0					
ANR	894107	Identifier	sprintf		894054	0					
ANR	894108	ArgumentList	messagestr		894054	1					
ANR	894109	Argument	messagestr		894054	0					
ANR	894110	Identifier	messagestr		894054	0					
ANR	894111	Argument	"""Job was aborted by the user"""		894054	1					
ANR	894112	PrimaryExpression	"""Job was aborted by the user"""		894054	0					
ANR	894113	ExpressionStatement	insertCommonIdentifiers ( tmpCl1 )	2389:1:51950:51981	894054	5	True				
ANR	894114	CallExpression	insertCommonIdentifiers ( tmpCl1 )		894054	0					
ANR	894115	Callee	insertCommonIdentifiers		894054	0					
ANR	894116	Identifier	insertCommonIdentifiers		894054	0					
ANR	894117	ArgumentList	tmpCl1		894054	1					
ANR	894118	Argument	tmpCl1		894054	0					
ANR	894119	Identifier	tmpCl1		894054	0					
ANR	894120	ExpressionStatement	"tmpCl1 . Assign ( ""eventtype"" , ULOG_JOB_ABORTED )"	2391:1:51985:52029	894054	6	True				
ANR	894121	CallExpression	"tmpCl1 . Assign ( ""eventtype"" , ULOG_JOB_ABORTED )"		894054	0					
ANR	894122	Callee	tmpCl1 . Assign		894054	0					
ANR	894123	MemberAccess	tmpCl1 . Assign		894054	0					
ANR	894124	Identifier	tmpCl1		894054	0					
ANR	894125	Identifier	Assign		894054	1					
ANR	894126	ArgumentList	"""eventtype"""		894054	1					
ANR	894127	Argument	"""eventtype"""		894054	0					
ANR	894128	PrimaryExpression	"""eventtype"""		894054	0					
ANR	894129	Argument	ULOG_JOB_ABORTED		894054	1					
ANR	894130	Identifier	ULOG_JOB_ABORTED		894054	0					
ANR	894131	ExpressionStatement	"tmpCl1 . Assign ( ""eventtime"" , ( int ) eventclock )"	2392:1:52032:52075	894054	7	True				
ANR	894132	CallExpression	"tmpCl1 . Assign ( ""eventtime"" , ( int ) eventclock )"		894054	0					
ANR	894133	Callee	tmpCl1 . Assign		894054	0					
ANR	894134	MemberAccess	tmpCl1 . Assign		894054	0					
ANR	894135	Identifier	tmpCl1		894054	0					
ANR	894136	Identifier	Assign		894054	1					
ANR	894137	ArgumentList	"""eventtime"""		894054	1					
ANR	894138	Argument	"""eventtime"""		894054	0					
ANR	894139	PrimaryExpression	"""eventtime"""		894054	0					
ANR	894140	Argument	( int ) eventclock		894054	1					
ANR	894141	CastExpression	( int ) eventclock		894054	0					
ANR	894142	CastTarget	int		894054	0					
ANR	894143	Identifier	eventclock		894054	1					
ANR	894144	ExpressionStatement	"tmpCl1 . Assign ( ""description"" , messagestr )"	2393:1:52078:52118	894054	8	True				
ANR	894145	CallExpression	"tmpCl1 . Assign ( ""description"" , messagestr )"		894054	0					
ANR	894146	Callee	tmpCl1 . Assign		894054	0					
ANR	894147	MemberAccess	tmpCl1 . Assign		894054	0					
ANR	894148	Identifier	tmpCl1		894054	0					
ANR	894149	Identifier	Assign		894054	1					
ANR	894150	ArgumentList	"""description"""		894054	1					
ANR	894151	Argument	"""description"""		894054	0					
ANR	894152	PrimaryExpression	"""description"""		894054	0					
ANR	894153	Argument	messagestr		894054	1					
ANR	894154	Identifier	messagestr		894054	0					
ANR	894155	IfStatement	if ( FILEObj )		894054	9					
ANR	894156	Condition	FILEObj	2395:5:52126:52132	894054	0	True				
ANR	894157	Identifier	FILEObj		894054	0					
ANR	894158	CompoundStatement		22:14:532:532	894054	1					
ANR	894159	IfStatement	"if ( FILEObj -> file_newEvent ( ""Events"" , & tmpCl1 ) == QUILL_FAILURE )"		894054	0					
ANR	894160	Condition	"FILEObj -> file_newEvent ( ""Events"" , & tmpCl1 ) == QUILL_FAILURE"	2396:6:52143:52200	894054	0	True				
ANR	894161	EqualityExpression	"FILEObj -> file_newEvent ( ""Events"" , & tmpCl1 ) == QUILL_FAILURE"		894054	0		==			
ANR	894162	CallExpression	"FILEObj -> file_newEvent ( ""Events"" , & tmpCl1 )"		894054	0					
ANR	894163	Callee	FILEObj -> file_newEvent		894054	0					
ANR	894164	PtrMemberAccess	FILEObj -> file_newEvent		894054	0					
ANR	894165	Identifier	FILEObj		894054	0					
ANR	894166	Identifier	file_newEvent		894054	1					
ANR	894167	ArgumentList	"""Events"""		894054	1					
ANR	894168	Argument	"""Events"""		894054	0					
ANR	894169	PrimaryExpression	"""Events"""		894054	0					
ANR	894170	Argument	& tmpCl1		894054	1					
ANR	894171	UnaryOperationExpression	& tmpCl1		894054	0					
ANR	894172	UnaryOperator	&		894054	0					
ANR	894173	Identifier	tmpCl1		894054	1					
ANR	894174	Identifier	QUILL_FAILURE		894054	1					
ANR	894175	CompoundStatement		23:66:600:600	894054	1					
ANR	894176	ExpressionStatement	"dprintf ( D_ALWAYS , ""Logging Event 7--- Error\\n"" )"	2397:3:52208:52255	894054	0	True				
ANR	894177	CallExpression	"dprintf ( D_ALWAYS , ""Logging Event 7--- Error\\n"" )"		894054	0					
ANR	894178	Callee	dprintf		894054	0					
ANR	894179	Identifier	dprintf		894054	0					
ANR	894180	ArgumentList	D_ALWAYS		894054	1					
ANR	894181	Argument	D_ALWAYS		894054	0					
ANR	894182	Identifier	D_ALWAYS		894054	0					
ANR	894183	Argument	"""Logging Event 7--- Error\\n"""		894054	1					
ANR	894184	PrimaryExpression	"""Logging Event 7--- Error\\n"""		894054	0					
ANR	894185	ReturnStatement	return 0 ;	2398:3:52260:52268	894054	1	True				
ANR	894186	PrimaryExpression	0		894054	0					
ANR	894187	IfStatement	"if ( fprintf ( file , ""Job was aborted by the user.\\n"" ) < 0 )"		894054	10					
ANR	894188	Condition	"fprintf ( file , ""Job was aborted by the user.\\n"" ) < 0"	2402:5:52309:52359	894054	0	True				
ANR	894189	RelationalExpression	"fprintf ( file , ""Job was aborted by the user.\\n"" ) < 0"		894054	0		<			
ANR	894190	CallExpression	"fprintf ( file , ""Job was aborted by the user.\\n"" )"		894054	0					
ANR	894191	Callee	fprintf		894054	0					
ANR	894192	Identifier	fprintf		894054	0					
ANR	894193	ArgumentList	file		894054	1					
ANR	894194	Argument	file		894054	0					
ANR	894195	Identifier	file		894054	0					
ANR	894196	Argument	"""Job was aborted by the user.\\n"""		894054	1					
ANR	894197	PrimaryExpression	"""Job was aborted by the user.\\n"""		894054	0					
ANR	894198	PrimaryExpression	0		894054	1					
ANR	894199	CompoundStatement		29:59:760:760	894054	1					
ANR	894200	ReturnStatement	return 0 ;	2403:2:52367:52375	894054	0	True				
ANR	894201	PrimaryExpression	0		894054	0					
ANR	894202	IfStatement	if ( reason )		894054	11					
ANR	894203	Condition	reason	2405:5:52385:52390	894054	0	True				
ANR	894204	Identifier	reason		894054	0					
ANR	894205	CompoundStatement		32:14:791:791	894054	1					
ANR	894206	IfStatement	"if ( fprintf ( file , ""\\t%s\\n"" , reason ) < 0 )"		894054	0					
ANR	894207	Condition	"fprintf ( file , ""\\t%s\\n"" , reason ) < 0"	2406:6:52402:52436	894054	0	True				
ANR	894208	RelationalExpression	"fprintf ( file , ""\\t%s\\n"" , reason ) < 0"		894054	0		<			
ANR	894209	CallExpression	"fprintf ( file , ""\\t%s\\n"" , reason )"		894054	0					
ANR	894210	Callee	fprintf		894054	0					
ANR	894211	Identifier	fprintf		894054	0					
ANR	894212	ArgumentList	file		894054	1					
ANR	894213	Argument	file		894054	0					
ANR	894214	Identifier	file		894054	0					
ANR	894215	Argument	"""\\t%s\\n"""		894054	1					
ANR	894216	PrimaryExpression	"""\\t%s\\n"""		894054	0					
ANR	894217	Argument	reason		894054	2					
ANR	894218	Identifier	reason		894054	0					
ANR	894219	PrimaryExpression	0		894054	1					
ANR	894220	CompoundStatement		33:44:837:837	894054	1					
ANR	894221	ReturnStatement	return 0 ;	2407:3:52445:52453	894054	0	True				
ANR	894222	PrimaryExpression	0		894054	0					
ANR	894223	ReturnStatement	return 1 ;	2410:1:52463:52471	894054	12	True				
ANR	894224	PrimaryExpression	1		894054	0					
ANR	894225	ReturnType	int		894054	1					
ANR	894226	Identifier	JobAbortedEvent :: writeEvent		894054	2					
ANR	894227	ParameterList	FILE * file		894054	3					
ANR	894228	Parameter	FILE * file	2373:29:51590:51599	894054	0	True				
ANR	894229	ParameterType	FILE *		894054	0					
ANR	894230	Identifier	file		894054	1					
ANR	894231	CFGEntryNode	ENTRY		894054		True				
ANR	894232	CFGExitNode	EXIT		894054		True				
ANR	894233	Symbol	reason		894054						
ANR	894234	Symbol	scheddname		894054						
ANR	894235	Symbol	ULOG_JOB_ABORTED		894054						
ANR	894236	Symbol	D_ALWAYS		894054						
ANR	894237	Symbol	EnvGetName		894054						
ANR	894238	Symbol	ENV_SCHEDD_NAME		894054						
ANR	894239	Symbol	QUILL_FAILURE		894054						
ANR	894240	Symbol	fprintf		894054						
ANR	894241	Symbol	FILEObj		894054						
ANR	894242	Symbol	* FILEObj		894054						
ANR	894243	Symbol	& tmpCl1		894054						
ANR	894244	Symbol	file		894054						
ANR	894245	Symbol	messagestr		894054						
ANR	894246	Symbol	eventclock		894054						
ANR	894247	Symbol	tmp		894054						
ANR	894248	Symbol	tmpCl1		894054						
ANR	894249	Symbol	FILEObj -> file_newEvent		894054						
ANR	894250	Symbol	getenv		894054						
ANR	894251	Function	JobAbortedEvent :: readEvent	2414:0:52477:53328							
ANR	894252	FunctionDef	JobAbortedEvent :: readEvent (FILE * file)		894251	0					
ANR	894253	CompoundStatement		2416:0:52521:53328	894251	0					
ANR	894254	IfStatement	"if ( fscanf ( file , ""Job was aborted by the user.\\n"" ) == EOF )"		894251	0					
ANR	894255	Condition	"fscanf ( file , ""Job was aborted by the user.\\n"" ) == EOF"	2417:5:52528:52580	894251	0	True				
ANR	894256	EqualityExpression	"fscanf ( file , ""Job was aborted by the user.\\n"" ) == EOF"		894251	0		==			
ANR	894257	CallExpression	"fscanf ( file , ""Job was aborted by the user.\\n"" )"		894251	0					
ANR	894258	Callee	fscanf		894251	0					
ANR	894259	Identifier	fscanf		894251	0					
ANR	894260	ArgumentList	file		894251	1					
ANR	894261	Argument	file		894251	0					
ANR	894262	Identifier	file		894251	0					
ANR	894263	Argument	"""Job was aborted by the user.\\n"""		894251	1					
ANR	894264	PrimaryExpression	"""Job was aborted by the user.\\n"""		894251	0					
ANR	894265	Identifier	EOF		894251	1					
ANR	894266	CompoundStatement		2:61:62:62	894251	1					
ANR	894267	ReturnStatement	return 0 ;	2418:2:52588:52596	894251	0	True				
ANR	894268	PrimaryExpression	0		894251	0					
ANR	894269	IdentifierDeclStatement	fpos_t filep ;	2422:1:52709:52721	894251	1	True				
ANR	894270	IdentifierDecl	filep		894251	0					
ANR	894271	IdentifierDeclType	fpos_t		894251	0					
ANR	894272	Identifier	filep		894251	1					
ANR	894273	ExpressionStatement	"fgetpos ( file , & filep )"	2423:1:52724:52747	894251	2	True				
ANR	894274	CallExpression	"fgetpos ( file , & filep )"		894251	0					
ANR	894275	Callee	fgetpos		894251	0					
ANR	894276	Identifier	fgetpos		894251	0					
ANR	894277	ArgumentList	file		894251	1					
ANR	894278	Argument	file		894251	0					
ANR	894279	Identifier	file		894251	0					
ANR	894280	Argument	& filep		894251	1					
ANR	894281	UnaryOperationExpression	& filep		894251	0					
ANR	894282	UnaryOperator	&		894251	0					
ANR	894283	Identifier	filep		894251	1					
ANR	894284	IdentifierDeclStatement	char reason_buf [ BUFSIZ ] ;	2424:1:52750:52773	894251	3	True				
ANR	894285	IdentifierDecl	reason_buf [ BUFSIZ ]		894251	0					
ANR	894286	IdentifierDeclType	char [ BUFSIZ ]		894251	0					
ANR	894287	Identifier	reason_buf		894251	1					
ANR	894288	Identifier	BUFSIZ		894251	2					
ANR	894289	IfStatement	"if ( ! fgets ( reason_buf , BUFSIZ , file ) || strcmp ( reason_buf , ""...\\n"" ) == 0 )"		894251	4					
ANR	894290	Condition	"! fgets ( reason_buf , BUFSIZ , file ) || strcmp ( reason_buf , ""...\\n"" ) == 0"	2425:5:52780:52857	894251	0	True				
ANR	894291	OrExpression	"! fgets ( reason_buf , BUFSIZ , file ) || strcmp ( reason_buf , ""...\\n"" ) == 0"		894251	0		||			
ANR	894292	UnaryOperationExpression	"! fgets ( reason_buf , BUFSIZ , file )"		894251	0					
ANR	894293	UnaryOperator	!		894251	0					
ANR	894294	CallExpression	"fgets ( reason_buf , BUFSIZ , file )"		894251	1					
ANR	894295	Callee	fgets		894251	0					
ANR	894296	Identifier	fgets		894251	0					
ANR	894297	ArgumentList	reason_buf		894251	1					
ANR	894298	Argument	reason_buf		894251	0					
ANR	894299	Identifier	reason_buf		894251	0					
ANR	894300	Argument	BUFSIZ		894251	1					
ANR	894301	Identifier	BUFSIZ		894251	0					
ANR	894302	Argument	file		894251	2					
ANR	894303	Identifier	file		894251	0					
ANR	894304	EqualityExpression	"strcmp ( reason_buf , ""...\\n"" ) == 0"		894251	1		==			
ANR	894305	CallExpression	"strcmp ( reason_buf , ""...\\n"" )"		894251	0					
ANR	894306	Callee	strcmp		894251	0					
ANR	894307	Identifier	strcmp		894251	0					
ANR	894308	ArgumentList	reason_buf		894251	1					
ANR	894309	Argument	reason_buf		894251	0					
ANR	894310	Identifier	reason_buf		894251	0					
ANR	894311	Argument	"""...\\n"""		894251	1					
ANR	894312	PrimaryExpression	"""...\\n"""		894251	0					
ANR	894313	PrimaryExpression	0		894251	1					
ANR	894314	CompoundStatement		11:43:339:339	894251	1					
ANR	894315	ExpressionStatement	setReason ( NULL )	2427:2:52865:52882	894251	0	True				
ANR	894316	CallExpression	setReason ( NULL )		894251	0					
ANR	894317	Callee	setReason		894251	0					
ANR	894318	Identifier	setReason		894251	0					
ANR	894319	ArgumentList	NULL		894251	1					
ANR	894320	Argument	NULL		894251	0					
ANR	894321	Identifier	NULL		894251	0					
ANR	894322	ExpressionStatement	"fsetpos ( file , & filep )"	2428:2:52886:52909	894251	1	True				
ANR	894323	CallExpression	"fsetpos ( file , & filep )"		894251	0					
ANR	894324	Callee	fsetpos		894251	0					
ANR	894325	Identifier	fsetpos		894251	0					
ANR	894326	ArgumentList	file		894251	1					
ANR	894327	Argument	file		894251	0					
ANR	894328	Identifier	file		894251	0					
ANR	894329	Argument	& filep		894251	1					
ANR	894330	UnaryOperationExpression	& filep		894251	0					
ANR	894331	UnaryOperator	&		894251	0					
ANR	894332	Identifier	filep		894251	1					
ANR	894333	ReturnStatement	return 1 ;	2429:2:52913:52921	894251	2	True				
ANR	894334	PrimaryExpression	1		894251	0					
ANR	894335	ExpressionStatement	chomp ( reason_buf )	2432:1:52955:52974	894251	5	True				
ANR	894336	CallExpression	chomp ( reason_buf )		894251	0					
ANR	894337	Callee	chomp		894251	0					
ANR	894338	Identifier	chomp		894251	0					
ANR	894339	ArgumentList	reason_buf		894251	1					
ANR	894340	Argument	reason_buf		894251	0					
ANR	894341	Identifier	reason_buf		894251	0					
ANR	894342	IfStatement	if ( reason_buf [ 0 ] == '\\t' && reason_buf [ 1 ] )		894251	6					
ANR	894343	Condition	reason_buf [ 0 ] == '\\t' && reason_buf [ 1 ]	2436:5:53203:53240	894251	0	True				
ANR	894344	AndExpression	reason_buf [ 0 ] == '\\t' && reason_buf [ 1 ]		894251	0		&&			
ANR	894345	EqualityExpression	reason_buf [ 0 ] == '\\t'		894251	0		==			
ANR	894346	ArrayIndexing	reason_buf [ 0 ]		894251	0					
ANR	894347	Identifier	reason_buf		894251	0					
ANR	894348	PrimaryExpression	0		894251	1					
ANR	894349	PrimaryExpression	'\\t'		894251	1					
ANR	894350	ArrayIndexing	reason_buf [ 1 ]		894251	1					
ANR	894351	Identifier	reason_buf		894251	0					
ANR	894352	PrimaryExpression	1		894251	1					
ANR	894353	CompoundStatement		21:46:722:722	894251	1					
ANR	894354	ExpressionStatement	setReason ( & reason_buf [ 1 ] )	2437:2:53248:53275	894251	0	True				
ANR	894355	CallExpression	setReason ( & reason_buf [ 1 ] )		894251	0					
ANR	894356	Callee	setReason		894251	0					
ANR	894357	Identifier	setReason		894251	0					
ANR	894358	ArgumentList	& reason_buf [ 1 ]		894251	1					
ANR	894359	Argument	& reason_buf [ 1 ]		894251	0					
ANR	894360	UnaryOperationExpression	& reason_buf [ 1 ]		894251	0					
ANR	894361	UnaryOperator	&		894251	0					
ANR	894362	ArrayIndexing	reason_buf [ 1 ]		894251	1					
ANR	894363	Identifier	reason_buf		894251	0					
ANR	894364	PrimaryExpression	1		894251	1					
ANR	894365	ElseStatement	else		894251	0					
ANR	894366	CompoundStatement		23:8:763:763	894251	0					
ANR	894367	ExpressionStatement	setReason ( reason_buf )	2439:2:53289:53312	894251	0	True				
ANR	894368	CallExpression	setReason ( reason_buf )		894251	0					
ANR	894369	Callee	setReason		894251	0					
ANR	894370	Identifier	setReason		894251	0					
ANR	894371	ArgumentList	reason_buf		894251	1					
ANR	894372	Argument	reason_buf		894251	0					
ANR	894373	Identifier	reason_buf		894251	0					
ANR	894374	ReturnStatement	return 1 ;	2441:1:53318:53326	894251	7	True				
ANR	894375	PrimaryExpression	1		894251	0					
ANR	894376	ReturnType	int		894251	1					
ANR	894377	Identifier	JobAbortedEvent :: readEvent		894251	2					
ANR	894378	ParameterList	FILE * file		894251	3					
ANR	894379	Parameter	FILE * file	2415:28:52509:52518	894251	0	True				
ANR	894380	ParameterType	FILE *		894251	0					
ANR	894381	Identifier	file		894251	1					
ANR	894382	CFGEntryNode	ENTRY		894251		True				
ANR	894383	CFGExitNode	EXIT		894251		True				
ANR	894384	Symbol	strcmp		894251						
ANR	894385	Symbol	fscanf		894251						
ANR	894386	Symbol	file		894251						
ANR	894387	Symbol	NULL		894251						
ANR	894388	Symbol	filep		894251						
ANR	894389	Symbol	& filep		894251						
ANR	894390	Symbol	* reason_buf		894251						
ANR	894391	Symbol	EOF		894251						
ANR	894392	Symbol	fgets		894251						
ANR	894393	Symbol	reason_buf		894251						
ANR	894394	Symbol	BUFSIZ		894251						
ANR	894395	Function	JobAbortedEvent :: toClassAd	2444:0:53331:53586							
ANR	894396	FunctionDef	JobAbortedEvent :: toClassAd ()		894395	0					
ANR	894397	CompoundStatement		2446:0:53373:53586	894395	0					
ANR	894398	IdentifierDeclStatement	ClassAd * myad = ULogEvent :: toClassAd ( ) ;	2447:1:53376:53414	894395	0	True				
ANR	894399	IdentifierDecl	* myad = ULogEvent :: toClassAd ( )		894395	0					
ANR	894400	IdentifierDeclType	ClassAd *		894395	0					
ANR	894401	Identifier	myad		894395	1					
ANR	894402	AssignmentExpression	* myad = ULogEvent :: toClassAd ( )		894395	2		=			
ANR	894403	Identifier	myad		894395	0					
ANR	894404	CallExpression	ULogEvent :: toClassAd ( )		894395	1					
ANR	894405	Callee	ULogEvent :: toClassAd		894395	0					
ANR	894406	Identifier	ULogEvent :: toClassAd		894395	0					
ANR	894407	ArgumentList			894395	1					
ANR	894408	IfStatement	if ( ! myad )		894395	1					
ANR	894409	Condition	! myad	2448:5:53421:53425	894395	0	True				
ANR	894410	UnaryOperationExpression	! myad		894395	0					
ANR	894411	UnaryOperator	!		894395	0					
ANR	894412	Identifier	myad		894395	1					
ANR	894413	ReturnStatement	return NULL ;	2448:13:53429:53440	894395	1	True				
ANR	894414	Identifier	NULL		894395	0					
ANR	894415	IfStatement	if ( reason )		894395	2					
ANR	894416	Condition	reason	2450:5:53448:53453	894395	0	True				
ANR	894417	Identifier	reason		894395	0					
ANR	894418	CompoundStatement		6:2:87:100	894395	1					
ANR	894419	IdentifierDeclStatement	MyString buf2 ;	2451:2:53461:53474	894395	0	True				
ANR	894420	IdentifierDecl	buf2		894395	0					
ANR	894421	IdentifierDeclType	MyString		894395	0					
ANR	894422	Identifier	buf2		894395	1					
ANR	894423	ExpressionStatement	"buf2 . sprintf ( ""Reason = \\""%s\\"""" , reason )"	2452:2:53478:53517	894395	1	True				
ANR	894424	CallExpression	"buf2 . sprintf ( ""Reason = \\""%s\\"""" , reason )"		894395	0					
ANR	894425	Callee	buf2 . sprintf		894395	0					
ANR	894426	MemberAccess	buf2 . sprintf		894395	0					
ANR	894427	Identifier	buf2		894395	0					
ANR	894428	Identifier	sprintf		894395	1					
ANR	894429	ArgumentList	"""Reason = \\""%s\\"""""		894395	1					
ANR	894430	Argument	"""Reason = \\""%s\\"""""		894395	0					
ANR	894431	PrimaryExpression	"""Reason = \\""%s\\"""""		894395	0					
ANR	894432	Argument	reason		894395	1					
ANR	894433	Identifier	reason		894395	0					
ANR	894434	IfStatement	if ( ! myad -> Insert ( buf2 . Value ( ) ) )		894395	2					
ANR	894435	Condition	! myad -> Insert ( buf2 . Value ( ) )	2453:6:53525:53551	894395	0	True				
ANR	894436	UnaryOperationExpression	! myad -> Insert ( buf2 . Value ( ) )		894395	0					
ANR	894437	UnaryOperator	!		894395	0					
ANR	894438	CallExpression	myad -> Insert ( buf2 . Value ( ) )		894395	1					
ANR	894439	Callee	myad -> Insert		894395	0					
ANR	894440	PtrMemberAccess	myad -> Insert		894395	0					
ANR	894441	Identifier	myad		894395	0					
ANR	894442	Identifier	Insert		894395	1					
ANR	894443	ArgumentList	buf2 . Value ( )		894395	1					
ANR	894444	Argument	buf2 . Value ( )		894395	0					
ANR	894445	CallExpression	buf2 . Value ( )		894395	0					
ANR	894446	Callee	buf2 . Value		894395	0					
ANR	894447	MemberAccess	buf2 . Value		894395	0					
ANR	894448	Identifier	buf2		894395	0					
ANR	894449	Identifier	Value		894395	1					
ANR	894450	ArgumentList			894395	1					
ANR	894451	ReturnStatement	return NULL ;	2453:36:53555:53566	894395	1	True				
ANR	894452	Identifier	NULL		894395	0					
ANR	894453	ReturnStatement	return myad ;	2456:1:53573:53584	894395	3	True				
ANR	894454	Identifier	myad		894395	0					
ANR	894455	ReturnType	ClassAd *		894395	1					
ANR	894456	Identifier	JobAbortedEvent :: toClassAd		894395	2					
ANR	894457	ParameterList			894395	3					
ANR	894458	CFGEntryNode	ENTRY		894395		True				
ANR	894459	CFGExitNode	EXIT		894395		True				
ANR	894460	Symbol	reason		894395						
ANR	894461	Symbol	buf2		894395						
ANR	894462	Symbol	NULL		894395						
ANR	894463	Symbol	* myad		894395						
ANR	894464	Symbol	myad -> Insert		894395						
ANR	894465	Symbol	myad		894395						
ANR	894466	Symbol	ULogEvent :: toClassAd		894395						
ANR	894467	Symbol	buf2 . Value		894395						
ANR	894468	Function	JobAbortedEvent :: initFromClassAd	2459:0:53589:53823							
ANR	894469	FunctionDef	JobAbortedEvent :: initFromClassAd (ClassAd * ad)		894468	0					
ANR	894470	CompoundStatement		2461:0:53640:53823	894468	0					
ANR	894471	ExpressionStatement	ULogEvent :: initFromClassAd ( ad )	2462:1:53643:53673	894468	0	True				
ANR	894472	CallExpression	ULogEvent :: initFromClassAd ( ad )		894468	0					
ANR	894473	Callee	ULogEvent :: initFromClassAd		894468	0					
ANR	894474	Identifier	ULogEvent :: initFromClassAd		894468	0					
ANR	894475	ArgumentList	ad		894468	1					
ANR	894476	Argument	ad		894468	0					
ANR	894477	Identifier	ad		894468	0					
ANR	894478	IfStatement	if ( ! ad )		894468	1					
ANR	894479	Condition	! ad	2464:5:53681:53683	894468	0	True				
ANR	894480	UnaryOperationExpression	! ad		894468	0					
ANR	894481	UnaryOperator	!		894468	0					
ANR	894482	Identifier	ad		894468	1					
ANR	894483	ReturnStatement	return ;	2464:11:53687:53693	894468	1	True				
ANR	894484	IdentifierDeclStatement	char * multi = NULL ;	2466:1:53697:53715	894468	2	True				
ANR	894485	IdentifierDecl	* multi = NULL		894468	0					
ANR	894486	IdentifierDeclType	char *		894468	0					
ANR	894487	Identifier	multi		894468	1					
ANR	894488	AssignmentExpression	* multi = NULL		894468	2		=			
ANR	894489	Identifier	NULL		894468	0					
ANR	894490	Identifier	NULL		894468	1					
ANR	894491	ExpressionStatement	"ad -> LookupString ( ""Reason"" , & multi )"	2467:1:53718:53752	894468	3	True				
ANR	894492	CallExpression	"ad -> LookupString ( ""Reason"" , & multi )"		894468	0					
ANR	894493	Callee	ad -> LookupString		894468	0					
ANR	894494	PtrMemberAccess	ad -> LookupString		894468	0					
ANR	894495	Identifier	ad		894468	0					
ANR	894496	Identifier	LookupString		894468	1					
ANR	894497	ArgumentList	"""Reason"""		894468	1					
ANR	894498	Argument	"""Reason"""		894468	0					
ANR	894499	PrimaryExpression	"""Reason"""		894468	0					
ANR	894500	Argument	& multi		894468	1					
ANR	894501	UnaryOperationExpression	& multi		894468	0					
ANR	894502	UnaryOperator	&		894468	0					
ANR	894503	Identifier	multi		894468	1					
ANR	894504	IfStatement	if ( multi )		894468	4					
ANR	894505	Condition	multi	2468:5:53759:53763	894468	0	True				
ANR	894506	Identifier	multi		894468	0					
ANR	894507	CompoundStatement		8:13:126:126	894468	1					
ANR	894508	ExpressionStatement	setReason ( multi )	2469:2:53771:53787	894468	0	True				
ANR	894509	CallExpression	setReason ( multi )		894468	0					
ANR	894510	Callee	setReason		894468	0					
ANR	894511	Identifier	setReason		894468	0					
ANR	894512	ArgumentList	multi		894468	1					
ANR	894513	Argument	multi		894468	0					
ANR	894514	Identifier	multi		894468	0					
ANR	894515	ExpressionStatement	free ( multi )	2470:2:53791:53802	894468	1	True				
ANR	894516	CallExpression	free ( multi )		894468	0					
ANR	894517	Callee	free		894468	0					
ANR	894518	Identifier	free		894468	0					
ANR	894519	ArgumentList	multi		894468	1					
ANR	894520	Argument	multi		894468	0					
ANR	894521	Identifier	multi		894468	0					
ANR	894522	ExpressionStatement	multi = NULL	2471:2:53806:53818	894468	2	True				
ANR	894523	AssignmentExpression	multi = NULL		894468	0		=			
ANR	894524	Identifier	multi		894468	0					
ANR	894525	Identifier	NULL		894468	1					
ANR	894526	ReturnType	void		894468	1					
ANR	894527	Identifier	JobAbortedEvent :: initFromClassAd		894468	2					
ANR	894528	ParameterList	ClassAd * ad		894468	3					
ANR	894529	Parameter	ClassAd * ad	2460:33:53627:53637	894468	0	True				
ANR	894530	ParameterType	ClassAd *		894468	0					
ANR	894531	Identifier	ad		894468	1					
ANR	894532	CFGEntryNode	ENTRY		894468		True				
ANR	894533	CFGExitNode	EXIT		894468		True				
ANR	894534	Symbol	& multi		894468						
ANR	894535	Symbol	ad		894468						
ANR	894536	Symbol	NULL		894468						
ANR	894537	Symbol	multi		894468						
ANR	894538	Function	TerminatedEvent :: TerminatedEvent	2476:0:53861:54198							
ANR	894539	FunctionDef	TerminatedEvent :: TerminatedEvent ()		894538	0					
ANR	894540	CompoundStatement		2477:0:53900:54198	894538	0					
ANR	894541	ExpressionStatement	normal = false	2478:1:53903:53917	894538	0	True				
ANR	894542	AssignmentExpression	normal = false		894538	0		=			
ANR	894543	Identifier	normal		894538	0					
ANR	894544	Identifier	false		894538	1					
ANR	894545	ExpressionStatement	core_file = NULL	2479:1:53920:53936	894538	1	True				
ANR	894546	AssignmentExpression	core_file = NULL		894538	0		=			
ANR	894547	Identifier	core_file		894538	0					
ANR	894548	Identifier	NULL		894538	1					
ANR	894549	ExpressionStatement	returnValue = signalNumber = - 1	2480:1:53939:53970	894538	2	True				
ANR	894550	AssignmentExpression	returnValue = signalNumber = - 1		894538	0		=			
ANR	894551	Identifier	returnValue		894538	0					
ANR	894552	AssignmentExpression	signalNumber = - 1		894538	1		=			
ANR	894553	Identifier	signalNumber		894538	0					
ANR	894554	UnaryOperationExpression	- 1		894538	1					
ANR	894555	UnaryOperator	-		894538	0					
ANR	894556	PrimaryExpression	1		894538	1					
ANR	894557	ExpressionStatement	"( void ) memset ( ( void * ) & run_local_rusage , 0 , ( size_t ) sizeof ( run_local_rusage ) )"	2482:1:53974:54047	894538	3	True				
ANR	894558	CastExpression	"( void ) memset ( ( void * ) & run_local_rusage , 0 , ( size_t ) sizeof ( run_local_rusage ) )"		894538	0					
ANR	894559	CastTarget	void		894538	0					
ANR	894560	CallExpression	"memset ( ( void * ) & run_local_rusage , 0 , ( size_t ) sizeof ( run_local_rusage ) )"		894538	1					
ANR	894561	Callee	memset		894538	0					
ANR	894562	Identifier	memset		894538	0					
ANR	894563	ArgumentList	( void * ) & run_local_rusage		894538	1					
ANR	894564	Argument	( void * ) & run_local_rusage		894538	0					
ANR	894565	CastExpression	( void * ) & run_local_rusage		894538	0					
ANR	894566	CastTarget	void *		894538	0					
ANR	894567	UnaryOperationExpression	& run_local_rusage		894538	1					
ANR	894568	UnaryOperator	&		894538	0					
ANR	894569	Identifier	run_local_rusage		894538	1					
ANR	894570	Argument	0		894538	1					
ANR	894571	PrimaryExpression	0		894538	0					
ANR	894572	Argument	( size_t ) sizeof ( run_local_rusage )		894538	2					
ANR	894573	CastExpression	( size_t ) sizeof ( run_local_rusage )		894538	0					
ANR	894574	CastTarget	size_t		894538	0					
ANR	894575	SizeofExpression	sizeof ( run_local_rusage )		894538	1					
ANR	894576	Sizeof	sizeof		894538	0					
ANR	894577	SizeofOperand	run_local_rusage		894538	1					
ANR	894578	ExpressionStatement	run_remote_rusage = total_local_rusage = total_remote_rusage = run_local_rusage	2483:1:54050:54123	894538	4	True				
ANR	894579	AssignmentExpression	run_remote_rusage = total_local_rusage = total_remote_rusage = run_local_rusage		894538	0		=			
ANR	894580	Identifier	run_remote_rusage		894538	0					
ANR	894581	AssignmentExpression	total_local_rusage = total_remote_rusage = run_local_rusage		894538	1		=			
ANR	894582	Identifier	total_local_rusage		894538	0					
ANR	894583	AssignmentExpression	total_remote_rusage = run_local_rusage		894538	1		=			
ANR	894584	Identifier	total_remote_rusage		894538	0					
ANR	894585	Identifier	run_local_rusage		894538	1					
ANR	894586	ExpressionStatement	sent_bytes = recvd_bytes = total_sent_bytes = total_recvd_bytes = 0.0	2485:1:54127:54196	894538	5	True				
ANR	894587	AssignmentExpression	sent_bytes = recvd_bytes = total_sent_bytes = total_recvd_bytes = 0.0		894538	0		=			
ANR	894588	Identifier	sent_bytes		894538	0					
ANR	894589	AssignmentExpression	recvd_bytes = total_sent_bytes = total_recvd_bytes = 0.0		894538	1		=			
ANR	894590	Identifier	recvd_bytes		894538	0					
ANR	894591	AssignmentExpression	total_sent_bytes = total_recvd_bytes = 0.0		894538	1		=			
ANR	894592	Identifier	total_sent_bytes		894538	0					
ANR	894593	AssignmentExpression	total_recvd_bytes = 0.0		894538	1		=			
ANR	894594	Identifier	total_recvd_bytes		894538	0					
ANR	894595	PrimaryExpression	0.0		894538	1					
ANR	894596	Identifier	TerminatedEvent :: TerminatedEvent		894538	1					
ANR	894597	ParameterList			894538	2					
ANR	894598	CFGEntryNode	ENTRY		894538		True				
ANR	894599	CFGExitNode	EXIT		894538		True				
ANR	894600	Symbol	normal		894538						
ANR	894601	Symbol	run_local_rusage		894538						
ANR	894602	Symbol	NULL		894538						
ANR	894603	Symbol	returnValue		894538						
ANR	894604	Symbol	total_sent_bytes		894538						
ANR	894605	Symbol	total_local_rusage		894538						
ANR	894606	Symbol	false		894538						
ANR	894607	Symbol	& run_local_rusage		894538						
ANR	894608	Symbol	signalNumber		894538						
ANR	894609	Symbol	sent_bytes		894538						
ANR	894610	Symbol	total_recvd_bytes		894538						
ANR	894611	Symbol	recvd_bytes		894538						
ANR	894612	Symbol	run_remote_rusage		894538						
ANR	894613	Symbol	total_remote_rusage		894538						
ANR	894614	Symbol	core_file		894538						
ANR	894615	Function	TerminatedEvent :: ~TerminatedEvent	2488:0:54201:54264							
ANR	894616	FunctionDef	TerminatedEvent :: ~TerminatedEvent ()		894615	0					
ANR	894617	CompoundStatement		2489:0:54241:54264	894615	0					
ANR	894618	Statement	delete	2490:1:54244:54249	894615	0	True				
ANR	894619	Statement	[	2490:7:54250:54250	894615	1	True				
ANR	894620	Statement	]	2490:8:54251:54251	894615	2	True				
ANR	894621	ExpressionStatement	core_file	2490:10:54253:54262	894615	3	True				
ANR	894622	Identifier	core_file		894615	0					
ANR	894623	Identifier	TerminatedEvent :: ~TerminatedEvent		894615	1					
ANR	894624	ParameterList			894615	2					
ANR	894625	CFGEntryNode	ENTRY		894615		True				
ANR	894626	CFGExitNode	EXIT		894615		True				
ANR	894627	Function	TerminatedEvent :: setCoreFile	2494:0:54268:54501							
ANR	894628	FunctionDef	TerminatedEvent :: setCoreFile (const char * core_name)		894627	0					
ANR	894629	CompoundStatement		2496:0:54327:54501	894627	0					
ANR	894630	Statement	delete	2497:1:54330:54335	894627	0	True				
ANR	894631	Statement	[	2497:7:54336:54336	894627	1	True				
ANR	894632	Statement	]	2497:8:54337:54337	894627	2	True				
ANR	894633	ExpressionStatement	core_file	2497:10:54339:54348	894627	3	True				
ANR	894634	Identifier	core_file		894627	0					
ANR	894635	ExpressionStatement	core_file = NULL	2498:1:54351:54367	894627	4	True				
ANR	894636	AssignmentExpression	core_file = NULL		894627	0		=			
ANR	894637	Identifier	core_file		894627	0					
ANR	894638	Identifier	NULL		894627	1					
ANR	894639	IfStatement	if ( core_name )		894627	5					
ANR	894640	Condition	core_name	2499:5:54374:54382	894627	0	True				
ANR	894641	Identifier	core_name		894627	0					
ANR	894642	CompoundStatement		4:17:58:58	894627	1					
ANR	894643	ExpressionStatement	core_file = strnewp ( core_name )	2500:2:54390:54422	894627	0	True				
ANR	894644	AssignmentExpression	core_file = strnewp ( core_name )		894627	0		=			
ANR	894645	Identifier	core_file		894627	0					
ANR	894646	CallExpression	strnewp ( core_name )		894627	1					
ANR	894647	Callee	strnewp		894627	0					
ANR	894648	Identifier	strnewp		894627	0					
ANR	894649	ArgumentList	core_name		894627	1					
ANR	894650	Argument	core_name		894627	0					
ANR	894651	Identifier	core_name		894627	0					
ANR	894652	IfStatement	if ( ! core_file )		894627	1					
ANR	894653	Condition	! core_file	2501:6:54430:54439	894627	0	True				
ANR	894654	UnaryOperationExpression	! core_file		894627	0					
ANR	894655	UnaryOperator	!		894627	0					
ANR	894656	Identifier	core_file		894627	1					
ANR	894657	CompoundStatement		6:19:115:115	894627	1					
ANR	894658	ExpressionStatement	"EXCEPT ( ""ERROR: out of memory!\\n"" )"	2502:12:54457:54492	894627	0	True				
ANR	894659	CallExpression	"EXCEPT ( ""ERROR: out of memory!\\n"" )"		894627	0					
ANR	894660	Callee	EXCEPT		894627	0					
ANR	894661	Identifier	EXCEPT		894627	0					
ANR	894662	ArgumentList	"""ERROR: out of memory!\\n"""		894627	1					
ANR	894663	Argument	"""ERROR: out of memory!\\n"""		894627	0					
ANR	894664	PrimaryExpression	"""ERROR: out of memory!\\n"""		894627	0					
ANR	894665	ReturnType	void		894627	1					
ANR	894666	Identifier	TerminatedEvent :: setCoreFile		894627	2					
ANR	894667	ParameterList	const char * core_name		894627	3					
ANR	894668	Parameter	const char * core_name	2495:30:54303:54323	894627	0	True				
ANR	894669	ParameterType	const char *		894627	0					
ANR	894670	Identifier	core_name		894627	1					
ANR	894671	CFGEntryNode	ENTRY		894627		True				
ANR	894672	CFGExitNode	EXIT		894627		True				
ANR	894673	Symbol	NULL		894627						
ANR	894674	Symbol	strnewp		894627						
ANR	894675	Symbol	core_name		894627						
ANR	894676	Symbol	core_file		894627						
ANR	894677	Function	TerminatedEvent :: getCoreFile	2508:0:54505:54575							
ANR	894678	FunctionDef	TerminatedEvent :: getCoreFile ()		894677	0					
ANR	894679	CompoundStatement		2510:0:54554:54575	894677	0					
ANR	894680	ReturnStatement	return core_file ;	2511:1:54557:54573	894677	0	True				
ANR	894681	Identifier	core_file		894677	0					
ANR	894682	ReturnType	const char *		894677	1					
ANR	894683	Identifier	TerminatedEvent :: getCoreFile		894677	2					
ANR	894684	ParameterList			894677	3					
ANR	894685	CFGEntryNode	ENTRY		894677		True				
ANR	894686	CFGExitNode	EXIT		894677		True				
ANR	894687	Symbol	core_file		894677						
ANR	894688	Function	TerminatedEvent :: writeEvent	2514:0:54578:57018							
ANR	894689	FunctionDef	"TerminatedEvent :: writeEvent (FILE * file , const char * header)"		894688	0					
ANR	894690	CompoundStatement		2516:0:54644:57018	894688	0					
ANR	894691	IdentifierDeclStatement	char messagestr [ 512 ] ;	2517:2:54648:54668	894688	0	True				
ANR	894692	IdentifierDecl	messagestr [ 512 ]		894688	0					
ANR	894693	IdentifierDeclType	char [ 512 ]		894688	0					
ANR	894694	Identifier	messagestr		894688	1					
ANR	894695	PrimaryExpression	512		894688	2					
ANR	894696	IdentifierDeclStatement	"ClassAd tmpCl1 , tmpCl2 ;"	2518:2:54672:54694	894688	1	True				
ANR	894697	IdentifierDecl	tmpCl1		894688	0					
ANR	894698	IdentifierDeclType	ClassAd		894688	0					
ANR	894699	Identifier	tmpCl1		894688	1					
ANR	894700	IdentifierDecl	tmpCl2		894688	1					
ANR	894701	IdentifierDeclType	ClassAd		894688	0					
ANR	894702	Identifier	tmpCl2		894688	1					
ANR	894703	IdentifierDeclStatement	"MyString tmp = """" ;"	2520:2:54750:54767	894688	2	True				
ANR	894704	IdentifierDecl	"tmp = """""		894688	0					
ANR	894705	IdentifierDeclType	MyString		894688	0					
ANR	894706	Identifier	tmp		894688	1					
ANR	894707	AssignmentExpression	"tmp = """""		894688	2		=			
ANR	894708	Identifier	tmp		894688	0					
ANR	894709	PrimaryExpression	""""""		894688	1					
ANR	894710	ExpressionStatement	"strcpy ( messagestr , """" )"	2525:2:54882:54904	894688	3	True				
ANR	894711	CallExpression	"strcpy ( messagestr , """" )"		894688	0					
ANR	894712	Callee	strcpy		894688	0					
ANR	894713	Identifier	strcpy		894688	0					
ANR	894714	ArgumentList	messagestr		894688	1					
ANR	894715	Argument	messagestr		894688	0					
ANR	894716	Identifier	messagestr		894688	0					
ANR	894717	Argument	""""""		894688	1					
ANR	894718	PrimaryExpression	""""""		894688	0					
ANR	894719	IdentifierDeclStatement	int retval = 0 ;	2527:1:54908:54920	894688	4	True				
ANR	894720	IdentifierDecl	retval = 0		894688	0					
ANR	894721	IdentifierDeclType	int		894688	0					
ANR	894722	Identifier	retval		894688	1					
ANR	894723	AssignmentExpression	retval = 0		894688	2		=			
ANR	894724	Identifier	retval		894688	0					
ANR	894725	PrimaryExpression	0		894688	1					
ANR	894726	IfStatement	if ( normal )		894688	5					
ANR	894727	Condition	normal	2529:5:54928:54933	894688	0	True				
ANR	894728	Identifier	normal		894688	0					
ANR	894729	CompoundStatement		14:14:292:292	894688	1					
ANR	894730	IfStatement	"if ( fprintf ( file , ""\\t(1) Normal termination (return value %d)\\n\\t"" , returnValue ) < 0 )"		894688	0					
ANR	894731	Condition	"fprintf ( file , ""\\t(1) Normal termination (return value %d)\\n\\t"" , returnValue ) < 0"	2530:6:54945:55029	894688	0	True				
ANR	894732	RelationalExpression	"fprintf ( file , ""\\t(1) Normal termination (return value %d)\\n\\t"" , returnValue ) < 0"		894688	0		<			
ANR	894733	CallExpression	"fprintf ( file , ""\\t(1) Normal termination (return value %d)\\n\\t"" , returnValue )"		894688	0					
ANR	894734	Callee	fprintf		894688	0					
ANR	894735	Identifier	fprintf		894688	0					
ANR	894736	ArgumentList	file		894688	1					
ANR	894737	Argument	file		894688	0					
ANR	894738	Identifier	file		894688	0					
ANR	894739	Argument	"""\\t(1) Normal termination (return value %d)\\n\\t"""		894688	1					
ANR	894740	PrimaryExpression	"""\\t(1) Normal termination (return value %d)\\n\\t"""		894688	0					
ANR	894741	Argument	returnValue		894688	2					
ANR	894742	Identifier	returnValue		894688	0					
ANR	894743	PrimaryExpression	0		894688	1					
ANR	894744	CompoundStatement		16:24:388:388	894688	1					
ANR	894745	ReturnStatement	return 0 ;	2532:3:55038:55046	894688	0	True				
ANR	894746	PrimaryExpression	0		894688	0					
ANR	894747	ExpressionStatement	"sprintf ( messagestr , ""(1) Normal termination (return value %d)"" , returnValue )"	2534:2:55054:55131	894688	1	True				
ANR	894748	CallExpression	"sprintf ( messagestr , ""(1) Normal termination (return value %d)"" , returnValue )"		894688	0					
ANR	894749	Callee	sprintf		894688	0					
ANR	894750	Identifier	sprintf		894688	0					
ANR	894751	ArgumentList	messagestr		894688	1					
ANR	894752	Argument	messagestr		894688	0					
ANR	894753	Identifier	messagestr		894688	0					
ANR	894754	Argument	"""(1) Normal termination (return value %d)"""		894688	1					
ANR	894755	PrimaryExpression	"""(1) Normal termination (return value %d)"""		894688	0					
ANR	894756	Argument	returnValue		894688	2					
ANR	894757	Identifier	returnValue		894688	0					
ANR	894758	ElseStatement	else		894688	0					
ANR	894759	CompoundStatement		21:8:497:497	894688	0					
ANR	894760	IfStatement	"if ( fprintf ( file , ""\\t(0) Abnormal termination (signal %d)\\n"" , signalNumber ) < 0 )"		894688	0					
ANR	894761	Condition	"fprintf ( file , ""\\t(0) Abnormal termination (signal %d)\\n"" , signalNumber ) < 0"	2537:6:55150:55229	894688	0	True				
ANR	894762	RelationalExpression	"fprintf ( file , ""\\t(0) Abnormal termination (signal %d)\\n"" , signalNumber ) < 0"		894688	0		<			
ANR	894763	CallExpression	"fprintf ( file , ""\\t(0) Abnormal termination (signal %d)\\n"" , signalNumber )"		894688	0					
ANR	894764	Callee	fprintf		894688	0					
ANR	894765	Identifier	fprintf		894688	0					
ANR	894766	ArgumentList	file		894688	1					
ANR	894767	Argument	file		894688	0					
ANR	894768	Identifier	file		894688	0					
ANR	894769	Argument	"""\\t(0) Abnormal termination (signal %d)\\n"""		894688	1					
ANR	894770	PrimaryExpression	"""\\t(0) Abnormal termination (signal %d)\\n"""		894688	0					
ANR	894771	Argument	signalNumber		894688	2					
ANR	894772	Identifier	signalNumber		894688	0					
ANR	894773	PrimaryExpression	0		894688	1					
ANR	894774	CompoundStatement		23:25:588:588	894688	1					
ANR	894775	ReturnStatement	return 0 ;	2539:3:55238:55246	894688	0	True				
ANR	894776	PrimaryExpression	0		894688	0					
ANR	894777	ExpressionStatement	"sprintf ( messagestr , ""(0) Abnormal termination (signal %d)"" , signalNumber )"	2542:2:55255:55329	894688	1	True				
ANR	894778	CallExpression	"sprintf ( messagestr , ""(0) Abnormal termination (signal %d)"" , signalNumber )"		894688	0					
ANR	894779	Callee	sprintf		894688	0					
ANR	894780	Identifier	sprintf		894688	0					
ANR	894781	ArgumentList	messagestr		894688	1					
ANR	894782	Argument	messagestr		894688	0					
ANR	894783	Identifier	messagestr		894688	0					
ANR	894784	Argument	"""(0) Abnormal termination (signal %d)"""		894688	1					
ANR	894785	PrimaryExpression	"""(0) Abnormal termination (signal %d)"""		894688	0					
ANR	894786	Argument	signalNumber		894688	2					
ANR	894787	Identifier	signalNumber		894688	0					
ANR	894788	IfStatement	if ( core_file )		894688	2					
ANR	894789	Condition	core_file	2544:6:55338:55346	894688	0	True				
ANR	894790	Identifier	core_file		894688	0					
ANR	894791	CompoundStatement		29:18:705:705	894688	1					
ANR	894792	ExpressionStatement	"retval = fprintf ( file , ""\\t(1) Corefile in: %s\\n\\t"" , core_file )"	2545:3:55355:55428	894688	0	True				
ANR	894793	AssignmentExpression	"retval = fprintf ( file , ""\\t(1) Corefile in: %s\\n\\t"" , core_file )"		894688	0		=			
ANR	894794	Identifier	retval		894688	0					
ANR	894795	CallExpression	"fprintf ( file , ""\\t(1) Corefile in: %s\\n\\t"" , core_file )"		894688	1					
ANR	894796	Callee	fprintf		894688	0					
ANR	894797	Identifier	fprintf		894688	0					
ANR	894798	ArgumentList	file		894688	1					
ANR	894799	Argument	file		894688	0					
ANR	894800	Identifier	file		894688	0					
ANR	894801	Argument	"""\\t(1) Corefile in: %s\\n\\t"""		894688	1					
ANR	894802	PrimaryExpression	"""\\t(1) Corefile in: %s\\n\\t"""		894688	0					
ANR	894803	Argument	core_file		894688	2					
ANR	894804	Identifier	core_file		894688	0					
ANR	894805	ExpressionStatement	"strcat ( messagestr , "" (1) Corefile in: "" )"	2547:3:55433:55473	894688	1	True				
ANR	894806	CallExpression	"strcat ( messagestr , "" (1) Corefile in: "" )"		894688	0					
ANR	894807	Callee	strcat		894688	0					
ANR	894808	Identifier	strcat		894688	0					
ANR	894809	ArgumentList	messagestr		894688	1					
ANR	894810	Argument	messagestr		894688	0					
ANR	894811	Identifier	messagestr		894688	0					
ANR	894812	Argument	""" (1) Corefile in: """		894688	1					
ANR	894813	PrimaryExpression	""" (1) Corefile in: """		894688	0					
ANR	894814	ExpressionStatement	"strcat ( messagestr , core_file )"	2548:3:55478:55507	894688	2	True				
ANR	894815	CallExpression	"strcat ( messagestr , core_file )"		894688	0					
ANR	894816	Callee	strcat		894688	0					
ANR	894817	Identifier	strcat		894688	0					
ANR	894818	ArgumentList	messagestr		894688	1					
ANR	894819	Argument	messagestr		894688	0					
ANR	894820	Identifier	messagestr		894688	0					
ANR	894821	Argument	core_file		894688	1					
ANR	894822	Identifier	core_file		894688	0					
ANR	894823	ElseStatement	else		894688	0					
ANR	894824	CompoundStatement		34:9:873:873	894688	0					
ANR	894825	ExpressionStatement	"retval = fprintf ( file , ""\\t(0) No core file\\n\\t"" )"	2550:3:55523:55573	894688	0	True				
ANR	894826	AssignmentExpression	"retval = fprintf ( file , ""\\t(0) No core file\\n\\t"" )"		894688	0		=			
ANR	894827	Identifier	retval		894688	0					
ANR	894828	CallExpression	"fprintf ( file , ""\\t(0) No core file\\n\\t"" )"		894688	1					
ANR	894829	Callee	fprintf		894688	0					
ANR	894830	Identifier	fprintf		894688	0					
ANR	894831	ArgumentList	file		894688	1					
ANR	894832	Argument	file		894688	0					
ANR	894833	Identifier	file		894688	0					
ANR	894834	Argument	"""\\t(0) No core file\\n\\t"""		894688	1					
ANR	894835	PrimaryExpression	"""\\t(0) No core file\\n\\t"""		894688	0					
ANR	894836	ExpressionStatement	"strcat ( messagestr , "" (0) No core file "" )"	2551:3:55578:55618	894688	1	True				
ANR	894837	CallExpression	"strcat ( messagestr , "" (0) No core file "" )"		894688	0					
ANR	894838	Callee	strcat		894688	0					
ANR	894839	Identifier	strcat		894688	0					
ANR	894840	ArgumentList	messagestr		894688	1					
ANR	894841	Argument	messagestr		894688	0					
ANR	894842	Identifier	messagestr		894688	0					
ANR	894843	Argument	""" (0) No core file """		894688	1					
ANR	894844	PrimaryExpression	""" (0) No core file """		894688	0					
ANR	894845	IfStatement	"if ( ( retval < 0 ) || ( ! writeRusage ( file , run_remote_rusage ) ) || ( fprintf ( file , ""  -  Run Remote Usage\\n\\t"" ) < 0 ) || ( ! writeRusage ( file , run_local_rusage ) ) || ( fprintf ( file , ""  -  Run Local Usage\\n\\t"" ) < 0 ) || ( ! writeRusage ( file , total_remote_rusage ) ) || ( fprintf ( file , ""  -  Total Remote Usage\\n\\t"" ) < 0 ) || ( ! writeRusage ( file , total_local_rusage ) ) || ( fprintf ( file , ""  -  Total Local Usage\\n"" ) < 0 ) )"		894688	6					
ANR	894846	Condition	"( retval < 0 ) || ( ! writeRusage ( file , run_remote_rusage ) ) || ( fprintf ( file , ""  -  Run Remote Usage\\n\\t"" ) < 0 ) || ( ! writeRusage ( file , run_local_rusage ) ) || ( fprintf ( file , ""  -  Run Local Usage\\n\\t"" ) < 0 ) || ( ! writeRusage ( file , total_remote_rusage ) ) || ( fprintf ( file , ""  -  Total Remote Usage\\n\\t"" ) < 0 ) || ( ! writeRusage ( file , total_local_rusage ) ) || ( fprintf ( file , ""  -  Total Local Usage\\n"" ) < 0 )"	2555:5:55633:56073	894688	0	True				
ANR	894847	OrExpression	"( retval < 0 ) || ( ! writeRusage ( file , run_remote_rusage ) ) || ( fprintf ( file , ""  -  Run Remote Usage\\n\\t"" ) < 0 ) || ( ! writeRusage ( file , run_local_rusage ) ) || ( fprintf ( file , ""  -  Run Local Usage\\n\\t"" ) < 0 ) || ( ! writeRusage ( file , total_remote_rusage ) ) || ( fprintf ( file , ""  -  Total Remote Usage\\n\\t"" ) < 0 ) || ( ! writeRusage ( file , total_local_rusage ) ) || ( fprintf ( file , ""  -  Total Local Usage\\n"" ) < 0 )"		894688	0		||			
ANR	894848	RelationalExpression	retval < 0		894688	0		<			
ANR	894849	Identifier	retval		894688	0					
ANR	894850	PrimaryExpression	0		894688	1					
ANR	894851	OrExpression	"( ! writeRusage ( file , run_remote_rusage ) ) || ( fprintf ( file , ""  -  Run Remote Usage\\n\\t"" ) < 0 ) || ( ! writeRusage ( file , run_local_rusage ) ) || ( fprintf ( file , ""  -  Run Local Usage\\n\\t"" ) < 0 ) || ( ! writeRusage ( file , total_remote_rusage ) ) || ( fprintf ( file , ""  -  Total Remote Usage\\n\\t"" ) < 0 ) || ( ! writeRusage ( file , total_local_rusage ) ) || ( fprintf ( file , ""  -  Total Local Usage\\n"" ) < 0 )"		894688	1		||			
ANR	894852	UnaryOperationExpression	"! writeRusage ( file , run_remote_rusage )"		894688	0					
ANR	894853	UnaryOperator	!		894688	0					
ANR	894854	CallExpression	"writeRusage ( file , run_remote_rusage )"		894688	1					
ANR	894855	Callee	writeRusage		894688	0					
ANR	894856	Identifier	writeRusage		894688	0					
ANR	894857	ArgumentList	file		894688	1					
ANR	894858	Argument	file		894688	0					
ANR	894859	Identifier	file		894688	0					
ANR	894860	Argument	run_remote_rusage		894688	1					
ANR	894861	Identifier	run_remote_rusage		894688	0					
ANR	894862	OrExpression	"( fprintf ( file , ""  -  Run Remote Usage\\n\\t"" ) < 0 ) || ( ! writeRusage ( file , run_local_rusage ) ) || ( fprintf ( file , ""  -  Run Local Usage\\n\\t"" ) < 0 ) || ( ! writeRusage ( file , total_remote_rusage ) ) || ( fprintf ( file , ""  -  Total Remote Usage\\n\\t"" ) < 0 ) || ( ! writeRusage ( file , total_local_rusage ) ) || ( fprintf ( file , ""  -  Total Local Usage\\n"" ) < 0 )"		894688	1		||			
ANR	894863	RelationalExpression	"fprintf ( file , ""  -  Run Remote Usage\\n\\t"" ) < 0"		894688	0		<			
ANR	894864	CallExpression	"fprintf ( file , ""  -  Run Remote Usage\\n\\t"" )"		894688	0					
ANR	894865	Callee	fprintf		894688	0					
ANR	894866	Identifier	fprintf		894688	0					
ANR	894867	ArgumentList	file		894688	1					
ANR	894868	Argument	file		894688	0					
ANR	894869	Identifier	file		894688	0					
ANR	894870	Argument	"""  -  Run Remote Usage\\n\\t"""		894688	1					
ANR	894871	PrimaryExpression	"""  -  Run Remote Usage\\n\\t"""		894688	0					
ANR	894872	PrimaryExpression	0		894688	1					
ANR	894873	OrExpression	"( ! writeRusage ( file , run_local_rusage ) ) || ( fprintf ( file , ""  -  Run Local Usage\\n\\t"" ) < 0 ) || ( ! writeRusage ( file , total_remote_rusage ) ) || ( fprintf ( file , ""  -  Total Remote Usage\\n\\t"" ) < 0 ) || ( ! writeRusage ( file , total_local_rusage ) ) || ( fprintf ( file , ""  -  Total Local Usage\\n"" ) < 0 )"		894688	1		||			
ANR	894874	UnaryOperationExpression	"! writeRusage ( file , run_local_rusage )"		894688	0					
ANR	894875	UnaryOperator	!		894688	0					
ANR	894876	CallExpression	"writeRusage ( file , run_local_rusage )"		894688	1					
ANR	894877	Callee	writeRusage		894688	0					
ANR	894878	Identifier	writeRusage		894688	0					
ANR	894879	ArgumentList	file		894688	1					
ANR	894880	Argument	file		894688	0					
ANR	894881	Identifier	file		894688	0					
ANR	894882	Argument	run_local_rusage		894688	1					
ANR	894883	Identifier	run_local_rusage		894688	0					
ANR	894884	OrExpression	"( fprintf ( file , ""  -  Run Local Usage\\n\\t"" ) < 0 ) || ( ! writeRusage ( file , total_remote_rusage ) ) || ( fprintf ( file , ""  -  Total Remote Usage\\n\\t"" ) < 0 ) || ( ! writeRusage ( file , total_local_rusage ) ) || ( fprintf ( file , ""  -  Total Local Usage\\n"" ) < 0 )"		894688	1		||			
ANR	894885	RelationalExpression	"fprintf ( file , ""  -  Run Local Usage\\n\\t"" ) < 0"		894688	0		<			
ANR	894886	CallExpression	"fprintf ( file , ""  -  Run Local Usage\\n\\t"" )"		894688	0					
ANR	894887	Callee	fprintf		894688	0					
ANR	894888	Identifier	fprintf		894688	0					
ANR	894889	ArgumentList	file		894688	1					
ANR	894890	Argument	file		894688	0					
ANR	894891	Identifier	file		894688	0					
ANR	894892	Argument	"""  -  Run Local Usage\\n\\t"""		894688	1					
ANR	894893	PrimaryExpression	"""  -  Run Local Usage\\n\\t"""		894688	0					
ANR	894894	PrimaryExpression	0		894688	1					
ANR	894895	OrExpression	"( ! writeRusage ( file , total_remote_rusage ) ) || ( fprintf ( file , ""  -  Total Remote Usage\\n\\t"" ) < 0 ) || ( ! writeRusage ( file , total_local_rusage ) ) || ( fprintf ( file , ""  -  Total Local Usage\\n"" ) < 0 )"		894688	1		||			
ANR	894896	UnaryOperationExpression	"! writeRusage ( file , total_remote_rusage )"		894688	0					
ANR	894897	UnaryOperator	!		894688	0					
ANR	894898	CallExpression	"writeRusage ( file , total_remote_rusage )"		894688	1					
ANR	894899	Callee	writeRusage		894688	0					
ANR	894900	Identifier	writeRusage		894688	0					
ANR	894901	ArgumentList	file		894688	1					
ANR	894902	Argument	file		894688	0					
ANR	894903	Identifier	file		894688	0					
ANR	894904	Argument	total_remote_rusage		894688	1					
ANR	894905	Identifier	total_remote_rusage		894688	0					
ANR	894906	OrExpression	"( fprintf ( file , ""  -  Total Remote Usage\\n\\t"" ) < 0 ) || ( ! writeRusage ( file , total_local_rusage ) ) || ( fprintf ( file , ""  -  Total Local Usage\\n"" ) < 0 )"		894688	1		||			
ANR	894907	RelationalExpression	"fprintf ( file , ""  -  Total Remote Usage\\n\\t"" ) < 0"		894688	0		<			
ANR	894908	CallExpression	"fprintf ( file , ""  -  Total Remote Usage\\n\\t"" )"		894688	0					
ANR	894909	Callee	fprintf		894688	0					
ANR	894910	Identifier	fprintf		894688	0					
ANR	894911	ArgumentList	file		894688	1					
ANR	894912	Argument	file		894688	0					
ANR	894913	Identifier	file		894688	0					
ANR	894914	Argument	"""  -  Total Remote Usage\\n\\t"""		894688	1					
ANR	894915	PrimaryExpression	"""  -  Total Remote Usage\\n\\t"""		894688	0					
ANR	894916	PrimaryExpression	0		894688	1					
ANR	894917	OrExpression	"( ! writeRusage ( file , total_local_rusage ) ) || ( fprintf ( file , ""  -  Total Local Usage\\n"" ) < 0 )"		894688	1		||			
ANR	894918	UnaryOperationExpression	"! writeRusage ( file , total_local_rusage )"		894688	0					
ANR	894919	UnaryOperator	!		894688	0					
ANR	894920	CallExpression	"writeRusage ( file , total_local_rusage )"		894688	1					
ANR	894921	Callee	writeRusage		894688	0					
ANR	894922	Identifier	writeRusage		894688	0					
ANR	894923	ArgumentList	file		894688	1					
ANR	894924	Argument	file		894688	0					
ANR	894925	Identifier	file		894688	0					
ANR	894926	Argument	total_local_rusage		894688	1					
ANR	894927	Identifier	total_local_rusage		894688	0					
ANR	894928	RelationalExpression	"fprintf ( file , ""  -  Total Local Usage\\n"" ) < 0"		894688	1		<			
ANR	894929	CallExpression	"fprintf ( file , ""  -  Total Local Usage\\n"" )"		894688	0					
ANR	894930	Callee	fprintf		894688	0					
ANR	894931	Identifier	fprintf		894688	0					
ANR	894932	ArgumentList	file		894688	1					
ANR	894933	Argument	file		894688	0					
ANR	894934	Identifier	file		894688	0					
ANR	894935	Argument	"""  -  Total Local Usage\\n"""		894688	1					
ANR	894936	PrimaryExpression	"""  -  Total Local Usage\\n"""		894688	0					
ANR	894937	PrimaryExpression	0		894688	1					
ANR	894938	ReturnStatement	return 0 ;	2564:2:56078:56086	894688	1	True				
ANR	894939	PrimaryExpression	0		894688	0					
ANR	894940	IfStatement	"if ( fprintf ( file , ""\\t%.0f  -  Run Bytes Sent By %s\\n"" , sent_bytes , header ) < 0 || fprintf ( file , ""\\t%.0f  -  Run Bytes Received By %s\\n"" , recvd_bytes , header ) < 0 || fprintf ( file , ""\\t%.0f  -  Total Bytes Sent By %s\\n"" , total_sent_bytes , header ) < 0 || fprintf ( file , ""\\t%.0f  -  Total Bytes Received By %s\\n"" , total_recvd_bytes , header ) < 0 )"		894688	7					
ANR	894941	Condition	"fprintf ( file , ""\\t%.0f  -  Run Bytes Sent By %s\\n"" , sent_bytes , header ) < 0 || fprintf ( file , ""\\t%.0f  -  Run Bytes Received By %s\\n"" , recvd_bytes , header ) < 0 || fprintf ( file , ""\\t%.0f  -  Total Bytes Sent By %s\\n"" , total_sent_bytes , header ) < 0 || fprintf ( file , ""\\t%.0f  -  Total Bytes Received By %s\\n"" , total_recvd_bytes , header ) < 0"	2567:5:56095:56450	894688	0	True				
ANR	894942	OrExpression	"fprintf ( file , ""\\t%.0f  -  Run Bytes Sent By %s\\n"" , sent_bytes , header ) < 0 || fprintf ( file , ""\\t%.0f  -  Run Bytes Received By %s\\n"" , recvd_bytes , header ) < 0 || fprintf ( file , ""\\t%.0f  -  Total Bytes Sent By %s\\n"" , total_sent_bytes , header ) < 0 || fprintf ( file , ""\\t%.0f  -  Total Bytes Received By %s\\n"" , total_recvd_bytes , header ) < 0"		894688	0		||			
ANR	894943	RelationalExpression	"fprintf ( file , ""\\t%.0f  -  Run Bytes Sent By %s\\n"" , sent_bytes , header ) < 0"		894688	0		<			
ANR	894944	CallExpression	"fprintf ( file , ""\\t%.0f  -  Run Bytes Sent By %s\\n"" , sent_bytes , header )"		894688	0					
ANR	894945	Callee	fprintf		894688	0					
ANR	894946	Identifier	fprintf		894688	0					
ANR	894947	ArgumentList	file		894688	1					
ANR	894948	Argument	file		894688	0					
ANR	894949	Identifier	file		894688	0					
ANR	894950	Argument	"""\\t%.0f  -  Run Bytes Sent By %s\\n"""		894688	1					
ANR	894951	PrimaryExpression	"""\\t%.0f  -  Run Bytes Sent By %s\\n"""		894688	0					
ANR	894952	Argument	sent_bytes		894688	2					
ANR	894953	Identifier	sent_bytes		894688	0					
ANR	894954	Argument	header		894688	3					
ANR	894955	Identifier	header		894688	0					
ANR	894956	PrimaryExpression	0		894688	1					
ANR	894957	OrExpression	"fprintf ( file , ""\\t%.0f  -  Run Bytes Received By %s\\n"" , recvd_bytes , header ) < 0 || fprintf ( file , ""\\t%.0f  -  Total Bytes Sent By %s\\n"" , total_sent_bytes , header ) < 0 || fprintf ( file , ""\\t%.0f  -  Total Bytes Received By %s\\n"" , total_recvd_bytes , header ) < 0"		894688	1		||			
ANR	894958	RelationalExpression	"fprintf ( file , ""\\t%.0f  -  Run Bytes Received By %s\\n"" , recvd_bytes , header ) < 0"		894688	0		<			
ANR	894959	CallExpression	"fprintf ( file , ""\\t%.0f  -  Run Bytes Received By %s\\n"" , recvd_bytes , header )"		894688	0					
ANR	894960	Callee	fprintf		894688	0					
ANR	894961	Identifier	fprintf		894688	0					
ANR	894962	ArgumentList	file		894688	1					
ANR	894963	Argument	file		894688	0					
ANR	894964	Identifier	file		894688	0					
ANR	894965	Argument	"""\\t%.0f  -  Run Bytes Received By %s\\n"""		894688	1					
ANR	894966	PrimaryExpression	"""\\t%.0f  -  Run Bytes Received By %s\\n"""		894688	0					
ANR	894967	Argument	recvd_bytes		894688	2					
ANR	894968	Identifier	recvd_bytes		894688	0					
ANR	894969	Argument	header		894688	3					
ANR	894970	Identifier	header		894688	0					
ANR	894971	PrimaryExpression	0		894688	1					
ANR	894972	OrExpression	"fprintf ( file , ""\\t%.0f  -  Total Bytes Sent By %s\\n"" , total_sent_bytes , header ) < 0 || fprintf ( file , ""\\t%.0f  -  Total Bytes Received By %s\\n"" , total_recvd_bytes , header ) < 0"		894688	1		||			
ANR	894973	RelationalExpression	"fprintf ( file , ""\\t%.0f  -  Total Bytes Sent By %s\\n"" , total_sent_bytes , header ) < 0"		894688	0		<			
ANR	894974	CallExpression	"fprintf ( file , ""\\t%.0f  -  Total Bytes Sent By %s\\n"" , total_sent_bytes , header )"		894688	0					
ANR	894975	Callee	fprintf		894688	0					
ANR	894976	Identifier	fprintf		894688	0					
ANR	894977	ArgumentList	file		894688	1					
ANR	894978	Argument	file		894688	0					
ANR	894979	Identifier	file		894688	0					
ANR	894980	Argument	"""\\t%.0f  -  Total Bytes Sent By %s\\n"""		894688	1					
ANR	894981	PrimaryExpression	"""\\t%.0f  -  Total Bytes Sent By %s\\n"""		894688	0					
ANR	894982	Argument	total_sent_bytes		894688	2					
ANR	894983	Identifier	total_sent_bytes		894688	0					
ANR	894984	Argument	header		894688	3					
ANR	894985	Identifier	header		894688	0					
ANR	894986	PrimaryExpression	0		894688	1					
ANR	894987	RelationalExpression	"fprintf ( file , ""\\t%.0f  -  Total Bytes Received By %s\\n"" , total_recvd_bytes , header ) < 0"		894688	1		<			
ANR	894988	CallExpression	"fprintf ( file , ""\\t%.0f  -  Total Bytes Received By %s\\n"" , total_recvd_bytes , header )"		894688	0					
ANR	894989	Callee	fprintf		894688	0					
ANR	894990	Identifier	fprintf		894688	0					
ANR	894991	ArgumentList	file		894688	1					
ANR	894992	Argument	file		894688	0					
ANR	894993	Identifier	file		894688	0					
ANR	894994	Argument	"""\\t%.0f  -  Total Bytes Received By %s\\n"""		894688	1					
ANR	894995	PrimaryExpression	"""\\t%.0f  -  Total Bytes Received By %s\\n"""		894688	0					
ANR	894996	Argument	total_recvd_bytes		894688	2					
ANR	894997	Identifier	total_recvd_bytes		894688	0					
ANR	894998	Argument	header		894688	3					
ANR	894999	Identifier	header		894688	0					
ANR	895000	PrimaryExpression	0		894688	1					
ANR	895001	ReturnStatement	return 1 ;	2575:2:56455:56463	894688	1	True				
ANR	895002	PrimaryExpression	1		894688	0					
ANR	895003	ExpressionStatement	scheddname = getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )	2577:1:56497:56549	894688	8	True				
ANR	895004	AssignmentExpression	scheddname = getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )		894688	0		=			
ANR	895005	Identifier	scheddname		894688	0					
ANR	895006	CallExpression	getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )		894688	1					
ANR	895007	Callee	getenv		894688	0					
ANR	895008	Identifier	getenv		894688	0					
ANR	895009	ArgumentList	EnvGetName ( ENV_SCHEDD_NAME )		894688	1					
ANR	895010	Argument	EnvGetName ( ENV_SCHEDD_NAME )		894688	0					
ANR	895011	CallExpression	EnvGetName ( ENV_SCHEDD_NAME )		894688	0					
ANR	895012	Callee	EnvGetName		894688	0					
ANR	895013	Identifier	EnvGetName		894688	0					
ANR	895014	ArgumentList	ENV_SCHEDD_NAME		894688	1					
ANR	895015	Argument	ENV_SCHEDD_NAME		894688	0					
ANR	895016	Identifier	ENV_SCHEDD_NAME		894688	0					
ANR	895017	ExpressionStatement	"tmpCl1 . Assign ( ""endmessage"" , messagestr )"	2579:1:56553:56592	894688	9	True				
ANR	895018	CallExpression	"tmpCl1 . Assign ( ""endmessage"" , messagestr )"		894688	0					
ANR	895019	Callee	tmpCl1 . Assign		894688	0					
ANR	895020	MemberAccess	tmpCl1 . Assign		894688	0					
ANR	895021	Identifier	tmpCl1		894688	0					
ANR	895022	Identifier	Assign		894688	1					
ANR	895023	ArgumentList	"""endmessage"""		894688	1					
ANR	895024	Argument	"""endmessage"""		894688	0					
ANR	895025	PrimaryExpression	"""endmessage"""		894688	0					
ANR	895026	Argument	messagestr		894688	1					
ANR	895027	Identifier	messagestr		894688	0					
ANR	895028	ExpressionStatement	"tmpCl1 . Assign ( ""runbytessent"" , sent_bytes )"	2580:1:56595:56636	894688	10	True				
ANR	895029	CallExpression	"tmpCl1 . Assign ( ""runbytessent"" , sent_bytes )"		894688	0					
ANR	895030	Callee	tmpCl1 . Assign		894688	0					
ANR	895031	MemberAccess	tmpCl1 . Assign		894688	0					
ANR	895032	Identifier	tmpCl1		894688	0					
ANR	895033	Identifier	Assign		894688	1					
ANR	895034	ArgumentList	"""runbytessent"""		894688	1					
ANR	895035	Argument	"""runbytessent"""		894688	0					
ANR	895036	PrimaryExpression	"""runbytessent"""		894688	0					
ANR	895037	Argument	sent_bytes		894688	1					
ANR	895038	Identifier	sent_bytes		894688	0					
ANR	895039	ExpressionStatement	"tmpCl1 . Assign ( ""runbytesreceived"" , recvd_bytes )"	2581:1:56639:56685	894688	11	True				
ANR	895040	CallExpression	"tmpCl1 . Assign ( ""runbytesreceived"" , recvd_bytes )"		894688	0					
ANR	895041	Callee	tmpCl1 . Assign		894688	0					
ANR	895042	MemberAccess	tmpCl1 . Assign		894688	0					
ANR	895043	Identifier	tmpCl1		894688	0					
ANR	895044	Identifier	Assign		894688	1					
ANR	895045	ArgumentList	"""runbytesreceived"""		894688	1					
ANR	895046	Argument	"""runbytesreceived"""		894688	0					
ANR	895047	PrimaryExpression	"""runbytesreceived"""		894688	0					
ANR	895048	Argument	recvd_bytes		894688	1					
ANR	895049	Identifier	recvd_bytes		894688	0					
ANR	895050	ExpressionStatement	insertCommonIdentifiers ( tmpCl2 )	2584:1:56737:56768	894688	12	True				
ANR	895051	CallExpression	insertCommonIdentifiers ( tmpCl2 )		894688	0					
ANR	895052	Callee	insertCommonIdentifiers		894688	0					
ANR	895053	Identifier	insertCommonIdentifiers		894688	0					
ANR	895054	ArgumentList	tmpCl2		894688	1					
ANR	895055	Argument	tmpCl2		894688	0					
ANR	895056	Identifier	tmpCl2		894688	0					
ANR	895057	ExpressionStatement	"tmpCl2 . Assign ( ""endts"" , ( int ) eventclock )"	2586:1:56772:56811	894688	13	True				
ANR	895058	CallExpression	"tmpCl2 . Assign ( ""endts"" , ( int ) eventclock )"		894688	0					
ANR	895059	Callee	tmpCl2 . Assign		894688	0					
ANR	895060	MemberAccess	tmpCl2 . Assign		894688	0					
ANR	895061	Identifier	tmpCl2		894688	0					
ANR	895062	Identifier	Assign		894688	1					
ANR	895063	ArgumentList	"""endts"""		894688	1					
ANR	895064	Argument	"""endts"""		894688	0					
ANR	895065	PrimaryExpression	"""endts"""		894688	0					
ANR	895066	Argument	( int ) eventclock		894688	1					
ANR	895067	CastExpression	( int ) eventclock		894688	0					
ANR	895068	CastTarget	int		894688	0					
ANR	895069	Identifier	eventclock		894688	1					
ANR	895070	IfStatement	if ( FILEObj )		894688	14					
ANR	895071	Condition	FILEObj	2588:5:56819:56825	894688	0	True				
ANR	895072	Identifier	FILEObj		894688	0					
ANR	895073	CompoundStatement		73:14:2183:2183	894688	1					
ANR	895074	IfStatement	"if ( FILEObj -> file_updateEvent ( ""Runs"" , & tmpCl1 , & tmpCl2 ) == QUILL_FAILURE )"		894688	0					
ANR	895075	Condition	"FILEObj -> file_updateEvent ( ""Runs"" , & tmpCl1 , & tmpCl2 ) == QUILL_FAILURE"	2589:6:56836:56903	894688	0	True				
ANR	895076	EqualityExpression	"FILEObj -> file_updateEvent ( ""Runs"" , & tmpCl1 , & tmpCl2 ) == QUILL_FAILURE"		894688	0		==			
ANR	895077	CallExpression	"FILEObj -> file_updateEvent ( ""Runs"" , & tmpCl1 , & tmpCl2 )"		894688	0					
ANR	895078	Callee	FILEObj -> file_updateEvent		894688	0					
ANR	895079	PtrMemberAccess	FILEObj -> file_updateEvent		894688	0					
ANR	895080	Identifier	FILEObj		894688	0					
ANR	895081	Identifier	file_updateEvent		894688	1					
ANR	895082	ArgumentList	"""Runs"""		894688	1					
ANR	895083	Argument	"""Runs"""		894688	0					
ANR	895084	PrimaryExpression	"""Runs"""		894688	0					
ANR	895085	Argument	& tmpCl1		894688	1					
ANR	895086	UnaryOperationExpression	& tmpCl1		894688	0					
ANR	895087	UnaryOperator	&		894688	0					
ANR	895088	Identifier	tmpCl1		894688	1					
ANR	895089	Argument	& tmpCl2		894688	2					
ANR	895090	UnaryOperationExpression	& tmpCl2		894688	0					
ANR	895091	UnaryOperator	&		894688	0					
ANR	895092	Identifier	tmpCl2		894688	1					
ANR	895093	Identifier	QUILL_FAILURE		894688	1					
ANR	895094	CompoundStatement		74:76:2261:2261	894688	1					
ANR	895095	ExpressionStatement	"dprintf ( D_ALWAYS , ""Logging Event 3--- Error\\n"" )"	2590:3:56911:56958	894688	0	True				
ANR	895096	CallExpression	"dprintf ( D_ALWAYS , ""Logging Event 3--- Error\\n"" )"		894688	0					
ANR	895097	Callee	dprintf		894688	0					
ANR	895098	Identifier	dprintf		894688	0					
ANR	895099	ArgumentList	D_ALWAYS		894688	1					
ANR	895100	Argument	D_ALWAYS		894688	0					
ANR	895101	Identifier	D_ALWAYS		894688	0					
ANR	895102	Argument	"""Logging Event 3--- Error\\n"""		894688	1					
ANR	895103	PrimaryExpression	"""Logging Event 3--- Error\\n"""		894688	0					
ANR	895104	ReturnStatement	return 0 ;	2591:3:56963:56971	894688	1	True				
ANR	895105	PrimaryExpression	0		894688	0					
ANR	895106	ReturnStatement	return 1 ;	2595:1:57008:57016	894688	15	True				
ANR	895107	PrimaryExpression	1		894688	0					
ANR	895108	ReturnType	int		894688	1					
ANR	895109	Identifier	TerminatedEvent :: writeEvent		894688	2					
ANR	895110	ParameterList	"FILE * file , const char * header"		894688	3					
ANR	895111	Parameter	FILE * file	2515:29:54611:54620	894688	0	True				
ANR	895112	ParameterType	FILE *		894688	0					
ANR	895113	Identifier	file		894688	1					
ANR	895114	Parameter	const char * header	2515:41:54623:54640	894688	1	True				
ANR	895115	ParameterType	const char *		894688	0					
ANR	895116	Identifier	header		894688	1					
ANR	895117	CFGEntryNode	ENTRY		894688		True				
ANR	895118	CFGExitNode	EXIT		894688		True				
ANR	895119	Symbol	run_local_rusage		894688						
ANR	895120	Symbol	returnValue		894688						
ANR	895121	Symbol	scheddname		894688						
ANR	895122	Symbol	EnvGetName		894688						
ANR	895123	Symbol	ENV_SCHEDD_NAME		894688						
ANR	895124	Symbol	QUILL_FAILURE		894688						
ANR	895125	Symbol	FILEObj		894688						
ANR	895126	Symbol	sent_bytes		894688						
ANR	895127	Symbol	* FILEObj		894688						
ANR	895128	Symbol	& tmpCl1		894688						
ANR	895129	Symbol	file		894688						
ANR	895130	Symbol	eventclock		894688						
ANR	895131	Symbol	tmp		894688						
ANR	895132	Symbol	recvd_bytes		894688						
ANR	895133	Symbol	& tmpCl2		894688						
ANR	895134	Symbol	run_remote_rusage		894688						
ANR	895135	Symbol	getenv		894688						
ANR	895136	Symbol	normal		894688						
ANR	895137	Symbol	total_sent_bytes		894688						
ANR	895138	Symbol	total_local_rusage		894688						
ANR	895139	Symbol	writeRusage		894688						
ANR	895140	Symbol	D_ALWAYS		894688						
ANR	895141	Symbol	fprintf		894688						
ANR	895142	Symbol	retval		894688						
ANR	895143	Symbol	signalNumber		894688						
ANR	895144	Symbol	FILEObj -> file_updateEvent		894688						
ANR	895145	Symbol	messagestr		894688						
ANR	895146	Symbol	total_recvd_bytes		894688						
ANR	895147	Symbol	tmpCl2		894688						
ANR	895148	Symbol	tmpCl1		894688						
ANR	895149	Symbol	header		894688						
ANR	895150	Symbol	total_remote_rusage		894688						
ANR	895151	Symbol	core_file		894688						
ANR	895152	Function	TerminatedEvent :: readEvent	2599:0:57022:58900							
ANR	895153	FunctionDef	"TerminatedEvent :: readEvent (FILE * file , const char * header)"		895152	0					
ANR	895154	CompoundStatement		2601:0:57087:58900	895152	0					
ANR	895155	IdentifierDeclStatement	char buffer [ 128 ] ;	2602:1:57090:57106	895152	0	True				
ANR	895156	IdentifierDecl	buffer [ 128 ]		895152	0					
ANR	895157	IdentifierDeclType	char [ 128 ]		895152	0					
ANR	895158	Identifier	buffer		895152	1					
ANR	895159	PrimaryExpression	128		895152	2					
ANR	895160	IdentifierDeclStatement	int normalTerm ;	2603:1:57109:57124	895152	1	True				
ANR	895161	IdentifierDecl	normalTerm		895152	0					
ANR	895162	IdentifierDeclType	int		895152	0					
ANR	895163	Identifier	normalTerm		895152	1					
ANR	895164	IdentifierDeclStatement	int gotCore ;	2604:1:57127:57139	895152	2	True				
ANR	895165	IdentifierDecl	gotCore		895152	0					
ANR	895166	IdentifierDeclType	int		895152	0					
ANR	895167	Identifier	gotCore		895152	1					
ANR	895168	IdentifierDeclStatement	int retval ;	2605:1:57142:57153	895152	3	True				
ANR	895169	IdentifierDecl	retval		895152	0					
ANR	895170	IdentifierDeclType	int		895152	0					
ANR	895171	Identifier	retval		895152	1					
ANR	895172	IfStatement	"if ( ( retval = fscanf ( file , ""\\n\\t(%d) "" , & normalTerm ) ) != 1 )"		895152	4					
ANR	895173	Condition	"( retval = fscanf ( file , ""\\n\\t(%d) "" , & normalTerm ) ) != 1"	2607:5:57161:57215	895152	0	True				
ANR	895174	EqualityExpression	"( retval = fscanf ( file , ""\\n\\t(%d) "" , & normalTerm ) ) != 1"		895152	0		!=			
ANR	895175	AssignmentExpression	"retval = fscanf ( file , ""\\n\\t(%d) "" , & normalTerm )"		895152	0		=			
ANR	895176	Identifier	retval		895152	0					
ANR	895177	CallExpression	"fscanf ( file , ""\\n\\t(%d) "" , & normalTerm )"		895152	1					
ANR	895178	Callee	fscanf		895152	0					
ANR	895179	Identifier	fscanf		895152	0					
ANR	895180	ArgumentList	file		895152	1					
ANR	895181	Argument	file		895152	0					
ANR	895182	Identifier	file		895152	0					
ANR	895183	Argument	"""\\n\\t(%d) """		895152	1					
ANR	895184	PrimaryExpression	"""\\n\\t(%d) """		895152	0					
ANR	895185	Argument	& normalTerm		895152	2					
ANR	895186	UnaryOperationExpression	& normalTerm		895152	0					
ANR	895187	UnaryOperator	&		895152	0					
ANR	895188	Identifier	normalTerm		895152	1					
ANR	895189	PrimaryExpression	1		895152	1					
ANR	895190	CompoundStatement		7:63:131:131	895152	1					
ANR	895191	ReturnStatement	return 0 ;	2608:2:57223:57231	895152	0	True				
ANR	895192	PrimaryExpression	0		895152	0					
ANR	895193	IfStatement	if ( normalTerm )		895152	5					
ANR	895194	Condition	normalTerm	2611:5:57242:57251	895152	0	True				
ANR	895195	Identifier	normalTerm		895152	0					
ANR	895196	CompoundStatement		11:18:167:167	895152	1					
ANR	895197	ExpressionStatement	normal = true	2612:2:57259:57272	895152	0	True				
ANR	895198	AssignmentExpression	normal = true		895152	0		=			
ANR	895199	Identifier	normal		895152	0					
ANR	895200	Identifier	true		895152	1					
ANR	895201	IfStatement	"if ( fscanf ( file , ""Normal termination (return value %d)"" , & returnValue ) != 1 )"		895152	1					
ANR	895202	Condition	"fscanf ( file , ""Normal termination (return value %d)"" , & returnValue ) != 1"	2613:5:57279:57345	895152	0	True				
ANR	895203	EqualityExpression	"fscanf ( file , ""Normal termination (return value %d)"" , & returnValue ) != 1"		895152	0		!=			
ANR	895204	CallExpression	"fscanf ( file , ""Normal termination (return value %d)"" , & returnValue )"		895152	0					
ANR	895205	Callee	fscanf		895152	0					
ANR	895206	Identifier	fscanf		895152	0					
ANR	895207	ArgumentList	file		895152	1					
ANR	895208	Argument	file		895152	0					
ANR	895209	Identifier	file		895152	0					
ANR	895210	Argument	"""Normal termination (return value %d)"""		895152	1					
ANR	895211	PrimaryExpression	"""Normal termination (return value %d)"""		895152	0					
ANR	895212	Argument	& returnValue		895152	2					
ANR	895213	UnaryOperationExpression	& returnValue		895152	0					
ANR	895214	UnaryOperator	&		895152	0					
ANR	895215	Identifier	returnValue		895152	1					
ANR	895216	PrimaryExpression	1		895152	1					
ANR	895217	ReturnStatement	return 0 ;	2614:3:57351:57359	895152	1	True				
ANR	895218	PrimaryExpression	0		895152	0					
ANR	895219	ElseStatement	else		895152	0					
ANR	895220	CompoundStatement		15:8:281:281	895152	0					
ANR	895221	ExpressionStatement	normal = false	2616:2:57373:57387	895152	0	True				
ANR	895222	AssignmentExpression	normal = false		895152	0		=			
ANR	895223	Identifier	normal		895152	0					
ANR	895224	Identifier	false		895152	1					
ANR	895225	IfStatement	"if ( ( fscanf ( file , ""Abnormal termination (signal %d)"" , & signalNumber ) != 1 ) || ( fscanf ( file , ""\\n\\t(%d) "" , & gotCore ) != 1 ) )"		895152	1					
ANR	895226	Condition	"( fscanf ( file , ""Abnormal termination (signal %d)"" , & signalNumber ) != 1 ) || ( fscanf ( file , ""\\n\\t(%d) "" , & gotCore ) != 1 )"	2617:5:57394:57508	895152	0	True				
ANR	895227	OrExpression	"( fscanf ( file , ""Abnormal termination (signal %d)"" , & signalNumber ) != 1 ) || ( fscanf ( file , ""\\n\\t(%d) "" , & gotCore ) != 1 )"		895152	0		||			
ANR	895228	EqualityExpression	"fscanf ( file , ""Abnormal termination (signal %d)"" , & signalNumber ) != 1"		895152	0		!=			
ANR	895229	CallExpression	"fscanf ( file , ""Abnormal termination (signal %d)"" , & signalNumber )"		895152	0					
ANR	895230	Callee	fscanf		895152	0					
ANR	895231	Identifier	fscanf		895152	0					
ANR	895232	ArgumentList	file		895152	1					
ANR	895233	Argument	file		895152	0					
ANR	895234	Identifier	file		895152	0					
ANR	895235	Argument	"""Abnormal termination (signal %d)"""		895152	1					
ANR	895236	PrimaryExpression	"""Abnormal termination (signal %d)"""		895152	0					
ANR	895237	Argument	& signalNumber		895152	2					
ANR	895238	UnaryOperationExpression	& signalNumber		895152	0					
ANR	895239	UnaryOperator	&		895152	0					
ANR	895240	Identifier	signalNumber		895152	1					
ANR	895241	PrimaryExpression	1		895152	1					
ANR	895242	EqualityExpression	"fscanf ( file , ""\\n\\t(%d) "" , & gotCore ) != 1"		895152	1		!=			
ANR	895243	CallExpression	"fscanf ( file , ""\\n\\t(%d) "" , & gotCore )"		895152	0					
ANR	895244	Callee	fscanf		895152	0					
ANR	895245	Identifier	fscanf		895152	0					
ANR	895246	ArgumentList	file		895152	1					
ANR	895247	Argument	file		895152	0					
ANR	895248	Identifier	file		895152	0					
ANR	895249	Argument	"""\\n\\t(%d) """		895152	1					
ANR	895250	PrimaryExpression	"""\\n\\t(%d) """		895152	0					
ANR	895251	Argument	& gotCore		895152	2					
ANR	895252	UnaryOperationExpression	& gotCore		895152	0					
ANR	895253	UnaryOperator	&		895152	0					
ANR	895254	Identifier	gotCore		895152	1					
ANR	895255	PrimaryExpression	1		895152	1					
ANR	895256	ReturnStatement	return 0 ;	2619:3:57514:57522	895152	1	True				
ANR	895257	PrimaryExpression	0		895152	0					
ANR	895258	IfStatement	if ( gotCore )		895152	2					
ANR	895259	Condition	gotCore	2621:6:57531:57537	895152	0	True				
ANR	895260	Identifier	gotCore		895152	0					
ANR	895261	CompoundStatement		21:16:453:453	895152	1					
ANR	895262	IfStatement	"if ( fscanf ( file , ""Corefile in: "" ) == EOF )"		895152	0					
ANR	895263	Condition	"fscanf ( file , ""Corefile in: "" ) == EOF"	2622:7:57550:57585	895152	0	True				
ANR	895264	EqualityExpression	"fscanf ( file , ""Corefile in: "" ) == EOF"		895152	0		==			
ANR	895265	CallExpression	"fscanf ( file , ""Corefile in: "" )"		895152	0					
ANR	895266	Callee	fscanf		895152	0					
ANR	895267	Identifier	fscanf		895152	0					
ANR	895268	ArgumentList	file		895152	1					
ANR	895269	Argument	file		895152	0					
ANR	895270	Identifier	file		895152	0					
ANR	895271	Argument	"""Corefile in: """		895152	1					
ANR	895272	PrimaryExpression	"""Corefile in: """		895152	0					
ANR	895273	Identifier	EOF		895152	1					
ANR	895274	CompoundStatement		22:46:501:501	895152	1					
ANR	895275	ReturnStatement	return 0 ;	2623:4:57595:57603	895152	0	True				
ANR	895276	PrimaryExpression	0		895152	0					
ANR	895277	IfStatement	"if ( ! fgets ( buffer , 128 , file ) )"		895152	1					
ANR	895278	Condition	"! fgets ( buffer , 128 , file )"	2625:7:57617:57641	895152	0	True				
ANR	895279	UnaryOperationExpression	"! fgets ( buffer , 128 , file )"		895152	0					
ANR	895280	UnaryOperator	!		895152	0					
ANR	895281	CallExpression	"fgets ( buffer , 128 , file )"		895152	1					
ANR	895282	Callee	fgets		895152	0					
ANR	895283	Identifier	fgets		895152	0					
ANR	895284	ArgumentList	buffer		895152	1					
ANR	895285	Argument	buffer		895152	0					
ANR	895286	Identifier	buffer		895152	0					
ANR	895287	Argument	128		895152	1					
ANR	895288	PrimaryExpression	128		895152	0					
ANR	895289	Argument	file		895152	2					
ANR	895290	Identifier	file		895152	0					
ANR	895291	CompoundStatement		25:35:557:557	895152	1					
ANR	895292	ReturnStatement	return 0 ;	2626:4:57651:57659	895152	0	True				
ANR	895293	PrimaryExpression	0		895152	0					
ANR	895294	ExpressionStatement	chomp ( buffer )	2628:3:57669:57684	895152	2	True				
ANR	895295	CallExpression	chomp ( buffer )		895152	0					
ANR	895296	Callee	chomp		895152	0					
ANR	895297	Identifier	chomp		895152	0					
ANR	895298	ArgumentList	buffer		895152	1					
ANR	895299	Argument	buffer		895152	0					
ANR	895300	Identifier	buffer		895152	0					
ANR	895301	ExpressionStatement	setCoreFile ( buffer )	2629:3:57689:57710	895152	3	True				
ANR	895302	CallExpression	setCoreFile ( buffer )		895152	0					
ANR	895303	Callee	setCoreFile		895152	0					
ANR	895304	Identifier	setCoreFile		895152	0					
ANR	895305	ArgumentList	buffer		895152	1					
ANR	895306	Argument	buffer		895152	0					
ANR	895307	Identifier	buffer		895152	0					
ANR	895308	ElseStatement	else		895152	0					
ANR	895309	CompoundStatement		30:9:633:633	895152	0					
ANR	895310	IfStatement	"if ( fgets ( buffer , 128 , file ) == 0 )"		895152	0					
ANR	895311	Condition	"fgets ( buffer , 128 , file ) == 0"	2631:7:57730:57759	895152	0	True				
ANR	895312	EqualityExpression	"fgets ( buffer , 128 , file ) == 0"		895152	0		==			
ANR	895313	CallExpression	"fgets ( buffer , 128 , file )"		895152	0					
ANR	895314	Callee	fgets		895152	0					
ANR	895315	Identifier	fgets		895152	0					
ANR	895316	ArgumentList	buffer		895152	1					
ANR	895317	Argument	buffer		895152	0					
ANR	895318	Identifier	buffer		895152	0					
ANR	895319	Argument	128		895152	1					
ANR	895320	PrimaryExpression	128		895152	0					
ANR	895321	Argument	file		895152	2					
ANR	895322	Identifier	file		895152	0					
ANR	895323	PrimaryExpression	0		895152	1					
ANR	895324	ReturnStatement	return 0 ;	2632:4:57766:57774	895152	1	True				
ANR	895325	PrimaryExpression	0		895152	0					
ANR	895326	IfStatement	"if ( ! readRusage ( file , run_remote_rusage ) || ! fgets ( buffer , 128 , file ) || ! readRusage ( file , run_local_rusage ) || ! fgets ( buffer , 128 , file ) || ! readRusage ( file , total_remote_rusage ) || ! fgets ( buffer , 128 , file ) || ! readRusage ( file , total_local_rusage ) || ! fgets ( buffer , 128 , file ) )"		895152	6					
ANR	895327	Condition	"! readRusage ( file , run_remote_rusage ) || ! fgets ( buffer , 128 , file ) || ! readRusage ( file , run_local_rusage ) || ! fgets ( buffer , 128 , file ) || ! readRusage ( file , total_remote_rusage ) || ! fgets ( buffer , 128 , file ) || ! readRusage ( file , total_local_rusage ) || ! fgets ( buffer , 128 , file )"	2637:5:57816:58092	895152	0	True				
ANR	895328	OrExpression	"! readRusage ( file , run_remote_rusage ) || ! fgets ( buffer , 128 , file ) || ! readRusage ( file , run_local_rusage ) || ! fgets ( buffer , 128 , file ) || ! readRusage ( file , total_remote_rusage ) || ! fgets ( buffer , 128 , file ) || ! readRusage ( file , total_local_rusage ) || ! fgets ( buffer , 128 , file )"		895152	0		||			
ANR	895329	UnaryOperationExpression	"! readRusage ( file , run_remote_rusage )"		895152	0					
ANR	895330	UnaryOperator	!		895152	0					
ANR	895331	CallExpression	"readRusage ( file , run_remote_rusage )"		895152	1					
ANR	895332	Callee	readRusage		895152	0					
ANR	895333	Identifier	readRusage		895152	0					
ANR	895334	ArgumentList	file		895152	1					
ANR	895335	Argument	file		895152	0					
ANR	895336	Identifier	file		895152	0					
ANR	895337	Argument	run_remote_rusage		895152	1					
ANR	895338	Identifier	run_remote_rusage		895152	0					
ANR	895339	OrExpression	"! fgets ( buffer , 128 , file ) || ! readRusage ( file , run_local_rusage ) || ! fgets ( buffer , 128 , file ) || ! readRusage ( file , total_remote_rusage ) || ! fgets ( buffer , 128 , file ) || ! readRusage ( file , total_local_rusage ) || ! fgets ( buffer , 128 , file )"		895152	1		||			
ANR	895340	UnaryOperationExpression	"! fgets ( buffer , 128 , file )"		895152	0					
ANR	895341	UnaryOperator	!		895152	0					
ANR	895342	CallExpression	"fgets ( buffer , 128 , file )"		895152	1					
ANR	895343	Callee	fgets		895152	0					
ANR	895344	Identifier	fgets		895152	0					
ANR	895345	ArgumentList	buffer		895152	1					
ANR	895346	Argument	buffer		895152	0					
ANR	895347	Identifier	buffer		895152	0					
ANR	895348	Argument	128		895152	1					
ANR	895349	PrimaryExpression	128		895152	0					
ANR	895350	Argument	file		895152	2					
ANR	895351	Identifier	file		895152	0					
ANR	895352	OrExpression	"! readRusage ( file , run_local_rusage ) || ! fgets ( buffer , 128 , file ) || ! readRusage ( file , total_remote_rusage ) || ! fgets ( buffer , 128 , file ) || ! readRusage ( file , total_local_rusage ) || ! fgets ( buffer , 128 , file )"		895152	1		||			
ANR	895353	UnaryOperationExpression	"! readRusage ( file , run_local_rusage )"		895152	0					
ANR	895354	UnaryOperator	!		895152	0					
ANR	895355	CallExpression	"readRusage ( file , run_local_rusage )"		895152	1					
ANR	895356	Callee	readRusage		895152	0					
ANR	895357	Identifier	readRusage		895152	0					
ANR	895358	ArgumentList	file		895152	1					
ANR	895359	Argument	file		895152	0					
ANR	895360	Identifier	file		895152	0					
ANR	895361	Argument	run_local_rusage		895152	1					
ANR	895362	Identifier	run_local_rusage		895152	0					
ANR	895363	OrExpression	"! fgets ( buffer , 128 , file ) || ! readRusage ( file , total_remote_rusage ) || ! fgets ( buffer , 128 , file ) || ! readRusage ( file , total_local_rusage ) || ! fgets ( buffer , 128 , file )"		895152	1		||			
ANR	895364	UnaryOperationExpression	"! fgets ( buffer , 128 , file )"		895152	0					
ANR	895365	UnaryOperator	!		895152	0					
ANR	895366	CallExpression	"fgets ( buffer , 128 , file )"		895152	1					
ANR	895367	Callee	fgets		895152	0					
ANR	895368	Identifier	fgets		895152	0					
ANR	895369	ArgumentList	buffer		895152	1					
ANR	895370	Argument	buffer		895152	0					
ANR	895371	Identifier	buffer		895152	0					
ANR	895372	Argument	128		895152	1					
ANR	895373	PrimaryExpression	128		895152	0					
ANR	895374	Argument	file		895152	2					
ANR	895375	Identifier	file		895152	0					
ANR	895376	OrExpression	"! readRusage ( file , total_remote_rusage ) || ! fgets ( buffer , 128 , file ) || ! readRusage ( file , total_local_rusage ) || ! fgets ( buffer , 128 , file )"		895152	1		||			
ANR	895377	UnaryOperationExpression	"! readRusage ( file , total_remote_rusage )"		895152	0					
ANR	895378	UnaryOperator	!		895152	0					
ANR	895379	CallExpression	"readRusage ( file , total_remote_rusage )"		895152	1					
ANR	895380	Callee	readRusage		895152	0					
ANR	895381	Identifier	readRusage		895152	0					
ANR	895382	ArgumentList	file		895152	1					
ANR	895383	Argument	file		895152	0					
ANR	895384	Identifier	file		895152	0					
ANR	895385	Argument	total_remote_rusage		895152	1					
ANR	895386	Identifier	total_remote_rusage		895152	0					
ANR	895387	OrExpression	"! fgets ( buffer , 128 , file ) || ! readRusage ( file , total_local_rusage ) || ! fgets ( buffer , 128 , file )"		895152	1		||			
ANR	895388	UnaryOperationExpression	"! fgets ( buffer , 128 , file )"		895152	0					
ANR	895389	UnaryOperator	!		895152	0					
ANR	895390	CallExpression	"fgets ( buffer , 128 , file )"		895152	1					
ANR	895391	Callee	fgets		895152	0					
ANR	895392	Identifier	fgets		895152	0					
ANR	895393	ArgumentList	buffer		895152	1					
ANR	895394	Argument	buffer		895152	0					
ANR	895395	Identifier	buffer		895152	0					
ANR	895396	Argument	128		895152	1					
ANR	895397	PrimaryExpression	128		895152	0					
ANR	895398	Argument	file		895152	2					
ANR	895399	Identifier	file		895152	0					
ANR	895400	OrExpression	"! readRusage ( file , total_local_rusage ) || ! fgets ( buffer , 128 , file )"		895152	1		||			
ANR	895401	UnaryOperationExpression	"! readRusage ( file , total_local_rusage )"		895152	0					
ANR	895402	UnaryOperator	!		895152	0					
ANR	895403	CallExpression	"readRusage ( file , total_local_rusage )"		895152	1					
ANR	895404	Callee	readRusage		895152	0					
ANR	895405	Identifier	readRusage		895152	0					
ANR	895406	ArgumentList	file		895152	1					
ANR	895407	Argument	file		895152	0					
ANR	895408	Identifier	file		895152	0					
ANR	895409	Argument	total_local_rusage		895152	1					
ANR	895410	Identifier	total_local_rusage		895152	0					
ANR	895411	UnaryOperationExpression	"! fgets ( buffer , 128 , file )"		895152	1					
ANR	895412	UnaryOperator	!		895152	0					
ANR	895413	CallExpression	"fgets ( buffer , 128 , file )"		895152	1					
ANR	895414	Callee	fgets		895152	0					
ANR	895415	Identifier	fgets		895152	0					
ANR	895416	ArgumentList	buffer		895152	1					
ANR	895417	Argument	buffer		895152	0					
ANR	895418	Identifier	buffer		895152	0					
ANR	895419	Argument	128		895152	1					
ANR	895420	PrimaryExpression	128		895152	0					
ANR	895421	Argument	file		895152	2					
ANR	895422	Identifier	file		895152	0					
ANR	895423	ReturnStatement	return 0 ;	2641:2:58097:58105	895152	1	True				
ANR	895424	PrimaryExpression	0		895152	0					
ANR	895425	IfStatement	"if ( fscanf ( file , ""\\t%f  -  Run Bytes Sent By "" , & sent_bytes ) == 0 || fscanf ( file , header ) == 0 || fscanf ( file , ""\\n"" ) == 0 || fscanf ( file , ""\\t%f  -  Run Bytes Received By "" , & recvd_bytes ) == 0 || fscanf ( file , header ) == 0 || fscanf ( file , ""\\n"" ) == 0 || fscanf ( file , ""\\t%f  -  Total Bytes Sent By "" , & total_sent_bytes ) == 0 || fscanf ( file , header ) == 0 || fscanf ( file , ""\\n"" ) == 0 || fscanf ( file , ""\\t%f  -  Total Bytes Received By "" , & total_recvd_bytes ) == 0 || fscanf ( file , header ) == 0 || fscanf ( file , ""\\n"" ) == 0 )"		895152	7					
ANR	895426	Condition	"fscanf ( file , ""\\t%f  -  Run Bytes Sent By "" , & sent_bytes ) == 0 || fscanf ( file , header ) == 0 || fscanf ( file , ""\\n"" ) == 0 || fscanf ( file , ""\\t%f  -  Run Bytes Received By "" , & recvd_bytes ) == 0 || fscanf ( file , header ) == 0 || fscanf ( file , ""\\n"" ) == 0 || fscanf ( file , ""\\t%f  -  Total Bytes Sent By "" , & total_sent_bytes ) == 0 || fscanf ( file , header ) == 0 || fscanf ( file , ""\\n"" ) == 0 || fscanf ( file , ""\\t%f  -  Total Bytes Received By "" , & total_recvd_bytes ) == 0 || fscanf ( file , header ) == 0 || fscanf ( file , ""\\n"" ) == 0"	2646:5:58289:58840	895152	0	True				
ANR	895427	OrExpression	"fscanf ( file , ""\\t%f  -  Run Bytes Sent By "" , & sent_bytes ) == 0 || fscanf ( file , header ) == 0 || fscanf ( file , ""\\n"" ) == 0 || fscanf ( file , ""\\t%f  -  Run Bytes Received By "" , & recvd_bytes ) == 0 || fscanf ( file , header ) == 0 || fscanf ( file , ""\\n"" ) == 0 || fscanf ( file , ""\\t%f  -  Total Bytes Sent By "" , & total_sent_bytes ) == 0 || fscanf ( file , header ) == 0 || fscanf ( file , ""\\n"" ) == 0 || fscanf ( file , ""\\t%f  -  Total Bytes Received By "" , & total_recvd_bytes ) == 0 || fscanf ( file , header ) == 0 || fscanf ( file , ""\\n"" ) == 0"		895152	0		||			
ANR	895428	EqualityExpression	"fscanf ( file , ""\\t%f  -  Run Bytes Sent By "" , & sent_bytes ) == 0"		895152	0		==			
ANR	895429	CallExpression	"fscanf ( file , ""\\t%f  -  Run Bytes Sent By "" , & sent_bytes )"		895152	0					
ANR	895430	Callee	fscanf		895152	0					
ANR	895431	Identifier	fscanf		895152	0					
ANR	895432	ArgumentList	file		895152	1					
ANR	895433	Argument	file		895152	0					
ANR	895434	Identifier	file		895152	0					
ANR	895435	Argument	"""\\t%f  -  Run Bytes Sent By """		895152	1					
ANR	895436	PrimaryExpression	"""\\t%f  -  Run Bytes Sent By """		895152	0					
ANR	895437	Argument	& sent_bytes		895152	2					
ANR	895438	UnaryOperationExpression	& sent_bytes		895152	0					
ANR	895439	UnaryOperator	&		895152	0					
ANR	895440	Identifier	sent_bytes		895152	1					
ANR	895441	PrimaryExpression	0		895152	1					
ANR	895442	OrExpression	"fscanf ( file , header ) == 0 || fscanf ( file , ""\\n"" ) == 0 || fscanf ( file , ""\\t%f  -  Run Bytes Received By "" , & recvd_bytes ) == 0 || fscanf ( file , header ) == 0 || fscanf ( file , ""\\n"" ) == 0 || fscanf ( file , ""\\t%f  -  Total Bytes Sent By "" , & total_sent_bytes ) == 0 || fscanf ( file , header ) == 0 || fscanf ( file , ""\\n"" ) == 0 || fscanf ( file , ""\\t%f  -  Total Bytes Received By "" , & total_recvd_bytes ) == 0 || fscanf ( file , header ) == 0 || fscanf ( file , ""\\n"" ) == 0"		895152	1		||			
ANR	895443	EqualityExpression	"fscanf ( file , header ) == 0"		895152	0		==			
ANR	895444	CallExpression	"fscanf ( file , header )"		895152	0					
ANR	895445	Callee	fscanf		895152	0					
ANR	895446	Identifier	fscanf		895152	0					
ANR	895447	ArgumentList	file		895152	1					
ANR	895448	Argument	file		895152	0					
ANR	895449	Identifier	file		895152	0					
ANR	895450	Argument	header		895152	1					
ANR	895451	Identifier	header		895152	0					
ANR	895452	PrimaryExpression	0		895152	1					
ANR	895453	OrExpression	"fscanf ( file , ""\\n"" ) == 0 || fscanf ( file , ""\\t%f  -  Run Bytes Received By "" , & recvd_bytes ) == 0 || fscanf ( file , header ) == 0 || fscanf ( file , ""\\n"" ) == 0 || fscanf ( file , ""\\t%f  -  Total Bytes Sent By "" , & total_sent_bytes ) == 0 || fscanf ( file , header ) == 0 || fscanf ( file , ""\\n"" ) == 0 || fscanf ( file , ""\\t%f  -  Total Bytes Received By "" , & total_recvd_bytes ) == 0 || fscanf ( file , header ) == 0 || fscanf ( file , ""\\n"" ) == 0"		895152	1		||			
ANR	895454	EqualityExpression	"fscanf ( file , ""\\n"" ) == 0"		895152	0		==			
ANR	895455	CallExpression	"fscanf ( file , ""\\n"" )"		895152	0					
ANR	895456	Callee	fscanf		895152	0					
ANR	895457	Identifier	fscanf		895152	0					
ANR	895458	ArgumentList	file		895152	1					
ANR	895459	Argument	file		895152	0					
ANR	895460	Identifier	file		895152	0					
ANR	895461	Argument	"""\\n"""		895152	1					
ANR	895462	PrimaryExpression	"""\\n"""		895152	0					
ANR	895463	PrimaryExpression	0		895152	1					
ANR	895464	OrExpression	"fscanf ( file , ""\\t%f  -  Run Bytes Received By "" , & recvd_bytes ) == 0 || fscanf ( file , header ) == 0 || fscanf ( file , ""\\n"" ) == 0 || fscanf ( file , ""\\t%f  -  Total Bytes Sent By "" , & total_sent_bytes ) == 0 || fscanf ( file , header ) == 0 || fscanf ( file , ""\\n"" ) == 0 || fscanf ( file , ""\\t%f  -  Total Bytes Received By "" , & total_recvd_bytes ) == 0 || fscanf ( file , header ) == 0 || fscanf ( file , ""\\n"" ) == 0"		895152	1		||			
ANR	895465	EqualityExpression	"fscanf ( file , ""\\t%f  -  Run Bytes Received By "" , & recvd_bytes ) == 0"		895152	0		==			
ANR	895466	CallExpression	"fscanf ( file , ""\\t%f  -  Run Bytes Received By "" , & recvd_bytes )"		895152	0					
ANR	895467	Callee	fscanf		895152	0					
ANR	895468	Identifier	fscanf		895152	0					
ANR	895469	ArgumentList	file		895152	1					
ANR	895470	Argument	file		895152	0					
ANR	895471	Identifier	file		895152	0					
ANR	895472	Argument	"""\\t%f  -  Run Bytes Received By """		895152	1					
ANR	895473	PrimaryExpression	"""\\t%f  -  Run Bytes Received By """		895152	0					
ANR	895474	Argument	& recvd_bytes		895152	2					
ANR	895475	UnaryOperationExpression	& recvd_bytes		895152	0					
ANR	895476	UnaryOperator	&		895152	0					
ANR	895477	Identifier	recvd_bytes		895152	1					
ANR	895478	PrimaryExpression	0		895152	1					
ANR	895479	OrExpression	"fscanf ( file , header ) == 0 || fscanf ( file , ""\\n"" ) == 0 || fscanf ( file , ""\\t%f  -  Total Bytes Sent By "" , & total_sent_bytes ) == 0 || fscanf ( file , header ) == 0 || fscanf ( file , ""\\n"" ) == 0 || fscanf ( file , ""\\t%f  -  Total Bytes Received By "" , & total_recvd_bytes ) == 0 || fscanf ( file , header ) == 0 || fscanf ( file , ""\\n"" ) == 0"		895152	1		||			
ANR	895480	EqualityExpression	"fscanf ( file , header ) == 0"		895152	0		==			
ANR	895481	CallExpression	"fscanf ( file , header )"		895152	0					
ANR	895482	Callee	fscanf		895152	0					
ANR	895483	Identifier	fscanf		895152	0					
ANR	895484	ArgumentList	file		895152	1					
ANR	895485	Argument	file		895152	0					
ANR	895486	Identifier	file		895152	0					
ANR	895487	Argument	header		895152	1					
ANR	895488	Identifier	header		895152	0					
ANR	895489	PrimaryExpression	0		895152	1					
ANR	895490	OrExpression	"fscanf ( file , ""\\n"" ) == 0 || fscanf ( file , ""\\t%f  -  Total Bytes Sent By "" , & total_sent_bytes ) == 0 || fscanf ( file , header ) == 0 || fscanf ( file , ""\\n"" ) == 0 || fscanf ( file , ""\\t%f  -  Total Bytes Received By "" , & total_recvd_bytes ) == 0 || fscanf ( file , header ) == 0 || fscanf ( file , ""\\n"" ) == 0"		895152	1		||			
ANR	895491	EqualityExpression	"fscanf ( file , ""\\n"" ) == 0"		895152	0		==			
ANR	895492	CallExpression	"fscanf ( file , ""\\n"" )"		895152	0					
ANR	895493	Callee	fscanf		895152	0					
ANR	895494	Identifier	fscanf		895152	0					
ANR	895495	ArgumentList	file		895152	1					
ANR	895496	Argument	file		895152	0					
ANR	895497	Identifier	file		895152	0					
ANR	895498	Argument	"""\\n"""		895152	1					
ANR	895499	PrimaryExpression	"""\\n"""		895152	0					
ANR	895500	PrimaryExpression	0		895152	1					
ANR	895501	OrExpression	"fscanf ( file , ""\\t%f  -  Total Bytes Sent By "" , & total_sent_bytes ) == 0 || fscanf ( file , header ) == 0 || fscanf ( file , ""\\n"" ) == 0 || fscanf ( file , ""\\t%f  -  Total Bytes Received By "" , & total_recvd_bytes ) == 0 || fscanf ( file , header ) == 0 || fscanf ( file , ""\\n"" ) == 0"		895152	1		||			
ANR	895502	EqualityExpression	"fscanf ( file , ""\\t%f  -  Total Bytes Sent By "" , & total_sent_bytes ) == 0"		895152	0		==			
ANR	895503	CallExpression	"fscanf ( file , ""\\t%f  -  Total Bytes Sent By "" , & total_sent_bytes )"		895152	0					
ANR	895504	Callee	fscanf		895152	0					
ANR	895505	Identifier	fscanf		895152	0					
ANR	895506	ArgumentList	file		895152	1					
ANR	895507	Argument	file		895152	0					
ANR	895508	Identifier	file		895152	0					
ANR	895509	Argument	"""\\t%f  -  Total Bytes Sent By """		895152	1					
ANR	895510	PrimaryExpression	"""\\t%f  -  Total Bytes Sent By """		895152	0					
ANR	895511	Argument	& total_sent_bytes		895152	2					
ANR	895512	UnaryOperationExpression	& total_sent_bytes		895152	0					
ANR	895513	UnaryOperator	&		895152	0					
ANR	895514	Identifier	total_sent_bytes		895152	1					
ANR	895515	PrimaryExpression	0		895152	1					
ANR	895516	OrExpression	"fscanf ( file , header ) == 0 || fscanf ( file , ""\\n"" ) == 0 || fscanf ( file , ""\\t%f  -  Total Bytes Received By "" , & total_recvd_bytes ) == 0 || fscanf ( file , header ) == 0 || fscanf ( file , ""\\n"" ) == 0"		895152	1		||			
ANR	895517	EqualityExpression	"fscanf ( file , header ) == 0"		895152	0		==			
ANR	895518	CallExpression	"fscanf ( file , header )"		895152	0					
ANR	895519	Callee	fscanf		895152	0					
ANR	895520	Identifier	fscanf		895152	0					
ANR	895521	ArgumentList	file		895152	1					
ANR	895522	Argument	file		895152	0					
ANR	895523	Identifier	file		895152	0					
ANR	895524	Argument	header		895152	1					
ANR	895525	Identifier	header		895152	0					
ANR	895526	PrimaryExpression	0		895152	1					
ANR	895527	OrExpression	"fscanf ( file , ""\\n"" ) == 0 || fscanf ( file , ""\\t%f  -  Total Bytes Received By "" , & total_recvd_bytes ) == 0 || fscanf ( file , header ) == 0 || fscanf ( file , ""\\n"" ) == 0"		895152	1		||			
ANR	895528	EqualityExpression	"fscanf ( file , ""\\n"" ) == 0"		895152	0		==			
ANR	895529	CallExpression	"fscanf ( file , ""\\n"" )"		895152	0					
ANR	895530	Callee	fscanf		895152	0					
ANR	895531	Identifier	fscanf		895152	0					
ANR	895532	ArgumentList	file		895152	1					
ANR	895533	Argument	file		895152	0					
ANR	895534	Identifier	file		895152	0					
ANR	895535	Argument	"""\\n"""		895152	1					
ANR	895536	PrimaryExpression	"""\\n"""		895152	0					
ANR	895537	PrimaryExpression	0		895152	1					
ANR	895538	OrExpression	"fscanf ( file , ""\\t%f  -  Total Bytes Received By "" , & total_recvd_bytes ) == 0 || fscanf ( file , header ) == 0 || fscanf ( file , ""\\n"" ) == 0"		895152	1		||			
ANR	895539	EqualityExpression	"fscanf ( file , ""\\t%f  -  Total Bytes Received By "" , & total_recvd_bytes ) == 0"		895152	0		==			
ANR	895540	CallExpression	"fscanf ( file , ""\\t%f  -  Total Bytes Received By "" , & total_recvd_bytes )"		895152	0					
ANR	895541	Callee	fscanf		895152	0					
ANR	895542	Identifier	fscanf		895152	0					
ANR	895543	ArgumentList	file		895152	1					
ANR	895544	Argument	file		895152	0					
ANR	895545	Identifier	file		895152	0					
ANR	895546	Argument	"""\\t%f  -  Total Bytes Received By """		895152	1					
ANR	895547	PrimaryExpression	"""\\t%f  -  Total Bytes Received By """		895152	0					
ANR	895548	Argument	& total_recvd_bytes		895152	2					
ANR	895549	UnaryOperationExpression	& total_recvd_bytes		895152	0					
ANR	895550	UnaryOperator	&		895152	0					
ANR	895551	Identifier	total_recvd_bytes		895152	1					
ANR	895552	PrimaryExpression	0		895152	1					
ANR	895553	OrExpression	"fscanf ( file , header ) == 0 || fscanf ( file , ""\\n"" ) == 0"		895152	1		||			
ANR	895554	EqualityExpression	"fscanf ( file , header ) == 0"		895152	0		==			
ANR	895555	CallExpression	"fscanf ( file , header )"		895152	0					
ANR	895556	Callee	fscanf		895152	0					
ANR	895557	Identifier	fscanf		895152	0					
ANR	895558	ArgumentList	file		895152	1					
ANR	895559	Argument	file		895152	0					
ANR	895560	Identifier	file		895152	0					
ANR	895561	Argument	header		895152	1					
ANR	895562	Identifier	header		895152	0					
ANR	895563	PrimaryExpression	0		895152	1					
ANR	895564	EqualityExpression	"fscanf ( file , ""\\n"" ) == 0"		895152	1		==			
ANR	895565	CallExpression	"fscanf ( file , ""\\n"" )"		895152	0					
ANR	895566	Callee	fscanf		895152	0					
ANR	895567	Identifier	fscanf		895152	0					
ANR	895568	ArgumentList	file		895152	1					
ANR	895569	Argument	file		895152	0					
ANR	895570	Identifier	file		895152	0					
ANR	895571	Argument	"""\\n"""		895152	1					
ANR	895572	PrimaryExpression	"""\\n"""		895152	0					
ANR	895573	PrimaryExpression	0		895152	1					
ANR	895574	CompoundStatement		60:29:1756:1756	895152	1					
ANR	895575	ReturnStatement	return 1 ;	2661:2:58848:58856	895152	0	True				
ANR	895576	PrimaryExpression	1		895152	0					
ANR	895577	ReturnStatement	return 1 ;	2663:1:58890:58898	895152	8	True				
ANR	895578	PrimaryExpression	1		895152	0					
ANR	895579	ReturnType	int		895152	1					
ANR	895580	Identifier	TerminatedEvent :: readEvent		895152	2					
ANR	895581	ParameterList	"FILE * file , const char * header"		895152	3					
ANR	895582	Parameter	FILE * file	2600:28:57054:57063	895152	0	True				
ANR	895583	ParameterType	FILE *		895152	0					
ANR	895584	Identifier	file		895152	1					
ANR	895585	Parameter	const char * header	2600:40:57066:57083	895152	1	True				
ANR	895586	ParameterType	const char *		895152	0					
ANR	895587	Identifier	header		895152	1					
ANR	895588	CFGEntryNode	ENTRY		895152		True				
ANR	895589	CFGExitNode	EXIT		895152		True				
ANR	895590	Symbol	run_local_rusage		895152						
ANR	895591	Symbol	gotCore		895152						
ANR	895592	Symbol	& total_sent_bytes		895152						
ANR	895593	Symbol	& signalNumber		895152						
ANR	895594	Symbol	& gotCore		895152						
ANR	895595	Symbol	fgets		895152						
ANR	895596	Symbol	file		895152						
ANR	895597	Symbol	& recvd_bytes		895152						
ANR	895598	Symbol	normalTerm		895152						
ANR	895599	Symbol	& total_recvd_bytes		895152						
ANR	895600	Symbol	run_remote_rusage		895152						
ANR	895601	Symbol	buffer		895152						
ANR	895602	Symbol	EOF		895152						
ANR	895603	Symbol	normal		895152						
ANR	895604	Symbol	total_local_rusage		895152						
ANR	895605	Symbol	false		895152						
ANR	895606	Symbol	readRusage		895152						
ANR	895607	Symbol	retval		895152						
ANR	895608	Symbol	& returnValue		895152						
ANR	895609	Symbol	& normalTerm		895152						
ANR	895610	Symbol	fscanf		895152						
ANR	895611	Symbol	true		895152						
ANR	895612	Symbol	header		895152						
ANR	895613	Symbol	total_remote_rusage		895152						
ANR	895614	Symbol	& sent_bytes		895152						
ANR	895615	Function	JobTerminatedEvent :: JobTerminatedEvent	2668:0:58938:59041							
ANR	895616	FunctionDef	JobTerminatedEvent :: JobTerminatedEvent ()		895615	0					
ANR	895617	CompoundStatement		2669:0:59003:59041	895615	0					
ANR	895618	ExpressionStatement	eventNumber = ULOG_JOB_TERMINATED	2670:1:59006:59039	895615	0	True				
ANR	895619	AssignmentExpression	eventNumber = ULOG_JOB_TERMINATED		895615	0		=			
ANR	895620	Identifier	eventNumber		895615	0					
ANR	895621	Identifier	ULOG_JOB_TERMINATED		895615	1					
ANR	895622	Identifier	JobTerminatedEvent :: JobTerminatedEvent		895615	1					
ANR	895623	ParameterList			895615	2					
ANR	895624	CFGEntryNode	ENTRY		895615		True				
ANR	895625	CFGExitNode	EXIT		895615		True				
ANR	895626	Symbol	eventNumber		895615						
ANR	895627	Symbol	ULOG_JOB_TERMINATED		895615						
ANR	895628	Function	JobTerminatedEvent :: ~JobTerminatedEvent	2674:0:59045:59093							
ANR	895629	FunctionDef	JobTerminatedEvent :: ~JobTerminatedEvent ()		895628	0					
ANR	895630	CompoundStatement		2675:0:59091:59093	895628	0					
ANR	895631	Identifier	JobTerminatedEvent :: ~JobTerminatedEvent		895628	1					
ANR	895632	ParameterList			895628	2					
ANR	895633	CFGEntryNode	ENTRY		895628		True				
ANR	895634	CFGExitNode	EXIT		895628		True				
ANR	895635	Function	JobTerminatedEvent :: writeEvent	2679:0:59097:59975							
ANR	895636	FunctionDef	JobTerminatedEvent :: writeEvent (FILE * file)		895635	0					
ANR	895637	CompoundStatement		2681:0:59145:59975	895635	0					
ANR	895638	IdentifierDeclStatement	"ClassAd tmpCl1 , tmpCl2 ;"	2682:2:59149:59171	895635	0	True				
ANR	895639	IdentifierDecl	tmpCl1		895635	0					
ANR	895640	IdentifierDeclType	ClassAd		895635	0					
ANR	895641	Identifier	tmpCl1		895635	1					
ANR	895642	IdentifierDecl	tmpCl2		895635	1					
ANR	895643	IdentifierDeclType	ClassAd		895635	0					
ANR	895644	Identifier	tmpCl2		895635	1					
ANR	895645	IdentifierDeclStatement	"MyString tmp = """" ;"	2684:2:59227:59244	895635	1	True				
ANR	895646	IdentifierDecl	"tmp = """""		895635	0					
ANR	895647	IdentifierDeclType	MyString		895635	0					
ANR	895648	Identifier	tmp		895635	1					
ANR	895649	AssignmentExpression	"tmp = """""		895635	2		=			
ANR	895650	Identifier	tmp		895635	0					
ANR	895651	PrimaryExpression	""""""		895635	1					
ANR	895652	ExpressionStatement	scheddname = getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )	2689:2:59359:59411	895635	2	True				
ANR	895653	AssignmentExpression	scheddname = getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )		895635	0		=			
ANR	895654	Identifier	scheddname		895635	0					
ANR	895655	CallExpression	getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )		895635	1					
ANR	895656	Callee	getenv		895635	0					
ANR	895657	Identifier	getenv		895635	0					
ANR	895658	ArgumentList	EnvGetName ( ENV_SCHEDD_NAME )		895635	1					
ANR	895659	Argument	EnvGetName ( ENV_SCHEDD_NAME )		895635	0					
ANR	895660	CallExpression	EnvGetName ( ENV_SCHEDD_NAME )		895635	0					
ANR	895661	Callee	EnvGetName		895635	0					
ANR	895662	Identifier	EnvGetName		895635	0					
ANR	895663	ArgumentList	ENV_SCHEDD_NAME		895635	1					
ANR	895664	Argument	ENV_SCHEDD_NAME		895635	0					
ANR	895665	Identifier	ENV_SCHEDD_NAME		895635	0					
ANR	895666	ExpressionStatement	"tmpCl1 . Assign ( ""endts"" , ( int ) eventclock )"	2691:2:59416:59455	895635	3	True				
ANR	895667	CallExpression	"tmpCl1 . Assign ( ""endts"" , ( int ) eventclock )"		895635	0					
ANR	895668	Callee	tmpCl1 . Assign		895635	0					
ANR	895669	MemberAccess	tmpCl1 . Assign		895635	0					
ANR	895670	Identifier	tmpCl1		895635	0					
ANR	895671	Identifier	Assign		895635	1					
ANR	895672	ArgumentList	"""endts"""		895635	1					
ANR	895673	Argument	"""endts"""		895635	0					
ANR	895674	PrimaryExpression	"""endts"""		895635	0					
ANR	895675	Argument	( int ) eventclock		895635	1					
ANR	895676	CastExpression	( int ) eventclock		895635	0					
ANR	895677	CastTarget	int		895635	0					
ANR	895678	Identifier	eventclock		895635	1					
ANR	895679	ExpressionStatement	"tmpCl1 . Assign ( ""endtype"" , ULOG_JOB_TERMINATED )"	2692:2:59459:59504	895635	4	True				
ANR	895680	CallExpression	"tmpCl1 . Assign ( ""endtype"" , ULOG_JOB_TERMINATED )"		895635	0					
ANR	895681	Callee	tmpCl1 . Assign		895635	0					
ANR	895682	MemberAccess	tmpCl1 . Assign		895635	0					
ANR	895683	Identifier	tmpCl1		895635	0					
ANR	895684	Identifier	Assign		895635	1					
ANR	895685	ArgumentList	"""endtype"""		895635	1					
ANR	895686	Argument	"""endtype"""		895635	0					
ANR	895687	PrimaryExpression	"""endtype"""		895635	0					
ANR	895688	Argument	ULOG_JOB_TERMINATED		895635	1					
ANR	895689	Identifier	ULOG_JOB_TERMINATED		895635	0					
ANR	895690	ExpressionStatement	insertCommonIdentifiers ( tmpCl2 )	2695:2:59558:59589	895635	5	True				
ANR	895691	CallExpression	insertCommonIdentifiers ( tmpCl2 )		895635	0					
ANR	895692	Callee	insertCommonIdentifiers		895635	0					
ANR	895693	Identifier	insertCommonIdentifiers		895635	0					
ANR	895694	ArgumentList	tmpCl2		895635	1					
ANR	895695	Argument	tmpCl2		895635	0					
ANR	895696	Identifier	tmpCl2		895635	0					
ANR	895697	ExpressionStatement	"tmp . sprintf ( ""endtype = null"" )"	2697:2:59594:59624	895635	6	True				
ANR	895698	CallExpression	"tmp . sprintf ( ""endtype = null"" )"		895635	0					
ANR	895699	Callee	tmp . sprintf		895635	0					
ANR	895700	MemberAccess	tmp . sprintf		895635	0					
ANR	895701	Identifier	tmp		895635	0					
ANR	895702	Identifier	sprintf		895635	1					
ANR	895703	ArgumentList	"""endtype = null"""		895635	1					
ANR	895704	Argument	"""endtype = null"""		895635	0					
ANR	895705	PrimaryExpression	"""endtype = null"""		895635	0					
ANR	895706	ExpressionStatement	tmpCl2 . Insert ( tmp . Value ( ) )	2698:2:59628:59654	895635	7	True				
ANR	895707	CallExpression	tmpCl2 . Insert ( tmp . Value ( ) )		895635	0					
ANR	895708	Callee	tmpCl2 . Insert		895635	0					
ANR	895709	MemberAccess	tmpCl2 . Insert		895635	0					
ANR	895710	Identifier	tmpCl2		895635	0					
ANR	895711	Identifier	Insert		895635	1					
ANR	895712	ArgumentList	tmp . Value ( )		895635	1					
ANR	895713	Argument	tmp . Value ( )		895635	0					
ANR	895714	CallExpression	tmp . Value ( )		895635	0					
ANR	895715	Callee	tmp . Value		895635	0					
ANR	895716	MemberAccess	tmp . Value		895635	0					
ANR	895717	Identifier	tmp		895635	0					
ANR	895718	Identifier	Value		895635	1					
ANR	895719	ArgumentList			895635	1					
ANR	895720	IfStatement	if ( FILEObj )		895635	8					
ANR	895721	Condition	FILEObj	2700:6:59663:59669	895635	0	True				
ANR	895722	Identifier	FILEObj		895635	0					
ANR	895723	CompoundStatement		20:15:526:526	895635	1					
ANR	895724	IfStatement	"if ( FILEObj -> file_updateEvent ( ""Runs"" , & tmpCl1 , & tmpCl2 ) == QUILL_FAILURE )"		895635	0					
ANR	895725	Condition	"FILEObj -> file_updateEvent ( ""Runs"" , & tmpCl1 , & tmpCl2 ) == QUILL_FAILURE"	2701:7:59681:59748	895635	0	True				
ANR	895726	EqualityExpression	"FILEObj -> file_updateEvent ( ""Runs"" , & tmpCl1 , & tmpCl2 ) == QUILL_FAILURE"		895635	0		==			
ANR	895727	CallExpression	"FILEObj -> file_updateEvent ( ""Runs"" , & tmpCl1 , & tmpCl2 )"		895635	0					
ANR	895728	Callee	FILEObj -> file_updateEvent		895635	0					
ANR	895729	PtrMemberAccess	FILEObj -> file_updateEvent		895635	0					
ANR	895730	Identifier	FILEObj		895635	0					
ANR	895731	Identifier	file_updateEvent		895635	1					
ANR	895732	ArgumentList	"""Runs"""		895635	1					
ANR	895733	Argument	"""Runs"""		895635	0					
ANR	895734	PrimaryExpression	"""Runs"""		895635	0					
ANR	895735	Argument	& tmpCl1		895635	1					
ANR	895736	UnaryOperationExpression	& tmpCl1		895635	0					
ANR	895737	UnaryOperator	&		895635	0					
ANR	895738	Identifier	tmpCl1		895635	1					
ANR	895739	Argument	& tmpCl2		895635	2					
ANR	895740	UnaryOperationExpression	& tmpCl2		895635	0					
ANR	895741	UnaryOperator	&		895635	0					
ANR	895742	Identifier	tmpCl2		895635	1					
ANR	895743	Identifier	QUILL_FAILURE		895635	1					
ANR	895744	CompoundStatement		21:77:605:605	895635	1					
ANR	895745	ExpressionStatement	"dprintf ( D_ALWAYS , ""Logging Event 4--- Error\\n"" )"	2702:4:59757:59804	895635	0	True				
ANR	895746	CallExpression	"dprintf ( D_ALWAYS , ""Logging Event 4--- Error\\n"" )"		895635	0					
ANR	895747	Callee	dprintf		895635	0					
ANR	895748	Identifier	dprintf		895635	0					
ANR	895749	ArgumentList	D_ALWAYS		895635	1					
ANR	895750	Argument	D_ALWAYS		895635	0					
ANR	895751	Identifier	D_ALWAYS		895635	0					
ANR	895752	Argument	"""Logging Event 4--- Error\\n"""		895635	1					
ANR	895753	PrimaryExpression	"""Logging Event 4--- Error\\n"""		895635	0					
ANR	895754	ReturnStatement	return 0 ;	2703:4:59810:59818	895635	1	True				
ANR	895755	PrimaryExpression	0		895635	0					
ANR	895756	IfStatement	"if ( fprintf ( file , ""Job terminated.\\n"" ) < 0 )"		895635	9					
ANR	895757	Condition	"fprintf ( file , ""Job terminated.\\n"" ) < 0"	2707:6:59862:59899	895635	0	True				
ANR	895758	RelationalExpression	"fprintf ( file , ""Job terminated.\\n"" ) < 0"		895635	0		<			
ANR	895759	CallExpression	"fprintf ( file , ""Job terminated.\\n"" )"		895635	0					
ANR	895760	Callee	fprintf		895635	0					
ANR	895761	Identifier	fprintf		895635	0					
ANR	895762	ArgumentList	file		895635	1					
ANR	895763	Argument	file		895635	0					
ANR	895764	Identifier	file		895635	0					
ANR	895765	Argument	"""Job terminated.\\n"""		895635	1					
ANR	895766	PrimaryExpression	"""Job terminated.\\n"""		895635	0					
ANR	895767	PrimaryExpression	0		895635	1					
ANR	895768	CompoundStatement		27:47:757:757	895635	1					
ANR	895769	ReturnStatement	return 0 ;	2708:3:59908:59916	895635	0	True				
ANR	895770	PrimaryExpression	0		895635	0					
ANR	895771	ReturnStatement	"return TerminatedEvent :: writeEvent ( file , ""Job"" ) ;"	2710:2:59924:59973	895635	10	True				
ANR	895772	CallExpression	"TerminatedEvent :: writeEvent ( file , ""Job"" )"		895635	0					
ANR	895773	Callee	TerminatedEvent :: writeEvent		895635	0					
ANR	895774	Identifier	TerminatedEvent :: writeEvent		895635	0					
ANR	895775	ArgumentList	file		895635	1					
ANR	895776	Argument	file		895635	0					
ANR	895777	Identifier	file		895635	0					
ANR	895778	Argument	"""Job"""		895635	1					
ANR	895779	PrimaryExpression	"""Job"""		895635	0					
ANR	895780	ReturnType	int		895635	1					
ANR	895781	Identifier	JobTerminatedEvent :: writeEvent		895635	2					
ANR	895782	ParameterList	FILE * file		895635	3					
ANR	895783	Parameter	FILE * file	2680:32:59133:59142	895635	0	True				
ANR	895784	ParameterType	FILE *		895635	0					
ANR	895785	Identifier	file		895635	1					
ANR	895786	CFGEntryNode	ENTRY		895635		True				
ANR	895787	CFGExitNode	EXIT		895635		True				
ANR	895788	Symbol	scheddname		895635						
ANR	895789	Symbol	D_ALWAYS		895635						
ANR	895790	Symbol	tmp . Value		895635						
ANR	895791	Symbol	EnvGetName		895635						
ANR	895792	Symbol	ENV_SCHEDD_NAME		895635						
ANR	895793	Symbol	QUILL_FAILURE		895635						
ANR	895794	Symbol	fprintf		895635						
ANR	895795	Symbol	FILEObj		895635						
ANR	895796	Symbol	* FILEObj		895635						
ANR	895797	Symbol	FILEObj -> file_updateEvent		895635						
ANR	895798	Symbol	& tmpCl1		895635						
ANR	895799	Symbol	file		895635						
ANR	895800	Symbol	tmpCl2		895635						
ANR	895801	Symbol	eventclock		895635						
ANR	895802	Symbol	tmp		895635						
ANR	895803	Symbol	& tmpCl2		895635						
ANR	895804	Symbol	tmpCl1		895635						
ANR	895805	Symbol	TerminatedEvent :: writeEvent		895635						
ANR	895806	Symbol	ULOG_JOB_TERMINATED		895635						
ANR	895807	Symbol	getenv		895635						
ANR	895808	Function	JobTerminatedEvent :: readEvent	2714:0:59979:60142							
ANR	895809	FunctionDef	JobTerminatedEvent :: readEvent (FILE * file)		895808	0					
ANR	895810	CompoundStatement		2716:0:60026:60142	895808	0					
ANR	895811	IfStatement	"if ( fscanf ( file , ""Job terminated."" ) == EOF )"		895808	0					
ANR	895812	Condition	"fscanf ( file , ""Job terminated."" ) == EOF"	2717:5:60033:60070	895808	0	True				
ANR	895813	EqualityExpression	"fscanf ( file , ""Job terminated."" ) == EOF"		895808	0		==			
ANR	895814	CallExpression	"fscanf ( file , ""Job terminated."" )"		895808	0					
ANR	895815	Callee	fscanf		895808	0					
ANR	895816	Identifier	fscanf		895808	0					
ANR	895817	ArgumentList	file		895808	1					
ANR	895818	Argument	file		895808	0					
ANR	895819	Identifier	file		895808	0					
ANR	895820	Argument	"""Job terminated."""		895808	1					
ANR	895821	PrimaryExpression	"""Job terminated."""		895808	0					
ANR	895822	Identifier	EOF		895808	1					
ANR	895823	CompoundStatement		2:46:47:47	895808	1					
ANR	895824	ReturnStatement	return 0 ;	2718:2:60078:60086	895808	0	True				
ANR	895825	PrimaryExpression	0		895808	0					
ANR	895826	ReturnStatement	"return TerminatedEvent :: readEvent ( file , ""Job"" ) ;"	2720:1:60092:60140	895808	1	True				
ANR	895827	CallExpression	"TerminatedEvent :: readEvent ( file , ""Job"" )"		895808	0					
ANR	895828	Callee	TerminatedEvent :: readEvent		895808	0					
ANR	895829	Identifier	TerminatedEvent :: readEvent		895808	0					
ANR	895830	ArgumentList	file		895808	1					
ANR	895831	Argument	file		895808	0					
ANR	895832	Identifier	file		895808	0					
ANR	895833	Argument	"""Job"""		895808	1					
ANR	895834	PrimaryExpression	"""Job"""		895808	0					
ANR	895835	ReturnType	int		895808	1					
ANR	895836	Identifier	JobTerminatedEvent :: readEvent		895808	2					
ANR	895837	ParameterList	FILE * file		895808	3					
ANR	895838	Parameter	FILE * file	2715:31:60014:60023	895808	0	True				
ANR	895839	ParameterType	FILE *		895808	0					
ANR	895840	Identifier	file		895808	1					
ANR	895841	CFGEntryNode	ENTRY		895808		True				
ANR	895842	CFGExitNode	EXIT		895808		True				
ANR	895843	Symbol	fscanf		895808						
ANR	895844	Symbol	file		895808						
ANR	895845	Symbol	TerminatedEvent :: readEvent		895808						
ANR	895846	Symbol	EOF		895808						
ANR	895847	Function	JobTerminatedEvent :: toClassAd	2723:0:60145:61989							
ANR	895848	FunctionDef	JobTerminatedEvent :: toClassAd ()		895847	0					
ANR	895849	CompoundStatement		2725:0:60190:61989	895847	0					
ANR	895850	IdentifierDeclStatement	ClassAd * myad = ULogEvent :: toClassAd ( ) ;	2726:1:60193:60231	895847	0	True				
ANR	895851	IdentifierDecl	* myad = ULogEvent :: toClassAd ( )		895847	0					
ANR	895852	IdentifierDeclType	ClassAd *		895847	0					
ANR	895853	Identifier	myad		895847	1					
ANR	895854	AssignmentExpression	* myad = ULogEvent :: toClassAd ( )		895847	2		=			
ANR	895855	Identifier	myad		895847	0					
ANR	895856	CallExpression	ULogEvent :: toClassAd ( )		895847	1					
ANR	895857	Callee	ULogEvent :: toClassAd		895847	0					
ANR	895858	Identifier	ULogEvent :: toClassAd		895847	0					
ANR	895859	ArgumentList			895847	1					
ANR	895860	IfStatement	if ( ! myad )		895847	1					
ANR	895861	Condition	! myad	2727:5:60238:60242	895847	0	True				
ANR	895862	UnaryOperationExpression	! myad		895847	0					
ANR	895863	UnaryOperator	!		895847	0					
ANR	895864	Identifier	myad		895847	1					
ANR	895865	ReturnStatement	return NULL ;	2727:13:60246:60257	895847	1	True				
ANR	895866	Identifier	NULL		895847	0					
ANR	895867	IdentifierDeclStatement	char buf0 [ 512 ] ;	2728:1:60260:60274	895847	2	True				
ANR	895868	IdentifierDecl	buf0 [ 512 ]		895847	0					
ANR	895869	IdentifierDeclType	char [ 512 ]		895847	0					
ANR	895870	Identifier	buf0		895847	1					
ANR	895871	PrimaryExpression	512		895847	2					
ANR	895872	ExpressionStatement	"snprintf ( buf0 , 512 , ""TerminatedNormally = %s"" , normal ? ""TRUE"" : ""FALSE"" )"	2730:1:60278:60351	895847	3	True				
ANR	895873	CallExpression	"snprintf ( buf0 , 512 , ""TerminatedNormally = %s"" , normal ? ""TRUE"" : ""FALSE"" )"		895847	0					
ANR	895874	Callee	snprintf		895847	0					
ANR	895875	Identifier	snprintf		895847	0					
ANR	895876	ArgumentList	buf0		895847	1					
ANR	895877	Argument	buf0		895847	0					
ANR	895878	Identifier	buf0		895847	0					
ANR	895879	Argument	512		895847	1					
ANR	895880	PrimaryExpression	512		895847	0					
ANR	895881	Argument	"""TerminatedNormally = %s"""		895847	2					
ANR	895882	PrimaryExpression	"""TerminatedNormally = %s"""		895847	0					
ANR	895883	Argument	"normal ? ""TRUE"" : ""FALSE"""		895847	3					
ANR	895884	ConditionalExpression	"normal ? ""TRUE"" : ""FALSE"""		895847	0					
ANR	895885	Condition	normal		895847	0					
ANR	895886	Identifier	normal		895847	0					
ANR	895887	PrimaryExpression	"""TRUE"""		895847	1					
ANR	895888	PrimaryExpression	"""FALSE"""		895847	2					
ANR	895889	ExpressionStatement	buf0 [ 511 ] = 0	2731:1:60354:60367	895847	4	True				
ANR	895890	AssignmentExpression	buf0 [ 511 ] = 0		895847	0		=			
ANR	895891	ArrayIndexing	buf0 [ 511 ]		895847	0					
ANR	895892	Identifier	buf0		895847	0					
ANR	895893	PrimaryExpression	511		895847	1					
ANR	895894	PrimaryExpression	0		895847	1					
ANR	895895	IfStatement	if ( ! myad -> Insert ( buf0 ) )		895847	5					
ANR	895896	Condition	! myad -> Insert ( buf0 )	2732:5:60374:60392	895847	0	True				
ANR	895897	UnaryOperationExpression	! myad -> Insert ( buf0 )		895847	0					
ANR	895898	UnaryOperator	!		895847	0					
ANR	895899	CallExpression	myad -> Insert ( buf0 )		895847	1					
ANR	895900	Callee	myad -> Insert		895847	0					
ANR	895901	PtrMemberAccess	myad -> Insert		895847	0					
ANR	895902	Identifier	myad		895847	0					
ANR	895903	Identifier	Insert		895847	1					
ANR	895904	ArgumentList	buf0		895847	1					
ANR	895905	Argument	buf0		895847	0					
ANR	895906	Identifier	buf0		895847	0					
ANR	895907	ReturnStatement	return NULL ;	2732:27:60396:60407	895847	1	True				
ANR	895908	Identifier	NULL		895847	0					
ANR	895909	IfStatement	if ( returnValue >= 0 )		895847	6					
ANR	895910	Condition	returnValue >= 0	2733:5:60414:60429	895847	0	True				
ANR	895911	RelationalExpression	returnValue >= 0		895847	0		>=			
ANR	895912	Identifier	returnValue		895847	0					
ANR	895913	PrimaryExpression	0		895847	1					
ANR	895914	CompoundStatement		9:24:242:242	895847	1					
ANR	895915	ExpressionStatement	"snprintf ( buf0 , 512 , ""ReturnValue = %d"" , returnValue )"	2734:2:60437:60489	895847	0	True				
ANR	895916	CallExpression	"snprintf ( buf0 , 512 , ""ReturnValue = %d"" , returnValue )"		895847	0					
ANR	895917	Callee	snprintf		895847	0					
ANR	895918	Identifier	snprintf		895847	0					
ANR	895919	ArgumentList	buf0		895847	1					
ANR	895920	Argument	buf0		895847	0					
ANR	895921	Identifier	buf0		895847	0					
ANR	895922	Argument	512		895847	1					
ANR	895923	PrimaryExpression	512		895847	0					
ANR	895924	Argument	"""ReturnValue = %d"""		895847	2					
ANR	895925	PrimaryExpression	"""ReturnValue = %d"""		895847	0					
ANR	895926	Argument	returnValue		895847	3					
ANR	895927	Identifier	returnValue		895847	0					
ANR	895928	ExpressionStatement	buf0 [ 511 ] = 0	2735:2:60493:60506	895847	1	True				
ANR	895929	AssignmentExpression	buf0 [ 511 ] = 0		895847	0		=			
ANR	895930	ArrayIndexing	buf0 [ 511 ]		895847	0					
ANR	895931	Identifier	buf0		895847	0					
ANR	895932	PrimaryExpression	511		895847	1					
ANR	895933	PrimaryExpression	0		895847	1					
ANR	895934	IfStatement	if ( ! myad -> Insert ( buf0 ) )		895847	2					
ANR	895935	Condition	! myad -> Insert ( buf0 )	2736:6:60514:60532	895847	0	True				
ANR	895936	UnaryOperationExpression	! myad -> Insert ( buf0 )		895847	0					
ANR	895937	UnaryOperator	!		895847	0					
ANR	895938	CallExpression	myad -> Insert ( buf0 )		895847	1					
ANR	895939	Callee	myad -> Insert		895847	0					
ANR	895940	PtrMemberAccess	myad -> Insert		895847	0					
ANR	895941	Identifier	myad		895847	0					
ANR	895942	Identifier	Insert		895847	1					
ANR	895943	ArgumentList	buf0		895847	1					
ANR	895944	Argument	buf0		895847	0					
ANR	895945	Identifier	buf0		895847	0					
ANR	895946	ReturnStatement	return NULL ;	2736:28:60536:60547	895847	1	True				
ANR	895947	Identifier	NULL		895847	0					
ANR	895948	IfStatement	if ( signalNumber >= 0 )		895847	7					
ANR	895949	Condition	signalNumber >= 0	2738:5:60557:60573	895847	0	True				
ANR	895950	RelationalExpression	signalNumber >= 0		895847	0		>=			
ANR	895951	Identifier	signalNumber		895847	0					
ANR	895952	PrimaryExpression	0		895847	1					
ANR	895953	CompoundStatement		14:25:386:386	895847	1					
ANR	895954	ExpressionStatement	"snprintf ( buf0 , 512 , ""TerminatedBySignal = %d"" , signalNumber )"	2739:2:60581:60641	895847	0	True				
ANR	895955	CallExpression	"snprintf ( buf0 , 512 , ""TerminatedBySignal = %d"" , signalNumber )"		895847	0					
ANR	895956	Callee	snprintf		895847	0					
ANR	895957	Identifier	snprintf		895847	0					
ANR	895958	ArgumentList	buf0		895847	1					
ANR	895959	Argument	buf0		895847	0					
ANR	895960	Identifier	buf0		895847	0					
ANR	895961	Argument	512		895847	1					
ANR	895962	PrimaryExpression	512		895847	0					
ANR	895963	Argument	"""TerminatedBySignal = %d"""		895847	2					
ANR	895964	PrimaryExpression	"""TerminatedBySignal = %d"""		895847	0					
ANR	895965	Argument	signalNumber		895847	3					
ANR	895966	Identifier	signalNumber		895847	0					
ANR	895967	ExpressionStatement	buf0 [ 511 ] = 0	2740:2:60645:60658	895847	1	True				
ANR	895968	AssignmentExpression	buf0 [ 511 ] = 0		895847	0		=			
ANR	895969	ArrayIndexing	buf0 [ 511 ]		895847	0					
ANR	895970	Identifier	buf0		895847	0					
ANR	895971	PrimaryExpression	511		895847	1					
ANR	895972	PrimaryExpression	0		895847	1					
ANR	895973	IfStatement	if ( ! myad -> Insert ( buf0 ) )		895847	2					
ANR	895974	Condition	! myad -> Insert ( buf0 )	2741:6:60666:60684	895847	0	True				
ANR	895975	UnaryOperationExpression	! myad -> Insert ( buf0 )		895847	0					
ANR	895976	UnaryOperator	!		895847	0					
ANR	895977	CallExpression	myad -> Insert ( buf0 )		895847	1					
ANR	895978	Callee	myad -> Insert		895847	0					
ANR	895979	PtrMemberAccess	myad -> Insert		895847	0					
ANR	895980	Identifier	myad		895847	0					
ANR	895981	Identifier	Insert		895847	1					
ANR	895982	ArgumentList	buf0		895847	1					
ANR	895983	Argument	buf0		895847	0					
ANR	895984	Identifier	buf0		895847	0					
ANR	895985	ReturnStatement	return NULL ;	2741:28:60688:60699	895847	1	True				
ANR	895986	Identifier	NULL		895847	0					
ANR	895987	IdentifierDeclStatement	const char * core = getCoreFile ( ) ;	2744:1:60706:60738	895847	8	True				
ANR	895988	IdentifierDecl	* core = getCoreFile ( )		895847	0					
ANR	895989	IdentifierDeclType	const char *		895847	0					
ANR	895990	Identifier	core		895847	1					
ANR	895991	AssignmentExpression	* core = getCoreFile ( )		895847	2		=			
ANR	895992	Identifier	core		895847	0					
ANR	895993	CallExpression	getCoreFile ( )		895847	1					
ANR	895994	Callee	getCoreFile		895847	0					
ANR	895995	Identifier	getCoreFile		895847	0					
ANR	895996	ArgumentList			895847	1					
ANR	895997	IfStatement	if ( core )		895847	9					
ANR	895998	Condition	core	2745:5:60745:60748	895847	0	True				
ANR	895999	Identifier	core		895847	0					
ANR	896000	CompoundStatement		22:2:565:578	895847	1					
ANR	896001	IdentifierDeclStatement	MyString buf3 ;	2746:2:60756:60769	895847	0	True				
ANR	896002	IdentifierDecl	buf3		895847	0					
ANR	896003	IdentifierDeclType	MyString		895847	0					
ANR	896004	Identifier	buf3		895847	1					
ANR	896005	ExpressionStatement	"buf3 . sprintf ( ""CoreFile = \\""%s\\"""" , core )"	2747:2:60773:60812	895847	1	True				
ANR	896006	CallExpression	"buf3 . sprintf ( ""CoreFile = \\""%s\\"""" , core )"		895847	0					
ANR	896007	Callee	buf3 . sprintf		895847	0					
ANR	896008	MemberAccess	buf3 . sprintf		895847	0					
ANR	896009	Identifier	buf3		895847	0					
ANR	896010	Identifier	sprintf		895847	1					
ANR	896011	ArgumentList	"""CoreFile = \\""%s\\"""""		895847	1					
ANR	896012	Argument	"""CoreFile = \\""%s\\"""""		895847	0					
ANR	896013	PrimaryExpression	"""CoreFile = \\""%s\\"""""		895847	0					
ANR	896014	Argument	core		895847	1					
ANR	896015	Identifier	core		895847	0					
ANR	896016	IfStatement	if ( ! myad -> Insert ( buf3 . Value ( ) ) )		895847	2					
ANR	896017	Condition	! myad -> Insert ( buf3 . Value ( ) )	2748:6:60820:60846	895847	0	True				
ANR	896018	UnaryOperationExpression	! myad -> Insert ( buf3 . Value ( ) )		895847	0					
ANR	896019	UnaryOperator	!		895847	0					
ANR	896020	CallExpression	myad -> Insert ( buf3 . Value ( ) )		895847	1					
ANR	896021	Callee	myad -> Insert		895847	0					
ANR	896022	PtrMemberAccess	myad -> Insert		895847	0					
ANR	896023	Identifier	myad		895847	0					
ANR	896024	Identifier	Insert		895847	1					
ANR	896025	ArgumentList	buf3 . Value ( )		895847	1					
ANR	896026	Argument	buf3 . Value ( )		895847	0					
ANR	896027	CallExpression	buf3 . Value ( )		895847	0					
ANR	896028	Callee	buf3 . Value		895847	0					
ANR	896029	MemberAccess	buf3 . Value		895847	0					
ANR	896030	Identifier	buf3		895847	0					
ANR	896031	Identifier	Value		895847	1					
ANR	896032	ArgumentList			895847	1					
ANR	896033	ReturnStatement	return NULL ;	2748:36:60850:60861	895847	1	True				
ANR	896034	Identifier	NULL		895847	0					
ANR	896035	IdentifierDeclStatement	char * rs = rusageToStr ( run_local_rusage ) ;	2751:1:60868:60908	895847	10	True				
ANR	896036	IdentifierDecl	* rs = rusageToStr ( run_local_rusage )		895847	0					
ANR	896037	IdentifierDeclType	char *		895847	0					
ANR	896038	Identifier	rs		895847	1					
ANR	896039	AssignmentExpression	* rs = rusageToStr ( run_local_rusage )		895847	2		=			
ANR	896040	Identifier	rs		895847	0					
ANR	896041	CallExpression	rusageToStr ( run_local_rusage )		895847	1					
ANR	896042	Callee	rusageToStr		895847	0					
ANR	896043	Identifier	rusageToStr		895847	0					
ANR	896044	ArgumentList	run_local_rusage		895847	1					
ANR	896045	Argument	run_local_rusage		895847	0					
ANR	896046	Identifier	run_local_rusage		895847	0					
ANR	896047	ExpressionStatement	"snprintf ( buf0 , 512 , ""RunLocalUsage = \\""%s\\"""" , rs )"	2752:1:60911:60960	895847	11	True				
ANR	896048	CallExpression	"snprintf ( buf0 , 512 , ""RunLocalUsage = \\""%s\\"""" , rs )"		895847	0					
ANR	896049	Callee	snprintf		895847	0					
ANR	896050	Identifier	snprintf		895847	0					
ANR	896051	ArgumentList	buf0		895847	1					
ANR	896052	Argument	buf0		895847	0					
ANR	896053	Identifier	buf0		895847	0					
ANR	896054	Argument	512		895847	1					
ANR	896055	PrimaryExpression	512		895847	0					
ANR	896056	Argument	"""RunLocalUsage = \\""%s\\"""""		895847	2					
ANR	896057	PrimaryExpression	"""RunLocalUsage = \\""%s\\"""""		895847	0					
ANR	896058	Argument	rs		895847	3					
ANR	896059	Identifier	rs		895847	0					
ANR	896060	ExpressionStatement	free ( rs )	2753:1:60963:60971	895847	12	True				
ANR	896061	CallExpression	free ( rs )		895847	0					
ANR	896062	Callee	free		895847	0					
ANR	896063	Identifier	free		895847	0					
ANR	896064	ArgumentList	rs		895847	1					
ANR	896065	Argument	rs		895847	0					
ANR	896066	Identifier	rs		895847	0					
ANR	896067	ExpressionStatement	buf0 [ 511 ] = 0	2754:1:60974:60987	895847	13	True				
ANR	896068	AssignmentExpression	buf0 [ 511 ] = 0		895847	0		=			
ANR	896069	ArrayIndexing	buf0 [ 511 ]		895847	0					
ANR	896070	Identifier	buf0		895847	0					
ANR	896071	PrimaryExpression	511		895847	1					
ANR	896072	PrimaryExpression	0		895847	1					
ANR	896073	IfStatement	if ( ! myad -> Insert ( buf0 ) )		895847	14					
ANR	896074	Condition	! myad -> Insert ( buf0 )	2755:5:60994:61012	895847	0	True				
ANR	896075	UnaryOperationExpression	! myad -> Insert ( buf0 )		895847	0					
ANR	896076	UnaryOperator	!		895847	0					
ANR	896077	CallExpression	myad -> Insert ( buf0 )		895847	1					
ANR	896078	Callee	myad -> Insert		895847	0					
ANR	896079	PtrMemberAccess	myad -> Insert		895847	0					
ANR	896080	Identifier	myad		895847	0					
ANR	896081	Identifier	Insert		895847	1					
ANR	896082	ArgumentList	buf0		895847	1					
ANR	896083	Argument	buf0		895847	0					
ANR	896084	Identifier	buf0		895847	0					
ANR	896085	ReturnStatement	return NULL ;	2755:27:61016:61027	895847	1	True				
ANR	896086	Identifier	NULL		895847	0					
ANR	896087	ExpressionStatement	rs = rusageToStr ( run_remote_rusage )	2756:1:61030:61065	895847	15	True				
ANR	896088	AssignmentExpression	rs = rusageToStr ( run_remote_rusage )		895847	0		=			
ANR	896089	Identifier	rs		895847	0					
ANR	896090	CallExpression	rusageToStr ( run_remote_rusage )		895847	1					
ANR	896091	Callee	rusageToStr		895847	0					
ANR	896092	Identifier	rusageToStr		895847	0					
ANR	896093	ArgumentList	run_remote_rusage		895847	1					
ANR	896094	Argument	run_remote_rusage		895847	0					
ANR	896095	Identifier	run_remote_rusage		895847	0					
ANR	896096	ExpressionStatement	"snprintf ( buf0 , 512 , ""RunRemoteUsage = \\""%s\\"""" , rs )"	2757:1:61068:61118	895847	16	True				
ANR	896097	CallExpression	"snprintf ( buf0 , 512 , ""RunRemoteUsage = \\""%s\\"""" , rs )"		895847	0					
ANR	896098	Callee	snprintf		895847	0					
ANR	896099	Identifier	snprintf		895847	0					
ANR	896100	ArgumentList	buf0		895847	1					
ANR	896101	Argument	buf0		895847	0					
ANR	896102	Identifier	buf0		895847	0					
ANR	896103	Argument	512		895847	1					
ANR	896104	PrimaryExpression	512		895847	0					
ANR	896105	Argument	"""RunRemoteUsage = \\""%s\\"""""		895847	2					
ANR	896106	PrimaryExpression	"""RunRemoteUsage = \\""%s\\"""""		895847	0					
ANR	896107	Argument	rs		895847	3					
ANR	896108	Identifier	rs		895847	0					
ANR	896109	ExpressionStatement	free ( rs )	2758:1:61121:61129	895847	17	True				
ANR	896110	CallExpression	free ( rs )		895847	0					
ANR	896111	Callee	free		895847	0					
ANR	896112	Identifier	free		895847	0					
ANR	896113	ArgumentList	rs		895847	1					
ANR	896114	Argument	rs		895847	0					
ANR	896115	Identifier	rs		895847	0					
ANR	896116	ExpressionStatement	buf0 [ 511 ] = 0	2759:1:61132:61145	895847	18	True				
ANR	896117	AssignmentExpression	buf0 [ 511 ] = 0		895847	0		=			
ANR	896118	ArrayIndexing	buf0 [ 511 ]		895847	0					
ANR	896119	Identifier	buf0		895847	0					
ANR	896120	PrimaryExpression	511		895847	1					
ANR	896121	PrimaryExpression	0		895847	1					
ANR	896122	IfStatement	if ( ! myad -> Insert ( buf0 ) )		895847	19					
ANR	896123	Condition	! myad -> Insert ( buf0 )	2760:5:61152:61170	895847	0	True				
ANR	896124	UnaryOperationExpression	! myad -> Insert ( buf0 )		895847	0					
ANR	896125	UnaryOperator	!		895847	0					
ANR	896126	CallExpression	myad -> Insert ( buf0 )		895847	1					
ANR	896127	Callee	myad -> Insert		895847	0					
ANR	896128	PtrMemberAccess	myad -> Insert		895847	0					
ANR	896129	Identifier	myad		895847	0					
ANR	896130	Identifier	Insert		895847	1					
ANR	896131	ArgumentList	buf0		895847	1					
ANR	896132	Argument	buf0		895847	0					
ANR	896133	Identifier	buf0		895847	0					
ANR	896134	ReturnStatement	return NULL ;	2760:27:61174:61185	895847	1	True				
ANR	896135	Identifier	NULL		895847	0					
ANR	896136	ExpressionStatement	rs = rusageToStr ( total_local_rusage )	2761:1:61188:61224	895847	20	True				
ANR	896137	AssignmentExpression	rs = rusageToStr ( total_local_rusage )		895847	0		=			
ANR	896138	Identifier	rs		895847	0					
ANR	896139	CallExpression	rusageToStr ( total_local_rusage )		895847	1					
ANR	896140	Callee	rusageToStr		895847	0					
ANR	896141	Identifier	rusageToStr		895847	0					
ANR	896142	ArgumentList	total_local_rusage		895847	1					
ANR	896143	Argument	total_local_rusage		895847	0					
ANR	896144	Identifier	total_local_rusage		895847	0					
ANR	896145	ExpressionStatement	"snprintf ( buf0 , 512 , ""TotalLocalUsage = \\""%s\\"""" , rs )"	2762:1:61227:61278	895847	21	True				
ANR	896146	CallExpression	"snprintf ( buf0 , 512 , ""TotalLocalUsage = \\""%s\\"""" , rs )"		895847	0					
ANR	896147	Callee	snprintf		895847	0					
ANR	896148	Identifier	snprintf		895847	0					
ANR	896149	ArgumentList	buf0		895847	1					
ANR	896150	Argument	buf0		895847	0					
ANR	896151	Identifier	buf0		895847	0					
ANR	896152	Argument	512		895847	1					
ANR	896153	PrimaryExpression	512		895847	0					
ANR	896154	Argument	"""TotalLocalUsage = \\""%s\\"""""		895847	2					
ANR	896155	PrimaryExpression	"""TotalLocalUsage = \\""%s\\"""""		895847	0					
ANR	896156	Argument	rs		895847	3					
ANR	896157	Identifier	rs		895847	0					
ANR	896158	ExpressionStatement	free ( rs )	2763:1:61281:61289	895847	22	True				
ANR	896159	CallExpression	free ( rs )		895847	0					
ANR	896160	Callee	free		895847	0					
ANR	896161	Identifier	free		895847	0					
ANR	896162	ArgumentList	rs		895847	1					
ANR	896163	Argument	rs		895847	0					
ANR	896164	Identifier	rs		895847	0					
ANR	896165	ExpressionStatement	buf0 [ 511 ] = 0	2764:1:61292:61305	895847	23	True				
ANR	896166	AssignmentExpression	buf0 [ 511 ] = 0		895847	0		=			
ANR	896167	ArrayIndexing	buf0 [ 511 ]		895847	0					
ANR	896168	Identifier	buf0		895847	0					
ANR	896169	PrimaryExpression	511		895847	1					
ANR	896170	PrimaryExpression	0		895847	1					
ANR	896171	IfStatement	if ( ! myad -> Insert ( buf0 ) )		895847	24					
ANR	896172	Condition	! myad -> Insert ( buf0 )	2765:5:61312:61330	895847	0	True				
ANR	896173	UnaryOperationExpression	! myad -> Insert ( buf0 )		895847	0					
ANR	896174	UnaryOperator	!		895847	0					
ANR	896175	CallExpression	myad -> Insert ( buf0 )		895847	1					
ANR	896176	Callee	myad -> Insert		895847	0					
ANR	896177	PtrMemberAccess	myad -> Insert		895847	0					
ANR	896178	Identifier	myad		895847	0					
ANR	896179	Identifier	Insert		895847	1					
ANR	896180	ArgumentList	buf0		895847	1					
ANR	896181	Argument	buf0		895847	0					
ANR	896182	Identifier	buf0		895847	0					
ANR	896183	ReturnStatement	return NULL ;	2765:27:61334:61345	895847	1	True				
ANR	896184	Identifier	NULL		895847	0					
ANR	896185	ExpressionStatement	rs = rusageToStr ( total_remote_rusage )	2766:1:61348:61385	895847	25	True				
ANR	896186	AssignmentExpression	rs = rusageToStr ( total_remote_rusage )		895847	0		=			
ANR	896187	Identifier	rs		895847	0					
ANR	896188	CallExpression	rusageToStr ( total_remote_rusage )		895847	1					
ANR	896189	Callee	rusageToStr		895847	0					
ANR	896190	Identifier	rusageToStr		895847	0					
ANR	896191	ArgumentList	total_remote_rusage		895847	1					
ANR	896192	Argument	total_remote_rusage		895847	0					
ANR	896193	Identifier	total_remote_rusage		895847	0					
ANR	896194	ExpressionStatement	"snprintf ( buf0 , 512 , ""TotalRemoteUsage = \\""%s\\"""" , rs )"	2767:1:61388:61440	895847	26	True				
ANR	896195	CallExpression	"snprintf ( buf0 , 512 , ""TotalRemoteUsage = \\""%s\\"""" , rs )"		895847	0					
ANR	896196	Callee	snprintf		895847	0					
ANR	896197	Identifier	snprintf		895847	0					
ANR	896198	ArgumentList	buf0		895847	1					
ANR	896199	Argument	buf0		895847	0					
ANR	896200	Identifier	buf0		895847	0					
ANR	896201	Argument	512		895847	1					
ANR	896202	PrimaryExpression	512		895847	0					
ANR	896203	Argument	"""TotalRemoteUsage = \\""%s\\"""""		895847	2					
ANR	896204	PrimaryExpression	"""TotalRemoteUsage = \\""%s\\"""""		895847	0					
ANR	896205	Argument	rs		895847	3					
ANR	896206	Identifier	rs		895847	0					
ANR	896207	ExpressionStatement	free ( rs )	2768:1:61443:61451	895847	27	True				
ANR	896208	CallExpression	free ( rs )		895847	0					
ANR	896209	Callee	free		895847	0					
ANR	896210	Identifier	free		895847	0					
ANR	896211	ArgumentList	rs		895847	1					
ANR	896212	Argument	rs		895847	0					
ANR	896213	Identifier	rs		895847	0					
ANR	896214	ExpressionStatement	buf0 [ 511 ] = 0	2769:1:61454:61467	895847	28	True				
ANR	896215	AssignmentExpression	buf0 [ 511 ] = 0		895847	0		=			
ANR	896216	ArrayIndexing	buf0 [ 511 ]		895847	0					
ANR	896217	Identifier	buf0		895847	0					
ANR	896218	PrimaryExpression	511		895847	1					
ANR	896219	PrimaryExpression	0		895847	1					
ANR	896220	IfStatement	if ( ! myad -> Insert ( buf0 ) )		895847	29					
ANR	896221	Condition	! myad -> Insert ( buf0 )	2770:5:61474:61492	895847	0	True				
ANR	896222	UnaryOperationExpression	! myad -> Insert ( buf0 )		895847	0					
ANR	896223	UnaryOperator	!		895847	0					
ANR	896224	CallExpression	myad -> Insert ( buf0 )		895847	1					
ANR	896225	Callee	myad -> Insert		895847	0					
ANR	896226	PtrMemberAccess	myad -> Insert		895847	0					
ANR	896227	Identifier	myad		895847	0					
ANR	896228	Identifier	Insert		895847	1					
ANR	896229	ArgumentList	buf0		895847	1					
ANR	896230	Argument	buf0		895847	0					
ANR	896231	Identifier	buf0		895847	0					
ANR	896232	ReturnStatement	return NULL ;	2770:27:61496:61507	895847	1	True				
ANR	896233	Identifier	NULL		895847	0					
ANR	896234	ExpressionStatement	"snprintf ( buf0 , 512 , ""SentBytes = %f"" , sent_bytes )"	2772:1:61511:61560	895847	30	True				
ANR	896235	CallExpression	"snprintf ( buf0 , 512 , ""SentBytes = %f"" , sent_bytes )"		895847	0					
ANR	896236	Callee	snprintf		895847	0					
ANR	896237	Identifier	snprintf		895847	0					
ANR	896238	ArgumentList	buf0		895847	1					
ANR	896239	Argument	buf0		895847	0					
ANR	896240	Identifier	buf0		895847	0					
ANR	896241	Argument	512		895847	1					
ANR	896242	PrimaryExpression	512		895847	0					
ANR	896243	Argument	"""SentBytes = %f"""		895847	2					
ANR	896244	PrimaryExpression	"""SentBytes = %f"""		895847	0					
ANR	896245	Argument	sent_bytes		895847	3					
ANR	896246	Identifier	sent_bytes		895847	0					
ANR	896247	ExpressionStatement	buf0 [ 511 ] = 0	2773:1:61563:61576	895847	31	True				
ANR	896248	AssignmentExpression	buf0 [ 511 ] = 0		895847	0		=			
ANR	896249	ArrayIndexing	buf0 [ 511 ]		895847	0					
ANR	896250	Identifier	buf0		895847	0					
ANR	896251	PrimaryExpression	511		895847	1					
ANR	896252	PrimaryExpression	0		895847	1					
ANR	896253	IfStatement	if ( ! myad -> Insert ( buf0 ) )		895847	32					
ANR	896254	Condition	! myad -> Insert ( buf0 )	2774:5:61583:61601	895847	0	True				
ANR	896255	UnaryOperationExpression	! myad -> Insert ( buf0 )		895847	0					
ANR	896256	UnaryOperator	!		895847	0					
ANR	896257	CallExpression	myad -> Insert ( buf0 )		895847	1					
ANR	896258	Callee	myad -> Insert		895847	0					
ANR	896259	PtrMemberAccess	myad -> Insert		895847	0					
ANR	896260	Identifier	myad		895847	0					
ANR	896261	Identifier	Insert		895847	1					
ANR	896262	ArgumentList	buf0		895847	1					
ANR	896263	Argument	buf0		895847	0					
ANR	896264	Identifier	buf0		895847	0					
ANR	896265	ReturnStatement	return NULL ;	2774:27:61605:61616	895847	1	True				
ANR	896266	Identifier	NULL		895847	0					
ANR	896267	ExpressionStatement	"snprintf ( buf0 , 512 , ""ReceivedBytes = %f"" , recvd_bytes )"	2775:1:61619:61673	895847	33	True				
ANR	896268	CallExpression	"snprintf ( buf0 , 512 , ""ReceivedBytes = %f"" , recvd_bytes )"		895847	0					
ANR	896269	Callee	snprintf		895847	0					
ANR	896270	Identifier	snprintf		895847	0					
ANR	896271	ArgumentList	buf0		895847	1					
ANR	896272	Argument	buf0		895847	0					
ANR	896273	Identifier	buf0		895847	0					
ANR	896274	Argument	512		895847	1					
ANR	896275	PrimaryExpression	512		895847	0					
ANR	896276	Argument	"""ReceivedBytes = %f"""		895847	2					
ANR	896277	PrimaryExpression	"""ReceivedBytes = %f"""		895847	0					
ANR	896278	Argument	recvd_bytes		895847	3					
ANR	896279	Identifier	recvd_bytes		895847	0					
ANR	896280	ExpressionStatement	buf0 [ 511 ] = 0	2776:1:61676:61689	895847	34	True				
ANR	896281	AssignmentExpression	buf0 [ 511 ] = 0		895847	0		=			
ANR	896282	ArrayIndexing	buf0 [ 511 ]		895847	0					
ANR	896283	Identifier	buf0		895847	0					
ANR	896284	PrimaryExpression	511		895847	1					
ANR	896285	PrimaryExpression	0		895847	1					
ANR	896286	IfStatement	if ( ! myad -> Insert ( buf0 ) )		895847	35					
ANR	896287	Condition	! myad -> Insert ( buf0 )	2777:5:61696:61714	895847	0	True				
ANR	896288	UnaryOperationExpression	! myad -> Insert ( buf0 )		895847	0					
ANR	896289	UnaryOperator	!		895847	0					
ANR	896290	CallExpression	myad -> Insert ( buf0 )		895847	1					
ANR	896291	Callee	myad -> Insert		895847	0					
ANR	896292	PtrMemberAccess	myad -> Insert		895847	0					
ANR	896293	Identifier	myad		895847	0					
ANR	896294	Identifier	Insert		895847	1					
ANR	896295	ArgumentList	buf0		895847	1					
ANR	896296	Argument	buf0		895847	0					
ANR	896297	Identifier	buf0		895847	0					
ANR	896298	ReturnStatement	return NULL ;	2777:27:61718:61729	895847	1	True				
ANR	896299	Identifier	NULL		895847	0					
ANR	896300	ExpressionStatement	"snprintf ( buf0 , 512 , ""TotalSentBytes = %f"" , total_sent_bytes )"	2778:1:61732:61792	895847	36	True				
ANR	896301	CallExpression	"snprintf ( buf0 , 512 , ""TotalSentBytes = %f"" , total_sent_bytes )"		895847	0					
ANR	896302	Callee	snprintf		895847	0					
ANR	896303	Identifier	snprintf		895847	0					
ANR	896304	ArgumentList	buf0		895847	1					
ANR	896305	Argument	buf0		895847	0					
ANR	896306	Identifier	buf0		895847	0					
ANR	896307	Argument	512		895847	1					
ANR	896308	PrimaryExpression	512		895847	0					
ANR	896309	Argument	"""TotalSentBytes = %f"""		895847	2					
ANR	896310	PrimaryExpression	"""TotalSentBytes = %f"""		895847	0					
ANR	896311	Argument	total_sent_bytes		895847	3					
ANR	896312	Identifier	total_sent_bytes		895847	0					
ANR	896313	ExpressionStatement	buf0 [ 511 ] = 0	2779:1:61795:61808	895847	37	True				
ANR	896314	AssignmentExpression	buf0 [ 511 ] = 0		895847	0		=			
ANR	896315	ArrayIndexing	buf0 [ 511 ]		895847	0					
ANR	896316	Identifier	buf0		895847	0					
ANR	896317	PrimaryExpression	511		895847	1					
ANR	896318	PrimaryExpression	0		895847	1					
ANR	896319	IfStatement	if ( ! myad -> Insert ( buf0 ) )		895847	38					
ANR	896320	Condition	! myad -> Insert ( buf0 )	2780:5:61815:61833	895847	0	True				
ANR	896321	UnaryOperationExpression	! myad -> Insert ( buf0 )		895847	0					
ANR	896322	UnaryOperator	!		895847	0					
ANR	896323	CallExpression	myad -> Insert ( buf0 )		895847	1					
ANR	896324	Callee	myad -> Insert		895847	0					
ANR	896325	PtrMemberAccess	myad -> Insert		895847	0					
ANR	896326	Identifier	myad		895847	0					
ANR	896327	Identifier	Insert		895847	1					
ANR	896328	ArgumentList	buf0		895847	1					
ANR	896329	Argument	buf0		895847	0					
ANR	896330	Identifier	buf0		895847	0					
ANR	896331	ReturnStatement	return NULL ;	2780:27:61837:61848	895847	1	True				
ANR	896332	Identifier	NULL		895847	0					
ANR	896333	ExpressionStatement	"snprintf ( buf0 , 512 , ""TotalReceivedBytes = %f"" , total_recvd_bytes )"	2781:1:61851:61916	895847	39	True				
ANR	896334	CallExpression	"snprintf ( buf0 , 512 , ""TotalReceivedBytes = %f"" , total_recvd_bytes )"		895847	0					
ANR	896335	Callee	snprintf		895847	0					
ANR	896336	Identifier	snprintf		895847	0					
ANR	896337	ArgumentList	buf0		895847	1					
ANR	896338	Argument	buf0		895847	0					
ANR	896339	Identifier	buf0		895847	0					
ANR	896340	Argument	512		895847	1					
ANR	896341	PrimaryExpression	512		895847	0					
ANR	896342	Argument	"""TotalReceivedBytes = %f"""		895847	2					
ANR	896343	PrimaryExpression	"""TotalReceivedBytes = %f"""		895847	0					
ANR	896344	Argument	total_recvd_bytes		895847	3					
ANR	896345	Identifier	total_recvd_bytes		895847	0					
ANR	896346	ExpressionStatement	buf0 [ 511 ] = 0	2782:1:61919:61932	895847	40	True				
ANR	896347	AssignmentExpression	buf0 [ 511 ] = 0		895847	0		=			
ANR	896348	ArrayIndexing	buf0 [ 511 ]		895847	0					
ANR	896349	Identifier	buf0		895847	0					
ANR	896350	PrimaryExpression	511		895847	1					
ANR	896351	PrimaryExpression	0		895847	1					
ANR	896352	IfStatement	if ( ! myad -> Insert ( buf0 ) )		895847	41					
ANR	896353	Condition	! myad -> Insert ( buf0 )	2783:5:61939:61957	895847	0	True				
ANR	896354	UnaryOperationExpression	! myad -> Insert ( buf0 )		895847	0					
ANR	896355	UnaryOperator	!		895847	0					
ANR	896356	CallExpression	myad -> Insert ( buf0 )		895847	1					
ANR	896357	Callee	myad -> Insert		895847	0					
ANR	896358	PtrMemberAccess	myad -> Insert		895847	0					
ANR	896359	Identifier	myad		895847	0					
ANR	896360	Identifier	Insert		895847	1					
ANR	896361	ArgumentList	buf0		895847	1					
ANR	896362	Argument	buf0		895847	0					
ANR	896363	Identifier	buf0		895847	0					
ANR	896364	ReturnStatement	return NULL ;	2783:27:61961:61972	895847	1	True				
ANR	896365	Identifier	NULL		895847	0					
ANR	896366	ReturnStatement	return myad ;	2785:1:61976:61987	895847	42	True				
ANR	896367	Identifier	myad		895847	0					
ANR	896368	ReturnType	ClassAd *		895847	1					
ANR	896369	Identifier	JobTerminatedEvent :: toClassAd		895847	2					
ANR	896370	ParameterList			895847	3					
ANR	896371	CFGEntryNode	ENTRY		895847		True				
ANR	896372	CFGExitNode	EXIT		895847		True				
ANR	896373	Symbol	normal		895847						
ANR	896374	Symbol	rusageToStr		895847						
ANR	896375	Symbol	run_local_rusage		895847						
ANR	896376	Symbol	rs		895847						
ANR	896377	Symbol	NULL		895847						
ANR	896378	Symbol	returnValue		895847						
ANR	896379	Symbol	total_sent_bytes		895847						
ANR	896380	Symbol	* myad		895847						
ANR	896381	Symbol	total_local_rusage		895847						
ANR	896382	Symbol	myad -> Insert		895847						
ANR	896383	Symbol	getCoreFile		895847						
ANR	896384	Symbol	buf3 . Value		895847						
ANR	896385	Symbol	ULogEvent :: toClassAd		895847						
ANR	896386	Symbol	signalNumber		895847						
ANR	896387	Symbol	buf3		895847						
ANR	896388	Symbol	* buf0		895847						
ANR	896389	Symbol	sent_bytes		895847						
ANR	896390	Symbol	core		895847						
ANR	896391	Symbol	buf0		895847						
ANR	896392	Symbol	total_recvd_bytes		895847						
ANR	896393	Symbol	recvd_bytes		895847						
ANR	896394	Symbol	run_remote_rusage		895847						
ANR	896395	Symbol	myad		895847						
ANR	896396	Symbol	total_remote_rusage		895847						
ANR	896397	Function	JobTerminatedEvent :: initFromClassAd	2788:0:61992:63112							
ANR	896398	FunctionDef	JobTerminatedEvent :: initFromClassAd (ClassAd * ad)		896397	0					
ANR	896399	CompoundStatement		2790:0:62046:63112	896397	0					
ANR	896400	ExpressionStatement	ULogEvent :: initFromClassAd ( ad )	2791:1:62049:62079	896397	0	True				
ANR	896401	CallExpression	ULogEvent :: initFromClassAd ( ad )		896397	0					
ANR	896402	Callee	ULogEvent :: initFromClassAd		896397	0					
ANR	896403	Identifier	ULogEvent :: initFromClassAd		896397	0					
ANR	896404	ArgumentList	ad		896397	1					
ANR	896405	Argument	ad		896397	0					
ANR	896406	Identifier	ad		896397	0					
ANR	896407	IfStatement	if ( ! ad )		896397	1					
ANR	896408	Condition	! ad	2793:5:62087:62089	896397	0	True				
ANR	896409	UnaryOperationExpression	! ad		896397	0					
ANR	896410	UnaryOperator	!		896397	0					
ANR	896411	Identifier	ad		896397	1					
ANR	896412	ReturnStatement	return ;	2793:11:62093:62099	896397	1	True				
ANR	896413	IdentifierDeclStatement	int reallybool ;	2795:1:62103:62117	896397	2	True				
ANR	896414	IdentifierDecl	reallybool		896397	0					
ANR	896415	IdentifierDeclType	int		896397	0					
ANR	896416	Identifier	reallybool		896397	1					
ANR	896417	IfStatement	"if ( ad -> LookupInteger ( ""TerminatedNormally"" , reallybool ) )"		896397	3					
ANR	896418	Condition	"ad -> LookupInteger ( ""TerminatedNormally"" , reallybool )"	2796:5:62124:62174	896397	0	True				
ANR	896419	CallExpression	"ad -> LookupInteger ( ""TerminatedNormally"" , reallybool )"		896397	0					
ANR	896420	Callee	ad -> LookupInteger		896397	0					
ANR	896421	PtrMemberAccess	ad -> LookupInteger		896397	0					
ANR	896422	Identifier	ad		896397	0					
ANR	896423	Identifier	LookupInteger		896397	1					
ANR	896424	ArgumentList	"""TerminatedNormally"""		896397	1					
ANR	896425	Argument	"""TerminatedNormally"""		896397	0					
ANR	896426	PrimaryExpression	"""TerminatedNormally"""		896397	0					
ANR	896427	Argument	reallybool		896397	1					
ANR	896428	Identifier	reallybool		896397	0					
ANR	896429	CompoundStatement		7:59:131:131	896397	1					
ANR	896430	ExpressionStatement	normal = reallybool ? TRUE : FALSE	2797:2:62182:62216	896397	0	True				
ANR	896431	AssignmentExpression	normal = reallybool ? TRUE : FALSE		896397	0		=			
ANR	896432	Identifier	normal		896397	0					
ANR	896433	ConditionalExpression	reallybool ? TRUE : FALSE		896397	1					
ANR	896434	Condition	reallybool		896397	0					
ANR	896435	Identifier	reallybool		896397	0					
ANR	896436	Identifier	TRUE		896397	1					
ANR	896437	Identifier	FALSE		896397	2					
ANR	896438	ExpressionStatement	"ad -> LookupInteger ( ""ReturnValue"" , returnValue )"	2800:1:62223:62268	896397	4	True				
ANR	896439	CallExpression	"ad -> LookupInteger ( ""ReturnValue"" , returnValue )"		896397	0					
ANR	896440	Callee	ad -> LookupInteger		896397	0					
ANR	896441	PtrMemberAccess	ad -> LookupInteger		896397	0					
ANR	896442	Identifier	ad		896397	0					
ANR	896443	Identifier	LookupInteger		896397	1					
ANR	896444	ArgumentList	"""ReturnValue"""		896397	1					
ANR	896445	Argument	"""ReturnValue"""		896397	0					
ANR	896446	PrimaryExpression	"""ReturnValue"""		896397	0					
ANR	896447	Argument	returnValue		896397	1					
ANR	896448	Identifier	returnValue		896397	0					
ANR	896449	ExpressionStatement	"ad -> LookupInteger ( ""TerminatedBySignal"" , signalNumber )"	2801:1:62271:62324	896397	5	True				
ANR	896450	CallExpression	"ad -> LookupInteger ( ""TerminatedBySignal"" , signalNumber )"		896397	0					
ANR	896451	Callee	ad -> LookupInteger		896397	0					
ANR	896452	PtrMemberAccess	ad -> LookupInteger		896397	0					
ANR	896453	Identifier	ad		896397	0					
ANR	896454	Identifier	LookupInteger		896397	1					
ANR	896455	ArgumentList	"""TerminatedBySignal"""		896397	1					
ANR	896456	Argument	"""TerminatedBySignal"""		896397	0					
ANR	896457	PrimaryExpression	"""TerminatedBySignal"""		896397	0					
ANR	896458	Argument	signalNumber		896397	1					
ANR	896459	Identifier	signalNumber		896397	0					
ANR	896460	IdentifierDeclStatement	char * multi = NULL ;	2803:1:62328:62346	896397	6	True				
ANR	896461	IdentifierDecl	* multi = NULL		896397	0					
ANR	896462	IdentifierDeclType	char *		896397	0					
ANR	896463	Identifier	multi		896397	1					
ANR	896464	AssignmentExpression	* multi = NULL		896397	2		=			
ANR	896465	Identifier	NULL		896397	0					
ANR	896466	Identifier	NULL		896397	1					
ANR	896467	ExpressionStatement	"ad -> LookupString ( ""CoreFile"" , & multi )"	2804:1:62349:62385	896397	7	True				
ANR	896468	CallExpression	"ad -> LookupString ( ""CoreFile"" , & multi )"		896397	0					
ANR	896469	Callee	ad -> LookupString		896397	0					
ANR	896470	PtrMemberAccess	ad -> LookupString		896397	0					
ANR	896471	Identifier	ad		896397	0					
ANR	896472	Identifier	LookupString		896397	1					
ANR	896473	ArgumentList	"""CoreFile"""		896397	1					
ANR	896474	Argument	"""CoreFile"""		896397	0					
ANR	896475	PrimaryExpression	"""CoreFile"""		896397	0					
ANR	896476	Argument	& multi		896397	1					
ANR	896477	UnaryOperationExpression	& multi		896397	0					
ANR	896478	UnaryOperator	&		896397	0					
ANR	896479	Identifier	multi		896397	1					
ANR	896480	IfStatement	if ( multi )		896397	8					
ANR	896481	Condition	multi	2805:5:62392:62396	896397	0	True				
ANR	896482	Identifier	multi		896397	0					
ANR	896483	CompoundStatement		16:13:353:353	896397	1					
ANR	896484	ExpressionStatement	setCoreFile ( multi )	2806:2:62404:62422	896397	0	True				
ANR	896485	CallExpression	setCoreFile ( multi )		896397	0					
ANR	896486	Callee	setCoreFile		896397	0					
ANR	896487	Identifier	setCoreFile		896397	0					
ANR	896488	ArgumentList	multi		896397	1					
ANR	896489	Argument	multi		896397	0					
ANR	896490	Identifier	multi		896397	0					
ANR	896491	ExpressionStatement	free ( multi )	2807:2:62426:62437	896397	1	True				
ANR	896492	CallExpression	free ( multi )		896397	0					
ANR	896493	Callee	free		896397	0					
ANR	896494	Identifier	free		896397	0					
ANR	896495	ArgumentList	multi		896397	1					
ANR	896496	Argument	multi		896397	0					
ANR	896497	Identifier	multi		896397	0					
ANR	896498	ExpressionStatement	multi = NULL	2808:2:62441:62453	896397	2	True				
ANR	896499	AssignmentExpression	multi = NULL		896397	0		=			
ANR	896500	Identifier	multi		896397	0					
ANR	896501	Identifier	NULL		896397	1					
ANR	896502	IfStatement	"if ( ad -> LookupString ( ""RunLocalUsage"" , & multi ) )"		896397	9					
ANR	896503	Condition	"ad -> LookupString ( ""RunLocalUsage"" , & multi )"	2811:5:62464:62504	896397	0	True				
ANR	896504	CallExpression	"ad -> LookupString ( ""RunLocalUsage"" , & multi )"		896397	0					
ANR	896505	Callee	ad -> LookupString		896397	0					
ANR	896506	PtrMemberAccess	ad -> LookupString		896397	0					
ANR	896507	Identifier	ad		896397	0					
ANR	896508	Identifier	LookupString		896397	1					
ANR	896509	ArgumentList	"""RunLocalUsage"""		896397	1					
ANR	896510	Argument	"""RunLocalUsage"""		896397	0					
ANR	896511	PrimaryExpression	"""RunLocalUsage"""		896397	0					
ANR	896512	Argument	& multi		896397	1					
ANR	896513	UnaryOperationExpression	& multi		896397	0					
ANR	896514	UnaryOperator	&		896397	0					
ANR	896515	Identifier	multi		896397	1					
ANR	896516	CompoundStatement		22:49:461:461	896397	1					
ANR	896517	ExpressionStatement	"strToRusage ( multi , run_local_rusage )"	2812:2:62512:62548	896397	0	True				
ANR	896518	CallExpression	"strToRusage ( multi , run_local_rusage )"		896397	0					
ANR	896519	Callee	strToRusage		896397	0					
ANR	896520	Identifier	strToRusage		896397	0					
ANR	896521	ArgumentList	multi		896397	1					
ANR	896522	Argument	multi		896397	0					
ANR	896523	Identifier	multi		896397	0					
ANR	896524	Argument	run_local_rusage		896397	1					
ANR	896525	Identifier	run_local_rusage		896397	0					
ANR	896526	ExpressionStatement	free ( multi )	2813:2:62552:62563	896397	1	True				
ANR	896527	CallExpression	free ( multi )		896397	0					
ANR	896528	Callee	free		896397	0					
ANR	896529	Identifier	free		896397	0					
ANR	896530	ArgumentList	multi		896397	1					
ANR	896531	Argument	multi		896397	0					
ANR	896532	Identifier	multi		896397	0					
ANR	896533	IfStatement	"if ( ad -> LookupString ( ""RunRemoteUsage"" , & multi ) )"		896397	10					
ANR	896534	Condition	"ad -> LookupString ( ""RunRemoteUsage"" , & multi )"	2815:5:62573:62614	896397	0	True				
ANR	896535	CallExpression	"ad -> LookupString ( ""RunRemoteUsage"" , & multi )"		896397	0					
ANR	896536	Callee	ad -> LookupString		896397	0					
ANR	896537	PtrMemberAccess	ad -> LookupString		896397	0					
ANR	896538	Identifier	ad		896397	0					
ANR	896539	Identifier	LookupString		896397	1					
ANR	896540	ArgumentList	"""RunRemoteUsage"""		896397	1					
ANR	896541	Argument	"""RunRemoteUsage"""		896397	0					
ANR	896542	PrimaryExpression	"""RunRemoteUsage"""		896397	0					
ANR	896543	Argument	& multi		896397	1					
ANR	896544	UnaryOperationExpression	& multi		896397	0					
ANR	896545	UnaryOperator	&		896397	0					
ANR	896546	Identifier	multi		896397	1					
ANR	896547	CompoundStatement		26:50:571:571	896397	1					
ANR	896548	ExpressionStatement	"strToRusage ( multi , run_remote_rusage )"	2816:2:62622:62659	896397	0	True				
ANR	896549	CallExpression	"strToRusage ( multi , run_remote_rusage )"		896397	0					
ANR	896550	Callee	strToRusage		896397	0					
ANR	896551	Identifier	strToRusage		896397	0					
ANR	896552	ArgumentList	multi		896397	1					
ANR	896553	Argument	multi		896397	0					
ANR	896554	Identifier	multi		896397	0					
ANR	896555	Argument	run_remote_rusage		896397	1					
ANR	896556	Identifier	run_remote_rusage		896397	0					
ANR	896557	ExpressionStatement	free ( multi )	2817:2:62663:62674	896397	1	True				
ANR	896558	CallExpression	free ( multi )		896397	0					
ANR	896559	Callee	free		896397	0					
ANR	896560	Identifier	free		896397	0					
ANR	896561	ArgumentList	multi		896397	1					
ANR	896562	Argument	multi		896397	0					
ANR	896563	Identifier	multi		896397	0					
ANR	896564	IfStatement	"if ( ad -> LookupString ( ""TotalLocalUsage"" , & multi ) )"		896397	11					
ANR	896565	Condition	"ad -> LookupString ( ""TotalLocalUsage"" , & multi )"	2819:5:62684:62726	896397	0	True				
ANR	896566	CallExpression	"ad -> LookupString ( ""TotalLocalUsage"" , & multi )"		896397	0					
ANR	896567	Callee	ad -> LookupString		896397	0					
ANR	896568	PtrMemberAccess	ad -> LookupString		896397	0					
ANR	896569	Identifier	ad		896397	0					
ANR	896570	Identifier	LookupString		896397	1					
ANR	896571	ArgumentList	"""TotalLocalUsage"""		896397	1					
ANR	896572	Argument	"""TotalLocalUsage"""		896397	0					
ANR	896573	PrimaryExpression	"""TotalLocalUsage"""		896397	0					
ANR	896574	Argument	& multi		896397	1					
ANR	896575	UnaryOperationExpression	& multi		896397	0					
ANR	896576	UnaryOperator	&		896397	0					
ANR	896577	Identifier	multi		896397	1					
ANR	896578	CompoundStatement		30:51:683:683	896397	1					
ANR	896579	ExpressionStatement	"strToRusage ( multi , total_local_rusage )"	2820:2:62734:62772	896397	0	True				
ANR	896580	CallExpression	"strToRusage ( multi , total_local_rusage )"		896397	0					
ANR	896581	Callee	strToRusage		896397	0					
ANR	896582	Identifier	strToRusage		896397	0					
ANR	896583	ArgumentList	multi		896397	1					
ANR	896584	Argument	multi		896397	0					
ANR	896585	Identifier	multi		896397	0					
ANR	896586	Argument	total_local_rusage		896397	1					
ANR	896587	Identifier	total_local_rusage		896397	0					
ANR	896588	ExpressionStatement	free ( multi )	2821:2:62776:62787	896397	1	True				
ANR	896589	CallExpression	free ( multi )		896397	0					
ANR	896590	Callee	free		896397	0					
ANR	896591	Identifier	free		896397	0					
ANR	896592	ArgumentList	multi		896397	1					
ANR	896593	Argument	multi		896397	0					
ANR	896594	Identifier	multi		896397	0					
ANR	896595	IfStatement	"if ( ad -> LookupString ( ""TotalRemoteUsage"" , & multi ) )"		896397	12					
ANR	896596	Condition	"ad -> LookupString ( ""TotalRemoteUsage"" , & multi )"	2823:5:62797:62840	896397	0	True				
ANR	896597	CallExpression	"ad -> LookupString ( ""TotalRemoteUsage"" , & multi )"		896397	0					
ANR	896598	Callee	ad -> LookupString		896397	0					
ANR	896599	PtrMemberAccess	ad -> LookupString		896397	0					
ANR	896600	Identifier	ad		896397	0					
ANR	896601	Identifier	LookupString		896397	1					
ANR	896602	ArgumentList	"""TotalRemoteUsage"""		896397	1					
ANR	896603	Argument	"""TotalRemoteUsage"""		896397	0					
ANR	896604	PrimaryExpression	"""TotalRemoteUsage"""		896397	0					
ANR	896605	Argument	& multi		896397	1					
ANR	896606	UnaryOperationExpression	& multi		896397	0					
ANR	896607	UnaryOperator	&		896397	0					
ANR	896608	Identifier	multi		896397	1					
ANR	896609	CompoundStatement		34:52:797:797	896397	1					
ANR	896610	ExpressionStatement	"strToRusage ( multi , total_remote_rusage )"	2824:2:62848:62887	896397	0	True				
ANR	896611	CallExpression	"strToRusage ( multi , total_remote_rusage )"		896397	0					
ANR	896612	Callee	strToRusage		896397	0					
ANR	896613	Identifier	strToRusage		896397	0					
ANR	896614	ArgumentList	multi		896397	1					
ANR	896615	Argument	multi		896397	0					
ANR	896616	Identifier	multi		896397	0					
ANR	896617	Argument	total_remote_rusage		896397	1					
ANR	896618	Identifier	total_remote_rusage		896397	0					
ANR	896619	ExpressionStatement	free ( multi )	2825:2:62891:62902	896397	1	True				
ANR	896620	CallExpression	free ( multi )		896397	0					
ANR	896621	Callee	free		896397	0					
ANR	896622	Identifier	free		896397	0					
ANR	896623	ArgumentList	multi		896397	1					
ANR	896624	Argument	multi		896397	0					
ANR	896625	Identifier	multi		896397	0					
ANR	896626	ExpressionStatement	"ad -> LookupFloat ( ""SentBytes"" , sent_bytes )"	2828:1:62909:62949	896397	13	True				
ANR	896627	CallExpression	"ad -> LookupFloat ( ""SentBytes"" , sent_bytes )"		896397	0					
ANR	896628	Callee	ad -> LookupFloat		896397	0					
ANR	896629	PtrMemberAccess	ad -> LookupFloat		896397	0					
ANR	896630	Identifier	ad		896397	0					
ANR	896631	Identifier	LookupFloat		896397	1					
ANR	896632	ArgumentList	"""SentBytes"""		896397	1					
ANR	896633	Argument	"""SentBytes"""		896397	0					
ANR	896634	PrimaryExpression	"""SentBytes"""		896397	0					
ANR	896635	Argument	sent_bytes		896397	1					
ANR	896636	Identifier	sent_bytes		896397	0					
ANR	896637	ExpressionStatement	"ad -> LookupFloat ( ""ReceivedBytes"" , recvd_bytes )"	2829:1:62952:62997	896397	14	True				
ANR	896638	CallExpression	"ad -> LookupFloat ( ""ReceivedBytes"" , recvd_bytes )"		896397	0					
ANR	896639	Callee	ad -> LookupFloat		896397	0					
ANR	896640	PtrMemberAccess	ad -> LookupFloat		896397	0					
ANR	896641	Identifier	ad		896397	0					
ANR	896642	Identifier	LookupFloat		896397	1					
ANR	896643	ArgumentList	"""ReceivedBytes"""		896397	1					
ANR	896644	Argument	"""ReceivedBytes"""		896397	0					
ANR	896645	PrimaryExpression	"""ReceivedBytes"""		896397	0					
ANR	896646	Argument	recvd_bytes		896397	1					
ANR	896647	Identifier	recvd_bytes		896397	0					
ANR	896648	ExpressionStatement	"ad -> LookupFloat ( ""TotalSentBytes"" , total_sent_bytes )"	2830:1:63000:63051	896397	15	True				
ANR	896649	CallExpression	"ad -> LookupFloat ( ""TotalSentBytes"" , total_sent_bytes )"		896397	0					
ANR	896650	Callee	ad -> LookupFloat		896397	0					
ANR	896651	PtrMemberAccess	ad -> LookupFloat		896397	0					
ANR	896652	Identifier	ad		896397	0					
ANR	896653	Identifier	LookupFloat		896397	1					
ANR	896654	ArgumentList	"""TotalSentBytes"""		896397	1					
ANR	896655	Argument	"""TotalSentBytes"""		896397	0					
ANR	896656	PrimaryExpression	"""TotalSentBytes"""		896397	0					
ANR	896657	Argument	total_sent_bytes		896397	1					
ANR	896658	Identifier	total_sent_bytes		896397	0					
ANR	896659	ExpressionStatement	"ad -> LookupFloat ( ""TotalReceivedBytes"" , total_recvd_bytes )"	2831:1:63054:63110	896397	16	True				
ANR	896660	CallExpression	"ad -> LookupFloat ( ""TotalReceivedBytes"" , total_recvd_bytes )"		896397	0					
ANR	896661	Callee	ad -> LookupFloat		896397	0					
ANR	896662	PtrMemberAccess	ad -> LookupFloat		896397	0					
ANR	896663	Identifier	ad		896397	0					
ANR	896664	Identifier	LookupFloat		896397	1					
ANR	896665	ArgumentList	"""TotalReceivedBytes"""		896397	1					
ANR	896666	Argument	"""TotalReceivedBytes"""		896397	0					
ANR	896667	PrimaryExpression	"""TotalReceivedBytes"""		896397	0					
ANR	896668	Argument	total_recvd_bytes		896397	1					
ANR	896669	Identifier	total_recvd_bytes		896397	0					
ANR	896670	ReturnType	void		896397	1					
ANR	896671	Identifier	JobTerminatedEvent :: initFromClassAd		896397	2					
ANR	896672	ParameterList	ClassAd * ad		896397	3					
ANR	896673	Parameter	ClassAd * ad	2789:36:62033:62043	896397	0	True				
ANR	896674	ParameterType	ClassAd *		896397	0					
ANR	896675	Identifier	ad		896397	1					
ANR	896676	CFGEntryNode	ENTRY		896397		True				
ANR	896677	CFGExitNode	EXIT		896397		True				
ANR	896678	Symbol	ad -> LookupString		896397						
ANR	896679	Symbol	normal		896397						
ANR	896680	Symbol	& multi		896397						
ANR	896681	Symbol	run_local_rusage		896397						
ANR	896682	Symbol	ad		896397						
ANR	896683	Symbol	returnValue		896397						
ANR	896684	Symbol	NULL		896397						
ANR	896685	Symbol	total_sent_bytes		896397						
ANR	896686	Symbol	total_local_rusage		896397						
ANR	896687	Symbol	TRUE		896397						
ANR	896688	Symbol	* ad		896397						
ANR	896689	Symbol	signalNumber		896397						
ANR	896690	Symbol	multi		896397						
ANR	896691	Symbol	sent_bytes		896397						
ANR	896692	Symbol	total_recvd_bytes		896397						
ANR	896693	Symbol	recvd_bytes		896397						
ANR	896694	Symbol	run_remote_rusage		896397						
ANR	896695	Symbol	ad -> LookupInteger		896397						
ANR	896696	Symbol	FALSE		896397						
ANR	896697	Symbol	reallybool		896397						
ANR	896698	Symbol	total_remote_rusage		896397						
ANR	896699	Function	JobImageSizeEvent :: JobImageSizeEvent	2834:0:63115:63204							
ANR	896700	FunctionDef	JobImageSizeEvent :: JobImageSizeEvent ()		896699	0					
ANR	896701	CompoundStatement		2835:0:63158:63204	896699	0					
ANR	896702	ExpressionStatement	eventNumber = ULOG_IMAGE_SIZE	2836:1:63161:63190	896699	0	True				
ANR	896703	AssignmentExpression	eventNumber = ULOG_IMAGE_SIZE		896699	0		=			
ANR	896704	Identifier	eventNumber		896699	0					
ANR	896705	Identifier	ULOG_IMAGE_SIZE		896699	1					
ANR	896706	ExpressionStatement	size = - 1	2837:1:63193:63202	896699	1	True				
ANR	896707	AssignmentExpression	size = - 1		896699	0		=			
ANR	896708	Identifier	size		896699	0					
ANR	896709	UnaryOperationExpression	- 1		896699	1					
ANR	896710	UnaryOperator	-		896699	0					
ANR	896711	PrimaryExpression	1		896699	1					
ANR	896712	Identifier	JobImageSizeEvent :: JobImageSizeEvent		896699	1					
ANR	896713	ParameterList			896699	2					
ANR	896714	CFGEntryNode	ENTRY		896699		True				
ANR	896715	CFGExitNode	EXIT		896699		True				
ANR	896716	Symbol	ULOG_IMAGE_SIZE		896699						
ANR	896717	Symbol	size		896699						
ANR	896718	Symbol	eventNumber		896699						
ANR	896719	Function	JobImageSizeEvent :: ~JobImageSizeEvent	2841:0:63208:63254							
ANR	896720	FunctionDef	JobImageSizeEvent :: ~JobImageSizeEvent ()		896719	0					
ANR	896721	CompoundStatement		2842:0:63252:63254	896719	0					
ANR	896722	Identifier	JobImageSizeEvent :: ~JobImageSizeEvent		896719	1					
ANR	896723	ParameterList			896719	2					
ANR	896724	CFGEntryNode	ENTRY		896719		True				
ANR	896725	CFGExitNode	EXIT		896719		True				
ANR	896726	Function	JobImageSizeEvent :: writeEvent	2846:0:63258:63397							
ANR	896727	FunctionDef	JobImageSizeEvent :: writeEvent (FILE * file)		896726	0					
ANR	896728	CompoundStatement		2848:0:63305:63397	896726	0					
ANR	896729	IfStatement	"if ( fprintf ( file , ""Image size of job updated: %d\\n"" , size ) < 0 )"		896726	0					
ANR	896730	Condition	"fprintf ( file , ""Image size of job updated: %d\\n"" , size ) < 0"	2849:5:63312:63370	896726	0	True				
ANR	896731	RelationalExpression	"fprintf ( file , ""Image size of job updated: %d\\n"" , size ) < 0"		896726	0		<			
ANR	896732	CallExpression	"fprintf ( file , ""Image size of job updated: %d\\n"" , size )"		896726	0					
ANR	896733	Callee	fprintf		896726	0					
ANR	896734	Identifier	fprintf		896726	0					
ANR	896735	ArgumentList	file		896726	1					
ANR	896736	Argument	file		896726	0					
ANR	896737	Identifier	file		896726	0					
ANR	896738	Argument	"""Image size of job updated: %d\\n"""		896726	1					
ANR	896739	PrimaryExpression	"""Image size of job updated: %d\\n"""		896726	0					
ANR	896740	Argument	size		896726	2					
ANR	896741	Identifier	size		896726	0					
ANR	896742	PrimaryExpression	0		896726	1					
ANR	896743	ReturnStatement	return 0 ;	2850:2:63375:63383	896726	1	True				
ANR	896744	PrimaryExpression	0		896726	0					
ANR	896745	ReturnStatement	return 1 ;	2852:1:63387:63395	896726	1	True				
ANR	896746	PrimaryExpression	1		896726	0					
ANR	896747	ReturnType	int		896726	1					
ANR	896748	Identifier	JobImageSizeEvent :: writeEvent		896726	2					
ANR	896749	ParameterList	FILE * file		896726	3					
ANR	896750	Parameter	FILE * file	2847:31:63293:63302	896726	0	True				
ANR	896751	ParameterType	FILE *		896726	0					
ANR	896752	Identifier	file		896726	1					
ANR	896753	CFGEntryNode	ENTRY		896726		True				
ANR	896754	CFGExitNode	EXIT		896726		True				
ANR	896755	Symbol	file		896726						
ANR	896756	Symbol	size		896726						
ANR	896757	Symbol	fprintf		896726						
ANR	896758	Function	JobImageSizeEvent :: readEvent	2856:0:63401:63558							
ANR	896759	FunctionDef	JobImageSizeEvent :: readEvent (FILE * file)		896758	0					
ANR	896760	CompoundStatement		2858:0:63447:63558	896758	0					
ANR	896761	IdentifierDeclStatement	int retval ;	2859:1:63450:63460	896758	0	True				
ANR	896762	IdentifierDecl	retval		896758	0					
ANR	896763	IdentifierDeclType	int		896758	0					
ANR	896764	Identifier	retval		896758	1					
ANR	896765	IfStatement	"if ( ( retval = fscanf ( file , ""Image size of job updated: %d"" , & size ) ) != 1 )"		896758	1					
ANR	896766	Condition	"( retval = fscanf ( file , ""Image size of job updated: %d"" , & size ) ) != 1"	2860:5:63467:63531	896758	0	True				
ANR	896767	EqualityExpression	"( retval = fscanf ( file , ""Image size of job updated: %d"" , & size ) ) != 1"		896758	0		!=			
ANR	896768	AssignmentExpression	"retval = fscanf ( file , ""Image size of job updated: %d"" , & size )"		896758	0		=			
ANR	896769	Identifier	retval		896758	0					
ANR	896770	CallExpression	"fscanf ( file , ""Image size of job updated: %d"" , & size )"		896758	1					
ANR	896771	Callee	fscanf		896758	0					
ANR	896772	Identifier	fscanf		896758	0					
ANR	896773	ArgumentList	file		896758	1					
ANR	896774	Argument	file		896758	0					
ANR	896775	Identifier	file		896758	0					
ANR	896776	Argument	"""Image size of job updated: %d"""		896758	1					
ANR	896777	PrimaryExpression	"""Image size of job updated: %d"""		896758	0					
ANR	896778	Argument	& size		896758	2					
ANR	896779	UnaryOperationExpression	& size		896758	0					
ANR	896780	UnaryOperator	&		896758	0					
ANR	896781	Identifier	size		896758	1					
ANR	896782	PrimaryExpression	1		896758	1					
ANR	896783	ReturnStatement	return 0 ;	2861:2:63536:63544	896758	1	True				
ANR	896784	PrimaryExpression	0		896758	0					
ANR	896785	ReturnStatement	return 1 ;	2863:1:63548:63556	896758	2	True				
ANR	896786	PrimaryExpression	1		896758	0					
ANR	896787	ReturnType	int		896758	1					
ANR	896788	Identifier	JobImageSizeEvent :: readEvent		896758	2					
ANR	896789	ParameterList	FILE * file		896758	3					
ANR	896790	Parameter	FILE * file	2857:30:63435:63444	896758	0	True				
ANR	896791	ParameterType	FILE *		896758	0					
ANR	896792	Identifier	file		896758	1					
ANR	896793	CFGEntryNode	ENTRY		896758		True				
ANR	896794	CFGExitNode	EXIT		896758		True				
ANR	896795	Symbol	fscanf		896758						
ANR	896796	Symbol	file		896758						
ANR	896797	Symbol	& size		896758						
ANR	896798	Symbol	retval		896758						
ANR	896799	Function	JobImageSizeEvent :: toClassAd	2866:0:63561:63829							
ANR	896800	FunctionDef	JobImageSizeEvent :: toClassAd ()		896799	0					
ANR	896801	CompoundStatement		2868:0:63605:63829	896799	0					
ANR	896802	IdentifierDeclStatement	ClassAd * myad = ULogEvent :: toClassAd ( ) ;	2869:1:63608:63646	896799	0	True				
ANR	896803	IdentifierDecl	* myad = ULogEvent :: toClassAd ( )		896799	0					
ANR	896804	IdentifierDeclType	ClassAd *		896799	0					
ANR	896805	Identifier	myad		896799	1					
ANR	896806	AssignmentExpression	* myad = ULogEvent :: toClassAd ( )		896799	2		=			
ANR	896807	Identifier	myad		896799	0					
ANR	896808	CallExpression	ULogEvent :: toClassAd ( )		896799	1					
ANR	896809	Callee	ULogEvent :: toClassAd		896799	0					
ANR	896810	Identifier	ULogEvent :: toClassAd		896799	0					
ANR	896811	ArgumentList			896799	1					
ANR	896812	IfStatement	if ( ! myad )		896799	1					
ANR	896813	Condition	! myad	2870:5:63653:63657	896799	0	True				
ANR	896814	UnaryOperationExpression	! myad		896799	0					
ANR	896815	UnaryOperator	!		896799	0					
ANR	896816	Identifier	myad		896799	1					
ANR	896817	ReturnStatement	return NULL ;	2870:13:63661:63672	896799	1	True				
ANR	896818	Identifier	NULL		896799	0					
ANR	896819	IdentifierDeclStatement	char buf0 [ 512 ] ;	2871:1:63675:63689	896799	2	True				
ANR	896820	IdentifierDecl	buf0 [ 512 ]		896799	0					
ANR	896821	IdentifierDeclType	char [ 512 ]		896799	0					
ANR	896822	Identifier	buf0		896799	1					
ANR	896823	PrimaryExpression	512		896799	2					
ANR	896824	IfStatement	if ( size >= 0 )		896799	3					
ANR	896825	Condition	size >= 0	2873:5:63697:63705	896799	0	True				
ANR	896826	RelationalExpression	size >= 0		896799	0		>=			
ANR	896827	Identifier	size		896799	0					
ANR	896828	PrimaryExpression	0		896799	1					
ANR	896829	CompoundStatement		6:17:103:103	896799	1					
ANR	896830	ExpressionStatement	"snprintf ( buf0 , 512 , ""Size = %d"" , size )"	2874:2:63713:63751	896799	0	True				
ANR	896831	CallExpression	"snprintf ( buf0 , 512 , ""Size = %d"" , size )"		896799	0					
ANR	896832	Callee	snprintf		896799	0					
ANR	896833	Identifier	snprintf		896799	0					
ANR	896834	ArgumentList	buf0		896799	1					
ANR	896835	Argument	buf0		896799	0					
ANR	896836	Identifier	buf0		896799	0					
ANR	896837	Argument	512		896799	1					
ANR	896838	PrimaryExpression	512		896799	0					
ANR	896839	Argument	"""Size = %d"""		896799	2					
ANR	896840	PrimaryExpression	"""Size = %d"""		896799	0					
ANR	896841	Argument	size		896799	3					
ANR	896842	Identifier	size		896799	0					
ANR	896843	ExpressionStatement	buf0 [ 511 ] = 0	2875:2:63755:63768	896799	1	True				
ANR	896844	AssignmentExpression	buf0 [ 511 ] = 0		896799	0		=			
ANR	896845	ArrayIndexing	buf0 [ 511 ]		896799	0					
ANR	896846	Identifier	buf0		896799	0					
ANR	896847	PrimaryExpression	511		896799	1					
ANR	896848	PrimaryExpression	0		896799	1					
ANR	896849	IfStatement	if ( ! myad -> Insert ( buf0 ) )		896799	2					
ANR	896850	Condition	! myad -> Insert ( buf0 )	2876:6:63776:63794	896799	0	True				
ANR	896851	UnaryOperationExpression	! myad -> Insert ( buf0 )		896799	0					
ANR	896852	UnaryOperator	!		896799	0					
ANR	896853	CallExpression	myad -> Insert ( buf0 )		896799	1					
ANR	896854	Callee	myad -> Insert		896799	0					
ANR	896855	PtrMemberAccess	myad -> Insert		896799	0					
ANR	896856	Identifier	myad		896799	0					
ANR	896857	Identifier	Insert		896799	1					
ANR	896858	ArgumentList	buf0		896799	1					
ANR	896859	Argument	buf0		896799	0					
ANR	896860	Identifier	buf0		896799	0					
ANR	896861	ReturnStatement	return NULL ;	2876:28:63798:63809	896799	1	True				
ANR	896862	Identifier	NULL		896799	0					
ANR	896863	ReturnStatement	return myad ;	2879:1:63816:63827	896799	4	True				
ANR	896864	Identifier	myad		896799	0					
ANR	896865	ReturnType	ClassAd *		896799	1					
ANR	896866	Identifier	JobImageSizeEvent :: toClassAd		896799	2					
ANR	896867	ParameterList			896799	3					
ANR	896868	CFGEntryNode	ENTRY		896799		True				
ANR	896869	CFGExitNode	EXIT		896799		True				
ANR	896870	Symbol	NULL		896799						
ANR	896871	Symbol	buf0		896799						
ANR	896872	Symbol	size		896799						
ANR	896873	Symbol	* myad		896799						
ANR	896874	Symbol	myad -> Insert		896799						
ANR	896875	Symbol	myad		896799						
ANR	896876	Symbol	ULogEvent :: toClassAd		896799						
ANR	896877	Symbol	* buf0		896799						
ANR	896878	Function	JobImageSizeEvent :: initFromClassAd	2882:0:63832:63975							
ANR	896879	FunctionDef	JobImageSizeEvent :: initFromClassAd (ClassAd * ad)		896878	0					
ANR	896880	CompoundStatement		2884:0:63885:63975	896878	0					
ANR	896881	ExpressionStatement	ULogEvent :: initFromClassAd ( ad )	2885:1:63888:63918	896878	0	True				
ANR	896882	CallExpression	ULogEvent :: initFromClassAd ( ad )		896878	0					
ANR	896883	Callee	ULogEvent :: initFromClassAd		896878	0					
ANR	896884	Identifier	ULogEvent :: initFromClassAd		896878	0					
ANR	896885	ArgumentList	ad		896878	1					
ANR	896886	Argument	ad		896878	0					
ANR	896887	Identifier	ad		896878	0					
ANR	896888	IfStatement	if ( ! ad )		896878	1					
ANR	896889	Condition	! ad	2887:5:63926:63928	896878	0	True				
ANR	896890	UnaryOperationExpression	! ad		896878	0					
ANR	896891	UnaryOperator	!		896878	0					
ANR	896892	Identifier	ad		896878	1					
ANR	896893	ReturnStatement	return ;	2887:11:63932:63938	896878	1	True				
ANR	896894	ExpressionStatement	"ad -> LookupInteger ( ""Size"" , size )"	2889:1:63942:63973	896878	2	True				
ANR	896895	CallExpression	"ad -> LookupInteger ( ""Size"" , size )"		896878	0					
ANR	896896	Callee	ad -> LookupInteger		896878	0					
ANR	896897	PtrMemberAccess	ad -> LookupInteger		896878	0					
ANR	896898	Identifier	ad		896878	0					
ANR	896899	Identifier	LookupInteger		896878	1					
ANR	896900	ArgumentList	"""Size"""		896878	1					
ANR	896901	Argument	"""Size"""		896878	0					
ANR	896902	PrimaryExpression	"""Size"""		896878	0					
ANR	896903	Argument	size		896878	1					
ANR	896904	Identifier	size		896878	0					
ANR	896905	ReturnType	void		896878	1					
ANR	896906	Identifier	JobImageSizeEvent :: initFromClassAd		896878	2					
ANR	896907	ParameterList	ClassAd * ad		896878	3					
ANR	896908	Parameter	ClassAd * ad	2883:35:63872:63882	896878	0	True				
ANR	896909	ParameterType	ClassAd *		896878	0					
ANR	896910	Identifier	ad		896878	1					
ANR	896911	CFGEntryNode	ENTRY		896878		True				
ANR	896912	CFGExitNode	EXIT		896878		True				
ANR	896913	Symbol	ad		896878						
ANR	896914	Symbol	size		896878						
ANR	896915	Function	ShadowExceptionEvent :: ShadowExceptionEvent	2892:0:63978:64147							
ANR	896916	FunctionDef	ShadowExceptionEvent :: ShadowExceptionEvent ()		896915	0					
ANR	896917	CompoundStatement		2893:0:64028:64147	896915	0					
ANR	896918	ExpressionStatement	eventNumber = ULOG_SHADOW_EXCEPTION	2894:1:64031:64066	896915	0	True				
ANR	896919	AssignmentExpression	eventNumber = ULOG_SHADOW_EXCEPTION		896915	0		=			
ANR	896920	Identifier	eventNumber		896915	0					
ANR	896921	Identifier	ULOG_SHADOW_EXCEPTION		896915	1					
ANR	896922	ExpressionStatement	message [ 0 ] = '\\0'	2895:1:64069:64086	896915	1	True				
ANR	896923	AssignmentExpression	message [ 0 ] = '\\0'		896915	0		=			
ANR	896924	ArrayIndexing	message [ 0 ]		896915	0					
ANR	896925	Identifier	message		896915	0					
ANR	896926	PrimaryExpression	0		896915	1					
ANR	896927	PrimaryExpression	'\\0'		896915	1					
ANR	896928	ExpressionStatement	sent_bytes = recvd_bytes = 0.0	2896:1:64089:64119	896915	2	True				
ANR	896929	AssignmentExpression	sent_bytes = recvd_bytes = 0.0		896915	0		=			
ANR	896930	Identifier	sent_bytes		896915	0					
ANR	896931	AssignmentExpression	recvd_bytes = 0.0		896915	1		=			
ANR	896932	Identifier	recvd_bytes		896915	0					
ANR	896933	PrimaryExpression	0.0		896915	1					
ANR	896934	ExpressionStatement	began_execution = FALSE	2897:1:64122:64145	896915	3	True				
ANR	896935	AssignmentExpression	began_execution = FALSE		896915	0		=			
ANR	896936	Identifier	began_execution		896915	0					
ANR	896937	Identifier	FALSE		896915	1					
ANR	896938	Identifier	ShadowExceptionEvent :: ShadowExceptionEvent		896915	1					
ANR	896939	ParameterList			896915	2					
ANR	896940	CFGEntryNode	ENTRY		896915		True				
ANR	896941	CFGExitNode	EXIT		896915		True				
ANR	896942	Symbol	eventNumber		896915						
ANR	896943	Symbol	recvd_bytes		896915						
ANR	896944	Symbol	ULOG_SHADOW_EXCEPTION		896915						
ANR	896945	Symbol	FALSE		896915						
ANR	896946	Symbol	* message		896915						
ANR	896947	Symbol	message		896915						
ANR	896948	Symbol	sent_bytes		896915						
ANR	896949	Symbol	began_execution		896915						
ANR	896950	Function	ShadowExceptionEvent :: ~ShadowExceptionEvent	2900:0:64150:64203							
ANR	896951	FunctionDef	ShadowExceptionEvent :: ~ShadowExceptionEvent ()		896950	0					
ANR	896952	CompoundStatement		2901:0:64201:64203	896950	0					
ANR	896953	Identifier	ShadowExceptionEvent :: ~ShadowExceptionEvent		896950	1					
ANR	896954	ParameterList			896950	2					
ANR	896955	CFGEntryNode	ENTRY		896950		True				
ANR	896956	CFGExitNode	EXIT		896950		True				
ANR	896957	Function	ShadowExceptionEvent :: readEvent	2904:0:64206:64709							
ANR	896958	FunctionDef	ShadowExceptionEvent :: readEvent (FILE * file)		896957	0					
ANR	896959	CompoundStatement		2906:0:64255:64709	896957	0					
ANR	896960	IfStatement	"if ( fscanf ( file , ""Shadow exception!\\n\\t"" ) == EOF )"		896957	0					
ANR	896961	Condition	"fscanf ( file , ""Shadow exception!\\n\\t"" ) == EOF"	2907:5:64262:64306	896957	0	True				
ANR	896962	EqualityExpression	"fscanf ( file , ""Shadow exception!\\n\\t"" ) == EOF"		896957	0		==			
ANR	896963	CallExpression	"fscanf ( file , ""Shadow exception!\\n\\t"" )"		896957	0					
ANR	896964	Callee	fscanf		896957	0					
ANR	896965	Identifier	fscanf		896957	0					
ANR	896966	ArgumentList	file		896957	1					
ANR	896967	Argument	file		896957	0					
ANR	896968	Identifier	file		896957	0					
ANR	896969	Argument	"""Shadow exception!\\n\\t"""		896957	1					
ANR	896970	PrimaryExpression	"""Shadow exception!\\n\\t"""		896957	0					
ANR	896971	Identifier	EOF		896957	1					
ANR	896972	ReturnStatement	return 0 ;	2908:2:64311:64319	896957	1	True				
ANR	896973	PrimaryExpression	0		896957	0					
ANR	896974	IfStatement	"if ( fgets ( message , BUFSIZ , file ) == NULL )"		896957	1					
ANR	896975	Condition	"fgets ( message , BUFSIZ , file ) == NULL"	2909:5:64326:64361	896957	0	True				
ANR	896976	EqualityExpression	"fgets ( message , BUFSIZ , file ) == NULL"		896957	0		==			
ANR	896977	CallExpression	"fgets ( message , BUFSIZ , file )"		896957	0					
ANR	896978	Callee	fgets		896957	0					
ANR	896979	Identifier	fgets		896957	0					
ANR	896980	ArgumentList	message		896957	1					
ANR	896981	Argument	message		896957	0					
ANR	896982	Identifier	message		896957	0					
ANR	896983	Argument	BUFSIZ		896957	1					
ANR	896984	Identifier	BUFSIZ		896957	0					
ANR	896985	Argument	file		896957	2					
ANR	896986	Identifier	file		896957	0					
ANR	896987	Identifier	NULL		896957	1					
ANR	896988	CompoundStatement		4:43:108:108	896957	1					
ANR	896989	ExpressionStatement	message [ 0 ] = '\\0'	2910:2:64368:64385	896957	0	True				
ANR	896990	AssignmentExpression	message [ 0 ] = '\\0'		896957	0		=			
ANR	896991	ArrayIndexing	message [ 0 ]		896957	0					
ANR	896992	Identifier	message		896957	0					
ANR	896993	PrimaryExpression	0		896957	1					
ANR	896994	PrimaryExpression	'\\0'		896957	1					
ANR	896995	ReturnStatement	return 1 ;	2911:2:64389:64397	896957	1	True				
ANR	896996	PrimaryExpression	1		896957	0					
ANR	896997	ExpressionStatement	message [ strlen ( message ) - 1 ] = '\\0'	2915:1:64463:64496	896957	2	True				
ANR	896998	AssignmentExpression	message [ strlen ( message ) - 1 ] = '\\0'		896957	0		=			
ANR	896999	ArrayIndexing	message [ strlen ( message ) - 1 ]		896957	0					
ANR	897000	Identifier	message		896957	0					
ANR	897001	AdditiveExpression	strlen ( message ) - 1		896957	1		-			
ANR	897002	CallExpression	strlen ( message )		896957	0					
ANR	897003	Callee	strlen		896957	0					
ANR	897004	Identifier	strlen		896957	0					
ANR	897005	ArgumentList	message		896957	1					
ANR	897006	Argument	message		896957	0					
ANR	897007	Identifier	message		896957	0					
ANR	897008	PrimaryExpression	1		896957	1					
ANR	897009	PrimaryExpression	'\\0'		896957	1					
ANR	897010	IfStatement	"if ( fscanf ( file , ""\\t%f  -  Run Bytes Sent By Job\\n"" , & sent_bytes ) == 0 || fscanf ( file , ""\\t%f  -  Run Bytes Received By Job\\n"" , & recvd_bytes ) == 0 )"		896957	3					
ANR	897011	Condition	"fscanf ( file , ""\\t%f  -  Run Bytes Sent By Job\\n"" , & sent_bytes ) == 0 || fscanf ( file , ""\\t%f  -  Run Bytes Received By Job\\n"" , & recvd_bytes ) == 0"	2917:5:64504:64652	896957	0	True				
ANR	897012	OrExpression	"fscanf ( file , ""\\t%f  -  Run Bytes Sent By Job\\n"" , & sent_bytes ) == 0 || fscanf ( file , ""\\t%f  -  Run Bytes Received By Job\\n"" , & recvd_bytes ) == 0"		896957	0		||			
ANR	897013	EqualityExpression	"fscanf ( file , ""\\t%f  -  Run Bytes Sent By Job\\n"" , & sent_bytes ) == 0"		896957	0		==			
ANR	897014	CallExpression	"fscanf ( file , ""\\t%f  -  Run Bytes Sent By Job\\n"" , & sent_bytes )"		896957	0					
ANR	897015	Callee	fscanf		896957	0					
ANR	897016	Identifier	fscanf		896957	0					
ANR	897017	ArgumentList	file		896957	1					
ANR	897018	Argument	file		896957	0					
ANR	897019	Identifier	file		896957	0					
ANR	897020	Argument	"""\\t%f  -  Run Bytes Sent By Job\\n"""		896957	1					
ANR	897021	PrimaryExpression	"""\\t%f  -  Run Bytes Sent By Job\\n"""		896957	0					
ANR	897022	Argument	& sent_bytes		896957	2					
ANR	897023	UnaryOperationExpression	& sent_bytes		896957	0					
ANR	897024	UnaryOperator	&		896957	0					
ANR	897025	Identifier	sent_bytes		896957	1					
ANR	897026	PrimaryExpression	0		896957	1					
ANR	897027	EqualityExpression	"fscanf ( file , ""\\t%f  -  Run Bytes Received By Job\\n"" , & recvd_bytes ) == 0"		896957	1		==			
ANR	897028	CallExpression	"fscanf ( file , ""\\t%f  -  Run Bytes Received By Job\\n"" , & recvd_bytes )"		896957	0					
ANR	897029	Callee	fscanf		896957	0					
ANR	897030	Identifier	fscanf		896957	0					
ANR	897031	ArgumentList	file		896957	1					
ANR	897032	Argument	file		896957	0					
ANR	897033	Identifier	file		896957	0					
ANR	897034	Argument	"""\\t%f  -  Run Bytes Received By Job\\n"""		896957	1					
ANR	897035	PrimaryExpression	"""\\t%f  -  Run Bytes Received By Job\\n"""		896957	0					
ANR	897036	Argument	& recvd_bytes		896957	2					
ANR	897037	UnaryOperationExpression	& recvd_bytes		896957	0					
ANR	897038	UnaryOperator	&		896957	0					
ANR	897039	Identifier	recvd_bytes		896957	1					
ANR	897040	PrimaryExpression	0		896957	1					
ANR	897041	ReturnStatement	return 1 ;	2920:2:64657:64665	896957	1	True				
ANR	897042	PrimaryExpression	1		896957	0					
ANR	897043	ReturnStatement	return 1 ;	2922:1:64699:64707	896957	4	True				
ANR	897044	PrimaryExpression	1		896957	0					
ANR	897045	ReturnType	int		896957	1					
ANR	897046	Identifier	ShadowExceptionEvent :: readEvent		896957	2					
ANR	897047	ParameterList	FILE * file		896957	3					
ANR	897048	Parameter	FILE * file	2905:33:64243:64252	896957	0	True				
ANR	897049	ParameterType	FILE *		896957	0					
ANR	897050	Identifier	file		896957	1					
ANR	897051	CFGEntryNode	ENTRY		896957		True				
ANR	897052	CFGExitNode	EXIT		896957		True				
ANR	897053	Symbol	strlen		896957						
ANR	897054	Symbol	fscanf		896957						
ANR	897055	Symbol	file		896957						
ANR	897056	Symbol	NULL		896957						
ANR	897057	Symbol	& recvd_bytes		896957						
ANR	897058	Symbol	* strlen		896957						
ANR	897059	Symbol	* message		896957						
ANR	897060	Symbol	message		896957						
ANR	897061	Symbol	EOF		896957						
ANR	897062	Symbol	fgets		896957						
ANR	897063	Symbol	& sent_bytes		896957						
ANR	897064	Symbol	BUFSIZ		896957						
ANR	897065	Function	ShadowExceptionEvent :: writeEvent	2925:0:64712:66515							
ANR	897066	FunctionDef	ShadowExceptionEvent :: writeEvent (FILE * file)		897065	0					
ANR	897067	CompoundStatement		2927:0:64762:66515	897065	0					
ANR	897068	IdentifierDeclStatement	char messagestr [ 512 ] ;	2928:1:64765:64785	897065	0	True				
ANR	897069	IdentifierDecl	messagestr [ 512 ]		897065	0					
ANR	897070	IdentifierDeclType	char [ 512 ]		897065	0					
ANR	897071	Identifier	messagestr		897065	1					
ANR	897072	PrimaryExpression	512		897065	2					
ANR	897073	IdentifierDeclStatement	"ClassAd tmpCl1 , tmpCl2 ;"	2929:1:64788:64810	897065	1	True				
ANR	897074	IdentifierDecl	tmpCl1		897065	0					
ANR	897075	IdentifierDeclType	ClassAd		897065	0					
ANR	897076	Identifier	tmpCl1		897065	1					
ANR	897077	IdentifierDecl	tmpCl2		897065	1					
ANR	897078	IdentifierDeclType	ClassAd		897065	0					
ANR	897079	Identifier	tmpCl2		897065	1					
ANR	897080	IdentifierDeclStatement	"MyString tmp = """" ;"	2931:1:64864:64881	897065	2	True				
ANR	897081	IdentifierDecl	"tmp = """""		897065	0					
ANR	897082	IdentifierDeclType	MyString		897065	0					
ANR	897083	Identifier	tmp		897065	1					
ANR	897084	AssignmentExpression	"tmp = """""		897065	2		=			
ANR	897085	Identifier	tmp		897065	0					
ANR	897086	PrimaryExpression	""""""		897065	1					
ANR	897087	ExpressionStatement	scheddname = getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )	2933:1:64885:64937	897065	3	True				
ANR	897088	AssignmentExpression	scheddname = getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )		897065	0		=			
ANR	897089	Identifier	scheddname		897065	0					
ANR	897090	CallExpression	getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )		897065	1					
ANR	897091	Callee	getenv		897065	0					
ANR	897092	Identifier	getenv		897065	0					
ANR	897093	ArgumentList	EnvGetName ( ENV_SCHEDD_NAME )		897065	1					
ANR	897094	Argument	EnvGetName ( ENV_SCHEDD_NAME )		897065	0					
ANR	897095	CallExpression	EnvGetName ( ENV_SCHEDD_NAME )		897065	0					
ANR	897096	Callee	EnvGetName		897065	0					
ANR	897097	Identifier	EnvGetName		897065	0					
ANR	897098	ArgumentList	ENV_SCHEDD_NAME		897065	1					
ANR	897099	Argument	ENV_SCHEDD_NAME		897065	0					
ANR	897100	Identifier	ENV_SCHEDD_NAME		897065	0					
ANR	897101	ExpressionStatement	"snprintf ( messagestr , 512 , ""Shadow exception: %s"" , message )"	2935:1:64941:64999	897065	4	True				
ANR	897102	CallExpression	"snprintf ( messagestr , 512 , ""Shadow exception: %s"" , message )"		897065	0					
ANR	897103	Callee	snprintf		897065	0					
ANR	897104	Identifier	snprintf		897065	0					
ANR	897105	ArgumentList	messagestr		897065	1					
ANR	897106	Argument	messagestr		897065	0					
ANR	897107	Identifier	messagestr		897065	0					
ANR	897108	Argument	512		897065	1					
ANR	897109	PrimaryExpression	512		897065	0					
ANR	897110	Argument	"""Shadow exception: %s"""		897065	2					
ANR	897111	PrimaryExpression	"""Shadow exception: %s"""		897065	0					
ANR	897112	Argument	message		897065	3					
ANR	897113	Identifier	message		897065	0					
ANR	897114	IfStatement	if ( messagestr [ strlen ( messagestr ) - 1 ] == '\\n' )		897065	5					
ANR	897115	Condition	messagestr [ strlen ( messagestr ) - 1 ] == '\\n'	2938:6:65051:65090	897065	0	True				
ANR	897116	EqualityExpression	messagestr [ strlen ( messagestr ) - 1 ] == '\\n'		897065	0		==			
ANR	897117	ArrayIndexing	messagestr [ strlen ( messagestr ) - 1 ]		897065	0					
ANR	897118	Identifier	messagestr		897065	0					
ANR	897119	AdditiveExpression	strlen ( messagestr ) - 1		897065	1		-			
ANR	897120	CallExpression	strlen ( messagestr )		897065	0					
ANR	897121	Callee	strlen		897065	0					
ANR	897122	Identifier	strlen		897065	0					
ANR	897123	ArgumentList	messagestr		897065	1					
ANR	897124	Argument	messagestr		897065	0					
ANR	897125	Identifier	messagestr		897065	0					
ANR	897126	PrimaryExpression	1		897065	1					
ANR	897127	PrimaryExpression	'\\n'		897065	1					
ANR	897128	ExpressionStatement	messagestr [ strlen ( messagestr ) - 1 ] = '\\0'	2939:2:65095:65134	897065	1	True				
ANR	897129	AssignmentExpression	messagestr [ strlen ( messagestr ) - 1 ] = '\\0'		897065	0		=			
ANR	897130	ArrayIndexing	messagestr [ strlen ( messagestr ) - 1 ]		897065	0					
ANR	897131	Identifier	messagestr		897065	0					
ANR	897132	AdditiveExpression	strlen ( messagestr ) - 1		897065	1		-			
ANR	897133	CallExpression	strlen ( messagestr )		897065	0					
ANR	897134	Callee	strlen		897065	0					
ANR	897135	Identifier	strlen		897065	0					
ANR	897136	ArgumentList	messagestr		897065	1					
ANR	897137	Argument	messagestr		897065	0					
ANR	897138	Identifier	messagestr		897065	0					
ANR	897139	PrimaryExpression	1		897065	1					
ANR	897140	PrimaryExpression	'\\0'		897065	1					
ANR	897141	IfStatement	if ( began_execution )		897065	6					
ANR	897142	Condition	began_execution	2941:5:65142:65156	897065	0	True				
ANR	897143	Identifier	began_execution		897065	0					
ANR	897144	CompoundStatement		15:22:396:396	897065	1					
ANR	897145	ExpressionStatement	"tmpCl1 . Assign ( ""endts"" , ( int ) eventclock )"	2942:2:65163:65202	897065	0	True				
ANR	897146	CallExpression	"tmpCl1 . Assign ( ""endts"" , ( int ) eventclock )"		897065	0					
ANR	897147	Callee	tmpCl1 . Assign		897065	0					
ANR	897148	MemberAccess	tmpCl1 . Assign		897065	0					
ANR	897149	Identifier	tmpCl1		897065	0					
ANR	897150	Identifier	Assign		897065	1					
ANR	897151	ArgumentList	"""endts"""		897065	1					
ANR	897152	Argument	"""endts"""		897065	0					
ANR	897153	PrimaryExpression	"""endts"""		897065	0					
ANR	897154	Argument	( int ) eventclock		897065	1					
ANR	897155	CastExpression	( int ) eventclock		897065	0					
ANR	897156	CastTarget	int		897065	0					
ANR	897157	Identifier	eventclock		897065	1					
ANR	897158	ExpressionStatement	"tmpCl1 . Assign ( ""endtype"" , ULOG_SHADOW_EXCEPTION )"	2943:2:65206:65253	897065	1	True				
ANR	897159	CallExpression	"tmpCl1 . Assign ( ""endtype"" , ULOG_SHADOW_EXCEPTION )"		897065	0					
ANR	897160	Callee	tmpCl1 . Assign		897065	0					
ANR	897161	MemberAccess	tmpCl1 . Assign		897065	0					
ANR	897162	Identifier	tmpCl1		897065	0					
ANR	897163	Identifier	Assign		897065	1					
ANR	897164	ArgumentList	"""endtype"""		897065	1					
ANR	897165	Argument	"""endtype"""		897065	0					
ANR	897166	PrimaryExpression	"""endtype"""		897065	0					
ANR	897167	Argument	ULOG_SHADOW_EXCEPTION		897065	1					
ANR	897168	Identifier	ULOG_SHADOW_EXCEPTION		897065	0					
ANR	897169	ExpressionStatement	"tmpCl1 . Assign ( ""endmessage"" , messagestr )"	2944:2:65257:65296	897065	2	True				
ANR	897170	CallExpression	"tmpCl1 . Assign ( ""endmessage"" , messagestr )"		897065	0					
ANR	897171	Callee	tmpCl1 . Assign		897065	0					
ANR	897172	MemberAccess	tmpCl1 . Assign		897065	0					
ANR	897173	Identifier	tmpCl1		897065	0					
ANR	897174	Identifier	Assign		897065	1					
ANR	897175	ArgumentList	"""endmessage"""		897065	1					
ANR	897176	Argument	"""endmessage"""		897065	0					
ANR	897177	PrimaryExpression	"""endmessage"""		897065	0					
ANR	897178	Argument	messagestr		897065	1					
ANR	897179	Identifier	messagestr		897065	0					
ANR	897180	ExpressionStatement	"tmpCl1 . Assign ( ""runbytessent"" , sent_bytes )"	2945:2:65300:65341	897065	3	True				
ANR	897181	CallExpression	"tmpCl1 . Assign ( ""runbytessent"" , sent_bytes )"		897065	0					
ANR	897182	Callee	tmpCl1 . Assign		897065	0					
ANR	897183	MemberAccess	tmpCl1 . Assign		897065	0					
ANR	897184	Identifier	tmpCl1		897065	0					
ANR	897185	Identifier	Assign		897065	1					
ANR	897186	ArgumentList	"""runbytessent"""		897065	1					
ANR	897187	Argument	"""runbytessent"""		897065	0					
ANR	897188	PrimaryExpression	"""runbytessent"""		897065	0					
ANR	897189	Argument	sent_bytes		897065	1					
ANR	897190	Identifier	sent_bytes		897065	0					
ANR	897191	ExpressionStatement	"tmpCl1 . Assign ( ""runbytesreceived"" , recvd_bytes )"	2947:2:65346:65392	897065	4	True				
ANR	897192	CallExpression	"tmpCl1 . Assign ( ""runbytesreceived"" , recvd_bytes )"		897065	0					
ANR	897193	Callee	tmpCl1 . Assign		897065	0					
ANR	897194	MemberAccess	tmpCl1 . Assign		897065	0					
ANR	897195	Identifier	tmpCl1		897065	0					
ANR	897196	Identifier	Assign		897065	1					
ANR	897197	ArgumentList	"""runbytesreceived"""		897065	1					
ANR	897198	Argument	"""runbytesreceived"""		897065	0					
ANR	897199	PrimaryExpression	"""runbytesreceived"""		897065	0					
ANR	897200	Argument	recvd_bytes		897065	1					
ANR	897201	Identifier	recvd_bytes		897065	0					
ANR	897202	ExpressionStatement	insertCommonIdentifiers ( tmpCl2 )	2950:2:65446:65477	897065	5	True				
ANR	897203	CallExpression	insertCommonIdentifiers ( tmpCl2 )		897065	0					
ANR	897204	Callee	insertCommonIdentifiers		897065	0					
ANR	897205	Identifier	insertCommonIdentifiers		897065	0					
ANR	897206	ArgumentList	tmpCl2		897065	1					
ANR	897207	Argument	tmpCl2		897065	0					
ANR	897208	Identifier	tmpCl2		897065	0					
ANR	897209	ExpressionStatement	"tmp . sprintf ( ""endtype = null"" )"	2952:2:65482:65512	897065	6	True				
ANR	897210	CallExpression	"tmp . sprintf ( ""endtype = null"" )"		897065	0					
ANR	897211	Callee	tmp . sprintf		897065	0					
ANR	897212	MemberAccess	tmp . sprintf		897065	0					
ANR	897213	Identifier	tmp		897065	0					
ANR	897214	Identifier	sprintf		897065	1					
ANR	897215	ArgumentList	"""endtype = null"""		897065	1					
ANR	897216	Argument	"""endtype = null"""		897065	0					
ANR	897217	PrimaryExpression	"""endtype = null"""		897065	0					
ANR	897218	ExpressionStatement	tmpCl2 . Insert ( tmp . Value ( ) )	2953:2:65516:65542	897065	7	True				
ANR	897219	CallExpression	tmpCl2 . Insert ( tmp . Value ( ) )		897065	0					
ANR	897220	Callee	tmpCl2 . Insert		897065	0					
ANR	897221	MemberAccess	tmpCl2 . Insert		897065	0					
ANR	897222	Identifier	tmpCl2		897065	0					
ANR	897223	Identifier	Insert		897065	1					
ANR	897224	ArgumentList	tmp . Value ( )		897065	1					
ANR	897225	Argument	tmp . Value ( )		897065	0					
ANR	897226	CallExpression	tmp . Value ( )		897065	0					
ANR	897227	Callee	tmp . Value		897065	0					
ANR	897228	MemberAccess	tmp . Value		897065	0					
ANR	897229	Identifier	tmp		897065	0					
ANR	897230	Identifier	Value		897065	1					
ANR	897231	ArgumentList			897065	1					
ANR	897232	IfStatement	if ( FILEObj )		897065	8					
ANR	897233	Condition	FILEObj	2955:6:65551:65557	897065	0	True				
ANR	897234	Identifier	FILEObj		897065	0					
ANR	897235	CompoundStatement		29:15:797:797	897065	1					
ANR	897236	IfStatement	"if ( FILEObj -> file_updateEvent ( ""Runs"" , & tmpCl1 , & tmpCl2 ) == QUILL_FAILURE )"		897065	0					
ANR	897237	Condition	"FILEObj -> file_updateEvent ( ""Runs"" , & tmpCl1 , & tmpCl2 ) == QUILL_FAILURE"	2956:7:65569:65636	897065	0	True				
ANR	897238	EqualityExpression	"FILEObj -> file_updateEvent ( ""Runs"" , & tmpCl1 , & tmpCl2 ) == QUILL_FAILURE"		897065	0		==			
ANR	897239	CallExpression	"FILEObj -> file_updateEvent ( ""Runs"" , & tmpCl1 , & tmpCl2 )"		897065	0					
ANR	897240	Callee	FILEObj -> file_updateEvent		897065	0					
ANR	897241	PtrMemberAccess	FILEObj -> file_updateEvent		897065	0					
ANR	897242	Identifier	FILEObj		897065	0					
ANR	897243	Identifier	file_updateEvent		897065	1					
ANR	897244	ArgumentList	"""Runs"""		897065	1					
ANR	897245	Argument	"""Runs"""		897065	0					
ANR	897246	PrimaryExpression	"""Runs"""		897065	0					
ANR	897247	Argument	& tmpCl1		897065	1					
ANR	897248	UnaryOperationExpression	& tmpCl1		897065	0					
ANR	897249	UnaryOperator	&		897065	0					
ANR	897250	Identifier	tmpCl1		897065	1					
ANR	897251	Argument	& tmpCl2		897065	2					
ANR	897252	UnaryOperationExpression	& tmpCl2		897065	0					
ANR	897253	UnaryOperator	&		897065	0					
ANR	897254	Identifier	tmpCl2		897065	1					
ANR	897255	Identifier	QUILL_FAILURE		897065	1					
ANR	897256	CompoundStatement		30:77:876:876	897065	1					
ANR	897257	ExpressionStatement	"dprintf ( D_ALWAYS , ""Logging Event 13--- Error\\n"" )"	2957:4:65645:65693	897065	0	True				
ANR	897258	CallExpression	"dprintf ( D_ALWAYS , ""Logging Event 13--- Error\\n"" )"		897065	0					
ANR	897259	Callee	dprintf		897065	0					
ANR	897260	Identifier	dprintf		897065	0					
ANR	897261	ArgumentList	D_ALWAYS		897065	1					
ANR	897262	Argument	D_ALWAYS		897065	0					
ANR	897263	Identifier	D_ALWAYS		897065	0					
ANR	897264	Argument	"""Logging Event 13--- Error\\n"""		897065	1					
ANR	897265	PrimaryExpression	"""Logging Event 13--- Error\\n"""		897065	0					
ANR	897266	ReturnStatement	return 0 ;	2958:4:65699:65707	897065	1	True				
ANR	897267	PrimaryExpression	0		897065	0					
ANR	897268	ElseStatement	else		897065	0					
ANR	897269	CompoundStatement		35:8:989:989	897065	0					
ANR	897270	ExpressionStatement	insertCommonIdentifiers ( tmpCl1 )	2963:8:65811:65842	897065	0	True				
ANR	897271	CallExpression	insertCommonIdentifiers ( tmpCl1 )		897065	0					
ANR	897272	Callee	insertCommonIdentifiers		897065	0					
ANR	897273	Identifier	insertCommonIdentifiers		897065	0					
ANR	897274	ArgumentList	tmpCl1		897065	1					
ANR	897275	Argument	tmpCl1		897065	0					
ANR	897276	Identifier	tmpCl1		897065	0					
ANR	897277	ExpressionStatement	"tmpCl1 . Assign ( ""eventtype"" , ULOG_SHADOW_EXCEPTION )"	2965:2:65847:65896	897065	1	True				
ANR	897278	CallExpression	"tmpCl1 . Assign ( ""eventtype"" , ULOG_SHADOW_EXCEPTION )"		897065	0					
ANR	897279	Callee	tmpCl1 . Assign		897065	0					
ANR	897280	MemberAccess	tmpCl1 . Assign		897065	0					
ANR	897281	Identifier	tmpCl1		897065	0					
ANR	897282	Identifier	Assign		897065	1					
ANR	897283	ArgumentList	"""eventtype"""		897065	1					
ANR	897284	Argument	"""eventtype"""		897065	0					
ANR	897285	PrimaryExpression	"""eventtype"""		897065	0					
ANR	897286	Argument	ULOG_SHADOW_EXCEPTION		897065	1					
ANR	897287	Identifier	ULOG_SHADOW_EXCEPTION		897065	0					
ANR	897288	ExpressionStatement	"tmpCl1 . Assign ( ""eventtime"" , ( int ) eventclock )"	2966:2:65900:65943	897065	2	True				
ANR	897289	CallExpression	"tmpCl1 . Assign ( ""eventtime"" , ( int ) eventclock )"		897065	0					
ANR	897290	Callee	tmpCl1 . Assign		897065	0					
ANR	897291	MemberAccess	tmpCl1 . Assign		897065	0					
ANR	897292	Identifier	tmpCl1		897065	0					
ANR	897293	Identifier	Assign		897065	1					
ANR	897294	ArgumentList	"""eventtime"""		897065	1					
ANR	897295	Argument	"""eventtime"""		897065	0					
ANR	897296	PrimaryExpression	"""eventtime"""		897065	0					
ANR	897297	Argument	( int ) eventclock		897065	1					
ANR	897298	CastExpression	( int ) eventclock		897065	0					
ANR	897299	CastTarget	int		897065	0					
ANR	897300	Identifier	eventclock		897065	1					
ANR	897301	ExpressionStatement	"tmpCl1 . Assign ( ""description"" , messagestr )"	2967:2:65947:65987	897065	3	True				
ANR	897302	CallExpression	"tmpCl1 . Assign ( ""description"" , messagestr )"		897065	0					
ANR	897303	Callee	tmpCl1 . Assign		897065	0					
ANR	897304	MemberAccess	tmpCl1 . Assign		897065	0					
ANR	897305	Identifier	tmpCl1		897065	0					
ANR	897306	Identifier	Assign		897065	1					
ANR	897307	ArgumentList	"""description"""		897065	1					
ANR	897308	Argument	"""description"""		897065	0					
ANR	897309	PrimaryExpression	"""description"""		897065	0					
ANR	897310	Argument	messagestr		897065	1					
ANR	897311	Identifier	messagestr		897065	0					
ANR	897312	IfStatement	if ( FILEObj )		897065	4					
ANR	897313	Condition	FILEObj	2969:6:65996:66002	897065	0	True				
ANR	897314	Identifier	FILEObj		897065	0					
ANR	897315	CompoundStatement		43:15:1242:1242	897065	1					
ANR	897316	IfStatement	"if ( FILEObj -> file_newEvent ( ""Events"" , & tmpCl1 ) == QUILL_FAILURE )"		897065	0					
ANR	897317	Condition	"FILEObj -> file_newEvent ( ""Events"" , & tmpCl1 ) == QUILL_FAILURE"	2970:7:66014:66071	897065	0	True				
ANR	897318	EqualityExpression	"FILEObj -> file_newEvent ( ""Events"" , & tmpCl1 ) == QUILL_FAILURE"		897065	0		==			
ANR	897319	CallExpression	"FILEObj -> file_newEvent ( ""Events"" , & tmpCl1 )"		897065	0					
ANR	897320	Callee	FILEObj -> file_newEvent		897065	0					
ANR	897321	PtrMemberAccess	FILEObj -> file_newEvent		897065	0					
ANR	897322	Identifier	FILEObj		897065	0					
ANR	897323	Identifier	file_newEvent		897065	1					
ANR	897324	ArgumentList	"""Events"""		897065	1					
ANR	897325	Argument	"""Events"""		897065	0					
ANR	897326	PrimaryExpression	"""Events"""		897065	0					
ANR	897327	Argument	& tmpCl1		897065	1					
ANR	897328	UnaryOperationExpression	& tmpCl1		897065	0					
ANR	897329	UnaryOperator	&		897065	0					
ANR	897330	Identifier	tmpCl1		897065	1					
ANR	897331	Identifier	QUILL_FAILURE		897065	1					
ANR	897332	CompoundStatement		44:67:1311:1311	897065	1					
ANR	897333	ExpressionStatement	"dprintf ( D_ALWAYS , ""Logging Event 14 --- Error\\n"" )"	2971:4:66080:66129	897065	0	True				
ANR	897334	CallExpression	"dprintf ( D_ALWAYS , ""Logging Event 14 --- Error\\n"" )"		897065	0					
ANR	897335	Callee	dprintf		897065	0					
ANR	897336	Identifier	dprintf		897065	0					
ANR	897337	ArgumentList	D_ALWAYS		897065	1					
ANR	897338	Argument	D_ALWAYS		897065	0					
ANR	897339	Identifier	D_ALWAYS		897065	0					
ANR	897340	Argument	"""Logging Event 14 --- Error\\n"""		897065	1					
ANR	897341	PrimaryExpression	"""Logging Event 14 --- Error\\n"""		897065	0					
ANR	897342	ReturnStatement	return 0 ;	2972:4:66135:66143	897065	1	True				
ANR	897343	PrimaryExpression	0		897065	0					
ANR	897344	IfStatement	"if ( fprintf ( file , ""Shadow exception!\\n\\t"" ) < 0 )"		897065	7					
ANR	897345	Condition	"fprintf ( file , ""Shadow exception!\\n\\t"" ) < 0"	2978:5:66190:66232	897065	0	True				
ANR	897346	RelationalExpression	"fprintf ( file , ""Shadow exception!\\n\\t"" ) < 0"		897065	0		<			
ANR	897347	CallExpression	"fprintf ( file , ""Shadow exception!\\n\\t"" )"		897065	0					
ANR	897348	Callee	fprintf		897065	0					
ANR	897349	Identifier	fprintf		897065	0					
ANR	897350	ArgumentList	file		897065	1					
ANR	897351	Argument	file		897065	0					
ANR	897352	Identifier	file		897065	0					
ANR	897353	Argument	"""Shadow exception!\\n\\t"""		897065	1					
ANR	897354	PrimaryExpression	"""Shadow exception!\\n\\t"""		897065	0					
ANR	897355	PrimaryExpression	0		897065	1					
ANR	897356	ReturnStatement	return 0 ;	2979:2:66237:66245	897065	1	True				
ANR	897357	PrimaryExpression	0		897065	0					
ANR	897358	IfStatement	"if ( fprintf ( file , ""%s\\n"" , message ) < 0 )"		897065	8					
ANR	897359	Condition	"fprintf ( file , ""%s\\n"" , message ) < 0"	2980:5:66252:66286	897065	0	True				
ANR	897360	RelationalExpression	"fprintf ( file , ""%s\\n"" , message ) < 0"		897065	0		<			
ANR	897361	CallExpression	"fprintf ( file , ""%s\\n"" , message )"		897065	0					
ANR	897362	Callee	fprintf		897065	0					
ANR	897363	Identifier	fprintf		897065	0					
ANR	897364	ArgumentList	file		897065	1					
ANR	897365	Argument	file		897065	0					
ANR	897366	Identifier	file		897065	0					
ANR	897367	Argument	"""%s\\n"""		897065	1					
ANR	897368	PrimaryExpression	"""%s\\n"""		897065	0					
ANR	897369	Argument	message		897065	2					
ANR	897370	Identifier	message		897065	0					
ANR	897371	PrimaryExpression	0		897065	1					
ANR	897372	ReturnStatement	return 0 ;	2981:2:66291:66299	897065	1	True				
ANR	897373	PrimaryExpression	0		897065	0					
ANR	897374	IfStatement	"if ( fprintf ( file , ""\\t%.0f  -  Run Bytes Sent By Job\\n"" , sent_bytes ) < 0 || fprintf ( file , ""\\t%.0f  -  Run Bytes Received By Job\\n"" , recvd_bytes ) < 0 )"		897065	9					
ANR	897375	Condition	"fprintf ( file , ""\\t%.0f  -  Run Bytes Sent By Job\\n"" , sent_bytes ) < 0 || fprintf ( file , ""\\t%.0f  -  Run Bytes Received By Job\\n"" , recvd_bytes ) < 0"	2983:5:66307:66458	897065	0	True				
ANR	897376	OrExpression	"fprintf ( file , ""\\t%.0f  -  Run Bytes Sent By Job\\n"" , sent_bytes ) < 0 || fprintf ( file , ""\\t%.0f  -  Run Bytes Received By Job\\n"" , recvd_bytes ) < 0"		897065	0		||			
ANR	897377	RelationalExpression	"fprintf ( file , ""\\t%.0f  -  Run Bytes Sent By Job\\n"" , sent_bytes ) < 0"		897065	0		<			
ANR	897378	CallExpression	"fprintf ( file , ""\\t%.0f  -  Run Bytes Sent By Job\\n"" , sent_bytes )"		897065	0					
ANR	897379	Callee	fprintf		897065	0					
ANR	897380	Identifier	fprintf		897065	0					
ANR	897381	ArgumentList	file		897065	1					
ANR	897382	Argument	file		897065	0					
ANR	897383	Identifier	file		897065	0					
ANR	897384	Argument	"""\\t%.0f  -  Run Bytes Sent By Job\\n"""		897065	1					
ANR	897385	PrimaryExpression	"""\\t%.0f  -  Run Bytes Sent By Job\\n"""		897065	0					
ANR	897386	Argument	sent_bytes		897065	2					
ANR	897387	Identifier	sent_bytes		897065	0					
ANR	897388	PrimaryExpression	0		897065	1					
ANR	897389	RelationalExpression	"fprintf ( file , ""\\t%.0f  -  Run Bytes Received By Job\\n"" , recvd_bytes ) < 0"		897065	1		<			
ANR	897390	CallExpression	"fprintf ( file , ""\\t%.0f  -  Run Bytes Received By Job\\n"" , recvd_bytes )"		897065	0					
ANR	897391	Callee	fprintf		897065	0					
ANR	897392	Identifier	fprintf		897065	0					
ANR	897393	ArgumentList	file		897065	1					
ANR	897394	Argument	file		897065	0					
ANR	897395	Identifier	file		897065	0					
ANR	897396	Argument	"""\\t%.0f  -  Run Bytes Received By Job\\n"""		897065	1					
ANR	897397	PrimaryExpression	"""\\t%.0f  -  Run Bytes Received By Job\\n"""		897065	0					
ANR	897398	Argument	recvd_bytes		897065	2					
ANR	897399	Identifier	recvd_bytes		897065	0					
ANR	897400	PrimaryExpression	0		897065	1					
ANR	897401	ReturnStatement	return 1 ;	2986:2:66463:66471	897065	1	True				
ANR	897402	PrimaryExpression	1		897065	0					
ANR	897403	ReturnStatement	return 1 ;	2988:1:66505:66513	897065	10	True				
ANR	897404	PrimaryExpression	1		897065	0					
ANR	897405	ReturnType	int		897065	1					
ANR	897406	Identifier	ShadowExceptionEvent :: writeEvent		897065	2					
ANR	897407	ParameterList	FILE * file		897065	3					
ANR	897408	Parameter	FILE * file	2926:34:64750:64759	897065	0	True				
ANR	897409	ParameterType	FILE *		897065	0					
ANR	897410	Identifier	file		897065	1					
ANR	897411	CFGEntryNode	ENTRY		897065		True				
ANR	897412	CFGExitNode	EXIT		897065		True				
ANR	897413	Symbol	scheddname		897065						
ANR	897414	Symbol	tmp . Value		897065						
ANR	897415	Symbol	ENV_SCHEDD_NAME		897065						
ANR	897416	Symbol	EnvGetName		897065						
ANR	897417	Symbol	QUILL_FAILURE		897065						
ANR	897418	Symbol	FILEObj		897065						
ANR	897419	Symbol	began_execution		897065						
ANR	897420	Symbol	sent_bytes		897065						
ANR	897421	Symbol	* FILEObj		897065						
ANR	897422	Symbol	strlen		897065						
ANR	897423	Symbol	& tmpCl1		897065						
ANR	897424	Symbol	file		897065						
ANR	897425	Symbol	eventclock		897065						
ANR	897426	Symbol	tmp		897065						
ANR	897427	Symbol	recvd_bytes		897065						
ANR	897428	Symbol	& tmpCl2		897065						
ANR	897429	Symbol	FILEObj -> file_newEvent		897065						
ANR	897430	Symbol	ULOG_SHADOW_EXCEPTION		897065						
ANR	897431	Symbol	getenv		897065						
ANR	897432	Symbol	D_ALWAYS		897065						
ANR	897433	Symbol	message		897065						
ANR	897434	Symbol	fprintf		897065						
ANR	897435	Symbol	FILEObj -> file_updateEvent		897065						
ANR	897436	Symbol	messagestr		897065						
ANR	897437	Symbol	tmpCl2		897065						
ANR	897438	Symbol	* strlen		897065						
ANR	897439	Symbol	* messagestr		897065						
ANR	897440	Symbol	tmpCl1		897065						
ANR	897441	Function	ShadowExceptionEvent :: toClassAd	2991:0:66518:67111							
ANR	897442	FunctionDef	ShadowExceptionEvent :: toClassAd ()		897441	0					
ANR	897443	CompoundStatement		2993:0:66565:67111	897441	0					
ANR	897444	IdentifierDeclStatement	bool success = true ;	2994:1:66568:66591	897441	0	True				
ANR	897445	IdentifierDecl	success = true		897441	0					
ANR	897446	IdentifierDeclType	bool		897441	0					
ANR	897447	Identifier	success		897441	1					
ANR	897448	AssignmentExpression	success = true		897441	2		=			
ANR	897449	Identifier	true		897441	0					
ANR	897450	Identifier	true		897441	1					
ANR	897451	IdentifierDeclStatement	ClassAd * myad = ULogEvent :: toClassAd ( ) ;	2995:1:66594:66632	897441	1	True				
ANR	897452	IdentifierDecl	* myad = ULogEvent :: toClassAd ( )		897441	0					
ANR	897453	IdentifierDeclType	ClassAd *		897441	0					
ANR	897454	Identifier	myad		897441	1					
ANR	897455	AssignmentExpression	* myad = ULogEvent :: toClassAd ( )		897441	2		=			
ANR	897456	Identifier	myad		897441	0					
ANR	897457	CallExpression	ULogEvent :: toClassAd ( )		897441	1					
ANR	897458	Callee	ULogEvent :: toClassAd		897441	0					
ANR	897459	Identifier	ULogEvent :: toClassAd		897441	0					
ANR	897460	ArgumentList			897441	1					
ANR	897461	IfStatement	if ( myad )		897441	2					
ANR	897462	Condition	myad	2996:5:66639:66642	897441	0	True				
ANR	897463	Identifier	myad		897441	0					
ANR	897464	CompoundStatement		7:2:103:116	897441	1					
ANR	897465	IdentifierDeclStatement	char buf0 [ 512 ] ;	2997:2:66650:66664	897441	0	True				
ANR	897466	IdentifierDecl	buf0 [ 512 ]		897441	0					
ANR	897467	IdentifierDeclType	char [ 512 ]		897441	0					
ANR	897468	Identifier	buf0		897441	1					
ANR	897469	PrimaryExpression	512		897441	2					
ANR	897470	IdentifierDeclStatement	MyString buf2 ;	2999:2:66669:66682	897441	1	True				
ANR	897471	IdentifierDecl	buf2		897441	0					
ANR	897472	IdentifierDeclType	MyString		897441	0					
ANR	897473	Identifier	buf2		897441	1					
ANR	897474	ExpressionStatement	"buf2 . sprintf ( ""Message = \\""%s\\"""" , message )"	3000:2:66686:66727	897441	2	True				
ANR	897475	CallExpression	"buf2 . sprintf ( ""Message = \\""%s\\"""" , message )"		897441	0					
ANR	897476	Callee	buf2 . sprintf		897441	0					
ANR	897477	MemberAccess	buf2 . sprintf		897441	0					
ANR	897478	Identifier	buf2		897441	0					
ANR	897479	Identifier	sprintf		897441	1					
ANR	897480	ArgumentList	"""Message = \\""%s\\"""""		897441	1					
ANR	897481	Argument	"""Message = \\""%s\\"""""		897441	0					
ANR	897482	PrimaryExpression	"""Message = \\""%s\\"""""		897441	0					
ANR	897483	Argument	message		897441	1					
ANR	897484	Identifier	message		897441	0					
ANR	897485	IfStatement	if ( ! myad -> Insert ( buf2 . Value ( ) ) )		897441	3					
ANR	897486	Condition	! myad -> Insert ( buf2 . Value ( ) )	3001:6:66735:66761	897441	0	True				
ANR	897487	UnaryOperationExpression	! myad -> Insert ( buf2 . Value ( ) )		897441	0					
ANR	897488	UnaryOperator	!		897441	0					
ANR	897489	CallExpression	myad -> Insert ( buf2 . Value ( ) )		897441	1					
ANR	897490	Callee	myad -> Insert		897441	0					
ANR	897491	PtrMemberAccess	myad -> Insert		897441	0					
ANR	897492	Identifier	myad		897441	0					
ANR	897493	Identifier	Insert		897441	1					
ANR	897494	ArgumentList	buf2 . Value ( )		897441	1					
ANR	897495	Argument	buf2 . Value ( )		897441	0					
ANR	897496	CallExpression	buf2 . Value ( )		897441	0					
ANR	897497	Callee	buf2 . Value		897441	0					
ANR	897498	MemberAccess	buf2 . Value		897441	0					
ANR	897499	Identifier	buf2		897441	0					
ANR	897500	Identifier	Value		897441	1					
ANR	897501	ArgumentList			897441	1					
ANR	897502	CompoundStatement		9:35:198:198	897441	1					
ANR	897503	ExpressionStatement	success = false	3002:3:66769:66784	897441	0	True				
ANR	897504	AssignmentExpression	success = false		897441	0		=			
ANR	897505	Identifier	success		897441	0					
ANR	897506	Identifier	false		897441	1					
ANR	897507	ExpressionStatement	"snprintf ( buf0 , 512 , ""SentBytes = %f"" , sent_bytes )"	3005:2:66793:66842	897441	4	True				
ANR	897508	CallExpression	"snprintf ( buf0 , 512 , ""SentBytes = %f"" , sent_bytes )"		897441	0					
ANR	897509	Callee	snprintf		897441	0					
ANR	897510	Identifier	snprintf		897441	0					
ANR	897511	ArgumentList	buf0		897441	1					
ANR	897512	Argument	buf0		897441	0					
ANR	897513	Identifier	buf0		897441	0					
ANR	897514	Argument	512		897441	1					
ANR	897515	PrimaryExpression	512		897441	0					
ANR	897516	Argument	"""SentBytes = %f"""		897441	2					
ANR	897517	PrimaryExpression	"""SentBytes = %f"""		897441	0					
ANR	897518	Argument	sent_bytes		897441	3					
ANR	897519	Identifier	sent_bytes		897441	0					
ANR	897520	ExpressionStatement	buf0 [ 511 ] = 0	3006:2:66846:66859	897441	5	True				
ANR	897521	AssignmentExpression	buf0 [ 511 ] = 0		897441	0		=			
ANR	897522	ArrayIndexing	buf0 [ 511 ]		897441	0					
ANR	897523	Identifier	buf0		897441	0					
ANR	897524	PrimaryExpression	511		897441	1					
ANR	897525	PrimaryExpression	0		897441	1					
ANR	897526	IfStatement	if ( ! myad -> Insert ( buf0 ) )		897441	6					
ANR	897527	Condition	! myad -> Insert ( buf0 )	3007:6:66867:66885	897441	0	True				
ANR	897528	UnaryOperationExpression	! myad -> Insert ( buf0 )		897441	0					
ANR	897529	UnaryOperator	!		897441	0					
ANR	897530	CallExpression	myad -> Insert ( buf0 )		897441	1					
ANR	897531	Callee	myad -> Insert		897441	0					
ANR	897532	PtrMemberAccess	myad -> Insert		897441	0					
ANR	897533	Identifier	myad		897441	0					
ANR	897534	Identifier	Insert		897441	1					
ANR	897535	ArgumentList	buf0		897441	1					
ANR	897536	Argument	buf0		897441	0					
ANR	897537	Identifier	buf0		897441	0					
ANR	897538	CompoundStatement		15:28:323:323	897441	1					
ANR	897539	ExpressionStatement	success = false	3008:3:66894:66909	897441	0	True				
ANR	897540	AssignmentExpression	success = false		897441	0		=			
ANR	897541	Identifier	success		897441	0					
ANR	897542	Identifier	false		897441	1					
ANR	897543	ExpressionStatement	"snprintf ( buf0 , 512 , ""ReceivedBytes = %f"" , recvd_bytes )"	3010:2:66917:66971	897441	7	True				
ANR	897544	CallExpression	"snprintf ( buf0 , 512 , ""ReceivedBytes = %f"" , recvd_bytes )"		897441	0					
ANR	897545	Callee	snprintf		897441	0					
ANR	897546	Identifier	snprintf		897441	0					
ANR	897547	ArgumentList	buf0		897441	1					
ANR	897548	Argument	buf0		897441	0					
ANR	897549	Identifier	buf0		897441	0					
ANR	897550	Argument	512		897441	1					
ANR	897551	PrimaryExpression	512		897441	0					
ANR	897552	Argument	"""ReceivedBytes = %f"""		897441	2					
ANR	897553	PrimaryExpression	"""ReceivedBytes = %f"""		897441	0					
ANR	897554	Argument	recvd_bytes		897441	3					
ANR	897555	Identifier	recvd_bytes		897441	0					
ANR	897556	ExpressionStatement	buf0 [ 511 ] = 0	3011:2:66975:66988	897441	8	True				
ANR	897557	AssignmentExpression	buf0 [ 511 ] = 0		897441	0		=			
ANR	897558	ArrayIndexing	buf0 [ 511 ]		897441	0					
ANR	897559	Identifier	buf0		897441	0					
ANR	897560	PrimaryExpression	511		897441	1					
ANR	897561	PrimaryExpression	0		897441	1					
ANR	897562	IfStatement	if ( ! myad -> Insert ( buf0 ) )		897441	9					
ANR	897563	Condition	! myad -> Insert ( buf0 )	3012:6:66996:67014	897441	0	True				
ANR	897564	UnaryOperationExpression	! myad -> Insert ( buf0 )		897441	0					
ANR	897565	UnaryOperator	!		897441	0					
ANR	897566	CallExpression	myad -> Insert ( buf0 )		897441	1					
ANR	897567	Callee	myad -> Insert		897441	0					
ANR	897568	PtrMemberAccess	myad -> Insert		897441	0					
ANR	897569	Identifier	myad		897441	0					
ANR	897570	Identifier	Insert		897441	1					
ANR	897571	ArgumentList	buf0		897441	1					
ANR	897572	Argument	buf0		897441	0					
ANR	897573	Identifier	buf0		897441	0					
ANR	897574	CompoundStatement		20:28:452:452	897441	1					
ANR	897575	ExpressionStatement	success = false	3013:3:67023:67038	897441	0	True				
ANR	897576	AssignmentExpression	success = false		897441	0		=			
ANR	897577	Identifier	success		897441	0					
ANR	897578	Identifier	false		897441	1					
ANR	897579	IfStatement	if ( ! success )		897441	3					
ANR	897580	Condition	! success	3016:5:67052:67059	897441	0	True				
ANR	897581	UnaryOperationExpression	! success		897441	0					
ANR	897582	UnaryOperator	!		897441	0					
ANR	897583	Identifier	success		897441	1					
ANR	897584	CompoundStatement		24:15:496:496	897441	1					
ANR	897585	Statement	delete	3017:2:67066:67071	897441	0	True				
ANR	897586	ExpressionStatement	myad	3017:9:67073:67077	897441	1	True				
ANR	897587	Identifier	myad		897441	0					
ANR	897588	ExpressionStatement	myad = NULL	3018:2:67081:67092	897441	2	True				
ANR	897589	AssignmentExpression	myad = NULL		897441	0		=			
ANR	897590	Identifier	myad		897441	0					
ANR	897591	Identifier	NULL		897441	1					
ANR	897592	ReturnStatement	return myad ;	3020:1:67098:67109	897441	4	True				
ANR	897593	Identifier	myad		897441	0					
ANR	897594	ReturnType	ClassAd *		897441	1					
ANR	897595	Identifier	ShadowExceptionEvent :: toClassAd		897441	2					
ANR	897596	ParameterList			897441	3					
ANR	897597	CFGEntryNode	ENTRY		897441		True				
ANR	897598	CFGExitNode	EXIT		897441		True				
ANR	897599	Symbol	NULL		897441						
ANR	897600	Symbol	* myad		897441						
ANR	897601	Symbol	false		897441						
ANR	897602	Symbol	myad -> Insert		897441						
ANR	897603	Symbol	message		897441						
ANR	897604	Symbol	ULogEvent :: toClassAd		897441						
ANR	897605	Symbol	buf2 . Value		897441						
ANR	897606	Symbol	sent_bytes		897441						
ANR	897607	Symbol	* buf0		897441						
ANR	897608	Symbol	buf2		897441						
ANR	897609	Symbol	buf0		897441						
ANR	897610	Symbol	success		897441						
ANR	897611	Symbol	recvd_bytes		897441						
ANR	897612	Symbol	true		897441						
ANR	897613	Symbol	myad		897441						
ANR	897614	Function	ShadowExceptionEvent :: initFromClassAd	3023:0:67114:67402							
ANR	897615	FunctionDef	ShadowExceptionEvent :: initFromClassAd (ClassAd * ad)		897614	0					
ANR	897616	CompoundStatement		3025:0:67170:67402	897614	0					
ANR	897617	ExpressionStatement	ULogEvent :: initFromClassAd ( ad )	3026:1:67173:67203	897614	0	True				
ANR	897618	CallExpression	ULogEvent :: initFromClassAd ( ad )		897614	0					
ANR	897619	Callee	ULogEvent :: initFromClassAd		897614	0					
ANR	897620	Identifier	ULogEvent :: initFromClassAd		897614	0					
ANR	897621	ArgumentList	ad		897614	1					
ANR	897622	Argument	ad		897614	0					
ANR	897623	Identifier	ad		897614	0					
ANR	897624	IfStatement	if ( ! ad )		897614	1					
ANR	897625	Condition	! ad	3028:5:67211:67213	897614	0	True				
ANR	897626	UnaryOperationExpression	! ad		897614	0					
ANR	897627	UnaryOperator	!		897614	0					
ANR	897628	Identifier	ad		897614	1					
ANR	897629	ReturnStatement	return ;	3028:11:67217:67223	897614	1	True				
ANR	897630	IfStatement	"if ( ad -> LookupString ( ""Message"" , message , BUFSIZ ) )"		897614	2					
ANR	897631	Condition	"ad -> LookupString ( ""Message"" , message , BUFSIZ )"	3030:5:67231:67274	897614	0	True				
ANR	897632	CallExpression	"ad -> LookupString ( ""Message"" , message , BUFSIZ )"		897614	0					
ANR	897633	Callee	ad -> LookupString		897614	0					
ANR	897634	PtrMemberAccess	ad -> LookupString		897614	0					
ANR	897635	Identifier	ad		897614	0					
ANR	897636	Identifier	LookupString		897614	1					
ANR	897637	ArgumentList	"""Message"""		897614	1					
ANR	897638	Argument	"""Message"""		897614	0					
ANR	897639	PrimaryExpression	"""Message"""		897614	0					
ANR	897640	Argument	message		897614	1					
ANR	897641	Identifier	message		897614	0					
ANR	897642	Argument	BUFSIZ		897614	2					
ANR	897643	Identifier	BUFSIZ		897614	0					
ANR	897644	CompoundStatement		6:52:107:107	897614	1					
ANR	897645	ExpressionStatement	message [ BUFSIZ - 1 ] = 0	3031:2:67282:67305	897614	0	True				
ANR	897646	AssignmentExpression	message [ BUFSIZ - 1 ] = 0		897614	0		=			
ANR	897647	ArrayIndexing	message [ BUFSIZ - 1 ]		897614	0					
ANR	897648	Identifier	message		897614	0					
ANR	897649	AdditiveExpression	BUFSIZ - 1		897614	1		-			
ANR	897650	Identifier	BUFSIZ		897614	0					
ANR	897651	PrimaryExpression	1		897614	1					
ANR	897652	PrimaryExpression	0		897614	1					
ANR	897653	ExpressionStatement	"ad -> LookupFloat ( ""SentBytes"" , sent_bytes )"	3034:1:67312:67352	897614	3	True				
ANR	897654	CallExpression	"ad -> LookupFloat ( ""SentBytes"" , sent_bytes )"		897614	0					
ANR	897655	Callee	ad -> LookupFloat		897614	0					
ANR	897656	PtrMemberAccess	ad -> LookupFloat		897614	0					
ANR	897657	Identifier	ad		897614	0					
ANR	897658	Identifier	LookupFloat		897614	1					
ANR	897659	ArgumentList	"""SentBytes"""		897614	1					
ANR	897660	Argument	"""SentBytes"""		897614	0					
ANR	897661	PrimaryExpression	"""SentBytes"""		897614	0					
ANR	897662	Argument	sent_bytes		897614	1					
ANR	897663	Identifier	sent_bytes		897614	0					
ANR	897664	ExpressionStatement	"ad -> LookupFloat ( ""ReceivedBytes"" , recvd_bytes )"	3035:1:67355:67400	897614	4	True				
ANR	897665	CallExpression	"ad -> LookupFloat ( ""ReceivedBytes"" , recvd_bytes )"		897614	0					
ANR	897666	Callee	ad -> LookupFloat		897614	0					
ANR	897667	PtrMemberAccess	ad -> LookupFloat		897614	0					
ANR	897668	Identifier	ad		897614	0					
ANR	897669	Identifier	LookupFloat		897614	1					
ANR	897670	ArgumentList	"""ReceivedBytes"""		897614	1					
ANR	897671	Argument	"""ReceivedBytes"""		897614	0					
ANR	897672	PrimaryExpression	"""ReceivedBytes"""		897614	0					
ANR	897673	Argument	recvd_bytes		897614	1					
ANR	897674	Identifier	recvd_bytes		897614	0					
ANR	897675	ReturnType	void		897614	1					
ANR	897676	Identifier	ShadowExceptionEvent :: initFromClassAd		897614	2					
ANR	897677	ParameterList	ClassAd * ad		897614	3					
ANR	897678	Parameter	ClassAd * ad	3024:38:67157:67167	897614	0	True				
ANR	897679	ParameterType	ClassAd *		897614	0					
ANR	897680	Identifier	ad		897614	1					
ANR	897681	CFGEntryNode	ENTRY		897614		True				
ANR	897682	CFGExitNode	EXIT		897614		True				
ANR	897683	Symbol	ad -> LookupString		897614						
ANR	897684	Symbol	* BUFSIZ		897614						
ANR	897685	Symbol	ad		897614						
ANR	897686	Symbol	recvd_bytes		897614						
ANR	897687	Symbol	* ad		897614						
ANR	897688	Symbol	* message		897614						
ANR	897689	Symbol	message		897614						
ANR	897690	Symbol	BUFSIZ		897614						
ANR	897691	Symbol	sent_bytes		897614						
ANR	897692	Function	JobSuspendedEvent :: JobSuspendedEvent	3038:0:67405:67502							
ANR	897693	FunctionDef	JobSuspendedEvent :: JobSuspendedEvent ()		897692	0					
ANR	897694	CompoundStatement		3039:0:67449:67502	897692	0					
ANR	897695	ExpressionStatement	eventNumber = ULOG_JOB_SUSPENDED	3040:1:67452:67484	897692	0	True				
ANR	897696	AssignmentExpression	eventNumber = ULOG_JOB_SUSPENDED		897692	0		=			
ANR	897697	Identifier	eventNumber		897692	0					
ANR	897698	Identifier	ULOG_JOB_SUSPENDED		897692	1					
ANR	897699	ExpressionStatement	num_pids = - 1	3041:1:67487:67500	897692	1	True				
ANR	897700	AssignmentExpression	num_pids = - 1		897692	0		=			
ANR	897701	Identifier	num_pids		897692	0					
ANR	897702	UnaryOperationExpression	- 1		897692	1					
ANR	897703	UnaryOperator	-		897692	0					
ANR	897704	PrimaryExpression	1		897692	1					
ANR	897705	Identifier	JobSuspendedEvent :: JobSuspendedEvent		897692	1					
ANR	897706	ParameterList			897692	2					
ANR	897707	CFGEntryNode	ENTRY		897692		True				
ANR	897708	CFGExitNode	EXIT		897692		True				
ANR	897709	Symbol	eventNumber		897692						
ANR	897710	Symbol	num_pids		897692						
ANR	897711	Symbol	ULOG_JOB_SUSPENDED		897692						
ANR	897712	Function	JobSuspendedEvent :: ~JobSuspendedEvent	3044:0:67505:67552							
ANR	897713	FunctionDef	JobSuspendedEvent :: ~JobSuspendedEvent ()		897712	0					
ANR	897714	CompoundStatement		3045:0:67550:67552	897712	0					
ANR	897715	Identifier	JobSuspendedEvent :: ~JobSuspendedEvent		897712	1					
ANR	897716	ParameterList			897712	2					
ANR	897717	CFGEntryNode	ENTRY		897712		True				
ANR	897718	CFGExitNode	EXIT		897712		True				
ANR	897719	Function	JobSuspendedEvent :: readEvent	3048:0:67555:67811							
ANR	897720	FunctionDef	JobSuspendedEvent :: readEvent (FILE * file)		897719	0					
ANR	897721	CompoundStatement		3050:0:67601:67811	897719	0					
ANR	897722	IfStatement	"if ( fscanf ( file , ""Job was suspended.\\n\\t"" ) == EOF )"		897719	0					
ANR	897723	Condition	"fscanf ( file , ""Job was suspended.\\n\\t"" ) == EOF"	3051:5:67608:67653	897719	0	True				
ANR	897724	EqualityExpression	"fscanf ( file , ""Job was suspended.\\n\\t"" ) == EOF"		897719	0		==			
ANR	897725	CallExpression	"fscanf ( file , ""Job was suspended.\\n\\t"" )"		897719	0					
ANR	897726	Callee	fscanf		897719	0					
ANR	897727	Identifier	fscanf		897719	0					
ANR	897728	ArgumentList	file		897719	1					
ANR	897729	Argument	file		897719	0					
ANR	897730	Identifier	file		897719	0					
ANR	897731	Argument	"""Job was suspended.\\n\\t"""		897719	1					
ANR	897732	PrimaryExpression	"""Job was suspended.\\n\\t"""		897719	0					
ANR	897733	Identifier	EOF		897719	1					
ANR	897734	ReturnStatement	return 0 ;	3052:2:67658:67666	897719	1	True				
ANR	897735	PrimaryExpression	0		897719	0					
ANR	897736	IfStatement	"if ( fscanf ( file , ""Number of processes actually suspended: %d\\n"" , & num_pids ) == EOF )"		897719	1					
ANR	897737	Condition	"fscanf ( file , ""Number of processes actually suspended: %d\\n"" , & num_pids ) == EOF"	3053:5:67673:67754	897719	0	True				
ANR	897738	EqualityExpression	"fscanf ( file , ""Number of processes actually suspended: %d\\n"" , & num_pids ) == EOF"		897719	0		==			
ANR	897739	CallExpression	"fscanf ( file , ""Number of processes actually suspended: %d\\n"" , & num_pids )"		897719	0					
ANR	897740	Callee	fscanf		897719	0					
ANR	897741	Identifier	fscanf		897719	0					
ANR	897742	ArgumentList	file		897719	1					
ANR	897743	Argument	file		897719	0					
ANR	897744	Identifier	file		897719	0					
ANR	897745	Argument	"""Number of processes actually suspended: %d\\n"""		897719	1					
ANR	897746	PrimaryExpression	"""Number of processes actually suspended: %d\\n"""		897719	0					
ANR	897747	Argument	& num_pids		897719	2					
ANR	897748	UnaryOperationExpression	& num_pids		897719	0					
ANR	897749	UnaryOperator	&		897719	0					
ANR	897750	Identifier	num_pids		897719	1					
ANR	897751	Identifier	EOF		897719	1					
ANR	897752	ReturnStatement	return 1 ;	3055:2:67759:67767	897719	1	True				
ANR	897753	PrimaryExpression	1		897719	0					
ANR	897754	ReturnStatement	return 1 ;	3057:1:67801:67809	897719	2	True				
ANR	897755	PrimaryExpression	1		897719	0					
ANR	897756	ReturnType	int		897719	1					
ANR	897757	Identifier	JobSuspendedEvent :: readEvent		897719	2					
ANR	897758	ParameterList	FILE * file		897719	3					
ANR	897759	Parameter	FILE * file	3049:30:67589:67598	897719	0	True				
ANR	897760	ParameterType	FILE *		897719	0					
ANR	897761	Identifier	file		897719	1					
ANR	897762	CFGEntryNode	ENTRY		897719		True				
ANR	897763	CFGExitNode	EXIT		897719		True				
ANR	897764	Symbol	fscanf		897719						
ANR	897765	Symbol	file		897719						
ANR	897766	Symbol	& num_pids		897719						
ANR	897767	Symbol	EOF		897719						
ANR	897768	Function	JobSuspendedEvent :: writeEvent	3061:0:67815:68689							
ANR	897769	FunctionDef	JobSuspendedEvent :: writeEvent (FILE * file)		897768	0					
ANR	897770	CompoundStatement		3063:0:67862:68689	897768	0					
ANR	897771	IdentifierDeclStatement	char messagestr [ 512 ] ;	3064:1:67865:67885	897768	0	True				
ANR	897772	IdentifierDecl	messagestr [ 512 ]		897768	0					
ANR	897773	IdentifierDeclType	char [ 512 ]		897768	0					
ANR	897774	Identifier	messagestr		897768	1					
ANR	897775	PrimaryExpression	512		897768	2					
ANR	897776	IdentifierDeclStatement	ClassAd tmpCl1 ;	3065:1:67888:67902	897768	1	True				
ANR	897777	IdentifierDecl	tmpCl1		897768	0					
ANR	897778	IdentifierDeclType	ClassAd		897768	0					
ANR	897779	Identifier	tmpCl1		897768	1					
ANR	897780	IdentifierDeclStatement	"MyString tmp = """" ;"	3067:1:67936:67953	897768	2	True				
ANR	897781	IdentifierDecl	"tmp = """""		897768	0					
ANR	897782	IdentifierDeclType	MyString		897768	0					
ANR	897783	Identifier	tmp		897768	1					
ANR	897784	AssignmentExpression	"tmp = """""		897768	2		=			
ANR	897785	Identifier	tmp		897768	0					
ANR	897786	PrimaryExpression	""""""		897768	1					
ANR	897787	ExpressionStatement	"sprintf ( messagestr , ""Job was suspended (Number of processes actually suspended: %d)"" , num_pids )"	3069:1:67957:68052	897768	3	True				
ANR	897788	CallExpression	"sprintf ( messagestr , ""Job was suspended (Number of processes actually suspended: %d)"" , num_pids )"		897768	0					
ANR	897789	Callee	sprintf		897768	0					
ANR	897790	Identifier	sprintf		897768	0					
ANR	897791	ArgumentList	messagestr		897768	1					
ANR	897792	Argument	messagestr		897768	0					
ANR	897793	Identifier	messagestr		897768	0					
ANR	897794	Argument	"""Job was suspended (Number of processes actually suspended: %d)"""		897768	1					
ANR	897795	PrimaryExpression	"""Job was suspended (Number of processes actually suspended: %d)"""		897768	0					
ANR	897796	Argument	num_pids		897768	2					
ANR	897797	Identifier	num_pids		897768	0					
ANR	897798	ExpressionStatement	scheddname = getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )	3071:1:68056:68108	897768	4	True				
ANR	897799	AssignmentExpression	scheddname = getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )		897768	0		=			
ANR	897800	Identifier	scheddname		897768	0					
ANR	897801	CallExpression	getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )		897768	1					
ANR	897802	Callee	getenv		897768	0					
ANR	897803	Identifier	getenv		897768	0					
ANR	897804	ArgumentList	EnvGetName ( ENV_SCHEDD_NAME )		897768	1					
ANR	897805	Argument	EnvGetName ( ENV_SCHEDD_NAME )		897768	0					
ANR	897806	CallExpression	EnvGetName ( ENV_SCHEDD_NAME )		897768	0					
ANR	897807	Callee	EnvGetName		897768	0					
ANR	897808	Identifier	EnvGetName		897768	0					
ANR	897809	ArgumentList	ENV_SCHEDD_NAME		897768	1					
ANR	897810	Argument	ENV_SCHEDD_NAME		897768	0					
ANR	897811	Identifier	ENV_SCHEDD_NAME		897768	0					
ANR	897812	ExpressionStatement	insertCommonIdentifiers ( tmpCl1 )	3074:1:68160:68191	897768	5	True				
ANR	897813	CallExpression	insertCommonIdentifiers ( tmpCl1 )		897768	0					
ANR	897814	Callee	insertCommonIdentifiers		897768	0					
ANR	897815	Identifier	insertCommonIdentifiers		897768	0					
ANR	897816	ArgumentList	tmpCl1		897768	1					
ANR	897817	Argument	tmpCl1		897768	0					
ANR	897818	Identifier	tmpCl1		897768	0					
ANR	897819	ExpressionStatement	"tmpCl1 . Assign ( ""eventtype"" , ULOG_JOB_SUSPENDED )"	3076:1:68195:68241	897768	6	True				
ANR	897820	CallExpression	"tmpCl1 . Assign ( ""eventtype"" , ULOG_JOB_SUSPENDED )"		897768	0					
ANR	897821	Callee	tmpCl1 . Assign		897768	0					
ANR	897822	MemberAccess	tmpCl1 . Assign		897768	0					
ANR	897823	Identifier	tmpCl1		897768	0					
ANR	897824	Identifier	Assign		897768	1					
ANR	897825	ArgumentList	"""eventtype"""		897768	1					
ANR	897826	Argument	"""eventtype"""		897768	0					
ANR	897827	PrimaryExpression	"""eventtype"""		897768	0					
ANR	897828	Argument	ULOG_JOB_SUSPENDED		897768	1					
ANR	897829	Identifier	ULOG_JOB_SUSPENDED		897768	0					
ANR	897830	ExpressionStatement	"tmpCl1 . Assign ( ""eventtime"" , ( int ) eventclock )"	3077:1:68244:68287	897768	7	True				
ANR	897831	CallExpression	"tmpCl1 . Assign ( ""eventtime"" , ( int ) eventclock )"		897768	0					
ANR	897832	Callee	tmpCl1 . Assign		897768	0					
ANR	897833	MemberAccess	tmpCl1 . Assign		897768	0					
ANR	897834	Identifier	tmpCl1		897768	0					
ANR	897835	Identifier	Assign		897768	1					
ANR	897836	ArgumentList	"""eventtime"""		897768	1					
ANR	897837	Argument	"""eventtime"""		897768	0					
ANR	897838	PrimaryExpression	"""eventtime"""		897768	0					
ANR	897839	Argument	( int ) eventclock		897768	1					
ANR	897840	CastExpression	( int ) eventclock		897768	0					
ANR	897841	CastTarget	int		897768	0					
ANR	897842	Identifier	eventclock		897768	1					
ANR	897843	ExpressionStatement	"tmpCl1 . Assign ( ""description"" , messagestr )"	3078:1:68290:68330	897768	8	True				
ANR	897844	CallExpression	"tmpCl1 . Assign ( ""description"" , messagestr )"		897768	0					
ANR	897845	Callee	tmpCl1 . Assign		897768	0					
ANR	897846	MemberAccess	tmpCl1 . Assign		897768	0					
ANR	897847	Identifier	tmpCl1		897768	0					
ANR	897848	Identifier	Assign		897768	1					
ANR	897849	ArgumentList	"""description"""		897768	1					
ANR	897850	Argument	"""description"""		897768	0					
ANR	897851	PrimaryExpression	"""description"""		897768	0					
ANR	897852	Argument	messagestr		897768	1					
ANR	897853	Identifier	messagestr		897768	0					
ANR	897854	IfStatement	if ( FILEObj )		897768	9					
ANR	897855	Condition	FILEObj	3080:5:68338:68344	897768	0	True				
ANR	897856	Identifier	FILEObj		897768	0					
ANR	897857	CompoundStatement		18:14:484:484	897768	1					
ANR	897858	IfStatement	"if ( FILEObj -> file_newEvent ( ""Events"" , & tmpCl1 ) == QUILL_FAILURE )"		897768	0					
ANR	897859	Condition	"FILEObj -> file_newEvent ( ""Events"" , & tmpCl1 ) == QUILL_FAILURE"	3081:6:68355:68412	897768	0	True				
ANR	897860	EqualityExpression	"FILEObj -> file_newEvent ( ""Events"" , & tmpCl1 ) == QUILL_FAILURE"		897768	0		==			
ANR	897861	CallExpression	"FILEObj -> file_newEvent ( ""Events"" , & tmpCl1 )"		897768	0					
ANR	897862	Callee	FILEObj -> file_newEvent		897768	0					
ANR	897863	PtrMemberAccess	FILEObj -> file_newEvent		897768	0					
ANR	897864	Identifier	FILEObj		897768	0					
ANR	897865	Identifier	file_newEvent		897768	1					
ANR	897866	ArgumentList	"""Events"""		897768	1					
ANR	897867	Argument	"""Events"""		897768	0					
ANR	897868	PrimaryExpression	"""Events"""		897768	0					
ANR	897869	Argument	& tmpCl1		897768	1					
ANR	897870	UnaryOperationExpression	& tmpCl1		897768	0					
ANR	897871	UnaryOperator	&		897768	0					
ANR	897872	Identifier	tmpCl1		897768	1					
ANR	897873	Identifier	QUILL_FAILURE		897768	1					
ANR	897874	CompoundStatement		19:66:552:552	897768	1					
ANR	897875	ExpressionStatement	"dprintf ( D_ALWAYS , ""Logging Event 8--- Error\\n"" )"	3082:3:68420:68467	897768	0	True				
ANR	897876	CallExpression	"dprintf ( D_ALWAYS , ""Logging Event 8--- Error\\n"" )"		897768	0					
ANR	897877	Callee	dprintf		897768	0					
ANR	897878	Identifier	dprintf		897768	0					
ANR	897879	ArgumentList	D_ALWAYS		897768	1					
ANR	897880	Argument	D_ALWAYS		897768	0					
ANR	897881	Identifier	D_ALWAYS		897768	0					
ANR	897882	Argument	"""Logging Event 8--- Error\\n"""		897768	1					
ANR	897883	PrimaryExpression	"""Logging Event 8--- Error\\n"""		897768	0					
ANR	897884	ReturnStatement	return 0 ;	3083:3:68472:68480	897768	1	True				
ANR	897885	PrimaryExpression	0		897768	0					
ANR	897886	IfStatement	"if ( fprintf ( file , ""Job was suspended.\\n\\t"" ) < 0 )"		897768	10					
ANR	897887	Condition	"fprintf ( file , ""Job was suspended.\\n\\t"" ) < 0"	3087:5:68521:68564	897768	0	True				
ANR	897888	RelationalExpression	"fprintf ( file , ""Job was suspended.\\n\\t"" ) < 0"		897768	0		<			
ANR	897889	CallExpression	"fprintf ( file , ""Job was suspended.\\n\\t"" )"		897768	0					
ANR	897890	Callee	fprintf		897768	0					
ANR	897891	Identifier	fprintf		897768	0					
ANR	897892	ArgumentList	file		897768	1					
ANR	897893	Argument	file		897768	0					
ANR	897894	Identifier	file		897768	0					
ANR	897895	Argument	"""Job was suspended.\\n\\t"""		897768	1					
ANR	897896	PrimaryExpression	"""Job was suspended.\\n\\t"""		897768	0					
ANR	897897	PrimaryExpression	0		897768	1					
ANR	897898	ReturnStatement	return 0 ;	3088:2:68569:68577	897768	1	True				
ANR	897899	PrimaryExpression	0		897768	0					
ANR	897900	IfStatement	"if ( fprintf ( file , ""Number of processes actually suspended: %d\\n"" , num_pids ) < 0 )"		897768	11					
ANR	897901	Condition	"fprintf ( file , ""Number of processes actually suspended: %d\\n"" , num_pids ) < 0"	3089:5:68584:68662	897768	0	True				
ANR	897902	RelationalExpression	"fprintf ( file , ""Number of processes actually suspended: %d\\n"" , num_pids ) < 0"		897768	0		<			
ANR	897903	CallExpression	"fprintf ( file , ""Number of processes actually suspended: %d\\n"" , num_pids )"		897768	0					
ANR	897904	Callee	fprintf		897768	0					
ANR	897905	Identifier	fprintf		897768	0					
ANR	897906	ArgumentList	file		897768	1					
ANR	897907	Argument	file		897768	0					
ANR	897908	Identifier	file		897768	0					
ANR	897909	Argument	"""Number of processes actually suspended: %d\\n"""		897768	1					
ANR	897910	PrimaryExpression	"""Number of processes actually suspended: %d\\n"""		897768	0					
ANR	897911	Argument	num_pids		897768	2					
ANR	897912	Identifier	num_pids		897768	0					
ANR	897913	PrimaryExpression	0		897768	1					
ANR	897914	ReturnStatement	return 0 ;	3091:2:68667:68675	897768	1	True				
ANR	897915	PrimaryExpression	0		897768	0					
ANR	897916	ReturnStatement	return 1 ;	3093:1:68679:68687	897768	12	True				
ANR	897917	PrimaryExpression	1		897768	0					
ANR	897918	ReturnType	int		897768	1					
ANR	897919	Identifier	JobSuspendedEvent :: writeEvent		897768	2					
ANR	897920	ParameterList	FILE * file		897768	3					
ANR	897921	Parameter	FILE * file	3062:31:67850:67859	897768	0	True				
ANR	897922	ParameterType	FILE *		897768	0					
ANR	897923	Identifier	file		897768	1					
ANR	897924	CFGEntryNode	ENTRY		897768		True				
ANR	897925	CFGExitNode	EXIT		897768		True				
ANR	897926	Symbol	scheddname		897768						
ANR	897927	Symbol	num_pids		897768						
ANR	897928	Symbol	D_ALWAYS		897768						
ANR	897929	Symbol	ULOG_JOB_SUSPENDED		897768						
ANR	897930	Symbol	EnvGetName		897768						
ANR	897931	Symbol	ENV_SCHEDD_NAME		897768						
ANR	897932	Symbol	QUILL_FAILURE		897768						
ANR	897933	Symbol	fprintf		897768						
ANR	897934	Symbol	FILEObj		897768						
ANR	897935	Symbol	* FILEObj		897768						
ANR	897936	Symbol	& tmpCl1		897768						
ANR	897937	Symbol	file		897768						
ANR	897938	Symbol	messagestr		897768						
ANR	897939	Symbol	eventclock		897768						
ANR	897940	Symbol	tmp		897768						
ANR	897941	Symbol	tmpCl1		897768						
ANR	897942	Symbol	FILEObj -> file_newEvent		897768						
ANR	897943	Symbol	getenv		897768						
ANR	897944	Function	JobSuspendedEvent :: toClassAd	3096:0:68692:68947							
ANR	897945	FunctionDef	JobSuspendedEvent :: toClassAd ()		897944	0					
ANR	897946	CompoundStatement		3098:0:68736:68947	897944	0					
ANR	897947	IdentifierDeclStatement	ClassAd * myad = ULogEvent :: toClassAd ( ) ;	3099:1:68739:68777	897944	0	True				
ANR	897948	IdentifierDecl	* myad = ULogEvent :: toClassAd ( )		897944	0					
ANR	897949	IdentifierDeclType	ClassAd *		897944	0					
ANR	897950	Identifier	myad		897944	1					
ANR	897951	AssignmentExpression	* myad = ULogEvent :: toClassAd ( )		897944	2		=			
ANR	897952	Identifier	myad		897944	0					
ANR	897953	CallExpression	ULogEvent :: toClassAd ( )		897944	1					
ANR	897954	Callee	ULogEvent :: toClassAd		897944	0					
ANR	897955	Identifier	ULogEvent :: toClassAd		897944	0					
ANR	897956	ArgumentList			897944	1					
ANR	897957	IfStatement	if ( ! myad )		897944	1					
ANR	897958	Condition	! myad	3100:5:68784:68788	897944	0	True				
ANR	897959	UnaryOperationExpression	! myad		897944	0					
ANR	897960	UnaryOperator	!		897944	0					
ANR	897961	Identifier	myad		897944	1					
ANR	897962	ReturnStatement	return NULL ;	3100:13:68792:68803	897944	1	True				
ANR	897963	Identifier	NULL		897944	0					
ANR	897964	IdentifierDeclStatement	char buf0 [ 512 ] ;	3101:1:68806:68820	897944	2	True				
ANR	897965	IdentifierDecl	buf0 [ 512 ]		897944	0					
ANR	897966	IdentifierDeclType	char [ 512 ]		897944	0					
ANR	897967	Identifier	buf0		897944	1					
ANR	897968	PrimaryExpression	512		897944	2					
ANR	897969	ExpressionStatement	"snprintf ( buf0 , 512 , ""NumberOfPIDs = %d"" , num_pids )"	3103:1:68824:68874	897944	3	True				
ANR	897970	CallExpression	"snprintf ( buf0 , 512 , ""NumberOfPIDs = %d"" , num_pids )"		897944	0					
ANR	897971	Callee	snprintf		897944	0					
ANR	897972	Identifier	snprintf		897944	0					
ANR	897973	ArgumentList	buf0		897944	1					
ANR	897974	Argument	buf0		897944	0					
ANR	897975	Identifier	buf0		897944	0					
ANR	897976	Argument	512		897944	1					
ANR	897977	PrimaryExpression	512		897944	0					
ANR	897978	Argument	"""NumberOfPIDs = %d"""		897944	2					
ANR	897979	PrimaryExpression	"""NumberOfPIDs = %d"""		897944	0					
ANR	897980	Argument	num_pids		897944	3					
ANR	897981	Identifier	num_pids		897944	0					
ANR	897982	ExpressionStatement	buf0 [ 511 ] = 0	3104:1:68877:68890	897944	4	True				
ANR	897983	AssignmentExpression	buf0 [ 511 ] = 0		897944	0		=			
ANR	897984	ArrayIndexing	buf0 [ 511 ]		897944	0					
ANR	897985	Identifier	buf0		897944	0					
ANR	897986	PrimaryExpression	511		897944	1					
ANR	897987	PrimaryExpression	0		897944	1					
ANR	897988	IfStatement	if ( ! myad -> Insert ( buf0 ) )		897944	5					
ANR	897989	Condition	! myad -> Insert ( buf0 )	3105:5:68897:68915	897944	0	True				
ANR	897990	UnaryOperationExpression	! myad -> Insert ( buf0 )		897944	0					
ANR	897991	UnaryOperator	!		897944	0					
ANR	897992	CallExpression	myad -> Insert ( buf0 )		897944	1					
ANR	897993	Callee	myad -> Insert		897944	0					
ANR	897994	PtrMemberAccess	myad -> Insert		897944	0					
ANR	897995	Identifier	myad		897944	0					
ANR	897996	Identifier	Insert		897944	1					
ANR	897997	ArgumentList	buf0		897944	1					
ANR	897998	Argument	buf0		897944	0					
ANR	897999	Identifier	buf0		897944	0					
ANR	898000	ReturnStatement	return NULL ;	3105:27:68919:68930	897944	1	True				
ANR	898001	Identifier	NULL		897944	0					
ANR	898002	ReturnStatement	return myad ;	3107:1:68934:68945	897944	6	True				
ANR	898003	Identifier	myad		897944	0					
ANR	898004	ReturnType	ClassAd *		897944	1					
ANR	898005	Identifier	JobSuspendedEvent :: toClassAd		897944	2					
ANR	898006	ParameterList			897944	3					
ANR	898007	CFGEntryNode	ENTRY		897944		True				
ANR	898008	CFGExitNode	EXIT		897944		True				
ANR	898009	Symbol	NULL		897944						
ANR	898010	Symbol	buf0		897944						
ANR	898011	Symbol	* myad		897944						
ANR	898012	Symbol	num_pids		897944						
ANR	898013	Symbol	myad -> Insert		897944						
ANR	898014	Symbol	myad		897944						
ANR	898015	Symbol	ULogEvent :: toClassAd		897944						
ANR	898016	Symbol	* buf0		897944						
ANR	898017	Function	JobSuspendedEvent :: initFromClassAd	3110:0:68950:69105							
ANR	898018	FunctionDef	JobSuspendedEvent :: initFromClassAd (ClassAd * ad)		898017	0					
ANR	898019	CompoundStatement		3112:0:69003:69105	898017	0					
ANR	898020	ExpressionStatement	ULogEvent :: initFromClassAd ( ad )	3113:1:69006:69036	898017	0	True				
ANR	898021	CallExpression	ULogEvent :: initFromClassAd ( ad )		898017	0					
ANR	898022	Callee	ULogEvent :: initFromClassAd		898017	0					
ANR	898023	Identifier	ULogEvent :: initFromClassAd		898017	0					
ANR	898024	ArgumentList	ad		898017	1					
ANR	898025	Argument	ad		898017	0					
ANR	898026	Identifier	ad		898017	0					
ANR	898027	IfStatement	if ( ! ad )		898017	1					
ANR	898028	Condition	! ad	3115:5:69044:69046	898017	0	True				
ANR	898029	UnaryOperationExpression	! ad		898017	0					
ANR	898030	UnaryOperator	!		898017	0					
ANR	898031	Identifier	ad		898017	1					
ANR	898032	ReturnStatement	return ;	3115:11:69050:69056	898017	1	True				
ANR	898033	ExpressionStatement	"ad -> LookupInteger ( ""NumberOfPIDs"" , num_pids )"	3117:1:69060:69103	898017	2	True				
ANR	898034	CallExpression	"ad -> LookupInteger ( ""NumberOfPIDs"" , num_pids )"		898017	0					
ANR	898035	Callee	ad -> LookupInteger		898017	0					
ANR	898036	PtrMemberAccess	ad -> LookupInteger		898017	0					
ANR	898037	Identifier	ad		898017	0					
ANR	898038	Identifier	LookupInteger		898017	1					
ANR	898039	ArgumentList	"""NumberOfPIDs"""		898017	1					
ANR	898040	Argument	"""NumberOfPIDs"""		898017	0					
ANR	898041	PrimaryExpression	"""NumberOfPIDs"""		898017	0					
ANR	898042	Argument	num_pids		898017	1					
ANR	898043	Identifier	num_pids		898017	0					
ANR	898044	ReturnType	void		898017	1					
ANR	898045	Identifier	JobSuspendedEvent :: initFromClassAd		898017	2					
ANR	898046	ParameterList	ClassAd * ad		898017	3					
ANR	898047	Parameter	ClassAd * ad	3111:35:68990:69000	898017	0	True				
ANR	898048	ParameterType	ClassAd *		898017	0					
ANR	898049	Identifier	ad		898017	1					
ANR	898050	CFGEntryNode	ENTRY		898017		True				
ANR	898051	CFGExitNode	EXIT		898017		True				
ANR	898052	Symbol	ad		898017						
ANR	898053	Symbol	num_pids		898017						
ANR	898054	Function	JobUnsuspendedEvent :: JobUnsuspendedEvent	3120:0:69108:69195							
ANR	898055	FunctionDef	JobUnsuspendedEvent :: JobUnsuspendedEvent ()		898054	0					
ANR	898056	CompoundStatement		3121:0:69156:69195	898054	0					
ANR	898057	ExpressionStatement	eventNumber = ULOG_JOB_UNSUSPENDED	3122:1:69159:69193	898054	0	True				
ANR	898058	AssignmentExpression	eventNumber = ULOG_JOB_UNSUSPENDED		898054	0		=			
ANR	898059	Identifier	eventNumber		898054	0					
ANR	898060	Identifier	ULOG_JOB_UNSUSPENDED		898054	1					
ANR	898061	Identifier	JobUnsuspendedEvent :: JobUnsuspendedEvent		898054	1					
ANR	898062	ParameterList			898054	2					
ANR	898063	CFGEntryNode	ENTRY		898054		True				
ANR	898064	CFGExitNode	EXIT		898054		True				
ANR	898065	Symbol	ULOG_JOB_UNSUSPENDED		898054						
ANR	898066	Symbol	eventNumber		898054						
ANR	898067	Function	JobUnsuspendedEvent :: ~JobUnsuspendedEvent	3125:0:69198:69249							
ANR	898068	FunctionDef	JobUnsuspendedEvent :: ~JobUnsuspendedEvent ()		898067	0					
ANR	898069	CompoundStatement		3126:0:69247:69249	898067	0					
ANR	898070	Identifier	JobUnsuspendedEvent :: ~JobUnsuspendedEvent		898067	1					
ANR	898071	ParameterList			898067	2					
ANR	898072	CFGEntryNode	ENTRY		898067		True				
ANR	898073	CFGExitNode	EXIT		898067		True				
ANR	898074	Function	JobUnsuspendedEvent :: readEvent	3129:0:69252:69379							
ANR	898075	FunctionDef	JobUnsuspendedEvent :: readEvent (FILE * file)		898074	0					
ANR	898076	CompoundStatement		3131:0:69300:69379	898074	0					
ANR	898077	IfStatement	"if ( fscanf ( file , ""Job was unsuspended.\\n"" ) == EOF )"		898074	0					
ANR	898078	Condition	"fscanf ( file , ""Job was unsuspended.\\n"" ) == EOF"	3132:5:69307:69352	898074	0	True				
ANR	898079	EqualityExpression	"fscanf ( file , ""Job was unsuspended.\\n"" ) == EOF"		898074	0		==			
ANR	898080	CallExpression	"fscanf ( file , ""Job was unsuspended.\\n"" )"		898074	0					
ANR	898081	Callee	fscanf		898074	0					
ANR	898082	Identifier	fscanf		898074	0					
ANR	898083	ArgumentList	file		898074	1					
ANR	898084	Argument	file		898074	0					
ANR	898085	Identifier	file		898074	0					
ANR	898086	Argument	"""Job was unsuspended.\\n"""		898074	1					
ANR	898087	PrimaryExpression	"""Job was unsuspended.\\n"""		898074	0					
ANR	898088	Identifier	EOF		898074	1					
ANR	898089	ReturnStatement	return 0 ;	3133:2:69357:69365	898074	1	True				
ANR	898090	PrimaryExpression	0		898074	0					
ANR	898091	ReturnStatement	return 1 ;	3135:1:69369:69377	898074	1	True				
ANR	898092	PrimaryExpression	1		898074	0					
ANR	898093	ReturnType	int		898074	1					
ANR	898094	Identifier	JobUnsuspendedEvent :: readEvent		898074	2					
ANR	898095	ParameterList	FILE * file		898074	3					
ANR	898096	Parameter	FILE * file	3130:32:69288:69297	898074	0	True				
ANR	898097	ParameterType	FILE *		898074	0					
ANR	898098	Identifier	file		898074	1					
ANR	898099	CFGEntryNode	ENTRY		898074		True				
ANR	898100	CFGExitNode	EXIT		898074		True				
ANR	898101	Symbol	fscanf		898074						
ANR	898102	Symbol	file		898074						
ANR	898103	Symbol	EOF		898074						
ANR	898104	Function	JobUnsuspendedEvent :: writeEvent	3138:0:69382:70113							
ANR	898105	FunctionDef	JobUnsuspendedEvent :: writeEvent (FILE * file)		898104	0					
ANR	898106	CompoundStatement		3140:0:69431:70113	898104	0					
ANR	898107	IdentifierDeclStatement	char messagestr [ 512 ] ;	3141:1:69434:69454	898104	0	True				
ANR	898108	IdentifierDecl	messagestr [ 512 ]		898104	0					
ANR	898109	IdentifierDeclType	char [ 512 ]		898104	0					
ANR	898110	Identifier	messagestr		898104	1					
ANR	898111	PrimaryExpression	512		898104	2					
ANR	898112	IdentifierDeclStatement	ClassAd tmpCl1 ;	3142:1:69457:69471	898104	1	True				
ANR	898113	IdentifierDecl	tmpCl1		898104	0					
ANR	898114	IdentifierDeclType	ClassAd		898104	0					
ANR	898115	Identifier	tmpCl1		898104	1					
ANR	898116	IdentifierDeclStatement	"MyString tmp = """" ;"	3144:1:69505:69522	898104	2	True				
ANR	898117	IdentifierDecl	"tmp = """""		898104	0					
ANR	898118	IdentifierDeclType	MyString		898104	0					
ANR	898119	Identifier	tmp		898104	1					
ANR	898120	AssignmentExpression	"tmp = """""		898104	2		=			
ANR	898121	Identifier	tmp		898104	0					
ANR	898122	PrimaryExpression	""""""		898104	1					
ANR	898123	ExpressionStatement	"sprintf ( messagestr , ""Job was unsuspended"" )"	3146:1:69526:69568	898104	3	True				
ANR	898124	CallExpression	"sprintf ( messagestr , ""Job was unsuspended"" )"		898104	0					
ANR	898125	Callee	sprintf		898104	0					
ANR	898126	Identifier	sprintf		898104	0					
ANR	898127	ArgumentList	messagestr		898104	1					
ANR	898128	Argument	messagestr		898104	0					
ANR	898129	Identifier	messagestr		898104	0					
ANR	898130	Argument	"""Job was unsuspended"""		898104	1					
ANR	898131	PrimaryExpression	"""Job was unsuspended"""		898104	0					
ANR	898132	ExpressionStatement	scheddname = getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )	3148:1:69572:69624	898104	4	True				
ANR	898133	AssignmentExpression	scheddname = getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )		898104	0		=			
ANR	898134	Identifier	scheddname		898104	0					
ANR	898135	CallExpression	getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )		898104	1					
ANR	898136	Callee	getenv		898104	0					
ANR	898137	Identifier	getenv		898104	0					
ANR	898138	ArgumentList	EnvGetName ( ENV_SCHEDD_NAME )		898104	1					
ANR	898139	Argument	EnvGetName ( ENV_SCHEDD_NAME )		898104	0					
ANR	898140	CallExpression	EnvGetName ( ENV_SCHEDD_NAME )		898104	0					
ANR	898141	Callee	EnvGetName		898104	0					
ANR	898142	Identifier	EnvGetName		898104	0					
ANR	898143	ArgumentList	ENV_SCHEDD_NAME		898104	1					
ANR	898144	Argument	ENV_SCHEDD_NAME		898104	0					
ANR	898145	Identifier	ENV_SCHEDD_NAME		898104	0					
ANR	898146	ExpressionStatement	insertCommonIdentifiers ( tmpCl1 )	3151:1:69676:69707	898104	5	True				
ANR	898147	CallExpression	insertCommonIdentifiers ( tmpCl1 )		898104	0					
ANR	898148	Callee	insertCommonIdentifiers		898104	0					
ANR	898149	Identifier	insertCommonIdentifiers		898104	0					
ANR	898150	ArgumentList	tmpCl1		898104	1					
ANR	898151	Argument	tmpCl1		898104	0					
ANR	898152	Identifier	tmpCl1		898104	0					
ANR	898153	ExpressionStatement	"tmpCl1 . Assign ( ""eventtype"" , ULOG_JOB_UNSUSPENDED )"	3153:1:69711:69759	898104	6	True				
ANR	898154	CallExpression	"tmpCl1 . Assign ( ""eventtype"" , ULOG_JOB_UNSUSPENDED )"		898104	0					
ANR	898155	Callee	tmpCl1 . Assign		898104	0					
ANR	898156	MemberAccess	tmpCl1 . Assign		898104	0					
ANR	898157	Identifier	tmpCl1		898104	0					
ANR	898158	Identifier	Assign		898104	1					
ANR	898159	ArgumentList	"""eventtype"""		898104	1					
ANR	898160	Argument	"""eventtype"""		898104	0					
ANR	898161	PrimaryExpression	"""eventtype"""		898104	0					
ANR	898162	Argument	ULOG_JOB_UNSUSPENDED		898104	1					
ANR	898163	Identifier	ULOG_JOB_UNSUSPENDED		898104	0					
ANR	898164	ExpressionStatement	"tmpCl1 . Assign ( ""eventtime"" , ( int ) eventclock )"	3154:1:69762:69805	898104	7	True				
ANR	898165	CallExpression	"tmpCl1 . Assign ( ""eventtime"" , ( int ) eventclock )"		898104	0					
ANR	898166	Callee	tmpCl1 . Assign		898104	0					
ANR	898167	MemberAccess	tmpCl1 . Assign		898104	0					
ANR	898168	Identifier	tmpCl1		898104	0					
ANR	898169	Identifier	Assign		898104	1					
ANR	898170	ArgumentList	"""eventtime"""		898104	1					
ANR	898171	Argument	"""eventtime"""		898104	0					
ANR	898172	PrimaryExpression	"""eventtime"""		898104	0					
ANR	898173	Argument	( int ) eventclock		898104	1					
ANR	898174	CastExpression	( int ) eventclock		898104	0					
ANR	898175	CastTarget	int		898104	0					
ANR	898176	Identifier	eventclock		898104	1					
ANR	898177	ExpressionStatement	"tmpCl1 . Assign ( ""description"" , messagestr )"	3155:1:69808:69848	898104	8	True				
ANR	898178	CallExpression	"tmpCl1 . Assign ( ""description"" , messagestr )"		898104	0					
ANR	898179	Callee	tmpCl1 . Assign		898104	0					
ANR	898180	MemberAccess	tmpCl1 . Assign		898104	0					
ANR	898181	Identifier	tmpCl1		898104	0					
ANR	898182	Identifier	Assign		898104	1					
ANR	898183	ArgumentList	"""description"""		898104	1					
ANR	898184	Argument	"""description"""		898104	0					
ANR	898185	PrimaryExpression	"""description"""		898104	0					
ANR	898186	Argument	messagestr		898104	1					
ANR	898187	Identifier	messagestr		898104	0					
ANR	898188	IfStatement	if ( FILEObj )		898104	9					
ANR	898189	Condition	FILEObj	3157:5:69856:69862	898104	0	True				
ANR	898190	Identifier	FILEObj		898104	0					
ANR	898191	CompoundStatement		18:14:433:433	898104	1					
ANR	898192	IfStatement	"if ( FILEObj -> file_newEvent ( ""Events"" , & tmpCl1 ) == QUILL_FAILURE )"		898104	0					
ANR	898193	Condition	"FILEObj -> file_newEvent ( ""Events"" , & tmpCl1 ) == QUILL_FAILURE"	3158:10:69877:69934	898104	0	True				
ANR	898194	EqualityExpression	"FILEObj -> file_newEvent ( ""Events"" , & tmpCl1 ) == QUILL_FAILURE"		898104	0		==			
ANR	898195	CallExpression	"FILEObj -> file_newEvent ( ""Events"" , & tmpCl1 )"		898104	0					
ANR	898196	Callee	FILEObj -> file_newEvent		898104	0					
ANR	898197	PtrMemberAccess	FILEObj -> file_newEvent		898104	0					
ANR	898198	Identifier	FILEObj		898104	0					
ANR	898199	Identifier	file_newEvent		898104	1					
ANR	898200	ArgumentList	"""Events"""		898104	1					
ANR	898201	Argument	"""Events"""		898104	0					
ANR	898202	PrimaryExpression	"""Events"""		898104	0					
ANR	898203	Argument	& tmpCl1		898104	1					
ANR	898204	UnaryOperationExpression	& tmpCl1		898104	0					
ANR	898205	UnaryOperator	&		898104	0					
ANR	898206	Identifier	tmpCl1		898104	1					
ANR	898207	Identifier	QUILL_FAILURE		898104	1					
ANR	898208	CompoundStatement		19:70:505:505	898104	1					
ANR	898209	ExpressionStatement	"dprintf ( D_ALWAYS , ""Logging Event 9--- Error\\n"" )"	3159:3:69942:69989	898104	0	True				
ANR	898210	CallExpression	"dprintf ( D_ALWAYS , ""Logging Event 9--- Error\\n"" )"		898104	0					
ANR	898211	Callee	dprintf		898104	0					
ANR	898212	Identifier	dprintf		898104	0					
ANR	898213	ArgumentList	D_ALWAYS		898104	1					
ANR	898214	Argument	D_ALWAYS		898104	0					
ANR	898215	Identifier	D_ALWAYS		898104	0					
ANR	898216	Argument	"""Logging Event 9--- Error\\n"""		898104	1					
ANR	898217	PrimaryExpression	"""Logging Event 9--- Error\\n"""		898104	0					
ANR	898218	ReturnStatement	return 0 ;	3160:3:69994:70002	898104	1	True				
ANR	898219	PrimaryExpression	0		898104	0					
ANR	898220	IfStatement	"if ( fprintf ( file , ""Job was unsuspended.\\n"" ) < 0 )"		898104	10					
ANR	898221	Condition	"fprintf ( file , ""Job was unsuspended.\\n"" ) < 0"	3164:5:70043:70086	898104	0	True				
ANR	898222	RelationalExpression	"fprintf ( file , ""Job was unsuspended.\\n"" ) < 0"		898104	0		<			
ANR	898223	CallExpression	"fprintf ( file , ""Job was unsuspended.\\n"" )"		898104	0					
ANR	898224	Callee	fprintf		898104	0					
ANR	898225	Identifier	fprintf		898104	0					
ANR	898226	ArgumentList	file		898104	1					
ANR	898227	Argument	file		898104	0					
ANR	898228	Identifier	file		898104	0					
ANR	898229	Argument	"""Job was unsuspended.\\n"""		898104	1					
ANR	898230	PrimaryExpression	"""Job was unsuspended.\\n"""		898104	0					
ANR	898231	PrimaryExpression	0		898104	1					
ANR	898232	ReturnStatement	return 0 ;	3165:2:70091:70099	898104	1	True				
ANR	898233	PrimaryExpression	0		898104	0					
ANR	898234	ReturnStatement	return 1 ;	3167:1:70103:70111	898104	11	True				
ANR	898235	PrimaryExpression	1		898104	0					
ANR	898236	ReturnType	int		898104	1					
ANR	898237	Identifier	JobUnsuspendedEvent :: writeEvent		898104	2					
ANR	898238	ParameterList	FILE * file		898104	3					
ANR	898239	Parameter	FILE * file	3139:33:69419:69428	898104	0	True				
ANR	898240	ParameterType	FILE *		898104	0					
ANR	898241	Identifier	file		898104	1					
ANR	898242	CFGEntryNode	ENTRY		898104		True				
ANR	898243	CFGExitNode	EXIT		898104		True				
ANR	898244	Symbol	scheddname		898104						
ANR	898245	Symbol	D_ALWAYS		898104						
ANR	898246	Symbol	ENV_SCHEDD_NAME		898104						
ANR	898247	Symbol	EnvGetName		898104						
ANR	898248	Symbol	QUILL_FAILURE		898104						
ANR	898249	Symbol	fprintf		898104						
ANR	898250	Symbol	FILEObj		898104						
ANR	898251	Symbol	* FILEObj		898104						
ANR	898252	Symbol	& tmpCl1		898104						
ANR	898253	Symbol	file		898104						
ANR	898254	Symbol	messagestr		898104						
ANR	898255	Symbol	ULOG_JOB_UNSUSPENDED		898104						
ANR	898256	Symbol	eventclock		898104						
ANR	898257	Symbol	tmp		898104						
ANR	898258	Symbol	tmpCl1		898104						
ANR	898259	Symbol	FILEObj -> file_newEvent		898104						
ANR	898260	Symbol	getenv		898104						
ANR	898261	Function	JobUnsuspendedEvent :: toClassAd	3170:0:70116:70246							
ANR	898262	FunctionDef	JobUnsuspendedEvent :: toClassAd ()		898261	0					
ANR	898263	CompoundStatement		3172:0:70162:70246	898261	0					
ANR	898264	IdentifierDeclStatement	ClassAd * myad = ULogEvent :: toClassAd ( ) ;	3173:1:70165:70203	898261	0	True				
ANR	898265	IdentifierDecl	* myad = ULogEvent :: toClassAd ( )		898261	0					
ANR	898266	IdentifierDeclType	ClassAd *		898261	0					
ANR	898267	Identifier	myad		898261	1					
ANR	898268	AssignmentExpression	* myad = ULogEvent :: toClassAd ( )		898261	2		=			
ANR	898269	Identifier	myad		898261	0					
ANR	898270	CallExpression	ULogEvent :: toClassAd ( )		898261	1					
ANR	898271	Callee	ULogEvent :: toClassAd		898261	0					
ANR	898272	Identifier	ULogEvent :: toClassAd		898261	0					
ANR	898273	ArgumentList			898261	1					
ANR	898274	IfStatement	if ( ! myad )		898261	1					
ANR	898275	Condition	! myad	3174:5:70210:70214	898261	0	True				
ANR	898276	UnaryOperationExpression	! myad		898261	0					
ANR	898277	UnaryOperator	!		898261	0					
ANR	898278	Identifier	myad		898261	1					
ANR	898279	ReturnStatement	return NULL ;	3174:13:70218:70229	898261	1	True				
ANR	898280	Identifier	NULL		898261	0					
ANR	898281	ReturnStatement	return myad ;	3176:1:70233:70244	898261	2	True				
ANR	898282	Identifier	myad		898261	0					
ANR	898283	ReturnType	ClassAd *		898261	1					
ANR	898284	Identifier	JobUnsuspendedEvent :: toClassAd		898261	2					
ANR	898285	ParameterList			898261	3					
ANR	898286	CFGEntryNode	ENTRY		898261		True				
ANR	898287	CFGExitNode	EXIT		898261		True				
ANR	898288	Symbol	NULL		898261						
ANR	898289	Symbol	myad		898261						
ANR	898290	Symbol	ULogEvent :: toClassAd		898261						
ANR	898291	Function	JobUnsuspendedEvent :: initFromClassAd	3179:0:70249:70339							
ANR	898292	FunctionDef	JobUnsuspendedEvent :: initFromClassAd (ClassAd * ad)		898291	0					
ANR	898293	CompoundStatement		3181:0:70304:70339	898291	0					
ANR	898294	ExpressionStatement	ULogEvent :: initFromClassAd ( ad )	3182:1:70307:70337	898291	0	True				
ANR	898295	CallExpression	ULogEvent :: initFromClassAd ( ad )		898291	0					
ANR	898296	Callee	ULogEvent :: initFromClassAd		898291	0					
ANR	898297	Identifier	ULogEvent :: initFromClassAd		898291	0					
ANR	898298	ArgumentList	ad		898291	1					
ANR	898299	Argument	ad		898291	0					
ANR	898300	Identifier	ad		898291	0					
ANR	898301	ReturnType	void		898291	1					
ANR	898302	Identifier	JobUnsuspendedEvent :: initFromClassAd		898291	2					
ANR	898303	ParameterList	ClassAd * ad		898291	3					
ANR	898304	Parameter	ClassAd * ad	3180:37:70291:70301	898291	0	True				
ANR	898305	ParameterType	ClassAd *		898291	0					
ANR	898306	Identifier	ad		898291	1					
ANR	898307	CFGEntryNode	ENTRY		898291		True				
ANR	898308	CFGExitNode	EXIT		898291		True				
ANR	898309	Symbol	ad		898291						
ANR	898310	Function	JobHeldEvent :: JobHeldEvent	3185:0:70342:70449							
ANR	898311	FunctionDef	JobHeldEvent :: JobHeldEvent ()		898310	0					
ANR	898312	CompoundStatement		3186:0:70376:70449	898310	0					
ANR	898313	ExpressionStatement	eventNumber = ULOG_JOB_HELD	3187:1:70379:70406	898310	0	True				
ANR	898314	AssignmentExpression	eventNumber = ULOG_JOB_HELD		898310	0		=			
ANR	898315	Identifier	eventNumber		898310	0					
ANR	898316	Identifier	ULOG_JOB_HELD		898310	1					
ANR	898317	ExpressionStatement	reason = NULL	3188:1:70409:70422	898310	1	True				
ANR	898318	AssignmentExpression	reason = NULL		898310	0		=			
ANR	898319	Identifier	reason		898310	0					
ANR	898320	Identifier	NULL		898310	1					
ANR	898321	ExpressionStatement	code = 0	3189:1:70425:70433	898310	2	True				
ANR	898322	AssignmentExpression	code = 0		898310	0		=			
ANR	898323	Identifier	code		898310	0					
ANR	898324	PrimaryExpression	0		898310	1					
ANR	898325	ExpressionStatement	subcode = 0	3190:1:70436:70447	898310	3	True				
ANR	898326	AssignmentExpression	subcode = 0		898310	0		=			
ANR	898327	Identifier	subcode		898310	0					
ANR	898328	PrimaryExpression	0		898310	1					
ANR	898329	Identifier	JobHeldEvent :: JobHeldEvent		898310	1					
ANR	898330	ParameterList			898310	2					
ANR	898331	CFGEntryNode	ENTRY		898310		True				
ANR	898332	CFGExitNode	EXIT		898310		True				
ANR	898333	Symbol	reason		898310						
ANR	898334	Symbol	ULOG_JOB_HELD		898310						
ANR	898335	Symbol	NULL		898310						
ANR	898336	Symbol	code		898310						
ANR	898337	Symbol	eventNumber		898310						
ANR	898338	Symbol	subcode		898310						
ANR	898339	Function	JobHeldEvent :: ~JobHeldEvent	3194:0:70453:70508							
ANR	898340	FunctionDef	JobHeldEvent :: ~JobHeldEvent ()		898339	0					
ANR	898341	CompoundStatement		3195:0:70488:70508	898339	0					
ANR	898342	Statement	delete	3196:1:70491:70496	898339	0	True				
ANR	898343	Statement	[	3196:7:70497:70497	898339	1	True				
ANR	898344	Statement	]	3196:8:70498:70498	898339	2	True				
ANR	898345	ExpressionStatement	reason	3196:10:70500:70506	898339	3	True				
ANR	898346	Identifier	reason		898339	0					
ANR	898347	Identifier	JobHeldEvent :: ~JobHeldEvent		898339	1					
ANR	898348	ParameterList			898339	2					
ANR	898349	CFGEntryNode	ENTRY		898339		True				
ANR	898350	CFGExitNode	EXIT		898339		True				
ANR	898351	Function	JobHeldEvent :: setReason	3200:0:70512:70761							
ANR	898352	FunctionDef	JobHeldEvent :: setReason (const char * reason_str)		898351	0					
ANR	898353	CompoundStatement		3202:0:70567:70761	898351	0					
ANR	898354	Statement	delete	3203:4:70573:70578	898351	0	True				
ANR	898355	Statement	[	3203:10:70579:70579	898351	1	True				
ANR	898356	Statement	]	3203:11:70580:70580	898351	2	True				
ANR	898357	ExpressionStatement	reason	3203:13:70582:70588	898351	3	True				
ANR	898358	Identifier	reason		898351	0					
ANR	898359	ExpressionStatement	reason = NULL	3204:4:70594:70607	898351	4	True				
ANR	898360	AssignmentExpression	reason = NULL		898351	0		=			
ANR	898361	Identifier	reason		898351	0					
ANR	898362	Identifier	NULL		898351	1					
ANR	898363	IfStatement	if ( reason_str )		898351	5					
ANR	898364	Condition	reason_str	3205:8:70617:70626	898351	0	True				
ANR	898365	Identifier	reason_str		898351	0					
ANR	898366	CompoundStatement		4:21:62:62	898351	1					
ANR	898367	ExpressionStatement	reason = strnewp ( reason_str )	3206:8:70640:70670	898351	0	True				
ANR	898368	AssignmentExpression	reason = strnewp ( reason_str )		898351	0		=			
ANR	898369	Identifier	reason		898351	0					
ANR	898370	CallExpression	strnewp ( reason_str )		898351	1					
ANR	898371	Callee	strnewp		898351	0					
ANR	898372	Identifier	strnewp		898351	0					
ANR	898373	ArgumentList	reason_str		898351	1					
ANR	898374	Argument	reason_str		898351	0					
ANR	898375	Identifier	reason_str		898351	0					
ANR	898376	IfStatement	if ( ! reason )		898351	1					
ANR	898377	Condition	! reason	3207:12:70684:70690	898351	0	True				
ANR	898378	UnaryOperationExpression	! reason		898351	0					
ANR	898379	UnaryOperator	!		898351	0					
ANR	898380	Identifier	reason		898351	1					
ANR	898381	CompoundStatement		6:22:126:126	898351	1					
ANR	898382	ExpressionStatement	"EXCEPT ( ""ERROR: out of memory!\\n"" )"	3208:12:70708:70743	898351	0	True				
ANR	898383	CallExpression	"EXCEPT ( ""ERROR: out of memory!\\n"" )"		898351	0					
ANR	898384	Callee	EXCEPT		898351	0					
ANR	898385	Identifier	EXCEPT		898351	0					
ANR	898386	ArgumentList	"""ERROR: out of memory!\\n"""		898351	1					
ANR	898387	Argument	"""ERROR: out of memory!\\n"""		898351	0					
ANR	898388	PrimaryExpression	"""ERROR: out of memory!\\n"""		898351	0					
ANR	898389	ReturnType	void		898351	1					
ANR	898390	Identifier	JobHeldEvent :: setReason		898351	2					
ANR	898391	ParameterList	const char * reason_str		898351	3					
ANR	898392	Parameter	const char * reason_str	3201:25:70542:70563	898351	0	True				
ANR	898393	ParameterType	const char *		898351	0					
ANR	898394	Identifier	reason_str		898351	1					
ANR	898395	CFGEntryNode	ENTRY		898351		True				
ANR	898396	CFGExitNode	EXIT		898351		True				
ANR	898397	Symbol	reason_str		898351						
ANR	898398	Symbol	reason		898351						
ANR	898399	Symbol	NULL		898351						
ANR	898400	Symbol	strnewp		898351						
ANR	898401	Function	JobHeldEvent :: setReasonCode	3213:0:70764:70827							
ANR	898402	FunctionDef	JobHeldEvent :: setReasonCode (const int val)		898401	0					
ANR	898403	CompoundStatement		3215:0:70812:70827	898401	0					
ANR	898404	ExpressionStatement	code = val	3216:1:70815:70825	898401	0	True				
ANR	898405	AssignmentExpression	code = val		898401	0		=			
ANR	898406	Identifier	code		898401	0					
ANR	898407	Identifier	val		898401	1					
ANR	898408	ReturnType	void		898401	1					
ANR	898409	Identifier	JobHeldEvent :: setReasonCode		898401	2					
ANR	898410	ParameterList	const int val		898401	3					
ANR	898411	Parameter	const int val	3214:28:70797:70809	898401	0	True				
ANR	898412	ParameterType	const int		898401	0					
ANR	898413	Identifier	val		898401	1					
ANR	898414	CFGEntryNode	ENTRY		898401		True				
ANR	898415	CFGExitNode	EXIT		898401		True				
ANR	898416	Symbol	val		898401						
ANR	898417	Symbol	code		898401						
ANR	898418	Function	JobHeldEvent :: setReasonSubCode	3219:0:70830:70899							
ANR	898419	FunctionDef	JobHeldEvent :: setReasonSubCode (const int val)		898418	0					
ANR	898420	CompoundStatement		3221:0:70881:70899	898418	0					
ANR	898421	ExpressionStatement	subcode = val	3222:1:70884:70897	898418	0	True				
ANR	898422	AssignmentExpression	subcode = val		898418	0		=			
ANR	898423	Identifier	subcode		898418	0					
ANR	898424	Identifier	val		898418	1					
ANR	898425	ReturnType	void		898418	1					
ANR	898426	Identifier	JobHeldEvent :: setReasonSubCode		898418	2					
ANR	898427	ParameterList	const int val		898418	3					
ANR	898428	Parameter	const int val	3220:31:70866:70878	898418	0	True				
ANR	898429	ParameterType	const int		898418	0					
ANR	898430	Identifier	val		898418	1					
ANR	898431	CFGEntryNode	ENTRY		898418		True				
ANR	898432	CFGExitNode	EXIT		898418		True				
ANR	898433	Symbol	val		898418						
ANR	898434	Symbol	subcode		898418						
ANR	898435	Function	JobHeldEvent :: getReason	3226:0:70903:70971							
ANR	898436	FunctionDef	JobHeldEvent :: getReason ()		898435	0					
ANR	898437	CompoundStatement		3228:0:70953:70971	898435	0					
ANR	898438	ReturnStatement	return reason ;	3229:1:70956:70969	898435	0	True				
ANR	898439	Identifier	reason		898435	0					
ANR	898440	ReturnType	const char *		898435	1					
ANR	898441	Identifier	JobHeldEvent :: getReason		898435	2					
ANR	898442	ParameterList			898435	3					
ANR	898443	CFGEntryNode	ENTRY		898435		True				
ANR	898444	CFGExitNode	EXIT		898435		True				
ANR	898445	Symbol	reason		898435						
ANR	898446	Function	JobHeldEvent :: getReasonCode	3232:0:70974:71036							
ANR	898447	FunctionDef	JobHeldEvent :: getReasonCode ()		898446	0					
ANR	898448	CompoundStatement		3234:0:71020:71036	898446	0					
ANR	898449	ReturnStatement	return code ;	3235:1:71023:71034	898446	0	True				
ANR	898450	Identifier	code		898446	0					
ANR	898451	ReturnType	int		898446	1					
ANR	898452	Identifier	JobHeldEvent :: getReasonCode		898446	2					
ANR	898453	ParameterList			898446	3					
ANR	898454	CFGEntryNode	ENTRY		898446		True				
ANR	898455	CFGExitNode	EXIT		898446		True				
ANR	898456	Symbol	code		898446						
ANR	898457	Function	JobHeldEvent :: getReasonSubCode	3238:0:71039:71107							
ANR	898458	FunctionDef	JobHeldEvent :: getReasonSubCode ()		898457	0					
ANR	898459	CompoundStatement		3240:0:71088:71107	898457	0					
ANR	898460	ReturnStatement	return subcode ;	3241:1:71091:71105	898457	0	True				
ANR	898461	Identifier	subcode		898457	0					
ANR	898462	ReturnType	int		898457	1					
ANR	898463	Identifier	JobHeldEvent :: getReasonSubCode		898457	2					
ANR	898464	ParameterList			898457	3					
ANR	898465	CFGEntryNode	ENTRY		898457		True				
ANR	898466	CFGExitNode	EXIT		898457		True				
ANR	898467	Symbol	subcode		898457						
ANR	898468	Function	JobHeldEvent :: readEvent	3244:0:71110:72330							
ANR	898469	FunctionDef	JobHeldEvent :: readEvent (FILE * file)		898468	0					
ANR	898470	CompoundStatement		3246:0:71152:72330	898468	0					
ANR	898471	IfStatement	"if ( fscanf ( file , ""Job was held.\\n"" ) == EOF )"		898468	0					
ANR	898472	Condition	"fscanf ( file , ""Job was held.\\n"" ) == EOF"	3247:5:71159:71196	898468	0	True				
ANR	898473	EqualityExpression	"fscanf ( file , ""Job was held.\\n"" ) == EOF"		898468	0		==			
ANR	898474	CallExpression	"fscanf ( file , ""Job was held.\\n"" )"		898468	0					
ANR	898475	Callee	fscanf		898468	0					
ANR	898476	Identifier	fscanf		898468	0					
ANR	898477	ArgumentList	file		898468	1					
ANR	898478	Argument	file		898468	0					
ANR	898479	Identifier	file		898468	0					
ANR	898480	Argument	"""Job was held.\\n"""		898468	1					
ANR	898481	PrimaryExpression	"""Job was held.\\n"""		898468	0					
ANR	898482	Identifier	EOF		898468	1					
ANR	898483	CompoundStatement		2:46:47:47	898468	1					
ANR	898484	ReturnStatement	return 0 ;	3248:2:71204:71212	898468	0	True				
ANR	898485	PrimaryExpression	0		898468	0					
ANR	898486	IdentifierDeclStatement	fpos_t filep ;	3252:1:71325:71337	898468	1	True				
ANR	898487	IdentifierDecl	filep		898468	0					
ANR	898488	IdentifierDeclType	fpos_t		898468	0					
ANR	898489	Identifier	filep		898468	1					
ANR	898490	ExpressionStatement	"fgetpos ( file , & filep )"	3253:1:71340:71363	898468	2	True				
ANR	898491	CallExpression	"fgetpos ( file , & filep )"		898468	0					
ANR	898492	Callee	fgetpos		898468	0					
ANR	898493	Identifier	fgetpos		898468	0					
ANR	898494	ArgumentList	file		898468	1					
ANR	898495	Argument	file		898468	0					
ANR	898496	Identifier	file		898468	0					
ANR	898497	Argument	& filep		898468	1					
ANR	898498	UnaryOperationExpression	& filep		898468	0					
ANR	898499	UnaryOperator	&		898468	0					
ANR	898500	Identifier	filep		898468	1					
ANR	898501	IdentifierDeclStatement	char reason_buf [ BUFSIZ ] ;	3254:1:71366:71389	898468	3	True				
ANR	898502	IdentifierDecl	reason_buf [ BUFSIZ ]		898468	0					
ANR	898503	IdentifierDeclType	char [ BUFSIZ ]		898468	0					
ANR	898504	Identifier	reason_buf		898468	1					
ANR	898505	Identifier	BUFSIZ		898468	2					
ANR	898506	IfStatement	"if ( ! fgets ( reason_buf , BUFSIZ , file ) || strcmp ( reason_buf , ""...\\n"" ) == 0 )"		898468	4					
ANR	898507	Condition	"! fgets ( reason_buf , BUFSIZ , file ) || strcmp ( reason_buf , ""...\\n"" ) == 0"	3255:5:71396:71473	898468	0	True				
ANR	898508	OrExpression	"! fgets ( reason_buf , BUFSIZ , file ) || strcmp ( reason_buf , ""...\\n"" ) == 0"		898468	0		||			
ANR	898509	UnaryOperationExpression	"! fgets ( reason_buf , BUFSIZ , file )"		898468	0					
ANR	898510	UnaryOperator	!		898468	0					
ANR	898511	CallExpression	"fgets ( reason_buf , BUFSIZ , file )"		898468	1					
ANR	898512	Callee	fgets		898468	0					
ANR	898513	Identifier	fgets		898468	0					
ANR	898514	ArgumentList	reason_buf		898468	1					
ANR	898515	Argument	reason_buf		898468	0					
ANR	898516	Identifier	reason_buf		898468	0					
ANR	898517	Argument	BUFSIZ		898468	1					
ANR	898518	Identifier	BUFSIZ		898468	0					
ANR	898519	Argument	file		898468	2					
ANR	898520	Identifier	file		898468	0					
ANR	898521	EqualityExpression	"strcmp ( reason_buf , ""...\\n"" ) == 0"		898468	1		==			
ANR	898522	CallExpression	"strcmp ( reason_buf , ""...\\n"" )"		898468	0					
ANR	898523	Callee	strcmp		898468	0					
ANR	898524	Identifier	strcmp		898468	0					
ANR	898525	ArgumentList	reason_buf		898468	1					
ANR	898526	Argument	reason_buf		898468	0					
ANR	898527	Identifier	reason_buf		898468	0					
ANR	898528	Argument	"""...\\n"""		898468	1					
ANR	898529	PrimaryExpression	"""...\\n"""		898468	0					
ANR	898530	PrimaryExpression	0		898468	1					
ANR	898531	CompoundStatement		11:43:324:324	898468	1					
ANR	898532	ExpressionStatement	setReason ( NULL )	3257:2:71481:71498	898468	0	True				
ANR	898533	CallExpression	setReason ( NULL )		898468	0					
ANR	898534	Callee	setReason		898468	0					
ANR	898535	Identifier	setReason		898468	0					
ANR	898536	ArgumentList	NULL		898468	1					
ANR	898537	Argument	NULL		898468	0					
ANR	898538	Identifier	NULL		898468	0					
ANR	898539	ExpressionStatement	"fsetpos ( file , & filep )"	3258:2:71502:71525	898468	1	True				
ANR	898540	CallExpression	"fsetpos ( file , & filep )"		898468	0					
ANR	898541	Callee	fsetpos		898468	0					
ANR	898542	Identifier	fsetpos		898468	0					
ANR	898543	ArgumentList	file		898468	1					
ANR	898544	Argument	file		898468	0					
ANR	898545	Identifier	file		898468	0					
ANR	898546	Argument	& filep		898468	1					
ANR	898547	UnaryOperationExpression	& filep		898468	0					
ANR	898548	UnaryOperator	&		898468	0					
ANR	898549	Identifier	filep		898468	1					
ANR	898550	ReturnStatement	return 1 ;	3259:2:71529:71537	898468	2	True				
ANR	898551	PrimaryExpression	1		898468	0					
ANR	898552	ExpressionStatement	chomp ( reason_buf )	3263:1:71572:71591	898468	5	True				
ANR	898553	CallExpression	chomp ( reason_buf )		898468	0					
ANR	898554	Callee	chomp		898468	0					
ANR	898555	Identifier	chomp		898468	0					
ANR	898556	ArgumentList	reason_buf		898468	1					
ANR	898557	Argument	reason_buf		898468	0					
ANR	898558	Identifier	reason_buf		898468	0					
ANR	898559	IfStatement	if ( reason_buf [ 0 ] == '\\t' && reason_buf [ 1 ] )		898468	6					
ANR	898560	Condition	reason_buf [ 0 ] == '\\t' && reason_buf [ 1 ]	3267:5:71804:71841	898468	0	True				
ANR	898561	AndExpression	reason_buf [ 0 ] == '\\t' && reason_buf [ 1 ]		898468	0		&&			
ANR	898562	EqualityExpression	reason_buf [ 0 ] == '\\t'		898468	0		==			
ANR	898563	ArrayIndexing	reason_buf [ 0 ]		898468	0					
ANR	898564	Identifier	reason_buf		898468	0					
ANR	898565	PrimaryExpression	0		898468	1					
ANR	898566	PrimaryExpression	'\\t'		898468	1					
ANR	898567	ArrayIndexing	reason_buf [ 1 ]		898468	1					
ANR	898568	Identifier	reason_buf		898468	0					
ANR	898569	PrimaryExpression	1		898468	1					
ANR	898570	CompoundStatement		22:46:692:692	898468	1					
ANR	898571	ExpressionStatement	reason = strnewp ( & reason_buf [ 1 ] )	3268:2:71849:71883	898468	0	True				
ANR	898572	AssignmentExpression	reason = strnewp ( & reason_buf [ 1 ] )		898468	0		=			
ANR	898573	Identifier	reason		898468	0					
ANR	898574	CallExpression	strnewp ( & reason_buf [ 1 ] )		898468	1					
ANR	898575	Callee	strnewp		898468	0					
ANR	898576	Identifier	strnewp		898468	0					
ANR	898577	ArgumentList	& reason_buf [ 1 ]		898468	1					
ANR	898578	Argument	& reason_buf [ 1 ]		898468	0					
ANR	898579	UnaryOperationExpression	& reason_buf [ 1 ]		898468	0					
ANR	898580	UnaryOperator	&		898468	0					
ANR	898581	ArrayIndexing	reason_buf [ 1 ]		898468	1					
ANR	898582	Identifier	reason_buf		898468	0					
ANR	898583	PrimaryExpression	1		898468	1					
ANR	898584	ElseStatement	else		898468	0					
ANR	898585	CompoundStatement		24:8:740:740	898468	0					
ANR	898586	ExpressionStatement	reason = strnewp ( reason_buf )	3270:2:71897:71927	898468	0	True				
ANR	898587	AssignmentExpression	reason = strnewp ( reason_buf )		898468	0		=			
ANR	898588	Identifier	reason		898468	0					
ANR	898589	CallExpression	strnewp ( reason_buf )		898468	1					
ANR	898590	Callee	strnewp		898468	0					
ANR	898591	Identifier	strnewp		898468	0					
ANR	898592	ArgumentList	reason_buf		898468	1					
ANR	898593	Argument	reason_buf		898468	0					
ANR	898594	Identifier	reason_buf		898468	0					
ANR	898595	ExpressionStatement	"fgetpos ( file , & filep )"	3275:1:72024:72047	898468	7	True				
ANR	898596	CallExpression	"fgetpos ( file , & filep )"		898468	0					
ANR	898597	Callee	fgetpos		898468	0					
ANR	898598	Identifier	fgetpos		898468	0					
ANR	898599	ArgumentList	file		898468	1					
ANR	898600	Argument	file		898468	0					
ANR	898601	Identifier	file		898468	0					
ANR	898602	Argument	& filep		898468	1					
ANR	898603	UnaryOperationExpression	& filep		898468	0					
ANR	898604	UnaryOperator	&		898468	0					
ANR	898605	Identifier	filep		898468	1					
ANR	898606	IdentifierDeclStatement	int incode = 0 ;	3276:1:72050:72064	898468	8	True				
ANR	898607	IdentifierDecl	incode = 0		898468	0					
ANR	898608	IdentifierDeclType	int		898468	0					
ANR	898609	Identifier	incode		898468	1					
ANR	898610	AssignmentExpression	incode = 0		898468	2		=			
ANR	898611	Identifier	incode		898468	0					
ANR	898612	PrimaryExpression	0		898468	1					
ANR	898613	IdentifierDeclStatement	int insubcode = 0 ;	3277:1:72067:72084	898468	9	True				
ANR	898614	IdentifierDecl	insubcode = 0		898468	0					
ANR	898615	IdentifierDeclType	int		898468	0					
ANR	898616	Identifier	insubcode		898468	1					
ANR	898617	AssignmentExpression	insubcode = 0		898468	2		=			
ANR	898618	Identifier	insubcode		898468	0					
ANR	898619	PrimaryExpression	0		898468	1					
ANR	898620	IdentifierDeclStatement	"int fsf_ret = fscanf ( file , ""\\tCode %d Subcode %d\\n"" , & incode , & insubcode ) ;"	3278:1:72087:72159	898468	10	True				
ANR	898621	IdentifierDecl	"fsf_ret = fscanf ( file , ""\\tCode %d Subcode %d\\n"" , & incode , & insubcode )"		898468	0					
ANR	898622	IdentifierDeclType	int		898468	0					
ANR	898623	Identifier	fsf_ret		898468	1					
ANR	898624	AssignmentExpression	"fsf_ret = fscanf ( file , ""\\tCode %d Subcode %d\\n"" , & incode , & insubcode )"		898468	2		=			
ANR	898625	Identifier	fsf_ret		898468	0					
ANR	898626	CallExpression	"fscanf ( file , ""\\tCode %d Subcode %d\\n"" , & incode , & insubcode )"		898468	1					
ANR	898627	Callee	fscanf		898468	0					
ANR	898628	Identifier	fscanf		898468	0					
ANR	898629	ArgumentList	file		898468	1					
ANR	898630	Argument	file		898468	0					
ANR	898631	Identifier	file		898468	0					
ANR	898632	Argument	"""\\tCode %d Subcode %d\\n"""		898468	1					
ANR	898633	PrimaryExpression	"""\\tCode %d Subcode %d\\n"""		898468	0					
ANR	898634	Argument	& incode		898468	2					
ANR	898635	UnaryOperationExpression	& incode		898468	0					
ANR	898636	UnaryOperator	&		898468	0					
ANR	898637	Identifier	incode		898468	1					
ANR	898638	Argument	& insubcode		898468	3					
ANR	898639	UnaryOperationExpression	& insubcode		898468	0					
ANR	898640	UnaryOperator	&		898468	0					
ANR	898641	Identifier	insubcode		898468	1					
ANR	898642	IfStatement	if ( fsf_ret != 2 )		898468	11					
ANR	898643	Condition	fsf_ret != 2	3279:6:72167:72178	898468	0	True				
ANR	898644	EqualityExpression	fsf_ret != 2		898468	0		!=			
ANR	898645	Identifier	fsf_ret		898468	0					
ANR	898646	PrimaryExpression	2		898468	1					
ANR	898647	CompoundStatement		34:21:1029:1029	898468	1					
ANR	898648	ExpressionStatement	code = 0	3280:2:72186:72194	898468	0	True				
ANR	898649	AssignmentExpression	code = 0		898468	0		=			
ANR	898650	Identifier	code		898468	0					
ANR	898651	PrimaryExpression	0		898468	1					
ANR	898652	ExpressionStatement	subcode = 0	3281:2:72198:72209	898468	1	True				
ANR	898653	AssignmentExpression	subcode = 0		898468	0		=			
ANR	898654	Identifier	subcode		898468	0					
ANR	898655	PrimaryExpression	0		898468	1					
ANR	898656	ExpressionStatement	"fsetpos ( file , & filep )"	3282:2:72213:72236	898468	2	True				
ANR	898657	CallExpression	"fsetpos ( file , & filep )"		898468	0					
ANR	898658	Callee	fsetpos		898468	0					
ANR	898659	Identifier	fsetpos		898468	0					
ANR	898660	ArgumentList	file		898468	1					
ANR	898661	Argument	file		898468	0					
ANR	898662	Identifier	file		898468	0					
ANR	898663	Argument	& filep		898468	1					
ANR	898664	UnaryOperationExpression	& filep		898468	0					
ANR	898665	UnaryOperator	&		898468	0					
ANR	898666	Identifier	filep		898468	1					
ANR	898667	ReturnStatement	return 1 ;	3283:2:72240:72248	898468	3	True				
ANR	898668	PrimaryExpression	1		898468	0					
ANR	898669	ExpressionStatement	code = incode	3285:1:72281:72294	898468	12	True				
ANR	898670	AssignmentExpression	code = incode		898468	0		=			
ANR	898671	Identifier	code		898468	0					
ANR	898672	Identifier	incode		898468	1					
ANR	898673	ExpressionStatement	subcode = insubcode	3286:1:72297:72316	898468	13	True				
ANR	898674	AssignmentExpression	subcode = insubcode		898468	0		=			
ANR	898675	Identifier	subcode		898468	0					
ANR	898676	Identifier	insubcode		898468	1					
ANR	898677	ReturnStatement	return 1 ;	3288:1:72320:72328	898468	14	True				
ANR	898678	PrimaryExpression	1		898468	0					
ANR	898679	ReturnType	int		898468	1					
ANR	898680	Identifier	JobHeldEvent :: readEvent		898468	2					
ANR	898681	ParameterList	FILE * file		898468	3					
ANR	898682	Parameter	FILE * file	3245:25:71139:71148	898468	0	True				
ANR	898683	ParameterType	FILE *		898468	0					
ANR	898684	Identifier	file		898468	1					
ANR	898685	CFGEntryNode	ENTRY		898468		True				
ANR	898686	CFGExitNode	EXIT		898468		True				
ANR	898687	Symbol	strcmp		898468						
ANR	898688	Symbol	reason		898468						
ANR	898689	Symbol	NULL		898468						
ANR	898690	Symbol	code		898468						
ANR	898691	Symbol	subcode		898468						
ANR	898692	Symbol	& filep		898468						
ANR	898693	Symbol	fgets		898468						
ANR	898694	Symbol	reason_buf		898468						
ANR	898695	Symbol	& incode		898468						
ANR	898696	Symbol	fscanf		898468						
ANR	898697	Symbol	insubcode		898468						
ANR	898698	Symbol	file		898468						
ANR	898699	Symbol	& insubcode		898468						
ANR	898700	Symbol	fsf_ret		898468						
ANR	898701	Symbol	strnewp		898468						
ANR	898702	Symbol	filep		898468						
ANR	898703	Symbol	incode		898468						
ANR	898704	Symbol	* reason_buf		898468						
ANR	898705	Symbol	EOF		898468						
ANR	898706	Symbol	BUFSIZ		898468						
ANR	898707	Function	JobHeldEvent :: writeEvent	3292:0:72334:73383							
ANR	898708	FunctionDef	JobHeldEvent :: writeEvent (FILE * file)		898707	0					
ANR	898709	CompoundStatement		3294:0:72377:73383	898707	0					
ANR	898710	IdentifierDeclStatement	char messagestr [ 512 ] ;	3295:1:72380:72400	898707	0	True				
ANR	898711	IdentifierDecl	messagestr [ 512 ]		898707	0					
ANR	898712	IdentifierDeclType	char [ 512 ]		898707	0					
ANR	898713	Identifier	messagestr		898707	1					
ANR	898714	PrimaryExpression	512		898707	2					
ANR	898715	IdentifierDeclStatement	ClassAd tmpCl1 ;	3296:1:72403:72417	898707	1	True				
ANR	898716	IdentifierDecl	tmpCl1		898707	0					
ANR	898717	IdentifierDeclType	ClassAd		898707	0					
ANR	898718	Identifier	tmpCl1		898707	1					
ANR	898719	IfStatement	if ( reason )		898707	2					
ANR	898720	Condition	reason	3299:5:72456:72461	898707	0	True				
ANR	898721	Identifier	reason		898707	0					
ANR	898722	ExpressionStatement	"snprintf ( messagestr , 512 , ""Job was held: %s"" , reason )"	3300:2:72466:72519	898707	1	True				
ANR	898723	CallExpression	"snprintf ( messagestr , 512 , ""Job was held: %s"" , reason )"		898707	0					
ANR	898724	Callee	snprintf		898707	0					
ANR	898725	Identifier	snprintf		898707	0					
ANR	898726	ArgumentList	messagestr		898707	1					
ANR	898727	Argument	messagestr		898707	0					
ANR	898728	Identifier	messagestr		898707	0					
ANR	898729	Argument	512		898707	1					
ANR	898730	PrimaryExpression	512		898707	0					
ANR	898731	Argument	"""Job was held: %s"""		898707	2					
ANR	898732	PrimaryExpression	"""Job was held: %s"""		898707	0					
ANR	898733	Argument	reason		898707	3					
ANR	898734	Identifier	reason		898707	0					
ANR	898735	ElseStatement	else		898707	0					
ANR	898736	ExpressionStatement	"sprintf ( messagestr , ""Job was held: reason unspecified"" )"	3302:2:72529:72584	898707	0	True				
ANR	898737	CallExpression	"sprintf ( messagestr , ""Job was held: reason unspecified"" )"		898707	0					
ANR	898738	Callee	sprintf		898707	0					
ANR	898739	Identifier	sprintf		898707	0					
ANR	898740	ArgumentList	messagestr		898707	1					
ANR	898741	Argument	messagestr		898707	0					
ANR	898742	Identifier	messagestr		898707	0					
ANR	898743	Argument	"""Job was held: reason unspecified"""		898707	1					
ANR	898744	PrimaryExpression	"""Job was held: reason unspecified"""		898707	0					
ANR	898745	ExpressionStatement	scheddname = getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )	3304:1:72588:72640	898707	3	True				
ANR	898746	AssignmentExpression	scheddname = getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )		898707	0		=			
ANR	898747	Identifier	scheddname		898707	0					
ANR	898748	CallExpression	getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )		898707	1					
ANR	898749	Callee	getenv		898707	0					
ANR	898750	Identifier	getenv		898707	0					
ANR	898751	ArgumentList	EnvGetName ( ENV_SCHEDD_NAME )		898707	1					
ANR	898752	Argument	EnvGetName ( ENV_SCHEDD_NAME )		898707	0					
ANR	898753	CallExpression	EnvGetName ( ENV_SCHEDD_NAME )		898707	0					
ANR	898754	Callee	EnvGetName		898707	0					
ANR	898755	Identifier	EnvGetName		898707	0					
ANR	898756	ArgumentList	ENV_SCHEDD_NAME		898707	1					
ANR	898757	Argument	ENV_SCHEDD_NAME		898707	0					
ANR	898758	Identifier	ENV_SCHEDD_NAME		898707	0					
ANR	898759	ExpressionStatement	insertCommonIdentifiers ( tmpCl1 )	3307:1:72692:72723	898707	4	True				
ANR	898760	CallExpression	insertCommonIdentifiers ( tmpCl1 )		898707	0					
ANR	898761	Callee	insertCommonIdentifiers		898707	0					
ANR	898762	Identifier	insertCommonIdentifiers		898707	0					
ANR	898763	ArgumentList	tmpCl1		898707	1					
ANR	898764	Argument	tmpCl1		898707	0					
ANR	898765	Identifier	tmpCl1		898707	0					
ANR	898766	ExpressionStatement	"tmpCl1 . Assign ( ""eventtype"" , ULOG_JOB_HELD )"	3309:1:72727:72768	898707	5	True				
ANR	898767	CallExpression	"tmpCl1 . Assign ( ""eventtype"" , ULOG_JOB_HELD )"		898707	0					
ANR	898768	Callee	tmpCl1 . Assign		898707	0					
ANR	898769	MemberAccess	tmpCl1 . Assign		898707	0					
ANR	898770	Identifier	tmpCl1		898707	0					
ANR	898771	Identifier	Assign		898707	1					
ANR	898772	ArgumentList	"""eventtype"""		898707	1					
ANR	898773	Argument	"""eventtype"""		898707	0					
ANR	898774	PrimaryExpression	"""eventtype"""		898707	0					
ANR	898775	Argument	ULOG_JOB_HELD		898707	1					
ANR	898776	Identifier	ULOG_JOB_HELD		898707	0					
ANR	898777	ExpressionStatement	"tmpCl1 . Assign ( ""eventtime"" , ( int ) eventclock )"	3310:1:72771:72814	898707	6	True				
ANR	898778	CallExpression	"tmpCl1 . Assign ( ""eventtime"" , ( int ) eventclock )"		898707	0					
ANR	898779	Callee	tmpCl1 . Assign		898707	0					
ANR	898780	MemberAccess	tmpCl1 . Assign		898707	0					
ANR	898781	Identifier	tmpCl1		898707	0					
ANR	898782	Identifier	Assign		898707	1					
ANR	898783	ArgumentList	"""eventtime"""		898707	1					
ANR	898784	Argument	"""eventtime"""		898707	0					
ANR	898785	PrimaryExpression	"""eventtime"""		898707	0					
ANR	898786	Argument	( int ) eventclock		898707	1					
ANR	898787	CastExpression	( int ) eventclock		898707	0					
ANR	898788	CastTarget	int		898707	0					
ANR	898789	Identifier	eventclock		898707	1					
ANR	898790	ExpressionStatement	"tmpCl1 . Assign ( ""description"" , messagestr )"	3311:1:72817:72857	898707	7	True				
ANR	898791	CallExpression	"tmpCl1 . Assign ( ""description"" , messagestr )"		898707	0					
ANR	898792	Callee	tmpCl1 . Assign		898707	0					
ANR	898793	MemberAccess	tmpCl1 . Assign		898707	0					
ANR	898794	Identifier	tmpCl1		898707	0					
ANR	898795	Identifier	Assign		898707	1					
ANR	898796	ArgumentList	"""description"""		898707	1					
ANR	898797	Argument	"""description"""		898707	0					
ANR	898798	PrimaryExpression	"""description"""		898707	0					
ANR	898799	Argument	messagestr		898707	1					
ANR	898800	Identifier	messagestr		898707	0					
ANR	898801	IfStatement	if ( FILEObj )		898707	8					
ANR	898802	Condition	FILEObj	3313:5:72865:72871	898707	0	True				
ANR	898803	Identifier	FILEObj		898707	0					
ANR	898804	CompoundStatement		20:14:496:496	898707	1					
ANR	898805	IfStatement	"if ( FILEObj -> file_newEvent ( ""Events"" , & tmpCl1 ) == QUILL_FAILURE )"		898707	0					
ANR	898806	Condition	"FILEObj -> file_newEvent ( ""Events"" , & tmpCl1 ) == QUILL_FAILURE"	3314:6:72882:72939	898707	0	True				
ANR	898807	EqualityExpression	"FILEObj -> file_newEvent ( ""Events"" , & tmpCl1 ) == QUILL_FAILURE"		898707	0		==			
ANR	898808	CallExpression	"FILEObj -> file_newEvent ( ""Events"" , & tmpCl1 )"		898707	0					
ANR	898809	Callee	FILEObj -> file_newEvent		898707	0					
ANR	898810	PtrMemberAccess	FILEObj -> file_newEvent		898707	0					
ANR	898811	Identifier	FILEObj		898707	0					
ANR	898812	Identifier	file_newEvent		898707	1					
ANR	898813	ArgumentList	"""Events"""		898707	1					
ANR	898814	Argument	"""Events"""		898707	0					
ANR	898815	PrimaryExpression	"""Events"""		898707	0					
ANR	898816	Argument	& tmpCl1		898707	1					
ANR	898817	UnaryOperationExpression	& tmpCl1		898707	0					
ANR	898818	UnaryOperator	&		898707	0					
ANR	898819	Identifier	tmpCl1		898707	1					
ANR	898820	Identifier	QUILL_FAILURE		898707	1					
ANR	898821	CompoundStatement		21:66:564:564	898707	1					
ANR	898822	ExpressionStatement	"dprintf ( D_ALWAYS , ""Logging Event 10--- Error\\n"" )"	3315:3:72947:72995	898707	0	True				
ANR	898823	CallExpression	"dprintf ( D_ALWAYS , ""Logging Event 10--- Error\\n"" )"		898707	0					
ANR	898824	Callee	dprintf		898707	0					
ANR	898825	Identifier	dprintf		898707	0					
ANR	898826	ArgumentList	D_ALWAYS		898707	1					
ANR	898827	Argument	D_ALWAYS		898707	0					
ANR	898828	Identifier	D_ALWAYS		898707	0					
ANR	898829	Argument	"""Logging Event 10--- Error\\n"""		898707	1					
ANR	898830	PrimaryExpression	"""Logging Event 10--- Error\\n"""		898707	0					
ANR	898831	ReturnStatement	return 0 ;	3316:3:73000:73008	898707	1	True				
ANR	898832	PrimaryExpression	0		898707	0					
ANR	898833	IfStatement	"if ( fprintf ( file , ""Job was held.\\n"" ) < 0 )"		898707	9					
ANR	898834	Condition	"fprintf ( file , ""Job was held.\\n"" ) < 0"	3320:5:73049:73084	898707	0	True				
ANR	898835	RelationalExpression	"fprintf ( file , ""Job was held.\\n"" ) < 0"		898707	0		<			
ANR	898836	CallExpression	"fprintf ( file , ""Job was held.\\n"" )"		898707	0					
ANR	898837	Callee	fprintf		898707	0					
ANR	898838	Identifier	fprintf		898707	0					
ANR	898839	ArgumentList	file		898707	1					
ANR	898840	Argument	file		898707	0					
ANR	898841	Identifier	file		898707	0					
ANR	898842	Argument	"""Job was held.\\n"""		898707	1					
ANR	898843	PrimaryExpression	"""Job was held.\\n"""		898707	0					
ANR	898844	PrimaryExpression	0		898707	1					
ANR	898845	CompoundStatement		27:44:710:710	898707	1					
ANR	898846	ReturnStatement	return 0 ;	3321:2:73092:73100	898707	0	True				
ANR	898847	PrimaryExpression	0		898707	0					
ANR	898848	IfStatement	if ( reason )		898707	10					
ANR	898849	Condition	reason	3323:5:73110:73115	898707	0	True				
ANR	898850	Identifier	reason		898707	0					
ANR	898851	CompoundStatement		30:14:741:741	898707	1					
ANR	898852	IfStatement	"if ( fprintf ( file , ""\\t%s\\n"" , reason ) < 0 )"		898707	0					
ANR	898853	Condition	"fprintf ( file , ""\\t%s\\n"" , reason ) < 0"	3324:6:73127:73161	898707	0	True				
ANR	898854	RelationalExpression	"fprintf ( file , ""\\t%s\\n"" , reason ) < 0"		898707	0		<			
ANR	898855	CallExpression	"fprintf ( file , ""\\t%s\\n"" , reason )"		898707	0					
ANR	898856	Callee	fprintf		898707	0					
ANR	898857	Identifier	fprintf		898707	0					
ANR	898858	ArgumentList	file		898707	1					
ANR	898859	Argument	file		898707	0					
ANR	898860	Identifier	file		898707	0					
ANR	898861	Argument	"""\\t%s\\n"""		898707	1					
ANR	898862	PrimaryExpression	"""\\t%s\\n"""		898707	0					
ANR	898863	Argument	reason		898707	2					
ANR	898864	Identifier	reason		898707	0					
ANR	898865	PrimaryExpression	0		898707	1					
ANR	898866	CompoundStatement		31:44:787:787	898707	1					
ANR	898867	ReturnStatement	return 0 ;	3325:3:73170:73178	898707	0	True				
ANR	898868	PrimaryExpression	0		898707	0					
ANR	898869	ElseStatement	else		898707	0					
ANR	898870	CompoundStatement		34:8:814:814	898707	0					
ANR	898871	IfStatement	"if ( fprintf ( file , ""\\tReason unspecified\\n"" ) < 0 )"		898707	0					
ANR	898872	Condition	"fprintf ( file , ""\\tReason unspecified\\n"" ) < 0"	3328:6:73200:73242	898707	0	True				
ANR	898873	RelationalExpression	"fprintf ( file , ""\\tReason unspecified\\n"" ) < 0"		898707	0		<			
ANR	898874	CallExpression	"fprintf ( file , ""\\tReason unspecified\\n"" )"		898707	0					
ANR	898875	Callee	fprintf		898707	0					
ANR	898876	Identifier	fprintf		898707	0					
ANR	898877	ArgumentList	file		898707	1					
ANR	898878	Argument	file		898707	0					
ANR	898879	Identifier	file		898707	0					
ANR	898880	Argument	"""\\tReason unspecified\\n"""		898707	1					
ANR	898881	PrimaryExpression	"""\\tReason unspecified\\n"""		898707	0					
ANR	898882	PrimaryExpression	0		898707	1					
ANR	898883	CompoundStatement		35:52:868:868	898707	1					
ANR	898884	ReturnStatement	return 0 ;	3329:3:73251:73259	898707	0	True				
ANR	898885	PrimaryExpression	0		898707	0					
ANR	898886	IfStatement	"if ( fprintf ( file , ""\\tCode %d Subcode %d\\n"" , code , subcode ) < 0 )"		898707	11					
ANR	898887	Condition	"fprintf ( file , ""\\tCode %d Subcode %d\\n"" , code , subcode ) < 0"	3334:5:73294:73350	898707	0	True				
ANR	898888	RelationalExpression	"fprintf ( file , ""\\tCode %d Subcode %d\\n"" , code , subcode ) < 0"		898707	0		<			
ANR	898889	CallExpression	"fprintf ( file , ""\\tCode %d Subcode %d\\n"" , code , subcode )"		898707	0					
ANR	898890	Callee	fprintf		898707	0					
ANR	898891	Identifier	fprintf		898707	0					
ANR	898892	ArgumentList	file		898707	1					
ANR	898893	Argument	file		898707	0					
ANR	898894	Identifier	file		898707	0					
ANR	898895	Argument	"""\\tCode %d Subcode %d\\n"""		898707	1					
ANR	898896	PrimaryExpression	"""\\tCode %d Subcode %d\\n"""		898707	0					
ANR	898897	Argument	code		898707	2					
ANR	898898	Identifier	code		898707	0					
ANR	898899	Argument	subcode		898707	3					
ANR	898900	Identifier	subcode		898707	0					
ANR	898901	PrimaryExpression	0		898707	1					
ANR	898902	CompoundStatement		41:65:976:976	898707	1					
ANR	898903	ReturnStatement	return 0 ;	3335:2:73358:73366	898707	0	True				
ANR	898904	PrimaryExpression	0		898707	0					
ANR	898905	ReturnStatement	return 1 ;	3338:1:73373:73381	898707	12	True				
ANR	898906	PrimaryExpression	1		898707	0					
ANR	898907	ReturnType	int		898707	1					
ANR	898908	Identifier	JobHeldEvent :: writeEvent		898707	2					
ANR	898909	ParameterList	FILE * file		898707	3					
ANR	898910	Parameter	FILE * file	3293:26:72364:72373	898707	0	True				
ANR	898911	ParameterType	FILE *		898707	0					
ANR	898912	Identifier	file		898707	1					
ANR	898913	CFGEntryNode	ENTRY		898707		True				
ANR	898914	CFGExitNode	EXIT		898707		True				
ANR	898915	Symbol	reason		898707						
ANR	898916	Symbol	code		898707						
ANR	898917	Symbol	scheddname		898707						
ANR	898918	Symbol	D_ALWAYS		898707						
ANR	898919	Symbol	subcode		898707						
ANR	898920	Symbol	EnvGetName		898707						
ANR	898921	Symbol	ENV_SCHEDD_NAME		898707						
ANR	898922	Symbol	QUILL_FAILURE		898707						
ANR	898923	Symbol	fprintf		898707						
ANR	898924	Symbol	FILEObj		898707						
ANR	898925	Symbol	* FILEObj		898707						
ANR	898926	Symbol	& tmpCl1		898707						
ANR	898927	Symbol	file		898707						
ANR	898928	Symbol	messagestr		898707						
ANR	898929	Symbol	ULOG_JOB_HELD		898707						
ANR	898930	Symbol	eventclock		898707						
ANR	898931	Symbol	tmpCl1		898707						
ANR	898932	Symbol	FILEObj -> file_newEvent		898707						
ANR	898933	Symbol	getenv		898707						
ANR	898934	Function	JobHeldEvent :: toClassAd	3341:0:73386:73906							
ANR	898935	FunctionDef	JobHeldEvent :: toClassAd ()		898934	0					
ANR	898936	CompoundStatement		3343:0:73425:73906	898934	0					
ANR	898937	IdentifierDeclStatement	ClassAd * myad = ULogEvent :: toClassAd ( ) ;	3344:1:73428:73466	898934	0	True				
ANR	898938	IdentifierDecl	* myad = ULogEvent :: toClassAd ( )		898934	0					
ANR	898939	IdentifierDeclType	ClassAd *		898934	0					
ANR	898940	Identifier	myad		898934	1					
ANR	898941	AssignmentExpression	* myad = ULogEvent :: toClassAd ( )		898934	2		=			
ANR	898942	Identifier	myad		898934	0					
ANR	898943	CallExpression	ULogEvent :: toClassAd ( )		898934	1					
ANR	898944	Callee	ULogEvent :: toClassAd		898934	0					
ANR	898945	Identifier	ULogEvent :: toClassAd		898934	0					
ANR	898946	ArgumentList			898934	1					
ANR	898947	IfStatement	if ( ! myad )		898934	1					
ANR	898948	Condition	! myad	3345:5:73473:73477	898934	0	True				
ANR	898949	UnaryOperationExpression	! myad		898934	0					
ANR	898950	UnaryOperator	!		898934	0					
ANR	898951	Identifier	myad		898934	1					
ANR	898952	ReturnStatement	return NULL ;	3345:13:73481:73492	898934	1	True				
ANR	898953	Identifier	NULL		898934	0					
ANR	898954	IdentifierDeclStatement	const char * hold_reason = getReason ( ) ;	3347:1:73496:73533	898934	2	True				
ANR	898955	IdentifierDecl	* hold_reason = getReason ( )		898934	0					
ANR	898956	IdentifierDeclType	const char *		898934	0					
ANR	898957	Identifier	hold_reason		898934	1					
ANR	898958	AssignmentExpression	* hold_reason = getReason ( )		898934	2		=			
ANR	898959	Identifier	hold_reason		898934	0					
ANR	898960	CallExpression	getReason ( )		898934	1					
ANR	898961	Callee	getReason		898934	0					
ANR	898962	Identifier	getReason		898934	0					
ANR	898963	ArgumentList			898934	1					
ANR	898964	IdentifierDeclStatement	MyString buf2 ;	3348:1:73536:73549	898934	3	True				
ANR	898965	IdentifierDecl	buf2		898934	0					
ANR	898966	IdentifierDeclType	MyString		898934	0					
ANR	898967	Identifier	buf2		898934	1					
ANR	898968	IfStatement	if ( hold_reason )		898934	4					
ANR	898969	Condition	hold_reason	3349:6:73557:73567	898934	0	True				
ANR	898970	Identifier	hold_reason		898934	0					
ANR	898971	CompoundStatement		7:20:145:145	898934	1					
ANR	898972	ExpressionStatement	"buf2 . sprintf ( ""%s = \\""%s\\"""" , ATTR_HOLD_REASON , hold_reason )"	3350:2:73575:73632	898934	0	True				
ANR	898973	CallExpression	"buf2 . sprintf ( ""%s = \\""%s\\"""" , ATTR_HOLD_REASON , hold_reason )"		898934	0					
ANR	898974	Callee	buf2 . sprintf		898934	0					
ANR	898975	MemberAccess	buf2 . sprintf		898934	0					
ANR	898976	Identifier	buf2		898934	0					
ANR	898977	Identifier	sprintf		898934	1					
ANR	898978	ArgumentList	"""%s = \\""%s\\"""""		898934	1					
ANR	898979	Argument	"""%s = \\""%s\\"""""		898934	0					
ANR	898980	PrimaryExpression	"""%s = \\""%s\\"""""		898934	0					
ANR	898981	Argument	ATTR_HOLD_REASON		898934	1					
ANR	898982	Identifier	ATTR_HOLD_REASON		898934	0					
ANR	898983	Argument	hold_reason		898934	2					
ANR	898984	Identifier	hold_reason		898934	0					
ANR	898985	IfStatement	if ( ! myad -> Insert ( buf2 . Value ( ) ) )		898934	1					
ANR	898986	Condition	! myad -> Insert ( buf2 . Value ( ) )	3351:6:73640:73666	898934	0	True				
ANR	898987	UnaryOperationExpression	! myad -> Insert ( buf2 . Value ( ) )		898934	0					
ANR	898988	UnaryOperator	!		898934	0					
ANR	898989	CallExpression	myad -> Insert ( buf2 . Value ( ) )		898934	1					
ANR	898990	Callee	myad -> Insert		898934	0					
ANR	898991	PtrMemberAccess	myad -> Insert		898934	0					
ANR	898992	Identifier	myad		898934	0					
ANR	898993	Identifier	Insert		898934	1					
ANR	898994	ArgumentList	buf2 . Value ( )		898934	1					
ANR	898995	Argument	buf2 . Value ( )		898934	0					
ANR	898996	CallExpression	buf2 . Value ( )		898934	0					
ANR	898997	Callee	buf2 . Value		898934	0					
ANR	898998	MemberAccess	buf2 . Value		898934	0					
ANR	898999	Identifier	buf2		898934	0					
ANR	899000	Identifier	Value		898934	1					
ANR	899001	ArgumentList			898934	1					
ANR	899002	ReturnStatement	return NULL ;	3351:36:73670:73681	898934	1	True				
ANR	899003	Identifier	NULL		898934	0					
ANR	899004	ExpressionStatement	"buf2 . sprintf ( ""%s = %d"" , ATTR_HOLD_REASON_CODE , code )"	3353:1:73687:73737	898934	5	True				
ANR	899005	CallExpression	"buf2 . sprintf ( ""%s = %d"" , ATTR_HOLD_REASON_CODE , code )"		898934	0					
ANR	899006	Callee	buf2 . sprintf		898934	0					
ANR	899007	MemberAccess	buf2 . sprintf		898934	0					
ANR	899008	Identifier	buf2		898934	0					
ANR	899009	Identifier	sprintf		898934	1					
ANR	899010	ArgumentList	"""%s = %d"""		898934	1					
ANR	899011	Argument	"""%s = %d"""		898934	0					
ANR	899012	PrimaryExpression	"""%s = %d"""		898934	0					
ANR	899013	Argument	ATTR_HOLD_REASON_CODE		898934	1					
ANR	899014	Identifier	ATTR_HOLD_REASON_CODE		898934	0					
ANR	899015	Argument	code		898934	2					
ANR	899016	Identifier	code		898934	0					
ANR	899017	IfStatement	if ( ! myad -> Insert ( buf2 . Value ( ) ) )		898934	6					
ANR	899018	Condition	! myad -> Insert ( buf2 . Value ( ) )	3354:5:73744:73770	898934	0	True				
ANR	899019	UnaryOperationExpression	! myad -> Insert ( buf2 . Value ( ) )		898934	0					
ANR	899020	UnaryOperator	!		898934	0					
ANR	899021	CallExpression	myad -> Insert ( buf2 . Value ( ) )		898934	1					
ANR	899022	Callee	myad -> Insert		898934	0					
ANR	899023	PtrMemberAccess	myad -> Insert		898934	0					
ANR	899024	Identifier	myad		898934	0					
ANR	899025	Identifier	Insert		898934	1					
ANR	899026	ArgumentList	buf2 . Value ( )		898934	1					
ANR	899027	Argument	buf2 . Value ( )		898934	0					
ANR	899028	CallExpression	buf2 . Value ( )		898934	0					
ANR	899029	Callee	buf2 . Value		898934	0					
ANR	899030	MemberAccess	buf2 . Value		898934	0					
ANR	899031	Identifier	buf2		898934	0					
ANR	899032	Identifier	Value		898934	1					
ANR	899033	ArgumentList			898934	1					
ANR	899034	ReturnStatement	return NULL ;	3354:35:73774:73785	898934	1	True				
ANR	899035	Identifier	NULL		898934	0					
ANR	899036	ExpressionStatement	"buf2 . sprintf ( ""%s = %d"" , ATTR_HOLD_REASON_SUBCODE , code )"	3355:1:73788:73841	898934	7	True				
ANR	899037	CallExpression	"buf2 . sprintf ( ""%s = %d"" , ATTR_HOLD_REASON_SUBCODE , code )"		898934	0					
ANR	899038	Callee	buf2 . sprintf		898934	0					
ANR	899039	MemberAccess	buf2 . sprintf		898934	0					
ANR	899040	Identifier	buf2		898934	0					
ANR	899041	Identifier	sprintf		898934	1					
ANR	899042	ArgumentList	"""%s = %d"""		898934	1					
ANR	899043	Argument	"""%s = %d"""		898934	0					
ANR	899044	PrimaryExpression	"""%s = %d"""		898934	0					
ANR	899045	Argument	ATTR_HOLD_REASON_SUBCODE		898934	1					
ANR	899046	Identifier	ATTR_HOLD_REASON_SUBCODE		898934	0					
ANR	899047	Argument	code		898934	2					
ANR	899048	Identifier	code		898934	0					
ANR	899049	IfStatement	if ( ! myad -> Insert ( buf2 . Value ( ) ) )		898934	8					
ANR	899050	Condition	! myad -> Insert ( buf2 . Value ( ) )	3356:5:73848:73874	898934	0	True				
ANR	899051	UnaryOperationExpression	! myad -> Insert ( buf2 . Value ( ) )		898934	0					
ANR	899052	UnaryOperator	!		898934	0					
ANR	899053	CallExpression	myad -> Insert ( buf2 . Value ( ) )		898934	1					
ANR	899054	Callee	myad -> Insert		898934	0					
ANR	899055	PtrMemberAccess	myad -> Insert		898934	0					
ANR	899056	Identifier	myad		898934	0					
ANR	899057	Identifier	Insert		898934	1					
ANR	899058	ArgumentList	buf2 . Value ( )		898934	1					
ANR	899059	Argument	buf2 . Value ( )		898934	0					
ANR	899060	CallExpression	buf2 . Value ( )		898934	0					
ANR	899061	Callee	buf2 . Value		898934	0					
ANR	899062	MemberAccess	buf2 . Value		898934	0					
ANR	899063	Identifier	buf2		898934	0					
ANR	899064	Identifier	Value		898934	1					
ANR	899065	ArgumentList			898934	1					
ANR	899066	ReturnStatement	return NULL ;	3356:35:73878:73889	898934	1	True				
ANR	899067	Identifier	NULL		898934	0					
ANR	899068	ReturnStatement	return myad ;	3358:1:73893:73904	898934	9	True				
ANR	899069	Identifier	myad		898934	0					
ANR	899070	ReturnType	ClassAd *		898934	1					
ANR	899071	Identifier	JobHeldEvent :: toClassAd		898934	2					
ANR	899072	ParameterList			898934	3					
ANR	899073	CFGEntryNode	ENTRY		898934		True				
ANR	899074	CFGExitNode	EXIT		898934		True				
ANR	899075	Symbol	ATTR_HOLD_REASON_SUBCODE		898934						
ANR	899076	Symbol	NULL		898934						
ANR	899077	Symbol	code		898934						
ANR	899078	Symbol	* myad		898934						
ANR	899079	Symbol	getReason		898934						
ANR	899080	Symbol	myad -> Insert		898934						
ANR	899081	Symbol	ULogEvent :: toClassAd		898934						
ANR	899082	Symbol	hold_reason		898934						
ANR	899083	Symbol	ATTR_HOLD_REASON		898934						
ANR	899084	Symbol	buf2 . Value		898934						
ANR	899085	Symbol	ATTR_HOLD_REASON_CODE		898934						
ANR	899086	Symbol	buf2		898934						
ANR	899087	Symbol	myad		898934						
ANR	899088	Function	JobHeldEvent :: initFromClassAd	3361:0:73909:74347							
ANR	899089	FunctionDef	JobHeldEvent :: initFromClassAd (ClassAd * ad)		899088	0					
ANR	899090	CompoundStatement		3363:0:73957:74347	899088	0					
ANR	899091	ExpressionStatement	ULogEvent :: initFromClassAd ( ad )	3364:1:73960:73990	899088	0	True				
ANR	899092	CallExpression	ULogEvent :: initFromClassAd ( ad )		899088	0					
ANR	899093	Callee	ULogEvent :: initFromClassAd		899088	0					
ANR	899094	Identifier	ULogEvent :: initFromClassAd		899088	0					
ANR	899095	ArgumentList	ad		899088	1					
ANR	899096	Argument	ad		899088	0					
ANR	899097	Identifier	ad		899088	0					
ANR	899098	IfStatement	if ( ! ad )		899088	1					
ANR	899099	Condition	! ad	3366:5:73998:74000	899088	0	True				
ANR	899100	UnaryOperationExpression	! ad		899088	0					
ANR	899101	UnaryOperator	!		899088	0					
ANR	899102	Identifier	ad		899088	1					
ANR	899103	ReturnStatement	return ;	3366:11:74004:74010	899088	1	True				
ANR	899104	IdentifierDeclStatement	char * multi = NULL ;	3368:1:74014:74032	899088	2	True				
ANR	899105	IdentifierDecl	* multi = NULL		899088	0					
ANR	899106	IdentifierDeclType	char *		899088	0					
ANR	899107	Identifier	multi		899088	1					
ANR	899108	AssignmentExpression	* multi = NULL		899088	2		=			
ANR	899109	Identifier	NULL		899088	0					
ANR	899110	Identifier	NULL		899088	1					
ANR	899111	IdentifierDeclStatement	int incode = 0 ;	3369:1:74035:74049	899088	3	True				
ANR	899112	IdentifierDecl	incode = 0		899088	0					
ANR	899113	IdentifierDeclType	int		899088	0					
ANR	899114	Identifier	incode		899088	1					
ANR	899115	AssignmentExpression	incode = 0		899088	2		=			
ANR	899116	Identifier	incode		899088	0					
ANR	899117	PrimaryExpression	0		899088	1					
ANR	899118	IdentifierDeclStatement	int insubcode = 0 ;	3370:1:74052:74069	899088	4	True				
ANR	899119	IdentifierDecl	insubcode = 0		899088	0					
ANR	899120	IdentifierDeclType	int		899088	0					
ANR	899121	Identifier	insubcode		899088	1					
ANR	899122	AssignmentExpression	insubcode = 0		899088	2		=			
ANR	899123	Identifier	insubcode		899088	0					
ANR	899124	PrimaryExpression	0		899088	1					
ANR	899125	ExpressionStatement	"ad -> LookupString ( ATTR_HOLD_REASON , & multi )"	3371:1:74072:74114	899088	5	True				
ANR	899126	CallExpression	"ad -> LookupString ( ATTR_HOLD_REASON , & multi )"		899088	0					
ANR	899127	Callee	ad -> LookupString		899088	0					
ANR	899128	PtrMemberAccess	ad -> LookupString		899088	0					
ANR	899129	Identifier	ad		899088	0					
ANR	899130	Identifier	LookupString		899088	1					
ANR	899131	ArgumentList	ATTR_HOLD_REASON		899088	1					
ANR	899132	Argument	ATTR_HOLD_REASON		899088	0					
ANR	899133	Identifier	ATTR_HOLD_REASON		899088	0					
ANR	899134	Argument	& multi		899088	1					
ANR	899135	UnaryOperationExpression	& multi		899088	0					
ANR	899136	UnaryOperator	&		899088	0					
ANR	899137	Identifier	multi		899088	1					
ANR	899138	IfStatement	if ( multi )		899088	6					
ANR	899139	Condition	multi	3372:5:74121:74125	899088	0	True				
ANR	899140	Identifier	multi		899088	0					
ANR	899141	CompoundStatement		10:13:171:171	899088	1					
ANR	899142	ExpressionStatement	setReason ( multi )	3373:2:74133:74149	899088	0	True				
ANR	899143	CallExpression	setReason ( multi )		899088	0					
ANR	899144	Callee	setReason		899088	0					
ANR	899145	Identifier	setReason		899088	0					
ANR	899146	ArgumentList	multi		899088	1					
ANR	899147	Argument	multi		899088	0					
ANR	899148	Identifier	multi		899088	0					
ANR	899149	ExpressionStatement	free ( multi )	3374:2:74153:74164	899088	1	True				
ANR	899150	CallExpression	free ( multi )		899088	0					
ANR	899151	Callee	free		899088	0					
ANR	899152	Identifier	free		899088	0					
ANR	899153	ArgumentList	multi		899088	1					
ANR	899154	Argument	multi		899088	0					
ANR	899155	Identifier	multi		899088	0					
ANR	899156	ExpressionStatement	multi = NULL	3375:2:74168:74180	899088	2	True				
ANR	899157	AssignmentExpression	multi = NULL		899088	0		=			
ANR	899158	Identifier	multi		899088	0					
ANR	899159	Identifier	NULL		899088	1					
ANR	899160	ExpressionStatement	"ad -> LookupInteger ( ATTR_HOLD_REASON_CODE , incode )"	3377:1:74186:74234	899088	7	True				
ANR	899161	CallExpression	"ad -> LookupInteger ( ATTR_HOLD_REASON_CODE , incode )"		899088	0					
ANR	899162	Callee	ad -> LookupInteger		899088	0					
ANR	899163	PtrMemberAccess	ad -> LookupInteger		899088	0					
ANR	899164	Identifier	ad		899088	0					
ANR	899165	Identifier	LookupInteger		899088	1					
ANR	899166	ArgumentList	ATTR_HOLD_REASON_CODE		899088	1					
ANR	899167	Argument	ATTR_HOLD_REASON_CODE		899088	0					
ANR	899168	Identifier	ATTR_HOLD_REASON_CODE		899088	0					
ANR	899169	Argument	incode		899088	1					
ANR	899170	Identifier	incode		899088	0					
ANR	899171	ExpressionStatement	setReasonCode ( incode )	3378:1:74237:74258	899088	8	True				
ANR	899172	CallExpression	setReasonCode ( incode )		899088	0					
ANR	899173	Callee	setReasonCode		899088	0					
ANR	899174	Identifier	setReasonCode		899088	0					
ANR	899175	ArgumentList	incode		899088	1					
ANR	899176	Argument	incode		899088	0					
ANR	899177	Identifier	incode		899088	0					
ANR	899178	ExpressionStatement	"ad -> LookupInteger ( ATTR_HOLD_REASON_SUBCODE , insubcode )"	3379:1:74261:74315	899088	9	True				
ANR	899179	CallExpression	"ad -> LookupInteger ( ATTR_HOLD_REASON_SUBCODE , insubcode )"		899088	0					
ANR	899180	Callee	ad -> LookupInteger		899088	0					
ANR	899181	PtrMemberAccess	ad -> LookupInteger		899088	0					
ANR	899182	Identifier	ad		899088	0					
ANR	899183	Identifier	LookupInteger		899088	1					
ANR	899184	ArgumentList	ATTR_HOLD_REASON_SUBCODE		899088	1					
ANR	899185	Argument	ATTR_HOLD_REASON_SUBCODE		899088	0					
ANR	899186	Identifier	ATTR_HOLD_REASON_SUBCODE		899088	0					
ANR	899187	Argument	insubcode		899088	1					
ANR	899188	Identifier	insubcode		899088	0					
ANR	899189	ExpressionStatement	setReasonSubCode ( insubcode )	3380:1:74318:74345	899088	10	True				
ANR	899190	CallExpression	setReasonSubCode ( insubcode )		899088	0					
ANR	899191	Callee	setReasonSubCode		899088	0					
ANR	899192	Identifier	setReasonSubCode		899088	0					
ANR	899193	ArgumentList	insubcode		899088	1					
ANR	899194	Argument	insubcode		899088	0					
ANR	899195	Identifier	insubcode		899088	0					
ANR	899196	ReturnType	void		899088	1					
ANR	899197	Identifier	JobHeldEvent :: initFromClassAd		899088	2					
ANR	899198	ParameterList	ClassAd * ad		899088	3					
ANR	899199	Parameter	ClassAd * ad	3362:30:73944:73954	899088	0	True				
ANR	899200	ParameterType	ClassAd *		899088	0					
ANR	899201	Identifier	ad		899088	1					
ANR	899202	CFGEntryNode	ENTRY		899088		True				
ANR	899203	CFGExitNode	EXIT		899088		True				
ANR	899204	Symbol	& multi		899088						
ANR	899205	Symbol	insubcode		899088						
ANR	899206	Symbol	ATTR_HOLD_REASON_SUBCODE		899088						
ANR	899207	Symbol	ad		899088						
ANR	899208	Symbol	NULL		899088						
ANR	899209	Symbol	incode		899088						
ANR	899210	Symbol	ATTR_HOLD_REASON		899088						
ANR	899211	Symbol	multi		899088						
ANR	899212	Symbol	ATTR_HOLD_REASON_CODE		899088						
ANR	899213	Function	JobReleasedEvent :: JobReleasedEvent	3383:0:74350:74443							
ANR	899214	FunctionDef	JobReleasedEvent :: JobReleasedEvent ()		899213	0					
ANR	899215	CompoundStatement		3384:0:74391:74443	899213	0					
ANR	899216	ExpressionStatement	eventNumber = ULOG_JOB_RELEASED	3385:1:74394:74425	899213	0	True				
ANR	899217	AssignmentExpression	eventNumber = ULOG_JOB_RELEASED		899213	0		=			
ANR	899218	Identifier	eventNumber		899213	0					
ANR	899219	Identifier	ULOG_JOB_RELEASED		899213	1					
ANR	899220	ExpressionStatement	reason = NULL	3386:1:74428:74441	899213	1	True				
ANR	899221	AssignmentExpression	reason = NULL		899213	0		=			
ANR	899222	Identifier	reason		899213	0					
ANR	899223	Identifier	NULL		899213	1					
ANR	899224	Identifier	JobReleasedEvent :: JobReleasedEvent		899213	1					
ANR	899225	ParameterList			899213	2					
ANR	899226	CFGEntryNode	ENTRY		899213		True				
ANR	899227	CFGExitNode	EXIT		899213		True				
ANR	899228	Symbol	reason		899213						
ANR	899229	Symbol	NULL		899213						
ANR	899230	Symbol	eventNumber		899213						
ANR	899231	Symbol	ULOG_JOB_RELEASED		899213						
ANR	899232	Function	JobReleasedEvent :: ~JobReleasedEvent	3390:0:74447:74509							
ANR	899233	FunctionDef	JobReleasedEvent :: ~JobReleasedEvent ()		899232	0					
ANR	899234	CompoundStatement		3391:0:74489:74509	899232	0					
ANR	899235	Statement	delete	3392:1:74492:74497	899232	0	True				
ANR	899236	Statement	[	3392:7:74498:74498	899232	1	True				
ANR	899237	Statement	]	3392:8:74499:74499	899232	2	True				
ANR	899238	ExpressionStatement	reason	3392:10:74501:74507	899232	3	True				
ANR	899239	Identifier	reason		899232	0					
ANR	899240	Identifier	JobReleasedEvent :: ~JobReleasedEvent		899232	1					
ANR	899241	ParameterList			899232	2					
ANR	899242	CFGEntryNode	ENTRY		899232		True				
ANR	899243	CFGExitNode	EXIT		899232		True				
ANR	899244	Function	JobReleasedEvent :: setReason	3396:0:74513:74766							
ANR	899245	FunctionDef	JobReleasedEvent :: setReason (const char * reason_str)		899244	0					
ANR	899246	CompoundStatement		3398:0:74572:74766	899244	0					
ANR	899247	Statement	delete	3399:4:74578:74583	899244	0	True				
ANR	899248	Statement	[	3399:10:74584:74584	899244	1	True				
ANR	899249	Statement	]	3399:11:74585:74585	899244	2	True				
ANR	899250	ExpressionStatement	reason	3399:13:74587:74593	899244	3	True				
ANR	899251	Identifier	reason		899244	0					
ANR	899252	ExpressionStatement	reason = NULL	3400:4:74599:74612	899244	4	True				
ANR	899253	AssignmentExpression	reason = NULL		899244	0		=			
ANR	899254	Identifier	reason		899244	0					
ANR	899255	Identifier	NULL		899244	1					
ANR	899256	IfStatement	if ( reason_str )		899244	5					
ANR	899257	Condition	reason_str	3401:8:74622:74631	899244	0	True				
ANR	899258	Identifier	reason_str		899244	0					
ANR	899259	CompoundStatement		4:21:62:62	899244	1					
ANR	899260	ExpressionStatement	reason = strnewp ( reason_str )	3402:8:74645:74675	899244	0	True				
ANR	899261	AssignmentExpression	reason = strnewp ( reason_str )		899244	0		=			
ANR	899262	Identifier	reason		899244	0					
ANR	899263	CallExpression	strnewp ( reason_str )		899244	1					
ANR	899264	Callee	strnewp		899244	0					
ANR	899265	Identifier	strnewp		899244	0					
ANR	899266	ArgumentList	reason_str		899244	1					
ANR	899267	Argument	reason_str		899244	0					
ANR	899268	Identifier	reason_str		899244	0					
ANR	899269	IfStatement	if ( ! reason )		899244	1					
ANR	899270	Condition	! reason	3403:12:74689:74695	899244	0	True				
ANR	899271	UnaryOperationExpression	! reason		899244	0					
ANR	899272	UnaryOperator	!		899244	0					
ANR	899273	Identifier	reason		899244	1					
ANR	899274	CompoundStatement		6:22:126:126	899244	1					
ANR	899275	ExpressionStatement	"EXCEPT ( ""ERROR: out of memory!\\n"" )"	3404:12:74713:74748	899244	0	True				
ANR	899276	CallExpression	"EXCEPT ( ""ERROR: out of memory!\\n"" )"		899244	0					
ANR	899277	Callee	EXCEPT		899244	0					
ANR	899278	Identifier	EXCEPT		899244	0					
ANR	899279	ArgumentList	"""ERROR: out of memory!\\n"""		899244	1					
ANR	899280	Argument	"""ERROR: out of memory!\\n"""		899244	0					
ANR	899281	PrimaryExpression	"""ERROR: out of memory!\\n"""		899244	0					
ANR	899282	ReturnType	void		899244	1					
ANR	899283	Identifier	JobReleasedEvent :: setReason		899244	2					
ANR	899284	ParameterList	const char * reason_str		899244	3					
ANR	899285	Parameter	const char * reason_str	3397:29:74547:74568	899244	0	True				
ANR	899286	ParameterType	const char *		899244	0					
ANR	899287	Identifier	reason_str		899244	1					
ANR	899288	CFGEntryNode	ENTRY		899244		True				
ANR	899289	CFGExitNode	EXIT		899244		True				
ANR	899290	Symbol	reason_str		899244						
ANR	899291	Symbol	reason		899244						
ANR	899292	Symbol	NULL		899244						
ANR	899293	Symbol	strnewp		899244						
ANR	899294	Function	JobReleasedEvent :: getReason	3410:0:74770:74842							
ANR	899295	FunctionDef	JobReleasedEvent :: getReason ()		899294	0					
ANR	899296	CompoundStatement		3412:0:74824:74842	899294	0					
ANR	899297	ReturnStatement	return reason ;	3413:1:74827:74840	899294	0	True				
ANR	899298	Identifier	reason		899294	0					
ANR	899299	ReturnType	const char *		899294	1					
ANR	899300	Identifier	JobReleasedEvent :: getReason		899294	2					
ANR	899301	ParameterList			899294	3					
ANR	899302	CFGEntryNode	ENTRY		899294		True				
ANR	899303	CFGExitNode	EXIT		899294		True				
ANR	899304	Symbol	reason		899294						
ANR	899305	Function	JobReleasedEvent :: readEvent	3417:0:74846:75686							
ANR	899306	FunctionDef	JobReleasedEvent :: readEvent (FILE * file)		899305	0					
ANR	899307	CompoundStatement		3419:0:74892:75686	899305	0					
ANR	899308	IfStatement	"if ( fscanf ( file , ""Job was released.\\n"" ) == EOF )"		899305	0					
ANR	899309	Condition	"fscanf ( file , ""Job was released.\\n"" ) == EOF"	3420:5:74899:74940	899305	0	True				
ANR	899310	EqualityExpression	"fscanf ( file , ""Job was released.\\n"" ) == EOF"		899305	0		==			
ANR	899311	CallExpression	"fscanf ( file , ""Job was released.\\n"" )"		899305	0					
ANR	899312	Callee	fscanf		899305	0					
ANR	899313	Identifier	fscanf		899305	0					
ANR	899314	ArgumentList	file		899305	1					
ANR	899315	Argument	file		899305	0					
ANR	899316	Identifier	file		899305	0					
ANR	899317	Argument	"""Job was released.\\n"""		899305	1					
ANR	899318	PrimaryExpression	"""Job was released.\\n"""		899305	0					
ANR	899319	Identifier	EOF		899305	1					
ANR	899320	CompoundStatement		2:50:51:51	899305	1					
ANR	899321	ReturnStatement	return 0 ;	3421:2:74948:74956	899305	0	True				
ANR	899322	PrimaryExpression	0		899305	0					
ANR	899323	IdentifierDeclStatement	fpos_t filep ;	3425:1:75069:75081	899305	1	True				
ANR	899324	IdentifierDecl	filep		899305	0					
ANR	899325	IdentifierDeclType	fpos_t		899305	0					
ANR	899326	Identifier	filep		899305	1					
ANR	899327	ExpressionStatement	"fgetpos ( file , & filep )"	3426:1:75084:75107	899305	2	True				
ANR	899328	CallExpression	"fgetpos ( file , & filep )"		899305	0					
ANR	899329	Callee	fgetpos		899305	0					
ANR	899330	Identifier	fgetpos		899305	0					
ANR	899331	ArgumentList	file		899305	1					
ANR	899332	Argument	file		899305	0					
ANR	899333	Identifier	file		899305	0					
ANR	899334	Argument	& filep		899305	1					
ANR	899335	UnaryOperationExpression	& filep		899305	0					
ANR	899336	UnaryOperator	&		899305	0					
ANR	899337	Identifier	filep		899305	1					
ANR	899338	IdentifierDeclStatement	char reason_buf [ BUFSIZ ] ;	3427:1:75110:75133	899305	3	True				
ANR	899339	IdentifierDecl	reason_buf [ BUFSIZ ]		899305	0					
ANR	899340	IdentifierDeclType	char [ BUFSIZ ]		899305	0					
ANR	899341	Identifier	reason_buf		899305	1					
ANR	899342	Identifier	BUFSIZ		899305	2					
ANR	899343	IfStatement	"if ( ! fgets ( reason_buf , BUFSIZ , file ) || strcmp ( reason_buf , ""...\\n"" ) == 0 )"		899305	4					
ANR	899344	Condition	"! fgets ( reason_buf , BUFSIZ , file ) || strcmp ( reason_buf , ""...\\n"" ) == 0"	3428:5:75140:75217	899305	0	True				
ANR	899345	OrExpression	"! fgets ( reason_buf , BUFSIZ , file ) || strcmp ( reason_buf , ""...\\n"" ) == 0"		899305	0		||			
ANR	899346	UnaryOperationExpression	"! fgets ( reason_buf , BUFSIZ , file )"		899305	0					
ANR	899347	UnaryOperator	!		899305	0					
ANR	899348	CallExpression	"fgets ( reason_buf , BUFSIZ , file )"		899305	1					
ANR	899349	Callee	fgets		899305	0					
ANR	899350	Identifier	fgets		899305	0					
ANR	899351	ArgumentList	reason_buf		899305	1					
ANR	899352	Argument	reason_buf		899305	0					
ANR	899353	Identifier	reason_buf		899305	0					
ANR	899354	Argument	BUFSIZ		899305	1					
ANR	899355	Identifier	BUFSIZ		899305	0					
ANR	899356	Argument	file		899305	2					
ANR	899357	Identifier	file		899305	0					
ANR	899358	EqualityExpression	"strcmp ( reason_buf , ""...\\n"" ) == 0"		899305	1		==			
ANR	899359	CallExpression	"strcmp ( reason_buf , ""...\\n"" )"		899305	0					
ANR	899360	Callee	strcmp		899305	0					
ANR	899361	Identifier	strcmp		899305	0					
ANR	899362	ArgumentList	reason_buf		899305	1					
ANR	899363	Argument	reason_buf		899305	0					
ANR	899364	Identifier	reason_buf		899305	0					
ANR	899365	Argument	"""...\\n"""		899305	1					
ANR	899366	PrimaryExpression	"""...\\n"""		899305	0					
ANR	899367	PrimaryExpression	0		899305	1					
ANR	899368	CompoundStatement		11:43:328:328	899305	1					
ANR	899369	ExpressionStatement	setReason ( NULL )	3430:2:75225:75242	899305	0	True				
ANR	899370	CallExpression	setReason ( NULL )		899305	0					
ANR	899371	Callee	setReason		899305	0					
ANR	899372	Identifier	setReason		899305	0					
ANR	899373	ArgumentList	NULL		899305	1					
ANR	899374	Argument	NULL		899305	0					
ANR	899375	Identifier	NULL		899305	0					
ANR	899376	ExpressionStatement	"fsetpos ( file , & filep )"	3431:2:75246:75269	899305	1	True				
ANR	899377	CallExpression	"fsetpos ( file , & filep )"		899305	0					
ANR	899378	Callee	fsetpos		899305	0					
ANR	899379	Identifier	fsetpos		899305	0					
ANR	899380	ArgumentList	file		899305	1					
ANR	899381	Argument	file		899305	0					
ANR	899382	Identifier	file		899305	0					
ANR	899383	Argument	& filep		899305	1					
ANR	899384	UnaryOperationExpression	& filep		899305	0					
ANR	899385	UnaryOperator	&		899305	0					
ANR	899386	Identifier	filep		899305	1					
ANR	899387	ReturnStatement	return 1 ;	3432:2:75273:75281	899305	2	True				
ANR	899388	PrimaryExpression	1		899305	0					
ANR	899389	ExpressionStatement	chomp ( reason_buf )	3435:1:75315:75334	899305	5	True				
ANR	899390	CallExpression	chomp ( reason_buf )		899305	0					
ANR	899391	Callee	chomp		899305	0					
ANR	899392	Identifier	chomp		899305	0					
ANR	899393	ArgumentList	reason_buf		899305	1					
ANR	899394	Argument	reason_buf		899305	0					
ANR	899395	Identifier	reason_buf		899305	0					
ANR	899396	IfStatement	if ( reason_buf [ 0 ] == '\\t' && reason_buf [ 1 ] )		899305	6					
ANR	899397	Condition	reason_buf [ 0 ] == '\\t' && reason_buf [ 1 ]	3439:5:75547:75584	899305	0	True				
ANR	899398	AndExpression	reason_buf [ 0 ] == '\\t' && reason_buf [ 1 ]		899305	0		&&			
ANR	899399	EqualityExpression	reason_buf [ 0 ] == '\\t'		899305	0		==			
ANR	899400	ArrayIndexing	reason_buf [ 0 ]		899305	0					
ANR	899401	Identifier	reason_buf		899305	0					
ANR	899402	PrimaryExpression	0		899305	1					
ANR	899403	PrimaryExpression	'\\t'		899305	1					
ANR	899404	ArrayIndexing	reason_buf [ 1 ]		899305	1					
ANR	899405	Identifier	reason_buf		899305	0					
ANR	899406	PrimaryExpression	1		899305	1					
ANR	899407	CompoundStatement		21:46:695:695	899305	1					
ANR	899408	ExpressionStatement	reason = strnewp ( & reason_buf [ 1 ] )	3440:2:75592:75626	899305	0	True				
ANR	899409	AssignmentExpression	reason = strnewp ( & reason_buf [ 1 ] )		899305	0		=			
ANR	899410	Identifier	reason		899305	0					
ANR	899411	CallExpression	strnewp ( & reason_buf [ 1 ] )		899305	1					
ANR	899412	Callee	strnewp		899305	0					
ANR	899413	Identifier	strnewp		899305	0					
ANR	899414	ArgumentList	& reason_buf [ 1 ]		899305	1					
ANR	899415	Argument	& reason_buf [ 1 ]		899305	0					
ANR	899416	UnaryOperationExpression	& reason_buf [ 1 ]		899305	0					
ANR	899417	UnaryOperator	&		899305	0					
ANR	899418	ArrayIndexing	reason_buf [ 1 ]		899305	1					
ANR	899419	Identifier	reason_buf		899305	0					
ANR	899420	PrimaryExpression	1		899305	1					
ANR	899421	ElseStatement	else		899305	0					
ANR	899422	CompoundStatement		23:8:743:743	899305	0					
ANR	899423	ExpressionStatement	reason = strnewp ( reason_buf )	3442:2:75640:75670	899305	0	True				
ANR	899424	AssignmentExpression	reason = strnewp ( reason_buf )		899305	0		=			
ANR	899425	Identifier	reason		899305	0					
ANR	899426	CallExpression	strnewp ( reason_buf )		899305	1					
ANR	899427	Callee	strnewp		899305	0					
ANR	899428	Identifier	strnewp		899305	0					
ANR	899429	ArgumentList	reason_buf		899305	1					
ANR	899430	Argument	reason_buf		899305	0					
ANR	899431	Identifier	reason_buf		899305	0					
ANR	899432	ReturnStatement	return 1 ;	3444:1:75676:75684	899305	7	True				
ANR	899433	PrimaryExpression	1		899305	0					
ANR	899434	ReturnType	int		899305	1					
ANR	899435	Identifier	JobReleasedEvent :: readEvent		899305	2					
ANR	899436	ParameterList	FILE * file		899305	3					
ANR	899437	Parameter	FILE * file	3418:29:74879:74888	899305	0	True				
ANR	899438	ParameterType	FILE *		899305	0					
ANR	899439	Identifier	file		899305	1					
ANR	899440	CFGEntryNode	ENTRY		899305		True				
ANR	899441	CFGExitNode	EXIT		899305		True				
ANR	899442	Symbol	strcmp		899305						
ANR	899443	Symbol	reason		899305						
ANR	899444	Symbol	NULL		899305						
ANR	899445	Symbol	& filep		899305						
ANR	899446	Symbol	fgets		899305						
ANR	899447	Symbol	reason_buf		899305						
ANR	899448	Symbol	fscanf		899305						
ANR	899449	Symbol	file		899305						
ANR	899450	Symbol	strnewp		899305						
ANR	899451	Symbol	filep		899305						
ANR	899452	Symbol	* reason_buf		899305						
ANR	899453	Symbol	EOF		899305						
ANR	899454	Symbol	BUFSIZ		899305						
ANR	899455	Function	JobReleasedEvent :: writeEvent	3448:0:75690:76708							
ANR	899456	FunctionDef	JobReleasedEvent :: writeEvent (FILE * file)		899455	0					
ANR	899457	CompoundStatement		3450:0:75737:76708	899455	0					
ANR	899458	IdentifierDeclStatement	char messagestr [ 512 ] ;	3451:1:75740:75760	899455	0	True				
ANR	899459	IdentifierDecl	messagestr [ 512 ]		899455	0					
ANR	899460	IdentifierDeclType	char [ 512 ]		899455	0					
ANR	899461	Identifier	messagestr		899455	1					
ANR	899462	PrimaryExpression	512		899455	2					
ANR	899463	IdentifierDeclStatement	ClassAd tmpCl1 ;	3452:1:75763:75777	899455	1	True				
ANR	899464	IdentifierDecl	tmpCl1		899455	0					
ANR	899465	IdentifierDeclType	ClassAd		899455	0					
ANR	899466	Identifier	tmpCl1		899455	1					
ANR	899467	IdentifierDeclStatement	"MyString tmp = """" ;"	3454:1:75811:75828	899455	2	True				
ANR	899468	IdentifierDecl	"tmp = """""		899455	0					
ANR	899469	IdentifierDeclType	MyString		899455	0					
ANR	899470	Identifier	tmp		899455	1					
ANR	899471	AssignmentExpression	"tmp = """""		899455	2		=			
ANR	899472	Identifier	tmp		899455	0					
ANR	899473	PrimaryExpression	""""""		899455	1					
ANR	899474	IfStatement	if ( reason )		899455	3					
ANR	899475	Condition	reason	3456:5:75836:75841	899455	0	True				
ANR	899476	Identifier	reason		899455	0					
ANR	899477	ExpressionStatement	"snprintf ( messagestr , 512 , ""Job was released: %s"" , reason )"	3457:2:75846:75903	899455	1	True				
ANR	899478	CallExpression	"snprintf ( messagestr , 512 , ""Job was released: %s"" , reason )"		899455	0					
ANR	899479	Callee	snprintf		899455	0					
ANR	899480	Identifier	snprintf		899455	0					
ANR	899481	ArgumentList	messagestr		899455	1					
ANR	899482	Argument	messagestr		899455	0					
ANR	899483	Identifier	messagestr		899455	0					
ANR	899484	Argument	512		899455	1					
ANR	899485	PrimaryExpression	512		899455	0					
ANR	899486	Argument	"""Job was released: %s"""		899455	2					
ANR	899487	PrimaryExpression	"""Job was released: %s"""		899455	0					
ANR	899488	Argument	reason		899455	3					
ANR	899489	Identifier	reason		899455	0					
ANR	899490	ElseStatement	else		899455	0					
ANR	899491	ExpressionStatement	"sprintf ( messagestr , ""Job was released: reason unspecified"" )"	3459:2:75913:75972	899455	0	True				
ANR	899492	CallExpression	"sprintf ( messagestr , ""Job was released: reason unspecified"" )"		899455	0					
ANR	899493	Callee	sprintf		899455	0					
ANR	899494	Identifier	sprintf		899455	0					
ANR	899495	ArgumentList	messagestr		899455	1					
ANR	899496	Argument	messagestr		899455	0					
ANR	899497	Identifier	messagestr		899455	0					
ANR	899498	Argument	"""Job was released: reason unspecified"""		899455	1					
ANR	899499	PrimaryExpression	"""Job was released: reason unspecified"""		899455	0					
ANR	899500	ExpressionStatement	scheddname = getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )	3461:1:75976:76028	899455	4	True				
ANR	899501	AssignmentExpression	scheddname = getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )		899455	0		=			
ANR	899502	Identifier	scheddname		899455	0					
ANR	899503	CallExpression	getenv ( EnvGetName ( ENV_SCHEDD_NAME ) )		899455	1					
ANR	899504	Callee	getenv		899455	0					
ANR	899505	Identifier	getenv		899455	0					
ANR	899506	ArgumentList	EnvGetName ( ENV_SCHEDD_NAME )		899455	1					
ANR	899507	Argument	EnvGetName ( ENV_SCHEDD_NAME )		899455	0					
ANR	899508	CallExpression	EnvGetName ( ENV_SCHEDD_NAME )		899455	0					
ANR	899509	Callee	EnvGetName		899455	0					
ANR	899510	Identifier	EnvGetName		899455	0					
ANR	899511	ArgumentList	ENV_SCHEDD_NAME		899455	1					
ANR	899512	Argument	ENV_SCHEDD_NAME		899455	0					
ANR	899513	Identifier	ENV_SCHEDD_NAME		899455	0					
ANR	899514	ExpressionStatement	insertCommonIdentifiers ( tmpCl1 )	3464:1:76080:76111	899455	5	True				
ANR	899515	CallExpression	insertCommonIdentifiers ( tmpCl1 )		899455	0					
ANR	899516	Callee	insertCommonIdentifiers		899455	0					
ANR	899517	Identifier	insertCommonIdentifiers		899455	0					
ANR	899518	ArgumentList	tmpCl1		899455	1					
ANR	899519	Argument	tmpCl1		899455	0					
ANR	899520	Identifier	tmpCl1		899455	0					
ANR	899521	ExpressionStatement	"tmpCl1 . Assign ( ""eventtype"" , ULOG_JOB_RELEASED )"	3466:1:76115:76160	899455	6	True				
ANR	899522	CallExpression	"tmpCl1 . Assign ( ""eventtype"" , ULOG_JOB_RELEASED )"		899455	0					
ANR	899523	Callee	tmpCl1 . Assign		899455	0					
ANR	899524	MemberAccess	tmpCl1 . Assign		899455	0					
ANR	899525	Identifier	tmpCl1		899455	0					
ANR	899526	Identifier	Assign		899455	1					
ANR	899527	ArgumentList	"""eventtype"""		899455	1					
ANR	899528	Argument	"""eventtype"""		899455	0					
ANR	899529	PrimaryExpression	"""eventtype"""		899455	0					
ANR	899530	Argument	ULOG_JOB_RELEASED		899455	1					
ANR	899531	Identifier	ULOG_JOB_RELEASED		899455	0					
ANR	899532	ExpressionStatement	"tmpCl1 . Assign ( ""eventtime"" , ( int ) eventclock )"	3467:1:76163:76206	899455	7	True				
ANR	899533	CallExpression	"tmpCl1 . Assign ( ""eventtime"" , ( int ) eventclock )"		899455	0					
ANR	899534	Callee	tmpCl1 . Assign		899455	0					
ANR	899535	MemberAccess	tmpCl1 . Assign		899455	0					
ANR	899536	Identifier	tmpCl1		899455	0					
ANR	899537	Identifier	Assign		899455	1					
ANR	899538	ArgumentList	"""eventtime"""		899455	1					
ANR	899539	Argument	"""eventtime"""		899455	0					
ANR	899540	PrimaryExpression	"""eventtime"""		899455	0					
ANR	899541	Argument	( int ) eventclock		899455	1					
ANR	899542	CastExpression	( int ) eventclock		899455	0					
ANR	899543	CastTarget	int		899455	0					
ANR	899544	Identifier	eventclock		899455	1					
ANR	899545	ExpressionStatement	"tmpCl1 . Assign ( ""description"" , messagestr )"	3468:1:76209:76249	899455	8	True				
ANR	899546	CallExpression	"tmpCl1 . Assign ( ""description"" , messagestr )"		899455	0					
ANR	899547	Callee	tmpCl1 . Assign		899455	0					
ANR	899548	MemberAccess	tmpCl1 . Assign		899455	0					
ANR	899549	Identifier	tmpCl1		899455	0					
ANR	899550	Identifier	Assign		899455	1					
ANR	899551	ArgumentList	"""description"""		899455	1					
ANR	899552	Argument	"""description"""		899455	0					
ANR	899553	PrimaryExpression	"""description"""		899455	0					
ANR	899554	Argument	messagestr		899455	1					
ANR	899555	Identifier	messagestr		899455	0					
ANR	899556	IfStatement	if ( FILEObj )		899455	9					
ANR	899557	Condition	FILEObj	3470:5:76257:76263	899455	0	True				
ANR	899558	Identifier	FILEObj		899455	0					
ANR	899559	CompoundStatement		21:14:528:528	899455	1					
ANR	899560	IfStatement	"if ( FILEObj -> file_newEvent ( ""Events"" , & tmpCl1 ) == QUILL_FAILURE )"		899455	0					
ANR	899561	Condition	"FILEObj -> file_newEvent ( ""Events"" , & tmpCl1 ) == QUILL_FAILURE"	3471:6:76274:76331	899455	0	True				
ANR	899562	EqualityExpression	"FILEObj -> file_newEvent ( ""Events"" , & tmpCl1 ) == QUILL_FAILURE"		899455	0		==			
ANR	899563	CallExpression	"FILEObj -> file_newEvent ( ""Events"" , & tmpCl1 )"		899455	0					
ANR	899564	Callee	FILEObj -> file_newEvent		899455	0					
ANR	899565	PtrMemberAccess	FILEObj -> file_newEvent		899455	0					
ANR	899566	Identifier	FILEObj		899455	0					
ANR	899567	Identifier	file_newEvent		899455	1					
ANR	899568	ArgumentList	"""Events"""		899455	1					
ANR	899569	Argument	"""Events"""		899455	0					
ANR	899570	PrimaryExpression	"""Events"""		899455	0					
ANR	899571	Argument	& tmpCl1		899455	1					
ANR	899572	UnaryOperationExpression	& tmpCl1		899455	0					
ANR	899573	UnaryOperator	&		899455	0					
ANR	899574	Identifier	tmpCl1		899455	1					
ANR	899575	Identifier	QUILL_FAILURE		899455	1					
ANR	899576	CompoundStatement		22:66:596:596	899455	1					
ANR	899577	ExpressionStatement	"dprintf ( D_ALWAYS , ""Logging Event 11--- Error\\n"" )"	3472:3:76339:76387	899455	0	True				
ANR	899578	CallExpression	"dprintf ( D_ALWAYS , ""Logging Event 11--- Error\\n"" )"		899455	0					
ANR	899579	Callee	dprintf		899455	0					
ANR	899580	Identifier	dprintf		899455	0					
ANR	899581	ArgumentList	D_ALWAYS		899455	1					
ANR	899582	Argument	D_ALWAYS		899455	0					
ANR	899583	Identifier	D_ALWAYS		899455	0					
ANR	899584	Argument	"""Logging Event 11--- Error\\n"""		899455	1					
ANR	899585	PrimaryExpression	"""Logging Event 11--- Error\\n"""		899455	0					
ANR	899586	ReturnStatement	return 0 ;	3473:3:76392:76400	899455	1	True				
ANR	899587	PrimaryExpression	0		899455	0					
ANR	899588	IfStatement	"if ( fprintf ( file , ""Job was released.\\n"" ) < 0 )"		899455	10					
ANR	899589	Condition	"fprintf ( file , ""Job was released.\\n"" ) < 0"	3477:5:76441:76480	899455	0	True				
ANR	899590	RelationalExpression	"fprintf ( file , ""Job was released.\\n"" ) < 0"		899455	0		<			
ANR	899591	CallExpression	"fprintf ( file , ""Job was released.\\n"" )"		899455	0					
ANR	899592	Callee	fprintf		899455	0					
ANR	899593	Identifier	fprintf		899455	0					
ANR	899594	ArgumentList	file		899455	1					
ANR	899595	Argument	file		899455	0					
ANR	899596	Identifier	file		899455	0					
ANR	899597	Argument	"""Job was released.\\n"""		899455	1					
ANR	899598	PrimaryExpression	"""Job was released.\\n"""		899455	0					
ANR	899599	PrimaryExpression	0		899455	1					
ANR	899600	CompoundStatement		28:48:746:746	899455	1					
ANR	899601	ReturnStatement	return 0 ;	3478:2:76488:76496	899455	0	True				
ANR	899602	PrimaryExpression	0		899455	0					
ANR	899603	IfStatement	if ( reason )		899455	11					
ANR	899604	Condition	reason	3480:5:76506:76511	899455	0	True				
ANR	899605	Identifier	reason		899455	0					
ANR	899606	CompoundStatement		31:14:777:777	899455	1					
ANR	899607	IfStatement	"if ( fprintf ( file , ""\\t%s\\n"" , reason ) < 0 )"		899455	0					
ANR	899608	Condition	"fprintf ( file , ""\\t%s\\n"" , reason ) < 0"	3481:6:76523:76557	899455	0	True				
ANR	899609	RelationalExpression	"fprintf ( file , ""\\t%s\\n"" , reason ) < 0"		899455	0		<			
ANR	899610	CallExpression	"fprintf ( file , ""\\t%s\\n"" , reason )"		899455	0					
ANR	899611	Callee	fprintf		899455	0					
ANR	899612	Identifier	fprintf		899455	0					
ANR	899613	ArgumentList	file		899455	1					
ANR	899614	Argument	file		899455	0					
ANR	899615	Identifier	file		899455	0					
ANR	899616	Argument	"""\\t%s\\n"""		899455	1					
ANR	899617	PrimaryExpression	"""\\t%s\\n"""		899455	0					
ANR	899618	Argument	reason		899455	2					
ANR	899619	Identifier	reason		899455	0					
ANR	899620	PrimaryExpression	0		899455	1					
ANR	899621	CompoundStatement		32:44:823:823	899455	1					
ANR	899622	ReturnStatement	return 0 ;	3482:3:76566:76574	899455	0	True				
ANR	899623	PrimaryExpression	0		899455	0					
ANR	899624	ElseStatement	else		899455	0					
ANR	899625	CompoundStatement		34:9:847:847	899455	0					
ANR	899626	ReturnStatement	return 1 ;	3484:3:76590:76598	899455	0	True				
ANR	899627	PrimaryExpression	1		899455	0					
ANR	899628	ReturnStatement	return 1 ;	3489:1:76698:76706	899455	12	True				
ANR	899629	PrimaryExpression	1		899455	0					
ANR	899630	ReturnType	int		899455	1					
ANR	899631	Identifier	JobReleasedEvent :: writeEvent		899455	2					
ANR	899632	ParameterList	FILE * file		899455	3					
ANR	899633	Parameter	FILE * file	3449:30:75724:75733	899455	0	True				
ANR	899634	ParameterType	FILE *		899455	0					
ANR	899635	Identifier	file		899455	1					
ANR	899636	CFGEntryNode	ENTRY		899455		True				
ANR	899637	CFGExitNode	EXIT		899455		True				
ANR	899638	Symbol	reason		899455						
ANR	899639	Symbol	scheddname		899455						
ANR	899640	Symbol	D_ALWAYS		899455						
ANR	899641	Symbol	ENV_SCHEDD_NAME		899455						
ANR	899642	Symbol	EnvGetName		899455						
ANR	899643	Symbol	QUILL_FAILURE		899455						
ANR	899644	Symbol	fprintf		899455						
ANR	899645	Symbol	FILEObj		899455						
ANR	899646	Symbol	* FILEObj		899455						
ANR	899647	Symbol	& tmpCl1		899455						
ANR	899648	Symbol	file		899455						
ANR	899649	Symbol	messagestr		899455						
ANR	899650	Symbol	eventclock		899455						
ANR	899651	Symbol	tmp		899455						
ANR	899652	Symbol	tmpCl1		899455						
ANR	899653	Symbol	FILEObj -> file_newEvent		899455						
ANR	899654	Symbol	ULOG_JOB_RELEASED		899455						
ANR	899655	Symbol	getenv		899455						
ANR	899656	Function	JobReleasedEvent :: toClassAd	3492:0:76711:77026							
ANR	899657	FunctionDef	JobReleasedEvent :: toClassAd ()		899656	0					
ANR	899658	CompoundStatement		3494:0:76754:77026	899656	0					
ANR	899659	IdentifierDeclStatement	ClassAd * myad = ULogEvent :: toClassAd ( ) ;	3495:1:76757:76795	899656	0	True				
ANR	899660	IdentifierDecl	* myad = ULogEvent :: toClassAd ( )		899656	0					
ANR	899661	IdentifierDeclType	ClassAd *		899656	0					
ANR	899662	Identifier	myad		899656	1					
ANR	899663	AssignmentExpression	* myad = ULogEvent :: toClassAd ( )		899656	2		=			
ANR	899664	Identifier	myad		899656	0					
ANR	899665	CallExpression	ULogEvent :: toClassAd ( )		899656	1					
ANR	899666	Callee	ULogEvent :: toClassAd		899656	0					
ANR	899667	Identifier	ULogEvent :: toClassAd		899656	0					
ANR	899668	ArgumentList			899656	1					
ANR	899669	IfStatement	if ( ! myad )		899656	1					
ANR	899670	Condition	! myad	3496:5:76802:76806	899656	0	True				
ANR	899671	UnaryOperationExpression	! myad		899656	0					
ANR	899672	UnaryOperator	!		899656	0					
ANR	899673	Identifier	myad		899656	1					
ANR	899674	ReturnStatement	return NULL ;	3496:13:76810:76821	899656	1	True				
ANR	899675	Identifier	NULL		899656	0					
ANR	899676	IdentifierDeclStatement	const char * release_reason = getReason ( ) ;	3498:1:76825:76865	899656	2	True				
ANR	899677	IdentifierDecl	* release_reason = getReason ( )		899656	0					
ANR	899678	IdentifierDeclType	const char *		899656	0					
ANR	899679	Identifier	release_reason		899656	1					
ANR	899680	AssignmentExpression	* release_reason = getReason ( )		899656	2		=			
ANR	899681	Identifier	release_reason		899656	0					
ANR	899682	CallExpression	getReason ( )		899656	1					
ANR	899683	Callee	getReason		899656	0					
ANR	899684	Identifier	getReason		899656	0					
ANR	899685	ArgumentList			899656	1					
ANR	899686	IfStatement	if ( release_reason )		899656	3					
ANR	899687	Condition	release_reason	3499:5:76872:76885	899656	0	True				
ANR	899688	Identifier	release_reason		899656	0					
ANR	899689	CompoundStatement		7:2:138:151	899656	1					
ANR	899690	IdentifierDeclStatement	MyString buf2 ;	3500:2:76893:76906	899656	0	True				
ANR	899691	IdentifierDecl	buf2		899656	0					
ANR	899692	IdentifierDeclType	MyString		899656	0					
ANR	899693	Identifier	buf2		899656	1					
ANR	899694	ExpressionStatement	"buf2 . sprintf ( ""Reason = \\""%s\\"""" , release_reason )"	3501:2:76910:76957	899656	1	True				
ANR	899695	CallExpression	"buf2 . sprintf ( ""Reason = \\""%s\\"""" , release_reason )"		899656	0					
ANR	899696	Callee	buf2 . sprintf		899656	0					
ANR	899697	MemberAccess	buf2 . sprintf		899656	0					
ANR	899698	Identifier	buf2		899656	0					
ANR	899699	Identifier	sprintf		899656	1					
ANR	899700	ArgumentList	"""Reason = \\""%s\\"""""		899656	1					
ANR	899701	Argument	"""Reason = \\""%s\\"""""		899656	0					
ANR	899702	PrimaryExpression	"""Reason = \\""%s\\"""""		899656	0					
ANR	899703	Argument	release_reason		899656	1					
ANR	899704	Identifier	release_reason		899656	0					
ANR	899705	IfStatement	if ( ! myad -> Insert ( buf2 . Value ( ) ) )		899656	2					
ANR	899706	Condition	! myad -> Insert ( buf2 . Value ( ) )	3502:6:76965:76991	899656	0	True				
ANR	899707	UnaryOperationExpression	! myad -> Insert ( buf2 . Value ( ) )		899656	0					
ANR	899708	UnaryOperator	!		899656	0					
ANR	899709	CallExpression	myad -> Insert ( buf2 . Value ( ) )		899656	1					
ANR	899710	Callee	myad -> Insert		899656	0					
ANR	899711	PtrMemberAccess	myad -> Insert		899656	0					
ANR	899712	Identifier	myad		899656	0					
ANR	899713	Identifier	Insert		899656	1					
ANR	899714	ArgumentList	buf2 . Value ( )		899656	1					
ANR	899715	Argument	buf2 . Value ( )		899656	0					
ANR	899716	CallExpression	buf2 . Value ( )		899656	0					
ANR	899717	Callee	buf2 . Value		899656	0					
ANR	899718	MemberAccess	buf2 . Value		899656	0					
ANR	899719	Identifier	buf2		899656	0					
ANR	899720	Identifier	Value		899656	1					
ANR	899721	ArgumentList			899656	1					
ANR	899722	ReturnStatement	return NULL ;	3502:36:76995:77006	899656	1	True				
ANR	899723	Identifier	NULL		899656	0					
ANR	899724	ReturnStatement	return myad ;	3505:1:77013:77024	899656	4	True				
ANR	899725	Identifier	myad		899656	0					
ANR	899726	ReturnType	ClassAd *		899656	1					
ANR	899727	Identifier	JobReleasedEvent :: toClassAd		899656	2					
ANR	899728	ParameterList			899656	3					
ANR	899729	CFGEntryNode	ENTRY		899656		True				
ANR	899730	CFGExitNode	EXIT		899656		True				
ANR	899731	Symbol	buf2		899656						
ANR	899732	Symbol	NULL		899656						
ANR	899733	Symbol	release_reason		899656						
ANR	899734	Symbol	* myad		899656						
ANR	899735	Symbol	getReason		899656						
ANR	899736	Symbol	myad -> Insert		899656						
ANR	899737	Symbol	myad		899656						
ANR	899738	Symbol	ULogEvent :: toClassAd		899656						
ANR	899739	Symbol	buf2 . Value		899656						
ANR	899740	Function	JobReleasedEvent :: initFromClassAd	3508:0:77029:77264							
ANR	899741	FunctionDef	JobReleasedEvent :: initFromClassAd (ClassAd * ad)		899740	0					
ANR	899742	CompoundStatement		3510:0:77081:77264	899740	0					
ANR	899743	ExpressionStatement	ULogEvent :: initFromClassAd ( ad )	3511:1:77084:77114	899740	0	True				
ANR	899744	CallExpression	ULogEvent :: initFromClassAd ( ad )		899740	0					
ANR	899745	Callee	ULogEvent :: initFromClassAd		899740	0					
ANR	899746	Identifier	ULogEvent :: initFromClassAd		899740	0					
ANR	899747	ArgumentList	ad		899740	1					
ANR	899748	Argument	ad		899740	0					
ANR	899749	Identifier	ad		899740	0					
ANR	899750	IfStatement	if ( ! ad )		899740	1					
ANR	899751	Condition	! ad	3513:5:77122:77124	899740	0	True				
ANR	899752	UnaryOperationExpression	! ad		899740	0					
ANR	899753	UnaryOperator	!		899740	0					
ANR	899754	Identifier	ad		899740	1					
ANR	899755	ReturnStatement	return ;	3513:11:77128:77134	899740	1	True				
ANR	899756	IdentifierDeclStatement	char * multi = NULL ;	3515:1:77138:77156	899740	2	True				
ANR	899757	IdentifierDecl	* multi = NULL		899740	0					
ANR	899758	IdentifierDeclType	char *		899740	0					
ANR	899759	Identifier	multi		899740	1					
ANR	899760	AssignmentExpression	* multi = NULL		899740	2		=			
ANR	899761	Identifier	NULL		899740	0					
ANR	899762	Identifier	NULL		899740	1					
ANR	899763	ExpressionStatement	"ad -> LookupString ( ""Reason"" , & multi )"	3516:1:77159:77193	899740	3	True				
ANR	899764	CallExpression	"ad -> LookupString ( ""Reason"" , & multi )"		899740	0					
ANR	899765	Callee	ad -> LookupString		899740	0					
ANR	899766	PtrMemberAccess	ad -> LookupString		899740	0					
ANR	899767	Identifier	ad		899740	0					
ANR	899768	Identifier	LookupString		899740	1					
ANR	899769	ArgumentList	"""Reason"""		899740	1					
ANR	899770	Argument	"""Reason"""		899740	0					
ANR	899771	PrimaryExpression	"""Reason"""		899740	0					
ANR	899772	Argument	& multi		899740	1					
ANR	899773	UnaryOperationExpression	& multi		899740	0					
ANR	899774	UnaryOperator	&		899740	0					
ANR	899775	Identifier	multi		899740	1					
ANR	899776	IfStatement	if ( multi )		899740	4					
ANR	899777	Condition	multi	3517:5:77200:77204	899740	0	True				
ANR	899778	Identifier	multi		899740	0					
ANR	899779	CompoundStatement		8:13:126:126	899740	1					
ANR	899780	ExpressionStatement	setReason ( multi )	3518:2:77212:77228	899740	0	True				
ANR	899781	CallExpression	setReason ( multi )		899740	0					
ANR	899782	Callee	setReason		899740	0					
ANR	899783	Identifier	setReason		899740	0					
ANR	899784	ArgumentList	multi		899740	1					
ANR	899785	Argument	multi		899740	0					
ANR	899786	Identifier	multi		899740	0					
ANR	899787	ExpressionStatement	free ( multi )	3519:2:77232:77243	899740	1	True				
ANR	899788	CallExpression	free ( multi )		899740	0					
ANR	899789	Callee	free		899740	0					
ANR	899790	Identifier	free		899740	0					
ANR	899791	ArgumentList	multi		899740	1					
ANR	899792	Argument	multi		899740	0					
ANR	899793	Identifier	multi		899740	0					
ANR	899794	ExpressionStatement	multi = NULL	3520:2:77247:77259	899740	2	True				
ANR	899795	AssignmentExpression	multi = NULL		899740	0		=			
ANR	899796	Identifier	multi		899740	0					
ANR	899797	Identifier	NULL		899740	1					
ANR	899798	ReturnType	void		899740	1					
ANR	899799	Identifier	JobReleasedEvent :: initFromClassAd		899740	2					
ANR	899800	ParameterList	ClassAd * ad		899740	3					
ANR	899801	Parameter	ClassAd * ad	3509:34:77068:77078	899740	0	True				
ANR	899802	ParameterType	ClassAd *		899740	0					
ANR	899803	Identifier	ad		899740	1					
ANR	899804	CFGEntryNode	ENTRY		899740		True				
ANR	899805	CFGExitNode	EXIT		899740		True				
ANR	899806	Symbol	& multi		899740						
ANR	899807	Symbol	ad		899740						
ANR	899808	Symbol	NULL		899740						
ANR	899809	Symbol	multi		899740						
ANR	899810	DeclStmt									
ANR	899811	Decl							const int	const int	seconds
ANR	899812	DeclStmt									
ANR	899813	Decl							const int	const int	minutes
ANR	899814	DeclStmt									
ANR	899815	Decl							const int	const int	hours
ANR	899816	DeclStmt									
ANR	899817	Decl							const int	const int	days
ANR	899818	Function	ULogEvent :: writeRusage	3529:0:77414:78155							
ANR	899819	FunctionDef	"ULogEvent :: writeRusage (FILE * file , rusage & usage)"		899818	0					
ANR	899820	CompoundStatement		3531:0:77469:78155	899818	0					
ANR	899821	IdentifierDeclStatement	int usr_secs = usage . ru_utime . tv_sec ;	3532:1:77472:77508	899818	0	True				
ANR	899822	IdentifierDecl	usr_secs = usage . ru_utime . tv_sec		899818	0					
ANR	899823	IdentifierDeclType	int		899818	0					
ANR	899824	Identifier	usr_secs		899818	1					
ANR	899825	AssignmentExpression	usr_secs = usage . ru_utime . tv_sec		899818	2		=			
ANR	899826	Identifier	usr_secs		899818	0					
ANR	899827	MemberAccess	usage . ru_utime . tv_sec		899818	1					
ANR	899828	MemberAccess	usage . ru_utime		899818	0					
ANR	899829	Identifier	usage		899818	0					
ANR	899830	Identifier	ru_utime		899818	1					
ANR	899831	Identifier	tv_sec		899818	1					
ANR	899832	IdentifierDeclStatement	int sys_secs = usage . ru_stime . tv_sec ;	3533:1:77511:77547	899818	1	True				
ANR	899833	IdentifierDecl	sys_secs = usage . ru_stime . tv_sec		899818	0					
ANR	899834	IdentifierDeclType	int		899818	0					
ANR	899835	Identifier	sys_secs		899818	1					
ANR	899836	AssignmentExpression	sys_secs = usage . ru_stime . tv_sec		899818	2		=			
ANR	899837	Identifier	sys_secs		899818	0					
ANR	899838	MemberAccess	usage . ru_stime . tv_sec		899818	1					
ANR	899839	MemberAccess	usage . ru_stime		899818	0					
ANR	899840	Identifier	usage		899818	0					
ANR	899841	Identifier	ru_stime		899818	1					
ANR	899842	Identifier	tv_sec		899818	1					
ANR	899843	IdentifierDeclStatement	"int usr_days , usr_hours , usr_minutes ;"	3535:1:77551:77587	899818	2	True				
ANR	899844	IdentifierDecl	usr_days		899818	0					
ANR	899845	IdentifierDeclType	int		899818	0					
ANR	899846	Identifier	usr_days		899818	1					
ANR	899847	IdentifierDecl	usr_hours		899818	1					
ANR	899848	IdentifierDeclType	int		899818	0					
ANR	899849	Identifier	usr_hours		899818	1					
ANR	899850	IdentifierDecl	usr_minutes		899818	2					
ANR	899851	IdentifierDeclType	int		899818	0					
ANR	899852	Identifier	usr_minutes		899818	1					
ANR	899853	IdentifierDeclStatement	"int sys_days , sys_hours , sys_minutes ;"	3536:1:77590:77626	899818	3	True				
ANR	899854	IdentifierDecl	sys_days		899818	0					
ANR	899855	IdentifierDeclType	int		899818	0					
ANR	899856	Identifier	sys_days		899818	1					
ANR	899857	IdentifierDecl	sys_hours		899818	1					
ANR	899858	IdentifierDeclType	int		899818	0					
ANR	899859	Identifier	sys_hours		899818	1					
ANR	899860	IdentifierDecl	sys_minutes		899818	2					
ANR	899861	IdentifierDeclType	int		899818	0					
ANR	899862	Identifier	sys_minutes		899818	1					
ANR	899863	ExpressionStatement	usr_days = usr_secs / days	3538:1:77630:77654	899818	4	True				
ANR	899864	AssignmentExpression	usr_days = usr_secs / days		899818	0		=			
ANR	899865	Identifier	usr_days		899818	0					
ANR	899866	MultiplicativeExpression	usr_secs / days		899818	1		/			
ANR	899867	Identifier	usr_secs		899818	0					
ANR	899868	Identifier	days		899818	1					
ANR	899869	ExpressionStatement	usr_secs %= days	3538:31:77660:77676	899818	5	True				
ANR	899870	AssignmentExpression	usr_secs %= days		899818	0		%=			
ANR	899871	Identifier	usr_secs		899818	0					
ANR	899872	Identifier	days		899818	1					
ANR	899873	ExpressionStatement	usr_hours = usr_secs / hours	3539:1:77679:77705	899818	6	True				
ANR	899874	AssignmentExpression	usr_hours = usr_secs / hours		899818	0		=			
ANR	899875	Identifier	usr_hours		899818	0					
ANR	899876	MultiplicativeExpression	usr_secs / hours		899818	1		/			
ANR	899877	Identifier	usr_secs		899818	0					
ANR	899878	Identifier	hours		899818	1					
ANR	899879	ExpressionStatement	usr_secs %= hours	3539:31:77709:77726	899818	7	True				
ANR	899880	AssignmentExpression	usr_secs %= hours		899818	0		%=			
ANR	899881	Identifier	usr_secs		899818	0					
ANR	899882	Identifier	hours		899818	1					
ANR	899883	ExpressionStatement	usr_minutes = usr_secs / minutes	3540:1:77729:77759	899818	8	True				
ANR	899884	AssignmentExpression	usr_minutes = usr_secs / minutes		899818	0		=			
ANR	899885	Identifier	usr_minutes		899818	0					
ANR	899886	MultiplicativeExpression	usr_secs / minutes		899818	1		/			
ANR	899887	Identifier	usr_secs		899818	0					
ANR	899888	Identifier	minutes		899818	1					
ANR	899889	ExpressionStatement	usr_secs %= minutes	3540:34:77762:77781	899818	9	True				
ANR	899890	AssignmentExpression	usr_secs %= minutes		899818	0		%=			
ANR	899891	Identifier	usr_secs		899818	0					
ANR	899892	Identifier	minutes		899818	1					
ANR	899893	ExpressionStatement	sys_days = sys_secs / days	3542:1:77786:77810	899818	10	True				
ANR	899894	AssignmentExpression	sys_days = sys_secs / days		899818	0		=			
ANR	899895	Identifier	sys_days		899818	0					
ANR	899896	MultiplicativeExpression	sys_secs / days		899818	1		/			
ANR	899897	Identifier	sys_secs		899818	0					
ANR	899898	Identifier	days		899818	1					
ANR	899899	ExpressionStatement	sys_secs %= days	3542:31:77816:77832	899818	11	True				
ANR	899900	AssignmentExpression	sys_secs %= days		899818	0		%=			
ANR	899901	Identifier	sys_secs		899818	0					
ANR	899902	Identifier	days		899818	1					
ANR	899903	ExpressionStatement	sys_hours = sys_secs / hours	3543:1:77835:77861	899818	12	True				
ANR	899904	AssignmentExpression	sys_hours = sys_secs / hours		899818	0		=			
ANR	899905	Identifier	sys_hours		899818	0					
ANR	899906	MultiplicativeExpression	sys_secs / hours		899818	1		/			
ANR	899907	Identifier	sys_secs		899818	0					
ANR	899908	Identifier	hours		899818	1					
ANR	899909	ExpressionStatement	sys_secs %= hours	3543:31:77865:77882	899818	13	True				
ANR	899910	AssignmentExpression	sys_secs %= hours		899818	0		%=			
ANR	899911	Identifier	sys_secs		899818	0					
ANR	899912	Identifier	hours		899818	1					
ANR	899913	ExpressionStatement	sys_minutes = sys_secs / minutes	3544:1:77885:77915	899818	14	True				
ANR	899914	AssignmentExpression	sys_minutes = sys_secs / minutes		899818	0		=			
ANR	899915	Identifier	sys_minutes		899818	0					
ANR	899916	MultiplicativeExpression	sys_secs / minutes		899818	1		/			
ANR	899917	Identifier	sys_secs		899818	0					
ANR	899918	Identifier	minutes		899818	1					
ANR	899919	ExpressionStatement	sys_secs %= minutes	3544:34:77918:77937	899818	15	True				
ANR	899920	AssignmentExpression	sys_secs %= minutes		899818	0		%=			
ANR	899921	Identifier	sys_secs		899818	0					
ANR	899922	Identifier	minutes		899818	1					
ANR	899923	IdentifierDeclStatement	int retval ;	3546:1:77942:77952	899818	16	True				
ANR	899924	IdentifierDecl	retval		899818	0					
ANR	899925	IdentifierDeclType	int		899818	0					
ANR	899926	Identifier	retval		899818	1					
ANR	899927	ExpressionStatement	"retval = fprintf ( file , ""\\tUsr %d %02d:%02d:%02d, Sys %d %02d:%02d:%02d"" , usr_days , usr_hours , usr_minutes , usr_secs , sys_days , sys_hours , sys_minutes , sys_secs )"	3547:1:77955:78130	899818	17	True				
ANR	899928	AssignmentExpression	"retval = fprintf ( file , ""\\tUsr %d %02d:%02d:%02d, Sys %d %02d:%02d:%02d"" , usr_days , usr_hours , usr_minutes , usr_secs , sys_days , sys_hours , sys_minutes , sys_secs )"		899818	0		=			
ANR	899929	Identifier	retval		899818	0					
ANR	899930	CallExpression	"fprintf ( file , ""\\tUsr %d %02d:%02d:%02d, Sys %d %02d:%02d:%02d"" , usr_days , usr_hours , usr_minutes , usr_secs , sys_days , sys_hours , sys_minutes , sys_secs )"		899818	1					
ANR	899931	Callee	fprintf		899818	0					
ANR	899932	Identifier	fprintf		899818	0					
ANR	899933	ArgumentList	file		899818	1					
ANR	899934	Argument	file		899818	0					
ANR	899935	Identifier	file		899818	0					
ANR	899936	Argument	"""\\tUsr %d %02d:%02d:%02d, Sys %d %02d:%02d:%02d"""		899818	1					
ANR	899937	PrimaryExpression	"""\\tUsr %d %02d:%02d:%02d, Sys %d %02d:%02d:%02d"""		899818	0					
ANR	899938	Argument	usr_days		899818	2					
ANR	899939	Identifier	usr_days		899818	0					
ANR	899940	Argument	usr_hours		899818	3					
ANR	899941	Identifier	usr_hours		899818	0					
ANR	899942	Argument	usr_minutes		899818	4					
ANR	899943	Identifier	usr_minutes		899818	0					
ANR	899944	Argument	usr_secs		899818	5					
ANR	899945	Identifier	usr_secs		899818	0					
ANR	899946	Argument	sys_days		899818	6					
ANR	899947	Identifier	sys_days		899818	0					
ANR	899948	Argument	sys_hours		899818	7					
ANR	899949	Identifier	sys_hours		899818	0					
ANR	899950	Argument	sys_minutes		899818	8					
ANR	899951	Identifier	sys_minutes		899818	0					
ANR	899952	Argument	sys_secs		899818	9					
ANR	899953	Identifier	sys_secs		899818	0					
ANR	899954	ReturnStatement	return ( retval > 0 ) ;	3551:1:78134:78153	899818	18	True				
ANR	899955	RelationalExpression	retval > 0		899818	0		>			
ANR	899956	Identifier	retval		899818	0					
ANR	899957	PrimaryExpression	0		899818	1					
ANR	899958	ReturnType	int		899818	1					
ANR	899959	Identifier	ULogEvent :: writeRusage		899818	2					
ANR	899960	ParameterList	"FILE * file , rusage & usage"		899818	3					
ANR	899961	Parameter	FILE * file	3530:24:77442:77451	899818	0	True				
ANR	899962	ParameterType	FILE *		899818	0					
ANR	899963	Identifier	file		899818	1					
ANR	899964	Parameter	rusage & usage	3530:36:77454:77466	899818	1	True				
ANR	899965	ParameterType	rusage &		899818	0					
ANR	899966	Identifier	usage		899818	1					
ANR	899967	CFGEntryNode	ENTRY		899818		True				
ANR	899968	CFGExitNode	EXIT		899818		True				
ANR	899969	Symbol	usr_secs		899818						
ANR	899970	Symbol	hours		899818						
ANR	899971	Symbol	minutes		899818						
ANR	899972	Symbol	usage		899818						
ANR	899973	Symbol	sys_days		899818						
ANR	899974	Symbol	usr_days		899818						
ANR	899975	Symbol	usage . ru_utime . tv_sec		899818						
ANR	899976	Symbol	fprintf		899818						
ANR	899977	Symbol	retval		899818						
ANR	899978	Symbol	usr_minutes		899818						
ANR	899979	Symbol	file		899818						
ANR	899980	Symbol	sys_secs		899818						
ANR	899981	Symbol	sys_minutes		899818						
ANR	899982	Symbol	usage . ru_stime . tv_sec		899818						
ANR	899983	Symbol	days		899818						
ANR	899984	Symbol	usage . ru_stime		899818						
ANR	899985	Symbol	usr_hours		899818						
ANR	899986	Symbol	usage . ru_utime		899818						
ANR	899987	Symbol	sys_hours		899818						
ANR	899988	Function	ULogEvent :: readRusage	3555:0:78159:78738							
ANR	899989	FunctionDef	"ULogEvent :: readRusage (FILE * file , rusage & usage)"		899988	0					
ANR	899990	CompoundStatement		3557:0:78213:78738	899988	0					
ANR	899991	IdentifierDeclStatement	"int usr_secs , usr_minutes , usr_hours , usr_days ;"	3558:1:78216:78262	899988	0	True				
ANR	899992	IdentifierDecl	usr_secs		899988	0					
ANR	899993	IdentifierDeclType	int		899988	0					
ANR	899994	Identifier	usr_secs		899988	1					
ANR	899995	IdentifierDecl	usr_minutes		899988	1					
ANR	899996	IdentifierDeclType	int		899988	0					
ANR	899997	Identifier	usr_minutes		899988	1					
ANR	899998	IdentifierDecl	usr_hours		899988	2					
ANR	899999	IdentifierDeclType	int		899988	0					
ANR	900000	Identifier	usr_hours		899988	1					
ANR	900001	IdentifierDecl	usr_days		899988	3					
ANR	900002	IdentifierDeclType	int		899988	0					
ANR	900003	Identifier	usr_days		899988	1					
ANR	900004	IdentifierDeclStatement	"int sys_secs , sys_minutes , sys_hours , sys_days ;"	3559:1:78265:78311	899988	1	True				
ANR	900005	IdentifierDecl	sys_secs		899988	0					
ANR	900006	IdentifierDeclType	int		899988	0					
ANR	900007	Identifier	sys_secs		899988	1					
ANR	900008	IdentifierDecl	sys_minutes		899988	1					
ANR	900009	IdentifierDeclType	int		899988	0					
ANR	900010	Identifier	sys_minutes		899988	1					
ANR	900011	IdentifierDecl	sys_hours		899988	2					
ANR	900012	IdentifierDeclType	int		899988	0					
ANR	900013	Identifier	sys_hours		899988	1					
ANR	900014	IdentifierDecl	sys_days		899988	3					
ANR	900015	IdentifierDeclType	int		899988	0					
ANR	900016	Identifier	sys_days		899988	1					
ANR	900017	IdentifierDeclStatement	int retval ;	3560:1:78314:78324	899988	2	True				
ANR	900018	IdentifierDecl	retval		899988	0					
ANR	900019	IdentifierDeclType	int		899988	0					
ANR	900020	Identifier	retval		899988	1					
ANR	900021	ExpressionStatement	"retval = fscanf ( file , ""\\tUsr %d %d:%d:%d, Sys %d %d:%d:%d"" , & usr_days , & usr_hours , & usr_minutes , & usr_secs , & sys_days , & sys_hours , & sys_minutes , & sys_secs )"	3562:1:78328:78498	899988	3	True				
ANR	900022	AssignmentExpression	"retval = fscanf ( file , ""\\tUsr %d %d:%d:%d, Sys %d %d:%d:%d"" , & usr_days , & usr_hours , & usr_minutes , & usr_secs , & sys_days , & sys_hours , & sys_minutes , & sys_secs )"		899988	0		=			
ANR	900023	Identifier	retval		899988	0					
ANR	900024	CallExpression	"fscanf ( file , ""\\tUsr %d %d:%d:%d, Sys %d %d:%d:%d"" , & usr_days , & usr_hours , & usr_minutes , & usr_secs , & sys_days , & sys_hours , & sys_minutes , & sys_secs )"		899988	1					
ANR	900025	Callee	fscanf		899988	0					
ANR	900026	Identifier	fscanf		899988	0					
ANR	900027	ArgumentList	file		899988	1					
ANR	900028	Argument	file		899988	0					
ANR	900029	Identifier	file		899988	0					
ANR	900030	Argument	"""\\tUsr %d %d:%d:%d, Sys %d %d:%d:%d"""		899988	1					
ANR	900031	PrimaryExpression	"""\\tUsr %d %d:%d:%d, Sys %d %d:%d:%d"""		899988	0					
ANR	900032	Argument	& usr_days		899988	2					
ANR	900033	UnaryOperationExpression	& usr_days		899988	0					
ANR	900034	UnaryOperator	&		899988	0					
ANR	900035	Identifier	usr_days		899988	1					
ANR	900036	Argument	& usr_hours		899988	3					
ANR	900037	UnaryOperationExpression	& usr_hours		899988	0					
ANR	900038	UnaryOperator	&		899988	0					
ANR	900039	Identifier	usr_hours		899988	1					
ANR	900040	Argument	& usr_minutes		899988	4					
ANR	900041	UnaryOperationExpression	& usr_minutes		899988	0					
ANR	900042	UnaryOperator	&		899988	0					
ANR	900043	Identifier	usr_minutes		899988	1					
ANR	900044	Argument	& usr_secs		899988	5					
ANR	900045	UnaryOperationExpression	& usr_secs		899988	0					
ANR	900046	UnaryOperator	&		899988	0					
ANR	900047	Identifier	usr_secs		899988	1					
ANR	900048	Argument	& sys_days		899988	6					
ANR	900049	UnaryOperationExpression	& sys_days		899988	0					
ANR	900050	UnaryOperator	&		899988	0					
ANR	900051	Identifier	sys_days		899988	1					
ANR	900052	Argument	& sys_hours		899988	7					
ANR	900053	UnaryOperationExpression	& sys_hours		899988	0					
ANR	900054	UnaryOperator	&		899988	0					
ANR	900055	Identifier	sys_hours		899988	1					
ANR	900056	Argument	& sys_minutes		899988	8					
ANR	900057	UnaryOperationExpression	& sys_minutes		899988	0					
ANR	900058	UnaryOperator	&		899988	0					
ANR	900059	Identifier	sys_minutes		899988	1					
ANR	900060	Argument	& sys_secs		899988	9					
ANR	900061	UnaryOperationExpression	& sys_secs		899988	0					
ANR	900062	UnaryOperator	&		899988	0					
ANR	900063	Identifier	sys_secs		899988	1					
ANR	900064	IfStatement	if ( retval < 8 )		899988	4					
ANR	900065	Condition	retval < 8	3566:5:78506:78515	899988	0	True				
ANR	900066	RelationalExpression	retval < 8		899988	0		<			
ANR	900067	Identifier	retval		899988	0					
ANR	900068	PrimaryExpression	8		899988	1					
ANR	900069	CompoundStatement		11:1:305:305	899988	1					
ANR	900070	ReturnStatement	return 0 ;	3568:2:78523:78531	899988	0	True				
ANR	900071	PrimaryExpression	0		899988	0					
ANR	900072	ExpressionStatement	usage . ru_utime . tv_sec = usr_secs + usr_minutes * minutes + usr_hours * hours + usr_days * days	3571:1:78538:78628	899988	5	True				
ANR	900073	AssignmentExpression	usage . ru_utime . tv_sec = usr_secs + usr_minutes * minutes + usr_hours * hours + usr_days * days		899988	0		=			
ANR	900074	MemberAccess	usage . ru_utime . tv_sec		899988	0					
ANR	900075	MemberAccess	usage . ru_utime		899988	0					
ANR	900076	Identifier	usage		899988	0					
ANR	900077	Identifier	ru_utime		899988	1					
ANR	900078	Identifier	tv_sec		899988	1					
ANR	900079	AdditiveExpression	usr_secs + usr_minutes * minutes + usr_hours * hours + usr_days * days		899988	1		+			
ANR	900080	Identifier	usr_secs		899988	0					
ANR	900081	AdditiveExpression	usr_minutes * minutes + usr_hours * hours + usr_days * days		899988	1		+			
ANR	900082	MultiplicativeExpression	usr_minutes * minutes		899988	0		*			
ANR	900083	Identifier	usr_minutes		899988	0					
ANR	900084	Identifier	minutes		899988	1					
ANR	900085	AdditiveExpression	usr_hours * hours + usr_days * days		899988	1		+			
ANR	900086	MultiplicativeExpression	usr_hours * hours		899988	0		*			
ANR	900087	Identifier	usr_hours		899988	0					
ANR	900088	Identifier	hours		899988	1					
ANR	900089	MultiplicativeExpression	usr_days * days		899988	1		*			
ANR	900090	Identifier	usr_days		899988	0					
ANR	900091	Identifier	days		899988	1					
ANR	900092	ExpressionStatement	usage . ru_stime . tv_sec = sys_secs + sys_minutes * minutes + sys_hours * hours + sys_days * days	3574:1:78632:78722	899988	6	True				
ANR	900093	AssignmentExpression	usage . ru_stime . tv_sec = sys_secs + sys_minutes * minutes + sys_hours * hours + sys_days * days		899988	0		=			
ANR	900094	MemberAccess	usage . ru_stime . tv_sec		899988	0					
ANR	900095	MemberAccess	usage . ru_stime		899988	0					
ANR	900096	Identifier	usage		899988	0					
ANR	900097	Identifier	ru_stime		899988	1					
ANR	900098	Identifier	tv_sec		899988	1					
ANR	900099	AdditiveExpression	sys_secs + sys_minutes * minutes + sys_hours * hours + sys_days * days		899988	1		+			
ANR	900100	Identifier	sys_secs		899988	0					
ANR	900101	AdditiveExpression	sys_minutes * minutes + sys_hours * hours + sys_days * days		899988	1		+			
ANR	900102	MultiplicativeExpression	sys_minutes * minutes		899988	0		*			
ANR	900103	Identifier	sys_minutes		899988	0					
ANR	900104	Identifier	minutes		899988	1					
ANR	900105	AdditiveExpression	sys_hours * hours + sys_days * days		899988	1		+			
ANR	900106	MultiplicativeExpression	sys_hours * hours		899988	0		*			
ANR	900107	Identifier	sys_hours		899988	0					
ANR	900108	Identifier	hours		899988	1					
ANR	900109	MultiplicativeExpression	sys_days * days		899988	1		*			
ANR	900110	Identifier	sys_days		899988	0					
ANR	900111	Identifier	days		899988	1					
ANR	900112	ReturnStatement	return ( 1 ) ;	3577:1:78726:78736	899988	7	True				
ANR	900113	PrimaryExpression	1		899988	0					
ANR	900114	ReturnType	int		899988	1					
ANR	900115	Identifier	ULogEvent :: readRusage		899988	2					
ANR	900116	ParameterList	"FILE * file , rusage & usage"		899988	3					
ANR	900117	Parameter	FILE * file	3556:23:78186:78195	899988	0	True				
ANR	900118	ParameterType	FILE *		899988	0					
ANR	900119	Identifier	file		899988	1					
ANR	900120	Parameter	rusage & usage	3556:35:78198:78210	899988	1	True				
ANR	900121	ParameterType	rusage &		899988	0					
ANR	900122	Identifier	usage		899988	1					
ANR	900123	CFGEntryNode	ENTRY		899988		True				
ANR	900124	CFGExitNode	EXIT		899988		True				
ANR	900125	Symbol	usr_secs		899988						
ANR	900126	Symbol	& usr_secs		899988						
ANR	900127	Symbol	usage		899988						
ANR	900128	Symbol	usage . ru_utime . tv_sec		899988						
ANR	900129	Symbol	& sys_minutes		899988						
ANR	900130	Symbol	file		899988						
ANR	900131	Symbol	sys_secs		899988						
ANR	900132	Symbol	sys_minutes		899988						
ANR	900133	Symbol	& sys_days		899988						
ANR	900134	Symbol	& usr_minutes		899988						
ANR	900135	Symbol	usage . ru_stime . tv_sec		899988						
ANR	900136	Symbol	usr_hours		899988						
ANR	900137	Symbol	usage . ru_stime		899988						
ANR	900138	Symbol	& usr_days		899988						
ANR	900139	Symbol	& sys_hours		899988						
ANR	900140	Symbol	hours		899988						
ANR	900141	Symbol	minutes		899988						
ANR	900142	Symbol	sys_days		899988						
ANR	900143	Symbol	usr_days		899988						
ANR	900144	Symbol	retval		899988						
ANR	900145	Symbol	usr_minutes		899988						
ANR	900146	Symbol	fscanf		899988						
ANR	900147	Symbol	& sys_secs		899988						
ANR	900148	Symbol	& usr_hours		899988						
ANR	900149	Symbol	days		899988						
ANR	900150	Symbol	usage . ru_utime		899988						
ANR	900151	Symbol	sys_hours		899988						
ANR	900152	Function	ULogEvent :: rusageToStr	3580:0:78741:79472							
ANR	900153	FunctionDef	ULogEvent :: rusageToStr (rusage usage)		900152	0					
ANR	900154	CompoundStatement		3582:0:78785:79472	900152	0					
ANR	900155	IdentifierDeclStatement	char * result = ( char * ) malloc ( 128 ) ;	3583:1:78788:78822	900152	0	True				
ANR	900156	IdentifierDecl	* result = ( char * ) malloc ( 128 )		900152	0					
ANR	900157	IdentifierDeclType	char *		900152	0					
ANR	900158	Identifier	result		900152	1					
ANR	900159	AssignmentExpression	* result = ( char * ) malloc ( 128 )		900152	2		=			
ANR	900160	Identifier	result		900152	0					
ANR	900161	CastExpression	( char * ) malloc ( 128 )		900152	1					
ANR	900162	CastTarget	char *		900152	0					
ANR	900163	CallExpression	malloc ( 128 )		900152	1					
ANR	900164	Callee	malloc		900152	0					
ANR	900165	Identifier	malloc		900152	0					
ANR	900166	ArgumentList	128		900152	1					
ANR	900167	Argument	128		900152	0					
ANR	900168	PrimaryExpression	128		900152	0					
ANR	900169	IdentifierDeclStatement	int usr_secs = usage . ru_utime . tv_sec ;	3585:1:78826:78862	900152	1	True				
ANR	900170	IdentifierDecl	usr_secs = usage . ru_utime . tv_sec		900152	0					
ANR	900171	IdentifierDeclType	int		900152	0					
ANR	900172	Identifier	usr_secs		900152	1					
ANR	900173	AssignmentExpression	usr_secs = usage . ru_utime . tv_sec		900152	2		=			
ANR	900174	Identifier	usr_secs		900152	0					
ANR	900175	MemberAccess	usage . ru_utime . tv_sec		900152	1					
ANR	900176	MemberAccess	usage . ru_utime		900152	0					
ANR	900177	Identifier	usage		900152	0					
ANR	900178	Identifier	ru_utime		900152	1					
ANR	900179	Identifier	tv_sec		900152	1					
ANR	900180	IdentifierDeclStatement	int sys_secs = usage . ru_stime . tv_sec ;	3586:1:78865:78901	900152	2	True				
ANR	900181	IdentifierDecl	sys_secs = usage . ru_stime . tv_sec		900152	0					
ANR	900182	IdentifierDeclType	int		900152	0					
ANR	900183	Identifier	sys_secs		900152	1					
ANR	900184	AssignmentExpression	sys_secs = usage . ru_stime . tv_sec		900152	2		=			
ANR	900185	Identifier	sys_secs		900152	0					
ANR	900186	MemberAccess	usage . ru_stime . tv_sec		900152	1					
ANR	900187	MemberAccess	usage . ru_stime		900152	0					
ANR	900188	Identifier	usage		900152	0					
ANR	900189	Identifier	ru_stime		900152	1					
ANR	900190	Identifier	tv_sec		900152	1					
ANR	900191	IdentifierDeclStatement	"int usr_days , usr_hours , usr_minutes ;"	3588:1:78905:78941	900152	3	True				
ANR	900192	IdentifierDecl	usr_days		900152	0					
ANR	900193	IdentifierDeclType	int		900152	0					
ANR	900194	Identifier	usr_days		900152	1					
ANR	900195	IdentifierDecl	usr_hours		900152	1					
ANR	900196	IdentifierDeclType	int		900152	0					
ANR	900197	Identifier	usr_hours		900152	1					
ANR	900198	IdentifierDecl	usr_minutes		900152	2					
ANR	900199	IdentifierDeclType	int		900152	0					
ANR	900200	Identifier	usr_minutes		900152	1					
ANR	900201	IdentifierDeclStatement	"int sys_days , sys_hours , sys_minutes ;"	3589:1:78944:78980	900152	4	True				
ANR	900202	IdentifierDecl	sys_days		900152	0					
ANR	900203	IdentifierDeclType	int		900152	0					
ANR	900204	Identifier	sys_days		900152	1					
ANR	900205	IdentifierDecl	sys_hours		900152	1					
ANR	900206	IdentifierDeclType	int		900152	0					
ANR	900207	Identifier	sys_hours		900152	1					
ANR	900208	IdentifierDecl	sys_minutes		900152	2					
ANR	900209	IdentifierDeclType	int		900152	0					
ANR	900210	Identifier	sys_minutes		900152	1					
ANR	900211	ExpressionStatement	usr_days = usr_secs / days	3591:1:78984:79008	900152	5	True				
ANR	900212	AssignmentExpression	usr_days = usr_secs / days		900152	0		=			
ANR	900213	Identifier	usr_days		900152	0					
ANR	900214	MultiplicativeExpression	usr_secs / days		900152	1		/			
ANR	900215	Identifier	usr_secs		900152	0					
ANR	900216	Identifier	days		900152	1					
ANR	900217	ExpressionStatement	usr_secs %= days	3591:31:79014:79030	900152	6	True				
ANR	900218	AssignmentExpression	usr_secs %= days		900152	0		%=			
ANR	900219	Identifier	usr_secs		900152	0					
ANR	900220	Identifier	days		900152	1					
ANR	900221	ExpressionStatement	usr_hours = usr_secs / hours	3592:1:79033:79059	900152	7	True				
ANR	900222	AssignmentExpression	usr_hours = usr_secs / hours		900152	0		=			
ANR	900223	Identifier	usr_hours		900152	0					
ANR	900224	MultiplicativeExpression	usr_secs / hours		900152	1		/			
ANR	900225	Identifier	usr_secs		900152	0					
ANR	900226	Identifier	hours		900152	1					
ANR	900227	ExpressionStatement	usr_secs %= hours	3592:31:79063:79080	900152	8	True				
ANR	900228	AssignmentExpression	usr_secs %= hours		900152	0		%=			
ANR	900229	Identifier	usr_secs		900152	0					
ANR	900230	Identifier	hours		900152	1					
ANR	900231	ExpressionStatement	usr_minutes = usr_secs / minutes	3593:1:79083:79113	900152	9	True				
ANR	900232	AssignmentExpression	usr_minutes = usr_secs / minutes		900152	0		=			
ANR	900233	Identifier	usr_minutes		900152	0					
ANR	900234	MultiplicativeExpression	usr_secs / minutes		900152	1		/			
ANR	900235	Identifier	usr_secs		900152	0					
ANR	900236	Identifier	minutes		900152	1					
ANR	900237	ExpressionStatement	usr_secs %= minutes	3593:34:79116:79135	900152	10	True				
ANR	900238	AssignmentExpression	usr_secs %= minutes		900152	0		%=			
ANR	900239	Identifier	usr_secs		900152	0					
ANR	900240	Identifier	minutes		900152	1					
ANR	900241	ExpressionStatement	sys_days = sys_secs / days	3595:1:79140:79164	900152	11	True				
ANR	900242	AssignmentExpression	sys_days = sys_secs / days		900152	0		=			
ANR	900243	Identifier	sys_days		900152	0					
ANR	900244	MultiplicativeExpression	sys_secs / days		900152	1		/			
ANR	900245	Identifier	sys_secs		900152	0					
ANR	900246	Identifier	days		900152	1					
ANR	900247	ExpressionStatement	sys_secs %= days	3595:31:79170:79186	900152	12	True				
ANR	900248	AssignmentExpression	sys_secs %= days		900152	0		%=			
ANR	900249	Identifier	sys_secs		900152	0					
ANR	900250	Identifier	days		900152	1					
ANR	900251	ExpressionStatement	sys_hours = sys_secs / hours	3596:1:79189:79215	900152	13	True				
ANR	900252	AssignmentExpression	sys_hours = sys_secs / hours		900152	0		=			
ANR	900253	Identifier	sys_hours		900152	0					
ANR	900254	MultiplicativeExpression	sys_secs / hours		900152	1		/			
ANR	900255	Identifier	sys_secs		900152	0					
ANR	900256	Identifier	hours		900152	1					
ANR	900257	ExpressionStatement	sys_secs %= hours	3596:31:79219:79236	900152	14	True				
ANR	900258	AssignmentExpression	sys_secs %= hours		900152	0		%=			
ANR	900259	Identifier	sys_secs		900152	0					
ANR	900260	Identifier	hours		900152	1					
ANR	900261	ExpressionStatement	sys_minutes = sys_secs / minutes	3597:1:79239:79269	900152	15	True				
ANR	900262	AssignmentExpression	sys_minutes = sys_secs / minutes		900152	0		=			
ANR	900263	Identifier	sys_minutes		900152	0					
ANR	900264	MultiplicativeExpression	sys_secs / minutes		900152	1		/			
ANR	900265	Identifier	sys_secs		900152	0					
ANR	900266	Identifier	minutes		900152	1					
ANR	900267	ExpressionStatement	sys_secs %= minutes	3597:34:79272:79291	900152	16	True				
ANR	900268	AssignmentExpression	sys_secs %= minutes		900152	0		%=			
ANR	900269	Identifier	sys_secs		900152	0					
ANR	900270	Identifier	minutes		900152	1					
ANR	900271	ExpressionStatement	"sprintf ( result , ""Usr %d %02d:%02d:%02d, Sys %d %02d:%02d:%02d"" , usr_days , usr_hours , usr_minutes , usr_secs , sys_days , sys_hours , sys_minutes , sys_secs )"	3599:1:79296:79453	900152	17	True				
ANR	900272	CallExpression	"sprintf ( result , ""Usr %d %02d:%02d:%02d, Sys %d %02d:%02d:%02d"" , usr_days , usr_hours , usr_minutes , usr_secs , sys_days , sys_hours , sys_minutes , sys_secs )"		900152	0					
ANR	900273	Callee	sprintf		900152	0					
ANR	900274	Identifier	sprintf		900152	0					
ANR	900275	ArgumentList	result		900152	1					
ANR	900276	Argument	result		900152	0					
ANR	900277	Identifier	result		900152	0					
ANR	900278	Argument	"""Usr %d %02d:%02d:%02d, Sys %d %02d:%02d:%02d"""		900152	1					
ANR	900279	PrimaryExpression	"""Usr %d %02d:%02d:%02d, Sys %d %02d:%02d:%02d"""		900152	0					
ANR	900280	Argument	usr_days		900152	2					
ANR	900281	Identifier	usr_days		900152	0					
ANR	900282	Argument	usr_hours		900152	3					
ANR	900283	Identifier	usr_hours		900152	0					
ANR	900284	Argument	usr_minutes		900152	4					
ANR	900285	Identifier	usr_minutes		900152	0					
ANR	900286	Argument	usr_secs		900152	5					
ANR	900287	Identifier	usr_secs		900152	0					
ANR	900288	Argument	sys_days		900152	6					
ANR	900289	Identifier	sys_days		900152	0					
ANR	900290	Argument	sys_hours		900152	7					
ANR	900291	Identifier	sys_hours		900152	0					
ANR	900292	Argument	sys_minutes		900152	8					
ANR	900293	Identifier	sys_minutes		900152	0					
ANR	900294	Argument	sys_secs		900152	9					
ANR	900295	Identifier	sys_secs		900152	0					
ANR	900296	ReturnStatement	return result ;	3603:1:79457:79470	900152	18	True				
ANR	900297	Identifier	result		900152	0					
ANR	900298	ReturnType	char *		900152	1					
ANR	900299	Identifier	ULogEvent :: rusageToStr		900152	2					
ANR	900300	ParameterList	rusage usage		900152	3					
ANR	900301	Parameter	rusage usage	3581:24:78771:78782	900152	0	True				
ANR	900302	ParameterType	rusage		900152	0					
ANR	900303	Identifier	usage		900152	1					
ANR	900304	CFGEntryNode	ENTRY		900152		True				
ANR	900305	CFGExitNode	EXIT		900152		True				
ANR	900306	Symbol	malloc		900152						
ANR	900307	Symbol	usr_secs		900152						
ANR	900308	Symbol	hours		900152						
ANR	900309	Symbol	minutes		900152						
ANR	900310	Symbol	usage		900152						
ANR	900311	Symbol	sys_days		900152						
ANR	900312	Symbol	usr_days		900152						
ANR	900313	Symbol	usage . ru_utime . tv_sec		900152						
ANR	900314	Symbol	result		900152						
ANR	900315	Symbol	usr_minutes		900152						
ANR	900316	Symbol	sys_secs		900152						
ANR	900317	Symbol	sys_minutes		900152						
ANR	900318	Symbol	usage . ru_stime . tv_sec		900152						
ANR	900319	Symbol	days		900152						
ANR	900320	Symbol	usage . ru_stime		900152						
ANR	900321	Symbol	usr_hours		900152						
ANR	900322	Symbol	usage . ru_utime		900152						
ANR	900323	Symbol	sys_hours		900152						
ANR	900324	Function	ULogEvent :: strToRusage	3606:0:79475:80064							
ANR	900325	FunctionDef	"ULogEvent :: strToRusage (char * rusageStr , rusage & usage)"		900324	0					
ANR	900326	CompoundStatement		3608:0:79536:80064	900324	0					
ANR	900327	IdentifierDeclStatement	"int usr_secs , usr_minutes , usr_hours , usr_days ;"	3609:1:79539:79585	900324	0	True				
ANR	900328	IdentifierDecl	usr_secs		900324	0					
ANR	900329	IdentifierDeclType	int		900324	0					
ANR	900330	Identifier	usr_secs		900324	1					
ANR	900331	IdentifierDecl	usr_minutes		900324	1					
ANR	900332	IdentifierDeclType	int		900324	0					
ANR	900333	Identifier	usr_minutes		900324	1					
ANR	900334	IdentifierDecl	usr_hours		900324	2					
ANR	900335	IdentifierDeclType	int		900324	0					
ANR	900336	Identifier	usr_hours		900324	1					
ANR	900337	IdentifierDecl	usr_days		900324	3					
ANR	900338	IdentifierDeclType	int		900324	0					
ANR	900339	Identifier	usr_days		900324	1					
ANR	900340	IdentifierDeclStatement	"int sys_secs , sys_minutes , sys_hours , sys_days ;"	3610:1:79588:79634	900324	1	True				
ANR	900341	IdentifierDecl	sys_secs		900324	0					
ANR	900342	IdentifierDeclType	int		900324	0					
ANR	900343	Identifier	sys_secs		900324	1					
ANR	900344	IdentifierDecl	sys_minutes		900324	1					
ANR	900345	IdentifierDeclType	int		900324	0					
ANR	900346	Identifier	sys_minutes		900324	1					
ANR	900347	IdentifierDecl	sys_hours		900324	2					
ANR	900348	IdentifierDeclType	int		900324	0					
ANR	900349	Identifier	sys_hours		900324	1					
ANR	900350	IdentifierDecl	sys_days		900324	3					
ANR	900351	IdentifierDeclType	int		900324	0					
ANR	900352	Identifier	sys_days		900324	1					
ANR	900353	IdentifierDeclStatement	int retval ;	3611:1:79637:79647	900324	2	True				
ANR	900354	IdentifierDecl	retval		900324	0					
ANR	900355	IdentifierDeclType	int		900324	0					
ANR	900356	Identifier	retval		900324	1					
ANR	900357	ExpressionStatement	"retval = sscanf ( rusageStr , ""\\tUsr %d %d:%d:%d, Sys %d %d:%d:%d"" , & usr_days , & usr_hours , & usr_minutes , & usr_secs , & sys_days , & sys_hours , & sys_minutes , & sys_secs )"	3613:1:79651:79824	900324	3	True				
ANR	900358	AssignmentExpression	"retval = sscanf ( rusageStr , ""\\tUsr %d %d:%d:%d, Sys %d %d:%d:%d"" , & usr_days , & usr_hours , & usr_minutes , & usr_secs , & sys_days , & sys_hours , & sys_minutes , & sys_secs )"		900324	0		=			
ANR	900359	Identifier	retval		900324	0					
ANR	900360	CallExpression	"sscanf ( rusageStr , ""\\tUsr %d %d:%d:%d, Sys %d %d:%d:%d"" , & usr_days , & usr_hours , & usr_minutes , & usr_secs , & sys_days , & sys_hours , & sys_minutes , & sys_secs )"		900324	1					
ANR	900361	Callee	sscanf		900324	0					
ANR	900362	Identifier	sscanf		900324	0					
ANR	900363	ArgumentList	rusageStr		900324	1					
ANR	900364	Argument	rusageStr		900324	0					
ANR	900365	Identifier	rusageStr		900324	0					
ANR	900366	Argument	"""\\tUsr %d %d:%d:%d, Sys %d %d:%d:%d"""		900324	1					
ANR	900367	PrimaryExpression	"""\\tUsr %d %d:%d:%d, Sys %d %d:%d:%d"""		900324	0					
ANR	900368	Argument	& usr_days		900324	2					
ANR	900369	UnaryOperationExpression	& usr_days		900324	0					
ANR	900370	UnaryOperator	&		900324	0					
ANR	900371	Identifier	usr_days		900324	1					
ANR	900372	Argument	& usr_hours		900324	3					
ANR	900373	UnaryOperationExpression	& usr_hours		900324	0					
ANR	900374	UnaryOperator	&		900324	0					
ANR	900375	Identifier	usr_hours		900324	1					
ANR	900376	Argument	& usr_minutes		900324	4					
ANR	900377	UnaryOperationExpression	& usr_minutes		900324	0					
ANR	900378	UnaryOperator	&		900324	0					
ANR	900379	Identifier	usr_minutes		900324	1					
ANR	900380	Argument	& usr_secs		900324	5					
ANR	900381	UnaryOperationExpression	& usr_secs		900324	0					
ANR	900382	UnaryOperator	&		900324	0					
ANR	900383	Identifier	usr_secs		900324	1					
ANR	900384	Argument	& sys_days		900324	6					
ANR	900385	UnaryOperationExpression	& sys_days		900324	0					
ANR	900386	UnaryOperator	&		900324	0					
ANR	900387	Identifier	sys_days		900324	1					
ANR	900388	Argument	& sys_hours		900324	7					
ANR	900389	UnaryOperationExpression	& sys_hours		900324	0					
ANR	900390	UnaryOperator	&		900324	0					
ANR	900391	Identifier	sys_hours		900324	1					
ANR	900392	Argument	& sys_minutes		900324	8					
ANR	900393	UnaryOperationExpression	& sys_minutes		900324	0					
ANR	900394	UnaryOperator	&		900324	0					
ANR	900395	Identifier	sys_minutes		900324	1					
ANR	900396	Argument	& sys_secs		900324	9					
ANR	900397	UnaryOperationExpression	& sys_secs		900324	0					
ANR	900398	UnaryOperator	&		900324	0					
ANR	900399	Identifier	sys_secs		900324	1					
ANR	900400	IfStatement	if ( retval < 8 )		900324	4					
ANR	900401	Condition	retval < 8	3617:5:79832:79841	900324	0	True				
ANR	900402	RelationalExpression	retval < 8		900324	0		<			
ANR	900403	Identifier	retval		900324	0					
ANR	900404	PrimaryExpression	8		900324	1					
ANR	900405	CompoundStatement		11:1:308:308	900324	1					
ANR	900406	ReturnStatement	return 0 ;	3619:2:79849:79857	900324	0	True				
ANR	900407	PrimaryExpression	0		900324	0					
ANR	900408	ExpressionStatement	usage . ru_utime . tv_sec = usr_secs + usr_minutes * minutes + usr_hours * hours + usr_days * days	3622:1:79864:79954	900324	5	True				
ANR	900409	AssignmentExpression	usage . ru_utime . tv_sec = usr_secs + usr_minutes * minutes + usr_hours * hours + usr_days * days		900324	0		=			
ANR	900410	MemberAccess	usage . ru_utime . tv_sec		900324	0					
ANR	900411	MemberAccess	usage . ru_utime		900324	0					
ANR	900412	Identifier	usage		900324	0					
ANR	900413	Identifier	ru_utime		900324	1					
ANR	900414	Identifier	tv_sec		900324	1					
ANR	900415	AdditiveExpression	usr_secs + usr_minutes * minutes + usr_hours * hours + usr_days * days		900324	1		+			
ANR	900416	Identifier	usr_secs		900324	0					
ANR	900417	AdditiveExpression	usr_minutes * minutes + usr_hours * hours + usr_days * days		900324	1		+			
ANR	900418	MultiplicativeExpression	usr_minutes * minutes		900324	0		*			
ANR	900419	Identifier	usr_minutes		900324	0					
ANR	900420	Identifier	minutes		900324	1					
ANR	900421	AdditiveExpression	usr_hours * hours + usr_days * days		900324	1		+			
ANR	900422	MultiplicativeExpression	usr_hours * hours		900324	0		*			
ANR	900423	Identifier	usr_hours		900324	0					
ANR	900424	Identifier	hours		900324	1					
ANR	900425	MultiplicativeExpression	usr_days * days		900324	1		*			
ANR	900426	Identifier	usr_days		900324	0					
ANR	900427	Identifier	days		900324	1					
ANR	900428	ExpressionStatement	usage . ru_stime . tv_sec = sys_secs + sys_minutes * minutes + sys_hours * hours + sys_days * days	3625:1:79958:80048	900324	6	True				
ANR	900429	AssignmentExpression	usage . ru_stime . tv_sec = sys_secs + sys_minutes * minutes + sys_hours * hours + sys_days * days		900324	0		=			
ANR	900430	MemberAccess	usage . ru_stime . tv_sec		900324	0					
ANR	900431	MemberAccess	usage . ru_stime		900324	0					
ANR	900432	Identifier	usage		900324	0					
ANR	900433	Identifier	ru_stime		900324	1					
ANR	900434	Identifier	tv_sec		900324	1					
ANR	900435	AdditiveExpression	sys_secs + sys_minutes * minutes + sys_hours * hours + sys_days * days		900324	1		+			
ANR	900436	Identifier	sys_secs		900324	0					
ANR	900437	AdditiveExpression	sys_minutes * minutes + sys_hours * hours + sys_days * days		900324	1		+			
ANR	900438	MultiplicativeExpression	sys_minutes * minutes		900324	0		*			
ANR	900439	Identifier	sys_minutes		900324	0					
ANR	900440	Identifier	minutes		900324	1					
ANR	900441	AdditiveExpression	sys_hours * hours + sys_days * days		900324	1		+			
ANR	900442	MultiplicativeExpression	sys_hours * hours		900324	0		*			
ANR	900443	Identifier	sys_hours		900324	0					
ANR	900444	Identifier	hours		900324	1					
ANR	900445	MultiplicativeExpression	sys_days * days		900324	1		*			
ANR	900446	Identifier	sys_days		900324	0					
ANR	900447	Identifier	days		900324	1					
ANR	900448	ReturnStatement	return ( 1 ) ;	3628:1:80052:80062	900324	7	True				
ANR	900449	PrimaryExpression	1		900324	0					
ANR	900450	ReturnType	int		900324	1					
ANR	900451	Identifier	ULogEvent :: strToRusage		900324	2					
ANR	900452	ParameterList	"char * rusageStr , rusage & usage"		900324	3					
ANR	900453	Parameter	char * rusageStr	3607:24:79503:79517	900324	0	True				
ANR	900454	ParameterType	char *		900324	0					
ANR	900455	Identifier	rusageStr		900324	1					
ANR	900456	Parameter	rusage & usage	3607:41:79520:79533	900324	1	True				
ANR	900457	ParameterType	rusage &		900324	0					
ANR	900458	Identifier	usage		900324	1					
ANR	900459	CFGEntryNode	ENTRY		900324		True				
ANR	900460	CFGExitNode	EXIT		900324		True				
ANR	900461	Symbol	usr_secs		900324						
ANR	900462	Symbol	& usr_secs		900324						
ANR	900463	Symbol	usage		900324						
ANR	900464	Symbol	usage . ru_utime . tv_sec		900324						
ANR	900465	Symbol	& sys_minutes		900324						
ANR	900466	Symbol	sys_secs		900324						
ANR	900467	Symbol	sys_minutes		900324						
ANR	900468	Symbol	& usr_minutes		900324						
ANR	900469	Symbol	& sys_days		900324						
ANR	900470	Symbol	usage . ru_stime . tv_sec		900324						
ANR	900471	Symbol	usr_hours		900324						
ANR	900472	Symbol	usage . ru_stime		900324						
ANR	900473	Symbol	& sys_hours		900324						
ANR	900474	Symbol	& usr_days		900324						
ANR	900475	Symbol	hours		900324						
ANR	900476	Symbol	minutes		900324						
ANR	900477	Symbol	sys_days		900324						
ANR	900478	Symbol	usr_days		900324						
ANR	900479	Symbol	retval		900324						
ANR	900480	Symbol	usr_minutes		900324						
ANR	900481	Symbol	rusageStr		900324						
ANR	900482	Symbol	& usr_hours		900324						
ANR	900483	Symbol	& sys_secs		900324						
ANR	900484	Symbol	sscanf		900324						
ANR	900485	Symbol	days		900324						
ANR	900486	Symbol	usage . ru_utime		900324						
ANR	900487	Symbol	sys_hours		900324						
ANR	900488	Function	NodeExecuteEvent :: NodeExecuteEvent	3632:0:80103:80213							
ANR	900489	FunctionDef	NodeExecuteEvent :: NodeExecuteEvent ()		900488	0					
ANR	900490	CompoundStatement		3633:0:80144:80213	900488	0					
ANR	900491	ExpressionStatement	executeHost = NULL	3634:1:80147:80165	900488	0	True				
ANR	900492	AssignmentExpression	executeHost = NULL		900488	0		=			
ANR	900493	Identifier	executeHost		900488	0					
ANR	900494	Identifier	NULL		900488	1					
ANR	900495	ExpressionStatement	eventNumber = ULOG_NODE_EXECUTE	3635:1:80168:80199	900488	1	True				
ANR	900496	AssignmentExpression	eventNumber = ULOG_NODE_EXECUTE		900488	0		=			
ANR	900497	Identifier	eventNumber		900488	0					
ANR	900498	Identifier	ULOG_NODE_EXECUTE		900488	1					
ANR	900499	ExpressionStatement	node = - 1	3636:1:80202:80211	900488	2	True				
ANR	900500	AssignmentExpression	node = - 1		900488	0		=			
ANR	900501	Identifier	node		900488	0					
ANR	900502	UnaryOperationExpression	- 1		900488	1					
ANR	900503	UnaryOperator	-		900488	0					
ANR	900504	PrimaryExpression	1		900488	1					
ANR	900505	Identifier	NodeExecuteEvent :: NodeExecuteEvent		900488	1					
ANR	900506	ParameterList			900488	2					
ANR	900507	CFGEntryNode	ENTRY		900488		True				
ANR	900508	CFGExitNode	EXIT		900488		True				
ANR	900509	Symbol	ULOG_NODE_EXECUTE		900488						
ANR	900510	Symbol	node		900488						
ANR	900511	Symbol	NULL		900488						
ANR	900512	Symbol	executeHost		900488						
ANR	900513	Symbol	eventNumber		900488						
ANR	900514	Function	NodeExecuteEvent :: ~NodeExecuteEvent	3640:0:80217:80309							
ANR	900515	FunctionDef	NodeExecuteEvent :: ~NodeExecuteEvent ()		900514	0					
ANR	900516	CompoundStatement		3641:0:80259:80309	900514	0					
ANR	900517	IfStatement	if ( executeHost )		900514	0					
ANR	900518	Condition	executeHost	3642:5:80266:80276	900514	0	True				
ANR	900519	Identifier	executeHost		900514	0					
ANR	900520	CompoundStatement		2:19:20:20	900514	1					
ANR	900521	Statement	delete	3643:2:80284:80289	900514	0	True				
ANR	900522	Statement	[	3643:8:80290:80290	900514	1	True				
ANR	900523	Statement	]	3643:9:80291:80291	900514	2	True				
ANR	900524	ExpressionStatement	executeHost	3643:11:80293:80304	900514	3	True				
ANR	900525	Identifier	executeHost		900514	0					
ANR	900526	Identifier	NodeExecuteEvent :: ~NodeExecuteEvent		900514	1					
ANR	900527	ParameterList			900514	2					
ANR	900528	CFGEntryNode	ENTRY		900514		True				
ANR	900529	CFGExitNode	EXIT		900514		True				
ANR	900530	Symbol	executeHost		900514						
ANR	900531	Function	NodeExecuteEvent :: setExecuteHost	3647:0:80312:80524							
ANR	900532	FunctionDef	NodeExecuteEvent :: setExecuteHost (char const * addr)		900531	0					
ANR	900533	CompoundStatement		3649:0:80368:80524	900531	0					
ANR	900534	IfStatement	if ( executeHost )		900531	0					
ANR	900535	Condition	executeHost	3650:5:80375:80385	900531	0	True				
ANR	900536	Identifier	executeHost		900531	0					
ANR	900537	CompoundStatement		2:19:20:20	900531	1					
ANR	900538	Statement	delete	3651:2:80393:80398	900531	0	True				
ANR	900539	Statement	[	3651:8:80399:80399	900531	1	True				
ANR	900540	Statement	]	3651:9:80400:80400	900531	2	True				
ANR	900541	ExpressionStatement	executeHost	3651:11:80402:80413	900531	3	True				
ANR	900542	Identifier	executeHost		900531	0					
ANR	900543	IfStatement	if ( addr )		900531	1					
ANR	900544	Condition	addr	3653:5:80423:80426	900531	0	True				
ANR	900545	Identifier	addr		900531	0					
ANR	900546	CompoundStatement		5:12:61:61	900531	1					
ANR	900547	ExpressionStatement	executeHost = strnewp ( addr )	3654:2:80434:80461	900531	0	True				
ANR	900548	AssignmentExpression	executeHost = strnewp ( addr )		900531	0		=			
ANR	900549	Identifier	executeHost		900531	0					
ANR	900550	CallExpression	strnewp ( addr )		900531	1					
ANR	900551	Callee	strnewp		900531	0					
ANR	900552	Identifier	strnewp		900531	0					
ANR	900553	ArgumentList	addr		900531	1					
ANR	900554	Argument	addr		900531	0					
ANR	900555	Identifier	addr		900531	0					
ANR	900556	ExpressionStatement	ASSERT ( executeHost )	3655:2:80465:80486	900531	1	True				
ANR	900557	CallExpression	ASSERT ( executeHost )		900531	0					
ANR	900558	Callee	ASSERT		900531	0					
ANR	900559	Identifier	ASSERT		900531	0					
ANR	900560	ArgumentList	executeHost		900531	1					
ANR	900561	Argument	executeHost		900531	0					
ANR	900562	Identifier	executeHost		900531	0					
ANR	900563	ElseStatement	else		900531	0					
ANR	900564	CompoundStatement		9:6:128:128	900531	0					
ANR	900565	ExpressionStatement	executeHost = NULL	3658:2:80501:80519	900531	0	True				
ANR	900566	AssignmentExpression	executeHost = NULL		900531	0		=			
ANR	900567	Identifier	executeHost		900531	0					
ANR	900568	Identifier	NULL		900531	1					
ANR	900569	ReturnType	void		900531	1					
ANR	900570	Identifier	NodeExecuteEvent :: setExecuteHost		900531	2					
ANR	900571	ParameterList	char const * addr		900531	3					
ANR	900572	Parameter	char const * addr	3648:33:80350:80365	900531	0	True				
ANR	900573	ParameterType	char const *		900531	0					
ANR	900574	Identifier	addr		900531	1					
ANR	900575	CFGEntryNode	ENTRY		900531		True				
ANR	900576	CFGExitNode	EXIT		900531		True				
ANR	900577	Symbol	NULL		900531						
ANR	900578	Symbol	executeHost		900531						
ANR	900579	Symbol	strnewp		900531						
ANR	900580	Symbol	addr		900531						
ANR	900581	Function	NodeExecuteEvent :: writeEvent	3662:0:80527:80712							
ANR	900582	FunctionDef	NodeExecuteEvent :: writeEvent (FILE * file)		900581	0					
ANR	900583	CompoundStatement		3664:0:80573:80712	900581	0					
ANR	900584	IfStatement	if ( ! executeHost )		900581	0					
ANR	900585	Condition	! executeHost	3665:5:80580:80591	900581	0	True				
ANR	900586	UnaryOperationExpression	! executeHost		900581	0					
ANR	900587	UnaryOperator	!		900581	0					
ANR	900588	Identifier	executeHost		900581	1					
ANR	900589	CompoundStatement		2:20:21:21	900581	1					
ANR	900590	ExpressionStatement	"setExecuteHost ( """" )"	3666:2:80599:80617	900581	0	True				
ANR	900591	CallExpression	"setExecuteHost ( """" )"		900581	0					
ANR	900592	Callee	setExecuteHost		900581	0					
ANR	900593	Identifier	setExecuteHost		900581	0					
ANR	900594	ArgumentList	""""""		900581	1					
ANR	900595	Argument	""""""		900581	0					
ANR	900596	PrimaryExpression	""""""		900581	0					
ANR	900597	ReturnStatement	"return ( fprintf ( file , ""Node %d executing on host: %s\\n"" , node , executeHost ) >= 0 ) ;"	3668:1:80623:80710	900581	1	True				
ANR	900598	RelationalExpression	"fprintf ( file , ""Node %d executing on host: %s\\n"" , node , executeHost ) >= 0"		900581	0		>=			
ANR	900599	CallExpression	"fprintf ( file , ""Node %d executing on host: %s\\n"" , node , executeHost )"		900581	0					
ANR	900600	Callee	fprintf		900581	0					
ANR	900601	Identifier	fprintf		900581	0					
ANR	900602	ArgumentList	file		900581	1					
ANR	900603	Argument	file		900581	0					
ANR	900604	Identifier	file		900581	0					
ANR	900605	Argument	"""Node %d executing on host: %s\\n"""		900581	1					
ANR	900606	PrimaryExpression	"""Node %d executing on host: %s\\n"""		900581	0					
ANR	900607	Argument	node		900581	2					
ANR	900608	Identifier	node		900581	0					
ANR	900609	Argument	executeHost		900581	3					
ANR	900610	Identifier	executeHost		900581	0					
ANR	900611	PrimaryExpression	0		900581	1					
ANR	900612	ReturnType	int		900581	1					
ANR	900613	Identifier	NodeExecuteEvent :: writeEvent		900581	2					
ANR	900614	ParameterList	FILE * file		900581	3					
ANR	900615	Parameter	FILE * file	3663:30:80561:80570	900581	0	True				
ANR	900616	ParameterType	FILE *		900581	0					
ANR	900617	Identifier	file		900581	1					
ANR	900618	CFGEntryNode	ENTRY		900581		True				
ANR	900619	CFGExitNode	EXIT		900581		True				
ANR	900620	Symbol	node		900581						
ANR	900621	Symbol	file		900581						
ANR	900622	Symbol	executeHost		900581						
ANR	900623	Symbol	fprintf		900581						
ANR	900624	Function	NodeExecuteEvent :: readEvent	3673:0:80716:81006							
ANR	900625	FunctionDef	NodeExecuteEvent :: readEvent (FILE * file)		900624	0					
ANR	900626	CompoundStatement		3675:0:80761:81006	900624	0					
ANR	900627	IdentifierDeclStatement	MyString line ;	3676:1:80764:80777	900624	0	True				
ANR	900628	IdentifierDecl	line		900624	0					
ANR	900629	IdentifierDeclType	MyString		900624	0					
ANR	900630	Identifier	line		900624	1					
ANR	900631	IfStatement	if ( ! line . readLine ( file ) )		900624	1					
ANR	900632	Condition	! line . readLine ( file )	3677:5:80784:80803	900624	0	True				
ANR	900633	UnaryOperationExpression	! line . readLine ( file )		900624	0					
ANR	900634	UnaryOperator	!		900624	0					
ANR	900635	CallExpression	line . readLine ( file )		900624	1					
ANR	900636	Callee	line . readLine		900624	0					
ANR	900637	MemberAccess	line . readLine		900624	0					
ANR	900638	Identifier	line		900624	0					
ANR	900639	Identifier	readLine		900624	1					
ANR	900640	ArgumentList	file		900624	1					
ANR	900641	Argument	file		900624	0					
ANR	900642	Identifier	file		900624	0					
ANR	900643	CompoundStatement		3:28:45:45	900624	1					
ANR	900644	ReturnStatement	return 0 ;	3678:2:80811:80819	900624	0	True				
ANR	900645	PrimaryExpression	0		900624	0					
ANR	900646	ExpressionStatement	setExecuteHost ( line . Value ( ) )	3680:1:80841:80869	900624	2	True				
ANR	900647	CallExpression	setExecuteHost ( line . Value ( ) )		900624	0					
ANR	900648	Callee	setExecuteHost		900624	0					
ANR	900649	Identifier	setExecuteHost		900624	0					
ANR	900650	ArgumentList	line . Value ( )		900624	1					
ANR	900651	Argument	line . Value ( )		900624	0					
ANR	900652	CallExpression	line . Value ( )		900624	0					
ANR	900653	Callee	line . Value		900624	0					
ANR	900654	MemberAccess	line . Value		900624	0					
ANR	900655	Identifier	line		900624	0					
ANR	900656	Identifier	Value		900624	1					
ANR	900657	ArgumentList			900624	1					
ANR	900658	IdentifierDeclStatement	"int retval = sscanf ( line . Value ( ) , ""Node %d executing on host: %s"" , & node , executeHost ) ;"	3681:1:80891:80983	900624	3	True				
ANR	900659	IdentifierDecl	"retval = sscanf ( line . Value ( ) , ""Node %d executing on host: %s"" , & node , executeHost )"		900624	0					
ANR	900660	IdentifierDeclType	int		900624	0					
ANR	900661	Identifier	retval		900624	1					
ANR	900662	AssignmentExpression	"retval = sscanf ( line . Value ( ) , ""Node %d executing on host: %s"" , & node , executeHost )"		900624	2		=			
ANR	900663	Identifier	retval		900624	0					
ANR	900664	CallExpression	"sscanf ( line . Value ( ) , ""Node %d executing on host: %s"" , & node , executeHost )"		900624	1					
ANR	900665	Callee	sscanf		900624	0					
ANR	900666	Identifier	sscanf		900624	0					
ANR	900667	ArgumentList	line . Value ( )		900624	1					
ANR	900668	Argument	line . Value ( )		900624	0					
ANR	900669	CallExpression	line . Value ( )		900624	0					
ANR	900670	Callee	line . Value		900624	0					
ANR	900671	MemberAccess	line . Value		900624	0					
ANR	900672	Identifier	line		900624	0					
ANR	900673	Identifier	Value		900624	1					
ANR	900674	ArgumentList			900624	1					
ANR	900675	Argument	"""Node %d executing on host: %s"""		900624	1					
ANR	900676	PrimaryExpression	"""Node %d executing on host: %s"""		900624	0					
ANR	900677	Argument	& node		900624	2					
ANR	900678	UnaryOperationExpression	& node		900624	0					
ANR	900679	UnaryOperator	&		900624	0					
ANR	900680	Identifier	node		900624	1					
ANR	900681	Argument	executeHost		900624	3					
ANR	900682	Identifier	executeHost		900624	0					
ANR	900683	ReturnStatement	return retval == 2 ;	3683:1:80986:81004	900624	4	True				
ANR	900684	EqualityExpression	retval == 2		900624	0		==			
ANR	900685	Identifier	retval		900624	0					
ANR	900686	PrimaryExpression	2		900624	1					
ANR	900687	ReturnType	int		900624	1					
ANR	900688	Identifier	NodeExecuteEvent :: readEvent		900624	2					
ANR	900689	ParameterList	FILE * file		900624	3					
ANR	900690	Parameter	FILE * file	3674:29:80749:80758	900624	0	True				
ANR	900691	ParameterType	FILE *		900624	0					
ANR	900692	Identifier	file		900624	1					
ANR	900693	CFGEntryNode	ENTRY		900624		True				
ANR	900694	CFGExitNode	EXIT		900624		True				
ANR	900695	Symbol	line . readLine		900624						
ANR	900696	Symbol	& node		900624						
ANR	900697	Symbol	file		900624						
ANR	900698	Symbol	line . Value		900624						
ANR	900699	Symbol	executeHost		900624						
ANR	900700	Symbol	line		900624						
ANR	900701	Symbol	sscanf		900624						
ANR	900702	Symbol	retval		900624						
ANR	900703	Function	NodeExecuteEvent :: toClassAd	3686:0:81009:81337							
ANR	900704	FunctionDef	NodeExecuteEvent :: toClassAd ()		900703	0					
ANR	900705	CompoundStatement		3688:0:81052:81337	900703	0					
ANR	900706	IdentifierDeclStatement	ClassAd * myad = ULogEvent :: toClassAd ( ) ;	3689:1:81055:81093	900703	0	True				
ANR	900707	IdentifierDecl	* myad = ULogEvent :: toClassAd ( )		900703	0					
ANR	900708	IdentifierDeclType	ClassAd *		900703	0					
ANR	900709	Identifier	myad		900703	1					
ANR	900710	AssignmentExpression	* myad = ULogEvent :: toClassAd ( )		900703	2		=			
ANR	900711	Identifier	myad		900703	0					
ANR	900712	CallExpression	ULogEvent :: toClassAd ( )		900703	1					
ANR	900713	Callee	ULogEvent :: toClassAd		900703	0					
ANR	900714	Identifier	ULogEvent :: toClassAd		900703	0					
ANR	900715	ArgumentList			900703	1					
ANR	900716	IfStatement	if ( ! myad )		900703	1					
ANR	900717	Condition	! myad	3690:5:81100:81104	900703	0	True				
ANR	900718	UnaryOperationExpression	! myad		900703	0					
ANR	900719	UnaryOperator	!		900703	0					
ANR	900720	Identifier	myad		900703	1					
ANR	900721	ReturnStatement	return NULL ;	3690:13:81108:81119	900703	1	True				
ANR	900722	Identifier	NULL		900703	0					
ANR	900723	IdentifierDeclStatement	char buf0 [ 512 ] ;	3691:1:81122:81136	900703	2	True				
ANR	900724	IdentifierDecl	buf0 [ 512 ]		900703	0					
ANR	900725	IdentifierDeclType	char [ 512 ]		900703	0					
ANR	900726	Identifier	buf0		900703	1					
ANR	900727	PrimaryExpression	512		900703	2					
ANR	900728	IfStatement	if ( executeHost )		900703	3					
ANR	900729	Condition	executeHost	3693:5:81144:81154	900703	0	True				
ANR	900730	Identifier	executeHost		900703	0					
ANR	900731	CompoundStatement		6:19:105:105	900703	1					
ANR	900732	IfStatement	"if ( ! myad -> Assign ( ""ExecuteHost"" , executeHost ) )"		900703	0					
ANR	900733	Condition	"! myad -> Assign ( ""ExecuteHost"" , executeHost )"	3694:6:81166:81205	900703	0	True				
ANR	900734	UnaryOperationExpression	"! myad -> Assign ( ""ExecuteHost"" , executeHost )"		900703	0					
ANR	900735	UnaryOperator	!		900703	0					
ANR	900736	CallExpression	"myad -> Assign ( ""ExecuteHost"" , executeHost )"		900703	1					
ANR	900737	Callee	myad -> Assign		900703	0					
ANR	900738	PtrMemberAccess	myad -> Assign		900703	0					
ANR	900739	Identifier	myad		900703	0					
ANR	900740	Identifier	Assign		900703	1					
ANR	900741	ArgumentList	"""ExecuteHost"""		900703	1					
ANR	900742	Argument	"""ExecuteHost"""		900703	0					
ANR	900743	PrimaryExpression	"""ExecuteHost"""		900703	0					
ANR	900744	Argument	executeHost		900703	1					
ANR	900745	Identifier	executeHost		900703	0					
ANR	900746	ReturnStatement	return NULL ;	3694:49:81209:81220	900703	1	True				
ANR	900747	Identifier	NULL		900703	0					
ANR	900748	ExpressionStatement	"snprintf ( buf0 , 512 , ""Node = %d"" , node )"	3696:1:81226:81264	900703	4	True				
ANR	900749	CallExpression	"snprintf ( buf0 , 512 , ""Node = %d"" , node )"		900703	0					
ANR	900750	Callee	snprintf		900703	0					
ANR	900751	Identifier	snprintf		900703	0					
ANR	900752	ArgumentList	buf0		900703	1					
ANR	900753	Argument	buf0		900703	0					
ANR	900754	Identifier	buf0		900703	0					
ANR	900755	Argument	512		900703	1					
ANR	900756	PrimaryExpression	512		900703	0					
ANR	900757	Argument	"""Node = %d"""		900703	2					
ANR	900758	PrimaryExpression	"""Node = %d"""		900703	0					
ANR	900759	Argument	node		900703	3					
ANR	900760	Identifier	node		900703	0					
ANR	900761	ExpressionStatement	buf0 [ 511 ] = 0	3697:1:81267:81280	900703	5	True				
ANR	900762	AssignmentExpression	buf0 [ 511 ] = 0		900703	0		=			
ANR	900763	ArrayIndexing	buf0 [ 511 ]		900703	0					
ANR	900764	Identifier	buf0		900703	0					
ANR	900765	PrimaryExpression	511		900703	1					
ANR	900766	PrimaryExpression	0		900703	1					
ANR	900767	IfStatement	if ( ! myad -> Insert ( buf0 ) )		900703	6					
ANR	900768	Condition	! myad -> Insert ( buf0 )	3698:5:81287:81305	900703	0	True				
ANR	900769	UnaryOperationExpression	! myad -> Insert ( buf0 )		900703	0					
ANR	900770	UnaryOperator	!		900703	0					
ANR	900771	CallExpression	myad -> Insert ( buf0 )		900703	1					
ANR	900772	Callee	myad -> Insert		900703	0					
ANR	900773	PtrMemberAccess	myad -> Insert		900703	0					
ANR	900774	Identifier	myad		900703	0					
ANR	900775	Identifier	Insert		900703	1					
ANR	900776	ArgumentList	buf0		900703	1					
ANR	900777	Argument	buf0		900703	0					
ANR	900778	Identifier	buf0		900703	0					
ANR	900779	ReturnStatement	return NULL ;	3698:27:81309:81320	900703	1	True				
ANR	900780	Identifier	NULL		900703	0					
ANR	900781	ReturnStatement	return myad ;	3700:1:81324:81335	900703	7	True				
ANR	900782	Identifier	myad		900703	0					
ANR	900783	ReturnType	ClassAd *		900703	1					
ANR	900784	Identifier	NodeExecuteEvent :: toClassAd		900703	2					
ANR	900785	ParameterList			900703	3					
ANR	900786	CFGEntryNode	ENTRY		900703		True				
ANR	900787	CFGExitNode	EXIT		900703		True				
ANR	900788	Symbol	myad -> Assign		900703						
ANR	900789	Symbol	node		900703						
ANR	900790	Symbol	NULL		900703						
ANR	900791	Symbol	buf0		900703						
ANR	900792	Symbol	* myad		900703						
ANR	900793	Symbol	executeHost		900703						
ANR	900794	Symbol	myad -> Insert		900703						
ANR	900795	Symbol	myad		900703						
ANR	900796	Symbol	ULogEvent :: toClassAd		900703						
ANR	900797	Symbol	* buf0		900703						
ANR	900798	Function	NodeExecuteEvent :: initFromClassAd	3703:0:81340:81644							
ANR	900799	FunctionDef	NodeExecuteEvent :: initFromClassAd (ClassAd * ad)		900798	0					
ANR	900800	CompoundStatement		3705:0:81392:81644	900798	0					
ANR	900801	ExpressionStatement	ULogEvent :: initFromClassAd ( ad )	3706:1:81395:81425	900798	0	True				
ANR	900802	CallExpression	ULogEvent :: initFromClassAd ( ad )		900798	0					
ANR	900803	Callee	ULogEvent :: initFromClassAd		900798	0					
ANR	900804	Identifier	ULogEvent :: initFromClassAd		900798	0					
ANR	900805	ArgumentList	ad		900798	1					
ANR	900806	Argument	ad		900798	0					
ANR	900807	Identifier	ad		900798	0					
ANR	900808	IfStatement	if ( ! ad )		900798	1					
ANR	900809	Condition	! ad	3708:5:81433:81435	900798	0	True				
ANR	900810	UnaryOperationExpression	! ad		900798	0					
ANR	900811	UnaryOperator	!		900798	0					
ANR	900812	Identifier	ad		900798	1					
ANR	900813	ReturnStatement	return ;	3708:11:81439:81445	900798	1	True				
ANR	900814	IdentifierDeclStatement	char * mallocstr = NULL ;	3710:1:81449:81471	900798	2	True				
ANR	900815	IdentifierDecl	* mallocstr = NULL		900798	0					
ANR	900816	IdentifierDeclType	char *		900798	0					
ANR	900817	Identifier	mallocstr		900798	1					
ANR	900818	AssignmentExpression	* mallocstr = NULL		900798	2		=			
ANR	900819	Identifier	NULL		900798	0					
ANR	900820	Identifier	NULL		900798	1					
ANR	900821	ExpressionStatement	"ad -> LookupString ( ""ExecuteHost"" , & mallocstr )"	3711:1:81474:81517	900798	3	True				
ANR	900822	CallExpression	"ad -> LookupString ( ""ExecuteHost"" , & mallocstr )"		900798	0					
ANR	900823	Callee	ad -> LookupString		900798	0					
ANR	900824	PtrMemberAccess	ad -> LookupString		900798	0					
ANR	900825	Identifier	ad		900798	0					
ANR	900826	Identifier	LookupString		900798	1					
ANR	900827	ArgumentList	"""ExecuteHost"""		900798	1					
ANR	900828	Argument	"""ExecuteHost"""		900798	0					
ANR	900829	PrimaryExpression	"""ExecuteHost"""		900798	0					
ANR	900830	Argument	& mallocstr		900798	1					
ANR	900831	UnaryOperationExpression	& mallocstr		900798	0					
ANR	900832	UnaryOperator	&		900798	0					
ANR	900833	Identifier	mallocstr		900798	1					
ANR	900834	IfStatement	if ( mallocstr )		900798	4					
ANR	900835	Condition	mallocstr	3712:5:81524:81532	900798	0	True				
ANR	900836	Identifier	mallocstr		900798	0					
ANR	900837	CompoundStatement		8:17:143:143	900798	1					
ANR	900838	ExpressionStatement	setExecuteHost ( mallocstr )	3713:2:81540:81565	900798	0	True				
ANR	900839	CallExpression	setExecuteHost ( mallocstr )		900798	0					
ANR	900840	Callee	setExecuteHost		900798	0					
ANR	900841	Identifier	setExecuteHost		900798	0					
ANR	900842	ArgumentList	mallocstr		900798	1					
ANR	900843	Argument	mallocstr		900798	0					
ANR	900844	Identifier	mallocstr		900798	0					
ANR	900845	ExpressionStatement	free ( mallocstr )	3714:2:81569:81584	900798	1	True				
ANR	900846	CallExpression	free ( mallocstr )		900798	0					
ANR	900847	Callee	free		900798	0					
ANR	900848	Identifier	free		900798	0					
ANR	900849	ArgumentList	mallocstr		900798	1					
ANR	900850	Argument	mallocstr		900798	0					
ANR	900851	Identifier	mallocstr		900798	0					
ANR	900852	ExpressionStatement	mallocstr = NULL	3715:2:81588:81604	900798	2	True				
ANR	900853	AssignmentExpression	mallocstr = NULL		900798	0		=			
ANR	900854	Identifier	mallocstr		900798	0					
ANR	900855	Identifier	NULL		900798	1					
ANR	900856	ExpressionStatement	"ad -> LookupInteger ( ""Node"" , node )"	3718:1:81611:81642	900798	5	True				
ANR	900857	CallExpression	"ad -> LookupInteger ( ""Node"" , node )"		900798	0					
ANR	900858	Callee	ad -> LookupInteger		900798	0					
ANR	900859	PtrMemberAccess	ad -> LookupInteger		900798	0					
ANR	900860	Identifier	ad		900798	0					
ANR	900861	Identifier	LookupInteger		900798	1					
ANR	900862	ArgumentList	"""Node"""		900798	1					
ANR	900863	Argument	"""Node"""		900798	0					
ANR	900864	PrimaryExpression	"""Node"""		900798	0					
ANR	900865	Argument	node		900798	1					
ANR	900866	Identifier	node		900798	0					
ANR	900867	ReturnType	void		900798	1					
ANR	900868	Identifier	NodeExecuteEvent :: initFromClassAd		900798	2					
ANR	900869	ParameterList	ClassAd * ad		900798	3					
ANR	900870	Parameter	ClassAd * ad	3704:34:81379:81389	900798	0	True				
ANR	900871	ParameterType	ClassAd *		900798	0					
ANR	900872	Identifier	ad		900798	1					
ANR	900873	CFGEntryNode	ENTRY		900798		True				
ANR	900874	CFGExitNode	EXIT		900798		True				
ANR	900875	Symbol	node		900798						
ANR	900876	Symbol	& mallocstr		900798						
ANR	900877	Symbol	ad		900798						
ANR	900878	Symbol	NULL		900798						
ANR	900879	Symbol	mallocstr		900798						
ANR	900880	Function	NodeTerminatedEvent :: NodeTerminatedEvent	3722:0:81682:81800							
ANR	900881	FunctionDef	NodeTerminatedEvent :: NodeTerminatedEvent ()		900880	0					
ANR	900882	CompoundStatement		3723:0:81749:81800	900880	0					
ANR	900883	ExpressionStatement	eventNumber = ULOG_NODE_TERMINATED	3724:1:81752:81786	900880	0	True				
ANR	900884	AssignmentExpression	eventNumber = ULOG_NODE_TERMINATED		900880	0		=			
ANR	900885	Identifier	eventNumber		900880	0					
ANR	900886	Identifier	ULOG_NODE_TERMINATED		900880	1					
ANR	900887	ExpressionStatement	node = - 1	3725:1:81789:81798	900880	1	True				
ANR	900888	AssignmentExpression	node = - 1		900880	0		=			
ANR	900889	Identifier	node		900880	0					
ANR	900890	UnaryOperationExpression	- 1		900880	1					
ANR	900891	UnaryOperator	-		900880	0					
ANR	900892	PrimaryExpression	1		900880	1					
ANR	900893	Identifier	NodeTerminatedEvent :: NodeTerminatedEvent		900880	1					
ANR	900894	ParameterList			900880	2					
ANR	900895	CFGEntryNode	ENTRY		900880		True				
ANR	900896	CFGExitNode	EXIT		900880		True				
ANR	900897	Symbol	node		900880						
ANR	900898	Symbol	ULOG_NODE_TERMINATED		900880						
ANR	900899	Symbol	eventNumber		900880						
ANR	900900	Function	NodeTerminatedEvent :: ~NodeTerminatedEvent	3729:0:81804:81854							
ANR	900901	FunctionDef	NodeTerminatedEvent :: ~NodeTerminatedEvent ()		900900	0					
ANR	900902	CompoundStatement		3730:0:81852:81854	900900	0					
ANR	900903	Identifier	NodeTerminatedEvent :: ~NodeTerminatedEvent		900900	1					
ANR	900904	ParameterList			900900	2					
ANR	900905	CFGEntryNode	ENTRY		900900		True				
ANR	900906	CFGExitNode	EXIT		900900		True				
ANR	900907	Function	NodeTerminatedEvent :: writeEvent	3734:0:81858:82036							
ANR	900908	FunctionDef	NodeTerminatedEvent :: writeEvent (FILE * file)		900907	0					
ANR	900909	CompoundStatement		3736:0:81908:82036	900907	0					
ANR	900910	IfStatement	"if ( fprintf ( file , ""Node %d terminated.\\n"" , node ) < 0 )"		900907	0					
ANR	900911	Condition	"fprintf ( file , ""Node %d terminated.\\n"" , node ) < 0"	3737:5:81915:81962	900907	0	True				
ANR	900912	RelationalExpression	"fprintf ( file , ""Node %d terminated.\\n"" , node ) < 0"		900907	0		<			
ANR	900913	CallExpression	"fprintf ( file , ""Node %d terminated.\\n"" , node )"		900907	0					
ANR	900914	Callee	fprintf		900907	0					
ANR	900915	Identifier	fprintf		900907	0					
ANR	900916	ArgumentList	file		900907	1					
ANR	900917	Argument	file		900907	0					
ANR	900918	Identifier	file		900907	0					
ANR	900919	Argument	"""Node %d terminated.\\n"""		900907	1					
ANR	900920	PrimaryExpression	"""Node %d terminated.\\n"""		900907	0					
ANR	900921	Argument	node		900907	2					
ANR	900922	Identifier	node		900907	0					
ANR	900923	PrimaryExpression	0		900907	1					
ANR	900924	CompoundStatement		2:56:57:57	900907	1					
ANR	900925	ReturnStatement	return 0 ;	3738:2:81970:81978	900907	0	True				
ANR	900926	PrimaryExpression	0		900907	0					
ANR	900927	ReturnStatement	"return TerminatedEvent :: writeEvent ( file , ""Node"" ) ;"	3740:1:81984:82034	900907	1	True				
ANR	900928	CallExpression	"TerminatedEvent :: writeEvent ( file , ""Node"" )"		900907	0					
ANR	900929	Callee	TerminatedEvent :: writeEvent		900907	0					
ANR	900930	Identifier	TerminatedEvent :: writeEvent		900907	0					
ANR	900931	ArgumentList	file		900907	1					
ANR	900932	Argument	file		900907	0					
ANR	900933	Identifier	file		900907	0					
ANR	900934	Argument	"""Node"""		900907	1					
ANR	900935	PrimaryExpression	"""Node"""		900907	0					
ANR	900936	ReturnType	int		900907	1					
ANR	900937	Identifier	NodeTerminatedEvent :: writeEvent		900907	2					
ANR	900938	ParameterList	FILE * file		900907	3					
ANR	900939	Parameter	FILE * file	3735:33:81895:81904	900907	0	True				
ANR	900940	ParameterType	FILE *		900907	0					
ANR	900941	Identifier	file		900907	1					
ANR	900942	CFGEntryNode	ENTRY		900907		True				
ANR	900943	CFGExitNode	EXIT		900907		True				
ANR	900944	Symbol	node		900907						
ANR	900945	Symbol	file		900907						
ANR	900946	Symbol	fprintf		900907						
ANR	900947	Symbol	TerminatedEvent :: writeEvent		900907						
ANR	900948	Function	NodeTerminatedEvent :: readEvent	3744:0:82040:82217							
ANR	900949	FunctionDef	NodeTerminatedEvent :: readEvent (FILE * file)		900948	0					
ANR	900950	CompoundStatement		3746:0:82089:82217	900948	0					
ANR	900951	IfStatement	"if ( fscanf ( file , ""Node %d terminated."" , & node ) == EOF )"		900948	0					
ANR	900952	Condition	"fscanf ( file , ""Node %d terminated."" , & node ) == EOF"	3747:5:82096:82144	900948	0	True				
ANR	900953	EqualityExpression	"fscanf ( file , ""Node %d terminated."" , & node ) == EOF"		900948	0		==			
ANR	900954	CallExpression	"fscanf ( file , ""Node %d terminated."" , & node )"		900948	0					
ANR	900955	Callee	fscanf		900948	0					
ANR	900956	Identifier	fscanf		900948	0					
ANR	900957	ArgumentList	file		900948	1					
ANR	900958	Argument	file		900948	0					
ANR	900959	Identifier	file		900948	0					
ANR	900960	Argument	"""Node %d terminated."""		900948	1					
ANR	900961	PrimaryExpression	"""Node %d terminated."""		900948	0					
ANR	900962	Argument	& node		900948	2					
ANR	900963	UnaryOperationExpression	& node		900948	0					
ANR	900964	UnaryOperator	&		900948	0					
ANR	900965	Identifier	node		900948	1					
ANR	900966	Identifier	EOF		900948	1					
ANR	900967	CompoundStatement		2:57:58:58	900948	1					
ANR	900968	ReturnStatement	return 0 ;	3748:2:82152:82160	900948	0	True				
ANR	900969	PrimaryExpression	0		900948	0					
ANR	900970	ReturnStatement	"return TerminatedEvent :: readEvent ( file , ""Node"" ) ;"	3750:1:82166:82215	900948	1	True				
ANR	900971	CallExpression	"TerminatedEvent :: readEvent ( file , ""Node"" )"		900948	0					
ANR	900972	Callee	TerminatedEvent :: readEvent		900948	0					
ANR	900973	Identifier	TerminatedEvent :: readEvent		900948	0					
ANR	900974	ArgumentList	file		900948	1					
ANR	900975	Argument	file		900948	0					
ANR	900976	Identifier	file		900948	0					
ANR	900977	Argument	"""Node"""		900948	1					
ANR	900978	PrimaryExpression	"""Node"""		900948	0					
ANR	900979	ReturnType	int		900948	1					
ANR	900980	Identifier	NodeTerminatedEvent :: readEvent		900948	2					
ANR	900981	ParameterList	FILE * file		900948	3					
ANR	900982	Parameter	FILE * file	3745:32:82076:82085	900948	0	True				
ANR	900983	ParameterType	FILE *		900948	0					
ANR	900984	Identifier	file		900948	1					
ANR	900985	CFGEntryNode	ENTRY		900948		True				
ANR	900986	CFGExitNode	EXIT		900948		True				
ANR	900987	Symbol	& node		900948						
ANR	900988	Symbol	fscanf		900948						
ANR	900989	Symbol	file		900948						
ANR	900990	Symbol	TerminatedEvent :: readEvent		900948						
ANR	900991	Symbol	EOF		900948						
ANR	900992	Function	NodeTerminatedEvent :: toClassAd	3753:0:82220:84123							
ANR	900993	FunctionDef	NodeTerminatedEvent :: toClassAd ()		900992	0					
ANR	900994	CompoundStatement		3755:0:82266:84123	900992	0					
ANR	900995	IdentifierDeclStatement	ClassAd * myad = ULogEvent :: toClassAd ( ) ;	3756:1:82269:82307	900992	0	True				
ANR	900996	IdentifierDecl	* myad = ULogEvent :: toClassAd ( )		900992	0					
ANR	900997	IdentifierDeclType	ClassAd *		900992	0					
ANR	900998	Identifier	myad		900992	1					
ANR	900999	AssignmentExpression	* myad = ULogEvent :: toClassAd ( )		900992	2		=			
ANR	901000	Identifier	myad		900992	0					
ANR	901001	CallExpression	ULogEvent :: toClassAd ( )		900992	1					
ANR	901002	Callee	ULogEvent :: toClassAd		900992	0					
ANR	901003	Identifier	ULogEvent :: toClassAd		900992	0					
ANR	901004	ArgumentList			900992	1					
ANR	901005	IfStatement	if ( ! myad )		900992	1					
ANR	901006	Condition	! myad	3757:5:82314:82318	900992	0	True				
ANR	901007	UnaryOperationExpression	! myad		900992	0					
ANR	901008	UnaryOperator	!		900992	0					
ANR	901009	Identifier	myad		900992	1					
ANR	901010	ReturnStatement	return NULL ;	3757:13:82322:82333	900992	1	True				
ANR	901011	Identifier	NULL		900992	0					
ANR	901012	IdentifierDeclStatement	char buf0 [ 512 ] ;	3758:1:82336:82350	900992	2	True				
ANR	901013	IdentifierDecl	buf0 [ 512 ]		900992	0					
ANR	901014	IdentifierDeclType	char [ 512 ]		900992	0					
ANR	901015	Identifier	buf0		900992	1					
ANR	901016	PrimaryExpression	512		900992	2					
ANR	901017	ExpressionStatement	"snprintf ( buf0 , 512 , ""TerminatedNormally = %s"" , normal ? ""TRUE"" : ""FALSE"" )"	3760:1:82354:82427	900992	3	True				
ANR	901018	CallExpression	"snprintf ( buf0 , 512 , ""TerminatedNormally = %s"" , normal ? ""TRUE"" : ""FALSE"" )"		900992	0					
ANR	901019	Callee	snprintf		900992	0					
ANR	901020	Identifier	snprintf		900992	0					
ANR	901021	ArgumentList	buf0		900992	1					
ANR	901022	Argument	buf0		900992	0					
ANR	901023	Identifier	buf0		900992	0					
ANR	901024	Argument	512		900992	1					
ANR	901025	PrimaryExpression	512		900992	0					
ANR	901026	Argument	"""TerminatedNormally = %s"""		900992	2					
ANR	901027	PrimaryExpression	"""TerminatedNormally = %s"""		900992	0					
ANR	901028	Argument	"normal ? ""TRUE"" : ""FALSE"""		900992	3					
ANR	901029	ConditionalExpression	"normal ? ""TRUE"" : ""FALSE"""		900992	0					
ANR	901030	Condition	normal		900992	0					
ANR	901031	Identifier	normal		900992	0					
ANR	901032	PrimaryExpression	"""TRUE"""		900992	1					
ANR	901033	PrimaryExpression	"""FALSE"""		900992	2					
ANR	901034	ExpressionStatement	buf0 [ 511 ] = 0	3761:1:82430:82443	900992	4	True				
ANR	901035	AssignmentExpression	buf0 [ 511 ] = 0		900992	0		=			
ANR	901036	ArrayIndexing	buf0 [ 511 ]		900992	0					
ANR	901037	Identifier	buf0		900992	0					
ANR	901038	PrimaryExpression	511		900992	1					
ANR	901039	PrimaryExpression	0		900992	1					
ANR	901040	IfStatement	if ( ! myad -> Insert ( buf0 ) )		900992	5					
ANR	901041	Condition	! myad -> Insert ( buf0 )	3762:5:82450:82468	900992	0	True				
ANR	901042	UnaryOperationExpression	! myad -> Insert ( buf0 )		900992	0					
ANR	901043	UnaryOperator	!		900992	0					
ANR	901044	CallExpression	myad -> Insert ( buf0 )		900992	1					
ANR	901045	Callee	myad -> Insert		900992	0					
ANR	901046	PtrMemberAccess	myad -> Insert		900992	0					
ANR	901047	Identifier	myad		900992	0					
ANR	901048	Identifier	Insert		900992	1					
ANR	901049	ArgumentList	buf0		900992	1					
ANR	901050	Argument	buf0		900992	0					
ANR	901051	Identifier	buf0		900992	0					
ANR	901052	ReturnStatement	return NULL ;	3762:27:82472:82483	900992	1	True				
ANR	901053	Identifier	NULL		900992	0					
ANR	901054	ExpressionStatement	"snprintf ( buf0 , 512 , ""ReturnValue = %d"" , returnValue )"	3763:1:82486:82538	900992	6	True				
ANR	901055	CallExpression	"snprintf ( buf0 , 512 , ""ReturnValue = %d"" , returnValue )"		900992	0					
ANR	901056	Callee	snprintf		900992	0					
ANR	901057	Identifier	snprintf		900992	0					
ANR	901058	ArgumentList	buf0		900992	1					
ANR	901059	Argument	buf0		900992	0					
ANR	901060	Identifier	buf0		900992	0					
ANR	901061	Argument	512		900992	1					
ANR	901062	PrimaryExpression	512		900992	0					
ANR	901063	Argument	"""ReturnValue = %d"""		900992	2					
ANR	901064	PrimaryExpression	"""ReturnValue = %d"""		900992	0					
ANR	901065	Argument	returnValue		900992	3					
ANR	901066	Identifier	returnValue		900992	0					
ANR	901067	ExpressionStatement	buf0 [ 511 ] = 0	3764:1:82541:82554	900992	7	True				
ANR	901068	AssignmentExpression	buf0 [ 511 ] = 0		900992	0		=			
ANR	901069	ArrayIndexing	buf0 [ 511 ]		900992	0					
ANR	901070	Identifier	buf0		900992	0					
ANR	901071	PrimaryExpression	511		900992	1					
ANR	901072	PrimaryExpression	0		900992	1					
ANR	901073	IfStatement	if ( ! myad -> Insert ( buf0 ) )		900992	8					
ANR	901074	Condition	! myad -> Insert ( buf0 )	3765:5:82561:82579	900992	0	True				
ANR	901075	UnaryOperationExpression	! myad -> Insert ( buf0 )		900992	0					
ANR	901076	UnaryOperator	!		900992	0					
ANR	901077	CallExpression	myad -> Insert ( buf0 )		900992	1					
ANR	901078	Callee	myad -> Insert		900992	0					
ANR	901079	PtrMemberAccess	myad -> Insert		900992	0					
ANR	901080	Identifier	myad		900992	0					
ANR	901081	Identifier	Insert		900992	1					
ANR	901082	ArgumentList	buf0		900992	1					
ANR	901083	Argument	buf0		900992	0					
ANR	901084	Identifier	buf0		900992	0					
ANR	901085	ReturnStatement	return NULL ;	3765:27:82583:82594	900992	1	True				
ANR	901086	Identifier	NULL		900992	0					
ANR	901087	ExpressionStatement	"snprintf ( buf0 , 512 , ""TerminatedBySignal = %d"" , signalNumber )"	3766:1:82597:82657	900992	9	True				
ANR	901088	CallExpression	"snprintf ( buf0 , 512 , ""TerminatedBySignal = %d"" , signalNumber )"		900992	0					
ANR	901089	Callee	snprintf		900992	0					
ANR	901090	Identifier	snprintf		900992	0					
ANR	901091	ArgumentList	buf0		900992	1					
ANR	901092	Argument	buf0		900992	0					
ANR	901093	Identifier	buf0		900992	0					
ANR	901094	Argument	512		900992	1					
ANR	901095	PrimaryExpression	512		900992	0					
ANR	901096	Argument	"""TerminatedBySignal = %d"""		900992	2					
ANR	901097	PrimaryExpression	"""TerminatedBySignal = %d"""		900992	0					
ANR	901098	Argument	signalNumber		900992	3					
ANR	901099	Identifier	signalNumber		900992	0					
ANR	901100	ExpressionStatement	buf0 [ 511 ] = 0	3767:1:82660:82673	900992	10	True				
ANR	901101	AssignmentExpression	buf0 [ 511 ] = 0		900992	0		=			
ANR	901102	ArrayIndexing	buf0 [ 511 ]		900992	0					
ANR	901103	Identifier	buf0		900992	0					
ANR	901104	PrimaryExpression	511		900992	1					
ANR	901105	PrimaryExpression	0		900992	1					
ANR	901106	IfStatement	if ( ! myad -> Insert ( buf0 ) )		900992	11					
ANR	901107	Condition	! myad -> Insert ( buf0 )	3768:5:82680:82698	900992	0	True				
ANR	901108	UnaryOperationExpression	! myad -> Insert ( buf0 )		900992	0					
ANR	901109	UnaryOperator	!		900992	0					
ANR	901110	CallExpression	myad -> Insert ( buf0 )		900992	1					
ANR	901111	Callee	myad -> Insert		900992	0					
ANR	901112	PtrMemberAccess	myad -> Insert		900992	0					
ANR	901113	Identifier	myad		900992	0					
ANR	901114	Identifier	Insert		900992	1					
ANR	901115	ArgumentList	buf0		900992	1					
ANR	901116	Argument	buf0		900992	0					
ANR	901117	Identifier	buf0		900992	0					
ANR	901118	ReturnStatement	return NULL ;	3768:27:82702:82713	900992	1	True				
ANR	901119	Identifier	NULL		900992	0					
ANR	901120	IdentifierDeclStatement	const char * core = getCoreFile ( ) ;	3770:1:82717:82749	900992	12	True				
ANR	901121	IdentifierDecl	* core = getCoreFile ( )		900992	0					
ANR	901122	IdentifierDeclType	const char *		900992	0					
ANR	901123	Identifier	core		900992	1					
ANR	901124	AssignmentExpression	* core = getCoreFile ( )		900992	2		=			
ANR	901125	Identifier	core		900992	0					
ANR	901126	CallExpression	getCoreFile ( )		900992	1					
ANR	901127	Callee	getCoreFile		900992	0					
ANR	901128	Identifier	getCoreFile		900992	0					
ANR	901129	ArgumentList			900992	1					
ANR	901130	IfStatement	if ( core )		900992	13					
ANR	901131	Condition	core	3771:5:82756:82759	900992	0	True				
ANR	901132	Identifier	core		900992	0					
ANR	901133	CompoundStatement		18:2:500:513	900992	1					
ANR	901134	IdentifierDeclStatement	MyString buf3 ;	3772:2:82767:82780	900992	0	True				
ANR	901135	IdentifierDecl	buf3		900992	0					
ANR	901136	IdentifierDeclType	MyString		900992	0					
ANR	901137	Identifier	buf3		900992	1					
ANR	901138	ExpressionStatement	"buf3 . sprintf ( ""CoreFile = \\""%s\\"""" , core )"	3773:2:82784:82823	900992	1	True				
ANR	901139	CallExpression	"buf3 . sprintf ( ""CoreFile = \\""%s\\"""" , core )"		900992	0					
ANR	901140	Callee	buf3 . sprintf		900992	0					
ANR	901141	MemberAccess	buf3 . sprintf		900992	0					
ANR	901142	Identifier	buf3		900992	0					
ANR	901143	Identifier	sprintf		900992	1					
ANR	901144	ArgumentList	"""CoreFile = \\""%s\\"""""		900992	1					
ANR	901145	Argument	"""CoreFile = \\""%s\\"""""		900992	0					
ANR	901146	PrimaryExpression	"""CoreFile = \\""%s\\"""""		900992	0					
ANR	901147	Argument	core		900992	1					
ANR	901148	Identifier	core		900992	0					
ANR	901149	IfStatement	if ( ! myad -> Insert ( buf3 . Value ( ) ) )		900992	2					
ANR	901150	Condition	! myad -> Insert ( buf3 . Value ( ) )	3774:6:82831:82857	900992	0	True				
ANR	901151	UnaryOperationExpression	! myad -> Insert ( buf3 . Value ( ) )		900992	0					
ANR	901152	UnaryOperator	!		900992	0					
ANR	901153	CallExpression	myad -> Insert ( buf3 . Value ( ) )		900992	1					
ANR	901154	Callee	myad -> Insert		900992	0					
ANR	901155	PtrMemberAccess	myad -> Insert		900992	0					
ANR	901156	Identifier	myad		900992	0					
ANR	901157	Identifier	Insert		900992	1					
ANR	901158	ArgumentList	buf3 . Value ( )		900992	1					
ANR	901159	Argument	buf3 . Value ( )		900992	0					
ANR	901160	CallExpression	buf3 . Value ( )		900992	0					
ANR	901161	Callee	buf3 . Value		900992	0					
ANR	901162	MemberAccess	buf3 . Value		900992	0					
ANR	901163	Identifier	buf3		900992	0					
ANR	901164	Identifier	Value		900992	1					
ANR	901165	ArgumentList			900992	1					
ANR	901166	ReturnStatement	return NULL ;	3774:36:82861:82872	900992	1	True				
ANR	901167	Identifier	NULL		900992	0					
ANR	901168	IdentifierDeclStatement	char * rs = rusageToStr ( run_local_rusage ) ;	3777:1:82879:82919	900992	14	True				
ANR	901169	IdentifierDecl	* rs = rusageToStr ( run_local_rusage )		900992	0					
ANR	901170	IdentifierDeclType	char *		900992	0					
ANR	901171	Identifier	rs		900992	1					
ANR	901172	AssignmentExpression	* rs = rusageToStr ( run_local_rusage )		900992	2		=			
ANR	901173	Identifier	rs		900992	0					
ANR	901174	CallExpression	rusageToStr ( run_local_rusage )		900992	1					
ANR	901175	Callee	rusageToStr		900992	0					
ANR	901176	Identifier	rusageToStr		900992	0					
ANR	901177	ArgumentList	run_local_rusage		900992	1					
ANR	901178	Argument	run_local_rusage		900992	0					
ANR	901179	Identifier	run_local_rusage		900992	0					
ANR	901180	ExpressionStatement	"snprintf ( buf0 , 512 , ""RunLocalUsage = \\""%s\\"""" , rs )"	3778:1:82922:82971	900992	15	True				
ANR	901181	CallExpression	"snprintf ( buf0 , 512 , ""RunLocalUsage = \\""%s\\"""" , rs )"		900992	0					
ANR	901182	Callee	snprintf		900992	0					
ANR	901183	Identifier	snprintf		900992	0					
ANR	901184	ArgumentList	buf0		900992	1					
ANR	901185	Argument	buf0		900992	0					
ANR	901186	Identifier	buf0		900992	0					
ANR	901187	Argument	512		900992	1					
ANR	901188	PrimaryExpression	512		900992	0					
ANR	901189	Argument	"""RunLocalUsage = \\""%s\\"""""		900992	2					
ANR	901190	PrimaryExpression	"""RunLocalUsage = \\""%s\\"""""		900992	0					
ANR	901191	Argument	rs		900992	3					
ANR	901192	Identifier	rs		900992	0					
ANR	901193	ExpressionStatement	free ( rs )	3779:1:82974:82982	900992	16	True				
ANR	901194	CallExpression	free ( rs )		900992	0					
ANR	901195	Callee	free		900992	0					
ANR	901196	Identifier	free		900992	0					
ANR	901197	ArgumentList	rs		900992	1					
ANR	901198	Argument	rs		900992	0					
ANR	901199	Identifier	rs		900992	0					
ANR	901200	ExpressionStatement	buf0 [ 511 ] = 0	3780:1:82985:82998	900992	17	True				
ANR	901201	AssignmentExpression	buf0 [ 511 ] = 0		900992	0		=			
ANR	901202	ArrayIndexing	buf0 [ 511 ]		900992	0					
ANR	901203	Identifier	buf0		900992	0					
ANR	901204	PrimaryExpression	511		900992	1					
ANR	901205	PrimaryExpression	0		900992	1					
ANR	901206	IfStatement	if ( ! myad -> Insert ( buf0 ) )		900992	18					
ANR	901207	Condition	! myad -> Insert ( buf0 )	3781:5:83005:83023	900992	0	True				
ANR	901208	UnaryOperationExpression	! myad -> Insert ( buf0 )		900992	0					
ANR	901209	UnaryOperator	!		900992	0					
ANR	901210	CallExpression	myad -> Insert ( buf0 )		900992	1					
ANR	901211	Callee	myad -> Insert		900992	0					
ANR	901212	PtrMemberAccess	myad -> Insert		900992	0					
ANR	901213	Identifier	myad		900992	0					
ANR	901214	Identifier	Insert		900992	1					
ANR	901215	ArgumentList	buf0		900992	1					
ANR	901216	Argument	buf0		900992	0					
ANR	901217	Identifier	buf0		900992	0					
ANR	901218	ReturnStatement	return NULL ;	3781:27:83027:83038	900992	1	True				
ANR	901219	Identifier	NULL		900992	0					
ANR	901220	ExpressionStatement	rs = rusageToStr ( run_remote_rusage )	3782:1:83041:83076	900992	19	True				
ANR	901221	AssignmentExpression	rs = rusageToStr ( run_remote_rusage )		900992	0		=			
ANR	901222	Identifier	rs		900992	0					
ANR	901223	CallExpression	rusageToStr ( run_remote_rusage )		900992	1					
ANR	901224	Callee	rusageToStr		900992	0					
ANR	901225	Identifier	rusageToStr		900992	0					
ANR	901226	ArgumentList	run_remote_rusage		900992	1					
ANR	901227	Argument	run_remote_rusage		900992	0					
ANR	901228	Identifier	run_remote_rusage		900992	0					
ANR	901229	ExpressionStatement	"snprintf ( buf0 , 512 , ""RunRemoteUsage = \\""%s\\"""" , rs )"	3783:1:83079:83129	900992	20	True				
ANR	901230	CallExpression	"snprintf ( buf0 , 512 , ""RunRemoteUsage = \\""%s\\"""" , rs )"		900992	0					
ANR	901231	Callee	snprintf		900992	0					
ANR	901232	Identifier	snprintf		900992	0					
ANR	901233	ArgumentList	buf0		900992	1					
ANR	901234	Argument	buf0		900992	0					
ANR	901235	Identifier	buf0		900992	0					
ANR	901236	Argument	512		900992	1					
ANR	901237	PrimaryExpression	512		900992	0					
ANR	901238	Argument	"""RunRemoteUsage = \\""%s\\"""""		900992	2					
ANR	901239	PrimaryExpression	"""RunRemoteUsage = \\""%s\\"""""		900992	0					
ANR	901240	Argument	rs		900992	3					
ANR	901241	Identifier	rs		900992	0					
ANR	901242	ExpressionStatement	free ( rs )	3784:1:83132:83140	900992	21	True				
ANR	901243	CallExpression	free ( rs )		900992	0					
ANR	901244	Callee	free		900992	0					
ANR	901245	Identifier	free		900992	0					
ANR	901246	ArgumentList	rs		900992	1					
ANR	901247	Argument	rs		900992	0					
ANR	901248	Identifier	rs		900992	0					
ANR	901249	ExpressionStatement	buf0 [ 511 ] = 0	3785:1:83143:83156	900992	22	True				
ANR	901250	AssignmentExpression	buf0 [ 511 ] = 0		900992	0		=			
ANR	901251	ArrayIndexing	buf0 [ 511 ]		900992	0					
ANR	901252	Identifier	buf0		900992	0					
ANR	901253	PrimaryExpression	511		900992	1					
ANR	901254	PrimaryExpression	0		900992	1					
ANR	901255	IfStatement	if ( ! myad -> Insert ( buf0 ) )		900992	23					
ANR	901256	Condition	! myad -> Insert ( buf0 )	3786:5:83163:83181	900992	0	True				
ANR	901257	UnaryOperationExpression	! myad -> Insert ( buf0 )		900992	0					
ANR	901258	UnaryOperator	!		900992	0					
ANR	901259	CallExpression	myad -> Insert ( buf0 )		900992	1					
ANR	901260	Callee	myad -> Insert		900992	0					
ANR	901261	PtrMemberAccess	myad -> Insert		900992	0					
ANR	901262	Identifier	myad		900992	0					
ANR	901263	Identifier	Insert		900992	1					
ANR	901264	ArgumentList	buf0		900992	1					
ANR	901265	Argument	buf0		900992	0					
ANR	901266	Identifier	buf0		900992	0					
ANR	901267	ReturnStatement	return NULL ;	3786:27:83185:83196	900992	1	True				
ANR	901268	Identifier	NULL		900992	0					
ANR	901269	ExpressionStatement	rs = rusageToStr ( total_local_rusage )	3787:1:83199:83235	900992	24	True				
ANR	901270	AssignmentExpression	rs = rusageToStr ( total_local_rusage )		900992	0		=			
ANR	901271	Identifier	rs		900992	0					
ANR	901272	CallExpression	rusageToStr ( total_local_rusage )		900992	1					
ANR	901273	Callee	rusageToStr		900992	0					
ANR	901274	Identifier	rusageToStr		900992	0					
ANR	901275	ArgumentList	total_local_rusage		900992	1					
ANR	901276	Argument	total_local_rusage		900992	0					
ANR	901277	Identifier	total_local_rusage		900992	0					
ANR	901278	ExpressionStatement	"snprintf ( buf0 , 512 , ""TotalLocalUsage = \\""%s\\"""" , rs )"	3788:1:83238:83289	900992	25	True				
ANR	901279	CallExpression	"snprintf ( buf0 , 512 , ""TotalLocalUsage = \\""%s\\"""" , rs )"		900992	0					
ANR	901280	Callee	snprintf		900992	0					
ANR	901281	Identifier	snprintf		900992	0					
ANR	901282	ArgumentList	buf0		900992	1					
ANR	901283	Argument	buf0		900992	0					
ANR	901284	Identifier	buf0		900992	0					
ANR	901285	Argument	512		900992	1					
ANR	901286	PrimaryExpression	512		900992	0					
ANR	901287	Argument	"""TotalLocalUsage = \\""%s\\"""""		900992	2					
ANR	901288	PrimaryExpression	"""TotalLocalUsage = \\""%s\\"""""		900992	0					
ANR	901289	Argument	rs		900992	3					
ANR	901290	Identifier	rs		900992	0					
ANR	901291	ExpressionStatement	free ( rs )	3789:1:83292:83300	900992	26	True				
ANR	901292	CallExpression	free ( rs )		900992	0					
ANR	901293	Callee	free		900992	0					
ANR	901294	Identifier	free		900992	0					
ANR	901295	ArgumentList	rs		900992	1					
ANR	901296	Argument	rs		900992	0					
ANR	901297	Identifier	rs		900992	0					
ANR	901298	ExpressionStatement	buf0 [ 511 ] = 0	3790:1:83303:83316	900992	27	True				
ANR	901299	AssignmentExpression	buf0 [ 511 ] = 0		900992	0		=			
ANR	901300	ArrayIndexing	buf0 [ 511 ]		900992	0					
ANR	901301	Identifier	buf0		900992	0					
ANR	901302	PrimaryExpression	511		900992	1					
ANR	901303	PrimaryExpression	0		900992	1					
ANR	901304	IfStatement	if ( ! myad -> Insert ( buf0 ) )		900992	28					
ANR	901305	Condition	! myad -> Insert ( buf0 )	3791:5:83323:83341	900992	0	True				
ANR	901306	UnaryOperationExpression	! myad -> Insert ( buf0 )		900992	0					
ANR	901307	UnaryOperator	!		900992	0					
ANR	901308	CallExpression	myad -> Insert ( buf0 )		900992	1					
ANR	901309	Callee	myad -> Insert		900992	0					
ANR	901310	PtrMemberAccess	myad -> Insert		900992	0					
ANR	901311	Identifier	myad		900992	0					
ANR	901312	Identifier	Insert		900992	1					
ANR	901313	ArgumentList	buf0		900992	1					
ANR	901314	Argument	buf0		900992	0					
ANR	901315	Identifier	buf0		900992	0					
ANR	901316	ReturnStatement	return NULL ;	3791:27:83345:83356	900992	1	True				
ANR	901317	Identifier	NULL		900992	0					
ANR	901318	ExpressionStatement	rs = rusageToStr ( total_remote_rusage )	3792:1:83359:83396	900992	29	True				
ANR	901319	AssignmentExpression	rs = rusageToStr ( total_remote_rusage )		900992	0		=			
ANR	901320	Identifier	rs		900992	0					
ANR	901321	CallExpression	rusageToStr ( total_remote_rusage )		900992	1					
ANR	901322	Callee	rusageToStr		900992	0					
ANR	901323	Identifier	rusageToStr		900992	0					
ANR	901324	ArgumentList	total_remote_rusage		900992	1					
ANR	901325	Argument	total_remote_rusage		900992	0					
ANR	901326	Identifier	total_remote_rusage		900992	0					
ANR	901327	ExpressionStatement	"snprintf ( buf0 , 512 , ""TotalRemoteUsage = \\""%s\\"""" , rs )"	3793:1:83399:83451	900992	30	True				
ANR	901328	CallExpression	"snprintf ( buf0 , 512 , ""TotalRemoteUsage = \\""%s\\"""" , rs )"		900992	0					
ANR	901329	Callee	snprintf		900992	0					
ANR	901330	Identifier	snprintf		900992	0					
ANR	901331	ArgumentList	buf0		900992	1					
ANR	901332	Argument	buf0		900992	0					
ANR	901333	Identifier	buf0		900992	0					
ANR	901334	Argument	512		900992	1					
ANR	901335	PrimaryExpression	512		900992	0					
ANR	901336	Argument	"""TotalRemoteUsage = \\""%s\\"""""		900992	2					
ANR	901337	PrimaryExpression	"""TotalRemoteUsage = \\""%s\\"""""		900992	0					
ANR	901338	Argument	rs		900992	3					
ANR	901339	Identifier	rs		900992	0					
ANR	901340	ExpressionStatement	free ( rs )	3794:1:83454:83462	900992	31	True				
ANR	901341	CallExpression	free ( rs )		900992	0					
ANR	901342	Callee	free		900992	0					
ANR	901343	Identifier	free		900992	0					
ANR	901344	ArgumentList	rs		900992	1					
ANR	901345	Argument	rs		900992	0					
ANR	901346	Identifier	rs		900992	0					
ANR	901347	ExpressionStatement	buf0 [ 511 ] = 0	3795:1:83465:83478	900992	32	True				
ANR	901348	AssignmentExpression	buf0 [ 511 ] = 0		900992	0		=			
ANR	901349	ArrayIndexing	buf0 [ 511 ]		900992	0					
ANR	901350	Identifier	buf0		900992	0					
ANR	901351	PrimaryExpression	511		900992	1					
ANR	901352	PrimaryExpression	0		900992	1					
ANR	901353	IfStatement	if ( ! myad -> Insert ( buf0 ) )		900992	33					
ANR	901354	Condition	! myad -> Insert ( buf0 )	3796:5:83485:83503	900992	0	True				
ANR	901355	UnaryOperationExpression	! myad -> Insert ( buf0 )		900992	0					
ANR	901356	UnaryOperator	!		900992	0					
ANR	901357	CallExpression	myad -> Insert ( buf0 )		900992	1					
ANR	901358	Callee	myad -> Insert		900992	0					
ANR	901359	PtrMemberAccess	myad -> Insert		900992	0					
ANR	901360	Identifier	myad		900992	0					
ANR	901361	Identifier	Insert		900992	1					
ANR	901362	ArgumentList	buf0		900992	1					
ANR	901363	Argument	buf0		900992	0					
ANR	901364	Identifier	buf0		900992	0					
ANR	901365	ReturnStatement	return NULL ;	3796:27:83507:83518	900992	1	True				
ANR	901366	Identifier	NULL		900992	0					
ANR	901367	ExpressionStatement	"snprintf ( buf0 , 512 , ""SentBytes = %f"" , sent_bytes )"	3798:1:83522:83571	900992	34	True				
ANR	901368	CallExpression	"snprintf ( buf0 , 512 , ""SentBytes = %f"" , sent_bytes )"		900992	0					
ANR	901369	Callee	snprintf		900992	0					
ANR	901370	Identifier	snprintf		900992	0					
ANR	901371	ArgumentList	buf0		900992	1					
ANR	901372	Argument	buf0		900992	0					
ANR	901373	Identifier	buf0		900992	0					
ANR	901374	Argument	512		900992	1					
ANR	901375	PrimaryExpression	512		900992	0					
ANR	901376	Argument	"""SentBytes = %f"""		900992	2					
ANR	901377	PrimaryExpression	"""SentBytes = %f"""		900992	0					
ANR	901378	Argument	sent_bytes		900992	3					
ANR	901379	Identifier	sent_bytes		900992	0					
ANR	901380	ExpressionStatement	buf0 [ 511 ] = 0	3799:1:83574:83587	900992	35	True				
ANR	901381	AssignmentExpression	buf0 [ 511 ] = 0		900992	0		=			
ANR	901382	ArrayIndexing	buf0 [ 511 ]		900992	0					
ANR	901383	Identifier	buf0		900992	0					
ANR	901384	PrimaryExpression	511		900992	1					
ANR	901385	PrimaryExpression	0		900992	1					
ANR	901386	IfStatement	if ( ! myad -> Insert ( buf0 ) )		900992	36					
ANR	901387	Condition	! myad -> Insert ( buf0 )	3800:5:83594:83612	900992	0	True				
ANR	901388	UnaryOperationExpression	! myad -> Insert ( buf0 )		900992	0					
ANR	901389	UnaryOperator	!		900992	0					
ANR	901390	CallExpression	myad -> Insert ( buf0 )		900992	1					
ANR	901391	Callee	myad -> Insert		900992	0					
ANR	901392	PtrMemberAccess	myad -> Insert		900992	0					
ANR	901393	Identifier	myad		900992	0					
ANR	901394	Identifier	Insert		900992	1					
ANR	901395	ArgumentList	buf0		900992	1					
ANR	901396	Argument	buf0		900992	0					
ANR	901397	Identifier	buf0		900992	0					
ANR	901398	ReturnStatement	return NULL ;	3800:27:83616:83627	900992	1	True				
ANR	901399	Identifier	NULL		900992	0					
ANR	901400	ExpressionStatement	"snprintf ( buf0 , 512 , ""ReceivedBytes = %f"" , recvd_bytes )"	3801:1:83630:83684	900992	37	True				
ANR	901401	CallExpression	"snprintf ( buf0 , 512 , ""ReceivedBytes = %f"" , recvd_bytes )"		900992	0					
ANR	901402	Callee	snprintf		900992	0					
ANR	901403	Identifier	snprintf		900992	0					
ANR	901404	ArgumentList	buf0		900992	1					
ANR	901405	Argument	buf0		900992	0					
ANR	901406	Identifier	buf0		900992	0					
ANR	901407	Argument	512		900992	1					
ANR	901408	PrimaryExpression	512		900992	0					
ANR	901409	Argument	"""ReceivedBytes = %f"""		900992	2					
ANR	901410	PrimaryExpression	"""ReceivedBytes = %f"""		900992	0					
ANR	901411	Argument	recvd_bytes		900992	3					
ANR	901412	Identifier	recvd_bytes		900992	0					
ANR	901413	ExpressionStatement	buf0 [ 511 ] = 0	3802:1:83687:83700	900992	38	True				
ANR	901414	AssignmentExpression	buf0 [ 511 ] = 0		900992	0		=			
ANR	901415	ArrayIndexing	buf0 [ 511 ]		900992	0					
ANR	901416	Identifier	buf0		900992	0					
ANR	901417	PrimaryExpression	511		900992	1					
ANR	901418	PrimaryExpression	0		900992	1					
ANR	901419	IfStatement	if ( ! myad -> Insert ( buf0 ) )		900992	39					
ANR	901420	Condition	! myad -> Insert ( buf0 )	3803:5:83707:83725	900992	0	True				
ANR	901421	UnaryOperationExpression	! myad -> Insert ( buf0 )		900992	0					
ANR	901422	UnaryOperator	!		900992	0					
ANR	901423	CallExpression	myad -> Insert ( buf0 )		900992	1					
ANR	901424	Callee	myad -> Insert		900992	0					
ANR	901425	PtrMemberAccess	myad -> Insert		900992	0					
ANR	901426	Identifier	myad		900992	0					
ANR	901427	Identifier	Insert		900992	1					
ANR	901428	ArgumentList	buf0		900992	1					
ANR	901429	Argument	buf0		900992	0					
ANR	901430	Identifier	buf0		900992	0					
ANR	901431	ReturnStatement	return NULL ;	3803:27:83729:83740	900992	1	True				
ANR	901432	Identifier	NULL		900992	0					
ANR	901433	ExpressionStatement	"snprintf ( buf0 , 512 , ""TotalSentBytes = %f"" , total_sent_bytes )"	3804:1:83743:83803	900992	40	True				
ANR	901434	CallExpression	"snprintf ( buf0 , 512 , ""TotalSentBytes = %f"" , total_sent_bytes )"		900992	0					
ANR	901435	Callee	snprintf		900992	0					
ANR	901436	Identifier	snprintf		900992	0					
ANR	901437	ArgumentList	buf0		900992	1					
ANR	901438	Argument	buf0		900992	0					
ANR	901439	Identifier	buf0		900992	0					
ANR	901440	Argument	512		900992	1					
ANR	901441	PrimaryExpression	512		900992	0					
ANR	901442	Argument	"""TotalSentBytes = %f"""		900992	2					
ANR	901443	PrimaryExpression	"""TotalSentBytes = %f"""		900992	0					
ANR	901444	Argument	total_sent_bytes		900992	3					
ANR	901445	Identifier	total_sent_bytes		900992	0					
ANR	901446	ExpressionStatement	buf0 [ 511 ] = 0	3805:1:83806:83819	900992	41	True				
ANR	901447	AssignmentExpression	buf0 [ 511 ] = 0		900992	0		=			
ANR	901448	ArrayIndexing	buf0 [ 511 ]		900992	0					
ANR	901449	Identifier	buf0		900992	0					
ANR	901450	PrimaryExpression	511		900992	1					
ANR	901451	PrimaryExpression	0		900992	1					
ANR	901452	IfStatement	if ( ! myad -> Insert ( buf0 ) )		900992	42					
ANR	901453	Condition	! myad -> Insert ( buf0 )	3806:5:83826:83844	900992	0	True				
ANR	901454	UnaryOperationExpression	! myad -> Insert ( buf0 )		900992	0					
ANR	901455	UnaryOperator	!		900992	0					
ANR	901456	CallExpression	myad -> Insert ( buf0 )		900992	1					
ANR	901457	Callee	myad -> Insert		900992	0					
ANR	901458	PtrMemberAccess	myad -> Insert		900992	0					
ANR	901459	Identifier	myad		900992	0					
ANR	901460	Identifier	Insert		900992	1					
ANR	901461	ArgumentList	buf0		900992	1					
ANR	901462	Argument	buf0		900992	0					
ANR	901463	Identifier	buf0		900992	0					
ANR	901464	ReturnStatement	return NULL ;	3806:27:83848:83859	900992	1	True				
ANR	901465	Identifier	NULL		900992	0					
ANR	901466	ExpressionStatement	"snprintf ( buf0 , 512 , ""TotalReceivedBytes = %f"" , total_recvd_bytes )"	3807:1:83862:83927	900992	43	True				
ANR	901467	CallExpression	"snprintf ( buf0 , 512 , ""TotalReceivedBytes = %f"" , total_recvd_bytes )"		900992	0					
ANR	901468	Callee	snprintf		900992	0					
ANR	901469	Identifier	snprintf		900992	0					
ANR	901470	ArgumentList	buf0		900992	1					
ANR	901471	Argument	buf0		900992	0					
ANR	901472	Identifier	buf0		900992	0					
ANR	901473	Argument	512		900992	1					
ANR	901474	PrimaryExpression	512		900992	0					
ANR	901475	Argument	"""TotalReceivedBytes = %f"""		900992	2					
ANR	901476	PrimaryExpression	"""TotalReceivedBytes = %f"""		900992	0					
ANR	901477	Argument	total_recvd_bytes		900992	3					
ANR	901478	Identifier	total_recvd_bytes		900992	0					
ANR	901479	ExpressionStatement	buf0 [ 511 ] = 0	3808:1:83930:83943	900992	44	True				
ANR	901480	AssignmentExpression	buf0 [ 511 ] = 0		900992	0		=			
ANR	901481	ArrayIndexing	buf0 [ 511 ]		900992	0					
ANR	901482	Identifier	buf0		900992	0					
ANR	901483	PrimaryExpression	511		900992	1					
ANR	901484	PrimaryExpression	0		900992	1					
ANR	901485	IfStatement	if ( ! myad -> Insert ( buf0 ) )		900992	45					
ANR	901486	Condition	! myad -> Insert ( buf0 )	3809:5:83950:83968	900992	0	True				
ANR	901487	UnaryOperationExpression	! myad -> Insert ( buf0 )		900992	0					
ANR	901488	UnaryOperator	!		900992	0					
ANR	901489	CallExpression	myad -> Insert ( buf0 )		900992	1					
ANR	901490	Callee	myad -> Insert		900992	0					
ANR	901491	PtrMemberAccess	myad -> Insert		900992	0					
ANR	901492	Identifier	myad		900992	0					
ANR	901493	Identifier	Insert		900992	1					
ANR	901494	ArgumentList	buf0		900992	1					
ANR	901495	Argument	buf0		900992	0					
ANR	901496	Identifier	buf0		900992	0					
ANR	901497	ReturnStatement	return NULL ;	3809:27:83972:83983	900992	1	True				
ANR	901498	Identifier	NULL		900992	0					
ANR	901499	IfStatement	if ( node >= 0 )		900992	46					
ANR	901500	Condition	node >= 0	3811:5:83991:83999	900992	0	True				
ANR	901501	RelationalExpression	node >= 0		900992	0		>=			
ANR	901502	Identifier	node		900992	0					
ANR	901503	PrimaryExpression	0		900992	1					
ANR	901504	CompoundStatement		57:17:1736:1736	900992	1					
ANR	901505	ExpressionStatement	"snprintf ( buf0 , 512 , ""Node = %d"" , node )"	3812:2:84007:84045	900992	0	True				
ANR	901506	CallExpression	"snprintf ( buf0 , 512 , ""Node = %d"" , node )"		900992	0					
ANR	901507	Callee	snprintf		900992	0					
ANR	901508	Identifier	snprintf		900992	0					
ANR	901509	ArgumentList	buf0		900992	1					
ANR	901510	Argument	buf0		900992	0					
ANR	901511	Identifier	buf0		900992	0					
ANR	901512	Argument	512		900992	1					
ANR	901513	PrimaryExpression	512		900992	0					
ANR	901514	Argument	"""Node = %d"""		900992	2					
ANR	901515	PrimaryExpression	"""Node = %d"""		900992	0					
ANR	901516	Argument	node		900992	3					
ANR	901517	Identifier	node		900992	0					
ANR	901518	ExpressionStatement	buf0 [ 511 ] = 0	3813:2:84049:84062	900992	1	True				
ANR	901519	AssignmentExpression	buf0 [ 511 ] = 0		900992	0		=			
ANR	901520	ArrayIndexing	buf0 [ 511 ]		900992	0					
ANR	901521	Identifier	buf0		900992	0					
ANR	901522	PrimaryExpression	511		900992	1					
ANR	901523	PrimaryExpression	0		900992	1					
ANR	901524	IfStatement	if ( ! myad -> Insert ( buf0 ) )		900992	2					
ANR	901525	Condition	! myad -> Insert ( buf0 )	3814:6:84070:84088	900992	0	True				
ANR	901526	UnaryOperationExpression	! myad -> Insert ( buf0 )		900992	0					
ANR	901527	UnaryOperator	!		900992	0					
ANR	901528	CallExpression	myad -> Insert ( buf0 )		900992	1					
ANR	901529	Callee	myad -> Insert		900992	0					
ANR	901530	PtrMemberAccess	myad -> Insert		900992	0					
ANR	901531	Identifier	myad		900992	0					
ANR	901532	Identifier	Insert		900992	1					
ANR	901533	ArgumentList	buf0		900992	1					
ANR	901534	Argument	buf0		900992	0					
ANR	901535	Identifier	buf0		900992	0					
ANR	901536	ReturnStatement	return NULL ;	3814:28:84092:84103	900992	1	True				
ANR	901537	Identifier	NULL		900992	0					
ANR	901538	ReturnStatement	return myad ;	3817:1:84110:84121	900992	47	True				
ANR	901539	Identifier	myad		900992	0					
ANR	901540	ReturnType	ClassAd *		900992	1					
ANR	901541	Identifier	NodeTerminatedEvent :: toClassAd		900992	2					
ANR	901542	ParameterList			900992	3					
ANR	901543	CFGEntryNode	ENTRY		900992		True				
ANR	901544	CFGExitNode	EXIT		900992		True				
ANR	901545	Symbol	rusageToStr		900992						
ANR	901546	Symbol	rs		900992						
ANR	901547	Symbol	run_local_rusage		900992						
ANR	901548	Symbol	returnValue		900992						
ANR	901549	Symbol	myad -> Insert		900992						
ANR	901550	Symbol	getCoreFile		900992						
ANR	901551	Symbol	buf3		900992						
ANR	901552	Symbol	* buf0		900992						
ANR	901553	Symbol	sent_bytes		900992						
ANR	901554	Symbol	recvd_bytes		900992						
ANR	901555	Symbol	run_remote_rusage		900992						
ANR	901556	Symbol	normal		900992						
ANR	901557	Symbol	NULL		900992						
ANR	901558	Symbol	total_sent_bytes		900992						
ANR	901559	Symbol	* myad		900992						
ANR	901560	Symbol	total_local_rusage		900992						
ANR	901561	Symbol	buf3 . Value		900992						
ANR	901562	Symbol	ULogEvent :: toClassAd		900992						
ANR	901563	Symbol	signalNumber		900992						
ANR	901564	Symbol	core		900992						
ANR	901565	Symbol	node		900992						
ANR	901566	Symbol	buf0		900992						
ANR	901567	Symbol	total_recvd_bytes		900992						
ANR	901568	Symbol	myad		900992						
ANR	901569	Symbol	total_remote_rusage		900992						
ANR	901570	Function	NodeTerminatedEvent :: initFromClassAd	3820:0:84126:85282							
ANR	901571	FunctionDef	NodeTerminatedEvent :: initFromClassAd (ClassAd * ad)		901570	0					
ANR	901572	CompoundStatement		3822:0:84181:85282	901570	0					
ANR	901573	ExpressionStatement	ULogEvent :: initFromClassAd ( ad )	3823:1:84184:84214	901570	0	True				
ANR	901574	CallExpression	ULogEvent :: initFromClassAd ( ad )		901570	0					
ANR	901575	Callee	ULogEvent :: initFromClassAd		901570	0					
ANR	901576	Identifier	ULogEvent :: initFromClassAd		901570	0					
ANR	901577	ArgumentList	ad		901570	1					
ANR	901578	Argument	ad		901570	0					
ANR	901579	Identifier	ad		901570	0					
ANR	901580	IfStatement	if ( ! ad )		901570	1					
ANR	901581	Condition	! ad	3825:5:84222:84224	901570	0	True				
ANR	901582	UnaryOperationExpression	! ad		901570	0					
ANR	901583	UnaryOperator	!		901570	0					
ANR	901584	Identifier	ad		901570	1					
ANR	901585	ReturnStatement	return ;	3825:11:84228:84234	901570	1	True				
ANR	901586	IdentifierDeclStatement	int reallybool ;	3827:1:84238:84252	901570	2	True				
ANR	901587	IdentifierDecl	reallybool		901570	0					
ANR	901588	IdentifierDeclType	int		901570	0					
ANR	901589	Identifier	reallybool		901570	1					
ANR	901590	IfStatement	"if ( ad -> LookupInteger ( ""TerminatedNormally"" , reallybool ) )"		901570	3					
ANR	901591	Condition	"ad -> LookupInteger ( ""TerminatedNormally"" , reallybool )"	3828:5:84259:84309	901570	0	True				
ANR	901592	CallExpression	"ad -> LookupInteger ( ""TerminatedNormally"" , reallybool )"		901570	0					
ANR	901593	Callee	ad -> LookupInteger		901570	0					
ANR	901594	PtrMemberAccess	ad -> LookupInteger		901570	0					
ANR	901595	Identifier	ad		901570	0					
ANR	901596	Identifier	LookupInteger		901570	1					
ANR	901597	ArgumentList	"""TerminatedNormally"""		901570	1					
ANR	901598	Argument	"""TerminatedNormally"""		901570	0					
ANR	901599	PrimaryExpression	"""TerminatedNormally"""		901570	0					
ANR	901600	Argument	reallybool		901570	1					
ANR	901601	Identifier	reallybool		901570	0					
ANR	901602	CompoundStatement		7:59:131:131	901570	1					
ANR	901603	ExpressionStatement	normal = reallybool ? TRUE : FALSE	3829:2:84317:84351	901570	0	True				
ANR	901604	AssignmentExpression	normal = reallybool ? TRUE : FALSE		901570	0		=			
ANR	901605	Identifier	normal		901570	0					
ANR	901606	ConditionalExpression	reallybool ? TRUE : FALSE		901570	1					
ANR	901607	Condition	reallybool		901570	0					
ANR	901608	Identifier	reallybool		901570	0					
ANR	901609	Identifier	TRUE		901570	1					
ANR	901610	Identifier	FALSE		901570	2					
ANR	901611	ExpressionStatement	"ad -> LookupInteger ( ""ReturnValue"" , returnValue )"	3832:1:84358:84403	901570	4	True				
ANR	901612	CallExpression	"ad -> LookupInteger ( ""ReturnValue"" , returnValue )"		901570	0					
ANR	901613	Callee	ad -> LookupInteger		901570	0					
ANR	901614	PtrMemberAccess	ad -> LookupInteger		901570	0					
ANR	901615	Identifier	ad		901570	0					
ANR	901616	Identifier	LookupInteger		901570	1					
ANR	901617	ArgumentList	"""ReturnValue"""		901570	1					
ANR	901618	Argument	"""ReturnValue"""		901570	0					
ANR	901619	PrimaryExpression	"""ReturnValue"""		901570	0					
ANR	901620	Argument	returnValue		901570	1					
ANR	901621	Identifier	returnValue		901570	0					
ANR	901622	ExpressionStatement	"ad -> LookupInteger ( ""TerminatedBySignal"" , signalNumber )"	3833:1:84406:84459	901570	5	True				
ANR	901623	CallExpression	"ad -> LookupInteger ( ""TerminatedBySignal"" , signalNumber )"		901570	0					
ANR	901624	Callee	ad -> LookupInteger		901570	0					
ANR	901625	PtrMemberAccess	ad -> LookupInteger		901570	0					
ANR	901626	Identifier	ad		901570	0					
ANR	901627	Identifier	LookupInteger		901570	1					
ANR	901628	ArgumentList	"""TerminatedBySignal"""		901570	1					
ANR	901629	Argument	"""TerminatedBySignal"""		901570	0					
ANR	901630	PrimaryExpression	"""TerminatedBySignal"""		901570	0					
ANR	901631	Argument	signalNumber		901570	1					
ANR	901632	Identifier	signalNumber		901570	0					
ANR	901633	IdentifierDeclStatement	char * multi = NULL ;	3835:1:84463:84481	901570	6	True				
ANR	901634	IdentifierDecl	* multi = NULL		901570	0					
ANR	901635	IdentifierDeclType	char *		901570	0					
ANR	901636	Identifier	multi		901570	1					
ANR	901637	AssignmentExpression	* multi = NULL		901570	2		=			
ANR	901638	Identifier	NULL		901570	0					
ANR	901639	Identifier	NULL		901570	1					
ANR	901640	ExpressionStatement	"ad -> LookupString ( ""CoreFile"" , & multi )"	3836:1:84484:84520	901570	7	True				
ANR	901641	CallExpression	"ad -> LookupString ( ""CoreFile"" , & multi )"		901570	0					
ANR	901642	Callee	ad -> LookupString		901570	0					
ANR	901643	PtrMemberAccess	ad -> LookupString		901570	0					
ANR	901644	Identifier	ad		901570	0					
ANR	901645	Identifier	LookupString		901570	1					
ANR	901646	ArgumentList	"""CoreFile"""		901570	1					
ANR	901647	Argument	"""CoreFile"""		901570	0					
ANR	901648	PrimaryExpression	"""CoreFile"""		901570	0					
ANR	901649	Argument	& multi		901570	1					
ANR	901650	UnaryOperationExpression	& multi		901570	0					
ANR	901651	UnaryOperator	&		901570	0					
ANR	901652	Identifier	multi		901570	1					
ANR	901653	IfStatement	if ( multi )		901570	8					
ANR	901654	Condition	multi	3837:5:84527:84531	901570	0	True				
ANR	901655	Identifier	multi		901570	0					
ANR	901656	CompoundStatement		16:13:353:353	901570	1					
ANR	901657	ExpressionStatement	setCoreFile ( multi )	3838:2:84539:84557	901570	0	True				
ANR	901658	CallExpression	setCoreFile ( multi )		901570	0					
ANR	901659	Callee	setCoreFile		901570	0					
ANR	901660	Identifier	setCoreFile		901570	0					
ANR	901661	ArgumentList	multi		901570	1					
ANR	901662	Argument	multi		901570	0					
ANR	901663	Identifier	multi		901570	0					
ANR	901664	ExpressionStatement	free ( multi )	3839:2:84561:84572	901570	1	True				
ANR	901665	CallExpression	free ( multi )		901570	0					
ANR	901666	Callee	free		901570	0					
ANR	901667	Identifier	free		901570	0					
ANR	901668	ArgumentList	multi		901570	1					
ANR	901669	Argument	multi		901570	0					
ANR	901670	Identifier	multi		901570	0					
ANR	901671	ExpressionStatement	multi = NULL	3840:2:84576:84588	901570	2	True				
ANR	901672	AssignmentExpression	multi = NULL		901570	0		=			
ANR	901673	Identifier	multi		901570	0					
ANR	901674	Identifier	NULL		901570	1					
ANR	901675	IfStatement	"if ( ad -> LookupString ( ""RunLocalUsage"" , & multi ) )"		901570	9					
ANR	901676	Condition	"ad -> LookupString ( ""RunLocalUsage"" , & multi )"	3843:5:84599:84639	901570	0	True				
ANR	901677	CallExpression	"ad -> LookupString ( ""RunLocalUsage"" , & multi )"		901570	0					
ANR	901678	Callee	ad -> LookupString		901570	0					
ANR	901679	PtrMemberAccess	ad -> LookupString		901570	0					
ANR	901680	Identifier	ad		901570	0					
ANR	901681	Identifier	LookupString		901570	1					
ANR	901682	ArgumentList	"""RunLocalUsage"""		901570	1					
ANR	901683	Argument	"""RunLocalUsage"""		901570	0					
ANR	901684	PrimaryExpression	"""RunLocalUsage"""		901570	0					
ANR	901685	Argument	& multi		901570	1					
ANR	901686	UnaryOperationExpression	& multi		901570	0					
ANR	901687	UnaryOperator	&		901570	0					
ANR	901688	Identifier	multi		901570	1					
ANR	901689	CompoundStatement		22:49:461:461	901570	1					
ANR	901690	ExpressionStatement	"strToRusage ( multi , run_local_rusage )"	3844:2:84647:84683	901570	0	True				
ANR	901691	CallExpression	"strToRusage ( multi , run_local_rusage )"		901570	0					
ANR	901692	Callee	strToRusage		901570	0					
ANR	901693	Identifier	strToRusage		901570	0					
ANR	901694	ArgumentList	multi		901570	1					
ANR	901695	Argument	multi		901570	0					
ANR	901696	Identifier	multi		901570	0					
ANR	901697	Argument	run_local_rusage		901570	1					
ANR	901698	Identifier	run_local_rusage		901570	0					
ANR	901699	ExpressionStatement	free ( multi )	3845:2:84687:84698	901570	1	True				
ANR	901700	CallExpression	free ( multi )		901570	0					
ANR	901701	Callee	free		901570	0					
ANR	901702	Identifier	free		901570	0					
ANR	901703	ArgumentList	multi		901570	1					
ANR	901704	Argument	multi		901570	0					
ANR	901705	Identifier	multi		901570	0					
ANR	901706	IfStatement	"if ( ad -> LookupString ( ""RunRemoteUsage"" , & multi ) )"		901570	10					
ANR	901707	Condition	"ad -> LookupString ( ""RunRemoteUsage"" , & multi )"	3847:5:84708:84749	901570	0	True				
ANR	901708	CallExpression	"ad -> LookupString ( ""RunRemoteUsage"" , & multi )"		901570	0					
ANR	901709	Callee	ad -> LookupString		901570	0					
ANR	901710	PtrMemberAccess	ad -> LookupString		901570	0					
ANR	901711	Identifier	ad		901570	0					
ANR	901712	Identifier	LookupString		901570	1					
ANR	901713	ArgumentList	"""RunRemoteUsage"""		901570	1					
ANR	901714	Argument	"""RunRemoteUsage"""		901570	0					
ANR	901715	PrimaryExpression	"""RunRemoteUsage"""		901570	0					
ANR	901716	Argument	& multi		901570	1					
ANR	901717	UnaryOperationExpression	& multi		901570	0					
ANR	901718	UnaryOperator	&		901570	0					
ANR	901719	Identifier	multi		901570	1					
ANR	901720	CompoundStatement		26:50:571:571	901570	1					
ANR	901721	ExpressionStatement	"strToRusage ( multi , run_remote_rusage )"	3848:2:84757:84794	901570	0	True				
ANR	901722	CallExpression	"strToRusage ( multi , run_remote_rusage )"		901570	0					
ANR	901723	Callee	strToRusage		901570	0					
ANR	901724	Identifier	strToRusage		901570	0					
ANR	901725	ArgumentList	multi		901570	1					
ANR	901726	Argument	multi		901570	0					
ANR	901727	Identifier	multi		901570	0					
ANR	901728	Argument	run_remote_rusage		901570	1					
ANR	901729	Identifier	run_remote_rusage		901570	0					
ANR	901730	ExpressionStatement	free ( multi )	3849:2:84798:84809	901570	1	True				
ANR	901731	CallExpression	free ( multi )		901570	0					
ANR	901732	Callee	free		901570	0					
ANR	901733	Identifier	free		901570	0					
ANR	901734	ArgumentList	multi		901570	1					
ANR	901735	Argument	multi		901570	0					
ANR	901736	Identifier	multi		901570	0					
ANR	901737	IfStatement	"if ( ad -> LookupString ( ""TotalLocalUsage"" , & multi ) )"		901570	11					
ANR	901738	Condition	"ad -> LookupString ( ""TotalLocalUsage"" , & multi )"	3851:5:84819:84861	901570	0	True				
ANR	901739	CallExpression	"ad -> LookupString ( ""TotalLocalUsage"" , & multi )"		901570	0					
ANR	901740	Callee	ad -> LookupString		901570	0					
ANR	901741	PtrMemberAccess	ad -> LookupString		901570	0					
ANR	901742	Identifier	ad		901570	0					
ANR	901743	Identifier	LookupString		901570	1					
ANR	901744	ArgumentList	"""TotalLocalUsage"""		901570	1					
ANR	901745	Argument	"""TotalLocalUsage"""		901570	0					
ANR	901746	PrimaryExpression	"""TotalLocalUsage"""		901570	0					
ANR	901747	Argument	& multi		901570	1					
ANR	901748	UnaryOperationExpression	& multi		901570	0					
ANR	901749	UnaryOperator	&		901570	0					
ANR	901750	Identifier	multi		901570	1					
ANR	901751	CompoundStatement		30:51:683:683	901570	1					
ANR	901752	ExpressionStatement	"strToRusage ( multi , total_local_rusage )"	3852:2:84869:84907	901570	0	True				
ANR	901753	CallExpression	"strToRusage ( multi , total_local_rusage )"		901570	0					
ANR	901754	Callee	strToRusage		901570	0					
ANR	901755	Identifier	strToRusage		901570	0					
ANR	901756	ArgumentList	multi		901570	1					
ANR	901757	Argument	multi		901570	0					
ANR	901758	Identifier	multi		901570	0					
ANR	901759	Argument	total_local_rusage		901570	1					
ANR	901760	Identifier	total_local_rusage		901570	0					
ANR	901761	ExpressionStatement	free ( multi )	3853:2:84911:84922	901570	1	True				
ANR	901762	CallExpression	free ( multi )		901570	0					
ANR	901763	Callee	free		901570	0					
ANR	901764	Identifier	free		901570	0					
ANR	901765	ArgumentList	multi		901570	1					
ANR	901766	Argument	multi		901570	0					
ANR	901767	Identifier	multi		901570	0					
ANR	901768	IfStatement	"if ( ad -> LookupString ( ""TotalRemoteUsage"" , & multi ) )"		901570	12					
ANR	901769	Condition	"ad -> LookupString ( ""TotalRemoteUsage"" , & multi )"	3855:5:84932:84975	901570	0	True				
ANR	901770	CallExpression	"ad -> LookupString ( ""TotalRemoteUsage"" , & multi )"		901570	0					
ANR	901771	Callee	ad -> LookupString		901570	0					
ANR	901772	PtrMemberAccess	ad -> LookupString		901570	0					
ANR	901773	Identifier	ad		901570	0					
ANR	901774	Identifier	LookupString		901570	1					
ANR	901775	ArgumentList	"""TotalRemoteUsage"""		901570	1					
ANR	901776	Argument	"""TotalRemoteUsage"""		901570	0					
ANR	901777	PrimaryExpression	"""TotalRemoteUsage"""		901570	0					
ANR	901778	Argument	& multi		901570	1					
ANR	901779	UnaryOperationExpression	& multi		901570	0					
ANR	901780	UnaryOperator	&		901570	0					
ANR	901781	Identifier	multi		901570	1					
ANR	901782	CompoundStatement		34:52:797:797	901570	1					
ANR	901783	ExpressionStatement	"strToRusage ( multi , total_remote_rusage )"	3856:2:84983:85022	901570	0	True				
ANR	901784	CallExpression	"strToRusage ( multi , total_remote_rusage )"		901570	0					
ANR	901785	Callee	strToRusage		901570	0					
ANR	901786	Identifier	strToRusage		901570	0					
ANR	901787	ArgumentList	multi		901570	1					
ANR	901788	Argument	multi		901570	0					
ANR	901789	Identifier	multi		901570	0					
ANR	901790	Argument	total_remote_rusage		901570	1					
ANR	901791	Identifier	total_remote_rusage		901570	0					
ANR	901792	ExpressionStatement	free ( multi )	3857:2:85026:85037	901570	1	True				
ANR	901793	CallExpression	free ( multi )		901570	0					
ANR	901794	Callee	free		901570	0					
ANR	901795	Identifier	free		901570	0					
ANR	901796	ArgumentList	multi		901570	1					
ANR	901797	Argument	multi		901570	0					
ANR	901798	Identifier	multi		901570	0					
ANR	901799	ExpressionStatement	"ad -> LookupFloat ( ""SentBytes"" , sent_bytes )"	3860:1:85044:85084	901570	13	True				
ANR	901800	CallExpression	"ad -> LookupFloat ( ""SentBytes"" , sent_bytes )"		901570	0					
ANR	901801	Callee	ad -> LookupFloat		901570	0					
ANR	901802	PtrMemberAccess	ad -> LookupFloat		901570	0					
ANR	901803	Identifier	ad		901570	0					
ANR	901804	Identifier	LookupFloat		901570	1					
ANR	901805	ArgumentList	"""SentBytes"""		901570	1					
ANR	901806	Argument	"""SentBytes"""		901570	0					
ANR	901807	PrimaryExpression	"""SentBytes"""		901570	0					
ANR	901808	Argument	sent_bytes		901570	1					
ANR	901809	Identifier	sent_bytes		901570	0					
ANR	901810	ExpressionStatement	"ad -> LookupFloat ( ""ReceivedBytes"" , recvd_bytes )"	3861:1:85087:85132	901570	14	True				
ANR	901811	CallExpression	"ad -> LookupFloat ( ""ReceivedBytes"" , recvd_bytes )"		901570	0					
ANR	901812	Callee	ad -> LookupFloat		901570	0					
ANR	901813	PtrMemberAccess	ad -> LookupFloat		901570	0					
ANR	901814	Identifier	ad		901570	0					
ANR	901815	Identifier	LookupFloat		901570	1					
ANR	901816	ArgumentList	"""ReceivedBytes"""		901570	1					
ANR	901817	Argument	"""ReceivedBytes"""		901570	0					
ANR	901818	PrimaryExpression	"""ReceivedBytes"""		901570	0					
ANR	901819	Argument	recvd_bytes		901570	1					
ANR	901820	Identifier	recvd_bytes		901570	0					
ANR	901821	ExpressionStatement	"ad -> LookupFloat ( ""TotalSentBytes"" , total_sent_bytes )"	3862:1:85135:85186	901570	15	True				
ANR	901822	CallExpression	"ad -> LookupFloat ( ""TotalSentBytes"" , total_sent_bytes )"		901570	0					
ANR	901823	Callee	ad -> LookupFloat		901570	0					
ANR	901824	PtrMemberAccess	ad -> LookupFloat		901570	0					
ANR	901825	Identifier	ad		901570	0					
ANR	901826	Identifier	LookupFloat		901570	1					
ANR	901827	ArgumentList	"""TotalSentBytes"""		901570	1					
ANR	901828	Argument	"""TotalSentBytes"""		901570	0					
ANR	901829	PrimaryExpression	"""TotalSentBytes"""		901570	0					
ANR	901830	Argument	total_sent_bytes		901570	1					
ANR	901831	Identifier	total_sent_bytes		901570	0					
ANR	901832	ExpressionStatement	"ad -> LookupFloat ( ""TotalReceivedBytes"" , total_recvd_bytes )"	3863:1:85189:85245	901570	16	True				
ANR	901833	CallExpression	"ad -> LookupFloat ( ""TotalReceivedBytes"" , total_recvd_bytes )"		901570	0					
ANR	901834	Callee	ad -> LookupFloat		901570	0					
ANR	901835	PtrMemberAccess	ad -> LookupFloat		901570	0					
ANR	901836	Identifier	ad		901570	0					
ANR	901837	Identifier	LookupFloat		901570	1					
ANR	901838	ArgumentList	"""TotalReceivedBytes"""		901570	1					
ANR	901839	Argument	"""TotalReceivedBytes"""		901570	0					
ANR	901840	PrimaryExpression	"""TotalReceivedBytes"""		901570	0					
ANR	901841	Argument	total_recvd_bytes		901570	1					
ANR	901842	Identifier	total_recvd_bytes		901570	0					
ANR	901843	ExpressionStatement	"ad -> LookupInteger ( ""Node"" , node )"	3865:1:85249:85280	901570	17	True				
ANR	901844	CallExpression	"ad -> LookupInteger ( ""Node"" , node )"		901570	0					
ANR	901845	Callee	ad -> LookupInteger		901570	0					
ANR	901846	PtrMemberAccess	ad -> LookupInteger		901570	0					
ANR	901847	Identifier	ad		901570	0					
ANR	901848	Identifier	LookupInteger		901570	1					
ANR	901849	ArgumentList	"""Node"""		901570	1					
ANR	901850	Argument	"""Node"""		901570	0					
ANR	901851	PrimaryExpression	"""Node"""		901570	0					
ANR	901852	Argument	node		901570	1					
ANR	901853	Identifier	node		901570	0					
ANR	901854	ReturnType	void		901570	1					
ANR	901855	Identifier	NodeTerminatedEvent :: initFromClassAd		901570	2					
ANR	901856	ParameterList	ClassAd * ad		901570	3					
ANR	901857	Parameter	ClassAd * ad	3821:37:84168:84178	901570	0	True				
ANR	901858	ParameterType	ClassAd *		901570	0					
ANR	901859	Identifier	ad		901570	1					
ANR	901860	CFGEntryNode	ENTRY		901570		True				
ANR	901861	CFGExitNode	EXIT		901570		True				
ANR	901862	Symbol	ad -> LookupString		901570						
ANR	901863	Symbol	normal		901570						
ANR	901864	Symbol	& multi		901570						
ANR	901865	Symbol	run_local_rusage		901570						
ANR	901866	Symbol	ad		901570						
ANR	901867	Symbol	returnValue		901570						
ANR	901868	Symbol	NULL		901570						
ANR	901869	Symbol	total_sent_bytes		901570						
ANR	901870	Symbol	total_local_rusage		901570						
ANR	901871	Symbol	TRUE		901570						
ANR	901872	Symbol	* ad		901570						
ANR	901873	Symbol	signalNumber		901570						
ANR	901874	Symbol	multi		901570						
ANR	901875	Symbol	sent_bytes		901570						
ANR	901876	Symbol	node		901570						
ANR	901877	Symbol	total_recvd_bytes		901570						
ANR	901878	Symbol	recvd_bytes		901570						
ANR	901879	Symbol	run_remote_rusage		901570						
ANR	901880	Symbol	ad -> LookupInteger		901570						
ANR	901881	Symbol	FALSE		901570						
ANR	901882	Symbol	reallybool		901570						
ANR	901883	Symbol	total_remote_rusage		901570						
ANR	901884	Function	PostScriptTerminatedEvent :: PostScriptTerminatedEvent	3870:0:85327:85578							
ANR	901885	FunctionDef	PostScriptTerminatedEvent :: PostScriptTerminatedEvent ()		901884	0					
ANR	901886	CompoundStatement		3873:0:85455:85578	901884	0					
ANR	901887	ExpressionStatement	eventNumber = ULOG_POST_SCRIPT_TERMINATED	3874:1:85458:85499	901884	0	True				
ANR	901888	AssignmentExpression	eventNumber = ULOG_POST_SCRIPT_TERMINATED		901884	0		=			
ANR	901889	Identifier	eventNumber		901884	0					
ANR	901890	Identifier	ULOG_POST_SCRIPT_TERMINATED		901884	1					
ANR	901891	ExpressionStatement	normal = false	3875:1:85502:85516	901884	1	True				
ANR	901892	AssignmentExpression	normal = false		901884	0		=			
ANR	901893	Identifier	normal		901884	0					
ANR	901894	Identifier	false		901884	1					
ANR	901895	ExpressionStatement	returnValue = - 1	3876:1:85519:85535	901884	2	True				
ANR	901896	AssignmentExpression	returnValue = - 1		901884	0		=			
ANR	901897	Identifier	returnValue		901884	0					
ANR	901898	UnaryOperationExpression	- 1		901884	1					
ANR	901899	UnaryOperator	-		901884	0					
ANR	901900	PrimaryExpression	1		901884	1					
ANR	901901	ExpressionStatement	signalNumber = - 1	3877:1:85538:85555	901884	3	True				
ANR	901902	AssignmentExpression	signalNumber = - 1		901884	0		=			
ANR	901903	Identifier	signalNumber		901884	0					
ANR	901904	UnaryOperationExpression	- 1		901884	1					
ANR	901905	UnaryOperator	-		901884	0					
ANR	901906	PrimaryExpression	1		901884	1					
ANR	901907	ExpressionStatement	dagNodeName = NULL	3878:1:85558:85576	901884	4	True				
ANR	901908	AssignmentExpression	dagNodeName = NULL		901884	0		=			
ANR	901909	Identifier	dagNodeName		901884	0					
ANR	901910	Identifier	NULL		901884	1					
ANR	901911	Identifier	PostScriptTerminatedEvent :: PostScriptTerminatedEvent		901884	1					
ANR	901912	ParameterList			901884	2					
ANR	901913	CFGEntryNode	ENTRY		901884		True				
ANR	901914	CFGExitNode	EXIT		901884		True				
ANR	901915	Symbol	normal		901884						
ANR	901916	Symbol	returnValue		901884						
ANR	901917	Symbol	NULL		901884						
ANR	901918	Symbol	eventNumber		901884						
ANR	901919	Symbol	false		901884						
ANR	901920	Symbol	dagNodeName		901884						
ANR	901921	Symbol	signalNumber		901884						
ANR	901922	Symbol	ULOG_POST_SCRIPT_TERMINATED		901884						
ANR	901923	Function	PostScriptTerminatedEvent :: ~PostScriptTerminatedEvent	3882:0:85582:85692							
ANR	901924	FunctionDef	PostScriptTerminatedEvent :: ~PostScriptTerminatedEvent ()		901923	0					
ANR	901925	CompoundStatement		3883:0:85642:85692	901923	0					
ANR	901926	IfStatement	if ( dagNodeName )		901923	0					
ANR	901927	Condition	dagNodeName	3884:5:85649:85659	901923	0	True				
ANR	901928	Identifier	dagNodeName		901923	0					
ANR	901929	CompoundStatement		2:19:20:20	901923	1					
ANR	901930	Statement	delete	3885:2:85667:85672	901923	0	True				
ANR	901931	Statement	[	3885:8:85673:85673	901923	1	True				
ANR	901932	Statement	]	3885:9:85674:85674	901923	2	True				
ANR	901933	ExpressionStatement	dagNodeName	3885:11:85676:85687	901923	3	True				
ANR	901934	Identifier	dagNodeName		901923	0					
ANR	901935	Identifier	PostScriptTerminatedEvent :: ~PostScriptTerminatedEvent		901923	1					
ANR	901936	ParameterList			901923	2					
ANR	901937	CFGEntryNode	ENTRY		901923		True				
ANR	901938	CFGExitNode	EXIT		901923		True				
ANR	901939	Symbol	dagNodeName		901923						
ANR	901940	Function	PostScriptTerminatedEvent :: writeEvent	3890:0:85696:86315							
ANR	901941	FunctionDef	PostScriptTerminatedEvent :: writeEvent (FILE * file)		901940	0					
ANR	901942	CompoundStatement		3892:0:85752:86315	901940	0					
ANR	901943	IfStatement	"if ( fprintf ( file , ""POST Script terminated.\\n"" ) < 0 )"		901940	0					
ANR	901944	Condition	"fprintf ( file , ""POST Script terminated.\\n"" ) < 0"	3893:8:85762:85809	901940	0	True				
ANR	901945	RelationalExpression	"fprintf ( file , ""POST Script terminated.\\n"" ) < 0"		901940	0		<			
ANR	901946	CallExpression	"fprintf ( file , ""POST Script terminated.\\n"" )"		901940	0					
ANR	901947	Callee	fprintf		901940	0					
ANR	901948	Identifier	fprintf		901940	0					
ANR	901949	ArgumentList	file		901940	1					
ANR	901950	Argument	file		901940	0					
ANR	901951	Identifier	file		901940	0					
ANR	901952	Argument	"""POST Script terminated.\\n"""		901940	1					
ANR	901953	PrimaryExpression	"""POST Script terminated.\\n"""		901940	0					
ANR	901954	PrimaryExpression	0		901940	1					
ANR	901955	CompoundStatement		2:59:60:60	901940	1					
ANR	901956	ReturnStatement	return 0 ;	3894:8:85823:85831	901940	0	True				
ANR	901957	PrimaryExpression	0		901940	0					
ANR	901958	IfStatement	if ( normal )		901940	1					
ANR	901959	Condition	normal	3897:8:85848:85853	901940	0	True				
ANR	901960	Identifier	normal		901940	0					
ANR	901961	CompoundStatement		6:17:104:104	901940	1					
ANR	901962	IfStatement	"if ( fprintf ( file , ""\\t(1) Normal termination (return value %d)\\n"" , returnValue ) < 0 )"		901940	0					
ANR	901963	Condition	"fprintf ( file , ""\\t(1) Normal termination (return value %d)\\n"" , returnValue ) < 0"	3898:12:85871:85956	901940	0	True				
ANR	901964	RelationalExpression	"fprintf ( file , ""\\t(1) Normal termination (return value %d)\\n"" , returnValue ) < 0"		901940	0		<			
ANR	901965	CallExpression	"fprintf ( file , ""\\t(1) Normal termination (return value %d)\\n"" , returnValue )"		901940	0					
ANR	901966	Callee	fprintf		901940	0					
ANR	901967	Identifier	fprintf		901940	0					
ANR	901968	ArgumentList	file		901940	1					
ANR	901969	Argument	file		901940	0					
ANR	901970	Identifier	file		901940	0					
ANR	901971	Argument	"""\\t(1) Normal termination (return value %d)\\n"""		901940	1					
ANR	901972	PrimaryExpression	"""\\t(1) Normal termination (return value %d)\\n"""		901940	0					
ANR	901973	Argument	returnValue		901940	2					
ANR	901974	Identifier	returnValue		901940	0					
ANR	901975	PrimaryExpression	0		901940	1					
ANR	901976	CompoundStatement		8:26:207:207	901940	1					
ANR	901977	ReturnStatement	return 0 ;	3900:12:85974:85982	901940	0	True				
ANR	901978	PrimaryExpression	0		901940	0					
ANR	901979	ElseStatement	else		901940	0					
ANR	901980	CompoundStatement		11:11:252:252	901940	0					
ANR	901981	IfStatement	"if ( fprintf ( file , ""\\t(0) Abnormal termination (signal %d)\\n"" , signalNumber ) < 0 )"		901940	0					
ANR	901982	Condition	"fprintf ( file , ""\\t(0) Abnormal termination (signal %d)\\n"" , signalNumber ) < 0"	3903:12:86019:86101	901940	0	True				
ANR	901983	RelationalExpression	"fprintf ( file , ""\\t(0) Abnormal termination (signal %d)\\n"" , signalNumber ) < 0"		901940	0		<			
ANR	901984	CallExpression	"fprintf ( file , ""\\t(0) Abnormal termination (signal %d)\\n"" , signalNumber )"		901940	0					
ANR	901985	Callee	fprintf		901940	0					
ANR	901986	Identifier	fprintf		901940	0					
ANR	901987	ArgumentList	file		901940	1					
ANR	901988	Argument	file		901940	0					
ANR	901989	Identifier	file		901940	0					
ANR	901990	Argument	"""\\t(0) Abnormal termination (signal %d)\\n"""		901940	1					
ANR	901991	PrimaryExpression	"""\\t(0) Abnormal termination (signal %d)\\n"""		901940	0					
ANR	901992	Argument	signalNumber		901940	2					
ANR	901993	Identifier	signalNumber		901940	0					
ANR	901994	PrimaryExpression	0		901940	1					
ANR	901995	CompoundStatement		13:27:352:352	901940	1					
ANR	901996	ReturnStatement	return 0 ;	3905:12:86119:86127	901940	0	True				
ANR	901997	PrimaryExpression	0		901940	0					
ANR	901998	IfStatement	if ( dagNodeName )		901940	2					
ANR	901999	Condition	dagNodeName	3909:8:86154:86164	901940	0	True				
ANR	902000	Identifier	dagNodeName		901940	0					
ANR	902001	CompoundStatement		18:22:415:415	901940	1					
ANR	902002	IfStatement	"if ( fprintf ( file , ""    %s%.8191s\\n"" , dagNodeNameLabel , dagNodeName ) < 0 )"		901940	0					
ANR	902003	Condition	"fprintf ( file , ""    %s%.8191s\\n"" , dagNodeNameLabel , dagNodeName ) < 0"	3910:12:86182:86256	901940	0	True				
ANR	902004	RelationalExpression	"fprintf ( file , ""    %s%.8191s\\n"" , dagNodeNameLabel , dagNodeName ) < 0"		901940	0		<			
ANR	902005	CallExpression	"fprintf ( file , ""    %s%.8191s\\n"" , dagNodeNameLabel , dagNodeName )"		901940	0					
ANR	902006	Callee	fprintf		901940	0					
ANR	902007	Identifier	fprintf		901940	0					
ANR	902008	ArgumentList	file		901940	1					
ANR	902009	Argument	file		901940	0					
ANR	902010	Identifier	file		901940	0					
ANR	902011	Argument	"""    %s%.8191s\\n"""		901940	1					
ANR	902012	PrimaryExpression	"""    %s%.8191s\\n"""		901940	0					
ANR	902013	Argument	dagNodeNameLabel		901940	2					
ANR	902014	Identifier	dagNodeNameLabel		901940	0					
ANR	902015	Argument	dagNodeName		901940	3					
ANR	902016	Identifier	dagNodeName		901940	0					
ANR	902017	PrimaryExpression	0		901940	1					
ANR	902018	CompoundStatement		20:44:507:507	901940	1					
ANR	902019	ReturnStatement	return 0 ;	3912:12:86274:86282	901940	0	True				
ANR	902020	PrimaryExpression	0		901940	0					
ANR	902021	ReturnStatement	return 1 ;	3916:4:86305:86313	901940	3	True				
ANR	902022	PrimaryExpression	1		901940	0					
ANR	902023	ReturnType	int		901940	1					
ANR	902024	Identifier	PostScriptTerminatedEvent :: writeEvent		901940	2					
ANR	902025	ParameterList	FILE * file		901940	3					
ANR	902026	Parameter	FILE * file	3891:39:85739:85748	901940	0	True				
ANR	902027	ParameterType	FILE *		901940	0					
ANR	902028	Identifier	file		901940	1					
ANR	902029	CFGEntryNode	ENTRY		901940		True				
ANR	902030	CFGExitNode	EXIT		901940		True				
ANR	902031	Symbol	normal		901940						
ANR	902032	Symbol	file		901940						
ANR	902033	Symbol	returnValue		901940						
ANR	902034	Symbol	dagNodeNameLabel		901940						
ANR	902035	Symbol	fprintf		901940						
ANR	902036	Symbol	dagNodeName		901940						
ANR	902037	Symbol	signalNumber		901940						
ANR	902038	Function	PostScriptTerminatedEvent :: readEvent	3920:0:86319:87525							
ANR	902039	FunctionDef	PostScriptTerminatedEvent :: readEvent (FILE * file)		902038	0					
ANR	902040	CompoundStatement		3922:0:86374:87525	902038	0					
ANR	902041	IdentifierDeclStatement	int tmp ;	3923:1:86377:86384	902038	0	True				
ANR	902042	IdentifierDecl	tmp		902038	0					
ANR	902043	IdentifierDeclType	int		902038	0					
ANR	902044	Identifier	tmp		902038	1					
ANR	902045	IdentifierDeclStatement	char buf [ 8192 ] ;	3924:1:86387:86401	902038	1	True				
ANR	902046	IdentifierDecl	buf [ 8192 ]		902038	0					
ANR	902047	IdentifierDeclType	char [ 8192 ]		902038	0					
ANR	902048	Identifier	buf		902038	1					
ANR	902049	PrimaryExpression	8192		902038	2					
ANR	902050	ExpressionStatement	buf [ 0 ] = '\\0'	3925:1:86404:86417	902038	2	True				
ANR	902051	AssignmentExpression	buf [ 0 ] = '\\0'		902038	0		=			
ANR	902052	ArrayIndexing	buf [ 0 ]		902038	0					
ANR	902053	Identifier	buf		902038	0					
ANR	902054	PrimaryExpression	0		902038	1					
ANR	902055	PrimaryExpression	'\\0'		902038	1					
ANR	902056	IfStatement	if ( dagNodeName )		902038	3					
ANR	902057	Condition	dagNodeName	3928:5:86469:86479	902038	0	True				
ANR	902058	Identifier	dagNodeName		902038	0					
ANR	902059	CompoundStatement		7:19:108:108	902038	1					
ANR	902060	Statement	delete	3929:2:86487:86492	902038	0	True				
ANR	902061	Statement	[	3929:8:86493:86493	902038	1	True				
ANR	902062	Statement	]	3929:9:86494:86494	902038	2	True				
ANR	902063	ExpressionStatement	dagNodeName	3929:11:86496:86507	902038	3	True				
ANR	902064	Identifier	dagNodeName		902038	0					
ANR	902065	ExpressionStatement	dagNodeName = NULL	3931:4:86516:86534	902038	4	True				
ANR	902066	AssignmentExpression	dagNodeName = NULL		902038	0		=			
ANR	902067	Identifier	dagNodeName		902038	0					
ANR	902068	Identifier	NULL		902038	1					
ANR	902069	IfStatement	"if ( fscanf ( file , ""POST Script terminated.\\n\\t(%d) "" , & tmp ) != 1 )"		902038	5					
ANR	902070	Condition	"fscanf ( file , ""POST Script terminated.\\n\\t(%d) "" , & tmp ) != 1"	3933:5:86542:86602	902038	0	True				
ANR	902071	EqualityExpression	"fscanf ( file , ""POST Script terminated.\\n\\t(%d) "" , & tmp ) != 1"		902038	0		!=			
ANR	902072	CallExpression	"fscanf ( file , ""POST Script terminated.\\n\\t(%d) "" , & tmp )"		902038	0					
ANR	902073	Callee	fscanf		902038	0					
ANR	902074	Identifier	fscanf		902038	0					
ANR	902075	ArgumentList	file		902038	1					
ANR	902076	Argument	file		902038	0					
ANR	902077	Identifier	file		902038	0					
ANR	902078	Argument	"""POST Script terminated.\\n\\t(%d) """		902038	1					
ANR	902079	PrimaryExpression	"""POST Script terminated.\\n\\t(%d) """		902038	0					
ANR	902080	Argument	& tmp		902038	2					
ANR	902081	UnaryOperationExpression	& tmp		902038	0					
ANR	902082	UnaryOperator	&		902038	0					
ANR	902083	Identifier	tmp		902038	1					
ANR	902084	PrimaryExpression	1		902038	1					
ANR	902085	CompoundStatement		12:69:231:231	902038	1					
ANR	902086	ReturnStatement	return 0 ;	3934:2:86610:86618	902038	0	True				
ANR	902087	PrimaryExpression	0		902038	0					
ANR	902088	IfStatement	if ( tmp == 1 )		902038	6					
ANR	902089	Condition	tmp == 1	3936:5:86628:86635	902038	0	True				
ANR	902090	EqualityExpression	tmp == 1		902038	0		==			
ANR	902091	Identifier	tmp		902038	0					
ANR	902092	PrimaryExpression	1		902038	1					
ANR	902093	CompoundStatement		15:16:264:264	902038	1					
ANR	902094	ExpressionStatement	normal = true	3937:2:86643:86656	902038	0	True				
ANR	902095	AssignmentExpression	normal = true		902038	0		=			
ANR	902096	Identifier	normal		902038	0					
ANR	902097	Identifier	true		902038	1					
ANR	902098	ElseStatement	else		902038	0					
ANR	902099	CompoundStatement		17:8:291:291	902038	0					
ANR	902100	ExpressionStatement	normal = false	3939:2:86670:86684	902038	0	True				
ANR	902101	AssignmentExpression	normal = false		902038	0		=			
ANR	902102	Identifier	normal		902038	0					
ANR	902103	Identifier	false		902038	1					
ANR	902104	IfStatement	if ( normal )		902038	7					
ANR	902105	Condition	normal	3941:8:86697:86702	902038	0	True				
ANR	902106	Identifier	normal		902038	0					
ANR	902107	CompoundStatement		20:17:331:331	902038	1					
ANR	902108	IfStatement	"if ( fscanf ( file , ""Normal termination (return value %d)\\n"" , & returnValue ) != 1 )"		902038	0					
ANR	902109	Condition	"fscanf ( file , ""Normal termination (return value %d)\\n"" , & returnValue ) != 1"	3942:12:86720:86799	902038	0	True				
ANR	902110	EqualityExpression	"fscanf ( file , ""Normal termination (return value %d)\\n"" , & returnValue ) != 1"		902038	0		!=			
ANR	902111	CallExpression	"fscanf ( file , ""Normal termination (return value %d)\\n"" , & returnValue )"		902038	0					
ANR	902112	Callee	fscanf		902038	0					
ANR	902113	Identifier	fscanf		902038	0					
ANR	902114	ArgumentList	file		902038	1					
ANR	902115	Argument	file		902038	0					
ANR	902116	Identifier	file		902038	0					
ANR	902117	Argument	"""Normal termination (return value %d)\\n"""		902038	1					
ANR	902118	PrimaryExpression	"""Normal termination (return value %d)\\n"""		902038	0					
ANR	902119	Argument	& returnValue		902038	2					
ANR	902120	UnaryOperationExpression	& returnValue		902038	0					
ANR	902121	UnaryOperator	&		902038	0					
ANR	902122	Identifier	returnValue		902038	1					
ANR	902123	PrimaryExpression	1		902038	1					
ANR	902124	CompoundStatement		22:27:428:428	902038	1					
ANR	902125	ReturnStatement	return 0 ;	3944:12:86817:86825	902038	0	True				
ANR	902126	PrimaryExpression	0		902038	0					
ANR	902127	ElseStatement	else		902038	0					
ANR	902128	CompoundStatement		25:11:467:467	902038	0					
ANR	902129	IfStatement	"if ( fscanf ( file , ""Abnormal termination (signal %d)\\n"" , & signalNumber ) != 1 )"		902038	0					
ANR	902130	Condition	"fscanf ( file , ""Abnormal termination (signal %d)\\n"" , & signalNumber ) != 1"	3947:12:86856:86932	902038	0	True				
ANR	902131	EqualityExpression	"fscanf ( file , ""Abnormal termination (signal %d)\\n"" , & signalNumber ) != 1"		902038	0		!=			
ANR	902132	CallExpression	"fscanf ( file , ""Abnormal termination (signal %d)\\n"" , & signalNumber )"		902038	0					
ANR	902133	Callee	fscanf		902038	0					
ANR	902134	Identifier	fscanf		902038	0					
ANR	902135	ArgumentList	file		902038	1					
ANR	902136	Argument	file		902038	0					
ANR	902137	Identifier	file		902038	0					
ANR	902138	Argument	"""Abnormal termination (signal %d)\\n"""		902038	1					
ANR	902139	PrimaryExpression	"""Abnormal termination (signal %d)\\n"""		902038	0					
ANR	902140	Argument	& signalNumber		902038	2					
ANR	902141	UnaryOperationExpression	& signalNumber		902038	0					
ANR	902142	UnaryOperator	&		902038	0					
ANR	902143	Identifier	signalNumber		902038	1					
ANR	902144	PrimaryExpression	1		902038	1					
ANR	902145	CompoundStatement		27:28:561:561	902038	1					
ANR	902146	ReturnStatement	return 0 ;	3949:12:86950:86958	902038	0	True				
ANR	902147	PrimaryExpression	0		902038	0					
ANR	902148	IdentifierDeclStatement	fpos_t filep ;	3957:1:87146:87158	902038	8	True				
ANR	902149	IdentifierDecl	filep		902038	0					
ANR	902150	IdentifierDeclType	fpos_t		902038	0					
ANR	902151	Identifier	filep		902038	1					
ANR	902152	ExpressionStatement	"fgetpos ( file , & filep )"	3958:1:87161:87184	902038	9	True				
ANR	902153	CallExpression	"fgetpos ( file , & filep )"		902038	0					
ANR	902154	Callee	fgetpos		902038	0					
ANR	902155	Identifier	fgetpos		902038	0					
ANR	902156	ArgumentList	file		902038	1					
ANR	902157	Argument	file		902038	0					
ANR	902158	Identifier	file		902038	0					
ANR	902159	Argument	& filep		902038	1					
ANR	902160	UnaryOperationExpression	& filep		902038	0					
ANR	902161	UnaryOperator	&		902038	0					
ANR	902162	Identifier	filep		902038	1					
ANR	902163	IfStatement	"if ( ! fgets ( buf , 8192 , file ) || strcmp ( buf , ""...\\n"" ) == 0 )"		902038	10					
ANR	902164	Condition	"! fgets ( buf , 8192 , file ) || strcmp ( buf , ""...\\n"" ) == 0"	3960:5:87192:87247	902038	0	True				
ANR	902165	OrExpression	"! fgets ( buf , 8192 , file ) || strcmp ( buf , ""...\\n"" ) == 0"		902038	0		||			
ANR	902166	UnaryOperationExpression	"! fgets ( buf , 8192 , file )"		902038	0					
ANR	902167	UnaryOperator	!		902038	0					
ANR	902168	CallExpression	"fgets ( buf , 8192 , file )"		902038	1					
ANR	902169	Callee	fgets		902038	0					
ANR	902170	Identifier	fgets		902038	0					
ANR	902171	ArgumentList	buf		902038	1					
ANR	902172	Argument	buf		902038	0					
ANR	902173	Identifier	buf		902038	0					
ANR	902174	Argument	8192		902038	1					
ANR	902175	PrimaryExpression	8192		902038	0					
ANR	902176	Argument	file		902038	2					
ANR	902177	Identifier	file		902038	0					
ANR	902178	EqualityExpression	"strcmp ( buf , ""...\\n"" ) == 0"		902038	1		==			
ANR	902179	CallExpression	"strcmp ( buf , ""...\\n"" )"		902038	0					
ANR	902180	Callee	strcmp		902038	0					
ANR	902181	Identifier	strcmp		902038	0					
ANR	902182	ArgumentList	buf		902038	1					
ANR	902183	Argument	buf		902038	0					
ANR	902184	Identifier	buf		902038	0					
ANR	902185	Argument	"""...\\n"""		902038	1					
ANR	902186	PrimaryExpression	"""...\\n"""		902038	0					
ANR	902187	PrimaryExpression	0		902038	1					
ANR	902188	CompoundStatement		39:64:876:876	902038	1					
ANR	902189	ExpressionStatement	"fsetpos ( file , & filep )"	3961:2:87255:87278	902038	0	True				
ANR	902190	CallExpression	"fsetpos ( file , & filep )"		902038	0					
ANR	902191	Callee	fsetpos		902038	0					
ANR	902192	Identifier	fsetpos		902038	0					
ANR	902193	ArgumentList	file		902038	1					
ANR	902194	Argument	file		902038	0					
ANR	902195	Identifier	file		902038	0					
ANR	902196	Argument	& filep		902038	1					
ANR	902197	UnaryOperationExpression	& filep		902038	0					
ANR	902198	UnaryOperator	&		902038	0					
ANR	902199	Identifier	filep		902038	1					
ANR	902200	ReturnStatement	return 1 ;	3962:2:87282:87290	902038	1	True				
ANR	902201	PrimaryExpression	1		902038	0					
ANR	902202	ExpressionStatement	buf [ strlen ( buf ) - 1 ] = '\\0'	3966:1:87325:87356	902038	11	True				
ANR	902203	AssignmentExpression	buf [ strlen ( buf ) - 1 ] = '\\0'		902038	0		=			
ANR	902204	ArrayIndexing	buf [ strlen ( buf ) - 1 ]		902038	0					
ANR	902205	Identifier	buf		902038	0					
ANR	902206	AdditiveExpression	strlen ( buf ) - 1		902038	1		-			
ANR	902207	CallExpression	strlen ( buf )		902038	0					
ANR	902208	Callee	strlen		902038	0					
ANR	902209	Identifier	strlen		902038	0					
ANR	902210	ArgumentList	buf		902038	1					
ANR	902211	Argument	buf		902038	0					
ANR	902212	Identifier	buf		902038	0					
ANR	902213	PrimaryExpression	1		902038	1					
ANR	902214	PrimaryExpression	'\\0'		902038	1					
ANR	902215	IdentifierDeclStatement	int label_len = strlen ( dagNodeNameLabel ) ;	3969:1:87423:87465	902038	12	True				
ANR	902216	IdentifierDecl	label_len = strlen ( dagNodeNameLabel )		902038	0					
ANR	902217	IdentifierDeclType	int		902038	0					
ANR	902218	Identifier	label_len		902038	1					
ANR	902219	AssignmentExpression	label_len = strlen ( dagNodeNameLabel )		902038	2		=			
ANR	902220	Identifier	label_len		902038	0					
ANR	902221	CallExpression	strlen ( dagNodeNameLabel )		902038	1					
ANR	902222	Callee	strlen		902038	0					
ANR	902223	Identifier	strlen		902038	0					
ANR	902224	ArgumentList	dagNodeNameLabel		902038	1					
ANR	902225	Argument	dagNodeNameLabel		902038	0					
ANR	902226	Identifier	dagNodeNameLabel		902038	0					
ANR	902227	ExpressionStatement	dagNodeName = strnewp ( buf + label_len )	3970:1:87468:87508	902038	13	True				
ANR	902228	AssignmentExpression	dagNodeName = strnewp ( buf + label_len )		902038	0		=			
ANR	902229	Identifier	dagNodeName		902038	0					
ANR	902230	CallExpression	strnewp ( buf + label_len )		902038	1					
ANR	902231	Callee	strnewp		902038	0					
ANR	902232	Identifier	strnewp		902038	0					
ANR	902233	ArgumentList	buf + label_len		902038	1					
ANR	902234	Argument	buf + label_len		902038	0					
ANR	902235	AdditiveExpression	buf + label_len		902038	0		+			
ANR	902236	Identifier	buf		902038	0					
ANR	902237	Identifier	label_len		902038	1					
ANR	902238	ReturnStatement	return 1 ;	3972:4:87515:87523	902038	14	True				
ANR	902239	PrimaryExpression	1		902038	0					
ANR	902240	ReturnType	int		902038	1					
ANR	902241	Identifier	PostScriptTerminatedEvent :: readEvent		902038	2					
ANR	902242	ParameterList	FILE * file		902038	3					
ANR	902243	Parameter	FILE * file	3921:38:86361:86370	902038	0	True				
ANR	902244	ParameterType	FILE *		902038	0					
ANR	902245	Identifier	file		902038	1					
ANR	902246	CFGEntryNode	ENTRY		902038		True				
ANR	902247	CFGExitNode	EXIT		902038		True				
ANR	902248	Symbol	strcmp		902038						
ANR	902249	Symbol	normal		902038						
ANR	902250	Symbol	label_len		902038						
ANR	902251	Symbol	* buf		902038						
ANR	902252	Symbol	NULL		902038						
ANR	902253	Symbol	& signalNumber		902038						
ANR	902254	Symbol	false		902038						
ANR	902255	Symbol	& filep		902038						
ANR	902256	Symbol	dagNodeName		902038						
ANR	902257	Symbol	& returnValue		902038						
ANR	902258	Symbol	fgets		902038						
ANR	902259	Symbol	strlen		902038						
ANR	902260	Symbol	buf		902038						
ANR	902261	Symbol	fscanf		902038						
ANR	902262	Symbol	file		902038						
ANR	902263	Symbol	* strlen		902038						
ANR	902264	Symbol	tmp		902038						
ANR	902265	Symbol	true		902038						
ANR	902266	Symbol	dagNodeNameLabel		902038						
ANR	902267	Symbol	strnewp		902038						
ANR	902268	Symbol	& tmp		902038						
ANR	902269	Symbol	filep		902038						
ANR	902270	Function	PostScriptTerminatedEvent :: toClassAd	3975:0:87528:88291							
ANR	902271	FunctionDef	PostScriptTerminatedEvent :: toClassAd ()		902270	0					
ANR	902272	CompoundStatement		3977:0:87580:88291	902270	0					
ANR	902273	IdentifierDeclStatement	ClassAd * myad = ULogEvent :: toClassAd ( ) ;	3978:1:87583:87621	902270	0	True				
ANR	902274	IdentifierDecl	* myad = ULogEvent :: toClassAd ( )		902270	0					
ANR	902275	IdentifierDeclType	ClassAd *		902270	0					
ANR	902276	Identifier	myad		902270	1					
ANR	902277	AssignmentExpression	* myad = ULogEvent :: toClassAd ( )		902270	2		=			
ANR	902278	Identifier	myad		902270	0					
ANR	902279	CallExpression	ULogEvent :: toClassAd ( )		902270	1					
ANR	902280	Callee	ULogEvent :: toClassAd		902270	0					
ANR	902281	Identifier	ULogEvent :: toClassAd		902270	0					
ANR	902282	ArgumentList			902270	1					
ANR	902283	IfStatement	if ( ! myad )		902270	1					
ANR	902284	Condition	! myad	3979:5:87628:87632	902270	0	True				
ANR	902285	UnaryOperationExpression	! myad		902270	0					
ANR	902286	UnaryOperator	!		902270	0					
ANR	902287	Identifier	myad		902270	1					
ANR	902288	ReturnStatement	return NULL ;	3979:13:87636:87647	902270	1	True				
ANR	902289	Identifier	NULL		902270	0					
ANR	902290	IdentifierDeclStatement	char buf0 [ 512 ] ;	3980:1:87650:87664	902270	2	True				
ANR	902291	IdentifierDecl	buf0 [ 512 ]		902270	0					
ANR	902292	IdentifierDeclType	char [ 512 ]		902270	0					
ANR	902293	Identifier	buf0		902270	1					
ANR	902294	PrimaryExpression	512		902270	2					
ANR	902295	ExpressionStatement	"snprintf ( buf0 , 512 , ""TerminatedNormally = %s"" , normal ? ""TRUE"" : ""FALSE"" )"	3982:1:87668:87741	902270	3	True				
ANR	902296	CallExpression	"snprintf ( buf0 , 512 , ""TerminatedNormally = %s"" , normal ? ""TRUE"" : ""FALSE"" )"		902270	0					
ANR	902297	Callee	snprintf		902270	0					
ANR	902298	Identifier	snprintf		902270	0					
ANR	902299	ArgumentList	buf0		902270	1					
ANR	902300	Argument	buf0		902270	0					
ANR	902301	Identifier	buf0		902270	0					
ANR	902302	Argument	512		902270	1					
ANR	902303	PrimaryExpression	512		902270	0					
ANR	902304	Argument	"""TerminatedNormally = %s"""		902270	2					
ANR	902305	PrimaryExpression	"""TerminatedNormally = %s"""		902270	0					
ANR	902306	Argument	"normal ? ""TRUE"" : ""FALSE"""		902270	3					
ANR	902307	ConditionalExpression	"normal ? ""TRUE"" : ""FALSE"""		902270	0					
ANR	902308	Condition	normal		902270	0					
ANR	902309	Identifier	normal		902270	0					
ANR	902310	PrimaryExpression	"""TRUE"""		902270	1					
ANR	902311	PrimaryExpression	"""FALSE"""		902270	2					
ANR	902312	ExpressionStatement	buf0 [ 511 ] = 0	3983:1:87744:87757	902270	4	True				
ANR	902313	AssignmentExpression	buf0 [ 511 ] = 0		902270	0		=			
ANR	902314	ArrayIndexing	buf0 [ 511 ]		902270	0					
ANR	902315	Identifier	buf0		902270	0					
ANR	902316	PrimaryExpression	511		902270	1					
ANR	902317	PrimaryExpression	0		902270	1					
ANR	902318	IfStatement	if ( ! myad -> Insert ( buf0 ) )		902270	5					
ANR	902319	Condition	! myad -> Insert ( buf0 )	3984:5:87764:87782	902270	0	True				
ANR	902320	UnaryOperationExpression	! myad -> Insert ( buf0 )		902270	0					
ANR	902321	UnaryOperator	!		902270	0					
ANR	902322	CallExpression	myad -> Insert ( buf0 )		902270	1					
ANR	902323	Callee	myad -> Insert		902270	0					
ANR	902324	PtrMemberAccess	myad -> Insert		902270	0					
ANR	902325	Identifier	myad		902270	0					
ANR	902326	Identifier	Insert		902270	1					
ANR	902327	ArgumentList	buf0		902270	1					
ANR	902328	Argument	buf0		902270	0					
ANR	902329	Identifier	buf0		902270	0					
ANR	902330	ReturnStatement	return NULL ;	3984:27:87786:87797	902270	1	True				
ANR	902331	Identifier	NULL		902270	0					
ANR	902332	IfStatement	if ( returnValue >= 0 )		902270	6					
ANR	902333	Condition	returnValue >= 0	3985:5:87804:87819	902270	0	True				
ANR	902334	RelationalExpression	returnValue >= 0		902270	0		>=			
ANR	902335	Identifier	returnValue		902270	0					
ANR	902336	PrimaryExpression	0		902270	1					
ANR	902337	CompoundStatement		9:24:242:242	902270	1					
ANR	902338	ExpressionStatement	"snprintf ( buf0 , 512 , ""ReturnValue = %d"" , returnValue )"	3986:2:87827:87879	902270	0	True				
ANR	902339	CallExpression	"snprintf ( buf0 , 512 , ""ReturnValue = %d"" , returnValue )"		902270	0					
ANR	902340	Callee	snprintf		902270	0					
ANR	902341	Identifier	snprintf		902270	0					
ANR	902342	ArgumentList	buf0		902270	1					
ANR	902343	Argument	buf0		902270	0					
ANR	902344	Identifier	buf0		902270	0					
ANR	902345	Argument	512		902270	1					
ANR	902346	PrimaryExpression	512		902270	0					
ANR	902347	Argument	"""ReturnValue = %d"""		902270	2					
ANR	902348	PrimaryExpression	"""ReturnValue = %d"""		902270	0					
ANR	902349	Argument	returnValue		902270	3					
ANR	902350	Identifier	returnValue		902270	0					
ANR	902351	ExpressionStatement	buf0 [ 511 ] = 0	3987:2:87883:87896	902270	1	True				
ANR	902352	AssignmentExpression	buf0 [ 511 ] = 0		902270	0		=			
ANR	902353	ArrayIndexing	buf0 [ 511 ]		902270	0					
ANR	902354	Identifier	buf0		902270	0					
ANR	902355	PrimaryExpression	511		902270	1					
ANR	902356	PrimaryExpression	0		902270	1					
ANR	902357	IfStatement	if ( ! myad -> Insert ( buf0 ) )		902270	2					
ANR	902358	Condition	! myad -> Insert ( buf0 )	3988:6:87904:87922	902270	0	True				
ANR	902359	UnaryOperationExpression	! myad -> Insert ( buf0 )		902270	0					
ANR	902360	UnaryOperator	!		902270	0					
ANR	902361	CallExpression	myad -> Insert ( buf0 )		902270	1					
ANR	902362	Callee	myad -> Insert		902270	0					
ANR	902363	PtrMemberAccess	myad -> Insert		902270	0					
ANR	902364	Identifier	myad		902270	0					
ANR	902365	Identifier	Insert		902270	1					
ANR	902366	ArgumentList	buf0		902270	1					
ANR	902367	Argument	buf0		902270	0					
ANR	902368	Identifier	buf0		902270	0					
ANR	902369	ReturnStatement	return NULL ;	3988:28:87926:87937	902270	1	True				
ANR	902370	Identifier	NULL		902270	0					
ANR	902371	IfStatement	if ( signalNumber >= 0 )		902270	7					
ANR	902372	Condition	signalNumber >= 0	3990:5:87947:87963	902270	0	True				
ANR	902373	RelationalExpression	signalNumber >= 0		902270	0		>=			
ANR	902374	Identifier	signalNumber		902270	0					
ANR	902375	PrimaryExpression	0		902270	1					
ANR	902376	CompoundStatement		14:25:386:386	902270	1					
ANR	902377	ExpressionStatement	"snprintf ( buf0 , 512 , ""TerminatedBySignal = %d"" , signalNumber )"	3991:2:87971:88031	902270	0	True				
ANR	902378	CallExpression	"snprintf ( buf0 , 512 , ""TerminatedBySignal = %d"" , signalNumber )"		902270	0					
ANR	902379	Callee	snprintf		902270	0					
ANR	902380	Identifier	snprintf		902270	0					
ANR	902381	ArgumentList	buf0		902270	1					
ANR	902382	Argument	buf0		902270	0					
ANR	902383	Identifier	buf0		902270	0					
ANR	902384	Argument	512		902270	1					
ANR	902385	PrimaryExpression	512		902270	0					
ANR	902386	Argument	"""TerminatedBySignal = %d"""		902270	2					
ANR	902387	PrimaryExpression	"""TerminatedBySignal = %d"""		902270	0					
ANR	902388	Argument	signalNumber		902270	3					
ANR	902389	Identifier	signalNumber		902270	0					
ANR	902390	ExpressionStatement	buf0 [ 511 ] = 0	3992:2:88035:88048	902270	1	True				
ANR	902391	AssignmentExpression	buf0 [ 511 ] = 0		902270	0		=			
ANR	902392	ArrayIndexing	buf0 [ 511 ]		902270	0					
ANR	902393	Identifier	buf0		902270	0					
ANR	902394	PrimaryExpression	511		902270	1					
ANR	902395	PrimaryExpression	0		902270	1					
ANR	902396	IfStatement	if ( ! myad -> Insert ( buf0 ) )		902270	2					
ANR	902397	Condition	! myad -> Insert ( buf0 )	3993:6:88056:88074	902270	0	True				
ANR	902398	UnaryOperationExpression	! myad -> Insert ( buf0 )		902270	0					
ANR	902399	UnaryOperator	!		902270	0					
ANR	902400	CallExpression	myad -> Insert ( buf0 )		902270	1					
ANR	902401	Callee	myad -> Insert		902270	0					
ANR	902402	PtrMemberAccess	myad -> Insert		902270	0					
ANR	902403	Identifier	myad		902270	0					
ANR	902404	Identifier	Insert		902270	1					
ANR	902405	ArgumentList	buf0		902270	1					
ANR	902406	Argument	buf0		902270	0					
ANR	902407	Identifier	buf0		902270	0					
ANR	902408	ReturnStatement	return NULL ;	3993:28:88078:88089	902270	1	True				
ANR	902409	Identifier	NULL		902270	0					
ANR	902410	IfStatement	if ( dagNodeName && dagNodeName [ 0 ] )		902270	8					
ANR	902411	Condition	dagNodeName && dagNodeName [ 0 ]	3995:5:88099:88127	902270	0	True				
ANR	902412	AndExpression	dagNodeName && dagNodeName [ 0 ]		902270	0		&&			
ANR	902413	Identifier	dagNodeName		902270	0					
ANR	902414	ArrayIndexing	dagNodeName [ 0 ]		902270	1					
ANR	902415	Identifier	dagNodeName		902270	0					
ANR	902416	PrimaryExpression	0		902270	1					
ANR	902417	CompoundStatement		20:2:554:567	902270	1					
ANR	902418	IdentifierDeclStatement	MyString buf1 ;	3996:2:88135:88148	902270	0	True				
ANR	902419	IdentifierDecl	buf1		902270	0					
ANR	902420	IdentifierDeclType	MyString		902270	0					
ANR	902421	Identifier	buf1		902270	1					
ANR	902422	ExpressionStatement	"buf1 . sprintf ( ""%s = \\""%s\\"""" , dagNodeNameAttr , dagNodeName )"	3997:2:88152:88211	902270	1	True				
ANR	902423	CallExpression	"buf1 . sprintf ( ""%s = \\""%s\\"""" , dagNodeNameAttr , dagNodeName )"		902270	0					
ANR	902424	Callee	buf1 . sprintf		902270	0					
ANR	902425	MemberAccess	buf1 . sprintf		902270	0					
ANR	902426	Identifier	buf1		902270	0					
ANR	902427	Identifier	sprintf		902270	1					
ANR	902428	ArgumentList	"""%s = \\""%s\\"""""		902270	1					
ANR	902429	Argument	"""%s = \\""%s\\"""""		902270	0					
ANR	902430	PrimaryExpression	"""%s = \\""%s\\"""""		902270	0					
ANR	902431	Argument	dagNodeNameAttr		902270	1					
ANR	902432	Identifier	dagNodeNameAttr		902270	0					
ANR	902433	Argument	dagNodeName		902270	2					
ANR	902434	Identifier	dagNodeName		902270	0					
ANR	902435	IfStatement	if ( ! myad -> Insert ( buf1 . Value ( ) ) )		902270	2					
ANR	902436	Condition	! myad -> Insert ( buf1 . Value ( ) )	3998:6:88219:88247	902270	0	True				
ANR	902437	UnaryOperationExpression	! myad -> Insert ( buf1 . Value ( ) )		902270	0					
ANR	902438	UnaryOperator	!		902270	0					
ANR	902439	CallExpression	myad -> Insert ( buf1 . Value ( ) )		902270	1					
ANR	902440	Callee	myad -> Insert		902270	0					
ANR	902441	PtrMemberAccess	myad -> Insert		902270	0					
ANR	902442	Identifier	myad		902270	0					
ANR	902443	Identifier	Insert		902270	1					
ANR	902444	ArgumentList	buf1 . Value ( )		902270	1					
ANR	902445	Argument	buf1 . Value ( )		902270	0					
ANR	902446	CallExpression	buf1 . Value ( )		902270	0					
ANR	902447	Callee	buf1 . Value		902270	0					
ANR	902448	MemberAccess	buf1 . Value		902270	0					
ANR	902449	Identifier	buf1		902270	0					
ANR	902450	Identifier	Value		902270	1					
ANR	902451	ArgumentList			902270	1					
ANR	902452	CompoundStatement		22:38:670:670	902270	1					
ANR	902453	ReturnStatement	return NULL ;	3999:3:88256:88267	902270	0	True				
ANR	902454	Identifier	NULL		902270	0					
ANR	902455	ReturnStatement	return myad ;	4003:1:88278:88289	902270	9	True				
ANR	902456	Identifier	myad		902270	0					
ANR	902457	ReturnType	ClassAd *		902270	1					
ANR	902458	Identifier	PostScriptTerminatedEvent :: toClassAd		902270	2					
ANR	902459	ParameterList			902270	3					
ANR	902460	CFGEntryNode	ENTRY		902270		True				
ANR	902461	CFGExitNode	EXIT		902270		True				
ANR	902462	Symbol	normal		902270						
ANR	902463	Symbol	NULL		902270						
ANR	902464	Symbol	returnValue		902270						
ANR	902465	Symbol	* myad		902270						
ANR	902466	Symbol	myad -> Insert		902270						
ANR	902467	Symbol	ULogEvent :: toClassAd		902270						
ANR	902468	Symbol	dagNodeName		902270						
ANR	902469	Symbol	signalNumber		902270						
ANR	902470	Symbol	* buf0		902270						
ANR	902471	Symbol	* dagNodeName		902270						
ANR	902472	Symbol	buf1		902270						
ANR	902473	Symbol	buf1 . Value		902270						
ANR	902474	Symbol	buf0		902270						
ANR	902475	Symbol	myad		902270						
ANR	902476	Symbol	dagNodeNameAttr		902270						
ANR	902477	Function	PostScriptTerminatedEvent :: initFromClassAd	4006:0:88294:88882							
ANR	902478	FunctionDef	PostScriptTerminatedEvent :: initFromClassAd (ClassAd * ad)		902477	0					
ANR	902479	CompoundStatement		4008:0:88355:88882	902477	0					
ANR	902480	ExpressionStatement	ULogEvent :: initFromClassAd ( ad )	4009:1:88358:88388	902477	0	True				
ANR	902481	CallExpression	ULogEvent :: initFromClassAd ( ad )		902477	0					
ANR	902482	Callee	ULogEvent :: initFromClassAd		902477	0					
ANR	902483	Identifier	ULogEvent :: initFromClassAd		902477	0					
ANR	902484	ArgumentList	ad		902477	1					
ANR	902485	Argument	ad		902477	0					
ANR	902486	Identifier	ad		902477	0					
ANR	902487	IfStatement	if ( ! ad )		902477	1					
ANR	902488	Condition	! ad	4011:5:88396:88398	902477	0	True				
ANR	902489	UnaryOperationExpression	! ad		902477	0					
ANR	902490	UnaryOperator	!		902477	0					
ANR	902491	Identifier	ad		902477	1					
ANR	902492	ReturnStatement	return ;	4011:11:88402:88408	902477	1	True				
ANR	902493	IdentifierDeclStatement	int reallybool ;	4013:1:88412:88426	902477	2	True				
ANR	902494	IdentifierDecl	reallybool		902477	0					
ANR	902495	IdentifierDeclType	int		902477	0					
ANR	902496	Identifier	reallybool		902477	1					
ANR	902497	IfStatement	"if ( ad -> LookupInteger ( ""TerminatedNormally"" , reallybool ) )"		902477	3					
ANR	902498	Condition	"ad -> LookupInteger ( ""TerminatedNormally"" , reallybool )"	4014:5:88433:88483	902477	0	True				
ANR	902499	CallExpression	"ad -> LookupInteger ( ""TerminatedNormally"" , reallybool )"		902477	0					
ANR	902500	Callee	ad -> LookupInteger		902477	0					
ANR	902501	PtrMemberAccess	ad -> LookupInteger		902477	0					
ANR	902502	Identifier	ad		902477	0					
ANR	902503	Identifier	LookupInteger		902477	1					
ANR	902504	ArgumentList	"""TerminatedNormally"""		902477	1					
ANR	902505	Argument	"""TerminatedNormally"""		902477	0					
ANR	902506	PrimaryExpression	"""TerminatedNormally"""		902477	0					
ANR	902507	Argument	reallybool		902477	1					
ANR	902508	Identifier	reallybool		902477	0					
ANR	902509	CompoundStatement		7:59:131:131	902477	1					
ANR	902510	ExpressionStatement	normal = reallybool ? TRUE : FALSE	4015:2:88491:88525	902477	0	True				
ANR	902511	AssignmentExpression	normal = reallybool ? TRUE : FALSE		902477	0		=			
ANR	902512	Identifier	normal		902477	0					
ANR	902513	ConditionalExpression	reallybool ? TRUE : FALSE		902477	1					
ANR	902514	Condition	reallybool		902477	0					
ANR	902515	Identifier	reallybool		902477	0					
ANR	902516	Identifier	TRUE		902477	1					
ANR	902517	Identifier	FALSE		902477	2					
ANR	902518	ExpressionStatement	"ad -> LookupInteger ( ""ReturnValue"" , returnValue )"	4018:1:88532:88577	902477	4	True				
ANR	902519	CallExpression	"ad -> LookupInteger ( ""ReturnValue"" , returnValue )"		902477	0					
ANR	902520	Callee	ad -> LookupInteger		902477	0					
ANR	902521	PtrMemberAccess	ad -> LookupInteger		902477	0					
ANR	902522	Identifier	ad		902477	0					
ANR	902523	Identifier	LookupInteger		902477	1					
ANR	902524	ArgumentList	"""ReturnValue"""		902477	1					
ANR	902525	Argument	"""ReturnValue"""		902477	0					
ANR	902526	PrimaryExpression	"""ReturnValue"""		902477	0					
ANR	902527	Argument	returnValue		902477	1					
ANR	902528	Identifier	returnValue		902477	0					
ANR	902529	ExpressionStatement	"ad -> LookupInteger ( ""TerminatedBySignal"" , signalNumber )"	4019:1:88580:88633	902477	5	True				
ANR	902530	CallExpression	"ad -> LookupInteger ( ""TerminatedBySignal"" , signalNumber )"		902477	0					
ANR	902531	Callee	ad -> LookupInteger		902477	0					
ANR	902532	PtrMemberAccess	ad -> LookupInteger		902477	0					
ANR	902533	Identifier	ad		902477	0					
ANR	902534	Identifier	LookupInteger		902477	1					
ANR	902535	ArgumentList	"""TerminatedBySignal"""		902477	1					
ANR	902536	Argument	"""TerminatedBySignal"""		902477	0					
ANR	902537	PrimaryExpression	"""TerminatedBySignal"""		902477	0					
ANR	902538	Argument	signalNumber		902477	1					
ANR	902539	Identifier	signalNumber		902477	0					
ANR	902540	IfStatement	if ( dagNodeName )		902477	6					
ANR	902541	Condition	dagNodeName	4021:5:88641:88651	902477	0	True				
ANR	902542	Identifier	dagNodeName		902477	0					
ANR	902543	CompoundStatement		14:19:299:299	902477	1					
ANR	902544	Statement	delete	4022:2:88659:88664	902477	0	True				
ANR	902545	Statement	[	4022:8:88665:88665	902477	1	True				
ANR	902546	Statement	]	4022:9:88666:88666	902477	2	True				
ANR	902547	ExpressionStatement	dagNodeName	4022:11:88668:88679	902477	3	True				
ANR	902548	Identifier	dagNodeName		902477	0					
ANR	902549	ExpressionStatement	dagNodeName = NULL	4023:2:88683:88701	902477	4	True				
ANR	902550	AssignmentExpression	dagNodeName = NULL		902477	0		=			
ANR	902551	Identifier	dagNodeName		902477	0					
ANR	902552	Identifier	NULL		902477	1					
ANR	902553	IdentifierDeclStatement	char * mallocstr = NULL ;	4025:1:88707:88729	902477	7	True				
ANR	902554	IdentifierDecl	* mallocstr = NULL		902477	0					
ANR	902555	IdentifierDeclType	char *		902477	0					
ANR	902556	Identifier	mallocstr		902477	1					
ANR	902557	AssignmentExpression	* mallocstr = NULL		902477	2		=			
ANR	902558	Identifier	NULL		902477	0					
ANR	902559	Identifier	NULL		902477	1					
ANR	902560	ExpressionStatement	"ad -> LookupString ( dagNodeNameAttr , & mallocstr )"	4026:1:88732:88779	902477	8	True				
ANR	902561	CallExpression	"ad -> LookupString ( dagNodeNameAttr , & mallocstr )"		902477	0					
ANR	902562	Callee	ad -> LookupString		902477	0					
ANR	902563	PtrMemberAccess	ad -> LookupString		902477	0					
ANR	902564	Identifier	ad		902477	0					
ANR	902565	Identifier	LookupString		902477	1					
ANR	902566	ArgumentList	dagNodeNameAttr		902477	1					
ANR	902567	Argument	dagNodeNameAttr		902477	0					
ANR	902568	Identifier	dagNodeNameAttr		902477	0					
ANR	902569	Argument	& mallocstr		902477	1					
ANR	902570	UnaryOperationExpression	& mallocstr		902477	0					
ANR	902571	UnaryOperator	&		902477	0					
ANR	902572	Identifier	mallocstr		902477	1					
ANR	902573	IfStatement	if ( mallocstr )		902477	9					
ANR	902574	Condition	mallocstr	4027:5:88786:88794	902477	0	True				
ANR	902575	Identifier	mallocstr		902477	0					
ANR	902576	CompoundStatement		20:17:442:442	902477	1					
ANR	902577	ExpressionStatement	dagNodeName = strnewp ( mallocstr )	4028:2:88802:88836	902477	0	True				
ANR	902578	AssignmentExpression	dagNodeName = strnewp ( mallocstr )		902477	0		=			
ANR	902579	Identifier	dagNodeName		902477	0					
ANR	902580	CallExpression	strnewp ( mallocstr )		902477	1					
ANR	902581	Callee	strnewp		902477	0					
ANR	902582	Identifier	strnewp		902477	0					
ANR	902583	ArgumentList	mallocstr		902477	1					
ANR	902584	Argument	mallocstr		902477	0					
ANR	902585	Identifier	mallocstr		902477	0					
ANR	902586	ExpressionStatement	free ( mallocstr )	4029:2:88840:88857	902477	1	True				
ANR	902587	CallExpression	free ( mallocstr )		902477	0					
ANR	902588	Callee	free		902477	0					
ANR	902589	Identifier	free		902477	0					
ANR	902590	ArgumentList	mallocstr		902477	1					
ANR	902591	Argument	mallocstr		902477	0					
ANR	902592	Identifier	mallocstr		902477	0					
ANR	902593	ExpressionStatement	mallocstr = NULL	4030:2:88861:88877	902477	2	True				
ANR	902594	AssignmentExpression	mallocstr = NULL		902477	0		=			
ANR	902595	Identifier	mallocstr		902477	0					
ANR	902596	Identifier	NULL		902477	1					
ANR	902597	ReturnType	void		902477	1					
ANR	902598	Identifier	PostScriptTerminatedEvent :: initFromClassAd		902477	2					
ANR	902599	ParameterList	ClassAd * ad		902477	3					
ANR	902600	Parameter	ClassAd * ad	4007:43:88342:88352	902477	0	True				
ANR	902601	ParameterType	ClassAd *		902477	0					
ANR	902602	Identifier	ad		902477	1					
ANR	902603	CFGEntryNode	ENTRY		902477		True				
ANR	902604	CFGExitNode	EXIT		902477		True				
ANR	902605	Symbol	normal		902477						
ANR	902606	Symbol	& mallocstr		902477						
ANR	902607	Symbol	ad		902477						
ANR	902608	Symbol	returnValue		902477						
ANR	902609	Symbol	NULL		902477						
ANR	902610	Symbol	mallocstr		902477						
ANR	902611	Symbol	TRUE		902477						
ANR	902612	Symbol	* ad		902477						
ANR	902613	Symbol	dagNodeName		902477						
ANR	902614	Symbol	signalNumber		902477						
ANR	902615	Symbol	strnewp		902477						
ANR	902616	Symbol	ad -> LookupInteger		902477						
ANR	902617	Symbol	FALSE		902477						
ANR	902618	Symbol	reallybool		902477						
ANR	902619	Symbol	dagNodeNameAttr		902477						
ANR	902620	Function	JobDisconnectedEvent :: JobDisconnectedEvent	4037:0:88923:89133							
ANR	902621	FunctionDef	JobDisconnectedEvent :: JobDisconnectedEvent ()		902620	0					
ANR	902622	CompoundStatement		4038:0:88972:89133	902620	0					
ANR	902623	ExpressionStatement	eventNumber = ULOG_JOB_DISCONNECTED	4039:1:88975:89010	902620	0	True				
ANR	902624	AssignmentExpression	eventNumber = ULOG_JOB_DISCONNECTED		902620	0		=			
ANR	902625	Identifier	eventNumber		902620	0					
ANR	902626	Identifier	ULOG_JOB_DISCONNECTED		902620	1					
ANR	902627	ExpressionStatement	startd_addr = NULL	4040:1:89013:89031	902620	1	True				
ANR	902628	AssignmentExpression	startd_addr = NULL		902620	0		=			
ANR	902629	Identifier	startd_addr		902620	0					
ANR	902630	Identifier	NULL		902620	1					
ANR	902631	ExpressionStatement	startd_name = NULL	4041:1:89034:89052	902620	2	True				
ANR	902632	AssignmentExpression	startd_name = NULL		902620	0		=			
ANR	902633	Identifier	startd_name		902620	0					
ANR	902634	Identifier	NULL		902620	1					
ANR	902635	ExpressionStatement	disconnect_reason = NULL	4042:1:89055:89079	902620	3	True				
ANR	902636	AssignmentExpression	disconnect_reason = NULL		902620	0		=			
ANR	902637	Identifier	disconnect_reason		902620	0					
ANR	902638	Identifier	NULL		902620	1					
ANR	902639	ExpressionStatement	no_reconnect_reason = NULL	4043:1:89082:89108	902620	4	True				
ANR	902640	AssignmentExpression	no_reconnect_reason = NULL		902620	0		=			
ANR	902641	Identifier	no_reconnect_reason		902620	0					
ANR	902642	Identifier	NULL		902620	1					
ANR	902643	ExpressionStatement	can_reconnect = true	4044:1:89111:89131	902620	5	True				
ANR	902644	AssignmentExpression	can_reconnect = true		902620	0		=			
ANR	902645	Identifier	can_reconnect		902620	0					
ANR	902646	Identifier	true		902620	1					
ANR	902647	Identifier	JobDisconnectedEvent :: JobDisconnectedEvent		902620	1					
ANR	902648	ParameterList			902620	2					
ANR	902649	CFGEntryNode	ENTRY		902620		True				
ANR	902650	CFGExitNode	EXIT		902620		True				
ANR	902651	Symbol	ULOG_JOB_DISCONNECTED		902620						
ANR	902652	Symbol	NULL		902620						
ANR	902653	Symbol	eventNumber		902620						
ANR	902654	Symbol	startd_name		902620						
ANR	902655	Symbol	true		902620						
ANR	902656	Symbol	startd_addr		902620						
ANR	902657	Symbol	no_reconnect_reason		902620						
ANR	902658	Symbol	disconnect_reason		902620						
ANR	902659	Symbol	can_reconnect		902620						
ANR	902660	Function	JobDisconnectedEvent :: ~JobDisconnectedEvent	4048:0:89137:89413							
ANR	902661	FunctionDef	JobDisconnectedEvent :: ~JobDisconnectedEvent ()		902660	0					
ANR	902662	CompoundStatement		4049:0:89187:89413	902660	0					
ANR	902663	IfStatement	if ( startd_addr )		902660	0					
ANR	902664	Condition	startd_addr	4050:5:89194:89204	902660	0	True				
ANR	902665	Identifier	startd_addr		902660	0					
ANR	902666	CompoundStatement		2:19:20:20	902660	1					
ANR	902667	Statement	delete	4051:2:89212:89217	902660	0	True				
ANR	902668	Statement	[	4051:9:89219:89219	902660	1	True				
ANR	902669	Statement	]	4051:10:89220:89220	902660	2	True				
ANR	902670	ExpressionStatement	startd_addr	4051:12:89222:89233	902660	3	True				
ANR	902671	Identifier	startd_addr		902660	0					
ANR	902672	IfStatement	if ( startd_name )		902660	1					
ANR	902673	Condition	startd_name	4053:5:89243:89253	902660	0	True				
ANR	902674	Identifier	startd_name		902660	0					
ANR	902675	CompoundStatement		5:19:69:69	902660	1					
ANR	902676	Statement	delete	4054:2:89261:89266	902660	0	True				
ANR	902677	Statement	[	4054:9:89268:89268	902660	1	True				
ANR	902678	Statement	]	4054:10:89269:89269	902660	2	True				
ANR	902679	ExpressionStatement	startd_name	4054:12:89271:89282	902660	3	True				
ANR	902680	Identifier	startd_name		902660	0					
ANR	902681	IfStatement	if ( disconnect_reason )		902660	2					
ANR	902682	Condition	disconnect_reason	4056:5:89292:89308	902660	0	True				
ANR	902683	Identifier	disconnect_reason		902660	0					
ANR	902684	CompoundStatement		8:25:124:124	902660	1					
ANR	902685	Statement	delete	4057:2:89316:89321	902660	0	True				
ANR	902686	Statement	[	4057:9:89323:89323	902660	1	True				
ANR	902687	Statement	]	4057:10:89324:89324	902660	2	True				
ANR	902688	ExpressionStatement	disconnect_reason	4057:12:89326:89343	902660	3	True				
ANR	902689	Identifier	disconnect_reason		902660	0					
ANR	902690	IfStatement	if ( no_reconnect_reason )		902660	3					
ANR	902691	Condition	no_reconnect_reason	4059:5:89353:89371	902660	0	True				
ANR	902692	Identifier	no_reconnect_reason		902660	0					
ANR	902693	CompoundStatement		11:27:187:187	902660	1					
ANR	902694	Statement	delete	4060:2:89379:89384	902660	0	True				
ANR	902695	Statement	[	4060:9:89386:89386	902660	1	True				
ANR	902696	Statement	]	4060:10:89387:89387	902660	2	True				
ANR	902697	ExpressionStatement	no_reconnect_reason	4060:12:89389:89408	902660	3	True				
ANR	902698	Identifier	no_reconnect_reason		902660	0					
ANR	902699	Identifier	JobDisconnectedEvent :: ~JobDisconnectedEvent		902660	1					
ANR	902700	ParameterList			902660	2					
ANR	902701	CFGEntryNode	ENTRY		902660		True				
ANR	902702	CFGExitNode	EXIT		902660		True				
ANR	902703	Symbol	startd_name		902660						
ANR	902704	Symbol	startd_addr		902660						
ANR	902705	Symbol	no_reconnect_reason		902660						
ANR	902706	Symbol	disconnect_reason		902660						
ANR	902707	Function	JobDisconnectedEvent :: setStartdAddr	4065:0:89417:89673							
ANR	902708	FunctionDef	JobDisconnectedEvent :: setStartdAddr (const char * startd)		902707	0					
ANR	902709	CompoundStatement		4067:0:89480:89673	902707	0					
ANR	902710	IfStatement	if ( startd_addr )		902707	0					
ANR	902711	Condition	startd_addr	4068:5:89487:89497	902707	0	True				
ANR	902712	Identifier	startd_addr		902707	0					
ANR	902713	CompoundStatement		2:19:20:20	902707	1					
ANR	902714	Statement	delete	4069:2:89505:89510	902707	0	True				
ANR	902715	Statement	[	4069:8:89511:89511	902707	1	True				
ANR	902716	Statement	]	4069:9:89512:89512	902707	2	True				
ANR	902717	ExpressionStatement	startd_addr	4069:11:89514:89525	902707	3	True				
ANR	902718	Identifier	startd_addr		902707	0					
ANR	902719	ExpressionStatement	startd_addr = NULL	4070:2:89529:89547	902707	4	True				
ANR	902720	AssignmentExpression	startd_addr = NULL		902707	0		=			
ANR	902721	Identifier	startd_addr		902707	0					
ANR	902722	Identifier	NULL		902707	1					
ANR	902723	IfStatement	if ( startd )		902707	1					
ANR	902724	Condition	startd	4072:5:89557:89562	902707	0	True				
ANR	902725	Identifier	startd		902707	0					
ANR	902726	CompoundStatement		6:14:85:85	902707	1					
ANR	902727	ExpressionStatement	startd_addr = strnewp ( startd )	4073:2:89570:89601	902707	0	True				
ANR	902728	AssignmentExpression	startd_addr = strnewp ( startd )		902707	0		=			
ANR	902729	Identifier	startd_addr		902707	0					
ANR	902730	CallExpression	strnewp ( startd )		902707	1					
ANR	902731	Callee	strnewp		902707	0					
ANR	902732	Identifier	strnewp		902707	0					
ANR	902733	ArgumentList	startd		902707	1					
ANR	902734	Argument	startd		902707	0					
ANR	902735	Identifier	startd		902707	0					
ANR	902736	IfStatement	if ( ! startd_addr )		902707	1					
ANR	902737	Condition	! startd_addr	4074:6:89609:89620	902707	0	True				
ANR	902738	UnaryOperationExpression	! startd_addr		902707	0					
ANR	902739	UnaryOperator	!		902707	0					
ANR	902740	Identifier	startd_addr		902707	1					
ANR	902741	CompoundStatement		8:21:143:143	902707	1					
ANR	902742	ExpressionStatement	"EXCEPT ( ""ERROR: out of memory!\\n"" )"	4075:3:89629:89664	902707	0	True				
ANR	902743	CallExpression	"EXCEPT ( ""ERROR: out of memory!\\n"" )"		902707	0					
ANR	902744	Callee	EXCEPT		902707	0					
ANR	902745	Identifier	EXCEPT		902707	0					
ANR	902746	ArgumentList	"""ERROR: out of memory!\\n"""		902707	1					
ANR	902747	Argument	"""ERROR: out of memory!\\n"""		902707	0					
ANR	902748	PrimaryExpression	"""ERROR: out of memory!\\n"""		902707	0					
ANR	902749	ReturnType	void		902707	1					
ANR	902750	Identifier	JobDisconnectedEvent :: setStartdAddr		902707	2					
ANR	902751	ParameterList	const char * startd		902707	3					
ANR	902752	Parameter	const char * startd	4066:37:89459:89476	902707	0	True				
ANR	902753	ParameterType	const char *		902707	0					
ANR	902754	Identifier	startd		902707	1					
ANR	902755	CFGEntryNode	ENTRY		902707		True				
ANR	902756	CFGExitNode	EXIT		902707		True				
ANR	902757	Symbol	NULL		902707						
ANR	902758	Symbol	startd_addr		902707						
ANR	902759	Symbol	strnewp		902707						
ANR	902760	Symbol	startd		902707						
ANR	902761	Function	JobDisconnectedEvent :: setStartdName	4081:0:89677:89927							
ANR	902762	FunctionDef	JobDisconnectedEvent :: setStartdName (const char * name)		902761	0					
ANR	902763	CompoundStatement		4083:0:89738:89927	902761	0					
ANR	902764	IfStatement	if ( startd_name )		902761	0					
ANR	902765	Condition	startd_name	4084:5:89745:89755	902761	0	True				
ANR	902766	Identifier	startd_name		902761	0					
ANR	902767	CompoundStatement		2:19:20:20	902761	1					
ANR	902768	Statement	delete	4085:2:89763:89768	902761	0	True				
ANR	902769	Statement	[	4085:8:89769:89769	902761	1	True				
ANR	902770	Statement	]	4085:9:89770:89770	902761	2	True				
ANR	902771	ExpressionStatement	startd_name	4085:11:89772:89783	902761	3	True				
ANR	902772	Identifier	startd_name		902761	0					
ANR	902773	ExpressionStatement	startd_name = NULL	4086:2:89787:89805	902761	4	True				
ANR	902774	AssignmentExpression	startd_name = NULL		902761	0		=			
ANR	902775	Identifier	startd_name		902761	0					
ANR	902776	Identifier	NULL		902761	1					
ANR	902777	IfStatement	if ( name )		902761	1					
ANR	902778	Condition	name	4088:5:89815:89818	902761	0	True				
ANR	902779	Identifier	name		902761	0					
ANR	902780	CompoundStatement		6:12:83:83	902761	1					
ANR	902781	ExpressionStatement	startd_name = strnewp ( name )	4089:2:89826:89855	902761	0	True				
ANR	902782	AssignmentExpression	startd_name = strnewp ( name )		902761	0		=			
ANR	902783	Identifier	startd_name		902761	0					
ANR	902784	CallExpression	strnewp ( name )		902761	1					
ANR	902785	Callee	strnewp		902761	0					
ANR	902786	Identifier	strnewp		902761	0					
ANR	902787	ArgumentList	name		902761	1					
ANR	902788	Argument	name		902761	0					
ANR	902789	Identifier	name		902761	0					
ANR	902790	IfStatement	if ( ! startd_name )		902761	1					
ANR	902791	Condition	! startd_name	4090:6:89863:89874	902761	0	True				
ANR	902792	UnaryOperationExpression	! startd_name		902761	0					
ANR	902793	UnaryOperator	!		902761	0					
ANR	902794	Identifier	startd_name		902761	1					
ANR	902795	CompoundStatement		8:21:139:139	902761	1					
ANR	902796	ExpressionStatement	"EXCEPT ( ""ERROR: out of memory!\\n"" )"	4091:3:89883:89918	902761	0	True				
ANR	902797	CallExpression	"EXCEPT ( ""ERROR: out of memory!\\n"" )"		902761	0					
ANR	902798	Callee	EXCEPT		902761	0					
ANR	902799	Identifier	EXCEPT		902761	0					
ANR	902800	ArgumentList	"""ERROR: out of memory!\\n"""		902761	1					
ANR	902801	Argument	"""ERROR: out of memory!\\n"""		902761	0					
ANR	902802	PrimaryExpression	"""ERROR: out of memory!\\n"""		902761	0					
ANR	902803	ReturnType	void		902761	1					
ANR	902804	Identifier	JobDisconnectedEvent :: setStartdName		902761	2					
ANR	902805	ParameterList	const char * name		902761	3					
ANR	902806	Parameter	const char * name	4082:37:89719:89734	902761	0	True				
ANR	902807	ParameterType	const char *		902761	0					
ANR	902808	Identifier	name		902761	1					
ANR	902809	CFGEntryNode	ENTRY		902761		True				
ANR	902810	CFGExitNode	EXIT		902761		True				
ANR	902811	Symbol	NULL		902761						
ANR	902812	Symbol	startd_name		902761						
ANR	902813	Symbol	name		902761						
ANR	902814	Symbol	strnewp		902761						
ANR	902815	Function	JobDisconnectedEvent :: setDisconnectReason	4097:0:89931:90236							
ANR	902816	FunctionDef	JobDisconnectedEvent :: setDisconnectReason (const char * reason_str)		902815	0					
ANR	902817	CompoundStatement		4099:0:90004:90236	902815	0					
ANR	902818	IfStatement	if ( disconnect_reason )		902815	0					
ANR	902819	Condition	disconnect_reason	4100:5:90011:90027	902815	0	True				
ANR	902820	Identifier	disconnect_reason		902815	0					
ANR	902821	CompoundStatement		2:25:26:26	902815	1					
ANR	902822	Statement	delete	4101:2:90035:90040	902815	0	True				
ANR	902823	Statement	[	4101:9:90042:90042	902815	1	True				
ANR	902824	Statement	]	4101:10:90043:90043	902815	2	True				
ANR	902825	ExpressionStatement	disconnect_reason	4101:12:90045:90062	902815	3	True				
ANR	902826	Identifier	disconnect_reason		902815	0					
ANR	902827	ExpressionStatement	disconnect_reason = NULL	4102:2:90066:90090	902815	4	True				
ANR	902828	AssignmentExpression	disconnect_reason = NULL		902815	0		=			
ANR	902829	Identifier	disconnect_reason		902815	0					
ANR	902830	Identifier	NULL		902815	1					
ANR	902831	IfStatement	if ( reason_str )		902815	1					
ANR	902832	Condition	reason_str	4104:5:90100:90109	902815	0	True				
ANR	902833	Identifier	reason_str		902815	0					
ANR	902834	CompoundStatement		6:18:108:108	902815	1					
ANR	902835	ExpressionStatement	disconnect_reason = strnewp ( reason_str )	4105:2:90117:90158	902815	0	True				
ANR	902836	AssignmentExpression	disconnect_reason = strnewp ( reason_str )		902815	0		=			
ANR	902837	Identifier	disconnect_reason		902815	0					
ANR	902838	CallExpression	strnewp ( reason_str )		902815	1					
ANR	902839	Callee	strnewp		902815	0					
ANR	902840	Identifier	strnewp		902815	0					
ANR	902841	ArgumentList	reason_str		902815	1					
ANR	902842	Argument	reason_str		902815	0					
ANR	902843	Identifier	reason_str		902815	0					
ANR	902844	IfStatement	if ( ! disconnect_reason )		902815	1					
ANR	902845	Condition	! disconnect_reason	4106:6:90166:90183	902815	0	True				
ANR	902846	UnaryOperationExpression	! disconnect_reason		902815	0					
ANR	902847	UnaryOperator	!		902815	0					
ANR	902848	Identifier	disconnect_reason		902815	1					
ANR	902849	CompoundStatement		8:27:182:182	902815	1					
ANR	902850	ExpressionStatement	"EXCEPT ( ""ERROR: out of memory!\\n"" )"	4107:3:90192:90227	902815	0	True				
ANR	902851	CallExpression	"EXCEPT ( ""ERROR: out of memory!\\n"" )"		902815	0					
ANR	902852	Callee	EXCEPT		902815	0					
ANR	902853	Identifier	EXCEPT		902815	0					
ANR	902854	ArgumentList	"""ERROR: out of memory!\\n"""		902815	1					
ANR	902855	Argument	"""ERROR: out of memory!\\n"""		902815	0					
ANR	902856	PrimaryExpression	"""ERROR: out of memory!\\n"""		902815	0					
ANR	902857	ReturnType	void		902815	1					
ANR	902858	Identifier	JobDisconnectedEvent :: setDisconnectReason		902815	2					
ANR	902859	ParameterList	const char * reason_str		902815	3					
ANR	902860	Parameter	const char * reason_str	4098:43:89979:90000	902815	0	True				
ANR	902861	ParameterType	const char *		902815	0					
ANR	902862	Identifier	reason_str		902815	1					
ANR	902863	CFGEntryNode	ENTRY		902815		True				
ANR	902864	CFGExitNode	EXIT		902815		True				
ANR	902865	Symbol	reason_str		902815						
ANR	902866	Symbol	NULL		902815						
ANR	902867	Symbol	strnewp		902815						
ANR	902868	Symbol	disconnect_reason		902815						
ANR	902869	Function	JobDisconnectedEvent :: setNoReconnectReason	4113:0:90240:90581							
ANR	902870	FunctionDef	JobDisconnectedEvent :: setNoReconnectReason (const char * reason_str)		902869	0					
ANR	902871	CompoundStatement		4115:0:90314:90581	902869	0					
ANR	902872	IfStatement	if ( no_reconnect_reason )		902869	0					
ANR	902873	Condition	no_reconnect_reason	4116:5:90321:90339	902869	0	True				
ANR	902874	Identifier	no_reconnect_reason		902869	0					
ANR	902875	CompoundStatement		2:27:28:28	902869	1					
ANR	902876	Statement	delete	4117:2:90347:90352	902869	0	True				
ANR	902877	Statement	[	4117:9:90354:90354	902869	1	True				
ANR	902878	Statement	]	4117:10:90355:90355	902869	2	True				
ANR	902879	ExpressionStatement	no_reconnect_reason	4117:12:90357:90376	902869	3	True				
ANR	902880	Identifier	no_reconnect_reason		902869	0					
ANR	902881	ExpressionStatement	no_reconnect_reason = NULL	4118:2:90380:90406	902869	4	True				
ANR	902882	AssignmentExpression	no_reconnect_reason = NULL		902869	0		=			
ANR	902883	Identifier	no_reconnect_reason		902869	0					
ANR	902884	Identifier	NULL		902869	1					
ANR	902885	IfStatement	if ( reason_str )		902869	1					
ANR	902886	Condition	reason_str	4120:5:90416:90425	902869	0	True				
ANR	902887	Identifier	reason_str		902869	0					
ANR	902888	CompoundStatement		6:18:114:114	902869	1					
ANR	902889	ExpressionStatement	no_reconnect_reason = strnewp ( reason_str )	4121:2:90433:90476	902869	0	True				
ANR	902890	AssignmentExpression	no_reconnect_reason = strnewp ( reason_str )		902869	0		=			
ANR	902891	Identifier	no_reconnect_reason		902869	0					
ANR	902892	CallExpression	strnewp ( reason_str )		902869	1					
ANR	902893	Callee	strnewp		902869	0					
ANR	902894	Identifier	strnewp		902869	0					
ANR	902895	ArgumentList	reason_str		902869	1					
ANR	902896	Argument	reason_str		902869	0					
ANR	902897	Identifier	reason_str		902869	0					
ANR	902898	IfStatement	if ( ! no_reconnect_reason )		902869	1					
ANR	902899	Condition	! no_reconnect_reason	4122:6:90484:90503	902869	0	True				
ANR	902900	UnaryOperationExpression	! no_reconnect_reason		902869	0					
ANR	902901	UnaryOperator	!		902869	0					
ANR	902902	Identifier	no_reconnect_reason		902869	1					
ANR	902903	CompoundStatement		8:29:192:192	902869	1					
ANR	902904	ExpressionStatement	"EXCEPT ( ""ERROR: out of memory!\\n"" )"	4123:3:90512:90547	902869	0	True				
ANR	902905	CallExpression	"EXCEPT ( ""ERROR: out of memory!\\n"" )"		902869	0					
ANR	902906	Callee	EXCEPT		902869	0					
ANR	902907	Identifier	EXCEPT		902869	0					
ANR	902908	ArgumentList	"""ERROR: out of memory!\\n"""		902869	1					
ANR	902909	Argument	"""ERROR: out of memory!\\n"""		902869	0					
ANR	902910	PrimaryExpression	"""ERROR: out of memory!\\n"""		902869	0					
ANR	902911	ExpressionStatement	can_reconnect = false	4125:2:90555:90576	902869	2	True				
ANR	902912	AssignmentExpression	can_reconnect = false		902869	0		=			
ANR	902913	Identifier	can_reconnect		902869	0					
ANR	902914	Identifier	false		902869	1					
ANR	902915	ReturnType	void		902869	1					
ANR	902916	Identifier	JobDisconnectedEvent :: setNoReconnectReason		902869	2					
ANR	902917	ParameterList	const char * reason_str		902869	3					
ANR	902918	Parameter	const char * reason_str	4114:44:90289:90310	902869	0	True				
ANR	902919	ParameterType	const char *		902869	0					
ANR	902920	Identifier	reason_str		902869	1					
ANR	902921	CFGEntryNode	ENTRY		902869		True				
ANR	902922	CFGExitNode	EXIT		902869		True				
ANR	902923	Symbol	reason_str		902869						
ANR	902924	Symbol	NULL		902869						
ANR	902925	Symbol	false		902869						
ANR	902926	Symbol	no_reconnect_reason		902869						
ANR	902927	Symbol	strnewp		902869						
ANR	902928	Symbol	can_reconnect		902869						
ANR	902929	Function	JobDisconnectedEvent :: writeEvent	4130:0:90585:91719							
ANR	902930	FunctionDef	JobDisconnectedEvent :: writeEvent (FILE * file)		902929	0					
ANR	902931	CompoundStatement		4132:0:90636:91719	902929	0					
ANR	902932	IfStatement	if ( ! disconnect_reason )		902929	0					
ANR	902933	Condition	! disconnect_reason	4133:5:90643:90661	902929	0	True				
ANR	902934	UnaryOperationExpression	! disconnect_reason		902929	0					
ANR	902935	UnaryOperator	!		902929	0					
ANR	902936	Identifier	disconnect_reason		902929	1					
ANR	902937	CompoundStatement		2:27:28:28	902929	1					
ANR	902938	Statement	EXCEPT	4134:2:90669:90674	902929	0	True				
ANR	902939	Statement	(	4134:8:90675:90675	902929	1	True				
ANR	902940	Statement	"""JobDisconnectedEvent::writeEvent() called without """	4134:10:90677:90728	902929	2	True				
ANR	902941	Statement	"""disconnect_reason"""	4135:4:90734:90752	902929	3	True				
ANR	902942	Statement	)	4135:24:90754:90754	902929	4	True				
ANR	902943	ExpressionStatement		4135:25:90755:90755	902929	5	True				
ANR	902944	IfStatement	if ( ! startd_addr )		902929	1					
ANR	902945	Condition	! startd_addr	4137:5:90765:90777	902929	0	True				
ANR	902946	UnaryOperationExpression	! startd_addr		902929	0					
ANR	902947	UnaryOperator	!		902929	0					
ANR	902948	Identifier	startd_addr		902929	1					
ANR	902949	CompoundStatement		6:21:144:144	902929	1					
ANR	902950	Statement	EXCEPT	4138:2:90785:90790	902929	0	True				
ANR	902951	Statement	(	4138:8:90791:90791	902929	1	True				
ANR	902952	Statement	"""JobDisconnectedEvent::writeEvent() called without """	4138:10:90793:90844	902929	2	True				
ANR	902953	Statement	"""startd_addr"""	4139:4:90850:90862	902929	3	True				
ANR	902954	Statement	)	4139:18:90864:90864	902929	4	True				
ANR	902955	ExpressionStatement		4139:19:90865:90865	902929	5	True				
ANR	902956	IfStatement	if ( ! startd_name )		902929	2					
ANR	902957	Condition	! startd_name	4141:5:90875:90887	902929	0	True				
ANR	902958	UnaryOperationExpression	! startd_name		902929	0					
ANR	902959	UnaryOperator	!		902929	0					
ANR	902960	Identifier	startd_name		902929	1					
ANR	902961	CompoundStatement		10:21:254:254	902929	1					
ANR	902962	Statement	EXCEPT	4142:2:90895:90900	902929	0	True				
ANR	902963	Statement	(	4142:8:90901:90901	902929	1	True				
ANR	902964	Statement	"""JobDisconnectedEvent::writeEvent() called without """	4142:10:90903:90954	902929	2	True				
ANR	902965	Statement	"""startd_name"""	4143:4:90960:90972	902929	3	True				
ANR	902966	Statement	)	4143:18:90974:90974	902929	4	True				
ANR	902967	ExpressionStatement		4143:19:90975:90975	902929	5	True				
ANR	902968	IfStatement	if ( ! can_reconnect && ! no_reconnect_reason )		902929	3					
ANR	902969	Condition	! can_reconnect && ! no_reconnect_reason	4145:5:90985:91024	902929	0	True				
ANR	902970	AndExpression	! can_reconnect && ! no_reconnect_reason		902929	0		&&			
ANR	902971	UnaryOperationExpression	! can_reconnect		902929	0					
ANR	902972	UnaryOperator	!		902929	0					
ANR	902973	Identifier	can_reconnect		902929	1					
ANR	902974	UnaryOperationExpression	! no_reconnect_reason		902929	1					
ANR	902975	UnaryOperator	!		902929	0					
ANR	902976	Identifier	no_reconnect_reason		902929	1					
ANR	902977	CompoundStatement		14:48:391:391	902929	1					
ANR	902978	Statement	EXCEPT	4146:2:91032:91037	902929	0	True				
ANR	902979	Statement	(	4146:8:91038:91038	902929	1	True				
ANR	902980	Statement	"""impossible: JobDisconnectedEvent::writeEvent() called """	4146:10:91040:91095	902929	2	True				
ANR	902981	Statement	"""without no_reconnect_reason when can_reconnect is FALSE"""	4147:4:91101:91157	902929	3	True				
ANR	902982	Statement	)	4147:62:91159:91159	902929	4	True				
ANR	902983	ExpressionStatement		4147:63:91160:91160	902929	5	True				
ANR	902984	IfStatement	"if ( fprintf ( file , ""Job disconnected, %s reconnect\\n"" , can_reconnect ? ""attempting to"" : ""can not"" ) < 0 )"		902929	4					
ANR	902985	Condition	"fprintf ( file , ""Job disconnected, %s reconnect\\n"" , can_reconnect ? ""attempting to"" : ""can not"" ) < 0"	4150:5:91171:91272	902929	0	True				
ANR	902986	RelationalExpression	"fprintf ( file , ""Job disconnected, %s reconnect\\n"" , can_reconnect ? ""attempting to"" : ""can not"" ) < 0"		902929	0		<			
ANR	902987	CallExpression	"fprintf ( file , ""Job disconnected, %s reconnect\\n"" , can_reconnect ? ""attempting to"" : ""can not"" )"		902929	0					
ANR	902988	Callee	fprintf		902929	0					
ANR	902989	Identifier	fprintf		902929	0					
ANR	902990	ArgumentList	file		902929	1					
ANR	902991	Argument	file		902929	0					
ANR	902992	Identifier	file		902929	0					
ANR	902993	Argument	"""Job disconnected, %s reconnect\\n"""		902929	1					
ANR	902994	PrimaryExpression	"""Job disconnected, %s reconnect\\n"""		902929	0					
ANR	902995	Argument	"can_reconnect ? ""attempting to"" : ""can not"""		902929	2					
ANR	902996	ConditionalExpression	"can_reconnect ? ""attempting to"" : ""can not"""		902929	0					
ANR	902997	Condition	can_reconnect		902929	0					
ANR	902998	Identifier	can_reconnect		902929	0					
ANR	902999	PrimaryExpression	"""attempting to"""		902929	1					
ANR	903000	PrimaryExpression	"""can not"""		902929	2					
ANR	903001	PrimaryExpression	0		902929	1					
ANR	903002	CompoundStatement		20:55:639:639	902929	1					
ANR	903003	ReturnStatement	return 0 ;	4152:2:91280:91288	902929	0	True				
ANR	903004	PrimaryExpression	0		902929	0					
ANR	903005	IfStatement	"if ( fprintf ( file , ""    %.8191s\\n"" , disconnect_reason ) < 0 )"		902929	5					
ANR	903006	Condition	"fprintf ( file , ""    %.8191s\\n"" , disconnect_reason ) < 0"	4154:5:91298:91350	902929	0	True				
ANR	903007	RelationalExpression	"fprintf ( file , ""    %.8191s\\n"" , disconnect_reason ) < 0"		902929	0		<			
ANR	903008	CallExpression	"fprintf ( file , ""    %.8191s\\n"" , disconnect_reason )"		902929	0					
ANR	903009	Callee	fprintf		902929	0					
ANR	903010	Identifier	fprintf		902929	0					
ANR	903011	ArgumentList	file		902929	1					
ANR	903012	Argument	file		902929	0					
ANR	903013	Identifier	file		902929	0					
ANR	903014	Argument	"""    %.8191s\\n"""		902929	1					
ANR	903015	PrimaryExpression	"""    %.8191s\\n"""		902929	0					
ANR	903016	Argument	disconnect_reason		902929	2					
ANR	903017	Identifier	disconnect_reason		902929	0					
ANR	903018	PrimaryExpression	0		902929	1					
ANR	903019	CompoundStatement		23:61:717:717	902929	1					
ANR	903020	ReturnStatement	return 0 ;	4155:2:91358:91366	902929	0	True				
ANR	903021	PrimaryExpression	0		902929	0					
ANR	903022	IfStatement	"if ( fprintf ( file , ""    %s reconnect to %s %s\\n"" , can_reconnect ? ""Trying to"" : ""Can not"" , startd_name , startd_addr ) < 0 )"		902929	6					
ANR	903023	Condition	"fprintf ( file , ""    %s reconnect to %s %s\\n"" , can_reconnect ? ""Trying to"" : ""Can not"" , startd_name , startd_addr ) < 0"	4157:5:91376:91498	902929	0	True				
ANR	903024	RelationalExpression	"fprintf ( file , ""    %s reconnect to %s %s\\n"" , can_reconnect ? ""Trying to"" : ""Can not"" , startd_name , startd_addr ) < 0"		902929	0		<			
ANR	903025	CallExpression	"fprintf ( file , ""    %s reconnect to %s %s\\n"" , can_reconnect ? ""Trying to"" : ""Can not"" , startd_name , startd_addr )"		902929	0					
ANR	903026	Callee	fprintf		902929	0					
ANR	903027	Identifier	fprintf		902929	0					
ANR	903028	ArgumentList	file		902929	1					
ANR	903029	Argument	file		902929	0					
ANR	903030	Identifier	file		902929	0					
ANR	903031	Argument	"""    %s reconnect to %s %s\\n"""		902929	1					
ANR	903032	PrimaryExpression	"""    %s reconnect to %s %s\\n"""		902929	0					
ANR	903033	Argument	"can_reconnect ? ""Trying to"" : ""Can not"""		902929	2					
ANR	903034	ConditionalExpression	"can_reconnect ? ""Trying to"" : ""Can not"""		902929	0					
ANR	903035	Condition	can_reconnect		902929	0					
ANR	903036	Identifier	can_reconnect		902929	0					
ANR	903037	PrimaryExpression	"""Trying to"""		902929	1					
ANR	903038	PrimaryExpression	"""Can not"""		902929	2					
ANR	903039	Argument	startd_name		902929	3					
ANR	903040	Identifier	startd_name		902929	0					
ANR	903041	Argument	startd_addr		902929	4					
ANR	903042	Identifier	startd_addr		902929	0					
ANR	903043	PrimaryExpression	0		902929	1					
ANR	903044	CompoundStatement		28:36:865:865	902929	1					
ANR	903045	ReturnStatement	return 0 ;	4160:2:91506:91514	902929	0	True				
ANR	903046	PrimaryExpression	0		902929	0					
ANR	903047	IfStatement	if ( no_reconnect_reason )		902929	7					
ANR	903048	Condition	no_reconnect_reason	4162:5:91524:91542	902929	0	True				
ANR	903049	Identifier	no_reconnect_reason		902929	0					
ANR	903050	CompoundStatement		31:27:909:909	902929	1					
ANR	903051	IfStatement	"if ( fprintf ( file , ""    %.8191s\\n"" , no_reconnect_reason ) < 0 )"		902929	0					
ANR	903052	Condition	"fprintf ( file , ""    %.8191s\\n"" , no_reconnect_reason ) < 0"	4163:6:91554:91608	902929	0	True				
ANR	903053	RelationalExpression	"fprintf ( file , ""    %.8191s\\n"" , no_reconnect_reason ) < 0"		902929	0		<			
ANR	903054	CallExpression	"fprintf ( file , ""    %.8191s\\n"" , no_reconnect_reason )"		902929	0					
ANR	903055	Callee	fprintf		902929	0					
ANR	903056	Identifier	fprintf		902929	0					
ANR	903057	ArgumentList	file		902929	1					
ANR	903058	Argument	file		902929	0					
ANR	903059	Identifier	file		902929	0					
ANR	903060	Argument	"""    %.8191s\\n"""		902929	1					
ANR	903061	PrimaryExpression	"""    %.8191s\\n"""		902929	0					
ANR	903062	Argument	no_reconnect_reason		902929	2					
ANR	903063	Identifier	no_reconnect_reason		902929	0					
ANR	903064	PrimaryExpression	0		902929	1					
ANR	903065	CompoundStatement		32:64:975:975	902929	1					
ANR	903066	ReturnStatement	return 0 ;	4164:3:91617:91625	902929	0	True				
ANR	903067	PrimaryExpression	0		902929	0					
ANR	903068	IfStatement	"if ( fprintf ( file , ""    Rescheduling job\\n"" ) < 0 )"		902929	1					
ANR	903069	Condition	"fprintf ( file , ""    Rescheduling job\\n"" ) < 0"	4166:6:91637:91679	902929	0	True				
ANR	903070	RelationalExpression	"fprintf ( file , ""    Rescheduling job\\n"" ) < 0"		902929	0		<			
ANR	903071	CallExpression	"fprintf ( file , ""    Rescheduling job\\n"" )"		902929	0					
ANR	903072	Callee	fprintf		902929	0					
ANR	903073	Identifier	fprintf		902929	0					
ANR	903074	ArgumentList	file		902929	1					
ANR	903075	Argument	file		902929	0					
ANR	903076	Identifier	file		902929	0					
ANR	903077	Argument	"""    Rescheduling job\\n"""		902929	1					
ANR	903078	PrimaryExpression	"""    Rescheduling job\\n"""		902929	0					
ANR	903079	PrimaryExpression	0		902929	1					
ANR	903080	CompoundStatement		35:52:1046:1046	902929	1					
ANR	903081	ReturnStatement	return 0 ;	4167:3:91688:91696	902929	0	True				
ANR	903082	PrimaryExpression	0		902929	0					
ANR	903083	ReturnStatement	return ( 1 ) ;	4170:1:91706:91717	902929	8	True				
ANR	903084	PrimaryExpression	1		902929	0					
ANR	903085	ReturnType	int		902929	1					
ANR	903086	Identifier	JobDisconnectedEvent :: writeEvent		902929	2					
ANR	903087	ParameterList	FILE * file		902929	3					
ANR	903088	Parameter	FILE * file	4131:34:90623:90632	902929	0	True				
ANR	903089	ParameterType	FILE *		902929	0					
ANR	903090	Identifier	file		902929	1					
ANR	903091	CFGEntryNode	ENTRY		902929		True				
ANR	903092	CFGExitNode	EXIT		902929		True				
ANR	903093	Symbol	file		902929						
ANR	903094	Symbol	startd_name		902929						
ANR	903095	Symbol	startd_addr		902929						
ANR	903096	Symbol	no_reconnect_reason		902929						
ANR	903097	Symbol	disconnect_reason		902929						
ANR	903098	Symbol	can_reconnect		902929						
ANR	903099	Symbol	fprintf		902929						
ANR	903100	Function	JobDisconnectedEvent :: readEvent	4174:0:91723:93078							
ANR	903101	FunctionDef	JobDisconnectedEvent :: readEvent (FILE * file)		903100	0					
ANR	903102	CompoundStatement		4176:0:91773:93078	903100	0					
ANR	903103	IdentifierDeclStatement	MyString line ;	4177:1:91776:91789	903100	0	True				
ANR	903104	IdentifierDecl	line		903100	0					
ANR	903105	IdentifierDeclType	MyString		903100	0					
ANR	903106	Identifier	line		903100	1					
ANR	903107	IfStatement	"if ( line . readLine ( file ) && line . replaceString ( ""Job disconnected, "" , """" ) )"		903100	1					
ANR	903108	Condition	"line . readLine ( file ) && line . replaceString ( ""Job disconnected, "" , """" )"	4178:4:91795:91861	903100	0	True				
ANR	903109	AndExpression	"line . readLine ( file ) && line . replaceString ( ""Job disconnected, "" , """" )"		903100	0		&&			
ANR	903110	CallExpression	line . readLine ( file )		903100	0					
ANR	903111	Callee	line . readLine		903100	0					
ANR	903112	MemberAccess	line . readLine		903100	0					
ANR	903113	Identifier	line		903100	0					
ANR	903114	Identifier	readLine		903100	1					
ANR	903115	ArgumentList	file		903100	1					
ANR	903116	Argument	file		903100	0					
ANR	903117	Identifier	file		903100	0					
ANR	903118	CallExpression	"line . replaceString ( ""Job disconnected, "" , """" )"		903100	1					
ANR	903119	Callee	line . replaceString		903100	0					
ANR	903120	MemberAccess	line . replaceString		903100	0					
ANR	903121	Identifier	line		903100	0					
ANR	903122	Identifier	replaceString		903100	1					
ANR	903123	ArgumentList	"""Job disconnected, """		903100	1					
ANR	903124	Argument	"""Job disconnected, """		903100	0					
ANR	903125	PrimaryExpression	"""Job disconnected, """		903100	0					
ANR	903126	Argument	""""""		903100	1					
ANR	903127	PrimaryExpression	""""""		903100	0					
ANR	903128	CompoundStatement		3:73:90:90	903100	1					
ANR	903129	ExpressionStatement	line . chomp ( )	4179:2:91868:91880	903100	0	True				
ANR	903130	CallExpression	line . chomp ( )		903100	0					
ANR	903131	Callee	line . chomp		903100	0					
ANR	903132	MemberAccess	line . chomp		903100	0					
ANR	903133	Identifier	line		903100	0					
ANR	903134	Identifier	chomp		903100	1					
ANR	903135	ArgumentList			903100	1					
ANR	903136	IfStatement	"if ( line == ""attempting to reconnect"" )"		903100	1					
ANR	903137	Condition	"line == ""attempting to reconnect"""	4180:6:91888:91920	903100	0	True				
ANR	903138	EqualityExpression	"line == ""attempting to reconnect"""		903100	0		==			
ANR	903139	Identifier	line		903100	0					
ANR	903140	PrimaryExpression	"""attempting to reconnect"""		903100	1					
ANR	903141	CompoundStatement		5:42:150:150	903100	1					
ANR	903142	ExpressionStatement	can_reconnect = true	4181:3:91929:91949	903100	0	True				
ANR	903143	AssignmentExpression	can_reconnect = true		903100	0		=			
ANR	903144	Identifier	can_reconnect		903100	0					
ANR	903145	Identifier	true		903100	1					
ANR	903146	ElseStatement	else		903100	0					
ANR	903147	IfStatement	"if ( line == ""can not reconnect"" )"		903100	0					
ANR	903148	Condition	"line == ""can not reconnect"""	4182:13:91964:91990	903100	0	True				
ANR	903149	EqualityExpression	"line == ""can not reconnect"""		903100	0		==			
ANR	903150	Identifier	line		903100	0					
ANR	903151	PrimaryExpression	"""can not reconnect"""		903100	1					
ANR	903152	CompoundStatement		7:43:220:220	903100	1					
ANR	903153	ExpressionStatement	can_reconnect = false	4183:3:91999:92020	903100	0	True				
ANR	903154	AssignmentExpression	can_reconnect = false		903100	0		=			
ANR	903155	Identifier	can_reconnect		903100	0					
ANR	903156	Identifier	false		903100	1					
ANR	903157	ElseStatement	else		903100	0					
ANR	903158	CompoundStatement		9:9:257:257	903100	0					
ANR	903159	ReturnStatement	return 0 ;	4185:3:92036:92044	903100	0	True				
ANR	903160	PrimaryExpression	0		903100	0					
ANR	903161	ElseStatement	else		903100	0					
ANR	903162	CompoundStatement		12:8:284:284	903100	0					
ANR	903163	ReturnStatement	return 0 ;	4188:2:92062:92070	903100	0	True				
ANR	903164	PrimaryExpression	0		903100	0					
ANR	903165	IfStatement	if ( line . readLine ( file ) && line [ 0 ] == ' ' && line [ 1 ] == ' ' && line [ 2 ] == ' ' && line [ 3 ] == ' ' && line [ 4 ] )		903100	2					
ANR	903166	Condition	line . readLine ( file ) && line [ 0 ] == ' ' && line [ 1 ] == ' ' && line [ 2 ] == ' ' && line [ 3 ] == ' ' && line [ 4 ]	4191:5:92081:92184	903100	0	True				
ANR	903167	AndExpression	line . readLine ( file ) && line [ 0 ] == ' ' && line [ 1 ] == ' ' && line [ 2 ] == ' ' && line [ 3 ] == ' ' && line [ 4 ]		903100	0		&&			
ANR	903168	CallExpression	line . readLine ( file )		903100	0					
ANR	903169	Callee	line . readLine		903100	0					
ANR	903170	MemberAccess	line . readLine		903100	0					
ANR	903171	Identifier	line		903100	0					
ANR	903172	Identifier	readLine		903100	1					
ANR	903173	ArgumentList	file		903100	1					
ANR	903174	Argument	file		903100	0					
ANR	903175	Identifier	file		903100	0					
ANR	903176	AndExpression	line [ 0 ] == ' ' && line [ 1 ] == ' ' && line [ 2 ] == ' ' && line [ 3 ] == ' ' && line [ 4 ]		903100	1		&&			
ANR	903177	EqualityExpression	line [ 0 ] == ' '		903100	0		==			
ANR	903178	ArrayIndexing	line [ 0 ]		903100	0					
ANR	903179	Identifier	line		903100	0					
ANR	903180	PrimaryExpression	0		903100	1					
ANR	903181	PrimaryExpression	' '		903100	1					
ANR	903182	AndExpression	line [ 1 ] == ' ' && line [ 2 ] == ' ' && line [ 3 ] == ' ' && line [ 4 ]		903100	1		&&			
ANR	903183	EqualityExpression	line [ 1 ] == ' '		903100	0		==			
ANR	903184	ArrayIndexing	line [ 1 ]		903100	0					
ANR	903185	Identifier	line		903100	0					
ANR	903186	PrimaryExpression	1		903100	1					
ANR	903187	PrimaryExpression	' '		903100	1					
ANR	903188	AndExpression	line [ 2 ] == ' ' && line [ 3 ] == ' ' && line [ 4 ]		903100	1		&&			
ANR	903189	EqualityExpression	line [ 2 ] == ' '		903100	0		==			
ANR	903190	ArrayIndexing	line [ 2 ]		903100	0					
ANR	903191	Identifier	line		903100	0					
ANR	903192	PrimaryExpression	2		903100	1					
ANR	903193	PrimaryExpression	' '		903100	1					
ANR	903194	AndExpression	line [ 3 ] == ' ' && line [ 4 ]		903100	1		&&			
ANR	903195	EqualityExpression	line [ 3 ] == ' '		903100	0		==			
ANR	903196	ArrayIndexing	line [ 3 ]		903100	0					
ANR	903197	Identifier	line		903100	0					
ANR	903198	PrimaryExpression	3		903100	1					
ANR	903199	PrimaryExpression	' '		903100	1					
ANR	903200	ArrayIndexing	line [ 4 ]		903100	1					
ANR	903201	Identifier	line		903100	0					
ANR	903202	PrimaryExpression	4		903100	1					
ANR	903203	CompoundStatement		18:1:415:415	903100	1					
ANR	903204	ExpressionStatement	line . chomp ( )	4194:2:92193:92205	903100	0	True				
ANR	903205	CallExpression	line . chomp ( )		903100	0					
ANR	903206	Callee	line . chomp		903100	0					
ANR	903207	MemberAccess	line . chomp		903100	0					
ANR	903208	Identifier	line		903100	0					
ANR	903209	Identifier	chomp		903100	1					
ANR	903210	ArgumentList			903100	1					
ANR	903211	ExpressionStatement	setDisconnectReason ( & line [ 4 ] )	4195:2:92209:92240	903100	1	True				
ANR	903212	CallExpression	setDisconnectReason ( & line [ 4 ] )		903100	0					
ANR	903213	Callee	setDisconnectReason		903100	0					
ANR	903214	Identifier	setDisconnectReason		903100	0					
ANR	903215	ArgumentList	& line [ 4 ]		903100	1					
ANR	903216	Argument	& line [ 4 ]		903100	0					
ANR	903217	UnaryOperationExpression	& line [ 4 ]		903100	0					
ANR	903218	UnaryOperator	&		903100	0					
ANR	903219	ArrayIndexing	line [ 4 ]		903100	1					
ANR	903220	Identifier	line		903100	0					
ANR	903221	PrimaryExpression	4		903100	1					
ANR	903222	ElseStatement	else		903100	0					
ANR	903223	CompoundStatement		21:8:476:476	903100	0					
ANR	903224	ReturnStatement	return 0 ;	4197:2:92254:92262	903100	0	True				
ANR	903225	PrimaryExpression	0		903100	0					
ANR	903226	IfStatement	if ( ! line . readLine ( file ) )		903100	3					
ANR	903227	Condition	! line . readLine ( file )	4200:5:92273:92293	903100	0	True				
ANR	903228	UnaryOperationExpression	! line . readLine ( file )		903100	0					
ANR	903229	UnaryOperator	!		903100	0					
ANR	903230	CallExpression	line . readLine ( file )		903100	1					
ANR	903231	Callee	line . readLine		903100	0					
ANR	903232	MemberAccess	line . readLine		903100	0					
ANR	903233	Identifier	line		903100	0					
ANR	903234	Identifier	readLine		903100	1					
ANR	903235	ArgumentList	file		903100	1					
ANR	903236	Argument	file		903100	0					
ANR	903237	Identifier	file		903100	0					
ANR	903238	CompoundStatement		25:29:523:523	903100	1					
ANR	903239	ReturnStatement	return 0 ;	4201:2:92301:92309	903100	0	True				
ANR	903240	PrimaryExpression	0		903100	0					
ANR	903241	ExpressionStatement	line . chomp ( )	4203:1:92315:92327	903100	4	True				
ANR	903242	CallExpression	line . chomp ( )		903100	0					
ANR	903243	Callee	line . chomp		903100	0					
ANR	903244	MemberAccess	line . chomp		903100	0					
ANR	903245	Identifier	line		903100	0					
ANR	903246	Identifier	chomp		903100	1					
ANR	903247	ArgumentList			903100	1					
ANR	903248	IfStatement	"if ( line . replaceString ( ""    Trying to reconnect to "" , """" ) )"		903100	5					
ANR	903249	Condition	"line . replaceString ( ""    Trying to reconnect to "" , """" )"	4204:5:92334:92386	903100	0	True				
ANR	903250	CallExpression	"line . replaceString ( ""    Trying to reconnect to "" , """" )"		903100	0					
ANR	903251	Callee	line . replaceString		903100	0					
ANR	903252	MemberAccess	line . replaceString		903100	0					
ANR	903253	Identifier	line		903100	0					
ANR	903254	Identifier	replaceString		903100	1					
ANR	903255	ArgumentList	"""    Trying to reconnect to """		903100	1					
ANR	903256	Argument	"""    Trying to reconnect to """		903100	0					
ANR	903257	PrimaryExpression	"""    Trying to reconnect to """		903100	0					
ANR	903258	Argument	""""""		903100	1					
ANR	903259	PrimaryExpression	""""""		903100	0					
ANR	903260	CompoundStatement		30:2:620:648	903100	1					
ANR	903261	IdentifierDeclStatement	int i = line . FindChar ( ' ' ) ;	4205:2:92394:92422	903100	0	True				
ANR	903262	IdentifierDecl	i = line . FindChar ( ' ' )		903100	0					
ANR	903263	IdentifierDeclType	int		903100	0					
ANR	903264	Identifier	i		903100	1					
ANR	903265	AssignmentExpression	i = line . FindChar ( ' ' )		903100	2		=			
ANR	903266	Identifier	i		903100	0					
ANR	903267	CallExpression	line . FindChar ( ' ' )		903100	1					
ANR	903268	Callee	line . FindChar		903100	0					
ANR	903269	MemberAccess	line . FindChar		903100	0					
ANR	903270	Identifier	line		903100	0					
ANR	903271	Identifier	FindChar		903100	1					
ANR	903272	ArgumentList	' '		903100	1					
ANR	903273	Argument	' '		903100	0					
ANR	903274	PrimaryExpression	' '		903100	0					
ANR	903275	IfStatement	if ( i > 0 )		903100	1					
ANR	903276	Condition	i > 0	4206:6:92430:92434	903100	0	True				
ANR	903277	RelationalExpression	i > 0		903100	0		>			
ANR	903278	Identifier	i		903100	0					
ANR	903279	PrimaryExpression	0		903100	1					
ANR	903280	CompoundStatement		31:14:664:664	903100	1					
ANR	903281	ExpressionStatement	"line . setChar ( i , '\\0' )"	4207:3:92443:92466	903100	0	True				
ANR	903282	CallExpression	"line . setChar ( i , '\\0' )"		903100	0					
ANR	903283	Callee	line . setChar		903100	0					
ANR	903284	MemberAccess	line . setChar		903100	0					
ANR	903285	Identifier	line		903100	0					
ANR	903286	Identifier	setChar		903100	1					
ANR	903287	ArgumentList	i		903100	1					
ANR	903288	Argument	i		903100	0					
ANR	903289	Identifier	i		903100	0					
ANR	903290	Argument	'\\0'		903100	1					
ANR	903291	PrimaryExpression	'\\0'		903100	0					
ANR	903292	ExpressionStatement	setStartdName ( line . Value ( ) )	4208:3:92471:92500	903100	1	True				
ANR	903293	CallExpression	setStartdName ( line . Value ( ) )		903100	0					
ANR	903294	Callee	setStartdName		903100	0					
ANR	903295	Identifier	setStartdName		903100	0					
ANR	903296	ArgumentList	line . Value ( )		903100	1					
ANR	903297	Argument	line . Value ( )		903100	0					
ANR	903298	CallExpression	line . Value ( )		903100	0					
ANR	903299	Callee	line . Value		903100	0					
ANR	903300	MemberAccess	line . Value		903100	0					
ANR	903301	Identifier	line		903100	0					
ANR	903302	Identifier	Value		903100	1					
ANR	903303	ArgumentList			903100	1					
ANR	903304	ExpressionStatement	setStartdAddr ( & line [ i + 1 ] )	4209:3:92505:92532	903100	2	True				
ANR	903305	CallExpression	setStartdAddr ( & line [ i + 1 ] )		903100	0					
ANR	903306	Callee	setStartdAddr		903100	0					
ANR	903307	Identifier	setStartdAddr		903100	0					
ANR	903308	ArgumentList	& line [ i + 1 ]		903100	1					
ANR	903309	Argument	& line [ i + 1 ]		903100	0					
ANR	903310	UnaryOperationExpression	& line [ i + 1 ]		903100	0					
ANR	903311	UnaryOperator	&		903100	0					
ANR	903312	ArrayIndexing	line [ i + 1 ]		903100	1					
ANR	903313	Identifier	line		903100	0					
ANR	903314	AdditiveExpression	i + 1		903100	1		+			
ANR	903315	Identifier	i		903100	0					
ANR	903316	PrimaryExpression	1		903100	1					
ANR	903317	ElseStatement	else		903100	0					
ANR	903318	CompoundStatement		35:9:769:769	903100	0					
ANR	903319	ReturnStatement	return 0 ;	4211:3:92548:92556	903100	0	True				
ANR	903320	PrimaryExpression	0		903100	0					
ANR	903321	ElseStatement	else		903100	0					
ANR	903322	IfStatement	"if ( line . replaceString ( ""    Can not reconnect to "" , """" ) )"		903100	0					
ANR	903323	Condition	"line . replaceString ( ""    Can not reconnect to "" , """" )"	4213:12:92574:92624	903100	0	True				
ANR	903324	CallExpression	"line . replaceString ( ""    Can not reconnect to "" , """" )"		903100	0					
ANR	903325	Callee	line . replaceString		903100	0					
ANR	903326	MemberAccess	line . replaceString		903100	0					
ANR	903327	Identifier	line		903100	0					
ANR	903328	Identifier	replaceString		903100	1					
ANR	903329	ArgumentList	"""    Can not reconnect to """		903100	1					
ANR	903330	Argument	"""    Can not reconnect to """		903100	0					
ANR	903331	PrimaryExpression	"""    Can not reconnect to """		903100	0					
ANR	903332	Argument	""""""		903100	1					
ANR	903333	PrimaryExpression	""""""		903100	0					
ANR	903334	CompoundStatement		42:2:899:927	903100	1					
ANR	903335	IfStatement	if ( can_reconnect )		903100	0					
ANR	903336	Condition	can_reconnect	4214:6:92636:92648	903100	0	True				
ANR	903337	Identifier	can_reconnect		903100	0					
ANR	903338	CompoundStatement		39:22:878:878	903100	1					
ANR	903339	ReturnStatement	return 0 ;	4215:3:92657:92665	903100	0	True				
ANR	903340	PrimaryExpression	0		903100	0					
ANR	903341	IdentifierDeclStatement	int i = line . FindChar ( ' ' ) ;	4217:2:92673:92701	903100	1	True				
ANR	903342	IdentifierDecl	i = line . FindChar ( ' ' )		903100	0					
ANR	903343	IdentifierDeclType	int		903100	0					
ANR	903344	Identifier	i		903100	1					
ANR	903345	AssignmentExpression	i = line . FindChar ( ' ' )		903100	2		=			
ANR	903346	Identifier	i		903100	0					
ANR	903347	CallExpression	line . FindChar ( ' ' )		903100	1					
ANR	903348	Callee	line . FindChar		903100	0					
ANR	903349	MemberAccess	line . FindChar		903100	0					
ANR	903350	Identifier	line		903100	0					
ANR	903351	Identifier	FindChar		903100	1					
ANR	903352	ArgumentList	' '		903100	1					
ANR	903353	Argument	' '		903100	0					
ANR	903354	PrimaryExpression	' '		903100	0					
ANR	903355	IfStatement	if ( i > 0 )		903100	2					
ANR	903356	Condition	i > 0	4218:6:92709:92713	903100	0	True				
ANR	903357	RelationalExpression	i > 0		903100	0		>			
ANR	903358	Identifier	i		903100	0					
ANR	903359	PrimaryExpression	0		903100	1					
ANR	903360	CompoundStatement		43:14:943:943	903100	1					
ANR	903361	ExpressionStatement	"line . setChar ( i , '\\0' )"	4219:3:92722:92745	903100	0	True				
ANR	903362	CallExpression	"line . setChar ( i , '\\0' )"		903100	0					
ANR	903363	Callee	line . setChar		903100	0					
ANR	903364	MemberAccess	line . setChar		903100	0					
ANR	903365	Identifier	line		903100	0					
ANR	903366	Identifier	setChar		903100	1					
ANR	903367	ArgumentList	i		903100	1					
ANR	903368	Argument	i		903100	0					
ANR	903369	Identifier	i		903100	0					
ANR	903370	Argument	'\\0'		903100	1					
ANR	903371	PrimaryExpression	'\\0'		903100	0					
ANR	903372	ExpressionStatement	setStartdName ( line . Value ( ) )	4220:3:92750:92779	903100	1	True				
ANR	903373	CallExpression	setStartdName ( line . Value ( ) )		903100	0					
ANR	903374	Callee	setStartdName		903100	0					
ANR	903375	Identifier	setStartdName		903100	0					
ANR	903376	ArgumentList	line . Value ( )		903100	1					
ANR	903377	Argument	line . Value ( )		903100	0					
ANR	903378	CallExpression	line . Value ( )		903100	0					
ANR	903379	Callee	line . Value		903100	0					
ANR	903380	MemberAccess	line . Value		903100	0					
ANR	903381	Identifier	line		903100	0					
ANR	903382	Identifier	Value		903100	1					
ANR	903383	ArgumentList			903100	1					
ANR	903384	ExpressionStatement	setStartdAddr ( & line [ i + 1 ] )	4221:3:92784:92811	903100	2	True				
ANR	903385	CallExpression	setStartdAddr ( & line [ i + 1 ] )		903100	0					
ANR	903386	Callee	setStartdAddr		903100	0					
ANR	903387	Identifier	setStartdAddr		903100	0					
ANR	903388	ArgumentList	& line [ i + 1 ]		903100	1					
ANR	903389	Argument	& line [ i + 1 ]		903100	0					
ANR	903390	UnaryOperationExpression	& line [ i + 1 ]		903100	0					
ANR	903391	UnaryOperator	&		903100	0					
ANR	903392	ArrayIndexing	line [ i + 1 ]		903100	1					
ANR	903393	Identifier	line		903100	0					
ANR	903394	AdditiveExpression	i + 1		903100	1		+			
ANR	903395	Identifier	i		903100	0					
ANR	903396	PrimaryExpression	1		903100	1					
ANR	903397	ElseStatement	else		903100	0					
ANR	903398	CompoundStatement		47:9:1048:1048	903100	0					
ANR	903399	ReturnStatement	return 0 ;	4223:3:92827:92835	903100	0	True				
ANR	903400	PrimaryExpression	0		903100	0					
ANR	903401	IfStatement	if ( line . readLine ( file ) && line [ 0 ] == ' ' && line [ 1 ] == ' ' && line [ 2 ] == ' ' && line [ 3 ] == ' ' && line [ 4 ] )		903100	3					
ANR	903402	Condition	line . readLine ( file ) && line [ 0 ] == ' ' && line [ 1 ] == ' ' && line [ 2 ] == ' ' && line [ 3 ] == ' ' && line [ 4 ]	4225:6:92847:92951	903100	0	True				
ANR	903403	AndExpression	line . readLine ( file ) && line [ 0 ] == ' ' && line [ 1 ] == ' ' && line [ 2 ] == ' ' && line [ 3 ] == ' ' && line [ 4 ]		903100	0		&&			
ANR	903404	CallExpression	line . readLine ( file )		903100	0					
ANR	903405	Callee	line . readLine		903100	0					
ANR	903406	MemberAccess	line . readLine		903100	0					
ANR	903407	Identifier	line		903100	0					
ANR	903408	Identifier	readLine		903100	1					
ANR	903409	ArgumentList	file		903100	1					
ANR	903410	Argument	file		903100	0					
ANR	903411	Identifier	file		903100	0					
ANR	903412	AndExpression	line [ 0 ] == ' ' && line [ 1 ] == ' ' && line [ 2 ] == ' ' && line [ 3 ] == ' ' && line [ 4 ]		903100	1		&&			
ANR	903413	EqualityExpression	line [ 0 ] == ' '		903100	0		==			
ANR	903414	ArrayIndexing	line [ 0 ]		903100	0					
ANR	903415	Identifier	line		903100	0					
ANR	903416	PrimaryExpression	0		903100	1					
ANR	903417	PrimaryExpression	' '		903100	1					
ANR	903418	AndExpression	line [ 1 ] == ' ' && line [ 2 ] == ' ' && line [ 3 ] == ' ' && line [ 4 ]		903100	1		&&			
ANR	903419	EqualityExpression	line [ 1 ] == ' '		903100	0		==			
ANR	903420	ArrayIndexing	line [ 1 ]		903100	0					
ANR	903421	Identifier	line		903100	0					
ANR	903422	PrimaryExpression	1		903100	1					
ANR	903423	PrimaryExpression	' '		903100	1					
ANR	903424	AndExpression	line [ 2 ] == ' ' && line [ 3 ] == ' ' && line [ 4 ]		903100	1		&&			
ANR	903425	EqualityExpression	line [ 2 ] == ' '		903100	0		==			
ANR	903426	ArrayIndexing	line [ 2 ]		903100	0					
ANR	903427	Identifier	line		903100	0					
ANR	903428	PrimaryExpression	2		903100	1					
ANR	903429	PrimaryExpression	' '		903100	1					
ANR	903430	AndExpression	line [ 3 ] == ' ' && line [ 4 ]		903100	1		&&			
ANR	903431	EqualityExpression	line [ 3 ] == ' '		903100	0		==			
ANR	903432	ArrayIndexing	line [ 3 ]		903100	0					
ANR	903433	Identifier	line		903100	0					
ANR	903434	PrimaryExpression	3		903100	1					
ANR	903435	PrimaryExpression	' '		903100	1					
ANR	903436	ArrayIndexing	line [ 4 ]		903100	1					
ANR	903437	Identifier	line		903100	0					
ANR	903438	PrimaryExpression	4		903100	1					
ANR	903439	CompoundStatement		52:2:1183:1183	903100	1					
ANR	903440	ExpressionStatement	line . chomp ( )	4228:3:92962:92974	903100	0	True				
ANR	903441	CallExpression	line . chomp ( )		903100	0					
ANR	903442	Callee	line . chomp		903100	0					
ANR	903443	MemberAccess	line . chomp		903100	0					
ANR	903444	Identifier	line		903100	0					
ANR	903445	Identifier	chomp		903100	1					
ANR	903446	ArgumentList			903100	1					
ANR	903447	ExpressionStatement	setNoReconnectReason ( & line [ 4 ] )	4229:3:92979:93011	903100	1	True				
ANR	903448	CallExpression	setNoReconnectReason ( & line [ 4 ] )		903100	0					
ANR	903449	Callee	setNoReconnectReason		903100	0					
ANR	903450	Identifier	setNoReconnectReason		903100	0					
ANR	903451	ArgumentList	& line [ 4 ]		903100	1					
ANR	903452	Argument	& line [ 4 ]		903100	0					
ANR	903453	UnaryOperationExpression	& line [ 4 ]		903100	0					
ANR	903454	UnaryOperator	&		903100	0					
ANR	903455	ArrayIndexing	line [ 4 ]		903100	1					
ANR	903456	Identifier	line		903100	0					
ANR	903457	PrimaryExpression	4		903100	1					
ANR	903458	ElseStatement	else		903100	0					
ANR	903459	CompoundStatement		55:9:1248:1248	903100	0					
ANR	903460	ReturnStatement	return 0 ;	4231:3:93027:93035	903100	0	True				
ANR	903461	PrimaryExpression	0		903100	0					
ANR	903462	ElseStatement	else		903100	0					
ANR	903463	CompoundStatement		58:8:1275:1275	903100	0					
ANR	903464	ReturnStatement	return 0 ;	4234:2:93053:93061	903100	0	True				
ANR	903465	PrimaryExpression	0		903100	0					
ANR	903466	ReturnStatement	return 1 ;	4237:1:93068:93076	903100	6	True				
ANR	903467	PrimaryExpression	1		903100	0					
ANR	903468	ReturnType	int		903100	1					
ANR	903469	Identifier	JobDisconnectedEvent :: readEvent		903100	2					
ANR	903470	ParameterList	FILE * file		903100	3					
ANR	903471	Parameter	FILE * file	4175:33:91760:91769	903100	0	True				
ANR	903472	ParameterType	FILE *		903100	0					
ANR	903473	Identifier	file		903100	1					
ANR	903474	CFGEntryNode	ENTRY		903100		True				
ANR	903475	CFGExitNode	EXIT		903100		True				
ANR	903476	Symbol	line . readLine		903100						
ANR	903477	Symbol	file		903100						
ANR	903478	Symbol	line . FindChar		903100						
ANR	903479	Symbol	line . Value		903100						
ANR	903480	Symbol	line		903100						
ANR	903481	Symbol	true		903100						
ANR	903482	Symbol	false		903100						
ANR	903483	Symbol	i		903100						
ANR	903484	Symbol	* line		903100						
ANR	903485	Symbol	can_reconnect		903100						
ANR	903486	Symbol	line . replaceString		903100						
ANR	903487	Function	JobDisconnectedEvent :: toClassAd	4241:0:93082:94480							
ANR	903488	FunctionDef	JobDisconnectedEvent :: toClassAd ()		903487	0					
ANR	903489	CompoundStatement		4243:0:93131:94480	903487	0					
ANR	903490	IfStatement	if ( ! disconnect_reason )		903487	0					
ANR	903491	Condition	! disconnect_reason	4244:5:93138:93156	903487	0	True				
ANR	903492	UnaryOperationExpression	! disconnect_reason		903487	0					
ANR	903493	UnaryOperator	!		903487	0					
ANR	903494	Identifier	disconnect_reason		903487	1					
ANR	903495	CompoundStatement		2:27:28:28	903487	1					
ANR	903496	Statement	EXCEPT	4245:2:93164:93169	903487	0	True				
ANR	903497	Statement	(	4245:8:93170:93170	903487	1	True				
ANR	903498	Statement	"""JobDisconnectedEvent::toClassAd() called without"""	4245:10:93172:93221	903487	2	True				
ANR	903499	Statement	"""disconnect_reason"""	4246:4:93227:93245	903487	3	True				
ANR	903500	Statement	)	4246:24:93247:93247	903487	4	True				
ANR	903501	ExpressionStatement		4246:25:93248:93248	903487	5	True				
ANR	903502	IfStatement	if ( ! startd_addr )		903487	1					
ANR	903503	Condition	! startd_addr	4248:5:93258:93270	903487	0	True				
ANR	903504	UnaryOperationExpression	! startd_addr		903487	0					
ANR	903505	UnaryOperator	!		903487	0					
ANR	903506	Identifier	startd_addr		903487	1					
ANR	903507	CompoundStatement		6:21:142:142	903487	1					
ANR	903508	Statement	EXCEPT	4249:2:93278:93283	903487	0	True				
ANR	903509	Statement	(	4249:8:93284:93284	903487	1	True				
ANR	903510	Statement	"""JobDisconnectedEvent::toClassAd() called without """	4249:10:93286:93336	903487	2	True				
ANR	903511	Statement	"""startd_addr"""	4250:4:93342:93354	903487	3	True				
ANR	903512	Statement	)	4250:18:93356:93356	903487	4	True				
ANR	903513	ExpressionStatement		4250:19:93357:93357	903487	5	True				
ANR	903514	IfStatement	if ( ! startd_name )		903487	2					
ANR	903515	Condition	! startd_name	4252:5:93367:93379	903487	0	True				
ANR	903516	UnaryOperationExpression	! startd_name		903487	0					
ANR	903517	UnaryOperator	!		903487	0					
ANR	903518	Identifier	startd_name		903487	1					
ANR	903519	CompoundStatement		10:21:251:251	903487	1					
ANR	903520	Statement	EXCEPT	4253:2:93387:93392	903487	0	True				
ANR	903521	Statement	(	4253:8:93393:93393	903487	1	True				
ANR	903522	Statement	"""JobDisconnectedEvent::toClassAd() called without """	4253:10:93395:93445	903487	2	True				
ANR	903523	Statement	"""startd_name"""	4254:4:93451:93463	903487	3	True				
ANR	903524	Statement	)	4254:18:93465:93465	903487	4	True				
ANR	903525	ExpressionStatement		4254:19:93466:93466	903487	5	True				
ANR	903526	IfStatement	if ( ! can_reconnect && ! no_reconnect_reason )		903487	3					
ANR	903527	Condition	! can_reconnect && ! no_reconnect_reason	4256:5:93476:93515	903487	0	True				
ANR	903528	AndExpression	! can_reconnect && ! no_reconnect_reason		903487	0		&&			
ANR	903529	UnaryOperationExpression	! can_reconnect		903487	0					
ANR	903530	UnaryOperator	!		903487	0					
ANR	903531	Identifier	can_reconnect		903487	1					
ANR	903532	UnaryOperationExpression	! no_reconnect_reason		903487	1					
ANR	903533	UnaryOperator	!		903487	0					
ANR	903534	Identifier	no_reconnect_reason		903487	1					
ANR	903535	CompoundStatement		14:48:387:387	903487	1					
ANR	903536	Statement	EXCEPT	4257:2:93523:93528	903487	0	True				
ANR	903537	Statement	(	4257:8:93529:93529	903487	1	True				
ANR	903538	Statement	"""JobDisconnectedEvent::toClassAd() called without """	4257:10:93531:93581	903487	2	True				
ANR	903539	Statement	"""no_reconnect_reason when can_reconnect is FALSE"""	4258:4:93587:93635	903487	3	True				
ANR	903540	Statement	)	4258:54:93637:93637	903487	4	True				
ANR	903541	ExpressionStatement		4258:55:93638:93638	903487	5	True				
ANR	903542	IdentifierDeclStatement	ClassAd * myad = ULogEvent :: toClassAd ( ) ;	4262:1:93646:93684	903487	4	True				
ANR	903543	IdentifierDecl	* myad = ULogEvent :: toClassAd ( )		903487	0					
ANR	903544	IdentifierDeclType	ClassAd *		903487	0					
ANR	903545	Identifier	myad		903487	1					
ANR	903546	AssignmentExpression	* myad = ULogEvent :: toClassAd ( )		903487	2		=			
ANR	903547	Identifier	myad		903487	0					
ANR	903548	CallExpression	ULogEvent :: toClassAd ( )		903487	1					
ANR	903549	Callee	ULogEvent :: toClassAd		903487	0					
ANR	903550	Identifier	ULogEvent :: toClassAd		903487	0					
ANR	903551	ArgumentList			903487	1					
ANR	903552	IfStatement	if ( ! myad )		903487	5					
ANR	903553	Condition	! myad	4263:5:93691:93695	903487	0	True				
ANR	903554	UnaryOperationExpression	! myad		903487	0					
ANR	903555	UnaryOperator	!		903487	0					
ANR	903556	Identifier	myad		903487	1					
ANR	903557	CompoundStatement		21:13:567:567	903487	1					
ANR	903558	ReturnStatement	return NULL ;	4264:2:93703:93714	903487	0	True				
ANR	903559	Identifier	NULL		903487	0					
ANR	903560	IdentifierDeclStatement	MyString line ;	4267:1:93721:93734	903487	6	True				
ANR	903561	IdentifierDecl	line		903487	0					
ANR	903562	IdentifierDeclType	MyString		903487	0					
ANR	903563	Identifier	line		903487	1					
ANR	903564	ExpressionStatement	"line . sprintf ( ""StartdAddr = \\""%s\\"""" , startd_addr )"	4268:1:93737:93787	903487	7	True				
ANR	903565	CallExpression	"line . sprintf ( ""StartdAddr = \\""%s\\"""" , startd_addr )"		903487	0					
ANR	903566	Callee	line . sprintf		903487	0					
ANR	903567	MemberAccess	line . sprintf		903487	0					
ANR	903568	Identifier	line		903487	0					
ANR	903569	Identifier	sprintf		903487	1					
ANR	903570	ArgumentList	"""StartdAddr = \\""%s\\"""""		903487	1					
ANR	903571	Argument	"""StartdAddr = \\""%s\\"""""		903487	0					
ANR	903572	PrimaryExpression	"""StartdAddr = \\""%s\\"""""		903487	0					
ANR	903573	Argument	startd_addr		903487	1					
ANR	903574	Identifier	startd_addr		903487	0					
ANR	903575	IfStatement	if ( ! myad -> Insert ( line . Value ( ) ) )		903487	8					
ANR	903576	Condition	! myad -> Insert ( line . Value ( ) )	4269:5:93794:93820	903487	0	True				
ANR	903577	UnaryOperationExpression	! myad -> Insert ( line . Value ( ) )		903487	0					
ANR	903578	UnaryOperator	!		903487	0					
ANR	903579	CallExpression	myad -> Insert ( line . Value ( ) )		903487	1					
ANR	903580	Callee	myad -> Insert		903487	0					
ANR	903581	PtrMemberAccess	myad -> Insert		903487	0					
ANR	903582	Identifier	myad		903487	0					
ANR	903583	Identifier	Insert		903487	1					
ANR	903584	ArgumentList	line . Value ( )		903487	1					
ANR	903585	Argument	line . Value ( )		903487	0					
ANR	903586	CallExpression	line . Value ( )		903487	0					
ANR	903587	Callee	line . Value		903487	0					
ANR	903588	MemberAccess	line . Value		903487	0					
ANR	903589	Identifier	line		903487	0					
ANR	903590	Identifier	Value		903487	1					
ANR	903591	ArgumentList			903487	1					
ANR	903592	CompoundStatement		27:35:692:692	903487	1					
ANR	903593	ReturnStatement	return NULL ;	4270:2:93828:93839	903487	0	True				
ANR	903594	Identifier	NULL		903487	0					
ANR	903595	ExpressionStatement	"line . sprintf ( ""StartdName = \\""%s\\"""" , startd_name )"	4272:1:93845:93895	903487	9	True				
ANR	903596	CallExpression	"line . sprintf ( ""StartdName = \\""%s\\"""" , startd_name )"		903487	0					
ANR	903597	Callee	line . sprintf		903487	0					
ANR	903598	MemberAccess	line . sprintf		903487	0					
ANR	903599	Identifier	line		903487	0					
ANR	903600	Identifier	sprintf		903487	1					
ANR	903601	ArgumentList	"""StartdName = \\""%s\\"""""		903487	1					
ANR	903602	Argument	"""StartdName = \\""%s\\"""""		903487	0					
ANR	903603	PrimaryExpression	"""StartdName = \\""%s\\"""""		903487	0					
ANR	903604	Argument	startd_name		903487	1					
ANR	903605	Identifier	startd_name		903487	0					
ANR	903606	IfStatement	if ( ! myad -> Insert ( line . Value ( ) ) )		903487	10					
ANR	903607	Condition	! myad -> Insert ( line . Value ( ) )	4273:5:93902:93928	903487	0	True				
ANR	903608	UnaryOperationExpression	! myad -> Insert ( line . Value ( ) )		903487	0					
ANR	903609	UnaryOperator	!		903487	0					
ANR	903610	CallExpression	myad -> Insert ( line . Value ( ) )		903487	1					
ANR	903611	Callee	myad -> Insert		903487	0					
ANR	903612	PtrMemberAccess	myad -> Insert		903487	0					
ANR	903613	Identifier	myad		903487	0					
ANR	903614	Identifier	Insert		903487	1					
ANR	903615	ArgumentList	line . Value ( )		903487	1					
ANR	903616	Argument	line . Value ( )		903487	0					
ANR	903617	CallExpression	line . Value ( )		903487	0					
ANR	903618	Callee	line . Value		903487	0					
ANR	903619	MemberAccess	line . Value		903487	0					
ANR	903620	Identifier	line		903487	0					
ANR	903621	Identifier	Value		903487	1					
ANR	903622	ArgumentList			903487	1					
ANR	903623	CompoundStatement		31:35:800:800	903487	1					
ANR	903624	ReturnStatement	return NULL ;	4274:2:93936:93947	903487	0	True				
ANR	903625	Identifier	NULL		903487	0					
ANR	903626	ExpressionStatement	"line . sprintf ( ""DisconnectReason = \\""%s\\"""" , disconnect_reason )"	4276:1:93953:94015	903487	11	True				
ANR	903627	CallExpression	"line . sprintf ( ""DisconnectReason = \\""%s\\"""" , disconnect_reason )"		903487	0					
ANR	903628	Callee	line . sprintf		903487	0					
ANR	903629	MemberAccess	line . sprintf		903487	0					
ANR	903630	Identifier	line		903487	0					
ANR	903631	Identifier	sprintf		903487	1					
ANR	903632	ArgumentList	"""DisconnectReason = \\""%s\\"""""		903487	1					
ANR	903633	Argument	"""DisconnectReason = \\""%s\\"""""		903487	0					
ANR	903634	PrimaryExpression	"""DisconnectReason = \\""%s\\"""""		903487	0					
ANR	903635	Argument	disconnect_reason		903487	1					
ANR	903636	Identifier	disconnect_reason		903487	0					
ANR	903637	IfStatement	if ( ! myad -> Insert ( line . Value ( ) ) )		903487	12					
ANR	903638	Condition	! myad -> Insert ( line . Value ( ) )	4277:5:94022:94048	903487	0	True				
ANR	903639	UnaryOperationExpression	! myad -> Insert ( line . Value ( ) )		903487	0					
ANR	903640	UnaryOperator	!		903487	0					
ANR	903641	CallExpression	myad -> Insert ( line . Value ( ) )		903487	1					
ANR	903642	Callee	myad -> Insert		903487	0					
ANR	903643	PtrMemberAccess	myad -> Insert		903487	0					
ANR	903644	Identifier	myad		903487	0					
ANR	903645	Identifier	Insert		903487	1					
ANR	903646	ArgumentList	line . Value ( )		903487	1					
ANR	903647	Argument	line . Value ( )		903487	0					
ANR	903648	CallExpression	line . Value ( )		903487	0					
ANR	903649	Callee	line . Value		903487	0					
ANR	903650	MemberAccess	line . Value		903487	0					
ANR	903651	Identifier	line		903487	0					
ANR	903652	Identifier	Value		903487	1					
ANR	903653	ArgumentList			903487	1					
ANR	903654	CompoundStatement		35:35:920:920	903487	1					
ANR	903655	ReturnStatement	return NULL ;	4278:2:94056:94067	903487	0	True				
ANR	903656	Identifier	NULL		903487	0					
ANR	903657	ExpressionStatement	"line = ""EventDescription = \\""Job disconnected, """	4281:1:94074:94122	903487	13	True				
ANR	903658	AssignmentExpression	"line = ""EventDescription = \\""Job disconnected, """		903487	0		=			
ANR	903659	Identifier	line		903487	0					
ANR	903660	PrimaryExpression	"""EventDescription = \\""Job disconnected, """		903487	1					
ANR	903661	IfStatement	if ( can_reconnect )		903487	14					
ANR	903662	Condition	can_reconnect	4282:5:94129:94141	903487	0	True				
ANR	903663	Identifier	can_reconnect		903487	0					
ANR	903664	CompoundStatement		40:21:1013:1013	903487	1					
ANR	903665	ExpressionStatement	"line += ""attempting to reconnect\\"""""	4283:2:94149:94184	903487	0	True				
ANR	903666	AssignmentExpression	"line += ""attempting to reconnect\\"""""		903487	0		+=			
ANR	903667	Identifier	line		903487	0					
ANR	903668	PrimaryExpression	"""attempting to reconnect\\"""""		903487	1					
ANR	903669	ElseStatement	else		903487	0					
ANR	903670	CompoundStatement		42:8:1062:1062	903487	0					
ANR	903671	ExpressionStatement	"line += ""can not reconnect, rescheduling job\\"""""	4285:2:94198:94245	903487	0	True				
ANR	903672	AssignmentExpression	"line += ""can not reconnect, rescheduling job\\"""""		903487	0		+=			
ANR	903673	Identifier	line		903487	0					
ANR	903674	PrimaryExpression	"""can not reconnect, rescheduling job\\"""""		903487	1					
ANR	903675	IfStatement	if ( ! myad -> Insert ( line . Value ( ) ) )		903487	15					
ANR	903676	Condition	! myad -> Insert ( line . Value ( ) )	4287:5:94255:94281	903487	0	True				
ANR	903677	UnaryOperationExpression	! myad -> Insert ( line . Value ( ) )		903487	0					
ANR	903678	UnaryOperator	!		903487	0					
ANR	903679	CallExpression	myad -> Insert ( line . Value ( ) )		903487	1					
ANR	903680	Callee	myad -> Insert		903487	0					
ANR	903681	PtrMemberAccess	myad -> Insert		903487	0					
ANR	903682	Identifier	myad		903487	0					
ANR	903683	Identifier	Insert		903487	1					
ANR	903684	ArgumentList	line . Value ( )		903487	1					
ANR	903685	Argument	line . Value ( )		903487	0					
ANR	903686	CallExpression	line . Value ( )		903487	0					
ANR	903687	Callee	line . Value		903487	0					
ANR	903688	MemberAccess	line . Value		903487	0					
ANR	903689	Identifier	line		903487	0					
ANR	903690	Identifier	Value		903487	1					
ANR	903691	ArgumentList			903487	1					
ANR	903692	CompoundStatement		45:35:1153:1153	903487	1					
ANR	903693	ReturnStatement	return NULL ;	4288:2:94289:94300	903487	0	True				
ANR	903694	Identifier	NULL		903487	0					
ANR	903695	IfStatement	if ( no_reconnect_reason )		903487	16					
ANR	903696	Condition	no_reconnect_reason	4291:5:94311:94329	903487	0	True				
ANR	903697	Identifier	no_reconnect_reason		903487	0					
ANR	903698	CompoundStatement		49:27:1201:1201	903487	1					
ANR	903699	ExpressionStatement	"line . sprintf ( ""NoReconnectReason = \\""%s\\"""" , no_reconnect_reason )"	4292:2:94337:94402	903487	0	True				
ANR	903700	CallExpression	"line . sprintf ( ""NoReconnectReason = \\""%s\\"""" , no_reconnect_reason )"		903487	0					
ANR	903701	Callee	line . sprintf		903487	0					
ANR	903702	MemberAccess	line . sprintf		903487	0					
ANR	903703	Identifier	line		903487	0					
ANR	903704	Identifier	sprintf		903487	1					
ANR	903705	ArgumentList	"""NoReconnectReason = \\""%s\\"""""		903487	1					
ANR	903706	Argument	"""NoReconnectReason = \\""%s\\"""""		903487	0					
ANR	903707	PrimaryExpression	"""NoReconnectReason = \\""%s\\"""""		903487	0					
ANR	903708	Argument	no_reconnect_reason		903487	1					
ANR	903709	Identifier	no_reconnect_reason		903487	0					
ANR	903710	IfStatement	if ( ! myad -> Insert ( line . Value ( ) ) )		903487	1					
ANR	903711	Condition	! myad -> Insert ( line . Value ( ) )	4293:6:94410:94436	903487	0	True				
ANR	903712	UnaryOperationExpression	! myad -> Insert ( line . Value ( ) )		903487	0					
ANR	903713	UnaryOperator	!		903487	0					
ANR	903714	CallExpression	myad -> Insert ( line . Value ( ) )		903487	1					
ANR	903715	Callee	myad -> Insert		903487	0					
ANR	903716	PtrMemberAccess	myad -> Insert		903487	0					
ANR	903717	Identifier	myad		903487	0					
ANR	903718	Identifier	Insert		903487	1					
ANR	903719	ArgumentList	line . Value ( )		903487	1					
ANR	903720	Argument	line . Value ( )		903487	0					
ANR	903721	CallExpression	line . Value ( )		903487	0					
ANR	903722	Callee	line . Value		903487	0					
ANR	903723	MemberAccess	line . Value		903487	0					
ANR	903724	Identifier	line		903487	0					
ANR	903725	Identifier	Value		903487	1					
ANR	903726	ArgumentList			903487	1					
ANR	903727	CompoundStatement		51:36:1308:1308	903487	1					
ANR	903728	ReturnStatement	return NULL ;	4294:3:94445:94456	903487	0	True				
ANR	903729	Identifier	NULL		903487	0					
ANR	903730	ReturnStatement	return myad ;	4298:1:94467:94478	903487	17	True				
ANR	903731	Identifier	myad		903487	0					
ANR	903732	ReturnType	ClassAd *		903487	1					
ANR	903733	Identifier	JobDisconnectedEvent :: toClassAd		903487	2					
ANR	903734	ParameterList			903487	3					
ANR	903735	CFGEntryNode	ENTRY		903487		True				
ANR	903736	CFGExitNode	EXIT		903487		True				
ANR	903737	Symbol	NULL		903487						
ANR	903738	Symbol	* myad		903487						
ANR	903739	Symbol	startd_name		903487						
ANR	903740	Symbol	line . Value		903487						
ANR	903741	Symbol	line		903487						
ANR	903742	Symbol	startd_addr		903487						
ANR	903743	Symbol	no_reconnect_reason		903487						
ANR	903744	Symbol	myad -> Insert		903487						
ANR	903745	Symbol	disconnect_reason		903487						
ANR	903746	Symbol	myad		903487						
ANR	903747	Symbol	can_reconnect		903487						
ANR	903748	Symbol	ULogEvent :: toClassAd		903487						
ANR	903749	Function	JobDisconnectedEvent :: initFromClassAd	4302:0:94484:95292							
ANR	903750	FunctionDef	JobDisconnectedEvent :: initFromClassAd (ClassAd * ad)		903749	0					
ANR	903751	CompoundStatement		4304:0:94542:95292	903749	0					
ANR	903752	ExpressionStatement	ULogEvent :: initFromClassAd ( ad )	4305:1:94545:94575	903749	0	True				
ANR	903753	CallExpression	ULogEvent :: initFromClassAd ( ad )		903749	0					
ANR	903754	Callee	ULogEvent :: initFromClassAd		903749	0					
ANR	903755	Identifier	ULogEvent :: initFromClassAd		903749	0					
ANR	903756	ArgumentList	ad		903749	1					
ANR	903757	Argument	ad		903749	0					
ANR	903758	Identifier	ad		903749	0					
ANR	903759	IfStatement	if ( ! ad )		903749	1					
ANR	903760	Condition	! ad	4307:5:94583:94585	903749	0	True				
ANR	903761	UnaryOperationExpression	! ad		903749	0					
ANR	903762	UnaryOperator	!		903749	0					
ANR	903763	Identifier	ad		903749	1					
ANR	903764	CompoundStatement		4:11:46:46	903749	1					
ANR	903765	ReturnStatement	return ;	4308:2:94593:94599	903749	0	True				
ANR	903766	IdentifierDeclStatement	char * mallocstr = NULL ;	4312:1:94679:94701	903749	2	True				
ANR	903767	IdentifierDecl	* mallocstr = NULL		903749	0					
ANR	903768	IdentifierDeclType	char *		903749	0					
ANR	903769	Identifier	mallocstr		903749	1					
ANR	903770	AssignmentExpression	* mallocstr = NULL		903749	2		=			
ANR	903771	Identifier	NULL		903749	0					
ANR	903772	Identifier	NULL		903749	1					
ANR	903773	ExpressionStatement	"ad -> LookupString ( ""DisconnectReason"" , & mallocstr )"	4313:1:94704:94754	903749	3	True				
ANR	903774	CallExpression	"ad -> LookupString ( ""DisconnectReason"" , & mallocstr )"		903749	0					
ANR	903775	Callee	ad -> LookupString		903749	0					
ANR	903776	PtrMemberAccess	ad -> LookupString		903749	0					
ANR	903777	Identifier	ad		903749	0					
ANR	903778	Identifier	LookupString		903749	1					
ANR	903779	ArgumentList	"""DisconnectReason"""		903749	1					
ANR	903780	Argument	"""DisconnectReason"""		903749	0					
ANR	903781	PrimaryExpression	"""DisconnectReason"""		903749	0					
ANR	903782	Argument	& mallocstr		903749	1					
ANR	903783	UnaryOperationExpression	& mallocstr		903749	0					
ANR	903784	UnaryOperator	&		903749	0					
ANR	903785	Identifier	mallocstr		903749	1					
ANR	903786	IfStatement	if ( mallocstr )		903749	4					
ANR	903787	Condition	mallocstr	4314:5:94761:94769	903749	0	True				
ANR	903788	Identifier	mallocstr		903749	0					
ANR	903789	CompoundStatement		11:17:230:230	903749	1					
ANR	903790	ExpressionStatement	setDisconnectReason ( mallocstr )	4315:2:94777:94809	903749	0	True				
ANR	903791	CallExpression	setDisconnectReason ( mallocstr )		903749	0					
ANR	903792	Callee	setDisconnectReason		903749	0					
ANR	903793	Identifier	setDisconnectReason		903749	0					
ANR	903794	ArgumentList	mallocstr		903749	1					
ANR	903795	Argument	mallocstr		903749	0					
ANR	903796	Identifier	mallocstr		903749	0					
ANR	903797	ExpressionStatement	free ( mallocstr )	4316:2:94813:94830	903749	1	True				
ANR	903798	CallExpression	free ( mallocstr )		903749	0					
ANR	903799	Callee	free		903749	0					
ANR	903800	Identifier	free		903749	0					
ANR	903801	ArgumentList	mallocstr		903749	1					
ANR	903802	Argument	mallocstr		903749	0					
ANR	903803	Identifier	mallocstr		903749	0					
ANR	903804	ExpressionStatement	mallocstr = NULL	4317:2:94834:94850	903749	2	True				
ANR	903805	AssignmentExpression	mallocstr = NULL		903749	0		=			
ANR	903806	Identifier	mallocstr		903749	0					
ANR	903807	Identifier	NULL		903749	1					
ANR	903808	ExpressionStatement	"ad -> LookupString ( ""NoReconnectReason"" , & mallocstr )"	4320:1:94857:94908	903749	5	True				
ANR	903809	CallExpression	"ad -> LookupString ( ""NoReconnectReason"" , & mallocstr )"		903749	0					
ANR	903810	Callee	ad -> LookupString		903749	0					
ANR	903811	PtrMemberAccess	ad -> LookupString		903749	0					
ANR	903812	Identifier	ad		903749	0					
ANR	903813	Identifier	LookupString		903749	1					
ANR	903814	ArgumentList	"""NoReconnectReason"""		903749	1					
ANR	903815	Argument	"""NoReconnectReason"""		903749	0					
ANR	903816	PrimaryExpression	"""NoReconnectReason"""		903749	0					
ANR	903817	Argument	& mallocstr		903749	1					
ANR	903818	UnaryOperationExpression	& mallocstr		903749	0					
ANR	903819	UnaryOperator	&		903749	0					
ANR	903820	Identifier	mallocstr		903749	1					
ANR	903821	IfStatement	if ( mallocstr )		903749	6					
ANR	903822	Condition	mallocstr	4321:5:94915:94923	903749	0	True				
ANR	903823	Identifier	mallocstr		903749	0					
ANR	903824	CompoundStatement		18:17:384:384	903749	1					
ANR	903825	ExpressionStatement	setNoReconnectReason ( mallocstr )	4322:2:94931:94964	903749	0	True				
ANR	903826	CallExpression	setNoReconnectReason ( mallocstr )		903749	0					
ANR	903827	Callee	setNoReconnectReason		903749	0					
ANR	903828	Identifier	setNoReconnectReason		903749	0					
ANR	903829	ArgumentList	mallocstr		903749	1					
ANR	903830	Argument	mallocstr		903749	0					
ANR	903831	Identifier	mallocstr		903749	0					
ANR	903832	ExpressionStatement	free ( mallocstr )	4323:2:94968:94985	903749	1	True				
ANR	903833	CallExpression	free ( mallocstr )		903749	0					
ANR	903834	Callee	free		903749	0					
ANR	903835	Identifier	free		903749	0					
ANR	903836	ArgumentList	mallocstr		903749	1					
ANR	903837	Argument	mallocstr		903749	0					
ANR	903838	Identifier	mallocstr		903749	0					
ANR	903839	ExpressionStatement	mallocstr = NULL	4324:2:94989:95005	903749	2	True				
ANR	903840	AssignmentExpression	mallocstr = NULL		903749	0		=			
ANR	903841	Identifier	mallocstr		903749	0					
ANR	903842	Identifier	NULL		903749	1					
ANR	903843	ExpressionStatement	"ad -> LookupString ( ""StartdAddr"" , & mallocstr )"	4327:1:95012:95056	903749	7	True				
ANR	903844	CallExpression	"ad -> LookupString ( ""StartdAddr"" , & mallocstr )"		903749	0					
ANR	903845	Callee	ad -> LookupString		903749	0					
ANR	903846	PtrMemberAccess	ad -> LookupString		903749	0					
ANR	903847	Identifier	ad		903749	0					
ANR	903848	Identifier	LookupString		903749	1					
ANR	903849	ArgumentList	"""StartdAddr"""		903749	1					
ANR	903850	Argument	"""StartdAddr"""		903749	0					
ANR	903851	PrimaryExpression	"""StartdAddr"""		903749	0					
ANR	903852	Argument	& mallocstr		903749	1					
ANR	903853	UnaryOperationExpression	& mallocstr		903749	0					
ANR	903854	UnaryOperator	&		903749	0					
ANR	903855	Identifier	mallocstr		903749	1					
ANR	903856	IfStatement	if ( mallocstr )		903749	8					
ANR	903857	Condition	mallocstr	4328:5:95063:95071	903749	0	True				
ANR	903858	Identifier	mallocstr		903749	0					
ANR	903859	CompoundStatement		25:17:532:532	903749	1					
ANR	903860	ExpressionStatement	setStartdAddr ( mallocstr )	4329:2:95079:95105	903749	0	True				
ANR	903861	CallExpression	setStartdAddr ( mallocstr )		903749	0					
ANR	903862	Callee	setStartdAddr		903749	0					
ANR	903863	Identifier	setStartdAddr		903749	0					
ANR	903864	ArgumentList	mallocstr		903749	1					
ANR	903865	Argument	mallocstr		903749	0					
ANR	903866	Identifier	mallocstr		903749	0					
ANR	903867	ExpressionStatement	free ( mallocstr )	4330:2:95109:95126	903749	1	True				
ANR	903868	CallExpression	free ( mallocstr )		903749	0					
ANR	903869	Callee	free		903749	0					
ANR	903870	Identifier	free		903749	0					
ANR	903871	ArgumentList	mallocstr		903749	1					
ANR	903872	Argument	mallocstr		903749	0					
ANR	903873	Identifier	mallocstr		903749	0					
ANR	903874	ExpressionStatement	mallocstr = NULL	4331:2:95130:95146	903749	2	True				
ANR	903875	AssignmentExpression	mallocstr = NULL		903749	0		=			
ANR	903876	Identifier	mallocstr		903749	0					
ANR	903877	Identifier	NULL		903749	1					
ANR	903878	ExpressionStatement	"ad -> LookupString ( ""StartdName"" , & mallocstr )"	4334:1:95153:95197	903749	9	True				
ANR	903879	CallExpression	"ad -> LookupString ( ""StartdName"" , & mallocstr )"		903749	0					
ANR	903880	Callee	ad -> LookupString		903749	0					
ANR	903881	PtrMemberAccess	ad -> LookupString		903749	0					
ANR	903882	Identifier	ad		903749	0					
ANR	903883	Identifier	LookupString		903749	1					
ANR	903884	ArgumentList	"""StartdName"""		903749	1					
ANR	903885	Argument	"""StartdName"""		903749	0					
ANR	903886	PrimaryExpression	"""StartdName"""		903749	0					
ANR	903887	Argument	& mallocstr		903749	1					
ANR	903888	UnaryOperationExpression	& mallocstr		903749	0					
ANR	903889	UnaryOperator	&		903749	0					
ANR	903890	Identifier	mallocstr		903749	1					
ANR	903891	IfStatement	if ( mallocstr )		903749	10					
ANR	903892	Condition	mallocstr	4335:5:95204:95212	903749	0	True				
ANR	903893	Identifier	mallocstr		903749	0					
ANR	903894	CompoundStatement		32:17:673:673	903749	1					
ANR	903895	ExpressionStatement	setStartdName ( mallocstr )	4336:2:95220:95246	903749	0	True				
ANR	903896	CallExpression	setStartdName ( mallocstr )		903749	0					
ANR	903897	Callee	setStartdName		903749	0					
ANR	903898	Identifier	setStartdName		903749	0					
ANR	903899	ArgumentList	mallocstr		903749	1					
ANR	903900	Argument	mallocstr		903749	0					
ANR	903901	Identifier	mallocstr		903749	0					
ANR	903902	ExpressionStatement	free ( mallocstr )	4337:2:95250:95267	903749	1	True				
ANR	903903	CallExpression	free ( mallocstr )		903749	0					
ANR	903904	Callee	free		903749	0					
ANR	903905	Identifier	free		903749	0					
ANR	903906	ArgumentList	mallocstr		903749	1					
ANR	903907	Argument	mallocstr		903749	0					
ANR	903908	Identifier	mallocstr		903749	0					
ANR	903909	ExpressionStatement	mallocstr = NULL	4338:2:95271:95287	903749	2	True				
ANR	903910	AssignmentExpression	mallocstr = NULL		903749	0		=			
ANR	903911	Identifier	mallocstr		903749	0					
ANR	903912	Identifier	NULL		903749	1					
ANR	903913	ReturnType	void		903749	1					
ANR	903914	Identifier	JobDisconnectedEvent :: initFromClassAd		903749	2					
ANR	903915	ParameterList	ClassAd * ad		903749	3					
ANR	903916	Parameter	ClassAd * ad	4303:39:94528:94538	903749	0	True				
ANR	903917	ParameterType	ClassAd *		903749	0					
ANR	903918	Identifier	ad		903749	1					
ANR	903919	CFGEntryNode	ENTRY		903749		True				
ANR	903920	CFGExitNode	EXIT		903749		True				
ANR	903921	Symbol	& mallocstr		903749						
ANR	903922	Symbol	ad		903749						
ANR	903923	Symbol	NULL		903749						
ANR	903924	Symbol	mallocstr		903749						
ANR	903925	Function	JobReconnectedEvent :: JobReconnectedEvent	4345:0:95332:95482							
ANR	903926	FunctionDef	JobReconnectedEvent :: JobReconnectedEvent ()		903925	0					
ANR	903927	CompoundStatement		4346:0:95379:95482	903925	0					
ANR	903928	ExpressionStatement	eventNumber = ULOG_JOB_RECONNECTED	4347:1:95382:95416	903925	0	True				
ANR	903929	AssignmentExpression	eventNumber = ULOG_JOB_RECONNECTED		903925	0		=			
ANR	903930	Identifier	eventNumber		903925	0					
ANR	903931	Identifier	ULOG_JOB_RECONNECTED		903925	1					
ANR	903932	ExpressionStatement	startd_addr = NULL	4348:1:95419:95437	903925	1	True				
ANR	903933	AssignmentExpression	startd_addr = NULL		903925	0		=			
ANR	903934	Identifier	startd_addr		903925	0					
ANR	903935	Identifier	NULL		903925	1					
ANR	903936	ExpressionStatement	startd_name = NULL	4349:1:95440:95458	903925	2	True				
ANR	903937	AssignmentExpression	startd_name = NULL		903925	0		=			
ANR	903938	Identifier	startd_name		903925	0					
ANR	903939	Identifier	NULL		903925	1					
ANR	903940	ExpressionStatement	starter_addr = NULL	4350:1:95461:95480	903925	3	True				
ANR	903941	AssignmentExpression	starter_addr = NULL		903925	0		=			
ANR	903942	Identifier	starter_addr		903925	0					
ANR	903943	Identifier	NULL		903925	1					
ANR	903944	Identifier	JobReconnectedEvent :: JobReconnectedEvent		903925	1					
ANR	903945	ParameterList			903925	2					
ANR	903946	CFGEntryNode	ENTRY		903925		True				
ANR	903947	CFGExitNode	EXIT		903925		True				
ANR	903948	Symbol	ULOG_JOB_RECONNECTED		903925						
ANR	903949	Symbol	NULL		903925						
ANR	903950	Symbol	eventNumber		903925						
ANR	903951	Symbol	startd_name		903925						
ANR	903952	Symbol	startd_addr		903925						
ANR	903953	Symbol	starter_addr		903925						
ANR	903954	Function	JobReconnectedEvent :: ~JobReconnectedEvent	4354:0:95486:95685							
ANR	903955	FunctionDef	JobReconnectedEvent :: ~JobReconnectedEvent ()		903954	0					
ANR	903956	CompoundStatement		4355:0:95534:95685	903954	0					
ANR	903957	IfStatement	if ( startd_addr )		903954	0					
ANR	903958	Condition	startd_addr	4356:5:95541:95551	903954	0	True				
ANR	903959	Identifier	startd_addr		903954	0					
ANR	903960	CompoundStatement		2:19:20:20	903954	1					
ANR	903961	Statement	delete	4357:2:95559:95564	903954	0	True				
ANR	903962	Statement	[	4357:9:95566:95566	903954	1	True				
ANR	903963	Statement	]	4357:10:95567:95567	903954	2	True				
ANR	903964	ExpressionStatement	startd_addr	4357:12:95569:95580	903954	3	True				
ANR	903965	Identifier	startd_addr		903954	0					
ANR	903966	IfStatement	if ( startd_name )		903954	1					
ANR	903967	Condition	startd_name	4359:5:95590:95600	903954	0	True				
ANR	903968	Identifier	startd_name		903954	0					
ANR	903969	CompoundStatement		5:19:69:69	903954	1					
ANR	903970	Statement	delete	4360:2:95608:95613	903954	0	True				
ANR	903971	Statement	[	4360:9:95615:95615	903954	1	True				
ANR	903972	Statement	]	4360:10:95616:95616	903954	2	True				
ANR	903973	ExpressionStatement	startd_name	4360:12:95618:95629	903954	3	True				
ANR	903974	Identifier	startd_name		903954	0					
ANR	903975	IfStatement	if ( starter_addr )		903954	2					
ANR	903976	Condition	starter_addr	4362:5:95639:95650	903954	0	True				
ANR	903977	Identifier	starter_addr		903954	0					
ANR	903978	CompoundStatement		8:20:119:119	903954	1					
ANR	903979	Statement	delete	4363:2:95658:95663	903954	0	True				
ANR	903980	Statement	[	4363:9:95665:95665	903954	1	True				
ANR	903981	Statement	]	4363:10:95666:95666	903954	2	True				
ANR	903982	ExpressionStatement	starter_addr	4363:12:95668:95680	903954	3	True				
ANR	903983	Identifier	starter_addr		903954	0					
ANR	903984	Identifier	JobReconnectedEvent :: ~JobReconnectedEvent		903954	1					
ANR	903985	ParameterList			903954	2					
ANR	903986	CFGEntryNode	ENTRY		903954		True				
ANR	903987	CFGExitNode	EXIT		903954		True				
ANR	903988	Symbol	startd_name		903954						
ANR	903989	Symbol	startd_addr		903954						
ANR	903990	Symbol	starter_addr		903954						
ANR	903991	Function	JobReconnectedEvent :: setStartdAddr	4368:0:95689:95944							
ANR	903992	FunctionDef	JobReconnectedEvent :: setStartdAddr (const char * startd)		903991	0					
ANR	903993	CompoundStatement		4370:0:95751:95944	903991	0					
ANR	903994	IfStatement	if ( startd_addr )		903991	0					
ANR	903995	Condition	startd_addr	4371:5:95758:95768	903991	0	True				
ANR	903996	Identifier	startd_addr		903991	0					
ANR	903997	CompoundStatement		2:19:20:20	903991	1					
ANR	903998	Statement	delete	4372:2:95776:95781	903991	0	True				
ANR	903999	Statement	[	4372:8:95782:95782	903991	1	True				
ANR	904000	Statement	]	4372:9:95783:95783	903991	2	True				
ANR	904001	ExpressionStatement	startd_addr	4372:11:95785:95796	903991	3	True				
ANR	904002	Identifier	startd_addr		903991	0					
ANR	904003	ExpressionStatement	startd_addr = NULL	4373:2:95800:95818	903991	4	True				
ANR	904004	AssignmentExpression	startd_addr = NULL		903991	0		=			
ANR	904005	Identifier	startd_addr		903991	0					
ANR	904006	Identifier	NULL		903991	1					
ANR	904007	IfStatement	if ( startd )		903991	1					
ANR	904008	Condition	startd	4375:5:95828:95833	903991	0	True				
ANR	904009	Identifier	startd		903991	0					
ANR	904010	CompoundStatement		6:14:85:85	903991	1					
ANR	904011	ExpressionStatement	startd_addr = strnewp ( startd )	4376:2:95841:95872	903991	0	True				
ANR	904012	AssignmentExpression	startd_addr = strnewp ( startd )		903991	0		=			
ANR	904013	Identifier	startd_addr		903991	0					
ANR	904014	CallExpression	strnewp ( startd )		903991	1					
ANR	904015	Callee	strnewp		903991	0					
ANR	904016	Identifier	strnewp		903991	0					
ANR	904017	ArgumentList	startd		903991	1					
ANR	904018	Argument	startd		903991	0					
ANR	904019	Identifier	startd		903991	0					
ANR	904020	IfStatement	if ( ! startd_addr )		903991	1					
ANR	904021	Condition	! startd_addr	4377:6:95880:95891	903991	0	True				
ANR	904022	UnaryOperationExpression	! startd_addr		903991	0					
ANR	904023	UnaryOperator	!		903991	0					
ANR	904024	Identifier	startd_addr		903991	1					
ANR	904025	CompoundStatement		8:21:143:143	903991	1					
ANR	904026	ExpressionStatement	"EXCEPT ( ""ERROR: out of memory!\\n"" )"	4378:3:95900:95935	903991	0	True				
ANR	904027	CallExpression	"EXCEPT ( ""ERROR: out of memory!\\n"" )"		903991	0					
ANR	904028	Callee	EXCEPT		903991	0					
ANR	904029	Identifier	EXCEPT		903991	0					
ANR	904030	ArgumentList	"""ERROR: out of memory!\\n"""		903991	1					
ANR	904031	Argument	"""ERROR: out of memory!\\n"""		903991	0					
ANR	904032	PrimaryExpression	"""ERROR: out of memory!\\n"""		903991	0					
ANR	904033	ReturnType	void		903991	1					
ANR	904034	Identifier	JobReconnectedEvent :: setStartdAddr		903991	2					
ANR	904035	ParameterList	const char * startd		903991	3					
ANR	904036	Parameter	const char * startd	4369:36:95730:95747	903991	0	True				
ANR	904037	ParameterType	const char *		903991	0					
ANR	904038	Identifier	startd		903991	1					
ANR	904039	CFGEntryNode	ENTRY		903991		True				
ANR	904040	CFGExitNode	EXIT		903991		True				
ANR	904041	Symbol	NULL		903991						
ANR	904042	Symbol	startd_addr		903991						
ANR	904043	Symbol	strnewp		903991						
ANR	904044	Symbol	startd		903991						
ANR	904045	Function	JobReconnectedEvent :: setStartdName	4384:0:95948:96197							
ANR	904046	FunctionDef	JobReconnectedEvent :: setStartdName (const char * name)		904045	0					
ANR	904047	CompoundStatement		4386:0:96008:96197	904045	0					
ANR	904048	IfStatement	if ( startd_name )		904045	0					
ANR	904049	Condition	startd_name	4387:5:96015:96025	904045	0	True				
ANR	904050	Identifier	startd_name		904045	0					
ANR	904051	CompoundStatement		2:19:20:20	904045	1					
ANR	904052	Statement	delete	4388:2:96033:96038	904045	0	True				
ANR	904053	Statement	[	4388:8:96039:96039	904045	1	True				
ANR	904054	Statement	]	4388:9:96040:96040	904045	2	True				
ANR	904055	ExpressionStatement	startd_name	4388:11:96042:96053	904045	3	True				
ANR	904056	Identifier	startd_name		904045	0					
ANR	904057	ExpressionStatement	startd_name = NULL	4389:2:96057:96075	904045	4	True				
ANR	904058	AssignmentExpression	startd_name = NULL		904045	0		=			
ANR	904059	Identifier	startd_name		904045	0					
ANR	904060	Identifier	NULL		904045	1					
ANR	904061	IfStatement	if ( name )		904045	1					
ANR	904062	Condition	name	4391:5:96085:96088	904045	0	True				
ANR	904063	Identifier	name		904045	0					
ANR	904064	CompoundStatement		6:12:83:83	904045	1					
ANR	904065	ExpressionStatement	startd_name = strnewp ( name )	4392:2:96096:96125	904045	0	True				
ANR	904066	AssignmentExpression	startd_name = strnewp ( name )		904045	0		=			
ANR	904067	Identifier	startd_name		904045	0					
ANR	904068	CallExpression	strnewp ( name )		904045	1					
ANR	904069	Callee	strnewp		904045	0					
ANR	904070	Identifier	strnewp		904045	0					
ANR	904071	ArgumentList	name		904045	1					
ANR	904072	Argument	name		904045	0					
ANR	904073	Identifier	name		904045	0					
ANR	904074	IfStatement	if ( ! startd_name )		904045	1					
ANR	904075	Condition	! startd_name	4393:6:96133:96144	904045	0	True				
ANR	904076	UnaryOperationExpression	! startd_name		904045	0					
ANR	904077	UnaryOperator	!		904045	0					
ANR	904078	Identifier	startd_name		904045	1					
ANR	904079	CompoundStatement		8:21:139:139	904045	1					
ANR	904080	ExpressionStatement	"EXCEPT ( ""ERROR: out of memory!\\n"" )"	4394:3:96153:96188	904045	0	True				
ANR	904081	CallExpression	"EXCEPT ( ""ERROR: out of memory!\\n"" )"		904045	0					
ANR	904082	Callee	EXCEPT		904045	0					
ANR	904083	Identifier	EXCEPT		904045	0					
ANR	904084	ArgumentList	"""ERROR: out of memory!\\n"""		904045	1					
ANR	904085	Argument	"""ERROR: out of memory!\\n"""		904045	0					
ANR	904086	PrimaryExpression	"""ERROR: out of memory!\\n"""		904045	0					
ANR	904087	ReturnType	void		904045	1					
ANR	904088	Identifier	JobReconnectedEvent :: setStartdName		904045	2					
ANR	904089	ParameterList	const char * name		904045	3					
ANR	904090	Parameter	const char * name	4385:36:95989:96004	904045	0	True				
ANR	904091	ParameterType	const char *		904045	0					
ANR	904092	Identifier	name		904045	1					
ANR	904093	CFGEntryNode	ENTRY		904045		True				
ANR	904094	CFGExitNode	EXIT		904045		True				
ANR	904095	Symbol	NULL		904045						
ANR	904096	Symbol	startd_name		904045						
ANR	904097	Symbol	name		904045						
ANR	904098	Symbol	strnewp		904045						
ANR	904099	Function	JobReconnectedEvent :: setStarterAddr	4400:0:96201:96465							
ANR	904100	FunctionDef	JobReconnectedEvent :: setStarterAddr (const char * starter)		904099	0					
ANR	904101	CompoundStatement		4402:0:96265:96465	904099	0					
ANR	904102	IfStatement	if ( starter_addr )		904099	0					
ANR	904103	Condition	starter_addr	4403:5:96272:96283	904099	0	True				
ANR	904104	Identifier	starter_addr		904099	0					
ANR	904105	CompoundStatement		2:20:21:21	904099	1					
ANR	904106	Statement	delete	4404:2:96291:96296	904099	0	True				
ANR	904107	Statement	[	4404:8:96297:96297	904099	1	True				
ANR	904108	Statement	]	4404:9:96298:96298	904099	2	True				
ANR	904109	ExpressionStatement	starter_addr	4404:11:96300:96312	904099	3	True				
ANR	904110	Identifier	starter_addr		904099	0					
ANR	904111	ExpressionStatement	starter_addr = NULL	4405:2:96316:96335	904099	4	True				
ANR	904112	AssignmentExpression	starter_addr = NULL		904099	0		=			
ANR	904113	Identifier	starter_addr		904099	0					
ANR	904114	Identifier	NULL		904099	1					
ANR	904115	IfStatement	if ( starter )		904099	1					
ANR	904116	Condition	starter	4407:5:96345:96351	904099	0	True				
ANR	904117	Identifier	starter		904099	0					
ANR	904118	CompoundStatement		6:15:89:89	904099	1					
ANR	904119	ExpressionStatement	starter_addr = strnewp ( starter )	4408:2:96359:96392	904099	0	True				
ANR	904120	AssignmentExpression	starter_addr = strnewp ( starter )		904099	0		=			
ANR	904121	Identifier	starter_addr		904099	0					
ANR	904122	CallExpression	strnewp ( starter )		904099	1					
ANR	904123	Callee	strnewp		904099	0					
ANR	904124	Identifier	strnewp		904099	0					
ANR	904125	ArgumentList	starter		904099	1					
ANR	904126	Argument	starter		904099	0					
ANR	904127	Identifier	starter		904099	0					
ANR	904128	IfStatement	if ( ! starter_addr )		904099	1					
ANR	904129	Condition	! starter_addr	4409:6:96400:96412	904099	0	True				
ANR	904130	UnaryOperationExpression	! starter_addr		904099	0					
ANR	904131	UnaryOperator	!		904099	0					
ANR	904132	Identifier	starter_addr		904099	1					
ANR	904133	CompoundStatement		8:22:150:150	904099	1					
ANR	904134	ExpressionStatement	"EXCEPT ( ""ERROR: out of memory!\\n"" )"	4410:3:96421:96456	904099	0	True				
ANR	904135	CallExpression	"EXCEPT ( ""ERROR: out of memory!\\n"" )"		904099	0					
ANR	904136	Callee	EXCEPT		904099	0					
ANR	904137	Identifier	EXCEPT		904099	0					
ANR	904138	ArgumentList	"""ERROR: out of memory!\\n"""		904099	1					
ANR	904139	Argument	"""ERROR: out of memory!\\n"""		904099	0					
ANR	904140	PrimaryExpression	"""ERROR: out of memory!\\n"""		904099	0					
ANR	904141	ReturnType	void		904099	1					
ANR	904142	Identifier	JobReconnectedEvent :: setStarterAddr		904099	2					
ANR	904143	ParameterList	const char * starter		904099	3					
ANR	904144	Parameter	const char * starter	4401:37:96243:96261	904099	0	True				
ANR	904145	ParameterType	const char *		904099	0					
ANR	904146	Identifier	starter		904099	1					
ANR	904147	CFGEntryNode	ENTRY		904099		True				
ANR	904148	CFGExitNode	EXIT		904099		True				
ANR	904149	Symbol	NULL		904099						
ANR	904150	Symbol	starter		904099						
ANR	904151	Symbol	strnewp		904099						
ANR	904152	Symbol	starter_addr		904099						
ANR	904153	Function	JobReconnectedEvent :: writeEvent	4416:0:96469:97115							
ANR	904154	FunctionDef	JobReconnectedEvent :: writeEvent (FILE * file)		904153	0					
ANR	904155	CompoundStatement		4418:0:96519:97115	904153	0					
ANR	904156	IfStatement	if ( ! startd_addr )		904153	0					
ANR	904157	Condition	! startd_addr	4419:5:96526:96538	904153	0	True				
ANR	904158	UnaryOperationExpression	! startd_addr		904153	0					
ANR	904159	UnaryOperator	!		904153	0					
ANR	904160	Identifier	startd_addr		904153	1					
ANR	904161	CompoundStatement		2:21:22:22	904153	1					
ANR	904162	Statement	EXCEPT	4420:2:96546:96551	904153	0	True				
ANR	904163	Statement	(	4420:8:96552:96552	904153	1	True				
ANR	904164	Statement	"""JobReconnectedEvent::writeEvent() called without """	4420:10:96554:96604	904153	2	True				
ANR	904165	Statement	"""startd_addr"""	4421:4:96610:96622	904153	3	True				
ANR	904166	Statement	)	4421:18:96624:96624	904153	4	True				
ANR	904167	ExpressionStatement		4421:19:96625:96625	904153	5	True				
ANR	904168	IfStatement	if ( ! startd_name )		904153	1					
ANR	904169	Condition	! startd_name	4423:5:96635:96647	904153	0	True				
ANR	904170	UnaryOperationExpression	! startd_name		904153	0					
ANR	904171	UnaryOperator	!		904153	0					
ANR	904172	Identifier	startd_name		904153	1					
ANR	904173	CompoundStatement		6:21:131:131	904153	1					
ANR	904174	Statement	EXCEPT	4424:2:96655:96660	904153	0	True				
ANR	904175	Statement	(	4424:8:96661:96661	904153	1	True				
ANR	904176	Statement	"""JobReconnectedEvent::writeEvent() called without """	4424:10:96663:96713	904153	2	True				
ANR	904177	Statement	"""startd_name"""	4425:4:96719:96731	904153	3	True				
ANR	904178	Statement	)	4425:18:96733:96733	904153	4	True				
ANR	904179	ExpressionStatement		4425:19:96734:96734	904153	5	True				
ANR	904180	IfStatement	if ( ! starter_addr )		904153	2					
ANR	904181	Condition	! starter_addr	4427:5:96744:96757	904153	0	True				
ANR	904182	UnaryOperationExpression	! starter_addr		904153	0					
ANR	904183	UnaryOperator	!		904153	0					
ANR	904184	Identifier	starter_addr		904153	1					
ANR	904185	CompoundStatement		10:22:241:241	904153	1					
ANR	904186	Statement	EXCEPT	4428:2:96765:96770	904153	0	True				
ANR	904187	Statement	(	4428:8:96771:96771	904153	1	True				
ANR	904188	Statement	"""JobReconnectedEvent::writeEvent() called without """	4428:10:96773:96823	904153	2	True				
ANR	904189	Statement	"""starter_addr"""	4429:4:96829:96842	904153	3	True				
ANR	904190	Statement	)	4429:19:96844:96844	904153	4	True				
ANR	904191	ExpressionStatement		4429:20:96845:96845	904153	5	True				
ANR	904192	IfStatement	"if ( fprintf ( file , ""Job reconnected to %s\\n"" , startd_name ) < 0 )"		904153	3					
ANR	904193	Condition	"fprintf ( file , ""Job reconnected to %s\\n"" , startd_name ) < 0"	4432:5:96856:96912	904153	0	True				
ANR	904194	RelationalExpression	"fprintf ( file , ""Job reconnected to %s\\n"" , startd_name ) < 0"		904153	0		<			
ANR	904195	CallExpression	"fprintf ( file , ""Job reconnected to %s\\n"" , startd_name )"		904153	0					
ANR	904196	Callee	fprintf		904153	0					
ANR	904197	Identifier	fprintf		904153	0					
ANR	904198	ArgumentList	file		904153	1					
ANR	904199	Argument	file		904153	0					
ANR	904200	Identifier	file		904153	0					
ANR	904201	Argument	"""Job reconnected to %s\\n"""		904153	1					
ANR	904202	PrimaryExpression	"""Job reconnected to %s\\n"""		904153	0					
ANR	904203	Argument	startd_name		904153	2					
ANR	904204	Identifier	startd_name		904153	0					
ANR	904205	PrimaryExpression	0		904153	1					
ANR	904206	CompoundStatement		15:65:396:396	904153	1					
ANR	904207	ReturnStatement	return 0 ;	4433:2:96920:96928	904153	0	True				
ANR	904208	PrimaryExpression	0		904153	0					
ANR	904209	IfStatement	"if ( fprintf ( file , ""    startd address: %s\\n"" , startd_addr ) < 0 )"		904153	4					
ANR	904210	Condition	"fprintf ( file , ""    startd address: %s\\n"" , startd_addr ) < 0"	4435:5:96938:96995	904153	0	True				
ANR	904211	RelationalExpression	"fprintf ( file , ""    startd address: %s\\n"" , startd_addr ) < 0"		904153	0		<			
ANR	904212	CallExpression	"fprintf ( file , ""    startd address: %s\\n"" , startd_addr )"		904153	0					
ANR	904213	Callee	fprintf		904153	0					
ANR	904214	Identifier	fprintf		904153	0					
ANR	904215	ArgumentList	file		904153	1					
ANR	904216	Argument	file		904153	0					
ANR	904217	Identifier	file		904153	0					
ANR	904218	Argument	"""    startd address: %s\\n"""		904153	1					
ANR	904219	PrimaryExpression	"""    startd address: %s\\n"""		904153	0					
ANR	904220	Argument	startd_addr		904153	2					
ANR	904221	Identifier	startd_addr		904153	0					
ANR	904222	PrimaryExpression	0		904153	1					
ANR	904223	CompoundStatement		18:66:479:479	904153	1					
ANR	904224	ReturnStatement	return 0 ;	4436:2:97003:97011	904153	0	True				
ANR	904225	PrimaryExpression	0		904153	0					
ANR	904226	IfStatement	"if ( fprintf ( file , ""    starter address: %s\\n"" , starter_addr ) < 0 )"		904153	5					
ANR	904227	Condition	"fprintf ( file , ""    starter address: %s\\n"" , starter_addr ) < 0"	4438:5:97021:97080	904153	0	True				
ANR	904228	RelationalExpression	"fprintf ( file , ""    starter address: %s\\n"" , starter_addr ) < 0"		904153	0		<			
ANR	904229	CallExpression	"fprintf ( file , ""    starter address: %s\\n"" , starter_addr )"		904153	0					
ANR	904230	Callee	fprintf		904153	0					
ANR	904231	Identifier	fprintf		904153	0					
ANR	904232	ArgumentList	file		904153	1					
ANR	904233	Argument	file		904153	0					
ANR	904234	Identifier	file		904153	0					
ANR	904235	Argument	"""    starter address: %s\\n"""		904153	1					
ANR	904236	PrimaryExpression	"""    starter address: %s\\n"""		904153	0					
ANR	904237	Argument	starter_addr		904153	2					
ANR	904238	Identifier	starter_addr		904153	0					
ANR	904239	PrimaryExpression	0		904153	1					
ANR	904240	CompoundStatement		21:68:564:564	904153	1					
ANR	904241	ReturnStatement	return 0 ;	4439:2:97088:97096	904153	0	True				
ANR	904242	PrimaryExpression	0		904153	0					
ANR	904243	ReturnStatement	return ( 1 ) ;	4441:1:97102:97113	904153	6	True				
ANR	904244	PrimaryExpression	1		904153	0					
ANR	904245	ReturnType	int		904153	1					
ANR	904246	Identifier	JobReconnectedEvent :: writeEvent		904153	2					
ANR	904247	ParameterList	FILE * file		904153	3					
ANR	904248	Parameter	FILE * file	4417:33:96506:96515	904153	0	True				
ANR	904249	ParameterType	FILE *		904153	0					
ANR	904250	Identifier	file		904153	1					
ANR	904251	CFGEntryNode	ENTRY		904153		True				
ANR	904252	CFGExitNode	EXIT		904153		True				
ANR	904253	Symbol	file		904153						
ANR	904254	Symbol	startd_name		904153						
ANR	904255	Symbol	startd_addr		904153						
ANR	904256	Symbol	starter_addr		904153						
ANR	904257	Symbol	fprintf		904153						
ANR	904258	Function	JobReconnectedEvent :: readEvent	4445:0:97119:97674							
ANR	904259	FunctionDef	JobReconnectedEvent :: readEvent (FILE * file)		904258	0					
ANR	904260	CompoundStatement		4447:0:97168:97674	904258	0					
ANR	904261	IdentifierDeclStatement	MyString line ;	4448:1:97171:97184	904258	0	True				
ANR	904262	IdentifierDecl	line		904258	0					
ANR	904263	IdentifierDeclType	MyString		904258	0					
ANR	904264	Identifier	line		904258	1					
ANR	904265	IfStatement	"if ( line . readLine ( file ) && line . replaceString ( ""Job reconnected to "" , """" ) )"		904258	1					
ANR	904266	Condition	"line . readLine ( file ) && line . replaceString ( ""Job reconnected to "" , """" )"	4450:5:97192:97261	904258	0	True				
ANR	904267	AndExpression	"line . readLine ( file ) && line . replaceString ( ""Job reconnected to "" , """" )"		904258	0		&&			
ANR	904268	CallExpression	line . readLine ( file )		904258	0					
ANR	904269	Callee	line . readLine		904258	0					
ANR	904270	MemberAccess	line . readLine		904258	0					
ANR	904271	Identifier	line		904258	0					
ANR	904272	Identifier	readLine		904258	1					
ANR	904273	ArgumentList	file		904258	1					
ANR	904274	Argument	file		904258	0					
ANR	904275	Identifier	file		904258	0					
ANR	904276	CallExpression	"line . replaceString ( ""Job reconnected to "" , """" )"		904258	1					
ANR	904277	Callee	line . replaceString		904258	0					
ANR	904278	MemberAccess	line . replaceString		904258	0					
ANR	904279	Identifier	line		904258	0					
ANR	904280	Identifier	replaceString		904258	1					
ANR	904281	ArgumentList	"""Job reconnected to """		904258	1					
ANR	904282	Argument	"""Job reconnected to """		904258	0					
ANR	904283	PrimaryExpression	"""Job reconnected to """		904258	0					
ANR	904284	Argument	""""""		904258	1					
ANR	904285	PrimaryExpression	""""""		904258	0					
ANR	904286	CompoundStatement		6:1:97:97	904258	1					
ANR	904287	ExpressionStatement	line . chomp ( )	4453:2:97270:97282	904258	0	True				
ANR	904288	CallExpression	line . chomp ( )		904258	0					
ANR	904289	Callee	line . chomp		904258	0					
ANR	904290	MemberAccess	line . chomp		904258	0					
ANR	904291	Identifier	line		904258	0					
ANR	904292	Identifier	chomp		904258	1					
ANR	904293	ArgumentList			904258	1					
ANR	904294	ExpressionStatement	setStartdName ( line . Value ( ) )	4454:2:97286:97315	904258	1	True				
ANR	904295	CallExpression	setStartdName ( line . Value ( ) )		904258	0					
ANR	904296	Callee	setStartdName		904258	0					
ANR	904297	Identifier	setStartdName		904258	0					
ANR	904298	ArgumentList	line . Value ( )		904258	1					
ANR	904299	Argument	line . Value ( )		904258	0					
ANR	904300	CallExpression	line . Value ( )		904258	0					
ANR	904301	Callee	line . Value		904258	0					
ANR	904302	MemberAccess	line . Value		904258	0					
ANR	904303	Identifier	line		904258	0					
ANR	904304	Identifier	Value		904258	1					
ANR	904305	ArgumentList			904258	1					
ANR	904306	ElseStatement	else		904258	0					
ANR	904307	CompoundStatement		9:8:156:156	904258	0					
ANR	904308	ReturnStatement	return 0 ;	4456:2:97329:97337	904258	0	True				
ANR	904309	PrimaryExpression	0		904258	0					
ANR	904310	IfStatement	"if ( line . readLine ( file ) && line . replaceString ( ""    startd address: "" , """" ) )"		904258	2					
ANR	904311	Condition	"line . readLine ( file ) && line . replaceString ( ""    startd address: "" , """" )"	4459:5:97348:97420	904258	0	True				
ANR	904312	AndExpression	"line . readLine ( file ) && line . replaceString ( ""    startd address: "" , """" )"		904258	0		&&			
ANR	904313	CallExpression	line . readLine ( file )		904258	0					
ANR	904314	Callee	line . readLine		904258	0					
ANR	904315	MemberAccess	line . readLine		904258	0					
ANR	904316	Identifier	line		904258	0					
ANR	904317	Identifier	readLine		904258	1					
ANR	904318	ArgumentList	file		904258	1					
ANR	904319	Argument	file		904258	0					
ANR	904320	Identifier	file		904258	0					
ANR	904321	CallExpression	"line . replaceString ( ""    startd address: "" , """" )"		904258	1					
ANR	904322	Callee	line . replaceString		904258	0					
ANR	904323	MemberAccess	line . replaceString		904258	0					
ANR	904324	Identifier	line		904258	0					
ANR	904325	Identifier	replaceString		904258	1					
ANR	904326	ArgumentList	"""    startd address: """		904258	1					
ANR	904327	Argument	"""    startd address: """		904258	0					
ANR	904328	PrimaryExpression	"""    startd address: """		904258	0					
ANR	904329	Argument	""""""		904258	1					
ANR	904330	PrimaryExpression	""""""		904258	0					
ANR	904331	CompoundStatement		15:1:256:256	904258	1					
ANR	904332	ExpressionStatement	line . chomp ( )	4462:2:97429:97441	904258	0	True				
ANR	904333	CallExpression	line . chomp ( )		904258	0					
ANR	904334	Callee	line . chomp		904258	0					
ANR	904335	MemberAccess	line . chomp		904258	0					
ANR	904336	Identifier	line		904258	0					
ANR	904337	Identifier	chomp		904258	1					
ANR	904338	ArgumentList			904258	1					
ANR	904339	ExpressionStatement	setStartdAddr ( line . Value ( ) )	4463:2:97445:97474	904258	1	True				
ANR	904340	CallExpression	setStartdAddr ( line . Value ( ) )		904258	0					
ANR	904341	Callee	setStartdAddr		904258	0					
ANR	904342	Identifier	setStartdAddr		904258	0					
ANR	904343	ArgumentList	line . Value ( )		904258	1					
ANR	904344	Argument	line . Value ( )		904258	0					
ANR	904345	CallExpression	line . Value ( )		904258	0					
ANR	904346	Callee	line . Value		904258	0					
ANR	904347	MemberAccess	line . Value		904258	0					
ANR	904348	Identifier	line		904258	0					
ANR	904349	Identifier	Value		904258	1					
ANR	904350	ArgumentList			904258	1					
ANR	904351	ElseStatement	else		904258	0					
ANR	904352	CompoundStatement		18:8:315:315	904258	0					
ANR	904353	ReturnStatement	return 0 ;	4465:2:97488:97496	904258	0	True				
ANR	904354	PrimaryExpression	0		904258	0					
ANR	904355	IfStatement	"if ( line . readLine ( file ) && line . replaceString ( ""    starter address: "" , """" ) )"		904258	3					
ANR	904356	Condition	"line . readLine ( file ) && line . replaceString ( ""    starter address: "" , """" )"	4468:5:97507:97580	904258	0	True				
ANR	904357	AndExpression	"line . readLine ( file ) && line . replaceString ( ""    starter address: "" , """" )"		904258	0		&&			
ANR	904358	CallExpression	line . readLine ( file )		904258	0					
ANR	904359	Callee	line . readLine		904258	0					
ANR	904360	MemberAccess	line . readLine		904258	0					
ANR	904361	Identifier	line		904258	0					
ANR	904362	Identifier	readLine		904258	1					
ANR	904363	ArgumentList	file		904258	1					
ANR	904364	Argument	file		904258	0					
ANR	904365	Identifier	file		904258	0					
ANR	904366	CallExpression	"line . replaceString ( ""    starter address: "" , """" )"		904258	1					
ANR	904367	Callee	line . replaceString		904258	0					
ANR	904368	MemberAccess	line . replaceString		904258	0					
ANR	904369	Identifier	line		904258	0					
ANR	904370	Identifier	replaceString		904258	1					
ANR	904371	ArgumentList	"""    starter address: """		904258	1					
ANR	904372	Argument	"""    starter address: """		904258	0					
ANR	904373	PrimaryExpression	"""    starter address: """		904258	0					
ANR	904374	Argument	""""""		904258	1					
ANR	904375	PrimaryExpression	""""""		904258	0					
ANR	904376	CompoundStatement		24:1:416:416	904258	1					
ANR	904377	ExpressionStatement	line . chomp ( )	4471:2:97589:97601	904258	0	True				
ANR	904378	CallExpression	line . chomp ( )		904258	0					
ANR	904379	Callee	line . chomp		904258	0					
ANR	904380	MemberAccess	line . chomp		904258	0					
ANR	904381	Identifier	line		904258	0					
ANR	904382	Identifier	chomp		904258	1					
ANR	904383	ArgumentList			904258	1					
ANR	904384	ExpressionStatement	setStarterAddr ( line . Value ( ) )	4472:2:97605:97635	904258	1	True				
ANR	904385	CallExpression	setStarterAddr ( line . Value ( ) )		904258	0					
ANR	904386	Callee	setStarterAddr		904258	0					
ANR	904387	Identifier	setStarterAddr		904258	0					
ANR	904388	ArgumentList	line . Value ( )		904258	1					
ANR	904389	Argument	line . Value ( )		904258	0					
ANR	904390	CallExpression	line . Value ( )		904258	0					
ANR	904391	Callee	line . Value		904258	0					
ANR	904392	MemberAccess	line . Value		904258	0					
ANR	904393	Identifier	line		904258	0					
ANR	904394	Identifier	Value		904258	1					
ANR	904395	ArgumentList			904258	1					
ANR	904396	ElseStatement	else		904258	0					
ANR	904397	CompoundStatement		27:8:476:476	904258	0					
ANR	904398	ReturnStatement	return 0 ;	4474:2:97649:97657	904258	0	True				
ANR	904399	PrimaryExpression	0		904258	0					
ANR	904400	ReturnStatement	return 1 ;	4477:1:97664:97672	904258	4	True				
ANR	904401	PrimaryExpression	1		904258	0					
ANR	904402	ReturnType	int		904258	1					
ANR	904403	Identifier	JobReconnectedEvent :: readEvent		904258	2					
ANR	904404	ParameterList	FILE * file		904258	3					
ANR	904405	Parameter	FILE * file	4446:32:97155:97164	904258	0	True				
ANR	904406	ParameterType	FILE *		904258	0					
ANR	904407	Identifier	file		904258	1					
ANR	904408	CFGEntryNode	ENTRY		904258		True				
ANR	904409	CFGExitNode	EXIT		904258		True				
ANR	904410	Symbol	line . readLine		904258						
ANR	904411	Symbol	file		904258						
ANR	904412	Symbol	line . Value		904258						
ANR	904413	Symbol	line		904258						
ANR	904414	Symbol	line . replaceString		904258						
ANR	904415	Function	JobReconnectedEvent :: toClassAd	4481:0:97678:98569							
ANR	904416	FunctionDef	JobReconnectedEvent :: toClassAd ()		904415	0					
ANR	904417	CompoundStatement		4483:0:97726:98569	904415	0					
ANR	904418	IfStatement	if ( ! startd_addr )		904415	0					
ANR	904419	Condition	! startd_addr	4484:5:97733:97745	904415	0	True				
ANR	904420	UnaryOperationExpression	! startd_addr		904415	0					
ANR	904421	UnaryOperator	!		904415	0					
ANR	904422	Identifier	startd_addr		904415	1					
ANR	904423	CompoundStatement		2:21:22:22	904415	1					
ANR	904424	Statement	EXCEPT	4485:2:97753:97758	904415	0	True				
ANR	904425	Statement	(	4485:8:97759:97759	904415	1	True				
ANR	904426	Statement	"""JobReconnectedEvent::toClassAd() called without """	4485:10:97761:97810	904415	2	True				
ANR	904427	Statement	"""startd_addr"""	4486:4:97816:97828	904415	3	True				
ANR	904428	Statement	)	4486:18:97830:97830	904415	4	True				
ANR	904429	ExpressionStatement		4486:19:97831:97831	904415	5	True				
ANR	904430	IfStatement	if ( ! startd_name )		904415	1					
ANR	904431	Condition	! startd_name	4488:5:97841:97853	904415	0	True				
ANR	904432	UnaryOperationExpression	! startd_name		904415	0					
ANR	904433	UnaryOperator	!		904415	0					
ANR	904434	Identifier	startd_name		904415	1					
ANR	904435	CompoundStatement		6:21:130:130	904415	1					
ANR	904436	Statement	EXCEPT	4489:2:97861:97866	904415	0	True				
ANR	904437	Statement	(	4489:8:97867:97867	904415	1	True				
ANR	904438	Statement	"""JobReconnectedEvent::toClassAd() called without """	4489:10:97869:97918	904415	2	True				
ANR	904439	Statement	"""startd_name"""	4490:4:97924:97936	904415	3	True				
ANR	904440	Statement	)	4490:18:97938:97938	904415	4	True				
ANR	904441	ExpressionStatement		4490:19:97939:97939	904415	5	True				
ANR	904442	IfStatement	if ( ! starter_addr )		904415	2					
ANR	904443	Condition	! starter_addr	4492:5:97949:97962	904415	0	True				
ANR	904444	UnaryOperationExpression	! starter_addr		904415	0					
ANR	904445	UnaryOperator	!		904415	0					
ANR	904446	Identifier	starter_addr		904415	1					
ANR	904447	CompoundStatement		10:22:239:239	904415	1					
ANR	904448	Statement	EXCEPT	4493:2:97970:97975	904415	0	True				
ANR	904449	Statement	(	4493:8:97976:97976	904415	1	True				
ANR	904450	Statement	"""JobReconnectedEvent::toClassAd() called without """	4493:10:97978:98027	904415	2	True				
ANR	904451	Statement	"""starter_addr"""	4494:4:98033:98046	904415	3	True				
ANR	904452	Statement	)	4494:19:98048:98048	904415	4	True				
ANR	904453	ExpressionStatement		4494:20:98049:98049	904415	5	True				
ANR	904454	IdentifierDeclStatement	ClassAd * myad = ULogEvent :: toClassAd ( ) ;	4497:1:98056:98094	904415	3	True				
ANR	904455	IdentifierDecl	* myad = ULogEvent :: toClassAd ( )		904415	0					
ANR	904456	IdentifierDeclType	ClassAd *		904415	0					
ANR	904457	Identifier	myad		904415	1					
ANR	904458	AssignmentExpression	* myad = ULogEvent :: toClassAd ( )		904415	2		=			
ANR	904459	Identifier	myad		904415	0					
ANR	904460	CallExpression	ULogEvent :: toClassAd ( )		904415	1					
ANR	904461	Callee	ULogEvent :: toClassAd		904415	0					
ANR	904462	Identifier	ULogEvent :: toClassAd		904415	0					
ANR	904463	ArgumentList			904415	1					
ANR	904464	IfStatement	if ( ! myad )		904415	4					
ANR	904465	Condition	! myad	4498:5:98101:98105	904415	0	True				
ANR	904466	UnaryOperationExpression	! myad		904415	0					
ANR	904467	UnaryOperator	!		904415	0					
ANR	904468	Identifier	myad		904415	1					
ANR	904469	CompoundStatement		16:13:382:382	904415	1					
ANR	904470	ReturnStatement	return NULL ;	4499:2:98113:98124	904415	0	True				
ANR	904471	Identifier	NULL		904415	0					
ANR	904472	IdentifierDeclStatement	MyString line ;	4502:1:98131:98144	904415	5	True				
ANR	904473	IdentifierDecl	line		904415	0					
ANR	904474	IdentifierDeclType	MyString		904415	0					
ANR	904475	Identifier	line		904415	1					
ANR	904476	ExpressionStatement	"line . sprintf ( ""StartdAddr = \\""%s\\"""" , startd_addr )"	4503:1:98147:98197	904415	6	True				
ANR	904477	CallExpression	"line . sprintf ( ""StartdAddr = \\""%s\\"""" , startd_addr )"		904415	0					
ANR	904478	Callee	line . sprintf		904415	0					
ANR	904479	MemberAccess	line . sprintf		904415	0					
ANR	904480	Identifier	line		904415	0					
ANR	904481	Identifier	sprintf		904415	1					
ANR	904482	ArgumentList	"""StartdAddr = \\""%s\\"""""		904415	1					
ANR	904483	Argument	"""StartdAddr = \\""%s\\"""""		904415	0					
ANR	904484	PrimaryExpression	"""StartdAddr = \\""%s\\"""""		904415	0					
ANR	904485	Argument	startd_addr		904415	1					
ANR	904486	Identifier	startd_addr		904415	0					
ANR	904487	IfStatement	if ( ! myad -> Insert ( line . Value ( ) ) )		904415	7					
ANR	904488	Condition	! myad -> Insert ( line . Value ( ) )	4504:5:98204:98230	904415	0	True				
ANR	904489	UnaryOperationExpression	! myad -> Insert ( line . Value ( ) )		904415	0					
ANR	904490	UnaryOperator	!		904415	0					
ANR	904491	CallExpression	myad -> Insert ( line . Value ( ) )		904415	1					
ANR	904492	Callee	myad -> Insert		904415	0					
ANR	904493	PtrMemberAccess	myad -> Insert		904415	0					
ANR	904494	Identifier	myad		904415	0					
ANR	904495	Identifier	Insert		904415	1					
ANR	904496	ArgumentList	line . Value ( )		904415	1					
ANR	904497	Argument	line . Value ( )		904415	0					
ANR	904498	CallExpression	line . Value ( )		904415	0					
ANR	904499	Callee	line . Value		904415	0					
ANR	904500	MemberAccess	line . Value		904415	0					
ANR	904501	Identifier	line		904415	0					
ANR	904502	Identifier	Value		904415	1					
ANR	904503	ArgumentList			904415	1					
ANR	904504	CompoundStatement		22:35:507:507	904415	1					
ANR	904505	ReturnStatement	return NULL ;	4505:2:98238:98249	904415	0	True				
ANR	904506	Identifier	NULL		904415	0					
ANR	904507	ExpressionStatement	"line . sprintf ( ""StartdName = \\""%s\\"""" , startd_name )"	4507:1:98255:98305	904415	8	True				
ANR	904508	CallExpression	"line . sprintf ( ""StartdName = \\""%s\\"""" , startd_name )"		904415	0					
ANR	904509	Callee	line . sprintf		904415	0					
ANR	904510	MemberAccess	line . sprintf		904415	0					
ANR	904511	Identifier	line		904415	0					
ANR	904512	Identifier	sprintf		904415	1					
ANR	904513	ArgumentList	"""StartdName = \\""%s\\"""""		904415	1					
ANR	904514	Argument	"""StartdName = \\""%s\\"""""		904415	0					
ANR	904515	PrimaryExpression	"""StartdName = \\""%s\\"""""		904415	0					
ANR	904516	Argument	startd_name		904415	1					
ANR	904517	Identifier	startd_name		904415	0					
ANR	904518	IfStatement	if ( ! myad -> Insert ( line . Value ( ) ) )		904415	9					
ANR	904519	Condition	! myad -> Insert ( line . Value ( ) )	4508:5:98312:98338	904415	0	True				
ANR	904520	UnaryOperationExpression	! myad -> Insert ( line . Value ( ) )		904415	0					
ANR	904521	UnaryOperator	!		904415	0					
ANR	904522	CallExpression	myad -> Insert ( line . Value ( ) )		904415	1					
ANR	904523	Callee	myad -> Insert		904415	0					
ANR	904524	PtrMemberAccess	myad -> Insert		904415	0					
ANR	904525	Identifier	myad		904415	0					
ANR	904526	Identifier	Insert		904415	1					
ANR	904527	ArgumentList	line . Value ( )		904415	1					
ANR	904528	Argument	line . Value ( )		904415	0					
ANR	904529	CallExpression	line . Value ( )		904415	0					
ANR	904530	Callee	line . Value		904415	0					
ANR	904531	MemberAccess	line . Value		904415	0					
ANR	904532	Identifier	line		904415	0					
ANR	904533	Identifier	Value		904415	1					
ANR	904534	ArgumentList			904415	1					
ANR	904535	CompoundStatement		26:35:615:615	904415	1					
ANR	904536	ReturnStatement	return NULL ;	4509:2:98346:98357	904415	0	True				
ANR	904537	Identifier	NULL		904415	0					
ANR	904538	ExpressionStatement	"line . sprintf ( ""StarterAddr = \\""%s\\"""" , starter_addr )"	4511:1:98363:98415	904415	10	True				
ANR	904539	CallExpression	"line . sprintf ( ""StarterAddr = \\""%s\\"""" , starter_addr )"		904415	0					
ANR	904540	Callee	line . sprintf		904415	0					
ANR	904541	MemberAccess	line . sprintf		904415	0					
ANR	904542	Identifier	line		904415	0					
ANR	904543	Identifier	sprintf		904415	1					
ANR	904544	ArgumentList	"""StarterAddr = \\""%s\\"""""		904415	1					
ANR	904545	Argument	"""StarterAddr = \\""%s\\"""""		904415	0					
ANR	904546	PrimaryExpression	"""StarterAddr = \\""%s\\"""""		904415	0					
ANR	904547	Argument	starter_addr		904415	1					
ANR	904548	Identifier	starter_addr		904415	0					
ANR	904549	IfStatement	if ( ! myad -> Insert ( line . Value ( ) ) )		904415	11					
ANR	904550	Condition	! myad -> Insert ( line . Value ( ) )	4512:5:98422:98448	904415	0	True				
ANR	904551	UnaryOperationExpression	! myad -> Insert ( line . Value ( ) )		904415	0					
ANR	904552	UnaryOperator	!		904415	0					
ANR	904553	CallExpression	myad -> Insert ( line . Value ( ) )		904415	1					
ANR	904554	Callee	myad -> Insert		904415	0					
ANR	904555	PtrMemberAccess	myad -> Insert		904415	0					
ANR	904556	Identifier	myad		904415	0					
ANR	904557	Identifier	Insert		904415	1					
ANR	904558	ArgumentList	line . Value ( )		904415	1					
ANR	904559	Argument	line . Value ( )		904415	0					
ANR	904560	CallExpression	line . Value ( )		904415	0					
ANR	904561	Callee	line . Value		904415	0					
ANR	904562	MemberAccess	line . Value		904415	0					
ANR	904563	Identifier	line		904415	0					
ANR	904564	Identifier	Value		904415	1					
ANR	904565	ArgumentList			904415	1					
ANR	904566	CompoundStatement		30:35:725:725	904415	1					
ANR	904567	ReturnStatement	return NULL ;	4513:2:98456:98467	904415	0	True				
ANR	904568	Identifier	NULL		904415	0					
ANR	904569	IfStatement	"if ( ! myad -> Insert ( ""EventDescription = \\""Job reconnected\\"""" ) )"		904415	12					
ANR	904570	Condition	"! myad -> Insert ( ""EventDescription = \\""Job reconnected\\"""" )"	4515:5:98477:98531	904415	0	True				
ANR	904571	UnaryOperationExpression	"! myad -> Insert ( ""EventDescription = \\""Job reconnected\\"""" )"		904415	0					
ANR	904572	UnaryOperator	!		904415	0					
ANR	904573	CallExpression	"myad -> Insert ( ""EventDescription = \\""Job reconnected\\"""" )"		904415	1					
ANR	904574	Callee	myad -> Insert		904415	0					
ANR	904575	PtrMemberAccess	myad -> Insert		904415	0					
ANR	904576	Identifier	myad		904415	0					
ANR	904577	Identifier	Insert		904415	1					
ANR	904578	ArgumentList	"""EventDescription = \\""Job reconnected\\"""""		904415	1					
ANR	904579	Argument	"""EventDescription = \\""Job reconnected\\"""""		904415	0					
ANR	904580	PrimaryExpression	"""EventDescription = \\""Job reconnected\\"""""		904415	0					
ANR	904581	CompoundStatement		33:63:808:808	904415	1					
ANR	904582	ReturnStatement	return NULL ;	4516:2:98539:98550	904415	0	True				
ANR	904583	Identifier	NULL		904415	0					
ANR	904584	ReturnStatement	return myad ;	4518:1:98556:98567	904415	13	True				
ANR	904585	Identifier	myad		904415	0					
ANR	904586	ReturnType	ClassAd *		904415	1					
ANR	904587	Identifier	JobReconnectedEvent :: toClassAd		904415	2					
ANR	904588	ParameterList			904415	3					
ANR	904589	CFGEntryNode	ENTRY		904415		True				
ANR	904590	CFGExitNode	EXIT		904415		True				
ANR	904591	Symbol	NULL		904415						
ANR	904592	Symbol	* myad		904415						
ANR	904593	Symbol	startd_name		904415						
ANR	904594	Symbol	line . Value		904415						
ANR	904595	Symbol	line		904415						
ANR	904596	Symbol	startd_addr		904415						
ANR	904597	Symbol	myad -> Insert		904415						
ANR	904598	Symbol	starter_addr		904415						
ANR	904599	Symbol	myad		904415						
ANR	904600	Symbol	ULogEvent :: toClassAd		904415						
ANR	904601	Function	JobReconnectedEvent :: initFromClassAd	4522:0:98573:99397							
ANR	904602	FunctionDef	JobReconnectedEvent :: initFromClassAd (ClassAd * ad)		904601	0					
ANR	904603	CompoundStatement		4524:0:98630:99397	904601	0					
ANR	904604	ExpressionStatement	ULogEvent :: initFromClassAd ( ad )	4525:1:98633:98663	904601	0	True				
ANR	904605	CallExpression	ULogEvent :: initFromClassAd ( ad )		904601	0					
ANR	904606	Callee	ULogEvent :: initFromClassAd		904601	0					
ANR	904607	Identifier	ULogEvent :: initFromClassAd		904601	0					
ANR	904608	ArgumentList	ad		904601	1					
ANR	904609	Argument	ad		904601	0					
ANR	904610	Identifier	ad		904601	0					
ANR	904611	IfStatement	if ( ! ad )		904601	1					
ANR	904612	Condition	! ad	4527:5:98671:98673	904601	0	True				
ANR	904613	UnaryOperationExpression	! ad		904601	0					
ANR	904614	UnaryOperator	!		904601	0					
ANR	904615	Identifier	ad		904601	1					
ANR	904616	CompoundStatement		4:11:46:46	904601	1					
ANR	904617	ReturnStatement	return ;	4528:2:98681:98687	904601	0	True				
ANR	904618	IdentifierDeclStatement	char * mallocstr = NULL ;	4532:1:98767:98789	904601	2	True				
ANR	904619	IdentifierDecl	* mallocstr = NULL		904601	0					
ANR	904620	IdentifierDeclType	char *		904601	0					
ANR	904621	Identifier	mallocstr		904601	1					
ANR	904622	AssignmentExpression	* mallocstr = NULL		904601	2		=			
ANR	904623	Identifier	NULL		904601	0					
ANR	904624	Identifier	NULL		904601	1					
ANR	904625	ExpressionStatement	"ad -> LookupString ( ""StartdAddr"" , & mallocstr )"	4533:1:98792:98836	904601	3	True				
ANR	904626	CallExpression	"ad -> LookupString ( ""StartdAddr"" , & mallocstr )"		904601	0					
ANR	904627	Callee	ad -> LookupString		904601	0					
ANR	904628	PtrMemberAccess	ad -> LookupString		904601	0					
ANR	904629	Identifier	ad		904601	0					
ANR	904630	Identifier	LookupString		904601	1					
ANR	904631	ArgumentList	"""StartdAddr"""		904601	1					
ANR	904632	Argument	"""StartdAddr"""		904601	0					
ANR	904633	PrimaryExpression	"""StartdAddr"""		904601	0					
ANR	904634	Argument	& mallocstr		904601	1					
ANR	904635	UnaryOperationExpression	& mallocstr		904601	0					
ANR	904636	UnaryOperator	&		904601	0					
ANR	904637	Identifier	mallocstr		904601	1					
ANR	904638	IfStatement	if ( mallocstr )		904601	4					
ANR	904639	Condition	mallocstr	4534:5:98843:98851	904601	0	True				
ANR	904640	Identifier	mallocstr		904601	0					
ANR	904641	CompoundStatement		11:17:224:224	904601	1					
ANR	904642	IfStatement	if ( startd_addr )		904601	0					
ANR	904643	Condition	startd_addr	4535:6:98863:98873	904601	0	True				
ANR	904644	Identifier	startd_addr		904601	0					
ANR	904645	CompoundStatement		12:20:246:246	904601	1					
ANR	904646	Statement	delete	4536:3:98882:98887	904601	0	True				
ANR	904647	Statement	[	4536:10:98889:98889	904601	1	True				
ANR	904648	Statement	]	4536:11:98890:98890	904601	2	True				
ANR	904649	ExpressionStatement	startd_addr	4536:13:98892:98903	904601	3	True				
ANR	904650	Identifier	startd_addr		904601	0					
ANR	904651	ExpressionStatement	startd_addr = strnewp ( mallocstr )	4538:2:98911:98945	904601	1	True				
ANR	904652	AssignmentExpression	startd_addr = strnewp ( mallocstr )		904601	0		=			
ANR	904653	Identifier	startd_addr		904601	0					
ANR	904654	CallExpression	strnewp ( mallocstr )		904601	1					
ANR	904655	Callee	strnewp		904601	0					
ANR	904656	Identifier	strnewp		904601	0					
ANR	904657	ArgumentList	mallocstr		904601	1					
ANR	904658	Argument	mallocstr		904601	0					
ANR	904659	Identifier	mallocstr		904601	0					
ANR	904660	ExpressionStatement	free ( mallocstr )	4539:2:98949:98966	904601	2	True				
ANR	904661	CallExpression	free ( mallocstr )		904601	0					
ANR	904662	Callee	free		904601	0					
ANR	904663	Identifier	free		904601	0					
ANR	904664	ArgumentList	mallocstr		904601	1					
ANR	904665	Argument	mallocstr		904601	0					
ANR	904666	Identifier	mallocstr		904601	0					
ANR	904667	ExpressionStatement	mallocstr = NULL	4540:2:98970:98986	904601	3	True				
ANR	904668	AssignmentExpression	mallocstr = NULL		904601	0		=			
ANR	904669	Identifier	mallocstr		904601	0					
ANR	904670	Identifier	NULL		904601	1					
ANR	904671	ExpressionStatement	"ad -> LookupString ( ""StartdName"" , & mallocstr )"	4543:1:98993:99037	904601	5	True				
ANR	904672	CallExpression	"ad -> LookupString ( ""StartdName"" , & mallocstr )"		904601	0					
ANR	904673	Callee	ad -> LookupString		904601	0					
ANR	904674	PtrMemberAccess	ad -> LookupString		904601	0					
ANR	904675	Identifier	ad		904601	0					
ANR	904676	Identifier	LookupString		904601	1					
ANR	904677	ArgumentList	"""StartdName"""		904601	1					
ANR	904678	Argument	"""StartdName"""		904601	0					
ANR	904679	PrimaryExpression	"""StartdName"""		904601	0					
ANR	904680	Argument	& mallocstr		904601	1					
ANR	904681	UnaryOperationExpression	& mallocstr		904601	0					
ANR	904682	UnaryOperator	&		904601	0					
ANR	904683	Identifier	mallocstr		904601	1					
ANR	904684	IfStatement	if ( mallocstr )		904601	6					
ANR	904685	Condition	mallocstr	4544:5:99044:99052	904601	0	True				
ANR	904686	Identifier	mallocstr		904601	0					
ANR	904687	CompoundStatement		21:17:425:425	904601	1					
ANR	904688	IfStatement	if ( startd_name )		904601	0					
ANR	904689	Condition	startd_name	4545:6:99064:99074	904601	0	True				
ANR	904690	Identifier	startd_name		904601	0					
ANR	904691	CompoundStatement		22:20:447:447	904601	1					
ANR	904692	Statement	delete	4546:3:99083:99088	904601	0	True				
ANR	904693	Statement	[	4546:10:99090:99090	904601	1	True				
ANR	904694	Statement	]	4546:11:99091:99091	904601	2	True				
ANR	904695	ExpressionStatement	startd_name	4546:13:99093:99104	904601	3	True				
ANR	904696	Identifier	startd_name		904601	0					
ANR	904697	ExpressionStatement	startd_name = strnewp ( mallocstr )	4548:2:99112:99146	904601	1	True				
ANR	904698	AssignmentExpression	startd_name = strnewp ( mallocstr )		904601	0		=			
ANR	904699	Identifier	startd_name		904601	0					
ANR	904700	CallExpression	strnewp ( mallocstr )		904601	1					
ANR	904701	Callee	strnewp		904601	0					
ANR	904702	Identifier	strnewp		904601	0					
ANR	904703	ArgumentList	mallocstr		904601	1					
ANR	904704	Argument	mallocstr		904601	0					
ANR	904705	Identifier	mallocstr		904601	0					
ANR	904706	ExpressionStatement	free ( mallocstr )	4549:2:99150:99167	904601	2	True				
ANR	904707	CallExpression	free ( mallocstr )		904601	0					
ANR	904708	Callee	free		904601	0					
ANR	904709	Identifier	free		904601	0					
ANR	904710	ArgumentList	mallocstr		904601	1					
ANR	904711	Argument	mallocstr		904601	0					
ANR	904712	Identifier	mallocstr		904601	0					
ANR	904713	ExpressionStatement	mallocstr = NULL	4550:2:99171:99187	904601	3	True				
ANR	904714	AssignmentExpression	mallocstr = NULL		904601	0		=			
ANR	904715	Identifier	mallocstr		904601	0					
ANR	904716	Identifier	NULL		904601	1					
ANR	904717	ExpressionStatement	"ad -> LookupString ( ""StarterAddr"" , & mallocstr )"	4553:1:99194:99239	904601	7	True				
ANR	904718	CallExpression	"ad -> LookupString ( ""StarterAddr"" , & mallocstr )"		904601	0					
ANR	904719	Callee	ad -> LookupString		904601	0					
ANR	904720	PtrMemberAccess	ad -> LookupString		904601	0					
ANR	904721	Identifier	ad		904601	0					
ANR	904722	Identifier	LookupString		904601	1					
ANR	904723	ArgumentList	"""StarterAddr"""		904601	1					
ANR	904724	Argument	"""StarterAddr"""		904601	0					
ANR	904725	PrimaryExpression	"""StarterAddr"""		904601	0					
ANR	904726	Argument	& mallocstr		904601	1					
ANR	904727	UnaryOperationExpression	& mallocstr		904601	0					
ANR	904728	UnaryOperator	&		904601	0					
ANR	904729	Identifier	mallocstr		904601	1					
ANR	904730	IfStatement	if ( mallocstr )		904601	8					
ANR	904731	Condition	mallocstr	4554:5:99246:99254	904601	0	True				
ANR	904732	Identifier	mallocstr		904601	0					
ANR	904733	CompoundStatement		31:17:627:627	904601	1					
ANR	904734	IfStatement	if ( starter_addr )		904601	0					
ANR	904735	Condition	starter_addr	4555:6:99266:99277	904601	0	True				
ANR	904736	Identifier	starter_addr		904601	0					
ANR	904737	CompoundStatement		32:21:650:650	904601	1					
ANR	904738	Statement	delete	4556:3:99286:99291	904601	0	True				
ANR	904739	Statement	[	4556:10:99293:99293	904601	1	True				
ANR	904740	Statement	]	4556:11:99294:99294	904601	2	True				
ANR	904741	ExpressionStatement	starter_addr	4556:13:99296:99308	904601	3	True				
ANR	904742	Identifier	starter_addr		904601	0					
ANR	904743	ExpressionStatement	starter_addr = strnewp ( mallocstr )	4558:2:99316:99351	904601	1	True				
ANR	904744	AssignmentExpression	starter_addr = strnewp ( mallocstr )		904601	0		=			
ANR	904745	Identifier	starter_addr		904601	0					
ANR	904746	CallExpression	strnewp ( mallocstr )		904601	1					
ANR	904747	Callee	strnewp		904601	0					
ANR	904748	Identifier	strnewp		904601	0					
ANR	904749	ArgumentList	mallocstr		904601	1					
ANR	904750	Argument	mallocstr		904601	0					
ANR	904751	Identifier	mallocstr		904601	0					
ANR	904752	ExpressionStatement	free ( mallocstr )	4559:2:99355:99372	904601	2	True				
ANR	904753	CallExpression	free ( mallocstr )		904601	0					
ANR	904754	Callee	free		904601	0					
ANR	904755	Identifier	free		904601	0					
ANR	904756	ArgumentList	mallocstr		904601	1					
ANR	904757	Argument	mallocstr		904601	0					
ANR	904758	Identifier	mallocstr		904601	0					
ANR	904759	ExpressionStatement	mallocstr = NULL	4560:2:99376:99392	904601	3	True				
ANR	904760	AssignmentExpression	mallocstr = NULL		904601	0		=			
ANR	904761	Identifier	mallocstr		904601	0					
ANR	904762	Identifier	NULL		904601	1					
ANR	904763	ReturnType	void		904601	1					
ANR	904764	Identifier	JobReconnectedEvent :: initFromClassAd		904601	2					
ANR	904765	ParameterList	ClassAd * ad		904601	3					
ANR	904766	Parameter	ClassAd * ad	4523:38:98616:98626	904601	0	True				
ANR	904767	ParameterType	ClassAd *		904601	0					
ANR	904768	Identifier	ad		904601	1					
ANR	904769	CFGEntryNode	ENTRY		904601		True				
ANR	904770	CFGExitNode	EXIT		904601		True				
ANR	904771	Symbol	& mallocstr		904601						
ANR	904772	Symbol	ad		904601						
ANR	904773	Symbol	NULL		904601						
ANR	904774	Symbol	mallocstr		904601						
ANR	904775	Symbol	startd_name		904601						
ANR	904776	Symbol	startd_addr		904601						
ANR	904777	Symbol	strnewp		904601						
ANR	904778	Symbol	starter_addr		904601						
ANR	904779	Function	JobReconnectFailedEvent :: JobReconnectFailedEvent	4567:0:99441:99577							
ANR	904780	FunctionDef	JobReconnectFailedEvent :: JobReconnectFailedEvent ()		904779	0					
ANR	904781	CompoundStatement		4568:0:99496:99577	904779	0					
ANR	904782	ExpressionStatement	eventNumber = ULOG_JOB_RECONNECT_FAILED	4569:1:99499:99538	904779	0	True				
ANR	904783	AssignmentExpression	eventNumber = ULOG_JOB_RECONNECT_FAILED		904779	0		=			
ANR	904784	Identifier	eventNumber		904779	0					
ANR	904785	Identifier	ULOG_JOB_RECONNECT_FAILED		904779	1					
ANR	904786	ExpressionStatement	reason = NULL	4570:1:99541:99554	904779	1	True				
ANR	904787	AssignmentExpression	reason = NULL		904779	0		=			
ANR	904788	Identifier	reason		904779	0					
ANR	904789	Identifier	NULL		904779	1					
ANR	904790	ExpressionStatement	startd_name = NULL	4571:1:99557:99575	904779	2	True				
ANR	904791	AssignmentExpression	startd_name = NULL		904779	0		=			
ANR	904792	Identifier	startd_name		904779	0					
ANR	904793	Identifier	NULL		904779	1					
ANR	904794	Identifier	JobReconnectFailedEvent :: JobReconnectFailedEvent		904779	1					
ANR	904795	ParameterList			904779	2					
ANR	904796	CFGEntryNode	ENTRY		904779		True				
ANR	904797	CFGExitNode	EXIT		904779		True				
ANR	904798	Symbol	reason		904779						
ANR	904799	Symbol	NULL		904779						
ANR	904800	Symbol	eventNumber		904779						
ANR	904801	Symbol	startd_name		904779						
ANR	904802	Symbol	ULOG_JOB_RECONNECT_FAILED		904779						
ANR	904803	Function	JobReconnectFailedEvent :: ~JobReconnectFailedEvent	4575:0:99581:99727							
ANR	904804	FunctionDef	JobReconnectFailedEvent :: ~JobReconnectFailedEvent ()		904803	0					
ANR	904805	CompoundStatement		4576:0:99637:99727	904803	0					
ANR	904806	IfStatement	if ( reason )		904803	0					
ANR	904807	Condition	reason	4577:5:99644:99649	904803	0	True				
ANR	904808	Identifier	reason		904803	0					
ANR	904809	CompoundStatement		2:14:15:15	904803	1					
ANR	904810	Statement	delete	4578:2:99657:99662	904803	0	True				
ANR	904811	Statement	[	4578:9:99664:99664	904803	1	True				
ANR	904812	Statement	]	4578:10:99665:99665	904803	2	True				
ANR	904813	ExpressionStatement	reason	4578:12:99667:99673	904803	3	True				
ANR	904814	Identifier	reason		904803	0					
ANR	904815	IfStatement	if ( startd_name )		904803	1					
ANR	904816	Condition	startd_name	4580:5:99683:99693	904803	0	True				
ANR	904817	Identifier	startd_name		904803	0					
ANR	904818	CompoundStatement		5:19:59:59	904803	1					
ANR	904819	Statement	delete	4581:2:99701:99706	904803	0	True				
ANR	904820	Statement	[	4581:9:99708:99708	904803	1	True				
ANR	904821	Statement	]	4581:10:99709:99709	904803	2	True				
ANR	904822	ExpressionStatement	startd_name	4581:12:99711:99722	904803	3	True				
ANR	904823	Identifier	startd_name		904803	0					
ANR	904824	Identifier	JobReconnectFailedEvent :: ~JobReconnectFailedEvent		904803	1					
ANR	904825	ParameterList			904803	2					
ANR	904826	CFGEntryNode	ENTRY		904803		True				
ANR	904827	CFGExitNode	EXIT		904803		True				
ANR	904828	Symbol	reason		904803						
ANR	904829	Symbol	startd_name		904803						
ANR	904830	Function	JobReconnectFailedEvent :: setReason	4586:0:99731:99974							
ANR	904831	FunctionDef	JobReconnectFailedEvent :: setReason (const char * reason_str)		904830	0					
ANR	904832	CompoundStatement		4588:0:99797:99974	904830	0					
ANR	904833	IfStatement	if ( reason )		904830	0					
ANR	904834	Condition	reason	4589:5:99804:99809	904830	0	True				
ANR	904835	Identifier	reason		904830	0					
ANR	904836	CompoundStatement		2:14:15:15	904830	1					
ANR	904837	Statement	delete	4590:2:99817:99822	904830	0	True				
ANR	904838	Statement	[	4590:9:99824:99824	904830	1	True				
ANR	904839	Statement	]	4590:10:99825:99825	904830	2	True				
ANR	904840	ExpressionStatement	reason	4590:12:99827:99833	904830	3	True				
ANR	904841	Identifier	reason		904830	0					
ANR	904842	ExpressionStatement	reason = NULL	4591:2:99837:99850	904830	4	True				
ANR	904843	AssignmentExpression	reason = NULL		904830	0		=			
ANR	904844	Identifier	reason		904830	0					
ANR	904845	Identifier	NULL		904830	1					
ANR	904846	IfStatement	if ( reason_str )		904830	1					
ANR	904847	Condition	reason_str	4593:5:99860:99869	904830	0	True				
ANR	904848	Identifier	reason_str		904830	0					
ANR	904849	CompoundStatement		6:18:75:75	904830	1					
ANR	904850	ExpressionStatement	reason = strnewp ( reason_str )	4594:2:99877:99907	904830	0	True				
ANR	904851	AssignmentExpression	reason = strnewp ( reason_str )		904830	0		=			
ANR	904852	Identifier	reason		904830	0					
ANR	904853	CallExpression	strnewp ( reason_str )		904830	1					
ANR	904854	Callee	strnewp		904830	0					
ANR	904855	Identifier	strnewp		904830	0					
ANR	904856	ArgumentList	reason_str		904830	1					
ANR	904857	Argument	reason_str		904830	0					
ANR	904858	Identifier	reason_str		904830	0					
ANR	904859	IfStatement	if ( ! reason )		904830	1					
ANR	904860	Condition	! reason	4595:6:99915:99921	904830	0	True				
ANR	904861	UnaryOperationExpression	! reason		904830	0					
ANR	904862	UnaryOperator	!		904830	0					
ANR	904863	Identifier	reason		904830	1					
ANR	904864	CompoundStatement		8:16:127:127	904830	1					
ANR	904865	ExpressionStatement	"EXCEPT ( ""ERROR: out of memory!\\n"" )"	4596:3:99930:99965	904830	0	True				
ANR	904866	CallExpression	"EXCEPT ( ""ERROR: out of memory!\\n"" )"		904830	0					
ANR	904867	Callee	EXCEPT		904830	0					
ANR	904868	Identifier	EXCEPT		904830	0					
ANR	904869	ArgumentList	"""ERROR: out of memory!\\n"""		904830	1					
ANR	904870	Argument	"""ERROR: out of memory!\\n"""		904830	0					
ANR	904871	PrimaryExpression	"""ERROR: out of memory!\\n"""		904830	0					
ANR	904872	ReturnType	void		904830	1					
ANR	904873	Identifier	JobReconnectFailedEvent :: setReason		904830	2					
ANR	904874	ParameterList	const char * reason_str		904830	3					
ANR	904875	Parameter	const char * reason_str	4587:36:99772:99793	904830	0	True				
ANR	904876	ParameterType	const char *		904830	0					
ANR	904877	Identifier	reason_str		904830	1					
ANR	904878	CFGEntryNode	ENTRY		904830		True				
ANR	904879	CFGExitNode	EXIT		904830		True				
ANR	904880	Symbol	reason_str		904830						
ANR	904881	Symbol	reason		904830						
ANR	904882	Symbol	NULL		904830						
ANR	904883	Symbol	strnewp		904830						
ANR	904884	Function	JobReconnectFailedEvent :: setStartdName	4602:0:99978:100231							
ANR	904885	FunctionDef	JobReconnectFailedEvent :: setStartdName (const char * name)		904884	0					
ANR	904886	CompoundStatement		4604:0:100042:100231	904884	0					
ANR	904887	IfStatement	if ( startd_name )		904884	0					
ANR	904888	Condition	startd_name	4605:5:100049:100059	904884	0	True				
ANR	904889	Identifier	startd_name		904884	0					
ANR	904890	CompoundStatement		2:19:20:20	904884	1					
ANR	904891	Statement	delete	4606:2:100067:100072	904884	0	True				
ANR	904892	Statement	[	4606:8:100073:100073	904884	1	True				
ANR	904893	Statement	]	4606:9:100074:100074	904884	2	True				
ANR	904894	ExpressionStatement	startd_name	4606:11:100076:100087	904884	3	True				
ANR	904895	Identifier	startd_name		904884	0					
ANR	904896	ExpressionStatement	startd_name = NULL	4607:2:100091:100109	904884	4	True				
ANR	904897	AssignmentExpression	startd_name = NULL		904884	0		=			
ANR	904898	Identifier	startd_name		904884	0					
ANR	904899	Identifier	NULL		904884	1					
ANR	904900	IfStatement	if ( name )		904884	1					
ANR	904901	Condition	name	4609:5:100119:100122	904884	0	True				
ANR	904902	Identifier	name		904884	0					
ANR	904903	CompoundStatement		6:12:83:83	904884	1					
ANR	904904	ExpressionStatement	startd_name = strnewp ( name )	4610:2:100130:100159	904884	0	True				
ANR	904905	AssignmentExpression	startd_name = strnewp ( name )		904884	0		=			
ANR	904906	Identifier	startd_name		904884	0					
ANR	904907	CallExpression	strnewp ( name )		904884	1					
ANR	904908	Callee	strnewp		904884	0					
ANR	904909	Identifier	strnewp		904884	0					
ANR	904910	ArgumentList	name		904884	1					
ANR	904911	Argument	name		904884	0					
ANR	904912	Identifier	name		904884	0					
ANR	904913	IfStatement	if ( ! startd_name )		904884	1					
ANR	904914	Condition	! startd_name	4611:6:100167:100178	904884	0	True				
ANR	904915	UnaryOperationExpression	! startd_name		904884	0					
ANR	904916	UnaryOperator	!		904884	0					
ANR	904917	Identifier	startd_name		904884	1					
ANR	904918	CompoundStatement		8:21:139:139	904884	1					
ANR	904919	ExpressionStatement	"EXCEPT ( ""ERROR: out of memory!\\n"" )"	4612:3:100187:100222	904884	0	True				
ANR	904920	CallExpression	"EXCEPT ( ""ERROR: out of memory!\\n"" )"		904884	0					
ANR	904921	Callee	EXCEPT		904884	0					
ANR	904922	Identifier	EXCEPT		904884	0					
ANR	904923	ArgumentList	"""ERROR: out of memory!\\n"""		904884	1					
ANR	904924	Argument	"""ERROR: out of memory!\\n"""		904884	0					
ANR	904925	PrimaryExpression	"""ERROR: out of memory!\\n"""		904884	0					
ANR	904926	ReturnType	void		904884	1					
ANR	904927	Identifier	JobReconnectFailedEvent :: setStartdName		904884	2					
ANR	904928	ParameterList	const char * name		904884	3					
ANR	904929	Parameter	const char * name	4603:40:100023:100038	904884	0	True				
ANR	904930	ParameterType	const char *		904884	0					
ANR	904931	Identifier	name		904884	1					
ANR	904932	CFGEntryNode	ENTRY		904884		True				
ANR	904933	CFGExitNode	EXIT		904884		True				
ANR	904934	Symbol	NULL		904884						
ANR	904935	Symbol	startd_name		904884						
ANR	904936	Symbol	name		904884						
ANR	904937	Symbol	strnewp		904884						
ANR	904938	Function	JobReconnectFailedEvent :: writeEvent	4618:0:100235:100770							
ANR	904939	FunctionDef	JobReconnectFailedEvent :: writeEvent (FILE * file)		904938	0					
ANR	904940	CompoundStatement		4620:0:100289:100770	904938	0					
ANR	904941	IfStatement	if ( ! reason )		904938	0					
ANR	904942	Condition	! reason	4621:5:100296:100303	904938	0	True				
ANR	904943	UnaryOperationExpression	! reason		904938	0					
ANR	904944	UnaryOperator	!		904938	0					
ANR	904945	Identifier	reason		904938	1					
ANR	904946	CompoundStatement		2:16:17:17	904938	1					
ANR	904947	Statement	EXCEPT	4622:2:100311:100316	904938	0	True				
ANR	904948	Statement	(	4622:8:100317:100317	904938	1	True				
ANR	904949	Statement	"""JobReconnectFailedEvent::writeEvent() called without """	4622:10:100319:100373	904938	2	True				
ANR	904950	Statement	"""reason"""	4623:4:100379:100386	904938	3	True				
ANR	904951	Statement	)	4623:13:100388:100388	904938	4	True				
ANR	904952	ExpressionStatement		4623:14:100389:100389	904938	5	True				
ANR	904953	IfStatement	if ( ! startd_name )		904938	1					
ANR	904954	Condition	! startd_name	4625:5:100399:100411	904938	0	True				
ANR	904955	UnaryOperationExpression	! startd_name		904938	0					
ANR	904956	UnaryOperator	!		904938	0					
ANR	904957	Identifier	startd_name		904938	1					
ANR	904958	CompoundStatement		6:21:125:125	904938	1					
ANR	904959	Statement	EXCEPT	4626:2:100419:100424	904938	0	True				
ANR	904960	Statement	(	4626:8:100425:100425	904938	1	True				
ANR	904961	Statement	"""JobReconnectFailedEvent::writeEvent() called without """	4626:10:100427:100481	904938	2	True				
ANR	904962	Statement	"""startd_name"""	4627:4:100487:100499	904938	3	True				
ANR	904963	Statement	)	4627:18:100501:100501	904938	4	True				
ANR	904964	ExpressionStatement		4627:19:100502:100502	904938	5	True				
ANR	904965	IfStatement	"if ( fprintf ( file , ""Job reconnection failed\\n"" ) < 0 )"		904938	2					
ANR	904966	Condition	"fprintf ( file , ""Job reconnection failed\\n"" ) < 0"	4630:5:100513:100558	904938	0	True				
ANR	904967	RelationalExpression	"fprintf ( file , ""Job reconnection failed\\n"" ) < 0"		904938	0		<			
ANR	904968	CallExpression	"fprintf ( file , ""Job reconnection failed\\n"" )"		904938	0					
ANR	904969	Callee	fprintf		904938	0					
ANR	904970	Identifier	fprintf		904938	0					
ANR	904971	ArgumentList	file		904938	1					
ANR	904972	Argument	file		904938	0					
ANR	904973	Identifier	file		904938	0					
ANR	904974	Argument	"""Job reconnection failed\\n"""		904938	1					
ANR	904975	PrimaryExpression	"""Job reconnection failed\\n"""		904938	0					
ANR	904976	PrimaryExpression	0		904938	1					
ANR	904977	CompoundStatement		11:54:272:272	904938	1					
ANR	904978	ReturnStatement	return 0 ;	4631:2:100566:100574	904938	0	True				
ANR	904979	PrimaryExpression	0		904938	0					
ANR	904980	IfStatement	"if ( fprintf ( file , ""    %.8191s\\n"" , reason ) < 0 )"		904938	3					
ANR	904981	Condition	"fprintf ( file , ""    %.8191s\\n"" , reason ) < 0"	4633:5:100584:100625	904938	0	True				
ANR	904982	RelationalExpression	"fprintf ( file , ""    %.8191s\\n"" , reason ) < 0"		904938	0		<			
ANR	904983	CallExpression	"fprintf ( file , ""    %.8191s\\n"" , reason )"		904938	0					
ANR	904984	Callee	fprintf		904938	0					
ANR	904985	Identifier	fprintf		904938	0					
ANR	904986	ArgumentList	file		904938	1					
ANR	904987	Argument	file		904938	0					
ANR	904988	Identifier	file		904938	0					
ANR	904989	Argument	"""    %.8191s\\n"""		904938	1					
ANR	904990	PrimaryExpression	"""    %.8191s\\n"""		904938	0					
ANR	904991	Argument	reason		904938	2					
ANR	904992	Identifier	reason		904938	0					
ANR	904993	PrimaryExpression	0		904938	1					
ANR	904994	CompoundStatement		14:50:339:339	904938	1					
ANR	904995	ReturnStatement	return 0 ;	4634:2:100633:100641	904938	0	True				
ANR	904996	PrimaryExpression	0		904938	0					
ANR	904997	IfStatement	"if ( fprintf ( file , ""    Can not reconnect to %s, rescheduling job\\n"" , startd_name ) < 0 )"		904938	4					
ANR	904998	Condition	"fprintf ( file , ""    Can not reconnect to %s, rescheduling job\\n"" , startd_name ) < 0"	4636:5:100651:100735	904938	0	True				
ANR	904999	RelationalExpression	"fprintf ( file , ""    Can not reconnect to %s, rescheduling job\\n"" , startd_name ) < 0"		904938	0		<			
ANR	905000	CallExpression	"fprintf ( file , ""    Can not reconnect to %s, rescheduling job\\n"" , startd_name )"		904938	0					
ANR	905001	Callee	fprintf		904938	0					
ANR	905002	Identifier	fprintf		904938	0					
ANR	905003	ArgumentList	file		904938	1					
ANR	905004	Argument	file		904938	0					
ANR	905005	Identifier	file		904938	0					
ANR	905006	Argument	"""    Can not reconnect to %s, rescheduling job\\n"""		904938	1					
ANR	905007	PrimaryExpression	"""    Can not reconnect to %s, rescheduling job\\n"""		904938	0					
ANR	905008	Argument	startd_name		904938	2					
ANR	905009	Identifier	startd_name		904938	0					
ANR	905010	PrimaryExpression	0		904938	1					
ANR	905011	CompoundStatement		18:23:449:449	904938	1					
ANR	905012	ReturnStatement	return 0 ;	4638:2:100743:100751	904938	0	True				
ANR	905013	PrimaryExpression	0		904938	0					
ANR	905014	ReturnStatement	return ( 1 ) ;	4640:1:100757:100768	904938	5	True				
ANR	905015	PrimaryExpression	1		904938	0					
ANR	905016	ReturnType	int		904938	1					
ANR	905017	Identifier	JobReconnectFailedEvent :: writeEvent		904938	2					
ANR	905018	ParameterList	FILE * file		904938	3					
ANR	905019	Parameter	FILE * file	4619:37:100276:100285	904938	0	True				
ANR	905020	ParameterType	FILE *		904938	0					
ANR	905021	Identifier	file		904938	1					
ANR	905022	CFGEntryNode	ENTRY		904938		True				
ANR	905023	CFGExitNode	EXIT		904938		True				
ANR	905024	Symbol	reason		904938						
ANR	905025	Symbol	file		904938						
ANR	905026	Symbol	startd_name		904938						
ANR	905027	Symbol	fprintf		904938						
ANR	905028	Function	JobReconnectFailedEvent :: readEvent	4644:0:100774:101586							
ANR	905029	FunctionDef	JobReconnectFailedEvent :: readEvent (FILE * file)		905028	0					
ANR	905030	CompoundStatement		4646:0:100827:101586	905028	0					
ANR	905031	IdentifierDeclStatement	MyString line ;	4647:1:100830:100843	905028	0	True				
ANR	905032	IdentifierDecl	line		905028	0					
ANR	905033	IdentifierDeclType	MyString		905028	0					
ANR	905034	Identifier	line		905028	1					
ANR	905035	IfStatement	if ( ! line . readLine ( file ) )		905028	1					
ANR	905036	Condition	! line . readLine ( file )	4651:5:100966:100986	905028	0	True				
ANR	905037	UnaryOperationExpression	! line . readLine ( file )		905028	0					
ANR	905038	UnaryOperator	!		905028	0					
ANR	905039	CallExpression	line . readLine ( file )		905028	1					
ANR	905040	Callee	line . readLine		905028	0					
ANR	905041	MemberAccess	line . readLine		905028	0					
ANR	905042	Identifier	line		905028	0					
ANR	905043	Identifier	readLine		905028	1					
ANR	905044	ArgumentList	file		905028	1					
ANR	905045	Argument	file		905028	0					
ANR	905046	Identifier	file		905028	0					
ANR	905047	CompoundStatement		6:29:162:162	905028	1					
ANR	905048	ReturnStatement	return 0 ;	4652:2:100994:101002	905028	0	True				
ANR	905049	PrimaryExpression	0		905028	0					
ANR	905050	IfStatement	if ( line . readLine ( file ) && line [ 0 ] == ' ' && line [ 1 ] == ' ' && line [ 2 ] == ' ' && line [ 3 ] == ' ' && line [ 4 ] )		905028	2					
ANR	905051	Condition	line . readLine ( file ) && line [ 0 ] == ' ' && line [ 1 ] == ' ' && line [ 2 ] == ' ' && line [ 3 ] == ' ' && line [ 4 ]	4656:5:101041:101144	905028	0	True				
ANR	905052	AndExpression	line . readLine ( file ) && line [ 0 ] == ' ' && line [ 1 ] == ' ' && line [ 2 ] == ' ' && line [ 3 ] == ' ' && line [ 4 ]		905028	0		&&			
ANR	905053	CallExpression	line . readLine ( file )		905028	0					
ANR	905054	Callee	line . readLine		905028	0					
ANR	905055	MemberAccess	line . readLine		905028	0					
ANR	905056	Identifier	line		905028	0					
ANR	905057	Identifier	readLine		905028	1					
ANR	905058	ArgumentList	file		905028	1					
ANR	905059	Argument	file		905028	0					
ANR	905060	Identifier	file		905028	0					
ANR	905061	AndExpression	line [ 0 ] == ' ' && line [ 1 ] == ' ' && line [ 2 ] == ' ' && line [ 3 ] == ' ' && line [ 4 ]		905028	1		&&			
ANR	905062	EqualityExpression	line [ 0 ] == ' '		905028	0		==			
ANR	905063	ArrayIndexing	line [ 0 ]		905028	0					
ANR	905064	Identifier	line		905028	0					
ANR	905065	PrimaryExpression	0		905028	1					
ANR	905066	PrimaryExpression	' '		905028	1					
ANR	905067	AndExpression	line [ 1 ] == ' ' && line [ 2 ] == ' ' && line [ 3 ] == ' ' && line [ 4 ]		905028	1		&&			
ANR	905068	EqualityExpression	line [ 1 ] == ' '		905028	0		==			
ANR	905069	ArrayIndexing	line [ 1 ]		905028	0					
ANR	905070	Identifier	line		905028	0					
ANR	905071	PrimaryExpression	1		905028	1					
ANR	905072	PrimaryExpression	' '		905028	1					
ANR	905073	AndExpression	line [ 2 ] == ' ' && line [ 3 ] == ' ' && line [ 4 ]		905028	1		&&			
ANR	905074	EqualityExpression	line [ 2 ] == ' '		905028	0		==			
ANR	905075	ArrayIndexing	line [ 2 ]		905028	0					
ANR	905076	Identifier	line		905028	0					
ANR	905077	PrimaryExpression	2		905028	1					
ANR	905078	PrimaryExpression	' '		905028	1					
ANR	905079	AndExpression	line [ 3 ] == ' ' && line [ 4 ]		905028	1		&&			
ANR	905080	EqualityExpression	line [ 3 ] == ' '		905028	0		==			
ANR	905081	ArrayIndexing	line [ 3 ]		905028	0					
ANR	905082	Identifier	line		905028	0					
ANR	905083	PrimaryExpression	3		905028	1					
ANR	905084	PrimaryExpression	' '		905028	1					
ANR	905085	ArrayIndexing	line [ 4 ]		905028	1					
ANR	905086	Identifier	line		905028	0					
ANR	905087	PrimaryExpression	4		905028	1					
ANR	905088	CompoundStatement		13:1:321:321	905028	1					
ANR	905089	ExpressionStatement	line . chomp ( )	4659:2:101153:101165	905028	0	True				
ANR	905090	CallExpression	line . chomp ( )		905028	0					
ANR	905091	Callee	line . chomp		905028	0					
ANR	905092	MemberAccess	line . chomp		905028	0					
ANR	905093	Identifier	line		905028	0					
ANR	905094	Identifier	chomp		905028	1					
ANR	905095	ArgumentList			905028	1					
ANR	905096	ExpressionStatement	setReason ( & line [ 4 ] )	4660:2:101169:101190	905028	1	True				
ANR	905097	CallExpression	setReason ( & line [ 4 ] )		905028	0					
ANR	905098	Callee	setReason		905028	0					
ANR	905099	Identifier	setReason		905028	0					
ANR	905100	ArgumentList	& line [ 4 ]		905028	1					
ANR	905101	Argument	& line [ 4 ]		905028	0					
ANR	905102	UnaryOperationExpression	& line [ 4 ]		905028	0					
ANR	905103	UnaryOperator	&		905028	0					
ANR	905104	ArrayIndexing	line [ 4 ]		905028	1					
ANR	905105	Identifier	line		905028	0					
ANR	905106	PrimaryExpression	4		905028	1					
ANR	905107	ElseStatement	else		905028	0					
ANR	905108	CompoundStatement		16:8:372:372	905028	0					
ANR	905109	ReturnStatement	return 0 ;	4662:2:101204:101212	905028	0	True				
ANR	905110	PrimaryExpression	0		905028	0					
ANR	905111	IfStatement	"if ( line . readLine ( file ) && line . replaceString ( ""    Can not reconnect to "" , """" ) )"		905028	3					
ANR	905112	Condition	"line . readLine ( file ) && line . replaceString ( ""    Can not reconnect to "" , """" )"	4666:5:101269:101346	905028	0	True				
ANR	905113	AndExpression	"line . readLine ( file ) && line . replaceString ( ""    Can not reconnect to "" , """" )"		905028	0		&&			
ANR	905114	CallExpression	line . readLine ( file )		905028	0					
ANR	905115	Callee	line . readLine		905028	0					
ANR	905116	MemberAccess	line . readLine		905028	0					
ANR	905117	Identifier	line		905028	0					
ANR	905118	Identifier	readLine		905028	1					
ANR	905119	ArgumentList	file		905028	1					
ANR	905120	Argument	file		905028	0					
ANR	905121	Identifier	file		905028	0					
ANR	905122	CallExpression	"line . replaceString ( ""    Can not reconnect to "" , """" )"		905028	1					
ANR	905123	Callee	line . replaceString		905028	0					
ANR	905124	MemberAccess	line . replaceString		905028	0					
ANR	905125	Identifier	line		905028	0					
ANR	905126	Identifier	replaceString		905028	1					
ANR	905127	ArgumentList	"""    Can not reconnect to """		905028	1					
ANR	905128	Argument	"""    Can not reconnect to """		905028	0					
ANR	905129	PrimaryExpression	"""    Can not reconnect to """		905028	0					
ANR	905130	Argument	""""""		905028	1					
ANR	905131	PrimaryExpression	""""""		905028	0					
ANR	905132	CompoundStatement		25:2:585:613	905028	1					
ANR	905133	IdentifierDeclStatement	"int i = line . FindChar ( ',' ) ;"	4670:2:101413:101441	905028	0	True				
ANR	905134	IdentifierDecl	"i = line . FindChar ( ',' )"		905028	0					
ANR	905135	IdentifierDeclType	int		905028	0					
ANR	905136	Identifier	i		905028	1					
ANR	905137	AssignmentExpression	"i = line . FindChar ( ',' )"		905028	2		=			
ANR	905138	Identifier	i		905028	0					
ANR	905139	CallExpression	"line . FindChar ( ',' )"		905028	1					
ANR	905140	Callee	line . FindChar		905028	0					
ANR	905141	MemberAccess	line . FindChar		905028	0					
ANR	905142	Identifier	line		905028	0					
ANR	905143	Identifier	FindChar		905028	1					
ANR	905144	ArgumentList	"','"		905028	1					
ANR	905145	Argument	"','"		905028	0					
ANR	905146	PrimaryExpression	"','"		905028	0					
ANR	905147	IfStatement	if ( i > 0 )		905028	1					
ANR	905148	Condition	i > 0	4671:6:101449:101453	905028	0	True				
ANR	905149	RelationalExpression	i > 0		905028	0		>			
ANR	905150	Identifier	i		905028	0					
ANR	905151	PrimaryExpression	0		905028	1					
ANR	905152	CompoundStatement		26:14:629:629	905028	1					
ANR	905153	ExpressionStatement	"line . setChar ( i , '\\0' )"	4672:3:101462:101485	905028	0	True				
ANR	905154	CallExpression	"line . setChar ( i , '\\0' )"		905028	0					
ANR	905155	Callee	line . setChar		905028	0					
ANR	905156	MemberAccess	line . setChar		905028	0					
ANR	905157	Identifier	line		905028	0					
ANR	905158	Identifier	setChar		905028	1					
ANR	905159	ArgumentList	i		905028	1					
ANR	905160	Argument	i		905028	0					
ANR	905161	Identifier	i		905028	0					
ANR	905162	Argument	'\\0'		905028	1					
ANR	905163	PrimaryExpression	'\\0'		905028	0					
ANR	905164	ExpressionStatement	setStartdName ( line . Value ( ) )	4673:3:101490:101519	905028	1	True				
ANR	905165	CallExpression	setStartdName ( line . Value ( ) )		905028	0					
ANR	905166	Callee	setStartdName		905028	0					
ANR	905167	Identifier	setStartdName		905028	0					
ANR	905168	ArgumentList	line . Value ( )		905028	1					
ANR	905169	Argument	line . Value ( )		905028	0					
ANR	905170	CallExpression	line . Value ( )		905028	0					
ANR	905171	Callee	line . Value		905028	0					
ANR	905172	MemberAccess	line . Value		905028	0					
ANR	905173	Identifier	line		905028	0					
ANR	905174	Identifier	Value		905028	1					
ANR	905175	ArgumentList			905028	1					
ANR	905176	ElseStatement	else		905028	0					
ANR	905177	CompoundStatement		29:9:702:702	905028	0					
ANR	905178	ReturnStatement	return 0 ;	4675:3:101535:101543	905028	0	True				
ANR	905179	PrimaryExpression	0		905028	0					
ANR	905180	ElseStatement	else		905028	0					
ANR	905181	CompoundStatement		32:8:729:729	905028	0					
ANR	905182	ReturnStatement	return 0 ;	4678:2:101561:101569	905028	0	True				
ANR	905183	PrimaryExpression	0		905028	0					
ANR	905184	ReturnStatement	return 1 ;	4681:1:101576:101584	905028	4	True				
ANR	905185	PrimaryExpression	1		905028	0					
ANR	905186	ReturnType	int		905028	1					
ANR	905187	Identifier	JobReconnectFailedEvent :: readEvent		905028	2					
ANR	905188	ParameterList	FILE * file		905028	3					
ANR	905189	Parameter	FILE * file	4645:36:100814:100823	905028	0	True				
ANR	905190	ParameterType	FILE *		905028	0					
ANR	905191	Identifier	file		905028	1					
ANR	905192	CFGEntryNode	ENTRY		905028		True				
ANR	905193	CFGExitNode	EXIT		905028		True				
ANR	905194	Symbol	line . readLine		905028						
ANR	905195	Symbol	file		905028						
ANR	905196	Symbol	line . FindChar		905028						
ANR	905197	Symbol	line . Value		905028						
ANR	905198	Symbol	line		905028						
ANR	905199	Symbol	i		905028						
ANR	905200	Symbol	* line		905028						
ANR	905201	Symbol	line . replaceString		905028						
ANR	905202	Function	JobReconnectFailedEvent :: toClassAd	4685:0:101590:102301							
ANR	905203	FunctionDef	JobReconnectFailedEvent :: toClassAd ()		905202	0					
ANR	905204	CompoundStatement		4687:0:101642:102301	905202	0					
ANR	905205	IfStatement	if ( ! reason )		905202	0					
ANR	905206	Condition	! reason	4688:5:101649:101656	905202	0	True				
ANR	905207	UnaryOperationExpression	! reason		905202	0					
ANR	905208	UnaryOperator	!		905202	0					
ANR	905209	Identifier	reason		905202	1					
ANR	905210	CompoundStatement		2:16:17:17	905202	1					
ANR	905211	Statement	EXCEPT	4689:2:101664:101669	905202	0	True				
ANR	905212	Statement	(	4689:8:101670:101670	905202	1	True				
ANR	905213	Statement	"""JobReconnectFailedEvent::toClassAd() called without """	4689:10:101672:101725	905202	2	True				
ANR	905214	Statement	"""reason"""	4690:4:101731:101738	905202	3	True				
ANR	905215	Statement	)	4690:13:101740:101740	905202	4	True				
ANR	905216	ExpressionStatement		4690:14:101741:101741	905202	5	True				
ANR	905217	IfStatement	if ( ! startd_name )		905202	1					
ANR	905218	Condition	! startd_name	4692:5:101751:101763	905202	0	True				
ANR	905219	UnaryOperationExpression	! startd_name		905202	0					
ANR	905220	UnaryOperator	!		905202	0					
ANR	905221	Identifier	startd_name		905202	1					
ANR	905222	CompoundStatement		6:21:124:124	905202	1					
ANR	905223	Statement	EXCEPT	4693:2:101771:101776	905202	0	True				
ANR	905224	Statement	(	4693:8:101777:101777	905202	1	True				
ANR	905225	Statement	"""JobReconnectFailedEvent::toClassAd() called without """	4693:10:101779:101832	905202	2	True				
ANR	905226	Statement	"""startd_name"""	4694:4:101838:101850	905202	3	True				
ANR	905227	Statement	)	4694:18:101852:101852	905202	4	True				
ANR	905228	ExpressionStatement		4694:19:101853:101853	905202	5	True				
ANR	905229	IdentifierDeclStatement	ClassAd * myad = ULogEvent :: toClassAd ( ) ;	4697:1:101860:101898	905202	2	True				
ANR	905230	IdentifierDecl	* myad = ULogEvent :: toClassAd ( )		905202	0					
ANR	905231	IdentifierDeclType	ClassAd *		905202	0					
ANR	905232	Identifier	myad		905202	1					
ANR	905233	AssignmentExpression	* myad = ULogEvent :: toClassAd ( )		905202	2		=			
ANR	905234	Identifier	myad		905202	0					
ANR	905235	CallExpression	ULogEvent :: toClassAd ( )		905202	1					
ANR	905236	Callee	ULogEvent :: toClassAd		905202	0					
ANR	905237	Identifier	ULogEvent :: toClassAd		905202	0					
ANR	905238	ArgumentList			905202	1					
ANR	905239	IfStatement	if ( ! myad )		905202	3					
ANR	905240	Condition	! myad	4698:5:101905:101909	905202	0	True				
ANR	905241	UnaryOperationExpression	! myad		905202	0					
ANR	905242	UnaryOperator	!		905202	0					
ANR	905243	Identifier	myad		905202	1					
ANR	905244	CompoundStatement		12:13:270:270	905202	1					
ANR	905245	ReturnStatement	return NULL ;	4699:2:101917:101928	905202	0	True				
ANR	905246	Identifier	NULL		905202	0					
ANR	905247	IdentifierDeclStatement	MyString line ;	4702:1:101935:101948	905202	4	True				
ANR	905248	IdentifierDecl	line		905202	0					
ANR	905249	IdentifierDeclType	MyString		905202	0					
ANR	905250	Identifier	line		905202	1					
ANR	905251	ExpressionStatement	"line . sprintf ( ""StartdName = \\""%s\\"""" , startd_name )"	4703:1:101951:102001	905202	5	True				
ANR	905252	CallExpression	"line . sprintf ( ""StartdName = \\""%s\\"""" , startd_name )"		905202	0					
ANR	905253	Callee	line . sprintf		905202	0					
ANR	905254	MemberAccess	line . sprintf		905202	0					
ANR	905255	Identifier	line		905202	0					
ANR	905256	Identifier	sprintf		905202	1					
ANR	905257	ArgumentList	"""StartdName = \\""%s\\"""""		905202	1					
ANR	905258	Argument	"""StartdName = \\""%s\\"""""		905202	0					
ANR	905259	PrimaryExpression	"""StartdName = \\""%s\\"""""		905202	0					
ANR	905260	Argument	startd_name		905202	1					
ANR	905261	Identifier	startd_name		905202	0					
ANR	905262	IfStatement	if ( ! myad -> Insert ( line . Value ( ) ) )		905202	6					
ANR	905263	Condition	! myad -> Insert ( line . Value ( ) )	4704:5:102008:102034	905202	0	True				
ANR	905264	UnaryOperationExpression	! myad -> Insert ( line . Value ( ) )		905202	0					
ANR	905265	UnaryOperator	!		905202	0					
ANR	905266	CallExpression	myad -> Insert ( line . Value ( ) )		905202	1					
ANR	905267	Callee	myad -> Insert		905202	0					
ANR	905268	PtrMemberAccess	myad -> Insert		905202	0					
ANR	905269	Identifier	myad		905202	0					
ANR	905270	Identifier	Insert		905202	1					
ANR	905271	ArgumentList	line . Value ( )		905202	1					
ANR	905272	Argument	line . Value ( )		905202	0					
ANR	905273	CallExpression	line . Value ( )		905202	0					
ANR	905274	Callee	line . Value		905202	0					
ANR	905275	MemberAccess	line . Value		905202	0					
ANR	905276	Identifier	line		905202	0					
ANR	905277	Identifier	Value		905202	1					
ANR	905278	ArgumentList			905202	1					
ANR	905279	CompoundStatement		18:35:395:395	905202	1					
ANR	905280	ReturnStatement	return NULL ;	4705:2:102042:102053	905202	0	True				
ANR	905281	Identifier	NULL		905202	0					
ANR	905282	ExpressionStatement	"line . sprintf ( ""Reason = \\""%s\\"""" , reason )"	4707:1:102059:102100	905202	7	True				
ANR	905283	CallExpression	"line . sprintf ( ""Reason = \\""%s\\"""" , reason )"		905202	0					
ANR	905284	Callee	line . sprintf		905202	0					
ANR	905285	MemberAccess	line . sprintf		905202	0					
ANR	905286	Identifier	line		905202	0					
ANR	905287	Identifier	sprintf		905202	1					
ANR	905288	ArgumentList	"""Reason = \\""%s\\"""""		905202	1					
ANR	905289	Argument	"""Reason = \\""%s\\"""""		905202	0					
ANR	905290	PrimaryExpression	"""Reason = \\""%s\\"""""		905202	0					
ANR	905291	Argument	reason		905202	1					
ANR	905292	Identifier	reason		905202	0					
ANR	905293	IfStatement	if ( ! myad -> Insert ( line . Value ( ) ) )		905202	8					
ANR	905294	Condition	! myad -> Insert ( line . Value ( ) )	4708:5:102107:102133	905202	0	True				
ANR	905295	UnaryOperationExpression	! myad -> Insert ( line . Value ( ) )		905202	0					
ANR	905296	UnaryOperator	!		905202	0					
ANR	905297	CallExpression	myad -> Insert ( line . Value ( ) )		905202	1					
ANR	905298	Callee	myad -> Insert		905202	0					
ANR	905299	PtrMemberAccess	myad -> Insert		905202	0					
ANR	905300	Identifier	myad		905202	0					
ANR	905301	Identifier	Insert		905202	1					
ANR	905302	ArgumentList	line . Value ( )		905202	1					
ANR	905303	Argument	line . Value ( )		905202	0					
ANR	905304	CallExpression	line . Value ( )		905202	0					
ANR	905305	Callee	line . Value		905202	0					
ANR	905306	MemberAccess	line . Value		905202	0					
ANR	905307	Identifier	line		905202	0					
ANR	905308	Identifier	Value		905202	1					
ANR	905309	ArgumentList			905202	1					
ANR	905310	CompoundStatement		22:35:494:494	905202	1					
ANR	905311	ReturnStatement	return NULL ;	4709:2:102141:102152	905202	0	True				
ANR	905312	Identifier	NULL		905202	0					
ANR	905313	ExpressionStatement	"line = ""EventDescription=\\""Job reconnect impossible: rescheduling job\\"""""	4711:1:102158:102230	905202	9	True				
ANR	905314	AssignmentExpression	"line = ""EventDescription=\\""Job reconnect impossible: rescheduling job\\"""""		905202	0		=			
ANR	905315	Identifier	line		905202	0					
ANR	905316	PrimaryExpression	"""EventDescription=\\""Job reconnect impossible: rescheduling job\\"""""		905202	1					
ANR	905317	IfStatement	if ( ! myad -> Insert ( line . Value ( ) ) )		905202	10					
ANR	905318	Condition	! myad -> Insert ( line . Value ( ) )	4712:5:102237:102263	905202	0	True				
ANR	905319	UnaryOperationExpression	! myad -> Insert ( line . Value ( ) )		905202	0					
ANR	905320	UnaryOperator	!		905202	0					
ANR	905321	CallExpression	myad -> Insert ( line . Value ( ) )		905202	1					
ANR	905322	Callee	myad -> Insert		905202	0					
ANR	905323	PtrMemberAccess	myad -> Insert		905202	0					
ANR	905324	Identifier	myad		905202	0					
ANR	905325	Identifier	Insert		905202	1					
ANR	905326	ArgumentList	line . Value ( )		905202	1					
ANR	905327	Argument	line . Value ( )		905202	0					
ANR	905328	CallExpression	line . Value ( )		905202	0					
ANR	905329	Callee	line . Value		905202	0					
ANR	905330	MemberAccess	line . Value		905202	0					
ANR	905331	Identifier	line		905202	0					
ANR	905332	Identifier	Value		905202	1					
ANR	905333	ArgumentList			905202	1					
ANR	905334	CompoundStatement		26:35:624:624	905202	1					
ANR	905335	ReturnStatement	return NULL ;	4713:2:102271:102282	905202	0	True				
ANR	905336	Identifier	NULL		905202	0					
ANR	905337	ReturnStatement	return myad ;	4715:1:102288:102299	905202	11	True				
ANR	905338	Identifier	myad		905202	0					
ANR	905339	ReturnType	ClassAd *		905202	1					
ANR	905340	Identifier	JobReconnectFailedEvent :: toClassAd		905202	2					
ANR	905341	ParameterList			905202	3					
ANR	905342	CFGEntryNode	ENTRY		905202		True				
ANR	905343	CFGExitNode	EXIT		905202		True				
ANR	905344	Symbol	reason		905202						
ANR	905345	Symbol	NULL		905202						
ANR	905346	Symbol	* myad		905202						
ANR	905347	Symbol	startd_name		905202						
ANR	905348	Symbol	line . Value		905202						
ANR	905349	Symbol	line		905202						
ANR	905350	Symbol	myad -> Insert		905202						
ANR	905351	Symbol	myad		905202						
ANR	905352	Symbol	ULogEvent :: toClassAd		905202						
ANR	905353	Function	JobReconnectFailedEvent :: initFromClassAd	4719:0:102305:102908							
ANR	905354	FunctionDef	JobReconnectFailedEvent :: initFromClassAd (ClassAd * ad)		905353	0					
ANR	905355	CompoundStatement		4721:0:102366:102908	905353	0					
ANR	905356	ExpressionStatement	ULogEvent :: initFromClassAd ( ad )	4722:1:102369:102399	905353	0	True				
ANR	905357	CallExpression	ULogEvent :: initFromClassAd ( ad )		905353	0					
ANR	905358	Callee	ULogEvent :: initFromClassAd		905353	0					
ANR	905359	Identifier	ULogEvent :: initFromClassAd		905353	0					
ANR	905360	ArgumentList	ad		905353	1					
ANR	905361	Argument	ad		905353	0					
ANR	905362	Identifier	ad		905353	0					
ANR	905363	IfStatement	if ( ! ad )		905353	1					
ANR	905364	Condition	! ad	4723:5:102406:102408	905353	0	True				
ANR	905365	UnaryOperationExpression	! ad		905353	0					
ANR	905366	UnaryOperator	!		905353	0					
ANR	905367	Identifier	ad		905353	1					
ANR	905368	CompoundStatement		3:11:45:45	905353	1					
ANR	905369	ReturnStatement	return ;	4724:2:102416:102422	905353	0	True				
ANR	905370	IdentifierDeclStatement	char * mallocstr = NULL ;	4728:1:102502:102524	905353	2	True				
ANR	905371	IdentifierDecl	* mallocstr = NULL		905353	0					
ANR	905372	IdentifierDeclType	char *		905353	0					
ANR	905373	Identifier	mallocstr		905353	1					
ANR	905374	AssignmentExpression	* mallocstr = NULL		905353	2		=			
ANR	905375	Identifier	NULL		905353	0					
ANR	905376	Identifier	NULL		905353	1					
ANR	905377	ExpressionStatement	"ad -> LookupString ( ""Reason"" , & mallocstr )"	4729:1:102527:102567	905353	3	True				
ANR	905378	CallExpression	"ad -> LookupString ( ""Reason"" , & mallocstr )"		905353	0					
ANR	905379	Callee	ad -> LookupString		905353	0					
ANR	905380	PtrMemberAccess	ad -> LookupString		905353	0					
ANR	905381	Identifier	ad		905353	0					
ANR	905382	Identifier	LookupString		905353	1					
ANR	905383	ArgumentList	"""Reason"""		905353	1					
ANR	905384	Argument	"""Reason"""		905353	0					
ANR	905385	PrimaryExpression	"""Reason"""		905353	0					
ANR	905386	Argument	& mallocstr		905353	1					
ANR	905387	UnaryOperationExpression	& mallocstr		905353	0					
ANR	905388	UnaryOperator	&		905353	0					
ANR	905389	Identifier	mallocstr		905353	1					
ANR	905390	IfStatement	if ( mallocstr )		905353	4					
ANR	905391	Condition	mallocstr	4730:5:102574:102582	905353	0	True				
ANR	905392	Identifier	mallocstr		905353	0					
ANR	905393	CompoundStatement		10:17:219:219	905353	1					
ANR	905394	IfStatement	if ( reason )		905353	0					
ANR	905395	Condition	reason	4731:6:102594:102599	905353	0	True				
ANR	905396	Identifier	reason		905353	0					
ANR	905397	CompoundStatement		11:15:236:236	905353	1					
ANR	905398	Statement	delete	4732:3:102608:102613	905353	0	True				
ANR	905399	Statement	[	4732:10:102615:102615	905353	1	True				
ANR	905400	Statement	]	4732:11:102616:102616	905353	2	True				
ANR	905401	ExpressionStatement	reason	4732:13:102618:102624	905353	3	True				
ANR	905402	Identifier	reason		905353	0					
ANR	905403	ExpressionStatement	reason = strnewp ( mallocstr )	4734:2:102632:102661	905353	1	True				
ANR	905404	AssignmentExpression	reason = strnewp ( mallocstr )		905353	0		=			
ANR	905405	Identifier	reason		905353	0					
ANR	905406	CallExpression	strnewp ( mallocstr )		905353	1					
ANR	905407	Callee	strnewp		905353	0					
ANR	905408	Identifier	strnewp		905353	0					
ANR	905409	ArgumentList	mallocstr		905353	1					
ANR	905410	Argument	mallocstr		905353	0					
ANR	905411	Identifier	mallocstr		905353	0					
ANR	905412	ExpressionStatement	free ( mallocstr )	4735:2:102665:102682	905353	2	True				
ANR	905413	CallExpression	free ( mallocstr )		905353	0					
ANR	905414	Callee	free		905353	0					
ANR	905415	Identifier	free		905353	0					
ANR	905416	ArgumentList	mallocstr		905353	1					
ANR	905417	Argument	mallocstr		905353	0					
ANR	905418	Identifier	mallocstr		905353	0					
ANR	905419	ExpressionStatement	mallocstr = NULL	4736:2:102686:102702	905353	3	True				
ANR	905420	AssignmentExpression	mallocstr = NULL		905353	0		=			
ANR	905421	Identifier	mallocstr		905353	0					
ANR	905422	Identifier	NULL		905353	1					
ANR	905423	ExpressionStatement	"ad -> LookupString ( ""StartdName"" , & mallocstr )"	4739:1:102709:102753	905353	5	True				
ANR	905424	CallExpression	"ad -> LookupString ( ""StartdName"" , & mallocstr )"		905353	0					
ANR	905425	Callee	ad -> LookupString		905353	0					
ANR	905426	PtrMemberAccess	ad -> LookupString		905353	0					
ANR	905427	Identifier	ad		905353	0					
ANR	905428	Identifier	LookupString		905353	1					
ANR	905429	ArgumentList	"""StartdName"""		905353	1					
ANR	905430	Argument	"""StartdName"""		905353	0					
ANR	905431	PrimaryExpression	"""StartdName"""		905353	0					
ANR	905432	Argument	& mallocstr		905353	1					
ANR	905433	UnaryOperationExpression	& mallocstr		905353	0					
ANR	905434	UnaryOperator	&		905353	0					
ANR	905435	Identifier	mallocstr		905353	1					
ANR	905436	IfStatement	if ( mallocstr )		905353	6					
ANR	905437	Condition	mallocstr	4740:5:102760:102768	905353	0	True				
ANR	905438	Identifier	mallocstr		905353	0					
ANR	905439	CompoundStatement		20:17:405:405	905353	1					
ANR	905440	IfStatement	if ( startd_name )		905353	0					
ANR	905441	Condition	startd_name	4741:6:102780:102790	905353	0	True				
ANR	905442	Identifier	startd_name		905353	0					
ANR	905443	CompoundStatement		21:20:427:427	905353	1					
ANR	905444	Statement	delete	4742:3:102799:102804	905353	0	True				
ANR	905445	Statement	[	4742:10:102806:102806	905353	1	True				
ANR	905446	Statement	]	4742:11:102807:102807	905353	2	True				
ANR	905447	ExpressionStatement	startd_name	4742:13:102809:102820	905353	3	True				
ANR	905448	Identifier	startd_name		905353	0					
ANR	905449	ExpressionStatement	startd_name = strnewp ( mallocstr )	4744:2:102828:102862	905353	1	True				
ANR	905450	AssignmentExpression	startd_name = strnewp ( mallocstr )		905353	0		=			
ANR	905451	Identifier	startd_name		905353	0					
ANR	905452	CallExpression	strnewp ( mallocstr )		905353	1					
ANR	905453	Callee	strnewp		905353	0					
ANR	905454	Identifier	strnewp		905353	0					
ANR	905455	ArgumentList	mallocstr		905353	1					
ANR	905456	Argument	mallocstr		905353	0					
ANR	905457	Identifier	mallocstr		905353	0					
ANR	905458	ExpressionStatement	free ( mallocstr )	4745:2:102866:102883	905353	2	True				
ANR	905459	CallExpression	free ( mallocstr )		905353	0					
ANR	905460	Callee	free		905353	0					
ANR	905461	Identifier	free		905353	0					
ANR	905462	ArgumentList	mallocstr		905353	1					
ANR	905463	Argument	mallocstr		905353	0					
ANR	905464	Identifier	mallocstr		905353	0					
ANR	905465	ExpressionStatement	mallocstr = NULL	4746:2:102887:102903	905353	3	True				
ANR	905466	AssignmentExpression	mallocstr = NULL		905353	0		=			
ANR	905467	Identifier	mallocstr		905353	0					
ANR	905468	Identifier	NULL		905353	1					
ANR	905469	ReturnType	void		905353	1					
ANR	905470	Identifier	JobReconnectFailedEvent :: initFromClassAd		905353	2					
ANR	905471	ParameterList	ClassAd * ad		905353	3					
ANR	905472	Parameter	ClassAd * ad	4720:42:102352:102362	905353	0	True				
ANR	905473	ParameterType	ClassAd *		905353	0					
ANR	905474	Identifier	ad		905353	1					
ANR	905475	CFGEntryNode	ENTRY		905353		True				
ANR	905476	CFGExitNode	EXIT		905353		True				
ANR	905477	Symbol	reason		905353						
ANR	905478	Symbol	& mallocstr		905353						
ANR	905479	Symbol	ad		905353						
ANR	905480	Symbol	NULL		905353						
ANR	905481	Symbol	mallocstr		905353						
ANR	905482	Symbol	startd_name		905353						
ANR	905483	Symbol	strnewp		905353						
ANR	905484	Function	GridResourceUpEvent :: GridResourceUpEvent	4752:0:102946:103055							
ANR	905485	FunctionDef	GridResourceUpEvent :: GridResourceUpEvent ()		905484	0					
ANR	905486	CompoundStatement		4753:0:102993:103055	905484	0					
ANR	905487	ExpressionStatement	eventNumber = ULOG_GRID_RESOURCE_UP	4754:1:102996:103031	905484	0	True				
ANR	905488	AssignmentExpression	eventNumber = ULOG_GRID_RESOURCE_UP		905484	0		=			
ANR	905489	Identifier	eventNumber		905484	0					
ANR	905490	Identifier	ULOG_GRID_RESOURCE_UP		905484	1					
ANR	905491	ExpressionStatement	resourceName = NULL	4755:1:103034:103053	905484	1	True				
ANR	905492	AssignmentExpression	resourceName = NULL		905484	0		=			
ANR	905493	Identifier	resourceName		905484	0					
ANR	905494	Identifier	NULL		905484	1					
ANR	905495	Identifier	GridResourceUpEvent :: GridResourceUpEvent		905484	1					
ANR	905496	ParameterList			905484	2					
ANR	905497	CFGEntryNode	ENTRY		905484		True				
ANR	905498	CFGExitNode	EXIT		905484		True				
ANR	905499	Symbol	NULL		905484						
ANR	905500	Symbol	ULOG_GRID_RESOURCE_UP		905484						
ANR	905501	Symbol	eventNumber		905484						
ANR	905502	Symbol	resourceName		905484						
ANR	905503	Function	GridResourceUpEvent :: ~GridResourceUpEvent	4758:0:103058:103132							
ANR	905504	FunctionDef	GridResourceUpEvent :: ~GridResourceUpEvent ()		905503	0					
ANR	905505	CompoundStatement		4759:0:103106:103132	905503	0					
ANR	905506	Statement	delete	4760:1:103109:103114	905503	0	True				
ANR	905507	Statement	[	4760:7:103115:103115	905503	1	True				
ANR	905508	Statement	]	4760:8:103116:103116	905503	2	True				
ANR	905509	ExpressionStatement	resourceName	4760:10:103118:103130	905503	3	True				
ANR	905510	Identifier	resourceName		905503	0					
ANR	905511	Identifier	GridResourceUpEvent :: ~GridResourceUpEvent		905503	1					
ANR	905512	ParameterList			905503	2					
ANR	905513	CFGEntryNode	ENTRY		905503		True				
ANR	905514	CFGExitNode	EXIT		905503		True				
ANR	905515	Function	GridResourceUpEvent :: writeEvent	4763:0:103135:103513							
ANR	905516	FunctionDef	GridResourceUpEvent :: writeEvent (FILE * file)		905515	0					
ANR	905517	CompoundStatement		4764:0:103184:103513	905515	0					
ANR	905518	IdentifierDeclStatement	"const char * unknown = ""UNKNOWN"" ;"	4765:1:103187:103219	905515	0	True				
ANR	905519	IdentifierDecl	"* unknown = ""UNKNOWN"""		905515	0					
ANR	905520	IdentifierDeclType	const char *		905515	0					
ANR	905521	Identifier	unknown		905515	1					
ANR	905522	AssignmentExpression	"* unknown = ""UNKNOWN"""		905515	2		=			
ANR	905523	Identifier	unknown		905515	0					
ANR	905524	PrimaryExpression	"""UNKNOWN"""		905515	1					
ANR	905525	IdentifierDeclStatement	const char * resource = unknown ;	4766:1:103222:103253	905515	1	True				
ANR	905526	IdentifierDecl	* resource = unknown		905515	0					
ANR	905527	IdentifierDeclType	const char *		905515	0					
ANR	905528	Identifier	resource		905515	1					
ANR	905529	AssignmentExpression	* resource = unknown		905515	2		=			
ANR	905530	Identifier	unknown		905515	0					
ANR	905531	Identifier	unknown		905515	1					
ANR	905532	IdentifierDeclStatement	"int retval = fprintf ( file , ""Grid Resource Back Up\\n"" ) ;"	4768:1:103257:103311	905515	2	True				
ANR	905533	IdentifierDecl	"retval = fprintf ( file , ""Grid Resource Back Up\\n"" )"		905515	0					
ANR	905534	IdentifierDeclType	int		905515	0					
ANR	905535	Identifier	retval		905515	1					
ANR	905536	AssignmentExpression	"retval = fprintf ( file , ""Grid Resource Back Up\\n"" )"		905515	2		=			
ANR	905537	Identifier	retval		905515	0					
ANR	905538	CallExpression	"fprintf ( file , ""Grid Resource Back Up\\n"" )"		905515	1					
ANR	905539	Callee	fprintf		905515	0					
ANR	905540	Identifier	fprintf		905515	0					
ANR	905541	ArgumentList	file		905515	1					
ANR	905542	Argument	file		905515	0					
ANR	905543	Identifier	file		905515	0					
ANR	905544	Argument	"""Grid Resource Back Up\\n"""		905515	1					
ANR	905545	PrimaryExpression	"""Grid Resource Back Up\\n"""		905515	0					
ANR	905546	IfStatement	if ( retval < 0 )		905515	3					
ANR	905547	Condition	retval < 0	4769:5:103318:103327	905515	0	True				
ANR	905548	RelationalExpression	retval < 0		905515	0		<			
ANR	905549	Identifier	retval		905515	0					
ANR	905550	PrimaryExpression	0		905515	1					
ANR	905551	CompoundStatement		7:1:146:146	905515	1					
ANR	905552	ReturnStatement	return 0 ;	4771:2:103335:103343	905515	0	True				
ANR	905553	PrimaryExpression	0		905515	0					
ANR	905554	IfStatement	if ( resourceName )		905515	4					
ANR	905555	Condition	resourceName	4774:6:103355:103366	905515	0	True				
ANR	905556	Identifier	resourceName		905515	0					
ANR	905557	ExpressionStatement	resource = resourceName	4774:21:103370:103393	905515	1	True				
ANR	905558	AssignmentExpression	resource = resourceName		905515	0		=			
ANR	905559	Identifier	resource		905515	0					
ANR	905560	Identifier	resourceName		905515	1					
ANR	905561	ExpressionStatement	"retval = fprintf ( file , ""    GridResource: %.8191s\\n"" , resource )"	4776:1:103397:103462	905515	5	True				
ANR	905562	AssignmentExpression	"retval = fprintf ( file , ""    GridResource: %.8191s\\n"" , resource )"		905515	0		=			
ANR	905563	Identifier	retval		905515	0					
ANR	905564	CallExpression	"fprintf ( file , ""    GridResource: %.8191s\\n"" , resource )"		905515	1					
ANR	905565	Callee	fprintf		905515	0					
ANR	905566	Identifier	fprintf		905515	0					
ANR	905567	ArgumentList	file		905515	1					
ANR	905568	Argument	file		905515	0					
ANR	905569	Identifier	file		905515	0					
ANR	905570	Argument	"""    GridResource: %.8191s\\n"""		905515	1					
ANR	905571	PrimaryExpression	"""    GridResource: %.8191s\\n"""		905515	0					
ANR	905572	Argument	resource		905515	2					
ANR	905573	Identifier	resource		905515	0					
ANR	905574	IfStatement	if ( retval < 0 )		905515	6					
ANR	905575	Condition	retval < 0	4777:5:103469:103478	905515	0	True				
ANR	905576	RelationalExpression	retval < 0		905515	0		<			
ANR	905577	Identifier	retval		905515	0					
ANR	905578	PrimaryExpression	0		905515	1					
ANR	905579	CompoundStatement		14:18:297:297	905515	1					
ANR	905580	ReturnStatement	return 0 ;	4778:2:103486:103494	905515	0	True				
ANR	905581	PrimaryExpression	0		905515	0					
ANR	905582	ReturnStatement	return ( 1 ) ;	4781:1:103501:103511	905515	7	True				
ANR	905583	PrimaryExpression	1		905515	0					
ANR	905584	ReturnType	int		905515	1					
ANR	905585	Identifier	GridResourceUpEvent :: writeEvent		905515	2					
ANR	905586	ParameterList	FILE * file		905515	3					
ANR	905587	Parameter	FILE * file	4763:37:103172:103181	905515	0	True				
ANR	905588	ParameterType	FILE *		905515	0					
ANR	905589	Identifier	file		905515	1					
ANR	905590	CFGEntryNode	ENTRY		905515		True				
ANR	905591	CFGExitNode	EXIT		905515		True				
ANR	905592	Symbol	file		905515						
ANR	905593	Symbol	resource		905515						
ANR	905594	Symbol	resourceName		905515						
ANR	905595	Symbol	fprintf		905515						
ANR	905596	Symbol	retval		905515						
ANR	905597	Symbol	unknown		905515						
ANR	905598	Function	GridResourceUpEvent :: readEvent	4784:0:103516:103883							
ANR	905599	FunctionDef	GridResourceUpEvent :: readEvent (FILE * file)		905598	0					
ANR	905600	CompoundStatement		4786:0:103564:103883	905598	0					
ANR	905601	IdentifierDeclStatement	char s [ 8192 ] ;	4787:1:103567:103579	905598	0	True				
ANR	905602	IdentifierDecl	s [ 8192 ]		905598	0					
ANR	905603	IdentifierDeclType	char [ 8192 ]		905598	0					
ANR	905604	Identifier	s		905598	1					
ANR	905605	PrimaryExpression	8192		905598	2					
ANR	905606	Statement	delete	4789:1:103583:103588	905598	1	True				
ANR	905607	Statement	[	4789:7:103589:103589	905598	2	True				
ANR	905608	Statement	]	4789:8:103590:103590	905598	3	True				
ANR	905609	ExpressionStatement	resourceName	4789:10:103592:103604	905598	4	True				
ANR	905610	Identifier	resourceName		905598	0					
ANR	905611	ExpressionStatement	resourceName = NULL	4790:1:103607:103626	905598	5	True				
ANR	905612	AssignmentExpression	resourceName = NULL		905598	0		=			
ANR	905613	Identifier	resourceName		905598	0					
ANR	905614	Identifier	NULL		905598	1					
ANR	905615	IdentifierDeclStatement	"int retval = fscanf ( file , ""Grid Resource Back Up\\n"" ) ;"	4791:1:103629:103682	905598	6	True				
ANR	905616	IdentifierDecl	"retval = fscanf ( file , ""Grid Resource Back Up\\n"" )"		905598	0					
ANR	905617	IdentifierDeclType	int		905598	0					
ANR	905618	Identifier	retval		905598	1					
ANR	905619	AssignmentExpression	"retval = fscanf ( file , ""Grid Resource Back Up\\n"" )"		905598	2		=			
ANR	905620	Identifier	retval		905598	0					
ANR	905621	CallExpression	"fscanf ( file , ""Grid Resource Back Up\\n"" )"		905598	1					
ANR	905622	Callee	fscanf		905598	0					
ANR	905623	Identifier	fscanf		905598	0					
ANR	905624	ArgumentList	file		905598	1					
ANR	905625	Argument	file		905598	0					
ANR	905626	Identifier	file		905598	0					
ANR	905627	Argument	"""Grid Resource Back Up\\n"""		905598	1					
ANR	905628	PrimaryExpression	"""Grid Resource Back Up\\n"""		905598	0					
ANR	905629	IfStatement	if ( retval != 0 )		905598	7					
ANR	905630	Condition	retval != 0	4792:8:103692:103702	905598	0	True				
ANR	905631	EqualityExpression	retval != 0		905598	0		!=			
ANR	905632	Identifier	retval		905598	0					
ANR	905633	PrimaryExpression	0		905598	1					
ANR	905634	CompoundStatement		8:4:144:144	905598	1					
ANR	905635	ReturnStatement	return 0 ;	4794:2:103713:103721	905598	0	True				
ANR	905636	PrimaryExpression	0		905598	0					
ANR	905637	ExpressionStatement	s [ 0 ] = '\\0'	4796:1:103730:103741	905598	8	True				
ANR	905638	AssignmentExpression	s [ 0 ] = '\\0'		905598	0		=			
ANR	905639	ArrayIndexing	s [ 0 ]		905598	0					
ANR	905640	Identifier	s		905598	0					
ANR	905641	PrimaryExpression	0		905598	1					
ANR	905642	PrimaryExpression	'\\0'		905598	1					
ANR	905643	ExpressionStatement	"retval = fscanf ( file , ""    GridResource: %8191[^\\n]\\n"" , s )"	4797:1:103744:103804	905598	9	True				
ANR	905644	AssignmentExpression	"retval = fscanf ( file , ""    GridResource: %8191[^\\n]\\n"" , s )"		905598	0		=			
ANR	905645	Identifier	retval		905598	0					
ANR	905646	CallExpression	"fscanf ( file , ""    GridResource: %8191[^\\n]\\n"" , s )"		905598	1					
ANR	905647	Callee	fscanf		905598	0					
ANR	905648	Identifier	fscanf		905598	0					
ANR	905649	ArgumentList	file		905598	1					
ANR	905650	Argument	file		905598	0					
ANR	905651	Identifier	file		905598	0					
ANR	905652	Argument	"""    GridResource: %8191[^\\n]\\n"""		905598	1					
ANR	905653	PrimaryExpression	"""    GridResource: %8191[^\\n]\\n"""		905598	0					
ANR	905654	Argument	s		905598	2					
ANR	905655	Identifier	s		905598	0					
ANR	905656	IfStatement	if ( retval != 1 )		905598	10					
ANR	905657	Condition	retval != 1	4798:6:103812:103822	905598	0	True				
ANR	905658	EqualityExpression	retval != 1		905598	0		!=			
ANR	905659	Identifier	retval		905598	0					
ANR	905660	PrimaryExpression	1		905598	1					
ANR	905661	CompoundStatement		14:1:262:262	905598	1					
ANR	905662	ReturnStatement	return 0 ;	4800:2:103831:103839	905598	0	True				
ANR	905663	PrimaryExpression	0		905598	0					
ANR	905664	ExpressionStatement	resourceName = strnewp ( s )	4802:1:103845:103870	905598	11	True				
ANR	905665	AssignmentExpression	resourceName = strnewp ( s )		905598	0		=			
ANR	905666	Identifier	resourceName		905598	0					
ANR	905667	CallExpression	strnewp ( s )		905598	1					
ANR	905668	Callee	strnewp		905598	0					
ANR	905669	Identifier	strnewp		905598	0					
ANR	905670	ArgumentList	s		905598	1					
ANR	905671	Argument	s		905598	0					
ANR	905672	Identifier	s		905598	0					
ANR	905673	ReturnStatement	return 1 ;	4803:1:103873:103881	905598	12	True				
ANR	905674	PrimaryExpression	1		905598	0					
ANR	905675	ReturnType	int		905598	1					
ANR	905676	Identifier	GridResourceUpEvent :: readEvent		905598	2					
ANR	905677	ParameterList	FILE * file		905598	3					
ANR	905678	Parameter	FILE * file	4785:32:103552:103561	905598	0	True				
ANR	905679	ParameterType	FILE *		905598	0					
ANR	905680	Identifier	file		905598	1					
ANR	905681	CFGEntryNode	ENTRY		905598		True				
ANR	905682	CFGExitNode	EXIT		905598		True				
ANR	905683	Symbol	fscanf		905598						
ANR	905684	Symbol	file		905598						
ANR	905685	Symbol	s		905598						
ANR	905686	Symbol	NULL		905598						
ANR	905687	Symbol	strnewp		905598						
ANR	905688	Symbol	resourceName		905598						
ANR	905689	Symbol	* s		905598						
ANR	905690	Symbol	retval		905598						
ANR	905691	Function	GridResourceUpEvent :: toClassAd	4806:0:103886:104181							
ANR	905692	FunctionDef	GridResourceUpEvent :: toClassAd ()		905691	0					
ANR	905693	CompoundStatement		4808:0:103932:104181	905691	0					
ANR	905694	IdentifierDeclStatement	ClassAd * myad = ULogEvent :: toClassAd ( ) ;	4809:1:103935:103973	905691	0	True				
ANR	905695	IdentifierDecl	* myad = ULogEvent :: toClassAd ( )		905691	0					
ANR	905696	IdentifierDeclType	ClassAd *		905691	0					
ANR	905697	Identifier	myad		905691	1					
ANR	905698	AssignmentExpression	* myad = ULogEvent :: toClassAd ( )		905691	2		=			
ANR	905699	Identifier	myad		905691	0					
ANR	905700	CallExpression	ULogEvent :: toClassAd ( )		905691	1					
ANR	905701	Callee	ULogEvent :: toClassAd		905691	0					
ANR	905702	Identifier	ULogEvent :: toClassAd		905691	0					
ANR	905703	ArgumentList			905691	1					
ANR	905704	IfStatement	if ( ! myad )		905691	1					
ANR	905705	Condition	! myad	4810:5:103980:103984	905691	0	True				
ANR	905706	UnaryOperationExpression	! myad		905691	0					
ANR	905707	UnaryOperator	!		905691	0					
ANR	905708	Identifier	myad		905691	1					
ANR	905709	ReturnStatement	return NULL ;	4810:13:103988:103999	905691	1	True				
ANR	905710	Identifier	NULL		905691	0					
ANR	905711	IfStatement	if ( resourceName && resourceName [ 0 ] )		905691	2					
ANR	905712	Condition	resourceName && resourceName [ 0 ]	4812:5:104007:104037	905691	0	True				
ANR	905713	AndExpression	resourceName && resourceName [ 0 ]		905691	0		&&			
ANR	905714	Identifier	resourceName		905691	0					
ANR	905715	ArrayIndexing	resourceName [ 0 ]		905691	1					
ANR	905716	Identifier	resourceName		905691	0					
ANR	905717	PrimaryExpression	0		905691	1					
ANR	905718	CompoundStatement		6:2:112:125	905691	1					
ANR	905719	IdentifierDeclStatement	MyString buf2 ;	4813:2:104045:104058	905691	0	True				
ANR	905720	IdentifierDecl	buf2		905691	0					
ANR	905721	IdentifierDeclType	MyString		905691	0					
ANR	905722	Identifier	buf2		905691	1					
ANR	905723	ExpressionStatement	"buf2 . sprintf ( ""GridResource = \\""%s\\"""" , resourceName )"	4814:2:104062:104112	905691	1	True				
ANR	905724	CallExpression	"buf2 . sprintf ( ""GridResource = \\""%s\\"""" , resourceName )"		905691	0					
ANR	905725	Callee	buf2 . sprintf		905691	0					
ANR	905726	MemberAccess	buf2 . sprintf		905691	0					
ANR	905727	Identifier	buf2		905691	0					
ANR	905728	Identifier	sprintf		905691	1					
ANR	905729	ArgumentList	"""GridResource = \\""%s\\"""""		905691	1					
ANR	905730	Argument	"""GridResource = \\""%s\\"""""		905691	0					
ANR	905731	PrimaryExpression	"""GridResource = \\""%s\\"""""		905691	0					
ANR	905732	Argument	resourceName		905691	1					
ANR	905733	Identifier	resourceName		905691	0					
ANR	905734	IfStatement	if ( ! myad -> Insert ( buf2 . Value ( ) ) )		905691	2					
ANR	905735	Condition	! myad -> Insert ( buf2 . Value ( ) )	4815:6:104120:104146	905691	0	True				
ANR	905736	UnaryOperationExpression	! myad -> Insert ( buf2 . Value ( ) )		905691	0					
ANR	905737	UnaryOperator	!		905691	0					
ANR	905738	CallExpression	myad -> Insert ( buf2 . Value ( ) )		905691	1					
ANR	905739	Callee	myad -> Insert		905691	0					
ANR	905740	PtrMemberAccess	myad -> Insert		905691	0					
ANR	905741	Identifier	myad		905691	0					
ANR	905742	Identifier	Insert		905691	1					
ANR	905743	ArgumentList	buf2 . Value ( )		905691	1					
ANR	905744	Argument	buf2 . Value ( )		905691	0					
ANR	905745	CallExpression	buf2 . Value ( )		905691	0					
ANR	905746	Callee	buf2 . Value		905691	0					
ANR	905747	MemberAccess	buf2 . Value		905691	0					
ANR	905748	Identifier	buf2		905691	0					
ANR	905749	Identifier	Value		905691	1					
ANR	905750	ArgumentList			905691	1					
ANR	905751	ReturnStatement	return NULL ;	4815:36:104150:104161	905691	1	True				
ANR	905752	Identifier	NULL		905691	0					
ANR	905753	ReturnStatement	return myad ;	4818:1:104168:104179	905691	3	True				
ANR	905754	Identifier	myad		905691	0					
ANR	905755	ReturnType	ClassAd *		905691	1					
ANR	905756	Identifier	GridResourceUpEvent :: toClassAd		905691	2					
ANR	905757	ParameterList			905691	3					
ANR	905758	CFGEntryNode	ENTRY		905691		True				
ANR	905759	CFGExitNode	EXIT		905691		True				
ANR	905760	Symbol	buf2		905691						
ANR	905761	Symbol	NULL		905691						
ANR	905762	Symbol	* myad		905691						
ANR	905763	Symbol	* resourceName		905691						
ANR	905764	Symbol	myad -> Insert		905691						
ANR	905765	Symbol	resourceName		905691						
ANR	905766	Symbol	myad		905691						
ANR	905767	Symbol	ULogEvent :: toClassAd		905691						
ANR	905768	Symbol	buf2 . Value		905691						
ANR	905769	Function	GridResourceUpEvent :: initFromClassAd	4821:0:104184:104566							
ANR	905770	FunctionDef	GridResourceUpEvent :: initFromClassAd (ClassAd * ad)		905769	0					
ANR	905771	CompoundStatement		4823:0:104239:104566	905769	0					
ANR	905772	ExpressionStatement	ULogEvent :: initFromClassAd ( ad )	4824:1:104242:104272	905769	0	True				
ANR	905773	CallExpression	ULogEvent :: initFromClassAd ( ad )		905769	0					
ANR	905774	Callee	ULogEvent :: initFromClassAd		905769	0					
ANR	905775	Identifier	ULogEvent :: initFromClassAd		905769	0					
ANR	905776	ArgumentList	ad		905769	1					
ANR	905777	Argument	ad		905769	0					
ANR	905778	Identifier	ad		905769	0					
ANR	905779	IfStatement	if ( ! ad )		905769	1					
ANR	905780	Condition	! ad	4826:5:104280:104282	905769	0	True				
ANR	905781	UnaryOperationExpression	! ad		905769	0					
ANR	905782	UnaryOperator	!		905769	0					
ANR	905783	Identifier	ad		905769	1					
ANR	905784	ReturnStatement	return ;	4826:11:104286:104292	905769	1	True				
ANR	905785	IdentifierDeclStatement	char * mallocstr = NULL ;	4829:1:104369:104391	905769	2	True				
ANR	905786	IdentifierDecl	* mallocstr = NULL		905769	0					
ANR	905787	IdentifierDeclType	char *		905769	0					
ANR	905788	Identifier	mallocstr		905769	1					
ANR	905789	AssignmentExpression	* mallocstr = NULL		905769	2		=			
ANR	905790	Identifier	NULL		905769	0					
ANR	905791	Identifier	NULL		905769	1					
ANR	905792	ExpressionStatement	"ad -> LookupString ( ""GridResource"" , & mallocstr )"	4830:1:104394:104438	905769	3	True				
ANR	905793	CallExpression	"ad -> LookupString ( ""GridResource"" , & mallocstr )"		905769	0					
ANR	905794	Callee	ad -> LookupString		905769	0					
ANR	905795	PtrMemberAccess	ad -> LookupString		905769	0					
ANR	905796	Identifier	ad		905769	0					
ANR	905797	Identifier	LookupString		905769	1					
ANR	905798	ArgumentList	"""GridResource"""		905769	1					
ANR	905799	Argument	"""GridResource"""		905769	0					
ANR	905800	PrimaryExpression	"""GridResource"""		905769	0					
ANR	905801	Argument	& mallocstr		905769	1					
ANR	905802	UnaryOperationExpression	& mallocstr		905769	0					
ANR	905803	UnaryOperator	&		905769	0					
ANR	905804	Identifier	mallocstr		905769	1					
ANR	905805	IfStatement	if ( mallocstr )		905769	4					
ANR	905806	Condition	mallocstr	4831:5:104445:104453	905769	0	True				
ANR	905807	Identifier	mallocstr		905769	0					
ANR	905808	CompoundStatement		9:17:217:217	905769	1					
ANR	905809	ExpressionStatement	resourceName = new char [ strlen ( mallocstr ) + 1 ]	4832:2:104461:104507	905769	0	True				
ANR	905810	AssignmentExpression	resourceName = new char [ strlen ( mallocstr ) + 1 ]		905769	0		=			
ANR	905811	Identifier	resourceName		905769	0					
ANR	905812	AdditiveExpression	strlen ( mallocstr ) + 1		905769	1		+			
ANR	905813	CallExpression	strlen ( mallocstr )		905769	0					
ANR	905814	Callee	strlen		905769	0					
ANR	905815	Identifier	strlen		905769	0					
ANR	905816	ArgumentList	mallocstr		905769	1					
ANR	905817	Argument	mallocstr		905769	0					
ANR	905818	Identifier	mallocstr		905769	0					
ANR	905819	PrimaryExpression	1		905769	1					
ANR	905820	ExpressionStatement	"strcpy ( resourceName , mallocstr )"	4833:2:104511:104542	905769	1	True				
ANR	905821	CallExpression	"strcpy ( resourceName , mallocstr )"		905769	0					
ANR	905822	Callee	strcpy		905769	0					
ANR	905823	Identifier	strcpy		905769	0					
ANR	905824	ArgumentList	resourceName		905769	1					
ANR	905825	Argument	resourceName		905769	0					
ANR	905826	Identifier	resourceName		905769	0					
ANR	905827	Argument	mallocstr		905769	1					
ANR	905828	Identifier	mallocstr		905769	0					
ANR	905829	ExpressionStatement	free ( mallocstr )	4834:2:104546:104561	905769	2	True				
ANR	905830	CallExpression	free ( mallocstr )		905769	0					
ANR	905831	Callee	free		905769	0					
ANR	905832	Identifier	free		905769	0					
ANR	905833	ArgumentList	mallocstr		905769	1					
ANR	905834	Argument	mallocstr		905769	0					
ANR	905835	Identifier	mallocstr		905769	0					
ANR	905836	ReturnType	void		905769	1					
ANR	905837	Identifier	GridResourceUpEvent :: initFromClassAd		905769	2					
ANR	905838	ParameterList	ClassAd * ad		905769	3					
ANR	905839	Parameter	ClassAd * ad	4822:37:104226:104236	905769	0	True				
ANR	905840	ParameterType	ClassAd *		905769	0					
ANR	905841	Identifier	ad		905769	1					
ANR	905842	CFGEntryNode	ENTRY		905769		True				
ANR	905843	CFGExitNode	EXIT		905769		True				
ANR	905844	Symbol	strlen		905769						
ANR	905845	Symbol	& mallocstr		905769						
ANR	905846	Symbol	ad		905769						
ANR	905847	Symbol	NULL		905769						
ANR	905848	Symbol	mallocstr		905769						
ANR	905849	Symbol	resourceName		905769						
ANR	905850	Function	GridResourceDownEvent :: GridResourceDownEvent	4840:0:104606:104721							
ANR	905851	FunctionDef	GridResourceDownEvent :: GridResourceDownEvent ()		905850	0					
ANR	905852	CompoundStatement		4841:0:104657:104721	905850	0					
ANR	905853	ExpressionStatement	eventNumber = ULOG_GRID_RESOURCE_DOWN	4842:1:104660:104697	905850	0	True				
ANR	905854	AssignmentExpression	eventNumber = ULOG_GRID_RESOURCE_DOWN		905850	0		=			
ANR	905855	Identifier	eventNumber		905850	0					
ANR	905856	Identifier	ULOG_GRID_RESOURCE_DOWN		905850	1					
ANR	905857	ExpressionStatement	resourceName = NULL	4843:1:104700:104719	905850	1	True				
ANR	905858	AssignmentExpression	resourceName = NULL		905850	0		=			
ANR	905859	Identifier	resourceName		905850	0					
ANR	905860	Identifier	NULL		905850	1					
ANR	905861	Identifier	GridResourceDownEvent :: GridResourceDownEvent		905850	1					
ANR	905862	ParameterList			905850	2					
ANR	905863	CFGEntryNode	ENTRY		905850		True				
ANR	905864	CFGExitNode	EXIT		905850		True				
ANR	905865	Symbol	NULL		905850						
ANR	905866	Symbol	eventNumber		905850						
ANR	905867	Symbol	resourceName		905850						
ANR	905868	Symbol	ULOG_GRID_RESOURCE_DOWN		905850						
ANR	905869	Function	GridResourceDownEvent :: ~GridResourceDownEvent	4846:0:104724:104802							
ANR	905870	FunctionDef	GridResourceDownEvent :: ~GridResourceDownEvent ()		905869	0					
ANR	905871	CompoundStatement		4847:0:104776:104802	905869	0					
ANR	905872	Statement	delete	4848:1:104779:104784	905869	0	True				
ANR	905873	Statement	[	4848:7:104785:104785	905869	1	True				
ANR	905874	Statement	]	4848:8:104786:104786	905869	2	True				
ANR	905875	ExpressionStatement	resourceName	4848:10:104788:104800	905869	3	True				
ANR	905876	Identifier	resourceName		905869	0					
ANR	905877	Identifier	GridResourceDownEvent :: ~GridResourceDownEvent		905869	1					
ANR	905878	ParameterList			905869	2					
ANR	905879	CFGEntryNode	ENTRY		905869		True				
ANR	905880	CFGExitNode	EXIT		905869		True				
ANR	905881	Function	GridResourceDownEvent :: writeEvent	4851:0:104805:105191							
ANR	905882	FunctionDef	GridResourceDownEvent :: writeEvent (FILE * file)		905881	0					
ANR	905883	CompoundStatement		4853:0:104856:105191	905881	0					
ANR	905884	IdentifierDeclStatement	"const char * unknown = ""UNKNOWN"" ;"	4854:1:104859:104891	905881	0	True				
ANR	905885	IdentifierDecl	"* unknown = ""UNKNOWN"""		905881	0					
ANR	905886	IdentifierDeclType	const char *		905881	0					
ANR	905887	Identifier	unknown		905881	1					
ANR	905888	AssignmentExpression	"* unknown = ""UNKNOWN"""		905881	2		=			
ANR	905889	Identifier	unknown		905881	0					
ANR	905890	PrimaryExpression	"""UNKNOWN"""		905881	1					
ANR	905891	IdentifierDeclStatement	const char * resource = unknown ;	4855:1:104894:104925	905881	1	True				
ANR	905892	IdentifierDecl	* resource = unknown		905881	0					
ANR	905893	IdentifierDeclType	const char *		905881	0					
ANR	905894	Identifier	resource		905881	1					
ANR	905895	AssignmentExpression	* resource = unknown		905881	2		=			
ANR	905896	Identifier	unknown		905881	0					
ANR	905897	Identifier	unknown		905881	1					
ANR	905898	IdentifierDeclStatement	"int retval = fprintf ( file , ""Detected Down Grid Resource\\n"" ) ;"	4857:1:104929:104989	905881	2	True				
ANR	905899	IdentifierDecl	"retval = fprintf ( file , ""Detected Down Grid Resource\\n"" )"		905881	0					
ANR	905900	IdentifierDeclType	int		905881	0					
ANR	905901	Identifier	retval		905881	1					
ANR	905902	AssignmentExpression	"retval = fprintf ( file , ""Detected Down Grid Resource\\n"" )"		905881	2		=			
ANR	905903	Identifier	retval		905881	0					
ANR	905904	CallExpression	"fprintf ( file , ""Detected Down Grid Resource\\n"" )"		905881	1					
ANR	905905	Callee	fprintf		905881	0					
ANR	905906	Identifier	fprintf		905881	0					
ANR	905907	ArgumentList	file		905881	1					
ANR	905908	Argument	file		905881	0					
ANR	905909	Identifier	file		905881	0					
ANR	905910	Argument	"""Detected Down Grid Resource\\n"""		905881	1					
ANR	905911	PrimaryExpression	"""Detected Down Grid Resource\\n"""		905881	0					
ANR	905912	IfStatement	if ( retval < 0 )		905881	3					
ANR	905913	Condition	retval < 0	4858:5:104996:105005	905881	0	True				
ANR	905914	RelationalExpression	retval < 0		905881	0		<			
ANR	905915	Identifier	retval		905881	0					
ANR	905916	PrimaryExpression	0		905881	1					
ANR	905917	CompoundStatement		7:1:152:152	905881	1					
ANR	905918	ReturnStatement	return 0 ;	4860:2:105013:105021	905881	0	True				
ANR	905919	PrimaryExpression	0		905881	0					
ANR	905920	IfStatement	if ( resourceName )		905881	4					
ANR	905921	Condition	resourceName	4863:6:105033:105044	905881	0	True				
ANR	905922	Identifier	resourceName		905881	0					
ANR	905923	ExpressionStatement	resource = resourceName	4863:21:105048:105071	905881	1	True				
ANR	905924	AssignmentExpression	resource = resourceName		905881	0		=			
ANR	905925	Identifier	resource		905881	0					
ANR	905926	Identifier	resourceName		905881	1					
ANR	905927	ExpressionStatement	"retval = fprintf ( file , ""    GridResource: %.8191s\\n"" , resource )"	4865:1:105075:105140	905881	5	True				
ANR	905928	AssignmentExpression	"retval = fprintf ( file , ""    GridResource: %.8191s\\n"" , resource )"		905881	0		=			
ANR	905929	Identifier	retval		905881	0					
ANR	905930	CallExpression	"fprintf ( file , ""    GridResource: %.8191s\\n"" , resource )"		905881	1					
ANR	905931	Callee	fprintf		905881	0					
ANR	905932	Identifier	fprintf		905881	0					
ANR	905933	ArgumentList	file		905881	1					
ANR	905934	Argument	file		905881	0					
ANR	905935	Identifier	file		905881	0					
ANR	905936	Argument	"""    GridResource: %.8191s\\n"""		905881	1					
ANR	905937	PrimaryExpression	"""    GridResource: %.8191s\\n"""		905881	0					
ANR	905938	Argument	resource		905881	2					
ANR	905939	Identifier	resource		905881	0					
ANR	905940	IfStatement	if ( retval < 0 )		905881	6					
ANR	905941	Condition	retval < 0	4866:5:105147:105156	905881	0	True				
ANR	905942	RelationalExpression	retval < 0		905881	0		<			
ANR	905943	Identifier	retval		905881	0					
ANR	905944	PrimaryExpression	0		905881	1					
ANR	905945	CompoundStatement		14:18:303:303	905881	1					
ANR	905946	ReturnStatement	return 0 ;	4867:2:105164:105172	905881	0	True				
ANR	905947	PrimaryExpression	0		905881	0					
ANR	905948	ReturnStatement	return ( 1 ) ;	4870:1:105179:105189	905881	7	True				
ANR	905949	PrimaryExpression	1		905881	0					
ANR	905950	ReturnType	int		905881	1					
ANR	905951	Identifier	GridResourceDownEvent :: writeEvent		905881	2					
ANR	905952	ParameterList	FILE * file		905881	3					
ANR	905953	Parameter	FILE * file	4852:35:104844:104853	905881	0	True				
ANR	905954	ParameterType	FILE *		905881	0					
ANR	905955	Identifier	file		905881	1					
ANR	905956	CFGEntryNode	ENTRY		905881		True				
ANR	905957	CFGExitNode	EXIT		905881		True				
ANR	905958	Symbol	file		905881						
ANR	905959	Symbol	resource		905881						
ANR	905960	Symbol	resourceName		905881						
ANR	905961	Symbol	fprintf		905881						
ANR	905962	Symbol	retval		905881						
ANR	905963	Symbol	unknown		905881						
ANR	905964	Function	GridResourceDownEvent :: readEvent	4873:0:105194:105569							
ANR	905965	FunctionDef	GridResourceDownEvent :: readEvent (FILE * file)		905964	0					
ANR	905966	CompoundStatement		4875:0:105244:105569	905964	0					
ANR	905967	IdentifierDeclStatement	char s [ 8192 ] ;	4876:1:105247:105259	905964	0	True				
ANR	905968	IdentifierDecl	s [ 8192 ]		905964	0					
ANR	905969	IdentifierDeclType	char [ 8192 ]		905964	0					
ANR	905970	Identifier	s		905964	1					
ANR	905971	PrimaryExpression	8192		905964	2					
ANR	905972	Statement	delete	4878:1:105263:105268	905964	1	True				
ANR	905973	Statement	[	4878:7:105269:105269	905964	2	True				
ANR	905974	Statement	]	4878:8:105270:105270	905964	3	True				
ANR	905975	ExpressionStatement	resourceName	4878:10:105272:105284	905964	4	True				
ANR	905976	Identifier	resourceName		905964	0					
ANR	905977	ExpressionStatement	resourceName = NULL	4879:1:105287:105306	905964	5	True				
ANR	905978	AssignmentExpression	resourceName = NULL		905964	0		=			
ANR	905979	Identifier	resourceName		905964	0					
ANR	905980	Identifier	NULL		905964	1					
ANR	905981	IdentifierDeclStatement	"int retval = fscanf ( file , ""Detected Down Grid Resource\\n"" ) ;"	4880:1:105309:105368	905964	6	True				
ANR	905982	IdentifierDecl	"retval = fscanf ( file , ""Detected Down Grid Resource\\n"" )"		905964	0					
ANR	905983	IdentifierDeclType	int		905964	0					
ANR	905984	Identifier	retval		905964	1					
ANR	905985	AssignmentExpression	"retval = fscanf ( file , ""Detected Down Grid Resource\\n"" )"		905964	2		=			
ANR	905986	Identifier	retval		905964	0					
ANR	905987	CallExpression	"fscanf ( file , ""Detected Down Grid Resource\\n"" )"		905964	1					
ANR	905988	Callee	fscanf		905964	0					
ANR	905989	Identifier	fscanf		905964	0					
ANR	905990	ArgumentList	file		905964	1					
ANR	905991	Argument	file		905964	0					
ANR	905992	Identifier	file		905964	0					
ANR	905993	Argument	"""Detected Down Grid Resource\\n"""		905964	1					
ANR	905994	PrimaryExpression	"""Detected Down Grid Resource\\n"""		905964	0					
ANR	905995	IfStatement	if ( retval != 0 )		905964	7					
ANR	905996	Condition	retval != 0	4881:8:105378:105388	905964	0	True				
ANR	905997	EqualityExpression	retval != 0		905964	0		!=			
ANR	905998	Identifier	retval		905964	0					
ANR	905999	PrimaryExpression	0		905964	1					
ANR	906000	CompoundStatement		8:4:150:150	905964	1					
ANR	906001	ReturnStatement	return 0 ;	4883:2:105399:105407	905964	0	True				
ANR	906002	PrimaryExpression	0		905964	0					
ANR	906003	ExpressionStatement	s [ 0 ] = '\\0'	4885:1:105416:105427	905964	8	True				
ANR	906004	AssignmentExpression	s [ 0 ] = '\\0'		905964	0		=			
ANR	906005	ArrayIndexing	s [ 0 ]		905964	0					
ANR	906006	Identifier	s		905964	0					
ANR	906007	PrimaryExpression	0		905964	1					
ANR	906008	PrimaryExpression	'\\0'		905964	1					
ANR	906009	ExpressionStatement	"retval = fscanf ( file , ""    GridResource: %8191[^\\n]\\n"" , s )"	4886:1:105430:105490	905964	9	True				
ANR	906010	AssignmentExpression	"retval = fscanf ( file , ""    GridResource: %8191[^\\n]\\n"" , s )"		905964	0		=			
ANR	906011	Identifier	retval		905964	0					
ANR	906012	CallExpression	"fscanf ( file , ""    GridResource: %8191[^\\n]\\n"" , s )"		905964	1					
ANR	906013	Callee	fscanf		905964	0					
ANR	906014	Identifier	fscanf		905964	0					
ANR	906015	ArgumentList	file		905964	1					
ANR	906016	Argument	file		905964	0					
ANR	906017	Identifier	file		905964	0					
ANR	906018	Argument	"""    GridResource: %8191[^\\n]\\n"""		905964	1					
ANR	906019	PrimaryExpression	"""    GridResource: %8191[^\\n]\\n"""		905964	0					
ANR	906020	Argument	s		905964	2					
ANR	906021	Identifier	s		905964	0					
ANR	906022	IfStatement	if ( retval != 1 )		905964	10					
ANR	906023	Condition	retval != 1	4887:6:105498:105508	905964	0	True				
ANR	906024	EqualityExpression	retval != 1		905964	0		!=			
ANR	906025	Identifier	retval		905964	0					
ANR	906026	PrimaryExpression	1		905964	1					
ANR	906027	CompoundStatement		14:1:268:268	905964	1					
ANR	906028	ReturnStatement	return 0 ;	4889:2:105517:105525	905964	0	True				
ANR	906029	PrimaryExpression	0		905964	0					
ANR	906030	ExpressionStatement	resourceName = strnewp ( s )	4891:1:105531:105556	905964	11	True				
ANR	906031	AssignmentExpression	resourceName = strnewp ( s )		905964	0		=			
ANR	906032	Identifier	resourceName		905964	0					
ANR	906033	CallExpression	strnewp ( s )		905964	1					
ANR	906034	Callee	strnewp		905964	0					
ANR	906035	Identifier	strnewp		905964	0					
ANR	906036	ArgumentList	s		905964	1					
ANR	906037	Argument	s		905964	0					
ANR	906038	Identifier	s		905964	0					
ANR	906039	ReturnStatement	return 1 ;	4892:1:105559:105567	905964	12	True				
ANR	906040	PrimaryExpression	1		905964	0					
ANR	906041	ReturnType	int		905964	1					
ANR	906042	Identifier	GridResourceDownEvent :: readEvent		905964	2					
ANR	906043	ParameterList	FILE * file		905964	3					
ANR	906044	Parameter	FILE * file	4874:34:105232:105241	905964	0	True				
ANR	906045	ParameterType	FILE *		905964	0					
ANR	906046	Identifier	file		905964	1					
ANR	906047	CFGEntryNode	ENTRY		905964		True				
ANR	906048	CFGExitNode	EXIT		905964		True				
ANR	906049	Symbol	fscanf		905964						
ANR	906050	Symbol	file		905964						
ANR	906051	Symbol	s		905964						
ANR	906052	Symbol	NULL		905964						
ANR	906053	Symbol	strnewp		905964						
ANR	906054	Symbol	resourceName		905964						
ANR	906055	Symbol	* s		905964						
ANR	906056	Symbol	retval		905964						
ANR	906057	Function	GridResourceDownEvent :: toClassAd	4895:0:105572:105869							
ANR	906058	FunctionDef	GridResourceDownEvent :: toClassAd ()		906057	0					
ANR	906059	CompoundStatement		4897:0:105620:105869	906057	0					
ANR	906060	IdentifierDeclStatement	ClassAd * myad = ULogEvent :: toClassAd ( ) ;	4898:1:105623:105661	906057	0	True				
ANR	906061	IdentifierDecl	* myad = ULogEvent :: toClassAd ( )		906057	0					
ANR	906062	IdentifierDeclType	ClassAd *		906057	0					
ANR	906063	Identifier	myad		906057	1					
ANR	906064	AssignmentExpression	* myad = ULogEvent :: toClassAd ( )		906057	2		=			
ANR	906065	Identifier	myad		906057	0					
ANR	906066	CallExpression	ULogEvent :: toClassAd ( )		906057	1					
ANR	906067	Callee	ULogEvent :: toClassAd		906057	0					
ANR	906068	Identifier	ULogEvent :: toClassAd		906057	0					
ANR	906069	ArgumentList			906057	1					
ANR	906070	IfStatement	if ( ! myad )		906057	1					
ANR	906071	Condition	! myad	4899:5:105668:105672	906057	0	True				
ANR	906072	UnaryOperationExpression	! myad		906057	0					
ANR	906073	UnaryOperator	!		906057	0					
ANR	906074	Identifier	myad		906057	1					
ANR	906075	ReturnStatement	return NULL ;	4899:13:105676:105687	906057	1	True				
ANR	906076	Identifier	NULL		906057	0					
ANR	906077	IfStatement	if ( resourceName && resourceName [ 0 ] )		906057	2					
ANR	906078	Condition	resourceName && resourceName [ 0 ]	4901:5:105695:105725	906057	0	True				
ANR	906079	AndExpression	resourceName && resourceName [ 0 ]		906057	0		&&			
ANR	906080	Identifier	resourceName		906057	0					
ANR	906081	ArrayIndexing	resourceName [ 0 ]		906057	1					
ANR	906082	Identifier	resourceName		906057	0					
ANR	906083	PrimaryExpression	0		906057	1					
ANR	906084	CompoundStatement		6:2:112:125	906057	1					
ANR	906085	IdentifierDeclStatement	MyString buf2 ;	4902:2:105733:105746	906057	0	True				
ANR	906086	IdentifierDecl	buf2		906057	0					
ANR	906087	IdentifierDeclType	MyString		906057	0					
ANR	906088	Identifier	buf2		906057	1					
ANR	906089	ExpressionStatement	"buf2 . sprintf ( ""GridResource = \\""%s\\"""" , resourceName )"	4903:2:105750:105800	906057	1	True				
ANR	906090	CallExpression	"buf2 . sprintf ( ""GridResource = \\""%s\\"""" , resourceName )"		906057	0					
ANR	906091	Callee	buf2 . sprintf		906057	0					
ANR	906092	MemberAccess	buf2 . sprintf		906057	0					
ANR	906093	Identifier	buf2		906057	0					
ANR	906094	Identifier	sprintf		906057	1					
ANR	906095	ArgumentList	"""GridResource = \\""%s\\"""""		906057	1					
ANR	906096	Argument	"""GridResource = \\""%s\\"""""		906057	0					
ANR	906097	PrimaryExpression	"""GridResource = \\""%s\\"""""		906057	0					
ANR	906098	Argument	resourceName		906057	1					
ANR	906099	Identifier	resourceName		906057	0					
ANR	906100	IfStatement	if ( ! myad -> Insert ( buf2 . Value ( ) ) )		906057	2					
ANR	906101	Condition	! myad -> Insert ( buf2 . Value ( ) )	4904:6:105808:105834	906057	0	True				
ANR	906102	UnaryOperationExpression	! myad -> Insert ( buf2 . Value ( ) )		906057	0					
ANR	906103	UnaryOperator	!		906057	0					
ANR	906104	CallExpression	myad -> Insert ( buf2 . Value ( ) )		906057	1					
ANR	906105	Callee	myad -> Insert		906057	0					
ANR	906106	PtrMemberAccess	myad -> Insert		906057	0					
ANR	906107	Identifier	myad		906057	0					
ANR	906108	Identifier	Insert		906057	1					
ANR	906109	ArgumentList	buf2 . Value ( )		906057	1					
ANR	906110	Argument	buf2 . Value ( )		906057	0					
ANR	906111	CallExpression	buf2 . Value ( )		906057	0					
ANR	906112	Callee	buf2 . Value		906057	0					
ANR	906113	MemberAccess	buf2 . Value		906057	0					
ANR	906114	Identifier	buf2		906057	0					
ANR	906115	Identifier	Value		906057	1					
ANR	906116	ArgumentList			906057	1					
ANR	906117	ReturnStatement	return NULL ;	4904:36:105838:105849	906057	1	True				
ANR	906118	Identifier	NULL		906057	0					
ANR	906119	ReturnStatement	return myad ;	4907:1:105856:105867	906057	3	True				
ANR	906120	Identifier	myad		906057	0					
ANR	906121	ReturnType	ClassAd *		906057	1					
ANR	906122	Identifier	GridResourceDownEvent :: toClassAd		906057	2					
ANR	906123	ParameterList			906057	3					
ANR	906124	CFGEntryNode	ENTRY		906057		True				
ANR	906125	CFGExitNode	EXIT		906057		True				
ANR	906126	Symbol	buf2		906057						
ANR	906127	Symbol	NULL		906057						
ANR	906128	Symbol	* myad		906057						
ANR	906129	Symbol	* resourceName		906057						
ANR	906130	Symbol	myad -> Insert		906057						
ANR	906131	Symbol	resourceName		906057						
ANR	906132	Symbol	myad		906057						
ANR	906133	Symbol	ULogEvent :: toClassAd		906057						
ANR	906134	Symbol	buf2 . Value		906057						
ANR	906135	Function	GridResourceDownEvent :: initFromClassAd	4910:0:105872:106256							
ANR	906136	FunctionDef	GridResourceDownEvent :: initFromClassAd (ClassAd * ad)		906135	0					
ANR	906137	CompoundStatement		4912:0:105929:106256	906135	0					
ANR	906138	ExpressionStatement	ULogEvent :: initFromClassAd ( ad )	4913:1:105932:105962	906135	0	True				
ANR	906139	CallExpression	ULogEvent :: initFromClassAd ( ad )		906135	0					
ANR	906140	Callee	ULogEvent :: initFromClassAd		906135	0					
ANR	906141	Identifier	ULogEvent :: initFromClassAd		906135	0					
ANR	906142	ArgumentList	ad		906135	1					
ANR	906143	Argument	ad		906135	0					
ANR	906144	Identifier	ad		906135	0					
ANR	906145	IfStatement	if ( ! ad )		906135	1					
ANR	906146	Condition	! ad	4915:5:105970:105972	906135	0	True				
ANR	906147	UnaryOperationExpression	! ad		906135	0					
ANR	906148	UnaryOperator	!		906135	0					
ANR	906149	Identifier	ad		906135	1					
ANR	906150	ReturnStatement	return ;	4915:11:105976:105982	906135	1	True				
ANR	906151	IdentifierDeclStatement	char * mallocstr = NULL ;	4918:1:106059:106081	906135	2	True				
ANR	906152	IdentifierDecl	* mallocstr = NULL		906135	0					
ANR	906153	IdentifierDeclType	char *		906135	0					
ANR	906154	Identifier	mallocstr		906135	1					
ANR	906155	AssignmentExpression	* mallocstr = NULL		906135	2		=			
ANR	906156	Identifier	NULL		906135	0					
ANR	906157	Identifier	NULL		906135	1					
ANR	906158	ExpressionStatement	"ad -> LookupString ( ""GridResource"" , & mallocstr )"	4919:1:106084:106128	906135	3	True				
ANR	906159	CallExpression	"ad -> LookupString ( ""GridResource"" , & mallocstr )"		906135	0					
ANR	906160	Callee	ad -> LookupString		906135	0					
ANR	906161	PtrMemberAccess	ad -> LookupString		906135	0					
ANR	906162	Identifier	ad		906135	0					
ANR	906163	Identifier	LookupString		906135	1					
ANR	906164	ArgumentList	"""GridResource"""		906135	1					
ANR	906165	Argument	"""GridResource"""		906135	0					
ANR	906166	PrimaryExpression	"""GridResource"""		906135	0					
ANR	906167	Argument	& mallocstr		906135	1					
ANR	906168	UnaryOperationExpression	& mallocstr		906135	0					
ANR	906169	UnaryOperator	&		906135	0					
ANR	906170	Identifier	mallocstr		906135	1					
ANR	906171	IfStatement	if ( mallocstr )		906135	4					
ANR	906172	Condition	mallocstr	4920:5:106135:106143	906135	0	True				
ANR	906173	Identifier	mallocstr		906135	0					
ANR	906174	CompoundStatement		9:17:217:217	906135	1					
ANR	906175	ExpressionStatement	resourceName = new char [ strlen ( mallocstr ) + 1 ]	4921:2:106151:106197	906135	0	True				
ANR	906176	AssignmentExpression	resourceName = new char [ strlen ( mallocstr ) + 1 ]		906135	0		=			
ANR	906177	Identifier	resourceName		906135	0					
ANR	906178	AdditiveExpression	strlen ( mallocstr ) + 1		906135	1		+			
ANR	906179	CallExpression	strlen ( mallocstr )		906135	0					
ANR	906180	Callee	strlen		906135	0					
ANR	906181	Identifier	strlen		906135	0					
ANR	906182	ArgumentList	mallocstr		906135	1					
ANR	906183	Argument	mallocstr		906135	0					
ANR	906184	Identifier	mallocstr		906135	0					
ANR	906185	PrimaryExpression	1		906135	1					
ANR	906186	ExpressionStatement	"strcpy ( resourceName , mallocstr )"	4922:2:106201:106232	906135	1	True				
ANR	906187	CallExpression	"strcpy ( resourceName , mallocstr )"		906135	0					
ANR	906188	Callee	strcpy		906135	0					
ANR	906189	Identifier	strcpy		906135	0					
ANR	906190	ArgumentList	resourceName		906135	1					
ANR	906191	Argument	resourceName		906135	0					
ANR	906192	Identifier	resourceName		906135	0					
ANR	906193	Argument	mallocstr		906135	1					
ANR	906194	Identifier	mallocstr		906135	0					
ANR	906195	ExpressionStatement	free ( mallocstr )	4923:2:106236:106251	906135	2	True				
ANR	906196	CallExpression	free ( mallocstr )		906135	0					
ANR	906197	Callee	free		906135	0					
ANR	906198	Identifier	free		906135	0					
ANR	906199	ArgumentList	mallocstr		906135	1					
ANR	906200	Argument	mallocstr		906135	0					
ANR	906201	Identifier	mallocstr		906135	0					
ANR	906202	ReturnType	void		906135	1					
ANR	906203	Identifier	GridResourceDownEvent :: initFromClassAd		906135	2					
ANR	906204	ParameterList	ClassAd * ad		906135	3					
ANR	906205	Parameter	ClassAd * ad	4911:39:105916:105926	906135	0	True				
ANR	906206	ParameterType	ClassAd *		906135	0					
ANR	906207	Identifier	ad		906135	1					
ANR	906208	CFGEntryNode	ENTRY		906135		True				
ANR	906209	CFGExitNode	EXIT		906135		True				
ANR	906210	Symbol	strlen		906135						
ANR	906211	Symbol	& mallocstr		906135						
ANR	906212	Symbol	ad		906135						
ANR	906213	Symbol	NULL		906135						
ANR	906214	Symbol	mallocstr		906135						
ANR	906215	Symbol	resourceName		906135						
ANR	906216	Function	GridSubmitEvent :: GridSubmitEvent	4929:0:106295:106406							
ANR	906217	FunctionDef	GridSubmitEvent :: GridSubmitEvent ()		906216	0					
ANR	906218	CompoundStatement		4930:0:106334:106406	906216	0					
ANR	906219	ExpressionStatement	eventNumber = ULOG_GRID_SUBMIT	4931:1:106337:106367	906216	0	True				
ANR	906220	AssignmentExpression	eventNumber = ULOG_GRID_SUBMIT		906216	0		=			
ANR	906221	Identifier	eventNumber		906216	0					
ANR	906222	Identifier	ULOG_GRID_SUBMIT		906216	1					
ANR	906223	ExpressionStatement	resourceName = NULL	4932:1:106370:106389	906216	1	True				
ANR	906224	AssignmentExpression	resourceName = NULL		906216	0		=			
ANR	906225	Identifier	resourceName		906216	0					
ANR	906226	Identifier	NULL		906216	1					
ANR	906227	ExpressionStatement	jobId = NULL	4933:1:106392:106404	906216	2	True				
ANR	906228	AssignmentExpression	jobId = NULL		906216	0		=			
ANR	906229	Identifier	jobId		906216	0					
ANR	906230	Identifier	NULL		906216	1					
ANR	906231	Identifier	GridSubmitEvent :: GridSubmitEvent		906216	1					
ANR	906232	ParameterList			906216	2					
ANR	906233	CFGEntryNode	ENTRY		906216		True				
ANR	906234	CFGExitNode	EXIT		906216		True				
ANR	906235	Symbol	jobId		906216						
ANR	906236	Symbol	NULL		906216						
ANR	906237	Symbol	eventNumber		906216						
ANR	906238	Symbol	resourceName		906216						
ANR	906239	Symbol	ULOG_GRID_SUBMIT		906216						
ANR	906240	Function	GridSubmitEvent :: ~GridSubmitEvent	4936:0:106409:106492							
ANR	906241	FunctionDef	GridSubmitEvent :: ~GridSubmitEvent ()		906240	0					
ANR	906242	CompoundStatement		4937:0:106449:106492	906240	0					
ANR	906243	Statement	delete	4938:1:106452:106457	906240	0	True				
ANR	906244	Statement	[	4938:7:106458:106458	906240	1	True				
ANR	906245	Statement	]	4938:8:106459:106459	906240	2	True				
ANR	906246	ExpressionStatement	resourceName	4938:10:106461:106473	906240	3	True				
ANR	906247	Identifier	resourceName		906240	0					
ANR	906248	Statement	delete	4939:1:106476:106481	906240	4	True				
ANR	906249	Statement	[	4939:7:106482:106482	906240	5	True				
ANR	906250	Statement	]	4939:8:106483:106483	906240	6	True				
ANR	906251	ExpressionStatement	jobId	4939:10:106485:106490	906240	7	True				
ANR	906252	Identifier	jobId		906240	0					
ANR	906253	Identifier	GridSubmitEvent :: ~GridSubmitEvent		906240	1					
ANR	906254	ParameterList			906240	2					
ANR	906255	CFGEntryNode	ENTRY		906240		True				
ANR	906256	CFGExitNode	EXIT		906240		True				
ANR	906257	Function	GridSubmitEvent :: writeEvent	4942:0:106495:107030							
ANR	906258	FunctionDef	GridSubmitEvent :: writeEvent (FILE * file)		906257	0					
ANR	906259	CompoundStatement		4944:0:106540:107030	906257	0					
ANR	906260	IdentifierDeclStatement	"const char * unknown = ""UNKNOWN"" ;"	4945:1:106543:106575	906257	0	True				
ANR	906261	IdentifierDecl	"* unknown = ""UNKNOWN"""		906257	0					
ANR	906262	IdentifierDeclType	const char *		906257	0					
ANR	906263	Identifier	unknown		906257	1					
ANR	906264	AssignmentExpression	"* unknown = ""UNKNOWN"""		906257	2		=			
ANR	906265	Identifier	unknown		906257	0					
ANR	906266	PrimaryExpression	"""UNKNOWN"""		906257	1					
ANR	906267	IdentifierDeclStatement	const char * resource = unknown ;	4946:1:106578:106609	906257	1	True				
ANR	906268	IdentifierDecl	* resource = unknown		906257	0					
ANR	906269	IdentifierDeclType	const char *		906257	0					
ANR	906270	Identifier	resource		906257	1					
ANR	906271	AssignmentExpression	* resource = unknown		906257	2		=			
ANR	906272	Identifier	unknown		906257	0					
ANR	906273	Identifier	unknown		906257	1					
ANR	906274	IdentifierDeclStatement	const char * job = unknown ;	4947:1:106612:106638	906257	2	True				
ANR	906275	IdentifierDecl	* job = unknown		906257	0					
ANR	906276	IdentifierDeclType	const char *		906257	0					
ANR	906277	Identifier	job		906257	1					
ANR	906278	AssignmentExpression	* job = unknown		906257	2		=			
ANR	906279	Identifier	unknown		906257	0					
ANR	906280	Identifier	unknown		906257	1					
ANR	906281	IdentifierDeclStatement	"int retval = fprintf ( file , ""Job submitted to grid resource\\n"" ) ;"	4949:1:106642:106705	906257	3	True				
ANR	906282	IdentifierDecl	"retval = fprintf ( file , ""Job submitted to grid resource\\n"" )"		906257	0					
ANR	906283	IdentifierDeclType	int		906257	0					
ANR	906284	Identifier	retval		906257	1					
ANR	906285	AssignmentExpression	"retval = fprintf ( file , ""Job submitted to grid resource\\n"" )"		906257	2		=			
ANR	906286	Identifier	retval		906257	0					
ANR	906287	CallExpression	"fprintf ( file , ""Job submitted to grid resource\\n"" )"		906257	1					
ANR	906288	Callee	fprintf		906257	0					
ANR	906289	Identifier	fprintf		906257	0					
ANR	906290	ArgumentList	file		906257	1					
ANR	906291	Argument	file		906257	0					
ANR	906292	Identifier	file		906257	0					
ANR	906293	Argument	"""Job submitted to grid resource\\n"""		906257	1					
ANR	906294	PrimaryExpression	"""Job submitted to grid resource\\n"""		906257	0					
ANR	906295	IfStatement	if ( retval < 0 )		906257	4					
ANR	906296	Condition	retval < 0	4950:5:106712:106721	906257	0	True				
ANR	906297	RelationalExpression	retval < 0		906257	0		<			
ANR	906298	Identifier	retval		906257	0					
ANR	906299	PrimaryExpression	0		906257	1					
ANR	906300	CompoundStatement		8:1:184:184	906257	1					
ANR	906301	ReturnStatement	return 0 ;	4952:2:106729:106737	906257	0	True				
ANR	906302	PrimaryExpression	0		906257	0					
ANR	906303	IfStatement	if ( resourceName )		906257	5					
ANR	906304	Condition	resourceName	4955:6:106749:106760	906257	0	True				
ANR	906305	Identifier	resourceName		906257	0					
ANR	906306	ExpressionStatement	resource = resourceName	4955:21:106764:106787	906257	1	True				
ANR	906307	AssignmentExpression	resource = resourceName		906257	0		=			
ANR	906308	Identifier	resource		906257	0					
ANR	906309	Identifier	resourceName		906257	1					
ANR	906310	IfStatement	if ( jobId )		906257	6					
ANR	906311	Condition	jobId	4956:6:106795:106799	906257	0	True				
ANR	906312	Identifier	jobId		906257	0					
ANR	906313	ExpressionStatement	job = jobId	4956:14:106803:106814	906257	1	True				
ANR	906314	AssignmentExpression	job = jobId		906257	0		=			
ANR	906315	Identifier	job		906257	0					
ANR	906316	Identifier	jobId		906257	1					
ANR	906317	ExpressionStatement	"retval = fprintf ( file , ""    GridResource: %.8191s\\n"" , resource )"	4958:1:106818:106883	906257	7	True				
ANR	906318	AssignmentExpression	"retval = fprintf ( file , ""    GridResource: %.8191s\\n"" , resource )"		906257	0		=			
ANR	906319	Identifier	retval		906257	0					
ANR	906320	CallExpression	"fprintf ( file , ""    GridResource: %.8191s\\n"" , resource )"		906257	1					
ANR	906321	Callee	fprintf		906257	0					
ANR	906322	Identifier	fprintf		906257	0					
ANR	906323	ArgumentList	file		906257	1					
ANR	906324	Argument	file		906257	0					
ANR	906325	Identifier	file		906257	0					
ANR	906326	Argument	"""    GridResource: %.8191s\\n"""		906257	1					
ANR	906327	PrimaryExpression	"""    GridResource: %.8191s\\n"""		906257	0					
ANR	906328	Argument	resource		906257	2					
ANR	906329	Identifier	resource		906257	0					
ANR	906330	IfStatement	if ( retval < 0 )		906257	8					
ANR	906331	Condition	retval < 0	4959:5:106890:106899	906257	0	True				
ANR	906332	RelationalExpression	retval < 0		906257	0		<			
ANR	906333	Identifier	retval		906257	0					
ANR	906334	PrimaryExpression	0		906257	1					
ANR	906335	CompoundStatement		16:18:362:362	906257	1					
ANR	906336	ReturnStatement	return 0 ;	4960:2:106907:106915	906257	0	True				
ANR	906337	PrimaryExpression	0		906257	0					
ANR	906338	ExpressionStatement	"retval = fprintf ( file , ""    GridJobId: %.8191s\\n"" , job )"	4963:1:106922:106979	906257	9	True				
ANR	906339	AssignmentExpression	"retval = fprintf ( file , ""    GridJobId: %.8191s\\n"" , job )"		906257	0		=			
ANR	906340	Identifier	retval		906257	0					
ANR	906341	CallExpression	"fprintf ( file , ""    GridJobId: %.8191s\\n"" , job )"		906257	1					
ANR	906342	Callee	fprintf		906257	0					
ANR	906343	Identifier	fprintf		906257	0					
ANR	906344	ArgumentList	file		906257	1					
ANR	906345	Argument	file		906257	0					
ANR	906346	Identifier	file		906257	0					
ANR	906347	Argument	"""    GridJobId: %.8191s\\n"""		906257	1					
ANR	906348	PrimaryExpression	"""    GridJobId: %.8191s\\n"""		906257	0					
ANR	906349	Argument	job		906257	2					
ANR	906350	Identifier	job		906257	0					
ANR	906351	IfStatement	if ( retval < 0 )		906257	10					
ANR	906352	Condition	retval < 0	4964:5:106986:106995	906257	0	True				
ANR	906353	RelationalExpression	retval < 0		906257	0		<			
ANR	906354	Identifier	retval		906257	0					
ANR	906355	PrimaryExpression	0		906257	1					
ANR	906356	CompoundStatement		21:18:458:458	906257	1					
ANR	906357	ReturnStatement	return 0 ;	4965:2:107003:107011	906257	0	True				
ANR	906358	PrimaryExpression	0		906257	0					
ANR	906359	ReturnStatement	return ( 1 ) ;	4968:1:107018:107028	906257	11	True				
ANR	906360	PrimaryExpression	1		906257	0					
ANR	906361	ReturnType	int		906257	1					
ANR	906362	Identifier	GridSubmitEvent :: writeEvent		906257	2					
ANR	906363	ParameterList	FILE * file		906257	3					
ANR	906364	Parameter	FILE * file	4943:29:106528:106537	906257	0	True				
ANR	906365	ParameterType	FILE *		906257	0					
ANR	906366	Identifier	file		906257	1					
ANR	906367	CFGEntryNode	ENTRY		906257		True				
ANR	906368	CFGExitNode	EXIT		906257		True				
ANR	906369	Symbol	jobId		906257						
ANR	906370	Symbol	file		906257						
ANR	906371	Symbol	resource		906257						
ANR	906372	Symbol	resourceName		906257						
ANR	906373	Symbol	job		906257						
ANR	906374	Symbol	fprintf		906257						
ANR	906375	Symbol	retval		906257						
ANR	906376	Symbol	unknown		906257						
ANR	906377	Function	GridSubmitEvent :: readEvent	4971:0:107033:107557							
ANR	906378	FunctionDef	GridSubmitEvent :: readEvent (FILE * file)		906377	0					
ANR	906379	CompoundStatement		4973:0:107077:107557	906377	0					
ANR	906380	IdentifierDeclStatement	char s [ 8192 ] ;	4974:1:107080:107092	906377	0	True				
ANR	906381	IdentifierDecl	s [ 8192 ]		906377	0					
ANR	906382	IdentifierDeclType	char [ 8192 ]		906377	0					
ANR	906383	Identifier	s		906377	1					
ANR	906384	PrimaryExpression	8192		906377	2					
ANR	906385	Statement	delete	4976:1:107096:107101	906377	1	True				
ANR	906386	Statement	[	4976:7:107102:107102	906377	2	True				
ANR	906387	Statement	]	4976:8:107103:107103	906377	3	True				
ANR	906388	ExpressionStatement	resourceName	4976:10:107105:107117	906377	4	True				
ANR	906389	Identifier	resourceName		906377	0					
ANR	906390	Statement	delete	4977:1:107120:107125	906377	5	True				
ANR	906391	Statement	[	4977:7:107126:107126	906377	6	True				
ANR	906392	Statement	]	4977:8:107127:107127	906377	7	True				
ANR	906393	ExpressionStatement	jobId	4977:10:107129:107134	906377	8	True				
ANR	906394	Identifier	jobId		906377	0					
ANR	906395	ExpressionStatement	resourceName = NULL	4978:1:107137:107156	906377	9	True				
ANR	906396	AssignmentExpression	resourceName = NULL		906377	0		=			
ANR	906397	Identifier	resourceName		906377	0					
ANR	906398	Identifier	NULL		906377	1					
ANR	906399	ExpressionStatement	jobId = NULL	4979:1:107159:107171	906377	10	True				
ANR	906400	AssignmentExpression	jobId = NULL		906377	0		=			
ANR	906401	Identifier	jobId		906377	0					
ANR	906402	Identifier	NULL		906377	1					
ANR	906403	IdentifierDeclStatement	"int retval = fscanf ( file , ""Job submitted to grid resource\\n"" ) ;"	4980:1:107174:107236	906377	11	True				
ANR	906404	IdentifierDecl	"retval = fscanf ( file , ""Job submitted to grid resource\\n"" )"		906377	0					
ANR	906405	IdentifierDeclType	int		906377	0					
ANR	906406	Identifier	retval		906377	1					
ANR	906407	AssignmentExpression	"retval = fscanf ( file , ""Job submitted to grid resource\\n"" )"		906377	2		=			
ANR	906408	Identifier	retval		906377	0					
ANR	906409	CallExpression	"fscanf ( file , ""Job submitted to grid resource\\n"" )"		906377	1					
ANR	906410	Callee	fscanf		906377	0					
ANR	906411	Identifier	fscanf		906377	0					
ANR	906412	ArgumentList	file		906377	1					
ANR	906413	Argument	file		906377	0					
ANR	906414	Identifier	file		906377	0					
ANR	906415	Argument	"""Job submitted to grid resource\\n"""		906377	1					
ANR	906416	PrimaryExpression	"""Job submitted to grid resource\\n"""		906377	0					
ANR	906417	IfStatement	if ( retval != 0 )		906377	12					
ANR	906418	Condition	retval != 0	4981:8:107246:107256	906377	0	True				
ANR	906419	EqualityExpression	retval != 0		906377	0		!=			
ANR	906420	Identifier	retval		906377	0					
ANR	906421	PrimaryExpression	0		906377	1					
ANR	906422	CompoundStatement		10:4:185:185	906377	1					
ANR	906423	ReturnStatement	return 0 ;	4983:2:107267:107275	906377	0	True				
ANR	906424	PrimaryExpression	0		906377	0					
ANR	906425	ExpressionStatement	s [ 0 ] = '\\0'	4985:1:107284:107295	906377	13	True				
ANR	906426	AssignmentExpression	s [ 0 ] = '\\0'		906377	0		=			
ANR	906427	ArrayIndexing	s [ 0 ]		906377	0					
ANR	906428	Identifier	s		906377	0					
ANR	906429	PrimaryExpression	0		906377	1					
ANR	906430	PrimaryExpression	'\\0'		906377	1					
ANR	906431	ExpressionStatement	"retval = fscanf ( file , ""    GridResource: %8191[^\\n]\\n"" , s )"	4986:1:107298:107358	906377	14	True				
ANR	906432	AssignmentExpression	"retval = fscanf ( file , ""    GridResource: %8191[^\\n]\\n"" , s )"		906377	0		=			
ANR	906433	Identifier	retval		906377	0					
ANR	906434	CallExpression	"fscanf ( file , ""    GridResource: %8191[^\\n]\\n"" , s )"		906377	1					
ANR	906435	Callee	fscanf		906377	0					
ANR	906436	Identifier	fscanf		906377	0					
ANR	906437	ArgumentList	file		906377	1					
ANR	906438	Argument	file		906377	0					
ANR	906439	Identifier	file		906377	0					
ANR	906440	Argument	"""    GridResource: %8191[^\\n]\\n"""		906377	1					
ANR	906441	PrimaryExpression	"""    GridResource: %8191[^\\n]\\n"""		906377	0					
ANR	906442	Argument	s		906377	2					
ANR	906443	Identifier	s		906377	0					
ANR	906444	IfStatement	if ( retval != 1 )		906377	15					
ANR	906445	Condition	retval != 1	4987:6:107366:107376	906377	0	True				
ANR	906446	EqualityExpression	retval != 1		906377	0		!=			
ANR	906447	Identifier	retval		906377	0					
ANR	906448	PrimaryExpression	1		906377	1					
ANR	906449	CompoundStatement		16:1:303:303	906377	1					
ANR	906450	ReturnStatement	return 0 ;	4989:2:107385:107393	906377	0	True				
ANR	906451	PrimaryExpression	0		906377	0					
ANR	906452	ExpressionStatement	resourceName = strnewp ( s )	4991:1:107399:107424	906377	16	True				
ANR	906453	AssignmentExpression	resourceName = strnewp ( s )		906377	0		=			
ANR	906454	Identifier	resourceName		906377	0					
ANR	906455	CallExpression	strnewp ( s )		906377	1					
ANR	906456	Callee	strnewp		906377	0					
ANR	906457	Identifier	strnewp		906377	0					
ANR	906458	ArgumentList	s		906377	1					
ANR	906459	Argument	s		906377	0					
ANR	906460	Identifier	s		906377	0					
ANR	906461	ExpressionStatement	"retval = fscanf ( file , ""    GridJobId: %8191[^\\n]\\n"" , s )"	4992:1:107427:107484	906377	17	True				
ANR	906462	AssignmentExpression	"retval = fscanf ( file , ""    GridJobId: %8191[^\\n]\\n"" , s )"		906377	0		=			
ANR	906463	Identifier	retval		906377	0					
ANR	906464	CallExpression	"fscanf ( file , ""    GridJobId: %8191[^\\n]\\n"" , s )"		906377	1					
ANR	906465	Callee	fscanf		906377	0					
ANR	906466	Identifier	fscanf		906377	0					
ANR	906467	ArgumentList	file		906377	1					
ANR	906468	Argument	file		906377	0					
ANR	906469	Identifier	file		906377	0					
ANR	906470	Argument	"""    GridJobId: %8191[^\\n]\\n"""		906377	1					
ANR	906471	PrimaryExpression	"""    GridJobId: %8191[^\\n]\\n"""		906377	0					
ANR	906472	Argument	s		906377	2					
ANR	906473	Identifier	s		906377	0					
ANR	906474	IfStatement	if ( retval != 1 )		906377	18					
ANR	906475	Condition	retval != 1	4993:6:107492:107502	906377	0	True				
ANR	906476	EqualityExpression	retval != 1		906377	0		!=			
ANR	906477	Identifier	retval		906377	0					
ANR	906478	PrimaryExpression	1		906377	1					
ANR	906479	CompoundStatement		22:1:429:429	906377	1					
ANR	906480	ReturnStatement	return 0 ;	4995:2:107511:107519	906377	0	True				
ANR	906481	PrimaryExpression	0		906377	0					
ANR	906482	ExpressionStatement	jobId = strnewp ( s )	4997:1:107525:107543	906377	19	True				
ANR	906483	AssignmentExpression	jobId = strnewp ( s )		906377	0		=			
ANR	906484	Identifier	jobId		906377	0					
ANR	906485	CallExpression	strnewp ( s )		906377	1					
ANR	906486	Callee	strnewp		906377	0					
ANR	906487	Identifier	strnewp		906377	0					
ANR	906488	ArgumentList	s		906377	1					
ANR	906489	Argument	s		906377	0					
ANR	906490	Identifier	s		906377	0					
ANR	906491	ReturnStatement	return 1 ;	4999:1:107547:107555	906377	20	True				
ANR	906492	PrimaryExpression	1		906377	0					
ANR	906493	ReturnType	int		906377	1					
ANR	906494	Identifier	GridSubmitEvent :: readEvent		906377	2					
ANR	906495	ParameterList	FILE * file		906377	3					
ANR	906496	Parameter	FILE * file	4972:28:107065:107074	906377	0	True				
ANR	906497	ParameterType	FILE *		906377	0					
ANR	906498	Identifier	file		906377	1					
ANR	906499	CFGEntryNode	ENTRY		906377		True				
ANR	906500	CFGExitNode	EXIT		906377		True				
ANR	906501	Symbol	jobId		906377						
ANR	906502	Symbol	fscanf		906377						
ANR	906503	Symbol	file		906377						
ANR	906504	Symbol	s		906377						
ANR	906505	Symbol	NULL		906377						
ANR	906506	Symbol	strnewp		906377						
ANR	906507	Symbol	resourceName		906377						
ANR	906508	Symbol	* s		906377						
ANR	906509	Symbol	retval		906377						
ANR	906510	Function	GridSubmitEvent :: toClassAd	5002:0:107560:107991							
ANR	906511	FunctionDef	GridSubmitEvent :: toClassAd ()		906510	0					
ANR	906512	CompoundStatement		5004:0:107602:107991	906510	0					
ANR	906513	IdentifierDeclStatement	ClassAd * myad = ULogEvent :: toClassAd ( ) ;	5005:1:107605:107643	906510	0	True				
ANR	906514	IdentifierDecl	* myad = ULogEvent :: toClassAd ( )		906510	0					
ANR	906515	IdentifierDeclType	ClassAd *		906510	0					
ANR	906516	Identifier	myad		906510	1					
ANR	906517	AssignmentExpression	* myad = ULogEvent :: toClassAd ( )		906510	2		=			
ANR	906518	Identifier	myad		906510	0					
ANR	906519	CallExpression	ULogEvent :: toClassAd ( )		906510	1					
ANR	906520	Callee	ULogEvent :: toClassAd		906510	0					
ANR	906521	Identifier	ULogEvent :: toClassAd		906510	0					
ANR	906522	ArgumentList			906510	1					
ANR	906523	IfStatement	if ( ! myad )		906510	1					
ANR	906524	Condition	! myad	5006:5:107650:107654	906510	0	True				
ANR	906525	UnaryOperationExpression	! myad		906510	0					
ANR	906526	UnaryOperator	!		906510	0					
ANR	906527	Identifier	myad		906510	1					
ANR	906528	ReturnStatement	return NULL ;	5006:13:107658:107669	906510	1	True				
ANR	906529	Identifier	NULL		906510	0					
ANR	906530	IfStatement	if ( resourceName && resourceName [ 0 ] )		906510	2					
ANR	906531	Condition	resourceName && resourceName [ 0 ]	5008:5:107677:107707	906510	0	True				
ANR	906532	AndExpression	resourceName && resourceName [ 0 ]		906510	0		&&			
ANR	906533	Identifier	resourceName		906510	0					
ANR	906534	ArrayIndexing	resourceName [ 0 ]		906510	1					
ANR	906535	Identifier	resourceName		906510	0					
ANR	906536	PrimaryExpression	0		906510	1					
ANR	906537	CompoundStatement		6:2:112:125	906510	1					
ANR	906538	IdentifierDeclStatement	MyString buf2 ;	5009:2:107715:107728	906510	0	True				
ANR	906539	IdentifierDecl	buf2		906510	0					
ANR	906540	IdentifierDeclType	MyString		906510	0					
ANR	906541	Identifier	buf2		906510	1					
ANR	906542	ExpressionStatement	"buf2 . sprintf ( ""GridResource = \\""%s\\"""" , resourceName )"	5010:2:107732:107782	906510	1	True				
ANR	906543	CallExpression	"buf2 . sprintf ( ""GridResource = \\""%s\\"""" , resourceName )"		906510	0					
ANR	906544	Callee	buf2 . sprintf		906510	0					
ANR	906545	MemberAccess	buf2 . sprintf		906510	0					
ANR	906546	Identifier	buf2		906510	0					
ANR	906547	Identifier	sprintf		906510	1					
ANR	906548	ArgumentList	"""GridResource = \\""%s\\"""""		906510	1					
ANR	906549	Argument	"""GridResource = \\""%s\\"""""		906510	0					
ANR	906550	PrimaryExpression	"""GridResource = \\""%s\\"""""		906510	0					
ANR	906551	Argument	resourceName		906510	1					
ANR	906552	Identifier	resourceName		906510	0					
ANR	906553	IfStatement	if ( ! myad -> Insert ( buf2 . Value ( ) ) )		906510	2					
ANR	906554	Condition	! myad -> Insert ( buf2 . Value ( ) )	5011:6:107790:107816	906510	0	True				
ANR	906555	UnaryOperationExpression	! myad -> Insert ( buf2 . Value ( ) )		906510	0					
ANR	906556	UnaryOperator	!		906510	0					
ANR	906557	CallExpression	myad -> Insert ( buf2 . Value ( ) )		906510	1					
ANR	906558	Callee	myad -> Insert		906510	0					
ANR	906559	PtrMemberAccess	myad -> Insert		906510	0					
ANR	906560	Identifier	myad		906510	0					
ANR	906561	Identifier	Insert		906510	1					
ANR	906562	ArgumentList	buf2 . Value ( )		906510	1					
ANR	906563	Argument	buf2 . Value ( )		906510	0					
ANR	906564	CallExpression	buf2 . Value ( )		906510	0					
ANR	906565	Callee	buf2 . Value		906510	0					
ANR	906566	MemberAccess	buf2 . Value		906510	0					
ANR	906567	Identifier	buf2		906510	0					
ANR	906568	Identifier	Value		906510	1					
ANR	906569	ArgumentList			906510	1					
ANR	906570	ReturnStatement	return NULL ;	5011:36:107820:107831	906510	1	True				
ANR	906571	Identifier	NULL		906510	0					
ANR	906572	IfStatement	if ( jobId && jobId [ 0 ] )		906510	3					
ANR	906573	Condition	jobId && jobId [ 0 ]	5013:5:107841:107857	906510	0	True				
ANR	906574	AndExpression	jobId && jobId [ 0 ]		906510	0		&&			
ANR	906575	Identifier	jobId		906510	0					
ANR	906576	ArrayIndexing	jobId [ 0 ]		906510	1					
ANR	906577	Identifier	jobId		906510	0					
ANR	906578	PrimaryExpression	0		906510	1					
ANR	906579	CompoundStatement		11:2:262:275	906510	1					
ANR	906580	IdentifierDeclStatement	MyString buf3 ;	5014:2:107865:107878	906510	0	True				
ANR	906581	IdentifierDecl	buf3		906510	0					
ANR	906582	IdentifierDeclType	MyString		906510	0					
ANR	906583	Identifier	buf3		906510	1					
ANR	906584	ExpressionStatement	"buf3 . sprintf ( ""GridJobId = \\""%s\\"""" , jobId )"	5015:2:107882:107922	906510	1	True				
ANR	906585	CallExpression	"buf3 . sprintf ( ""GridJobId = \\""%s\\"""" , jobId )"		906510	0					
ANR	906586	Callee	buf3 . sprintf		906510	0					
ANR	906587	MemberAccess	buf3 . sprintf		906510	0					
ANR	906588	Identifier	buf3		906510	0					
ANR	906589	Identifier	sprintf		906510	1					
ANR	906590	ArgumentList	"""GridJobId = \\""%s\\"""""		906510	1					
ANR	906591	Argument	"""GridJobId = \\""%s\\"""""		906510	0					
ANR	906592	PrimaryExpression	"""GridJobId = \\""%s\\"""""		906510	0					
ANR	906593	Argument	jobId		906510	1					
ANR	906594	Identifier	jobId		906510	0					
ANR	906595	IfStatement	if ( ! myad -> Insert ( buf3 . Value ( ) ) )		906510	2					
ANR	906596	Condition	! myad -> Insert ( buf3 . Value ( ) )	5016:6:107930:107956	906510	0	True				
ANR	906597	UnaryOperationExpression	! myad -> Insert ( buf3 . Value ( ) )		906510	0					
ANR	906598	UnaryOperator	!		906510	0					
ANR	906599	CallExpression	myad -> Insert ( buf3 . Value ( ) )		906510	1					
ANR	906600	Callee	myad -> Insert		906510	0					
ANR	906601	PtrMemberAccess	myad -> Insert		906510	0					
ANR	906602	Identifier	myad		906510	0					
ANR	906603	Identifier	Insert		906510	1					
ANR	906604	ArgumentList	buf3 . Value ( )		906510	1					
ANR	906605	Argument	buf3 . Value ( )		906510	0					
ANR	906606	CallExpression	buf3 . Value ( )		906510	0					
ANR	906607	Callee	buf3 . Value		906510	0					
ANR	906608	MemberAccess	buf3 . Value		906510	0					
ANR	906609	Identifier	buf3		906510	0					
ANR	906610	Identifier	Value		906510	1					
ANR	906611	ArgumentList			906510	1					
ANR	906612	ReturnStatement	return NULL ;	5016:36:107960:107971	906510	1	True				
ANR	906613	Identifier	NULL		906510	0					
ANR	906614	ReturnStatement	return myad ;	5019:1:107978:107989	906510	4	True				
ANR	906615	Identifier	myad		906510	0					
ANR	906616	ReturnType	ClassAd *		906510	1					
ANR	906617	Identifier	GridSubmitEvent :: toClassAd		906510	2					
ANR	906618	ParameterList			906510	3					
ANR	906619	CFGEntryNode	ENTRY		906510		True				
ANR	906620	CFGExitNode	EXIT		906510		True				
ANR	906621	Symbol	NULL		906510						
ANR	906622	Symbol	* myad		906510						
ANR	906623	Symbol	* jobId		906510						
ANR	906624	Symbol	myad -> Insert		906510						
ANR	906625	Symbol	resourceName		906510						
ANR	906626	Symbol	buf3 . Value		906510						
ANR	906627	Symbol	ULogEvent :: toClassAd		906510						
ANR	906628	Symbol	buf2 . Value		906510						
ANR	906629	Symbol	buf3		906510						
ANR	906630	Symbol	buf2		906510						
ANR	906631	Symbol	jobId		906510						
ANR	906632	Symbol	* resourceName		906510						
ANR	906633	Symbol	myad		906510						
ANR	906634	Function	GridSubmitEvent :: initFromClassAd	5022:0:107994:108621							
ANR	906635	FunctionDef	GridSubmitEvent :: initFromClassAd (ClassAd * ad)		906634	0					
ANR	906636	CompoundStatement		5024:0:108045:108621	906634	0					
ANR	906637	ExpressionStatement	ULogEvent :: initFromClassAd ( ad )	5025:1:108048:108078	906634	0	True				
ANR	906638	CallExpression	ULogEvent :: initFromClassAd ( ad )		906634	0					
ANR	906639	Callee	ULogEvent :: initFromClassAd		906634	0					
ANR	906640	Identifier	ULogEvent :: initFromClassAd		906634	0					
ANR	906641	ArgumentList	ad		906634	1					
ANR	906642	Argument	ad		906634	0					
ANR	906643	Identifier	ad		906634	0					
ANR	906644	IfStatement	if ( ! ad )		906634	1					
ANR	906645	Condition	! ad	5027:5:108086:108088	906634	0	True				
ANR	906646	UnaryOperationExpression	! ad		906634	0					
ANR	906647	UnaryOperator	!		906634	0					
ANR	906648	Identifier	ad		906634	1					
ANR	906649	ReturnStatement	return ;	5027:11:108092:108098	906634	1	True				
ANR	906650	IdentifierDeclStatement	char * mallocstr = NULL ;	5030:1:108175:108197	906634	2	True				
ANR	906651	IdentifierDecl	* mallocstr = NULL		906634	0					
ANR	906652	IdentifierDeclType	char *		906634	0					
ANR	906653	Identifier	mallocstr		906634	1					
ANR	906654	AssignmentExpression	* mallocstr = NULL		906634	2		=			
ANR	906655	Identifier	NULL		906634	0					
ANR	906656	Identifier	NULL		906634	1					
ANR	906657	ExpressionStatement	"ad -> LookupString ( ""GridResource"" , & mallocstr )"	5031:1:108200:108244	906634	3	True				
ANR	906658	CallExpression	"ad -> LookupString ( ""GridResource"" , & mallocstr )"		906634	0					
ANR	906659	Callee	ad -> LookupString		906634	0					
ANR	906660	PtrMemberAccess	ad -> LookupString		906634	0					
ANR	906661	Identifier	ad		906634	0					
ANR	906662	Identifier	LookupString		906634	1					
ANR	906663	ArgumentList	"""GridResource"""		906634	1					
ANR	906664	Argument	"""GridResource"""		906634	0					
ANR	906665	PrimaryExpression	"""GridResource"""		906634	0					
ANR	906666	Argument	& mallocstr		906634	1					
ANR	906667	UnaryOperationExpression	& mallocstr		906634	0					
ANR	906668	UnaryOperator	&		906634	0					
ANR	906669	Identifier	mallocstr		906634	1					
ANR	906670	IfStatement	if ( mallocstr )		906634	4					
ANR	906671	Condition	mallocstr	5032:5:108251:108259	906634	0	True				
ANR	906672	Identifier	mallocstr		906634	0					
ANR	906673	CompoundStatement		9:17:217:217	906634	1					
ANR	906674	ExpressionStatement	resourceName = new char [ strlen ( mallocstr ) + 1 ]	5033:2:108267:108313	906634	0	True				
ANR	906675	AssignmentExpression	resourceName = new char [ strlen ( mallocstr ) + 1 ]		906634	0		=			
ANR	906676	Identifier	resourceName		906634	0					
ANR	906677	AdditiveExpression	strlen ( mallocstr ) + 1		906634	1		+			
ANR	906678	CallExpression	strlen ( mallocstr )		906634	0					
ANR	906679	Callee	strlen		906634	0					
ANR	906680	Identifier	strlen		906634	0					
ANR	906681	ArgumentList	mallocstr		906634	1					
ANR	906682	Argument	mallocstr		906634	0					
ANR	906683	Identifier	mallocstr		906634	0					
ANR	906684	PrimaryExpression	1		906634	1					
ANR	906685	ExpressionStatement	"strcpy ( resourceName , mallocstr )"	5034:2:108317:108348	906634	1	True				
ANR	906686	CallExpression	"strcpy ( resourceName , mallocstr )"		906634	0					
ANR	906687	Callee	strcpy		906634	0					
ANR	906688	Identifier	strcpy		906634	0					
ANR	906689	ArgumentList	resourceName		906634	1					
ANR	906690	Argument	resourceName		906634	0					
ANR	906691	Identifier	resourceName		906634	0					
ANR	906692	Argument	mallocstr		906634	1					
ANR	906693	Identifier	mallocstr		906634	0					
ANR	906694	ExpressionStatement	free ( mallocstr )	5035:2:108352:108367	906634	2	True				
ANR	906695	CallExpression	free ( mallocstr )		906634	0					
ANR	906696	Callee	free		906634	0					
ANR	906697	Identifier	free		906634	0					
ANR	906698	ArgumentList	mallocstr		906634	1					
ANR	906699	Argument	mallocstr		906634	0					
ANR	906700	Identifier	mallocstr		906634	0					
ANR	906701	ExpressionStatement	mallocstr = NULL	5039:1:108447:108463	906634	5	True				
ANR	906702	AssignmentExpression	mallocstr = NULL		906634	0		=			
ANR	906703	Identifier	mallocstr		906634	0					
ANR	906704	Identifier	NULL		906634	1					
ANR	906705	ExpressionStatement	"ad -> LookupString ( ""GridJobId"" , & mallocstr )"	5040:1:108466:108507	906634	6	True				
ANR	906706	CallExpression	"ad -> LookupString ( ""GridJobId"" , & mallocstr )"		906634	0					
ANR	906707	Callee	ad -> LookupString		906634	0					
ANR	906708	PtrMemberAccess	ad -> LookupString		906634	0					
ANR	906709	Identifier	ad		906634	0					
ANR	906710	Identifier	LookupString		906634	1					
ANR	906711	ArgumentList	"""GridJobId"""		906634	1					
ANR	906712	Argument	"""GridJobId"""		906634	0					
ANR	906713	PrimaryExpression	"""GridJobId"""		906634	0					
ANR	906714	Argument	& mallocstr		906634	1					
ANR	906715	UnaryOperationExpression	& mallocstr		906634	0					
ANR	906716	UnaryOperator	&		906634	0					
ANR	906717	Identifier	mallocstr		906634	1					
ANR	906718	IfStatement	if ( mallocstr )		906634	7					
ANR	906719	Condition	mallocstr	5041:5:108514:108522	906634	0	True				
ANR	906720	Identifier	mallocstr		906634	0					
ANR	906721	CompoundStatement		18:17:480:480	906634	1					
ANR	906722	ExpressionStatement	jobId = new char [ strlen ( mallocstr ) + 1 ]	5042:2:108530:108569	906634	0	True				
ANR	906723	AssignmentExpression	jobId = new char [ strlen ( mallocstr ) + 1 ]		906634	0		=			
ANR	906724	Identifier	jobId		906634	0					
ANR	906725	AdditiveExpression	strlen ( mallocstr ) + 1		906634	1		+			
ANR	906726	CallExpression	strlen ( mallocstr )		906634	0					
ANR	906727	Callee	strlen		906634	0					
ANR	906728	Identifier	strlen		906634	0					
ANR	906729	ArgumentList	mallocstr		906634	1					
ANR	906730	Argument	mallocstr		906634	0					
ANR	906731	Identifier	mallocstr		906634	0					
ANR	906732	PrimaryExpression	1		906634	1					
ANR	906733	ExpressionStatement	"strcpy ( jobId , mallocstr )"	5043:2:108573:108597	906634	1	True				
ANR	906734	CallExpression	"strcpy ( jobId , mallocstr )"		906634	0					
ANR	906735	Callee	strcpy		906634	0					
ANR	906736	Identifier	strcpy		906634	0					
ANR	906737	ArgumentList	jobId		906634	1					
ANR	906738	Argument	jobId		906634	0					
ANR	906739	Identifier	jobId		906634	0					
ANR	906740	Argument	mallocstr		906634	1					
ANR	906741	Identifier	mallocstr		906634	0					
ANR	906742	ExpressionStatement	free ( mallocstr )	5044:2:108601:108616	906634	2	True				
ANR	906743	CallExpression	free ( mallocstr )		906634	0					
ANR	906744	Callee	free		906634	0					
ANR	906745	Identifier	free		906634	0					
ANR	906746	ArgumentList	mallocstr		906634	1					
ANR	906747	Argument	mallocstr		906634	0					
ANR	906748	Identifier	mallocstr		906634	0					
ANR	906749	ReturnType	void		906634	1					
ANR	906750	Identifier	GridSubmitEvent :: initFromClassAd		906634	2					
ANR	906751	ParameterList	ClassAd * ad		906634	3					
ANR	906752	Parameter	ClassAd * ad	5023:33:108032:108042	906634	0	True				
ANR	906753	ParameterType	ClassAd *		906634	0					
ANR	906754	Identifier	ad		906634	1					
ANR	906755	CFGEntryNode	ENTRY		906634		True				
ANR	906756	CFGExitNode	EXIT		906634		True				
ANR	906757	Symbol	strlen		906634						
ANR	906758	Symbol	jobId		906634						
ANR	906759	Symbol	& mallocstr		906634						
ANR	906760	Symbol	ad		906634						
ANR	906761	Symbol	NULL		906634						
ANR	906762	Symbol	mallocstr		906634						
ANR	906763	Symbol	resourceName		906634						
ANR	906764	Function	JobAdInformationEvent :: JobAdInformationEvent	5049:0:108665:108773							
ANR	906765	FunctionDef	JobAdInformationEvent :: JobAdInformationEvent ()		906764	0					
ANR	906766	CompoundStatement		5050:0:108716:108773	906764	0					
ANR	906767	ExpressionStatement	jobad = NULL	5051:1:108719:108731	906764	0	True				
ANR	906768	AssignmentExpression	jobad = NULL		906764	0		=			
ANR	906769	Identifier	jobad		906764	0					
ANR	906770	Identifier	NULL		906764	1					
ANR	906771	ExpressionStatement	eventNumber = ULOG_JOB_AD_INFORMATION	5052:1:108734:108771	906764	1	True				
ANR	906772	AssignmentExpression	eventNumber = ULOG_JOB_AD_INFORMATION		906764	0		=			
ANR	906773	Identifier	eventNumber		906764	0					
ANR	906774	Identifier	ULOG_JOB_AD_INFORMATION		906764	1					
ANR	906775	Identifier	JobAdInformationEvent :: JobAdInformationEvent		906764	1					
ANR	906776	ParameterList			906764	2					
ANR	906777	CFGEntryNode	ENTRY		906764		True				
ANR	906778	CFGExitNode	EXIT		906764		True				
ANR	906779	Symbol	NULL		906764						
ANR	906780	Symbol	eventNumber		906764						
ANR	906781	Symbol	jobad		906764						
ANR	906782	Symbol	ULOG_JOB_AD_INFORMATION		906764						
ANR	906783	Function	JobAdInformationEvent :: ~JobAdInformationEvent	5055:0:108776:108858							
ANR	906784	FunctionDef	JobAdInformationEvent :: ~JobAdInformationEvent ()		906783	0					
ANR	906785	CompoundStatement		5056:0:108828:108858	906783	0					
ANR	906786	IfStatement	if ( jobad )		906783	0					
ANR	906787	Condition	jobad	5057:6:108836:108840	906783	0	True				
ANR	906788	Identifier	jobad		906783	0					
ANR	906789	Statement	delete	5057:14:108844:108849	906783	1	True				
ANR	906790	ExpressionStatement	jobad	5057:21:108851:108856	906783	1	True				
ANR	906791	Identifier	jobad		906783	0					
ANR	906792	Identifier	JobAdInformationEvent :: ~JobAdInformationEvent		906783	1					
ANR	906793	ParameterList			906783	2					
ANR	906794	CFGEntryNode	ENTRY		906783		True				
ANR	906795	CFGExitNode	EXIT		906783		True				
ANR	906796	Symbol	jobad		906783						
ANR	906797	Function	JobAdInformationEvent :: writeEvent	5060:0:108861:108945							
ANR	906798	FunctionDef	JobAdInformationEvent :: writeEvent (FILE * file)		906797	0					
ANR	906799	CompoundStatement		5062:0:108911:108945	906797	0					
ANR	906800	ReturnStatement	"return writeEvent ( file , jobad ) ;"	5063:1:108914:108943	906797	0	True				
ANR	906801	CallExpression	"writeEvent ( file , jobad )"		906797	0					
ANR	906802	Callee	writeEvent		906797	0					
ANR	906803	Identifier	writeEvent		906797	0					
ANR	906804	ArgumentList	file		906797	1					
ANR	906805	Argument	file		906797	0					
ANR	906806	Identifier	file		906797	0					
ANR	906807	Argument	jobad		906797	1					
ANR	906808	Identifier	jobad		906797	0					
ANR	906809	ReturnType	int		906797	1					
ANR	906810	Identifier	JobAdInformationEvent :: writeEvent		906797	2					
ANR	906811	ParameterList	FILE * file		906797	3					
ANR	906812	Parameter	FILE * file	5061:34:108899:108908	906797	0	True				
ANR	906813	ParameterType	FILE *		906797	0					
ANR	906814	Identifier	file		906797	1					
ANR	906815	CFGEntryNode	ENTRY		906797		True				
ANR	906816	CFGExitNode	EXIT		906797		True				
ANR	906817	Symbol	file		906797						
ANR	906818	Symbol	writeEvent		906797						
ANR	906819	Symbol	jobad		906797						
ANR	906820	Function	JobAdInformationEvent :: writeEvent	5066:0:108948:109203							
ANR	906821	FunctionDef	"JobAdInformationEvent :: writeEvent (FILE * file , ClassAd * jobad_arg)"		906820	0					
ANR	906822	CompoundStatement		5068:0:109018:109203	906820	0					
ANR	906823	IdentifierDeclStatement	int retval = 0 ;	5069:4:109024:109038	906820	0	True				
ANR	906824	IdentifierDecl	retval = 0		906820	0					
ANR	906825	IdentifierDeclType	int		906820	0					
ANR	906826	Identifier	retval		906820	1					
ANR	906827	AssignmentExpression	retval = 0		906820	2		=			
ANR	906828	Identifier	retval		906820	0					
ANR	906829	PrimaryExpression	0		906820	1					
ANR	906830	ExpressionStatement	"fprintf ( file , ""Job ad information event triggered.\\n"" )"	5071:1:109068:109121	906820	1	True				
ANR	906831	CallExpression	"fprintf ( file , ""Job ad information event triggered.\\n"" )"		906820	0					
ANR	906832	Callee	fprintf		906820	0					
ANR	906833	Identifier	fprintf		906820	0					
ANR	906834	ArgumentList	file		906820	1					
ANR	906835	Argument	file		906820	0					
ANR	906836	Identifier	file		906820	0					
ANR	906837	Argument	"""Job ad information event triggered.\\n"""		906820	1					
ANR	906838	PrimaryExpression	"""Job ad information event triggered.\\n"""		906820	0					
ANR	906839	IfStatement	if ( jobad_arg )		906820	2					
ANR	906840	Condition	jobad_arg	5073:6:109130:109138	906820	0	True				
ANR	906841	Identifier	jobad_arg		906820	0					
ANR	906842	CompoundStatement		6:18:123:123	906820	1					
ANR	906843	ExpressionStatement	retval = jobad_arg -> fPrint ( file )	5074:2:109146:109178	906820	0	True				
ANR	906844	AssignmentExpression	retval = jobad_arg -> fPrint ( file )		906820	0		=			
ANR	906845	Identifier	retval		906820	0					
ANR	906846	CallExpression	jobad_arg -> fPrint ( file )		906820	1					
ANR	906847	Callee	jobad_arg -> fPrint		906820	0					
ANR	906848	PtrMemberAccess	jobad_arg -> fPrint		906820	0					
ANR	906849	Identifier	jobad_arg		906820	0					
ANR	906850	Identifier	fPrint		906820	1					
ANR	906851	ArgumentList	file		906820	1					
ANR	906852	Argument	file		906820	0					
ANR	906853	Identifier	file		906820	0					
ANR	906854	ReturnStatement	return retval ;	5077:4:109188:109201	906820	3	True				
ANR	906855	Identifier	retval		906820	0					
ANR	906856	ReturnType	int		906820	1					
ANR	906857	Identifier	JobAdInformationEvent :: writeEvent		906820	2					
ANR	906858	ParameterList	"FILE * file , ClassAd * jobad_arg"		906820	3					
ANR	906859	Parameter	FILE * file	5067:34:108986:108995	906820	0	True				
ANR	906860	ParameterType	FILE *		906820	0					
ANR	906861	Identifier	file		906820	1					
ANR	906862	Parameter	ClassAd * jobad_arg	5067:46:108998:109015	906820	1	True				
ANR	906863	ParameterType	ClassAd *		906820	0					
ANR	906864	Identifier	jobad_arg		906820	1					
ANR	906865	CFGEntryNode	ENTRY		906820		True				
ANR	906866	CFGExitNode	EXIT		906820		True				
ANR	906867	Symbol	file		906820						
ANR	906868	Symbol	* jobad_arg		906820						
ANR	906869	Symbol	jobad_arg		906820						
ANR	906870	Symbol	retval		906820						
ANR	906871	Symbol	jobad_arg -> fPrint		906820						
ANR	906872	Function	JobAdInformationEvent :: readEvent	5080:0:109206:109752							
ANR	906873	FunctionDef	JobAdInformationEvent :: readEvent (FILE * file)		906872	0					
ANR	906874	CompoundStatement		5082:0:109255:109752	906872	0					
ANR	906875	IdentifierDeclStatement	int retval = 0 ;	5083:4:109261:109275	906872	0	True				
ANR	906876	IdentifierDecl	retval = 0		906872	0					
ANR	906877	IdentifierDeclType	int		906872	0					
ANR	906878	Identifier	retval		906872	1					
ANR	906879	AssignmentExpression	retval = 0		906872	2		=			
ANR	906880	Identifier	retval		906872	0					
ANR	906881	PrimaryExpression	0		906872	1					
ANR	906882	IdentifierDeclStatement	"int EndFlag , ErrorFlag , EmptyFlag ;"	5084:1:109303:109336	906872	1	True				
ANR	906883	IdentifierDecl	EndFlag		906872	0					
ANR	906884	IdentifierDeclType	int		906872	0					
ANR	906885	Identifier	EndFlag		906872	1					
ANR	906886	IdentifierDecl	ErrorFlag		906872	1					
ANR	906887	IdentifierDeclType	int		906872	0					
ANR	906888	Identifier	ErrorFlag		906872	1					
ANR	906889	IdentifierDecl	EmptyFlag		906872	2					
ANR	906890	IdentifierDeclType	int		906872	0					
ANR	906891	Identifier	EmptyFlag		906872	1					
ANR	906892	ExpressionStatement	EndFlag = ErrorFlag = EmptyFlag = 0	5086:1:109340:109377	906872	2	True				
ANR	906893	AssignmentExpression	EndFlag = ErrorFlag = EmptyFlag = 0		906872	0		=			
ANR	906894	Identifier	EndFlag		906872	0					
ANR	906895	AssignmentExpression	ErrorFlag = EmptyFlag = 0		906872	1		=			
ANR	906896	Identifier	ErrorFlag		906872	0					
ANR	906897	AssignmentExpression	EmptyFlag = 0		906872	1		=			
ANR	906898	Identifier	EmptyFlag		906872	0					
ANR	906899	PrimaryExpression	0		906872	1					
ANR	906900	IfStatement	"if ( fscanf ( file , ""Job ad information event triggered."" ) == EOF )"		906872	3					
ANR	906901	Condition	"fscanf ( file , ""Job ad information event triggered."" ) == EOF"	5088:5:109385:109442	906872	0	True				
ANR	906902	EqualityExpression	"fscanf ( file , ""Job ad information event triggered."" ) == EOF"		906872	0		==			
ANR	906903	CallExpression	"fscanf ( file , ""Job ad information event triggered."" )"		906872	0					
ANR	906904	Callee	fscanf		906872	0					
ANR	906905	Identifier	fscanf		906872	0					
ANR	906906	ArgumentList	file		906872	1					
ANR	906907	Argument	file		906872	0					
ANR	906908	Identifier	file		906872	0					
ANR	906909	Argument	"""Job ad information event triggered."""		906872	1					
ANR	906910	PrimaryExpression	"""Job ad information event triggered."""		906872	0					
ANR	906911	Identifier	EOF		906872	1					
ANR	906912	CompoundStatement		7:66:190:190	906872	1					
ANR	906913	ReturnStatement	return 0 ;	5089:2:109450:109458	906872	0	True				
ANR	906914	PrimaryExpression	0		906872	0					
ANR	906915	IfStatement	if ( jobad )		906872	4					
ANR	906916	Condition	jobad	5092:6:109470:109474	906872	0	True				
ANR	906917	Identifier	jobad		906872	0					
ANR	906918	Statement	delete	5092:14:109478:109483	906872	1	True				
ANR	906919	ExpressionStatement	jobad	5092:21:109485:109490	906872	5	True				
ANR	906920	Identifier	jobad		906872	0					
ANR	906921	IfStatement	"if ( ! ( jobad = new ClassAd ( file , ""..."" , EndFlag , ErrorFlag , EmptyFlag ) ) )"		906872	6					
ANR	906922	Condition	"! ( jobad = new ClassAd ( file , ""..."" , EndFlag , ErrorFlag , EmptyFlag ) )"	5094:5:109498:109562	906872	0	True				
ANR	906923	UnaryOperationExpression	"! ( jobad = new ClassAd ( file , ""..."" , EndFlag , ErrorFlag , EmptyFlag ) )"		906872	0					
ANR	906924	UnaryOperator	!		906872	0					
ANR	906925	AssignmentExpression	"jobad = new ClassAd ( file , ""..."" , EndFlag , ErrorFlag , EmptyFlag )"		906872	1		=			
ANR	906926	Identifier	jobad		906872	0					
ANR	906927	Expression	"file , ""..."" , EndFlag , ErrorFlag , EmptyFlag"		906872	1					
ANR	906928	Identifier	file		906872	0					
ANR	906929	Expression	"""..."" , EndFlag , ErrorFlag , EmptyFlag"		906872	1					
ANR	906930	PrimaryExpression	"""..."""		906872	0					
ANR	906931	Expression	"EndFlag , ErrorFlag , EmptyFlag"		906872	1					
ANR	906932	Identifier	EndFlag		906872	0					
ANR	906933	Expression	"ErrorFlag , EmptyFlag"		906872	1					
ANR	906934	Identifier	ErrorFlag		906872	0					
ANR	906935	Identifier	EmptyFlag		906872	1					
ANR	906936	CompoundStatement		14:1:311:311	906872	1					
ANR	906937	ReturnStatement	return 0 ;	5097:2:109594:109602	906872	0	True				
ANR	906938	PrimaryExpression	0		906872	0					
ANR	906939	ExpressionStatement	"fseek ( file , - 4 , SEEK_CUR )"	5101:1:109667:109694	906872	7	True				
ANR	906940	CallExpression	"fseek ( file , - 4 , SEEK_CUR )"		906872	0					
ANR	906941	Callee	fseek		906872	0					
ANR	906942	Identifier	fseek		906872	0					
ANR	906943	ArgumentList	file		906872	1					
ANR	906944	Argument	file		906872	0					
ANR	906945	Identifier	file		906872	0					
ANR	906946	Argument	- 4		906872	1					
ANR	906947	UnaryOperationExpression	- 4		906872	0					
ANR	906948	UnaryOperator	-		906872	0					
ANR	906949	PrimaryExpression	4		906872	1					
ANR	906950	Argument	SEEK_CUR		906872	2					
ANR	906951	Identifier	SEEK_CUR		906872	0					
ANR	906952	ExpressionStatement	retval = ! ( ErrorFlag || EmptyFlag )	5103:1:109698:109733	906872	8	True				
ANR	906953	AssignmentExpression	retval = ! ( ErrorFlag || EmptyFlag )		906872	0		=			
ANR	906954	Identifier	retval		906872	0					
ANR	906955	UnaryOperationExpression	! ( ErrorFlag || EmptyFlag )		906872	1					
ANR	906956	UnaryOperator	!		906872	0					
ANR	906957	OrExpression	ErrorFlag || EmptyFlag		906872	1		||			
ANR	906958	Identifier	ErrorFlag		906872	0					
ANR	906959	Identifier	EmptyFlag		906872	1					
ANR	906960	ReturnStatement	return retval ;	5105:1:109737:109750	906872	9	True				
ANR	906961	Identifier	retval		906872	0					
ANR	906962	ReturnType	int		906872	1					
ANR	906963	Identifier	JobAdInformationEvent :: readEvent		906872	2					
ANR	906964	ParameterList	FILE * file		906872	3					
ANR	906965	Parameter	FILE * file	5081:33:109243:109252	906872	0	True				
ANR	906966	ParameterType	FILE *		906872	0					
ANR	906967	Identifier	file		906872	1					
ANR	906968	CFGEntryNode	ENTRY		906872		True				
ANR	906969	CFGExitNode	EXIT		906872		True				
ANR	906970	Symbol	EmptyFlag		906872						
ANR	906971	Symbol	EndFlag		906872						
ANR	906972	Symbol	fscanf		906872						
ANR	906973	Symbol	file		906872						
ANR	906974	Symbol	SEEK_CUR		906872						
ANR	906975	Symbol	ErrorFlag		906872						
ANR	906976	Symbol	jobad		906872						
ANR	906977	Symbol	EOF		906872						
ANR	906978	Symbol	retval		906872						
ANR	906979	Function	JobAdInformationEvent :: toClassAd	5108:0:109755:110026							
ANR	906980	FunctionDef	JobAdInformationEvent :: toClassAd ()		906979	0					
ANR	906981	CompoundStatement		5110:0:109803:110026	906979	0					
ANR	906982	IdentifierDeclStatement	ClassAd * myad = ULogEvent :: toClassAd ( ) ;	5111:1:109806:109844	906979	0	True				
ANR	906983	IdentifierDecl	* myad = ULogEvent :: toClassAd ( )		906979	0					
ANR	906984	IdentifierDeclType	ClassAd *		906979	0					
ANR	906985	Identifier	myad		906979	1					
ANR	906986	AssignmentExpression	* myad = ULogEvent :: toClassAd ( )		906979	2		=			
ANR	906987	Identifier	myad		906979	0					
ANR	906988	CallExpression	ULogEvent :: toClassAd ( )		906979	1					
ANR	906989	Callee	ULogEvent :: toClassAd		906979	0					
ANR	906990	Identifier	ULogEvent :: toClassAd		906979	0					
ANR	906991	ArgumentList			906979	1					
ANR	906992	IfStatement	if ( ! myad )		906979	1					
ANR	906993	Condition	! myad	5112:5:109851:109855	906979	0	True				
ANR	906994	UnaryOperationExpression	! myad		906979	0					
ANR	906995	UnaryOperator	!		906979	0					
ANR	906996	Identifier	myad		906979	1					
ANR	906997	ReturnStatement	return NULL ;	5112:13:109859:109870	906979	1	True				
ANR	906998	Identifier	NULL		906979	0					
ANR	906999	ExpressionStatement	"MergeClassAds ( myad , jobad , false )"	5114:1:109874:109905	906979	2	True				
ANR	907000	CallExpression	"MergeClassAds ( myad , jobad , false )"		906979	0					
ANR	907001	Callee	MergeClassAds		906979	0					
ANR	907002	Identifier	MergeClassAds		906979	0					
ANR	907003	ArgumentList	myad		906979	1					
ANR	907004	Argument	myad		906979	0					
ANR	907005	Identifier	myad		906979	0					
ANR	907006	Argument	jobad		906979	1					
ANR	907007	Identifier	jobad		906979	0					
ANR	907008	Argument	false		906979	2					
ANR	907009	Identifier	false		906979	0					
ANR	907010	ExpressionStatement	"myad -> SetMyTypeName ( ""JobAdInformationEvent"" )"	5117:1:109965:110009	906979	3	True				
ANR	907011	CallExpression	"myad -> SetMyTypeName ( ""JobAdInformationEvent"" )"		906979	0					
ANR	907012	Callee	myad -> SetMyTypeName		906979	0					
ANR	907013	PtrMemberAccess	myad -> SetMyTypeName		906979	0					
ANR	907014	Identifier	myad		906979	0					
ANR	907015	Identifier	SetMyTypeName		906979	1					
ANR	907016	ArgumentList	"""JobAdInformationEvent"""		906979	1					
ANR	907017	Argument	"""JobAdInformationEvent"""		906979	0					
ANR	907018	PrimaryExpression	"""JobAdInformationEvent"""		906979	0					
ANR	907019	ReturnStatement	return myad ;	5119:1:110013:110024	906979	4	True				
ANR	907020	Identifier	myad		906979	0					
ANR	907021	ReturnType	ClassAd *		906979	1					
ANR	907022	Identifier	JobAdInformationEvent :: toClassAd		906979	2					
ANR	907023	ParameterList			906979	3					
ANR	907024	CFGEntryNode	ENTRY		906979		True				
ANR	907025	CFGExitNode	EXIT		906979		True				
ANR	907026	Symbol	NULL		906979						
ANR	907027	Symbol	false		906979						
ANR	907028	Symbol	jobad		906979						
ANR	907029	Symbol	myad		906979						
ANR	907030	Symbol	ULogEvent :: toClassAd		906979						
ANR	907031	Function	JobAdInformationEvent :: initFromClassAd	5122:0:110029:110256							
ANR	907032	FunctionDef	JobAdInformationEvent :: initFromClassAd (ClassAd * ad)		907031	0					
ANR	907033	CompoundStatement		5124:0:110086:110256	907031	0					
ANR	907034	ExpressionStatement	ULogEvent :: initFromClassAd ( ad )	5125:1:110089:110119	907031	0	True				
ANR	907035	CallExpression	ULogEvent :: initFromClassAd ( ad )		907031	0					
ANR	907036	Callee	ULogEvent :: initFromClassAd		907031	0					
ANR	907037	Identifier	ULogEvent :: initFromClassAd		907031	0					
ANR	907038	ArgumentList	ad		907031	1					
ANR	907039	Argument	ad		907031	0					
ANR	907040	Identifier	ad		907031	0					
ANR	907041	IfStatement	if ( ! ad )		907031	1					
ANR	907042	Condition	! ad	5127:5:110127:110129	907031	0	True				
ANR	907043	UnaryOperationExpression	! ad		907031	0					
ANR	907044	UnaryOperator	!		907031	0					
ANR	907045	Identifier	ad		907031	1					
ANR	907046	ReturnStatement	return ;	5127:11:110133:110139	907031	1	True				
ANR	907047	IfStatement	if ( ! jobad )		907031	2					
ANR	907048	Condition	! jobad	5129:6:110148:110153	907031	0	True				
ANR	907049	UnaryOperationExpression	! jobad		907031	0					
ANR	907050	UnaryOperator	!		907031	0					
ANR	907051	Identifier	jobad		907031	1					
ANR	907052	Statement	delete	5129:15:110157:110162	907031	1	True				
ANR	907053	ExpressionStatement	jobad	5129:22:110164:110169	907031	3	True				
ANR	907054	Identifier	jobad		907031	0					
ANR	907055	ExpressionStatement	jobad = new ClassAd ( * ad )	5131:1:110173:110199	907031	4	True				
ANR	907056	AssignmentExpression	jobad = new ClassAd ( * ad )		907031	0		=			
ANR	907057	Identifier	jobad		907031	0					
ANR	907058	UnaryOperationExpression	* ad		907031	1					
ANR	907059	UnaryOperator	*		907031	0					
ANR	907060	Identifier	ad		907031	1					
ANR	907061	ReturnStatement	return ;	5133:1:110248:110254	907031	5	True				
ANR	907062	ReturnType	void		907031	1					
ANR	907063	Identifier	JobAdInformationEvent :: initFromClassAd		907031	2					
ANR	907064	ParameterList	ClassAd * ad		907031	3					
ANR	907065	Parameter	ClassAd * ad	5123:39:110073:110083	907031	0	True				
ANR	907066	ParameterType	ClassAd *		907031	0					
ANR	907067	Identifier	ad		907031	1					
ANR	907068	CFGEntryNode	ENTRY		907031		True				
ANR	907069	CFGExitNode	EXIT		907031		True				
ANR	907070	Symbol	ad		907031						
ANR	907071	Symbol	jobad		907031						
ANR	907072	Symbol	* ad		907031						
ANR	907073	Function	JobAdInformationEvent :: LookupString	5136:0:110259:110441							
ANR	907074	FunctionDef	"JobAdInformationEvent :: LookupString (const char * attributeName , char * * value)"		907073	0					
ANR	907075	CompoundStatement		5138:0:110347:110441	907073	0					
ANR	907076	IfStatement	if ( ! jobad )		907073	0					
ANR	907077	Condition	! jobad	5139:6:110355:110360	907073	0	True				
ANR	907078	UnaryOperationExpression	! jobad		907073	0					
ANR	907079	UnaryOperator	!		907073	0					
ANR	907080	Identifier	jobad		907073	1					
ANR	907081	ReturnStatement	return 0 ;	5139:15:110364:110372	907073	1	True				
ANR	907082	PrimaryExpression	0		907073	0					
ANR	907083	ReturnStatement	"return jobad -> LookupString ( attributeName , value ) ;"	5141:1:110392:110439	907073	1	True				
ANR	907084	CallExpression	"jobad -> LookupString ( attributeName , value )"		907073	0					
ANR	907085	Callee	jobad -> LookupString		907073	0					
ANR	907086	PtrMemberAccess	jobad -> LookupString		907073	0					
ANR	907087	Identifier	jobad		907073	0					
ANR	907088	Identifier	LookupString		907073	1					
ANR	907089	ArgumentList	attributeName		907073	1					
ANR	907090	Argument	attributeName		907073	0					
ANR	907091	Identifier	attributeName		907073	0					
ANR	907092	Argument	value		907073	1					
ANR	907093	Identifier	value		907073	0					
ANR	907094	ReturnType	int		907073	1					
ANR	907095	Identifier	JobAdInformationEvent :: LookupString		907073	2					
ANR	907096	ParameterList	"const char * attributeName , char * * value"		907073	3					
ANR	907097	Parameter	const char * attributeName	5137:37:110300:110324	907073	0	True				
ANR	907098	ParameterType	const char *		907073	0					
ANR	907099	Identifier	attributeName		907073	1					
ANR	907100	Parameter	char * * value	5137:64:110327:110338	907073	1	True				
ANR	907101	ParameterType	char * *		907073	0					
ANR	907102	Identifier	value		907073	1					
ANR	907103	CFGEntryNode	ENTRY		907073		True				
ANR	907104	CFGExitNode	EXIT		907073		True				
ANR	907105	Symbol	* jobad		907073						
ANR	907106	Symbol	jobad -> LookupString		907073						
ANR	907107	Symbol	jobad		907073						
ANR	907108	Symbol	attributeName		907073						
ANR	907109	Symbol	value		907073						
ANR	907110	Function	JobAdInformationEvent :: LookupInteger	5144:0:110444:110627							
ANR	907111	FunctionDef	"JobAdInformationEvent :: LookupInteger (const char * attributeName , int & value)"		907110	0					
ANR	907112	CompoundStatement		5146:0:110532:110627	907110	0					
ANR	907113	IfStatement	if ( ! jobad )		907110	0					
ANR	907114	Condition	! jobad	5147:6:110540:110545	907110	0	True				
ANR	907115	UnaryOperationExpression	! jobad		907110	0					
ANR	907116	UnaryOperator	!		907110	0					
ANR	907117	Identifier	jobad		907110	1					
ANR	907118	ReturnStatement	return 0 ;	5147:15:110549:110557	907110	1	True				
ANR	907119	PrimaryExpression	0		907110	0					
ANR	907120	ReturnStatement	"return jobad -> LookupInteger ( attributeName , value ) ;"	5149:1:110577:110625	907110	1	True				
ANR	907121	CallExpression	"jobad -> LookupInteger ( attributeName , value )"		907110	0					
ANR	907122	Callee	jobad -> LookupInteger		907110	0					
ANR	907123	PtrMemberAccess	jobad -> LookupInteger		907110	0					
ANR	907124	Identifier	jobad		907110	0					
ANR	907125	Identifier	LookupInteger		907110	1					
ANR	907126	ArgumentList	attributeName		907110	1					
ANR	907127	Argument	attributeName		907110	0					
ANR	907128	Identifier	attributeName		907110	0					
ANR	907129	Argument	value		907110	1					
ANR	907130	Identifier	value		907110	0					
ANR	907131	ReturnType	int		907110	1					
ANR	907132	Identifier	JobAdInformationEvent :: LookupInteger		907110	2					
ANR	907133	ParameterList	"const char * attributeName , int & value"		907110	3					
ANR	907134	Parameter	const char * attributeName	5145:38:110486:110510	907110	0	True				
ANR	907135	ParameterType	const char *		907110	0					
ANR	907136	Identifier	attributeName		907110	1					
ANR	907137	Parameter	int & value	5145:65:110513:110523	907110	1	True				
ANR	907138	ParameterType	int &		907110	0					
ANR	907139	Identifier	value		907110	1					
ANR	907140	CFGEntryNode	ENTRY		907110		True				
ANR	907141	CFGExitNode	EXIT		907110		True				
ANR	907142	Symbol	* jobad		907110						
ANR	907143	Symbol	jobad		907110						
ANR	907144	Symbol	attributeName		907110						
ANR	907145	Symbol	jobad -> LookupInteger		907110						
ANR	907146	Symbol	value		907110						
ANR	907147	Function	JobAdInformationEvent :: LookupFloat	5152:0:110630:110811							
ANR	907148	FunctionDef	"JobAdInformationEvent :: LookupFloat (const char * attributeName , float & value)"		907147	0					
ANR	907149	CompoundStatement		5154:0:110718:110811	907147	0					
ANR	907150	IfStatement	if ( ! jobad )		907147	0					
ANR	907151	Condition	! jobad	5155:6:110726:110731	907147	0	True				
ANR	907152	UnaryOperationExpression	! jobad		907147	0					
ANR	907153	UnaryOperator	!		907147	0					
ANR	907154	Identifier	jobad		907147	1					
ANR	907155	ReturnStatement	return 0 ;	5155:15:110735:110743	907147	1	True				
ANR	907156	PrimaryExpression	0		907147	0					
ANR	907157	ReturnStatement	"return jobad -> LookupFloat ( attributeName , value ) ;"	5157:1:110763:110809	907147	1	True				
ANR	907158	CallExpression	"jobad -> LookupFloat ( attributeName , value )"		907147	0					
ANR	907159	Callee	jobad -> LookupFloat		907147	0					
ANR	907160	PtrMemberAccess	jobad -> LookupFloat		907147	0					
ANR	907161	Identifier	jobad		907147	0					
ANR	907162	Identifier	LookupFloat		907147	1					
ANR	907163	ArgumentList	attributeName		907147	1					
ANR	907164	Argument	attributeName		907147	0					
ANR	907165	Identifier	attributeName		907147	0					
ANR	907166	Argument	value		907147	1					
ANR	907167	Identifier	value		907147	0					
ANR	907168	ReturnType	int		907147	1					
ANR	907169	Identifier	JobAdInformationEvent :: LookupFloat		907147	2					
ANR	907170	ParameterList	"const char * attributeName , float & value"		907147	3					
ANR	907171	Parameter	const char * attributeName	5153:36:110670:110694	907147	0	True				
ANR	907172	ParameterType	const char *		907147	0					
ANR	907173	Identifier	attributeName		907147	1					
ANR	907174	Parameter	float & value	5153:63:110697:110709	907147	1	True				
ANR	907175	ParameterType	float &		907147	0					
ANR	907176	Identifier	value		907147	1					
ANR	907177	CFGEntryNode	ENTRY		907147		True				
ANR	907178	CFGExitNode	EXIT		907147		True				
ANR	907179	Symbol	* jobad		907147						
ANR	907180	Symbol	jobad		907147						
ANR	907181	Symbol	attributeName		907147						
ANR	907182	Symbol	jobad -> LookupFloat		907147						
ANR	907183	Symbol	value		907147						
ANR	907184	Function	JobAdInformationEvent :: LookupBool	5160:0:110814:110993							
ANR	907185	FunctionDef	"JobAdInformationEvent :: LookupBool (const char * attributeName , bool & value)"		907184	0					
ANR	907186	CompoundStatement		5162:0:110901:110993	907184	0					
ANR	907187	IfStatement	if ( ! jobad )		907184	0					
ANR	907188	Condition	! jobad	5163:6:110909:110914	907184	0	True				
ANR	907189	UnaryOperationExpression	! jobad		907184	0					
ANR	907190	UnaryOperator	!		907184	0					
ANR	907191	Identifier	jobad		907184	1					
ANR	907192	ReturnStatement	return 0 ;	5163:15:110918:110926	907184	1	True				
ANR	907193	PrimaryExpression	0		907184	0					
ANR	907194	ReturnStatement	"return jobad -> LookupBool ( attributeName , value ) ;"	5165:1:110946:110991	907184	1	True				
ANR	907195	CallExpression	"jobad -> LookupBool ( attributeName , value )"		907184	0					
ANR	907196	Callee	jobad -> LookupBool		907184	0					
ANR	907197	PtrMemberAccess	jobad -> LookupBool		907184	0					
ANR	907198	Identifier	jobad		907184	0					
ANR	907199	Identifier	LookupBool		907184	1					
ANR	907200	ArgumentList	attributeName		907184	1					
ANR	907201	Argument	attributeName		907184	0					
ANR	907202	Identifier	attributeName		907184	0					
ANR	907203	Argument	value		907184	1					
ANR	907204	Identifier	value		907184	0					
ANR	907205	ReturnType	int		907184	1					
ANR	907206	Identifier	JobAdInformationEvent :: LookupBool		907184	2					
ANR	907207	ParameterList	"const char * attributeName , bool & value"		907184	3					
ANR	907208	Parameter	const char * attributeName	5161:36:110854:110878	907184	0	True				
ANR	907209	ParameterType	const char *		907184	0					
ANR	907210	Identifier	attributeName		907184	1					
ANR	907211	Parameter	bool & value	5161:63:110881:110892	907184	1	True				
ANR	907212	ParameterType	bool &		907184	0					
ANR	907213	Identifier	value		907184	1					
ANR	907214	CFGEntryNode	ENTRY		907184		True				
ANR	907215	CFGExitNode	EXIT		907184		True				
ANR	907216	Symbol	* jobad		907184						
ANR	907217	Symbol	jobad -> LookupBool		907184						
ANR	907218	Symbol	jobad		907184						
ANR	907219	Symbol	attributeName		907184						
ANR	907220	Symbol	value		907184						
ANR	907221	Function	JobStatusUnknownEvent :: JobStatusUnknownEvent	5170:0:111038:111131							
ANR	907222	FunctionDef	JobStatusUnknownEvent :: JobStatusUnknownEvent ()		907221	0					
ANR	907223	CompoundStatement		5171:0:111089:111131	907221	0					
ANR	907224	ExpressionStatement	eventNumber = ULOG_JOB_STATUS_UNKNOWN	5172:1:111092:111129	907221	0	True				
ANR	907225	AssignmentExpression	eventNumber = ULOG_JOB_STATUS_UNKNOWN		907221	0		=			
ANR	907226	Identifier	eventNumber		907221	0					
ANR	907227	Identifier	ULOG_JOB_STATUS_UNKNOWN		907221	1					
ANR	907228	Identifier	JobStatusUnknownEvent :: JobStatusUnknownEvent		907221	1					
ANR	907229	ParameterList			907221	2					
ANR	907230	CFGEntryNode	ENTRY		907221		True				
ANR	907231	CFGExitNode	EXIT		907221		True				
ANR	907232	Symbol	eventNumber		907221						
ANR	907233	Symbol	ULOG_JOB_STATUS_UNKNOWN		907221						
ANR	907234	Function	JobStatusUnknownEvent :: ~JobStatusUnknownEvent	5175:0:111134:111188							
ANR	907235	FunctionDef	JobStatusUnknownEvent :: ~JobStatusUnknownEvent ()		907234	0					
ANR	907236	CompoundStatement		5176:0:111186:111188	907234	0					
ANR	907237	Identifier	JobStatusUnknownEvent :: ~JobStatusUnknownEvent		907234	1					
ANR	907238	ParameterList			907234	2					
ANR	907239	CFGEntryNode	ENTRY		907234		True				
ANR	907240	CFGExitNode	EXIT		907234		True				
ANR	907241	Function	JobStatusUnknownEvent :: writeEvent	5179:0:111191:111364							
ANR	907242	FunctionDef	JobStatusUnknownEvent :: writeEvent (FILE * file)		907241	0					
ANR	907243	CompoundStatement		5181:0:111242:111364	907241	0					
ANR	907244	IdentifierDeclStatement	"int retval = fprintf ( file , ""The job's remote status is unknown\\n"" ) ;"	5182:1:111245:111312	907241	0	True				
ANR	907245	IdentifierDecl	"retval = fprintf ( file , ""The job's remote status is unknown\\n"" )"		907241	0					
ANR	907246	IdentifierDeclType	int		907241	0					
ANR	907247	Identifier	retval		907241	1					
ANR	907248	AssignmentExpression	"retval = fprintf ( file , ""The job's remote status is unknown\\n"" )"		907241	2		=			
ANR	907249	Identifier	retval		907241	0					
ANR	907250	CallExpression	"fprintf ( file , ""The job's remote status is unknown\\n"" )"		907241	1					
ANR	907251	Callee	fprintf		907241	0					
ANR	907252	Identifier	fprintf		907241	0					
ANR	907253	ArgumentList	file		907241	1					
ANR	907254	Argument	file		907241	0					
ANR	907255	Identifier	file		907241	0					
ANR	907256	Argument	"""The job's remote status is unknown\\n"""		907241	1					
ANR	907257	PrimaryExpression	"""The job's remote status is unknown\\n"""		907241	0					
ANR	907258	IfStatement	if ( retval < 0 )		907241	1					
ANR	907259	Condition	retval < 0	5183:5:111319:111328	907241	0	True				
ANR	907260	RelationalExpression	retval < 0		907241	0		<			
ANR	907261	Identifier	retval		907241	0					
ANR	907262	PrimaryExpression	0		907241	1					
ANR	907263	CompoundStatement		4:1:89:89	907241	1					
ANR	907264	ReturnStatement	return 0 ;	5185:2:111336:111344	907241	0	True				
ANR	907265	PrimaryExpression	0		907241	0					
ANR	907266	ReturnStatement	return ( 1 ) ;	5188:1:111352:111362	907241	2	True				
ANR	907267	PrimaryExpression	1		907241	0					
ANR	907268	ReturnType	int		907241	1					
ANR	907269	Identifier	JobStatusUnknownEvent :: writeEvent		907241	2					
ANR	907270	ParameterList	FILE * file		907241	3					
ANR	907271	Parameter	FILE * file	5180:35:111230:111239	907241	0	True				
ANR	907272	ParameterType	FILE *		907241	0					
ANR	907273	Identifier	file		907241	1					
ANR	907274	CFGEntryNode	ENTRY		907241		True				
ANR	907275	CFGExitNode	EXIT		907241		True				
ANR	907276	Symbol	file		907241						
ANR	907277	Symbol	fprintf		907241						
ANR	907278	Symbol	retval		907241						
ANR	907279	Function	JobStatusUnknownEvent :: readEvent	5191:0:111367:111544							
ANR	907280	FunctionDef	JobStatusUnknownEvent :: readEvent (FILE * file)		907279	0					
ANR	907281	CompoundStatement		5192:0:111417:111544	907279	0					
ANR	907282	IdentifierDeclStatement	"int retval = fscanf ( file , ""The job's remote status is unknown\\n"" ) ;"	5193:1:111420:111486	907279	0	True				
ANR	907283	IdentifierDecl	"retval = fscanf ( file , ""The job's remote status is unknown\\n"" )"		907279	0					
ANR	907284	IdentifierDeclType	int		907279	0					
ANR	907285	Identifier	retval		907279	1					
ANR	907286	AssignmentExpression	"retval = fscanf ( file , ""The job's remote status is unknown\\n"" )"		907279	2		=			
ANR	907287	Identifier	retval		907279	0					
ANR	907288	CallExpression	"fscanf ( file , ""The job's remote status is unknown\\n"" )"		907279	1					
ANR	907289	Callee	fscanf		907279	0					
ANR	907290	Identifier	fscanf		907279	0					
ANR	907291	ArgumentList	file		907279	1					
ANR	907292	Argument	file		907279	0					
ANR	907293	Identifier	file		907279	0					
ANR	907294	Argument	"""The job's remote status is unknown\\n"""		907279	1					
ANR	907295	PrimaryExpression	"""The job's remote status is unknown\\n"""		907279	0					
ANR	907296	IfStatement	if ( retval != 0 )		907279	1					
ANR	907297	Condition	retval != 0	5194:8:111496:111506	907279	0	True				
ANR	907298	EqualityExpression	retval != 0		907279	0		!=			
ANR	907299	Identifier	retval		907279	0					
ANR	907300	PrimaryExpression	0		907279	1					
ANR	907301	CompoundStatement		4:4:95:95	907279	1					
ANR	907302	ReturnStatement	return 0 ;	5196:2:111517:111525	907279	0	True				
ANR	907303	PrimaryExpression	0		907279	0					
ANR	907304	ReturnStatement	return 1 ;	5198:1:111534:111542	907279	2	True				
ANR	907305	PrimaryExpression	1		907279	0					
ANR	907306	ReturnType	int		907279	1					
ANR	907307	Identifier	JobStatusUnknownEvent :: readEvent		907279	2					
ANR	907308	ParameterList	FILE * file		907279	3					
ANR	907309	Parameter	FILE * file	5191:38:111405:111414	907279	0	True				
ANR	907310	ParameterType	FILE *		907279	0					
ANR	907311	Identifier	file		907279	1					
ANR	907312	CFGEntryNode	ENTRY		907279		True				
ANR	907313	CFGExitNode	EXIT		907279		True				
ANR	907314	Symbol	fscanf		907279						
ANR	907315	Symbol	file		907279						
ANR	907316	Symbol	retval		907279						
ANR	907317	Function	JobStatusUnknownEvent :: toClassAd	5201:0:111547:111629							
ANR	907318	FunctionDef	JobStatusUnknownEvent :: toClassAd ()		907317	0					
ANR	907319	CompoundStatement		5203:0:111595:111629	907317	0					
ANR	907320	ReturnStatement	return ULogEvent :: toClassAd ( ) ;	5204:1:111598:111627	907317	0	True				
ANR	907321	CallExpression	ULogEvent :: toClassAd ( )		907317	0					
ANR	907322	Callee	ULogEvent :: toClassAd		907317	0					
ANR	907323	Identifier	ULogEvent :: toClassAd		907317	0					
ANR	907324	ArgumentList			907317	1					
ANR	907325	ReturnType	ClassAd *		907317	1					
ANR	907326	Identifier	JobStatusUnknownEvent :: toClassAd		907317	2					
ANR	907327	ParameterList			907317	3					
ANR	907328	CFGEntryNode	ENTRY		907317		True				
ANR	907329	CFGExitNode	EXIT		907317		True				
ANR	907330	Symbol	ULogEvent :: toClassAd		907317						
ANR	907331	Function	JobStatusUnknownEvent :: initFromClassAd	5207:0:111632:111724							
ANR	907332	FunctionDef	JobStatusUnknownEvent :: initFromClassAd (ClassAd * ad)		907331	0					
ANR	907333	CompoundStatement		5209:0:111689:111724	907331	0					
ANR	907334	ExpressionStatement	ULogEvent :: initFromClassAd ( ad )	5210:1:111692:111722	907331	0	True				
ANR	907335	CallExpression	ULogEvent :: initFromClassAd ( ad )		907331	0					
ANR	907336	Callee	ULogEvent :: initFromClassAd		907331	0					
ANR	907337	Identifier	ULogEvent :: initFromClassAd		907331	0					
ANR	907338	ArgumentList	ad		907331	1					
ANR	907339	Argument	ad		907331	0					
ANR	907340	Identifier	ad		907331	0					
ANR	907341	ReturnType	void		907331	1					
ANR	907342	Identifier	JobStatusUnknownEvent :: initFromClassAd		907331	2					
ANR	907343	ParameterList	ClassAd * ad		907331	3					
ANR	907344	Parameter	ClassAd * ad	5208:39:111676:111686	907331	0	True				
ANR	907345	ParameterType	ClassAd *		907331	0					
ANR	907346	Identifier	ad		907331	1					
ANR	907347	CFGEntryNode	ENTRY		907331		True				
ANR	907348	CFGExitNode	EXIT		907331		True				
ANR	907349	Symbol	ad		907331						
ANR	907350	Function	JobStatusKnownEvent :: JobStatusKnownEvent	5214:0:111766:111853							
ANR	907351	FunctionDef	JobStatusKnownEvent :: JobStatusKnownEvent ()		907350	0					
ANR	907352	CompoundStatement		5215:0:111813:111853	907350	0					
ANR	907353	ExpressionStatement	eventNumber = ULOG_JOB_STATUS_KNOWN	5216:1:111816:111851	907350	0	True				
ANR	907354	AssignmentExpression	eventNumber = ULOG_JOB_STATUS_KNOWN		907350	0		=			
ANR	907355	Identifier	eventNumber		907350	0					
ANR	907356	Identifier	ULOG_JOB_STATUS_KNOWN		907350	1					
ANR	907357	Identifier	JobStatusKnownEvent :: JobStatusKnownEvent		907350	1					
ANR	907358	ParameterList			907350	2					
ANR	907359	CFGEntryNode	ENTRY		907350		True				
ANR	907360	CFGExitNode	EXIT		907350		True				
ANR	907361	Symbol	eventNumber		907350						
ANR	907362	Symbol	ULOG_JOB_STATUS_KNOWN		907350						
ANR	907363	Function	JobStatusKnownEvent :: ~JobStatusKnownEvent	5219:0:111856:111906							
ANR	907364	FunctionDef	JobStatusKnownEvent :: ~JobStatusKnownEvent ()		907363	0					
ANR	907365	CompoundStatement		5220:0:111904:111906	907363	0					
ANR	907366	Identifier	JobStatusKnownEvent :: ~JobStatusKnownEvent		907363	1					
ANR	907367	ParameterList			907363	2					
ANR	907368	CFGEntryNode	ENTRY		907363		True				
ANR	907369	CFGExitNode	EXIT		907363		True				
ANR	907370	Function	JobStatusKnownEvent :: writeEvent	5223:0:111909:112083							
ANR	907371	FunctionDef	JobStatusKnownEvent :: writeEvent (FILE * file)		907370	0					
ANR	907372	CompoundStatement		5225:0:111958:112083	907370	0					
ANR	907373	IdentifierDeclStatement	"int retval = fprintf ( file , ""The job's remote status is known again\\n"" ) ;"	5226:1:111961:112032	907370	0	True				
ANR	907374	IdentifierDecl	"retval = fprintf ( file , ""The job's remote status is known again\\n"" )"		907370	0					
ANR	907375	IdentifierDeclType	int		907370	0					
ANR	907376	Identifier	retval		907370	1					
ANR	907377	AssignmentExpression	"retval = fprintf ( file , ""The job's remote status is known again\\n"" )"		907370	2		=			
ANR	907378	Identifier	retval		907370	0					
ANR	907379	CallExpression	"fprintf ( file , ""The job's remote status is known again\\n"" )"		907370	1					
ANR	907380	Callee	fprintf		907370	0					
ANR	907381	Identifier	fprintf		907370	0					
ANR	907382	ArgumentList	file		907370	1					
ANR	907383	Argument	file		907370	0					
ANR	907384	Identifier	file		907370	0					
ANR	907385	Argument	"""The job's remote status is known again\\n"""		907370	1					
ANR	907386	PrimaryExpression	"""The job's remote status is known again\\n"""		907370	0					
ANR	907387	IfStatement	if ( retval < 0 )		907370	1					
ANR	907388	Condition	retval < 0	5227:5:112039:112048	907370	0	True				
ANR	907389	RelationalExpression	retval < 0		907370	0		<			
ANR	907390	Identifier	retval		907370	0					
ANR	907391	PrimaryExpression	0		907370	1					
ANR	907392	CompoundStatement		4:1:93:93	907370	1					
ANR	907393	ReturnStatement	return 0 ;	5229:2:112056:112064	907370	0	True				
ANR	907394	PrimaryExpression	0		907370	0					
ANR	907395	ReturnStatement	return ( 1 ) ;	5232:1:112071:112081	907370	2	True				
ANR	907396	PrimaryExpression	1		907370	0					
ANR	907397	ReturnType	int		907370	1					
ANR	907398	Identifier	JobStatusKnownEvent :: writeEvent		907370	2					
ANR	907399	ParameterList	FILE * file		907370	3					
ANR	907400	Parameter	FILE * file	5224:33:111946:111955	907370	0	True				
ANR	907401	ParameterType	FILE *		907370	0					
ANR	907402	Identifier	file		907370	1					
ANR	907403	CFGEntryNode	ENTRY		907370		True				
ANR	907404	CFGExitNode	EXIT		907370		True				
ANR	907405	Symbol	file		907370						
ANR	907406	Symbol	fprintf		907370						
ANR	907407	Symbol	retval		907370						
ANR	907408	Function	JobStatusKnownEvent :: readEvent	5235:0:112086:112265							
ANR	907409	FunctionDef	JobStatusKnownEvent :: readEvent (FILE * file)		907408	0					
ANR	907410	CompoundStatement		5236:0:112134:112265	907408	0					
ANR	907411	IdentifierDeclStatement	"int retval = fscanf ( file , ""The job's remote status is known again\\n"" ) ;"	5237:1:112137:112207	907408	0	True				
ANR	907412	IdentifierDecl	"retval = fscanf ( file , ""The job's remote status is known again\\n"" )"		907408	0					
ANR	907413	IdentifierDeclType	int		907408	0					
ANR	907414	Identifier	retval		907408	1					
ANR	907415	AssignmentExpression	"retval = fscanf ( file , ""The job's remote status is known again\\n"" )"		907408	2		=			
ANR	907416	Identifier	retval		907408	0					
ANR	907417	CallExpression	"fscanf ( file , ""The job's remote status is known again\\n"" )"		907408	1					
ANR	907418	Callee	fscanf		907408	0					
ANR	907419	Identifier	fscanf		907408	0					
ANR	907420	ArgumentList	file		907408	1					
ANR	907421	Argument	file		907408	0					
ANR	907422	Identifier	file		907408	0					
ANR	907423	Argument	"""The job's remote status is known again\\n"""		907408	1					
ANR	907424	PrimaryExpression	"""The job's remote status is known again\\n"""		907408	0					
ANR	907425	IfStatement	if ( retval != 0 )		907408	1					
ANR	907426	Condition	retval != 0	5238:8:112217:112227	907408	0	True				
ANR	907427	EqualityExpression	retval != 0		907408	0		!=			
ANR	907428	Identifier	retval		907408	0					
ANR	907429	PrimaryExpression	0		907408	1					
ANR	907430	CompoundStatement		4:4:99:99	907408	1					
ANR	907431	ReturnStatement	return 0 ;	5240:2:112238:112246	907408	0	True				
ANR	907432	PrimaryExpression	0		907408	0					
ANR	907433	ReturnStatement	return 1 ;	5242:1:112255:112263	907408	2	True				
ANR	907434	PrimaryExpression	1		907408	0					
ANR	907435	ReturnType	int		907408	1					
ANR	907436	Identifier	JobStatusKnownEvent :: readEvent		907408	2					
ANR	907437	ParameterList	FILE * file		907408	3					
ANR	907438	Parameter	FILE * file	5235:36:112122:112131	907408	0	True				
ANR	907439	ParameterType	FILE *		907408	0					
ANR	907440	Identifier	file		907408	1					
ANR	907441	CFGEntryNode	ENTRY		907408		True				
ANR	907442	CFGExitNode	EXIT		907408		True				
ANR	907443	Symbol	fscanf		907408						
ANR	907444	Symbol	file		907408						
ANR	907445	Symbol	retval		907408						
ANR	907446	Function	JobStatusKnownEvent :: toClassAd	5245:0:112268:112348							
ANR	907447	FunctionDef	JobStatusKnownEvent :: toClassAd ()		907446	0					
ANR	907448	CompoundStatement		5247:0:112314:112348	907446	0					
ANR	907449	ReturnStatement	return ULogEvent :: toClassAd ( ) ;	5248:1:112317:112346	907446	0	True				
ANR	907450	CallExpression	ULogEvent :: toClassAd ( )		907446	0					
ANR	907451	Callee	ULogEvent :: toClassAd		907446	0					
ANR	907452	Identifier	ULogEvent :: toClassAd		907446	0					
ANR	907453	ArgumentList			907446	1					
ANR	907454	ReturnType	ClassAd *		907446	1					
ANR	907455	Identifier	JobStatusKnownEvent :: toClassAd		907446	2					
ANR	907456	ParameterList			907446	3					
ANR	907457	CFGEntryNode	ENTRY		907446		True				
ANR	907458	CFGExitNode	EXIT		907446		True				
ANR	907459	Symbol	ULogEvent :: toClassAd		907446						
ANR	907460	Function	JobStatusKnownEvent :: initFromClassAd	5251:0:112351:112441							
ANR	907461	FunctionDef	JobStatusKnownEvent :: initFromClassAd (ClassAd * ad)		907460	0					
ANR	907462	CompoundStatement		5253:0:112406:112441	907460	0					
ANR	907463	ExpressionStatement	ULogEvent :: initFromClassAd ( ad )	5254:1:112409:112439	907460	0	True				
ANR	907464	CallExpression	ULogEvent :: initFromClassAd ( ad )		907460	0					
ANR	907465	Callee	ULogEvent :: initFromClassAd		907460	0					
ANR	907466	Identifier	ULogEvent :: initFromClassAd		907460	0					
ANR	907467	ArgumentList	ad		907460	1					
ANR	907468	Argument	ad		907460	0					
ANR	907469	Identifier	ad		907460	0					
ANR	907470	ReturnType	void		907460	1					
ANR	907471	Identifier	JobStatusKnownEvent :: initFromClassAd		907460	2					
ANR	907472	ParameterList	ClassAd * ad		907460	3					
ANR	907473	Parameter	ClassAd * ad	5252:37:112393:112403	907460	0	True				
ANR	907474	ParameterType	ClassAd *		907460	0					
ANR	907475	Identifier	ad		907460	1					
ANR	907476	CFGEntryNode	ENTRY		907460		True				
ANR	907477	CFGExitNode	EXIT		907460		True				
ANR	907478	Symbol	ad		907460						
ANR	907479	Function	JobStageInEvent :: JobStageInEvent	5260:0:112481:112556							
ANR	907480	FunctionDef	JobStageInEvent :: JobStageInEvent ()		907479	0					
ANR	907481	CompoundStatement		5261:0:112520:112556	907479	0					
ANR	907482	ExpressionStatement	eventNumber = ULOG_JOB_STAGE_IN	5262:1:112523:112554	907479	0	True				
ANR	907483	AssignmentExpression	eventNumber = ULOG_JOB_STAGE_IN		907479	0		=			
ANR	907484	Identifier	eventNumber		907479	0					
ANR	907485	Identifier	ULOG_JOB_STAGE_IN		907479	1					
ANR	907486	Identifier	JobStageInEvent :: JobStageInEvent		907479	1					
ANR	907487	ParameterList			907479	2					
ANR	907488	CFGEntryNode	ENTRY		907479		True				
ANR	907489	CFGExitNode	EXIT		907479		True				
ANR	907490	Symbol	eventNumber		907479						
ANR	907491	Symbol	ULOG_JOB_STAGE_IN		907479						
ANR	907492	Function	JobStageInEvent :: ~JobStageInEvent	5265:0:112559:112601							
ANR	907493	FunctionDef	JobStageInEvent :: ~JobStageInEvent ()		907492	0					
ANR	907494	CompoundStatement		5266:0:112599:112601	907492	0					
ANR	907495	Identifier	JobStageInEvent :: ~JobStageInEvent		907492	1					
ANR	907496	ParameterList			907492	2					
ANR	907497	CFGEntryNode	ENTRY		907492		True				
ANR	907498	CFGExitNode	EXIT		907492		True				
ANR	907499	Function	JobStageInEvent :: writeEvent	5269:0:112604:112777							
ANR	907500	FunctionDef	JobStageInEvent :: writeEvent (FILE * file)		907499	0					
ANR	907501	CompoundStatement		5271:0:112649:112777	907499	0					
ANR	907502	IdentifierDeclStatement	"int retval = fprintf ( file , ""Job is performing stage-in of input files\\n"" ) ;"	5272:1:112652:112726	907499	0	True				
ANR	907503	IdentifierDecl	"retval = fprintf ( file , ""Job is performing stage-in of input files\\n"" )"		907499	0					
ANR	907504	IdentifierDeclType	int		907499	0					
ANR	907505	Identifier	retval		907499	1					
ANR	907506	AssignmentExpression	"retval = fprintf ( file , ""Job is performing stage-in of input files\\n"" )"		907499	2		=			
ANR	907507	Identifier	retval		907499	0					
ANR	907508	CallExpression	"fprintf ( file , ""Job is performing stage-in of input files\\n"" )"		907499	1					
ANR	907509	Callee	fprintf		907499	0					
ANR	907510	Identifier	fprintf		907499	0					
ANR	907511	ArgumentList	file		907499	1					
ANR	907512	Argument	file		907499	0					
ANR	907513	Identifier	file		907499	0					
ANR	907514	Argument	"""Job is performing stage-in of input files\\n"""		907499	1					
ANR	907515	PrimaryExpression	"""Job is performing stage-in of input files\\n"""		907499	0					
ANR	907516	IfStatement	if ( retval < 0 )		907499	1					
ANR	907517	Condition	retval < 0	5273:5:112733:112742	907499	0	True				
ANR	907518	RelationalExpression	retval < 0		907499	0		<			
ANR	907519	Identifier	retval		907499	0					
ANR	907520	PrimaryExpression	0		907499	1					
ANR	907521	CompoundStatement		4:1:96:96	907499	1					
ANR	907522	ReturnStatement	return 0 ;	5275:2:112750:112758	907499	0	True				
ANR	907523	PrimaryExpression	0		907499	0					
ANR	907524	ReturnStatement	return ( 1 ) ;	5278:1:112765:112775	907499	2	True				
ANR	907525	PrimaryExpression	1		907499	0					
ANR	907526	ReturnType	int		907499	1					
ANR	907527	Identifier	JobStageInEvent :: writeEvent		907499	2					
ANR	907528	ParameterList	FILE * file		907499	3					
ANR	907529	Parameter	FILE * file	5270:29:112637:112646	907499	0	True				
ANR	907530	ParameterType	FILE *		907499	0					
ANR	907531	Identifier	file		907499	1					
ANR	907532	CFGEntryNode	ENTRY		907499		True				
ANR	907533	CFGExitNode	EXIT		907499		True				
ANR	907534	Symbol	file		907499						
ANR	907535	Symbol	fprintf		907499						
ANR	907536	Symbol	retval		907499						
ANR	907537	Function	JobStageInEvent :: readEvent	5281:0:112780:112958							
ANR	907538	FunctionDef	JobStageInEvent :: readEvent (FILE * file)		907537	0					
ANR	907539	CompoundStatement		5283:0:112824:112958	907537	0					
ANR	907540	IdentifierDeclStatement	"int retval = fscanf ( file , ""Job is performing stage-in of input files\\n"" ) ;"	5284:1:112827:112900	907537	0	True				
ANR	907541	IdentifierDecl	"retval = fscanf ( file , ""Job is performing stage-in of input files\\n"" )"		907537	0					
ANR	907542	IdentifierDeclType	int		907537	0					
ANR	907543	Identifier	retval		907537	1					
ANR	907544	AssignmentExpression	"retval = fscanf ( file , ""Job is performing stage-in of input files\\n"" )"		907537	2		=			
ANR	907545	Identifier	retval		907537	0					
ANR	907546	CallExpression	"fscanf ( file , ""Job is performing stage-in of input files\\n"" )"		907537	1					
ANR	907547	Callee	fscanf		907537	0					
ANR	907548	Identifier	fscanf		907537	0					
ANR	907549	ArgumentList	file		907537	1					
ANR	907550	Argument	file		907537	0					
ANR	907551	Identifier	file		907537	0					
ANR	907552	Argument	"""Job is performing stage-in of input files\\n"""		907537	1					
ANR	907553	PrimaryExpression	"""Job is performing stage-in of input files\\n"""		907537	0					
ANR	907554	IfStatement	if ( retval != 0 )		907537	1					
ANR	907555	Condition	retval != 0	5285:8:112910:112920	907537	0	True				
ANR	907556	EqualityExpression	retval != 0		907537	0		!=			
ANR	907557	Identifier	retval		907537	0					
ANR	907558	PrimaryExpression	0		907537	1					
ANR	907559	CompoundStatement		4:4:102:102	907537	1					
ANR	907560	ReturnStatement	return 0 ;	5287:2:112931:112939	907537	0	True				
ANR	907561	PrimaryExpression	0		907537	0					
ANR	907562	ReturnStatement	return 1 ;	5289:1:112948:112956	907537	2	True				
ANR	907563	PrimaryExpression	1		907537	0					
ANR	907564	ReturnType	int		907537	1					
ANR	907565	Identifier	JobStageInEvent :: readEvent		907537	2					
ANR	907566	ParameterList	FILE * file		907537	3					
ANR	907567	Parameter	FILE * file	5282:28:112812:112821	907537	0	True				
ANR	907568	ParameterType	FILE *		907537	0					
ANR	907569	Identifier	file		907537	1					
ANR	907570	CFGEntryNode	ENTRY		907537		True				
ANR	907571	CFGExitNode	EXIT		907537		True				
ANR	907572	Symbol	fscanf		907537						
ANR	907573	Symbol	file		907537						
ANR	907574	Symbol	retval		907537						
ANR	907575	Function	JobStageInEvent :: toClassAd	5292:0:112961:113037							
ANR	907576	FunctionDef	JobStageInEvent :: toClassAd ()		907575	0					
ANR	907577	CompoundStatement		5294:0:113003:113037	907575	0					
ANR	907578	ReturnStatement	return ULogEvent :: toClassAd ( ) ;	5295:1:113006:113035	907575	0	True				
ANR	907579	CallExpression	ULogEvent :: toClassAd ( )		907575	0					
ANR	907580	Callee	ULogEvent :: toClassAd		907575	0					
ANR	907581	Identifier	ULogEvent :: toClassAd		907575	0					
ANR	907582	ArgumentList			907575	1					
ANR	907583	ReturnType	ClassAd *		907575	1					
ANR	907584	Identifier	JobStageInEvent :: toClassAd		907575	2					
ANR	907585	ParameterList			907575	3					
ANR	907586	CFGEntryNode	ENTRY		907575		True				
ANR	907587	CFGExitNode	EXIT		907575		True				
ANR	907588	Symbol	ULogEvent :: toClassAd		907575						
ANR	907589	Function	JobStageInEvent :: initFromClassAd	5298:0:113040:113126							
ANR	907590	FunctionDef	JobStageInEvent :: initFromClassAd (ClassAd * ad)		907589	0					
ANR	907591	CompoundStatement		5300:0:113091:113126	907589	0					
ANR	907592	ExpressionStatement	ULogEvent :: initFromClassAd ( ad )	5301:1:113094:113124	907589	0	True				
ANR	907593	CallExpression	ULogEvent :: initFromClassAd ( ad )		907589	0					
ANR	907594	Callee	ULogEvent :: initFromClassAd		907589	0					
ANR	907595	Identifier	ULogEvent :: initFromClassAd		907589	0					
ANR	907596	ArgumentList	ad		907589	1					
ANR	907597	Argument	ad		907589	0					
ANR	907598	Identifier	ad		907589	0					
ANR	907599	ReturnType	void		907589	1					
ANR	907600	Identifier	JobStageInEvent :: initFromClassAd		907589	2					
ANR	907601	ParameterList	ClassAd * ad		907589	3					
ANR	907602	Parameter	ClassAd * ad	5299:33:113078:113088	907589	0	True				
ANR	907603	ParameterType	ClassAd *		907589	0					
ANR	907604	Identifier	ad		907589	1					
ANR	907605	CFGEntryNode	ENTRY		907589		True				
ANR	907606	CFGExitNode	EXIT		907589		True				
ANR	907607	Symbol	ad		907589						
ANR	907608	Function	JobStageOutEvent :: JobStageOutEvent	5306:0:113166:113244							
ANR	907609	FunctionDef	JobStageOutEvent :: JobStageOutEvent ()		907608	0					
ANR	907610	CompoundStatement		5307:0:113207:113244	907608	0					
ANR	907611	ExpressionStatement	eventNumber = ULOG_JOB_STAGE_OUT	5308:1:113210:113242	907608	0	True				
ANR	907612	AssignmentExpression	eventNumber = ULOG_JOB_STAGE_OUT		907608	0		=			
ANR	907613	Identifier	eventNumber		907608	0					
ANR	907614	Identifier	ULOG_JOB_STAGE_OUT		907608	1					
ANR	907615	Identifier	JobStageOutEvent :: JobStageOutEvent		907608	1					
ANR	907616	ParameterList			907608	2					
ANR	907617	CFGEntryNode	ENTRY		907608		True				
ANR	907618	CFGExitNode	EXIT		907608		True				
ANR	907619	Symbol	ULOG_JOB_STAGE_OUT		907608						
ANR	907620	Symbol	eventNumber		907608						
ANR	907621	Function	JobStageOutEvent :: ~JobStageOutEvent	5311:0:113247:113291							
ANR	907622	FunctionDef	JobStageOutEvent :: ~JobStageOutEvent ()		907621	0					
ANR	907623	CompoundStatement		5312:0:113289:113291	907621	0					
ANR	907624	Identifier	JobStageOutEvent :: ~JobStageOutEvent		907621	1					
ANR	907625	ParameterList			907621	2					
ANR	907626	CFGEntryNode	ENTRY		907621		True				
ANR	907627	CFGExitNode	EXIT		907621		True				
ANR	907628	Function	JobStageOutEvent :: writeEvent	5315:0:113294:113470							
ANR	907629	FunctionDef	JobStageOutEvent :: writeEvent (FILE * file)		907628	0					
ANR	907630	CompoundStatement		5317:0:113340:113470	907628	0					
ANR	907631	IdentifierDeclStatement	"int retval = fprintf ( file , ""Job is performing stage-out of output files\\n"" ) ;"	5318:1:113343:113419	907628	0	True				
ANR	907632	IdentifierDecl	"retval = fprintf ( file , ""Job is performing stage-out of output files\\n"" )"		907628	0					
ANR	907633	IdentifierDeclType	int		907628	0					
ANR	907634	Identifier	retval		907628	1					
ANR	907635	AssignmentExpression	"retval = fprintf ( file , ""Job is performing stage-out of output files\\n"" )"		907628	2		=			
ANR	907636	Identifier	retval		907628	0					
ANR	907637	CallExpression	"fprintf ( file , ""Job is performing stage-out of output files\\n"" )"		907628	1					
ANR	907638	Callee	fprintf		907628	0					
ANR	907639	Identifier	fprintf		907628	0					
ANR	907640	ArgumentList	file		907628	1					
ANR	907641	Argument	file		907628	0					
ANR	907642	Identifier	file		907628	0					
ANR	907643	Argument	"""Job is performing stage-out of output files\\n"""		907628	1					
ANR	907644	PrimaryExpression	"""Job is performing stage-out of output files\\n"""		907628	0					
ANR	907645	IfStatement	if ( retval < 0 )		907628	1					
ANR	907646	Condition	retval < 0	5319:5:113426:113435	907628	0	True				
ANR	907647	RelationalExpression	retval < 0		907628	0		<			
ANR	907648	Identifier	retval		907628	0					
ANR	907649	PrimaryExpression	0		907628	1					
ANR	907650	CompoundStatement		4:1:98:98	907628	1					
ANR	907651	ReturnStatement	return 0 ;	5321:2:113443:113451	907628	0	True				
ANR	907652	PrimaryExpression	0		907628	0					
ANR	907653	ReturnStatement	return ( 1 ) ;	5324:1:113458:113468	907628	2	True				
ANR	907654	PrimaryExpression	1		907628	0					
ANR	907655	ReturnType	int		907628	1					
ANR	907656	Identifier	JobStageOutEvent :: writeEvent		907628	2					
ANR	907657	ParameterList	FILE * file		907628	3					
ANR	907658	Parameter	FILE * file	5316:30:113328:113337	907628	0	True				
ANR	907659	ParameterType	FILE *		907628	0					
ANR	907660	Identifier	file		907628	1					
ANR	907661	CFGEntryNode	ENTRY		907628		True				
ANR	907662	CFGExitNode	EXIT		907628		True				
ANR	907663	Symbol	file		907628						
ANR	907664	Symbol	fprintf		907628						
ANR	907665	Symbol	retval		907628						
ANR	907666	Function	JobStageOutEvent :: readEvent	5327:0:113473:113654							
ANR	907667	FunctionDef	JobStageOutEvent :: readEvent (FILE * file)		907666	0					
ANR	907668	CompoundStatement		5329:0:113518:113654	907666	0					
ANR	907669	IdentifierDeclStatement	"int retval = fscanf ( file , ""Job is performing stage-out of output files\\n"" ) ;"	5330:1:113521:113596	907666	0	True				
ANR	907670	IdentifierDecl	"retval = fscanf ( file , ""Job is performing stage-out of output files\\n"" )"		907666	0					
ANR	907671	IdentifierDeclType	int		907666	0					
ANR	907672	Identifier	retval		907666	1					
ANR	907673	AssignmentExpression	"retval = fscanf ( file , ""Job is performing stage-out of output files\\n"" )"		907666	2		=			
ANR	907674	Identifier	retval		907666	0					
ANR	907675	CallExpression	"fscanf ( file , ""Job is performing stage-out of output files\\n"" )"		907666	1					
ANR	907676	Callee	fscanf		907666	0					
ANR	907677	Identifier	fscanf		907666	0					
ANR	907678	ArgumentList	file		907666	1					
ANR	907679	Argument	file		907666	0					
ANR	907680	Identifier	file		907666	0					
ANR	907681	Argument	"""Job is performing stage-out of output files\\n"""		907666	1					
ANR	907682	PrimaryExpression	"""Job is performing stage-out of output files\\n"""		907666	0					
ANR	907683	IfStatement	if ( retval != 0 )		907666	1					
ANR	907684	Condition	retval != 0	5331:8:113606:113616	907666	0	True				
ANR	907685	EqualityExpression	retval != 0		907666	0		!=			
ANR	907686	Identifier	retval		907666	0					
ANR	907687	PrimaryExpression	0		907666	1					
ANR	907688	CompoundStatement		4:4:104:104	907666	1					
ANR	907689	ReturnStatement	return 0 ;	5333:2:113627:113635	907666	0	True				
ANR	907690	PrimaryExpression	0		907666	0					
ANR	907691	ReturnStatement	return 1 ;	5335:1:113644:113652	907666	2	True				
ANR	907692	PrimaryExpression	1		907666	0					
ANR	907693	ReturnType	int		907666	1					
ANR	907694	Identifier	JobStageOutEvent :: readEvent		907666	2					
ANR	907695	ParameterList	FILE * file		907666	3					
ANR	907696	Parameter	FILE * file	5328:29:113506:113515	907666	0	True				
ANR	907697	ParameterType	FILE *		907666	0					
ANR	907698	Identifier	file		907666	1					
ANR	907699	CFGEntryNode	ENTRY		907666		True				
ANR	907700	CFGExitNode	EXIT		907666		True				
ANR	907701	Symbol	fscanf		907666						
ANR	907702	Symbol	file		907666						
ANR	907703	Symbol	retval		907666						
ANR	907704	Function	JobStageOutEvent :: toClassAd	5338:0:113657:113734							
ANR	907705	FunctionDef	JobStageOutEvent :: toClassAd ()		907704	0					
ANR	907706	CompoundStatement		5340:0:113700:113734	907704	0					
ANR	907707	ReturnStatement	return ULogEvent :: toClassAd ( ) ;	5341:1:113703:113732	907704	0	True				
ANR	907708	CallExpression	ULogEvent :: toClassAd ( )		907704	0					
ANR	907709	Callee	ULogEvent :: toClassAd		907704	0					
ANR	907710	Identifier	ULogEvent :: toClassAd		907704	0					
ANR	907711	ArgumentList			907704	1					
ANR	907712	ReturnType	ClassAd *		907704	1					
ANR	907713	Identifier	JobStageOutEvent :: toClassAd		907704	2					
ANR	907714	ParameterList			907704	3					
ANR	907715	CFGEntryNode	ENTRY		907704		True				
ANR	907716	CFGExitNode	EXIT		907704		True				
ANR	907717	Symbol	ULogEvent :: toClassAd		907704						
ANR	907718	Function	JobStageOutEvent :: initFromClassAd	5344:0:113737:113824							
ANR	907719	FunctionDef	JobStageOutEvent :: initFromClassAd (ClassAd * ad)		907718	0					
ANR	907720	CompoundStatement		5345:0:113789:113824	907718	0					
ANR	907721	ExpressionStatement	ULogEvent :: initFromClassAd ( ad )	5346:1:113792:113822	907718	0	True				
ANR	907722	CallExpression	ULogEvent :: initFromClassAd ( ad )		907718	0					
ANR	907723	Callee	ULogEvent :: initFromClassAd		907718	0					
ANR	907724	Identifier	ULogEvent :: initFromClassAd		907718	0					
ANR	907725	ArgumentList	ad		907718	1					
ANR	907726	Argument	ad		907718	0					
ANR	907727	Identifier	ad		907718	0					
ANR	907728	ReturnType	void		907718	1					
ANR	907729	Identifier	JobStageOutEvent :: initFromClassAd		907718	2					
ANR	907730	ParameterList	ClassAd * ad		907718	3					
ANR	907731	Parameter	ClassAd * ad	5344:39:113776:113786	907718	0	True				
ANR	907732	ParameterType	ClassAd *		907718	0					
ANR	907733	Identifier	ad		907718	1					
ANR	907734	CFGEntryNode	ENTRY		907718		True				
ANR	907735	CFGExitNode	EXIT		907718		True				
ANR	907736	Symbol	ad		907718						
ANR	907737	Function	AttributeUpdate :: AttributeUpdate	5350:0:113862:113989							
ANR	907738	FunctionDef	AttributeUpdate :: AttributeUpdate ()		907737	0					
ANR	907739	CompoundStatement		5351:0:113901:113989	907737	0					
ANR	907740	ExpressionStatement	name = NULL	5352:1:113904:113915	907737	0	True				
ANR	907741	AssignmentExpression	name = NULL		907737	0		=			
ANR	907742	Identifier	name		907737	0					
ANR	907743	Identifier	NULL		907737	1					
ANR	907744	ExpressionStatement	value = NULL	5353:1:113918:113930	907737	1	True				
ANR	907745	AssignmentExpression	value = NULL		907737	0		=			
ANR	907746	Identifier	value		907737	0					
ANR	907747	Identifier	NULL		907737	1					
ANR	907748	ExpressionStatement	old_value = NULL	5354:1:113933:113949	907737	2	True				
ANR	907749	AssignmentExpression	old_value = NULL		907737	0		=			
ANR	907750	Identifier	old_value		907737	0					
ANR	907751	Identifier	NULL		907737	1					
ANR	907752	ExpressionStatement	eventNumber = ULOG_ATTRIBUTE_UPDATE	5355:1:113952:113987	907737	3	True				
ANR	907753	AssignmentExpression	eventNumber = ULOG_ATTRIBUTE_UPDATE		907737	0		=			
ANR	907754	Identifier	eventNumber		907737	0					
ANR	907755	Identifier	ULOG_ATTRIBUTE_UPDATE		907737	1					
ANR	907756	Identifier	AttributeUpdate :: AttributeUpdate		907737	1					
ANR	907757	ParameterList			907737	2					
ANR	907758	CFGEntryNode	ENTRY		907737		True				
ANR	907759	CFGExitNode	EXIT		907737		True				
ANR	907760	Symbol	NULL		907737						
ANR	907761	Symbol	ULOG_ATTRIBUTE_UPDATE		907737						
ANR	907762	Symbol	eventNumber		907737						
ANR	907763	Symbol	name		907737						
ANR	907764	Symbol	old_value		907737						
ANR	907765	Symbol	value		907737						
ANR	907766	Function	AttributeUpdate :: ~AttributeUpdate	5358:0:113992:114136							
ANR	907767	FunctionDef	AttributeUpdate :: ~AttributeUpdate ()		907766	0					
ANR	907768	CompoundStatement		5359:0:114032:114136	907766	0					
ANR	907769	IfStatement	if ( name )		907766	0					
ANR	907770	Condition	name	5360:5:114039:114042	907766	0	True				
ANR	907771	Identifier	name		907766	0					
ANR	907772	CompoundStatement		2:11:12:12	907766	1					
ANR	907773	ExpressionStatement	free ( name )	5361:2:114049:114059	907766	0	True				
ANR	907774	CallExpression	free ( name )		907766	0					
ANR	907775	Callee	free		907766	0					
ANR	907776	Identifier	free		907766	0					
ANR	907777	ArgumentList	name		907766	1					
ANR	907778	Argument	name		907766	0					
ANR	907779	Identifier	name		907766	0					
ANR	907780	IfStatement	if ( value )		907766	1					
ANR	907781	Condition	value	5363:5:114069:114073	907766	0	True				
ANR	907782	Identifier	value		907766	0					
ANR	907783	CompoundStatement		5:12:43:43	907766	1					
ANR	907784	ExpressionStatement	free ( value )	5364:2:114080:114091	907766	0	True				
ANR	907785	CallExpression	free ( value )		907766	0					
ANR	907786	Callee	free		907766	0					
ANR	907787	Identifier	free		907766	0					
ANR	907788	ArgumentList	value		907766	1					
ANR	907789	Argument	value		907766	0					
ANR	907790	Identifier	value		907766	0					
ANR	907791	IfStatement	if ( old_value )		907766	2					
ANR	907792	Condition	old_value	5366:5:114101:114109	907766	0	True				
ANR	907793	Identifier	old_value		907766	0					
ANR	907794	CompoundStatement		8:16:79:79	907766	1					
ANR	907795	ExpressionStatement	free ( old_value )	5367:2:114116:114131	907766	0	True				
ANR	907796	CallExpression	free ( old_value )		907766	0					
ANR	907797	Callee	free		907766	0					
ANR	907798	Identifier	free		907766	0					
ANR	907799	ArgumentList	old_value		907766	1					
ANR	907800	Argument	old_value		907766	0					
ANR	907801	Identifier	old_value		907766	0					
ANR	907802	Identifier	AttributeUpdate :: ~AttributeUpdate		907766	1					
ANR	907803	ParameterList			907766	2					
ANR	907804	CFGEntryNode	ENTRY		907766		True				
ANR	907805	CFGExitNode	EXIT		907766		True				
ANR	907806	Symbol	name		907766						
ANR	907807	Symbol	old_value		907766						
ANR	907808	Symbol	value		907766						
ANR	907809	Function	AttributeUpdate :: writeEvent	5371:0:114139:114448							
ANR	907810	FunctionDef	AttributeUpdate :: writeEvent (FILE * file)		907809	0					
ANR	907811	CompoundStatement		5373:0:114183:114448	907809	0					
ANR	907812	IdentifierDeclStatement	int retval ;	5374:1:114186:114196	907809	0	True				
ANR	907813	IdentifierDecl	retval		907809	0					
ANR	907814	IdentifierDeclType	int		907809	0					
ANR	907815	Identifier	retval		907809	1					
ANR	907816	IfStatement	if ( old_value )		907809	1					
ANR	907817	Condition	old_value	5375:5:114203:114211	907809	0	True				
ANR	907818	Identifier	old_value		907809	0					
ANR	907819	CompoundStatement		4:1:31:31	907809	1					
ANR	907820	ExpressionStatement	"retval = fprintf ( file , ""Changing job attribute %s from %s to %s\\n"" , name , old_value , value )"	5377:2:114219:114310	907809	0	True				
ANR	907821	AssignmentExpression	"retval = fprintf ( file , ""Changing job attribute %s from %s to %s\\n"" , name , old_value , value )"		907809	0		=			
ANR	907822	Identifier	retval		907809	0					
ANR	907823	CallExpression	"fprintf ( file , ""Changing job attribute %s from %s to %s\\n"" , name , old_value , value )"		907809	1					
ANR	907824	Callee	fprintf		907809	0					
ANR	907825	Identifier	fprintf		907809	0					
ANR	907826	ArgumentList	file		907809	1					
ANR	907827	Argument	file		907809	0					
ANR	907828	Identifier	file		907809	0					
ANR	907829	Argument	"""Changing job attribute %s from %s to %s\\n"""		907809	1					
ANR	907830	PrimaryExpression	"""Changing job attribute %s from %s to %s\\n"""		907809	0					
ANR	907831	Argument	name		907809	2					
ANR	907832	Identifier	name		907809	0					
ANR	907833	Argument	old_value		907809	3					
ANR	907834	Identifier	old_value		907809	0					
ANR	907835	Argument	value		907809	4					
ANR	907836	Identifier	value		907809	0					
ANR	907837	ElseStatement	else		907809	0					
ANR	907838	CompoundStatement		6:8:136:136	907809	0					
ANR	907839	ExpressionStatement	"retval = fprintf ( file , ""Setting job attribute %s to %s\\n"" , name , value )"	5379:2:114324:114395	907809	0	True				
ANR	907840	AssignmentExpression	"retval = fprintf ( file , ""Setting job attribute %s to %s\\n"" , name , value )"		907809	0		=			
ANR	907841	Identifier	retval		907809	0					
ANR	907842	CallExpression	"fprintf ( file , ""Setting job attribute %s to %s\\n"" , name , value )"		907809	1					
ANR	907843	Callee	fprintf		907809	0					
ANR	907844	Identifier	fprintf		907809	0					
ANR	907845	ArgumentList	file		907809	1					
ANR	907846	Argument	file		907809	0					
ANR	907847	Identifier	file		907809	0					
ANR	907848	Argument	"""Setting job attribute %s to %s\\n"""		907809	1					
ANR	907849	PrimaryExpression	"""Setting job attribute %s to %s\\n"""		907809	0					
ANR	907850	Argument	name		907809	2					
ANR	907851	Identifier	name		907809	0					
ANR	907852	Argument	value		907809	3					
ANR	907853	Identifier	value		907809	0					
ANR	907854	IfStatement	if ( retval < 0 )		907809	2					
ANR	907855	Condition	retval < 0	5382:5:114406:114415	907809	0	True				
ANR	907856	RelationalExpression	retval < 0		907809	0		<			
ANR	907857	Identifier	retval		907809	0					
ANR	907858	PrimaryExpression	0		907809	1					
ANR	907859	CompoundStatement		11:1:235:235	907809	1					
ANR	907860	ReturnStatement	return 0 ;	5384:2:114423:114431	907809	0	True				
ANR	907861	PrimaryExpression	0		907809	0					
ANR	907862	ReturnStatement	return 1 ;	5387:1:114438:114446	907809	3	True				
ANR	907863	PrimaryExpression	1		907809	0					
ANR	907864	ReturnType	int		907809	1					
ANR	907865	Identifier	AttributeUpdate :: writeEvent		907809	2					
ANR	907866	ParameterList	FILE * file		907809	3					
ANR	907867	Parameter	FILE * file	5372:28:114171:114180	907809	0	True				
ANR	907868	ParameterType	FILE *		907809	0					
ANR	907869	Identifier	file		907809	1					
ANR	907870	CFGEntryNode	ENTRY		907809		True				
ANR	907871	CFGExitNode	EXIT		907809		True				
ANR	907872	Symbol	file		907809						
ANR	907873	Symbol	name		907809						
ANR	907874	Symbol	old_value		907809						
ANR	907875	Symbol	value		907809						
ANR	907876	Symbol	fprintf		907809						
ANR	907877	Symbol	retval		907809						
ANR	907878	Function	AttributeUpdate :: readEvent	5390:0:114451:114967							
ANR	907879	FunctionDef	AttributeUpdate :: readEvent (FILE * file)		907878	0					
ANR	907880	CompoundStatement		5392:0:114494:114967	907878	0					
ANR	907881	IdentifierDeclStatement	"char buf1 [ 4096 ] , buf2 [ 4096 ] , buf3 [ 4096 ] ;"	5393:1:114497:114536	907878	0	True				
ANR	907882	IdentifierDecl	buf1 [ 4096 ]		907878	0					
ANR	907883	IdentifierDeclType	char [ 4096 ]		907878	0					
ANR	907884	Identifier	buf1		907878	1					
ANR	907885	PrimaryExpression	4096		907878	2					
ANR	907886	IdentifierDecl	buf2 [ 4096 ]		907878	1					
ANR	907887	IdentifierDeclType	char [ 4096 ]		907878	0					
ANR	907888	Identifier	buf2		907878	1					
ANR	907889	PrimaryExpression	4096		907878	2					
ANR	907890	IdentifierDecl	buf3 [ 4096 ]		907878	2					
ANR	907891	IdentifierDeclType	char [ 4096 ]		907878	0					
ANR	907892	Identifier	buf3		907878	1					
ANR	907893	PrimaryExpression	4096		907878	2					
ANR	907894	IdentifierDeclStatement	int retval ;	5394:1:114539:114549	907878	1	True				
ANR	907895	IdentifierDecl	retval		907878	0					
ANR	907896	IdentifierDeclType	int		907878	0					
ANR	907897	Identifier	retval		907878	1					
ANR	907898	ExpressionStatement	buf1 [ 0 ] = '\\0'	5396:1:114553:114567	907878	2	True				
ANR	907899	AssignmentExpression	buf1 [ 0 ] = '\\0'		907878	0		=			
ANR	907900	ArrayIndexing	buf1 [ 0 ]		907878	0					
ANR	907901	Identifier	buf1		907878	0					
ANR	907902	PrimaryExpression	0		907878	1					
ANR	907903	PrimaryExpression	'\\0'		907878	1					
ANR	907904	ExpressionStatement	buf2 [ 0 ] = '\\0'	5397:1:114570:114584	907878	3	True				
ANR	907905	AssignmentExpression	buf2 [ 0 ] = '\\0'		907878	0		=			
ANR	907906	ArrayIndexing	buf2 [ 0 ]		907878	0					
ANR	907907	Identifier	buf2		907878	0					
ANR	907908	PrimaryExpression	0		907878	1					
ANR	907909	PrimaryExpression	'\\0'		907878	1					
ANR	907910	ExpressionStatement	buf3 [ 0 ] = '\\0'	5398:1:114587:114601	907878	4	True				
ANR	907911	AssignmentExpression	buf3 [ 0 ] = '\\0'		907878	0		=			
ANR	907912	ArrayIndexing	buf3 [ 0 ]		907878	0					
ANR	907913	Identifier	buf3		907878	0					
ANR	907914	PrimaryExpression	0		907878	1					
ANR	907915	PrimaryExpression	'\\0'		907878	1					
ANR	907916	ExpressionStatement	"retval = fscanf ( file , ""Changing job attribute %s from %s to %s\\n"" , buf1 , buf2 , buf3 )"	5399:1:114604:114688	907878	5	True				
ANR	907917	AssignmentExpression	"retval = fscanf ( file , ""Changing job attribute %s from %s to %s\\n"" , buf1 , buf2 , buf3 )"		907878	0		=			
ANR	907918	Identifier	retval		907878	0					
ANR	907919	CallExpression	"fscanf ( file , ""Changing job attribute %s from %s to %s\\n"" , buf1 , buf2 , buf3 )"		907878	1					
ANR	907920	Callee	fscanf		907878	0					
ANR	907921	Identifier	fscanf		907878	0					
ANR	907922	ArgumentList	file		907878	1					
ANR	907923	Argument	file		907878	0					
ANR	907924	Identifier	file		907878	0					
ANR	907925	Argument	"""Changing job attribute %s from %s to %s\\n"""		907878	1					
ANR	907926	PrimaryExpression	"""Changing job attribute %s from %s to %s\\n"""		907878	0					
ANR	907927	Argument	buf1		907878	2					
ANR	907928	Identifier	buf1		907878	0					
ANR	907929	Argument	buf2		907878	3					
ANR	907930	Identifier	buf2		907878	0					
ANR	907931	Argument	buf3		907878	4					
ANR	907932	Identifier	buf3		907878	0					
ANR	907933	IfStatement	if ( retval < 0 )		907878	6					
ANR	907934	Condition	retval < 0	5400:5:114695:114704	907878	0	True				
ANR	907935	RelationalExpression	retval < 0		907878	0		<			
ANR	907936	Identifier	retval		907878	0					
ANR	907937	PrimaryExpression	0		907878	1					
ANR	907938	CompoundStatement		10:1:213:213	907878	1					
ANR	907939	ExpressionStatement	"retval = fscanf ( file , ""Setting job attribute %s to %s\\n"" , buf1 , buf3 )"	5402:2:114712:114781	907878	0	True				
ANR	907940	AssignmentExpression	"retval = fscanf ( file , ""Setting job attribute %s to %s\\n"" , buf1 , buf3 )"		907878	0		=			
ANR	907941	Identifier	retval		907878	0					
ANR	907942	CallExpression	"fscanf ( file , ""Setting job attribute %s to %s\\n"" , buf1 , buf3 )"		907878	1					
ANR	907943	Callee	fscanf		907878	0					
ANR	907944	Identifier	fscanf		907878	0					
ANR	907945	ArgumentList	file		907878	1					
ANR	907946	Argument	file		907878	0					
ANR	907947	Identifier	file		907878	0					
ANR	907948	Argument	"""Setting job attribute %s to %s\\n"""		907878	1					
ANR	907949	PrimaryExpression	"""Setting job attribute %s to %s\\n"""		907878	0					
ANR	907950	Argument	buf1		907878	2					
ANR	907951	Identifier	buf1		907878	0					
ANR	907952	Argument	buf3		907878	3					
ANR	907953	Identifier	buf3		907878	0					
ANR	907954	IfStatement	if ( retval < 0 )		907878	1					
ANR	907955	Condition	retval < 0	5403:6:114789:114798	907878	0	True				
ANR	907956	RelationalExpression	retval < 0		907878	0		<			
ANR	907957	Identifier	retval		907878	0					
ANR	907958	PrimaryExpression	0		907878	1					
ANR	907959	CompoundStatement		13:2:308:308	907878	1					
ANR	907960	ReturnStatement	return 0 ;	5405:3:114808:114816	907878	0	True				
ANR	907961	PrimaryExpression	0		907878	0					
ANR	907962	ExpressionStatement	name = strdup ( buf1 )	5408:1:114826:114845	907878	7	True				
ANR	907963	AssignmentExpression	name = strdup ( buf1 )		907878	0		=			
ANR	907964	Identifier	name		907878	0					
ANR	907965	CallExpression	strdup ( buf1 )		907878	1					
ANR	907966	Callee	strdup		907878	0					
ANR	907967	Identifier	strdup		907878	0					
ANR	907968	ArgumentList	buf1		907878	1					
ANR	907969	Argument	buf1		907878	0					
ANR	907970	Identifier	buf1		907878	0					
ANR	907971	ExpressionStatement	value = strdup ( buf3 )	5409:1:114848:114868	907878	8	True				
ANR	907972	AssignmentExpression	value = strdup ( buf3 )		907878	0		=			
ANR	907973	Identifier	value		907878	0					
ANR	907974	CallExpression	strdup ( buf3 )		907878	1					
ANR	907975	Callee	strdup		907878	0					
ANR	907976	Identifier	strdup		907878	0					
ANR	907977	ArgumentList	buf3		907878	1					
ANR	907978	Argument	buf3		907878	0					
ANR	907979	Identifier	buf3		907878	0					
ANR	907980	IfStatement	if ( buf2 [ 0 ] != '\\0' )		907878	9					
ANR	907981	Condition	buf2 [ 0 ] != '\\0'	5410:5:114875:114889	907878	0	True				
ANR	907982	EqualityExpression	buf2 [ 0 ] != '\\0'		907878	0		!=			
ANR	907983	ArrayIndexing	buf2 [ 0 ]		907878	0					
ANR	907984	Identifier	buf2		907878	0					
ANR	907985	PrimaryExpression	0		907878	1					
ANR	907986	PrimaryExpression	'\\0'		907878	1					
ANR	907987	CompoundStatement		20:1:398:398	907878	1					
ANR	907988	ExpressionStatement	old_value = strdup ( buf2 )	5412:2:114897:114921	907878	0	True				
ANR	907989	AssignmentExpression	old_value = strdup ( buf2 )		907878	0		=			
ANR	907990	Identifier	old_value		907878	0					
ANR	907991	CallExpression	strdup ( buf2 )		907878	1					
ANR	907992	Callee	strdup		907878	0					
ANR	907993	Identifier	strdup		907878	0					
ANR	907994	ArgumentList	buf2		907878	1					
ANR	907995	Argument	buf2		907878	0					
ANR	907996	Identifier	buf2		907878	0					
ANR	907997	ElseStatement	else		907878	0					
ANR	907998	CompoundStatement		22:8:436:436	907878	0					
ANR	907999	ExpressionStatement	old_value = NULL	5414:2:114935:114951	907878	0	True				
ANR	908000	AssignmentExpression	old_value = NULL		907878	0		=			
ANR	908001	Identifier	old_value		907878	0					
ANR	908002	Identifier	NULL		907878	1					
ANR	908003	ReturnStatement	return 1 ;	5416:1:114957:114965	907878	10	True				
ANR	908004	PrimaryExpression	1		907878	0					
ANR	908005	ReturnType	int		907878	1					
ANR	908006	Identifier	AttributeUpdate :: readEvent		907878	2					
ANR	908007	ParameterList	FILE * file		907878	3					
ANR	908008	Parameter	FILE * file	5391:27:114482:114491	907878	0	True				
ANR	908009	ParameterType	FILE *		907878	0					
ANR	908010	Identifier	file		907878	1					
ANR	908011	CFGEntryNode	ENTRY		907878		True				
ANR	908012	CFGExitNode	EXIT		907878		True				
ANR	908013	Symbol	NULL		907878						
ANR	908014	Symbol	* buf1		907878						
ANR	908015	Symbol	* buf2		907878						
ANR	908016	Symbol	* buf3		907878						
ANR	908017	Symbol	buf3		907878						
ANR	908018	Symbol	retval		907878						
ANR	908019	Symbol	buf1		907878						
ANR	908020	Symbol	buf2		907878						
ANR	908021	Symbol	fscanf		907878						
ANR	908022	Symbol	file		907878						
ANR	908023	Symbol	name		907878						
ANR	908024	Symbol	old_value		907878						
ANR	908025	Symbol	strdup		907878						
ANR	908026	Symbol	value		907878						
ANR	908027	Function	AttributeUpdate :: toClassAd	5419:0:114970:115197							
ANR	908028	FunctionDef	AttributeUpdate :: toClassAd ()		908027	0					
ANR	908029	CompoundStatement		5421:0:115012:115197	908027	0					
ANR	908030	IdentifierDeclStatement	ClassAd * myad = ULogEvent :: toClassAd ( ) ;	5422:1:115015:115053	908027	0	True				
ANR	908031	IdentifierDecl	* myad = ULogEvent :: toClassAd ( )		908027	0					
ANR	908032	IdentifierDeclType	ClassAd *		908027	0					
ANR	908033	Identifier	myad		908027	1					
ANR	908034	AssignmentExpression	* myad = ULogEvent :: toClassAd ( )		908027	2		=			
ANR	908035	Identifier	myad		908027	0					
ANR	908036	CallExpression	ULogEvent :: toClassAd ( )		908027	1					
ANR	908037	Callee	ULogEvent :: toClassAd		908027	0					
ANR	908038	Identifier	ULogEvent :: toClassAd		908027	0					
ANR	908039	ArgumentList			908027	1					
ANR	908040	IfStatement	if ( ! myad )		908027	1					
ANR	908041	Condition	! myad	5423:5:115060:115064	908027	0	True				
ANR	908042	UnaryOperationExpression	! myad		908027	0					
ANR	908043	UnaryOperator	!		908027	0					
ANR	908044	Identifier	myad		908027	1					
ANR	908045	ReturnStatement	return NULL ;	5423:13:115068:115079	908027	1	True				
ANR	908046	Identifier	NULL		908027	0					
ANR	908047	IfStatement	if ( name )		908027	2					
ANR	908048	Condition	name	5425:5:115087:115090	908027	0	True				
ANR	908049	Identifier	name		908027	0					
ANR	908050	CompoundStatement		5:11:80:80	908027	1					
ANR	908051	ExpressionStatement	"myad -> Assign ( ""Attribute"" , name )"	5426:2:115097:115128	908027	0	True				
ANR	908052	CallExpression	"myad -> Assign ( ""Attribute"" , name )"		908027	0					
ANR	908053	Callee	myad -> Assign		908027	0					
ANR	908054	PtrMemberAccess	myad -> Assign		908027	0					
ANR	908055	Identifier	myad		908027	0					
ANR	908056	Identifier	Assign		908027	1					
ANR	908057	ArgumentList	"""Attribute"""		908027	1					
ANR	908058	Argument	"""Attribute"""		908027	0					
ANR	908059	PrimaryExpression	"""Attribute"""		908027	0					
ANR	908060	Argument	name		908027	1					
ANR	908061	Identifier	name		908027	0					
ANR	908062	IfStatement	if ( value )		908027	3					
ANR	908063	Condition	value	5428:5:115138:115142	908027	0	True				
ANR	908064	Identifier	value		908027	0					
ANR	908065	CompoundStatement		8:12:132:132	908027	1					
ANR	908066	ExpressionStatement	"myad -> Assign ( ""Value"" , value )"	5429:2:115149:115177	908027	0	True				
ANR	908067	CallExpression	"myad -> Assign ( ""Value"" , value )"		908027	0					
ANR	908068	Callee	myad -> Assign		908027	0					
ANR	908069	PtrMemberAccess	myad -> Assign		908027	0					
ANR	908070	Identifier	myad		908027	0					
ANR	908071	Identifier	Assign		908027	1					
ANR	908072	ArgumentList	"""Value"""		908027	1					
ANR	908073	Argument	"""Value"""		908027	0					
ANR	908074	PrimaryExpression	"""Value"""		908027	0					
ANR	908075	Argument	value		908027	1					
ANR	908076	Identifier	value		908027	0					
ANR	908077	ReturnStatement	return myad ;	5432:1:115184:115195	908027	4	True				
ANR	908078	Identifier	myad		908027	0					
ANR	908079	ReturnType	ClassAd *		908027	1					
ANR	908080	Identifier	AttributeUpdate :: toClassAd		908027	2					
ANR	908081	ParameterList			908027	3					
ANR	908082	CFGEntryNode	ENTRY		908027		True				
ANR	908083	CFGExitNode	EXIT		908027		True				
ANR	908084	Symbol	NULL		908027						
ANR	908085	Symbol	name		908027						
ANR	908086	Symbol	myad		908027						
ANR	908087	Symbol	ULogEvent :: toClassAd		908027						
ANR	908088	Symbol	value		908027						
ANR	908089	Function	AttributeUpdate :: initFromClassAd	5435:0:115200:115475							
ANR	908090	FunctionDef	AttributeUpdate :: initFromClassAd (ClassAd * ad)		908089	0					
ANR	908091	CompoundStatement		5437:0:115251:115475	908089	0					
ANR	908092	IdentifierDeclStatement	MyString buf ;	5438:1:115254:115266	908089	0	True				
ANR	908093	IdentifierDecl	buf		908089	0					
ANR	908094	IdentifierDeclType	MyString		908089	0					
ANR	908095	Identifier	buf		908089	1					
ANR	908096	ExpressionStatement	ULogEvent :: initFromClassAd ( ad )	5439:1:115269:115299	908089	1	True				
ANR	908097	CallExpression	ULogEvent :: initFromClassAd ( ad )		908089	0					
ANR	908098	Callee	ULogEvent :: initFromClassAd		908089	0					
ANR	908099	Identifier	ULogEvent :: initFromClassAd		908089	0					
ANR	908100	ArgumentList	ad		908089	1					
ANR	908101	Argument	ad		908089	0					
ANR	908102	Identifier	ad		908089	0					
ANR	908103	IfStatement	if ( ! ad )		908089	2					
ANR	908104	Condition	! ad	5441:5:115307:115309	908089	0	True				
ANR	908105	UnaryOperationExpression	! ad		908089	0					
ANR	908106	UnaryOperator	!		908089	0					
ANR	908107	Identifier	ad		908089	1					
ANR	908108	ReturnStatement	return ;	5441:11:115313:115319	908089	1	True				
ANR	908109	IfStatement	"if ( ad -> LookupString ( ""Attribute"" , buf ) )"		908089	3					
ANR	908110	Condition	"ad -> LookupString ( ""Attribute"" , buf )"	5443:5:115327:115361	908089	0	True				
ANR	908111	CallExpression	"ad -> LookupString ( ""Attribute"" , buf )"		908089	0					
ANR	908112	Callee	ad -> LookupString		908089	0					
ANR	908113	PtrMemberAccess	ad -> LookupString		908089	0					
ANR	908114	Identifier	ad		908089	0					
ANR	908115	Identifier	LookupString		908089	1					
ANR	908116	ArgumentList	"""Attribute"""		908089	1					
ANR	908117	Argument	"""Attribute"""		908089	0					
ANR	908118	PrimaryExpression	"""Attribute"""		908089	0					
ANR	908119	Argument	buf		908089	1					
ANR	908120	Identifier	buf		908089	0					
ANR	908121	CompoundStatement		7:43:113:113	908089	1					
ANR	908122	ExpressionStatement	name = strdup ( buf . Value ( ) )	5444:2:115369:115395	908089	0	True				
ANR	908123	AssignmentExpression	name = strdup ( buf . Value ( ) )		908089	0		=			
ANR	908124	Identifier	name		908089	0					
ANR	908125	CallExpression	strdup ( buf . Value ( ) )		908089	1					
ANR	908126	Callee	strdup		908089	0					
ANR	908127	Identifier	strdup		908089	0					
ANR	908128	ArgumentList	buf . Value ( )		908089	1					
ANR	908129	Argument	buf . Value ( )		908089	0					
ANR	908130	CallExpression	buf . Value ( )		908089	0					
ANR	908131	Callee	buf . Value		908089	0					
ANR	908132	MemberAccess	buf . Value		908089	0					
ANR	908133	Identifier	buf		908089	0					
ANR	908134	Identifier	Value		908089	1					
ANR	908135	ArgumentList			908089	1					
ANR	908136	IfStatement	"if ( ad -> LookupString ( ""Value"" , buf ) )"		908089	4					
ANR	908137	Condition	"ad -> LookupString ( ""Value"" , buf )"	5446:5:115405:115435	908089	0	True				
ANR	908138	CallExpression	"ad -> LookupString ( ""Value"" , buf )"		908089	0					
ANR	908139	Callee	ad -> LookupString		908089	0					
ANR	908140	PtrMemberAccess	ad -> LookupString		908089	0					
ANR	908141	Identifier	ad		908089	0					
ANR	908142	Identifier	LookupString		908089	1					
ANR	908143	ArgumentList	"""Value"""		908089	1					
ANR	908144	Argument	"""Value"""		908089	0					
ANR	908145	PrimaryExpression	"""Value"""		908089	0					
ANR	908146	Argument	buf		908089	1					
ANR	908147	Identifier	buf		908089	0					
ANR	908148	CompoundStatement		10:39:187:187	908089	1					
ANR	908149	ExpressionStatement	value = strdup ( buf . Value ( ) )	5447:2:115443:115470	908089	0	True				
ANR	908150	AssignmentExpression	value = strdup ( buf . Value ( ) )		908089	0		=			
ANR	908151	Identifier	value		908089	0					
ANR	908152	CallExpression	strdup ( buf . Value ( ) )		908089	1					
ANR	908153	Callee	strdup		908089	0					
ANR	908154	Identifier	strdup		908089	0					
ANR	908155	ArgumentList	buf . Value ( )		908089	1					
ANR	908156	Argument	buf . Value ( )		908089	0					
ANR	908157	CallExpression	buf . Value ( )		908089	0					
ANR	908158	Callee	buf . Value		908089	0					
ANR	908159	MemberAccess	buf . Value		908089	0					
ANR	908160	Identifier	buf		908089	0					
ANR	908161	Identifier	Value		908089	1					
ANR	908162	ArgumentList			908089	1					
ANR	908163	ReturnType	void		908089	1					
ANR	908164	Identifier	AttributeUpdate :: initFromClassAd		908089	2					
ANR	908165	ParameterList	ClassAd * ad		908089	3					
ANR	908166	Parameter	ClassAd * ad	5436:33:115238:115248	908089	0	True				
ANR	908167	ParameterType	ClassAd *		908089	0					
ANR	908168	Identifier	ad		908089	1					
ANR	908169	CFGEntryNode	ENTRY		908089		True				
ANR	908170	CFGExitNode	EXIT		908089		True				
ANR	908171	Symbol	ad -> LookupString		908089						
ANR	908172	Symbol	buf		908089						
ANR	908173	Symbol	ad		908089						
ANR	908174	Symbol	buf . Value		908089						
ANR	908175	Symbol	name		908089						
ANR	908176	Symbol	* ad		908089						
ANR	908177	Symbol	strdup		908089						
ANR	908178	Symbol	value		908089						
ANR	908179	Function	AttributeUpdate :: setName	5451:0:115478:115622							
ANR	908180	FunctionDef	AttributeUpdate :: setName (const char * attr_name)		908179	0					
ANR	908181	CompoundStatement		5453:0:115531:115622	908179	0					
ANR	908182	IfStatement	if ( ! attr_name )		908179	0					
ANR	908183	Condition	! attr_name	5454:5:115538:115547	908179	0	True				
ANR	908184	UnaryOperationExpression	! attr_name		908179	0					
ANR	908185	UnaryOperator	!		908179	0					
ANR	908186	Identifier	attr_name		908179	1					
ANR	908187	CompoundStatement		2:17:18:18	908179	1					
ANR	908188	ReturnStatement	return ;	5455:2:115554:115560	908179	0	True				
ANR	908189	IfStatement	if ( name )		908179	1					
ANR	908190	Condition	name	5457:5:115570:115573	908179	0	True				
ANR	908191	Identifier	name		908179	0					
ANR	908192	CompoundStatement		5:11:44:44	908179	1					
ANR	908193	ExpressionStatement	free ( name )	5458:2:115580:115590	908179	0	True				
ANR	908194	CallExpression	free ( name )		908179	0					
ANR	908195	Callee	free		908179	0					
ANR	908196	Identifier	free		908179	0					
ANR	908197	ArgumentList	name		908179	1					
ANR	908198	Argument	name		908179	0					
ANR	908199	Identifier	name		908179	0					
ANR	908200	ExpressionStatement	name = strdup ( attr_name )	5460:1:115596:115620	908179	2	True				
ANR	908201	AssignmentExpression	name = strdup ( attr_name )		908179	0		=			
ANR	908202	Identifier	name		908179	0					
ANR	908203	CallExpression	strdup ( attr_name )		908179	1					
ANR	908204	Callee	strdup		908179	0					
ANR	908205	Identifier	strdup		908179	0					
ANR	908206	ArgumentList	attr_name		908179	1					
ANR	908207	Argument	attr_name		908179	0					
ANR	908208	Identifier	attr_name		908179	0					
ANR	908209	ReturnType	void		908179	1					
ANR	908210	Identifier	AttributeUpdate :: setName		908179	2					
ANR	908211	ParameterList	const char * attr_name		908179	3					
ANR	908212	Parameter	const char * attr_name	5452:25:115508:115528	908179	0	True				
ANR	908213	ParameterType	const char *		908179	0					
ANR	908214	Identifier	attr_name		908179	1					
ANR	908215	CFGEntryNode	ENTRY		908179		True				
ANR	908216	CFGExitNode	EXIT		908179		True				
ANR	908217	Symbol	attr_name		908179						
ANR	908218	Symbol	name		908179						
ANR	908219	Symbol	strdup		908179						
ANR	908220	Function	AttributeUpdate :: setValue	5463:0:115625:115776							
ANR	908221	FunctionDef	AttributeUpdate :: setValue (const char * attr_value)		908220	0					
ANR	908222	CompoundStatement		5465:0:115680:115776	908220	0					
ANR	908223	IfStatement	if ( ! attr_value )		908220	0					
ANR	908224	Condition	! attr_value	5466:5:115687:115697	908220	0	True				
ANR	908225	UnaryOperationExpression	! attr_value		908220	0					
ANR	908226	UnaryOperator	!		908220	0					
ANR	908227	Identifier	attr_value		908220	1					
ANR	908228	CompoundStatement		2:18:19:19	908220	1					
ANR	908229	ReturnStatement	return ;	5467:2:115704:115710	908220	0	True				
ANR	908230	IfStatement	if ( value )		908220	1					
ANR	908231	Condition	value	5469:5:115720:115724	908220	0	True				
ANR	908232	Identifier	value		908220	0					
ANR	908233	CompoundStatement		5:12:46:46	908220	1					
ANR	908234	ExpressionStatement	free ( value )	5470:2:115731:115742	908220	0	True				
ANR	908235	CallExpression	free ( value )		908220	0					
ANR	908236	Callee	free		908220	0					
ANR	908237	Identifier	free		908220	0					
ANR	908238	ArgumentList	value		908220	1					
ANR	908239	Argument	value		908220	0					
ANR	908240	Identifier	value		908220	0					
ANR	908241	ExpressionStatement	value = strdup ( attr_value )	5472:1:115748:115774	908220	2	True				
ANR	908242	AssignmentExpression	value = strdup ( attr_value )		908220	0		=			
ANR	908243	Identifier	value		908220	0					
ANR	908244	CallExpression	strdup ( attr_value )		908220	1					
ANR	908245	Callee	strdup		908220	0					
ANR	908246	Identifier	strdup		908220	0					
ANR	908247	ArgumentList	attr_value		908220	1					
ANR	908248	Argument	attr_value		908220	0					
ANR	908249	Identifier	attr_value		908220	0					
ANR	908250	ReturnType	void		908220	1					
ANR	908251	Identifier	AttributeUpdate :: setValue		908220	2					
ANR	908252	ParameterList	const char * attr_value		908220	3					
ANR	908253	Parameter	const char * attr_value	5464:26:115656:115677	908220	0	True				
ANR	908254	ParameterType	const char *		908220	0					
ANR	908255	Identifier	attr_value		908220	1					
ANR	908256	CFGEntryNode	ENTRY		908220		True				
ANR	908257	CFGExitNode	EXIT		908220		True				
ANR	908258	Symbol	strdup		908220						
ANR	908259	Symbol	value		908220						
ANR	908260	Symbol	attr_value		908220						
ANR	908261	Function	AttributeUpdate :: setOldValue	5475:0:115779:115968							
ANR	908262	FunctionDef	AttributeUpdate :: setOldValue (const char * attr_value)		908261	0					
ANR	908263	CompoundStatement		5477:0:115837:115968	908261	0					
ANR	908264	IfStatement	if ( ! attr_value )		908261	0					
ANR	908265	Condition	! attr_value	5478:5:115844:115854	908261	0	True				
ANR	908266	UnaryOperationExpression	! attr_value		908261	0					
ANR	908267	UnaryOperator	!		908261	0					
ANR	908268	Identifier	attr_value		908261	1					
ANR	908269	CompoundStatement		2:18:19:19	908261	1					
ANR	908270	ReturnStatement	return ;	5479:2:115861:115867	908261	0	True				
ANR	908271	IfStatement	if ( old_value )		908261	1					
ANR	908272	Condition	old_value	5481:5:115877:115885	908261	0	True				
ANR	908273	Identifier	old_value		908261	0					
ANR	908274	CompoundStatement		5:16:50:50	908261	1					
ANR	908275	ExpressionStatement	free ( old_value )	5482:2:115892:115907	908261	0	True				
ANR	908276	CallExpression	free ( old_value )		908261	0					
ANR	908277	Callee	free		908261	0					
ANR	908278	Identifier	free		908261	0					
ANR	908279	ArgumentList	old_value		908261	1					
ANR	908280	Argument	old_value		908261	0					
ANR	908281	Identifier	old_value		908261	0					
ANR	908282	IfStatement	if ( attr_value )		908261	2					
ANR	908283	Condition	attr_value	5484:5:115917:115926	908261	0	True				
ANR	908284	Identifier	attr_value		908261	0					
ANR	908285	CompoundStatement		8:17:91:91	908261	1					
ANR	908286	ExpressionStatement	old_value = strdup ( attr_value )	5485:2:115933:115963	908261	0	True				
ANR	908287	AssignmentExpression	old_value = strdup ( attr_value )		908261	0		=			
ANR	908288	Identifier	old_value		908261	0					
ANR	908289	CallExpression	strdup ( attr_value )		908261	1					
ANR	908290	Callee	strdup		908261	0					
ANR	908291	Identifier	strdup		908261	0					
ANR	908292	ArgumentList	attr_value		908261	1					
ANR	908293	Argument	attr_value		908261	0					
ANR	908294	Identifier	attr_value		908261	0					
ANR	908295	ReturnType	void		908261	1					
ANR	908296	Identifier	AttributeUpdate :: setOldValue		908261	2					
ANR	908297	ParameterList	const char * attr_value		908261	3					
ANR	908298	Parameter	const char * attr_value	5476:29:115813:115834	908261	0	True				
ANR	908299	ParameterType	const char *		908261	0					
ANR	908300	Identifier	attr_value		908261	1					
ANR	908301	CFGEntryNode	ENTRY		908261		True				
ANR	908302	CFGExitNode	EXIT		908261		True				
ANR	908303	Symbol	old_value		908261						
ANR	908304	Symbol	strdup		908261						
ANR	908305	Symbol	attr_value		908261						
