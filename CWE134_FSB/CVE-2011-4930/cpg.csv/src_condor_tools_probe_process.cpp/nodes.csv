command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4239398	File	data/converged/CVE-2011-4930_htcondor/src_condor_tools_probe_process.cpp								
ANR	4239399	DeclStmt									
ANR	4239400	Decl							SegmentTable	SegmentTable	g_segment_table
ANR	4239401	DeclStmt									
ANR	4239402	Decl							SegmentTable	SegmentTable *	g_st
ANR	4239403	DeclStmt									
ANR	4239404	Decl							void	void ( char * argv0 )	usage
ANR	4239405	DeclStmt									
ANR	4239406	Decl							int	"int ( char * arg , char * thing )"	matches
ANR	4239407	Function	usage	36:0:1209:1537							
ANR	4239408	FunctionDef	usage (char * argv0)		4239407	0					
ANR	4239409	CompoundStatement		37:0:1233:1537	4239407	0					
ANR	4239410	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s <options>\\n"" , argv0 )"	38:1:1236:1278	4239407	0	True				
ANR	4239411	CallExpression	"dprintf ( D_ALWAYS , ""%s <options>\\n"" , argv0 )"		4239407	0					
ANR	4239412	Callee	dprintf		4239407	0					
ANR	4239413	Identifier	dprintf		4239407	0					
ANR	4239414	ArgumentList	D_ALWAYS		4239407	1					
ANR	4239415	Argument	D_ALWAYS		4239407	0					
ANR	4239416	Identifier	D_ALWAYS		4239407	0					
ANR	4239417	Argument	"""%s <options>\\n"""		4239407	1					
ANR	4239418	PrimaryExpression	"""%s <options>\\n"""		4239407	0					
ANR	4239419	Argument	argv0		4239407	2					
ANR	4239420	Identifier	argv0		4239407	0					
ANR	4239421	Statement	dprintf	40:1:1282:1288	4239407	1	True				
ANR	4239422	Statement	(	40:8:1289:1289	4239407	2	True				
ANR	4239423	Statement	D_ALWAYS	40:9:1290:1297	4239407	3	True				
ANR	4239424	Statement	","	40:17:1298:1298	4239407	4	True				
ANR	4239425	Statement	""" --vdso-addr        Emit the vsyscall page location if applicable\\n"""	42:0:1301:1369	4239407	5	True				
ANR	4239426	Statement	""" --segments         Emit a map of all loaded segments\\n"""	43:0:1371:1427	4239407	6	True				
ANR	4239427	Statement	""" --no-pers-change   [Linux Only] Don't change the personality of the process\\n"""	44:0:1429:1508	4239407	7	True				
ANR	4239428	Statement	)	46:1:1512:1512	4239407	8	True				
ANR	4239429	ExpressionStatement		46:2:1513:1513	4239407	9	True				
ANR	4239430	ExpressionStatement	exit ( EXIT_FAILURE )	48:1:1517:1535	4239407	10	True				
ANR	4239431	CallExpression	exit ( EXIT_FAILURE )		4239407	0					
ANR	4239432	Callee	exit		4239407	0					
ANR	4239433	Identifier	exit		4239407	0					
ANR	4239434	ArgumentList	EXIT_FAILURE		4239407	1					
ANR	4239435	Argument	EXIT_FAILURE		4239407	0					
ANR	4239436	Identifier	EXIT_FAILURE		4239407	0					
ANR	4239437	ReturnType	void		4239407	1					
ANR	4239438	Identifier	usage		4239407	2					
ANR	4239439	ParameterList	char * argv0		4239407	3					
ANR	4239440	Parameter	char * argv0	36:11:1220:1230	4239407	0	True				
ANR	4239441	ParameterType	char *		4239407	0					
ANR	4239442	Identifier	argv0		4239407	1					
ANR	4239443	CFGEntryNode	ENTRY		4239407		True				
ANR	4239444	CFGExitNode	EXIT		4239407		True				
ANR	4239445	Symbol	EXIT_FAILURE		4239407						
ANR	4239446	Symbol	D_ALWAYS		4239407						
ANR	4239447	Symbol	argv0		4239407						
ANR	4239448	Function	matches	52:0:1590:1703							
ANR	4239449	FunctionDef	"matches (char * arg , char * thing)"		4239448	0					
ANR	4239450	CompoundStatement		53:0:1626:1703	4239448	0					
ANR	4239451	IfStatement	"if ( strncmp ( arg , thing , strlen ( thing ) ) == 0 )"		4239448	0					
ANR	4239452	Condition	"strncmp ( arg , thing , strlen ( thing ) ) == 0"	54:5:1633:1671	4239448	0	True				
ANR	4239453	EqualityExpression	"strncmp ( arg , thing , strlen ( thing ) ) == 0"		4239448	0		==			
ANR	4239454	CallExpression	"strncmp ( arg , thing , strlen ( thing ) )"		4239448	0					
ANR	4239455	Callee	strncmp		4239448	0					
ANR	4239456	Identifier	strncmp		4239448	0					
ANR	4239457	ArgumentList	arg		4239448	1					
ANR	4239458	Argument	arg		4239448	0					
ANR	4239459	Identifier	arg		4239448	0					
ANR	4239460	Argument	thing		4239448	1					
ANR	4239461	Identifier	thing		4239448	0					
ANR	4239462	Argument	strlen ( thing )		4239448	2					
ANR	4239463	CallExpression	strlen ( thing )		4239448	0					
ANR	4239464	Callee	strlen		4239448	0					
ANR	4239465	Identifier	strlen		4239448	0					
ANR	4239466	ArgumentList	thing		4239448	1					
ANR	4239467	Argument	thing		4239448	0					
ANR	4239468	Identifier	thing		4239448	0					
ANR	4239469	PrimaryExpression	0		4239448	1					
ANR	4239470	CompoundStatement		2:46:47:47	4239448	1					
ANR	4239471	ReturnStatement	return 1 ;	55:2:1678:1686	4239448	0	True				
ANR	4239472	PrimaryExpression	1		4239448	0					
ANR	4239473	ReturnStatement	return 0 ;	58:1:1693:1701	4239448	1	True				
ANR	4239474	PrimaryExpression	0		4239448	0					
ANR	4239475	ReturnType	int		4239448	1					
ANR	4239476	Identifier	matches		4239448	2					
ANR	4239477	ParameterList	"char * arg , char * thing"		4239448	3					
ANR	4239478	Parameter	char * arg	52:12:1602:1610	4239448	0	True				
ANR	4239479	ParameterType	char *		4239448	0					
ANR	4239480	Identifier	arg		4239448	1					
ANR	4239481	Parameter	char * thing	52:23:1613:1623	4239448	1	True				
ANR	4239482	ParameterType	char *		4239448	0					
ANR	4239483	Identifier	thing		4239448	1					
ANR	4239484	CFGEntryNode	ENTRY		4239448		True				
ANR	4239485	CFGExitNode	EXIT		4239448		True				
ANR	4239486	Symbol	strlen		4239448						
ANR	4239487	Symbol	strncmp		4239448						
ANR	4239488	Symbol	arg		4239448						
ANR	4239489	Symbol	thing		4239448						
ANR	4239490	Function	main	61:0:1706:3518							
ANR	4239491	FunctionDef	"main (int argc , char * argv [ ] , char * envp [ ])"		4239490	0					
ANR	4239492	CompoundStatement		62:0:1753:3518	4239490	0					
ANR	4239493	IdentifierDeclStatement	unsigned long long vdso_idx ;	63:1:1756:1783	4239490	0	True				
ANR	4239494	IdentifierDecl	vdso_idx		4239490	0					
ANR	4239495	IdentifierDeclType	unsigned long long		4239490	0					
ANR	4239496	Identifier	vdso_idx		4239490	1					
ANR	4239497	IdentifierDeclStatement	int i ;	64:1:1786:1791	4239490	1	True				
ANR	4239498	IdentifierDecl	i		4239490	0					
ANR	4239499	IdentifierDeclType	int		4239490	0					
ANR	4239500	Identifier	i		4239490	1					
ANR	4239501	IdentifierDeclStatement	int pers_change = 1 ;	65:1:1794:1813	4239490	2	True				
ANR	4239502	IdentifierDecl	pers_change = 1		4239490	0					
ANR	4239503	IdentifierDeclType	int		4239490	0					
ANR	4239504	Identifier	pers_change		4239490	1					
ANR	4239505	AssignmentExpression	pers_change = 1		4239490	2		=			
ANR	4239506	Identifier	pers_change		4239490	0					
ANR	4239507	PrimaryExpression	1		4239490	1					
ANR	4239508	IdentifierDeclStatement	char * * new_args ;	66:1:1833:1848	4239490	3	True				
ANR	4239509	IdentifierDecl	* * new_args		4239490	0					
ANR	4239510	IdentifierDeclType	char * *		4239490	0					
ANR	4239511	Identifier	new_args		4239490	1					
ANR	4239512	IdentifierDeclStatement	char my_exec [ PATH_MAX ] ;	67:1:1851:1873	4239490	4	True				
ANR	4239513	IdentifierDecl	my_exec [ PATH_MAX ]		4239490	0					
ANR	4239514	IdentifierDeclType	char [ PATH_MAX ]		4239490	0					
ANR	4239515	Identifier	my_exec		4239490	1					
ANR	4239516	Identifier	PATH_MAX		4239490	2					
ANR	4239517	ExpressionStatement	Termlog = 1	69:1:1877:1888	4239490	5	True				
ANR	4239518	AssignmentExpression	Termlog = 1		4239490	0		=			
ANR	4239519	Identifier	Termlog		4239490	0					
ANR	4239520	PrimaryExpression	1		4239490	1					
ANR	4239521	ExpressionStatement	"dprintf_config ( ""TOOL"" , get_param_functions ( ) )"	70:1:1891:1936	4239490	6	True				
ANR	4239522	CallExpression	"dprintf_config ( ""TOOL"" , get_param_functions ( ) )"		4239490	0					
ANR	4239523	Callee	dprintf_config		4239490	0					
ANR	4239524	Identifier	dprintf_config		4239490	0					
ANR	4239525	ArgumentList	"""TOOL"""		4239490	1					
ANR	4239526	Argument	"""TOOL"""		4239490	0					
ANR	4239527	PrimaryExpression	"""TOOL"""		4239490	0					
ANR	4239528	Argument	get_param_functions ( )		4239490	1					
ANR	4239529	CallExpression	get_param_functions ( )		4239490	0					
ANR	4239530	Callee	get_param_functions		4239490	0					
ANR	4239531	Identifier	get_param_functions		4239490	0					
ANR	4239532	ArgumentList			4239490	1					
ANR	4239533	ExpressionStatement	"set_debug_flags ( ""D_ALWAYS"" )"	71:1:1939:1966	4239490	7	True				
ANR	4239534	CallExpression	"set_debug_flags ( ""D_ALWAYS"" )"		4239490	0					
ANR	4239535	Callee	set_debug_flags		4239490	0					
ANR	4239536	Identifier	set_debug_flags		4239490	0					
ANR	4239537	ArgumentList	"""D_ALWAYS"""		4239490	1					
ANR	4239538	Argument	"""D_ALWAYS"""		4239490	0					
ANR	4239539	PrimaryExpression	"""D_ALWAYS"""		4239490	0					
ANR	4239540	ExpressionStatement	"set_debug_flags ( ""D_NOHEADER"" )"	72:1:1969:1998	4239490	8	True				
ANR	4239541	CallExpression	"set_debug_flags ( ""D_NOHEADER"" )"		4239490	0					
ANR	4239542	Callee	set_debug_flags		4239490	0					
ANR	4239543	Identifier	set_debug_flags		4239490	0					
ANR	4239544	ArgumentList	"""D_NOHEADER"""		4239490	1					
ANR	4239545	Argument	"""D_NOHEADER"""		4239490	0					
ANR	4239546	PrimaryExpression	"""D_NOHEADER"""		4239490	0					
ANR	4239547	IfStatement	if ( argc < 2 )		4239490	9					
ANR	4239548	Condition	argc < 2	75:5:2047:2054	4239490	0	True				
ANR	4239549	RelationalExpression	argc < 2		4239490	0		<			
ANR	4239550	Identifier	argc		4239490	0					
ANR	4239551	PrimaryExpression	2		4239490	1					
ANR	4239552	CompoundStatement		14:15:303:303	4239490	1					
ANR	4239553	ExpressionStatement	usage ( argv [ 0 ] )	76:2:2061:2075	4239490	0	True				
ANR	4239554	CallExpression	usage ( argv [ 0 ] )		4239490	0					
ANR	4239555	Callee	usage		4239490	0					
ANR	4239556	Identifier	usage		4239490	0					
ANR	4239557	ArgumentList	argv [ 0 ]		4239490	1					
ANR	4239558	Argument	argv [ 0 ]		4239490	0					
ANR	4239559	ArrayIndexing	argv [ 0 ]		4239490	0					
ANR	4239560	Identifier	argv		4239490	0					
ANR	4239561	PrimaryExpression	0		4239490	1					
ANR	4239562	ForStatement	for ( i = 1 ; i < argc ; i ++ )		4239490	10					
ANR	4239563	ForInit	i = 1 ;	83:6:2211:2216	4239490	0	True				
ANR	4239564	AssignmentExpression	i = 1		4239490	0		=			
ANR	4239565	Identifier	i		4239490	0					
ANR	4239566	PrimaryExpression	1		4239490	1					
ANR	4239567	Condition	i < argc	83:13:2218:2225	4239490	1	True				
ANR	4239568	RelationalExpression	i < argc		4239490	0		<			
ANR	4239569	Identifier	i		4239490	0					
ANR	4239570	Identifier	argc		4239490	1					
ANR	4239571	PostIncDecOperationExpression	i ++	83:23:2228:2230	4239490	2	True				
ANR	4239572	Identifier	i		4239490	0					
ANR	4239573	IncDec	++		4239490	1					
ANR	4239574	CompoundStatement		22:28:479:479	4239490	3					
ANR	4239575	IfStatement	"if ( matches ( argv [ i ] , ""--no-pers-change"" ) )"		4239490	0					
ANR	4239576	Condition	"matches ( argv [ i ] , ""--no-pers-change"" )"	84:6:2241:2276	4239490	0	True				
ANR	4239577	CallExpression	"matches ( argv [ i ] , ""--no-pers-change"" )"		4239490	0					
ANR	4239578	Callee	matches		4239490	0					
ANR	4239579	Identifier	matches		4239490	0					
ANR	4239580	ArgumentList	argv [ i ]		4239490	1					
ANR	4239581	Argument	argv [ i ]		4239490	0					
ANR	4239582	ArrayIndexing	argv [ i ]		4239490	0					
ANR	4239583	Identifier	argv		4239490	0					
ANR	4239584	Identifier	i		4239490	1					
ANR	4239585	Argument	"""--no-pers-change"""		4239490	1					
ANR	4239586	PrimaryExpression	"""--no-pers-change"""		4239490	0					
ANR	4239587	CompoundStatement		23:44:525:525	4239490	1					
ANR	4239588	ExpressionStatement	pers_change = 0	85:3:2284:2299	4239490	0	True				
ANR	4239589	AssignmentExpression	pers_change = 0		4239490	0		=			
ANR	4239590	Identifier	pers_change		4239490	0					
ANR	4239591	PrimaryExpression	0		4239490	1					
ANR	4239592	BreakStatement	break ;	86:3:2304:2309	4239490	1	True				
ANR	4239593	IfStatement	if ( pers_change )		4239490	11					
ANR	4239594	Condition	pers_change	90:5:2324:2334	4239490	0	True				
ANR	4239595	Identifier	pers_change		4239490	0					
ANR	4239596	CompoundStatement		29:18:583:583	4239490	1					
ANR	4239597	ExpressionStatement	new_args = ( char * * ) malloc ( sizeof ( char * ) * ( argc + 2 ) )	92:2:2396:2449	4239490	0	True				
ANR	4239598	AssignmentExpression	new_args = ( char * * ) malloc ( sizeof ( char * ) * ( argc + 2 ) )		4239490	0		=			
ANR	4239599	Identifier	new_args		4239490	0					
ANR	4239600	CastExpression	( char * * ) malloc ( sizeof ( char * ) * ( argc + 2 ) )		4239490	1					
ANR	4239601	CastTarget	char * *		4239490	0					
ANR	4239602	CallExpression	malloc ( sizeof ( char * ) * ( argc + 2 ) )		4239490	1					
ANR	4239603	Callee	malloc		4239490	0					
ANR	4239604	Identifier	malloc		4239490	0					
ANR	4239605	ArgumentList	sizeof ( char * ) * ( argc + 2 )		4239490	1					
ANR	4239606	Argument	sizeof ( char * ) * ( argc + 2 )		4239490	0					
ANR	4239607	MultiplicativeExpression	sizeof ( char * ) * ( argc + 2 )		4239490	0		*			
ANR	4239608	SizeofExpression	sizeof ( char * )		4239490	0					
ANR	4239609	Sizeof	sizeof		4239490	0					
ANR	4239610	SizeofOperand	char *		4239490	1					
ANR	4239611	AdditiveExpression	argc + 2		4239490	1		+			
ANR	4239612	Identifier	argc		4239490	0					
ANR	4239613	PrimaryExpression	2		4239490	1					
ANR	4239614	IfStatement	if ( new_args == NULL )		4239490	1					
ANR	4239615	Condition	new_args == NULL	93:6:2457:2472	4239490	0	True				
ANR	4239616	EqualityExpression	new_args == NULL		4239490	0		==			
ANR	4239617	Identifier	new_args		4239490	0					
ANR	4239618	Identifier	NULL		4239490	1					
ANR	4239619	CompoundStatement		32:24:721:721	4239490	1					
ANR	4239620	ExpressionStatement	"dprintf ( D_ALWAYS , ""Out of memory! Exiting.\\n"" )"	94:3:2480:2526	4239490	0	True				
ANR	4239621	CallExpression	"dprintf ( D_ALWAYS , ""Out of memory! Exiting.\\n"" )"		4239490	0					
ANR	4239622	Callee	dprintf		4239490	0					
ANR	4239623	Identifier	dprintf		4239490	0					
ANR	4239624	ArgumentList	D_ALWAYS		4239490	1					
ANR	4239625	Argument	D_ALWAYS		4239490	0					
ANR	4239626	Identifier	D_ALWAYS		4239490	0					
ANR	4239627	Argument	"""Out of memory! Exiting.\\n"""		4239490	1					
ANR	4239628	PrimaryExpression	"""Out of memory! Exiting.\\n"""		4239490	0					
ANR	4239629	ExpressionStatement	exit ( EXIT_FAILURE )	95:3:2531:2549	4239490	1	True				
ANR	4239630	CallExpression	exit ( EXIT_FAILURE )		4239490	0					
ANR	4239631	Callee	exit		4239490	0					
ANR	4239632	Identifier	exit		4239490	0					
ANR	4239633	ArgumentList	EXIT_FAILURE		4239490	1					
ANR	4239634	Argument	EXIT_FAILURE		4239490	0					
ANR	4239635	Identifier	EXIT_FAILURE		4239490	0					
ANR	4239636	ExpressionStatement	new_args [ 0 ] = strdup ( argv [ 0 ] )	99:2:2628:2657	4239490	2	True				
ANR	4239637	AssignmentExpression	new_args [ 0 ] = strdup ( argv [ 0 ] )		4239490	0		=			
ANR	4239638	ArrayIndexing	new_args [ 0 ]		4239490	0					
ANR	4239639	Identifier	new_args		4239490	0					
ANR	4239640	PrimaryExpression	0		4239490	1					
ANR	4239641	CallExpression	strdup ( argv [ 0 ] )		4239490	1					
ANR	4239642	Callee	strdup		4239490	0					
ANR	4239643	Identifier	strdup		4239490	0					
ANR	4239644	ArgumentList	argv [ 0 ]		4239490	1					
ANR	4239645	Argument	argv [ 0 ]		4239490	0					
ANR	4239646	ArrayIndexing	argv [ 0 ]		4239490	0					
ANR	4239647	Identifier	argv		4239490	0					
ANR	4239648	PrimaryExpression	0		4239490	1					
ANR	4239649	ExpressionStatement	"new_args [ 1 ] = strdup ( ""--no-pers-change"" )"	100:2:2661:2701	4239490	3	True				
ANR	4239650	AssignmentExpression	"new_args [ 1 ] = strdup ( ""--no-pers-change"" )"		4239490	0		=			
ANR	4239651	ArrayIndexing	new_args [ 1 ]		4239490	0					
ANR	4239652	Identifier	new_args		4239490	0					
ANR	4239653	PrimaryExpression	1		4239490	1					
ANR	4239654	CallExpression	"strdup ( ""--no-pers-change"" )"		4239490	1					
ANR	4239655	Callee	strdup		4239490	0					
ANR	4239656	Identifier	strdup		4239490	0					
ANR	4239657	ArgumentList	"""--no-pers-change"""		4239490	1					
ANR	4239658	Argument	"""--no-pers-change"""		4239490	0					
ANR	4239659	PrimaryExpression	"""--no-pers-change"""		4239490	0					
ANR	4239660	ForStatement	for ( i = 1 ; i < argc ; i ++ )		4239490	4					
ANR	4239661	ForInit	i = 1 ;	101:7:2710:2715	4239490	0	True				
ANR	4239662	AssignmentExpression	i = 1		4239490	0		=			
ANR	4239663	Identifier	i		4239490	0					
ANR	4239664	PrimaryExpression	1		4239490	1					
ANR	4239665	Condition	i < argc	101:14:2717:2724	4239490	1	True				
ANR	4239666	RelationalExpression	i < argc		4239490	0		<			
ANR	4239667	Identifier	i		4239490	0					
ANR	4239668	Identifier	argc		4239490	1					
ANR	4239669	PostIncDecOperationExpression	i ++	101:24:2727:2729	4239490	2	True				
ANR	4239670	Identifier	i		4239490	0					
ANR	4239671	IncDec	++		4239490	1					
ANR	4239672	CompoundStatement		40:29:978:978	4239490	3					
ANR	4239673	ExpressionStatement	new_args [ 1 + i ] = strdup ( argv [ i ] )	102:3:2737:2768	4239490	0	True				
ANR	4239674	AssignmentExpression	new_args [ 1 + i ] = strdup ( argv [ i ] )		4239490	0		=			
ANR	4239675	ArrayIndexing	new_args [ 1 + i ]		4239490	0					
ANR	4239676	Identifier	new_args		4239490	0					
ANR	4239677	AdditiveExpression	1 + i		4239490	1		+			
ANR	4239678	PrimaryExpression	1		4239490	0					
ANR	4239679	Identifier	i		4239490	1					
ANR	4239680	CallExpression	strdup ( argv [ i ] )		4239490	1					
ANR	4239681	Callee	strdup		4239490	0					
ANR	4239682	Identifier	strdup		4239490	0					
ANR	4239683	ArgumentList	argv [ i ]		4239490	1					
ANR	4239684	Argument	argv [ i ]		4239490	0					
ANR	4239685	ArrayIndexing	argv [ i ]		4239490	0					
ANR	4239686	Identifier	argv		4239490	0					
ANR	4239687	Identifier	i		4239490	1					
ANR	4239688	ExpressionStatement	new_args [ 1 + i ] = NULL	104:2:2776:2796	4239490	5	True				
ANR	4239689	AssignmentExpression	new_args [ 1 + i ] = NULL		4239490	0		=			
ANR	4239690	ArrayIndexing	new_args [ 1 + i ]		4239490	0					
ANR	4239691	Identifier	new_args		4239490	0					
ANR	4239692	AdditiveExpression	1 + i		4239490	1		+			
ANR	4239693	PrimaryExpression	1		4239490	0					
ANR	4239694	Identifier	i		4239490	1					
ANR	4239695	Identifier	NULL		4239490	1					
ANR	4239696	ExpressionStatement	patch_personality ( )	106:2:2801:2820	4239490	6	True				
ANR	4239697	CallExpression	patch_personality ( )		4239490	0					
ANR	4239698	Callee	patch_personality		4239490	0					
ANR	4239699	Identifier	patch_personality		4239490	0					
ANR	4239700	ArgumentList			4239490	1					
ANR	4239701	ExpressionStatement	"execve ( ""/proc/self/exe"" , new_args , envp )"	108:2:2825:2865	4239490	7	True				
ANR	4239702	CallExpression	"execve ( ""/proc/self/exe"" , new_args , envp )"		4239490	0					
ANR	4239703	Callee	execve		4239490	0					
ANR	4239704	Identifier	execve		4239490	0					
ANR	4239705	ArgumentList	"""/proc/self/exe"""		4239490	1					
ANR	4239706	Argument	"""/proc/self/exe"""		4239490	0					
ANR	4239707	PrimaryExpression	"""/proc/self/exe"""		4239490	0					
ANR	4239708	Argument	new_args		4239490	1					
ANR	4239709	Identifier	new_args		4239490	0					
ANR	4239710	Argument	envp		4239490	2					
ANR	4239711	Identifier	envp		4239490	0					
ANR	4239712	ExpressionStatement	"dprintf ( D_ALWAYS , ""execve failed: errno %d(%s)\\n"" , errno , strerror ( errno ) )"	110:2:2870:2947	4239490	8	True				
ANR	4239713	CallExpression	"dprintf ( D_ALWAYS , ""execve failed: errno %d(%s)\\n"" , errno , strerror ( errno ) )"		4239490	0					
ANR	4239714	Callee	dprintf		4239490	0					
ANR	4239715	Identifier	dprintf		4239490	0					
ANR	4239716	ArgumentList	D_ALWAYS		4239490	1					
ANR	4239717	Argument	D_ALWAYS		4239490	0					
ANR	4239718	Identifier	D_ALWAYS		4239490	0					
ANR	4239719	Argument	"""execve failed: errno %d(%s)\\n"""		4239490	1					
ANR	4239720	PrimaryExpression	"""execve failed: errno %d(%s)\\n"""		4239490	0					
ANR	4239721	Argument	errno		4239490	2					
ANR	4239722	Identifier	errno		4239490	0					
ANR	4239723	Argument	strerror ( errno )		4239490	3					
ANR	4239724	CallExpression	strerror ( errno )		4239490	0					
ANR	4239725	Callee	strerror		4239490	0					
ANR	4239726	Identifier	strerror		4239490	0					
ANR	4239727	ArgumentList	errno		4239490	1					
ANR	4239728	Argument	errno		4239490	0					
ANR	4239729	Identifier	errno		4239490	0					
ANR	4239730	ExpressionStatement	exit ( EXIT_FAILURE )	113:2:2952:2970	4239490	9	True				
ANR	4239731	CallExpression	exit ( EXIT_FAILURE )		4239490	0					
ANR	4239732	Callee	exit		4239490	0					
ANR	4239733	Identifier	exit		4239490	0					
ANR	4239734	ArgumentList	EXIT_FAILURE		4239490	1					
ANR	4239735	Argument	EXIT_FAILURE		4239490	0					
ANR	4239736	Identifier	EXIT_FAILURE		4239490	0					
ANR	4239737	ExpressionStatement	"segment_table_init ( g_st , getpid ( ) )"	117:1:2984:3018	4239490	12	True				
ANR	4239738	CallExpression	"segment_table_init ( g_st , getpid ( ) )"		4239490	0					
ANR	4239739	Callee	segment_table_init		4239490	0					
ANR	4239740	Identifier	segment_table_init		4239490	0					
ANR	4239741	ArgumentList	g_st		4239490	1					
ANR	4239742	Argument	g_st		4239490	0					
ANR	4239743	Identifier	g_st		4239490	0					
ANR	4239744	Argument	getpid ( )		4239490	1					
ANR	4239745	CallExpression	getpid ( )		4239490	0					
ANR	4239746	Callee	getpid		4239490	0					
ANR	4239747	Identifier	getpid		4239490	0					
ANR	4239748	ArgumentList			4239490	1					
ANR	4239749	ForStatement	for ( i = 1 ; i < argc ; i ++ )		4239490	13					
ANR	4239750	ForInit	i = 1 ;	119:6:3027:3032	4239490	0	True				
ANR	4239751	AssignmentExpression	i = 1		4239490	0		=			
ANR	4239752	Identifier	i		4239490	0					
ANR	4239753	PrimaryExpression	1		4239490	1					
ANR	4239754	Condition	i < argc	119:13:3034:3041	4239490	1	True				
ANR	4239755	RelationalExpression	i < argc		4239490	0		<			
ANR	4239756	Identifier	i		4239490	0					
ANR	4239757	Identifier	argc		4239490	1					
ANR	4239758	PostIncDecOperationExpression	i ++	119:23:3044:3046	4239490	2	True				
ANR	4239759	Identifier	i		4239490	0					
ANR	4239760	IncDec	++		4239490	1					
ANR	4239761	CompoundStatement		58:28:1295:1295	4239490	3					
ANR	4239762	IfStatement	"if ( matches ( argv [ i ] , ""--vdso-addr"" ) )"		4239490	0					
ANR	4239763	Condition	"matches ( argv [ i ] , ""--vdso-addr"" )"	120:6:3057:3087	4239490	0	True				
ANR	4239764	CallExpression	"matches ( argv [ i ] , ""--vdso-addr"" )"		4239490	0					
ANR	4239765	Callee	matches		4239490	0					
ANR	4239766	Identifier	matches		4239490	0					
ANR	4239767	ArgumentList	argv [ i ]		4239490	1					
ANR	4239768	Argument	argv [ i ]		4239490	0					
ANR	4239769	ArrayIndexing	argv [ i ]		4239490	0					
ANR	4239770	Identifier	argv		4239490	0					
ANR	4239771	Identifier	i		4239490	1					
ANR	4239772	Argument	"""--vdso-addr"""		4239490	1					
ANR	4239773	PrimaryExpression	"""--vdso-addr"""		4239490	0					
ANR	4239774	CompoundStatement		59:39:1336:1336	4239490	1					
ANR	4239775	ExpressionStatement	vdso_idx = segment_table_find_vdso ( g_st )	121:3:3095:3135	4239490	0	True				
ANR	4239776	AssignmentExpression	vdso_idx = segment_table_find_vdso ( g_st )		4239490	0		=			
ANR	4239777	Identifier	vdso_idx		4239490	0					
ANR	4239778	CallExpression	segment_table_find_vdso ( g_st )		4239490	1					
ANR	4239779	Callee	segment_table_find_vdso		4239490	0					
ANR	4239780	Identifier	segment_table_find_vdso		4239490	0					
ANR	4239781	ArgumentList	g_st		4239490	1					
ANR	4239782	Argument	g_st		4239490	0					
ANR	4239783	Identifier	g_st		4239490	0					
ANR	4239784	IfStatement	if ( vdso_idx == NOT_FOUND )		4239490	1					
ANR	4239785	Condition	vdso_idx == NOT_FOUND	123:7:3145:3165	4239490	0	True				
ANR	4239786	EqualityExpression	vdso_idx == NOT_FOUND		4239490	0		==			
ANR	4239787	Identifier	vdso_idx		4239490	0					
ANR	4239788	Identifier	NOT_FOUND		4239490	1					
ANR	4239789	CompoundStatement		62:30:1414:1414	4239490	1					
ANR	4239790	ExpressionStatement	"dprintf ( D_ALWAYS , ""VDSO: N/A\\n"" )"	124:4:3174:3206	4239490	0	True				
ANR	4239791	CallExpression	"dprintf ( D_ALWAYS , ""VDSO: N/A\\n"" )"		4239490	0					
ANR	4239792	Callee	dprintf		4239490	0					
ANR	4239793	Identifier	dprintf		4239490	0					
ANR	4239794	ArgumentList	D_ALWAYS		4239490	1					
ANR	4239795	Argument	D_ALWAYS		4239490	0					
ANR	4239796	Identifier	D_ALWAYS		4239490	0					
ANR	4239797	Argument	"""VDSO: N/A\\n"""		4239490	1					
ANR	4239798	PrimaryExpression	"""VDSO: N/A\\n"""		4239490	0					
ANR	4239799	ReturnStatement	return EXIT_FAILURE ;	125:4:3212:3231	4239490	1	True				
ANR	4239800	Identifier	EXIT_FAILURE		4239490	0					
ANR	4239801	ExpressionStatement	"dprintf ( D_ALWAYS , ""VDSO: 0x%llx\\n"" , g_st -> segs [ vdso_idx ] . mem_start )"	127:3:3241:3308	4239490	2	True				
ANR	4239802	CallExpression	"dprintf ( D_ALWAYS , ""VDSO: 0x%llx\\n"" , g_st -> segs [ vdso_idx ] . mem_start )"		4239490	0					
ANR	4239803	Callee	dprintf		4239490	0					
ANR	4239804	Identifier	dprintf		4239490	0					
ANR	4239805	ArgumentList	D_ALWAYS		4239490	1					
ANR	4239806	Argument	D_ALWAYS		4239490	0					
ANR	4239807	Identifier	D_ALWAYS		4239490	0					
ANR	4239808	Argument	"""VDSO: 0x%llx\\n"""		4239490	1					
ANR	4239809	PrimaryExpression	"""VDSO: 0x%llx\\n"""		4239490	0					
ANR	4239810	Argument	g_st -> segs [ vdso_idx ] . mem_start		4239490	2					
ANR	4239811	MemberAccess	g_st -> segs [ vdso_idx ] . mem_start		4239490	0					
ANR	4239812	ArrayIndexing	g_st -> segs [ vdso_idx ]		4239490	0					
ANR	4239813	PtrMemberAccess	g_st -> segs		4239490	0					
ANR	4239814	Identifier	g_st		4239490	0					
ANR	4239815	Identifier	segs		4239490	1					
ANR	4239816	Identifier	vdso_idx		4239490	1					
ANR	4239817	Identifier	mem_start		4239490	1					
ANR	4239818	ElseStatement	else		4239490	0					
ANR	4239819	IfStatement	"if ( matches ( argv [ i ] , ""--segments"" ) )"		4239490	0					
ANR	4239820	Condition	"matches ( argv [ i ] , ""--segments"" )"	129:13:3324:3353	4239490	0	True				
ANR	4239821	CallExpression	"matches ( argv [ i ] , ""--segments"" )"		4239490	0					
ANR	4239822	Callee	matches		4239490	0					
ANR	4239823	Identifier	matches		4239490	0					
ANR	4239824	ArgumentList	argv [ i ]		4239490	1					
ANR	4239825	Argument	argv [ i ]		4239490	0					
ANR	4239826	ArrayIndexing	argv [ i ]		4239490	0					
ANR	4239827	Identifier	argv		4239490	0					
ANR	4239828	Identifier	i		4239490	1					
ANR	4239829	Argument	"""--segments"""		4239490	1					
ANR	4239830	PrimaryExpression	"""--segments"""		4239490	0					
ANR	4239831	CompoundStatement		68:45:1602:1602	4239490	1					
ANR	4239832	ExpressionStatement	segment_table_stdout ( g_st )	130:3:3361:3387	4239490	0	True				
ANR	4239833	CallExpression	segment_table_stdout ( g_st )		4239490	0					
ANR	4239834	Callee	segment_table_stdout		4239490	0					
ANR	4239835	Identifier	segment_table_stdout		4239490	0					
ANR	4239836	ArgumentList	g_st		4239490	1					
ANR	4239837	Argument	g_st		4239490	0					
ANR	4239838	Identifier	g_st		4239490	0					
ANR	4239839	ElseStatement	else		4239490	0					
ANR	4239840	IfStatement	"if ( matches ( argv [ i ] , ""--no-pers-change"" ) )"		4239490	0					
ANR	4239841	Condition	"matches ( argv [ i ] , ""--no-pers-change"" )"	131:13:3402:3437	4239490	0	True				
ANR	4239842	CallExpression	"matches ( argv [ i ] , ""--no-pers-change"" )"		4239490	0					
ANR	4239843	Callee	matches		4239490	0					
ANR	4239844	Identifier	matches		4239490	0					
ANR	4239845	ArgumentList	argv [ i ]		4239490	1					
ANR	4239846	Argument	argv [ i ]		4239490	0					
ANR	4239847	ArrayIndexing	argv [ i ]		4239490	0					
ANR	4239848	Identifier	argv		4239490	0					
ANR	4239849	Identifier	i		4239490	1					
ANR	4239850	Argument	"""--no-pers-change"""		4239490	1					
ANR	4239851	PrimaryExpression	"""--no-pers-change"""		4239490	0					
ANR	4239852	CompoundStatement		70:51:1686:1686	4239490	1					
ANR	4239853	ElseStatement	else		4239490	0					
ANR	4239854	CompoundStatement		72:9:1713:1713	4239490	0					
ANR	4239855	ExpressionStatement	usage ( argv [ 0 ] )	134:3:3472:3486	4239490	0	True				
ANR	4239856	CallExpression	usage ( argv [ 0 ] )		4239490	0					
ANR	4239857	Callee	usage		4239490	0					
ANR	4239858	Identifier	usage		4239490	0					
ANR	4239859	ArgumentList	argv [ 0 ]		4239490	1					
ANR	4239860	Argument	argv [ 0 ]		4239490	0					
ANR	4239861	ArrayIndexing	argv [ 0 ]		4239490	0					
ANR	4239862	Identifier	argv		4239490	0					
ANR	4239863	PrimaryExpression	0		4239490	1					
ANR	4239864	ReturnStatement	return EXIT_SUCCESS ;	138:1:3497:3516	4239490	14	True				
ANR	4239865	Identifier	EXIT_SUCCESS		4239490	0					
ANR	4239866	ReturnType	int		4239490	1					
ANR	4239867	Identifier	main		4239490	2					
ANR	4239868	ParameterList	"int argc , char * argv [ ] , char * envp [ ]"		4239490	3					
ANR	4239869	Parameter	int argc	61:9:1715:1722	4239490	0	True				
ANR	4239870	ParameterType	int		4239490	0					
ANR	4239871	Identifier	argc		4239490	1					
ANR	4239872	Parameter	char * argv [ ]	61:19:1725:1736	4239490	1	True				
ANR	4239873	ParameterType	char * [ ]		4239490	0					
ANR	4239874	Identifier	argv		4239490	1					
ANR	4239875	Parameter	char * envp [ ]	61:33:1739:1750	4239490	2	True				
ANR	4239876	ParameterType	char * [ ]		4239490	0					
ANR	4239877	Identifier	envp		4239490	1					
ANR	4239878	CFGEntryNode	ENTRY		4239490		True				
ANR	4239879	CFGExitNode	EXIT		4239490		True				
ANR	4239880	Symbol	vdso_idx		4239490						
ANR	4239881	Symbol	g_st		4239490						
ANR	4239882	Symbol	* argv		4239490						
ANR	4239883	Symbol	envp		4239490						
ANR	4239884	Symbol	argv		4239490						
ANR	4239885	Symbol	new_args		4239490						
ANR	4239886	Symbol	g_st -> segs [ vdso_idx ] . mem_start		4239490						
ANR	4239887	Symbol	g_st -> segs		4239490						
ANR	4239888	Symbol	argc		4239490						
ANR	4239889	Symbol	malloc		4239490						
ANR	4239890	Symbol	errno		4239490						
ANR	4239891	Symbol	NULL		4239490						
ANR	4239892	Symbol	* g_st -> segs		4239490						
ANR	4239893	Symbol	* vdso_idx		4239490						
ANR	4239894	Symbol	Termlog		4239490						
ANR	4239895	Symbol	get_param_functions		4239490						
ANR	4239896	Symbol	my_exec		4239490						
ANR	4239897	Symbol	D_ALWAYS		4239490						
ANR	4239898	Symbol	NOT_FOUND		4239490						
ANR	4239899	Symbol	i		4239490						
ANR	4239900	Symbol	matches		4239490						
ANR	4239901	Symbol	strerror		4239490						
ANR	4239902	Symbol	* g_st		4239490						
ANR	4239903	Symbol	* * g_st		4239490						
ANR	4239904	Symbol	* i		4239490						
ANR	4239905	Symbol	EXIT_FAILURE		4239490						
ANR	4239906	Symbol	pers_change		4239490						
ANR	4239907	Symbol	EXIT_SUCCESS		4239490						
ANR	4239908	Symbol	* new_args		4239490						
ANR	4239909	Symbol	strdup		4239490						
ANR	4239910	Symbol	getpid		4239490						
ANR	4239911	Symbol	segment_table_find_vdso		4239490						
