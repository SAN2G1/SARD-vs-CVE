command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1316497	File	data/converged/CVE-2011-4930_htcondor/fetch_log.cpp								
ANR	1316498	DeclStmt									
ANR	1316499	Decl							param_functions	param_functions	p_funcs
ANR	1316500	DeclStmt									
ANR	1316501	Decl							int	int ( ReliSock * )	handleHistoryDir
ANR	1316502	Function	usage	37:0:1182:2655							
ANR	1316503	FunctionDef	usage (char * cmd)		1316502	0					
ANR	1316504	CompoundStatement		39:0:1206:2655	1316502	0					
ANR	1316505	ExpressionStatement	"fprintf ( stderr , ""Usage: %s [options] <machine-name> <subsystem>[.ext]\\n"" , cmd )"	40:1:1209:1285	1316502	0	True				
ANR	1316506	CallExpression	"fprintf ( stderr , ""Usage: %s [options] <machine-name> <subsystem>[.ext]\\n"" , cmd )"		1316502	0					
ANR	1316507	Callee	fprintf		1316502	0					
ANR	1316508	Identifier	fprintf		1316502	0					
ANR	1316509	ArgumentList	stderr		1316502	1					
ANR	1316510	Argument	stderr		1316502	0					
ANR	1316511	Identifier	stderr		1316502	0					
ANR	1316512	Argument	"""Usage: %s [options] <machine-name> <subsystem>[.ext]\\n"""		1316502	1					
ANR	1316513	PrimaryExpression	"""Usage: %s [options] <machine-name> <subsystem>[.ext]\\n"""		1316502	0					
ANR	1316514	Argument	cmd		1316502	2					
ANR	1316515	Identifier	cmd		1316502	0					
ANR	1316516	ExpressionStatement	"fprintf ( stderr , ""Where options are:\\n"" )"	41:1:1288:1326	1316502	1	True				
ANR	1316517	CallExpression	"fprintf ( stderr , ""Where options are:\\n"" )"		1316502	0					
ANR	1316518	Callee	fprintf		1316502	0					
ANR	1316519	Identifier	fprintf		1316502	0					
ANR	1316520	ArgumentList	stderr		1316502	1					
ANR	1316521	Argument	stderr		1316502	0					
ANR	1316522	Identifier	stderr		1316502	0					
ANR	1316523	Argument	"""Where options are:\\n"""		1316502	1					
ANR	1316524	PrimaryExpression	"""Where options are:\\n"""		1316502	0					
ANR	1316525	ExpressionStatement	"fprintf ( stderr , ""    -help             Display options\\n"" )"	42:1:1329:1386	1316502	2	True				
ANR	1316526	CallExpression	"fprintf ( stderr , ""    -help             Display options\\n"" )"		1316502	0					
ANR	1316527	Callee	fprintf		1316502	0					
ANR	1316528	Identifier	fprintf		1316502	0					
ANR	1316529	ArgumentList	stderr		1316502	1					
ANR	1316530	Argument	stderr		1316502	0					
ANR	1316531	Identifier	stderr		1316502	0					
ANR	1316532	Argument	"""    -help             Display options\\n"""		1316502	1					
ANR	1316533	PrimaryExpression	"""    -help             Display options\\n"""		1316502	0					
ANR	1316534	ExpressionStatement	"fprintf ( stderr , ""    -version          Display Condor version\\n"" )"	43:1:1389:1453	1316502	3	True				
ANR	1316535	CallExpression	"fprintf ( stderr , ""    -version          Display Condor version\\n"" )"		1316502	0					
ANR	1316536	Callee	fprintf		1316502	0					
ANR	1316537	Identifier	fprintf		1316502	0					
ANR	1316538	ArgumentList	stderr		1316502	1					
ANR	1316539	Argument	stderr		1316502	0					
ANR	1316540	Identifier	stderr		1316502	0					
ANR	1316541	Argument	"""    -version          Display Condor version\\n"""		1316502	1					
ANR	1316542	PrimaryExpression	"""    -version          Display Condor version\\n"""		1316502	0					
ANR	1316543	ExpressionStatement	"fprintf ( stderr , ""    -pool <hostname>  Use this central manager\\n"" )"	44:1:1456:1522	1316502	4	True				
ANR	1316544	CallExpression	"fprintf ( stderr , ""    -pool <hostname>  Use this central manager\\n"" )"		1316502	0					
ANR	1316545	Callee	fprintf		1316502	0					
ANR	1316546	Identifier	fprintf		1316502	0					
ANR	1316547	ArgumentList	stderr		1316502	1					
ANR	1316548	Argument	stderr		1316502	0					
ANR	1316549	Identifier	stderr		1316502	0					
ANR	1316550	Argument	"""    -pool <hostname>  Use this central manager\\n"""		1316502	1					
ANR	1316551	PrimaryExpression	"""    -pool <hostname>  Use this central manager\\n"""		1316502	0					
ANR	1316552	ExpressionStatement	"fprintf ( stderr , ""    -debug            Show extra debugging info\\n"" )"	45:1:1525:1592	1316502	5	True				
ANR	1316553	CallExpression	"fprintf ( stderr , ""    -debug            Show extra debugging info\\n"" )"		1316502	0					
ANR	1316554	Callee	fprintf		1316502	0					
ANR	1316555	Identifier	fprintf		1316502	0					
ANR	1316556	ArgumentList	stderr		1316502	1					
ANR	1316557	Argument	stderr		1316502	0					
ANR	1316558	Identifier	stderr		1316502	0					
ANR	1316559	Argument	"""    -debug            Show extra debugging info\\n"""		1316502	1					
ANR	1316560	PrimaryExpression	"""    -debug            Show extra debugging info\\n"""		1316502	0					
ANR	1316561	ExpressionStatement	"fprintf ( stderr , ""To select a particular daemon to talk to (does NOT select log file), use:\\n"" )"	46:1:1595:1688	1316502	6	True				
ANR	1316562	CallExpression	"fprintf ( stderr , ""To select a particular daemon to talk to (does NOT select log file), use:\\n"" )"		1316502	0					
ANR	1316563	Callee	fprintf		1316502	0					
ANR	1316564	Identifier	fprintf		1316502	0					
ANR	1316565	ArgumentList	stderr		1316502	1					
ANR	1316566	Argument	stderr		1316502	0					
ANR	1316567	Identifier	stderr		1316502	0					
ANR	1316568	Argument	"""To select a particular daemon to talk to (does NOT select log file), use:\\n"""		1316502	1					
ANR	1316569	PrimaryExpression	"""To select a particular daemon to talk to (does NOT select log file), use:\\n"""		1316502	0					
ANR	1316570	ExpressionStatement	"fprintf ( stderr , ""    -master\\n"" )"	47:1:1691:1722	1316502	7	True				
ANR	1316571	CallExpression	"fprintf ( stderr , ""    -master\\n"" )"		1316502	0					
ANR	1316572	Callee	fprintf		1316502	0					
ANR	1316573	Identifier	fprintf		1316502	0					
ANR	1316574	ArgumentList	stderr		1316502	1					
ANR	1316575	Argument	stderr		1316502	0					
ANR	1316576	Identifier	stderr		1316502	0					
ANR	1316577	Argument	"""    -master\\n"""		1316502	1					
ANR	1316578	PrimaryExpression	"""    -master\\n"""		1316502	0					
ANR	1316579	ExpressionStatement	"fprintf ( stderr , ""    -schedd\\n"" )"	48:1:1725:1756	1316502	8	True				
ANR	1316580	CallExpression	"fprintf ( stderr , ""    -schedd\\n"" )"		1316502	0					
ANR	1316581	Callee	fprintf		1316502	0					
ANR	1316582	Identifier	fprintf		1316502	0					
ANR	1316583	ArgumentList	stderr		1316502	1					
ANR	1316584	Argument	stderr		1316502	0					
ANR	1316585	Identifier	stderr		1316502	0					
ANR	1316586	Argument	"""    -schedd\\n"""		1316502	1					
ANR	1316587	PrimaryExpression	"""    -schedd\\n"""		1316502	0					
ANR	1316588	ExpressionStatement	"fprintf ( stderr , ""    -startd\\n"" )"	49:1:1759:1790	1316502	9	True				
ANR	1316589	CallExpression	"fprintf ( stderr , ""    -startd\\n"" )"		1316502	0					
ANR	1316590	Callee	fprintf		1316502	0					
ANR	1316591	Identifier	fprintf		1316502	0					
ANR	1316592	ArgumentList	stderr		1316502	1					
ANR	1316593	Argument	stderr		1316502	0					
ANR	1316594	Identifier	stderr		1316502	0					
ANR	1316595	Argument	"""    -startd\\n"""		1316502	1					
ANR	1316596	PrimaryExpression	"""    -startd\\n"""		1316502	0					
ANR	1316597	ExpressionStatement	"fprintf ( stderr , ""    -collector\\n"" )"	50:1:1793:1827	1316502	10	True				
ANR	1316598	CallExpression	"fprintf ( stderr , ""    -collector\\n"" )"		1316502	0					
ANR	1316599	Callee	fprintf		1316502	0					
ANR	1316600	Identifier	fprintf		1316502	0					
ANR	1316601	ArgumentList	stderr		1316502	1					
ANR	1316602	Argument	stderr		1316502	0					
ANR	1316603	Identifier	stderr		1316502	0					
ANR	1316604	Argument	"""    -collector\\n"""		1316502	1					
ANR	1316605	PrimaryExpression	"""    -collector\\n"""		1316502	0					
ANR	1316606	ExpressionStatement	"fprintf ( stderr , ""    -negotiator\\n"" )"	51:1:1830:1865	1316502	11	True				
ANR	1316607	CallExpression	"fprintf ( stderr , ""    -negotiator\\n"" )"		1316502	0					
ANR	1316608	Callee	fprintf		1316502	0					
ANR	1316609	Identifier	fprintf		1316502	0					
ANR	1316610	ArgumentList	stderr		1316502	1					
ANR	1316611	Argument	stderr		1316502	0					
ANR	1316612	Identifier	stderr		1316502	0					
ANR	1316613	Argument	"""    -negotiator\\n"""		1316502	1					
ANR	1316614	PrimaryExpression	"""    -negotiator\\n"""		1316502	0					
ANR	1316615	ExpressionStatement	"fprintf ( stderr , ""    -kbdd\\n"" )"	52:1:1868:1897	1316502	12	True				
ANR	1316616	CallExpression	"fprintf ( stderr , ""    -kbdd\\n"" )"		1316502	0					
ANR	1316617	Callee	fprintf		1316502	0					
ANR	1316618	Identifier	fprintf		1316502	0					
ANR	1316619	ArgumentList	stderr		1316502	1					
ANR	1316620	Argument	stderr		1316502	0					
ANR	1316621	Identifier	stderr		1316502	0					
ANR	1316622	Argument	"""    -kbdd\\n"""		1316502	1					
ANR	1316623	PrimaryExpression	"""    -kbdd\\n"""		1316502	0					
ANR	1316624	ExpressionStatement	"fprintf ( stderr , ""    -view_collector\\n"" )"	53:1:1900:1939	1316502	13	True				
ANR	1316625	CallExpression	"fprintf ( stderr , ""    -view_collector\\n"" )"		1316502	0					
ANR	1316626	Callee	fprintf		1316502	0					
ANR	1316627	Identifier	fprintf		1316502	0					
ANR	1316628	ArgumentList	stderr		1316502	1					
ANR	1316629	Argument	stderr		1316502	0					
ANR	1316630	Identifier	stderr		1316502	0					
ANR	1316631	Argument	"""    -view_collector\\n"""		1316502	1					
ANR	1316632	PrimaryExpression	"""    -view_collector\\n"""		1316502	0					
ANR	1316633	ExpressionStatement	"fprintf ( stderr , ""The subsystem name plus optional extension specifies the log file.\\n"" )"	54:1:1942:2028	1316502	14	True				
ANR	1316634	CallExpression	"fprintf ( stderr , ""The subsystem name plus optional extension specifies the log file.\\n"" )"		1316502	0					
ANR	1316635	Callee	fprintf		1316502	0					
ANR	1316636	Identifier	fprintf		1316502	0					
ANR	1316637	ArgumentList	stderr		1316502	1					
ANR	1316638	Argument	stderr		1316502	0					
ANR	1316639	Identifier	stderr		1316502	0					
ANR	1316640	Argument	"""The subsystem name plus optional extension specifies the log file.\\n"""		1316502	1					
ANR	1316641	PrimaryExpression	"""The subsystem name plus optional extension specifies the log file.\\n"""		1316502	0					
ANR	1316642	ExpressionStatement	"fprintf ( stderr , ""Possible subsystem names (anything with an entry XXX_LOG in remote config file):\\n"" )"	55:1:2031:2131	1316502	15	True				
ANR	1316643	CallExpression	"fprintf ( stderr , ""Possible subsystem names (anything with an entry XXX_LOG in remote config file):\\n"" )"		1316502	0					
ANR	1316644	Callee	fprintf		1316502	0					
ANR	1316645	Identifier	fprintf		1316502	0					
ANR	1316646	ArgumentList	stderr		1316502	1					
ANR	1316647	Argument	stderr		1316502	0					
ANR	1316648	Identifier	stderr		1316502	0					
ANR	1316649	Argument	"""Possible subsystem names (anything with an entry XXX_LOG in remote config file):\\n"""		1316502	1					
ANR	1316650	PrimaryExpression	"""Possible subsystem names (anything with an entry XXX_LOG in remote config file):\\n"""		1316502	0					
ANR	1316651	ExpressionStatement	"fprintf ( stderr , ""    MASTER\\n"" )"	57:1:2135:2165	1316502	16	True				
ANR	1316652	CallExpression	"fprintf ( stderr , ""    MASTER\\n"" )"		1316502	0					
ANR	1316653	Callee	fprintf		1316502	0					
ANR	1316654	Identifier	fprintf		1316502	0					
ANR	1316655	ArgumentList	stderr		1316502	1					
ANR	1316656	Argument	stderr		1316502	0					
ANR	1316657	Identifier	stderr		1316502	0					
ANR	1316658	Argument	"""    MASTER\\n"""		1316502	1					
ANR	1316659	PrimaryExpression	"""    MASTER\\n"""		1316502	0					
ANR	1316660	ExpressionStatement	"fprintf ( stderr , ""    COLLECTOR\\n"" )"	58:1:2168:2201	1316502	17	True				
ANR	1316661	CallExpression	"fprintf ( stderr , ""    COLLECTOR\\n"" )"		1316502	0					
ANR	1316662	Callee	fprintf		1316502	0					
ANR	1316663	Identifier	fprintf		1316502	0					
ANR	1316664	ArgumentList	stderr		1316502	1					
ANR	1316665	Argument	stderr		1316502	0					
ANR	1316666	Identifier	stderr		1316502	0					
ANR	1316667	Argument	"""    COLLECTOR\\n"""		1316502	1					
ANR	1316668	PrimaryExpression	"""    COLLECTOR\\n"""		1316502	0					
ANR	1316669	ExpressionStatement	"fprintf ( stderr , ""    NEGOTIATOR\\n"" )"	59:1:2204:2238	1316502	18	True				
ANR	1316670	CallExpression	"fprintf ( stderr , ""    NEGOTIATOR\\n"" )"		1316502	0					
ANR	1316671	Callee	fprintf		1316502	0					
ANR	1316672	Identifier	fprintf		1316502	0					
ANR	1316673	ArgumentList	stderr		1316502	1					
ANR	1316674	Argument	stderr		1316502	0					
ANR	1316675	Identifier	stderr		1316502	0					
ANR	1316676	Argument	"""    NEGOTIATOR\\n"""		1316502	1					
ANR	1316677	PrimaryExpression	"""    NEGOTIATOR\\n"""		1316502	0					
ANR	1316678	ExpressionStatement	"fprintf ( stderr , ""    NEGOTIATOR_MATCH\\n"" )"	60:1:2241:2281	1316502	19	True				
ANR	1316679	CallExpression	"fprintf ( stderr , ""    NEGOTIATOR_MATCH\\n"" )"		1316502	0					
ANR	1316680	Callee	fprintf		1316502	0					
ANR	1316681	Identifier	fprintf		1316502	0					
ANR	1316682	ArgumentList	stderr		1316502	1					
ANR	1316683	Argument	stderr		1316502	0					
ANR	1316684	Identifier	stderr		1316502	0					
ANR	1316685	Argument	"""    NEGOTIATOR_MATCH\\n"""		1316502	1					
ANR	1316686	PrimaryExpression	"""    NEGOTIATOR_MATCH\\n"""		1316502	0					
ANR	1316687	ExpressionStatement	"fprintf ( stderr , ""    SCHEDD\\n"" )"	61:1:2284:2314	1316502	20	True				
ANR	1316688	CallExpression	"fprintf ( stderr , ""    SCHEDD\\n"" )"		1316502	0					
ANR	1316689	Callee	fprintf		1316502	0					
ANR	1316690	Identifier	fprintf		1316502	0					
ANR	1316691	ArgumentList	stderr		1316502	1					
ANR	1316692	Argument	stderr		1316502	0					
ANR	1316693	Identifier	stderr		1316502	0					
ANR	1316694	Argument	"""    SCHEDD\\n"""		1316502	1					
ANR	1316695	PrimaryExpression	"""    SCHEDD\\n"""		1316502	0					
ANR	1316696	ExpressionStatement	"fprintf ( stderr , ""    SHADOW\\n"" )"	62:1:2317:2347	1316502	21	True				
ANR	1316697	CallExpression	"fprintf ( stderr , ""    SHADOW\\n"" )"		1316502	0					
ANR	1316698	Callee	fprintf		1316502	0					
ANR	1316699	Identifier	fprintf		1316502	0					
ANR	1316700	ArgumentList	stderr		1316502	1					
ANR	1316701	Argument	stderr		1316502	0					
ANR	1316702	Identifier	stderr		1316502	0					
ANR	1316703	Argument	"""    SHADOW\\n"""		1316502	1					
ANR	1316704	PrimaryExpression	"""    SHADOW\\n"""		1316502	0					
ANR	1316705	ExpressionStatement	"fprintf ( stderr , ""    STARTD\\n"" )"	63:1:2350:2380	1316502	22	True				
ANR	1316706	CallExpression	"fprintf ( stderr , ""    STARTD\\n"" )"		1316502	0					
ANR	1316707	Callee	fprintf		1316502	0					
ANR	1316708	Identifier	fprintf		1316502	0					
ANR	1316709	ArgumentList	stderr		1316502	1					
ANR	1316710	Argument	stderr		1316502	0					
ANR	1316711	Identifier	stderr		1316502	0					
ANR	1316712	Argument	"""    STARTD\\n"""		1316502	1					
ANR	1316713	PrimaryExpression	"""    STARTD\\n"""		1316502	0					
ANR	1316714	ExpressionStatement	"fprintf ( stderr , ""    STARTER\\n"" )"	64:1:2383:2414	1316502	23	True				
ANR	1316715	CallExpression	"fprintf ( stderr , ""    STARTER\\n"" )"		1316502	0					
ANR	1316716	Callee	fprintf		1316502	0					
ANR	1316717	Identifier	fprintf		1316502	0					
ANR	1316718	ArgumentList	stderr		1316502	1					
ANR	1316719	Argument	stderr		1316502	0					
ANR	1316720	Identifier	stderr		1316502	0					
ANR	1316721	Argument	"""    STARTER\\n"""		1316502	1					
ANR	1316722	PrimaryExpression	"""    STARTER\\n"""		1316502	0					
ANR	1316723	ExpressionStatement	"fprintf ( stderr , ""    KBDD\\n"" )"	65:1:2417:2445	1316502	24	True				
ANR	1316724	CallExpression	"fprintf ( stderr , ""    KBDD\\n"" )"		1316502	0					
ANR	1316725	Callee	fprintf		1316502	0					
ANR	1316726	Identifier	fprintf		1316502	0					
ANR	1316727	ArgumentList	stderr		1316502	1					
ANR	1316728	Argument	stderr		1316502	0					
ANR	1316729	Identifier	stderr		1316502	0					
ANR	1316730	Argument	"""    KBDD\\n"""		1316502	1					
ANR	1316731	PrimaryExpression	"""    KBDD\\n"""		1316502	0					
ANR	1316732	ExpressionStatement	"fprintf ( stderr , ""    HISTORY\\n"" )"	66:1:2448:2479	1316502	25	True				
ANR	1316733	CallExpression	"fprintf ( stderr , ""    HISTORY\\n"" )"		1316502	0					
ANR	1316734	Callee	fprintf		1316502	0					
ANR	1316735	Identifier	fprintf		1316502	0					
ANR	1316736	ArgumentList	stderr		1316502	1					
ANR	1316737	Argument	stderr		1316502	0					
ANR	1316738	Identifier	stderr		1316502	0					
ANR	1316739	Argument	"""    HISTORY\\n"""		1316502	1					
ANR	1316740	PrimaryExpression	"""    HISTORY\\n"""		1316502	0					
ANR	1316741	ExpressionStatement	"fprintf ( stderr , ""    STARTD_HISTORY\\n"" )"	67:1:2482:2520	1316502	26	True				
ANR	1316742	CallExpression	"fprintf ( stderr , ""    STARTD_HISTORY\\n"" )"		1316502	0					
ANR	1316743	Callee	fprintf		1316502	0					
ANR	1316744	Identifier	fprintf		1316502	0					
ANR	1316745	ArgumentList	stderr		1316502	1					
ANR	1316746	Argument	stderr		1316502	0					
ANR	1316747	Identifier	stderr		1316502	0					
ANR	1316748	Argument	"""    STARTD_HISTORY\\n"""		1316502	1					
ANR	1316749	PrimaryExpression	"""    STARTD_HISTORY\\n"""		1316502	0					
ANR	1316750	ExpressionStatement	"fprintf ( stderr , ""\\nExample 1: %s -debug coral STARTD\\n"" , cmd )"	68:1:2523:2582	1316502	27	True				
ANR	1316751	CallExpression	"fprintf ( stderr , ""\\nExample 1: %s -debug coral STARTD\\n"" , cmd )"		1316502	0					
ANR	1316752	Callee	fprintf		1316502	0					
ANR	1316753	Identifier	fprintf		1316502	0					
ANR	1316754	ArgumentList	stderr		1316502	1					
ANR	1316755	Argument	stderr		1316502	0					
ANR	1316756	Identifier	stderr		1316502	0					
ANR	1316757	Argument	"""\\nExample 1: %s -debug coral STARTD\\n"""		1316502	1					
ANR	1316758	PrimaryExpression	"""\\nExample 1: %s -debug coral STARTD\\n"""		1316502	0					
ANR	1316759	Argument	cmd		1316502	2					
ANR	1316760	Identifier	cmd		1316502	0					
ANR	1316761	ExpressionStatement	"fprintf ( stderr , ""\\nExample 2: %s -debug coral STARTER.slot2\\n\\n"" , cmd )"	69:1:2585:2653	1316502	28	True				
ANR	1316762	CallExpression	"fprintf ( stderr , ""\\nExample 2: %s -debug coral STARTER.slot2\\n\\n"" , cmd )"		1316502	0					
ANR	1316763	Callee	fprintf		1316502	0					
ANR	1316764	Identifier	fprintf		1316502	0					
ANR	1316765	ArgumentList	stderr		1316502	1					
ANR	1316766	Argument	stderr		1316502	0					
ANR	1316767	Identifier	stderr		1316502	0					
ANR	1316768	Argument	"""\\nExample 2: %s -debug coral STARTER.slot2\\n\\n"""		1316502	1					
ANR	1316769	PrimaryExpression	"""\\nExample 2: %s -debug coral STARTER.slot2\\n\\n"""		1316502	0					
ANR	1316770	Argument	cmd		1316502	2					
ANR	1316771	Identifier	cmd		1316502	0					
ANR	1316772	ReturnType	void		1316502	1					
ANR	1316773	Identifier	usage		1316502	2					
ANR	1316774	ParameterList	char * cmd		1316502	3					
ANR	1316775	Parameter	char * cmd	38:7:1194:1202	1316502	0	True				
ANR	1316776	ParameterType	char *		1316502	0					
ANR	1316777	Identifier	cmd		1316502	1					
ANR	1316778	CFGEntryNode	ENTRY		1316502		True				
ANR	1316779	CFGExitNode	EXIT		1316502		True				
ANR	1316780	Symbol	cmd		1316502						
ANR	1316781	Symbol	stderr		1316502						
ANR	1316782	Function	version	72:0:2658:2733							
ANR	1316783	FunctionDef	version ()		1316782	0					
ANR	1316784	CompoundStatement		74:0:2673:2733	1316782	0					
ANR	1316785	ExpressionStatement	"printf ( ""%s\\n%s\\n"" , CondorVersion ( ) , CondorPlatform ( ) )"	75:1:2676:2731	1316782	0	True				
ANR	1316786	CallExpression	"printf ( ""%s\\n%s\\n"" , CondorVersion ( ) , CondorPlatform ( ) )"		1316782	0					
ANR	1316787	Callee	printf		1316782	0					
ANR	1316788	Identifier	printf		1316782	0					
ANR	1316789	ArgumentList	"""%s\\n%s\\n"""		1316782	1					
ANR	1316790	Argument	"""%s\\n%s\\n"""		1316782	0					
ANR	1316791	PrimaryExpression	"""%s\\n%s\\n"""		1316782	0					
ANR	1316792	Argument	CondorVersion ( )		1316782	1					
ANR	1316793	CallExpression	CondorVersion ( )		1316782	0					
ANR	1316794	Callee	CondorVersion		1316782	0					
ANR	1316795	Identifier	CondorVersion		1316782	0					
ANR	1316796	ArgumentList			1316782	1					
ANR	1316797	Argument	CondorPlatform ( )		1316782	2					
ANR	1316798	CallExpression	CondorPlatform ( )		1316782	0					
ANR	1316799	Callee	CondorPlatform		1316782	0					
ANR	1316800	Identifier	CondorPlatform		1316782	0					
ANR	1316801	ArgumentList			1316782	1					
ANR	1316802	ReturnType	void		1316782	1					
ANR	1316803	Identifier	version		1316782	2					
ANR	1316804	ParameterList			1316782	3					
ANR	1316805	CFGEntryNode	ENTRY		1316782		True				
ANR	1316806	CFGExitNode	EXIT		1316782		True				
ANR	1316807	Symbol	CondorVersion		1316782						
ANR	1316808	Symbol	CondorPlatform		1316782						
ANR	1316809	Function	main	78:0:2736:6024							
ANR	1316810	FunctionDef	"main (int argc , char * argv [ ])"		1316809	0					
ANR	1316811	CompoundStatement		79:0:2771:6024	1316809	0					
ANR	1316812	IdentifierDeclStatement	char * machine_name = 0 ;	80:1:2774:2796	1316809	0	True				
ANR	1316813	IdentifierDecl	* machine_name = 0		1316809	0					
ANR	1316814	IdentifierDeclType	char *		1316809	0					
ANR	1316815	Identifier	machine_name		1316809	1					
ANR	1316816	AssignmentExpression	* machine_name = 0		1316809	2		=			
ANR	1316817	Identifier	machine_name		1316809	0					
ANR	1316818	PrimaryExpression	0		1316809	1					
ANR	1316819	IdentifierDeclStatement	char * log_name = 0 ;	81:1:2799:2817	1316809	1	True				
ANR	1316820	IdentifierDecl	* log_name = 0		1316809	0					
ANR	1316821	IdentifierDeclType	char *		1316809	0					
ANR	1316822	Identifier	log_name		1316809	1					
ANR	1316823	AssignmentExpression	* log_name = 0		1316809	2		=			
ANR	1316824	Identifier	log_name		1316809	0					
ANR	1316825	PrimaryExpression	0		1316809	1					
ANR	1316826	IdentifierDeclStatement	char * pool = 0 ;	82:1:2820:2832	1316809	2	True				
ANR	1316827	IdentifierDecl	* pool = 0		1316809	0					
ANR	1316828	IdentifierDeclType	char *		1316809	0					
ANR	1316829	Identifier	pool		1316809	1					
ANR	1316830	AssignmentExpression	* pool = 0		1316809	2		=			
ANR	1316831	Identifier	pool		1316809	0					
ANR	1316832	PrimaryExpression	0		1316809	1					
ANR	1316833	IdentifierDeclStatement	int i ;	83:1:2835:2840	1316809	3	True				
ANR	1316834	IdentifierDecl	i		1316809	0					
ANR	1316835	IdentifierDeclType	int		1316809	0					
ANR	1316836	Identifier	i		1316809	1					
ANR	1316837	IdentifierDeclStatement	param_functions * p_funcs = NULL ;	84:1:2843:2874	1316809	4	True				
ANR	1316838	IdentifierDecl	* p_funcs = NULL		1316809	0					
ANR	1316839	IdentifierDeclType	param_functions *		1316809	0					
ANR	1316840	Identifier	p_funcs		1316809	1					
ANR	1316841	AssignmentExpression	* p_funcs = NULL		1316809	2		=			
ANR	1316842	Identifier	NULL		1316809	0					
ANR	1316843	Identifier	NULL		1316809	1					
ANR	1316844	IdentifierDeclStatement	daemon_t type = DT_MASTER ;	86:1:2878:2903	1316809	5	True				
ANR	1316845	IdentifierDecl	type = DT_MASTER		1316809	0					
ANR	1316846	IdentifierDeclType	daemon_t		1316809	0					
ANR	1316847	Identifier	type		1316809	1					
ANR	1316848	AssignmentExpression	type = DT_MASTER		1316809	2		=			
ANR	1316849	Identifier	DT_MASTER		1316809	0					
ANR	1316850	Identifier	DT_MASTER		1316809	1					
ANR	1316851	ExpressionStatement	"myDistro -> Init ( argc , argv )"	88:1:2907:2935	1316809	6	True				
ANR	1316852	CallExpression	"myDistro -> Init ( argc , argv )"		1316809	0					
ANR	1316853	Callee	myDistro -> Init		1316809	0					
ANR	1316854	PtrMemberAccess	myDistro -> Init		1316809	0					
ANR	1316855	Identifier	myDistro		1316809	0					
ANR	1316856	Identifier	Init		1316809	1					
ANR	1316857	ArgumentList	argc		1316809	1					
ANR	1316858	Argument	argc		1316809	0					
ANR	1316859	Identifier	argc		1316809	0					
ANR	1316860	Argument	argv		1316809	1					
ANR	1316861	Identifier	argv		1316809	0					
ANR	1316862	ExpressionStatement	config ( )	89:1:2938:2946	1316809	7	True				
ANR	1316863	CallExpression	config ( )		1316809	0					
ANR	1316864	Callee	config		1316809	0					
ANR	1316865	Identifier	config		1316809	0					
ANR	1316866	ArgumentList			1316809	1					
ANR	1316867	ForStatement	for ( i = 1 ; i < argc ; i ++ )		1316809	8					
ANR	1316868	ForInit	i = 1 ;	91:6:2955:2958	1316809	0	True				
ANR	1316869	AssignmentExpression	i = 1		1316809	0		=			
ANR	1316870	Identifier	i		1316809	0					
ANR	1316871	PrimaryExpression	1		1316809	1					
ANR	1316872	Condition	i < argc	91:11:2960:2965	1316809	1	True				
ANR	1316873	RelationalExpression	i < argc		1316809	0		<			
ANR	1316874	Identifier	i		1316809	0					
ANR	1316875	Identifier	argc		1316809	1					
ANR	1316876	PostIncDecOperationExpression	i ++	91:19:2968:2970	1316809	2	True				
ANR	1316877	Identifier	i		1316809	0					
ANR	1316878	IncDec	++		1316809	1					
ANR	1316879	CompoundStatement		13:25:202:202	1316809	3					
ANR	1316880	IfStatement	"if ( ! strcmp ( argv [ i ] , ""-help"" ) )"		1316809	0					
ANR	1316881	Condition	"! strcmp ( argv [ i ] , ""-help"" )"	92:5:2981:3004	1316809	0	True				
ANR	1316882	UnaryOperationExpression	"! strcmp ( argv [ i ] , ""-help"" )"		1316809	0					
ANR	1316883	UnaryOperator	!		1316809	0					
ANR	1316884	CallExpression	"strcmp ( argv [ i ] , ""-help"" )"		1316809	1					
ANR	1316885	Callee	strcmp		1316809	0					
ANR	1316886	Identifier	strcmp		1316809	0					
ANR	1316887	ArgumentList	argv [ i ]		1316809	1					
ANR	1316888	Argument	argv [ i ]		1316809	0					
ANR	1316889	ArrayIndexing	argv [ i ]		1316809	0					
ANR	1316890	Identifier	argv		1316809	0					
ANR	1316891	Identifier	i		1316809	1					
ANR	1316892	Argument	"""-help"""		1316809	1					
ANR	1316893	PrimaryExpression	"""-help"""		1316809	0					
ANR	1316894	CompoundStatement		14:31:235:235	1316809	1					
ANR	1316895	ExpressionStatement	usage ( argv [ 0 ] )	93:3:3012:3026	1316809	0	True				
ANR	1316896	CallExpression	usage ( argv [ 0 ] )		1316809	0					
ANR	1316897	Callee	usage		1316809	0					
ANR	1316898	Identifier	usage		1316809	0					
ANR	1316899	ArgumentList	argv [ 0 ]		1316809	1					
ANR	1316900	Argument	argv [ 0 ]		1316809	0					
ANR	1316901	ArrayIndexing	argv [ 0 ]		1316809	0					
ANR	1316902	Identifier	argv		1316809	0					
ANR	1316903	PrimaryExpression	0		1316809	1					
ANR	1316904	ExpressionStatement	exit ( 0 )	94:3:3031:3038	1316809	1	True				
ANR	1316905	CallExpression	exit ( 0 )		1316809	0					
ANR	1316906	Callee	exit		1316809	0					
ANR	1316907	Identifier	exit		1316809	0					
ANR	1316908	ArgumentList	0		1316809	1					
ANR	1316909	Argument	0		1316809	0					
ANR	1316910	PrimaryExpression	0		1316809	0					
ANR	1316911	ElseStatement	else		1316809	0					
ANR	1316912	IfStatement	"if ( ! strcmp ( argv [ i ] , ""-pool"" ) )"		1316809	0					
ANR	1316913	Condition	"! strcmp ( argv [ i ] , ""-pool"" )"	95:12:3052:3075	1316809	0	True				
ANR	1316914	UnaryOperationExpression	"! strcmp ( argv [ i ] , ""-pool"" )"		1316809	0					
ANR	1316915	UnaryOperator	!		1316809	0					
ANR	1316916	CallExpression	"strcmp ( argv [ i ] , ""-pool"" )"		1316809	1					
ANR	1316917	Callee	strcmp		1316809	0					
ANR	1316918	Identifier	strcmp		1316809	0					
ANR	1316919	ArgumentList	argv [ i ]		1316809	1					
ANR	1316920	Argument	argv [ i ]		1316809	0					
ANR	1316921	ArrayIndexing	argv [ i ]		1316809	0					
ANR	1316922	Identifier	argv		1316809	0					
ANR	1316923	Identifier	i		1316809	1					
ANR	1316924	Argument	"""-pool"""		1316809	1					
ANR	1316925	PrimaryExpression	"""-pool"""		1316809	0					
ANR	1316926	CompoundStatement		17:38:306:306	1316809	1					
ANR	1316927	ExpressionStatement	i ++	96:3:3084:3087	1316809	0	True				
ANR	1316928	PostIncDecOperationExpression	i ++		1316809	0					
ANR	1316929	Identifier	i		1316809	0					
ANR	1316930	IncDec	++		1316809	1					
ANR	1316931	IfStatement	if ( ! argv [ i ] )		1316809	1					
ANR	1316932	Condition	! argv [ i ]	97:6:3095:3102	1316809	0	True				
ANR	1316933	UnaryOperationExpression	! argv [ i ]		1316809	0					
ANR	1316934	UnaryOperator	!		1316809	0					
ANR	1316935	ArrayIndexing	argv [ i ]		1316809	1					
ANR	1316936	Identifier	argv		1316809	0					
ANR	1316937	Identifier	i		1316809	1					
ANR	1316938	CompoundStatement		19:16:333:333	1316809	1					
ANR	1316939	ExpressionStatement	"fprintf ( stderr , ""-pool requires an argument.\\n\\n"" )"	98:4:3111:3160	1316809	0	True				
ANR	1316940	CallExpression	"fprintf ( stderr , ""-pool requires an argument.\\n\\n"" )"		1316809	0					
ANR	1316941	Callee	fprintf		1316809	0					
ANR	1316942	Identifier	fprintf		1316809	0					
ANR	1316943	ArgumentList	stderr		1316809	1					
ANR	1316944	Argument	stderr		1316809	0					
ANR	1316945	Identifier	stderr		1316809	0					
ANR	1316946	Argument	"""-pool requires an argument.\\n\\n"""		1316809	1					
ANR	1316947	PrimaryExpression	"""-pool requires an argument.\\n\\n"""		1316809	0					
ANR	1316948	ExpressionStatement	usage ( argv [ 0 ] )	99:4:3166:3180	1316809	1	True				
ANR	1316949	CallExpression	usage ( argv [ 0 ] )		1316809	0					
ANR	1316950	Callee	usage		1316809	0					
ANR	1316951	Identifier	usage		1316809	0					
ANR	1316952	ArgumentList	argv [ 0 ]		1316809	1					
ANR	1316953	Argument	argv [ 0 ]		1316809	0					
ANR	1316954	ArrayIndexing	argv [ 0 ]		1316809	0					
ANR	1316955	Identifier	argv		1316809	0					
ANR	1316956	PrimaryExpression	0		1316809	1					
ANR	1316957	ExpressionStatement	exit ( 1 )	100:4:3186:3193	1316809	2	True				
ANR	1316958	CallExpression	exit ( 1 )		1316809	0					
ANR	1316959	Callee	exit		1316809	0					
ANR	1316960	Identifier	exit		1316809	0					
ANR	1316961	ArgumentList	1		1316809	1					
ANR	1316962	Argument	1		1316809	0					
ANR	1316963	PrimaryExpression	1		1316809	0					
ANR	1316964	ExpressionStatement	pool = argv [ i ]	102:3:3203:3217	1316809	2	True				
ANR	1316965	AssignmentExpression	pool = argv [ i ]		1316809	0		=			
ANR	1316966	Identifier	pool		1316809	0					
ANR	1316967	ArrayIndexing	argv [ i ]		1316809	1					
ANR	1316968	Identifier	argv		1316809	0					
ANR	1316969	Identifier	i		1316809	1					
ANR	1316970	ElseStatement	else		1316809	0					
ANR	1316971	IfStatement	"if ( ! strcmp ( argv [ i ] , ""-version"" ) )"		1316809	0					
ANR	1316972	Condition	"! strcmp ( argv [ i ] , ""-version"" )"	103:12:3231:3257	1316809	0	True				
ANR	1316973	UnaryOperationExpression	"! strcmp ( argv [ i ] , ""-version"" )"		1316809	0					
ANR	1316974	UnaryOperator	!		1316809	0					
ANR	1316975	CallExpression	"strcmp ( argv [ i ] , ""-version"" )"		1316809	1					
ANR	1316976	Callee	strcmp		1316809	0					
ANR	1316977	Identifier	strcmp		1316809	0					
ANR	1316978	ArgumentList	argv [ i ]		1316809	1					
ANR	1316979	Argument	argv [ i ]		1316809	0					
ANR	1316980	ArrayIndexing	argv [ i ]		1316809	0					
ANR	1316981	Identifier	argv		1316809	0					
ANR	1316982	Identifier	i		1316809	1					
ANR	1316983	Argument	"""-version"""		1316809	1					
ANR	1316984	PrimaryExpression	"""-version"""		1316809	0					
ANR	1316985	CompoundStatement		25:41:488:488	1316809	1					
ANR	1316986	ExpressionStatement	version ( )	104:3:3265:3274	1316809	0	True				
ANR	1316987	CallExpression	version ( )		1316809	0					
ANR	1316988	Callee	version		1316809	0					
ANR	1316989	Identifier	version		1316809	0					
ANR	1316990	ArgumentList			1316809	1					
ANR	1316991	ExpressionStatement	exit ( 0 )	105:3:3279:3286	1316809	1	True				
ANR	1316992	CallExpression	exit ( 0 )		1316809	0					
ANR	1316993	Callee	exit		1316809	0					
ANR	1316994	Identifier	exit		1316809	0					
ANR	1316995	ArgumentList	0		1316809	1					
ANR	1316996	Argument	0		1316809	0					
ANR	1316997	PrimaryExpression	0		1316809	0					
ANR	1316998	ElseStatement	else		1316809	0					
ANR	1316999	IfStatement	"if ( ! strcmp ( argv [ i ] , ""-debug"" ) )"		1316809	0					
ANR	1317000	Condition	"! strcmp ( argv [ i ] , ""-debug"" )"	106:12:3300:3324	1316809	0	True				
ANR	1317001	UnaryOperationExpression	"! strcmp ( argv [ i ] , ""-debug"" )"		1316809	0					
ANR	1317002	UnaryOperator	!		1316809	0					
ANR	1317003	CallExpression	"strcmp ( argv [ i ] , ""-debug"" )"		1316809	1					
ANR	1317004	Callee	strcmp		1316809	0					
ANR	1317005	Identifier	strcmp		1316809	0					
ANR	1317006	ArgumentList	argv [ i ]		1316809	1					
ANR	1317007	Argument	argv [ i ]		1316809	0					
ANR	1317008	ArrayIndexing	argv [ i ]		1316809	0					
ANR	1317009	Identifier	argv		1316809	0					
ANR	1317010	Identifier	i		1316809	1					
ANR	1317011	Argument	"""-debug"""		1316809	1					
ANR	1317012	PrimaryExpression	"""-debug"""		1316809	0					
ANR	1317013	CompoundStatement		28:39:555:555	1316809	1					
ANR	1317014	ExpressionStatement	Termlog = 1	107:12:3341:3352	1316809	0	True				
ANR	1317015	AssignmentExpression	Termlog = 1		1316809	0		=			
ANR	1317016	Identifier	Termlog		1316809	0					
ANR	1317017	PrimaryExpression	1		1316809	1					
ANR	1317018	ExpressionStatement	p_funcs = get_param_functions ( )	108:3:3357:3388	1316809	1	True				
ANR	1317019	AssignmentExpression	p_funcs = get_param_functions ( )		1316809	0		=			
ANR	1317020	Identifier	p_funcs		1316809	0					
ANR	1317021	CallExpression	get_param_functions ( )		1316809	1					
ANR	1317022	Callee	get_param_functions		1316809	0					
ANR	1317023	Identifier	get_param_functions		1316809	0					
ANR	1317024	ArgumentList			1316809	1					
ANR	1317025	ExpressionStatement	"dprintf_config ( ""TOOL"" , p_funcs )"	109:12:3402:3434	1316809	2	True				
ANR	1317026	CallExpression	"dprintf_config ( ""TOOL"" , p_funcs )"		1316809	0					
ANR	1317027	Callee	dprintf_config		1316809	0					
ANR	1317028	Identifier	dprintf_config		1316809	0					
ANR	1317029	ArgumentList	"""TOOL"""		1316809	1					
ANR	1317030	Argument	"""TOOL"""		1316809	0					
ANR	1317031	PrimaryExpression	"""TOOL"""		1316809	0					
ANR	1317032	Argument	p_funcs		1316809	1					
ANR	1317033	Identifier	p_funcs		1316809	0					
ANR	1317034	ElseStatement	else		1316809	0					
ANR	1317035	IfStatement	if ( argv [ i ] [ 0 ] == '-' )		1316809	0					
ANR	1317036	Condition	argv [ i ] [ 0 ] == '-'	110:12:3448:3462	1316809	0	True				
ANR	1317037	EqualityExpression	argv [ i ] [ 0 ] == '-'		1316809	0		==			
ANR	1317038	ArrayIndexing	argv [ i ] [ 0 ]		1316809	0					
ANR	1317039	ArrayIndexing	argv [ i ]		1316809	0					
ANR	1317040	Identifier	argv		1316809	0					
ANR	1317041	Identifier	i		1316809	1					
ANR	1317042	PrimaryExpression	0		1316809	1					
ANR	1317043	PrimaryExpression	'-'		1316809	1					
ANR	1317044	CompoundStatement		32:29:693:693	1316809	1					
ANR	1317045	ExpressionStatement	type = stringToDaemonType ( & argv [ i ] [ 1 ] )	111:3:3470:3508	1316809	0	True				
ANR	1317046	AssignmentExpression	type = stringToDaemonType ( & argv [ i ] [ 1 ] )		1316809	0		=			
ANR	1317047	Identifier	type		1316809	0					
ANR	1317048	CallExpression	stringToDaemonType ( & argv [ i ] [ 1 ] )		1316809	1					
ANR	1317049	Callee	stringToDaemonType		1316809	0					
ANR	1317050	Identifier	stringToDaemonType		1316809	0					
ANR	1317051	ArgumentList	& argv [ i ] [ 1 ]		1316809	1					
ANR	1317052	Argument	& argv [ i ] [ 1 ]		1316809	0					
ANR	1317053	UnaryOperationExpression	& argv [ i ] [ 1 ]		1316809	0					
ANR	1317054	UnaryOperator	&		1316809	0					
ANR	1317055	ArrayIndexing	argv [ i ] [ 1 ]		1316809	1					
ANR	1317056	ArrayIndexing	argv [ i ]		1316809	0					
ANR	1317057	Identifier	argv		1316809	0					
ANR	1317058	Identifier	i		1316809	1					
ANR	1317059	PrimaryExpression	1		1316809	1					
ANR	1317060	IfStatement	if ( type == DT_NONE || type == DT_DAGMAN )		1316809	1					
ANR	1317061	Condition	type == DT_NONE || type == DT_DAGMAN	112:7:3517:3552	1316809	0	True				
ANR	1317062	OrExpression	type == DT_NONE || type == DT_DAGMAN		1316809	0		||			
ANR	1317063	EqualityExpression	type == DT_NONE		1316809	0		==			
ANR	1317064	Identifier	type		1316809	0					
ANR	1317065	Identifier	DT_NONE		1316809	1					
ANR	1317066	EqualityExpression	type == DT_DAGMAN		1316809	1		==			
ANR	1317067	Identifier	type		1316809	0					
ANR	1317068	Identifier	DT_DAGMAN		1316809	1					
ANR	1317069	CompoundStatement		34:45:783:783	1316809	1					
ANR	1317070	ExpressionStatement	usage ( argv [ 0 ] )	113:4:3561:3575	1316809	0	True				
ANR	1317071	CallExpression	usage ( argv [ 0 ] )		1316809	0					
ANR	1317072	Callee	usage		1316809	0					
ANR	1317073	Identifier	usage		1316809	0					
ANR	1317074	ArgumentList	argv [ 0 ]		1316809	1					
ANR	1317075	Argument	argv [ 0 ]		1316809	0					
ANR	1317076	ArrayIndexing	argv [ 0 ]		1316809	0					
ANR	1317077	Identifier	argv		1316809	0					
ANR	1317078	PrimaryExpression	0		1316809	1					
ANR	1317079	ExpressionStatement	exit ( 1 )	114:4:3581:3588	1316809	1	True				
ANR	1317080	CallExpression	exit ( 1 )		1316809	0					
ANR	1317081	Callee	exit		1316809	0					
ANR	1317082	Identifier	exit		1316809	0					
ANR	1317083	ArgumentList	1		1316809	1					
ANR	1317084	Argument	1		1316809	0					
ANR	1317085	PrimaryExpression	1		1316809	0					
ANR	1317086	ElseStatement	else		1316809	0					
ANR	1317087	IfStatement	if ( argv [ i ] [ 0 ] != '-' )		1316809	0					
ANR	1317088	Condition	argv [ i ] [ 0 ] != '-'	116:12:3607:3621	1316809	0	True				
ANR	1317089	EqualityExpression	argv [ i ] [ 0 ] != '-'		1316809	0		!=			
ANR	1317090	ArrayIndexing	argv [ i ] [ 0 ]		1316809	0					
ANR	1317091	ArrayIndexing	argv [ i ]		1316809	0					
ANR	1317092	Identifier	argv		1316809	0					
ANR	1317093	Identifier	i		1316809	1					
ANR	1317094	PrimaryExpression	0		1316809	1					
ANR	1317095	PrimaryExpression	'-'		1316809	1					
ANR	1317096	CompoundStatement		38:29:852:852	1316809	1					
ANR	1317097	IfStatement	if ( ! machine_name )		1316809	0					
ANR	1317098	Condition	! machine_name	117:6:3632:3644	1316809	0	True				
ANR	1317099	UnaryOperationExpression	! machine_name		1316809	0					
ANR	1317100	UnaryOperator	!		1316809	0					
ANR	1317101	Identifier	machine_name		1316809	1					
ANR	1317102	CompoundStatement		39:21:875:875	1316809	1					
ANR	1317103	ExpressionStatement	machine_name = argv [ i ]	118:4:3653:3675	1316809	0	True				
ANR	1317104	AssignmentExpression	machine_name = argv [ i ]		1316809	0		=			
ANR	1317105	Identifier	machine_name		1316809	0					
ANR	1317106	ArrayIndexing	argv [ i ]		1316809	1					
ANR	1317107	Identifier	argv		1316809	0					
ANR	1317108	Identifier	i		1316809	1					
ANR	1317109	ElseStatement	else		1316809	0					
ANR	1317110	IfStatement	if ( ! log_name )		1316809	0					
ANR	1317111	Condition	! log_name	119:13:3690:3698	1316809	0	True				
ANR	1317112	UnaryOperationExpression	! log_name		1316809	0					
ANR	1317113	UnaryOperator	!		1316809	0					
ANR	1317114	Identifier	log_name		1316809	1					
ANR	1317115	CompoundStatement		41:24:929:929	1316809	1					
ANR	1317116	ExpressionStatement	log_name = argv [ i ]	120:4:3707:3725	1316809	0	True				
ANR	1317117	AssignmentExpression	log_name = argv [ i ]		1316809	0		=			
ANR	1317118	Identifier	log_name		1316809	0					
ANR	1317119	ArrayIndexing	argv [ i ]		1316809	1					
ANR	1317120	Identifier	argv		1316809	0					
ANR	1317121	Identifier	i		1316809	1					
ANR	1317122	ElseStatement	else		1316809	0					
ANR	1317123	CompoundStatement		43:10:965:965	1316809	0					
ANR	1317124	ExpressionStatement	"fprintf ( stderr , ""Extra argument: %s\\n\\n"" , argv [ i ] )"	122:4:3743:3791	1316809	0	True				
ANR	1317125	CallExpression	"fprintf ( stderr , ""Extra argument: %s\\n\\n"" , argv [ i ] )"		1316809	0					
ANR	1317126	Callee	fprintf		1316809	0					
ANR	1317127	Identifier	fprintf		1316809	0					
ANR	1317128	ArgumentList	stderr		1316809	1					
ANR	1317129	Argument	stderr		1316809	0					
ANR	1317130	Identifier	stderr		1316809	0					
ANR	1317131	Argument	"""Extra argument: %s\\n\\n"""		1316809	1					
ANR	1317132	PrimaryExpression	"""Extra argument: %s\\n\\n"""		1316809	0					
ANR	1317133	Argument	argv [ i ]		1316809	2					
ANR	1317134	ArrayIndexing	argv [ i ]		1316809	0					
ANR	1317135	Identifier	argv		1316809	0					
ANR	1317136	Identifier	i		1316809	1					
ANR	1317137	ExpressionStatement	usage ( argv [ 0 ] )	123:4:3797:3811	1316809	1	True				
ANR	1317138	CallExpression	usage ( argv [ 0 ] )		1316809	0					
ANR	1317139	Callee	usage		1316809	0					
ANR	1317140	Identifier	usage		1316809	0					
ANR	1317141	ArgumentList	argv [ 0 ]		1316809	1					
ANR	1317142	Argument	argv [ 0 ]		1316809	0					
ANR	1317143	ArrayIndexing	argv [ 0 ]		1316809	0					
ANR	1317144	Identifier	argv		1316809	0					
ANR	1317145	PrimaryExpression	0		1316809	1					
ANR	1317146	ExpressionStatement	exit ( 1 )	124:4:3817:3824	1316809	2	True				
ANR	1317147	CallExpression	exit ( 1 )		1316809	0					
ANR	1317148	Callee	exit		1316809	0					
ANR	1317149	Identifier	exit		1316809	0					
ANR	1317150	ArgumentList	1		1316809	1					
ANR	1317151	Argument	1		1316809	0					
ANR	1317152	PrimaryExpression	1		1316809	0					
ANR	1317153	ElseStatement	else		1316809	0					
ANR	1317154	CompoundStatement		48:9:1068:1068	1316809	0					
ANR	1317155	ExpressionStatement	usage ( argv [ 0 ] )	127:3:3845:3859	1316809	0	True				
ANR	1317156	CallExpression	usage ( argv [ 0 ] )		1316809	0					
ANR	1317157	Callee	usage		1316809	0					
ANR	1317158	Identifier	usage		1316809	0					
ANR	1317159	ArgumentList	argv [ 0 ]		1316809	1					
ANR	1317160	Argument	argv [ 0 ]		1316809	0					
ANR	1317161	ArrayIndexing	argv [ 0 ]		1316809	0					
ANR	1317162	Identifier	argv		1316809	0					
ANR	1317163	PrimaryExpression	0		1316809	1					
ANR	1317164	ExpressionStatement	exit ( 1 )	128:3:3864:3871	1316809	1	True				
ANR	1317165	CallExpression	exit ( 1 )		1316809	0					
ANR	1317166	Callee	exit		1316809	0					
ANR	1317167	Identifier	exit		1316809	0					
ANR	1317168	ArgumentList	1		1316809	1					
ANR	1317169	Argument	1		1316809	0					
ANR	1317170	PrimaryExpression	1		1316809	0					
ANR	1317171	IfStatement	if ( ! machine_name || ! log_name )		1316809	9					
ANR	1317172	Condition	! machine_name || ! log_name	132:5:3886:3911	1316809	0	True				
ANR	1317173	OrExpression	! machine_name || ! log_name		1316809	0		||			
ANR	1317174	UnaryOperationExpression	! machine_name		1316809	0					
ANR	1317175	UnaryOperator	!		1316809	0					
ANR	1317176	Identifier	machine_name		1316809	1					
ANR	1317177	UnaryOperationExpression	! log_name		1316809	1					
ANR	1317178	UnaryOperator	!		1316809	0					
ANR	1317179	Identifier	log_name		1316809	1					
ANR	1317180	CompoundStatement		54:34:1143:1143	1316809	1					
ANR	1317181	ExpressionStatement	usage ( argv [ 0 ] )	133:2:3919:3933	1316809	0	True				
ANR	1317182	CallExpression	usage ( argv [ 0 ] )		1316809	0					
ANR	1317183	Callee	usage		1316809	0					
ANR	1317184	Identifier	usage		1316809	0					
ANR	1317185	ArgumentList	argv [ 0 ]		1316809	1					
ANR	1317186	Argument	argv [ 0 ]		1316809	0					
ANR	1317187	ArrayIndexing	argv [ 0 ]		1316809	0					
ANR	1317188	Identifier	argv		1316809	0					
ANR	1317189	PrimaryExpression	0		1316809	1					
ANR	1317190	ExpressionStatement	exit ( 1 )	134:2:3937:3944	1316809	1	True				
ANR	1317191	CallExpression	exit ( 1 )		1316809	0					
ANR	1317192	Callee	exit		1316809	0					
ANR	1317193	Identifier	exit		1316809	0					
ANR	1317194	ArgumentList	1		1316809	1					
ANR	1317195	Argument	1		1316809	0					
ANR	1317196	PrimaryExpression	1		1316809	0					
ANR	1317197	IdentifierDeclStatement	Daemon * daemon ;	137:1:3951:3965	1316809	10	True				
ANR	1317198	IdentifierDecl	* daemon		1316809	0					
ANR	1317199	IdentifierDeclType	Daemon *		1316809	0					
ANR	1317200	Identifier	daemon		1316809	1					
ANR	1317201	IdentifierDeclStatement	ReliSock * sock ;	138:1:3968:3982	1316809	11	True				
ANR	1317202	IdentifierDecl	* sock		1316809	0					
ANR	1317203	IdentifierDeclType	ReliSock *		1316809	0					
ANR	1317204	Identifier	sock		1316809	1					
ANR	1317205	IfStatement	if ( pool )		1316809	12					
ANR	1317206	Condition	pool	140:5:3990:3993	1316809	0	True				
ANR	1317207	Identifier	pool		1316809	0					
ANR	1317208	CompoundStatement		63:2:1228:1251	1316809	1					
ANR	1317209	IdentifierDeclStatement	DCCollector col ( pool ) ;	141:2:4000:4023	1316809	0	True				
ANR	1317210	IdentifierDecl	col ( pool )		1316809	0					
ANR	1317211	IdentifierDeclType	DCCollector		1316809	0					
ANR	1317212	Identifier	col		1316809	1					
ANR	1317213	Identifier	pool		1316809	2					
ANR	1317214	IfStatement	if ( ! col . addr ( ) )		1316809	1					
ANR	1317215	Condition	! col . addr ( )	142:6:4031:4042	1316809	0	True				
ANR	1317216	UnaryOperationExpression	! col . addr ( )		1316809	0					
ANR	1317217	UnaryOperator	!		1316809	0					
ANR	1317218	CallExpression	col . addr ( )		1316809	1					
ANR	1317219	Callee	col . addr		1316809	0					
ANR	1317220	MemberAccess	col . addr		1316809	0					
ANR	1317221	Identifier	col		1316809	0					
ANR	1317222	Identifier	addr		1316809	1					
ANR	1317223	ArgumentList			1316809	1					
ANR	1317224	CompoundStatement		64:21:1274:1274	1316809	1					
ANR	1317225	ExpressionStatement	"fprintf ( stderr , ""Error: %s\\n"" , col . error ( ) )"	143:3:4051:4096	1316809	0	True				
ANR	1317226	CallExpression	"fprintf ( stderr , ""Error: %s\\n"" , col . error ( ) )"		1316809	0					
ANR	1317227	Callee	fprintf		1316809	0					
ANR	1317228	Identifier	fprintf		1316809	0					
ANR	1317229	ArgumentList	stderr		1316809	1					
ANR	1317230	Argument	stderr		1316809	0					
ANR	1317231	Identifier	stderr		1316809	0					
ANR	1317232	Argument	"""Error: %s\\n"""		1316809	1					
ANR	1317233	PrimaryExpression	"""Error: %s\\n"""		1316809	0					
ANR	1317234	Argument	col . error ( )		1316809	2					
ANR	1317235	CallExpression	col . error ( )		1316809	0					
ANR	1317236	Callee	col . error		1316809	0					
ANR	1317237	MemberAccess	col . error		1316809	0					
ANR	1317238	Identifier	col		1316809	0					
ANR	1317239	Identifier	error		1316809	1					
ANR	1317240	ArgumentList			1316809	1					
ANR	1317241	ExpressionStatement	exit ( 1 )	144:3:4101:4108	1316809	1	True				
ANR	1317242	CallExpression	exit ( 1 )		1316809	0					
ANR	1317243	Callee	exit		1316809	0					
ANR	1317244	Identifier	exit		1316809	0					
ANR	1317245	ArgumentList	1		1316809	1					
ANR	1317246	Argument	1		1316809	0					
ANR	1317247	PrimaryExpression	1		1316809	0					
ANR	1317248	ExpressionStatement	"daemon = new Daemon ( type , machine_name , col . addr ( ) )"	146:2:4116:4169	1316809	2	True				
ANR	1317249	AssignmentExpression	"daemon = new Daemon ( type , machine_name , col . addr ( ) )"		1316809	0		=			
ANR	1317250	Identifier	daemon		1316809	0					
ANR	1317251	Expression	"type , machine_name , col . addr ( )"		1316809	1					
ANR	1317252	Identifier	type		1316809	0					
ANR	1317253	Expression	"machine_name , col . addr ( )"		1316809	1					
ANR	1317254	Identifier	machine_name		1316809	0					
ANR	1317255	CallExpression	col . addr ( )		1316809	1					
ANR	1317256	Callee	col . addr		1316809	0					
ANR	1317257	MemberAccess	col . addr		1316809	0					
ANR	1317258	Identifier	col		1316809	0					
ANR	1317259	Identifier	addr		1316809	1					
ANR	1317260	ArgumentList			1316809	1					
ANR	1317261	ElseStatement	else		1316809	0					
ANR	1317262	CompoundStatement		69:8:1407:1407	1316809	0					
ANR	1317263	ExpressionStatement	"daemon = new Daemon ( type , machine_name )"	148:2:4183:4224	1316809	0	True				
ANR	1317264	AssignmentExpression	"daemon = new Daemon ( type , machine_name )"		1316809	0		=			
ANR	1317265	Identifier	daemon		1316809	0					
ANR	1317266	Expression	"type , machine_name"		1316809	1					
ANR	1317267	Identifier	type		1316809	0					
ANR	1317268	Identifier	machine_name		1316809	1					
ANR	1317269	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Locating daemon process on %s...\\n"" , machine_name )"	152:1:4234:4304	1316809	13	True				
ANR	1317270	CallExpression	"dprintf ( D_FULLDEBUG , ""Locating daemon process on %s...\\n"" , machine_name )"		1316809	0					
ANR	1317271	Callee	dprintf		1316809	0					
ANR	1317272	Identifier	dprintf		1316809	0					
ANR	1317273	ArgumentList	D_FULLDEBUG		1316809	1					
ANR	1317274	Argument	D_FULLDEBUG		1316809	0					
ANR	1317275	Identifier	D_FULLDEBUG		1316809	0					
ANR	1317276	Argument	"""Locating daemon process on %s...\\n"""		1316809	1					
ANR	1317277	PrimaryExpression	"""Locating daemon process on %s...\\n"""		1316809	0					
ANR	1317278	Argument	machine_name		1316809	2					
ANR	1317279	Identifier	machine_name		1316809	0					
ANR	1317280	IfStatement	if ( ! daemon -> locate ( ) )		1316809	14					
ANR	1317281	Condition	! daemon -> locate ( )	154:4:4311:4327	1316809	0	True				
ANR	1317282	UnaryOperationExpression	! daemon -> locate ( )		1316809	0					
ANR	1317283	UnaryOperator	!		1316809	0					
ANR	1317284	CallExpression	daemon -> locate ( )		1316809	1					
ANR	1317285	Callee	daemon -> locate		1316809	0					
ANR	1317286	PtrMemberAccess	daemon -> locate		1316809	0					
ANR	1317287	Identifier	daemon		1316809	0					
ANR	1317288	Identifier	locate		1316809	1					
ANR	1317289	ArgumentList			1316809	1					
ANR	1317290	CompoundStatement		76:23:1558:1558	1316809	1					
ANR	1317291	ExpressionStatement	"fprintf ( stderr , ""Couldn't locate daemon on %s: %s\\n"" , machine_name , daemon -> error ( ) )"	155:2:4334:4415	1316809	0	True				
ANR	1317292	CallExpression	"fprintf ( stderr , ""Couldn't locate daemon on %s: %s\\n"" , machine_name , daemon -> error ( ) )"		1316809	0					
ANR	1317293	Callee	fprintf		1316809	0					
ANR	1317294	Identifier	fprintf		1316809	0					
ANR	1317295	ArgumentList	stderr		1316809	1					
ANR	1317296	Argument	stderr		1316809	0					
ANR	1317297	Identifier	stderr		1316809	0					
ANR	1317298	Argument	"""Couldn't locate daemon on %s: %s\\n"""		1316809	1					
ANR	1317299	PrimaryExpression	"""Couldn't locate daemon on %s: %s\\n"""		1316809	0					
ANR	1317300	Argument	machine_name		1316809	2					
ANR	1317301	Identifier	machine_name		1316809	0					
ANR	1317302	Argument	daemon -> error ( )		1316809	3					
ANR	1317303	CallExpression	daemon -> error ( )		1316809	0					
ANR	1317304	Callee	daemon -> error		1316809	0					
ANR	1317305	PtrMemberAccess	daemon -> error		1316809	0					
ANR	1317306	Identifier	daemon		1316809	0					
ANR	1317307	Identifier	error		1316809	1					
ANR	1317308	ArgumentList			1316809	1					
ANR	1317309	ExpressionStatement	exit ( 1 )	156:2:4419:4426	1316809	1	True				
ANR	1317310	CallExpression	exit ( 1 )		1316809	0					
ANR	1317311	Callee	exit		1316809	0					
ANR	1317312	Identifier	exit		1316809	0					
ANR	1317313	ArgumentList	1		1316809	1					
ANR	1317314	Argument	1		1316809	0					
ANR	1317315	PrimaryExpression	1		1316809	0					
ANR	1317316	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Daemon %s is %s\\n"" , daemon -> hostname ( ) , daemon -> addr ( ) )"	159:1:4433:4507	1316809	15	True				
ANR	1317317	CallExpression	"dprintf ( D_FULLDEBUG , ""Daemon %s is %s\\n"" , daemon -> hostname ( ) , daemon -> addr ( ) )"		1316809	0					
ANR	1317318	Callee	dprintf		1316809	0					
ANR	1317319	Identifier	dprintf		1316809	0					
ANR	1317320	ArgumentList	D_FULLDEBUG		1316809	1					
ANR	1317321	Argument	D_FULLDEBUG		1316809	0					
ANR	1317322	Identifier	D_FULLDEBUG		1316809	0					
ANR	1317323	Argument	"""Daemon %s is %s\\n"""		1316809	1					
ANR	1317324	PrimaryExpression	"""Daemon %s is %s\\n"""		1316809	0					
ANR	1317325	Argument	daemon -> hostname ( )		1316809	2					
ANR	1317326	CallExpression	daemon -> hostname ( )		1316809	0					
ANR	1317327	Callee	daemon -> hostname		1316809	0					
ANR	1317328	PtrMemberAccess	daemon -> hostname		1316809	0					
ANR	1317329	Identifier	daemon		1316809	0					
ANR	1317330	Identifier	hostname		1316809	1					
ANR	1317331	ArgumentList			1316809	1					
ANR	1317332	Argument	daemon -> addr ( )		1316809	3					
ANR	1317333	CallExpression	daemon -> addr ( )		1316809	0					
ANR	1317334	Callee	daemon -> addr		1316809	0					
ANR	1317335	PtrMemberAccess	daemon -> addr		1316809	0					
ANR	1317336	Identifier	daemon		1316809	0					
ANR	1317337	Identifier	addr		1316809	1					
ANR	1317338	ArgumentList			1316809	1					
ANR	1317339	ExpressionStatement	"sock = ( ReliSock * ) daemon -> startCommand ( DC_FETCH_LOG , Sock :: reli_sock )"	161:1:4512:4582	1316809	16	True				
ANR	1317340	AssignmentExpression	"sock = ( ReliSock * ) daemon -> startCommand ( DC_FETCH_LOG , Sock :: reli_sock )"		1316809	0		=			
ANR	1317341	Identifier	sock		1316809	0					
ANR	1317342	CastExpression	"( ReliSock * ) daemon -> startCommand ( DC_FETCH_LOG , Sock :: reli_sock )"		1316809	1					
ANR	1317343	CastTarget	ReliSock *		1316809	0					
ANR	1317344	CallExpression	"daemon -> startCommand ( DC_FETCH_LOG , Sock :: reli_sock )"		1316809	1					
ANR	1317345	Callee	daemon -> startCommand		1316809	0					
ANR	1317346	PtrMemberAccess	daemon -> startCommand		1316809	0					
ANR	1317347	Identifier	daemon		1316809	0					
ANR	1317348	Identifier	startCommand		1316809	1					
ANR	1317349	ArgumentList	DC_FETCH_LOG		1316809	1					
ANR	1317350	Argument	DC_FETCH_LOG		1316809	0					
ANR	1317351	Identifier	DC_FETCH_LOG		1316809	0					
ANR	1317352	Argument	Sock :: reli_sock		1316809	1					
ANR	1317353	Identifier	Sock :: reli_sock		1316809	0					
ANR	1317354	IfStatement	if ( ! sock )		1316809	17					
ANR	1317355	Condition	! sock	163:4:4589:4593	1316809	0	True				
ANR	1317356	UnaryOperationExpression	! sock		1316809	0					
ANR	1317357	UnaryOperator	!		1316809	0					
ANR	1317358	Identifier	sock		1316809	1					
ANR	1317359	CompoundStatement		85:11:1824:1824	1316809	1					
ANR	1317360	ExpressionStatement	"fprintf ( stderr , ""couldn't connect to daemon %s at %s\\n"" , daemon -> hostname ( ) , daemon -> addr ( ) )"	164:2:4600:4689	1316809	0	True				
ANR	1317361	CallExpression	"fprintf ( stderr , ""couldn't connect to daemon %s at %s\\n"" , daemon -> hostname ( ) , daemon -> addr ( ) )"		1316809	0					
ANR	1317362	Callee	fprintf		1316809	0					
ANR	1317363	Identifier	fprintf		1316809	0					
ANR	1317364	ArgumentList	stderr		1316809	1					
ANR	1317365	Argument	stderr		1316809	0					
ANR	1317366	Identifier	stderr		1316809	0					
ANR	1317367	Argument	"""couldn't connect to daemon %s at %s\\n"""		1316809	1					
ANR	1317368	PrimaryExpression	"""couldn't connect to daemon %s at %s\\n"""		1316809	0					
ANR	1317369	Argument	daemon -> hostname ( )		1316809	2					
ANR	1317370	CallExpression	daemon -> hostname ( )		1316809	0					
ANR	1317371	Callee	daemon -> hostname		1316809	0					
ANR	1317372	PtrMemberAccess	daemon -> hostname		1316809	0					
ANR	1317373	Identifier	daemon		1316809	0					
ANR	1317374	Identifier	hostname		1316809	1					
ANR	1317375	ArgumentList			1316809	1					
ANR	1317376	Argument	daemon -> addr ( )		1316809	3					
ANR	1317377	CallExpression	daemon -> addr ( )		1316809	0					
ANR	1317378	Callee	daemon -> addr		1316809	0					
ANR	1317379	PtrMemberAccess	daemon -> addr		1316809	0					
ANR	1317380	Identifier	daemon		1316809	0					
ANR	1317381	Identifier	addr		1316809	1					
ANR	1317382	ArgumentList			1316809	1					
ANR	1317383	ReturnStatement	return 1 ;	165:2:4693:4701	1316809	1	True				
ANR	1317384	PrimaryExpression	1		1316809	0					
ANR	1317385	IdentifierDeclStatement	int commandType = DC_FETCH_LOG_TYPE_PLAIN ;	168:1:4708:4749	1316809	18	True				
ANR	1317386	IdentifierDecl	commandType = DC_FETCH_LOG_TYPE_PLAIN		1316809	0					
ANR	1317387	IdentifierDeclType	int		1316809	0					
ANR	1317388	Identifier	commandType		1316809	1					
ANR	1317389	AssignmentExpression	commandType = DC_FETCH_LOG_TYPE_PLAIN		1316809	2		=			
ANR	1317390	Identifier	DC_FETCH_LOG_TYPE_PLAIN		1316809	0					
ANR	1317391	Identifier	DC_FETCH_LOG_TYPE_PLAIN		1316809	1					
ANR	1317392	IfStatement	"if ( ( strcmp ( log_name , ""HISTORY"" ) == 0 ) || ( strcmp ( log_name , ""STARTD_HISTORY"" ) == 0 ) )"		1316809	19					
ANR	1317393	Condition	"( strcmp ( log_name , ""HISTORY"" ) == 0 ) || ( strcmp ( log_name , ""STARTD_HISTORY"" ) == 0 )"	169:5:4756:4834	1316809	0	True				
ANR	1317394	OrExpression	"( strcmp ( log_name , ""HISTORY"" ) == 0 ) || ( strcmp ( log_name , ""STARTD_HISTORY"" ) == 0 )"		1316809	0		||			
ANR	1317395	EqualityExpression	"strcmp ( log_name , ""HISTORY"" ) == 0"		1316809	0		==			
ANR	1317396	CallExpression	"strcmp ( log_name , ""HISTORY"" )"		1316809	0					
ANR	1317397	Callee	strcmp		1316809	0					
ANR	1317398	Identifier	strcmp		1316809	0					
ANR	1317399	ArgumentList	log_name		1316809	1					
ANR	1317400	Argument	log_name		1316809	0					
ANR	1317401	Identifier	log_name		1316809	0					
ANR	1317402	Argument	"""HISTORY"""		1316809	1					
ANR	1317403	PrimaryExpression	"""HISTORY"""		1316809	0					
ANR	1317404	PrimaryExpression	0		1316809	1					
ANR	1317405	EqualityExpression	"strcmp ( log_name , ""STARTD_HISTORY"" ) == 0"		1316809	1		==			
ANR	1317406	CallExpression	"strcmp ( log_name , ""STARTD_HISTORY"" )"		1316809	0					
ANR	1317407	Callee	strcmp		1316809	0					
ANR	1317408	Identifier	strcmp		1316809	0					
ANR	1317409	ArgumentList	log_name		1316809	1					
ANR	1317410	Argument	log_name		1316809	0					
ANR	1317411	Identifier	log_name		1316809	0					
ANR	1317412	Argument	"""STARTD_HISTORY"""		1316809	1					
ANR	1317413	PrimaryExpression	"""STARTD_HISTORY"""		1316809	0					
ANR	1317414	PrimaryExpression	0		1316809	1					
ANR	1317415	CompoundStatement		91:86:2065:2065	1316809	1					
ANR	1317416	ExpressionStatement	commandType = DC_FETCH_LOG_TYPE_HISTORY	170:2:4841:4880	1316809	0	True				
ANR	1317417	AssignmentExpression	commandType = DC_FETCH_LOG_TYPE_HISTORY		1316809	0		=			
ANR	1317418	Identifier	commandType		1316809	0					
ANR	1317419	Identifier	DC_FETCH_LOG_TYPE_HISTORY		1316809	1					
ANR	1317420	IfStatement	"if ( ( strcmp ( log_name , ""STARTD.PER_JOB_HISTORY_DIR"" ) == 0 ) || ( strcmp ( log_name , ""STARTD.PER_JOB_HISTORY_DIR"" ) == 0 ) )"		1316809	20					
ANR	1317421	Condition	"( strcmp ( log_name , ""STARTD.PER_JOB_HISTORY_DIR"" ) == 0 ) || ( strcmp ( log_name , ""STARTD.PER_JOB_HISTORY_DIR"" ) == 0 )"	173:5:4891:5000	1316809	0	True				
ANR	1317422	OrExpression	"( strcmp ( log_name , ""STARTD.PER_JOB_HISTORY_DIR"" ) == 0 ) || ( strcmp ( log_name , ""STARTD.PER_JOB_HISTORY_DIR"" ) == 0 )"		1316809	0		||			
ANR	1317423	EqualityExpression	"strcmp ( log_name , ""STARTD.PER_JOB_HISTORY_DIR"" ) == 0"		1316809	0		==			
ANR	1317424	CallExpression	"strcmp ( log_name , ""STARTD.PER_JOB_HISTORY_DIR"" )"		1316809	0					
ANR	1317425	Callee	strcmp		1316809	0					
ANR	1317426	Identifier	strcmp		1316809	0					
ANR	1317427	ArgumentList	log_name		1316809	1					
ANR	1317428	Argument	log_name		1316809	0					
ANR	1317429	Identifier	log_name		1316809	0					
ANR	1317430	Argument	"""STARTD.PER_JOB_HISTORY_DIR"""		1316809	1					
ANR	1317431	PrimaryExpression	"""STARTD.PER_JOB_HISTORY_DIR"""		1316809	0					
ANR	1317432	PrimaryExpression	0		1316809	1					
ANR	1317433	EqualityExpression	"strcmp ( log_name , ""STARTD.PER_JOB_HISTORY_DIR"" ) == 0"		1316809	1		==			
ANR	1317434	CallExpression	"strcmp ( log_name , ""STARTD.PER_JOB_HISTORY_DIR"" )"		1316809	0					
ANR	1317435	Callee	strcmp		1316809	0					
ANR	1317436	Identifier	strcmp		1316809	0					
ANR	1317437	ArgumentList	log_name		1316809	1					
ANR	1317438	Argument	log_name		1316809	0					
ANR	1317439	Identifier	log_name		1316809	0					
ANR	1317440	Argument	"""STARTD.PER_JOB_HISTORY_DIR"""		1316809	1					
ANR	1317441	PrimaryExpression	"""STARTD.PER_JOB_HISTORY_DIR"""		1316809	0					
ANR	1317442	PrimaryExpression	0		1316809	1					
ANR	1317443	CompoundStatement		95:117:2231:2231	1316809	1					
ANR	1317444	ExpressionStatement	commandType = DC_FETCH_LOG_TYPE_HISTORY_DIR	174:2:5007:5050	1316809	0	True				
ANR	1317445	AssignmentExpression	commandType = DC_FETCH_LOG_TYPE_HISTORY_DIR		1316809	0		=			
ANR	1317446	Identifier	commandType		1316809	0					
ANR	1317447	Identifier	DC_FETCH_LOG_TYPE_HISTORY_DIR		1316809	1					
ANR	1317448	ExpressionStatement	sock -> put ( commandType )	177:1:5057:5081	1316809	21	True				
ANR	1317449	CallExpression	sock -> put ( commandType )		1316809	0					
ANR	1317450	Callee	sock -> put		1316809	0					
ANR	1317451	PtrMemberAccess	sock -> put		1316809	0					
ANR	1317452	Identifier	sock		1316809	0					
ANR	1317453	Identifier	put		1316809	1					
ANR	1317454	ArgumentList	commandType		1316809	1					
ANR	1317455	Argument	commandType		1316809	0					
ANR	1317456	Identifier	commandType		1316809	0					
ANR	1317457	ExpressionStatement	sock -> put ( log_name )	178:1:5084:5105	1316809	22	True				
ANR	1317458	CallExpression	sock -> put ( log_name )		1316809	0					
ANR	1317459	Callee	sock -> put		1316809	0					
ANR	1317460	PtrMemberAccess	sock -> put		1316809	0					
ANR	1317461	Identifier	sock		1316809	0					
ANR	1317462	Identifier	put		1316809	1					
ANR	1317463	ArgumentList	log_name		1316809	1					
ANR	1317464	Argument	log_name		1316809	0					
ANR	1317465	Identifier	log_name		1316809	0					
ANR	1317466	ExpressionStatement	sock -> end_of_message ( )	179:1:5108:5130	1316809	23	True				
ANR	1317467	CallExpression	sock -> end_of_message ( )		1316809	0					
ANR	1317468	Callee	sock -> end_of_message		1316809	0					
ANR	1317469	PtrMemberAccess	sock -> end_of_message		1316809	0					
ANR	1317470	Identifier	sock		1316809	0					
ANR	1317471	Identifier	end_of_message		1316809	1					
ANR	1317472	ArgumentList			1316809	1					
ANR	1317473	IfStatement	if ( commandType == DC_FETCH_LOG_TYPE_HISTORY_DIR )		1316809	24					
ANR	1317474	Condition	commandType == DC_FETCH_LOG_TYPE_HISTORY_DIR	181:5:5138:5181	1316809	0	True				
ANR	1317475	EqualityExpression	commandType == DC_FETCH_LOG_TYPE_HISTORY_DIR		1316809	0		==			
ANR	1317476	Identifier	commandType		1316809	0					
ANR	1317477	Identifier	DC_FETCH_LOG_TYPE_HISTORY_DIR		1316809	1					
ANR	1317478	CompoundStatement		103:51:2412:2412	1316809	1					
ANR	1317479	ReturnStatement	return handleHistoryDir ( sock ) ;	182:2:5188:5217	1316809	0	True				
ANR	1317480	CallExpression	handleHistoryDir ( sock )		1316809	0					
ANR	1317481	Callee	handleHistoryDir		1316809	0					
ANR	1317482	Identifier	handleHistoryDir		1316809	0					
ANR	1317483	ArgumentList	sock		1316809	1					
ANR	1317484	Argument	sock		1316809	0					
ANR	1317485	Identifier	sock		1316809	0					
ANR	1317486	IdentifierDeclStatement	int result = - 1 ;	185:1:5224:5239	1316809	25	True				
ANR	1317487	IdentifierDecl	result = - 1		1316809	0					
ANR	1317488	IdentifierDeclType	int		1316809	0					
ANR	1317489	Identifier	result		1316809	1					
ANR	1317490	AssignmentExpression	result = - 1		1316809	2		=			
ANR	1317491	Identifier	result		1316809	0					
ANR	1317492	UnaryOperationExpression	- 1		1316809	1					
ANR	1317493	UnaryOperator	-		1316809	0					
ANR	1317494	PrimaryExpression	1		1316809	1					
ANR	1317495	IdentifierDeclStatement	int exitcode = 1 ;	186:1:5242:5258	1316809	26	True				
ANR	1317496	IdentifierDecl	exitcode = 1		1316809	0					
ANR	1317497	IdentifierDeclType	int		1316809	0					
ANR	1317498	Identifier	exitcode		1316809	1					
ANR	1317499	AssignmentExpression	exitcode = 1		1316809	2		=			
ANR	1317500	Identifier	exitcode		1316809	0					
ANR	1317501	PrimaryExpression	1		1316809	1					
ANR	1317502	IdentifierDeclStatement	const char * reason = NULL ;	187:1:5261:5284	1316809	27	True				
ANR	1317503	IdentifierDecl	* reason = NULL		1316809	0					
ANR	1317504	IdentifierDeclType	const char *		1316809	0					
ANR	1317505	Identifier	reason		1316809	1					
ANR	1317506	AssignmentExpression	* reason = NULL		1316809	2		=			
ANR	1317507	Identifier	NULL		1316809	0					
ANR	1317508	Identifier	NULL		1316809	1					
ANR	1317509	IdentifierDeclStatement	filesize_t filesize ;	188:1:5287:5306	1316809	28	True				
ANR	1317510	IdentifierDecl	filesize		1316809	0					
ANR	1317511	IdentifierDeclType	filesize_t		1316809	0					
ANR	1317512	Identifier	filesize		1316809	1					
ANR	1317513	ExpressionStatement	sock -> decode ( )	190:1:5310:5324	1316809	29	True				
ANR	1317514	CallExpression	sock -> decode ( )		1316809	0					
ANR	1317515	Callee	sock -> decode		1316809	0					
ANR	1317516	PtrMemberAccess	sock -> decode		1316809	0					
ANR	1317517	Identifier	sock		1316809	0					
ANR	1317518	Identifier	decode		1316809	1					
ANR	1317519	ArgumentList			1316809	1					
ANR	1317520	ExpressionStatement	sock -> code ( result )	191:1:5327:5345	1316809	30	True				
ANR	1317521	CallExpression	sock -> code ( result )		1316809	0					
ANR	1317522	Callee	sock -> code		1316809	0					
ANR	1317523	PtrMemberAccess	sock -> code		1316809	0					
ANR	1317524	Identifier	sock		1316809	0					
ANR	1317525	Identifier	code		1316809	1					
ANR	1317526	ArgumentList	result		1316809	1					
ANR	1317527	Argument	result		1316809	0					
ANR	1317528	Identifier	result		1316809	0					
ANR	1317529	SwitchStatement	switch ( result )		1316809	31					
ANR	1317530	Condition	result	193:8:5356:5361	1316809	0	True				
ANR	1317531	Identifier	result		1316809	0					
ANR	1317532	CompoundStatement		115:16:2592:2592	1316809	1					
ANR	1317533	Statement	case	194:2:5368:5371	1316809	0	True				
ANR	1317534	Statement	-	194:7:5373:5373	1316809	1	True				
ANR	1317535	Label	1 :	194:8:5374:5375	1316809	2	True				
ANR	1317536	ExpressionStatement	"reason = ""permission denied"""	195:3:5380:5408	1316809	3	True				
ANR	1317537	AssignmentExpression	"reason = ""permission denied"""		1316809	0		=			
ANR	1317538	Identifier	reason		1316809	0					
ANR	1317539	PrimaryExpression	"""permission denied"""		1316809	1					
ANR	1317540	BreakStatement	break ;	196:3:5413:5418	1316809	4	True				
ANR	1317541	Label	case DC_FETCH_LOG_RESULT_SUCCESS :	197:2:5422:5454	1316809	5	True				
ANR	1317542	Identifier	DC_FETCH_LOG_RESULT_SUCCESS		1316809	0					
ANR	1317543	ExpressionStatement	"result = sock -> get_file ( & filesize , 1 , 0 )"	198:3:5459:5497	1316809	6	True				
ANR	1317544	AssignmentExpression	"result = sock -> get_file ( & filesize , 1 , 0 )"		1316809	0		=			
ANR	1317545	Identifier	result		1316809	0					
ANR	1317546	CallExpression	"sock -> get_file ( & filesize , 1 , 0 )"		1316809	1					
ANR	1317547	Callee	sock -> get_file		1316809	0					
ANR	1317548	PtrMemberAccess	sock -> get_file		1316809	0					
ANR	1317549	Identifier	sock		1316809	0					
ANR	1317550	Identifier	get_file		1316809	1					
ANR	1317551	ArgumentList	& filesize		1316809	1					
ANR	1317552	Argument	& filesize		1316809	0					
ANR	1317553	UnaryOperationExpression	& filesize		1316809	0					
ANR	1317554	UnaryOperator	&		1316809	0					
ANR	1317555	Identifier	filesize		1316809	1					
ANR	1317556	Argument	1		1316809	1					
ANR	1317557	PrimaryExpression	1		1316809	0					
ANR	1317558	Argument	0		1316809	2					
ANR	1317559	PrimaryExpression	0		1316809	0					
ANR	1317560	IfStatement	if ( result >= 0 )		1316809	7					
ANR	1317561	Condition	result >= 0	199:6:5505:5513	1316809	0	True				
ANR	1317562	RelationalExpression	result >= 0		1316809	0		>=			
ANR	1317563	Identifier	result		1316809	0					
ANR	1317564	PrimaryExpression	0		1316809	1					
ANR	1317565	CompoundStatement		121:17:2744:2744	1316809	1					
ANR	1317566	ExpressionStatement	exitcode = 0	200:4:5522:5534	1316809	0	True				
ANR	1317567	AssignmentExpression	exitcode = 0		1316809	0		=			
ANR	1317568	Identifier	exitcode		1316809	0					
ANR	1317569	PrimaryExpression	0		1316809	1					
ANR	1317570	ElseStatement	else		1316809	0					
ANR	1317571	CompoundStatement		123:10:2774:2774	1316809	0					
ANR	1317572	ExpressionStatement	"reason = ""connection lost"""	202:4:5552:5578	1316809	0	True				
ANR	1317573	AssignmentExpression	"reason = ""connection lost"""		1316809	0		=			
ANR	1317574	Identifier	reason		1316809	0					
ANR	1317575	PrimaryExpression	"""connection lost"""		1316809	1					
ANR	1317576	BreakStatement	break ;	204:3:5588:5593	1316809	8	True				
ANR	1317577	Label	case DC_FETCH_LOG_RESULT_NO_NAME :	205:2:5597:5629	1316809	9	True				
ANR	1317578	Identifier	DC_FETCH_LOG_RESULT_NO_NAME		1316809	0					
ANR	1317579	ExpressionStatement	"reason = ""no log file by that name"""	206:3:5634:5669	1316809	10	True				
ANR	1317580	AssignmentExpression	"reason = ""no log file by that name"""		1316809	0		=			
ANR	1317581	Identifier	reason		1316809	0					
ANR	1317582	PrimaryExpression	"""no log file by that name"""		1316809	1					
ANR	1317583	BreakStatement	break ;	207:3:5674:5679	1316809	11	True				
ANR	1317584	Label	case DC_FETCH_LOG_RESULT_CANT_OPEN :	208:2:5683:5717	1316809	12	True				
ANR	1317585	Identifier	DC_FETCH_LOG_RESULT_CANT_OPEN		1316809	0					
ANR	1317586	ExpressionStatement	"reason = ""server was unable to access it"""	209:3:5722:5763	1316809	13	True				
ANR	1317587	AssignmentExpression	"reason = ""server was unable to access it"""		1316809	0		=			
ANR	1317588	Identifier	reason		1316809	0					
ANR	1317589	PrimaryExpression	"""server was unable to access it"""		1316809	1					
ANR	1317590	BreakStatement	break ;	210:3:5768:5773	1316809	14	True				
ANR	1317591	Label	case DC_FETCH_LOG_RESULT_BAD_TYPE :	211:2:5777:5810	1316809	15	True				
ANR	1317592	Identifier	DC_FETCH_LOG_RESULT_BAD_TYPE		1316809	0					
ANR	1317593	ExpressionStatement	"reason = ""server can't provide that type of log"""	212:3:5815:5863	1316809	16	True				
ANR	1317594	AssignmentExpression	"reason = ""server can't provide that type of log"""		1316809	0		=			
ANR	1317595	Identifier	reason		1316809	0					
ANR	1317596	PrimaryExpression	"""server can't provide that type of log"""		1316809	1					
ANR	1317597	BreakStatement	break ;	213:3:5868:5873	1316809	17	True				
ANR	1317598	Label	default :	214:2:5877:5884	1316809	18	True				
ANR	1317599	Identifier	default		1316809	0					
ANR	1317600	ExpressionStatement	"reason = ""unknown error"""	215:3:5889:5913	1316809	19	True				
ANR	1317601	AssignmentExpression	"reason = ""unknown error"""		1316809	0		=			
ANR	1317602	Identifier	reason		1316809	0					
ANR	1317603	PrimaryExpression	"""unknown error"""		1316809	1					
ANR	1317604	BreakStatement	break ;	216:3:5918:5923	1316809	20	True				
ANR	1317605	IfStatement	if ( exitcode != 0 )		1316809	32					
ANR	1317606	Condition	exitcode != 0	219:4:5933:5943	1316809	0	True				
ANR	1317607	EqualityExpression	exitcode != 0		1316809	0		!=			
ANR	1317608	Identifier	exitcode		1316809	0					
ANR	1317609	PrimaryExpression	0		1316809	1					
ANR	1317610	CompoundStatement		141:17:3174:3174	1316809	1					
ANR	1317611	ExpressionStatement	"fprintf ( stderr , ""Couldn't fetch log: %s.\\n"" , reason )"	220:2:5950:6000	1316809	0	True				
ANR	1317612	CallExpression	"fprintf ( stderr , ""Couldn't fetch log: %s.\\n"" , reason )"		1316809	0					
ANR	1317613	Callee	fprintf		1316809	0					
ANR	1317614	Identifier	fprintf		1316809	0					
ANR	1317615	ArgumentList	stderr		1316809	1					
ANR	1317616	Argument	stderr		1316809	0					
ANR	1317617	Identifier	stderr		1316809	0					
ANR	1317618	Argument	"""Couldn't fetch log: %s.\\n"""		1316809	1					
ANR	1317619	PrimaryExpression	"""Couldn't fetch log: %s.\\n"""		1316809	0					
ANR	1317620	Argument	reason		1316809	2					
ANR	1317621	Identifier	reason		1316809	0					
ANR	1317622	ReturnStatement	return exitcode ;	223:1:6007:6022	1316809	33	True				
ANR	1317623	Identifier	exitcode		1316809	0					
ANR	1317624	ReturnType	int		1316809	1					
ANR	1317625	Identifier	main		1316809	2					
ANR	1317626	ParameterList	"int argc , char * argv [ ]"		1316809	3					
ANR	1317627	Parameter	int argc	78:10:2746:2753	1316809	0	True				
ANR	1317628	ParameterType	int		1316809	0					
ANR	1317629	Identifier	argc		1316809	1					
ANR	1317630	Parameter	char * argv [ ]	78:20:2756:2767	1316809	1	True				
ANR	1317631	ParameterType	char * [ ]		1316809	0					
ANR	1317632	Identifier	argv		1316809	1					
ANR	1317633	CFGEntryNode	ENTRY		1316809		True				
ANR	1317634	CFGExitNode	EXIT		1316809		True				
ANR	1317635	Symbol	col		1316809						
ANR	1317636	Symbol	reason		1316809						
ANR	1317637	Symbol	Sock :: reli_sock		1316809						
ANR	1317638	Symbol	commandType		1316809						
ANR	1317639	Symbol	sock -> get_file		1316809						
ANR	1317640	Symbol	DC_FETCH_LOG		1316809						
ANR	1317641	Symbol	handleHistoryDir		1316809						
ANR	1317642	Symbol	p_funcs		1316809						
ANR	1317643	Symbol	* argv		1316809						
ANR	1317644	Symbol	daemon -> locate		1316809						
ANR	1317645	Symbol	DC_FETCH_LOG_TYPE_HISTORY		1316809						
ANR	1317646	Symbol	col . addr		1316809						
ANR	1317647	Symbol	exitcode		1316809						
ANR	1317648	Symbol	filesize		1316809						
ANR	1317649	Symbol	machine_name		1316809						
ANR	1317650	Symbol	type		1316809						
ANR	1317651	Symbol	daemon -> hostname		1316809						
ANR	1317652	Symbol	argv		1316809						
ANR	1317653	Symbol	result		1316809						
ANR	1317654	Symbol	DT_MASTER		1316809						
ANR	1317655	Symbol	myDistro		1316809						
ANR	1317656	Symbol	* * argv		1316809						
ANR	1317657	Symbol	DT_NONE		1316809						
ANR	1317658	Symbol	* daemon		1316809						
ANR	1317659	Symbol	& filesize		1316809						
ANR	1317660	Symbol	DC_FETCH_LOG_TYPE_HISTORY_DIR		1316809						
ANR	1317661	Symbol	* sock		1316809						
ANR	1317662	Symbol	argc		1316809						
ANR	1317663	Symbol	strcmp		1316809						
ANR	1317664	Symbol	DT_DAGMAN		1316809						
ANR	1317665	Symbol	daemon -> startCommand		1316809						
ANR	1317666	Symbol	* * i		1316809						
ANR	1317667	Symbol	NULL		1316809						
ANR	1317668	Symbol	daemon -> error		1316809						
ANR	1317669	Symbol	log_name		1316809						
ANR	1317670	Symbol	Termlog		1316809						
ANR	1317671	Symbol	get_param_functions		1316809						
ANR	1317672	Symbol	DC_FETCH_LOG_TYPE_PLAIN		1316809						
ANR	1317673	Symbol	pool		1316809						
ANR	1317674	Symbol	i		1316809						
ANR	1317675	Symbol	D_FULLDEBUG		1316809						
ANR	1317676	Symbol	stderr		1316809						
ANR	1317677	Symbol	daemon		1316809						
ANR	1317678	Symbol	stringToDaemonType		1316809						
ANR	1317679	Symbol	sock		1316809						
ANR	1317680	Symbol	* i		1316809						
ANR	1317681	Symbol	col . error		1316809						
ANR	1317682	Symbol	daemon -> addr		1316809						
ANR	1317683	Function	handleHistoryDir	226:0:6027:6533							
ANR	1317684	FunctionDef	handleHistoryDir (ReliSock * sock)		1317683	0					
ANR	1317685	CompoundStatement		226:37:6064:6533	1317683	0					
ANR	1317686	IdentifierDeclStatement	int result = - 1 ;	227:1:6067:6083	1317683	0	True				
ANR	1317687	IdentifierDecl	result = - 1		1317683	0					
ANR	1317688	IdentifierDeclType	int		1317683	0					
ANR	1317689	Identifier	result		1317683	1					
ANR	1317690	AssignmentExpression	result = - 1		1317683	2		=			
ANR	1317691	Identifier	result		1317683	0					
ANR	1317692	UnaryOperationExpression	- 1		1317683	1					
ANR	1317693	UnaryOperator	-		1317683	0					
ANR	1317694	PrimaryExpression	1		1317683	1					
ANR	1317695	IdentifierDeclStatement	filesize_t filesize ;	228:1:6086:6105	1317683	1	True				
ANR	1317696	IdentifierDecl	filesize		1317683	0					
ANR	1317697	IdentifierDeclType	filesize_t		1317683	0					
ANR	1317698	Identifier	filesize		1317683	1					
ANR	1317699	IdentifierDeclStatement	char * filename = 0 ;	229:1:6108:6126	1317683	2	True				
ANR	1317700	IdentifierDecl	* filename = 0		1317683	0					
ANR	1317701	IdentifierDeclType	char *		1317683	0					
ANR	1317702	Identifier	filename		1317683	1					
ANR	1317703	AssignmentExpression	* filename = 0		1317683	2		=			
ANR	1317704	Identifier	filename		1317683	0					
ANR	1317705	PrimaryExpression	0		1317683	1					
ANR	1317706	ExpressionStatement	sock -> decode ( )	231:1:6130:6144	1317683	3	True				
ANR	1317707	CallExpression	sock -> decode ( )		1317683	0					
ANR	1317708	Callee	sock -> decode		1317683	0					
ANR	1317709	PtrMemberAccess	sock -> decode		1317683	0					
ANR	1317710	Identifier	sock		1317683	0					
ANR	1317711	Identifier	decode		1317683	1					
ANR	1317712	ArgumentList			1317683	1					
ANR	1317713	ExpressionStatement	sock -> code ( result )	233:1:6148:6166	1317683	4	True				
ANR	1317714	CallExpression	sock -> code ( result )		1317683	0					
ANR	1317715	Callee	sock -> code		1317683	0					
ANR	1317716	PtrMemberAccess	sock -> code		1317683	0					
ANR	1317717	Identifier	sock		1317683	0					
ANR	1317718	Identifier	code		1317683	1					
ANR	1317719	ArgumentList	result		1317683	1					
ANR	1317720	Argument	result		1317683	0					
ANR	1317721	Identifier	result		1317683	0					
ANR	1317722	WhileStatement	while ( result == 1 )		1317683	5					
ANR	1317723	Condition	result == 1	234:8:6176:6186	1317683	0	True				
ANR	1317724	EqualityExpression	result == 1		1317683	0		==			
ANR	1317725	Identifier	result		1317683	0					
ANR	1317726	PrimaryExpression	1		1317683	1					
ANR	1317727	CompoundStatement		10:3:129:140	1317683	1					
ANR	1317728	IdentifierDeclStatement	int fd = - 1 ;	235:3:6194:6205	1317683	0	True				
ANR	1317729	IdentifierDecl	fd = - 1		1317683	0					
ANR	1317730	IdentifierDeclType	int		1317683	0					
ANR	1317731	Identifier	fd		1317683	1					
ANR	1317732	AssignmentExpression	fd = - 1		1317683	2		=			
ANR	1317733	Identifier	fd		1317683	0					
ANR	1317734	UnaryOperationExpression	- 1		1317683	1					
ANR	1317735	UnaryOperator	-		1317683	0					
ANR	1317736	PrimaryExpression	1		1317683	1					
ANR	1317737	ExpressionStatement	filename = NULL	236:3:6210:6225	1317683	1	True				
ANR	1317738	AssignmentExpression	filename = NULL		1317683	0		=			
ANR	1317739	Identifier	filename		1317683	0					
ANR	1317740	Identifier	NULL		1317683	1					
ANR	1317741	ExpressionStatement	sock -> code ( filename )	237:3:6230:6250	1317683	2	True				
ANR	1317742	CallExpression	sock -> code ( filename )		1317683	0					
ANR	1317743	Callee	sock -> code		1317683	0					
ANR	1317744	PtrMemberAccess	sock -> code		1317683	0					
ANR	1317745	Identifier	sock		1317683	0					
ANR	1317746	Identifier	code		1317683	1					
ANR	1317747	ArgumentList	filename		1317683	1					
ANR	1317748	Argument	filename		1317683	0					
ANR	1317749	Identifier	filename		1317683	0					
ANR	1317750	ExpressionStatement	"fd = safe_open_wrapper_follow ( filename , O_CREAT | O_WRONLY )"	238:3:6255:6314	1317683	3	True				
ANR	1317751	AssignmentExpression	"fd = safe_open_wrapper_follow ( filename , O_CREAT | O_WRONLY )"		1317683	0		=			
ANR	1317752	Identifier	fd		1317683	0					
ANR	1317753	CallExpression	"safe_open_wrapper_follow ( filename , O_CREAT | O_WRONLY )"		1317683	1					
ANR	1317754	Callee	safe_open_wrapper_follow		1317683	0					
ANR	1317755	Identifier	safe_open_wrapper_follow		1317683	0					
ANR	1317756	ArgumentList	filename		1317683	1					
ANR	1317757	Argument	filename		1317683	0					
ANR	1317758	Identifier	filename		1317683	0					
ANR	1317759	Argument	O_CREAT | O_WRONLY		1317683	1					
ANR	1317760	InclusiveOrExpression	O_CREAT | O_WRONLY		1317683	0		|			
ANR	1317761	Identifier	O_CREAT		1317683	0					
ANR	1317762	Identifier	O_WRONLY		1317683	1					
ANR	1317763	IfStatement	if ( fd < 0 )		1317683	4					
ANR	1317764	Condition	fd < 0	239:7:6323:6328	1317683	0	True				
ANR	1317765	RelationalExpression	fd < 0		1317683	0		<			
ANR	1317766	Identifier	fd		1317683	0					
ANR	1317767	PrimaryExpression	0		1317683	1					
ANR	1317768	CompoundStatement		14:15:266:266	1317683	1					
ANR	1317769	ExpressionStatement	"printf ( ""Can't open local file %s for writing\\n"" , filename )"	240:4:6337:6395	1317683	0	True				
ANR	1317770	CallExpression	"printf ( ""Can't open local file %s for writing\\n"" , filename )"		1317683	0					
ANR	1317771	Callee	printf		1317683	0					
ANR	1317772	Identifier	printf		1317683	0					
ANR	1317773	ArgumentList	"""Can't open local file %s for writing\\n"""		1317683	1					
ANR	1317774	Argument	"""Can't open local file %s for writing\\n"""		1317683	0					
ANR	1317775	PrimaryExpression	"""Can't open local file %s for writing\\n"""		1317683	0					
ANR	1317776	Argument	filename		1317683	1					
ANR	1317777	Identifier	filename		1317683	0					
ANR	1317778	ExpressionStatement	exit ( 1 )	241:4:6401:6408	1317683	1	True				
ANR	1317779	CallExpression	exit ( 1 )		1317683	0					
ANR	1317780	Callee	exit		1317683	0					
ANR	1317781	Identifier	exit		1317683	0					
ANR	1317782	ArgumentList	1		1317683	1					
ANR	1317783	Argument	1		1317683	0					
ANR	1317784	PrimaryExpression	1		1317683	0					
ANR	1317785	ExpressionStatement	"result = sock -> get_file ( & filesize , fd , 0 )"	243:3:6418:6457	1317683	5	True				
ANR	1317786	AssignmentExpression	"result = sock -> get_file ( & filesize , fd , 0 )"		1317683	0		=			
ANR	1317787	Identifier	result		1317683	0					
ANR	1317788	CallExpression	"sock -> get_file ( & filesize , fd , 0 )"		1317683	1					
ANR	1317789	Callee	sock -> get_file		1317683	0					
ANR	1317790	PtrMemberAccess	sock -> get_file		1317683	0					
ANR	1317791	Identifier	sock		1317683	0					
ANR	1317792	Identifier	get_file		1317683	1					
ANR	1317793	ArgumentList	& filesize		1317683	1					
ANR	1317794	Argument	& filesize		1317683	0					
ANR	1317795	UnaryOperationExpression	& filesize		1317683	0					
ANR	1317796	UnaryOperator	&		1317683	0					
ANR	1317797	Identifier	filesize		1317683	1					
ANR	1317798	Argument	fd		1317683	1					
ANR	1317799	Identifier	fd		1317683	0					
ANR	1317800	Argument	0		1317683	2					
ANR	1317801	PrimaryExpression	0		1317683	0					
ANR	1317802	ExpressionStatement	close ( fd )	244:3:6462:6471	1317683	6	True				
ANR	1317803	CallExpression	close ( fd )		1317683	0					
ANR	1317804	Callee	close		1317683	0					
ANR	1317805	Identifier	close		1317683	0					
ANR	1317806	ArgumentList	fd		1317683	1					
ANR	1317807	Argument	fd		1317683	0					
ANR	1317808	Identifier	fd		1317683	0					
ANR	1317809	ExpressionStatement	sock -> code ( result )	246:3:6480:6498	1317683	7	True				
ANR	1317810	CallExpression	sock -> code ( result )		1317683	0					
ANR	1317811	Callee	sock -> code		1317683	0					
ANR	1317812	PtrMemberAccess	sock -> code		1317683	0					
ANR	1317813	Identifier	sock		1317683	0					
ANR	1317814	Identifier	code		1317683	1					
ANR	1317815	ArgumentList	result		1317683	1					
ANR	1317816	Argument	result		1317683	0					
ANR	1317817	Identifier	result		1317683	0					
ANR	1317818	ExpressionStatement	free ( filename )	247:3:6503:6517	1317683	8	True				
ANR	1317819	CallExpression	free ( filename )		1317683	0					
ANR	1317820	Callee	free		1317683	0					
ANR	1317821	Identifier	free		1317683	0					
ANR	1317822	ArgumentList	filename		1317683	1					
ANR	1317823	Argument	filename		1317683	0					
ANR	1317824	Identifier	filename		1317683	0					
ANR	1317825	ReturnStatement	return 0 ;	249:1:6523:6531	1317683	6	True				
ANR	1317826	PrimaryExpression	0		1317683	0					
ANR	1317827	ReturnType	int		1317683	1					
ANR	1317828	Identifier	handleHistoryDir		1317683	2					
ANR	1317829	ParameterList	ReliSock * sock		1317683	3					
ANR	1317830	Parameter	ReliSock * sock	226:21:6048:6061	1317683	0	True				
ANR	1317831	ParameterType	ReliSock *		1317683	0					
ANR	1317832	Identifier	sock		1317683	1					
ANR	1317833	CFGEntryNode	ENTRY		1317683		True				
ANR	1317834	CFGExitNode	EXIT		1317683		True				
ANR	1317835	Symbol	result		1317683						
ANR	1317836	Symbol	sock		1317683						
ANR	1317837	Symbol	filename		1317683						
ANR	1317838	Symbol	NULL		1317683						
ANR	1317839	Symbol	safe_open_wrapper_follow		1317683						
ANR	1317840	Symbol	sock -> get_file		1317683						
ANR	1317841	Symbol	O_CREAT		1317683						
ANR	1317842	Symbol	filesize		1317683						
ANR	1317843	Symbol	O_WRONLY		1317683						
ANR	1317844	Symbol	& filesize		1317683						
ANR	1317845	Symbol	fd		1317683						
ANR	1317846	Symbol	* sock		1317683						
