command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3569019	File	data/converged/CVE-2011-4930_htcondor/src_condor_power_power.cpp								
ANR	3569020	ClassDef	<unnamed>	41:0:1197:1703							
ANR	3569021	DeclStmt									
ANR	3569022	Decl							const char	const char * [ ]	errmsgs
ANR	3569023	DeclStmt									
ANR	3569024	Decl							FILE	FILE *	in
ANR	3569025	DeclStmt									
ANR	3569026	Decl							char	char *	fn_in
ANR	3569027	DeclStmt									
ANR	3569028	Decl							char	char *	fn_out
ANR	3569029	DeclStmt									
ANR	3569030	Decl							const char	const char *	name
ANR	3569031	DeclStmt									
ANR	3569032	Decl							char	char *	mac
ANR	3569033	DeclStmt									
ANR	3569034	Decl							char	char *	mask
ANR	3569035	DeclStmt									
ANR	3569036	Decl							int	int	port
ANR	3569037	DeclStmt									
ANR	3569038	Decl							bool	bool	stdio
ANR	3569039	DeclStmt									
ANR	3569040	Decl							ClassAd	ClassAd *	ad
ANR	3569041	DeclStmt									
ANR	3569042	Decl							WakerBase	WakerBase *	waker
ANR	3569043	Function	usage	88:0:2984:3685							
ANR	3569044	FunctionDef	usage ()		3569043	0					
ANR	3569045	CompoundStatement		90:0:3010:3685	3569043	0					
ANR	3569046	ExpressionStatement	"fprintf ( stderr , ""usage: %s [OPTIONS] [INPUT-CLASSAD-FILE] [OUTPUT]\\n"" , name )"	92:1:3014:3098	3569043	0	True				
ANR	3569047	CallExpression	"fprintf ( stderr , ""usage: %s [OPTIONS] [INPUT-CLASSAD-FILE] [OUTPUT]\\n"" , name )"		3569043	0					
ANR	3569048	Callee	fprintf		3569043	0					
ANR	3569049	Identifier	fprintf		3569043	0					
ANR	3569050	ArgumentList	stderr		3569043	1					
ANR	3569051	Argument	stderr		3569043	0					
ANR	3569052	Identifier	stderr		3569043	0					
ANR	3569053	Argument	"""usage: %s [OPTIONS] [INPUT-CLASSAD-FILE] [OUTPUT]\\n"""		3569043	1					
ANR	3569054	PrimaryExpression	"""usage: %s [OPTIONS] [INPUT-CLASSAD-FILE] [OUTPUT]\\n"""		3569043	0					
ANR	3569055	Argument	name		3569043	2					
ANR	3569056	Identifier	name		3569043	0					
ANR	3569057	ExpressionStatement	"fprintf ( stderr , ""%s - %s\\n"" , name , DESCRIPTION )"	94:1:3101:3151	3569043	1	True				
ANR	3569058	CallExpression	"fprintf ( stderr , ""%s - %s\\n"" , name , DESCRIPTION )"		3569043	0					
ANR	3569059	Callee	fprintf		3569043	0					
ANR	3569060	Identifier	fprintf		3569043	0					
ANR	3569061	ArgumentList	stderr		3569043	1					
ANR	3569062	Argument	stderr		3569043	0					
ANR	3569063	Identifier	stderr		3569043	0					
ANR	3569064	Argument	"""%s - %s\\n"""		3569043	1					
ANR	3569065	PrimaryExpression	"""%s - %s\\n"""		3569043	0					
ANR	3569066	Argument	name		3569043	2					
ANR	3569067	Identifier	name		3569043	0					
ANR	3569068	Argument	DESCRIPTION		3569043	3					
ANR	3569069	Identifier	DESCRIPTION		3569043	0					
ANR	3569070	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	95:1:3154:3178	3569043	2	True				
ANR	3569071	CallExpression	"fprintf ( stderr , ""\\n"" )"		3569043	0					
ANR	3569072	Callee	fprintf		3569043	0					
ANR	3569073	Identifier	fprintf		3569043	0					
ANR	3569074	ArgumentList	stderr		3569043	1					
ANR	3569075	Argument	stderr		3569043	0					
ANR	3569076	Identifier	stderr		3569043	0					
ANR	3569077	Argument	"""\\n"""		3569043	1					
ANR	3569078	PrimaryExpression	"""\\n"""		3569043	0					
ANR	3569079	ExpressionStatement	"fprintf ( stderr , ""-h      This message\\n"" )"	96:1:3181:3225	3569043	3	True				
ANR	3569080	CallExpression	"fprintf ( stderr , ""-h      This message\\n"" )"		3569043	0					
ANR	3569081	Callee	fprintf		3569043	0					
ANR	3569082	Identifier	fprintf		3569043	0					
ANR	3569083	ArgumentList	stderr		3569043	1					
ANR	3569084	Argument	stderr		3569043	0					
ANR	3569085	Identifier	stderr		3569043	0					
ANR	3569086	Argument	"""-h      This message\\n"""		3569043	1					
ANR	3569087	PrimaryExpression	"""-h      This message\\n"""		3569043	0					
ANR	3569088	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	97:1:3228:3252	3569043	4	True				
ANR	3569089	CallExpression	"fprintf ( stderr , ""\\n"" )"		3569043	0					
ANR	3569090	Callee	fprintf		3569043	0					
ANR	3569091	Identifier	fprintf		3569043	0					
ANR	3569092	ArgumentList	stderr		3569043	1					
ANR	3569093	Argument	stderr		3569043	0					
ANR	3569094	Identifier	stderr		3569043	0					
ANR	3569095	Argument	"""\\n"""		3569043	1					
ANR	3569096	PrimaryExpression	"""\\n"""		3569043	0					
ANR	3569097	ExpressionStatement	"fprintf ( stderr , ""-d      Enables debugging\\n"" )"	98:1:3255:3304	3569043	5	True				
ANR	3569098	CallExpression	"fprintf ( stderr , ""-d      Enables debugging\\n"" )"		3569043	0					
ANR	3569099	Callee	fprintf		3569043	0					
ANR	3569100	Identifier	fprintf		3569043	0					
ANR	3569101	ArgumentList	stderr		3569043	1					
ANR	3569102	Argument	stderr		3569043	0					
ANR	3569103	Identifier	stderr		3569043	0					
ANR	3569104	Argument	"""-d      Enables debugging\\n"""		3569043	1					
ANR	3569105	PrimaryExpression	"""-d      Enables debugging\\n"""		3569043	0					
ANR	3569106	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	99:1:3307:3331	3569043	6	True				
ANR	3569107	CallExpression	"fprintf ( stderr , ""\\n"" )"		3569043	0					
ANR	3569108	Callee	fprintf		3569043	0					
ANR	3569109	Identifier	fprintf		3569043	0					
ANR	3569110	ArgumentList	stderr		3569043	1					
ANR	3569111	Argument	stderr		3569043	0					
ANR	3569112	Identifier	stderr		3569043	0					
ANR	3569113	Argument	"""\\n"""		3569043	1					
ANR	3569114	PrimaryExpression	"""\\n"""		3569043	0					
ANR	3569115	ExpressionStatement	"fprintf ( stderr , ""-i      Use standard input and output\\n"" )"	100:1:3334:3395	3569043	7	True				
ANR	3569116	CallExpression	"fprintf ( stderr , ""-i      Use standard input and output\\n"" )"		3569043	0					
ANR	3569117	Callee	fprintf		3569043	0					
ANR	3569118	Identifier	fprintf		3569043	0					
ANR	3569119	ArgumentList	stderr		3569043	1					
ANR	3569120	Argument	stderr		3569043	0					
ANR	3569121	Identifier	stderr		3569043	0					
ANR	3569122	Argument	"""-i      Use standard input and output\\n"""		3569043	1					
ANR	3569123	PrimaryExpression	"""-i      Use standard input and output\\n"""		3569043	0					
ANR	3569124	ExpressionStatement	"fprintf ( stderr , ""-m      Hardware address (MAC address)\\n"" )"	101:1:3398:3460	3569043	8	True				
ANR	3569125	CallExpression	"fprintf ( stderr , ""-m      Hardware address (MAC address)\\n"" )"		3569043	0					
ANR	3569126	Callee	fprintf		3569043	0					
ANR	3569127	Identifier	fprintf		3569043	0					
ANR	3569128	ArgumentList	stderr		3569043	1					
ANR	3569129	Argument	stderr		3569043	0					
ANR	3569130	Identifier	stderr		3569043	0					
ANR	3569131	Argument	"""-m      Hardware address (MAC address)\\n"""		3569043	1					
ANR	3569132	PrimaryExpression	"""-m      Hardware address (MAC address)\\n"""		3569043	0					
ANR	3569133	ExpressionStatement	"fprintf ( stderr , ""-p      Port (default: %d)\\n"" , port )"	102:1:3463:3519	3569043	9	True				
ANR	3569134	CallExpression	"fprintf ( stderr , ""-p      Port (default: %d)\\n"" , port )"		3569043	0					
ANR	3569135	Callee	fprintf		3569043	0					
ANR	3569136	Identifier	fprintf		3569043	0					
ANR	3569137	ArgumentList	stderr		3569043	1					
ANR	3569138	Argument	stderr		3569043	0					
ANR	3569139	Identifier	stderr		3569043	0					
ANR	3569140	Argument	"""-p      Port (default: %d)\\n"""		3569043	1					
ANR	3569141	PrimaryExpression	"""-p      Port (default: %d)\\n"""		3569043	0					
ANR	3569142	Argument	port		3569043	2					
ANR	3569143	Identifier	port		3569043	0					
ANR	3569144	ExpressionStatement	"fprintf ( stderr , ""-s      Subnet mask (default: %s)\\n"" , mask )"	103:1:3522:3585	3569043	10	True				
ANR	3569145	CallExpression	"fprintf ( stderr , ""-s      Subnet mask (default: %s)\\n"" , mask )"		3569043	0					
ANR	3569146	Callee	fprintf		3569043	0					
ANR	3569147	Identifier	fprintf		3569043	0					
ANR	3569148	ArgumentList	stderr		3569043	1					
ANR	3569149	Argument	stderr		3569043	0					
ANR	3569150	Identifier	stderr		3569043	0					
ANR	3569151	Argument	"""-s      Subnet mask (default: %s)\\n"""		3569043	1					
ANR	3569152	PrimaryExpression	"""-s      Subnet mask (default: %s)\\n"""		3569043	0					
ANR	3569153	Argument	mask		3569043	2					
ANR	3569154	Identifier	mask		3569043	0					
ANR	3569155	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	104:1:3588:3612	3569043	11	True				
ANR	3569156	CallExpression	"fprintf ( stderr , ""\\n"" )"		3569043	0					
ANR	3569157	Callee	fprintf		3569043	0					
ANR	3569158	Identifier	fprintf		3569043	0					
ANR	3569159	ArgumentList	stderr		3569043	1					
ANR	3569160	Argument	stderr		3569043	0					
ANR	3569161	Identifier	stderr		3569043	0					
ANR	3569162	Argument	"""\\n"""		3569043	1					
ANR	3569163	PrimaryExpression	"""\\n"""		3569043	0					
ANR	3569164	ExpressionStatement	"fprintf ( stderr , ""With -i, read standard input.\\n"" )"	105:1:3615:3668	3569043	12	True				
ANR	3569165	CallExpression	"fprintf ( stderr , ""With -i, read standard input.\\n"" )"		3569043	0					
ANR	3569166	Callee	fprintf		3569043	0					
ANR	3569167	Identifier	fprintf		3569043	0					
ANR	3569168	ArgumentList	stderr		3569043	1					
ANR	3569169	Argument	stderr		3569043	0					
ANR	3569170	Identifier	stderr		3569043	0					
ANR	3569171	Argument	"""With -i, read standard input.\\n"""		3569043	1					
ANR	3569172	PrimaryExpression	"""With -i, read standard input.\\n"""		3569043	0					
ANR	3569173	ExpressionStatement	exit ( 0 )	107:1:3672:3682	3569043	13	True				
ANR	3569174	CallExpression	exit ( 0 )		3569043	0					
ANR	3569175	Callee	exit		3569043	0					
ANR	3569176	Identifier	exit		3569043	0					
ANR	3569177	ArgumentList	0		3569043	1					
ANR	3569178	Argument	0		3569043	0					
ANR	3569179	PrimaryExpression	0		3569043	0					
ANR	3569180	ReturnType	static void		3569043	1					
ANR	3569181	Identifier	usage		3569043	2					
ANR	3569182	ParameterList			3569043	3					
ANR	3569183	CFGEntryNode	ENTRY		3569043		True				
ANR	3569184	CFGExitNode	EXIT		3569043		True				
ANR	3569185	Symbol	DESCRIPTION		3569043						
ANR	3569186	Symbol	port		3569043						
ANR	3569187	Symbol	name		3569043						
ANR	3569188	Symbol	stderr		3569043						
ANR	3569189	Symbol	mask		3569043						
ANR	3569190	Function	enable_debug	111:0:3688:3825							
ANR	3569191	FunctionDef	enable_debug ()		3569190	0					
ANR	3569192	CompoundStatement		113:0:3721:3825	3569190	0					
ANR	3569193	IdentifierDeclStatement	param_functions * p_funcs = get_param_functions ( ) ;	114:1:3724:3772	3569190	0	True				
ANR	3569194	IdentifierDecl	* p_funcs = get_param_functions ( )		3569190	0					
ANR	3569195	IdentifierDeclType	param_functions *		3569190	0					
ANR	3569196	Identifier	p_funcs		3569190	1					
ANR	3569197	AssignmentExpression	* p_funcs = get_param_functions ( )		3569190	2		=			
ANR	3569198	Identifier	p_funcs		3569190	0					
ANR	3569199	CallExpression	get_param_functions ( )		3569190	1					
ANR	3569200	Callee	get_param_functions		3569190	0					
ANR	3569201	Identifier	get_param_functions		3569190	0					
ANR	3569202	ArgumentList			3569190	1					
ANR	3569203	ExpressionStatement	Termlog = 1	115:1:3775:3786	3569190	1	True				
ANR	3569204	AssignmentExpression	Termlog = 1		3569190	0		=			
ANR	3569205	Identifier	Termlog		3569190	0					
ANR	3569206	PrimaryExpression	1		3569190	1					
ANR	3569207	ExpressionStatement	"dprintf_config ( ""TOOL"" , p_funcs )"	116:1:3789:3823	3569190	2	True				
ANR	3569208	CallExpression	"dprintf_config ( ""TOOL"" , p_funcs )"		3569190	0					
ANR	3569209	Callee	dprintf_config		3569190	0					
ANR	3569210	Identifier	dprintf_config		3569190	0					
ANR	3569211	ArgumentList	"""TOOL"""		3569190	1					
ANR	3569212	Argument	"""TOOL"""		3569190	0					
ANR	3569213	PrimaryExpression	"""TOOL"""		3569190	0					
ANR	3569214	Argument	p_funcs		3569190	1					
ANR	3569215	Identifier	p_funcs		3569190	0					
ANR	3569216	ReturnType	static void		3569190	1					
ANR	3569217	Identifier	enable_debug		3569190	2					
ANR	3569218	ParameterList			3569190	3					
ANR	3569219	CFGEntryNode	ENTRY		3569190		True				
ANR	3569220	CFGExitNode	EXIT		3569190		True				
ANR	3569221	Symbol	get_param_functions		3569190						
ANR	3569222	Symbol	Termlog		3569190						
ANR	3569223	Symbol	p_funcs		3569190						
ANR	3569224	Function	error	119:0:3828:4352							
ANR	3569225	FunctionDef	error (int code)		3569224	0					
ANR	3569226	CompoundStatement		121:0:3863:4352	3569224	0					
ANR	3569227	IdentifierDeclStatement	va_list args ;	122:1:3866:3878	3569224	0	True				
ANR	3569228	IdentifierDecl	args		3569224	0					
ANR	3569229	IdentifierDeclType	va_list		3569224	0					
ANR	3569230	Identifier	args		3569224	1					
ANR	3569231	IdentifierDeclStatement	const char * msg ;	123:1:3881:3896	3569224	1	True				
ANR	3569232	IdentifierDecl	* msg		3569224	0					
ANR	3569233	IdentifierDeclType	const char *		3569224	0					
ANR	3569234	Identifier	msg		3569224	1					
ANR	3569235	ExpressionStatement	assert ( name )	125:1:3900:3915	3569224	2	True				
ANR	3569236	CallExpression	assert ( name )		3569224	0					
ANR	3569237	Callee	assert		3569224	0					
ANR	3569238	Identifier	assert		3569224	0					
ANR	3569239	ArgumentList	name		3569224	1					
ANR	3569240	Argument	name		3569224	0					
ANR	3569241	Identifier	name		3569224	0					
ANR	3569242	IfStatement	if ( code < E_UNKNOWN )		3569224	3					
ANR	3569243	Condition	code < E_UNKNOWN	127:6:3924:3939	3569224	0	True				
ANR	3569244	RelationalExpression	code < E_UNKNOWN		3569224	0		<			
ANR	3569245	Identifier	code		3569224	0					
ANR	3569246	Identifier	E_UNKNOWN		3569224	1					
ANR	3569247	CompoundStatement		7:25:79:79	3569224	1					
ANR	3569248	ExpressionStatement	code = E_UNKNOWN	128:2:3947:3963	3569224	0	True				
ANR	3569249	AssignmentExpression	code = E_UNKNOWN		3569224	0		=			
ANR	3569250	Identifier	code		3569224	0					
ANR	3569251	Identifier	E_UNKNOWN		3569224	1					
ANR	3569252	IfStatement	if ( code < 0 )		3569224	4					
ANR	3569253	Condition	code < 0	131:6:3975:3982	3569224	0	True				
ANR	3569254	RelationalExpression	code < 0		3569224	0		<			
ANR	3569255	Identifier	code		3569224	0					
ANR	3569256	PrimaryExpression	0		3569224	1					
ANR	3569257	CompoundStatement		11:17:122:122	3569224	1					
ANR	3569258	ExpressionStatement	msg = errmsgs [ - code ]	133:2:3991:4011	3569224	0	True				
ANR	3569259	AssignmentExpression	msg = errmsgs [ - code ]		3569224	0		=			
ANR	3569260	Identifier	msg		3569224	0					
ANR	3569261	ArrayIndexing	errmsgs [ - code ]		3569224	1					
ANR	3569262	Identifier	errmsgs		3569224	0					
ANR	3569263	UnaryOperationExpression	- code		3569224	1					
ANR	3569264	UnaryOperator	-		3569224	0					
ANR	3569265	Identifier	code		3569224	1					
ANR	3569266	IfStatement	if ( ! msg )		3569224	1					
ANR	3569267	Condition	! msg	135:7:4021:4024	3569224	0	True				
ANR	3569268	UnaryOperationExpression	! msg		3569224	0					
ANR	3569269	UnaryOperator	!		3569224	0					
ANR	3569270	Identifier	msg		3569224	1					
ANR	3569271	CompoundStatement		15:14:164:164	3569224	1					
ANR	3569272	ExpressionStatement	msg = errmsgs [ - E_UNKNOWN ]	136:3:4033:4058	3569224	0	True				
ANR	3569273	AssignmentExpression	msg = errmsgs [ - E_UNKNOWN ]		3569224	0		=			
ANR	3569274	Identifier	msg		3569224	0					
ANR	3569275	ArrayIndexing	errmsgs [ - E_UNKNOWN ]		3569224	1					
ANR	3569276	Identifier	errmsgs		3569224	0					
ANR	3569277	UnaryOperationExpression	- E_UNKNOWN		3569224	1					
ANR	3569278	UnaryOperator	-		3569224	0					
ANR	3569279	Identifier	E_UNKNOWN		3569224	1					
ANR	3569280	ExpressionStatement	"fprintf ( stderr , ""%s: "" , name )"	139:2:4067:4099	3569224	2	True				
ANR	3569281	CallExpression	"fprintf ( stderr , ""%s: "" , name )"		3569224	0					
ANR	3569282	Callee	fprintf		3569224	0					
ANR	3569283	Identifier	fprintf		3569224	0					
ANR	3569284	ArgumentList	stderr		3569224	1					
ANR	3569285	Argument	stderr		3569224	0					
ANR	3569286	Identifier	stderr		3569224	0					
ANR	3569287	Argument	"""%s: """		3569224	1					
ANR	3569288	PrimaryExpression	"""%s: """		3569224	0					
ANR	3569289	Argument	name		3569224	2					
ANR	3569290	Identifier	name		3569224	0					
ANR	3569291	ExpressionStatement	"va_start ( args , code )"	140:2:4103:4126	3569224	3	True				
ANR	3569292	CallExpression	"va_start ( args , code )"		3569224	0					
ANR	3569293	Callee	va_start		3569224	0					
ANR	3569294	Identifier	va_start		3569224	0					
ANR	3569295	ArgumentList	args		3569224	1					
ANR	3569296	Argument	args		3569224	0					
ANR	3569297	Identifier	args		3569224	0					
ANR	3569298	Argument	code		3569224	1					
ANR	3569299	Identifier	code		3569224	0					
ANR	3569300	ExpressionStatement	"vfprintf ( stderr , msg , args )"	141:2:4130:4160	3569224	4	True				
ANR	3569301	CallExpression	"vfprintf ( stderr , msg , args )"		3569224	0					
ANR	3569302	Callee	vfprintf		3569224	0					
ANR	3569303	Identifier	vfprintf		3569224	0					
ANR	3569304	ArgumentList	stderr		3569224	1					
ANR	3569305	Argument	stderr		3569224	0					
ANR	3569306	Identifier	stderr		3569224	0					
ANR	3569307	Argument	msg		3569224	1					
ANR	3569308	Identifier	msg		3569224	0					
ANR	3569309	Argument	args		3569224	2					
ANR	3569310	Identifier	args		3569224	0					
ANR	3569311	ExpressionStatement	va_end ( args )	142:2:4164:4179	3569224	5	True				
ANR	3569312	CallExpression	va_end ( args )		3569224	0					
ANR	3569313	Callee	va_end		3569224	0					
ANR	3569314	Identifier	va_end		3569224	0					
ANR	3569315	ArgumentList	args		3569224	1					
ANR	3569316	Argument	args		3569224	0					
ANR	3569317	Identifier	args		3569224	0					
ANR	3569318	IfStatement	if ( in && ( in != stdin ) )		3569224	5					
ANR	3569319	Condition	in && ( in != stdin )	146:6:4192:4213	3569224	0	True				
ANR	3569320	AndExpression	in && ( in != stdin )		3569224	0		&&			
ANR	3569321	Identifier	in		3569224	0					
ANR	3569322	EqualityExpression	in != stdin		3569224	1		!=			
ANR	3569323	Identifier	in		3569224	0					
ANR	3569324	Identifier	stdin		3569224	1					
ANR	3569325	CompoundStatement		26:31:353:353	3569224	1					
ANR	3569326	ExpressionStatement	fclose ( in )	147:2:4221:4234	3569224	0	True				
ANR	3569327	CallExpression	fclose ( in )		3569224	0					
ANR	3569328	Callee	fclose		3569224	0					
ANR	3569329	Identifier	fclose		3569224	0					
ANR	3569330	ArgumentList	in		3569224	1					
ANR	3569331	Argument	in		3569224	0					
ANR	3569332	Identifier	in		3569224	0					
ANR	3569333	IfStatement	if ( waker )		3569224	6					
ANR	3569334	Condition	waker	150:6:4246:4250	3569224	0	True				
ANR	3569335	Identifier	waker		3569224	0					
ANR	3569336	CompoundStatement		30:14:390:390	3569224	1					
ANR	3569337	Statement	delete	151:2:4258:4263	3569224	0	True				
ANR	3569338	ExpressionStatement	waker	151:9:4265:4270	3569224	1	True				
ANR	3569339	Identifier	waker		3569224	0					
ANR	3569340	ExpressionStatement	waker = NULL	152:2:4274:4286	3569224	2	True				
ANR	3569341	AssignmentExpression	waker = NULL		3569224	0		=			
ANR	3569342	Identifier	waker		3569224	0					
ANR	3569343	Identifier	NULL		3569224	1					
ANR	3569344	IfStatement	if ( ad )		3569224	7					
ANR	3569345	Condition	ad	155:6:4298:4299	3569224	0	True				
ANR	3569346	Identifier	ad		3569224	0					
ANR	3569347	CompoundStatement		35:11:439:439	3569224	1					
ANR	3569348	Statement	delete	156:2:4307:4312	3569224	0	True				
ANR	3569349	ExpressionStatement	ad	156:9:4314:4316	3569224	1	True				
ANR	3569350	Identifier	ad		3569224	0					
ANR	3569351	ExpressionStatement	ad = NULL	157:2:4320:4329	3569224	2	True				
ANR	3569352	AssignmentExpression	ad = NULL		3569224	0		=			
ANR	3569353	Identifier	ad		3569224	0					
ANR	3569354	Identifier	NULL		3569224	1					
ANR	3569355	ExpressionStatement	exit ( code )	160:1:4336:4349	3569224	8	True				
ANR	3569356	CallExpression	exit ( code )		3569224	0					
ANR	3569357	Callee	exit		3569224	0					
ANR	3569358	Identifier	exit		3569224	0					
ANR	3569359	ArgumentList	code		3569224	1					
ANR	3569360	Argument	code		3569224	0					
ANR	3569361	Identifier	code		3569224	0					
ANR	3569362	ReturnType	static void		3569224	1					
ANR	3569363	Identifier	error		3569224	2					
ANR	3569364	ParameterList	int code		3569224	3					
ANR	3569365	Parameter	int code	120:7:3847:3854	3569224	0	True				
ANR	3569366	ParameterType	int		3569224	0					
ANR	3569367	Identifier	code		3569224	1					
ANR	3569368	CFGEntryNode	ENTRY		3569224		True				
ANR	3569369	CFGExitNode	EXIT		3569224		True				
ANR	3569370	Symbol	msg		3569224						
ANR	3569371	Symbol	errmsgs		3569224						
ANR	3569372	Symbol	E_UNKNOWN		3569224						
ANR	3569373	Symbol	stdin		3569224						
ANR	3569374	Symbol	code		3569224						
ANR	3569375	Symbol	NULL		3569224						
ANR	3569376	Symbol	ad		3569224						
ANR	3569377	Symbol	in		3569224						
ANR	3569378	Symbol	stderr		3569224						
ANR	3569379	Symbol	args		3569224						
ANR	3569380	Symbol	waker		3569224						
ANR	3569381	Symbol	* errmsgs		3569224						
ANR	3569382	Symbol	name		3569224						
ANR	3569383	Symbol	* E_UNKNOWN		3569224						
ANR	3569384	Symbol	* code		3569224						
ANR	3569385	Function	parse_command_line	164:0:4355:5455							
ANR	3569386	FunctionDef	"parse_command_line (int argc , char * argv [ ])"		3569385	0					
ANR	3569387	CompoundStatement		166:0:4412:5455	3569385	0					
ANR	3569388	IdentifierDeclStatement	"int i , j = 0 ;"	168:1:4416:4429	3569385	0	True				
ANR	3569389	IdentifierDecl	i		3569385	0					
ANR	3569390	IdentifierDeclType	int		3569385	0					
ANR	3569391	Identifier	i		3569385	1					
ANR	3569392	IdentifierDecl	j = 0		3569385	1					
ANR	3569393	IdentifierDeclType	int		3569385	0					
ANR	3569394	Identifier	j		3569385	1					
ANR	3569395	AssignmentExpression	j = 0		3569385	2		=			
ANR	3569396	Identifier	j		3569385	0					
ANR	3569397	PrimaryExpression	0		3569385	1					
ANR	3569398	IdentifierDeclStatement	char * s ;	169:1:4432:4439	3569385	1	True				
ANR	3569399	IdentifierDecl	* s		3569385	0					
ANR	3569400	IdentifierDeclType	char *		3569385	0					
ANR	3569401	Identifier	s		3569385	1					
ANR	3569402	IdentifierDeclStatement	char * * argument = NULL ;	170:1:4476:4498	3569385	2	True				
ANR	3569403	IdentifierDecl	* * argument = NULL		3569385	0					
ANR	3569404	IdentifierDeclType	char * *		3569385	0					
ANR	3569405	Identifier	argument		3569385	1					
ANR	3569406	AssignmentExpression	* * argument = NULL		3569385	2		=			
ANR	3569407	Identifier	NULL		3569385	0					
ANR	3569408	Identifier	NULL		3569385	1					
ANR	3569409	ForStatement	for ( i = 1 ; i < argc ; i ++ )		3569385	3					
ANR	3569410	ForInit	i = 1 ;	172:7:4530:4535	3569385	0	True				
ANR	3569411	AssignmentExpression	i = 1		3569385	0		=			
ANR	3569412	Identifier	i		3569385	0					
ANR	3569413	PrimaryExpression	1		3569385	1					
ANR	3569414	Condition	i < argc	172:14:4537:4544	3569385	1	True				
ANR	3569415	RelationalExpression	i < argc		3569385	0		<			
ANR	3569416	Identifier	i		3569385	0					
ANR	3569417	Identifier	argc		3569385	1					
ANR	3569418	PostIncDecOperationExpression	i ++	172:24:4547:4549	3569385	2	True				
ANR	3569419	Identifier	i		3569385	0					
ANR	3569420	IncDec	++		3569385	1					
ANR	3569421	CompoundStatement		7:30:140:140	3569385	3					
ANR	3569422	ExpressionStatement	s = argv [ i ]	174:2:4558:4569	3569385	0	True				
ANR	3569423	AssignmentExpression	s = argv [ i ]		3569385	0		=			
ANR	3569424	Identifier	s		3569385	0					
ANR	3569425	ArrayIndexing	argv [ i ]		3569385	1					
ANR	3569426	Identifier	argv		3569385	0					
ANR	3569427	Identifier	i		3569385	1					
ANR	3569428	IfStatement	if ( argument )		3569385	1					
ANR	3569429	Condition	argument	176:7:4579:4586	3569385	0	True				
ANR	3569430	Identifier	argument		3569385	0					
ANR	3569431	CompoundStatement		11:18:177:177	3569385	1					
ANR	3569432	ExpressionStatement	* argument = s	177:3:4595:4608	3569385	0	True				
ANR	3569433	AssignmentExpression	* argument = s		3569385	0		=			
ANR	3569434	UnaryOperationExpression	* argument		3569385	0					
ANR	3569435	UnaryOperator	*		3569385	0					
ANR	3569436	Identifier	argument		3569385	1					
ANR	3569437	Identifier	s		3569385	1					
ANR	3569438	ExpressionStatement	argument = NULL	178:3:4613:4628	3569385	1	True				
ANR	3569439	AssignmentExpression	argument = NULL		3569385	0		=			
ANR	3569440	Identifier	argument		3569385	0					
ANR	3569441	Identifier	NULL		3569385	1					
ANR	3569442	ContinueStatement	continue ;	179:3:4633:4641	3569385	2	True				
ANR	3569443	IfStatement	if ( ( '-' == * s ) && * ++ s )		3569385	2					
ANR	3569444	Condition	( '-' == * s ) && * ++ s	182:7:4655:4675	3569385	0	True				
ANR	3569445	AndExpression	( '-' == * s ) && * ++ s		3569385	0		&&			
ANR	3569446	EqualityExpression	'-' == * s		3569385	0		==			
ANR	3569447	PrimaryExpression	'-'		3569385	0					
ANR	3569448	UnaryOperationExpression	* s		3569385	1					
ANR	3569449	UnaryOperator	*		3569385	0					
ANR	3569450	Identifier	s		3569385	1					
ANR	3569451	UnaryOperationExpression	* ++ s		3569385	1					
ANR	3569452	UnaryOperator	*		3569385	0					
ANR	3569453	UnaryExpression	++ s		3569385	1					
ANR	3569454	IncDec	++		3569385	0					
ANR	3569455	Identifier	s		3569385	1					
ANR	3569456	CompoundStatement		17:31:266:266	3569385	1					
ANR	3569457	WhileStatement	while ( * s )		3569385	0					
ANR	3569458	Condition	* s	185:11:4729:4730	3569385	0	True				
ANR	3569459	UnaryOperationExpression	* s		3569385	0					
ANR	3569460	UnaryOperator	*		3569385	0					
ANR	3569461	Identifier	s		3569385	1					
ANR	3569462	CompoundStatement		20:16:321:321	3569385	1					
ANR	3569463	SwitchStatement	switch ( * s ++ )		3569385	0					
ANR	3569464	Condition	* s ++	188:13:4786:4789	3569385	0	True				
ANR	3569465	UnaryOperationExpression	* s ++		3569385	0					
ANR	3569466	UnaryOperator	*		3569385	0					
ANR	3569467	PostIncDecOperationExpression	s ++		3569385	1					
ANR	3569468	Identifier	s		3569385	0					
ANR	3569469	IncDec	++		3569385	1					
ANR	3569470	CompoundStatement		23:20:380:380	3569385	1					
ANR	3569471	Label	case 'd' :	189:5:4800:4808	3569385	0	True				
ANR	3569472	ExpressionStatement	enable_debug ( )	189:15:4810:4825	3569385	1	True				
ANR	3569473	CallExpression	enable_debug ( )		3569385	0					
ANR	3569474	Callee	enable_debug		3569385	0					
ANR	3569475	Identifier	enable_debug		3569385	0					
ANR	3569476	ArgumentList			3569385	1					
ANR	3569477	BreakStatement	break ;	189:34:4829:4834	3569385	2	True				
ANR	3569478	Label	case 'h' :	190:5:4841:4849	3569385	3	True				
ANR	3569479	ExpressionStatement	usage ( )	190:15:4851:4859	3569385	4	True				
ANR	3569480	CallExpression	usage ( )		3569385	0					
ANR	3569481	Callee	usage		3569385	0					
ANR	3569482	Identifier	usage		3569385	0					
ANR	3569483	ArgumentList			3569385	1					
ANR	3569484	BreakStatement	break ;	190:29:4865:4870	3569385	5	True				
ANR	3569485	Label	case 'i' :	191:5:4877:4885	3569385	6	True				
ANR	3569486	ExpressionStatement	stdio = true	191:15:4887:4899	3569385	7	True				
ANR	3569487	AssignmentExpression	stdio = true		3569385	0		=			
ANR	3569488	Identifier	stdio		3569385	0					
ANR	3569489	Identifier	true		3569385	1					
ANR	3569490	BreakStatement	break ;	191:32:4904:4909	3569385	8	True				
ANR	3569491	Label	case 'm' :	192:5:4916:4924	3569385	9	True				
ANR	3569492	ExpressionStatement	argument = & mac	192:15:4926:4941	3569385	10	True				
ANR	3569493	AssignmentExpression	argument = & mac		3569385	0		=			
ANR	3569494	Identifier	argument		3569385	0					
ANR	3569495	UnaryOperationExpression	& mac		3569385	1					
ANR	3569496	UnaryOperator	&		3569385	0					
ANR	3569497	Identifier	mac		3569385	1					
ANR	3569498	BreakStatement	break ;	192:34:4945:4950	3569385	11	True				
ANR	3569499	Label	case 'p' :	193:5:4957:4965	3569385	12	True				
ANR	3569500	ExpressionStatement	"port = ( int ) strtol ( s , & s , port )"	193:15:4967:5002	3569385	13	True				
ANR	3569501	AssignmentExpression	"port = ( int ) strtol ( s , & s , port )"		3569385	0		=			
ANR	3569502	Identifier	port		3569385	0					
ANR	3569503	CastExpression	"( int ) strtol ( s , & s , port )"		3569385	1					
ANR	3569504	CastTarget	int		3569385	0					
ANR	3569505	CallExpression	"strtol ( s , & s , port )"		3569385	1					
ANR	3569506	Callee	strtol		3569385	0					
ANR	3569507	Identifier	strtol		3569385	0					
ANR	3569508	ArgumentList	s		3569385	1					
ANR	3569509	Argument	s		3569385	0					
ANR	3569510	Identifier	s		3569385	0					
ANR	3569511	Argument	& s		3569385	1					
ANR	3569512	UnaryOperationExpression	& s		3569385	0					
ANR	3569513	UnaryOperator	&		3569385	0					
ANR	3569514	Identifier	s		3569385	1					
ANR	3569515	Argument	port		3569385	2					
ANR	3569516	Identifier	port		3569385	0					
ANR	3569517	BreakStatement	break ;	193:52:5004:5009	3569385	14	True				
ANR	3569518	Label	case 's' :	194:5:5016:5024	3569385	15	True				
ANR	3569519	ExpressionStatement	argument = & mask	194:15:5026:5042	3569385	16	True				
ANR	3569520	AssignmentExpression	argument = & mask		3569385	0		=			
ANR	3569521	Identifier	argument		3569385	0					
ANR	3569522	UnaryOperationExpression	& mask		3569385	1					
ANR	3569523	UnaryOperator	&		3569385	0					
ANR	3569524	Identifier	mask		3569385	1					
ANR	3569525	BreakStatement	break ;	194:35:5046:5051	3569385	17	True				
ANR	3569526	Label	default :	195:5:5058:5066	3569385	18	True				
ANR	3569527	Identifier	default		3569385	0					
ANR	3569528	ExpressionStatement	"error ( E_OPTION , * -- s )"	195:15:5068:5092	3569385	19	True				
ANR	3569529	CallExpression	"error ( E_OPTION , * -- s )"		3569385	0					
ANR	3569530	Callee	error		3569385	0					
ANR	3569531	Identifier	error		3569385	0					
ANR	3569532	ArgumentList	E_OPTION		3569385	1					
ANR	3569533	Argument	E_OPTION		3569385	0					
ANR	3569534	Identifier	E_OPTION		3569385	0					
ANR	3569535	Argument	* -- s		3569385	1					
ANR	3569536	UnaryOperationExpression	* -- s		3569385	0					
ANR	3569537	UnaryOperator	*		3569385	0					
ANR	3569538	UnaryExpression	-- s		3569385	1					
ANR	3569539	IncDec	--		3569385	0					
ANR	3569540	Identifier	s		3569385	1					
ANR	3569541	BreakStatement	break ;	195:41:5094:5099	3569385	20	True				
ANR	3569542	IfStatement	if ( argument && * s )		3569385	1					
ANR	3569543	Condition	argument && * s	199:9:5176:5189	3569385	0	True				
ANR	3569544	AndExpression	argument && * s		3569385	0		&&			
ANR	3569545	Identifier	argument		3569385	0					
ANR	3569546	UnaryOperationExpression	* s		3569385	1					
ANR	3569547	UnaryOperator	*		3569385	0					
ANR	3569548	Identifier	s		3569385	1					
ANR	3569549	CompoundStatement		34:26:780:780	3569385	1					
ANR	3569550	ExpressionStatement	* argument = s	200:5:5200:5213	3569385	0	True				
ANR	3569551	AssignmentExpression	* argument = s		3569385	0		=			
ANR	3569552	UnaryOperationExpression	* argument		3569385	0					
ANR	3569553	UnaryOperator	*		3569385	0					
ANR	3569554	Identifier	argument		3569385	1					
ANR	3569555	Identifier	s		3569385	1					
ANR	3569556	ExpressionStatement	argument = NULL	201:5:5220:5235	3569385	1	True				
ANR	3569557	AssignmentExpression	argument = NULL		3569385	0		=			
ANR	3569558	Identifier	argument		3569385	0					
ANR	3569559	Identifier	NULL		3569385	1					
ANR	3569560	BreakStatement	break ;	202:5:5242:5247	3569385	2	True				
ANR	3569561	ElseStatement	else		3569385	0					
ANR	3569562	CompoundStatement		42:9:858:858	3569385	0					
ANR	3569563	SwitchStatement	switch ( j ++ )		3569385	0					
ANR	3569564	Condition	j ++	210:12:5324:5326	3569385	0	True				
ANR	3569565	PostIncDecOperationExpression	j ++		3569385	0					
ANR	3569566	Identifier	j		3569385	0					
ANR	3569567	IncDec	++		3569385	1					
ANR	3569568	CompoundStatement		45:18:917:917	3569385	1					
ANR	3569569	Label	case 0 :	211:4:5336:5343	3569385	0	True				
ANR	3569570	ExpressionStatement	fn_in = s	211:13:5345:5355	3569385	1	True				
ANR	3569571	AssignmentExpression	fn_in = s		3569385	0		=			
ANR	3569572	Identifier	fn_in		3569385	0					
ANR	3569573	Identifier	s		3569385	1					
ANR	3569574	BreakStatement	break ;	211:27:5359:5364	3569385	2	True				
ANR	3569575	Label	case 1 :	212:4:5370:5377	3569385	3	True				
ANR	3569576	ExpressionStatement	fn_out = s	212:13:5379:5389	3569385	4	True				
ANR	3569577	AssignmentExpression	fn_out = s		3569385	0		=			
ANR	3569578	Identifier	fn_out		3569385	0					
ANR	3569579	Identifier	s		3569385	1					
ANR	3569580	BreakStatement	break ;	212:27:5393:5398	3569385	5	True				
ANR	3569581	Label	default :	213:4:5404:5411	3569385	6	True				
ANR	3569582	Identifier	default		3569385	0					
ANR	3569583	ExpressionStatement	error ( E_ARGCNT )	213:13:5413:5431	3569385	7	True				
ANR	3569584	CallExpression	error ( E_ARGCNT )		3569385	0					
ANR	3569585	Callee	error		3569385	0					
ANR	3569586	Identifier	error		3569385	0					
ANR	3569587	ArgumentList	E_ARGCNT		3569385	1					
ANR	3569588	Argument	E_ARGCNT		3569385	0					
ANR	3569589	Identifier	E_ARGCNT		3569385	0					
ANR	3569590	BreakStatement	break ;	213:33:5433:5438	3569385	8	True				
ANR	3569591	ReturnType	static void		3569385	1					
ANR	3569592	Identifier	parse_command_line		3569385	2					
ANR	3569593	ParameterList	"int argc , char * argv [ ]"		3569385	3					
ANR	3569594	Parameter	int argc	165:20:4387:4394	3569385	0	True				
ANR	3569595	ParameterType	int		3569385	0					
ANR	3569596	Identifier	argc		3569385	1					
ANR	3569597	Parameter	char * argv [ ]	165:30:4397:4408	3569385	1	True				
ANR	3569598	ParameterType	char * [ ]		3569385	0					
ANR	3569599	Identifier	argv		3569385	1					
ANR	3569600	CFGEntryNode	ENTRY		3569385		True				
ANR	3569601	CFGExitNode	EXIT		3569385		True				
ANR	3569602	Symbol	* s ++		3569385						
ANR	3569603	Symbol	argument		3569385						
ANR	3569604	Symbol	stdio		3569385						
ANR	3569605	Symbol	* argv		3569385						
ANR	3569606	Symbol	argv		3569385						
ANR	3569607	Symbol	E_OPTION		3569385						
ANR	3569608	Symbol	strtol		3569385						
ANR	3569609	Symbol	fn_out		3569385						
ANR	3569610	Symbol	argc		3569385						
ANR	3569611	Symbol	NULL		3569385						
ANR	3569612	Symbol	& mask		3569385						
ANR	3569613	Symbol	i		3569385						
ANR	3569614	Symbol	j		3569385						
ANR	3569615	Symbol	* argument		3569385						
ANR	3569616	Symbol	* -- s		3569385						
ANR	3569617	Symbol	* ++ s		3569385						
ANR	3569618	Symbol	fn_in		3569385						
ANR	3569619	Symbol	& mac		3569385						
ANR	3569620	Symbol	s		3569385						
ANR	3569621	Symbol	* i		3569385						
ANR	3569622	Symbol	port		3569385						
ANR	3569623	Symbol	true		3569385						
ANR	3569624	Symbol	& s		3569385						
ANR	3569625	Symbol	* s		3569385						
ANR	3569626	Symbol	E_ARGCNT		3569385						
ANR	3569627	Function	serialize_input	222:0:5458:6725							
ANR	3569628	FunctionDef	serialize_input ()		3569627	0					
ANR	3569629	CompoundStatement		224:0:5494:6725	3569627	0					
ANR	3569630	IdentifierDeclStatement	char sinful [ 16 + 10 ] ;	226:1:5498:5518	3569627	0	True				
ANR	3569631	IdentifierDecl	sinful [ 16 + 10 ]		3569627	0					
ANR	3569632	IdentifierDeclType	char [ 16 + 10 ]		3569627	0					
ANR	3569633	Identifier	sinful		3569627	1					
ANR	3569634	AdditiveExpression	16 + 10		3569627	2		+			
ANR	3569635	PrimaryExpression	16		3569627	0					
ANR	3569636	PrimaryExpression	10		3569627	1					
ANR	3569637	IdentifierDeclStatement	"int found_eof = 0 , found_error = 0 , empty = 0 ;"	227:1:5521:5576	3569627	1	True				
ANR	3569638	IdentifierDecl	found_eof = 0		3569627	0					
ANR	3569639	IdentifierDeclType	int		3569627	0					
ANR	3569640	Identifier	found_eof		3569627	1					
ANR	3569641	AssignmentExpression	found_eof = 0		3569627	2		=			
ANR	3569642	Identifier	found_eof		3569627	0					
ANR	3569643	PrimaryExpression	0		3569627	1					
ANR	3569644	IdentifierDecl	found_error = 0		3569627	1					
ANR	3569645	IdentifierDeclType	int		3569627	0					
ANR	3569646	Identifier	found_error		3569627	1					
ANR	3569647	AssignmentExpression	found_error = 0		3569627	2		=			
ANR	3569648	Identifier	found_error		3569627	0					
ANR	3569649	PrimaryExpression	0		3569627	1					
ANR	3569650	IdentifierDecl	empty = 0		3569627	2					
ANR	3569651	IdentifierDeclType	int		3569627	0					
ANR	3569652	Identifier	empty		3569627	1					
ANR	3569653	AssignmentExpression	empty = 0		3569627	2		=			
ANR	3569654	Identifier	empty		3569627	0					
ANR	3569655	PrimaryExpression	0		3569627	1					
ANR	3569656	IfStatement	if ( ! stdio )		3569627	2					
ANR	3569657	Condition	! stdio	233:6:5682:5687	3569627	0	True				
ANR	3569658	UnaryOperationExpression	! stdio		3569627	0					
ANR	3569659	UnaryOperator	!		3569627	0					
ANR	3569660	Identifier	stdio		3569627	1					
ANR	3569661	CompoundStatement		10:15:196:196	3569627	1					
ANR	3569662	ExpressionStatement	"sprintf ( sinful , ""<%s:1234>"" , my_ip_string ( ) )"	236:2:5754:5802	3569627	0	True				
ANR	3569663	CallExpression	"sprintf ( sinful , ""<%s:1234>"" , my_ip_string ( ) )"		3569627	0					
ANR	3569664	Callee	sprintf		3569627	0					
ANR	3569665	Identifier	sprintf		3569627	0					
ANR	3569666	ArgumentList	sinful		3569627	1					
ANR	3569667	Argument	sinful		3569627	0					
ANR	3569668	Identifier	sinful		3569627	0					
ANR	3569669	Argument	"""<%s:1234>"""		3569627	1					
ANR	3569670	PrimaryExpression	"""<%s:1234>"""		3569627	0					
ANR	3569671	Argument	my_ip_string ( )		3569627	2					
ANR	3569672	CallExpression	my_ip_string ( )		3569627	0					
ANR	3569673	Callee	my_ip_string		3569627	0					
ANR	3569674	Identifier	my_ip_string		3569627	0					
ANR	3569675	ArgumentList			3569627	1					
ANR	3569676	ExpressionStatement	ad = new ClassAd ( )	241:2:5948:5967	3569627	1	True				
ANR	3569677	AssignmentExpression	ad = new ClassAd ( )		3569627	0		=			
ANR	3569678	Identifier	ad		3569627	0					
ANR	3569679	UnaryExpression	new ClassAd ( )		3569627	1					
ANR	3569680	ExpressionStatement	ad -> SetMyTypeName ( STARTD_ADTYPE )	242:2:5971:6006	3569627	2	True				
ANR	3569681	CallExpression	ad -> SetMyTypeName ( STARTD_ADTYPE )		3569627	0					
ANR	3569682	Callee	ad -> SetMyTypeName		3569627	0					
ANR	3569683	PtrMemberAccess	ad -> SetMyTypeName		3569627	0					
ANR	3569684	Identifier	ad		3569627	0					
ANR	3569685	Identifier	SetMyTypeName		3569627	1					
ANR	3569686	ArgumentList	STARTD_ADTYPE		3569627	1					
ANR	3569687	Argument	STARTD_ADTYPE		3569627	0					
ANR	3569688	Identifier	STARTD_ADTYPE		3569627	0					
ANR	3569689	ExpressionStatement	ad -> SetTargetTypeName ( JOB_ADTYPE )	243:2:6010:6046	3569627	3	True				
ANR	3569690	CallExpression	ad -> SetTargetTypeName ( JOB_ADTYPE )		3569627	0					
ANR	3569691	Callee	ad -> SetTargetTypeName		3569627	0					
ANR	3569692	PtrMemberAccess	ad -> SetTargetTypeName		3569627	0					
ANR	3569693	Identifier	ad		3569627	0					
ANR	3569694	Identifier	SetTargetTypeName		3569627	1					
ANR	3569695	ArgumentList	JOB_ADTYPE		3569627	1					
ANR	3569696	Argument	JOB_ADTYPE		3569627	0					
ANR	3569697	Identifier	JOB_ADTYPE		3569627	0					
ANR	3569698	ExpressionStatement	"ad -> Assign ( ATTR_HARDWARE_ADDRESS , mac )"	244:2:6050:6091	3569627	4	True				
ANR	3569699	CallExpression	"ad -> Assign ( ATTR_HARDWARE_ADDRESS , mac )"		3569627	0					
ANR	3569700	Callee	ad -> Assign		3569627	0					
ANR	3569701	PtrMemberAccess	ad -> Assign		3569627	0					
ANR	3569702	Identifier	ad		3569627	0					
ANR	3569703	Identifier	Assign		3569627	1					
ANR	3569704	ArgumentList	ATTR_HARDWARE_ADDRESS		3569627	1					
ANR	3569705	Argument	ATTR_HARDWARE_ADDRESS		3569627	0					
ANR	3569706	Identifier	ATTR_HARDWARE_ADDRESS		3569627	0					
ANR	3569707	Argument	mac		3569627	1					
ANR	3569708	Identifier	mac		3569627	0					
ANR	3569709	ExpressionStatement	"ad -> Assign ( ATTR_SUBNET_MASK , mask )"	245:2:6095:6132	3569627	5	True				
ANR	3569710	CallExpression	"ad -> Assign ( ATTR_SUBNET_MASK , mask )"		3569627	0					
ANR	3569711	Callee	ad -> Assign		3569627	0					
ANR	3569712	PtrMemberAccess	ad -> Assign		3569627	0					
ANR	3569713	Identifier	ad		3569627	0					
ANR	3569714	Identifier	Assign		3569627	1					
ANR	3569715	ArgumentList	ATTR_SUBNET_MASK		3569627	1					
ANR	3569716	Argument	ATTR_SUBNET_MASK		3569627	0					
ANR	3569717	Identifier	ATTR_SUBNET_MASK		3569627	0					
ANR	3569718	Argument	mask		3569627	1					
ANR	3569719	Identifier	mask		3569627	0					
ANR	3569720	ExpressionStatement	"ad -> Assign ( ATTR_MY_ADDRESS , sinful )"	246:2:6136:6174	3569627	6	True				
ANR	3569721	CallExpression	"ad -> Assign ( ATTR_MY_ADDRESS , sinful )"		3569627	0					
ANR	3569722	Callee	ad -> Assign		3569627	0					
ANR	3569723	PtrMemberAccess	ad -> Assign		3569627	0					
ANR	3569724	Identifier	ad		3569627	0					
ANR	3569725	Identifier	Assign		3569627	1					
ANR	3569726	ArgumentList	ATTR_MY_ADDRESS		3569627	1					
ANR	3569727	Argument	ATTR_MY_ADDRESS		3569627	0					
ANR	3569728	Identifier	ATTR_MY_ADDRESS		3569627	0					
ANR	3569729	Argument	sinful		3569627	1					
ANR	3569730	Identifier	sinful		3569627	0					
ANR	3569731	ExpressionStatement	"ad -> Assign ( ATTR_WOL_PORT , port )"	247:2:6178:6212	3569627	7	True				
ANR	3569732	CallExpression	"ad -> Assign ( ATTR_WOL_PORT , port )"		3569627	0					
ANR	3569733	Callee	ad -> Assign		3569627	0					
ANR	3569734	PtrMemberAccess	ad -> Assign		3569627	0					
ANR	3569735	Identifier	ad		3569627	0					
ANR	3569736	Identifier	Assign		3569627	1					
ANR	3569737	ArgumentList	ATTR_WOL_PORT		3569627	1					
ANR	3569738	Argument	ATTR_WOL_PORT		3569627	0					
ANR	3569739	Identifier	ATTR_WOL_PORT		3569627	0					
ANR	3569740	Argument	port		3569627	1					
ANR	3569741	Identifier	port		3569627	0					
ANR	3569742	ElseStatement	else		3569627	0					
ANR	3569743	CompoundStatement		26:8:728:728	3569627	0					
ANR	3569744	IfStatement	if ( fn_in && * fn_in )		3569627	0					
ANR	3569745	Condition	fn_in && * fn_in	252:7:6289:6303	3569627	0	True				
ANR	3569746	AndExpression	fn_in && * fn_in		3569627	0		&&			
ANR	3569747	Identifier	fn_in		3569627	0					
ANR	3569748	UnaryOperationExpression	* fn_in		3569627	1					
ANR	3569749	UnaryOperator	*		3569627	0					
ANR	3569750	Identifier	fn_in		3569627	1					
ANR	3569751	CompoundStatement		29:25:812:812	3569627	1					
ANR	3569752	ExpressionStatement	"in = safe_fopen_wrapper ( fn_in , ""r"" )"	253:3:6312:6350	3569627	0	True				
ANR	3569753	AssignmentExpression	"in = safe_fopen_wrapper ( fn_in , ""r"" )"		3569627	0		=			
ANR	3569754	Identifier	in		3569627	0					
ANR	3569755	CallExpression	"safe_fopen_wrapper ( fn_in , ""r"" )"		3569627	1					
ANR	3569756	Callee	safe_fopen_wrapper		3569627	0					
ANR	3569757	Identifier	safe_fopen_wrapper		3569627	0					
ANR	3569758	ArgumentList	fn_in		3569627	1					
ANR	3569759	Argument	fn_in		3569627	0					
ANR	3569760	Identifier	fn_in		3569627	0					
ANR	3569761	Argument	"""r"""		3569627	1					
ANR	3569762	PrimaryExpression	"""r"""		3569627	0					
ANR	3569763	ElseStatement	else		3569627	0					
ANR	3569764	CompoundStatement		31:9:866:866	3569627	0					
ANR	3569765	ExpressionStatement	in = stdin	255:3:6366:6376	3569627	0	True				
ANR	3569766	AssignmentExpression	in = stdin		3569627	0		=			
ANR	3569767	Identifier	in		3569627	0					
ANR	3569768	Identifier	stdin		3569627	1					
ANR	3569769	ExpressionStatement	"fn_in = ""<stdin>"""	256:3:6381:6398	3569627	1	True				
ANR	3569770	AssignmentExpression	"fn_in = ""<stdin>"""		3569627	0		=			
ANR	3569771	Identifier	fn_in		3569627	0					
ANR	3569772	PrimaryExpression	"""<stdin>"""		3569627	1					
ANR	3569773	IfStatement	if ( ! in )		3569627	1					
ANR	3569774	Condition	! in	259:7:6412:6414	3569627	0	True				
ANR	3569775	UnaryOperationExpression	! in		3569627	0					
ANR	3569776	UnaryOperator	!		3569627	0					
ANR	3569777	Identifier	in		3569627	1					
ANR	3569778	CompoundStatement		36:13:923:923	3569627	1					
ANR	3569779	ExpressionStatement	"error ( E_FOPEN , fn_in , strerror ( errno ) , errno )"	260:3:6423:6474	3569627	0	True				
ANR	3569780	CallExpression	"error ( E_FOPEN , fn_in , strerror ( errno ) , errno )"		3569627	0					
ANR	3569781	Callee	error		3569627	0					
ANR	3569782	Identifier	error		3569627	0					
ANR	3569783	ArgumentList	E_FOPEN		3569627	1					
ANR	3569784	Argument	E_FOPEN		3569627	0					
ANR	3569785	Identifier	E_FOPEN		3569627	0					
ANR	3569786	Argument	fn_in		3569627	1					
ANR	3569787	Identifier	fn_in		3569627	0					
ANR	3569788	Argument	strerror ( errno )		3569627	2					
ANR	3569789	CallExpression	strerror ( errno )		3569627	0					
ANR	3569790	Callee	strerror		3569627	0					
ANR	3569791	Identifier	strerror		3569627	0					
ANR	3569792	ArgumentList	errno		3569627	1					
ANR	3569793	Argument	errno		3569627	0					
ANR	3569794	Identifier	errno		3569627	0					
ANR	3569795	Argument	errno		3569627	3					
ANR	3569796	Identifier	errno		3569627	0					
ANR	3569797	ExpressionStatement	"ad = new ClassAd ( in , ""?$#%^&*@"" , found_eof , found_error , empty )"	264:2:6529:6645	3569627	2	True				
ANR	3569798	AssignmentExpression	"ad = new ClassAd ( in , ""?$#%^&*@"" , found_eof , found_error , empty )"		3569627	0		=			
ANR	3569799	Identifier	ad		3569627	0					
ANR	3569800	Expression	"in , ""?$#%^&*@"" , found_eof , found_error , empty"		3569627	1					
ANR	3569801	Identifier	in		3569627	0					
ANR	3569802	Expression	"""?$#%^&*@"" , found_eof , found_error , empty"		3569627	1					
ANR	3569803	PrimaryExpression	"""?$#%^&*@"""		3569627	0					
ANR	3569804	Expression	"found_eof , found_error , empty"		3569627	1					
ANR	3569805	Identifier	found_eof		3569627	0					
ANR	3569806	Expression	"found_error , empty"		3569627	1					
ANR	3569807	Identifier	found_error		3569627	0					
ANR	3569808	Identifier	empty		3569627	1					
ANR	3569809	IfStatement	if ( found_error )		3569627	3					
ANR	3569810	Condition	found_error	271:7:6655:6665	3569627	0	True				
ANR	3569811	Identifier	found_error		3569627	0					
ANR	3569812	CompoundStatement		48:21:1174:1174	3569627	1					
ANR	3569813	ExpressionStatement	"error ( E_CLASSAD , found_error )"	272:3:6674:6714	3569627	0	True				
ANR	3569814	CallExpression	"error ( E_CLASSAD , found_error )"		3569627	0					
ANR	3569815	Callee	error		3569627	0					
ANR	3569816	Identifier	error		3569627	0					
ANR	3569817	ArgumentList	E_CLASSAD		3569627	1					
ANR	3569818	Argument	E_CLASSAD		3569627	0					
ANR	3569819	Identifier	E_CLASSAD		3569627	0					
ANR	3569820	Argument	found_error		3569627	1					
ANR	3569821	Identifier	found_error		3569627	0					
ANR	3569822	ReturnType	static void		3569627	1					
ANR	3569823	Identifier	serialize_input		3569627	2					
ANR	3569824	ParameterList			3569627	3					
ANR	3569825	CFGEntryNode	ENTRY		3569627		True				
ANR	3569826	CFGExitNode	EXIT		3569627		True				
ANR	3569827	Symbol	my_ip_string		3569627						
ANR	3569828	Symbol	stdin		3569627						
ANR	3569829	Symbol	stdio		3569627						
ANR	3569830	Symbol	found_error		3569627						
ANR	3569831	Symbol	ATTR_HARDWARE_ADDRESS		3569627						
ANR	3569832	Symbol	mac		3569627						
ANR	3569833	Symbol	empty		3569627						
ANR	3569834	Symbol	ATTR_WOL_PORT		3569627						
ANR	3569835	Symbol	STARTD_ADTYPE		3569627						
ANR	3569836	Symbol	JOB_ADTYPE		3569627						
ANR	3569837	Symbol	ATTR_MY_ADDRESS		3569627						
ANR	3569838	Symbol	sinful		3569627						
ANR	3569839	Symbol	mask		3569627						
ANR	3569840	Symbol	errno		3569627						
ANR	3569841	Symbol	ad		3569627						
ANR	3569842	Symbol	safe_fopen_wrapper		3569627						
ANR	3569843	Symbol	in		3569627						
ANR	3569844	Symbol	fn_in		3569627						
ANR	3569845	Symbol	E_CLASSAD		3569627						
ANR	3569846	Symbol	strerror		3569627						
ANR	3569847	Symbol	port		3569627						
ANR	3569848	Symbol	* fn_in		3569627						
ANR	3569849	Symbol	found_eof		3569627						
ANR	3569850	Symbol	ATTR_SUBNET_MASK		3569627						
ANR	3569851	Symbol	E_FOPEN		3569627						
ANR	3569852	Function	wake_machine	281:0:6728:7053							
ANR	3569853	FunctionDef	wake_machine ()		3569852	0					
ANR	3569854	CompoundStatement		283:0:6761:7053	3569852	0					
ANR	3569855	ExpressionStatement	waker = WakerBase :: createWaker ( ad )	286:1:6802:6839	3569852	0	True				
ANR	3569856	AssignmentExpression	waker = WakerBase :: createWaker ( ad )		3569852	0		=			
ANR	3569857	Identifier	waker		3569852	0					
ANR	3569858	CallExpression	WakerBase :: createWaker ( ad )		3569852	1					
ANR	3569859	Callee	WakerBase :: createWaker		3569852	0					
ANR	3569860	Identifier	WakerBase :: createWaker		3569852	0					
ANR	3569861	ArgumentList	ad		3569852	1					
ANR	3569862	Argument	ad		3569852	0					
ANR	3569863	Identifier	ad		3569852	0					
ANR	3569864	IfStatement	if ( ! waker )		3569852	1					
ANR	3569865	Condition	! waker	288:6:6848:6853	3569852	0	True				
ANR	3569866	UnaryOperationExpression	! waker		3569852	0					
ANR	3569867	UnaryOperator	!		3569852	0					
ANR	3569868	Identifier	waker		3569852	1					
ANR	3569869	CompoundStatement		6:15:95:95	3569852	1					
ANR	3569870	ExpressionStatement	"error ( E_NOMEM , ""waker object."" )"	289:2:6861:6894	3569852	0	True				
ANR	3569871	CallExpression	"error ( E_NOMEM , ""waker object."" )"		3569852	0					
ANR	3569872	Callee	error		3569852	0					
ANR	3569873	Identifier	error		3569852	0					
ANR	3569874	ArgumentList	E_NOMEM		3569852	1					
ANR	3569875	Argument	E_NOMEM		3569852	0					
ANR	3569876	Identifier	E_NOMEM		3569852	0					
ANR	3569877	Argument	"""waker object."""		3569852	1					
ANR	3569878	PrimaryExpression	"""waker object."""		3569852	0					
ANR	3569879	IfStatement	if ( ! waker -> doWake ( ) )		3569852	2					
ANR	3569880	Condition	! waker -> doWake ( )	293:6:6949:6965	3569852	0	True				
ANR	3569881	UnaryOperationExpression	! waker -> doWake ( )		3569852	0					
ANR	3569882	UnaryOperator	!		3569852	0					
ANR	3569883	CallExpression	waker -> doWake ( )		3569852	1					
ANR	3569884	Callee	waker -> doWake		3569852	0					
ANR	3569885	PtrMemberAccess	waker -> doWake		3569852	0					
ANR	3569886	Identifier	waker		3569852	0					
ANR	3569887	Identifier	doWake		3569852	1					
ANR	3569888	ArgumentList			3569852	1					
ANR	3569889	CompoundStatement		11:26:207:207	3569852	1					
ANR	3569890	ExpressionStatement	error ( E_NOWAKE )	294:2:6973:6991	3569852	0	True				
ANR	3569891	CallExpression	error ( E_NOWAKE )		3569852	0					
ANR	3569892	Callee	error		3569852	0					
ANR	3569893	Identifier	error		3569852	0					
ANR	3569894	ArgumentList	E_NOWAKE		3569852	1					
ANR	3569895	Argument	E_NOWAKE		3569852	0					
ANR	3569896	Identifier	E_NOWAKE		3569852	0					
ANR	3569897	ExpressionStatement	"fprintf ( stderr , ""Packet sent.\\n"" )"	297:1:6998:7034	3569852	3	True				
ANR	3569898	CallExpression	"fprintf ( stderr , ""Packet sent.\\n"" )"		3569852	0					
ANR	3569899	Callee	fprintf		3569852	0					
ANR	3569900	Identifier	fprintf		3569852	0					
ANR	3569901	ArgumentList	stderr		3569852	1					
ANR	3569902	Argument	stderr		3569852	0					
ANR	3569903	Identifier	stderr		3569852	0					
ANR	3569904	Argument	"""Packet sent.\\n"""		3569852	1					
ANR	3569905	PrimaryExpression	"""Packet sent.\\n"""		3569852	0					
ANR	3569906	Statement	delete	299:1:7038:7043	3569852	4	True				
ANR	3569907	ExpressionStatement	waker	299:8:7045:7050	3569852	5	True				
ANR	3569908	Identifier	waker		3569852	0					
ANR	3569909	ReturnType	static void		3569852	1					
ANR	3569910	Identifier	wake_machine		3569852	2					
ANR	3569911	ParameterList			3569852	3					
ANR	3569912	CFGEntryNode	ENTRY		3569852		True				
ANR	3569913	CFGExitNode	EXIT		3569852		True				
ANR	3569914	Symbol	E_NOMEM		3569852						
ANR	3569915	Symbol	ad		3569852						
ANR	3569916	Symbol	* waker		3569852						
ANR	3569917	Symbol	E_NOWAKE		3569852						
ANR	3569918	Symbol	waker		3569852						
ANR	3569919	Symbol	waker -> doWake		3569852						
ANR	3569920	Symbol	stderr		3569852						
ANR	3569921	Symbol	WakerBase :: createWaker		3569852						
ANR	3569922	Function	main	303:0:7056:7403							
ANR	3569923	FunctionDef	"main (int argc , char * argv [ ])"		3569922	0					
ANR	3569924	CompoundStatement		305:0:7091:7403	3569922	0					
ANR	3569925	ExpressionStatement	name = condor_basename ( argv [ 0 ] )	308:1:7131:7165	3569922	0	True				
ANR	3569926	AssignmentExpression	name = condor_basename ( argv [ 0 ] )		3569922	0		=			
ANR	3569927	Identifier	name		3569922	0					
ANR	3569928	CallExpression	condor_basename ( argv [ 0 ] )		3569922	1					
ANR	3569929	Callee	condor_basename		3569922	0					
ANR	3569930	Identifier	condor_basename		3569922	0					
ANR	3569931	ArgumentList	argv [ 0 ]		3569922	1					
ANR	3569932	Argument	argv [ 0 ]		3569922	0					
ANR	3569933	ArrayIndexing	argv [ 0 ]		3569922	0					
ANR	3569934	Identifier	argv		3569922	0					
ANR	3569935	PrimaryExpression	0		3569922	1					
ANR	3569936	IfStatement	if ( ! name )		3569922	1					
ANR	3569937	Condition	! name	309:6:7173:7177	3569922	0	True				
ANR	3569938	UnaryOperationExpression	! name		3569922	0					
ANR	3569939	UnaryOperator	!		3569922	0					
ANR	3569940	Identifier	name		3569922	1					
ANR	3569941	CompoundStatement		5:14:89:89	3569922	1					
ANR	3569942	ExpressionStatement	name = argv [ 0 ]	310:2:7185:7199	3569922	0	True				
ANR	3569943	AssignmentExpression	name = argv [ 0 ]		3569922	0		=			
ANR	3569944	Identifier	name		3569922	0					
ANR	3569945	ArrayIndexing	argv [ 0 ]		3569922	1					
ANR	3569946	Identifier	argv		3569922	0					
ANR	3569947	PrimaryExpression	0		3569922	1					
ANR	3569948	ExpressionStatement	"parse_command_line ( argc , argv )"	314:1:7267:7300	3569922	2	True				
ANR	3569949	CallExpression	"parse_command_line ( argc , argv )"		3569922	0					
ANR	3569950	Callee	parse_command_line		3569922	0					
ANR	3569951	Identifier	parse_command_line		3569922	0					
ANR	3569952	ArgumentList	argc		3569922	1					
ANR	3569953	Argument	argc		3569922	0					
ANR	3569954	Identifier	argc		3569922	0					
ANR	3569955	Argument	argv		3569922	1					
ANR	3569956	Identifier	argv		3569922	0					
ANR	3569957	ExpressionStatement	serialize_input ( )	317:1:7334:7352	3569922	3	True				
ANR	3569958	CallExpression	serialize_input ( )		3569922	0					
ANR	3569959	Callee	serialize_input		3569922	0					
ANR	3569960	Identifier	serialize_input		3569922	0					
ANR	3569961	ArgumentList			3569922	1					
ANR	3569962	IfStatement	if ( ad )		3569922	4					
ANR	3569963	Condition	ad	319:6:7361:7362	3569922	0	True				
ANR	3569964	Identifier	ad		3569922	0					
ANR	3569965	CompoundStatement		15:11:274:274	3569922	1					
ANR	3569966	ExpressionStatement	wake_machine ( )	320:2:7370:7385	3569922	0	True				
ANR	3569967	CallExpression	wake_machine ( )		3569922	0					
ANR	3569968	Callee	wake_machine		3569922	0					
ANR	3569969	Identifier	wake_machine		3569922	0					
ANR	3569970	ArgumentList			3569922	1					
ANR	3569971	ReturnStatement	return 0 ;	323:1:7392:7400	3569922	5	True				
ANR	3569972	PrimaryExpression	0		3569922	0					
ANR	3569973	ReturnType	int		3569922	1					
ANR	3569974	Identifier	main		3569922	2					
ANR	3569975	ParameterList	"int argc , char * argv [ ]"		3569922	3					
ANR	3569976	Parameter	int argc	304:6:7066:7073	3569922	0	True				
ANR	3569977	ParameterType	int		3569922	0					
ANR	3569978	Identifier	argc		3569922	1					
ANR	3569979	Parameter	char * argv [ ]	304:16:7076:7087	3569922	1	True				
ANR	3569980	ParameterType	char * [ ]		3569922	0					
ANR	3569981	Identifier	argv		3569922	1					
ANR	3569982	CFGEntryNode	ENTRY		3569922		True				
ANR	3569983	CFGExitNode	EXIT		3569922		True				
ANR	3569984	Symbol	argc		3569922						
ANR	3569985	Symbol	ad		3569922						
ANR	3569986	Symbol	name		3569922						
ANR	3569987	Symbol	* argv		3569922						
ANR	3569988	Symbol	argv		3569922						
ANR	3569989	Symbol	condor_basename		3569922						
