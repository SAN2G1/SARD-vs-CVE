command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1681208	File	data/converged/CVE-2011-4930_htcondor/ipv6_hostname.cpp								
ANR	1681209	DeclStmt									
ANR	1681210	Decl							condor_sockaddr	condor_sockaddr	local_ipaddr
ANR	1681211	DeclStmt									
ANR	1681212	Decl							MyString	MyString	local_hostname
ANR	1681213	DeclStmt									
ANR	1681214	Decl							MyString	MyString	local_fqdn
ANR	1681215	DeclStmt									
ANR	1681216	Decl							bool	bool	hostname_initialized
ANR	1681217	Function	nodns_enabled	17:0:395:465							
ANR	1681218	FunctionDef	nodns_enabled ()		1681217	0					
ANR	1681219	CompoundStatement		18:0:423:465	1681217	0					
ANR	1681220	ReturnStatement	"return param_boolean ( ""NO_DNS"" , false ) ;"	19:1:426:463	1681217	0	True				
ANR	1681221	CallExpression	"param_boolean ( ""NO_DNS"" , false )"		1681217	0					
ANR	1681222	Callee	param_boolean		1681217	0					
ANR	1681223	Identifier	param_boolean		1681217	0					
ANR	1681224	ArgumentList	"""NO_DNS"""		1681217	1					
ANR	1681225	Argument	"""NO_DNS"""		1681217	0					
ANR	1681226	PrimaryExpression	"""NO_DNS"""		1681217	0					
ANR	1681227	Argument	false		1681217	1					
ANR	1681228	Identifier	false		1681217	0					
ANR	1681229	ReturnType	static bool		1681217	1					
ANR	1681230	Identifier	nodns_enabled		1681217	2					
ANR	1681231	ParameterList			1681217	3					
ANR	1681232	CFGEntryNode	ENTRY		1681217		True				
ANR	1681233	CFGExitNode	EXIT		1681217		True				
ANR	1681234	Symbol	false		1681217						
ANR	1681235	Symbol	param_boolean		1681217						
ANR	1681236	Function	init_local_hostname	22:0:468:3997							
ANR	1681237	FunctionDef	init_local_hostname ()		1681236	0					
ANR	1681238	CompoundStatement		23:0:495:3997	1681236	0					
ANR	1681239	IdentifierDeclStatement	bool ipaddr_inited = false ;	34:1:781:807	1681236	0	True				
ANR	1681240	IdentifierDecl	ipaddr_inited = false		1681236	0					
ANR	1681241	IdentifierDeclType	bool		1681236	0					
ANR	1681242	Identifier	ipaddr_inited		1681236	1					
ANR	1681243	AssignmentExpression	ipaddr_inited = false		1681236	2		=			
ANR	1681244	Identifier	false		1681236	0					
ANR	1681245	Identifier	false		1681236	1					
ANR	1681246	IdentifierDeclStatement	char hostname [ MAXHOSTNAMELEN ] ;	35:1:810:839	1681236	1	True				
ANR	1681247	IdentifierDecl	hostname [ MAXHOSTNAMELEN ]		1681236	0					
ANR	1681248	IdentifierDeclType	char [ MAXHOSTNAMELEN ]		1681236	0					
ANR	1681249	Identifier	hostname		1681236	1					
ANR	1681250	Identifier	MAXHOSTNAMELEN		1681236	2					
ANR	1681251	IdentifierDeclStatement	int ret ;	36:1:842:849	1681236	2	True				
ANR	1681252	IdentifierDecl	ret		1681236	0					
ANR	1681253	IdentifierDeclType	int		1681236	0					
ANR	1681254	Identifier	ret		1681236	1					
ANR	1681255	ExpressionStatement	"ret = condor_gethostname ( hostname , sizeof ( hostname ) )"	40:1:928:980	1681236	3	True				
ANR	1681256	AssignmentExpression	"ret = condor_gethostname ( hostname , sizeof ( hostname ) )"		1681236	0		=			
ANR	1681257	Identifier	ret		1681236	0					
ANR	1681258	CallExpression	"condor_gethostname ( hostname , sizeof ( hostname ) )"		1681236	1					
ANR	1681259	Callee	condor_gethostname		1681236	0					
ANR	1681260	Identifier	condor_gethostname		1681236	0					
ANR	1681261	ArgumentList	hostname		1681236	1					
ANR	1681262	Argument	hostname		1681236	0					
ANR	1681263	Identifier	hostname		1681236	0					
ANR	1681264	Argument	sizeof ( hostname )		1681236	1					
ANR	1681265	SizeofExpression	sizeof ( hostname )		1681236	0					
ANR	1681266	Sizeof	sizeof		1681236	0					
ANR	1681267	SizeofOperand	hostname		1681236	1					
ANR	1681268	IfStatement	if ( ret )		1681236	4					
ANR	1681269	Condition	ret	41:5:987:989	1681236	0	True				
ANR	1681270	Identifier	ret		1681236	0					
ANR	1681271	CompoundStatement		19:10:496:496	1681236	1					
ANR	1681272	Statement	dprintf	42:2:996:1002	1681236	0	True				
ANR	1681273	Statement	(	42:9:1003:1003	1681236	1	True				
ANR	1681274	Statement	D_ALWAYS	42:10:1004:1011	1681236	2	True				
ANR	1681275	Statement	","	42:18:1012:1012	1681236	3	True				
ANR	1681276	Statement	"""condor_gethostname() failed. Cannot initialize """	42:20:1014:1062	1681236	4	True				
ANR	1681277	Statement	"""local hostname, ip address, FQDN.\\n"""	43:4:1068:1104	1681236	5	True				
ANR	1681278	Statement	)	43:41:1105:1105	1681236	6	True				
ANR	1681279	ExpressionStatement		43:42:1106:1106	1681236	7	True				
ANR	1681280	ReturnStatement	return ;	44:2:1110:1116	1681236	8	True				
ANR	1681281	ExpressionStatement	"dprintf ( D_HOSTNAME , ""condor_gethostname() claims we are %s\\n"" , hostname )"	47:1:1123:1195	1681236	5	True				
ANR	1681282	CallExpression	"dprintf ( D_HOSTNAME , ""condor_gethostname() claims we are %s\\n"" , hostname )"		1681236	0					
ANR	1681283	Callee	dprintf		1681236	0					
ANR	1681284	Identifier	dprintf		1681236	0					
ANR	1681285	ArgumentList	D_HOSTNAME		1681236	1					
ANR	1681286	Argument	D_HOSTNAME		1681236	0					
ANR	1681287	Identifier	D_HOSTNAME		1681236	0					
ANR	1681288	Argument	"""condor_gethostname() claims we are %s\\n"""		1681236	1					
ANR	1681289	PrimaryExpression	"""condor_gethostname() claims we are %s\\n"""		1681236	0					
ANR	1681290	Argument	hostname		1681236	2					
ANR	1681291	Identifier	hostname		1681236	0					
ANR	1681292	ExpressionStatement	local_hostname = hostname	50:1:1218:1243	1681236	6	True				
ANR	1681293	AssignmentExpression	local_hostname = hostname		1681236	0		=			
ANR	1681294	Identifier	local_hostname		1681236	0					
ANR	1681295	Identifier	hostname		1681236	1					
ANR	1681296	IdentifierDeclStatement	MyString network_interface ;	53:1:1317:1343	1681236	7	True				
ANR	1681297	IdentifierDecl	network_interface		1681236	0					
ANR	1681298	IdentifierDeclType	MyString		1681236	0					
ANR	1681299	Identifier	network_interface		1681236	1					
ANR	1681300	IfStatement	"if ( param ( network_interface , ""NETWORK_INTERFACE"" , ""*"" ) )"		1681236	8					
ANR	1681301	Condition	"param ( network_interface , ""NETWORK_INTERFACE"" , ""*"" )"	54:5:1350:1399	1681236	0	True				
ANR	1681302	CallExpression	"param ( network_interface , ""NETWORK_INTERFACE"" , ""*"" )"		1681236	0					
ANR	1681303	Callee	param		1681236	0					
ANR	1681304	Identifier	param		1681236	0					
ANR	1681305	ArgumentList	network_interface		1681236	1					
ANR	1681306	Argument	network_interface		1681236	0					
ANR	1681307	Identifier	network_interface		1681236	0					
ANR	1681308	Argument	"""NETWORK_INTERFACE"""		1681236	1					
ANR	1681309	PrimaryExpression	"""NETWORK_INTERFACE"""		1681236	0					
ANR	1681310	Argument	"""*"""		1681236	2					
ANR	1681311	PrimaryExpression	"""*"""		1681236	0					
ANR	1681312	CompoundStatement		32:57:906:906	1681236	1					
ANR	1681313	IfStatement	if ( local_ipaddr . from_ip_string ( network_interface ) )		1681236	0					
ANR	1681314	Condition	local_ipaddr . from_ip_string ( network_interface )	55:6:1410:1455	1681236	0	True				
ANR	1681315	CallExpression	local_ipaddr . from_ip_string ( network_interface )		1681236	0					
ANR	1681316	Callee	local_ipaddr . from_ip_string		1681236	0					
ANR	1681317	MemberAccess	local_ipaddr . from_ip_string		1681236	0					
ANR	1681318	Identifier	local_ipaddr		1681236	0					
ANR	1681319	Identifier	from_ip_string		1681236	1					
ANR	1681320	ArgumentList	network_interface		1681236	1					
ANR	1681321	Argument	network_interface		1681236	0					
ANR	1681322	Identifier	network_interface		1681236	0					
ANR	1681323	ExpressionStatement	ipaddr_inited = true	56:3:1461:1481	1681236	1	True				
ANR	1681324	AssignmentExpression	ipaddr_inited = true		1681236	0		=			
ANR	1681325	Identifier	ipaddr_inited		1681236	0					
ANR	1681326	Identifier	true		1681236	1					
ANR	1681327	IfStatement	if ( ! ipaddr_inited )		1681236	9					
ANR	1681328	Condition	! ipaddr_inited	61:5:1596:1610	1681236	0	True				
ANR	1681329	UnaryOperationExpression	! ipaddr_inited		1681236	0					
ANR	1681330	UnaryOperator	!		1681236	0					
ANR	1681331	Identifier	ipaddr_inited		1681236	1					
ANR	1681332	CompoundStatement		40:2:1122:1136	1681236	1					
ANR	1681333	IdentifierDeclStatement	std :: string ip ;	62:2:1618:1632	1681236	0	True				
ANR	1681334	IdentifierDecl	ip		1681236	0					
ANR	1681335	IdentifierDeclType	std :: string		1681236	0					
ANR	1681336	Identifier	ip		1681236	1					
ANR	1681337	IfStatement	"if ( ! network_interface_to_ip ( ""NETWORK_INTERFACE"" , network_interface . Value ( ) , ip , NULL ) )"		1681236	1					
ANR	1681338	Condition	"! network_interface_to_ip ( ""NETWORK_INTERFACE"" , network_interface . Value ( ) , ip , NULL )"	63:6:1640:1722	1681236	0	True				
ANR	1681339	UnaryOperationExpression	"! network_interface_to_ip ( ""NETWORK_INTERFACE"" , network_interface . Value ( ) , ip , NULL )"		1681236	0					
ANR	1681340	UnaryOperator	!		1681236	0					
ANR	1681341	CallExpression	"network_interface_to_ip ( ""NETWORK_INTERFACE"" , network_interface . Value ( ) , ip , NULL )"		1681236	1					
ANR	1681342	Callee	network_interface_to_ip		1681236	0					
ANR	1681343	Identifier	network_interface_to_ip		1681236	0					
ANR	1681344	ArgumentList	"""NETWORK_INTERFACE"""		1681236	1					
ANR	1681345	Argument	"""NETWORK_INTERFACE"""		1681236	0					
ANR	1681346	PrimaryExpression	"""NETWORK_INTERFACE"""		1681236	0					
ANR	1681347	Argument	network_interface . Value ( )		1681236	1					
ANR	1681348	CallExpression	network_interface . Value ( )		1681236	0					
ANR	1681349	Callee	network_interface . Value		1681236	0					
ANR	1681350	MemberAccess	network_interface . Value		1681236	0					
ANR	1681351	Identifier	network_interface		1681236	0					
ANR	1681352	Identifier	Value		1681236	1					
ANR	1681353	ArgumentList			1681236	1					
ANR	1681354	Argument	ip		1681236	2					
ANR	1681355	Identifier	ip		1681236	0					
ANR	1681356	Argument	NULL		1681236	3					
ANR	1681357	Identifier	NULL		1681236	0					
ANR	1681358	CompoundStatement		41:91:1229:1229	1681236	1					
ANR	1681359	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to identify IP address from interfaces.  None matches NETWORK_INTERFACE=%s. Problems are likely.\\n"" , network_interface . Value ( ) )"	64:3:1730:1883	1681236	0	True				
ANR	1681360	CallExpression	"dprintf ( D_ALWAYS , ""Unable to identify IP address from interfaces.  None matches NETWORK_INTERFACE=%s. Problems are likely.\\n"" , network_interface . Value ( ) )"		1681236	0					
ANR	1681361	Callee	dprintf		1681236	0					
ANR	1681362	Identifier	dprintf		1681236	0					
ANR	1681363	ArgumentList	D_ALWAYS		1681236	1					
ANR	1681364	Argument	D_ALWAYS		1681236	0					
ANR	1681365	Identifier	D_ALWAYS		1681236	0					
ANR	1681366	Argument	"""Unable to identify IP address from interfaces.  None matches NETWORK_INTERFACE=%s. Problems are likely.\\n"""		1681236	1					
ANR	1681367	PrimaryExpression	"""Unable to identify IP address from interfaces.  None matches NETWORK_INTERFACE=%s. Problems are likely.\\n"""		1681236	0					
ANR	1681368	Argument	network_interface . Value ( )		1681236	2					
ANR	1681369	CallExpression	network_interface . Value ( )		1681236	0					
ANR	1681370	Callee	network_interface . Value		1681236	0					
ANR	1681371	MemberAccess	network_interface . Value		1681236	0					
ANR	1681372	Identifier	network_interface		1681236	0					
ANR	1681373	Identifier	Value		1681236	1					
ANR	1681374	ArgumentList			1681236	1					
ANR	1681375	ReturnStatement	return ;	65:3:1888:1894	1681236	1	True				
ANR	1681376	IfStatement	if ( ! local_ipaddr . from_ip_string ( ip ) )		1681236	2					
ANR	1681377	Condition	! local_ipaddr . from_ip_string ( ip )	67:7:1907:1939	1681236	0	True				
ANR	1681378	UnaryOperationExpression	! local_ipaddr . from_ip_string ( ip )		1681236	0					
ANR	1681379	UnaryOperator	!		1681236	0					
ANR	1681380	CallExpression	local_ipaddr . from_ip_string ( ip )		1681236	1					
ANR	1681381	Callee	local_ipaddr . from_ip_string		1681236	0					
ANR	1681382	MemberAccess	local_ipaddr . from_ip_string		1681236	0					
ANR	1681383	Identifier	local_ipaddr		1681236	0					
ANR	1681384	Identifier	from_ip_string		1681236	1					
ANR	1681385	ArgumentList	ip		1681236	1					
ANR	1681386	Argument	ip		1681236	0					
ANR	1681387	Identifier	ip		1681236	0					
ANR	1681388	CompoundStatement		46:2:1448:1448	1681236	1					
ANR	1681389	ExpressionStatement	ASSERT ( FALSE )	71:3:2039:2052	1681236	0	True				
ANR	1681390	CallExpression	ASSERT ( FALSE )		1681236	0					
ANR	1681391	Callee	ASSERT		1681236	0					
ANR	1681392	Identifier	ASSERT		1681236	0					
ANR	1681393	ArgumentList	FALSE		1681236	1					
ANR	1681394	Argument	FALSE		1681236	0					
ANR	1681395	Identifier	FALSE		1681236	0					
ANR	1681396	ExpressionStatement	ipaddr_inited = true	73:2:2060:2080	1681236	3	True				
ANR	1681397	AssignmentExpression	ipaddr_inited = true		1681236	0		=			
ANR	1681398	Identifier	ipaddr_inited		1681236	0					
ANR	1681399	Identifier	true		1681236	1					
ANR	1681400	IfStatement	if ( nodns_enabled ( ) )		1681236	10					
ANR	1681401	Condition	nodns_enabled ( )	77:5:2129:2143	1681236	0	True				
ANR	1681402	CallExpression	nodns_enabled ( )		1681236	0					
ANR	1681403	Callee	nodns_enabled		1681236	0					
ANR	1681404	Identifier	nodns_enabled		1681236	0					
ANR	1681405	ArgumentList			1681236	1					
ANR	1681406	CompoundStatement		55:22:1650:1650	1681236	1					
ANR	1681407	ExpressionStatement	local_fqdn = hostname	80:2:2299:2320	1681236	0	True				
ANR	1681408	AssignmentExpression	local_fqdn = hostname		1681236	0		=			
ANR	1681409	Identifier	local_fqdn		1681236	0					
ANR	1681410	Identifier	hostname		1681236	1					
ANR	1681411	IfStatement	if ( ! ipaddr_inited )		1681236	1					
ANR	1681412	Condition	! ipaddr_inited	81:6:2328:2341	1681236	0	True				
ANR	1681413	UnaryOperationExpression	! ipaddr_inited		1681236	0					
ANR	1681414	UnaryOperator	!		1681236	0					
ANR	1681415	Identifier	ipaddr_inited		1681236	1					
ANR	1681416	CompoundStatement		59:22:1848:1848	1681236	1					
ANR	1681417	ExpressionStatement	local_ipaddr = convert_hostname_to_ipaddr ( local_hostname )	82:3:2349:2406	1681236	0	True				
ANR	1681418	AssignmentExpression	local_ipaddr = convert_hostname_to_ipaddr ( local_hostname )		1681236	0		=			
ANR	1681419	Identifier	local_ipaddr		1681236	0					
ANR	1681420	CallExpression	convert_hostname_to_ipaddr ( local_hostname )		1681236	1					
ANR	1681421	Callee	convert_hostname_to_ipaddr		1681236	0					
ANR	1681422	Identifier	convert_hostname_to_ipaddr		1681236	0					
ANR	1681423	ArgumentList	local_hostname		1681236	1					
ANR	1681424	Argument	local_hostname		1681236	0					
ANR	1681425	Identifier	local_hostname		1681236	0					
ANR	1681426	ReturnStatement	return ;	84:2:2414:2420	1681236	2	True				
ANR	1681427	IdentifierDeclStatement	addrinfo_iterator ai ;	87:1:2427:2447	1681236	11	True				
ANR	1681428	IdentifierDecl	ai		1681236	0					
ANR	1681429	IdentifierDeclType	addrinfo_iterator		1681236	0					
ANR	1681430	Identifier	ai		1681236	1					
ANR	1681431	ExpressionStatement	"ret = ipv6_getaddrinfo ( hostname , NULL , ai )"	88:1:2450:2492	1681236	12	True				
ANR	1681432	AssignmentExpression	"ret = ipv6_getaddrinfo ( hostname , NULL , ai )"		1681236	0		=			
ANR	1681433	Identifier	ret		1681236	0					
ANR	1681434	CallExpression	"ipv6_getaddrinfo ( hostname , NULL , ai )"		1681236	1					
ANR	1681435	Callee	ipv6_getaddrinfo		1681236	0					
ANR	1681436	Identifier	ipv6_getaddrinfo		1681236	0					
ANR	1681437	ArgumentList	hostname		1681236	1					
ANR	1681438	Argument	hostname		1681236	0					
ANR	1681439	Identifier	hostname		1681236	0					
ANR	1681440	Argument	NULL		1681236	1					
ANR	1681441	Identifier	NULL		1681236	0					
ANR	1681442	Argument	ai		1681236	2					
ANR	1681443	Identifier	ai		1681236	0					
ANR	1681444	IfStatement	if ( ret )		1681236	13					
ANR	1681445	Condition	ret	89:5:2499:2501	1681236	0	True				
ANR	1681446	Identifier	ret		1681236	0					
ANR	1681447	CompoundStatement		67:10:2008:2008	1681236	1					
ANR	1681448	ExpressionStatement	"dprintf ( D_HOSTNAME , ""hostname %s cannot be resolved by getaddrinfo\\n"" , hostname )"	91:2:2539:2623	1681236	0	True				
ANR	1681449	CallExpression	"dprintf ( D_HOSTNAME , ""hostname %s cannot be resolved by getaddrinfo\\n"" , hostname )"		1681236	0					
ANR	1681450	Callee	dprintf		1681236	0					
ANR	1681451	Identifier	dprintf		1681236	0					
ANR	1681452	ArgumentList	D_HOSTNAME		1681236	1					
ANR	1681453	Argument	D_HOSTNAME		1681236	0					
ANR	1681454	Identifier	D_HOSTNAME		1681236	0					
ANR	1681455	Argument	"""hostname %s cannot be resolved by getaddrinfo\\n"""		1681236	1					
ANR	1681456	PrimaryExpression	"""hostname %s cannot be resolved by getaddrinfo\\n"""		1681236	0					
ANR	1681457	Argument	hostname		1681236	2					
ANR	1681458	Identifier	hostname		1681236	0					
ANR	1681459	ReturnStatement	return ;	93:2:2627:2633	1681236	1	True				
ANR	1681460	IdentifierDeclStatement	int local_hostname_desireability = 0 ;	96:1:2641:2677	1681236	14	True				
ANR	1681461	IdentifierDecl	local_hostname_desireability = 0		1681236	0					
ANR	1681462	IdentifierDeclType	int		1681236	0					
ANR	1681463	Identifier	local_hostname_desireability		1681236	1					
ANR	1681464	AssignmentExpression	local_hostname_desireability = 0		1681236	2		=			
ANR	1681465	Identifier	local_hostname_desireability		1681236	0					
ANR	1681466	PrimaryExpression	0		1681236	1					
ANR	1681467	WhileStatement	while ( addrinfo * info = ai . next ( ) )		1681236	15					
ANR	1681468	Condition	addrinfo * info = ai . next ( )	97:8:2687:2712	1681236	0	True				
ANR	1681469	AssignmentExpression	addrinfo * info = ai . next ( )		1681236	0		=			
ANR	1681470	MultiplicativeExpression	addrinfo * info		1681236	0		*			
ANR	1681471	Identifier	addrinfo		1681236	0					
ANR	1681472	Identifier	info		1681236	1					
ANR	1681473	CallExpression	ai . next ( )		1681236	1					
ANR	1681474	Callee	ai . next		1681236	0					
ANR	1681475	MemberAccess	ai . next		1681236	0					
ANR	1681476	Identifier	ai		1681236	0					
ANR	1681477	Identifier	next		1681236	1					
ANR	1681478	ArgumentList			1681236	1					
ANR	1681479	CompoundStatement		92:2:2894:2932	1681236	1					
ANR	1681480	IdentifierDeclStatement	const char * name = info -> ai_canonname ;	98:2:2719:2756	1681236	0	True				
ANR	1681481	IdentifierDecl	* name = info -> ai_canonname		1681236	0					
ANR	1681482	IdentifierDeclType	const char *		1681236	0					
ANR	1681483	Identifier	name		1681236	1					
ANR	1681484	AssignmentExpression	* name = info -> ai_canonname		1681236	2		=			
ANR	1681485	Identifier	name		1681236	0					
ANR	1681486	PtrMemberAccess	info -> ai_canonname		1681236	1					
ANR	1681487	Identifier	info		1681236	0					
ANR	1681488	Identifier	ai_canonname		1681236	1					
ANR	1681489	IfStatement	if ( ! name )		1681236	1					
ANR	1681490	Condition	! name	99:6:2764:2768	1681236	0	True				
ANR	1681491	UnaryOperationExpression	! name		1681236	0					
ANR	1681492	UnaryOperator	!		1681236	0					
ANR	1681493	Identifier	name		1681236	1					
ANR	1681494	ContinueStatement	continue ;	100:3:2774:2782	1681236	1	True				
ANR	1681495	IdentifierDeclStatement	condor_sockaddr addr ( info -> ai_addr ) ;	101:2:2786:2821	1681236	2	True				
ANR	1681496	IdentifierDecl	addr ( info -> ai_addr )		1681236	0					
ANR	1681497	IdentifierDeclType	condor_sockaddr		1681236	0					
ANR	1681498	Identifier	addr		1681236	1					
ANR	1681499	PtrMemberAccess	info -> ai_addr		1681236	2					
ANR	1681500	Identifier	info		1681236	0					
ANR	1681501	Identifier	ai_addr		1681236	1					
ANR	1681502	IdentifierDeclStatement	int desireability = 0 ;	103:2:2826:2847	1681236	3	True				
ANR	1681503	IdentifierDecl	desireability = 0		1681236	0					
ANR	1681504	IdentifierDeclType	int		1681236	0					
ANR	1681505	Identifier	desireability		1681236	1					
ANR	1681506	AssignmentExpression	desireability = 0		1681236	2		=			
ANR	1681507	Identifier	desireability		1681236	0					
ANR	1681508	PrimaryExpression	0		1681236	1					
ANR	1681509	IfStatement	if ( addr . is_loopback ( ) )		1681236	4					
ANR	1681510	Condition	addr . is_loopback ( )	104:6:2855:2872	1681236	0	True				
ANR	1681511	CallExpression	addr . is_loopback ( )		1681236	0					
ANR	1681512	Callee	addr . is_loopback		1681236	0					
ANR	1681513	MemberAccess	addr . is_loopback		1681236	0					
ANR	1681514	Identifier	addr		1681236	0					
ANR	1681515	Identifier	is_loopback		1681236	1					
ANR	1681516	ArgumentList			1681236	1					
ANR	1681517	CompoundStatement		82:37:2390:2390	1681236	1					
ANR	1681518	ExpressionStatement	desireability = 1	104:39:2888:2905	1681236	0	True				
ANR	1681519	AssignmentExpression	desireability = 1		1681236	0		=			
ANR	1681520	Identifier	desireability		1681236	0					
ANR	1681521	PrimaryExpression	1		1681236	1					
ANR	1681522	ElseStatement	else		1681236	0					
ANR	1681523	IfStatement	if ( addr . is_private_network ( ) )		1681236	0					
ANR	1681524	Condition	addr . is_private_network ( )	105:10:2919:2943	1681236	0	True				
ANR	1681525	CallExpression	addr . is_private_network ( )		1681236	0					
ANR	1681526	Callee	addr . is_private_network		1681236	0					
ANR	1681527	MemberAccess	addr . is_private_network		1681236	0					
ANR	1681528	Identifier	addr		1681236	0					
ANR	1681529	Identifier	is_private_network		1681236	1					
ANR	1681530	ArgumentList			1681236	1					
ANR	1681531	CompoundStatement		83:37:2450:2450	1681236	1					
ANR	1681532	ExpressionStatement	desireability = 2	105:39:2948:2965	1681236	0	True				
ANR	1681533	AssignmentExpression	desireability = 2		1681236	0		=			
ANR	1681534	Identifier	desireability		1681236	0					
ANR	1681535	PrimaryExpression	2		1681236	1					
ANR	1681536	ElseStatement	else		1681236	0					
ANR	1681537	CompoundStatement		84:37:2510:2510	1681236	0					
ANR	1681538	ExpressionStatement	desireability = 3	106:39:3008:3025	1681236	0	True				
ANR	1681539	AssignmentExpression	desireability = 3		1681236	0		=			
ANR	1681540	Identifier	desireability		1681236	0					
ANR	1681541	PrimaryExpression	3		1681236	1					
ANR	1681542	ExpressionStatement	"dprintf ( D_HOSTNAME , ""Considering %s (Ranked at %d) as possible local hostname versus %s/%s (%d)\\n"" , name , desireability , local_hostname . Value ( ) , local_fqdn . Value ( ) , local_hostname_desireability )"	107:2:3031:3225	1681236	5	True				
ANR	1681543	CallExpression	"dprintf ( D_HOSTNAME , ""Considering %s (Ranked at %d) as possible local hostname versus %s/%s (%d)\\n"" , name , desireability , local_hostname . Value ( ) , local_fqdn . Value ( ) , local_hostname_desireability )"		1681236	0					
ANR	1681544	Callee	dprintf		1681236	0					
ANR	1681545	Identifier	dprintf		1681236	0					
ANR	1681546	ArgumentList	D_HOSTNAME		1681236	1					
ANR	1681547	Argument	D_HOSTNAME		1681236	0					
ANR	1681548	Identifier	D_HOSTNAME		1681236	0					
ANR	1681549	Argument	"""Considering %s (Ranked at %d) as possible local hostname versus %s/%s (%d)\\n"""		1681236	1					
ANR	1681550	PrimaryExpression	"""Considering %s (Ranked at %d) as possible local hostname versus %s/%s (%d)\\n"""		1681236	0					
ANR	1681551	Argument	name		1681236	2					
ANR	1681552	Identifier	name		1681236	0					
ANR	1681553	Argument	desireability		1681236	3					
ANR	1681554	Identifier	desireability		1681236	0					
ANR	1681555	Argument	local_hostname . Value ( )		1681236	4					
ANR	1681556	CallExpression	local_hostname . Value ( )		1681236	0					
ANR	1681557	Callee	local_hostname . Value		1681236	0					
ANR	1681558	MemberAccess	local_hostname . Value		1681236	0					
ANR	1681559	Identifier	local_hostname		1681236	0					
ANR	1681560	Identifier	Value		1681236	1					
ANR	1681561	ArgumentList			1681236	1					
ANR	1681562	Argument	local_fqdn . Value ( )		1681236	5					
ANR	1681563	CallExpression	local_fqdn . Value ( )		1681236	0					
ANR	1681564	Callee	local_fqdn . Value		1681236	0					
ANR	1681565	MemberAccess	local_fqdn . Value		1681236	0					
ANR	1681566	Identifier	local_fqdn		1681236	0					
ANR	1681567	Identifier	Value		1681236	1					
ANR	1681568	ArgumentList			1681236	1					
ANR	1681569	Argument	local_hostname_desireability		1681236	6					
ANR	1681570	Identifier	local_hostname_desireability		1681236	0					
ANR	1681571	IfStatement	if ( desireability < local_hostname_desireability )		1681236	6					
ANR	1681572	Condition	desireability < local_hostname_desireability	108:5:3232:3275	1681236	0	True				
ANR	1681573	RelationalExpression	desireability < local_hostname_desireability		1681236	0		<			
ANR	1681574	Identifier	desireability		1681236	0					
ANR	1681575	Identifier	local_hostname_desireability		1681236	1					
ANR	1681576	CompoundStatement		86:51:2782:2782	1681236	1					
ANR	1681577	ContinueStatement	continue ;	108:53:3280:3288	1681236	0	True				
ANR	1681578	ExpressionStatement	local_hostname_desireability = desireability	109:2:3294:3338	1681236	7	True				
ANR	1681579	AssignmentExpression	local_hostname_desireability = desireability		1681236	0		=			
ANR	1681580	Identifier	local_hostname_desireability		1681236	0					
ANR	1681581	Identifier	desireability		1681236	1					
ANR	1681582	IfStatement	if ( ! ipaddr_inited )		1681236	8					
ANR	1681583	Condition	! ipaddr_inited	111:6:3347:3360	1681236	0	True				
ANR	1681584	UnaryOperationExpression	! ipaddr_inited		1681236	0					
ANR	1681585	UnaryOperator	!		1681236	0					
ANR	1681586	Identifier	ipaddr_inited		1681236	1					
ANR	1681587	ExpressionStatement	local_ipaddr = addr	112:3:3366:3385	1681236	1	True				
ANR	1681588	AssignmentExpression	local_ipaddr = addr		1681236	0		=			
ANR	1681589	Identifier	local_ipaddr		1681236	0					
ANR	1681590	Identifier	addr		1681236	1					
ANR	1681591	IdentifierDeclStatement	"const char * dotpos = strchr ( name , '.' ) ;"	114:2:3390:3428	1681236	9	True				
ANR	1681592	IdentifierDecl	"* dotpos = strchr ( name , '.' )"		1681236	0					
ANR	1681593	IdentifierDeclType	const char *		1681236	0					
ANR	1681594	Identifier	dotpos		1681236	1					
ANR	1681595	AssignmentExpression	"* dotpos = strchr ( name , '.' )"		1681236	2		=			
ANR	1681596	Identifier	dotpos		1681236	0					
ANR	1681597	CallExpression	"strchr ( name , '.' )"		1681236	1					
ANR	1681598	Callee	strchr		1681236	0					
ANR	1681599	Identifier	strchr		1681236	0					
ANR	1681600	ArgumentList	name		1681236	1					
ANR	1681601	Argument	name		1681236	0					
ANR	1681602	Identifier	name		1681236	0					
ANR	1681603	Argument	'.'		1681236	1					
ANR	1681604	PrimaryExpression	'.'		1681236	0					
ANR	1681605	IfStatement	if ( dotpos )		1681236	10					
ANR	1681606	Condition	dotpos	115:6:3436:3441	1681236	0	True				
ANR	1681607	Identifier	dotpos		1681236	0					
ANR	1681608	CompoundStatement		93:14:2948:2948	1681236	1					
ANR	1681609	ExpressionStatement	local_fqdn = name	116:3:3474:3491	1681236	0	True				
ANR	1681610	AssignmentExpression	local_fqdn = name		1681236	0		=			
ANR	1681611	Identifier	local_fqdn		1681236	0					
ANR	1681612	Identifier	name		1681236	1					
ANR	1681613	ExpressionStatement	"local_hostname = local_fqdn . Substr ( 0 , dotpos - name - 1 )"	117:3:3496:3548	1681236	1	True				
ANR	1681614	AssignmentExpression	"local_hostname = local_fqdn . Substr ( 0 , dotpos - name - 1 )"		1681236	0		=			
ANR	1681615	Identifier	local_hostname		1681236	0					
ANR	1681616	CallExpression	"local_fqdn . Substr ( 0 , dotpos - name - 1 )"		1681236	1					
ANR	1681617	Callee	local_fqdn . Substr		1681236	0					
ANR	1681618	MemberAccess	local_fqdn . Substr		1681236	0					
ANR	1681619	Identifier	local_fqdn		1681236	0					
ANR	1681620	Identifier	Substr		1681236	1					
ANR	1681621	ArgumentList	0		1681236	1					
ANR	1681622	Argument	0		1681236	0					
ANR	1681623	PrimaryExpression	0		1681236	0					
ANR	1681624	Argument	dotpos - name - 1		1681236	1					
ANR	1681625	AdditiveExpression	dotpos - name - 1		1681236	0		-			
ANR	1681626	Identifier	dotpos		1681236	0					
ANR	1681627	AdditiveExpression	name - 1		1681236	1		-			
ANR	1681628	Identifier	name		1681236	0					
ANR	1681629	PrimaryExpression	1		1681236	1					
ANR	1681630	ElseStatement	else		1681236	0					
ANR	1681631	CompoundStatement		99:3:3126:3149	1681236	0					
ANR	1681632	ExpressionStatement	local_hostname = name	119:3:3564:3585	1681236	0	True				
ANR	1681633	AssignmentExpression	local_hostname = name		1681236	0		=			
ANR	1681634	Identifier	local_hostname		1681236	0					
ANR	1681635	Identifier	name		1681236	1					
ANR	1681636	ExpressionStatement	local_fqdn = local_hostname	120:3:3590:3617	1681236	1	True				
ANR	1681637	AssignmentExpression	local_fqdn = local_hostname		1681236	0		=			
ANR	1681638	Identifier	local_fqdn		1681236	0					
ANR	1681639	Identifier	local_hostname		1681236	1					
ANR	1681640	IdentifierDeclStatement	MyString default_domain ;	121:3:3622:3645	1681236	2	True				
ANR	1681641	IdentifierDecl	default_domain		1681236	0					
ANR	1681642	IdentifierDeclType	MyString		1681236	0					
ANR	1681643	Identifier	default_domain		1681236	1					
ANR	1681644	IfStatement	"if ( param ( default_domain , ""DEFAULT_DOMAIN_NAME"" ) )"		1681236	3					
ANR	1681645	Condition	"param ( default_domain , ""DEFAULT_DOMAIN_NAME"" )"	122:7:3654:3697	1681236	0	True				
ANR	1681646	CallExpression	"param ( default_domain , ""DEFAULT_DOMAIN_NAME"" )"		1681236	0					
ANR	1681647	Callee	param		1681236	0					
ANR	1681648	Identifier	param		1681236	0					
ANR	1681649	ArgumentList	default_domain		1681236	1					
ANR	1681650	Argument	default_domain		1681236	0					
ANR	1681651	Identifier	default_domain		1681236	0					
ANR	1681652	Argument	"""DEFAULT_DOMAIN_NAME"""		1681236	1					
ANR	1681653	PrimaryExpression	"""DEFAULT_DOMAIN_NAME"""		1681236	0					
ANR	1681654	CompoundStatement		100:53:3204:3204	1681236	1					
ANR	1681655	IfStatement	if ( default_domain [ 0 ] != '.' )		1681236	0					
ANR	1681656	Condition	default_domain [ 0 ] != '.'	123:8:3710:3733	1681236	0	True				
ANR	1681657	EqualityExpression	default_domain [ 0 ] != '.'		1681236	0		!=			
ANR	1681658	ArrayIndexing	default_domain [ 0 ]		1681236	0					
ANR	1681659	Identifier	default_domain		1681236	0					
ANR	1681660	PrimaryExpression	0		1681236	1					
ANR	1681661	PrimaryExpression	'.'		1681236	1					
ANR	1681662	ExpressionStatement	"local_fqdn += ""."""	124:5:3741:3758	1681236	1	True				
ANR	1681663	AssignmentExpression	"local_fqdn += ""."""		1681236	0		+=			
ANR	1681664	Identifier	local_fqdn		1681236	0					
ANR	1681665	PrimaryExpression	"""."""		1681236	1					
ANR	1681666	ExpressionStatement	local_fqdn += default_domain	125:4:3764:3792	1681236	1	True				
ANR	1681667	AssignmentExpression	local_fqdn += default_domain		1681236	0		+=			
ANR	1681668	Identifier	local_fqdn		1681236	0					
ANR	1681669	Identifier	default_domain		1681236	1					
ANR	1681670	ExpressionStatement	"dprintf ( D_HOSTNAME , ""Identifying myself as: Short:: %s, Long: %s, IP: %s\\n"" , local_hostname . Value ( ) , local_fqdn . Value ( ) , local_ipaddr . to_ip_string ( ) . Value ( ) )"	130:1:3808:3965	1681236	16	True				
ANR	1681671	CallExpression	"dprintf ( D_HOSTNAME , ""Identifying myself as: Short:: %s, Long: %s, IP: %s\\n"" , local_hostname . Value ( ) , local_fqdn . Value ( ) , local_ipaddr . to_ip_string ( ) . Value ( ) )"		1681236	0					
ANR	1681672	Callee	dprintf		1681236	0					
ANR	1681673	Identifier	dprintf		1681236	0					
ANR	1681674	ArgumentList	D_HOSTNAME		1681236	1					
ANR	1681675	Argument	D_HOSTNAME		1681236	0					
ANR	1681676	Identifier	D_HOSTNAME		1681236	0					
ANR	1681677	Argument	"""Identifying myself as: Short:: %s, Long: %s, IP: %s\\n"""		1681236	1					
ANR	1681678	PrimaryExpression	"""Identifying myself as: Short:: %s, Long: %s, IP: %s\\n"""		1681236	0					
ANR	1681679	Argument	local_hostname . Value ( )		1681236	2					
ANR	1681680	CallExpression	local_hostname . Value ( )		1681236	0					
ANR	1681681	Callee	local_hostname . Value		1681236	0					
ANR	1681682	MemberAccess	local_hostname . Value		1681236	0					
ANR	1681683	Identifier	local_hostname		1681236	0					
ANR	1681684	Identifier	Value		1681236	1					
ANR	1681685	ArgumentList			1681236	1					
ANR	1681686	Argument	local_fqdn . Value ( )		1681236	3					
ANR	1681687	CallExpression	local_fqdn . Value ( )		1681236	0					
ANR	1681688	Callee	local_fqdn . Value		1681236	0					
ANR	1681689	MemberAccess	local_fqdn . Value		1681236	0					
ANR	1681690	Identifier	local_fqdn		1681236	0					
ANR	1681691	Identifier	Value		1681236	1					
ANR	1681692	ArgumentList			1681236	1					
ANR	1681693	Argument	local_ipaddr . to_ip_string ( ) . Value ( )		1681236	4					
ANR	1681694	CallExpression	local_ipaddr . to_ip_string ( ) . Value ( )		1681236	0					
ANR	1681695	Callee	local_ipaddr . to_ip_string ( ) . Value		1681236	0					
ANR	1681696	MemberAccess	local_ipaddr . to_ip_string ( ) . Value		1681236	0					
ANR	1681697	CallExpression	local_ipaddr . to_ip_string ( )		1681236	0					
ANR	1681698	Callee	local_ipaddr . to_ip_string		1681236	0					
ANR	1681699	MemberAccess	local_ipaddr . to_ip_string		1681236	0					
ANR	1681700	Identifier	local_ipaddr		1681236	0					
ANR	1681701	Identifier	to_ip_string		1681236	1					
ANR	1681702	ArgumentList			1681236	1					
ANR	1681703	Identifier	Value		1681236	1					
ANR	1681704	ArgumentList			1681236	1					
ANR	1681705	ExpressionStatement	hostname_initialized = true	131:1:3968:3995	1681236	17	True				
ANR	1681706	AssignmentExpression	hostname_initialized = true		1681236	0		=			
ANR	1681707	Identifier	hostname_initialized		1681236	0					
ANR	1681708	Identifier	true		1681236	1					
ANR	1681709	ReturnType	void		1681236	1					
ANR	1681710	Identifier	init_local_hostname		1681236	2					
ANR	1681711	ParameterList			1681236	3					
ANR	1681712	CFGEntryNode	ENTRY		1681236		True				
ANR	1681713	CFGExitNode	EXIT		1681236		True				
ANR	1681714	Symbol	addrinfo		1681236						
ANR	1681715	Symbol	desireability		1681236						
ANR	1681716	Symbol	info -> ai_canonname		1681236						
ANR	1681717	Symbol	addr . is_private_network		1681236						
ANR	1681718	Symbol	* default_domain		1681236						
ANR	1681719	Symbol	hostname_initialized		1681236						
ANR	1681720	Symbol	local_fqdn		1681236						
ANR	1681721	Symbol	strchr		1681236						
ANR	1681722	Symbol	condor_gethostname		1681236						
ANR	1681723	Symbol	local_ipaddr		1681236						
ANR	1681724	Symbol	addr . is_loopback		1681236						
ANR	1681725	Symbol	hostname		1681236						
ANR	1681726	Symbol	param		1681236						
ANR	1681727	Symbol	local_ipaddr . to_ip_string ( ) . Value		1681236						
ANR	1681728	Symbol	local_ipaddr . from_ip_string		1681236						
ANR	1681729	Symbol	network_interface . Value		1681236						
ANR	1681730	Symbol	local_ipaddr . to_ip_string		1681236						
ANR	1681731	Symbol	ai . next		1681236						
ANR	1681732	Symbol	local_hostname_desireability		1681236						
ANR	1681733	Symbol	addr		1681236						
ANR	1681734	Symbol	dotpos		1681236						
ANR	1681735	Symbol	local_fqdn . Substr		1681236						
ANR	1681736	Symbol	ipaddr_inited		1681236						
ANR	1681737	Symbol	default_domain		1681236						
ANR	1681738	Symbol	nodns_enabled		1681236						
ANR	1681739	Symbol	info		1681236						
ANR	1681740	Symbol	ret		1681236						
ANR	1681741	Symbol	D_HOSTNAME		1681236						
ANR	1681742	Symbol	convert_hostname_to_ipaddr		1681236						
ANR	1681743	Symbol	local_hostname . Value		1681236						
ANR	1681744	Symbol	local_fqdn . Value		1681236						
ANR	1681745	Symbol	NULL		1681236						
ANR	1681746	Symbol	ip		1681236						
ANR	1681747	Symbol	ipv6_getaddrinfo		1681236						
ANR	1681748	Symbol	false		1681236						
ANR	1681749	Symbol	D_ALWAYS		1681236						
ANR	1681750	Symbol	ai		1681236						
ANR	1681751	Symbol	network_interface_to_ip		1681236						
ANR	1681752	Symbol	network_interface		1681236						
ANR	1681753	Symbol	true		1681236						
ANR	1681754	Symbol	name		1681236						
ANR	1681755	Symbol	local_hostname		1681236						
ANR	1681756	Symbol	FALSE		1681236						
ANR	1681757	Symbol	* info		1681236						
ANR	1681758	Function	get_local_ipaddr	134:0:4000:4112							
ANR	1681759	FunctionDef	get_local_ipaddr ()		1681758	0					
ANR	1681760	CompoundStatement		135:0:4035:4112	1681758	0					
ANR	1681761	IfStatement	if ( ! hostname_initialized )		1681758	0					
ANR	1681762	Condition	! hostname_initialized	136:5:4042:4062	1681758	0	True				
ANR	1681763	UnaryOperationExpression	! hostname_initialized		1681758	0					
ANR	1681764	UnaryOperator	!		1681758	0					
ANR	1681765	Identifier	hostname_initialized		1681758	1					
ANR	1681766	ExpressionStatement	init_local_hostname ( )	137:2:4067:4088	1681758	1	True				
ANR	1681767	CallExpression	init_local_hostname ( )		1681758	0					
ANR	1681768	Callee	init_local_hostname		1681758	0					
ANR	1681769	Identifier	init_local_hostname		1681758	0					
ANR	1681770	ArgumentList			1681758	1					
ANR	1681771	ReturnStatement	return local_ipaddr ;	138:1:4091:4110	1681758	1	True				
ANR	1681772	Identifier	local_ipaddr		1681758	0					
ANR	1681773	ReturnType	condor_sockaddr		1681758	1					
ANR	1681774	Identifier	get_local_ipaddr		1681758	2					
ANR	1681775	ParameterList			1681758	3					
ANR	1681776	CFGEntryNode	ENTRY		1681758		True				
ANR	1681777	CFGExitNode	EXIT		1681758		True				
ANR	1681778	Symbol	hostname_initialized		1681758						
ANR	1681779	Symbol	local_ipaddr		1681758						
ANR	1681780	Function	get_local_hostname	141:0:4115:4224							
ANR	1681781	FunctionDef	get_local_hostname ()		1681780	0					
ANR	1681782	CompoundStatement		142:0:4145:4224	1681780	0					
ANR	1681783	IfStatement	if ( ! hostname_initialized )		1681780	0					
ANR	1681784	Condition	! hostname_initialized	143:5:4152:4172	1681780	0	True				
ANR	1681785	UnaryOperationExpression	! hostname_initialized		1681780	0					
ANR	1681786	UnaryOperator	!		1681780	0					
ANR	1681787	Identifier	hostname_initialized		1681780	1					
ANR	1681788	ExpressionStatement	init_local_hostname ( )	144:2:4177:4198	1681780	1	True				
ANR	1681789	CallExpression	init_local_hostname ( )		1681780	0					
ANR	1681790	Callee	init_local_hostname		1681780	0					
ANR	1681791	Identifier	init_local_hostname		1681780	0					
ANR	1681792	ArgumentList			1681780	1					
ANR	1681793	ReturnStatement	return local_hostname ;	145:1:4201:4222	1681780	1	True				
ANR	1681794	Identifier	local_hostname		1681780	0					
ANR	1681795	ReturnType	MyString		1681780	1					
ANR	1681796	Identifier	get_local_hostname		1681780	2					
ANR	1681797	ParameterList			1681780	3					
ANR	1681798	CFGEntryNode	ENTRY		1681780		True				
ANR	1681799	CFGExitNode	EXIT		1681780		True				
ANR	1681800	Symbol	hostname_initialized		1681780						
ANR	1681801	Symbol	local_hostname		1681780						
ANR	1681802	Function	get_local_fqdn	148:0:4227:4328							
ANR	1681803	FunctionDef	get_local_fqdn ()		1681802	0					
ANR	1681804	CompoundStatement		149:0:4253:4328	1681802	0					
ANR	1681805	IfStatement	if ( ! hostname_initialized )		1681802	0					
ANR	1681806	Condition	! hostname_initialized	150:5:4260:4280	1681802	0	True				
ANR	1681807	UnaryOperationExpression	! hostname_initialized		1681802	0					
ANR	1681808	UnaryOperator	!		1681802	0					
ANR	1681809	Identifier	hostname_initialized		1681802	1					
ANR	1681810	ExpressionStatement	init_local_hostname ( )	151:2:4285:4306	1681802	1	True				
ANR	1681811	CallExpression	init_local_hostname ( )		1681802	0					
ANR	1681812	Callee	init_local_hostname		1681802	0					
ANR	1681813	Identifier	init_local_hostname		1681802	0					
ANR	1681814	ArgumentList			1681802	1					
ANR	1681815	ReturnStatement	return local_fqdn ;	152:1:4309:4326	1681802	1	True				
ANR	1681816	Identifier	local_fqdn		1681802	0					
ANR	1681817	ReturnType	MyString		1681802	1					
ANR	1681818	Identifier	get_local_fqdn		1681802	2					
ANR	1681819	ParameterList			1681802	3					
ANR	1681820	CFGEntryNode	ENTRY		1681802		True				
ANR	1681821	CFGExitNode	EXIT		1681802		True				
ANR	1681822	Symbol	hostname_initialized		1681802						
ANR	1681823	Symbol	local_fqdn		1681802						
ANR	1681824	Function	get_fqdn_from_hostname	155:0:4331:5154							
ANR	1681825	FunctionDef	get_fqdn_from_hostname (const MyString & hostname)		1681824	0					
ANR	1681826	CompoundStatement		155:58:4389:5154	1681824	0					
ANR	1681827	IfStatement	if ( hostname . FindChar ( '.' ) != - 1 )		1681824	0					
ANR	1681828	Condition	hostname . FindChar ( '.' ) != - 1	156:5:4396:4423	1681824	0	True				
ANR	1681829	EqualityExpression	hostname . FindChar ( '.' ) != - 1		1681824	0		!=			
ANR	1681830	CallExpression	hostname . FindChar ( '.' )		1681824	0					
ANR	1681831	Callee	hostname . FindChar		1681824	0					
ANR	1681832	MemberAccess	hostname . FindChar		1681824	0					
ANR	1681833	Identifier	hostname		1681824	0					
ANR	1681834	Identifier	FindChar		1681824	1					
ANR	1681835	ArgumentList	'.'		1681824	1					
ANR	1681836	Argument	'.'		1681824	0					
ANR	1681837	PrimaryExpression	'.'		1681824	0					
ANR	1681838	UnaryOperationExpression	- 1		1681824	1					
ANR	1681839	UnaryOperator	-		1681824	0					
ANR	1681840	PrimaryExpression	1		1681824	1					
ANR	1681841	ReturnStatement	return hostname ;	157:2:4428:4443	1681824	1	True				
ANR	1681842	Identifier	hostname		1681824	0					
ANR	1681843	IdentifierDeclStatement	MyString ret ;	159:1:4447:4459	1681824	1	True				
ANR	1681844	IdentifierDecl	ret		1681824	0					
ANR	1681845	IdentifierDeclType	MyString		1681824	0					
ANR	1681846	Identifier	ret		1681824	1					
ANR	1681847	IfStatement	if ( ! nodns_enabled ( ) )		1681824	2					
ANR	1681848	Condition	! nodns_enabled ( )	161:5:4467:4482	1681824	0	True				
ANR	1681849	UnaryOperationExpression	! nodns_enabled ( )		1681824	0					
ANR	1681850	UnaryOperator	!		1681824	0					
ANR	1681851	CallExpression	nodns_enabled ( )		1681824	1					
ANR	1681852	Callee	nodns_enabled		1681824	0					
ANR	1681853	Identifier	nodns_enabled		1681824	0					
ANR	1681854	ArgumentList			1681824	1					
ANR	1681855	CompoundStatement		21:2:367:411	1681824	1					
ANR	1681856	IdentifierDeclStatement	addrinfo_iterator ai ;	162:2:4489:4509	1681824	0	True				
ANR	1681857	IdentifierDecl	ai		1681824	0					
ANR	1681858	IdentifierDeclType	addrinfo_iterator		1681824	0					
ANR	1681859	Identifier	ai		1681824	1					
ANR	1681860	IdentifierDeclStatement	"bool res = ipv6_getaddrinfo ( hostname . Value ( ) , NULL , ai ) ;"	163:2:4513:4569	1681824	1	True				
ANR	1681861	IdentifierDecl	"res = ipv6_getaddrinfo ( hostname . Value ( ) , NULL , ai )"		1681824	0					
ANR	1681862	IdentifierDeclType	bool		1681824	0					
ANR	1681863	Identifier	res		1681824	1					
ANR	1681864	AssignmentExpression	"res = ipv6_getaddrinfo ( hostname . Value ( ) , NULL , ai )"		1681824	2		=			
ANR	1681865	Identifier	res		1681824	0					
ANR	1681866	CallExpression	"ipv6_getaddrinfo ( hostname . Value ( ) , NULL , ai )"		1681824	1					
ANR	1681867	Callee	ipv6_getaddrinfo		1681824	0					
ANR	1681868	Identifier	ipv6_getaddrinfo		1681824	0					
ANR	1681869	ArgumentList	hostname . Value ( )		1681824	1					
ANR	1681870	Argument	hostname . Value ( )		1681824	0					
ANR	1681871	CallExpression	hostname . Value ( )		1681824	0					
ANR	1681872	Callee	hostname . Value		1681824	0					
ANR	1681873	MemberAccess	hostname . Value		1681824	0					
ANR	1681874	Identifier	hostname		1681824	0					
ANR	1681875	Identifier	Value		1681824	1					
ANR	1681876	ArgumentList			1681824	1					
ANR	1681877	Argument	NULL		1681824	1					
ANR	1681878	Identifier	NULL		1681824	0					
ANR	1681879	Argument	ai		1681824	2					
ANR	1681880	Identifier	ai		1681824	0					
ANR	1681881	IfStatement	if ( res )		1681824	2					
ANR	1681882	Condition	res	164:6:4577:4579	1681824	0	True				
ANR	1681883	Identifier	res		1681824	0					
ANR	1681884	CompoundStatement		10:11:192:192	1681824	1					
ANR	1681885	ReturnStatement	return ret ;	165:3:4587:4597	1681824	0	True				
ANR	1681886	Identifier	ret		1681824	0					
ANR	1681887	WhileStatement	while ( addrinfo * info = ai . next ( ) )		1681824	3					
ANR	1681888	Condition	addrinfo * info = ai . next ( )	168:9:4613:4638	1681824	0	True				
ANR	1681889	AssignmentExpression	addrinfo * info = ai . next ( )		1681824	0		=			
ANR	1681890	MultiplicativeExpression	addrinfo * info		1681824	0		*			
ANR	1681891	Identifier	addrinfo		1681824	0					
ANR	1681892	Identifier	info		1681824	1					
ANR	1681893	CallExpression	ai . next ( )		1681824	1					
ANR	1681894	Callee	ai . next		1681824	0					
ANR	1681895	MemberAccess	ai . next		1681824	0					
ANR	1681896	Identifier	ai		1681824	0					
ANR	1681897	Identifier	next		1681824	1					
ANR	1681898	ArgumentList			1681824	1					
ANR	1681899	CompoundStatement		14:37:251:251	1681824	1					
ANR	1681900	IfStatement	if ( info -> ai_canonname )		1681824	0					
ANR	1681901	Condition	info -> ai_canonname	169:7:4650:4667	1681824	0	True				
ANR	1681902	PtrMemberAccess	info -> ai_canonname		1681824	0					
ANR	1681903	Identifier	info		1681824	0					
ANR	1681904	Identifier	ai_canonname		1681824	1					
ANR	1681905	CompoundStatement		15:27:280:280	1681824	1					
ANR	1681906	IfStatement	"if ( strchr ( info -> ai_canonname , '.' ) )"		1681824	0					
ANR	1681907	Condition	"strchr ( info -> ai_canonname , '.' )"	170:8:4680:4710	1681824	0	True				
ANR	1681908	CallExpression	"strchr ( info -> ai_canonname , '.' )"		1681824	0					
ANR	1681909	Callee	strchr		1681824	0					
ANR	1681910	Identifier	strchr		1681824	0					
ANR	1681911	ArgumentList	info -> ai_canonname		1681824	1					
ANR	1681912	Argument	info -> ai_canonname		1681824	0					
ANR	1681913	PtrMemberAccess	info -> ai_canonname		1681824	0					
ANR	1681914	Identifier	info		1681824	0					
ANR	1681915	Identifier	ai_canonname		1681824	1					
ANR	1681916	Argument	'.'		1681824	1					
ANR	1681917	PrimaryExpression	'.'		1681824	0					
ANR	1681918	ReturnStatement	return info -> ai_canonname ;	171:5:4718:4743	1681824	1	True				
ANR	1681919	PtrMemberAccess	info -> ai_canonname		1681824	0					
ANR	1681920	Identifier	info		1681824	0					
ANR	1681921	Identifier	ai_canonname		1681824	1					
ANR	1681922	IdentifierDeclStatement	hostent * h = gethostbyname ( hostname . Value ( ) ) ;	175:2:4757:4801	1681824	4	True				
ANR	1681923	IdentifierDecl	* h = gethostbyname ( hostname . Value ( ) )		1681824	0					
ANR	1681924	IdentifierDeclType	hostent *		1681824	0					
ANR	1681925	Identifier	h		1681824	1					
ANR	1681926	AssignmentExpression	* h = gethostbyname ( hostname . Value ( ) )		1681824	2		=			
ANR	1681927	Identifier	h		1681824	0					
ANR	1681928	CallExpression	gethostbyname ( hostname . Value ( ) )		1681824	1					
ANR	1681929	Callee	gethostbyname		1681824	0					
ANR	1681930	Identifier	gethostbyname		1681824	0					
ANR	1681931	ArgumentList	hostname . Value ( )		1681824	1					
ANR	1681932	Argument	hostname . Value ( )		1681824	0					
ANR	1681933	CallExpression	hostname . Value ( )		1681824	0					
ANR	1681934	Callee	hostname . Value		1681824	0					
ANR	1681935	MemberAccess	hostname . Value		1681824	0					
ANR	1681936	Identifier	hostname		1681824	0					
ANR	1681937	Identifier	Value		1681824	1					
ANR	1681938	ArgumentList			1681824	1					
ANR	1681939	IfStatement	if ( h && h -> h_aliases && * h -> h_aliases )		1681824	5					
ANR	1681940	Condition	h && h -> h_aliases && * h -> h_aliases	176:6:4809:4842	1681824	0	True				
ANR	1681941	AndExpression	h && h -> h_aliases && * h -> h_aliases		1681824	0		&&			
ANR	1681942	Identifier	h		1681824	0					
ANR	1681943	AndExpression	h -> h_aliases && * h -> h_aliases		1681824	1		&&			
ANR	1681944	PtrMemberAccess	h -> h_aliases		1681824	0					
ANR	1681945	Identifier	h		1681824	0					
ANR	1681946	Identifier	h_aliases		1681824	1					
ANR	1681947	UnaryOperationExpression	* h -> h_aliases		1681824	1					
ANR	1681948	UnaryOperator	*		1681824	0					
ANR	1681949	PtrMemberAccess	h -> h_aliases		1681824	1					
ANR	1681950	Identifier	h		1681824	0					
ANR	1681951	Identifier	h_aliases		1681824	1					
ANR	1681952	CompoundStatement		22:42:455:455	1681824	1					
ANR	1681953	ForStatement	for ( char * * alias = h -> h_aliases ; * alias ; ++ alias )		1681824	0					
ANR	1681954	ForInit	char * * alias = h -> h_aliases ;	177:8:4855:4882	1681824	0	True				
ANR	1681955	IdentifierDeclStatement	char * * alias = h -> h_aliases ;		1681824	0					
ANR	1681956	IdentifierDecl	* * alias = h -> h_aliases		1681824	0					
ANR	1681957	IdentifierDeclType	char * *		1681824	0					
ANR	1681958	Identifier	alias		1681824	1					
ANR	1681959	AssignmentExpression	* * alias = h -> h_aliases		1681824	2		=			
ANR	1681960	Identifier	alias		1681824	0					
ANR	1681961	PtrMemberAccess	h -> h_aliases		1681824	1					
ANR	1681962	Identifier	h		1681824	0					
ANR	1681963	Identifier	h_aliases		1681824	1					
ANR	1681964	Condition	* alias	177:37:4884:4889	1681824	1	True				
ANR	1681965	UnaryOperationExpression	* alias		1681824	0					
ANR	1681966	UnaryOperator	*		1681824	0					
ANR	1681967	Identifier	alias		1681824	1					
ANR	1681968	UnaryExpression	++ alias	177:45:4892:4898	1681824	2	True				
ANR	1681969	IncDec	++		1681824	0					
ANR	1681970	Identifier	alias		1681824	1					
ANR	1681971	CompoundStatement		23:54:511:511	1681824	3					
ANR	1681972	IfStatement	"if ( strchr ( * alias , '.' ) )"		1681824	0					
ANR	1681973	Condition	"strchr ( * alias , '.' )"	178:8:4911:4929	1681824	0	True				
ANR	1681974	CallExpression	"strchr ( * alias , '.' )"		1681824	0					
ANR	1681975	Callee	strchr		1681824	0					
ANR	1681976	Identifier	strchr		1681824	0					
ANR	1681977	ArgumentList	* alias		1681824	1					
ANR	1681978	Argument	* alias		1681824	0					
ANR	1681979	UnaryOperationExpression	* alias		1681824	0					
ANR	1681980	UnaryOperator	*		1681824	0					
ANR	1681981	Identifier	alias		1681824	1					
ANR	1681982	Argument	'.'		1681824	1					
ANR	1681983	PrimaryExpression	'.'		1681824	0					
ANR	1681984	ReturnStatement	return * alias ;	179:5:4937:4950	1681824	1	True				
ANR	1681985	UnaryOperationExpression	* alias		1681824	0					
ANR	1681986	UnaryOperator	*		1681824	0					
ANR	1681987	Identifier	alias		1681824	1					
ANR	1681988	IdentifierDeclStatement	MyString default_domain ;	184:1:4966:4989	1681824	3	True				
ANR	1681989	IdentifierDecl	default_domain		1681824	0					
ANR	1681990	IdentifierDeclType	MyString		1681824	0					
ANR	1681991	Identifier	default_domain		1681824	1					
ANR	1681992	IfStatement	"if ( param ( default_domain , ""DEFAULT_DOMAIN_NAME"" ) )"		1681824	4					
ANR	1681993	Condition	"param ( default_domain , ""DEFAULT_DOMAIN_NAME"" )"	185:5:4996:5039	1681824	0	True				
ANR	1681994	CallExpression	"param ( default_domain , ""DEFAULT_DOMAIN_NAME"" )"		1681824	0					
ANR	1681995	Callee	param		1681824	0					
ANR	1681996	Identifier	param		1681824	0					
ANR	1681997	ArgumentList	default_domain		1681824	1					
ANR	1681998	Argument	default_domain		1681824	0					
ANR	1681999	Identifier	default_domain		1681824	0					
ANR	1682000	Argument	"""DEFAULT_DOMAIN_NAME"""		1681824	1					
ANR	1682001	PrimaryExpression	"""DEFAULT_DOMAIN_NAME"""		1681824	0					
ANR	1682002	CompoundStatement		31:51:652:652	1681824	1					
ANR	1682003	ExpressionStatement	ret = hostname	186:2:5046:5060	1681824	0	True				
ANR	1682004	AssignmentExpression	ret = hostname		1681824	0		=			
ANR	1682005	Identifier	ret		1681824	0					
ANR	1682006	Identifier	hostname		1681824	1					
ANR	1682007	IfStatement	if ( ret [ ret . Length ( ) - 1 ] != '.' )		1681824	1					
ANR	1682008	Condition	ret [ ret . Length ( ) - 1 ] != '.'	187:6:5068:5095	1681824	0	True				
ANR	1682009	EqualityExpression	ret [ ret . Length ( ) - 1 ] != '.'		1681824	0		!=			
ANR	1682010	ArrayIndexing	ret [ ret . Length ( ) - 1 ]		1681824	0					
ANR	1682011	Identifier	ret		1681824	0					
ANR	1682012	AdditiveExpression	ret . Length ( ) - 1		1681824	1		-			
ANR	1682013	CallExpression	ret . Length ( )		1681824	0					
ANR	1682014	Callee	ret . Length		1681824	0					
ANR	1682015	MemberAccess	ret . Length		1681824	0					
ANR	1682016	Identifier	ret		1681824	0					
ANR	1682017	Identifier	Length		1681824	1					
ANR	1682018	ArgumentList			1681824	1					
ANR	1682019	PrimaryExpression	1		1681824	1					
ANR	1682020	PrimaryExpression	'.'		1681824	1					
ANR	1682021	ExpressionStatement	"ret += ""."""	188:3:5101:5111	1681824	1	True				
ANR	1682022	AssignmentExpression	"ret += ""."""		1681824	0		+=			
ANR	1682023	Identifier	ret		1681824	0					
ANR	1682024	PrimaryExpression	"""."""		1681824	1					
ANR	1682025	ExpressionStatement	ret += default_domain	189:2:5115:5136	1681824	2	True				
ANR	1682026	AssignmentExpression	ret += default_domain		1681824	0		+=			
ANR	1682027	Identifier	ret		1681824	0					
ANR	1682028	Identifier	default_domain		1681824	1					
ANR	1682029	ReturnStatement	return ret ;	191:1:5142:5152	1681824	5	True				
ANR	1682030	Identifier	ret		1681824	0					
ANR	1682031	ReturnType	MyString		1681824	1					
ANR	1682032	Identifier	get_fqdn_from_hostname		1681824	2					
ANR	1682033	ParameterList	const MyString & hostname		1681824	3					
ANR	1682034	Parameter	const MyString & hostname	155:32:4363:4386	1681824	0	True				
ANR	1682035	ParameterType	const MyString &		1681824	0					
ANR	1682036	Identifier	hostname		1681824	1					
ANR	1682037	CFGEntryNode	ENTRY		1681824		True				
ANR	1682038	CFGExitNode	EXIT		1681824		True				
ANR	1682039	Symbol	hostname . Value		1681824						
ANR	1682040	Symbol	addrinfo		1681824						
ANR	1682041	Symbol	info -> ai_canonname		1681824						
ANR	1682042	Symbol	strchr		1681824						
ANR	1682043	Symbol	* ret		1681824						
ANR	1682044	Symbol	ret . Length		1681824						
ANR	1682045	Symbol	h -> h_aliases		1681824						
ANR	1682046	Symbol	hostname		1681824						
ANR	1682047	Symbol	* ret . Length		1681824						
ANR	1682048	Symbol	param		1681824						
ANR	1682049	Symbol	alias		1681824						
ANR	1682050	Symbol	ai . next		1681824						
ANR	1682051	Symbol	* h -> h_aliases		1681824						
ANR	1682052	Symbol	default_domain		1681824						
ANR	1682053	Symbol	nodns_enabled		1681824						
ANR	1682054	Symbol	info		1681824						
ANR	1682055	Symbol	ret		1681824						
ANR	1682056	Symbol	res		1681824						
ANR	1682057	Symbol	gethostbyname		1681824						
ANR	1682058	Symbol	NULL		1681824						
ANR	1682059	Symbol	* * h		1681824						
ANR	1682060	Symbol	ipv6_getaddrinfo		1681824						
ANR	1682061	Symbol	ai		1681824						
ANR	1682062	Symbol	h		1681824						
ANR	1682063	Symbol	hostname . FindChar		1681824						
ANR	1682064	Symbol	* alias		1681824						
ANR	1682065	Symbol	* h		1681824						
ANR	1682066	Symbol	* info		1681824						
ANR	1682067	Function	get_fqdn_and_ip_from_hostname	194:0:5157:6682							
ANR	1682068	FunctionDef	"get_fqdn_and_ip_from_hostname (const MyString & hostname , MyString & fqdn , condor_sockaddr & addr)"		1682067	0					
ANR	1682069	CompoundStatement		195:41:5258:6682	1682067	0					
ANR	1682070	IdentifierDeclStatement	MyString ret ;	197:1:5262:5274	1682067	0	True				
ANR	1682071	IdentifierDecl	ret		1682067	0					
ANR	1682072	IdentifierDeclType	MyString		1682067	0					
ANR	1682073	Identifier	ret		1682067	1					
ANR	1682074	IdentifierDeclStatement	condor_sockaddr ret_addr ;	198:1:5277:5301	1682067	1	True				
ANR	1682075	IdentifierDecl	ret_addr		1682067	0					
ANR	1682076	IdentifierDeclType	condor_sockaddr		1682067	0					
ANR	1682077	Identifier	ret_addr		1682067	1					
ANR	1682078	IdentifierDeclStatement	bool found_ip = false ;	199:1:5304:5325	1682067	2	True				
ANR	1682079	IdentifierDecl	found_ip = false		1682067	0					
ANR	1682080	IdentifierDeclType	bool		1682067	0					
ANR	1682081	Identifier	found_ip		1682067	1					
ANR	1682082	AssignmentExpression	found_ip = false		1682067	2		=			
ANR	1682083	Identifier	false		1682067	0					
ANR	1682084	Identifier	false		1682067	1					
ANR	1682085	IfStatement	if ( hostname . FindChar ( '.' ) != - 1 )		1682067	3					
ANR	1682086	Condition	hostname . FindChar ( '.' ) != - 1	202:5:5407:5434	1682067	0	True				
ANR	1682087	EqualityExpression	hostname . FindChar ( '.' ) != - 1		1682067	0		!=			
ANR	1682088	CallExpression	hostname . FindChar ( '.' )		1682067	0					
ANR	1682089	Callee	hostname . FindChar		1682067	0					
ANR	1682090	MemberAccess	hostname . FindChar		1682067	0					
ANR	1682091	Identifier	hostname		1682067	0					
ANR	1682092	Identifier	FindChar		1682067	1					
ANR	1682093	ArgumentList	'.'		1682067	1					
ANR	1682094	Argument	'.'		1682067	0					
ANR	1682095	PrimaryExpression	'.'		1682067	0					
ANR	1682096	UnaryOperationExpression	- 1		1682067	1					
ANR	1682097	UnaryOperator	-		1682067	0					
ANR	1682098	PrimaryExpression	1		1682067	1					
ANR	1682099	CompoundStatement		8:35:178:178	1682067	1					
ANR	1682100	ExpressionStatement	ret = hostname	203:2:5441:5455	1682067	0	True				
ANR	1682101	AssignmentExpression	ret = hostname		1682067	0		=			
ANR	1682102	Identifier	ret		1682067	0					
ANR	1682103	Identifier	hostname		1682067	1					
ANR	1682104	IfStatement	if ( nodns_enabled ( ) )		1682067	4					
ANR	1682105	Condition	nodns_enabled ( )	206:5:5466:5480	1682067	0	True				
ANR	1682106	CallExpression	nodns_enabled ( )		1682067	0					
ANR	1682107	Callee	nodns_enabled		1682067	0					
ANR	1682108	Identifier	nodns_enabled		1682067	0					
ANR	1682109	ArgumentList			1682067	1					
ANR	1682110	CompoundStatement		12:22:224:224	1682067	1					
ANR	1682111	ExpressionStatement	ret_addr = convert_hostname_to_ipaddr ( hostname )	208:2:5553:5600	1682067	0	True				
ANR	1682112	AssignmentExpression	ret_addr = convert_hostname_to_ipaddr ( hostname )		1682067	0		=			
ANR	1682113	Identifier	ret_addr		1682067	0					
ANR	1682114	CallExpression	convert_hostname_to_ipaddr ( hostname )		1682067	1					
ANR	1682115	Callee	convert_hostname_to_ipaddr		1682067	0					
ANR	1682116	Identifier	convert_hostname_to_ipaddr		1682067	0					
ANR	1682117	ArgumentList	hostname		1682067	1					
ANR	1682118	Argument	hostname		1682067	0					
ANR	1682119	Identifier	hostname		1682067	0					
ANR	1682120	ExpressionStatement	found_ip = true	209:2:5604:5619	1682067	1	True				
ANR	1682121	AssignmentExpression	found_ip = true		1682067	0		=			
ANR	1682122	Identifier	found_ip		1682067	0					
ANR	1682123	Identifier	true		1682067	1					
ANR	1682124	ElseStatement	else		1682067	0					
ANR	1682125	CompoundStatement		34:2:789:833	1682067	0					
ANR	1682126	IdentifierDeclStatement	addrinfo_iterator ai ;	214:2:5767:5787	1682067	0	True				
ANR	1682127	IdentifierDecl	ai		1682067	0					
ANR	1682128	IdentifierDeclType	addrinfo_iterator		1682067	0					
ANR	1682129	Identifier	ai		1682067	1					
ANR	1682130	IdentifierDeclStatement	"bool res = ipv6_getaddrinfo ( hostname . Value ( ) , NULL , ai ) ;"	215:2:5791:5847	1682067	1	True				
ANR	1682131	IdentifierDecl	"res = ipv6_getaddrinfo ( hostname . Value ( ) , NULL , ai )"		1682067	0					
ANR	1682132	IdentifierDeclType	bool		1682067	0					
ANR	1682133	Identifier	res		1682067	1					
ANR	1682134	AssignmentExpression	"res = ipv6_getaddrinfo ( hostname . Value ( ) , NULL , ai )"		1682067	2		=			
ANR	1682135	Identifier	res		1682067	0					
ANR	1682136	CallExpression	"ipv6_getaddrinfo ( hostname . Value ( ) , NULL , ai )"		1682067	1					
ANR	1682137	Callee	ipv6_getaddrinfo		1682067	0					
ANR	1682138	Identifier	ipv6_getaddrinfo		1682067	0					
ANR	1682139	ArgumentList	hostname . Value ( )		1682067	1					
ANR	1682140	Argument	hostname . Value ( )		1682067	0					
ANR	1682141	CallExpression	hostname . Value ( )		1682067	0					
ANR	1682142	Callee	hostname . Value		1682067	0					
ANR	1682143	MemberAccess	hostname . Value		1682067	0					
ANR	1682144	Identifier	hostname		1682067	0					
ANR	1682145	Identifier	Value		1682067	1					
ANR	1682146	ArgumentList			1682067	1					
ANR	1682147	Argument	NULL		1682067	1					
ANR	1682148	Identifier	NULL		1682067	0					
ANR	1682149	Argument	ai		1682067	2					
ANR	1682150	Identifier	ai		1682067	0					
ANR	1682151	IfStatement	if ( res )		1682067	2					
ANR	1682152	Condition	res	216:6:5855:5857	1682067	0	True				
ANR	1682153	Identifier	res		1682067	0					
ANR	1682154	CompoundStatement		22:11:601:601	1682067	1					
ANR	1682155	ReturnStatement	return 0 ;	217:3:5865:5873	1682067	0	True				
ANR	1682156	PrimaryExpression	0		1682067	0					
ANR	1682157	WhileStatement	while ( addrinfo * info = ai . next ( ) )		1682067	3					
ANR	1682158	Condition	addrinfo * info = ai . next ( )	220:9:5889:5914	1682067	0	True				
ANR	1682159	AssignmentExpression	addrinfo * info = ai . next ( )		1682067	0		=			
ANR	1682160	MultiplicativeExpression	addrinfo * info		1682067	0		*			
ANR	1682161	Identifier	addrinfo		1682067	0					
ANR	1682162	Identifier	info		1682067	1					
ANR	1682163	CallExpression	ai . next ( )		1682067	1					
ANR	1682164	Callee	ai . next		1682067	0					
ANR	1682165	MemberAccess	ai . next		1682067	0					
ANR	1682166	Identifier	ai		1682067	0					
ANR	1682167	Identifier	next		1682067	1					
ANR	1682168	ArgumentList			1682067	1					
ANR	1682169	CompoundStatement		26:37:658:658	1682067	1					
ANR	1682170	IfStatement	if ( info -> ai_canonname )		1682067	0					
ANR	1682171	Condition	info -> ai_canonname	221:7:5926:5943	1682067	0	True				
ANR	1682172	PtrMemberAccess	info -> ai_canonname		1682067	0					
ANR	1682173	Identifier	info		1682067	0					
ANR	1682174	Identifier	ai_canonname		1682067	1					
ANR	1682175	CompoundStatement		27:27:687:687	1682067	1					
ANR	1682176	ExpressionStatement	fqdn = info -> ai_canonname	222:4:5952:5977	1682067	0	True				
ANR	1682177	AssignmentExpression	fqdn = info -> ai_canonname		1682067	0		=			
ANR	1682178	Identifier	fqdn		1682067	0					
ANR	1682179	PtrMemberAccess	info -> ai_canonname		1682067	1					
ANR	1682180	Identifier	info		1682067	0					
ANR	1682181	Identifier	ai_canonname		1682067	1					
ANR	1682182	ExpressionStatement	addr = condor_sockaddr ( info -> ai_addr )	223:4:5983:6020	1682067	1	True				
ANR	1682183	AssignmentExpression	addr = condor_sockaddr ( info -> ai_addr )		1682067	0		=			
ANR	1682184	Identifier	addr		1682067	0					
ANR	1682185	CallExpression	condor_sockaddr ( info -> ai_addr )		1682067	1					
ANR	1682186	Callee	condor_sockaddr		1682067	0					
ANR	1682187	Identifier	condor_sockaddr		1682067	0					
ANR	1682188	ArgumentList	info -> ai_addr		1682067	1					
ANR	1682189	Argument	info -> ai_addr		1682067	0					
ANR	1682190	PtrMemberAccess	info -> ai_addr		1682067	0					
ANR	1682191	Identifier	info		1682067	0					
ANR	1682192	Identifier	ai_addr		1682067	1					
ANR	1682193	ReturnStatement	return 1 ;	224:4:6026:6034	1682067	2	True				
ANR	1682194	PrimaryExpression	1		1682067	0					
ANR	1682195	IdentifierDeclStatement	hostent * h = gethostbyname ( hostname . Value ( ) ) ;	228:2:6048:6092	1682067	4	True				
ANR	1682196	IdentifierDecl	* h = gethostbyname ( hostname . Value ( ) )		1682067	0					
ANR	1682197	IdentifierDeclType	hostent *		1682067	0					
ANR	1682198	Identifier	h		1682067	1					
ANR	1682199	AssignmentExpression	* h = gethostbyname ( hostname . Value ( ) )		1682067	2		=			
ANR	1682200	Identifier	h		1682067	0					
ANR	1682201	CallExpression	gethostbyname ( hostname . Value ( ) )		1682067	1					
ANR	1682202	Callee	gethostbyname		1682067	0					
ANR	1682203	Identifier	gethostbyname		1682067	0					
ANR	1682204	ArgumentList	hostname . Value ( )		1682067	1					
ANR	1682205	Argument	hostname . Value ( )		1682067	0					
ANR	1682206	CallExpression	hostname . Value ( )		1682067	0					
ANR	1682207	Callee	hostname . Value		1682067	0					
ANR	1682208	MemberAccess	hostname . Value		1682067	0					
ANR	1682209	Identifier	hostname		1682067	0					
ANR	1682210	Identifier	Value		1682067	1					
ANR	1682211	ArgumentList			1682067	1					
ANR	1682212	IfStatement	if ( h && h -> h_aliases && * h -> h_aliases )		1682067	5					
ANR	1682213	Condition	h && h -> h_aliases && * h -> h_aliases	229:6:6100:6133	1682067	0	True				
ANR	1682214	AndExpression	h && h -> h_aliases && * h -> h_aliases		1682067	0		&&			
ANR	1682215	Identifier	h		1682067	0					
ANR	1682216	AndExpression	h -> h_aliases && * h -> h_aliases		1682067	1		&&			
ANR	1682217	PtrMemberAccess	h -> h_aliases		1682067	0					
ANR	1682218	Identifier	h		1682067	0					
ANR	1682219	Identifier	h_aliases		1682067	1					
ANR	1682220	UnaryOperationExpression	* h -> h_aliases		1682067	1					
ANR	1682221	UnaryOperator	*		1682067	0					
ANR	1682222	PtrMemberAccess	h -> h_aliases		1682067	1					
ANR	1682223	Identifier	h		1682067	0					
ANR	1682224	Identifier	h_aliases		1682067	1					
ANR	1682225	CompoundStatement		35:42:877:877	1682067	1					
ANR	1682226	ForStatement	for ( char * * alias = h -> h_aliases ; * alias ; ++ alias )		1682067	0					
ANR	1682227	ForInit	char * * alias = h -> h_aliases ;	230:8:6146:6173	1682067	0	True				
ANR	1682228	IdentifierDeclStatement	char * * alias = h -> h_aliases ;		1682067	0					
ANR	1682229	IdentifierDecl	* * alias = h -> h_aliases		1682067	0					
ANR	1682230	IdentifierDeclType	char * *		1682067	0					
ANR	1682231	Identifier	alias		1682067	1					
ANR	1682232	AssignmentExpression	* * alias = h -> h_aliases		1682067	2		=			
ANR	1682233	Identifier	alias		1682067	0					
ANR	1682234	PtrMemberAccess	h -> h_aliases		1682067	1					
ANR	1682235	Identifier	h		1682067	0					
ANR	1682236	Identifier	h_aliases		1682067	1					
ANR	1682237	Condition	* alias	230:37:6175:6180	1682067	1	True				
ANR	1682238	UnaryOperationExpression	* alias		1682067	0					
ANR	1682239	UnaryOperator	*		1682067	0					
ANR	1682240	Identifier	alias		1682067	1					
ANR	1682241	UnaryExpression	++ alias	230:45:6183:6189	1682067	2	True				
ANR	1682242	IncDec	++		1682067	0					
ANR	1682243	Identifier	alias		1682067	1					
ANR	1682244	CompoundStatement		36:54:933:933	1682067	3					
ANR	1682245	IfStatement	"if ( strchr ( * alias , '.' ) )"		1682067	0					
ANR	1682246	Condition	"strchr ( * alias , '.' )"	231:8:6202:6220	1682067	0	True				
ANR	1682247	CallExpression	"strchr ( * alias , '.' )"		1682067	0					
ANR	1682248	Callee	strchr		1682067	0					
ANR	1682249	Identifier	strchr		1682067	0					
ANR	1682250	ArgumentList	* alias		1682067	1					
ANR	1682251	Argument	* alias		1682067	0					
ANR	1682252	UnaryOperationExpression	* alias		1682067	0					
ANR	1682253	UnaryOperator	*		1682067	0					
ANR	1682254	Identifier	alias		1682067	1					
ANR	1682255	Argument	'.'		1682067	1					
ANR	1682256	PrimaryExpression	'.'		1682067	0					
ANR	1682257	CompoundStatement		37:29:964:964	1682067	1					
ANR	1682258	ExpressionStatement	fqdn = * alias	232:5:6230:6243	1682067	0	True				
ANR	1682259	AssignmentExpression	fqdn = * alias		1682067	0		=			
ANR	1682260	Identifier	fqdn		1682067	0					
ANR	1682261	UnaryOperationExpression	* alias		1682067	1					
ANR	1682262	UnaryOperator	*		1682067	0					
ANR	1682263	Identifier	alias		1682067	1					
ANR	1682264	ExpressionStatement	addr = condor_sockaddr ( ( sockaddr * ) h -> h_addr )	233:5:6250:6294	1682067	1	True				
ANR	1682265	AssignmentExpression	addr = condor_sockaddr ( ( sockaddr * ) h -> h_addr )		1682067	0		=			
ANR	1682266	Identifier	addr		1682067	0					
ANR	1682267	CallExpression	condor_sockaddr ( ( sockaddr * ) h -> h_addr )		1682067	1					
ANR	1682268	Callee	condor_sockaddr		1682067	0					
ANR	1682269	Identifier	condor_sockaddr		1682067	0					
ANR	1682270	ArgumentList	( sockaddr * ) h -> h_addr		1682067	1					
ANR	1682271	Argument	( sockaddr * ) h -> h_addr		1682067	0					
ANR	1682272	CastExpression	( sockaddr * ) h -> h_addr		1682067	0					
ANR	1682273	CastTarget	sockaddr *		1682067	0					
ANR	1682274	PtrMemberAccess	h -> h_addr		1682067	1					
ANR	1682275	Identifier	h		1682067	0					
ANR	1682276	Identifier	h_addr		1682067	1					
ANR	1682277	ReturnStatement	return 1 ;	234:5:6301:6309	1682067	2	True				
ANR	1682278	PrimaryExpression	1		1682067	0					
ANR	1682279	IdentifierDeclStatement	MyString default_domain ;	240:1:6331:6354	1682067	5	True				
ANR	1682280	IdentifierDecl	default_domain		1682067	0					
ANR	1682281	IdentifierDeclType	MyString		1682067	0					
ANR	1682282	Identifier	default_domain		1682067	1					
ANR	1682283	IfStatement	"if ( ret . Length ( ) == 0 && param ( default_domain , ""DEFAULT_DOMAIN_NAME"" ) )"		1682067	6					
ANR	1682284	Condition	"ret . Length ( ) == 0 && param ( default_domain , ""DEFAULT_DOMAIN_NAME"" )"	243:5:6419:6483	1682067	0	True				
ANR	1682285	AndExpression	"ret . Length ( ) == 0 && param ( default_domain , ""DEFAULT_DOMAIN_NAME"" )"		1682067	0		&&			
ANR	1682286	EqualityExpression	ret . Length ( ) == 0		1682067	0		==			
ANR	1682287	CallExpression	ret . Length ( )		1682067	0					
ANR	1682288	Callee	ret . Length		1682067	0					
ANR	1682289	MemberAccess	ret . Length		1682067	0					
ANR	1682290	Identifier	ret		1682067	0					
ANR	1682291	Identifier	Length		1682067	1					
ANR	1682292	ArgumentList			1682067	1					
ANR	1682293	PrimaryExpression	0		1682067	1					
ANR	1682294	CallExpression	"param ( default_domain , ""DEFAULT_DOMAIN_NAME"" )"		1682067	1					
ANR	1682295	Callee	param		1682067	0					
ANR	1682296	Identifier	param		1682067	0					
ANR	1682297	ArgumentList	default_domain		1682067	1					
ANR	1682298	Argument	default_domain		1682067	0					
ANR	1682299	Identifier	default_domain		1682067	0					
ANR	1682300	Argument	"""DEFAULT_DOMAIN_NAME"""		1682067	1					
ANR	1682301	PrimaryExpression	"""DEFAULT_DOMAIN_NAME"""		1682067	0					
ANR	1682302	CompoundStatement		49:72:1227:1227	1682067	1					
ANR	1682303	ExpressionStatement	ret = hostname	244:2:6490:6504	1682067	0	True				
ANR	1682304	AssignmentExpression	ret = hostname		1682067	0		=			
ANR	1682305	Identifier	ret		1682067	0					
ANR	1682306	Identifier	hostname		1682067	1					
ANR	1682307	IfStatement	if ( ret [ ret . Length ( ) - 1 ] != '.' )		1682067	1					
ANR	1682308	Condition	ret [ ret . Length ( ) - 1 ] != '.'	245:6:6512:6539	1682067	0	True				
ANR	1682309	EqualityExpression	ret [ ret . Length ( ) - 1 ] != '.'		1682067	0		!=			
ANR	1682310	ArrayIndexing	ret [ ret . Length ( ) - 1 ]		1682067	0					
ANR	1682311	Identifier	ret		1682067	0					
ANR	1682312	AdditiveExpression	ret . Length ( ) - 1		1682067	1		-			
ANR	1682313	CallExpression	ret . Length ( )		1682067	0					
ANR	1682314	Callee	ret . Length		1682067	0					
ANR	1682315	MemberAccess	ret . Length		1682067	0					
ANR	1682316	Identifier	ret		1682067	0					
ANR	1682317	Identifier	Length		1682067	1					
ANR	1682318	ArgumentList			1682067	1					
ANR	1682319	PrimaryExpression	1		1682067	1					
ANR	1682320	PrimaryExpression	'.'		1682067	1					
ANR	1682321	ExpressionStatement	"ret += ""."""	246:3:6545:6555	1682067	1	True				
ANR	1682322	AssignmentExpression	"ret += ""."""		1682067	0		+=			
ANR	1682323	Identifier	ret		1682067	0					
ANR	1682324	PrimaryExpression	"""."""		1682067	1					
ANR	1682325	ExpressionStatement	ret += default_domain	247:2:6559:6580	1682067	2	True				
ANR	1682326	AssignmentExpression	ret += default_domain		1682067	0		+=			
ANR	1682327	Identifier	ret		1682067	0					
ANR	1682328	Identifier	default_domain		1682067	1					
ANR	1682329	IfStatement	if ( ret . Length ( ) > 0 && found_ip )		1682067	7					
ANR	1682330	Condition	ret . Length ( ) > 0 && found_ip	250:5:6591:6618	1682067	0	True				
ANR	1682331	AndExpression	ret . Length ( ) > 0 && found_ip		1682067	0		&&			
ANR	1682332	RelationalExpression	ret . Length ( ) > 0		1682067	0		>			
ANR	1682333	CallExpression	ret . Length ( )		1682067	0					
ANR	1682334	Callee	ret . Length		1682067	0					
ANR	1682335	MemberAccess	ret . Length		1682067	0					
ANR	1682336	Identifier	ret		1682067	0					
ANR	1682337	Identifier	Length		1682067	1					
ANR	1682338	ArgumentList			1682067	1					
ANR	1682339	PrimaryExpression	0		1682067	1					
ANR	1682340	Identifier	found_ip		1682067	1					
ANR	1682341	CompoundStatement		56:35:1362:1362	1682067	1					
ANR	1682342	ExpressionStatement	fqdn = ret	251:2:6625:6635	1682067	0	True				
ANR	1682343	AssignmentExpression	fqdn = ret		1682067	0		=			
ANR	1682344	Identifier	fqdn		1682067	0					
ANR	1682345	Identifier	ret		1682067	1					
ANR	1682346	ExpressionStatement	addr = ret_addr	252:2:6639:6654	1682067	1	True				
ANR	1682347	AssignmentExpression	addr = ret_addr		1682067	0		=			
ANR	1682348	Identifier	addr		1682067	0					
ANR	1682349	Identifier	ret_addr		1682067	1					
ANR	1682350	ReturnStatement	return 1 ;	253:2:6658:6666	1682067	2	True				
ANR	1682351	PrimaryExpression	1		1682067	0					
ANR	1682352	ReturnStatement	return 0 ;	255:1:6672:6680	1682067	8	True				
ANR	1682353	PrimaryExpression	0		1682067	0					
ANR	1682354	ReturnType	int		1682067	1					
ANR	1682355	Identifier	get_fqdn_and_ip_from_hostname		1682067	2					
ANR	1682356	ParameterList	"const MyString & hostname , MyString & fqdn , condor_sockaddr & addr"		1682067	3					
ANR	1682357	Parameter	const MyString & hostname	194:34:5191:5214	1682067	0	True				
ANR	1682358	ParameterType	const MyString &		1682067	0					
ANR	1682359	Identifier	hostname		1682067	1					
ANR	1682360	Parameter	MyString & fqdn	195:2:5219:5232	1682067	1	True				
ANR	1682361	ParameterType	MyString &		1682067	0					
ANR	1682362	Identifier	fqdn		1682067	1					
ANR	1682363	Parameter	condor_sockaddr & addr	195:18:5235:5255	1682067	2	True				
ANR	1682364	ParameterType	condor_sockaddr &		1682067	0					
ANR	1682365	Identifier	addr		1682067	1					
ANR	1682366	CFGEntryNode	ENTRY		1682067		True				
ANR	1682367	CFGExitNode	EXIT		1682067		True				
ANR	1682368	Symbol	hostname . Value		1682067						
ANR	1682369	Symbol	addrinfo		1682067						
ANR	1682370	Symbol	info -> ai_canonname		1682067						
ANR	1682371	Symbol	strchr		1682067						
ANR	1682372	Symbol	* ret		1682067						
ANR	1682373	Symbol	ret . Length		1682067						
ANR	1682374	Symbol	h -> h_aliases		1682067						
ANR	1682375	Symbol	hostname		1682067						
ANR	1682376	Symbol	* ret . Length		1682067						
ANR	1682377	Symbol	param		1682067						
ANR	1682378	Symbol	alias		1682067						
ANR	1682379	Symbol	condor_sockaddr		1682067						
ANR	1682380	Symbol	ai . next		1682067						
ANR	1682381	Symbol	addr		1682067						
ANR	1682382	Symbol	* h -> h_aliases		1682067						
ANR	1682383	Symbol	default_domain		1682067						
ANR	1682384	Symbol	nodns_enabled		1682067						
ANR	1682385	Symbol	info		1682067						
ANR	1682386	Symbol	ret		1682067						
ANR	1682387	Symbol	convert_hostname_to_ipaddr		1682067						
ANR	1682388	Symbol	res		1682067						
ANR	1682389	Symbol	gethostbyname		1682067						
ANR	1682390	Symbol	NULL		1682067						
ANR	1682391	Symbol	* * h		1682067						
ANR	1682392	Symbol	info -> ai_addr		1682067						
ANR	1682393	Symbol	fqdn		1682067						
ANR	1682394	Symbol	ipv6_getaddrinfo		1682067						
ANR	1682395	Symbol	false		1682067						
ANR	1682396	Symbol	ai		1682067						
ANR	1682397	Symbol	h		1682067						
ANR	1682398	Symbol	found_ip		1682067						
ANR	1682399	Symbol	hostname . FindChar		1682067						
ANR	1682400	Symbol	* alias		1682067						
ANR	1682401	Symbol	h -> h_addr		1682067						
ANR	1682402	Symbol	* h		1682067						
ANR	1682403	Symbol	true		1682067						
ANR	1682404	Symbol	ret_addr		1682067						
ANR	1682405	Symbol	* info		1682067						
ANR	1682406	Function	get_hostname	258:0:6685:7392							
ANR	1682407	FunctionDef	get_hostname (const condor_sockaddr & addr)		1682406	0					
ANR	1682408	CompoundStatement		258:51:6736:7392	1682406	0					
ANR	1682409	IdentifierDeclStatement	MyString ret ;	259:1:6739:6751	1682406	0	True				
ANR	1682410	IdentifierDecl	ret		1682406	0					
ANR	1682411	IdentifierDeclType	MyString		1682406	0					
ANR	1682412	Identifier	ret		1682406	1					
ANR	1682413	IfStatement	if ( nodns_enabled ( ) )		1682406	1					
ANR	1682414	Condition	nodns_enabled ( )	260:5:6758:6772	1682406	0	True				
ANR	1682415	CallExpression	nodns_enabled ( )		1682406	0					
ANR	1682416	Callee	nodns_enabled		1682406	0					
ANR	1682417	Identifier	nodns_enabled		1682406	0					
ANR	1682418	ArgumentList			1682406	1					
ANR	1682419	ReturnStatement	return convert_ipaddr_to_hostname ( addr ) ;	261:2:6777:6816	1682406	1	True				
ANR	1682420	CallExpression	convert_ipaddr_to_hostname ( addr )		1682406	0					
ANR	1682421	Callee	convert_ipaddr_to_hostname		1682406	0					
ANR	1682422	Identifier	convert_ipaddr_to_hostname		1682406	0					
ANR	1682423	ArgumentList	addr		1682406	1					
ANR	1682424	Argument	addr		1682406	0					
ANR	1682425	Identifier	addr		1682406	0					
ANR	1682426	IdentifierDeclStatement	condor_sockaddr targ_addr ;	263:1:6820:6845	1682406	2	True				
ANR	1682427	IdentifierDecl	targ_addr		1682406	0					
ANR	1682428	IdentifierDeclType	condor_sockaddr		1682406	0					
ANR	1682429	Identifier	targ_addr		1682406	1					
ANR	1682430	IfStatement	if ( addr . is_addr_any ( ) )		1682406	3					
ANR	1682431	Condition	addr . is_addr_any ( )	267:5:6963:6980	1682406	0	True				
ANR	1682432	CallExpression	addr . is_addr_any ( )		1682406	0					
ANR	1682433	Callee	addr . is_addr_any		1682406	0					
ANR	1682434	MemberAccess	addr . is_addr_any		1682406	0					
ANR	1682435	Identifier	addr		1682406	0					
ANR	1682436	Identifier	is_addr_any		1682406	1					
ANR	1682437	ArgumentList			1682406	1					
ANR	1682438	ExpressionStatement	targ_addr = get_local_ipaddr ( )	268:2:6985:7015	1682406	1	True				
ANR	1682439	AssignmentExpression	targ_addr = get_local_ipaddr ( )		1682406	0		=			
ANR	1682440	Identifier	targ_addr		1682406	0					
ANR	1682441	CallExpression	get_local_ipaddr ( )		1682406	1					
ANR	1682442	Callee	get_local_ipaddr		1682406	0					
ANR	1682443	Identifier	get_local_ipaddr		1682406	0					
ANR	1682444	ArgumentList			1682406	1					
ANR	1682445	ElseStatement	else		1682406	0					
ANR	1682446	ExpressionStatement	targ_addr = addr	270:2:7025:7041	1682406	0	True				
ANR	1682447	AssignmentExpression	targ_addr = addr		1682406	0		=			
ANR	1682448	Identifier	targ_addr		1682406	0					
ANR	1682449	Identifier	addr		1682406	1					
ANR	1682450	IdentifierDeclStatement	int e ;	272:1:7045:7050	1682406	4	True				
ANR	1682451	IdentifierDecl	e		1682406	0					
ANR	1682452	IdentifierDeclType	int		1682406	0					
ANR	1682453	Identifier	e		1682406	1					
ANR	1682454	IdentifierDeclStatement	char hostname [ NI_MAXHOST ] ;	273:1:7053:7078	1682406	5	True				
ANR	1682455	IdentifierDecl	hostname [ NI_MAXHOST ]		1682406	0					
ANR	1682456	IdentifierDeclType	char [ NI_MAXHOST ]		1682406	0					
ANR	1682457	Identifier	hostname		1682406	1					
ANR	1682458	Identifier	NI_MAXHOST		1682406	2					
ANR	1682459	IfStatement	if ( targ_addr . is_ipv6 ( ) )		1682406	6					
ANR	1682460	Condition	targ_addr . is_ipv6 ( )	278:5:7212:7230	1682406	0	True				
ANR	1682461	CallExpression	targ_addr . is_ipv6 ( )		1682406	0					
ANR	1682462	Callee	targ_addr . is_ipv6		1682406	0					
ANR	1682463	MemberAccess	targ_addr . is_ipv6		1682406	0					
ANR	1682464	Identifier	targ_addr		1682406	0					
ANR	1682465	Identifier	is_ipv6		1682406	1					
ANR	1682466	ArgumentList			1682406	1					
ANR	1682467	ExpressionStatement	targ_addr . set_scope_id ( 0 )	279:2:7235:7260	1682406	1	True				
ANR	1682468	CallExpression	targ_addr . set_scope_id ( 0 )		1682406	0					
ANR	1682469	Callee	targ_addr . set_scope_id		1682406	0					
ANR	1682470	MemberAccess	targ_addr . set_scope_id		1682406	0					
ANR	1682471	Identifier	targ_addr		1682406	0					
ANR	1682472	Identifier	set_scope_id		1682406	1					
ANR	1682473	ArgumentList	0		1682406	1					
ANR	1682474	Argument	0		1682406	0					
ANR	1682475	PrimaryExpression	0		1682406	0					
ANR	1682476	ExpressionStatement	"e = condor_getnameinfo ( targ_addr , hostname , sizeof ( hostname ) , NULL , 0 , 0 )"	281:1:7264:7337	1682406	7	True				
ANR	1682477	AssignmentExpression	"e = condor_getnameinfo ( targ_addr , hostname , sizeof ( hostname ) , NULL , 0 , 0 )"		1682406	0		=			
ANR	1682478	Identifier	e		1682406	0					
ANR	1682479	CallExpression	"condor_getnameinfo ( targ_addr , hostname , sizeof ( hostname ) , NULL , 0 , 0 )"		1682406	1					
ANR	1682480	Callee	condor_getnameinfo		1682406	0					
ANR	1682481	Identifier	condor_getnameinfo		1682406	0					
ANR	1682482	ArgumentList	targ_addr		1682406	1					
ANR	1682483	Argument	targ_addr		1682406	0					
ANR	1682484	Identifier	targ_addr		1682406	0					
ANR	1682485	Argument	hostname		1682406	1					
ANR	1682486	Identifier	hostname		1682406	0					
ANR	1682487	Argument	sizeof ( hostname )		1682406	2					
ANR	1682488	SizeofExpression	sizeof ( hostname )		1682406	0					
ANR	1682489	Sizeof	sizeof		1682406	0					
ANR	1682490	SizeofOperand	hostname		1682406	1					
ANR	1682491	Argument	NULL		1682406	3					
ANR	1682492	Identifier	NULL		1682406	0					
ANR	1682493	Argument	0		1682406	4					
ANR	1682494	PrimaryExpression	0		1682406	0					
ANR	1682495	Argument	0		1682406	5					
ANR	1682496	PrimaryExpression	0		1682406	0					
ANR	1682497	IfStatement	if ( e )		1682406	8					
ANR	1682498	Condition	e	282:5:7344:7344	1682406	0	True				
ANR	1682499	Identifier	e		1682406	0					
ANR	1682500	ReturnStatement	return ret ;	283:2:7349:7359	1682406	1	True				
ANR	1682501	Identifier	ret		1682406	0					
ANR	1682502	ExpressionStatement	ret = hostname	285:1:7363:7377	1682406	9	True				
ANR	1682503	AssignmentExpression	ret = hostname		1682406	0		=			
ANR	1682504	Identifier	ret		1682406	0					
ANR	1682505	Identifier	hostname		1682406	1					
ANR	1682506	ReturnStatement	return ret ;	286:1:7380:7390	1682406	10	True				
ANR	1682507	Identifier	ret		1682406	0					
ANR	1682508	ReturnType	MyString		1682406	1					
ANR	1682509	Identifier	get_hostname		1682406	2					
ANR	1682510	ParameterList	const condor_sockaddr & addr		1682406	3					
ANR	1682511	Parameter	const condor_sockaddr & addr	258:22:6707:6733	1682406	0	True				
ANR	1682512	ParameterType	const condor_sockaddr &		1682406	0					
ANR	1682513	Identifier	addr		1682406	1					
ANR	1682514	CFGEntryNode	ENTRY		1682406		True				
ANR	1682515	CFGExitNode	EXIT		1682406		True				
ANR	1682516	Symbol	ret		1682406						
ANR	1682517	Symbol	convert_ipaddr_to_hostname		1682406						
ANR	1682518	Symbol	targ_addr . is_ipv6		1682406						
ANR	1682519	Symbol	addr . is_addr_any		1682406						
ANR	1682520	Symbol	hostname		1682406						
ANR	1682521	Symbol	NULL		1682406						
ANR	1682522	Symbol	e		1682406						
ANR	1682523	Symbol	get_local_ipaddr		1682406						
ANR	1682524	Symbol	condor_getnameinfo		1682406						
ANR	1682525	Symbol	targ_addr		1682406						
ANR	1682526	Symbol	addr		1682406						
ANR	1682527	Symbol	nodns_enabled		1682406						
ANR	1682528	Function	get_hostname_with_alias	289:0:7395:8298							
ANR	1682529	FunctionDef	get_hostname_with_alias (const condor_sockaddr & addr)		1682528	0					
ANR	1682530	CompoundStatement		290:0:7470:8298	1682528	0					
ANR	1682531	IdentifierDeclStatement	std :: vector < MyString > ret ;	291:1:7473:7498	1682528	0	True				
ANR	1682532	IdentifierDecl	ret		1682528	0					
ANR	1682533	IdentifierDeclType	std :: vector < MyString >		1682528	0					
ANR	1682534	Identifier	ret		1682528	1					
ANR	1682535	IdentifierDeclStatement	MyString hostname = get_hostname ( addr ) ;	292:1:7501:7539	1682528	1	True				
ANR	1682536	IdentifierDecl	hostname = get_hostname ( addr )		1682528	0					
ANR	1682537	IdentifierDeclType	MyString		1682528	0					
ANR	1682538	Identifier	hostname		1682528	1					
ANR	1682539	AssignmentExpression	hostname = get_hostname ( addr )		1682528	2		=			
ANR	1682540	Identifier	hostname		1682528	0					
ANR	1682541	CallExpression	get_hostname ( addr )		1682528	1					
ANR	1682542	Callee	get_hostname		1682528	0					
ANR	1682543	Identifier	get_hostname		1682528	0					
ANR	1682544	ArgumentList	addr		1682528	1					
ANR	1682545	Argument	addr		1682528	0					
ANR	1682546	Identifier	addr		1682528	0					
ANR	1682547	IfStatement	if ( hostname . IsEmpty ( ) )		1682528	2					
ANR	1682548	Condition	hostname . IsEmpty ( )	293:5:7546:7563	1682528	0	True				
ANR	1682549	CallExpression	hostname . IsEmpty ( )		1682528	0					
ANR	1682550	Callee	hostname . IsEmpty		1682528	0					
ANR	1682551	MemberAccess	hostname . IsEmpty		1682528	0					
ANR	1682552	Identifier	hostname		1682528	0					
ANR	1682553	Identifier	IsEmpty		1682528	1					
ANR	1682554	ArgumentList			1682528	1					
ANR	1682555	ReturnStatement	return ret ;	294:2:7568:7578	1682528	1	True				
ANR	1682556	Identifier	ret		1682528	0					
ANR	1682557	ExpressionStatement	ret . push_back ( hostname )	295:1:7581:7604	1682528	3	True				
ANR	1682558	CallExpression	ret . push_back ( hostname )		1682528	0					
ANR	1682559	Callee	ret . push_back		1682528	0					
ANR	1682560	MemberAccess	ret . push_back		1682528	0					
ANR	1682561	Identifier	ret		1682528	0					
ANR	1682562	Identifier	push_back		1682528	1					
ANR	1682563	ArgumentList	hostname		1682528	1					
ANR	1682564	Argument	hostname		1682528	0					
ANR	1682565	Identifier	hostname		1682528	0					
ANR	1682566	IfStatement	if ( nodns_enabled ( ) )		1682528	4					
ANR	1682567	Condition	nodns_enabled ( )	297:5:7612:7626	1682528	0	True				
ANR	1682568	CallExpression	nodns_enabled ( )		1682528	0					
ANR	1682569	Callee	nodns_enabled		1682528	0					
ANR	1682570	Identifier	nodns_enabled		1682528	0					
ANR	1682571	ArgumentList			1682528	1					
ANR	1682572	ReturnStatement	return ret ;	298:2:7631:7641	1682528	1	True				
ANR	1682573	Identifier	ret		1682528	0					
ANR	1682574	IdentifierDeclStatement	hostent * ent ;	300:1:7687:7699	1682528	5	True				
ANR	1682575	IdentifierDecl	* ent		1682528	0					
ANR	1682576	IdentifierDeclType	hostent *		1682528	0					
ANR	1682577	Identifier	ent		1682528	1					
ANR	1682578	ExpressionStatement	ent = gethostbyname ( hostname . Value ( ) )	310:1:8122:8159	1682528	6	True				
ANR	1682579	AssignmentExpression	ent = gethostbyname ( hostname . Value ( ) )		1682528	0		=			
ANR	1682580	Identifier	ent		1682528	0					
ANR	1682581	CallExpression	gethostbyname ( hostname . Value ( ) )		1682528	1					
ANR	1682582	Callee	gethostbyname		1682528	0					
ANR	1682583	Identifier	gethostbyname		1682528	0					
ANR	1682584	ArgumentList	hostname . Value ( )		1682528	1					
ANR	1682585	Argument	hostname . Value ( )		1682528	0					
ANR	1682586	CallExpression	hostname . Value ( )		1682528	0					
ANR	1682587	Callee	hostname . Value		1682528	0					
ANR	1682588	MemberAccess	hostname . Value		1682528	0					
ANR	1682589	Identifier	hostname		1682528	0					
ANR	1682590	Identifier	Value		1682528	1					
ANR	1682591	ArgumentList			1682528	1					
ANR	1682592	IfStatement	if ( ! ent )		1682528	7					
ANR	1682593	Condition	! ent	312:5:8167:8170	1682528	0	True				
ANR	1682594	UnaryOperationExpression	! ent		1682528	0					
ANR	1682595	UnaryOperator	!		1682528	0					
ANR	1682596	Identifier	ent		1682528	1					
ANR	1682597	ReturnStatement	return ret ;	313:2:8175:8185	1682528	1	True				
ANR	1682598	Identifier	ret		1682528	0					
ANR	1682599	IdentifierDeclStatement	char * * alias = ent -> h_aliases ;	315:1:8189:8218	1682528	8	True				
ANR	1682600	IdentifierDecl	* * alias = ent -> h_aliases		1682528	0					
ANR	1682601	IdentifierDeclType	char * *		1682528	0					
ANR	1682602	Identifier	alias		1682528	1					
ANR	1682603	AssignmentExpression	* * alias = ent -> h_aliases		1682528	2		=			
ANR	1682604	Identifier	alias		1682528	0					
ANR	1682605	PtrMemberAccess	ent -> h_aliases		1682528	1					
ANR	1682606	Identifier	ent		1682528	0					
ANR	1682607	Identifier	h_aliases		1682528	1					
ANR	1682608	ForStatement	for ( ; * alias ; ++ alias )		1682528	9					
ANR	1682609	Condition	* alias	316:8:8228:8233	1682528	0	True				
ANR	1682610	UnaryOperationExpression	* alias		1682528	0					
ANR	1682611	UnaryOperator	*		1682528	0					
ANR	1682612	Identifier	alias		1682528	1					
ANR	1682613	UnaryExpression	++ alias	316:16:8236:8242	1682528	1	True				
ANR	1682614	IncDec	++		1682528	0					
ANR	1682615	Identifier	alias		1682528	1					
ANR	1682616	CompoundStatement		27:25:774:774	1682528	2					
ANR	1682617	ExpressionStatement	ret . push_back ( MyString ( * alias ) )	317:2:8249:8280	1682528	0	True				
ANR	1682618	CallExpression	ret . push_back ( MyString ( * alias ) )		1682528	0					
ANR	1682619	Callee	ret . push_back		1682528	0					
ANR	1682620	MemberAccess	ret . push_back		1682528	0					
ANR	1682621	Identifier	ret		1682528	0					
ANR	1682622	Identifier	push_back		1682528	1					
ANR	1682623	ArgumentList	MyString ( * alias )		1682528	1					
ANR	1682624	Argument	MyString ( * alias )		1682528	0					
ANR	1682625	CallExpression	MyString ( * alias )		1682528	0					
ANR	1682626	Callee	MyString		1682528	0					
ANR	1682627	Identifier	MyString		1682528	0					
ANR	1682628	ArgumentList	* alias		1682528	1					
ANR	1682629	Argument	* alias		1682528	0					
ANR	1682630	UnaryOperationExpression	* alias		1682528	0					
ANR	1682631	UnaryOperator	*		1682528	0					
ANR	1682632	Identifier	alias		1682528	1					
ANR	1682633	ReturnStatement	return ret ;	319:1:8286:8296	1682528	10	True				
ANR	1682634	Identifier	ret		1682528	0					
ANR	1682635	ReturnType	std :: vector < MyString >		1682528	1					
ANR	1682636	Identifier	get_hostname_with_alias		1682528	2					
ANR	1682637	ParameterList	const condor_sockaddr & addr		1682528	3					
ANR	1682638	Parameter	const condor_sockaddr & addr	289:46:7441:7467	1682528	0	True				
ANR	1682639	ParameterType	const condor_sockaddr &		1682528	0					
ANR	1682640	Identifier	addr		1682528	1					
ANR	1682641	CFGEntryNode	ENTRY		1682528		True				
ANR	1682642	CFGExitNode	EXIT		1682528		True				
ANR	1682643	Symbol	ret		1682528						
ANR	1682644	Symbol	gethostbyname		1682528						
ANR	1682645	Symbol	hostname . Value		1682528						
ANR	1682646	Symbol	ent		1682528						
ANR	1682647	Symbol	* ent		1682528						
ANR	1682648	Symbol	* alias		1682528						
ANR	1682649	Symbol	hostname		1682528						
ANR	1682650	Symbol	ent -> h_aliases		1682528						
ANR	1682651	Symbol	hostname . IsEmpty		1682528						
ANR	1682652	Symbol	alias		1682528						
ANR	1682653	Symbol	MyString		1682528						
ANR	1682654	Symbol	addr		1682528						
ANR	1682655	Symbol	get_hostname		1682528						
ANR	1682656	Symbol	nodns_enabled		1682528						
ANR	1682657	Function	get_full_hostname	324:0:8385:9050							
ANR	1682658	FunctionDef	get_full_hostname (const condor_sockaddr & addr)		1682657	0					
ANR	1682659	CompoundStatement		325:0:8441:9050	1682657	0					
ANR	1682660	IdentifierDeclStatement	MyString ret ;	327:1:8495:8507	1682657	0	True				
ANR	1682661	IdentifierDecl	ret		1682657	0					
ANR	1682662	IdentifierDeclType	MyString		1682657	0					
ANR	1682663	Identifier	ret		1682657	1					
ANR	1682664	IdentifierDeclStatement	std :: vector < MyString > hostnames = get_hostname_with_alias ( addr ) ;	328:1:8510:8573	1682657	1	True				
ANR	1682665	IdentifierDecl	hostnames = get_hostname_with_alias ( addr )		1682657	0					
ANR	1682666	IdentifierDeclType	std :: vector < MyString >		1682657	0					
ANR	1682667	Identifier	hostnames		1682657	1					
ANR	1682668	AssignmentExpression	hostnames = get_hostname_with_alias ( addr )		1682657	2		=			
ANR	1682669	Identifier	hostnames		1682657	0					
ANR	1682670	CallExpression	get_hostname_with_alias ( addr )		1682657	1					
ANR	1682671	Callee	get_hostname_with_alias		1682657	0					
ANR	1682672	Identifier	get_hostname_with_alias		1682657	0					
ANR	1682673	ArgumentList	addr		1682657	1					
ANR	1682674	Argument	addr		1682657	0					
ANR	1682675	Identifier	addr		1682657	0					
ANR	1682676	IfStatement	if ( hostnames . empty ( ) )		1682657	2					
ANR	1682677	Condition	hostnames . empty ( )	329:5:8580:8596	1682657	0	True				
ANR	1682678	CallExpression	hostnames . empty ( )		1682657	0					
ANR	1682679	Callee	hostnames . empty		1682657	0					
ANR	1682680	MemberAccess	hostnames . empty		1682657	0					
ANR	1682681	Identifier	hostnames		1682657	0					
ANR	1682682	Identifier	empty		1682657	1					
ANR	1682683	ArgumentList			1682657	1					
ANR	1682684	ReturnStatement	return ret ;	329:24:8599:8609	1682657	1	True				
ANR	1682685	Identifier	ret		1682657	0					
ANR	1682686	IdentifierDeclStatement	std :: vector < MyString > :: iterator iter ;	330:1:8612:8648	1682657	3	True				
ANR	1682687	IdentifierDecl	iter		1682657	0					
ANR	1682688	IdentifierDeclType	std :: vector < MyString > :: iterator		1682657	0					
ANR	1682689	Identifier	iter		1682657	1					
ANR	1682690	ForStatement	for ( iter = hostnames . begin ( ) ; iter != hostnames . end ( ) ; ++ iter )		1682657	4					
ANR	1682691	ForInit	iter = hostnames . begin ( ) ;	331:6:8656:8680	1682657	0	True				
ANR	1682692	AssignmentExpression	iter = hostnames . begin ( )		1682657	0		=			
ANR	1682693	Identifier	iter		1682657	0					
ANR	1682694	CallExpression	hostnames . begin ( )		1682657	1					
ANR	1682695	Callee	hostnames . begin		1682657	0					
ANR	1682696	MemberAccess	hostnames . begin		1682657	0					
ANR	1682697	Identifier	hostnames		1682657	0					
ANR	1682698	Identifier	begin		1682657	1					
ANR	1682699	ArgumentList			1682657	1					
ANR	1682700	Condition	iter != hostnames . end ( )	331:32:8682:8704	1682657	1	True				
ANR	1682701	EqualityExpression	iter != hostnames . end ( )		1682657	0		!=			
ANR	1682702	Identifier	iter		1682657	0					
ANR	1682703	CallExpression	hostnames . end ( )		1682657	1					
ANR	1682704	Callee	hostnames . end		1682657	0					
ANR	1682705	MemberAccess	hostnames . end		1682657	0					
ANR	1682706	Identifier	hostnames		1682657	0					
ANR	1682707	Identifier	end		1682657	1					
ANR	1682708	ArgumentList			1682657	1					
ANR	1682709	UnaryExpression	++ iter	331:57:8707:8712	1682657	2	True				
ANR	1682710	IncDec	++		1682657	0					
ANR	1682711	Identifier	iter		1682657	1					
ANR	1682712	CompoundStatement		8:2:277:298	1682657	3					
ANR	1682713	IdentifierDeclStatement	MyString & str = * iter ;	332:2:8719:8740	1682657	0	True				
ANR	1682714	IdentifierDecl	& str = * iter		1682657	0					
ANR	1682715	IdentifierDeclType	MyString &		1682657	0					
ANR	1682716	Identifier	str		1682657	1					
ANR	1682717	AssignmentExpression	& str = * iter		1682657	2		=			
ANR	1682718	Identifier	str		1682657	0					
ANR	1682719	UnaryOperationExpression	* iter		1682657	1					
ANR	1682720	UnaryOperator	*		1682657	0					
ANR	1682721	Identifier	iter		1682657	1					
ANR	1682722	IfStatement	if ( str . FindChar ( '.' ) != - 1 )		1682657	1					
ANR	1682723	Condition	str . FindChar ( '.' ) != - 1	333:6:8748:8770	1682657	0	True				
ANR	1682724	EqualityExpression	str . FindChar ( '.' ) != - 1		1682657	0		!=			
ANR	1682725	CallExpression	str . FindChar ( '.' )		1682657	0					
ANR	1682726	Callee	str . FindChar		1682657	0					
ANR	1682727	MemberAccess	str . FindChar		1682657	0					
ANR	1682728	Identifier	str		1682657	0					
ANR	1682729	Identifier	FindChar		1682657	1					
ANR	1682730	ArgumentList	'.'		1682657	1					
ANR	1682731	Argument	'.'		1682657	0					
ANR	1682732	PrimaryExpression	'.'		1682657	0					
ANR	1682733	UnaryOperationExpression	- 1		1682657	1					
ANR	1682734	UnaryOperator	-		1682657	0					
ANR	1682735	PrimaryExpression	1		1682657	1					
ANR	1682736	CompoundStatement		9:31:331:331	1682657	1					
ANR	1682737	ReturnStatement	return str ;	334:3:8778:8788	1682657	0	True				
ANR	1682738	Identifier	str		1682657	0					
ANR	1682739	IdentifierDeclStatement	MyString default_domain ;	338:1:8799:8822	1682657	5	True				
ANR	1682740	IdentifierDecl	default_domain		1682657	0					
ANR	1682741	IdentifierDeclType	MyString		1682657	0					
ANR	1682742	Identifier	default_domain		1682657	1					
ANR	1682743	IfStatement	"if ( param ( default_domain , ""DEFAULT_DOMAIN_NAME"" ) )"		1682657	6					
ANR	1682744	Condition	"param ( default_domain , ""DEFAULT_DOMAIN_NAME"" )"	339:5:8829:8872	1682657	0	True				
ANR	1682745	CallExpression	"param ( default_domain , ""DEFAULT_DOMAIN_NAME"" )"		1682657	0					
ANR	1682746	Callee	param		1682657	0					
ANR	1682747	Identifier	param		1682657	0					
ANR	1682748	ArgumentList	default_domain		1682657	1					
ANR	1682749	Argument	default_domain		1682657	0					
ANR	1682750	Identifier	default_domain		1682657	0					
ANR	1682751	Argument	"""DEFAULT_DOMAIN_NAME"""		1682657	1					
ANR	1682752	PrimaryExpression	"""DEFAULT_DOMAIN_NAME"""		1682657	0					
ANR	1682753	CompoundStatement		15:51:433:433	1682657	1					
ANR	1682754	ExpressionStatement	ret = * hostnames . begin ( )	341:2:8936:8960	1682657	0	True				
ANR	1682755	AssignmentExpression	ret = * hostnames . begin ( )		1682657	0		=			
ANR	1682756	Identifier	ret		1682657	0					
ANR	1682757	UnaryOperationExpression	* hostnames . begin ( )		1682657	1					
ANR	1682758	UnaryOperator	*		1682657	0					
ANR	1682759	CallExpression	hostnames . begin ( )		1682657	1					
ANR	1682760	Callee	hostnames . begin		1682657	0					
ANR	1682761	MemberAccess	hostnames . begin		1682657	0					
ANR	1682762	Identifier	hostnames		1682657	0					
ANR	1682763	Identifier	begin		1682657	1					
ANR	1682764	ArgumentList			1682657	1					
ANR	1682765	IfStatement	if ( default_domain [ 0 ] != '.' )		1682657	1					
ANR	1682766	Condition	default_domain [ 0 ] != '.'	342:6:8968:8991	1682657	0	True				
ANR	1682767	EqualityExpression	default_domain [ 0 ] != '.'		1682657	0		!=			
ANR	1682768	ArrayIndexing	default_domain [ 0 ]		1682657	0					
ANR	1682769	Identifier	default_domain		1682657	0					
ANR	1682770	PrimaryExpression	0		1682657	1					
ANR	1682771	PrimaryExpression	'.'		1682657	1					
ANR	1682772	ExpressionStatement	"ret += ""."""	343:3:8997:9007	1682657	1	True				
ANR	1682773	AssignmentExpression	"ret += ""."""		1682657	0		+=			
ANR	1682774	Identifier	ret		1682657	0					
ANR	1682775	PrimaryExpression	"""."""		1682657	1					
ANR	1682776	ExpressionStatement	ret += default_domain	344:2:9011:9032	1682657	2	True				
ANR	1682777	AssignmentExpression	ret += default_domain		1682657	0		+=			
ANR	1682778	Identifier	ret		1682657	0					
ANR	1682779	Identifier	default_domain		1682657	1					
ANR	1682780	ReturnStatement	return ret ;	346:1:9038:9048	1682657	7	True				
ANR	1682781	Identifier	ret		1682657	0					
ANR	1682782	ReturnType	MyString		1682657	1					
ANR	1682783	Identifier	get_full_hostname		1682657	2					
ANR	1682784	ParameterList	const condor_sockaddr & addr		1682657	3					
ANR	1682785	Parameter	const condor_sockaddr & addr	324:27:8412:8438	1682657	0	True				
ANR	1682786	ParameterType	const condor_sockaddr &		1682657	0					
ANR	1682787	Identifier	addr		1682657	1					
ANR	1682788	CFGEntryNode	ENTRY		1682657		True				
ANR	1682789	CFGExitNode	EXIT		1682657		True				
ANR	1682790	Symbol	ret		1682657						
ANR	1682791	Symbol	* default_domain		1682657						
ANR	1682792	Symbol	* hostnames . begin		1682657						
ANR	1682793	Symbol	iter		1682657						
ANR	1682794	Symbol	hostnames		1682657						
ANR	1682795	Symbol	hostnames . begin		1682657						
ANR	1682796	Symbol	str		1682657						
ANR	1682797	Symbol	* iter		1682657						
ANR	1682798	Symbol	hostnames . end		1682657						
ANR	1682799	Symbol	get_hostname_with_alias		1682657						
ANR	1682800	Symbol	param		1682657						
ANR	1682801	Symbol	* hostnames		1682657						
ANR	1682802	Symbol	str . FindChar		1682657						
ANR	1682803	Symbol	* hostnames . begin ( )		1682657						
ANR	1682804	Symbol	addr		1682657						
ANR	1682805	Symbol	hostnames . empty		1682657						
ANR	1682806	Symbol	default_domain		1682657						
ANR	1682807	Function	resolve_hostname	349:0:9053:9181							
ANR	1682808	FunctionDef	resolve_hostname (const char * hostname)		1682807	0					
ANR	1682809	CompoundStatement		350:0:9121:9181	1682807	0					
ANR	1682810	IdentifierDeclStatement	MyString host ( hostname ) ;	351:1:9124:9147	1682807	0	True				
ANR	1682811	IdentifierDecl	host ( hostname )		1682807	0					
ANR	1682812	IdentifierDeclType	MyString		1682807	0					
ANR	1682813	Identifier	host		1682807	1					
ANR	1682814	Identifier	hostname		1682807	2					
ANR	1682815	ReturnStatement	return resolve_hostname ( host ) ;	352:1:9150:9179	1682807	1	True				
ANR	1682816	CallExpression	resolve_hostname ( host )		1682807	0					
ANR	1682817	Callee	resolve_hostname		1682807	0					
ANR	1682818	Identifier	resolve_hostname		1682807	0					
ANR	1682819	ArgumentList	host		1682807	1					
ANR	1682820	Argument	host		1682807	0					
ANR	1682821	Identifier	host		1682807	0					
ANR	1682822	ReturnType	std :: vector < condor_sockaddr >		1682807	1					
ANR	1682823	Identifier	resolve_hostname		1682807	2					
ANR	1682824	ParameterList	const char * hostname		1682807	3					
ANR	1682825	Parameter	const char * hostname	349:46:9099:9118	1682807	0	True				
ANR	1682826	ParameterType	const char *		1682807	0					
ANR	1682827	Identifier	hostname		1682807	1					
ANR	1682828	CFGEntryNode	ENTRY		1682807		True				
ANR	1682829	CFGExitNode	EXIT		1682807		True				
ANR	1682830	Symbol	hostname		1682807						
ANR	1682831	Symbol	resolve_hostname		1682807						
ANR	1682832	Symbol	host		1682807						
ANR	1682833	Function	resolve_hostname	356:0:9185:9513							
ANR	1682834	FunctionDef	resolve_hostname (const MyString & hostname)		1682833	0					
ANR	1682835	CompoundStatement		357:0:9257:9513	1682833	0					
ANR	1682836	IdentifierDeclStatement	std :: vector < condor_sockaddr > ret ;	358:1:9260:9292	1682833	0	True				
ANR	1682837	IdentifierDecl	ret		1682833	0					
ANR	1682838	IdentifierDeclType	std :: vector < condor_sockaddr >		1682833	0					
ANR	1682839	Identifier	ret		1682833	1					
ANR	1682840	IfStatement	if ( nodns_enabled ( ) )		1682833	1					
ANR	1682841	Condition	nodns_enabled ( )	359:5:9299:9313	1682833	0	True				
ANR	1682842	CallExpression	nodns_enabled ( )		1682833	0					
ANR	1682843	Callee	nodns_enabled		1682833	0					
ANR	1682844	Identifier	nodns_enabled		1682833	0					
ANR	1682845	ArgumentList			1682833	1					
ANR	1682846	CompoundStatement		4:2:62:121	1682833	1					
ANR	1682847	IdentifierDeclStatement	condor_sockaddr addr = convert_hostname_to_ipaddr ( hostname ) ;	360:2:9320:9379	1682833	0	True				
ANR	1682848	IdentifierDecl	addr = convert_hostname_to_ipaddr ( hostname )		1682833	0					
ANR	1682849	IdentifierDeclType	condor_sockaddr		1682833	0					
ANR	1682850	Identifier	addr		1682833	1					
ANR	1682851	AssignmentExpression	addr = convert_hostname_to_ipaddr ( hostname )		1682833	2		=			
ANR	1682852	Identifier	addr		1682833	0					
ANR	1682853	CallExpression	convert_hostname_to_ipaddr ( hostname )		1682833	1					
ANR	1682854	Callee	convert_hostname_to_ipaddr		1682833	0					
ANR	1682855	Identifier	convert_hostname_to_ipaddr		1682833	0					
ANR	1682856	ArgumentList	hostname		1682833	1					
ANR	1682857	Argument	hostname		1682833	0					
ANR	1682858	Identifier	hostname		1682833	0					
ANR	1682859	IfStatement	if ( addr == condor_sockaddr :: null )		1682833	1					
ANR	1682860	Condition	addr == condor_sockaddr :: null	361:6:9387:9415	1682833	0	True				
ANR	1682861	EqualityExpression	addr == condor_sockaddr :: null		1682833	0		==			
ANR	1682862	Identifier	addr		1682833	0					
ANR	1682863	Identifier	condor_sockaddr :: null		1682833	1					
ANR	1682864	ReturnStatement	return ret ;	362:3:9421:9431	1682833	1	True				
ANR	1682865	Identifier	ret		1682833	0					
ANR	1682866	ExpressionStatement	ret . push_back ( addr )	363:2:9435:9454	1682833	2	True				
ANR	1682867	CallExpression	ret . push_back ( addr )		1682833	0					
ANR	1682868	Callee	ret . push_back		1682833	0					
ANR	1682869	MemberAccess	ret . push_back		1682833	0					
ANR	1682870	Identifier	ret		1682833	0					
ANR	1682871	Identifier	push_back		1682833	1					
ANR	1682872	ArgumentList	addr		1682833	1					
ANR	1682873	Argument	addr		1682833	0					
ANR	1682874	Identifier	addr		1682833	0					
ANR	1682875	ReturnStatement	return ret ;	364:2:9458:9468	1682833	3	True				
ANR	1682876	Identifier	ret		1682833	0					
ANR	1682877	ReturnStatement	return resolve_hostname_raw ( hostname ) ;	366:1:9474:9511	1682833	2	True				
ANR	1682878	CallExpression	resolve_hostname_raw ( hostname )		1682833	0					
ANR	1682879	Callee	resolve_hostname_raw		1682833	0					
ANR	1682880	Identifier	resolve_hostname_raw		1682833	0					
ANR	1682881	ArgumentList	hostname		1682833	1					
ANR	1682882	Argument	hostname		1682833	0					
ANR	1682883	Identifier	hostname		1682833	0					
ANR	1682884	ReturnType	std :: vector < condor_sockaddr >		1682833	1					
ANR	1682885	Identifier	resolve_hostname		1682833	2					
ANR	1682886	ParameterList	const MyString & hostname		1682833	3					
ANR	1682887	Parameter	const MyString & hostname	356:46:9231:9254	1682833	0	True				
ANR	1682888	ParameterType	const MyString &		1682833	0					
ANR	1682889	Identifier	hostname		1682833	1					
ANR	1682890	CFGEntryNode	ENTRY		1682833		True				
ANR	1682891	CFGExitNode	EXIT		1682833		True				
ANR	1682892	Symbol	ret		1682833						
ANR	1682893	Symbol	convert_hostname_to_ipaddr		1682833						
ANR	1682894	Symbol	hostname		1682833						
ANR	1682895	Symbol	condor_sockaddr :: null		1682833						
ANR	1682896	Symbol	resolve_hostname_raw		1682833						
ANR	1682897	Symbol	addr		1682833						
ANR	1682898	Symbol	nodns_enabled		1682833						
ANR	1682899	Function	resolve_hostname_raw	369:0:9516:10066							
ANR	1682900	FunctionDef	resolve_hostname_raw (const MyString & hostname)		1682899	0					
ANR	1682901	CompoundStatement		369:76:9592:10066	1682899	0					
ANR	1682902	IdentifierDeclStatement	std :: vector < condor_sockaddr > ret ;	370:1:9595:9627	1682899	0	True				
ANR	1682903	IdentifierDecl	ret		1682899	0					
ANR	1682904	IdentifierDeclType	std :: vector < condor_sockaddr >		1682899	0					
ANR	1682905	Identifier	ret		1682899	1					
ANR	1682906	IdentifierDeclStatement	addrinfo_iterator ai ;	371:1:9630:9650	1682899	1	True				
ANR	1682907	IdentifierDecl	ai		1682899	0					
ANR	1682908	IdentifierDeclType	addrinfo_iterator		1682899	0					
ANR	1682909	Identifier	ai		1682899	1					
ANR	1682910	IdentifierDeclStatement	"bool res = ipv6_getaddrinfo ( hostname . Value ( ) , NULL , ai ) ;"	372:1:9653:9709	1682899	2	True				
ANR	1682911	IdentifierDecl	"res = ipv6_getaddrinfo ( hostname . Value ( ) , NULL , ai )"		1682899	0					
ANR	1682912	IdentifierDeclType	bool		1682899	0					
ANR	1682913	Identifier	res		1682899	1					
ANR	1682914	AssignmentExpression	"res = ipv6_getaddrinfo ( hostname . Value ( ) , NULL , ai )"		1682899	2		=			
ANR	1682915	Identifier	res		1682899	0					
ANR	1682916	CallExpression	"ipv6_getaddrinfo ( hostname . Value ( ) , NULL , ai )"		1682899	1					
ANR	1682917	Callee	ipv6_getaddrinfo		1682899	0					
ANR	1682918	Identifier	ipv6_getaddrinfo		1682899	0					
ANR	1682919	ArgumentList	hostname . Value ( )		1682899	1					
ANR	1682920	Argument	hostname . Value ( )		1682899	0					
ANR	1682921	CallExpression	hostname . Value ( )		1682899	0					
ANR	1682922	Callee	hostname . Value		1682899	0					
ANR	1682923	MemberAccess	hostname . Value		1682899	0					
ANR	1682924	Identifier	hostname		1682899	0					
ANR	1682925	Identifier	Value		1682899	1					
ANR	1682926	ArgumentList			1682899	1					
ANR	1682927	Argument	NULL		1682899	1					
ANR	1682928	Identifier	NULL		1682899	0					
ANR	1682929	Argument	ai		1682899	2					
ANR	1682930	Identifier	ai		1682899	0					
ANR	1682931	IfStatement	if ( res )		1682899	3					
ANR	1682932	Condition	res	373:5:9716:9718	1682899	0	True				
ANR	1682933	Identifier	res		1682899	0					
ANR	1682934	CompoundStatement		5:10:128:128	1682899	1					
ANR	1682935	ReturnStatement	return ret ;	374:2:9725:9735	1682899	0	True				
ANR	1682936	Identifier	ret		1682899	0					
ANR	1682937	IdentifierDeclStatement	std :: set < condor_sockaddr > s ;	379:1:9864:9891	1682899	4	True				
ANR	1682938	IdentifierDecl	s		1682899	0					
ANR	1682939	IdentifierDeclType	std :: set < condor_sockaddr >		1682899	0					
ANR	1682940	Identifier	s		1682899	1					
ANR	1682941	WhileStatement	while ( addrinfo * info = ai . next ( ) )		1682899	5					
ANR	1682942	Condition	addrinfo * info = ai . next ( )	380:8:9901:9926	1682899	0	True				
ANR	1682943	AssignmentExpression	addrinfo * info = ai . next ( )		1682899	0		=			
ANR	1682944	MultiplicativeExpression	addrinfo * info		1682899	0		*			
ANR	1682945	Identifier	addrinfo		1682899	0					
ANR	1682946	Identifier	info		1682899	1					
ANR	1682947	CallExpression	ai . next ( )		1682899	1					
ANR	1682948	Callee	ai . next		1682899	0					
ANR	1682949	MemberAccess	ai . next		1682899	0					
ANR	1682950	Identifier	ai		1682899	0					
ANR	1682951	Identifier	next		1682899	1					
ANR	1682952	ArgumentList			1682899	1					
ANR	1682953	CompoundStatement		13:2:340:375	1682899	1					
ANR	1682954	IdentifierDeclStatement	condor_sockaddr addr ( info -> ai_addr ) ;	381:2:9933:9968	1682899	0	True				
ANR	1682955	IdentifierDecl	addr ( info -> ai_addr )		1682899	0					
ANR	1682956	IdentifierDeclType	condor_sockaddr		1682899	0					
ANR	1682957	Identifier	addr		1682899	1					
ANR	1682958	PtrMemberAccess	info -> ai_addr		1682899	2					
ANR	1682959	Identifier	info		1682899	0					
ANR	1682960	Identifier	ai_addr		1682899	1					
ANR	1682961	IfStatement	if ( s . find ( addr ) == s . end ( ) )		1682899	1					
ANR	1682962	Condition	s . find ( addr ) == s . end ( )	382:6:9976:9998	1682899	0	True				
ANR	1682963	EqualityExpression	s . find ( addr ) == s . end ( )		1682899	0		==			
ANR	1682964	CallExpression	s . find ( addr )		1682899	0					
ANR	1682965	Callee	s . find		1682899	0					
ANR	1682966	MemberAccess	s . find		1682899	0					
ANR	1682967	Identifier	s		1682899	0					
ANR	1682968	Identifier	find		1682899	1					
ANR	1682969	ArgumentList	addr		1682899	1					
ANR	1682970	Argument	addr		1682899	0					
ANR	1682971	Identifier	addr		1682899	0					
ANR	1682972	CallExpression	s . end ( )		1682899	1					
ANR	1682973	Callee	s . end		1682899	0					
ANR	1682974	MemberAccess	s . end		1682899	0					
ANR	1682975	Identifier	s		1682899	0					
ANR	1682976	Identifier	end		1682899	1					
ANR	1682977	ArgumentList			1682899	1					
ANR	1682978	CompoundStatement		14:31:408:408	1682899	1					
ANR	1682979	ExpressionStatement	ret . push_back ( addr )	383:3:10006:10025	1682899	0	True				
ANR	1682980	CallExpression	ret . push_back ( addr )		1682899	0					
ANR	1682981	Callee	ret . push_back		1682899	0					
ANR	1682982	MemberAccess	ret . push_back		1682899	0					
ANR	1682983	Identifier	ret		1682899	0					
ANR	1682984	Identifier	push_back		1682899	1					
ANR	1682985	ArgumentList	addr		1682899	1					
ANR	1682986	Argument	addr		1682899	0					
ANR	1682987	Identifier	addr		1682899	0					
ANR	1682988	ExpressionStatement	s . insert ( addr )	384:3:10030:10044	1682899	1	True				
ANR	1682989	CallExpression	s . insert ( addr )		1682899	0					
ANR	1682990	Callee	s . insert		1682899	0					
ANR	1682991	MemberAccess	s . insert		1682899	0					
ANR	1682992	Identifier	s		1682899	0					
ANR	1682993	Identifier	insert		1682899	1					
ANR	1682994	ArgumentList	addr		1682899	1					
ANR	1682995	Argument	addr		1682899	0					
ANR	1682996	Identifier	addr		1682899	0					
ANR	1682997	ReturnStatement	return ret ;	387:1:10054:10064	1682899	6	True				
ANR	1682998	Identifier	ret		1682899	0					
ANR	1682999	ReturnType	std :: vector < condor_sockaddr >		1682899	1					
ANR	1683000	Identifier	resolve_hostname_raw		1682899	2					
ANR	1683001	ParameterList	const MyString & hostname		1682899	3					
ANR	1683002	Parameter	const MyString & hostname	369:50:9566:9589	1682899	0	True				
ANR	1683003	ParameterType	const MyString &		1682899	0					
ANR	1683004	Identifier	hostname		1682899	1					
ANR	1683005	CFGEntryNode	ENTRY		1682899		True				
ANR	1683006	CFGExitNode	EXIT		1682899		True				
ANR	1683007	Symbol	ret		1682899						
ANR	1683008	Symbol	res		1682899						
ANR	1683009	Symbol	hostname . Value		1682899						
ANR	1683010	Symbol	addrinfo		1682899						
ANR	1683011	Symbol	NULL		1682899						
ANR	1683012	Symbol	s . end		1682899						
ANR	1683013	Symbol	ipv6_getaddrinfo		1682899						
ANR	1683014	Symbol	ai		1682899						
ANR	1683015	Symbol	hostname		1682899						
ANR	1683016	Symbol	s		1682899						
ANR	1683017	Symbol	s . find		1682899						
ANR	1683018	Symbol	ai . next		1682899						
ANR	1683019	Symbol	addr		1682899						
ANR	1683020	Symbol	info		1682899						
ANR	1683021	Function	convert_ipaddr_to_hostname	390:0:10069:10548							
ANR	1683022	FunctionDef	convert_ipaddr_to_hostname (const condor_sockaddr & addr)		1683021	0					
ANR	1683023	CompoundStatement		391:0:10134:10548	1683021	0					
ANR	1683024	IdentifierDeclStatement	MyString ret ;	392:1:10137:10149	1683021	0	True				
ANR	1683025	IdentifierDecl	ret		1683021	0					
ANR	1683026	IdentifierDeclType	MyString		1683021	0					
ANR	1683027	Identifier	ret		1683021	1					
ANR	1683028	IdentifierDeclStatement	MyString default_domain ;	393:1:10152:10175	1683021	1	True				
ANR	1683029	IdentifierDecl	default_domain		1683021	0					
ANR	1683030	IdentifierDeclType	MyString		1683021	0					
ANR	1683031	Identifier	default_domain		1683021	1					
ANR	1683032	IfStatement	"if ( ! param ( default_domain , ""DEFAULT_DOMAIN_NAME"" ) )"		1683021	2					
ANR	1683033	Condition	"! param ( default_domain , ""DEFAULT_DOMAIN_NAME"" )"	394:5:10182:10226	1683021	0	True				
ANR	1683034	UnaryOperationExpression	"! param ( default_domain , ""DEFAULT_DOMAIN_NAME"" )"		1683021	0					
ANR	1683035	UnaryOperator	!		1683021	0					
ANR	1683036	CallExpression	"param ( default_domain , ""DEFAULT_DOMAIN_NAME"" )"		1683021	1					
ANR	1683037	Callee	param		1683021	0					
ANR	1683038	Identifier	param		1683021	0					
ANR	1683039	ArgumentList	default_domain		1683021	1					
ANR	1683040	Argument	default_domain		1683021	0					
ANR	1683041	Identifier	default_domain		1683021	0					
ANR	1683042	Argument	"""DEFAULT_DOMAIN_NAME"""		1683021	1					
ANR	1683043	PrimaryExpression	"""DEFAULT_DOMAIN_NAME"""		1683021	0					
ANR	1683044	CompoundStatement		4:52:94:94	1683021	1					
ANR	1683045	Statement	dprintf	395:2:10233:10239	1683021	0	True				
ANR	1683046	Statement	(	395:9:10240:10240	1683021	1	True				
ANR	1683047	Statement	D_HOSTNAME	395:10:10241:10250	1683021	2	True				
ANR	1683048	Statement	","	395:20:10251:10251	1683021	3	True				
ANR	1683049	Statement	"""NO_DNS: DEFAULT_DOMAIN_NAME must be defined in your """	396:4:10257:10310	1683021	4	True				
ANR	1683050	Statement	"""top-level config file\\n"""	397:4:10316:10340	1683021	5	True				
ANR	1683051	Statement	)	397:29:10341:10341	1683021	6	True				
ANR	1683052	ExpressionStatement		397:30:10342:10342	1683021	7	True				
ANR	1683053	ReturnStatement	return ret ;	398:2:10346:10356	1683021	8	True				
ANR	1683054	Identifier	ret		1683021	0					
ANR	1683055	ExpressionStatement	ret = addr . to_ip_string ( )	401:1:10363:10388	1683021	3	True				
ANR	1683056	AssignmentExpression	ret = addr . to_ip_string ( )		1683021	0		=			
ANR	1683057	Identifier	ret		1683021	0					
ANR	1683058	CallExpression	addr . to_ip_string ( )		1683021	1					
ANR	1683059	Callee	addr . to_ip_string		1683021	0					
ANR	1683060	MemberAccess	addr . to_ip_string		1683021	0					
ANR	1683061	Identifier	addr		1683021	0					
ANR	1683062	Identifier	to_ip_string		1683021	1					
ANR	1683063	ArgumentList			1683021	1					
ANR	1683064	ForStatement	for ( int i = 0 ; i < ret . Length ( ) ; ++ i )		1683021	4					
ANR	1683065	ForInit	int i = 0 ;	402:6:10396:10405	1683021	0	True				
ANR	1683066	IdentifierDeclStatement	int i = 0 ;		1683021	0					
ANR	1683067	IdentifierDecl	i = 0		1683021	0					
ANR	1683068	IdentifierDeclType	int		1683021	0					
ANR	1683069	Identifier	i		1683021	1					
ANR	1683070	AssignmentExpression	i = 0		1683021	2		=			
ANR	1683071	Identifier	i		1683021	0					
ANR	1683072	PrimaryExpression	0		1683021	1					
ANR	1683073	Condition	i < ret . Length ( )	402:17:10407:10422	1683021	1	True				
ANR	1683074	RelationalExpression	i < ret . Length ( )		1683021	0		<			
ANR	1683075	Identifier	i		1683021	0					
ANR	1683076	CallExpression	ret . Length ( )		1683021	1					
ANR	1683077	Callee	ret . Length		1683021	0					
ANR	1683078	MemberAccess	ret . Length		1683021	0					
ANR	1683079	Identifier	ret		1683021	0					
ANR	1683080	Identifier	Length		1683021	1					
ANR	1683081	ArgumentList			1683021	1					
ANR	1683082	UnaryExpression	++ i	402:35:10425:10427	1683021	2	True				
ANR	1683083	IncDec	++		1683021	0					
ANR	1683084	Identifier	i		1683021	1					
ANR	1683085	CompoundStatement		12:40:295:295	1683021	3					
ANR	1683086	IfStatement	if ( ret [ i ] == '.' || ret [ i ] == ':' )		1683021	0					
ANR	1683087	Condition	ret [ i ] == '.' || ret [ i ] == ':'	403:6:10438:10467	1683021	0	True				
ANR	1683088	OrExpression	ret [ i ] == '.' || ret [ i ] == ':'		1683021	0		||			
ANR	1683089	EqualityExpression	ret [ i ] == '.'		1683021	0		==			
ANR	1683090	ArrayIndexing	ret [ i ]		1683021	0					
ANR	1683091	Identifier	ret		1683021	0					
ANR	1683092	Identifier	i		1683021	1					
ANR	1683093	PrimaryExpression	'.'		1683021	1					
ANR	1683094	EqualityExpression	ret [ i ] == ':'		1683021	1		==			
ANR	1683095	ArrayIndexing	ret [ i ]		1683021	0					
ANR	1683096	Identifier	ret		1683021	0					
ANR	1683097	Identifier	i		1683021	1					
ANR	1683098	PrimaryExpression	':'		1683021	1					
ANR	1683099	ExpressionStatement	"ret . setChar ( i , '-' )"	404:3:10473:10492	1683021	1	True				
ANR	1683100	CallExpression	"ret . setChar ( i , '-' )"		1683021	0					
ANR	1683101	Callee	ret . setChar		1683021	0					
ANR	1683102	MemberAccess	ret . setChar		1683021	0					
ANR	1683103	Identifier	ret		1683021	0					
ANR	1683104	Identifier	setChar		1683021	1					
ANR	1683105	ArgumentList	i		1683021	1					
ANR	1683106	Argument	i		1683021	0					
ANR	1683107	Identifier	i		1683021	0					
ANR	1683108	Argument	'-'		1683021	1					
ANR	1683109	PrimaryExpression	'-'		1683021	0					
ANR	1683110	ExpressionStatement	"ret += ""."""	406:1:10498:10508	1683021	5	True				
ANR	1683111	AssignmentExpression	"ret += ""."""		1683021	0		+=			
ANR	1683112	Identifier	ret		1683021	0					
ANR	1683113	PrimaryExpression	"""."""		1683021	1					
ANR	1683114	ExpressionStatement	ret += default_domain	407:1:10511:10532	1683021	6	True				
ANR	1683115	AssignmentExpression	ret += default_domain		1683021	0		+=			
ANR	1683116	Identifier	ret		1683021	0					
ANR	1683117	Identifier	default_domain		1683021	1					
ANR	1683118	ReturnStatement	return ret ;	409:1:10536:10546	1683021	7	True				
ANR	1683119	Identifier	ret		1683021	0					
ANR	1683120	ReturnType	MyString		1683021	1					
ANR	1683121	Identifier	convert_ipaddr_to_hostname		1683021	2					
ANR	1683122	ParameterList	const condor_sockaddr & addr		1683021	3					
ANR	1683123	Parameter	const condor_sockaddr & addr	390:36:10105:10131	1683021	0	True				
ANR	1683124	ParameterType	const condor_sockaddr &		1683021	0					
ANR	1683125	Identifier	addr		1683021	1					
ANR	1683126	CFGEntryNode	ENTRY		1683021		True				
ANR	1683127	CFGExitNode	EXIT		1683021		True				
ANR	1683128	Symbol	ret		1683021						
ANR	1683129	Symbol	addr . to_ip_string		1683021						
ANR	1683130	Symbol	* i		1683021						
ANR	1683131	Symbol	param		1683021						
ANR	1683132	Symbol	i		1683021						
ANR	1683133	Symbol	* ret		1683021						
ANR	1683134	Symbol	addr		1683021						
ANR	1683135	Symbol	ret . Length		1683021						
ANR	1683136	Symbol	default_domain		1683021						
ANR	1683137	Function	convert_hostname_to_ipaddr	412:0:10551:11868							
ANR	1683138	FunctionDef	convert_hostname_to_ipaddr (const MyString & fullname)		1683137	0					
ANR	1683139	CompoundStatement		413:0:10620:11868	1683137	0					
ANR	1683140	IdentifierDeclStatement	MyString hostname ;	414:1:10623:10640	1683137	0	True				
ANR	1683141	IdentifierDecl	hostname		1683137	0					
ANR	1683142	IdentifierDeclType	MyString		1683137	0					
ANR	1683143	Identifier	hostname		1683137	1					
ANR	1683144	IdentifierDeclStatement	MyString default_domain ;	415:1:10643:10666	1683137	1	True				
ANR	1683145	IdentifierDecl	default_domain		1683137	0					
ANR	1683146	IdentifierDeclType	MyString		1683137	0					
ANR	1683147	Identifier	default_domain		1683137	1					
ANR	1683148	IdentifierDeclStatement	bool truncated = false ;	416:1:10669:10691	1683137	2	True				
ANR	1683149	IdentifierDecl	truncated = false		1683137	0					
ANR	1683150	IdentifierDeclType	bool		1683137	0					
ANR	1683151	Identifier	truncated		1683137	1					
ANR	1683152	AssignmentExpression	truncated = false		1683137	2		=			
ANR	1683153	Identifier	false		1683137	0					
ANR	1683154	Identifier	false		1683137	1					
ANR	1683155	IfStatement	"if ( param ( default_domain , ""DEFAULT_DOMAIN_NAME"" ) )"		1683137	3					
ANR	1683156	Condition	"param ( default_domain , ""DEFAULT_DOMAIN_NAME"" )"	417:5:10698:10741	1683137	0	True				
ANR	1683157	CallExpression	"param ( default_domain , ""DEFAULT_DOMAIN_NAME"" )"		1683137	0					
ANR	1683158	Callee	param		1683137	0					
ANR	1683159	Identifier	param		1683137	0					
ANR	1683160	ArgumentList	default_domain		1683137	1					
ANR	1683161	Argument	default_domain		1683137	0					
ANR	1683162	Identifier	default_domain		1683137	0					
ANR	1683163	Argument	"""DEFAULT_DOMAIN_NAME"""		1683137	1					
ANR	1683164	PrimaryExpression	"""DEFAULT_DOMAIN_NAME"""		1683137	0					
ANR	1683165	CompoundStatement		8:2:194:240	1683137	1					
ANR	1683166	IdentifierDeclStatement	"MyString dotted_domain = ""."" ;"	418:2:10748:10776	1683137	0	True				
ANR	1683167	IdentifierDecl	"dotted_domain = ""."""		1683137	0					
ANR	1683168	IdentifierDeclType	MyString		1683137	0					
ANR	1683169	Identifier	dotted_domain		1683137	1					
ANR	1683170	AssignmentExpression	"dotted_domain = ""."""		1683137	2		=			
ANR	1683171	Identifier	dotted_domain		1683137	0					
ANR	1683172	PrimaryExpression	"""."""		1683137	1					
ANR	1683173	ExpressionStatement	dotted_domain += default_domain	419:2:10780:10811	1683137	1	True				
ANR	1683174	AssignmentExpression	dotted_domain += default_domain		1683137	0		+=			
ANR	1683175	Identifier	dotted_domain		1683137	0					
ANR	1683176	Identifier	default_domain		1683137	1					
ANR	1683177	IdentifierDeclStatement	int pos = fullname . find ( dotted_domain . Value ( ) ) ;	420:2:10815:10861	1683137	2	True				
ANR	1683178	IdentifierDecl	pos = fullname . find ( dotted_domain . Value ( ) )		1683137	0					
ANR	1683179	IdentifierDeclType	int		1683137	0					
ANR	1683180	Identifier	pos		1683137	1					
ANR	1683181	AssignmentExpression	pos = fullname . find ( dotted_domain . Value ( ) )		1683137	2		=			
ANR	1683182	Identifier	pos		1683137	0					
ANR	1683183	CallExpression	fullname . find ( dotted_domain . Value ( ) )		1683137	1					
ANR	1683184	Callee	fullname . find		1683137	0					
ANR	1683185	MemberAccess	fullname . find		1683137	0					
ANR	1683186	Identifier	fullname		1683137	0					
ANR	1683187	Identifier	find		1683137	1					
ANR	1683188	ArgumentList	dotted_domain . Value ( )		1683137	1					
ANR	1683189	Argument	dotted_domain . Value ( )		1683137	0					
ANR	1683190	CallExpression	dotted_domain . Value ( )		1683137	0					
ANR	1683191	Callee	dotted_domain . Value		1683137	0					
ANR	1683192	MemberAccess	dotted_domain . Value		1683137	0					
ANR	1683193	Identifier	dotted_domain		1683137	0					
ANR	1683194	Identifier	Value		1683137	1					
ANR	1683195	ArgumentList			1683137	1					
ANR	1683196	IfStatement	if ( pos != - 1 )		1683137	3					
ANR	1683197	Condition	pos != - 1	421:6:10869:10877	1683137	0	True				
ANR	1683198	EqualityExpression	pos != - 1		1683137	0		!=			
ANR	1683199	Identifier	pos		1683137	0					
ANR	1683200	UnaryOperationExpression	- 1		1683137	1					
ANR	1683201	UnaryOperator	-		1683137	0					
ANR	1683202	PrimaryExpression	1		1683137	1					
ANR	1683203	CompoundStatement		9:17:259:259	1683137	1					
ANR	1683204	ExpressionStatement	truncated = true	422:3:10885:10901	1683137	0	True				
ANR	1683205	AssignmentExpression	truncated = true		1683137	0		=			
ANR	1683206	Identifier	truncated		1683137	0					
ANR	1683207	Identifier	true		1683137	1					
ANR	1683208	ExpressionStatement	"hostname = fullname . Substr ( 0 , pos - 1 )"	423:3:10906:10944	1683137	1	True				
ANR	1683209	AssignmentExpression	"hostname = fullname . Substr ( 0 , pos - 1 )"		1683137	0		=			
ANR	1683210	Identifier	hostname		1683137	0					
ANR	1683211	CallExpression	"fullname . Substr ( 0 , pos - 1 )"		1683137	1					
ANR	1683212	Callee	fullname . Substr		1683137	0					
ANR	1683213	MemberAccess	fullname . Substr		1683137	0					
ANR	1683214	Identifier	fullname		1683137	0					
ANR	1683215	Identifier	Substr		1683137	1					
ANR	1683216	ArgumentList	0		1683137	1					
ANR	1683217	Argument	0		1683137	0					
ANR	1683218	PrimaryExpression	0		1683137	0					
ANR	1683219	Argument	pos - 1		1683137	1					
ANR	1683220	AdditiveExpression	pos - 1		1683137	0		-			
ANR	1683221	Identifier	pos		1683137	0					
ANR	1683222	PrimaryExpression	1		1683137	1					
ANR	1683223	IfStatement	if ( ! truncated )		1683137	4					
ANR	1683224	Condition	! truncated	426:5:10958:10967	1683137	0	True				
ANR	1683225	UnaryOperationExpression	! truncated		1683137	0					
ANR	1683226	UnaryOperator	!		1683137	0					
ANR	1683227	Identifier	truncated		1683137	1					
ANR	1683228	ExpressionStatement	hostname = fullname	427:2:10972:10991	1683137	1	True				
ANR	1683229	AssignmentExpression	hostname = fullname		1683137	0		=			
ANR	1683230	Identifier	hostname		1683137	0					
ANR	1683231	Identifier	fullname		1683137	1					
ANR	1683232	IdentifierDeclStatement	char target_char ;	441:1:11336:11352	1683137	5	True				
ANR	1683233	IdentifierDecl	target_char		1683137	0					
ANR	1683234	IdentifierDeclType	char		1683137	0					
ANR	1683235	Identifier	target_char		1683137	1					
ANR	1683236	IdentifierDeclStatement	bool ipv6 = false ;	442:1:11355:11372	1683137	6	True				
ANR	1683237	IdentifierDecl	ipv6 = false		1683137	0					
ANR	1683238	IdentifierDeclType	bool		1683137	0					
ANR	1683239	Identifier	ipv6		1683137	1					
ANR	1683240	AssignmentExpression	ipv6 = false		1683137	2		=			
ANR	1683241	Identifier	false		1683137	0					
ANR	1683242	Identifier	false		1683137	1					
ANR	1683243	IfStatement	"if ( hostname . find ( ""--"" ) != - 1 )"		1683137	7					
ANR	1683244	Condition	"hostname . find ( ""--"" ) != - 1"	443:5:11379:11403	1683137	0	True				
ANR	1683245	EqualityExpression	"hostname . find ( ""--"" ) != - 1"		1683137	0		!=			
ANR	1683246	CallExpression	"hostname . find ( ""--"" )"		1683137	0					
ANR	1683247	Callee	hostname . find		1683137	0					
ANR	1683248	MemberAccess	hostname . find		1683137	0					
ANR	1683249	Identifier	hostname		1683137	0					
ANR	1683250	Identifier	find		1683137	1					
ANR	1683251	ArgumentList	"""--"""		1683137	1					
ANR	1683252	Argument	"""--"""		1683137	0					
ANR	1683253	PrimaryExpression	"""--"""		1683137	0					
ANR	1683254	UnaryOperationExpression	- 1		1683137	1					
ANR	1683255	UnaryOperator	-		1683137	0					
ANR	1683256	PrimaryExpression	1		1683137	1					
ANR	1683257	ExpressionStatement	ipv6 = true	444:2:11408:11419	1683137	1	True				
ANR	1683258	AssignmentExpression	ipv6 = true		1683137	0		=			
ANR	1683259	Identifier	ipv6		1683137	0					
ANR	1683260	Identifier	true		1683137	1					
ANR	1683261	ElseStatement	else		1683137	0					
ANR	1683262	CompoundStatement		34:2:810:828	1683137	0					
ANR	1683263	IdentifierDeclStatement	int dash_count = 0 ;	446:2:11431:11449	1683137	0	True				
ANR	1683264	IdentifierDecl	dash_count = 0		1683137	0					
ANR	1683265	IdentifierDeclType	int		1683137	0					
ANR	1683266	Identifier	dash_count		1683137	1					
ANR	1683267	AssignmentExpression	dash_count = 0		1683137	2		=			
ANR	1683268	Identifier	dash_count		1683137	0					
ANR	1683269	PrimaryExpression	0		1683137	1					
ANR	1683270	ForStatement	for ( int i = 0 ; i < hostname . Length ( ) ; ++ i )		1683137	1					
ANR	1683271	ForInit	int i = 0 ;	447:7:11458:11467	1683137	0	True				
ANR	1683272	IdentifierDeclStatement	int i = 0 ;		1683137	0					
ANR	1683273	IdentifierDecl	i = 0		1683137	0					
ANR	1683274	IdentifierDeclType	int		1683137	0					
ANR	1683275	Identifier	i		1683137	1					
ANR	1683276	AssignmentExpression	i = 0		1683137	2		=			
ANR	1683277	Identifier	i		1683137	0					
ANR	1683278	PrimaryExpression	0		1683137	1					
ANR	1683279	Condition	i < hostname . Length ( )	447:18:11469:11489	1683137	1	True				
ANR	1683280	RelationalExpression	i < hostname . Length ( )		1683137	0		<			
ANR	1683281	Identifier	i		1683137	0					
ANR	1683282	CallExpression	hostname . Length ( )		1683137	1					
ANR	1683283	Callee	hostname . Length		1683137	0					
ANR	1683284	MemberAccess	hostname . Length		1683137	0					
ANR	1683285	Identifier	hostname		1683137	0					
ANR	1683286	Identifier	Length		1683137	1					
ANR	1683287	ArgumentList			1683137	1					
ANR	1683288	UnaryExpression	++ i	447:41:11492:11494	1683137	2	True				
ANR	1683289	IncDec	++		1683137	0					
ANR	1683290	Identifier	i		1683137	1					
ANR	1683291	IfStatement	if ( hostname [ i ] == '-' )		1683137	3					
ANR	1683292	Condition	hostname [ i ] == '-'	448:7:11504:11521	1683137	0	True				
ANR	1683293	EqualityExpression	hostname [ i ] == '-'		1683137	0		==			
ANR	1683294	ArrayIndexing	hostname [ i ]		1683137	0					
ANR	1683295	Identifier	hostname		1683137	0					
ANR	1683296	Identifier	i		1683137	1					
ANR	1683297	PrimaryExpression	'-'		1683137	1					
ANR	1683298	ExpressionStatement	++ dash_count	449:4:11528:11540	1683137	1	True				
ANR	1683299	UnaryExpression	++ dash_count		1683137	0					
ANR	1683300	IncDec	++		1683137	0					
ANR	1683301	Identifier	dash_count		1683137	1					
ANR	1683302	IfStatement	if ( dash_count == 7 )		1683137	2					
ANR	1683303	Condition	dash_count == 7	451:6:11549:11563	1683137	0	True				
ANR	1683304	EqualityExpression	dash_count == 7		1683137	0		==			
ANR	1683305	Identifier	dash_count		1683137	0					
ANR	1683306	PrimaryExpression	7		1683137	1					
ANR	1683307	ExpressionStatement	ipv6 = true	452:3:11569:11580	1683137	1	True				
ANR	1683308	AssignmentExpression	ipv6 = true		1683137	0		=			
ANR	1683309	Identifier	ipv6		1683137	0					
ANR	1683310	Identifier	true		1683137	1					
ANR	1683311	IfStatement	if ( ipv6 )		1683137	8					
ANR	1683312	Condition	ipv6	455:5:11591:11594	1683137	0	True				
ANR	1683313	Identifier	ipv6		1683137	0					
ANR	1683314	ExpressionStatement	target_char = ':'	456:2:11599:11616	1683137	1	True				
ANR	1683315	AssignmentExpression	target_char = ':'		1683137	0		=			
ANR	1683316	Identifier	target_char		1683137	0					
ANR	1683317	PrimaryExpression	':'		1683137	1					
ANR	1683318	ElseStatement	else		1683137	0					
ANR	1683319	ExpressionStatement	target_char = '.'	458:2:11626:11642	1683137	0	True				
ANR	1683320	AssignmentExpression	target_char = '.'		1683137	0		=			
ANR	1683321	Identifier	target_char		1683137	0					
ANR	1683322	PrimaryExpression	'.'		1683137	1					
ANR	1683323	ForStatement	for ( int i = 0 ; i < hostname . Length ( ) ; ++ i )		1683137	9					
ANR	1683324	ForInit	int i = 0 ;	460:6:11694:11703	1683137	0	True				
ANR	1683325	IdentifierDeclStatement	int i = 0 ;		1683137	0					
ANR	1683326	IdentifierDecl	i = 0		1683137	0					
ANR	1683327	IdentifierDeclType	int		1683137	0					
ANR	1683328	Identifier	i		1683137	1					
ANR	1683329	AssignmentExpression	i = 0		1683137	2		=			
ANR	1683330	Identifier	i		1683137	0					
ANR	1683331	PrimaryExpression	0		1683137	1					
ANR	1683332	Condition	i < hostname . Length ( )	460:17:11705:11725	1683137	1	True				
ANR	1683333	RelationalExpression	i < hostname . Length ( )		1683137	0		<			
ANR	1683334	Identifier	i		1683137	0					
ANR	1683335	CallExpression	hostname . Length ( )		1683137	1					
ANR	1683336	Callee	hostname . Length		1683137	0					
ANR	1683337	MemberAccess	hostname . Length		1683137	0					
ANR	1683338	Identifier	hostname		1683137	0					
ANR	1683339	Identifier	Length		1683137	1					
ANR	1683340	ArgumentList			1683137	1					
ANR	1683341	UnaryExpression	++ i	460:40:11728:11730	1683137	2	True				
ANR	1683342	IncDec	++		1683137	0					
ANR	1683343	Identifier	i		1683137	1					
ANR	1683344	CompoundStatement		48:45:1112:1112	1683137	3					
ANR	1683345	IfStatement	if ( hostname [ i ] == '-' )		1683137	0					
ANR	1683346	Condition	hostname [ i ] == '-'	461:6:11741:11758	1683137	0	True				
ANR	1683347	EqualityExpression	hostname [ i ] == '-'		1683137	0		==			
ANR	1683348	ArrayIndexing	hostname [ i ]		1683137	0					
ANR	1683349	Identifier	hostname		1683137	0					
ANR	1683350	Identifier	i		1683137	1					
ANR	1683351	PrimaryExpression	'-'		1683137	1					
ANR	1683352	ExpressionStatement	"hostname . setChar ( i , target_char )"	462:3:11764:11796	1683137	1	True				
ANR	1683353	CallExpression	"hostname . setChar ( i , target_char )"		1683137	0					
ANR	1683354	Callee	hostname . setChar		1683137	0					
ANR	1683355	MemberAccess	hostname . setChar		1683137	0					
ANR	1683356	Identifier	hostname		1683137	0					
ANR	1683357	Identifier	setChar		1683137	1					
ANR	1683358	ArgumentList	i		1683137	1					
ANR	1683359	Argument	i		1683137	0					
ANR	1683360	Identifier	i		1683137	0					
ANR	1683361	Argument	target_char		1683137	1					
ANR	1683362	Identifier	target_char		1683137	0					
ANR	1683363	IdentifierDeclStatement	condor_sockaddr ret ;	465:1:11803:11822	1683137	10	True				
ANR	1683364	IdentifierDecl	ret		1683137	0					
ANR	1683365	IdentifierDeclType	condor_sockaddr		1683137	0					
ANR	1683366	Identifier	ret		1683137	1					
ANR	1683367	ExpressionStatement	ret . from_ip_string ( hostname )	466:1:11825:11853	1683137	11	True				
ANR	1683368	CallExpression	ret . from_ip_string ( hostname )		1683137	0					
ANR	1683369	Callee	ret . from_ip_string		1683137	0					
ANR	1683370	MemberAccess	ret . from_ip_string		1683137	0					
ANR	1683371	Identifier	ret		1683137	0					
ANR	1683372	Identifier	from_ip_string		1683137	1					
ANR	1683373	ArgumentList	hostname		1683137	1					
ANR	1683374	Argument	hostname		1683137	0					
ANR	1683375	Identifier	hostname		1683137	0					
ANR	1683376	ReturnStatement	return ret ;	467:1:11856:11866	1683137	12	True				
ANR	1683377	Identifier	ret		1683137	0					
ANR	1683378	ReturnType	condor_sockaddr		1683137	1					
ANR	1683379	Identifier	convert_hostname_to_ipaddr		1683137	2					
ANR	1683380	ParameterList	const MyString & fullname		1683137	3					
ANR	1683381	Parameter	const MyString & fullname	412:43:10594:10617	1683137	0	True				
ANR	1683382	ParameterType	const MyString &		1683137	0					
ANR	1683383	Identifier	fullname		1683137	1					
ANR	1683384	CFGEntryNode	ENTRY		1683137		True				
ANR	1683385	CFGExitNode	EXIT		1683137		True				
ANR	1683386	Symbol	ret		1683137						
ANR	1683387	Symbol	hostname . Length		1683137						
ANR	1683388	Symbol	false		1683137						
ANR	1683389	Symbol	truncated		1683137						
ANR	1683390	Symbol	i		1683137						
ANR	1683391	Symbol	dotted_domain . Value		1683137						
ANR	1683392	Symbol	hostname . find		1683137						
ANR	1683393	Symbol	dotted_domain		1683137						
ANR	1683394	Symbol	hostname		1683137						
ANR	1683395	Symbol	* hostname		1683137						
ANR	1683396	Symbol	dash_count		1683137						
ANR	1683397	Symbol	* i		1683137						
ANR	1683398	Symbol	fullname . Substr		1683137						
ANR	1683399	Symbol	param		1683137						
ANR	1683400	Symbol	pos		1683137						
ANR	1683401	Symbol	ipv6		1683137						
ANR	1683402	Symbol	true		1683137						
ANR	1683403	Symbol	fullname		1683137						
ANR	1683404	Symbol	fullname . find		1683137						
ANR	1683405	Symbol	target_char		1683137						
ANR	1683406	Symbol	default_domain		1683137						
