command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1188893	File	data/converged/CVE-2011-4930_htcondor/dc_lease_manager.cpp								
ANR	1188894	Function	DCLeaseManager :: DCLeaseManager	37:0:1190:1326							
ANR	1188895	FunctionDef	"DCLeaseManager :: DCLeaseManager (const char * daemon_name , const char * pool_name)"		1188894	0					
ANR	1188896	CompoundStatement		39:0:1324:1326	1188894	0					
ANR	1188897	Identifier	DCLeaseManager :: DCLeaseManager		1188894	1					
ANR	1188898	ParameterList	"const char * daemon_name , const char * pool_name"		1188894	2					
ANR	1188899	Parameter	const char * daemon_name	37:31:1221:1243	1188894	0	True				
ANR	1188900	ParameterType	const char *		1188894	0					
ANR	1188901	Identifier	daemon_name		1188894	1					
ANR	1188902	Parameter	const char * pool_name	37:56:1246:1266	1188894	1	True				
ANR	1188903	ParameterType	const char *		1188894	0					
ANR	1188904	Identifier	pool_name		1188894	1					
ANR	1188905	CFGEntryNode	ENTRY		1188894		True				
ANR	1188906	CFGExitNode	EXIT		1188894		True				
ANR	1188907	Symbol	daemon_name		1188894						
ANR	1188908	Symbol	pool_name		1188894						
ANR	1188909	Function	DCLeaseManager :: ~DCLeaseManager	43:0:1330:1372							
ANR	1188910	FunctionDef	DCLeaseManager :: ~DCLeaseManager ()		1188909	0					
ANR	1188911	CompoundStatement		44:0:1370:1372	1188909	0					
ANR	1188912	Identifier	DCLeaseManager :: ~DCLeaseManager		1188909	1					
ANR	1188913	ParameterList			1188909	2					
ANR	1188914	CFGEntryNode	ENTRY		1188909		True				
ANR	1188915	CFGExitNode	EXIT		1188909		True				
ANR	1188916	Function	DCLeaseManager :: getLeases	48:0:1376:2451							
ANR	1188917	FunctionDef	"DCLeaseManager :: getLeases (const classad :: ClassAd & request_ad , list < DCLeaseManagerLease * > & leases)"		1188916	0					
ANR	1188918	CompoundStatement		51:0:1492:2451	1188916	0					
ANR	1188919	IdentifierDeclStatement	CondorError errstack ;	53:1:1520:1540	1188916	0	True				
ANR	1188920	IdentifierDecl	errstack		1188916	0					
ANR	1188921	IdentifierDeclType	CondorError		1188916	0					
ANR	1188922	Identifier	errstack		1188916	1					
ANR	1188923	IdentifierDeclStatement	"ReliSock * rsock = ( ReliSock * ) startCommand ( LEASE_MANAGER_GET_LEASES , Stream :: reli_sock , 20 ) ;"	54:1:1543:1638	1188916	1	True				
ANR	1188924	IdentifierDecl	"* rsock = ( ReliSock * ) startCommand ( LEASE_MANAGER_GET_LEASES , Stream :: reli_sock , 20 )"		1188916	0					
ANR	1188925	IdentifierDeclType	ReliSock *		1188916	0					
ANR	1188926	Identifier	rsock		1188916	1					
ANR	1188927	AssignmentExpression	"* rsock = ( ReliSock * ) startCommand ( LEASE_MANAGER_GET_LEASES , Stream :: reli_sock , 20 )"		1188916	2		=			
ANR	1188928	Identifier	rsock		1188916	0					
ANR	1188929	CastExpression	"( ReliSock * ) startCommand ( LEASE_MANAGER_GET_LEASES , Stream :: reli_sock , 20 )"		1188916	1					
ANR	1188930	CastTarget	ReliSock *		1188916	0					
ANR	1188931	CallExpression	"startCommand ( LEASE_MANAGER_GET_LEASES , Stream :: reli_sock , 20 )"		1188916	1					
ANR	1188932	Callee	startCommand		1188916	0					
ANR	1188933	Identifier	startCommand		1188916	0					
ANR	1188934	ArgumentList	LEASE_MANAGER_GET_LEASES		1188916	1					
ANR	1188935	Argument	LEASE_MANAGER_GET_LEASES		1188916	0					
ANR	1188936	Identifier	LEASE_MANAGER_GET_LEASES		1188916	0					
ANR	1188937	Argument	Stream :: reli_sock		1188916	1					
ANR	1188938	Identifier	Stream :: reli_sock		1188916	0					
ANR	1188939	Argument	20		1188916	2					
ANR	1188940	PrimaryExpression	20		1188916	0					
ANR	1188941	IfStatement	if ( ! rsock )		1188916	2					
ANR	1188942	Condition	! rsock	56:6:1646:1652	1188916	0	True				
ANR	1188943	UnaryOperationExpression	! rsock		1188916	0					
ANR	1188944	UnaryOperator	!		1188916	0					
ANR	1188945	Identifier	rsock		1188916	1					
ANR	1188946	CompoundStatement		6:16:163:163	1188916	1					
ANR	1188947	ReturnStatement	return false ;	57:2:1660:1672	1188916	0	True				
ANR	1188948	Identifier	false		1188916	0					
ANR	1188949	IfStatement	"if ( ! StreamPut ( rsock , request_ad ) )"		1188916	3					
ANR	1188950	Condition	"! StreamPut ( rsock , request_ad )"	61:6:1725:1755	1188916	0	True				
ANR	1188951	UnaryOperationExpression	"! StreamPut ( rsock , request_ad )"		1188916	0					
ANR	1188952	UnaryOperator	!		1188916	0					
ANR	1188953	CallExpression	"StreamPut ( rsock , request_ad )"		1188916	1					
ANR	1188954	Callee	StreamPut		1188916	0					
ANR	1188955	Identifier	StreamPut		1188916	0					
ANR	1188956	ArgumentList	rsock		1188916	1					
ANR	1188957	Argument	rsock		1188916	0					
ANR	1188958	Identifier	rsock		1188916	0					
ANR	1188959	Argument	request_ad		1188916	1					
ANR	1188960	Identifier	request_ad		1188916	0					
ANR	1188961	CompoundStatement		11:40:266:266	1188916	1					
ANR	1188962	Statement	delete	62:2:1763:1768	1188916	0	True				
ANR	1188963	ExpressionStatement	rsock	62:9:1770:1775	1188916	1	True				
ANR	1188964	Identifier	rsock		1188916	0					
ANR	1188965	ReturnStatement	return false ;	63:2:1779:1791	1188916	2	True				
ANR	1188966	Identifier	false		1188916	0					
ANR	1188967	ExpressionStatement	rsock -> end_of_message ( )	66:1:1798:1821	1188916	4	True				
ANR	1188968	CallExpression	rsock -> end_of_message ( )		1188916	0					
ANR	1188969	Callee	rsock -> end_of_message		1188916	0					
ANR	1188970	PtrMemberAccess	rsock -> end_of_message		1188916	0					
ANR	1188971	Identifier	rsock		1188916	0					
ANR	1188972	Identifier	end_of_message		1188916	1					
ANR	1188973	ArgumentList			1188916	1					
ANR	1188974	ExpressionStatement	rsock -> decode ( )	69:1:1854:1869	1188916	5	True				
ANR	1188975	CallExpression	rsock -> decode ( )		1188916	0					
ANR	1188976	Callee	rsock -> decode		1188916	0					
ANR	1188977	PtrMemberAccess	rsock -> decode		1188916	0					
ANR	1188978	Identifier	rsock		1188916	0					
ANR	1188979	Identifier	decode		1188916	1					
ANR	1188980	ArgumentList			1188916	1					
ANR	1188981	IdentifierDeclStatement	int rc = 0 ;	71:1:1873:1884	1188916	6	True				
ANR	1188982	IdentifierDecl	rc = 0		1188916	0					
ANR	1188983	IdentifierDeclType	int		1188916	0					
ANR	1188984	Identifier	rc		1188916	1					
ANR	1188985	AssignmentExpression	rc = 0		1188916	2		=			
ANR	1188986	Identifier	rc		1188916	0					
ANR	1188987	PrimaryExpression	0		1188916	1					
ANR	1188988	IfStatement	if ( ! rsock -> code ( rc ) || ( rc != OK ) )		1188916	7					
ANR	1188989	Condition	! rsock -> code ( rc ) || ( rc != OK )	72:6:1892:1925	1188916	0	True				
ANR	1188990	OrExpression	! rsock -> code ( rc ) || ( rc != OK )		1188916	0		||			
ANR	1188991	UnaryOperationExpression	! rsock -> code ( rc )		1188916	0					
ANR	1188992	UnaryOperator	!		1188916	0					
ANR	1188993	CallExpression	rsock -> code ( rc )		1188916	1					
ANR	1188994	Callee	rsock -> code		1188916	0					
ANR	1188995	PtrMemberAccess	rsock -> code		1188916	0					
ANR	1188996	Identifier	rsock		1188916	0					
ANR	1188997	Identifier	code		1188916	1					
ANR	1188998	ArgumentList	rc		1188916	1					
ANR	1188999	Argument	rc		1188916	0					
ANR	1189000	Identifier	rc		1188916	0					
ANR	1189001	EqualityExpression	rc != OK		1188916	1		!=			
ANR	1189002	Identifier	rc		1188916	0					
ANR	1189003	Identifier	OK		1188916	1					
ANR	1189004	CompoundStatement		22:43:436:436	1188916	1					
ANR	1189005	ReturnStatement	return false ;	73:2:1933:1945	1188916	0	True				
ANR	1189006	Identifier	false		1188916	0					
ANR	1189007	IdentifierDeclStatement	int num_matches ;	76:1:1952:1968	1188916	8	True				
ANR	1189008	IdentifierDecl	num_matches		1188916	0					
ANR	1189009	IdentifierDeclType	int		1188916	0					
ANR	1189010	Identifier	num_matches		1188916	1					
ANR	1189011	IfStatement	if ( ! rsock -> code ( num_matches ) )		1188916	9					
ANR	1189012	Condition	! rsock -> code ( num_matches )	77:6:1976:2002	1188916	0	True				
ANR	1189013	UnaryOperationExpression	! rsock -> code ( num_matches )		1188916	0					
ANR	1189014	UnaryOperator	!		1188916	0					
ANR	1189015	CallExpression	rsock -> code ( num_matches )		1188916	1					
ANR	1189016	Callee	rsock -> code		1188916	0					
ANR	1189017	PtrMemberAccess	rsock -> code		1188916	0					
ANR	1189018	Identifier	rsock		1188916	0					
ANR	1189019	Identifier	code		1188916	1					
ANR	1189020	ArgumentList	num_matches		1188916	1					
ANR	1189021	Argument	num_matches		1188916	0					
ANR	1189022	Identifier	num_matches		1188916	0					
ANR	1189023	CompoundStatement		27:36:513:513	1188916	1					
ANR	1189024	Statement	delete	78:2:2010:2015	1188916	0	True				
ANR	1189025	ExpressionStatement	rsock	78:9:2017:2022	1188916	1	True				
ANR	1189026	Identifier	rsock		1188916	0					
ANR	1189027	ReturnStatement	return false ;	79:2:2026:2038	1188916	2	True				
ANR	1189028	Identifier	false		1188916	0					
ANR	1189029	IfStatement	if ( num_matches < 0 )		1188916	10					
ANR	1189030	Condition	num_matches < 0	81:6:2049:2063	1188916	0	True				
ANR	1189031	RelationalExpression	num_matches < 0		1188916	0		<			
ANR	1189032	Identifier	num_matches		1188916	0					
ANR	1189033	PrimaryExpression	0		1188916	1					
ANR	1189034	CompoundStatement		31:24:574:574	1188916	1					
ANR	1189035	ExpressionStatement	rsock -> close ( )	82:2:2071:2086	1188916	0	True				
ANR	1189036	CallExpression	rsock -> close ( )		1188916	0					
ANR	1189037	Callee	rsock -> close		1188916	0					
ANR	1189038	PtrMemberAccess	rsock -> close		1188916	0					
ANR	1189039	Identifier	rsock		1188916	0					
ANR	1189040	Identifier	close		1188916	1					
ANR	1189041	ArgumentList			1188916	1					
ANR	1189042	Statement	delete	83:2:2090:2095	1188916	1	True				
ANR	1189043	ExpressionStatement	rsock	83:9:2097:2102	1188916	2	True				
ANR	1189044	Identifier	rsock		1188916	0					
ANR	1189045	ReturnStatement	return true ;	84:2:2106:2117	1188916	3	True				
ANR	1189046	Identifier	true		1188916	0					
ANR	1189047	ForStatement	for ( int num = 0 ; num < num_matches ; num ++ )		1188916	11					
ANR	1189048	ForInit	int num = 0 ;	86:6:2128:2139	1188916	0	True				
ANR	1189049	IdentifierDeclStatement	int num = 0 ;		1188916	0					
ANR	1189050	IdentifierDecl	num = 0		1188916	0					
ANR	1189051	IdentifierDeclType	int		1188916	0					
ANR	1189052	Identifier	num		1188916	1					
ANR	1189053	AssignmentExpression	num = 0		1188916	2		=			
ANR	1189054	Identifier	num		1188916	0					
ANR	1189055	PrimaryExpression	0		1188916	1					
ANR	1189056	Condition	num < num_matches	86:20:2142:2158	1188916	1	True				
ANR	1189057	RelationalExpression	num < num_matches		1188916	0		<			
ANR	1189058	Identifier	num		1188916	0					
ANR	1189059	Identifier	num_matches		1188916	1					
ANR	1189060	PostIncDecOperationExpression	num ++	86:40:2162:2166	1188916	2	True				
ANR	1189061	Identifier	num		1188916	0					
ANR	1189062	IncDec	++		1188916	1					
ANR	1189063	CompoundStatement		43:2:819:877	1188916	3					
ANR	1189064	IdentifierDeclStatement	classad :: ClassAd * ad = new classad :: ClassAd ( ) ;	87:2:2174:2220	1188916	0	True				
ANR	1189065	IdentifierDecl	* ad = new classad :: ClassAd ( )		1188916	0					
ANR	1189066	IdentifierDeclType	classad :: ClassAd *		1188916	0					
ANR	1189067	Identifier	ad		1188916	1					
ANR	1189068	AssignmentExpression	* ad = new classad :: ClassAd ( )		1188916	2		=			
ANR	1189069	Identifier	ad		1188916	0					
ANR	1189070	UnaryExpression	new classad :: ClassAd ( )		1188916	1					
ANR	1189071	IfStatement	"if ( ! StreamGet ( rsock , * ad ) )"		1188916	1					
ANR	1189072	Condition	"! StreamGet ( rsock , * ad )"	88:7:2229:2252	1188916	0	True				
ANR	1189073	UnaryOperationExpression	"! StreamGet ( rsock , * ad )"		1188916	0					
ANR	1189074	UnaryOperator	!		1188916	0					
ANR	1189075	CallExpression	"StreamGet ( rsock , * ad )"		1188916	1					
ANR	1189076	Callee	StreamGet		1188916	0					
ANR	1189077	Identifier	StreamGet		1188916	0					
ANR	1189078	ArgumentList	rsock		1188916	1					
ANR	1189079	Argument	rsock		1188916	0					
ANR	1189080	Identifier	rsock		1188916	0					
ANR	1189081	Argument	* ad		1188916	1					
ANR	1189082	UnaryOperationExpression	* ad		1188916	0					
ANR	1189083	UnaryOperator	*		1188916	0					
ANR	1189084	Identifier	ad		1188916	1					
ANR	1189085	CompoundStatement		38:34:763:763	1188916	1					
ANR	1189086	Statement	delete	89:3:2261:2266	1188916	0	True				
ANR	1189087	ExpressionStatement	rsock	89:10:2268:2273	1188916	1	True				
ANR	1189088	Identifier	rsock		1188916	0					
ANR	1189089	Statement	delete	90:3:2278:2283	1188916	2	True				
ANR	1189090	ExpressionStatement	ad	90:10:2285:2287	1188916	3	True				
ANR	1189091	Identifier	ad		1188916	0					
ANR	1189092	ReturnStatement	return false ;	91:3:2292:2304	1188916	4	True				
ANR	1189093	Identifier	false		1188916	0					
ANR	1189094	IdentifierDeclStatement	DCLeaseManagerLease * lease = new DCLeaseManagerLease ( ad ) ;	93:2:2312:2370	1188916	2	True				
ANR	1189095	IdentifierDecl	* lease = new DCLeaseManagerLease ( ad )		1188916	0					
ANR	1189096	IdentifierDeclType	DCLeaseManagerLease *		1188916	0					
ANR	1189097	Identifier	lease		1188916	1					
ANR	1189098	AssignmentExpression	* lease = new DCLeaseManagerLease ( ad )		1188916	2		=			
ANR	1189099	Identifier	ad		1188916	0					
ANR	1189100	Identifier	ad		1188916	1					
ANR	1189101	ExpressionStatement	leases . push_back ( lease )	94:2:2374:2399	1188916	3	True				
ANR	1189102	CallExpression	leases . push_back ( lease )		1188916	0					
ANR	1189103	Callee	leases . push_back		1188916	0					
ANR	1189104	MemberAccess	leases . push_back		1188916	0					
ANR	1189105	Identifier	leases		1188916	0					
ANR	1189106	Identifier	push_back		1188916	1					
ANR	1189107	ArgumentList	lease		1188916	1					
ANR	1189108	Argument	lease		1188916	0					
ANR	1189109	Identifier	lease		1188916	0					
ANR	1189110	ExpressionStatement	rsock -> close ( )	97:1:2406:2420	1188916	12	True				
ANR	1189111	CallExpression	rsock -> close ( )		1188916	0					
ANR	1189112	Callee	rsock -> close		1188916	0					
ANR	1189113	PtrMemberAccess	rsock -> close		1188916	0					
ANR	1189114	Identifier	rsock		1188916	0					
ANR	1189115	Identifier	close		1188916	1					
ANR	1189116	ArgumentList			1188916	1					
ANR	1189117	Statement	delete	98:1:2423:2428	1188916	13	True				
ANR	1189118	ExpressionStatement	rsock	98:8:2430:2435	1188916	14	True				
ANR	1189119	Identifier	rsock		1188916	0					
ANR	1189120	ReturnStatement	return true ;	99:1:2438:2449	1188916	15	True				
ANR	1189121	Identifier	true		1188916	0					
ANR	1189122	ReturnType	bool		1188916	1					
ANR	1189123	Identifier	DCLeaseManager :: getLeases		1188916	2					
ANR	1189124	ParameterList	"const classad :: ClassAd & request_ad , list < DCLeaseManagerLease * > & leases"		1188916	3					
ANR	1189125	Parameter	const classad :: ClassAd & request_ad	49:27:1408:1441	1188916	0	True				
ANR	1189126	ParameterType	const classad :: ClassAd &		1188916	0					
ANR	1189127	Identifier	request_ad		1188916	1					
ANR	1189128	Parameter	list < DCLeaseManagerLease * > & leases	50:9:1453:1488	1188916	1	True				
ANR	1189129	ParameterType	list < DCLeaseManagerLease * > &		1188916	0					
ANR	1189130	Identifier	leases		1188916	1					
ANR	1189131	CFGEntryNode	ENTRY		1188916		True				
ANR	1189132	CFGExitNode	EXIT		1188916		True				
ANR	1189133	Symbol	LEASE_MANAGER_GET_LEASES		1188916						
ANR	1189134	Symbol	ad		1188916						
ANR	1189135	Symbol	request_ad		1188916						
ANR	1189136	Symbol	num		1188916						
ANR	1189137	Symbol	false		1188916						
ANR	1189138	Symbol	rsock		1188916						
ANR	1189139	Symbol	* ad		1188916						
ANR	1189140	Symbol	startCommand		1188916						
ANR	1189141	Symbol	StreamPut		1188916						
ANR	1189142	Symbol	leases		1188916						
ANR	1189143	Symbol	rc		1188916						
ANR	1189144	Symbol	errstack		1188916						
ANR	1189145	Symbol	StreamGet		1188916						
ANR	1189146	Symbol	true		1188916						
ANR	1189147	Symbol	Stream :: reli_sock		1188916						
ANR	1189148	Symbol	lease		1188916						
ANR	1189149	Symbol	OK		1188916						
ANR	1189150	Symbol	num_matches		1188916						
ANR	1189151	Symbol	* rsock		1188916						
ANR	1189152	Symbol	rsock -> code		1188916						
ANR	1189153	Function	DCLeaseManager :: getLeases	102:0:2454:3195							
ANR	1189154	FunctionDef	"DCLeaseManager :: getLeases (const char * requestor_name , int number_requested , int duration , const char * requirements , const char * rank , list < DCLeaseManagerLease * > & leases)"		1189153	0					
ANR	1189155	CompoundStatement		109:0:2678:3195	1189153	0					
ANR	1189156	IfStatement	if ( ( ! requestor_name ) || ( number_requested < 0 ) || ( duration < 0 ) )		1189153	0					
ANR	1189157	Condition	( ! requestor_name ) || ( number_requested < 0 ) || ( duration < 0 )	110:6:2686:2759	1189153	0	True				
ANR	1189158	OrExpression	( ! requestor_name ) || ( number_requested < 0 ) || ( duration < 0 )		1189153	0		||			
ANR	1189159	UnaryOperationExpression	! requestor_name		1189153	0					
ANR	1189160	UnaryOperator	!		1189153	0					
ANR	1189161	Identifier	requestor_name		1189153	1					
ANR	1189162	OrExpression	( number_requested < 0 ) || ( duration < 0 )		1189153	1		||			
ANR	1189163	RelationalExpression	number_requested < 0		1189153	0		<			
ANR	1189164	Identifier	number_requested		1189153	0					
ANR	1189165	PrimaryExpression	0		1189153	1					
ANR	1189166	RelationalExpression	duration < 0		1189153	1		<			
ANR	1189167	Identifier	duration		1189153	0					
ANR	1189168	PrimaryExpression	0		1189153	1					
ANR	1189169	CompoundStatement		4:22:84:84	1189153	1					
ANR	1189170	ReturnStatement	return false ;	113:2:2767:2779	1189153	0	True				
ANR	1189171	Identifier	false		1189153	0					
ANR	1189172	IdentifierDeclStatement	classad :: ClassAd ad ;	116:1:2786:2805	1189153	1	True				
ANR	1189173	IdentifierDecl	ad		1189153	0					
ANR	1189174	IdentifierDeclType	classad :: ClassAd		1189153	0					
ANR	1189175	Identifier	ad		1189153	1					
ANR	1189176	ExpressionStatement	"ad . InsertAttr ( ""Name"" , requestor_name )"	117:1:2808:2847	1189153	2	True				
ANR	1189177	CallExpression	"ad . InsertAttr ( ""Name"" , requestor_name )"		1189153	0					
ANR	1189178	Callee	ad . InsertAttr		1189153	0					
ANR	1189179	MemberAccess	ad . InsertAttr		1189153	0					
ANR	1189180	Identifier	ad		1189153	0					
ANR	1189181	Identifier	InsertAttr		1189153	1					
ANR	1189182	ArgumentList	"""Name"""		1189153	1					
ANR	1189183	Argument	"""Name"""		1189153	0					
ANR	1189184	PrimaryExpression	"""Name"""		1189153	0					
ANR	1189185	Argument	requestor_name		1189153	1					
ANR	1189186	Identifier	requestor_name		1189153	0					
ANR	1189187	ExpressionStatement	"ad . InsertAttr ( ""RequestCount"" , number_requested )"	118:1:2850:2899	1189153	3	True				
ANR	1189188	CallExpression	"ad . InsertAttr ( ""RequestCount"" , number_requested )"		1189153	0					
ANR	1189189	Callee	ad . InsertAttr		1189153	0					
ANR	1189190	MemberAccess	ad . InsertAttr		1189153	0					
ANR	1189191	Identifier	ad		1189153	0					
ANR	1189192	Identifier	InsertAttr		1189153	1					
ANR	1189193	ArgumentList	"""RequestCount"""		1189153	1					
ANR	1189194	Argument	"""RequestCount"""		1189153	0					
ANR	1189195	PrimaryExpression	"""RequestCount"""		1189153	0					
ANR	1189196	Argument	number_requested		1189153	1					
ANR	1189197	Identifier	number_requested		1189153	0					
ANR	1189198	ExpressionStatement	"ad . InsertAttr ( ""LeaseDuration"" , duration )"	119:1:2902:2944	1189153	4	True				
ANR	1189199	CallExpression	"ad . InsertAttr ( ""LeaseDuration"" , duration )"		1189153	0					
ANR	1189200	Callee	ad . InsertAttr		1189153	0					
ANR	1189201	MemberAccess	ad . InsertAttr		1189153	0					
ANR	1189202	Identifier	ad		1189153	0					
ANR	1189203	Identifier	InsertAttr		1189153	1					
ANR	1189204	ArgumentList	"""LeaseDuration"""		1189153	1					
ANR	1189205	Argument	"""LeaseDuration"""		1189153	0					
ANR	1189206	PrimaryExpression	"""LeaseDuration"""		1189153	0					
ANR	1189207	Argument	duration		1189153	1					
ANR	1189208	Identifier	duration		1189153	0					
ANR	1189209	IfStatement	if ( requirements )		1189153	5					
ANR	1189210	Condition	requirements	120:6:2952:2963	1189153	0	True				
ANR	1189211	Identifier	requirements		1189153	0					
ANR	1189212	CompoundStatement		14:2:325:389	1189153	1					
ANR	1189213	IdentifierDeclStatement	classad :: ClassAdParser parser ;	121:2:2971:3000	1189153	0	True				
ANR	1189214	IdentifierDecl	parser		1189153	0					
ANR	1189215	IdentifierDeclType	classad :: ClassAdParser		1189153	0					
ANR	1189216	Identifier	parser		1189153	1					
ANR	1189217	IdentifierDeclStatement	classad :: ExprTree * expr = parser . ParseExpression ( requirements ) ;	122:2:3004:3068	1189153	1	True				
ANR	1189218	IdentifierDecl	* expr = parser . ParseExpression ( requirements )		1189153	0					
ANR	1189219	IdentifierDeclType	classad :: ExprTree *		1189153	0					
ANR	1189220	Identifier	expr		1189153	1					
ANR	1189221	AssignmentExpression	* expr = parser . ParseExpression ( requirements )		1189153	2		=			
ANR	1189222	Identifier	expr		1189153	0					
ANR	1189223	CallExpression	parser . ParseExpression ( requirements )		1189153	1					
ANR	1189224	Callee	parser . ParseExpression		1189153	0					
ANR	1189225	MemberAccess	parser . ParseExpression		1189153	0					
ANR	1189226	Identifier	parser		1189153	0					
ANR	1189227	Identifier	ParseExpression		1189153	1					
ANR	1189228	ArgumentList	requirements		1189153	1					
ANR	1189229	Argument	requirements		1189153	0					
ANR	1189230	Identifier	requirements		1189153	0					
ANR	1189231	ExpressionStatement	"ad . Insert ( ""Requirements"" , expr )"	123:2:3072:3105	1189153	2	True				
ANR	1189232	CallExpression	"ad . Insert ( ""Requirements"" , expr )"		1189153	0					
ANR	1189233	Callee	ad . Insert		1189153	0					
ANR	1189234	MemberAccess	ad . Insert		1189153	0					
ANR	1189235	Identifier	ad		1189153	0					
ANR	1189236	Identifier	Insert		1189153	1					
ANR	1189237	ArgumentList	"""Requirements"""		1189153	1					
ANR	1189238	Argument	"""Requirements"""		1189153	0					
ANR	1189239	PrimaryExpression	"""Requirements"""		1189153	0					
ANR	1189240	Argument	expr		1189153	1					
ANR	1189241	Identifier	expr		1189153	0					
ANR	1189242	IfStatement	if ( rank )		1189153	6					
ANR	1189243	Condition	rank	125:6:3116:3119	1189153	0	True				
ANR	1189244	Identifier	rank		1189153	0					
ANR	1189245	CompoundStatement		17:13:444:444	1189153	1					
ANR	1189246	ExpressionStatement	"ad . InsertAttr ( ""Rank"" , rank )"	126:2:3127:3156	1189153	0	True				
ANR	1189247	CallExpression	"ad . InsertAttr ( ""Rank"" , rank )"		1189153	0					
ANR	1189248	Callee	ad . InsertAttr		1189153	0					
ANR	1189249	MemberAccess	ad . InsertAttr		1189153	0					
ANR	1189250	Identifier	ad		1189153	0					
ANR	1189251	Identifier	InsertAttr		1189153	1					
ANR	1189252	ArgumentList	"""Rank"""		1189153	1					
ANR	1189253	Argument	"""Rank"""		1189153	0					
ANR	1189254	PrimaryExpression	"""Rank"""		1189153	0					
ANR	1189255	Argument	rank		1189153	1					
ANR	1189256	Identifier	rank		1189153	0					
ANR	1189257	ReturnStatement	"return getLeases ( ad , leases ) ;"	129:1:3163:3193	1189153	7	True				
ANR	1189258	CallExpression	"getLeases ( ad , leases )"		1189153	0					
ANR	1189259	Callee	getLeases		1189153	0					
ANR	1189260	Identifier	getLeases		1189153	0					
ANR	1189261	ArgumentList	ad		1189153	1					
ANR	1189262	Argument	ad		1189153	0					
ANR	1189263	Identifier	ad		1189153	0					
ANR	1189264	Argument	leases		1189153	1					
ANR	1189265	Identifier	leases		1189153	0					
ANR	1189266	ReturnType	bool		1189153	1					
ANR	1189267	Identifier	DCLeaseManager :: getLeases		1189153	2					
ANR	1189268	ParameterList	"const char * requestor_name , int number_requested , int duration , const char * requirements , const char * rank , list < DCLeaseManagerLease * > & leases"		1189153	3					
ANR	1189269	Parameter	const char * requestor_name	103:27:2486:2511	1189153	0	True				
ANR	1189270	ParameterType	const char *		1189153	0					
ANR	1189271	Identifier	requestor_name		1189153	1					
ANR	1189272	Parameter	int number_requested	104:9:2523:2542	1189153	1	True				
ANR	1189273	ParameterType	int		1189153	0					
ANR	1189274	Identifier	number_requested		1189153	1					
ANR	1189275	Parameter	int duration	105:9:2554:2565	1189153	2	True				
ANR	1189276	ParameterType	int		1189153	0					
ANR	1189277	Identifier	duration		1189153	1					
ANR	1189278	Parameter	const char * requirements	106:9:2577:2600	1189153	3	True				
ANR	1189279	ParameterType	const char *		1189153	0					
ANR	1189280	Identifier	requirements		1189153	1					
ANR	1189281	Parameter	const char * rank	107:9:2612:2627	1189153	4	True				
ANR	1189282	ParameterType	const char *		1189153	0					
ANR	1189283	Identifier	rank		1189153	1					
ANR	1189284	Parameter	list < DCLeaseManagerLease * > & leases	108:9:2639:2674	1189153	5	True				
ANR	1189285	ParameterType	list < DCLeaseManagerLease * > &		1189153	0					
ANR	1189286	Identifier	leases		1189153	1					
ANR	1189287	CFGEntryNode	ENTRY		1189153		True				
ANR	1189288	CFGExitNode	EXIT		1189153		True				
ANR	1189289	Symbol	duration		1189153						
ANR	1189290	Symbol	getLeases		1189153						
ANR	1189291	Symbol	leases		1189153						
ANR	1189292	Symbol	requirements		1189153						
ANR	1189293	Symbol	ad		1189153						
ANR	1189294	Symbol	parser		1189153						
ANR	1189295	Symbol	parser . ParseExpression		1189153						
ANR	1189296	Symbol	requestor_name		1189153						
ANR	1189297	Symbol	false		1189153						
ANR	1189298	Symbol	rank		1189153						
ANR	1189299	Symbol	expr		1189153						
ANR	1189300	Symbol	number_requested		1189153						
ANR	1189301	Function	DCLeaseManager :: renewLeases	132:0:3198:3945							
ANR	1189302	FunctionDef	"DCLeaseManager :: renewLeases (list < const DCLeaseManagerLease * > & leases , list < DCLeaseManagerLease * > & out_leases)"		1189301	0					
ANR	1189303	CompoundStatement		136:0:3321:3945	1189301	0					
ANR	1189304	IdentifierDeclStatement	"ReliSock * rsock = ( ReliSock * ) startCommand ( LEASE_MANAGER_RENEW_LEASE , Stream :: reli_sock , 20 ) ;"	138:1:3349:3445	1189301	0	True				
ANR	1189305	IdentifierDecl	"* rsock = ( ReliSock * ) startCommand ( LEASE_MANAGER_RENEW_LEASE , Stream :: reli_sock , 20 )"		1189301	0					
ANR	1189306	IdentifierDeclType	ReliSock *		1189301	0					
ANR	1189307	Identifier	rsock		1189301	1					
ANR	1189308	AssignmentExpression	"* rsock = ( ReliSock * ) startCommand ( LEASE_MANAGER_RENEW_LEASE , Stream :: reli_sock , 20 )"		1189301	2		=			
ANR	1189309	Identifier	rsock		1189301	0					
ANR	1189310	CastExpression	"( ReliSock * ) startCommand ( LEASE_MANAGER_RENEW_LEASE , Stream :: reli_sock , 20 )"		1189301	1					
ANR	1189311	CastTarget	ReliSock *		1189301	0					
ANR	1189312	CallExpression	"startCommand ( LEASE_MANAGER_RENEW_LEASE , Stream :: reli_sock , 20 )"		1189301	1					
ANR	1189313	Callee	startCommand		1189301	0					
ANR	1189314	Identifier	startCommand		1189301	0					
ANR	1189315	ArgumentList	LEASE_MANAGER_RENEW_LEASE		1189301	1					
ANR	1189316	Argument	LEASE_MANAGER_RENEW_LEASE		1189301	0					
ANR	1189317	Identifier	LEASE_MANAGER_RENEW_LEASE		1189301	0					
ANR	1189318	Argument	Stream :: reli_sock		1189301	1					
ANR	1189319	Identifier	Stream :: reli_sock		1189301	0					
ANR	1189320	Argument	20		1189301	2					
ANR	1189321	PrimaryExpression	20		1189301	0					
ANR	1189322	IfStatement	if ( ! rsock )		1189301	1					
ANR	1189323	Condition	! rsock	140:6:3453:3459	1189301	0	True				
ANR	1189324	UnaryOperationExpression	! rsock		1189301	0					
ANR	1189325	UnaryOperator	!		1189301	0					
ANR	1189326	Identifier	rsock		1189301	1					
ANR	1189327	CompoundStatement		5:16:141:141	1189301	1					
ANR	1189328	ReturnStatement	return false ;	141:2:3467:3479	1189301	0	True				
ANR	1189329	Identifier	false		1189301	0					
ANR	1189330	IfStatement	"if ( ! SendLeases ( rsock , leases ) )"		1189301	2					
ANR	1189331	Condition	"! SendLeases ( rsock , leases )"	145:6:3511:3538	1189301	0	True				
ANR	1189332	UnaryOperationExpression	"! SendLeases ( rsock , leases )"		1189301	0					
ANR	1189333	UnaryOperator	!		1189301	0					
ANR	1189334	CallExpression	"SendLeases ( rsock , leases )"		1189301	1					
ANR	1189335	Callee	SendLeases		1189301	0					
ANR	1189336	Identifier	SendLeases		1189301	0					
ANR	1189337	ArgumentList	rsock		1189301	1					
ANR	1189338	Argument	rsock		1189301	0					
ANR	1189339	Identifier	rsock		1189301	0					
ANR	1189340	Argument	leases		1189301	1					
ANR	1189341	Identifier	leases		1189301	0					
ANR	1189342	CompoundStatement		10:37:220:220	1189301	1					
ANR	1189343	Statement	delete	146:2:3546:3551	1189301	0	True				
ANR	1189344	ExpressionStatement	rsock	146:9:3553:3558	1189301	1	True				
ANR	1189345	Identifier	rsock		1189301	0					
ANR	1189346	ReturnStatement	return false ;	147:2:3562:3574	1189301	2	True				
ANR	1189347	Identifier	false		1189301	0					
ANR	1189348	ExpressionStatement	rsock -> end_of_message ( )	150:1:3581:3604	1189301	3	True				
ANR	1189349	CallExpression	rsock -> end_of_message ( )		1189301	0					
ANR	1189350	Callee	rsock -> end_of_message		1189301	0					
ANR	1189351	PtrMemberAccess	rsock -> end_of_message		1189301	0					
ANR	1189352	Identifier	rsock		1189301	0					
ANR	1189353	Identifier	end_of_message		1189301	1					
ANR	1189354	ArgumentList			1189301	1					
ANR	1189355	IdentifierDeclStatement	int rc ;	153:1:3637:3644	1189301	4	True				
ANR	1189356	IdentifierDecl	rc		1189301	0					
ANR	1189357	IdentifierDeclType	int		1189301	0					
ANR	1189358	Identifier	rc		1189301	1					
ANR	1189359	ExpressionStatement	rsock -> decode ( )	154:1:3647:3662	1189301	5	True				
ANR	1189360	CallExpression	rsock -> decode ( )		1189301	0					
ANR	1189361	Callee	rsock -> decode		1189301	0					
ANR	1189362	PtrMemberAccess	rsock -> decode		1189301	0					
ANR	1189363	Identifier	rsock		1189301	0					
ANR	1189364	Identifier	decode		1189301	1					
ANR	1189365	ArgumentList			1189301	1					
ANR	1189366	IfStatement	if ( ! rsock -> get ( rc ) )		1189301	6					
ANR	1189367	Condition	! rsock -> get ( rc )	155:6:3670:3686	1189301	0	True				
ANR	1189368	UnaryOperationExpression	! rsock -> get ( rc )		1189301	0					
ANR	1189369	UnaryOperator	!		1189301	0					
ANR	1189370	CallExpression	rsock -> get ( rc )		1189301	1					
ANR	1189371	Callee	rsock -> get		1189301	0					
ANR	1189372	PtrMemberAccess	rsock -> get		1189301	0					
ANR	1189373	Identifier	rsock		1189301	0					
ANR	1189374	Identifier	get		1189301	1					
ANR	1189375	ArgumentList	rc		1189301	1					
ANR	1189376	Argument	rc		1189301	0					
ANR	1189377	Identifier	rc		1189301	0					
ANR	1189378	CompoundStatement		20:26:368:368	1189301	1					
ANR	1189379	Statement	delete	156:2:3694:3699	1189301	0	True				
ANR	1189380	ExpressionStatement	rsock	156:9:3701:3706	1189301	1	True				
ANR	1189381	Identifier	rsock		1189301	0					
ANR	1189382	ReturnStatement	return false ;	157:2:3710:3722	1189301	2	True				
ANR	1189383	Identifier	false		1189301	0					
ANR	1189384	IfStatement	if ( rc != OK )		1189301	7					
ANR	1189385	Condition	rc != OK	159:6:3733:3740	1189301	0	True				
ANR	1189386	EqualityExpression	rc != OK		1189301	0		!=			
ANR	1189387	Identifier	rc		1189301	0					
ANR	1189388	Identifier	OK		1189301	1					
ANR	1189389	CompoundStatement		24:17:422:422	1189301	1					
ANR	1189390	Statement	delete	160:2:3748:3753	1189301	0	True				
ANR	1189391	ExpressionStatement	rsock	160:9:3755:3760	1189301	1	True				
ANR	1189392	Identifier	rsock		1189301	0					
ANR	1189393	ReturnStatement	return false ;	161:2:3764:3776	1189301	2	True				
ANR	1189394	Identifier	false		1189301	0					
ANR	1189395	IfStatement	"if ( ! GetLeases ( rsock , out_leases ) )"		1189301	8					
ANR	1189396	Condition	"! GetLeases ( rsock , out_leases )"	165:6:3827:3857	1189301	0	True				
ANR	1189397	UnaryOperationExpression	"! GetLeases ( rsock , out_leases )"		1189301	0					
ANR	1189398	UnaryOperator	!		1189301	0					
ANR	1189399	CallExpression	"GetLeases ( rsock , out_leases )"		1189301	1					
ANR	1189400	Callee	GetLeases		1189301	0					
ANR	1189401	Identifier	GetLeases		1189301	0					
ANR	1189402	ArgumentList	rsock		1189301	1					
ANR	1189403	Argument	rsock		1189301	0					
ANR	1189404	Identifier	rsock		1189301	0					
ANR	1189405	Argument	out_leases		1189301	1					
ANR	1189406	Identifier	out_leases		1189301	0					
ANR	1189407	CompoundStatement		30:40:539:539	1189301	1					
ANR	1189408	Statement	delete	166:2:3865:3870	1189301	0	True				
ANR	1189409	ExpressionStatement	rsock	166:9:3872:3877	1189301	1	True				
ANR	1189410	Identifier	rsock		1189301	0					
ANR	1189411	ReturnStatement	return false ;	167:2:3881:3893	1189301	2	True				
ANR	1189412	Identifier	false		1189301	0					
ANR	1189413	ExpressionStatement	rsock -> close ( )	170:1:3900:3914	1189301	9	True				
ANR	1189414	CallExpression	rsock -> close ( )		1189301	0					
ANR	1189415	Callee	rsock -> close		1189301	0					
ANR	1189416	PtrMemberAccess	rsock -> close		1189301	0					
ANR	1189417	Identifier	rsock		1189301	0					
ANR	1189418	Identifier	close		1189301	1					
ANR	1189419	ArgumentList			1189301	1					
ANR	1189420	Statement	delete	171:1:3917:3922	1189301	10	True				
ANR	1189421	ExpressionStatement	rsock	171:8:3924:3929	1189301	11	True				
ANR	1189422	Identifier	rsock		1189301	0					
ANR	1189423	ReturnStatement	return true ;	172:1:3932:3943	1189301	12	True				
ANR	1189424	Identifier	true		1189301	0					
ANR	1189425	ReturnType	bool		1189301	1					
ANR	1189426	Identifier	DCLeaseManager :: renewLeases		1189301	2					
ANR	1189427	ParameterList	"list < const DCLeaseManagerLease * > & leases , list < DCLeaseManagerLease * > & out_leases"		1189301	3					
ANR	1189428	Parameter	list < const DCLeaseManagerLease * > & leases	134:1:3233:3274	1189301	0	True				
ANR	1189429	ParameterType	list < const DCLeaseManagerLease * > &		1189301	0					
ANR	1189430	Identifier	leases		1189301	1					
ANR	1189431	Parameter	list < DCLeaseManagerLease * > & out_leases	135:1:3278:3317	1189301	1	True				
ANR	1189432	ParameterType	list < DCLeaseManagerLease * > &		1189301	0					
ANR	1189433	Identifier	out_leases		1189301	1					
ANR	1189434	CFGEntryNode	ENTRY		1189301		True				
ANR	1189435	CFGExitNode	EXIT		1189301		True				
ANR	1189436	Symbol	false		1189301						
ANR	1189437	Symbol	rsock		1189301						
ANR	1189438	Symbol	LEASE_MANAGER_RENEW_LEASE		1189301						
ANR	1189439	Symbol	startCommand		1189301						
ANR	1189440	Symbol	SendLeases		1189301						
ANR	1189441	Symbol	leases		1189301						
ANR	1189442	Symbol	rc		1189301						
ANR	1189443	Symbol	out_leases		1189301						
ANR	1189444	Symbol	true		1189301						
ANR	1189445	Symbol	Stream :: reli_sock		1189301						
ANR	1189446	Symbol	OK		1189301						
ANR	1189447	Symbol	* rsock		1189301						
ANR	1189448	Symbol	rsock -> get		1189301						
ANR	1189449	Symbol	GetLeases		1189301						
ANR	1189450	Function	DCLeaseManager :: releaseLeases	175:0:3948:4712							
ANR	1189451	FunctionDef	DCLeaseManager :: releaseLeases (list < DCLeaseManagerLease * > & leases)		1189450	0					
ANR	1189452	CompoundStatement		178:0:4023:4712	1189450	0					
ANR	1189453	IdentifierDeclStatement	"ReliSock * rsock = ( ReliSock * ) startCommand ( LEASE_MANAGER_RELEASE_LEASE , Stream :: reli_sock , 20 ) ;"	180:1:4051:4149	1189450	0	True				
ANR	1189454	IdentifierDecl	"* rsock = ( ReliSock * ) startCommand ( LEASE_MANAGER_RELEASE_LEASE , Stream :: reli_sock , 20 )"		1189450	0					
ANR	1189455	IdentifierDeclType	ReliSock *		1189450	0					
ANR	1189456	Identifier	rsock		1189450	1					
ANR	1189457	AssignmentExpression	"* rsock = ( ReliSock * ) startCommand ( LEASE_MANAGER_RELEASE_LEASE , Stream :: reli_sock , 20 )"		1189450	2		=			
ANR	1189458	Identifier	rsock		1189450	0					
ANR	1189459	CastExpression	"( ReliSock * ) startCommand ( LEASE_MANAGER_RELEASE_LEASE , Stream :: reli_sock , 20 )"		1189450	1					
ANR	1189460	CastTarget	ReliSock *		1189450	0					
ANR	1189461	CallExpression	"startCommand ( LEASE_MANAGER_RELEASE_LEASE , Stream :: reli_sock , 20 )"		1189450	1					
ANR	1189462	Callee	startCommand		1189450	0					
ANR	1189463	Identifier	startCommand		1189450	0					
ANR	1189464	ArgumentList	LEASE_MANAGER_RELEASE_LEASE		1189450	1					
ANR	1189465	Argument	LEASE_MANAGER_RELEASE_LEASE		1189450	0					
ANR	1189466	Identifier	LEASE_MANAGER_RELEASE_LEASE		1189450	0					
ANR	1189467	Argument	Stream :: reli_sock		1189450	1					
ANR	1189468	Identifier	Stream :: reli_sock		1189450	0					
ANR	1189469	Argument	20		1189450	2					
ANR	1189470	PrimaryExpression	20		1189450	0					
ANR	1189471	IfStatement	if ( ! rsock )		1189450	1					
ANR	1189472	Condition	! rsock	182:6:4157:4163	1189450	0	True				
ANR	1189473	UnaryOperationExpression	! rsock		1189450	0					
ANR	1189474	UnaryOperator	!		1189450	0					
ANR	1189475	Identifier	rsock		1189450	1					
ANR	1189476	CompoundStatement		5:16:143:143	1189450	1					
ANR	1189477	ReturnStatement	return false ;	183:2:4171:4183	1189450	0	True				
ANR	1189478	Identifier	false		1189450	0					
ANR	1189479	IfStatement	"if ( ! SendLeases ( rsock , DCLeaseManagerLease_getConstList ( leases ) ) )"		1189450	2					
ANR	1189480	Condition	"! SendLeases ( rsock , DCLeaseManagerLease_getConstList ( leases ) )"	187:6:4215:4275	1189450	0	True				
ANR	1189481	UnaryOperationExpression	"! SendLeases ( rsock , DCLeaseManagerLease_getConstList ( leases ) )"		1189450	0					
ANR	1189482	UnaryOperator	!		1189450	0					
ANR	1189483	CallExpression	"SendLeases ( rsock , DCLeaseManagerLease_getConstList ( leases ) )"		1189450	1					
ANR	1189484	Callee	SendLeases		1189450	0					
ANR	1189485	Identifier	SendLeases		1189450	0					
ANR	1189486	ArgumentList	rsock		1189450	1					
ANR	1189487	Argument	rsock		1189450	0					
ANR	1189488	Identifier	rsock		1189450	0					
ANR	1189489	Argument	DCLeaseManagerLease_getConstList ( leases )		1189450	1					
ANR	1189490	CallExpression	DCLeaseManagerLease_getConstList ( leases )		1189450	0					
ANR	1189491	Callee	DCLeaseManagerLease_getConstList		1189450	0					
ANR	1189492	Identifier	DCLeaseManagerLease_getConstList		1189450	0					
ANR	1189493	ArgumentList	leases		1189450	1					
ANR	1189494	Argument	leases		1189450	0					
ANR	1189495	Identifier	leases		1189450	0					
ANR	1189496	CompoundStatement		10:70:255:255	1189450	1					
ANR	1189497	Statement	delete	188:2:4283:4288	1189450	0	True				
ANR	1189498	ExpressionStatement	rsock	188:9:4290:4295	1189450	1	True				
ANR	1189499	Identifier	rsock		1189450	0					
ANR	1189500	ReturnStatement	return false ;	189:2:4299:4311	1189450	2	True				
ANR	1189501	Identifier	false		1189450	0					
ANR	1189502	ExpressionStatement	rsock -> end_of_message ( )	192:1:4318:4341	1189450	3	True				
ANR	1189503	CallExpression	rsock -> end_of_message ( )		1189450	0					
ANR	1189504	Callee	rsock -> end_of_message		1189450	0					
ANR	1189505	PtrMemberAccess	rsock -> end_of_message		1189450	0					
ANR	1189506	Identifier	rsock		1189450	0					
ANR	1189507	Identifier	end_of_message		1189450	1					
ANR	1189508	ArgumentList			1189450	1					
ANR	1189509	IdentifierDeclStatement	int rc ;	195:1:4374:4381	1189450	4	True				
ANR	1189510	IdentifierDecl	rc		1189450	0					
ANR	1189511	IdentifierDeclType	int		1189450	0					
ANR	1189512	Identifier	rc		1189450	1					
ANR	1189513	ExpressionStatement	rsock -> decode ( )	196:1:4384:4399	1189450	5	True				
ANR	1189514	CallExpression	rsock -> decode ( )		1189450	0					
ANR	1189515	Callee	rsock -> decode		1189450	0					
ANR	1189516	PtrMemberAccess	rsock -> decode		1189450	0					
ANR	1189517	Identifier	rsock		1189450	0					
ANR	1189518	Identifier	decode		1189450	1					
ANR	1189519	ArgumentList			1189450	1					
ANR	1189520	IfStatement	if ( ! rsock -> get ( rc ) )		1189450	6					
ANR	1189521	Condition	! rsock -> get ( rc )	197:6:4407:4423	1189450	0	True				
ANR	1189522	UnaryOperationExpression	! rsock -> get ( rc )		1189450	0					
ANR	1189523	UnaryOperator	!		1189450	0					
ANR	1189524	CallExpression	rsock -> get ( rc )		1189450	1					
ANR	1189525	Callee	rsock -> get		1189450	0					
ANR	1189526	PtrMemberAccess	rsock -> get		1189450	0					
ANR	1189527	Identifier	rsock		1189450	0					
ANR	1189528	Identifier	get		1189450	1					
ANR	1189529	ArgumentList	rc		1189450	1					
ANR	1189530	Argument	rc		1189450	0					
ANR	1189531	Identifier	rc		1189450	0					
ANR	1189532	CompoundStatement		20:26:403:403	1189450	1					
ANR	1189533	Statement	delete	198:2:4431:4436	1189450	0	True				
ANR	1189534	ExpressionStatement	rsock	198:9:4438:4443	1189450	1	True				
ANR	1189535	Identifier	rsock		1189450	0					
ANR	1189536	ReturnStatement	return false ;	199:2:4447:4459	1189450	2	True				
ANR	1189537	Identifier	false		1189450	0					
ANR	1189538	IdentifierDeclStatement	list < DCLeaseManagerLease * > :: iterator iter ;	203:1:4491:4534	1189450	7	True				
ANR	1189539	IdentifierDecl	iter		1189450	0					
ANR	1189540	IdentifierDeclType	list < DCLeaseManagerLease * > :: iterator		1189450	0					
ANR	1189541	Identifier	iter		1189450	1					
ANR	1189542	ForStatement	for ( iter = leases . begin ( ) ; iter != leases . end ( ) ; iter ++ )		1189450	8					
ANR	1189543	ForInit	iter = leases . begin ( ) ;	204:6:4542:4563	1189450	0	True				
ANR	1189544	AssignmentExpression	iter = leases . begin ( )		1189450	0		=			
ANR	1189545	Identifier	iter		1189450	0					
ANR	1189546	CallExpression	leases . begin ( )		1189450	1					
ANR	1189547	Callee	leases . begin		1189450	0					
ANR	1189548	MemberAccess	leases . begin		1189450	0					
ANR	1189549	Identifier	leases		1189450	0					
ANR	1189550	Identifier	begin		1189450	1					
ANR	1189551	ArgumentList			1189450	1					
ANR	1189552	Condition	iter != leases . end ( )	204:29:4565:4584	1189450	1	True				
ANR	1189553	EqualityExpression	iter != leases . end ( )		1189450	0		!=			
ANR	1189554	Identifier	iter		1189450	0					
ANR	1189555	CallExpression	leases . end ( )		1189450	1					
ANR	1189556	Callee	leases . end		1189450	0					
ANR	1189557	MemberAccess	leases . end		1189450	0					
ANR	1189558	Identifier	leases		1189450	0					
ANR	1189559	Identifier	end		1189450	1					
ANR	1189560	ArgumentList			1189450	1					
ANR	1189561	PostIncDecOperationExpression	iter ++	204:51:4587:4592	1189450	2	True				
ANR	1189562	Identifier	iter		1189450	0					
ANR	1189563	IncDec	++		1189450	1					
ANR	1189564	CompoundStatement		28:2:576:610	1189450	3					
ANR	1189565	IdentifierDeclStatement	DCLeaseManagerLease * lease = * iter ;	205:2:4600:4634	1189450	0	True				
ANR	1189566	IdentifierDecl	* lease = * iter		1189450	0					
ANR	1189567	IdentifierDeclType	DCLeaseManagerLease *		1189450	0					
ANR	1189568	Identifier	lease		1189450	1					
ANR	1189569	AssignmentExpression	* lease = * iter		1189450	2		=			
ANR	1189570	Identifier	lease		1189450	0					
ANR	1189571	UnaryOperationExpression	* iter		1189450	1					
ANR	1189572	UnaryOperator	*		1189450	0					
ANR	1189573	Identifier	iter		1189450	1					
ANR	1189574	ExpressionStatement	lease -> setDead ( true )	206:2:4638:4660	1189450	1	True				
ANR	1189575	CallExpression	lease -> setDead ( true )		1189450	0					
ANR	1189576	Callee	lease -> setDead		1189450	0					
ANR	1189577	PtrMemberAccess	lease -> setDead		1189450	0					
ANR	1189578	Identifier	lease		1189450	0					
ANR	1189579	Identifier	setDead		1189450	1					
ANR	1189580	ArgumentList	true		1189450	1					
ANR	1189581	Argument	true		1189450	0					
ANR	1189582	Identifier	true		1189450	0					
ANR	1189583	ExpressionStatement	rsock -> close ( )	209:1:4667:4681	1189450	9	True				
ANR	1189584	CallExpression	rsock -> close ( )		1189450	0					
ANR	1189585	Callee	rsock -> close		1189450	0					
ANR	1189586	PtrMemberAccess	rsock -> close		1189450	0					
ANR	1189587	Identifier	rsock		1189450	0					
ANR	1189588	Identifier	close		1189450	1					
ANR	1189589	ArgumentList			1189450	1					
ANR	1189590	Statement	delete	210:1:4684:4689	1189450	10	True				
ANR	1189591	ExpressionStatement	rsock	210:8:4691:4696	1189450	11	True				
ANR	1189592	Identifier	rsock		1189450	0					
ANR	1189593	ReturnStatement	return true ;	211:1:4699:4710	1189450	12	True				
ANR	1189594	Identifier	true		1189450	0					
ANR	1189595	ReturnType	bool		1189450	1					
ANR	1189596	Identifier	DCLeaseManager :: releaseLeases		1189450	2					
ANR	1189597	ParameterList	list < DCLeaseManagerLease * > & leases		1189450	3					
ANR	1189598	Parameter	list < DCLeaseManagerLease * > & leases	177:1:3985:4019	1189450	0	True				
ANR	1189599	ParameterType	list < DCLeaseManagerLease * > &		1189450	0					
ANR	1189600	Identifier	leases		1189450	1					
ANR	1189601	CFGEntryNode	ENTRY		1189450		True				
ANR	1189602	CFGExitNode	EXIT		1189450		True				
ANR	1189603	Symbol	DCLeaseManagerLease_getConstList		1189450						
ANR	1189604	Symbol	false		1189450						
ANR	1189605	Symbol	iter		1189450						
ANR	1189606	Symbol	leases . begin		1189450						
ANR	1189607	Symbol	rsock		1189450						
ANR	1189608	Symbol	startCommand		1189450						
ANR	1189609	Symbol	SendLeases		1189450						
ANR	1189610	Symbol	leases		1189450						
ANR	1189611	Symbol	rc		1189450						
ANR	1189612	Symbol	* iter		1189450						
ANR	1189613	Symbol	LEASE_MANAGER_RELEASE_LEASE		1189450						
ANR	1189614	Symbol	leases . end		1189450						
ANR	1189615	Symbol	true		1189450						
ANR	1189616	Symbol	Stream :: reli_sock		1189450						
ANR	1189617	Symbol	lease		1189450						
ANR	1189618	Symbol	* rsock		1189450						
ANR	1189619	Symbol	rsock -> get		1189450						
ANR	1189620	Function	DCLeaseManager :: SendLeases	214:0:4715:5271							
ANR	1189621	FunctionDef	"DCLeaseManager :: SendLeases (Stream * stream , list < const DCLeaseManagerLease * > & l_list)"		1189620	0					
ANR	1189622	CompoundStatement		218:0:4818:5271	1189620	0					
ANR	1189623	IfStatement	if ( ! stream -> put ( l_list . size ( ) ) )		1189620	0					
ANR	1189624	Condition	! stream -> put ( l_list . size ( ) )	219:6:4826:4854	1189620	0	True				
ANR	1189625	UnaryOperationExpression	! stream -> put ( l_list . size ( ) )		1189620	0					
ANR	1189626	UnaryOperator	!		1189620	0					
ANR	1189627	CallExpression	stream -> put ( l_list . size ( ) )		1189620	1					
ANR	1189628	Callee	stream -> put		1189620	0					
ANR	1189629	PtrMemberAccess	stream -> put		1189620	0					
ANR	1189630	Identifier	stream		1189620	0					
ANR	1189631	Identifier	put		1189620	1					
ANR	1189632	ArgumentList	l_list . size ( )		1189620	1					
ANR	1189633	Argument	l_list . size ( )		1189620	0					
ANR	1189634	CallExpression	l_list . size ( )		1189620	0					
ANR	1189635	Callee	l_list . size		1189620	0					
ANR	1189636	MemberAccess	l_list . size		1189620	0					
ANR	1189637	Identifier	l_list		1189620	0					
ANR	1189638	Identifier	size		1189620	1					
ANR	1189639	ArgumentList			1189620	1					
ANR	1189640	CompoundStatement		2:38:39:39	1189620	1					
ANR	1189641	ReturnStatement	return false ;	220:2:4862:4874	1189620	0	True				
ANR	1189642	Identifier	false		1189620	0					
ANR	1189643	IdentifierDeclStatement	list < const DCLeaseManagerLease * > :: iterator iter ;	223:1:4881:4930	1189620	1	True				
ANR	1189644	IdentifierDecl	iter		1189620	0					
ANR	1189645	IdentifierDeclType	list < const DCLeaseManagerLease * > :: iterator		1189620	0					
ANR	1189646	Identifier	iter		1189620	1					
ANR	1189647	ForStatement	for ( iter = l_list . begin ( ) ; iter != l_list . end ( ) ; iter ++ )		1189620	2					
ANR	1189648	ForInit	iter = l_list . begin ( ) ;	224:6:4938:4959	1189620	0	True				
ANR	1189649	AssignmentExpression	iter = l_list . begin ( )		1189620	0		=			
ANR	1189650	Identifier	iter		1189620	0					
ANR	1189651	CallExpression	l_list . begin ( )		1189620	1					
ANR	1189652	Callee	l_list . begin		1189620	0					
ANR	1189653	MemberAccess	l_list . begin		1189620	0					
ANR	1189654	Identifier	l_list		1189620	0					
ANR	1189655	Identifier	begin		1189620	1					
ANR	1189656	ArgumentList			1189620	1					
ANR	1189657	Condition	iter != l_list . end ( )	224:29:4961:4980	1189620	1	True				
ANR	1189658	EqualityExpression	iter != l_list . end ( )		1189620	0		!=			
ANR	1189659	Identifier	iter		1189620	0					
ANR	1189660	CallExpression	l_list . end ( )		1189620	1					
ANR	1189661	Callee	l_list . end		1189620	0					
ANR	1189662	MemberAccess	l_list . end		1189620	0					
ANR	1189663	Identifier	l_list		1189620	0					
ANR	1189664	Identifier	end		1189620	1					
ANR	1189665	ArgumentList			1189620	1					
ANR	1189666	PostIncDecOperationExpression	iter ++	224:51:4983:4988	1189620	2	True				
ANR	1189667	Identifier	iter		1189620	0					
ANR	1189668	IncDec	++		1189620	1					
ANR	1189669	CompoundStatement		9:2:221:272	1189620	3					
ANR	1189670	IdentifierDeclStatement	const DCLeaseManagerLease * lease = * iter ;	225:2:4996:5036	1189620	0	True				
ANR	1189671	IdentifierDecl	* lease = * iter		1189620	0					
ANR	1189672	IdentifierDeclType	const DCLeaseManagerLease *		1189620	0					
ANR	1189673	Identifier	lease		1189620	1					
ANR	1189674	AssignmentExpression	* lease = * iter		1189620	2		=			
ANR	1189675	Identifier	lease		1189620	0					
ANR	1189676	UnaryOperationExpression	* iter		1189620	1					
ANR	1189677	UnaryOperator	*		1189620	0					
ANR	1189678	Identifier	iter		1189620	1					
ANR	1189679	IdentifierDeclStatement	const char * lease_id_str = lease -> leaseId ( ) . c_str ( ) ;	226:2:5040:5091	1189620	1	True				
ANR	1189680	IdentifierDecl	* lease_id_str = lease -> leaseId ( ) . c_str ( )		1189620	0					
ANR	1189681	IdentifierDeclType	const char *		1189620	0					
ANR	1189682	Identifier	lease_id_str		1189620	1					
ANR	1189683	AssignmentExpression	* lease_id_str = lease -> leaseId ( ) . c_str ( )		1189620	2		=			
ANR	1189684	Identifier	lease_id_str		1189620	0					
ANR	1189685	CallExpression	lease -> leaseId ( ) . c_str ( )		1189620	1					
ANR	1189686	Callee	lease -> leaseId ( ) . c_str		1189620	0					
ANR	1189687	MemberAccess	lease -> leaseId ( ) . c_str		1189620	0					
ANR	1189688	CallExpression	lease -> leaseId ( )		1189620	0					
ANR	1189689	Callee	lease -> leaseId		1189620	0					
ANR	1189690	PtrMemberAccess	lease -> leaseId		1189620	0					
ANR	1189691	Identifier	lease		1189620	0					
ANR	1189692	Identifier	leaseId		1189620	1					
ANR	1189693	ArgumentList			1189620	1					
ANR	1189694	Identifier	c_str		1189620	1					
ANR	1189695	ArgumentList			1189620	1					
ANR	1189696	IfStatement	if ( ! stream -> put ( lease_id_str ) || ! stream -> put ( lease -> leaseDuration ( ) ) || ! stream -> put ( lease -> releaseLeaseWhenDone ( ) ) )		1189620	2					
ANR	1189697	Condition	! stream -> put ( lease_id_str ) || ! stream -> put ( lease -> leaseDuration ( ) ) || ! stream -> put ( lease -> releaseLeaseWhenDone ( ) )	227:7:5100:5226	1189620	0	True				
ANR	1189698	OrExpression	! stream -> put ( lease_id_str ) || ! stream -> put ( lease -> leaseDuration ( ) ) || ! stream -> put ( lease -> releaseLeaseWhenDone ( ) )		1189620	0		||			
ANR	1189699	UnaryOperationExpression	! stream -> put ( lease_id_str )		1189620	0					
ANR	1189700	UnaryOperator	!		1189620	0					
ANR	1189701	CallExpression	stream -> put ( lease_id_str )		1189620	1					
ANR	1189702	Callee	stream -> put		1189620	0					
ANR	1189703	PtrMemberAccess	stream -> put		1189620	0					
ANR	1189704	Identifier	stream		1189620	0					
ANR	1189705	Identifier	put		1189620	1					
ANR	1189706	ArgumentList	lease_id_str		1189620	1					
ANR	1189707	Argument	lease_id_str		1189620	0					
ANR	1189708	Identifier	lease_id_str		1189620	0					
ANR	1189709	OrExpression	! stream -> put ( lease -> leaseDuration ( ) ) || ! stream -> put ( lease -> releaseLeaseWhenDone ( ) )		1189620	1		||			
ANR	1189710	UnaryOperationExpression	! stream -> put ( lease -> leaseDuration ( ) )		1189620	0					
ANR	1189711	UnaryOperator	!		1189620	0					
ANR	1189712	CallExpression	stream -> put ( lease -> leaseDuration ( ) )		1189620	1					
ANR	1189713	Callee	stream -> put		1189620	0					
ANR	1189714	PtrMemberAccess	stream -> put		1189620	0					
ANR	1189715	Identifier	stream		1189620	0					
ANR	1189716	Identifier	put		1189620	1					
ANR	1189717	ArgumentList	lease -> leaseDuration ( )		1189620	1					
ANR	1189718	Argument	lease -> leaseDuration ( )		1189620	0					
ANR	1189719	CallExpression	lease -> leaseDuration ( )		1189620	0					
ANR	1189720	Callee	lease -> leaseDuration		1189620	0					
ANR	1189721	PtrMemberAccess	lease -> leaseDuration		1189620	0					
ANR	1189722	Identifier	lease		1189620	0					
ANR	1189723	Identifier	leaseDuration		1189620	1					
ANR	1189724	ArgumentList			1189620	1					
ANR	1189725	UnaryOperationExpression	! stream -> put ( lease -> releaseLeaseWhenDone ( ) )		1189620	1					
ANR	1189726	UnaryOperator	!		1189620	0					
ANR	1189727	CallExpression	stream -> put ( lease -> releaseLeaseWhenDone ( ) )		1189620	1					
ANR	1189728	Callee	stream -> put		1189620	0					
ANR	1189729	PtrMemberAccess	stream -> put		1189620	0					
ANR	1189730	Identifier	stream		1189620	0					
ANR	1189731	Identifier	put		1189620	1					
ANR	1189732	ArgumentList	lease -> releaseLeaseWhenDone ( )		1189620	1					
ANR	1189733	Argument	lease -> releaseLeaseWhenDone ( )		1189620	0					
ANR	1189734	CallExpression	lease -> releaseLeaseWhenDone ( )		1189620	0					
ANR	1189735	Callee	lease -> releaseLeaseWhenDone		1189620	0					
ANR	1189736	PtrMemberAccess	lease -> releaseLeaseWhenDone		1189620	0					
ANR	1189737	Identifier	lease		1189620	0					
ANR	1189738	Identifier	releaseLeaseWhenDone		1189620	1					
ANR	1189739	ArgumentList			1189620	1					
ANR	1189740	CompoundStatement		12:53:412:412	1189620	1					
ANR	1189741	ReturnStatement	return false ;	230:3:5236:5248	1189620	0	True				
ANR	1189742	Identifier	false		1189620	0					
ANR	1189743	ReturnStatement	return true ;	233:1:5258:5269	1189620	3	True				
ANR	1189744	Identifier	true		1189620	0					
ANR	1189745	ReturnType	bool		1189620	1					
ANR	1189746	Identifier	DCLeaseManager :: SendLeases		1189620	2					
ANR	1189747	ParameterList	"Stream * stream , list < const DCLeaseManagerLease * > & l_list"		1189620	3					
ANR	1189748	Parameter	Stream * stream	216:1:4749:4769	1189620	0	True				
ANR	1189749	ParameterType	Stream *		1189620	0					
ANR	1189750	Identifier	stream		1189620	1					
ANR	1189751	Parameter	list < const DCLeaseManagerLease * > & l_list	217:1:4773:4814	1189620	1	True				
ANR	1189752	ParameterType	list < const DCLeaseManagerLease * > &		1189620	0					
ANR	1189753	Identifier	l_list		1189620	1					
ANR	1189754	CFGEntryNode	ENTRY		1189620		True				
ANR	1189755	CFGExitNode	EXIT		1189620		True				
ANR	1189756	Symbol	stream -> put		1189620						
ANR	1189757	Symbol	* lease		1189620						
ANR	1189758	Symbol	false		1189620						
ANR	1189759	Symbol	l_list		1189620						
ANR	1189760	Symbol	iter		1189620						
ANR	1189761	Symbol	l_list . begin		1189620						
ANR	1189762	Symbol	lease_id_str		1189620						
ANR	1189763	Symbol	lease -> leaseDuration		1189620						
ANR	1189764	Symbol	l_list . end		1189620						
ANR	1189765	Symbol	l_list . size		1189620						
ANR	1189766	Symbol	* iter		1189620						
ANR	1189767	Symbol	lease -> leaseId ( ) . c_str		1189620						
ANR	1189768	Symbol	stream		1189620						
ANR	1189769	Symbol	* stream		1189620						
ANR	1189770	Symbol	lease -> leaseId		1189620						
ANR	1189771	Symbol	true		1189620						
ANR	1189772	Symbol	lease		1189620						
ANR	1189773	Symbol	lease -> releaseLeaseWhenDone		1189620						
ANR	1189774	Function	DCLeaseManager :: GetLeases	236:0:5274:6061							
ANR	1189775	FunctionDef	"DCLeaseManager :: GetLeases (Stream * stream , std :: list < DCLeaseManagerLease * > & l_list)"		1189774	0					
ANR	1189776	CompoundStatement		240:0:5374:6061	1189774	0					
ANR	1189777	IdentifierDeclStatement	int num_leases ;	241:1:5377:5392	1189774	0	True				
ANR	1189778	IdentifierDecl	num_leases		1189774	0					
ANR	1189779	IdentifierDeclType	int		1189774	0					
ANR	1189780	Identifier	num_leases		1189774	1					
ANR	1189781	IfStatement	if ( ! stream -> get ( num_leases ) )		1189774	1					
ANR	1189782	Condition	! stream -> get ( num_leases )	242:6:5400:5425	1189774	0	True				
ANR	1189783	UnaryOperationExpression	! stream -> get ( num_leases )		1189774	0					
ANR	1189784	UnaryOperator	!		1189774	0					
ANR	1189785	CallExpression	stream -> get ( num_leases )		1189774	1					
ANR	1189786	Callee	stream -> get		1189774	0					
ANR	1189787	PtrMemberAccess	stream -> get		1189774	0					
ANR	1189788	Identifier	stream		1189774	0					
ANR	1189789	Identifier	get		1189774	1					
ANR	1189790	ArgumentList	num_leases		1189774	1					
ANR	1189791	Argument	num_leases		1189774	0					
ANR	1189792	Identifier	num_leases		1189774	0					
ANR	1189793	CompoundStatement		3:35:54:54	1189774	1					
ANR	1189794	ReturnStatement	return false ;	243:2:5433:5445	1189774	0	True				
ANR	1189795	Identifier	false		1189774	0					
ANR	1189796	ForStatement	for ( int num = 0 ; num < num_leases ; num ++ )		1189774	2					
ANR	1189797	ForInit	int num = 0 ;	246:6:5457:5468	1189774	0	True				
ANR	1189798	IdentifierDeclStatement	int num = 0 ;		1189774	0					
ANR	1189799	IdentifierDecl	num = 0		1189774	0					
ANR	1189800	IdentifierDeclType	int		1189774	0					
ANR	1189801	Identifier	num		1189774	1					
ANR	1189802	AssignmentExpression	num = 0		1189774	2		=			
ANR	1189803	Identifier	num		1189774	0					
ANR	1189804	PrimaryExpression	0		1189774	1					
ANR	1189805	Condition	num < num_leases	246:20:5471:5486	1189774	1	True				
ANR	1189806	RelationalExpression	num < num_leases		1189774	0		<			
ANR	1189807	Identifier	num		1189774	0					
ANR	1189808	Identifier	num_leases		1189774	1					
ANR	1189809	PostIncDecOperationExpression	num ++	246:39:5490:5494	1189774	2	True				
ANR	1189810	Identifier	num		1189774	0					
ANR	1189811	IncDec	++		1189774	1					
ANR	1189812	CompoundStatement		22:2:509:638	1189774	3					
ANR	1189813	IdentifierDeclStatement	char * lease_id_cstr = NULL ;	247:2:5502:5528	1189774	0	True				
ANR	1189814	IdentifierDecl	* lease_id_cstr = NULL		1189774	0					
ANR	1189815	IdentifierDeclType	char *		1189774	0					
ANR	1189816	Identifier	lease_id_cstr		1189774	1					
ANR	1189817	AssignmentExpression	* lease_id_cstr = NULL		1189774	2		=			
ANR	1189818	Identifier	NULL		1189774	0					
ANR	1189819	Identifier	NULL		1189774	1					
ANR	1189820	IdentifierDeclStatement	int lease_duration ;	248:2:5532:5551	1189774	1	True				
ANR	1189821	IdentifierDecl	lease_duration		1189774	0					
ANR	1189822	IdentifierDeclType	int		1189774	0					
ANR	1189823	Identifier	lease_duration		1189774	1					
ANR	1189824	IdentifierDeclStatement	int release_when_done ;	249:2:5555:5577	1189774	2	True				
ANR	1189825	IdentifierDecl	release_when_done		1189774	0					
ANR	1189826	IdentifierDeclType	int		1189774	0					
ANR	1189827	Identifier	release_when_done		1189774	1					
ANR	1189828	IfStatement	if ( ! stream -> get ( lease_id_cstr ) || ! stream -> get ( lease_duration ) || ! stream -> get ( release_when_done ) )		1189774	3					
ANR	1189829	Condition	! stream -> get ( lease_id_cstr ) || ! stream -> get ( lease_duration ) || ! stream -> get ( release_when_done )	250:7:5586:5693	1189774	0	True				
ANR	1189830	OrExpression	! stream -> get ( lease_id_cstr ) || ! stream -> get ( lease_duration ) || ! stream -> get ( release_when_done )		1189774	0		||			
ANR	1189831	UnaryOperationExpression	! stream -> get ( lease_id_cstr )		1189774	0					
ANR	1189832	UnaryOperator	!		1189774	0					
ANR	1189833	CallExpression	stream -> get ( lease_id_cstr )		1189774	1					
ANR	1189834	Callee	stream -> get		1189774	0					
ANR	1189835	PtrMemberAccess	stream -> get		1189774	0					
ANR	1189836	Identifier	stream		1189774	0					
ANR	1189837	Identifier	get		1189774	1					
ANR	1189838	ArgumentList	lease_id_cstr		1189774	1					
ANR	1189839	Argument	lease_id_cstr		1189774	0					
ANR	1189840	Identifier	lease_id_cstr		1189774	0					
ANR	1189841	OrExpression	! stream -> get ( lease_duration ) || ! stream -> get ( release_when_done )		1189774	1		||			
ANR	1189842	UnaryOperationExpression	! stream -> get ( lease_duration )		1189774	0					
ANR	1189843	UnaryOperator	!		1189774	0					
ANR	1189844	CallExpression	stream -> get ( lease_duration )		1189774	1					
ANR	1189845	Callee	stream -> get		1189774	0					
ANR	1189846	PtrMemberAccess	stream -> get		1189774	0					
ANR	1189847	Identifier	stream		1189774	0					
ANR	1189848	Identifier	get		1189774	1					
ANR	1189849	ArgumentList	lease_duration		1189774	1					
ANR	1189850	Argument	lease_duration		1189774	0					
ANR	1189851	Identifier	lease_duration		1189774	0					
ANR	1189852	UnaryOperationExpression	! stream -> get ( release_when_done )		1189774	1					
ANR	1189853	UnaryOperator	!		1189774	0					
ANR	1189854	CallExpression	stream -> get ( release_when_done )		1189774	1					
ANR	1189855	Callee	stream -> get		1189774	0					
ANR	1189856	PtrMemberAccess	stream -> get		1189774	0					
ANR	1189857	Identifier	stream		1189774	0					
ANR	1189858	Identifier	get		1189774	1					
ANR	1189859	ArgumentList	release_when_done		1189774	1					
ANR	1189860	Argument	release_when_done		1189774	0					
ANR	1189861	Identifier	release_when_done		1189774	0					
ANR	1189862	CompoundStatement		13:40:322:322	1189774	1					
ANR	1189863	ExpressionStatement	DCLeaseManagerLease_freeList ( l_list )	253:3:5702:5740	1189774	0	True				
ANR	1189864	CallExpression	DCLeaseManagerLease_freeList ( l_list )		1189774	0					
ANR	1189865	Callee	DCLeaseManagerLease_freeList		1189774	0					
ANR	1189866	Identifier	DCLeaseManagerLease_freeList		1189774	0					
ANR	1189867	ArgumentList	l_list		1189774	1					
ANR	1189868	Argument	l_list		1189774	0					
ANR	1189869	Identifier	l_list		1189774	0					
ANR	1189870	IfStatement	if ( lease_id_cstr )		1189774	1					
ANR	1189871	Condition	lease_id_cstr	254:8:5750:5762	1189774	0	True				
ANR	1189872	Identifier	lease_id_cstr		1189774	0					
ANR	1189873	CompoundStatement		15:24:391:391	1189774	1					
ANR	1189874	ExpressionStatement	free ( lease_id_cstr )	255:4:5772:5793	1189774	0	True				
ANR	1189875	CallExpression	free ( lease_id_cstr )		1189774	0					
ANR	1189876	Callee	free		1189774	0					
ANR	1189877	Identifier	free		1189774	0					
ANR	1189878	ArgumentList	lease_id_cstr		1189774	1					
ANR	1189879	Argument	lease_id_cstr		1189774	0					
ANR	1189880	Identifier	lease_id_cstr		1189774	0					
ANR	1189881	ReturnStatement	return false ;	257:3:5803:5815	1189774	2	True				
ANR	1189882	Identifier	false		1189774	0					
ANR	1189883	IdentifierDeclStatement	string lease_id ( lease_id_cstr ) ;	259:2:5823:5855	1189774	4	True				
ANR	1189884	IdentifierDecl	lease_id ( lease_id_cstr )		1189774	0					
ANR	1189885	IdentifierDeclType	string		1189774	0					
ANR	1189886	Identifier	lease_id		1189774	1					
ANR	1189887	Identifier	lease_id_cstr		1189774	2					
ANR	1189888	ExpressionStatement	free ( lease_id_cstr )	260:2:5859:5880	1189774	5	True				
ANR	1189889	CallExpression	free ( lease_id_cstr )		1189774	0					
ANR	1189890	Callee	free		1189774	0					
ANR	1189891	Identifier	free		1189774	0					
ANR	1189892	ArgumentList	lease_id_cstr		1189774	1					
ANR	1189893	Argument	lease_id_cstr		1189774	0					
ANR	1189894	Identifier	lease_id_cstr		1189774	0					
ANR	1189895	IdentifierDeclStatement	"DCLeaseManagerLease * lease = new DCLeaseManagerLease ( lease_id , lease_duration , ( bool ) release_when_done ) ;"	261:2:5884:6013	1189774	6	True				
ANR	1189896	IdentifierDecl	"* lease = new DCLeaseManagerLease ( lease_id , lease_duration , ( bool ) release_when_done )"		1189774	0					
ANR	1189897	IdentifierDeclType	DCLeaseManagerLease *		1189774	0					
ANR	1189898	Identifier	lease		1189774	1					
ANR	1189899	AssignmentExpression	"* lease = new DCLeaseManagerLease ( lease_id , lease_duration , ( bool ) release_when_done )"		1189774	2		=			
ANR	1189900	Identifier	lease		1189774	0					
ANR	1189901	Expression	"lease_id , lease_duration , ( bool ) release_when_done"		1189774	1					
ANR	1189902	Identifier	lease_id		1189774	0					
ANR	1189903	Expression	"lease_duration , ( bool ) release_when_done"		1189774	1					
ANR	1189904	Identifier	lease_duration		1189774	0					
ANR	1189905	CastExpression	( bool ) release_when_done		1189774	1					
ANR	1189906	CastTarget	bool		1189774	0					
ANR	1189907	Identifier	release_when_done		1189774	1					
ANR	1189908	ExpressionStatement	l_list . push_back ( lease )	265:2:6017:6042	1189774	7	True				
ANR	1189909	CallExpression	l_list . push_back ( lease )		1189774	0					
ANR	1189910	Callee	l_list . push_back		1189774	0					
ANR	1189911	MemberAccess	l_list . push_back		1189774	0					
ANR	1189912	Identifier	l_list		1189774	0					
ANR	1189913	Identifier	push_back		1189774	1					
ANR	1189914	ArgumentList	lease		1189774	1					
ANR	1189915	Argument	lease		1189774	0					
ANR	1189916	Identifier	lease		1189774	0					
ANR	1189917	ReturnStatement	return true ;	267:1:6048:6059	1189774	3	True				
ANR	1189918	Identifier	true		1189774	0					
ANR	1189919	ReturnType	bool		1189774	1					
ANR	1189920	Identifier	DCLeaseManager :: GetLeases		1189774	2					
ANR	1189921	ParameterList	"Stream * stream , std :: list < DCLeaseManagerLease * > & l_list"		1189774	3					
ANR	1189922	Parameter	Stream * stream	238:1:5307:5326	1189774	0	True				
ANR	1189923	ParameterType	Stream *		1189774	0					
ANR	1189924	Identifier	stream		1189774	1					
ANR	1189925	Parameter	std :: list < DCLeaseManagerLease * > & l_list	239:1:5330:5370	1189774	1	True				
ANR	1189926	ParameterType	std :: list < DCLeaseManagerLease * > &		1189774	0					
ANR	1189927	Identifier	l_list		1189774	1					
ANR	1189928	CFGEntryNode	ENTRY		1189774		True				
ANR	1189929	CFGExitNode	EXIT		1189774		True				
ANR	1189930	Symbol	release_when_done		1189774						
ANR	1189931	Symbol	stream -> get		1189774						
ANR	1189932	Symbol	NULL		1189774						
ANR	1189933	Symbol	lease_id_cstr		1189774						
ANR	1189934	Symbol	num		1189774						
ANR	1189935	Symbol	false		1189774						
ANR	1189936	Symbol	lease_duration		1189774						
ANR	1189937	Symbol	l_list		1189774						
ANR	1189938	Symbol	stream		1189774						
ANR	1189939	Symbol	* stream		1189774						
ANR	1189940	Symbol	true		1189774						
ANR	1189941	Symbol	lease		1189774						
ANR	1189942	Symbol	lease_id		1189774						
ANR	1189943	Symbol	num_leases		1189774						
