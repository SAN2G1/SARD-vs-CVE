command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4919572	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_test_classad_put.cpp								
ANR	4919573	ClassDef	DummyStream	43:0:1430:1816							
ANR	4919574	DeclStmt									
ANR	4919575	Decl							std :: vector < char * > :: iterator	std :: vector < char * > :: iterator ( )	getItr
ANR	4919576	DeclStmt									
ANR	4919577	Decl							void	void ( )	emptyVec
ANR	4919578	DeclStmt									
ANR	4919579	Decl							void	void ( )	printContents
ANR	4919580	Function	~DummyStream	53:8:1599:1625							
ANR	4919581	FunctionDef	~DummyStream ()		4919580	3					
ANR	4919582	CompoundStatement		53:22:1613:1625	4919580	0					
ANR	4919583	ExpressionStatement	emptyVec ( )	53:0:1614:1624	4919580	0	True				
ANR	4919584	CallExpression	emptyVec ( )		4919580	0					
ANR	4919585	Callee	emptyVec		4919580	0					
ANR	4919586	Identifier	emptyVec		4919580	0					
ANR	4919587	ArgumentList			4919580	1					
ANR	4919588	Identifier	~DummyStream		4919580	1					
ANR	4919589	ParameterList			4919580	2					
ANR	4919590	CFGEntryNode	ENTRY		4919580		True				
ANR	4919591	CFGExitNode	EXIT		4919580		True				
ANR	4919592	DeclStmt									
ANR	4919593	Decl							void	void ( )	encode
ANR	4919594	DeclStmt									
ANR	4919595	Decl							int	int ( int blah )	code
ANR	4919596	DeclStmt									
ANR	4919597	Decl							int	int ( char * str )	put
ANR	4919598	DeclStmt									
ANR	4919599	Decl							int	int ( const char * )	put
ANR	4919600	DeclStmt									
ANR	4919601	Decl							int	int ( int i )	put
ANR	4919602	DeclStmt									
ANR	4919603	Decl							std :: vector < char * >	std :: vector < char * >	testVec
ANR	4919604	Function	DummyStream :: DummyStream	67:0:1820:1850							
ANR	4919605	FunctionDef	DummyStream :: DummyStream ()		4919604	0					
ANR	4919606	CompoundStatement		68:0:1848:1850	4919604	0					
ANR	4919607	Identifier	DummyStream :: DummyStream		4919604	1					
ANR	4919608	ParameterList			4919604	2					
ANR	4919609	CFGEntryNode	ENTRY		4919604		True				
ANR	4919610	CFGExitNode	EXIT		4919604		True				
ANR	4919611	Function	DummyStream :: encode	71:0:1853:1906							
ANR	4919612	FunctionDef	DummyStream :: encode ()		4919611	0					
ANR	4919613	CompoundStatement		72:0:1880:1906	4919611	0					
ANR	4919614	ReturnStatement	return ;	74:4:1898:1904	4919611	0	True				
ANR	4919615	ReturnType	void		4919611	1					
ANR	4919616	Identifier	DummyStream :: encode		4919611	2					
ANR	4919617	ParameterList			4919611	3					
ANR	4919618	CFGEntryNode	ENTRY		4919611		True				
ANR	4919619	CFGExitNode	EXIT		4919611		True				
ANR	4919620	Function	DummyStream :: code	77:0:1909:1974							
ANR	4919621	FunctionDef	DummyStream :: code (int blah)		4919620	0					
ANR	4919622	CompoundStatement		78:0:1942:1974	4919620	0					
ANR	4919623	ExpressionStatement	put ( blah )	79:4:1948:1957	4919620	0	True				
ANR	4919624	CallExpression	put ( blah )		4919620	0					
ANR	4919625	Callee	put		4919620	0					
ANR	4919626	Identifier	put		4919620	0					
ANR	4919627	ArgumentList	blah		4919620	1					
ANR	4919628	Argument	blah		4919620	0					
ANR	4919629	Identifier	blah		4919620	0					
ANR	4919630	ReturnStatement	return 1 ;	80:4:1964:1972	4919620	1	True				
ANR	4919631	PrimaryExpression	1		4919620	0					
ANR	4919632	ReturnType	int		4919620	1					
ANR	4919633	Identifier	DummyStream :: code		4919620	2					
ANR	4919634	ParameterList	int blah		4919620	3					
ANR	4919635	Parameter	int blah	77:23:1932:1939	4919620	0	True				
ANR	4919636	ParameterType	int		4919620	0					
ANR	4919637	Identifier	blah		4919620	1					
ANR	4919638	CFGEntryNode	ENTRY		4919620		True				
ANR	4919639	CFGExitNode	EXIT		4919620		True				
ANR	4919640	Symbol	blah		4919620						
ANR	4919641	Function	DummyStream :: put	83:0:1977:2136							
ANR	4919642	FunctionDef	DummyStream :: put (char * str)		4919641	0					
ANR	4919643	CompoundStatement		84:0:2009:2136	4919641	0					
ANR	4919644	IdentifierDeclStatement	char * foo = new char [ strlen ( str ) + 1 ] ;	85:4:2015:2052	4919641	0	True				
ANR	4919645	IdentifierDecl	* foo = new char [ strlen ( str ) + 1 ]		4919641	0					
ANR	4919646	IdentifierDeclType	char *		4919641	0					
ANR	4919647	Identifier	foo		4919641	1					
ANR	4919648	AssignmentExpression	* foo = new char [ strlen ( str ) + 1 ]		4919641	2		=			
ANR	4919649	Identifier	foo		4919641	0					
ANR	4919650	AdditiveExpression	strlen ( str ) + 1		4919641	1		+			
ANR	4919651	CallExpression	strlen ( str )		4919641	0					
ANR	4919652	Callee	strlen		4919641	0					
ANR	4919653	Identifier	strlen		4919641	0					
ANR	4919654	ArgumentList	str		4919641	1					
ANR	4919655	Argument	str		4919641	0					
ANR	4919656	Identifier	str		4919641	0					
ANR	4919657	PrimaryExpression	1		4919641	1					
ANR	4919658	ExpressionStatement	"strncpy ( foo , str , strlen ( str ) + 1 )"	86:4:2058:2092	4919641	1	True				
ANR	4919659	CallExpression	"strncpy ( foo , str , strlen ( str ) + 1 )"		4919641	0					
ANR	4919660	Callee	strncpy		4919641	0					
ANR	4919661	Identifier	strncpy		4919641	0					
ANR	4919662	ArgumentList	foo		4919641	1					
ANR	4919663	Argument	foo		4919641	0					
ANR	4919664	Identifier	foo		4919641	0					
ANR	4919665	Argument	str		4919641	1					
ANR	4919666	Identifier	str		4919641	0					
ANR	4919667	Argument	strlen ( str ) + 1		4919641	2					
ANR	4919668	AdditiveExpression	strlen ( str ) + 1		4919641	0		+			
ANR	4919669	CallExpression	strlen ( str )		4919641	0					
ANR	4919670	Callee	strlen		4919641	0					
ANR	4919671	Identifier	strlen		4919641	0					
ANR	4919672	ArgumentList	str		4919641	1					
ANR	4919673	Argument	str		4919641	0					
ANR	4919674	Identifier	str		4919641	0					
ANR	4919675	PrimaryExpression	1		4919641	1					
ANR	4919676	ExpressionStatement	testVec . push_back ( foo )	87:4:2098:2120	4919641	2	True				
ANR	4919677	CallExpression	testVec . push_back ( foo )		4919641	0					
ANR	4919678	Callee	testVec . push_back		4919641	0					
ANR	4919679	MemberAccess	testVec . push_back		4919641	0					
ANR	4919680	Identifier	testVec		4919641	0					
ANR	4919681	Identifier	push_back		4919641	1					
ANR	4919682	ArgumentList	foo		4919641	1					
ANR	4919683	Argument	foo		4919641	0					
ANR	4919684	Identifier	foo		4919641	0					
ANR	4919685	ReturnStatement	return 1 ;	88:4:2126:2134	4919641	3	True				
ANR	4919686	PrimaryExpression	1		4919641	0					
ANR	4919687	ReturnType	int		4919641	1					
ANR	4919688	Identifier	DummyStream :: put		4919641	2					
ANR	4919689	ParameterList	char * str		4919641	3					
ANR	4919690	Parameter	char * str	83:21:1998:2006	4919641	0	True				
ANR	4919691	ParameterType	char *		4919641	0					
ANR	4919692	Identifier	str		4919641	1					
ANR	4919693	CFGEntryNode	ENTRY		4919641		True				
ANR	4919694	CFGExitNode	EXIT		4919641		True				
ANR	4919695	Symbol	str		4919641						
ANR	4919696	Symbol	strlen		4919641						
ANR	4919697	Symbol	testVec		4919641						
ANR	4919698	Symbol	foo		4919641						
ANR	4919699	Function	DummyStream :: put	91:0:2139:2304							
ANR	4919700	FunctionDef	DummyStream :: put (const char * str)		4919699	0					
ANR	4919701	CompoundStatement		92:0:2177:2304	4919699	0					
ANR	4919702	IdentifierDeclStatement	char * foo = new char [ strlen ( str ) + 1 ] ;	93:4:2183:2220	4919699	0	True				
ANR	4919703	IdentifierDecl	* foo = new char [ strlen ( str ) + 1 ]		4919699	0					
ANR	4919704	IdentifierDeclType	char *		4919699	0					
ANR	4919705	Identifier	foo		4919699	1					
ANR	4919706	AssignmentExpression	* foo = new char [ strlen ( str ) + 1 ]		4919699	2		=			
ANR	4919707	Identifier	foo		4919699	0					
ANR	4919708	AdditiveExpression	strlen ( str ) + 1		4919699	1		+			
ANR	4919709	CallExpression	strlen ( str )		4919699	0					
ANR	4919710	Callee	strlen		4919699	0					
ANR	4919711	Identifier	strlen		4919699	0					
ANR	4919712	ArgumentList	str		4919699	1					
ANR	4919713	Argument	str		4919699	0					
ANR	4919714	Identifier	str		4919699	0					
ANR	4919715	PrimaryExpression	1		4919699	1					
ANR	4919716	ExpressionStatement	"strncpy ( foo , str , strlen ( str ) + 1 )"	94:4:2226:2260	4919699	1	True				
ANR	4919717	CallExpression	"strncpy ( foo , str , strlen ( str ) + 1 )"		4919699	0					
ANR	4919718	Callee	strncpy		4919699	0					
ANR	4919719	Identifier	strncpy		4919699	0					
ANR	4919720	ArgumentList	foo		4919699	1					
ANR	4919721	Argument	foo		4919699	0					
ANR	4919722	Identifier	foo		4919699	0					
ANR	4919723	Argument	str		4919699	1					
ANR	4919724	Identifier	str		4919699	0					
ANR	4919725	Argument	strlen ( str ) + 1		4919699	2					
ANR	4919726	AdditiveExpression	strlen ( str ) + 1		4919699	0		+			
ANR	4919727	CallExpression	strlen ( str )		4919699	0					
ANR	4919728	Callee	strlen		4919699	0					
ANR	4919729	Identifier	strlen		4919699	0					
ANR	4919730	ArgumentList	str		4919699	1					
ANR	4919731	Argument	str		4919699	0					
ANR	4919732	Identifier	str		4919699	0					
ANR	4919733	PrimaryExpression	1		4919699	1					
ANR	4919734	ExpressionStatement	testVec . push_back ( foo )	95:4:2266:2288	4919699	2	True				
ANR	4919735	CallExpression	testVec . push_back ( foo )		4919699	0					
ANR	4919736	Callee	testVec . push_back		4919699	0					
ANR	4919737	MemberAccess	testVec . push_back		4919699	0					
ANR	4919738	Identifier	testVec		4919699	0					
ANR	4919739	Identifier	push_back		4919699	1					
ANR	4919740	ArgumentList	foo		4919699	1					
ANR	4919741	Argument	foo		4919699	0					
ANR	4919742	Identifier	foo		4919699	0					
ANR	4919743	ReturnStatement	return 1 ;	96:4:2294:2302	4919699	3	True				
ANR	4919744	PrimaryExpression	1		4919699	0					
ANR	4919745	ReturnType	int		4919699	1					
ANR	4919746	Identifier	DummyStream :: put		4919699	2					
ANR	4919747	ParameterList	const char * str		4919699	3					
ANR	4919748	Parameter	const char * str	91:21:2160:2174	4919699	0	True				
ANR	4919749	ParameterType	const char *		4919699	0					
ANR	4919750	Identifier	str		4919699	1					
ANR	4919751	CFGEntryNode	ENTRY		4919699		True				
ANR	4919752	CFGExitNode	EXIT		4919699		True				
ANR	4919753	Symbol	str		4919699						
ANR	4919754	Symbol	strlen		4919699						
ANR	4919755	Symbol	testVec		4919699						
ANR	4919756	Symbol	foo		4919699						
ANR	4919757	Function	DummyStream :: put	100:0:2308:2471							
ANR	4919758	FunctionDef	DummyStream :: put (int i)		4919757	0					
ANR	4919759	CompoundStatement		101:0:2336:2471	4919757	0					
ANR	4919760	IdentifierDeclStatement	char * tmp = new char [ 16 ] ;	102:4:2342:2366	4919757	0	True				
ANR	4919761	IdentifierDecl	* tmp = new char [ 16 ]		4919757	0					
ANR	4919762	IdentifierDeclType	char *		4919757	0					
ANR	4919763	Identifier	tmp		4919757	1					
ANR	4919764	AssignmentExpression	* tmp = new char [ 16 ]		4919757	2		=			
ANR	4919765	Identifier	tmp		4919757	0					
ANR	4919766	PrimaryExpression	16		4919757	1					
ANR	4919767	ExpressionStatement	"sprintf ( tmp , ""%d"" , i )"	103:4:2372:2393	4919757	1	True				
ANR	4919768	CallExpression	"sprintf ( tmp , ""%d"" , i )"		4919757	0					
ANR	4919769	Callee	sprintf		4919757	0					
ANR	4919770	Identifier	sprintf		4919757	0					
ANR	4919771	ArgumentList	tmp		4919757	1					
ANR	4919772	Argument	tmp		4919757	0					
ANR	4919773	Identifier	tmp		4919757	0					
ANR	4919774	Argument	"""%d"""		4919757	1					
ANR	4919775	PrimaryExpression	"""%d"""		4919757	0					
ANR	4919776	Argument	i		4919757	2					
ANR	4919777	Identifier	i		4919757	0					
ANR	4919778	ExpressionStatement	put ( tmp )	104:4:2399:2407	4919757	2	True				
ANR	4919779	CallExpression	put ( tmp )		4919757	0					
ANR	4919780	Callee	put		4919757	0					
ANR	4919781	Identifier	put		4919757	0					
ANR	4919782	ArgumentList	tmp		4919757	1					
ANR	4919783	Argument	tmp		4919757	0					
ANR	4919784	Identifier	tmp		4919757	0					
ANR	4919785	Statement	delete	106:4:2443:2448	4919757	3	True				
ANR	4919786	Statement	[	106:10:2449:2449	4919757	4	True				
ANR	4919787	Statement	]	106:11:2450:2450	4919757	5	True				
ANR	4919788	ExpressionStatement	tmp	106:13:2452:2455	4919757	6	True				
ANR	4919789	Identifier	tmp		4919757	0					
ANR	4919790	ReturnStatement	return 1 ;	107:4:2461:2469	4919757	7	True				
ANR	4919791	PrimaryExpression	1		4919757	0					
ANR	4919792	ReturnType	int		4919757	1					
ANR	4919793	Identifier	DummyStream :: put		4919757	2					
ANR	4919794	ParameterList	int i		4919757	3					
ANR	4919795	Parameter	int i	100:21:2329:2333	4919757	0	True				
ANR	4919796	ParameterType	int		4919757	0					
ANR	4919797	Identifier	i		4919757	1					
ANR	4919798	CFGEntryNode	ENTRY		4919757		True				
ANR	4919799	CFGExitNode	EXIT		4919757		True				
ANR	4919800	Symbol	tmp		4919757						
ANR	4919801	Symbol	i		4919757						
ANR	4919802	Function	DummyStream :: getItr	110:0:2474:2555							
ANR	4919803	FunctionDef	DummyStream :: getItr ()		4919802	0					
ANR	4919804	CompoundStatement		111:0:2525:2555	4919802	0					
ANR	4919805	ReturnStatement	return testVec . begin ( ) ;	112:4:2531:2553	4919802	0	True				
ANR	4919806	CallExpression	testVec . begin ( )		4919802	0					
ANR	4919807	Callee	testVec . begin		4919802	0					
ANR	4919808	MemberAccess	testVec . begin		4919802	0					
ANR	4919809	Identifier	testVec		4919802	0					
ANR	4919810	Identifier	begin		4919802	1					
ANR	4919811	ArgumentList			4919802	1					
ANR	4919812	ReturnType	std :: vector < char * > :: iterator		4919802	1					
ANR	4919813	Identifier	DummyStream :: getItr		4919802	2					
ANR	4919814	ParameterList			4919802	3					
ANR	4919815	CFGEntryNode	ENTRY		4919802		True				
ANR	4919816	CFGExitNode	EXIT		4919802		True				
ANR	4919817	Symbol	testVec		4919802						
ANR	4919818	Symbol	testVec . begin		4919802						
ANR	4919819	Function	DummyStream :: emptyVec	115:0:2558:2742							
ANR	4919820	FunctionDef	DummyStream :: emptyVec ()		4919819	0					
ANR	4919821	CompoundStatement		116:0:2587:2742	4919819	0					
ANR	4919822	IdentifierDeclStatement	std :: vector < char * > :: iterator itr ;	117:4:2593:2625	4919819	0	True				
ANR	4919823	IdentifierDecl	itr		4919819	0					
ANR	4919824	IdentifierDeclType	std :: vector < char * > :: iterator		4919819	0					
ANR	4919825	Identifier	itr		4919819	1					
ANR	4919826	ForStatement	for ( itr = testVec . begin ( ) ; itr < testVec . end ( ) ; itr ++ )		4919819	1					
ANR	4919827	ForInit	itr = testVec . begin ( ) ;	118:8:2635:2656	4919819	0	True				
ANR	4919828	AssignmentExpression	itr = testVec . begin ( )		4919819	0		=			
ANR	4919829	Identifier	itr		4919819	0					
ANR	4919830	CallExpression	testVec . begin ( )		4919819	1					
ANR	4919831	Callee	testVec . begin		4919819	0					
ANR	4919832	MemberAccess	testVec . begin		4919819	0					
ANR	4919833	Identifier	testVec		4919819	0					
ANR	4919834	Identifier	begin		4919819	1					
ANR	4919835	ArgumentList			4919819	1					
ANR	4919836	Condition	itr < testVec . end ( )	118:31:2658:2676	4919819	1	True				
ANR	4919837	RelationalExpression	itr < testVec . end ( )		4919819	0		<			
ANR	4919838	Identifier	itr		4919819	0					
ANR	4919839	CallExpression	testVec . end ( )		4919819	1					
ANR	4919840	Callee	testVec . end		4919819	0					
ANR	4919841	MemberAccess	testVec . end		4919819	0					
ANR	4919842	Identifier	testVec		4919819	0					
ANR	4919843	Identifier	end		4919819	1					
ANR	4919844	ArgumentList			4919819	1					
ANR	4919845	PostIncDecOperationExpression	itr ++	118:52:2679:2683	4919819	2	True				
ANR	4919846	Identifier	itr		4919819	0					
ANR	4919847	IncDec	++		4919819	1					
ANR	4919848	CompoundStatement		4:4:102:102	4919819	3					
ANR	4919849	Statement	delete	120:8:2700:2705	4919819	0	True				
ANR	4919850	Statement	[	120:14:2706:2706	4919819	1	True				
ANR	4919851	Statement	]	120:15:2707:2707	4919819	2	True				
ANR	4919852	ExpressionStatement	* itr	120:17:2709:2713	4919819	3	True				
ANR	4919853	UnaryOperationExpression	* itr		4919819	0					
ANR	4919854	UnaryOperator	*		4919819	0					
ANR	4919855	Identifier	itr		4919819	1					
ANR	4919856	ExpressionStatement	testVec . clear ( )	122:4:2725:2740	4919819	2	True				
ANR	4919857	CallExpression	testVec . clear ( )		4919819	0					
ANR	4919858	Callee	testVec . clear		4919819	0					
ANR	4919859	MemberAccess	testVec . clear		4919819	0					
ANR	4919860	Identifier	testVec		4919819	0					
ANR	4919861	Identifier	clear		4919819	1					
ANR	4919862	ArgumentList			4919819	1					
ANR	4919863	ReturnType	void		4919819	1					
ANR	4919864	Identifier	DummyStream :: emptyVec		4919819	2					
ANR	4919865	ParameterList			4919819	3					
ANR	4919866	CFGEntryNode	ENTRY		4919819		True				
ANR	4919867	CFGExitNode	EXIT		4919819		True				
ANR	4919868	Symbol	testVec . end		4919819						
ANR	4919869	Symbol	testVec		4919819						
ANR	4919870	Symbol	itr		4919819						
ANR	4919871	Symbol	testVec . begin		4919819						
ANR	4919872	Function	DummyStream :: printContents	125:0:2745:3034							
ANR	4919873	FunctionDef	DummyStream :: printContents ()		4919872	0					
ANR	4919874	CompoundStatement		126:0:2779:3034	4919872	0					
ANR	4919875	IdentifierDeclStatement	std :: vector < char * > :: iterator itr ;	127:4:2785:2817	4919872	0	True				
ANR	4919876	IdentifierDecl	itr		4919872	0					
ANR	4919877	IdentifierDeclType	std :: vector < char * > :: iterator		4919872	0					
ANR	4919878	Identifier	itr		4919872	1					
ANR	4919879	ExpressionStatement	"printf ( ""Size of vec: %d. Printing contents.\\n"" , testVec . size ( ) )"	129:4:2824:2888	4919872	1	True				
ANR	4919880	CallExpression	"printf ( ""Size of vec: %d. Printing contents.\\n"" , testVec . size ( ) )"		4919872	0					
ANR	4919881	Callee	printf		4919872	0					
ANR	4919882	Identifier	printf		4919872	0					
ANR	4919883	ArgumentList	"""Size of vec: %d. Printing contents.\\n"""		4919872	1					
ANR	4919884	Argument	"""Size of vec: %d. Printing contents.\\n"""		4919872	0					
ANR	4919885	PrimaryExpression	"""Size of vec: %d. Printing contents.\\n"""		4919872	0					
ANR	4919886	Argument	testVec . size ( )		4919872	1					
ANR	4919887	CallExpression	testVec . size ( )		4919872	0					
ANR	4919888	Callee	testVec . size		4919872	0					
ANR	4919889	MemberAccess	testVec . size		4919872	0					
ANR	4919890	Identifier	testVec		4919872	0					
ANR	4919891	Identifier	size		4919872	1					
ANR	4919892	ArgumentList			4919872	1					
ANR	4919893	ForStatement	for ( itr = testVec . begin ( ) ; itr < testVec . end ( ) ; itr ++ )		4919872	2					
ANR	4919894	ForInit	itr = testVec . begin ( ) ;	131:8:2899:2920	4919872	0	True				
ANR	4919895	AssignmentExpression	itr = testVec . begin ( )		4919872	0		=			
ANR	4919896	Identifier	itr		4919872	0					
ANR	4919897	CallExpression	testVec . begin ( )		4919872	1					
ANR	4919898	Callee	testVec . begin		4919872	0					
ANR	4919899	MemberAccess	testVec . begin		4919872	0					
ANR	4919900	Identifier	testVec		4919872	0					
ANR	4919901	Identifier	begin		4919872	1					
ANR	4919902	ArgumentList			4919872	1					
ANR	4919903	Condition	itr < testVec . end ( )	131:31:2922:2940	4919872	1	True				
ANR	4919904	RelationalExpression	itr < testVec . end ( )		4919872	0		<			
ANR	4919905	Identifier	itr		4919872	0					
ANR	4919906	CallExpression	testVec . end ( )		4919872	1					
ANR	4919907	Callee	testVec . end		4919872	0					
ANR	4919908	MemberAccess	testVec . end		4919872	0					
ANR	4919909	Identifier	testVec		4919872	0					
ANR	4919910	Identifier	end		4919872	1					
ANR	4919911	ArgumentList			4919872	1					
ANR	4919912	PostIncDecOperationExpression	itr ++	131:52:2943:2947	4919872	2	True				
ANR	4919913	Identifier	itr		4919872	0					
ANR	4919914	IncDec	++		4919872	1					
ANR	4919915	CompoundStatement		7:4:174:174	4919872	3					
ANR	4919916	ExpressionStatement	"printf ( ""%s\\n"" , * itr )"	133:8:2964:2984	4919872	0	True				
ANR	4919917	CallExpression	"printf ( ""%s\\n"" , * itr )"		4919872	0					
ANR	4919918	Callee	printf		4919872	0					
ANR	4919919	Identifier	printf		4919872	0					
ANR	4919920	ArgumentList	"""%s\\n"""		4919872	1					
ANR	4919921	Argument	"""%s\\n"""		4919872	0					
ANR	4919922	PrimaryExpression	"""%s\\n"""		4919872	0					
ANR	4919923	Argument	* itr		4919872	1					
ANR	4919924	UnaryOperationExpression	* itr		4919872	0					
ANR	4919925	UnaryOperator	*		4919872	0					
ANR	4919926	Identifier	itr		4919872	1					
ANR	4919927	ExpressionStatement	"printf ( ""Done printing contents.\\n"" )"	136:4:2997:3032	4919872	3	True				
ANR	4919928	CallExpression	"printf ( ""Done printing contents.\\n"" )"		4919872	0					
ANR	4919929	Callee	printf		4919872	0					
ANR	4919930	Identifier	printf		4919872	0					
ANR	4919931	ArgumentList	"""Done printing contents.\\n"""		4919872	1					
ANR	4919932	Argument	"""Done printing contents.\\n"""		4919872	0					
ANR	4919933	PrimaryExpression	"""Done printing contents.\\n"""		4919872	0					
ANR	4919934	ReturnType	void		4919872	1					
ANR	4919935	Identifier	DummyStream :: printContents		4919872	2					
ANR	4919936	ParameterList			4919872	3					
ANR	4919937	CFGEntryNode	ENTRY		4919872		True				
ANR	4919938	CFGExitNode	EXIT		4919872		True				
ANR	4919939	Symbol	testVec . end		4919872						
ANR	4919940	Symbol	testVec		4919872						
ANR	4919941	Symbol	itr		4919872						
ANR	4919942	Symbol	testVec . begin		4919872						
ANR	4919943	Symbol	* itr		4919872						
ANR	4919944	Symbol	testVec . size		4919872						
ANR	4919945	DeclStmt									
ANR	4919946	Decl							bool	bool	publish_server_timeMangled
ANR	4919947	Function	AttrList_setPublishServerTimeMangled2	141:0:3091:3193							
ANR	4919948	FunctionDef	AttrList_setPublishServerTimeMangled2 (bool publish)		4919947	0					
ANR	4919949	CompoundStatement		142:0:3149:3193	4919947	0					
ANR	4919950	ExpressionStatement	publish_server_timeMangled = publish	143:4:3155:3191	4919947	0	True				
ANR	4919951	AssignmentExpression	publish_server_timeMangled = publish		4919947	0		=			
ANR	4919952	Identifier	publish_server_timeMangled		4919947	0					
ANR	4919953	Identifier	publish		4919947	1					
ANR	4919954	ReturnType	void		4919947	1					
ANR	4919955	Identifier	AttrList_setPublishServerTimeMangled2		4919947	2					
ANR	4919956	ParameterList	bool publish		4919947	3					
ANR	4919957	Parameter	bool publish	141:44:3135:3146	4919947	0	True				
ANR	4919958	ParameterType	bool		4919947	0					
ANR	4919959	Identifier	publish		4919947	1					
ANR	4919960	CFGEntryNode	ENTRY		4919947		True				
ANR	4919961	CFGExitNode	EXIT		4919947		True				
ANR	4919962	Symbol	publish		4919947						
ANR	4919963	Symbol	publish_server_timeMangled		4919947						
ANR	4919964	Function	putOldClassAd	150:0:3299:8152							
ANR	4919965	FunctionDef	"putOldClassAd (DummyStream * sock , classad :: ClassAd & ad , bool excludeTypes)"		4919964	0					
ANR	4919966	CompoundStatement		151:0:3381:8152	4919964	0					
ANR	4919967	IdentifierDeclStatement	classad :: ClassAdUnParser unp ;	152:1:3384:3412	4919964	0	True				
ANR	4919968	IdentifierDecl	unp		4919964	0					
ANR	4919969	IdentifierDeclType	classad :: ClassAdUnParser		4919964	0					
ANR	4919970	Identifier	unp		4919964	1					
ANR	4919971	IdentifierDeclStatement	string buf ;	153:1:3415:3430	4919964	1	True				
ANR	4919972	IdentifierDecl	buf		4919964	0					
ANR	4919973	IdentifierDeclType	string		4919964	0					
ANR	4919974	Identifier	buf		4919964	1					
ANR	4919975	IdentifierDeclStatement	const classad :: ExprTree * expr ;	154:1:3433:3463	4919964	2	True				
ANR	4919976	IdentifierDecl	* expr		4919964	0					
ANR	4919977	IdentifierDeclType	const classad :: ExprTree *		4919964	0					
ANR	4919978	Identifier	expr		4919964	1					
ANR	4919979	IdentifierDeclStatement	bool send_server_time = false ;	155:4:3469:3498	4919964	3	True				
ANR	4919980	IdentifierDecl	send_server_time = false		4919964	0					
ANR	4919981	IdentifierDeclType	bool		4919964	0					
ANR	4919982	Identifier	send_server_time		4919964	1					
ANR	4919983	AssignmentExpression	send_server_time = false		4919964	2		=			
ANR	4919984	Identifier	false		4919964	0					
ANR	4919985	Identifier	false		4919964	1					
ANR	4919986	IdentifierDeclStatement	int numExprs = 0 ;	157:1:3502:3516	4919964	4	True				
ANR	4919987	IdentifierDecl	numExprs = 0		4919964	0					
ANR	4919988	IdentifierDeclType	int		4919964	0					
ANR	4919989	Identifier	numExprs		4919964	1					
ANR	4919990	AssignmentExpression	numExprs = 0		4919964	2		=			
ANR	4919991	Identifier	numExprs		4919964	0					
ANR	4919992	PrimaryExpression	0		4919964	1					
ANR	4919993	IdentifierDeclStatement	classad :: ClassAdIterator itor ( ad ) ;	159:1:3520:3553	4919964	5	True				
ANR	4919994	IdentifierDecl	itor ( ad )		4919964	0					
ANR	4919995	IdentifierDeclType	classad :: ClassAdIterator		4919964	0					
ANR	4919996	Identifier	itor		4919964	1					
ANR	4919997	Identifier	ad		4919964	2					
ANR	4919998	IdentifierDeclStatement	bool haveChainedAd = false ;	161:4:3560:3586	4919964	6	True				
ANR	4919999	IdentifierDecl	haveChainedAd = false		4919964	0					
ANR	4920000	IdentifierDeclType	bool		4919964	0					
ANR	4920001	Identifier	haveChainedAd		4919964	1					
ANR	4920002	AssignmentExpression	haveChainedAd = false		4919964	2		=			
ANR	4920003	Identifier	false		4919964	0					
ANR	4920004	Identifier	false		4919964	1					
ANR	4920005	IdentifierDeclStatement	classad :: ClassAd * chainedAd = ad . GetChainedParentAd ( ) ;	163:4:3597:3650	4919964	7	True				
ANR	4920006	IdentifierDecl	* chainedAd = ad . GetChainedParentAd ( )		4919964	0					
ANR	4920007	IdentifierDeclType	classad :: ClassAd *		4919964	0					
ANR	4920008	Identifier	chainedAd		4919964	1					
ANR	4920009	AssignmentExpression	* chainedAd = ad . GetChainedParentAd ( )		4919964	2		=			
ANR	4920010	Identifier	chainedAd		4919964	0					
ANR	4920011	CallExpression	ad . GetChainedParentAd ( )		4919964	1					
ANR	4920012	Callee	ad . GetChainedParentAd		4919964	0					
ANR	4920013	MemberAccess	ad . GetChainedParentAd		4919964	0					
ANR	4920014	Identifier	ad		4919964	0					
ANR	4920015	Identifier	GetChainedParentAd		4919964	1					
ANR	4920016	ArgumentList			4919964	1					
ANR	4920017	IfStatement	if ( chainedAd )		4919964	8					
ANR	4920018	Condition	chainedAd	165:7:3664:3672	4919964	0	True				
ANR	4920019	Identifier	chainedAd		4919964	0					
ANR	4920020	CompoundStatement		15:17:292:292	4919964	1					
ANR	4920021	ExpressionStatement	haveChainedAd = true	166:8:3684:3704	4919964	0	True				
ANR	4920022	AssignmentExpression	haveChainedAd = true		4919964	0		=			
ANR	4920023	Identifier	haveChainedAd		4919964	0					
ANR	4920024	Identifier	true		4919964	1					
ANR	4920025	ForStatement	for ( int pass = 0 ; pass < 2 ; pass ++ )		4919964	9					
ANR	4920026	ForInit	int pass = 0 ;	169:8:3721:3733	4919964	0	True				
ANR	4920027	IdentifierDeclStatement	int pass = 0 ;		4919964	0					
ANR	4920028	IdentifierDecl	pass = 0		4919964	0					
ANR	4920029	IdentifierDeclType	int		4919964	0					
ANR	4920030	Identifier	pass		4919964	1					
ANR	4920031	AssignmentExpression	pass = 0		4919964	2		=			
ANR	4920032	Identifier	pass		4919964	0					
ANR	4920033	PrimaryExpression	0		4919964	1					
ANR	4920034	Condition	pass < 2	169:22:3735:3742	4919964	1	True				
ANR	4920035	RelationalExpression	pass < 2		4919964	0		<			
ANR	4920036	Identifier	pass		4919964	0					
ANR	4920037	PrimaryExpression	2		4919964	1					
ANR	4920038	PostIncDecOperationExpression	pass ++	169:32:3745:3750	4919964	2	True				
ANR	4920039	Identifier	pass		4919964	0					
ANR	4920040	IncDec	++		4919964	1					
ANR	4920041	CompoundStatement		19:39:370:370	4919964	3					
ANR	4920042	IfStatement	if ( pass == 0 )		4919964	0					
ANR	4920043	Condition	pass == 0	176:11:3950:3958	4919964	0	True				
ANR	4920044	EqualityExpression	pass == 0		4919964	0		==			
ANR	4920045	Identifier	pass		4919964	0					
ANR	4920046	PrimaryExpression	0		4919964	1					
ANR	4920047	CompoundStatement		26:21:578:578	4919964	1					
ANR	4920048	IfStatement	if ( ! haveChainedAd )		4919964	0					
ANR	4920049	Condition	! haveChainedAd	177:15:3977:3990	4919964	0	True				
ANR	4920050	UnaryOperationExpression	! haveChainedAd		4919964	0					
ANR	4920051	UnaryOperator	!		4919964	0					
ANR	4920052	Identifier	haveChainedAd		4919964	1					
ANR	4920053	CompoundStatement		27:30:610:610	4919964	1					
ANR	4920054	ContinueStatement	continue ;	178:16:4010:4018	4919964	0	True				
ANR	4920055	ExpressionStatement	itor . Initialize ( * chainedAd )	180:12:4046:4073	4919964	1	True				
ANR	4920056	CallExpression	itor . Initialize ( * chainedAd )		4919964	0					
ANR	4920057	Callee	itor . Initialize		4919964	0					
ANR	4920058	MemberAccess	itor . Initialize		4919964	0					
ANR	4920059	Identifier	itor		4919964	0					
ANR	4920060	Identifier	Initialize		4919964	1					
ANR	4920061	ArgumentList	* chainedAd		4919964	1					
ANR	4920062	Argument	* chainedAd		4919964	0					
ANR	4920063	UnaryOperationExpression	* chainedAd		4919964	0					
ANR	4920064	UnaryOperator	*		4919964	0					
ANR	4920065	Identifier	chainedAd		4919964	1					
ANR	4920066	ElseStatement	else		4919964	0					
ANR	4920067	CompoundStatement		32:13:716:716	4919964	0					
ANR	4920068	ExpressionStatement	itor . Initialize ( ad )	183:12:4112:4131	4919964	0	True				
ANR	4920069	CallExpression	itor . Initialize ( ad )		4919964	0					
ANR	4920070	Callee	itor . Initialize		4919964	0					
ANR	4920071	MemberAccess	itor . Initialize		4919964	0					
ANR	4920072	Identifier	itor		4919964	0					
ANR	4920073	Identifier	Initialize		4919964	1					
ANR	4920074	ArgumentList	ad		4919964	1					
ANR	4920075	Argument	ad		4919964	0					
ANR	4920076	Identifier	ad		4919964	0					
ANR	4920077	WhileStatement	while ( ! itor . IsAfterLast ( ) )		4919964	1					
ANR	4920078	Condition	! itor . IsAfterLast ( )	186:15:4159:4178	4919964	0	True				
ANR	4920079	UnaryOperationExpression	! itor . IsAfterLast ( )		4919964	0					
ANR	4920080	UnaryOperator	!		4919964	0					
ANR	4920081	CallExpression	itor . IsAfterLast ( )		4919964	1					
ANR	4920082	Callee	itor . IsAfterLast		4919964	0					
ANR	4920083	MemberAccess	itor . IsAfterLast		4919964	0					
ANR	4920084	Identifier	itor		4919964	0					
ANR	4920085	Identifier	IsAfterLast		4919964	1					
ANR	4920086	ArgumentList			4919964	1					
ANR	4920087	CompoundStatement		36:38:800:800	4919964	1					
ANR	4920088	ExpressionStatement	"itor . CurrentAttribute ( buf , expr )"	187:12:4196:4230	4919964	0	True				
ANR	4920089	CallExpression	"itor . CurrentAttribute ( buf , expr )"		4919964	0					
ANR	4920090	Callee	itor . CurrentAttribute		4919964	0					
ANR	4920091	MemberAccess	itor . CurrentAttribute		4919964	0					
ANR	4920092	Identifier	itor		4919964	0					
ANR	4920093	Identifier	CurrentAttribute		4919964	1					
ANR	4920094	ArgumentList	buf		4919964	1					
ANR	4920095	Argument	buf		4919964	0					
ANR	4920096	Identifier	buf		4919964	0					
ANR	4920097	Argument	expr		4919964	1					
ANR	4920098	Identifier	expr		4919964	0					
ANR	4920099	IfStatement	if ( ! compat_classad :: ClassAd :: ClassAdAttributeIsPrivate ( buf . c_str ( ) ) )		4919964	1					
ANR	4920100	Condition	! compat_classad :: ClassAd :: ClassAdAttributeIsPrivate ( buf . c_str ( ) )	190:15:4249:4312	4919964	0	True				
ANR	4920101	UnaryOperationExpression	! compat_classad :: ClassAd :: ClassAdAttributeIsPrivate ( buf . c_str ( ) )		4919964	0					
ANR	4920102	UnaryOperator	!		4919964	0					
ANR	4920103	CallExpression	compat_classad :: ClassAd :: ClassAdAttributeIsPrivate ( buf . c_str ( ) )		4919964	1					
ANR	4920104	Callee	compat_classad :: ClassAd :: ClassAdAttributeIsPrivate		4919964	0					
ANR	4920105	Identifier	compat_classad :: ClassAd :: ClassAdAttributeIsPrivate		4919964	0					
ANR	4920106	ArgumentList	buf . c_str ( )		4919964	1					
ANR	4920107	Argument	buf . c_str ( )		4919964	0					
ANR	4920108	CallExpression	buf . c_str ( )		4919964	0					
ANR	4920109	Callee	buf . c_str		4919964	0					
ANR	4920110	MemberAccess	buf . c_str		4919964	0					
ANR	4920111	Identifier	buf		4919964	0					
ANR	4920112	Identifier	c_str		4919964	1					
ANR	4920113	ArgumentList			4919964	1					
ANR	4920114	CompoundStatement		41:12:945:945	4919964	1					
ANR	4920115	IfStatement	if ( excludeTypes )		4919964	0					
ANR	4920116	Condition	excludeTypes	192:19:4348:4359	4919964	0	True				
ANR	4920117	Identifier	excludeTypes		4919964	0					
ANR	4920118	CompoundStatement		43:16:996:996	4919964	1					
ANR	4920119	IfStatement	"if ( strcasecmp ( ""MyType"" , buf . c_str ( ) ) != 0 && strcasecmp ( ""TargetType"" , buf . c_str ( ) ) != 0 )"		4919964	0					
ANR	4920120	Condition	"strcasecmp ( ""MyType"" , buf . c_str ( ) ) != 0 && strcasecmp ( ""TargetType"" , buf . c_str ( ) ) != 0"	194:23:4403:4514	4919964	0	True				
ANR	4920121	AndExpression	"strcasecmp ( ""MyType"" , buf . c_str ( ) ) != 0 && strcasecmp ( ""TargetType"" , buf . c_str ( ) ) != 0"		4919964	0		&&			
ANR	4920122	EqualityExpression	"strcasecmp ( ""MyType"" , buf . c_str ( ) ) != 0"		4919964	0		!=			
ANR	4920123	CallExpression	"strcasecmp ( ""MyType"" , buf . c_str ( ) )"		4919964	0					
ANR	4920124	Callee	strcasecmp		4919964	0					
ANR	4920125	Identifier	strcasecmp		4919964	0					
ANR	4920126	ArgumentList	"""MyType"""		4919964	1					
ANR	4920127	Argument	"""MyType"""		4919964	0					
ANR	4920128	PrimaryExpression	"""MyType"""		4919964	0					
ANR	4920129	Argument	buf . c_str ( )		4919964	1					
ANR	4920130	CallExpression	buf . c_str ( )		4919964	0					
ANR	4920131	Callee	buf . c_str		4919964	0					
ANR	4920132	MemberAccess	buf . c_str		4919964	0					
ANR	4920133	Identifier	buf		4919964	0					
ANR	4920134	Identifier	c_str		4919964	1					
ANR	4920135	ArgumentList			4919964	1					
ANR	4920136	PrimaryExpression	0		4919964	1					
ANR	4920137	EqualityExpression	"strcasecmp ( ""TargetType"" , buf . c_str ( ) ) != 0"		4919964	1		!=			
ANR	4920138	CallExpression	"strcasecmp ( ""TargetType"" , buf . c_str ( ) )"		4919964	0					
ANR	4920139	Callee	strcasecmp		4919964	0					
ANR	4920140	Identifier	strcasecmp		4919964	0					
ANR	4920141	ArgumentList	"""TargetType"""		4919964	1					
ANR	4920142	Argument	"""TargetType"""		4919964	0					
ANR	4920143	PrimaryExpression	"""TargetType"""		4919964	0					
ANR	4920144	Argument	buf . c_str ( )		4919964	1					
ANR	4920145	CallExpression	buf . c_str ( )		4919964	0					
ANR	4920146	Callee	buf . c_str		4919964	0					
ANR	4920147	MemberAccess	buf . c_str		4919964	0					
ANR	4920148	Identifier	buf		4919964	0					
ANR	4920149	Identifier	c_str		4919964	1					
ANR	4920150	ArgumentList			4919964	1					
ANR	4920151	PrimaryExpression	0		4919964	1					
ANR	4920152	CompoundStatement		46:20:1155:1155	4919964	1					
ANR	4920153	ExpressionStatement	numExprs ++	197:24:4563:4573	4919964	0	True				
ANR	4920154	PostIncDecOperationExpression	numExprs ++		4919964	0					
ANR	4920155	Identifier	numExprs		4919964	0					
ANR	4920156	IncDec	++		4919964	1					
ANR	4920157	ElseStatement	else		4919964	0					
ANR	4920158	CompoundStatement		50:21:1254:1254	4919964	0					
ANR	4920159	ExpressionStatement	numExprs ++	200:23:4638:4648	4919964	0	True				
ANR	4920160	PostIncDecOperationExpression	numExprs ++		4919964	0					
ANR	4920161	Identifier	numExprs		4919964	0					
ANR	4920162	IncDec	++		4919964	1					
ANR	4920163	ExpressionStatement	"itor . NextAttribute ( buf , expr )"	202:12:4678:4709	4919964	2	True				
ANR	4920164	CallExpression	"itor . NextAttribute ( buf , expr )"		4919964	0					
ANR	4920165	Callee	itor . NextAttribute		4919964	0					
ANR	4920166	MemberAccess	itor . NextAttribute		4919964	0					
ANR	4920167	Identifier	itor		4919964	0					
ANR	4920168	Identifier	NextAttribute		4919964	1					
ANR	4920169	ArgumentList	buf		4919964	1					
ANR	4920170	Argument	buf		4919964	0					
ANR	4920171	Identifier	buf		4919964	0					
ANR	4920172	Argument	expr		4919964	1					
ANR	4920173	Identifier	expr		4919964	0					
ANR	4920174	IfStatement	if ( publish_server_timeMangled )		4919964	10					
ANR	4920175	Condition	publish_server_timeMangled	206:8:4736:4761	4919964	0	True				
ANR	4920176	Identifier	publish_server_timeMangled		4919964	0					
ANR	4920177	CompoundStatement		56:36:1382:1382	4919964	1					
ANR	4920178	ExpressionStatement	numExprs ++	208:8:4822:4832	4919964	0	True				
ANR	4920179	PostIncDecOperationExpression	numExprs ++		4919964	0					
ANR	4920180	Identifier	numExprs		4919964	0					
ANR	4920181	IncDec	++		4919964	1					
ANR	4920182	ExpressionStatement	send_server_time = true	209:8:4842:4865	4919964	1	True				
ANR	4920183	AssignmentExpression	send_server_time = true		4919964	0		=			
ANR	4920184	Identifier	send_server_time		4919964	0					
ANR	4920185	Identifier	true		4919964	1					
ANR	4920186	ExpressionStatement	sock -> encode ( )	212:1:4875:4890	4919964	11	True				
ANR	4920187	CallExpression	sock -> encode ( )		4919964	0					
ANR	4920188	Callee	sock -> encode		4919964	0					
ANR	4920189	PtrMemberAccess	sock -> encode		4919964	0					
ANR	4920190	Identifier	sock		4919964	0					
ANR	4920191	Identifier	encode		4919964	1					
ANR	4920192	ArgumentList			4919964	1					
ANR	4920193	IfStatement	if ( ! sock -> code ( numExprs ) )		4919964	12					
ANR	4920194	Condition	! sock -> code ( numExprs )	213:5:4897:4919	4919964	0	True				
ANR	4920195	UnaryOperationExpression	! sock -> code ( numExprs )		4919964	0					
ANR	4920196	UnaryOperator	!		4919964	0					
ANR	4920197	CallExpression	sock -> code ( numExprs )		4919964	1					
ANR	4920198	Callee	sock -> code		4919964	0					
ANR	4920199	PtrMemberAccess	sock -> code		4919964	0					
ANR	4920200	Identifier	sock		4919964	0					
ANR	4920201	Identifier	code		4919964	1					
ANR	4920202	ArgumentList	numExprs		4919964	1					
ANR	4920203	Argument	numExprs		4919964	0					
ANR	4920204	Identifier	numExprs		4919964	0					
ANR	4920205	CompoundStatement		63:31:1541:1541	4919964	1					
ANR	4920206	ReturnStatement	return false ;	214:2:4927:4939	4919964	0	True				
ANR	4920207	Identifier	false		4919964	0					
ANR	4920208	IdentifierDeclStatement	classad :: ClassAdIterator attrItor ;	217:4:4953:4986	4919964	13	True				
ANR	4920209	IdentifierDecl	attrItor		4919964	0					
ANR	4920210	IdentifierDeclType	classad :: ClassAdIterator		4919964	0					
ANR	4920211	Identifier	attrItor		4919964	1					
ANR	4920212	ForStatement	for ( int pass = 0 ; pass < 2 ; pass ++ )		4919964	14					
ANR	4920213	ForInit	int pass = 0 ;	218:8:4997:5009	4919964	0	True				
ANR	4920214	IdentifierDeclStatement	int pass = 0 ;		4919964	0					
ANR	4920215	IdentifierDecl	pass = 0		4919964	0					
ANR	4920216	IdentifierDeclType	int		4919964	0					
ANR	4920217	Identifier	pass		4919964	1					
ANR	4920218	AssignmentExpression	pass = 0		4919964	2		=			
ANR	4920219	Identifier	pass		4919964	0					
ANR	4920220	PrimaryExpression	0		4919964	1					
ANR	4920221	Condition	pass < 2	218:22:5011:5018	4919964	1	True				
ANR	4920222	RelationalExpression	pass < 2		4919964	0		<			
ANR	4920223	Identifier	pass		4919964	0					
ANR	4920224	PrimaryExpression	2		4919964	1					
ANR	4920225	PostIncDecOperationExpression	pass ++	218:32:5021:5026	4919964	2	True				
ANR	4920226	Identifier	pass		4919964	0					
ANR	4920227	IncDec	++		4919964	1					
ANR	4920228	CompoundStatement		83:8:2041:2057	4919964	3					
ANR	4920229	IfStatement	if ( pass == 0 )		4919964	0					
ANR	4920230	Condition	pass == 0	219:11:5041:5049	4919964	0	True				
ANR	4920231	EqualityExpression	pass == 0		4919964	0		==			
ANR	4920232	Identifier	pass		4919964	0					
ANR	4920233	PrimaryExpression	0		4919964	1					
ANR	4920234	CompoundStatement		69:22:1670:1670	4919964	1					
ANR	4920235	IfStatement	if ( ! haveChainedAd )		4919964	0					
ANR	4920236	Condition	! haveChainedAd	224:15:5239:5252	4919964	0	True				
ANR	4920237	UnaryOperationExpression	! haveChainedAd		4919964	0					
ANR	4920238	UnaryOperator	!		4919964	0					
ANR	4920239	Identifier	haveChainedAd		4919964	1					
ANR	4920240	CompoundStatement		74:30:1872:1872	4919964	1					
ANR	4920241	ContinueStatement	continue ;	225:16:5272:5280	4919964	0	True				
ANR	4920242	ExpressionStatement	attrItor . Initialize ( * chainedAd )	227:12:5308:5339	4919964	1	True				
ANR	4920243	CallExpression	attrItor . Initialize ( * chainedAd )		4919964	0					
ANR	4920244	Callee	attrItor . Initialize		4919964	0					
ANR	4920245	MemberAccess	attrItor . Initialize		4919964	0					
ANR	4920246	Identifier	attrItor		4919964	0					
ANR	4920247	Identifier	Initialize		4919964	1					
ANR	4920248	ArgumentList	* chainedAd		4919964	1					
ANR	4920249	Argument	* chainedAd		4919964	0					
ANR	4920250	UnaryOperationExpression	* chainedAd		4919964	0					
ANR	4920251	UnaryOperator	*		4919964	0					
ANR	4920252	Identifier	chainedAd		4919964	1					
ANR	4920253	ElseStatement	else		4919964	0					
ANR	4920254	CompoundStatement		79:13:1983:1983	4919964	0					
ANR	4920255	ExpressionStatement	attrItor . Initialize ( ad )	230:12:5379:5402	4919964	0	True				
ANR	4920256	CallExpression	attrItor . Initialize ( ad )		4919964	0					
ANR	4920257	Callee	attrItor . Initialize		4919964	0					
ANR	4920258	MemberAccess	attrItor . Initialize		4919964	0					
ANR	4920259	Identifier	attrItor		4919964	0					
ANR	4920260	Identifier	Initialize		4919964	1					
ANR	4920261	ArgumentList	ad		4919964	1					
ANR	4920262	Argument	ad		4919964	0					
ANR	4920263	Identifier	ad		4919964	0					
ANR	4920264	IdentifierDeclStatement	char * exprString ;	233:8:5423:5439	4919964	1	True				
ANR	4920265	IdentifierDecl	* exprString		4919964	0					
ANR	4920266	IdentifierDeclType	char *		4919964	0					
ANR	4920267	Identifier	exprString		4919964	1					
ANR	4920268	ForStatement	"for ( attrItor . ToFirst ( ) ; ! attrItor . IsAfterLast ( ) ; attrItor . NextAttribute ( buf , expr ) )"		4919964	2					
ANR	4920269	ForInit	attrItor . ToFirst ( ) ;	234:13:5454:5472	4919964	0	True				
ANR	4920270	CallExpression	attrItor . ToFirst ( )		4919964	0					
ANR	4920271	Callee	attrItor . ToFirst		4919964	0					
ANR	4920272	MemberAccess	attrItor . ToFirst		4919964	0					
ANR	4920273	Identifier	attrItor		4919964	0					
ANR	4920274	Identifier	ToFirst		4919964	1					
ANR	4920275	ArgumentList			4919964	1					
ANR	4920276	Condition	! attrItor . IsAfterLast ( )	235:12:5486:5508	4919964	1	True				
ANR	4920277	UnaryOperationExpression	! attrItor . IsAfterLast ( )		4919964	0					
ANR	4920278	UnaryOperator	!		4919964	0					
ANR	4920279	CallExpression	attrItor . IsAfterLast ( )		4919964	1					
ANR	4920280	Callee	attrItor . IsAfterLast		4919964	0					
ANR	4920281	MemberAccess	attrItor . IsAfterLast		4919964	0					
ANR	4920282	Identifier	attrItor		4919964	0					
ANR	4920283	Identifier	IsAfterLast		4919964	1					
ANR	4920284	ArgumentList			4919964	1					
ANR	4920285	CallExpression	"attrItor . NextAttribute ( buf , expr )"	236:12:5523:5555	4919964	2	True				
ANR	4920286	Callee	attrItor . NextAttribute		4919964	0					
ANR	4920287	MemberAccess	attrItor . NextAttribute		4919964	0					
ANR	4920288	Identifier	attrItor		4919964	0					
ANR	4920289	Identifier	NextAttribute		4919964	1					
ANR	4920290	ArgumentList	buf		4919964	1					
ANR	4920291	Argument	buf		4919964	0					
ANR	4920292	Identifier	buf		4919964	0					
ANR	4920293	Argument	expr		4919964	1					
ANR	4920294	Identifier	expr		4919964	0					
ANR	4920295	CompoundStatement		102:12:2637:2660	4919964	3					
ANR	4920296	ExpressionStatement	"attrItor . CurrentAttribute ( buf , expr )"	238:12:5574:5612	4919964	0	True				
ANR	4920297	CallExpression	"attrItor . CurrentAttribute ( buf , expr )"		4919964	0					
ANR	4920298	Callee	attrItor . CurrentAttribute		4919964	0					
ANR	4920299	MemberAccess	attrItor . CurrentAttribute		4919964	0					
ANR	4920300	Identifier	attrItor		4919964	0					
ANR	4920301	Identifier	CurrentAttribute		4919964	1					
ANR	4920302	ArgumentList	buf		4919964	1					
ANR	4920303	Argument	buf		4919964	0					
ANR	4920304	Identifier	buf		4919964	0					
ANR	4920305	Argument	expr		4919964	1					
ANR	4920306	Identifier	expr		4919964	0					
ANR	4920307	IfStatement	if ( compat_classad :: ClassAd :: ClassAdAttributeIsPrivate ( buf . c_str ( ) ) )		4919964	1					
ANR	4920308	Condition	compat_classad :: ClassAd :: ClassAdAttributeIsPrivate ( buf . c_str ( ) )	240:15:5630:5692	4919964	0	True				
ANR	4920309	CallExpression	compat_classad :: ClassAd :: ClassAdAttributeIsPrivate ( buf . c_str ( ) )		4919964	0					
ANR	4920310	Callee	compat_classad :: ClassAd :: ClassAdAttributeIsPrivate		4919964	0					
ANR	4920311	Identifier	compat_classad :: ClassAd :: ClassAdAttributeIsPrivate		4919964	0					
ANR	4920312	ArgumentList	buf . c_str ( )		4919964	1					
ANR	4920313	Argument	buf . c_str ( )		4919964	0					
ANR	4920314	CallExpression	buf . c_str ( )		4919964	0					
ANR	4920315	Callee	buf . c_str		4919964	0					
ANR	4920316	MemberAccess	buf . c_str		4919964	0					
ANR	4920317	Identifier	buf		4919964	0					
ANR	4920318	Identifier	c_str		4919964	1					
ANR	4920319	ArgumentList			4919964	1					
ANR	4920320	CompoundStatement		90:79:2312:2312	4919964	1					
ANR	4920321	ContinueStatement	continue ;	241:16:5712:5720	4919964	0	True				
ANR	4920322	IfStatement	if ( excludeTypes )		4919964	2					
ANR	4920323	Condition	excludeTypes	244:15:5752:5763	4919964	0	True				
ANR	4920324	Identifier	excludeTypes		4919964	0					
ANR	4920325	CompoundStatement		94:28:2383:2383	4919964	1					
ANR	4920326	IfStatement	"if ( strcasecmp ( ""MyType"" , buf . c_str ( ) ) == 0 || strcasecmp ( ""TargetType"" , buf . c_str ( ) ) == 0 )"		4919964	0					
ANR	4920327	Condition	"strcasecmp ( ""MyType"" , buf . c_str ( ) ) == 0 || strcasecmp ( ""TargetType"" , buf . c_str ( ) ) == 0"	245:19:5786:5900	4919964	0	True				
ANR	4920328	OrExpression	"strcasecmp ( ""MyType"" , buf . c_str ( ) ) == 0 || strcasecmp ( ""TargetType"" , buf . c_str ( ) ) == 0"		4919964	0		||			
ANR	4920329	EqualityExpression	"strcasecmp ( ""MyType"" , buf . c_str ( ) ) == 0"		4919964	0		==			
ANR	4920330	CallExpression	"strcasecmp ( ""MyType"" , buf . c_str ( ) )"		4919964	0					
ANR	4920331	Callee	strcasecmp		4919964	0					
ANR	4920332	Identifier	strcasecmp		4919964	0					
ANR	4920333	ArgumentList	"""MyType"""		4919964	1					
ANR	4920334	Argument	"""MyType"""		4919964	0					
ANR	4920335	PrimaryExpression	"""MyType"""		4919964	0					
ANR	4920336	Argument	buf . c_str ( )		4919964	1					
ANR	4920337	CallExpression	buf . c_str ( )		4919964	0					
ANR	4920338	Callee	buf . c_str		4919964	0					
ANR	4920339	MemberAccess	buf . c_str		4919964	0					
ANR	4920340	Identifier	buf		4919964	0					
ANR	4920341	Identifier	c_str		4919964	1					
ANR	4920342	ArgumentList			4919964	1					
ANR	4920343	PrimaryExpression	0		4919964	1					
ANR	4920344	EqualityExpression	"strcasecmp ( ""TargetType"" , buf . c_str ( ) ) == 0"		4919964	1		==			
ANR	4920345	CallExpression	"strcasecmp ( ""TargetType"" , buf . c_str ( ) )"		4919964	0					
ANR	4920346	Callee	strcasecmp		4919964	0					
ANR	4920347	Identifier	strcasecmp		4919964	0					
ANR	4920348	ArgumentList	"""TargetType"""		4919964	1					
ANR	4920349	Argument	"""TargetType"""		4919964	0					
ANR	4920350	PrimaryExpression	"""TargetType"""		4919964	0					
ANR	4920351	Argument	buf . c_str ( )		4919964	1					
ANR	4920352	CallExpression	buf . c_str ( )		4919964	0					
ANR	4920353	Callee	buf . c_str		4919964	0					
ANR	4920354	MemberAccess	buf . c_str		4919964	0					
ANR	4920355	Identifier	buf		4919964	0					
ANR	4920356	Identifier	c_str		4919964	1					
ANR	4920357	ArgumentList			4919964	1					
ANR	4920358	PrimaryExpression	0		4919964	1					
ANR	4920359	CompoundStatement		96:71:2521:2521	4919964	1					
ANR	4920360	ContinueStatement	continue ;	247:20:5925:5933	4919964	0	True				
ANR	4920361	IdentifierDeclStatement	string tmpAttrName ( buf ) ;	252:12:6019:6042	4919964	3	True				
ANR	4920362	IdentifierDecl	tmpAttrName ( buf )		4919964	0					
ANR	4920363	IdentifierDeclType	string		4919964	0					
ANR	4920364	Identifier	tmpAttrName		4919964	1					
ANR	4920365	Identifier	buf		4919964	2					
ANR	4920366	ExpressionStatement	"buf += "" = """	253:12:6056:6068	4919964	4	True				
ANR	4920367	AssignmentExpression	"buf += "" = """		4919964	0		+=			
ANR	4920368	Identifier	buf		4919964	0					
ANR	4920369	PrimaryExpression	""" = """		4919964	1					
ANR	4920370	ExpressionStatement	"unp . Unparse ( buf , expr )"	254:12:6082:6106	4919964	5	True				
ANR	4920371	CallExpression	"unp . Unparse ( buf , expr )"		4919964	0					
ANR	4920372	Callee	unp . Unparse		4919964	0					
ANR	4920373	MemberAccess	unp . Unparse		4919964	0					
ANR	4920374	Identifier	unp		4919964	0					
ANR	4920375	Identifier	Unparse		4919964	1					
ANR	4920376	ArgumentList	buf		4919964	1					
ANR	4920377	Argument	buf		4919964	0					
ANR	4920378	Identifier	buf		4919964	0					
ANR	4920379	Argument	expr		4919964	1					
ANR	4920380	Identifier	expr		4919964	0					
ANR	4920381	ExpressionStatement	exprString = ( char * ) malloc ( buf . size ( ) + 1 )	257:12:6185:6227	4919964	6	True				
ANR	4920382	AssignmentExpression	exprString = ( char * ) malloc ( buf . size ( ) + 1 )		4919964	0		=			
ANR	4920383	Identifier	exprString		4919964	0					
ANR	4920384	CastExpression	( char * ) malloc ( buf . size ( ) + 1 )		4919964	1					
ANR	4920385	CastTarget	char *		4919964	0					
ANR	4920386	CallExpression	malloc ( buf . size ( ) + 1 )		4919964	1					
ANR	4920387	Callee	malloc		4919964	0					
ANR	4920388	Identifier	malloc		4919964	0					
ANR	4920389	ArgumentList	buf . size ( ) + 1		4919964	1					
ANR	4920390	Argument	buf . size ( ) + 1		4919964	0					
ANR	4920391	AdditiveExpression	buf . size ( ) + 1		4919964	0		+			
ANR	4920392	CallExpression	buf . size ( )		4919964	0					
ANR	4920393	Callee	buf . size		4919964	0					
ANR	4920394	MemberAccess	buf . size		4919964	0					
ANR	4920395	Identifier	buf		4919964	0					
ANR	4920396	Identifier	size		4919964	1					
ANR	4920397	ArgumentList			4919964	1					
ANR	4920398	PrimaryExpression	1		4919964	1					
ANR	4920399	ExpressionStatement	"strncpy ( exprString , buf . c_str ( ) , buf . size ( ) + 1 )"	258:12:6241:6289	4919964	7	True				
ANR	4920400	CallExpression	"strncpy ( exprString , buf . c_str ( ) , buf . size ( ) + 1 )"		4919964	0					
ANR	4920401	Callee	strncpy		4919964	0					
ANR	4920402	Identifier	strncpy		4919964	0					
ANR	4920403	ArgumentList	exprString		4919964	1					
ANR	4920404	Argument	exprString		4919964	0					
ANR	4920405	Identifier	exprString		4919964	0					
ANR	4920406	Argument	buf . c_str ( )		4919964	1					
ANR	4920407	CallExpression	buf . c_str ( )		4919964	0					
ANR	4920408	Callee	buf . c_str		4919964	0					
ANR	4920409	MemberAccess	buf . c_str		4919964	0					
ANR	4920410	Identifier	buf		4919964	0					
ANR	4920411	Identifier	c_str		4919964	1					
ANR	4920412	ArgumentList			4919964	1					
ANR	4920413	Argument	buf . size ( ) + 1		4919964	2					
ANR	4920414	AdditiveExpression	buf . size ( ) + 1		4919964	0		+			
ANR	4920415	CallExpression	buf . size ( )		4919964	0					
ANR	4920416	Callee	buf . size		4919964	0					
ANR	4920417	MemberAccess	buf . size		4919964	0					
ANR	4920418	Identifier	buf		4919964	0					
ANR	4920419	Identifier	size		4919964	1					
ANR	4920420	ArgumentList			4919964	1					
ANR	4920421	PrimaryExpression	1		4919964	1					
ANR	4920422	IfStatement	if ( ! sock -> put ( exprString ) )		4919964	8					
ANR	4920423	Condition	! sock -> put ( exprString )	267:24:6673:6694	4919964	0	True				
ANR	4920424	UnaryOperationExpression	! sock -> put ( exprString )		4919964	0					
ANR	4920425	UnaryOperator	!		4919964	0					
ANR	4920426	CallExpression	sock -> put ( exprString )		4919964	1					
ANR	4920427	Callee	sock -> put		4919964	0					
ANR	4920428	PtrMemberAccess	sock -> put		4919964	0					
ANR	4920429	Identifier	sock		4919964	0					
ANR	4920430	Identifier	put		4919964	1					
ANR	4920431	ArgumentList	exprString		4919964	1					
ANR	4920432	Argument	exprString		4919964	0					
ANR	4920433	Identifier	exprString		4919964	0					
ANR	4920434	CompoundStatement		117:48:3315:3315	4919964	1					
ANR	4920435	ExpressionStatement	free ( exprString )	268:16:6715:6731	4919964	0	True				
ANR	4920436	CallExpression	free ( exprString )		4919964	0					
ANR	4920437	Callee	free		4919964	0					
ANR	4920438	Identifier	free		4919964	0					
ANR	4920439	ArgumentList	exprString		4919964	1					
ANR	4920440	Argument	exprString		4919964	0					
ANR	4920441	Identifier	exprString		4919964	0					
ANR	4920442	ReturnStatement	return false ;	269:16:6749:6761	4919964	1	True				
ANR	4920443	Identifier	false		4919964	0					
ANR	4920444	ExpressionStatement	free ( exprString )	271:12:6789:6805	4919964	9	True				
ANR	4920445	CallExpression	free ( exprString )		4919964	0					
ANR	4920446	Callee	free		4919964	0					
ANR	4920447	Identifier	free		4919964	0					
ANR	4920448	ArgumentList	exprString		4919964	1					
ANR	4920449	Argument	exprString		4919964	0					
ANR	4920450	Identifier	exprString		4919964	0					
ANR	4920451	IfStatement	if ( send_server_time )		4919964	15					
ANR	4920452	Condition	send_server_time	275:7:6831:6846	4919964	0	True				
ANR	4920453	Identifier	send_server_time		4919964	0					
ANR	4920454	CompoundStatement		132:8:3793:3812	4919964	1					
ANR	4920455	IdentifierDeclStatement	char * serverTimeStr ;	282:8:7175:7194	4919964	0	True				
ANR	4920456	IdentifierDecl	* serverTimeStr		4919964	0					
ANR	4920457	IdentifierDeclType	char *		4919964	0					
ANR	4920458	Identifier	serverTimeStr		4919964	1					
ANR	4920459	ExpressionStatement	serverTimeStr = ( char * ) malloc ( strlen ( ATTR_SERVER_TIME ) + 3 + 12 + 1 )	283:8:7204:7427	4919964	1	True				
ANR	4920460	AssignmentExpression	serverTimeStr = ( char * ) malloc ( strlen ( ATTR_SERVER_TIME ) + 3 + 12 + 1 )		4919964	0		=			
ANR	4920461	Identifier	serverTimeStr		4919964	0					
ANR	4920462	CastExpression	( char * ) malloc ( strlen ( ATTR_SERVER_TIME ) + 3 + 12 + 1 )		4919964	1					
ANR	4920463	CastTarget	char *		4919964	0					
ANR	4920464	CallExpression	malloc ( strlen ( ATTR_SERVER_TIME ) + 3 + 12 + 1 )		4919964	1					
ANR	4920465	Callee	malloc		4919964	0					
ANR	4920466	Identifier	malloc		4919964	0					
ANR	4920467	ArgumentList	strlen ( ATTR_SERVER_TIME ) + 3 + 12 + 1		4919964	1					
ANR	4920468	Argument	strlen ( ATTR_SERVER_TIME ) + 3 + 12 + 1		4919964	0					
ANR	4920469	AdditiveExpression	strlen ( ATTR_SERVER_TIME ) + 3 + 12 + 1		4919964	0		+			
ANR	4920470	CallExpression	strlen ( ATTR_SERVER_TIME )		4919964	0					
ANR	4920471	Callee	strlen		4919964	0					
ANR	4920472	Identifier	strlen		4919964	0					
ANR	4920473	ArgumentList	ATTR_SERVER_TIME		4919964	1					
ANR	4920474	Argument	ATTR_SERVER_TIME		4919964	0					
ANR	4920475	Identifier	ATTR_SERVER_TIME		4919964	0					
ANR	4920476	AdditiveExpression	3 + 12 + 1		4919964	1		+			
ANR	4920477	PrimaryExpression	3		4919964	0					
ANR	4920478	AdditiveExpression	12 + 1		4919964	1		+			
ANR	4920479	PrimaryExpression	12		4919964	0					
ANR	4920480	PrimaryExpression	1		4919964	1					
ANR	4920481	ExpressionStatement	"sprintf ( serverTimeStr , ""%s = %ld"" , ATTR_SERVER_TIME , ( long ) time ( NULL ) )"	287:8:7463:7534	4919964	2	True				
ANR	4920482	CallExpression	"sprintf ( serverTimeStr , ""%s = %ld"" , ATTR_SERVER_TIME , ( long ) time ( NULL ) )"		4919964	0					
ANR	4920483	Callee	sprintf		4919964	0					
ANR	4920484	Identifier	sprintf		4919964	0					
ANR	4920485	ArgumentList	serverTimeStr		4919964	1					
ANR	4920486	Argument	serverTimeStr		4919964	0					
ANR	4920487	Identifier	serverTimeStr		4919964	0					
ANR	4920488	Argument	"""%s = %ld"""		4919964	1					
ANR	4920489	PrimaryExpression	"""%s = %ld"""		4919964	0					
ANR	4920490	Argument	ATTR_SERVER_TIME		4919964	2					
ANR	4920491	Identifier	ATTR_SERVER_TIME		4919964	0					
ANR	4920492	Argument	( long ) time ( NULL )		4919964	3					
ANR	4920493	CastExpression	( long ) time ( NULL )		4919964	0					
ANR	4920494	CastTarget	long		4919964	0					
ANR	4920495	CallExpression	time ( NULL )		4919964	1					
ANR	4920496	Callee	time		4919964	0					
ANR	4920497	Identifier	time		4919964	0					
ANR	4920498	ArgumentList	NULL		4919964	1					
ANR	4920499	Argument	NULL		4919964	0					
ANR	4920500	Identifier	NULL		4919964	0					
ANR	4920501	IfStatement	if ( ! sock -> put ( serverTimeStr ) )		4919964	3					
ANR	4920502	Condition	! sock -> put ( serverTimeStr )	288:11:7547:7571	4919964	0	True				
ANR	4920503	UnaryOperationExpression	! sock -> put ( serverTimeStr )		4919964	0					
ANR	4920504	UnaryOperator	!		4919964	0					
ANR	4920505	CallExpression	sock -> put ( serverTimeStr )		4919964	1					
ANR	4920506	Callee	sock -> put		4919964	0					
ANR	4920507	PtrMemberAccess	sock -> put		4919964	0					
ANR	4920508	Identifier	sock		4919964	0					
ANR	4920509	Identifier	put		4919964	1					
ANR	4920510	ArgumentList	serverTimeStr		4919964	1					
ANR	4920511	Argument	serverTimeStr		4919964	0					
ANR	4920512	Identifier	serverTimeStr		4919964	0					
ANR	4920513	CompoundStatement		138:37:4191:4191	4919964	1					
ANR	4920514	ExpressionStatement	free ( serverTimeStr )	289:12:7587:7606	4919964	0	True				
ANR	4920515	CallExpression	free ( serverTimeStr )		4919964	0					
ANR	4920516	Callee	free		4919964	0					
ANR	4920517	Identifier	free		4919964	0					
ANR	4920518	ArgumentList	serverTimeStr		4919964	1					
ANR	4920519	Argument	serverTimeStr		4919964	0					
ANR	4920520	Identifier	serverTimeStr		4919964	0					
ANR	4920521	ReturnStatement	return 0 ;	290:12:7620:7628	4919964	1	True				
ANR	4920522	PrimaryExpression	0		4919964	0					
ANR	4920523	ExpressionStatement	free ( serverTimeStr )	292:8:7648:7667	4919964	4	True				
ANR	4920524	CallExpression	free ( serverTimeStr )		4919964	0					
ANR	4920525	Callee	free		4919964	0					
ANR	4920526	Identifier	free		4919964	0					
ANR	4920527	ArgumentList	serverTimeStr		4919964	1					
ANR	4920528	Argument	serverTimeStr		4919964	0					
ANR	4920529	Identifier	serverTimeStr		4919964	0					
ANR	4920530	IfStatement	if ( excludeTypes )		4919964	16					
ANR	4920531	Condition	excludeTypes	296:7:7739:7750	4919964	0	True				
ANR	4920532	Identifier	excludeTypes		4919964	0					
ANR	4920533	CompoundStatement		147:4:4375:4375	4919964	1					
ANR	4920534	IfStatement	"if ( ! ad . EvaluateAttrString ( ""MyType"" , buf ) )"		4919964	0					
ANR	4920535	Condition	"! ad . EvaluateAttrString ( ""MyType"" , buf )"	299:12:7796:7831	4919964	0	True				
ANR	4920536	UnaryOperationExpression	"! ad . EvaluateAttrString ( ""MyType"" , buf )"		4919964	0					
ANR	4920537	UnaryOperator	!		4919964	0					
ANR	4920538	CallExpression	"ad . EvaluateAttrString ( ""MyType"" , buf )"		4919964	1					
ANR	4920539	Callee	ad . EvaluateAttrString		4919964	0					
ANR	4920540	MemberAccess	ad . EvaluateAttrString		4919964	0					
ANR	4920541	Identifier	ad		4919964	0					
ANR	4920542	Identifier	EvaluateAttrString		4919964	1					
ANR	4920543	ArgumentList	"""MyType"""		4919964	1					
ANR	4920544	Argument	"""MyType"""		4919964	0					
ANR	4920545	PrimaryExpression	"""MyType"""		4919964	0					
ANR	4920546	Argument	buf		4919964	1					
ANR	4920547	Identifier	buf		4919964	0					
ANR	4920548	CompoundStatement		149:50:4452:4452	4919964	1					
ANR	4920549	ExpressionStatement	"buf = ""(unknown type)"""	300:12:7848:7868	4919964	0	True				
ANR	4920550	AssignmentExpression	"buf = ""(unknown type)"""		4919964	0		=			
ANR	4920551	Identifier	buf		4919964	0					
ANR	4920552	PrimaryExpression	"""(unknown type)"""		4919964	1					
ANR	4920553	IfStatement	if ( ! sock -> put ( buf . c_str ( ) ) )		4919964	1					
ANR	4920554	Condition	! sock -> put ( buf . c_str ( ) )	302:12:7892:7914	4919964	0	True				
ANR	4920555	UnaryOperationExpression	! sock -> put ( buf . c_str ( ) )		4919964	0					
ANR	4920556	UnaryOperator	!		4919964	0					
ANR	4920557	CallExpression	sock -> put ( buf . c_str ( ) )		4919964	1					
ANR	4920558	Callee	sock -> put		4919964	0					
ANR	4920559	PtrMemberAccess	sock -> put		4919964	0					
ANR	4920560	Identifier	sock		4919964	0					
ANR	4920561	Identifier	put		4919964	1					
ANR	4920562	ArgumentList	buf . c_str ( )		4919964	1					
ANR	4920563	Argument	buf . c_str ( )		4919964	0					
ANR	4920564	CallExpression	buf . c_str ( )		4919964	0					
ANR	4920565	Callee	buf . c_str		4919964	0					
ANR	4920566	MemberAccess	buf . c_str		4919964	0					
ANR	4920567	Identifier	buf		4919964	0					
ANR	4920568	Identifier	c_str		4919964	1					
ANR	4920569	ArgumentList			4919964	1					
ANR	4920570	CompoundStatement		152:37:4535:4535	4919964	1					
ANR	4920571	ReturnStatement	return false ;	303:12:7931:7943	4919964	0	True				
ANR	4920572	Identifier	false		4919964	0					
ANR	4920573	IfStatement	"if ( ! ad . EvaluateAttrString ( ""TargetType"" , buf ) )"		4919964	2					
ANR	4920574	Condition	"! ad . EvaluateAttrString ( ""TargetType"" , buf )"	306:12:7968:8007	4919964	0	True				
ANR	4920575	UnaryOperationExpression	"! ad . EvaluateAttrString ( ""TargetType"" , buf )"		4919964	0					
ANR	4920576	UnaryOperator	!		4919964	0					
ANR	4920577	CallExpression	"ad . EvaluateAttrString ( ""TargetType"" , buf )"		4919964	1					
ANR	4920578	Callee	ad . EvaluateAttrString		4919964	0					
ANR	4920579	MemberAccess	ad . EvaluateAttrString		4919964	0					
ANR	4920580	Identifier	ad		4919964	0					
ANR	4920581	Identifier	EvaluateAttrString		4919964	1					
ANR	4920582	ArgumentList	"""TargetType"""		4919964	1					
ANR	4920583	Argument	"""TargetType"""		4919964	0					
ANR	4920584	PrimaryExpression	"""TargetType"""		4919964	0					
ANR	4920585	Argument	buf		4919964	1					
ANR	4920586	Identifier	buf		4919964	0					
ANR	4920587	CompoundStatement		156:54:4628:4628	4919964	1					
ANR	4920588	ExpressionStatement	"buf = ""(unknown type)"""	307:12:8024:8044	4919964	0	True				
ANR	4920589	AssignmentExpression	"buf = ""(unknown type)"""		4919964	0		=			
ANR	4920590	Identifier	buf		4919964	0					
ANR	4920591	PrimaryExpression	"""(unknown type)"""		4919964	1					
ANR	4920592	IfStatement	if ( ! sock -> put ( buf . c_str ( ) ) )		4919964	3					
ANR	4920593	Condition	! sock -> put ( buf . c_str ( ) )	309:12:8068:8090	4919964	0	True				
ANR	4920594	UnaryOperationExpression	! sock -> put ( buf . c_str ( ) )		4919964	0					
ANR	4920595	UnaryOperator	!		4919964	0					
ANR	4920596	CallExpression	sock -> put ( buf . c_str ( ) )		4919964	1					
ANR	4920597	Callee	sock -> put		4919964	0					
ANR	4920598	PtrMemberAccess	sock -> put		4919964	0					
ANR	4920599	Identifier	sock		4919964	0					
ANR	4920600	Identifier	put		4919964	1					
ANR	4920601	ArgumentList	buf . c_str ( )		4919964	1					
ANR	4920602	Argument	buf . c_str ( )		4919964	0					
ANR	4920603	CallExpression	buf . c_str ( )		4919964	0					
ANR	4920604	Callee	buf . c_str		4919964	0					
ANR	4920605	MemberAccess	buf . c_str		4919964	0					
ANR	4920606	Identifier	buf		4919964	0					
ANR	4920607	Identifier	c_str		4919964	1					
ANR	4920608	ArgumentList			4919964	1					
ANR	4920609	CompoundStatement		159:37:4711:4711	4919964	1					
ANR	4920610	ReturnStatement	return false ;	310:12:8107:8119	4919964	0	True				
ANR	4920611	Identifier	false		4919964	0					
ANR	4920612	ReturnStatement	return true ;	314:1:8139:8150	4919964	17	True				
ANR	4920613	Identifier	true		4919964	0					
ANR	4920614	ReturnType	bool		4919964	1					
ANR	4920615	Identifier	putOldClassAd		4919964	2					
ANR	4920616	ParameterList	"DummyStream * sock , classad :: ClassAd & ad , bool excludeTypes"		4919964	3					
ANR	4920617	Parameter	DummyStream * sock	150:21:3320:3336	4919964	0	True				
ANR	4920618	ParameterType	DummyStream *		4919964	0					
ANR	4920619	Identifier	sock		4919964	1					
ANR	4920620	Parameter	classad :: ClassAd & ad	150:40:3339:3358	4919964	1	True				
ANR	4920621	ParameterType	classad :: ClassAd &		4919964	0					
ANR	4920622	Identifier	ad		4919964	1					
ANR	4920623	Parameter	bool excludeTypes	150:62:3361:3377	4919964	2	True				
ANR	4920624	ParameterType	bool		4919964	0					
ANR	4920625	Identifier	excludeTypes		4919964	1					
ANR	4920626	CFGEntryNode	ENTRY		4919964		True				
ANR	4920627	CFGExitNode	EXIT		4919964		True				
ANR	4920628	Symbol	numExprs		4919964						
ANR	4920629	Symbol	sock -> put		4919964						
ANR	4920630	Symbol	strlen		4919964						
ANR	4920631	Symbol	buf . c_str		4919964						
ANR	4920632	Symbol	expr		4919964						
ANR	4920633	Symbol	send_server_time		4919964						
ANR	4920634	Symbol	publish_server_timeMangled		4919964						
ANR	4920635	Symbol	buf . size		4919964						
ANR	4920636	Symbol	strcasecmp		4919964						
ANR	4920637	Symbol	* sock		4919964						
ANR	4920638	Symbol	attrItor		4919964						
ANR	4920639	Symbol	tmpAttrName		4919964						
ANR	4920640	Symbol	malloc		4919964						
ANR	4920641	Symbol	ad . EvaluateAttrString		4919964						
ANR	4920642	Symbol	ad		4919964						
ANR	4920643	Symbol	haveChainedAd		4919964						
ANR	4920644	Symbol	NULL		4919964						
ANR	4920645	Symbol	ad . GetChainedParentAd		4919964						
ANR	4920646	Symbol	excludeTypes		4919964						
ANR	4920647	Symbol	pass		4919964						
ANR	4920648	Symbol	* chainedAd		4919964						
ANR	4920649	Symbol	attrItor . IsAfterLast		4919964						
ANR	4920650	Symbol	false		4919964						
ANR	4920651	Symbol	ATTR_SERVER_TIME		4919964						
ANR	4920652	Symbol	compat_classad :: ClassAd :: ClassAdAttributeIsPrivate		4919964						
ANR	4920653	Symbol	serverTimeStr		4919964						
ANR	4920654	Symbol	sock		4919964						
ANR	4920655	Symbol	buf		4919964						
ANR	4920656	Symbol	chainedAd		4919964						
ANR	4920657	Symbol	sock -> code		4919964						
ANR	4920658	Symbol	unp		4919964						
ANR	4920659	Symbol	exprString		4919964						
ANR	4920660	Symbol	true		4919964						
ANR	4920661	Symbol	itor . IsAfterLast		4919964						
ANR	4920662	Symbol	time		4919964						
ANR	4920663	Symbol	itor		4919964						
ANR	4920664	DeclStmt									
ANR	4920665	Decl							char	char * [ ]	classad_strings
ANR	4920666	Function	setUpClassAds	326:0:8288:9450							
ANR	4920667	FunctionDef	"setUpClassAds (ClassAd * c1 , ClassAd * c2 , ClassAd * c3 , FILE * c1FP , FILE * c2FP , FILE * c3FP , bool verbose)"		4920666	0					
ANR	4920668	CompoundStatement		328:0:8416:9450	4920666	0					
ANR	4920669	IfStatement	if ( verbose )		4920666	0					
ANR	4920670	Condition	verbose	329:7:8425:8431	4920666	0	True				
ANR	4920671	Identifier	verbose		4920666	0					
ANR	4920672	ExpressionStatement	"printf ( ""Creating ClassAds\\n"" )"	330:8:8442:8471	4920666	1	True				
ANR	4920673	CallExpression	"printf ( ""Creating ClassAds\\n"" )"		4920666	0					
ANR	4920674	Callee	printf		4920666	0					
ANR	4920675	Identifier	printf		4920666	0					
ANR	4920676	ArgumentList	"""Creating ClassAds\\n"""		4920666	1					
ANR	4920677	Argument	"""Creating ClassAds\\n"""		4920666	0					
ANR	4920678	PrimaryExpression	"""Creating ClassAds\\n"""		4920666	0					
ANR	4920679	Statement	c1	332:1:8475:8476	4920666	1	True				
ANR	4920680	Statement	=	332:4:8478:8478	4920666	2	True				
ANR	4920681	Statement	new	332:6:8480:8482	4920666	3	True				
ANR	4920682	ExpressionStatement	ClassAd	332:10:8484:8491	4920666	4	True				
ANR	4920683	Identifier	ClassAd		4920666	0					
ANR	4920684	Statement	c2	333:1:8494:8495	4920666	5	True				
ANR	4920685	Statement	=	333:4:8497:8497	4920666	6	True				
ANR	4920686	Statement	new	333:6:8499:8501	4920666	7	True				
ANR	4920687	ExpressionStatement	ClassAd	333:10:8503:8510	4920666	8	True				
ANR	4920688	Identifier	ClassAd		4920666	0					
ANR	4920689	Statement	c3	334:1:8513:8514	4920666	9	True				
ANR	4920690	Statement	=	334:4:8516:8516	4920666	10	True				
ANR	4920691	Statement	new	334:7:8519:8521	4920666	11	True				
ANR	4920692	ExpressionStatement	ClassAd	334:11:8523:8530	4920666	12	True				
ANR	4920693	Identifier	ClassAd		4920666	0					
ANR	4920694	ExpressionStatement	"c1 -> initFromString ( classad_strings [ 0 ] , NULL )"	335:4:8536:8580	4920666	13	True				
ANR	4920695	CallExpression	"c1 -> initFromString ( classad_strings [ 0 ] , NULL )"		4920666	0					
ANR	4920696	Callee	c1 -> initFromString		4920666	0					
ANR	4920697	PtrMemberAccess	c1 -> initFromString		4920666	0					
ANR	4920698	Identifier	c1		4920666	0					
ANR	4920699	Identifier	initFromString		4920666	1					
ANR	4920700	ArgumentList	classad_strings [ 0 ]		4920666	1					
ANR	4920701	Argument	classad_strings [ 0 ]		4920666	0					
ANR	4920702	ArrayIndexing	classad_strings [ 0 ]		4920666	0					
ANR	4920703	Identifier	classad_strings		4920666	0					
ANR	4920704	PrimaryExpression	0		4920666	1					
ANR	4920705	Argument	NULL		4920666	1					
ANR	4920706	Identifier	NULL		4920666	0					
ANR	4920707	ExpressionStatement	"c2 -> initFromString ( classad_strings [ 1 ] , NULL )"	336:4:8586:8630	4920666	14	True				
ANR	4920708	CallExpression	"c2 -> initFromString ( classad_strings [ 1 ] , NULL )"		4920666	0					
ANR	4920709	Callee	c2 -> initFromString		4920666	0					
ANR	4920710	PtrMemberAccess	c2 -> initFromString		4920666	0					
ANR	4920711	Identifier	c2		4920666	0					
ANR	4920712	Identifier	initFromString		4920666	1					
ANR	4920713	ArgumentList	classad_strings [ 1 ]		4920666	1					
ANR	4920714	Argument	classad_strings [ 1 ]		4920666	0					
ANR	4920715	ArrayIndexing	classad_strings [ 1 ]		4920666	0					
ANR	4920716	Identifier	classad_strings		4920666	0					
ANR	4920717	PrimaryExpression	1		4920666	1					
ANR	4920718	Argument	NULL		4920666	1					
ANR	4920719	Identifier	NULL		4920666	0					
ANR	4920720	ExpressionStatement	"c3 -> initFromString ( classad_strings [ 2 ] , NULL )"	337:4:8636:8680	4920666	15	True				
ANR	4920721	CallExpression	"c3 -> initFromString ( classad_strings [ 2 ] , NULL )"		4920666	0					
ANR	4920722	Callee	c3 -> initFromString		4920666	0					
ANR	4920723	PtrMemberAccess	c3 -> initFromString		4920666	0					
ANR	4920724	Identifier	c3		4920666	0					
ANR	4920725	Identifier	initFromString		4920666	1					
ANR	4920726	ArgumentList	classad_strings [ 2 ]		4920666	1					
ANR	4920727	Argument	classad_strings [ 2 ]		4920666	0					
ANR	4920728	ArrayIndexing	classad_strings [ 2 ]		4920666	0					
ANR	4920729	Identifier	classad_strings		4920666	0					
ANR	4920730	PrimaryExpression	2		4920666	1					
ANR	4920731	Argument	NULL		4920666	1					
ANR	4920732	Identifier	NULL		4920666	0					
ANR	4920733	ExpressionStatement	"c1 -> SetMyTypeName ( ""c1"" )"	338:4:8686:8709	4920666	16	True				
ANR	4920734	CallExpression	"c1 -> SetMyTypeName ( ""c1"" )"		4920666	0					
ANR	4920735	Callee	c1 -> SetMyTypeName		4920666	0					
ANR	4920736	PtrMemberAccess	c1 -> SetMyTypeName		4920666	0					
ANR	4920737	Identifier	c1		4920666	0					
ANR	4920738	Identifier	SetMyTypeName		4920666	1					
ANR	4920739	ArgumentList	"""c1"""		4920666	1					
ANR	4920740	Argument	"""c1"""		4920666	0					
ANR	4920741	PrimaryExpression	"""c1"""		4920666	0					
ANR	4920742	ExpressionStatement	"c2 -> SetMyTypeName ( ""c2"" )"	339:4:8715:8738	4920666	17	True				
ANR	4920743	CallExpression	"c2 -> SetMyTypeName ( ""c2"" )"		4920666	0					
ANR	4920744	Callee	c2 -> SetMyTypeName		4920666	0					
ANR	4920745	PtrMemberAccess	c2 -> SetMyTypeName		4920666	0					
ANR	4920746	Identifier	c2		4920666	0					
ANR	4920747	Identifier	SetMyTypeName		4920666	1					
ANR	4920748	ArgumentList	"""c2"""		4920666	1					
ANR	4920749	Argument	"""c2"""		4920666	0					
ANR	4920750	PrimaryExpression	"""c2"""		4920666	0					
ANR	4920751	ExpressionStatement	"c3 -> SetMyTypeName ( ""c3"" )"	340:4:8744:8767	4920666	18	True				
ANR	4920752	CallExpression	"c3 -> SetMyTypeName ( ""c3"" )"		4920666	0					
ANR	4920753	Callee	c3 -> SetMyTypeName		4920666	0					
ANR	4920754	PtrMemberAccess	c3 -> SetMyTypeName		4920666	0					
ANR	4920755	Identifier	c3		4920666	0					
ANR	4920756	Identifier	SetMyTypeName		4920666	1					
ANR	4920757	ArgumentList	"""c3"""		4920666	1					
ANR	4920758	Argument	"""c3"""		4920666	0					
ANR	4920759	PrimaryExpression	"""c3"""		4920666	0					
ANR	4920760	ExpressionStatement	"c1 -> SetTargetTypeName ( ""not c1!"" )"	342:4:8774:8806	4920666	19	True				
ANR	4920761	CallExpression	"c1 -> SetTargetTypeName ( ""not c1!"" )"		4920666	0					
ANR	4920762	Callee	c1 -> SetTargetTypeName		4920666	0					
ANR	4920763	PtrMemberAccess	c1 -> SetTargetTypeName		4920666	0					
ANR	4920764	Identifier	c1		4920666	0					
ANR	4920765	Identifier	SetTargetTypeName		4920666	1					
ANR	4920766	ArgumentList	"""not c1!"""		4920666	1					
ANR	4920767	Argument	"""not c1!"""		4920666	0					
ANR	4920768	PrimaryExpression	"""not c1!"""		4920666	0					
ANR	4920769	ExpressionStatement	"c2 -> SetTargetTypeName ( ""not c2!"" )"	343:4:8812:8844	4920666	20	True				
ANR	4920770	CallExpression	"c2 -> SetTargetTypeName ( ""not c2!"" )"		4920666	0					
ANR	4920771	Callee	c2 -> SetTargetTypeName		4920666	0					
ANR	4920772	PtrMemberAccess	c2 -> SetTargetTypeName		4920666	0					
ANR	4920773	Identifier	c2		4920666	0					
ANR	4920774	Identifier	SetTargetTypeName		4920666	1					
ANR	4920775	ArgumentList	"""not c2!"""		4920666	1					
ANR	4920776	Argument	"""not c2!"""		4920666	0					
ANR	4920777	PrimaryExpression	"""not c2!"""		4920666	0					
ANR	4920778	ExpressionStatement	"c3 -> SetTargetTypeName ( ""not c3!"" )"	344:4:8850:8882	4920666	21	True				
ANR	4920779	CallExpression	"c3 -> SetTargetTypeName ( ""not c3!"" )"		4920666	0					
ANR	4920780	Callee	c3 -> SetTargetTypeName		4920666	0					
ANR	4920781	PtrMemberAccess	c3 -> SetTargetTypeName		4920666	0					
ANR	4920782	Identifier	c3		4920666	0					
ANR	4920783	Identifier	SetTargetTypeName		4920666	1					
ANR	4920784	ArgumentList	"""not c3!"""		4920666	1					
ANR	4920785	Argument	"""not c3!"""		4920666	0					
ANR	4920786	PrimaryExpression	"""not c3!"""		4920666	0					
ANR	4920787	IfStatement	if ( verbose )		4920666	22					
ANR	4920788	Condition	verbose	346:7:8892:8898	4920666	0	True				
ANR	4920789	Identifier	verbose		4920666	0					
ANR	4920790	CompoundStatement		20:4:488:488	4920666	1					
ANR	4920791	ExpressionStatement	"printf ( ""C1:\\n"" )"	348:8:8915:8930	4920666	0	True				
ANR	4920792	CallExpression	"printf ( ""C1:\\n"" )"		4920666	0					
ANR	4920793	Callee	printf		4920666	0					
ANR	4920794	Identifier	printf		4920666	0					
ANR	4920795	ArgumentList	"""C1:\\n"""		4920666	1					
ANR	4920796	Argument	"""C1:\\n"""		4920666	0					
ANR	4920797	PrimaryExpression	"""C1:\\n"""		4920666	0					
ANR	4920798	ExpressionStatement	c1 -> fPrint ( stdout )	348:25:8932:8950	4920666	1	True				
ANR	4920799	CallExpression	c1 -> fPrint ( stdout )		4920666	0					
ANR	4920800	Callee	c1 -> fPrint		4920666	0					
ANR	4920801	PtrMemberAccess	c1 -> fPrint		4920666	0					
ANR	4920802	Identifier	c1		4920666	0					
ANR	4920803	Identifier	fPrint		4920666	1					
ANR	4920804	ArgumentList	stdout		4920666	1					
ANR	4920805	Argument	stdout		4920666	0					
ANR	4920806	Identifier	stdout		4920666	0					
ANR	4920807	ExpressionStatement	"printf ( ""\\n"" )"	348:45:8952:8964	4920666	2	True				
ANR	4920808	CallExpression	"printf ( ""\\n"" )"		4920666	0					
ANR	4920809	Callee	printf		4920666	0					
ANR	4920810	Identifier	printf		4920666	0					
ANR	4920811	ArgumentList	"""\\n"""		4920666	1					
ANR	4920812	Argument	"""\\n"""		4920666	0					
ANR	4920813	PrimaryExpression	"""\\n"""		4920666	0					
ANR	4920814	ExpressionStatement	"printf ( ""C2:\\n"" )"	349:8:8974:8989	4920666	3	True				
ANR	4920815	CallExpression	"printf ( ""C2:\\n"" )"		4920666	0					
ANR	4920816	Callee	printf		4920666	0					
ANR	4920817	Identifier	printf		4920666	0					
ANR	4920818	ArgumentList	"""C2:\\n"""		4920666	1					
ANR	4920819	Argument	"""C2:\\n"""		4920666	0					
ANR	4920820	PrimaryExpression	"""C2:\\n"""		4920666	0					
ANR	4920821	ExpressionStatement	c2 -> fPrint ( stdout )	349:25:8991:9009	4920666	4	True				
ANR	4920822	CallExpression	c2 -> fPrint ( stdout )		4920666	0					
ANR	4920823	Callee	c2 -> fPrint		4920666	0					
ANR	4920824	PtrMemberAccess	c2 -> fPrint		4920666	0					
ANR	4920825	Identifier	c2		4920666	0					
ANR	4920826	Identifier	fPrint		4920666	1					
ANR	4920827	ArgumentList	stdout		4920666	1					
ANR	4920828	Argument	stdout		4920666	0					
ANR	4920829	Identifier	stdout		4920666	0					
ANR	4920830	ExpressionStatement	"printf ( ""\\n"" )"	349:45:9011:9023	4920666	5	True				
ANR	4920831	CallExpression	"printf ( ""\\n"" )"		4920666	0					
ANR	4920832	Callee	printf		4920666	0					
ANR	4920833	Identifier	printf		4920666	0					
ANR	4920834	ArgumentList	"""\\n"""		4920666	1					
ANR	4920835	Argument	"""\\n"""		4920666	0					
ANR	4920836	PrimaryExpression	"""\\n"""		4920666	0					
ANR	4920837	ExpressionStatement	"printf ( ""C3:\\n"" )"	350:8:9033:9048	4920666	6	True				
ANR	4920838	CallExpression	"printf ( ""C3:\\n"" )"		4920666	0					
ANR	4920839	Callee	printf		4920666	0					
ANR	4920840	Identifier	printf		4920666	0					
ANR	4920841	ArgumentList	"""C3:\\n"""		4920666	1					
ANR	4920842	Argument	"""C3:\\n"""		4920666	0					
ANR	4920843	PrimaryExpression	"""C3:\\n"""		4920666	0					
ANR	4920844	ExpressionStatement	c3 -> fPrint ( stdout )	350:25:9050:9068	4920666	7	True				
ANR	4920845	CallExpression	c3 -> fPrint ( stdout )		4920666	0					
ANR	4920846	Callee	c3 -> fPrint		4920666	0					
ANR	4920847	PtrMemberAccess	c3 -> fPrint		4920666	0					
ANR	4920848	Identifier	c3		4920666	0					
ANR	4920849	Identifier	fPrint		4920666	1					
ANR	4920850	ArgumentList	stdout		4920666	1					
ANR	4920851	Argument	stdout		4920666	0					
ANR	4920852	Identifier	stdout		4920666	0					
ANR	4920853	ExpressionStatement	"printf ( ""\\n"" )"	350:45:9070:9082	4920666	8	True				
ANR	4920854	CallExpression	"printf ( ""\\n"" )"		4920666	0					
ANR	4920855	Callee	printf		4920666	0					
ANR	4920856	Identifier	printf		4920666	0					
ANR	4920857	ArgumentList	"""\\n"""		4920666	1					
ANR	4920858	Argument	"""\\n"""		4920666	0					
ANR	4920859	PrimaryExpression	"""\\n"""		4920666	0					
ANR	4920860	ExpressionStatement	"c1FP = fopen ( ""c1FP.txt"" , ""w+"" )"	355:4:9232:9262	4920666	23	True				
ANR	4920861	AssignmentExpression	"c1FP = fopen ( ""c1FP.txt"" , ""w+"" )"		4920666	0		=			
ANR	4920862	Identifier	c1FP		4920666	0					
ANR	4920863	CallExpression	"fopen ( ""c1FP.txt"" , ""w+"" )"		4920666	1					
ANR	4920864	Callee	fopen		4920666	0					
ANR	4920865	Identifier	fopen		4920666	0					
ANR	4920866	ArgumentList	"""c1FP.txt"""		4920666	1					
ANR	4920867	Argument	"""c1FP.txt"""		4920666	0					
ANR	4920868	PrimaryExpression	"""c1FP.txt"""		4920666	0					
ANR	4920869	Argument	"""w+"""		4920666	1					
ANR	4920870	PrimaryExpression	"""w+"""		4920666	0					
ANR	4920871	ExpressionStatement	"c2FP = fopen ( ""c2FP.txt"" , ""w+"" )"	356:4:9268:9298	4920666	24	True				
ANR	4920872	AssignmentExpression	"c2FP = fopen ( ""c2FP.txt"" , ""w+"" )"		4920666	0		=			
ANR	4920873	Identifier	c2FP		4920666	0					
ANR	4920874	CallExpression	"fopen ( ""c2FP.txt"" , ""w+"" )"		4920666	1					
ANR	4920875	Callee	fopen		4920666	0					
ANR	4920876	Identifier	fopen		4920666	0					
ANR	4920877	ArgumentList	"""c2FP.txt"""		4920666	1					
ANR	4920878	Argument	"""c2FP.txt"""		4920666	0					
ANR	4920879	PrimaryExpression	"""c2FP.txt"""		4920666	0					
ANR	4920880	Argument	"""w+"""		4920666	1					
ANR	4920881	PrimaryExpression	"""w+"""		4920666	0					
ANR	4920882	ExpressionStatement	"c3FP = fopen ( ""c3FP.txt"" , ""w+"" )"	357:4:9304:9334	4920666	25	True				
ANR	4920883	AssignmentExpression	"c3FP = fopen ( ""c3FP.txt"" , ""w+"" )"		4920666	0		=			
ANR	4920884	Identifier	c3FP		4920666	0					
ANR	4920885	CallExpression	"fopen ( ""c3FP.txt"" , ""w+"" )"		4920666	1					
ANR	4920886	Callee	fopen		4920666	0					
ANR	4920887	Identifier	fopen		4920666	0					
ANR	4920888	ArgumentList	"""c3FP.txt"""		4920666	1					
ANR	4920889	Argument	"""c3FP.txt"""		4920666	0					
ANR	4920890	PrimaryExpression	"""c3FP.txt"""		4920666	0					
ANR	4920891	Argument	"""w+"""		4920666	1					
ANR	4920892	PrimaryExpression	"""w+"""		4920666	0					
ANR	4920893	ExpressionStatement	c1 -> fPrint ( c1FP )	359:4:9341:9357	4920666	26	True				
ANR	4920894	CallExpression	c1 -> fPrint ( c1FP )		4920666	0					
ANR	4920895	Callee	c1 -> fPrint		4920666	0					
ANR	4920896	PtrMemberAccess	c1 -> fPrint		4920666	0					
ANR	4920897	Identifier	c1		4920666	0					
ANR	4920898	Identifier	fPrint		4920666	1					
ANR	4920899	ArgumentList	c1FP		4920666	1					
ANR	4920900	Argument	c1FP		4920666	0					
ANR	4920901	Identifier	c1FP		4920666	0					
ANR	4920902	ExpressionStatement	c2 -> fPrint ( c2FP )	360:4:9363:9379	4920666	27	True				
ANR	4920903	CallExpression	c2 -> fPrint ( c2FP )		4920666	0					
ANR	4920904	Callee	c2 -> fPrint		4920666	0					
ANR	4920905	PtrMemberAccess	c2 -> fPrint		4920666	0					
ANR	4920906	Identifier	c2		4920666	0					
ANR	4920907	Identifier	fPrint		4920666	1					
ANR	4920908	ArgumentList	c2FP		4920666	1					
ANR	4920909	Argument	c2FP		4920666	0					
ANR	4920910	Identifier	c2FP		4920666	0					
ANR	4920911	ExpressionStatement	c3 -> fPrint ( c3FP )	361:4:9385:9401	4920666	28	True				
ANR	4920912	CallExpression	c3 -> fPrint ( c3FP )		4920666	0					
ANR	4920913	Callee	c3 -> fPrint		4920666	0					
ANR	4920914	PtrMemberAccess	c3 -> fPrint		4920666	0					
ANR	4920915	Identifier	c3		4920666	0					
ANR	4920916	Identifier	fPrint		4920666	1					
ANR	4920917	ArgumentList	c3FP		4920666	1					
ANR	4920918	Argument	c3FP		4920666	0					
ANR	4920919	Identifier	c3FP		4920666	0					
ANR	4920920	ExpressionStatement	fclose ( c1FP )	363:4:9408:9420	4920666	29	True				
ANR	4920921	CallExpression	fclose ( c1FP )		4920666	0					
ANR	4920922	Callee	fclose		4920666	0					
ANR	4920923	Identifier	fclose		4920666	0					
ANR	4920924	ArgumentList	c1FP		4920666	1					
ANR	4920925	Argument	c1FP		4920666	0					
ANR	4920926	Identifier	c1FP		4920666	0					
ANR	4920927	ExpressionStatement	fclose ( c2FP )	363:18:9422:9434	4920666	30	True				
ANR	4920928	CallExpression	fclose ( c2FP )		4920666	0					
ANR	4920929	Callee	fclose		4920666	0					
ANR	4920930	Identifier	fclose		4920666	0					
ANR	4920931	ArgumentList	c2FP		4920666	1					
ANR	4920932	Argument	c2FP		4920666	0					
ANR	4920933	Identifier	c2FP		4920666	0					
ANR	4920934	ExpressionStatement	fclose ( c3FP )	363:32:9436:9448	4920666	31	True				
ANR	4920935	CallExpression	fclose ( c3FP )		4920666	0					
ANR	4920936	Callee	fclose		4920666	0					
ANR	4920937	Identifier	fclose		4920666	0					
ANR	4920938	ArgumentList	c3FP		4920666	1					
ANR	4920939	Argument	c3FP		4920666	0					
ANR	4920940	Identifier	c3FP		4920666	0					
ANR	4920941	ReturnType	void		4920666	1					
ANR	4920942	Identifier	setUpClassAds		4920666	2					
ANR	4920943	ParameterList	"ClassAd * c1 , ClassAd * c2 , ClassAd * c3 , FILE * c1FP , FILE * c2FP , FILE * c3FP , bool verbose"		4920666	3					
ANR	4920944	Parameter	ClassAd * c1	326:19:8307:8317	4920666	0	True				
ANR	4920945	ParameterType	ClassAd *		4920666	0					
ANR	4920946	Identifier	c1		4920666	1					
ANR	4920947	Parameter	ClassAd * c2	326:32:8320:8330	4920666	1	True				
ANR	4920948	ParameterType	ClassAd *		4920666	0					
ANR	4920949	Identifier	c2		4920666	1					
ANR	4920950	Parameter	ClassAd * c3	326:45:8333:8343	4920666	2	True				
ANR	4920951	ParameterType	ClassAd *		4920666	0					
ANR	4920952	Identifier	c3		4920666	1					
ANR	4920953	Parameter	FILE * c1FP	326:58:8346:8355	4920666	3	True				
ANR	4920954	ParameterType	FILE *		4920666	0					
ANR	4920955	Identifier	c1FP		4920666	1					
ANR	4920956	Parameter	FILE * c2FP	327:20:8378:8387	4920666	4	True				
ANR	4920957	ParameterType	FILE *		4920666	0					
ANR	4920958	Identifier	c2FP		4920666	1					
ANR	4920959	Parameter	FILE * c3FP	327:32:8390:8399	4920666	5	True				
ANR	4920960	ParameterType	FILE *		4920666	0					
ANR	4920961	Identifier	c3FP		4920666	1					
ANR	4920962	Parameter	bool verbose	327:44:8402:8413	4920666	6	True				
ANR	4920963	ParameterType	bool		4920666	0					
ANR	4920964	Identifier	verbose		4920666	1					
ANR	4920965	CFGEntryNode	ENTRY		4920666		True				
ANR	4920966	CFGExitNode	EXIT		4920666		True				
ANR	4920967	Symbol	c3		4920666						
ANR	4920968	Symbol	* classad_strings		4920666						
ANR	4920969	Symbol	classad_strings		4920666						
ANR	4920970	Symbol	fopen		4920666						
ANR	4920971	Symbol	NULL		4920666						
ANR	4920972	Symbol	c2FP		4920666						
ANR	4920973	Symbol	stdout		4920666						
ANR	4920974	Symbol	c1FP		4920666						
ANR	4920975	Symbol	c3FP		4920666						
ANR	4920976	Symbol	c1		4920666						
ANR	4920977	Symbol	c2		4920666						
ANR	4920978	Symbol	verbose		4920666						
ANR	4920979	Function	setUpCompatClassAds	368:0:9485:10482							
ANR	4920980	FunctionDef	"setUpCompatClassAds (compat_classad :: ClassAd * * compC1 , compat_classad :: ClassAd * * compC2 , compat_classad :: ClassAd * * compC3 , FILE * c1FP , FILE * c2FP , FILE * c3FP , bool verbose)"		4920979	0					
ANR	4920981	CompoundStatement		371:0:9677:10482	4920979	0					
ANR	4920982	ExpressionStatement	"c1FP = fopen ( ""c1FP.txt"" , ""r+"" )"	372:4:9683:9713	4920979	0	True				
ANR	4920983	AssignmentExpression	"c1FP = fopen ( ""c1FP.txt"" , ""r+"" )"		4920979	0		=			
ANR	4920984	Identifier	c1FP		4920979	0					
ANR	4920985	CallExpression	"fopen ( ""c1FP.txt"" , ""r+"" )"		4920979	1					
ANR	4920986	Callee	fopen		4920979	0					
ANR	4920987	Identifier	fopen		4920979	0					
ANR	4920988	ArgumentList	"""c1FP.txt"""		4920979	1					
ANR	4920989	Argument	"""c1FP.txt"""		4920979	0					
ANR	4920990	PrimaryExpression	"""c1FP.txt"""		4920979	0					
ANR	4920991	Argument	"""r+"""		4920979	1					
ANR	4920992	PrimaryExpression	"""r+"""		4920979	0					
ANR	4920993	ExpressionStatement	"c2FP = fopen ( ""c2FP.txt"" , ""r+"" )"	373:4:9719:9749	4920979	1	True				
ANR	4920994	AssignmentExpression	"c2FP = fopen ( ""c2FP.txt"" , ""r+"" )"		4920979	0		=			
ANR	4920995	Identifier	c2FP		4920979	0					
ANR	4920996	CallExpression	"fopen ( ""c2FP.txt"" , ""r+"" )"		4920979	1					
ANR	4920997	Callee	fopen		4920979	0					
ANR	4920998	Identifier	fopen		4920979	0					
ANR	4920999	ArgumentList	"""c2FP.txt"""		4920979	1					
ANR	4921000	Argument	"""c2FP.txt"""		4920979	0					
ANR	4921001	PrimaryExpression	"""c2FP.txt"""		4920979	0					
ANR	4921002	Argument	"""r+"""		4920979	1					
ANR	4921003	PrimaryExpression	"""r+"""		4920979	0					
ANR	4921004	ExpressionStatement	"c3FP = fopen ( ""c3FP.txt"" , ""r+"" )"	374:4:9755:9785	4920979	2	True				
ANR	4921005	AssignmentExpression	"c3FP = fopen ( ""c3FP.txt"" , ""r+"" )"		4920979	0		=			
ANR	4921006	Identifier	c3FP		4920979	0					
ANR	4921007	CallExpression	"fopen ( ""c3FP.txt"" , ""r+"" )"		4920979	1					
ANR	4921008	Callee	fopen		4920979	0					
ANR	4921009	Identifier	fopen		4920979	0					
ANR	4921010	ArgumentList	"""c3FP.txt"""		4920979	1					
ANR	4921011	Argument	"""c3FP.txt"""		4920979	0					
ANR	4921012	PrimaryExpression	"""c3FP.txt"""		4920979	0					
ANR	4921013	Argument	"""r+"""		4920979	1					
ANR	4921014	PrimaryExpression	"""r+"""		4920979	0					
ANR	4921015	IfStatement	if ( verbose )		4920979	3					
ANR	4921016	Condition	verbose	376:7:9795:9801	4920979	0	True				
ANR	4921017	Identifier	verbose		4920979	0					
ANR	4921018	ExpressionStatement	"printf ( ""creating compatclassads\\n"" )"	377:8:9812:9847	4920979	1	True				
ANR	4921019	CallExpression	"printf ( ""creating compatclassads\\n"" )"		4920979	0					
ANR	4921020	Callee	printf		4920979	0					
ANR	4921021	Identifier	printf		4920979	0					
ANR	4921022	ArgumentList	"""creating compatclassads\\n"""		4920979	1					
ANR	4921023	Argument	"""creating compatclassads\\n"""		4920979	0					
ANR	4921024	PrimaryExpression	"""creating compatclassads\\n"""		4920979	0					
ANR	4921025	IdentifierDeclStatement	"int eofCheck , errorCheck , emptyCheck ;"	379:4:9854:9890	4920979	4	True				
ANR	4921026	IdentifierDecl	eofCheck		4920979	0					
ANR	4921027	IdentifierDeclType	int		4920979	0					
ANR	4921028	Identifier	eofCheck		4920979	1					
ANR	4921029	IdentifierDecl	errorCheck		4920979	1					
ANR	4921030	IdentifierDeclType	int		4920979	0					
ANR	4921031	Identifier	errorCheck		4920979	1					
ANR	4921032	IdentifierDecl	emptyCheck		4920979	2					
ANR	4921033	IdentifierDeclType	int		4920979	0					
ANR	4921034	Identifier	emptyCheck		4920979	1					
ANR	4921035	ExpressionStatement	"( * compC1 ) = new compat_classad :: ClassAd ( c1FP , "","" , eofCheck , errorCheck , emptyCheck )"	380:4:9897:9981	4920979	5	True				
ANR	4921036	AssignmentExpression	"( * compC1 ) = new compat_classad :: ClassAd ( c1FP , "","" , eofCheck , errorCheck , emptyCheck )"		4920979	0		=			
ANR	4921037	UnaryOperationExpression	* compC1		4920979	0					
ANR	4921038	UnaryOperator	*		4920979	0					
ANR	4921039	Identifier	compC1		4920979	1					
ANR	4921040	Expression	"c1FP , "","" , eofCheck , errorCheck , emptyCheck"		4920979	1					
ANR	4921041	Identifier	c1FP		4920979	0					
ANR	4921042	Expression	""","" , eofCheck , errorCheck , emptyCheck"		4920979	1					
ANR	4921043	PrimaryExpression	""","""		4920979	0					
ANR	4921044	Expression	"eofCheck , errorCheck , emptyCheck"		4920979	1					
ANR	4921045	Identifier	eofCheck		4920979	0					
ANR	4921046	Expression	"errorCheck , emptyCheck"		4920979	1					
ANR	4921047	Identifier	errorCheck		4920979	0					
ANR	4921048	Identifier	emptyCheck		4920979	1					
ANR	4921049	ExpressionStatement	"( * compC2 ) = new compat_classad :: ClassAd ( c2FP , "","" , eofCheck , errorCheck , emptyCheck )"	381:4:9988:10071	4920979	6	True				
ANR	4921050	AssignmentExpression	"( * compC2 ) = new compat_classad :: ClassAd ( c2FP , "","" , eofCheck , errorCheck , emptyCheck )"		4920979	0		=			
ANR	4921051	UnaryOperationExpression	* compC2		4920979	0					
ANR	4921052	UnaryOperator	*		4920979	0					
ANR	4921053	Identifier	compC2		4920979	1					
ANR	4921054	Expression	"c2FP , "","" , eofCheck , errorCheck , emptyCheck"		4920979	1					
ANR	4921055	Identifier	c2FP		4920979	0					
ANR	4921056	Expression	""","" , eofCheck , errorCheck , emptyCheck"		4920979	1					
ANR	4921057	PrimaryExpression	""","""		4920979	0					
ANR	4921058	Expression	"eofCheck , errorCheck , emptyCheck"		4920979	1					
ANR	4921059	Identifier	eofCheck		4920979	0					
ANR	4921060	Expression	"errorCheck , emptyCheck"		4920979	1					
ANR	4921061	Identifier	errorCheck		4920979	0					
ANR	4921062	Identifier	emptyCheck		4920979	1					
ANR	4921063	ExpressionStatement	"( * compC3 ) = new compat_classad :: ClassAd ( c3FP , "","" , eofCheck , errorCheck , emptyCheck )"	382:4:10078:10162	4920979	7	True				
ANR	4921064	AssignmentExpression	"( * compC3 ) = new compat_classad :: ClassAd ( c3FP , "","" , eofCheck , errorCheck , emptyCheck )"		4920979	0		=			
ANR	4921065	UnaryOperationExpression	* compC3		4920979	0					
ANR	4921066	UnaryOperator	*		4920979	0					
ANR	4921067	Identifier	compC3		4920979	1					
ANR	4921068	Expression	"c3FP , "","" , eofCheck , errorCheck , emptyCheck"		4920979	1					
ANR	4921069	Identifier	c3FP		4920979	0					
ANR	4921070	Expression	""","" , eofCheck , errorCheck , emptyCheck"		4920979	1					
ANR	4921071	PrimaryExpression	""","""		4920979	0					
ANR	4921072	Expression	"eofCheck , errorCheck , emptyCheck"		4920979	1					
ANR	4921073	Identifier	eofCheck		4920979	0					
ANR	4921074	Expression	"errorCheck , emptyCheck"		4920979	1					
ANR	4921075	Identifier	errorCheck		4920979	0					
ANR	4921076	Identifier	emptyCheck		4920979	1					
ANR	4921077	ExpressionStatement	fclose ( c1FP )	383:4:10169:10181	4920979	8	True				
ANR	4921078	CallExpression	fclose ( c1FP )		4920979	0					
ANR	4921079	Callee	fclose		4920979	0					
ANR	4921080	Identifier	fclose		4920979	0					
ANR	4921081	ArgumentList	c1FP		4920979	1					
ANR	4921082	Argument	c1FP		4920979	0					
ANR	4921083	Identifier	c1FP		4920979	0					
ANR	4921084	ExpressionStatement	fclose ( c2FP )	383:18:10183:10195	4920979	9	True				
ANR	4921085	CallExpression	fclose ( c2FP )		4920979	0					
ANR	4921086	Callee	fclose		4920979	0					
ANR	4921087	Identifier	fclose		4920979	0					
ANR	4921088	ArgumentList	c2FP		4920979	1					
ANR	4921089	Argument	c2FP		4920979	0					
ANR	4921090	Identifier	c2FP		4920979	0					
ANR	4921091	ExpressionStatement	fclose ( c3FP )	383:32:10197:10209	4920979	10	True				
ANR	4921092	CallExpression	fclose ( c3FP )		4920979	0					
ANR	4921093	Callee	fclose		4920979	0					
ANR	4921094	Identifier	fclose		4920979	0					
ANR	4921095	ArgumentList	c3FP		4920979	1					
ANR	4921096	Argument	c3FP		4920979	0					
ANR	4921097	Identifier	c3FP		4920979	0					
ANR	4921098	ExpressionStatement	"( * compC1 ) -> SetMyTypeName ( ""compC1"" )"	385:4:10216:10250	4920979	11	True				
ANR	4921099	CallExpression	"( * compC1 ) -> SetMyTypeName ( ""compC1"" )"		4920979	0					
ANR	4921100	Callee	( * compC1 ) -> SetMyTypeName		4920979	0					
ANR	4921101	PtrMemberAccess	( * compC1 ) -> SetMyTypeName		4920979	0					
ANR	4921102	UnaryOperationExpression	* compC1		4920979	0					
ANR	4921103	UnaryOperator	*		4920979	0					
ANR	4921104	Identifier	compC1		4920979	1					
ANR	4921105	Identifier	SetMyTypeName		4920979	1					
ANR	4921106	ArgumentList	"""compC1"""		4920979	1					
ANR	4921107	Argument	"""compC1"""		4920979	0					
ANR	4921108	PrimaryExpression	"""compC1"""		4920979	0					
ANR	4921109	ExpressionStatement	"( * compC2 ) -> SetMyTypeName ( ""compC2"" )"	386:4:10256:10290	4920979	12	True				
ANR	4921110	CallExpression	"( * compC2 ) -> SetMyTypeName ( ""compC2"" )"		4920979	0					
ANR	4921111	Callee	( * compC2 ) -> SetMyTypeName		4920979	0					
ANR	4921112	PtrMemberAccess	( * compC2 ) -> SetMyTypeName		4920979	0					
ANR	4921113	UnaryOperationExpression	* compC2		4920979	0					
ANR	4921114	UnaryOperator	*		4920979	0					
ANR	4921115	Identifier	compC2		4920979	1					
ANR	4921116	Identifier	SetMyTypeName		4920979	1					
ANR	4921117	ArgumentList	"""compC2"""		4920979	1					
ANR	4921118	Argument	"""compC2"""		4920979	0					
ANR	4921119	PrimaryExpression	"""compC2"""		4920979	0					
ANR	4921120	ExpressionStatement	"( * compC3 ) -> SetMyTypeName ( ""compC3"" )"	387:4:10296:10330	4920979	13	True				
ANR	4921121	CallExpression	"( * compC3 ) -> SetMyTypeName ( ""compC3"" )"		4920979	0					
ANR	4921122	Callee	( * compC3 ) -> SetMyTypeName		4920979	0					
ANR	4921123	PtrMemberAccess	( * compC3 ) -> SetMyTypeName		4920979	0					
ANR	4921124	UnaryOperationExpression	* compC3		4920979	0					
ANR	4921125	UnaryOperator	*		4920979	0					
ANR	4921126	Identifier	compC3		4920979	1					
ANR	4921127	Identifier	SetMyTypeName		4920979	1					
ANR	4921128	ArgumentList	"""compC3"""		4920979	1					
ANR	4921129	Argument	"""compC3"""		4920979	0					
ANR	4921130	PrimaryExpression	"""compC3"""		4920979	0					
ANR	4921131	ExpressionStatement	"( * compC1 ) -> SetTargetTypeName ( ""not compC1!"" )"	389:4:10337:10380	4920979	14	True				
ANR	4921132	CallExpression	"( * compC1 ) -> SetTargetTypeName ( ""not compC1!"" )"		4920979	0					
ANR	4921133	Callee	( * compC1 ) -> SetTargetTypeName		4920979	0					
ANR	4921134	PtrMemberAccess	( * compC1 ) -> SetTargetTypeName		4920979	0					
ANR	4921135	UnaryOperationExpression	* compC1		4920979	0					
ANR	4921136	UnaryOperator	*		4920979	0					
ANR	4921137	Identifier	compC1		4920979	1					
ANR	4921138	Identifier	SetTargetTypeName		4920979	1					
ANR	4921139	ArgumentList	"""not compC1!"""		4920979	1					
ANR	4921140	Argument	"""not compC1!"""		4920979	0					
ANR	4921141	PrimaryExpression	"""not compC1!"""		4920979	0					
ANR	4921142	ExpressionStatement	"( * compC2 ) -> SetTargetTypeName ( ""not compC2!"" )"	390:4:10386:10429	4920979	15	True				
ANR	4921143	CallExpression	"( * compC2 ) -> SetTargetTypeName ( ""not compC2!"" )"		4920979	0					
ANR	4921144	Callee	( * compC2 ) -> SetTargetTypeName		4920979	0					
ANR	4921145	PtrMemberAccess	( * compC2 ) -> SetTargetTypeName		4920979	0					
ANR	4921146	UnaryOperationExpression	* compC2		4920979	0					
ANR	4921147	UnaryOperator	*		4920979	0					
ANR	4921148	Identifier	compC2		4920979	1					
ANR	4921149	Identifier	SetTargetTypeName		4920979	1					
ANR	4921150	ArgumentList	"""not compC2!"""		4920979	1					
ANR	4921151	Argument	"""not compC2!"""		4920979	0					
ANR	4921152	PrimaryExpression	"""not compC2!"""		4920979	0					
ANR	4921153	ExpressionStatement	"( * compC3 ) -> SetTargetTypeName ( ""not compC3!"" )"	391:4:10435:10478	4920979	16	True				
ANR	4921154	CallExpression	"( * compC3 ) -> SetTargetTypeName ( ""not compC3!"" )"		4920979	0					
ANR	4921155	Callee	( * compC3 ) -> SetTargetTypeName		4920979	0					
ANR	4921156	PtrMemberAccess	( * compC3 ) -> SetTargetTypeName		4920979	0					
ANR	4921157	UnaryOperationExpression	* compC3		4920979	0					
ANR	4921158	UnaryOperator	*		4920979	0					
ANR	4921159	Identifier	compC3		4920979	1					
ANR	4921160	Identifier	SetTargetTypeName		4920979	1					
ANR	4921161	ArgumentList	"""not compC3!"""		4920979	1					
ANR	4921162	Argument	"""not compC3!"""		4920979	0					
ANR	4921163	PrimaryExpression	"""not compC3!"""		4920979	0					
ANR	4921164	ReturnType	void		4920979	1					
ANR	4921165	Identifier	setUpCompatClassAds		4920979	2					
ANR	4921166	ParameterList	"compat_classad :: ClassAd * * compC1 , compat_classad :: ClassAd * * compC2 , compat_classad :: ClassAd * * compC3 , FILE * c1FP , FILE * c2FP , FILE * c3FP , bool verbose"		4920979	3					
ANR	4921167	Parameter	compat_classad :: ClassAd * * compC1	368:25:9510:9541	4920979	0	True				
ANR	4921168	ParameterType	compat_classad :: ClassAd * *		4920979	0					
ANR	4921169	Identifier	compC1		4920979	1					
ANR	4921170	Parameter	compat_classad :: ClassAd * * compC2	368:59:9544:9575	4920979	1	True				
ANR	4921171	ParameterType	compat_classad :: ClassAd * *		4920979	0					
ANR	4921172	Identifier	compC2		4920979	1					
ANR	4921173	Parameter	compat_classad :: ClassAd * * compC3	369:7:9585:9616	4920979	2	True				
ANR	4921174	ParameterType	compat_classad :: ClassAd * *		4920979	0					
ANR	4921175	Identifier	compC3		4920979	1					
ANR	4921176	Parameter	FILE * c1FP	369:41:9619:9628	4920979	3	True				
ANR	4921177	ParameterType	FILE *		4920979	0					
ANR	4921178	Identifier	c1FP		4920979	1					
ANR	4921179	Parameter	FILE * c2FP	369:53:9631:9640	4920979	4	True				
ANR	4921180	ParameterType	FILE *		4920979	0					
ANR	4921181	Identifier	c2FP		4920979	1					
ANR	4921182	Parameter	FILE * c3FP	369:65:9643:9652	4920979	5	True				
ANR	4921183	ParameterType	FILE *		4920979	0					
ANR	4921184	Identifier	c3FP		4920979	1					
ANR	4921185	Parameter	bool verbose	370:8:9663:9674	4920979	6	True				
ANR	4921186	ParameterType	bool		4920979	0					
ANR	4921187	Identifier	verbose		4920979	1					
ANR	4921188	CFGEntryNode	ENTRY		4920979		True				
ANR	4921189	CFGExitNode	EXIT		4920979		True				
ANR	4921190	Symbol	compC3		4920979						
ANR	4921191	Symbol	compC2		4920979						
ANR	4921192	Symbol	fopen		4920979						
ANR	4921193	Symbol	compC1		4920979						
ANR	4921194	Symbol	* compC3		4920979						
ANR	4921195	Symbol	* compC2		4920979						
ANR	4921196	Symbol	* compC1		4920979						
ANR	4921197	Symbol	verbose		4920979						
ANR	4921198	Symbol	c2FP		4920979						
ANR	4921199	Symbol	c1FP		4920979						
ANR	4921200	Symbol	eofCheck		4920979						
ANR	4921201	Symbol	emptyCheck		4920979						
ANR	4921202	Symbol	errorCheck		4920979						
ANR	4921203	Symbol	c3FP		4920979						
ANR	4921204	Function	test_put_server_time	398:0:10518:12004							
ANR	4921205	FunctionDef	test_put_server_time (bool verbose)		4921204	0					
ANR	4921206	CompoundStatement		399:0:10558:12004	4921204	0					
ANR	4921207	IdentifierDeclStatement	DummyStream ds ;	400:4:10564:10578	4921204	0	True				
ANR	4921208	IdentifierDecl	ds		4921204	0					
ANR	4921209	IdentifierDeclType	DummyStream		4921204	0					
ANR	4921210	Identifier	ds		4921204	1					
ANR	4921211	IdentifierDeclStatement	bool failed = false ;	402:4:10585:10604	4921204	1	True				
ANR	4921212	IdentifierDecl	failed = false		4921204	0					
ANR	4921213	IdentifierDeclType	bool		4921204	0					
ANR	4921214	Identifier	failed		4921204	1					
ANR	4921215	AssignmentExpression	failed = false		4921204	2		=			
ANR	4921216	Identifier	false		4921204	0					
ANR	4921217	Identifier	false		4921204	1					
ANR	4921218	IdentifierDeclStatement	"ClassAd * c1 , * c2 , * c3 ;"	403:4:10611:10632	4921204	2	True				
ANR	4921219	IdentifierDecl	* c1		4921204	0					
ANR	4921220	IdentifierDeclType	ClassAd *		4921204	0					
ANR	4921221	Identifier	c1		4921204	1					
ANR	4921222	IdentifierDecl	* c2		4921204	1					
ANR	4921223	IdentifierDeclType	ClassAd *		4921204	0					
ANR	4921224	Identifier	c2		4921204	1					
ANR	4921225	IdentifierDecl	* c3		4921204	2					
ANR	4921226	IdentifierDeclType	ClassAd *		4921204	0					
ANR	4921227	Identifier	c3		4921204	1					
ANR	4921228	IdentifierDeclStatement	"FILE * c1FP , * c2FP , * c3FP ;"	404:4:10638:10662	4921204	3	True				
ANR	4921229	IdentifierDecl	* c1FP		4921204	0					
ANR	4921230	IdentifierDeclType	FILE *		4921204	0					
ANR	4921231	Identifier	c1FP		4921204	1					
ANR	4921232	IdentifierDecl	* c2FP		4921204	1					
ANR	4921233	IdentifierDeclType	FILE *		4921204	0					
ANR	4921234	Identifier	c2FP		4921204	1					
ANR	4921235	IdentifierDecl	* c3FP		4921204	2					
ANR	4921236	IdentifierDeclType	FILE *		4921204	0					
ANR	4921237	Identifier	c3FP		4921204	1					
ANR	4921238	ExpressionStatement	"setUpClassAds ( c1 , c2 , c3 , c1FP , c2FP , c3FP , verbose )"	406:4:10669:10720	4921204	4	True				
ANR	4921239	CallExpression	"setUpClassAds ( c1 , c2 , c3 , c1FP , c2FP , c3FP , verbose )"		4921204	0					
ANR	4921240	Callee	setUpClassAds		4921204	0					
ANR	4921241	Identifier	setUpClassAds		4921204	0					
ANR	4921242	ArgumentList	c1		4921204	1					
ANR	4921243	Argument	c1		4921204	0					
ANR	4921244	Identifier	c1		4921204	0					
ANR	4921245	Argument	c2		4921204	1					
ANR	4921246	Identifier	c2		4921204	0					
ANR	4921247	Argument	c3		4921204	2					
ANR	4921248	Identifier	c3		4921204	0					
ANR	4921249	Argument	c1FP		4921204	3					
ANR	4921250	Identifier	c1FP		4921204	0					
ANR	4921251	Argument	c2FP		4921204	4					
ANR	4921252	Identifier	c2FP		4921204	0					
ANR	4921253	Argument	c3FP		4921204	5					
ANR	4921254	Identifier	c3FP		4921204	0					
ANR	4921255	Argument	verbose		4921204	6					
ANR	4921256	Identifier	verbose		4921204	0					
ANR	4921257	IdentifierDeclStatement	"compat_classad :: ClassAd * compC1 , * compC2 , * compC3 ;"	408:1:10724:10773	4921204	5	True				
ANR	4921258	IdentifierDecl	* compC1		4921204	0					
ANR	4921259	IdentifierDeclType	compat_classad :: ClassAd *		4921204	0					
ANR	4921260	Identifier	compC1		4921204	1					
ANR	4921261	IdentifierDecl	* compC2		4921204	1					
ANR	4921262	IdentifierDeclType	compat_classad :: ClassAd *		4921204	0					
ANR	4921263	Identifier	compC2		4921204	1					
ANR	4921264	IdentifierDecl	* compC3		4921204	2					
ANR	4921265	IdentifierDeclType	compat_classad :: ClassAd *		4921204	0					
ANR	4921266	Identifier	compC3		4921204	1					
ANR	4921267	ExpressionStatement	"setUpCompatClassAds ( & compC1 , & compC2 , & compC3 , c1FP , c2FP , c3FP , verbose )"	410:4:10780:10852	4921204	6	True				
ANR	4921268	CallExpression	"setUpCompatClassAds ( & compC1 , & compC2 , & compC3 , c1FP , c2FP , c3FP , verbose )"		4921204	0					
ANR	4921269	Callee	setUpCompatClassAds		4921204	0					
ANR	4921270	Identifier	setUpCompatClassAds		4921204	0					
ANR	4921271	ArgumentList	& compC1		4921204	1					
ANR	4921272	Argument	& compC1		4921204	0					
ANR	4921273	UnaryOperationExpression	& compC1		4921204	0					
ANR	4921274	UnaryOperator	&		4921204	0					
ANR	4921275	Identifier	compC1		4921204	1					
ANR	4921276	Argument	& compC2		4921204	1					
ANR	4921277	UnaryOperationExpression	& compC2		4921204	0					
ANR	4921278	UnaryOperator	&		4921204	0					
ANR	4921279	Identifier	compC2		4921204	1					
ANR	4921280	Argument	& compC3		4921204	2					
ANR	4921281	UnaryOperationExpression	& compC3		4921204	0					
ANR	4921282	UnaryOperator	&		4921204	0					
ANR	4921283	Identifier	compC3		4921204	1					
ANR	4921284	Argument	c1FP		4921204	3					
ANR	4921285	Identifier	c1FP		4921204	0					
ANR	4921286	Argument	c2FP		4921204	4					
ANR	4921287	Identifier	c2FP		4921204	0					
ANR	4921288	Argument	c3FP		4921204	5					
ANR	4921289	Identifier	c3FP		4921204	0					
ANR	4921290	Argument	verbose		4921204	6					
ANR	4921291	Identifier	verbose		4921204	0					
ANR	4921292	IfStatement	if ( verbose )		4921204	7					
ANR	4921293	Condition	verbose	412:7:10862:10868	4921204	0	True				
ANR	4921294	Identifier	verbose		4921204	0					
ANR	4921295	CompoundStatement		15:4:316:316	4921204	1					
ANR	4921296	ExpressionStatement	"printf ( ""Comp1:\\n"" )"	414:8:10885:10903	4921204	0	True				
ANR	4921297	CallExpression	"printf ( ""Comp1:\\n"" )"		4921204	0					
ANR	4921298	Callee	printf		4921204	0					
ANR	4921299	Identifier	printf		4921204	0					
ANR	4921300	ArgumentList	"""Comp1:\\n"""		4921204	1					
ANR	4921301	Argument	"""Comp1:\\n"""		4921204	0					
ANR	4921302	PrimaryExpression	"""Comp1:\\n"""		4921204	0					
ANR	4921303	ExpressionStatement	compC1 -> fPrint ( stdout )	414:28:10905:10927	4921204	1	True				
ANR	4921304	CallExpression	compC1 -> fPrint ( stdout )		4921204	0					
ANR	4921305	Callee	compC1 -> fPrint		4921204	0					
ANR	4921306	PtrMemberAccess	compC1 -> fPrint		4921204	0					
ANR	4921307	Identifier	compC1		4921204	0					
ANR	4921308	Identifier	fPrint		4921204	1					
ANR	4921309	ArgumentList	stdout		4921204	1					
ANR	4921310	Argument	stdout		4921204	0					
ANR	4921311	Identifier	stdout		4921204	0					
ANR	4921312	ExpressionStatement	"printf ( ""\\n"" )"	414:52:10929:10941	4921204	2	True				
ANR	4921313	CallExpression	"printf ( ""\\n"" )"		4921204	0					
ANR	4921314	Callee	printf		4921204	0					
ANR	4921315	Identifier	printf		4921204	0					
ANR	4921316	ArgumentList	"""\\n"""		4921204	1					
ANR	4921317	Argument	"""\\n"""		4921204	0					
ANR	4921318	PrimaryExpression	"""\\n"""		4921204	0					
ANR	4921319	ExpressionStatement	"printf ( ""Comp2:\\n"" )"	415:8:10951:10969	4921204	3	True				
ANR	4921320	CallExpression	"printf ( ""Comp2:\\n"" )"		4921204	0					
ANR	4921321	Callee	printf		4921204	0					
ANR	4921322	Identifier	printf		4921204	0					
ANR	4921323	ArgumentList	"""Comp2:\\n"""		4921204	1					
ANR	4921324	Argument	"""Comp2:\\n"""		4921204	0					
ANR	4921325	PrimaryExpression	"""Comp2:\\n"""		4921204	0					
ANR	4921326	ExpressionStatement	compC2 -> fPrint ( stdout )	415:28:10971:10993	4921204	4	True				
ANR	4921327	CallExpression	compC2 -> fPrint ( stdout )		4921204	0					
ANR	4921328	Callee	compC2 -> fPrint		4921204	0					
ANR	4921329	PtrMemberAccess	compC2 -> fPrint		4921204	0					
ANR	4921330	Identifier	compC2		4921204	0					
ANR	4921331	Identifier	fPrint		4921204	1					
ANR	4921332	ArgumentList	stdout		4921204	1					
ANR	4921333	Argument	stdout		4921204	0					
ANR	4921334	Identifier	stdout		4921204	0					
ANR	4921335	ExpressionStatement	"printf ( ""\\n"" )"	415:52:10995:11007	4921204	5	True				
ANR	4921336	CallExpression	"printf ( ""\\n"" )"		4921204	0					
ANR	4921337	Callee	printf		4921204	0					
ANR	4921338	Identifier	printf		4921204	0					
ANR	4921339	ArgumentList	"""\\n"""		4921204	1					
ANR	4921340	Argument	"""\\n"""		4921204	0					
ANR	4921341	PrimaryExpression	"""\\n"""		4921204	0					
ANR	4921342	ExpressionStatement	"printf ( ""Comp3:\\n"" )"	416:8:11017:11035	4921204	6	True				
ANR	4921343	CallExpression	"printf ( ""Comp3:\\n"" )"		4921204	0					
ANR	4921344	Callee	printf		4921204	0					
ANR	4921345	Identifier	printf		4921204	0					
ANR	4921346	ArgumentList	"""Comp3:\\n"""		4921204	1					
ANR	4921347	Argument	"""Comp3:\\n"""		4921204	0					
ANR	4921348	PrimaryExpression	"""Comp3:\\n"""		4921204	0					
ANR	4921349	ExpressionStatement	compC3 -> fPrint ( stdout )	416:28:11037:11059	4921204	7	True				
ANR	4921350	CallExpression	compC3 -> fPrint ( stdout )		4921204	0					
ANR	4921351	Callee	compC3 -> fPrint		4921204	0					
ANR	4921352	PtrMemberAccess	compC3 -> fPrint		4921204	0					
ANR	4921353	Identifier	compC3		4921204	0					
ANR	4921354	Identifier	fPrint		4921204	1					
ANR	4921355	ArgumentList	stdout		4921204	1					
ANR	4921356	Argument	stdout		4921204	0					
ANR	4921357	Identifier	stdout		4921204	0					
ANR	4921358	ExpressionStatement	"printf ( ""\\n"" )"	416:52:11061:11073	4921204	8	True				
ANR	4921359	CallExpression	"printf ( ""\\n"" )"		4921204	0					
ANR	4921360	Callee	printf		4921204	0					
ANR	4921361	Identifier	printf		4921204	0					
ANR	4921362	ArgumentList	"""\\n"""		4921204	1					
ANR	4921363	Argument	"""\\n"""		4921204	0					
ANR	4921364	PrimaryExpression	"""\\n"""		4921204	0					
ANR	4921365	ExpressionStatement	"printf ( ""----------------\\n\\n"" )"	418:8:11088:11118	4921204	9	True				
ANR	4921366	CallExpression	"printf ( ""----------------\\n\\n"" )"		4921204	0					
ANR	4921367	Callee	printf		4921204	0					
ANR	4921368	Identifier	printf		4921204	0					
ANR	4921369	ArgumentList	"""----------------\\n\\n"""		4921204	1					
ANR	4921370	Argument	"""----------------\\n\\n"""		4921204	0					
ANR	4921371	PrimaryExpression	"""----------------\\n\\n"""		4921204	0					
ANR	4921372	ExpressionStatement	"printf ( ""Trying out excludeTypes = false\\n"" )"	445:4:11724:11767	4921204	8	True				
ANR	4921373	CallExpression	"printf ( ""Trying out excludeTypes = false\\n"" )"		4921204	0					
ANR	4921374	Callee	printf		4921204	0					
ANR	4921375	Identifier	printf		4921204	0					
ANR	4921376	ArgumentList	"""Trying out excludeTypes = false\\n"""		4921204	1					
ANR	4921377	Argument	"""Trying out excludeTypes = false\\n"""		4921204	0					
ANR	4921378	PrimaryExpression	"""Trying out excludeTypes = false\\n"""		4921204	0					
ANR	4921379	ExpressionStatement	"putOldClassAd ( & ds , * compC3 , false )"	446:4:11773:11807	4921204	9	True				
ANR	4921380	CallExpression	"putOldClassAd ( & ds , * compC3 , false )"		4921204	0					
ANR	4921381	Callee	putOldClassAd		4921204	0					
ANR	4921382	Identifier	putOldClassAd		4921204	0					
ANR	4921383	ArgumentList	& ds		4921204	1					
ANR	4921384	Argument	& ds		4921204	0					
ANR	4921385	UnaryOperationExpression	& ds		4921204	0					
ANR	4921386	UnaryOperator	&		4921204	0					
ANR	4921387	Identifier	ds		4921204	1					
ANR	4921388	Argument	* compC3		4921204	1					
ANR	4921389	UnaryOperationExpression	* compC3		4921204	0					
ANR	4921390	UnaryOperator	*		4921204	0					
ANR	4921391	Identifier	compC3		4921204	1					
ANR	4921392	Argument	false		4921204	2					
ANR	4921393	Identifier	false		4921204	0					
ANR	4921394	ExpressionStatement	ds . printContents ( )	447:4:11813:11831	4921204	10	True				
ANR	4921395	CallExpression	ds . printContents ( )		4921204	0					
ANR	4921396	Callee	ds . printContents		4921204	0					
ANR	4921397	MemberAccess	ds . printContents		4921204	0					
ANR	4921398	Identifier	ds		4921204	0					
ANR	4921399	Identifier	printContents		4921204	1					
ANR	4921400	ArgumentList			4921204	1					
ANR	4921401	ExpressionStatement	ds . emptyVec ( )	448:4:11837:11850	4921204	11	True				
ANR	4921402	CallExpression	ds . emptyVec ( )		4921204	0					
ANR	4921403	Callee	ds . emptyVec		4921204	0					
ANR	4921404	MemberAccess	ds . emptyVec		4921204	0					
ANR	4921405	Identifier	ds		4921204	0					
ANR	4921406	Identifier	emptyVec		4921204	1					
ANR	4921407	ArgumentList			4921204	1					
ANR	4921408	ExpressionStatement	"printf ( ""Trying out excludeTypes = true\\n"" )"	450:4:11857:11899	4921204	12	True				
ANR	4921409	CallExpression	"printf ( ""Trying out excludeTypes = true\\n"" )"		4921204	0					
ANR	4921410	Callee	printf		4921204	0					
ANR	4921411	Identifier	printf		4921204	0					
ANR	4921412	ArgumentList	"""Trying out excludeTypes = true\\n"""		4921204	1					
ANR	4921413	Argument	"""Trying out excludeTypes = true\\n"""		4921204	0					
ANR	4921414	PrimaryExpression	"""Trying out excludeTypes = true\\n"""		4921204	0					
ANR	4921415	ExpressionStatement	"putOldClassAd ( & ds , * compC3 , true )"	451:4:11905:11938	4921204	13	True				
ANR	4921416	CallExpression	"putOldClassAd ( & ds , * compC3 , true )"		4921204	0					
ANR	4921417	Callee	putOldClassAd		4921204	0					
ANR	4921418	Identifier	putOldClassAd		4921204	0					
ANR	4921419	ArgumentList	& ds		4921204	1					
ANR	4921420	Argument	& ds		4921204	0					
ANR	4921421	UnaryOperationExpression	& ds		4921204	0					
ANR	4921422	UnaryOperator	&		4921204	0					
ANR	4921423	Identifier	ds		4921204	1					
ANR	4921424	Argument	* compC3		4921204	1					
ANR	4921425	UnaryOperationExpression	* compC3		4921204	0					
ANR	4921426	UnaryOperator	*		4921204	0					
ANR	4921427	Identifier	compC3		4921204	1					
ANR	4921428	Argument	true		4921204	2					
ANR	4921429	Identifier	true		4921204	0					
ANR	4921430	ExpressionStatement	ds . printContents ( )	452:4:11944:11962	4921204	14	True				
ANR	4921431	CallExpression	ds . printContents ( )		4921204	0					
ANR	4921432	Callee	ds . printContents		4921204	0					
ANR	4921433	MemberAccess	ds . printContents		4921204	0					
ANR	4921434	Identifier	ds		4921204	0					
ANR	4921435	Identifier	printContents		4921204	1					
ANR	4921436	ArgumentList			4921204	1					
ANR	4921437	ExpressionStatement	ds . emptyVec ( )	453:4:11968:11981	4921204	15	True				
ANR	4921438	CallExpression	ds . emptyVec ( )		4921204	0					
ANR	4921439	Callee	ds . emptyVec		4921204	0					
ANR	4921440	MemberAccess	ds . emptyVec		4921204	0					
ANR	4921441	Identifier	ds		4921204	0					
ANR	4921442	Identifier	emptyVec		4921204	1					
ANR	4921443	ArgumentList			4921204	1					
ANR	4921444	ReturnStatement	return failed ;	455:4:11988:12001	4921204	16	True				
ANR	4921445	Identifier	failed		4921204	0					
ANR	4921446	ReturnType	bool		4921204	1					
ANR	4921447	Identifier	test_put_server_time		4921204	2					
ANR	4921448	ParameterList	bool verbose		4921204	3					
ANR	4921449	Parameter	bool verbose	398:26:10544:10555	4921204	0	True				
ANR	4921450	ParameterType	bool		4921204	0					
ANR	4921451	Identifier	verbose		4921204	1					
ANR	4921452	CFGEntryNode	ENTRY		4921204		True				
ANR	4921453	CFGExitNode	EXIT		4921204		True				
ANR	4921454	Symbol	compC3		4921204						
ANR	4921455	Symbol	compC2		4921204						
ANR	4921456	Symbol	compC1		4921204						
ANR	4921457	Symbol	* compC3		4921204						
ANR	4921458	Symbol	& compC1		4921204						
ANR	4921459	Symbol	stdout		4921204						
ANR	4921460	Symbol	false		4921204						
ANR	4921461	Symbol	& compC3		4921204						
ANR	4921462	Symbol	failed		4921204						
ANR	4921463	Symbol	& compC2		4921204						
ANR	4921464	Symbol	c1		4921204						
ANR	4921465	Symbol	verbose		4921204						
ANR	4921466	Symbol	ds		4921204						
ANR	4921467	Symbol	c2		4921204						
ANR	4921468	Symbol	c3		4921204						
ANR	4921469	Symbol	c2FP		4921204						
ANR	4921470	Symbol	c1FP		4921204						
ANR	4921471	Symbol	c3FP		4921204						
ANR	4921472	Symbol	& ds		4921204						
ANR	4921473	Symbol	true		4921204						
ANR	4921474	Function	test_put_chained_ads	460:0:12039:13275							
ANR	4921475	FunctionDef	test_put_chained_ads (bool verbose)		4921474	0					
ANR	4921476	CompoundStatement		461:0:12079:13275	4921474	0					
ANR	4921477	IdentifierDeclStatement	DummyStream ds ;	463:4:12086:12100	4921474	0	True				
ANR	4921478	IdentifierDecl	ds		4921474	0					
ANR	4921479	IdentifierDeclType	DummyStream		4921474	0					
ANR	4921480	Identifier	ds		4921474	1					
ANR	4921481	IdentifierDeclStatement	bool failed = false ;	465:4:12107:12126	4921474	1	True				
ANR	4921482	IdentifierDecl	failed = false		4921474	0					
ANR	4921483	IdentifierDeclType	bool		4921474	0					
ANR	4921484	Identifier	failed		4921474	1					
ANR	4921485	AssignmentExpression	failed = false		4921474	2		=			
ANR	4921486	Identifier	false		4921474	0					
ANR	4921487	Identifier	false		4921474	1					
ANR	4921488	IdentifierDeclStatement	"ClassAd * c1 , * c2 , * c3 ;"	467:4:12133:12154	4921474	2	True				
ANR	4921489	IdentifierDecl	* c1		4921474	0					
ANR	4921490	IdentifierDeclType	ClassAd *		4921474	0					
ANR	4921491	Identifier	c1		4921474	1					
ANR	4921492	IdentifierDecl	* c2		4921474	1					
ANR	4921493	IdentifierDeclType	ClassAd *		4921474	0					
ANR	4921494	Identifier	c2		4921474	1					
ANR	4921495	IdentifierDecl	* c3		4921474	2					
ANR	4921496	IdentifierDeclType	ClassAd *		4921474	0					
ANR	4921497	Identifier	c3		4921474	1					
ANR	4921498	IdentifierDeclStatement	"FILE * c1FP , * c2FP , * c3FP ;"	468:4:12160:12184	4921474	3	True				
ANR	4921499	IdentifierDecl	* c1FP		4921474	0					
ANR	4921500	IdentifierDeclType	FILE *		4921474	0					
ANR	4921501	Identifier	c1FP		4921474	1					
ANR	4921502	IdentifierDecl	* c2FP		4921474	1					
ANR	4921503	IdentifierDeclType	FILE *		4921474	0					
ANR	4921504	Identifier	c2FP		4921474	1					
ANR	4921505	IdentifierDecl	* c3FP		4921474	2					
ANR	4921506	IdentifierDeclType	FILE *		4921474	0					
ANR	4921507	Identifier	c3FP		4921474	1					
ANR	4921508	ExpressionStatement	"setUpClassAds ( c1 , c2 , c3 , c1FP , c2FP , c3FP , verbose )"	470:4:12191:12243	4921474	4	True				
ANR	4921509	CallExpression	"setUpClassAds ( c1 , c2 , c3 , c1FP , c2FP , c3FP , verbose )"		4921474	0					
ANR	4921510	Callee	setUpClassAds		4921474	0					
ANR	4921511	Identifier	setUpClassAds		4921474	0					
ANR	4921512	ArgumentList	c1		4921474	1					
ANR	4921513	Argument	c1		4921474	0					
ANR	4921514	Identifier	c1		4921474	0					
ANR	4921515	Argument	c2		4921474	1					
ANR	4921516	Identifier	c2		4921474	0					
ANR	4921517	Argument	c3		4921474	2					
ANR	4921518	Identifier	c3		4921474	0					
ANR	4921519	Argument	c1FP		4921474	3					
ANR	4921520	Identifier	c1FP		4921474	0					
ANR	4921521	Argument	c2FP		4921474	4					
ANR	4921522	Identifier	c2FP		4921474	0					
ANR	4921523	Argument	c3FP		4921474	5					
ANR	4921524	Identifier	c3FP		4921474	0					
ANR	4921525	Argument	verbose		4921474	6					
ANR	4921526	Identifier	verbose		4921474	0					
ANR	4921527	IdentifierDeclStatement	"compat_classad :: ClassAd * compC1 , * compC2 , * compC3 ;"	472:1:12247:12296	4921474	5	True				
ANR	4921528	IdentifierDecl	* compC1		4921474	0					
ANR	4921529	IdentifierDeclType	compat_classad :: ClassAd *		4921474	0					
ANR	4921530	Identifier	compC1		4921474	1					
ANR	4921531	IdentifierDecl	* compC2		4921474	1					
ANR	4921532	IdentifierDeclType	compat_classad :: ClassAd *		4921474	0					
ANR	4921533	Identifier	compC2		4921474	1					
ANR	4921534	IdentifierDecl	* compC3		4921474	2					
ANR	4921535	IdentifierDeclType	compat_classad :: ClassAd *		4921474	0					
ANR	4921536	Identifier	compC3		4921474	1					
ANR	4921537	ExpressionStatement	"setUpCompatClassAds ( & compC1 , & compC2 , & compC3 , c1FP , c2FP , c3FP , verbose )"	474:4:12303:12375	4921474	6	True				
ANR	4921538	CallExpression	"setUpCompatClassAds ( & compC1 , & compC2 , & compC3 , c1FP , c2FP , c3FP , verbose )"		4921474	0					
ANR	4921539	Callee	setUpCompatClassAds		4921474	0					
ANR	4921540	Identifier	setUpCompatClassAds		4921474	0					
ANR	4921541	ArgumentList	& compC1		4921474	1					
ANR	4921542	Argument	& compC1		4921474	0					
ANR	4921543	UnaryOperationExpression	& compC1		4921474	0					
ANR	4921544	UnaryOperator	&		4921474	0					
ANR	4921545	Identifier	compC1		4921474	1					
ANR	4921546	Argument	& compC2		4921474	1					
ANR	4921547	UnaryOperationExpression	& compC2		4921474	0					
ANR	4921548	UnaryOperator	&		4921474	0					
ANR	4921549	Identifier	compC2		4921474	1					
ANR	4921550	Argument	& compC3		4921474	2					
ANR	4921551	UnaryOperationExpression	& compC3		4921474	0					
ANR	4921552	UnaryOperator	&		4921474	0					
ANR	4921553	Identifier	compC3		4921474	1					
ANR	4921554	Argument	c1FP		4921474	3					
ANR	4921555	Identifier	c1FP		4921474	0					
ANR	4921556	Argument	c2FP		4921474	4					
ANR	4921557	Identifier	c2FP		4921474	0					
ANR	4921558	Argument	c3FP		4921474	5					
ANR	4921559	Identifier	c3FP		4921474	0					
ANR	4921560	Argument	verbose		4921474	6					
ANR	4921561	Identifier	verbose		4921474	0					
ANR	4921562	ExpressionStatement	compC1 -> ChainToAd ( compC3 )	476:4:12382:12407	4921474	7	True				
ANR	4921563	CallExpression	compC1 -> ChainToAd ( compC3 )		4921474	0					
ANR	4921564	Callee	compC1 -> ChainToAd		4921474	0					
ANR	4921565	PtrMemberAccess	compC1 -> ChainToAd		4921474	0					
ANR	4921566	Identifier	compC1		4921474	0					
ANR	4921567	Identifier	ChainToAd		4921474	1					
ANR	4921568	ArgumentList	compC3		4921474	1					
ANR	4921569	Argument	compC3		4921474	0					
ANR	4921570	Identifier	compC3		4921474	0					
ANR	4921571	ExpressionStatement	compC3 -> ChainToAd ( compC2 )	477:4:12413:12438	4921474	8	True				
ANR	4921572	CallExpression	compC3 -> ChainToAd ( compC2 )		4921474	0					
ANR	4921573	Callee	compC3 -> ChainToAd		4921474	0					
ANR	4921574	PtrMemberAccess	compC3 -> ChainToAd		4921474	0					
ANR	4921575	Identifier	compC3		4921474	0					
ANR	4921576	Identifier	ChainToAd		4921474	1					
ANR	4921577	ArgumentList	compC2		4921474	1					
ANR	4921578	Argument	compC2		4921474	0					
ANR	4921579	Identifier	compC2		4921474	0					
ANR	4921580	IfStatement	if ( verbose )		4921474	9					
ANR	4921581	Condition	verbose	479:7:12448:12454	4921474	0	True				
ANR	4921582	Identifier	verbose		4921474	0					
ANR	4921583	CompoundStatement		20:4:381:381	4921474	1					
ANR	4921584	ExpressionStatement	"printf ( ""Comp1:\\n"" )"	481:8:12471:12489	4921474	0	True				
ANR	4921585	CallExpression	"printf ( ""Comp1:\\n"" )"		4921474	0					
ANR	4921586	Callee	printf		4921474	0					
ANR	4921587	Identifier	printf		4921474	0					
ANR	4921588	ArgumentList	"""Comp1:\\n"""		4921474	1					
ANR	4921589	Argument	"""Comp1:\\n"""		4921474	0					
ANR	4921590	PrimaryExpression	"""Comp1:\\n"""		4921474	0					
ANR	4921591	ExpressionStatement	compC1 -> fPrint ( stdout )	481:28:12491:12513	4921474	1	True				
ANR	4921592	CallExpression	compC1 -> fPrint ( stdout )		4921474	0					
ANR	4921593	Callee	compC1 -> fPrint		4921474	0					
ANR	4921594	PtrMemberAccess	compC1 -> fPrint		4921474	0					
ANR	4921595	Identifier	compC1		4921474	0					
ANR	4921596	Identifier	fPrint		4921474	1					
ANR	4921597	ArgumentList	stdout		4921474	1					
ANR	4921598	Argument	stdout		4921474	0					
ANR	4921599	Identifier	stdout		4921474	0					
ANR	4921600	ExpressionStatement	"printf ( ""\\n"" )"	481:52:12515:12527	4921474	2	True				
ANR	4921601	CallExpression	"printf ( ""\\n"" )"		4921474	0					
ANR	4921602	Callee	printf		4921474	0					
ANR	4921603	Identifier	printf		4921474	0					
ANR	4921604	ArgumentList	"""\\n"""		4921474	1					
ANR	4921605	Argument	"""\\n"""		4921474	0					
ANR	4921606	PrimaryExpression	"""\\n"""		4921474	0					
ANR	4921607	ExpressionStatement	"printf ( ""Comp2:\\n"" )"	482:8:12537:12555	4921474	3	True				
ANR	4921608	CallExpression	"printf ( ""Comp2:\\n"" )"		4921474	0					
ANR	4921609	Callee	printf		4921474	0					
ANR	4921610	Identifier	printf		4921474	0					
ANR	4921611	ArgumentList	"""Comp2:\\n"""		4921474	1					
ANR	4921612	Argument	"""Comp2:\\n"""		4921474	0					
ANR	4921613	PrimaryExpression	"""Comp2:\\n"""		4921474	0					
ANR	4921614	ExpressionStatement	compC2 -> fPrint ( stdout )	482:28:12557:12579	4921474	4	True				
ANR	4921615	CallExpression	compC2 -> fPrint ( stdout )		4921474	0					
ANR	4921616	Callee	compC2 -> fPrint		4921474	0					
ANR	4921617	PtrMemberAccess	compC2 -> fPrint		4921474	0					
ANR	4921618	Identifier	compC2		4921474	0					
ANR	4921619	Identifier	fPrint		4921474	1					
ANR	4921620	ArgumentList	stdout		4921474	1					
ANR	4921621	Argument	stdout		4921474	0					
ANR	4921622	Identifier	stdout		4921474	0					
ANR	4921623	ExpressionStatement	"printf ( ""\\n"" )"	482:52:12581:12593	4921474	5	True				
ANR	4921624	CallExpression	"printf ( ""\\n"" )"		4921474	0					
ANR	4921625	Callee	printf		4921474	0					
ANR	4921626	Identifier	printf		4921474	0					
ANR	4921627	ArgumentList	"""\\n"""		4921474	1					
ANR	4921628	Argument	"""\\n"""		4921474	0					
ANR	4921629	PrimaryExpression	"""\\n"""		4921474	0					
ANR	4921630	ExpressionStatement	"printf ( ""Comp3:\\n"" )"	483:8:12603:12621	4921474	6	True				
ANR	4921631	CallExpression	"printf ( ""Comp3:\\n"" )"		4921474	0					
ANR	4921632	Callee	printf		4921474	0					
ANR	4921633	Identifier	printf		4921474	0					
ANR	4921634	ArgumentList	"""Comp3:\\n"""		4921474	1					
ANR	4921635	Argument	"""Comp3:\\n"""		4921474	0					
ANR	4921636	PrimaryExpression	"""Comp3:\\n"""		4921474	0					
ANR	4921637	ExpressionStatement	compC3 -> fPrint ( stdout )	483:28:12623:12645	4921474	7	True				
ANR	4921638	CallExpression	compC3 -> fPrint ( stdout )		4921474	0					
ANR	4921639	Callee	compC3 -> fPrint		4921474	0					
ANR	4921640	PtrMemberAccess	compC3 -> fPrint		4921474	0					
ANR	4921641	Identifier	compC3		4921474	0					
ANR	4921642	Identifier	fPrint		4921474	1					
ANR	4921643	ArgumentList	stdout		4921474	1					
ANR	4921644	Argument	stdout		4921474	0					
ANR	4921645	Identifier	stdout		4921474	0					
ANR	4921646	ExpressionStatement	"printf ( ""\\n"" )"	483:52:12647:12659	4921474	8	True				
ANR	4921647	CallExpression	"printf ( ""\\n"" )"		4921474	0					
ANR	4921648	Callee	printf		4921474	0					
ANR	4921649	Identifier	printf		4921474	0					
ANR	4921650	ArgumentList	"""\\n"""		4921474	1					
ANR	4921651	Argument	"""\\n"""		4921474	0					
ANR	4921652	PrimaryExpression	"""\\n"""		4921474	0					
ANR	4921653	ExpressionStatement	"printf ( ""Putting CompClassAd1\\n"" )"	485:8:12670:12702	4921474	9	True				
ANR	4921654	CallExpression	"printf ( ""Putting CompClassAd1\\n"" )"		4921474	0					
ANR	4921655	Callee	printf		4921474	0					
ANR	4921656	Identifier	printf		4921474	0					
ANR	4921657	ArgumentList	"""Putting CompClassAd1\\n"""		4921474	1					
ANR	4921658	Argument	"""Putting CompClassAd1\\n"""		4921474	0					
ANR	4921659	PrimaryExpression	"""Putting CompClassAd1\\n"""		4921474	0					
ANR	4921660	ExpressionStatement	ds . emptyVec ( )	487:4:12714:12727	4921474	10	True				
ANR	4921661	CallExpression	ds . emptyVec ( )		4921474	0					
ANR	4921662	Callee	ds . emptyVec		4921474	0					
ANR	4921663	MemberAccess	ds . emptyVec		4921474	0					
ANR	4921664	Identifier	ds		4921474	0					
ANR	4921665	Identifier	emptyVec		4921474	1					
ANR	4921666	ArgumentList			4921474	1					
ANR	4921667	ExpressionStatement	AttrList_setPublishServerTimeMangled2 ( true )	489:4:12734:12777	4921474	11	True				
ANR	4921668	CallExpression	AttrList_setPublishServerTimeMangled2 ( true )		4921474	0					
ANR	4921669	Callee	AttrList_setPublishServerTimeMangled2		4921474	0					
ANR	4921670	Identifier	AttrList_setPublishServerTimeMangled2		4921474	0					
ANR	4921671	ArgumentList	true		4921474	1					
ANR	4921672	Argument	true		4921474	0					
ANR	4921673	Identifier	true		4921474	0					
ANR	4921674	ExpressionStatement	"putOldClassAd ( & ds , * compC1 , false )"	490:4:12783:12817	4921474	12	True				
ANR	4921675	CallExpression	"putOldClassAd ( & ds , * compC1 , false )"		4921474	0					
ANR	4921676	Callee	putOldClassAd		4921474	0					
ANR	4921677	Identifier	putOldClassAd		4921474	0					
ANR	4921678	ArgumentList	& ds		4921474	1					
ANR	4921679	Argument	& ds		4921474	0					
ANR	4921680	UnaryOperationExpression	& ds		4921474	0					
ANR	4921681	UnaryOperator	&		4921474	0					
ANR	4921682	Identifier	ds		4921474	1					
ANR	4921683	Argument	* compC1		4921474	1					
ANR	4921684	UnaryOperationExpression	* compC1		4921474	0					
ANR	4921685	UnaryOperator	*		4921474	0					
ANR	4921686	Identifier	compC1		4921474	1					
ANR	4921687	Argument	false		4921474	2					
ANR	4921688	Identifier	false		4921474	0					
ANR	4921689	ExpressionStatement	ds . printContents ( )	491:4:12823:12841	4921474	13	True				
ANR	4921690	CallExpression	ds . printContents ( )		4921474	0					
ANR	4921691	Callee	ds . printContents		4921474	0					
ANR	4921692	MemberAccess	ds . printContents		4921474	0					
ANR	4921693	Identifier	ds		4921474	0					
ANR	4921694	Identifier	printContents		4921474	1					
ANR	4921695	ArgumentList			4921474	1					
ANR	4921696	ExpressionStatement	ds . emptyVec ( )	492:4:12847:12860	4921474	14	True				
ANR	4921697	CallExpression	ds . emptyVec ( )		4921474	0					
ANR	4921698	Callee	ds . emptyVec		4921474	0					
ANR	4921699	MemberAccess	ds . emptyVec		4921474	0					
ANR	4921700	Identifier	ds		4921474	0					
ANR	4921701	Identifier	emptyVec		4921474	1					
ANR	4921702	ArgumentList			4921474	1					
ANR	4921703	ExpressionStatement	"printf ( ""\\nPutting CompClassAd2\\n"" )"	494:4:12867:12901	4921474	15	True				
ANR	4921704	CallExpression	"printf ( ""\\nPutting CompClassAd2\\n"" )"		4921474	0					
ANR	4921705	Callee	printf		4921474	0					
ANR	4921706	Identifier	printf		4921474	0					
ANR	4921707	ArgumentList	"""\\nPutting CompClassAd2\\n"""		4921474	1					
ANR	4921708	Argument	"""\\nPutting CompClassAd2\\n"""		4921474	0					
ANR	4921709	PrimaryExpression	"""\\nPutting CompClassAd2\\n"""		4921474	0					
ANR	4921710	ExpressionStatement	AttrList_setPublishServerTimeMangled2 ( false )	495:4:12907:12951	4921474	16	True				
ANR	4921711	CallExpression	AttrList_setPublishServerTimeMangled2 ( false )		4921474	0					
ANR	4921712	Callee	AttrList_setPublishServerTimeMangled2		4921474	0					
ANR	4921713	Identifier	AttrList_setPublishServerTimeMangled2		4921474	0					
ANR	4921714	ArgumentList	false		4921474	1					
ANR	4921715	Argument	false		4921474	0					
ANR	4921716	Identifier	false		4921474	0					
ANR	4921717	ExpressionStatement	"putOldClassAd ( & ds , * compC2 , false )"	496:4:12957:12991	4921474	17	True				
ANR	4921718	CallExpression	"putOldClassAd ( & ds , * compC2 , false )"		4921474	0					
ANR	4921719	Callee	putOldClassAd		4921474	0					
ANR	4921720	Identifier	putOldClassAd		4921474	0					
ANR	4921721	ArgumentList	& ds		4921474	1					
ANR	4921722	Argument	& ds		4921474	0					
ANR	4921723	UnaryOperationExpression	& ds		4921474	0					
ANR	4921724	UnaryOperator	&		4921474	0					
ANR	4921725	Identifier	ds		4921474	1					
ANR	4921726	Argument	* compC2		4921474	1					
ANR	4921727	UnaryOperationExpression	* compC2		4921474	0					
ANR	4921728	UnaryOperator	*		4921474	0					
ANR	4921729	Identifier	compC2		4921474	1					
ANR	4921730	Argument	false		4921474	2					
ANR	4921731	Identifier	false		4921474	0					
ANR	4921732	ExpressionStatement	ds . printContents ( )	497:4:12997:13015	4921474	18	True				
ANR	4921733	CallExpression	ds . printContents ( )		4921474	0					
ANR	4921734	Callee	ds . printContents		4921474	0					
ANR	4921735	MemberAccess	ds . printContents		4921474	0					
ANR	4921736	Identifier	ds		4921474	0					
ANR	4921737	Identifier	printContents		4921474	1					
ANR	4921738	ArgumentList			4921474	1					
ANR	4921739	ExpressionStatement	ds . emptyVec ( )	498:4:13021:13034	4921474	19	True				
ANR	4921740	CallExpression	ds . emptyVec ( )		4921474	0					
ANR	4921741	Callee	ds . emptyVec		4921474	0					
ANR	4921742	MemberAccess	ds . emptyVec		4921474	0					
ANR	4921743	Identifier	ds		4921474	0					
ANR	4921744	Identifier	emptyVec		4921474	1					
ANR	4921745	ArgumentList			4921474	1					
ANR	4921746	ExpressionStatement	"printf ( ""\\nTurning server_time on\\n"" )"	500:4:13041:13077	4921474	20	True				
ANR	4921747	CallExpression	"printf ( ""\\nTurning server_time on\\n"" )"		4921474	0					
ANR	4921748	Callee	printf		4921474	0					
ANR	4921749	Identifier	printf		4921474	0					
ANR	4921750	ArgumentList	"""\\nTurning server_time on\\n"""		4921474	1					
ANR	4921751	Argument	"""\\nTurning server_time on\\n"""		4921474	0					
ANR	4921752	PrimaryExpression	"""\\nTurning server_time on\\n"""		4921474	0					
ANR	4921753	ExpressionStatement	AttrList_setPublishServerTimeMangled2 ( true )	501:4:13083:13126	4921474	21	True				
ANR	4921754	CallExpression	AttrList_setPublishServerTimeMangled2 ( true )		4921474	0					
ANR	4921755	Callee	AttrList_setPublishServerTimeMangled2		4921474	0					
ANR	4921756	Identifier	AttrList_setPublishServerTimeMangled2		4921474	0					
ANR	4921757	ArgumentList	true		4921474	1					
ANR	4921758	Argument	true		4921474	0					
ANR	4921759	Identifier	true		4921474	0					
ANR	4921760	ExpressionStatement	"printf ( ""Putting CompClassAd3\\n"" )"	503:4:13133:13165	4921474	22	True				
ANR	4921761	CallExpression	"printf ( ""Putting CompClassAd3\\n"" )"		4921474	0					
ANR	4921762	Callee	printf		4921474	0					
ANR	4921763	Identifier	printf		4921474	0					
ANR	4921764	ArgumentList	"""Putting CompClassAd3\\n"""		4921474	1					
ANR	4921765	Argument	"""Putting CompClassAd3\\n"""		4921474	0					
ANR	4921766	PrimaryExpression	"""Putting CompClassAd3\\n"""		4921474	0					
ANR	4921767	ExpressionStatement	"putOldClassAd ( & ds , * compC3 , false )"	504:4:13171:13205	4921474	23	True				
ANR	4921768	CallExpression	"putOldClassAd ( & ds , * compC3 , false )"		4921474	0					
ANR	4921769	Callee	putOldClassAd		4921474	0					
ANR	4921770	Identifier	putOldClassAd		4921474	0					
ANR	4921771	ArgumentList	& ds		4921474	1					
ANR	4921772	Argument	& ds		4921474	0					
ANR	4921773	UnaryOperationExpression	& ds		4921474	0					
ANR	4921774	UnaryOperator	&		4921474	0					
ANR	4921775	Identifier	ds		4921474	1					
ANR	4921776	Argument	* compC3		4921474	1					
ANR	4921777	UnaryOperationExpression	* compC3		4921474	0					
ANR	4921778	UnaryOperator	*		4921474	0					
ANR	4921779	Identifier	compC3		4921474	1					
ANR	4921780	Argument	false		4921474	2					
ANR	4921781	Identifier	false		4921474	0					
ANR	4921782	ExpressionStatement	ds . printContents ( )	505:4:13211:13229	4921474	24	True				
ANR	4921783	CallExpression	ds . printContents ( )		4921474	0					
ANR	4921784	Callee	ds . printContents		4921474	0					
ANR	4921785	MemberAccess	ds . printContents		4921474	0					
ANR	4921786	Identifier	ds		4921474	0					
ANR	4921787	Identifier	printContents		4921474	1					
ANR	4921788	ArgumentList			4921474	1					
ANR	4921789	ExpressionStatement	ds . emptyVec ( )	506:4:13235:13248	4921474	25	True				
ANR	4921790	CallExpression	ds . emptyVec ( )		4921474	0					
ANR	4921791	Callee	ds . emptyVec		4921474	0					
ANR	4921792	MemberAccess	ds . emptyVec		4921474	0					
ANR	4921793	Identifier	ds		4921474	0					
ANR	4921794	Identifier	emptyVec		4921474	1					
ANR	4921795	ArgumentList			4921474	1					
ANR	4921796	ReturnStatement	return failed ;	509:4:13260:13273	4921474	26	True				
ANR	4921797	Identifier	failed		4921474	0					
ANR	4921798	ReturnType	bool		4921474	1					
ANR	4921799	Identifier	test_put_chained_ads		4921474	2					
ANR	4921800	ParameterList	bool verbose		4921474	3					
ANR	4921801	Parameter	bool verbose	460:26:12065:12076	4921474	0	True				
ANR	4921802	ParameterType	bool		4921474	0					
ANR	4921803	Identifier	verbose		4921474	1					
ANR	4921804	CFGEntryNode	ENTRY		4921474		True				
ANR	4921805	CFGExitNode	EXIT		4921474		True				
ANR	4921806	Symbol	compC3		4921474						
ANR	4921807	Symbol	compC2		4921474						
ANR	4921808	Symbol	compC1		4921474						
ANR	4921809	Symbol	* compC3		4921474						
ANR	4921810	Symbol	* compC2		4921474						
ANR	4921811	Symbol	& compC1		4921474						
ANR	4921812	Symbol	stdout		4921474						
ANR	4921813	Symbol	* compC1		4921474						
ANR	4921814	Symbol	false		4921474						
ANR	4921815	Symbol	& compC3		4921474						
ANR	4921816	Symbol	failed		4921474						
ANR	4921817	Symbol	& compC2		4921474						
ANR	4921818	Symbol	c1		4921474						
ANR	4921819	Symbol	verbose		4921474						
ANR	4921820	Symbol	ds		4921474						
ANR	4921821	Symbol	c2		4921474						
ANR	4921822	Symbol	c3		4921474						
ANR	4921823	Symbol	c2FP		4921474						
ANR	4921824	Symbol	c1FP		4921474						
ANR	4921825	Symbol	c3FP		4921474						
ANR	4921826	Symbol	true		4921474						
ANR	4921827	Symbol	& ds		4921474						
ANR	4921828	Function	main	513:0:13284:13716							
ANR	4921829	FunctionDef	"main (int argc , char * * argv)"		4921828	0					
ANR	4921830	CompoundStatement		514:0:13316:13716	4921828	0					
ANR	4921831	IdentifierDeclStatement	bool verbose ;	515:4:13322:13334	4921828	0	True				
ANR	4921832	IdentifierDecl	verbose		4921828	0					
ANR	4921833	IdentifierDeclType	bool		4921828	0					
ANR	4921834	Identifier	verbose		4921828	1					
ANR	4921835	IfStatement	"if ( argc > 1 && ! strcmp ( argv [ 1 ] , ""-v"" ) )"		4921828	1					
ANR	4921836	Condition	"argc > 1 && ! strcmp ( argv [ 1 ] , ""-v"" )"	517:7:13344:13377	4921828	0	True				
ANR	4921837	AndExpression	"argc > 1 && ! strcmp ( argv [ 1 ] , ""-v"" )"		4921828	0		&&			
ANR	4921838	RelationalExpression	argc > 1		4921828	0		>			
ANR	4921839	Identifier	argc		4921828	0					
ANR	4921840	PrimaryExpression	1		4921828	1					
ANR	4921841	UnaryOperationExpression	"! strcmp ( argv [ 1 ] , ""-v"" )"		4921828	1					
ANR	4921842	UnaryOperator	!		4921828	0					
ANR	4921843	CallExpression	"strcmp ( argv [ 1 ] , ""-v"" )"		4921828	1					
ANR	4921844	Callee	strcmp		4921828	0					
ANR	4921845	Identifier	strcmp		4921828	0					
ANR	4921846	ArgumentList	argv [ 1 ]		4921828	1					
ANR	4921847	Argument	argv [ 1 ]		4921828	0					
ANR	4921848	ArrayIndexing	argv [ 1 ]		4921828	0					
ANR	4921849	Identifier	argv		4921828	0					
ANR	4921850	PrimaryExpression	1		4921828	1					
ANR	4921851	Argument	"""-v"""		4921828	1					
ANR	4921852	PrimaryExpression	"""-v"""		4921828	0					
ANR	4921853	CompoundStatement		5:4:67:67	4921828	1					
ANR	4921854	ExpressionStatement	verbose = true	519:8:13394:13408	4921828	0	True				
ANR	4921855	AssignmentExpression	verbose = true		4921828	0		=			
ANR	4921856	Identifier	verbose		4921828	0					
ANR	4921857	Identifier	true		4921828	1					
ANR	4921858	ElseStatement	else		4921828	0					
ANR	4921859	CompoundStatement		9:4:112:112	4921828	0					
ANR	4921860	ExpressionStatement	verbose = false	523:8:13439:13454	4921828	0	True				
ANR	4921861	AssignmentExpression	verbose = false		4921828	0		=			
ANR	4921862	Identifier	verbose		4921828	0					
ANR	4921863	Identifier	false		4921828	1					
ANR	4921864	ExpressionStatement	"printf ( ""testing server time\\n"" )"	526:4:13467:13498	4921828	2	True				
ANR	4921865	CallExpression	"printf ( ""testing server time\\n"" )"		4921828	0					
ANR	4921866	Callee	printf		4921828	0					
ANR	4921867	Identifier	printf		4921828	0					
ANR	4921868	ArgumentList	"""testing server time\\n"""		4921828	1					
ANR	4921869	Argument	"""testing server time\\n"""		4921828	0					
ANR	4921870	PrimaryExpression	"""testing server time\\n"""		4921828	0					
ANR	4921871	ExpressionStatement	test_put_server_time ( verbose )	527:4:13504:13533	4921828	3	True				
ANR	4921872	CallExpression	test_put_server_time ( verbose )		4921828	0					
ANR	4921873	Callee	test_put_server_time		4921828	0					
ANR	4921874	Identifier	test_put_server_time		4921828	0					
ANR	4921875	ArgumentList	verbose		4921828	1					
ANR	4921876	Argument	verbose		4921828	0					
ANR	4921877	Identifier	verbose		4921828	0					
ANR	4921878	ExpressionStatement	"printf ( ""Server time complete.\\n-----------------\\nTesting chained ads.\\n"" )"	528:4:13539:13613	4921828	4	True				
ANR	4921879	CallExpression	"printf ( ""Server time complete.\\n-----------------\\nTesting chained ads.\\n"" )"		4921828	0					
ANR	4921880	Callee	printf		4921828	0					
ANR	4921881	Identifier	printf		4921828	0					
ANR	4921882	ArgumentList	"""Server time complete.\\n-----------------\\nTesting chained ads.\\n"""		4921828	1					
ANR	4921883	Argument	"""Server time complete.\\n-----------------\\nTesting chained ads.\\n"""		4921828	0					
ANR	4921884	PrimaryExpression	"""Server time complete.\\n-----------------\\nTesting chained ads.\\n"""		4921828	0					
ANR	4921885	ExpressionStatement	"printf ( ""chained ads complete.\\n-----------------\\n"" )"	532:4:13662:13714	4921828	5	True				
ANR	4921886	CallExpression	"printf ( ""chained ads complete.\\n-----------------\\n"" )"		4921828	0					
ANR	4921887	Callee	printf		4921828	0					
ANR	4921888	Identifier	printf		4921828	0					
ANR	4921889	ArgumentList	"""chained ads complete.\\n-----------------\\n"""		4921828	1					
ANR	4921890	Argument	"""chained ads complete.\\n-----------------\\n"""		4921828	0					
ANR	4921891	PrimaryExpression	"""chained ads complete.\\n-----------------\\n"""		4921828	0					
ANR	4921892	ReturnType	int		4921828	1					
ANR	4921893	Identifier	main		4921828	2					
ANR	4921894	ParameterList	"int argc , char * * argv"		4921828	3					
ANR	4921895	Parameter	int argc	513:9:13293:13300	4921828	0	True				
ANR	4921896	ParameterType	int		4921828	0					
ANR	4921897	Identifier	argc		4921828	1					
ANR	4921898	Parameter	char * * argv	513:19:13303:13313	4921828	1	True				
ANR	4921899	ParameterType	char * *		4921828	0					
ANR	4921900	Identifier	argv		4921828	1					
ANR	4921901	CFGEntryNode	ENTRY		4921828		True				
ANR	4921902	CFGExitNode	EXIT		4921828		True				
ANR	4921903	Symbol	argc		4921828						
ANR	4921904	Symbol	strcmp		4921828						
ANR	4921905	Symbol	true		4921828						
ANR	4921906	Symbol	false		4921828						
ANR	4921907	Symbol	* argv		4921828						
ANR	4921908	Symbol	argv		4921828						
ANR	4921909	Symbol	verbose		4921828						
