command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	928083	File	data/converged/CVE-2011-4930_htcondor/condor_netdb.cpp								
ANR	928084	Function	nodns_enabled	46:0:1525:1615							
ANR	928085	FunctionDef	nodns_enabled ()		928084	0					
ANR	928086	CompoundStatement		48:0:1558:1615	928084	0					
ANR	928087	ReturnStatement	"return param_boolean_crufty ( ""NO_DNS"" , false ) ? 1 : 0 ;"	49:1:1561:1613	928084	0	True				
ANR	928088	ConditionalExpression	"param_boolean_crufty ( ""NO_DNS"" , false ) ? 1 : 0"		928084	0					
ANR	928089	Condition	"param_boolean_crufty ( ""NO_DNS"" , false )"		928084	0					
ANR	928090	CallExpression	"param_boolean_crufty ( ""NO_DNS"" , false )"		928084	0					
ANR	928091	Callee	param_boolean_crufty		928084	0					
ANR	928092	Identifier	param_boolean_crufty		928084	0					
ANR	928093	ArgumentList	"""NO_DNS"""		928084	1					
ANR	928094	Argument	"""NO_DNS"""		928084	0					
ANR	928095	PrimaryExpression	"""NO_DNS"""		928084	0					
ANR	928096	Argument	false		928084	1					
ANR	928097	Identifier	false		928084	0					
ANR	928098	PrimaryExpression	1		928084	1					
ANR	928099	PrimaryExpression	0		928084	2					
ANR	928100	ReturnType	static int		928084	1					
ANR	928101	Identifier	nodns_enabled		928084	2					
ANR	928102	ParameterList			928084	3					
ANR	928103	CFGEntryNode	ENTRY		928084		True				
ANR	928104	CFGExitNode	EXIT		928084		True				
ANR	928105	Symbol	false		928084						
ANR	928106	Symbol	param_boolean_crufty		928084						
ANR	928107	DeclStmt									
ANR	928108	Decl							int	"int ( const char * addr , char * h_name , int maxlen )"	convert_ip_to_hostname
ANR	928109	DeclStmt									
ANR	928110	Decl							int	"int ( const char * name , char * * h_addr_list , int maxaddrs )"	convert_hostname_to_ip
ANR	928111	Function	get_nodns_hostent	64:0:1875:2551							
ANR	928112	FunctionDef	get_nodns_hostent (const char * name)		928111	0					
ANR	928113	CompoundStatement		65:0:1928:2551	928111	0					
ANR	928114	Statement	define	67:2:1964:1969	928111	0	True				
ANR	928115	Statement	MAXSIMULATEDADDRS	67:9:1971:1987	928111	1	True				
ANR	928116	Statement	2	67:27:1989:1989	928111	2	True				
ANR	928117	Statement	static	69:1:1994:1999	928111	3	True				
ANR	928118	IdentifierDeclStatement	struct hostent hostent ;	69:8:2001:2023	928111	4	True				
ANR	928119	IdentifierDecl	hostent		928111	0					
ANR	928120	IdentifierDeclType	struct hostent		928111	0					
ANR	928121	Identifier	hostent		928111	1					
ANR	928122	Statement	static	70:1:2026:2031	928111	5	True				
ANR	928123	IdentifierDeclStatement	char * h_aliases [ 1 ] = { NULL } ;	70:8:2033:2060	928111	6	True				
ANR	928124	IdentifierDecl	* h_aliases [ 1 ] = { NULL }		928111	0					
ANR	928125	IdentifierDeclType	char * [ 1 ]		928111	0					
ANR	928126	Identifier	h_aliases		928111	1					
ANR	928127	PrimaryExpression	1		928111	2					
ANR	928128	AssignmentExpression	* h_aliases [ 1 ] = { NULL }		928111	3		=			
ANR	928129	Identifier	h_aliases		928111	0					
ANR	928130	InitializerList	NULL		928111	1					
ANR	928131	Identifier	NULL		928111	0					
ANR	928132	Statement	static	71:1:2063:2068	928111	7	True				
ANR	928133	IdentifierDeclStatement	char * h_addr_list [ MAXSIMULATEDADDRS ] ;	71:8:2070:2106	928111	8	True				
ANR	928134	IdentifierDecl	* h_addr_list [ MAXSIMULATEDADDRS ]		928111	0					
ANR	928135	IdentifierDeclType	char * [ MAXSIMULATEDADDRS ]		928111	0					
ANR	928136	Identifier	h_addr_list		928111	1					
ANR	928137	Identifier	MAXSIMULATEDADDRS		928111	2					
ANR	928138	Statement	static	72:1:2109:2114	928111	9	True				
ANR	928139	IdentifierDeclStatement	char h_name [ NI_MAXHOST ] ;	72:8:2116:2139	928111	10	True				
ANR	928140	IdentifierDecl	h_name [ NI_MAXHOST ]		928111	0					
ANR	928141	IdentifierDeclType	char [ NI_MAXHOST ]		928111	0					
ANR	928142	Identifier	h_name		928111	1					
ANR	928143	Identifier	NI_MAXHOST		928111	2					
ANR	928144	IfStatement	"if ( convert_hostname_to_ip ( name , h_addr_list , MAXSIMULATEDADDRS ) )"		928111	11					
ANR	928145	Condition	"convert_hostname_to_ip ( name , h_addr_list , MAXSIMULATEDADDRS )"	74:6:2148:2207	928111	0	True				
ANR	928146	CallExpression	"convert_hostname_to_ip ( name , h_addr_list , MAXSIMULATEDADDRS )"		928111	0					
ANR	928147	Callee	convert_hostname_to_ip		928111	0					
ANR	928148	Identifier	convert_hostname_to_ip		928111	0					
ANR	928149	ArgumentList	name		928111	1					
ANR	928150	Argument	name		928111	0					
ANR	928151	Identifier	name		928111	0					
ANR	928152	Argument	h_addr_list		928111	1					
ANR	928153	Identifier	h_addr_list		928111	0					
ANR	928154	Argument	MAXSIMULATEDADDRS		928111	2					
ANR	928155	Identifier	MAXSIMULATEDADDRS		928111	0					
ANR	928156	CompoundStatement		10:68:281:281	928111	1					
ANR	928157	ReturnStatement	return NULL ;	76:3:2235:2246	928111	0	True				
ANR	928158	Identifier	NULL		928111	0					
ANR	928159	ElseStatement	else		928111	0					
ANR	928160	CompoundStatement		13:9:328:328	928111	0					
ANR	928161	ExpressionStatement	"memset ( h_name , 0 , MAXSIMULATEDADDRS )"	78:3:2262:2298	928111	0	True				
ANR	928162	CallExpression	"memset ( h_name , 0 , MAXSIMULATEDADDRS )"		928111	0					
ANR	928163	Callee	memset		928111	0					
ANR	928164	Identifier	memset		928111	0					
ANR	928165	ArgumentList	h_name		928111	1					
ANR	928166	Argument	h_name		928111	0					
ANR	928167	Identifier	h_name		928111	0					
ANR	928168	Argument	0		928111	1					
ANR	928169	PrimaryExpression	0		928111	0					
ANR	928170	Argument	MAXSIMULATEDADDRS		928111	2					
ANR	928171	Identifier	MAXSIMULATEDADDRS		928111	0					
ANR	928172	ExpressionStatement	"strncpy ( h_name , name , NI_MAXHOST - 1 )"	79:8:2308:2345	928111	1	True				
ANR	928173	CallExpression	"strncpy ( h_name , name , NI_MAXHOST - 1 )"		928111	0					
ANR	928174	Callee	strncpy		928111	0					
ANR	928175	Identifier	strncpy		928111	0					
ANR	928176	ArgumentList	h_name		928111	1					
ANR	928177	Argument	h_name		928111	0					
ANR	928178	Identifier	h_name		928111	0					
ANR	928179	Argument	name		928111	1					
ANR	928180	Identifier	name		928111	0					
ANR	928181	Argument	NI_MAXHOST - 1		928111	2					
ANR	928182	AdditiveExpression	NI_MAXHOST - 1		928111	0		-			
ANR	928183	Identifier	NI_MAXHOST		928111	0					
ANR	928184	PrimaryExpression	1		928111	1					
ANR	928185	ExpressionStatement	hostent . h_name = h_name	80:3:2350:2373	928111	2	True				
ANR	928186	AssignmentExpression	hostent . h_name = h_name		928111	0		=			
ANR	928187	MemberAccess	hostent . h_name		928111	0					
ANR	928188	Identifier	hostent		928111	0					
ANR	928189	Identifier	h_name		928111	1					
ANR	928190	Identifier	h_name		928111	1					
ANR	928191	ExpressionStatement	hostent . h_aliases = h_aliases	81:3:2378:2407	928111	3	True				
ANR	928192	AssignmentExpression	hostent . h_aliases = h_aliases		928111	0		=			
ANR	928193	MemberAccess	hostent . h_aliases		928111	0					
ANR	928194	Identifier	hostent		928111	0					
ANR	928195	Identifier	h_aliases		928111	1					
ANR	928196	Identifier	h_aliases		928111	1					
ANR	928197	ExpressionStatement	hostent . h_addrtype = AF_INET	82:3:2412:2440	928111	4	True				
ANR	928198	AssignmentExpression	hostent . h_addrtype = AF_INET		928111	0		=			
ANR	928199	MemberAccess	hostent . h_addrtype		928111	0					
ANR	928200	Identifier	hostent		928111	0					
ANR	928201	Identifier	h_addrtype		928111	1					
ANR	928202	Identifier	AF_INET		928111	1					
ANR	928203	ExpressionStatement	hostent . h_length = sizeof ( struct in_addr )	83:3:2445:2486	928111	5	True				
ANR	928204	AssignmentExpression	hostent . h_length = sizeof ( struct in_addr )		928111	0		=			
ANR	928205	MemberAccess	hostent . h_length		928111	0					
ANR	928206	Identifier	hostent		928111	0					
ANR	928207	Identifier	h_length		928111	1					
ANR	928208	SizeofExpression	sizeof ( struct in_addr )		928111	1					
ANR	928209	Sizeof	sizeof		928111	0					
ANR	928210	SizeofOperand	struct in_addr		928111	1					
ANR	928211	ExpressionStatement	hostent . h_addr_list = h_addr_list	84:3:2491:2524	928111	6	True				
ANR	928212	AssignmentExpression	hostent . h_addr_list = h_addr_list		928111	0		=			
ANR	928213	MemberAccess	hostent . h_addr_list		928111	0					
ANR	928214	Identifier	hostent		928111	0					
ANR	928215	Identifier	h_addr_list		928111	1					
ANR	928216	Identifier	h_addr_list		928111	1					
ANR	928217	ReturnStatement	return & hostent ;	86:3:2530:2545	928111	7	True				
ANR	928218	UnaryOperationExpression	& hostent		928111	0					
ANR	928219	UnaryOperator	&		928111	0					
ANR	928220	Identifier	hostent		928111	1					
ANR	928221	ReturnType	struct hostent *		928111	1					
ANR	928222	Identifier	get_nodns_hostent		928111	2					
ANR	928223	ParameterList	const char * name		928111	3					
ANR	928224	Parameter	const char * name	64:35:1910:1925	928111	0	True				
ANR	928225	ParameterType	const char *		928111	0					
ANR	928226	Identifier	name		928111	1					
ANR	928227	CFGEntryNode	ENTRY		928111		True				
ANR	928228	CFGExitNode	EXIT		928111		True				
ANR	928229	Symbol	NULL		928111						
ANR	928230	Symbol	& hostent		928111						
ANR	928231	Symbol	h_name		928111						
ANR	928232	Symbol	hostent . h_addrtype		928111						
ANR	928233	Symbol	h_addr_list		928111						
ANR	928234	Symbol	hostent . h_name		928111						
ANR	928235	Symbol	hostent . h_aliases		928111						
ANR	928236	Symbol	MAXSIMULATEDADDRS		928111						
ANR	928237	Symbol	AF_INET		928111						
ANR	928238	Symbol	NI_MAXHOST		928111						
ANR	928239	Symbol	hostent . h_length		928111						
ANR	928240	Symbol	name		928111						
ANR	928241	Symbol	convert_hostname_to_ip		928111						
ANR	928242	Symbol	hostent . h_addr_list		928111						
ANR	928243	Symbol	h_aliases		928111						
ANR	928244	Symbol	hostent		928111						
ANR	928245	Function	condor_gethostbyname_ipv4	90:0:2554:2721							
ANR	928246	FunctionDef	condor_gethostbyname_ipv4 (const char * name)		928245	0					
ANR	928247	CompoundStatement		91:44:2615:2721	928245	0					
ANR	928248	IfStatement	if ( nodns_enabled ( ) )		928245	0					
ANR	928249	Condition	nodns_enabled ( )	92:5:2622:2636	928245	0	True				
ANR	928250	CallExpression	nodns_enabled ( )		928245	0					
ANR	928251	Callee	nodns_enabled		928245	0					
ANR	928252	Identifier	nodns_enabled		928245	0					
ANR	928253	ArgumentList			928245	1					
ANR	928254	CompoundStatement		2:22:23:23	928245	1					
ANR	928255	ReturnStatement	return get_nodns_hostent ( name ) ;	93:5:2646:2676	928245	0	True				
ANR	928256	CallExpression	get_nodns_hostent ( name )		928245	0					
ANR	928257	Callee	get_nodns_hostent		928245	0					
ANR	928258	Identifier	get_nodns_hostent		928245	0					
ANR	928259	ArgumentList	name		928245	1					
ANR	928260	Argument	name		928245	0					
ANR	928261	Identifier	name		928245	0					
ANR	928262	ElseStatement	else		928245	0					
ANR	928263	CompoundStatement		4:8:70:70	928245	0					
ANR	928264	ReturnStatement	return gethostbyname ( name ) ;	95:2:2690:2716	928245	0	True				
ANR	928265	CallExpression	gethostbyname ( name )		928245	0					
ANR	928266	Callee	gethostbyname		928245	0					
ANR	928267	Identifier	gethostbyname		928245	0					
ANR	928268	ArgumentList	name		928245	1					
ANR	928269	Argument	name		928245	0					
ANR	928270	Identifier	name		928245	0					
ANR	928271	ReturnType	struct hostent *		928245	1					
ANR	928272	Identifier	condor_gethostbyname_ipv4		928245	2					
ANR	928273	ParameterList	const char * name		928245	3					
ANR	928274	Parameter	const char * name	91:26:2597:2612	928245	0	True				
ANR	928275	ParameterType	const char *		928245	0					
ANR	928276	Identifier	name		928245	1					
ANR	928277	CFGEntryNode	ENTRY		928245		True				
ANR	928278	CFGExitNode	EXIT		928245		True				
ANR	928279	Symbol	get_nodns_hostent		928245						
ANR	928280	Symbol	gethostbyname		928245						
ANR	928281	Symbol	name		928245						
ANR	928282	Symbol	nodns_enabled		928245						
ANR	928283	Function	condor_gethostbyname_ipv6	100:0:2766:5022							
ANR	928284	FunctionDef	condor_gethostbyname_ipv6 (const char * name)		928283	0					
ANR	928285	CompoundStatement		101:44:2827:5022	928283	0					
ANR	928286	Statement	define	102:5:2834:2839	928283	0	True				
ANR	928287	Statement	MAXADDR	102:12:2841:2847	928283	1	True				
ANR	928288	Statement	16	102:20:2849:2850	928283	2	True				
ANR	928289	Statement	static	103:4:2856:2861	928283	3	True				
ANR	928290	IdentifierDeclStatement	struct hostent hostent ;	103:11:2863:2885	928283	4	True				
ANR	928291	IdentifierDecl	hostent		928283	0					
ANR	928292	IdentifierDeclType	struct hostent		928283	0					
ANR	928293	Identifier	hostent		928283	1					
ANR	928294	Statement	static	104:1:2888:2893	928283	5	True				
ANR	928295	IdentifierDeclStatement	struct in_addr addr_list [ MAXADDR ] ;	104:8:2895:2928	928283	6	True				
ANR	928296	IdentifierDecl	addr_list [ MAXADDR ]		928283	0					
ANR	928297	IdentifierDeclType	struct in_addr [ MAXADDR ]		928283	0					
ANR	928298	Identifier	addr_list		928283	1					
ANR	928299	Identifier	MAXADDR		928283	2					
ANR	928300	Statement	static	105:1:2931:2936	928283	7	True				
ANR	928301	IdentifierDeclStatement	char * h_addr_list [ MAXADDR + 1 ] ;	105:8:2938:2966	928283	8	True				
ANR	928302	IdentifierDecl	* h_addr_list [ MAXADDR + 1 ]		928283	0					
ANR	928303	IdentifierDeclType	char * [ MAXADDR + 1 ]		928283	0					
ANR	928304	Identifier	h_addr_list		928283	1					
ANR	928305	AdditiveExpression	MAXADDR + 1		928283	2		+			
ANR	928306	Identifier	MAXADDR		928283	0					
ANR	928307	PrimaryExpression	1		928283	1					
ANR	928308	Statement	static	106:1:2969:2974	928283	9	True				
ANR	928309	IdentifierDeclStatement	char h_name [ NI_MAXHOST ] ;	106:8:2976:2999	928283	10	True				
ANR	928310	IdentifierDecl	h_name [ NI_MAXHOST ]		928283	0					
ANR	928311	IdentifierDeclType	char [ NI_MAXHOST ]		928283	0					
ANR	928312	Identifier	h_name		928283	1					
ANR	928313	Identifier	NI_MAXHOST		928283	2					
ANR	928314	IdentifierDeclStatement	struct addrinfo hints ;	107:1:3002:3023	928283	11	True				
ANR	928315	IdentifierDecl	hints		928283	0					
ANR	928316	IdentifierDeclType	struct addrinfo		928283	0					
ANR	928317	Identifier	hints		928283	1					
ANR	928318	IdentifierDeclStatement	struct addrinfo * res = NULL ;	108:1:3026:3053	928283	12	True				
ANR	928319	IdentifierDecl	* res = NULL		928283	0					
ANR	928320	IdentifierDeclType	struct addrinfo *		928283	0					
ANR	928321	Identifier	res		928283	1					
ANR	928322	AssignmentExpression	* res = NULL		928283	2		=			
ANR	928323	Identifier	NULL		928283	0					
ANR	928324	Identifier	NULL		928283	1					
ANR	928325	IdentifierDeclStatement	struct addrinfo * iter ;	109:1:3056:3077	928283	13	True				
ANR	928326	IdentifierDecl	* iter		928283	0					
ANR	928327	IdentifierDeclType	struct addrinfo *		928283	0					
ANR	928328	Identifier	iter		928283	1					
ANR	928329	IdentifierDeclStatement	struct hostent * hostent_alias = NULL ;	110:1:3080:3116	928283	14	True				
ANR	928330	IdentifierDecl	* hostent_alias = NULL		928283	0					
ANR	928331	IdentifierDeclType	struct hostent *		928283	0					
ANR	928332	Identifier	hostent_alias		928283	1					
ANR	928333	AssignmentExpression	* hostent_alias = NULL		928283	2		=			
ANR	928334	Identifier	NULL		928283	0					
ANR	928335	Identifier	NULL		928283	1					
ANR	928336	IdentifierDeclStatement	int e ;	111:1:3119:3124	928283	15	True				
ANR	928337	IdentifierDecl	e		928283	0					
ANR	928338	IdentifierDeclType	int		928283	0					
ANR	928339	Identifier	e		928283	1					
ANR	928340	IdentifierDeclStatement	int addrcount = 0 ;	112:1:3127:3144	928283	16	True				
ANR	928341	IdentifierDecl	addrcount = 0		928283	0					
ANR	928342	IdentifierDeclType	int		928283	0					
ANR	928343	Identifier	addrcount		928283	1					
ANR	928344	AssignmentExpression	addrcount = 0		928283	2		=			
ANR	928345	Identifier	addrcount		928283	0					
ANR	928346	PrimaryExpression	0		928283	1					
ANR	928347	IdentifierDeclStatement	int first = 1 ;	113:1:3147:3160	928283	17	True				
ANR	928348	IdentifierDecl	first = 1		928283	0					
ANR	928349	IdentifierDeclType	int		928283	0					
ANR	928350	Identifier	first		928283	1					
ANR	928351	AssignmentExpression	first = 1		928283	2		=			
ANR	928352	Identifier	first		928283	0					
ANR	928353	PrimaryExpression	1		928283	1					
ANR	928354	IfStatement	if ( nodns_enabled ( ) )		928283	18					
ANR	928355	Condition	nodns_enabled ( )	115:8:3171:3185	928283	0	True				
ANR	928356	CallExpression	nodns_enabled ( )		928283	0					
ANR	928357	Callee	nodns_enabled		928283	0					
ANR	928358	Identifier	nodns_enabled		928283	0					
ANR	928359	ArgumentList			928283	1					
ANR	928360	CompoundStatement		15:25:360:360	928283	1					
ANR	928361	ReturnStatement	return get_nodns_hostent ( name ) ;	116:8:3198:3228	928283	0	True				
ANR	928362	CallExpression	get_nodns_hostent ( name )		928283	0					
ANR	928363	Callee	get_nodns_hostent		928283	0					
ANR	928364	Identifier	get_nodns_hostent		928283	0					
ANR	928365	ArgumentList	name		928283	1					
ANR	928366	Argument	name		928283	0					
ANR	928367	Identifier	name		928283	0					
ANR	928368	ExpressionStatement	"memset ( & hints , 0 , sizeof ( hints ) )"	119:4:3241:3273	928283	19	True				
ANR	928369	CallExpression	"memset ( & hints , 0 , sizeof ( hints ) )"		928283	0					
ANR	928370	Callee	memset		928283	0					
ANR	928371	Identifier	memset		928283	0					
ANR	928372	ArgumentList	& hints		928283	1					
ANR	928373	Argument	& hints		928283	0					
ANR	928374	UnaryOperationExpression	& hints		928283	0					
ANR	928375	UnaryOperator	&		928283	0					
ANR	928376	Identifier	hints		928283	1					
ANR	928377	Argument	0		928283	1					
ANR	928378	PrimaryExpression	0		928283	0					
ANR	928379	Argument	sizeof ( hints )		928283	2					
ANR	928380	SizeofExpression	sizeof ( hints )		928283	0					
ANR	928381	Sizeof	sizeof		928283	0					
ANR	928382	SizeofOperand	hints		928283	1					
ANR	928383	ExpressionStatement	hints . ai_socktype = SOCK_STREAM	120:4:3279:3310	928283	20	True				
ANR	928384	AssignmentExpression	hints . ai_socktype = SOCK_STREAM		928283	0		=			
ANR	928385	MemberAccess	hints . ai_socktype		928283	0					
ANR	928386	Identifier	hints		928283	0					
ANR	928387	Identifier	ai_socktype		928283	1					
ANR	928388	Identifier	SOCK_STREAM		928283	1					
ANR	928389	ExpressionStatement	hints . ai_flags = AI_CANONNAME	123:4:3391:3420	928283	21	True				
ANR	928390	AssignmentExpression	hints . ai_flags = AI_CANONNAME		928283	0		=			
ANR	928391	MemberAccess	hints . ai_flags		928283	0					
ANR	928392	Identifier	hints		928283	0					
ANR	928393	Identifier	ai_flags		928283	1					
ANR	928394	Identifier	AI_CANONNAME		928283	1					
ANR	928395	ExpressionStatement	"e = getaddrinfo ( name , NULL , & hints , & res )"	128:4:3492:3533	928283	22	True				
ANR	928396	AssignmentExpression	"e = getaddrinfo ( name , NULL , & hints , & res )"		928283	0		=			
ANR	928397	Identifier	e		928283	0					
ANR	928398	CallExpression	"getaddrinfo ( name , NULL , & hints , & res )"		928283	1					
ANR	928399	Callee	getaddrinfo		928283	0					
ANR	928400	Identifier	getaddrinfo		928283	0					
ANR	928401	ArgumentList	name		928283	1					
ANR	928402	Argument	name		928283	0					
ANR	928403	Identifier	name		928283	0					
ANR	928404	Argument	NULL		928283	1					
ANR	928405	Identifier	NULL		928283	0					
ANR	928406	Argument	& hints		928283	2					
ANR	928407	UnaryOperationExpression	& hints		928283	0					
ANR	928408	UnaryOperator	&		928283	0					
ANR	928409	Identifier	hints		928283	1					
ANR	928410	Argument	& res		928283	3					
ANR	928411	UnaryOperationExpression	& res		928283	0					
ANR	928412	UnaryOperator	&		928283	0					
ANR	928413	Identifier	res		928283	1					
ANR	928414	IfStatement	if ( e != 0 )		928283	23					
ANR	928415	Condition	e != 0	129:8:3543:3548	928283	0	True				
ANR	928416	EqualityExpression	e != 0		928283	0		!=			
ANR	928417	Identifier	e		928283	0					
ANR	928418	PrimaryExpression	0		928283	1					
ANR	928419	ReturnStatement	return NULL ;	130:8:3559:3570	928283	1	True				
ANR	928420	Identifier	NULL		928283	0					
ANR	928421	ExpressionStatement	"memset ( h_addr_list , 0 , sizeof ( h_addr_list ) )"	132:4:3577:3620	928283	24	True				
ANR	928422	CallExpression	"memset ( h_addr_list , 0 , sizeof ( h_addr_list ) )"		928283	0					
ANR	928423	Callee	memset		928283	0					
ANR	928424	Identifier	memset		928283	0					
ANR	928425	ArgumentList	h_addr_list		928283	1					
ANR	928426	Argument	h_addr_list		928283	0					
ANR	928427	Identifier	h_addr_list		928283	0					
ANR	928428	Argument	0		928283	1					
ANR	928429	PrimaryExpression	0		928283	0					
ANR	928430	Argument	sizeof ( h_addr_list )		928283	2					
ANR	928431	SizeofExpression	sizeof ( h_addr_list )		928283	0					
ANR	928432	Sizeof	sizeof		928283	0					
ANR	928433	SizeofOperand	h_addr_list		928283	1					
ANR	928434	ExpressionStatement	"memset ( h_name , 0 , sizeof ( h_name ) )"	133:4:3626:3659	928283	25	True				
ANR	928435	CallExpression	"memset ( h_name , 0 , sizeof ( h_name ) )"		928283	0					
ANR	928436	Callee	memset		928283	0					
ANR	928437	Identifier	memset		928283	0					
ANR	928438	ArgumentList	h_name		928283	1					
ANR	928439	Argument	h_name		928283	0					
ANR	928440	Identifier	h_name		928283	0					
ANR	928441	Argument	0		928283	1					
ANR	928442	PrimaryExpression	0		928283	0					
ANR	928443	Argument	sizeof ( h_name )		928283	2					
ANR	928444	SizeofExpression	sizeof ( h_name )		928283	0					
ANR	928445	Sizeof	sizeof		928283	0					
ANR	928446	SizeofOperand	h_name		928283	1					
ANR	928447	ExpressionStatement	"memset ( & hostent , 0 , sizeof ( hostent ) )"	134:4:3665:3701	928283	26	True				
ANR	928448	CallExpression	"memset ( & hostent , 0 , sizeof ( hostent ) )"		928283	0					
ANR	928449	Callee	memset		928283	0					
ANR	928450	Identifier	memset		928283	0					
ANR	928451	ArgumentList	& hostent		928283	1					
ANR	928452	Argument	& hostent		928283	0					
ANR	928453	UnaryOperationExpression	& hostent		928283	0					
ANR	928454	UnaryOperator	&		928283	0					
ANR	928455	Identifier	hostent		928283	1					
ANR	928456	Argument	0		928283	1					
ANR	928457	PrimaryExpression	0		928283	0					
ANR	928458	Argument	sizeof ( hostent )		928283	2					
ANR	928459	SizeofExpression	sizeof ( hostent )		928283	0					
ANR	928460	Sizeof	sizeof		928283	0					
ANR	928461	SizeofOperand	hostent		928283	1					
ANR	928462	ExpressionStatement	hostent . h_name = h_name	135:4:3707:3730	928283	27	True				
ANR	928463	AssignmentExpression	hostent . h_name = h_name		928283	0		=			
ANR	928464	MemberAccess	hostent . h_name		928283	0					
ANR	928465	Identifier	hostent		928283	0					
ANR	928466	Identifier	h_name		928283	1					
ANR	928467	Identifier	h_name		928283	1					
ANR	928468	ExpressionStatement	hostent_alias = gethostbyname ( name )	140:1:3935:3970	928283	28	True				
ANR	928469	AssignmentExpression	hostent_alias = gethostbyname ( name )		928283	0		=			
ANR	928470	Identifier	hostent_alias		928283	0					
ANR	928471	CallExpression	gethostbyname ( name )		928283	1					
ANR	928472	Callee	gethostbyname		928283	0					
ANR	928473	Identifier	gethostbyname		928283	0					
ANR	928474	ArgumentList	name		928283	1					
ANR	928475	Argument	name		928283	0					
ANR	928476	Identifier	name		928283	0					
ANR	928477	IfStatement	if ( hostent_alias )		928283	29					
ANR	928478	Condition	hostent_alias	141:5:3977:3989	928283	0	True				
ANR	928479	Identifier	hostent_alias		928283	0					
ANR	928480	CompoundStatement		41:20:1164:1164	928283	1					
ANR	928481	ExpressionStatement	hostent . h_aliases = hostent_alias -> h_aliases	142:2:3996:4040	928283	0	True				
ANR	928482	AssignmentExpression	hostent . h_aliases = hostent_alias -> h_aliases		928283	0		=			
ANR	928483	MemberAccess	hostent . h_aliases		928283	0					
ANR	928484	Identifier	hostent		928283	0					
ANR	928485	Identifier	h_aliases		928283	1					
ANR	928486	PtrMemberAccess	hostent_alias -> h_aliases		928283	1					
ANR	928487	Identifier	hostent_alias		928283	0					
ANR	928488	Identifier	h_aliases		928283	1					
ANR	928489	ExpressionStatement	hostent . h_addrtype = AF_INET	145:4:4050:4078	928283	30	True				
ANR	928490	AssignmentExpression	hostent . h_addrtype = AF_INET		928283	0		=			
ANR	928491	MemberAccess	hostent . h_addrtype		928283	0					
ANR	928492	Identifier	hostent		928283	0					
ANR	928493	Identifier	h_addrtype		928283	1					
ANR	928494	Identifier	AF_INET		928283	1					
ANR	928495	ExpressionStatement	hostent . h_length = sizeof ( struct in_addr )	146:4:4084:4125	928283	31	True				
ANR	928496	AssignmentExpression	hostent . h_length = sizeof ( struct in_addr )		928283	0		=			
ANR	928497	MemberAccess	hostent . h_length		928283	0					
ANR	928498	Identifier	hostent		928283	0					
ANR	928499	Identifier	h_length		928283	1					
ANR	928500	SizeofExpression	sizeof ( struct in_addr )		928283	1					
ANR	928501	Sizeof	sizeof		928283	0					
ANR	928502	SizeofOperand	struct in_addr		928283	1					
ANR	928503	ExpressionStatement	hostent . h_addr_list = & h_addr_list [ 0 ]	147:4:4131:4168	928283	32	True				
ANR	928504	AssignmentExpression	hostent . h_addr_list = & h_addr_list [ 0 ]		928283	0		=			
ANR	928505	MemberAccess	hostent . h_addr_list		928283	0					
ANR	928506	Identifier	hostent		928283	0					
ANR	928507	Identifier	h_addr_list		928283	1					
ANR	928508	UnaryOperationExpression	& h_addr_list [ 0 ]		928283	1					
ANR	928509	UnaryOperator	&		928283	0					
ANR	928510	ArrayIndexing	h_addr_list [ 0 ]		928283	1					
ANR	928511	Identifier	h_addr_list		928283	0					
ANR	928512	PrimaryExpression	0		928283	1					
ANR	928513	ForStatement	for ( iter = res ; iter != NULL ; iter = iter -> ai_next )		928283	33					
ANR	928514	ForInit	iter = res ;	149:10:4181:4191	928283	0	True				
ANR	928515	AssignmentExpression	iter = res		928283	0		=			
ANR	928516	Identifier	iter		928283	0					
ANR	928517	Identifier	res		928283	1					
ANR	928518	Condition	iter != NULL	149:22:4193:4204	928283	1	True				
ANR	928519	EqualityExpression	iter != NULL		928283	0		!=			
ANR	928520	Identifier	iter		928283	0					
ANR	928521	Identifier	NULL		928283	1					
ANR	928522	AssignmentExpression	iter = iter -> ai_next	149:36:4207:4226	928283	2	True	=			
ANR	928523	Identifier	iter		928283	0					
ANR	928524	PtrMemberAccess	iter -> ai_next		928283	1					
ANR	928525	Identifier	iter		928283	0					
ANR	928526	Identifier	ai_next		928283	1					
ANR	928527	CompoundStatement		49:59:1402:1402	928283	3					
ANR	928528	IfStatement	if ( first )		928283	0					
ANR	928529	Condition	first	150:12:4244:4248	928283	0	True				
ANR	928530	Identifier	first		928283	0					
ANR	928531	CompoundStatement		50:19:1423:1423	928283	1					
ANR	928532	IfStatement	if ( iter -> ai_canonname )		928283	0					
ANR	928533	Condition	iter -> ai_canonname	153:17:4367:4384	928283	0	True				
ANR	928534	PtrMemberAccess	iter -> ai_canonname		928283	0					
ANR	928535	Identifier	iter		928283	0					
ANR	928536	Identifier	ai_canonname		928283	1					
ANR	928537	CompoundStatement		53:38:1560:1560	928283	1					
ANR	928538	ExpressionStatement	"strncpy ( h_name , iter -> ai_canonname , sizeof ( h_name ) - 1 )"	154:16:4406:4459	928283	0	True				
ANR	928539	CallExpression	"strncpy ( h_name , iter -> ai_canonname , sizeof ( h_name ) - 1 )"		928283	0					
ANR	928540	Callee	strncpy		928283	0					
ANR	928541	Identifier	strncpy		928283	0					
ANR	928542	ArgumentList	h_name		928283	1					
ANR	928543	Argument	h_name		928283	0					
ANR	928544	Identifier	h_name		928283	0					
ANR	928545	Argument	iter -> ai_canonname		928283	1					
ANR	928546	PtrMemberAccess	iter -> ai_canonname		928283	0					
ANR	928547	Identifier	iter		928283	0					
ANR	928548	Identifier	ai_canonname		928283	1					
ANR	928549	Argument	sizeof ( h_name ) - 1		928283	2					
ANR	928550	AdditiveExpression	sizeof ( h_name ) - 1		928283	0		-			
ANR	928551	SizeofExpression	sizeof ( h_name )		928283	0					
ANR	928552	Sizeof	sizeof		928283	0					
ANR	928553	SizeofOperand	h_name		928283	1					
ANR	928554	PrimaryExpression	1		928283	1					
ANR	928555	ExpressionStatement	first = 0	155:16:4477:4486	928283	1	True				
ANR	928556	AssignmentExpression	first = 0		928283	0		=			
ANR	928557	Identifier	first		928283	0					
ANR	928558	PrimaryExpression	0		928283	1					
ANR	928559	IfStatement	if ( iter -> ai_addr && iter -> ai_addr -> sa_family == AF_INET )		928283	1					
ANR	928560	Condition	iter -> ai_addr && iter -> ai_addr -> sa_family == AF_INET	159:12:4558:4609	928283	0	True				
ANR	928561	AndExpression	iter -> ai_addr && iter -> ai_addr -> sa_family == AF_INET		928283	0		&&			
ANR	928562	PtrMemberAccess	iter -> ai_addr		928283	0					
ANR	928563	Identifier	iter		928283	0					
ANR	928564	Identifier	ai_addr		928283	1					
ANR	928565	EqualityExpression	iter -> ai_addr -> sa_family == AF_INET		928283	1		==			
ANR	928566	PtrMemberAccess	iter -> ai_addr -> sa_family		928283	0					
ANR	928567	PtrMemberAccess	iter -> ai_addr		928283	0					
ANR	928568	Identifier	iter		928283	0					
ANR	928569	Identifier	ai_addr		928283	1					
ANR	928570	Identifier	sa_family		928283	1					
ANR	928571	Identifier	AF_INET		928283	1					
ANR	928572	CompoundStatement		60:12:1798:1859	928283	1					
ANR	928573	IdentifierDeclStatement	struct sockaddr_in * _sin = ( struct sockaddr_in * ) iter -> ai_addr ;	160:12:4626:4687	928283	0	True				
ANR	928574	IdentifierDecl	* _sin = ( struct sockaddr_in * ) iter -> ai_addr		928283	0					
ANR	928575	IdentifierDeclType	struct sockaddr_in *		928283	0					
ANR	928576	Identifier	_sin		928283	1					
ANR	928577	AssignmentExpression	* _sin = ( struct sockaddr_in * ) iter -> ai_addr		928283	2		=			
ANR	928578	Identifier	_sin		928283	0					
ANR	928579	CastExpression	( struct sockaddr_in * ) iter -> ai_addr		928283	1					
ANR	928580	CastTarget	struct sockaddr_in *		928283	0					
ANR	928581	PtrMemberAccess	iter -> ai_addr		928283	1					
ANR	928582	Identifier	iter		928283	0					
ANR	928583	Identifier	ai_addr		928283	1					
ANR	928584	ExpressionStatement	"memcpy ( & addr_list [ addrcount ] , & _sin -> sin_addr , sizeof ( struct in_addr ) )"	161:12:4701:4771	928283	1	True				
ANR	928585	CallExpression	"memcpy ( & addr_list [ addrcount ] , & _sin -> sin_addr , sizeof ( struct in_addr ) )"		928283	0					
ANR	928586	Callee	memcpy		928283	0					
ANR	928587	Identifier	memcpy		928283	0					
ANR	928588	ArgumentList	& addr_list [ addrcount ]		928283	1					
ANR	928589	Argument	& addr_list [ addrcount ]		928283	0					
ANR	928590	UnaryOperationExpression	& addr_list [ addrcount ]		928283	0					
ANR	928591	UnaryOperator	&		928283	0					
ANR	928592	ArrayIndexing	addr_list [ addrcount ]		928283	1					
ANR	928593	Identifier	addr_list		928283	0					
ANR	928594	Identifier	addrcount		928283	1					
ANR	928595	Argument	& _sin -> sin_addr		928283	1					
ANR	928596	UnaryOperationExpression	& _sin -> sin_addr		928283	0					
ANR	928597	UnaryOperator	&		928283	0					
ANR	928598	PtrMemberAccess	_sin -> sin_addr		928283	1					
ANR	928599	Identifier	_sin		928283	0					
ANR	928600	Identifier	sin_addr		928283	1					
ANR	928601	Argument	sizeof ( struct in_addr )		928283	2					
ANR	928602	SizeofExpression	sizeof ( struct in_addr )		928283	0					
ANR	928603	Sizeof	sizeof		928283	0					
ANR	928604	SizeofOperand	struct in_addr		928283	1					
ANR	928605	ExpressionStatement	h_addr_list [ addrcount ] = ( char * ) & addr_list [ addrcount ]	162:12:4785:4838	928283	2	True				
ANR	928606	AssignmentExpression	h_addr_list [ addrcount ] = ( char * ) & addr_list [ addrcount ]		928283	0		=			
ANR	928607	ArrayIndexing	h_addr_list [ addrcount ]		928283	0					
ANR	928608	Identifier	h_addr_list		928283	0					
ANR	928609	Identifier	addrcount		928283	1					
ANR	928610	CastExpression	( char * ) & addr_list [ addrcount ]		928283	1					
ANR	928611	CastTarget	char *		928283	0					
ANR	928612	UnaryOperationExpression	& addr_list [ addrcount ]		928283	1					
ANR	928613	UnaryOperator	&		928283	0					
ANR	928614	ArrayIndexing	addr_list [ addrcount ]		928283	1					
ANR	928615	Identifier	addr_list		928283	0					
ANR	928616	Identifier	addrcount		928283	1					
ANR	928617	ExpressionStatement	addrcount ++	163:12:4852:4863	928283	3	True				
ANR	928618	PostIncDecOperationExpression	addrcount ++		928283	0					
ANR	928619	Identifier	addrcount		928283	0					
ANR	928620	IncDec	++		928283	1					
ANR	928621	IfStatement	if ( addrcount == MAXADDR )		928283	4					
ANR	928622	Condition	addrcount == MAXADDR	164:16:4881:4900	928283	0	True				
ANR	928623	EqualityExpression	addrcount == MAXADDR		928283	0		==			
ANR	928624	Identifier	addrcount		928283	0					
ANR	928625	Identifier	MAXADDR		928283	1					
ANR	928626	BreakStatement	break ;	165:16:4919:4924	928283	1	True				
ANR	928627	ExpressionStatement	h_addr_list [ addrcount ] = NULL	169:4:4947:4976	928283	34	True				
ANR	928628	AssignmentExpression	h_addr_list [ addrcount ] = NULL		928283	0		=			
ANR	928629	ArrayIndexing	h_addr_list [ addrcount ]		928283	0					
ANR	928630	Identifier	h_addr_list		928283	0					
ANR	928631	Identifier	addrcount		928283	1					
ANR	928632	Identifier	NULL		928283	1					
ANR	928633	ExpressionStatement	freeaddrinfo ( res )	170:4:4982:4999	928283	35	True				
ANR	928634	CallExpression	freeaddrinfo ( res )		928283	0					
ANR	928635	Callee	freeaddrinfo		928283	0					
ANR	928636	Identifier	freeaddrinfo		928283	0					
ANR	928637	ArgumentList	res		928283	1					
ANR	928638	Argument	res		928283	0					
ANR	928639	Identifier	res		928283	0					
ANR	928640	ReturnStatement	return & hostent ;	171:4:5005:5020	928283	36	True				
ANR	928641	UnaryOperationExpression	& hostent		928283	0					
ANR	928642	UnaryOperator	&		928283	0					
ANR	928643	Identifier	hostent		928283	1					
ANR	928644	ReturnType	struct hostent *		928283	1					
ANR	928645	Identifier	condor_gethostbyname_ipv6		928283	2					
ANR	928646	ParameterList	const char * name		928283	3					
ANR	928647	Parameter	const char * name	101:26:2809:2824	928283	0	True				
ANR	928648	ParameterType	const char *		928283	0					
ANR	928649	Identifier	name		928283	1					
ANR	928650	CFGEntryNode	ENTRY		928283		True				
ANR	928651	CFGExitNode	EXIT		928283		True				
ANR	928652	Symbol	& res		928283						
ANR	928653	Symbol	get_nodns_hostent		928283						
ANR	928654	Symbol	& hostent		928283						
ANR	928655	Symbol	hostent_alias -> h_aliases		928283						
ANR	928656	Symbol	iter -> ai_canonname		928283						
ANR	928657	Symbol	hostent . h_name		928283						
ANR	928658	Symbol	hints . ai_flags		928283						
ANR	928659	Symbol	AI_CANONNAME		928283						
ANR	928660	Symbol	* iter		928283						
ANR	928661	Symbol	SOCK_STREAM		928283						
ANR	928662	Symbol	MAXADDR		928283						
ANR	928663	Symbol	iter -> ai_addr		928283						
ANR	928664	Symbol	iter -> ai_addr -> sa_family		928283						
ANR	928665	Symbol	iter -> ai_next		928283						
ANR	928666	Symbol	* * iter		928283						
ANR	928667	Symbol	nodns_enabled		928283						
ANR	928668	Symbol	& hints		928283						
ANR	928669	Symbol	res		928283						
ANR	928670	Symbol	gethostbyname		928283						
ANR	928671	Symbol	NULL		928283						
ANR	928672	Symbol	addr_list		928283						
ANR	928673	Symbol	h_name		928283						
ANR	928674	Symbol	hostent . h_addrtype		928283						
ANR	928675	Symbol	e		928283						
ANR	928676	Symbol	* iter -> ai_addr		928283						
ANR	928677	Symbol	hints		928283						
ANR	928678	Symbol	h_addr_list		928283						
ANR	928679	Symbol	getaddrinfo		928283						
ANR	928680	Symbol	iter		928283						
ANR	928681	Symbol	hostent . h_aliases		928283						
ANR	928682	Symbol	* hostent_alias		928283						
ANR	928683	Symbol	hostent_alias		928283						
ANR	928684	Symbol	AF_INET		928283						
ANR	928685	Symbol	hints . ai_socktype		928283						
ANR	928686	Symbol	hostent . h_length		928283						
ANR	928687	Symbol	_sin		928283						
ANR	928688	Symbol	& _sin -> sin_addr		928283						
ANR	928689	Symbol	name		928283						
ANR	928690	Symbol	* h_addr_list		928283						
ANR	928691	Symbol	hostent . h_addr_list		928283						
ANR	928692	Symbol	addrcount		928283						
ANR	928693	Symbol	* addrcount		928283						
ANR	928694	Symbol	first		928283						
ANR	928695	Symbol	hostent		928283						
ANR	928696	Function	condor_gethostbyname	174:0:5025:5170							
ANR	928697	FunctionDef	condor_gethostbyname (const char * name)		928696	0					
ANR	928698	CompoundStatement		176:0:5081:5170	928696	0					
ANR	928699	ReturnStatement	return condor_gethostbyname_ipv4 ( name ) ;	178:4:5130:5168	928696	0	True				
ANR	928700	CallExpression	condor_gethostbyname_ipv4 ( name )		928696	0					
ANR	928701	Callee	condor_gethostbyname_ipv4		928696	0					
ANR	928702	Identifier	condor_gethostbyname_ipv4		928696	0					
ANR	928703	ArgumentList	name		928696	1					
ANR	928704	Argument	name		928696	0					
ANR	928705	Identifier	name		928696	0					
ANR	928706	ReturnType	struct hostent *		928696	1					
ANR	928707	Identifier	condor_gethostbyname		928696	2					
ANR	928708	ParameterList	const char * name		928696	3					
ANR	928709	Parameter	const char * name	175:21:5063:5078	928696	0	True				
ANR	928710	ParameterType	const char *		928696	0					
ANR	928711	Identifier	name		928696	1					
ANR	928712	CFGEntryNode	ENTRY		928696		True				
ANR	928713	CFGExitNode	EXIT		928696		True				
ANR	928714	Symbol	name		928696						
ANR	928715	Symbol	condor_gethostbyname_ipv4		928696						
ANR	928716	Function	get_nodns_addr	181:0:5173:5645							
ANR	928717	FunctionDef	get_nodns_addr (const char * addr)		928716	0					
ANR	928718	CompoundStatement		181:49:5222:5645	928716	0					
ANR	928719	Statement	static	182:1:5225:5230	928716	0	True				
ANR	928720	IdentifierDeclStatement	struct hostent hostent ;	182:8:5232:5254	928716	1	True				
ANR	928721	IdentifierDecl	hostent		928716	0					
ANR	928722	IdentifierDeclType	struct hostent		928716	0					
ANR	928723	Identifier	hostent		928716	1					
ANR	928724	Statement	static	183:1:5257:5262	928716	2	True				
ANR	928725	IdentifierDeclStatement	char * h_aliases [ 1 ] = { NULL } ;	183:8:5264:5291	928716	3	True				
ANR	928726	IdentifierDecl	* h_aliases [ 1 ] = { NULL }		928716	0					
ANR	928727	IdentifierDeclType	char * [ 1 ]		928716	0					
ANR	928728	Identifier	h_aliases		928716	1					
ANR	928729	PrimaryExpression	1		928716	2					
ANR	928730	AssignmentExpression	* h_aliases [ 1 ] = { NULL }		928716	3		=			
ANR	928731	Identifier	h_aliases		928716	0					
ANR	928732	InitializerList	NULL		928716	1					
ANR	928733	Identifier	NULL		928716	0					
ANR	928734	Statement	static	184:1:5294:5299	928716	4	True				
ANR	928735	IdentifierDeclStatement	char h_name [ NI_MAXHOST ] ;	184:8:5301:5324	928716	5	True				
ANR	928736	IdentifierDecl	h_name [ NI_MAXHOST ]		928716	0					
ANR	928737	IdentifierDeclType	char [ NI_MAXHOST ]		928716	0					
ANR	928738	Identifier	h_name		928716	1					
ANR	928739	Identifier	NI_MAXHOST		928716	2					
ANR	928740	IfStatement	"if ( convert_ip_to_hostname ( addr , h_name , MAXHOSTNAMELEN ) )"		928716	6					
ANR	928741	Condition	"convert_ip_to_hostname ( addr , h_name , MAXHOSTNAMELEN )"	186:6:5366:5417	928716	0	True				
ANR	928742	CallExpression	"convert_ip_to_hostname ( addr , h_name , MAXHOSTNAMELEN )"		928716	0					
ANR	928743	Callee	convert_ip_to_hostname		928716	0					
ANR	928744	Identifier	convert_ip_to_hostname		928716	0					
ANR	928745	ArgumentList	addr		928716	1					
ANR	928746	Argument	addr		928716	0					
ANR	928747	Identifier	addr		928716	0					
ANR	928748	Argument	h_name		928716	1					
ANR	928749	Identifier	h_name		928716	0					
ANR	928750	Argument	MAXHOSTNAMELEN		928716	2					
ANR	928751	Identifier	MAXHOSTNAMELEN		928716	0					
ANR	928752	CompoundStatement		6:60:197:197	928716	1					
ANR	928753	ReturnStatement	return NULL ;	188:3:5445:5456	928716	0	True				
ANR	928754	Identifier	NULL		928716	0					
ANR	928755	ElseStatement	else		928716	0					
ANR	928756	CompoundStatement		9:9:244:244	928716	0					
ANR	928757	ExpressionStatement	hostent . h_name = h_name	190:3:5472:5495	928716	0	True				
ANR	928758	AssignmentExpression	hostent . h_name = h_name		928716	0		=			
ANR	928759	MemberAccess	hostent . h_name		928716	0					
ANR	928760	Identifier	hostent		928716	0					
ANR	928761	Identifier	h_name		928716	1					
ANR	928762	Identifier	h_name		928716	1					
ANR	928763	ExpressionStatement	hostent . h_aliases = h_aliases	191:3:5500:5529	928716	1	True				
ANR	928764	AssignmentExpression	hostent . h_aliases = h_aliases		928716	0		=			
ANR	928765	MemberAccess	hostent . h_aliases		928716	0					
ANR	928766	Identifier	hostent		928716	0					
ANR	928767	Identifier	h_aliases		928716	1					
ANR	928768	Identifier	h_aliases		928716	1					
ANR	928769	ExpressionStatement	hostent . h_addrtype = AF_INET	192:3:5534:5562	928716	2	True				
ANR	928770	AssignmentExpression	hostent . h_addrtype = AF_INET		928716	0		=			
ANR	928771	MemberAccess	hostent . h_addrtype		928716	0					
ANR	928772	Identifier	hostent		928716	0					
ANR	928773	Identifier	h_addrtype		928716	1					
ANR	928774	Identifier	AF_INET		928716	1					
ANR	928775	ExpressionStatement	hostent . h_length = 0	193:3:5567:5587	928716	3	True				
ANR	928776	AssignmentExpression	hostent . h_length = 0		928716	0		=			
ANR	928777	MemberAccess	hostent . h_length		928716	0					
ANR	928778	Identifier	hostent		928716	0					
ANR	928779	Identifier	h_length		928716	1					
ANR	928780	PrimaryExpression	0		928716	1					
ANR	928781	ExpressionStatement	hostent . h_addr_list = NULL	194:3:5592:5618	928716	4	True				
ANR	928782	AssignmentExpression	hostent . h_addr_list = NULL		928716	0		=			
ANR	928783	MemberAccess	hostent . h_addr_list		928716	0					
ANR	928784	Identifier	hostent		928716	0					
ANR	928785	Identifier	h_addr_list		928716	1					
ANR	928786	Identifier	NULL		928716	1					
ANR	928787	ReturnStatement	return & hostent ;	196:3:5624:5639	928716	5	True				
ANR	928788	UnaryOperationExpression	& hostent		928716	0					
ANR	928789	UnaryOperator	&		928716	0					
ANR	928790	Identifier	hostent		928716	1					
ANR	928791	ReturnType	struct hostent *		928716	1					
ANR	928792	Identifier	get_nodns_addr		928716	2					
ANR	928793	ParameterList	const char * addr		928716	3					
ANR	928794	Parameter	const char * addr	181:31:5204:5219	928716	0	True				
ANR	928795	ParameterType	const char *		928716	0					
ANR	928796	Identifier	addr		928716	1					
ANR	928797	CFGEntryNode	ENTRY		928716		True				
ANR	928798	CFGExitNode	EXIT		928716		True				
ANR	928799	Symbol	convert_ip_to_hostname		928716						
ANR	928800	Symbol	NULL		928716						
ANR	928801	Symbol	& hostent		928716						
ANR	928802	Symbol	h_name		928716						
ANR	928803	Symbol	hostent . h_addrtype		928716						
ANR	928804	Symbol	hostent . h_name		928716						
ANR	928805	Symbol	hostent . h_aliases		928716						
ANR	928806	Symbol	AF_INET		928716						
ANR	928807	Symbol	hostent . h_length		928716						
ANR	928808	Symbol	MAXHOSTNAMELEN		928716						
ANR	928809	Symbol	hostent . h_addr_list		928716						
ANR	928810	Symbol	addr		928716						
ANR	928811	Symbol	h_aliases		928716						
ANR	928812	Symbol	hostent		928716						
ANR	928813	Function	condor_gethostbyaddr_ipv4	200:0:5648:5857							
ANR	928814	FunctionDef	"condor_gethostbyaddr_ipv4 (const char * addr , SOCKET_LENGTH_TYPE len , int type)"		928813	0					
ANR	928815	CompoundStatement		201:78:5743:5857	928813	0					
ANR	928816	IfStatement	if ( nodns_enabled ( ) )		928813	0					
ANR	928817	Condition	nodns_enabled ( )	202:5:5750:5764	928813	0	True				
ANR	928818	CallExpression	nodns_enabled ( )		928813	0					
ANR	928819	Callee	nodns_enabled		928813	0					
ANR	928820	Identifier	nodns_enabled		928813	0					
ANR	928821	ArgumentList			928813	1					
ANR	928822	CompoundStatement		2:22:23:23	928813	1					
ANR	928823	ReturnStatement	return get_nodns_addr ( addr ) ;	203:5:5774:5801	928813	0	True				
ANR	928824	CallExpression	get_nodns_addr ( addr )		928813	0					
ANR	928825	Callee	get_nodns_addr		928813	0					
ANR	928826	Identifier	get_nodns_addr		928813	0					
ANR	928827	ArgumentList	addr		928813	1					
ANR	928828	Argument	addr		928813	0					
ANR	928829	Identifier	addr		928813	0					
ANR	928830	ElseStatement	else		928813	0					
ANR	928831	CompoundStatement		4:8:67:67	928813	0					
ANR	928832	ReturnStatement	"return gethostbyaddr ( addr , len , type ) ;"	205:2:5815:5852	928813	0	True				
ANR	928833	CallExpression	"gethostbyaddr ( addr , len , type )"		928813	0					
ANR	928834	Callee	gethostbyaddr		928813	0					
ANR	928835	Identifier	gethostbyaddr		928813	0					
ANR	928836	ArgumentList	addr		928813	1					
ANR	928837	Argument	addr		928813	0					
ANR	928838	Identifier	addr		928813	0					
ANR	928839	Argument	len		928813	1					
ANR	928840	Identifier	len		928813	0					
ANR	928841	Argument	type		928813	2					
ANR	928842	Identifier	type		928813	0					
ANR	928843	ReturnType	struct hostent *		928813	1					
ANR	928844	Identifier	condor_gethostbyaddr_ipv4		928813	2					
ANR	928845	ParameterList	"const char * addr , SOCKET_LENGTH_TYPE len , int type"		928813	3					
ANR	928846	Parameter	const char * addr	201:26:5691:5706	928813	0	True				
ANR	928847	ParameterType	const char *		928813	0					
ANR	928848	Identifier	addr		928813	1					
ANR	928849	Parameter	SOCKET_LENGTH_TYPE len	201:44:5709:5730	928813	1	True				
ANR	928850	ParameterType	SOCKET_LENGTH_TYPE		928813	0					
ANR	928851	Identifier	len		928813	1					
ANR	928852	Parameter	int type	201:68:5733:5740	928813	2	True				
ANR	928853	ParameterType	int		928813	0					
ANR	928854	Identifier	type		928813	1					
ANR	928855	CFGEntryNode	ENTRY		928813		True				
ANR	928856	CFGExitNode	EXIT		928813		True				
ANR	928857	Symbol	len		928813						
ANR	928858	Symbol	gethostbyaddr		928813						
ANR	928859	Symbol	addr		928813						
ANR	928860	Symbol	type		928813						
ANR	928861	Symbol	nodns_enabled		928813						
ANR	928862	Symbol	get_nodns_addr		928813						
ANR	928863	Function	condor_gethostbyaddr_ipv6	210:0:5902:6785							
ANR	928864	FunctionDef	"condor_gethostbyaddr_ipv6 (const char * addr , SOCKET_LENGTH_TYPE len , int type)"		928863	0					
ANR	928865	CompoundStatement		211:78:5997:6785	928863	0					
ANR	928866	IdentifierDeclStatement	char _hostname [ NI_MAXHOST ] ;	212:4:6003:6029	928863	0	True				
ANR	928867	IdentifierDecl	_hostname [ NI_MAXHOST ]		928863	0					
ANR	928868	IdentifierDeclType	char [ NI_MAXHOST ]		928863	0					
ANR	928869	Identifier	_hostname		928863	1					
ANR	928870	Identifier	NI_MAXHOST		928863	2					
ANR	928871	IdentifierDeclStatement	struct sockaddr_in sinaddr ;	213:4:6035:6061	928863	1	True				
ANR	928872	IdentifierDecl	sinaddr		928863	0					
ANR	928873	IdentifierDeclType	struct sockaddr_in		928863	0					
ANR	928874	Identifier	sinaddr		928863	1					
ANR	928875	IdentifierDeclStatement	int e ;	214:4:6067:6072	928863	2	True				
ANR	928876	IdentifierDecl	e		928863	0					
ANR	928877	IdentifierDeclType	int		928863	0					
ANR	928878	Identifier	e		928863	1					
ANR	928879	IfStatement	if ( type != AF_INET || type != PF_INET )		928863	3					
ANR	928880	Condition	type != AF_INET || type != PF_INET	216:8:6083:6116	928863	0	True				
ANR	928881	OrExpression	type != AF_INET || type != PF_INET		928863	0		||			
ANR	928882	EqualityExpression	type != AF_INET		928863	0		!=			
ANR	928883	Identifier	type		928863	0					
ANR	928884	Identifier	AF_INET		928863	1					
ANR	928885	EqualityExpression	type != PF_INET		928863	1		!=			
ANR	928886	Identifier	type		928863	0					
ANR	928887	Identifier	PF_INET		928863	1					
ANR	928888	CompoundStatement		6:44:121:121	928863	1					
ANR	928889	ReturnStatement	"return condor_gethostbyaddr_ipv4 ( addr , len , type ) ;"	218:8:6149:6198	928863	0	True				
ANR	928890	CallExpression	"condor_gethostbyaddr_ipv4 ( addr , len , type )"		928863	0					
ANR	928891	Callee	condor_gethostbyaddr_ipv4		928863	0					
ANR	928892	Identifier	condor_gethostbyaddr_ipv4		928863	0					
ANR	928893	ArgumentList	addr		928863	1					
ANR	928894	Argument	addr		928863	0					
ANR	928895	Identifier	addr		928863	0					
ANR	928896	Argument	len		928863	1					
ANR	928897	Identifier	len		928863	0					
ANR	928898	Argument	type		928863	2					
ANR	928899	Identifier	type		928863	0					
ANR	928900	IfStatement	if ( nodns_enabled ( ) )		928863	4					
ANR	928901	Condition	nodns_enabled ( )	221:5:6212:6226	928863	0	True				
ANR	928902	CallExpression	nodns_enabled ( )		928863	0					
ANR	928903	Callee	nodns_enabled		928863	0					
ANR	928904	Identifier	nodns_enabled		928863	0					
ANR	928905	ArgumentList			928863	1					
ANR	928906	CompoundStatement		11:22:231:231	928863	1					
ANR	928907	ReturnStatement	return get_nodns_addr ( addr ) ;	222:5:6236:6263	928863	0	True				
ANR	928908	CallExpression	get_nodns_addr ( addr )		928863	0					
ANR	928909	Callee	get_nodns_addr		928863	0					
ANR	928910	Identifier	get_nodns_addr		928863	0					
ANR	928911	ArgumentList	addr		928863	1					
ANR	928912	Argument	addr		928863	0					
ANR	928913	Identifier	addr		928863	0					
ANR	928914	ExpressionStatement	"memset ( & sinaddr , 0 , sizeof ( sinaddr ) )"	225:1:6270:6306	928863	5	True				
ANR	928915	CallExpression	"memset ( & sinaddr , 0 , sizeof ( sinaddr ) )"		928863	0					
ANR	928916	Callee	memset		928863	0					
ANR	928917	Identifier	memset		928863	0					
ANR	928918	ArgumentList	& sinaddr		928863	1					
ANR	928919	Argument	& sinaddr		928863	0					
ANR	928920	UnaryOperationExpression	& sinaddr		928863	0					
ANR	928921	UnaryOperator	&		928863	0					
ANR	928922	Identifier	sinaddr		928863	1					
ANR	928923	Argument	0		928863	1					
ANR	928924	PrimaryExpression	0		928863	0					
ANR	928925	Argument	sizeof ( sinaddr )		928863	2					
ANR	928926	SizeofExpression	sizeof ( sinaddr )		928863	0					
ANR	928927	Sizeof	sizeof		928863	0					
ANR	928928	SizeofOperand	sinaddr		928863	1					
ANR	928929	ExpressionStatement	sinaddr . sin_family = type	226:1:6309:6334	928863	6	True				
ANR	928930	AssignmentExpression	sinaddr . sin_family = type		928863	0		=			
ANR	928931	MemberAccess	sinaddr . sin_family		928863	0					
ANR	928932	Identifier	sinaddr		928863	0					
ANR	928933	Identifier	sin_family		928863	1					
ANR	928934	Identifier	type		928863	1					
ANR	928935	ExpressionStatement	sinaddr . sin_addr = * ( const struct in_addr * ) addr	227:1:6337:6384	928863	7	True				
ANR	928936	AssignmentExpression	sinaddr . sin_addr = * ( const struct in_addr * ) addr		928863	0		=			
ANR	928937	MemberAccess	sinaddr . sin_addr		928863	0					
ANR	928938	Identifier	sinaddr		928863	0					
ANR	928939	Identifier	sin_addr		928863	1					
ANR	928940	UnaryOperationExpression	* ( const struct in_addr * ) addr		928863	1					
ANR	928941	UnaryOperator	*		928863	0					
ANR	928942	CastExpression	( const struct in_addr * ) addr		928863	1					
ANR	928943	CastTarget	const struct in_addr *		928863	0					
ANR	928944	Identifier	addr		928863	1					
ANR	928945	ExpressionStatement	sinaddr . sin_len = sizeof ( struct sockaddr_in )	230:1:6427:6471	928863	8	True				
ANR	928946	AssignmentExpression	sinaddr . sin_len = sizeof ( struct sockaddr_in )		928863	0		=			
ANR	928947	MemberAccess	sinaddr . sin_len		928863	0					
ANR	928948	Identifier	sinaddr		928863	0					
ANR	928949	Identifier	sin_len		928863	1					
ANR	928950	SizeofExpression	sizeof ( struct sockaddr_in )		928863	1					
ANR	928951	Sizeof	sizeof		928863	0					
ANR	928952	SizeofOperand	struct sockaddr_in		928863	1					
ANR	928953	ExpressionStatement	"e = getnameinfo ( ( const struct sockaddr * ) & sinaddr , sizeof ( sinaddr ) , _hostname , sizeof ( _hostname ) , NULL , 0 , 0 )"	233:1:6482:6590	928863	9	True				
ANR	928954	AssignmentExpression	"e = getnameinfo ( ( const struct sockaddr * ) & sinaddr , sizeof ( sinaddr ) , _hostname , sizeof ( _hostname ) , NULL , 0 , 0 )"		928863	0		=			
ANR	928955	Identifier	e		928863	0					
ANR	928956	CallExpression	"getnameinfo ( ( const struct sockaddr * ) & sinaddr , sizeof ( sinaddr ) , _hostname , sizeof ( _hostname ) , NULL , 0 , 0 )"		928863	1					
ANR	928957	Callee	getnameinfo		928863	0					
ANR	928958	Identifier	getnameinfo		928863	0					
ANR	928959	ArgumentList	( const struct sockaddr * ) & sinaddr		928863	1					
ANR	928960	Argument	( const struct sockaddr * ) & sinaddr		928863	0					
ANR	928961	CastExpression	( const struct sockaddr * ) & sinaddr		928863	0					
ANR	928962	CastTarget	const struct sockaddr *		928863	0					
ANR	928963	UnaryOperationExpression	& sinaddr		928863	1					
ANR	928964	UnaryOperator	&		928863	0					
ANR	928965	Identifier	sinaddr		928863	1					
ANR	928966	Argument	sizeof ( sinaddr )		928863	1					
ANR	928967	SizeofExpression	sizeof ( sinaddr )		928863	0					
ANR	928968	Sizeof	sizeof		928863	0					
ANR	928969	SizeofOperand	sinaddr		928863	1					
ANR	928970	Argument	_hostname		928863	2					
ANR	928971	Identifier	_hostname		928863	0					
ANR	928972	Argument	sizeof ( _hostname )		928863	3					
ANR	928973	SizeofExpression	sizeof ( _hostname )		928863	0					
ANR	928974	Sizeof	sizeof		928863	0					
ANR	928975	SizeofOperand	_hostname		928863	1					
ANR	928976	Argument	NULL		928863	4					
ANR	928977	Identifier	NULL		928863	0					
ANR	928978	Argument	0		928863	5					
ANR	928979	PrimaryExpression	0		928863	0					
ANR	928980	Argument	0		928863	6					
ANR	928981	PrimaryExpression	0		928863	0					
ANR	928982	IfStatement	if ( e != 0 )		928863	10					
ANR	928983	Condition	e != 0	234:5:6597:6602	928863	0	True				
ANR	928984	EqualityExpression	e != 0		928863	0		!=			
ANR	928985	Identifier	e		928863	0					
ANR	928986	PrimaryExpression	0		928863	1					
ANR	928987	ReturnStatement	return NULL ;	235:8:6613:6624	928863	1	True				
ANR	928988	Identifier	NULL		928863	0					
ANR	928989	ReturnStatement	return condor_gethostbyname_ipv6 ( _hostname ) ;	238:4:6740:6783	928863	11	True				
ANR	928990	CallExpression	condor_gethostbyname_ipv6 ( _hostname )		928863	0					
ANR	928991	Callee	condor_gethostbyname_ipv6		928863	0					
ANR	928992	Identifier	condor_gethostbyname_ipv6		928863	0					
ANR	928993	ArgumentList	_hostname		928863	1					
ANR	928994	Argument	_hostname		928863	0					
ANR	928995	Identifier	_hostname		928863	0					
ANR	928996	ReturnType	struct hostent *		928863	1					
ANR	928997	Identifier	condor_gethostbyaddr_ipv6		928863	2					
ANR	928998	ParameterList	"const char * addr , SOCKET_LENGTH_TYPE len , int type"		928863	3					
ANR	928999	Parameter	const char * addr	211:26:5945:5960	928863	0	True				
ANR	929000	ParameterType	const char *		928863	0					
ANR	929001	Identifier	addr		928863	1					
ANR	929002	Parameter	SOCKET_LENGTH_TYPE len	211:44:5963:5984	928863	1	True				
ANR	929003	ParameterType	SOCKET_LENGTH_TYPE		928863	0					
ANR	929004	Identifier	len		928863	1					
ANR	929005	Parameter	int type	211:68:5987:5994	928863	2	True				
ANR	929006	ParameterType	int		928863	0					
ANR	929007	Identifier	type		928863	1					
ANR	929008	CFGEntryNode	ENTRY		928863		True				
ANR	929009	CFGExitNode	EXIT		928863		True				
ANR	929010	Symbol	NULL		928863						
ANR	929011	Symbol	e		928863						
ANR	929012	Symbol	sinaddr . sin_family		928863						
ANR	929013	Symbol	condor_gethostbyname_ipv6		928863						
ANR	929014	Symbol	AF_INET		928863						
ANR	929015	Symbol	type		928863						
ANR	929016	Symbol	& sinaddr		928863						
ANR	929017	Symbol	getnameinfo		928863						
ANR	929018	Symbol	len		928863						
ANR	929019	Symbol	_hostname		928863						
ANR	929020	Symbol	sinaddr . sin_len		928863						
ANR	929021	Symbol	sinaddr . sin_addr		928863						
ANR	929022	Symbol	* addr		928863						
ANR	929023	Symbol	addr		928863						
ANR	929024	Symbol	sinaddr		928863						
ANR	929025	Symbol	nodns_enabled		928863						
ANR	929026	Symbol	* ( const struct in_addr * ) addr		928863						
ANR	929027	Symbol	PF_INET		928863						
ANR	929028	Symbol	condor_gethostbyaddr_ipv4		928863						
ANR	929029	Symbol	get_nodns_addr		928863						
ANR	929030	Function	condor_gethostbyaddr	241:0:6788:6978							
ANR	929031	FunctionDef	"condor_gethostbyaddr (const char * addr , SOCKET_LENGTH_TYPE len , int type)"		929030	0					
ANR	929032	CompoundStatement		242:73:6878:6978	929030	0					
ANR	929033	ReturnStatement	"return condor_gethostbyaddr_ipv4 ( addr , len , type ) ;"	244:4:6927:6976	929030	0	True				
ANR	929034	CallExpression	"condor_gethostbyaddr_ipv4 ( addr , len , type )"		929030	0					
ANR	929035	Callee	condor_gethostbyaddr_ipv4		929030	0					
ANR	929036	Identifier	condor_gethostbyaddr_ipv4		929030	0					
ANR	929037	ArgumentList	addr		929030	1					
ANR	929038	Argument	addr		929030	0					
ANR	929039	Identifier	addr		929030	0					
ANR	929040	Argument	len		929030	1					
ANR	929041	Identifier	len		929030	0					
ANR	929042	Argument	type		929030	2					
ANR	929043	Identifier	type		929030	0					
ANR	929044	ReturnType	struct hostent *		929030	1					
ANR	929045	Identifier	condor_gethostbyaddr		929030	2					
ANR	929046	ParameterList	"const char * addr , SOCKET_LENGTH_TYPE len , int type"		929030	3					
ANR	929047	Parameter	const char * addr	242:21:6826:6841	929030	0	True				
ANR	929048	ParameterType	const char *		929030	0					
ANR	929049	Identifier	addr		929030	1					
ANR	929050	Parameter	SOCKET_LENGTH_TYPE len	242:39:6844:6865	929030	1	True				
ANR	929051	ParameterType	SOCKET_LENGTH_TYPE		929030	0					
ANR	929052	Identifier	len		929030	1					
ANR	929053	Parameter	int type	242:63:6868:6875	929030	2	True				
ANR	929054	ParameterType	int		929030	0					
ANR	929055	Identifier	type		929030	1					
ANR	929056	CFGEntryNode	ENTRY		929030		True				
ANR	929057	CFGExitNode	EXIT		929030		True				
ANR	929058	Symbol	len		929030						
ANR	929059	Symbol	addr		929030						
ANR	929060	Symbol	type		929030						
ANR	929061	Symbol	condor_gethostbyaddr_ipv4		929030						
ANR	929062	Function	condor_gethostname	247:0:6981:10918							
ANR	929063	FunctionDef	"condor_gethostname (char * name , size_t namelen)"		929062	0					
ANR	929064	CompoundStatement		248:47:7032:10918	929062	0					
ANR	929065	IfStatement	if ( nodns_enabled ( ) )		929062	0					
ANR	929066	Condition	nodns_enabled ( )	250:5:7040:7054	929062	0	True				
ANR	929067	CallExpression	nodns_enabled ( )		929062	0					
ANR	929068	Callee	nodns_enabled		929062	0					
ANR	929069	Identifier	nodns_enabled		929062	0					
ANR	929070	ArgumentList			929062	1					
ANR	929071	CompoundStatement		6:2:57:72	929062	1					
ANR	929072	IdentifierDeclStatement	char tmp [ MAXHOSTNAMELEN ] ;	252:2:7062:7086	929062	0	True				
ANR	929073	IdentifierDecl	tmp [ MAXHOSTNAMELEN ]		929062	0					
ANR	929074	IdentifierDeclType	char [ MAXHOSTNAMELEN ]		929062	0					
ANR	929075	Identifier	tmp		929062	1					
ANR	929076	Identifier	MAXHOSTNAMELEN		929062	2					
ANR	929077	IdentifierDeclStatement	char * param_buf ;	253:2:7090:7105	929062	1	True				
ANR	929078	IdentifierDecl	* param_buf		929062	0					
ANR	929079	IdentifierDeclType	char *		929062	0					
ANR	929080	Identifier	param_buf		929062	1					
ANR	929081	IfStatement	"if ( ( param_buf = param ( ""NETWORK_INTERFACE"" ) ) )"		929062	2					
ANR	929082	Condition	"param_buf = param ( ""NETWORK_INTERFACE"" )"	256:7:7153:7194	929062	0	True				
ANR	929083	AssignmentExpression	"param_buf = param ( ""NETWORK_INTERFACE"" )"		929062	0		=			
ANR	929084	Identifier	param_buf		929062	0					
ANR	929085	CallExpression	"param ( ""NETWORK_INTERFACE"" )"		929062	1					
ANR	929086	Callee	param		929062	0					
ANR	929087	Identifier	param		929062	0					
ANR	929088	ArgumentList	"""NETWORK_INTERFACE"""		929062	1					
ANR	929089	Argument	"""NETWORK_INTERFACE"""		929062	0					
ANR	929090	PrimaryExpression	"""NETWORK_INTERFACE"""		929062	0					
ANR	929091	CompoundStatement		28:3:628:680	929062	1					
ANR	929092	IdentifierDeclStatement	char ip_str [ MAXHOSTNAMELEN ] ;	257:3:7203:7230	929062	0	True				
ANR	929093	IdentifierDecl	ip_str [ MAXHOSTNAMELEN ]		929062	0					
ANR	929094	IdentifierDeclType	char [ MAXHOSTNAMELEN ]		929062	0					
ANR	929095	Identifier	ip_str		929062	1					
ANR	929096	Identifier	MAXHOSTNAMELEN		929062	2					
ANR	929097	IdentifierDeclStatement	condor_sockaddr addr ;	260:3:7294:7314	929062	1	True				
ANR	929098	IdentifierDecl	addr		929062	0					
ANR	929099	IdentifierDeclType	condor_sockaddr		929062	0					
ANR	929100	Identifier	addr		929062	1					
ANR	929101	Statement	dprintf	262:3:7320:7326	929062	2	True				
ANR	929102	Statement	(	262:10:7327:7327	929062	3	True				
ANR	929103	Statement	D_HOSTNAME	262:12:7329:7338	929062	4	True				
ANR	929104	Statement	","	262:22:7339:7339	929062	5	True				
ANR	929105	Statement	"""NO_DNS: Using NETWORK_INTERFACE='%s' """	262:24:7341:7379	929062	6	True				
ANR	929106	Statement	"""to determine hostname\\n"""	263:6:7387:7411	929062	7	True				
ANR	929107	Statement	","	263:31:7412:7412	929062	8	True				
ANR	929108	Statement	param_buf	263:33:7414:7422	929062	9	True				
ANR	929109	Statement	)	263:43:7424:7424	929062	10	True				
ANR	929110	ExpressionStatement		263:44:7425:7425	929062	11	True				
ANR	929111	ExpressionStatement	"snprintf ( ip_str , MAXHOSTNAMELEN , ""%s"" , param_buf )"	265:3:7431:7482	929062	12	True				
ANR	929112	CallExpression	"snprintf ( ip_str , MAXHOSTNAMELEN , ""%s"" , param_buf )"		929062	0					
ANR	929113	Callee	snprintf		929062	0					
ANR	929114	Identifier	snprintf		929062	0					
ANR	929115	ArgumentList	ip_str		929062	1					
ANR	929116	Argument	ip_str		929062	0					
ANR	929117	Identifier	ip_str		929062	0					
ANR	929118	Argument	MAXHOSTNAMELEN		929062	1					
ANR	929119	Identifier	MAXHOSTNAMELEN		929062	0					
ANR	929120	Argument	"""%s"""		929062	2					
ANR	929121	PrimaryExpression	"""%s"""		929062	0					
ANR	929122	Argument	param_buf		929062	3					
ANR	929123	Identifier	param_buf		929062	0					
ANR	929124	ExpressionStatement	free ( param_buf )	266:3:7487:7504	929062	13	True				
ANR	929125	CallExpression	free ( param_buf )		929062	0					
ANR	929126	Callee	free		929062	0					
ANR	929127	Identifier	free		929062	0					
ANR	929128	ArgumentList	param_buf		929062	1					
ANR	929129	Argument	param_buf		929062	0					
ANR	929130	Identifier	param_buf		929062	0					
ANR	929131	IfStatement	if ( ! addr . from_ip_string ( ip_str ) )		929062	14					
ANR	929132	Condition	! addr . from_ip_string ( ip_str )	268:7:7514:7541	929062	0	True				
ANR	929133	UnaryOperationExpression	! addr . from_ip_string ( ip_str )		929062	0					
ANR	929134	UnaryOperator	!		929062	0					
ANR	929135	CallExpression	addr . from_ip_string ( ip_str )		929062	1					
ANR	929136	Callee	addr . from_ip_string		929062	0					
ANR	929137	MemberAccess	addr . from_ip_string		929062	0					
ANR	929138	Identifier	addr		929062	0					
ANR	929139	Identifier	from_ip_string		929062	1					
ANR	929140	ArgumentList	ip_str		929062	1					
ANR	929141	Argument	ip_str		929062	0					
ANR	929142	Identifier	ip_str		929062	0					
ANR	929143	CompoundStatement		21:37:511:511	929062	1					
ANR	929144	ExpressionStatement	"dprintf ( D_HOSTNAME , ""NO_DNS: NETWORK_INTERFACE is invalid: %s\\n"" , ip_str )"	269:4:7550:7635	929062	0	True				
ANR	929145	CallExpression	"dprintf ( D_HOSTNAME , ""NO_DNS: NETWORK_INTERFACE is invalid: %s\\n"" , ip_str )"		929062	0					
ANR	929146	Callee	dprintf		929062	0					
ANR	929147	Identifier	dprintf		929062	0					
ANR	929148	ArgumentList	D_HOSTNAME		929062	1					
ANR	929149	Argument	D_HOSTNAME		929062	0					
ANR	929150	Identifier	D_HOSTNAME		929062	0					
ANR	929151	Argument	"""NO_DNS: NETWORK_INTERFACE is invalid: %s\\n"""		929062	1					
ANR	929152	PrimaryExpression	"""NO_DNS: NETWORK_INTERFACE is invalid: %s\\n"""		929062	0					
ANR	929153	Argument	ip_str		929062	2					
ANR	929154	Identifier	ip_str		929062	0					
ANR	929155	ReturnStatement	return - 1 ;	272:4:7641:7650	929062	1	True				
ANR	929156	UnaryOperationExpression	- 1		929062	0					
ANR	929157	UnaryOperator	-		929062	0					
ANR	929158	PrimaryExpression	1		929062	1					
ANR	929159	IdentifierDeclStatement	MyString hostname = convert_ipaddr_to_hostname ( addr ) ;	275:3:7661:7713	929062	15	True				
ANR	929160	IdentifierDecl	hostname = convert_ipaddr_to_hostname ( addr )		929062	0					
ANR	929161	IdentifierDeclType	MyString		929062	0					
ANR	929162	Identifier	hostname		929062	1					
ANR	929163	AssignmentExpression	hostname = convert_ipaddr_to_hostname ( addr )		929062	2		=			
ANR	929164	Identifier	hostname		929062	0					
ANR	929165	CallExpression	convert_ipaddr_to_hostname ( addr )		929062	1					
ANR	929166	Callee	convert_ipaddr_to_hostname		929062	0					
ANR	929167	Identifier	convert_ipaddr_to_hostname		929062	0					
ANR	929168	ArgumentList	addr		929062	1					
ANR	929169	Argument	addr		929062	0					
ANR	929170	Identifier	addr		929062	0					
ANR	929171	IfStatement	if ( hostname . Length ( ) >= namelen )		929062	16					
ANR	929172	Condition	hostname . Length ( ) >= namelen	276:7:7722:7749	929062	0	True				
ANR	929173	RelationalExpression	hostname . Length ( ) >= namelen		929062	0		>=			
ANR	929174	CallExpression	hostname . Length ( )		929062	0					
ANR	929175	Callee	hostname . Length		929062	0					
ANR	929176	MemberAccess	hostname . Length		929062	0					
ANR	929177	Identifier	hostname		929062	0					
ANR	929178	Identifier	Length		929062	1					
ANR	929179	ArgumentList			929062	1					
ANR	929180	Identifier	namelen		929062	1					
ANR	929181	CompoundStatement		29:37:719:719	929062	1					
ANR	929182	ReturnStatement	return - 1 ;	277:4:7758:7767	929062	0	True				
ANR	929183	UnaryOperationExpression	- 1		929062	0					
ANR	929184	UnaryOperator	-		929062	0					
ANR	929185	PrimaryExpression	1		929062	1					
ANR	929186	ExpressionStatement	"strcpy ( name , hostname . Value ( ) )"	279:3:7777:7807	929062	17	True				
ANR	929187	CallExpression	"strcpy ( name , hostname . Value ( ) )"		929062	0					
ANR	929188	Callee	strcpy		929062	0					
ANR	929189	Identifier	strcpy		929062	0					
ANR	929190	ArgumentList	name		929062	1					
ANR	929191	Argument	name		929062	0					
ANR	929192	Identifier	name		929062	0					
ANR	929193	Argument	hostname . Value ( )		929062	1					
ANR	929194	CallExpression	hostname . Value ( )		929062	0					
ANR	929195	Callee	hostname . Value		929062	0					
ANR	929196	MemberAccess	hostname . Value		929062	0					
ANR	929197	Identifier	hostname		929062	0					
ANR	929198	Identifier	Value		929062	1					
ANR	929199	ArgumentList			929062	1					
ANR	929200	ReturnStatement	return 0 ;	280:3:7812:7820	929062	18	True				
ANR	929201	PrimaryExpression	0		929062	0					
ANR	929202	IfStatement	"if ( ( param_buf = param ( ""COLLECTOR_HOST"" ) ) )"		929062	3					
ANR	929203	Condition	"param_buf = param ( ""COLLECTOR_HOST"" )"	291:7:8207:8245	929062	0	True				
ANR	929204	AssignmentExpression	"param_buf = param ( ""COLLECTOR_HOST"" )"		929062	0		=			
ANR	929205	Identifier	param_buf		929062	0					
ANR	929206	CallExpression	"param ( ""COLLECTOR_HOST"" )"		929062	1					
ANR	929207	Callee	param		929062	0					
ANR	929208	Identifier	param		929062	0					
ANR	929209	ArgumentList	"""COLLECTOR_HOST"""		929062	1					
ANR	929210	Argument	"""COLLECTOR_HOST"""		929062	0					
ANR	929211	PrimaryExpression	"""COLLECTOR_HOST"""		929062	0					
ANR	929212	CompoundStatement		104:3:2875:2927	929062	1					
ANR	929213	IdentifierDeclStatement	int s ;	294:3:8291:8296	929062	0	True				
ANR	929214	IdentifierDecl	s		929062	0					
ANR	929215	IdentifierDeclType	int		929062	0					
ANR	929216	Identifier	s		929062	1					
ANR	929217	IdentifierDeclStatement	char collector_host [ MAXHOSTNAMELEN ] ;	296:3:8335:8370	929062	1	True				
ANR	929218	IdentifierDecl	collector_host [ MAXHOSTNAMELEN ]		929062	0					
ANR	929219	IdentifierDeclType	char [ MAXHOSTNAMELEN ]		929062	0					
ANR	929220	Identifier	collector_host		929062	1					
ANR	929221	Identifier	MAXHOSTNAMELEN		929062	2					
ANR	929222	IdentifierDeclStatement	char * idx ;	297:3:8375:8384	929062	2	True				
ANR	929223	IdentifierDecl	* idx		929062	0					
ANR	929224	IdentifierDeclType	char *		929062	0					
ANR	929225	Identifier	idx		929062	1					
ANR	929226	IdentifierDeclStatement	condor_sockaddr collector_addr ;	299:3:8435:8465	929062	3	True				
ANR	929227	IdentifierDecl	collector_addr		929062	0					
ANR	929228	IdentifierDeclType	condor_sockaddr		929062	0					
ANR	929229	Identifier	collector_addr		929062	1					
ANR	929230	IdentifierDeclStatement	condor_sockaddr addr ;	300:3:8470:8490	929062	4	True				
ANR	929231	IdentifierDecl	addr		929062	0					
ANR	929232	IdentifierDeclType	condor_sockaddr		929062	0					
ANR	929233	Identifier	addr		929062	1					
ANR	929234	IdentifierDeclStatement	std :: vector < condor_sockaddr > collector_addrs ;	301:3:8495:8539	929062	5	True				
ANR	929235	IdentifierDecl	collector_addrs		929062	0					
ANR	929236	IdentifierDeclType	std :: vector < condor_sockaddr >		929062	0					
ANR	929237	Identifier	collector_addrs		929062	1					
ANR	929238	Statement	dprintf	303:3:8545:8551	929062	6	True				
ANR	929239	Statement	(	303:10:8552:8552	929062	7	True				
ANR	929240	Statement	D_HOSTNAME	303:12:8554:8563	929062	8	True				
ANR	929241	Statement	","	303:22:8564:8564	929062	9	True				
ANR	929242	Statement	"""NO_DNS: Using COLLECTOR_HOST='%s' """	303:24:8566:8601	929062	10	True				
ANR	929243	Statement	"""to determine hostname\\n"""	304:6:8609:8633	929062	11	True				
ANR	929244	Statement	","	304:31:8634:8634	929062	12	True				
ANR	929245	Statement	param_buf	304:33:8636:8644	929062	13	True				
ANR	929246	Statement	)	304:43:8646:8646	929062	14	True				
ANR	929247	ExpressionStatement		304:44:8647:8647	929062	15	True				
ANR	929248	IfStatement	"if ( ( idx = index ( param_buf , ':' ) ) )"		929062	16					
ANR	929249	Condition	"idx = index ( param_buf , ':' )"	307:7:8712:8740	929062	0	True				
ANR	929250	AssignmentExpression	"idx = index ( param_buf , ':' )"		929062	0		=			
ANR	929251	Identifier	idx		929062	0					
ANR	929252	CallExpression	"index ( param_buf , ':' )"		929062	1					
ANR	929253	Callee	index		929062	0					
ANR	929254	Identifier	index		929062	0					
ANR	929255	ArgumentList	param_buf		929062	1					
ANR	929256	Argument	param_buf		929062	0					
ANR	929257	Identifier	param_buf		929062	0					
ANR	929258	Argument	':'		929062	1					
ANR	929259	PrimaryExpression	':'		929062	0					
ANR	929260	CompoundStatement		60:38:1710:1710	929062	1					
ANR	929261	ExpressionStatement	* idx = '\\0'	308:4:8749:8760	929062	0	True				
ANR	929262	AssignmentExpression	* idx = '\\0'		929062	0		=			
ANR	929263	UnaryOperationExpression	* idx		929062	0					
ANR	929264	UnaryOperator	*		929062	0					
ANR	929265	Identifier	idx		929062	1					
ANR	929266	PrimaryExpression	'\\0'		929062	1					
ANR	929267	ExpressionStatement	"snprintf ( collector_host , MAXHOSTNAMELEN , ""%s"" , param_buf )"	310:3:8770:8829	929062	17	True				
ANR	929268	CallExpression	"snprintf ( collector_host , MAXHOSTNAMELEN , ""%s"" , param_buf )"		929062	0					
ANR	929269	Callee	snprintf		929062	0					
ANR	929270	Identifier	snprintf		929062	0					
ANR	929271	ArgumentList	collector_host		929062	1					
ANR	929272	Argument	collector_host		929062	0					
ANR	929273	Identifier	collector_host		929062	0					
ANR	929274	Argument	MAXHOSTNAMELEN		929062	1					
ANR	929275	Identifier	MAXHOSTNAMELEN		929062	0					
ANR	929276	Argument	"""%s"""		929062	2					
ANR	929277	PrimaryExpression	"""%s"""		929062	0					
ANR	929278	Argument	param_buf		929062	3					
ANR	929279	Identifier	param_buf		929062	0					
ANR	929280	ExpressionStatement	free ( param_buf )	311:3:8834:8851	929062	18	True				
ANR	929281	CallExpression	free ( param_buf )		929062	0					
ANR	929282	Callee	free		929062	0					
ANR	929283	Identifier	free		929062	0					
ANR	929284	ArgumentList	param_buf		929062	1					
ANR	929285	Argument	param_buf		929062	0					
ANR	929286	Identifier	param_buf		929062	0					
ANR	929287	ExpressionStatement	collector_addrs = resolve_hostname ( collector_host )	315:3:8905:8955	929062	19	True				
ANR	929288	AssignmentExpression	collector_addrs = resolve_hostname ( collector_host )		929062	0		=			
ANR	929289	Identifier	collector_addrs		929062	0					
ANR	929290	CallExpression	resolve_hostname ( collector_host )		929062	1					
ANR	929291	Callee	resolve_hostname		929062	0					
ANR	929292	Identifier	resolve_hostname		929062	0					
ANR	929293	ArgumentList	collector_host		929062	1					
ANR	929294	Argument	collector_host		929062	0					
ANR	929295	Identifier	collector_host		929062	0					
ANR	929296	IfStatement	if ( collector_addrs . empty ( ) )		929062	20					
ANR	929297	Condition	collector_addrs . empty ( )	316:7:8964:8986	929062	0	True				
ANR	929298	CallExpression	collector_addrs . empty ( )		929062	0					
ANR	929299	Callee	collector_addrs . empty		929062	0					
ANR	929300	MemberAccess	collector_addrs . empty		929062	0					
ANR	929301	Identifier	collector_addrs		929062	0					
ANR	929302	Identifier	empty		929062	1					
ANR	929303	ArgumentList			929062	1					
ANR	929304	CompoundStatement		69:32:1956:1956	929062	1					
ANR	929305	Statement	dprintf	317:4:8995:9001	929062	0	True				
ANR	929306	Statement	(	317:11:9002:9002	929062	1	True				
ANR	929307	Statement	D_HOSTNAME	317:12:9003:9012	929062	2	True				
ANR	929308	Statement	","	317:22:9013:9013	929062	3	True				
ANR	929309	Statement	"""NO_DNS: Failed to get IP address of collector """	318:6:9021:9068	929062	4	True				
ANR	929310	Statement	"""host '%s'\\n"""	319:6:9076:9088	929062	5	True				
ANR	929311	Statement	","	319:19:9089:9089	929062	6	True				
ANR	929312	Statement	collector_host	319:21:9091:9104	929062	7	True				
ANR	929313	Statement	)	319:35:9105:9105	929062	8	True				
ANR	929314	ExpressionStatement		319:36:9106:9106	929062	9	True				
ANR	929315	ReturnStatement	return - 1 ;	320:4:9112:9121	929062	10	True				
ANR	929316	UnaryOperationExpression	- 1		929062	0					
ANR	929317	UnaryOperator	-		929062	0					
ANR	929318	PrimaryExpression	1		929062	1					
ANR	929319	ExpressionStatement	collector_addr = collector_addrs . front ( )	323:3:9132:9172	929062	21	True				
ANR	929320	AssignmentExpression	collector_addr = collector_addrs . front ( )		929062	0		=			
ANR	929321	Identifier	collector_addr		929062	0					
ANR	929322	CallExpression	collector_addrs . front ( )		929062	1					
ANR	929323	Callee	collector_addrs . front		929062	0					
ANR	929324	MemberAccess	collector_addrs . front		929062	0					
ANR	929325	Identifier	collector_addrs		929062	0					
ANR	929326	Identifier	front		929062	1					
ANR	929327	ArgumentList			929062	1					
ANR	929328	ExpressionStatement	collector_addr . set_port ( 1980 )	324:3:9177:9206	929062	22	True				
ANR	929329	CallExpression	collector_addr . set_port ( 1980 )		929062	0					
ANR	929330	Callee	collector_addr . set_port		929062	0					
ANR	929331	MemberAccess	collector_addr . set_port		929062	0					
ANR	929332	Identifier	collector_addr		929062	0					
ANR	929333	Identifier	set_port		929062	1					
ANR	929334	ArgumentList	1980		929062	1					
ANR	929335	Argument	1980		929062	0					
ANR	929336	PrimaryExpression	1980		929062	0					
ANR	929337	IfStatement	"if ( - 1 == ( s = socket ( collector_addr . get_aftype ( ) , SOCK_DGRAM , 0 ) ) )"		929062	23					
ANR	929338	Condition	"- 1 == ( s = socket ( collector_addr . get_aftype ( ) , SOCK_DGRAM , 0 ) )"	328:7:9321:9393	929062	0	True				
ANR	929339	EqualityExpression	"- 1 == ( s = socket ( collector_addr . get_aftype ( ) , SOCK_DGRAM , 0 ) )"		929062	0		==			
ANR	929340	UnaryOperationExpression	- 1		929062	0					
ANR	929341	UnaryOperator	-		929062	0					
ANR	929342	PrimaryExpression	1		929062	1					
ANR	929343	AssignmentExpression	"s = socket ( collector_addr . get_aftype ( ) , SOCK_DGRAM , 0 )"		929062	1		=			
ANR	929344	Identifier	s		929062	0					
ANR	929345	CallExpression	"socket ( collector_addr . get_aftype ( ) , SOCK_DGRAM , 0 )"		929062	1					
ANR	929346	Callee	socket		929062	0					
ANR	929347	Identifier	socket		929062	0					
ANR	929348	ArgumentList	collector_addr . get_aftype ( )		929062	1					
ANR	929349	Argument	collector_addr . get_aftype ( )		929062	0					
ANR	929350	CallExpression	collector_addr . get_aftype ( )		929062	0					
ANR	929351	Callee	collector_addr . get_aftype		929062	0					
ANR	929352	MemberAccess	collector_addr . get_aftype		929062	0					
ANR	929353	Identifier	collector_addr		929062	0					
ANR	929354	Identifier	get_aftype		929062	1					
ANR	929355	ArgumentList			929062	1					
ANR	929356	Argument	SOCK_DGRAM		929062	1					
ANR	929357	Identifier	SOCK_DGRAM		929062	0					
ANR	929358	Argument	0		929062	2					
ANR	929359	PrimaryExpression	0		929062	0					
ANR	929360	CompoundStatement		82:27:2363:2363	929062	1					
ANR	929361	ExpressionStatement	"dprintf ( D_HOSTNAME , ""NO_DNS: Failed to create socket, errno=%d (%s)\\n"" , errno , strerror ( errno ) )"	330:4:9402:9509	929062	0	True				
ANR	929362	CallExpression	"dprintf ( D_HOSTNAME , ""NO_DNS: Failed to create socket, errno=%d (%s)\\n"" , errno , strerror ( errno ) )"		929062	0					
ANR	929363	Callee	dprintf		929062	0					
ANR	929364	Identifier	dprintf		929062	0					
ANR	929365	ArgumentList	D_HOSTNAME		929062	1					
ANR	929366	Argument	D_HOSTNAME		929062	0					
ANR	929367	Identifier	D_HOSTNAME		929062	0					
ANR	929368	Argument	"""NO_DNS: Failed to create socket, errno=%d (%s)\\n"""		929062	1					
ANR	929369	PrimaryExpression	"""NO_DNS: Failed to create socket, errno=%d (%s)\\n"""		929062	0					
ANR	929370	Argument	errno		929062	2					
ANR	929371	Identifier	errno		929062	0					
ANR	929372	Argument	strerror ( errno )		929062	3					
ANR	929373	CallExpression	strerror ( errno )		929062	0					
ANR	929374	Callee	strerror		929062	0					
ANR	929375	Identifier	strerror		929062	0					
ANR	929376	ArgumentList	errno		929062	1					
ANR	929377	Argument	errno		929062	0					
ANR	929378	Identifier	errno		929062	0					
ANR	929379	ReturnStatement	return - 1 ;	333:4:9515:9524	929062	1	True				
ANR	929380	UnaryOperationExpression	- 1		929062	0					
ANR	929381	UnaryOperator	-		929062	0					
ANR	929382	PrimaryExpression	1		929062	1					
ANR	929383	IfStatement	"if ( condor_connect ( s , collector_addr ) )"		929062	24					
ANR	929384	Condition	"condor_connect ( s , collector_addr )"	336:7:9539:9571	929062	0	True				
ANR	929385	CallExpression	"condor_connect ( s , collector_addr )"		929062	0					
ANR	929386	Callee	condor_connect		929062	0					
ANR	929387	Identifier	condor_connect		929062	0					
ANR	929388	ArgumentList	s		929062	1					
ANR	929389	Argument	s		929062	0					
ANR	929390	Identifier	s		929062	0					
ANR	929391	Argument	collector_addr		929062	1					
ANR	929392	Identifier	collector_addr		929062	0					
ANR	929393	CompoundStatement		89:42:2541:2541	929062	1					
ANR	929394	ExpressionStatement	"perror ( ""connect"" )"	337:4:9580:9597	929062	0	True				
ANR	929395	CallExpression	"perror ( ""connect"" )"		929062	0					
ANR	929396	Callee	perror		929062	0					
ANR	929397	Identifier	perror		929062	0					
ANR	929398	ArgumentList	"""connect"""		929062	1					
ANR	929399	Argument	"""connect"""		929062	0					
ANR	929400	PrimaryExpression	"""connect"""		929062	0					
ANR	929401	ExpressionStatement	"dprintf ( D_HOSTNAME , ""NO_DNS: Failed to bind socket, errno=%d (%s)\\n"" , errno , strerror ( errno ) )"	338:4:9603:9708	929062	1	True				
ANR	929402	CallExpression	"dprintf ( D_HOSTNAME , ""NO_DNS: Failed to bind socket, errno=%d (%s)\\n"" , errno , strerror ( errno ) )"		929062	0					
ANR	929403	Callee	dprintf		929062	0					
ANR	929404	Identifier	dprintf		929062	0					
ANR	929405	ArgumentList	D_HOSTNAME		929062	1					
ANR	929406	Argument	D_HOSTNAME		929062	0					
ANR	929407	Identifier	D_HOSTNAME		929062	0					
ANR	929408	Argument	"""NO_DNS: Failed to bind socket, errno=%d (%s)\\n"""		929062	1					
ANR	929409	PrimaryExpression	"""NO_DNS: Failed to bind socket, errno=%d (%s)\\n"""		929062	0					
ANR	929410	Argument	errno		929062	2					
ANR	929411	Identifier	errno		929062	0					
ANR	929412	Argument	strerror ( errno )		929062	3					
ANR	929413	CallExpression	strerror ( errno )		929062	0					
ANR	929414	Callee	strerror		929062	0					
ANR	929415	Identifier	strerror		929062	0					
ANR	929416	ArgumentList	errno		929062	1					
ANR	929417	Argument	errno		929062	0					
ANR	929418	Identifier	errno		929062	0					
ANR	929419	ReturnStatement	return - 1 ;	341:4:9714:9723	929062	2	True				
ANR	929420	UnaryOperationExpression	- 1		929062	0					
ANR	929421	UnaryOperator	-		929062	0					
ANR	929422	PrimaryExpression	1		929062	1					
ANR	929423	IfStatement	"if ( condor_getsockname ( s , addr ) )"		929062	25					
ANR	929424	Condition	"condor_getsockname ( s , addr )"	344:7:9738:9764	929062	0	True				
ANR	929425	CallExpression	"condor_getsockname ( s , addr )"		929062	0					
ANR	929426	Callee	condor_getsockname		929062	0					
ANR	929427	Identifier	condor_getsockname		929062	0					
ANR	929428	ArgumentList	s		929062	1					
ANR	929429	Argument	s		929062	0					
ANR	929430	Identifier	s		929062	0					
ANR	929431	Argument	addr		929062	1					
ANR	929432	Identifier	addr		929062	0					
ANR	929433	CompoundStatement		97:36:2734:2734	929062	1					
ANR	929434	ExpressionStatement	"dprintf ( D_HOSTNAME , ""NO_DNS: Failed to get socket name, errno=%d (%s)\\n"" , errno , strerror ( errno ) )"	345:4:9773:9882	929062	0	True				
ANR	929435	CallExpression	"dprintf ( D_HOSTNAME , ""NO_DNS: Failed to get socket name, errno=%d (%s)\\n"" , errno , strerror ( errno ) )"		929062	0					
ANR	929436	Callee	dprintf		929062	0					
ANR	929437	Identifier	dprintf		929062	0					
ANR	929438	ArgumentList	D_HOSTNAME		929062	1					
ANR	929439	Argument	D_HOSTNAME		929062	0					
ANR	929440	Identifier	D_HOSTNAME		929062	0					
ANR	929441	Argument	"""NO_DNS: Failed to get socket name, errno=%d (%s)\\n"""		929062	1					
ANR	929442	PrimaryExpression	"""NO_DNS: Failed to get socket name, errno=%d (%s)\\n"""		929062	0					
ANR	929443	Argument	errno		929062	2					
ANR	929444	Identifier	errno		929062	0					
ANR	929445	Argument	strerror ( errno )		929062	3					
ANR	929446	CallExpression	strerror ( errno )		929062	0					
ANR	929447	Callee	strerror		929062	0					
ANR	929448	Identifier	strerror		929062	0					
ANR	929449	ArgumentList	errno		929062	1					
ANR	929450	Argument	errno		929062	0					
ANR	929451	Identifier	errno		929062	0					
ANR	929452	ReturnStatement	return - 1 ;	348:4:9888:9897	929062	1	True				
ANR	929453	UnaryOperationExpression	- 1		929062	0					
ANR	929454	UnaryOperator	-		929062	0					
ANR	929455	PrimaryExpression	1		929062	1					
ANR	929456	IdentifierDeclStatement	MyString hostname = convert_ipaddr_to_hostname ( addr ) ;	351:3:9908:9960	929062	26	True				
ANR	929457	IdentifierDecl	hostname = convert_ipaddr_to_hostname ( addr )		929062	0					
ANR	929458	IdentifierDeclType	MyString		929062	0					
ANR	929459	Identifier	hostname		929062	1					
ANR	929460	AssignmentExpression	hostname = convert_ipaddr_to_hostname ( addr )		929062	2		=			
ANR	929461	Identifier	hostname		929062	0					
ANR	929462	CallExpression	convert_ipaddr_to_hostname ( addr )		929062	1					
ANR	929463	Callee	convert_ipaddr_to_hostname		929062	0					
ANR	929464	Identifier	convert_ipaddr_to_hostname		929062	0					
ANR	929465	ArgumentList	addr		929062	1					
ANR	929466	Argument	addr		929062	0					
ANR	929467	Identifier	addr		929062	0					
ANR	929468	IfStatement	if ( hostname . Length ( ) >= namelen )		929062	27					
ANR	929469	Condition	hostname . Length ( ) >= namelen	352:7:9969:9996	929062	0	True				
ANR	929470	RelationalExpression	hostname . Length ( ) >= namelen		929062	0		>=			
ANR	929471	CallExpression	hostname . Length ( )		929062	0					
ANR	929472	Callee	hostname . Length		929062	0					
ANR	929473	MemberAccess	hostname . Length		929062	0					
ANR	929474	Identifier	hostname		929062	0					
ANR	929475	Identifier	Length		929062	1					
ANR	929476	ArgumentList			929062	1					
ANR	929477	Identifier	namelen		929062	1					
ANR	929478	CompoundStatement		105:37:2966:2966	929062	1					
ANR	929479	ReturnStatement	return - 1 ;	353:4:10005:10014	929062	0	True				
ANR	929480	UnaryOperationExpression	- 1		929062	0					
ANR	929481	UnaryOperator	-		929062	0					
ANR	929482	PrimaryExpression	1		929062	1					
ANR	929483	ExpressionStatement	"strcpy ( name , hostname . Value ( ) )"	355:3:10024:10054	929062	28	True				
ANR	929484	CallExpression	"strcpy ( name , hostname . Value ( ) )"		929062	0					
ANR	929485	Callee	strcpy		929062	0					
ANR	929486	Identifier	strcpy		929062	0					
ANR	929487	ArgumentList	name		929062	1					
ANR	929488	Argument	name		929062	0					
ANR	929489	Identifier	name		929062	0					
ANR	929490	Argument	hostname . Value ( )		929062	1					
ANR	929491	CallExpression	hostname . Value ( )		929062	0					
ANR	929492	Callee	hostname . Value		929062	0					
ANR	929493	MemberAccess	hostname . Value		929062	0					
ANR	929494	Identifier	hostname		929062	0					
ANR	929495	Identifier	Value		929062	1					
ANR	929496	ArgumentList			929062	1					
ANR	929497	ReturnStatement	return 0 ;	356:3:10059:10067	929062	29	True				
ANR	929498	PrimaryExpression	0		929062	0					
ANR	929499	IfStatement	"if ( gethostname ( tmp , MAXHOSTNAMELEN ) == 0 )"		929062	4					
ANR	929500	Condition	"gethostname ( tmp , MAXHOSTNAMELEN ) == 0"	360:7:10114:10152	929062	0	True				
ANR	929501	EqualityExpression	"gethostname ( tmp , MAXHOSTNAMELEN ) == 0"		929062	0		==			
ANR	929502	CallExpression	"gethostname ( tmp , MAXHOSTNAMELEN )"		929062	0					
ANR	929503	Callee	gethostname		929062	0					
ANR	929504	Identifier	gethostname		929062	0					
ANR	929505	ArgumentList	tmp		929062	1					
ANR	929506	Argument	tmp		929062	0					
ANR	929507	Identifier	tmp		929062	0					
ANR	929508	Argument	MAXHOSTNAMELEN		929062	1					
ANR	929509	Identifier	MAXHOSTNAMELEN		929062	0					
ANR	929510	PrimaryExpression	0		929062	1					
ANR	929511	CompoundStatement		131:3:3566:3627	929062	1					
ANR	929512	IdentifierDeclStatement	struct hostent * h_ent ;	362:3:10162:10183	929062	0	True				
ANR	929513	IdentifierDecl	* h_ent		929062	0					
ANR	929514	IdentifierDeclType	struct hostent *		929062	0					
ANR	929515	Identifier	h_ent		929062	1					
ANR	929516	IdentifierDeclStatement	struct in_addr * inaddr ;	363:3:10188:10210	929062	1	True				
ANR	929517	IdentifierDecl	* inaddr		929062	0					
ANR	929518	IdentifierDeclType	struct in_addr *		929062	0					
ANR	929519	Identifier	inaddr		929062	1					
ANR	929520	Statement	dprintf	365:3:10216:10222	929062	2	True				
ANR	929521	Statement	(	365:10:10223:10223	929062	3	True				
ANR	929522	Statement	D_HOSTNAME	365:12:10225:10234	929062	4	True				
ANR	929523	Statement	","	365:22:10235:10235	929062	5	True				
ANR	929524	Statement	"""NO_DNS: Using gethostname()='%s' """	365:24:10237:10271	929062	6	True				
ANR	929525	Statement	"""to determine hostname\\n"""	366:6:10279:10303	929062	7	True				
ANR	929526	Statement	","	366:31:10304:10304	929062	8	True				
ANR	929527	Statement	tmp	366:33:10306:10308	929062	9	True				
ANR	929528	Statement	)	366:37:10310:10310	929062	10	True				
ANR	929529	ExpressionStatement		366:38:10311:10311	929062	11	True				
ANR	929530	IdentifierDeclStatement	std :: vector < condor_sockaddr > addrs ;	368:3:10317:10351	929062	12	True				
ANR	929531	IdentifierDecl	addrs		929062	0					
ANR	929532	IdentifierDeclType	std :: vector < condor_sockaddr >		929062	0					
ANR	929533	Identifier	addrs		929062	1					
ANR	929534	IdentifierDeclStatement	MyString my_hostname ( tmp ) ;	369:3:10356:10381	929062	13	True				
ANR	929535	IdentifierDecl	my_hostname ( tmp )		929062	0					
ANR	929536	IdentifierDeclType	MyString		929062	0					
ANR	929537	Identifier	my_hostname		929062	1					
ANR	929538	Identifier	tmp		929062	2					
ANR	929539	ExpressionStatement	addrs = resolve_hostname_raw ( my_hostname )	370:3:10386:10427	929062	14	True				
ANR	929540	AssignmentExpression	addrs = resolve_hostname_raw ( my_hostname )		929062	0		=			
ANR	929541	Identifier	addrs		929062	0					
ANR	929542	CallExpression	resolve_hostname_raw ( my_hostname )		929062	1					
ANR	929543	Callee	resolve_hostname_raw		929062	0					
ANR	929544	Identifier	resolve_hostname_raw		929062	0					
ANR	929545	ArgumentList	my_hostname		929062	1					
ANR	929546	Argument	my_hostname		929062	0					
ANR	929547	Identifier	my_hostname		929062	0					
ANR	929548	IfStatement	if ( addrs . empty ( ) )		929062	15					
ANR	929549	Condition	addrs . empty ( )	371:7:10436:10448	929062	0	True				
ANR	929550	CallExpression	addrs . empty ( )		929062	0					
ANR	929551	Callee	addrs . empty		929062	0					
ANR	929552	MemberAccess	addrs . empty		929062	0					
ANR	929553	Identifier	addrs		929062	0					
ANR	929554	Identifier	empty		929062	1					
ANR	929555	ArgumentList			929062	1					
ANR	929556	CompoundStatement		124:22:3418:3418	929062	1					
ANR	929557	Statement	dprintf	372:4:10457:10463	929062	0	True				
ANR	929558	Statement	(	372:11:10464:10464	929062	1	True				
ANR	929559	Statement	D_HOSTNAME	372:12:10465:10474	929062	2	True				
ANR	929560	Statement	","	372:22:10475:10475	929062	3	True				
ANR	929561	Statement	"""NO_DNS: resolve_hostname_raw() failed, errno=%d"""	373:6:10483:10531	929062	4	True				
ANR	929562	Statement	""" (%s)\\n"""	374:6:10539:10547	929062	5	True				
ANR	929563	Statement	","	374:15:10548:10548	929062	6	True				
ANR	929564	Statement	errno	374:17:10550:10554	929062	7	True				
ANR	929565	Statement	","	374:22:10555:10555	929062	8	True				
ANR	929566	Statement	strerror	374:24:10557:10564	929062	9	True				
ANR	929567	Statement	(	374:32:10565:10565	929062	10	True				
ANR	929568	Statement	errno	374:33:10566:10570	929062	11	True				
ANR	929569	Statement	)	374:38:10571:10571	929062	12	True				
ANR	929570	Statement	)	374:39:10572:10572	929062	13	True				
ANR	929571	ExpressionStatement		374:40:10573:10573	929062	14	True				
ANR	929572	ReturnStatement	return - 1 ;	375:4:10579:10588	929062	15	True				
ANR	929573	UnaryOperationExpression	- 1		929062	0					
ANR	929574	UnaryOperator	-		929062	0					
ANR	929575	PrimaryExpression	1		929062	1					
ANR	929576	IdentifierDeclStatement	MyString hostname = convert_ipaddr_to_hostname ( addrs . front ( ) ) ;	378:3:10599:10660	929062	16	True				
ANR	929577	IdentifierDecl	hostname = convert_ipaddr_to_hostname ( addrs . front ( ) )		929062	0					
ANR	929578	IdentifierDeclType	MyString		929062	0					
ANR	929579	Identifier	hostname		929062	1					
ANR	929580	AssignmentExpression	hostname = convert_ipaddr_to_hostname ( addrs . front ( ) )		929062	2		=			
ANR	929581	Identifier	hostname		929062	0					
ANR	929582	CallExpression	convert_ipaddr_to_hostname ( addrs . front ( ) )		929062	1					
ANR	929583	Callee	convert_ipaddr_to_hostname		929062	0					
ANR	929584	Identifier	convert_ipaddr_to_hostname		929062	0					
ANR	929585	ArgumentList	addrs . front ( )		929062	1					
ANR	929586	Argument	addrs . front ( )		929062	0					
ANR	929587	CallExpression	addrs . front ( )		929062	0					
ANR	929588	Callee	addrs . front		929062	0					
ANR	929589	MemberAccess	addrs . front		929062	0					
ANR	929590	Identifier	addrs		929062	0					
ANR	929591	Identifier	front		929062	1					
ANR	929592	ArgumentList			929062	1					
ANR	929593	IfStatement	if ( hostname . Length ( ) >= namelen )		929062	17					
ANR	929594	Condition	hostname . Length ( ) >= namelen	379:7:10669:10696	929062	0	True				
ANR	929595	RelationalExpression	hostname . Length ( ) >= namelen		929062	0		>=			
ANR	929596	CallExpression	hostname . Length ( )		929062	0					
ANR	929597	Callee	hostname . Length		929062	0					
ANR	929598	MemberAccess	hostname . Length		929062	0					
ANR	929599	Identifier	hostname		929062	0					
ANR	929600	Identifier	Length		929062	1					
ANR	929601	ArgumentList			929062	1					
ANR	929602	Identifier	namelen		929062	1					
ANR	929603	CompoundStatement		132:37:3666:3666	929062	1					
ANR	929604	ReturnStatement	return - 1 ;	380:4:10705:10714	929062	0	True				
ANR	929605	UnaryOperationExpression	- 1		929062	0					
ANR	929606	UnaryOperator	-		929062	0					
ANR	929607	PrimaryExpression	1		929062	1					
ANR	929608	ExpressionStatement	"strcpy ( name , hostname . Value ( ) )"	382:3:10724:10754	929062	18	True				
ANR	929609	CallExpression	"strcpy ( name , hostname . Value ( ) )"		929062	0					
ANR	929610	Callee	strcpy		929062	0					
ANR	929611	Identifier	strcpy		929062	0					
ANR	929612	ArgumentList	name		929062	1					
ANR	929613	Argument	name		929062	0					
ANR	929614	Identifier	name		929062	0					
ANR	929615	Argument	hostname . Value ( )		929062	1					
ANR	929616	CallExpression	hostname . Value ( )		929062	0					
ANR	929617	Callee	hostname . Value		929062	0					
ANR	929618	MemberAccess	hostname . Value		929062	0					
ANR	929619	Identifier	hostname		929062	0					
ANR	929620	Identifier	Value		929062	1					
ANR	929621	ArgumentList			929062	1					
ANR	929622	ReturnStatement	return 0 ;	383:3:10759:10767	929062	19	True				
ANR	929623	PrimaryExpression	0		929062	0					
ANR	929624	ExpressionStatement	"dprintf ( D_HOSTNAME , ""Failed in determining hostname for this machine\\n"" )"	386:2:10776:10852	929062	5	True				
ANR	929625	CallExpression	"dprintf ( D_HOSTNAME , ""Failed in determining hostname for this machine\\n"" )"		929062	0					
ANR	929626	Callee	dprintf		929062	0					
ANR	929627	Identifier	dprintf		929062	0					
ANR	929628	ArgumentList	D_HOSTNAME		929062	1					
ANR	929629	Argument	D_HOSTNAME		929062	0					
ANR	929630	Identifier	D_HOSTNAME		929062	0					
ANR	929631	Argument	"""Failed in determining hostname for this machine\\n"""		929062	1					
ANR	929632	PrimaryExpression	"""Failed in determining hostname for this machine\\n"""		929062	0					
ANR	929633	ReturnStatement	return - 1 ;	388:2:10856:10865	929062	6	True				
ANR	929634	UnaryOperationExpression	- 1		929062	0					
ANR	929635	UnaryOperator	-		929062	0					
ANR	929636	PrimaryExpression	1		929062	1					
ANR	929637	ElseStatement	else		929062	0					
ANR	929638	CompoundStatement		143:8:3843:3843	929062	0					
ANR	929639	ReturnStatement	"return gethostname ( name , namelen ) ;"	391:2:10880:10913	929062	0	True				
ANR	929640	CallExpression	"gethostname ( name , namelen )"		929062	0					
ANR	929641	Callee	gethostname		929062	0					
ANR	929642	Identifier	gethostname		929062	0					
ANR	929643	ArgumentList	name		929062	1					
ANR	929644	Argument	name		929062	0					
ANR	929645	Identifier	name		929062	0					
ANR	929646	Argument	namelen		929062	1					
ANR	929647	Identifier	namelen		929062	0					
ANR	929648	ReturnType	int		929062	1					
ANR	929649	Identifier	condor_gethostname		929062	2					
ANR	929650	ParameterList	"char * name , size_t namelen"		929062	3					
ANR	929651	Parameter	char * name	248:19:7004:7013	929062	0	True				
ANR	929652	ParameterType	char *		929062	0					
ANR	929653	Identifier	name		929062	1					
ANR	929654	Parameter	size_t namelen	248:31:7016:7029	929062	1	True				
ANR	929655	ParameterType	size_t		929062	0					
ANR	929656	Identifier	namelen		929062	1					
ANR	929657	CFGEntryNode	ENTRY		929062		True				
ANR	929658	CFGExitNode	EXIT		929062		True				
ANR	929659	Symbol	collector_addr . get_aftype		929062						
ANR	929660	Symbol	hostname . Value		929062						
ANR	929661	Symbol	hostname . Length		929062						
ANR	929662	Symbol	namelen		929062						
ANR	929663	Symbol	condor_getsockname		929062						
ANR	929664	Symbol	hostname		929062						
ANR	929665	Symbol	param		929062						
ANR	929666	Symbol	tmp		929062						
ANR	929667	Symbol	MAXHOSTNAMELEN		929062						
ANR	929668	Symbol	collector_host		929062						
ANR	929669	Symbol	* idx		929062						
ANR	929670	Symbol	resolve_hostname_raw		929062						
ANR	929671	Symbol	collector_addrs		929062						
ANR	929672	Symbol	addr		929062						
ANR	929673	Symbol	collector_addr		929062						
ANR	929674	Symbol	ip_str		929062						
ANR	929675	Symbol	collector_addrs . front		929062						
ANR	929676	Symbol	nodns_enabled		929062						
ANR	929677	Symbol	addr . from_ip_string		929062						
ANR	929678	Symbol	D_HOSTNAME		929062						
ANR	929679	Symbol	convert_ipaddr_to_hostname		929062						
ANR	929680	Symbol	collector_addrs . empty		929062						
ANR	929681	Symbol	errno		929062						
ANR	929682	Symbol	condor_connect		929062						
ANR	929683	Symbol	addrs		929062						
ANR	929684	Symbol	gethostname		929062						
ANR	929685	Symbol	index		929062						
ANR	929686	Symbol	SOCK_DGRAM		929062						
ANR	929687	Symbol	addrs . empty		929062						
ANR	929688	Symbol	strerror		929062						
ANR	929689	Symbol	h_ent		929062						
ANR	929690	Symbol	s		929062						
ANR	929691	Symbol	resolve_hostname		929062						
ANR	929692	Symbol	name		929062						
ANR	929693	Symbol	param_buf		929062						
ANR	929694	Symbol	socket		929062						
ANR	929695	Symbol	my_hostname		929062						
ANR	929696	Symbol	idx		929062						
ANR	929697	Symbol	addrs . front		929062						
ANR	929698	Symbol	inaddr		929062						
ANR	929699	Function	convert_ip_to_hostname	395:0:10921:11624							
ANR	929700	FunctionDef	"convert_ip_to_hostname (const char * addr , char * h_name , int maxlen)"		929699	0					
ANR	929701	CompoundStatement		398:20:11008:11624	929699	0					
ANR	929702	IdentifierDeclStatement	char * default_domain_name ;	399:1:11011:11036	929699	0	True				
ANR	929703	IdentifierDecl	* default_domain_name		929699	0					
ANR	929704	IdentifierDeclType	char *		929699	0					
ANR	929705	Identifier	default_domain_name		929699	1					
ANR	929706	IfStatement	"if ( NULL != ( default_domain_name = param ( ""DEFAULT_DOMAIN_NAME"" ) ) )"		929699	1					
ANR	929707	Condition	"NULL != ( default_domain_name = param ( ""DEFAULT_DOMAIN_NAME"" ) )"	401:5:11044:11103	929699	0	True				
ANR	929708	EqualityExpression	"NULL != ( default_domain_name = param ( ""DEFAULT_DOMAIN_NAME"" ) )"		929699	0		!=			
ANR	929709	Identifier	NULL		929699	0					
ANR	929710	AssignmentExpression	"default_domain_name = param ( ""DEFAULT_DOMAIN_NAME"" )"		929699	1		=			
ANR	929711	Identifier	default_domain_name		929699	0					
ANR	929712	CallExpression	"param ( ""DEFAULT_DOMAIN_NAME"" )"		929699	1					
ANR	929713	Callee	param		929699	0					
ANR	929714	Identifier	param		929699	0					
ANR	929715	ArgumentList	"""DEFAULT_DOMAIN_NAME"""		929699	1					
ANR	929716	Argument	"""DEFAULT_DOMAIN_NAME"""		929699	0					
ANR	929717	PrimaryExpression	"""DEFAULT_DOMAIN_NAME"""		929699	0					
ANR	929718	CompoundStatement		6:2:119:124	929699	1					
ANR	929719	IdentifierDeclStatement	int h_name_len ;	402:2:11110:11124	929699	0	True				
ANR	929720	IdentifierDecl	h_name_len		929699	0					
ANR	929721	IdentifierDeclType	int		929699	0					
ANR	929722	Identifier	h_name_len		929699	1					
ANR	929723	IdentifierDeclStatement	int i ;	403:2:11128:11133	929699	1	True				
ANR	929724	IdentifierDecl	i		929699	0					
ANR	929725	IdentifierDeclType	int		929699	0					
ANR	929726	Identifier	i		929699	1					
ANR	929727	ExpressionStatement	"memset ( h_name , 0 , maxlen )"	404:2:11137:11162	929699	2	True				
ANR	929728	CallExpression	"memset ( h_name , 0 , maxlen )"		929699	0					
ANR	929729	Callee	memset		929699	0					
ANR	929730	Identifier	memset		929699	0					
ANR	929731	ArgumentList	h_name		929699	1					
ANR	929732	Argument	h_name		929699	0					
ANR	929733	Identifier	h_name		929699	0					
ANR	929734	Argument	0		929699	1					
ANR	929735	PrimaryExpression	0		929699	0					
ANR	929736	Argument	maxlen		929699	2					
ANR	929737	Identifier	maxlen		929699	0					
ANR	929738	ExpressionStatement	"strncpy ( h_name , inet_ntoa ( * ( ( struct in_addr * ) addr ) ) , maxlen - 1 )"	405:2:11166:11232	929699	3	True				
ANR	929739	CallExpression	"strncpy ( h_name , inet_ntoa ( * ( ( struct in_addr * ) addr ) ) , maxlen - 1 )"		929699	0					
ANR	929740	Callee	strncpy		929699	0					
ANR	929741	Identifier	strncpy		929699	0					
ANR	929742	ArgumentList	h_name		929699	1					
ANR	929743	Argument	h_name		929699	0					
ANR	929744	Identifier	h_name		929699	0					
ANR	929745	Argument	inet_ntoa ( * ( ( struct in_addr * ) addr ) )		929699	1					
ANR	929746	CallExpression	inet_ntoa ( * ( ( struct in_addr * ) addr ) )		929699	0					
ANR	929747	Callee	inet_ntoa		929699	0					
ANR	929748	Identifier	inet_ntoa		929699	0					
ANR	929749	ArgumentList	* ( ( struct in_addr * ) addr )		929699	1					
ANR	929750	Argument	* ( ( struct in_addr * ) addr )		929699	0					
ANR	929751	UnaryOperationExpression	* ( ( struct in_addr * ) addr )		929699	0					
ANR	929752	UnaryOperator	*		929699	0					
ANR	929753	CastExpression	( struct in_addr * ) addr		929699	1					
ANR	929754	CastTarget	struct in_addr *		929699	0					
ANR	929755	Identifier	addr		929699	1					
ANR	929756	Argument	maxlen - 1		929699	2					
ANR	929757	AdditiveExpression	maxlen - 1		929699	0		-			
ANR	929758	Identifier	maxlen		929699	0					
ANR	929759	PrimaryExpression	1		929699	1					
ANR	929760	ForStatement	for ( i = 0 ; h_name [ i ] ; i ++ )		929699	4					
ANR	929761	ForInit	i = 0 ;	406:7:11241:11246	929699	0	True				
ANR	929762	AssignmentExpression	i = 0		929699	0		=			
ANR	929763	Identifier	i		929699	0					
ANR	929764	PrimaryExpression	0		929699	1					
ANR	929765	Condition	h_name [ i ]	406:14:11248:11256	929699	1	True				
ANR	929766	ArrayIndexing	h_name [ i ]		929699	0					
ANR	929767	Identifier	h_name		929699	0					
ANR	929768	Identifier	i		929699	1					
ANR	929769	PostIncDecOperationExpression	i ++	406:25:11259:11261	929699	2	True				
ANR	929770	Identifier	i		929699	0					
ANR	929771	IncDec	++		929699	1					
ANR	929772	CompoundStatement		9:30:255:255	929699	3					
ANR	929773	IfStatement	if ( '.' == h_name [ i ] )		929699	0					
ANR	929774	Condition	'.' == h_name [ i ]	407:7:11273:11288	929699	0	True				
ANR	929775	EqualityExpression	'.' == h_name [ i ]		929699	0		==			
ANR	929776	PrimaryExpression	'.'		929699	0					
ANR	929777	ArrayIndexing	h_name [ i ]		929699	1					
ANR	929778	Identifier	h_name		929699	0					
ANR	929779	Identifier	i		929699	1					
ANR	929780	CompoundStatement		10:25:282:282	929699	1					
ANR	929781	ExpressionStatement	h_name [ i ] = '-'	408:4:11297:11312	929699	0	True				
ANR	929782	AssignmentExpression	h_name [ i ] = '-'		929699	0		=			
ANR	929783	ArrayIndexing	h_name [ i ]		929699	0					
ANR	929784	Identifier	h_name		929699	0					
ANR	929785	Identifier	i		929699	1					
ANR	929786	PrimaryExpression	'-'		929699	1					
ANR	929787	ExpressionStatement	h_name_len = strlen ( h_name )	411:2:11325:11352	929699	5	True				
ANR	929788	AssignmentExpression	h_name_len = strlen ( h_name )		929699	0		=			
ANR	929789	Identifier	h_name_len		929699	0					
ANR	929790	CallExpression	strlen ( h_name )		929699	1					
ANR	929791	Callee	strlen		929699	0					
ANR	929792	Identifier	strlen		929699	0					
ANR	929793	ArgumentList	h_name		929699	1					
ANR	929794	Argument	h_name		929699	0					
ANR	929795	Identifier	h_name		929699	0					
ANR	929796	ExpressionStatement	"snprintf ( & ( h_name [ h_name_len ] ) , maxlen - h_name_len , "".%s"" , default_domain_name )"	412:2:11356:11441	929699	6	True				
ANR	929797	CallExpression	"snprintf ( & ( h_name [ h_name_len ] ) , maxlen - h_name_len , "".%s"" , default_domain_name )"		929699	0					
ANR	929798	Callee	snprintf		929699	0					
ANR	929799	Identifier	snprintf		929699	0					
ANR	929800	ArgumentList	& ( h_name [ h_name_len ] )		929699	1					
ANR	929801	Argument	& ( h_name [ h_name_len ] )		929699	0					
ANR	929802	UnaryOperationExpression	& ( h_name [ h_name_len ] )		929699	0					
ANR	929803	UnaryOperator	&		929699	0					
ANR	929804	ArrayIndexing	h_name [ h_name_len ]		929699	1					
ANR	929805	Identifier	h_name		929699	0					
ANR	929806	Identifier	h_name_len		929699	1					
ANR	929807	Argument	maxlen - h_name_len		929699	1					
ANR	929808	AdditiveExpression	maxlen - h_name_len		929699	0		-			
ANR	929809	Identifier	maxlen		929699	0					
ANR	929810	Identifier	h_name_len		929699	1					
ANR	929811	Argument	""".%s"""		929699	2					
ANR	929812	PrimaryExpression	""".%s"""		929699	0					
ANR	929813	Argument	default_domain_name		929699	3					
ANR	929814	Identifier	default_domain_name		929699	0					
ANR	929815	ExpressionStatement	free ( default_domain_name )	415:2:11446:11471	929699	7	True				
ANR	929816	CallExpression	free ( default_domain_name )		929699	0					
ANR	929817	Callee	free		929699	0					
ANR	929818	Identifier	free		929699	0					
ANR	929819	ArgumentList	default_domain_name		929699	1					
ANR	929820	Argument	default_domain_name		929699	0					
ANR	929821	Identifier	default_domain_name		929699	0					
ANR	929822	ReturnStatement	return 0 ;	416:2:11475:11483	929699	8	True				
ANR	929823	PrimaryExpression	0		929699	0					
ANR	929824	ElseStatement	else		929699	0					
ANR	929825	CompoundStatement		20:8:484:484	929699	0					
ANR	929826	Statement	dprintf	418:2:11497:11503	929699	0	True				
ANR	929827	Statement	(	418:9:11504:11504	929699	1	True				
ANR	929828	Statement	D_HOSTNAME	418:10:11505:11514	929699	2	True				
ANR	929829	Statement	","	418:20:11515:11515	929699	3	True				
ANR	929830	Statement	"""NO_DNS: DEFAULT_DOMAIN_NAME must be defined in your """	419:4:11521:11574	929699	4	True				
ANR	929831	Statement	"""top-level config file\\n"""	420:4:11580:11604	929699	5	True				
ANR	929832	Statement	)	420:29:11605:11605	929699	6	True				
ANR	929833	ExpressionStatement		420:30:11606:11606	929699	7	True				
ANR	929834	ReturnStatement	return - 1 ;	421:2:11610:11619	929699	8	True				
ANR	929835	UnaryOperationExpression	- 1		929699	0					
ANR	929836	UnaryOperator	-		929699	0					
ANR	929837	PrimaryExpression	1		929699	1					
ANR	929838	ReturnType	int		929699	1					
ANR	929839	Identifier	convert_ip_to_hostname		929699	2					
ANR	929840	ParameterList	"const char * addr , char * h_name , int maxlen"		929699	3					
ANR	929841	Parameter	const char * addr	396:23:10948:10963	929699	0	True				
ANR	929842	ParameterType	const char *		929699	0					
ANR	929843	Identifier	addr		929699	1					
ANR	929844	Parameter	char * h_name	397:8:10974:10985	929699	1	True				
ANR	929845	ParameterType	char *		929699	0					
ANR	929846	Identifier	h_name		929699	1					
ANR	929847	Parameter	int maxlen	398:8:10996:11005	929699	2	True				
ANR	929848	ParameterType	int		929699	0					
ANR	929849	Identifier	maxlen		929699	1					
ANR	929850	CFGEntryNode	ENTRY		929699		True				
ANR	929851	CFGExitNode	EXIT		929699		True				
ANR	929852	Symbol	default_domain_name		929699						
ANR	929853	Symbol	NULL		929699						
ANR	929854	Symbol	h_name		929699						
ANR	929855	Symbol	* h_name		929699						
ANR	929856	Symbol	i		929699						
ANR	929857	Symbol	inet_ntoa		929699						
ANR	929858	Symbol	h_name_len		929699						
ANR	929859	Symbol	strlen		929699						
ANR	929860	Symbol	* i		929699						
ANR	929861	Symbol	param		929699						
ANR	929862	Symbol	* addr		929699						
ANR	929863	Symbol	addr		929699						
ANR	929864	Symbol	maxlen		929699						
ANR	929865	Symbol	* ( ( struct in_addr * ) addr )		929699						
ANR	929866	Function	convert_hostname_to_ip	425:0:11627:14048							
ANR	929867	FunctionDef	"convert_hostname_to_ip (const char * name , char * * h_addr_list , int maxaddrs)"		929866	0					
ANR	929868	CompoundStatement		428:22:11722:14048	929866	0					
ANR	929869	Statement	static	429:1:11725:11730	929866	0	True				
ANR	929870	IdentifierDeclStatement	struct in_addr addr ;	429:8:11732:11751	929866	1	True				
ANR	929871	IdentifierDecl	addr		929866	0					
ANR	929872	IdentifierDeclType	struct in_addr		929866	0					
ANR	929873	Identifier	addr		929866	1					
ANR	929874	IdentifierDeclStatement	char tmp_name [ MAXHOSTNAMELEN ] ;	430:1:11754:11783	929866	2	True				
ANR	929875	IdentifierDecl	tmp_name [ MAXHOSTNAMELEN ]		929866	0					
ANR	929876	IdentifierDeclType	char [ MAXHOSTNAMELEN ]		929866	0					
ANR	929877	Identifier	tmp_name		929866	1					
ANR	929878	Identifier	MAXHOSTNAMELEN		929866	2					
ANR	929879	IdentifierDeclStatement	char * default_domain_name ;	431:1:11821:11846	929866	3	True				
ANR	929880	IdentifierDecl	* default_domain_name		929866	0					
ANR	929881	IdentifierDeclType	char *		929866	0					
ANR	929882	Identifier	default_domain_name		929866	1					
ANR	929883	IdentifierDeclStatement	int ret ;	432:1:11849:11856	929866	4	True				
ANR	929884	IdentifierDecl	ret		929866	0					
ANR	929885	IdentifierDeclType	int		929866	0					
ANR	929886	Identifier	ret		929866	1					
ANR	929887	IfStatement	if ( 2 > maxaddrs )		929866	5					
ANR	929888	Condition	2 > maxaddrs	435:5:11911:11922	929866	0	True				
ANR	929889	RelationalExpression	2 > maxaddrs		929866	0		>			
ANR	929890	PrimaryExpression	2		929866	0					
ANR	929891	Identifier	maxaddrs		929866	1					
ANR	929892	CompoundStatement		8:19:202:202	929866	1					
ANR	929893	ReturnStatement	return - 1 ;	436:2:11929:11938	929866	0	True				
ANR	929894	UnaryOperationExpression	- 1		929866	0					
ANR	929895	UnaryOperator	-		929866	0					
ANR	929896	PrimaryExpression	1		929866	1					
ANR	929897	ExpressionStatement	h_addr_list [ 1 ] = NULL	440:1:11976:11997	929866	6	True				
ANR	929898	AssignmentExpression	h_addr_list [ 1 ] = NULL		929866	0		=			
ANR	929899	ArrayIndexing	h_addr_list [ 1 ]		929866	0					
ANR	929900	Identifier	h_addr_list		929866	0					
ANR	929901	PrimaryExpression	1		929866	1					
ANR	929902	Identifier	NULL		929866	1					
ANR	929903	IfStatement	"if ( NULL != ( default_domain_name = param ( ""DEFAULT_DOMAIN_NAME"" ) ) )"		929866	7					
ANR	929904	Condition	"NULL != ( default_domain_name = param ( ""DEFAULT_DOMAIN_NAME"" ) )"	442:5:12005:12064	929866	0	True				
ANR	929905	EqualityExpression	"NULL != ( default_domain_name = param ( ""DEFAULT_DOMAIN_NAME"" ) )"		929866	0		!=			
ANR	929906	Identifier	NULL		929866	0					
ANR	929907	AssignmentExpression	"default_domain_name = param ( ""DEFAULT_DOMAIN_NAME"" )"		929866	1		=			
ANR	929908	Identifier	default_domain_name		929866	0					
ANR	929909	CallExpression	"param ( ""DEFAULT_DOMAIN_NAME"" )"		929866	1					
ANR	929910	Callee	param		929866	0					
ANR	929911	Identifier	param		929866	0					
ANR	929912	ArgumentList	"""DEFAULT_DOMAIN_NAME"""		929866	1					
ANR	929913	Argument	"""DEFAULT_DOMAIN_NAME"""		929866	0					
ANR	929914	PrimaryExpression	"""DEFAULT_DOMAIN_NAME"""		929866	0					
ANR	929915	CompoundStatement		17:2:357:372	929866	1					
ANR	929916	IdentifierDeclStatement	int i ;	443:2:12071:12076	929866	0	True				
ANR	929917	IdentifierDecl	i		929866	0					
ANR	929918	IdentifierDeclType	int		929866	0					
ANR	929919	Identifier	i		929866	1					
ANR	929920	IdentifierDeclStatement	const char * idx ;	444:2:12080:12095	929866	1	True				
ANR	929921	IdentifierDecl	* idx		929866	0					
ANR	929922	IdentifierDeclType	const char *		929866	0					
ANR	929923	Identifier	idx		929866	1					
ANR	929924	ExpressionStatement	"memset ( tmp_name , 0 , MAXHOSTNAMELEN )"	484:2:13352:13387	929866	2	True				
ANR	929925	CallExpression	"memset ( tmp_name , 0 , MAXHOSTNAMELEN )"		929866	0					
ANR	929926	Callee	memset		929866	0					
ANR	929927	Identifier	memset		929866	0					
ANR	929928	ArgumentList	tmp_name		929866	1					
ANR	929929	Argument	tmp_name		929866	0					
ANR	929930	Identifier	tmp_name		929866	0					
ANR	929931	Argument	0		929866	1					
ANR	929932	PrimaryExpression	0		929866	0					
ANR	929933	Argument	MAXHOSTNAMELEN		929866	2					
ANR	929934	Identifier	MAXHOSTNAMELEN		929866	0					
ANR	929935	ExpressionStatement	"idx = strstr ( name , default_domain_name )"	485:2:13391:13430	929866	3	True				
ANR	929936	AssignmentExpression	"idx = strstr ( name , default_domain_name )"		929866	0		=			
ANR	929937	Identifier	idx		929866	0					
ANR	929938	CallExpression	"strstr ( name , default_domain_name )"		929866	1					
ANR	929939	Callee	strstr		929866	0					
ANR	929940	Identifier	strstr		929866	0					
ANR	929941	ArgumentList	name		929866	1					
ANR	929942	Argument	name		929866	0					
ANR	929943	Identifier	name		929866	0					
ANR	929944	Argument	default_domain_name		929866	1					
ANR	929945	Identifier	default_domain_name		929866	0					
ANR	929946	IfStatement	if ( NULL != idx )		929866	4					
ANR	929947	Condition	NULL != idx	486:6:13438:13448	929866	0	True				
ANR	929948	EqualityExpression	NULL != idx		929866	0		!=			
ANR	929949	Identifier	NULL		929866	0					
ANR	929950	Identifier	idx		929866	1					
ANR	929951	CompoundStatement		59:19:1728:1728	929866	1					
ANR	929952	ExpressionStatement	"strncpy ( tmp_name , name , idx - name - 1 )"	487:3:13456:13495	929866	0	True				
ANR	929953	CallExpression	"strncpy ( tmp_name , name , idx - name - 1 )"		929866	0					
ANR	929954	Callee	strncpy		929866	0					
ANR	929955	Identifier	strncpy		929866	0					
ANR	929956	ArgumentList	tmp_name		929866	1					
ANR	929957	Argument	tmp_name		929866	0					
ANR	929958	Identifier	tmp_name		929866	0					
ANR	929959	Argument	name		929866	1					
ANR	929960	Identifier	name		929866	0					
ANR	929961	Argument	idx - name - 1		929866	2					
ANR	929962	AdditiveExpression	idx - name - 1		929866	0		-			
ANR	929963	Identifier	idx		929866	0					
ANR	929964	AdditiveExpression	name - 1		929866	1		-			
ANR	929965	Identifier	name		929866	0					
ANR	929966	PrimaryExpression	1		929866	1					
ANR	929967	ElseStatement	else		929866	0					
ANR	929968	CompoundStatement		61:9:1783:1783	929866	0					
ANR	929969	ExpressionStatement	"strncpy ( tmp_name , name , MAXHOSTNAMELEN - 1 )"	489:3:13511:13554	929866	0	True				
ANR	929970	CallExpression	"strncpy ( tmp_name , name , MAXHOSTNAMELEN - 1 )"		929866	0					
ANR	929971	Callee	strncpy		929866	0					
ANR	929972	Identifier	strncpy		929866	0					
ANR	929973	ArgumentList	tmp_name		929866	1					
ANR	929974	Argument	tmp_name		929866	0					
ANR	929975	Identifier	tmp_name		929866	0					
ANR	929976	Argument	name		929866	1					
ANR	929977	Identifier	name		929866	0					
ANR	929978	Argument	MAXHOSTNAMELEN - 1		929866	2					
ANR	929979	AdditiveExpression	MAXHOSTNAMELEN - 1		929866	0		-			
ANR	929980	Identifier	MAXHOSTNAMELEN		929866	0					
ANR	929981	PrimaryExpression	1		929866	1					
ANR	929982	ExpressionStatement	free ( default_domain_name )	492:2:13563:13590	929866	5	True				
ANR	929983	CallExpression	free ( default_domain_name )		929866	0					
ANR	929984	Callee	free		929866	0					
ANR	929985	Identifier	free		929866	0					
ANR	929986	ArgumentList	default_domain_name		929866	1					
ANR	929987	Argument	default_domain_name		929866	0					
ANR	929988	Identifier	default_domain_name		929866	0					
ANR	929989	ForStatement	for ( i = 0 ; tmp_name [ i ] ; i ++ )		929866	6					
ANR	929990	ForInit	i = 0 ;	494:7:13600:13605	929866	0	True				
ANR	929991	AssignmentExpression	i = 0		929866	0		=			
ANR	929992	Identifier	i		929866	0					
ANR	929993	PrimaryExpression	0		929866	1					
ANR	929994	Condition	tmp_name [ i ]	494:14:13607:13617	929866	1	True				
ANR	929995	ArrayIndexing	tmp_name [ i ]		929866	0					
ANR	929996	Identifier	tmp_name		929866	0					
ANR	929997	Identifier	i		929866	1					
ANR	929998	PostIncDecOperationExpression	i ++	494:27:13620:13622	929866	2	True				
ANR	929999	Identifier	i		929866	0					
ANR	930000	IncDec	++		929866	1					
ANR	930001	CompoundStatement		67:32:1902:1902	929866	3					
ANR	930002	IfStatement	if ( '-' == tmp_name [ i ] )		929866	0					
ANR	930003	Condition	'-' == tmp_name [ i ]	495:7:13634:13651	929866	0	True				
ANR	930004	EqualityExpression	'-' == tmp_name [ i ]		929866	0		==			
ANR	930005	PrimaryExpression	'-'		929866	0					
ANR	930006	ArrayIndexing	tmp_name [ i ]		929866	1					
ANR	930007	Identifier	tmp_name		929866	0					
ANR	930008	Identifier	i		929866	1					
ANR	930009	CompoundStatement		68:27:1931:1931	929866	1					
ANR	930010	ExpressionStatement	tmp_name [ i ] = '.'	496:4:13660:13677	929866	0	True				
ANR	930011	AssignmentExpression	tmp_name [ i ] = '.'		929866	0		=			
ANR	930012	ArrayIndexing	tmp_name [ i ]		929866	0					
ANR	930013	Identifier	tmp_name		929866	0					
ANR	930014	Identifier	i		929866	1					
ANR	930015	PrimaryExpression	'.'		929866	1					
ANR	930016	ExpressionStatement	"ret = inet_pton ( AF_INET , tmp_name , & addr . s_addr )"	500:8:13697:13746	929866	7	True				
ANR	930017	AssignmentExpression	"ret = inet_pton ( AF_INET , tmp_name , & addr . s_addr )"		929866	0		=			
ANR	930018	Identifier	ret		929866	0					
ANR	930019	CallExpression	"inet_pton ( AF_INET , tmp_name , & addr . s_addr )"		929866	1					
ANR	930020	Callee	inet_pton		929866	0					
ANR	930021	Identifier	inet_pton		929866	0					
ANR	930022	ArgumentList	AF_INET		929866	1					
ANR	930023	Argument	AF_INET		929866	0					
ANR	930024	Identifier	AF_INET		929866	0					
ANR	930025	Argument	tmp_name		929866	1					
ANR	930026	Identifier	tmp_name		929866	0					
ANR	930027	Argument	& addr . s_addr		929866	2					
ANR	930028	UnaryOperationExpression	& addr . s_addr		929866	0					
ANR	930029	UnaryOperator	&		929866	0					
ANR	930030	MemberAccess	addr . s_addr		929866	1					
ANR	930031	Identifier	addr		929866	0					
ANR	930032	Identifier	s_addr		929866	1					
ANR	930033	IfStatement	if ( ret <= 0 )		929866	8					
ANR	930034	Condition	ret <= 0	501:6:13754:13759	929866	0	True				
ANR	930035	RelationalExpression	ret <= 0		929866	0		<=			
ANR	930036	Identifier	ret		929866	0					
ANR	930037	PrimaryExpression	0		929866	1					
ANR	930038	CompoundStatement		74:14:2039:2039	929866	1					
ANR	930039	ExpressionStatement	h_addr_list [ 0 ] = NULL	503:3:13805:13826	929866	0	True				
ANR	930040	AssignmentExpression	h_addr_list [ 0 ] = NULL		929866	0		=			
ANR	930041	ArrayIndexing	h_addr_list [ 0 ]		929866	0					
ANR	930042	Identifier	h_addr_list		929866	0					
ANR	930043	PrimaryExpression	0		929866	1					
ANR	930044	Identifier	NULL		929866	1					
ANR	930045	ReturnStatement	return - 1 ;	505:3:13832:13841	929866	1	True				
ANR	930046	UnaryOperationExpression	- 1		929866	0					
ANR	930047	UnaryOperator	-		929866	0					
ANR	930048	PrimaryExpression	1		929866	1					
ANR	930049	ElseStatement	else		929866	0					
ANR	930050	CompoundStatement		79:9:2129:2129	929866	0					
ANR	930051	ExpressionStatement	h_addr_list [ 0 ] = ( char * ) & addr	507:3:13857:13888	929866	0	True				
ANR	930052	AssignmentExpression	h_addr_list [ 0 ] = ( char * ) & addr		929866	0		=			
ANR	930053	ArrayIndexing	h_addr_list [ 0 ]		929866	0					
ANR	930054	Identifier	h_addr_list		929866	0					
ANR	930055	PrimaryExpression	0		929866	1					
ANR	930056	CastExpression	( char * ) & addr		929866	1					
ANR	930057	CastTarget	char *		929866	0					
ANR	930058	UnaryOperationExpression	& addr		929866	1					
ANR	930059	UnaryOperator	&		929866	0					
ANR	930060	Identifier	addr		929866	1					
ANR	930061	ReturnStatement	return 0 ;	509:3:13894:13902	929866	1	True				
ANR	930062	PrimaryExpression	0		929866	0					
ANR	930063	ElseStatement	else		929866	0					
ANR	930064	CompoundStatement		84:8:2193:2193	929866	0					
ANR	930065	Statement	dprintf	512:2:13920:13926	929866	0	True				
ANR	930066	Statement	(	512:9:13927:13927	929866	1	True				
ANR	930067	Statement	D_HOSTNAME	512:10:13928:13937	929866	2	True				
ANR	930068	Statement	","	512:20:13938:13938	929866	3	True				
ANR	930069	Statement	"""NO_DNS: DEFAULT_DOMAIN_NAME must be defined in your """	513:4:13944:13997	929866	4	True				
ANR	930070	Statement	"""top-level config file\\n"""	514:4:14003:14027	929866	5	True				
ANR	930071	Statement	)	514:29:14028:14028	929866	6	True				
ANR	930072	ExpressionStatement		514:30:14029:14029	929866	7	True				
ANR	930073	ReturnStatement	return - 1 ;	515:2:14033:14042	929866	8	True				
ANR	930074	UnaryOperationExpression	- 1		929866	0					
ANR	930075	UnaryOperator	-		929866	0					
ANR	930076	PrimaryExpression	1		929866	1					
ANR	930077	ReturnType	int		929866	1					
ANR	930078	Identifier	convert_hostname_to_ip		929866	2					
ANR	930079	ParameterList	"const char * name , char * * h_addr_list , int maxaddrs"		929866	3					
ANR	930080	Parameter	const char * name	426:23:11654:11669	929866	0	True				
ANR	930081	ParameterType	const char *		929866	0					
ANR	930082	Identifier	name		929866	1					
ANR	930083	Parameter	char * * h_addr_list	427:8:11680:11697	929866	1	True				
ANR	930084	ParameterType	char * *		929866	0					
ANR	930085	Identifier	h_addr_list		929866	1					
ANR	930086	Parameter	int maxaddrs	428:8:11708:11719	929866	2	True				
ANR	930087	ParameterType	int		929866	0					
ANR	930088	Identifier	maxaddrs		929866	1					
ANR	930089	CFGEntryNode	ENTRY		929866		True				
ANR	930090	CFGExitNode	EXIT		929866		True				
ANR	930091	Symbol	default_domain_name		929866						
ANR	930092	Symbol	ret		929866						
ANR	930093	Symbol	NULL		929866						
ANR	930094	Symbol	& addr		929866						
ANR	930095	Symbol	h_addr_list		929866						
ANR	930096	Symbol	inet_pton		929866						
ANR	930097	Symbol	i		929866						
ANR	930098	Symbol	AF_INET		929866						
ANR	930099	Symbol	tmp_name		929866						
ANR	930100	Symbol	* i		929866						
ANR	930101	Symbol	& addr . s_addr		929866						
ANR	930102	Symbol	param		929866						
ANR	930103	Symbol	strstr		929866						
ANR	930104	Symbol	MAXHOSTNAMELEN		929866						
ANR	930105	Symbol	name		929866						
ANR	930106	Symbol	maxaddrs		929866						
ANR	930107	Symbol	* h_addr_list		929866						
ANR	930108	Symbol	addr		929866						
ANR	930109	Symbol	idx		929866						
ANR	930110	Symbol	* tmp_name		929866						
