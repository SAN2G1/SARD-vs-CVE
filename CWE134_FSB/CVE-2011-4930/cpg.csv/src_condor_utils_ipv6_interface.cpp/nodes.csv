command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4799937	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_ipv6_interface.cpp								
ANR	4799938	DeclStmt									
ANR	4799939	Decl							bool	bool	scope_id_inited
ANR	4799940	DeclStmt									
ANR	4799941	Decl							uint32_t	uint32_t	scope_id
ANR	4799942	Function	find_scope_id	12:0:222:630							
ANR	4799943	FunctionDef	find_scope_id (const condor_sockaddr & addr)		4799942	0					
ANR	4799944	CompoundStatement		12:52:274:630	4799942	0					
ANR	4799945	IfStatement	if ( ! addr . is_ipv6 ( ) )		4799942	0					
ANR	4799946	Condition	! addr . is_ipv6 ( )	13:5:281:295	4799942	0	True				
ANR	4799947	UnaryOperationExpression	! addr . is_ipv6 ( )		4799942	0					
ANR	4799948	UnaryOperator	!		4799942	0					
ANR	4799949	CallExpression	addr . is_ipv6 ( )		4799942	1					
ANR	4799950	Callee	addr . is_ipv6		4799942	0					
ANR	4799951	MemberAccess	addr . is_ipv6		4799942	0					
ANR	4799952	Identifier	addr		4799942	0					
ANR	4799953	Identifier	is_ipv6		4799942	1					
ANR	4799954	ArgumentList			4799942	1					
ANR	4799955	ReturnStatement	return 0 ;	14:2:300:308	4799942	1	True				
ANR	4799956	PrimaryExpression	0		4799942	0					
ANR	4799957	IdentifierDeclStatement	ifaddrs * ifaddr ;	15:1:311:326	4799942	1	True				
ANR	4799958	IdentifierDecl	* ifaddr		4799942	0					
ANR	4799959	IdentifierDeclType	ifaddrs *		4799942	0					
ANR	4799960	Identifier	ifaddr		4799942	1					
ANR	4799961	IdentifierDeclStatement	ifaddrs * ifa ;	16:1:329:341	4799942	2	True				
ANR	4799962	IdentifierDecl	* ifa		4799942	0					
ANR	4799963	IdentifierDeclType	ifaddrs *		4799942	0					
ANR	4799964	Identifier	ifa		4799942	1					
ANR	4799965	IfStatement	if ( getifaddrs ( & ifaddr ) )		4799942	3					
ANR	4799966	Condition	getifaddrs ( & ifaddr )	18:5:349:367	4799942	0	True				
ANR	4799967	CallExpression	getifaddrs ( & ifaddr )		4799942	0					
ANR	4799968	Callee	getifaddrs		4799942	0					
ANR	4799969	Identifier	getifaddrs		4799942	0					
ANR	4799970	ArgumentList	& ifaddr		4799942	1					
ANR	4799971	Argument	& ifaddr		4799942	0					
ANR	4799972	UnaryOperationExpression	& ifaddr		4799942	0					
ANR	4799973	UnaryOperator	&		4799942	0					
ANR	4799974	Identifier	ifaddr		4799942	1					
ANR	4799975	ReturnStatement	return 0 ;	19:2:372:380	4799942	1	True				
ANR	4799976	PrimaryExpression	0		4799942	0					
ANR	4799977	ForStatement	for ( ifa = ifaddr ; ifa != NULL ; ifa = ifa -> ifa_next )		4799942	4					
ANR	4799978	ForInit	ifa = ifaddr ;	21:6:389:401	4799942	0	True				
ANR	4799979	AssignmentExpression	ifa = ifaddr		4799942	0		=			
ANR	4799980	Identifier	ifa		4799942	0					
ANR	4799981	Identifier	ifaddr		4799942	1					
ANR	4799982	Condition	ifa != NULL	21:20:403:413	4799942	1	True				
ANR	4799983	EqualityExpression	ifa != NULL		4799942	0		!=			
ANR	4799984	Identifier	ifa		4799942	0					
ANR	4799985	Identifier	NULL		4799942	1					
ANR	4799986	AssignmentExpression	ifa = ifa -> ifa_next	21:33:416:434	4799942	2	True	=			
ANR	4799987	Identifier	ifa		4799942	0					
ANR	4799988	PtrMemberAccess	ifa -> ifa_next		4799942	1					
ANR	4799989	Identifier	ifa		4799942	0					
ANR	4799990	Identifier	ifa_next		4799942	1					
ANR	4799991	CompoundStatement		14:2:209:245	4799942	3					
ANR	4799992	IfStatement	if ( ifa -> ifa_addr == NULL )		4799942	0					
ANR	4799993	Condition	ifa -> ifa_addr == NULL	22:6:445:465	4799942	0	True				
ANR	4799994	EqualityExpression	ifa -> ifa_addr == NULL		4799942	0		==			
ANR	4799995	PtrMemberAccess	ifa -> ifa_addr		4799942	0					
ANR	4799996	Identifier	ifa		4799942	0					
ANR	4799997	Identifier	ifa_addr		4799942	1					
ANR	4799998	Identifier	NULL		4799942	1					
ANR	4799999	ContinueStatement	continue ;	23:3:471:479	4799942	1	True				
ANR	4800000	IdentifierDeclStatement	condor_sockaddr addr2 ( ifa -> ifa_addr ) ;	25:2:484:520	4799942	1	True				
ANR	4800001	IdentifierDecl	addr2 ( ifa -> ifa_addr )		4799942	0					
ANR	4800002	IdentifierDeclType	condor_sockaddr		4799942	0					
ANR	4800003	Identifier	addr2		4799942	1					
ANR	4800004	PtrMemberAccess	ifa -> ifa_addr		4799942	2					
ANR	4800005	Identifier	ifa		4799942	0					
ANR	4800006	Identifier	ifa_addr		4799942	1					
ANR	4800007	IfStatement	if ( addr . compare_address ( addr2 ) )		4799942	2					
ANR	4800008	Condition	addr . compare_address ( addr2 )	26:6:528:554	4799942	0	True				
ANR	4800009	CallExpression	addr . compare_address ( addr2 )		4799942	0					
ANR	4800010	Callee	addr . compare_address		4799942	0					
ANR	4800011	MemberAccess	addr . compare_address		4799942	0					
ANR	4800012	Identifier	addr		4799942	0					
ANR	4800013	Identifier	compare_address		4799942	1					
ANR	4800014	ArgumentList	addr2		4799942	1					
ANR	4800015	Argument	addr2		4799942	0					
ANR	4800016	Identifier	addr2		4799942	0					
ANR	4800017	CompoundStatement		15:35:282:282	4799942	1					
ANR	4800018	ReturnStatement	return addr2 . to_sin6 ( ) . sin6_scope_id ;	27:3:562:598	4799942	0	True				
ANR	4800019	MemberAccess	addr2 . to_sin6 ( ) . sin6_scope_id		4799942	0					
ANR	4800020	CallExpression	addr2 . to_sin6 ( )		4799942	0					
ANR	4800021	Callee	addr2 . to_sin6		4799942	0					
ANR	4800022	MemberAccess	addr2 . to_sin6		4799942	0					
ANR	4800023	Identifier	addr2		4799942	0					
ANR	4800024	Identifier	to_sin6		4799942	1					
ANR	4800025	ArgumentList			4799942	1					
ANR	4800026	Identifier	sin6_scope_id		4799942	1					
ANR	4800027	ReturnStatement	return ( uint32_t ) - 1 ;	31:1:609:628	4799942	5	True				
ANR	4800028	CastExpression	( uint32_t ) - 1		4799942	0					
ANR	4800029	CastTarget	uint32_t		4799942	0					
ANR	4800030	UnaryOperationExpression	- 1		4799942	1					
ANR	4800031	UnaryOperator	-		4799942	0					
ANR	4800032	PrimaryExpression	1		4799942	1					
ANR	4800033	ReturnType	uint32_t		4799942	1					
ANR	4800034	Identifier	find_scope_id		4799942	2					
ANR	4800035	ParameterList	const condor_sockaddr & addr		4799942	3					
ANR	4800036	Parameter	const condor_sockaddr & addr	12:23:245:271	4799942	0	True				
ANR	4800037	ParameterType	const condor_sockaddr &		4799942	0					
ANR	4800038	Identifier	addr		4799942	1					
ANR	4800039	CFGEntryNode	ENTRY		4799942		True				
ANR	4800040	CFGExitNode	EXIT		4799942		True				
ANR	4800041	Symbol	& ifaddr		4799942						
ANR	4800042	Symbol	NULL		4799942						
ANR	4800043	Symbol	addr2		4799942						
ANR	4800044	Symbol	ifa		4799942						
ANR	4800045	Symbol	addr2 . to_sin6 ( ) . sin6_scope_id		4799942						
ANR	4800046	Symbol	ifa -> ifa_next		4799942						
ANR	4800047	Symbol	addr . is_ipv6		4799942						
ANR	4800048	Symbol	* ifa		4799942						
ANR	4800049	Symbol	addr . compare_address		4799942						
ANR	4800050	Symbol	getifaddrs		4799942						
ANR	4800051	Symbol	ifa -> ifa_addr		4799942						
ANR	4800052	Symbol	ifaddr		4799942						
ANR	4800053	Symbol	addr2 . to_sin6		4799942						
ANR	4800054	Symbol	addr		4799942						
ANR	4800055	Function	ipv6_get_scope_id	34:0:633:915							
ANR	4800056	FunctionDef	ipv6_get_scope_id ()		4800055	0					
ANR	4800057	CompoundStatement		34:29:662:915	4800055	0					
ANR	4800058	IfStatement	if ( ! scope_id_inited )		4800055	0					
ANR	4800059	Condition	! scope_id_inited	35:5:669:684	4800055	0	True				
ANR	4800060	UnaryOperationExpression	! scope_id_inited		4800055	0					
ANR	4800061	UnaryOperator	!		4800055	0					
ANR	4800062	Identifier	scope_id_inited		4800055	1					
ANR	4800063	CompoundStatement		3:2:28:54	4800055	1					
ANR	4800064	IdentifierDeclStatement	MyString network_interface ;	36:2:691:717	4800055	0	True				
ANR	4800065	IdentifierDecl	network_interface		4800055	0					
ANR	4800066	IdentifierDeclType	MyString		4800055	0					
ANR	4800067	Identifier	network_interface		4800055	1					
ANR	4800068	IfStatement	"if ( param ( network_interface , ""NETWORK_INTERFACE"" ) )"		4800055	1					
ANR	4800069	Condition	"param ( network_interface , ""NETWORK_INTERFACE"" )"	37:6:725:769	4800055	0	True				
ANR	4800070	CallExpression	"param ( network_interface , ""NETWORK_INTERFACE"" )"		4800055	0					
ANR	4800071	Callee	param		4800055	0					
ANR	4800072	Identifier	param		4800055	0					
ANR	4800073	ArgumentList	network_interface		4800055	1					
ANR	4800074	Argument	network_interface		4800055	0					
ANR	4800075	Identifier	network_interface		4800055	0					
ANR	4800076	Argument	"""NETWORK_INTERFACE"""		4800055	1					
ANR	4800077	PrimaryExpression	"""NETWORK_INTERFACE"""		4800055	0					
ANR	4800078	CompoundStatement		5:3:114:134	4800055	1					
ANR	4800079	IdentifierDeclStatement	condor_sockaddr addr ;	38:3:777:797	4800055	0	True				
ANR	4800080	IdentifierDecl	addr		4800055	0					
ANR	4800081	IdentifierDeclType	condor_sockaddr		4800055	0					
ANR	4800082	Identifier	addr		4800055	1					
ANR	4800083	IfStatement	if ( addr . from_ip_string ( network_interface ) )		4800055	1					
ANR	4800084	Condition	addr . from_ip_string ( network_interface )	39:7:806:843	4800055	0	True				
ANR	4800085	CallExpression	addr . from_ip_string ( network_interface )		4800055	0					
ANR	4800086	Callee	addr . from_ip_string		4800055	0					
ANR	4800087	MemberAccess	addr . from_ip_string		4800055	0					
ANR	4800088	Identifier	addr		4800055	0					
ANR	4800089	Identifier	from_ip_string		4800055	1					
ANR	4800090	ArgumentList	network_interface		4800055	1					
ANR	4800091	Argument	network_interface		4800055	0					
ANR	4800092	Identifier	network_interface		4800055	0					
ANR	4800093	CompoundStatement		6:47:183:183	4800055	1					
ANR	4800094	ExpressionStatement	scope_id = find_scope_id ( addr )	40:4:852:882	4800055	0	True				
ANR	4800095	AssignmentExpression	scope_id = find_scope_id ( addr )		4800055	0		=			
ANR	4800096	Identifier	scope_id		4800055	0					
ANR	4800097	CallExpression	find_scope_id ( addr )		4800055	1					
ANR	4800098	Callee	find_scope_id		4800055	0					
ANR	4800099	Identifier	find_scope_id		4800055	0					
ANR	4800100	ArgumentList	addr		4800055	1					
ANR	4800101	Argument	addr		4800055	0					
ANR	4800102	Identifier	addr		4800055	0					
ANR	4800103	ReturnStatement	return scope_id ;	45:1:898:913	4800055	1	True				
ANR	4800104	Identifier	scope_id		4800055	0					
ANR	4800105	ReturnType	uint32_t		4800055	1					
ANR	4800106	Identifier	ipv6_get_scope_id		4800055	2					
ANR	4800107	ParameterList			4800055	3					
ANR	4800108	CFGEntryNode	ENTRY		4800055		True				
ANR	4800109	CFGExitNode	EXIT		4800055		True				
ANR	4800110	Symbol	find_scope_id		4800055						
ANR	4800111	Symbol	scope_id_inited		4800055						
ANR	4800112	Symbol	param		4800055						
ANR	4800113	Symbol	scope_id		4800055						
ANR	4800114	Symbol	addr		4800055						
ANR	4800115	Symbol	network_interface		4800055						
ANR	4800116	Symbol	addr . from_ip_string		4800055						
ANR	4800117	Function	ipv6_get_scope_id	50:0:943:1116							
ANR	4800118	FunctionDef	ipv6_get_scope_id ()		4800117	0					
ANR	4800119	CompoundStatement		50:29:972:1116	4800117	0					
ANR	4800120	ExpressionStatement	"EXCEPT ( ""ipv6_get_scope_id is not implemented on this platform.  In practice this means IPv6 does not work on Windows."" )"	52:1:984:1103	4800117	0	True				
ANR	4800121	CallExpression	"EXCEPT ( ""ipv6_get_scope_id is not implemented on this platform.  In practice this means IPv6 does not work on Windows."" )"		4800117	0					
ANR	4800122	Callee	EXCEPT		4800117	0					
ANR	4800123	Identifier	EXCEPT		4800117	0					
ANR	4800124	ArgumentList	"""ipv6_get_scope_id is not implemented on this platform.  In practice this means IPv6 does not work on Windows."""		4800117	1					
ANR	4800125	Argument	"""ipv6_get_scope_id is not implemented on this platform.  In practice this means IPv6 does not work on Windows."""		4800117	0					
ANR	4800126	PrimaryExpression	"""ipv6_get_scope_id is not implemented on this platform.  In practice this means IPv6 does not work on Windows."""		4800117	0					
ANR	4800127	ReturnStatement	return 0 ;	53:1:1106:1114	4800117	1	True				
ANR	4800128	PrimaryExpression	0		4800117	0					
ANR	4800129	ReturnType	uint32_t		4800117	1					
ANR	4800130	Identifier	ipv6_get_scope_id		4800117	2					
ANR	4800131	ParameterList			4800117	3					
ANR	4800132	CFGEntryNode	ENTRY		4800117		True				
ANR	4800133	CFGExitNode	EXIT		4800117		True				
