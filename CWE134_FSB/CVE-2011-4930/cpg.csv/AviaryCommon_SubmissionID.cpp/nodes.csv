command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	66216	File	data/converged/CVE-2011-4930_htcondor/AviaryCommon_SubmissionID.cpp								
ANR	66217	Function	AviaryCommon :: SubmissionID :: SubmissionID	26:11:723:986							
ANR	66218	FunctionDef	AviaryCommon :: SubmissionID :: SubmissionID ()		66217	0					
ANR	66219	CompoundStatement		27:8:774:986	66217	0					
ANR	66220	ExpressionStatement	property_Name	30:20:806:819	66217	0	True				
ANR	66221	Identifier	property_Name		66217	0					
ANR	66222	ExpressionStatement	isValidName = false	32:12:850:870	66217	1	True				
ANR	66223	AssignmentExpression	isValidName = false		66217	0		=			
ANR	66224	Identifier	isValidName		66217	0					
ANR	66225	Identifier	false		66217	1					
ANR	66226	ExpressionStatement	property_Owner	34:20:901:915	66217	2	True				
ANR	66227	Identifier	property_Owner		66217	0					
ANR	66228	ExpressionStatement	isValidOwner = false	36:12:946:967	66217	3	True				
ANR	66229	AssignmentExpression	isValidOwner = false		66217	0		=			
ANR	66230	Identifier	isValidOwner		66217	0					
ANR	66231	Identifier	false		66217	1					
ANR	66232	Identifier	AviaryCommon :: SubmissionID :: SubmissionID		66217	1					
ANR	66233	ParameterList			66217	2					
ANR	66234	CFGEntryNode	ENTRY		66217		True				
ANR	66235	CFGExitNode	EXIT		66217		True				
ANR	66236	Symbol	isValidName		66217						
ANR	66237	Symbol	isValidOwner		66217						
ANR	66238	Symbol	false		66217						
ANR	66239	Function	AviaryCommon :: SubmissionID :: SubmissionID	40:7:996:1419							
ANR	66240	FunctionDef	"AviaryCommon :: SubmissionID :: SubmissionID (std :: string arg_Name , std :: string arg_Owner)"		66239	0					
ANR	66241	CompoundStatement		41:8:1089:1419	66239	0					
ANR	66242	ExpressionStatement	property_Name	43:17:1122:1135	66239	0	True				
ANR	66243	Identifier	property_Name		66239	0					
ANR	66244	ExpressionStatement	isValidName = true	45:12:1163:1182	66239	1	True				
ANR	66245	AssignmentExpression	isValidName = true		66239	0		=			
ANR	66246	Identifier	isValidName		66239	0					
ANR	66247	Identifier	true		66239	1					
ANR	66248	ExpressionStatement	property_Owner	47:17:1214:1228	66239	2	True				
ANR	66249	Identifier	property_Owner		66239	0					
ANR	66250	ExpressionStatement	isValidOwner = true	49:12:1256:1276	66239	3	True				
ANR	66251	AssignmentExpression	isValidOwner = true		66239	0		=			
ANR	66252	Identifier	isValidOwner		66239	0					
ANR	66253	Identifier	true		66239	1					
ANR	66254	ExpressionStatement	property_Name = arg_Name	51:20:1311:1335	66239	4	True				
ANR	66255	AssignmentExpression	property_Name = arg_Name		66239	0		=			
ANR	66256	Identifier	property_Name		66239	0					
ANR	66257	Identifier	arg_Name		66239	1					
ANR	66258	ExpressionStatement	property_Owner = arg_Owner	53:20:1370:1396	66239	5	True				
ANR	66259	AssignmentExpression	property_Owner = arg_Owner		66239	0		=			
ANR	66260	Identifier	property_Owner		66239	0					
ANR	66261	Identifier	arg_Owner		66239	1					
ANR	66262	Identifier	AviaryCommon :: SubmissionID :: SubmissionID		66239	1					
ANR	66263	ParameterList	"std :: string arg_Name , std :: string arg_Owner"		66239	2					
ANR	66264	Parameter	std :: string arg_Name	40:48:1037:1056	66239	0	True				
ANR	66265	ParameterType	std :: string		66239	0					
ANR	66266	Identifier	arg_Name		66239	1					
ANR	66267	Parameter	std :: string arg_Owner	40:69:1058:1078	66239	1	True				
ANR	66268	ParameterType	std :: string		66239	0					
ANR	66269	Identifier	arg_Owner		66239	1					
ANR	66270	CFGEntryNode	ENTRY		66239		True				
ANR	66271	CFGExitNode	EXIT		66239		True				
ANR	66272	Symbol	isValidName		66239						
ANR	66273	Symbol	isValidOwner		66239						
ANR	66274	Symbol	true		66239						
ANR	66275	Symbol	arg_Owner		66239						
ANR	66276	Symbol	property_Name		66239						
ANR	66277	Symbol	property_Owner		66239						
ANR	66278	Symbol	arg_Name		66239						
ANR	66279	Function	AviaryCommon :: SubmissionID :: ~SubmissionID	56:8:1429:1492							
ANR	66280	FunctionDef	AviaryCommon :: SubmissionID :: ~SubmissionID ()		66279	0					
ANR	66281	CompoundStatement		57:8:1481:1492	66279	0					
ANR	66282	Identifier	AviaryCommon :: SubmissionID :: ~SubmissionID		66279	1					
ANR	66283	ParameterList			66279	2					
ANR	66284	CFGEntryNode	ENTRY		66279		True				
ANR	66285	CFGExitNode	EXIT		66279		True				
ANR	66286	Function	AviaryCommon :: SubmissionID :: deserialize	63:8:1513:17839							
ANR	66287	FunctionDef	"AviaryCommon :: SubmissionID :: deserialize (axiom_node_t * * dp_parent , bool * dp_is_early_node_valid , bool dont_care_minoccurs)"		66286	0					
ANR	66288	CompoundStatement		65:8:1664:17839	66286	0					
ANR	66289	IdentifierDeclStatement	axiom_node_t * parent = * dp_parent ;	66:10:1676:1709	66286	0	True				
ANR	66290	IdentifierDecl	* parent = * dp_parent		66286	0					
ANR	66291	IdentifierDeclType	axiom_node_t *		66286	0					
ANR	66292	Identifier	parent		66286	1					
ANR	66293	AssignmentExpression	* parent = * dp_parent		66286	2		=			
ANR	66294	Identifier	parent		66286	0					
ANR	66295	UnaryOperationExpression	* dp_parent		66286	1					
ANR	66296	UnaryOperator	*		66286	0					
ANR	66297	Identifier	dp_parent		66286	1					
ANR	66298	IdentifierDeclStatement	bool status = AXIS2_SUCCESS ;	68:10:1732:1759	66286	1	True				
ANR	66299	IdentifierDecl	status = AXIS2_SUCCESS		66286	0					
ANR	66300	IdentifierDeclType	bool		66286	0					
ANR	66301	Identifier	status		66286	1					
ANR	66302	AssignmentExpression	status = AXIS2_SUCCESS		66286	2		=			
ANR	66303	Identifier	AXIS2_SUCCESS		66286	0					
ANR	66304	Identifier	AXIS2_SUCCESS		66286	1					
ANR	66305	IdentifierDeclStatement	const axis2_char_t * text_value = NULL ;	70:9:1782:1819	66286	2	True				
ANR	66306	IdentifierDecl	* text_value = NULL		66286	0					
ANR	66307	IdentifierDeclType	const axis2_char_t *		66286	0					
ANR	66308	Identifier	text_value		66286	1					
ANR	66309	AssignmentExpression	* text_value = NULL		66286	2		=			
ANR	66310	Identifier	NULL		66286	0					
ANR	66311	Identifier	NULL		66286	1					
ANR	66312	IdentifierDeclStatement	axutil_qname_t * mqname = NULL ;	71:9:1830:1859	66286	3	True				
ANR	66313	IdentifierDecl	* mqname = NULL		66286	0					
ANR	66314	IdentifierDeclType	axutil_qname_t *		66286	0					
ANR	66315	Identifier	mqname		66286	1					
ANR	66316	AssignmentExpression	* mqname = NULL		66286	2		=			
ANR	66317	Identifier	NULL		66286	0					
ANR	66318	Identifier	NULL		66286	1					
ANR	66319	IdentifierDeclStatement	axutil_qname_t * element_qname = NULL ;	73:12:1884:1920	66286	4	True				
ANR	66320	IdentifierDecl	* element_qname = NULL		66286	0					
ANR	66321	IdentifierDeclType	axutil_qname_t *		66286	0					
ANR	66322	Identifier	element_qname		66286	1					
ANR	66323	AssignmentExpression	* element_qname = NULL		66286	2		=			
ANR	66324	Identifier	NULL		66286	0					
ANR	66325	Identifier	NULL		66286	1					
ANR	66326	IdentifierDeclStatement	axiom_node_t * first_node = NULL ;	75:15:1951:1982	66286	5	True				
ANR	66327	IdentifierDecl	* first_node = NULL		66286	0					
ANR	66328	IdentifierDeclType	axiom_node_t *		66286	0					
ANR	66329	Identifier	first_node		66286	1					
ANR	66330	AssignmentExpression	* first_node = NULL		66286	2		=			
ANR	66331	Identifier	NULL		66286	0					
ANR	66332	Identifier	NULL		66286	1					
ANR	66333	IdentifierDeclStatement	bool is_early_node_valid = true ;	76:15:1999:2030	66286	6	True				
ANR	66334	IdentifierDecl	is_early_node_valid = true		66286	0					
ANR	66335	IdentifierDeclType	bool		66286	0					
ANR	66336	Identifier	is_early_node_valid		66286	1					
ANR	66337	AssignmentExpression	is_early_node_valid = true		66286	2		=			
ANR	66338	Identifier	true		66286	0					
ANR	66339	Identifier	true		66286	1					
ANR	66340	IdentifierDeclStatement	axiom_node_t * current_node = NULL ;	77:15:2047:2080	66286	7	True				
ANR	66341	IdentifierDecl	* current_node = NULL		66286	0					
ANR	66342	IdentifierDeclType	axiom_node_t *		66286	0					
ANR	66343	Identifier	current_node		66286	1					
ANR	66344	AssignmentExpression	* current_node = NULL		66286	2		=			
ANR	66345	Identifier	NULL		66286	0					
ANR	66346	Identifier	NULL		66286	1					
ANR	66347	IdentifierDeclStatement	axiom_element_t * current_element = NULL ;	78:15:2097:2136	66286	8	True				
ANR	66348	IdentifierDecl	* current_element = NULL		66286	0					
ANR	66349	IdentifierDeclType	axiom_element_t *		66286	0					
ANR	66350	Identifier	current_element		66286	1					
ANR	66351	AssignmentExpression	* current_element = NULL		66286	2		=			
ANR	66352	Identifier	NULL		66286	0					
ANR	66353	Identifier	NULL		66286	1					
ANR	66354	WhileStatement	"while ( parent && axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT )"		66286	9					
ANR	66355	Condition	"parent && axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"	81:20:2186:2267	66286	0	True				
ANR	66356	AndExpression	"parent && axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		66286	0		&&			
ANR	66357	Identifier	parent		66286	0					
ANR	66358	EqualityExpression	"axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		66286	1		!=			
ANR	66359	CallExpression	"axiom_node_get_node_type ( parent , Environment :: getEnv ( ) )"		66286	0					
ANR	66360	Callee	axiom_node_get_node_type		66286	0					
ANR	66361	Identifier	axiom_node_get_node_type		66286	0					
ANR	66362	ArgumentList	parent		66286	1					
ANR	66363	Argument	parent		66286	0					
ANR	66364	Identifier	parent		66286	0					
ANR	66365	Argument	Environment :: getEnv ( )		66286	1					
ANR	66366	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	66367	Callee	Environment :: getEnv		66286	0					
ANR	66368	Identifier	Environment :: getEnv		66286	0					
ANR	66369	ArgumentList			66286	1					
ANR	66370	Identifier	AXIOM_ELEMENT		66286	1					
ANR	66371	CompoundStatement		18:14:619:619	66286	1					
ANR	66372	ExpressionStatement	"parent = axiom_node_get_next_sibling ( parent , Environment :: getEnv ( ) )"	83:18:2304:2371	66286	0	True				
ANR	66373	AssignmentExpression	"parent = axiom_node_get_next_sibling ( parent , Environment :: getEnv ( ) )"		66286	0		=			
ANR	66374	Identifier	parent		66286	0					
ANR	66375	CallExpression	"axiom_node_get_next_sibling ( parent , Environment :: getEnv ( ) )"		66286	1					
ANR	66376	Callee	axiom_node_get_next_sibling		66286	0					
ANR	66377	Identifier	axiom_node_get_next_sibling		66286	0					
ANR	66378	ArgumentList	parent		66286	1					
ANR	66379	Argument	parent		66286	0					
ANR	66380	Identifier	parent		66286	0					
ANR	66381	Argument	Environment :: getEnv ( )		66286	1					
ANR	66382	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	66383	Callee	Environment :: getEnv		66286	0					
ANR	66384	Identifier	Environment :: getEnv		66286	0					
ANR	66385	ArgumentList			66286	1					
ANR	66386	IfStatement	if ( NULL == parent )		66286	10					
ANR	66387	Condition	NULL == parent	85:18:2407:2420	66286	0	True				
ANR	66388	EqualityExpression	NULL == parent		66286	0		==			
ANR	66389	Identifier	NULL		66286	0					
ANR	66390	Identifier	parent		66286	1					
ANR	66391	CompoundStatement		22:14:772:772	66286	1					
ANR	66392	ReturnStatement	return AXIS2_FAILURE ;	87:16:2458:2478	66286	0	True				
ANR	66393	Identifier	AXIS2_FAILURE		66286	0					
ANR	66394	ExpressionStatement	"first_node = axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"	91:22:2556:2626	66286	11	True				
ANR	66395	AssignmentExpression	"first_node = axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"		66286	0		=			
ANR	66396	Identifier	first_node		66286	0					
ANR	66397	CallExpression	"axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"		66286	1					
ANR	66398	Callee	axiom_node_get_first_child		66286	0					
ANR	66399	Identifier	axiom_node_get_first_child		66286	0					
ANR	66400	ArgumentList	parent		66286	1					
ANR	66401	Argument	parent		66286	0					
ANR	66402	Identifier	parent		66286	0					
ANR	66403	Argument	Environment :: getEnv ( )		66286	1					
ANR	66404	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	66405	Callee	Environment :: getEnv		66286	0					
ANR	66406	Identifier	Environment :: getEnv		66286	0					
ANR	66407	ArgumentList			66286	1					
ANR	66408	ExpressionStatement	current_node = first_node	102:35:2891:2916	66286	12	True				
ANR	66409	AssignmentExpression	current_node = first_node		66286	0		=			
ANR	66410	Identifier	current_node		66286	0					
ANR	66411	Identifier	first_node		66286	1					
ANR	66412	ExpressionStatement	is_early_node_valid = false	103:35:2953:2980	66286	13	True				
ANR	66413	AssignmentExpression	is_early_node_valid = false		66286	0		=			
ANR	66414	Identifier	is_early_node_valid		66286	0					
ANR	66415	Identifier	false		66286	1					
ANR	66416	WhileStatement	"while ( current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT )"		66286	14					
ANR	66417	Condition	"current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"	106:42:3096:3189	66286	0	True				
ANR	66418	AndExpression	"current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		66286	0		&&			
ANR	66419	Identifier	current_node		66286	0					
ANR	66420	EqualityExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		66286	1		!=			
ANR	66421	CallExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) )"		66286	0					
ANR	66422	Callee	axiom_node_get_node_type		66286	0					
ANR	66423	Identifier	axiom_node_get_node_type		66286	0					
ANR	66424	ArgumentList	current_node		66286	1					
ANR	66425	Argument	current_node		66286	0					
ANR	66426	Identifier	current_node		66286	0					
ANR	66427	Argument	Environment :: getEnv ( )		66286	1					
ANR	66428	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	66429	Callee	Environment :: getEnv		66286	0					
ANR	66430	Identifier	Environment :: getEnv		66286	0					
ANR	66431	ArgumentList			66286	1					
ANR	66432	Identifier	AXIOM_ELEMENT		66286	1					
ANR	66433	CompoundStatement		43:36:1563:1563	66286	1					
ANR	66434	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	108:40:3270:3349	66286	0	True				
ANR	66435	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		66286	0		=			
ANR	66436	Identifier	current_node		66286	0					
ANR	66437	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		66286	1					
ANR	66438	Callee	axiom_node_get_next_sibling		66286	0					
ANR	66439	Identifier	axiom_node_get_next_sibling		66286	0					
ANR	66440	ArgumentList	current_node		66286	1					
ANR	66441	Argument	current_node		66286	0					
ANR	66442	Identifier	current_node		66286	0					
ANR	66443	Argument	Environment :: getEnv ( )		66286	1					
ANR	66444	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	66445	Callee	Environment :: getEnv		66286	0					
ANR	66446	Identifier	Environment :: getEnv		66286	0					
ANR	66447	ArgumentList			66286	1					
ANR	66448	IfStatement	if ( current_node != NULL )		66286	15					
ANR	66449	Condition	current_node != NULL	110:39:3428:3447	66286	0	True				
ANR	66450	EqualityExpression	current_node != NULL		66286	0		!=			
ANR	66451	Identifier	current_node		66286	0					
ANR	66452	Identifier	NULL		66286	1					
ANR	66453	CompoundStatement		47:36:1821:1821	66286	1					
ANR	66454	ExpressionStatement	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"	112:40:3528:3629	66286	0	True				
ANR	66455	AssignmentExpression	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		66286	0		=			
ANR	66456	Identifier	current_element		66286	0					
ANR	66457	CastExpression	"( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		66286	1					
ANR	66458	CastTarget	axiom_element_t *		66286	0					
ANR	66459	CallExpression	"axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		66286	1					
ANR	66460	Callee	axiom_node_get_data_element		66286	0					
ANR	66461	Identifier	axiom_node_get_data_element		66286	0					
ANR	66462	ArgumentList	current_node		66286	1					
ANR	66463	Argument	current_node		66286	0					
ANR	66464	Identifier	current_node		66286	0					
ANR	66465	Argument	Environment :: getEnv ( )		66286	1					
ANR	66466	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	66467	Callee	Environment :: getEnv		66286	0					
ANR	66468	Identifier	Environment :: getEnv		66286	0					
ANR	66469	ArgumentList			66286	1					
ANR	66470	ExpressionStatement	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"	113:40:3671:3757	66286	1	True				
ANR	66471	AssignmentExpression	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		66286	0		=			
ANR	66472	Identifier	mqname		66286	0					
ANR	66473	CallExpression	"axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		66286	1					
ANR	66474	Callee	axiom_element_get_qname		66286	0					
ANR	66475	Identifier	axiom_element_get_qname		66286	0					
ANR	66476	ArgumentList	current_element		66286	1					
ANR	66477	Argument	current_element		66286	0					
ANR	66478	Identifier	current_element		66286	0					
ANR	66479	Argument	Environment :: getEnv ( )		66286	1					
ANR	66480	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	66481	Callee	Environment :: getEnv		66286	0					
ANR	66482	Identifier	Environment :: getEnv		66286	0					
ANR	66483	ArgumentList			66286	1					
ANR	66484	Argument	current_node		66286	2					
ANR	66485	Identifier	current_node		66286	0					
ANR	66486	ExpressionStatement	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""name"" , NULL , NULL )"	116:33:3866:3944	66286	16	True				
ANR	66487	AssignmentExpression	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""name"" , NULL , NULL )"		66286	0		=			
ANR	66488	Identifier	element_qname		66286	0					
ANR	66489	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""name"" , NULL , NULL )"		66286	1					
ANR	66490	Callee	axutil_qname_create		66286	0					
ANR	66491	Identifier	axutil_qname_create		66286	0					
ANR	66492	ArgumentList	Environment :: getEnv ( )		66286	1					
ANR	66493	Argument	Environment :: getEnv ( )		66286	0					
ANR	66494	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	66495	Callee	Environment :: getEnv		66286	0					
ANR	66496	Identifier	Environment :: getEnv		66286	0					
ANR	66497	ArgumentList			66286	1					
ANR	66498	Argument	"""name"""		66286	1					
ANR	66499	PrimaryExpression	"""name"""		66286	0					
ANR	66500	Argument	NULL		66286	2					
ANR	66501	Identifier	NULL		66286	0					
ANR	66502	Argument	NULL		66286	3					
ANR	66503	Identifier	NULL		66286	0					
ANR	66504	IfStatement	"if ( ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""name"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) ) )"		66286	17					
ANR	66505	Condition	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""name"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"	120:32:4046:4246	66286	0	True				
ANR	66506	AndExpression	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""name"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		66286	0		&&			
ANR	66507	Identifier	current_node		66286	0					
ANR	66508	AndExpression	"current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""name"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		66286	1		&&			
ANR	66509	Identifier	current_element		66286	0					
ANR	66510	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""name"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		66286	1		||			
ANR	66511	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		66286	0					
ANR	66512	Callee	axutil_qname_equals		66286	0					
ANR	66513	Identifier	axutil_qname_equals		66286	0					
ANR	66514	ArgumentList	element_qname		66286	1					
ANR	66515	Argument	element_qname		66286	0					
ANR	66516	Identifier	element_qname		66286	0					
ANR	66517	Argument	Environment :: getEnv ( )		66286	1					
ANR	66518	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	66519	Callee	Environment :: getEnv		66286	0					
ANR	66520	Identifier	Environment :: getEnv		66286	0					
ANR	66521	ArgumentList			66286	1					
ANR	66522	Argument	mqname		66286	2					
ANR	66523	Identifier	mqname		66286	0					
ANR	66524	UnaryOperationExpression	"! axutil_strcmp ( ""name"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		66286	1					
ANR	66525	UnaryOperator	!		66286	0					
ANR	66526	CallExpression	"axutil_strcmp ( ""name"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		66286	1					
ANR	66527	Callee	axutil_strcmp		66286	0					
ANR	66528	Identifier	axutil_strcmp		66286	0					
ANR	66529	ArgumentList	"""name"""		66286	1					
ANR	66530	Argument	"""name"""		66286	0					
ANR	66531	PrimaryExpression	"""name"""		66286	0					
ANR	66532	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		66286	1					
ANR	66533	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		66286	0					
ANR	66534	Callee	axiom_element_get_localname		66286	0					
ANR	66535	Identifier	axiom_element_get_localname		66286	0					
ANR	66536	ArgumentList	current_element		66286	1					
ANR	66537	Argument	current_element		66286	0					
ANR	66538	Identifier	current_element		66286	0					
ANR	66539	Argument	Environment :: getEnv ( )		66286	1					
ANR	66540	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	66541	Callee	Environment :: getEnv		66286	0					
ANR	66542	Identifier	Environment :: getEnv		66286	0					
ANR	66543	ArgumentList			66286	1					
ANR	66544	CompoundStatement		57:27:2611:2611	66286	1					
ANR	66545	IfStatement	"if ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""name"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) )"		66286	0					
ANR	66546	Condition	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""name"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"	122:34:4312:4510	66286	0	True				
ANR	66547	AndExpression	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""name"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		66286	0		&&			
ANR	66548	Identifier	current_node		66286	0					
ANR	66549	AndExpression	"current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""name"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		66286	1		&&			
ANR	66550	Identifier	current_element		66286	0					
ANR	66551	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""name"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		66286	1		||			
ANR	66552	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		66286	0					
ANR	66553	Callee	axutil_qname_equals		66286	0					
ANR	66554	Identifier	axutil_qname_equals		66286	0					
ANR	66555	ArgumentList	element_qname		66286	1					
ANR	66556	Argument	element_qname		66286	0					
ANR	66557	Identifier	element_qname		66286	0					
ANR	66558	Argument	Environment :: getEnv ( )		66286	1					
ANR	66559	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	66560	Callee	Environment :: getEnv		66286	0					
ANR	66561	Identifier	Environment :: getEnv		66286	0					
ANR	66562	ArgumentList			66286	1					
ANR	66563	Argument	mqname		66286	2					
ANR	66564	Identifier	mqname		66286	0					
ANR	66565	UnaryOperationExpression	"! axutil_strcmp ( ""name"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		66286	1					
ANR	66566	UnaryOperator	!		66286	0					
ANR	66567	CallExpression	"axutil_strcmp ( ""name"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		66286	1					
ANR	66568	Callee	axutil_strcmp		66286	0					
ANR	66569	Identifier	axutil_strcmp		66286	0					
ANR	66570	ArgumentList	"""name"""		66286	1					
ANR	66571	Argument	"""name"""		66286	0					
ANR	66572	PrimaryExpression	"""name"""		66286	0					
ANR	66573	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		66286	1					
ANR	66574	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		66286	0					
ANR	66575	Callee	axiom_element_get_localname		66286	0					
ANR	66576	Identifier	axiom_element_get_localname		66286	0					
ANR	66577	ArgumentList	current_element		66286	1					
ANR	66578	Argument	current_element		66286	0					
ANR	66579	Identifier	current_element		66286	0					
ANR	66580	Argument	Environment :: getEnv ( )		66286	1					
ANR	66581	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	66582	Callee	Environment :: getEnv		66286	0					
ANR	66583	Identifier	Environment :: getEnv		66286	0					
ANR	66584	ArgumentList			66286	1					
ANR	66585	CompoundStatement		59:30:2878:2878	66286	1					
ANR	66586	ExpressionStatement	is_early_node_valid = true	124:32:4577:4603	66286	0	True				
ANR	66587	AssignmentExpression	is_early_node_valid = true		66286	0		=			
ANR	66588	Identifier	is_early_node_valid		66286	0					
ANR	66589	Identifier	true		66286	1					
ANR	66590	ExpressionStatement	"text_value = axiom_element_get_text ( current_element , Environment :: getEnv ( ) , current_node )"	128:38:4740:4829	66286	1	True				
ANR	66591	AssignmentExpression	"text_value = axiom_element_get_text ( current_element , Environment :: getEnv ( ) , current_node )"		66286	0		=			
ANR	66592	Identifier	text_value		66286	0					
ANR	66593	CallExpression	"axiom_element_get_text ( current_element , Environment :: getEnv ( ) , current_node )"		66286	1					
ANR	66594	Callee	axiom_element_get_text		66286	0					
ANR	66595	Identifier	axiom_element_get_text		66286	0					
ANR	66596	ArgumentList	current_element		66286	1					
ANR	66597	Argument	current_element		66286	0					
ANR	66598	Identifier	current_element		66286	0					
ANR	66599	Argument	Environment :: getEnv ( )		66286	1					
ANR	66600	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	66601	Callee	Environment :: getEnv		66286	0					
ANR	66602	Identifier	Environment :: getEnv		66286	0					
ANR	66603	ArgumentList			66286	1					
ANR	66604	Argument	current_node		66286	2					
ANR	66605	Identifier	current_node		66286	0					
ANR	66606	IfStatement	if ( text_value != NULL )		66286	2					
ANR	66607	Condition	text_value != NULL	129:41:4872:4889	66286	0	True				
ANR	66608	EqualityExpression	text_value != NULL		66286	0		!=			
ANR	66609	Identifier	text_value		66286	0					
ANR	66610	Identifier	NULL		66286	1					
ANR	66611	CompoundStatement		66:38:3265:3265	66286	1					
ANR	66612	ExpressionStatement	status = setName ( text_value )	131:44:4976:5004	66286	0	True				
ANR	66613	AssignmentExpression	status = setName ( text_value )		66286	0		=			
ANR	66614	Identifier	status		66286	0					
ANR	66615	CallExpression	setName ( text_value )		66286	1					
ANR	66616	Callee	setName		66286	0					
ANR	66617	Identifier	setName		66286	0					
ANR	66618	ArgumentList	text_value		66286	1					
ANR	66619	Argument	text_value		66286	0					
ANR	66620	Identifier	text_value		66286	0					
ANR	66621	ElseStatement	else		66286	0					
ANR	66622	CompoundStatement		83:44:4449:4485	66286	0					
ANR	66623	IdentifierDeclStatement	axiom_attribute_t * the_attri = NULL ;	145:44:5955:5990	66286	0	True				
ANR	66624	IdentifierDecl	* the_attri = NULL		66286	0					
ANR	66625	IdentifierDeclType	axiom_attribute_t *		66286	0					
ANR	66626	Identifier	the_attri		66286	1					
ANR	66627	AssignmentExpression	* the_attri = NULL		66286	2		=			
ANR	66628	Identifier	NULL		66286	0					
ANR	66629	Identifier	NULL		66286	1					
ANR	66630	IdentifierDeclStatement	axis2_char_t * attrib_text = NULL ;	146:44:6036:6068	66286	1	True				
ANR	66631	IdentifierDecl	* attrib_text = NULL		66286	0					
ANR	66632	IdentifierDeclType	axis2_char_t *		66286	0					
ANR	66633	Identifier	attrib_text		66286	1					
ANR	66634	AssignmentExpression	* attrib_text = NULL		66286	2		=			
ANR	66635	Identifier	NULL		66286	0					
ANR	66636	Identifier	NULL		66286	1					
ANR	66637	IdentifierDeclStatement	axutil_hash_t * attribute_hash = NULL ;	147:44:6114:6150	66286	2	True				
ANR	66638	IdentifierDecl	* attribute_hash = NULL		66286	0					
ANR	66639	IdentifierDeclType	axutil_hash_t *		66286	0					
ANR	66640	Identifier	attribute_hash		66286	1					
ANR	66641	AssignmentExpression	* attribute_hash = NULL		66286	2		=			
ANR	66642	Identifier	NULL		66286	0					
ANR	66643	Identifier	NULL		66286	1					
ANR	66644	ExpressionStatement	"attribute_hash = axiom_element_get_all_attributes ( current_element , Environment :: getEnv ( ) )"	149:44:6197:6286	66286	3	True				
ANR	66645	AssignmentExpression	"attribute_hash = axiom_element_get_all_attributes ( current_element , Environment :: getEnv ( ) )"		66286	0		=			
ANR	66646	Identifier	attribute_hash		66286	0					
ANR	66647	CallExpression	"axiom_element_get_all_attributes ( current_element , Environment :: getEnv ( ) )"		66286	1					
ANR	66648	Callee	axiom_element_get_all_attributes		66286	0					
ANR	66649	Identifier	axiom_element_get_all_attributes		66286	0					
ANR	66650	ArgumentList	current_element		66286	1					
ANR	66651	Argument	current_element		66286	0					
ANR	66652	Identifier	current_element		66286	0					
ANR	66653	Argument	Environment :: getEnv ( )		66286	1					
ANR	66654	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	66655	Callee	Environment :: getEnv		66286	0					
ANR	66656	Identifier	Environment :: getEnv		66286	0					
ANR	66657	ArgumentList			66286	1					
ANR	66658	ExpressionStatement	attrib_text = NULL	151:44:6333:6351	66286	4	True				
ANR	66659	AssignmentExpression	attrib_text = NULL		66286	0		=			
ANR	66660	Identifier	attrib_text		66286	0					
ANR	66661	Identifier	NULL		66286	1					
ANR	66662	IfStatement	if ( attribute_hash )		66286	5					
ANR	66663	Condition	attribute_hash	152:47:6400:6413	66286	0	True				
ANR	66664	Identifier	attribute_hash		66286	0					
ANR	66665	CompoundStatement		92:49:4980:4995	66286	1					
ANR	66666	IdentifierDeclStatement	axutil_hash_index_t * hi ;	154:49:6511:6534	66286	0	True				
ANR	66667	IdentifierDecl	* hi		66286	0					
ANR	66668	IdentifierDeclType	axutil_hash_index_t *		66286	0					
ANR	66669	Identifier	hi		66286	1					
ANR	66670	IdentifierDeclStatement	void * val ;	155:49:6585:6594	66286	1	True				
ANR	66671	IdentifierDecl	* val		66286	0					
ANR	66672	IdentifierDeclType	void *		66286	0					
ANR	66673	Identifier	val		66286	1					
ANR	66674	IdentifierDeclStatement	const void * key ;	156:49:6645:6660	66286	2	True				
ANR	66675	IdentifierDecl	* key		66286	0					
ANR	66676	IdentifierDeclType	const void *		66286	0					
ANR	66677	Identifier	key		66286	1					
ANR	66678	ForStatement	"for ( hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) ) ; hi ; hi = axutil_hash_next ( Environment :: getEnv ( ) , hi ) )"		66286	3					
ANR	66679	ForInit	"hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) ) ;"	158:54:6757:6818	66286	0	True				
ANR	66680	AssignmentExpression	"hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) )"		66286	0		=			
ANR	66681	Identifier	hi		66286	0					
ANR	66682	CallExpression	"axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) )"		66286	1					
ANR	66683	Callee	axutil_hash_first		66286	0					
ANR	66684	Identifier	axutil_hash_first		66286	0					
ANR	66685	ArgumentList	attribute_hash		66286	1					
ANR	66686	Argument	attribute_hash		66286	0					
ANR	66687	Identifier	attribute_hash		66286	0					
ANR	66688	Argument	Environment :: getEnv ( )		66286	1					
ANR	66689	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	66690	Callee	Environment :: getEnv		66286	0					
ANR	66691	Identifier	Environment :: getEnv		66286	0					
ANR	66692	ArgumentList			66286	1					
ANR	66693	Condition	hi	158:117:6820:6821	66286	1	True				
ANR	66694	Identifier	hi		66286	0					
ANR	66695	AssignmentExpression	"hi = axutil_hash_next ( Environment :: getEnv ( ) , hi )"	158:121:6824:6871	66286	2	True	=			
ANR	66696	Identifier	hi		66286	0					
ANR	66697	CallExpression	"axutil_hash_next ( Environment :: getEnv ( ) , hi )"		66286	1					
ANR	66698	Callee	axutil_hash_next		66286	0					
ANR	66699	Identifier	axutil_hash_next		66286	0					
ANR	66700	ArgumentList	Environment :: getEnv ( )		66286	1					
ANR	66701	Argument	Environment :: getEnv ( )		66286	0					
ANR	66702	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	66703	Callee	Environment :: getEnv		66286	0					
ANR	66704	Identifier	Environment :: getEnv		66286	0					
ANR	66705	ArgumentList			66286	1					
ANR	66706	Argument	hi		66286	1					
ANR	66707	Identifier	hi		66286	0					
ANR	66708	CompoundStatement		95:49:5258:5258	66286	3					
ANR	66709	ExpressionStatement	"axutil_hash_this ( hi , & key , NULL , & val )"	160:53:6978:7016	66286	0	True				
ANR	66710	CallExpression	"axutil_hash_this ( hi , & key , NULL , & val )"		66286	0					
ANR	66711	Callee	axutil_hash_this		66286	0					
ANR	66712	Identifier	axutil_hash_this		66286	0					
ANR	66713	ArgumentList	hi		66286	1					
ANR	66714	Argument	hi		66286	0					
ANR	66715	Identifier	hi		66286	0					
ANR	66716	Argument	& key		66286	1					
ANR	66717	UnaryOperationExpression	& key		66286	0					
ANR	66718	UnaryOperator	&		66286	0					
ANR	66719	Identifier	key		66286	1					
ANR	66720	Argument	NULL		66286	2					
ANR	66721	Identifier	NULL		66286	0					
ANR	66722	Argument	& val		66286	3					
ANR	66723	UnaryOperationExpression	& val		66286	0					
ANR	66724	UnaryOperator	&		66286	0					
ANR	66725	Identifier	val		66286	1					
ANR	66726	IfStatement	"if ( strstr ( ( axis2_char_t * ) key , ""nil|http://www.w3.org/2001/XMLSchema-instance"" ) )"		66286	1					
ANR	66727	Condition	"strstr ( ( axis2_char_t * ) key , ""nil|http://www.w3.org/2001/XMLSchema-instance"" )"	162:56:7128:7202	66286	0	True				
ANR	66728	CallExpression	"strstr ( ( axis2_char_t * ) key , ""nil|http://www.w3.org/2001/XMLSchema-instance"" )"		66286	0					
ANR	66729	Callee	strstr		66286	0					
ANR	66730	Identifier	strstr		66286	0					
ANR	66731	ArgumentList	( axis2_char_t * ) key		66286	1					
ANR	66732	Argument	( axis2_char_t * ) key		66286	0					
ANR	66733	CastExpression	( axis2_char_t * ) key		66286	0					
ANR	66734	CastTarget	axis2_char_t *		66286	0					
ANR	66735	Identifier	key		66286	1					
ANR	66736	Argument	"""nil|http://www.w3.org/2001/XMLSchema-instance"""		66286	1					
ANR	66737	PrimaryExpression	"""nil|http://www.w3.org/2001/XMLSchema-instance"""		66286	0					
ANR	66738	CompoundStatement		99:53:5593:5593	66286	1					
ANR	66739	ExpressionStatement	the_attri = ( axiom_attribute_t * ) val	164:57:7317:7352	66286	0	True				
ANR	66740	AssignmentExpression	the_attri = ( axiom_attribute_t * ) val		66286	0		=			
ANR	66741	Identifier	the_attri		66286	0					
ANR	66742	CastExpression	( axiom_attribute_t * ) val		66286	1					
ANR	66743	CastTarget	axiom_attribute_t *		66286	0					
ANR	66744	Identifier	val		66286	1					
ANR	66745	BreakStatement	break ;	165:57:7411:7416	66286	1	True				
ANR	66746	IfStatement	if ( the_attri )		66286	6					
ANR	66747	Condition	the_attri	170:47:7618:7626	66286	0	True				
ANR	66748	Identifier	the_attri		66286	0					
ANR	66749	CompoundStatement		107:44:6008:6008	66286	1					
ANR	66750	ExpressionStatement	"attrib_text = axiom_attribute_get_value ( the_attri , Environment :: getEnv ( ) )"	172:48:7723:7796	66286	0	True				
ANR	66751	AssignmentExpression	"attrib_text = axiom_attribute_get_value ( the_attri , Environment :: getEnv ( ) )"		66286	0		=			
ANR	66752	Identifier	attrib_text		66286	0					
ANR	66753	CallExpression	"axiom_attribute_get_value ( the_attri , Environment :: getEnv ( ) )"		66286	1					
ANR	66754	Callee	axiom_attribute_get_value		66286	0					
ANR	66755	Identifier	axiom_attribute_get_value		66286	0					
ANR	66756	ArgumentList	the_attri		66286	1					
ANR	66757	Argument	the_attri		66286	0					
ANR	66758	Identifier	the_attri		66286	0					
ANR	66759	Argument	Environment :: getEnv ( )		66286	1					
ANR	66760	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	66761	Callee	Environment :: getEnv		66286	0					
ANR	66762	Identifier	Environment :: getEnv		66286	0					
ANR	66763	ArgumentList			66286	1					
ANR	66764	ElseStatement	else		66286	0					
ANR	66765	CompoundStatement		111:44:6272:6272	66286	0					
ANR	66766	ExpressionStatement	"attrib_text = axiom_element_get_attribute_value_by_name ( current_element , Environment :: getEnv ( ) , ""nil"" )"	177:48:8176:8278	66286	0	True				
ANR	66767	AssignmentExpression	"attrib_text = axiom_element_get_attribute_value_by_name ( current_element , Environment :: getEnv ( ) , ""nil"" )"		66286	0		=			
ANR	66768	Identifier	attrib_text		66286	0					
ANR	66769	CallExpression	"axiom_element_get_attribute_value_by_name ( current_element , Environment :: getEnv ( ) , ""nil"" )"		66286	1					
ANR	66770	Callee	axiom_element_get_attribute_value_by_name		66286	0					
ANR	66771	Identifier	axiom_element_get_attribute_value_by_name		66286	0					
ANR	66772	ArgumentList	current_element		66286	1					
ANR	66773	Argument	current_element		66286	0					
ANR	66774	Identifier	current_element		66286	0					
ANR	66775	Argument	Environment :: getEnv ( )		66286	1					
ANR	66776	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	66777	Callee	Environment :: getEnv		66286	0					
ANR	66778	Identifier	Environment :: getEnv		66286	0					
ANR	66779	ArgumentList			66286	1					
ANR	66780	Argument	"""nil"""		66286	2					
ANR	66781	PrimaryExpression	"""nil"""		66286	0					
ANR	66782	IfStatement	"if ( attrib_text && 0 == axutil_strcmp ( attrib_text , ""1"" ) )"		66286	7					
ANR	66783	Condition	"attrib_text && 0 == axutil_strcmp ( attrib_text , ""1"" )"	180:47:8374:8424	66286	0	True				
ANR	66784	AndExpression	"attrib_text && 0 == axutil_strcmp ( attrib_text , ""1"" )"		66286	0		&&			
ANR	66785	Identifier	attrib_text		66286	0					
ANR	66786	EqualityExpression	"0 == axutil_strcmp ( attrib_text , ""1"" )"		66286	1		==			
ANR	66787	PrimaryExpression	0		66286	0					
ANR	66788	CallExpression	"axutil_strcmp ( attrib_text , ""1"" )"		66286	1					
ANR	66789	Callee	axutil_strcmp		66286	0					
ANR	66790	Identifier	axutil_strcmp		66286	0					
ANR	66791	ArgumentList	attrib_text		66286	1					
ANR	66792	Argument	attrib_text		66286	0					
ANR	66793	Identifier	attrib_text		66286	0					
ANR	66794	Argument	"""1"""		66286	1					
ANR	66795	PrimaryExpression	"""1"""		66286	0					
ANR	66796	CompoundStatement		117:44:6806:6806	66286	1					
ANR	66797	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""NULL value is set to a non nillable element name"" )"	182:48:8521:8630	66286	0	True				
ANR	66798	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""NULL value is set to a non nillable element name"" )"		66286	0					
ANR	66799	Callee	WSF_LOG_ERROR_MSG		66286	0					
ANR	66800	Identifier	WSF_LOG_ERROR_MSG		66286	0					
ANR	66801	ArgumentList	Environment :: getEnv ( ) -> log		66286	1					
ANR	66802	Argument	Environment :: getEnv ( ) -> log		66286	0					
ANR	66803	PtrMemberAccess	Environment :: getEnv ( ) -> log		66286	0					
ANR	66804	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	66805	Callee	Environment :: getEnv		66286	0					
ANR	66806	Identifier	Environment :: getEnv		66286	0					
ANR	66807	ArgumentList			66286	1					
ANR	66808	Identifier	log		66286	1					
ANR	66809	Argument	WSF_LOG_SI		66286	1					
ANR	66810	Identifier	WSF_LOG_SI		66286	0					
ANR	66811	Argument	"""NULL value is set to a non nillable element name"""		66286	2					
ANR	66812	PrimaryExpression	"""NULL value is set to a non nillable element name"""		66286	0					
ANR	66813	ExpressionStatement	status = AXIS2_FAILURE	183:48:8680:8702	66286	1	True				
ANR	66814	AssignmentExpression	status = AXIS2_FAILURE		66286	0		=			
ANR	66815	Identifier	status		66286	0					
ANR	66816	Identifier	AXIS2_FAILURE		66286	1					
ANR	66817	ElseStatement	else		66286	0					
ANR	66818	CompoundStatement		122:44:7178:7178	66286	0					
ANR	66819	ExpressionStatement	"status = setName ( """" )"	188:48:8990:9010	66286	0	True				
ANR	66820	AssignmentExpression	"status = setName ( """" )"		66286	0		=			
ANR	66821	Identifier	status		66286	0					
ANR	66822	CallExpression	"setName ( """" )"		66286	1					
ANR	66823	Callee	setName		66286	0					
ANR	66824	Identifier	setName		66286	0					
ANR	66825	ArgumentList	""""""		66286	1					
ANR	66826	Argument	""""""		66286	0					
ANR	66827	PrimaryExpression	""""""		66286	0					
ANR	66828	IfStatement	if ( AXIS2_FAILURE == status )		66286	3					
ANR	66829	Condition	AXIS2_FAILURE == status	192:36:9173:9196	66286	0	True				
ANR	66830	EqualityExpression	AXIS2_FAILURE == status		66286	0		==			
ANR	66831	Identifier	AXIS2_FAILURE		66286	0					
ANR	66832	Identifier	status		66286	1					
ANR	66833	CompoundStatement		129:33:7567:7567	66286	1					
ANR	66834	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for name "" )"	194:37:9271:9368	66286	0	True				
ANR	66835	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for name "" )"		66286	0					
ANR	66836	Callee	WSF_LOG_ERROR_MSG		66286	0					
ANR	66837	Identifier	WSF_LOG_ERROR_MSG		66286	0					
ANR	66838	ArgumentList	Environment :: getEnv ( ) -> log		66286	1					
ANR	66839	Argument	Environment :: getEnv ( ) -> log		66286	0					
ANR	66840	PtrMemberAccess	Environment :: getEnv ( ) -> log		66286	0					
ANR	66841	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	66842	Callee	Environment :: getEnv		66286	0					
ANR	66843	Identifier	Environment :: getEnv		66286	0					
ANR	66844	ArgumentList			66286	1					
ANR	66845	Identifier	log		66286	1					
ANR	66846	Argument	WSF_LOG_SI		66286	1					
ANR	66847	Identifier	WSF_LOG_SI		66286	0					
ANR	66848	Argument	"""failed in setting the value for name """		66286	2					
ANR	66849	PrimaryExpression	"""failed in setting the value for name """		66286	0					
ANR	66850	IfStatement	if ( element_qname )		66286	1					
ANR	66851	Condition	element_qname	195:40:9410:9422	66286	0	True				
ANR	66852	Identifier	element_qname		66286	0					
ANR	66853	CompoundStatement		132:37:7797:7797	66286	1					
ANR	66854	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	197:41:9505:9560	66286	0	True				
ANR	66855	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		66286	0					
ANR	66856	Callee	axutil_qname_free		66286	0					
ANR	66857	Identifier	axutil_qname_free		66286	0					
ANR	66858	ArgumentList	element_qname		66286	1					
ANR	66859	Argument	element_qname		66286	0					
ANR	66860	Identifier	element_qname		66286	0					
ANR	66861	Argument	Environment :: getEnv ( )		66286	1					
ANR	66862	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	66863	Callee	Environment :: getEnv		66286	0					
ANR	66864	Identifier	Environment :: getEnv		66286	0					
ANR	66865	ArgumentList			66286	1					
ANR	66866	ReturnStatement	return AXIS2_FAILURE ;	199:37:9638:9658	66286	2	True				
ANR	66867	Identifier	AXIS2_FAILURE		66286	0					
ANR	66868	IfStatement	if ( element_qname )		66286	18					
ANR	66869	Condition	element_qname	203:21:9776:9788	66286	0	True				
ANR	66870	Identifier	element_qname		66286	0					
ANR	66871	CompoundStatement		140:18:8144:8144	66286	1					
ANR	66872	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	205:21:9832:9887	66286	0	True				
ANR	66873	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		66286	0					
ANR	66874	Callee	axutil_qname_free		66286	0					
ANR	66875	Identifier	axutil_qname_free		66286	0					
ANR	66876	ArgumentList	element_qname		66286	1					
ANR	66877	Argument	element_qname		66286	0					
ANR	66878	Identifier	element_qname		66286	0					
ANR	66879	Argument	Environment :: getEnv ( )		66286	1					
ANR	66880	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	66881	Callee	Environment :: getEnv		66286	0					
ANR	66882	Identifier	Environment :: getEnv		66286	0					
ANR	66883	ArgumentList			66286	1					
ANR	66884	ExpressionStatement	element_qname = NULL	206:21:9910:9930	66286	1	True				
ANR	66885	AssignmentExpression	element_qname = NULL		66286	0		=			
ANR	66886	Identifier	element_qname		66286	0					
ANR	66887	Identifier	NULL		66286	1					
ANR	66888	IfStatement	if ( current_node != NULL && is_early_node_valid )		66286	19					
ANR	66889	Condition	current_node != NULL && is_early_node_valid	222:38:10427:10469	66286	0	True				
ANR	66890	AndExpression	current_node != NULL && is_early_node_valid		66286	0		&&			
ANR	66891	EqualityExpression	current_node != NULL		66286	0		!=			
ANR	66892	Identifier	current_node		66286	0					
ANR	66893	Identifier	NULL		66286	1					
ANR	66894	Identifier	is_early_node_valid		66286	1					
ANR	66895	CompoundStatement		159:35:8842:8842	66286	1					
ANR	66896	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	224:39:10548:10627	66286	0	True				
ANR	66897	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		66286	0		=			
ANR	66898	Identifier	current_node		66286	0					
ANR	66899	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		66286	1					
ANR	66900	Callee	axiom_node_get_next_sibling		66286	0					
ANR	66901	Identifier	axiom_node_get_next_sibling		66286	0					
ANR	66902	ArgumentList	current_node		66286	1					
ANR	66903	Argument	current_node		66286	0					
ANR	66904	Identifier	current_node		66286	0					
ANR	66905	Argument	Environment :: getEnv ( )		66286	1					
ANR	66906	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	66907	Callee	Environment :: getEnv		66286	0					
ANR	66908	Identifier	Environment :: getEnv		66286	0					
ANR	66909	ArgumentList			66286	1					
ANR	66910	WhileStatement	"while ( current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT )"		66286	1					
ANR	66911	Condition	"current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"	227:46:10755:10848	66286	0	True				
ANR	66912	AndExpression	"current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		66286	0		&&			
ANR	66913	Identifier	current_node		66286	0					
ANR	66914	EqualityExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		66286	1		!=			
ANR	66915	CallExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) )"		66286	0					
ANR	66916	Callee	axiom_node_get_node_type		66286	0					
ANR	66917	Identifier	axiom_node_get_node_type		66286	0					
ANR	66918	ArgumentList	current_node		66286	1					
ANR	66919	Argument	current_node		66286	0					
ANR	66920	Identifier	current_node		66286	0					
ANR	66921	Argument	Environment :: getEnv ( )		66286	1					
ANR	66922	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	66923	Callee	Environment :: getEnv		66286	0					
ANR	66924	Identifier	Environment :: getEnv		66286	0					
ANR	66925	ArgumentList			66286	1					
ANR	66926	Identifier	AXIOM_ELEMENT		66286	1					
ANR	66927	CompoundStatement		164:40:9226:9226	66286	1					
ANR	66928	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	229:44:10937:11016	66286	0	True				
ANR	66929	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		66286	0		=			
ANR	66930	Identifier	current_node		66286	0					
ANR	66931	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		66286	1					
ANR	66932	Callee	axiom_node_get_next_sibling		66286	0					
ANR	66933	Identifier	axiom_node_get_next_sibling		66286	0					
ANR	66934	ArgumentList	current_node		66286	1					
ANR	66935	Argument	current_node		66286	0					
ANR	66936	Identifier	current_node		66286	0					
ANR	66937	Argument	Environment :: getEnv ( )		66286	1					
ANR	66938	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	66939	Callee	Environment :: getEnv		66286	0					
ANR	66940	Identifier	Environment :: getEnv		66286	0					
ANR	66941	ArgumentList			66286	1					
ANR	66942	IfStatement	if ( current_node != NULL )		66286	2					
ANR	66943	Condition	current_node != NULL	231:43:11103:11122	66286	0	True				
ANR	66944	EqualityExpression	current_node != NULL		66286	0		!=			
ANR	66945	Identifier	current_node		66286	0					
ANR	66946	Identifier	NULL		66286	1					
ANR	66947	CompoundStatement		168:40:9500:9500	66286	1					
ANR	66948	ExpressionStatement	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"	233:44:11211:11312	66286	0	True				
ANR	66949	AssignmentExpression	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		66286	0		=			
ANR	66950	Identifier	current_element		66286	0					
ANR	66951	CastExpression	"( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		66286	1					
ANR	66952	CastTarget	axiom_element_t *		66286	0					
ANR	66953	CallExpression	"axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		66286	1					
ANR	66954	Callee	axiom_node_get_data_element		66286	0					
ANR	66955	Identifier	axiom_node_get_data_element		66286	0					
ANR	66956	ArgumentList	current_node		66286	1					
ANR	66957	Argument	current_node		66286	0					
ANR	66958	Identifier	current_node		66286	0					
ANR	66959	Argument	Environment :: getEnv ( )		66286	1					
ANR	66960	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	66961	Callee	Environment :: getEnv		66286	0					
ANR	66962	Identifier	Environment :: getEnv		66286	0					
ANR	66963	ArgumentList			66286	1					
ANR	66964	ExpressionStatement	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"	234:44:11358:11444	66286	1	True				
ANR	66965	AssignmentExpression	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		66286	0		=			
ANR	66966	Identifier	mqname		66286	0					
ANR	66967	CallExpression	"axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		66286	1					
ANR	66968	Callee	axiom_element_get_qname		66286	0					
ANR	66969	Identifier	axiom_element_get_qname		66286	0					
ANR	66970	ArgumentList	current_element		66286	1					
ANR	66971	Argument	current_element		66286	0					
ANR	66972	Identifier	current_element		66286	0					
ANR	66973	Argument	Environment :: getEnv ( )		66286	1					
ANR	66974	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	66975	Callee	Environment :: getEnv		66286	0					
ANR	66976	Identifier	Environment :: getEnv		66286	0					
ANR	66977	ArgumentList			66286	1					
ANR	66978	Argument	current_node		66286	2					
ANR	66979	Identifier	current_node		66286	0					
ANR	66980	ExpressionStatement	is_early_node_valid = false	238:35:11600:11627	66286	20	True				
ANR	66981	AssignmentExpression	is_early_node_valid = false		66286	0		=			
ANR	66982	Identifier	is_early_node_valid		66286	0					
ANR	66983	Identifier	false		66286	1					
ANR	66984	ExpressionStatement	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""owner"" , NULL , NULL )"	240:33:11696:11775	66286	21	True				
ANR	66985	AssignmentExpression	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""owner"" , NULL , NULL )"		66286	0		=			
ANR	66986	Identifier	element_qname		66286	0					
ANR	66987	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""owner"" , NULL , NULL )"		66286	1					
ANR	66988	Callee	axutil_qname_create		66286	0					
ANR	66989	Identifier	axutil_qname_create		66286	0					
ANR	66990	ArgumentList	Environment :: getEnv ( )		66286	1					
ANR	66991	Argument	Environment :: getEnv ( )		66286	0					
ANR	66992	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	66993	Callee	Environment :: getEnv		66286	0					
ANR	66994	Identifier	Environment :: getEnv		66286	0					
ANR	66995	ArgumentList			66286	1					
ANR	66996	Argument	"""owner"""		66286	1					
ANR	66997	PrimaryExpression	"""owner"""		66286	0					
ANR	66998	Argument	NULL		66286	2					
ANR	66999	Identifier	NULL		66286	0					
ANR	67000	Argument	NULL		66286	3					
ANR	67001	Identifier	NULL		66286	0					
ANR	67002	IfStatement	"if ( ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""owner"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) ) )"		66286	22					
ANR	67003	Condition	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""owner"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"	244:32:11877:12078	66286	0	True				
ANR	67004	AndExpression	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""owner"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		66286	0		&&			
ANR	67005	Identifier	current_node		66286	0					
ANR	67006	AndExpression	"current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""owner"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		66286	1		&&			
ANR	67007	Identifier	current_element		66286	0					
ANR	67008	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""owner"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		66286	1		||			
ANR	67009	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		66286	0					
ANR	67010	Callee	axutil_qname_equals		66286	0					
ANR	67011	Identifier	axutil_qname_equals		66286	0					
ANR	67012	ArgumentList	element_qname		66286	1					
ANR	67013	Argument	element_qname		66286	0					
ANR	67014	Identifier	element_qname		66286	0					
ANR	67015	Argument	Environment :: getEnv ( )		66286	1					
ANR	67016	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	67017	Callee	Environment :: getEnv		66286	0					
ANR	67018	Identifier	Environment :: getEnv		66286	0					
ANR	67019	ArgumentList			66286	1					
ANR	67020	Argument	mqname		66286	2					
ANR	67021	Identifier	mqname		66286	0					
ANR	67022	UnaryOperationExpression	"! axutil_strcmp ( ""owner"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		66286	1					
ANR	67023	UnaryOperator	!		66286	0					
ANR	67024	CallExpression	"axutil_strcmp ( ""owner"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		66286	1					
ANR	67025	Callee	axutil_strcmp		66286	0					
ANR	67026	Identifier	axutil_strcmp		66286	0					
ANR	67027	ArgumentList	"""owner"""		66286	1					
ANR	67028	Argument	"""owner"""		66286	0					
ANR	67029	PrimaryExpression	"""owner"""		66286	0					
ANR	67030	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		66286	1					
ANR	67031	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		66286	0					
ANR	67032	Callee	axiom_element_get_localname		66286	0					
ANR	67033	Identifier	axiom_element_get_localname		66286	0					
ANR	67034	ArgumentList	current_element		66286	1					
ANR	67035	Argument	current_element		66286	0					
ANR	67036	Identifier	current_element		66286	0					
ANR	67037	Argument	Environment :: getEnv ( )		66286	1					
ANR	67038	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	67039	Callee	Environment :: getEnv		66286	0					
ANR	67040	Identifier	Environment :: getEnv		66286	0					
ANR	67041	ArgumentList			66286	1					
ANR	67042	CompoundStatement		181:27:10443:10443	66286	1					
ANR	67043	IfStatement	"if ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""owner"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) )"		66286	0					
ANR	67044	Condition	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""owner"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"	246:34:12144:12343	66286	0	True				
ANR	67045	AndExpression	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""owner"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		66286	0		&&			
ANR	67046	Identifier	current_node		66286	0					
ANR	67047	AndExpression	"current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""owner"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		66286	1		&&			
ANR	67048	Identifier	current_element		66286	0					
ANR	67049	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""owner"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		66286	1		||			
ANR	67050	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		66286	0					
ANR	67051	Callee	axutil_qname_equals		66286	0					
ANR	67052	Identifier	axutil_qname_equals		66286	0					
ANR	67053	ArgumentList	element_qname		66286	1					
ANR	67054	Argument	element_qname		66286	0					
ANR	67055	Identifier	element_qname		66286	0					
ANR	67056	Argument	Environment :: getEnv ( )		66286	1					
ANR	67057	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	67058	Callee	Environment :: getEnv		66286	0					
ANR	67059	Identifier	Environment :: getEnv		66286	0					
ANR	67060	ArgumentList			66286	1					
ANR	67061	Argument	mqname		66286	2					
ANR	67062	Identifier	mqname		66286	0					
ANR	67063	UnaryOperationExpression	"! axutil_strcmp ( ""owner"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		66286	1					
ANR	67064	UnaryOperator	!		66286	0					
ANR	67065	CallExpression	"axutil_strcmp ( ""owner"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		66286	1					
ANR	67066	Callee	axutil_strcmp		66286	0					
ANR	67067	Identifier	axutil_strcmp		66286	0					
ANR	67068	ArgumentList	"""owner"""		66286	1					
ANR	67069	Argument	"""owner"""		66286	0					
ANR	67070	PrimaryExpression	"""owner"""		66286	0					
ANR	67071	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		66286	1					
ANR	67072	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		66286	0					
ANR	67073	Callee	axiom_element_get_localname		66286	0					
ANR	67074	Identifier	axiom_element_get_localname		66286	0					
ANR	67075	ArgumentList	current_element		66286	1					
ANR	67076	Argument	current_element		66286	0					
ANR	67077	Identifier	current_element		66286	0					
ANR	67078	Argument	Environment :: getEnv ( )		66286	1					
ANR	67079	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	67080	Callee	Environment :: getEnv		66286	0					
ANR	67081	Identifier	Environment :: getEnv		66286	0					
ANR	67082	ArgumentList			66286	1					
ANR	67083	CompoundStatement		183:30:10711:10711	66286	1					
ANR	67084	ExpressionStatement	is_early_node_valid = true	248:32:12410:12436	66286	0	True				
ANR	67085	AssignmentExpression	is_early_node_valid = true		66286	0		=			
ANR	67086	Identifier	is_early_node_valid		66286	0					
ANR	67087	Identifier	true		66286	1					
ANR	67088	ExpressionStatement	"text_value = axiom_element_get_text ( current_element , Environment :: getEnv ( ) , current_node )"	252:38:12573:12662	66286	1	True				
ANR	67089	AssignmentExpression	"text_value = axiom_element_get_text ( current_element , Environment :: getEnv ( ) , current_node )"		66286	0		=			
ANR	67090	Identifier	text_value		66286	0					
ANR	67091	CallExpression	"axiom_element_get_text ( current_element , Environment :: getEnv ( ) , current_node )"		66286	1					
ANR	67092	Callee	axiom_element_get_text		66286	0					
ANR	67093	Identifier	axiom_element_get_text		66286	0					
ANR	67094	ArgumentList	current_element		66286	1					
ANR	67095	Argument	current_element		66286	0					
ANR	67096	Identifier	current_element		66286	0					
ANR	67097	Argument	Environment :: getEnv ( )		66286	1					
ANR	67098	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	67099	Callee	Environment :: getEnv		66286	0					
ANR	67100	Identifier	Environment :: getEnv		66286	0					
ANR	67101	ArgumentList			66286	1					
ANR	67102	Argument	current_node		66286	2					
ANR	67103	Identifier	current_node		66286	0					
ANR	67104	IfStatement	if ( text_value != NULL )		66286	2					
ANR	67105	Condition	text_value != NULL	253:41:12705:12722	66286	0	True				
ANR	67106	EqualityExpression	text_value != NULL		66286	0		!=			
ANR	67107	Identifier	text_value		66286	0					
ANR	67108	Identifier	NULL		66286	1					
ANR	67109	CompoundStatement		190:38:11098:11098	66286	1					
ANR	67110	ExpressionStatement	status = setOwner ( text_value )	255:44:12809:12838	66286	0	True				
ANR	67111	AssignmentExpression	status = setOwner ( text_value )		66286	0		=			
ANR	67112	Identifier	status		66286	0					
ANR	67113	CallExpression	setOwner ( text_value )		66286	1					
ANR	67114	Callee	setOwner		66286	0					
ANR	67115	Identifier	setOwner		66286	0					
ANR	67116	ArgumentList	text_value		66286	1					
ANR	67117	Argument	text_value		66286	0					
ANR	67118	Identifier	text_value		66286	0					
ANR	67119	ElseStatement	else		66286	0					
ANR	67120	CompoundStatement		207:44:12283:12319	66286	0					
ANR	67121	IdentifierDeclStatement	axiom_attribute_t * the_attri = NULL ;	269:44:13789:13824	66286	0	True				
ANR	67122	IdentifierDecl	* the_attri = NULL		66286	0					
ANR	67123	IdentifierDeclType	axiom_attribute_t *		66286	0					
ANR	67124	Identifier	the_attri		66286	1					
ANR	67125	AssignmentExpression	* the_attri = NULL		66286	2		=			
ANR	67126	Identifier	NULL		66286	0					
ANR	67127	Identifier	NULL		66286	1					
ANR	67128	IdentifierDeclStatement	axis2_char_t * attrib_text = NULL ;	270:44:13870:13902	66286	1	True				
ANR	67129	IdentifierDecl	* attrib_text = NULL		66286	0					
ANR	67130	IdentifierDeclType	axis2_char_t *		66286	0					
ANR	67131	Identifier	attrib_text		66286	1					
ANR	67132	AssignmentExpression	* attrib_text = NULL		66286	2		=			
ANR	67133	Identifier	NULL		66286	0					
ANR	67134	Identifier	NULL		66286	1					
ANR	67135	IdentifierDeclStatement	axutil_hash_t * attribute_hash = NULL ;	271:44:13948:13984	66286	2	True				
ANR	67136	IdentifierDecl	* attribute_hash = NULL		66286	0					
ANR	67137	IdentifierDeclType	axutil_hash_t *		66286	0					
ANR	67138	Identifier	attribute_hash		66286	1					
ANR	67139	AssignmentExpression	* attribute_hash = NULL		66286	2		=			
ANR	67140	Identifier	NULL		66286	0					
ANR	67141	Identifier	NULL		66286	1					
ANR	67142	ExpressionStatement	"attribute_hash = axiom_element_get_all_attributes ( current_element , Environment :: getEnv ( ) )"	273:44:14031:14120	66286	3	True				
ANR	67143	AssignmentExpression	"attribute_hash = axiom_element_get_all_attributes ( current_element , Environment :: getEnv ( ) )"		66286	0		=			
ANR	67144	Identifier	attribute_hash		66286	0					
ANR	67145	CallExpression	"axiom_element_get_all_attributes ( current_element , Environment :: getEnv ( ) )"		66286	1					
ANR	67146	Callee	axiom_element_get_all_attributes		66286	0					
ANR	67147	Identifier	axiom_element_get_all_attributes		66286	0					
ANR	67148	ArgumentList	current_element		66286	1					
ANR	67149	Argument	current_element		66286	0					
ANR	67150	Identifier	current_element		66286	0					
ANR	67151	Argument	Environment :: getEnv ( )		66286	1					
ANR	67152	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	67153	Callee	Environment :: getEnv		66286	0					
ANR	67154	Identifier	Environment :: getEnv		66286	0					
ANR	67155	ArgumentList			66286	1					
ANR	67156	ExpressionStatement	attrib_text = NULL	275:44:14167:14185	66286	4	True				
ANR	67157	AssignmentExpression	attrib_text = NULL		66286	0		=			
ANR	67158	Identifier	attrib_text		66286	0					
ANR	67159	Identifier	NULL		66286	1					
ANR	67160	IfStatement	if ( attribute_hash )		66286	5					
ANR	67161	Condition	attribute_hash	276:47:14234:14247	66286	0	True				
ANR	67162	Identifier	attribute_hash		66286	0					
ANR	67163	CompoundStatement		216:49:12814:12829	66286	1					
ANR	67164	IdentifierDeclStatement	axutil_hash_index_t * hi ;	278:49:14345:14368	66286	0	True				
ANR	67165	IdentifierDecl	* hi		66286	0					
ANR	67166	IdentifierDeclType	axutil_hash_index_t *		66286	0					
ANR	67167	Identifier	hi		66286	1					
ANR	67168	IdentifierDeclStatement	void * val ;	279:49:14419:14428	66286	1	True				
ANR	67169	IdentifierDecl	* val		66286	0					
ANR	67170	IdentifierDeclType	void *		66286	0					
ANR	67171	Identifier	val		66286	1					
ANR	67172	IdentifierDeclStatement	const void * key ;	280:49:14479:14494	66286	2	True				
ANR	67173	IdentifierDecl	* key		66286	0					
ANR	67174	IdentifierDeclType	const void *		66286	0					
ANR	67175	Identifier	key		66286	1					
ANR	67176	ForStatement	"for ( hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) ) ; hi ; hi = axutil_hash_next ( Environment :: getEnv ( ) , hi ) )"		66286	3					
ANR	67177	ForInit	"hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) ) ;"	282:54:14591:14652	66286	0	True				
ANR	67178	AssignmentExpression	"hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) )"		66286	0		=			
ANR	67179	Identifier	hi		66286	0					
ANR	67180	CallExpression	"axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) )"		66286	1					
ANR	67181	Callee	axutil_hash_first		66286	0					
ANR	67182	Identifier	axutil_hash_first		66286	0					
ANR	67183	ArgumentList	attribute_hash		66286	1					
ANR	67184	Argument	attribute_hash		66286	0					
ANR	67185	Identifier	attribute_hash		66286	0					
ANR	67186	Argument	Environment :: getEnv ( )		66286	1					
ANR	67187	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	67188	Callee	Environment :: getEnv		66286	0					
ANR	67189	Identifier	Environment :: getEnv		66286	0					
ANR	67190	ArgumentList			66286	1					
ANR	67191	Condition	hi	282:117:14654:14655	66286	1	True				
ANR	67192	Identifier	hi		66286	0					
ANR	67193	AssignmentExpression	"hi = axutil_hash_next ( Environment :: getEnv ( ) , hi )"	282:121:14658:14705	66286	2	True	=			
ANR	67194	Identifier	hi		66286	0					
ANR	67195	CallExpression	"axutil_hash_next ( Environment :: getEnv ( ) , hi )"		66286	1					
ANR	67196	Callee	axutil_hash_next		66286	0					
ANR	67197	Identifier	axutil_hash_next		66286	0					
ANR	67198	ArgumentList	Environment :: getEnv ( )		66286	1					
ANR	67199	Argument	Environment :: getEnv ( )		66286	0					
ANR	67200	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	67201	Callee	Environment :: getEnv		66286	0					
ANR	67202	Identifier	Environment :: getEnv		66286	0					
ANR	67203	ArgumentList			66286	1					
ANR	67204	Argument	hi		66286	1					
ANR	67205	Identifier	hi		66286	0					
ANR	67206	CompoundStatement		219:49:13092:13092	66286	3					
ANR	67207	ExpressionStatement	"axutil_hash_this ( hi , & key , NULL , & val )"	284:53:14812:14850	66286	0	True				
ANR	67208	CallExpression	"axutil_hash_this ( hi , & key , NULL , & val )"		66286	0					
ANR	67209	Callee	axutil_hash_this		66286	0					
ANR	67210	Identifier	axutil_hash_this		66286	0					
ANR	67211	ArgumentList	hi		66286	1					
ANR	67212	Argument	hi		66286	0					
ANR	67213	Identifier	hi		66286	0					
ANR	67214	Argument	& key		66286	1					
ANR	67215	UnaryOperationExpression	& key		66286	0					
ANR	67216	UnaryOperator	&		66286	0					
ANR	67217	Identifier	key		66286	1					
ANR	67218	Argument	NULL		66286	2					
ANR	67219	Identifier	NULL		66286	0					
ANR	67220	Argument	& val		66286	3					
ANR	67221	UnaryOperationExpression	& val		66286	0					
ANR	67222	UnaryOperator	&		66286	0					
ANR	67223	Identifier	val		66286	1					
ANR	67224	IfStatement	"if ( strstr ( ( axis2_char_t * ) key , ""nil|http://www.w3.org/2001/XMLSchema-instance"" ) )"		66286	1					
ANR	67225	Condition	"strstr ( ( axis2_char_t * ) key , ""nil|http://www.w3.org/2001/XMLSchema-instance"" )"	286:56:14962:15036	66286	0	True				
ANR	67226	CallExpression	"strstr ( ( axis2_char_t * ) key , ""nil|http://www.w3.org/2001/XMLSchema-instance"" )"		66286	0					
ANR	67227	Callee	strstr		66286	0					
ANR	67228	Identifier	strstr		66286	0					
ANR	67229	ArgumentList	( axis2_char_t * ) key		66286	1					
ANR	67230	Argument	( axis2_char_t * ) key		66286	0					
ANR	67231	CastExpression	( axis2_char_t * ) key		66286	0					
ANR	67232	CastTarget	axis2_char_t *		66286	0					
ANR	67233	Identifier	key		66286	1					
ANR	67234	Argument	"""nil|http://www.w3.org/2001/XMLSchema-instance"""		66286	1					
ANR	67235	PrimaryExpression	"""nil|http://www.w3.org/2001/XMLSchema-instance"""		66286	0					
ANR	67236	CompoundStatement		223:53:13427:13427	66286	1					
ANR	67237	ExpressionStatement	the_attri = ( axiom_attribute_t * ) val	288:57:15151:15186	66286	0	True				
ANR	67238	AssignmentExpression	the_attri = ( axiom_attribute_t * ) val		66286	0		=			
ANR	67239	Identifier	the_attri		66286	0					
ANR	67240	CastExpression	( axiom_attribute_t * ) val		66286	1					
ANR	67241	CastTarget	axiom_attribute_t *		66286	0					
ANR	67242	Identifier	val		66286	1					
ANR	67243	BreakStatement	break ;	289:57:15245:15250	66286	1	True				
ANR	67244	IfStatement	if ( the_attri )		66286	6					
ANR	67245	Condition	the_attri	294:47:15452:15460	66286	0	True				
ANR	67246	Identifier	the_attri		66286	0					
ANR	67247	CompoundStatement		231:44:13842:13842	66286	1					
ANR	67248	ExpressionStatement	"attrib_text = axiom_attribute_get_value ( the_attri , Environment :: getEnv ( ) )"	296:48:15557:15630	66286	0	True				
ANR	67249	AssignmentExpression	"attrib_text = axiom_attribute_get_value ( the_attri , Environment :: getEnv ( ) )"		66286	0		=			
ANR	67250	Identifier	attrib_text		66286	0					
ANR	67251	CallExpression	"axiom_attribute_get_value ( the_attri , Environment :: getEnv ( ) )"		66286	1					
ANR	67252	Callee	axiom_attribute_get_value		66286	0					
ANR	67253	Identifier	axiom_attribute_get_value		66286	0					
ANR	67254	ArgumentList	the_attri		66286	1					
ANR	67255	Argument	the_attri		66286	0					
ANR	67256	Identifier	the_attri		66286	0					
ANR	67257	Argument	Environment :: getEnv ( )		66286	1					
ANR	67258	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	67259	Callee	Environment :: getEnv		66286	0					
ANR	67260	Identifier	Environment :: getEnv		66286	0					
ANR	67261	ArgumentList			66286	1					
ANR	67262	ElseStatement	else		66286	0					
ANR	67263	CompoundStatement		235:44:14106:14106	66286	0					
ANR	67264	ExpressionStatement	"attrib_text = axiom_element_get_attribute_value_by_name ( current_element , Environment :: getEnv ( ) , ""nil"" )"	301:48:16010:16112	66286	0	True				
ANR	67265	AssignmentExpression	"attrib_text = axiom_element_get_attribute_value_by_name ( current_element , Environment :: getEnv ( ) , ""nil"" )"		66286	0		=			
ANR	67266	Identifier	attrib_text		66286	0					
ANR	67267	CallExpression	"axiom_element_get_attribute_value_by_name ( current_element , Environment :: getEnv ( ) , ""nil"" )"		66286	1					
ANR	67268	Callee	axiom_element_get_attribute_value_by_name		66286	0					
ANR	67269	Identifier	axiom_element_get_attribute_value_by_name		66286	0					
ANR	67270	ArgumentList	current_element		66286	1					
ANR	67271	Argument	current_element		66286	0					
ANR	67272	Identifier	current_element		66286	0					
ANR	67273	Argument	Environment :: getEnv ( )		66286	1					
ANR	67274	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	67275	Callee	Environment :: getEnv		66286	0					
ANR	67276	Identifier	Environment :: getEnv		66286	0					
ANR	67277	ArgumentList			66286	1					
ANR	67278	Argument	"""nil"""		66286	2					
ANR	67279	PrimaryExpression	"""nil"""		66286	0					
ANR	67280	IfStatement	"if ( attrib_text && 0 == axutil_strcmp ( attrib_text , ""1"" ) )"		66286	7					
ANR	67281	Condition	"attrib_text && 0 == axutil_strcmp ( attrib_text , ""1"" )"	304:47:16208:16258	66286	0	True				
ANR	67282	AndExpression	"attrib_text && 0 == axutil_strcmp ( attrib_text , ""1"" )"		66286	0		&&			
ANR	67283	Identifier	attrib_text		66286	0					
ANR	67284	EqualityExpression	"0 == axutil_strcmp ( attrib_text , ""1"" )"		66286	1		==			
ANR	67285	PrimaryExpression	0		66286	0					
ANR	67286	CallExpression	"axutil_strcmp ( attrib_text , ""1"" )"		66286	1					
ANR	67287	Callee	axutil_strcmp		66286	0					
ANR	67288	Identifier	axutil_strcmp		66286	0					
ANR	67289	ArgumentList	attrib_text		66286	1					
ANR	67290	Argument	attrib_text		66286	0					
ANR	67291	Identifier	attrib_text		66286	0					
ANR	67292	Argument	"""1"""		66286	1					
ANR	67293	PrimaryExpression	"""1"""		66286	0					
ANR	67294	CompoundStatement		241:44:14640:14640	66286	1					
ANR	67295	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""NULL value is set to a non nillable element owner"" )"	306:48:16355:16465	66286	0	True				
ANR	67296	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""NULL value is set to a non nillable element owner"" )"		66286	0					
ANR	67297	Callee	WSF_LOG_ERROR_MSG		66286	0					
ANR	67298	Identifier	WSF_LOG_ERROR_MSG		66286	0					
ANR	67299	ArgumentList	Environment :: getEnv ( ) -> log		66286	1					
ANR	67300	Argument	Environment :: getEnv ( ) -> log		66286	0					
ANR	67301	PtrMemberAccess	Environment :: getEnv ( ) -> log		66286	0					
ANR	67302	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	67303	Callee	Environment :: getEnv		66286	0					
ANR	67304	Identifier	Environment :: getEnv		66286	0					
ANR	67305	ArgumentList			66286	1					
ANR	67306	Identifier	log		66286	1					
ANR	67307	Argument	WSF_LOG_SI		66286	1					
ANR	67308	Identifier	WSF_LOG_SI		66286	0					
ANR	67309	Argument	"""NULL value is set to a non nillable element owner"""		66286	2					
ANR	67310	PrimaryExpression	"""NULL value is set to a non nillable element owner"""		66286	0					
ANR	67311	ExpressionStatement	status = AXIS2_FAILURE	307:48:16515:16537	66286	1	True				
ANR	67312	AssignmentExpression	status = AXIS2_FAILURE		66286	0		=			
ANR	67313	Identifier	status		66286	0					
ANR	67314	Identifier	AXIS2_FAILURE		66286	1					
ANR	67315	ElseStatement	else		66286	0					
ANR	67316	CompoundStatement		246:44:15013:15013	66286	0					
ANR	67317	ExpressionStatement	"status = setOwner ( """" )"	312:48:16825:16846	66286	0	True				
ANR	67318	AssignmentExpression	"status = setOwner ( """" )"		66286	0		=			
ANR	67319	Identifier	status		66286	0					
ANR	67320	CallExpression	"setOwner ( """" )"		66286	1					
ANR	67321	Callee	setOwner		66286	0					
ANR	67322	Identifier	setOwner		66286	0					
ANR	67323	ArgumentList	""""""		66286	1					
ANR	67324	Argument	""""""		66286	0					
ANR	67325	PrimaryExpression	""""""		66286	0					
ANR	67326	IfStatement	if ( AXIS2_FAILURE == status )		66286	3					
ANR	67327	Condition	AXIS2_FAILURE == status	316:36:17009:17032	66286	0	True				
ANR	67328	EqualityExpression	AXIS2_FAILURE == status		66286	0		==			
ANR	67329	Identifier	AXIS2_FAILURE		66286	0					
ANR	67330	Identifier	status		66286	1					
ANR	67331	CompoundStatement		253:33:15403:15403	66286	1					
ANR	67332	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for owner "" )"	318:37:17107:17205	66286	0	True				
ANR	67333	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for owner "" )"		66286	0					
ANR	67334	Callee	WSF_LOG_ERROR_MSG		66286	0					
ANR	67335	Identifier	WSF_LOG_ERROR_MSG		66286	0					
ANR	67336	ArgumentList	Environment :: getEnv ( ) -> log		66286	1					
ANR	67337	Argument	Environment :: getEnv ( ) -> log		66286	0					
ANR	67338	PtrMemberAccess	Environment :: getEnv ( ) -> log		66286	0					
ANR	67339	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	67340	Callee	Environment :: getEnv		66286	0					
ANR	67341	Identifier	Environment :: getEnv		66286	0					
ANR	67342	ArgumentList			66286	1					
ANR	67343	Identifier	log		66286	1					
ANR	67344	Argument	WSF_LOG_SI		66286	1					
ANR	67345	Identifier	WSF_LOG_SI		66286	0					
ANR	67346	Argument	"""failed in setting the value for owner """		66286	2					
ANR	67347	PrimaryExpression	"""failed in setting the value for owner """		66286	0					
ANR	67348	IfStatement	if ( element_qname )		66286	1					
ANR	67349	Condition	element_qname	319:40:17247:17259	66286	0	True				
ANR	67350	Identifier	element_qname		66286	0					
ANR	67351	CompoundStatement		256:37:15634:15634	66286	1					
ANR	67352	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	321:41:17342:17397	66286	0	True				
ANR	67353	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		66286	0					
ANR	67354	Callee	axutil_qname_free		66286	0					
ANR	67355	Identifier	axutil_qname_free		66286	0					
ANR	67356	ArgumentList	element_qname		66286	1					
ANR	67357	Argument	element_qname		66286	0					
ANR	67358	Identifier	element_qname		66286	0					
ANR	67359	Argument	Environment :: getEnv ( )		66286	1					
ANR	67360	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	67361	Callee	Environment :: getEnv		66286	0					
ANR	67362	Identifier	Environment :: getEnv		66286	0					
ANR	67363	ArgumentList			66286	1					
ANR	67364	ReturnStatement	return AXIS2_FAILURE ;	323:37:17475:17495	66286	2	True				
ANR	67365	Identifier	AXIS2_FAILURE		66286	0					
ANR	67366	IfStatement	if ( element_qname )		66286	23					
ANR	67367	Condition	element_qname	327:21:17613:17625	66286	0	True				
ANR	67368	Identifier	element_qname		66286	0					
ANR	67369	CompoundStatement		264:18:15981:15981	66286	1					
ANR	67370	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	329:21:17669:17724	66286	0	True				
ANR	67371	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		66286	0					
ANR	67372	Callee	axutil_qname_free		66286	0					
ANR	67373	Identifier	axutil_qname_free		66286	0					
ANR	67374	ArgumentList	element_qname		66286	1					
ANR	67375	Argument	element_qname		66286	0					
ANR	67376	Identifier	element_qname		66286	0					
ANR	67377	Argument	Environment :: getEnv ( )		66286	1					
ANR	67378	CallExpression	Environment :: getEnv ( )		66286	0					
ANR	67379	Callee	Environment :: getEnv		66286	0					
ANR	67380	Identifier	Environment :: getEnv		66286	0					
ANR	67381	ArgumentList			66286	1					
ANR	67382	ExpressionStatement	element_qname = NULL	330:21:17747:17767	66286	1	True				
ANR	67383	AssignmentExpression	element_qname = NULL		66286	0		=			
ANR	67384	Identifier	element_qname		66286	0					
ANR	67385	Identifier	NULL		66286	1					
ANR	67386	ReturnStatement	return status ;	333:10:17817:17830	66286	24	True				
ANR	67387	Identifier	status		66286	0					
ANR	67388	ReturnType	bool WSF_CALL		66286	1					
ANR	67389	Identifier	AviaryCommon :: SubmissionID :: deserialize		66286	2					
ANR	67390	ParameterList	"axiom_node_t * * dp_parent , bool * dp_is_early_node_valid , bool dont_care_minoccurs"		66286	3					
ANR	67391	Parameter	axiom_node_t * * dp_parent	64:48:1575:1598	66286	0	True				
ANR	67392	ParameterType	axiom_node_t * *		66286	0					
ANR	67393	Identifier	dp_parent		66286	1					
ANR	67394	Parameter	bool * dp_is_early_node_valid	64:73:1600:1627	66286	1	True				
ANR	67395	ParameterType	bool *		66286	0					
ANR	67396	Identifier	dp_is_early_node_valid		66286	1					
ANR	67397	Parameter	bool dont_care_minoccurs	64:103:1630:1653	66286	2	True				
ANR	67398	ParameterType	bool		66286	0					
ANR	67399	Identifier	dont_care_minoccurs		66286	1					
ANR	67400	CFGEntryNode	ENTRY		66286		True				
ANR	67401	CFGExitNode	EXIT		66286		True				
ANR	67402	Symbol	& val		66286						
ANR	67403	Symbol	parent		66286						
ANR	67404	Symbol	hi		66286						
ANR	67405	Symbol	is_early_node_valid		66286						
ANR	67406	Symbol	current_node		66286						
ANR	67407	Symbol	axiom_element_get_qname		66286						
ANR	67408	Symbol	AXIS2_FAILURE		66286						
ANR	67409	Symbol	setOwner		66286						
ANR	67410	Symbol	dp_is_early_node_valid		66286						
ANR	67411	Symbol	WSF_LOG_SI		66286						
ANR	67412	Symbol	axutil_hash_next		66286						
ANR	67413	Symbol	AXIS2_SUCCESS		66286						
ANR	67414	Symbol	val		66286						
ANR	67415	Symbol	NULL		66286						
ANR	67416	Symbol	axiom_node_get_node_type		66286						
ANR	67417	Symbol	axiom_element_get_localname		66286						
ANR	67418	Symbol	text_value		66286						
ANR	67419	Symbol	axiom_node_get_next_sibling		66286						
ANR	67420	Symbol	the_attri		66286						
ANR	67421	Symbol	strstr		66286						
ANR	67422	Symbol	axutil_strcmp		66286						
ANR	67423	Symbol	true		66286						
ANR	67424	Symbol	axutil_qname_equals		66286						
ANR	67425	Symbol	status		66286						
ANR	67426	Symbol	setName		66286						
ANR	67427	Symbol	Environment :: getEnv		66286						
ANR	67428	Symbol	& key		66286						
ANR	67429	Symbol	mqname		66286						
ANR	67430	Symbol	attribute_hash		66286						
ANR	67431	Symbol	axiom_element_get_attribute_value_by_name		66286						
ANR	67432	Symbol	element_qname		66286						
ANR	67433	Symbol	axutil_qname_create		66286						
ANR	67434	Symbol	axiom_attribute_get_value		66286						
ANR	67435	Symbol	* dp_parent		66286						
ANR	67436	Symbol	axiom_node_get_data_element		66286						
ANR	67437	Symbol	axiom_element_get_text		66286						
ANR	67438	Symbol	dont_care_minoccurs		66286						
ANR	67439	Symbol	attrib_text		66286						
ANR	67440	Symbol	first_node		66286						
ANR	67441	Symbol	key		66286						
ANR	67442	Symbol	current_element		66286						
ANR	67443	Symbol	dp_parent		66286						
ANR	67444	Symbol	AXIOM_ELEMENT		66286						
ANR	67445	Symbol	false		66286						
ANR	67446	Symbol	Environment :: getEnv ( ) -> log		66286						
ANR	67447	Symbol	axiom_element_get_all_attributes		66286						
ANR	67448	Symbol	axiom_node_get_first_child		66286						
ANR	67449	Symbol	axutil_hash_first		66286						
ANR	67450	Symbol	* Environment :: getEnv		66286						
ANR	67451	Function	AviaryCommon :: SubmissionID :: isParticle	336:10:17852:17998							
ANR	67452	FunctionDef	AviaryCommon :: SubmissionID :: isParticle ()		67451	0					
ANR	67453	CompoundStatement		338:10:17927:17998	67451	0					
ANR	67454	ReturnStatement	return false ;	340:17:17959:17971	67451	0	True				
ANR	67455	Identifier	false		67451	0					
ANR	67456	ReturnType	bool WSF_CALL		67451	1					
ANR	67457	Identifier	AviaryCommon :: SubmissionID :: isParticle		67451	2					
ANR	67458	ParameterList			67451	3					
ANR	67459	CFGEntryNode	ENTRY		67451		True				
ANR	67460	CFGExitNode	EXIT		67451		True				
ANR	67461	Symbol	false		67451						
ANR	67462	Function	AviaryCommon :: SubmissionID :: declareParentNamespaces	345:10:18012:18337							
ANR	67463	FunctionDef	"AviaryCommon :: SubmissionID :: declareParentNamespaces (axiom_element_t * parent_element , axutil_hash_t * namespaces , int * next_ns_index)"		67462	0					
ANR	67464	CompoundStatement		349:10:18219:18337	67462	0					
ANR	67465	ReturnType	void WSF_CALL		67462	1					
ANR	67466	Identifier	AviaryCommon :: SubmissionID :: declareParentNamespaces		67462	2					
ANR	67467	ParameterList	"axiom_element_t * parent_element , axutil_hash_t * namespaces , int * next_ns_index"		67462	3					
ANR	67468	Parameter	axiom_element_t * parent_element	347:20:18109:18139	67462	0	True				
ANR	67469	ParameterType	axiom_element_t *		67462	0					
ANR	67470	Identifier	parent_element		67462	1					
ANR	67471	Parameter	axutil_hash_t * namespaces	348:20:18162:18186	67462	1	True				
ANR	67472	ParameterType	axutil_hash_t *		67462	0					
ANR	67473	Identifier	namespaces		67462	1					
ANR	67474	Parameter	int * next_ns_index	348:47:18189:18206	67462	2	True				
ANR	67475	ParameterType	int *		67462	0					
ANR	67476	Identifier	next_ns_index		67462	1					
ANR	67477	CFGEntryNode	ENTRY		67462		True				
ANR	67478	CFGExitNode	EXIT		67462		True				
ANR	67479	Symbol	parent_element		67462						
ANR	67480	Symbol	next_ns_index		67462						
ANR	67481	Symbol	namespaces		67462						
ANR	67482	Function	AviaryCommon :: SubmissionID :: serialize	357:22:18380:26746							
ANR	67483	FunctionDef	"AviaryCommon :: SubmissionID :: serialize (axiom_node_t * parent , axiom_element_t * parent_element , int parent_tag_closed , axutil_hash_t * namespaces , int * next_ns_index)"		67482	0					
ANR	67484	CompoundStatement		363:8:18577:26746	67482	0					
ANR	67485	IdentifierDeclStatement	axis2_char_t * string_to_stream ;	366:13:18618:18648	67482	0	True				
ANR	67486	IdentifierDecl	* string_to_stream		67482	0					
ANR	67487	IdentifierDeclType	axis2_char_t *		67482	0					
ANR	67488	Identifier	string_to_stream		67482	1					
ANR	67489	IdentifierDeclStatement	axiom_node_t * current_node = NULL ;	369:9:18682:18715	67482	1	True				
ANR	67490	IdentifierDecl	* current_node = NULL		67482	0					
ANR	67491	IdentifierDeclType	axiom_node_t *		67482	0					
ANR	67492	Identifier	current_node		67482	1					
ANR	67493	AssignmentExpression	* current_node = NULL		67482	2		=			
ANR	67494	Identifier	NULL		67482	0					
ANR	67495	Identifier	NULL		67482	1					
ANR	67496	IdentifierDeclStatement	int tag_closed = 0 ;	370:9:18726:18744	67482	2	True				
ANR	67497	IdentifierDecl	tag_closed = 0		67482	0					
ANR	67498	IdentifierDeclType	int		67482	0					
ANR	67499	Identifier	tag_closed		67482	1					
ANR	67500	AssignmentExpression	tag_closed = 0		67482	2		=			
ANR	67501	Identifier	tag_closed		67482	0					
ANR	67502	PrimaryExpression	0		67482	1					
ANR	67503	IdentifierDeclStatement	axiom_namespace_t * ns1 = NULL ;	374:16:18783:18812	67482	3	True				
ANR	67504	IdentifierDecl	* ns1 = NULL		67482	0					
ANR	67505	IdentifierDeclType	axiom_namespace_t *		67482	0					
ANR	67506	Identifier	ns1		67482	1					
ANR	67507	AssignmentExpression	* ns1 = NULL		67482	2		=			
ANR	67508	Identifier	NULL		67482	0					
ANR	67509	Identifier	NULL		67482	1					
ANR	67510	IdentifierDeclStatement	axis2_char_t * qname_uri = NULL ;	376:16:18831:18861	67482	4	True				
ANR	67511	IdentifierDecl	* qname_uri = NULL		67482	0					
ANR	67512	IdentifierDeclType	axis2_char_t *		67482	0					
ANR	67513	Identifier	qname_uri		67482	1					
ANR	67514	AssignmentExpression	* qname_uri = NULL		67482	2		=			
ANR	67515	Identifier	NULL		67482	0					
ANR	67516	Identifier	NULL		67482	1					
ANR	67517	IdentifierDeclStatement	axis2_char_t * qname_prefix = NULL ;	377:16:18879:18912	67482	5	True				
ANR	67518	IdentifierDecl	* qname_prefix = NULL		67482	0					
ANR	67519	IdentifierDeclType	axis2_char_t *		67482	0					
ANR	67520	Identifier	qname_prefix		67482	1					
ANR	67521	AssignmentExpression	* qname_prefix = NULL		67482	2		=			
ANR	67522	Identifier	NULL		67482	0					
ANR	67523	Identifier	NULL		67482	1					
ANR	67524	IdentifierDeclStatement	axis2_char_t * p_prefix = NULL ;	378:16:18930:18959	67482	6	True				
ANR	67525	IdentifierDecl	* p_prefix = NULL		67482	0					
ANR	67526	IdentifierDeclType	axis2_char_t *		67482	0					
ANR	67527	Identifier	p_prefix		67482	1					
ANR	67528	AssignmentExpression	* p_prefix = NULL		67482	2		=			
ANR	67529	Identifier	NULL		67482	0					
ANR	67530	Identifier	NULL		67482	1					
ANR	67531	IdentifierDeclStatement	axis2_char_t * text_value_1 ;	380:20:18994:19020	67482	7	True				
ANR	67532	IdentifierDecl	* text_value_1		67482	0					
ANR	67533	IdentifierDeclType	axis2_char_t *		67482	0					
ANR	67534	Identifier	text_value_1		67482	1					
ANR	67535	IdentifierDeclStatement	axis2_char_t * text_value_1_temp ;	381:20:19042:19073	67482	8	True				
ANR	67536	IdentifierDecl	* text_value_1_temp		67482	0					
ANR	67537	IdentifierDeclType	axis2_char_t *		67482	0					
ANR	67538	Identifier	text_value_1_temp		67482	1					
ANR	67539	IdentifierDeclStatement	axis2_char_t * text_value_2 ;	383:20:19116:19142	67482	9	True				
ANR	67540	IdentifierDecl	* text_value_2		67482	0					
ANR	67541	IdentifierDeclType	axis2_char_t *		67482	0					
ANR	67542	Identifier	text_value_2		67482	1					
ANR	67543	IdentifierDeclStatement	axis2_char_t * text_value_2_temp ;	384:20:19164:19195	67482	10	True				
ANR	67544	IdentifierDecl	* text_value_2_temp		67482	0					
ANR	67545	IdentifierDeclType	axis2_char_t *		67482	0					
ANR	67546	Identifier	text_value_2_temp		67482	1					
ANR	67547	IdentifierDeclStatement	axis2_char_t * start_input_str = NULL ;	386:15:19233:19269	67482	11	True				
ANR	67548	IdentifierDecl	* start_input_str = NULL		67482	0					
ANR	67549	IdentifierDeclType	axis2_char_t *		67482	0					
ANR	67550	Identifier	start_input_str		67482	1					
ANR	67551	AssignmentExpression	* start_input_str = NULL		67482	2		=			
ANR	67552	Identifier	NULL		67482	0					
ANR	67553	Identifier	NULL		67482	1					
ANR	67554	IdentifierDeclStatement	axis2_char_t * end_input_str = NULL ;	387:15:19286:19320	67482	12	True				
ANR	67555	IdentifierDecl	* end_input_str = NULL		67482	0					
ANR	67556	IdentifierDeclType	axis2_char_t *		67482	0					
ANR	67557	Identifier	end_input_str		67482	1					
ANR	67558	AssignmentExpression	* end_input_str = NULL		67482	2		=			
ANR	67559	Identifier	NULL		67482	0					
ANR	67560	Identifier	NULL		67482	1					
ANR	67561	IdentifierDeclStatement	unsigned int start_input_str_len = 0 ;	388:15:19337:19373	67482	13	True				
ANR	67562	IdentifierDecl	start_input_str_len = 0		67482	0					
ANR	67563	IdentifierDeclType	unsigned int		67482	0					
ANR	67564	Identifier	start_input_str_len		67482	1					
ANR	67565	AssignmentExpression	start_input_str_len = 0		67482	2		=			
ANR	67566	Identifier	start_input_str_len		67482	0					
ANR	67567	PrimaryExpression	0		67482	1					
ANR	67568	IdentifierDeclStatement	unsigned int end_input_str_len = 0 ;	389:15:19390:19424	67482	14	True				
ANR	67569	IdentifierDecl	end_input_str_len = 0		67482	0					
ANR	67570	IdentifierDeclType	unsigned int		67482	0					
ANR	67571	Identifier	end_input_str_len		67482	1					
ANR	67572	AssignmentExpression	end_input_str_len = 0		67482	2		=			
ANR	67573	Identifier	end_input_str_len		67482	0					
ANR	67574	PrimaryExpression	0		67482	1					
ANR	67575	IdentifierDeclStatement	axiom_data_source_t * data_source = NULL ;	392:15:19467:19506	67482	15	True				
ANR	67576	IdentifierDecl	* data_source = NULL		67482	0					
ANR	67577	IdentifierDeclType	axiom_data_source_t *		67482	0					
ANR	67578	Identifier	data_source		67482	1					
ANR	67579	AssignmentExpression	* data_source = NULL		67482	2		=			
ANR	67580	Identifier	NULL		67482	0					
ANR	67581	Identifier	NULL		67482	1					
ANR	67582	IdentifierDeclStatement	axutil_stream_t * stream = NULL ;	393:15:19523:19553	67482	16	True				
ANR	67583	IdentifierDecl	* stream = NULL		67482	0					
ANR	67584	IdentifierDeclType	axutil_stream_t *		67482	0					
ANR	67585	Identifier	stream		67482	1					
ANR	67586	AssignmentExpression	* stream = NULL		67482	2		=			
ANR	67587	Identifier	NULL		67482	0					
ANR	67588	Identifier	NULL		67482	1					
ANR	67589	ExpressionStatement	current_node = parent	396:20:19589:19610	67482	17	True				
ANR	67590	AssignmentExpression	current_node = parent		67482	0		=			
ANR	67591	Identifier	current_node		67482	0					
ANR	67592	Identifier	parent		67482	1					
ANR	67593	ExpressionStatement	"data_source = ( axiom_data_source_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"	397:20:19632:19733	67482	18	True				
ANR	67594	AssignmentExpression	"data_source = ( axiom_data_source_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		67482	0		=			
ANR	67595	Identifier	data_source		67482	0					
ANR	67596	CastExpression	"( axiom_data_source_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		67482	1					
ANR	67597	CastTarget	axiom_data_source_t *		67482	0					
ANR	67598	CallExpression	"axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		67482	1					
ANR	67599	Callee	axiom_node_get_data_element		67482	0					
ANR	67600	Identifier	axiom_node_get_data_element		67482	0					
ANR	67601	ArgumentList	current_node		67482	1					
ANR	67602	Argument	current_node		67482	0					
ANR	67603	Identifier	current_node		67482	0					
ANR	67604	Argument	Environment :: getEnv ( )		67482	1					
ANR	67605	CallExpression	Environment :: getEnv ( )		67482	0					
ANR	67606	Callee	Environment :: getEnv		67482	0					
ANR	67607	Identifier	Environment :: getEnv		67482	0					
ANR	67608	ArgumentList			67482	1					
ANR	67609	IfStatement	if ( ! data_source )		67482	19					
ANR	67610	Condition	! data_source	398:24:19759:19770	67482	0	True				
ANR	67611	UnaryOperationExpression	! data_source		67482	0					
ANR	67612	UnaryOperator	!		67482	0					
ANR	67613	Identifier	data_source		67482	1					
ANR	67614	ReturnStatement	return NULL ;	399:24:19797:19808	67482	1	True				
ANR	67615	Identifier	NULL		67482	0					
ANR	67616	ExpressionStatement	"stream = axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"	400:20:19830:19903	67482	20	True				
ANR	67617	AssignmentExpression	"stream = axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"		67482	0		=			
ANR	67618	Identifier	stream		67482	0					
ANR	67619	CallExpression	"axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"		67482	1					
ANR	67620	Callee	axiom_data_source_get_stream		67482	0					
ANR	67621	Identifier	axiom_data_source_get_stream		67482	0					
ANR	67622	ArgumentList	data_source		67482	1					
ANR	67623	Argument	data_source		67482	0					
ANR	67624	Identifier	data_source		67482	0					
ANR	67625	Argument	Environment :: getEnv ( )		67482	1					
ANR	67626	CallExpression	Environment :: getEnv ( )		67482	0					
ANR	67627	Callee	Environment :: getEnv		67482	0					
ANR	67628	Identifier	Environment :: getEnv		67482	0					
ANR	67629	ArgumentList			67482	1					
ANR	67630	IfStatement	if ( ! stream )		67482	21					
ANR	67631	Condition	! stream	401:24:19972:19978	67482	0	True				
ANR	67632	UnaryOperationExpression	! stream		67482	0					
ANR	67633	UnaryOperator	!		67482	0					
ANR	67634	Identifier	stream		67482	1					
ANR	67635	ReturnStatement	return NULL ;	402:24:20005:20016	67482	1	True				
ANR	67636	Identifier	NULL		67482	0					
ANR	67637	IfStatement	if ( ! parent_tag_closed )		67482	22					
ANR	67638	Condition	! parent_tag_closed	404:15:20052:20069	67482	0	True				
ANR	67639	UnaryOperationExpression	! parent_tag_closed		67482	0					
ANR	67640	UnaryOperator	!		67482	0					
ANR	67641	Identifier	parent_tag_closed		67482	1					
ANR	67642	CompoundStatement		43:12:1506:1506	67482	1					
ANR	67643	ExpressionStatement	"string_to_stream = "">"""	407:14:20113:20135	67482	0	True				
ANR	67644	AssignmentExpression	"string_to_stream = "">"""		67482	0		=			
ANR	67645	Identifier	string_to_stream		67482	0					
ANR	67646	PrimaryExpression	""">"""		67482	1					
ANR	67647	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , string_to_stream , axutil_strlen ( string_to_stream ) )"	408:14:20152:20253	67482	1	True				
ANR	67648	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , string_to_stream , axutil_strlen ( string_to_stream ) )"		67482	0					
ANR	67649	Callee	axutil_stream_write		67482	0					
ANR	67650	Identifier	axutil_stream_write		67482	0					
ANR	67651	ArgumentList	stream		67482	1					
ANR	67652	Argument	stream		67482	0					
ANR	67653	Identifier	stream		67482	0					
ANR	67654	Argument	Environment :: getEnv ( )		67482	1					
ANR	67655	CallExpression	Environment :: getEnv ( )		67482	0					
ANR	67656	Callee	Environment :: getEnv		67482	0					
ANR	67657	Identifier	Environment :: getEnv		67482	0					
ANR	67658	ArgumentList			67482	1					
ANR	67659	Argument	string_to_stream		67482	2					
ANR	67660	Identifier	string_to_stream		67482	0					
ANR	67661	Argument	axutil_strlen ( string_to_stream )		67482	3					
ANR	67662	CallExpression	axutil_strlen ( string_to_stream )		67482	0					
ANR	67663	Callee	axutil_strlen		67482	0					
ANR	67664	Identifier	axutil_strlen		67482	0					
ANR	67665	ArgumentList	string_to_stream		67482	1					
ANR	67666	Argument	string_to_stream		67482	0					
ANR	67667	Identifier	string_to_stream		67482	0					
ANR	67668	ExpressionStatement	tag_closed = 1	409:14:20269:20283	67482	2	True				
ANR	67669	AssignmentExpression	tag_closed = 1		67482	0		=			
ANR	67670	Identifier	tag_closed		67482	0					
ANR	67671	PrimaryExpression	1		67482	1					
ANR	67672	ExpressionStatement	p_prefix = NULL	413:23:20348:20363	67482	23	True				
ANR	67673	AssignmentExpression	p_prefix = NULL		67482	0		=			
ANR	67674	Identifier	p_prefix		67482	0					
ANR	67675	Identifier	NULL		67482	1					
ANR	67676	IfStatement	if ( ! isValidName )		67482	24					
ANR	67677	Condition	! isValidName	416:23:20412:20423	67482	0	True				
ANR	67678	UnaryOperationExpression	! isValidName		67482	0					
ANR	67679	UnaryOperator	!		67482	0					
ANR	67680	Identifier	isValidName		67482	1					
ANR	67681	CompoundStatement		55:19:1867:1867	67482	1					
ANR	67682	ElseStatement	else		67482	0					
ANR	67683	CompoundStatement		62:19:2089:2089	67482	0					
ANR	67684	ExpressionStatement	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""name"" ) ) )"	425:21:20690:20915	67482	0	True				
ANR	67685	AssignmentExpression	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""name"" ) ) )"		67482	0		=			
ANR	67686	Identifier	start_input_str		67482	0					
ANR	67687	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""name"" ) ) )"		67482	1					
ANR	67688	CastTarget	axis2_char_t *		67482	0					
ANR	67689	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""name"" ) ) )"		67482	1					
ANR	67690	Callee	AXIS2_MALLOC		67482	0					
ANR	67691	Identifier	AXIS2_MALLOC		67482	0					
ANR	67692	ArgumentList	Environment :: getEnv ( ) -> allocator		67482	1					
ANR	67693	Argument	Environment :: getEnv ( ) -> allocator		67482	0					
ANR	67694	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		67482	0					
ANR	67695	CallExpression	Environment :: getEnv ( )		67482	0					
ANR	67696	Callee	Environment :: getEnv		67482	0					
ANR	67697	Identifier	Environment :: getEnv		67482	0					
ANR	67698	ArgumentList			67482	1					
ANR	67699	Identifier	allocator		67482	1					
ANR	67700	Argument	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""name"" ) )"		67482	1					
ANR	67701	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""name"" ) )"		67482	0		*			
ANR	67702	SizeofExpression	sizeof ( axis2_char_t )		67482	0					
ANR	67703	Sizeof	sizeof		67482	0					
ANR	67704	SizeofOperand	axis2_char_t		67482	1					
ANR	67705	AdditiveExpression	"4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""name"" )"		67482	1		+			
ANR	67706	PrimaryExpression	4		67482	0					
ANR	67707	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""name"" )"		67482	1		+			
ANR	67708	CallExpression	axutil_strlen ( p_prefix )		67482	0					
ANR	67709	Callee	axutil_strlen		67482	0					
ANR	67710	Identifier	axutil_strlen		67482	0					
ANR	67711	ArgumentList	p_prefix		67482	1					
ANR	67712	Argument	p_prefix		67482	0					
ANR	67713	Identifier	p_prefix		67482	0					
ANR	67714	CallExpression	"axutil_strlen ( ""name"" )"		67482	1					
ANR	67715	Callee	axutil_strlen		67482	0					
ANR	67716	Identifier	axutil_strlen		67482	0					
ANR	67717	ArgumentList	"""name"""		67482	1					
ANR	67718	Argument	"""name"""		67482	0					
ANR	67719	PrimaryExpression	"""name"""		67482	0					
ANR	67720	ExpressionStatement	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""name"" ) ) )"	430:21:21041:21229	67482	1	True				
ANR	67721	AssignmentExpression	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""name"" ) ) )"		67482	0		=			
ANR	67722	Identifier	end_input_str		67482	0					
ANR	67723	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""name"" ) ) )"		67482	1					
ANR	67724	CastTarget	axis2_char_t *		67482	0					
ANR	67725	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""name"" ) ) )"		67482	1					
ANR	67726	Callee	AXIS2_MALLOC		67482	0					
ANR	67727	Identifier	AXIS2_MALLOC		67482	0					
ANR	67728	ArgumentList	Environment :: getEnv ( ) -> allocator		67482	1					
ANR	67729	Argument	Environment :: getEnv ( ) -> allocator		67482	0					
ANR	67730	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		67482	0					
ANR	67731	CallExpression	Environment :: getEnv ( )		67482	0					
ANR	67732	Callee	Environment :: getEnv		67482	0					
ANR	67733	Identifier	Environment :: getEnv		67482	0					
ANR	67734	ArgumentList			67482	1					
ANR	67735	Identifier	allocator		67482	1					
ANR	67736	Argument	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""name"" ) )"		67482	1					
ANR	67737	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""name"" ) )"		67482	0		*			
ANR	67738	SizeofExpression	sizeof ( axis2_char_t )		67482	0					
ANR	67739	Sizeof	sizeof		67482	0					
ANR	67740	SizeofOperand	axis2_char_t		67482	1					
ANR	67741	AdditiveExpression	"5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""name"" )"		67482	1		+			
ANR	67742	PrimaryExpression	5		67482	0					
ANR	67743	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""name"" )"		67482	1		+			
ANR	67744	CallExpression	axutil_strlen ( p_prefix )		67482	0					
ANR	67745	Callee	axutil_strlen		67482	0					
ANR	67746	Identifier	axutil_strlen		67482	0					
ANR	67747	ArgumentList	p_prefix		67482	1					
ANR	67748	Argument	p_prefix		67482	0					
ANR	67749	Identifier	p_prefix		67482	0					
ANR	67750	CallExpression	"axutil_strlen ( ""name"" )"		67482	1					
ANR	67751	Callee	axutil_strlen		67482	0					
ANR	67752	Identifier	axutil_strlen		67482	0					
ANR	67753	ArgumentList	"""name"""		67482	1					
ANR	67754	Argument	"""name"""		67482	0					
ANR	67755	PrimaryExpression	"""name"""		67482	0					
ANR	67756	ExpressionStatement	"sprintf ( start_input_str , ""<%s%sname>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	445:28:21586:21762	67482	2	True				
ANR	67757	CallExpression	"sprintf ( start_input_str , ""<%s%sname>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		67482	0					
ANR	67758	Callee	sprintf		67482	0					
ANR	67759	Identifier	sprintf		67482	0					
ANR	67760	ArgumentList	start_input_str		67482	1					
ANR	67761	Argument	start_input_str		67482	0					
ANR	67762	Identifier	start_input_str		67482	0					
ANR	67763	Argument	"""<%s%sname>"""		67482	1					
ANR	67764	PrimaryExpression	"""<%s%sname>"""		67482	0					
ANR	67765	Argument	"p_prefix ? p_prefix : """""		67482	2					
ANR	67766	ConditionalExpression	"p_prefix ? p_prefix : """""		67482	0					
ANR	67767	Condition	p_prefix		67482	0					
ANR	67768	Identifier	p_prefix		67482	0					
ANR	67769	Identifier	p_prefix		67482	1					
ANR	67770	PrimaryExpression	""""""		67482	2					
ANR	67771	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		67482	3					
ANR	67772	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		67482	0					
ANR	67773	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		67482	0					
ANR	67774	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		67482	0		&&			
ANR	67775	Identifier	p_prefix		67482	0					
ANR	67776	CallExpression	"axutil_strcmp ( p_prefix , """" )"		67482	1					
ANR	67777	Callee	axutil_strcmp		67482	0					
ANR	67778	Identifier	axutil_strcmp		67482	0					
ANR	67779	ArgumentList	p_prefix		67482	1					
ANR	67780	Argument	p_prefix		67482	0					
ANR	67781	Identifier	p_prefix		67482	0					
ANR	67782	Argument	""""""		67482	1					
ANR	67783	PrimaryExpression	""""""		67482	0					
ANR	67784	PrimaryExpression	""":"""		67482	1					
ANR	67785	PrimaryExpression	""""""		67482	2					
ANR	67786	ExpressionStatement	start_input_str_len = axutil_strlen ( start_input_str )	449:24:21817:21869	67482	3	True				
ANR	67787	AssignmentExpression	start_input_str_len = axutil_strlen ( start_input_str )		67482	0		=			
ANR	67788	Identifier	start_input_str_len		67482	0					
ANR	67789	CallExpression	axutil_strlen ( start_input_str )		67482	1					
ANR	67790	Callee	axutil_strlen		67482	0					
ANR	67791	Identifier	axutil_strlen		67482	0					
ANR	67792	ArgumentList	start_input_str		67482	1					
ANR	67793	Argument	start_input_str		67482	0					
ANR	67794	Identifier	start_input_str		67482	0					
ANR	67795	ExpressionStatement	"sprintf ( end_input_str , ""</%s%sname>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	450:24:21895:22070	67482	4	True				
ANR	67796	CallExpression	"sprintf ( end_input_str , ""</%s%sname>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		67482	0					
ANR	67797	Callee	sprintf		67482	0					
ANR	67798	Identifier	sprintf		67482	0					
ANR	67799	ArgumentList	end_input_str		67482	1					
ANR	67800	Argument	end_input_str		67482	0					
ANR	67801	Identifier	end_input_str		67482	0					
ANR	67802	Argument	"""</%s%sname>"""		67482	1					
ANR	67803	PrimaryExpression	"""</%s%sname>"""		67482	0					
ANR	67804	Argument	"p_prefix ? p_prefix : """""		67482	2					
ANR	67805	ConditionalExpression	"p_prefix ? p_prefix : """""		67482	0					
ANR	67806	Condition	p_prefix		67482	0					
ANR	67807	Identifier	p_prefix		67482	0					
ANR	67808	Identifier	p_prefix		67482	1					
ANR	67809	PrimaryExpression	""""""		67482	2					
ANR	67810	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		67482	3					
ANR	67811	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		67482	0					
ANR	67812	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		67482	0					
ANR	67813	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		67482	0		&&			
ANR	67814	Identifier	p_prefix		67482	0					
ANR	67815	CallExpression	"axutil_strcmp ( p_prefix , """" )"		67482	1					
ANR	67816	Callee	axutil_strcmp		67482	0					
ANR	67817	Identifier	axutil_strcmp		67482	0					
ANR	67818	ArgumentList	p_prefix		67482	1					
ANR	67819	Argument	p_prefix		67482	0					
ANR	67820	Identifier	p_prefix		67482	0					
ANR	67821	Argument	""""""		67482	1					
ANR	67822	PrimaryExpression	""""""		67482	0					
ANR	67823	PrimaryExpression	""":"""		67482	1					
ANR	67824	PrimaryExpression	""""""		67482	2					
ANR	67825	ExpressionStatement	end_input_str_len = axutil_strlen ( end_input_str )	453:24:22096:22144	67482	5	True				
ANR	67826	AssignmentExpression	end_input_str_len = axutil_strlen ( end_input_str )		67482	0		=			
ANR	67827	Identifier	end_input_str_len		67482	0					
ANR	67828	CallExpression	axutil_strlen ( end_input_str )		67482	1					
ANR	67829	Callee	axutil_strlen		67482	0					
ANR	67830	Identifier	axutil_strlen		67482	0					
ANR	67831	ArgumentList	end_input_str		67482	1					
ANR	67832	Argument	end_input_str		67482	0					
ANR	67833	Identifier	end_input_str		67482	0					
ANR	67834	ExpressionStatement	text_value_1 = ( axis2_char_t * ) property_Name . c_str ( )	455:27:22194:22245	67482	6	True				
ANR	67835	AssignmentExpression	text_value_1 = ( axis2_char_t * ) property_Name . c_str ( )		67482	0		=			
ANR	67836	Identifier	text_value_1		67482	0					
ANR	67837	CastExpression	( axis2_char_t * ) property_Name . c_str ( )		67482	1					
ANR	67838	CastTarget	axis2_char_t *		67482	0					
ANR	67839	CallExpression	property_Name . c_str ( )		67482	1					
ANR	67840	Callee	property_Name . c_str		67482	0					
ANR	67841	MemberAccess	property_Name . c_str		67482	0					
ANR	67842	Identifier	property_Name		67482	0					
ANR	67843	Identifier	c_str		67482	1					
ANR	67844	ArgumentList			67482	1					
ANR	67845	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"	457:27:22302:22390	67482	7	True				
ANR	67846	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"		67482	0					
ANR	67847	Callee	axutil_stream_write		67482	0					
ANR	67848	Identifier	axutil_stream_write		67482	0					
ANR	67849	ArgumentList	stream		67482	1					
ANR	67850	Argument	stream		67482	0					
ANR	67851	Identifier	stream		67482	0					
ANR	67852	Argument	Environment :: getEnv ( )		67482	1					
ANR	67853	CallExpression	Environment :: getEnv ( )		67482	0					
ANR	67854	Callee	Environment :: getEnv		67482	0					
ANR	67855	Identifier	Environment :: getEnv		67482	0					
ANR	67856	ArgumentList			67482	1					
ANR	67857	Argument	start_input_str		67482	2					
ANR	67858	Identifier	start_input_str		67482	0					
ANR	67859	Argument	start_input_str_len		67482	3					
ANR	67860	Identifier	start_input_str_len		67482	0					
ANR	67861	ExpressionStatement	"text_value_1_temp = axutil_xml_quote_string ( Environment :: getEnv ( ) , text_value_1 , true )"	460:27:22476:22562	67482	8	True				
ANR	67862	AssignmentExpression	"text_value_1_temp = axutil_xml_quote_string ( Environment :: getEnv ( ) , text_value_1 , true )"		67482	0		=			
ANR	67863	Identifier	text_value_1_temp		67482	0					
ANR	67864	CallExpression	"axutil_xml_quote_string ( Environment :: getEnv ( ) , text_value_1 , true )"		67482	1					
ANR	67865	Callee	axutil_xml_quote_string		67482	0					
ANR	67866	Identifier	axutil_xml_quote_string		67482	0					
ANR	67867	ArgumentList	Environment :: getEnv ( )		67482	1					
ANR	67868	Argument	Environment :: getEnv ( )		67482	0					
ANR	67869	CallExpression	Environment :: getEnv ( )		67482	0					
ANR	67870	Callee	Environment :: getEnv		67482	0					
ANR	67871	Identifier	Environment :: getEnv		67482	0					
ANR	67872	ArgumentList			67482	1					
ANR	67873	Argument	text_value_1		67482	1					
ANR	67874	Identifier	text_value_1		67482	0					
ANR	67875	Argument	true		67482	2					
ANR	67876	Identifier	true		67482	0					
ANR	67877	IfStatement	if ( text_value_1_temp )		67482	9					
ANR	67878	Condition	text_value_1_temp	461:31:22595:22611	67482	0	True				
ANR	67879	Identifier	text_value_1_temp		67482	0					
ANR	67880	CompoundStatement		100:27:4063:4063	67482	1					
ANR	67881	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_1_temp , axutil_strlen ( text_value_1_temp ) )"	463:31:22674:22777	67482	0	True				
ANR	67882	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_1_temp , axutil_strlen ( text_value_1_temp ) )"		67482	0					
ANR	67883	Callee	axutil_stream_write		67482	0					
ANR	67884	Identifier	axutil_stream_write		67482	0					
ANR	67885	ArgumentList	stream		67482	1					
ANR	67886	Argument	stream		67482	0					
ANR	67887	Identifier	stream		67482	0					
ANR	67888	Argument	Environment :: getEnv ( )		67482	1					
ANR	67889	CallExpression	Environment :: getEnv ( )		67482	0					
ANR	67890	Callee	Environment :: getEnv		67482	0					
ANR	67891	Identifier	Environment :: getEnv		67482	0					
ANR	67892	ArgumentList			67482	1					
ANR	67893	Argument	text_value_1_temp		67482	2					
ANR	67894	Identifier	text_value_1_temp		67482	0					
ANR	67895	Argument	axutil_strlen ( text_value_1_temp )		67482	3					
ANR	67896	CallExpression	axutil_strlen ( text_value_1_temp )		67482	0					
ANR	67897	Callee	axutil_strlen		67482	0					
ANR	67898	Identifier	axutil_strlen		67482	0					
ANR	67899	ArgumentList	text_value_1_temp		67482	1					
ANR	67900	Argument	text_value_1_temp		67482	0					
ANR	67901	Identifier	text_value_1_temp		67482	0					
ANR	67902	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , text_value_1_temp )"	464:31:22810:22873	67482	1	True				
ANR	67903	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , text_value_1_temp )"		67482	0					
ANR	67904	Callee	AXIS2_FREE		67482	0					
ANR	67905	Identifier	AXIS2_FREE		67482	0					
ANR	67906	ArgumentList	Environment :: getEnv ( ) -> allocator		67482	1					
ANR	67907	Argument	Environment :: getEnv ( ) -> allocator		67482	0					
ANR	67908	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		67482	0					
ANR	67909	CallExpression	Environment :: getEnv ( )		67482	0					
ANR	67910	Callee	Environment :: getEnv		67482	0					
ANR	67911	Identifier	Environment :: getEnv		67482	0					
ANR	67912	ArgumentList			67482	1					
ANR	67913	Identifier	allocator		67482	1					
ANR	67914	Argument	text_value_1_temp		67482	1					
ANR	67915	Identifier	text_value_1_temp		67482	0					
ANR	67916	ElseStatement	else		67482	0					
ANR	67917	CompoundStatement		105:27:4385:4385	67482	0					
ANR	67918	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_1 , axutil_strlen ( text_value_1 ) )"	468:31:22996:23089	67482	0	True				
ANR	67919	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_1 , axutil_strlen ( text_value_1 ) )"		67482	0					
ANR	67920	Callee	axutil_stream_write		67482	0					
ANR	67921	Identifier	axutil_stream_write		67482	0					
ANR	67922	ArgumentList	stream		67482	1					
ANR	67923	Argument	stream		67482	0					
ANR	67924	Identifier	stream		67482	0					
ANR	67925	Argument	Environment :: getEnv ( )		67482	1					
ANR	67926	CallExpression	Environment :: getEnv ( )		67482	0					
ANR	67927	Callee	Environment :: getEnv		67482	0					
ANR	67928	Identifier	Environment :: getEnv		67482	0					
ANR	67929	ArgumentList			67482	1					
ANR	67930	Argument	text_value_1		67482	2					
ANR	67931	Identifier	text_value_1		67482	0					
ANR	67932	Argument	axutil_strlen ( text_value_1 )		67482	3					
ANR	67933	CallExpression	axutil_strlen ( text_value_1 )		67482	0					
ANR	67934	Callee	axutil_strlen		67482	0					
ANR	67935	Identifier	axutil_strlen		67482	0					
ANR	67936	ArgumentList	text_value_1		67482	1					
ANR	67937	Argument	text_value_1		67482	0					
ANR	67938	Identifier	text_value_1		67482	0					
ANR	67939	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"	471:27:23175:23259	67482	10	True				
ANR	67940	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"		67482	0					
ANR	67941	Callee	axutil_stream_write		67482	0					
ANR	67942	Identifier	axutil_stream_write		67482	0					
ANR	67943	ArgumentList	stream		67482	1					
ANR	67944	Argument	stream		67482	0					
ANR	67945	Identifier	stream		67482	0					
ANR	67946	Argument	Environment :: getEnv ( )		67482	1					
ANR	67947	CallExpression	Environment :: getEnv ( )		67482	0					
ANR	67948	Callee	Environment :: getEnv		67482	0					
ANR	67949	Identifier	Environment :: getEnv		67482	0					
ANR	67950	ArgumentList			67482	1					
ANR	67951	Argument	end_input_str		67482	2					
ANR	67952	Identifier	end_input_str		67482	0					
ANR	67953	Argument	end_input_str_len		67482	3					
ANR	67954	Identifier	end_input_str_len		67482	0					
ANR	67955	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"	474:21:23332:23392	67482	11	True				
ANR	67956	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"		67482	0					
ANR	67957	Callee	AXIS2_FREE		67482	0					
ANR	67958	Identifier	AXIS2_FREE		67482	0					
ANR	67959	ArgumentList	Environment :: getEnv ( ) -> allocator		67482	1					
ANR	67960	Argument	Environment :: getEnv ( ) -> allocator		67482	0					
ANR	67961	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		67482	0					
ANR	67962	CallExpression	Environment :: getEnv ( )		67482	0					
ANR	67963	Callee	Environment :: getEnv		67482	0					
ANR	67964	Identifier	Environment :: getEnv		67482	0					
ANR	67965	ArgumentList			67482	1					
ANR	67966	Identifier	allocator		67482	1					
ANR	67967	Argument	start_input_str		67482	1					
ANR	67968	Identifier	start_input_str		67482	0					
ANR	67969	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"	475:21:23415:23473	67482	12	True				
ANR	67970	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"		67482	0					
ANR	67971	Callee	AXIS2_FREE		67482	0					
ANR	67972	Identifier	AXIS2_FREE		67482	0					
ANR	67973	ArgumentList	Environment :: getEnv ( ) -> allocator		67482	1					
ANR	67974	Argument	Environment :: getEnv ( ) -> allocator		67482	0					
ANR	67975	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		67482	0					
ANR	67976	CallExpression	Environment :: getEnv ( )		67482	0					
ANR	67977	Callee	Environment :: getEnv		67482	0					
ANR	67978	Identifier	Environment :: getEnv		67482	0					
ANR	67979	ArgumentList			67482	1					
ANR	67980	Identifier	allocator		67482	1					
ANR	67981	Argument	end_input_str		67482	1					
ANR	67982	Identifier	end_input_str		67482	0					
ANR	67983	ExpressionStatement	p_prefix = NULL	479:23:23537:23552	67482	25	True				
ANR	67984	AssignmentExpression	p_prefix = NULL		67482	0		=			
ANR	67985	Identifier	p_prefix		67482	0					
ANR	67986	Identifier	NULL		67482	1					
ANR	67987	IfStatement	if ( ! isValidOwner )		67482	26					
ANR	67988	Condition	! isValidOwner	482:23:23601:23613	67482	0	True				
ANR	67989	UnaryOperationExpression	! isValidOwner		67482	0					
ANR	67990	UnaryOperator	!		67482	0					
ANR	67991	Identifier	isValidOwner		67482	1					
ANR	67992	CompoundStatement		121:19:5057:5057	67482	1					
ANR	67993	ElseStatement	else		67482	0					
ANR	67994	CompoundStatement		128:19:5279:5279	67482	0					
ANR	67995	ExpressionStatement	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""owner"" ) ) )"	491:21:23880:24106	67482	0	True				
ANR	67996	AssignmentExpression	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""owner"" ) ) )"		67482	0		=			
ANR	67997	Identifier	start_input_str		67482	0					
ANR	67998	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""owner"" ) ) )"		67482	1					
ANR	67999	CastTarget	axis2_char_t *		67482	0					
ANR	68000	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""owner"" ) ) )"		67482	1					
ANR	68001	Callee	AXIS2_MALLOC		67482	0					
ANR	68002	Identifier	AXIS2_MALLOC		67482	0					
ANR	68003	ArgumentList	Environment :: getEnv ( ) -> allocator		67482	1					
ANR	68004	Argument	Environment :: getEnv ( ) -> allocator		67482	0					
ANR	68005	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		67482	0					
ANR	68006	CallExpression	Environment :: getEnv ( )		67482	0					
ANR	68007	Callee	Environment :: getEnv		67482	0					
ANR	68008	Identifier	Environment :: getEnv		67482	0					
ANR	68009	ArgumentList			67482	1					
ANR	68010	Identifier	allocator		67482	1					
ANR	68011	Argument	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""owner"" ) )"		67482	1					
ANR	68012	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""owner"" ) )"		67482	0		*			
ANR	68013	SizeofExpression	sizeof ( axis2_char_t )		67482	0					
ANR	68014	Sizeof	sizeof		67482	0					
ANR	68015	SizeofOperand	axis2_char_t		67482	1					
ANR	68016	AdditiveExpression	"4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""owner"" )"		67482	1		+			
ANR	68017	PrimaryExpression	4		67482	0					
ANR	68018	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""owner"" )"		67482	1		+			
ANR	68019	CallExpression	axutil_strlen ( p_prefix )		67482	0					
ANR	68020	Callee	axutil_strlen		67482	0					
ANR	68021	Identifier	axutil_strlen		67482	0					
ANR	68022	ArgumentList	p_prefix		67482	1					
ANR	68023	Argument	p_prefix		67482	0					
ANR	68024	Identifier	p_prefix		67482	0					
ANR	68025	CallExpression	"axutil_strlen ( ""owner"" )"		67482	1					
ANR	68026	Callee	axutil_strlen		67482	0					
ANR	68027	Identifier	axutil_strlen		67482	0					
ANR	68028	ArgumentList	"""owner"""		67482	1					
ANR	68029	Argument	"""owner"""		67482	0					
ANR	68030	PrimaryExpression	"""owner"""		67482	0					
ANR	68031	ExpressionStatement	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""owner"" ) ) )"	496:21:24232:24421	67482	1	True				
ANR	68032	AssignmentExpression	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""owner"" ) ) )"		67482	0		=			
ANR	68033	Identifier	end_input_str		67482	0					
ANR	68034	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""owner"" ) ) )"		67482	1					
ANR	68035	CastTarget	axis2_char_t *		67482	0					
ANR	68036	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""owner"" ) ) )"		67482	1					
ANR	68037	Callee	AXIS2_MALLOC		67482	0					
ANR	68038	Identifier	AXIS2_MALLOC		67482	0					
ANR	68039	ArgumentList	Environment :: getEnv ( ) -> allocator		67482	1					
ANR	68040	Argument	Environment :: getEnv ( ) -> allocator		67482	0					
ANR	68041	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		67482	0					
ANR	68042	CallExpression	Environment :: getEnv ( )		67482	0					
ANR	68043	Callee	Environment :: getEnv		67482	0					
ANR	68044	Identifier	Environment :: getEnv		67482	0					
ANR	68045	ArgumentList			67482	1					
ANR	68046	Identifier	allocator		67482	1					
ANR	68047	Argument	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""owner"" ) )"		67482	1					
ANR	68048	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""owner"" ) )"		67482	0		*			
ANR	68049	SizeofExpression	sizeof ( axis2_char_t )		67482	0					
ANR	68050	Sizeof	sizeof		67482	0					
ANR	68051	SizeofOperand	axis2_char_t		67482	1					
ANR	68052	AdditiveExpression	"5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""owner"" )"		67482	1		+			
ANR	68053	PrimaryExpression	5		67482	0					
ANR	68054	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""owner"" )"		67482	1		+			
ANR	68055	CallExpression	axutil_strlen ( p_prefix )		67482	0					
ANR	68056	Callee	axutil_strlen		67482	0					
ANR	68057	Identifier	axutil_strlen		67482	0					
ANR	68058	ArgumentList	p_prefix		67482	1					
ANR	68059	Argument	p_prefix		67482	0					
ANR	68060	Identifier	p_prefix		67482	0					
ANR	68061	CallExpression	"axutil_strlen ( ""owner"" )"		67482	1					
ANR	68062	Callee	axutil_strlen		67482	0					
ANR	68063	Identifier	axutil_strlen		67482	0					
ANR	68064	ArgumentList	"""owner"""		67482	1					
ANR	68065	Argument	"""owner"""		67482	0					
ANR	68066	PrimaryExpression	"""owner"""		67482	0					
ANR	68067	ExpressionStatement	"sprintf ( start_input_str , ""<%s%sowner>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	511:28:24779:24956	67482	2	True				
ANR	68068	CallExpression	"sprintf ( start_input_str , ""<%s%sowner>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		67482	0					
ANR	68069	Callee	sprintf		67482	0					
ANR	68070	Identifier	sprintf		67482	0					
ANR	68071	ArgumentList	start_input_str		67482	1					
ANR	68072	Argument	start_input_str		67482	0					
ANR	68073	Identifier	start_input_str		67482	0					
ANR	68074	Argument	"""<%s%sowner>"""		67482	1					
ANR	68075	PrimaryExpression	"""<%s%sowner>"""		67482	0					
ANR	68076	Argument	"p_prefix ? p_prefix : """""		67482	2					
ANR	68077	ConditionalExpression	"p_prefix ? p_prefix : """""		67482	0					
ANR	68078	Condition	p_prefix		67482	0					
ANR	68079	Identifier	p_prefix		67482	0					
ANR	68080	Identifier	p_prefix		67482	1					
ANR	68081	PrimaryExpression	""""""		67482	2					
ANR	68082	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		67482	3					
ANR	68083	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		67482	0					
ANR	68084	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		67482	0					
ANR	68085	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		67482	0		&&			
ANR	68086	Identifier	p_prefix		67482	0					
ANR	68087	CallExpression	"axutil_strcmp ( p_prefix , """" )"		67482	1					
ANR	68088	Callee	axutil_strcmp		67482	0					
ANR	68089	Identifier	axutil_strcmp		67482	0					
ANR	68090	ArgumentList	p_prefix		67482	1					
ANR	68091	Argument	p_prefix		67482	0					
ANR	68092	Identifier	p_prefix		67482	0					
ANR	68093	Argument	""""""		67482	1					
ANR	68094	PrimaryExpression	""""""		67482	0					
ANR	68095	PrimaryExpression	""":"""		67482	1					
ANR	68096	PrimaryExpression	""""""		67482	2					
ANR	68097	ExpressionStatement	start_input_str_len = axutil_strlen ( start_input_str )	515:24:25011:25063	67482	3	True				
ANR	68098	AssignmentExpression	start_input_str_len = axutil_strlen ( start_input_str )		67482	0		=			
ANR	68099	Identifier	start_input_str_len		67482	0					
ANR	68100	CallExpression	axutil_strlen ( start_input_str )		67482	1					
ANR	68101	Callee	axutil_strlen		67482	0					
ANR	68102	Identifier	axutil_strlen		67482	0					
ANR	68103	ArgumentList	start_input_str		67482	1					
ANR	68104	Argument	start_input_str		67482	0					
ANR	68105	Identifier	start_input_str		67482	0					
ANR	68106	ExpressionStatement	"sprintf ( end_input_str , ""</%s%sowner>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	516:24:25089:25265	67482	4	True				
ANR	68107	CallExpression	"sprintf ( end_input_str , ""</%s%sowner>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		67482	0					
ANR	68108	Callee	sprintf		67482	0					
ANR	68109	Identifier	sprintf		67482	0					
ANR	68110	ArgumentList	end_input_str		67482	1					
ANR	68111	Argument	end_input_str		67482	0					
ANR	68112	Identifier	end_input_str		67482	0					
ANR	68113	Argument	"""</%s%sowner>"""		67482	1					
ANR	68114	PrimaryExpression	"""</%s%sowner>"""		67482	0					
ANR	68115	Argument	"p_prefix ? p_prefix : """""		67482	2					
ANR	68116	ConditionalExpression	"p_prefix ? p_prefix : """""		67482	0					
ANR	68117	Condition	p_prefix		67482	0					
ANR	68118	Identifier	p_prefix		67482	0					
ANR	68119	Identifier	p_prefix		67482	1					
ANR	68120	PrimaryExpression	""""""		67482	2					
ANR	68121	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		67482	3					
ANR	68122	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		67482	0					
ANR	68123	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		67482	0					
ANR	68124	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		67482	0		&&			
ANR	68125	Identifier	p_prefix		67482	0					
ANR	68126	CallExpression	"axutil_strcmp ( p_prefix , """" )"		67482	1					
ANR	68127	Callee	axutil_strcmp		67482	0					
ANR	68128	Identifier	axutil_strcmp		67482	0					
ANR	68129	ArgumentList	p_prefix		67482	1					
ANR	68130	Argument	p_prefix		67482	0					
ANR	68131	Identifier	p_prefix		67482	0					
ANR	68132	Argument	""""""		67482	1					
ANR	68133	PrimaryExpression	""""""		67482	0					
ANR	68134	PrimaryExpression	""":"""		67482	1					
ANR	68135	PrimaryExpression	""""""		67482	2					
ANR	68136	ExpressionStatement	end_input_str_len = axutil_strlen ( end_input_str )	519:24:25291:25339	67482	5	True				
ANR	68137	AssignmentExpression	end_input_str_len = axutil_strlen ( end_input_str )		67482	0		=			
ANR	68138	Identifier	end_input_str_len		67482	0					
ANR	68139	CallExpression	axutil_strlen ( end_input_str )		67482	1					
ANR	68140	Callee	axutil_strlen		67482	0					
ANR	68141	Identifier	axutil_strlen		67482	0					
ANR	68142	ArgumentList	end_input_str		67482	1					
ANR	68143	Argument	end_input_str		67482	0					
ANR	68144	Identifier	end_input_str		67482	0					
ANR	68145	ExpressionStatement	text_value_2 = ( axis2_char_t * ) property_Owner . c_str ( )	521:27:25389:25441	67482	6	True				
ANR	68146	AssignmentExpression	text_value_2 = ( axis2_char_t * ) property_Owner . c_str ( )		67482	0		=			
ANR	68147	Identifier	text_value_2		67482	0					
ANR	68148	CastExpression	( axis2_char_t * ) property_Owner . c_str ( )		67482	1					
ANR	68149	CastTarget	axis2_char_t *		67482	0					
ANR	68150	CallExpression	property_Owner . c_str ( )		67482	1					
ANR	68151	Callee	property_Owner . c_str		67482	0					
ANR	68152	MemberAccess	property_Owner . c_str		67482	0					
ANR	68153	Identifier	property_Owner		67482	0					
ANR	68154	Identifier	c_str		67482	1					
ANR	68155	ArgumentList			67482	1					
ANR	68156	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"	523:27:25498:25586	67482	7	True				
ANR	68157	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"		67482	0					
ANR	68158	Callee	axutil_stream_write		67482	0					
ANR	68159	Identifier	axutil_stream_write		67482	0					
ANR	68160	ArgumentList	stream		67482	1					
ANR	68161	Argument	stream		67482	0					
ANR	68162	Identifier	stream		67482	0					
ANR	68163	Argument	Environment :: getEnv ( )		67482	1					
ANR	68164	CallExpression	Environment :: getEnv ( )		67482	0					
ANR	68165	Callee	Environment :: getEnv		67482	0					
ANR	68166	Identifier	Environment :: getEnv		67482	0					
ANR	68167	ArgumentList			67482	1					
ANR	68168	Argument	start_input_str		67482	2					
ANR	68169	Identifier	start_input_str		67482	0					
ANR	68170	Argument	start_input_str_len		67482	3					
ANR	68171	Identifier	start_input_str_len		67482	0					
ANR	68172	ExpressionStatement	"text_value_2_temp = axutil_xml_quote_string ( Environment :: getEnv ( ) , text_value_2 , true )"	526:27:25672:25758	67482	8	True				
ANR	68173	AssignmentExpression	"text_value_2_temp = axutil_xml_quote_string ( Environment :: getEnv ( ) , text_value_2 , true )"		67482	0		=			
ANR	68174	Identifier	text_value_2_temp		67482	0					
ANR	68175	CallExpression	"axutil_xml_quote_string ( Environment :: getEnv ( ) , text_value_2 , true )"		67482	1					
ANR	68176	Callee	axutil_xml_quote_string		67482	0					
ANR	68177	Identifier	axutil_xml_quote_string		67482	0					
ANR	68178	ArgumentList	Environment :: getEnv ( )		67482	1					
ANR	68179	Argument	Environment :: getEnv ( )		67482	0					
ANR	68180	CallExpression	Environment :: getEnv ( )		67482	0					
ANR	68181	Callee	Environment :: getEnv		67482	0					
ANR	68182	Identifier	Environment :: getEnv		67482	0					
ANR	68183	ArgumentList			67482	1					
ANR	68184	Argument	text_value_2		67482	1					
ANR	68185	Identifier	text_value_2		67482	0					
ANR	68186	Argument	true		67482	2					
ANR	68187	Identifier	true		67482	0					
ANR	68188	IfStatement	if ( text_value_2_temp )		67482	9					
ANR	68189	Condition	text_value_2_temp	527:31:25791:25807	67482	0	True				
ANR	68190	Identifier	text_value_2_temp		67482	0					
ANR	68191	CompoundStatement		166:27:7259:7259	67482	1					
ANR	68192	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_2_temp , axutil_strlen ( text_value_2_temp ) )"	529:31:25870:25973	67482	0	True				
ANR	68193	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_2_temp , axutil_strlen ( text_value_2_temp ) )"		67482	0					
ANR	68194	Callee	axutil_stream_write		67482	0					
ANR	68195	Identifier	axutil_stream_write		67482	0					
ANR	68196	ArgumentList	stream		67482	1					
ANR	68197	Argument	stream		67482	0					
ANR	68198	Identifier	stream		67482	0					
ANR	68199	Argument	Environment :: getEnv ( )		67482	1					
ANR	68200	CallExpression	Environment :: getEnv ( )		67482	0					
ANR	68201	Callee	Environment :: getEnv		67482	0					
ANR	68202	Identifier	Environment :: getEnv		67482	0					
ANR	68203	ArgumentList			67482	1					
ANR	68204	Argument	text_value_2_temp		67482	2					
ANR	68205	Identifier	text_value_2_temp		67482	0					
ANR	68206	Argument	axutil_strlen ( text_value_2_temp )		67482	3					
ANR	68207	CallExpression	axutil_strlen ( text_value_2_temp )		67482	0					
ANR	68208	Callee	axutil_strlen		67482	0					
ANR	68209	Identifier	axutil_strlen		67482	0					
ANR	68210	ArgumentList	text_value_2_temp		67482	1					
ANR	68211	Argument	text_value_2_temp		67482	0					
ANR	68212	Identifier	text_value_2_temp		67482	0					
ANR	68213	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , text_value_2_temp )"	530:31:26006:26069	67482	1	True				
ANR	68214	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , text_value_2_temp )"		67482	0					
ANR	68215	Callee	AXIS2_FREE		67482	0					
ANR	68216	Identifier	AXIS2_FREE		67482	0					
ANR	68217	ArgumentList	Environment :: getEnv ( ) -> allocator		67482	1					
ANR	68218	Argument	Environment :: getEnv ( ) -> allocator		67482	0					
ANR	68219	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		67482	0					
ANR	68220	CallExpression	Environment :: getEnv ( )		67482	0					
ANR	68221	Callee	Environment :: getEnv		67482	0					
ANR	68222	Identifier	Environment :: getEnv		67482	0					
ANR	68223	ArgumentList			67482	1					
ANR	68224	Identifier	allocator		67482	1					
ANR	68225	Argument	text_value_2_temp		67482	1					
ANR	68226	Identifier	text_value_2_temp		67482	0					
ANR	68227	ElseStatement	else		67482	0					
ANR	68228	CompoundStatement		171:27:7581:7581	67482	0					
ANR	68229	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_2 , axutil_strlen ( text_value_2 ) )"	534:31:26192:26285	67482	0	True				
ANR	68230	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_2 , axutil_strlen ( text_value_2 ) )"		67482	0					
ANR	68231	Callee	axutil_stream_write		67482	0					
ANR	68232	Identifier	axutil_stream_write		67482	0					
ANR	68233	ArgumentList	stream		67482	1					
ANR	68234	Argument	stream		67482	0					
ANR	68235	Identifier	stream		67482	0					
ANR	68236	Argument	Environment :: getEnv ( )		67482	1					
ANR	68237	CallExpression	Environment :: getEnv ( )		67482	0					
ANR	68238	Callee	Environment :: getEnv		67482	0					
ANR	68239	Identifier	Environment :: getEnv		67482	0					
ANR	68240	ArgumentList			67482	1					
ANR	68241	Argument	text_value_2		67482	2					
ANR	68242	Identifier	text_value_2		67482	0					
ANR	68243	Argument	axutil_strlen ( text_value_2 )		67482	3					
ANR	68244	CallExpression	axutil_strlen ( text_value_2 )		67482	0					
ANR	68245	Callee	axutil_strlen		67482	0					
ANR	68246	Identifier	axutil_strlen		67482	0					
ANR	68247	ArgumentList	text_value_2		67482	1					
ANR	68248	Argument	text_value_2		67482	0					
ANR	68249	Identifier	text_value_2		67482	0					
ANR	68250	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"	537:27:26371:26455	67482	10	True				
ANR	68251	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"		67482	0					
ANR	68252	Callee	axutil_stream_write		67482	0					
ANR	68253	Identifier	axutil_stream_write		67482	0					
ANR	68254	ArgumentList	stream		67482	1					
ANR	68255	Argument	stream		67482	0					
ANR	68256	Identifier	stream		67482	0					
ANR	68257	Argument	Environment :: getEnv ( )		67482	1					
ANR	68258	CallExpression	Environment :: getEnv ( )		67482	0					
ANR	68259	Callee	Environment :: getEnv		67482	0					
ANR	68260	Identifier	Environment :: getEnv		67482	0					
ANR	68261	ArgumentList			67482	1					
ANR	68262	Argument	end_input_str		67482	2					
ANR	68263	Identifier	end_input_str		67482	0					
ANR	68264	Argument	end_input_str_len		67482	3					
ANR	68265	Identifier	end_input_str_len		67482	0					
ANR	68266	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"	540:21:26528:26588	67482	11	True				
ANR	68267	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"		67482	0					
ANR	68268	Callee	AXIS2_FREE		67482	0					
ANR	68269	Identifier	AXIS2_FREE		67482	0					
ANR	68270	ArgumentList	Environment :: getEnv ( ) -> allocator		67482	1					
ANR	68271	Argument	Environment :: getEnv ( ) -> allocator		67482	0					
ANR	68272	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		67482	0					
ANR	68273	CallExpression	Environment :: getEnv ( )		67482	0					
ANR	68274	Callee	Environment :: getEnv		67482	0					
ANR	68275	Identifier	Environment :: getEnv		67482	0					
ANR	68276	ArgumentList			67482	1					
ANR	68277	Identifier	allocator		67482	1					
ANR	68278	Argument	start_input_str		67482	1					
ANR	68279	Identifier	start_input_str		67482	0					
ANR	68280	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"	541:21:26611:26669	67482	12	True				
ANR	68281	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"		67482	0					
ANR	68282	Callee	AXIS2_FREE		67482	0					
ANR	68283	Identifier	AXIS2_FREE		67482	0					
ANR	68284	ArgumentList	Environment :: getEnv ( ) -> allocator		67482	1					
ANR	68285	Argument	Environment :: getEnv ( ) -> allocator		67482	0					
ANR	68286	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		67482	0					
ANR	68287	CallExpression	Environment :: getEnv ( )		67482	0					
ANR	68288	Callee	Environment :: getEnv		67482	0					
ANR	68289	Identifier	Environment :: getEnv		67482	0					
ANR	68290	ArgumentList			67482	1					
ANR	68291	Identifier	allocator		67482	1					
ANR	68292	Argument	end_input_str		67482	1					
ANR	68293	Identifier	end_input_str		67482	0					
ANR	68294	ReturnStatement	return parent ;	546:12:26723:26736	67482	27	True				
ANR	68295	Identifier	parent		67482	0					
ANR	68296	ReturnType	WSF_CALL		67482	1					
ANR	68297	Identifier	AviaryCommon :: SubmissionID :: serialize		67482	2					
ANR	68298	ParameterList	"axiom_node_t * parent , axiom_element_t * parent_element , int parent_tag_closed , axutil_hash_t * namespaces , int * next_ns_index"		67482	3					
ANR	68299	Parameter	axiom_node_t * parent	358:39:18428:18447	67482	0	True				
ANR	68300	ParameterType	axiom_node_t *		67482	0					
ANR	68301	Identifier	parent		67482	1					
ANR	68302	Parameter	axiom_element_t * parent_element	359:3:18454:18484	67482	1	True				
ANR	68303	ParameterType	axiom_element_t *		67482	0					
ANR	68304	Identifier	parent_element		67482	1					
ANR	68305	Parameter	int parent_tag_closed	360:3:18491:18511	67482	2	True				
ANR	68306	ParameterType	int		67482	0					
ANR	68307	Identifier	parent_tag_closed		67482	1					
ANR	68308	Parameter	axutil_hash_t * namespaces	361:3:18518:18542	67482	3	True				
ANR	68309	ParameterType	axutil_hash_t *		67482	0					
ANR	68310	Identifier	namespaces		67482	1					
ANR	68311	Parameter	int * next_ns_index	362:3:18549:18566	67482	4	True				
ANR	68312	ParameterType	int *		67482	0					
ANR	68313	Identifier	next_ns_index		67482	1					
ANR	68314	CFGEntryNode	ENTRY		67482		True				
ANR	68315	CFGExitNode	EXIT		67482		True				
ANR	68316	Symbol	parent		67482						
ANR	68317	Symbol	Environment :: getEnv		67482						
ANR	68318	Symbol	current_node		67482						
ANR	68319	Symbol	qname_uri		67482						
ANR	68320	Symbol	axutil_strlen		67482						
ANR	68321	Symbol	p_prefix		67482						
ANR	68322	Symbol	ns1		67482						
ANR	68323	Symbol	property_Name . c_str		67482						
ANR	68324	Symbol	axiom_node_get_data_element		67482						
ANR	68325	Symbol	isValidName		67482						
ANR	68326	Symbol	text_value_2		67482						
ANR	68327	Symbol	stream		67482						
ANR	68328	Symbol	text_value_1		67482						
ANR	68329	Symbol	AXIS2_MALLOC		67482						
ANR	68330	Symbol	Environment :: getEnv ( ) -> allocator		67482						
ANR	68331	Symbol	property_Owner		67482						
ANR	68332	Symbol	text_value_1_temp		67482						
ANR	68333	Symbol	parent_element		67482						
ANR	68334	Symbol	axiom_data_source_get_stream		67482						
ANR	68335	Symbol	NULL		67482						
ANR	68336	Symbol	end_input_str_len		67482						
ANR	68337	Symbol	tag_closed		67482						
ANR	68338	Symbol	start_input_str		67482						
ANR	68339	Symbol	parent_tag_closed		67482						
ANR	68340	Symbol	next_ns_index		67482						
ANR	68341	Symbol	string_to_stream		67482						
ANR	68342	Symbol	data_source		67482						
ANR	68343	Symbol	start_input_str_len		67482						
ANR	68344	Symbol	property_Owner . c_str		67482						
ANR	68345	Symbol	axutil_xml_quote_string		67482						
ANR	68346	Symbol	qname_prefix		67482						
ANR	68347	Symbol	text_value_2_temp		67482						
ANR	68348	Symbol	* Environment :: getEnv		67482						
ANR	68349	Symbol	axutil_strcmp		67482						
ANR	68350	Symbol	isValidOwner		67482						
ANR	68351	Symbol	end_input_str		67482						
ANR	68352	Symbol	true		67482						
ANR	68353	Symbol	property_Name		67482						
ANR	68354	Symbol	namespaces		67482						
ANR	68355	Function	AviaryCommon :: SubmissionID :: getProperty1	555:12:26857:26993							
ANR	68356	FunctionDef	AviaryCommon :: SubmissionID :: getProperty1 ()		68355	0					
ANR	68357	CompoundStatement		557:12:26945:26993	68355	0					
ANR	68358	ReturnStatement	return getName ( ) ;	558:16:26963:26979	68355	0	True				
ANR	68359	CallExpression	getName ( )		68355	0					
ANR	68360	Callee	getName		68355	0					
ANR	68361	Identifier	getName		68355	0					
ANR	68362	ArgumentList			68355	1					
ANR	68363	ReturnType	std :: string WSF_CALL		68355	1					
ANR	68364	Identifier	AviaryCommon :: SubmissionID :: getProperty1		68355	2					
ANR	68365	ParameterList			68355	3					
ANR	68366	CFGEntryNode	ENTRY		68355		True				
ANR	68367	CFGExitNode	EXIT		68355		True				
ANR	68368	Symbol	getName		68355						
ANR	68369	Function	AviaryCommon :: SubmissionID :: getName	564:12:27072:27209							
ANR	68370	FunctionDef	AviaryCommon :: SubmissionID :: getName ()		68369	0					
ANR	68371	CompoundStatement		566:13:27156:27209	68369	0					
ANR	68372	ReturnStatement	return property_Name ;	567:16:27174:27194	68369	0	True				
ANR	68373	Identifier	property_Name		68369	0					
ANR	68374	ReturnType	std :: string WSF_CALL		68369	1					
ANR	68375	Identifier	AviaryCommon :: SubmissionID :: getName		68369	2					
ANR	68376	ParameterList			68369	3					
ANR	68377	CFGEntryNode	ENTRY		68369		True				
ANR	68378	CFGExitNode	EXIT		68369		True				
ANR	68379	Symbol	property_Name		68369						
ANR	68380	Function	AviaryCommon :: SubmissionID :: setName	573:12:27287:27868							
ANR	68381	FunctionDef	AviaryCommon :: SubmissionID :: setName (const std :: string arg_Name)		68380	0					
ANR	68382	CompoundStatement		576:13:27412:27868	68380	0					
ANR	68383	IfStatement	if ( isValidName && arg_Name == property_Name )		68380	0					
ANR	68384	Condition	isValidName && arg_Name == property_Name	579:19:27451:27514	68380	0	True				
ANR	68385	AndExpression	isValidName && arg_Name == property_Name		68380	0		&&			
ANR	68386	Identifier	isValidName		68380	0					
ANR	68387	EqualityExpression	arg_Name == property_Name		68380	1		==			
ANR	68388	Identifier	arg_Name		68380	0					
ANR	68389	Identifier	property_Name		68380	1					
ANR	68390	CompoundStatement		6:16:120:120	68380	1					
ANR	68391	ReturnStatement	return true ;	583:20:27576:27587	68380	0	True				
ANR	68392	Identifier	true		68380	0					
ANR	68393	ExpressionStatement	resetName ( )	589:16:27659:27670	68380	1	True				
ANR	68394	CallExpression	resetName ( )		68380	0					
ANR	68395	Callee	resetName		68380	0					
ANR	68396	Identifier	resetName		68380	0					
ANR	68397	ArgumentList			68380	1					
ANR	68398	ExpressionStatement	property_Name = std :: string ( arg_Name . c_str ( ) )	592:24:27714:27759	68380	2	True				
ANR	68399	AssignmentExpression	property_Name = std :: string ( arg_Name . c_str ( ) )		68380	0		=			
ANR	68400	Identifier	property_Name		68380	0					
ANR	68401	CallExpression	std :: string ( arg_Name . c_str ( ) )		68380	1					
ANR	68402	Callee	std :: string		68380	0					
ANR	68403	Identifier	std :: string		68380	0					
ANR	68404	ArgumentList	arg_Name . c_str ( )		68380	1					
ANR	68405	Argument	arg_Name . c_str ( )		68380	0					
ANR	68406	CallExpression	arg_Name . c_str ( )		68380	0					
ANR	68407	Callee	arg_Name . c_str		68380	0					
ANR	68408	MemberAccess	arg_Name . c_str		68380	0					
ANR	68409	Identifier	arg_Name		68380	0					
ANR	68410	Identifier	c_str		68380	1					
ANR	68411	ArgumentList			68380	1					
ANR	68412	ExpressionStatement	isValidName = true	593:24:27785:27803	68380	3	True				
ANR	68413	AssignmentExpression	isValidName = true		68380	0		=			
ANR	68414	Identifier	isValidName		68380	0					
ANR	68415	Identifier	true		68380	1					
ANR	68416	ReturnStatement	return true ;	595:16:27842:27853	68380	4	True				
ANR	68417	Identifier	true		68380	0					
ANR	68418	ReturnType	bool WSF_CALL		68380	1					
ANR	68419	Identifier	AviaryCommon :: SubmissionID :: setName		68380	2					
ANR	68420	ParameterList	const std :: string arg_Name		68380	3					
ANR	68421	Parameter	const std :: string arg_Name	575:20:27370:27396	68380	0	True				
ANR	68422	ParameterType	const std :: string		68380	0					
ANR	68423	Identifier	arg_Name		68380	1					
ANR	68424	CFGEntryNode	ENTRY		68380		True				
ANR	68425	CFGExitNode	EXIT		68380		True				
ANR	68426	Symbol	isValidName		68380						
ANR	68427	Symbol	std :: string		68380						
ANR	68428	Symbol	arg_Name . c_str		68380						
ANR	68429	Symbol	true		68380						
ANR	68430	Symbol	property_Name		68380						
ANR	68431	Symbol	arg_Name		68380						
ANR	68432	Function	AviaryCommon :: SubmissionID :: resetName	603:11:27959:28187							
ANR	68433	FunctionDef	AviaryCommon :: SubmissionID :: resetName ()		68432	0					
ANR	68434	CompoundStatement		605:11:28035:28187	68432	0					
ANR	68435	IdentifierDeclStatement	int i = 0 ;	606:15:28052:28061	68432	0	True				
ANR	68436	IdentifierDecl	i = 0		68432	0					
ANR	68437	IdentifierDeclType	int		68432	0					
ANR	68438	Identifier	i		68432	1					
ANR	68439	AssignmentExpression	i = 0		68432	2		=			
ANR	68440	Identifier	i		68432	0					
ANR	68441	PrimaryExpression	0		68432	1					
ANR	68442	IdentifierDeclStatement	int count = 0 ;	607:15:28078:28091	68432	1	True				
ANR	68443	IdentifierDecl	count = 0		68432	0					
ANR	68444	IdentifierDeclType	int		68432	0					
ANR	68445	Identifier	count		68432	1					
ANR	68446	AssignmentExpression	count = 0		68432	2		=			
ANR	68447	Identifier	count		68432	0					
ANR	68448	PrimaryExpression	0		68432	1					
ANR	68449	ExpressionStatement	isValidName = false	611:15:28126:28145	68432	2	True				
ANR	68450	AssignmentExpression	isValidName = false		68432	0		=			
ANR	68451	Identifier	isValidName		68432	0					
ANR	68452	Identifier	false		68432	1					
ANR	68453	ReturnStatement	return true ;	612:15:28163:28174	68432	3	True				
ANR	68454	Identifier	true		68432	0					
ANR	68455	ReturnType	bool WSF_CALL		68432	1					
ANR	68456	Identifier	AviaryCommon :: SubmissionID :: resetName		68432	2					
ANR	68457	ParameterList			68432	3					
ANR	68458	CFGEntryNode	ENTRY		68432		True				
ANR	68459	CFGExitNode	EXIT		68432		True				
ANR	68460	Symbol	isValidName		68432						
ANR	68461	Symbol	count		68432						
ANR	68462	Symbol	false		68432						
ANR	68463	Symbol	true		68432						
ANR	68464	Symbol	i		68432						
ANR	68465	Function	AviaryCommon :: SubmissionID :: isNameNil	618:11:28272:28397							
ANR	68466	FunctionDef	AviaryCommon :: SubmissionID :: isNameNil ()		68465	0					
ANR	68467	CompoundStatement		620:11:28348:28397	68465	0					
ANR	68468	ReturnStatement	return ! isValidName ;	621:15:28365:28384	68465	0	True				
ANR	68469	UnaryOperationExpression	! isValidName		68465	0					
ANR	68470	UnaryOperator	!		68465	0					
ANR	68471	Identifier	isValidName		68465	1					
ANR	68472	ReturnType	bool WSF_CALL		68465	1					
ANR	68473	Identifier	AviaryCommon :: SubmissionID :: isNameNil		68465	2					
ANR	68474	ParameterList			68465	3					
ANR	68475	CFGEntryNode	ENTRY		68465		True				
ANR	68476	CFGExitNode	EXIT		68465		True				
ANR	68477	Symbol	isValidName		68465						
ANR	68478	Function	AviaryCommon :: SubmissionID :: setNameNil	627:11:28502:28627							
ANR	68479	FunctionDef	AviaryCommon :: SubmissionID :: setNameNil ()		68478	0					
ANR	68480	CompoundStatement		629:11:28579:28627	68478	0					
ANR	68481	ReturnStatement	return resetName ( ) ;	630:15:28596:28614	68478	0	True				
ANR	68482	CallExpression	resetName ( )		68478	0					
ANR	68483	Callee	resetName		68478	0					
ANR	68484	Identifier	resetName		68478	0					
ANR	68485	ArgumentList			68478	1					
ANR	68486	ReturnType	bool WSF_CALL		68478	1					
ANR	68487	Identifier	AviaryCommon :: SubmissionID :: setNameNil		68478	2					
ANR	68488	ParameterList			68478	3					
ANR	68489	CFGEntryNode	ENTRY		68478		True				
ANR	68490	CFGExitNode	EXIT		68478		True				
ANR	68491	Symbol	resetName		68478						
ANR	68492	Function	AviaryCommon :: SubmissionID :: getProperty2	638:12:28741:28878							
ANR	68493	FunctionDef	AviaryCommon :: SubmissionID :: getProperty2 ()		68492	0					
ANR	68494	CompoundStatement		640:12:28829:28878	68492	0					
ANR	68495	ReturnStatement	return getOwner ( ) ;	641:16:28847:28864	68492	0	True				
ANR	68496	CallExpression	getOwner ( )		68492	0					
ANR	68497	Callee	getOwner		68492	0					
ANR	68498	Identifier	getOwner		68492	0					
ANR	68499	ArgumentList			68492	1					
ANR	68500	ReturnType	std :: string WSF_CALL		68492	1					
ANR	68501	Identifier	AviaryCommon :: SubmissionID :: getProperty2		68492	2					
ANR	68502	ParameterList			68492	3					
ANR	68503	CFGEntryNode	ENTRY		68492		True				
ANR	68504	CFGExitNode	EXIT		68492		True				
ANR	68505	Symbol	getOwner		68492						
ANR	68506	Function	AviaryCommon :: SubmissionID :: getOwner	647:12:28958:29097							
ANR	68507	FunctionDef	AviaryCommon :: SubmissionID :: getOwner ()		68506	0					
ANR	68508	CompoundStatement		649:13:29043:29097	68506	0					
ANR	68509	ReturnStatement	return property_Owner ;	650:16:29061:29082	68506	0	True				
ANR	68510	Identifier	property_Owner		68506	0					
ANR	68511	ReturnType	std :: string WSF_CALL		68506	1					
ANR	68512	Identifier	AviaryCommon :: SubmissionID :: getOwner		68506	2					
ANR	68513	ParameterList			68506	3					
ANR	68514	CFGEntryNode	ENTRY		68506		True				
ANR	68515	CFGExitNode	EXIT		68506		True				
ANR	68516	Symbol	property_Owner		68506						
ANR	68517	Function	AviaryCommon :: SubmissionID :: setOwner	656:12:29176:29766							
ANR	68518	FunctionDef	AviaryCommon :: SubmissionID :: setOwner (const std :: string arg_Owner)		68517	0					
ANR	68519	CompoundStatement		659:13:29303:29766	68517	0					
ANR	68520	IfStatement	if ( isValidOwner && arg_Owner == property_Owner )		68517	0					
ANR	68521	Condition	isValidOwner && arg_Owner == property_Owner	662:19:29342:29408	68517	0	True				
ANR	68522	AndExpression	isValidOwner && arg_Owner == property_Owner		68517	0		&&			
ANR	68523	Identifier	isValidOwner		68517	0					
ANR	68524	EqualityExpression	arg_Owner == property_Owner		68517	1		==			
ANR	68525	Identifier	arg_Owner		68517	0					
ANR	68526	Identifier	property_Owner		68517	1					
ANR	68527	CompoundStatement		6:16:123:123	68517	1					
ANR	68528	ReturnStatement	return true ;	666:20:29470:29481	68517	0	True				
ANR	68529	Identifier	true		68517	0					
ANR	68530	ExpressionStatement	resetOwner ( )	672:16:29553:29565	68517	1	True				
ANR	68531	CallExpression	resetOwner ( )		68517	0					
ANR	68532	Callee	resetOwner		68517	0					
ANR	68533	Identifier	resetOwner		68517	0					
ANR	68534	ArgumentList			68517	1					
ANR	68535	ExpressionStatement	property_Owner = std :: string ( arg_Owner . c_str ( ) )	675:24:29609:29656	68517	2	True				
ANR	68536	AssignmentExpression	property_Owner = std :: string ( arg_Owner . c_str ( ) )		68517	0		=			
ANR	68537	Identifier	property_Owner		68517	0					
ANR	68538	CallExpression	std :: string ( arg_Owner . c_str ( ) )		68517	1					
ANR	68539	Callee	std :: string		68517	0					
ANR	68540	Identifier	std :: string		68517	0					
ANR	68541	ArgumentList	arg_Owner . c_str ( )		68517	1					
ANR	68542	Argument	arg_Owner . c_str ( )		68517	0					
ANR	68543	CallExpression	arg_Owner . c_str ( )		68517	0					
ANR	68544	Callee	arg_Owner . c_str		68517	0					
ANR	68545	MemberAccess	arg_Owner . c_str		68517	0					
ANR	68546	Identifier	arg_Owner		68517	0					
ANR	68547	Identifier	c_str		68517	1					
ANR	68548	ArgumentList			68517	1					
ANR	68549	ExpressionStatement	isValidOwner = true	676:24:29682:29701	68517	3	True				
ANR	68550	AssignmentExpression	isValidOwner = true		68517	0		=			
ANR	68551	Identifier	isValidOwner		68517	0					
ANR	68552	Identifier	true		68517	1					
ANR	68553	ReturnStatement	return true ;	678:16:29740:29751	68517	4	True				
ANR	68554	Identifier	true		68517	0					
ANR	68555	ReturnType	bool WSF_CALL		68517	1					
ANR	68556	Identifier	AviaryCommon :: SubmissionID :: setOwner		68517	2					
ANR	68557	ParameterList	const std :: string arg_Owner		68517	3					
ANR	68558	Parameter	const std :: string arg_Owner	658:20:29260:29287	68517	0	True				
ANR	68559	ParameterType	const std :: string		68517	0					
ANR	68560	Identifier	arg_Owner		68517	1					
ANR	68561	CFGEntryNode	ENTRY		68517		True				
ANR	68562	CFGExitNode	EXIT		68517		True				
ANR	68563	Symbol	std :: string		68517						
ANR	68564	Symbol	isValidOwner		68517						
ANR	68565	Symbol	true		68517						
ANR	68566	Symbol	arg_Owner		68517						
ANR	68567	Symbol	property_Owner		68517						
ANR	68568	Symbol	arg_Owner . c_str		68517						
ANR	68569	Function	AviaryCommon :: SubmissionID :: resetOwner	686:11:29858:30088							
ANR	68570	FunctionDef	AviaryCommon :: SubmissionID :: resetOwner ()		68569	0					
ANR	68571	CompoundStatement		688:11:29935:30088	68569	0					
ANR	68572	IdentifierDeclStatement	int i = 0 ;	689:15:29952:29961	68569	0	True				
ANR	68573	IdentifierDecl	i = 0		68569	0					
ANR	68574	IdentifierDeclType	int		68569	0					
ANR	68575	Identifier	i		68569	1					
ANR	68576	AssignmentExpression	i = 0		68569	2		=			
ANR	68577	Identifier	i		68569	0					
ANR	68578	PrimaryExpression	0		68569	1					
ANR	68579	IdentifierDeclStatement	int count = 0 ;	690:15:29978:29991	68569	1	True				
ANR	68580	IdentifierDecl	count = 0		68569	0					
ANR	68581	IdentifierDeclType	int		68569	0					
ANR	68582	Identifier	count		68569	1					
ANR	68583	AssignmentExpression	count = 0		68569	2		=			
ANR	68584	Identifier	count		68569	0					
ANR	68585	PrimaryExpression	0		68569	1					
ANR	68586	ExpressionStatement	isValidOwner = false	694:15:30026:30046	68569	2	True				
ANR	68587	AssignmentExpression	isValidOwner = false		68569	0		=			
ANR	68588	Identifier	isValidOwner		68569	0					
ANR	68589	Identifier	false		68569	1					
ANR	68590	ReturnStatement	return true ;	695:15:30064:30075	68569	3	True				
ANR	68591	Identifier	true		68569	0					
ANR	68592	ReturnType	bool WSF_CALL		68569	1					
ANR	68593	Identifier	AviaryCommon :: SubmissionID :: resetOwner		68569	2					
ANR	68594	ParameterList			68569	3					
ANR	68595	CFGEntryNode	ENTRY		68569		True				
ANR	68596	CFGExitNode	EXIT		68569		True				
ANR	68597	Symbol	isValidOwner		68569						
ANR	68598	Symbol	count		68569						
ANR	68599	Symbol	false		68569						
ANR	68600	Symbol	true		68569						
ANR	68601	Symbol	i		68569						
ANR	68602	Function	AviaryCommon :: SubmissionID :: isOwnerNil	701:11:30174:30301							
ANR	68603	FunctionDef	AviaryCommon :: SubmissionID :: isOwnerNil ()		68602	0					
ANR	68604	CompoundStatement		703:11:30251:30301	68602	0					
ANR	68605	ReturnStatement	return ! isValidOwner ;	704:15:30268:30288	68602	0	True				
ANR	68606	UnaryOperationExpression	! isValidOwner		68602	0					
ANR	68607	UnaryOperator	!		68602	0					
ANR	68608	Identifier	isValidOwner		68602	1					
ANR	68609	ReturnType	bool WSF_CALL		68602	1					
ANR	68610	Identifier	AviaryCommon :: SubmissionID :: isOwnerNil		68602	2					
ANR	68611	ParameterList			68602	3					
ANR	68612	CFGEntryNode	ENTRY		68602		True				
ANR	68613	CFGExitNode	EXIT		68602		True				
ANR	68614	Symbol	isValidOwner		68602						
ANR	68615	Function	AviaryCommon :: SubmissionID :: setOwnerNil	710:11:30407:30534							
ANR	68616	FunctionDef	AviaryCommon :: SubmissionID :: setOwnerNil ()		68615	0					
ANR	68617	CompoundStatement		712:11:30485:30534	68615	0					
ANR	68618	ReturnStatement	return resetOwner ( ) ;	713:15:30502:30521	68615	0	True				
ANR	68619	CallExpression	resetOwner ( )		68615	0					
ANR	68620	Callee	resetOwner		68615	0					
ANR	68621	Identifier	resetOwner		68615	0					
ANR	68622	ArgumentList			68615	1					
ANR	68623	ReturnType	bool WSF_CALL		68615	1					
ANR	68624	Identifier	AviaryCommon :: SubmissionID :: setOwnerNil		68615	2					
ANR	68625	ParameterList			68615	3					
ANR	68626	CFGEntryNode	ENTRY		68615		True				
ANR	68627	CFGExitNode	EXIT		68615		True				
ANR	68628	Symbol	resetOwner		68615						
