command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4674151	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_condor_ver_info.cpp								
ANR	4674152	DeclStmt									
ANR	4674153	Decl							char	char * ( void )	CondorVersion
ANR	4674154	DeclStmt									
ANR	4674155	Decl							char	char * ( void )	CondorPlatform
ANR	4674156	DeclStmt									
ANR	4674157	Decl							const char	const char * [ ]	monthNames
ANR	4674158	Function	CondorVersionInfo :: CondorVersionInfo	33:0:1184:1776							
ANR	4674159	FunctionDef	"CondorVersionInfo :: CondorVersionInfo (const char * versionstring , const char * subsystem , const char * platformstring)"		4674158	0					
ANR	4674160	CompoundStatement		36:0:1320:1776	4674158	0					
ANR	4674161	ExpressionStatement	myversion . MajorVer = 0	37:1:1323:1345	4674158	0	True				
ANR	4674162	AssignmentExpression	myversion . MajorVer = 0		4674158	0		=			
ANR	4674163	MemberAccess	myversion . MajorVer		4674158	0					
ANR	4674164	Identifier	myversion		4674158	0					
ANR	4674165	Identifier	MajorVer		4674158	1					
ANR	4674166	PrimaryExpression	0		4674158	1					
ANR	4674167	ExpressionStatement	myversion . Arch = NULL	38:1:1348:1369	4674158	1	True				
ANR	4674168	AssignmentExpression	myversion . Arch = NULL		4674158	0		=			
ANR	4674169	MemberAccess	myversion . Arch		4674158	0					
ANR	4674170	Identifier	myversion		4674158	0					
ANR	4674171	Identifier	Arch		4674158	1					
ANR	4674172	Identifier	NULL		4674158	1					
ANR	4674173	ExpressionStatement	myversion . OpSys = NULL	39:1:1372:1394	4674158	2	True				
ANR	4674174	AssignmentExpression	myversion . OpSys = NULL		4674158	0		=			
ANR	4674175	MemberAccess	myversion . OpSys		4674158	0					
ANR	4674176	Identifier	myversion		4674158	0					
ANR	4674177	Identifier	OpSys		4674158	1					
ANR	4674178	Identifier	NULL		4674158	1					
ANR	4674179	ExpressionStatement	mysubsys = NULL	40:1:1397:1412	4674158	3	True				
ANR	4674180	AssignmentExpression	mysubsys = NULL		4674158	0		=			
ANR	4674181	Identifier	mysubsys		4674158	0					
ANR	4674182	Identifier	NULL		4674158	1					
ANR	4674183	IfStatement	if ( versionstring == NULL )		4674158	4					
ANR	4674184	Condition	versionstring == NULL	42:6:1421:1441	4674158	0	True				
ANR	4674185	EqualityExpression	versionstring == NULL		4674158	0		==			
ANR	4674186	Identifier	versionstring		4674158	0					
ANR	4674187	Identifier	NULL		4674158	1					
ANR	4674188	CompoundStatement		7:30:124:124	4674158	1					
ANR	4674189	ExpressionStatement	versionstring = CondorVersion ( )	43:2:1449:1480	4674158	0	True				
ANR	4674190	AssignmentExpression	versionstring = CondorVersion ( )		4674158	0		=			
ANR	4674191	Identifier	versionstring		4674158	0					
ANR	4674192	CallExpression	CondorVersion ( )		4674158	1					
ANR	4674193	Callee	CondorVersion		4674158	0					
ANR	4674194	Identifier	CondorVersion		4674158	0					
ANR	4674195	ArgumentList			4674158	1					
ANR	4674196	IfStatement	if ( platformstring == NULL )		4674158	5					
ANR	4674197	Condition	platformstring == NULL	45:6:1491:1512	4674158	0	True				
ANR	4674198	EqualityExpression	platformstring == NULL		4674158	0		==			
ANR	4674199	Identifier	platformstring		4674158	0					
ANR	4674200	Identifier	NULL		4674158	1					
ANR	4674201	CompoundStatement		10:31:195:195	4674158	1					
ANR	4674202	ExpressionStatement	platformstring = CondorPlatform ( )	46:2:1520:1553	4674158	0	True				
ANR	4674203	AssignmentExpression	platformstring = CondorPlatform ( )		4674158	0		=			
ANR	4674204	Identifier	platformstring		4674158	0					
ANR	4674205	CallExpression	CondorPlatform ( )		4674158	1					
ANR	4674206	Callee	CondorPlatform		4674158	0					
ANR	4674207	Identifier	CondorPlatform		4674158	0					
ANR	4674208	ArgumentList			4674158	1					
ANR	4674209	ExpressionStatement	"string_to_VersionData ( versionstring , myversion )"	49:1:1560:1606	4674158	6	True				
ANR	4674210	CallExpression	"string_to_VersionData ( versionstring , myversion )"		4674158	0					
ANR	4674211	Callee	string_to_VersionData		4674158	0					
ANR	4674212	Identifier	string_to_VersionData		4674158	0					
ANR	4674213	ArgumentList	versionstring		4674158	1					
ANR	4674214	Argument	versionstring		4674158	0					
ANR	4674215	Identifier	versionstring		4674158	0					
ANR	4674216	Argument	myversion		4674158	1					
ANR	4674217	Identifier	myversion		4674158	0					
ANR	4674218	ExpressionStatement	"string_to_PlatformData ( platformstring , myversion )"	50:1:1609:1657	4674158	7	True				
ANR	4674219	CallExpression	"string_to_PlatformData ( platformstring , myversion )"		4674158	0					
ANR	4674220	Callee	string_to_PlatformData		4674158	0					
ANR	4674221	Identifier	string_to_PlatformData		4674158	0					
ANR	4674222	ArgumentList	platformstring		4674158	1					
ANR	4674223	Argument	platformstring		4674158	0					
ANR	4674224	Identifier	platformstring		4674158	0					
ANR	4674225	Argument	myversion		4674158	1					
ANR	4674226	Identifier	myversion		4674158	0					
ANR	4674227	IfStatement	if ( subsystem )		4674158	8					
ANR	4674228	Condition	subsystem	52:6:1666:1674	4674158	0	True				
ANR	4674229	Identifier	subsystem		4674158	0					
ANR	4674230	CompoundStatement		17:18:357:357	4674158	1					
ANR	4674231	ExpressionStatement	mysubsys = strdup ( subsystem )	53:2:1682:1710	4674158	0	True				
ANR	4674232	AssignmentExpression	mysubsys = strdup ( subsystem )		4674158	0		=			
ANR	4674233	Identifier	mysubsys		4674158	0					
ANR	4674234	CallExpression	strdup ( subsystem )		4674158	1					
ANR	4674235	Callee	strdup		4674158	0					
ANR	4674236	Identifier	strdup		4674158	0					
ANR	4674237	ArgumentList	subsystem		4674158	1					
ANR	4674238	Argument	subsystem		4674158	0					
ANR	4674239	Identifier	subsystem		4674158	0					
ANR	4674240	ElseStatement	else		4674158	0					
ANR	4674241	CompoundStatement		19:8:399:399	4674158	0					
ANR	4674242	ExpressionStatement	mysubsys = strdup ( get_mySubSystem ( ) -> getName ( ) )	55:2:1724:1771	4674158	0	True				
ANR	4674243	AssignmentExpression	mysubsys = strdup ( get_mySubSystem ( ) -> getName ( ) )		4674158	0		=			
ANR	4674244	Identifier	mysubsys		4674158	0					
ANR	4674245	CallExpression	strdup ( get_mySubSystem ( ) -> getName ( ) )		4674158	1					
ANR	4674246	Callee	strdup		4674158	0					
ANR	4674247	Identifier	strdup		4674158	0					
ANR	4674248	ArgumentList	get_mySubSystem ( ) -> getName ( )		4674158	1					
ANR	4674249	Argument	get_mySubSystem ( ) -> getName ( )		4674158	0					
ANR	4674250	CallExpression	get_mySubSystem ( ) -> getName ( )		4674158	0					
ANR	4674251	Callee	get_mySubSystem ( ) -> getName		4674158	0					
ANR	4674252	PtrMemberAccess	get_mySubSystem ( ) -> getName		4674158	0					
ANR	4674253	CallExpression	get_mySubSystem ( )		4674158	0					
ANR	4674254	Callee	get_mySubSystem		4674158	0					
ANR	4674255	Identifier	get_mySubSystem		4674158	0					
ANR	4674256	ArgumentList			4674158	1					
ANR	4674257	Identifier	getName		4674158	1					
ANR	4674258	ArgumentList			4674158	1					
ANR	4674259	Identifier	CondorVersionInfo :: CondorVersionInfo		4674158	1					
ANR	4674260	ParameterList	"const char * versionstring , const char * subsystem , const char * platformstring"		4674158	2					
ANR	4674261	Parameter	const char * versionstring	33:37:1221:1245	4674158	0	True				
ANR	4674262	ParameterType	const char *		4674158	0					
ANR	4674263	Identifier	versionstring		4674158	1					
ANR	4674264	Parameter	const char * subsystem	34:10:1259:1279	4674158	1	True				
ANR	4674265	ParameterType	const char *		4674158	0					
ANR	4674266	Identifier	subsystem		4674158	1					
ANR	4674267	Parameter	const char * platformstring	35:10:1292:1317	4674158	2	True				
ANR	4674268	ParameterType	const char *		4674158	0					
ANR	4674269	Identifier	platformstring		4674158	1					
ANR	4674270	CFGEntryNode	ENTRY		4674158		True				
ANR	4674271	CFGExitNode	EXIT		4674158		True				
ANR	4674272	Symbol	NULL		4674158						
ANR	4674273	Symbol	get_mySubSystem ( ) -> getName		4674158						
ANR	4674274	Symbol	myversion . MajorVer		4674158						
ANR	4674275	Symbol	* get_mySubSystem		4674158						
ANR	4674276	Symbol	subsystem		4674158						
ANR	4674277	Symbol	myversion		4674158						
ANR	4674278	Symbol	versionstring		4674158						
ANR	4674279	Symbol	myversion . OpSys		4674158						
ANR	4674280	Symbol	platformstring		4674158						
ANR	4674281	Symbol	CondorVersion		4674158						
ANR	4674282	Symbol	myversion . Arch		4674158						
ANR	4674283	Symbol	mysubsys		4674158						
ANR	4674284	Symbol	CondorPlatform		4674158						
ANR	4674285	Symbol	strdup		4674158						
ANR	4674286	Symbol	get_mySubSystem		4674158						
ANR	4674287	Function	CondorVersionInfo :: CondorVersionInfo	59:0:1779:2129							
ANR	4674288	FunctionDef	CondorVersionInfo :: CondorVersionInfo (CondorVersionInfo const & other)		4674287	0					
ANR	4674289	CompoundStatement		60:0:1848:2129	4674287	0					
ANR	4674290	ExpressionStatement	myversion = other . myversion	61:1:1851:1878	4674287	0	True				
ANR	4674291	AssignmentExpression	myversion = other . myversion		4674287	0		=			
ANR	4674292	Identifier	myversion		4674287	0					
ANR	4674293	MemberAccess	other . myversion		4674287	1					
ANR	4674294	Identifier	other		4674287	0					
ANR	4674295	Identifier	myversion		4674287	1					
ANR	4674296	ExpressionStatement	mysubsys = NULL	62:1:1881:1896	4674287	1	True				
ANR	4674297	AssignmentExpression	mysubsys = NULL		4674287	0		=			
ANR	4674298	Identifier	mysubsys		4674287	0					
ANR	4674299	Identifier	NULL		4674287	1					
ANR	4674300	IfStatement	if ( other . mysubsys )		4674287	2					
ANR	4674301	Condition	other . mysubsys	63:5:1903:1916	4674287	0	True				
ANR	4674302	MemberAccess	other . mysubsys		4674287	0					
ANR	4674303	Identifier	other		4674287	0					
ANR	4674304	Identifier	mysubsys		4674287	1					
ANR	4674305	CompoundStatement		4:22:71:71	4674287	1					
ANR	4674306	ExpressionStatement	mysubsys = strdup ( other . mysubsys )	64:2:1924:1957	4674287	0	True				
ANR	4674307	AssignmentExpression	mysubsys = strdup ( other . mysubsys )		4674287	0		=			
ANR	4674308	Identifier	mysubsys		4674287	0					
ANR	4674309	CallExpression	strdup ( other . mysubsys )		4674287	1					
ANR	4674310	Callee	strdup		4674287	0					
ANR	4674311	Identifier	strdup		4674287	0					
ANR	4674312	ArgumentList	other . mysubsys		4674287	1					
ANR	4674313	Argument	other . mysubsys		4674287	0					
ANR	4674314	MemberAccess	other . mysubsys		4674287	0					
ANR	4674315	Identifier	other		4674287	0					
ANR	4674316	Identifier	mysubsys		4674287	1					
ANR	4674317	IfStatement	if ( other . myversion . Arch )		4674287	3					
ANR	4674318	Condition	other . myversion . Arch	66:5:1967:1986	4674287	0	True				
ANR	4674319	MemberAccess	other . myversion . Arch		4674287	0					
ANR	4674320	MemberAccess	other . myversion		4674287	0					
ANR	4674321	Identifier	other		4674287	0					
ANR	4674322	Identifier	myversion		4674287	1					
ANR	4674323	Identifier	Arch		4674287	1					
ANR	4674324	CompoundStatement		7:28:141:141	4674287	1					
ANR	4674325	ExpressionStatement	myversion . Arch = strdup ( other . myversion . Arch )	67:2:1994:2039	4674287	0	True				
ANR	4674326	AssignmentExpression	myversion . Arch = strdup ( other . myversion . Arch )		4674287	0		=			
ANR	4674327	MemberAccess	myversion . Arch		4674287	0					
ANR	4674328	Identifier	myversion		4674287	0					
ANR	4674329	Identifier	Arch		4674287	1					
ANR	4674330	CallExpression	strdup ( other . myversion . Arch )		4674287	1					
ANR	4674331	Callee	strdup		4674287	0					
ANR	4674332	Identifier	strdup		4674287	0					
ANR	4674333	ArgumentList	other . myversion . Arch		4674287	1					
ANR	4674334	Argument	other . myversion . Arch		4674287	0					
ANR	4674335	MemberAccess	other . myversion . Arch		4674287	0					
ANR	4674336	MemberAccess	other . myversion		4674287	0					
ANR	4674337	Identifier	other		4674287	0					
ANR	4674338	Identifier	myversion		4674287	1					
ANR	4674339	Identifier	Arch		4674287	1					
ANR	4674340	IfStatement	if ( other . myversion . OpSys )		4674287	4					
ANR	4674341	Condition	other . myversion . OpSys	69:5:2049:2069	4674287	0	True				
ANR	4674342	MemberAccess	other . myversion . OpSys		4674287	0					
ANR	4674343	MemberAccess	other . myversion		4674287	0					
ANR	4674344	Identifier	other		4674287	0					
ANR	4674345	Identifier	myversion		4674287	1					
ANR	4674346	Identifier	OpSys		4674287	1					
ANR	4674347	CompoundStatement		10:29:224:224	4674287	1					
ANR	4674348	ExpressionStatement	myversion . OpSys = strdup ( other . myversion . OpSys )	70:2:2077:2124	4674287	0	True				
ANR	4674349	AssignmentExpression	myversion . OpSys = strdup ( other . myversion . OpSys )		4674287	0		=			
ANR	4674350	MemberAccess	myversion . OpSys		4674287	0					
ANR	4674351	Identifier	myversion		4674287	0					
ANR	4674352	Identifier	OpSys		4674287	1					
ANR	4674353	CallExpression	strdup ( other . myversion . OpSys )		4674287	1					
ANR	4674354	Callee	strdup		4674287	0					
ANR	4674355	Identifier	strdup		4674287	0					
ANR	4674356	ArgumentList	other . myversion . OpSys		4674287	1					
ANR	4674357	Argument	other . myversion . OpSys		4674287	0					
ANR	4674358	MemberAccess	other . myversion . OpSys		4674287	0					
ANR	4674359	MemberAccess	other . myversion		4674287	0					
ANR	4674360	Identifier	other		4674287	0					
ANR	4674361	Identifier	myversion		4674287	1					
ANR	4674362	Identifier	OpSys		4674287	1					
ANR	4674363	Identifier	CondorVersionInfo :: CondorVersionInfo		4674287	1					
ANR	4674364	ParameterList	CondorVersionInfo const & other		4674287	2					
ANR	4674365	Parameter	CondorVersionInfo const & other	59:37:1816:1845	4674287	0	True				
ANR	4674366	ParameterType	CondorVersionInfo const &		4674287	0					
ANR	4674367	Identifier	other		4674287	1					
ANR	4674368	CFGEntryNode	ENTRY		4674287		True				
ANR	4674369	CFGExitNode	EXIT		4674287		True				
ANR	4674370	Symbol	other		4674287						
ANR	4674371	Symbol	NULL		4674287						
ANR	4674372	Symbol	other . myversion . Arch		4674287						
ANR	4674373	Symbol	myversion . Arch		4674287						
ANR	4674374	Symbol	other . myversion		4674287						
ANR	4674375	Symbol	mysubsys		4674287						
ANR	4674376	Symbol	myversion		4674287						
ANR	4674377	Symbol	strdup		4674287						
ANR	4674378	Symbol	other . mysubsys		4674287						
ANR	4674379	Symbol	other . myversion . OpSys		4674287						
ANR	4674380	Symbol	myversion . OpSys		4674287						
ANR	4674381	Function	CondorVersionInfo :: ~CondorVersionInfo	74:0:2132:2293							
ANR	4674382	FunctionDef	CondorVersionInfo :: ~CondorVersionInfo ()		4674381	0					
ANR	4674383	CompoundStatement		75:0:2172:2293	4674381	0					
ANR	4674384	IfStatement	if ( mysubsys )		4674381	0					
ANR	4674385	Condition	mysubsys	76:5:2179:2186	4674381	0	True				
ANR	4674386	Identifier	mysubsys		4674381	0					
ANR	4674387	ExpressionStatement	free ( mysubsys )	76:15:2189:2203	4674381	1	True				
ANR	4674388	CallExpression	free ( mysubsys )		4674381	0					
ANR	4674389	Callee	free		4674381	0					
ANR	4674390	Identifier	free		4674381	0					
ANR	4674391	ArgumentList	mysubsys		4674381	1					
ANR	4674392	Argument	mysubsys		4674381	0					
ANR	4674393	Identifier	mysubsys		4674381	0					
ANR	4674394	IfStatement	if ( myversion . Arch )		4674381	1					
ANR	4674395	Condition	myversion . Arch	77:5:2210:2223	4674381	0	True				
ANR	4674396	MemberAccess	myversion . Arch		4674381	0					
ANR	4674397	Identifier	myversion		4674381	0					
ANR	4674398	Identifier	Arch		4674381	1					
ANR	4674399	ExpressionStatement	free ( myversion . Arch )	77:21:2226:2246	4674381	1	True				
ANR	4674400	CallExpression	free ( myversion . Arch )		4674381	0					
ANR	4674401	Callee	free		4674381	0					
ANR	4674402	Identifier	free		4674381	0					
ANR	4674403	ArgumentList	myversion . Arch		4674381	1					
ANR	4674404	Argument	myversion . Arch		4674381	0					
ANR	4674405	MemberAccess	myversion . Arch		4674381	0					
ANR	4674406	Identifier	myversion		4674381	0					
ANR	4674407	Identifier	Arch		4674381	1					
ANR	4674408	IfStatement	if ( myversion . OpSys )		4674381	2					
ANR	4674409	Condition	myversion . OpSys	78:5:2253:2267	4674381	0	True				
ANR	4674410	MemberAccess	myversion . OpSys		4674381	0					
ANR	4674411	Identifier	myversion		4674381	0					
ANR	4674412	Identifier	OpSys		4674381	1					
ANR	4674413	ExpressionStatement	free ( myversion . OpSys )	78:22:2270:2291	4674381	1	True				
ANR	4674414	CallExpression	free ( myversion . OpSys )		4674381	0					
ANR	4674415	Callee	free		4674381	0					
ANR	4674416	Identifier	free		4674381	0					
ANR	4674417	ArgumentList	myversion . OpSys		4674381	1					
ANR	4674418	Argument	myversion . OpSys		4674381	0					
ANR	4674419	MemberAccess	myversion . OpSys		4674381	0					
ANR	4674420	Identifier	myversion		4674381	0					
ANR	4674421	Identifier	OpSys		4674381	1					
ANR	4674422	Identifier	CondorVersionInfo :: ~CondorVersionInfo		4674381	1					
ANR	4674423	ParameterList			4674381	2					
ANR	4674424	CFGEntryNode	ENTRY		4674381		True				
ANR	4674425	CFGExitNode	EXIT		4674381		True				
ANR	4674426	Symbol	myversion . Arch		4674381						
ANR	4674427	Symbol	mysubsys		4674381						
ANR	4674428	Symbol	myversion		4674381						
ANR	4674429	Symbol	myversion . OpSys		4674381						
ANR	4674430	Function	CondorVersionInfo :: compare_versions	82:0:2298:2585							
ANR	4674431	FunctionDef	CondorVersionInfo :: compare_versions (const char * VersionString1)		4674430	0					
ANR	4674432	CompoundStatement		84:0:2372:2585	4674430	0					
ANR	4674433	IdentifierDeclStatement	VersionData_t ver1 ;	85:1:2375:2393	4674430	0	True				
ANR	4674434	IdentifierDecl	ver1		4674430	0					
ANR	4674435	IdentifierDeclType	VersionData_t		4674430	0					
ANR	4674436	Identifier	ver1		4674430	1					
ANR	4674437	ExpressionStatement	ver1 . Scalar = 0	87:1:2397:2412	4674430	1	True				
ANR	4674438	AssignmentExpression	ver1 . Scalar = 0		4674430	0		=			
ANR	4674439	MemberAccess	ver1 . Scalar		4674430	0					
ANR	4674440	Identifier	ver1		4674430	0					
ANR	4674441	Identifier	Scalar		4674430	1					
ANR	4674442	PrimaryExpression	0		4674430	1					
ANR	4674443	ExpressionStatement	"string_to_VersionData ( VersionString1 , ver1 )"	88:1:2415:2457	4674430	2	True				
ANR	4674444	CallExpression	"string_to_VersionData ( VersionString1 , ver1 )"		4674430	0					
ANR	4674445	Callee	string_to_VersionData		4674430	0					
ANR	4674446	Identifier	string_to_VersionData		4674430	0					
ANR	4674447	ArgumentList	VersionString1		4674430	1					
ANR	4674448	Argument	VersionString1		4674430	0					
ANR	4674449	Identifier	VersionString1		4674430	0					
ANR	4674450	Argument	ver1		4674430	1					
ANR	4674451	Identifier	ver1		4674430	0					
ANR	4674452	IfStatement	if ( ver1 . Scalar < myversion . Scalar )		4674430	3					
ANR	4674453	Condition	ver1 . Scalar < myversion . Scalar	90:6:2466:2495	4674430	0	True				
ANR	4674454	RelationalExpression	ver1 . Scalar < myversion . Scalar		4674430	0		<			
ANR	4674455	MemberAccess	ver1 . Scalar		4674430	0					
ANR	4674456	Identifier	ver1		4674430	0					
ANR	4674457	Identifier	Scalar		4674430	1					
ANR	4674458	MemberAccess	myversion . Scalar		4674430	1					
ANR	4674459	Identifier	myversion		4674430	0					
ANR	4674460	Identifier	Scalar		4674430	1					
ANR	4674461	CompoundStatement		7:39:126:126	4674430	1					
ANR	4674462	ReturnStatement	return - 1 ;	91:2:2503:2512	4674430	0	True				
ANR	4674463	UnaryOperationExpression	- 1		4674430	0					
ANR	4674464	UnaryOperator	-		4674430	0					
ANR	4674465	PrimaryExpression	1		4674430	1					
ANR	4674466	IfStatement	if ( ver1 . Scalar > myversion . Scalar )		4674430	4					
ANR	4674467	Condition	ver1 . Scalar > myversion . Scalar	93:6:2523:2552	4674430	0	True				
ANR	4674468	RelationalExpression	ver1 . Scalar > myversion . Scalar		4674430	0		>			
ANR	4674469	MemberAccess	ver1 . Scalar		4674430	0					
ANR	4674470	Identifier	ver1		4674430	0					
ANR	4674471	Identifier	Scalar		4674430	1					
ANR	4674472	MemberAccess	myversion . Scalar		4674430	1					
ANR	4674473	Identifier	myversion		4674430	0					
ANR	4674474	Identifier	Scalar		4674430	1					
ANR	4674475	CompoundStatement		10:39:183:183	4674430	1					
ANR	4674476	ReturnStatement	return 1 ;	94:2:2560:2568	4674430	0	True				
ANR	4674477	PrimaryExpression	1		4674430	0					
ANR	4674478	ReturnStatement	return 0 ;	97:1:2575:2583	4674430	5	True				
ANR	4674479	PrimaryExpression	0		4674430	0					
ANR	4674480	ReturnType	int		4674430	1					
ANR	4674481	Identifier	CondorVersionInfo :: compare_versions		4674430	2					
ANR	4674482	ParameterList	const char * VersionString1		4674430	3					
ANR	4674483	Parameter	const char * VersionString1	83:36:2338:2363	4674430	0	True				
ANR	4674484	ParameterType	const char *		4674430	0					
ANR	4674485	Identifier	VersionString1		4674430	1					
ANR	4674486	CFGEntryNode	ENTRY		4674430		True				
ANR	4674487	CFGExitNode	EXIT		4674430		True				
ANR	4674488	Symbol	myversion . Scalar		4674430						
ANR	4674489	Symbol	ver1		4674430						
ANR	4674490	Symbol	myversion		4674430						
ANR	4674491	Symbol	VersionString1		4674430						
ANR	4674492	Symbol	ver1 . Scalar		4674430						
ANR	4674493	Function	CondorVersionInfo :: compare_build_dates	100:0:2588:2884							
ANR	4674494	FunctionDef	CondorVersionInfo :: compare_build_dates (const char * VersionString1)		4674493	0					
ANR	4674495	CompoundStatement		102:0:2665:2884	4674493	0					
ANR	4674496	IdentifierDeclStatement	VersionData_t ver1 ;	103:1:2668:2686	4674493	0	True				
ANR	4674497	IdentifierDecl	ver1		4674493	0					
ANR	4674498	IdentifierDeclType	VersionData_t		4674493	0					
ANR	4674499	Identifier	ver1		4674493	1					
ANR	4674500	ExpressionStatement	ver1 . BuildDate = 0	105:1:2690:2708	4674493	1	True				
ANR	4674501	AssignmentExpression	ver1 . BuildDate = 0		4674493	0		=			
ANR	4674502	MemberAccess	ver1 . BuildDate		4674493	0					
ANR	4674503	Identifier	ver1		4674493	0					
ANR	4674504	Identifier	BuildDate		4674493	1					
ANR	4674505	PrimaryExpression	0		4674493	1					
ANR	4674506	ExpressionStatement	"string_to_VersionData ( VersionString1 , ver1 )"	106:1:2711:2753	4674493	2	True				
ANR	4674507	CallExpression	"string_to_VersionData ( VersionString1 , ver1 )"		4674493	0					
ANR	4674508	Callee	string_to_VersionData		4674493	0					
ANR	4674509	Identifier	string_to_VersionData		4674493	0					
ANR	4674510	ArgumentList	VersionString1		4674493	1					
ANR	4674511	Argument	VersionString1		4674493	0					
ANR	4674512	Identifier	VersionString1		4674493	0					
ANR	4674513	Argument	ver1		4674493	1					
ANR	4674514	Identifier	ver1		4674493	0					
ANR	4674515	IfStatement	if ( ver1 . BuildDate < myversion . BuildDate )		4674493	3					
ANR	4674516	Condition	ver1 . BuildDate < myversion . BuildDate	109:6:2763:2798	4674493	0	True				
ANR	4674517	RelationalExpression	ver1 . BuildDate < myversion . BuildDate		4674493	0		<			
ANR	4674518	MemberAccess	ver1 . BuildDate		4674493	0					
ANR	4674519	Identifier	ver1		4674493	0					
ANR	4674520	Identifier	BuildDate		4674493	1					
ANR	4674521	MemberAccess	myversion . BuildDate		4674493	1					
ANR	4674522	Identifier	myversion		4674493	0					
ANR	4674523	Identifier	BuildDate		4674493	1					
ANR	4674524	ReturnStatement	return - 1 ;	110:2:2804:2813	4674493	1	True				
ANR	4674525	UnaryOperationExpression	- 1		4674493	0					
ANR	4674526	UnaryOperator	-		4674493	0					
ANR	4674527	PrimaryExpression	1		4674493	1					
ANR	4674528	IfStatement	if ( ver1 . BuildDate > myversion . BuildDate )		4674493	4					
ANR	4674529	Condition	ver1 . BuildDate > myversion . BuildDate	111:6:2821:2856	4674493	0	True				
ANR	4674530	RelationalExpression	ver1 . BuildDate > myversion . BuildDate		4674493	0		>			
ANR	4674531	MemberAccess	ver1 . BuildDate		4674493	0					
ANR	4674532	Identifier	ver1		4674493	0					
ANR	4674533	Identifier	BuildDate		4674493	1					
ANR	4674534	MemberAccess	myversion . BuildDate		4674493	1					
ANR	4674535	Identifier	myversion		4674493	0					
ANR	4674536	Identifier	BuildDate		4674493	1					
ANR	4674537	ReturnStatement	return 1 ;	112:2:2862:2870	4674493	1	True				
ANR	4674538	PrimaryExpression	1		4674493	0					
ANR	4674539	ReturnStatement	return 0 ;	114:1:2874:2882	4674493	5	True				
ANR	4674540	PrimaryExpression	0		4674493	0					
ANR	4674541	ReturnType	int		4674493	1					
ANR	4674542	Identifier	CondorVersionInfo :: compare_build_dates		4674493	2					
ANR	4674543	ParameterList	const char * VersionString1		4674493	3					
ANR	4674544	Parameter	const char * VersionString1	101:39:2631:2656	4674493	0	True				
ANR	4674545	ParameterType	const char *		4674493	0					
ANR	4674546	Identifier	VersionString1		4674493	1					
ANR	4674547	CFGEntryNode	ENTRY		4674493		True				
ANR	4674548	CFGExitNode	EXIT		4674493		True				
ANR	4674549	Symbol	ver1 . BuildDate		4674493						
ANR	4674550	Symbol	ver1		4674493						
ANR	4674551	Symbol	myversion		4674493						
ANR	4674552	Symbol	myversion . BuildDate		4674493						
ANR	4674553	Symbol	VersionString1		4674493						
ANR	4674554	DeclStmt									
ANR	4674555	Decl							VersionData_t	VersionData_t	other_ver
ANR	4674556	Function	CondorVersionInfo :: built_since_version	164:0:4394:4617							
ANR	4674557	FunctionDef	"CondorVersionInfo :: built_since_version (int MajorVer , int MinorVer , int SubMinorVer)"		4674556	0					
ANR	4674558	CompoundStatement		167:0:4502:4617	4674556	0					
ANR	4674559	IdentifierDeclStatement	int Scalar = MajorVer * 1000000 + MinorVer * 1000 + SubMinorVer ;	168:1:4505:4574	4674556	0	True				
ANR	4674560	IdentifierDecl	Scalar = MajorVer * 1000000 + MinorVer * 1000 + SubMinorVer		4674556	0					
ANR	4674561	IdentifierDeclType	int		4674556	0					
ANR	4674562	Identifier	Scalar		4674556	1					
ANR	4674563	AssignmentExpression	Scalar = MajorVer * 1000000 + MinorVer * 1000 + SubMinorVer		4674556	2		=			
ANR	4674564	Identifier	Scalar		4674556	0					
ANR	4674565	AdditiveExpression	MajorVer * 1000000 + MinorVer * 1000 + SubMinorVer		4674556	1		+			
ANR	4674566	MultiplicativeExpression	MajorVer * 1000000		4674556	0		*			
ANR	4674567	Identifier	MajorVer		4674556	0					
ANR	4674568	PrimaryExpression	1000000		4674556	1					
ANR	4674569	AdditiveExpression	MinorVer * 1000 + SubMinorVer		4674556	1		+			
ANR	4674570	MultiplicativeExpression	MinorVer * 1000		4674556	0		*			
ANR	4674571	Identifier	MinorVer		4674556	0					
ANR	4674572	PrimaryExpression	1000		4674556	1					
ANR	4674573	Identifier	SubMinorVer		4674556	1					
ANR	4674574	ReturnStatement	return ( myversion . Scalar >= Scalar ) ;	171:1:4578:4615	4674556	1	True				
ANR	4674575	RelationalExpression	myversion . Scalar >= Scalar		4674556	0		>=			
ANR	4674576	MemberAccess	myversion . Scalar		4674556	0					
ANR	4674577	Identifier	myversion		4674556	0					
ANR	4674578	Identifier	Scalar		4674556	1					
ANR	4674579	Identifier	Scalar		4674556	1					
ANR	4674580	ReturnType	bool		4674556	1					
ANR	4674581	Identifier	CondorVersionInfo :: built_since_version		4674556	2					
ANR	4674582	ParameterList	"int MajorVer , int MinorVer , int SubMinorVer"		4674556	3					
ANR	4674583	Parameter	int MajorVer	165:39:4438:4449	4674556	0	True				
ANR	4674584	ParameterType	int		4674556	0					
ANR	4674585	Identifier	MajorVer		4674556	1					
ANR	4674586	Parameter	int MinorVer	165:53:4452:4463	4674556	1	True				
ANR	4674587	ParameterType	int		4674556	0					
ANR	4674588	Identifier	MinorVer		4674556	1					
ANR	4674589	Parameter	int SubMinorVer	166:12:4479:4493	4674556	2	True				
ANR	4674590	ParameterType	int		4674556	0					
ANR	4674591	Identifier	SubMinorVer		4674556	1					
ANR	4674592	CFGEntryNode	ENTRY		4674556		True				
ANR	4674593	CFGExitNode	EXIT		4674556		True				
ANR	4674594	Symbol	MinorVer		4674556						
ANR	4674595	Symbol	MajorVer		4674556						
ANR	4674596	Symbol	myversion . Scalar		4674556						
ANR	4674597	Symbol	SubMinorVer		4674556						
ANR	4674598	Symbol	myversion		4674556						
ANR	4674599	Symbol	Scalar		4674556						
ANR	4674600	Function	CondorVersionInfo :: built_since_date	174:0:4620:5074							
ANR	4674601	FunctionDef	"CondorVersionInfo :: built_since_date (int month , int day , int year)"		4674600	0					
ANR	4674602	CompoundStatement		176:0:4697:5074	4674600	0					
ANR	4674603	IdentifierDeclStatement	struct tm build_date ;	179:1:4723:4743	4674600	0	True				
ANR	4674604	IdentifierDecl	build_date		4674600	0					
ANR	4674605	IdentifierDeclType	struct tm		4674600	0					
ANR	4674606	Identifier	build_date		4674600	1					
ANR	4674607	IdentifierDeclStatement	time_t BuildDate ;	180:1:4746:4762	4674600	1	True				
ANR	4674608	IdentifierDecl	BuildDate		4674600	0					
ANR	4674609	IdentifierDeclType	time_t		4674600	0					
ANR	4674610	Identifier	BuildDate		4674600	1					
ANR	4674611	ExpressionStatement	build_date . tm_hour = 0	181:1:4765:4787	4674600	2	True				
ANR	4674612	AssignmentExpression	build_date . tm_hour = 0		4674600	0		=			
ANR	4674613	MemberAccess	build_date . tm_hour		4674600	0					
ANR	4674614	Identifier	build_date		4674600	0					
ANR	4674615	Identifier	tm_hour		4674600	1					
ANR	4674616	PrimaryExpression	0		4674600	1					
ANR	4674617	ExpressionStatement	build_date . tm_isdst = 1	182:1:4790:4813	4674600	3	True				
ANR	4674618	AssignmentExpression	build_date . tm_isdst = 1		4674600	0		=			
ANR	4674619	MemberAccess	build_date . tm_isdst		4674600	0					
ANR	4674620	Identifier	build_date		4674600	0					
ANR	4674621	Identifier	tm_isdst		4674600	1					
ANR	4674622	PrimaryExpression	1		4674600	1					
ANR	4674623	ExpressionStatement	build_date . tm_mday = day	183:1:4816:4840	4674600	4	True				
ANR	4674624	AssignmentExpression	build_date . tm_mday = day		4674600	0		=			
ANR	4674625	MemberAccess	build_date . tm_mday		4674600	0					
ANR	4674626	Identifier	build_date		4674600	0					
ANR	4674627	Identifier	tm_mday		4674600	1					
ANR	4674628	Identifier	day		4674600	1					
ANR	4674629	ExpressionStatement	build_date . tm_min = 0	184:1:4843:4864	4674600	5	True				
ANR	4674630	AssignmentExpression	build_date . tm_min = 0		4674600	0		=			
ANR	4674631	MemberAccess	build_date . tm_min		4674600	0					
ANR	4674632	Identifier	build_date		4674600	0					
ANR	4674633	Identifier	tm_min		4674600	1					
ANR	4674634	PrimaryExpression	0		4674600	1					
ANR	4674635	ExpressionStatement	build_date . tm_mon = month - 1	185:1:4867:4896	4674600	6	True				
ANR	4674636	AssignmentExpression	build_date . tm_mon = month - 1		4674600	0		=			
ANR	4674637	MemberAccess	build_date . tm_mon		4674600	0					
ANR	4674638	Identifier	build_date		4674600	0					
ANR	4674639	Identifier	tm_mon		4674600	1					
ANR	4674640	AdditiveExpression	month - 1		4674600	1		-			
ANR	4674641	Identifier	month		4674600	0					
ANR	4674642	PrimaryExpression	1		4674600	1					
ANR	4674643	ExpressionStatement	build_date . tm_sec = 0	186:1:4899:4920	4674600	7	True				
ANR	4674644	AssignmentExpression	build_date . tm_sec = 0		4674600	0		=			
ANR	4674645	MemberAccess	build_date . tm_sec		4674600	0					
ANR	4674646	Identifier	build_date		4674600	0					
ANR	4674647	Identifier	tm_sec		4674600	1					
ANR	4674648	PrimaryExpression	0		4674600	1					
ANR	4674649	ExpressionStatement	build_date . tm_year = year - 1900	187:1:4923:4955	4674600	8	True				
ANR	4674650	AssignmentExpression	build_date . tm_year = year - 1900		4674600	0		=			
ANR	4674651	MemberAccess	build_date . tm_year		4674600	0					
ANR	4674652	Identifier	build_date		4674600	0					
ANR	4674653	Identifier	tm_year		4674600	1					
ANR	4674654	AdditiveExpression	year - 1900		4674600	1		-			
ANR	4674655	Identifier	year		4674600	0					
ANR	4674656	PrimaryExpression	1900		4674600	1					
ANR	4674657	IfStatement	if ( ( BuildDate = mktime ( & build_date ) ) == - 1 )		4674600	9					
ANR	4674658	Condition	( BuildDate = mktime ( & build_date ) ) == - 1	189:6:4964:5002	4674600	0	True				
ANR	4674659	EqualityExpression	( BuildDate = mktime ( & build_date ) ) == - 1		4674600	0		==			
ANR	4674660	AssignmentExpression	BuildDate = mktime ( & build_date )		4674600	0		=			
ANR	4674661	Identifier	BuildDate		4674600	0					
ANR	4674662	CallExpression	mktime ( & build_date )		4674600	1					
ANR	4674663	Callee	mktime		4674600	0					
ANR	4674664	Identifier	mktime		4674600	0					
ANR	4674665	ArgumentList	& build_date		4674600	1					
ANR	4674666	Argument	& build_date		4674600	0					
ANR	4674667	UnaryOperationExpression	& build_date		4674600	0					
ANR	4674668	UnaryOperator	&		4674600	0					
ANR	4674669	Identifier	build_date		4674600	1					
ANR	4674670	UnaryOperationExpression	- 1		4674600	1					
ANR	4674671	UnaryOperator	-		4674600	0					
ANR	4674672	PrimaryExpression	1		4674600	1					
ANR	4674673	CompoundStatement		14:48:308:308	4674600	1					
ANR	4674674	ReturnStatement	return false ;	190:2:5010:5022	4674600	0	True				
ANR	4674675	Identifier	false		4674600	0					
ANR	4674676	ReturnStatement	return ( myversion . BuildDate >= BuildDate ) ;	193:1:5029:5072	4674600	10	True				
ANR	4674677	RelationalExpression	myversion . BuildDate >= BuildDate		4674600	0		>=			
ANR	4674678	MemberAccess	myversion . BuildDate		4674600	0					
ANR	4674679	Identifier	myversion		4674600	0					
ANR	4674680	Identifier	BuildDate		4674600	1					
ANR	4674681	Identifier	BuildDate		4674600	1					
ANR	4674682	ReturnType	bool		4674600	1					
ANR	4674683	Identifier	CondorVersionInfo :: built_since_date		4674600	2					
ANR	4674684	ParameterList	"int month , int day , int year"		4674600	3					
ANR	4674685	Parameter	int month	175:36:4661:4669	4674600	0	True				
ANR	4674686	ParameterType	int		4674600	0					
ANR	4674687	Identifier	month		4674600	1					
ANR	4674688	Parameter	int day	175:47:4672:4678	4674600	1	True				
ANR	4674689	ParameterType	int		4674600	0					
ANR	4674690	Identifier	day		4674600	1					
ANR	4674691	Parameter	int year	175:56:4681:4688	4674600	2	True				
ANR	4674692	ParameterType	int		4674600	0					
ANR	4674693	Identifier	year		4674600	1					
ANR	4674694	CFGEntryNode	ENTRY		4674600		True				
ANR	4674695	CFGExitNode	EXIT		4674600		True				
ANR	4674696	Symbol	year		4674600						
ANR	4674697	Symbol	false		4674600						
ANR	4674698	Symbol	build_date . tm_isdst		4674600						
ANR	4674699	Symbol	myversion		4674600						
ANR	4674700	Symbol	myversion . BuildDate		4674600						
ANR	4674701	Symbol	build_date . tm_hour		4674600						
ANR	4674702	Symbol	build_date . tm_year		4674600						
ANR	4674703	Symbol	build_date		4674600						
ANR	4674704	Symbol	mktime		4674600						
ANR	4674705	Symbol	month		4674600						
ANR	4674706	Symbol	BuildDate		4674600						
ANR	4674707	Symbol	build_date . tm_mon		4674600						
ANR	4674708	Symbol	build_date . tm_mday		4674600						
ANR	4674709	Symbol	& build_date		4674600						
ANR	4674710	Symbol	build_date . tm_sec		4674600						
ANR	4674711	Symbol	day		4674600						
ANR	4674712	Symbol	build_date . tm_min		4674600						
ANR	4674713	Function	CondorVersionInfo :: is_valid	196:0:5077:5326							
ANR	4674714	FunctionDef	CondorVersionInfo :: is_valid (const char * VersionString)		4674713	0					
ANR	4674715	CompoundStatement		198:0:5143:5326	4674713	0					
ANR	4674716	IdentifierDeclStatement	bool ret_value ;	199:1:5146:5160	4674713	0	True				
ANR	4674717	IdentifierDecl	ret_value		4674713	0					
ANR	4674718	IdentifierDeclType	bool		4674713	0					
ANR	4674719	Identifier	ret_value		4674713	1					
ANR	4674720	IdentifierDeclStatement	VersionData_t ver1 ;	200:1:5163:5181	4674713	1	True				
ANR	4674721	IdentifierDecl	ver1		4674713	0					
ANR	4674722	IdentifierDeclType	VersionData_t		4674713	0					
ANR	4674723	Identifier	ver1		4674713	1					
ANR	4674724	IfStatement	if ( ! VersionString )		4674713	2					
ANR	4674725	Condition	! VersionString	202:6:5190:5203	4674713	0	True				
ANR	4674726	UnaryOperationExpression	! VersionString		4674713	0					
ANR	4674727	UnaryOperator	!		4674713	0					
ANR	4674728	Identifier	VersionString		4674713	1					
ANR	4674729	CompoundStatement		5:23:63:63	4674713	1					
ANR	4674730	ReturnStatement	return ( myversion . MajorVer > 5 ) ;	203:2:5211:5242	4674713	0	True				
ANR	4674731	RelationalExpression	myversion . MajorVer > 5		4674713	0		>			
ANR	4674732	MemberAccess	myversion . MajorVer		4674713	0					
ANR	4674733	Identifier	myversion		4674713	0					
ANR	4674734	Identifier	MajorVer		4674713	1					
ANR	4674735	PrimaryExpression	5		4674713	1					
ANR	4674736	ExpressionStatement	"ret_value = string_to_VersionData ( VersionString , ver1 )"	206:1:5249:5302	4674713	3	True				
ANR	4674737	AssignmentExpression	"ret_value = string_to_VersionData ( VersionString , ver1 )"		4674713	0		=			
ANR	4674738	Identifier	ret_value		4674713	0					
ANR	4674739	CallExpression	"string_to_VersionData ( VersionString , ver1 )"		4674713	1					
ANR	4674740	Callee	string_to_VersionData		4674713	0					
ANR	4674741	Identifier	string_to_VersionData		4674713	0					
ANR	4674742	ArgumentList	VersionString		4674713	1					
ANR	4674743	Argument	VersionString		4674713	0					
ANR	4674744	Identifier	VersionString		4674713	0					
ANR	4674745	Argument	ver1		4674713	1					
ANR	4674746	Identifier	ver1		4674713	0					
ANR	4674747	ReturnStatement	return ret_value ;	208:1:5306:5322	4674713	4	True				
ANR	4674748	Identifier	ret_value		4674713	0					
ANR	4674749	ReturnType	bool		4674713	1					
ANR	4674750	Identifier	CondorVersionInfo :: is_valid		4674713	2					
ANR	4674751	ParameterList	const char * VersionString		4674713	3					
ANR	4674752	Parameter	const char * VersionString	197:28:5110:5134	4674713	0	True				
ANR	4674753	ParameterType	const char *		4674713	0					
ANR	4674754	Identifier	VersionString		4674713	1					
ANR	4674755	CFGEntryNode	ENTRY		4674713		True				
ANR	4674756	CFGExitNode	EXIT		4674713		True				
ANR	4674757	Symbol	VersionString		4674713						
ANR	4674758	Symbol	myversion . MajorVer		4674713						
ANR	4674759	Symbol	string_to_VersionData		4674713						
ANR	4674760	Symbol	ret_value		4674713						
ANR	4674761	Symbol	ver1		4674713						
ANR	4674762	Symbol	myversion		4674713						
ANR	4674763	Function	CondorVersionInfo :: get_version_from_file	212:0:5330:7165							
ANR	4674764	FunctionDef	"CondorVersionInfo :: get_version_from_file (const char * filename , char * ver , int maxlen)"		4674763	0					
ANR	4674765	CompoundStatement		215:0:5435:7165	4674763	0					
ANR	4674766	IdentifierDeclStatement	bool must_free = false ;	216:1:5438:5460	4674763	0	True				
ANR	4674767	IdentifierDecl	must_free = false		4674763	0					
ANR	4674768	IdentifierDeclType	bool		4674763	0					
ANR	4674769	Identifier	must_free		4674763	1					
ANR	4674770	AssignmentExpression	must_free = false		4674763	2		=			
ANR	4674771	Identifier	false		4674763	0					
ANR	4674772	Identifier	false		4674763	1					
ANR	4674773	IfStatement	if ( ! filename )		4674763	1					
ANR	4674774	Condition	! filename	218:5:5468:5476	4674763	0	True				
ANR	4674775	UnaryOperationExpression	! filename		4674763	0					
ANR	4674776	UnaryOperator	!		4674763	0					
ANR	4674777	Identifier	filename		4674763	1					
ANR	4674778	ReturnStatement	return NULL ;	219:2:5481:5492	4674763	1	True				
ANR	4674779	Identifier	NULL		4674763	0					
ANR	4674780	IfStatement	if ( ver && maxlen < 40 )		4674763	2					
ANR	4674781	Condition	ver && maxlen < 40	221:5:5501:5518	4674763	0	True				
ANR	4674782	AndExpression	ver && maxlen < 40		4674763	0		&&			
ANR	4674783	Identifier	ver		4674763	0					
ANR	4674784	RelationalExpression	maxlen < 40		4674763	1		<			
ANR	4674785	Identifier	maxlen		4674763	0					
ANR	4674786	PrimaryExpression	40		4674763	1					
ANR	4674787	ReturnStatement	return NULL ;	222:2:5524:5535	4674763	1	True				
ANR	4674788	Identifier	NULL		4674763	0					
ANR	4674789	ExpressionStatement	maxlen --	224:1:5539:5547	4674763	3	True				
ANR	4674790	PostIncDecOperationExpression	maxlen --		4674763	0					
ANR	4674791	Identifier	maxlen		4674763	0					
ANR	4674792	IncDec	--		4674763	1					
ANR	4674793	Statement	static	227:1:5611:5616	4674763	4	True				
ANR	4674794	IdentifierDeclStatement	"const char * readonly = ""rb"" ;"	227:8:5618:5645	4674763	5	True				
ANR	4674795	IdentifierDecl	"* readonly = ""rb"""		4674763	0					
ANR	4674796	IdentifierDeclType	const char *		4674763	0					
ANR	4674797	Identifier	readonly		4674763	1					
ANR	4674798	AssignmentExpression	"* readonly = ""rb"""		4674763	2		=			
ANR	4674799	Identifier	readonly		4674763	0					
ANR	4674800	PrimaryExpression	"""rb"""		4674763	1					
ANR	4674801	IdentifierDeclStatement	"FILE * fp = safe_fopen_wrapper_follow ( filename , readonly ) ;"	232:1:5724:5779	4674763	6	True				
ANR	4674802	IdentifierDecl	"* fp = safe_fopen_wrapper_follow ( filename , readonly )"		4674763	0					
ANR	4674803	IdentifierDeclType	FILE *		4674763	0					
ANR	4674804	Identifier	fp		4674763	1					
ANR	4674805	AssignmentExpression	"* fp = safe_fopen_wrapper_follow ( filename , readonly )"		4674763	2		=			
ANR	4674806	Identifier	fp		4674763	0					
ANR	4674807	CallExpression	"safe_fopen_wrapper_follow ( filename , readonly )"		4674763	1					
ANR	4674808	Callee	safe_fopen_wrapper_follow		4674763	0					
ANR	4674809	Identifier	safe_fopen_wrapper_follow		4674763	0					
ANR	4674810	ArgumentList	filename		4674763	1					
ANR	4674811	Argument	filename		4674763	0					
ANR	4674812	Identifier	filename		4674763	0					
ANR	4674813	Argument	readonly		4674763	1					
ANR	4674814	Identifier	readonly		4674763	0					
ANR	4674815	IfStatement	if ( ! fp )		4674763	7					
ANR	4674816	Condition	! fp	234:5:5787:5789	4674763	0	True				
ANR	4674817	UnaryOperationExpression	! fp		4674763	0					
ANR	4674818	UnaryOperator	!		4674763	0					
ANR	4674819	Identifier	fp		4674763	1					
ANR	4674820	CompoundStatement		22:2:409:460	4674763	1					
ANR	4674821	IdentifierDeclStatement	char * altname = alternate_exec_pathname ( filename ) ;	236:2:5845:5896	4674763	0	True				
ANR	4674822	IdentifierDecl	* altname = alternate_exec_pathname ( filename )		4674763	0					
ANR	4674823	IdentifierDeclType	char *		4674763	0					
ANR	4674824	Identifier	altname		4674763	1					
ANR	4674825	AssignmentExpression	* altname = alternate_exec_pathname ( filename )		4674763	2		=			
ANR	4674826	Identifier	altname		4674763	0					
ANR	4674827	CallExpression	alternate_exec_pathname ( filename )		4674763	1					
ANR	4674828	Callee	alternate_exec_pathname		4674763	0					
ANR	4674829	Identifier	alternate_exec_pathname		4674763	0					
ANR	4674830	ArgumentList	filename		4674763	1					
ANR	4674831	Argument	filename		4674763	0					
ANR	4674832	Identifier	filename		4674763	0					
ANR	4674833	IfStatement	if ( altname )		4674763	1					
ANR	4674834	Condition	altname	237:7:5905:5911	4674763	0	True				
ANR	4674835	Identifier	altname		4674763	0					
ANR	4674836	CompoundStatement		23:17:479:479	4674763	1					
ANR	4674837	ExpressionStatement	"fp = safe_fopen_wrapper_follow ( altname , readonly )"	238:3:5920:5968	4674763	0	True				
ANR	4674838	AssignmentExpression	"fp = safe_fopen_wrapper_follow ( altname , readonly )"		4674763	0		=			
ANR	4674839	Identifier	fp		4674763	0					
ANR	4674840	CallExpression	"safe_fopen_wrapper_follow ( altname , readonly )"		4674763	1					
ANR	4674841	Callee	safe_fopen_wrapper_follow		4674763	0					
ANR	4674842	Identifier	safe_fopen_wrapper_follow		4674763	0					
ANR	4674843	ArgumentList	altname		4674763	1					
ANR	4674844	Argument	altname		4674763	0					
ANR	4674845	Identifier	altname		4674763	0					
ANR	4674846	Argument	readonly		4674763	1					
ANR	4674847	Identifier	readonly		4674763	0					
ANR	4674848	ExpressionStatement	free ( altname )	239:3:5973:5986	4674763	1	True				
ANR	4674849	CallExpression	free ( altname )		4674763	0					
ANR	4674850	Callee	free		4674763	0					
ANR	4674851	Identifier	free		4674763	0					
ANR	4674852	ArgumentList	altname		4674763	1					
ANR	4674853	Argument	altname		4674763	0					
ANR	4674854	Identifier	altname		4674763	0					
ANR	4674855	IfStatement	if ( ! fp )		4674763	8					
ANR	4674856	Condition	! fp	243:6:6002:6004	4674763	0	True				
ANR	4674857	UnaryOperationExpression	! fp		4674763	0					
ANR	4674858	UnaryOperator	!		4674763	0					
ANR	4674859	Identifier	fp		4674763	1					
ANR	4674860	CompoundStatement		29:12:572:572	4674763	1					
ANR	4674861	ReturnStatement	return NULL ;	245:2:6032:6043	4674763	0	True				
ANR	4674862	Identifier	NULL		4674763	0					
ANR	4674863	IfStatement	if ( ! ver )		4674763	9					
ANR	4674864	Condition	! ver	248:5:6056:6059	4674763	0	True				
ANR	4674865	UnaryOperationExpression	! ver		4674763	0					
ANR	4674866	UnaryOperator	!		4674763	0					
ANR	4674867	Identifier	ver		4674763	1					
ANR	4674868	CompoundStatement		34:11:626:626	4674763	1					
ANR	4674869	IfStatement	if ( ! ( ver = ( char * ) malloc ( 100 ) ) )		4674763	0					
ANR	4674870	Condition	! ( ver = ( char * ) malloc ( 100 ) )	249:7:6071:6098	4674763	0	True				
ANR	4674871	UnaryOperationExpression	! ( ver = ( char * ) malloc ( 100 ) )		4674763	0					
ANR	4674872	UnaryOperator	!		4674763	0					
ANR	4674873	AssignmentExpression	ver = ( char * ) malloc ( 100 )		4674763	1		=			
ANR	4674874	Identifier	ver		4674763	0					
ANR	4674875	CastExpression	( char * ) malloc ( 100 )		4674763	1					
ANR	4674876	CastTarget	char *		4674763	0					
ANR	4674877	CallExpression	malloc ( 100 )		4674763	1					
ANR	4674878	Callee	malloc		4674763	0					
ANR	4674879	Identifier	malloc		4674763	0					
ANR	4674880	ArgumentList	100		4674763	1					
ANR	4674881	Argument	100		4674763	0					
ANR	4674882	PrimaryExpression	100		4674763	0					
ANR	4674883	CompoundStatement		35:38:666:666	4674763	1					
ANR	4674884	ReturnStatement	return NULL ;	251:3:6127:6138	4674763	0	True				
ANR	4674885	Identifier	NULL		4674763	0					
ANR	4674886	ExpressionStatement	must_free = true	253:2:6146:6162	4674763	1	True				
ANR	4674887	AssignmentExpression	must_free = true		4674763	0		=			
ANR	4674888	Identifier	must_free		4674763	0					
ANR	4674889	Identifier	true		4674763	1					
ANR	4674890	ExpressionStatement	maxlen = 100	254:2:6166:6178	4674763	2	True				
ANR	4674891	AssignmentExpression	maxlen = 100		4674763	0		=			
ANR	4674892	Identifier	maxlen		4674763	0					
ANR	4674893	PrimaryExpression	100		4674763	1					
ANR	4674894	IdentifierDeclStatement	int i = 0 ;	263:1:6545:6554	4674763	10	True				
ANR	4674895	IdentifierDecl	i = 0		4674763	0					
ANR	4674896	IdentifierDeclType	int		4674763	0					
ANR	4674897	Identifier	i		4674763	1					
ANR	4674898	AssignmentExpression	i = 0		4674763	2		=			
ANR	4674899	Identifier	i		4674763	0					
ANR	4674900	PrimaryExpression	0		4674763	1					
ANR	4674901	IdentifierDeclStatement	bool got_verstring = false ;	264:1:6557:6583	4674763	11	True				
ANR	4674902	IdentifierDecl	got_verstring = false		4674763	0					
ANR	4674903	IdentifierDeclType	bool		4674763	0					
ANR	4674904	Identifier	got_verstring		4674763	1					
ANR	4674905	AssignmentExpression	got_verstring = false		4674763	2		=			
ANR	4674906	Identifier	false		4674763	0					
ANR	4674907	Identifier	false		4674763	1					
ANR	4674908	IdentifierDeclStatement	"const char * verprefix = ""$CondorVersion: "" ;"	265:1:6586:6628	4674763	12	True				
ANR	4674909	IdentifierDecl	"* verprefix = ""$CondorVersion: """		4674763	0					
ANR	4674910	IdentifierDeclType	const char *		4674763	0					
ANR	4674911	Identifier	verprefix		4674763	1					
ANR	4674912	AssignmentExpression	"* verprefix = ""$CondorVersion: """		4674763	2		=			
ANR	4674913	Identifier	verprefix		4674763	0					
ANR	4674914	PrimaryExpression	"""$CondorVersion: """		4674763	1					
ANR	4674915	IdentifierDeclStatement	int ch ;	266:1:6631:6637	4674763	13	True				
ANR	4674916	IdentifierDecl	ch		4674763	0					
ANR	4674917	IdentifierDeclType	int		4674763	0					
ANR	4674918	Identifier	ch		4674763	1					
ANR	4674919	WhileStatement	while ( ( ch = fgetc ( fp ) ) != EOF )		4674763	14					
ANR	4674920	Condition	( ch = fgetc ( fp ) ) != EOF	267:8:6647:6667	4674763	0	True				
ANR	4674921	EqualityExpression	( ch = fgetc ( fp ) ) != EOF		4674763	0		!=			
ANR	4674922	AssignmentExpression	ch = fgetc ( fp )		4674763	0		=			
ANR	4674923	Identifier	ch		4674763	0					
ANR	4674924	CallExpression	fgetc ( fp )		4674763	1					
ANR	4674925	Callee	fgetc		4674763	0					
ANR	4674926	Identifier	fgetc		4674763	0					
ANR	4674927	ArgumentList	fp		4674763	1					
ANR	4674928	Argument	fp		4674763	0					
ANR	4674929	Identifier	fp		4674763	0					
ANR	4674930	Identifier	EOF		4674763	1					
ANR	4674931	CompoundStatement		53:32:1235:1235	4674763	1					
ANR	4674932	IfStatement	if ( verprefix [ i ] == '\\0' && ch != '\\0' )		4674763	0					
ANR	4674933	Condition	verprefix [ i ] == '\\0' && ch != '\\0'	268:7:6680:6713	4674763	0	True				
ANR	4674934	AndExpression	verprefix [ i ] == '\\0' && ch != '\\0'		4674763	0		&&			
ANR	4674935	EqualityExpression	verprefix [ i ] == '\\0'		4674763	0		==			
ANR	4674936	ArrayIndexing	verprefix [ i ]		4674763	0					
ANR	4674937	Identifier	verprefix		4674763	0					
ANR	4674938	Identifier	i		4674763	1					
ANR	4674939	PrimaryExpression	'\\0'		4674763	1					
ANR	4674940	EqualityExpression	ch != '\\0'		4674763	1		!=			
ANR	4674941	Identifier	ch		4674763	0					
ANR	4674942	PrimaryExpression	'\\0'		4674763	1					
ANR	4674943	CompoundStatement		54:44:1281:1281	4674763	1					
ANR	4674944	DoStatement	do		4674763	0					
ANR	4674945	CompoundStatement		55:6:1289:1289	4674763	0					
ANR	4674946	ExpressionStatement	ver [ i ++ ] = ch	270:4:6731:6744	4674763	0	True				
ANR	4674947	AssignmentExpression	ver [ i ++ ] = ch		4674763	0		=			
ANR	4674948	ArrayIndexing	ver [ i ++ ]		4674763	0					
ANR	4674949	Identifier	ver		4674763	0					
ANR	4674950	PostIncDecOperationExpression	i ++		4674763	1					
ANR	4674951	Identifier	i		4674763	0					
ANR	4674952	IncDec	++		4674763	1					
ANR	4674953	Identifier	ch		4674763	1					
ANR	4674954	IfStatement	if ( ch == '$' )		4674763	1					
ANR	4674955	Condition	ch == '$'	271:9:6755:6763	4674763	0	True				
ANR	4674956	EqualityExpression	ch == '$'		4674763	0		==			
ANR	4674957	Identifier	ch		4674763	0					
ANR	4674958	PrimaryExpression	'$'		4674763	1					
ANR	4674959	CompoundStatement		57:21:1331:1331	4674763	1					
ANR	4674960	ExpressionStatement	got_verstring = true	272:5:6774:6794	4674763	0	True				
ANR	4674961	AssignmentExpression	got_verstring = true		4674763	0		=			
ANR	4674962	Identifier	got_verstring		4674763	0					
ANR	4674963	Identifier	true		4674763	1					
ANR	4674964	ExpressionStatement	ver [ i ] = '\\0'	273:5:6801:6814	4674763	1	True				
ANR	4674965	AssignmentExpression	ver [ i ] = '\\0'		4674763	0		=			
ANR	4674966	ArrayIndexing	ver [ i ]		4674763	0					
ANR	4674967	Identifier	ver		4674763	0					
ANR	4674968	Identifier	i		4674763	1					
ANR	4674969	PrimaryExpression	'\\0'		4674763	1					
ANR	4674970	BreakStatement	break ;	274:5:6821:6826	4674763	2	True				
ANR	4674971	Condition	( i < maxlen ) && ( ( ch = fgetc ( fp ) ) != EOF )	276:13:6847:6885	4674763	1	True				
ANR	4674972	AndExpression	( i < maxlen ) && ( ( ch = fgetc ( fp ) ) != EOF )		4674763	0		&&			
ANR	4674973	RelationalExpression	i < maxlen		4674763	0		<			
ANR	4674974	Identifier	i		4674763	0					
ANR	4674975	Identifier	maxlen		4674763	1					
ANR	4674976	EqualityExpression	( ch = fgetc ( fp ) ) != EOF		4674763	1		!=			
ANR	4674977	AssignmentExpression	ch = fgetc ( fp )		4674763	0		=			
ANR	4674978	Identifier	ch		4674763	0					
ANR	4674979	CallExpression	fgetc ( fp )		4674763	1					
ANR	4674980	Callee	fgetc		4674763	0					
ANR	4674981	Identifier	fgetc		4674763	0					
ANR	4674982	ArgumentList	fp		4674763	1					
ANR	4674983	Argument	fp		4674763	0					
ANR	4674984	Identifier	fp		4674763	0					
ANR	4674985	Identifier	EOF		4674763	1					
ANR	4674986	BreakStatement	break ;	277:3:6893:6898	4674763	1	True				
ANR	4674987	IfStatement	if ( ch != verprefix [ i ] )		4674763	1					
ANR	4674988	Condition	ch != verprefix [ i ]	280:7:6912:6929	4674763	0	True				
ANR	4674989	EqualityExpression	ch != verprefix [ i ]		4674763	0		!=			
ANR	4674990	Identifier	ch		4674763	0					
ANR	4674991	ArrayIndexing	verprefix [ i ]		4674763	1					
ANR	4674992	Identifier	verprefix		4674763	0					
ANR	4674993	Identifier	i		4674763	1					
ANR	4674994	CompoundStatement		66:28:1497:1497	4674763	1					
ANR	4674995	ExpressionStatement	i = 0	281:3:6938:6943	4674763	0	True				
ANR	4674996	AssignmentExpression	i = 0		4674763	0		=			
ANR	4674997	Identifier	i		4674763	0					
ANR	4674998	PrimaryExpression	0		4674763	1					
ANR	4674999	IfStatement	if ( ch != verprefix [ 0 ] )		4674763	1					
ANR	4675000	Condition	ch != verprefix [ 0 ]	282:8:6953:6970	4674763	0	True				
ANR	4675001	EqualityExpression	ch != verprefix [ 0 ]		4674763	0		!=			
ANR	4675002	Identifier	ch		4674763	0					
ANR	4675003	ArrayIndexing	verprefix [ 0 ]		4674763	1					
ANR	4675004	Identifier	verprefix		4674763	0					
ANR	4675005	PrimaryExpression	0		4674763	1					
ANR	4675006	CompoundStatement		68:29:1538:1538	4674763	1					
ANR	4675007	ContinueStatement	continue ;	283:4:6980:6988	4674763	0	True				
ANR	4675008	ExpressionStatement	ver [ i ++ ] = ch	287:2:7002:7015	4674763	2	True				
ANR	4675009	AssignmentExpression	ver [ i ++ ] = ch		4674763	0		=			
ANR	4675010	ArrayIndexing	ver [ i ++ ]		4674763	0					
ANR	4675011	Identifier	ver		4674763	0					
ANR	4675012	PostIncDecOperationExpression	i ++		4674763	1					
ANR	4675013	Identifier	i		4674763	0					
ANR	4675014	IncDec	++		4674763	1					
ANR	4675015	Identifier	ch		4674763	1					
ANR	4675016	ExpressionStatement	fclose ( fp )	290:1:7022:7032	4674763	15	True				
ANR	4675017	CallExpression	fclose ( fp )		4674763	0					
ANR	4675018	Callee	fclose		4674763	0					
ANR	4675019	Identifier	fclose		4674763	0					
ANR	4675020	ArgumentList	fp		4674763	1					
ANR	4675021	Argument	fp		4674763	0					
ANR	4675022	Identifier	fp		4674763	0					
ANR	4675023	IfStatement	if ( got_verstring )		4674763	16					
ANR	4675024	Condition	got_verstring	292:6:7041:7053	4674763	0	True				
ANR	4675025	Identifier	got_verstring		4674763	0					
ANR	4675026	CompoundStatement		78:22:1621:1621	4674763	1					
ANR	4675027	ReturnStatement	return ver ;	293:2:7061:7071	4674763	0	True				
ANR	4675028	Identifier	ver		4674763	0					
ANR	4675029	ElseStatement	else		4674763	0					
ANR	4675030	CompoundStatement		80:8:1645:1645	4674763	0					
ANR	4675031	IfStatement	if ( must_free )		4674763	0					
ANR	4675032	Condition	must_free	296:7:7113:7121	4674763	0	True				
ANR	4675033	Identifier	must_free		4674763	0					
ANR	4675034	CompoundStatement		82:19:1689:1689	4674763	1					
ANR	4675035	ExpressionStatement	free ( ver )	297:3:7130:7141	4674763	0	True				
ANR	4675036	CallExpression	free ( ver )		4674763	0					
ANR	4675037	Callee	free		4674763	0					
ANR	4675038	Identifier	free		4674763	0					
ANR	4675039	ArgumentList	ver		4674763	1					
ANR	4675040	Argument	ver		4674763	0					
ANR	4675041	Identifier	ver		4674763	0					
ANR	4675042	ReturnStatement	return NULL ;	299:2:7149:7160	4674763	1	True				
ANR	4675043	Identifier	NULL		4674763	0					
ANR	4675044	ReturnType	char *		4674763	1					
ANR	4675045	Identifier	CondorVersionInfo :: get_version_from_file		4674763	2					
ANR	4675046	ParameterList	"const char * filename , char * ver , int maxlen"		4674763	3					
ANR	4675047	Parameter	const char * filename	213:41:5378:5397	4674763	0	True				
ANR	4675048	ParameterType	const char *		4674763	0					
ANR	4675049	Identifier	filename		4674763	1					
ANR	4675050	Parameter	char * ver	214:11:5412:5420	4674763	1	True				
ANR	4675051	ParameterType	char *		4674763	0					
ANR	4675052	Identifier	ver		4674763	1					
ANR	4675053	Parameter	int maxlen	214:22:5423:5432	4674763	2	True				
ANR	4675054	ParameterType	int		4674763	0					
ANR	4675055	Identifier	maxlen		4674763	1					
ANR	4675056	CFGEntryNode	ENTRY		4674763		True				
ANR	4675057	CFGExitNode	EXIT		4674763		True				
ANR	4675058	Symbol	malloc		4674763						
ANR	4675059	Symbol	ver		4674763						
ANR	4675060	Symbol	NULL		4674763						
ANR	4675061	Symbol	ch		4674763						
ANR	4675062	Symbol	alternate_exec_pathname		4674763						
ANR	4675063	Symbol	false		4674763						
ANR	4675064	Symbol	altname		4674763						
ANR	4675065	Symbol	i		4674763						
ANR	4675066	Symbol	verprefix		4674763						
ANR	4675067	Symbol	fp		4674763						
ANR	4675068	Symbol	* ver		4674763						
ANR	4675069	Symbol	* verprefix		4674763						
ANR	4675070	Symbol	filename		4674763						
ANR	4675071	Symbol	* i		4674763						
ANR	4675072	Symbol	must_free		4674763						
ANR	4675073	Symbol	readonly		4674763						
ANR	4675074	Symbol	true		4674763						
ANR	4675075	Symbol	got_verstring		4674763						
ANR	4675076	Symbol	safe_fopen_wrapper_follow		4674763						
ANR	4675077	Symbol	EOF		4674763						
ANR	4675078	Symbol	maxlen		4674763						
ANR	4675079	Symbol	fgetc		4674763						
ANR	4675080	Function	CondorVersionInfo :: get_platform_from_file	303:0:7168:8676							
ANR	4675081	FunctionDef	"CondorVersionInfo :: get_platform_from_file (const char * filename , char * platform , int maxlen)"		4675080	0					
ANR	4675082	CompoundStatement		306:0:7279:8676	4675080	0					
ANR	4675083	IdentifierDeclStatement	bool must_free = false ;	307:1:7282:7304	4675080	0	True				
ANR	4675084	IdentifierDecl	must_free = false		4675080	0					
ANR	4675085	IdentifierDeclType	bool		4675080	0					
ANR	4675086	Identifier	must_free		4675080	1					
ANR	4675087	AssignmentExpression	must_free = false		4675080	2		=			
ANR	4675088	Identifier	false		4675080	0					
ANR	4675089	Identifier	false		4675080	1					
ANR	4675090	IfStatement	if ( ! filename )		4675080	1					
ANR	4675091	Condition	! filename	309:5:7312:7320	4675080	0	True				
ANR	4675092	UnaryOperationExpression	! filename		4675080	0					
ANR	4675093	UnaryOperator	!		4675080	0					
ANR	4675094	Identifier	filename		4675080	1					
ANR	4675095	ReturnStatement	return NULL ;	310:2:7325:7336	4675080	1	True				
ANR	4675096	Identifier	NULL		4675080	0					
ANR	4675097	IfStatement	if ( platform && maxlen < 40 )		4675080	2					
ANR	4675098	Condition	platform && maxlen < 40	312:5:7345:7367	4675080	0	True				
ANR	4675099	AndExpression	platform && maxlen < 40		4675080	0		&&			
ANR	4675100	Identifier	platform		4675080	0					
ANR	4675101	RelationalExpression	maxlen < 40		4675080	1		<			
ANR	4675102	Identifier	maxlen		4675080	0					
ANR	4675103	PrimaryExpression	40		4675080	1					
ANR	4675104	ReturnStatement	return NULL ;	313:2:7373:7384	4675080	1	True				
ANR	4675105	Identifier	NULL		4675080	0					
ANR	4675106	ExpressionStatement	maxlen --	315:1:7388:7396	4675080	3	True				
ANR	4675107	PostIncDecOperationExpression	maxlen --		4675080	0					
ANR	4675108	Identifier	maxlen		4675080	0					
ANR	4675109	IncDec	--		4675080	1					
ANR	4675110	Statement	static	318:1:7460:7465	4675080	4	True				
ANR	4675111	IdentifierDeclStatement	"const char * readonly = ""rb"" ;"	318:8:7467:7494	4675080	5	True				
ANR	4675112	IdentifierDecl	"* readonly = ""rb"""		4675080	0					
ANR	4675113	IdentifierDeclType	const char *		4675080	0					
ANR	4675114	Identifier	readonly		4675080	1					
ANR	4675115	AssignmentExpression	"* readonly = ""rb"""		4675080	2		=			
ANR	4675116	Identifier	readonly		4675080	0					
ANR	4675117	PrimaryExpression	"""rb"""		4675080	1					
ANR	4675118	IdentifierDeclStatement	"FILE * fp = safe_fopen_wrapper_follow ( filename , readonly ) ;"	323:1:7573:7628	4675080	6	True				
ANR	4675119	IdentifierDecl	"* fp = safe_fopen_wrapper_follow ( filename , readonly )"		4675080	0					
ANR	4675120	IdentifierDeclType	FILE *		4675080	0					
ANR	4675121	Identifier	fp		4675080	1					
ANR	4675122	AssignmentExpression	"* fp = safe_fopen_wrapper_follow ( filename , readonly )"		4675080	2		=			
ANR	4675123	Identifier	fp		4675080	0					
ANR	4675124	CallExpression	"safe_fopen_wrapper_follow ( filename , readonly )"		4675080	1					
ANR	4675125	Callee	safe_fopen_wrapper_follow		4675080	0					
ANR	4675126	Identifier	safe_fopen_wrapper_follow		4675080	0					
ANR	4675127	ArgumentList	filename		4675080	1					
ANR	4675128	Argument	filename		4675080	0					
ANR	4675129	Identifier	filename		4675080	0					
ANR	4675130	Argument	readonly		4675080	1					
ANR	4675131	Identifier	readonly		4675080	0					
ANR	4675132	IfStatement	if ( ! fp )		4675080	7					
ANR	4675133	Condition	! fp	325:5:7636:7638	4675080	0	True				
ANR	4675134	UnaryOperationExpression	! fp		4675080	0					
ANR	4675135	UnaryOperator	!		4675080	0					
ANR	4675136	Identifier	fp		4675080	1					
ANR	4675137	CompoundStatement		22:2:414:465	4675080	1					
ANR	4675138	IdentifierDeclStatement	char * altname = alternate_exec_pathname ( filename ) ;	327:2:7694:7745	4675080	0	True				
ANR	4675139	IdentifierDecl	* altname = alternate_exec_pathname ( filename )		4675080	0					
ANR	4675140	IdentifierDeclType	char *		4675080	0					
ANR	4675141	Identifier	altname		4675080	1					
ANR	4675142	AssignmentExpression	* altname = alternate_exec_pathname ( filename )		4675080	2		=			
ANR	4675143	Identifier	altname		4675080	0					
ANR	4675144	CallExpression	alternate_exec_pathname ( filename )		4675080	1					
ANR	4675145	Callee	alternate_exec_pathname		4675080	0					
ANR	4675146	Identifier	alternate_exec_pathname		4675080	0					
ANR	4675147	ArgumentList	filename		4675080	1					
ANR	4675148	Argument	filename		4675080	0					
ANR	4675149	Identifier	filename		4675080	0					
ANR	4675150	IfStatement	if ( altname )		4675080	1					
ANR	4675151	Condition	altname	328:7:7754:7760	4675080	0	True				
ANR	4675152	Identifier	altname		4675080	0					
ANR	4675153	CompoundStatement		23:17:484:484	4675080	1					
ANR	4675154	ExpressionStatement	"fp = safe_fopen_wrapper_follow ( altname , readonly )"	329:3:7769:7817	4675080	0	True				
ANR	4675155	AssignmentExpression	"fp = safe_fopen_wrapper_follow ( altname , readonly )"		4675080	0		=			
ANR	4675156	Identifier	fp		4675080	0					
ANR	4675157	CallExpression	"safe_fopen_wrapper_follow ( altname , readonly )"		4675080	1					
ANR	4675158	Callee	safe_fopen_wrapper_follow		4675080	0					
ANR	4675159	Identifier	safe_fopen_wrapper_follow		4675080	0					
ANR	4675160	ArgumentList	altname		4675080	1					
ANR	4675161	Argument	altname		4675080	0					
ANR	4675162	Identifier	altname		4675080	0					
ANR	4675163	Argument	readonly		4675080	1					
ANR	4675164	Identifier	readonly		4675080	0					
ANR	4675165	ExpressionStatement	free ( altname )	330:3:7822:7835	4675080	1	True				
ANR	4675166	CallExpression	free ( altname )		4675080	0					
ANR	4675167	Callee	free		4675080	0					
ANR	4675168	Identifier	free		4675080	0					
ANR	4675169	ArgumentList	altname		4675080	1					
ANR	4675170	Argument	altname		4675080	0					
ANR	4675171	Identifier	altname		4675080	0					
ANR	4675172	IfStatement	if ( ! fp )		4675080	8					
ANR	4675173	Condition	! fp	334:6:7851:7853	4675080	0	True				
ANR	4675174	UnaryOperationExpression	! fp		4675080	0					
ANR	4675175	UnaryOperator	!		4675080	0					
ANR	4675176	Identifier	fp		4675080	1					
ANR	4675177	CompoundStatement		29:12:577:577	4675080	1					
ANR	4675178	ReturnStatement	return NULL ;	336:2:7881:7892	4675080	0	True				
ANR	4675179	Identifier	NULL		4675080	0					
ANR	4675180	IfStatement	if ( ! platform )		4675080	9					
ANR	4675181	Condition	! platform	339:5:7905:7913	4675080	0	True				
ANR	4675182	UnaryOperationExpression	! platform		4675080	0					
ANR	4675183	UnaryOperator	!		4675080	0					
ANR	4675184	Identifier	platform		4675080	1					
ANR	4675185	CompoundStatement		34:16:636:636	4675080	1					
ANR	4675186	IfStatement	if ( ! ( platform = ( char * ) malloc ( 100 ) ) )		4675080	0					
ANR	4675187	Condition	! ( platform = ( char * ) malloc ( 100 ) )	340:7:7925:7957	4675080	0	True				
ANR	4675188	UnaryOperationExpression	! ( platform = ( char * ) malloc ( 100 ) )		4675080	0					
ANR	4675189	UnaryOperator	!		4675080	0					
ANR	4675190	AssignmentExpression	platform = ( char * ) malloc ( 100 )		4675080	1		=			
ANR	4675191	Identifier	platform		4675080	0					
ANR	4675192	CastExpression	( char * ) malloc ( 100 )		4675080	1					
ANR	4675193	CastTarget	char *		4675080	0					
ANR	4675194	CallExpression	malloc ( 100 )		4675080	1					
ANR	4675195	Callee	malloc		4675080	0					
ANR	4675196	Identifier	malloc		4675080	0					
ANR	4675197	ArgumentList	100		4675080	1					
ANR	4675198	Argument	100		4675080	0					
ANR	4675199	PrimaryExpression	100		4675080	0					
ANR	4675200	CompoundStatement		35:43:681:681	4675080	1					
ANR	4675201	ExpressionStatement	fclose ( fp )	342:3:7986:7996	4675080	0	True				
ANR	4675202	CallExpression	fclose ( fp )		4675080	0					
ANR	4675203	Callee	fclose		4675080	0					
ANR	4675204	Identifier	fclose		4675080	0					
ANR	4675205	ArgumentList	fp		4675080	1					
ANR	4675206	Argument	fp		4675080	0					
ANR	4675207	Identifier	fp		4675080	0					
ANR	4675208	ReturnStatement	return NULL ;	343:3:8001:8012	4675080	1	True				
ANR	4675209	Identifier	NULL		4675080	0					
ANR	4675210	ExpressionStatement	must_free = true	345:2:8020:8036	4675080	1	True				
ANR	4675211	AssignmentExpression	must_free = true		4675080	0		=			
ANR	4675212	Identifier	must_free		4675080	0					
ANR	4675213	Identifier	true		4675080	1					
ANR	4675214	ExpressionStatement	maxlen = 100	346:2:8040:8052	4675080	2	True				
ANR	4675215	AssignmentExpression	maxlen = 100		4675080	0		=			
ANR	4675216	Identifier	maxlen		4675080	0					
ANR	4675217	PrimaryExpression	100		4675080	1					
ANR	4675218	IdentifierDeclStatement	int i = 0 ;	349:1:8059:8068	4675080	10	True				
ANR	4675219	IdentifierDecl	i = 0		4675080	0					
ANR	4675220	IdentifierDeclType	int		4675080	0					
ANR	4675221	Identifier	i		4675080	1					
ANR	4675222	AssignmentExpression	i = 0		4675080	2		=			
ANR	4675223	Identifier	i		4675080	0					
ANR	4675224	PrimaryExpression	0		4675080	1					
ANR	4675225	IdentifierDeclStatement	bool got_verstring = false ;	350:1:8071:8097	4675080	11	True				
ANR	4675226	IdentifierDecl	got_verstring = false		4675080	0					
ANR	4675227	IdentifierDeclType	bool		4675080	0					
ANR	4675228	Identifier	got_verstring		4675080	1					
ANR	4675229	AssignmentExpression	got_verstring = false		4675080	2		=			
ANR	4675230	Identifier	false		4675080	0					
ANR	4675231	Identifier	false		4675080	1					
ANR	4675232	IdentifierDeclStatement	const char * platprefix = CondorPlatform ( ) ;	351:1:8100:8141	4675080	12	True				
ANR	4675233	IdentifierDecl	* platprefix = CondorPlatform ( )		4675080	0					
ANR	4675234	IdentifierDeclType	const char *		4675080	0					
ANR	4675235	Identifier	platprefix		4675080	1					
ANR	4675236	AssignmentExpression	* platprefix = CondorPlatform ( )		4675080	2		=			
ANR	4675237	Identifier	platprefix		4675080	0					
ANR	4675238	CallExpression	CondorPlatform ( )		4675080	1					
ANR	4675239	Callee	CondorPlatform		4675080	0					
ANR	4675240	Identifier	CondorPlatform		4675080	0					
ANR	4675241	ArgumentList			4675080	1					
ANR	4675242	IdentifierDeclStatement	int ch ;	352:1:8144:8150	4675080	13	True				
ANR	4675243	IdentifierDecl	ch		4675080	0					
ANR	4675244	IdentifierDeclType	int		4675080	0					
ANR	4675245	Identifier	ch		4675080	1					
ANR	4675246	WhileStatement	while ( ( ch = fgetc ( fp ) ) != EOF )		4675080	14					
ANR	4675247	Condition	( ch = fgetc ( fp ) ) != EOF	353:8:8160:8180	4675080	0	True				
ANR	4675248	EqualityExpression	( ch = fgetc ( fp ) ) != EOF		4675080	0		!=			
ANR	4675249	AssignmentExpression	ch = fgetc ( fp )		4675080	0		=			
ANR	4675250	Identifier	ch		4675080	0					
ANR	4675251	CallExpression	fgetc ( fp )		4675080	1					
ANR	4675252	Callee	fgetc		4675080	0					
ANR	4675253	Identifier	fgetc		4675080	0					
ANR	4675254	ArgumentList	fp		4675080	1					
ANR	4675255	Argument	fp		4675080	0					
ANR	4675256	Identifier	fp		4675080	0					
ANR	4675257	Identifier	EOF		4675080	1					
ANR	4675258	CompoundStatement		48:32:904:904	4675080	1					
ANR	4675259	IfStatement	if ( ch != platprefix [ i ] )		4675080	0					
ANR	4675260	Condition	ch != platprefix [ i ]	354:7:8193:8211	4675080	0	True				
ANR	4675261	EqualityExpression	ch != platprefix [ i ]		4675080	0		!=			
ANR	4675262	Identifier	ch		4675080	0					
ANR	4675263	ArrayIndexing	platprefix [ i ]		4675080	1					
ANR	4675264	Identifier	platprefix		4675080	0					
ANR	4675265	Identifier	i		4675080	1					
ANR	4675266	CompoundStatement		49:29:935:935	4675080	1					
ANR	4675267	ExpressionStatement	i = 0	355:3:8220:8225	4675080	0	True				
ANR	4675268	AssignmentExpression	i = 0		4675080	0		=			
ANR	4675269	Identifier	i		4675080	0					
ANR	4675270	PrimaryExpression	0		4675080	1					
ANR	4675271	IfStatement	if ( ch != platprefix [ 0 ] )		4675080	1					
ANR	4675272	Condition	ch != platprefix [ 0 ]	356:8:8235:8253	4675080	0	True				
ANR	4675273	EqualityExpression	ch != platprefix [ 0 ]		4675080	0		!=			
ANR	4675274	Identifier	ch		4675080	0					
ANR	4675275	ArrayIndexing	platprefix [ 0 ]		4675080	1					
ANR	4675276	Identifier	platprefix		4675080	0					
ANR	4675277	PrimaryExpression	0		4675080	1					
ANR	4675278	CompoundStatement		51:30:977:977	4675080	1					
ANR	4675279	ContinueStatement	continue ;	357:4:8263:8271	4675080	0	True				
ANR	4675280	ExpressionStatement	platform [ i ++ ] = ch	361:2:8285:8303	4675080	1	True				
ANR	4675281	AssignmentExpression	platform [ i ++ ] = ch		4675080	0		=			
ANR	4675282	ArrayIndexing	platform [ i ++ ]		4675080	0					
ANR	4675283	Identifier	platform		4675080	0					
ANR	4675284	PostIncDecOperationExpression	i ++		4675080	1					
ANR	4675285	Identifier	i		4675080	0					
ANR	4675286	IncDec	++		4675080	1					
ANR	4675287	Identifier	ch		4675080	1					
ANR	4675288	IfStatement	if ( ch == ':' )		4675080	2					
ANR	4675289	Condition	ch == ':'	363:7:8313:8321	4675080	0	True				
ANR	4675290	EqualityExpression	ch == ':'		4675080	0		==			
ANR	4675291	Identifier	ch		4675080	0					
ANR	4675292	PrimaryExpression	':'		4675080	1					
ANR	4675293	CompoundStatement		58:19:1045:1045	4675080	1					
ANR	4675294	WhileStatement	while ( ( i < maxlen ) && ( ( ch = fgetc ( fp ) ) != EOF ) )		4675080	0					
ANR	4675295	Condition	( i < maxlen ) && ( ( ch = fgetc ( fp ) ) != EOF )	364:11:8338:8376	4675080	0	True				
ANR	4675296	AndExpression	( i < maxlen ) && ( ( ch = fgetc ( fp ) ) != EOF )		4675080	0		&&			
ANR	4675297	RelationalExpression	i < maxlen		4675080	0		<			
ANR	4675298	Identifier	i		4675080	0					
ANR	4675299	Identifier	maxlen		4675080	1					
ANR	4675300	EqualityExpression	( ch = fgetc ( fp ) ) != EOF		4675080	1		!=			
ANR	4675301	AssignmentExpression	ch = fgetc ( fp )		4675080	0		=			
ANR	4675302	Identifier	ch		4675080	0					
ANR	4675303	CallExpression	fgetc ( fp )		4675080	1					
ANR	4675304	Callee	fgetc		4675080	0					
ANR	4675305	Identifier	fgetc		4675080	0					
ANR	4675306	ArgumentList	fp		4675080	1					
ANR	4675307	Argument	fp		4675080	0					
ANR	4675308	Identifier	fp		4675080	0					
ANR	4675309	Identifier	EOF		4675080	1					
ANR	4675310	CompoundStatement		59:53:1100:1100	4675080	1					
ANR	4675311	ExpressionStatement	platform [ i ++ ] = ch	365:4:8386:8404	4675080	0	True				
ANR	4675312	AssignmentExpression	platform [ i ++ ] = ch		4675080	0		=			
ANR	4675313	ArrayIndexing	platform [ i ++ ]		4675080	0					
ANR	4675314	Identifier	platform		4675080	0					
ANR	4675315	PostIncDecOperationExpression	i ++		4675080	1					
ANR	4675316	Identifier	i		4675080	0					
ANR	4675317	IncDec	++		4675080	1					
ANR	4675318	Identifier	ch		4675080	1					
ANR	4675319	IfStatement	if ( ch == '$' )		4675080	1					
ANR	4675320	Condition	ch == '$'	366:9:8415:8423	4675080	0	True				
ANR	4675321	EqualityExpression	ch == '$'		4675080	0		==			
ANR	4675322	Identifier	ch		4675080	0					
ANR	4675323	PrimaryExpression	'$'		4675080	1					
ANR	4675324	CompoundStatement		61:21:1147:1147	4675080	1					
ANR	4675325	ExpressionStatement	got_verstring = true	367:5:8434:8454	4675080	0	True				
ANR	4675326	AssignmentExpression	got_verstring = true		4675080	0		=			
ANR	4675327	Identifier	got_verstring		4675080	0					
ANR	4675328	Identifier	true		4675080	1					
ANR	4675329	ExpressionStatement	platform [ i ] = '\\0'	368:5:8461:8479	4675080	1	True				
ANR	4675330	AssignmentExpression	platform [ i ] = '\\0'		4675080	0		=			
ANR	4675331	ArrayIndexing	platform [ i ]		4675080	0					
ANR	4675332	Identifier	platform		4675080	0					
ANR	4675333	Identifier	i		4675080	1					
ANR	4675334	PrimaryExpression	'\\0'		4675080	1					
ANR	4675335	BreakStatement	break ;	369:5:8486:8491	4675080	2	True				
ANR	4675336	BreakStatement	break ;	372:3:8507:8512	4675080	1	True				
ANR	4675337	ExpressionStatement	fclose ( fp )	376:1:8523:8533	4675080	15	True				
ANR	4675338	CallExpression	fclose ( fp )		4675080	0					
ANR	4675339	Callee	fclose		4675080	0					
ANR	4675340	Identifier	fclose		4675080	0					
ANR	4675341	ArgumentList	fp		4675080	1					
ANR	4675342	Argument	fp		4675080	0					
ANR	4675343	Identifier	fp		4675080	0					
ANR	4675344	IfStatement	if ( got_verstring )		4675080	16					
ANR	4675345	Condition	got_verstring	378:6:8542:8554	4675080	0	True				
ANR	4675346	Identifier	got_verstring		4675080	0					
ANR	4675347	CompoundStatement		73:22:1278:1278	4675080	1					
ANR	4675348	ReturnStatement	return platform ;	379:2:8562:8577	4675080	0	True				
ANR	4675349	Identifier	platform		4675080	0					
ANR	4675350	ElseStatement	else		4675080	0					
ANR	4675351	CompoundStatement		75:8:1307:1307	4675080	0					
ANR	4675352	IfStatement	if ( must_free )		4675080	0					
ANR	4675353	Condition	must_free	382:7:8619:8627	4675080	0	True				
ANR	4675354	Identifier	must_free		4675080	0					
ANR	4675355	CompoundStatement		77:19:1351:1351	4675080	1					
ANR	4675356	ExpressionStatement	free ( platform )	383:3:8636:8652	4675080	0	True				
ANR	4675357	CallExpression	free ( platform )		4675080	0					
ANR	4675358	Callee	free		4675080	0					
ANR	4675359	Identifier	free		4675080	0					
ANR	4675360	ArgumentList	platform		4675080	1					
ANR	4675361	Argument	platform		4675080	0					
ANR	4675362	Identifier	platform		4675080	0					
ANR	4675363	ReturnStatement	return NULL ;	385:2:8660:8671	4675080	1	True				
ANR	4675364	Identifier	NULL		4675080	0					
ANR	4675365	ReturnType	char *		4675080	1					
ANR	4675366	Identifier	CondorVersionInfo :: get_platform_from_file		4675080	2					
ANR	4675367	ParameterList	"const char * filename , char * platform , int maxlen"		4675080	3					
ANR	4675368	Parameter	const char * filename	304:42:7217:7236	4675080	0	True				
ANR	4675369	ParameterType	const char *		4675080	0					
ANR	4675370	Identifier	filename		4675080	1					
ANR	4675371	Parameter	char * platform	305:11:7251:7264	4675080	1	True				
ANR	4675372	ParameterType	char *		4675080	0					
ANR	4675373	Identifier	platform		4675080	1					
ANR	4675374	Parameter	int maxlen	305:27:7267:7276	4675080	2	True				
ANR	4675375	ParameterType	int		4675080	0					
ANR	4675376	Identifier	maxlen		4675080	1					
ANR	4675377	CFGEntryNode	ENTRY		4675080		True				
ANR	4675378	CFGExitNode	EXIT		4675080		True				
ANR	4675379	Symbol	malloc		4675080						
ANR	4675380	Symbol	* platprefix		4675080						
ANR	4675381	Symbol	NULL		4675080						
ANR	4675382	Symbol	ch		4675080						
ANR	4675383	Symbol	alternate_exec_pathname		4675080						
ANR	4675384	Symbol	false		4675080						
ANR	4675385	Symbol	altname		4675080						
ANR	4675386	Symbol	i		4675080						
ANR	4675387	Symbol	fp		4675080						
ANR	4675388	Symbol	platform		4675080						
ANR	4675389	Symbol	filename		4675080						
ANR	4675390	Symbol	* i		4675080						
ANR	4675391	Symbol	must_free		4675080						
ANR	4675392	Symbol	readonly		4675080						
ANR	4675393	Symbol	CondorPlatform		4675080						
ANR	4675394	Symbol	true		4675080						
ANR	4675395	Symbol	platprefix		4675080						
ANR	4675396	Symbol	got_verstring		4675080						
ANR	4675397	Symbol	safe_fopen_wrapper_follow		4675080						
ANR	4675398	Symbol	EOF		4675080						
ANR	4675399	Symbol	maxlen		4675080						
ANR	4675400	Symbol	fgetc		4675080						
ANR	4675401	Symbol	* platform		4675080						
ANR	4675402	Function	CondorVersionInfo :: get_version_string	389:0:8679:8778							
ANR	4675403	FunctionDef	CondorVersionInfo :: get_version_string ()		4675402	0					
ANR	4675404	CompoundStatement		391:0:8732:8778	4675402	0					
ANR	4675405	ReturnStatement	return VersionData_to_string ( myversion ) ;	392:1:8735:8776	4675402	0	True				
ANR	4675406	CallExpression	VersionData_to_string ( myversion )		4675402	0					
ANR	4675407	Callee	VersionData_to_string		4675402	0					
ANR	4675408	Identifier	VersionData_to_string		4675402	0					
ANR	4675409	ArgumentList	myversion		4675402	1					
ANR	4675410	Argument	myversion		4675402	0					
ANR	4675411	Identifier	myversion		4675402	0					
ANR	4675412	ReturnType	char *		4675402	1					
ANR	4675413	Identifier	CondorVersionInfo :: get_version_string		4675402	2					
ANR	4675414	ParameterList			4675402	3					
ANR	4675415	CFGEntryNode	ENTRY		4675402		True				
ANR	4675416	CFGExitNode	EXIT		4675402		True				
ANR	4675417	Symbol	myversion		4675402						
ANR	4675418	Symbol	VersionData_to_string		4675402						
ANR	4675419	Function	CondorVersionInfo :: VersionData_to_string	395:0:8781:9379							
ANR	4675420	FunctionDef	CondorVersionInfo :: VersionData_to_string (VersionData_t const & ver)		4675419	0					
ANR	4675421	CompoundStatement		397:0:8861:9379	4675419	0					
ANR	4675422	IdentifierDeclStatement	struct tm * tm ;	398:1:8864:8877	4675419	0	True				
ANR	4675423	IdentifierDecl	* tm		4675419	0					
ANR	4675424	IdentifierDeclType	struct tm *		4675419	0					
ANR	4675425	Identifier	tm		4675419	1					
ANR	4675426	ExpressionStatement	tm = localtime ( & ver . BuildDate )	399:1:8880:8912	4675419	1	True				
ANR	4675427	AssignmentExpression	tm = localtime ( & ver . BuildDate )		4675419	0		=			
ANR	4675428	Identifier	tm		4675419	0					
ANR	4675429	CallExpression	localtime ( & ver . BuildDate )		4675419	1					
ANR	4675430	Callee	localtime		4675419	0					
ANR	4675431	Identifier	localtime		4675419	0					
ANR	4675432	ArgumentList	& ver . BuildDate		4675419	1					
ANR	4675433	Argument	& ver . BuildDate		4675419	0					
ANR	4675434	UnaryOperationExpression	& ver . BuildDate		4675419	0					
ANR	4675435	UnaryOperator	&		4675419	0					
ANR	4675436	MemberAccess	ver . BuildDate		4675419	1					
ANR	4675437	Identifier	ver		4675419	0					
ANR	4675438	Identifier	BuildDate		4675419	1					
ANR	4675439	IfStatement	if ( ! tm )		4675419	2					
ANR	4675440	Condition	! tm	400:5:8919:8921	4675419	0	True				
ANR	4675441	UnaryOperationExpression	! tm		4675419	0					
ANR	4675442	UnaryOperator	!		4675419	0					
ANR	4675443	Identifier	tm		4675419	1					
ANR	4675444	CompoundStatement		4:11:63:63	4675419	1					
ANR	4675445	ReturnStatement	return NULL ;	401:2:8929:8940	4675419	0	True				
ANR	4675446	Identifier	NULL		4675419	0					
ANR	4675447	IdentifierDeclStatement	int day = tm -> tm_mday ;	403:1:8946:8967	4675419	3	True				
ANR	4675448	IdentifierDecl	day = tm -> tm_mday		4675419	0					
ANR	4675449	IdentifierDeclType	int		4675419	0					
ANR	4675450	Identifier	day		4675419	1					
ANR	4675451	AssignmentExpression	day = tm -> tm_mday		4675419	2		=			
ANR	4675452	Identifier	day		4675419	0					
ANR	4675453	PtrMemberAccess	tm -> tm_mday		4675419	1					
ANR	4675454	Identifier	tm		4675419	0					
ANR	4675455	Identifier	tm_mday		4675419	1					
ANR	4675456	IdentifierDeclStatement	int year = tm -> tm_year + 1900 ;	404:1:8970:8999	4675419	4	True				
ANR	4675457	IdentifierDecl	year = tm -> tm_year + 1900		4675419	0					
ANR	4675458	IdentifierDeclType	int		4675419	0					
ANR	4675459	Identifier	year		4675419	1					
ANR	4675460	AssignmentExpression	year = tm -> tm_year + 1900		4675419	2		=			
ANR	4675461	Identifier	year		4675419	0					
ANR	4675462	AdditiveExpression	tm -> tm_year + 1900		4675419	1		+			
ANR	4675463	PtrMemberAccess	tm -> tm_year		4675419	0					
ANR	4675464	Identifier	tm		4675419	0					
ANR	4675465	Identifier	tm_year		4675419	1					
ANR	4675466	PrimaryExpression	1900		4675419	1					
ANR	4675467	IdentifierDeclStatement	char const * month = monthNames [ tm -> tm_mon ] ;	405:1:9002:9044	4675419	5	True				
ANR	4675468	IdentifierDecl	* month = monthNames [ tm -> tm_mon ]		4675419	0					
ANR	4675469	IdentifierDeclType	char const *		4675419	0					
ANR	4675470	Identifier	month		4675419	1					
ANR	4675471	AssignmentExpression	* month = monthNames [ tm -> tm_mon ]		4675419	2		=			
ANR	4675472	Identifier	month		4675419	0					
ANR	4675473	ArrayIndexing	monthNames [ tm -> tm_mon ]		4675419	1					
ANR	4675474	Identifier	monthNames		4675419	0					
ANR	4675475	PtrMemberAccess	tm -> tm_mon		4675419	1					
ANR	4675476	Identifier	tm		4675419	0					
ANR	4675477	Identifier	tm_mon		4675419	1					
ANR	4675478	IdentifierDeclStatement	const int buflen = 256 ;	407:1:9048:9070	4675419	6	True				
ANR	4675479	IdentifierDecl	buflen = 256		4675419	0					
ANR	4675480	IdentifierDeclType	const int		4675419	0					
ANR	4675481	Identifier	buflen		4675419	1					
ANR	4675482	AssignmentExpression	buflen = 256		4675419	2		=			
ANR	4675483	Identifier	buflen		4675419	0					
ANR	4675484	PrimaryExpression	256		4675419	1					
ANR	4675485	IdentifierDeclStatement	char * buf = ( char * ) malloc ( buflen ) ;	408:1:9073:9107	4675419	7	True				
ANR	4675486	IdentifierDecl	* buf = ( char * ) malloc ( buflen )		4675419	0					
ANR	4675487	IdentifierDeclType	char *		4675419	0					
ANR	4675488	Identifier	buf		4675419	1					
ANR	4675489	AssignmentExpression	* buf = ( char * ) malloc ( buflen )		4675419	2		=			
ANR	4675490	Identifier	buf		4675419	0					
ANR	4675491	CastExpression	( char * ) malloc ( buflen )		4675419	1					
ANR	4675492	CastTarget	char *		4675419	0					
ANR	4675493	CallExpression	malloc ( buflen )		4675419	1					
ANR	4675494	Callee	malloc		4675419	0					
ANR	4675495	Identifier	malloc		4675419	0					
ANR	4675496	ArgumentList	buflen		4675419	1					
ANR	4675497	Argument	buflen		4675419	0					
ANR	4675498	Identifier	buflen		4675419	0					
ANR	4675499	IfStatement	if ( ! buf )		4675419	8					
ANR	4675500	Condition	! buf	409:5:9114:9117	4675419	0	True				
ANR	4675501	UnaryOperationExpression	! buf		4675419	0					
ANR	4675502	UnaryOperator	!		4675419	0					
ANR	4675503	Identifier	buf		4675419	1					
ANR	4675504	CompoundStatement		13:12:259:259	4675419	1					
ANR	4675505	ReturnStatement	return NULL ;	410:2:9125:9136	4675419	0	True				
ANR	4675506	Identifier	NULL		4675419	0					
ANR	4675507	IdentifierDeclStatement	"int n = snprintf ( buf , buflen , ""$CondorVersion: %d.%d.%d %s %d %d $"" , ver . MajorVer , ver . MinorVer , ver . SubMinorVer , month , day , year ) ;"	413:1:9143:9284	4675419	9	True				
ANR	4675508	IdentifierDecl	"n = snprintf ( buf , buflen , ""$CondorVersion: %d.%d.%d %s %d %d $"" , ver . MajorVer , ver . MinorVer , ver . SubMinorVer , month , day , year )"		4675419	0					
ANR	4675509	IdentifierDeclType	int		4675419	0					
ANR	4675510	Identifier	n		4675419	1					
ANR	4675511	AssignmentExpression	"n = snprintf ( buf , buflen , ""$CondorVersion: %d.%d.%d %s %d %d $"" , ver . MajorVer , ver . MinorVer , ver . SubMinorVer , month , day , year )"		4675419	2		=			
ANR	4675512	Identifier	n		4675419	0					
ANR	4675513	CallExpression	"snprintf ( buf , buflen , ""$CondorVersion: %d.%d.%d %s %d %d $"" , ver . MajorVer , ver . MinorVer , ver . SubMinorVer , month , day , year )"		4675419	1					
ANR	4675514	Callee	snprintf		4675419	0					
ANR	4675515	Identifier	snprintf		4675419	0					
ANR	4675516	ArgumentList	buf		4675419	1					
ANR	4675517	Argument	buf		4675419	0					
ANR	4675518	Identifier	buf		4675419	0					
ANR	4675519	Argument	buflen		4675419	1					
ANR	4675520	Identifier	buflen		4675419	0					
ANR	4675521	Argument	"""$CondorVersion: %d.%d.%d %s %d %d $"""		4675419	2					
ANR	4675522	PrimaryExpression	"""$CondorVersion: %d.%d.%d %s %d %d $"""		4675419	0					
ANR	4675523	Argument	ver . MajorVer		4675419	3					
ANR	4675524	MemberAccess	ver . MajorVer		4675419	0					
ANR	4675525	Identifier	ver		4675419	0					
ANR	4675526	Identifier	MajorVer		4675419	1					
ANR	4675527	Argument	ver . MinorVer		4675419	4					
ANR	4675528	MemberAccess	ver . MinorVer		4675419	0					
ANR	4675529	Identifier	ver		4675419	0					
ANR	4675530	Identifier	MinorVer		4675419	1					
ANR	4675531	Argument	ver . SubMinorVer		4675419	5					
ANR	4675532	MemberAccess	ver . SubMinorVer		4675419	0					
ANR	4675533	Identifier	ver		4675419	0					
ANR	4675534	Identifier	SubMinorVer		4675419	1					
ANR	4675535	Argument	month		4675419	6					
ANR	4675536	Identifier	month		4675419	0					
ANR	4675537	Argument	day		4675419	7					
ANR	4675538	Identifier	day		4675419	0					
ANR	4675539	Argument	year		4675419	8					
ANR	4675540	Identifier	year		4675419	0					
ANR	4675541	IfStatement	if ( n >= buflen || n < 0 )		4675419	10					
ANR	4675542	Condition	n >= buflen || n < 0	416:5:9291:9306	4675419	0	True				
ANR	4675543	OrExpression	n >= buflen || n < 0		4675419	0		||			
ANR	4675544	RelationalExpression	n >= buflen		4675419	0		>=			
ANR	4675545	Identifier	n		4675419	0					
ANR	4675546	Identifier	buflen		4675419	1					
ANR	4675547	RelationalExpression	n < 0		4675419	1		<			
ANR	4675548	Identifier	n		4675419	0					
ANR	4675549	PrimaryExpression	0		4675419	1					
ANR	4675550	CompoundStatement		20:24:448:448	4675419	1					
ANR	4675551	ExpressionStatement	free ( buf )	417:2:9314:9323	4675419	0	True				
ANR	4675552	CallExpression	free ( buf )		4675419	0					
ANR	4675553	Callee	free		4675419	0					
ANR	4675554	Identifier	free		4675419	0					
ANR	4675555	ArgumentList	buf		4675419	1					
ANR	4675556	Argument	buf		4675419	0					
ANR	4675557	Identifier	buf		4675419	0					
ANR	4675558	ReturnStatement	return NULL ;	418:2:9327:9338	4675419	1	True				
ANR	4675559	Identifier	NULL		4675419	0					
ANR	4675560	ExpressionStatement	buf [ buflen - 1 ] = '\\0'	420:1:9344:9364	4675419	11	True				
ANR	4675561	AssignmentExpression	buf [ buflen - 1 ] = '\\0'		4675419	0		=			
ANR	4675562	ArrayIndexing	buf [ buflen - 1 ]		4675419	0					
ANR	4675563	Identifier	buf		4675419	0					
ANR	4675564	AdditiveExpression	buflen - 1		4675419	1		-			
ANR	4675565	Identifier	buflen		4675419	0					
ANR	4675566	PrimaryExpression	1		4675419	1					
ANR	4675567	PrimaryExpression	'\\0'		4675419	1					
ANR	4675568	ReturnStatement	return buf ;	421:1:9367:9377	4675419	12	True				
ANR	4675569	Identifier	buf		4675419	0					
ANR	4675570	ReturnType	char *		4675419	1					
ANR	4675571	Identifier	CondorVersionInfo :: VersionData_to_string		4675419	2					
ANR	4675572	ParameterList	VersionData_t const & ver		4675419	3					
ANR	4675573	Parameter	VersionData_t const & ver	396:41:8829:8852	4675419	0	True				
ANR	4675574	ParameterType	VersionData_t const &		4675419	0					
ANR	4675575	Identifier	ver		4675419	1					
ANR	4675576	CFGEntryNode	ENTRY		4675419		True				
ANR	4675577	CFGExitNode	EXIT		4675419		True				
ANR	4675578	Symbol	localtime		4675419						
ANR	4675579	Symbol	year		4675419						
ANR	4675580	Symbol	& ver		4675419						
ANR	4675581	Symbol	ver . MinorVer		4675419						
ANR	4675582	Symbol	ver . MajorVer		4675419						
ANR	4675583	Symbol	tm -> tm_mday		4675419						
ANR	4675584	Symbol	buflen		4675419						
ANR	4675585	Symbol	tm -> tm_year		4675419						
ANR	4675586	Symbol	day		4675419						
ANR	4675587	Symbol	monthNames		4675419						
ANR	4675588	Symbol	snprintf		4675419						
ANR	4675589	Symbol	& ver . BuildDate		4675419						
ANR	4675590	Symbol	ver . SubMinorVer		4675419						
ANR	4675591	Symbol	malloc		4675419						
ANR	4675592	Symbol	ver		4675419						
ANR	4675593	Symbol	* buf		4675419						
ANR	4675594	Symbol	NULL		4675419						
ANR	4675595	Symbol	* tm -> tm_mon		4675419						
ANR	4675596	Symbol	* * tm		4675419						
ANR	4675597	Symbol	* buflen		4675419						
ANR	4675598	Symbol	tm -> tm_mon		4675419						
ANR	4675599	Symbol	n		4675419						
ANR	4675600	Symbol	* monthNames		4675419						
ANR	4675601	Symbol	buf		4675419						
ANR	4675602	Symbol	month		4675419						
ANR	4675603	Symbol	tm		4675419						
ANR	4675604	Symbol	* tm		4675419						
ANR	4675605	Function	CondorVersionInfo :: string_to_VersionData	424:0:9382:11136							
ANR	4675606	FunctionDef	"CondorVersionInfo :: string_to_VersionData (const char * verstring , VersionData_t & ver)"		4675605	0					
ANR	4675607	CompoundStatement		427:0:9490:11136	4675605	0					
ANR	4675608	IfStatement	if ( ! verstring )		4675605	0					
ANR	4675609	Condition	! verstring	430:6:9563:9572	4675605	0	True				
ANR	4675610	UnaryOperationExpression	! verstring		4675605	0					
ANR	4675611	UnaryOperator	!		4675605	0					
ANR	4675612	Identifier	verstring		4675605	1					
ANR	4675613	CompoundStatement		4:19:85:85	4675605	1					
ANR	4675614	ExpressionStatement	ver = myversion	432:2:9614:9629	4675605	0	True				
ANR	4675615	AssignmentExpression	ver = myversion		4675605	0		=			
ANR	4675616	Identifier	ver		4675605	0					
ANR	4675617	Identifier	myversion		4675605	1					
ANR	4675618	ReturnStatement	return true ;	433:2:9633:9644	4675605	1	True				
ANR	4675619	Identifier	true		4675605	0					
ANR	4675620	IfStatement	"if ( strncmp ( verstring , ""$CondorVersion: "" , 16 ) != 0 )"		4675605	1					
ANR	4675621	Condition	"strncmp ( verstring , ""$CondorVersion: "" , 16 ) != 0"	436:6:9656:9700	4675605	0	True				
ANR	4675622	EqualityExpression	"strncmp ( verstring , ""$CondorVersion: "" , 16 ) != 0"		4675605	0		!=			
ANR	4675623	CallExpression	"strncmp ( verstring , ""$CondorVersion: "" , 16 )"		4675605	0					
ANR	4675624	Callee	strncmp		4675605	0					
ANR	4675625	Identifier	strncmp		4675605	0					
ANR	4675626	ArgumentList	verstring		4675605	1					
ANR	4675627	Argument	verstring		4675605	0					
ANR	4675628	Identifier	verstring		4675605	0					
ANR	4675629	Argument	"""$CondorVersion: """		4675605	1					
ANR	4675630	PrimaryExpression	"""$CondorVersion: """		4675605	0					
ANR	4675631	Argument	16		4675605	2					
ANR	4675632	PrimaryExpression	16		4675605	0					
ANR	4675633	PrimaryExpression	0		4675605	1					
ANR	4675634	CompoundStatement		10:54:213:213	4675605	1					
ANR	4675635	ReturnStatement	return false ;	437:2:9708:9720	4675605	0	True				
ANR	4675636	Identifier	false		4675605	0					
ANR	4675637	IdentifierDeclStatement	"char const * ptr = strchr ( verstring , ' ' ) ;"	440:1:9727:9766	4675605	2	True				
ANR	4675638	IdentifierDecl	"* ptr = strchr ( verstring , ' ' )"		4675605	0					
ANR	4675639	IdentifierDeclType	char const *		4675605	0					
ANR	4675640	Identifier	ptr		4675605	1					
ANR	4675641	AssignmentExpression	"* ptr = strchr ( verstring , ' ' )"		4675605	2		=			
ANR	4675642	Identifier	ptr		4675605	0					
ANR	4675643	CallExpression	"strchr ( verstring , ' ' )"		4675605	1					
ANR	4675644	Callee	strchr		4675605	0					
ANR	4675645	Identifier	strchr		4675605	0					
ANR	4675646	ArgumentList	verstring		4675605	1					
ANR	4675647	Argument	verstring		4675605	0					
ANR	4675648	Identifier	verstring		4675605	0					
ANR	4675649	Argument	' '		4675605	1					
ANR	4675650	PrimaryExpression	' '		4675605	0					
ANR	4675651	ExpressionStatement	ptr ++	441:1:9769:9774	4675605	3	True				
ANR	4675652	PostIncDecOperationExpression	ptr ++		4675605	0					
ANR	4675653	Identifier	ptr		4675605	0					
ANR	4675654	IncDec	++		4675605	1					
ANR	4675655	ExpressionStatement	"sscanf ( ptr , ""%d.%d.%d "" , & ver . MajorVer , & ver . MinorVer , & ver . SubMinorVer )"	443:1:9809:9877	4675605	4	True				
ANR	4675656	CallExpression	"sscanf ( ptr , ""%d.%d.%d "" , & ver . MajorVer , & ver . MinorVer , & ver . SubMinorVer )"		4675605	0					
ANR	4675657	Callee	sscanf		4675605	0					
ANR	4675658	Identifier	sscanf		4675605	0					
ANR	4675659	ArgumentList	ptr		4675605	1					
ANR	4675660	Argument	ptr		4675605	0					
ANR	4675661	Identifier	ptr		4675605	0					
ANR	4675662	Argument	"""%d.%d.%d """		4675605	1					
ANR	4675663	PrimaryExpression	"""%d.%d.%d """		4675605	0					
ANR	4675664	Argument	& ver . MajorVer		4675605	2					
ANR	4675665	UnaryOperationExpression	& ver . MajorVer		4675605	0					
ANR	4675666	UnaryOperator	&		4675605	0					
ANR	4675667	MemberAccess	ver . MajorVer		4675605	1					
ANR	4675668	Identifier	ver		4675605	0					
ANR	4675669	Identifier	MajorVer		4675605	1					
ANR	4675670	Argument	& ver . MinorVer		4675605	3					
ANR	4675671	UnaryOperationExpression	& ver . MinorVer		4675605	0					
ANR	4675672	UnaryOperator	&		4675605	0					
ANR	4675673	MemberAccess	ver . MinorVer		4675605	1					
ANR	4675674	Identifier	ver		4675605	0					
ANR	4675675	Identifier	MinorVer		4675605	1					
ANR	4675676	Argument	& ver . SubMinorVer		4675605	4					
ANR	4675677	UnaryOperationExpression	& ver . SubMinorVer		4675605	0					
ANR	4675678	UnaryOperator	&		4675605	0					
ANR	4675679	MemberAccess	ver . SubMinorVer		4675605	1					
ANR	4675680	Identifier	ver		4675605	0					
ANR	4675681	Identifier	SubMinorVer		4675605	1					
ANR	4675682	IfStatement	if ( ver . MajorVer < 6 || ver . MinorVer > 99 || ver . SubMinorVer > 99 )		4675605	5					
ANR	4675683	Condition	ver . MajorVer < 6 || ver . MinorVer > 99 || ver . SubMinorVer > 99	446:5:9938:9999	4675605	0	True				
ANR	4675684	OrExpression	ver . MajorVer < 6 || ver . MinorVer > 99 || ver . SubMinorVer > 99		4675605	0		||			
ANR	4675685	RelationalExpression	ver . MajorVer < 6		4675605	0		<			
ANR	4675686	MemberAccess	ver . MajorVer		4675605	0					
ANR	4675687	Identifier	ver		4675605	0					
ANR	4675688	Identifier	MajorVer		4675605	1					
ANR	4675689	PrimaryExpression	6		4675605	1					
ANR	4675690	OrExpression	ver . MinorVer > 99 || ver . SubMinorVer > 99		4675605	1		||			
ANR	4675691	RelationalExpression	ver . MinorVer > 99		4675605	0		>			
ANR	4675692	MemberAccess	ver . MinorVer		4675605	0					
ANR	4675693	Identifier	ver		4675605	0					
ANR	4675694	Identifier	MinorVer		4675605	1					
ANR	4675695	PrimaryExpression	99		4675605	1					
ANR	4675696	RelationalExpression	ver . SubMinorVer > 99		4675605	1		>			
ANR	4675697	MemberAccess	ver . SubMinorVer		4675605	0					
ANR	4675698	Identifier	ver		4675605	0					
ANR	4675699	Identifier	SubMinorVer		4675605	1					
ANR	4675700	PrimaryExpression	99		4675605	1					
ANR	4675701	CompoundStatement		20:69:511:511	4675605	1					
ANR	4675702	ExpressionStatement	ver . MajorVer = 0	447:2:10006:10022	4675605	0	True				
ANR	4675703	AssignmentExpression	ver . MajorVer = 0		4675605	0		=			
ANR	4675704	MemberAccess	ver . MajorVer		4675605	0					
ANR	4675705	Identifier	ver		4675605	0					
ANR	4675706	Identifier	MajorVer		4675605	1					
ANR	4675707	PrimaryExpression	0		4675605	1					
ANR	4675708	ReturnStatement	return false ;	448:2:10026:10038	4675605	1	True				
ANR	4675709	Identifier	false		4675605	0					
ANR	4675710	ExpressionStatement	ver . Scalar = ver . MajorVer * 1000000 + ver . MinorVer * 1000 + ver . SubMinorVer	451:1:10045:10126	4675605	6	True				
ANR	4675711	AssignmentExpression	ver . Scalar = ver . MajorVer * 1000000 + ver . MinorVer * 1000 + ver . SubMinorVer		4675605	0		=			
ANR	4675712	MemberAccess	ver . Scalar		4675605	0					
ANR	4675713	Identifier	ver		4675605	0					
ANR	4675714	Identifier	Scalar		4675605	1					
ANR	4675715	AdditiveExpression	ver . MajorVer * 1000000 + ver . MinorVer * 1000 + ver . SubMinorVer		4675605	1		+			
ANR	4675716	MultiplicativeExpression	ver . MajorVer * 1000000		4675605	0		*			
ANR	4675717	MemberAccess	ver . MajorVer		4675605	0					
ANR	4675718	Identifier	ver		4675605	0					
ANR	4675719	Identifier	MajorVer		4675605	1					
ANR	4675720	PrimaryExpression	1000000		4675605	1					
ANR	4675721	AdditiveExpression	ver . MinorVer * 1000 + ver . SubMinorVer		4675605	1		+			
ANR	4675722	MultiplicativeExpression	ver . MinorVer * 1000		4675605	0		*			
ANR	4675723	MemberAccess	ver . MinorVer		4675605	0					
ANR	4675724	Identifier	ver		4675605	0					
ANR	4675725	Identifier	MinorVer		4675605	1					
ANR	4675726	PrimaryExpression	1000		4675605	1					
ANR	4675727	MemberAccess	ver . SubMinorVer		4675605	1					
ANR	4675728	Identifier	ver		4675605	0					
ANR	4675729	Identifier	SubMinorVer		4675605	1					
ANR	4675730	ExpressionStatement	"ptr = strchr ( ptr , ' ' )"	456:1:10222:10243	4675605	7	True				
ANR	4675731	AssignmentExpression	"ptr = strchr ( ptr , ' ' )"		4675605	0		=			
ANR	4675732	Identifier	ptr		4675605	0					
ANR	4675733	CallExpression	"strchr ( ptr , ' ' )"		4675605	1					
ANR	4675734	Callee	strchr		4675605	0					
ANR	4675735	Identifier	strchr		4675605	0					
ANR	4675736	ArgumentList	ptr		4675605	1					
ANR	4675737	Argument	ptr		4675605	0					
ANR	4675738	Identifier	ptr		4675605	0					
ANR	4675739	Argument	' '		4675605	1					
ANR	4675740	PrimaryExpression	' '		4675605	0					
ANR	4675741	IfStatement	if ( ! ptr )		4675605	8					
ANR	4675742	Condition	! ptr	457:6:10251:10254	4675605	0	True				
ANR	4675743	UnaryOperationExpression	! ptr		4675605	0					
ANR	4675744	UnaryOperator	!		4675605	0					
ANR	4675745	Identifier	ptr		4675605	1					
ANR	4675746	CompoundStatement		31:13:767:767	4675605	1					
ANR	4675747	ExpressionStatement	ver . MajorVer = 0	458:2:10262:10278	4675605	0	True				
ANR	4675748	AssignmentExpression	ver . MajorVer = 0		4675605	0		=			
ANR	4675749	MemberAccess	ver . MajorVer		4675605	0					
ANR	4675750	Identifier	ver		4675605	0					
ANR	4675751	Identifier	MajorVer		4675605	1					
ANR	4675752	PrimaryExpression	0		4675605	1					
ANR	4675753	ReturnStatement	return false ;	459:2:10282:10294	4675605	1	True				
ANR	4675754	Identifier	false		4675605	0					
ANR	4675755	ExpressionStatement	ptr ++	461:1:10300:10305	4675605	9	True				
ANR	4675756	PostIncDecOperationExpression	ptr ++		4675605	0					
ANR	4675757	Identifier	ptr		4675605	0					
ANR	4675758	IncDec	++		4675605	1					
ANR	4675759	IdentifierDeclStatement	int month = - 1 ;	464:1:10381:10395	4675605	10	True				
ANR	4675760	IdentifierDecl	month = - 1		4675605	0					
ANR	4675761	IdentifierDeclType	int		4675605	0					
ANR	4675762	Identifier	month		4675605	1					
ANR	4675763	AssignmentExpression	month = - 1		4675605	2		=			
ANR	4675764	Identifier	month		4675605	0					
ANR	4675765	UnaryOperationExpression	- 1		4675605	1					
ANR	4675766	UnaryOperator	-		4675605	0					
ANR	4675767	PrimaryExpression	1		4675605	1					
ANR	4675768	ForStatement	for ( int i = 0 ; i < 12 ; i ++ )		4675605	11					
ANR	4675769	ForInit	int i = 0 ;	465:6:10403:10410	4675605	0	True				
ANR	4675770	IdentifierDeclStatement	int i = 0 ;		4675605	0					
ANR	4675771	IdentifierDecl	i = 0		4675605	0					
ANR	4675772	IdentifierDeclType	int		4675605	0					
ANR	4675773	Identifier	i		4675605	1					
ANR	4675774	AssignmentExpression	i = 0		4675605	2		=			
ANR	4675775	Identifier	i		4675605	0					
ANR	4675776	PrimaryExpression	0		4675605	1					
ANR	4675777	Condition	i < 12	465:15:10412:10415	4675605	1	True				
ANR	4675778	RelationalExpression	i < 12		4675605	0		<			
ANR	4675779	Identifier	i		4675605	0					
ANR	4675780	PrimaryExpression	12		4675605	1					
ANR	4675781	PostIncDecOperationExpression	i ++	465:21:10418:10420	4675605	2	True				
ANR	4675782	Identifier	i		4675605	0					
ANR	4675783	IncDec	++		4675605	1					
ANR	4675784	CompoundStatement		39:26:932:932	4675605	3					
ANR	4675785	IfStatement	"if ( strncmp ( monthNames [ i ] , ptr , 3 ) == 0 )"		4675605	0					
ANR	4675786	Condition	"strncmp ( monthNames [ i ] , ptr , 3 ) == 0"	466:6:10431:10463	4675605	0	True				
ANR	4675787	EqualityExpression	"strncmp ( monthNames [ i ] , ptr , 3 ) == 0"		4675605	0		==			
ANR	4675788	CallExpression	"strncmp ( monthNames [ i ] , ptr , 3 )"		4675605	0					
ANR	4675789	Callee	strncmp		4675605	0					
ANR	4675790	Identifier	strncmp		4675605	0					
ANR	4675791	ArgumentList	monthNames [ i ]		4675605	1					
ANR	4675792	Argument	monthNames [ i ]		4675605	0					
ANR	4675793	ArrayIndexing	monthNames [ i ]		4675605	0					
ANR	4675794	Identifier	monthNames		4675605	0					
ANR	4675795	Identifier	i		4675605	1					
ANR	4675796	Argument	ptr		4675605	1					
ANR	4675797	Identifier	ptr		4675605	0					
ANR	4675798	Argument	3		4675605	2					
ANR	4675799	PrimaryExpression	3		4675605	0					
ANR	4675800	PrimaryExpression	0		4675605	1					
ANR	4675801	CompoundStatement		40:41:975:975	4675605	1					
ANR	4675802	ExpressionStatement	month = i	467:3:10471:10480	4675605	0	True				
ANR	4675803	AssignmentExpression	month = i		4675605	0		=			
ANR	4675804	Identifier	month		4675605	0					
ANR	4675805	Identifier	i		4675605	1					
ANR	4675806	BreakStatement	break ;	468:3:10485:10490	4675605	1	True				
ANR	4675807	ExpressionStatement	ptr += 4	472:1:10501:10508	4675605	12	True				
ANR	4675808	AssignmentExpression	ptr += 4		4675605	0		+=			
ANR	4675809	Identifier	ptr		4675605	0					
ANR	4675810	PrimaryExpression	4		4675605	1					
ANR	4675811	IdentifierDeclStatement	"int date , year ;"	475:1:10571:10585	4675605	13	True				
ANR	4675812	IdentifierDecl	date		4675605	0					
ANR	4675813	IdentifierDeclType	int		4675605	0					
ANR	4675814	Identifier	date		4675605	1					
ANR	4675815	IdentifierDecl	year		4675605	1					
ANR	4675816	IdentifierDeclType	int		4675605	0					
ANR	4675817	Identifier	year		4675605	1					
ANR	4675818	ExpressionStatement	date = year = - 1	476:1:10588:10604	4675605	14	True				
ANR	4675819	AssignmentExpression	date = year = - 1		4675605	0		=			
ANR	4675820	Identifier	date		4675605	0					
ANR	4675821	AssignmentExpression	year = - 1		4675605	1		=			
ANR	4675822	Identifier	year		4675605	0					
ANR	4675823	UnaryOperationExpression	- 1		4675605	1					
ANR	4675824	UnaryOperator	-		4675605	0					
ANR	4675825	PrimaryExpression	1		4675605	1					
ANR	4675826	ExpressionStatement	"sscanf ( ptr , ""%d %d"" , & date , & year )"	477:1:10607:10638	4675605	15	True				
ANR	4675827	CallExpression	"sscanf ( ptr , ""%d %d"" , & date , & year )"		4675605	0					
ANR	4675828	Callee	sscanf		4675605	0					
ANR	4675829	Identifier	sscanf		4675605	0					
ANR	4675830	ArgumentList	ptr		4675605	1					
ANR	4675831	Argument	ptr		4675605	0					
ANR	4675832	Identifier	ptr		4675605	0					
ANR	4675833	Argument	"""%d %d"""		4675605	1					
ANR	4675834	PrimaryExpression	"""%d %d"""		4675605	0					
ANR	4675835	Argument	& date		4675605	2					
ANR	4675836	UnaryOperationExpression	& date		4675605	0					
ANR	4675837	UnaryOperator	&		4675605	0					
ANR	4675838	Identifier	date		4675605	1					
ANR	4675839	Argument	& year		4675605	3					
ANR	4675840	UnaryOperationExpression	& year		4675605	0					
ANR	4675841	UnaryOperator	&		4675605	0					
ANR	4675842	Identifier	year		4675605	1					
ANR	4675843	IfStatement	if ( month < 0 || month > 11 || date < 0 || date > 31 || year < 1997 || year > 2036 )		4675605	16					
ANR	4675844	Condition	month < 0 || month > 11 || date < 0 || date > 31 || year < 1997 || year > 2036	480:6:10666:10746	4675605	0	True				
ANR	4675845	OrExpression	month < 0 || month > 11 || date < 0 || date > 31 || year < 1997 || year > 2036		4675605	0		||			
ANR	4675846	RelationalExpression	month < 0		4675605	0		<			
ANR	4675847	Identifier	month		4675605	0					
ANR	4675848	PrimaryExpression	0		4675605	1					
ANR	4675849	OrExpression	month > 11 || date < 0 || date > 31 || year < 1997 || year > 2036		4675605	1		||			
ANR	4675850	RelationalExpression	month > 11		4675605	0		>			
ANR	4675851	Identifier	month		4675605	0					
ANR	4675852	PrimaryExpression	11		4675605	1					
ANR	4675853	OrExpression	date < 0 || date > 31 || year < 1997 || year > 2036		4675605	1		||			
ANR	4675854	RelationalExpression	date < 0		4675605	0		<			
ANR	4675855	Identifier	date		4675605	0					
ANR	4675856	PrimaryExpression	0		4675605	1					
ANR	4675857	OrExpression	date > 31 || year < 1997 || year > 2036		4675605	1		||			
ANR	4675858	RelationalExpression	date > 31		4675605	0		>			
ANR	4675859	Identifier	date		4675605	0					
ANR	4675860	PrimaryExpression	31		4675605	1					
ANR	4675861	OrExpression	year < 1997 || year > 2036		4675605	1		||			
ANR	4675862	RelationalExpression	year < 1997		4675605	0		<			
ANR	4675863	Identifier	year		4675605	0					
ANR	4675864	PrimaryExpression	1997		4675605	1					
ANR	4675865	RelationalExpression	year > 2036		4675605	1		>			
ANR	4675866	Identifier	year		4675605	0					
ANR	4675867	PrimaryExpression	2036		4675605	1					
ANR	4675868	CompoundStatement		55:19:1259:1259	4675605	1					
ANR	4675869	ExpressionStatement	ver . MajorVer = 0	482:2:10754:10770	4675605	0	True				
ANR	4675870	AssignmentExpression	ver . MajorVer = 0		4675605	0		=			
ANR	4675871	MemberAccess	ver . MajorVer		4675605	0					
ANR	4675872	Identifier	ver		4675605	0					
ANR	4675873	Identifier	MajorVer		4675605	1					
ANR	4675874	PrimaryExpression	0		4675605	1					
ANR	4675875	ReturnStatement	return false ;	483:2:10774:10786	4675605	1	True				
ANR	4675876	Identifier	false		4675605	0					
ANR	4675877	IdentifierDeclStatement	struct tm build_date ;	487:1:10815:10835	4675605	17	True				
ANR	4675878	IdentifierDecl	build_date		4675605	0					
ANR	4675879	IdentifierDeclType	struct tm		4675605	0					
ANR	4675880	Identifier	build_date		4675605	1					
ANR	4675881	ExpressionStatement	build_date . tm_hour = 0	488:1:10838:10860	4675605	18	True				
ANR	4675882	AssignmentExpression	build_date . tm_hour = 0		4675605	0		=			
ANR	4675883	MemberAccess	build_date . tm_hour		4675605	0					
ANR	4675884	Identifier	build_date		4675605	0					
ANR	4675885	Identifier	tm_hour		4675605	1					
ANR	4675886	PrimaryExpression	0		4675605	1					
ANR	4675887	ExpressionStatement	build_date . tm_isdst = 1	489:1:10863:10886	4675605	19	True				
ANR	4675888	AssignmentExpression	build_date . tm_isdst = 1		4675605	0		=			
ANR	4675889	MemberAccess	build_date . tm_isdst		4675605	0					
ANR	4675890	Identifier	build_date		4675605	0					
ANR	4675891	Identifier	tm_isdst		4675605	1					
ANR	4675892	PrimaryExpression	1		4675605	1					
ANR	4675893	ExpressionStatement	build_date . tm_mday = date	490:1:10889:10914	4675605	20	True				
ANR	4675894	AssignmentExpression	build_date . tm_mday = date		4675605	0		=			
ANR	4675895	MemberAccess	build_date . tm_mday		4675605	0					
ANR	4675896	Identifier	build_date		4675605	0					
ANR	4675897	Identifier	tm_mday		4675605	1					
ANR	4675898	Identifier	date		4675605	1					
ANR	4675899	ExpressionStatement	build_date . tm_min = 0	491:1:10917:10938	4675605	21	True				
ANR	4675900	AssignmentExpression	build_date . tm_min = 0		4675605	0		=			
ANR	4675901	MemberAccess	build_date . tm_min		4675605	0					
ANR	4675902	Identifier	build_date		4675605	0					
ANR	4675903	Identifier	tm_min		4675605	1					
ANR	4675904	PrimaryExpression	0		4675605	1					
ANR	4675905	ExpressionStatement	build_date . tm_mon = month	492:1:10941:10966	4675605	22	True				
ANR	4675906	AssignmentExpression	build_date . tm_mon = month		4675605	0		=			
ANR	4675907	MemberAccess	build_date . tm_mon		4675605	0					
ANR	4675908	Identifier	build_date		4675605	0					
ANR	4675909	Identifier	tm_mon		4675605	1					
ANR	4675910	Identifier	month		4675605	1					
ANR	4675911	ExpressionStatement	build_date . tm_sec = 0	493:1:10969:10990	4675605	23	True				
ANR	4675912	AssignmentExpression	build_date . tm_sec = 0		4675605	0		=			
ANR	4675913	MemberAccess	build_date . tm_sec		4675605	0					
ANR	4675914	Identifier	build_date		4675605	0					
ANR	4675915	Identifier	tm_sec		4675605	1					
ANR	4675916	PrimaryExpression	0		4675605	1					
ANR	4675917	ExpressionStatement	build_date . tm_year = year - 1900	494:1:10993:11025	4675605	24	True				
ANR	4675918	AssignmentExpression	build_date . tm_year = year - 1900		4675605	0		=			
ANR	4675919	MemberAccess	build_date . tm_year		4675605	0					
ANR	4675920	Identifier	build_date		4675605	0					
ANR	4675921	Identifier	tm_year		4675605	1					
ANR	4675922	AdditiveExpression	year - 1900		4675605	1		-			
ANR	4675923	Identifier	year		4675605	0					
ANR	4675924	PrimaryExpression	1900		4675605	1					
ANR	4675925	IfStatement	if ( ( ver . BuildDate = mktime ( & build_date ) ) == - 1 )		4675605	25					
ANR	4675926	Condition	( ver . BuildDate = mktime ( & build_date ) ) == - 1	496:6:11034:11076	4675605	0	True				
ANR	4675927	EqualityExpression	( ver . BuildDate = mktime ( & build_date ) ) == - 1		4675605	0		==			
ANR	4675928	AssignmentExpression	ver . BuildDate = mktime ( & build_date )		4675605	0		=			
ANR	4675929	MemberAccess	ver . BuildDate		4675605	0					
ANR	4675930	Identifier	ver		4675605	0					
ANR	4675931	Identifier	BuildDate		4675605	1					
ANR	4675932	CallExpression	mktime ( & build_date )		4675605	1					
ANR	4675933	Callee	mktime		4675605	0					
ANR	4675934	Identifier	mktime		4675605	0					
ANR	4675935	ArgumentList	& build_date		4675605	1					
ANR	4675936	Argument	& build_date		4675605	0					
ANR	4675937	UnaryOperationExpression	& build_date		4675605	0					
ANR	4675938	UnaryOperator	&		4675605	0					
ANR	4675939	Identifier	build_date		4675605	1					
ANR	4675940	UnaryOperationExpression	- 1		4675605	1					
ANR	4675941	UnaryOperator	-		4675605	0					
ANR	4675942	PrimaryExpression	1		4675605	1					
ANR	4675943	CompoundStatement		70:52:1589:1589	4675605	1					
ANR	4675944	ExpressionStatement	ver . MajorVer = 0	497:2:11084:11100	4675605	0	True				
ANR	4675945	AssignmentExpression	ver . MajorVer = 0		4675605	0		=			
ANR	4675946	MemberAccess	ver . MajorVer		4675605	0					
ANR	4675947	Identifier	ver		4675605	0					
ANR	4675948	Identifier	MajorVer		4675605	1					
ANR	4675949	PrimaryExpression	0		4675605	1					
ANR	4675950	ReturnStatement	return false ;	498:2:11104:11116	4675605	1	True				
ANR	4675951	Identifier	false		4675605	0					
ANR	4675952	ReturnStatement	return true ;	501:1:11123:11134	4675605	26	True				
ANR	4675953	Identifier	true		4675605	0					
ANR	4675954	ReturnType	bool		4675605	1					
ANR	4675955	Identifier	CondorVersionInfo :: string_to_VersionData		4675605	2					
ANR	4675956	ParameterList	"const char * verstring , VersionData_t & ver"		4675605	3					
ANR	4675957	Parameter	const char * verstring	425:41:9428:9448	4675605	0	True				
ANR	4675958	ParameterType	const char *		4675605	0					
ANR	4675959	Identifier	verstring		4675605	1					
ANR	4675960	Parameter	VersionData_t & ver	426:11:9463:9481	4675605	1	True				
ANR	4675961	ParameterType	VersionData_t &		4675605	0					
ANR	4675962	Identifier	ver		4675605	1					
ANR	4675963	CFGEntryNode	ENTRY		4675605		True				
ANR	4675964	CFGExitNode	EXIT		4675605		True				
ANR	4675965	Symbol	date		4675605						
ANR	4675966	Symbol	ver . Scalar		4675605						
ANR	4675967	Symbol	year		4675605						
ANR	4675968	Symbol	verstring		4675605						
ANR	4675969	Symbol	strchr		4675605						
ANR	4675970	Symbol	build_date . tm_isdst		4675605						
ANR	4675971	Symbol	ver . BuildDate		4675605						
ANR	4675972	Symbol	& ver		4675605						
ANR	4675973	Symbol	& ver . MajorVer		4675605						
ANR	4675974	Symbol	ver . MinorVer		4675605						
ANR	4675975	Symbol	strncmp		4675605						
ANR	4675976	Symbol	ver . MajorVer		4675605						
ANR	4675977	Symbol	monthNames		4675605						
ANR	4675978	Symbol	ver . SubMinorVer		4675605						
ANR	4675979	Symbol	ver		4675605						
ANR	4675980	Symbol	& date		4675605						
ANR	4675981	Symbol	& ver . SubMinorVer		4675605						
ANR	4675982	Symbol	& year		4675605						
ANR	4675983	Symbol	false		4675605						
ANR	4675984	Symbol	i		4675605						
ANR	4675985	Symbol	myversion		4675605						
ANR	4675986	Symbol	build_date . tm_hour		4675605						
ANR	4675987	Symbol	ptr		4675605						
ANR	4675988	Symbol	* monthNames		4675605						
ANR	4675989	Symbol	build_date . tm_year		4675605						
ANR	4675990	Symbol	build_date		4675605						
ANR	4675991	Symbol	mktime		4675605						
ANR	4675992	Symbol	* i		4675605						
ANR	4675993	Symbol	month		4675605						
ANR	4675994	Symbol	& ver . MinorVer		4675605						
ANR	4675995	Symbol	true		4675605						
ANR	4675996	Symbol	build_date . tm_mon		4675605						
ANR	4675997	Symbol	build_date . tm_mday		4675605						
ANR	4675998	Symbol	& build_date		4675605						
ANR	4675999	Symbol	build_date . tm_sec		4675605						
ANR	4676000	Symbol	build_date . tm_min		4675605						
ANR	4676001	Function	CondorVersionInfo :: string_to_PlatformData	505:0:11147:11911							
ANR	4676002	FunctionDef	"CondorVersionInfo :: string_to_PlatformData (const char * platformstring , VersionData_t & ver)"		4676001	0					
ANR	4676003	CompoundStatement		508:0:11262:11911	4676001	0					
ANR	4676004	IfStatement	if ( ! platformstring )		4676001	0					
ANR	4676005	Condition	! platformstring	511:6:11338:11352	4676001	0	True				
ANR	4676006	UnaryOperationExpression	! platformstring		4676001	0					
ANR	4676007	UnaryOperator	!		4676001	0					
ANR	4676008	Identifier	platformstring		4676001	1					
ANR	4676009	CompoundStatement		4:24:93:93	4676001	1					
ANR	4676010	ExpressionStatement	ver = myversion	513:2:11394:11409	4676001	0	True				
ANR	4676011	AssignmentExpression	ver = myversion		4676001	0		=			
ANR	4676012	Identifier	ver		4676001	0					
ANR	4676013	Identifier	myversion		4676001	1					
ANR	4676014	ReturnStatement	return true ;	514:2:11413:11424	4676001	1	True				
ANR	4676015	Identifier	true		4676001	0					
ANR	4676016	IfStatement	"if ( strncmp ( platformstring , ""$CondorPlatform: "" , 17 ) != 0 )"		4676001	1					
ANR	4676017	Condition	"strncmp ( platformstring , ""$CondorPlatform: "" , 17 ) != 0"	517:6:11436:11486	4676001	0	True				
ANR	4676018	EqualityExpression	"strncmp ( platformstring , ""$CondorPlatform: "" , 17 ) != 0"		4676001	0		!=			
ANR	4676019	CallExpression	"strncmp ( platformstring , ""$CondorPlatform: "" , 17 )"		4676001	0					
ANR	4676020	Callee	strncmp		4676001	0					
ANR	4676021	Identifier	strncmp		4676001	0					
ANR	4676022	ArgumentList	platformstring		4676001	1					
ANR	4676023	Argument	platformstring		4676001	0					
ANR	4676024	Identifier	platformstring		4676001	0					
ANR	4676025	Argument	"""$CondorPlatform: """		4676001	1					
ANR	4676026	PrimaryExpression	"""$CondorPlatform: """		4676001	0					
ANR	4676027	Argument	17		4676001	2					
ANR	4676028	PrimaryExpression	17		4676001	0					
ANR	4676029	PrimaryExpression	0		4676001	1					
ANR	4676030	CompoundStatement		10:60:227:227	4676001	1					
ANR	4676031	ReturnStatement	return false ;	518:2:11494:11506	4676001	0	True				
ANR	4676032	Identifier	false		4676001	0					
ANR	4676033	IdentifierDeclStatement	"char const * ptr = strchr ( platformstring , ' ' ) ;"	521:1:11513:11557	4676001	2	True				
ANR	4676034	IdentifierDecl	"* ptr = strchr ( platformstring , ' ' )"		4676001	0					
ANR	4676035	IdentifierDeclType	char const *		4676001	0					
ANR	4676036	Identifier	ptr		4676001	1					
ANR	4676037	AssignmentExpression	"* ptr = strchr ( platformstring , ' ' )"		4676001	2		=			
ANR	4676038	Identifier	ptr		4676001	0					
ANR	4676039	CallExpression	"strchr ( platformstring , ' ' )"		4676001	1					
ANR	4676040	Callee	strchr		4676001	0					
ANR	4676041	Identifier	strchr		4676001	0					
ANR	4676042	ArgumentList	platformstring		4676001	1					
ANR	4676043	Argument	platformstring		4676001	0					
ANR	4676044	Identifier	platformstring		4676001	0					
ANR	4676045	Argument	' '		4676001	1					
ANR	4676046	PrimaryExpression	' '		4676001	0					
ANR	4676047	ExpressionStatement	ptr ++	522:1:11560:11565	4676001	3	True				
ANR	4676048	PostIncDecOperationExpression	ptr ++		4676001	0					
ANR	4676049	Identifier	ptr		4676001	0					
ANR	4676050	IncDec	++		4676001	1					
ANR	4676051	IdentifierDeclStatement	"size_t len = strcspn ( ptr , ""-"" ) ;"	525:1:11601:11630	4676001	4	True				
ANR	4676052	IdentifierDecl	"len = strcspn ( ptr , ""-"" )"		4676001	0					
ANR	4676053	IdentifierDeclType	size_t		4676001	0					
ANR	4676054	Identifier	len		4676001	1					
ANR	4676055	AssignmentExpression	"len = strcspn ( ptr , ""-"" )"		4676001	2		=			
ANR	4676056	Identifier	len		4676001	0					
ANR	4676057	CallExpression	"strcspn ( ptr , ""-"" )"		4676001	1					
ANR	4676058	Callee	strcspn		4676001	0					
ANR	4676059	Identifier	strcspn		4676001	0					
ANR	4676060	ArgumentList	ptr		4676001	1					
ANR	4676061	Argument	ptr		4676001	0					
ANR	4676062	Identifier	ptr		4676001	0					
ANR	4676063	Argument	"""-"""		4676001	1					
ANR	4676064	PrimaryExpression	"""-"""		4676001	0					
ANR	4676065	IfStatement	if ( len )		4676001	5					
ANR	4676066	Condition	len	526:5:11637:11639	4676001	0	True				
ANR	4676067	Identifier	len		4676001	0					
ANR	4676068	CompoundStatement		19:11:380:380	4676001	1					
ANR	4676069	ExpressionStatement	ver . Arch = strdup ( ptr )	527:2:11647:11669	4676001	0	True				
ANR	4676070	AssignmentExpression	ver . Arch = strdup ( ptr )		4676001	0		=			
ANR	4676071	MemberAccess	ver . Arch		4676001	0					
ANR	4676072	Identifier	ver		4676001	0					
ANR	4676073	Identifier	Arch		4676001	1					
ANR	4676074	CallExpression	strdup ( ptr )		4676001	1					
ANR	4676075	Callee	strdup		4676001	0					
ANR	4676076	Identifier	strdup		4676001	0					
ANR	4676077	ArgumentList	ptr		4676001	1					
ANR	4676078	Argument	ptr		4676001	0					
ANR	4676079	Identifier	ptr		4676001	0					
ANR	4676080	ExpressionStatement	ASSERT ( ver . Arch )	528:2:11673:11689	4676001	1	True				
ANR	4676081	CallExpression	ASSERT ( ver . Arch )		4676001	0					
ANR	4676082	Callee	ASSERT		4676001	0					
ANR	4676083	Identifier	ASSERT		4676001	0					
ANR	4676084	ArgumentList	ver . Arch		4676001	1					
ANR	4676085	Argument	ver . Arch		4676001	0					
ANR	4676086	MemberAccess	ver . Arch		4676001	0					
ANR	4676087	Identifier	ver		4676001	0					
ANR	4676088	Identifier	Arch		4676001	1					
ANR	4676089	ExpressionStatement	ver . Arch [ len ] = '\\0'	529:2:11693:11713	4676001	2	True				
ANR	4676090	AssignmentExpression	ver . Arch [ len ] = '\\0'		4676001	0		=			
ANR	4676091	ArrayIndexing	ver . Arch [ len ]		4676001	0					
ANR	4676092	MemberAccess	ver . Arch		4676001	0					
ANR	4676093	Identifier	ver		4676001	0					
ANR	4676094	Identifier	Arch		4676001	1					
ANR	4676095	Identifier	len		4676001	1					
ANR	4676096	PrimaryExpression	'\\0'		4676001	1					
ANR	4676097	ExpressionStatement	ptr += len	530:2:11717:11727	4676001	3	True				
ANR	4676098	AssignmentExpression	ptr += len		4676001	0		+=			
ANR	4676099	Identifier	ptr		4676001	0					
ANR	4676100	Identifier	len		4676001	1					
ANR	4676101	IfStatement	if ( * ptr == '-' )		4676001	6					
ANR	4676102	Condition	* ptr == '-'	533:5:11738:11748	4676001	0	True				
ANR	4676103	EqualityExpression	* ptr == '-'		4676001	0		==			
ANR	4676104	UnaryOperationExpression	* ptr		4676001	0					
ANR	4676105	UnaryOperator	*		4676001	0					
ANR	4676106	Identifier	ptr		4676001	1					
ANR	4676107	PrimaryExpression	'-'		4676001	1					
ANR	4676108	CompoundStatement		26:19:489:489	4676001	1					
ANR	4676109	ExpressionStatement	ptr ++	534:2:11756:11761	4676001	0	True				
ANR	4676110	PostIncDecOperationExpression	ptr ++		4676001	0					
ANR	4676111	Identifier	ptr		4676001	0					
ANR	4676112	IncDec	++		4676001	1					
ANR	4676113	ExpressionStatement	"len = strcspn ( ptr , "" $"" )"	537:1:11768:11791	4676001	7	True				
ANR	4676114	AssignmentExpression	"len = strcspn ( ptr , "" $"" )"		4676001	0		=			
ANR	4676115	Identifier	len		4676001	0					
ANR	4676116	CallExpression	"strcspn ( ptr , "" $"" )"		4676001	1					
ANR	4676117	Callee	strcspn		4676001	0					
ANR	4676118	Identifier	strcspn		4676001	0					
ANR	4676119	ArgumentList	ptr		4676001	1					
ANR	4676120	Argument	ptr		4676001	0					
ANR	4676121	Identifier	ptr		4676001	0					
ANR	4676122	Argument	""" $"""		4676001	1					
ANR	4676123	PrimaryExpression	""" $"""		4676001	0					
ANR	4676124	IfStatement	if ( len )		4676001	8					
ANR	4676125	Condition	len	538:5:11798:11800	4676001	0	True				
ANR	4676126	Identifier	len		4676001	0					
ANR	4676127	CompoundStatement		31:11:541:541	4676001	1					
ANR	4676128	ExpressionStatement	ver . OpSys = strdup ( ptr )	539:2:11808:11831	4676001	0	True				
ANR	4676129	AssignmentExpression	ver . OpSys = strdup ( ptr )		4676001	0		=			
ANR	4676130	MemberAccess	ver . OpSys		4676001	0					
ANR	4676131	Identifier	ver		4676001	0					
ANR	4676132	Identifier	OpSys		4676001	1					
ANR	4676133	CallExpression	strdup ( ptr )		4676001	1					
ANR	4676134	Callee	strdup		4676001	0					
ANR	4676135	Identifier	strdup		4676001	0					
ANR	4676136	ArgumentList	ptr		4676001	1					
ANR	4676137	Argument	ptr		4676001	0					
ANR	4676138	Identifier	ptr		4676001	0					
ANR	4676139	ExpressionStatement	ASSERT ( ver . OpSys )	540:2:11835:11852	4676001	1	True				
ANR	4676140	CallExpression	ASSERT ( ver . OpSys )		4676001	0					
ANR	4676141	Callee	ASSERT		4676001	0					
ANR	4676142	Identifier	ASSERT		4676001	0					
ANR	4676143	ArgumentList	ver . OpSys		4676001	1					
ANR	4676144	Argument	ver . OpSys		4676001	0					
ANR	4676145	MemberAccess	ver . OpSys		4676001	0					
ANR	4676146	Identifier	ver		4676001	0					
ANR	4676147	Identifier	OpSys		4676001	1					
ANR	4676148	ExpressionStatement	ver . OpSys [ len ] = '\\0'	541:2:11856:11877	4676001	2	True				
ANR	4676149	AssignmentExpression	ver . OpSys [ len ] = '\\0'		4676001	0		=			
ANR	4676150	ArrayIndexing	ver . OpSys [ len ]		4676001	0					
ANR	4676151	MemberAccess	ver . OpSys		4676001	0					
ANR	4676152	Identifier	ver		4676001	0					
ANR	4676153	Identifier	OpSys		4676001	1					
ANR	4676154	Identifier	len		4676001	1					
ANR	4676155	PrimaryExpression	'\\0'		4676001	1					
ANR	4676156	ExpressionStatement	ptr += len	542:2:11881:11891	4676001	3	True				
ANR	4676157	AssignmentExpression	ptr += len		4676001	0		+=			
ANR	4676158	Identifier	ptr		4676001	0					
ANR	4676159	Identifier	len		4676001	1					
ANR	4676160	ReturnStatement	return true ;	545:1:11898:11909	4676001	9	True				
ANR	4676161	Identifier	true		4676001	0					
ANR	4676162	ReturnType	bool		4676001	1					
ANR	4676163	Identifier	CondorVersionInfo :: string_to_PlatformData		4676001	2					
ANR	4676164	ParameterList	"const char * platformstring , VersionData_t & ver"		4676001	3					
ANR	4676165	Parameter	const char * platformstring	506:42:11194:11219	4676001	0	True				
ANR	4676166	ParameterType	const char *		4676001	0					
ANR	4676167	Identifier	platformstring		4676001	1					
ANR	4676168	Parameter	VersionData_t & ver	507:12:11235:11253	4676001	1	True				
ANR	4676169	ParameterType	VersionData_t &		4676001	0					
ANR	4676170	Identifier	ver		4676001	1					
ANR	4676171	CFGEntryNode	ENTRY		4676001		True				
ANR	4676172	CFGExitNode	EXIT		4676001		True				
ANR	4676173	Symbol	ver		4676001						
ANR	4676174	Symbol	false		4676001						
ANR	4676175	Symbol	strchr		4676001						
ANR	4676176	Symbol	myversion		4676001						
ANR	4676177	Symbol	strcspn		4676001						
ANR	4676178	Symbol	ver . Arch		4676001						
ANR	4676179	Symbol	* ver		4676001						
ANR	4676180	Symbol	ptr		4676001						
ANR	4676181	Symbol	strncmp		4676001						
ANR	4676182	Symbol	len		4676001						
ANR	4676183	Symbol	platformstring		4676001						
ANR	4676184	Symbol	ver . OpSys		4676001						
ANR	4676185	Symbol	true		4676001						
ANR	4676186	Symbol	* ver . Arch		4676001						
ANR	4676187	Symbol	* ptr		4676001						
ANR	4676188	Symbol	* ver . OpSys		4676001						
ANR	4676189	Symbol	strdup		4676001						
ANR	4676190	Symbol	* len		4676001						
