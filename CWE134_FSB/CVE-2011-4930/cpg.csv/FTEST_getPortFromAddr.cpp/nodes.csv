command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	188004	File	data/converged/CVE-2011-4930_htcondor/FTEST_getPortFromAddr.cpp								
ANR	188005	DeclStmt									
ANR	188006	Decl							bool	bool ( void )	test_normal_case
ANR	188007	DeclStmt									
ANR	188008	Decl							bool	bool ( void )	test_no_brackets
ANR	188009	DeclStmt									
ANR	188010	Decl							bool	bool ( void )	test_no_port
ANR	188011	DeclStmt									
ANR	188012	Decl							bool	bool ( void )	test_negative_port
ANR	188013	DeclStmt									
ANR	188014	Decl							bool	bool ( void )	test_large_port_number
ANR	188015	DeclStmt									
ANR	188016	Decl							bool	bool ( void )	test_alpha_port
ANR	188017	Function	FTEST_getPortFromAddr	39:0:1284:2002							
ANR	188018	FunctionDef	FTEST_getPortFromAddr ()		188017	0					
ANR	188019	CompoundStatement		39:33:1317:2002	188017	0					
ANR	188020	ExpressionStatement	"emit_function ( ""getPortFromAddr(const char*)"" )"	41:1:1365:1410	188017	0	True				
ANR	188021	CallExpression	"emit_function ( ""getPortFromAddr(const char*)"" )"		188017	0					
ANR	188022	Callee	emit_function		188017	0					
ANR	188023	Identifier	emit_function		188017	0					
ANR	188024	ArgumentList	"""getPortFromAddr(const char*)"""		188017	1					
ANR	188025	Argument	"""getPortFromAddr(const char*)"""		188017	0					
ANR	188026	PrimaryExpression	"""getPortFromAddr(const char*)"""		188017	0					
ANR	188027	ExpressionStatement	"emit_comment ( ""Returns the port part of a sinful string as an int."" )"	42:1:1413:1480	188017	1	True				
ANR	188028	CallExpression	"emit_comment ( ""Returns the port part of a sinful string as an int."" )"		188017	0					
ANR	188029	Callee	emit_comment		188017	0					
ANR	188030	Identifier	emit_comment		188017	0					
ANR	188031	ArgumentList	"""Returns the port part of a sinful string as an int."""		188017	1					
ANR	188032	Argument	"""Returns the port part of a sinful string as an int."""		188017	0					
ANR	188033	PrimaryExpression	"""Returns the port part of a sinful string as an int."""		188017	0					
ANR	188034	ExpressionStatement	"emit_problem ( ""Valid port numbers only go up to 65,535, but this function accepts anything that fits in an int."" )"	43:1:1483:1595	188017	2	True				
ANR	188035	CallExpression	"emit_problem ( ""Valid port numbers only go up to 65,535, but this function accepts anything that fits in an int."" )"		188017	0					
ANR	188036	Callee	emit_problem		188017	0					
ANR	188037	Identifier	emit_problem		188017	0					
ANR	188038	ArgumentList	"""Valid port numbers only go up to 65,535, but this function accepts anything that fits in an int."""		188017	1					
ANR	188039	Argument	"""Valid port numbers only go up to 65,535, but this function accepts anything that fits in an int."""		188017	0					
ANR	188040	PrimaryExpression	"""Valid port numbers only go up to 65,535, but this function accepts anything that fits in an int."""		188017	0					
ANR	188041	IdentifierDeclStatement	FunctionDriver driver ;	46:1:1651:1672	188017	3	True				
ANR	188042	IdentifierDecl	driver		188017	0					
ANR	188043	IdentifierDeclType	FunctionDriver		188017	0					
ANR	188044	Identifier	driver		188017	1					
ANR	188045	ExpressionStatement	driver . register_function ( test_normal_case )	47:1:1675:1717	188017	4	True				
ANR	188046	CallExpression	driver . register_function ( test_normal_case )		188017	0					
ANR	188047	Callee	driver . register_function		188017	0					
ANR	188048	MemberAccess	driver . register_function		188017	0					
ANR	188049	Identifier	driver		188017	0					
ANR	188050	Identifier	register_function		188017	1					
ANR	188051	ArgumentList	test_normal_case		188017	1					
ANR	188052	Argument	test_normal_case		188017	0					
ANR	188053	Identifier	test_normal_case		188017	0					
ANR	188054	ExpressionStatement	driver . register_function ( test_no_brackets )	48:1:1720:1762	188017	5	True				
ANR	188055	CallExpression	driver . register_function ( test_no_brackets )		188017	0					
ANR	188056	Callee	driver . register_function		188017	0					
ANR	188057	MemberAccess	driver . register_function		188017	0					
ANR	188058	Identifier	driver		188017	0					
ANR	188059	Identifier	register_function		188017	1					
ANR	188060	ArgumentList	test_no_brackets		188017	1					
ANR	188061	Argument	test_no_brackets		188017	0					
ANR	188062	Identifier	test_no_brackets		188017	0					
ANR	188063	ExpressionStatement	driver . register_function ( test_no_port )	49:1:1765:1803	188017	6	True				
ANR	188064	CallExpression	driver . register_function ( test_no_port )		188017	0					
ANR	188065	Callee	driver . register_function		188017	0					
ANR	188066	MemberAccess	driver . register_function		188017	0					
ANR	188067	Identifier	driver		188017	0					
ANR	188068	Identifier	register_function		188017	1					
ANR	188069	ArgumentList	test_no_port		188017	1					
ANR	188070	Argument	test_no_port		188017	0					
ANR	188071	Identifier	test_no_port		188017	0					
ANR	188072	ExpressionStatement	driver . register_function ( test_negative_port )	50:1:1806:1850	188017	7	True				
ANR	188073	CallExpression	driver . register_function ( test_negative_port )		188017	0					
ANR	188074	Callee	driver . register_function		188017	0					
ANR	188075	MemberAccess	driver . register_function		188017	0					
ANR	188076	Identifier	driver		188017	0					
ANR	188077	Identifier	register_function		188017	1					
ANR	188078	ArgumentList	test_negative_port		188017	1					
ANR	188079	Argument	test_negative_port		188017	0					
ANR	188080	Identifier	test_negative_port		188017	0					
ANR	188081	ExpressionStatement	driver . register_function ( test_large_port_number )	51:1:1853:1901	188017	8	True				
ANR	188082	CallExpression	driver . register_function ( test_large_port_number )		188017	0					
ANR	188083	Callee	driver . register_function		188017	0					
ANR	188084	MemberAccess	driver . register_function		188017	0					
ANR	188085	Identifier	driver		188017	0					
ANR	188086	Identifier	register_function		188017	1					
ANR	188087	ArgumentList	test_large_port_number		188017	1					
ANR	188088	Argument	test_large_port_number		188017	0					
ANR	188089	Identifier	test_large_port_number		188017	0					
ANR	188090	ExpressionStatement	driver . register_function ( test_alpha_port )	52:1:1904:1945	188017	9	True				
ANR	188091	CallExpression	driver . register_function ( test_alpha_port )		188017	0					
ANR	188092	Callee	driver . register_function		188017	0					
ANR	188093	MemberAccess	driver . register_function		188017	0					
ANR	188094	Identifier	driver		188017	0					
ANR	188095	Identifier	register_function		188017	1					
ANR	188096	ArgumentList	test_alpha_port		188017	1					
ANR	188097	Argument	test_alpha_port		188017	0					
ANR	188098	Identifier	test_alpha_port		188017	0					
ANR	188099	ReturnStatement	return driver . do_all_functions ( ) ;	55:1:1968:2000	188017	10	True				
ANR	188100	CallExpression	driver . do_all_functions ( )		188017	0					
ANR	188101	Callee	driver . do_all_functions		188017	0					
ANR	188102	MemberAccess	driver . do_all_functions		188017	0					
ANR	188103	Identifier	driver		188017	0					
ANR	188104	Identifier	do_all_functions		188017	1					
ANR	188105	ArgumentList			188017	1					
ANR	188106	ReturnType	bool		188017	1					
ANR	188107	Identifier	FTEST_getPortFromAddr		188017	2					
ANR	188108	ParameterList			188017	3					
ANR	188109	CFGEntryNode	ENTRY		188017		True				
ANR	188110	CFGExitNode	EXIT		188017		True				
ANR	188111	Symbol	test_no_brackets		188017						
ANR	188112	Symbol	driver . do_all_functions		188017						
ANR	188113	Symbol	driver		188017						
ANR	188114	Symbol	test_normal_case		188017						
ANR	188115	Symbol	test_alpha_port		188017						
ANR	188116	Symbol	test_large_port_number		188017						
ANR	188117	Symbol	test_no_port		188017						
ANR	188118	Symbol	test_negative_port		188017						
ANR	188119	Function	test_normal_case	58:0:2005:2423							
ANR	188120	FunctionDef	test_normal_case ()		188119	0					
ANR	188121	CompoundStatement		58:31:2036:2423	188119	0					
ANR	188122	ExpressionStatement	"emit_test ( ""Is normal output parsed correctly?"" )"	59:1:2039:2086	188119	0	True				
ANR	188123	CallExpression	"emit_test ( ""Is normal output parsed correctly?"" )"		188119	0					
ANR	188124	Callee	emit_test		188119	0					
ANR	188125	Identifier	emit_test		188119	0					
ANR	188126	ArgumentList	"""Is normal output parsed correctly?"""		188119	1					
ANR	188127	Argument	"""Is normal output parsed correctly?"""		188119	0					
ANR	188128	PrimaryExpression	"""Is normal output parsed correctly?"""		188119	0					
ANR	188129	IdentifierDeclStatement	"char * input = strdup ( ""<192.168.0.2:790>"" ) ;"	60:1:2089:2132	188119	1	True				
ANR	188130	IdentifierDecl	"* input = strdup ( ""<192.168.0.2:790>"" )"		188119	0					
ANR	188131	IdentifierDeclType	char *		188119	0					
ANR	188132	Identifier	input		188119	1					
ANR	188133	AssignmentExpression	"* input = strdup ( ""<192.168.0.2:790>"" )"		188119	2		=			
ANR	188134	Identifier	input		188119	0					
ANR	188135	CallExpression	"strdup ( ""<192.168.0.2:790>"" )"		188119	1					
ANR	188136	Callee	strdup		188119	0					
ANR	188137	Identifier	strdup		188119	0					
ANR	188138	ArgumentList	"""<192.168.0.2:790>"""		188119	1					
ANR	188139	Argument	"""<192.168.0.2:790>"""		188119	0					
ANR	188140	PrimaryExpression	"""<192.168.0.2:790>"""		188119	0					
ANR	188141	ExpressionStatement	emit_input_header ( )	61:1:2135:2154	188119	2	True				
ANR	188142	CallExpression	emit_input_header ( )		188119	0					
ANR	188143	Callee	emit_input_header		188119	0					
ANR	188144	Identifier	emit_input_header		188119	0					
ANR	188145	ArgumentList			188119	1					
ANR	188146	ExpressionStatement	"emit_param ( ""STRING"" , input )"	62:1:2157:2184	188119	3	True				
ANR	188147	CallExpression	"emit_param ( ""STRING"" , input )"		188119	0					
ANR	188148	Callee	emit_param		188119	0					
ANR	188149	Identifier	emit_param		188119	0					
ANR	188150	ArgumentList	"""STRING"""		188119	1					
ANR	188151	Argument	"""STRING"""		188119	0					
ANR	188152	PrimaryExpression	"""STRING"""		188119	0					
ANR	188153	Argument	input		188119	1					
ANR	188154	Identifier	input		188119	0					
ANR	188155	ExpressionStatement	emit_output_expected_header ( )	63:1:2187:2216	188119	4	True				
ANR	188156	CallExpression	emit_output_expected_header ( )		188119	0					
ANR	188157	Callee	emit_output_expected_header		188119	0					
ANR	188158	Identifier	emit_output_expected_header		188119	0					
ANR	188159	ArgumentList			188119	1					
ANR	188160	IdentifierDeclStatement	int expected = 790 ;	64:1:2219:2237	188119	5	True				
ANR	188161	IdentifierDecl	expected = 790		188119	0					
ANR	188162	IdentifierDeclType	int		188119	0					
ANR	188163	Identifier	expected		188119	1					
ANR	188164	AssignmentExpression	expected = 790		188119	2		=			
ANR	188165	Identifier	expected		188119	0					
ANR	188166	PrimaryExpression	790		188119	1					
ANR	188167	ExpressionStatement	"emit_retval ( ""%d"" , expected )"	65:1:2240:2267	188119	6	True				
ANR	188168	CallExpression	"emit_retval ( ""%d"" , expected )"		188119	0					
ANR	188169	Callee	emit_retval		188119	0					
ANR	188170	Identifier	emit_retval		188119	0					
ANR	188171	ArgumentList	"""%d"""		188119	1					
ANR	188172	Argument	"""%d"""		188119	0					
ANR	188173	PrimaryExpression	"""%d"""		188119	0					
ANR	188174	Argument	expected		188119	1					
ANR	188175	Identifier	expected		188119	0					
ANR	188176	ExpressionStatement	emit_output_actual_header ( )	66:1:2270:2297	188119	7	True				
ANR	188177	CallExpression	emit_output_actual_header ( )		188119	0					
ANR	188178	Callee	emit_output_actual_header		188119	0					
ANR	188179	Identifier	emit_output_actual_header		188119	0					
ANR	188180	ArgumentList			188119	1					
ANR	188181	IdentifierDeclStatement	int result = getPortFromAddr ( input ) ;	67:1:2300:2335	188119	8	True				
ANR	188182	IdentifierDecl	result = getPortFromAddr ( input )		188119	0					
ANR	188183	IdentifierDeclType	int		188119	0					
ANR	188184	Identifier	result		188119	1					
ANR	188185	AssignmentExpression	result = getPortFromAddr ( input )		188119	2		=			
ANR	188186	Identifier	result		188119	0					
ANR	188187	CallExpression	getPortFromAddr ( input )		188119	1					
ANR	188188	Callee	getPortFromAddr		188119	0					
ANR	188189	Identifier	getPortFromAddr		188119	0					
ANR	188190	ArgumentList	input		188119	1					
ANR	188191	Argument	input		188119	0					
ANR	188192	Identifier	input		188119	0					
ANR	188193	ExpressionStatement	free ( input )	68:1:2338:2349	188119	9	True				
ANR	188194	CallExpression	free ( input )		188119	0					
ANR	188195	Callee	free		188119	0					
ANR	188196	Identifier	free		188119	0					
ANR	188197	ArgumentList	input		188119	1					
ANR	188198	Argument	input		188119	0					
ANR	188199	Identifier	input		188119	0					
ANR	188200	ExpressionStatement	"emit_retval ( ""%d"" , result )"	69:1:2352:2377	188119	10	True				
ANR	188201	CallExpression	"emit_retval ( ""%d"" , result )"		188119	0					
ANR	188202	Callee	emit_retval		188119	0					
ANR	188203	Identifier	emit_retval		188119	0					
ANR	188204	ArgumentList	"""%d"""		188119	1					
ANR	188205	Argument	"""%d"""		188119	0					
ANR	188206	PrimaryExpression	"""%d"""		188119	0					
ANR	188207	Argument	result		188119	1					
ANR	188208	Identifier	result		188119	0					
ANR	188209	IfStatement	if ( expected != result )		188119	11					
ANR	188210	Condition	expected != result	70:4:2383:2400	188119	0	True				
ANR	188211	EqualityExpression	expected != result		188119	0		!=			
ANR	188212	Identifier	expected		188119	0					
ANR	188213	Identifier	result		188119	1					
ANR	188214	CompoundStatement		13:24:366:366	188119	1					
ANR	188215	ExpressionStatement	FAIL	71:2:2407:2411	188119	0	True				
ANR	188216	Identifier	FAIL		188119	0					
ANR	188217	ExpressionStatement	PASS	73:1:2417:2421	188119	12	True				
ANR	188218	Identifier	PASS		188119	0					
ANR	188219	ReturnType	static bool		188119	1					
ANR	188220	Identifier	test_normal_case		188119	2					
ANR	188221	ParameterList			188119	3					
ANR	188222	CFGEntryNode	ENTRY		188119		True				
ANR	188223	CFGExitNode	EXIT		188119		True				
ANR	188224	Symbol	result		188119						
ANR	188225	Symbol	input		188119						
ANR	188226	Symbol	expected		188119						
ANR	188227	Symbol	strdup		188119						
ANR	188228	Symbol	getPortFromAddr		188119						
ANR	188229	Function	test_no_brackets	76:0:2426:2852							
ANR	188230	FunctionDef	test_no_brackets ()		188229	0					
ANR	188231	CompoundStatement		76:31:2457:2852	188229	0					
ANR	188232	ExpressionStatement	"emit_test ( ""Is input parsed correctly without angle brackets?"" )"	77:1:2460:2522	188229	0	True				
ANR	188233	CallExpression	"emit_test ( ""Is input parsed correctly without angle brackets?"" )"		188229	0					
ANR	188234	Callee	emit_test		188229	0					
ANR	188235	Identifier	emit_test		188229	0					
ANR	188236	ArgumentList	"""Is input parsed correctly without angle brackets?"""		188229	1					
ANR	188237	Argument	"""Is input parsed correctly without angle brackets?"""		188229	0					
ANR	188238	PrimaryExpression	"""Is input parsed correctly without angle brackets?"""		188229	0					
ANR	188239	IdentifierDeclStatement	"char * input = strdup ( ""37.94.3.21:4"" ) ;"	78:1:2525:2563	188229	1	True				
ANR	188240	IdentifierDecl	"* input = strdup ( ""37.94.3.21:4"" )"		188229	0					
ANR	188241	IdentifierDeclType	char *		188229	0					
ANR	188242	Identifier	input		188229	1					
ANR	188243	AssignmentExpression	"* input = strdup ( ""37.94.3.21:4"" )"		188229	2		=			
ANR	188244	Identifier	input		188229	0					
ANR	188245	CallExpression	"strdup ( ""37.94.3.21:4"" )"		188229	1					
ANR	188246	Callee	strdup		188229	0					
ANR	188247	Identifier	strdup		188229	0					
ANR	188248	ArgumentList	"""37.94.3.21:4"""		188229	1					
ANR	188249	Argument	"""37.94.3.21:4"""		188229	0					
ANR	188250	PrimaryExpression	"""37.94.3.21:4"""		188229	0					
ANR	188251	ExpressionStatement	emit_input_header ( )	79:1:2566:2585	188229	2	True				
ANR	188252	CallExpression	emit_input_header ( )		188229	0					
ANR	188253	Callee	emit_input_header		188229	0					
ANR	188254	Identifier	emit_input_header		188229	0					
ANR	188255	ArgumentList			188229	1					
ANR	188256	ExpressionStatement	"emit_param ( ""STRING"" , input )"	80:1:2588:2615	188229	3	True				
ANR	188257	CallExpression	"emit_param ( ""STRING"" , input )"		188229	0					
ANR	188258	Callee	emit_param		188229	0					
ANR	188259	Identifier	emit_param		188229	0					
ANR	188260	ArgumentList	"""STRING"""		188229	1					
ANR	188261	Argument	"""STRING"""		188229	0					
ANR	188262	PrimaryExpression	"""STRING"""		188229	0					
ANR	188263	Argument	input		188229	1					
ANR	188264	Identifier	input		188229	0					
ANR	188265	ExpressionStatement	emit_output_expected_header ( )	81:1:2618:2647	188229	4	True				
ANR	188266	CallExpression	emit_output_expected_header ( )		188229	0					
ANR	188267	Callee	emit_output_expected_header		188229	0					
ANR	188268	Identifier	emit_output_expected_header		188229	0					
ANR	188269	ArgumentList			188229	1					
ANR	188270	IdentifierDeclStatement	int expected = 4 ;	82:1:2650:2666	188229	5	True				
ANR	188271	IdentifierDecl	expected = 4		188229	0					
ANR	188272	IdentifierDeclType	int		188229	0					
ANR	188273	Identifier	expected		188229	1					
ANR	188274	AssignmentExpression	expected = 4		188229	2		=			
ANR	188275	Identifier	expected		188229	0					
ANR	188276	PrimaryExpression	4		188229	1					
ANR	188277	ExpressionStatement	"emit_retval ( ""%d"" , expected )"	83:1:2669:2696	188229	6	True				
ANR	188278	CallExpression	"emit_retval ( ""%d"" , expected )"		188229	0					
ANR	188279	Callee	emit_retval		188229	0					
ANR	188280	Identifier	emit_retval		188229	0					
ANR	188281	ArgumentList	"""%d"""		188229	1					
ANR	188282	Argument	"""%d"""		188229	0					
ANR	188283	PrimaryExpression	"""%d"""		188229	0					
ANR	188284	Argument	expected		188229	1					
ANR	188285	Identifier	expected		188229	0					
ANR	188286	ExpressionStatement	emit_output_actual_header ( )	84:1:2699:2726	188229	7	True				
ANR	188287	CallExpression	emit_output_actual_header ( )		188229	0					
ANR	188288	Callee	emit_output_actual_header		188229	0					
ANR	188289	Identifier	emit_output_actual_header		188229	0					
ANR	188290	ArgumentList			188229	1					
ANR	188291	IdentifierDeclStatement	int result = getPortFromAddr ( input ) ;	85:1:2729:2764	188229	8	True				
ANR	188292	IdentifierDecl	result = getPortFromAddr ( input )		188229	0					
ANR	188293	IdentifierDeclType	int		188229	0					
ANR	188294	Identifier	result		188229	1					
ANR	188295	AssignmentExpression	result = getPortFromAddr ( input )		188229	2		=			
ANR	188296	Identifier	result		188229	0					
ANR	188297	CallExpression	getPortFromAddr ( input )		188229	1					
ANR	188298	Callee	getPortFromAddr		188229	0					
ANR	188299	Identifier	getPortFromAddr		188229	0					
ANR	188300	ArgumentList	input		188229	1					
ANR	188301	Argument	input		188229	0					
ANR	188302	Identifier	input		188229	0					
ANR	188303	ExpressionStatement	free ( input )	86:1:2767:2778	188229	9	True				
ANR	188304	CallExpression	free ( input )		188229	0					
ANR	188305	Callee	free		188229	0					
ANR	188306	Identifier	free		188229	0					
ANR	188307	ArgumentList	input		188229	1					
ANR	188308	Argument	input		188229	0					
ANR	188309	Identifier	input		188229	0					
ANR	188310	ExpressionStatement	"emit_retval ( ""%d"" , result )"	87:1:2781:2806	188229	10	True				
ANR	188311	CallExpression	"emit_retval ( ""%d"" , result )"		188229	0					
ANR	188312	Callee	emit_retval		188229	0					
ANR	188313	Identifier	emit_retval		188229	0					
ANR	188314	ArgumentList	"""%d"""		188229	1					
ANR	188315	Argument	"""%d"""		188229	0					
ANR	188316	PrimaryExpression	"""%d"""		188229	0					
ANR	188317	Argument	result		188229	1					
ANR	188318	Identifier	result		188229	0					
ANR	188319	IfStatement	if ( expected != result )		188229	11					
ANR	188320	Condition	expected != result	88:4:2812:2829	188229	0	True				
ANR	188321	EqualityExpression	expected != result		188229	0		!=			
ANR	188322	Identifier	expected		188229	0					
ANR	188323	Identifier	result		188229	1					
ANR	188324	CompoundStatement		13:24:374:374	188229	1					
ANR	188325	ExpressionStatement	FAIL	89:2:2836:2840	188229	0	True				
ANR	188326	Identifier	FAIL		188229	0					
ANR	188327	ExpressionStatement	PASS	91:1:2846:2850	188229	12	True				
ANR	188328	Identifier	PASS		188229	0					
ANR	188329	ReturnType	static bool		188229	1					
ANR	188330	Identifier	test_no_brackets		188229	2					
ANR	188331	ParameterList			188229	3					
ANR	188332	CFGEntryNode	ENTRY		188229		True				
ANR	188333	CFGExitNode	EXIT		188229		True				
ANR	188334	Symbol	result		188229						
ANR	188335	Symbol	input		188229						
ANR	188336	Symbol	expected		188229						
ANR	188337	Symbol	strdup		188229						
ANR	188338	Symbol	getPortFromAddr		188229						
ANR	188339	Function	test_no_port	94:0:2855:3276							
ANR	188340	FunctionDef	test_no_port ()		188339	0					
ANR	188341	CompoundStatement		94:27:2882:3276	188339	0					
ANR	188342	ExpressionStatement	"emit_test ( ""Is an error thrown if no port number is supplied?"" )"	95:1:2885:2947	188339	0	True				
ANR	188343	CallExpression	"emit_test ( ""Is an error thrown if no port number is supplied?"" )"		188339	0					
ANR	188344	Callee	emit_test		188339	0					
ANR	188345	Identifier	emit_test		188339	0					
ANR	188346	ArgumentList	"""Is an error thrown if no port number is supplied?"""		188339	1					
ANR	188347	Argument	"""Is an error thrown if no port number is supplied?"""		188339	0					
ANR	188348	PrimaryExpression	"""Is an error thrown if no port number is supplied?"""		188339	0					
ANR	188349	IdentifierDeclStatement	"char * input = strdup ( ""37.94.3.21"" ) ;"	96:1:2950:2986	188339	1	True				
ANR	188350	IdentifierDecl	"* input = strdup ( ""37.94.3.21"" )"		188339	0					
ANR	188351	IdentifierDeclType	char *		188339	0					
ANR	188352	Identifier	input		188339	1					
ANR	188353	AssignmentExpression	"* input = strdup ( ""37.94.3.21"" )"		188339	2		=			
ANR	188354	Identifier	input		188339	0					
ANR	188355	CallExpression	"strdup ( ""37.94.3.21"" )"		188339	1					
ANR	188356	Callee	strdup		188339	0					
ANR	188357	Identifier	strdup		188339	0					
ANR	188358	ArgumentList	"""37.94.3.21"""		188339	1					
ANR	188359	Argument	"""37.94.3.21"""		188339	0					
ANR	188360	PrimaryExpression	"""37.94.3.21"""		188339	0					
ANR	188361	ExpressionStatement	emit_input_header ( )	97:1:2989:3008	188339	2	True				
ANR	188362	CallExpression	emit_input_header ( )		188339	0					
ANR	188363	Callee	emit_input_header		188339	0					
ANR	188364	Identifier	emit_input_header		188339	0					
ANR	188365	ArgumentList			188339	1					
ANR	188366	ExpressionStatement	"emit_param ( ""STRING"" , input )"	98:1:3011:3038	188339	3	True				
ANR	188367	CallExpression	"emit_param ( ""STRING"" , input )"		188339	0					
ANR	188368	Callee	emit_param		188339	0					
ANR	188369	Identifier	emit_param		188339	0					
ANR	188370	ArgumentList	"""STRING"""		188339	1					
ANR	188371	Argument	"""STRING"""		188339	0					
ANR	188372	PrimaryExpression	"""STRING"""		188339	0					
ANR	188373	Argument	input		188339	1					
ANR	188374	Identifier	input		188339	0					
ANR	188375	ExpressionStatement	emit_output_expected_header ( )	99:1:3041:3070	188339	4	True				
ANR	188376	CallExpression	emit_output_expected_header ( )		188339	0					
ANR	188377	Callee	emit_output_expected_header		188339	0					
ANR	188378	Identifier	emit_output_expected_header		188339	0					
ANR	188379	ArgumentList			188339	1					
ANR	188380	IdentifierDeclStatement	int expected = - 1 ;	100:1:3073:3090	188339	5	True				
ANR	188381	IdentifierDecl	expected = - 1		188339	0					
ANR	188382	IdentifierDeclType	int		188339	0					
ANR	188383	Identifier	expected		188339	1					
ANR	188384	AssignmentExpression	expected = - 1		188339	2		=			
ANR	188385	Identifier	expected		188339	0					
ANR	188386	UnaryOperationExpression	- 1		188339	1					
ANR	188387	UnaryOperator	-		188339	0					
ANR	188388	PrimaryExpression	1		188339	1					
ANR	188389	ExpressionStatement	"emit_retval ( ""%d"" , expected )"	101:1:3093:3120	188339	6	True				
ANR	188390	CallExpression	"emit_retval ( ""%d"" , expected )"		188339	0					
ANR	188391	Callee	emit_retval		188339	0					
ANR	188392	Identifier	emit_retval		188339	0					
ANR	188393	ArgumentList	"""%d"""		188339	1					
ANR	188394	Argument	"""%d"""		188339	0					
ANR	188395	PrimaryExpression	"""%d"""		188339	0					
ANR	188396	Argument	expected		188339	1					
ANR	188397	Identifier	expected		188339	0					
ANR	188398	ExpressionStatement	emit_output_actual_header ( )	102:1:3123:3150	188339	7	True				
ANR	188399	CallExpression	emit_output_actual_header ( )		188339	0					
ANR	188400	Callee	emit_output_actual_header		188339	0					
ANR	188401	Identifier	emit_output_actual_header		188339	0					
ANR	188402	ArgumentList			188339	1					
ANR	188403	IdentifierDeclStatement	int result = getPortFromAddr ( input ) ;	103:1:3153:3188	188339	8	True				
ANR	188404	IdentifierDecl	result = getPortFromAddr ( input )		188339	0					
ANR	188405	IdentifierDeclType	int		188339	0					
ANR	188406	Identifier	result		188339	1					
ANR	188407	AssignmentExpression	result = getPortFromAddr ( input )		188339	2		=			
ANR	188408	Identifier	result		188339	0					
ANR	188409	CallExpression	getPortFromAddr ( input )		188339	1					
ANR	188410	Callee	getPortFromAddr		188339	0					
ANR	188411	Identifier	getPortFromAddr		188339	0					
ANR	188412	ArgumentList	input		188339	1					
ANR	188413	Argument	input		188339	0					
ANR	188414	Identifier	input		188339	0					
ANR	188415	ExpressionStatement	free ( input )	104:1:3191:3202	188339	9	True				
ANR	188416	CallExpression	free ( input )		188339	0					
ANR	188417	Callee	free		188339	0					
ANR	188418	Identifier	free		188339	0					
ANR	188419	ArgumentList	input		188339	1					
ANR	188420	Argument	input		188339	0					
ANR	188421	Identifier	input		188339	0					
ANR	188422	ExpressionStatement	"emit_retval ( ""%d"" , result )"	105:1:3205:3230	188339	10	True				
ANR	188423	CallExpression	"emit_retval ( ""%d"" , result )"		188339	0					
ANR	188424	Callee	emit_retval		188339	0					
ANR	188425	Identifier	emit_retval		188339	0					
ANR	188426	ArgumentList	"""%d"""		188339	1					
ANR	188427	Argument	"""%d"""		188339	0					
ANR	188428	PrimaryExpression	"""%d"""		188339	0					
ANR	188429	Argument	result		188339	1					
ANR	188430	Identifier	result		188339	0					
ANR	188431	IfStatement	if ( expected != result )		188339	11					
ANR	188432	Condition	expected != result	106:4:3236:3253	188339	0	True				
ANR	188433	EqualityExpression	expected != result		188339	0		!=			
ANR	188434	Identifier	expected		188339	0					
ANR	188435	Identifier	result		188339	1					
ANR	188436	CompoundStatement		13:24:373:373	188339	1					
ANR	188437	ExpressionStatement	FAIL	107:2:3260:3264	188339	0	True				
ANR	188438	Identifier	FAIL		188339	0					
ANR	188439	ExpressionStatement	PASS	109:1:3270:3274	188339	12	True				
ANR	188440	Identifier	PASS		188339	0					
ANR	188441	ReturnType	static bool		188339	1					
ANR	188442	Identifier	test_no_port		188339	2					
ANR	188443	ParameterList			188339	3					
ANR	188444	CFGEntryNode	ENTRY		188339		True				
ANR	188445	CFGExitNode	EXIT		188339		True				
ANR	188446	Symbol	result		188339						
ANR	188447	Symbol	input		188339						
ANR	188448	Symbol	expected		188339						
ANR	188449	Symbol	strdup		188339						
ANR	188450	Symbol	getPortFromAddr		188339						
ANR	188451	Function	test_negative_port	112:0:3279:3712							
ANR	188452	FunctionDef	test_negative_port ()		188451	0					
ANR	188453	CompoundStatement		112:33:3312:3712	188451	0					
ANR	188454	ExpressionStatement	"emit_test ( ""Is an error thrown if the port number is negative?"" )"	113:1:3315:3378	188451	0	True				
ANR	188455	CallExpression	"emit_test ( ""Is an error thrown if the port number is negative?"" )"		188451	0					
ANR	188456	Callee	emit_test		188451	0					
ANR	188457	Identifier	emit_test		188451	0					
ANR	188458	ArgumentList	"""Is an error thrown if the port number is negative?"""		188451	1					
ANR	188459	Argument	"""Is an error thrown if the port number is negative?"""		188451	0					
ANR	188460	PrimaryExpression	"""Is an error thrown if the port number is negative?"""		188451	0					
ANR	188461	IdentifierDeclStatement	"char * input = strdup ( ""37.94.3.21:-497"" ) ;"	114:1:3381:3422	188451	1	True				
ANR	188462	IdentifierDecl	"* input = strdup ( ""37.94.3.21:-497"" )"		188451	0					
ANR	188463	IdentifierDeclType	char *		188451	0					
ANR	188464	Identifier	input		188451	1					
ANR	188465	AssignmentExpression	"* input = strdup ( ""37.94.3.21:-497"" )"		188451	2		=			
ANR	188466	Identifier	input		188451	0					
ANR	188467	CallExpression	"strdup ( ""37.94.3.21:-497"" )"		188451	1					
ANR	188468	Callee	strdup		188451	0					
ANR	188469	Identifier	strdup		188451	0					
ANR	188470	ArgumentList	"""37.94.3.21:-497"""		188451	1					
ANR	188471	Argument	"""37.94.3.21:-497"""		188451	0					
ANR	188472	PrimaryExpression	"""37.94.3.21:-497"""		188451	0					
ANR	188473	ExpressionStatement	emit_input_header ( )	115:1:3425:3444	188451	2	True				
ANR	188474	CallExpression	emit_input_header ( )		188451	0					
ANR	188475	Callee	emit_input_header		188451	0					
ANR	188476	Identifier	emit_input_header		188451	0					
ANR	188477	ArgumentList			188451	1					
ANR	188478	ExpressionStatement	"emit_param ( ""STRING"" , input )"	116:1:3447:3474	188451	3	True				
ANR	188479	CallExpression	"emit_param ( ""STRING"" , input )"		188451	0					
ANR	188480	Callee	emit_param		188451	0					
ANR	188481	Identifier	emit_param		188451	0					
ANR	188482	ArgumentList	"""STRING"""		188451	1					
ANR	188483	Argument	"""STRING"""		188451	0					
ANR	188484	PrimaryExpression	"""STRING"""		188451	0					
ANR	188485	Argument	input		188451	1					
ANR	188486	Identifier	input		188451	0					
ANR	188487	ExpressionStatement	emit_output_expected_header ( )	117:1:3477:3506	188451	4	True				
ANR	188488	CallExpression	emit_output_expected_header ( )		188451	0					
ANR	188489	Callee	emit_output_expected_header		188451	0					
ANR	188490	Identifier	emit_output_expected_header		188451	0					
ANR	188491	ArgumentList			188451	1					
ANR	188492	IdentifierDeclStatement	int expected = - 1 ;	118:1:3509:3526	188451	5	True				
ANR	188493	IdentifierDecl	expected = - 1		188451	0					
ANR	188494	IdentifierDeclType	int		188451	0					
ANR	188495	Identifier	expected		188451	1					
ANR	188496	AssignmentExpression	expected = - 1		188451	2		=			
ANR	188497	Identifier	expected		188451	0					
ANR	188498	UnaryOperationExpression	- 1		188451	1					
ANR	188499	UnaryOperator	-		188451	0					
ANR	188500	PrimaryExpression	1		188451	1					
ANR	188501	ExpressionStatement	"emit_retval ( ""%d"" , expected )"	119:1:3529:3556	188451	6	True				
ANR	188502	CallExpression	"emit_retval ( ""%d"" , expected )"		188451	0					
ANR	188503	Callee	emit_retval		188451	0					
ANR	188504	Identifier	emit_retval		188451	0					
ANR	188505	ArgumentList	"""%d"""		188451	1					
ANR	188506	Argument	"""%d"""		188451	0					
ANR	188507	PrimaryExpression	"""%d"""		188451	0					
ANR	188508	Argument	expected		188451	1					
ANR	188509	Identifier	expected		188451	0					
ANR	188510	ExpressionStatement	emit_output_actual_header ( )	120:1:3559:3586	188451	7	True				
ANR	188511	CallExpression	emit_output_actual_header ( )		188451	0					
ANR	188512	Callee	emit_output_actual_header		188451	0					
ANR	188513	Identifier	emit_output_actual_header		188451	0					
ANR	188514	ArgumentList			188451	1					
ANR	188515	IdentifierDeclStatement	int result = getPortFromAddr ( input ) ;	121:1:3589:3624	188451	8	True				
ANR	188516	IdentifierDecl	result = getPortFromAddr ( input )		188451	0					
ANR	188517	IdentifierDeclType	int		188451	0					
ANR	188518	Identifier	result		188451	1					
ANR	188519	AssignmentExpression	result = getPortFromAddr ( input )		188451	2		=			
ANR	188520	Identifier	result		188451	0					
ANR	188521	CallExpression	getPortFromAddr ( input )		188451	1					
ANR	188522	Callee	getPortFromAddr		188451	0					
ANR	188523	Identifier	getPortFromAddr		188451	0					
ANR	188524	ArgumentList	input		188451	1					
ANR	188525	Argument	input		188451	0					
ANR	188526	Identifier	input		188451	0					
ANR	188527	ExpressionStatement	free ( input )	122:1:3627:3638	188451	9	True				
ANR	188528	CallExpression	free ( input )		188451	0					
ANR	188529	Callee	free		188451	0					
ANR	188530	Identifier	free		188451	0					
ANR	188531	ArgumentList	input		188451	1					
ANR	188532	Argument	input		188451	0					
ANR	188533	Identifier	input		188451	0					
ANR	188534	ExpressionStatement	"emit_retval ( ""%d"" , result )"	123:1:3641:3666	188451	10	True				
ANR	188535	CallExpression	"emit_retval ( ""%d"" , result )"		188451	0					
ANR	188536	Callee	emit_retval		188451	0					
ANR	188537	Identifier	emit_retval		188451	0					
ANR	188538	ArgumentList	"""%d"""		188451	1					
ANR	188539	Argument	"""%d"""		188451	0					
ANR	188540	PrimaryExpression	"""%d"""		188451	0					
ANR	188541	Argument	result		188451	1					
ANR	188542	Identifier	result		188451	0					
ANR	188543	IfStatement	if ( expected != result )		188451	11					
ANR	188544	Condition	expected != result	124:4:3672:3689	188451	0	True				
ANR	188545	EqualityExpression	expected != result		188451	0		!=			
ANR	188546	Identifier	expected		188451	0					
ANR	188547	Identifier	result		188451	1					
ANR	188548	CompoundStatement		13:24:379:379	188451	1					
ANR	188549	ExpressionStatement	FAIL	125:2:3696:3700	188451	0	True				
ANR	188550	Identifier	FAIL		188451	0					
ANR	188551	ExpressionStatement	PASS	127:1:3706:3710	188451	12	True				
ANR	188552	Identifier	PASS		188451	0					
ANR	188553	ReturnType	static bool		188451	1					
ANR	188554	Identifier	test_negative_port		188451	2					
ANR	188555	ParameterList			188451	3					
ANR	188556	CFGEntryNode	ENTRY		188451		True				
ANR	188557	CFGExitNode	EXIT		188451		True				
ANR	188558	Symbol	result		188451						
ANR	188559	Symbol	input		188451						
ANR	188560	Symbol	expected		188451						
ANR	188561	Symbol	strdup		188451						
ANR	188562	Symbol	getPortFromAddr		188451						
ANR	188563	Function	test_large_port_number	130:0:3715:4180							
ANR	188564	FunctionDef	test_large_port_number ()		188563	0					
ANR	188565	CompoundStatement		130:37:3752:4180	188563	0					
ANR	188566	ExpressionStatement	"emit_test ( ""Is an error thrown if the port number is crazy big (bigger than an int)?"" )"	131:1:3755:3840	188563	0	True				
ANR	188567	CallExpression	"emit_test ( ""Is an error thrown if the port number is crazy big (bigger than an int)?"" )"		188563	0					
ANR	188568	Callee	emit_test		188563	0					
ANR	188569	Identifier	emit_test		188563	0					
ANR	188570	ArgumentList	"""Is an error thrown if the port number is crazy big (bigger than an int)?"""		188563	1					
ANR	188571	Argument	"""Is an error thrown if the port number is crazy big (bigger than an int)?"""		188563	0					
ANR	188572	PrimaryExpression	"""Is an error thrown if the port number is crazy big (bigger than an int)?"""		188563	0					
ANR	188573	IdentifierDeclStatement	"char * input = strdup ( ""37.94.3.21:7569872365"" ) ;"	132:1:3843:3890	188563	1	True				
ANR	188574	IdentifierDecl	"* input = strdup ( ""37.94.3.21:7569872365"" )"		188563	0					
ANR	188575	IdentifierDeclType	char *		188563	0					
ANR	188576	Identifier	input		188563	1					
ANR	188577	AssignmentExpression	"* input = strdup ( ""37.94.3.21:7569872365"" )"		188563	2		=			
ANR	188578	Identifier	input		188563	0					
ANR	188579	CallExpression	"strdup ( ""37.94.3.21:7569872365"" )"		188563	1					
ANR	188580	Callee	strdup		188563	0					
ANR	188581	Identifier	strdup		188563	0					
ANR	188582	ArgumentList	"""37.94.3.21:7569872365"""		188563	1					
ANR	188583	Argument	"""37.94.3.21:7569872365"""		188563	0					
ANR	188584	PrimaryExpression	"""37.94.3.21:7569872365"""		188563	0					
ANR	188585	ExpressionStatement	emit_input_header ( )	133:1:3893:3912	188563	2	True				
ANR	188586	CallExpression	emit_input_header ( )		188563	0					
ANR	188587	Callee	emit_input_header		188563	0					
ANR	188588	Identifier	emit_input_header		188563	0					
ANR	188589	ArgumentList			188563	1					
ANR	188590	ExpressionStatement	"emit_param ( ""STRING"" , input )"	134:1:3915:3942	188563	3	True				
ANR	188591	CallExpression	"emit_param ( ""STRING"" , input )"		188563	0					
ANR	188592	Callee	emit_param		188563	0					
ANR	188593	Identifier	emit_param		188563	0					
ANR	188594	ArgumentList	"""STRING"""		188563	1					
ANR	188595	Argument	"""STRING"""		188563	0					
ANR	188596	PrimaryExpression	"""STRING"""		188563	0					
ANR	188597	Argument	input		188563	1					
ANR	188598	Identifier	input		188563	0					
ANR	188599	ExpressionStatement	emit_output_expected_header ( )	135:1:3945:3974	188563	4	True				
ANR	188600	CallExpression	emit_output_expected_header ( )		188563	0					
ANR	188601	Callee	emit_output_expected_header		188563	0					
ANR	188602	Identifier	emit_output_expected_header		188563	0					
ANR	188603	ArgumentList			188563	1					
ANR	188604	IdentifierDeclStatement	int expected = - 1 ;	136:1:3977:3994	188563	5	True				
ANR	188605	IdentifierDecl	expected = - 1		188563	0					
ANR	188606	IdentifierDeclType	int		188563	0					
ANR	188607	Identifier	expected		188563	1					
ANR	188608	AssignmentExpression	expected = - 1		188563	2		=			
ANR	188609	Identifier	expected		188563	0					
ANR	188610	UnaryOperationExpression	- 1		188563	1					
ANR	188611	UnaryOperator	-		188563	0					
ANR	188612	PrimaryExpression	1		188563	1					
ANR	188613	ExpressionStatement	"emit_retval ( ""%d"" , expected )"	137:1:3997:4024	188563	6	True				
ANR	188614	CallExpression	"emit_retval ( ""%d"" , expected )"		188563	0					
ANR	188615	Callee	emit_retval		188563	0					
ANR	188616	Identifier	emit_retval		188563	0					
ANR	188617	ArgumentList	"""%d"""		188563	1					
ANR	188618	Argument	"""%d"""		188563	0					
ANR	188619	PrimaryExpression	"""%d"""		188563	0					
ANR	188620	Argument	expected		188563	1					
ANR	188621	Identifier	expected		188563	0					
ANR	188622	ExpressionStatement	emit_output_actual_header ( )	138:1:4027:4054	188563	7	True				
ANR	188623	CallExpression	emit_output_actual_header ( )		188563	0					
ANR	188624	Callee	emit_output_actual_header		188563	0					
ANR	188625	Identifier	emit_output_actual_header		188563	0					
ANR	188626	ArgumentList			188563	1					
ANR	188627	IdentifierDeclStatement	int result = getPortFromAddr ( input ) ;	139:1:4057:4092	188563	8	True				
ANR	188628	IdentifierDecl	result = getPortFromAddr ( input )		188563	0					
ANR	188629	IdentifierDeclType	int		188563	0					
ANR	188630	Identifier	result		188563	1					
ANR	188631	AssignmentExpression	result = getPortFromAddr ( input )		188563	2		=			
ANR	188632	Identifier	result		188563	0					
ANR	188633	CallExpression	getPortFromAddr ( input )		188563	1					
ANR	188634	Callee	getPortFromAddr		188563	0					
ANR	188635	Identifier	getPortFromAddr		188563	0					
ANR	188636	ArgumentList	input		188563	1					
ANR	188637	Argument	input		188563	0					
ANR	188638	Identifier	input		188563	0					
ANR	188639	ExpressionStatement	free ( input )	140:1:4095:4106	188563	9	True				
ANR	188640	CallExpression	free ( input )		188563	0					
ANR	188641	Callee	free		188563	0					
ANR	188642	Identifier	free		188563	0					
ANR	188643	ArgumentList	input		188563	1					
ANR	188644	Argument	input		188563	0					
ANR	188645	Identifier	input		188563	0					
ANR	188646	ExpressionStatement	"emit_retval ( ""%d"" , result )"	141:1:4109:4134	188563	10	True				
ANR	188647	CallExpression	"emit_retval ( ""%d"" , result )"		188563	0					
ANR	188648	Callee	emit_retval		188563	0					
ANR	188649	Identifier	emit_retval		188563	0					
ANR	188650	ArgumentList	"""%d"""		188563	1					
ANR	188651	Argument	"""%d"""		188563	0					
ANR	188652	PrimaryExpression	"""%d"""		188563	0					
ANR	188653	Argument	result		188563	1					
ANR	188654	Identifier	result		188563	0					
ANR	188655	IfStatement	if ( expected != result )		188563	11					
ANR	188656	Condition	expected != result	142:4:4140:4157	188563	0	True				
ANR	188657	EqualityExpression	expected != result		188563	0		!=			
ANR	188658	Identifier	expected		188563	0					
ANR	188659	Identifier	result		188563	1					
ANR	188660	CompoundStatement		13:24:407:407	188563	1					
ANR	188661	ExpressionStatement	FAIL	143:2:4164:4168	188563	0	True				
ANR	188662	Identifier	FAIL		188563	0					
ANR	188663	ExpressionStatement	PASS	145:1:4174:4178	188563	12	True				
ANR	188664	Identifier	PASS		188563	0					
ANR	188665	ReturnType	static bool		188563	1					
ANR	188666	Identifier	test_large_port_number		188563	2					
ANR	188667	ParameterList			188563	3					
ANR	188668	CFGEntryNode	ENTRY		188563		True				
ANR	188669	CFGExitNode	EXIT		188563		True				
ANR	188670	Symbol	result		188563						
ANR	188671	Symbol	input		188563						
ANR	188672	Symbol	expected		188563						
ANR	188673	Symbol	strdup		188563						
ANR	188674	Symbol	getPortFromAddr		188563						
ANR	188675	Function	test_alpha_port	148:0:4183:4626							
ANR	188676	FunctionDef	test_alpha_port ()		188675	0					
ANR	188677	CompoundStatement		148:30:4213:4626	188675	0					
ANR	188678	ExpressionStatement	"emit_test ( ""Is an error thrown if text is used instead of a port number?"" )"	149:1:4216:4289	188675	0	True				
ANR	188679	CallExpression	"emit_test ( ""Is an error thrown if text is used instead of a port number?"" )"		188675	0					
ANR	188680	Callee	emit_test		188675	0					
ANR	188681	Identifier	emit_test		188675	0					
ANR	188682	ArgumentList	"""Is an error thrown if text is used instead of a port number?"""		188675	1					
ANR	188683	Argument	"""Is an error thrown if text is used instead of a port number?"""		188675	0					
ANR	188684	PrimaryExpression	"""Is an error thrown if text is used instead of a port number?"""		188675	0					
ANR	188685	IdentifierDeclStatement	"char * input = strdup ( ""37.94.3.21:penguin"" ) ;"	150:1:4292:4336	188675	1	True				
ANR	188686	IdentifierDecl	"* input = strdup ( ""37.94.3.21:penguin"" )"		188675	0					
ANR	188687	IdentifierDeclType	char *		188675	0					
ANR	188688	Identifier	input		188675	1					
ANR	188689	AssignmentExpression	"* input = strdup ( ""37.94.3.21:penguin"" )"		188675	2		=			
ANR	188690	Identifier	input		188675	0					
ANR	188691	CallExpression	"strdup ( ""37.94.3.21:penguin"" )"		188675	1					
ANR	188692	Callee	strdup		188675	0					
ANR	188693	Identifier	strdup		188675	0					
ANR	188694	ArgumentList	"""37.94.3.21:penguin"""		188675	1					
ANR	188695	Argument	"""37.94.3.21:penguin"""		188675	0					
ANR	188696	PrimaryExpression	"""37.94.3.21:penguin"""		188675	0					
ANR	188697	ExpressionStatement	emit_input_header ( )	151:1:4339:4358	188675	2	True				
ANR	188698	CallExpression	emit_input_header ( )		188675	0					
ANR	188699	Callee	emit_input_header		188675	0					
ANR	188700	Identifier	emit_input_header		188675	0					
ANR	188701	ArgumentList			188675	1					
ANR	188702	ExpressionStatement	"emit_param ( ""STRING"" , input )"	152:1:4361:4388	188675	3	True				
ANR	188703	CallExpression	"emit_param ( ""STRING"" , input )"		188675	0					
ANR	188704	Callee	emit_param		188675	0					
ANR	188705	Identifier	emit_param		188675	0					
ANR	188706	ArgumentList	"""STRING"""		188675	1					
ANR	188707	Argument	"""STRING"""		188675	0					
ANR	188708	PrimaryExpression	"""STRING"""		188675	0					
ANR	188709	Argument	input		188675	1					
ANR	188710	Identifier	input		188675	0					
ANR	188711	ExpressionStatement	emit_output_expected_header ( )	153:1:4391:4420	188675	4	True				
ANR	188712	CallExpression	emit_output_expected_header ( )		188675	0					
ANR	188713	Callee	emit_output_expected_header		188675	0					
ANR	188714	Identifier	emit_output_expected_header		188675	0					
ANR	188715	ArgumentList			188675	1					
ANR	188716	IdentifierDeclStatement	int expected = - 1 ;	154:1:4423:4440	188675	5	True				
ANR	188717	IdentifierDecl	expected = - 1		188675	0					
ANR	188718	IdentifierDeclType	int		188675	0					
ANR	188719	Identifier	expected		188675	1					
ANR	188720	AssignmentExpression	expected = - 1		188675	2		=			
ANR	188721	Identifier	expected		188675	0					
ANR	188722	UnaryOperationExpression	- 1		188675	1					
ANR	188723	UnaryOperator	-		188675	0					
ANR	188724	PrimaryExpression	1		188675	1					
ANR	188725	ExpressionStatement	"emit_retval ( ""%d"" , expected )"	155:1:4443:4470	188675	6	True				
ANR	188726	CallExpression	"emit_retval ( ""%d"" , expected )"		188675	0					
ANR	188727	Callee	emit_retval		188675	0					
ANR	188728	Identifier	emit_retval		188675	0					
ANR	188729	ArgumentList	"""%d"""		188675	1					
ANR	188730	Argument	"""%d"""		188675	0					
ANR	188731	PrimaryExpression	"""%d"""		188675	0					
ANR	188732	Argument	expected		188675	1					
ANR	188733	Identifier	expected		188675	0					
ANR	188734	ExpressionStatement	emit_output_actual_header ( )	156:1:4473:4500	188675	7	True				
ANR	188735	CallExpression	emit_output_actual_header ( )		188675	0					
ANR	188736	Callee	emit_output_actual_header		188675	0					
ANR	188737	Identifier	emit_output_actual_header		188675	0					
ANR	188738	ArgumentList			188675	1					
ANR	188739	IdentifierDeclStatement	int result = getPortFromAddr ( input ) ;	157:1:4503:4538	188675	8	True				
ANR	188740	IdentifierDecl	result = getPortFromAddr ( input )		188675	0					
ANR	188741	IdentifierDeclType	int		188675	0					
ANR	188742	Identifier	result		188675	1					
ANR	188743	AssignmentExpression	result = getPortFromAddr ( input )		188675	2		=			
ANR	188744	Identifier	result		188675	0					
ANR	188745	CallExpression	getPortFromAddr ( input )		188675	1					
ANR	188746	Callee	getPortFromAddr		188675	0					
ANR	188747	Identifier	getPortFromAddr		188675	0					
ANR	188748	ArgumentList	input		188675	1					
ANR	188749	Argument	input		188675	0					
ANR	188750	Identifier	input		188675	0					
ANR	188751	ExpressionStatement	free ( input )	158:1:4541:4552	188675	9	True				
ANR	188752	CallExpression	free ( input )		188675	0					
ANR	188753	Callee	free		188675	0					
ANR	188754	Identifier	free		188675	0					
ANR	188755	ArgumentList	input		188675	1					
ANR	188756	Argument	input		188675	0					
ANR	188757	Identifier	input		188675	0					
ANR	188758	ExpressionStatement	"emit_retval ( ""%d"" , result )"	159:1:4555:4580	188675	10	True				
ANR	188759	CallExpression	"emit_retval ( ""%d"" , result )"		188675	0					
ANR	188760	Callee	emit_retval		188675	0					
ANR	188761	Identifier	emit_retval		188675	0					
ANR	188762	ArgumentList	"""%d"""		188675	1					
ANR	188763	Argument	"""%d"""		188675	0					
ANR	188764	PrimaryExpression	"""%d"""		188675	0					
ANR	188765	Argument	result		188675	1					
ANR	188766	Identifier	result		188675	0					
ANR	188767	IfStatement	if ( expected != result )		188675	11					
ANR	188768	Condition	expected != result	160:4:4586:4603	188675	0	True				
ANR	188769	EqualityExpression	expected != result		188675	0		!=			
ANR	188770	Identifier	expected		188675	0					
ANR	188771	Identifier	result		188675	1					
ANR	188772	CompoundStatement		13:24:392:392	188675	1					
ANR	188773	ExpressionStatement	FAIL	161:2:4610:4614	188675	0	True				
ANR	188774	Identifier	FAIL		188675	0					
ANR	188775	ExpressionStatement	PASS	163:1:4620:4624	188675	12	True				
ANR	188776	Identifier	PASS		188675	0					
ANR	188777	ReturnType	static bool		188675	1					
ANR	188778	Identifier	test_alpha_port		188675	2					
ANR	188779	ParameterList			188675	3					
ANR	188780	CFGEntryNode	ENTRY		188675		True				
ANR	188781	CFGExitNode	EXIT		188675		True				
ANR	188782	Symbol	result		188675						
ANR	188783	Symbol	input		188675						
ANR	188784	Symbol	expected		188675						
ANR	188785	Symbol	strdup		188675						
ANR	188786	Symbol	getPortFromAddr		188675						
