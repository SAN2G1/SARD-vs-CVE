command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3947563	File	data/converged/CVE-2011-4930_htcondor/src_condor_startd.V6_starter_mgr.cpp								
ANR	3947564	Function	StarterMgr :: StarterMgr	41:0:1387:1414							
ANR	3947565	FunctionDef	StarterMgr :: StarterMgr ()		3947564	0					
ANR	3947566	CompoundStatement		42:0:1412:1414	3947564	0					
ANR	3947567	Identifier	StarterMgr :: StarterMgr		3947564	1					
ANR	3947568	ParameterList			3947564	2					
ANR	3947569	CFGEntryNode	ENTRY		3947564		True				
ANR	3947570	CFGExitNode	EXIT		3947564		True				
ANR	3947571	Function	StarterMgr :: ~StarterMgr	46:0:1418:1584							
ANR	3947572	FunctionDef	StarterMgr :: ~StarterMgr ()		3947571	0					
ANR	3947573	CompoundStatement		47:0:1444:1584	3947571	0					
ANR	3947574	IdentifierDeclStatement	Starter * tmp_starter ;	48:1:1447:1467	3947571	0	True				
ANR	3947575	IdentifierDecl	* tmp_starter		3947571	0					
ANR	3947576	IdentifierDeclType	Starter *		3947571	0					
ANR	3947577	Identifier	tmp_starter		3947571	1					
ANR	3947578	ExpressionStatement	starters . Rewind ( )	49:1:1470:1487	3947571	1	True				
ANR	3947579	CallExpression	starters . Rewind ( )		3947571	0					
ANR	3947580	Callee	starters . Rewind		3947571	0					
ANR	3947581	MemberAccess	starters . Rewind		3947571	0					
ANR	3947582	Identifier	starters		3947571	0					
ANR	3947583	Identifier	Rewind		3947571	1					
ANR	3947584	ArgumentList			3947571	1					
ANR	3947585	WhileStatement	while ( starters . Next ( tmp_starter ) )		3947571	2					
ANR	3947586	Condition	starters . Next ( tmp_starter )	50:8:1497:1522	3947571	0	True				
ANR	3947587	CallExpression	starters . Next ( tmp_starter )		3947571	0					
ANR	3947588	Callee	starters . Next		3947571	0					
ANR	3947589	MemberAccess	starters . Next		3947571	0					
ANR	3947590	Identifier	starters		3947571	0					
ANR	3947591	Identifier	Next		3947571	1					
ANR	3947592	ArgumentList	tmp_starter		3947571	1					
ANR	3947593	Argument	tmp_starter		3947571	0					
ANR	3947594	Identifier	tmp_starter		3947571	0					
ANR	3947595	CompoundStatement		4:37:81:81	3947571	1					
ANR	3947596	Statement	delete	51:2:1530:1535	3947571	0	True				
ANR	3947597	ExpressionStatement	tmp_starter	51:8:1536:1551	3947571	1	True				
ANR	3947598	Identifier	tmp_starter		3947571	0					
ANR	3947599	ExpressionStatement	starters . DeleteCurrent ( )	52:2:1555:1579	3947571	2	True				
ANR	3947600	CallExpression	starters . DeleteCurrent ( )		3947571	0					
ANR	3947601	Callee	starters . DeleteCurrent		3947571	0					
ANR	3947602	MemberAccess	starters . DeleteCurrent		3947571	0					
ANR	3947603	Identifier	starters		3947571	0					
ANR	3947604	Identifier	DeleteCurrent		3947571	1					
ANR	3947605	ArgumentList			3947571	1					
ANR	3947606	Identifier	StarterMgr :: ~StarterMgr		3947571	1					
ANR	3947607	ParameterList			3947571	2					
ANR	3947608	CFGEntryNode	ENTRY		3947571		True				
ANR	3947609	CFGExitNode	EXIT		3947571		True				
ANR	3947610	Symbol	tmp_starter		3947571						
ANR	3947611	Symbol	starters		3947571						
ANR	3947612	Symbol	starters . Next		3947571						
ANR	3947613	Function	StarterMgr :: init	57:0:1588:3531							
ANR	3947614	FunctionDef	StarterMgr :: init ()		3947613	0					
ANR	3947615	CompoundStatement		59:0:1618:3531	3947613	0					
ANR	3947616	Statement	static	60:1:1621:1626	3947613	0	True				
ANR	3947617	IdentifierDeclStatement	bool did_warning = false ;	60:8:1628:1652	3947613	1	True				
ANR	3947618	IdentifierDecl	did_warning = false		3947613	0					
ANR	3947619	IdentifierDeclType	bool		3947613	0					
ANR	3947620	Identifier	did_warning		3947613	1					
ANR	3947621	AssignmentExpression	did_warning = false		3947613	2		=			
ANR	3947622	Identifier	false		3947613	0					
ANR	3947623	Identifier	false		3947613	1					
ANR	3947624	IdentifierDeclStatement	StringList starter_list ;	61:1:1655:1678	3947613	2	True				
ANR	3947625	IdentifierDecl	starter_list		3947613	0					
ANR	3947626	IdentifierDeclType	StringList		3947613	0					
ANR	3947627	Identifier	starter_list		3947613	1					
ANR	3947628	IdentifierDeclStatement	StringList checked_starter_list ;	62:1:1681:1712	3947613	3	True				
ANR	3947629	IdentifierDecl	checked_starter_list		3947613	0					
ANR	3947630	IdentifierDeclType	StringList		3947613	0					
ANR	3947631	Identifier	checked_starter_list		3947613	1					
ANR	3947632	IdentifierDeclStatement	Starter * tmp_starter ;	63:1:1715:1735	3947613	4	True				
ANR	3947633	IdentifierDecl	* tmp_starter		3947613	0					
ANR	3947634	IdentifierDeclType	Starter *		3947613	0					
ANR	3947635	Identifier	tmp_starter		3947613	1					
ANR	3947636	ExpressionStatement	starters . Rewind ( )	64:1:1738:1755	3947613	5	True				
ANR	3947637	CallExpression	starters . Rewind ( )		3947613	0					
ANR	3947638	Callee	starters . Rewind		3947613	0					
ANR	3947639	MemberAccess	starters . Rewind		3947613	0					
ANR	3947640	Identifier	starters		3947613	0					
ANR	3947641	Identifier	Rewind		3947613	1					
ANR	3947642	ArgumentList			3947613	1					
ANR	3947643	WhileStatement	while ( starters . Next ( tmp_starter ) )		3947613	6					
ANR	3947644	Condition	starters . Next ( tmp_starter )	65:8:1765:1790	3947613	0	True				
ANR	3947645	CallExpression	starters . Next ( tmp_starter )		3947613	0					
ANR	3947646	Callee	starters . Next		3947613	0					
ANR	3947647	MemberAccess	starters . Next		3947613	0					
ANR	3947648	Identifier	starters		3947613	0					
ANR	3947649	Identifier	Next		3947613	1					
ANR	3947650	ArgumentList	tmp_starter		3947613	1					
ANR	3947651	Argument	tmp_starter		3947613	0					
ANR	3947652	Identifier	tmp_starter		3947613	0					
ANR	3947653	CompoundStatement		7:37:175:175	3947613	1					
ANR	3947654	Statement	delete	66:2:1798:1803	3947613	0	True				
ANR	3947655	ExpressionStatement	tmp_starter	66:8:1804:1819	3947613	1	True				
ANR	3947656	Identifier	tmp_starter		3947613	0					
ANR	3947657	ExpressionStatement	starters . DeleteCurrent ( )	67:2:1823:1847	3947613	2	True				
ANR	3947658	CallExpression	starters . DeleteCurrent ( )		3947613	0					
ANR	3947659	Callee	starters . DeleteCurrent		3947613	0					
ANR	3947660	MemberAccess	starters . DeleteCurrent		3947613	0					
ANR	3947661	Identifier	starters		3947613	0					
ANR	3947662	Identifier	DeleteCurrent		3947613	1					
ANR	3947663	ArgumentList			3947613	1					
ANR	3947664	IdentifierDeclStatement	"char * tmp , * starter_path = NULL ;"	70:1:1854:1885	3947613	7	True				
ANR	3947665	IdentifierDecl	* tmp		3947613	0					
ANR	3947666	IdentifierDeclType	char *		3947613	0					
ANR	3947667	Identifier	tmp		3947613	1					
ANR	3947668	IdentifierDecl	* starter_path = NULL		3947613	1					
ANR	3947669	IdentifierDeclType	char *		3947613	0					
ANR	3947670	Identifier	starter_path		3947613	1					
ANR	3947671	AssignmentExpression	* starter_path = NULL		3947613	2		=			
ANR	3947672	Identifier	NULL		3947613	0					
ANR	3947673	Identifier	NULL		3947613	1					
ANR	3947674	ExpressionStatement	"tmp = param ( ""STARTER_LIST"" )"	71:1:1888:1917	3947613	8	True				
ANR	3947675	AssignmentExpression	"tmp = param ( ""STARTER_LIST"" )"		3947613	0		=			
ANR	3947676	Identifier	tmp		3947613	0					
ANR	3947677	CallExpression	"param ( ""STARTER_LIST"" )"		3947613	1					
ANR	3947678	Callee	param		3947613	0					
ANR	3947679	Identifier	param		3947613	0					
ANR	3947680	ArgumentList	"""STARTER_LIST"""		3947613	1					
ANR	3947681	Argument	"""STARTER_LIST"""		3947613	0					
ANR	3947682	PrimaryExpression	"""STARTER_LIST"""		3947613	0					
ANR	3947683	IfStatement	if ( ! tmp )		3947613	9					
ANR	3947684	Condition	! tmp	72:5:1924:1928	3947613	0	True				
ANR	3947685	UnaryOperationExpression	! tmp		3947613	0					
ANR	3947686	UnaryOperator	!		3947613	0					
ANR	3947687	Identifier	tmp		3947613	1					
ANR	3947688	CompoundStatement		14:13:313:313	3947613	1					
ANR	3947689	Statement	tmp	74:2:1975:1977	3947613	0	True				
ANR	3947690	Statement	=	74:6:1979:1979	3947613	1	True				
ANR	3947691	Statement	strdup	74:8:1981:1986	3947613	2	True				
ANR	3947692	Statement	(	74:14:1987:1987	3947613	3	True				
ANR	3947693	Statement	"""STARTER, STARTER_1, STARTER_2, """	74:16:1989:2021	3947613	4	True				
ANR	3947694	Statement	"""ALTERNATE_STARTER_1, ALTERNATE_STARTER_2"""	75:7:2030:2071	3947613	5	True				
ANR	3947695	Statement	)	75:50:2073:2073	3947613	6	True				
ANR	3947696	ExpressionStatement		75:51:2074:2074	3947613	7	True				
ANR	3947697	IfStatement	if ( ! did_warning )		3947613	8					
ANR	3947698	Condition	! did_warning	76:6:2082:2094	3947613	0	True				
ANR	3947699	UnaryOperationExpression	! did_warning		3947613	0					
ANR	3947700	UnaryOperator	!		3947613	0					
ANR	3947701	Identifier	did_warning		3947613	1					
ANR	3947702	CompoundStatement		18:22:479:479	3947613	1					
ANR	3947703	Statement	dprintf	77:3:2103:2109	3947613	0	True				
ANR	3947704	Statement	(	77:10:2110:2110	3947613	1	True				
ANR	3947705	Statement	D_ALWAYS	77:11:2111:2118	3947613	2	True				
ANR	3947706	Statement	","	77:19:2119:2119	3947613	3	True				
ANR	3947707	Statement	"""WARNING: STARTER_LIST not defined in config file, """	78:5:2126:2177	3947613	4	True				
ANR	3947708	Statement	"""using default: %s\\n"""	79:5:2184:2204	3947613	5	True				
ANR	3947709	Statement	","	79:26:2205:2205	3947613	6	True				
ANR	3947710	Statement	tmp	79:28:2207:2209	3947613	7	True				
ANR	3947711	Statement	)	79:31:2210:2210	3947613	8	True				
ANR	3947712	ExpressionStatement		79:32:2211:2211	3947613	9	True				
ANR	3947713	ExpressionStatement	did_warning = true	80:3:2216:2234	3947613	10	True				
ANR	3947714	AssignmentExpression	did_warning = true		3947613	0		=			
ANR	3947715	Identifier	did_warning		3947613	0					
ANR	3947716	Identifier	true		3947613	1					
ANR	3947717	ExpressionStatement	starter_list . initializeFromString ( tmp )	83:1:2244:2284	3947613	10	True				
ANR	3947718	CallExpression	starter_list . initializeFromString ( tmp )		3947613	0					
ANR	3947719	Callee	starter_list . initializeFromString		3947613	0					
ANR	3947720	MemberAccess	starter_list . initializeFromString		3947613	0					
ANR	3947721	Identifier	starter_list		3947613	0					
ANR	3947722	Identifier	initializeFromString		3947613	1					
ANR	3947723	ArgumentList	tmp		3947613	1					
ANR	3947724	Argument	tmp		3947613	0					
ANR	3947725	Identifier	tmp		3947613	0					
ANR	3947726	ExpressionStatement	free ( tmp )	84:1:2287:2298	3947613	11	True				
ANR	3947727	CallExpression	free ( tmp )		3947613	0					
ANR	3947728	Callee	free		3947613	0					
ANR	3947729	Identifier	free		3947613	0					
ANR	3947730	ArgumentList	tmp		3947613	1					
ANR	3947731	Argument	tmp		3947613	0					
ANR	3947732	Identifier	tmp		3947613	0					
ANR	3947733	ExpressionStatement	starter_list . rewind ( )	86:1:2302:2323	3947613	12	True				
ANR	3947734	CallExpression	starter_list . rewind ( )		3947613	0					
ANR	3947735	Callee	starter_list . rewind		3947613	0					
ANR	3947736	MemberAccess	starter_list . rewind		3947613	0					
ANR	3947737	Identifier	starter_list		3947613	0					
ANR	3947738	Identifier	rewind		3947613	1					
ANR	3947739	ArgumentList			3947613	1					
ANR	3947740	WhileStatement	while ( ( tmp = starter_list . next ( ) ) )		3947613	13					
ANR	3947741	Condition	tmp = starter_list . next ( )	87:8:2333:2359	3947613	0	True				
ANR	3947742	AssignmentExpression	tmp = starter_list . next ( )		3947613	0		=			
ANR	3947743	Identifier	tmp		3947613	0					
ANR	3947744	CallExpression	starter_list . next ( )		3947613	1					
ANR	3947745	Callee	starter_list . next		3947613	0					
ANR	3947746	MemberAccess	starter_list . next		3947613	0					
ANR	3947747	Identifier	starter_list		3947613	0					
ANR	3947748	Identifier	next		3947613	1					
ANR	3947749	ArgumentList			3947613	1					
ANR	3947750	CompoundStatement		29:38:744:744	3947613	1					
ANR	3947751	ExpressionStatement	starter_path = param ( tmp )	88:2:2367:2394	3947613	0	True				
ANR	3947752	AssignmentExpression	starter_path = param ( tmp )		3947613	0		=			
ANR	3947753	Identifier	starter_path		3947613	0					
ANR	3947754	CallExpression	param ( tmp )		3947613	1					
ANR	3947755	Callee	param		3947613	0					
ANR	3947756	Identifier	param		3947613	0					
ANR	3947757	ArgumentList	tmp		3947613	1					
ANR	3947758	Argument	tmp		3947613	0					
ANR	3947759	Identifier	tmp		3947613	0					
ANR	3947760	IfStatement	if ( ! starter_path )		3947613	1					
ANR	3947761	Condition	! starter_path	89:6:2402:2415	3947613	0	True				
ANR	3947762	UnaryOperationExpression	! starter_path		3947613	0					
ANR	3947763	UnaryOperator	!		3947613	0					
ANR	3947764	Identifier	starter_path		3947613	1					
ANR	3947765	CompoundStatement		31:23:800:800	3947613	1					
ANR	3947766	Statement	dprintf	90:3:2424:2430	3947613	0	True				
ANR	3947767	Statement	(	90:10:2431:2431	3947613	1	True				
ANR	3947768	Statement	D_ALWAYS	90:12:2433:2440	3947613	2	True				
ANR	3947769	Statement	","	90:20:2441:2441	3947613	3	True				
ANR	3947770	Statement	"""Starter specified in STARTER_LIST """	90:22:2443:2478	3947613	4	True				
ANR	3947771	Statement	"""\\""%s\\"" not found in config file, ignoring.\\n"""	91:6:2486:2531	3947613	5	True				
ANR	3947772	Statement	","	91:52:2532:2532	3947613	6	True				
ANR	3947773	Statement	tmp	92:6:2540:2542	3947613	7	True				
ANR	3947774	Statement	)	92:10:2544:2544	3947613	8	True				
ANR	3947775	ExpressionStatement		92:11:2545:2545	3947613	9	True				
ANR	3947776	ContinueStatement	continue ;	93:3:2551:2559	3947613	10	True				
ANR	3947777	IfStatement	if ( checked_starter_list . contains ( starter_path ) )		3947613	2					
ANR	3947778	Condition	checked_starter_list . contains ( starter_path )	95:6:2571:2613	3947613	0	True				
ANR	3947779	CallExpression	checked_starter_list . contains ( starter_path )		3947613	0					
ANR	3947780	Callee	checked_starter_list . contains		3947613	0					
ANR	3947781	MemberAccess	checked_starter_list . contains		3947613	0					
ANR	3947782	Identifier	checked_starter_list		3947613	0					
ANR	3947783	Identifier	contains		3947613	1					
ANR	3947784	ArgumentList	starter_path		3947613	1					
ANR	3947785	Argument	starter_path		3947613	0					
ANR	3947786	Identifier	starter_path		3947613	0					
ANR	3947787	CompoundStatement		37:52:998:998	3947613	1					
ANR	3947788	Statement	dprintf	96:3:2622:2628	3947613	0	True				
ANR	3947789	Statement	(	96:10:2629:2629	3947613	1	True				
ANR	3947790	Statement	D_ALWAYS	96:12:2631:2638	3947613	2	True				
ANR	3947791	Statement	","	96:20:2639:2639	3947613	3	True				
ANR	3947792	Statement	"""Starter pointed to by \\""%s\\"" (%s) is """	96:22:2641:2679	3947613	4	True				
ANR	3947793	Statement	"""in STARTER_LIST more than once, ignoring.\\n"""	97:6:2687:2731	3947613	5	True				
ANR	3947794	Statement	","	97:51:2732:2732	3947613	6	True				
ANR	3947795	Statement	tmp	98:6:2741:2743	3947613	7	True				
ANR	3947796	Statement	","	98:9:2744:2744	3947613	8	True				
ANR	3947797	Statement	starter_path	98:11:2746:2757	3947613	9	True				
ANR	3947798	Statement	)	98:24:2759:2759	3947613	10	True				
ANR	3947799	ExpressionStatement		98:25:2760:2760	3947613	11	True				
ANR	3947800	ExpressionStatement	free ( starter_path )	99:3:2765:2783	3947613	12	True				
ANR	3947801	CallExpression	free ( starter_path )		3947613	0					
ANR	3947802	Callee	free		3947613	0					
ANR	3947803	Identifier	free		3947613	0					
ANR	3947804	ArgumentList	starter_path		3947613	1					
ANR	3947805	Argument	starter_path		3947613	0					
ANR	3947806	Identifier	starter_path		3947613	0					
ANR	3947807	ContinueStatement	continue ;	100:3:2788:2796	3947613	13	True				
ANR	3947808	ExpressionStatement	tmp_starter = makeStarter ( starter_path )	107:2:3034:3075	3947613	3	True				
ANR	3947809	AssignmentExpression	tmp_starter = makeStarter ( starter_path )		3947613	0		=			
ANR	3947810	Identifier	tmp_starter		3947613	0					
ANR	3947811	CallExpression	makeStarter ( starter_path )		3947613	1					
ANR	3947812	Callee	makeStarter		3947613	0					
ANR	3947813	Identifier	makeStarter		3947613	0					
ANR	3947814	ArgumentList	starter_path		3947613	1					
ANR	3947815	Argument	starter_path		3947613	0					
ANR	3947816	Identifier	starter_path		3947613	0					
ANR	3947817	IfStatement	if ( tmp_starter )		3947613	4					
ANR	3947818	Condition	tmp_starter	108:6:3083:3093	3947613	0	True				
ANR	3947819	Identifier	tmp_starter		3947613	0					
ANR	3947820	CompoundStatement		50:20:1478:1478	3947613	1					
ANR	3947821	ExpressionStatement	starters . Append ( tmp_starter )	109:3:3102:3132	3947613	0	True				
ANR	3947822	CallExpression	starters . Append ( tmp_starter )		3947613	0					
ANR	3947823	Callee	starters . Append		3947613	0					
ANR	3947824	MemberAccess	starters . Append		3947613	0					
ANR	3947825	Identifier	starters		3947613	0					
ANR	3947826	Identifier	Append		3947613	1					
ANR	3947827	ArgumentList	tmp_starter		3947613	1					
ANR	3947828	Argument	tmp_starter		3947613	0					
ANR	3947829	Identifier	tmp_starter		3947613	0					
ANR	3947830	ExpressionStatement	checked_starter_list . append ( starter_path )	113:2:3253:3296	3947613	5	True				
ANR	3947831	CallExpression	checked_starter_list . append ( starter_path )		3947613	0					
ANR	3947832	Callee	checked_starter_list . append		3947613	0					
ANR	3947833	MemberAccess	checked_starter_list . append		3947613	0					
ANR	3947834	Identifier	checked_starter_list		3947613	0					
ANR	3947835	Identifier	append		3947613	1					
ANR	3947836	ArgumentList	starter_path		3947613	1					
ANR	3947837	Argument	starter_path		3947613	0					
ANR	3947838	Identifier	starter_path		3947613	0					
ANR	3947839	ExpressionStatement	free ( starter_path )	114:2:3300:3320	3947613	6	True				
ANR	3947840	CallExpression	free ( starter_path )		3947613	0					
ANR	3947841	Callee	free		3947613	0					
ANR	3947842	Identifier	free		3947613	0					
ANR	3947843	ArgumentList	starter_path		3947613	1					
ANR	3947844	Argument	starter_path		3947613	0					
ANR	3947845	Identifier	starter_path		3947613	0					
ANR	3947846	IfStatement	if ( starters . IsEmpty ( ) )		3947613	14					
ANR	3947847	Condition	starters . IsEmpty ( )	117:5:3331:3348	3947613	0	True				
ANR	3947848	CallExpression	starters . IsEmpty ( )		3947613	0					
ANR	3947849	Callee	starters . IsEmpty		3947613	0					
ANR	3947850	MemberAccess	starters . IsEmpty		3947613	0					
ANR	3947851	Identifier	starters		3947613	0					
ANR	3947852	Identifier	IsEmpty		3947613	1					
ANR	3947853	ArgumentList			3947613	1					
ANR	3947854	CompoundStatement		59:26:1733:1733	3947613	1					
ANR	3947855	ExpressionStatement	"dprintf ( D_ALWAYS , ""WARNING WARNING WARNING: No valid starters were found!  Is something wrong with your Condor installation?  This startd will not be able to run jobs.\\n"" )"	118:2:3356:3526	3947613	0	True				
ANR	3947856	CallExpression	"dprintf ( D_ALWAYS , ""WARNING WARNING WARNING: No valid starters were found!  Is something wrong with your Condor installation?  This startd will not be able to run jobs.\\n"" )"		3947613	0					
ANR	3947857	Callee	dprintf		3947613	0					
ANR	3947858	Identifier	dprintf		3947613	0					
ANR	3947859	ArgumentList	D_ALWAYS		3947613	1					
ANR	3947860	Argument	D_ALWAYS		3947613	0					
ANR	3947861	Identifier	D_ALWAYS		3947613	0					
ANR	3947862	Argument	"""WARNING WARNING WARNING: No valid starters were found!  Is something wrong with your Condor installation?  This startd will not be able to run jobs.\\n"""		3947613	1					
ANR	3947863	PrimaryExpression	"""WARNING WARNING WARNING: No valid starters were found!  Is something wrong with your Condor installation?  This startd will not be able to run jobs.\\n"""		3947613	0					
ANR	3947864	ReturnType	void		3947613	1					
ANR	3947865	Identifier	StarterMgr :: init		3947613	2					
ANR	3947866	ParameterList			3947613	3					
ANR	3947867	CFGEntryNode	ENTRY		3947613		True				
ANR	3947868	CFGExitNode	EXIT		3947613		True				
ANR	3947869	Symbol	checked_starter_list		3947613						
ANR	3947870	Symbol	starter_list		3947613						
ANR	3947871	Symbol	NULL		3947613						
ANR	3947872	Symbol	checked_starter_list . contains		3947613						
ANR	3947873	Symbol	starter_path		3947613						
ANR	3947874	Symbol	false		3947613						
ANR	3947875	Symbol	D_ALWAYS		3947613						
ANR	3947876	Symbol	makeStarter		3947613						
ANR	3947877	Symbol	starter_list . next		3947613						
ANR	3947878	Symbol	starters . IsEmpty		3947613						
ANR	3947879	Symbol	param		3947613						
ANR	3947880	Symbol	tmp_starter		3947613						
ANR	3947881	Symbol	tmp		3947613						
ANR	3947882	Symbol	starters		3947613						
ANR	3947883	Symbol	true		3947613						
ANR	3947884	Symbol	did_warning		3947613						
ANR	3947885	Symbol	starters . Next		3947613						
ANR	3947886	Function	StarterMgr :: printStarterInfo	123:0:3535:3716							
ANR	3947887	FunctionDef	StarterMgr :: printStarterInfo (int debug_level)		3947886	0					
ANR	3947888	CompoundStatement		125:0:3588:3716	3947886	0					
ANR	3947889	IdentifierDeclStatement	Starter * tmp_starter ;	126:1:3591:3611	3947886	0	True				
ANR	3947890	IdentifierDecl	* tmp_starter		3947886	0					
ANR	3947891	IdentifierDeclType	Starter *		3947886	0					
ANR	3947892	Identifier	tmp_starter		3947886	1					
ANR	3947893	ExpressionStatement	starters . Rewind ( )	127:1:3614:3631	3947886	1	True				
ANR	3947894	CallExpression	starters . Rewind ( )		3947886	0					
ANR	3947895	Callee	starters . Rewind		3947886	0					
ANR	3947896	MemberAccess	starters . Rewind		3947886	0					
ANR	3947897	Identifier	starters		3947886	0					
ANR	3947898	Identifier	Rewind		3947886	1					
ANR	3947899	ArgumentList			3947886	1					
ANR	3947900	WhileStatement	while ( starters . Next ( tmp_starter ) )		3947886	2					
ANR	3947901	Condition	starters . Next ( tmp_starter )	128:8:3641:3666	3947886	0	True				
ANR	3947902	CallExpression	starters . Next ( tmp_starter )		3947886	0					
ANR	3947903	Callee	starters . Next		3947886	0					
ANR	3947904	MemberAccess	starters . Next		3947886	0					
ANR	3947905	Identifier	starters		3947886	0					
ANR	3947906	Identifier	Next		3947886	1					
ANR	3947907	ArgumentList	tmp_starter		3947886	1					
ANR	3947908	Argument	tmp_starter		3947886	0					
ANR	3947909	Identifier	tmp_starter		3947886	0					
ANR	3947910	CompoundStatement		4:37:81:81	3947886	1					
ANR	3947911	ExpressionStatement	tmp_starter -> printInfo ( debug_level )	129:2:3674:3711	3947886	0	True				
ANR	3947912	CallExpression	tmp_starter -> printInfo ( debug_level )		3947886	0					
ANR	3947913	Callee	tmp_starter -> printInfo		3947886	0					
ANR	3947914	PtrMemberAccess	tmp_starter -> printInfo		3947886	0					
ANR	3947915	Identifier	tmp_starter		3947886	0					
ANR	3947916	Identifier	printInfo		3947886	1					
ANR	3947917	ArgumentList	debug_level		3947886	1					
ANR	3947918	Argument	debug_level		3947886	0					
ANR	3947919	Identifier	debug_level		3947886	0					
ANR	3947920	ReturnType	void		3947886	1					
ANR	3947921	Identifier	StarterMgr :: printStarterInfo		3947886	2					
ANR	3947922	ParameterList	int debug_level		3947886	3					
ANR	3947923	Parameter	int debug_level	124:30:3570:3584	3947886	0	True				
ANR	3947924	ParameterType	int		3947886	0					
ANR	3947925	Identifier	debug_level		3947886	1					
ANR	3947926	CFGEntryNode	ENTRY		3947886		True				
ANR	3947927	CFGExitNode	EXIT		3947886		True				
ANR	3947928	Symbol	debug_level		3947886						
ANR	3947929	Symbol	tmp_starter		3947886						
ANR	3947930	Symbol	starters		3947886						
ANR	3947931	Symbol	starters . Next		3947886						
ANR	3947932	Function	StarterMgr :: publish	134:0:3720:4449							
ANR	3947933	FunctionDef	"StarterMgr :: publish (ClassAd * ad , amask_t mask)"		3947932	0					
ANR	3947934	CompoundStatement		136:0:3774:4449	3947932	0					
ANR	3947935	IfStatement	if ( ! ( IS_STATIC ( mask ) && IS_PUBLIC ( mask ) ) )		3947932	0					
ANR	3947936	Condition	! ( IS_STATIC ( mask ) && IS_PUBLIC ( mask ) )	137:5:3781:3817	3947932	0	True				
ANR	3947937	UnaryOperationExpression	! ( IS_STATIC ( mask ) && IS_PUBLIC ( mask ) )		3947932	0					
ANR	3947938	UnaryOperator	!		3947932	0					
ANR	3947939	AndExpression	IS_STATIC ( mask ) && IS_PUBLIC ( mask )		3947932	1		&&			
ANR	3947940	CallExpression	IS_STATIC ( mask )		3947932	0					
ANR	3947941	Callee	IS_STATIC		3947932	0					
ANR	3947942	Identifier	IS_STATIC		3947932	0					
ANR	3947943	ArgumentList	mask		3947932	1					
ANR	3947944	Argument	mask		3947932	0					
ANR	3947945	Identifier	mask		3947932	0					
ANR	3947946	CallExpression	IS_PUBLIC ( mask )		3947932	1					
ANR	3947947	Callee	IS_PUBLIC		3947932	0					
ANR	3947948	Identifier	IS_PUBLIC		3947932	0					
ANR	3947949	ArgumentList	mask		3947932	1					
ANR	3947950	Argument	mask		3947932	0					
ANR	3947951	Identifier	mask		3947932	0					
ANR	3947952	CompoundStatement		2:45:46:46	3947932	1					
ANR	3947953	ReturnStatement	return ;	138:2:3825:3831	3947932	0	True				
ANR	3947954	IdentifierDeclStatement	Starter * tmp_starter ;	140:1:3837:3857	3947932	1	True				
ANR	3947955	IdentifierDecl	* tmp_starter		3947932	0					
ANR	3947956	IdentifierDeclType	Starter *		3947932	0					
ANR	3947957	Identifier	tmp_starter		3947932	1					
ANR	3947958	IdentifierDeclStatement	StringList ability_list ;	141:1:3860:3883	3947932	2	True				
ANR	3947959	IdentifierDecl	ability_list		3947932	0					
ANR	3947960	IdentifierDeclType	StringList		3947932	0					
ANR	3947961	Identifier	ability_list		3947932	1					
ANR	3947962	ExpressionStatement	starters . Rewind ( )	142:1:3886:3903	3947932	3	True				
ANR	3947963	CallExpression	starters . Rewind ( )		3947932	0					
ANR	3947964	Callee	starters . Rewind		3947932	0					
ANR	3947965	MemberAccess	starters . Rewind		3947932	0					
ANR	3947966	Identifier	starters		3947932	0					
ANR	3947967	Identifier	Rewind		3947932	1					
ANR	3947968	ArgumentList			3947932	1					
ANR	3947969	WhileStatement	while ( starters . Next ( tmp_starter ) )		3947932	4					
ANR	3947970	Condition	starters . Next ( tmp_starter )	143:8:3913:3938	3947932	0	True				
ANR	3947971	CallExpression	starters . Next ( tmp_starter )		3947932	0					
ANR	3947972	Callee	starters . Next		3947932	0					
ANR	3947973	MemberAccess	starters . Next		3947932	0					
ANR	3947974	Identifier	starters		3947932	0					
ANR	3947975	Identifier	Next		3947932	1					
ANR	3947976	ArgumentList	tmp_starter		3947932	1					
ANR	3947977	Argument	tmp_starter		3947932	0					
ANR	3947978	Identifier	tmp_starter		3947932	0					
ANR	3947979	CompoundStatement		8:37:167:167	3947932	1					
ANR	3947980	ExpressionStatement	"tmp_starter -> publish ( ad , mask , & ability_list )"	144:2:3946:3993	3947932	0	True				
ANR	3947981	CallExpression	"tmp_starter -> publish ( ad , mask , & ability_list )"		3947932	0					
ANR	3947982	Callee	tmp_starter -> publish		3947932	0					
ANR	3947983	PtrMemberAccess	tmp_starter -> publish		3947932	0					
ANR	3947984	Identifier	tmp_starter		3947932	0					
ANR	3947985	Identifier	publish		3947932	1					
ANR	3947986	ArgumentList	ad		3947932	1					
ANR	3947987	Argument	ad		3947932	0					
ANR	3947988	Identifier	ad		3947932	0					
ANR	3947989	Argument	mask		3947932	1					
ANR	3947990	Identifier	mask		3947932	0					
ANR	3947991	Argument	& ability_list		3947932	2					
ANR	3947992	UnaryOperationExpression	& ability_list		3947932	0					
ANR	3947993	UnaryOperator	&		3947932	0					
ANR	3947994	Identifier	ability_list		3947932	1					
ANR	3947995	IdentifierDeclStatement	char * ability_str = ability_list . print_to_string ( ) ;	148:1:4114:4164	3947932	5	True				
ANR	3947996	IdentifierDecl	* ability_str = ability_list . print_to_string ( )		3947932	0					
ANR	3947997	IdentifierDeclType	char *		3947932	0					
ANR	3947998	Identifier	ability_str		3947932	1					
ANR	3947999	AssignmentExpression	* ability_str = ability_list . print_to_string ( )		3947932	2		=			
ANR	3948000	Identifier	ability_str		3947932	0					
ANR	3948001	CallExpression	ability_list . print_to_string ( )		3947932	1					
ANR	3948002	Callee	ability_list . print_to_string		3947932	0					
ANR	3948003	MemberAccess	ability_list . print_to_string		3947932	0					
ANR	3948004	Identifier	ability_list		3947932	0					
ANR	3948005	Identifier	print_to_string		3947932	1					
ANR	3948006	ArgumentList			3947932	1					
ANR	3948007	IfStatement	if ( NULL == ability_str )		3947932	6					
ANR	3948008	Condition	NULL == ability_str	152:6:4293:4311	3947932	0	True				
ANR	3948009	EqualityExpression	NULL == ability_str		3947932	0		==			
ANR	3948010	Identifier	NULL		3947932	0					
ANR	3948011	Identifier	ability_str		3947932	1					
ANR	3948012	CompoundStatement		17:28:540:540	3947932	1					
ANR	3948013	ExpressionStatement	"ability_str = strdup ( ""\\0"" )"	153:2:4319:4345	3947932	0	True				
ANR	3948014	AssignmentExpression	"ability_str = strdup ( ""\\0"" )"		3947932	0		=			
ANR	3948015	Identifier	ability_str		3947932	0					
ANR	3948016	CallExpression	"strdup ( ""\\0"" )"		3947932	1					
ANR	3948017	Callee	strdup		3947932	0					
ANR	3948018	Identifier	strdup		3947932	0					
ANR	3948019	ArgumentList	"""\\0"""		3947932	1					
ANR	3948020	Argument	"""\\0"""		3947932	0					
ANR	3948021	PrimaryExpression	"""\\0"""		3947932	0					
ANR	3948022	ExpressionStatement	ASSERT ( ability_str )	155:1:4351:4370	3947932	7	True				
ANR	3948023	CallExpression	ASSERT ( ability_str )		3947932	0					
ANR	3948024	Callee	ASSERT		3947932	0					
ANR	3948025	Identifier	ASSERT		3947932	0					
ANR	3948026	ArgumentList	ability_str		3947932	1					
ANR	3948027	Argument	ability_str		3947932	0					
ANR	3948028	Identifier	ability_str		3947932	0					
ANR	3948029	ExpressionStatement	"ad -> Assign ( ATTR_STARTER_ABILITY_LIST , ability_str )"	156:1:4373:4425	3947932	8	True				
ANR	3948030	CallExpression	"ad -> Assign ( ATTR_STARTER_ABILITY_LIST , ability_str )"		3947932	0					
ANR	3948031	Callee	ad -> Assign		3947932	0					
ANR	3948032	PtrMemberAccess	ad -> Assign		3947932	0					
ANR	3948033	Identifier	ad		3947932	0					
ANR	3948034	Identifier	Assign		3947932	1					
ANR	3948035	ArgumentList	ATTR_STARTER_ABILITY_LIST		3947932	1					
ANR	3948036	Argument	ATTR_STARTER_ABILITY_LIST		3947932	0					
ANR	3948037	Identifier	ATTR_STARTER_ABILITY_LIST		3947932	0					
ANR	3948038	Argument	ability_str		3947932	1					
ANR	3948039	Identifier	ability_str		3947932	0					
ANR	3948040	ExpressionStatement	free ( ability_str )	157:1:4428:4447	3947932	9	True				
ANR	3948041	CallExpression	free ( ability_str )		3947932	0					
ANR	3948042	Callee	free		3947932	0					
ANR	3948043	Identifier	free		3947932	0					
ANR	3948044	ArgumentList	ability_str		3947932	1					
ANR	3948045	Argument	ability_str		3947932	0					
ANR	3948046	Identifier	ability_str		3947932	0					
ANR	3948047	ReturnType	void		3947932	1					
ANR	3948048	Identifier	StarterMgr :: publish		3947932	2					
ANR	3948049	ParameterList	"ClassAd * ad , amask_t mask"		3947932	3					
ANR	3948050	Parameter	ClassAd * ad	135:21:3746:3756	3947932	0	True				
ANR	3948051	ParameterType	ClassAd *		3947932	0					
ANR	3948052	Identifier	ad		3947932	1					
ANR	3948053	Parameter	amask_t mask	135:34:3759:3770	3947932	1	True				
ANR	3948054	ParameterType	amask_t		3947932	0					
ANR	3948055	Identifier	mask		3947932	1					
ANR	3948056	CFGEntryNode	ENTRY		3947932		True				
ANR	3948057	CFGExitNode	EXIT		3947932		True				
ANR	3948058	Symbol	ad		3947932						
ANR	3948059	Symbol	ability_list		3947932						
ANR	3948060	Symbol	NULL		3947932						
ANR	3948061	Symbol	ATTR_STARTER_ABILITY_LIST		3947932						
ANR	3948062	Symbol	ability_list . print_to_string		3947932						
ANR	3948063	Symbol	& ability_list		3947932						
ANR	3948064	Symbol	IS_STATIC		3947932						
ANR	3948065	Symbol	tmp_starter		3947932						
ANR	3948066	Symbol	ability_str		3947932						
ANR	3948067	Symbol	starters		3947932						
ANR	3948068	Symbol	IS_PUBLIC		3947932						
ANR	3948069	Symbol	starters . Next		3947932						
ANR	3948070	Symbol	strdup		3947932						
ANR	3948071	Symbol	mask		3947932						
ANR	3948072	Function	StarterMgr :: findStarter	161:0:4453:5786							
ANR	3948073	FunctionDef	"StarterMgr :: findStarter (ClassAd * job_ad , ClassAd * mach_ad , bool & no_starter , int starter_num)"		3948072	0					
ANR	3948074	CompoundStatement		164:0:4566:5786	3948072	0					
ANR	3948075	IdentifierDeclStatement	"Starter * new_starter , * tmp_starter ;"	165:1:4569:4603	3948072	0	True				
ANR	3948076	IdentifierDecl	* new_starter		3948072	0					
ANR	3948077	IdentifierDeclType	Starter *		3948072	0					
ANR	3948078	Identifier	new_starter		3948072	1					
ANR	3948079	IdentifierDecl	* tmp_starter		3948072	1					
ANR	3948080	IdentifierDeclType	Starter *		3948072	0					
ANR	3948081	Identifier	tmp_starter		3948072	1					
ANR	3948082	ExpressionStatement	no_starter = true	167:1:4607:4624	3948072	1	True				
ANR	3948083	AssignmentExpression	no_starter = true		3948072	0		=			
ANR	3948084	Identifier	no_starter		3948072	0					
ANR	3948085	Identifier	true		3948072	1					
ANR	3948086	ExpressionStatement	starters . Rewind ( )	169:1:4628:4645	3948072	2	True				
ANR	3948087	CallExpression	starters . Rewind ( )		3948072	0					
ANR	3948088	Callee	starters . Rewind		3948072	0					
ANR	3948089	MemberAccess	starters . Rewind		3948072	0					
ANR	3948090	Identifier	starters		3948072	0					
ANR	3948091	Identifier	Rewind		3948072	1					
ANR	3948092	ArgumentList			3948072	1					
ANR	3948093	WhileStatement	while ( starters . Next ( tmp_starter ) )		3948072	3					
ANR	3948094	Condition	starters . Next ( tmp_starter )	170:8:4655:4680	3948072	0	True				
ANR	3948095	CallExpression	starters . Next ( tmp_starter )		3948072	0					
ANR	3948096	Callee	starters . Next		3948072	0					
ANR	3948097	MemberAccess	starters . Next		3948072	0					
ANR	3948098	Identifier	starters		3948072	0					
ANR	3948099	Identifier	Next		3948072	1					
ANR	3948100	ArgumentList	tmp_starter		3948072	1					
ANR	3948101	Argument	tmp_starter		3948072	0					
ANR	3948102	Identifier	tmp_starter		3948072	0					
ANR	3948103	CompoundStatement		7:37:117:117	3948072	1					
ANR	3948104	SwitchStatement	switch ( starter_num )		3948072	0					
ANR	3948105	Condition	starter_num	171:10:4696:4706	3948072	0	True				
ANR	3948106	Identifier	starter_num		3948072	0					
ANR	3948107	CompoundStatement		8:24:143:143	3948072	1					
ANR	3948108	Statement	case	172:2:4714:4717	3948072	0	True				
ANR	3948109	Statement	-	172:7:4719:4719	3948072	1	True				
ANR	3948110	Label	1 :	172:8:4720:4721	3948072	2	True				
ANR	3948111	BreakStatement	break ;	174:3:4781:4786	3948072	3	True				
ANR	3948112	Label	case 0 :	175:2:4790:4796	3948072	4	True				
ANR	3948113	IfStatement	if ( tmp_starter -> is_dc ( ) || ! ( tmp_starter -> provides ( ATTR_HAS_REMOTE_SYSCALLS ) ) )		3948072	5					
ANR	3948114	Condition	tmp_starter -> is_dc ( ) || ! ( tmp_starter -> provides ( ATTR_HAS_REMOTE_SYSCALLS ) )	177:7:4844:4921	3948072	0	True				
ANR	3948115	OrExpression	tmp_starter -> is_dc ( ) || ! ( tmp_starter -> provides ( ATTR_HAS_REMOTE_SYSCALLS ) )		3948072	0		||			
ANR	3948116	CallExpression	tmp_starter -> is_dc ( )		3948072	0					
ANR	3948117	Callee	tmp_starter -> is_dc		3948072	0					
ANR	3948118	PtrMemberAccess	tmp_starter -> is_dc		3948072	0					
ANR	3948119	Identifier	tmp_starter		3948072	0					
ANR	3948120	Identifier	is_dc		3948072	1					
ANR	3948121	ArgumentList			3948072	1					
ANR	3948122	UnaryOperationExpression	! ( tmp_starter -> provides ( ATTR_HAS_REMOTE_SYSCALLS ) )		3948072	1					
ANR	3948123	UnaryOperator	!		3948072	0					
ANR	3948124	CallExpression	tmp_starter -> provides ( ATTR_HAS_REMOTE_SYSCALLS )		3948072	1					
ANR	3948125	Callee	tmp_starter -> provides		3948072	0					
ANR	3948126	PtrMemberAccess	tmp_starter -> provides		3948072	0					
ANR	3948127	Identifier	tmp_starter		3948072	0					
ANR	3948128	Identifier	provides		3948072	1					
ANR	3948129	ArgumentList	ATTR_HAS_REMOTE_SYSCALLS		3948072	1					
ANR	3948130	Argument	ATTR_HAS_REMOTE_SYSCALLS		3948072	0					
ANR	3948131	Identifier	ATTR_HAS_REMOTE_SYSCALLS		3948072	0					
ANR	3948132	CompoundStatement		15:57:358:358	3948072	1					
ANR	3948133	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Job wants old RSC/Ckpt starter, skipping %s\\n"" , tmp_starter -> path ( ) )"	179:4:4931:5038	3948072	0	True				
ANR	3948134	CallExpression	"dprintf ( D_FULLDEBUG , ""Job wants old RSC/Ckpt starter, skipping %s\\n"" , tmp_starter -> path ( ) )"		3948072	0					
ANR	3948135	Callee	dprintf		3948072	0					
ANR	3948136	Identifier	dprintf		3948072	0					
ANR	3948137	ArgumentList	D_FULLDEBUG		3948072	1					
ANR	3948138	Argument	D_FULLDEBUG		3948072	0					
ANR	3948139	Identifier	D_FULLDEBUG		3948072	0					
ANR	3948140	Argument	"""Job wants old RSC/Ckpt starter, skipping %s\\n"""		3948072	1					
ANR	3948141	PrimaryExpression	"""Job wants old RSC/Ckpt starter, skipping %s\\n"""		3948072	0					
ANR	3948142	Argument	tmp_starter -> path ( )		3948072	2					
ANR	3948143	CallExpression	tmp_starter -> path ( )		3948072	0					
ANR	3948144	Callee	tmp_starter -> path		3948072	0					
ANR	3948145	PtrMemberAccess	tmp_starter -> path		3948072	0					
ANR	3948146	Identifier	tmp_starter		3948072	0					
ANR	3948147	Identifier	path		3948072	1					
ANR	3948148	ArgumentList			3948072	1					
ANR	3948149	ContinueStatement	continue ;	182:4:5044:5052	3948072	1	True				
ANR	3948150	BreakStatement	break ;	184:3:5062:5067	3948072	6	True				
ANR	3948151	Label	case 1 :	185:2:5071:5077	3948072	7	True				
ANR	3948152	Statement	dprintf	187:3:5108:5114	3948072	8	True				
ANR	3948153	Statement	(	187:10:5115:5115	3948072	9	True				
ANR	3948154	Statement	D_ALWAYS	187:12:5117:5124	3948072	10	True				
ANR	3948155	Statement	","	187:20:5125:5125	3948072	11	True				
ANR	3948156	Statement	"""ERROR: PVM starter is not supported, """	187:22:5127:5165	3948072	12	True				
ANR	3948157	Statement	"""returning failure\\n"""	188:6:5173:5193	3948072	13	True				
ANR	3948158	Statement	)	188:28:5195:5195	3948072	14	True				
ANR	3948159	ExpressionStatement		188:29:5196:5196	3948072	15	True				
ANR	3948160	ReturnStatement	return NULL ;	189:3:5201:5212	3948072	16	True				
ANR	3948161	Identifier	NULL		3948072	0					
ANR	3948162	BreakStatement	break ;	190:3:5217:5222	3948072	17	True				
ANR	3948163	Label	case 2 :	191:2:5226:5232	3948072	18	True				
ANR	3948164	IfStatement	if ( ! tmp_starter -> is_dc ( ) )		3948072	19					
ANR	3948165	Condition	! tmp_starter -> is_dc ( )	193:7:5276:5297	3948072	0	True				
ANR	3948166	UnaryOperationExpression	! tmp_starter -> is_dc ( )		3948072	0					
ANR	3948167	UnaryOperator	!		3948072	0					
ANR	3948168	CallExpression	tmp_starter -> is_dc ( )		3948072	1					
ANR	3948169	Callee	tmp_starter -> is_dc		3948072	0					
ANR	3948170	PtrMemberAccess	tmp_starter -> is_dc		3948072	0					
ANR	3948171	Identifier	tmp_starter		3948072	0					
ANR	3948172	Identifier	is_dc		3948072	1					
ANR	3948173	ArgumentList			3948072	1					
ANR	3948174	CompoundStatement		30:32:734:734	3948072	1					
ANR	3948175	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Job wants DaemonCore starter, skipping %s\\n"" , tmp_starter -> path ( ) )"	194:4:5307:5412	3948072	0	True				
ANR	3948176	CallExpression	"dprintf ( D_FULLDEBUG , ""Job wants DaemonCore starter, skipping %s\\n"" , tmp_starter -> path ( ) )"		3948072	0					
ANR	3948177	Callee	dprintf		3948072	0					
ANR	3948178	Identifier	dprintf		3948072	0					
ANR	3948179	ArgumentList	D_FULLDEBUG		3948072	1					
ANR	3948180	Argument	D_FULLDEBUG		3948072	0					
ANR	3948181	Identifier	D_FULLDEBUG		3948072	0					
ANR	3948182	Argument	"""Job wants DaemonCore starter, skipping %s\\n"""		3948072	1					
ANR	3948183	PrimaryExpression	"""Job wants DaemonCore starter, skipping %s\\n"""		3948072	0					
ANR	3948184	Argument	tmp_starter -> path ( )		3948072	2					
ANR	3948185	CallExpression	tmp_starter -> path ( )		3948072	0					
ANR	3948186	Callee	tmp_starter -> path		3948072	0					
ANR	3948187	PtrMemberAccess	tmp_starter -> path		3948072	0					
ANR	3948188	Identifier	tmp_starter		3948072	0					
ANR	3948189	Identifier	path		3948072	1					
ANR	3948190	ArgumentList			3948072	1					
ANR	3948191	ContinueStatement	continue ;	197:4:5418:5426	3948072	1	True				
ANR	3948192	BreakStatement	break ;	199:3:5436:5441	3948072	20	True				
ANR	3948193	Label	default :	200:2:5445:5452	3948072	21	True				
ANR	3948194	Identifier	default		3948072	0					
ANR	3948195	Statement	dprintf	201:3:5457:5463	3948072	22	True				
ANR	3948196	Statement	(	201:10:5464:5464	3948072	23	True				
ANR	3948197	Statement	D_ALWAYS	201:12:5466:5473	3948072	24	True				
ANR	3948198	Statement	","	201:20:5474:5474	3948072	25	True				
ANR	3948199	Statement	"""ERROR: unknown starter type (%d) in """	201:22:5476:5513	3948072	26	True				
ANR	3948200	Statement	"""StarterMgr::findStarter(), returning failure\\n"""	202:6:5521:5568	3948072	27	True				
ANR	3948201	Statement	","	202:54:5569:5569	3948072	28	True				
ANR	3948202	Statement	starter_num	203:6:5577:5587	3948072	29	True				
ANR	3948203	Statement	)	203:18:5589:5589	3948072	30	True				
ANR	3948204	ExpressionStatement		203:19:5590:5590	3948072	31	True				
ANR	3948205	ReturnStatement	return NULL ;	204:3:5595:5606	3948072	32	True				
ANR	3948206	Identifier	NULL		3948072	0					
ANR	3948207	BreakStatement	break ;	205:3:5611:5616	3948072	33	True				
ANR	3948208	ExpressionStatement	no_starter = false	208:2:5625:5643	3948072	1	True				
ANR	3948209	AssignmentExpression	no_starter = false		3948072	0		=			
ANR	3948210	Identifier	no_starter		3948072	0					
ANR	3948211	Identifier	false		3948072	1					
ANR	3948212	IfStatement	"if ( tmp_starter -> satisfies ( job_ad , mach_ad ) )"		3948072	2					
ANR	3948213	Condition	"tmp_starter -> satisfies ( job_ad , mach_ad )"	210:6:5652:5690	3948072	0	True				
ANR	3948214	CallExpression	"tmp_starter -> satisfies ( job_ad , mach_ad )"		3948072	0					
ANR	3948215	Callee	tmp_starter -> satisfies		3948072	0					
ANR	3948216	PtrMemberAccess	tmp_starter -> satisfies		3948072	0					
ANR	3948217	Identifier	tmp_starter		3948072	0					
ANR	3948218	Identifier	satisfies		3948072	1					
ANR	3948219	ArgumentList	job_ad		3948072	1					
ANR	3948220	Argument	job_ad		3948072	0					
ANR	3948221	Identifier	job_ad		3948072	0					
ANR	3948222	Argument	mach_ad		3948072	1					
ANR	3948223	Identifier	mach_ad		3948072	0					
ANR	3948224	CompoundStatement		47:48:1127:1127	3948072	1					
ANR	3948225	ExpressionStatement	new_starter = new Starter ( * tmp_starter )	211:3:5699:5740	3948072	0	True				
ANR	3948226	AssignmentExpression	new_starter = new Starter ( * tmp_starter )		3948072	0		=			
ANR	3948227	Identifier	new_starter		3948072	0					
ANR	3948228	UnaryOperationExpression	* tmp_starter		3948072	1					
ANR	3948229	UnaryOperator	*		3948072	0					
ANR	3948230	Identifier	tmp_starter		3948072	1					
ANR	3948231	ReturnStatement	return new_starter ;	212:3:5745:5763	3948072	1	True				
ANR	3948232	Identifier	new_starter		3948072	0					
ANR	3948233	ReturnStatement	return NULL ;	215:1:5773:5784	3948072	4	True				
ANR	3948234	Identifier	NULL		3948072	0					
ANR	3948235	ReturnType	Starter *		3948072	1					
ANR	3948236	Identifier	StarterMgr :: findStarter		3948072	2					
ANR	3948237	ParameterList	"ClassAd * job_ad , ClassAd * mach_ad , bool & no_starter , int starter_num"		3948072	3					
ANR	3948238	Parameter	ClassAd * job_ad	162:25:4487:4501	3948072	0	True				
ANR	3948239	ParameterType	ClassAd *		3948072	0					
ANR	3948240	Identifier	job_ad		3948072	1					
ANR	3948241	Parameter	ClassAd * mach_ad	162:42:4504:4519	3948072	1	True				
ANR	3948242	ParameterType	ClassAd *		3948072	0					
ANR	3948243	Identifier	mach_ad		3948072	1					
ANR	3948244	Parameter	bool & no_starter	162:60:4522:4537	3948072	2	True				
ANR	3948245	ParameterType	bool &		3948072	0					
ANR	3948246	Identifier	no_starter		3948072	1					
ANR	3948247	Parameter	int starter_num	163:7:4547:4561	3948072	3	True				
ANR	3948248	ParameterType	int		3948072	0					
ANR	3948249	Identifier	starter_num		3948072	1					
ANR	3948250	CFGEntryNode	ENTRY		3948072		True				
ANR	3948251	CFGExitNode	EXIT		3948072		True				
ANR	3948252	Symbol	starter_num		3948072						
ANR	3948253	Symbol	tmp_starter -> is_dc		3948072						
ANR	3948254	Symbol	NULL		3948072						
ANR	3948255	Symbol	no_starter		3948072						
ANR	3948256	Symbol	false		3948072						
ANR	3948257	Symbol	ATTR_HAS_REMOTE_SYSCALLS		3948072						
ANR	3948258	Symbol	D_FULLDEBUG		3948072						
ANR	3948259	Symbol	tmp_starter -> provides		3948072						
ANR	3948260	Symbol	job_ad		3948072						
ANR	3948261	Symbol	tmp_starter -> path		3948072						
ANR	3948262	Symbol	tmp_starter -> satisfies		3948072						
ANR	3948263	Symbol	* tmp_starter		3948072						
ANR	3948264	Symbol	tmp_starter		3948072						
ANR	3948265	Symbol	mach_ad		3948072						
ANR	3948266	Symbol	new_starter		3948072						
ANR	3948267	Symbol	true		3948072						
ANR	3948268	Symbol	starters		3948072						
ANR	3948269	Symbol	starters . Next		3948072						
ANR	3948270	Function	StarterMgr :: makeStarter	219:0:5790:6929							
ANR	3948271	FunctionDef	StarterMgr :: makeStarter (const char * path)		3948270	0					
ANR	3948272	CompoundStatement		221:0:5843:6929	3948270	0					
ANR	3948273	IdentifierDeclStatement	Starter * new_starter ;	222:1:5846:5866	3948270	0	True				
ANR	3948274	IdentifierDecl	* new_starter		3948270	0					
ANR	3948275	IdentifierDeclType	Starter *		3948270	0					
ANR	3948276	Identifier	new_starter		3948270	1					
ANR	3948277	IdentifierDeclStatement	FILE * fp ;	223:1:5869:5877	3948270	1	True				
ANR	3948278	IdentifierDecl	* fp		3948270	0					
ANR	3948279	IdentifierDeclType	FILE *		3948270	0					
ANR	3948280	Identifier	fp		3948270	1					
ANR	3948281	Statement	char	224:1:5880:5883	3948270	2	True				
ANR	3948282	Statement	*	224:6:5885:5885	3948270	3	True				
ANR	3948283	Statement	args	224:7:5886:5889	3948270	4	True				
ANR	3948284	Statement	[	224:11:5890:5890	3948270	5	True				
ANR	3948285	Statement	]	224:12:5891:5891	3948270	6	True				
ANR	3948286	Statement	=	224:14:5893:5893	3948270	7	True				
ANR	3948287	CompoundStatement		4:16:51:51	3948270	8					
ANR	3948288	Statement	const_cast	224:18:5897:5906	3948270	0	True				
ANR	3948289	Statement	<	224:28:5907:5907	3948270	1	True				
ANR	3948290	Statement	char	224:29:5908:5911	3948270	2	True				
ANR	3948291	Statement	*	224:33:5912:5912	3948270	3	True				
ANR	3948292	Statement	>	224:34:5913:5913	3948270	4	True				
ANR	3948293	Statement	(	224:35:5914:5914	3948270	5	True				
ANR	3948294	Statement	path	224:36:5915:5918	3948270	6	True				
ANR	3948295	Statement	)	224:40:5919:5919	3948270	7	True				
ANR	3948296	Statement	","	224:41:5920:5920	3948270	8	True				
ANR	3948297	Statement	const_cast	225:6:5928:5937	3948270	9	True				
ANR	3948298	Statement	<	225:16:5938:5938	3948270	10	True				
ANR	3948299	Statement	char	225:17:5939:5942	3948270	11	True				
ANR	3948300	Statement	*	225:21:5943:5943	3948270	12	True				
ANR	3948301	Statement	>	225:22:5944:5944	3948270	13	True				
ANR	3948302	Statement	(	225:23:5945:5945	3948270	14	True				
ANR	3948303	Statement	"""-classad"""	225:24:5946:5955	3948270	15	True				
ANR	3948304	Statement	)	225:34:5956:5956	3948270	16	True				
ANR	3948305	Statement	","	225:35:5957:5957	3948270	17	True				
ANR	3948306	Statement	NULL	226:6:5965:5968	3948270	18	True				
ANR	3948307	ExpressionStatement		226:12:5971:5971	3948270	9	True				
ANR	3948308	IdentifierDeclStatement	char buf [ 1024 ] ;	227:1:5974:5988	3948270	10	True				
ANR	3948309	IdentifierDecl	buf [ 1024 ]		3948270	0					
ANR	3948310	IdentifierDeclType	char [ 1024 ]		3948270	0					
ANR	3948311	Identifier	buf		3948270	1					
ANR	3948312	PrimaryExpression	1024		3948270	2					
ANR	3948313	ExpressionStatement	"fp = my_popenv ( args , ""r"" , FALSE )"	231:1:6098:6132	3948270	11	True				
ANR	3948314	AssignmentExpression	"fp = my_popenv ( args , ""r"" , FALSE )"		3948270	0		=			
ANR	3948315	Identifier	fp		3948270	0					
ANR	3948316	CallExpression	"my_popenv ( args , ""r"" , FALSE )"		3948270	1					
ANR	3948317	Callee	my_popenv		3948270	0					
ANR	3948318	Identifier	my_popenv		3948270	0					
ANR	3948319	ArgumentList	args		3948270	1					
ANR	3948320	Argument	args		3948270	0					
ANR	3948321	Identifier	args		3948270	0					
ANR	3948322	Argument	"""r"""		3948270	1					
ANR	3948323	PrimaryExpression	"""r"""		3948270	0					
ANR	3948324	Argument	FALSE		3948270	2					
ANR	3948325	Identifier	FALSE		3948270	0					
ANR	3948326	IfStatement	if ( ! fp )		3948270	12					
ANR	3948327	Condition	! fp	233:5:6140:6143	3948270	0	True				
ANR	3948328	UnaryOperationExpression	! fp		3948270	0					
ANR	3948329	UnaryOperator	!		3948270	0					
ANR	3948330	Identifier	fp		3948270	1					
ANR	3948331	CompoundStatement		13:12:303:303	3948270	1					
ANR	3948332	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to execute %s, ignoring\\n"" , path )"	234:2:6151:6212	3948270	0	True				
ANR	3948333	CallExpression	"dprintf ( D_ALWAYS , ""Failed to execute %s, ignoring\\n"" , path )"		3948270	0					
ANR	3948334	Callee	dprintf		3948270	0					
ANR	3948335	Identifier	dprintf		3948270	0					
ANR	3948336	ArgumentList	D_ALWAYS		3948270	1					
ANR	3948337	Argument	D_ALWAYS		3948270	0					
ANR	3948338	Identifier	D_ALWAYS		3948270	0					
ANR	3948339	Argument	"""Failed to execute %s, ignoring\\n"""		3948270	1					
ANR	3948340	PrimaryExpression	"""Failed to execute %s, ignoring\\n"""		3948270	0					
ANR	3948341	Argument	path		3948270	2					
ANR	3948342	Identifier	path		3948270	0					
ANR	3948343	ReturnStatement	return NULL ;	235:2:6216:6227	3948270	1	True				
ANR	3948344	Identifier	NULL		3948270	0					
ANR	3948345	Statement	ClassAd	237:1:6233:6239	3948270	13	True				
ANR	3948346	Statement	*	237:8:6240:6240	3948270	14	True				
ANR	3948347	Statement	ad	237:10:6242:6243	3948270	15	True				
ANR	3948348	Statement	=	237:13:6245:6245	3948270	16	True				
ANR	3948349	Statement	new	237:15:6247:6249	3948270	17	True				
ANR	3948350	ExpressionStatement	ClassAd	237:19:6251:6258	3948270	18	True				
ANR	3948351	Identifier	ClassAd		3948270	0					
ANR	3948352	IdentifierDeclStatement	bool read_something = false ;	238:1:6261:6288	3948270	19	True				
ANR	3948353	IdentifierDecl	read_something = false		3948270	0					
ANR	3948354	IdentifierDeclType	bool		3948270	0					
ANR	3948355	Identifier	read_something		3948270	1					
ANR	3948356	AssignmentExpression	read_something = false		3948270	2		=			
ANR	3948357	Identifier	false		3948270	0					
ANR	3948358	Identifier	false		3948270	1					
ANR	3948359	WhileStatement	"while ( fgets ( buf , 1024 , fp ) )"		3948270	20					
ANR	3948360	Condition	"fgets ( buf , 1024 , fp )"	239:8:6298:6317	3948270	0	True				
ANR	3948361	CallExpression	"fgets ( buf , 1024 , fp )"		3948270	0					
ANR	3948362	Callee	fgets		3948270	0					
ANR	3948363	Identifier	fgets		3948270	0					
ANR	3948364	ArgumentList	buf		3948270	1					
ANR	3948365	Argument	buf		3948270	0					
ANR	3948366	Identifier	buf		3948270	0					
ANR	3948367	Argument	1024		3948270	1					
ANR	3948368	PrimaryExpression	1024		3948270	0					
ANR	3948369	Argument	fp		3948270	2					
ANR	3948370	Identifier	fp		3948270	0					
ANR	3948371	CompoundStatement		19:31:477:477	3948270	1					
ANR	3948372	ExpressionStatement	read_something = true	240:2:6325:6346	3948270	0	True				
ANR	3948373	AssignmentExpression	read_something = true		3948270	0		=			
ANR	3948374	Identifier	read_something		3948270	0					
ANR	3948375	Identifier	true		3948270	1					
ANR	3948376	IfStatement	if ( ! ad -> Insert ( buf ) )		3948270	1					
ANR	3948377	Condition	! ad -> Insert ( buf )	241:6:6354:6370	3948270	0	True				
ANR	3948378	UnaryOperationExpression	! ad -> Insert ( buf )		3948270	0					
ANR	3948379	UnaryOperator	!		3948270	0					
ANR	3948380	CallExpression	ad -> Insert ( buf )		3948270	1					
ANR	3948381	Callee	ad -> Insert		3948270	0					
ANR	3948382	PtrMemberAccess	ad -> Insert		3948270	0					
ANR	3948383	Identifier	ad		3948270	0					
ANR	3948384	Identifier	Insert		3948270	1					
ANR	3948385	ArgumentList	buf		3948270	1					
ANR	3948386	Argument	buf		3948270	0					
ANR	3948387	Identifier	buf		3948270	0					
ANR	3948388	CompoundStatement		21:26:530:530	3948270	1					
ANR	3948389	Statement	dprintf	242:3:6379:6385	3948270	0	True				
ANR	3948390	Statement	(	242:10:6386:6386	3948270	1	True				
ANR	3948391	Statement	D_ALWAYS	242:12:6388:6395	3948270	2	True				
ANR	3948392	Statement	","	242:20:6396:6396	3948270	3	True				
ANR	3948393	Statement	"""Failed to insert \\""%s\\"" into ClassAd, """	242:22:6398:6437	3948270	4	True				
ANR	3948394	Statement	"""ignoring invalid starter\\n"""	243:6:6445:6472	3948270	5	True				
ANR	3948395	Statement	","	243:34:6473:6473	3948270	6	True				
ANR	3948396	Statement	buf	243:36:6475:6477	3948270	7	True				
ANR	3948397	Statement	)	243:40:6479:6479	3948270	8	True				
ANR	3948398	ExpressionStatement		243:41:6480:6480	3948270	9	True				
ANR	3948399	Statement	delete	244:3:6485:6490	3948270	10	True				
ANR	3948400	ExpressionStatement	ad	244:9:6491:6497	3948270	11	True				
ANR	3948401	Identifier	ad		3948270	0					
ANR	3948402	ExpressionStatement	pclose ( fp )	245:3:6502:6514	3948270	12	True				
ANR	3948403	CallExpression	pclose ( fp )		3948270	0					
ANR	3948404	Callee	pclose		3948270	0					
ANR	3948405	Identifier	pclose		3948270	0					
ANR	3948406	ArgumentList	fp		3948270	1					
ANR	3948407	Argument	fp		3948270	0					
ANR	3948408	Identifier	fp		3948270	0					
ANR	3948409	ReturnStatement	return NULL ;	246:3:6519:6530	3948270	13	True				
ANR	3948410	Identifier	NULL		3948270	0					
ANR	3948411	ExpressionStatement	my_pclose ( fp )	249:1:6540:6555	3948270	21	True				
ANR	3948412	CallExpression	my_pclose ( fp )		3948270	0					
ANR	3948413	Callee	my_pclose		3948270	0					
ANR	3948414	Identifier	my_pclose		3948270	0					
ANR	3948415	ArgumentList	fp		3948270	1					
ANR	3948416	Argument	fp		3948270	0					
ANR	3948417	Identifier	fp		3948270	0					
ANR	3948418	IfStatement	if ( ! read_something )		3948270	22					
ANR	3948419	Condition	! read_something	250:5:6562:6577	3948270	0	True				
ANR	3948420	UnaryOperationExpression	! read_something		3948270	0					
ANR	3948421	UnaryOperator	!		3948270	0					
ANR	3948422	Identifier	read_something		3948270	1					
ANR	3948423	CompoundStatement		30:24:737:737	3948270	1					
ANR	3948424	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\""%s -classad\\"" did not produce any output, ignoring\\n"" , path )"	251:2:6585:6680	3948270	0	True				
ANR	3948425	CallExpression	"dprintf ( D_ALWAYS , ""\\""%s -classad\\"" did not produce any output, ignoring\\n"" , path )"		3948270	0					
ANR	3948426	Callee	dprintf		3948270	0					
ANR	3948427	Identifier	dprintf		3948270	0					
ANR	3948428	ArgumentList	D_ALWAYS		3948270	1					
ANR	3948429	Argument	D_ALWAYS		3948270	0					
ANR	3948430	Identifier	D_ALWAYS		3948270	0					
ANR	3948431	Argument	"""\\""%s -classad\\"" did not produce any output, ignoring\\n"""		3948270	1					
ANR	3948432	PrimaryExpression	"""\\""%s -classad\\"" did not produce any output, ignoring\\n"""		3948270	0					
ANR	3948433	Argument	path		3948270	2					
ANR	3948434	Identifier	path		3948270	0					
ANR	3948435	Statement	delete	254:2:6685:6690	3948270	1	True				
ANR	3948436	ExpressionStatement	ad	254:8:6691:6697	3948270	2	True				
ANR	3948437	Identifier	ad		3948270	0					
ANR	3948438	ReturnStatement	return NULL ;	255:2:6701:6712	3948270	3	True				
ANR	3948439	Identifier	NULL		3948270	0					
ANR	3948440	ExpressionStatement	new_starter = new Starter ( )	258:1:6719:6746	3948270	23	True				
ANR	3948441	AssignmentExpression	new_starter = new Starter ( )		3948270	0		=			
ANR	3948442	Identifier	new_starter		3948270	0					
ANR	3948443	UnaryExpression	new Starter ( )		3948270	1					
ANR	3948444	ExpressionStatement	new_starter -> setAd ( ad )	259:1:6749:6773	3948270	24	True				
ANR	3948445	CallExpression	new_starter -> setAd ( ad )		3948270	0					
ANR	3948446	Callee	new_starter -> setAd		3948270	0					
ANR	3948447	PtrMemberAccess	new_starter -> setAd		3948270	0					
ANR	3948448	Identifier	new_starter		3948270	0					
ANR	3948449	Identifier	setAd		3948270	1					
ANR	3948450	ArgumentList	ad		3948270	1					
ANR	3948451	Argument	ad		3948270	0					
ANR	3948452	Identifier	ad		3948270	0					
ANR	3948453	ExpressionStatement	new_starter -> setPath ( path )	260:1:6776:6804	3948270	25	True				
ANR	3948454	CallExpression	new_starter -> setPath ( path )		3948270	0					
ANR	3948455	Callee	new_starter -> setPath		3948270	0					
ANR	3948456	PtrMemberAccess	new_starter -> setPath		3948270	0					
ANR	3948457	Identifier	new_starter		3948270	0					
ANR	3948458	Identifier	setPath		3948270	1					
ANR	3948459	ArgumentList	path		3948270	1					
ANR	3948460	Argument	path		3948270	0					
ANR	3948461	Identifier	path		3948270	0					
ANR	3948462	IdentifierDeclStatement	int is_dc = 0 ;	261:1:6807:6820	3948270	26	True				
ANR	3948463	IdentifierDecl	is_dc = 0		3948270	0					
ANR	3948464	IdentifierDeclType	int		3948270	0					
ANR	3948465	Identifier	is_dc		3948270	1					
ANR	3948466	AssignmentExpression	is_dc = 0		3948270	2		=			
ANR	3948467	Identifier	is_dc		3948270	0					
ANR	3948468	PrimaryExpression	0		3948270	1					
ANR	3948469	ExpressionStatement	"ad -> LookupBool ( ATTR_IS_DAEMON_CORE , is_dc )"	262:1:6823:6867	3948270	27	True				
ANR	3948470	CallExpression	"ad -> LookupBool ( ATTR_IS_DAEMON_CORE , is_dc )"		3948270	0					
ANR	3948471	Callee	ad -> LookupBool		3948270	0					
ANR	3948472	PtrMemberAccess	ad -> LookupBool		3948270	0					
ANR	3948473	Identifier	ad		3948270	0					
ANR	3948474	Identifier	LookupBool		3948270	1					
ANR	3948475	ArgumentList	ATTR_IS_DAEMON_CORE		3948270	1					
ANR	3948476	Argument	ATTR_IS_DAEMON_CORE		3948270	0					
ANR	3948477	Identifier	ATTR_IS_DAEMON_CORE		3948270	0					
ANR	3948478	Argument	is_dc		3948270	1					
ANR	3948479	Identifier	is_dc		3948270	0					
ANR	3948480	ExpressionStatement	new_starter -> setIsDC ( ( bool ) is_dc )	263:1:6870:6905	3948270	28	True				
ANR	3948481	CallExpression	new_starter -> setIsDC ( ( bool ) is_dc )		3948270	0					
ANR	3948482	Callee	new_starter -> setIsDC		3948270	0					
ANR	3948483	PtrMemberAccess	new_starter -> setIsDC		3948270	0					
ANR	3948484	Identifier	new_starter		3948270	0					
ANR	3948485	Identifier	setIsDC		3948270	1					
ANR	3948486	ArgumentList	( bool ) is_dc		3948270	1					
ANR	3948487	Argument	( bool ) is_dc		3948270	0					
ANR	3948488	CastExpression	( bool ) is_dc		3948270	0					
ANR	3948489	CastTarget	bool		3948270	0					
ANR	3948490	Identifier	is_dc		3948270	1					
ANR	3948491	ReturnStatement	return new_starter ;	265:1:6909:6927	3948270	29	True				
ANR	3948492	Identifier	new_starter		3948270	0					
ANR	3948493	ReturnType	Starter *		3948270	1					
ANR	3948494	Identifier	StarterMgr :: makeStarter		3948270	2					
ANR	3948495	ParameterList	const char * path		3948270	3					
ANR	3948496	Parameter	const char * path	220:25:5824:5839	3948270	0	True				
ANR	3948497	ParameterType	const char *		3948270	0					
ANR	3948498	Identifier	path		3948270	1					
ANR	3948499	CFGEntryNode	ENTRY		3948270		True				
ANR	3948500	CFGExitNode	EXIT		3948270		True				
ANR	3948501	Symbol	read_something		3948270						
ANR	3948502	Symbol	NULL		3948270						
ANR	3948503	Symbol	ad		3948270						
ANR	3948504	Symbol	D_ALWAYS		3948270						
ANR	3948505	Symbol	false		3948270						
ANR	3948506	Symbol	ATTR_IS_DAEMON_CORE		3948270						
ANR	3948507	Symbol	is_dc		3948270						
ANR	3948508	Symbol	fp		3948270						
ANR	3948509	Symbol	* ad		3948270						
ANR	3948510	Symbol	ad -> Insert		3948270						
ANR	3948511	Symbol	fgets		3948270						
ANR	3948512	Symbol	args		3948270						
ANR	3948513	Symbol	path		3948270						
ANR	3948514	Symbol	buf		3948270						
ANR	3948515	Symbol	new_starter		3948270						
ANR	3948516	Symbol	true		3948270						
ANR	3948517	Symbol	FALSE		3948270						
ANR	3948518	Symbol	my_popenv		3948270						
