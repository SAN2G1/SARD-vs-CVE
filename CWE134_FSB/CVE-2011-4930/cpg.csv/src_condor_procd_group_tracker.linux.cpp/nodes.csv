command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3614721	File	data/converged/CVE-2011-4930_htcondor/src_condor_procd_group_tracker.linux.cpp								
ANR	3614722	Function	GroupTracker :: GroupTracker	25:0:905:1279							
ANR	3614723	FunctionDef	"GroupTracker :: GroupTracker (ProcFamilyMonitor * pfm , gid_t min_gid , gid_t max_gid , bool allocating)"		3614722	0					
ANR	3614724	CompoundStatement		34:0:1277:1279	3614722	0					
ANR	3614725	Identifier	GroupTracker :: GroupTracker		3614722	1					
ANR	3614726	ParameterList	"ProcFamilyMonitor * pfm , gid_t min_gid , gid_t max_gid , bool allocating"		3614722	2					
ANR	3614727	Parameter	ProcFamilyMonitor * pfm	25:27:932:953	3614722	0	True				
ANR	3614728	ParameterType	ProcFamilyMonitor *		3614722	0					
ANR	3614729	Identifier	pfm		3614722	1					
ANR	3614730	Parameter	gid_t min_gid	26:27:983:995	3614722	1	True				
ANR	3614731	ParameterType	gid_t		3614722	0					
ANR	3614732	Identifier	min_gid		3614722	1					
ANR	3614733	Parameter	gid_t max_gid	27:27:1025:1037	3614722	2	True				
ANR	3614734	ParameterType	gid_t		3614722	0					
ANR	3614735	Identifier	max_gid		3614722	1					
ANR	3614736	Parameter	bool allocating	28:9:1049:1063	3614722	3	True				
ANR	3614737	ParameterType	bool		3614722	0					
ANR	3614738	Identifier	allocating		3614722	1					
ANR	3614739	CFGEntryNode	ENTRY		3614722		True				
ANR	3614740	CFGExitNode	EXIT		3614722		True				
ANR	3614741	Symbol	max_gid		3614722						
ANR	3614742	Symbol	pfm		3614722						
ANR	3614743	Symbol	allocating		3614722						
ANR	3614744	Symbol	min_gid		3614722						
ANR	3614745	Function	GroupTracker :: add_mapping	37:0:1282:1547							
ANR	3614746	FunctionDef	"GroupTracker :: add_mapping (ProcFamily * family , gid_t & gid)"		3614745	0					
ANR	3614747	CompoundStatement		39:0:1345:1547	3614745	0					
ANR	3614748	IfStatement	if ( m_allocating )		3614745	0					
ANR	3614749	Condition	m_allocating	40:5:1352:1363	3614745	0	True				
ANR	3614750	Identifier	m_allocating		3614745	0					
ANR	3614751	CompoundStatement		2:19:20:20	3614745	1					
ANR	3614752	ReturnStatement	"return m_gid_pool . allocate ( family , gid ) ;"	42:2:1414:1453	3614745	0	True				
ANR	3614753	CallExpression	"m_gid_pool . allocate ( family , gid )"		3614745	0					
ANR	3614754	Callee	m_gid_pool . allocate		3614745	0					
ANR	3614755	MemberAccess	m_gid_pool . allocate		3614745	0					
ANR	3614756	Identifier	m_gid_pool		3614745	0					
ANR	3614757	Identifier	allocate		3614745	1					
ANR	3614758	ArgumentList	family		3614745	1					
ANR	3614759	Argument	family		3614745	0					
ANR	3614760	Identifier	family		3614745	0					
ANR	3614761	Argument	gid		3614745	1					
ANR	3614762	Identifier	gid		3614745	0					
ANR	3614763	ReturnStatement	"return m_gid_pool . associate ( family , gid ) ;"	45:1:1505:1545	3614745	1	True				
ANR	3614764	CallExpression	"m_gid_pool . associate ( family , gid )"		3614745	0					
ANR	3614765	Callee	m_gid_pool . associate		3614745	0					
ANR	3614766	MemberAccess	m_gid_pool . associate		3614745	0					
ANR	3614767	Identifier	m_gid_pool		3614745	0					
ANR	3614768	Identifier	associate		3614745	1					
ANR	3614769	ArgumentList	family		3614745	1					
ANR	3614770	Argument	family		3614745	0					
ANR	3614771	Identifier	family		3614745	0					
ANR	3614772	Argument	gid		3614745	1					
ANR	3614773	Identifier	gid		3614745	0					
ANR	3614774	ReturnType	bool		3614745	1					
ANR	3614775	Identifier	GroupTracker :: add_mapping		3614745	2					
ANR	3614776	ParameterList	"ProcFamily * family , gid_t & gid"		3614745	3					
ANR	3614777	Parameter	ProcFamily * family	38:26:1313:1330	3614745	0	True				
ANR	3614778	ParameterType	ProcFamily *		3614745	0					
ANR	3614779	Identifier	family		3614745	1					
ANR	3614780	Parameter	gid_t & gid	38:46:1333:1342	3614745	1	True				
ANR	3614781	ParameterType	gid_t &		3614745	0					
ANR	3614782	Identifier	gid		3614745	1					
ANR	3614783	CFGEntryNode	ENTRY		3614745		True				
ANR	3614784	CFGExitNode	EXIT		3614745		True				
ANR	3614785	Symbol	gid		3614745						
ANR	3614786	Symbol	m_allocating		3614745						
ANR	3614787	Symbol	family		3614745						
ANR	3614788	Symbol	m_gid_pool . allocate		3614745						
ANR	3614789	Symbol	m_gid_pool		3614745						
ANR	3614790	Symbol	m_gid_pool . associate		3614745						
ANR	3614791	Function	GroupTracker :: remove_mapping	48:0:1550:1639							
ANR	3614792	FunctionDef	GroupTracker :: remove_mapping (ProcFamily * family)		3614791	0					
ANR	3614793	CompoundStatement		50:0:1604:1639	3614791	0					
ANR	3614794	ReturnStatement	return m_gid_pool . free ( family ) ;	51:1:1607:1637	3614791	0	True				
ANR	3614795	CallExpression	m_gid_pool . free ( family )		3614791	0					
ANR	3614796	Callee	m_gid_pool . free		3614791	0					
ANR	3614797	MemberAccess	m_gid_pool . free		3614791	0					
ANR	3614798	Identifier	m_gid_pool		3614791	0					
ANR	3614799	Identifier	free		3614791	1					
ANR	3614800	ArgumentList	family		3614791	1					
ANR	3614801	Argument	family		3614791	0					
ANR	3614802	Identifier	family		3614791	0					
ANR	3614803	ReturnType	bool		3614791	1					
ANR	3614804	Identifier	GroupTracker :: remove_mapping		3614791	2					
ANR	3614805	ParameterList	ProcFamily * family		3614791	3					
ANR	3614806	Parameter	ProcFamily * family	49:29:1584:1601	3614791	0	True				
ANR	3614807	ParameterType	ProcFamily *		3614791	0					
ANR	3614808	Identifier	family		3614791	1					
ANR	3614809	CFGEntryNode	ENTRY		3614791		True				
ANR	3614810	CFGExitNode	EXIT		3614791		True				
ANR	3614811	Symbol	m_gid_pool . free		3614791						
ANR	3614812	Symbol	family		3614791						
ANR	3614813	Symbol	m_gid_pool		3614791						
ANR	3614814	Function	GroupTracker :: check_process	54:0:1642:4042							
ANR	3614815	FunctionDef	GroupTracker :: check_process (procInfo * pi)		3614814	0					
ANR	3614816	CompoundStatement		56:0:1689:4042	3614814	0					
ANR	3614817	Statement	static	57:1:1692:1697	3614814	0	True				
ANR	3614818	IdentifierDeclStatement	"const char GROUPS_PREFIX [ ] = ""Groups:\\t"" ;"	57:8:1699:1739	3614814	1	True				
ANR	3614819	IdentifierDecl	"GROUPS_PREFIX [ ] = ""Groups:\\t"""		3614814	0					
ANR	3614820	IdentifierDeclType	const char [ ]		3614814	0					
ANR	3614821	Identifier	GROUPS_PREFIX		3614814	1					
ANR	3614822	AssignmentExpression	"GROUPS_PREFIX [ ] = ""Groups:\\t"""		3614814	2		=			
ANR	3614823	Identifier	GROUPS_PREFIX		3614814	0					
ANR	3614824	PrimaryExpression	"""Groups:\\t"""		3614814	1					
ANR	3614825	Statement	static	58:1:1742:1747	3614814	2	True				
ANR	3614826	IdentifierDeclStatement	const int GROUPS_PREFIX_SIZE = sizeof ( GROUPS_PREFIX ) - 1 ;	58:8:1749:1805	3614814	3	True				
ANR	3614827	IdentifierDecl	GROUPS_PREFIX_SIZE = sizeof ( GROUPS_PREFIX ) - 1		3614814	0					
ANR	3614828	IdentifierDeclType	const int		3614814	0					
ANR	3614829	Identifier	GROUPS_PREFIX_SIZE		3614814	1					
ANR	3614830	AssignmentExpression	GROUPS_PREFIX_SIZE = sizeof ( GROUPS_PREFIX ) - 1		3614814	2		=			
ANR	3614831	Identifier	GROUPS_PREFIX_SIZE		3614814	0					
ANR	3614832	AdditiveExpression	sizeof ( GROUPS_PREFIX ) - 1		3614814	1		-			
ANR	3614833	SizeofExpression	sizeof ( GROUPS_PREFIX )		3614814	0					
ANR	3614834	Sizeof	sizeof		3614814	0					
ANR	3614835	SizeofOperand	GROUPS_PREFIX		3614814	1					
ANR	3614836	PrimaryExpression	1		3614814	1					
ANR	3614837	IdentifierDeclStatement	char path [ 32 ] ;	62:1:1866:1879	3614814	4	True				
ANR	3614838	IdentifierDecl	path [ 32 ]		3614814	0					
ANR	3614839	IdentifierDeclType	char [ 32 ]		3614814	0					
ANR	3614840	Identifier	path		3614814	1					
ANR	3614841	PrimaryExpression	32		3614814	2					
ANR	3614842	IdentifierDeclStatement	"int ret = snprintf ( path , 32 , ""/proc/%u/status"" , pi -> pid ) ;"	63:1:1882:1938	3614814	5	True				
ANR	3614843	IdentifierDecl	"ret = snprintf ( path , 32 , ""/proc/%u/status"" , pi -> pid )"		3614814	0					
ANR	3614844	IdentifierDeclType	int		3614814	0					
ANR	3614845	Identifier	ret		3614814	1					
ANR	3614846	AssignmentExpression	"ret = snprintf ( path , 32 , ""/proc/%u/status"" , pi -> pid )"		3614814	2		=			
ANR	3614847	Identifier	ret		3614814	0					
ANR	3614848	CallExpression	"snprintf ( path , 32 , ""/proc/%u/status"" , pi -> pid )"		3614814	1					
ANR	3614849	Callee	snprintf		3614814	0					
ANR	3614850	Identifier	snprintf		3614814	0					
ANR	3614851	ArgumentList	path		3614814	1					
ANR	3614852	Argument	path		3614814	0					
ANR	3614853	Identifier	path		3614814	0					
ANR	3614854	Argument	32		3614814	1					
ANR	3614855	PrimaryExpression	32		3614814	0					
ANR	3614856	Argument	"""/proc/%u/status"""		3614814	2					
ANR	3614857	PrimaryExpression	"""/proc/%u/status"""		3614814	0					
ANR	3614858	Argument	pi -> pid		3614814	3					
ANR	3614859	PtrMemberAccess	pi -> pid		3614814	0					
ANR	3614860	Identifier	pi		3614814	0					
ANR	3614861	Identifier	pid		3614814	1					
ANR	3614862	IfStatement	if ( ret < 0 )		3614814	6					
ANR	3614863	Condition	ret < 0	64:5:1945:1951	3614814	0	True				
ANR	3614864	RelationalExpression	ret < 0		3614814	0		<			
ANR	3614865	Identifier	ret		3614814	0					
ANR	3614866	PrimaryExpression	0		3614814	1					
ANR	3614867	CompoundStatement		9:14:264:264	3614814	1					
ANR	3614868	ExpressionStatement	"dprintf ( D_ALWAYS , ""GroupTracker (pid = %u): snprintf error: %s (%d)\\n"" , pi -> pid , strerror ( errno ) , errno )"	65:2:1958:2102	3614814	0	True				
ANR	3614869	CallExpression	"dprintf ( D_ALWAYS , ""GroupTracker (pid = %u): snprintf error: %s (%d)\\n"" , pi -> pid , strerror ( errno ) , errno )"		3614814	0					
ANR	3614870	Callee	dprintf		3614814	0					
ANR	3614871	Identifier	dprintf		3614814	0					
ANR	3614872	ArgumentList	D_ALWAYS		3614814	1					
ANR	3614873	Argument	D_ALWAYS		3614814	0					
ANR	3614874	Identifier	D_ALWAYS		3614814	0					
ANR	3614875	Argument	"""GroupTracker (pid = %u): snprintf error: %s (%d)\\n"""		3614814	1					
ANR	3614876	PrimaryExpression	"""GroupTracker (pid = %u): snprintf error: %s (%d)\\n"""		3614814	0					
ANR	3614877	Argument	pi -> pid		3614814	2					
ANR	3614878	PtrMemberAccess	pi -> pid		3614814	0					
ANR	3614879	Identifier	pi		3614814	0					
ANR	3614880	Identifier	pid		3614814	1					
ANR	3614881	Argument	strerror ( errno )		3614814	3					
ANR	3614882	CallExpression	strerror ( errno )		3614814	0					
ANR	3614883	Callee	strerror		3614814	0					
ANR	3614884	Identifier	strerror		3614814	0					
ANR	3614885	ArgumentList	errno		3614814	1					
ANR	3614886	Argument	errno		3614814	0					
ANR	3614887	Identifier	errno		3614814	0					
ANR	3614888	Argument	errno		3614814	4					
ANR	3614889	Identifier	errno		3614814	0					
ANR	3614890	ReturnStatement	return false ;	70:2:2106:2118	3614814	1	True				
ANR	3614891	Identifier	false		3614814	0					
ANR	3614892	IfStatement	if ( ret >= 32 )		3614814	7					
ANR	3614893	Condition	ret >= 32	72:5:2128:2136	3614814	0	True				
ANR	3614894	RelationalExpression	ret >= 32		3614814	0		>=			
ANR	3614895	Identifier	ret		3614814	0					
ANR	3614896	PrimaryExpression	32		3614814	1					
ANR	3614897	CompoundStatement		17:16:449:449	3614814	1					
ANR	3614898	ExpressionStatement	"dprintf ( D_ALWAYS , ""GroupTracker (pid = %u): error: path buffer too small\\n"" , pi -> pid )"	73:2:2143:2248	3614814	0	True				
ANR	3614899	CallExpression	"dprintf ( D_ALWAYS , ""GroupTracker (pid = %u): error: path buffer too small\\n"" , pi -> pid )"		3614814	0					
ANR	3614900	Callee	dprintf		3614814	0					
ANR	3614901	Identifier	dprintf		3614814	0					
ANR	3614902	ArgumentList	D_ALWAYS		3614814	1					
ANR	3614903	Argument	D_ALWAYS		3614814	0					
ANR	3614904	Identifier	D_ALWAYS		3614814	0					
ANR	3614905	Argument	"""GroupTracker (pid = %u): error: path buffer too small\\n"""		3614814	1					
ANR	3614906	PrimaryExpression	"""GroupTracker (pid = %u): error: path buffer too small\\n"""		3614814	0					
ANR	3614907	Argument	pi -> pid		3614814	2					
ANR	3614908	PtrMemberAccess	pi -> pid		3614814	0					
ANR	3614909	Identifier	pi		3614814	0					
ANR	3614910	Identifier	pid		3614814	1					
ANR	3614911	ReturnStatement	return false ;	76:2:2252:2264	3614814	1	True				
ANR	3614912	Identifier	false		3614814	0					
ANR	3614913	IdentifierDeclStatement	"FILE * fp = safe_fopen_wrapper ( path , ""r"" ) ;"	81:1:2292:2332	3614814	8	True				
ANR	3614914	IdentifierDecl	"* fp = safe_fopen_wrapper ( path , ""r"" )"		3614814	0					
ANR	3614915	IdentifierDeclType	FILE *		3614814	0					
ANR	3614916	Identifier	fp		3614814	1					
ANR	3614917	AssignmentExpression	"* fp = safe_fopen_wrapper ( path , ""r"" )"		3614814	2		=			
ANR	3614918	Identifier	fp		3614814	0					
ANR	3614919	CallExpression	"safe_fopen_wrapper ( path , ""r"" )"		3614814	1					
ANR	3614920	Callee	safe_fopen_wrapper		3614814	0					
ANR	3614921	Identifier	safe_fopen_wrapper		3614814	0					
ANR	3614922	ArgumentList	path		3614814	1					
ANR	3614923	Argument	path		3614814	0					
ANR	3614924	Identifier	path		3614814	0					
ANR	3614925	Argument	"""r"""		3614814	1					
ANR	3614926	PrimaryExpression	"""r"""		3614814	0					
ANR	3614927	IfStatement	if ( fp == NULL )		3614814	9					
ANR	3614928	Condition	fp == NULL	82:5:2339:2348	3614814	0	True				
ANR	3614929	EqualityExpression	fp == NULL		3614814	0		==			
ANR	3614930	Identifier	fp		3614814	0					
ANR	3614931	Identifier	NULL		3614814	1					
ANR	3614932	CompoundStatement		27:17:661:661	3614814	1					
ANR	3614933	Statement	dprintf	83:2:2355:2361	3614814	0	True				
ANR	3614934	Statement	(	83:9:2362:2362	3614814	1	True				
ANR	3614935	Statement	D_ALWAYS	83:10:2363:2370	3614814	2	True				
ANR	3614936	Statement	","	83:18:2371:2371	3614814	3	True				
ANR	3614937	Statement	"""GroupTracker (pid = %u): fopen error: """	84:10:2383:2422	3614814	4	True				
ANR	3614938	Statement	"""Failed to open file '%s'. %s (%d)\\n"""	85:4:2428:2464	3614814	5	True				
ANR	3614939	Statement	","	85:41:2465:2465	3614814	6	True				
ANR	3614940	Statement	pi	86:10:2477:2478	3614814	7	True				
ANR	3614941	Statement	->	86:12:2479:2480	3614814	8	True				
ANR	3614942	Statement	pid	86:14:2481:2483	3614814	9	True				
ANR	3614943	Statement	","	86:17:2484:2484	3614814	10	True				
ANR	3614944	Statement	path	87:4:2490:2493	3614814	11	True				
ANR	3614945	Statement	","	87:8:2494:2494	3614814	12	True				
ANR	3614946	Statement	strerror	88:10:2506:2513	3614814	13	True				
ANR	3614947	Statement	(	88:18:2514:2514	3614814	14	True				
ANR	3614948	Statement	errno	88:19:2515:2519	3614814	15	True				
ANR	3614949	Statement	)	88:24:2520:2520	3614814	16	True				
ANR	3614950	Statement	","	88:25:2521:2521	3614814	17	True				
ANR	3614951	Statement	errno	89:10:2533:2537	3614814	18	True				
ANR	3614952	Statement	)	89:15:2538:2538	3614814	19	True				
ANR	3614953	ExpressionStatement		89:16:2539:2539	3614814	20	True				
ANR	3614954	ReturnStatement	return false ;	90:2:2543:2555	3614814	21	True				
ANR	3614955	Identifier	false		3614814	0					
ANR	3614956	IdentifierDeclStatement	char buffer [ 1024 ] ;	95:1:2612:2629	3614814	10	True				
ANR	3614957	IdentifierDecl	buffer [ 1024 ]		3614814	0					
ANR	3614958	IdentifierDeclType	char [ 1024 ]		3614814	0					
ANR	3614959	Identifier	buffer		3614814	1					
ANR	3614960	PrimaryExpression	1024		3614814	2					
ANR	3614961	IdentifierDeclStatement	bool found_groups = false ;	96:1:2632:2657	3614814	11	True				
ANR	3614962	IdentifierDecl	found_groups = false		3614814	0					
ANR	3614963	IdentifierDeclType	bool		3614814	0					
ANR	3614964	Identifier	found_groups		3614814	1					
ANR	3614965	AssignmentExpression	found_groups = false		3614814	2		=			
ANR	3614966	Identifier	false		3614814	0					
ANR	3614967	Identifier	false		3614814	1					
ANR	3614968	WhileStatement	"while ( fgets ( buffer , 1024 , fp ) )"		3614814	12					
ANR	3614969	Condition	"fgets ( buffer , 1024 , fp )"	97:8:2667:2689	3614814	0	True				
ANR	3614970	CallExpression	"fgets ( buffer , 1024 , fp )"		3614814	0					
ANR	3614971	Callee	fgets		3614814	0					
ANR	3614972	Identifier	fgets		3614814	0					
ANR	3614973	ArgumentList	buffer		3614814	1					
ANR	3614974	Argument	buffer		3614814	0					
ANR	3614975	Identifier	buffer		3614814	0					
ANR	3614976	Argument	1024		3614814	1					
ANR	3614977	PrimaryExpression	1024		3614814	0					
ANR	3614978	Argument	fp		3614814	2					
ANR	3614979	Identifier	fp		3614814	0					
ANR	3614980	CompoundStatement		42:33:1002:1002	3614814	1					
ANR	3614981	IfStatement	"if ( strncmp ( buffer , GROUPS_PREFIX , GROUPS_PREFIX_SIZE ) == 0 )"		3614814	0					
ANR	3614982	Condition	"strncmp ( buffer , GROUPS_PREFIX , GROUPS_PREFIX_SIZE ) == 0"	98:6:2700:2754	3614814	0	True				
ANR	3614983	EqualityExpression	"strncmp ( buffer , GROUPS_PREFIX , GROUPS_PREFIX_SIZE ) == 0"		3614814	0		==			
ANR	3614984	CallExpression	"strncmp ( buffer , GROUPS_PREFIX , GROUPS_PREFIX_SIZE )"		3614814	0					
ANR	3614985	Callee	strncmp		3614814	0					
ANR	3614986	Identifier	strncmp		3614814	0					
ANR	3614987	ArgumentList	buffer		3614814	1					
ANR	3614988	Argument	buffer		3614814	0					
ANR	3614989	Identifier	buffer		3614814	0					
ANR	3614990	Argument	GROUPS_PREFIX		3614814	1					
ANR	3614991	Identifier	GROUPS_PREFIX		3614814	0					
ANR	3614992	Argument	GROUPS_PREFIX_SIZE		3614814	2					
ANR	3614993	Identifier	GROUPS_PREFIX_SIZE		3614814	0					
ANR	3614994	PrimaryExpression	0		3614814	1					
ANR	3614995	CompoundStatement		43:63:1067:1067	3614814	1					
ANR	3614996	ExpressionStatement	found_groups = true	99:3:2762:2781	3614814	0	True				
ANR	3614997	AssignmentExpression	found_groups = true		3614814	0		=			
ANR	3614998	Identifier	found_groups		3614814	0					
ANR	3614999	Identifier	true		3614814	1					
ANR	3615000	BreakStatement	break ;	100:3:2786:2791	3614814	1	True				
ANR	3615001	IfStatement	if ( ! found_groups )		3614814	13					
ANR	3615002	Condition	! found_groups	103:5:2805:2817	3614814	0	True				
ANR	3615003	UnaryOperationExpression	! found_groups		3614814	0					
ANR	3615004	UnaryOperator	!		3614814	0					
ANR	3615005	Identifier	found_groups		3614814	1					
ANR	3615006	CompoundStatement		48:20:1130:1130	3614814	1					
ANR	3615007	IfStatement	if ( feof ( fp ) )		3614814	0					
ANR	3615008	Condition	feof ( fp )	104:6:2828:2835	3614814	0	True				
ANR	3615009	CallExpression	feof ( fp )		3614814	0					
ANR	3615010	Callee	feof		3614814	0					
ANR	3615011	Identifier	feof		3614814	0					
ANR	3615012	ArgumentList	fp		3614814	1					
ANR	3615013	Argument	fp		3614814	0					
ANR	3615014	Identifier	fp		3614814	0					
ANR	3615015	CompoundStatement		49:16:1148:1148	3614814	1					
ANR	3615016	Statement	dprintf	105:3:2843:2849	3614814	0	True				
ANR	3615017	Statement	(	105:10:2850:2850	3614814	1	True				
ANR	3615018	Statement	D_ALWAYS	105:11:2851:2858	3614814	2	True				
ANR	3615019	Statement	","	105:19:2859:2859	3614814	3	True				
ANR	3615020	Statement	"""GroupTracker (pid = %u): """	106:11:2872:2898	3614814	4	True				
ANR	3615021	Statement	"""groups not found in status file\\n"""	107:15:2915:2949	3614814	5	True				
ANR	3615022	Statement	","	107:50:2950:2950	3614814	6	True				
ANR	3615023	Statement	pi	108:11:2963:2964	3614814	7	True				
ANR	3615024	Statement	->	108:13:2965:2966	3614814	8	True				
ANR	3615025	Statement	pid	108:15:2967:2969	3614814	9	True				
ANR	3615026	Statement	)	108:18:2970:2970	3614814	10	True				
ANR	3615027	ExpressionStatement		108:19:2971:2971	3614814	11	True				
ANR	3615028	ElseStatement	else		3614814	0					
ANR	3615029	CompoundStatement		55:7:1294:1294	3614814	0					
ANR	3615030	Statement	dprintf	111:3:2989:2995	3614814	0	True				
ANR	3615031	Statement	(	111:10:2996:2996	3614814	1	True				
ANR	3615032	Statement	D_ALWAYS	111:11:2997:3004	3614814	2	True				
ANR	3615033	Statement	","	111:19:3005:3005	3614814	3	True				
ANR	3615034	Statement	"""GroupTracker (pid = %u): """	112:11:3018:3044	3614814	4	True				
ANR	3615035	Statement	"""error reading from status file: %s (%d)\\n"""	113:15:3061:3103	3614814	5	True				
ANR	3615036	Statement	","	113:58:3104:3104	3614814	6	True				
ANR	3615037	Statement	pi	114:11:3117:3118	3614814	7	True				
ANR	3615038	Statement	->	114:13:3119:3120	3614814	8	True				
ANR	3615039	Statement	pid	114:15:3121:3123	3614814	9	True				
ANR	3615040	Statement	","	114:18:3124:3124	3614814	10	True				
ANR	3615041	Statement	strerror	115:11:3137:3144	3614814	11	True				
ANR	3615042	Statement	(	115:19:3145:3145	3614814	12	True				
ANR	3615043	Statement	errno	115:20:3146:3150	3614814	13	True				
ANR	3615044	Statement	)	115:25:3151:3151	3614814	14	True				
ANR	3615045	Statement	","	115:26:3152:3152	3614814	15	True				
ANR	3615046	Statement	errno	116:11:3165:3169	3614814	16	True				
ANR	3615047	Statement	)	116:16:3170:3170	3614814	17	True				
ANR	3615048	ExpressionStatement		116:17:3171:3171	3614814	18	True				
ANR	3615049	ExpressionStatement	fclose ( fp )	118:2:3179:3189	3614814	1	True				
ANR	3615050	CallExpression	fclose ( fp )		3614814	0					
ANR	3615051	Callee	fclose		3614814	0					
ANR	3615052	Identifier	fclose		3614814	0					
ANR	3615053	ArgumentList	fp		3614814	1					
ANR	3615054	Argument	fp		3614814	0					
ANR	3615055	Identifier	fp		3614814	0					
ANR	3615056	ReturnStatement	return false ;	119:2:3193:3205	3614814	2	True				
ANR	3615057	Identifier	false		3614814	0					
ANR	3615058	ExpressionStatement	fclose ( fp )	121:1:3211:3221	3614814	14	True				
ANR	3615059	CallExpression	fclose ( fp )		3614814	0					
ANR	3615060	Callee	fclose		3614814	0					
ANR	3615061	Identifier	fclose		3614814	0					
ANR	3615062	ArgumentList	fp		3614814	1					
ANR	3615063	Argument	fp		3614814	0					
ANR	3615064	Identifier	fp		3614814	0					
ANR	3615065	IdentifierDeclStatement	int line_len = strlen ( buffer ) ;	125:1:3272:3301	3614814	15	True				
ANR	3615066	IdentifierDecl	line_len = strlen ( buffer )		3614814	0					
ANR	3615067	IdentifierDeclType	int		3614814	0					
ANR	3615068	Identifier	line_len		3614814	1					
ANR	3615069	AssignmentExpression	line_len = strlen ( buffer )		3614814	2		=			
ANR	3615070	Identifier	line_len		3614814	0					
ANR	3615071	CallExpression	strlen ( buffer )		3614814	1					
ANR	3615072	Callee	strlen		3614814	0					
ANR	3615073	Identifier	strlen		3614814	0					
ANR	3615074	ArgumentList	buffer		3614814	1					
ANR	3615075	Argument	buffer		3614814	0					
ANR	3615076	Identifier	buffer		3614814	0					
ANR	3615077	IfStatement	if ( buffer [ line_len - 1 ] != '\\n' )		3614814	16					
ANR	3615078	Condition	buffer [ line_len - 1 ] != '\\n'	126:5:3308:3335	3614814	0	True				
ANR	3615079	EqualityExpression	buffer [ line_len - 1 ] != '\\n'		3614814	0		!=			
ANR	3615080	ArrayIndexing	buffer [ line_len - 1 ]		3614814	0					
ANR	3615081	Identifier	buffer		3614814	0					
ANR	3615082	AdditiveExpression	line_len - 1		3614814	1		-			
ANR	3615083	Identifier	line_len		3614814	0					
ANR	3615084	PrimaryExpression	1		3614814	1					
ANR	3615085	PrimaryExpression	'\\n'		3614814	1					
ANR	3615086	CompoundStatement		71:35:1648:1648	3614814	1					
ANR	3615087	Statement	dprintf	127:2:3342:3348	3614814	0	True				
ANR	3615088	Statement	(	127:9:3349:3349	3614814	1	True				
ANR	3615089	Statement	D_ALWAYS	127:10:3350:3357	3614814	2	True				
ANR	3615090	Statement	","	127:18:3358:3358	3614814	3	True				
ANR	3615091	Statement	"""GroupTracker (pid = %u): """	128:10:3370:3396	3614814	4	True				
ANR	3615092	Statement	"""read partial line from status file\\n"""	129:14:3412:3449	3614814	5	True				
ANR	3615093	Statement	","	129:52:3450:3450	3614814	6	True				
ANR	3615094	Statement	pi	130:10:3462:3463	3614814	7	True				
ANR	3615095	Statement	->	130:12:3464:3465	3614814	8	True				
ANR	3615096	Statement	pid	130:14:3466:3468	3614814	9	True				
ANR	3615097	Statement	)	130:17:3469:3469	3614814	10	True				
ANR	3615098	ExpressionStatement		130:18:3470:3470	3614814	11	True				
ANR	3615099	ReturnStatement	return false ;	131:2:3474:3486	3614814	12	True				
ANR	3615100	Identifier	false		3614814	0					
ANR	3615101	ExpressionStatement	buffer [ line_len - 1 ] = '\\0'	133:1:3492:3519	3614814	17	True				
ANR	3615102	AssignmentExpression	buffer [ line_len - 1 ] = '\\0'		3614814	0		=			
ANR	3615103	ArrayIndexing	buffer [ line_len - 1 ]		3614814	0					
ANR	3615104	Identifier	buffer		3614814	0					
ANR	3615105	AdditiveExpression	line_len - 1		3614814	1		-			
ANR	3615106	Identifier	line_len		3614814	0					
ANR	3615107	PrimaryExpression	1		3614814	1					
ANR	3615108	PrimaryExpression	'\\0'		3614814	1					
ANR	3615109	IdentifierDeclStatement	char * buffer_ptr = buffer + GROUPS_PREFIX_SIZE ;	137:1:3601:3647	3614814	18	True				
ANR	3615110	IdentifierDecl	* buffer_ptr = buffer + GROUPS_PREFIX_SIZE		3614814	0					
ANR	3615111	IdentifierDeclType	char *		3614814	0					
ANR	3615112	Identifier	buffer_ptr		3614814	1					
ANR	3615113	AssignmentExpression	* buffer_ptr = buffer + GROUPS_PREFIX_SIZE		3614814	2		=			
ANR	3615114	Identifier	buffer_ptr		3614814	0					
ANR	3615115	AdditiveExpression	buffer + GROUPS_PREFIX_SIZE		3614814	1		+			
ANR	3615116	Identifier	buffer		3614814	0					
ANR	3615117	Identifier	GROUPS_PREFIX_SIZE		3614814	1					
ANR	3615118	IdentifierDeclStatement	char * strtok_ptr ;	138:1:3650:3666	3614814	19	True				
ANR	3615119	IdentifierDecl	* strtok_ptr		3614814	0					
ANR	3615120	IdentifierDeclType	char *		3614814	0					
ANR	3615121	Identifier	strtok_ptr		3614814	1					
ANR	3615122	IdentifierDeclStatement	"char * token = strtok_r ( buffer_ptr , "" "" , & strtok_ptr ) ;"	139:1:3669:3721	3614814	20	True				
ANR	3615123	IdentifierDecl	"* token = strtok_r ( buffer_ptr , "" "" , & strtok_ptr )"		3614814	0					
ANR	3615124	IdentifierDeclType	char *		3614814	0					
ANR	3615125	Identifier	token		3614814	1					
ANR	3615126	AssignmentExpression	"* token = strtok_r ( buffer_ptr , "" "" , & strtok_ptr )"		3614814	2		=			
ANR	3615127	Identifier	token		3614814	0					
ANR	3615128	CallExpression	"strtok_r ( buffer_ptr , "" "" , & strtok_ptr )"		3614814	1					
ANR	3615129	Callee	strtok_r		3614814	0					
ANR	3615130	Identifier	strtok_r		3614814	0					
ANR	3615131	ArgumentList	buffer_ptr		3614814	1					
ANR	3615132	Argument	buffer_ptr		3614814	0					
ANR	3615133	Identifier	buffer_ptr		3614814	0					
ANR	3615134	Argument	""" """		3614814	1					
ANR	3615135	PrimaryExpression	""" """		3614814	0					
ANR	3615136	Argument	& strtok_ptr		3614814	2					
ANR	3615137	UnaryOperationExpression	& strtok_ptr		3614814	0					
ANR	3615138	UnaryOperator	&		3614814	0					
ANR	3615139	Identifier	strtok_ptr		3614814	1					
ANR	3615140	WhileStatement	while ( token != NULL )		3614814	21					
ANR	3615141	Condition	token != NULL	140:8:3731:3743	3614814	0	True				
ANR	3615142	EqualityExpression	token != NULL		3614814	0		!=			
ANR	3615143	Identifier	token		3614814	0					
ANR	3615144	Identifier	NULL		3614814	1					
ANR	3615145	CompoundStatement		86:2:2060:2122	3614814	1					
ANR	3615146	IdentifierDeclStatement	ProcFamily * family = m_gid_pool . get_family ( ( gid_t ) atoi ( token ) ) ;	141:2:3750:3812	3614814	0	True				
ANR	3615147	IdentifierDecl	* family = m_gid_pool . get_family ( ( gid_t ) atoi ( token ) )		3614814	0					
ANR	3615148	IdentifierDeclType	ProcFamily *		3614814	0					
ANR	3615149	Identifier	family		3614814	1					
ANR	3615150	AssignmentExpression	* family = m_gid_pool . get_family ( ( gid_t ) atoi ( token ) )		3614814	2		=			
ANR	3615151	Identifier	family		3614814	0					
ANR	3615152	CallExpression	m_gid_pool . get_family ( ( gid_t ) atoi ( token ) )		3614814	1					
ANR	3615153	Callee	m_gid_pool . get_family		3614814	0					
ANR	3615154	MemberAccess	m_gid_pool . get_family		3614814	0					
ANR	3615155	Identifier	m_gid_pool		3614814	0					
ANR	3615156	Identifier	get_family		3614814	1					
ANR	3615157	ArgumentList	( gid_t ) atoi ( token )		3614814	1					
ANR	3615158	Argument	( gid_t ) atoi ( token )		3614814	0					
ANR	3615159	CastExpression	( gid_t ) atoi ( token )		3614814	0					
ANR	3615160	CastTarget	gid_t		3614814	0					
ANR	3615161	CallExpression	atoi ( token )		3614814	1					
ANR	3615162	Callee	atoi		3614814	0					
ANR	3615163	Identifier	atoi		3614814	0					
ANR	3615164	ArgumentList	token		3614814	1					
ANR	3615165	Argument	token		3614814	0					
ANR	3615166	Identifier	token		3614814	0					
ANR	3615167	IfStatement	if ( family != NULL )		3614814	1					
ANR	3615168	Condition	family != NULL	142:6:3820:3833	3614814	0	True				
ANR	3615169	EqualityExpression	family != NULL		3614814	0		!=			
ANR	3615170	Identifier	family		3614814	0					
ANR	3615171	Identifier	NULL		3614814	1					
ANR	3615172	CompoundStatement		87:22:2146:2146	3614814	1					
ANR	3615173	ExpressionStatement	"m_monitor -> add_member_to_family ( family , pi , ""GROUP"" )"	143:3:3841:3893	3614814	0	True				
ANR	3615174	CallExpression	"m_monitor -> add_member_to_family ( family , pi , ""GROUP"" )"		3614814	0					
ANR	3615175	Callee	m_monitor -> add_member_to_family		3614814	0					
ANR	3615176	PtrMemberAccess	m_monitor -> add_member_to_family		3614814	0					
ANR	3615177	Identifier	m_monitor		3614814	0					
ANR	3615178	Identifier	add_member_to_family		3614814	1					
ANR	3615179	ArgumentList	family		3614814	1					
ANR	3615180	Argument	family		3614814	0					
ANR	3615181	Identifier	family		3614814	0					
ANR	3615182	Argument	pi		3614814	1					
ANR	3615183	Identifier	pi		3614814	0					
ANR	3615184	Argument	"""GROUP"""		3614814	2					
ANR	3615185	PrimaryExpression	"""GROUP"""		3614814	0					
ANR	3615186	ReturnStatement	return true ;	144:3:3898:3909	3614814	1	True				
ANR	3615187	Identifier	true		3614814	0					
ANR	3615188	ExpressionStatement	"token = strtok_r ( NULL , "" "" , & strtok_ptr )"	146:2:3917:3957	3614814	2	True				
ANR	3615189	AssignmentExpression	"token = strtok_r ( NULL , "" "" , & strtok_ptr )"		3614814	0		=			
ANR	3615190	Identifier	token		3614814	0					
ANR	3615191	CallExpression	"strtok_r ( NULL , "" "" , & strtok_ptr )"		3614814	1					
ANR	3615192	Callee	strtok_r		3614814	0					
ANR	3615193	Identifier	strtok_r		3614814	0					
ANR	3615194	ArgumentList	NULL		3614814	1					
ANR	3615195	Argument	NULL		3614814	0					
ANR	3615196	Identifier	NULL		3614814	0					
ANR	3615197	Argument	""" """		3614814	1					
ANR	3615198	PrimaryExpression	""" """		3614814	0					
ANR	3615199	Argument	& strtok_ptr		3614814	2					
ANR	3615200	UnaryOperationExpression	& strtok_ptr		3614814	0					
ANR	3615201	UnaryOperator	&		3614814	0					
ANR	3615202	Identifier	strtok_ptr		3614814	1					
ANR	3615203	ReturnStatement	return false ;	151:1:4028:4040	3614814	22	True				
ANR	3615204	Identifier	false		3614814	0					
ANR	3615205	ReturnType	bool		3614814	1					
ANR	3615206	Identifier	GroupTracker :: check_process		3614814	2					
ANR	3615207	ParameterList	procInfo * pi		3614814	3					
ANR	3615208	Parameter	procInfo * pi	55:28:1675:1686	3614814	0	True				
ANR	3615209	ParameterType	procInfo *		3614814	0					
ANR	3615210	Identifier	pi		3614814	1					
ANR	3615211	CFGEntryNode	ENTRY		3614814		True				
ANR	3615212	CFGExitNode	EXIT		3614814		True				
ANR	3615213	Symbol	fp		3614814						
ANR	3615214	Symbol	GROUPS_PREFIX_SIZE		3614814						
ANR	3615215	Symbol	buffer_ptr		3614814						
ANR	3615216	Symbol	m_gid_pool . get_family		3614814						
ANR	3615217	Symbol	fgets		3614814						
ANR	3615218	Symbol	m_gid_pool		3614814						
ANR	3615219	Symbol	path		3614814						
ANR	3615220	Symbol	strncmp		3614814						
ANR	3615221	Symbol	strlen		3614814						
ANR	3615222	Symbol	line_len		3614814						
ANR	3615223	Symbol	buffer		3614814						
ANR	3615224	Symbol	snprintf		3614814						
ANR	3615225	Symbol	ret		3614814						
ANR	3615226	Symbol	& strtok_ptr		3614814						
ANR	3615227	Symbol	atoi		3614814						
ANR	3615228	Symbol	errno		3614814						
ANR	3615229	Symbol	* buffer		3614814						
ANR	3615230	Symbol	NULL		3614814						
ANR	3615231	Symbol	safe_fopen_wrapper		3614814						
ANR	3615232	Symbol	D_ALWAYS		3614814						
ANR	3615233	Symbol	false		3614814						
ANR	3615234	Symbol	strtok_r		3614814						
ANR	3615235	Symbol	m_monitor		3614814						
ANR	3615236	Symbol	token		3614814						
ANR	3615237	Symbol	strerror		3614814						
ANR	3615238	Symbol	GROUPS_PREFIX		3614814						
ANR	3615239	Symbol	pi -> pid		3614814						
ANR	3615240	Symbol	true		3614814						
ANR	3615241	Symbol	* line_len		3614814						
ANR	3615242	Symbol	pi		3614814						
ANR	3615243	Symbol	feof		3614814						
ANR	3615244	Symbol	* pi		3614814						
ANR	3615245	Symbol	found_groups		3614814						
ANR	3615246	Symbol	family		3614814						
ANR	3615247	Symbol	strtok_ptr		3614814						
