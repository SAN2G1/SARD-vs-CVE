command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5007295	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_vm_univ_utils.cpp								
ANR	5007296	Function	delete_quotation_marks	35:0:1173:1720							
ANR	5007297	FunctionDef	delete_quotation_marks (const char * value)		5007296	0					
ANR	5007298	CompoundStatement		37:0:1225:1720	5007296	0					
ANR	5007299	IdentifierDeclStatement	MyString fixedvalue ;	38:1:1228:1247	5007296	0	True				
ANR	5007300	IdentifierDecl	fixedvalue		5007296	0					
ANR	5007301	IdentifierDeclType	MyString		5007296	0					
ANR	5007302	Identifier	fixedvalue		5007296	1					
ANR	5007303	IfStatement	if ( ! value || ( value [ 0 ] == '\\0' ) )		5007296	1					
ANR	5007304	Condition	! value || ( value [ 0 ] == '\\0' )	40:5:1255:1282	5007296	0	True				
ANR	5007305	OrExpression	! value || ( value [ 0 ] == '\\0' )		5007296	0		||			
ANR	5007306	UnaryOperationExpression	! value		5007296	0					
ANR	5007307	UnaryOperator	!		5007296	0					
ANR	5007308	Identifier	value		5007296	1					
ANR	5007309	EqualityExpression	value [ 0 ] == '\\0'		5007296	1		==			
ANR	5007310	ArrayIndexing	value [ 0 ]		5007296	0					
ANR	5007311	Identifier	value		5007296	0					
ANR	5007312	PrimaryExpression	0		5007296	1					
ANR	5007313	PrimaryExpression	'\\0'		5007296	1					
ANR	5007314	CompoundStatement		4:35:59:59	5007296	1					
ANR	5007315	ReturnStatement	return fixedvalue ;	41:2:1289:1306	5007296	0	True				
ANR	5007316	Identifier	fixedvalue		5007296	0					
ANR	5007317	IdentifierDeclStatement	char * tmpvalue = strdup ( value ) ;	44:1:1313:1343	5007296	2	True				
ANR	5007318	IdentifierDecl	* tmpvalue = strdup ( value )		5007296	0					
ANR	5007319	IdentifierDeclType	char *		5007296	0					
ANR	5007320	Identifier	tmpvalue		5007296	1					
ANR	5007321	AssignmentExpression	* tmpvalue = strdup ( value )		5007296	2		=			
ANR	5007322	Identifier	tmpvalue		5007296	0					
ANR	5007323	CallExpression	strdup ( value )		5007296	1					
ANR	5007324	Callee	strdup		5007296	0					
ANR	5007325	Identifier	strdup		5007296	0					
ANR	5007326	ArgumentList	value		5007296	1					
ANR	5007327	Argument	value		5007296	0					
ANR	5007328	Identifier	value		5007296	0					
ANR	5007329	IdentifierDeclStatement	char * ptr = tmpvalue ;	45:1:1346:1366	5007296	3	True				
ANR	5007330	IdentifierDecl	* ptr = tmpvalue		5007296	0					
ANR	5007331	IdentifierDeclType	char *		5007296	0					
ANR	5007332	Identifier	ptr		5007296	1					
ANR	5007333	AssignmentExpression	* ptr = tmpvalue		5007296	2		=			
ANR	5007334	Identifier	tmpvalue		5007296	0					
ANR	5007335	Identifier	tmpvalue		5007296	1					
ANR	5007336	WhileStatement	"while ( ( * ptr == '\\""' ) || ( * ptr == '\\'' ) )"		5007296	4					
ANR	5007337	Condition	"( * ptr == '\\""' ) || ( * ptr == '\\'' )"	48:8:1401:1434	5007296	0	True				
ANR	5007338	OrExpression	"( * ptr == '\\""' ) || ( * ptr == '\\'' )"		5007296	0		||			
ANR	5007339	EqualityExpression	"* ptr == '\\""'"		5007296	0		==			
ANR	5007340	UnaryOperationExpression	* ptr		5007296	0					
ANR	5007341	UnaryOperator	*		5007296	0					
ANR	5007342	Identifier	ptr		5007296	1					
ANR	5007343	PrimaryExpression	"'\\""'"		5007296	1					
ANR	5007344	EqualityExpression	* ptr == '\\''		5007296	1		==			
ANR	5007345	UnaryOperationExpression	* ptr		5007296	0					
ANR	5007346	UnaryOperator	*		5007296	0					
ANR	5007347	Identifier	ptr		5007296	1					
ANR	5007348	PrimaryExpression	'\\''		5007296	1					
ANR	5007349	CompoundStatement		12:45:212:212	5007296	1					
ANR	5007350	ExpressionStatement	* ptr = ' '	49:2:1442:1452	5007296	0	True				
ANR	5007351	AssignmentExpression	* ptr = ' '		5007296	0		=			
ANR	5007352	UnaryOperationExpression	* ptr		5007296	0					
ANR	5007353	UnaryOperator	*		5007296	0					
ANR	5007354	Identifier	ptr		5007296	1					
ANR	5007355	PrimaryExpression	' '		5007296	1					
ANR	5007356	ExpressionStatement	ptr ++	50:2:1456:1461	5007296	1	True				
ANR	5007357	PostIncDecOperationExpression	ptr ++		5007296	0					
ANR	5007358	Identifier	ptr		5007296	0					
ANR	5007359	IncDec	++		5007296	1					
ANR	5007360	ExpressionStatement	ptr = tmpvalue + strlen ( tmpvalue ) - 1	53:1:1468:1505	5007296	5	True				
ANR	5007361	AssignmentExpression	ptr = tmpvalue + strlen ( tmpvalue ) - 1		5007296	0		=			
ANR	5007362	Identifier	ptr		5007296	0					
ANR	5007363	AdditiveExpression	tmpvalue + strlen ( tmpvalue ) - 1		5007296	1		+			
ANR	5007364	Identifier	tmpvalue		5007296	0					
ANR	5007365	AdditiveExpression	strlen ( tmpvalue ) - 1		5007296	1		-			
ANR	5007366	CallExpression	strlen ( tmpvalue )		5007296	0					
ANR	5007367	Callee	strlen		5007296	0					
ANR	5007368	Identifier	strlen		5007296	0					
ANR	5007369	ArgumentList	tmpvalue		5007296	1					
ANR	5007370	Argument	tmpvalue		5007296	0					
ANR	5007371	Identifier	tmpvalue		5007296	0					
ANR	5007372	PrimaryExpression	1		5007296	1					
ANR	5007373	WhileStatement	"while ( ( ptr > tmpvalue ) && ( ( * ptr == '\\""' ) || ( * ptr == '\\'' ) ) )"		5007296	6					
ANR	5007374	Condition	"( ptr > tmpvalue ) && ( ( * ptr == '\\""' ) || ( * ptr == '\\'' ) )"	55:8:1539:1602	5007296	0	True				
ANR	5007375	AndExpression	"( ptr > tmpvalue ) && ( ( * ptr == '\\""' ) || ( * ptr == '\\'' ) )"		5007296	0		&&			
ANR	5007376	RelationalExpression	ptr > tmpvalue		5007296	0		>			
ANR	5007377	Identifier	ptr		5007296	0					
ANR	5007378	Identifier	tmpvalue		5007296	1					
ANR	5007379	OrExpression	"( * ptr == '\\""' ) || ( * ptr == '\\'' )"		5007296	1		||			
ANR	5007380	EqualityExpression	"* ptr == '\\""'"		5007296	0		==			
ANR	5007381	UnaryOperationExpression	* ptr		5007296	0					
ANR	5007382	UnaryOperator	*		5007296	0					
ANR	5007383	Identifier	ptr		5007296	1					
ANR	5007384	PrimaryExpression	"'\\""'"		5007296	1					
ANR	5007385	EqualityExpression	* ptr == '\\''		5007296	1		==			
ANR	5007386	UnaryOperationExpression	* ptr		5007296	0					
ANR	5007387	UnaryOperator	*		5007296	0					
ANR	5007388	Identifier	ptr		5007296	1					
ANR	5007389	PrimaryExpression	'\\''		5007296	1					
ANR	5007390	CompoundStatement		20:43:379:379	5007296	1					
ANR	5007391	ExpressionStatement	* ptr = ' '	57:2:1609:1619	5007296	0	True				
ANR	5007392	AssignmentExpression	* ptr = ' '		5007296	0		=			
ANR	5007393	UnaryOperationExpression	* ptr		5007296	0					
ANR	5007394	UnaryOperator	*		5007296	0					
ANR	5007395	Identifier	ptr		5007296	1					
ANR	5007396	PrimaryExpression	' '		5007296	1					
ANR	5007397	ExpressionStatement	ptr --	58:2:1623:1628	5007296	1	True				
ANR	5007398	PostIncDecOperationExpression	ptr --		5007296	0					
ANR	5007399	Identifier	ptr		5007296	0					
ANR	5007400	IncDec	--		5007296	1					
ANR	5007401	ExpressionStatement	fixedvalue = tmpvalue	61:1:1640:1661	5007296	7	True				
ANR	5007402	AssignmentExpression	fixedvalue = tmpvalue		5007296	0		=			
ANR	5007403	Identifier	fixedvalue		5007296	0					
ANR	5007404	Identifier	tmpvalue		5007296	1					
ANR	5007405	ExpressionStatement	fixedvalue . trim ( )	62:1:1664:1681	5007296	8	True				
ANR	5007406	CallExpression	fixedvalue . trim ( )		5007296	0					
ANR	5007407	Callee	fixedvalue . trim		5007296	0					
ANR	5007408	MemberAccess	fixedvalue . trim		5007296	0					
ANR	5007409	Identifier	fixedvalue		5007296	0					
ANR	5007410	Identifier	trim		5007296	1					
ANR	5007411	ArgumentList			5007296	1					
ANR	5007412	ExpressionStatement	free ( tmpvalue )	63:1:1684:1698	5007296	9	True				
ANR	5007413	CallExpression	free ( tmpvalue )		5007296	0					
ANR	5007414	Callee	free		5007296	0					
ANR	5007415	Identifier	free		5007296	0					
ANR	5007416	ArgumentList	tmpvalue		5007296	1					
ANR	5007417	Argument	tmpvalue		5007296	0					
ANR	5007418	Identifier	tmpvalue		5007296	0					
ANR	5007419	ReturnStatement	return fixedvalue ;	64:1:1701:1718	5007296	10	True				
ANR	5007420	Identifier	fixedvalue		5007296	0					
ANR	5007421	ReturnType	MyString		5007296	1					
ANR	5007422	Identifier	delete_quotation_marks		5007296	2					
ANR	5007423	ParameterList	const char * value		5007296	3					
ANR	5007424	Parameter	const char * value	36:23:1206:1222	5007296	0	True				
ANR	5007425	ParameterType	const char *		5007296	0					
ANR	5007426	Identifier	value		5007296	1					
ANR	5007427	CFGEntryNode	ENTRY		5007296		True				
ANR	5007428	CFGExitNode	EXIT		5007296		True				
ANR	5007429	Symbol	tmpvalue		5007296						
ANR	5007430	Symbol	strlen		5007296						
ANR	5007431	Symbol	fixedvalue		5007296						
ANR	5007432	Symbol	* value		5007296						
ANR	5007433	Symbol	* ptr		5007296						
ANR	5007434	Symbol	strdup		5007296						
ANR	5007435	Symbol	value		5007296						
ANR	5007436	Symbol	ptr		5007296						
ANR	5007437	Function	suffix_matched_files_in_dir	68:0:1785:2272							
ANR	5007438	FunctionDef	"suffix_matched_files_in_dir (const char * dirpath , StringList & file_list , const char * suffix , bool use_fullname)"		5007437	0					
ANR	5007439	CompoundStatement		70:0:1901:2272	5007437	0					
ANR	5007440	IdentifierDeclStatement	Directory dir ( dirpath ) ;	71:1:1904:1926	5007437	0	True				
ANR	5007441	IdentifierDecl	dir ( dirpath )		5007437	0					
ANR	5007442	IdentifierDeclType	Directory		5007437	0					
ANR	5007443	Identifier	dir		5007437	1					
ANR	5007444	Identifier	dirpath		5007437	2					
ANR	5007445	IdentifierDeclStatement	bool found_it = false ;	72:1:1929:1950	5007437	1	True				
ANR	5007446	IdentifierDecl	found_it = false		5007437	0					
ANR	5007447	IdentifierDeclType	bool		5007437	0					
ANR	5007448	Identifier	found_it		5007437	1					
ANR	5007449	AssignmentExpression	found_it = false		5007437	2		=			
ANR	5007450	Identifier	false		5007437	0					
ANR	5007451	Identifier	false		5007437	1					
ANR	5007452	ExpressionStatement	file_list . clearAll ( )	74:1:1954:1974	5007437	2	True				
ANR	5007453	CallExpression	file_list . clearAll ( )		5007437	0					
ANR	5007454	Callee	file_list . clearAll		5007437	0					
ANR	5007455	MemberAccess	file_list . clearAll		5007437	0					
ANR	5007456	Identifier	file_list		5007437	0					
ANR	5007457	Identifier	clearAll		5007437	1					
ANR	5007458	ArgumentList			5007437	1					
ANR	5007459	IdentifierDeclStatement	const char * f = NULL ;	75:1:1977:1997	5007437	3	True				
ANR	5007460	IdentifierDecl	* f = NULL		5007437	0					
ANR	5007461	IdentifierDeclType	const char *		5007437	0					
ANR	5007462	Identifier	f		5007437	1					
ANR	5007463	AssignmentExpression	* f = NULL		5007437	2		=			
ANR	5007464	Identifier	NULL		5007437	0					
ANR	5007465	Identifier	NULL		5007437	1					
ANR	5007466	ExpressionStatement	dir . Rewind ( )	77:1:2001:2013	5007437	4	True				
ANR	5007467	CallExpression	dir . Rewind ( )		5007437	0					
ANR	5007468	Callee	dir . Rewind		5007437	0					
ANR	5007469	MemberAccess	dir . Rewind		5007437	0					
ANR	5007470	Identifier	dir		5007437	0					
ANR	5007471	Identifier	Rewind		5007437	1					
ANR	5007472	ArgumentList			5007437	1					
ANR	5007473	WhileStatement	while ( ( f = dir . Next ( ) ) )		5007437	5					
ANR	5007474	Condition	f = dir . Next ( )	78:8:2023:2036	5007437	0	True				
ANR	5007475	AssignmentExpression	f = dir . Next ( )		5007437	0		=			
ANR	5007476	Identifier	f		5007437	0					
ANR	5007477	CallExpression	dir . Next ( )		5007437	1					
ANR	5007478	Callee	dir . Next		5007437	0					
ANR	5007479	MemberAccess	dir . Next		5007437	0					
ANR	5007480	Identifier	dir		5007437	0					
ANR	5007481	Identifier	Next		5007437	1					
ANR	5007482	ArgumentList			5007437	1					
ANR	5007483	CompoundStatement		9:25:138:138	5007437	1					
ANR	5007484	IfStatement	if ( dir . IsDirectory ( ) )		5007437	0					
ANR	5007485	Condition	dir . IsDirectory ( )	80:6:2049:2065	5007437	0	True				
ANR	5007486	CallExpression	dir . IsDirectory ( )		5007437	0					
ANR	5007487	Callee	dir . IsDirectory		5007437	0					
ANR	5007488	MemberAccess	dir . IsDirectory		5007437	0					
ANR	5007489	Identifier	dir		5007437	0					
ANR	5007490	Identifier	IsDirectory		5007437	1					
ANR	5007491	ArgumentList			5007437	1					
ANR	5007492	CompoundStatement		11:26:167:167	5007437	1					
ANR	5007493	ContinueStatement	continue ;	81:3:2074:2082	5007437	0	True				
ANR	5007494	IfStatement	"if ( has_suffix ( f , suffix ) )"		5007437	1					
ANR	5007495	Condition	"has_suffix ( f , suffix )"	84:6:2095:2115	5007437	0	True				
ANR	5007496	CallExpression	"has_suffix ( f , suffix )"		5007437	0					
ANR	5007497	Callee	has_suffix		5007437	0					
ANR	5007498	Identifier	has_suffix		5007437	0					
ANR	5007499	ArgumentList	f		5007437	1					
ANR	5007500	Argument	f		5007437	0					
ANR	5007501	Identifier	f		5007437	0					
ANR	5007502	Argument	suffix		5007437	1					
ANR	5007503	Identifier	suffix		5007437	0					
ANR	5007504	CompoundStatement		15:30:217:217	5007437	1					
ANR	5007505	IfStatement	if ( use_fullname )		5007437	0					
ANR	5007506	Condition	use_fullname	85:7:2128:2139	5007437	0	True				
ANR	5007507	Identifier	use_fullname		5007437	0					
ANR	5007508	CompoundStatement		16:22:241:241	5007437	1					
ANR	5007509	ExpressionStatement	file_list . append ( dir . GetFullPath ( ) )	86:4:2149:2184	5007437	0	True				
ANR	5007510	CallExpression	file_list . append ( dir . GetFullPath ( ) )		5007437	0					
ANR	5007511	Callee	file_list . append		5007437	0					
ANR	5007512	MemberAccess	file_list . append		5007437	0					
ANR	5007513	Identifier	file_list		5007437	0					
ANR	5007514	Identifier	append		5007437	1					
ANR	5007515	ArgumentList	dir . GetFullPath ( )		5007437	1					
ANR	5007516	Argument	dir . GetFullPath ( )		5007437	0					
ANR	5007517	CallExpression	dir . GetFullPath ( )		5007437	0					
ANR	5007518	Callee	dir . GetFullPath		5007437	0					
ANR	5007519	MemberAccess	dir . GetFullPath		5007437	0					
ANR	5007520	Identifier	dir		5007437	0					
ANR	5007521	Identifier	GetFullPath		5007437	1					
ANR	5007522	ArgumentList			5007437	1					
ANR	5007523	ElseStatement	else		5007437	0					
ANR	5007524	CompoundStatement		18:9:293:293	5007437	0					
ANR	5007525	ExpressionStatement	file_list . append ( f )	88:4:2201:2220	5007437	0	True				
ANR	5007526	CallExpression	file_list . append ( f )		5007437	0					
ANR	5007527	Callee	file_list . append		5007437	0					
ANR	5007528	MemberAccess	file_list . append		5007437	0					
ANR	5007529	Identifier	file_list		5007437	0					
ANR	5007530	Identifier	append		5007437	1					
ANR	5007531	ArgumentList	f		5007437	1					
ANR	5007532	Argument	f		5007437	0					
ANR	5007533	Identifier	f		5007437	0					
ANR	5007534	ExpressionStatement	found_it = true	90:3:2230:2245	5007437	1	True				
ANR	5007535	AssignmentExpression	found_it = true		5007437	0		=			
ANR	5007536	Identifier	found_it		5007437	0					
ANR	5007537	Identifier	true		5007437	1					
ANR	5007538	ReturnStatement	return found_it ;	93:1:2255:2270	5007437	6	True				
ANR	5007539	Identifier	found_it		5007437	0					
ANR	5007540	ReturnType	bool		5007437	1					
ANR	5007541	Identifier	suffix_matched_files_in_dir		5007437	2					
ANR	5007542	ParameterList	"const char * dirpath , StringList & file_list , const char * suffix , bool use_fullname"		5007437	3					
ANR	5007543	Parameter	const char * dirpath	69:28:1818:1836	5007437	0	True				
ANR	5007544	ParameterType	const char *		5007437	0					
ANR	5007545	Identifier	dirpath		5007437	1					
ANR	5007546	Parameter	StringList & file_list	69:49:1839:1859	5007437	1	True				
ANR	5007547	ParameterType	StringList &		5007437	0					
ANR	5007548	Identifier	file_list		5007437	1					
ANR	5007549	Parameter	const char * suffix	69:72:1862:1879	5007437	2	True				
ANR	5007550	ParameterType	const char *		5007437	0					
ANR	5007551	Identifier	suffix		5007437	1					
ANR	5007552	Parameter	bool use_fullname	69:92:1882:1898	5007437	3	True				
ANR	5007553	ParameterType	bool		5007437	0					
ANR	5007554	Identifier	use_fullname		5007437	1					
ANR	5007555	CFGEntryNode	ENTRY		5007437		True				
ANR	5007556	CFGExitNode	EXIT		5007437		True				
ANR	5007557	Symbol	NULL		5007437						
ANR	5007558	Symbol	dirpath		5007437						
ANR	5007559	Symbol	file_list		5007437						
ANR	5007560	Symbol	f		5007437						
ANR	5007561	Symbol	found_it		5007437						
ANR	5007562	Symbol	false		5007437						
ANR	5007563	Symbol	suffix		5007437						
ANR	5007564	Symbol	dir		5007437						
ANR	5007565	Symbol	dir . Next		5007437						
ANR	5007566	Symbol	has_suffix		5007437						
ANR	5007567	Symbol	dir . GetFullPath		5007437						
ANR	5007568	Symbol	true		5007437						
ANR	5007569	Symbol	dir . IsDirectory		5007437						
ANR	5007570	Symbol	use_fullname		5007437						
ANR	5007571	Function	find_all_files_in_dir	97:0:2330:2699							
ANR	5007572	FunctionDef	"find_all_files_in_dir (const char * dirpath , StringList & file_list , bool use_fullname)"		5007571	0					
ANR	5007573	CompoundStatement		99:0:2421:2699	5007571	0					
ANR	5007574	IdentifierDeclStatement	Directory dir ( dirpath ) ;	100:1:2424:2446	5007571	0	True				
ANR	5007575	IdentifierDecl	dir ( dirpath )		5007571	0					
ANR	5007576	IdentifierDeclType	Directory		5007571	0					
ANR	5007577	Identifier	dir		5007571	1					
ANR	5007578	Identifier	dirpath		5007571	2					
ANR	5007579	ExpressionStatement	file_list . clearAll ( )	102:1:2450:2470	5007571	1	True				
ANR	5007580	CallExpression	file_list . clearAll ( )		5007571	0					
ANR	5007581	Callee	file_list . clearAll		5007571	0					
ANR	5007582	MemberAccess	file_list . clearAll		5007571	0					
ANR	5007583	Identifier	file_list		5007571	0					
ANR	5007584	Identifier	clearAll		5007571	1					
ANR	5007585	ArgumentList			5007571	1					
ANR	5007586	IdentifierDeclStatement	const char * f = NULL ;	104:1:2474:2494	5007571	2	True				
ANR	5007587	IdentifierDecl	* f = NULL		5007571	0					
ANR	5007588	IdentifierDeclType	const char *		5007571	0					
ANR	5007589	Identifier	f		5007571	1					
ANR	5007590	AssignmentExpression	* f = NULL		5007571	2		=			
ANR	5007591	Identifier	NULL		5007571	0					
ANR	5007592	Identifier	NULL		5007571	1					
ANR	5007593	ExpressionStatement	dir . Rewind ( )	106:1:2498:2510	5007571	3	True				
ANR	5007594	CallExpression	dir . Rewind ( )		5007571	0					
ANR	5007595	Callee	dir . Rewind		5007571	0					
ANR	5007596	MemberAccess	dir . Rewind		5007571	0					
ANR	5007597	Identifier	dir		5007571	0					
ANR	5007598	Identifier	Rewind		5007571	1					
ANR	5007599	ArgumentList			5007571	1					
ANR	5007600	WhileStatement	while ( ( f = dir . Next ( ) ) )		5007571	4					
ANR	5007601	Condition	f = dir . Next ( )	107:8:2520:2533	5007571	0	True				
ANR	5007602	AssignmentExpression	f = dir . Next ( )		5007571	0		=			
ANR	5007603	Identifier	f		5007571	0					
ANR	5007604	CallExpression	dir . Next ( )		5007571	1					
ANR	5007605	Callee	dir . Next		5007571	0					
ANR	5007606	MemberAccess	dir . Next		5007571	0					
ANR	5007607	Identifier	dir		5007571	0					
ANR	5007608	Identifier	Next		5007571	1					
ANR	5007609	ArgumentList			5007571	1					
ANR	5007610	CompoundStatement		9:25:115:115	5007571	1					
ANR	5007611	IfStatement	if ( dir . IsDirectory ( ) )		5007571	0					
ANR	5007612	Condition	dir . IsDirectory ( )	109:6:2546:2562	5007571	0	True				
ANR	5007613	CallExpression	dir . IsDirectory ( )		5007571	0					
ANR	5007614	Callee	dir . IsDirectory		5007571	0					
ANR	5007615	MemberAccess	dir . IsDirectory		5007571	0					
ANR	5007616	Identifier	dir		5007571	0					
ANR	5007617	Identifier	IsDirectory		5007571	1					
ANR	5007618	ArgumentList			5007571	1					
ANR	5007619	CompoundStatement		11:26:144:144	5007571	1					
ANR	5007620	ContinueStatement	continue ;	110:3:2571:2579	5007571	0	True				
ANR	5007621	IfStatement	if ( use_fullname )		5007571	1					
ANR	5007622	Condition	use_fullname	113:6:2592:2603	5007571	0	True				
ANR	5007623	Identifier	use_fullname		5007571	0					
ANR	5007624	CompoundStatement		15:21:185:185	5007571	1					
ANR	5007625	ExpressionStatement	file_list . append ( dir . GetFullPath ( ) )	114:3:2612:2647	5007571	0	True				
ANR	5007626	CallExpression	file_list . append ( dir . GetFullPath ( ) )		5007571	0					
ANR	5007627	Callee	file_list . append		5007571	0					
ANR	5007628	MemberAccess	file_list . append		5007571	0					
ANR	5007629	Identifier	file_list		5007571	0					
ANR	5007630	Identifier	append		5007571	1					
ANR	5007631	ArgumentList	dir . GetFullPath ( )		5007571	1					
ANR	5007632	Argument	dir . GetFullPath ( )		5007571	0					
ANR	5007633	CallExpression	dir . GetFullPath ( )		5007571	0					
ANR	5007634	Callee	dir . GetFullPath		5007571	0					
ANR	5007635	MemberAccess	dir . GetFullPath		5007571	0					
ANR	5007636	Identifier	dir		5007571	0					
ANR	5007637	Identifier	GetFullPath		5007571	1					
ANR	5007638	ArgumentList			5007571	1					
ANR	5007639	ElseStatement	else		5007571	0					
ANR	5007640	CompoundStatement		17:8:235:235	5007571	0					
ANR	5007641	ExpressionStatement	file_list . append ( f )	116:3:2662:2681	5007571	0	True				
ANR	5007642	CallExpression	file_list . append ( f )		5007571	0					
ANR	5007643	Callee	file_list . append		5007571	0					
ANR	5007644	MemberAccess	file_list . append		5007571	0					
ANR	5007645	Identifier	file_list		5007571	0					
ANR	5007646	Identifier	append		5007571	1					
ANR	5007647	ArgumentList	f		5007571	1					
ANR	5007648	Argument	f		5007571	0					
ANR	5007649	Identifier	f		5007571	0					
ANR	5007650	ReturnStatement	return ;	119:1:2691:2697	5007571	5	True				
ANR	5007651	ReturnType	void		5007571	1					
ANR	5007652	Identifier	find_all_files_in_dir		5007571	2					
ANR	5007653	ParameterList	"const char * dirpath , StringList & file_list , bool use_fullname"		5007571	3					
ANR	5007654	Parameter	const char * dirpath	98:22:2358:2376	5007571	0	True				
ANR	5007655	ParameterType	const char *		5007571	0					
ANR	5007656	Identifier	dirpath		5007571	1					
ANR	5007657	Parameter	StringList & file_list	98:43:2379:2399	5007571	1	True				
ANR	5007658	ParameterType	StringList &		5007571	0					
ANR	5007659	Identifier	file_list		5007571	1					
ANR	5007660	Parameter	bool use_fullname	98:66:2402:2418	5007571	2	True				
ANR	5007661	ParameterType	bool		5007571	0					
ANR	5007662	Identifier	use_fullname		5007571	1					
ANR	5007663	CFGEntryNode	ENTRY		5007571		True				
ANR	5007664	CFGExitNode	EXIT		5007571		True				
ANR	5007665	Symbol	dir . GetFullPath		5007571						
ANR	5007666	Symbol	NULL		5007571						
ANR	5007667	Symbol	dirpath		5007571						
ANR	5007668	Symbol	file_list		5007571						
ANR	5007669	Symbol	f		5007571						
ANR	5007670	Symbol	dir . IsDirectory		5007571						
ANR	5007671	Symbol	dir		5007571						
ANR	5007672	Symbol	dir . Next		5007571						
ANR	5007673	Symbol	use_fullname		5007571						
ANR	5007674	Function	filelist_contains_file	124:0:2823:3250							
ANR	5007675	FunctionDef	"filelist_contains_file (const char * filename , StringList * file_list , bool use_base)"		5007674	0					
ANR	5007676	CompoundStatement		126:0:2911:3250	5007674	0					
ANR	5007677	IfStatement	if ( ! filename || ! file_list )		5007674	0					
ANR	5007678	Condition	! filename || ! file_list	127:5:2918:2940	5007674	0	True				
ANR	5007679	OrExpression	! filename || ! file_list		5007674	0		||			
ANR	5007680	UnaryOperationExpression	! filename		5007674	0					
ANR	5007681	UnaryOperator	!		5007674	0					
ANR	5007682	Identifier	filename		5007674	1					
ANR	5007683	UnaryOperationExpression	! file_list		5007674	1					
ANR	5007684	UnaryOperator	!		5007674	0					
ANR	5007685	Identifier	file_list		5007674	1					
ANR	5007686	CompoundStatement		2:31:32:32	5007674	1					
ANR	5007687	ReturnStatement	return false ;	128:2:2948:2960	5007674	0	True				
ANR	5007688	Identifier	false		5007674	0					
ANR	5007689	IfStatement	if ( ! use_base )		5007674	1					
ANR	5007690	Condition	! use_base	131:5:2971:2979	5007674	0	True				
ANR	5007691	UnaryOperationExpression	! use_base		5007674	0					
ANR	5007692	UnaryOperator	!		5007674	0					
ANR	5007693	Identifier	use_base		5007674	1					
ANR	5007694	CompoundStatement		6:17:71:71	5007674	1					
ANR	5007695	ReturnStatement	return file_list -> contains ( filename ) ;	132:2:2987:3023	5007674	0	True				
ANR	5007696	CallExpression	file_list -> contains ( filename )		5007674	0					
ANR	5007697	Callee	file_list -> contains		5007674	0					
ANR	5007698	PtrMemberAccess	file_list -> contains		5007674	0					
ANR	5007699	Identifier	file_list		5007674	0					
ANR	5007700	Identifier	contains		5007674	1					
ANR	5007701	ArgumentList	filename		5007674	1					
ANR	5007702	Argument	filename		5007674	0					
ANR	5007703	Identifier	filename		5007674	0					
ANR	5007704	ExpressionStatement	file_list -> rewind ( )	135:1:3030:3049	5007674	2	True				
ANR	5007705	CallExpression	file_list -> rewind ( )		5007674	0					
ANR	5007706	Callee	file_list -> rewind		5007674	0					
ANR	5007707	PtrMemberAccess	file_list -> rewind		5007674	0					
ANR	5007708	Identifier	file_list		5007674	0					
ANR	5007709	Identifier	rewind		5007674	1					
ANR	5007710	ArgumentList			5007674	1					
ANR	5007711	IdentifierDeclStatement	char * tmp_file = NULL ;	136:1:3052:3073	5007674	3	True				
ANR	5007712	IdentifierDecl	* tmp_file = NULL		5007674	0					
ANR	5007713	IdentifierDeclType	char *		5007674	0					
ANR	5007714	Identifier	tmp_file		5007674	1					
ANR	5007715	AssignmentExpression	* tmp_file = NULL		5007674	2		=			
ANR	5007716	Identifier	NULL		5007674	0					
ANR	5007717	Identifier	NULL		5007674	1					
ANR	5007718	WhileStatement	while ( ( tmp_file = file_list -> next ( ) ) != NULL )		5007674	4					
ANR	5007719	Condition	( tmp_file = file_list -> next ( ) ) != NULL	137:8:3083:3120	5007674	0	True				
ANR	5007720	EqualityExpression	( tmp_file = file_list -> next ( ) ) != NULL		5007674	0		!=			
ANR	5007721	AssignmentExpression	tmp_file = file_list -> next ( )		5007674	0		=			
ANR	5007722	Identifier	tmp_file		5007674	0					
ANR	5007723	CallExpression	file_list -> next ( )		5007674	1					
ANR	5007724	Callee	file_list -> next		5007674	0					
ANR	5007725	PtrMemberAccess	file_list -> next		5007674	0					
ANR	5007726	Identifier	file_list		5007674	0					
ANR	5007727	Identifier	next		5007674	1					
ANR	5007728	ArgumentList			5007674	1					
ANR	5007729	Identifier	NULL		5007674	1					
ANR	5007730	CompoundStatement		12:49:212:212	5007674	1					
ANR	5007731	IfStatement	"if ( strcmp ( condor_basename ( filename ) , condor_basename ( tmp_file ) ) == MATCH )"		5007674	0					
ANR	5007732	Condition	"strcmp ( condor_basename ( filename ) , condor_basename ( tmp_file ) ) == MATCH"	138:6:3132:3206	5007674	0	True				
ANR	5007733	EqualityExpression	"strcmp ( condor_basename ( filename ) , condor_basename ( tmp_file ) ) == MATCH"		5007674	0		==			
ANR	5007734	CallExpression	"strcmp ( condor_basename ( filename ) , condor_basename ( tmp_file ) )"		5007674	0					
ANR	5007735	Callee	strcmp		5007674	0					
ANR	5007736	Identifier	strcmp		5007674	0					
ANR	5007737	ArgumentList	condor_basename ( filename )		5007674	1					
ANR	5007738	Argument	condor_basename ( filename )		5007674	0					
ANR	5007739	CallExpression	condor_basename ( filename )		5007674	0					
ANR	5007740	Callee	condor_basename		5007674	0					
ANR	5007741	Identifier	condor_basename		5007674	0					
ANR	5007742	ArgumentList	filename		5007674	1					
ANR	5007743	Argument	filename		5007674	0					
ANR	5007744	Identifier	filename		5007674	0					
ANR	5007745	Argument	condor_basename ( tmp_file )		5007674	1					
ANR	5007746	CallExpression	condor_basename ( tmp_file )		5007674	0					
ANR	5007747	Callee	condor_basename		5007674	0					
ANR	5007748	Identifier	condor_basename		5007674	0					
ANR	5007749	ArgumentList	tmp_file		5007674	1					
ANR	5007750	Argument	tmp_file		5007674	0					
ANR	5007751	Identifier	tmp_file		5007674	0					
ANR	5007752	Identifier	MATCH		5007674	1					
ANR	5007753	CompoundStatement		14:43:298:298	5007674	1					
ANR	5007754	ReturnStatement	return true ;	140:3:3215:3226	5007674	0	True				
ANR	5007755	Identifier	true		5007674	0					
ANR	5007756	ReturnStatement	return false ;	143:1:3236:3248	5007674	5	True				
ANR	5007757	Identifier	false		5007674	0					
ANR	5007758	ReturnType	bool		5007674	1					
ANR	5007759	Identifier	filelist_contains_file		5007674	2					
ANR	5007760	ParameterList	"const char * filename , StringList * file_list , bool use_base"		5007674	3					
ANR	5007761	Parameter	const char * filename	125:23:2851:2870	5007674	0	True				
ANR	5007762	ParameterType	const char *		5007674	0					
ANR	5007763	Identifier	filename		5007674	1					
ANR	5007764	Parameter	StringList * file_list	125:45:2873:2893	5007674	1	True				
ANR	5007765	ParameterType	StringList *		5007674	0					
ANR	5007766	Identifier	file_list		5007674	1					
ANR	5007767	Parameter	bool use_base	125:68:2896:2908	5007674	2	True				
ANR	5007768	ParameterType	bool		5007674	0					
ANR	5007769	Identifier	use_base		5007674	1					
ANR	5007770	CFGEntryNode	ENTRY		5007674		True				
ANR	5007771	CFGExitNode	EXIT		5007674		True				
ANR	5007772	Symbol	strcmp		5007674						
ANR	5007773	Symbol	NULL		5007674						
ANR	5007774	Symbol	file_list		5007674						
ANR	5007775	Symbol	false		5007674						
ANR	5007776	Symbol	file_list -> contains		5007674						
ANR	5007777	Symbol	file_list -> next		5007674						
ANR	5007778	Symbol	use_base		5007674						
ANR	5007779	Symbol	* file_list		5007674						
ANR	5007780	Symbol	filename		5007674						
ANR	5007781	Symbol	true		5007674						
ANR	5007782	Symbol	tmp_file		5007674						
ANR	5007783	Symbol	condor_basename		5007674						
ANR	5007784	Symbol	MATCH		5007674						
ANR	5007785	Function	delete_all_files_in_filelist	146:0:3253:3473							
ANR	5007786	FunctionDef	delete_all_files_in_filelist (StringList * file_list)		5007785	0					
ANR	5007787	CompoundStatement		148:0:3310:3473	5007785	0					
ANR	5007788	IfStatement	if ( ! file_list )		5007785	0					
ANR	5007789	Condition	! file_list	149:5:3317:3326	5007785	0	True				
ANR	5007790	UnaryOperationExpression	! file_list		5007785	0					
ANR	5007791	UnaryOperator	!		5007785	0					
ANR	5007792	Identifier	file_list		5007785	1					
ANR	5007793	CompoundStatement		2:18:19:19	5007785	1					
ANR	5007794	ReturnStatement	return ;	150:2:3334:3340	5007785	0	True				
ANR	5007795	IdentifierDeclStatement	char * tmp = NULL ;	153:1:3347:3363	5007785	1	True				
ANR	5007796	IdentifierDecl	* tmp = NULL		5007785	0					
ANR	5007797	IdentifierDeclType	char *		5007785	0					
ANR	5007798	Identifier	tmp		5007785	1					
ANR	5007799	AssignmentExpression	* tmp = NULL		5007785	2		=			
ANR	5007800	Identifier	NULL		5007785	0					
ANR	5007801	Identifier	NULL		5007785	1					
ANR	5007802	ExpressionStatement	file_list -> rewind ( )	154:1:3366:3385	5007785	2	True				
ANR	5007803	CallExpression	file_list -> rewind ( )		5007785	0					
ANR	5007804	Callee	file_list -> rewind		5007785	0					
ANR	5007805	PtrMemberAccess	file_list -> rewind		5007785	0					
ANR	5007806	Identifier	file_list		5007785	0					
ANR	5007807	Identifier	rewind		5007785	1					
ANR	5007808	ArgumentList			5007785	1					
ANR	5007809	WhileStatement	while ( ( tmp = file_list -> next ( ) ) )		5007785	3					
ANR	5007810	Condition	tmp = file_list -> next ( )	155:8:3395:3419	5007785	0	True				
ANR	5007811	AssignmentExpression	tmp = file_list -> next ( )		5007785	0		=			
ANR	5007812	Identifier	tmp		5007785	0					
ANR	5007813	CallExpression	file_list -> next ( )		5007785	1					
ANR	5007814	Callee	file_list -> next		5007785	0					
ANR	5007815	PtrMemberAccess	file_list -> next		5007785	0					
ANR	5007816	Identifier	file_list		5007785	0					
ANR	5007817	Identifier	next		5007785	1					
ANR	5007818	ArgumentList			5007785	1					
ANR	5007819	CompoundStatement		8:36:112:112	5007785	1					
ANR	5007820	ExpressionStatement	unlink ( tmp )	156:2:3427:3438	5007785	0	True				
ANR	5007821	CallExpression	unlink ( tmp )		5007785	0					
ANR	5007822	Callee	unlink		5007785	0					
ANR	5007823	Identifier	unlink		5007785	0					
ANR	5007824	ArgumentList	tmp		5007785	1					
ANR	5007825	Argument	tmp		5007785	0					
ANR	5007826	Identifier	tmp		5007785	0					
ANR	5007827	ExpressionStatement	file_list -> deleteCurrent ( )	157:2:3442:3468	5007785	1	True				
ANR	5007828	CallExpression	file_list -> deleteCurrent ( )		5007785	0					
ANR	5007829	Callee	file_list -> deleteCurrent		5007785	0					
ANR	5007830	PtrMemberAccess	file_list -> deleteCurrent		5007785	0					
ANR	5007831	Identifier	file_list		5007785	0					
ANR	5007832	Identifier	deleteCurrent		5007785	1					
ANR	5007833	ArgumentList			5007785	1					
ANR	5007834	ReturnType	void		5007785	1					
ANR	5007835	Identifier	delete_all_files_in_filelist		5007785	2					
ANR	5007836	ParameterList	StringList * file_list		5007785	3					
ANR	5007837	Parameter	StringList * file_list	147:29:3287:3307	5007785	0	True				
ANR	5007838	ParameterType	StringList *		5007785	0					
ANR	5007839	Identifier	file_list		5007785	1					
ANR	5007840	CFGEntryNode	ENTRY		5007785		True				
ANR	5007841	CFGExitNode	EXIT		5007785		True				
ANR	5007842	Symbol	file_list -> next		5007785						
ANR	5007843	Symbol	* file_list		5007785						
ANR	5007844	Symbol	NULL		5007785						
ANR	5007845	Symbol	file_list		5007785						
ANR	5007846	Symbol	tmp		5007785						
ANR	5007847	Function	has_suffix	161:0:3476:3974							
ANR	5007848	FunctionDef	"has_suffix (const char * filename , const char * suffix)"		5007847	0					
ANR	5007849	CompoundStatement		163:0:3534:3974	5007847	0					
ANR	5007850	IdentifierDeclStatement	int file_length = 0 ;	164:1:3537:3556	5007847	0	True				
ANR	5007851	IdentifierDecl	file_length = 0		5007847	0					
ANR	5007852	IdentifierDeclType	int		5007847	0					
ANR	5007853	Identifier	file_length		5007847	1					
ANR	5007854	AssignmentExpression	file_length = 0		5007847	2		=			
ANR	5007855	Identifier	file_length		5007847	0					
ANR	5007856	PrimaryExpression	0		5007847	1					
ANR	5007857	IdentifierDeclStatement	const char * tmp_ptr = NULL ;	165:1:3559:3585	5007847	1	True				
ANR	5007858	IdentifierDecl	* tmp_ptr = NULL		5007847	0					
ANR	5007859	IdentifierDeclType	const char *		5007847	0					
ANR	5007860	Identifier	tmp_ptr		5007847	1					
ANR	5007861	AssignmentExpression	* tmp_ptr = NULL		5007847	2		=			
ANR	5007862	Identifier	NULL		5007847	0					
ANR	5007863	Identifier	NULL		5007847	1					
ANR	5007864	IdentifierDeclStatement	int ext_length = 0 ;	166:1:3588:3606	5007847	2	True				
ANR	5007865	IdentifierDecl	ext_length = 0		5007847	0					
ANR	5007866	IdentifierDeclType	int		5007847	0					
ANR	5007867	Identifier	ext_length		5007847	1					
ANR	5007868	AssignmentExpression	ext_length = 0		5007847	2		=			
ANR	5007869	Identifier	ext_length		5007847	0					
ANR	5007870	PrimaryExpression	0		5007847	1					
ANR	5007871	IfStatement	if ( ! filename || ( filename [ 0 ] == '\\0' ) || ! suffix || ( suffix [ 0 ] == '\\0' ) )		5007847	3					
ANR	5007872	Condition	! filename || ( filename [ 0 ] == '\\0' ) || ! suffix || ( suffix [ 0 ] == '\\0' )	168:5:3614:3688	5007847	0	True				
ANR	5007873	OrExpression	! filename || ( filename [ 0 ] == '\\0' ) || ! suffix || ( suffix [ 0 ] == '\\0' )		5007847	0		||			
ANR	5007874	UnaryOperationExpression	! filename		5007847	0					
ANR	5007875	UnaryOperator	!		5007847	0					
ANR	5007876	Identifier	filename		5007847	1					
ANR	5007877	OrExpression	( filename [ 0 ] == '\\0' ) || ! suffix || ( suffix [ 0 ] == '\\0' )		5007847	1		||			
ANR	5007878	EqualityExpression	filename [ 0 ] == '\\0'		5007847	0		==			
ANR	5007879	ArrayIndexing	filename [ 0 ]		5007847	0					
ANR	5007880	Identifier	filename		5007847	0					
ANR	5007881	PrimaryExpression	0		5007847	1					
ANR	5007882	PrimaryExpression	'\\0'		5007847	1					
ANR	5007883	OrExpression	! suffix || ( suffix [ 0 ] == '\\0' )		5007847	1		||			
ANR	5007884	UnaryOperationExpression	! suffix		5007847	0					
ANR	5007885	UnaryOperator	!		5007847	0					
ANR	5007886	Identifier	suffix		5007847	1					
ANR	5007887	EqualityExpression	suffix [ 0 ] == '\\0'		5007847	1		==			
ANR	5007888	ArrayIndexing	suffix [ 0 ]		5007847	0					
ANR	5007889	Identifier	suffix		5007847	0					
ANR	5007890	PrimaryExpression	0		5007847	1					
ANR	5007891	PrimaryExpression	'\\0'		5007847	1					
ANR	5007892	CompoundStatement		7:40:156:156	5007847	1					
ANR	5007893	ReturnStatement	return false ;	170:2:3695:3707	5007847	0	True				
ANR	5007894	Identifier	false		5007847	0					
ANR	5007895	ExpressionStatement	ext_length = strlen ( suffix )	173:1:3714:3741	5007847	4	True				
ANR	5007896	AssignmentExpression	ext_length = strlen ( suffix )		5007847	0		=			
ANR	5007897	Identifier	ext_length		5007847	0					
ANR	5007898	CallExpression	strlen ( suffix )		5007847	1					
ANR	5007899	Callee	strlen		5007847	0					
ANR	5007900	Identifier	strlen		5007847	0					
ANR	5007901	ArgumentList	suffix		5007847	1					
ANR	5007902	Argument	suffix		5007847	0					
ANR	5007903	Identifier	suffix		5007847	0					
ANR	5007904	ExpressionStatement	file_length = strlen ( filename )	174:1:3744:3774	5007847	5	True				
ANR	5007905	AssignmentExpression	file_length = strlen ( filename )		5007847	0		=			
ANR	5007906	Identifier	file_length		5007847	0					
ANR	5007907	CallExpression	strlen ( filename )		5007847	1					
ANR	5007908	Callee	strlen		5007847	0					
ANR	5007909	Identifier	strlen		5007847	0					
ANR	5007910	ArgumentList	filename		5007847	1					
ANR	5007911	Argument	filename		5007847	0					
ANR	5007912	Identifier	filename		5007847	0					
ANR	5007913	IfStatement	if ( file_length < ext_length )		5007847	6					
ANR	5007914	Condition	file_length < ext_length	175:5:3781:3804	5007847	0	True				
ANR	5007915	RelationalExpression	file_length < ext_length		5007847	0		<			
ANR	5007916	Identifier	file_length		5007847	0					
ANR	5007917	Identifier	ext_length		5007847	1					
ANR	5007918	CompoundStatement		13:32:273:273	5007847	1					
ANR	5007919	ReturnStatement	return false ;	176:2:3812:3824	5007847	0	True				
ANR	5007920	Identifier	false		5007847	0					
ANR	5007921	ExpressionStatement	tmp_ptr = ( const char * ) ( filename + file_length - ext_length )	179:1:3831:3892	5007847	7	True				
ANR	5007922	AssignmentExpression	tmp_ptr = ( const char * ) ( filename + file_length - ext_length )		5007847	0		=			
ANR	5007923	Identifier	tmp_ptr		5007847	0					
ANR	5007924	CastExpression	( const char * ) ( filename + file_length - ext_length )		5007847	1					
ANR	5007925	CastTarget	const char *		5007847	0					
ANR	5007926	AdditiveExpression	filename + file_length - ext_length		5007847	1		+			
ANR	5007927	Identifier	filename		5007847	0					
ANR	5007928	AdditiveExpression	file_length - ext_length		5007847	1		-			
ANR	5007929	Identifier	file_length		5007847	0					
ANR	5007930	Identifier	ext_length		5007847	1					
ANR	5007931	IfStatement	"if ( strcasecmp ( tmp_ptr , suffix ) == MATCH )"		5007847	8					
ANR	5007932	Condition	"strcasecmp ( tmp_ptr , suffix ) == MATCH"	180:5:3899:3934	5007847	0	True				
ANR	5007933	EqualityExpression	"strcasecmp ( tmp_ptr , suffix ) == MATCH"		5007847	0		==			
ANR	5007934	CallExpression	"strcasecmp ( tmp_ptr , suffix )"		5007847	0					
ANR	5007935	Callee	strcasecmp		5007847	0					
ANR	5007936	Identifier	strcasecmp		5007847	0					
ANR	5007937	ArgumentList	tmp_ptr		5007847	1					
ANR	5007938	Argument	tmp_ptr		5007847	0					
ANR	5007939	Identifier	tmp_ptr		5007847	0					
ANR	5007940	Argument	suffix		5007847	1					
ANR	5007941	Identifier	suffix		5007847	0					
ANR	5007942	Identifier	MATCH		5007847	1					
ANR	5007943	CompoundStatement		18:44:403:403	5007847	1					
ANR	5007944	ReturnStatement	return true ;	181:2:3942:3953	5007847	0	True				
ANR	5007945	Identifier	true		5007847	0					
ANR	5007946	ReturnStatement	return false ;	184:1:3960:3972	5007847	9	True				
ANR	5007947	Identifier	false		5007847	0					
ANR	5007948	ReturnType	bool		5007847	1					
ANR	5007949	Identifier	has_suffix		5007847	2					
ANR	5007950	ParameterList	"const char * filename , const char * suffix"		5007847	3					
ANR	5007951	Parameter	const char * filename	162:11:3492:3511	5007847	0	True				
ANR	5007952	ParameterType	const char *		5007847	0					
ANR	5007953	Identifier	filename		5007847	1					
ANR	5007954	Parameter	const char * suffix	162:33:3514:3531	5007847	1	True				
ANR	5007955	ParameterType	const char *		5007847	0					
ANR	5007956	Identifier	suffix		5007847	1					
ANR	5007957	CFGEntryNode	ENTRY		5007847		True				
ANR	5007958	CFGExitNode	EXIT		5007847		True				
ANR	5007959	Symbol	NULL		5007847						
ANR	5007960	Symbol	false		5007847						
ANR	5007961	Symbol	suffix		5007847						
ANR	5007962	Symbol	tmp_ptr		5007847						
ANR	5007963	Symbol	ext_length		5007847						
ANR	5007964	Symbol	* suffix		5007847						
ANR	5007965	Symbol	strlen		5007847						
ANR	5007966	Symbol	filename		5007847						
ANR	5007967	Symbol	* filename		5007847						
ANR	5007968	Symbol	true		5007847						
ANR	5007969	Symbol	file_length		5007847						
ANR	5007970	Symbol	strcasecmp		5007847						
ANR	5007971	Symbol	MATCH		5007847						
ANR	5007972	Function	parse_param_string	187:0:3977:4556							
ANR	5007973	FunctionDef	"parse_param_string (const char * line , MyString & name , MyString & value , bool del_quotes)"		5007972	0					
ANR	5007974	CompoundStatement		189:0:4069:4556	5007972	0					
ANR	5007975	IdentifierDeclStatement	MyString one_line ;	190:1:4072:4089	5007972	0	True				
ANR	5007976	IdentifierDecl	one_line		5007972	0					
ANR	5007977	IdentifierDeclType	MyString		5007972	0					
ANR	5007978	Identifier	one_line		5007972	1					
ANR	5007979	IdentifierDeclStatement	int pos = 0 ;	191:1:4092:4101	5007972	1	True				
ANR	5007980	IdentifierDecl	pos = 0		5007972	0					
ANR	5007981	IdentifierDeclType	int		5007972	0					
ANR	5007982	Identifier	pos		5007972	1					
ANR	5007983	AssignmentExpression	pos = 0		5007972	2		=			
ANR	5007984	Identifier	pos		5007972	0					
ANR	5007985	PrimaryExpression	0		5007972	1					
ANR	5007986	ExpressionStatement	"name = """""	193:1:4105:4114	5007972	2	True				
ANR	5007987	AssignmentExpression	"name = """""		5007972	0		=			
ANR	5007988	Identifier	name		5007972	0					
ANR	5007989	PrimaryExpression	""""""		5007972	1					
ANR	5007990	ExpressionStatement	"value = """""	194:1:4117:4127	5007972	3	True				
ANR	5007991	AssignmentExpression	"value = """""		5007972	0		=			
ANR	5007992	Identifier	value		5007972	0					
ANR	5007993	PrimaryExpression	""""""		5007972	1					
ANR	5007994	IfStatement	if ( ! line || ( line [ 0 ] == '\\0' ) )		5007972	4					
ANR	5007995	Condition	! line || ( line [ 0 ] == '\\0' )	196:5:4135:4160	5007972	0	True				
ANR	5007996	OrExpression	! line || ( line [ 0 ] == '\\0' )		5007972	0		||			
ANR	5007997	UnaryOperationExpression	! line		5007972	0					
ANR	5007998	UnaryOperator	!		5007972	0					
ANR	5007999	Identifier	line		5007972	1					
ANR	5008000	EqualityExpression	line [ 0 ] == '\\0'		5007972	1		==			
ANR	5008001	ArrayIndexing	line [ 0 ]		5007972	0					
ANR	5008002	Identifier	line		5007972	0					
ANR	5008003	PrimaryExpression	0		5007972	1					
ANR	5008004	PrimaryExpression	'\\0'		5007972	1					
ANR	5008005	CompoundStatement		8:34:94:94	5007972	1					
ANR	5008006	ReturnStatement	return ;	197:2:4168:4174	5007972	0	True				
ANR	5008007	ExpressionStatement	one_line = line	200:1:4181:4196	5007972	5	True				
ANR	5008008	AssignmentExpression	one_line = line		5007972	0		=			
ANR	5008009	Identifier	one_line		5007972	0					
ANR	5008010	Identifier	line		5007972	1					
ANR	5008011	ExpressionStatement	one_line . chomp ( )	201:1:4199:4215	5007972	6	True				
ANR	5008012	CallExpression	one_line . chomp ( )		5007972	0					
ANR	5008013	Callee	one_line . chomp		5007972	0					
ANR	5008014	MemberAccess	one_line . chomp		5007972	0					
ANR	5008015	Identifier	one_line		5007972	0					
ANR	5008016	Identifier	chomp		5007972	1					
ANR	5008017	ArgumentList			5007972	1					
ANR	5008018	ExpressionStatement	"pos = one_line . FindChar ( '=' , 0 )"	202:1:4218:4249	5007972	7	True				
ANR	5008019	AssignmentExpression	"pos = one_line . FindChar ( '=' , 0 )"		5007972	0		=			
ANR	5008020	Identifier	pos		5007972	0					
ANR	5008021	CallExpression	"one_line . FindChar ( '=' , 0 )"		5007972	1					
ANR	5008022	Callee	one_line . FindChar		5007972	0					
ANR	5008023	MemberAccess	one_line . FindChar		5007972	0					
ANR	5008024	Identifier	one_line		5007972	0					
ANR	5008025	Identifier	FindChar		5007972	1					
ANR	5008026	ArgumentList	'='		5007972	1					
ANR	5008027	Argument	'='		5007972	0					
ANR	5008028	PrimaryExpression	'='		5007972	0					
ANR	5008029	Argument	0		5007972	1					
ANR	5008030	PrimaryExpression	0		5007972	0					
ANR	5008031	IfStatement	if ( pos <= 0 )		5007972	8					
ANR	5008032	Condition	pos <= 0	203:5:4256:4263	5007972	0	True				
ANR	5008033	RelationalExpression	pos <= 0		5007972	0		<=			
ANR	5008034	Identifier	pos		5007972	0					
ANR	5008035	PrimaryExpression	0		5007972	1					
ANR	5008036	CompoundStatement		15:16:197:197	5007972	1					
ANR	5008037	ReturnStatement	return ;	204:2:4271:4277	5007972	0	True				
ANR	5008038	ExpressionStatement	"name = one_line . Substr ( 0 , pos - 1 )"	207:1:4284:4317	5007972	9	True				
ANR	5008039	AssignmentExpression	"name = one_line . Substr ( 0 , pos - 1 )"		5007972	0		=			
ANR	5008040	Identifier	name		5007972	0					
ANR	5008041	CallExpression	"one_line . Substr ( 0 , pos - 1 )"		5007972	1					
ANR	5008042	Callee	one_line . Substr		5007972	0					
ANR	5008043	MemberAccess	one_line . Substr		5007972	0					
ANR	5008044	Identifier	one_line		5007972	0					
ANR	5008045	Identifier	Substr		5007972	1					
ANR	5008046	ArgumentList	0		5007972	1					
ANR	5008047	Argument	0		5007972	0					
ANR	5008048	PrimaryExpression	0		5007972	0					
ANR	5008049	Argument	pos - 1		5007972	1					
ANR	5008050	AdditiveExpression	pos - 1		5007972	0		-			
ANR	5008051	Identifier	pos		5007972	0					
ANR	5008052	PrimaryExpression	1		5007972	1					
ANR	5008053	IfStatement	if ( pos == ( one_line . Length ( ) - 1 ) )		5007972	10					
ANR	5008054	Condition	pos == ( one_line . Length ( ) - 1 )	208:5:4324:4353	5007972	0	True				
ANR	5008055	EqualityExpression	pos == ( one_line . Length ( ) - 1 )		5007972	0		==			
ANR	5008056	Identifier	pos		5007972	0					
ANR	5008057	AdditiveExpression	one_line . Length ( ) - 1		5007972	1		-			
ANR	5008058	CallExpression	one_line . Length ( )		5007972	0					
ANR	5008059	Callee	one_line . Length		5007972	0					
ANR	5008060	MemberAccess	one_line . Length		5007972	0					
ANR	5008061	Identifier	one_line		5007972	0					
ANR	5008062	Identifier	Length		5007972	1					
ANR	5008063	ArgumentList			5007972	1					
ANR	5008064	PrimaryExpression	1		5007972	1					
ANR	5008065	CompoundStatement		20:38:287:287	5007972	1					
ANR	5008066	ExpressionStatement	"value = """""	209:2:4361:4371	5007972	0	True				
ANR	5008067	AssignmentExpression	"value = """""		5007972	0		=			
ANR	5008068	Identifier	value		5007972	0					
ANR	5008069	PrimaryExpression	""""""		5007972	1					
ANR	5008070	ElseStatement	else		5007972	0					
ANR	5008071	CompoundStatement		22:7:310:310	5007972	0					
ANR	5008072	ExpressionStatement	"value = one_line . Substr ( pos + 1 , one_line . Length ( ) - 1 )"	211:2:4384:4438	5007972	0	True				
ANR	5008073	AssignmentExpression	"value = one_line . Substr ( pos + 1 , one_line . Length ( ) - 1 )"		5007972	0		=			
ANR	5008074	Identifier	value		5007972	0					
ANR	5008075	CallExpression	"one_line . Substr ( pos + 1 , one_line . Length ( ) - 1 )"		5007972	1					
ANR	5008076	Callee	one_line . Substr		5007972	0					
ANR	5008077	MemberAccess	one_line . Substr		5007972	0					
ANR	5008078	Identifier	one_line		5007972	0					
ANR	5008079	Identifier	Substr		5007972	1					
ANR	5008080	ArgumentList	pos + 1		5007972	1					
ANR	5008081	Argument	pos + 1		5007972	0					
ANR	5008082	AdditiveExpression	pos + 1		5007972	0		+			
ANR	5008083	Identifier	pos		5007972	0					
ANR	5008084	PrimaryExpression	1		5007972	1					
ANR	5008085	Argument	one_line . Length ( ) - 1		5007972	1					
ANR	5008086	AdditiveExpression	one_line . Length ( ) - 1		5007972	0		-			
ANR	5008087	CallExpression	one_line . Length ( )		5007972	0					
ANR	5008088	Callee	one_line . Length		5007972	0					
ANR	5008089	MemberAccess	one_line . Length		5007972	0					
ANR	5008090	Identifier	one_line		5007972	0					
ANR	5008091	Identifier	Length		5007972	1					
ANR	5008092	ArgumentList			5007972	1					
ANR	5008093	PrimaryExpression	1		5007972	1					
ANR	5008094	ExpressionStatement	name . trim ( )	214:1:4446:4457	5007972	11	True				
ANR	5008095	CallExpression	name . trim ( )		5007972	0					
ANR	5008096	Callee	name . trim		5007972	0					
ANR	5008097	MemberAccess	name . trim		5007972	0					
ANR	5008098	Identifier	name		5007972	0					
ANR	5008099	Identifier	trim		5007972	1					
ANR	5008100	ArgumentList			5007972	1					
ANR	5008101	ExpressionStatement	value . trim ( )	215:1:4460:4472	5007972	12	True				
ANR	5008102	CallExpression	value . trim ( )		5007972	0					
ANR	5008103	Callee	value . trim		5007972	0					
ANR	5008104	MemberAccess	value . trim		5007972	0					
ANR	5008105	Identifier	value		5007972	0					
ANR	5008106	Identifier	trim		5007972	1					
ANR	5008107	ArgumentList			5007972	1					
ANR	5008108	IfStatement	if ( del_quotes )		5007972	13					
ANR	5008109	Condition	del_quotes	217:5:4480:4489	5007972	0	True				
ANR	5008110	Identifier	del_quotes		5007972	0					
ANR	5008111	CompoundStatement		29:18:423:423	5007972	1					
ANR	5008112	ExpressionStatement	value = delete_quotation_marks ( value . Value ( ) )	218:2:4497:4542	5007972	0	True				
ANR	5008113	AssignmentExpression	value = delete_quotation_marks ( value . Value ( ) )		5007972	0		=			
ANR	5008114	Identifier	value		5007972	0					
ANR	5008115	CallExpression	delete_quotation_marks ( value . Value ( ) )		5007972	1					
ANR	5008116	Callee	delete_quotation_marks		5007972	0					
ANR	5008117	Identifier	delete_quotation_marks		5007972	0					
ANR	5008118	ArgumentList	value . Value ( )		5007972	1					
ANR	5008119	Argument	value . Value ( )		5007972	0					
ANR	5008120	CallExpression	value . Value ( )		5007972	0					
ANR	5008121	Callee	value . Value		5007972	0					
ANR	5008122	MemberAccess	value . Value		5007972	0					
ANR	5008123	Identifier	value		5007972	0					
ANR	5008124	Identifier	Value		5007972	1					
ANR	5008125	ArgumentList			5007972	1					
ANR	5008126	ReturnStatement	return ;	220:1:4548:4554	5007972	14	True				
ANR	5008127	ReturnType	void		5007972	1					
ANR	5008128	Identifier	parse_param_string		5007972	2					
ANR	5008129	ParameterList	"const char * line , MyString & name , MyString & value , bool del_quotes"		5007972	3					
ANR	5008130	Parameter	const char * line	188:19:4001:4016	5007972	0	True				
ANR	5008131	ParameterType	const char *		5007972	0					
ANR	5008132	Identifier	line		5007972	1					
ANR	5008133	Parameter	MyString & name	188:37:4019:4032	5007972	1	True				
ANR	5008134	ParameterType	MyString &		5007972	0					
ANR	5008135	Identifier	name		5007972	1					
ANR	5008136	Parameter	MyString & value	188:53:4035:4049	5007972	2	True				
ANR	5008137	ParameterType	MyString &		5007972	0					
ANR	5008138	Identifier	value		5007972	1					
ANR	5008139	Parameter	bool del_quotes	188:70:4052:4066	5007972	3	True				
ANR	5008140	ParameterType	bool		5007972	0					
ANR	5008141	Identifier	del_quotes		5007972	1					
ANR	5008142	CFGEntryNode	ENTRY		5007972		True				
ANR	5008143	CFGExitNode	EXIT		5007972		True				
ANR	5008144	Symbol	pos		5007972						
ANR	5008145	Symbol	line		5007972						
ANR	5008146	Symbol	one_line . Substr		5007972						
ANR	5008147	Symbol	name		5007972						
ANR	5008148	Symbol	one_line . Length		5007972						
ANR	5008149	Symbol	value . Value		5007972						
ANR	5008150	Symbol	one_line . FindChar		5007972						
ANR	5008151	Symbol	delete_quotation_marks		5007972						
ANR	5008152	Symbol	one_line		5007972						
ANR	5008153	Symbol	* line		5007972						
ANR	5008154	Symbol	del_quotes		5007972						
ANR	5008155	Symbol	value		5007972						
ANR	5008156	Function	create_name_for_VM	223:0:4559:5415							
ANR	5008157	FunctionDef	"create_name_for_VM (ClassAd * ad , MyString & vmname)"		5008156	0					
ANR	5008158	CompoundStatement		225:0:4615:5415	5008156	0					
ANR	5008159	IfStatement	if ( ! ad )		5008156	0					
ANR	5008160	Condition	! ad	226:5:4622:4624	5008156	0	True				
ANR	5008161	UnaryOperationExpression	! ad		5008156	0					
ANR	5008162	UnaryOperator	!		5008156	0					
ANR	5008163	Identifier	ad		5008156	1					
ANR	5008164	CompoundStatement		2:11:12:12	5008156	1					
ANR	5008165	ReturnStatement	return false ;	227:2:4632:4644	5008156	0	True				
ANR	5008166	Identifier	false		5008156	0					
ANR	5008167	IdentifierDeclStatement	int cluster_id = 0 ;	230:1:4651:4669	5008156	1	True				
ANR	5008168	IdentifierDecl	cluster_id = 0		5008156	0					
ANR	5008169	IdentifierDeclType	int		5008156	0					
ANR	5008170	Identifier	cluster_id		5008156	1					
ANR	5008171	AssignmentExpression	cluster_id = 0		5008156	2		=			
ANR	5008172	Identifier	cluster_id		5008156	0					
ANR	5008173	PrimaryExpression	0		5008156	1					
ANR	5008174	IfStatement	"if ( ad -> LookupInteger ( ATTR_CLUSTER_ID , cluster_id ) != 1 )"		5008156	2					
ANR	5008175	Condition	"ad -> LookupInteger ( ATTR_CLUSTER_ID , cluster_id ) != 1"	231:5:4676:4726	5008156	0	True				
ANR	5008176	EqualityExpression	"ad -> LookupInteger ( ATTR_CLUSTER_ID , cluster_id ) != 1"		5008156	0		!=			
ANR	5008177	CallExpression	"ad -> LookupInteger ( ATTR_CLUSTER_ID , cluster_id )"		5008156	0					
ANR	5008178	Callee	ad -> LookupInteger		5008156	0					
ANR	5008179	PtrMemberAccess	ad -> LookupInteger		5008156	0					
ANR	5008180	Identifier	ad		5008156	0					
ANR	5008181	Identifier	LookupInteger		5008156	1					
ANR	5008182	ArgumentList	ATTR_CLUSTER_ID		5008156	1					
ANR	5008183	Argument	ATTR_CLUSTER_ID		5008156	0					
ANR	5008184	Identifier	ATTR_CLUSTER_ID		5008156	0					
ANR	5008185	Argument	cluster_id		5008156	1					
ANR	5008186	Identifier	cluster_id		5008156	0					
ANR	5008187	PrimaryExpression	1		5008156	1					
ANR	5008188	CompoundStatement		7:59:114:114	5008156	1					
ANR	5008189	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s cannot be found in job classAd\\n"" , ATTR_CLUSTER_ID )"	232:2:4734:4812	5008156	0	True				
ANR	5008190	CallExpression	"dprintf ( D_ALWAYS , ""%s cannot be found in job classAd\\n"" , ATTR_CLUSTER_ID )"		5008156	0					
ANR	5008191	Callee	dprintf		5008156	0					
ANR	5008192	Identifier	dprintf		5008156	0					
ANR	5008193	ArgumentList	D_ALWAYS		5008156	1					
ANR	5008194	Argument	D_ALWAYS		5008156	0					
ANR	5008195	Identifier	D_ALWAYS		5008156	0					
ANR	5008196	Argument	"""%s cannot be found in job classAd\\n"""		5008156	1					
ANR	5008197	PrimaryExpression	"""%s cannot be found in job classAd\\n"""		5008156	0					
ANR	5008198	Argument	ATTR_CLUSTER_ID		5008156	2					
ANR	5008199	Identifier	ATTR_CLUSTER_ID		5008156	0					
ANR	5008200	ReturnStatement	return false ;	234:2:4817:4829	5008156	1	True				
ANR	5008201	Identifier	false		5008156	0					
ANR	5008202	IdentifierDeclStatement	int proc_id = 0 ;	237:1:4836:4851	5008156	3	True				
ANR	5008203	IdentifierDecl	proc_id = 0		5008156	0					
ANR	5008204	IdentifierDeclType	int		5008156	0					
ANR	5008205	Identifier	proc_id		5008156	1					
ANR	5008206	AssignmentExpression	proc_id = 0		5008156	2		=			
ANR	5008207	Identifier	proc_id		5008156	0					
ANR	5008208	PrimaryExpression	0		5008156	1					
ANR	5008209	IfStatement	"if ( ad -> LookupInteger ( ATTR_PROC_ID , proc_id ) != 1 )"		5008156	4					
ANR	5008210	Condition	"ad -> LookupInteger ( ATTR_PROC_ID , proc_id ) != 1"	238:5:4858:4902	5008156	0	True				
ANR	5008211	EqualityExpression	"ad -> LookupInteger ( ATTR_PROC_ID , proc_id ) != 1"		5008156	0		!=			
ANR	5008212	CallExpression	"ad -> LookupInteger ( ATTR_PROC_ID , proc_id )"		5008156	0					
ANR	5008213	Callee	ad -> LookupInteger		5008156	0					
ANR	5008214	PtrMemberAccess	ad -> LookupInteger		5008156	0					
ANR	5008215	Identifier	ad		5008156	0					
ANR	5008216	Identifier	LookupInteger		5008156	1					
ANR	5008217	ArgumentList	ATTR_PROC_ID		5008156	1					
ANR	5008218	Argument	ATTR_PROC_ID		5008156	0					
ANR	5008219	Identifier	ATTR_PROC_ID		5008156	0					
ANR	5008220	Argument	proc_id		5008156	1					
ANR	5008221	Identifier	proc_id		5008156	0					
ANR	5008222	PrimaryExpression	1		5008156	1					
ANR	5008223	CompoundStatement		14:53:290:290	5008156	1					
ANR	5008224	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s cannot be found in job classAd\\n"" , ATTR_PROC_ID )"	239:2:4910:4985	5008156	0	True				
ANR	5008225	CallExpression	"dprintf ( D_ALWAYS , ""%s cannot be found in job classAd\\n"" , ATTR_PROC_ID )"		5008156	0					
ANR	5008226	Callee	dprintf		5008156	0					
ANR	5008227	Identifier	dprintf		5008156	0					
ANR	5008228	ArgumentList	D_ALWAYS		5008156	1					
ANR	5008229	Argument	D_ALWAYS		5008156	0					
ANR	5008230	Identifier	D_ALWAYS		5008156	0					
ANR	5008231	Argument	"""%s cannot be found in job classAd\\n"""		5008156	1					
ANR	5008232	PrimaryExpression	"""%s cannot be found in job classAd\\n"""		5008156	0					
ANR	5008233	Argument	ATTR_PROC_ID		5008156	2					
ANR	5008234	Identifier	ATTR_PROC_ID		5008156	0					
ANR	5008235	ReturnStatement	return false ;	241:2:4990:5002	5008156	1	True				
ANR	5008236	Identifier	false		5008156	0					
ANR	5008237	IdentifierDeclStatement	MyString stringattr ;	244:1:5009:5028	5008156	5	True				
ANR	5008238	IdentifierDecl	stringattr		5008156	0					
ANR	5008239	IdentifierDeclType	MyString		5008156	0					
ANR	5008240	Identifier	stringattr		5008156	1					
ANR	5008241	IfStatement	"if ( ad -> LookupString ( ATTR_USER , stringattr ) != 1 )"		5008156	6					
ANR	5008242	Condition	"ad -> LookupString ( ATTR_USER , stringattr ) != 1"	245:5:5035:5078	5008156	0	True				
ANR	5008243	EqualityExpression	"ad -> LookupString ( ATTR_USER , stringattr ) != 1"		5008156	0		!=			
ANR	5008244	CallExpression	"ad -> LookupString ( ATTR_USER , stringattr )"		5008156	0					
ANR	5008245	Callee	ad -> LookupString		5008156	0					
ANR	5008246	PtrMemberAccess	ad -> LookupString		5008156	0					
ANR	5008247	Identifier	ad		5008156	0					
ANR	5008248	Identifier	LookupString		5008156	1					
ANR	5008249	ArgumentList	ATTR_USER		5008156	1					
ANR	5008250	Argument	ATTR_USER		5008156	0					
ANR	5008251	Identifier	ATTR_USER		5008156	0					
ANR	5008252	Argument	stringattr		5008156	1					
ANR	5008253	Identifier	stringattr		5008156	0					
ANR	5008254	PrimaryExpression	1		5008156	1					
ANR	5008255	CompoundStatement		21:52:466:466	5008156	1					
ANR	5008256	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s cannot be found in job classAd\\n"" , ATTR_USER )"	246:2:5086:5158	5008156	0	True				
ANR	5008257	CallExpression	"dprintf ( D_ALWAYS , ""%s cannot be found in job classAd\\n"" , ATTR_USER )"		5008156	0					
ANR	5008258	Callee	dprintf		5008156	0					
ANR	5008259	Identifier	dprintf		5008156	0					
ANR	5008260	ArgumentList	D_ALWAYS		5008156	1					
ANR	5008261	Argument	D_ALWAYS		5008156	0					
ANR	5008262	Identifier	D_ALWAYS		5008156	0					
ANR	5008263	Argument	"""%s cannot be found in job classAd\\n"""		5008156	1					
ANR	5008264	PrimaryExpression	"""%s cannot be found in job classAd\\n"""		5008156	0					
ANR	5008265	Argument	ATTR_USER		5008156	2					
ANR	5008266	Identifier	ATTR_USER		5008156	0					
ANR	5008267	ReturnStatement	return false ;	248:2:5163:5175	5008156	1	True				
ANR	5008268	Identifier	false		5008156	0					
ANR	5008269	IdentifierDeclStatement	int pos = - 1 ;	252:1:5207:5219	5008156	7	True				
ANR	5008270	IdentifierDecl	pos = - 1		5008156	0					
ANR	5008271	IdentifierDeclType	int		5008156	0					
ANR	5008272	Identifier	pos		5008156	1					
ANR	5008273	AssignmentExpression	pos = - 1		5008156	2		=			
ANR	5008274	Identifier	pos		5008156	0					
ANR	5008275	UnaryOperationExpression	- 1		5008156	1					
ANR	5008276	UnaryOperator	-		5008156	0					
ANR	5008277	PrimaryExpression	1		5008156	1					
ANR	5008278	WhileStatement	"while ( ( pos = stringattr . find ( ""@"" ) ) >= 0 )"		5008156	8					
ANR	5008279	Condition	"( pos = stringattr . find ( ""@"" ) ) >= 0"	253:8:5229:5262	5008156	0	True				
ANR	5008280	RelationalExpression	"( pos = stringattr . find ( ""@"" ) ) >= 0"		5008156	0		>=			
ANR	5008281	AssignmentExpression	"pos = stringattr . find ( ""@"" )"		5008156	0		=			
ANR	5008282	Identifier	pos		5008156	0					
ANR	5008283	CallExpression	"stringattr . find ( ""@"" )"		5008156	1					
ANR	5008284	Callee	stringattr . find		5008156	0					
ANR	5008285	MemberAccess	stringattr . find		5008156	0					
ANR	5008286	Identifier	stringattr		5008156	0					
ANR	5008287	Identifier	find		5008156	1					
ANR	5008288	ArgumentList	"""@"""		5008156	1					
ANR	5008289	Argument	"""@"""		5008156	0					
ANR	5008290	PrimaryExpression	"""@"""		5008156	0					
ANR	5008291	PrimaryExpression	0		5008156	1					
ANR	5008292	CompoundStatement		29:45:650:650	5008156	1					
ANR	5008293	ExpressionStatement	"stringattr . setChar ( pos , '_' )"	254:2:5270:5298	5008156	0	True				
ANR	5008294	CallExpression	"stringattr . setChar ( pos , '_' )"		5008156	0					
ANR	5008295	Callee	stringattr . setChar		5008156	0					
ANR	5008296	MemberAccess	stringattr . setChar		5008156	0					
ANR	5008297	Identifier	stringattr		5008156	0					
ANR	5008298	Identifier	setChar		5008156	1					
ANR	5008299	ArgumentList	pos		5008156	1					
ANR	5008300	Argument	pos		5008156	0					
ANR	5008301	Identifier	pos		5008156	0					
ANR	5008302	Argument	'_'		5008156	1					
ANR	5008303	PrimaryExpression	'_'		5008156	0					
ANR	5008304	ExpressionStatement	vmname = stringattr	257:1:5305:5324	5008156	9	True				
ANR	5008305	AssignmentExpression	vmname = stringattr		5008156	0		=			
ANR	5008306	Identifier	vmname		5008156	0					
ANR	5008307	Identifier	stringattr		5008156	1					
ANR	5008308	ExpressionStatement	"vmname += ""_"""	258:1:5327:5340	5008156	10	True				
ANR	5008309	AssignmentExpression	"vmname += ""_"""		5008156	0		+=			
ANR	5008310	Identifier	vmname		5008156	0					
ANR	5008311	PrimaryExpression	"""_"""		5008156	1					
ANR	5008312	ExpressionStatement	vmname += cluster_id	259:1:5343:5363	5008156	11	True				
ANR	5008313	AssignmentExpression	vmname += cluster_id		5008156	0		+=			
ANR	5008314	Identifier	vmname		5008156	0					
ANR	5008315	Identifier	cluster_id		5008156	1					
ANR	5008316	ExpressionStatement	"vmname += ""_"""	260:1:5366:5379	5008156	12	True				
ANR	5008317	AssignmentExpression	"vmname += ""_"""		5008156	0		+=			
ANR	5008318	Identifier	vmname		5008156	0					
ANR	5008319	PrimaryExpression	"""_"""		5008156	1					
ANR	5008320	ExpressionStatement	vmname += proc_id	261:1:5382:5399	5008156	13	True				
ANR	5008321	AssignmentExpression	vmname += proc_id		5008156	0		+=			
ANR	5008322	Identifier	vmname		5008156	0					
ANR	5008323	Identifier	proc_id		5008156	1					
ANR	5008324	ReturnStatement	return true ;	262:1:5402:5413	5008156	14	True				
ANR	5008325	Identifier	true		5008156	0					
ANR	5008326	ReturnType	bool		5008156	1					
ANR	5008327	Identifier	create_name_for_VM		5008156	2					
ANR	5008328	ParameterList	"ClassAd * ad , MyString & vmname"		5008156	3					
ANR	5008329	Parameter	ClassAd * ad	224:19:4584:4594	5008156	0	True				
ANR	5008330	ParameterType	ClassAd *		5008156	0					
ANR	5008331	Identifier	ad		5008156	1					
ANR	5008332	Parameter	MyString & vmname	224:32:4597:4612	5008156	1	True				
ANR	5008333	ParameterType	MyString &		5008156	0					
ANR	5008334	Identifier	vmname		5008156	1					
ANR	5008335	CFGEntryNode	ENTRY		5008156		True				
ANR	5008336	CFGExitNode	EXIT		5008156		True				
ANR	5008337	Symbol	stringattr		5008156						
ANR	5008338	Symbol	ad -> LookupString		5008156						
ANR	5008339	Symbol	stringattr . find		5008156						
ANR	5008340	Symbol	ad		5008156						
ANR	5008341	Symbol	ATTR_PROC_ID		5008156						
ANR	5008342	Symbol	ATTR_USER		5008156						
ANR	5008343	Symbol	false		5008156						
ANR	5008344	Symbol	D_ALWAYS		5008156						
ANR	5008345	Symbol	proc_id		5008156						
ANR	5008346	Symbol	* ad		5008156						
ANR	5008347	Symbol	vmname		5008156						
ANR	5008348	Symbol	cluster_id		5008156						
ANR	5008349	Symbol	ATTR_CLUSTER_ID		5008156						
ANR	5008350	Symbol	pos		5008156						
ANR	5008351	Symbol	true		5008156						
ANR	5008352	Symbol	ad -> LookupInteger		5008156						
