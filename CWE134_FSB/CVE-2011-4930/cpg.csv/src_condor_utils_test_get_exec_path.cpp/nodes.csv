command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4929482	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_test_get_exec_path.cpp								
ANR	4929483	DeclStmt									
ANR	4929484	Decl							extern char	extern char * ( )	getExecPath
ANR	4929485	DeclStmt									
ANR	4929486	Decl							void	void ( void )	fool_child
ANR	4929487	Function	main	39:0:1384:1693							
ANR	4929488	FunctionDef	"main (int argc , char * argv [ ])"		4929487	0					
ANR	4929489	CompoundStatement		41:0:1419:1693	4929487	0					
ANR	4929490	IdentifierDeclStatement	char * my_path = getExecPath ( ) ;	42:1:1422:1451	4929487	0	True				
ANR	4929491	IdentifierDecl	* my_path = getExecPath ( )		4929487	0					
ANR	4929492	IdentifierDeclType	char *		4929487	0					
ANR	4929493	Identifier	my_path		4929487	1					
ANR	4929494	AssignmentExpression	* my_path = getExecPath ( )		4929487	2		=			
ANR	4929495	Identifier	my_path		4929487	0					
ANR	4929496	CallExpression	getExecPath ( )		4929487	1					
ANR	4929497	Callee	getExecPath		4929487	0					
ANR	4929498	Identifier	getExecPath		4929487	0					
ANR	4929499	ArgumentList			4929487	1					
ANR	4929500	IdentifierDeclStatement	"char * my_cwd = getcwd ( NULL , 0 ) ;"	43:1:1454:1486	4929487	1	True				
ANR	4929501	IdentifierDecl	"* my_cwd = getcwd ( NULL , 0 )"		4929487	0					
ANR	4929502	IdentifierDeclType	char *		4929487	0					
ANR	4929503	Identifier	my_cwd		4929487	1					
ANR	4929504	AssignmentExpression	"* my_cwd = getcwd ( NULL , 0 )"		4929487	2		=			
ANR	4929505	Identifier	my_cwd		4929487	0					
ANR	4929506	CallExpression	"getcwd ( NULL , 0 )"		4929487	1					
ANR	4929507	Callee	getcwd		4929487	0					
ANR	4929508	Identifier	getcwd		4929487	0					
ANR	4929509	ArgumentList	NULL		4929487	1					
ANR	4929510	Argument	NULL		4929487	0					
ANR	4929511	Identifier	NULL		4929487	0					
ANR	4929512	Argument	0		4929487	1					
ANR	4929513	PrimaryExpression	0		4929487	0					
ANR	4929514	IdentifierDeclStatement	int i ;	45:1:1490:1495	4929487	2	True				
ANR	4929515	IdentifierDecl	i		4929487	0					
ANR	4929516	IdentifierDeclType	int		4929487	0					
ANR	4929517	Identifier	i		4929487	1					
ANR	4929518	ForStatement	for ( i = 0 ; i < argc ; i ++ )		4929487	3					
ANR	4929519	ForInit	i = 0 ;	46:6:1503:1506	4929487	0	True				
ANR	4929520	AssignmentExpression	i = 0		4929487	0		=			
ANR	4929521	Identifier	i		4929487	0					
ANR	4929522	PrimaryExpression	0		4929487	1					
ANR	4929523	Condition	i < argc	46:11:1508:1513	4929487	1	True				
ANR	4929524	RelationalExpression	i < argc		4929487	0		<			
ANR	4929525	Identifier	i		4929487	0					
ANR	4929526	Identifier	argc		4929487	1					
ANR	4929527	PostIncDecOperationExpression	i ++	46:19:1516:1518	4929487	2	True				
ANR	4929528	Identifier	i		4929487	0					
ANR	4929529	IncDec	++		4929487	1					
ANR	4929530	CompoundStatement		6:25:102:102	4929487	3					
ANR	4929531	ExpressionStatement	"printf ( ""argv[%d]: %s\\n"" , i , argv [ i ] )"	47:2:1526:1564	4929487	0	True				
ANR	4929532	CallExpression	"printf ( ""argv[%d]: %s\\n"" , i , argv [ i ] )"		4929487	0					
ANR	4929533	Callee	printf		4929487	0					
ANR	4929534	Identifier	printf		4929487	0					
ANR	4929535	ArgumentList	"""argv[%d]: %s\\n"""		4929487	1					
ANR	4929536	Argument	"""argv[%d]: %s\\n"""		4929487	0					
ANR	4929537	PrimaryExpression	"""argv[%d]: %s\\n"""		4929487	0					
ANR	4929538	Argument	i		4929487	1					
ANR	4929539	Identifier	i		4929487	0					
ANR	4929540	Argument	argv [ i ]		4929487	2					
ANR	4929541	ArrayIndexing	argv [ i ]		4929487	0					
ANR	4929542	Identifier	argv		4929487	0					
ANR	4929543	Identifier	i		4929487	1					
ANR	4929544	ExpressionStatement	"printf ( ""my_path: %s\\n"" , my_path )"	50:1:1571:1605	4929487	4	True				
ANR	4929545	CallExpression	"printf ( ""my_path: %s\\n"" , my_path )"		4929487	0					
ANR	4929546	Callee	printf		4929487	0					
ANR	4929547	Identifier	printf		4929487	0					
ANR	4929548	ArgumentList	"""my_path: %s\\n"""		4929487	1					
ANR	4929549	Argument	"""my_path: %s\\n"""		4929487	0					
ANR	4929550	PrimaryExpression	"""my_path: %s\\n"""		4929487	0					
ANR	4929551	Argument	my_path		4929487	1					
ANR	4929552	Identifier	my_path		4929487	0					
ANR	4929553	ExpressionStatement	"printf ( ""my_cwd: %s\\n"" , my_cwd )"	51:1:1608:1640	4929487	5	True				
ANR	4929554	CallExpression	"printf ( ""my_cwd: %s\\n"" , my_cwd )"		4929487	0					
ANR	4929555	Callee	printf		4929487	0					
ANR	4929556	Identifier	printf		4929487	0					
ANR	4929557	ArgumentList	"""my_cwd: %s\\n"""		4929487	1					
ANR	4929558	Argument	"""my_cwd: %s\\n"""		4929487	0					
ANR	4929559	PrimaryExpression	"""my_cwd: %s\\n"""		4929487	0					
ANR	4929560	Argument	my_cwd		4929487	1					
ANR	4929561	Identifier	my_cwd		4929487	0					
ANR	4929562	IfStatement	if ( argc > 1 )		4929487	6					
ANR	4929563	Condition	argc > 1	53:5:1648:1655	4929487	0	True				
ANR	4929564	RelationalExpression	argc > 1		4929487	0		>			
ANR	4929565	Identifier	argc		4929487	0					
ANR	4929566	PrimaryExpression	1		4929487	1					
ANR	4929567	CompoundStatement		13:16:239:239	4929487	1					
ANR	4929568	ExpressionStatement	fool_child ( )	54:2:1663:1675	4929487	0	True				
ANR	4929569	CallExpression	fool_child ( )		4929487	0					
ANR	4929570	Callee	fool_child		4929487	0					
ANR	4929571	Identifier	fool_child		4929487	0					
ANR	4929572	ArgumentList			4929487	1					
ANR	4929573	ExpressionStatement	exit ( 0 )	57:1:1682:1691	4929487	7	True				
ANR	4929574	CallExpression	exit ( 0 )		4929487	0					
ANR	4929575	Callee	exit		4929487	0					
ANR	4929576	Identifier	exit		4929487	0					
ANR	4929577	ArgumentList	0		4929487	1					
ANR	4929578	Argument	0		4929487	0					
ANR	4929579	PrimaryExpression	0		4929487	0					
ANR	4929580	ReturnType	int		4929487	1					
ANR	4929581	Identifier	main		4929487	2					
ANR	4929582	ParameterList	"int argc , char * argv [ ]"		4929487	3					
ANR	4929583	Parameter	int argc	40:6:1394:1401	4929487	0	True				
ANR	4929584	ParameterType	int		4929487	0					
ANR	4929585	Identifier	argc		4929487	1					
ANR	4929586	Parameter	char * argv [ ]	40:16:1404:1415	4929487	1	True				
ANR	4929587	ParameterType	char * [ ]		4929487	0					
ANR	4929588	Identifier	argv		4929487	1					
ANR	4929589	CFGEntryNode	ENTRY		4929487		True				
ANR	4929590	CFGExitNode	EXIT		4929487		True				
ANR	4929591	Symbol	argc		4929487						
ANR	4929592	Symbol	getcwd		4929487						
ANR	4929593	Symbol	getExecPath		4929487						
ANR	4929594	Symbol	NULL		4929487						
ANR	4929595	Symbol	* i		4929487						
ANR	4929596	Symbol	my_path		4929487						
ANR	4929597	Symbol	i		4929487						
ANR	4929598	Symbol	* argv		4929487						
ANR	4929599	Symbol	my_cwd		4929487						
ANR	4929600	Symbol	argv		4929487						
ANR	4929601	Function	fool_child	61:0:1697:2185							
ANR	4929602	FunctionDef	fool_child ()		4929601	0					
ANR	4929603	CompoundStatement		63:0:1721:2185	4929601	0					
ANR	4929604	IdentifierDeclStatement	int pid ;	64:1:1724:1731	4929601	0	True				
ANR	4929605	IdentifierDecl	pid		4929601	0					
ANR	4929606	IdentifierDeclType	int		4929601	0					
ANR	4929607	Identifier	pid		4929601	1					
ANR	4929608	IdentifierDeclStatement	int status ;	65:1:1734:1744	4929601	1	True				
ANR	4929609	IdentifierDecl	status		4929601	0					
ANR	4929610	IdentifierDeclType	int		4929601	0					
ANR	4929611	Identifier	status		4929601	1					
ANR	4929612	ExpressionStatement	pid = fork ( )	66:1:1747:1759	4929601	2	True				
ANR	4929613	AssignmentExpression	pid = fork ( )		4929601	0		=			
ANR	4929614	Identifier	pid		4929601	0					
ANR	4929615	CallExpression	fork ( )		4929601	1					
ANR	4929616	Callee	fork		4929601	0					
ANR	4929617	Identifier	fork		4929601	0					
ANR	4929618	ArgumentList			4929601	1					
ANR	4929619	IfStatement	if ( pid )		4929601	3					
ANR	4929620	Condition	pid	67:5:1766:1768	4929601	0	True				
ANR	4929621	Identifier	pid		4929601	0					
ANR	4929622	CompoundStatement		5:11:50:50	4929601	1					
ANR	4929623	ExpressionStatement	"waitpid ( pid , & status , 0 )"	69:2:1792:1818	4929601	0	True				
ANR	4929624	CallExpression	"waitpid ( pid , & status , 0 )"		4929601	0					
ANR	4929625	Callee	waitpid		4929601	0					
ANR	4929626	Identifier	waitpid		4929601	0					
ANR	4929627	ArgumentList	pid		4929601	1					
ANR	4929628	Argument	pid		4929601	0					
ANR	4929629	Identifier	pid		4929601	0					
ANR	4929630	Argument	& status		4929601	1					
ANR	4929631	UnaryOperationExpression	& status		4929601	0					
ANR	4929632	UnaryOperator	&		4929601	0					
ANR	4929633	Identifier	status		4929601	1					
ANR	4929634	Argument	0		4929601	2					
ANR	4929635	PrimaryExpression	0		4929601	0					
ANR	4929636	ExpressionStatement	"printf ( ""in parent: child returned %s %d\\n"" , WIFSIGNALED ( status ) ? ""signal"" : ""status"" , WIFSIGNALED ( status ) ? WTERMSIG ( status ) : WEXITSTATUS ( status ) )"	70:2:1822:1985	4929601	1	True				
ANR	4929637	CallExpression	"printf ( ""in parent: child returned %s %d\\n"" , WIFSIGNALED ( status ) ? ""signal"" : ""status"" , WIFSIGNALED ( status ) ? WTERMSIG ( status ) : WEXITSTATUS ( status ) )"		4929601	0					
ANR	4929638	Callee	printf		4929601	0					
ANR	4929639	Identifier	printf		4929601	0					
ANR	4929640	ArgumentList	"""in parent: child returned %s %d\\n"""		4929601	1					
ANR	4929641	Argument	"""in parent: child returned %s %d\\n"""		4929601	0					
ANR	4929642	PrimaryExpression	"""in parent: child returned %s %d\\n"""		4929601	0					
ANR	4929643	Argument	"WIFSIGNALED ( status ) ? ""signal"" : ""status"""		4929601	1					
ANR	4929644	ConditionalExpression	"WIFSIGNALED ( status ) ? ""signal"" : ""status"""		4929601	0					
ANR	4929645	Condition	WIFSIGNALED ( status )		4929601	0					
ANR	4929646	CallExpression	WIFSIGNALED ( status )		4929601	0					
ANR	4929647	Callee	WIFSIGNALED		4929601	0					
ANR	4929648	Identifier	WIFSIGNALED		4929601	0					
ANR	4929649	ArgumentList	status		4929601	1					
ANR	4929650	Argument	status		4929601	0					
ANR	4929651	Identifier	status		4929601	0					
ANR	4929652	PrimaryExpression	"""signal"""		4929601	1					
ANR	4929653	PrimaryExpression	"""status"""		4929601	2					
ANR	4929654	Argument	WIFSIGNALED ( status ) ? WTERMSIG ( status ) : WEXITSTATUS ( status )		4929601	2					
ANR	4929655	ConditionalExpression	WIFSIGNALED ( status ) ? WTERMSIG ( status ) : WEXITSTATUS ( status )		4929601	0					
ANR	4929656	Condition	WIFSIGNALED ( status )		4929601	0					
ANR	4929657	CallExpression	WIFSIGNALED ( status )		4929601	0					
ANR	4929658	Callee	WIFSIGNALED		4929601	0					
ANR	4929659	Identifier	WIFSIGNALED		4929601	0					
ANR	4929660	ArgumentList	status		4929601	1					
ANR	4929661	Argument	status		4929601	0					
ANR	4929662	Identifier	status		4929601	0					
ANR	4929663	CallExpression	WTERMSIG ( status )		4929601	1					
ANR	4929664	Callee	WTERMSIG		4929601	0					
ANR	4929665	Identifier	WTERMSIG		4929601	0					
ANR	4929666	ArgumentList	status		4929601	1					
ANR	4929667	Argument	status		4929601	0					
ANR	4929668	Identifier	status		4929601	0					
ANR	4929669	CallExpression	WEXITSTATUS ( status )		4929601	2					
ANR	4929670	Callee	WEXITSTATUS		4929601	0					
ANR	4929671	Identifier	WEXITSTATUS		4929601	0					
ANR	4929672	ArgumentList	status		4929601	1					
ANR	4929673	Argument	status		4929601	0					
ANR	4929674	Identifier	status		4929601	0					
ANR	4929675	ElseStatement	else		4929601	0					
ANR	4929676	CompoundStatement		12:8:273:273	4929601	0					
ANR	4929677	Statement	char	76:2:2014:2017	4929601	0	True				
ANR	4929678	Statement	*	76:6:2018:2018	4929601	1	True				
ANR	4929679	Statement	const	76:8:2020:2024	4929601	2	True				
ANR	4929680	Statement	argv	76:14:2026:2029	4929601	3	True				
ANR	4929681	Statement	[	76:18:2030:2030	4929601	4	True				
ANR	4929682	Statement	2	76:19:2031:2031	4929601	5	True				
ANR	4929683	Statement	]	76:20:2032:2032	4929601	6	True				
ANR	4929684	Statement	=	76:22:2034:2034	4929601	7	True				
ANR	4929685	CompoundStatement		14:24:314:314	4929601	8					
ANR	4929686	Statement	"""this_is_a_lie"""	76:26:2038:2052	4929601	0	True				
ANR	4929687	Statement	","	76:41:2053:2053	4929601	1	True				
ANR	4929688	Statement	NULL	76:43:2055:2058	4929601	2	True				
ANR	4929689	ExpressionStatement		76:49:2061:2061	4929601	9	True				
ANR	4929690	ExpressionStatement	"execvp ( ""test_get_exec_path"" , argv )"	77:2:2065:2101	4929601	10	True				
ANR	4929691	CallExpression	"execvp ( ""test_get_exec_path"" , argv )"		4929601	0					
ANR	4929692	Callee	execvp		4929601	0					
ANR	4929693	Identifier	execvp		4929601	0					
ANR	4929694	ArgumentList	"""test_get_exec_path"""		4929601	1					
ANR	4929695	Argument	"""test_get_exec_path"""		4929601	0					
ANR	4929696	PrimaryExpression	"""test_get_exec_path"""		4929601	0					
ANR	4929697	Argument	argv		4929601	1					
ANR	4929698	Identifier	argv		4929601	0					
ANR	4929699	ExpressionStatement	"fprintf ( stderr , ""execv() failed: %d (%s)\\n"" , errno , strerror ( errno ) )"	78:2:2105:2180	4929601	11	True				
ANR	4929700	CallExpression	"fprintf ( stderr , ""execv() failed: %d (%s)\\n"" , errno , strerror ( errno ) )"		4929601	0					
ANR	4929701	Callee	fprintf		4929601	0					
ANR	4929702	Identifier	fprintf		4929601	0					
ANR	4929703	ArgumentList	stderr		4929601	1					
ANR	4929704	Argument	stderr		4929601	0					
ANR	4929705	Identifier	stderr		4929601	0					
ANR	4929706	Argument	"""execv() failed: %d (%s)\\n"""		4929601	1					
ANR	4929707	PrimaryExpression	"""execv() failed: %d (%s)\\n"""		4929601	0					
ANR	4929708	Argument	errno		4929601	2					
ANR	4929709	Identifier	errno		4929601	0					
ANR	4929710	Argument	strerror ( errno )		4929601	3					
ANR	4929711	CallExpression	strerror ( errno )		4929601	0					
ANR	4929712	Callee	strerror		4929601	0					
ANR	4929713	Identifier	strerror		4929601	0					
ANR	4929714	ArgumentList	errno		4929601	1					
ANR	4929715	Argument	errno		4929601	0					
ANR	4929716	Identifier	errno		4929601	0					
ANR	4929717	ReturnType	void		4929601	1					
ANR	4929718	Identifier	fool_child		4929601	2					
ANR	4929719	ParameterList			4929601	3					
ANR	4929720	CFGEntryNode	ENTRY		4929601		True				
ANR	4929721	CFGExitNode	EXIT		4929601		True				
ANR	4929722	Symbol	strerror		4929601						
ANR	4929723	Symbol	WIFSIGNALED		4929601						
ANR	4929724	Symbol	fork		4929601						
ANR	4929725	Symbol	errno		4929601						
ANR	4929726	Symbol	WTERMSIG		4929601						
ANR	4929727	Symbol	pid		4929601						
ANR	4929728	Symbol	WEXITSTATUS		4929601						
ANR	4929729	Symbol	stderr		4929601						
ANR	4929730	Symbol	& status		4929601						
ANR	4929731	Symbol	argv		4929601						
ANR	4929732	Symbol	status		4929601						
ANR	4929733	Function	dprintf	86:0:2246:2388							
ANR	4929734	FunctionDef	"dprintf (int flags , char * fmt)"		4929733	0					
ANR	4929735	CompoundStatement		88:0:2286:2388	4929733	0					
ANR	4929736	IdentifierDeclStatement	va_list args ;	89:4:2292:2304	4929733	0	True				
ANR	4929737	IdentifierDecl	args		4929733	0					
ANR	4929738	IdentifierDeclType	va_list		4929733	0					
ANR	4929739	Identifier	args		4929733	1					
ANR	4929740	ExpressionStatement	"va_start ( args , fmt )"	90:4:2310:2331	4929733	1	True				
ANR	4929741	CallExpression	"va_start ( args , fmt )"		4929733	0					
ANR	4929742	Callee	va_start		4929733	0					
ANR	4929743	Identifier	va_start		4929733	0					
ANR	4929744	ArgumentList	args		4929733	1					
ANR	4929745	Argument	args		4929733	0					
ANR	4929746	Identifier	args		4929733	0					
ANR	4929747	Argument	fmt		4929733	1					
ANR	4929748	Identifier	fmt		4929733	0					
ANR	4929749	ExpressionStatement	"vfprintf ( stderr , fmt , args )"	91:4:2337:2366	4929733	2	True				
ANR	4929750	CallExpression	"vfprintf ( stderr , fmt , args )"		4929733	0					
ANR	4929751	Callee	vfprintf		4929733	0					
ANR	4929752	Identifier	vfprintf		4929733	0					
ANR	4929753	ArgumentList	stderr		4929733	1					
ANR	4929754	Argument	stderr		4929733	0					
ANR	4929755	Identifier	stderr		4929733	0					
ANR	4929756	Argument	fmt		4929733	1					
ANR	4929757	Identifier	fmt		4929733	0					
ANR	4929758	Argument	args		4929733	2					
ANR	4929759	Identifier	args		4929733	0					
ANR	4929760	ExpressionStatement	va_end ( args )	92:4:2372:2386	4929733	3	True				
ANR	4929761	CallExpression	va_end ( args )		4929733	0					
ANR	4929762	Callee	va_end		4929733	0					
ANR	4929763	Identifier	va_end		4929733	0					
ANR	4929764	ArgumentList	args		4929733	1					
ANR	4929765	Argument	args		4929733	0					
ANR	4929766	Identifier	args		4929733	0					
ANR	4929767	ReturnType	void		4929733	1					
ANR	4929768	Identifier	dprintf		4929733	2					
ANR	4929769	ParameterList	"int flags , char * fmt"		4929733	3					
ANR	4929770	Parameter	int flags	87:8:2259:2267	4929733	0	True				
ANR	4929771	ParameterType	int		4929733	0					
ANR	4929772	Identifier	flags		4929733	1					
ANR	4929773	Parameter	char * fmt	87:19:2270:2278	4929733	1	True				
ANR	4929774	ParameterType	char *		4929733	0					
ANR	4929775	Identifier	fmt		4929733	1					
ANR	4929776	CFGEntryNode	ENTRY		4929733		True				
ANR	4929777	CFGExitNode	EXIT		4929733		True				
ANR	4929778	Symbol	args		4929733						
ANR	4929779	Symbol	flags		4929733						
ANR	4929780	Symbol	fmt		4929733						
ANR	4929781	Symbol	stderr		4929733						
