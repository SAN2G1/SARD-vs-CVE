command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3362682	File	data/converged/CVE-2011-4930_htcondor/src_condor_hdfs_hadoop.cpp								
ANR	3362683	Function	Hadoop :: Hadoop	34:0:1105:1443							
ANR	3362684	FunctionDef	Hadoop :: Hadoop ()		3362683	0					
ANR	3362685	CompoundStatement		34:17:1122:1443	3362683	0					
ANR	3362686	ExpressionStatement	m_pid = - 1	35:8:1133:1146	3362683	0	True				
ANR	3362687	AssignmentExpression	m_pid = - 1		3362683	0		=			
ANR	3362688	Identifier	m_pid		3362683	0					
ANR	3362689	UnaryOperationExpression	- 1		3362683	1					
ANR	3362690	UnaryOperator	-		3362683	0					
ANR	3362691	PrimaryExpression	1		3362683	1					
ANR	3362692	ExpressionStatement	m_stdOut = - 1	36:8:1156:1177	3362683	1	True				
ANR	3362693	AssignmentExpression	m_stdOut = - 1		3362683	0		=			
ANR	3362694	Identifier	m_stdOut		3362683	0					
ANR	3362695	UnaryOperationExpression	- 1		3362683	1					
ANR	3362696	UnaryOperator	-		3362683	0					
ANR	3362697	PrimaryExpression	1		3362683	1					
ANR	3362698	ExpressionStatement	m_stdErr = - 1	37:8:1187:1208	3362683	2	True				
ANR	3362699	AssignmentExpression	m_stdErr = - 1		3362683	0		=			
ANR	3362700	Identifier	m_stdErr		3362683	0					
ANR	3362701	UnaryOperationExpression	- 1		3362683	1					
ANR	3362702	UnaryOperator	-		3362683	0					
ANR	3362703	PrimaryExpression	1		3362683	1					
ANR	3362704	ExpressionStatement	m_reaper = - 1	38:8:1218:1239	3362683	3	True				
ANR	3362705	AssignmentExpression	m_reaper = - 1		3362683	0		=			
ANR	3362706	Identifier	m_reaper		3362683	0					
ANR	3362707	UnaryOperationExpression	- 1		3362683	1					
ANR	3362708	UnaryOperator	-		3362683	0					
ANR	3362709	PrimaryExpression	1		3362683	1					
ANR	3362710	ExpressionStatement	m_state = STATE_NULL	39:8:1249:1278	3362683	4	True				
ANR	3362711	AssignmentExpression	m_state = STATE_NULL		3362683	0		=			
ANR	3362712	Identifier	m_state		3362683	0					
ANR	3362713	Identifier	STATE_NULL		3362683	1					
ANR	3362714	ExpressionStatement	m_adPubInterval = 5	40:8:1288:1308	3362683	5	True				
ANR	3362715	AssignmentExpression	m_adPubInterval = 5		3362683	0		=			
ANR	3362716	Identifier	m_adPubInterval		3362683	0					
ANR	3362717	PrimaryExpression	5		3362683	1					
ANR	3362718	ExpressionStatement	m_hadoopHome = NULL	41:8:1318:1341	3362683	6	True				
ANR	3362719	AssignmentExpression	m_hadoopHome = NULL		3362683	0		=			
ANR	3362720	Identifier	m_hadoopHome		3362683	0					
ANR	3362721	Identifier	NULL		3362683	1					
ANR	3362722	ExpressionStatement	m_timer = - 1	42:8:1351:1372	3362683	7	True				
ANR	3362723	AssignmentExpression	m_timer = - 1		3362683	0		=			
ANR	3362724	Identifier	m_timer		3362683	0					
ANR	3362725	UnaryOperationExpression	- 1		3362683	1					
ANR	3362726	UnaryOperator	-		3362683	0					
ANR	3362727	PrimaryExpression	1		3362683	1					
ANR	3362728	ExpressionStatement	m_nodeType = HDFS_DATANODE	43:8:1382:1408	3362683	8	True				
ANR	3362729	AssignmentExpression	m_nodeType = HDFS_DATANODE		3362683	0		=			
ANR	3362730	Identifier	m_nodeType		3362683	0					
ANR	3362731	Identifier	HDFS_DATANODE		3362683	1					
ANR	3362732	ExpressionStatement	m_namenodeRole = ACTIVE	44:8:1418:1441	3362683	9	True				
ANR	3362733	AssignmentExpression	m_namenodeRole = ACTIVE		3362683	0		=			
ANR	3362734	Identifier	m_namenodeRole		3362683	0					
ANR	3362735	Identifier	ACTIVE		3362683	1					
ANR	3362736	Identifier	Hadoop :: Hadoop		3362683	1					
ANR	3362737	ParameterList			3362683	2					
ANR	3362738	CFGEntryNode	ENTRY		3362683		True				
ANR	3362739	CFGExitNode	EXIT		3362683		True				
ANR	3362740	Symbol	m_stdOut		3362683						
ANR	3362741	Symbol	NULL		3362683						
ANR	3362742	Symbol	m_timer		3362683						
ANR	3362743	Symbol	ACTIVE		3362683						
ANR	3362744	Symbol	m_stdErr		3362683						
ANR	3362745	Symbol	m_namenodeRole		3362683						
ANR	3362746	Symbol	STATE_NULL		3362683						
ANR	3362747	Symbol	m_state		3362683						
ANR	3362748	Symbol	m_hadoopHome		3362683						
ANR	3362749	Symbol	m_reaper		3362683						
ANR	3362750	Symbol	m_adPubInterval		3362683						
ANR	3362751	Symbol	m_pid		3362683						
ANR	3362752	Symbol	m_nodeType		3362683						
ANR	3362753	Symbol	HDFS_DATANODE		3362683						
ANR	3362754	Function	Hadoop :: initialize	47:0:1446:5522							
ANR	3362755	FunctionDef	Hadoop :: initialize ()		3362754	0					
ANR	3362756	CompoundStatement		47:26:1472:5522	3362754	0					
ANR	3362757	IfStatement	if ( m_state == STATE_RUNNING )		3362754	0					
ANR	3362758	Condition	m_state == STATE_RUNNING	48:12:1486:1509	3362754	0	True				
ANR	3362759	EqualityExpression	m_state == STATE_RUNNING		3362754	0		==			
ANR	3362760	Identifier	m_state		3362754	0					
ANR	3362761	Identifier	STATE_RUNNING		3362754	1					
ANR	3362762	CompoundStatement		2:38:39:39	3362754	1					
ANR	3362763	ExpressionStatement	m_state = STATE_REINIT	50:16:1588:1610	3362754	0	True				
ANR	3362764	AssignmentExpression	m_state = STATE_REINIT		3362754	0		=			
ANR	3362765	Identifier	m_state		3362754	0					
ANR	3362766	Identifier	STATE_REINIT		3362754	1					
ANR	3362767	ExpressionStatement	stop ( )	51:16:1628:1634	3362754	1	True				
ANR	3362768	CallExpression	stop ( )		3362754	0					
ANR	3362769	Callee	stop		3362754	0					
ANR	3362770	Identifier	stop		3362754	0					
ANR	3362771	ArgumentList			3362754	1					
ANR	3362772	ReturnStatement	return ;	55:16:1768:1774	3362754	2	True				
ANR	3362773	IdentifierDeclStatement	"char * hh = param ( ""HDFS_HOME"" ) ;"	59:8:1846:1875	3362754	1	True				
ANR	3362774	IdentifierDecl	"* hh = param ( ""HDFS_HOME"" )"		3362754	0					
ANR	3362775	IdentifierDeclType	char *		3362754	0					
ANR	3362776	Identifier	hh		3362754	1					
ANR	3362777	AssignmentExpression	"* hh = param ( ""HDFS_HOME"" )"		3362754	2		=			
ANR	3362778	Identifier	hh		3362754	0					
ANR	3362779	CallExpression	"param ( ""HDFS_HOME"" )"		3362754	1					
ANR	3362780	Callee	param		3362754	0					
ANR	3362781	Identifier	param		3362754	0					
ANR	3362782	ArgumentList	"""HDFS_HOME"""		3362754	1					
ANR	3362783	Argument	"""HDFS_HOME"""		3362754	0					
ANR	3362784	PrimaryExpression	"""HDFS_HOME"""		3362754	0					
ANR	3362785	IfStatement	if ( hh != NULL )		3362754	2					
ANR	3362786	Condition	hh != NULL	60:12:1889:1898	3362754	0	True				
ANR	3362787	EqualityExpression	hh != NULL		3362754	0		!=			
ANR	3362788	Identifier	hh		3362754	0					
ANR	3362789	Identifier	NULL		3362754	1					
ANR	3362790	CompoundStatement		14:24:428:428	3362754	1					
ANR	3362791	ExpressionStatement	m_hadoopHome = MyString ( hh )	61:16:1919:1946	3362754	0	True				
ANR	3362792	AssignmentExpression	m_hadoopHome = MyString ( hh )		3362754	0		=			
ANR	3362793	Identifier	m_hadoopHome		3362754	0					
ANR	3362794	CallExpression	MyString ( hh )		3362754	1					
ANR	3362795	Callee	MyString		3362754	0					
ANR	3362796	Identifier	MyString		3362754	0					
ANR	3362797	ArgumentList	hh		3362754	1					
ANR	3362798	Argument	hh		3362754	0					
ANR	3362799	Identifier	hh		3362754	0					
ANR	3362800	ExpressionStatement	free ( hh )	62:16:1964:1972	3362754	1	True				
ANR	3362801	CallExpression	free ( hh )		3362754	0					
ANR	3362802	Callee	free		3362754	0					
ANR	3362803	Identifier	free		3362754	0					
ANR	3362804	ArgumentList	hh		3362754	1					
ANR	3362805	Argument	hh		3362754	0					
ANR	3362806	Identifier	hh		3362754	0					
ANR	3362807	ElseStatement	else		3362754	0					
ANR	3362808	CompoundStatement		18:16:534:562	3362754	0					
ANR	3362809	IdentifierDeclStatement	"char * rd = param ( ""LIBEXEC"" ) ;"	64:16:2007:2035	3362754	0	True				
ANR	3362810	IdentifierDecl	"* rd = param ( ""LIBEXEC"" )"		3362754	0					
ANR	3362811	IdentifierDeclType	char *		3362754	0					
ANR	3362812	Identifier	rd		3362754	1					
ANR	3362813	AssignmentExpression	"* rd = param ( ""LIBEXEC"" )"		3362754	2		=			
ANR	3362814	Identifier	rd		3362754	0					
ANR	3362815	CallExpression	"param ( ""LIBEXEC"" )"		3362754	1					
ANR	3362816	Callee	param		3362754	0					
ANR	3362817	Identifier	param		3362754	0					
ANR	3362818	ArgumentList	"""LIBEXEC"""		3362754	1					
ANR	3362819	Argument	"""LIBEXEC"""		3362754	0					
ANR	3362820	PrimaryExpression	"""LIBEXEC"""		3362754	0					
ANR	3362821	IfStatement	if ( rd != NULL )		3362754	1					
ANR	3362822	Condition	rd != NULL	65:20:2057:2066	3362754	0	True				
ANR	3362823	EqualityExpression	rd != NULL		3362754	0		!=			
ANR	3362824	Identifier	rd		3362754	0					
ANR	3362825	Identifier	NULL		3362754	1					
ANR	3362826	CompoundStatement		20:24:622:634	3362754	1					
ANR	3362827	IdentifierDeclStatement	MyString tmp ;	66:24:2095:2107	3362754	0	True				
ANR	3362828	IdentifierDecl	tmp		3362754	0					
ANR	3362829	IdentifierDeclType	MyString		3362754	0					
ANR	3362830	Identifier	tmp		3362754	1					
ANR	3362831	ExpressionStatement	"tmp . sprintf ( ""%s/hdfs"" , rd )"	67:24:2133:2159	3362754	1	True				
ANR	3362832	CallExpression	"tmp . sprintf ( ""%s/hdfs"" , rd )"		3362754	0					
ANR	3362833	Callee	tmp . sprintf		3362754	0					
ANR	3362834	MemberAccess	tmp . sprintf		3362754	0					
ANR	3362835	Identifier	tmp		3362754	0					
ANR	3362836	Identifier	sprintf		3362754	1					
ANR	3362837	ArgumentList	"""%s/hdfs"""		3362754	1					
ANR	3362838	Argument	"""%s/hdfs"""		3362754	0					
ANR	3362839	PrimaryExpression	"""%s/hdfs"""		3362754	0					
ANR	3362840	Argument	rd		3362754	1					
ANR	3362841	Identifier	rd		3362754	0					
ANR	3362842	ExpressionStatement	m_hadoopHome = tmp	68:24:2185:2203	3362754	2	True				
ANR	3362843	AssignmentExpression	m_hadoopHome = tmp		3362754	0		=			
ANR	3362844	Identifier	m_hadoopHome		3362754	0					
ANR	3362845	Identifier	tmp		3362754	1					
ANR	3362846	ExpressionStatement	free ( rd )	69:24:2245:2253	3362754	3	True				
ANR	3362847	CallExpression	free ( rd )		3362754	0					
ANR	3362848	Callee	free		3362754	0					
ANR	3362849	Identifier	free		3362754	0					
ANR	3362850	ArgumentList	rd		3362754	1					
ANR	3362851	Argument	rd		3362754	0					
ANR	3362852	Identifier	rd		3362754	0					
ANR	3362853	IfStatement	if ( m_hadoopHome == NULL )		3362754	3					
ANR	3362854	Condition	m_hadoopHome == NULL	73:12:2329:2348	3362754	0	True				
ANR	3362855	EqualityExpression	m_hadoopHome == NULL		3362754	0		==			
ANR	3362856	Identifier	m_hadoopHome		3362754	0					
ANR	3362857	Identifier	NULL		3362754	1					
ANR	3362858	ExpressionStatement	"EXCEPT ( ""Misconfigured HDFS! Please specify a location of hadoop installation directory\\n"" )"	74:16:2367:2457	3362754	1	True				
ANR	3362859	CallExpression	"EXCEPT ( ""Misconfigured HDFS! Please specify a location of hadoop installation directory\\n"" )"		3362754	0					
ANR	3362860	Callee	EXCEPT		3362754	0					
ANR	3362861	Identifier	EXCEPT		3362754	0					
ANR	3362862	ArgumentList	"""Misconfigured HDFS! Please specify a location of hadoop installation directory\\n"""		3362754	1					
ANR	3362863	Argument	"""Misconfigured HDFS! Please specify a location of hadoop installation directory\\n"""		3362754	0					
ANR	3362864	PrimaryExpression	"""Misconfigured HDFS! Please specify a location of hadoop installation directory\\n"""		3362754	0					
ANR	3362865	ElseStatement	else		3362754	0					
ANR	3362866	CompoundStatement		30:16:1034:1069	3362754	0					
ANR	3362867	IdentifierDeclStatement	Directory dir ( m_hadoopHome . Value ( ) ) ;	76:16:2507:2542	3362754	0	True				
ANR	3362868	IdentifierDecl	dir ( m_hadoopHome . Value ( ) )		3362754	0					
ANR	3362869	IdentifierDeclType	Directory		3362754	0					
ANR	3362870	Identifier	dir		3362754	1					
ANR	3362871	CallExpression	m_hadoopHome . Value ( )		3362754	2					
ANR	3362872	Callee	m_hadoopHome . Value		3362754	0					
ANR	3362873	MemberAccess	m_hadoopHome . Value		3362754	0					
ANR	3362874	Identifier	m_hadoopHome		3362754	0					
ANR	3362875	Identifier	Value		3362754	1					
ANR	3362876	ArgumentList			3362754	1					
ANR	3362877	IfStatement	if ( dir . Next ( ) == NULL )		3362754	1					
ANR	3362878	Condition	dir . Next ( ) == NULL	77:20:2564:2581	3362754	0	True				
ANR	3362879	EqualityExpression	dir . Next ( ) == NULL		3362754	0		==			
ANR	3362880	CallExpression	dir . Next ( )		3362754	0					
ANR	3362881	Callee	dir . Next		3362754	0					
ANR	3362882	MemberAccess	dir . Next		3362754	0					
ANR	3362883	Identifier	dir		3362754	0					
ANR	3362884	Identifier	Next		3362754	1					
ANR	3362885	ArgumentList			3362754	1					
ANR	3362886	Identifier	NULL		3362754	1					
ANR	3362887	ExpressionStatement	"EXCEPT ( ""Misconfigure HDFS! Please specify a valid path to hadoop installation directory"" )"	78:24:2608:2697	3362754	1	True				
ANR	3362888	CallExpression	"EXCEPT ( ""Misconfigure HDFS! Please specify a valid path to hadoop installation directory"" )"		3362754	0					
ANR	3362889	Callee	EXCEPT		3362754	0					
ANR	3362890	Identifier	EXCEPT		3362754	0					
ANR	3362891	ArgumentList	"""Misconfigure HDFS! Please specify a valid path to hadoop installation directory"""		3362754	1					
ANR	3362892	Argument	"""Misconfigure HDFS! Please specify a valid path to hadoop installation directory"""		3362754	0					
ANR	3362893	PrimaryExpression	"""Misconfigure HDFS! Please specify a valid path to hadoop installation directory"""		3362754	0					
ANR	3362894	ExpressionStatement	m_classpath . clearAll ( )	81:8:2726:2748	3362754	4	True				
ANR	3362895	CallExpression	m_classpath . clearAll ( )		3362754	0					
ANR	3362896	Callee	m_classpath . clearAll		3362754	0					
ANR	3362897	MemberAccess	m_classpath . clearAll		3362754	0					
ANR	3362898	Identifier	m_classpath		3362754	0					
ANR	3362899	Identifier	clearAll		3362754	1					
ANR	3362900	ArgumentList			3362754	1					
ANR	3362901	IdentifierDeclStatement	MyString buff ;	83:8:2759:2772	3362754	5	True				
ANR	3362902	IdentifierDecl	buff		3362754	0					
ANR	3362903	IdentifierDeclType	MyString		3362754	0					
ANR	3362904	Identifier	buff		3362754	1					
ANR	3362905	IdentifierDeclStatement	"char * logdir = param ( ""LOG"" ) ;"	89:8:3051:3078	3362754	6	True				
ANR	3362906	IdentifierDecl	"* logdir = param ( ""LOG"" )"		3362754	0					
ANR	3362907	IdentifierDeclType	char *		3362754	0					
ANR	3362908	Identifier	logdir		3362754	1					
ANR	3362909	AssignmentExpression	"* logdir = param ( ""LOG"" )"		3362754	2		=			
ANR	3362910	Identifier	logdir		3362754	0					
ANR	3362911	CallExpression	"param ( ""LOG"" )"		3362754	1					
ANR	3362912	Callee	param		3362754	0					
ANR	3362913	Identifier	param		3362754	0					
ANR	3362914	ArgumentList	"""LOG"""		3362754	1					
ANR	3362915	Argument	"""LOG"""		3362754	0					
ANR	3362916	PrimaryExpression	"""LOG"""		3362754	0					
ANR	3362917	IfStatement	if ( logdir != NULL )		3362754	7					
ANR	3362918	Condition	logdir != NULL	90:12:3092:3105	3362754	0	True				
ANR	3362919	EqualityExpression	logdir != NULL		3362754	0		!=			
ANR	3362920	Identifier	logdir		3362754	0					
ANR	3362921	Identifier	NULL		3362754	1					
ANR	3362922	CompoundStatement		44:28:1635:1635	3362754	1					
ANR	3362923	ExpressionStatement	"buff . sprintf ( ""%s/"" , logdir )"	91:16:3126:3153	3362754	0	True				
ANR	3362924	CallExpression	"buff . sprintf ( ""%s/"" , logdir )"		3362754	0					
ANR	3362925	Callee	buff . sprintf		3362754	0					
ANR	3362926	MemberAccess	buff . sprintf		3362754	0					
ANR	3362927	Identifier	buff		3362754	0					
ANR	3362928	Identifier	sprintf		3362754	1					
ANR	3362929	ArgumentList	"""%s/"""		3362754	1					
ANR	3362930	Argument	"""%s/"""		3362754	0					
ANR	3362931	PrimaryExpression	"""%s/"""		3362754	0					
ANR	3362932	Argument	logdir		3362754	1					
ANR	3362933	Identifier	logdir		3362754	0					
ANR	3362934	ExpressionStatement	m_classpath . insert ( buff . Value ( ) )	92:16:3171:3203	3362754	1	True				
ANR	3362935	CallExpression	m_classpath . insert ( buff . Value ( ) )		3362754	0					
ANR	3362936	Callee	m_classpath . insert		3362754	0					
ANR	3362937	MemberAccess	m_classpath . insert		3362754	0					
ANR	3362938	Identifier	m_classpath		3362754	0					
ANR	3362939	Identifier	insert		3362754	1					
ANR	3362940	ArgumentList	buff . Value ( )		3362754	1					
ANR	3362941	Argument	buff . Value ( )		3362754	0					
ANR	3362942	CallExpression	buff . Value ( )		3362754	0					
ANR	3362943	Callee	buff . Value		3362754	0					
ANR	3362944	MemberAccess	buff . Value		3362754	0					
ANR	3362945	Identifier	buff		3362754	0					
ANR	3362946	Identifier	Value		3362754	1					
ANR	3362947	ArgumentList			3362754	1					
ANR	3362948	ExpressionStatement	free ( logdir )	93:16:3221:3233	3362754	2	True				
ANR	3362949	CallExpression	free ( logdir )		3362754	0					
ANR	3362950	Callee	free		3362754	0					
ANR	3362951	Identifier	free		3362754	0					
ANR	3362952	ArgumentList	logdir		3362754	1					
ANR	3362953	Argument	logdir		3362754	0					
ANR	3362954	Identifier	logdir		3362754	0					
ANR	3362955	ExpressionStatement	"buff . sprintf ( ""%s/conf"" , m_hadoopHome . Value ( ) )"	95:8:3253:3298	3362754	8	True				
ANR	3362956	CallExpression	"buff . sprintf ( ""%s/conf"" , m_hadoopHome . Value ( ) )"		3362754	0					
ANR	3362957	Callee	buff . sprintf		3362754	0					
ANR	3362958	MemberAccess	buff . sprintf		3362754	0					
ANR	3362959	Identifier	buff		3362754	0					
ANR	3362960	Identifier	sprintf		3362754	1					
ANR	3362961	ArgumentList	"""%s/conf"""		3362754	1					
ANR	3362962	Argument	"""%s/conf"""		3362754	0					
ANR	3362963	PrimaryExpression	"""%s/conf"""		3362754	0					
ANR	3362964	Argument	m_hadoopHome . Value ( )		3362754	1					
ANR	3362965	CallExpression	m_hadoopHome . Value ( )		3362754	0					
ANR	3362966	Callee	m_hadoopHome . Value		3362754	0					
ANR	3362967	MemberAccess	m_hadoopHome . Value		3362754	0					
ANR	3362968	Identifier	m_hadoopHome		3362754	0					
ANR	3362969	Identifier	Value		3362754	1					
ANR	3362970	ArgumentList			3362754	1					
ANR	3362971	ExpressionStatement	m_classpath . insert ( buff . Value ( ) )	96:8:3308:3340	3362754	9	True				
ANR	3362972	CallExpression	m_classpath . insert ( buff . Value ( ) )		3362754	0					
ANR	3362973	Callee	m_classpath . insert		3362754	0					
ANR	3362974	MemberAccess	m_classpath . insert		3362754	0					
ANR	3362975	Identifier	m_classpath		3362754	0					
ANR	3362976	Identifier	insert		3362754	1					
ANR	3362977	ArgumentList	buff . Value ( )		3362754	1					
ANR	3362978	Argument	buff . Value ( )		3362754	0					
ANR	3362979	CallExpression	buff . Value ( )		3362754	0					
ANR	3362980	Callee	buff . Value		3362754	0					
ANR	3362981	MemberAccess	buff . Value		3362754	0					
ANR	3362982	Identifier	buff		3362754	0					
ANR	3362983	Identifier	Value		3362754	1					
ANR	3362984	ArgumentList			3362754	1					
ANR	3362985	ExpressionStatement	"buff . sprintf ( ""%s/"" , m_hadoopHome . Value ( ) )"	98:8:3351:3392	3362754	10	True				
ANR	3362986	CallExpression	"buff . sprintf ( ""%s/"" , m_hadoopHome . Value ( ) )"		3362754	0					
ANR	3362987	Callee	buff . sprintf		3362754	0					
ANR	3362988	MemberAccess	buff . sprintf		3362754	0					
ANR	3362989	Identifier	buff		3362754	0					
ANR	3362990	Identifier	sprintf		3362754	1					
ANR	3362991	ArgumentList	"""%s/"""		3362754	1					
ANR	3362992	Argument	"""%s/"""		3362754	0					
ANR	3362993	PrimaryExpression	"""%s/"""		3362754	0					
ANR	3362994	Argument	m_hadoopHome . Value ( )		3362754	1					
ANR	3362995	CallExpression	m_hadoopHome . Value ( )		3362754	0					
ANR	3362996	Callee	m_hadoopHome . Value		3362754	0					
ANR	3362997	MemberAccess	m_hadoopHome . Value		3362754	0					
ANR	3362998	Identifier	m_hadoopHome		3362754	0					
ANR	3362999	Identifier	Value		3362754	1					
ANR	3363000	ArgumentList			3362754	1					
ANR	3363001	ExpressionStatement	m_classpath . insert ( buff . Value ( ) )	99:8:3402:3434	3362754	11	True				
ANR	3363002	CallExpression	m_classpath . insert ( buff . Value ( ) )		3362754	0					
ANR	3363003	Callee	m_classpath . insert		3362754	0					
ANR	3363004	MemberAccess	m_classpath . insert		3362754	0					
ANR	3363005	Identifier	m_classpath		3362754	0					
ANR	3363006	Identifier	insert		3362754	1					
ANR	3363007	ArgumentList	buff . Value ( )		3362754	1					
ANR	3363008	Argument	buff . Value ( )		3362754	0					
ANR	3363009	CallExpression	buff . Value ( )		3362754	0					
ANR	3363010	Callee	buff . Value		3362754	0					
ANR	3363011	MemberAccess	buff . Value		3362754	0					
ANR	3363012	Identifier	buff		3362754	0					
ANR	3363013	Identifier	Value		3362754	1					
ANR	3363014	ArgumentList			3362754	1					
ANR	3363015	ExpressionStatement	"buff . sprintf ( ""%s"" , m_hadoopHome . Value ( ) )"	101:8:3445:3485	3362754	12	True				
ANR	3363016	CallExpression	"buff . sprintf ( ""%s"" , m_hadoopHome . Value ( ) )"		3362754	0					
ANR	3363017	Callee	buff . sprintf		3362754	0					
ANR	3363018	MemberAccess	buff . sprintf		3362754	0					
ANR	3363019	Identifier	buff		3362754	0					
ANR	3363020	Identifier	sprintf		3362754	1					
ANR	3363021	ArgumentList	"""%s"""		3362754	1					
ANR	3363022	Argument	"""%s"""		3362754	0					
ANR	3363023	PrimaryExpression	"""%s"""		3362754	0					
ANR	3363024	Argument	m_hadoopHome . Value ( )		3362754	1					
ANR	3363025	CallExpression	m_hadoopHome . Value ( )		3362754	0					
ANR	3363026	Callee	m_hadoopHome . Value		3362754	0					
ANR	3363027	MemberAccess	m_hadoopHome . Value		3362754	0					
ANR	3363028	Identifier	m_hadoopHome		3362754	0					
ANR	3363029	Identifier	Value		3362754	1					
ANR	3363030	ArgumentList			3362754	1					
ANR	3363031	ExpressionStatement	recurrBuildClasspath ( buff . Value ( ) )	102:8:3495:3529	3362754	13	True				
ANR	3363032	CallExpression	recurrBuildClasspath ( buff . Value ( ) )		3362754	0					
ANR	3363033	Callee	recurrBuildClasspath		3362754	0					
ANR	3363034	Identifier	recurrBuildClasspath		3362754	0					
ANR	3363035	ArgumentList	buff . Value ( )		3362754	1					
ANR	3363036	Argument	buff . Value ( )		3362754	0					
ANR	3363037	CallExpression	buff . Value ( )		3362754	0					
ANR	3363038	Callee	buff . Value		3362754	0					
ANR	3363039	MemberAccess	buff . Value		3362754	0					
ANR	3363040	Identifier	buff		3362754	0					
ANR	3363041	Identifier	Value		3362754	1					
ANR	3363042	ArgumentList			3362754	1					
ANR	3363043	ExpressionStatement	"m_nameNodeClass = ""org.apache.hadoop.hdfs.server.namenode.NameNode"""	104:8:3540:3608	3362754	14	True				
ANR	3363044	AssignmentExpression	"m_nameNodeClass = ""org.apache.hadoop.hdfs.server.namenode.NameNode"""		3362754	0		=			
ANR	3363045	Identifier	m_nameNodeClass		3362754	0					
ANR	3363046	PrimaryExpression	"""org.apache.hadoop.hdfs.server.namenode.NameNode"""		3362754	1					
ANR	3363047	IdentifierDeclStatement	"char * nclass = param ( ""HDFS_NAMENODE_CLASS"" ) ;"	105:8:3618:3661	3362754	15	True				
ANR	3363048	IdentifierDecl	"* nclass = param ( ""HDFS_NAMENODE_CLASS"" )"		3362754	0					
ANR	3363049	IdentifierDeclType	char *		3362754	0					
ANR	3363050	Identifier	nclass		3362754	1					
ANR	3363051	AssignmentExpression	"* nclass = param ( ""HDFS_NAMENODE_CLASS"" )"		3362754	2		=			
ANR	3363052	Identifier	nclass		3362754	0					
ANR	3363053	CallExpression	"param ( ""HDFS_NAMENODE_CLASS"" )"		3362754	1					
ANR	3363054	Callee	param		3362754	0					
ANR	3363055	Identifier	param		3362754	0					
ANR	3363056	ArgumentList	"""HDFS_NAMENODE_CLASS"""		3362754	1					
ANR	3363057	Argument	"""HDFS_NAMENODE_CLASS"""		3362754	0					
ANR	3363058	PrimaryExpression	"""HDFS_NAMENODE_CLASS"""		3362754	0					
ANR	3363059	IfStatement	if ( nclass != NULL )		3362754	16					
ANR	3363060	Condition	nclass != NULL	106:12:3675:3688	3362754	0	True				
ANR	3363061	EqualityExpression	nclass != NULL		3362754	0		!=			
ANR	3363062	Identifier	nclass		3362754	0					
ANR	3363063	Identifier	NULL		3362754	1					
ANR	3363064	CompoundStatement		60:28:2218:2218	3362754	1					
ANR	3363065	ExpressionStatement	m_nameNodeClass = nclass	107:16:3709:3733	3362754	0	True				
ANR	3363066	AssignmentExpression	m_nameNodeClass = nclass		3362754	0		=			
ANR	3363067	Identifier	m_nameNodeClass		3362754	0					
ANR	3363068	Identifier	nclass		3362754	1					
ANR	3363069	ExpressionStatement	free ( nclass )	108:16:3751:3763	3362754	1	True				
ANR	3363070	CallExpression	free ( nclass )		3362754	0					
ANR	3363071	Callee	free		3362754	0					
ANR	3363072	Identifier	free		3362754	0					
ANR	3363073	ArgumentList	nclass		3362754	1					
ANR	3363074	Argument	nclass		3362754	0					
ANR	3363075	Identifier	nclass		3362754	0					
ANR	3363076	ExpressionStatement	"m_dataNodeClass = ""org.apache.hadoop.hdfs.server.datanode.DataNode"""	111:8:3784:3852	3362754	17	True				
ANR	3363077	AssignmentExpression	"m_dataNodeClass = ""org.apache.hadoop.hdfs.server.datanode.DataNode"""		3362754	0		=			
ANR	3363078	Identifier	m_dataNodeClass		3362754	0					
ANR	3363079	PrimaryExpression	"""org.apache.hadoop.hdfs.server.datanode.DataNode"""		3362754	1					
ANR	3363080	IdentifierDeclStatement	"char * dclass = param ( ""HDFS_DATANODE_CLASS"" ) ;"	112:8:3862:3905	3362754	18	True				
ANR	3363081	IdentifierDecl	"* dclass = param ( ""HDFS_DATANODE_CLASS"" )"		3362754	0					
ANR	3363082	IdentifierDeclType	char *		3362754	0					
ANR	3363083	Identifier	dclass		3362754	1					
ANR	3363084	AssignmentExpression	"* dclass = param ( ""HDFS_DATANODE_CLASS"" )"		3362754	2		=			
ANR	3363085	Identifier	dclass		3362754	0					
ANR	3363086	CallExpression	"param ( ""HDFS_DATANODE_CLASS"" )"		3362754	1					
ANR	3363087	Callee	param		3362754	0					
ANR	3363088	Identifier	param		3362754	0					
ANR	3363089	ArgumentList	"""HDFS_DATANODE_CLASS"""		3362754	1					
ANR	3363090	Argument	"""HDFS_DATANODE_CLASS"""		3362754	0					
ANR	3363091	PrimaryExpression	"""HDFS_DATANODE_CLASS"""		3362754	0					
ANR	3363092	IfStatement	if ( dclass != NULL )		3362754	19					
ANR	3363093	Condition	dclass != NULL	113:12:3919:3932	3362754	0	True				
ANR	3363094	EqualityExpression	dclass != NULL		3362754	0		!=			
ANR	3363095	Identifier	dclass		3362754	0					
ANR	3363096	Identifier	NULL		3362754	1					
ANR	3363097	CompoundStatement		67:28:2462:2462	3362754	1					
ANR	3363098	ExpressionStatement	m_dataNodeClass = dclass	114:16:3953:3977	3362754	0	True				
ANR	3363099	AssignmentExpression	m_dataNodeClass = dclass		3362754	0		=			
ANR	3363100	Identifier	m_dataNodeClass		3362754	0					
ANR	3363101	Identifier	dclass		3362754	1					
ANR	3363102	ExpressionStatement	free ( dclass )	115:16:3995:4007	3362754	1	True				
ANR	3363103	CallExpression	free ( dclass )		3362754	0					
ANR	3363104	Callee	free		3362754	0					
ANR	3363105	Identifier	free		3362754	0					
ANR	3363106	ArgumentList	dclass		3362754	1					
ANR	3363107	Argument	dclass		3362754	0					
ANR	3363108	Identifier	dclass		3362754	0					
ANR	3363109	ExpressionStatement	"m_dfsAdminClass = ""org.apache.hadoop.hdfs.tools.DFSAdmin"""	118:8:4028:4085	3362754	20	True				
ANR	3363110	AssignmentExpression	"m_dfsAdminClass = ""org.apache.hadoop.hdfs.tools.DFSAdmin"""		3362754	0		=			
ANR	3363111	Identifier	m_dfsAdminClass		3362754	0					
ANR	3363112	PrimaryExpression	"""org.apache.hadoop.hdfs.tools.DFSAdmin"""		3362754	1					
ANR	3363113	IdentifierDeclStatement	"char * dfsAdminclass = param ( ""HDFS_DFSADMIN_CLASS"" ) ;"	119:8:4095:4145	3362754	21	True				
ANR	3363114	IdentifierDecl	"* dfsAdminclass = param ( ""HDFS_DFSADMIN_CLASS"" )"		3362754	0					
ANR	3363115	IdentifierDeclType	char *		3362754	0					
ANR	3363116	Identifier	dfsAdminclass		3362754	1					
ANR	3363117	AssignmentExpression	"* dfsAdminclass = param ( ""HDFS_DFSADMIN_CLASS"" )"		3362754	2		=			
ANR	3363118	Identifier	dfsAdminclass		3362754	0					
ANR	3363119	CallExpression	"param ( ""HDFS_DFSADMIN_CLASS"" )"		3362754	1					
ANR	3363120	Callee	param		3362754	0					
ANR	3363121	Identifier	param		3362754	0					
ANR	3363122	ArgumentList	"""HDFS_DFSADMIN_CLASS"""		3362754	1					
ANR	3363123	Argument	"""HDFS_DFSADMIN_CLASS"""		3362754	0					
ANR	3363124	PrimaryExpression	"""HDFS_DFSADMIN_CLASS"""		3362754	0					
ANR	3363125	IfStatement	if ( dfsAdminclass != NULL )		3362754	22					
ANR	3363126	Condition	dfsAdminclass != NULL	120:12:4159:4179	3362754	0	True				
ANR	3363127	EqualityExpression	dfsAdminclass != NULL		3362754	0		!=			
ANR	3363128	Identifier	dfsAdminclass		3362754	0					
ANR	3363129	Identifier	NULL		3362754	1					
ANR	3363130	CompoundStatement		74:35:2709:2709	3362754	1					
ANR	3363131	ExpressionStatement	m_dfsAdminClass = dfsAdminclass	121:16:4200:4231	3362754	0	True				
ANR	3363132	AssignmentExpression	m_dfsAdminClass = dfsAdminclass		3362754	0		=			
ANR	3363133	Identifier	m_dfsAdminClass		3362754	0					
ANR	3363134	Identifier	dfsAdminclass		3362754	1					
ANR	3363135	ExpressionStatement	free ( dfsAdminclass )	122:16:4249:4268	3362754	1	True				
ANR	3363136	CallExpression	free ( dfsAdminclass )		3362754	0					
ANR	3363137	Callee	free		3362754	0					
ANR	3363138	Identifier	free		3362754	0					
ANR	3363139	ArgumentList	dfsAdminclass		3362754	1					
ANR	3363140	Argument	dfsAdminclass		3362754	0					
ANR	3363141	Identifier	dfsAdminclass		3362754	0					
ANR	3363142	ExpressionStatement	"m_hdfsSiteFile = ""hdfs-site.xml"""	125:8:4289:4321	3362754	23	True				
ANR	3363143	AssignmentExpression	"m_hdfsSiteFile = ""hdfs-site.xml"""		3362754	0		=			
ANR	3363144	Identifier	m_hdfsSiteFile		3362754	0					
ANR	3363145	PrimaryExpression	"""hdfs-site.xml"""		3362754	1					
ANR	3363146	IdentifierDeclStatement	"char * sitef = param ( ""HDFS_SITE_FILE"" ) ;"	126:8:4331:4368	3362754	24	True				
ANR	3363147	IdentifierDecl	"* sitef = param ( ""HDFS_SITE_FILE"" )"		3362754	0					
ANR	3363148	IdentifierDeclType	char *		3362754	0					
ANR	3363149	Identifier	sitef		3362754	1					
ANR	3363150	AssignmentExpression	"* sitef = param ( ""HDFS_SITE_FILE"" )"		3362754	2		=			
ANR	3363151	Identifier	sitef		3362754	0					
ANR	3363152	CallExpression	"param ( ""HDFS_SITE_FILE"" )"		3362754	1					
ANR	3363153	Callee	param		3362754	0					
ANR	3363154	Identifier	param		3362754	0					
ANR	3363155	ArgumentList	"""HDFS_SITE_FILE"""		3362754	1					
ANR	3363156	Argument	"""HDFS_SITE_FILE"""		3362754	0					
ANR	3363157	PrimaryExpression	"""HDFS_SITE_FILE"""		3362754	0					
ANR	3363158	IfStatement	if ( sitef != NULL )		3362754	25					
ANR	3363159	Condition	sitef != NULL	127:12:4382:4394	3362754	0	True				
ANR	3363160	EqualityExpression	sitef != NULL		3362754	0		!=			
ANR	3363161	Identifier	sitef		3362754	0					
ANR	3363162	Identifier	NULL		3362754	1					
ANR	3363163	CompoundStatement		81:27:2924:2924	3362754	1					
ANR	3363164	ExpressionStatement	m_hdfsSiteFile = sitef	128:16:4415:4437	3362754	0	True				
ANR	3363165	AssignmentExpression	m_hdfsSiteFile = sitef		3362754	0		=			
ANR	3363166	Identifier	m_hdfsSiteFile		3362754	0					
ANR	3363167	Identifier	sitef		3362754	1					
ANR	3363168	ExpressionStatement	free ( sitef )	129:16:4455:4466	3362754	1	True				
ANR	3363169	CallExpression	free ( sitef )		3362754	0					
ANR	3363170	Callee	free		3362754	0					
ANR	3363171	Identifier	free		3362754	0					
ANR	3363172	ArgumentList	sitef		3362754	1					
ANR	3363173	Argument	sitef		3362754	0					
ANR	3363174	Identifier	sitef		3362754	0					
ANR	3363175	ExpressionStatement	"m_coreSiteFile = ""core-site.xml"""	132:8:4487:4519	3362754	26	True				
ANR	3363176	AssignmentExpression	"m_coreSiteFile = ""core-site.xml"""		3362754	0		=			
ANR	3363177	Identifier	m_coreSiteFile		3362754	0					
ANR	3363178	PrimaryExpression	"""core-site.xml"""		3362754	1					
ANR	3363179	ExpressionStatement	"m_adPubInterval = param_integer ( ""HDFS_AD_PUBLISH_INTERVAL"" , 5 )"	134:2:4524:4586	3362754	27	True				
ANR	3363180	AssignmentExpression	"m_adPubInterval = param_integer ( ""HDFS_AD_PUBLISH_INTERVAL"" , 5 )"		3362754	0		=			
ANR	3363181	Identifier	m_adPubInterval		3362754	0					
ANR	3363182	CallExpression	"param_integer ( ""HDFS_AD_PUBLISH_INTERVAL"" , 5 )"		3362754	1					
ANR	3363183	Callee	param_integer		3362754	0					
ANR	3363184	Identifier	param_integer		3362754	0					
ANR	3363185	ArgumentList	"""HDFS_AD_PUBLISH_INTERVAL"""		3362754	1					
ANR	3363186	Argument	"""HDFS_AD_PUBLISH_INTERVAL"""		3362754	0					
ANR	3363187	PrimaryExpression	"""HDFS_AD_PUBLISH_INTERVAL"""		3362754	0					
ANR	3363188	Argument	5		3362754	1					
ANR	3363189	PrimaryExpression	5		3362754	0					
ANR	3363190	ExpressionStatement	"m_reaper = daemonCore -> Register_Reaper ( ""reaperHadoop"" , ( ReaperHandlercpp ) & Hadoop :: reaperResponse , ""Hadoop process reaper"" , ( Service * ) this )"	137:8:4643:4856	3362754	28	True				
ANR	3363191	AssignmentExpression	"m_reaper = daemonCore -> Register_Reaper ( ""reaperHadoop"" , ( ReaperHandlercpp ) & Hadoop :: reaperResponse , ""Hadoop process reaper"" , ( Service * ) this )"		3362754	0		=			
ANR	3363192	Identifier	m_reaper		3362754	0					
ANR	3363193	CallExpression	"daemonCore -> Register_Reaper ( ""reaperHadoop"" , ( ReaperHandlercpp ) & Hadoop :: reaperResponse , ""Hadoop process reaper"" , ( Service * ) this )"		3362754	1					
ANR	3363194	Callee	daemonCore -> Register_Reaper		3362754	0					
ANR	3363195	PtrMemberAccess	daemonCore -> Register_Reaper		3362754	0					
ANR	3363196	Identifier	daemonCore		3362754	0					
ANR	3363197	Identifier	Register_Reaper		3362754	1					
ANR	3363198	ArgumentList	"""reaperHadoop"""		3362754	1					
ANR	3363199	Argument	"""reaperHadoop"""		3362754	0					
ANR	3363200	PrimaryExpression	"""reaperHadoop"""		3362754	0					
ANR	3363201	Argument	( ReaperHandlercpp ) & Hadoop :: reaperResponse		3362754	1					
ANR	3363202	CastExpression	( ReaperHandlercpp ) & Hadoop :: reaperResponse		3362754	0					
ANR	3363203	CastTarget	ReaperHandlercpp		3362754	0					
ANR	3363204	UnaryOperationExpression	& Hadoop :: reaperResponse		3362754	1					
ANR	3363205	UnaryOperator	&		3362754	0					
ANR	3363206	Identifier	Hadoop :: reaperResponse		3362754	1					
ANR	3363207	Argument	"""Hadoop process reaper"""		3362754	2					
ANR	3363208	PrimaryExpression	"""Hadoop process reaper"""		3362754	0					
ANR	3363209	Argument	( Service * ) this		3362754	3					
ANR	3363210	CastExpression	( Service * ) this		3362754	0					
ANR	3363211	CastTarget	Service *		3362754	0					
ANR	3363212	Identifier	this		3362754	1					
ANR	3363213	ExpressionStatement	ASSERT ( m_reaper != FALSE )	142:8:4869:4894	3362754	29	True				
ANR	3363214	CallExpression	ASSERT ( m_reaper != FALSE )		3362754	0					
ANR	3363215	Callee	ASSERT		3362754	0					
ANR	3363216	Identifier	ASSERT		3362754	0					
ANR	3363217	ArgumentList	m_reaper != FALSE		3362754	1					
ANR	3363218	Argument	m_reaper != FALSE		3362754	0					
ANR	3363219	EqualityExpression	m_reaper != FALSE		3362754	0		!=			
ANR	3363220	Identifier	m_reaper		3362754	0					
ANR	3363221	Identifier	FALSE		3362754	1					
ANR	3363222	ExpressionStatement	writeCoreSiteFile ( )	144:8:4905:4924	3362754	30	True				
ANR	3363223	CallExpression	writeCoreSiteFile ( )		3362754	0					
ANR	3363224	Callee	writeCoreSiteFile		3362754	0					
ANR	3363225	Identifier	writeCoreSiteFile		3362754	0					
ANR	3363226	ArgumentList			3362754	1					
ANR	3363227	ExpressionStatement	writeConfigFile ( )	145:8:4936:4953	3362754	31	True				
ANR	3363228	CallExpression	writeConfigFile ( )		3362754	0					
ANR	3363229	Callee	writeConfigFile		3362754	0					
ANR	3363230	Identifier	writeConfigFile		3362754	0					
ANR	3363231	ArgumentList			3362754	1					
ANR	3363232	ExpressionStatement	startServices ( )	147:8:4964:4979	3362754	32	True				
ANR	3363233	CallExpression	startServices ( )		3362754	0					
ANR	3363234	Callee	startServices		3362754	0					
ANR	3363235	Identifier	startServices		3362754	0					
ANR	3363236	ArgumentList			3362754	1					
ANR	3363237	ExpressionStatement	"m_hdfsAd . SetMyTypeName ( ""hdfs"" )"	150:8:5023:5053	3362754	33	True				
ANR	3363238	CallExpression	"m_hdfsAd . SetMyTypeName ( ""hdfs"" )"		3362754	0					
ANR	3363239	Callee	m_hdfsAd . SetMyTypeName		3362754	0					
ANR	3363240	MemberAccess	m_hdfsAd . SetMyTypeName		3362754	0					
ANR	3363241	Identifier	m_hdfsAd		3362754	0					
ANR	3363242	Identifier	SetMyTypeName		3362754	1					
ANR	3363243	ArgumentList	"""hdfs"""		3362754	1					
ANR	3363244	Argument	"""hdfs"""		3362754	0					
ANR	3363245	PrimaryExpression	"""hdfs"""		3362754	0					
ANR	3363246	ExpressionStatement	"m_hdfsAd . SetTargetTypeName ( """" )"	151:8:5063:5093	3362754	34	True				
ANR	3363247	CallExpression	"m_hdfsAd . SetTargetTypeName ( """" )"		3362754	0					
ANR	3363248	Callee	m_hdfsAd . SetTargetTypeName		3362754	0					
ANR	3363249	MemberAccess	m_hdfsAd . SetTargetTypeName		3362754	0					
ANR	3363250	Identifier	m_hdfsAd		3362754	0					
ANR	3363251	Identifier	SetTargetTypeName		3362754	1					
ANR	3363252	ArgumentList	""""""		3362754	1					
ANR	3363253	Argument	""""""		3362754	0					
ANR	3363254	PrimaryExpression	""""""		3362754	0					
ANR	3363255	ExpressionStatement	"m_hdfsAd . Assign ( ATTR_NAME , ""hdfs"" )"	152:8:5103:5137	3362754	35	True				
ANR	3363256	CallExpression	"m_hdfsAd . Assign ( ATTR_NAME , ""hdfs"" )"		3362754	0					
ANR	3363257	Callee	m_hdfsAd . Assign		3362754	0					
ANR	3363258	MemberAccess	m_hdfsAd . Assign		3362754	0					
ANR	3363259	Identifier	m_hdfsAd		3362754	0					
ANR	3363260	Identifier	Assign		3362754	1					
ANR	3363261	ArgumentList	ATTR_NAME		3362754	1					
ANR	3363262	Argument	ATTR_NAME		3362754	0					
ANR	3363263	Identifier	ATTR_NAME		3362754	0					
ANR	3363264	Argument	"""hdfs"""		3362754	1					
ANR	3363265	PrimaryExpression	"""hdfs"""		3362754	0					
ANR	3363266	ExpressionStatement	"m_hdfsAd . Assign ( ""ServiceType"" , getServiceNameByType ( m_nodeType ) )"	153:8:5147:5213	3362754	36	True				
ANR	3363267	CallExpression	"m_hdfsAd . Assign ( ""ServiceType"" , getServiceNameByType ( m_nodeType ) )"		3362754	0					
ANR	3363268	Callee	m_hdfsAd . Assign		3362754	0					
ANR	3363269	MemberAccess	m_hdfsAd . Assign		3362754	0					
ANR	3363270	Identifier	m_hdfsAd		3362754	0					
ANR	3363271	Identifier	Assign		3362754	1					
ANR	3363272	ArgumentList	"""ServiceType"""		3362754	1					
ANR	3363273	Argument	"""ServiceType"""		3362754	0					
ANR	3363274	PrimaryExpression	"""ServiceType"""		3362754	0					
ANR	3363275	Argument	getServiceNameByType ( m_nodeType )		3362754	1					
ANR	3363276	CallExpression	getServiceNameByType ( m_nodeType )		3362754	0					
ANR	3363277	Callee	getServiceNameByType		3362754	0					
ANR	3363278	Identifier	getServiceNameByType		3362754	0					
ANR	3363279	ArgumentList	m_nodeType		3362754	1					
ANR	3363280	Argument	m_nodeType		3362754	0					
ANR	3363281	Identifier	m_nodeType		3362754	0					
ANR	3363282	ExpressionStatement	daemonCore -> publish ( & m_hdfsAd )	154:8:5223:5253	3362754	37	True				
ANR	3363283	CallExpression	daemonCore -> publish ( & m_hdfsAd )		3362754	0					
ANR	3363284	Callee	daemonCore -> publish		3362754	0					
ANR	3363285	PtrMemberAccess	daemonCore -> publish		3362754	0					
ANR	3363286	Identifier	daemonCore		3362754	0					
ANR	3363287	Identifier	publish		3362754	1					
ANR	3363288	ArgumentList	& m_hdfsAd		3362754	1					
ANR	3363289	Argument	& m_hdfsAd		3362754	0					
ANR	3363290	UnaryOperationExpression	& m_hdfsAd		3362754	0					
ANR	3363291	UnaryOperator	&		3362754	0					
ANR	3363292	Identifier	m_hdfsAd		3362754	1					
ANR	3363293	ExpressionStatement	"daemonCore -> Register_Timer ( 1 , m_adPubInterval , ( TimerHandlercpp ) & Hadoop :: publishClassAd , ""publishClassAd"" , this )"	158:8:5385:5519	3362754	38	True				
ANR	3363294	CallExpression	"daemonCore -> Register_Timer ( 1 , m_adPubInterval , ( TimerHandlercpp ) & Hadoop :: publishClassAd , ""publishClassAd"" , this )"		3362754	0					
ANR	3363295	Callee	daemonCore -> Register_Timer		3362754	0					
ANR	3363296	PtrMemberAccess	daemonCore -> Register_Timer		3362754	0					
ANR	3363297	Identifier	daemonCore		3362754	0					
ANR	3363298	Identifier	Register_Timer		3362754	1					
ANR	3363299	ArgumentList	1		3362754	1					
ANR	3363300	Argument	1		3362754	0					
ANR	3363301	PrimaryExpression	1		3362754	0					
ANR	3363302	Argument	m_adPubInterval		3362754	1					
ANR	3363303	Identifier	m_adPubInterval		3362754	0					
ANR	3363304	Argument	( TimerHandlercpp ) & Hadoop :: publishClassAd		3362754	2					
ANR	3363305	CastExpression	( TimerHandlercpp ) & Hadoop :: publishClassAd		3362754	0					
ANR	3363306	CastTarget	TimerHandlercpp		3362754	0					
ANR	3363307	UnaryOperationExpression	& Hadoop :: publishClassAd		3362754	1					
ANR	3363308	UnaryOperator	&		3362754	0					
ANR	3363309	Identifier	Hadoop :: publishClassAd		3362754	1					
ANR	3363310	Argument	"""publishClassAd"""		3362754	3					
ANR	3363311	PrimaryExpression	"""publishClassAd"""		3362754	0					
ANR	3363312	Argument	this		3362754	4					
ANR	3363313	Identifier	this		3362754	0					
ANR	3363314	ReturnType	void		3362754	1					
ANR	3363315	Identifier	Hadoop :: initialize		3362754	2					
ANR	3363316	ParameterList			3362754	3					
ANR	3363317	CFGEntryNode	ENTRY		3362754		True				
ANR	3363318	CFGExitNode	EXIT		3362754		True				
ANR	3363319	Symbol	hh		3362754						
ANR	3363320	Symbol	ATTR_NAME		3362754						
ANR	3363321	Symbol	buff . Value		3362754						
ANR	3363322	Symbol	m_coreSiteFile		3362754						
ANR	3363323	Symbol	dir		3362754						
ANR	3363324	Symbol	dir . Next		3362754						
ANR	3363325	Symbol	nclass		3362754						
ANR	3363326	Symbol	m_state		3362754						
ANR	3363327	Symbol	m_classpath		3362754						
ANR	3363328	Symbol	param		3362754						
ANR	3363329	Symbol	tmp		3362754						
ANR	3363330	Symbol	daemonCore		3362754						
ANR	3363331	Symbol	getServiceNameByType		3362754						
ANR	3363332	Symbol	m_dfsAdminClass		3362754						
ANR	3363333	Symbol	logdir		3362754						
ANR	3363334	Symbol	dclass		3362754						
ANR	3363335	Symbol	NULL		3362754						
ANR	3363336	Symbol	dfsAdminclass		3362754						
ANR	3363337	Symbol	m_hdfsAd		3362754						
ANR	3363338	Symbol	this		3362754						
ANR	3363339	Symbol	STATE_REINIT		3362754						
ANR	3363340	Symbol	m_nameNodeClass		3362754						
ANR	3363341	Symbol	m_dataNodeClass		3362754						
ANR	3363342	Symbol	daemonCore -> Register_Reaper		3362754						
ANR	3363343	Symbol	rd		3362754						
ANR	3363344	Symbol	m_hadoopHome		3362754						
ANR	3363345	Symbol	m_adPubInterval		3362754						
ANR	3363346	Symbol	m_reaper		3362754						
ANR	3363347	Symbol	m_nodeType		3362754						
ANR	3363348	Symbol	* daemonCore		3362754						
ANR	3363349	Symbol	& m_hdfsAd		3362754						
ANR	3363350	Symbol	& Hadoop :: reaperResponse		3362754						
ANR	3363351	Symbol	m_hadoopHome . Value		3362754						
ANR	3363352	Symbol	sitef		3362754						
ANR	3363353	Symbol	param_integer		3362754						
ANR	3363354	Symbol	FALSE		3362754						
ANR	3363355	Symbol	MyString		3362754						
ANR	3363356	Symbol	m_hdfsSiteFile		3362754						
ANR	3363357	Symbol	& Hadoop :: publishClassAd		3362754						
ANR	3363358	Symbol	STATE_RUNNING		3362754						
ANR	3363359	Symbol	buff		3362754						
ANR	3363360	Function	Hadoop :: writeCoreSiteFile	163:0:5525:6800							
ANR	3363361	FunctionDef	Hadoop :: writeCoreSiteFile ()		3363360	0					
ANR	3363362	CompoundStatement		163:33:5558:6800	3363360	0					
ANR	3363363	IdentifierDeclStatement	MyString confFile ;	164:8:5568:5585	3363360	0	True				
ANR	3363364	IdentifierDecl	confFile		3363360	0					
ANR	3363365	IdentifierDeclType	MyString		3363360	0					
ANR	3363366	Identifier	confFile		3363360	1					
ANR	3363367	IdentifierDeclStatement	"char * logdir = param ( ""LOG"" ) ;"	165:8:5595:5622	3363360	1	True				
ANR	3363368	IdentifierDecl	"* logdir = param ( ""LOG"" )"		3363360	0					
ANR	3363369	IdentifierDeclType	char *		3363360	0					
ANR	3363370	Identifier	logdir		3363360	1					
ANR	3363371	AssignmentExpression	"* logdir = param ( ""LOG"" )"		3363360	2		=			
ANR	3363372	Identifier	logdir		3363360	0					
ANR	3363373	CallExpression	"param ( ""LOG"" )"		3363360	1					
ANR	3363374	Callee	param		3363360	0					
ANR	3363375	Identifier	param		3363360	0					
ANR	3363376	ArgumentList	"""LOG"""		3363360	1					
ANR	3363377	Argument	"""LOG"""		3363360	0					
ANR	3363378	PrimaryExpression	"""LOG"""		3363360	0					
ANR	3363379	IfStatement	if ( logdir == NULL )		3363360	2					
ANR	3363380	Condition	logdir == NULL	166:12:5636:5649	3363360	0	True				
ANR	3363381	EqualityExpression	logdir == NULL		3363360	0		==			
ANR	3363382	Identifier	logdir		3363360	0					
ANR	3363383	Identifier	NULL		3363360	1					
ANR	3363384	ExpressionStatement	"EXCEPT ( ""Misconfigured HDFS!: log directory is not specified\\n"" )"	167:12:5665:5728	3363360	1	True				
ANR	3363385	CallExpression	"EXCEPT ( ""Misconfigured HDFS!: log directory is not specified\\n"" )"		3363360	0					
ANR	3363386	Callee	EXCEPT		3363360	0					
ANR	3363387	Identifier	EXCEPT		3363360	0					
ANR	3363388	ArgumentList	"""Misconfigured HDFS!: log directory is not specified\\n"""		3363360	1					
ANR	3363389	Argument	"""Misconfigured HDFS!: log directory is not specified\\n"""		3363360	0					
ANR	3363390	PrimaryExpression	"""Misconfigured HDFS!: log directory is not specified\\n"""		3363360	0					
ANR	3363391	ExpressionStatement	"confFile . sprintf ( ""%s/%s"" , logdir , m_coreSiteFile . Value ( ) )"	169:8:5739:5796	3363360	3	True				
ANR	3363392	CallExpression	"confFile . sprintf ( ""%s/%s"" , logdir , m_coreSiteFile . Value ( ) )"		3363360	0					
ANR	3363393	Callee	confFile . sprintf		3363360	0					
ANR	3363394	MemberAccess	confFile . sprintf		3363360	0					
ANR	3363395	Identifier	confFile		3363360	0					
ANR	3363396	Identifier	sprintf		3363360	1					
ANR	3363397	ArgumentList	"""%s/%s"""		3363360	1					
ANR	3363398	Argument	"""%s/%s"""		3363360	0					
ANR	3363399	PrimaryExpression	"""%s/%s"""		3363360	0					
ANR	3363400	Argument	logdir		3363360	1					
ANR	3363401	Identifier	logdir		3363360	0					
ANR	3363402	Argument	m_coreSiteFile . Value ( )		3363360	2					
ANR	3363403	CallExpression	m_coreSiteFile . Value ( )		3363360	0					
ANR	3363404	Callee	m_coreSiteFile . Value		3363360	0					
ANR	3363405	MemberAccess	m_coreSiteFile . Value		3363360	0					
ANR	3363406	Identifier	m_coreSiteFile		3363360	0					
ANR	3363407	Identifier	Value		3363360	1					
ANR	3363408	ArgumentList			3363360	1					
ANR	3363409	ExpressionStatement	free ( logdir )	170:8:5806:5818	3363360	4	True				
ANR	3363410	CallExpression	free ( logdir )		3363360	0					
ANR	3363411	Callee	free		3363360	0					
ANR	3363412	Identifier	free		3363360	0					
ANR	3363413	ArgumentList	logdir		3363360	1					
ANR	3363414	Argument	logdir		3363360	0					
ANR	3363415	Identifier	logdir		3363360	0					
ANR	3363416	IdentifierDeclStatement	"int fd = safe_create_replace_if_exists ( confFile . Value ( ) , O_CREAT | O_WRONLY ) ;"	172:8:5829:5903	3363360	5	True				
ANR	3363417	IdentifierDecl	"fd = safe_create_replace_if_exists ( confFile . Value ( ) , O_CREAT | O_WRONLY )"		3363360	0					
ANR	3363418	IdentifierDeclType	int		3363360	0					
ANR	3363419	Identifier	fd		3363360	1					
ANR	3363420	AssignmentExpression	"fd = safe_create_replace_if_exists ( confFile . Value ( ) , O_CREAT | O_WRONLY )"		3363360	2		=			
ANR	3363421	Identifier	fd		3363360	0					
ANR	3363422	CallExpression	"safe_create_replace_if_exists ( confFile . Value ( ) , O_CREAT | O_WRONLY )"		3363360	1					
ANR	3363423	Callee	safe_create_replace_if_exists		3363360	0					
ANR	3363424	Identifier	safe_create_replace_if_exists		3363360	0					
ANR	3363425	ArgumentList	confFile . Value ( )		3363360	1					
ANR	3363426	Argument	confFile . Value ( )		3363360	0					
ANR	3363427	CallExpression	confFile . Value ( )		3363360	0					
ANR	3363428	Callee	confFile . Value		3363360	0					
ANR	3363429	MemberAccess	confFile . Value		3363360	0					
ANR	3363430	Identifier	confFile		3363360	0					
ANR	3363431	Identifier	Value		3363360	1					
ANR	3363432	ArgumentList			3363360	1					
ANR	3363433	Argument	O_CREAT | O_WRONLY		3363360	1					
ANR	3363434	InclusiveOrExpression	O_CREAT | O_WRONLY		3363360	0		|			
ANR	3363435	Identifier	O_CREAT		3363360	0					
ANR	3363436	Identifier	O_WRONLY		3363360	1					
ANR	3363437	IfStatement	if ( fd == - 1 )		3363360	6					
ANR	3363438	Condition	fd == - 1	173:12:5917:5924	3363360	0	True				
ANR	3363439	EqualityExpression	fd == - 1		3363360	0		==			
ANR	3363440	Identifier	fd		3363360	0					
ANR	3363441	UnaryOperationExpression	- 1		3363360	1					
ANR	3363442	UnaryOperator	-		3363360	0					
ANR	3363443	PrimaryExpression	1		3363360	1					
ANR	3363444	CompoundStatement		11:22:368:368	3363360	1					
ANR	3363445	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to create hadoop configuration file\\n"" )"	174:16:5945:6010	3363360	0	True				
ANR	3363446	CallExpression	"dprintf ( D_ALWAYS , ""Failed to create hadoop configuration file\\n"" )"		3363360	0					
ANR	3363447	Callee	dprintf		3363360	0					
ANR	3363448	Identifier	dprintf		3363360	0					
ANR	3363449	ArgumentList	D_ALWAYS		3363360	1					
ANR	3363450	Argument	D_ALWAYS		3363360	0					
ANR	3363451	Identifier	D_ALWAYS		3363360	0					
ANR	3363452	Argument	"""Failed to create hadoop configuration file\\n"""		3363360	1					
ANR	3363453	PrimaryExpression	"""Failed to create hadoop configuration file\\n"""		3363360	0					
ANR	3363454	ExpressionStatement	exit ( 1 )	175:16:6028:6035	3363360	1	True				
ANR	3363455	CallExpression	exit ( 1 )		3363360	0					
ANR	3363456	Callee	exit		3363360	0					
ANR	3363457	Identifier	exit		3363360	0					
ANR	3363458	ArgumentList	1		3363360	1					
ANR	3363459	Argument	1		3363360	0					
ANR	3363460	PrimaryExpression	1		3363360	0					
ANR	3363461	IdentifierDeclStatement	"StringList xml ( """" , ""\\n"" ) ;"	178:8:6056:6080	3363360	7	True				
ANR	3363462	IdentifierDecl	"xml ( """" , ""\\n"" )"		3363360	0					
ANR	3363463	IdentifierDeclType	StringList		3363360	0					
ANR	3363464	Identifier	xml		3363360	1					
ANR	3363465	Expression	""""" , ""\\n"""		3363360	2					
ANR	3363466	PrimaryExpression	""""""		3363360	0					
ANR	3363467	PrimaryExpression	"""\\n"""		3363360	1					
ANR	3363468	ExpressionStatement		178:33:6081:6081	3363360	8	True				
ANR	3363469	ExpressionStatement	"xml . append ( ""<?xml version=\\""1.0\\""?>"" )"	179:8:6091:6128	3363360	9	True				
ANR	3363470	CallExpression	"xml . append ( ""<?xml version=\\""1.0\\""?>"" )"		3363360	0					
ANR	3363471	Callee	xml . append		3363360	0					
ANR	3363472	MemberAccess	xml . append		3363360	0					
ANR	3363473	Identifier	xml		3363360	0					
ANR	3363474	Identifier	append		3363360	1					
ANR	3363475	ArgumentList	"""<?xml version=\\""1.0\\""?>"""		3363360	1					
ANR	3363476	Argument	"""<?xml version=\\""1.0\\""?>"""		3363360	0					
ANR	3363477	PrimaryExpression	"""<?xml version=\\""1.0\\""?>"""		3363360	0					
ANR	3363478	ExpressionStatement	"xml . append ( ""<?xml-stylesheet type=\\""text/xsl\\"" href=\\""configuration.xsl\\""?>"" )"	180:8:6138:6215	3363360	10	True				
ANR	3363479	CallExpression	"xml . append ( ""<?xml-stylesheet type=\\""text/xsl\\"" href=\\""configuration.xsl\\""?>"" )"		3363360	0					
ANR	3363480	Callee	xml . append		3363360	0					
ANR	3363481	MemberAccess	xml . append		3363360	0					
ANR	3363482	Identifier	xml		3363360	0					
ANR	3363483	Identifier	append		3363360	1					
ANR	3363484	ArgumentList	"""<?xml-stylesheet type=\\""text/xsl\\"" href=\\""configuration.xsl\\""?>"""		3363360	1					
ANR	3363485	Argument	"""<?xml-stylesheet type=\\""text/xsl\\"" href=\\""configuration.xsl\\""?>"""		3363360	0					
ANR	3363486	PrimaryExpression	"""<?xml-stylesheet type=\\""text/xsl\\"" href=\\""configuration.xsl\\""?>"""		3363360	0					
ANR	3363487	ExpressionStatement	"xml . append ( ""<!-- DON'T MODIFY this file manually, as it is overwritten by CONDOR.-->"" )"	181:8:6225:6311	3363360	11	True				
ANR	3363488	CallExpression	"xml . append ( ""<!-- DON'T MODIFY this file manually, as it is overwritten by CONDOR.-->"" )"		3363360	0					
ANR	3363489	Callee	xml . append		3363360	0					
ANR	3363490	MemberAccess	xml . append		3363360	0					
ANR	3363491	Identifier	xml		3363360	0					
ANR	3363492	Identifier	append		3363360	1					
ANR	3363493	ArgumentList	"""<!-- DON'T MODIFY this file manually, as it is overwritten by CONDOR.-->"""		3363360	1					
ANR	3363494	Argument	"""<!-- DON'T MODIFY this file manually, as it is overwritten by CONDOR.-->"""		3363360	0					
ANR	3363495	PrimaryExpression	"""<!-- DON'T MODIFY this file manually, as it is overwritten by CONDOR.-->"""		3363360	0					
ANR	3363496	ExpressionStatement	"xml . append ( ""<configuration>"" )"	182:8:6321:6350	3363360	12	True				
ANR	3363497	CallExpression	"xml . append ( ""<configuration>"" )"		3363360	0					
ANR	3363498	Callee	xml . append		3363360	0					
ANR	3363499	MemberAccess	xml . append		3363360	0					
ANR	3363500	Identifier	xml		3363360	0					
ANR	3363501	Identifier	append		3363360	1					
ANR	3363502	ArgumentList	"""<configuration>"""		3363360	1					
ANR	3363503	Argument	"""<configuration>"""		3363360	0					
ANR	3363504	PrimaryExpression	"""<configuration>"""		3363360	0					
ANR	3363505	IdentifierDeclStatement	"char * namenode = param ( ""HDFS_NAMENODE"" ) ;"	184:8:6361:6400	3363360	13	True				
ANR	3363506	IdentifierDecl	"* namenode = param ( ""HDFS_NAMENODE"" )"		3363360	0					
ANR	3363507	IdentifierDeclType	char *		3363360	0					
ANR	3363508	Identifier	namenode		3363360	1					
ANR	3363509	AssignmentExpression	"* namenode = param ( ""HDFS_NAMENODE"" )"		3363360	2		=			
ANR	3363510	Identifier	namenode		3363360	0					
ANR	3363511	CallExpression	"param ( ""HDFS_NAMENODE"" )"		3363360	1					
ANR	3363512	Callee	param		3363360	0					
ANR	3363513	Identifier	param		3363360	0					
ANR	3363514	ArgumentList	"""HDFS_NAMENODE"""		3363360	1					
ANR	3363515	Argument	"""HDFS_NAMENODE"""		3363360	0					
ANR	3363516	PrimaryExpression	"""HDFS_NAMENODE"""		3363360	0					
ANR	3363517	IfStatement	if ( namenode != NULL )		3363360	14					
ANR	3363518	Condition	namenode != NULL	185:12:6414:6429	3363360	0	True				
ANR	3363519	EqualityExpression	namenode != NULL		3363360	0		!=			
ANR	3363520	Identifier	namenode		3363360	0					
ANR	3363521	Identifier	NULL		3363360	1					
ANR	3363522	CompoundStatement		23:30:873:873	3363360	1					
ANR	3363523	ExpressionStatement	"writeXMLParam ( ""fs.default.name"" , namenode , & xml )"	186:16:6450:6498	3363360	0	True				
ANR	3363524	CallExpression	"writeXMLParam ( ""fs.default.name"" , namenode , & xml )"		3363360	0					
ANR	3363525	Callee	writeXMLParam		3363360	0					
ANR	3363526	Identifier	writeXMLParam		3363360	0					
ANR	3363527	ArgumentList	"""fs.default.name"""		3363360	1					
ANR	3363528	Argument	"""fs.default.name"""		3363360	0					
ANR	3363529	PrimaryExpression	"""fs.default.name"""		3363360	0					
ANR	3363530	Argument	namenode		3363360	1					
ANR	3363531	Identifier	namenode		3363360	0					
ANR	3363532	Argument	& xml		3363360	2					
ANR	3363533	UnaryOperationExpression	& xml		3363360	0					
ANR	3363534	UnaryOperator	&		3363360	0					
ANR	3363535	Identifier	xml		3363360	1					
ANR	3363536	ExpressionStatement	free ( namenode )	187:16:6516:6530	3363360	1	True				
ANR	3363537	CallExpression	free ( namenode )		3363360	0					
ANR	3363538	Callee	free		3363360	0					
ANR	3363539	Identifier	free		3363360	0					
ANR	3363540	ArgumentList	namenode		3363360	1					
ANR	3363541	Argument	namenode		3363360	0					
ANR	3363542	Identifier	namenode		3363360	0					
ANR	3363543	ExpressionStatement	"xml . append ( ""</configuration>"" )"	190:8:6552:6582	3363360	15	True				
ANR	3363544	CallExpression	"xml . append ( ""</configuration>"" )"		3363360	0					
ANR	3363545	Callee	xml . append		3363360	0					
ANR	3363546	MemberAccess	xml . append		3363360	0					
ANR	3363547	Identifier	xml		3363360	0					
ANR	3363548	Identifier	append		3363360	1					
ANR	3363549	ArgumentList	"""</configuration>"""		3363360	1					
ANR	3363550	Argument	"""</configuration>"""		3363360	0					
ANR	3363551	PrimaryExpression	"""</configuration>"""		3363360	0					
ANR	3363552	IdentifierDeclStatement	char * str = xml . print_to_delimed_string ( NULL ) ;	192:8:6593:6638	3363360	16	True				
ANR	3363553	IdentifierDecl	* str = xml . print_to_delimed_string ( NULL )		3363360	0					
ANR	3363554	IdentifierDeclType	char *		3363360	0					
ANR	3363555	Identifier	str		3363360	1					
ANR	3363556	AssignmentExpression	* str = xml . print_to_delimed_string ( NULL )		3363360	2		=			
ANR	3363557	Identifier	str		3363360	0					
ANR	3363558	CallExpression	xml . print_to_delimed_string ( NULL )		3363360	1					
ANR	3363559	Callee	xml . print_to_delimed_string		3363360	0					
ANR	3363560	MemberAccess	xml . print_to_delimed_string		3363360	0					
ANR	3363561	Identifier	xml		3363360	0					
ANR	3363562	Identifier	print_to_delimed_string		3363360	1					
ANR	3363563	ArgumentList	NULL		3363360	1					
ANR	3363564	Argument	NULL		3363360	0					
ANR	3363565	Identifier	NULL		3363360	0					
ANR	3363566	ExpressionStatement	ASSERT ( str != NULL )	193:8:6648:6667	3363360	17	True				
ANR	3363567	CallExpression	ASSERT ( str != NULL )		3363360	0					
ANR	3363568	Callee	ASSERT		3363360	0					
ANR	3363569	Identifier	ASSERT		3363360	0					
ANR	3363570	ArgumentList	str != NULL		3363360	1					
ANR	3363571	Argument	str != NULL		3363360	0					
ANR	3363572	EqualityExpression	str != NULL		3363360	0		!=			
ANR	3363573	Identifier	str		3363360	0					
ANR	3363574	Identifier	NULL		3363360	1					
ANR	3363575	IdentifierDeclStatement	"unsigned len = full_write ( fd , str , strlen ( str ) ) ;"	194:8:6677:6724	3363360	18	True				
ANR	3363576	IdentifierDecl	"len = full_write ( fd , str , strlen ( str ) )"		3363360	0					
ANR	3363577	IdentifierDeclType	unsigned		3363360	0					
ANR	3363578	Identifier	len		3363360	1					
ANR	3363579	AssignmentExpression	"len = full_write ( fd , str , strlen ( str ) )"		3363360	2		=			
ANR	3363580	Identifier	len		3363360	0					
ANR	3363581	CallExpression	"full_write ( fd , str , strlen ( str ) )"		3363360	1					
ANR	3363582	Callee	full_write		3363360	0					
ANR	3363583	Identifier	full_write		3363360	0					
ANR	3363584	ArgumentList	fd		3363360	1					
ANR	3363585	Argument	fd		3363360	0					
ANR	3363586	Identifier	fd		3363360	0					
ANR	3363587	Argument	str		3363360	1					
ANR	3363588	Identifier	str		3363360	0					
ANR	3363589	Argument	strlen ( str )		3363360	2					
ANR	3363590	CallExpression	strlen ( str )		3363360	0					
ANR	3363591	Callee	strlen		3363360	0					
ANR	3363592	Identifier	strlen		3363360	0					
ANR	3363593	ArgumentList	str		3363360	1					
ANR	3363594	Argument	str		3363360	0					
ANR	3363595	Identifier	str		3363360	0					
ANR	3363596	ExpressionStatement	ASSERT ( len == strlen ( str ) )	195:8:6734:6760	3363360	19	True				
ANR	3363597	CallExpression	ASSERT ( len == strlen ( str ) )		3363360	0					
ANR	3363598	Callee	ASSERT		3363360	0					
ANR	3363599	Identifier	ASSERT		3363360	0					
ANR	3363600	ArgumentList	len == strlen ( str )		3363360	1					
ANR	3363601	Argument	len == strlen ( str )		3363360	0					
ANR	3363602	EqualityExpression	len == strlen ( str )		3363360	0		==			
ANR	3363603	Identifier	len		3363360	0					
ANR	3363604	CallExpression	strlen ( str )		3363360	1					
ANR	3363605	Callee	strlen		3363360	0					
ANR	3363606	Identifier	strlen		3363360	0					
ANR	3363607	ArgumentList	str		3363360	1					
ANR	3363608	Argument	str		3363360	0					
ANR	3363609	Identifier	str		3363360	0					
ANR	3363610	ExpressionStatement	close ( fd )	196:8:6770:6779	3363360	20	True				
ANR	3363611	CallExpression	close ( fd )		3363360	0					
ANR	3363612	Callee	close		3363360	0					
ANR	3363613	Identifier	close		3363360	0					
ANR	3363614	ArgumentList	fd		3363360	1					
ANR	3363615	Argument	fd		3363360	0					
ANR	3363616	Identifier	fd		3363360	0					
ANR	3363617	ExpressionStatement	free ( str )	197:8:6789:6798	3363360	21	True				
ANR	3363618	CallExpression	free ( str )		3363360	0					
ANR	3363619	Callee	free		3363360	0					
ANR	3363620	Identifier	free		3363360	0					
ANR	3363621	ArgumentList	str		3363360	1					
ANR	3363622	Argument	str		3363360	0					
ANR	3363623	Identifier	str		3363360	0					
ANR	3363624	ReturnType	void		3363360	1					
ANR	3363625	Identifier	Hadoop :: writeCoreSiteFile		3363360	2					
ANR	3363626	ParameterList			3363360	3					
ANR	3363627	CFGEntryNode	ENTRY		3363360		True				
ANR	3363628	CFGExitNode	EXIT		3363360		True				
ANR	3363629	Symbol	NULL		3363360						
ANR	3363630	Symbol	m_coreSiteFile		3363360						
ANR	3363631	Symbol	O_CREAT		3363360						
ANR	3363632	Symbol	full_write		3363360						
ANR	3363633	Symbol	D_ALWAYS		3363360						
ANR	3363634	Symbol	confFile . Value		3363360						
ANR	3363635	Symbol	namenode		3363360						
ANR	3363636	Symbol	str		3363360						
ANR	3363637	Symbol	strlen		3363360						
ANR	3363638	Symbol	len		3363360						
ANR	3363639	Symbol	param		3363360						
ANR	3363640	Symbol	xml		3363360						
ANR	3363641	Symbol	m_coreSiteFile . Value		3363360						
ANR	3363642	Symbol	safe_create_replace_if_exists		3363360						
ANR	3363643	Symbol	& xml		3363360						
ANR	3363644	Symbol	confFile		3363360						
ANR	3363645	Symbol	O_WRONLY		3363360						
ANR	3363646	Symbol	logdir		3363360						
ANR	3363647	Symbol	fd		3363360						
ANR	3363648	Symbol	xml . print_to_delimed_string		3363360						
ANR	3363649	Function	Hadoop :: writeConfigFile	200:0:6803:12672							
ANR	3363650	FunctionDef	Hadoop :: writeConfigFile ()		3363649	0					
ANR	3363651	CompoundStatement		200:31:6834:12672	3363649	0					
ANR	3363652	IdentifierDeclStatement	MyString confFile ;	201:8:6844:6861	3363649	0	True				
ANR	3363653	IdentifierDecl	confFile		3363649	0					
ANR	3363654	IdentifierDeclType	MyString		3363649	0					
ANR	3363655	Identifier	confFile		3363649	1					
ANR	3363656	IdentifierDeclStatement	"char * logdir = param ( ""LOG"" ) ;"	202:8:6871:6898	3363649	1	True				
ANR	3363657	IdentifierDecl	"* logdir = param ( ""LOG"" )"		3363649	0					
ANR	3363658	IdentifierDeclType	char *		3363649	0					
ANR	3363659	Identifier	logdir		3363649	1					
ANR	3363660	AssignmentExpression	"* logdir = param ( ""LOG"" )"		3363649	2		=			
ANR	3363661	Identifier	logdir		3363649	0					
ANR	3363662	CallExpression	"param ( ""LOG"" )"		3363649	1					
ANR	3363663	Callee	param		3363649	0					
ANR	3363664	Identifier	param		3363649	0					
ANR	3363665	ArgumentList	"""LOG"""		3363649	1					
ANR	3363666	Argument	"""LOG"""		3363649	0					
ANR	3363667	PrimaryExpression	"""LOG"""		3363649	0					
ANR	3363668	IfStatement	if ( logdir == NULL )		3363649	2					
ANR	3363669	Condition	logdir == NULL	203:12:6912:6925	3363649	0	True				
ANR	3363670	EqualityExpression	logdir == NULL		3363649	0		==			
ANR	3363671	Identifier	logdir		3363649	0					
ANR	3363672	Identifier	NULL		3363649	1					
ANR	3363673	ExpressionStatement	"EXCEPT ( ""Misconfigured HDFS!: log directory is not specified\\n"" )"	204:12:6941:7004	3363649	1	True				
ANR	3363674	CallExpression	"EXCEPT ( ""Misconfigured HDFS!: log directory is not specified\\n"" )"		3363649	0					
ANR	3363675	Callee	EXCEPT		3363649	0					
ANR	3363676	Identifier	EXCEPT		3363649	0					
ANR	3363677	ArgumentList	"""Misconfigured HDFS!: log directory is not specified\\n"""		3363649	1					
ANR	3363678	Argument	"""Misconfigured HDFS!: log directory is not specified\\n"""		3363649	0					
ANR	3363679	PrimaryExpression	"""Misconfigured HDFS!: log directory is not specified\\n"""		3363649	0					
ANR	3363680	ExpressionStatement	"confFile . sprintf ( ""%s/%s"" , logdir , m_hdfsSiteFile . Value ( ) )"	206:8:7015:7072	3363649	3	True				
ANR	3363681	CallExpression	"confFile . sprintf ( ""%s/%s"" , logdir , m_hdfsSiteFile . Value ( ) )"		3363649	0					
ANR	3363682	Callee	confFile . sprintf		3363649	0					
ANR	3363683	MemberAccess	confFile . sprintf		3363649	0					
ANR	3363684	Identifier	confFile		3363649	0					
ANR	3363685	Identifier	sprintf		3363649	1					
ANR	3363686	ArgumentList	"""%s/%s"""		3363649	1					
ANR	3363687	Argument	"""%s/%s"""		3363649	0					
ANR	3363688	PrimaryExpression	"""%s/%s"""		3363649	0					
ANR	3363689	Argument	logdir		3363649	1					
ANR	3363690	Identifier	logdir		3363649	0					
ANR	3363691	Argument	m_hdfsSiteFile . Value ( )		3363649	2					
ANR	3363692	CallExpression	m_hdfsSiteFile . Value ( )		3363649	0					
ANR	3363693	Callee	m_hdfsSiteFile . Value		3363649	0					
ANR	3363694	MemberAccess	m_hdfsSiteFile . Value		3363649	0					
ANR	3363695	Identifier	m_hdfsSiteFile		3363649	0					
ANR	3363696	Identifier	Value		3363649	1					
ANR	3363697	ArgumentList			3363649	1					
ANR	3363698	ExpressionStatement	free ( logdir )	207:8:7082:7094	3363649	4	True				
ANR	3363699	CallExpression	free ( logdir )		3363649	0					
ANR	3363700	Callee	free		3363649	0					
ANR	3363701	Identifier	free		3363649	0					
ANR	3363702	ArgumentList	logdir		3363649	1					
ANR	3363703	Argument	logdir		3363649	0					
ANR	3363704	Identifier	logdir		3363649	0					
ANR	3363705	ExpressionStatement	"dprintf ( D_ALWAYS , ""Config file location %s\\n"" , confFile . Value ( ) )"	208:8:7104:7168	3363649	5	True				
ANR	3363706	CallExpression	"dprintf ( D_ALWAYS , ""Config file location %s\\n"" , confFile . Value ( ) )"		3363649	0					
ANR	3363707	Callee	dprintf		3363649	0					
ANR	3363708	Identifier	dprintf		3363649	0					
ANR	3363709	ArgumentList	D_ALWAYS		3363649	1					
ANR	3363710	Argument	D_ALWAYS		3363649	0					
ANR	3363711	Identifier	D_ALWAYS		3363649	0					
ANR	3363712	Argument	"""Config file location %s\\n"""		3363649	1					
ANR	3363713	PrimaryExpression	"""Config file location %s\\n"""		3363649	0					
ANR	3363714	Argument	confFile . Value ( )		3363649	2					
ANR	3363715	CallExpression	confFile . Value ( )		3363649	0					
ANR	3363716	Callee	confFile . Value		3363649	0					
ANR	3363717	MemberAccess	confFile . Value		3363649	0					
ANR	3363718	Identifier	confFile		3363649	0					
ANR	3363719	Identifier	Value		3363649	1					
ANR	3363720	ArgumentList			3363649	1					
ANR	3363721	IdentifierDeclStatement	"int fd = safe_create_replace_if_exists ( confFile . Value ( ) , O_CREAT | O_WRONLY ) ;"	210:8:7179:7253	3363649	6	True				
ANR	3363722	IdentifierDecl	"fd = safe_create_replace_if_exists ( confFile . Value ( ) , O_CREAT | O_WRONLY )"		3363649	0					
ANR	3363723	IdentifierDeclType	int		3363649	0					
ANR	3363724	Identifier	fd		3363649	1					
ANR	3363725	AssignmentExpression	"fd = safe_create_replace_if_exists ( confFile . Value ( ) , O_CREAT | O_WRONLY )"		3363649	2		=			
ANR	3363726	Identifier	fd		3363649	0					
ANR	3363727	CallExpression	"safe_create_replace_if_exists ( confFile . Value ( ) , O_CREAT | O_WRONLY )"		3363649	1					
ANR	3363728	Callee	safe_create_replace_if_exists		3363649	0					
ANR	3363729	Identifier	safe_create_replace_if_exists		3363649	0					
ANR	3363730	ArgumentList	confFile . Value ( )		3363649	1					
ANR	3363731	Argument	confFile . Value ( )		3363649	0					
ANR	3363732	CallExpression	confFile . Value ( )		3363649	0					
ANR	3363733	Callee	confFile . Value		3363649	0					
ANR	3363734	MemberAccess	confFile . Value		3363649	0					
ANR	3363735	Identifier	confFile		3363649	0					
ANR	3363736	Identifier	Value		3363649	1					
ANR	3363737	ArgumentList			3363649	1					
ANR	3363738	Argument	O_CREAT | O_WRONLY		3363649	1					
ANR	3363739	InclusiveOrExpression	O_CREAT | O_WRONLY		3363649	0		|			
ANR	3363740	Identifier	O_CREAT		3363649	0					
ANR	3363741	Identifier	O_WRONLY		3363649	1					
ANR	3363742	IfStatement	if ( fd == - 1 )		3363649	7					
ANR	3363743	Condition	fd == - 1	211:12:7267:7274	3363649	0	True				
ANR	3363744	EqualityExpression	fd == - 1		3363649	0		==			
ANR	3363745	Identifier	fd		3363649	0					
ANR	3363746	UnaryOperationExpression	- 1		3363649	1					
ANR	3363747	UnaryOperator	-		3363649	0					
ANR	3363748	PrimaryExpression	1		3363649	1					
ANR	3363749	CompoundStatement		12:22:442:442	3363649	1					
ANR	3363750	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to create hadoop configuration file\\n"" )"	212:16:7295:7360	3363649	0	True				
ANR	3363751	CallExpression	"dprintf ( D_ALWAYS , ""Failed to create hadoop configuration file\\n"" )"		3363649	0					
ANR	3363752	Callee	dprintf		3363649	0					
ANR	3363753	Identifier	dprintf		3363649	0					
ANR	3363754	ArgumentList	D_ALWAYS		3363649	1					
ANR	3363755	Argument	D_ALWAYS		3363649	0					
ANR	3363756	Identifier	D_ALWAYS		3363649	0					
ANR	3363757	Argument	"""Failed to create hadoop configuration file\\n"""		3363649	1					
ANR	3363758	PrimaryExpression	"""Failed to create hadoop configuration file\\n"""		3363649	0					
ANR	3363759	ExpressionStatement	exit ( 1 )	213:16:7378:7385	3363649	1	True				
ANR	3363760	CallExpression	exit ( 1 )		3363649	0					
ANR	3363761	Callee	exit		3363649	0					
ANR	3363762	Identifier	exit		3363649	0					
ANR	3363763	ArgumentList	1		3363649	1					
ANR	3363764	Argument	1		3363649	0					
ANR	3363765	PrimaryExpression	1		3363649	0					
ANR	3363766	IdentifierDeclStatement	"StringList xml ( """" , ""\\n"" ) ;"	216:8:7406:7430	3363649	8	True				
ANR	3363767	IdentifierDecl	"xml ( """" , ""\\n"" )"		3363649	0					
ANR	3363768	IdentifierDeclType	StringList		3363649	0					
ANR	3363769	Identifier	xml		3363649	1					
ANR	3363770	Expression	""""" , ""\\n"""		3363649	2					
ANR	3363771	PrimaryExpression	""""""		3363649	0					
ANR	3363772	PrimaryExpression	"""\\n"""		3363649	1					
ANR	3363773	ExpressionStatement		216:33:7431:7431	3363649	9	True				
ANR	3363774	ExpressionStatement	"xml . append ( ""<?xml version=\\""1.0\\""?>"" )"	217:8:7441:7478	3363649	10	True				
ANR	3363775	CallExpression	"xml . append ( ""<?xml version=\\""1.0\\""?>"" )"		3363649	0					
ANR	3363776	Callee	xml . append		3363649	0					
ANR	3363777	MemberAccess	xml . append		3363649	0					
ANR	3363778	Identifier	xml		3363649	0					
ANR	3363779	Identifier	append		3363649	1					
ANR	3363780	ArgumentList	"""<?xml version=\\""1.0\\""?>"""		3363649	1					
ANR	3363781	Argument	"""<?xml version=\\""1.0\\""?>"""		3363649	0					
ANR	3363782	PrimaryExpression	"""<?xml version=\\""1.0\\""?>"""		3363649	0					
ANR	3363783	ExpressionStatement	"xml . append ( ""<?xml-stylesheet type=\\""text/xsl\\"" href=\\""configuration.xsl\\""?>"" )"	218:8:7488:7565	3363649	11	True				
ANR	3363784	CallExpression	"xml . append ( ""<?xml-stylesheet type=\\""text/xsl\\"" href=\\""configuration.xsl\\""?>"" )"		3363649	0					
ANR	3363785	Callee	xml . append		3363649	0					
ANR	3363786	MemberAccess	xml . append		3363649	0					
ANR	3363787	Identifier	xml		3363649	0					
ANR	3363788	Identifier	append		3363649	1					
ANR	3363789	ArgumentList	"""<?xml-stylesheet type=\\""text/xsl\\"" href=\\""configuration.xsl\\""?>"""		3363649	1					
ANR	3363790	Argument	"""<?xml-stylesheet type=\\""text/xsl\\"" href=\\""configuration.xsl\\""?>"""		3363649	0					
ANR	3363791	PrimaryExpression	"""<?xml-stylesheet type=\\""text/xsl\\"" href=\\""configuration.xsl\\""?>"""		3363649	0					
ANR	3363792	ExpressionStatement	"xml . append ( ""<!-- DON'T MODIFY this file manually, as it is overwritten by CONDOR.-->"" )"	219:8:7575:7661	3363649	12	True				
ANR	3363793	CallExpression	"xml . append ( ""<!-- DON'T MODIFY this file manually, as it is overwritten by CONDOR.-->"" )"		3363649	0					
ANR	3363794	Callee	xml . append		3363649	0					
ANR	3363795	MemberAccess	xml . append		3363649	0					
ANR	3363796	Identifier	xml		3363649	0					
ANR	3363797	Identifier	append		3363649	1					
ANR	3363798	ArgumentList	"""<!-- DON'T MODIFY this file manually, as it is overwritten by CONDOR.-->"""		3363649	1					
ANR	3363799	Argument	"""<!-- DON'T MODIFY this file manually, as it is overwritten by CONDOR.-->"""		3363649	0					
ANR	3363800	PrimaryExpression	"""<!-- DON'T MODIFY this file manually, as it is overwritten by CONDOR.-->"""		3363649	0					
ANR	3363801	ExpressionStatement	"xml . append ( ""<configuration>"" )"	220:8:7671:7700	3363649	13	True				
ANR	3363802	CallExpression	"xml . append ( ""<configuration>"" )"		3363649	0					
ANR	3363803	Callee	xml . append		3363649	0					
ANR	3363804	MemberAccess	xml . append		3363649	0					
ANR	3363805	Identifier	xml		3363649	0					
ANR	3363806	Identifier	append		3363649	1					
ANR	3363807	ArgumentList	"""<configuration>"""		3363649	1					
ANR	3363808	Argument	"""<configuration>"""		3363649	0					
ANR	3363809	PrimaryExpression	"""<configuration>"""		3363649	0					
ANR	3363810	IdentifierDeclStatement	"char * namenode = param ( ""HDFS_NAMENODE"" ) ;"	222:8:7711:7750	3363649	14	True				
ANR	3363811	IdentifierDecl	"* namenode = param ( ""HDFS_NAMENODE"" )"		3363649	0					
ANR	3363812	IdentifierDeclType	char *		3363649	0					
ANR	3363813	Identifier	namenode		3363649	1					
ANR	3363814	AssignmentExpression	"* namenode = param ( ""HDFS_NAMENODE"" )"		3363649	2		=			
ANR	3363815	Identifier	namenode		3363649	0					
ANR	3363816	CallExpression	"param ( ""HDFS_NAMENODE"" )"		3363649	1					
ANR	3363817	Callee	param		3363649	0					
ANR	3363818	Identifier	param		3363649	0					
ANR	3363819	ArgumentList	"""HDFS_NAMENODE"""		3363649	1					
ANR	3363820	Argument	"""HDFS_NAMENODE"""		3363649	0					
ANR	3363821	PrimaryExpression	"""HDFS_NAMENODE"""		3363649	0					
ANR	3363822	IfStatement	if ( namenode != NULL )		3363649	15					
ANR	3363823	Condition	namenode != NULL	223:12:7764:7779	3363649	0	True				
ANR	3363824	EqualityExpression	namenode != NULL		3363649	0		!=			
ANR	3363825	Identifier	namenode		3363649	0					
ANR	3363826	Identifier	NULL		3363649	1					
ANR	3363827	CompoundStatement		24:30:947:947	3363649	1					
ANR	3363828	ExpressionStatement	"writeXMLParam ( ""fs.default.name"" , namenode , & xml )"	224:16:7800:7848	3363649	0	True				
ANR	3363829	CallExpression	"writeXMLParam ( ""fs.default.name"" , namenode , & xml )"		3363649	0					
ANR	3363830	Callee	writeXMLParam		3363649	0					
ANR	3363831	Identifier	writeXMLParam		3363649	0					
ANR	3363832	ArgumentList	"""fs.default.name"""		3363649	1					
ANR	3363833	Argument	"""fs.default.name"""		3363649	0					
ANR	3363834	PrimaryExpression	"""fs.default.name"""		3363649	0					
ANR	3363835	Argument	namenode		3363649	1					
ANR	3363836	Identifier	namenode		3363649	0					
ANR	3363837	Argument	& xml		3363649	2					
ANR	3363838	UnaryOperationExpression	& xml		3363649	0					
ANR	3363839	UnaryOperator	&		3363649	0					
ANR	3363840	Identifier	xml		3363649	1					
ANR	3363841	ExpressionStatement	free ( namenode )	225:16:7866:7880	3363649	1	True				
ANR	3363842	CallExpression	free ( namenode )		3363649	0					
ANR	3363843	Callee	free		3363649	0					
ANR	3363844	Identifier	free		3363649	0					
ANR	3363845	ArgumentList	namenode		3363649	1					
ANR	3363846	Argument	namenode		3363649	0					
ANR	3363847	Identifier	namenode		3363649	0					
ANR	3363848	ExpressionStatement	"m_nameNodeDir = ""/tmp/hadoop_name"""	228:8:7902:7939	3363649	16	True				
ANR	3363849	AssignmentExpression	"m_nameNodeDir = ""/tmp/hadoop_name"""		3363649	0		=			
ANR	3363850	Identifier	m_nameNodeDir		3363649	0					
ANR	3363851	PrimaryExpression	"""/tmp/hadoop_name"""		3363649	1					
ANR	3363852	IdentifierDeclStatement	"char * ndir = param ( ""HDFS_NAMENODE_DIR"" ) ;"	229:8:7949:7988	3363649	17	True				
ANR	3363853	IdentifierDecl	"* ndir = param ( ""HDFS_NAMENODE_DIR"" )"		3363649	0					
ANR	3363854	IdentifierDeclType	char *		3363649	0					
ANR	3363855	Identifier	ndir		3363649	1					
ANR	3363856	AssignmentExpression	"* ndir = param ( ""HDFS_NAMENODE_DIR"" )"		3363649	2		=			
ANR	3363857	Identifier	ndir		3363649	0					
ANR	3363858	CallExpression	"param ( ""HDFS_NAMENODE_DIR"" )"		3363649	1					
ANR	3363859	Callee	param		3363649	0					
ANR	3363860	Identifier	param		3363649	0					
ANR	3363861	ArgumentList	"""HDFS_NAMENODE_DIR"""		3363649	1					
ANR	3363862	Argument	"""HDFS_NAMENODE_DIR"""		3363649	0					
ANR	3363863	PrimaryExpression	"""HDFS_NAMENODE_DIR"""		3363649	0					
ANR	3363864	IfStatement	if ( ndir != NULL )		3363649	18					
ANR	3363865	Condition	ndir != NULL	230:12:8002:8013	3363649	0	True				
ANR	3363866	EqualityExpression	ndir != NULL		3363649	0		!=			
ANR	3363867	Identifier	ndir		3363649	0					
ANR	3363868	Identifier	NULL		3363649	1					
ANR	3363869	CompoundStatement		31:26:1181:1181	3363649	1					
ANR	3363870	ExpressionStatement	"writeXMLParam ( ""dfs.name.dir"" , ndir , & xml )"	231:16:8034:8075	3363649	0	True				
ANR	3363871	CallExpression	"writeXMLParam ( ""dfs.name.dir"" , ndir , & xml )"		3363649	0					
ANR	3363872	Callee	writeXMLParam		3363649	0					
ANR	3363873	Identifier	writeXMLParam		3363649	0					
ANR	3363874	ArgumentList	"""dfs.name.dir"""		3363649	1					
ANR	3363875	Argument	"""dfs.name.dir"""		3363649	0					
ANR	3363876	PrimaryExpression	"""dfs.name.dir"""		3363649	0					
ANR	3363877	Argument	ndir		3363649	1					
ANR	3363878	Identifier	ndir		3363649	0					
ANR	3363879	Argument	& xml		3363649	2					
ANR	3363880	UnaryOperationExpression	& xml		3363649	0					
ANR	3363881	UnaryOperator	&		3363649	0					
ANR	3363882	Identifier	xml		3363649	1					
ANR	3363883	ExpressionStatement	m_nameNodeDir = ndir	232:16:8093:8113	3363649	1	True				
ANR	3363884	AssignmentExpression	m_nameNodeDir = ndir		3363649	0		=			
ANR	3363885	Identifier	m_nameNodeDir		3363649	0					
ANR	3363886	Identifier	ndir		3363649	1					
ANR	3363887	ExpressionStatement	free ( ndir )	233:16:8131:8141	3363649	2	True				
ANR	3363888	CallExpression	free ( ndir )		3363649	0					
ANR	3363889	Callee	free		3363649	0					
ANR	3363890	Identifier	free		3363649	0					
ANR	3363891	ArgumentList	ndir		3363649	1					
ANR	3363892	Argument	ndir		3363649	0					
ANR	3363893	Identifier	ndir		3363649	0					
ANR	3363894	IdentifierDeclStatement	"char * ddir = param ( ""HDFS_DATANODE_DIR"" ) ;"	236:8:8162:8201	3363649	19	True				
ANR	3363895	IdentifierDecl	"* ddir = param ( ""HDFS_DATANODE_DIR"" )"		3363649	0					
ANR	3363896	IdentifierDeclType	char *		3363649	0					
ANR	3363897	Identifier	ddir		3363649	1					
ANR	3363898	AssignmentExpression	"* ddir = param ( ""HDFS_DATANODE_DIR"" )"		3363649	2		=			
ANR	3363899	Identifier	ddir		3363649	0					
ANR	3363900	CallExpression	"param ( ""HDFS_DATANODE_DIR"" )"		3363649	1					
ANR	3363901	Callee	param		3363649	0					
ANR	3363902	Identifier	param		3363649	0					
ANR	3363903	ArgumentList	"""HDFS_DATANODE_DIR"""		3363649	1					
ANR	3363904	Argument	"""HDFS_DATANODE_DIR"""		3363649	0					
ANR	3363905	PrimaryExpression	"""HDFS_DATANODE_DIR"""		3363649	0					
ANR	3363906	IfStatement	if ( ddir != NULL )		3363649	20					
ANR	3363907	Condition	ddir != NULL	237:12:8215:8226	3363649	0	True				
ANR	3363908	EqualityExpression	ddir != NULL		3363649	0		!=			
ANR	3363909	Identifier	ddir		3363649	0					
ANR	3363910	Identifier	NULL		3363649	1					
ANR	3363911	CompoundStatement		38:26:1394:1394	3363649	1					
ANR	3363912	ExpressionStatement	"writeXMLParam ( ""dfs.data.dir"" , ddir , & xml )"	238:16:8247:8288	3363649	0	True				
ANR	3363913	CallExpression	"writeXMLParam ( ""dfs.data.dir"" , ddir , & xml )"		3363649	0					
ANR	3363914	Callee	writeXMLParam		3363649	0					
ANR	3363915	Identifier	writeXMLParam		3363649	0					
ANR	3363916	ArgumentList	"""dfs.data.dir"""		3363649	1					
ANR	3363917	Argument	"""dfs.data.dir"""		3363649	0					
ANR	3363918	PrimaryExpression	"""dfs.data.dir"""		3363649	0					
ANR	3363919	Argument	ddir		3363649	1					
ANR	3363920	Identifier	ddir		3363649	0					
ANR	3363921	Argument	& xml		3363649	2					
ANR	3363922	UnaryOperationExpression	& xml		3363649	0					
ANR	3363923	UnaryOperator	&		3363649	0					
ANR	3363924	Identifier	xml		3363649	1					
ANR	3363925	ExpressionStatement	free ( ddir )	239:16:8306:8316	3363649	1	True				
ANR	3363926	CallExpression	free ( ddir )		3363649	0					
ANR	3363927	Callee	free		3363649	0					
ANR	3363928	Identifier	free		3363649	0					
ANR	3363929	ArgumentList	ddir		3363649	1					
ANR	3363930	Argument	ddir		3363649	0					
ANR	3363931	Identifier	ddir		3363649	0					
ANR	3363932	IdentifierDeclStatement	"char * dadd = param ( ""HDFS_DATANODE_ADDRESS"" ) ;"	242:8:8337:8380	3363649	21	True				
ANR	3363933	IdentifierDecl	"* dadd = param ( ""HDFS_DATANODE_ADDRESS"" )"		3363649	0					
ANR	3363934	IdentifierDeclType	char *		3363649	0					
ANR	3363935	Identifier	dadd		3363649	1					
ANR	3363936	AssignmentExpression	"* dadd = param ( ""HDFS_DATANODE_ADDRESS"" )"		3363649	2		=			
ANR	3363937	Identifier	dadd		3363649	0					
ANR	3363938	CallExpression	"param ( ""HDFS_DATANODE_ADDRESS"" )"		3363649	1					
ANR	3363939	Callee	param		3363649	0					
ANR	3363940	Identifier	param		3363649	0					
ANR	3363941	ArgumentList	"""HDFS_DATANODE_ADDRESS"""		3363649	1					
ANR	3363942	Argument	"""HDFS_DATANODE_ADDRESS"""		3363649	0					
ANR	3363943	PrimaryExpression	"""HDFS_DATANODE_ADDRESS"""		3363649	0					
ANR	3363944	IfStatement	if ( dadd != NULL )		3363649	22					
ANR	3363945	Condition	dadd != NULL	243:12:8394:8405	3363649	0	True				
ANR	3363946	EqualityExpression	dadd != NULL		3363649	0		!=			
ANR	3363947	Identifier	dadd		3363649	0					
ANR	3363948	Identifier	NULL		3363649	1					
ANR	3363949	CompoundStatement		44:26:1573:1573	3363649	1					
ANR	3363950	ExpressionStatement	"writeXMLParam ( ""dfs.datanode.address"" , dadd , & xml )"	244:16:8426:8475	3363649	0	True				
ANR	3363951	CallExpression	"writeXMLParam ( ""dfs.datanode.address"" , dadd , & xml )"		3363649	0					
ANR	3363952	Callee	writeXMLParam		3363649	0					
ANR	3363953	Identifier	writeXMLParam		3363649	0					
ANR	3363954	ArgumentList	"""dfs.datanode.address"""		3363649	1					
ANR	3363955	Argument	"""dfs.datanode.address"""		3363649	0					
ANR	3363956	PrimaryExpression	"""dfs.datanode.address"""		3363649	0					
ANR	3363957	Argument	dadd		3363649	1					
ANR	3363958	Identifier	dadd		3363649	0					
ANR	3363959	Argument	& xml		3363649	2					
ANR	3363960	UnaryOperationExpression	& xml		3363649	0					
ANR	3363961	UnaryOperator	&		3363649	0					
ANR	3363962	Identifier	xml		3363649	1					
ANR	3363963	ExpressionStatement	free ( dadd )	245:16:8493:8503	3363649	1	True				
ANR	3363964	CallExpression	free ( dadd )		3363649	0					
ANR	3363965	Callee	free		3363649	0					
ANR	3363966	Identifier	free		3363649	0					
ANR	3363967	ArgumentList	dadd		3363649	1					
ANR	3363968	Argument	dadd		3363649	0					
ANR	3363969	Identifier	dadd		3363649	0					
ANR	3363970	IdentifierDeclStatement	"char * daddw = param ( ""HDFS_DATANODE_WEB"" ) ;"	248:8:8524:8564	3363649	23	True				
ANR	3363971	IdentifierDecl	"* daddw = param ( ""HDFS_DATANODE_WEB"" )"		3363649	0					
ANR	3363972	IdentifierDeclType	char *		3363649	0					
ANR	3363973	Identifier	daddw		3363649	1					
ANR	3363974	AssignmentExpression	"* daddw = param ( ""HDFS_DATANODE_WEB"" )"		3363649	2		=			
ANR	3363975	Identifier	daddw		3363649	0					
ANR	3363976	CallExpression	"param ( ""HDFS_DATANODE_WEB"" )"		3363649	1					
ANR	3363977	Callee	param		3363649	0					
ANR	3363978	Identifier	param		3363649	0					
ANR	3363979	ArgumentList	"""HDFS_DATANODE_WEB"""		3363649	1					
ANR	3363980	Argument	"""HDFS_DATANODE_WEB"""		3363649	0					
ANR	3363981	PrimaryExpression	"""HDFS_DATANODE_WEB"""		3363649	0					
ANR	3363982	IfStatement	if ( daddw != NULL )		3363649	24					
ANR	3363983	Condition	daddw != NULL	249:12:8578:8590	3363649	0	True				
ANR	3363984	EqualityExpression	daddw != NULL		3363649	0		!=			
ANR	3363985	Identifier	daddw		3363649	0					
ANR	3363986	Identifier	NULL		3363649	1					
ANR	3363987	CompoundStatement		50:27:1758:1758	3363649	1					
ANR	3363988	ExpressionStatement	"writeXMLParam ( ""dfs.datanode.http.address"" , daddw , & xml )"	250:16:8611:8666	3363649	0	True				
ANR	3363989	CallExpression	"writeXMLParam ( ""dfs.datanode.http.address"" , daddw , & xml )"		3363649	0					
ANR	3363990	Callee	writeXMLParam		3363649	0					
ANR	3363991	Identifier	writeXMLParam		3363649	0					
ANR	3363992	ArgumentList	"""dfs.datanode.http.address"""		3363649	1					
ANR	3363993	Argument	"""dfs.datanode.http.address"""		3363649	0					
ANR	3363994	PrimaryExpression	"""dfs.datanode.http.address"""		3363649	0					
ANR	3363995	Argument	daddw		3363649	1					
ANR	3363996	Identifier	daddw		3363649	0					
ANR	3363997	Argument	& xml		3363649	2					
ANR	3363998	UnaryOperationExpression	& xml		3363649	0					
ANR	3363999	UnaryOperator	&		3363649	0					
ANR	3364000	Identifier	xml		3363649	1					
ANR	3364001	ExpressionStatement	free ( daddw )	251:16:8684:8695	3363649	1	True				
ANR	3364002	CallExpression	free ( daddw )		3363649	0					
ANR	3364003	Callee	free		3363649	0					
ANR	3364004	Identifier	free		3363649	0					
ANR	3364005	ArgumentList	daddw		3363649	1					
ANR	3364006	Argument	daddw		3363649	0					
ANR	3364007	Identifier	daddw		3363649	0					
ANR	3364008	IdentifierDeclStatement	"char * nnaddw = param ( ""HDFS_NAMENODE_WEB"" ) ;"	254:8:8716:8757	3363649	25	True				
ANR	3364009	IdentifierDecl	"* nnaddw = param ( ""HDFS_NAMENODE_WEB"" )"		3363649	0					
ANR	3364010	IdentifierDeclType	char *		3363649	0					
ANR	3364011	Identifier	nnaddw		3363649	1					
ANR	3364012	AssignmentExpression	"* nnaddw = param ( ""HDFS_NAMENODE_WEB"" )"		3363649	2		=			
ANR	3364013	Identifier	nnaddw		3363649	0					
ANR	3364014	CallExpression	"param ( ""HDFS_NAMENODE_WEB"" )"		3363649	1					
ANR	3364015	Callee	param		3363649	0					
ANR	3364016	Identifier	param		3363649	0					
ANR	3364017	ArgumentList	"""HDFS_NAMENODE_WEB"""		3363649	1					
ANR	3364018	Argument	"""HDFS_NAMENODE_WEB"""		3363649	0					
ANR	3364019	PrimaryExpression	"""HDFS_NAMENODE_WEB"""		3363649	0					
ANR	3364020	IfStatement	if ( nnaddw != NULL )		3363649	26					
ANR	3364021	Condition	nnaddw != NULL	255:12:8771:8784	3363649	0	True				
ANR	3364022	EqualityExpression	nnaddw != NULL		3363649	0		!=			
ANR	3364023	Identifier	nnaddw		3363649	0					
ANR	3364024	Identifier	NULL		3363649	1					
ANR	3364025	CompoundStatement		56:28:1952:1952	3363649	1					
ANR	3364026	ExpressionStatement	"writeXMLParam ( ""dfs.http.address"" , nnaddw , & xml )"	256:16:8805:8852	3363649	0	True				
ANR	3364027	CallExpression	"writeXMLParam ( ""dfs.http.address"" , nnaddw , & xml )"		3363649	0					
ANR	3364028	Callee	writeXMLParam		3363649	0					
ANR	3364029	Identifier	writeXMLParam		3363649	0					
ANR	3364030	ArgumentList	"""dfs.http.address"""		3363649	1					
ANR	3364031	Argument	"""dfs.http.address"""		3363649	0					
ANR	3364032	PrimaryExpression	"""dfs.http.address"""		3363649	0					
ANR	3364033	Argument	nnaddw		3363649	1					
ANR	3364034	Identifier	nnaddw		3363649	0					
ANR	3364035	Argument	& xml		3363649	2					
ANR	3364036	UnaryOperationExpression	& xml		3363649	0					
ANR	3364037	UnaryOperator	&		3363649	0					
ANR	3364038	Identifier	xml		3363649	1					
ANR	3364039	ExpressionStatement	free ( nnaddw )	257:16:8870:8882	3363649	1	True				
ANR	3364040	CallExpression	free ( nnaddw )		3363649	0					
ANR	3364041	Callee	free		3363649	0					
ANR	3364042	Identifier	free		3363649	0					
ANR	3364043	ArgumentList	nnaddw		3363649	1					
ANR	3364044	Argument	nnaddw		3363649	0					
ANR	3364045	Identifier	nnaddw		3363649	0					
ANR	3364046	IdentifierDeclStatement	"char * bnadd = param ( ""HDFS_BACKUPNODE"" ) ;"	260:8:8903:8941	3363649	27	True				
ANR	3364047	IdentifierDecl	"* bnadd = param ( ""HDFS_BACKUPNODE"" )"		3363649	0					
ANR	3364048	IdentifierDeclType	char *		3363649	0					
ANR	3364049	Identifier	bnadd		3363649	1					
ANR	3364050	AssignmentExpression	"* bnadd = param ( ""HDFS_BACKUPNODE"" )"		3363649	2		=			
ANR	3364051	Identifier	bnadd		3363649	0					
ANR	3364052	CallExpression	"param ( ""HDFS_BACKUPNODE"" )"		3363649	1					
ANR	3364053	Callee	param		3363649	0					
ANR	3364054	Identifier	param		3363649	0					
ANR	3364055	ArgumentList	"""HDFS_BACKUPNODE"""		3363649	1					
ANR	3364056	Argument	"""HDFS_BACKUPNODE"""		3363649	0					
ANR	3364057	PrimaryExpression	"""HDFS_BACKUPNODE"""		3363649	0					
ANR	3364058	IfStatement	if ( bnadd != NULL )		3363649	28					
ANR	3364059	Condition	bnadd != NULL	261:5:8948:8960	3363649	0	True				
ANR	3364060	EqualityExpression	bnadd != NULL		3363649	0		!=			
ANR	3364061	Identifier	bnadd		3363649	0					
ANR	3364062	Identifier	NULL		3363649	1					
ANR	3364063	CompoundStatement		62:20:2128:2128	3363649	1					
ANR	3364064	ExpressionStatement	"writeXMLParam ( ""dfs.namenode.backup.address"" , bnadd , & xml )"	262:9:8974:9031	3363649	0	True				
ANR	3364065	CallExpression	"writeXMLParam ( ""dfs.namenode.backup.address"" , bnadd , & xml )"		3363649	0					
ANR	3364066	Callee	writeXMLParam		3363649	0					
ANR	3364067	Identifier	writeXMLParam		3363649	0					
ANR	3364068	ArgumentList	"""dfs.namenode.backup.address"""		3363649	1					
ANR	3364069	Argument	"""dfs.namenode.backup.address"""		3363649	0					
ANR	3364070	PrimaryExpression	"""dfs.namenode.backup.address"""		3363649	0					
ANR	3364071	Argument	bnadd		3363649	1					
ANR	3364072	Identifier	bnadd		3363649	0					
ANR	3364073	Argument	& xml		3363649	2					
ANR	3364074	UnaryOperationExpression	& xml		3363649	0					
ANR	3364075	UnaryOperator	&		3363649	0					
ANR	3364076	Identifier	xml		3363649	1					
ANR	3364077	ExpressionStatement	free ( bnadd )	263:2:9035:9046	3363649	1	True				
ANR	3364078	CallExpression	free ( bnadd )		3363649	0					
ANR	3364079	Callee	free		3363649	0					
ANR	3364080	Identifier	free		3363649	0					
ANR	3364081	ArgumentList	bnadd		3363649	1					
ANR	3364082	Argument	bnadd		3363649	0					
ANR	3364083	Identifier	bnadd		3363649	0					
ANR	3364084	IdentifierDeclStatement	"char * bnaddw = param ( ""HDFS_BACKUPNODE_WEB"" ) ;"	266:1:9053:9096	3363649	29	True				
ANR	3364085	IdentifierDecl	"* bnaddw = param ( ""HDFS_BACKUPNODE_WEB"" )"		3363649	0					
ANR	3364086	IdentifierDeclType	char *		3363649	0					
ANR	3364087	Identifier	bnaddw		3363649	1					
ANR	3364088	AssignmentExpression	"* bnaddw = param ( ""HDFS_BACKUPNODE_WEB"" )"		3363649	2		=			
ANR	3364089	Identifier	bnaddw		3363649	0					
ANR	3364090	CallExpression	"param ( ""HDFS_BACKUPNODE_WEB"" )"		3363649	1					
ANR	3364091	Callee	param		3363649	0					
ANR	3364092	Identifier	param		3363649	0					
ANR	3364093	ArgumentList	"""HDFS_BACKUPNODE_WEB"""		3363649	1					
ANR	3364094	Argument	"""HDFS_BACKUPNODE_WEB"""		3363649	0					
ANR	3364095	PrimaryExpression	"""HDFS_BACKUPNODE_WEB"""		3363649	0					
ANR	3364096	IfStatement	if ( bnaddw != NULL )		3363649	30					
ANR	3364097	Condition	bnaddw != NULL	267:5:9103:9116	3363649	0	True				
ANR	3364098	EqualityExpression	bnaddw != NULL		3363649	0		!=			
ANR	3364099	Identifier	bnaddw		3363649	0					
ANR	3364100	Identifier	NULL		3363649	1					
ANR	3364101	CompoundStatement		68:21:2284:2284	3363649	1					
ANR	3364102	ExpressionStatement	"writeXMLParam ( ""dfs.namenode.backup.http-address"" , bnaddw , & xml )"	268:9:9130:9193	3363649	0	True				
ANR	3364103	CallExpression	"writeXMLParam ( ""dfs.namenode.backup.http-address"" , bnaddw , & xml )"		3363649	0					
ANR	3364104	Callee	writeXMLParam		3363649	0					
ANR	3364105	Identifier	writeXMLParam		3363649	0					
ANR	3364106	ArgumentList	"""dfs.namenode.backup.http-address"""		3363649	1					
ANR	3364107	Argument	"""dfs.namenode.backup.http-address"""		3363649	0					
ANR	3364108	PrimaryExpression	"""dfs.namenode.backup.http-address"""		3363649	0					
ANR	3364109	Argument	bnaddw		3363649	1					
ANR	3364110	Identifier	bnaddw		3363649	0					
ANR	3364111	Argument	& xml		3363649	2					
ANR	3364112	UnaryOperationExpression	& xml		3363649	0					
ANR	3364113	UnaryOperator	&		3363649	0					
ANR	3364114	Identifier	xml		3363649	1					
ANR	3364115	ExpressionStatement	free ( bnaddw )	269:2:9197:9209	3363649	1	True				
ANR	3364116	CallExpression	free ( bnaddw )		3363649	0					
ANR	3364117	Callee	free		3363649	0					
ANR	3364118	Identifier	free		3363649	0					
ANR	3364119	ArgumentList	bnaddw		3363649	1					
ANR	3364120	Argument	bnaddw		3363649	0					
ANR	3364121	Identifier	bnaddw		3363649	0					
ANR	3364122	IdentifierDeclStatement	"char * rep = param ( ""HDFS_REPLICATION"" ) ;"	272:8:9223:9260	3363649	31	True				
ANR	3364123	IdentifierDecl	"* rep = param ( ""HDFS_REPLICATION"" )"		3363649	0					
ANR	3364124	IdentifierDeclType	char *		3363649	0					
ANR	3364125	Identifier	rep		3363649	1					
ANR	3364126	AssignmentExpression	"* rep = param ( ""HDFS_REPLICATION"" )"		3363649	2		=			
ANR	3364127	Identifier	rep		3363649	0					
ANR	3364128	CallExpression	"param ( ""HDFS_REPLICATION"" )"		3363649	1					
ANR	3364129	Callee	param		3363649	0					
ANR	3364130	Identifier	param		3363649	0					
ANR	3364131	ArgumentList	"""HDFS_REPLICATION"""		3363649	1					
ANR	3364132	Argument	"""HDFS_REPLICATION"""		3363649	0					
ANR	3364133	PrimaryExpression	"""HDFS_REPLICATION"""		3363649	0					
ANR	3364134	IfStatement	if ( rep != NULL )		3363649	32					
ANR	3364135	Condition	rep != NULL	273:12:9274:9284	3363649	0	True				
ANR	3364136	EqualityExpression	rep != NULL		3363649	0		!=			
ANR	3364137	Identifier	rep		3363649	0					
ANR	3364138	Identifier	NULL		3363649	1					
ANR	3364139	CompoundStatement		74:25:2452:2452	3363649	1					
ANR	3364140	ExpressionStatement	"writeXMLParam ( ""dfs.replication"" , rep , & xml )"	274:16:9305:9348	3363649	0	True				
ANR	3364141	CallExpression	"writeXMLParam ( ""dfs.replication"" , rep , & xml )"		3363649	0					
ANR	3364142	Callee	writeXMLParam		3363649	0					
ANR	3364143	Identifier	writeXMLParam		3363649	0					
ANR	3364144	ArgumentList	"""dfs.replication"""		3363649	1					
ANR	3364145	Argument	"""dfs.replication"""		3363649	0					
ANR	3364146	PrimaryExpression	"""dfs.replication"""		3363649	0					
ANR	3364147	Argument	rep		3363649	1					
ANR	3364148	Identifier	rep		3363649	0					
ANR	3364149	Argument	& xml		3363649	2					
ANR	3364150	UnaryOperationExpression	& xml		3363649	0					
ANR	3364151	UnaryOperator	&		3363649	0					
ANR	3364152	Identifier	xml		3363649	1					
ANR	3364153	ExpressionStatement	free ( rep )	275:16:9366:9375	3363649	1	True				
ANR	3364154	CallExpression	free ( rep )		3363649	0					
ANR	3364155	Callee	free		3363649	0					
ANR	3364156	Identifier	free		3363649	0					
ANR	3364157	ArgumentList	rep		3363649	1					
ANR	3364158	Argument	rep		3363649	0					
ANR	3364159	Identifier	rep		3363649	0					
ANR	3364160	IdentifierDeclStatement	"char * hdfs_allow = param ( ""HDFS_ALLOW"" ) ;"	279:8:9440:9478	3363649	33	True				
ANR	3364161	IdentifierDecl	"* hdfs_allow = param ( ""HDFS_ALLOW"" )"		3363649	0					
ANR	3364162	IdentifierDeclType	char *		3363649	0					
ANR	3364163	Identifier	hdfs_allow		3363649	1					
ANR	3364164	AssignmentExpression	"* hdfs_allow = param ( ""HDFS_ALLOW"" )"		3363649	2		=			
ANR	3364165	Identifier	hdfs_allow		3363649	0					
ANR	3364166	CallExpression	"param ( ""HDFS_ALLOW"" )"		3363649	1					
ANR	3364167	Callee	param		3363649	0					
ANR	3364168	Identifier	param		3363649	0					
ANR	3364169	ArgumentList	"""HDFS_ALLOW"""		3363649	1					
ANR	3364170	Argument	"""HDFS_ALLOW"""		3363649	0					
ANR	3364171	PrimaryExpression	"""HDFS_ALLOW"""		3363649	0					
ANR	3364172	IfStatement	if ( hdfs_allow != NULL )		3363649	34					
ANR	3364173	Condition	hdfs_allow != NULL	280:12:9492:9509	3363649	0	True				
ANR	3364174	EqualityExpression	hdfs_allow != NULL		3363649	0		!=			
ANR	3364175	Identifier	hdfs_allow		3363649	0					
ANR	3364176	Identifier	NULL		3363649	1					
ANR	3364177	CompoundStatement		81:32:2677:2677	3363649	1					
ANR	3364178	ExpressionStatement	"writeXMLParam ( ""dfs.net.allow"" , hdfs_allow , & xml )"	281:16:9530:9578	3363649	0	True				
ANR	3364179	CallExpression	"writeXMLParam ( ""dfs.net.allow"" , hdfs_allow , & xml )"		3363649	0					
ANR	3364180	Callee	writeXMLParam		3363649	0					
ANR	3364181	Identifier	writeXMLParam		3363649	0					
ANR	3364182	ArgumentList	"""dfs.net.allow"""		3363649	1					
ANR	3364183	Argument	"""dfs.net.allow"""		3363649	0					
ANR	3364184	PrimaryExpression	"""dfs.net.allow"""		3363649	0					
ANR	3364185	Argument	hdfs_allow		3363649	1					
ANR	3364186	Identifier	hdfs_allow		3363649	0					
ANR	3364187	Argument	& xml		3363649	2					
ANR	3364188	UnaryOperationExpression	& xml		3363649	0					
ANR	3364189	UnaryOperator	&		3363649	0					
ANR	3364190	Identifier	xml		3363649	1					
ANR	3364191	ExpressionStatement	free ( hdfs_allow )	282:16:9596:9612	3363649	1	True				
ANR	3364192	CallExpression	free ( hdfs_allow )		3363649	0					
ANR	3364193	Callee	free		3363649	0					
ANR	3364194	Identifier	free		3363649	0					
ANR	3364195	ArgumentList	hdfs_allow		3363649	1					
ANR	3364196	Argument	hdfs_allow		3363649	0					
ANR	3364197	Identifier	hdfs_allow		3363649	0					
ANR	3364198	ElseStatement	else		3363649	0					
ANR	3364199	CompoundStatement		107:16:3688:3743	3363649	0					
ANR	3364200	IdentifierDeclStatement	StringList allow_list ;	284:16:9647:9668	3363649	0	True				
ANR	3364201	IdentifierDecl	allow_list		3363649	0					
ANR	3364202	IdentifierDeclType	StringList		3363649	0					
ANR	3364203	Identifier	allow_list		3363649	1					
ANR	3364204	ExpressionStatement	"hdfs_allow = param ( ""ALLOW_READ"" )"	285:16:9686:9718	3363649	1	True				
ANR	3364205	AssignmentExpression	"hdfs_allow = param ( ""ALLOW_READ"" )"		3363649	0		=			
ANR	3364206	Identifier	hdfs_allow		3363649	0					
ANR	3364207	CallExpression	"param ( ""ALLOW_READ"" )"		3363649	1					
ANR	3364208	Callee	param		3363649	0					
ANR	3364209	Identifier	param		3363649	0					
ANR	3364210	ArgumentList	"""ALLOW_READ"""		3363649	1					
ANR	3364211	Argument	"""ALLOW_READ"""		3363649	0					
ANR	3364212	PrimaryExpression	"""ALLOW_READ"""		3363649	0					
ANR	3364213	IfStatement	if ( hdfs_allow != NULL )		3363649	2					
ANR	3364214	Condition	hdfs_allow != NULL	286:20:9740:9757	3363649	0	True				
ANR	3364215	EqualityExpression	hdfs_allow != NULL		3363649	0		!=			
ANR	3364216	Identifier	hdfs_allow		3363649	0					
ANR	3364217	Identifier	NULL		3363649	1					
ANR	3364218	CompoundStatement		87:40:2925:2925	3363649	1					
ANR	3364219	ExpressionStatement	allow_list . append ( hdfs_allow )	287:24:9786:9815	3363649	0	True				
ANR	3364220	CallExpression	allow_list . append ( hdfs_allow )		3363649	0					
ANR	3364221	Callee	allow_list . append		3363649	0					
ANR	3364222	MemberAccess	allow_list . append		3363649	0					
ANR	3364223	Identifier	allow_list		3363649	0					
ANR	3364224	Identifier	append		3363649	1					
ANR	3364225	ArgumentList	hdfs_allow		3363649	1					
ANR	3364226	Argument	hdfs_allow		3363649	0					
ANR	3364227	Identifier	hdfs_allow		3363649	0					
ANR	3364228	ExpressionStatement	free ( hdfs_allow )	288:24:9841:9857	3363649	1	True				
ANR	3364229	CallExpression	free ( hdfs_allow )		3363649	0					
ANR	3364230	Callee	free		3363649	0					
ANR	3364231	Identifier	free		3363649	0					
ANR	3364232	ArgumentList	hdfs_allow		3363649	1					
ANR	3364233	Argument	hdfs_allow		3363649	0					
ANR	3364234	Identifier	hdfs_allow		3363649	0					
ANR	3364235	ExpressionStatement	"hdfs_allow = param ( ""HOSTALLOW_READ"" )"	290:16:9893:9929	3363649	3	True				
ANR	3364236	AssignmentExpression	"hdfs_allow = param ( ""HOSTALLOW_READ"" )"		3363649	0		=			
ANR	3364237	Identifier	hdfs_allow		3363649	0					
ANR	3364238	CallExpression	"param ( ""HOSTALLOW_READ"" )"		3363649	1					
ANR	3364239	Callee	param		3363649	0					
ANR	3364240	Identifier	param		3363649	0					
ANR	3364241	ArgumentList	"""HOSTALLOW_READ"""		3363649	1					
ANR	3364242	Argument	"""HOSTALLOW_READ"""		3363649	0					
ANR	3364243	PrimaryExpression	"""HOSTALLOW_READ"""		3363649	0					
ANR	3364244	IfStatement	if ( hdfs_allow != NULL )		3363649	4					
ANR	3364245	Condition	hdfs_allow != NULL	291:20:9951:9968	3363649	0	True				
ANR	3364246	EqualityExpression	hdfs_allow != NULL		3363649	0		!=			
ANR	3364247	Identifier	hdfs_allow		3363649	0					
ANR	3364248	Identifier	NULL		3363649	1					
ANR	3364249	CompoundStatement		92:40:3136:3136	3363649	1					
ANR	3364250	ExpressionStatement	allow_list . append ( hdfs_allow )	292:24:9997:10026	3363649	0	True				
ANR	3364251	CallExpression	allow_list . append ( hdfs_allow )		3363649	0					
ANR	3364252	Callee	allow_list . append		3363649	0					
ANR	3364253	MemberAccess	allow_list . append		3363649	0					
ANR	3364254	Identifier	allow_list		3363649	0					
ANR	3364255	Identifier	append		3363649	1					
ANR	3364256	ArgumentList	hdfs_allow		3363649	1					
ANR	3364257	Argument	hdfs_allow		3363649	0					
ANR	3364258	Identifier	hdfs_allow		3363649	0					
ANR	3364259	ExpressionStatement	free ( hdfs_allow )	293:24:10052:10068	3363649	1	True				
ANR	3364260	CallExpression	free ( hdfs_allow )		3363649	0					
ANR	3364261	Callee	free		3363649	0					
ANR	3364262	Identifier	free		3363649	0					
ANR	3364263	ArgumentList	hdfs_allow		3363649	1					
ANR	3364264	Argument	hdfs_allow		3363649	0					
ANR	3364265	Identifier	hdfs_allow		3363649	0					
ANR	3364266	ExpressionStatement	"hdfs_allow = param ( ""ALLOW_WRITE"" )"	296:16:10105:10138	3363649	5	True				
ANR	3364267	AssignmentExpression	"hdfs_allow = param ( ""ALLOW_WRITE"" )"		3363649	0		=			
ANR	3364268	Identifier	hdfs_allow		3363649	0					
ANR	3364269	CallExpression	"param ( ""ALLOW_WRITE"" )"		3363649	1					
ANR	3364270	Callee	param		3363649	0					
ANR	3364271	Identifier	param		3363649	0					
ANR	3364272	ArgumentList	"""ALLOW_WRITE"""		3363649	1					
ANR	3364273	Argument	"""ALLOW_WRITE"""		3363649	0					
ANR	3364274	PrimaryExpression	"""ALLOW_WRITE"""		3363649	0					
ANR	3364275	IfStatement	if ( hdfs_allow != NULL )		3363649	6					
ANR	3364276	Condition	hdfs_allow != NULL	297:19:10159:10176	3363649	0	True				
ANR	3364277	EqualityExpression	hdfs_allow != NULL		3363649	0		!=			
ANR	3364278	Identifier	hdfs_allow		3363649	0					
ANR	3364279	Identifier	NULL		3363649	1					
ANR	3364280	CompoundStatement		98:39:3344:3344	3363649	1					
ANR	3364281	ExpressionStatement	allow_list . append ( hdfs_allow )	298:24:10205:10234	3363649	0	True				
ANR	3364282	CallExpression	allow_list . append ( hdfs_allow )		3363649	0					
ANR	3364283	Callee	allow_list . append		3363649	0					
ANR	3364284	MemberAccess	allow_list . append		3363649	0					
ANR	3364285	Identifier	allow_list		3363649	0					
ANR	3364286	Identifier	append		3363649	1					
ANR	3364287	ArgumentList	hdfs_allow		3363649	1					
ANR	3364288	Argument	hdfs_allow		3363649	0					
ANR	3364289	Identifier	hdfs_allow		3363649	0					
ANR	3364290	ExpressionStatement	free ( hdfs_allow )	299:24:10260:10276	3363649	1	True				
ANR	3364291	CallExpression	free ( hdfs_allow )		3363649	0					
ANR	3364292	Callee	free		3363649	0					
ANR	3364293	Identifier	free		3363649	0					
ANR	3364294	ArgumentList	hdfs_allow		3363649	1					
ANR	3364295	Argument	hdfs_allow		3363649	0					
ANR	3364296	Identifier	hdfs_allow		3363649	0					
ANR	3364297	ExpressionStatement	"hdfs_allow = param ( ""HOSTALLOW_WRITE"" )"	301:16:10312:10349	3363649	7	True				
ANR	3364298	AssignmentExpression	"hdfs_allow = param ( ""HOSTALLOW_WRITE"" )"		3363649	0		=			
ANR	3364299	Identifier	hdfs_allow		3363649	0					
ANR	3364300	CallExpression	"param ( ""HOSTALLOW_WRITE"" )"		3363649	1					
ANR	3364301	Callee	param		3363649	0					
ANR	3364302	Identifier	param		3363649	0					
ANR	3364303	ArgumentList	"""HOSTALLOW_WRITE"""		3363649	1					
ANR	3364304	Argument	"""HOSTALLOW_WRITE"""		3363649	0					
ANR	3364305	PrimaryExpression	"""HOSTALLOW_WRITE"""		3363649	0					
ANR	3364306	IfStatement	if ( hdfs_allow != NULL )		3363649	8					
ANR	3364307	Condition	hdfs_allow != NULL	302:19:10370:10387	3363649	0	True				
ANR	3364308	EqualityExpression	hdfs_allow != NULL		3363649	0		!=			
ANR	3364309	Identifier	hdfs_allow		3363649	0					
ANR	3364310	Identifier	NULL		3363649	1					
ANR	3364311	CompoundStatement		103:39:3555:3555	3363649	1					
ANR	3364312	ExpressionStatement	allow_list . append ( hdfs_allow )	303:24:10416:10445	3363649	0	True				
ANR	3364313	CallExpression	allow_list . append ( hdfs_allow )		3363649	0					
ANR	3364314	Callee	allow_list . append		3363649	0					
ANR	3364315	MemberAccess	allow_list . append		3363649	0					
ANR	3364316	Identifier	allow_list		3363649	0					
ANR	3364317	Identifier	append		3363649	1					
ANR	3364318	ArgumentList	hdfs_allow		3363649	1					
ANR	3364319	Argument	hdfs_allow		3363649	0					
ANR	3364320	Identifier	hdfs_allow		3363649	0					
ANR	3364321	ExpressionStatement	free ( hdfs_allow )	304:24:10471:10487	3363649	1	True				
ANR	3364322	CallExpression	free ( hdfs_allow )		3363649	0					
ANR	3364323	Callee	free		3363649	0					
ANR	3364324	Identifier	free		3363649	0					
ANR	3364325	ArgumentList	hdfs_allow		3363649	1					
ANR	3364326	Argument	hdfs_allow		3363649	0					
ANR	3364327	Identifier	hdfs_allow		3363649	0					
ANR	3364328	IdentifierDeclStatement	"char * tmp_str = allow_list . print_to_delimed_string ( "","" ) ;"	306:16:10523:10578	3363649	9	True				
ANR	3364329	IdentifierDecl	"* tmp_str = allow_list . print_to_delimed_string ( "","" )"		3363649	0					
ANR	3364330	IdentifierDeclType	char *		3363649	0					
ANR	3364331	Identifier	tmp_str		3363649	1					
ANR	3364332	AssignmentExpression	"* tmp_str = allow_list . print_to_delimed_string ( "","" )"		3363649	2		=			
ANR	3364333	Identifier	tmp_str		3363649	0					
ANR	3364334	CallExpression	"allow_list . print_to_delimed_string ( "","" )"		3363649	1					
ANR	3364335	Callee	allow_list . print_to_delimed_string		3363649	0					
ANR	3364336	MemberAccess	allow_list . print_to_delimed_string		3363649	0					
ANR	3364337	Identifier	allow_list		3363649	0					
ANR	3364338	Identifier	print_to_delimed_string		3363649	1					
ANR	3364339	ArgumentList	""","""		3363649	1					
ANR	3364340	Argument	""","""		3363649	0					
ANR	3364341	PrimaryExpression	""","""		3363649	0					
ANR	3364342	IfStatement	if ( tmp_str == NULL )		3363649	10					
ANR	3364343	Condition	tmp_str == NULL	307:20:10600:10614	3363649	0	True				
ANR	3364344	EqualityExpression	tmp_str == NULL		3363649	0		==			
ANR	3364345	Identifier	tmp_str		3363649	0					
ANR	3364346	Identifier	NULL		3363649	1					
ANR	3364347	CompoundStatement		108:38:3783:3783	3363649	1					
ANR	3364348	ExpressionStatement	"tmp_str = strdup ( """" )"	308:20:10640:10660	3363649	0	True				
ANR	3364349	AssignmentExpression	"tmp_str = strdup ( """" )"		3363649	0		=			
ANR	3364350	Identifier	tmp_str		3363649	0					
ANR	3364351	CallExpression	"strdup ( """" )"		3363649	1					
ANR	3364352	Callee	strdup		3363649	0					
ANR	3364353	Identifier	strdup		3363649	0					
ANR	3364354	ArgumentList	""""""		3363649	1					
ANR	3364355	Argument	""""""		3363649	0					
ANR	3364356	PrimaryExpression	""""""		3363649	0					
ANR	3364357	ExpressionStatement	ASSERT ( tmp_str != NULL )	310:16:10696:10719	3363649	11	True				
ANR	3364358	CallExpression	ASSERT ( tmp_str != NULL )		3363649	0					
ANR	3364359	Callee	ASSERT		3363649	0					
ANR	3364360	Identifier	ASSERT		3363649	0					
ANR	3364361	ArgumentList	tmp_str != NULL		3363649	1					
ANR	3364362	Argument	tmp_str != NULL		3363649	0					
ANR	3364363	EqualityExpression	tmp_str != NULL		3363649	0		!=			
ANR	3364364	Identifier	tmp_str		3363649	0					
ANR	3364365	Identifier	NULL		3363649	1					
ANR	3364366	ExpressionStatement	"writeXMLParam ( ""dfs.net.allow"" , tmp_str , & xml )"	311:16:10737:10782	3363649	12	True				
ANR	3364367	CallExpression	"writeXMLParam ( ""dfs.net.allow"" , tmp_str , & xml )"		3363649	0					
ANR	3364368	Callee	writeXMLParam		3363649	0					
ANR	3364369	Identifier	writeXMLParam		3363649	0					
ANR	3364370	ArgumentList	"""dfs.net.allow"""		3363649	1					
ANR	3364371	Argument	"""dfs.net.allow"""		3363649	0					
ANR	3364372	PrimaryExpression	"""dfs.net.allow"""		3363649	0					
ANR	3364373	Argument	tmp_str		3363649	1					
ANR	3364374	Identifier	tmp_str		3363649	0					
ANR	3364375	Argument	& xml		3363649	2					
ANR	3364376	UnaryOperationExpression	& xml		3363649	0					
ANR	3364377	UnaryOperator	&		3363649	0					
ANR	3364378	Identifier	xml		3363649	1					
ANR	3364379	ExpressionStatement	free ( tmp_str )	312:16:10800:10813	3363649	13	True				
ANR	3364380	CallExpression	free ( tmp_str )		3363649	0					
ANR	3364381	Callee	free		3363649	0					
ANR	3364382	Identifier	free		3363649	0					
ANR	3364383	ArgumentList	tmp_str		3363649	1					
ANR	3364384	Argument	tmp_str		3363649	0					
ANR	3364385	Identifier	tmp_str		3363649	0					
ANR	3364386	IdentifierDeclStatement	"char * hdfs_deny = param ( ""HDFS_DENY"" ) ;"	315:8:10834:10870	3363649	35	True				
ANR	3364387	IdentifierDecl	"* hdfs_deny = param ( ""HDFS_DENY"" )"		3363649	0					
ANR	3364388	IdentifierDeclType	char *		3363649	0					
ANR	3364389	Identifier	hdfs_deny		3363649	1					
ANR	3364390	AssignmentExpression	"* hdfs_deny = param ( ""HDFS_DENY"" )"		3363649	2		=			
ANR	3364391	Identifier	hdfs_deny		3363649	0					
ANR	3364392	CallExpression	"param ( ""HDFS_DENY"" )"		3363649	1					
ANR	3364393	Callee	param		3363649	0					
ANR	3364394	Identifier	param		3363649	0					
ANR	3364395	ArgumentList	"""HDFS_DENY"""		3363649	1					
ANR	3364396	Argument	"""HDFS_DENY"""		3363649	0					
ANR	3364397	PrimaryExpression	"""HDFS_DENY"""		3363649	0					
ANR	3364398	IfStatement	if ( hdfs_deny != NULL )		3363649	36					
ANR	3364399	Condition	hdfs_deny != NULL	316:12:10884:10900	3363649	0	True				
ANR	3364400	EqualityExpression	hdfs_deny != NULL		3363649	0		!=			
ANR	3364401	Identifier	hdfs_deny		3363649	0					
ANR	3364402	Identifier	NULL		3363649	1					
ANR	3364403	CompoundStatement		117:31:4068:4068	3363649	1					
ANR	3364404	ExpressionStatement	"writeXMLParam ( ""dfs.net.deny"" , hdfs_deny , & xml )"	317:16:10921:10967	3363649	0	True				
ANR	3364405	CallExpression	"writeXMLParam ( ""dfs.net.deny"" , hdfs_deny , & xml )"		3363649	0					
ANR	3364406	Callee	writeXMLParam		3363649	0					
ANR	3364407	Identifier	writeXMLParam		3363649	0					
ANR	3364408	ArgumentList	"""dfs.net.deny"""		3363649	1					
ANR	3364409	Argument	"""dfs.net.deny"""		3363649	0					
ANR	3364410	PrimaryExpression	"""dfs.net.deny"""		3363649	0					
ANR	3364411	Argument	hdfs_deny		3363649	1					
ANR	3364412	Identifier	hdfs_deny		3363649	0					
ANR	3364413	Argument	& xml		3363649	2					
ANR	3364414	UnaryOperationExpression	& xml		3363649	0					
ANR	3364415	UnaryOperator	&		3363649	0					
ANR	3364416	Identifier	xml		3363649	1					
ANR	3364417	ExpressionStatement	free ( hdfs_deny )	318:16:10985:11000	3363649	1	True				
ANR	3364418	CallExpression	free ( hdfs_deny )		3363649	0					
ANR	3364419	Callee	free		3363649	0					
ANR	3364420	Identifier	free		3363649	0					
ANR	3364421	ArgumentList	hdfs_deny		3363649	1					
ANR	3364422	Argument	hdfs_deny		3363649	0					
ANR	3364423	Identifier	hdfs_deny		3363649	0					
ANR	3364424	ElseStatement	else		3363649	0					
ANR	3364425	CompoundStatement		142:16:5052:5106	3363649	0					
ANR	3364426	IdentifierDeclStatement	StringList deny_list ;	320:16:11035:11055	3363649	0	True				
ANR	3364427	IdentifierDecl	deny_list		3363649	0					
ANR	3364428	IdentifierDeclType	StringList		3363649	0					
ANR	3364429	Identifier	deny_list		3363649	1					
ANR	3364430	ExpressionStatement	"hdfs_deny = param ( ""DENY_READ"" )"	321:16:11073:11103	3363649	1	True				
ANR	3364431	AssignmentExpression	"hdfs_deny = param ( ""DENY_READ"" )"		3363649	0		=			
ANR	3364432	Identifier	hdfs_deny		3363649	0					
ANR	3364433	CallExpression	"param ( ""DENY_READ"" )"		3363649	1					
ANR	3364434	Callee	param		3363649	0					
ANR	3364435	Identifier	param		3363649	0					
ANR	3364436	ArgumentList	"""DENY_READ"""		3363649	1					
ANR	3364437	Argument	"""DENY_READ"""		3363649	0					
ANR	3364438	PrimaryExpression	"""DENY_READ"""		3363649	0					
ANR	3364439	IfStatement	if ( hdfs_deny != NULL )		3363649	2					
ANR	3364440	Condition	hdfs_deny != NULL	322:20:11125:11141	3363649	0	True				
ANR	3364441	EqualityExpression	hdfs_deny != NULL		3363649	0		!=			
ANR	3364442	Identifier	hdfs_deny		3363649	0					
ANR	3364443	Identifier	NULL		3363649	1					
ANR	3364444	CompoundStatement		123:39:4309:4309	3363649	1					
ANR	3364445	ExpressionStatement	deny_list . append ( hdfs_deny )	323:24:11170:11197	3363649	0	True				
ANR	3364446	CallExpression	deny_list . append ( hdfs_deny )		3363649	0					
ANR	3364447	Callee	deny_list . append		3363649	0					
ANR	3364448	MemberAccess	deny_list . append		3363649	0					
ANR	3364449	Identifier	deny_list		3363649	0					
ANR	3364450	Identifier	append		3363649	1					
ANR	3364451	ArgumentList	hdfs_deny		3363649	1					
ANR	3364452	Argument	hdfs_deny		3363649	0					
ANR	3364453	Identifier	hdfs_deny		3363649	0					
ANR	3364454	ExpressionStatement	free ( hdfs_deny )	324:24:11223:11238	3363649	1	True				
ANR	3364455	CallExpression	free ( hdfs_deny )		3363649	0					
ANR	3364456	Callee	free		3363649	0					
ANR	3364457	Identifier	free		3363649	0					
ANR	3364458	ArgumentList	hdfs_deny		3363649	1					
ANR	3364459	Argument	hdfs_deny		3363649	0					
ANR	3364460	Identifier	hdfs_deny		3363649	0					
ANR	3364461	ExpressionStatement	"hdfs_deny = param ( ""HOSTDENY_READ"" )"	326:16:11274:11308	3363649	3	True				
ANR	3364462	AssignmentExpression	"hdfs_deny = param ( ""HOSTDENY_READ"" )"		3363649	0		=			
ANR	3364463	Identifier	hdfs_deny		3363649	0					
ANR	3364464	CallExpression	"param ( ""HOSTDENY_READ"" )"		3363649	1					
ANR	3364465	Callee	param		3363649	0					
ANR	3364466	Identifier	param		3363649	0					
ANR	3364467	ArgumentList	"""HOSTDENY_READ"""		3363649	1					
ANR	3364468	Argument	"""HOSTDENY_READ"""		3363649	0					
ANR	3364469	PrimaryExpression	"""HOSTDENY_READ"""		3363649	0					
ANR	3364470	IfStatement	if ( hdfs_deny != NULL )		3363649	4					
ANR	3364471	Condition	hdfs_deny != NULL	327:20:11330:11346	3363649	0	True				
ANR	3364472	EqualityExpression	hdfs_deny != NULL		3363649	0		!=			
ANR	3364473	Identifier	hdfs_deny		3363649	0					
ANR	3364474	Identifier	NULL		3363649	1					
ANR	3364475	CompoundStatement		128:39:4514:4514	3363649	1					
ANR	3364476	ExpressionStatement	deny_list . append ( hdfs_deny )	328:24:11375:11402	3363649	0	True				
ANR	3364477	CallExpression	deny_list . append ( hdfs_deny )		3363649	0					
ANR	3364478	Callee	deny_list . append		3363649	0					
ANR	3364479	MemberAccess	deny_list . append		3363649	0					
ANR	3364480	Identifier	deny_list		3363649	0					
ANR	3364481	Identifier	append		3363649	1					
ANR	3364482	ArgumentList	hdfs_deny		3363649	1					
ANR	3364483	Argument	hdfs_deny		3363649	0					
ANR	3364484	Identifier	hdfs_deny		3363649	0					
ANR	3364485	ExpressionStatement	free ( hdfs_deny )	329:24:11428:11443	3363649	1	True				
ANR	3364486	CallExpression	free ( hdfs_deny )		3363649	0					
ANR	3364487	Callee	free		3363649	0					
ANR	3364488	Identifier	free		3363649	0					
ANR	3364489	ArgumentList	hdfs_deny		3363649	1					
ANR	3364490	Argument	hdfs_deny		3363649	0					
ANR	3364491	Identifier	hdfs_deny		3363649	0					
ANR	3364492	ExpressionStatement	"hdfs_deny = param ( ""DENY_WRITE"" )"	331:16:11479:11510	3363649	5	True				
ANR	3364493	AssignmentExpression	"hdfs_deny = param ( ""DENY_WRITE"" )"		3363649	0		=			
ANR	3364494	Identifier	hdfs_deny		3363649	0					
ANR	3364495	CallExpression	"param ( ""DENY_WRITE"" )"		3363649	1					
ANR	3364496	Callee	param		3363649	0					
ANR	3364497	Identifier	param		3363649	0					
ANR	3364498	ArgumentList	"""DENY_WRITE"""		3363649	1					
ANR	3364499	Argument	"""DENY_WRITE"""		3363649	0					
ANR	3364500	PrimaryExpression	"""DENY_WRITE"""		3363649	0					
ANR	3364501	IfStatement	if ( hdfs_deny != NULL )		3363649	6					
ANR	3364502	Condition	hdfs_deny != NULL	332:20:11532:11548	3363649	0	True				
ANR	3364503	EqualityExpression	hdfs_deny != NULL		3363649	0		!=			
ANR	3364504	Identifier	hdfs_deny		3363649	0					
ANR	3364505	Identifier	NULL		3363649	1					
ANR	3364506	CompoundStatement		133:39:4716:4716	3363649	1					
ANR	3364507	ExpressionStatement	deny_list . append ( hdfs_deny )	333:24:11577:11604	3363649	0	True				
ANR	3364508	CallExpression	deny_list . append ( hdfs_deny )		3363649	0					
ANR	3364509	Callee	deny_list . append		3363649	0					
ANR	3364510	MemberAccess	deny_list . append		3363649	0					
ANR	3364511	Identifier	deny_list		3363649	0					
ANR	3364512	Identifier	append		3363649	1					
ANR	3364513	ArgumentList	hdfs_deny		3363649	1					
ANR	3364514	Argument	hdfs_deny		3363649	0					
ANR	3364515	Identifier	hdfs_deny		3363649	0					
ANR	3364516	ExpressionStatement	free ( hdfs_deny )	334:24:11630:11645	3363649	1	True				
ANR	3364517	CallExpression	free ( hdfs_deny )		3363649	0					
ANR	3364518	Callee	free		3363649	0					
ANR	3364519	Identifier	free		3363649	0					
ANR	3364520	ArgumentList	hdfs_deny		3363649	1					
ANR	3364521	Argument	hdfs_deny		3363649	0					
ANR	3364522	Identifier	hdfs_deny		3363649	0					
ANR	3364523	ExpressionStatement	"hdfs_deny = param ( ""HOSTDENY_WRITE"" )"	336:16:11681:11716	3363649	7	True				
ANR	3364524	AssignmentExpression	"hdfs_deny = param ( ""HOSTDENY_WRITE"" )"		3363649	0		=			
ANR	3364525	Identifier	hdfs_deny		3363649	0					
ANR	3364526	CallExpression	"param ( ""HOSTDENY_WRITE"" )"		3363649	1					
ANR	3364527	Callee	param		3363649	0					
ANR	3364528	Identifier	param		3363649	0					
ANR	3364529	ArgumentList	"""HOSTDENY_WRITE"""		3363649	1					
ANR	3364530	Argument	"""HOSTDENY_WRITE"""		3363649	0					
ANR	3364531	PrimaryExpression	"""HOSTDENY_WRITE"""		3363649	0					
ANR	3364532	IfStatement	if ( hdfs_deny != NULL )		3363649	8					
ANR	3364533	Condition	hdfs_deny != NULL	337:19:11737:11753	3363649	0	True				
ANR	3364534	EqualityExpression	hdfs_deny != NULL		3363649	0		!=			
ANR	3364535	Identifier	hdfs_deny		3363649	0					
ANR	3364536	Identifier	NULL		3363649	1					
ANR	3364537	CompoundStatement		138:38:4921:4921	3363649	1					
ANR	3364538	ExpressionStatement	deny_list . append ( hdfs_deny )	338:24:11782:11809	3363649	0	True				
ANR	3364539	CallExpression	deny_list . append ( hdfs_deny )		3363649	0					
ANR	3364540	Callee	deny_list . append		3363649	0					
ANR	3364541	MemberAccess	deny_list . append		3363649	0					
ANR	3364542	Identifier	deny_list		3363649	0					
ANR	3364543	Identifier	append		3363649	1					
ANR	3364544	ArgumentList	hdfs_deny		3363649	1					
ANR	3364545	Argument	hdfs_deny		3363649	0					
ANR	3364546	Identifier	hdfs_deny		3363649	0					
ANR	3364547	ExpressionStatement	free ( hdfs_deny )	339:24:11836:11851	3363649	1	True				
ANR	3364548	CallExpression	free ( hdfs_deny )		3363649	0					
ANR	3364549	Callee	free		3363649	0					
ANR	3364550	Identifier	free		3363649	0					
ANR	3364551	ArgumentList	hdfs_deny		3363649	1					
ANR	3364552	Argument	hdfs_deny		3363649	0					
ANR	3364553	Identifier	hdfs_deny		3363649	0					
ANR	3364554	IdentifierDeclStatement	"char * tmp_str = deny_list . print_to_delimed_string ( "","" ) ;"	341:16:11887:11941	3363649	9	True				
ANR	3364555	IdentifierDecl	"* tmp_str = deny_list . print_to_delimed_string ( "","" )"		3363649	0					
ANR	3364556	IdentifierDeclType	char *		3363649	0					
ANR	3364557	Identifier	tmp_str		3363649	1					
ANR	3364558	AssignmentExpression	"* tmp_str = deny_list . print_to_delimed_string ( "","" )"		3363649	2		=			
ANR	3364559	Identifier	tmp_str		3363649	0					
ANR	3364560	CallExpression	"deny_list . print_to_delimed_string ( "","" )"		3363649	1					
ANR	3364561	Callee	deny_list . print_to_delimed_string		3363649	0					
ANR	3364562	MemberAccess	deny_list . print_to_delimed_string		3363649	0					
ANR	3364563	Identifier	deny_list		3363649	0					
ANR	3364564	Identifier	print_to_delimed_string		3363649	1					
ANR	3364565	ArgumentList	""","""		3363649	1					
ANR	3364566	Argument	""","""		3363649	0					
ANR	3364567	PrimaryExpression	""","""		3363649	0					
ANR	3364568	IfStatement	if ( tmp_str == NULL )		3363649	10					
ANR	3364569	Condition	tmp_str == NULL	342:20:11963:11977	3363649	0	True				
ANR	3364570	EqualityExpression	tmp_str == NULL		3363649	0		==			
ANR	3364571	Identifier	tmp_str		3363649	0					
ANR	3364572	Identifier	NULL		3363649	1					
ANR	3364573	CompoundStatement		143:38:5146:5146	3363649	1					
ANR	3364574	ExpressionStatement	"tmp_str = strdup ( """" )"	343:20:12003:12023	3363649	0	True				
ANR	3364575	AssignmentExpression	"tmp_str = strdup ( """" )"		3363649	0		=			
ANR	3364576	Identifier	tmp_str		3363649	0					
ANR	3364577	CallExpression	"strdup ( """" )"		3363649	1					
ANR	3364578	Callee	strdup		3363649	0					
ANR	3364579	Identifier	strdup		3363649	0					
ANR	3364580	ArgumentList	""""""		3363649	1					
ANR	3364581	Argument	""""""		3363649	0					
ANR	3364582	PrimaryExpression	""""""		3363649	0					
ANR	3364583	ExpressionStatement	ASSERT ( tmp_str != NULL )	345:16:12059:12082	3363649	11	True				
ANR	3364584	CallExpression	ASSERT ( tmp_str != NULL )		3363649	0					
ANR	3364585	Callee	ASSERT		3363649	0					
ANR	3364586	Identifier	ASSERT		3363649	0					
ANR	3364587	ArgumentList	tmp_str != NULL		3363649	1					
ANR	3364588	Argument	tmp_str != NULL		3363649	0					
ANR	3364589	EqualityExpression	tmp_str != NULL		3363649	0		!=			
ANR	3364590	Identifier	tmp_str		3363649	0					
ANR	3364591	Identifier	NULL		3363649	1					
ANR	3364592	ExpressionStatement	"writeXMLParam ( ""dfs.net.deny"" , tmp_str , & xml )"	346:16:12100:12144	3363649	12	True				
ANR	3364593	CallExpression	"writeXMLParam ( ""dfs.net.deny"" , tmp_str , & xml )"		3363649	0					
ANR	3364594	Callee	writeXMLParam		3363649	0					
ANR	3364595	Identifier	writeXMLParam		3363649	0					
ANR	3364596	ArgumentList	"""dfs.net.deny"""		3363649	1					
ANR	3364597	Argument	"""dfs.net.deny"""		3363649	0					
ANR	3364598	PrimaryExpression	"""dfs.net.deny"""		3363649	0					
ANR	3364599	Argument	tmp_str		3363649	1					
ANR	3364600	Identifier	tmp_str		3363649	0					
ANR	3364601	Argument	& xml		3363649	2					
ANR	3364602	UnaryOperationExpression	& xml		3363649	0					
ANR	3364603	UnaryOperator	&		3363649	0					
ANR	3364604	Identifier	xml		3363649	1					
ANR	3364605	ExpressionStatement	free ( tmp_str )	347:16:12162:12175	3363649	13	True				
ANR	3364606	CallExpression	free ( tmp_str )		3363649	0					
ANR	3364607	Callee	free		3363649	0					
ANR	3364608	Identifier	free		3363649	0					
ANR	3364609	ArgumentList	tmp_str		3363649	1					
ANR	3364610	Argument	tmp_str		3363649	0					
ANR	3364611	Identifier	tmp_str		3363649	0					
ANR	3364612	ExpressionStatement	"xml . append ( ""</configuration>"" )"	354:8:12420:12450	3363649	37	True				
ANR	3364613	CallExpression	"xml . append ( ""</configuration>"" )"		3363649	0					
ANR	3364614	Callee	xml . append		3363649	0					
ANR	3364615	MemberAccess	xml . append		3363649	0					
ANR	3364616	Identifier	xml		3363649	0					
ANR	3364617	Identifier	append		3363649	1					
ANR	3364618	ArgumentList	"""</configuration>"""		3363649	1					
ANR	3364619	Argument	"""</configuration>"""		3363649	0					
ANR	3364620	PrimaryExpression	"""</configuration>"""		3363649	0					
ANR	3364621	IdentifierDeclStatement	char * str = xml . print_to_delimed_string ( NULL ) ;	356:8:12461:12506	3363649	38	True				
ANR	3364622	IdentifierDecl	* str = xml . print_to_delimed_string ( NULL )		3363649	0					
ANR	3364623	IdentifierDeclType	char *		3363649	0					
ANR	3364624	Identifier	str		3363649	1					
ANR	3364625	AssignmentExpression	* str = xml . print_to_delimed_string ( NULL )		3363649	2		=			
ANR	3364626	Identifier	str		3363649	0					
ANR	3364627	CallExpression	xml . print_to_delimed_string ( NULL )		3363649	1					
ANR	3364628	Callee	xml . print_to_delimed_string		3363649	0					
ANR	3364629	MemberAccess	xml . print_to_delimed_string		3363649	0					
ANR	3364630	Identifier	xml		3363649	0					
ANR	3364631	Identifier	print_to_delimed_string		3363649	1					
ANR	3364632	ArgumentList	NULL		3363649	1					
ANR	3364633	Argument	NULL		3363649	0					
ANR	3364634	Identifier	NULL		3363649	0					
ANR	3364635	ExpressionStatement	ASSERT ( str != NULL )	357:8:12516:12535	3363649	39	True				
ANR	3364636	CallExpression	ASSERT ( str != NULL )		3363649	0					
ANR	3364637	Callee	ASSERT		3363649	0					
ANR	3364638	Identifier	ASSERT		3363649	0					
ANR	3364639	ArgumentList	str != NULL		3363649	1					
ANR	3364640	Argument	str != NULL		3363649	0					
ANR	3364641	EqualityExpression	str != NULL		3363649	0		!=			
ANR	3364642	Identifier	str		3363649	0					
ANR	3364643	Identifier	NULL		3363649	1					
ANR	3364644	IdentifierDeclStatement	"unsigned int len = full_write ( fd , str , strlen ( str ) ) ;"	358:8:12545:12596	3363649	40	True				
ANR	3364645	IdentifierDecl	"len = full_write ( fd , str , strlen ( str ) )"		3363649	0					
ANR	3364646	IdentifierDeclType	unsigned int		3363649	0					
ANR	3364647	Identifier	len		3363649	1					
ANR	3364648	AssignmentExpression	"len = full_write ( fd , str , strlen ( str ) )"		3363649	2		=			
ANR	3364649	Identifier	len		3363649	0					
ANR	3364650	CallExpression	"full_write ( fd , str , strlen ( str ) )"		3363649	1					
ANR	3364651	Callee	full_write		3363649	0					
ANR	3364652	Identifier	full_write		3363649	0					
ANR	3364653	ArgumentList	fd		3363649	1					
ANR	3364654	Argument	fd		3363649	0					
ANR	3364655	Identifier	fd		3363649	0					
ANR	3364656	Argument	str		3363649	1					
ANR	3364657	Identifier	str		3363649	0					
ANR	3364658	Argument	strlen ( str )		3363649	2					
ANR	3364659	CallExpression	strlen ( str )		3363649	0					
ANR	3364660	Callee	strlen		3363649	0					
ANR	3364661	Identifier	strlen		3363649	0					
ANR	3364662	ArgumentList	str		3363649	1					
ANR	3364663	Argument	str		3363649	0					
ANR	3364664	Identifier	str		3363649	0					
ANR	3364665	ExpressionStatement	ASSERT ( len == strlen ( str ) )	359:8:12606:12632	3363649	41	True				
ANR	3364666	CallExpression	ASSERT ( len == strlen ( str ) )		3363649	0					
ANR	3364667	Callee	ASSERT		3363649	0					
ANR	3364668	Identifier	ASSERT		3363649	0					
ANR	3364669	ArgumentList	len == strlen ( str )		3363649	1					
ANR	3364670	Argument	len == strlen ( str )		3363649	0					
ANR	3364671	EqualityExpression	len == strlen ( str )		3363649	0		==			
ANR	3364672	Identifier	len		3363649	0					
ANR	3364673	CallExpression	strlen ( str )		3363649	1					
ANR	3364674	Callee	strlen		3363649	0					
ANR	3364675	Identifier	strlen		3363649	0					
ANR	3364676	ArgumentList	str		3363649	1					
ANR	3364677	Argument	str		3363649	0					
ANR	3364678	Identifier	str		3363649	0					
ANR	3364679	ExpressionStatement	close ( fd )	360:8:12642:12651	3363649	42	True				
ANR	3364680	CallExpression	close ( fd )		3363649	0					
ANR	3364681	Callee	close		3363649	0					
ANR	3364682	Identifier	close		3363649	0					
ANR	3364683	ArgumentList	fd		3363649	1					
ANR	3364684	Argument	fd		3363649	0					
ANR	3364685	Identifier	fd		3363649	0					
ANR	3364686	ExpressionStatement	free ( str )	361:8:12661:12670	3363649	43	True				
ANR	3364687	CallExpression	free ( str )		3363649	0					
ANR	3364688	Callee	free		3363649	0					
ANR	3364689	Identifier	free		3363649	0					
ANR	3364690	ArgumentList	str		3363649	1					
ANR	3364691	Argument	str		3363649	0					
ANR	3364692	Identifier	str		3363649	0					
ANR	3364693	ReturnType	void		3363649	1					
ANR	3364694	Identifier	Hadoop :: writeConfigFile		3363649	2					
ANR	3364695	ParameterList			3363649	3					
ANR	3364696	CFGEntryNode	ENTRY		3363649		True				
ANR	3364697	CFGExitNode	EXIT		3363649		True				
ANR	3364698	Symbol	O_CREAT		3363649						
ANR	3364699	Symbol	m_nameNodeDir		3363649						
ANR	3364700	Symbol	nnaddw		3363649						
ANR	3364701	Symbol	deny_list . print_to_delimed_string		3363649						
ANR	3364702	Symbol	ddir		3363649						
ANR	3364703	Symbol	hdfs_allow		3363649						
ANR	3364704	Symbol	confFile . Value		3363649						
ANR	3364705	Symbol	namenode		3363649						
ANR	3364706	Symbol	bnadd		3363649						
ANR	3364707	Symbol	strlen		3363649						
ANR	3364708	Symbol	m_hdfsSiteFile . Value		3363649						
ANR	3364709	Symbol	dadd		3363649						
ANR	3364710	Symbol	allow_list . print_to_delimed_string		3363649						
ANR	3364711	Symbol	len		3363649						
ANR	3364712	Symbol	param		3363649						
ANR	3364713	Symbol	xml		3363649						
ANR	3364714	Symbol	deny_list		3363649						
ANR	3364715	Symbol	allow_list		3363649						
ANR	3364716	Symbol	confFile		3363649						
ANR	3364717	Symbol	rep		3363649						
ANR	3364718	Symbol	logdir		3363649						
ANR	3364719	Symbol	xml . print_to_delimed_string		3363649						
ANR	3364720	Symbol	NULL		3363649						
ANR	3364721	Symbol	tmp_str		3363649						
ANR	3364722	Symbol	hdfs_deny		3363649						
ANR	3364723	Symbol	full_write		3363649						
ANR	3364724	Symbol	D_ALWAYS		3363649						
ANR	3364725	Symbol	ndir		3363649						
ANR	3364726	Symbol	str		3363649						
ANR	3364727	Symbol	daddw		3363649						
ANR	3364728	Symbol	bnaddw		3363649						
ANR	3364729	Symbol	safe_create_replace_if_exists		3363649						
ANR	3364730	Symbol	& xml		3363649						
ANR	3364731	Symbol	strdup		3363649						
ANR	3364732	Symbol	m_hdfsSiteFile		3363649						
ANR	3364733	Symbol	O_WRONLY		3363649						
ANR	3364734	Symbol	fd		3363649						
ANR	3364735	Function	Hadoop :: stop	365:0:12676:13712							
ANR	3364736	FunctionDef	Hadoop :: stop (bool fast)		3364735	0					
ANR	3364737	CompoundStatement		365:29:12705:13712	3364735	0					
ANR	3364738	IfStatement	if ( m_state == STATE_NULL )		3364735	0					
ANR	3364739	Condition	m_state == STATE_NULL	366:12:12719:12739	3364735	0	True				
ANR	3364740	EqualityExpression	m_state == STATE_NULL		3364735	0		==			
ANR	3364741	Identifier	m_state		3364735	0					
ANR	3364742	Identifier	STATE_NULL		3364735	1					
ANR	3364743	ReturnStatement	return ;	367:12:12754:12760	3364735	1	True				
ANR	3364744	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Hadoop::stop() current_state = %d\\n"" , m_state )"	369:8:12771:12839	3364735	1	True				
ANR	3364745	CallExpression	"dprintf ( D_FULLDEBUG , ""Hadoop::stop() current_state = %d\\n"" , m_state )"		3364735	0					
ANR	3364746	Callee	dprintf		3364735	0					
ANR	3364747	Identifier	dprintf		3364735	0					
ANR	3364748	ArgumentList	D_FULLDEBUG		3364735	1					
ANR	3364749	Argument	D_FULLDEBUG		3364735	0					
ANR	3364750	Identifier	D_FULLDEBUG		3364735	0					
ANR	3364751	Argument	"""Hadoop::stop() current_state = %d\\n"""		3364735	1					
ANR	3364752	PrimaryExpression	"""Hadoop::stop() current_state = %d\\n"""		3364735	0					
ANR	3364753	Argument	m_state		3364735	2					
ANR	3364754	Identifier	m_state		3364735	0					
ANR	3364755	IfStatement	if ( m_pid != - 1 )		3364735	2					
ANR	3364756	Condition	m_pid != - 1	371:12:12854:12864	3364735	0	True				
ANR	3364757	EqualityExpression	m_pid != - 1		3364735	0		!=			
ANR	3364758	Identifier	m_pid		3364735	0					
ANR	3364759	UnaryOperationExpression	- 1		3364735	1					
ANR	3364760	UnaryOperator	-		3364735	0					
ANR	3364761	PrimaryExpression	1		3364735	1					
ANR	3364762	CompoundStatement		7:25:161:161	3364735	1					
ANR	3364763	IfStatement	if ( m_state != STATE_REINIT )		3364735	0					
ANR	3364764	Condition	m_state != STATE_REINIT	378:20:13206:13228	3364735	0	True				
ANR	3364765	EqualityExpression	m_state != STATE_REINIT		3364735	0		!=			
ANR	3364766	Identifier	m_state		3364735	0					
ANR	3364767	Identifier	STATE_REINIT		3364735	1					
ANR	3364768	ExpressionStatement	m_state = STATE_STOP_REQUESTED	379:24:13255:13285	3364735	1	True				
ANR	3364769	AssignmentExpression	m_state = STATE_STOP_REQUESTED		3364735	0		=			
ANR	3364770	Identifier	m_state		3364735	0					
ANR	3364771	Identifier	STATE_STOP_REQUESTED		3364735	1					
ANR	3364772	ExpressionStatement	"daemonCore -> Send_Signal ( m_pid , ( fast ? SIGKILL : SIGTERM ) )"	381:16:13304:13363	3364735	1	True				
ANR	3364773	CallExpression	"daemonCore -> Send_Signal ( m_pid , ( fast ? SIGKILL : SIGTERM ) )"		3364735	0					
ANR	3364774	Callee	daemonCore -> Send_Signal		3364735	0					
ANR	3364775	PtrMemberAccess	daemonCore -> Send_Signal		3364735	0					
ANR	3364776	Identifier	daemonCore		3364735	0					
ANR	3364777	Identifier	Send_Signal		3364735	1					
ANR	3364778	ArgumentList	m_pid		3364735	1					
ANR	3364779	Argument	m_pid		3364735	0					
ANR	3364780	Identifier	m_pid		3364735	0					
ANR	3364781	Argument	fast ? SIGKILL : SIGTERM		3364735	1					
ANR	3364782	ConditionalExpression	fast ? SIGKILL : SIGTERM		3364735	0					
ANR	3364783	Condition	fast		3364735	0					
ANR	3364784	Identifier	fast		3364735	0					
ANR	3364785	Identifier	SIGKILL		3364735	1					
ANR	3364786	Identifier	SIGTERM		3364735	2					
ANR	3364787	IfStatement	if ( ! fast )		3364735	2					
ANR	3364788	Condition	! fast	382:20:13385:13389	3364735	0	True				
ANR	3364789	UnaryOperationExpression	! fast		3364735	0					
ANR	3364790	UnaryOperator	!		3364735	0					
ANR	3364791	Identifier	fast		3364735	1					
ANR	3364792	CompoundStatement		18:27:686:686	3364735	1					
ANR	3364793	ExpressionStatement	"dprintf ( D_ALWAYS , ""Created timer on daemon kill signal\\n"" )"	383:24:13418:13476	3364735	0	True				
ANR	3364794	CallExpression	"dprintf ( D_ALWAYS , ""Created timer on daemon kill signal\\n"" )"		3364735	0					
ANR	3364795	Callee	dprintf		3364735	0					
ANR	3364796	Identifier	dprintf		3364735	0					
ANR	3364797	ArgumentList	D_ALWAYS		3364735	1					
ANR	3364798	Argument	D_ALWAYS		3364735	0					
ANR	3364799	Identifier	D_ALWAYS		3364735	0					
ANR	3364800	Argument	"""Created timer on daemon kill signal\\n"""		3364735	1					
ANR	3364801	PrimaryExpression	"""Created timer on daemon kill signal\\n"""		3364735	0					
ANR	3364802	ExpressionStatement	"m_timer = daemonCore -> Register_Timer ( 5 , ( TimerHandlercpp ) & Hadoop :: killTimer , ""hadoop kill timer"" , this )"	384:24:13502:13682	3364735	1	True				
ANR	3364803	AssignmentExpression	"m_timer = daemonCore -> Register_Timer ( 5 , ( TimerHandlercpp ) & Hadoop :: killTimer , ""hadoop kill timer"" , this )"		3364735	0		=			
ANR	3364804	Identifier	m_timer		3364735	0					
ANR	3364805	CallExpression	"daemonCore -> Register_Timer ( 5 , ( TimerHandlercpp ) & Hadoop :: killTimer , ""hadoop kill timer"" , this )"		3364735	1					
ANR	3364806	Callee	daemonCore -> Register_Timer		3364735	0					
ANR	3364807	PtrMemberAccess	daemonCore -> Register_Timer		3364735	0					
ANR	3364808	Identifier	daemonCore		3364735	0					
ANR	3364809	Identifier	Register_Timer		3364735	1					
ANR	3364810	ArgumentList	5		3364735	1					
ANR	3364811	Argument	5		3364735	0					
ANR	3364812	PrimaryExpression	5		3364735	0					
ANR	3364813	Argument	( TimerHandlercpp ) & Hadoop :: killTimer		3364735	1					
ANR	3364814	CastExpression	( TimerHandlercpp ) & Hadoop :: killTimer		3364735	0					
ANR	3364815	CastTarget	TimerHandlercpp		3364735	0					
ANR	3364816	UnaryOperationExpression	& Hadoop :: killTimer		3364735	1					
ANR	3364817	UnaryOperator	&		3364735	0					
ANR	3364818	Identifier	Hadoop :: killTimer		3364735	1					
ANR	3364819	Argument	"""hadoop kill timer"""		3364735	2					
ANR	3364820	PrimaryExpression	"""hadoop kill timer"""		3364735	0					
ANR	3364821	Argument	this		3364735	3					
ANR	3364822	Identifier	this		3364735	0					
ANR	3364823	ReturnType	void		3364735	1					
ANR	3364824	Identifier	Hadoop :: stop		3364735	2					
ANR	3364825	ParameterList	bool fast		3364735	3					
ANR	3364826	Parameter	bool fast	365:18:12694:12702	3364735	0	True				
ANR	3364827	ParameterType	bool		3364735	0					
ANR	3364828	Identifier	fast		3364735	1					
ANR	3364829	CFGEntryNode	ENTRY		3364735		True				
ANR	3364830	CFGExitNode	EXIT		3364735		True				
ANR	3364831	Symbol	m_timer		3364735						
ANR	3364832	Symbol	D_ALWAYS		3364735						
ANR	3364833	Symbol	this		3364735						
ANR	3364834	Symbol	D_FULLDEBUG		3364735						
ANR	3364835	Symbol	STATE_REINIT		3364735						
ANR	3364836	Symbol	STATE_NULL		3364735						
ANR	3364837	Symbol	SIGKILL		3364735						
ANR	3364838	Symbol	& Hadoop :: killTimer		3364735						
ANR	3364839	Symbol	m_state		3364735						
ANR	3364840	Symbol	fast		3364735						
ANR	3364841	Symbol	STATE_STOP_REQUESTED		3364735						
ANR	3364842	Symbol	m_pid		3364735						
ANR	3364843	Symbol	* daemonCore		3364735						
ANR	3364844	Symbol	daemonCore		3364735						
ANR	3364845	Symbol	daemonCore -> Register_Timer		3364735						
ANR	3364846	Symbol	SIGTERM		3364735						
ANR	3364847	Function	Hadoop :: reaperResponse	391:0:13715:14281							
ANR	3364848	FunctionDef	"Hadoop :: reaperResponse (int exit_pid , int exit_status)"		3364847	0					
ANR	3364849	CompoundStatement		391:58:13773:14281	3364847	0					
ANR	3364850	ExpressionStatement	"dprintf ( D_ALWAYS , ""HDFS daemon returned %d\\n"" , exit_status )"	392:8:13783:13842	3364847	0	True				
ANR	3364851	CallExpression	"dprintf ( D_ALWAYS , ""HDFS daemon returned %d\\n"" , exit_status )"		3364847	0					
ANR	3364852	Callee	dprintf		3364847	0					
ANR	3364853	Identifier	dprintf		3364847	0					
ANR	3364854	ArgumentList	D_ALWAYS		3364847	1					
ANR	3364855	Argument	D_ALWAYS		3364847	0					
ANR	3364856	Identifier	D_ALWAYS		3364847	0					
ANR	3364857	Argument	"""HDFS daemon returned %d\\n"""		3364847	1					
ANR	3364858	PrimaryExpression	"""HDFS daemon returned %d\\n"""		3364847	0					
ANR	3364859	Argument	exit_status		3364847	2					
ANR	3364860	Identifier	exit_status		3364847	0					
ANR	3364861	ExpressionStatement	daemonCore -> Cancel_Reaper ( m_reaper )	394:8:13853:13888	3364847	1	True				
ANR	3364862	CallExpression	daemonCore -> Cancel_Reaper ( m_reaper )		3364847	0					
ANR	3364863	Callee	daemonCore -> Cancel_Reaper		3364847	0					
ANR	3364864	PtrMemberAccess	daemonCore -> Cancel_Reaper		3364847	0					
ANR	3364865	Identifier	daemonCore		3364847	0					
ANR	3364866	Identifier	Cancel_Reaper		3364847	1					
ANR	3364867	ArgumentList	m_reaper		3364847	1					
ANR	3364868	Argument	m_reaper		3364847	0					
ANR	3364869	Identifier	m_reaper		3364847	0					
ANR	3364870	ExpressionStatement	m_pid = - 1	395:8:13898:13908	3364847	2	True				
ANR	3364871	AssignmentExpression	m_pid = - 1		3364847	0		=			
ANR	3364872	Identifier	m_pid		3364847	0					
ANR	3364873	UnaryOperationExpression	- 1		3364847	1					
ANR	3364874	UnaryOperator	-		3364847	0					
ANR	3364875	PrimaryExpression	1		3364847	1					
ANR	3364876	ExpressionStatement	m_reaper = - 1	396:8:13918:13931	3364847	3	True				
ANR	3364877	AssignmentExpression	m_reaper = - 1		3364847	0		=			
ANR	3364878	Identifier	m_reaper		3364847	0					
ANR	3364879	UnaryOperationExpression	- 1		3364847	1					
ANR	3364880	UnaryOperator	-		3364847	0					
ANR	3364881	PrimaryExpression	1		3364847	1					
ANR	3364882	IfStatement	if ( m_state == STATE_REINIT )		3364847	4					
ANR	3364883	Condition	m_state == STATE_REINIT	398:12:13946:13968	3364847	0	True				
ANR	3364884	EqualityExpression	m_state == STATE_REINIT		3364847	0		==			
ANR	3364885	Identifier	m_state		3364847	0					
ANR	3364886	Identifier	STATE_REINIT		3364847	1					
ANR	3364887	CompoundStatement		8:37:197:197	3364847	1					
ANR	3364888	ExpressionStatement	m_state = STATE_NULL	399:16:13989:14009	3364847	0	True				
ANR	3364889	AssignmentExpression	m_state = STATE_NULL		3364847	0		=			
ANR	3364890	Identifier	m_state		3364847	0					
ANR	3364891	Identifier	STATE_NULL		3364847	1					
ANR	3364892	ExpressionStatement	initialize ( )	400:16:14027:14039	3364847	1	True				
ANR	3364893	CallExpression	initialize ( )		3364847	0					
ANR	3364894	Callee	initialize		3364847	0					
ANR	3364895	Identifier	initialize		3364847	0					
ANR	3364896	ArgumentList			3364847	1					
ANR	3364897	ElseStatement	else		3364847	0					
ANR	3364898	IfStatement	if ( m_state != STATE_STOP_REQUESTED && exit_status != 0 )		3364847	0					
ANR	3364899	Condition	m_state != STATE_STOP_REQUESTED && exit_status != 0	402:18:14069:14119	3364847	0	True				
ANR	3364900	AndExpression	m_state != STATE_STOP_REQUESTED && exit_status != 0		3364847	0		&&			
ANR	3364901	EqualityExpression	m_state != STATE_STOP_REQUESTED		3364847	0		!=			
ANR	3364902	Identifier	m_state		3364847	0					
ANR	3364903	Identifier	STATE_STOP_REQUESTED		3364847	1					
ANR	3364904	EqualityExpression	exit_status != 0		3364847	1		!=			
ANR	3364905	Identifier	exit_status		3364847	0					
ANR	3364906	PrimaryExpression	0		3364847	1					
ANR	3364907	CompoundStatement		12:71:348:348	3364847	1					
ANR	3364908	ExpressionStatement	"EXCEPT ( ""hadoop daemon %d was killed unexpectedly\\n"" , exit_pid )"	403:12:14136:14198	3364847	0	True				
ANR	3364909	CallExpression	"EXCEPT ( ""hadoop daemon %d was killed unexpectedly\\n"" , exit_pid )"		3364847	0					
ANR	3364910	Callee	EXCEPT		3364847	0					
ANR	3364911	Identifier	EXCEPT		3364847	0					
ANR	3364912	ArgumentList	"""hadoop daemon %d was killed unexpectedly\\n"""		3364847	1					
ANR	3364913	Argument	"""hadoop daemon %d was killed unexpectedly\\n"""		3364847	0					
ANR	3364914	PrimaryExpression	"""hadoop daemon %d was killed unexpectedly\\n"""		3364847	0					
ANR	3364915	Argument	exit_pid		3364847	1					
ANR	3364916	Identifier	exit_pid		3364847	0					
ANR	3364917	ExpressionStatement	m_state = STATE_NULL	406:8:14219:14239	3364847	5	True				
ANR	3364918	AssignmentExpression	m_state = STATE_NULL		3364847	0		=			
ANR	3364919	Identifier	m_state		3364847	0					
ANR	3364920	Identifier	STATE_NULL		3364847	1					
ANR	3364921	ExpressionStatement	DC_Exit ( 0 )	408:8:14250:14260	3364847	6	True				
ANR	3364922	CallExpression	DC_Exit ( 0 )		3364847	0					
ANR	3364923	Callee	DC_Exit		3364847	0					
ANR	3364924	Identifier	DC_Exit		3364847	0					
ANR	3364925	ArgumentList	0		3364847	1					
ANR	3364926	Argument	0		3364847	0					
ANR	3364927	PrimaryExpression	0		3364847	0					
ANR	3364928	ReturnStatement	return 0 ;	410:8:14271:14279	3364847	7	True				
ANR	3364929	PrimaryExpression	0		3364847	0					
ANR	3364930	ReturnType	int		3364847	1					
ANR	3364931	Identifier	Hadoop :: reaperResponse		3364847	2					
ANR	3364932	ParameterList	"int exit_pid , int exit_status"		3364847	3					
ANR	3364933	Parameter	int exit_pid	391:27:13742:13753	3364847	0	True				
ANR	3364934	ParameterType	int		3364847	0					
ANR	3364935	Identifier	exit_pid		3364847	1					
ANR	3364936	Parameter	int exit_status	391:41:13756:13770	3364847	1	True				
ANR	3364937	ParameterType	int		3364847	0					
ANR	3364938	Identifier	exit_status		3364847	1					
ANR	3364939	CFGEntryNode	ENTRY		3364847		True				
ANR	3364940	CFGExitNode	EXIT		3364847		True				
ANR	3364941	Symbol	m_state		3364847						
ANR	3364942	Symbol	exit_pid		3364847						
ANR	3364943	Symbol	m_reaper		3364847						
ANR	3364944	Symbol	STATE_STOP_REQUESTED		3364847						
ANR	3364945	Symbol	m_pid		3364847						
ANR	3364946	Symbol	daemonCore		3364847						
ANR	3364947	Symbol	D_ALWAYS		3364847						
ANR	3364948	Symbol	STATE_REINIT		3364847						
ANR	3364949	Symbol	exit_status		3364847						
ANR	3364950	Symbol	STATE_NULL		3364847						
ANR	3364951	Function	Hadoop :: killTimer	413:0:14284:14521							
ANR	3364952	FunctionDef	Hadoop :: killTimer ()		3364951	0					
ANR	3364953	CompoundStatement		413:25:14309:14521	3364951	0					
ANR	3364954	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Hadoop::KillTimer()\\n"" )"	414:8:14327:14372	3364951	0	True				
ANR	3364955	CallExpression	"dprintf ( D_FULLDEBUG , ""Hadoop::KillTimer()\\n"" )"		3364951	0					
ANR	3364956	Callee	dprintf		3364951	0					
ANR	3364957	Identifier	dprintf		3364951	0					
ANR	3364958	ArgumentList	D_FULLDEBUG		3364951	1					
ANR	3364959	Argument	D_FULLDEBUG		3364951	0					
ANR	3364960	Identifier	D_FULLDEBUG		3364951	0					
ANR	3364961	Argument	"""Hadoop::KillTimer()\\n"""		3364951	1					
ANR	3364962	PrimaryExpression	"""Hadoop::KillTimer()\\n"""		3364951	0					
ANR	3364963	ExpressionStatement	daemonCore -> Cancel_Timer ( m_timer )	415:8:14382:14415	3364951	1	True				
ANR	3364964	CallExpression	daemonCore -> Cancel_Timer ( m_timer )		3364951	0					
ANR	3364965	Callee	daemonCore -> Cancel_Timer		3364951	0					
ANR	3364966	PtrMemberAccess	daemonCore -> Cancel_Timer		3364951	0					
ANR	3364967	Identifier	daemonCore		3364951	0					
ANR	3364968	Identifier	Cancel_Timer		3364951	1					
ANR	3364969	ArgumentList	m_timer		3364951	1					
ANR	3364970	Argument	m_timer		3364951	0					
ANR	3364971	Identifier	m_timer		3364951	0					
ANR	3364972	IfStatement	if ( m_state != STATE_NULL )		3364951	2					
ANR	3364973	Condition	m_state != STATE_NULL	418:12:14474:14494	3364951	0	True				
ANR	3364974	EqualityExpression	m_state != STATE_NULL		3364951	0		!=			
ANR	3364975	Identifier	m_state		3364951	0					
ANR	3364976	Identifier	STATE_NULL		3364951	1					
ANR	3364977	ExpressionStatement	stop ( true )	419:12:14509:14519	3364951	1	True				
ANR	3364978	CallExpression	stop ( true )		3364951	0					
ANR	3364979	Callee	stop		3364951	0					
ANR	3364980	Identifier	stop		3364951	0					
ANR	3364981	ArgumentList	true		3364951	1					
ANR	3364982	Argument	true		3364951	0					
ANR	3364983	Identifier	true		3364951	0					
ANR	3364984	ReturnType	void		3364951	1					
ANR	3364985	Identifier	Hadoop :: killTimer		3364951	2					
ANR	3364986	ParameterList			3364951	3					
ANR	3364987	CFGEntryNode	ENTRY		3364951		True				
ANR	3364988	CFGExitNode	EXIT		3364951		True				
ANR	3364989	Symbol	m_state		3364951						
ANR	3364990	Symbol	m_timer		3364951						
ANR	3364991	Symbol	daemonCore		3364951						
ANR	3364992	Symbol	true		3364951						
ANR	3364993	Symbol	D_FULLDEBUG		3364951						
ANR	3364994	Symbol	STATE_NULL		3364951						
ANR	3364995	Function	Hadoop :: startServices	422:0:14524:15188							
ANR	3364996	FunctionDef	Hadoop :: startServices ()		3364995	0					
ANR	3364997	CompoundStatement		422:29:14553:15188	3364995	0					
ANR	3364998	IdentifierDeclStatement	"char * nodeType = param ( ""HDFS_NODETYPE"" ) ;"	423:8:14563:14603	3364995	0	True				
ANR	3364999	IdentifierDecl	"* nodeType = param ( ""HDFS_NODETYPE"" )"		3364995	0					
ANR	3365000	IdentifierDeclType	char *		3364995	0					
ANR	3365001	Identifier	nodeType		3364995	1					
ANR	3365002	AssignmentExpression	"* nodeType = param ( ""HDFS_NODETYPE"" )"		3364995	2		=			
ANR	3365003	Identifier	nodeType		3364995	0					
ANR	3365004	CallExpression	"param ( ""HDFS_NODETYPE"" )"		3364995	1					
ANR	3365005	Callee	param		3364995	0					
ANR	3365006	Identifier	param		3364995	0					
ANR	3365007	ArgumentList	"""HDFS_NODETYPE"""		3364995	1					
ANR	3365008	Argument	"""HDFS_NODETYPE"""		3364995	0					
ANR	3365009	PrimaryExpression	"""HDFS_NODETYPE"""		3364995	0					
ANR	3365010	IfStatement	if ( nodeType == NULL )		3364995	1					
ANR	3365011	Condition	nodeType == NULL	425:13:14619:14634	3364995	0	True				
ANR	3365012	EqualityExpression	nodeType == NULL		3364995	0		==			
ANR	3365013	Identifier	nodeType		3364995	0					
ANR	3365014	Identifier	NULL		3364995	1					
ANR	3365015	ExpressionStatement	m_nodeType = HDFS_DATANODE	426:13:14687:14713	3364995	1	True				
ANR	3365016	AssignmentExpression	m_nodeType = HDFS_DATANODE		3364995	0		=			
ANR	3365017	Identifier	m_nodeType		3364995	0					
ANR	3365018	Identifier	HDFS_DATANODE		3364995	1					
ANR	3365019	ElseStatement	else		3364995	0					
ANR	3365020	CompoundStatement		8:12:189:210	3364995	0					
ANR	3365021	IdentifierDeclStatement	MyString nt ( nodeType ) ;	429:12:14743:14764	3364995	0	True				
ANR	3365022	IdentifierDecl	nt ( nodeType )		3364995	0					
ANR	3365023	IdentifierDeclType	MyString		3364995	0					
ANR	3365024	Identifier	nt		3364995	1					
ANR	3365025	Identifier	nodeType		3364995	2					
ANR	3365026	ExpressionStatement	m_nodeType = getServiceTypeByName ( nt )	430:12:14778:14817	3364995	1	True				
ANR	3365027	AssignmentExpression	m_nodeType = getServiceTypeByName ( nt )		3364995	0		=			
ANR	3365028	Identifier	m_nodeType		3364995	0					
ANR	3365029	CallExpression	getServiceTypeByName ( nt )		3364995	1					
ANR	3365030	Callee	getServiceTypeByName		3364995	0					
ANR	3365031	Identifier	getServiceTypeByName		3364995	0					
ANR	3365032	ArgumentList	nt		3364995	1					
ANR	3365033	Argument	nt		3364995	0					
ANR	3365034	Identifier	nt		3364995	0					
ANR	3365035	IfStatement	if ( m_nodeType == HDFS_NAMENODE )		3364995	2					
ANR	3365036	Condition	m_nodeType == HDFS_NAMENODE	432:9:14829:14855	3364995	0	True				
ANR	3365037	EqualityExpression	m_nodeType == HDFS_NAMENODE		3364995	0		==			
ANR	3365038	Identifier	m_nodeType		3364995	0					
ANR	3365039	Identifier	HDFS_NAMENODE		3364995	1					
ANR	3365040	CompoundStatement		13:2:367:395	3364995	1					
ANR	3365041	IdentifierDeclStatement	"char * namenodeRole = param ( ""HDFS_NAMENODE_ROLE"" ) ;"	433:9:14869:14917	3364995	0	True				
ANR	3365042	IdentifierDecl	"* namenodeRole = param ( ""HDFS_NAMENODE_ROLE"" )"		3364995	0					
ANR	3365043	IdentifierDeclType	char *		3364995	0					
ANR	3365044	Identifier	namenodeRole		3364995	1					
ANR	3365045	AssignmentExpression	"* namenodeRole = param ( ""HDFS_NAMENODE_ROLE"" )"		3364995	2		=			
ANR	3365046	Identifier	namenodeRole		3364995	0					
ANR	3365047	CallExpression	"param ( ""HDFS_NAMENODE_ROLE"" )"		3364995	1					
ANR	3365048	Callee	param		3364995	0					
ANR	3365049	Identifier	param		3364995	0					
ANR	3365050	ArgumentList	"""HDFS_NAMENODE_ROLE"""		3364995	1					
ANR	3365051	Argument	"""HDFS_NAMENODE_ROLE"""		3364995	0					
ANR	3365052	PrimaryExpression	"""HDFS_NAMENODE_ROLE"""		3364995	0					
ANR	3365053	IdentifierDeclStatement	MyString nnr ( namenodeRole ) ;	434:2:14921:14949	3364995	1	True				
ANR	3365054	IdentifierDecl	nnr ( namenodeRole )		3364995	0					
ANR	3365055	IdentifierDeclType	MyString		3364995	0					
ANR	3365056	Identifier	nnr		3364995	1					
ANR	3365057	Identifier	namenodeRole		3364995	2					
ANR	3365058	IfStatement	"if ( nnr == ""BACKUP"" )"		3364995	2					
ANR	3365059	Condition	"nnr == ""BACKUP"""	435:6:14957:14970	3364995	0	True				
ANR	3365060	EqualityExpression	"nnr == ""BACKUP"""		3364995	0		==			
ANR	3365061	Identifier	nnr		3364995	0					
ANR	3365062	PrimaryExpression	"""BACKUP"""		3364995	1					
ANR	3365063	ExpressionStatement	m_namenodeRole = BACKUP	436:6:14979:15002	3364995	1	True				
ANR	3365064	AssignmentExpression	m_namenodeRole = BACKUP		3364995	0		=			
ANR	3365065	Identifier	m_namenodeRole		3364995	0					
ANR	3365066	Identifier	BACKUP		3364995	1					
ANR	3365067	ElseStatement	else		3364995	0					
ANR	3365068	IfStatement	"if ( nnr == ""CHECKPOINT"" )"		3364995	0					
ANR	3365069	Condition	"nnr == ""CHECKPOINT"""	437:11:15015:15033	3364995	0	True				
ANR	3365070	EqualityExpression	"nnr == ""CHECKPOINT"""		3364995	0		==			
ANR	3365071	Identifier	nnr		3364995	0					
ANR	3365072	PrimaryExpression	"""CHECKPOINT"""		3364995	1					
ANR	3365073	ExpressionStatement	m_namenodeRole = CHECKPOINT	438:6:15042:15069	3364995	1	True				
ANR	3365074	AssignmentExpression	m_namenodeRole = CHECKPOINT		3364995	0		=			
ANR	3365075	Identifier	m_namenodeRole		3364995	0					
ANR	3365076	Identifier	CHECKPOINT		3364995	1					
ANR	3365077	ElseStatement	else		3364995	0					
ANR	3365078	ExpressionStatement	m_namenodeRole = ACTIVE	440:6:15101:15124	3364995	0	True				
ANR	3365079	AssignmentExpression	m_namenodeRole = ACTIVE		3364995	0		=			
ANR	3365080	Identifier	m_namenodeRole		3364995	0					
ANR	3365081	Identifier	ACTIVE		3364995	1					
ANR	3365082	ExpressionStatement	startService ( m_nodeType )	444:8:15160:15186	3364995	2	True				
ANR	3365083	CallExpression	startService ( m_nodeType )		3364995	0					
ANR	3365084	Callee	startService		3364995	0					
ANR	3365085	Identifier	startService		3364995	0					
ANR	3365086	ArgumentList	m_nodeType		3364995	1					
ANR	3365087	Argument	m_nodeType		3364995	0					
ANR	3365088	Identifier	m_nodeType		3364995	0					
ANR	3365089	ReturnType	void		3364995	1					
ANR	3365090	Identifier	Hadoop :: startServices		3364995	2					
ANR	3365091	ParameterList			3364995	3					
ANR	3365092	CFGEntryNode	ENTRY		3364995		True				
ANR	3365093	CFGExitNode	EXIT		3364995		True				
ANR	3365094	Symbol	NULL		3364995						
ANR	3365095	Symbol	ACTIVE		3364995						
ANR	3365096	Symbol	nt		3364995						
ANR	3365097	Symbol	m_namenodeRole		3364995						
ANR	3365098	Symbol	nodeType		3364995						
ANR	3365099	Symbol	HDFS_NAMENODE		3364995						
ANR	3365100	Symbol	BACKUP		3364995						
ANR	3365101	Symbol	namenodeRole		3364995						
ANR	3365102	Symbol	nnr		3364995						
ANR	3365103	Symbol	param		3364995						
ANR	3365104	Symbol	m_nodeType		3364995						
ANR	3365105	Symbol	getServiceTypeByName		3364995						
ANR	3365106	Symbol	CHECKPOINT		3364995						
ANR	3365107	Symbol	HDFS_DATANODE		3364995						
ANR	3365108	Function	Hadoop :: startService	447:0:15191:21214							
ANR	3365109	FunctionDef	Hadoop :: startService (NodeType type)		3365108	0					
ANR	3365110	CompoundStatement		447:43:15234:21214	3365108	0					
ANR	3365111	ExpressionStatement	"dprintf ( D_ALWAYS , ""Starting hdfs node service type = %s\\n"" , getServiceNameByType ( type ) . Value ( ) )"	448:8:15244:15356	3365108	0	True				
ANR	3365112	CallExpression	"dprintf ( D_ALWAYS , ""Starting hdfs node service type = %s\\n"" , getServiceNameByType ( type ) . Value ( ) )"		3365108	0					
ANR	3365113	Callee	dprintf		3365108	0					
ANR	3365114	Identifier	dprintf		3365108	0					
ANR	3365115	ArgumentList	D_ALWAYS		3365108	1					
ANR	3365116	Argument	D_ALWAYS		3365108	0					
ANR	3365117	Identifier	D_ALWAYS		3365108	0					
ANR	3365118	Argument	"""Starting hdfs node service type = %s\\n"""		3365108	1					
ANR	3365119	PrimaryExpression	"""Starting hdfs node service type = %s\\n"""		3365108	0					
ANR	3365120	Argument	getServiceNameByType ( type ) . Value ( )		3365108	2					
ANR	3365121	CallExpression	getServiceNameByType ( type ) . Value ( )		3365108	0					
ANR	3365122	Callee	getServiceNameByType ( type ) . Value		3365108	0					
ANR	3365123	MemberAccess	getServiceNameByType ( type ) . Value		3365108	0					
ANR	3365124	CallExpression	getServiceNameByType ( type )		3365108	0					
ANR	3365125	Callee	getServiceNameByType		3365108	0					
ANR	3365126	Identifier	getServiceNameByType		3365108	0					
ANR	3365127	ArgumentList	type		3365108	1					
ANR	3365128	Argument	type		3365108	0					
ANR	3365129	Identifier	type		3365108	0					
ANR	3365130	Identifier	Value		3365108	1					
ANR	3365131	ArgumentList			3365108	1					
ANR	3365132	IdentifierDeclStatement	ArgList arglist ;	451:8:15367:15382	3365108	1	True				
ANR	3365133	IdentifierDecl	arglist		3365108	0					
ANR	3365134	IdentifierDeclType	ArgList		3365108	0					
ANR	3365135	Identifier	arglist		3365108	1					
ANR	3365136	IdentifierDeclStatement	"int retval = java_config ( m_java , & arglist , & m_classpath ) ;"	453:8:15393:15449	3365108	2	True				
ANR	3365137	IdentifierDecl	"retval = java_config ( m_java , & arglist , & m_classpath )"		3365108	0					
ANR	3365138	IdentifierDeclType	int		3365108	0					
ANR	3365139	Identifier	retval		3365108	1					
ANR	3365140	AssignmentExpression	"retval = java_config ( m_java , & arglist , & m_classpath )"		3365108	2		=			
ANR	3365141	Identifier	retval		3365108	0					
ANR	3365142	CallExpression	"java_config ( m_java , & arglist , & m_classpath )"		3365108	1					
ANR	3365143	Callee	java_config		3365108	0					
ANR	3365144	Identifier	java_config		3365108	0					
ANR	3365145	ArgumentList	m_java		3365108	1					
ANR	3365146	Argument	m_java		3365108	0					
ANR	3365147	Identifier	m_java		3365108	0					
ANR	3365148	Argument	& arglist		3365108	1					
ANR	3365149	UnaryOperationExpression	& arglist		3365108	0					
ANR	3365150	UnaryOperator	&		3365108	0					
ANR	3365151	Identifier	arglist		3365108	1					
ANR	3365152	Argument	& m_classpath		3365108	2					
ANR	3365153	UnaryOperationExpression	& m_classpath		3365108	0					
ANR	3365154	UnaryOperator	&		3365108	0					
ANR	3365155	Identifier	m_classpath		3365108	1					
ANR	3365156	ExpressionStatement	"dprintf ( D_ALWAYS , ""Retval: %d\\n"" , retval )"	454:2:15453:15494	3365108	3	True				
ANR	3365157	CallExpression	"dprintf ( D_ALWAYS , ""Retval: %d\\n"" , retval )"		3365108	0					
ANR	3365158	Callee	dprintf		3365108	0					
ANR	3365159	Identifier	dprintf		3365108	0					
ANR	3365160	ArgumentList	D_ALWAYS		3365108	1					
ANR	3365161	Argument	D_ALWAYS		3365108	0					
ANR	3365162	Identifier	D_ALWAYS		3365108	0					
ANR	3365163	Argument	"""Retval: %d\\n"""		3365108	1					
ANR	3365164	PrimaryExpression	"""Retval: %d\\n"""		3365108	0					
ANR	3365165	Argument	retval		3365108	2					
ANR	3365166	Identifier	retval		3365108	0					
ANR	3365167	IdentifierDeclStatement	"char * ldir = param ( ""LOG"" ) ;"	456:8:15505:15530	3365108	4	True				
ANR	3365168	IdentifierDecl	"* ldir = param ( ""LOG"" )"		3365108	0					
ANR	3365169	IdentifierDeclType	char *		3365108	0					
ANR	3365170	Identifier	ldir		3365108	1					
ANR	3365171	AssignmentExpression	"* ldir = param ( ""LOG"" )"		3365108	2		=			
ANR	3365172	Identifier	ldir		3365108	0					
ANR	3365173	CallExpression	"param ( ""LOG"" )"		3365108	1					
ANR	3365174	Callee	param		3365108	0					
ANR	3365175	Identifier	param		3365108	0					
ANR	3365176	ArgumentList	"""LOG"""		3365108	1					
ANR	3365177	Argument	"""LOG"""		3365108	0					
ANR	3365178	PrimaryExpression	"""LOG"""		3365108	0					
ANR	3365179	IfStatement	if ( ldir != NULL )		3365108	5					
ANR	3365180	Condition	ldir != NULL	457:12:15544:15555	3365108	0	True				
ANR	3365181	EqualityExpression	ldir != NULL		3365108	0		!=			
ANR	3365182	Identifier	ldir		3365108	0					
ANR	3365183	Identifier	NULL		3365108	1					
ANR	3365184	CompoundStatement		20:16:698:714	3365108	1					
ANR	3365185	IdentifierDeclStatement	"char * log4j = param ( ""HDFS_LOG4J"" ) ;"	461:16:15693:15726	3365108	0	True				
ANR	3365186	IdentifierDecl	"* log4j = param ( ""HDFS_LOG4J"" )"		3365108	0					
ANR	3365187	IdentifierDeclType	char *		3365108	0					
ANR	3365188	Identifier	log4j		3365108	1					
ANR	3365189	AssignmentExpression	"* log4j = param ( ""HDFS_LOG4J"" )"		3365108	2		=			
ANR	3365190	Identifier	log4j		3365108	0					
ANR	3365191	CallExpression	"param ( ""HDFS_LOG4J"" )"		3365108	1					
ANR	3365192	Callee	param		3365108	0					
ANR	3365193	Identifier	param		3365108	0					
ANR	3365194	ArgumentList	"""HDFS_LOG4J"""		3365108	1					
ANR	3365195	Argument	"""HDFS_LOG4J"""		3365108	0					
ANR	3365196	PrimaryExpression	"""HDFS_LOG4J"""		3365108	0					
ANR	3365197	IdentifierDeclStatement	MyString log4jarg ;	462:16:15744:15761	3365108	1	True				
ANR	3365198	IdentifierDecl	log4jarg		3365108	0					
ANR	3365199	IdentifierDeclType	MyString		3365108	0					
ANR	3365200	Identifier	log4jarg		3365108	1					
ANR	3365201	ExpressionStatement	"log4jarg . sprintf ( ""-Dhadoop.root.logger=%s,DRFA"" , ( log4j != NULL ? log4j : ""INFO"" ) )"	463:16:15779:15861	3365108	2	True				
ANR	3365202	CallExpression	"log4jarg . sprintf ( ""-Dhadoop.root.logger=%s,DRFA"" , ( log4j != NULL ? log4j : ""INFO"" ) )"		3365108	0					
ANR	3365203	Callee	log4jarg . sprintf		3365108	0					
ANR	3365204	MemberAccess	log4jarg . sprintf		3365108	0					
ANR	3365205	Identifier	log4jarg		3365108	0					
ANR	3365206	Identifier	sprintf		3365108	1					
ANR	3365207	ArgumentList	"""-Dhadoop.root.logger=%s,DRFA"""		3365108	1					
ANR	3365208	Argument	"""-Dhadoop.root.logger=%s,DRFA"""		3365108	0					
ANR	3365209	PrimaryExpression	"""-Dhadoop.root.logger=%s,DRFA"""		3365108	0					
ANR	3365210	Argument	"log4j != NULL ? log4j : ""INFO"""		3365108	1					
ANR	3365211	ConditionalExpression	"log4j != NULL ? log4j : ""INFO"""		3365108	0					
ANR	3365212	Condition	log4j != NULL		3365108	0					
ANR	3365213	EqualityExpression	log4j != NULL		3365108	0		!=			
ANR	3365214	Identifier	log4j		3365108	0					
ANR	3365215	Identifier	NULL		3365108	1					
ANR	3365216	Identifier	log4j		3365108	1					
ANR	3365217	PrimaryExpression	"""INFO"""		3365108	2					
ANR	3365218	ExpressionStatement	arglist . AppendArg ( log4jarg . Value ( ) )	464:16:15879:15914	3365108	3	True				
ANR	3365219	CallExpression	arglist . AppendArg ( log4jarg . Value ( ) )		3365108	0					
ANR	3365220	Callee	arglist . AppendArg		3365108	0					
ANR	3365221	MemberAccess	arglist . AppendArg		3365108	0					
ANR	3365222	Identifier	arglist		3365108	0					
ANR	3365223	Identifier	AppendArg		3365108	1					
ANR	3365224	ArgumentList	log4jarg . Value ( )		3365108	1					
ANR	3365225	Argument	log4jarg . Value ( )		3365108	0					
ANR	3365226	CallExpression	log4jarg . Value ( )		3365108	0					
ANR	3365227	Callee	log4jarg . Value		3365108	0					
ANR	3365228	MemberAccess	log4jarg . Value		3365108	0					
ANR	3365229	Identifier	log4jarg		3365108	0					
ANR	3365230	Identifier	Value		3365108	1					
ANR	3365231	ArgumentList			3365108	1					
ANR	3365232	IdentifierDeclStatement	MyString log_dir ;	466:16:15933:15949	3365108	4	True				
ANR	3365233	IdentifierDecl	log_dir		3365108	0					
ANR	3365234	IdentifierDeclType	MyString		3365108	0					
ANR	3365235	Identifier	log_dir		3365108	1					
ANR	3365236	ExpressionStatement	"log_dir . sprintf ( ""-Dhadoop.log.dir=%s/HDFS_Logs"" , ldir )"	467:16:15967:16021	3365108	5	True				
ANR	3365237	CallExpression	"log_dir . sprintf ( ""-Dhadoop.log.dir=%s/HDFS_Logs"" , ldir )"		3365108	0					
ANR	3365238	Callee	log_dir . sprintf		3365108	0					
ANR	3365239	MemberAccess	log_dir . sprintf		3365108	0					
ANR	3365240	Identifier	log_dir		3365108	0					
ANR	3365241	Identifier	sprintf		3365108	1					
ANR	3365242	ArgumentList	"""-Dhadoop.log.dir=%s/HDFS_Logs"""		3365108	1					
ANR	3365243	Argument	"""-Dhadoop.log.dir=%s/HDFS_Logs"""		3365108	0					
ANR	3365244	PrimaryExpression	"""-Dhadoop.log.dir=%s/HDFS_Logs"""		3365108	0					
ANR	3365245	Argument	ldir		3365108	1					
ANR	3365246	Identifier	ldir		3365108	0					
ANR	3365247	ExpressionStatement	arglist . AppendArg ( log_dir . Value ( ) )	468:16:16039:16073	3365108	6	True				
ANR	3365248	CallExpression	arglist . AppendArg ( log_dir . Value ( ) )		3365108	0					
ANR	3365249	Callee	arglist . AppendArg		3365108	0					
ANR	3365250	MemberAccess	arglist . AppendArg		3365108	0					
ANR	3365251	Identifier	arglist		3365108	0					
ANR	3365252	Identifier	AppendArg		3365108	1					
ANR	3365253	ArgumentList	log_dir . Value ( )		3365108	1					
ANR	3365254	Argument	log_dir . Value ( )		3365108	0					
ANR	3365255	CallExpression	log_dir . Value ( )		3365108	0					
ANR	3365256	Callee	log_dir . Value		3365108	0					
ANR	3365257	MemberAccess	log_dir . Value		3365108	0					
ANR	3365258	Identifier	log_dir		3365108	0					
ANR	3365259	Identifier	Value		3365108	1					
ANR	3365260	ArgumentList			3365108	1					
ANR	3365261	ExpressionStatement	"arglist . AppendArg ( ""-Dhadoop.log.file=hdfs.log"" )"	469:16:16091:16138	3365108	7	True				
ANR	3365262	CallExpression	"arglist . AppendArg ( ""-Dhadoop.log.file=hdfs.log"" )"		3365108	0					
ANR	3365263	Callee	arglist . AppendArg		3365108	0					
ANR	3365264	MemberAccess	arglist . AppendArg		3365108	0					
ANR	3365265	Identifier	arglist		3365108	0					
ANR	3365266	Identifier	AppendArg		3365108	1					
ANR	3365267	ArgumentList	"""-Dhadoop.log.file=hdfs.log"""		3365108	1					
ANR	3365268	Argument	"""-Dhadoop.log.file=hdfs.log"""		3365108	0					
ANR	3365269	PrimaryExpression	"""-Dhadoop.log.file=hdfs.log"""		3365108	0					
ANR	3365270	ExpressionStatement	free ( ldir )	470:16:16156:16166	3365108	8	True				
ANR	3365271	CallExpression	free ( ldir )		3365108	0					
ANR	3365272	Callee	free		3365108	0					
ANR	3365273	Identifier	free		3365108	0					
ANR	3365274	ArgumentList	ldir		3365108	1					
ANR	3365275	Argument	ldir		3365108	0					
ANR	3365276	Identifier	ldir		3365108	0					
ANR	3365277	IfStatement	if ( type == HDFS_NAMENODE )		3365108	6					
ANR	3365278	Condition	type == HDFS_NAMENODE	473:12:16191:16211	3365108	0	True				
ANR	3365279	EqualityExpression	type == HDFS_NAMENODE		3365108	0		==			
ANR	3365280	Identifier	type		3365108	0					
ANR	3365281	Identifier	HDFS_NAMENODE		3365108	1					
ANR	3365282	CompoundStatement		27:35:979:979	3365108	1					
ANR	3365283	ExpressionStatement	arglist . AppendArg ( m_nameNodeClass )	474:12:16228:16262	3365108	0	True				
ANR	3365284	CallExpression	arglist . AppendArg ( m_nameNodeClass )		3365108	0					
ANR	3365285	Callee	arglist . AppendArg		3365108	0					
ANR	3365286	MemberAccess	arglist . AppendArg		3365108	0					
ANR	3365287	Identifier	arglist		3365108	0					
ANR	3365288	Identifier	AppendArg		3365108	1					
ANR	3365289	ArgumentList	m_nameNodeClass		3365108	1					
ANR	3365290	Argument	m_nameNodeClass		3365108	0					
ANR	3365291	Identifier	m_nameNodeClass		3365108	0					
ANR	3365292	SwitchStatement	switch ( m_namenodeRole )		3365108	1					
ANR	3365293	Condition	m_namenodeRole	476:13:16278:16291	3365108	0	True				
ANR	3365294	Identifier	m_namenodeRole		3365108	0					
ANR	3365295	CompoundStatement		30:29:1059:1059	3365108	1					
ANR	3365296	Label	case CHECKPOINT :	477:10:16306:16321	3365108	0	True				
ANR	3365297	Identifier	CHECKPOINT		3365108	0					
ANR	3365298	ExpressionStatement	"arglist . AppendArg ( ""-checkpoint"" )"	477:28:16324:16356	3365108	1	True				
ANR	3365299	CallExpression	"arglist . AppendArg ( ""-checkpoint"" )"		3365108	0					
ANR	3365300	Callee	arglist . AppendArg		3365108	0					
ANR	3365301	MemberAccess	arglist . AppendArg		3365108	0					
ANR	3365302	Identifier	arglist		3365108	0					
ANR	3365303	Identifier	AppendArg		3365108	1					
ANR	3365304	ArgumentList	"""-checkpoint"""		3365108	1					
ANR	3365305	Argument	"""-checkpoint"""		3365108	0					
ANR	3365306	PrimaryExpression	"""-checkpoint"""		3365108	0					
ANR	3365307	BreakStatement	break ;	478:13:16371:16376	3365108	2	True				
ANR	3365308	Label	case BACKUP :	479:10:16388:16399	3365108	3	True				
ANR	3365309	Identifier	BACKUP		3365108	0					
ANR	3365310	ExpressionStatement	"arglist . AppendArg ( ""-backup"" )"	479:24:16402:16430	3365108	4	True				
ANR	3365311	CallExpression	"arglist . AppendArg ( ""-backup"" )"		3365108	0					
ANR	3365312	Callee	arglist . AppendArg		3365108	0					
ANR	3365313	MemberAccess	arglist . AppendArg		3365108	0					
ANR	3365314	Identifier	arglist		3365108	0					
ANR	3365315	Identifier	AppendArg		3365108	1					
ANR	3365316	ArgumentList	"""-backup"""		3365108	1					
ANR	3365317	Argument	"""-backup"""		3365108	0					
ANR	3365318	PrimaryExpression	"""-backup"""		3365108	0					
ANR	3365319	BreakStatement	break ;	480:13:16445:16450	3365108	5	True				
ANR	3365320	Label	default :	481:9:16461:16468	3365108	6	True				
ANR	3365321	Identifier	default		3365108	0					
ANR	3365322	ExpressionStatement	"arglist . AppendArg ( ""-regular"" )"	482:13:16498:16527	3365108	7	True				
ANR	3365323	CallExpression	"arglist . AppendArg ( ""-regular"" )"		3365108	0					
ANR	3365324	Callee	arglist . AppendArg		3365108	0					
ANR	3365325	MemberAccess	arglist . AppendArg		3365108	0					
ANR	3365326	Identifier	arglist		3365108	0					
ANR	3365327	Identifier	AppendArg		3365108	1					
ANR	3365328	ArgumentList	"""-regular"""		3365108	1					
ANR	3365329	Argument	"""-regular"""		3365108	0					
ANR	3365330	PrimaryExpression	"""-regular"""		3365108	0					
ANR	3365331	ElseStatement	else		3365108	0					
ANR	3365332	IfStatement	if ( type == HDFS_DATANODE )		3365108	0					
ANR	3365333	Condition	type == HDFS_DATANODE	485:17:16564:16584	3365108	0	True				
ANR	3365334	EqualityExpression	type == HDFS_DATANODE		3365108	0		==			
ANR	3365335	Identifier	type		3365108	0					
ANR	3365336	Identifier	HDFS_DATANODE		3365108	1					
ANR	3365337	CompoundStatement		39:40:1352:1352	3365108	1					
ANR	3365338	ExpressionStatement	"arglist . InsertArg ( m_java . Value ( ) , 0 )"	489:9:16807:16843	3365108	0	True				
ANR	3365339	CallExpression	"arglist . InsertArg ( m_java . Value ( ) , 0 )"		3365108	0					
ANR	3365340	Callee	arglist . InsertArg		3365108	0					
ANR	3365341	MemberAccess	arglist . InsertArg		3365108	0					
ANR	3365342	Identifier	arglist		3365108	0					
ANR	3365343	Identifier	InsertArg		3365108	1					
ANR	3365344	ArgumentList	m_java . Value ( )		3365108	1					
ANR	3365345	Argument	m_java . Value ( )		3365108	0					
ANR	3365346	CallExpression	m_java . Value ( )		3365108	0					
ANR	3365347	Callee	m_java . Value		3365108	0					
ANR	3365348	MemberAccess	m_java . Value		3365108	0					
ANR	3365349	Identifier	m_java		3365108	0					
ANR	3365350	Identifier	Value		3365108	1					
ANR	3365351	ArgumentList			3365108	1					
ANR	3365352	Argument	0		3365108	1					
ANR	3365353	PrimaryExpression	0		3365108	0					
ANR	3365354	ExpressionStatement	arglist . AppendArg ( m_dataNodeClass )	490:3:16848:16882	3365108	1	True				
ANR	3365355	CallExpression	arglist . AppendArg ( m_dataNodeClass )		3365108	0					
ANR	3365356	Callee	arglist . AppendArg		3365108	0					
ANR	3365357	MemberAccess	arglist . AppendArg		3365108	0					
ANR	3365358	Identifier	arglist		3365108	0					
ANR	3365359	Identifier	AppendArg		3365108	1					
ANR	3365360	ArgumentList	m_dataNodeClass		3365108	1					
ANR	3365361	Argument	m_dataNodeClass		3365108	0					
ANR	3365362	Identifier	m_dataNodeClass		3365108	0					
ANR	3365363	IdentifierDeclStatement	int stdoutFds [ 2 ] ;	493:8:16903:16919	3365108	7	True				
ANR	3365364	IdentifierDecl	stdoutFds [ 2 ]		3365108	0					
ANR	3365365	IdentifierDeclType	int [ 2 ]		3365108	0					
ANR	3365366	Identifier	stdoutFds		3365108	1					
ANR	3365367	PrimaryExpression	2		3365108	2					
ANR	3365368	ExpressionStatement	stdoutFds [ 0 ] = - 1	494:8:16929:16946	3365108	8	True				
ANR	3365369	AssignmentExpression	stdoutFds [ 0 ] = - 1		3365108	0		=			
ANR	3365370	ArrayIndexing	stdoutFds [ 0 ]		3365108	0					
ANR	3365371	Identifier	stdoutFds		3365108	0					
ANR	3365372	PrimaryExpression	0		3365108	1					
ANR	3365373	UnaryOperationExpression	- 1		3365108	1					
ANR	3365374	UnaryOperator	-		3365108	0					
ANR	3365375	PrimaryExpression	1		3365108	1					
ANR	3365376	ExpressionStatement	stdoutFds [ 1 ] = - 1	495:8:16979:16996	3365108	9	True				
ANR	3365377	AssignmentExpression	stdoutFds [ 1 ] = - 1		3365108	0		=			
ANR	3365378	ArrayIndexing	stdoutFds [ 1 ]		3365108	0					
ANR	3365379	Identifier	stdoutFds		3365108	0					
ANR	3365380	PrimaryExpression	1		3365108	1					
ANR	3365381	UnaryOperationExpression	- 1		3365108	1					
ANR	3365382	UnaryOperator	-		3365108	0					
ANR	3365383	PrimaryExpression	1		3365108	1					
ANR	3365384	IfStatement	"if ( ! daemonCore -> Create_Pipe ( stdoutFds , true , false , true ) )"		3365108	10					
ANR	3365385	Condition	"! daemonCore -> Create_Pipe ( stdoutFds , true , false , true )"	497:12:17033:17087	3365108	0	True				
ANR	3365386	UnaryOperationExpression	"! daemonCore -> Create_Pipe ( stdoutFds , true , false , true )"		3365108	0					
ANR	3365387	UnaryOperator	!		3365108	0					
ANR	3365388	CallExpression	"daemonCore -> Create_Pipe ( stdoutFds , true , false , true )"		3365108	1					
ANR	3365389	Callee	daemonCore -> Create_Pipe		3365108	0					
ANR	3365390	PtrMemberAccess	daemonCore -> Create_Pipe		3365108	0					
ANR	3365391	Identifier	daemonCore		3365108	0					
ANR	3365392	Identifier	Create_Pipe		3365108	1					
ANR	3365393	ArgumentList	stdoutFds		3365108	1					
ANR	3365394	Argument	stdoutFds		3365108	0					
ANR	3365395	Identifier	stdoutFds		3365108	0					
ANR	3365396	Argument	true		3365108	1					
ANR	3365397	Identifier	true		3365108	0					
ANR	3365398	Argument	false		3365108	2					
ANR	3365399	Identifier	false		3365108	0					
ANR	3365400	Argument	true		3365108	3					
ANR	3365401	Identifier	true		3365108	0					
ANR	3365402	CompoundStatement		51:70:1856:1856	3365108	1					
ANR	3365403	ExpressionStatement	"dprintf ( D_ALWAYS , ""Couldn't create a stdout pipe\\n"" )"	498:16:17109:17161	3365108	0	True				
ANR	3365404	CallExpression	"dprintf ( D_ALWAYS , ""Couldn't create a stdout pipe\\n"" )"		3365108	0					
ANR	3365405	Callee	dprintf		3365108	0					
ANR	3365406	Identifier	dprintf		3365108	0					
ANR	3365407	ArgumentList	D_ALWAYS		3365108	1					
ANR	3365408	Argument	D_ALWAYS		3365108	0					
ANR	3365409	Identifier	D_ALWAYS		3365108	0					
ANR	3365410	Argument	"""Couldn't create a stdout pipe\\n"""		3365108	1					
ANR	3365411	PrimaryExpression	"""Couldn't create a stdout pipe\\n"""		3365108	0					
ANR	3365412	ElseStatement	else		3365108	0					
ANR	3365413	CompoundStatement		53:15:1943:1943	3365108	0					
ANR	3365414	IfStatement	"if ( ! daemonCore -> Register_Pipe ( stdoutFds [ 0 ] , ""hadoop stdout"" , static_cast < PipeHandlercpp > ( & Hadoop :: stdoutHandler ) , ""stdout"" , this ) )"		3365108	0					
ANR	3365415	Condition	"! daemonCore -> Register_Pipe ( stdoutFds [ 0 ] , ""hadoop stdout"" , static_cast < PipeHandlercpp > ( & Hadoop :: stdoutHandler ) , ""stdout"" , this )"	500:20:17200:17374	3365108	0	True				
ANR	3365416	UnaryOperationExpression	"! daemonCore -> Register_Pipe ( stdoutFds [ 0 ] , ""hadoop stdout"" , static_cast < PipeHandlercpp > ( & Hadoop :: stdoutHandler ) , ""stdout"" , this )"		3365108	0					
ANR	3365417	UnaryOperator	!		3365108	0					
ANR	3365418	CallExpression	"daemonCore -> Register_Pipe ( stdoutFds [ 0 ] , ""hadoop stdout"" , static_cast < PipeHandlercpp > ( & Hadoop :: stdoutHandler ) , ""stdout"" , this )"		3365108	1					
ANR	3365419	Callee	daemonCore -> Register_Pipe		3365108	0					
ANR	3365420	PtrMemberAccess	daemonCore -> Register_Pipe		3365108	0					
ANR	3365421	Identifier	daemonCore		3365108	0					
ANR	3365422	Identifier	Register_Pipe		3365108	1					
ANR	3365423	ArgumentList	stdoutFds [ 0 ]		3365108	1					
ANR	3365424	Argument	stdoutFds [ 0 ]		3365108	0					
ANR	3365425	ArrayIndexing	stdoutFds [ 0 ]		3365108	0					
ANR	3365426	Identifier	stdoutFds		3365108	0					
ANR	3365427	PrimaryExpression	0		3365108	1					
ANR	3365428	Argument	"""hadoop stdout"""		3365108	1					
ANR	3365429	PrimaryExpression	"""hadoop stdout"""		3365108	0					
ANR	3365430	Argument	static_cast < PipeHandlercpp > ( & Hadoop :: stdoutHandler )		3365108	2					
ANR	3365431	RelationalExpression	static_cast < PipeHandlercpp > ( & Hadoop :: stdoutHandler )		3365108	0		<			
ANR	3365432	Identifier	static_cast		3365108	0					
ANR	3365433	RelationalExpression	PipeHandlercpp > ( & Hadoop :: stdoutHandler )		3365108	1		>			
ANR	3365434	Identifier	PipeHandlercpp		3365108	0					
ANR	3365435	UnaryOperationExpression	& Hadoop :: stdoutHandler		3365108	1					
ANR	3365436	UnaryOperator	&		3365108	0					
ANR	3365437	Identifier	Hadoop :: stdoutHandler		3365108	1					
ANR	3365438	Argument	"""stdout"""		3365108	3					
ANR	3365439	PrimaryExpression	"""stdout"""		3365108	0					
ANR	3365440	Argument	this		3365108	4					
ANR	3365441	Identifier	this		3365108	0					
ANR	3365442	CompoundStatement		56:42:2143:2143	3365108	1					
ANR	3365443	ExpressionStatement	"dprintf ( D_ALWAYS , ""Couldn't register stdout pipe\\n"" )"	504:24:17405:17457	3365108	0	True				
ANR	3365444	CallExpression	"dprintf ( D_ALWAYS , ""Couldn't register stdout pipe\\n"" )"		3365108	0					
ANR	3365445	Callee	dprintf		3365108	0					
ANR	3365446	Identifier	dprintf		3365108	0					
ANR	3365447	ArgumentList	D_ALWAYS		3365108	1					
ANR	3365448	Argument	D_ALWAYS		3365108	0					
ANR	3365449	Identifier	D_ALWAYS		3365108	0					
ANR	3365450	Argument	"""Couldn't register stdout pipe\\n"""		3365108	1					
ANR	3365451	PrimaryExpression	"""Couldn't register stdout pipe\\n"""		3365108	0					
ANR	3365452	ElseStatement	else		3365108	0					
ANR	3365453	CompoundStatement		59:23:2271:2271	3365108	0					
ANR	3365454	ExpressionStatement	m_stdOut = stdoutFds [ 0 ]	506:24:17532:17555	3365108	0	True				
ANR	3365455	AssignmentExpression	m_stdOut = stdoutFds [ 0 ]		3365108	0		=			
ANR	3365456	Identifier	m_stdOut		3365108	0					
ANR	3365457	ArrayIndexing	stdoutFds [ 0 ]		3365108	1					
ANR	3365458	Identifier	stdoutFds		3365108	0					
ANR	3365459	PrimaryExpression	0		3365108	1					
ANR	3365460	IdentifierDeclStatement	int stderrFds [ 2 ] ;	510:8:17594:17610	3365108	11	True				
ANR	3365461	IdentifierDecl	stderrFds [ 2 ]		3365108	0					
ANR	3365462	IdentifierDeclType	int [ 2 ]		3365108	0					
ANR	3365463	Identifier	stderrFds		3365108	1					
ANR	3365464	PrimaryExpression	2		3365108	2					
ANR	3365465	ExpressionStatement	stderrFds [ 0 ] = - 1	511:8:17620:17637	3365108	12	True				
ANR	3365466	AssignmentExpression	stderrFds [ 0 ] = - 1		3365108	0		=			
ANR	3365467	ArrayIndexing	stderrFds [ 0 ]		3365108	0					
ANR	3365468	Identifier	stderrFds		3365108	0					
ANR	3365469	PrimaryExpression	0		3365108	1					
ANR	3365470	UnaryOperationExpression	- 1		3365108	1					
ANR	3365471	UnaryOperator	-		3365108	0					
ANR	3365472	PrimaryExpression	1		3365108	1					
ANR	3365473	ExpressionStatement	stderrFds [ 1 ] = - 1	512:8:17670:17687	3365108	13	True				
ANR	3365474	AssignmentExpression	stderrFds [ 1 ] = - 1		3365108	0		=			
ANR	3365475	ArrayIndexing	stderrFds [ 1 ]		3365108	0					
ANR	3365476	Identifier	stderrFds		3365108	0					
ANR	3365477	PrimaryExpression	1		3365108	1					
ANR	3365478	UnaryOperationExpression	- 1		3365108	1					
ANR	3365479	UnaryOperator	-		3365108	0					
ANR	3365480	PrimaryExpression	1		3365108	1					
ANR	3365481	IfStatement	"if ( ! daemonCore -> Create_Pipe ( stderrFds , true , false , true ) )"		3365108	14					
ANR	3365482	Condition	"! daemonCore -> Create_Pipe ( stderrFds , true , false , true )"	513:12:17723:17777	3365108	0	True				
ANR	3365483	UnaryOperationExpression	"! daemonCore -> Create_Pipe ( stderrFds , true , false , true )"		3365108	0					
ANR	3365484	UnaryOperator	!		3365108	0					
ANR	3365485	CallExpression	"daemonCore -> Create_Pipe ( stderrFds , true , false , true )"		3365108	1					
ANR	3365486	Callee	daemonCore -> Create_Pipe		3365108	0					
ANR	3365487	PtrMemberAccess	daemonCore -> Create_Pipe		3365108	0					
ANR	3365488	Identifier	daemonCore		3365108	0					
ANR	3365489	Identifier	Create_Pipe		3365108	1					
ANR	3365490	ArgumentList	stderrFds		3365108	1					
ANR	3365491	Argument	stderrFds		3365108	0					
ANR	3365492	Identifier	stderrFds		3365108	0					
ANR	3365493	Argument	true		3365108	1					
ANR	3365494	Identifier	true		3365108	0					
ANR	3365495	Argument	false		3365108	2					
ANR	3365496	Identifier	false		3365108	0					
ANR	3365497	Argument	true		3365108	3					
ANR	3365498	Identifier	true		3365108	0					
ANR	3365499	CompoundStatement		67:70:2546:2546	3365108	1					
ANR	3365500	ExpressionStatement	"dprintf ( D_ALWAYS , ""Couldn't create a stderr pipe\\n"" )"	514:16:17799:17851	3365108	0	True				
ANR	3365501	CallExpression	"dprintf ( D_ALWAYS , ""Couldn't create a stderr pipe\\n"" )"		3365108	0					
ANR	3365502	Callee	dprintf		3365108	0					
ANR	3365503	Identifier	dprintf		3365108	0					
ANR	3365504	ArgumentList	D_ALWAYS		3365108	1					
ANR	3365505	Argument	D_ALWAYS		3365108	0					
ANR	3365506	Identifier	D_ALWAYS		3365108	0					
ANR	3365507	Argument	"""Couldn't create a stderr pipe\\n"""		3365108	1					
ANR	3365508	PrimaryExpression	"""Couldn't create a stderr pipe\\n"""		3365108	0					
ANR	3365509	ElseStatement	else		3365108	0					
ANR	3365510	CompoundStatement		69:15:2633:2633	3365108	0					
ANR	3365511	IfStatement	"if ( ! daemonCore -> Register_Pipe ( stderrFds [ 0 ] , ""hadoop stderr"" , static_cast < PipeHandlercpp > ( & Hadoop :: stderrHandler ) , ""stderr"" , this ) )"		3365108	0					
ANR	3365512	Condition	"! daemonCore -> Register_Pipe ( stderrFds [ 0 ] , ""hadoop stderr"" , static_cast < PipeHandlercpp > ( & Hadoop :: stderrHandler ) , ""stderr"" , this )"	516:20:17890:18065	3365108	0	True				
ANR	3365513	UnaryOperationExpression	"! daemonCore -> Register_Pipe ( stderrFds [ 0 ] , ""hadoop stderr"" , static_cast < PipeHandlercpp > ( & Hadoop :: stderrHandler ) , ""stderr"" , this )"		3365108	0					
ANR	3365514	UnaryOperator	!		3365108	0					
ANR	3365515	CallExpression	"daemonCore -> Register_Pipe ( stderrFds [ 0 ] , ""hadoop stderr"" , static_cast < PipeHandlercpp > ( & Hadoop :: stderrHandler ) , ""stderr"" , this )"		3365108	1					
ANR	3365516	Callee	daemonCore -> Register_Pipe		3365108	0					
ANR	3365517	PtrMemberAccess	daemonCore -> Register_Pipe		3365108	0					
ANR	3365518	Identifier	daemonCore		3365108	0					
ANR	3365519	Identifier	Register_Pipe		3365108	1					
ANR	3365520	ArgumentList	stderrFds [ 0 ]		3365108	1					
ANR	3365521	Argument	stderrFds [ 0 ]		3365108	0					
ANR	3365522	ArrayIndexing	stderrFds [ 0 ]		3365108	0					
ANR	3365523	Identifier	stderrFds		3365108	0					
ANR	3365524	PrimaryExpression	0		3365108	1					
ANR	3365525	Argument	"""hadoop stderr"""		3365108	1					
ANR	3365526	PrimaryExpression	"""hadoop stderr"""		3365108	0					
ANR	3365527	Argument	static_cast < PipeHandlercpp > ( & Hadoop :: stderrHandler )		3365108	2					
ANR	3365528	RelationalExpression	static_cast < PipeHandlercpp > ( & Hadoop :: stderrHandler )		3365108	0		<			
ANR	3365529	Identifier	static_cast		3365108	0					
ANR	3365530	RelationalExpression	PipeHandlercpp > ( & Hadoop :: stderrHandler )		3365108	1		>			
ANR	3365531	Identifier	PipeHandlercpp		3365108	0					
ANR	3365532	UnaryOperationExpression	& Hadoop :: stderrHandler		3365108	1					
ANR	3365533	UnaryOperator	&		3365108	0					
ANR	3365534	Identifier	Hadoop :: stderrHandler		3365108	1					
ANR	3365535	Argument	"""stderr"""		3365108	3					
ANR	3365536	PrimaryExpression	"""stderr"""		3365108	0					
ANR	3365537	Argument	this		3365108	4					
ANR	3365538	Identifier	this		3365108	0					
ANR	3365539	CompoundStatement		72:42:2834:2834	3365108	1					
ANR	3365540	ExpressionStatement	"dprintf ( D_ALWAYS , ""Couldn't register stderr, pipe\\n"" )"	520:24:18096:18149	3365108	0	True				
ANR	3365541	CallExpression	"dprintf ( D_ALWAYS , ""Couldn't register stderr, pipe\\n"" )"		3365108	0					
ANR	3365542	Callee	dprintf		3365108	0					
ANR	3365543	Identifier	dprintf		3365108	0					
ANR	3365544	ArgumentList	D_ALWAYS		3365108	1					
ANR	3365545	Argument	D_ALWAYS		3365108	0					
ANR	3365546	Identifier	D_ALWAYS		3365108	0					
ANR	3365547	Argument	"""Couldn't register stderr, pipe\\n"""		3365108	1					
ANR	3365548	PrimaryExpression	"""Couldn't register stderr, pipe\\n"""		3365108	0					
ANR	3365549	ElseStatement	else		3365108	0					
ANR	3365550	CompoundStatement		75:23:2939:2939	3365108	0					
ANR	3365551	ExpressionStatement	m_stdErr = stderrFds [ 0 ]	522:24:18200:18223	3365108	0	True				
ANR	3365552	AssignmentExpression	m_stdErr = stderrFds [ 0 ]		3365108	0		=			
ANR	3365553	Identifier	m_stdErr		3365108	0					
ANR	3365554	ArrayIndexing	stderrFds [ 0 ]		3365108	1					
ANR	3365555	Identifier	stderrFds		3365108	0					
ANR	3365556	PrimaryExpression	0		3365108	1					
ANR	3365557	IdentifierDeclStatement	Directory dir ( m_nameNodeDir . Value ( ) ) ;	526:8:18262:18298	3365108	15	True				
ANR	3365558	IdentifierDecl	dir ( m_nameNodeDir . Value ( ) )		3365108	0					
ANR	3365559	IdentifierDeclType	Directory		3365108	0					
ANR	3365560	Identifier	dir		3365108	1					
ANR	3365561	CallExpression	m_nameNodeDir . Value ( )		3365108	2					
ANR	3365562	Callee	m_nameNodeDir . Value		3365108	0					
ANR	3365563	MemberAccess	m_nameNodeDir . Value		3365108	0					
ANR	3365564	Identifier	m_nameNodeDir		3365108	0					
ANR	3365565	Identifier	Value		3365108	1					
ANR	3365566	ArgumentList			3365108	1					
ANR	3365567	IfStatement	if ( type == HDFS_NAMENODE )		3365108	16					
ANR	3365568	Condition	type == HDFS_NAMENODE	529:12:18314:18334	3365108	0	True				
ANR	3365569	EqualityExpression	type == HDFS_NAMENODE		3365108	0		==			
ANR	3365570	Identifier	type		3365108	0					
ANR	3365571	Identifier	HDFS_NAMENODE		3365108	1					
ANR	3365572	CompoundStatement		83:35:3102:3102	3365108	1					
ANR	3365573	ExpressionStatement	"mkdir ( m_nameNodeDir . Value ( ) , 0700 )"	530:9:18348:18383	3365108	0	True				
ANR	3365574	CallExpression	"mkdir ( m_nameNodeDir . Value ( ) , 0700 )"		3365108	0					
ANR	3365575	Callee	mkdir		3365108	0					
ANR	3365576	Identifier	mkdir		3365108	0					
ANR	3365577	ArgumentList	m_nameNodeDir . Value ( )		3365108	1					
ANR	3365578	Argument	m_nameNodeDir . Value ( )		3365108	0					
ANR	3365579	CallExpression	m_nameNodeDir . Value ( )		3365108	0					
ANR	3365580	Callee	m_nameNodeDir . Value		3365108	0					
ANR	3365581	MemberAccess	m_nameNodeDir . Value		3365108	0					
ANR	3365582	Identifier	m_nameNodeDir		3365108	0					
ANR	3365583	Identifier	Value		3365108	1					
ANR	3365584	ArgumentList			3365108	1					
ANR	3365585	Argument	0700		3365108	1					
ANR	3365586	PrimaryExpression	0700		3365108	0					
ANR	3365587	IfStatement	if ( m_namenodeRole == ACTIVE )		3365108	1					
ANR	3365588	Condition	m_namenodeRole == ACTIVE	531:13:18398:18421	3365108	0	True				
ANR	3365589	EqualityExpression	m_namenodeRole == ACTIVE		3365108	0		==			
ANR	3365590	Identifier	m_namenodeRole		3365108	0					
ANR	3365591	Identifier	ACTIVE		3365108	1					
ANR	3365592	CompoundStatement		85:39:3189:3189	3365108	1					
ANR	3365593	ExpressionStatement	"arglist . InsertArg ( m_java . Value ( ) , 0 )"	532:16:18442:18478	3365108	0	True				
ANR	3365594	CallExpression	"arglist . InsertArg ( m_java . Value ( ) , 0 )"		3365108	0					
ANR	3365595	Callee	arglist . InsertArg		3365108	0					
ANR	3365596	MemberAccess	arglist . InsertArg		3365108	0					
ANR	3365597	Identifier	arglist		3365108	0					
ANR	3365598	Identifier	InsertArg		3365108	1					
ANR	3365599	ArgumentList	m_java . Value ( )		3365108	1					
ANR	3365600	Argument	m_java . Value ( )		3365108	0					
ANR	3365601	CallExpression	m_java . Value ( )		3365108	0					
ANR	3365602	Callee	m_java . Value		3365108	0					
ANR	3365603	MemberAccess	m_java . Value		3365108	0					
ANR	3365604	Identifier	m_java		3365108	0					
ANR	3365605	Identifier	Value		3365108	1					
ANR	3365606	ArgumentList			3365108	1					
ANR	3365607	Argument	0		3365108	1					
ANR	3365608	PrimaryExpression	0		3365108	0					
ANR	3365609	IfStatement	if ( dir . Next ( ) == NULL )		3365108	1					
ANR	3365610	Condition	dir . Next ( ) == NULL	534:20:18501:18518	3365108	0	True				
ANR	3365611	EqualityExpression	dir . Next ( ) == NULL		3365108	0		==			
ANR	3365612	CallExpression	dir . Next ( )		3365108	0					
ANR	3365613	Callee	dir . Next		3365108	0					
ANR	3365614	MemberAccess	dir . Next		3365108	0					
ANR	3365615	Identifier	dir		3365108	0					
ANR	3365616	Identifier	Next		3365108	1					
ANR	3365617	ArgumentList			3365108	1					
ANR	3365618	Identifier	NULL		3365108	1					
ANR	3365619	CompoundStatement		97:24:3662:3688	3365108	1					
ANR	3365620	ExpressionStatement	"arglist . AppendArg ( ""-format"" )"	535:24:18547:18575	3365108	0	True				
ANR	3365621	CallExpression	"arglist . AppendArg ( ""-format"" )"		3365108	0					
ANR	3365622	Callee	arglist . AppendArg		3365108	0					
ANR	3365623	MemberAccess	arglist . AppendArg		3365108	0					
ANR	3365624	Identifier	arglist		3365108	0					
ANR	3365625	Identifier	AppendArg		3365108	1					
ANR	3365626	ArgumentList	"""-format"""		3365108	1					
ANR	3365627	Argument	"""-format"""		3365108	0					
ANR	3365628	PrimaryExpression	"""-format"""		3365108	0					
ANR	3365629	IdentifierDeclStatement	MyString argString ;	537:24:18602:18620	3365108	1	True				
ANR	3365630	IdentifierDecl	argString		3365108	0					
ANR	3365631	IdentifierDeclType	MyString		3365108	0					
ANR	3365632	Identifier	argString		3365108	1					
ANR	3365633	ExpressionStatement	arglist . GetArgsStringForDisplay ( & argString )	538:24:18646:18689	3365108	2	True				
ANR	3365634	CallExpression	arglist . GetArgsStringForDisplay ( & argString )		3365108	0					
ANR	3365635	Callee	arglist . GetArgsStringForDisplay		3365108	0					
ANR	3365636	MemberAccess	arglist . GetArgsStringForDisplay		3365108	0					
ANR	3365637	Identifier	arglist		3365108	0					
ANR	3365638	Identifier	GetArgsStringForDisplay		3365108	1					
ANR	3365639	ArgumentList	& argString		3365108	1					
ANR	3365640	Argument	& argString		3365108	0					
ANR	3365641	UnaryOperationExpression	& argString		3365108	0					
ANR	3365642	UnaryOperator	&		3365108	0					
ANR	3365643	Identifier	argString		3365108	1					
ANR	3365644	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s\\n"" , argString . Value ( ) )"	539:24:18715:18759	3365108	3	True				
ANR	3365645	CallExpression	"dprintf ( D_ALWAYS , ""%s\\n"" , argString . Value ( ) )"		3365108	0					
ANR	3365646	Callee	dprintf		3365108	0					
ANR	3365647	Identifier	dprintf		3365108	0					
ANR	3365648	ArgumentList	D_ALWAYS		3365108	1					
ANR	3365649	Argument	D_ALWAYS		3365108	0					
ANR	3365650	Identifier	D_ALWAYS		3365108	0					
ANR	3365651	Argument	"""%s\\n"""		3365108	1					
ANR	3365652	PrimaryExpression	"""%s\\n"""		3365108	0					
ANR	3365653	Argument	argString . Value ( )		3365108	2					
ANR	3365654	CallExpression	argString . Value ( )		3365108	0					
ANR	3365655	Callee	argString . Value		3365108	0					
ANR	3365656	MemberAccess	argString . Value		3365108	0					
ANR	3365657	Identifier	argString		3365108	0					
ANR	3365658	Identifier	Value		3365108	1					
ANR	3365659	ArgumentList			3365108	1					
ANR	3365660	IdentifierDeclStatement	"FILE * fp = my_popen ( arglist , ""w"" , 0 ) ;"	541:24:18786:18822	3365108	4	True				
ANR	3365661	IdentifierDecl	"* fp = my_popen ( arglist , ""w"" , 0 )"		3365108	0					
ANR	3365662	IdentifierDeclType	FILE *		3365108	0					
ANR	3365663	Identifier	fp		3365108	1					
ANR	3365664	AssignmentExpression	"* fp = my_popen ( arglist , ""w"" , 0 )"		3365108	2		=			
ANR	3365665	Identifier	fp		3365108	0					
ANR	3365666	CallExpression	"my_popen ( arglist , ""w"" , 0 )"		3365108	1					
ANR	3365667	Callee	my_popen		3365108	0					
ANR	3365668	Identifier	my_popen		3365108	0					
ANR	3365669	ArgumentList	arglist		3365108	1					
ANR	3365670	Argument	arglist		3365108	0					
ANR	3365671	Identifier	arglist		3365108	0					
ANR	3365672	Argument	"""w"""		3365108	1					
ANR	3365673	PrimaryExpression	"""w"""		3365108	0					
ANR	3365674	Argument	0		3365108	2					
ANR	3365675	PrimaryExpression	0		3365108	0					
ANR	3365676	ExpressionStatement	"fwrite ( ""Y\\n"" , 1 , 2 , fp )"	542:24:18848:18871	3365108	5	True				
ANR	3365677	CallExpression	"fwrite ( ""Y\\n"" , 1 , 2 , fp )"		3365108	0					
ANR	3365678	Callee	fwrite		3365108	0					
ANR	3365679	Identifier	fwrite		3365108	0					
ANR	3365680	ArgumentList	"""Y\\n"""		3365108	1					
ANR	3365681	Argument	"""Y\\n"""		3365108	0					
ANR	3365682	PrimaryExpression	"""Y\\n"""		3365108	0					
ANR	3365683	Argument	1		3365108	1					
ANR	3365684	PrimaryExpression	1		3365108	0					
ANR	3365685	Argument	2		3365108	2					
ANR	3365686	PrimaryExpression	2		3365108	0					
ANR	3365687	Argument	fp		3365108	3					
ANR	3365688	Identifier	fp		3365108	0					
ANR	3365689	IdentifierDeclStatement	int status = my_pclose ( fp ) ;	543:24:18897:18923	3365108	6	True				
ANR	3365690	IdentifierDecl	status = my_pclose ( fp )		3365108	0					
ANR	3365691	IdentifierDeclType	int		3365108	0					
ANR	3365692	Identifier	status		3365108	1					
ANR	3365693	AssignmentExpression	status = my_pclose ( fp )		3365108	2		=			
ANR	3365694	Identifier	status		3365108	0					
ANR	3365695	CallExpression	my_pclose ( fp )		3365108	1					
ANR	3365696	Callee	my_pclose		3365108	0					
ANR	3365697	Identifier	my_pclose		3365108	0					
ANR	3365698	ArgumentList	fp		3365108	1					
ANR	3365699	Argument	fp		3365108	0					
ANR	3365700	Identifier	fp		3365108	0					
ANR	3365701	ExpressionStatement	"dprintf ( D_ALWAYS , ""Performed a format on HDFS with status %d\\n"" , status )"	544:24:18949:19021	3365108	7	True				
ANR	3365702	CallExpression	"dprintf ( D_ALWAYS , ""Performed a format on HDFS with status %d\\n"" , status )"		3365108	0					
ANR	3365703	Callee	dprintf		3365108	0					
ANR	3365704	Identifier	dprintf		3365108	0					
ANR	3365705	ArgumentList	D_ALWAYS		3365108	1					
ANR	3365706	Argument	D_ALWAYS		3365108	0					
ANR	3365707	Identifier	D_ALWAYS		3365108	0					
ANR	3365708	Argument	"""Performed a format on HDFS with status %d\\n"""		3365108	1					
ANR	3365709	PrimaryExpression	"""Performed a format on HDFS with status %d\\n"""		3365108	0					
ANR	3365710	Argument	status		3365108	2					
ANR	3365711	Identifier	status		3365108	0					
ANR	3365712	ElseStatement	else		3365108	0					
ANR	3365713	CompoundStatement		109:24:4219:4246	3365108	0					
ANR	3365714	IdentifierDeclStatement	MyString argString ;	547:24:19073:19091	3365108	0	True				
ANR	3365715	IdentifierDecl	argString		3365108	0					
ANR	3365716	IdentifierDeclType	MyString		3365108	0					
ANR	3365717	Identifier	argString		3365108	1					
ANR	3365718	ExpressionStatement	"arglist . AppendArg ( ""-finalize"" )"	548:24:19140:19170	3365108	1	True				
ANR	3365719	CallExpression	"arglist . AppendArg ( ""-finalize"" )"		3365108	0					
ANR	3365720	Callee	arglist . AppendArg		3365108	0					
ANR	3365721	MemberAccess	arglist . AppendArg		3365108	0					
ANR	3365722	Identifier	arglist		3365108	0					
ANR	3365723	Identifier	AppendArg		3365108	1					
ANR	3365724	ArgumentList	"""-finalize"""		3365108	1					
ANR	3365725	Argument	"""-finalize"""		3365108	0					
ANR	3365726	PrimaryExpression	"""-finalize"""		3365108	0					
ANR	3365727	ExpressionStatement	arglist . GetArgsStringForDisplay ( & argString )	550:24:19197:19240	3365108	2	True				
ANR	3365728	CallExpression	arglist . GetArgsStringForDisplay ( & argString )		3365108	0					
ANR	3365729	Callee	arglist . GetArgsStringForDisplay		3365108	0					
ANR	3365730	MemberAccess	arglist . GetArgsStringForDisplay		3365108	0					
ANR	3365731	Identifier	arglist		3365108	0					
ANR	3365732	Identifier	GetArgsStringForDisplay		3365108	1					
ANR	3365733	ArgumentList	& argString		3365108	1					
ANR	3365734	Argument	& argString		3365108	0					
ANR	3365735	UnaryOperationExpression	& argString		3365108	0					
ANR	3365736	UnaryOperator	&		3365108	0					
ANR	3365737	Identifier	argString		3365108	1					
ANR	3365738	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""%s\\n"" , argString . Value ( ) )"	551:24:19266:19313	3365108	3	True				
ANR	3365739	CallExpression	"dprintf ( D_FULLDEBUG , ""%s\\n"" , argString . Value ( ) )"		3365108	0					
ANR	3365740	Callee	dprintf		3365108	0					
ANR	3365741	Identifier	dprintf		3365108	0					
ANR	3365742	ArgumentList	D_FULLDEBUG		3365108	1					
ANR	3365743	Argument	D_FULLDEBUG		3365108	0					
ANR	3365744	Identifier	D_FULLDEBUG		3365108	0					
ANR	3365745	Argument	"""%s\\n"""		3365108	1					
ANR	3365746	PrimaryExpression	"""%s\\n"""		3365108	0					
ANR	3365747	Argument	argString . Value ( )		3365108	2					
ANR	3365748	CallExpression	argString . Value ( )		3365108	0					
ANR	3365749	Callee	argString . Value		3365108	0					
ANR	3365750	MemberAccess	argString . Value		3365108	0					
ANR	3365751	Identifier	argString		3365108	0					
ANR	3365752	Identifier	Value		3365108	1					
ANR	3365753	ArgumentList			3365108	1					
ANR	3365754	IdentifierDeclStatement	"FILE * fp2 = my_popen ( arglist , ""w"" , 0 ) ;"	553:24:19341:19378	3365108	4	True				
ANR	3365755	IdentifierDecl	"* fp2 = my_popen ( arglist , ""w"" , 0 )"		3365108	0					
ANR	3365756	IdentifierDeclType	FILE *		3365108	0					
ANR	3365757	Identifier	fp2		3365108	1					
ANR	3365758	AssignmentExpression	"* fp2 = my_popen ( arglist , ""w"" , 0 )"		3365108	2		=			
ANR	3365759	Identifier	fp2		3365108	0					
ANR	3365760	CallExpression	"my_popen ( arglist , ""w"" , 0 )"		3365108	1					
ANR	3365761	Callee	my_popen		3365108	0					
ANR	3365762	Identifier	my_popen		3365108	0					
ANR	3365763	ArgumentList	arglist		3365108	1					
ANR	3365764	Argument	arglist		3365108	0					
ANR	3365765	Identifier	arglist		3365108	0					
ANR	3365766	Argument	"""w"""		3365108	1					
ANR	3365767	PrimaryExpression	"""w"""		3365108	0					
ANR	3365768	Argument	0		3365108	2					
ANR	3365769	PrimaryExpression	0		3365108	0					
ANR	3365770	ExpressionStatement	"fwrite ( ""Y\\n"" , 1 , 2 , fp2 )"	554:24:19404:19428	3365108	5	True				
ANR	3365771	CallExpression	"fwrite ( ""Y\\n"" , 1 , 2 , fp2 )"		3365108	0					
ANR	3365772	Callee	fwrite		3365108	0					
ANR	3365773	Identifier	fwrite		3365108	0					
ANR	3365774	ArgumentList	"""Y\\n"""		3365108	1					
ANR	3365775	Argument	"""Y\\n"""		3365108	0					
ANR	3365776	PrimaryExpression	"""Y\\n"""		3365108	0					
ANR	3365777	Argument	1		3365108	1					
ANR	3365778	PrimaryExpression	1		3365108	0					
ANR	3365779	Argument	2		3365108	2					
ANR	3365780	PrimaryExpression	2		3365108	0					
ANR	3365781	Argument	fp2		3365108	3					
ANR	3365782	Identifier	fp2		3365108	0					
ANR	3365783	IdentifierDeclStatement	int status = my_pclose ( fp2 ) ;	555:24:19454:19481	3365108	6	True				
ANR	3365784	IdentifierDecl	status = my_pclose ( fp2 )		3365108	0					
ANR	3365785	IdentifierDeclType	int		3365108	0					
ANR	3365786	Identifier	status		3365108	1					
ANR	3365787	AssignmentExpression	status = my_pclose ( fp2 )		3365108	2		=			
ANR	3365788	Identifier	status		3365108	0					
ANR	3365789	CallExpression	my_pclose ( fp2 )		3365108	1					
ANR	3365790	Callee	my_pclose		3365108	0					
ANR	3365791	Identifier	my_pclose		3365108	0					
ANR	3365792	ArgumentList	fp2		3365108	1					
ANR	3365793	Argument	fp2		3365108	0					
ANR	3365794	Identifier	fp2		3365108	0					
ANR	3365795	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Finalized any pending upgrades (status = %d)\\n"" , status )"	556:24:19507:19585	3365108	7	True				
ANR	3365796	CallExpression	"dprintf ( D_FULLDEBUG , ""Finalized any pending upgrades (status = %d)\\n"" , status )"		3365108	0					
ANR	3365797	Callee	dprintf		3365108	0					
ANR	3365798	Identifier	dprintf		3365108	0					
ANR	3365799	ArgumentList	D_FULLDEBUG		3365108	1					
ANR	3365800	Argument	D_FULLDEBUG		3365108	0					
ANR	3365801	Identifier	D_FULLDEBUG		3365108	0					
ANR	3365802	Argument	"""Finalized any pending upgrades (status = %d)\\n"""		3365108	1					
ANR	3365803	PrimaryExpression	"""Finalized any pending upgrades (status = %d)\\n"""		3365108	0					
ANR	3365804	Argument	status		3365108	2					
ANR	3365805	Identifier	status		3365108	0					
ANR	3365806	ExpressionStatement	arglist . RemoveArg ( arglist . Count ( ) - 1 )	560:16:19696:19734	3365108	2	True				
ANR	3365807	CallExpression	arglist . RemoveArg ( arglist . Count ( ) - 1 )		3365108	0					
ANR	3365808	Callee	arglist . RemoveArg		3365108	0					
ANR	3365809	MemberAccess	arglist . RemoveArg		3365108	0					
ANR	3365810	Identifier	arglist		3365108	0					
ANR	3365811	Identifier	RemoveArg		3365108	1					
ANR	3365812	ArgumentList	arglist . Count ( ) - 1		3365108	1					
ANR	3365813	Argument	arglist . Count ( ) - 1		3365108	0					
ANR	3365814	AdditiveExpression	arglist . Count ( ) - 1		3365108	0		-			
ANR	3365815	CallExpression	arglist . Count ( )		3365108	0					
ANR	3365816	Callee	arglist . Count		3365108	0					
ANR	3365817	MemberAccess	arglist . Count		3365108	0					
ANR	3365818	Identifier	arglist		3365108	0					
ANR	3365819	Identifier	Count		3365108	1					
ANR	3365820	ArgumentList			3365108	1					
ANR	3365821	PrimaryExpression	1		3365108	1					
ANR	3365822	IdentifierDeclStatement	MyString argString ;	568:8:19969:19987	3365108	17	True				
ANR	3365823	IdentifierDecl	argString		3365108	0					
ANR	3365824	IdentifierDeclType	MyString		3365108	0					
ANR	3365825	Identifier	argString		3365108	1					
ANR	3365826	ExpressionStatement	arglist . GetArgsStringForDisplay ( & argString )	569:8:19997:20040	3365108	18	True				
ANR	3365827	CallExpression	arglist . GetArgsStringForDisplay ( & argString )		3365108	0					
ANR	3365828	Callee	arglist . GetArgsStringForDisplay		3365108	0					
ANR	3365829	MemberAccess	arglist . GetArgsStringForDisplay		3365108	0					
ANR	3365830	Identifier	arglist		3365108	0					
ANR	3365831	Identifier	GetArgsStringForDisplay		3365108	1					
ANR	3365832	ArgumentList	& argString		3365108	1					
ANR	3365833	Argument	& argString		3365108	0					
ANR	3365834	UnaryOperationExpression	& argString		3365108	0					
ANR	3365835	UnaryOperator	&		3365108	0					
ANR	3365836	Identifier	argString		3365108	1					
ANR	3365837	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s\\n"" , argString . Value ( ) )"	570:8:20050:20094	3365108	19	True				
ANR	3365838	CallExpression	"dprintf ( D_ALWAYS , ""%s\\n"" , argString . Value ( ) )"		3365108	0					
ANR	3365839	Callee	dprintf		3365108	0					
ANR	3365840	Identifier	dprintf		3365108	0					
ANR	3365841	ArgumentList	D_ALWAYS		3365108	1					
ANR	3365842	Argument	D_ALWAYS		3365108	0					
ANR	3365843	Identifier	D_ALWAYS		3365108	0					
ANR	3365844	Argument	"""%s\\n"""		3365108	1					
ANR	3365845	PrimaryExpression	"""%s\\n"""		3365108	0					
ANR	3365846	Argument	argString . Value ( )		3365108	2					
ANR	3365847	CallExpression	argString . Value ( )		3365108	0					
ANR	3365848	Callee	argString . Value		3365108	0					
ANR	3365849	MemberAccess	argString . Value		3365108	0					
ANR	3365850	Identifier	argString		3365108	0					
ANR	3365851	Identifier	Value		3365108	1					
ANR	3365852	ArgumentList			3365108	1					
ANR	3365853	IdentifierDeclStatement	int childInOutErr [ 3 ] ;	572:2:20099:20119	3365108	20	True				
ANR	3365854	IdentifierDecl	childInOutErr [ 3 ]		3365108	0					
ANR	3365855	IdentifierDeclType	int [ 3 ]		3365108	0					
ANR	3365856	Identifier	childInOutErr		3365108	1					
ANR	3365857	PrimaryExpression	3		3365108	2					
ANR	3365858	ExpressionStatement	childInOutErr [ 0 ] = - 1	573:2:20156:20177	3365108	21	True				
ANR	3365859	AssignmentExpression	childInOutErr [ 0 ] = - 1		3365108	0		=			
ANR	3365860	ArrayIndexing	childInOutErr [ 0 ]		3365108	0					
ANR	3365861	Identifier	childInOutErr		3365108	0					
ANR	3365862	PrimaryExpression	0		3365108	1					
ANR	3365863	UnaryOperationExpression	- 1		3365108	1					
ANR	3365864	UnaryOperator	-		3365108	0					
ANR	3365865	PrimaryExpression	1		3365108	1					
ANR	3365866	ExpressionStatement	childInOutErr [ 1 ] = stdoutFds [ 1 ]	574:2:20220:20251	3365108	22	True				
ANR	3365867	AssignmentExpression	childInOutErr [ 1 ] = stdoutFds [ 1 ]		3365108	0		=			
ANR	3365868	ArrayIndexing	childInOutErr [ 1 ]		3365108	0					
ANR	3365869	Identifier	childInOutErr		3365108	0					
ANR	3365870	PrimaryExpression	1		3365108	1					
ANR	3365871	ArrayIndexing	stdoutFds [ 1 ]		3365108	1					
ANR	3365872	Identifier	stdoutFds		3365108	0					
ANR	3365873	PrimaryExpression	1		3365108	1					
ANR	3365874	ExpressionStatement	childInOutErr [ 2 ] = stderrFds [ 1 ]	575:2:20284:20315	3365108	23	True				
ANR	3365875	AssignmentExpression	childInOutErr [ 2 ] = stderrFds [ 1 ]		3365108	0		=			
ANR	3365876	ArrayIndexing	childInOutErr [ 2 ]		3365108	0					
ANR	3365877	Identifier	childInOutErr		3365108	0					
ANR	3365878	PrimaryExpression	2		3365108	1					
ANR	3365879	ArrayIndexing	stderrFds [ 1 ]		3365108	1					
ANR	3365880	Identifier	stderrFds		3365108	0					
ANR	3365881	PrimaryExpression	1		3365108	1					
ANR	3365882	ExpressionStatement	"m_pid = daemonCore -> Create_Process ( m_java . Value ( ) , arglist , PRIV_CONDOR_FINAL , m_reaper , FALSE , NULL , NULL , NULL , NULL , childInOutErr )"	577:8:20357:20736	3365108	24	True				
ANR	3365883	AssignmentExpression	"m_pid = daemonCore -> Create_Process ( m_java . Value ( ) , arglist , PRIV_CONDOR_FINAL , m_reaper , FALSE , NULL , NULL , NULL , NULL , childInOutErr )"		3365108	0		=			
ANR	3365884	Identifier	m_pid		3365108	0					
ANR	3365885	CallExpression	"daemonCore -> Create_Process ( m_java . Value ( ) , arglist , PRIV_CONDOR_FINAL , m_reaper , FALSE , NULL , NULL , NULL , NULL , childInOutErr )"		3365108	1					
ANR	3365886	Callee	daemonCore -> Create_Process		3365108	0					
ANR	3365887	PtrMemberAccess	daemonCore -> Create_Process		3365108	0					
ANR	3365888	Identifier	daemonCore		3365108	0					
ANR	3365889	Identifier	Create_Process		3365108	1					
ANR	3365890	ArgumentList	m_java . Value ( )		3365108	1					
ANR	3365891	Argument	m_java . Value ( )		3365108	0					
ANR	3365892	CallExpression	m_java . Value ( )		3365108	0					
ANR	3365893	Callee	m_java . Value		3365108	0					
ANR	3365894	MemberAccess	m_java . Value		3365108	0					
ANR	3365895	Identifier	m_java		3365108	0					
ANR	3365896	Identifier	Value		3365108	1					
ANR	3365897	ArgumentList			3365108	1					
ANR	3365898	Argument	arglist		3365108	1					
ANR	3365899	Identifier	arglist		3365108	0					
ANR	3365900	Argument	PRIV_CONDOR_FINAL		3365108	2					
ANR	3365901	Identifier	PRIV_CONDOR_FINAL		3365108	0					
ANR	3365902	Argument	m_reaper		3365108	3					
ANR	3365903	Identifier	m_reaper		3365108	0					
ANR	3365904	Argument	FALSE		3365108	4					
ANR	3365905	Identifier	FALSE		3365108	0					
ANR	3365906	Argument	NULL		3365108	5					
ANR	3365907	Identifier	NULL		3365108	0					
ANR	3365908	Argument	NULL		3365108	6					
ANR	3365909	Identifier	NULL		3365108	0					
ANR	3365910	Argument	NULL		3365108	7					
ANR	3365911	Identifier	NULL		3365108	0					
ANR	3365912	Argument	NULL		3365108	8					
ANR	3365913	Identifier	NULL		3365108	0					
ANR	3365914	Argument	childInOutErr		3365108	9					
ANR	3365915	Identifier	childInOutErr		3365108	0					
ANR	3365916	IfStatement	if ( m_pid == FALSE )		3365108	25					
ANR	3365917	Condition	m_pid == FALSE	589:12:20751:20764	3365108	0	True				
ANR	3365918	EqualityExpression	m_pid == FALSE		3365108	0		==			
ANR	3365919	Identifier	m_pid		3365108	0					
ANR	3365920	Identifier	FALSE		3365108	1					
ANR	3365921	ExpressionStatement	"EXCEPT ( ""Failed to launch hadoop process using Create_Process.\\n "" )"	590:16:20784:20850	3365108	1	True				
ANR	3365922	CallExpression	"EXCEPT ( ""Failed to launch hadoop process using Create_Process.\\n "" )"		3365108	0					
ANR	3365923	Callee	EXCEPT		3365108	0					
ANR	3365924	Identifier	EXCEPT		3365108	0					
ANR	3365925	ArgumentList	"""Failed to launch hadoop process using Create_Process.\\n """		3365108	1					
ANR	3365926	Argument	"""Failed to launch hadoop process using Create_Process.\\n """		3365108	0					
ANR	3365927	PrimaryExpression	"""Failed to launch hadoop process using Create_Process.\\n """		3365108	0					
ANR	3365928	ExpressionStatement	daemonCore -> Close_Pipe ( childInOutErr [ 1 ] )	593:2:20912:20953	3365108	26	True				
ANR	3365929	CallExpression	daemonCore -> Close_Pipe ( childInOutErr [ 1 ] )		3365108	0					
ANR	3365930	Callee	daemonCore -> Close_Pipe		3365108	0					
ANR	3365931	PtrMemberAccess	daemonCore -> Close_Pipe		3365108	0					
ANR	3365932	Identifier	daemonCore		3365108	0					
ANR	3365933	Identifier	Close_Pipe		3365108	1					
ANR	3365934	ArgumentList	childInOutErr [ 1 ]		3365108	1					
ANR	3365935	Argument	childInOutErr [ 1 ]		3365108	0					
ANR	3365936	ArrayIndexing	childInOutErr [ 1 ]		3365108	0					
ANR	3365937	Identifier	childInOutErr		3365108	0					
ANR	3365938	PrimaryExpression	1		3365108	1					
ANR	3365939	ExpressionStatement	daemonCore -> Close_Pipe ( childInOutErr [ 2 ] )	594:2:20981:21022	3365108	27	True				
ANR	3365940	CallExpression	daemonCore -> Close_Pipe ( childInOutErr [ 2 ] )		3365108	0					
ANR	3365941	Callee	daemonCore -> Close_Pipe		3365108	0					
ANR	3365942	PtrMemberAccess	daemonCore -> Close_Pipe		3365108	0					
ANR	3365943	Identifier	daemonCore		3365108	0					
ANR	3365944	Identifier	Close_Pipe		3365108	1					
ANR	3365945	ArgumentList	childInOutErr [ 2 ]		3365108	1					
ANR	3365946	Argument	childInOutErr [ 2 ]		3365108	0					
ANR	3365947	ArrayIndexing	childInOutErr [ 2 ]		3365108	0					
ANR	3365948	Identifier	childInOutErr		3365108	0					
ANR	3365949	PrimaryExpression	2		3365108	1					
ANR	3365950	ExpressionStatement	"dprintf ( D_ALWAYS , ""Launched hadoop process %s with pid=%d\\n"" , getServiceNameByType ( type ) . Value ( ) , m_pid )"	596:8:21057:21178	3365108	28	True				
ANR	3365951	CallExpression	"dprintf ( D_ALWAYS , ""Launched hadoop process %s with pid=%d\\n"" , getServiceNameByType ( type ) . Value ( ) , m_pid )"		3365108	0					
ANR	3365952	Callee	dprintf		3365108	0					
ANR	3365953	Identifier	dprintf		3365108	0					
ANR	3365954	ArgumentList	D_ALWAYS		3365108	1					
ANR	3365955	Argument	D_ALWAYS		3365108	0					
ANR	3365956	Identifier	D_ALWAYS		3365108	0					
ANR	3365957	Argument	"""Launched hadoop process %s with pid=%d\\n"""		3365108	1					
ANR	3365958	PrimaryExpression	"""Launched hadoop process %s with pid=%d\\n"""		3365108	0					
ANR	3365959	Argument	getServiceNameByType ( type ) . Value ( )		3365108	2					
ANR	3365960	CallExpression	getServiceNameByType ( type ) . Value ( )		3365108	0					
ANR	3365961	Callee	getServiceNameByType ( type ) . Value		3365108	0					
ANR	3365962	MemberAccess	getServiceNameByType ( type ) . Value		3365108	0					
ANR	3365963	CallExpression	getServiceNameByType ( type )		3365108	0					
ANR	3365964	Callee	getServiceNameByType		3365108	0					
ANR	3365965	Identifier	getServiceNameByType		3365108	0					
ANR	3365966	ArgumentList	type		3365108	1					
ANR	3365967	Argument	type		3365108	0					
ANR	3365968	Identifier	type		3365108	0					
ANR	3365969	Identifier	Value		3365108	1					
ANR	3365970	ArgumentList			3365108	1					
ANR	3365971	Argument	m_pid		3365108	3					
ANR	3365972	Identifier	m_pid		3365108	0					
ANR	3365973	ExpressionStatement	m_state = STATE_RUNNING	599:8:21189:21212	3365108	29	True				
ANR	3365974	AssignmentExpression	m_state = STATE_RUNNING		3365108	0		=			
ANR	3365975	Identifier	m_state		3365108	0					
ANR	3365976	Identifier	STATE_RUNNING		3365108	1					
ANR	3365977	ReturnType	void		3365108	1					
ANR	3365978	Identifier	Hadoop :: startService		3365108	2					
ANR	3365979	ParameterList	NodeType type		3365108	3					
ANR	3365980	Parameter	NodeType type	447:27:15218:15230	3365108	0	True				
ANR	3365981	ParameterType	NodeType		3365108	0					
ANR	3365982	Identifier	type		3365108	1					
ANR	3365983	CFGEntryNode	ENTRY		3365108		True				
ANR	3365984	CFGExitNode	EXIT		3365108		True				
ANR	3365985	Symbol	* stderrFds		3365108						
ANR	3365986	Symbol	daemonCore -> Create_Process		3365108						
ANR	3365987	Symbol	log_dir . Value		3365108						
ANR	3365988	Symbol	m_namenodeRole		3365108						
ANR	3365989	Symbol	& arglist		3365108						
ANR	3365990	Symbol	childInOutErr		3365108						
ANR	3365991	Symbol	type		3365108						
ANR	3365992	Symbol	dir		3365108						
ANR	3365993	Symbol	dir . Next		3365108						
ANR	3365994	Symbol	& Hadoop :: stdoutHandler		3365108						
ANR	3365995	Symbol	& m_classpath		3365108						
ANR	3365996	Symbol	m_state		3365108						
ANR	3365997	Symbol	ldir		3365108						
ANR	3365998	Symbol	m_pid		3365108						
ANR	3365999	Symbol	argString		3365108						
ANR	3366000	Symbol	daemonCore -> Register_Pipe		3365108						
ANR	3366001	Symbol	NULL		3365108						
ANR	3366002	Symbol	m_stdOut		3365108						
ANR	3366003	Symbol	this		3365108						
ANR	3366004	Symbol	fp2		3365108						
ANR	3366005	Symbol	D_FULLDEBUG		3365108						
ANR	3366006	Symbol	argString . Value		3365108						
ANR	3366007	Symbol	retval		3365108						
ANR	3366008	Symbol	m_nameNodeClass		3365108						
ANR	3366009	Symbol	* childInOutErr		3365108						
ANR	3366010	Symbol	arglist . Count		3365108						
ANR	3366011	Symbol	static_cast		3365108						
ANR	3366012	Symbol	* daemonCore		3365108						
ANR	3366013	Symbol	log4jarg		3365108						
ANR	3366014	Symbol	true		3365108						
ANR	3366015	Symbol	stderrFds		3365108						
ANR	3366016	Symbol	daemonCore -> Create_Pipe		3365108						
ANR	3366017	Symbol	m_nameNodeDir . Value		3365108						
ANR	3366018	Symbol	& argString		3365108						
ANR	3366019	Symbol	my_pclose		3365108						
ANR	3366020	Symbol	status		3365108						
ANR	3366021	Symbol	ACTIVE		3365108						
ANR	3366022	Symbol	m_nameNodeDir		3365108						
ANR	3366023	Symbol	m_stdErr		3365108						
ANR	3366024	Symbol	fp		3365108						
ANR	3366025	Symbol	my_popen		3365108						
ANR	3366026	Symbol	* stdoutFds		3365108						
ANR	3366027	Symbol	PipeHandlercpp		3365108						
ANR	3366028	Symbol	param		3365108						
ANR	3366029	Symbol	arglist		3365108						
ANR	3366030	Symbol	daemonCore		3365108						
ANR	3366031	Symbol	m_java		3365108						
ANR	3366032	Symbol	log4jarg . Value		3365108						
ANR	3366033	Symbol	PRIV_CONDOR_FINAL		3365108						
ANR	3366034	Symbol	getServiceNameByType		3365108						
ANR	3366035	Symbol	log4j		3365108						
ANR	3366036	Symbol	m_java . Value		3365108						
ANR	3366037	Symbol	D_ALWAYS		3365108						
ANR	3366038	Symbol	false		3365108						
ANR	3366039	Symbol	& Hadoop :: stderrHandler		3365108						
ANR	3366040	Symbol	java_config		3365108						
ANR	3366041	Symbol	HDFS_NAMENODE		3365108						
ANR	3366042	Symbol	getServiceNameByType ( type ) . Value		3365108						
ANR	3366043	Symbol	m_dataNodeClass		3365108						
ANR	3366044	Symbol	stdoutFds		3365108						
ANR	3366045	Symbol	log_dir		3365108						
ANR	3366046	Symbol	m_reaper		3365108						
ANR	3366047	Symbol	FALSE		3365108						
ANR	3366048	Symbol	STATE_RUNNING		3365108						
ANR	3366049	Symbol	HDFS_DATANODE		3365108						
ANR	3366050	Function	Hadoop :: runDFSAdmin	602:0:21217:22562							
ANR	3366051	FunctionDef	"Hadoop :: runDFSAdmin (const char * cmd , const char * attr)"		3366050	0					
ANR	3366052	CompoundStatement		602:66:21283:22562	3366050	0					
ANR	3366053	IdentifierDeclStatement	MyString result ;	604:8:21294:21309	3366050	0	True				
ANR	3366054	IdentifierDecl	result		3366050	0					
ANR	3366055	IdentifierDeclType	MyString		3366050	0					
ANR	3366056	Identifier	result		3366050	1					
ANR	3366057	IdentifierDeclStatement	ArgList arglist ;	606:8:21320:21335	3366050	1	True				
ANR	3366058	IdentifierDecl	arglist		3366050	0					
ANR	3366059	IdentifierDeclType	ArgList		3366050	0					
ANR	3366060	Identifier	arglist		3366050	1					
ANR	3366061	ExpressionStatement	"java_config ( m_java , & arglist , & m_classpath )"	608:8:21346:21389	3366050	2	True				
ANR	3366062	CallExpression	"java_config ( m_java , & arglist , & m_classpath )"		3366050	0					
ANR	3366063	Callee	java_config		3366050	0					
ANR	3366064	Identifier	java_config		3366050	0					
ANR	3366065	ArgumentList	m_java		3366050	1					
ANR	3366066	Argument	m_java		3366050	0					
ANR	3366067	Identifier	m_java		3366050	0					
ANR	3366068	Argument	& arglist		3366050	1					
ANR	3366069	UnaryOperationExpression	& arglist		3366050	0					
ANR	3366070	UnaryOperator	&		3366050	0					
ANR	3366071	Identifier	arglist		3366050	1					
ANR	3366072	Argument	& m_classpath		3366050	2					
ANR	3366073	UnaryOperationExpression	& m_classpath		3366050	0					
ANR	3366074	UnaryOperator	&		3366050	0					
ANR	3366075	Identifier	m_classpath		3366050	1					
ANR	3366076	ExpressionStatement	"arglist . InsertArg ( m_java . Value ( ) , 0 )"	610:8:21406:21442	3366050	3	True				
ANR	3366077	CallExpression	"arglist . InsertArg ( m_java . Value ( ) , 0 )"		3366050	0					
ANR	3366078	Callee	arglist . InsertArg		3366050	0					
ANR	3366079	MemberAccess	arglist . InsertArg		3366050	0					
ANR	3366080	Identifier	arglist		3366050	0					
ANR	3366081	Identifier	InsertArg		3366050	1					
ANR	3366082	ArgumentList	m_java . Value ( )		3366050	1					
ANR	3366083	Argument	m_java . Value ( )		3366050	0					
ANR	3366084	CallExpression	m_java . Value ( )		3366050	0					
ANR	3366085	Callee	m_java . Value		3366050	0					
ANR	3366086	MemberAccess	m_java . Value		3366050	0					
ANR	3366087	Identifier	m_java		3366050	0					
ANR	3366088	Identifier	Value		3366050	1					
ANR	3366089	ArgumentList			3366050	1					
ANR	3366090	Argument	0		3366050	1					
ANR	3366091	PrimaryExpression	0		3366050	0					
ANR	3366092	ExpressionStatement	arglist . AppendArg ( m_dfsAdminClass )	612:8:21461:21495	3366050	4	True				
ANR	3366093	CallExpression	arglist . AppendArg ( m_dfsAdminClass )		3366050	0					
ANR	3366094	Callee	arglist . AppendArg		3366050	0					
ANR	3366095	MemberAccess	arglist . AppendArg		3366050	0					
ANR	3366096	Identifier	arglist		3366050	0					
ANR	3366097	Identifier	AppendArg		3366050	1					
ANR	3366098	ArgumentList	m_dfsAdminClass		3366050	1					
ANR	3366099	Argument	m_dfsAdminClass		3366050	0					
ANR	3366100	Identifier	m_dfsAdminClass		3366050	0					
ANR	3366101	ExpressionStatement	arglist . AppendArg ( cmd )	613:8:21505:21527	3366050	5	True				
ANR	3366102	CallExpression	arglist . AppendArg ( cmd )		3366050	0					
ANR	3366103	Callee	arglist . AppendArg		3366050	0					
ANR	3366104	MemberAccess	arglist . AppendArg		3366050	0					
ANR	3366105	Identifier	arglist		3366050	0					
ANR	3366106	Identifier	AppendArg		3366050	1					
ANR	3366107	ArgumentList	cmd		3366050	1					
ANR	3366108	Argument	cmd		3366050	0					
ANR	3366109	Identifier	cmd		3366050	0					
ANR	3366110	IfStatement	if ( attr != NULL )		3366050	6					
ANR	3366111	Condition	attr != NULL	614:12:21541:21552	3366050	0	True				
ANR	3366112	EqualityExpression	attr != NULL		3366050	0		!=			
ANR	3366113	Identifier	attr		3366050	0					
ANR	3366114	Identifier	NULL		3366050	1					
ANR	3366115	ExpressionStatement	arglist . AppendArg ( attr )	615:2:21557:21580	3366050	1	True				
ANR	3366116	CallExpression	arglist . AppendArg ( attr )		3366050	0					
ANR	3366117	Callee	arglist . AppendArg		3366050	0					
ANR	3366118	MemberAccess	arglist . AppendArg		3366050	0					
ANR	3366119	Identifier	arglist		3366050	0					
ANR	3366120	Identifier	AppendArg		3366050	1					
ANR	3366121	ArgumentList	attr		3366050	1					
ANR	3366122	Argument	attr		3366050	0					
ANR	3366123	Identifier	attr		3366050	0					
ANR	3366124	IdentifierDeclStatement	MyString argString ;	616:1:21583:21601	3366050	7	True				
ANR	3366125	IdentifierDecl	argString		3366050	0					
ANR	3366126	IdentifierDeclType	MyString		3366050	0					
ANR	3366127	Identifier	argString		3366050	1					
ANR	3366128	ExpressionStatement	arglist . GetArgsStringForDisplay ( & argString )	617:8:21611:21654	3366050	8	True				
ANR	3366129	CallExpression	arglist . GetArgsStringForDisplay ( & argString )		3366050	0					
ANR	3366130	Callee	arglist . GetArgsStringForDisplay		3366050	0					
ANR	3366131	MemberAccess	arglist . GetArgsStringForDisplay		3366050	0					
ANR	3366132	Identifier	arglist		3366050	0					
ANR	3366133	Identifier	GetArgsStringForDisplay		3366050	1					
ANR	3366134	ArgumentList	& argString		3366050	1					
ANR	3366135	Argument	& argString		3366050	0					
ANR	3366136	UnaryOperationExpression	& argString		3366050	0					
ANR	3366137	UnaryOperator	&		3366050	0					
ANR	3366138	Identifier	argString		3366050	1					
ANR	3366139	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""%s\\n"" , argString . Value ( ) )"	618:8:21664:21711	3366050	9	True				
ANR	3366140	CallExpression	"dprintf ( D_FULLDEBUG , ""%s\\n"" , argString . Value ( ) )"		3366050	0					
ANR	3366141	Callee	dprintf		3366050	0					
ANR	3366142	Identifier	dprintf		3366050	0					
ANR	3366143	ArgumentList	D_FULLDEBUG		3366050	1					
ANR	3366144	Argument	D_FULLDEBUG		3366050	0					
ANR	3366145	Identifier	D_FULLDEBUG		3366050	0					
ANR	3366146	Argument	"""%s\\n"""		3366050	1					
ANR	3366147	PrimaryExpression	"""%s\\n"""		3366050	0					
ANR	3366148	Argument	argString . Value ( )		3366050	2					
ANR	3366149	CallExpression	argString . Value ( )		3366050	0					
ANR	3366150	Callee	argString . Value		3366050	0					
ANR	3366151	MemberAccess	argString . Value		3366050	0					
ANR	3366152	Identifier	argString		3366050	0					
ANR	3366153	Identifier	Value		3366050	1					
ANR	3366154	ArgumentList			3366050	1					
ANR	3366155	IdentifierDeclStatement	FILE * fp ;	621:8:21723:21731	3366050	10	True				
ANR	3366156	IdentifierDecl	* fp		3366050	0					
ANR	3366157	IdentifierDeclType	FILE *		3366050	0					
ANR	3366158	Identifier	fp		3366050	1					
ANR	3366159	ExpressionStatement	"fp = my_popen ( arglist , ""r"" , FALSE )"	622:1:21734:21770	3366050	11	True				
ANR	3366160	AssignmentExpression	"fp = my_popen ( arglist , ""r"" , FALSE )"		3366050	0		=			
ANR	3366161	Identifier	fp		3366050	0					
ANR	3366162	CallExpression	"my_popen ( arglist , ""r"" , FALSE )"		3366050	1					
ANR	3366163	Callee	my_popen		3366050	0					
ANR	3366164	Identifier	my_popen		3366050	0					
ANR	3366165	ArgumentList	arglist		3366050	1					
ANR	3366166	Argument	arglist		3366050	0					
ANR	3366167	Identifier	arglist		3366050	0					
ANR	3366168	Argument	"""r"""		3366050	1					
ANR	3366169	PrimaryExpression	"""r"""		3366050	0					
ANR	3366170	Argument	FALSE		3366050	2					
ANR	3366171	Identifier	FALSE		3366050	0					
ANR	3366172	IfStatement	if ( ! fp )		3366050	12					
ANR	3366173	Condition	! fp	623:5:21777:21780	3366050	0	True				
ANR	3366174	UnaryOperationExpression	! fp		3366050	0					
ANR	3366175	UnaryOperator	!		3366050	0					
ANR	3366176	Identifier	fp		3366050	1					
ANR	3366177	CompoundStatement		22:12:500:500	3366050	1					
ANR	3366178	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to execute %s %s\\n"" , arglist . GetArg ( arglist . Count ( ) - 2 ) , arglist . GetArg ( arglist . Count ( ) - 1 ) )"	624:8:21794:21957	3366050	0	True				
ANR	3366179	CallExpression	"dprintf ( D_ALWAYS , ""Failed to execute %s %s\\n"" , arglist . GetArg ( arglist . Count ( ) - 2 ) , arglist . GetArg ( arglist . Count ( ) - 1 ) )"		3366050	0					
ANR	3366180	Callee	dprintf		3366050	0					
ANR	3366181	Identifier	dprintf		3366050	0					
ANR	3366182	ArgumentList	D_ALWAYS		3366050	1					
ANR	3366183	Argument	D_ALWAYS		3366050	0					
ANR	3366184	Identifier	D_ALWAYS		3366050	0					
ANR	3366185	Argument	"""Failed to execute %s %s\\n"""		3366050	1					
ANR	3366186	PrimaryExpression	"""Failed to execute %s %s\\n"""		3366050	0					
ANR	3366187	Argument	arglist . GetArg ( arglist . Count ( ) - 2 )		3366050	2					
ANR	3366188	CallExpression	arglist . GetArg ( arglist . Count ( ) - 2 )		3366050	0					
ANR	3366189	Callee	arglist . GetArg		3366050	0					
ANR	3366190	MemberAccess	arglist . GetArg		3366050	0					
ANR	3366191	Identifier	arglist		3366050	0					
ANR	3366192	Identifier	GetArg		3366050	1					
ANR	3366193	ArgumentList	arglist . Count ( ) - 2		3366050	1					
ANR	3366194	Argument	arglist . Count ( ) - 2		3366050	0					
ANR	3366195	AdditiveExpression	arglist . Count ( ) - 2		3366050	0		-			
ANR	3366196	CallExpression	arglist . Count ( )		3366050	0					
ANR	3366197	Callee	arglist . Count		3366050	0					
ANR	3366198	MemberAccess	arglist . Count		3366050	0					
ANR	3366199	Identifier	arglist		3366050	0					
ANR	3366200	Identifier	Count		3366050	1					
ANR	3366201	ArgumentList			3366050	1					
ANR	3366202	PrimaryExpression	2		3366050	1					
ANR	3366203	Argument	arglist . GetArg ( arglist . Count ( ) - 1 )		3366050	3					
ANR	3366204	CallExpression	arglist . GetArg ( arglist . Count ( ) - 1 )		3366050	0					
ANR	3366205	Callee	arglist . GetArg		3366050	0					
ANR	3366206	MemberAccess	arglist . GetArg		3366050	0					
ANR	3366207	Identifier	arglist		3366050	0					
ANR	3366208	Identifier	GetArg		3366050	1					
ANR	3366209	ArgumentList	arglist . Count ( ) - 1		3366050	1					
ANR	3366210	Argument	arglist . Count ( ) - 1		3366050	0					
ANR	3366211	AdditiveExpression	arglist . Count ( ) - 1		3366050	0		-			
ANR	3366212	CallExpression	arglist . Count ( )		3366050	0					
ANR	3366213	Callee	arglist . Count		3366050	0					
ANR	3366214	MemberAccess	arglist . Count		3366050	0					
ANR	3366215	Identifier	arglist		3366050	0					
ANR	3366216	Identifier	Count		3366050	1					
ANR	3366217	ArgumentList			3366050	1					
ANR	3366218	PrimaryExpression	1		3366050	1					
ANR	3366219	ReturnStatement	"return """" ;"	627:8:21967:21976	3366050	1	True				
ANR	3366220	PrimaryExpression	""""""		3366050	0					
ANR	3366221	IdentifierDeclStatement	bool short_report = false ;	630:8:21990:22013	3366050	13	True				
ANR	3366222	IdentifierDecl	short_report = false		3366050	0					
ANR	3366223	IdentifierDeclType	bool		3366050	0					
ANR	3366224	Identifier	short_report		3366050	1					
ANR	3366225	AssignmentExpression	short_report = false		3366050	2		=			
ANR	3366226	Identifier	false		3366050	0					
ANR	3366227	Identifier	false		3366050	1					
ANR	3366228	IdentifierDeclStatement	char buf [ STDOUT_READBUF_SIZE ] ;	631:8:22023:22054	3366050	14	True				
ANR	3366229	IdentifierDecl	buf [ STDOUT_READBUF_SIZE ]		3366050	0					
ANR	3366230	IdentifierDeclType	char [ STDOUT_READBUF_SIZE ]		3366050	0					
ANR	3366231	Identifier	buf		3366050	1					
ANR	3366232	Identifier	STDOUT_READBUF_SIZE		3366050	2					
ANR	3366233	WhileStatement	"while ( fgets ( buf , STDOUT_READBUF_SIZE , fp ) )"		3366050	15					
ANR	3366234	Condition	"fgets ( buf , STDOUT_READBUF_SIZE , fp )"	633:16:22073:22107	3366050	0	True				
ANR	3366235	CallExpression	"fgets ( buf , STDOUT_READBUF_SIZE , fp )"		3366050	0					
ANR	3366236	Callee	fgets		3366050	0					
ANR	3366237	Identifier	fgets		3366050	0					
ANR	3366238	ArgumentList	buf		3366050	1					
ANR	3366239	Argument	buf		3366050	0					
ANR	3366240	Identifier	buf		3366050	0					
ANR	3366241	Argument	STDOUT_READBUF_SIZE		3366050	1					
ANR	3366242	Identifier	STDOUT_READBUF_SIZE		3366050	0					
ANR	3366243	Argument	fp		3366050	2					
ANR	3366244	Identifier	fp		3366050	0					
ANR	3366245	CompoundStatement		33:12:841:860	3366050	1					
ANR	3366246	IdentifierDeclStatement	MyString line = buf ;	634:12:22125:22144	3366050	0	True				
ANR	3366247	IdentifierDecl	line = buf		3366050	0					
ANR	3366248	IdentifierDeclType	MyString		3366050	0					
ANR	3366249	Identifier	line		3366050	1					
ANR	3366250	AssignmentExpression	line = buf		3366050	2		=			
ANR	3366251	Identifier	buf		3366050	0					
ANR	3366252	Identifier	buf		3366050	1					
ANR	3366253	IfStatement	"if ( line . find ( ""---"" ) >= 0 )"		3366050	1					
ANR	3366254	Condition	"line . find ( ""---"" ) >= 0"	636:16:22163:22181	3366050	0	True				
ANR	3366255	RelationalExpression	"line . find ( ""---"" ) >= 0"		3366050	0		>=			
ANR	3366256	CallExpression	"line . find ( ""---"" )"		3366050	0					
ANR	3366257	Callee	line . find		3366050	0					
ANR	3366258	MemberAccess	line . find		3366050	0					
ANR	3366259	Identifier	line		3366050	0					
ANR	3366260	Identifier	find		3366050	1					
ANR	3366261	ArgumentList	"""---"""		3366050	1					
ANR	3366262	Argument	"""---"""		3366050	0					
ANR	3366263	PrimaryExpression	"""---"""		3366050	0					
ANR	3366264	PrimaryExpression	0		3366050	1					
ANR	3366265	CompoundStatement		35:37:900:900	3366050	1					
ANR	3366266	ExpressionStatement	short_report = true	637:16:22233:22250	3366050	0	True				
ANR	3366267	AssignmentExpression	short_report = true		3366050	0		=			
ANR	3366268	Identifier	short_report		3366050	0					
ANR	3366269	Identifier	true		3366050	1					
ANR	3366270	ContinueStatement	continue ;	638:16:22303:22311	3366050	1	True				
ANR	3366271	ExpressionStatement	result += line	640:12:22339:22353	3366050	2	True				
ANR	3366272	AssignmentExpression	result += line		3366050	0		+=			
ANR	3366273	Identifier	result		3366050	0					
ANR	3366274	Identifier	line		3366050	1					
ANR	3366275	IfStatement	if ( short_report )		3366050	3					
ANR	3366276	Condition	short_report	641:16:22371:22382	3366050	0	True				
ANR	3366277	Identifier	short_report		3366050	0					
ANR	3366278	BreakStatement	break ;	642:16:22437:22442	3366050	1	True				
ANR	3366279	ExpressionStatement	my_pclose ( fp )	644:8:22462:22477	3366050	16	True				
ANR	3366280	CallExpression	my_pclose ( fp )		3366050	0					
ANR	3366281	Callee	my_pclose		3366050	0					
ANR	3366282	Identifier	my_pclose		3366050	0					
ANR	3366283	ArgumentList	fp		3366050	1					
ANR	3366284	Argument	fp		3366050	0					
ANR	3366285	Identifier	fp		3366050	0					
ANR	3366286	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""RESULT:%s\\n"" , result . Value ( ) )"	645:8:22487:22537	3366050	17	True				
ANR	3366287	CallExpression	"dprintf ( D_FULLDEBUG , ""RESULT:%s\\n"" , result . Value ( ) )"		3366050	0					
ANR	3366288	Callee	dprintf		3366050	0					
ANR	3366289	Identifier	dprintf		3366050	0					
ANR	3366290	ArgumentList	D_FULLDEBUG		3366050	1					
ANR	3366291	Argument	D_FULLDEBUG		3366050	0					
ANR	3366292	Identifier	D_FULLDEBUG		3366050	0					
ANR	3366293	Argument	"""RESULT:%s\\n"""		3366050	1					
ANR	3366294	PrimaryExpression	"""RESULT:%s\\n"""		3366050	0					
ANR	3366295	Argument	result . Value ( )		3366050	2					
ANR	3366296	CallExpression	result . Value ( )		3366050	0					
ANR	3366297	Callee	result . Value		3366050	0					
ANR	3366298	MemberAccess	result . Value		3366050	0					
ANR	3366299	Identifier	result		3366050	0					
ANR	3366300	Identifier	Value		3366050	1					
ANR	3366301	ArgumentList			3366050	1					
ANR	3366302	ReturnStatement	return result ;	646:8:22547:22560	3366050	18	True				
ANR	3366303	Identifier	result		3366050	0					
ANR	3366304	ReturnType	MyString		3366050	1					
ANR	3366305	Identifier	Hadoop :: runDFSAdmin		3366050	2					
ANR	3366306	ParameterList	"const char * cmd , const char * attr"		3366050	3					
ANR	3366307	Parameter	const char * cmd	602:30:21247:21262	3366050	0	True				
ANR	3366308	ParameterType	const char *		3366050	0					
ANR	3366309	Identifier	cmd		3366050	1					
ANR	3366310	Parameter	const char * attr	602:48:21265:21280	3366050	1	True				
ANR	3366311	ParameterType	const char *		3366050	0					
ANR	3366312	Identifier	attr		3366050	1					
ANR	3366313	CFGEntryNode	ENTRY		3366050		True				
ANR	3366314	CFGExitNode	EXIT		3366050		True				
ANR	3366315	Symbol	line . find		3366050						
ANR	3366316	Symbol	line		3366050						
ANR	3366317	Symbol	STDOUT_READBUF_SIZE		3366050						
ANR	3366318	Symbol	arglist . GetArg		3366050						
ANR	3366319	Symbol	fp		3366050						
ANR	3366320	Symbol	& arglist		3366050						
ANR	3366321	Symbol	my_popen		3366050						
ANR	3366322	Symbol	fgets		3366050						
ANR	3366323	Symbol	result		3366050						
ANR	3366324	Symbol	& m_classpath		3366050						
ANR	3366325	Symbol	result . Value		3366050						
ANR	3366326	Symbol	arglist		3366050						
ANR	3366327	Symbol	argString		3366050						
ANR	3366328	Symbol	m_java		3366050						
ANR	3366329	Symbol	short_report		3366050						
ANR	3366330	Symbol	attr		3366050						
ANR	3366331	Symbol	m_dfsAdminClass		3366050						
ANR	3366332	Symbol	NULL		3366050						
ANR	3366333	Symbol	m_java . Value		3366050						
ANR	3366334	Symbol	D_ALWAYS		3366050						
ANR	3366335	Symbol	false		3366050						
ANR	3366336	Symbol	D_FULLDEBUG		3366050						
ANR	3366337	Symbol	argString . Value		3366050						
ANR	3366338	Symbol	arglist . Count		3366050						
ANR	3366339	Symbol	buf		3366050						
ANR	3366340	Symbol	true		3366050						
ANR	3366341	Symbol	FALSE		3366050						
ANR	3366342	Symbol	cmd		3366050						
ANR	3366343	Symbol	& argString		3366050						
ANR	3366344	Function	Hadoop :: writeXMLParam	649:0:22565:22924							
ANR	3366345	FunctionDef	"Hadoop :: writeXMLParam (const char * key , const char * value , StringList * buff)"		3366344	0					
ANR	3366346	CompoundStatement		649:81:22646:22924	3366344	0					
ANR	3366347	IdentifierDeclStatement	MyString temp ;	650:8:22656:22669	3366344	0	True				
ANR	3366348	IdentifierDecl	temp		3366344	0					
ANR	3366349	IdentifierDeclType	MyString		3366344	0					
ANR	3366350	Identifier	temp		3366344	1					
ANR	3366351	ExpressionStatement	"buff -> append ( ""<property>"" )"	652:8:22680:22706	3366344	1	True				
ANR	3366352	CallExpression	"buff -> append ( ""<property>"" )"		3366344	0					
ANR	3366353	Callee	buff -> append		3366344	0					
ANR	3366354	PtrMemberAccess	buff -> append		3366344	0					
ANR	3366355	Identifier	buff		3366344	0					
ANR	3366356	Identifier	append		3366344	1					
ANR	3366357	ArgumentList	"""<property>"""		3366344	1					
ANR	3366358	Argument	"""<property>"""		3366344	0					
ANR	3366359	PrimaryExpression	"""<property>"""		3366344	0					
ANR	3366360	ExpressionStatement	"temp . sprintf ( ""    <name>%s</name>"" , key )"	654:8:22717:22757	3366344	2	True				
ANR	3366361	CallExpression	"temp . sprintf ( ""    <name>%s</name>"" , key )"		3366344	0					
ANR	3366362	Callee	temp . sprintf		3366344	0					
ANR	3366363	MemberAccess	temp . sprintf		3366344	0					
ANR	3366364	Identifier	temp		3366344	0					
ANR	3366365	Identifier	sprintf		3366344	1					
ANR	3366366	ArgumentList	"""    <name>%s</name>"""		3366344	1					
ANR	3366367	Argument	"""    <name>%s</name>"""		3366344	0					
ANR	3366368	PrimaryExpression	"""    <name>%s</name>"""		3366344	0					
ANR	3366369	Argument	key		3366344	1					
ANR	3366370	Identifier	key		3366344	0					
ANR	3366371	ExpressionStatement	buff -> append ( temp . Value ( ) )	655:8:22767:22793	3366344	3	True				
ANR	3366372	CallExpression	buff -> append ( temp . Value ( ) )		3366344	0					
ANR	3366373	Callee	buff -> append		3366344	0					
ANR	3366374	PtrMemberAccess	buff -> append		3366344	0					
ANR	3366375	Identifier	buff		3366344	0					
ANR	3366376	Identifier	append		3366344	1					
ANR	3366377	ArgumentList	temp . Value ( )		3366344	1					
ANR	3366378	Argument	temp . Value ( )		3366344	0					
ANR	3366379	CallExpression	temp . Value ( )		3366344	0					
ANR	3366380	Callee	temp . Value		3366344	0					
ANR	3366381	MemberAccess	temp . Value		3366344	0					
ANR	3366382	Identifier	temp		3366344	0					
ANR	3366383	Identifier	Value		3366344	1					
ANR	3366384	ArgumentList			3366344	1					
ANR	3366385	ExpressionStatement	"temp . sprintf ( ""    <value>%s</value>"" , value )"	657:8:22804:22848	3366344	4	True				
ANR	3366386	CallExpression	"temp . sprintf ( ""    <value>%s</value>"" , value )"		3366344	0					
ANR	3366387	Callee	temp . sprintf		3366344	0					
ANR	3366388	MemberAccess	temp . sprintf		3366344	0					
ANR	3366389	Identifier	temp		3366344	0					
ANR	3366390	Identifier	sprintf		3366344	1					
ANR	3366391	ArgumentList	"""    <value>%s</value>"""		3366344	1					
ANR	3366392	Argument	"""    <value>%s</value>"""		3366344	0					
ANR	3366393	PrimaryExpression	"""    <value>%s</value>"""		3366344	0					
ANR	3366394	Argument	value		3366344	1					
ANR	3366395	Identifier	value		3366344	0					
ANR	3366396	ExpressionStatement	buff -> append ( temp . Value ( ) )	658:8:22858:22884	3366344	5	True				
ANR	3366397	CallExpression	buff -> append ( temp . Value ( ) )		3366344	0					
ANR	3366398	Callee	buff -> append		3366344	0					
ANR	3366399	PtrMemberAccess	buff -> append		3366344	0					
ANR	3366400	Identifier	buff		3366344	0					
ANR	3366401	Identifier	append		3366344	1					
ANR	3366402	ArgumentList	temp . Value ( )		3366344	1					
ANR	3366403	Argument	temp . Value ( )		3366344	0					
ANR	3366404	CallExpression	temp . Value ( )		3366344	0					
ANR	3366405	Callee	temp . Value		3366344	0					
ANR	3366406	MemberAccess	temp . Value		3366344	0					
ANR	3366407	Identifier	temp		3366344	0					
ANR	3366408	Identifier	Value		3366344	1					
ANR	3366409	ArgumentList			3366344	1					
ANR	3366410	ExpressionStatement	"buff -> append ( ""</property>"" )"	660:8:22895:22922	3366344	6	True				
ANR	3366411	CallExpression	"buff -> append ( ""</property>"" )"		3366344	0					
ANR	3366412	Callee	buff -> append		3366344	0					
ANR	3366413	PtrMemberAccess	buff -> append		3366344	0					
ANR	3366414	Identifier	buff		3366344	0					
ANR	3366415	Identifier	append		3366344	1					
ANR	3366416	ArgumentList	"""</property>"""		3366344	1					
ANR	3366417	Argument	"""</property>"""		3366344	0					
ANR	3366418	PrimaryExpression	"""</property>"""		3366344	0					
ANR	3366419	ReturnType	void		3366344	1					
ANR	3366420	Identifier	Hadoop :: writeXMLParam		3366344	2					
ANR	3366421	ParameterList	"const char * key , const char * value , StringList * buff"		3366344	3					
ANR	3366422	Parameter	const char * key	649:27:22592:22606	3366344	0	True				
ANR	3366423	ParameterType	const char *		3366344	0					
ANR	3366424	Identifier	key		3366344	1					
ANR	3366425	Parameter	const char * value	649:44:22609:22625	3366344	1	True				
ANR	3366426	ParameterType	const char *		3366344	0					
ANR	3366427	Identifier	value		3366344	1					
ANR	3366428	Parameter	StringList * buff	649:63:22628:22643	3366344	2	True				
ANR	3366429	ParameterType	StringList *		3366344	0					
ANR	3366430	Identifier	buff		3366344	1					
ANR	3366431	CFGEntryNode	ENTRY		3366344		True				
ANR	3366432	CFGExitNode	EXIT		3366344		True				
ANR	3366433	Symbol	temp		3366344						
ANR	3366434	Symbol	temp . Value		3366344						
ANR	3366435	Symbol	value		3366344						
ANR	3366436	Symbol	buff		3366344						
ANR	3366437	Symbol	key		3366344						
ANR	3366438	Function	Hadoop :: recurrBuildClasspath	663:0:22927:23544							
ANR	3366439	FunctionDef	Hadoop :: recurrBuildClasspath (const char * path)		3366438	0					
ANR	3366440	CompoundStatement		663:52:22979:23544	3366438	0					
ANR	3366441	IdentifierDeclStatement	Directory dir ( path ) ;	664:8:22989:23008	3366438	0	True				
ANR	3366442	IdentifierDecl	dir ( path )		3366438	0					
ANR	3366443	IdentifierDeclType	Directory		3366438	0					
ANR	3366444	Identifier	dir		3366438	1					
ANR	3366445	Identifier	path		3366438	2					
ANR	3366446	ExpressionStatement	dir . Rewind ( )	665:8:23018:23030	3366438	1	True				
ANR	3366447	CallExpression	dir . Rewind ( )		3366438	0					
ANR	3366448	Callee	dir . Rewind		3366438	0					
ANR	3366449	MemberAccess	dir . Rewind		3366438	0					
ANR	3366450	Identifier	dir		3366438	0					
ANR	3366451	Identifier	Rewind		3366438	1					
ANR	3366452	ArgumentList			3366438	1					
ANR	3366453	IdentifierDeclStatement	const char * ctmp ;	667:8:23041:23057	3366438	2	True				
ANR	3366454	IdentifierDecl	* ctmp		3366438	0					
ANR	3366455	IdentifierDeclType	const char *		3366438	0					
ANR	3366456	Identifier	ctmp		3366438	1					
ANR	3366457	WhileStatement	while ( ( ctmp = dir . Next ( ) ) )		3366438	3					
ANR	3366458	Condition	ctmp = dir . Next ( )	668:16:23075:23093	3366438	0	True				
ANR	3366459	AssignmentExpression	ctmp = dir . Next ( )		3366438	0		=			
ANR	3366460	Identifier	ctmp		3366438	0					
ANR	3366461	CallExpression	dir . Next ( )		3366438	1					
ANR	3366462	Callee	dir . Next		3366438	0					
ANR	3366463	MemberAccess	dir . Next		3366438	0					
ANR	3366464	Identifier	dir		3366438	0					
ANR	3366465	Identifier	Next		3366438	1					
ANR	3366466	ArgumentList			3366438	1					
ANR	3366467	CompoundStatement		7:16:134:174	3366438	1					
ANR	3366468	IdentifierDeclStatement	"const char * match = strstr ( ctmp , "".jar"" ) ;"	669:16:23114:23154	3366438	0	True				
ANR	3366469	IdentifierDecl	"* match = strstr ( ctmp , "".jar"" )"		3366438	0					
ANR	3366470	IdentifierDeclType	const char *		3366438	0					
ANR	3366471	Identifier	match		3366438	1					
ANR	3366472	AssignmentExpression	"* match = strstr ( ctmp , "".jar"" )"		3366438	2		=			
ANR	3366473	Identifier	match		3366438	0					
ANR	3366474	CallExpression	"strstr ( ctmp , "".jar"" )"		3366438	1					
ANR	3366475	Callee	strstr		3366438	0					
ANR	3366476	Identifier	strstr		3366438	0					
ANR	3366477	ArgumentList	ctmp		3366438	1					
ANR	3366478	Argument	ctmp		3366438	0					
ANR	3366479	Identifier	ctmp		3366438	0					
ANR	3366480	Argument	""".jar"""		3366438	1					
ANR	3366481	PrimaryExpression	""".jar"""		3366438	0					
ANR	3366482	IfStatement	if ( match && strlen ( match ) == 4 )		3366438	1					
ANR	3366483	Condition	match && strlen ( match ) == 4	670:20:23176:23202	3366438	0	True				
ANR	3366484	AndExpression	match && strlen ( match ) == 4		3366438	0		&&			
ANR	3366485	Identifier	match		3366438	0					
ANR	3366486	EqualityExpression	strlen ( match ) == 4		3366438	1		==			
ANR	3366487	CallExpression	strlen ( match )		3366438	0					
ANR	3366488	Callee	strlen		3366438	0					
ANR	3366489	Identifier	strlen		3366438	0					
ANR	3366490	ArgumentList	match		3366438	1					
ANR	3366491	Argument	match		3366438	0					
ANR	3366492	Identifier	match		3366438	0					
ANR	3366493	PrimaryExpression	4		3366438	1					
ANR	3366494	CompoundStatement		8:49:225:225	3366438	1					
ANR	3366495	ExpressionStatement	m_classpath . insert ( dir . GetFullPath ( ) )	671:24:23231:23268	3366438	0	True				
ANR	3366496	CallExpression	m_classpath . insert ( dir . GetFullPath ( ) )		3366438	0					
ANR	3366497	Callee	m_classpath . insert		3366438	0					
ANR	3366498	MemberAccess	m_classpath . insert		3366438	0					
ANR	3366499	Identifier	m_classpath		3366438	0					
ANR	3366500	Identifier	insert		3366438	1					
ANR	3366501	ArgumentList	dir . GetFullPath ( )		3366438	1					
ANR	3366502	Argument	dir . GetFullPath ( )		3366438	0					
ANR	3366503	CallExpression	dir . GetFullPath ( )		3366438	0					
ANR	3366504	Callee	dir . GetFullPath		3366438	0					
ANR	3366505	MemberAccess	dir . GetFullPath		3366438	0					
ANR	3366506	Identifier	dir		3366438	0					
ANR	3366507	Identifier	GetFullPath		3366438	1					
ANR	3366508	ArgumentList			3366438	1					
ANR	3366509	ElseStatement	else		3366438	0					
ANR	3366510	IfStatement	if ( dir . IsDirectory ( ) )		3366438	0					
ANR	3366511	Condition	dir . IsDirectory ( )	672:27:23297:23313	3366438	0	True				
ANR	3366512	CallExpression	dir . IsDirectory ( )		3366438	0					
ANR	3366513	Callee	dir . IsDirectory		3366438	0					
ANR	3366514	MemberAccess	dir . IsDirectory		3366438	0					
ANR	3366515	Identifier	dir		3366438	0					
ANR	3366516	Identifier	IsDirectory		3366438	1					
ANR	3366517	ArgumentList			3366438	1					
ANR	3366518	CompoundStatement		11:21:359:396	3366438	1					
ANR	3366519	IdentifierDeclStatement	"const char * tmp = strstr ( ctmp , ""lib"" ) ;"	673:21:23339:23376	3366438	0	True				
ANR	3366520	IdentifierDecl	"* tmp = strstr ( ctmp , ""lib"" )"		3366438	0					
ANR	3366521	IdentifierDeclType	const char *		3366438	0					
ANR	3366522	Identifier	tmp		3366438	1					
ANR	3366523	AssignmentExpression	"* tmp = strstr ( ctmp , ""lib"" )"		3366438	2		=			
ANR	3366524	Identifier	tmp		3366438	0					
ANR	3366525	CallExpression	"strstr ( ctmp , ""lib"" )"		3366438	1					
ANR	3366526	Callee	strstr		3366438	0					
ANR	3366527	Identifier	strstr		3366438	0					
ANR	3366528	ArgumentList	ctmp		3366438	1					
ANR	3366529	Argument	ctmp		3366438	0					
ANR	3366530	Identifier	ctmp		3366438	0					
ANR	3366531	Argument	"""lib"""		3366438	1					
ANR	3366532	PrimaryExpression	"""lib"""		3366438	0					
ANR	3366533	IfStatement	if ( tmp && strlen ( tmp ) == 3 )		3366438	1					
ANR	3366534	Condition	tmp && strlen ( tmp ) == 3	674:25:23403:23425	3366438	0	True				
ANR	3366535	AndExpression	tmp && strlen ( tmp ) == 3		3366438	0		&&			
ANR	3366536	Identifier	tmp		3366438	0					
ANR	3366537	EqualityExpression	strlen ( tmp ) == 3		3366438	1		==			
ANR	3366538	CallExpression	strlen ( tmp )		3366438	0					
ANR	3366539	Callee	strlen		3366438	0					
ANR	3366540	Identifier	strlen		3366438	0					
ANR	3366541	ArgumentList	tmp		3366438	1					
ANR	3366542	Argument	tmp		3366438	0					
ANR	3366543	Identifier	tmp		3366438	0					
ANR	3366544	PrimaryExpression	3		3366438	1					
ANR	3366545	CompoundStatement		12:50:448:448	3366438	1					
ANR	3366546	ExpressionStatement	recurrBuildClasspath ( dir . GetFullPath ( ) )	675:22:23452:23491	3366438	0	True				
ANR	3366547	CallExpression	recurrBuildClasspath ( dir . GetFullPath ( ) )		3366438	0					
ANR	3366548	Callee	recurrBuildClasspath		3366438	0					
ANR	3366549	Identifier	recurrBuildClasspath		3366438	0					
ANR	3366550	ArgumentList	dir . GetFullPath ( )		3366438	1					
ANR	3366551	Argument	dir . GetFullPath ( )		3366438	0					
ANR	3366552	CallExpression	dir . GetFullPath ( )		3366438	0					
ANR	3366553	Callee	dir . GetFullPath		3366438	0					
ANR	3366554	MemberAccess	dir . GetFullPath		3366438	0					
ANR	3366555	Identifier	dir		3366438	0					
ANR	3366556	Identifier	GetFullPath		3366438	1					
ANR	3366557	ArgumentList			3366438	1					
ANR	3366558	ReturnType	void		3366438	1					
ANR	3366559	Identifier	Hadoop :: recurrBuildClasspath		3366438	2					
ANR	3366560	ParameterList	const char * path		3366438	3					
ANR	3366561	Parameter	const char * path	663:34:22961:22976	3366438	0	True				
ANR	3366562	ParameterType	const char *		3366438	0					
ANR	3366563	Identifier	path		3366438	1					
ANR	3366564	CFGEntryNode	ENTRY		3366438		True				
ANR	3366565	CFGExitNode	EXIT		3366438		True				
ANR	3366566	Symbol	dir . GetFullPath		3366438						
ANR	3366567	Symbol	path		3366438						
ANR	3366568	Symbol	strlen		3366438						
ANR	3366569	Symbol	m_classpath		3366438						
ANR	3366570	Symbol	strstr		3366438						
ANR	3366571	Symbol	tmp		3366438						
ANR	3366572	Symbol	match		3366438						
ANR	3366573	Symbol	ctmp		3366438						
ANR	3366574	Symbol	dir . IsDirectory		3366438						
ANR	3366575	Symbol	dir		3366438						
ANR	3366576	Symbol	dir . Next		3366438						
ANR	3366577	Function	Hadoop :: updateClassAd	680:0:23546:24822							
ANR	3366578	FunctionDef	"Hadoop :: updateClassAd (MyString safemode , MyString stats)"		3366577	0					
ANR	3366579	CompoundStatement		680:63:23609:24822	3366577	0					
ANR	3366580	IdentifierDeclStatement	"MyString adKey , adValue ;"	682:7:23619:23642	3366577	0	True				
ANR	3366581	IdentifierDecl	adKey		3366577	0					
ANR	3366582	IdentifierDeclType	MyString		3366577	0					
ANR	3366583	Identifier	adKey		3366577	1					
ANR	3366584	IdentifierDecl	adValue		3366577	1					
ANR	3366585	IdentifierDeclType	MyString		3366577	0					
ANR	3366586	Identifier	adValue		3366577	1					
ANR	3366587	ExpressionStatement	"adKey . sprintf ( ""SAFEMODE"" )"	684:7:23652:23677	3366577	1	True				
ANR	3366588	CallExpression	"adKey . sprintf ( ""SAFEMODE"" )"		3366577	0					
ANR	3366589	Callee	adKey . sprintf		3366577	0					
ANR	3366590	MemberAccess	adKey . sprintf		3366577	0					
ANR	3366591	Identifier	adKey		3366577	0					
ANR	3366592	Identifier	sprintf		3366577	1					
ANR	3366593	ArgumentList	"""SAFEMODE"""		3366577	1					
ANR	3366594	Argument	"""SAFEMODE"""		3366577	0					
ANR	3366595	PrimaryExpression	"""SAFEMODE"""		3366577	0					
ANR	3366596	IdentifierDeclStatement	"int pos = safemode . find ( ""OFF"" , 0 ) ;"	685:7:23686:23719	3366577	2	True				
ANR	3366597	IdentifierDecl	"pos = safemode . find ( ""OFF"" , 0 )"		3366577	0					
ANR	3366598	IdentifierDeclType	int		3366577	0					
ANR	3366599	Identifier	pos		3366577	1					
ANR	3366600	AssignmentExpression	"pos = safemode . find ( ""OFF"" , 0 )"		3366577	2		=			
ANR	3366601	Identifier	pos		3366577	0					
ANR	3366602	CallExpression	"safemode . find ( ""OFF"" , 0 )"		3366577	1					
ANR	3366603	Callee	safemode . find		3366577	0					
ANR	3366604	MemberAccess	safemode . find		3366577	0					
ANR	3366605	Identifier	safemode		3366577	0					
ANR	3366606	Identifier	find		3366577	1					
ANR	3366607	ArgumentList	"""OFF"""		3366577	1					
ANR	3366608	Argument	"""OFF"""		3366577	0					
ANR	3366609	PrimaryExpression	"""OFF"""		3366577	0					
ANR	3366610	Argument	0		3366577	1					
ANR	3366611	PrimaryExpression	0		3366577	0					
ANR	3366612	IfStatement	if ( pos >= 0 )		3366577	3					
ANR	3366613	Condition	pos >= 0	686:11:23732:23739	3366577	0	True				
ANR	3366614	RelationalExpression	pos >= 0		3366577	0		>=			
ANR	3366615	Identifier	pos		3366577	0					
ANR	3366616	PrimaryExpression	0		3366577	1					
ANR	3366617	ExpressionStatement	"adValue . sprintf ( ""ON"" )"	687:11:23753:23774	3366577	1	True				
ANR	3366618	CallExpression	"adValue . sprintf ( ""ON"" )"		3366577	0					
ANR	3366619	Callee	adValue . sprintf		3366577	0					
ANR	3366620	MemberAccess	adValue . sprintf		3366577	0					
ANR	3366621	Identifier	adValue		3366577	0					
ANR	3366622	Identifier	sprintf		3366577	1					
ANR	3366623	ArgumentList	"""ON"""		3366577	1					
ANR	3366624	Argument	"""ON"""		3366577	0					
ANR	3366625	PrimaryExpression	"""ON"""		3366577	0					
ANR	3366626	ElseStatement	else		3366577	0					
ANR	3366627	ExpressionStatement	"adValue . sprintf ( ""OFF"" )"	689:11:23799:23821	3366577	0	True				
ANR	3366628	CallExpression	"adValue . sprintf ( ""OFF"" )"		3366577	0					
ANR	3366629	Callee	adValue . sprintf		3366577	0					
ANR	3366630	MemberAccess	adValue . sprintf		3366577	0					
ANR	3366631	Identifier	adValue		3366577	0					
ANR	3366632	Identifier	sprintf		3366577	1					
ANR	3366633	ArgumentList	"""OFF"""		3366577	1					
ANR	3366634	Argument	"""OFF"""		3366577	0					
ANR	3366635	PrimaryExpression	"""OFF"""		3366577	0					
ANR	3366636	ExpressionStatement	"m_hdfsAd . Assign ( adKey . Value ( ) , adValue . Value ( ) )"	691:7:23831:23879	3366577	4	True				
ANR	3366637	CallExpression	"m_hdfsAd . Assign ( adKey . Value ( ) , adValue . Value ( ) )"		3366577	0					
ANR	3366638	Callee	m_hdfsAd . Assign		3366577	0					
ANR	3366639	MemberAccess	m_hdfsAd . Assign		3366577	0					
ANR	3366640	Identifier	m_hdfsAd		3366577	0					
ANR	3366641	Identifier	Assign		3366577	1					
ANR	3366642	ArgumentList	adKey . Value ( )		3366577	1					
ANR	3366643	Argument	adKey . Value ( )		3366577	0					
ANR	3366644	CallExpression	adKey . Value ( )		3366577	0					
ANR	3366645	Callee	adKey . Value		3366577	0					
ANR	3366646	MemberAccess	adKey . Value		3366577	0					
ANR	3366647	Identifier	adKey		3366577	0					
ANR	3366648	Identifier	Value		3366577	1					
ANR	3366649	ArgumentList			3366577	1					
ANR	3366650	Argument	adValue . Value ( )		3366577	1					
ANR	3366651	CallExpression	adValue . Value ( )		3366577	0					
ANR	3366652	Callee	adValue . Value		3366577	0					
ANR	3366653	MemberAccess	adValue . Value		3366577	0					
ANR	3366654	Identifier	adValue		3366577	0					
ANR	3366655	Identifier	Value		3366577	1					
ANR	3366656	ArgumentList			3366577	1					
ANR	3366657	ExpressionStatement	"dprintf ( D_ALWAYS , ""Key=%s:Value=%s\\n"" , adKey . Value ( ) , adValue . Value ( ) )"	692:7:23888:23960	3366577	5	True				
ANR	3366658	CallExpression	"dprintf ( D_ALWAYS , ""Key=%s:Value=%s\\n"" , adKey . Value ( ) , adValue . Value ( ) )"		3366577	0					
ANR	3366659	Callee	dprintf		3366577	0					
ANR	3366660	Identifier	dprintf		3366577	0					
ANR	3366661	ArgumentList	D_ALWAYS		3366577	1					
ANR	3366662	Argument	D_ALWAYS		3366577	0					
ANR	3366663	Identifier	D_ALWAYS		3366577	0					
ANR	3366664	Argument	"""Key=%s:Value=%s\\n"""		3366577	1					
ANR	3366665	PrimaryExpression	"""Key=%s:Value=%s\\n"""		3366577	0					
ANR	3366666	Argument	adKey . Value ( )		3366577	2					
ANR	3366667	CallExpression	adKey . Value ( )		3366577	0					
ANR	3366668	Callee	adKey . Value		3366577	0					
ANR	3366669	MemberAccess	adKey . Value		3366577	0					
ANR	3366670	Identifier	adKey		3366577	0					
ANR	3366671	Identifier	Value		3366577	1					
ANR	3366672	ArgumentList			3366577	1					
ANR	3366673	Argument	adValue . Value ( )		3366577	3					
ANR	3366674	CallExpression	adValue . Value ( )		3366577	0					
ANR	3366675	Callee	adValue . Value		3366577	0					
ANR	3366676	MemberAccess	adValue . Value		3366577	0					
ANR	3366677	Identifier	adValue		3366577	0					
ANR	3366678	Identifier	Value		3366577	1					
ANR	3366679	ArgumentList			3366577	1					
ANR	3366680	IdentifierDeclStatement	int ln_begin = 0 ;	694:7:23970:23986	3366577	6	True				
ANR	3366681	IdentifierDecl	ln_begin = 0		3366577	0					
ANR	3366682	IdentifierDeclType	int		3366577	0					
ANR	3366683	Identifier	ln_begin		3366577	1					
ANR	3366684	AssignmentExpression	ln_begin = 0		3366577	2		=			
ANR	3366685	Identifier	ln_begin		3366577	0					
ANR	3366686	PrimaryExpression	0		3366577	1					
ANR	3366687	IdentifierDeclStatement	int ln_end = 0 ;	695:7:23995:24009	3366577	7	True				
ANR	3366688	IdentifierDecl	ln_end = 0		3366577	0					
ANR	3366689	IdentifierDeclType	int		3366577	0					
ANR	3366690	Identifier	ln_end		3366577	1					
ANR	3366691	AssignmentExpression	ln_end = 0		3366577	2		=			
ANR	3366692	Identifier	ln_end		3366577	0					
ANR	3366693	PrimaryExpression	0		3366577	1					
ANR	3366694	WhileStatement	"while ( ( ln_end = stats . FindChar ( '\\n' , ln_begin + 1 ) ) > 0 )"		3366577	8					
ANR	3366695	Condition	"( ln_end = stats . FindChar ( '\\n' , ln_begin + 1 ) ) > 0"	697:14:24026:24072	3366577	0	True				
ANR	3366696	RelationalExpression	"( ln_end = stats . FindChar ( '\\n' , ln_begin + 1 ) ) > 0"		3366577	0		>			
ANR	3366697	AssignmentExpression	"ln_end = stats . FindChar ( '\\n' , ln_begin + 1 )"		3366577	0		=			
ANR	3366698	Identifier	ln_end		3366577	0					
ANR	3366699	CallExpression	"stats . FindChar ( '\\n' , ln_begin + 1 )"		3366577	1					
ANR	3366700	Callee	stats . FindChar		3366577	0					
ANR	3366701	MemberAccess	stats . FindChar		3366577	0					
ANR	3366702	Identifier	stats		3366577	0					
ANR	3366703	Identifier	FindChar		3366577	1					
ANR	3366704	ArgumentList	'\\n'		3366577	1					
ANR	3366705	Argument	'\\n'		3366577	0					
ANR	3366706	PrimaryExpression	'\\n'		3366577	0					
ANR	3366707	Argument	ln_begin + 1		3366577	1					
ANR	3366708	AdditiveExpression	ln_begin + 1		3366577	0		+			
ANR	3366709	Identifier	ln_begin		3366577	0					
ANR	3366710	PrimaryExpression	1		3366577	1					
ANR	3366711	PrimaryExpression	0		3366577	1					
ANR	3366712	CompoundStatement		19:12:480:528	3366577	1					
ANR	3366713	IdentifierDeclStatement	"MyString line = stats . Substr ( ln_begin , ln_end - 1 ) ;"	698:12:24090:24138	3366577	0	True				
ANR	3366714	IdentifierDecl	"line = stats . Substr ( ln_begin , ln_end - 1 )"		3366577	0					
ANR	3366715	IdentifierDeclType	MyString		3366577	0					
ANR	3366716	Identifier	line		3366577	1					
ANR	3366717	AssignmentExpression	"line = stats . Substr ( ln_begin , ln_end - 1 )"		3366577	2		=			
ANR	3366718	Identifier	line		3366577	0					
ANR	3366719	CallExpression	"stats . Substr ( ln_begin , ln_end - 1 )"		3366577	1					
ANR	3366720	Callee	stats . Substr		3366577	0					
ANR	3366721	MemberAccess	stats . Substr		3366577	0					
ANR	3366722	Identifier	stats		3366577	0					
ANR	3366723	Identifier	Substr		3366577	1					
ANR	3366724	ArgumentList	ln_begin		3366577	1					
ANR	3366725	Argument	ln_begin		3366577	0					
ANR	3366726	Identifier	ln_begin		3366577	0					
ANR	3366727	Argument	ln_end - 1		3366577	1					
ANR	3366728	AdditiveExpression	ln_end - 1		3366577	0		-			
ANR	3366729	Identifier	ln_end		3366577	0					
ANR	3366730	PrimaryExpression	1		3366577	1					
ANR	3366731	ExpressionStatement	ln_begin = ln_end	699:12:24152:24169	3366577	1	True				
ANR	3366732	AssignmentExpression	ln_begin = ln_end		3366577	0		=			
ANR	3366733	Identifier	ln_begin		3366577	0					
ANR	3366734	Identifier	ln_end		3366577	1					
ANR	3366735	ExpressionStatement	line . trim ( )	700:12:24183:24194	3366577	2	True				
ANR	3366736	CallExpression	line . trim ( )		3366577	0					
ANR	3366737	Callee	line . trim		3366577	0					
ANR	3366738	MemberAccess	line . trim		3366577	0					
ANR	3366739	Identifier	line		3366577	0					
ANR	3366740	Identifier	trim		3366577	1					
ANR	3366741	ArgumentList			3366577	1					
ANR	3366742	IfStatement	if ( line . Length ( ) < 2 )		3366577	3					
ANR	3366743	Condition	line . Length ( ) < 2	701:16:24212:24228	3366577	0	True				
ANR	3366744	RelationalExpression	line . Length ( ) < 2		3366577	0		<			
ANR	3366745	CallExpression	line . Length ( )		3366577	0					
ANR	3366746	Callee	line . Length		3366577	0					
ANR	3366747	MemberAccess	line . Length		3366577	0					
ANR	3366748	Identifier	line		3366577	0					
ANR	3366749	Identifier	Length		3366577	1					
ANR	3366750	ArgumentList			3366577	1					
ANR	3366751	PrimaryExpression	2		3366577	1					
ANR	3366752	ContinueStatement	continue ;	702:16:24248:24256	3366577	1	True				
ANR	3366753	ExpressionStatement	"pos = line . FindChar ( ':' , 0 )"	704:12:24272:24299	3366577	4	True				
ANR	3366754	AssignmentExpression	"pos = line . FindChar ( ':' , 0 )"		3366577	0		=			
ANR	3366755	Identifier	pos		3366577	0					
ANR	3366756	CallExpression	"line . FindChar ( ':' , 0 )"		3366577	1					
ANR	3366757	Callee	line . FindChar		3366577	0					
ANR	3366758	MemberAccess	line . FindChar		3366577	0					
ANR	3366759	Identifier	line		3366577	0					
ANR	3366760	Identifier	FindChar		3366577	1					
ANR	3366761	ArgumentList	':'		3366577	1					
ANR	3366762	Argument	':'		3366577	0					
ANR	3366763	PrimaryExpression	':'		3366577	0					
ANR	3366764	Argument	0		3366577	1					
ANR	3366765	PrimaryExpression	0		3366577	0					
ANR	3366766	IfStatement	if ( pos < 0 )		3366577	5					
ANR	3366767	Condition	pos < 0	705:16:24317:24323	3366577	0	True				
ANR	3366768	RelationalExpression	pos < 0		3366577	0		<			
ANR	3366769	Identifier	pos		3366577	0					
ANR	3366770	PrimaryExpression	0		3366577	1					
ANR	3366771	ContinueStatement	continue ;	706:16:24368:24376	3366577	1	True				
ANR	3366772	ExpressionStatement	"adKey = line . Substr ( 0 , pos - 1 )"	708:12:24391:24420	3366577	6	True				
ANR	3366773	AssignmentExpression	"adKey = line . Substr ( 0 , pos - 1 )"		3366577	0		=			
ANR	3366774	Identifier	adKey		3366577	0					
ANR	3366775	CallExpression	"line . Substr ( 0 , pos - 1 )"		3366577	1					
ANR	3366776	Callee	line . Substr		3366577	0					
ANR	3366777	MemberAccess	line . Substr		3366577	0					
ANR	3366778	Identifier	line		3366577	0					
ANR	3366779	Identifier	Substr		3366577	1					
ANR	3366780	ArgumentList	0		3366577	1					
ANR	3366781	Argument	0		3366577	0					
ANR	3366782	PrimaryExpression	0		3366577	0					
ANR	3366783	Argument	pos - 1		3366577	1					
ANR	3366784	AdditiveExpression	pos - 1		3366577	0		-			
ANR	3366785	Identifier	pos		3366577	0					
ANR	3366786	PrimaryExpression	1		3366577	1					
ANR	3366787	ExpressionStatement	"adKey . replaceString ( "" "" , ""_"" )"	709:12:24434:24462	3366577	7	True				
ANR	3366788	CallExpression	"adKey . replaceString ( "" "" , ""_"" )"		3366577	0					
ANR	3366789	Callee	adKey . replaceString		3366577	0					
ANR	3366790	MemberAccess	adKey . replaceString		3366577	0					
ANR	3366791	Identifier	adKey		3366577	0					
ANR	3366792	Identifier	replaceString		3366577	1					
ANR	3366793	ArgumentList	""" """		3366577	1					
ANR	3366794	Argument	""" """		3366577	0					
ANR	3366795	PrimaryExpression	""" """		3366577	0					
ANR	3366796	Argument	"""_"""		3366577	1					
ANR	3366797	PrimaryExpression	"""_"""		3366577	0					
ANR	3366798	ExpressionStatement	"adKey . replaceString ( ""%"" , ""Percent"" )"	710:12:24476:24510	3366577	8	True				
ANR	3366799	CallExpression	"adKey . replaceString ( ""%"" , ""Percent"" )"		3366577	0					
ANR	3366800	Callee	adKey . replaceString		3366577	0					
ANR	3366801	MemberAccess	adKey . replaceString		3366577	0					
ANR	3366802	Identifier	adKey		3366577	0					
ANR	3366803	Identifier	replaceString		3366577	1					
ANR	3366804	ArgumentList	"""%"""		3366577	1					
ANR	3366805	Argument	"""%"""		3366577	0					
ANR	3366806	PrimaryExpression	"""%"""		3366577	0					
ANR	3366807	Argument	"""Percent"""		3366577	1					
ANR	3366808	PrimaryExpression	"""Percent"""		3366577	0					
ANR	3366809	ExpressionStatement	"adValue = line . Substr ( pos + 1 , line . Length ( ) )"	711:12:24524:24568	3366577	9	True				
ANR	3366810	AssignmentExpression	"adValue = line . Substr ( pos + 1 , line . Length ( ) )"		3366577	0		=			
ANR	3366811	Identifier	adValue		3366577	0					
ANR	3366812	CallExpression	"line . Substr ( pos + 1 , line . Length ( ) )"		3366577	1					
ANR	3366813	Callee	line . Substr		3366577	0					
ANR	3366814	MemberAccess	line . Substr		3366577	0					
ANR	3366815	Identifier	line		3366577	0					
ANR	3366816	Identifier	Substr		3366577	1					
ANR	3366817	ArgumentList	pos + 1		3366577	1					
ANR	3366818	Argument	pos + 1		3366577	0					
ANR	3366819	AdditiveExpression	pos + 1		3366577	0		+			
ANR	3366820	Identifier	pos		3366577	0					
ANR	3366821	PrimaryExpression	1		3366577	1					
ANR	3366822	Argument	line . Length ( )		3366577	1					
ANR	3366823	CallExpression	line . Length ( )		3366577	0					
ANR	3366824	Callee	line . Length		3366577	0					
ANR	3366825	MemberAccess	line . Length		3366577	0					
ANR	3366826	Identifier	line		3366577	0					
ANR	3366827	Identifier	Length		3366577	1					
ANR	3366828	ArgumentList			3366577	1					
ANR	3366829	ExpressionStatement	"adValue . replaceString ( ""???"" , ""0"" )"	712:12:24582:24615	3366577	10	True				
ANR	3366830	CallExpression	"adValue . replaceString ( ""???"" , ""0"" )"		3366577	0					
ANR	3366831	Callee	adValue . replaceString		3366577	0					
ANR	3366832	MemberAccess	adValue . replaceString		3366577	0					
ANR	3366833	Identifier	adValue		3366577	0					
ANR	3366834	Identifier	replaceString		3366577	1					
ANR	3366835	ArgumentList	"""???"""		3366577	1					
ANR	3366836	Argument	"""???"""		3366577	0					
ANR	3366837	PrimaryExpression	"""???"""		3366577	0					
ANR	3366838	Argument	"""0"""		3366577	1					
ANR	3366839	PrimaryExpression	"""0"""		3366577	0					
ANR	3366840	ExpressionStatement	adValue . trim ( )	713:12:24650:24664	3366577	11	True				
ANR	3366841	CallExpression	adValue . trim ( )		3366577	0					
ANR	3366842	Callee	adValue . trim		3366577	0					
ANR	3366843	MemberAccess	adValue . trim		3366577	0					
ANR	3366844	Identifier	adValue		3366577	0					
ANR	3366845	Identifier	trim		3366577	1					
ANR	3366846	ArgumentList			3366577	1					
ANR	3366847	ExpressionStatement	"m_hdfsAd . Assign ( adKey . Value ( ) , adValue . Value ( ) )"	714:12:24678:24726	3366577	12	True				
ANR	3366848	CallExpression	"m_hdfsAd . Assign ( adKey . Value ( ) , adValue . Value ( ) )"		3366577	0					
ANR	3366849	Callee	m_hdfsAd . Assign		3366577	0					
ANR	3366850	MemberAccess	m_hdfsAd . Assign		3366577	0					
ANR	3366851	Identifier	m_hdfsAd		3366577	0					
ANR	3366852	Identifier	Assign		3366577	1					
ANR	3366853	ArgumentList	adKey . Value ( )		3366577	1					
ANR	3366854	Argument	adKey . Value ( )		3366577	0					
ANR	3366855	CallExpression	adKey . Value ( )		3366577	0					
ANR	3366856	Callee	adKey . Value		3366577	0					
ANR	3366857	MemberAccess	adKey . Value		3366577	0					
ANR	3366858	Identifier	adKey		3366577	0					
ANR	3366859	Identifier	Value		3366577	1					
ANR	3366860	ArgumentList			3366577	1					
ANR	3366861	Argument	adValue . Value ( )		3366577	1					
ANR	3366862	CallExpression	adValue . Value ( )		3366577	0					
ANR	3366863	Callee	adValue . Value		3366577	0					
ANR	3366864	MemberAccess	adValue . Value		3366577	0					
ANR	3366865	Identifier	adValue		3366577	0					
ANR	3366866	Identifier	Value		3366577	1					
ANR	3366867	ArgumentList			3366577	1					
ANR	3366868	ExpressionStatement	"dprintf ( D_ALWAYS , ""Key=%s:Value=%s\\n"" , adKey . Value ( ) , adValue . Value ( ) )"	715:12:24740:24812	3366577	13	True				
ANR	3366869	CallExpression	"dprintf ( D_ALWAYS , ""Key=%s:Value=%s\\n"" , adKey . Value ( ) , adValue . Value ( ) )"		3366577	0					
ANR	3366870	Callee	dprintf		3366577	0					
ANR	3366871	Identifier	dprintf		3366577	0					
ANR	3366872	ArgumentList	D_ALWAYS		3366577	1					
ANR	3366873	Argument	D_ALWAYS		3366577	0					
ANR	3366874	Identifier	D_ALWAYS		3366577	0					
ANR	3366875	Argument	"""Key=%s:Value=%s\\n"""		3366577	1					
ANR	3366876	PrimaryExpression	"""Key=%s:Value=%s\\n"""		3366577	0					
ANR	3366877	Argument	adKey . Value ( )		3366577	2					
ANR	3366878	CallExpression	adKey . Value ( )		3366577	0					
ANR	3366879	Callee	adKey . Value		3366577	0					
ANR	3366880	MemberAccess	adKey . Value		3366577	0					
ANR	3366881	Identifier	adKey		3366577	0					
ANR	3366882	Identifier	Value		3366577	1					
ANR	3366883	ArgumentList			3366577	1					
ANR	3366884	Argument	adValue . Value ( )		3366577	3					
ANR	3366885	CallExpression	adValue . Value ( )		3366577	0					
ANR	3366886	Callee	adValue . Value		3366577	0					
ANR	3366887	MemberAccess	adValue . Value		3366577	0					
ANR	3366888	Identifier	adValue		3366577	0					
ANR	3366889	Identifier	Value		3366577	1					
ANR	3366890	ArgumentList			3366577	1					
ANR	3366891	ReturnType	void		3366577	1					
ANR	3366892	Identifier	Hadoop :: updateClassAd		3366577	2					
ANR	3366893	ParameterList	"MyString safemode , MyString stats"		3366577	3					
ANR	3366894	Parameter	MyString safemode	680:28:23574:23590	3366577	0	True				
ANR	3366895	ParameterType	MyString		3366577	0					
ANR	3366896	Identifier	safemode		3366577	1					
ANR	3366897	Parameter	MyString stats	680:47:23593:23606	3366577	1	True				
ANR	3366898	ParameterType	MyString		3366577	0					
ANR	3366899	Identifier	stats		3366577	1					
ANR	3366900	CFGEntryNode	ENTRY		3366577		True				
ANR	3366901	CFGExitNode	EXIT		3366577		True				
ANR	3366902	Symbol	line . Substr		3366577						
ANR	3366903	Symbol	adValue . Value		3366577						
ANR	3366904	Symbol	safemode		3366577						
ANR	3366905	Symbol	adValue		3366577						
ANR	3366906	Symbol	line . Length		3366577						
ANR	3366907	Symbol	line		3366577						
ANR	3366908	Symbol	m_hdfsAd		3366577						
ANR	3366909	Symbol	D_ALWAYS		3366577						
ANR	3366910	Symbol	ln_begin		3366577						
ANR	3366911	Symbol	safemode . find		3366577						
ANR	3366912	Symbol	stats		3366577						
ANR	3366913	Symbol	pos		3366577						
ANR	3366914	Symbol	line . FindChar		3366577						
ANR	3366915	Symbol	stats . FindChar		3366577						
ANR	3366916	Symbol	ln_end		3366577						
ANR	3366917	Symbol	adKey		3366577						
ANR	3366918	Symbol	adKey . Value		3366577						
ANR	3366919	Symbol	stats . Substr		3366577						
ANR	3366920	Function	Hadoop :: publishClassAd	719:0:24825:25265							
ANR	3366921	FunctionDef	Hadoop :: publishClassAd ()		3366920	0					
ANR	3366922	CompoundStatement		719:30:24855:25265	3366920	0					
ANR	3366923	IfStatement	if ( m_nodeType == HDFS_NAMENODE )		3366920	0					
ANR	3366924	Condition	m_nodeType == HDFS_NAMENODE	721:11:24869:24895	3366920	0	True				
ANR	3366925	EqualityExpression	m_nodeType == HDFS_NAMENODE		3366920	0		==			
ANR	3366926	Identifier	m_nodeType		3366920	0					
ANR	3366927	Identifier	HDFS_NAMENODE		3366920	1					
ANR	3366928	CompoundStatement		5:11:116:155	3366920	1					
ANR	3366929	IdentifierDeclStatement	"MyString mode = runDFSAdmin ( ""-safemode"" , ""get"" ) ;"	722:11:24911:24959	3366920	0	True				
ANR	3366930	IdentifierDecl	"mode = runDFSAdmin ( ""-safemode"" , ""get"" )"		3366920	0					
ANR	3366931	IdentifierDeclType	MyString		3366920	0					
ANR	3366932	Identifier	mode		3366920	1					
ANR	3366933	AssignmentExpression	"mode = runDFSAdmin ( ""-safemode"" , ""get"" )"		3366920	2		=			
ANR	3366934	Identifier	mode		3366920	0					
ANR	3366935	CallExpression	"runDFSAdmin ( ""-safemode"" , ""get"" )"		3366920	1					
ANR	3366936	Callee	runDFSAdmin		3366920	0					
ANR	3366937	Identifier	runDFSAdmin		3366920	0					
ANR	3366938	ArgumentList	"""-safemode"""		3366920	1					
ANR	3366939	Argument	"""-safemode"""		3366920	0					
ANR	3366940	PrimaryExpression	"""-safemode"""		3366920	0					
ANR	3366941	Argument	"""get"""		3366920	1					
ANR	3366942	PrimaryExpression	"""get"""		3366920	0					
ANR	3366943	IdentifierDeclStatement	"MyString stats = runDFSAdmin ( ""-report"" ) ;"	723:11:24972:25011	3366920	1	True				
ANR	3366944	IdentifierDecl	"stats = runDFSAdmin ( ""-report"" )"		3366920	0					
ANR	3366945	IdentifierDeclType	MyString		3366920	0					
ANR	3366946	Identifier	stats		3366920	1					
ANR	3366947	AssignmentExpression	"stats = runDFSAdmin ( ""-report"" )"		3366920	2		=			
ANR	3366948	Identifier	stats		3366920	0					
ANR	3366949	CallExpression	"runDFSAdmin ( ""-report"" )"		3366920	1					
ANR	3366950	Callee	runDFSAdmin		3366920	0					
ANR	3366951	Identifier	runDFSAdmin		3366920	0					
ANR	3366952	ArgumentList	"""-report"""		3366920	1					
ANR	3366953	Argument	"""-report"""		3366920	0					
ANR	3366954	PrimaryExpression	"""-report"""		3366920	0					
ANR	3366955	ExpressionStatement	"updateClassAd ( mode , stats )"	725:11:25025:25053	3366920	2	True				
ANR	3366956	CallExpression	"updateClassAd ( mode , stats )"		3366920	0					
ANR	3366957	Callee	updateClassAd		3366920	0					
ANR	3366958	Identifier	updateClassAd		3366920	0					
ANR	3366959	ArgumentList	mode		3366920	1					
ANR	3366960	Argument	mode		3366920	0					
ANR	3366961	Identifier	mode		3366920	0					
ANR	3366962	Argument	stats		3366920	1					
ANR	3366963	Identifier	stats		3366920	0					
ANR	3366964	ExpressionStatement	daemonCore -> UpdateLocalAd ( & m_hdfsAd )	727:7:25071:25107	3366920	1	True				
ANR	3366965	CallExpression	daemonCore -> UpdateLocalAd ( & m_hdfsAd )		3366920	0					
ANR	3366966	Callee	daemonCore -> UpdateLocalAd		3366920	0					
ANR	3366967	PtrMemberAccess	daemonCore -> UpdateLocalAd		3366920	0					
ANR	3366968	Identifier	daemonCore		3366920	0					
ANR	3366969	Identifier	UpdateLocalAd		3366920	1					
ANR	3366970	ArgumentList	& m_hdfsAd		3366920	1					
ANR	3366971	Argument	& m_hdfsAd		3366920	0					
ANR	3366972	UnaryOperationExpression	& m_hdfsAd		3366920	0					
ANR	3366973	UnaryOperator	&		3366920	0					
ANR	3366974	Identifier	m_hdfsAd		3366920	1					
ANR	3366975	IdentifierDeclStatement	"int stat = daemonCore -> sendUpdates ( UPDATE_AD_GENERIC , & m_hdfsAd , NULL , true ) ;"	728:7:25116:25192	3366920	2	True				
ANR	3366976	IdentifierDecl	"stat = daemonCore -> sendUpdates ( UPDATE_AD_GENERIC , & m_hdfsAd , NULL , true )"		3366920	0					
ANR	3366977	IdentifierDeclType	int		3366920	0					
ANR	3366978	Identifier	stat		3366920	1					
ANR	3366979	AssignmentExpression	"stat = daemonCore -> sendUpdates ( UPDATE_AD_GENERIC , & m_hdfsAd , NULL , true )"		3366920	2		=			
ANR	3366980	Identifier	stat		3366920	0					
ANR	3366981	CallExpression	"daemonCore -> sendUpdates ( UPDATE_AD_GENERIC , & m_hdfsAd , NULL , true )"		3366920	1					
ANR	3366982	Callee	daemonCore -> sendUpdates		3366920	0					
ANR	3366983	PtrMemberAccess	daemonCore -> sendUpdates		3366920	0					
ANR	3366984	Identifier	daemonCore		3366920	0					
ANR	3366985	Identifier	sendUpdates		3366920	1					
ANR	3366986	ArgumentList	UPDATE_AD_GENERIC		3366920	1					
ANR	3366987	Argument	UPDATE_AD_GENERIC		3366920	0					
ANR	3366988	Identifier	UPDATE_AD_GENERIC		3366920	0					
ANR	3366989	Argument	& m_hdfsAd		3366920	1					
ANR	3366990	UnaryOperationExpression	& m_hdfsAd		3366920	0					
ANR	3366991	UnaryOperator	&		3366920	0					
ANR	3366992	Identifier	m_hdfsAd		3366920	1					
ANR	3366993	Argument	NULL		3366920	2					
ANR	3366994	Identifier	NULL		3366920	0					
ANR	3366995	Argument	true		3366920	3					
ANR	3366996	Identifier	true		3366920	0					
ANR	3366997	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Updated ClassAds (status = %d)\\n"" , stat )"	729:7:25201:25263	3366920	3	True				
ANR	3366998	CallExpression	"dprintf ( D_FULLDEBUG , ""Updated ClassAds (status = %d)\\n"" , stat )"		3366920	0					
ANR	3366999	Callee	dprintf		3366920	0					
ANR	3367000	Identifier	dprintf		3366920	0					
ANR	3367001	ArgumentList	D_FULLDEBUG		3366920	1					
ANR	3367002	Argument	D_FULLDEBUG		3366920	0					
ANR	3367003	Identifier	D_FULLDEBUG		3366920	0					
ANR	3367004	Argument	"""Updated ClassAds (status = %d)\\n"""		3366920	1					
ANR	3367005	PrimaryExpression	"""Updated ClassAds (status = %d)\\n"""		3366920	0					
ANR	3367006	Argument	stat		3366920	2					
ANR	3367007	Identifier	stat		3366920	0					
ANR	3367008	ReturnType	void		3366920	1					
ANR	3367009	Identifier	Hadoop :: publishClassAd		3366920	2					
ANR	3367010	ParameterList			3366920	3					
ANR	3367011	CFGEntryNode	ENTRY		3366920		True				
ANR	3367012	CFGExitNode	EXIT		3366920		True				
ANR	3367013	Symbol	stat		3366920						
ANR	3367014	Symbol	NULL		3366920						
ANR	3367015	Symbol	UPDATE_AD_GENERIC		3366920						
ANR	3367016	Symbol	D_FULLDEBUG		3366920						
ANR	3367017	Symbol	HDFS_NAMENODE		3366920						
ANR	3367018	Symbol	runDFSAdmin		3366920						
ANR	3367019	Symbol	mode		3366920						
ANR	3367020	Symbol	m_nodeType		3366920						
ANR	3367021	Symbol	stats		3366920						
ANR	3367022	Symbol	& m_hdfsAd		3366920						
ANR	3367023	Symbol	* daemonCore		3366920						
ANR	3367024	Symbol	daemonCore		3366920						
ANR	3367025	Symbol	true		3366920						
ANR	3367026	Symbol	daemonCore -> sendUpdates		3366920						
ANR	3367027	DeclStmt									
ANR	3367028	Decl							char	char [ STDOUT_READBUF_SIZE ]	buff
ANR	3367029	DeclStmt									
ANR	3367030	Decl							int	int	bytes
ANR	3367031	DeclStmt									
ANR	3367032	Decl							int	int	ad_type
ANR	3367033	DeclStmt									
ANR	3367034	Decl							int	int	pos
ANR	3367035	DeclStmt									
ANR	3367036	Decl							MyString	MyString	line
ANR	3367037	DeclStmt									
ANR	3367038	Decl							MyString	MyString	adKey
ANR	3367039	Decl							MyString	MyString	adValue
ANR	3367040	DeclStmt									
ANR	3367041	Decl							char	char [ STDOUT_READBUF_SIZE ]	buff
ANR	3367042	DeclStmt									
ANR	3367043	Decl							int	int	bytes
ANR	3367044	DeclStmt									
ANR	3367045	Decl							int	int	pos
ANR	3367046	DeclStmt									
ANR	3367047	Decl							MyString	MyString	line
ANR	3367048	Function	Hadoop :: getKeyValue	799:0:28166:29824							
ANR	3367049	FunctionDef	"Hadoop :: getKeyValue (MyString line , MyString * key , MyString * value)"		3367048	0					
ANR	3367050	CompoundStatement		799:71:28237:29824	3367048	0					
ANR	3367051	IdentifierDeclStatement	int type = AD_NULL ;	800:8:28247:28265	3367048	0	True				
ANR	3367052	IdentifierDecl	type = AD_NULL		3367048	0					
ANR	3367053	IdentifierDeclType	int		3367048	0					
ANR	3367054	Identifier	type		3367048	1					
ANR	3367055	AssignmentExpression	type = AD_NULL		3367048	2		=			
ANR	3367056	Identifier	AD_NULL		3367048	0					
ANR	3367057	Identifier	AD_NULL		3367048	1					
ANR	3367058	IdentifierDeclStatement	int tokenno = - 1 ;	801:8:28275:28291	3367048	1	True				
ANR	3367059	IdentifierDecl	tokenno = - 1		3367048	0					
ANR	3367060	IdentifierDeclType	int		3367048	0					
ANR	3367061	Identifier	tokenno		3367048	1					
ANR	3367062	AssignmentExpression	tokenno = - 1		3367048	2		=			
ANR	3367063	Identifier	tokenno		3367048	0					
ANR	3367064	UnaryOperationExpression	- 1		3367048	1					
ANR	3367065	UnaryOperator	-		3367048	0					
ANR	3367066	PrimaryExpression	1		3367048	1					
ANR	3367067	IdentifierDeclStatement	char * s1 = 0 ;	802:8:28301:28313	3367048	2	True				
ANR	3367068	IdentifierDecl	* s1 = 0		3367048	0					
ANR	3367069	IdentifierDeclType	char *		3367048	0					
ANR	3367070	Identifier	s1		3367048	1					
ANR	3367071	AssignmentExpression	* s1 = 0		3367048	2		=			
ANR	3367072	Identifier	s1		3367048	0					
ANR	3367073	PrimaryExpression	0		3367048	1					
ANR	3367074	ExpressionStatement	line . Tokenize ( )	804:8:28324:28339	3367048	3	True				
ANR	3367075	CallExpression	line . Tokenize ( )		3367048	0					
ANR	3367076	Callee	line . Tokenize		3367048	0					
ANR	3367077	MemberAccess	line . Tokenize		3367048	0					
ANR	3367078	Identifier	line		3367048	0					
ANR	3367079	Identifier	Tokenize		3367048	1					
ANR	3367080	ArgumentList			3367048	1					
ANR	3367081	Statement	while	806:8:28350:28354	3367048	4	True				
ANR	3367082	Statement	(	806:13:28355:28355	3367048	5	True				
ANR	3367083	Statement	(	806:15:28357:28357	3367048	6	True				
ANR	3367084	Statement	s1	806:16:28358:28359	3367048	7	True				
ANR	3367085	Statement	=	806:19:28361:28361	3367048	8	True				
ANR	3367086	Statement	const_cast	806:21:28363:28372	3367048	9	True				
ANR	3367087	Statement	<	806:31:28373:28373	3367048	10	True				
ANR	3367088	Statement	char	806:32:28374:28377	3367048	11	True				
ANR	3367089	Statement	*	806:36:28378:28378	3367048	12	True				
ANR	3367090	Statement	>	806:37:28379:28379	3367048	13	True				
ANR	3367091	Statement	(	806:38:28380:28380	3367048	14	True				
ANR	3367092	Statement	line	806:39:28381:28384	3367048	15	True				
ANR	3367093	Statement	.	806:43:28385:28385	3367048	16	True				
ANR	3367094	Statement	GetNextToken	806:44:28386:28397	3367048	17	True				
ANR	3367095	Statement	(	806:56:28398:28398	3367048	18	True				
ANR	3367096	Statement	""" """	806:57:28399:28401	3367048	19	True				
ANR	3367097	Statement	","	806:60:28402:28402	3367048	20	True				
ANR	3367098	Statement	true	806:62:28404:28407	3367048	21	True				
ANR	3367099	Statement	)	806:66:28408:28408	3367048	22	True				
ANR	3367100	Statement	)	806:67:28409:28409	3367048	23	True				
ANR	3367101	Statement	)	806:68:28410:28410	3367048	24	True				
ANR	3367102	Statement	!=	806:70:28412:28413	3367048	25	True				
ANR	3367103	Statement	NULL	806:73:28415:28418	3367048	26	True				
ANR	3367104	Statement	)	806:77:28419:28419	3367048	27	True				
ANR	3367105	CompoundStatement		8:79:183:183	3367048	28					
ANR	3367106	ExpressionStatement	tokenno ++	807:16:28439:28448	3367048	0	True				
ANR	3367107	PostIncDecOperationExpression	tokenno ++		3367048	0					
ANR	3367108	Identifier	tokenno		3367048	0					
ANR	3367109	IncDec	++		3367048	1					
ANR	3367110	IfStatement	if ( strlen ( s1 ) < 1 )		3367048	1					
ANR	3367111	Condition	strlen ( s1 ) < 1	809:20:28471:28484	3367048	0	True				
ANR	3367112	RelationalExpression	strlen ( s1 ) < 1		3367048	0		<			
ANR	3367113	CallExpression	strlen ( s1 )		3367048	0					
ANR	3367114	Callee	strlen		3367048	0					
ANR	3367115	Identifier	strlen		3367048	0					
ANR	3367116	ArgumentList	s1		3367048	1					
ANR	3367117	Argument	s1		3367048	0					
ANR	3367118	Identifier	s1		3367048	0					
ANR	3367119	PrimaryExpression	1		3367048	1					
ANR	3367120	GotoStatement	goto end ;	810:24:28511:28519	3367048	1	True				
ANR	3367121	Identifier	end		3367048	0					
ANR	3367122	SwitchStatement	switch ( tokenno )		3367048	2					
ANR	3367123	Condition	tokenno	813:24:28618:28624	3367048	0	True				
ANR	3367124	Identifier	tokenno		3367048	0					
ANR	3367125	CompoundStatement		15:33:389:389	3367048	1					
ANR	3367126	Label	case 0 :	814:24:28653:28659	3367048	0	True				
ANR	3367127	IfStatement	"if ( strcmp ( s1 , ""START_AD"" ) != 0 )"		3367048	1					
ANR	3367128	Condition	"strcmp ( s1 , ""START_AD"" ) != 0"	815:30:28691:28717	3367048	0	True				
ANR	3367129	EqualityExpression	"strcmp ( s1 , ""START_AD"" ) != 0"		3367048	0		!=			
ANR	3367130	CallExpression	"strcmp ( s1 , ""START_AD"" )"		3367048	0					
ANR	3367131	Callee	strcmp		3367048	0					
ANR	3367132	Identifier	strcmp		3367048	0					
ANR	3367133	ArgumentList	s1		3367048	1					
ANR	3367134	Argument	s1		3367048	0					
ANR	3367135	Identifier	s1		3367048	0					
ANR	3367136	Argument	"""START_AD"""		3367048	1					
ANR	3367137	PrimaryExpression	"""START_AD"""		3367048	0					
ANR	3367138	PrimaryExpression	0		3367048	1					
ANR	3367139	GotoStatement	goto end ;	816:30:28751:28759	3367048	1	True				
ANR	3367140	Identifier	end		3367048	0					
ANR	3367141	BreakStatement	break ;	818:26:28788:28793	3367048	2	True				
ANR	3367142	Label	case 1 :	820:24:28820:28826	3367048	3	True				
ANR	3367143	IfStatement	if ( s1 [ 0 ] == 'S' )		3367048	4					
ANR	3367144	Condition	s1 [ 0 ] == 'S'	822:30:28885:28896	3367048	0	True				
ANR	3367145	EqualityExpression	s1 [ 0 ] == 'S'		3367048	0		==			
ANR	3367146	ArrayIndexing	s1 [ 0 ]		3367048	0					
ANR	3367147	Identifier	s1		3367048	0					
ANR	3367148	PrimaryExpression	0		3367048	1					
ANR	3367149	PrimaryExpression	'S'		3367048	1					
ANR	3367150	ExpressionStatement	type = AD_STRING	823:30:28929:28945	3367048	1	True				
ANR	3367151	AssignmentExpression	type = AD_STRING		3367048	0		=			
ANR	3367152	Identifier	type		3367048	0					
ANR	3367153	Identifier	AD_STRING		3367048	1					
ANR	3367154	ElseStatement	else		3367048	0					
ANR	3367155	IfStatement	if ( s1 [ 0 ] == 'I' )		3367048	0					
ANR	3367156	Condition	s1 [ 0 ] == 'I'	824:35:28982:28993	3367048	0	True				
ANR	3367157	EqualityExpression	s1 [ 0 ] == 'I'		3367048	0		==			
ANR	3367158	ArrayIndexing	s1 [ 0 ]		3367048	0					
ANR	3367159	Identifier	s1		3367048	0					
ANR	3367160	PrimaryExpression	0		3367048	1					
ANR	3367161	PrimaryExpression	'I'		3367048	1					
ANR	3367162	ExpressionStatement	type = AD_INT	825:30:29026:29039	3367048	1	True				
ANR	3367163	AssignmentExpression	type = AD_INT		3367048	0		=			
ANR	3367164	Identifier	type		3367048	0					
ANR	3367165	Identifier	AD_INT		3367048	1					
ANR	3367166	ElseStatement	else		3367048	0					
ANR	3367167	IfStatement	if ( s1 [ 0 ] == 'D' )		3367048	0					
ANR	3367168	Condition	s1 [ 0 ] == 'D'	826:35:29076:29087	3367048	0	True				
ANR	3367169	EqualityExpression	s1 [ 0 ] == 'D'		3367048	0		==			
ANR	3367170	ArrayIndexing	s1 [ 0 ]		3367048	0					
ANR	3367171	Identifier	s1		3367048	0					
ANR	3367172	PrimaryExpression	0		3367048	1					
ANR	3367173	PrimaryExpression	'D'		3367048	1					
ANR	3367174	ExpressionStatement	type = AD_DOUBLE	827:30:29120:29136	3367048	1	True				
ANR	3367175	AssignmentExpression	type = AD_DOUBLE		3367048	0		=			
ANR	3367176	Identifier	type		3367048	0					
ANR	3367177	Identifier	AD_DOUBLE		3367048	1					
ANR	3367178	ElseStatement	else		3367048	0					
ANR	3367179	IfStatement	if ( s1 [ 0 ] == 'B' )		3367048	0					
ANR	3367180	Condition	s1 [ 0 ] == 'B'	828:35:29173:29184	3367048	0	True				
ANR	3367181	EqualityExpression	s1 [ 0 ] == 'B'		3367048	0		==			
ANR	3367182	ArrayIndexing	s1 [ 0 ]		3367048	0					
ANR	3367183	Identifier	s1		3367048	0					
ANR	3367184	PrimaryExpression	0		3367048	1					
ANR	3367185	PrimaryExpression	'B'		3367048	1					
ANR	3367186	ExpressionStatement	type = AD_BOOLEAN	829:30:29217:29234	3367048	1	True				
ANR	3367187	AssignmentExpression	type = AD_BOOLEAN		3367048	0		=			
ANR	3367188	Identifier	type		3367048	0					
ANR	3367189	Identifier	AD_BOOLEAN		3367048	1					
ANR	3367190	BreakStatement	break ;	831:26:29263:29268	3367048	5	True				
ANR	3367191	Label	case 2 :	833:24:29295:29301	3367048	6	True				
ANR	3367192	ExpressionStatement	* key = s1	834:26:29329:29338	3367048	7	True				
ANR	3367193	AssignmentExpression	* key = s1		3367048	0		=			
ANR	3367194	UnaryOperationExpression	* key		3367048	0					
ANR	3367195	UnaryOperator	*		3367048	0					
ANR	3367196	Identifier	key		3367048	1					
ANR	3367197	Identifier	s1		3367048	1					
ANR	3367198	BreakStatement	break ;	835:26:29366:29371	3367048	8	True				
ANR	3367199	Label	case 3 :	837:24:29398:29404	3367048	9	True				
ANR	3367200	ExpressionStatement	* value = s1	838:26:29432:29443	3367048	10	True				
ANR	3367201	AssignmentExpression	* value = s1		3367048	0		=			
ANR	3367202	UnaryOperationExpression	* value		3367048	0					
ANR	3367203	UnaryOperator	*		3367048	0					
ANR	3367204	Identifier	value		3367048	1					
ANR	3367205	Identifier	s1		3367048	1					
ANR	3367206	BreakStatement	break ;	839:26:29471:29476	3367048	11	True				
ANR	3367207	Label	case 4 :	841:24:29503:29509	3367048	12	True				
ANR	3367208	IfStatement	"if ( strcmp ( s1 , ""END_AD"" ) != 0 )"		3367048	13					
ANR	3367209	Condition	"strcmp ( s1 , ""END_AD"" ) != 0"	842:30:29541:29565	3367048	0	True				
ANR	3367210	EqualityExpression	"strcmp ( s1 , ""END_AD"" ) != 0"		3367048	0		!=			
ANR	3367211	CallExpression	"strcmp ( s1 , ""END_AD"" )"		3367048	0					
ANR	3367212	Callee	strcmp		3367048	0					
ANR	3367213	Identifier	strcmp		3367048	0					
ANR	3367214	ArgumentList	s1		3367048	1					
ANR	3367215	Argument	s1		3367048	0					
ANR	3367216	Identifier	s1		3367048	0					
ANR	3367217	Argument	"""END_AD"""		3367048	1					
ANR	3367218	PrimaryExpression	"""END_AD"""		3367048	0					
ANR	3367219	PrimaryExpression	0		3367048	1					
ANR	3367220	ExpressionStatement	type = AD_NULL	843:34:29602:29616	3367048	1	True				
ANR	3367221	AssignmentExpression	type = AD_NULL		3367048	0		=			
ANR	3367222	Identifier	type		3367048	0					
ANR	3367223	Identifier	AD_NULL		3367048	1					
ANR	3367224	BreakStatement	break ;	845:26:29671:29676	3367048	14	True				
ANR	3367225	IfStatement	if ( tokenno < 4 )		3367048	29					
ANR	3367226	Condition	tokenno < 4	850:12:29752:29762	3367048	0	True				
ANR	3367227	RelationalExpression	tokenno < 4		3367048	0		<			
ANR	3367228	Identifier	tokenno		3367048	0					
ANR	3367229	PrimaryExpression	4		3367048	1					
ANR	3367230	ExpressionStatement	type = AD_NULL	851:16:29781:29795	3367048	1	True				
ANR	3367231	AssignmentExpression	type = AD_NULL		3367048	0		=			
ANR	3367232	Identifier	type		3367048	0					
ANR	3367233	Identifier	AD_NULL		3367048	1					
ANR	3367234	Label	end :	853:0:29798:29801	3367048	30	True				
ANR	3367235	Identifier	end		3367048	0					
ANR	3367236	ReturnStatement	return type ;	854:8:29811:29822	3367048	31	True				
ANR	3367237	Identifier	type		3367048	0					
ANR	3367238	ReturnType	int		3367048	1					
ANR	3367239	Identifier	Hadoop :: getKeyValue		3367048	2					
ANR	3367240	ParameterList	"MyString line , MyString * key , MyString * value"		3367048	3					
ANR	3367241	Parameter	MyString line	799:24:28190:28202	3367048	0	True				
ANR	3367242	ParameterType	MyString		3367048	0					
ANR	3367243	Identifier	line		3367048	1					
ANR	3367244	Parameter	MyString * key	799:39:28205:28217	3367048	1	True				
ANR	3367245	ParameterType	MyString *		3367048	0					
ANR	3367246	Identifier	key		3367048	1					
ANR	3367247	Parameter	MyString * value	799:54:28220:28234	3367048	2	True				
ANR	3367248	ParameterType	MyString *		3367048	0					
ANR	3367249	Identifier	value		3367048	1					
ANR	3367250	CFGEntryNode	ENTRY		3367048		True				
ANR	3367251	CFGExitNode	EXIT		3367048		True				
ANR	3367252	Symbol	strcmp		3367048						
ANR	3367253	Symbol	AD_STRING		3367048						
ANR	3367254	Symbol	AD_BOOLEAN		3367048						
ANR	3367255	Symbol	line		3367048						
ANR	3367256	Symbol	AD_INT		3367048						
ANR	3367257	Symbol	* s1		3367048						
ANR	3367258	Symbol	AD_DOUBLE		3367048						
ANR	3367259	Symbol	* key		3367048						
ANR	3367260	Symbol	tokenno		3367048						
ANR	3367261	Symbol	type		3367048						
ANR	3367262	Symbol	strlen		3367048						
ANR	3367263	Symbol	* value		3367048						
ANR	3367264	Symbol	value		3367048						
ANR	3367265	Symbol	AD_NULL		3367048						
ANR	3367266	Symbol	key		3367048						
ANR	3367267	Symbol	s1		3367048						
ANR	3367268	Function	Hadoop :: getServiceTypeByName	857:0:29827:30036							
ANR	3367269	FunctionDef	Hadoop :: getServiceTypeByName (MyString s)		3367268	0					
ANR	3367270	CompoundStatement		858:0:29879:30036	3367268	0					
ANR	3367271	IdentifierDeclStatement	NodeType type ;	859:1:29882:29895	3367268	0	True				
ANR	3367272	IdentifierDecl	type		3367268	0					
ANR	3367273	IdentifierDeclType	NodeType		3367268	0					
ANR	3367274	Identifier	type		3367268	1					
ANR	3367275	IfStatement	"if ( s == ""HDFS_NAMENODE"" )"		3367268	1					
ANR	3367276	Condition	"s == ""HDFS_NAMENODE"""	860:5:29902:29921	3367268	0	True				
ANR	3367277	EqualityExpression	"s == ""HDFS_NAMENODE"""		3367268	0		==			
ANR	3367278	Identifier	s		3367268	0					
ANR	3367279	PrimaryExpression	"""HDFS_NAMENODE"""		3367268	1					
ANR	3367280	ExpressionStatement	type = HDFS_NAMENODE	861:7:29932:29952	3367268	1	True				
ANR	3367281	AssignmentExpression	type = HDFS_NAMENODE		3367268	0		=			
ANR	3367282	Identifier	type		3367268	0					
ANR	3367283	Identifier	HDFS_NAMENODE		3367268	1					
ANR	3367284	ElseStatement	else		3367268	0					
ANR	3367285	ExpressionStatement	type = HDFS_DATANODE	864:2:29999:30019	3367268	0	True				
ANR	3367286	AssignmentExpression	type = HDFS_DATANODE		3367268	0		=			
ANR	3367287	Identifier	type		3367268	0					
ANR	3367288	Identifier	HDFS_DATANODE		3367268	1					
ANR	3367289	ReturnStatement	return type ;	866:1:30023:30034	3367268	2	True				
ANR	3367290	Identifier	type		3367268	0					
ANR	3367291	ReturnType	NodeType		3367268	1					
ANR	3367292	Identifier	Hadoop :: getServiceTypeByName		3367268	2					
ANR	3367293	ParameterList	MyString s		3367268	3					
ANR	3367294	Parameter	MyString s	857:39:29866:29875	3367268	0	True				
ANR	3367295	ParameterType	MyString		3367268	0					
ANR	3367296	Identifier	s		3367268	1					
ANR	3367297	CFGEntryNode	ENTRY		3367268		True				
ANR	3367298	CFGExitNode	EXIT		3367268		True				
ANR	3367299	Symbol	s		3367268						
ANR	3367300	Symbol	type		3367268						
ANR	3367301	Symbol	HDFS_NAMENODE		3367268						
ANR	3367302	Symbol	HDFS_DATANODE		3367268						
ANR	3367303	Function	Hadoop :: getServiceNameByType	869:0:30039:30284							
ANR	3367304	FunctionDef	Hadoop :: getServiceNameByType (NodeType type)		3367303	0					
ANR	3367305	CompoundStatement		870:0:30094:30284	3367303	0					
ANR	3367306	IdentifierDeclStatement	MyString s ;	871:1:30097:30107	3367303	0	True				
ANR	3367307	IdentifierDecl	s		3367303	0					
ANR	3367308	IdentifierDeclType	MyString		3367303	0					
ANR	3367309	Identifier	s		3367303	1					
ANR	3367310	SwitchStatement	switch ( type )		3367303	1					
ANR	3367311	Condition	type	873:9:30119:30122	3367303	0	True				
ANR	3367312	Identifier	type		3367303	0					
ANR	3367313	CompoundStatement		4:15:30:30	3367303	1					
ANR	3367314	Label	case HDFS_NAMENODE :	874:2:30129:30147	3367303	0	True				
ANR	3367315	Identifier	HDFS_NAMENODE		3367303	0					
ANR	3367316	ExpressionStatement	"s . sprintf ( ""HDFS_NAMENODE"" )"	875:3:30152:30178	3367303	1	True				
ANR	3367317	CallExpression	"s . sprintf ( ""HDFS_NAMENODE"" )"		3367303	0					
ANR	3367318	Callee	s . sprintf		3367303	0					
ANR	3367319	MemberAccess	s . sprintf		3367303	0					
ANR	3367320	Identifier	s		3367303	0					
ANR	3367321	Identifier	sprintf		3367303	1					
ANR	3367322	ArgumentList	"""HDFS_NAMENODE"""		3367303	1					
ANR	3367323	Argument	"""HDFS_NAMENODE"""		3367303	0					
ANR	3367324	PrimaryExpression	"""HDFS_NAMENODE"""		3367303	0					
ANR	3367325	BreakStatement	break ;	876:3:30183:30188	3367303	2	True				
ANR	3367326	Label	default :	878:2:30193:30200	3367303	3	True				
ANR	3367327	Identifier	default		3367303	0					
ANR	3367328	ExpressionStatement	"s . sprintf ( ""HDFS_DATANODE"" )"	879:3:30241:30267	3367303	4	True				
ANR	3367329	CallExpression	"s . sprintf ( ""HDFS_DATANODE"" )"		3367303	0					
ANR	3367330	Callee	s . sprintf		3367303	0					
ANR	3367331	MemberAccess	s . sprintf		3367303	0					
ANR	3367332	Identifier	s		3367303	0					
ANR	3367333	Identifier	sprintf		3367303	1					
ANR	3367334	ArgumentList	"""HDFS_DATANODE"""		3367303	1					
ANR	3367335	Argument	"""HDFS_DATANODE"""		3367303	0					
ANR	3367336	PrimaryExpression	"""HDFS_DATANODE"""		3367303	0					
ANR	3367337	ReturnStatement	return s ;	882:1:30274:30282	3367303	2	True				
ANR	3367338	Identifier	s		3367303	0					
ANR	3367339	ReturnType	MyString		3367303	1					
ANR	3367340	Identifier	Hadoop :: getServiceNameByType		3367303	2					
ANR	3367341	ParameterList	NodeType type		3367303	3					
ANR	3367342	Parameter	NodeType type	869:39:30078:30090	3367303	0	True				
ANR	3367343	ParameterType	NodeType		3367303	0					
ANR	3367344	Identifier	type		3367303	1					
ANR	3367345	CFGEntryNode	ENTRY		3367303		True				
ANR	3367346	CFGExitNode	EXIT		3367303		True				
ANR	3367347	Symbol	s		3367303						
ANR	3367348	Symbol	type		3367303						
