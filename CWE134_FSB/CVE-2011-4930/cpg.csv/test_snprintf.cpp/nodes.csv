command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5426493	File	data/converged/CVE-2011-4930_htcondor/test_snprintf.cpp								
ANR	5426494	Function	main	24:0:867:2431							
ANR	5426495	FunctionDef	"main (int argc , char * * argv)"		5426494	0					
ANR	5426496	CompoundStatement		25:0:899:2431	5426494	0					
ANR	5426497	IdentifierDeclStatement	char output [ 11 ] ;	27:1:947:962	5426494	0	True				
ANR	5426498	IdentifierDecl	output [ 11 ]		5426494	0					
ANR	5426499	IdentifierDeclType	char [ 11 ]		5426494	0					
ANR	5426500	Identifier	output		5426494	1					
ANR	5426501	PrimaryExpression	11		5426494	2					
ANR	5426502	IdentifierDeclStatement	"char input [ ] = ""1234567890abcdefghijklmnopqrstuvwxyz"" ;"	30:1:998:1051	5426494	1	True				
ANR	5426503	IdentifierDecl	"input [ ] = ""1234567890abcdefghijklmnopqrstuvwxyz"""		5426494	0					
ANR	5426504	IdentifierDeclType	char [ ]		5426494	0					
ANR	5426505	Identifier	input		5426494	1					
ANR	5426506	AssignmentExpression	"input [ ] = ""1234567890abcdefghijklmnopqrstuvwxyz"""		5426494	2		=			
ANR	5426507	Identifier	input		5426494	0					
ANR	5426508	PrimaryExpression	"""1234567890abcdefghijklmnopqrstuvwxyz"""		5426494	1					
ANR	5426509	IdentifierDeclStatement	int num_chars ;	32:1:1055:1068	5426494	2	True				
ANR	5426510	IdentifierDecl	num_chars		5426494	0					
ANR	5426511	IdentifierDeclType	int		5426494	0					
ANR	5426512	Identifier	num_chars		5426494	1					
ANR	5426513	IdentifierDeclStatement	int reported_length ;	33:1:1071:1090	5426494	3	True				
ANR	5426514	IdentifierDecl	reported_length		5426494	0					
ANR	5426515	IdentifierDeclType	int		5426494	0					
ANR	5426516	Identifier	reported_length		5426494	1					
ANR	5426517	ExpressionStatement	output [ 0 ] = 0	35:1:1094:1107	5426494	4	True				
ANR	5426518	AssignmentExpression	output [ 0 ] = 0		5426494	0		=			
ANR	5426519	ArrayIndexing	output [ 0 ]		5426494	0					
ANR	5426520	Identifier	output		5426494	0					
ANR	5426521	PrimaryExpression	0		5426494	1					
ANR	5426522	PrimaryExpression	0		5426494	1					
ANR	5426523	ForStatement	for ( num_chars = 0 ; num_chars < 10 ; num_chars ++ )		5426494	5					
ANR	5426524	ForInit	num_chars = 0 ;	36:6:1115:1128	5426494	0	True				
ANR	5426525	AssignmentExpression	num_chars = 0		5426494	0		=			
ANR	5426526	Identifier	num_chars		5426494	0					
ANR	5426527	PrimaryExpression	0		5426494	1					
ANR	5426528	Condition	num_chars < 10	36:21:1130:1143	5426494	1	True				
ANR	5426529	RelationalExpression	num_chars < 10		5426494	0		<			
ANR	5426530	Identifier	num_chars		5426494	0					
ANR	5426531	PrimaryExpression	10		5426494	1					
ANR	5426532	PostIncDecOperationExpression	num_chars ++	36:37:1146:1156	5426494	2	True				
ANR	5426533	Identifier	num_chars		5426494	0					
ANR	5426534	IncDec	++		5426494	1					
ANR	5426535	CompoundStatement		12:50:259:259	5426494	3					
ANR	5426536	ExpressionStatement	"reported_length = snprintf ( output , num_chars + 1 , ""%s"" , input )"	39:2:1276:1336	5426494	0	True				
ANR	5426537	AssignmentExpression	"reported_length = snprintf ( output , num_chars + 1 , ""%s"" , input )"		5426494	0		=			
ANR	5426538	Identifier	reported_length		5426494	0					
ANR	5426539	CallExpression	"snprintf ( output , num_chars + 1 , ""%s"" , input )"		5426494	1					
ANR	5426540	Callee	snprintf		5426494	0					
ANR	5426541	Identifier	snprintf		5426494	0					
ANR	5426542	ArgumentList	output		5426494	1					
ANR	5426543	Argument	output		5426494	0					
ANR	5426544	Identifier	output		5426494	0					
ANR	5426545	Argument	num_chars + 1		5426494	1					
ANR	5426546	AdditiveExpression	num_chars + 1		5426494	0		+			
ANR	5426547	Identifier	num_chars		5426494	0					
ANR	5426548	PrimaryExpression	1		5426494	1					
ANR	5426549	Argument	"""%s"""		5426494	2					
ANR	5426550	PrimaryExpression	"""%s"""		5426494	0					
ANR	5426551	Argument	input		5426494	3					
ANR	5426552	Identifier	input		5426494	0					
ANR	5426553	IfStatement	if ( strlen ( output ) == num_chars )		5426494	1					
ANR	5426554	Condition	strlen ( output ) == num_chars	40:6:1344:1370	5426494	0	True				
ANR	5426555	EqualityExpression	strlen ( output ) == num_chars		5426494	0		==			
ANR	5426556	CallExpression	strlen ( output )		5426494	0					
ANR	5426557	Callee	strlen		5426494	0					
ANR	5426558	Identifier	strlen		5426494	0					
ANR	5426559	ArgumentList	output		5426494	1					
ANR	5426560	Argument	output		5426494	0					
ANR	5426561	Identifier	output		5426494	0					
ANR	5426562	Identifier	num_chars		5426494	1					
ANR	5426563	CompoundStatement		16:35:473:473	5426494	1					
ANR	5426564	ExpressionStatement	"printf ( ""PASSED: Our snprintf output %d characters, as expected\\n"" , num_chars )"	41:3:1378:1462	5426494	0	True				
ANR	5426565	CallExpression	"printf ( ""PASSED: Our snprintf output %d characters, as expected\\n"" , num_chars )"		5426494	0					
ANR	5426566	Callee	printf		5426494	0					
ANR	5426567	Identifier	printf		5426494	0					
ANR	5426568	ArgumentList	"""PASSED: Our snprintf output %d characters, as expected\\n"""		5426494	1					
ANR	5426569	Argument	"""PASSED: Our snprintf output %d characters, as expected\\n"""		5426494	0					
ANR	5426570	PrimaryExpression	"""PASSED: Our snprintf output %d characters, as expected\\n"""		5426494	0					
ANR	5426571	Argument	num_chars		5426494	1					
ANR	5426572	Identifier	num_chars		5426494	0					
ANR	5426573	ElseStatement	else		5426494	0					
ANR	5426574	CompoundStatement		19:9:573:573	5426494	0					
ANR	5426575	Statement	printf	44:3:1478:1483	5426494	0	True				
ANR	5426576	Statement	(	44:9:1484:1484	5426494	1	True				
ANR	5426577	Statement	"""FAILED: Our snprintf output %d characters instead of """	44:10:1485:1539	5426494	2	True				
ANR	5426578	Statement	"""%d characters!\\n"""	45:7:1548:1565	5426494	3	True				
ANR	5426579	Statement	","	45:25:1566:1566	5426494	4	True				
ANR	5426580	Statement	strlen	45:27:1568:1573	5426494	5	True				
ANR	5426581	Statement	(	45:33:1574:1574	5426494	6	True				
ANR	5426582	Statement	output	45:34:1575:1580	5426494	7	True				
ANR	5426583	Statement	)	45:40:1581:1581	5426494	8	True				
ANR	5426584	Statement	","	45:41:1582:1582	5426494	9	True				
ANR	5426585	Statement	num_chars	45:43:1584:1592	5426494	10	True				
ANR	5426586	Statement	)	45:52:1593:1593	5426494	11	True				
ANR	5426587	ExpressionStatement		45:53:1594:1594	5426494	12	True				
ANR	5426588	IfStatement	if ( reported_length == strlen ( input ) )		5426494	2					
ANR	5426589	Condition	reported_length == strlen ( input )	48:6:1607:1638	5426494	0	True				
ANR	5426590	EqualityExpression	reported_length == strlen ( input )		5426494	0		==			
ANR	5426591	Identifier	reported_length		5426494	0					
ANR	5426592	CallExpression	strlen ( input )		5426494	1					
ANR	5426593	Callee	strlen		5426494	0					
ANR	5426594	Identifier	strlen		5426494	0					
ANR	5426595	ArgumentList	input		5426494	1					
ANR	5426596	Argument	input		5426494	0					
ANR	5426597	Identifier	input		5426494	0					
ANR	5426598	CompoundStatement		24:40:741:741	5426494	1					
ANR	5426599	Statement	printf	49:3:1646:1651	5426494	0	True				
ANR	5426600	Statement	(	49:9:1652:1652	5426494	1	True				
ANR	5426601	Statement	"""PASSED: Our snprintf reported the desired length (%d) """	49:10:1653:1708	5426494	2	True				
ANR	5426602	Statement	"""correctly.\\n"""	50:7:1717:1730	5426494	3	True				
ANR	5426603	Statement	","	50:21:1731:1731	5426494	4	True				
ANR	5426604	Statement	reported_length	50:23:1733:1747	5426494	5	True				
ANR	5426605	Statement	)	50:38:1748:1748	5426494	6	True				
ANR	5426606	ExpressionStatement		50:39:1749:1749	5426494	7	True				
ANR	5426607	ElseStatement	else		5426494	0					
ANR	5426608	CompoundStatement		27:9:860:860	5426494	0					
ANR	5426609	ExpressionStatement	"printf ( ""FAILED: Our snprintf reported %d instead of %d.\\n"" , reported_length , strlen ( input ) )"	52:3:1765:1863	5426494	0	True				
ANR	5426610	CallExpression	"printf ( ""FAILED: Our snprintf reported %d instead of %d.\\n"" , reported_length , strlen ( input ) )"		5426494	0					
ANR	5426611	Callee	printf		5426494	0					
ANR	5426612	Identifier	printf		5426494	0					
ANR	5426613	ArgumentList	"""FAILED: Our snprintf reported %d instead of %d.\\n"""		5426494	1					
ANR	5426614	Argument	"""FAILED: Our snprintf reported %d instead of %d.\\n"""		5426494	0					
ANR	5426615	PrimaryExpression	"""FAILED: Our snprintf reported %d instead of %d.\\n"""		5426494	0					
ANR	5426616	Argument	reported_length		5426494	1					
ANR	5426617	Identifier	reported_length		5426494	0					
ANR	5426618	Argument	strlen ( input )		5426494	2					
ANR	5426619	CallExpression	strlen ( input )		5426494	0					
ANR	5426620	Callee	strlen		5426494	0					
ANR	5426621	Identifier	strlen		5426494	0					
ANR	5426622	ArgumentList	input		5426494	1					
ANR	5426623	Argument	input		5426494	0					
ANR	5426624	Identifier	input		5426494	0					
ANR	5426625	ExpressionStatement	output [ 0 ] = 0	57:1:1877:1890	5426494	6	True				
ANR	5426626	AssignmentExpression	output [ 0 ] = 0		5426494	0		=			
ANR	5426627	ArrayIndexing	output [ 0 ]		5426494	0					
ANR	5426628	Identifier	output		5426494	0					
ANR	5426629	PrimaryExpression	0		5426494	1					
ANR	5426630	PrimaryExpression	0		5426494	1					
ANR	5426631	ExpressionStatement	"reported_length = snprintf ( output , 0 , ""%s"" , input )"	58:1:1893:1943	5426494	7	True				
ANR	5426632	AssignmentExpression	"reported_length = snprintf ( output , 0 , ""%s"" , input )"		5426494	0		=			
ANR	5426633	Identifier	reported_length		5426494	0					
ANR	5426634	CallExpression	"snprintf ( output , 0 , ""%s"" , input )"		5426494	1					
ANR	5426635	Callee	snprintf		5426494	0					
ANR	5426636	Identifier	snprintf		5426494	0					
ANR	5426637	ArgumentList	output		5426494	1					
ANR	5426638	Argument	output		5426494	0					
ANR	5426639	Identifier	output		5426494	0					
ANR	5426640	Argument	0		5426494	1					
ANR	5426641	PrimaryExpression	0		5426494	0					
ANR	5426642	Argument	"""%s"""		5426494	2					
ANR	5426643	PrimaryExpression	"""%s"""		5426494	0					
ANR	5426644	Argument	input		5426494	3					
ANR	5426645	Identifier	input		5426494	0					
ANR	5426646	IfStatement	if ( strlen ( output ) == 0 )		5426494	8					
ANR	5426647	Condition	strlen ( output ) == 0	59:5:1950:1968	5426494	0	True				
ANR	5426648	EqualityExpression	strlen ( output ) == 0		5426494	0		==			
ANR	5426649	CallExpression	strlen ( output )		5426494	0					
ANR	5426650	Callee	strlen		5426494	0					
ANR	5426651	Identifier	strlen		5426494	0					
ANR	5426652	ArgumentList	output		5426494	1					
ANR	5426653	Argument	output		5426494	0					
ANR	5426654	Identifier	output		5426494	0					
ANR	5426655	PrimaryExpression	0		5426494	1					
ANR	5426656	CompoundStatement		35:26:1071:1071	5426494	1					
ANR	5426657	ExpressionStatement	"printf ( ""PASSED: The degenerative case worked.\\n"" )"	60:2:1975:2024	5426494	0	True				
ANR	5426658	CallExpression	"printf ( ""PASSED: The degenerative case worked.\\n"" )"		5426494	0					
ANR	5426659	Callee	printf		5426494	0					
ANR	5426660	Identifier	printf		5426494	0					
ANR	5426661	ArgumentList	"""PASSED: The degenerative case worked.\\n"""		5426494	1					
ANR	5426662	Argument	"""PASSED: The degenerative case worked.\\n"""		5426494	0					
ANR	5426663	PrimaryExpression	"""PASSED: The degenerative case worked.\\n"""		5426494	0					
ANR	5426664	ElseStatement	else		5426494	0					
ANR	5426665	CompoundStatement		37:8:1134:1134	5426494	0					
ANR	5426666	ExpressionStatement	"printf ( ""FAILED: The degenerative case made a string with %d chars.\\n"" , strlen ( output ) )"	62:2:2038:2130	5426494	0	True				
ANR	5426667	CallExpression	"printf ( ""FAILED: The degenerative case made a string with %d chars.\\n"" , strlen ( output ) )"		5426494	0					
ANR	5426668	Callee	printf		5426494	0					
ANR	5426669	Identifier	printf		5426494	0					
ANR	5426670	ArgumentList	"""FAILED: The degenerative case made a string with %d chars.\\n"""		5426494	1					
ANR	5426671	Argument	"""FAILED: The degenerative case made a string with %d chars.\\n"""		5426494	0					
ANR	5426672	PrimaryExpression	"""FAILED: The degenerative case made a string with %d chars.\\n"""		5426494	0					
ANR	5426673	Argument	strlen ( output )		5426494	1					
ANR	5426674	CallExpression	strlen ( output )		5426494	0					
ANR	5426675	Callee	strlen		5426494	0					
ANR	5426676	Identifier	strlen		5426494	0					
ANR	5426677	ArgumentList	output		5426494	1					
ANR	5426678	Argument	output		5426494	0					
ANR	5426679	Identifier	output		5426494	0					
ANR	5426680	IfStatement	if ( reported_length == strlen ( input ) )		5426494	9					
ANR	5426681	Condition	reported_length == strlen ( input )	66:5:2143:2174	5426494	0	True				
ANR	5426682	EqualityExpression	reported_length == strlen ( input )		5426494	0		==			
ANR	5426683	Identifier	reported_length		5426494	0					
ANR	5426684	CallExpression	strlen ( input )		5426494	1					
ANR	5426685	Callee	strlen		5426494	0					
ANR	5426686	Identifier	strlen		5426494	0					
ANR	5426687	ArgumentList	input		5426494	1					
ANR	5426688	Argument	input		5426494	0					
ANR	5426689	Identifier	input		5426494	0					
ANR	5426690	CompoundStatement		42:39:1277:1277	5426494	1					
ANR	5426691	Statement	printf	67:2:2181:2186	5426494	0	True				
ANR	5426692	Statement	(	67:8:2187:2187	5426494	1	True				
ANR	5426693	Statement	"""PASSED: The degenerative case reported the desired length """	67:9:2188:2247	5426494	2	True				
ANR	5426694	Statement	"""(%d) correctly.\\n"""	68:6:2255:2273	5426494	3	True				
ANR	5426695	Statement	","	68:25:2274:2274	5426494	4	True				
ANR	5426696	Statement	reported_length	68:27:2276:2290	5426494	5	True				
ANR	5426697	Statement	)	68:42:2291:2291	5426494	6	True				
ANR	5426698	ExpressionStatement		68:43:2292:2292	5426494	7	True				
ANR	5426699	ElseStatement	else		5426494	0					
ANR	5426700	CompoundStatement		45:8:1402:1402	5426494	0					
ANR	5426701	ExpressionStatement	"printf ( ""FAILED: The degenerative case reported %d instead of %d.\\n"" , reported_length , strlen ( input ) )"	70:2:2306:2412	5426494	0	True				
ANR	5426702	CallExpression	"printf ( ""FAILED: The degenerative case reported %d instead of %d.\\n"" , reported_length , strlen ( input ) )"		5426494	0					
ANR	5426703	Callee	printf		5426494	0					
ANR	5426704	Identifier	printf		5426494	0					
ANR	5426705	ArgumentList	"""FAILED: The degenerative case reported %d instead of %d.\\n"""		5426494	1					
ANR	5426706	Argument	"""FAILED: The degenerative case reported %d instead of %d.\\n"""		5426494	0					
ANR	5426707	PrimaryExpression	"""FAILED: The degenerative case reported %d instead of %d.\\n"""		5426494	0					
ANR	5426708	Argument	reported_length		5426494	1					
ANR	5426709	Identifier	reported_length		5426494	0					
ANR	5426710	Argument	strlen ( input )		5426494	2					
ANR	5426711	CallExpression	strlen ( input )		5426494	0					
ANR	5426712	Callee	strlen		5426494	0					
ANR	5426713	Identifier	strlen		5426494	0					
ANR	5426714	ArgumentList	input		5426494	1					
ANR	5426715	Argument	input		5426494	0					
ANR	5426716	Identifier	input		5426494	0					
ANR	5426717	ReturnStatement	return 0 ;	74:1:2421:2429	5426494	10	True				
ANR	5426718	PrimaryExpression	0		5426494	0					
ANR	5426719	ReturnType	int		5426494	1					
ANR	5426720	Identifier	main		5426494	2					
ANR	5426721	ParameterList	"int argc , char * * argv"		5426494	3					
ANR	5426722	Parameter	int argc	24:9:876:883	5426494	0	True				
ANR	5426723	ParameterType	int		5426494	0					
ANR	5426724	Identifier	argc		5426494	1					
ANR	5426725	Parameter	char * * argv	24:19:886:896	5426494	1	True				
ANR	5426726	ParameterType	char * *		5426494	0					
ANR	5426727	Identifier	argv		5426494	1					
ANR	5426728	CFGEntryNode	ENTRY		5426494		True				
ANR	5426729	CFGExitNode	EXIT		5426494		True				
ANR	5426730	Symbol	argc		5426494						
ANR	5426731	Symbol	output		5426494						
ANR	5426732	Symbol	input		5426494						
ANR	5426733	Symbol	strlen		5426494						
ANR	5426734	Symbol	reported_length		5426494						
ANR	5426735	Symbol	num_chars		5426494						
ANR	5426736	Symbol	argv		5426494						
ANR	5426737	Symbol	* output		5426494						
ANR	5426738	Symbol	snprintf		5426494						
