command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1787254	File	data/converged/CVE-2011-4930_htcondor/lexer.cpp								
ANR	1787255	Function	Lexer :: Lexer	32:0:986:1264							
ANR	1787256	FunctionDef	Lexer :: Lexer ()		1787255	0					
ANR	1787257	CompoundStatement		34:0:1003:1264	1787255	0					
ANR	1787258	ExpressionStatement	tokenType = LEX_END_OF_INPUT	36:1:1057:1085	1787255	0	True				
ANR	1787259	AssignmentExpression	tokenType = LEX_END_OF_INPUT		1787255	0		=			
ANR	1787260	Identifier	tokenType		1787255	0					
ANR	1787261	Identifier	LEX_END_OF_INPUT		1787255	1					
ANR	1787262	ExpressionStatement	lexBufferCount = 0	37:1:1088:1106	1787255	1	True				
ANR	1787263	AssignmentExpression	lexBufferCount = 0		1787255	0		=			
ANR	1787264	Identifier	lexBufferCount		1787255	0					
ANR	1787265	PrimaryExpression	0		1787255	1					
ANR	1787266	ExpressionStatement	savedChar = 0	38:1:1109:1122	1787255	2	True				
ANR	1787267	AssignmentExpression	savedChar = 0		1787255	0		=			
ANR	1787268	Identifier	savedChar		1787255	0					
ANR	1787269	PrimaryExpression	0		1787255	1					
ANR	1787270	ExpressionStatement	ch = 0	39:1:1125:1131	1787255	3	True				
ANR	1787271	AssignmentExpression	ch = 0		1787255	0		=			
ANR	1787272	Identifier	ch		1787255	0					
ANR	1787273	PrimaryExpression	0		1787255	1					
ANR	1787274	ExpressionStatement	inString = false	40:1:1134:1150	1787255	4	True				
ANR	1787275	AssignmentExpression	inString = false		1787255	0		=			
ANR	1787276	Identifier	inString		1787255	0					
ANR	1787277	Identifier	false		1787255	1					
ANR	1787278	ExpressionStatement	tokenConsumed = true	41:1:1153:1173	1787255	5	True				
ANR	1787279	AssignmentExpression	tokenConsumed = true		1787255	0		=			
ANR	1787280	Identifier	tokenConsumed		1787255	0					
ANR	1787281	Identifier	true		1787255	1					
ANR	1787282	ExpressionStatement	accumulating = false	42:1:1176:1196	1787255	6	True				
ANR	1787283	AssignmentExpression	accumulating = false		1787255	0		=			
ANR	1787284	Identifier	accumulating		1787255	0					
ANR	1787285	Identifier	false		1787255	1					
ANR	1787286	ExpressionStatement	initialized = false	43:4:1202:1221	1787255	7	True				
ANR	1787287	AssignmentExpression	initialized = false		1787255	0		=			
ANR	1787288	Identifier	initialized		1787255	0					
ANR	1787289	Identifier	false		1787255	1					
ANR	1787290	ExpressionStatement	debug = false	46:1:1240:1253	1787255	8	True				
ANR	1787291	AssignmentExpression	debug = false		1787255	0		=			
ANR	1787292	Identifier	debug		1787255	0					
ANR	1787293	Identifier	false		1787255	1					
ANR	1787294	ReturnStatement	return ;	47:1:1256:1262	1787255	9	True				
ANR	1787295	Identifier	Lexer :: Lexer		1787255	1					
ANR	1787296	ParameterList			1787255	2					
ANR	1787297	CFGEntryNode	ENTRY		1787255		True				
ANR	1787298	CFGExitNode	EXIT		1787255		True				
ANR	1787299	Symbol	tokenConsumed		1787255						
ANR	1787300	Symbol	debug		1787255						
ANR	1787301	Symbol	savedChar		1787255						
ANR	1787302	Symbol	ch		1787255						
ANR	1787303	Symbol	inString		1787255						
ANR	1787304	Symbol	false		1787255						
ANR	1787305	Symbol	true		1787255						
ANR	1787306	Symbol	initialized		1787255						
ANR	1787307	Symbol	LEX_END_OF_INPUT		1787255						
ANR	1787308	Symbol	tokenType		1787255						
ANR	1787309	Symbol	lexBufferCount		1787255						
ANR	1787310	Symbol	accumulating		1787255						
ANR	1787311	Function	Lexer :: ~Lexer	52:0:1276:1296							
ANR	1787312	FunctionDef	Lexer :: ~Lexer ()		1787311	0					
ANR	1787313	CompoundStatement		54:0:1294:1296	1787311	0					
ANR	1787314	Identifier	Lexer :: ~Lexer		1787311	1					
ANR	1787315	ParameterList			1787311	2					
ANR	1787316	CFGEntryNode	ENTRY		1787311		True				
ANR	1787317	CFGExitNode	EXIT		1787311		True				
ANR	1787318	Function	Lexer :: Initialize	60:0:1411:1686							
ANR	1787319	FunctionDef	Lexer :: Initialize (LexerSource * source)		1787318	0					
ANR	1787320	CompoundStatement		62:0:1456:1686	1787318	0					
ANR	1787321	ExpressionStatement	lexSource = source	63:1:1459:1477	1787318	0	True				
ANR	1787322	AssignmentExpression	lexSource = source		1787318	0		=			
ANR	1787323	Identifier	lexSource		1787318	0					
ANR	1787324	Identifier	source		1787318	1					
ANR	1787325	ExpressionStatement	ch = lexSource -> ReadCharacter ( )	64:1:1480:1511	1787318	1	True				
ANR	1787326	AssignmentExpression	ch = lexSource -> ReadCharacter ( )		1787318	0		=			
ANR	1787327	Identifier	ch		1787318	0					
ANR	1787328	CallExpression	lexSource -> ReadCharacter ( )		1787318	1					
ANR	1787329	Callee	lexSource -> ReadCharacter		1787318	0					
ANR	1787330	PtrMemberAccess	lexSource -> ReadCharacter		1787318	0					
ANR	1787331	Identifier	lexSource		1787318	0					
ANR	1787332	Identifier	ReadCharacter		1787318	1					
ANR	1787333	ArgumentList			1787318	1					
ANR	1787334	ExpressionStatement	lexBuffer = ch	67:1:1546:1560	1787318	2	True				
ANR	1787335	AssignmentExpression	lexBuffer = ch		1787318	0		=			
ANR	1787336	Identifier	lexBuffer		1787318	0					
ANR	1787337	Identifier	ch		1787318	1					
ANR	1787338	ExpressionStatement	lexBufferCount = 0	68:1:1563:1581	1787318	3	True				
ANR	1787339	AssignmentExpression	lexBufferCount = 0		1787318	0		=			
ANR	1787340	Identifier	lexBufferCount		1787318	0					
ANR	1787341	PrimaryExpression	0		1787318	1					
ANR	1787342	ExpressionStatement	inString = false	69:1:1584:1600	1787318	4	True				
ANR	1787343	AssignmentExpression	inString = false		1787318	0		=			
ANR	1787344	Identifier	inString		1787318	0					
ANR	1787345	Identifier	false		1787318	1					
ANR	1787346	ExpressionStatement	tokenConsumed = true	70:1:1603:1623	1787318	5	True				
ANR	1787347	AssignmentExpression	tokenConsumed = true		1787318	0		=			
ANR	1787348	Identifier	tokenConsumed		1787318	0					
ANR	1787349	Identifier	true		1787318	1					
ANR	1787350	ExpressionStatement	accumulating = false	71:1:1626:1646	1787318	6	True				
ANR	1787351	AssignmentExpression	accumulating = false		1787318	0		=			
ANR	1787352	Identifier	accumulating		1787318	0					
ANR	1787353	Identifier	false		1787318	1					
ANR	1787354	ExpressionStatement	initialized = true	72:4:1652:1670	1787318	7	True				
ANR	1787355	AssignmentExpression	initialized = true		1787318	0		=			
ANR	1787356	Identifier	initialized		1787318	0					
ANR	1787357	Identifier	true		1787318	1					
ANR	1787358	ReturnStatement	return true ;	73:1:1673:1684	1787318	8	True				
ANR	1787359	Identifier	true		1787318	0					
ANR	1787360	ReturnType	bool		1787318	1					
ANR	1787361	Identifier	Lexer :: Initialize		1787318	2					
ANR	1787362	ParameterList	LexerSource * source		1787318	3					
ANR	1787363	Parameter	LexerSource * source	61:11:1435:1453	1787318	0	True				
ANR	1787364	ParameterType	LexerSource *		1787318	0					
ANR	1787365	Identifier	source		1787318	1					
ANR	1787366	CFGEntryNode	ENTRY		1787318		True				
ANR	1787367	CFGExitNode	EXIT		1787318		True				
ANR	1787368	Symbol	tokenConsumed		1787318						
ANR	1787369	Symbol	ch		1787318						
ANR	1787370	Symbol	false		1787318						
ANR	1787371	Symbol	source		1787318						
ANR	1787372	Symbol	lexSource		1787318						
ANR	1787373	Symbol	* lexSource		1787318						
ANR	1787374	Symbol	lexSource -> ReadCharacter		1787318						
ANR	1787375	Symbol	inString		1787318						
ANR	1787376	Symbol	true		1787318						
ANR	1787377	Symbol	initialized		1787318						
ANR	1787378	Symbol	lexBufferCount		1787318						
ANR	1787379	Symbol	lexBuffer		1787318						
ANR	1787380	Symbol	accumulating		1787318						
ANR	1787381	Function	Lexer :: Reinitialize	77:0:1690:1907							
ANR	1787382	FunctionDef	Lexer :: Reinitialize ()		1787381	0					
ANR	1787383	CompoundStatement		79:0:1722:1907	1787381	0					
ANR	1787384	ExpressionStatement	ch = lexSource -> ReadCharacter ( )	80:1:1725:1756	1787381	0	True				
ANR	1787385	AssignmentExpression	ch = lexSource -> ReadCharacter ( )		1787381	0		=			
ANR	1787386	Identifier	ch		1787381	0					
ANR	1787387	CallExpression	lexSource -> ReadCharacter ( )		1787381	1					
ANR	1787388	Callee	lexSource -> ReadCharacter		1787381	0					
ANR	1787389	PtrMemberAccess	lexSource -> ReadCharacter		1787381	0					
ANR	1787390	Identifier	lexSource		1787381	0					
ANR	1787391	Identifier	ReadCharacter		1787381	1					
ANR	1787392	ArgumentList			1787381	1					
ANR	1787393	ExpressionStatement	lexBuffer = ch	82:1:1790:1804	1787381	1	True				
ANR	1787394	AssignmentExpression	lexBuffer = ch		1787381	0		=			
ANR	1787395	Identifier	lexBuffer		1787381	0					
ANR	1787396	Identifier	ch		1787381	1					
ANR	1787397	ExpressionStatement	lexBufferCount = 0	83:1:1807:1825	1787381	2	True				
ANR	1787398	AssignmentExpression	lexBufferCount = 0		1787381	0		=			
ANR	1787399	Identifier	lexBufferCount		1787381	0					
ANR	1787400	PrimaryExpression	0		1787381	1					
ANR	1787401	ExpressionStatement	inString = false	84:1:1828:1844	1787381	3	True				
ANR	1787402	AssignmentExpression	inString = false		1787381	0		=			
ANR	1787403	Identifier	inString		1787381	0					
ANR	1787404	Identifier	false		1787381	1					
ANR	1787405	ExpressionStatement	tokenConsumed = true	85:1:1847:1867	1787381	4	True				
ANR	1787406	AssignmentExpression	tokenConsumed = true		1787381	0		=			
ANR	1787407	Identifier	tokenConsumed		1787381	0					
ANR	1787408	Identifier	true		1787381	1					
ANR	1787409	ExpressionStatement	accumulating = false	86:1:1870:1890	1787381	5	True				
ANR	1787410	AssignmentExpression	accumulating = false		1787381	0		=			
ANR	1787411	Identifier	accumulating		1787381	0					
ANR	1787412	Identifier	false		1787381	1					
ANR	1787413	ReturnStatement	return true ;	88:1:1894:1905	1787381	6	True				
ANR	1787414	Identifier	true		1787381	0					
ANR	1787415	ReturnType	bool		1787381	1					
ANR	1787416	Identifier	Lexer :: Reinitialize		1787381	2					
ANR	1787417	ParameterList			1787381	3					
ANR	1787418	CFGEntryNode	ENTRY		1787381		True				
ANR	1787419	CFGExitNode	EXIT		1787381		True				
ANR	1787420	Symbol	tokenConsumed		1787381						
ANR	1787421	Symbol	ch		1787381						
ANR	1787422	Symbol	inString		1787381						
ANR	1787423	Symbol	false		1787381						
ANR	1787424	Symbol	true		1787381						
ANR	1787425	Symbol	lexSource		1787381						
ANR	1787426	Symbol	lexBufferCount		1787381						
ANR	1787427	Symbol	* lexSource		1787381						
ANR	1787428	Symbol	lexBuffer		1787381						
ANR	1787429	Symbol	lexSource -> ReadCharacter		1787381						
ANR	1787430	Symbol	accumulating		1787381						
ANR	1787431	Function	Lexer :: WasInitialized	91:0:1910:1970							
ANR	1787432	FunctionDef	Lexer :: WasInitialized ()		1787431	0					
ANR	1787433	CompoundStatement		93:0:1944:1970	1787431	0					
ANR	1787434	ReturnStatement	return initialized ;	94:4:1950:1968	1787431	0	True				
ANR	1787435	Identifier	initialized		1787431	0					
ANR	1787436	ReturnType	bool		1787431	1					
ANR	1787437	Identifier	Lexer :: WasInitialized		1787431	2					
ANR	1787438	ParameterList			1787431	3					
ANR	1787439	CFGEntryNode	ENTRY		1787431		True				
ANR	1787440	CFGExitNode	EXIT		1787431		True				
ANR	1787441	Symbol	initialized		1787431						
ANR	1787442	Function	Lexer :: FinishedParse	101:0:2210:2274							
ANR	1787443	FunctionDef	Lexer :: FinishedParse ()		1787442	0					
ANR	1787444	CompoundStatement		103:0:2240:2274	1787442	0					
ANR	1787445	ExpressionStatement	accumulating = false	104:1:2243:2263	1787442	0	True				
ANR	1787446	AssignmentExpression	accumulating = false		1787442	0		=			
ANR	1787447	Identifier	accumulating		1787442	0					
ANR	1787448	Identifier	false		1787442	1					
ANR	1787449	ReturnStatement	return ;	105:1:2266:2272	1787442	1	True				
ANR	1787450	ReturnType	void		1787442	1					
ANR	1787451	Identifier	Lexer :: FinishedParse		1787442	2					
ANR	1787452	ParameterList			1787442	3					
ANR	1787453	CFGEntryNode	ENTRY		1787442		True				
ANR	1787454	CFGExitNode	EXIT		1787442		True				
ANR	1787455	Symbol	false		1787442						
ANR	1787456	Symbol	accumulating		1787442						
ANR	1787457	Function	Lexer :: mark	110:0:2354:2450							
ANR	1787458	FunctionDef	Lexer :: mark ()		1787457	0					
ANR	1787459	CompoundStatement		112:0:2379:2450	1787457	0					
ANR	1787460	ExpressionStatement	lexBuffer = ch	113:1:2382:2396	1787457	0	True				
ANR	1787461	AssignmentExpression	lexBuffer = ch		1787457	0		=			
ANR	1787462	Identifier	lexBuffer		1787457	0					
ANR	1787463	Identifier	ch		1787457	1					
ANR	1787464	ExpressionStatement	lexBufferCount = 0	114:1:2399:2417	1787457	1	True				
ANR	1787465	AssignmentExpression	lexBufferCount = 0		1787457	0		=			
ANR	1787466	Identifier	lexBufferCount		1787457	0					
ANR	1787467	PrimaryExpression	0		1787457	1					
ANR	1787468	ExpressionStatement	accumulating = true	115:1:2420:2439	1787457	2	True				
ANR	1787469	AssignmentExpression	accumulating = true		1787457	0		=			
ANR	1787470	Identifier	accumulating		1787457	0					
ANR	1787471	Identifier	true		1787457	1					
ANR	1787472	ReturnStatement	return ;	116:1:2442:2448	1787457	3	True				
ANR	1787473	ReturnType	void		1787457	1					
ANR	1787474	Identifier	Lexer :: mark		1787457	2					
ANR	1787475	ParameterList			1787457	3					
ANR	1787476	CFGEntryNode	ENTRY		1787457		True				
ANR	1787477	CFGExitNode	EXIT		1787457		True				
ANR	1787478	Symbol	ch		1787457						
ANR	1787479	Symbol	true		1787457						
ANR	1787480	Symbol	lexBufferCount		1787457						
ANR	1787481	Symbol	lexBuffer		1787457						
ANR	1787482	Symbol	accumulating		1787457						
ANR	1787483	Function	Lexer :: cut	121:0:2523:2617							
ANR	1787484	FunctionDef	Lexer :: cut ()		1787483	0					
ANR	1787485	CompoundStatement		123:0:2548:2617	1787483	0					
ANR	1787486	ExpressionStatement	lexBuffer [ lexBufferCount ] = '\\0'	124:1:2551:2583	1787483	0	True				
ANR	1787487	AssignmentExpression	lexBuffer [ lexBufferCount ] = '\\0'		1787483	0		=			
ANR	1787488	ArrayIndexing	lexBuffer [ lexBufferCount ]		1787483	0					
ANR	1787489	Identifier	lexBuffer		1787483	0					
ANR	1787490	Identifier	lexBufferCount		1787483	1					
ANR	1787491	PrimaryExpression	'\\0'		1787483	1					
ANR	1787492	ExpressionStatement	accumulating = false	125:1:2586:2606	1787483	1	True				
ANR	1787493	AssignmentExpression	accumulating = false		1787483	0		=			
ANR	1787494	Identifier	accumulating		1787483	0					
ANR	1787495	Identifier	false		1787483	1					
ANR	1787496	ReturnStatement	return ;	126:1:2609:2615	1787483	2	True				
ANR	1787497	ReturnType	void		1787483	1					
ANR	1787498	Identifier	Lexer :: cut		1787483	2					
ANR	1787499	ParameterList			1787483	3					
ANR	1787500	CFGEntryNode	ENTRY		1787483		True				
ANR	1787501	CFGExitNode	EXIT		1787483		True				
ANR	1787502	Symbol	false		1787483						
ANR	1787503	Symbol	* lexBuffer		1787483						
ANR	1787504	Symbol	lexBufferCount		1787483						
ANR	1787505	Symbol	* lexBufferCount		1787483						
ANR	1787506	Symbol	lexBuffer		1787483						
ANR	1787507	Symbol	accumulating		1787483						
ANR	1787508	Function	Lexer :: wind	132:0:2774:2954							
ANR	1787509	FunctionDef	Lexer :: wind ()		1787508	0					
ANR	1787510	CompoundStatement		134:0:2799:2954	1787508	0					
ANR	1787511	IfStatement	if ( ch == - 1 )		1787508	0					
ANR	1787512	Condition	ch == - 1	135:4:2805:2812	1787508	0	True				
ANR	1787513	EqualityExpression	ch == - 1		1787508	0		==			
ANR	1787514	Identifier	ch		1787508	0					
ANR	1787515	UnaryOperationExpression	- 1		1787508	1					
ANR	1787516	UnaryOperator	-		1787508	0					
ANR	1787517	PrimaryExpression	1		1787508	1					
ANR	1787518	ReturnStatement	return ;	135:14:2815:2821	1787508	1	True				
ANR	1787519	ExpressionStatement	ch = lexSource -> ReadCharacter ( )	136:1:2824:2855	1787508	1	True				
ANR	1787520	AssignmentExpression	ch = lexSource -> ReadCharacter ( )		1787508	0		=			
ANR	1787521	Identifier	ch		1787508	0					
ANR	1787522	CallExpression	lexSource -> ReadCharacter ( )		1787508	1					
ANR	1787523	Callee	lexSource -> ReadCharacter		1787508	0					
ANR	1787524	PtrMemberAccess	lexSource -> ReadCharacter		1787508	0					
ANR	1787525	Identifier	lexSource		1787508	0					
ANR	1787526	Identifier	ReadCharacter		1787508	1					
ANR	1787527	ArgumentList			1787508	1					
ANR	1787528	ExpressionStatement	++ lexBufferCount	137:1:2858:2874	1787508	2	True				
ANR	1787529	UnaryExpression	++ lexBufferCount		1787508	0					
ANR	1787530	IncDec	++		1787508	0					
ANR	1787531	Identifier	lexBufferCount		1787508	1					
ANR	1787532	IfStatement	if ( ch == - 1 )		1787508	3					
ANR	1787533	Condition	ch == - 1	138:5:2881:2888	1787508	0	True				
ANR	1787534	EqualityExpression	ch == - 1		1787508	0		==			
ANR	1787535	Identifier	ch		1787508	0					
ANR	1787536	UnaryOperationExpression	- 1		1787508	1					
ANR	1787537	UnaryOperator	-		1787508	0					
ANR	1787538	PrimaryExpression	1		1787508	1					
ANR	1787539	ReturnStatement	return ;	138:16:2892:2898	1787508	1	True				
ANR	1787540	IfStatement	if ( accumulating )		1787508	4					
ANR	1787541	Condition	accumulating	139:5:2905:2916	1787508	0	True				
ANR	1787542	Identifier	accumulating		1787508	0					
ANR	1787543	CompoundStatement		6:20:120:120	1787508	1					
ANR	1787544	ExpressionStatement	lexBuffer += ch	140:2:2924:2939	1787508	0	True				
ANR	1787545	AssignmentExpression	lexBuffer += ch		1787508	0		+=			
ANR	1787546	Identifier	lexBuffer		1787508	0					
ANR	1787547	Identifier	ch		1787508	1					
ANR	1787548	ReturnStatement	return ;	142:1:2946:2952	1787508	5	True				
ANR	1787549	ReturnType	void		1787508	1					
ANR	1787550	Identifier	Lexer :: wind		1787508	2					
ANR	1787551	ParameterList			1787508	3					
ANR	1787552	CFGEntryNode	ENTRY		1787508		True				
ANR	1787553	CFGExitNode	EXIT		1787508		True				
ANR	1787554	Symbol	ch		1787508						
ANR	1787555	Symbol	lexSource		1787508						
ANR	1787556	Symbol	* lexSource		1787508						
ANR	1787557	Symbol	lexBuffer		1787508						
ANR	1787558	Symbol	lexSource -> ReadCharacter		1787508						
ANR	1787559	Symbol	accumulating		1787508						
ANR	1787560	Function	Lexer :: ConsumeToken	146:0:2961:3273							
ANR	1787561	FunctionDef	Lexer :: ConsumeToken (TokenValue * lvalp)		1787560	0					
ANR	1787562	CompoundStatement		148:0:3019:3273	1787560	0					
ANR	1787563	IfStatement	if ( lvalp )		1787560	0					
ANR	1787564	Condition	lvalp	149:5:3026:3030	1787560	0	True				
ANR	1787565	Identifier	lvalp		1787560	0					
ANR	1787566	ExpressionStatement	lvalp -> CopyFrom ( yylval )	149:12:3033:3058	1787560	1	True				
ANR	1787567	CallExpression	lvalp -> CopyFrom ( yylval )		1787560	0					
ANR	1787568	Callee	lvalp -> CopyFrom		1787560	0					
ANR	1787569	PtrMemberAccess	lvalp -> CopyFrom		1787560	0					
ANR	1787570	Identifier	lvalp		1787560	0					
ANR	1787571	Identifier	CopyFrom		1787560	1					
ANR	1787572	ArgumentList	yylval		1787560	1					
ANR	1787573	Argument	yylval		1787560	0					
ANR	1787574	Identifier	yylval		1787560	0					
ANR	1787575	IfStatement	if ( tokenConsumed )		1787560	1					
ANR	1787576	Condition	tokenConsumed	152:5:3126:3138	1787560	0	True				
ANR	1787577	Identifier	tokenConsumed		1787560	0					
ANR	1787578	ExpressionStatement	PeekToken ( lvalp )	152:20:3141:3158	1787560	1	True				
ANR	1787579	CallExpression	PeekToken ( lvalp )		1787560	0					
ANR	1787580	Callee	PeekToken		1787560	0					
ANR	1787581	Identifier	PeekToken		1787560	0					
ANR	1787582	ArgumentList	lvalp		1787560	1					
ANR	1787583	Argument	lvalp		1787560	0					
ANR	1787584	Identifier	lvalp		1787560	0					
ANR	1787585	IfStatement	if ( debug )		1787560	2					
ANR	1787586	Condition	debug	154:5:3166:3170	1787560	0	True				
ANR	1787587	Identifier	debug		1787560	0					
ANR	1787588	CompoundStatement		7:12:153:153	1787560	1					
ANR	1787589	ExpressionStatement	"printf ( ""Consume: %s\\n"" , strLexToken ( tokenType ) )"	155:2:3177:3225	1787560	0	True				
ANR	1787590	CallExpression	"printf ( ""Consume: %s\\n"" , strLexToken ( tokenType ) )"		1787560	0					
ANR	1787591	Callee	printf		1787560	0					
ANR	1787592	Identifier	printf		1787560	0					
ANR	1787593	ArgumentList	"""Consume: %s\\n"""		1787560	1					
ANR	1787594	Argument	"""Consume: %s\\n"""		1787560	0					
ANR	1787595	PrimaryExpression	"""Consume: %s\\n"""		1787560	0					
ANR	1787596	Argument	strLexToken ( tokenType )		1787560	1					
ANR	1787597	CallExpression	strLexToken ( tokenType )		1787560	0					
ANR	1787598	Callee	strLexToken		1787560	0					
ANR	1787599	Identifier	strLexToken		1787560	0					
ANR	1787600	ArgumentList	tokenType		1787560	1					
ANR	1787601	Argument	tokenType		1787560	0					
ANR	1787602	Identifier	tokenType		1787560	0					
ANR	1787603	ExpressionStatement	tokenConsumed = true	158:1:3232:3252	1787560	3	True				
ANR	1787604	AssignmentExpression	tokenConsumed = true		1787560	0		=			
ANR	1787605	Identifier	tokenConsumed		1787560	0					
ANR	1787606	Identifier	true		1787560	1					
ANR	1787607	ReturnStatement	return tokenType ;	159:1:3255:3271	1787560	4	True				
ANR	1787608	Identifier	tokenType		1787560	0					
ANR	1787609	ReturnType	Lexer :: TokenType		1787560	1					
ANR	1787610	Identifier	Lexer :: ConsumeToken		1787560	2					
ANR	1787611	ParameterList	TokenValue * lvalp		1787560	3					
ANR	1787612	Parameter	TokenValue * lvalp	147:14:3000:3016	1787560	0	True				
ANR	1787613	ParameterType	TokenValue *		1787560	0					
ANR	1787614	Identifier	lvalp		1787560	1					
ANR	1787615	CFGEntryNode	ENTRY		1787560		True				
ANR	1787616	CFGExitNode	EXIT		1787560		True				
ANR	1787617	Symbol	tokenConsumed		1787560						
ANR	1787618	Symbol	lvalp		1787560						
ANR	1787619	Symbol	yylval		1787560						
ANR	1787620	Symbol	debug		1787560						
ANR	1787621	Symbol	true		1787560						
ANR	1787622	Symbol	tokenType		1787560						
ANR	1787623	Symbol	strLexToken		1787560						
ANR	1787624	Function	Lexer :: PeekToken	164:0:3345:5599							
ANR	1787625	FunctionDef	Lexer :: PeekToken (TokenValue * lvalp)		1787624	0					
ANR	1787626	CompoundStatement		166:0:3400:5599	1787624	0					
ANR	1787627	IfStatement	if ( ! tokenConsumed )		1787624	0					
ANR	1787628	Condition	! tokenConsumed	167:5:3407:3420	1787624	0	True				
ANR	1787629	UnaryOperationExpression	! tokenConsumed		1787624	0					
ANR	1787630	UnaryOperator	!		1787624	0					
ANR	1787631	Identifier	tokenConsumed		1787624	1					
ANR	1787632	CompoundStatement		2:21:22:22	1787624	1					
ANR	1787633	IfStatement	if ( lvalp )		1787624	0					
ANR	1787634	Condition	lvalp	168:6:3431:3435	1787624	0	True				
ANR	1787635	Identifier	lvalp		1787624	0					
ANR	1787636	ExpressionStatement	lvalp -> CopyFrom ( yylval )	168:14:3439:3464	1787624	1	True				
ANR	1787637	CallExpression	lvalp -> CopyFrom ( yylval )		1787624	0					
ANR	1787638	Callee	lvalp -> CopyFrom		1787624	0					
ANR	1787639	PtrMemberAccess	lvalp -> CopyFrom		1787624	0					
ANR	1787640	Identifier	lvalp		1787624	0					
ANR	1787641	Identifier	CopyFrom		1787624	1					
ANR	1787642	ArgumentList	yylval		1787624	1					
ANR	1787643	Argument	yylval		1787624	0					
ANR	1787644	Identifier	yylval		1787624	0					
ANR	1787645	ReturnStatement	return tokenType ;	169:2:3468:3484	1787624	1	True				
ANR	1787646	Identifier	tokenType		1787624	0					
ANR	1787647	ExpressionStatement	tokenConsumed = false	173:1:3523:3544	1787624	1	True				
ANR	1787648	AssignmentExpression	tokenConsumed = false		1787624	0		=			
ANR	1787649	Identifier	tokenConsumed		1787624	0					
ANR	1787650	Identifier	false		1787624	1					
ANR	1787651	WhileStatement	while ( 1 )		1787624	2					
ANR	1787652	Condition	1	176:8:3580:3580	1787624	0	True				
ANR	1787653	PrimaryExpression	1		1787624	0					
ANR	1787654	CompoundStatement		11:12:183:183	1787624	1					
ANR	1787655	IfStatement	if ( isspace ( ch ) )		1787624	0					
ANR	1787656	Condition	isspace ( ch )	177:6:3592:3604	1787624	0	True				
ANR	1787657	CallExpression	isspace ( ch )		1787624	0					
ANR	1787658	Callee	isspace		1787624	0					
ANR	1787659	Identifier	isspace		1787624	0					
ANR	1787660	ArgumentList	ch		1787624	1					
ANR	1787661	Argument	ch		1787624	0					
ANR	1787662	Identifier	ch		1787624	0					
ANR	1787663	CompoundStatement		12:22:207:207	1787624	1					
ANR	1787664	ExpressionStatement	wind ( )	178:3:3613:3620	1787624	0	True				
ANR	1787665	CallExpression	wind ( )		1787624	0					
ANR	1787666	Callee	wind		1787624	0					
ANR	1787667	Identifier	wind		1787624	0					
ANR	1787668	ArgumentList			1787624	1					
ANR	1787669	ContinueStatement	continue ;	179:3:3625:3633	1787624	1	True				
ANR	1787670	ElseStatement	else		1787624	0					
ANR	1787671	IfStatement	if ( ch == '/' )		1787624	0					
ANR	1787672	Condition	ch == '/'	180:13:3648:3656	1787624	0	True				
ANR	1787673	EqualityExpression	ch == '/'		1787624	0		==			
ANR	1787674	Identifier	ch		1787624	0					
ANR	1787675	PrimaryExpression	'/'		1787624	1					
ANR	1787676	CompoundStatement		15:25:259:259	1787624	1					
ANR	1787677	ExpressionStatement	mark ( )	181:3:3665:3672	1787624	0	True				
ANR	1787678	CallExpression	mark ( )		1787624	0					
ANR	1787679	Callee	mark		1787624	0					
ANR	1787680	Identifier	mark		1787624	0					
ANR	1787681	ArgumentList			1787624	1					
ANR	1787682	ExpressionStatement	wind ( )	182:3:3677:3684	1787624	1	True				
ANR	1787683	CallExpression	wind ( )		1787624	0					
ANR	1787684	Callee	wind		1787624	0					
ANR	1787685	Identifier	wind		1787624	0					
ANR	1787686	ArgumentList			1787624	1					
ANR	1787687	IfStatement	if ( ch == '/' )		1787624	2					
ANR	1787688	Condition	ch == '/'	183:7:3693:3701	1787624	0	True				
ANR	1787689	EqualityExpression	ch == '/'		1787624	0		==			
ANR	1787690	Identifier	ch		1787624	0					
ANR	1787691	PrimaryExpression	'/'		1787624	1					
ANR	1787692	CompoundStatement		18:19:304:304	1787624	1					
ANR	1787693	WhileStatement	while ( ch > 0 && ch != '\\n' )		1787624	0					
ANR	1787694	Condition	ch > 0 && ch != '\\n'	185:11:3745:3764	1787624	0	True				
ANR	1787695	AndExpression	ch > 0 && ch != '\\n'		1787624	0		&&			
ANR	1787696	RelationalExpression	ch > 0		1787624	0		>			
ANR	1787697	Identifier	ch		1787624	0					
ANR	1787698	PrimaryExpression	0		1787624	1					
ANR	1787699	EqualityExpression	ch != '\\n'		1787624	1		!=			
ANR	1787700	Identifier	ch		1787624	0					
ANR	1787701	PrimaryExpression	'\\n'		1787624	1					
ANR	1787702	CompoundStatement		20:34:367:367	1787624	1					
ANR	1787703	ExpressionStatement	wind ( )	186:5:3775:3782	1787624	0	True				
ANR	1787704	CallExpression	wind ( )		1787624	0					
ANR	1787705	Callee	wind		1787624	0					
ANR	1787706	Identifier	wind		1787624	0					
ANR	1787707	ArgumentList			1787624	1					
ANR	1787708	ElseStatement	else		1787624	0					
ANR	1787709	IfStatement	if ( ch == '*' )		1787624	0					
ANR	1787710	Condition	ch == '*'	188:14:3804:3812	1787624	0	True				
ANR	1787711	EqualityExpression	ch == '*'		1787624	0		==			
ANR	1787712	Identifier	ch		1787624	0					
ANR	1787713	PrimaryExpression	'*'		1787624	1					
ANR	1787714	CompoundStatement		25:4:446:455	1787624	1					
ANR	1787715	IdentifierDeclStatement	int oldCh ;	190:4:3847:3856	1787624	0	True				
ANR	1787716	IdentifierDecl	oldCh		1787624	0					
ANR	1787717	IdentifierDeclType	int		1787624	0					
ANR	1787718	Identifier	oldCh		1787624	1					
ANR	1787719	ExpressionStatement	ch = '\\n'	191:4:3862:3871	1787624	1	True				
ANR	1787720	AssignmentExpression	ch = '\\n'		1787624	0		=			
ANR	1787721	Identifier	ch		1787624	0					
ANR	1787722	PrimaryExpression	'\\n'		1787624	1					
ANR	1787723	DoStatement	do		1787624	2					
ANR	1787724	CompoundStatement		27:7:479:479	1787624	0					
ANR	1787725	ExpressionStatement	oldCh = ch	193:5:3887:3897	1787624	0	True				
ANR	1787726	AssignmentExpression	oldCh = ch		1787624	0		=			
ANR	1787727	Identifier	oldCh		1787624	0					
ANR	1787728	Identifier	ch		1787624	1					
ANR	1787729	ExpressionStatement	wind ( )	194:5:3904:3911	1787624	1	True				
ANR	1787730	CallExpression	wind ( )		1787624	0					
ANR	1787731	Callee	wind		1787624	0					
ANR	1787732	Identifier	wind		1787624	0					
ANR	1787733	ArgumentList			1787624	1					
ANR	1787734	Condition	oldCh != '*' || ch != '/'	195:13:3926:3950	1787624	1	True				
ANR	1787735	OrExpression	oldCh != '*' || ch != '/'		1787624	0		||			
ANR	1787736	EqualityExpression	oldCh != '*'		1787624	0		!=			
ANR	1787737	Identifier	oldCh		1787624	0					
ANR	1787738	PrimaryExpression	'*'		1787624	1					
ANR	1787739	EqualityExpression	ch != '/'		1787624	1		!=			
ANR	1787740	Identifier	ch		1787624	0					
ANR	1787741	PrimaryExpression	'/'		1787624	1					
ANR	1787742	ExpressionStatement	wind ( )	196:4:3959:3966	1787624	3	True				
ANR	1787743	CallExpression	wind ( )		1787624	0					
ANR	1787744	Callee	wind		1787624	0					
ANR	1787745	Identifier	wind		1787624	0					
ANR	1787746	ArgumentList			1787624	1					
ANR	1787747	ElseStatement	else		1787624	0					
ANR	1787748	CompoundStatement		32:10:577:577	1787624	0					
ANR	1787749	ExpressionStatement	cut ( )	199:4:4016:4022	1787624	0	True				
ANR	1787750	CallExpression	cut ( )		1787624	0					
ANR	1787751	Callee	cut		1787624	0					
ANR	1787752	Identifier	cut		1787624	0					
ANR	1787753	ArgumentList			1787624	1					
ANR	1787754	ExpressionStatement	tokenType = LEX_DIVIDE	200:4:4028:4050	1787624	1	True				
ANR	1787755	AssignmentExpression	tokenType = LEX_DIVIDE		1787624	0		=			
ANR	1787756	Identifier	tokenType		1787624	0					
ANR	1787757	Identifier	LEX_DIVIDE		1787624	1					
ANR	1787758	ExpressionStatement	yylval . SetTokenType ( tokenType )	201:4:4056:4088	1787624	2	True				
ANR	1787759	CallExpression	yylval . SetTokenType ( tokenType )		1787624	0					
ANR	1787760	Callee	yylval . SetTokenType		1787624	0					
ANR	1787761	MemberAccess	yylval . SetTokenType		1787624	0					
ANR	1787762	Identifier	yylval		1787624	0					
ANR	1787763	Identifier	SetTokenType		1787624	1					
ANR	1787764	ArgumentList	tokenType		1787624	1					
ANR	1787765	Argument	tokenType		1787624	0					
ANR	1787766	Identifier	tokenType		1787624	0					
ANR	1787767	ReturnStatement	return ( tokenType ) ;	202:4:4094:4113	1787624	3	True				
ANR	1787768	Identifier	tokenType		1787624	0					
ANR	1787769	ElseStatement	else		1787624	0					
ANR	1787770	CompoundStatement		39:9:728:728	1787624	0					
ANR	1787771	BreakStatement	break ;	205:3:4134:4139	1787624	0	True				
ANR	1787772	IfStatement	if ( ch == 0 || ch == EOF )		1787624	3					
ANR	1787773	Condition	ch == 0 || ch == EOF	210:5:4222:4241	1787624	0	True				
ANR	1787774	OrExpression	ch == 0 || ch == EOF		1787624	0		||			
ANR	1787775	EqualityExpression	ch == 0		1787624	0		==			
ANR	1787776	Identifier	ch		1787624	0					
ANR	1787777	PrimaryExpression	0		1787624	1					
ANR	1787778	EqualityExpression	ch == EOF		1787624	1		==			
ANR	1787779	Identifier	ch		1787624	0					
ANR	1787780	Identifier	EOF		1787624	1					
ANR	1787781	CompoundStatement		45:27:843:843	1787624	1					
ANR	1787782	ExpressionStatement	tokenType = LEX_END_OF_INPUT	211:2:4248:4276	1787624	0	True				
ANR	1787783	AssignmentExpression	tokenType = LEX_END_OF_INPUT		1787624	0		=			
ANR	1787784	Identifier	tokenType		1787624	0					
ANR	1787785	Identifier	LEX_END_OF_INPUT		1787624	1					
ANR	1787786	ExpressionStatement	yylval . SetTokenType ( tokenType )	212:2:4280:4312	1787624	1	True				
ANR	1787787	CallExpression	yylval . SetTokenType ( tokenType )		1787624	0					
ANR	1787788	Callee	yylval . SetTokenType		1787624	0					
ANR	1787789	MemberAccess	yylval . SetTokenType		1787624	0					
ANR	1787790	Identifier	yylval		1787624	0					
ANR	1787791	Identifier	SetTokenType		1787624	1					
ANR	1787792	ArgumentList	tokenType		1787624	1					
ANR	1787793	Argument	tokenType		1787624	0					
ANR	1787794	Identifier	tokenType		1787624	0					
ANR	1787795	ReturnStatement	return tokenType ;	213:2:4316:4332	1787624	2	True				
ANR	1787796	Identifier	tokenType		1787624	0					
ANR	1787797	IfStatement	if ( ch == '-' )		1787624	4					
ANR	1787798	Condition	ch == '-'	217:6:4387:4395	1787624	0	True				
ANR	1787799	EqualityExpression	ch == '-'		1787624	0		==			
ANR	1787800	Identifier	ch		1787624	0					
ANR	1787801	PrimaryExpression	'-'		1787624	1					
ANR	1787802	CompoundStatement		52:18:998:998	1787624	1					
ANR	1787803	SwitchStatement	switch ( tokenType )		1787624	0					
ANR	1787804	Condition	tokenType	221:11:4598:4606	1787624	0	True				
ANR	1787805	Identifier	tokenType		1787624	0					
ANR	1787806	CompoundStatement		56:23:1209:1209	1787624	1					
ANR	1787807	Label	case LEX_INTEGER_VALUE :	222:2:4614:4636	1787624	0	True				
ANR	1787808	Identifier	LEX_INTEGER_VALUE		1787624	0					
ANR	1787809	Label	case LEX_REAL_VALUE :	223:2:4640:4659	1787624	1	True				
ANR	1787810	Identifier	LEX_REAL_VALUE		1787624	0					
ANR	1787811	Label	case LEX_BOOLEAN_VALUE :	224:2:4663:4685	1787624	2	True				
ANR	1787812	Identifier	LEX_BOOLEAN_VALUE		1787624	0					
ANR	1787813	Label	case LEX_STRING_VALUE :	225:2:4689:4710	1787624	3	True				
ANR	1787814	Identifier	LEX_STRING_VALUE		1787624	0					
ANR	1787815	Label	case LEX_UNDEFINED_VALUE :	226:2:4714:4738	1787624	4	True				
ANR	1787816	Identifier	LEX_UNDEFINED_VALUE		1787624	0					
ANR	1787817	Label	case LEX_ERROR_VALUE :	227:2:4742:4762	1787624	5	True				
ANR	1787818	Identifier	LEX_ERROR_VALUE		1787624	0					
ANR	1787819	Label	case LEX_IDENTIFIER :	228:2:4766:4785	1787624	6	True				
ANR	1787820	Identifier	LEX_IDENTIFIER		1787624	0					
ANR	1787821	Label	case LEX_SELECTION :	229:2:4789:4807	1787624	7	True				
ANR	1787822	Identifier	LEX_SELECTION		1787624	0					
ANR	1787823	Label	case LEX_CLOSE_BOX :	230:2:4811:4829	1787624	8	True				
ANR	1787824	Identifier	LEX_CLOSE_BOX		1787624	0					
ANR	1787825	Label	case LEX_CLOSE_PAREN :	231:2:4833:4853	1787624	9	True				
ANR	1787826	Identifier	LEX_CLOSE_PAREN		1787624	0					
ANR	1787827	Label	case LEX_CLOSE_BRACE :	232:2:4857:4877	1787624	10	True				
ANR	1787828	Identifier	LEX_CLOSE_BRACE		1787624	0					
ANR	1787829	Label	case LEX_BACKSLASH :	233:2:4881:4899	1787624	11	True				
ANR	1787830	Identifier	LEX_BACKSLASH		1787624	0					
ANR	1787831	Label	case LEX_ABSOLUTE_TIME_VALUE :	234:2:4903:4931	1787624	12	True				
ANR	1787832	Identifier	LEX_ABSOLUTE_TIME_VALUE		1787624	0					
ANR	1787833	Label	case LEX_RELATIVE_TIME_VALUE :	235:2:4935:4963	1787624	13	True				
ANR	1787834	Identifier	LEX_RELATIVE_TIME_VALUE		1787624	0					
ANR	1787835	ExpressionStatement	tokenizePunctOperator ( )	236:3:4968:4991	1787624	14	True				
ANR	1787836	CallExpression	tokenizePunctOperator ( )		1787624	0					
ANR	1787837	Callee	tokenizePunctOperator		1787624	0					
ANR	1787838	Identifier	tokenizePunctOperator		1787624	0					
ANR	1787839	ArgumentList			1787624	1					
ANR	1787840	BreakStatement	break ;	237:3:4996:5001	1787624	15	True				
ANR	1787841	Label	default :	238:2:5005:5012	1787624	16	True				
ANR	1787842	Identifier	default		1787624	0					
ANR	1787843	ExpressionStatement	tokenizeNumber ( )	239:3:5017:5033	1787624	17	True				
ANR	1787844	CallExpression	tokenizeNumber ( )		1787624	0					
ANR	1787845	Callee	tokenizeNumber		1787624	0					
ANR	1787846	Identifier	tokenizeNumber		1787624	0					
ANR	1787847	ArgumentList			1787624	1					
ANR	1787848	BreakStatement	break ;	240:3:5038:5043	1787624	18	True				
ANR	1787849	ElseStatement	else		1787624	0					
ANR	1787850	IfStatement	if ( isdigit ( ch ) || ch == '.' )		1787624	0					
ANR	1787851	Condition	isdigit ( ch ) || ch == '.'	242:12:5061:5086	1787624	0	True				
ANR	1787852	OrExpression	isdigit ( ch ) || ch == '.'		1787624	0		||			
ANR	1787853	CallExpression	isdigit ( ch )		1787624	0					
ANR	1787854	Callee	isdigit		1787624	0					
ANR	1787855	Identifier	isdigit		1787624	0					
ANR	1787856	ArgumentList	ch		1787624	1					
ANR	1787857	Argument	ch		1787624	0					
ANR	1787858	Identifier	ch		1787624	0					
ANR	1787859	EqualityExpression	ch == '.'		1787624	1		==			
ANR	1787860	Identifier	ch		1787624	0					
ANR	1787861	PrimaryExpression	'.'		1787624	1					
ANR	1787862	CompoundStatement		77:41:1689:1689	1787624	1					
ANR	1787863	ExpressionStatement	tokenizeNumber ( )	244:2:5158:5174	1787624	0	True				
ANR	1787864	CallExpression	tokenizeNumber ( )		1787624	0					
ANR	1787865	Callee	tokenizeNumber		1787624	0					
ANR	1787866	Identifier	tokenizeNumber		1787624	0					
ANR	1787867	ArgumentList			1787624	1					
ANR	1787868	ElseStatement	else		1787624	0					
ANR	1787869	IfStatement	if ( isalpha ( ch ) || ch == '_' )		1787624	0					
ANR	1787870	Condition	isalpha ( ch ) || ch == '_'	245:12:5189:5213	1787624	0	True				
ANR	1787871	OrExpression	isalpha ( ch ) || ch == '_'		1787624	0		||			
ANR	1787872	CallExpression	isalpha ( ch )		1787624	0					
ANR	1787873	Callee	isalpha		1787624	0					
ANR	1787874	Identifier	isalpha		1787624	0					
ANR	1787875	ArgumentList	ch		1787624	1					
ANR	1787876	Argument	ch		1787624	0					
ANR	1787877	Identifier	ch		1787624	0					
ANR	1787878	EqualityExpression	ch == '_'		1787624	1		==			
ANR	1787879	Identifier	ch		1787624	0					
ANR	1787880	PrimaryExpression	'_'		1787624	1					
ANR	1787881	CompoundStatement		80:39:1815:1815	1787624	1					
ANR	1787882	ExpressionStatement	tokenizeAlphaHead ( )	246:2:5220:5240	1787624	0	True				
ANR	1787883	CallExpression	tokenizeAlphaHead ( )		1787624	0					
ANR	1787884	Callee	tokenizeAlphaHead		1787624	0					
ANR	1787885	Identifier	tokenizeAlphaHead		1787624	0					
ANR	1787886	ArgumentList			1787624	1					
ANR	1787887	ElseStatement	else		1787624	0					
ANR	1787888	IfStatement	"if ( ch == '\\""' )"		1787624	0					
ANR	1787889	Condition	"ch == '\\""'"	247:12:5254:5263	1787624	0	True				
ANR	1787890	EqualityExpression	"ch == '\\""'"		1787624	0		==			
ANR	1787891	Identifier	ch		1787624	0					
ANR	1787892	PrimaryExpression	"'\\""'"		1787624	1					
ANR	1787893	CompoundStatement		82:24:1865:1865	1787624	1					
ANR	1787894	ExpressionStatement	"tokenizeString ( '\\""' )"	248:2:5270:5290	1787624	0	True				
ANR	1787895	CallExpression	"tokenizeString ( '\\""' )"		1787624	0					
ANR	1787896	Callee	tokenizeString		1787624	0					
ANR	1787897	Identifier	tokenizeString		1787624	0					
ANR	1787898	ArgumentList	"'\\""'"		1787624	1					
ANR	1787899	Argument	"'\\""'"		1787624	0					
ANR	1787900	PrimaryExpression	"'\\""'"		1787624	0					
ANR	1787901	ElseStatement	else		1787624	0					
ANR	1787902	IfStatement	if ( ch == '\\'' )		1787624	0					
ANR	1787903	Condition	ch == '\\''	249:12:5328:5337	1787624	0	True				
ANR	1787904	EqualityExpression	ch == '\\''		1787624	0		==			
ANR	1787905	Identifier	ch		1787624	0					
ANR	1787906	PrimaryExpression	'\\''		1787624	1					
ANR	1787907	CompoundStatement		84:25:1940:1940	1787624	1					
ANR	1787908	ExpressionStatement	tokenizeString ( '\\'' )	250:2:5345:5365	1787624	0	True				
ANR	1787909	CallExpression	tokenizeString ( '\\'' )		1787624	0					
ANR	1787910	Callee	tokenizeString		1787624	0					
ANR	1787911	Identifier	tokenizeString		1787624	0					
ANR	1787912	ArgumentList	'\\''		1787624	1					
ANR	1787913	Argument	'\\''		1787624	0					
ANR	1787914	PrimaryExpression	'\\''		1787624	0					
ANR	1787915	ElseStatement	else		1787624	0					
ANR	1787916	CompoundStatement		88:6:2003:2003	1787624	0					
ANR	1787917	ExpressionStatement	tokenizePunctOperator ( )	254:2:5408:5432	1787624	0	True				
ANR	1787918	CallExpression	tokenizePunctOperator ( )		1787624	0					
ANR	1787919	Callee	tokenizePunctOperator		1787624	0					
ANR	1787920	Identifier	tokenizePunctOperator		1787624	0					
ANR	1787921	ArgumentList			1787624	1					
ANR	1787922	IfStatement	if ( debug )		1787624	5					
ANR	1787923	Condition	debug	257:5:5443:5447	1787624	0	True				
ANR	1787924	Identifier	debug		1787624	0					
ANR	1787925	CompoundStatement		92:12:2049:2049	1787624	1					
ANR	1787926	ExpressionStatement	"printf ( ""Peek: %s\\n"" , strLexToken ( tokenType ) )"	258:2:5454:5499	1787624	0	True				
ANR	1787927	CallExpression	"printf ( ""Peek: %s\\n"" , strLexToken ( tokenType ) )"		1787624	0					
ANR	1787928	Callee	printf		1787624	0					
ANR	1787929	Identifier	printf		1787624	0					
ANR	1787930	ArgumentList	"""Peek: %s\\n"""		1787624	1					
ANR	1787931	Argument	"""Peek: %s\\n"""		1787624	0					
ANR	1787932	PrimaryExpression	"""Peek: %s\\n"""		1787624	0					
ANR	1787933	Argument	strLexToken ( tokenType )		1787624	1					
ANR	1787934	CallExpression	strLexToken ( tokenType )		1787624	0					
ANR	1787935	Callee	strLexToken		1787624	0					
ANR	1787936	Identifier	strLexToken		1787624	0					
ANR	1787937	ArgumentList	tokenType		1787624	1					
ANR	1787938	Argument	tokenType		1787624	0					
ANR	1787939	Identifier	tokenType		1787624	0					
ANR	1787940	IfStatement	if ( lvalp )		1787624	6					
ANR	1787941	Condition	lvalp	261:5:5510:5514	1787624	0	True				
ANR	1787942	Identifier	lvalp		1787624	0					
ANR	1787943	ExpressionStatement	lvalp -> CopyFrom ( yylval )	261:12:5517:5542	1787624	1	True				
ANR	1787944	CallExpression	lvalp -> CopyFrom ( yylval )		1787624	0					
ANR	1787945	Callee	lvalp -> CopyFrom		1787624	0					
ANR	1787946	PtrMemberAccess	lvalp -> CopyFrom		1787624	0					
ANR	1787947	Identifier	lvalp		1787624	0					
ANR	1787948	Identifier	CopyFrom		1787624	1					
ANR	1787949	ArgumentList	yylval		1787624	1					
ANR	1787950	Argument	yylval		1787624	0					
ANR	1787951	Identifier	yylval		1787624	0					
ANR	1787952	ExpressionStatement	yylval . SetTokenType ( tokenType )	263:1:5546:5578	1787624	7	True				
ANR	1787953	CallExpression	yylval . SetTokenType ( tokenType )		1787624	0					
ANR	1787954	Callee	yylval . SetTokenType		1787624	0					
ANR	1787955	MemberAccess	yylval . SetTokenType		1787624	0					
ANR	1787956	Identifier	yylval		1787624	0					
ANR	1787957	Identifier	SetTokenType		1787624	1					
ANR	1787958	ArgumentList	tokenType		1787624	1					
ANR	1787959	Argument	tokenType		1787624	0					
ANR	1787960	Identifier	tokenType		1787624	0					
ANR	1787961	ReturnStatement	return tokenType ;	264:1:5581:5597	1787624	8	True				
ANR	1787962	Identifier	tokenType		1787624	0					
ANR	1787963	ReturnType	Lexer :: TokenType		1787624	1					
ANR	1787964	Identifier	Lexer :: PeekToken		1787624	2					
ANR	1787965	ParameterList	TokenValue * lvalp		1787624	3					
ANR	1787966	Parameter	TokenValue * lvalp	165:11:3381:3397	1787624	0	True				
ANR	1787967	ParameterType	TokenValue *		1787624	0					
ANR	1787968	Identifier	lvalp		1787624	1					
ANR	1787969	CFGEntryNode	ENTRY		1787624		True				
ANR	1787970	CFGExitNode	EXIT		1787624		True				
ANR	1787971	Symbol	tokenConsumed		1787624						
ANR	1787972	Symbol	isalpha		1787624						
ANR	1787973	Symbol	oldCh		1787624						
ANR	1787974	Symbol	yylval		1787624						
ANR	1787975	Symbol	debug		1787624						
ANR	1787976	Symbol	ch		1787624						
ANR	1787977	Symbol	false		1787624						
ANR	1787978	Symbol	isspace		1787624						
ANR	1787979	Symbol	strLexToken		1787624						
ANR	1787980	Symbol	lvalp		1787624						
ANR	1787981	Symbol	LEX_DIVIDE		1787624						
ANR	1787982	Symbol	LEX_END_OF_INPUT		1787624						
ANR	1787983	Symbol	tokenType		1787624						
ANR	1787984	Symbol	EOF		1787624						
ANR	1787985	Symbol	isdigit		1787624						
ANR	1787986	Function	Lexer :: tokenizeNumber	271:0:5753:10022							
ANR	1787987	FunctionDef	Lexer :: tokenizeNumber ()		1787986	0					
ANR	1787988	CompoundStatement		273:0:5787:10022	1787986	0					
ANR	1787989	ClassDefStatement	"enum { NONE , INTEGER , REAL }"	274:1:5790:5817	1787986	0	True				
ANR	1787990	ExpressionStatement		274:29:5818:5818	1787986	1	True				
ANR	1787991	IdentifierDeclStatement	int numberType = NONE ;	275:1:5821:5843	1787986	2	True				
ANR	1787992	IdentifierDecl	numberType = NONE		1787986	0					
ANR	1787993	IdentifierDeclType	int		1787986	0					
ANR	1787994	Identifier	numberType		1787986	1					
ANR	1787995	AssignmentExpression	numberType = NONE		1787986	2		=			
ANR	1787996	Identifier	NONE		1787986	0					
ANR	1787997	Identifier	NONE		1787986	1					
ANR	1787998	IdentifierDeclStatement	Value :: NumberFactor f ;	276:1:5846:5867	1787986	3	True				
ANR	1787999	IdentifierDecl	f		1787986	0					
ANR	1788000	IdentifierDeclType	Value :: NumberFactor		1787986	0					
ANR	1788001	Identifier	f		1787986	1					
ANR	1788002	IdentifierDeclStatement	int integer = 0 ;	277:1:5870:5884	1787986	4	True				
ANR	1788003	IdentifierDecl	integer = 0		1787986	0					
ANR	1788004	IdentifierDeclType	int		1787986	0					
ANR	1788005	Identifier	integer		1787986	1					
ANR	1788006	AssignmentExpression	integer = 0		1787986	2		=			
ANR	1788007	Identifier	integer		1787986	0					
ANR	1788008	PrimaryExpression	0		1787986	1					
ANR	1788009	IdentifierDeclStatement	double real = 0 ;	278:1:5887:5900	1787986	5	True				
ANR	1788010	IdentifierDecl	real = 0		1787986	0					
ANR	1788011	IdentifierDeclType	double		1787986	0					
ANR	1788012	Identifier	real		1787986	1					
ANR	1788013	AssignmentExpression	real = 0		1787986	2		=			
ANR	1788014	Identifier	real		1787986	0					
ANR	1788015	PrimaryExpression	0		1787986	1					
ANR	1788016	IdentifierDeclStatement	int och ;	279:1:5903:5911	1787986	6	True				
ANR	1788017	IdentifierDecl	och		1787986	0					
ANR	1788018	IdentifierDeclType	int		1787986	0					
ANR	1788019	Identifier	och		1787986	1					
ANR	1788020	ExpressionStatement	och = ch	281:1:5915:5923	1787986	7	True				
ANR	1788021	AssignmentExpression	och = ch		1787986	0		=			
ANR	1788022	Identifier	och		1787986	0					
ANR	1788023	Identifier	ch		1787986	1					
ANR	1788024	ExpressionStatement	mark ( )	282:1:5926:5933	1787986	8	True				
ANR	1788025	CallExpression	mark ( )		1787986	0					
ANR	1788026	Callee	mark		1787986	0					
ANR	1788027	Identifier	mark		1787986	0					
ANR	1788028	ArgumentList			1787986	1					
ANR	1788029	ExpressionStatement	wind ( )	283:1:5936:5943	1787986	9	True				
ANR	1788030	CallExpression	wind ( )		1787986	0					
ANR	1788031	Callee	wind		1787986	0					
ANR	1788032	Identifier	wind		1787986	0					
ANR	1788033	ArgumentList			1787986	1					
ANR	1788034	IfStatement	if ( och == '-' )		1787986	10					
ANR	1788035	Condition	och == '-'	285:6:5952:5961	1787986	0	True				
ANR	1788036	EqualityExpression	och == '-'		1787986	0		==			
ANR	1788037	Identifier	och		1787986	0					
ANR	1788038	PrimaryExpression	'-'		1787986	1					
ANR	1788039	CompoundStatement		13:19:177:177	1787986	1					
ANR	1788040	IfStatement	if ( isdigit ( ch ) )		1787986	0					
ANR	1788041	Condition	isdigit ( ch )	288:7:6092:6104	1787986	0	True				
ANR	1788042	CallExpression	isdigit ( ch )		1787986	0					
ANR	1788043	Callee	isdigit		1787986	0					
ANR	1788044	Identifier	isdigit		1787986	0					
ANR	1788045	ArgumentList	ch		1787986	1					
ANR	1788046	Argument	ch		1787986	0					
ANR	1788047	Identifier	ch		1787986	0					
ANR	1788048	CompoundStatement		16:23:320:320	1787986	1					
ANR	1788049	ExpressionStatement	och = ch	290:3:6166:6174	1787986	0	True				
ANR	1788050	AssignmentExpression	och = ch		1787986	0		=			
ANR	1788051	Identifier	och		1787986	0					
ANR	1788052	Identifier	ch		1787986	1					
ANR	1788053	ExpressionStatement	wind ( )	291:3:6179:6185	1787986	1	True				
ANR	1788054	CallExpression	wind ( )		1787986	0					
ANR	1788055	Callee	wind		1787986	0					
ANR	1788056	Identifier	wind		1787986	0					
ANR	1788057	ArgumentList			1787986	1					
ANR	1788058	ElseStatement	else		1787986	0					
ANR	1788059	IfStatement	if ( ch == '.' )		1787986	0					
ANR	1788060	Condition	ch == '.'	292:14:6201:6209	1787986	0	True				
ANR	1788061	EqualityExpression	ch == '.'		1787986	0		==			
ANR	1788062	Identifier	ch		1787986	0					
ANR	1788063	PrimaryExpression	'.'		1787986	1					
ANR	1788064	CompoundStatement		23:3:545:581	1787986	1					
ANR	1788065	IdentifierDeclStatement	int ch2 = lexSource -> ReadCharacter ( ) ;	295:3:6333:6369	1787986	0	True				
ANR	1788066	IdentifierDecl	ch2 = lexSource -> ReadCharacter ( )		1787986	0					
ANR	1788067	IdentifierDeclType	int		1787986	0					
ANR	1788068	Identifier	ch2		1787986	1					
ANR	1788069	AssignmentExpression	ch2 = lexSource -> ReadCharacter ( )		1787986	2		=			
ANR	1788070	Identifier	ch2		1787986	0					
ANR	1788071	CallExpression	lexSource -> ReadCharacter ( )		1787986	1					
ANR	1788072	Callee	lexSource -> ReadCharacter		1787986	0					
ANR	1788073	PtrMemberAccess	lexSource -> ReadCharacter		1787986	0					
ANR	1788074	Identifier	lexSource		1787986	0					
ANR	1788075	Identifier	ReadCharacter		1787986	1					
ANR	1788076	ArgumentList			1787986	1					
ANR	1788077	IfStatement	if ( ch2 >= 0 )		1787986	1					
ANR	1788078	Condition	ch2 >= 0	296:8:6379:6386	1787986	0	True				
ANR	1788079	RelationalExpression	ch2 >= 0		1787986	0		>=			
ANR	1788080	Identifier	ch2		1787986	0					
ANR	1788081	PrimaryExpression	0		1787986	1					
ANR	1788082	CompoundStatement		24:19:602:602	1787986	1					
ANR	1788083	ExpressionStatement	lexSource -> UnreadCharacter ( )	297:4:6396:6424	1787986	0	True				
ANR	1788084	CallExpression	lexSource -> UnreadCharacter ( )		1787986	0					
ANR	1788085	Callee	lexSource -> UnreadCharacter		1787986	0					
ANR	1788086	PtrMemberAccess	lexSource -> UnreadCharacter		1787986	0					
ANR	1788087	Identifier	lexSource		1787986	0					
ANR	1788088	Identifier	UnreadCharacter		1787986	1					
ANR	1788089	ArgumentList			1787986	1					
ANR	1788090	IfStatement	if ( ! isdigit ( ch2 ) )		1787986	2					
ANR	1788091	Condition	! isdigit ( ch2 )	299:8:6439:6453	1787986	0	True				
ANR	1788092	UnaryOperationExpression	! isdigit ( ch2 )		1787986	0					
ANR	1788093	UnaryOperator	!		1787986	0					
ANR	1788094	CallExpression	isdigit ( ch2 )		1787986	1					
ANR	1788095	Callee	isdigit		1787986	0					
ANR	1788096	Identifier	isdigit		1787986	0					
ANR	1788097	ArgumentList	ch2		1787986	1					
ANR	1788098	Argument	ch2		1787986	0					
ANR	1788099	Identifier	ch2		1787986	0					
ANR	1788100	CompoundStatement		27:26:669:669	1787986	1					
ANR	1788101	ExpressionStatement	cut ( )	301:4:6516:6521	1787986	0	True				
ANR	1788102	CallExpression	cut ( )		1787986	0					
ANR	1788103	Callee	cut		1787986	0					
ANR	1788104	Identifier	cut		1787986	0					
ANR	1788105	ArgumentList			1787986	1					
ANR	1788106	ExpressionStatement	tokenType = LEX_MINUS	302:4:6527:6548	1787986	1	True				
ANR	1788107	AssignmentExpression	tokenType = LEX_MINUS		1787986	0		=			
ANR	1788108	Identifier	tokenType		1787986	0					
ANR	1788109	Identifier	LEX_MINUS		1787986	1					
ANR	1788110	ReturnStatement	return tokenType ;	303:4:6554:6570	1787986	2	True				
ANR	1788111	Identifier	tokenType		1787986	0					
ANR	1788112	ElseStatement	else		1787986	0					
ANR	1788113	CompoundStatement		34:9:849:849	1787986	0					
ANR	1788114	ExpressionStatement	cut ( )	308:3:6689:6694	1787986	0	True				
ANR	1788115	CallExpression	cut ( )		1787986	0					
ANR	1788116	Callee	cut		1787986	0					
ANR	1788117	Identifier	cut		1787986	0					
ANR	1788118	ArgumentList			1787986	1					
ANR	1788119	ExpressionStatement	tokenType = LEX_MINUS	309:3:6699:6720	1787986	1	True				
ANR	1788120	AssignmentExpression	tokenType = LEX_MINUS		1787986	0		=			
ANR	1788121	Identifier	tokenType		1787986	0					
ANR	1788122	Identifier	LEX_MINUS		1787986	1					
ANR	1788123	ReturnStatement	return tokenType ;	310:3:6725:6741	1787986	2	True				
ANR	1788124	Identifier	tokenType		1787986	0					
ANR	1788125	IfStatement	if ( och == '0' )		1787986	11					
ANR	1788126	Condition	och == '0'	314:5:6756:6765	1787986	0	True				
ANR	1788127	EqualityExpression	och == '0'		1787986	0		==			
ANR	1788128	Identifier	och		1787986	0					
ANR	1788129	PrimaryExpression	'0'		1787986	1					
ANR	1788130	CompoundStatement		42:18:981:981	1787986	1					
ANR	1788131	IfStatement	if ( tolower ( ch ) == 'x' )		1787986	0					
ANR	1788132	Condition	tolower ( ch ) == 'x'	316:6:6811:6830	1787986	0	True				
ANR	1788133	EqualityExpression	tolower ( ch ) == 'x'		1787986	0		==			
ANR	1788134	CallExpression	tolower ( ch )		1787986	0					
ANR	1788135	Callee	tolower		1787986	0					
ANR	1788136	Identifier	tolower		1787986	0					
ANR	1788137	ArgumentList	ch		1787986	1					
ANR	1788138	Argument	ch		1787986	0					
ANR	1788139	Identifier	ch		1787986	0					
ANR	1788140	PrimaryExpression	'x'		1787986	1					
ANR	1788141	CompoundStatement		44:29:1046:1046	1787986	1					
ANR	1788142	ExpressionStatement	numberType = INTEGER	318:3:6883:6903	1787986	0	True				
ANR	1788143	AssignmentExpression	numberType = INTEGER		1787986	0		=			
ANR	1788144	Identifier	numberType		1787986	0					
ANR	1788145	Identifier	INTEGER		1787986	1					
ANR	1788146	ExpressionStatement	wind ( )	319:3:6908:6915	1787986	1	True				
ANR	1788147	CallExpression	wind ( )		1787986	0					
ANR	1788148	Callee	wind		1787986	0					
ANR	1788149	Identifier	wind		1787986	0					
ANR	1788150	ArgumentList			1787986	1					
ANR	1788151	IfStatement	if ( ! isxdigit ( ch ) )		1787986	2					
ANR	1788152	Condition	! isxdigit ( ch )	320:7:6924:6938	1787986	0	True				
ANR	1788153	UnaryOperationExpression	! isxdigit ( ch )		1787986	0					
ANR	1788154	UnaryOperator	!		1787986	0					
ANR	1788155	CallExpression	isxdigit ( ch )		1787986	1					
ANR	1788156	Callee	isxdigit		1787986	0					
ANR	1788157	Identifier	isxdigit		1787986	0					
ANR	1788158	ArgumentList	ch		1787986	1					
ANR	1788159	Argument	ch		1787986	0					
ANR	1788160	Identifier	ch		1787986	0					
ANR	1788161	CompoundStatement		48:25:1154:1154	1787986	1					
ANR	1788162	ExpressionStatement	cut ( )	321:4:6948:6954	1787986	0	True				
ANR	1788163	CallExpression	cut ( )		1787986	0					
ANR	1788164	Callee	cut		1787986	0					
ANR	1788165	Identifier	cut		1787986	0					
ANR	1788166	ArgumentList			1787986	1					
ANR	1788167	ExpressionStatement	tokenType = LEX_TOKEN_ERROR	322:4:6960:6987	1787986	1	True				
ANR	1788168	AssignmentExpression	tokenType = LEX_TOKEN_ERROR		1787986	0		=			
ANR	1788169	Identifier	tokenType		1787986	0					
ANR	1788170	Identifier	LEX_TOKEN_ERROR		1787986	1					
ANR	1788171	ReturnStatement	return ( tokenType ) ;	323:4:6993:7013	1787986	2	True				
ANR	1788172	Identifier	tokenType		1787986	0					
ANR	1788173	WhileStatement	while ( isxdigit ( ch ) )		1787986	3					
ANR	1788174	Condition	isxdigit ( ch )	325:10:7030:7043	1787986	0	True				
ANR	1788175	CallExpression	isxdigit ( ch )		1787986	0					
ANR	1788176	Callee	isxdigit		1787986	0					
ANR	1788177	Identifier	isxdigit		1787986	0					
ANR	1788178	ArgumentList	ch		1787986	1					
ANR	1788179	Argument	ch		1787986	0					
ANR	1788180	Identifier	ch		1787986	0					
ANR	1788181	CompoundStatement		53:27:1259:1259	1787986	1					
ANR	1788182	ExpressionStatement	wind ( )	326:4:7053:7060	1787986	0	True				
ANR	1788183	CallExpression	wind ( )		1787986	0					
ANR	1788184	Callee	wind		1787986	0					
ANR	1788185	Identifier	wind		1787986	0					
ANR	1788186	ArgumentList			1787986	1					
ANR	1788187	ElseStatement	else		1787986	0					
ANR	1788188	CompoundStatement		56:9:1288:1288	1787986	0					
ANR	1788189	ExpressionStatement	numberType = INTEGER	330:3:7105:7125	1787986	0	True				
ANR	1788190	AssignmentExpression	numberType = INTEGER		1787986	0		=			
ANR	1788191	Identifier	numberType		1787986	0					
ANR	1788192	Identifier	INTEGER		1787986	1					
ANR	1788193	WhileStatement	while ( isdigit ( ch ) )		1787986	1					
ANR	1788194	Condition	isdigit ( ch )	331:10:7137:7149	1787986	0	True				
ANR	1788195	CallExpression	isdigit ( ch )		1787986	0					
ANR	1788196	Callee	isdigit		1787986	0					
ANR	1788197	Identifier	isdigit		1787986	0					
ANR	1788198	ArgumentList	ch		1787986	1					
ANR	1788199	Argument	ch		1787986	0					
ANR	1788200	Identifier	ch		1787986	0					
ANR	1788201	CompoundStatement		59:26:1365:1365	1787986	1					
ANR	1788202	ExpressionStatement	wind ( )	332:4:7159:7166	1787986	0	True				
ANR	1788203	CallExpression	wind ( )		1787986	0					
ANR	1788204	Callee	wind		1787986	0					
ANR	1788205	Identifier	wind		1787986	0					
ANR	1788206	ArgumentList			1787986	1					
ANR	1788207	IfStatement	if ( ! isodigit ( ch ) )		1787986	1					
ANR	1788208	Condition	! isodigit ( ch )	333:8:7176:7190	1787986	0	True				
ANR	1788209	UnaryOperationExpression	! isodigit ( ch )		1787986	0					
ANR	1788210	UnaryOperator	!		1787986	0					
ANR	1788211	CallExpression	isodigit ( ch )		1787986	1					
ANR	1788212	Callee	isodigit		1787986	0					
ANR	1788213	Identifier	isodigit		1787986	0					
ANR	1788214	ArgumentList	ch		1787986	1					
ANR	1788215	Argument	ch		1787986	0					
ANR	1788216	Identifier	ch		1787986	0					
ANR	1788217	CompoundStatement		61:26:1406:1406	1787986	1					
ANR	1788218	ExpressionStatement	numberType = REAL	335:5:7229:7246	1787986	0	True				
ANR	1788219	AssignmentExpression	numberType = REAL		1787986	0		=			
ANR	1788220	Identifier	numberType		1787986	0					
ANR	1788221	Identifier	REAL		1787986	1					
ANR	1788222	IfStatement	if ( ch == '.' || tolower ( ch ) == 'e' )		1787986	2					
ANR	1788223	Condition	ch == '.' || tolower ( ch ) == 'e'	338:7:7266:7298	1787986	0	True				
ANR	1788224	OrExpression	ch == '.' || tolower ( ch ) == 'e'		1787986	0		||			
ANR	1788225	EqualityExpression	ch == '.'		1787986	0		==			
ANR	1788226	Identifier	ch		1787986	0					
ANR	1788227	PrimaryExpression	'.'		1787986	1					
ANR	1788228	EqualityExpression	tolower ( ch ) == 'e'		1787986	1		==			
ANR	1788229	CallExpression	tolower ( ch )		1787986	0					
ANR	1788230	Callee	tolower		1787986	0					
ANR	1788231	Identifier	tolower		1787986	0					
ANR	1788232	ArgumentList	ch		1787986	1					
ANR	1788233	Argument	ch		1787986	0					
ANR	1788234	Identifier	ch		1787986	0					
ANR	1788235	PrimaryExpression	'e'		1787986	1					
ANR	1788236	CompoundStatement		66:43:1514:1514	1787986	1					
ANR	1788237	ExpressionStatement	numberType = REAL	339:4:7308:7325	1787986	0	True				
ANR	1788238	AssignmentExpression	numberType = REAL		1787986	0		=			
ANR	1788239	Identifier	numberType		1787986	0					
ANR	1788240	Identifier	REAL		1787986	1					
ANR	1788241	ElseStatement	else		1787986	0					
ANR	1788242	IfStatement	if ( numberType == REAL )		1787986	0					
ANR	1788243	Condition	numberType == REAL	340:14:7341:7358	1787986	0	True				
ANR	1788244	EqualityExpression	numberType == REAL		1787986	0		==			
ANR	1788245	Identifier	numberType		1787986	0					
ANR	1788246	Identifier	REAL		1787986	1					
ANR	1788247	CompoundStatement		68:35:1574:1574	1787986	1					
ANR	1788248	ExpressionStatement	cut ( )	343:4:7458:7464	1787986	0	True				
ANR	1788249	CallExpression	cut ( )		1787986	0					
ANR	1788250	Callee	cut		1787986	0					
ANR	1788251	Identifier	cut		1787986	0					
ANR	1788252	ArgumentList			1787986	1					
ANR	1788253	ExpressionStatement	tokenType = LEX_TOKEN_ERROR	344:4:7470:7497	1787986	1	True				
ANR	1788254	AssignmentExpression	tokenType = LEX_TOKEN_ERROR		1787986	0		=			
ANR	1788255	Identifier	tokenType		1787986	0					
ANR	1788256	Identifier	LEX_TOKEN_ERROR		1787986	1					
ANR	1788257	ReturnStatement	return ( tokenType ) ;	345:4:7503:7522	1787986	2	True				
ANR	1788258	Identifier	tokenType		1787986	0					
ANR	1788259	ElseStatement	else		1787986	0					
ANR	1788260	IfStatement	if ( isdigit ( och ) )		1787986	0					
ANR	1788261	Condition	isdigit ( och )	348:12:7545:7558	1787986	0	True				
ANR	1788262	CallExpression	isdigit ( och )		1787986	0					
ANR	1788263	Callee	isdigit		1787986	0					
ANR	1788264	Identifier	isdigit		1787986	0					
ANR	1788265	ArgumentList	och		1787986	1					
ANR	1788266	Argument	och		1787986	0					
ANR	1788267	Identifier	och		1787986	0					
ANR	1788268	CompoundStatement		76:29:1774:1774	1787986	1					
ANR	1788269	WhileStatement	while ( isdigit ( ch ) )		1787986	0					
ANR	1788270	Condition	isdigit ( ch )	350:9:7606:7618	1787986	0	True				
ANR	1788271	CallExpression	isdigit ( ch )		1787986	0					
ANR	1788272	Callee	isdigit		1787986	0					
ANR	1788273	Identifier	isdigit		1787986	0					
ANR	1788274	ArgumentList	ch		1787986	1					
ANR	1788275	Argument	ch		1787986	0					
ANR	1788276	Identifier	ch		1787986	0					
ANR	1788277	CompoundStatement		78:25:1834:1834	1787986	1					
ANR	1788278	ExpressionStatement	wind ( )	351:3:7627:7634	1787986	0	True				
ANR	1788279	CallExpression	wind ( )		1787986	0					
ANR	1788280	Callee	wind		1787986	0					
ANR	1788281	Identifier	wind		1787986	0					
ANR	1788282	ArgumentList			1787986	1					
ANR	1788283	ExpressionStatement	numberType = ( ch == '.' || tolower ( ch ) == 'e' ) ? REAL : INTEGER	353:2:7642:7705	1787986	1	True				
ANR	1788284	AssignmentExpression	numberType = ( ch == '.' || tolower ( ch ) == 'e' ) ? REAL : INTEGER		1787986	0		=			
ANR	1788285	Identifier	numberType		1787986	0					
ANR	1788286	ConditionalExpression	( ch == '.' || tolower ( ch ) == 'e' ) ? REAL : INTEGER		1787986	1					
ANR	1788287	Condition	ch == '.' || tolower ( ch ) == 'e'		1787986	0					
ANR	1788288	OrExpression	ch == '.' || tolower ( ch ) == 'e'		1787986	0		||			
ANR	1788289	EqualityExpression	ch == '.'		1787986	0		==			
ANR	1788290	Identifier	ch		1787986	0					
ANR	1788291	PrimaryExpression	'.'		1787986	1					
ANR	1788292	EqualityExpression	tolower ( ch ) == 'e'		1787986	1		==			
ANR	1788293	CallExpression	tolower ( ch )		1787986	0					
ANR	1788294	Callee	tolower		1787986	0					
ANR	1788295	Identifier	tolower		1787986	0					
ANR	1788296	ArgumentList	ch		1787986	1					
ANR	1788297	Argument	ch		1787986	0					
ANR	1788298	Identifier	ch		1787986	0					
ANR	1788299	PrimaryExpression	'e'		1787986	1					
ANR	1788300	Identifier	REAL		1787986	1					
ANR	1788301	Identifier	INTEGER		1787986	2					
ANR	1788302	IfStatement	if ( och == '.' || ch == '.' )		1787986	12					
ANR	1788303	Condition	och == '.' || ch == '.'	356:5:7717:7739	1787986	0	True				
ANR	1788304	OrExpression	och == '.' || ch == '.'		1787986	0		||			
ANR	1788305	EqualityExpression	och == '.'		1787986	0		==			
ANR	1788306	Identifier	och		1787986	0					
ANR	1788307	PrimaryExpression	'.'		1787986	1					
ANR	1788308	EqualityExpression	ch == '.'		1787986	1		==			
ANR	1788309	Identifier	ch		1787986	0					
ANR	1788310	PrimaryExpression	'.'		1787986	1					
ANR	1788311	CompoundStatement		84:31:1955:1955	1787986	1					
ANR	1788312	IfStatement	if ( ch == '.' )		1787986	0					
ANR	1788313	Condition	ch == '.'	358:6:7800:7808	1787986	0	True				
ANR	1788314	EqualityExpression	ch == '.'		1787986	0		==			
ANR	1788315	Identifier	ch		1787986	0					
ANR	1788316	PrimaryExpression	'.'		1787986	1					
ANR	1788317	ExpressionStatement	wind ( )	358:18:7812:7819	1787986	1	True				
ANR	1788318	CallExpression	wind ( )		1787986	0					
ANR	1788319	Callee	wind		1787986	0					
ANR	1788320	Identifier	wind		1787986	0					
ANR	1788321	ArgumentList			1787986	1					
ANR	1788322	IfStatement	if ( isdigit ( ch ) )		1787986	1					
ANR	1788323	Condition	isdigit ( ch )	359:6:7827:7839	1787986	0	True				
ANR	1788324	CallExpression	isdigit ( ch )		1787986	0					
ANR	1788325	Callee	isdigit		1787986	0					
ANR	1788326	Identifier	isdigit		1787986	0					
ANR	1788327	ArgumentList	ch		1787986	1					
ANR	1788328	Argument	ch		1787986	0					
ANR	1788329	Identifier	ch		1787986	0					
ANR	1788330	CompoundStatement		87:22:2055:2055	1787986	1					
ANR	1788331	ExpressionStatement	numberType = REAL	361:3:7891:7908	1787986	0	True				
ANR	1788332	AssignmentExpression	numberType = REAL		1787986	0		=			
ANR	1788333	Identifier	numberType		1787986	0					
ANR	1788334	Identifier	REAL		1787986	1					
ANR	1788335	WhileStatement	while ( isdigit ( ch ) )		1787986	1					
ANR	1788336	Condition	isdigit ( ch )	362:10:7920:7932	1787986	0	True				
ANR	1788337	CallExpression	isdigit ( ch )		1787986	0					
ANR	1788338	Callee	isdigit		1787986	0					
ANR	1788339	Identifier	isdigit		1787986	0					
ANR	1788340	ArgumentList	ch		1787986	1					
ANR	1788341	Argument	ch		1787986	0					
ANR	1788342	Identifier	ch		1787986	0					
ANR	1788343	CompoundStatement		90:26:2148:2148	1787986	1					
ANR	1788344	ExpressionStatement	wind ( )	363:4:7942:7949	1787986	0	True				
ANR	1788345	CallExpression	wind ( )		1787986	0					
ANR	1788346	Callee	wind		1787986	0					
ANR	1788347	Identifier	wind		1787986	0					
ANR	1788348	ArgumentList			1787986	1					
ANR	1788349	ElseStatement	else		1787986	0					
ANR	1788350	CompoundStatement		93:9:2177:2177	1787986	0					
ANR	1788351	IfStatement	if ( numberType != NONE )		1787986	0					
ANR	1788352	Condition	numberType != NONE	366:7:7974:7991	1787986	0	True				
ANR	1788353	EqualityExpression	numberType != NONE		1787986	0		!=			
ANR	1788354	Identifier	numberType		1787986	0					
ANR	1788355	Identifier	NONE		1787986	1					
ANR	1788356	CompoundStatement		94:28:2207:2207	1787986	1					
ANR	1788357	ExpressionStatement	cut ( )	368:4:8064:8070	1787986	0	True				
ANR	1788358	CallExpression	cut ( )		1787986	0					
ANR	1788359	Callee	cut		1787986	0					
ANR	1788360	Identifier	cut		1787986	0					
ANR	1788361	ArgumentList			1787986	1					
ANR	1788362	ExpressionStatement	tokenType = LEX_TOKEN_ERROR	369:4:8076:8103	1787986	1	True				
ANR	1788363	AssignmentExpression	tokenType = LEX_TOKEN_ERROR		1787986	0		=			
ANR	1788364	Identifier	tokenType		1787986	0					
ANR	1788365	Identifier	LEX_TOKEN_ERROR		1787986	1					
ANR	1788366	ReturnStatement	return ( tokenType ) ;	370:4:8109:8128	1787986	2	True				
ANR	1788367	Identifier	tokenType		1787986	0					
ANR	1788368	ExpressionStatement	cut ( )	373:3:8163:8169	1787986	1	True				
ANR	1788369	CallExpression	cut ( )		1787986	0					
ANR	1788370	Callee	cut		1787986	0					
ANR	1788371	Identifier	cut		1787986	0					
ANR	1788372	ArgumentList			1787986	1					
ANR	1788373	ExpressionStatement	tokenType = LEX_SELECTION	374:3:8174:8199	1787986	2	True				
ANR	1788374	AssignmentExpression	tokenType = LEX_SELECTION		1787986	0		=			
ANR	1788375	Identifier	tokenType		1787986	0					
ANR	1788376	Identifier	LEX_SELECTION		1787986	1					
ANR	1788377	ReturnStatement	return ( tokenType ) ;	375:3:8204:8223	1787986	3	True				
ANR	1788378	Identifier	tokenType		1787986	0					
ANR	1788379	IfStatement	if ( numberType == REAL && tolower ( ch ) == 'e' )		1787986	13					
ANR	1788380	Condition	numberType == REAL && tolower ( ch ) == 'e'	381:5:8336:8377	1787986	0	True				
ANR	1788381	AndExpression	numberType == REAL && tolower ( ch ) == 'e'		1787986	0		&&			
ANR	1788382	EqualityExpression	numberType == REAL		1787986	0		==			
ANR	1788383	Identifier	numberType		1787986	0					
ANR	1788384	Identifier	REAL		1787986	1					
ANR	1788385	EqualityExpression	tolower ( ch ) == 'e'		1787986	1		==			
ANR	1788386	CallExpression	tolower ( ch )		1787986	0					
ANR	1788387	Callee	tolower		1787986	0					
ANR	1788388	Identifier	tolower		1787986	0					
ANR	1788389	ArgumentList	ch		1787986	1					
ANR	1788390	Argument	ch		1787986	0					
ANR	1788391	Identifier	ch		1787986	0					
ANR	1788392	PrimaryExpression	'e'		1787986	1					
ANR	1788393	CompoundStatement		109:50:2593:2593	1787986	1					
ANR	1788394	ExpressionStatement	wind ( )	382:2:8385:8392	1787986	0	True				
ANR	1788395	CallExpression	wind ( )		1787986	0					
ANR	1788396	Callee	wind		1787986	0					
ANR	1788397	Identifier	wind		1787986	0					
ANR	1788398	ArgumentList			1787986	1					
ANR	1788399	IfStatement	if ( ch == '+' || ch == '-' )		1787986	1					
ANR	1788400	Condition	ch == '+' || ch == '-'	383:6:8400:8421	1787986	0	True				
ANR	1788401	OrExpression	ch == '+' || ch == '-'		1787986	0		||			
ANR	1788402	EqualityExpression	ch == '+'		1787986	0		==			
ANR	1788403	Identifier	ch		1787986	0					
ANR	1788404	PrimaryExpression	'+'		1787986	1					
ANR	1788405	EqualityExpression	ch == '-'		1787986	1		==			
ANR	1788406	Identifier	ch		1787986	0					
ANR	1788407	PrimaryExpression	'-'		1787986	1					
ANR	1788408	ExpressionStatement	wind ( )	383:31:8425:8432	1787986	1	True				
ANR	1788409	CallExpression	wind ( )		1787986	0					
ANR	1788410	Callee	wind		1787986	0					
ANR	1788411	Identifier	wind		1787986	0					
ANR	1788412	ArgumentList			1787986	1					
ANR	1788413	IfStatement	if ( ! isdigit ( ch ) )		1787986	2					
ANR	1788414	Condition	! isdigit ( ch )	384:6:8440:8453	1787986	0	True				
ANR	1788415	UnaryOperationExpression	! isdigit ( ch )		1787986	0					
ANR	1788416	UnaryOperator	!		1787986	0					
ANR	1788417	CallExpression	isdigit ( ch )		1787986	1					
ANR	1788418	Callee	isdigit		1787986	0					
ANR	1788419	Identifier	isdigit		1787986	0					
ANR	1788420	ArgumentList	ch		1787986	1					
ANR	1788421	Argument	ch		1787986	0					
ANR	1788422	Identifier	ch		1787986	0					
ANR	1788423	CompoundStatement		112:23:2669:2669	1787986	1					
ANR	1788424	ExpressionStatement	cut ( )	385:3:8462:8468	1787986	0	True				
ANR	1788425	CallExpression	cut ( )		1787986	0					
ANR	1788426	Callee	cut		1787986	0					
ANR	1788427	Identifier	cut		1787986	0					
ANR	1788428	ArgumentList			1787986	1					
ANR	1788429	ExpressionStatement	tokenType = LEX_TOKEN_ERROR	386:3:8473:8500	1787986	1	True				
ANR	1788430	AssignmentExpression	tokenType = LEX_TOKEN_ERROR		1787986	0		=			
ANR	1788431	Identifier	tokenType		1787986	0					
ANR	1788432	Identifier	LEX_TOKEN_ERROR		1787986	1					
ANR	1788433	ReturnStatement	return ( tokenType ) ;	387:3:8505:8524	1787986	2	True				
ANR	1788434	Identifier	tokenType		1787986	0					
ANR	1788435	WhileStatement	while ( isdigit ( ch ) )		1787986	3					
ANR	1788436	Condition	isdigit ( ch )	389:9:8539:8551	1787986	0	True				
ANR	1788437	CallExpression	isdigit ( ch )		1787986	0					
ANR	1788438	Callee	isdigit		1787986	0					
ANR	1788439	Identifier	isdigit		1787986	0					
ANR	1788440	ArgumentList	ch		1787986	1					
ANR	1788441	Argument	ch		1787986	0					
ANR	1788442	Identifier	ch		1787986	0					
ANR	1788443	CompoundStatement		117:25:2767:2767	1787986	1					
ANR	1788444	ExpressionStatement	wind ( )	390:3:8560:8567	1787986	0	True				
ANR	1788445	CallExpression	wind ( )		1787986	0					
ANR	1788446	Callee	wind		1787986	0					
ANR	1788447	Identifier	wind		1787986	0					
ANR	1788448	ArgumentList			1787986	1					
ANR	1788449	IfStatement	if ( numberType == INTEGER )		1787986	14					
ANR	1788450	Condition	numberType == INTEGER	394:5:8582:8602	1787986	0	True				
ANR	1788451	EqualityExpression	numberType == INTEGER		1787986	0		==			
ANR	1788452	Identifier	numberType		1787986	0					
ANR	1788453	Identifier	INTEGER		1787986	1					
ANR	1788454	CompoundStatement		124:2:2832:2838	1787986	1					
ANR	1788455	ExpressionStatement	cut ( )	395:2:8610:8616	1787986	0	True				
ANR	1788456	CallExpression	cut ( )		1787986	0					
ANR	1788457	Callee	cut		1787986	0					
ANR	1788458	Identifier	cut		1787986	0					
ANR	1788459	ArgumentList			1787986	1					
ANR	1788460	IdentifierDeclStatement	long l ;	396:2:8620:8626	1787986	1	True				
ANR	1788461	IdentifierDecl	l		1787986	0					
ANR	1788462	IdentifierDeclType	long		1787986	0					
ANR	1788463	Identifier	l		1787986	1					
ANR	1788464	IfStatement	if ( _useOldClassAdSemantics )		1787986	2					
ANR	1788465	Condition	_useOldClassAdSemantics	397:7:8635:8657	1787986	0	True				
ANR	1788466	Identifier	_useOldClassAdSemantics		1787986	0					
ANR	1788467	CompoundStatement		125:33:2873:2873	1787986	1					
ANR	1788468	ExpressionStatement	"l = strtol ( lexBuffer . c_str ( ) , NULL , 10 )"	400:3:8756:8797	1787986	0	True				
ANR	1788469	AssignmentExpression	"l = strtol ( lexBuffer . c_str ( ) , NULL , 10 )"		1787986	0		=			
ANR	1788470	Identifier	l		1787986	0					
ANR	1788471	CallExpression	"strtol ( lexBuffer . c_str ( ) , NULL , 10 )"		1787986	1					
ANR	1788472	Callee	strtol		1787986	0					
ANR	1788473	Identifier	strtol		1787986	0					
ANR	1788474	ArgumentList	lexBuffer . c_str ( )		1787986	1					
ANR	1788475	Argument	lexBuffer . c_str ( )		1787986	0					
ANR	1788476	CallExpression	lexBuffer . c_str ( )		1787986	0					
ANR	1788477	Callee	lexBuffer . c_str		1787986	0					
ANR	1788478	MemberAccess	lexBuffer . c_str		1787986	0					
ANR	1788479	Identifier	lexBuffer		1787986	0					
ANR	1788480	Identifier	c_str		1787986	1					
ANR	1788481	ArgumentList			1787986	1					
ANR	1788482	Argument	NULL		1787986	1					
ANR	1788483	Identifier	NULL		1787986	0					
ANR	1788484	Argument	10		1787986	2					
ANR	1788485	PrimaryExpression	10		1787986	0					
ANR	1788486	ElseStatement	else		1787986	0					
ANR	1788487	CompoundStatement		129:9:3020:3020	1787986	0					
ANR	1788488	ExpressionStatement	"l = strtol ( lexBuffer . c_str ( ) , NULL , 0 )"	402:3:8813:8853	1787986	0	True				
ANR	1788489	AssignmentExpression	"l = strtol ( lexBuffer . c_str ( ) , NULL , 0 )"		1787986	0		=			
ANR	1788490	Identifier	l		1787986	0					
ANR	1788491	CallExpression	"strtol ( lexBuffer . c_str ( ) , NULL , 0 )"		1787986	1					
ANR	1788492	Callee	strtol		1787986	0					
ANR	1788493	Identifier	strtol		1787986	0					
ANR	1788494	ArgumentList	lexBuffer . c_str ( )		1787986	1					
ANR	1788495	Argument	lexBuffer . c_str ( )		1787986	0					
ANR	1788496	CallExpression	lexBuffer . c_str ( )		1787986	0					
ANR	1788497	Callee	lexBuffer . c_str		1787986	0					
ANR	1788498	MemberAccess	lexBuffer . c_str		1787986	0					
ANR	1788499	Identifier	lexBuffer		1787986	0					
ANR	1788500	Identifier	c_str		1787986	1					
ANR	1788501	ArgumentList			1787986	1					
ANR	1788502	Argument	NULL		1787986	1					
ANR	1788503	Identifier	NULL		1787986	0					
ANR	1788504	Argument	0		1787986	2					
ANR	1788505	PrimaryExpression	0		1787986	0					
ANR	1788506	IfStatement	if ( l > INT_MAX )		1787986	3					
ANR	1788507	Condition	l > INT_MAX	404:7:8866:8876	1787986	0	True				
ANR	1788508	RelationalExpression	l > INT_MAX		1787986	0		>			
ANR	1788509	Identifier	l		1787986	0					
ANR	1788510	Identifier	INT_MAX		1787986	1					
ANR	1788511	CompoundStatement		132:21:3092:3092	1787986	1					
ANR	1788512	ExpressionStatement	l = INT_MAX	405:3:8885:8896	1787986	0	True				
ANR	1788513	AssignmentExpression	l = INT_MAX		1787986	0		=			
ANR	1788514	Identifier	l		1787986	0					
ANR	1788515	Identifier	INT_MAX		1787986	1					
ANR	1788516	ElseStatement	else		1787986	0					
ANR	1788517	IfStatement	if ( l < INT_MIN )		1787986	0					
ANR	1788518	Condition	l < INT_MIN	406:14:8912:8922	1787986	0	True				
ANR	1788519	RelationalExpression	l < INT_MIN		1787986	0		<			
ANR	1788520	Identifier	l		1787986	0					
ANR	1788521	Identifier	INT_MIN		1787986	1					
ANR	1788522	CompoundStatement		134:28:3138:3138	1787986	1					
ANR	1788523	ExpressionStatement	l = INT_MIN	407:3:8931:8942	1787986	0	True				
ANR	1788524	AssignmentExpression	l = INT_MIN		1787986	0		=			
ANR	1788525	Identifier	l		1787986	0					
ANR	1788526	Identifier	INT_MIN		1787986	1					
ANR	1788527	ExpressionStatement	integer = ( int ) l	409:2:8950:8967	1787986	4	True				
ANR	1788528	AssignmentExpression	integer = ( int ) l		1787986	0		=			
ANR	1788529	Identifier	integer		1787986	0					
ANR	1788530	CastExpression	( int ) l		1787986	1					
ANR	1788531	CastTarget	int		1787986	0					
ANR	1788532	Identifier	l		1787986	1					
ANR	1788533	ElseStatement	else		1787986	0					
ANR	1788534	IfStatement	if ( numberType == REAL )		1787986	0					
ANR	1788535	Condition	numberType == REAL	410:12:8981:8998	1787986	0	True				
ANR	1788536	EqualityExpression	numberType == REAL		1787986	0		==			
ANR	1788537	Identifier	numberType		1787986	0					
ANR	1788538	Identifier	REAL		1787986	1					
ANR	1788539	CompoundStatement		138:33:3214:3214	1787986	1					
ANR	1788540	ExpressionStatement	cut ( )	411:2:9006:9012	1787986	0	True				
ANR	1788541	CallExpression	cut ( )		1787986	0					
ANR	1788542	Callee	cut		1787986	0					
ANR	1788543	Identifier	cut		1787986	0					
ANR	1788544	ArgumentList			1787986	1					
ANR	1788545	ExpressionStatement	"real = strtod ( lexBuffer . c_str ( ) , NULL )"	412:2:9016:9056	1787986	1	True				
ANR	1788546	AssignmentExpression	"real = strtod ( lexBuffer . c_str ( ) , NULL )"		1787986	0		=			
ANR	1788547	Identifier	real		1787986	0					
ANR	1788548	CallExpression	"strtod ( lexBuffer . c_str ( ) , NULL )"		1787986	1					
ANR	1788549	Callee	strtod		1787986	0					
ANR	1788550	Identifier	strtod		1787986	0					
ANR	1788551	ArgumentList	lexBuffer . c_str ( )		1787986	1					
ANR	1788552	Argument	lexBuffer . c_str ( )		1787986	0					
ANR	1788553	CallExpression	lexBuffer . c_str ( )		1787986	0					
ANR	1788554	Callee	lexBuffer . c_str		1787986	0					
ANR	1788555	MemberAccess	lexBuffer . c_str		1787986	0					
ANR	1788556	Identifier	lexBuffer		1787986	0					
ANR	1788557	Identifier	c_str		1787986	1					
ANR	1788558	ArgumentList			1787986	1					
ANR	1788559	Argument	NULL		1787986	1					
ANR	1788560	Identifier	NULL		1787986	0					
ANR	1788561	ElseStatement	else		1787986	0					
ANR	1788562	CompoundStatement		141:8:3278:3278	1787986	0					
ANR	1788563	ExpressionStatement	"CLASSAD_EXCEPT ( ""Should not reach here"" )"	420:3:9379:9418	1787986	0	True				
ANR	1788564	CallExpression	"CLASSAD_EXCEPT ( ""Should not reach here"" )"		1787986	0					
ANR	1788565	Callee	CLASSAD_EXCEPT		1787986	0					
ANR	1788566	Identifier	CLASSAD_EXCEPT		1787986	0					
ANR	1788567	ArgumentList	"""Should not reach here"""		1787986	1					
ANR	1788568	Argument	"""Should not reach here"""		1787986	0					
ANR	1788569	PrimaryExpression	"""Should not reach here"""		1787986	0					
ANR	1788570	SwitchStatement	switch ( toupper ( ch ) )		1787986	15					
ANR	1788571	Condition	toupper ( ch )	423:9:9433:9445	1787986	0	True				
ANR	1788572	CallExpression	toupper ( ch )		1787986	0					
ANR	1788573	Callee	toupper		1787986	0					
ANR	1788574	Identifier	toupper		1787986	0					
ANR	1788575	ArgumentList	ch		1787986	1					
ANR	1788576	Argument	ch		1787986	0					
ANR	1788577	Identifier	ch		1787986	0					
ANR	1788578	CompoundStatement		151:25:3661:3661	1787986	1					
ANR	1788579	Label	case 'B' :	424:2:9453:9461	1787986	0	True				
ANR	1788580	ExpressionStatement	f = Value :: B_FACTOR	424:12:9463:9482	1787986	1	True				
ANR	1788581	AssignmentExpression	f = Value :: B_FACTOR		1787986	0		=			
ANR	1788582	Identifier	f		1787986	0					
ANR	1788583	Identifier	Value :: B_FACTOR		1787986	1					
ANR	1788584	ExpressionStatement	wind ( )	424:33:9484:9491	1787986	2	True				
ANR	1788585	CallExpression	wind ( )		1787986	0					
ANR	1788586	Callee	wind		1787986	0					
ANR	1788587	Identifier	wind		1787986	0					
ANR	1788588	ArgumentList			1787986	1					
ANR	1788589	BreakStatement	break ;	424:42:9493:9498	1787986	3	True				
ANR	1788590	Label	case 'K' :	425:2:9503:9511	1787986	4	True				
ANR	1788591	ExpressionStatement	f = Value :: K_FACTOR	425:12:9513:9532	1787986	5	True				
ANR	1788592	AssignmentExpression	f = Value :: K_FACTOR		1787986	0		=			
ANR	1788593	Identifier	f		1787986	0					
ANR	1788594	Identifier	Value :: K_FACTOR		1787986	1					
ANR	1788595	ExpressionStatement	wind ( )	425:33:9534:9541	1787986	6	True				
ANR	1788596	CallExpression	wind ( )		1787986	0					
ANR	1788597	Callee	wind		1787986	0					
ANR	1788598	Identifier	wind		1787986	0					
ANR	1788599	ArgumentList			1787986	1					
ANR	1788600	BreakStatement	break ;	425:42:9543:9548	1787986	7	True				
ANR	1788601	Label	case 'M' :	426:2:9552:9560	1787986	8	True				
ANR	1788602	ExpressionStatement	f = Value :: M_FACTOR	426:12:9562:9581	1787986	9	True				
ANR	1788603	AssignmentExpression	f = Value :: M_FACTOR		1787986	0		=			
ANR	1788604	Identifier	f		1787986	0					
ANR	1788605	Identifier	Value :: M_FACTOR		1787986	1					
ANR	1788606	ExpressionStatement	wind ( )	426:33:9583:9590	1787986	10	True				
ANR	1788607	CallExpression	wind ( )		1787986	0					
ANR	1788608	Callee	wind		1787986	0					
ANR	1788609	Identifier	wind		1787986	0					
ANR	1788610	ArgumentList			1787986	1					
ANR	1788611	BreakStatement	break ;	426:42:9592:9597	1787986	11	True				
ANR	1788612	Label	case 'G' :	427:2:9601:9609	1787986	12	True				
ANR	1788613	ExpressionStatement	f = Value :: G_FACTOR	427:12:9611:9630	1787986	13	True				
ANR	1788614	AssignmentExpression	f = Value :: G_FACTOR		1787986	0		=			
ANR	1788615	Identifier	f		1787986	0					
ANR	1788616	Identifier	Value :: G_FACTOR		1787986	1					
ANR	1788617	ExpressionStatement	wind ( )	427:33:9632:9639	1787986	14	True				
ANR	1788618	CallExpression	wind ( )		1787986	0					
ANR	1788619	Callee	wind		1787986	0					
ANR	1788620	Identifier	wind		1787986	0					
ANR	1788621	ArgumentList			1787986	1					
ANR	1788622	BreakStatement	break ;	427:42:9641:9646	1787986	15	True				
ANR	1788623	Label	case 'T' :	428:2:9650:9658	1787986	16	True				
ANR	1788624	ExpressionStatement	f = Value :: T_FACTOR	428:12:9660:9679	1787986	17	True				
ANR	1788625	AssignmentExpression	f = Value :: T_FACTOR		1787986	0		=			
ANR	1788626	Identifier	f		1787986	0					
ANR	1788627	Identifier	Value :: T_FACTOR		1787986	1					
ANR	1788628	ExpressionStatement	wind ( )	428:33:9681:9688	1787986	18	True				
ANR	1788629	CallExpression	wind ( )		1787986	0					
ANR	1788630	Callee	wind		1787986	0					
ANR	1788631	Identifier	wind		1787986	0					
ANR	1788632	ArgumentList			1787986	1					
ANR	1788633	BreakStatement	break ;	428:42:9690:9695	1787986	19	True				
ANR	1788634	Label	default :	429:2:9699:9706	1787986	20	True				
ANR	1788635	Identifier	default		1787986	0					
ANR	1788636	ExpressionStatement	f = Value :: NO_FACTOR	430:3:9711:9731	1787986	21	True				
ANR	1788637	AssignmentExpression	f = Value :: NO_FACTOR		1787986	0		=			
ANR	1788638	Identifier	f		1787986	0					
ANR	1788639	Identifier	Value :: NO_FACTOR		1787986	1					
ANR	1788640	IfStatement	if ( numberType == INTEGER )		1787986	16					
ANR	1788641	Condition	numberType == INTEGER	433:5:9742:9762	1787986	0	True				
ANR	1788642	EqualityExpression	numberType == INTEGER		1787986	0		==			
ANR	1788643	Identifier	numberType		1787986	0					
ANR	1788644	Identifier	INTEGER		1787986	1					
ANR	1788645	CompoundStatement		161:29:3978:3978	1787986	1					
ANR	1788646	ExpressionStatement	"yylval . SetIntValue ( integer , f )"	434:2:9770:9802	1787986	0	True				
ANR	1788647	CallExpression	"yylval . SetIntValue ( integer , f )"		1787986	0					
ANR	1788648	Callee	yylval . SetIntValue		1787986	0					
ANR	1788649	MemberAccess	yylval . SetIntValue		1787986	0					
ANR	1788650	Identifier	yylval		1787986	0					
ANR	1788651	Identifier	SetIntValue		1787986	1					
ANR	1788652	ArgumentList	integer		1787986	1					
ANR	1788653	Argument	integer		1787986	0					
ANR	1788654	Identifier	integer		1787986	0					
ANR	1788655	Argument	f		1787986	1					
ANR	1788656	Identifier	f		1787986	0					
ANR	1788657	ExpressionStatement	yylval . SetTokenType ( LEX_INTEGER_VALUE )	435:2:9806:9846	1787986	1	True				
ANR	1788658	CallExpression	yylval . SetTokenType ( LEX_INTEGER_VALUE )		1787986	0					
ANR	1788659	Callee	yylval . SetTokenType		1787986	0					
ANR	1788660	MemberAccess	yylval . SetTokenType		1787986	0					
ANR	1788661	Identifier	yylval		1787986	0					
ANR	1788662	Identifier	SetTokenType		1787986	1					
ANR	1788663	ArgumentList	LEX_INTEGER_VALUE		1787986	1					
ANR	1788664	Argument	LEX_INTEGER_VALUE		1787986	0					
ANR	1788665	Identifier	LEX_INTEGER_VALUE		1787986	0					
ANR	1788666	ExpressionStatement	tokenType = LEX_INTEGER_VALUE	436:2:9850:9879	1787986	2	True				
ANR	1788667	AssignmentExpression	tokenType = LEX_INTEGER_VALUE		1787986	0		=			
ANR	1788668	Identifier	tokenType		1787986	0					
ANR	1788669	Identifier	LEX_INTEGER_VALUE		1787986	1					
ANR	1788670	ElseStatement	else		1787986	0					
ANR	1788671	CompoundStatement		165:8:4101:4101	1787986	0					
ANR	1788672	ExpressionStatement	"yylval . SetRealValue ( real , f )"	438:2:9893:9923	1787986	0	True				
ANR	1788673	CallExpression	"yylval . SetRealValue ( real , f )"		1787986	0					
ANR	1788674	Callee	yylval . SetRealValue		1787986	0					
ANR	1788675	MemberAccess	yylval . SetRealValue		1787986	0					
ANR	1788676	Identifier	yylval		1787986	0					
ANR	1788677	Identifier	SetRealValue		1787986	1					
ANR	1788678	ArgumentList	real		1787986	1					
ANR	1788679	Argument	real		1787986	0					
ANR	1788680	Identifier	real		1787986	0					
ANR	1788681	Argument	f		1787986	1					
ANR	1788682	Identifier	f		1787986	0					
ANR	1788683	ExpressionStatement	yylval . SetTokenType ( LEX_REAL_VALUE )	439:2:9927:9964	1787986	1	True				
ANR	1788684	CallExpression	yylval . SetTokenType ( LEX_REAL_VALUE )		1787986	0					
ANR	1788685	Callee	yylval . SetTokenType		1787986	0					
ANR	1788686	MemberAccess	yylval . SetTokenType		1787986	0					
ANR	1788687	Identifier	yylval		1787986	0					
ANR	1788688	Identifier	SetTokenType		1787986	1					
ANR	1788689	ArgumentList	LEX_REAL_VALUE		1787986	1					
ANR	1788690	Argument	LEX_REAL_VALUE		1787986	0					
ANR	1788691	Identifier	LEX_REAL_VALUE		1787986	0					
ANR	1788692	ExpressionStatement	tokenType = LEX_REAL_VALUE	440:2:9968:9994	1787986	2	True				
ANR	1788693	AssignmentExpression	tokenType = LEX_REAL_VALUE		1787986	0		=			
ANR	1788694	Identifier	tokenType		1787986	0					
ANR	1788695	Identifier	LEX_REAL_VALUE		1787986	1					
ANR	1788696	ReturnStatement	return ( tokenType ) ;	443:1:10001:10020	1787986	17	True				
ANR	1788697	Identifier	tokenType		1787986	0					
ANR	1788698	ReturnType	int		1787986	1					
ANR	1788699	Identifier	Lexer :: tokenizeNumber		1787986	2					
ANR	1788700	ParameterList			1787986	3					
ANR	1788701	CFGEntryNode	ENTRY		1787986		True				
ANR	1788702	CFGExitNode	EXIT		1787986		True				
ANR	1788703	Symbol	numberType		1787986						
ANR	1788704	Symbol	yylval		1787986						
ANR	1788705	Symbol	tolower		1787986						
ANR	1788706	Symbol	LEX_TOKEN_ERROR		1787986						
ANR	1788707	Symbol	integer		1787986						
ANR	1788708	Symbol	_useOldClassAdSemantics		1787986						
ANR	1788709	Symbol	lexSource		1787986						
ANR	1788710	Symbol	INT_MIN		1787986						
ANR	1788711	Symbol	Value :: T_FACTOR		1787986						
ANR	1788712	Symbol	och		1787986						
ANR	1788713	Symbol	strtol		1787986						
ANR	1788714	Symbol	INT_MAX		1787986						
ANR	1788715	Symbol	LEX_SELECTION		1787986						
ANR	1788716	Symbol	NONE		1787986						
ANR	1788717	Symbol	isdigit		1787986						
ANR	1788718	Symbol	lexBuffer		1787986						
ANR	1788719	Symbol	LEX_INTEGER_VALUE		1787986						
ANR	1788720	Symbol	INTEGER		1787986						
ANR	1788721	Symbol	isxdigit		1787986						
ANR	1788722	Symbol	Value :: NO_FACTOR		1787986						
ANR	1788723	Symbol	NULL		1787986						
ANR	1788724	Symbol	ch		1787986						
ANR	1788725	Symbol	toupper		1787986						
ANR	1788726	Symbol	f		1787986						
ANR	1788727	Symbol	real		1787986						
ANR	1788728	Symbol	ch2		1787986						
ANR	1788729	Symbol	isodigit		1787986						
ANR	1788730	Symbol	l		1787986						
ANR	1788731	Symbol	strtod		1787986						
ANR	1788732	Symbol	Value :: B_FACTOR		1787986						
ANR	1788733	Symbol	* lexSource		1787986						
ANR	1788734	Symbol	Value :: K_FACTOR		1787986						
ANR	1788735	Symbol	Value :: G_FACTOR		1787986						
ANR	1788736	Symbol	lexSource -> ReadCharacter		1787986						
ANR	1788737	Symbol	Value :: M_FACTOR		1787986						
ANR	1788738	Symbol	LEX_MINUS		1787986						
ANR	1788739	Symbol	REAL		1787986						
ANR	1788740	Symbol	lexBuffer . c_str		1787986						
ANR	1788741	Symbol	tokenType		1787986						
ANR	1788742	Symbol	LEX_REAL_VALUE		1787986						
ANR	1788743	Function	Lexer :: tokenizeAlphaHead	450:0:10232:11435							
ANR	1788744	FunctionDef	Lexer :: tokenizeAlphaHead ()		1788743	0					
ANR	1788745	CompoundStatement		452:0:10269:11435	1788743	0					
ANR	1788746	ExpressionStatement	mark ( )	453:1:10272:10279	1788743	0	True				
ANR	1788747	CallExpression	mark ( )		1788743	0					
ANR	1788748	Callee	mark		1788743	0					
ANR	1788749	Identifier	mark		1788743	0					
ANR	1788750	ArgumentList			1788743	1					
ANR	1788751	WhileStatement	while ( isalpha ( ch ) )		1788743	1					
ANR	1788752	Condition	isalpha ( ch )	454:8:10289:10300	1788743	0	True				
ANR	1788753	CallExpression	isalpha ( ch )		1788743	0					
ANR	1788754	Callee	isalpha		1788743	0					
ANR	1788755	Identifier	isalpha		1788743	0					
ANR	1788756	ArgumentList	ch		1788743	1					
ANR	1788757	Argument	ch		1788743	0					
ANR	1788758	Identifier	ch		1788743	0					
ANR	1788759	CompoundStatement		3:22:33:33	1788743	1					
ANR	1788760	ExpressionStatement	wind ( )	455:2:10307:10314	1788743	0	True				
ANR	1788761	CallExpression	wind ( )		1788743	0					
ANR	1788762	Callee	wind		1788743	0					
ANR	1788763	Identifier	wind		1788743	0					
ANR	1788764	ArgumentList			1788743	1					
ANR	1788765	IfStatement	if ( isdigit ( ch ) || ch == '_' )		1788743	2					
ANR	1788766	Condition	isdigit ( ch ) || ch == '_'	458:5:10325:10349	1788743	0	True				
ANR	1788767	OrExpression	isdigit ( ch ) || ch == '_'		1788743	0		||			
ANR	1788768	CallExpression	isdigit ( ch )		1788743	0					
ANR	1788769	Callee	isdigit		1788743	0					
ANR	1788770	Identifier	isdigit		1788743	0					
ANR	1788771	ArgumentList	ch		1788743	1					
ANR	1788772	Argument	ch		1788743	0					
ANR	1788773	Identifier	ch		1788743	0					
ANR	1788774	EqualityExpression	ch == '_'		1788743	1		==			
ANR	1788775	Identifier	ch		1788743	0					
ANR	1788776	PrimaryExpression	'_'		1788743	1					
ANR	1788777	CompoundStatement		7:32:82:82	1788743	1					
ANR	1788778	ExpressionStatement	wind ( )	460:2:10419:10426	1788743	0	True				
ANR	1788779	CallExpression	wind ( )		1788743	0					
ANR	1788780	Callee	wind		1788743	0					
ANR	1788781	Identifier	wind		1788743	0					
ANR	1788782	ArgumentList			1788743	1					
ANR	1788783	WhileStatement	while ( isalnum ( ch ) || ch == '_' )		1788743	1					
ANR	1788784	Condition	isalnum ( ch ) || ch == '_'	461:9:10437:10461	1788743	0	True				
ANR	1788785	OrExpression	isalnum ( ch ) || ch == '_'		1788743	0		||			
ANR	1788786	CallExpression	isalnum ( ch )		1788743	0					
ANR	1788787	Callee	isalnum		1788743	0					
ANR	1788788	Identifier	isalnum		1788743	0					
ANR	1788789	ArgumentList	ch		1788743	1					
ANR	1788790	Argument	ch		1788743	0					
ANR	1788791	Identifier	ch		1788743	0					
ANR	1788792	EqualityExpression	ch == '_'		1788743	1		==			
ANR	1788793	Identifier	ch		1788743	0					
ANR	1788794	PrimaryExpression	'_'		1788743	1					
ANR	1788795	CompoundStatement		10:36:194:194	1788743	1					
ANR	1788796	ExpressionStatement	wind ( )	462:3:10469:10476	1788743	0	True				
ANR	1788797	CallExpression	wind ( )		1788743	0					
ANR	1788798	Callee	wind		1788743	0					
ANR	1788799	Identifier	wind		1788743	0					
ANR	1788800	ArgumentList			1788743	1					
ANR	1788801	ExpressionStatement	cut ( )	464:2:10484:10490	1788743	2	True				
ANR	1788802	CallExpression	cut ( )		1788743	0					
ANR	1788803	Callee	cut		1788743	0					
ANR	1788804	Identifier	cut		1788743	0					
ANR	1788805	ArgumentList			1788743	1					
ANR	1788806	ExpressionStatement	tokenType = LEX_IDENTIFIER	466:2:10495:10521	1788743	3	True				
ANR	1788807	AssignmentExpression	tokenType = LEX_IDENTIFIER		1788743	0		=			
ANR	1788808	Identifier	tokenType		1788743	0					
ANR	1788809	Identifier	LEX_IDENTIFIER		1788743	1					
ANR	1788810	ExpressionStatement	yylval . SetStringValue ( lexBuffer . c_str ( ) )	467:2:10525:10568	1788743	4	True				
ANR	1788811	CallExpression	yylval . SetStringValue ( lexBuffer . c_str ( ) )		1788743	0					
ANR	1788812	Callee	yylval . SetStringValue		1788743	0					
ANR	1788813	MemberAccess	yylval . SetStringValue		1788743	0					
ANR	1788814	Identifier	yylval		1788743	0					
ANR	1788815	Identifier	SetStringValue		1788743	1					
ANR	1788816	ArgumentList	lexBuffer . c_str ( )		1788743	1					
ANR	1788817	Argument	lexBuffer . c_str ( )		1788743	0					
ANR	1788818	CallExpression	lexBuffer . c_str ( )		1788743	0					
ANR	1788819	Callee	lexBuffer . c_str		1788743	0					
ANR	1788820	MemberAccess	lexBuffer . c_str		1788743	0					
ANR	1788821	Identifier	lexBuffer		1788743	0					
ANR	1788822	Identifier	c_str		1788743	1					
ANR	1788823	ArgumentList			1788743	1					
ANR	1788824	ReturnStatement	return tokenType ;	469:2:10575:10591	1788743	5	True				
ANR	1788825	Identifier	tokenType		1788743	0					
ANR	1788826	ExpressionStatement	cut ( )	473:1:10670:10676	1788743	3	True				
ANR	1788827	CallExpression	cut ( )		1788743	0					
ANR	1788828	Callee	cut		1788743	0					
ANR	1788829	Identifier	cut		1788743	0					
ANR	1788830	ArgumentList			1788743	1					
ANR	1788831	IfStatement	"if ( strcasecmp ( lexBuffer . c_str ( ) , ""true"" ) == 0 )"		1788743	4					
ANR	1788832	Condition	"strcasecmp ( lexBuffer . c_str ( ) , ""true"" ) == 0"	474:5:10683:10724	1788743	0	True				
ANR	1788833	EqualityExpression	"strcasecmp ( lexBuffer . c_str ( ) , ""true"" ) == 0"		1788743	0		==			
ANR	1788834	CallExpression	"strcasecmp ( lexBuffer . c_str ( ) , ""true"" )"		1788743	0					
ANR	1788835	Callee	strcasecmp		1788743	0					
ANR	1788836	Identifier	strcasecmp		1788743	0					
ANR	1788837	ArgumentList	lexBuffer . c_str ( )		1788743	1					
ANR	1788838	Argument	lexBuffer . c_str ( )		1788743	0					
ANR	1788839	CallExpression	lexBuffer . c_str ( )		1788743	0					
ANR	1788840	Callee	lexBuffer . c_str		1788743	0					
ANR	1788841	MemberAccess	lexBuffer . c_str		1788743	0					
ANR	1788842	Identifier	lexBuffer		1788743	0					
ANR	1788843	Identifier	c_str		1788743	1					
ANR	1788844	ArgumentList			1788743	1					
ANR	1788845	Argument	"""true"""		1788743	1					
ANR	1788846	PrimaryExpression	"""true"""		1788743	0					
ANR	1788847	PrimaryExpression	0		1788743	1					
ANR	1788848	CompoundStatement		23:49:457:457	1788743	1					
ANR	1788849	ExpressionStatement	tokenType = LEX_BOOLEAN_VALUE	475:2:10731:10760	1788743	0	True				
ANR	1788850	AssignmentExpression	tokenType = LEX_BOOLEAN_VALUE		1788743	0		=			
ANR	1788851	Identifier	tokenType		1788743	0					
ANR	1788852	Identifier	LEX_BOOLEAN_VALUE		1788743	1					
ANR	1788853	ExpressionStatement	yylval . SetBoolValue ( true )	476:2:10764:10791	1788743	1	True				
ANR	1788854	CallExpression	yylval . SetBoolValue ( true )		1788743	0					
ANR	1788855	Callee	yylval . SetBoolValue		1788743	0					
ANR	1788856	MemberAccess	yylval . SetBoolValue		1788743	0					
ANR	1788857	Identifier	yylval		1788743	0					
ANR	1788858	Identifier	SetBoolValue		1788743	1					
ANR	1788859	ArgumentList	true		1788743	1					
ANR	1788860	Argument	true		1788743	0					
ANR	1788861	Identifier	true		1788743	0					
ANR	1788862	ElseStatement	else		1788743	0					
ANR	1788863	IfStatement	"if ( strcasecmp ( lexBuffer . c_str ( ) , ""false"" ) == 0 )"		1788743	0					
ANR	1788864	Condition	"strcasecmp ( lexBuffer . c_str ( ) , ""false"" ) == 0"	477:12:10805:10847	1788743	0	True				
ANR	1788865	EqualityExpression	"strcasecmp ( lexBuffer . c_str ( ) , ""false"" ) == 0"		1788743	0		==			
ANR	1788866	CallExpression	"strcasecmp ( lexBuffer . c_str ( ) , ""false"" )"		1788743	0					
ANR	1788867	Callee	strcasecmp		1788743	0					
ANR	1788868	Identifier	strcasecmp		1788743	0					
ANR	1788869	ArgumentList	lexBuffer . c_str ( )		1788743	1					
ANR	1788870	Argument	lexBuffer . c_str ( )		1788743	0					
ANR	1788871	CallExpression	lexBuffer . c_str ( )		1788743	0					
ANR	1788872	Callee	lexBuffer . c_str		1788743	0					
ANR	1788873	MemberAccess	lexBuffer . c_str		1788743	0					
ANR	1788874	Identifier	lexBuffer		1788743	0					
ANR	1788875	Identifier	c_str		1788743	1					
ANR	1788876	ArgumentList			1788743	1					
ANR	1788877	Argument	"""false"""		1788743	1					
ANR	1788878	PrimaryExpression	"""false"""		1788743	0					
ANR	1788879	PrimaryExpression	0		1788743	1					
ANR	1788880	CompoundStatement		26:57:580:580	1788743	1					
ANR	1788881	ExpressionStatement	tokenType = LEX_BOOLEAN_VALUE	478:2:10854:10883	1788743	0	True				
ANR	1788882	AssignmentExpression	tokenType = LEX_BOOLEAN_VALUE		1788743	0		=			
ANR	1788883	Identifier	tokenType		1788743	0					
ANR	1788884	Identifier	LEX_BOOLEAN_VALUE		1788743	1					
ANR	1788885	ExpressionStatement	yylval . SetBoolValue ( false )	479:2:10887:10915	1788743	1	True				
ANR	1788886	CallExpression	yylval . SetBoolValue ( false )		1788743	0					
ANR	1788887	Callee	yylval . SetBoolValue		1788743	0					
ANR	1788888	MemberAccess	yylval . SetBoolValue		1788743	0					
ANR	1788889	Identifier	yylval		1788743	0					
ANR	1788890	Identifier	SetBoolValue		1788743	1					
ANR	1788891	ArgumentList	false		1788743	1					
ANR	1788892	Argument	false		1788743	0					
ANR	1788893	Identifier	false		1788743	0					
ANR	1788894	ElseStatement	else		1788743	0					
ANR	1788895	IfStatement	"if ( strcasecmp ( lexBuffer . c_str ( ) , ""undefined"" ) == 0 )"		1788743	0					
ANR	1788896	Condition	"strcasecmp ( lexBuffer . c_str ( ) , ""undefined"" ) == 0"	480:12:10929:10975	1788743	0	True				
ANR	1788897	EqualityExpression	"strcasecmp ( lexBuffer . c_str ( ) , ""undefined"" ) == 0"		1788743	0		==			
ANR	1788898	CallExpression	"strcasecmp ( lexBuffer . c_str ( ) , ""undefined"" )"		1788743	0					
ANR	1788899	Callee	strcasecmp		1788743	0					
ANR	1788900	Identifier	strcasecmp		1788743	0					
ANR	1788901	ArgumentList	lexBuffer . c_str ( )		1788743	1					
ANR	1788902	Argument	lexBuffer . c_str ( )		1788743	0					
ANR	1788903	CallExpression	lexBuffer . c_str ( )		1788743	0					
ANR	1788904	Callee	lexBuffer . c_str		1788743	0					
ANR	1788905	MemberAccess	lexBuffer . c_str		1788743	0					
ANR	1788906	Identifier	lexBuffer		1788743	0					
ANR	1788907	Identifier	c_str		1788743	1					
ANR	1788908	ArgumentList			1788743	1					
ANR	1788909	Argument	"""undefined"""		1788743	1					
ANR	1788910	PrimaryExpression	"""undefined"""		1788743	0					
ANR	1788911	PrimaryExpression	0		1788743	1					
ANR	1788912	CompoundStatement		29:61:708:708	1788743	1					
ANR	1788913	ExpressionStatement	tokenType = LEX_UNDEFINED_VALUE	481:2:10982:11013	1788743	0	True				
ANR	1788914	AssignmentExpression	tokenType = LEX_UNDEFINED_VALUE		1788743	0		=			
ANR	1788915	Identifier	tokenType		1788743	0					
ANR	1788916	Identifier	LEX_UNDEFINED_VALUE		1788743	1					
ANR	1788917	ElseStatement	else		1788743	0					
ANR	1788918	IfStatement	"if ( strcasecmp ( lexBuffer . c_str ( ) , ""error"" ) == 0 )"		1788743	0					
ANR	1788919	Condition	"strcasecmp ( lexBuffer . c_str ( ) , ""error"" ) == 0"	482:12:11027:11069	1788743	0	True				
ANR	1788920	EqualityExpression	"strcasecmp ( lexBuffer . c_str ( ) , ""error"" ) == 0"		1788743	0		==			
ANR	1788921	CallExpression	"strcasecmp ( lexBuffer . c_str ( ) , ""error"" )"		1788743	0					
ANR	1788922	Callee	strcasecmp		1788743	0					
ANR	1788923	Identifier	strcasecmp		1788743	0					
ANR	1788924	ArgumentList	lexBuffer . c_str ( )		1788743	1					
ANR	1788925	Argument	lexBuffer . c_str ( )		1788743	0					
ANR	1788926	CallExpression	lexBuffer . c_str ( )		1788743	0					
ANR	1788927	Callee	lexBuffer . c_str		1788743	0					
ANR	1788928	MemberAccess	lexBuffer . c_str		1788743	0					
ANR	1788929	Identifier	lexBuffer		1788743	0					
ANR	1788930	Identifier	c_str		1788743	1					
ANR	1788931	ArgumentList			1788743	1					
ANR	1788932	Argument	"""error"""		1788743	1					
ANR	1788933	PrimaryExpression	"""error"""		1788743	0					
ANR	1788934	PrimaryExpression	0		1788743	1					
ANR	1788935	CompoundStatement		31:57:802:802	1788743	1					
ANR	1788936	ExpressionStatement	tokenType = LEX_ERROR_VALUE	483:2:11076:11103	1788743	0	True				
ANR	1788937	AssignmentExpression	tokenType = LEX_ERROR_VALUE		1788743	0		=			
ANR	1788938	Identifier	tokenType		1788743	0					
ANR	1788939	Identifier	LEX_ERROR_VALUE		1788743	1					
ANR	1788940	ElseStatement	else		1788743	0					
ANR	1788941	IfStatement	"if ( strcasecmp ( lexBuffer . c_str ( ) , ""is"" ) == 0 )"		1788743	0					
ANR	1788942	Condition	"strcasecmp ( lexBuffer . c_str ( ) , ""is"" ) == 0"	484:12:11117:11156	1788743	0	True				
ANR	1788943	EqualityExpression	"strcasecmp ( lexBuffer . c_str ( ) , ""is"" ) == 0"		1788743	0		==			
ANR	1788944	CallExpression	"strcasecmp ( lexBuffer . c_str ( ) , ""is"" )"		1788743	0					
ANR	1788945	Callee	strcasecmp		1788743	0					
ANR	1788946	Identifier	strcasecmp		1788743	0					
ANR	1788947	ArgumentList	lexBuffer . c_str ( )		1788743	1					
ANR	1788948	Argument	lexBuffer . c_str ( )		1788743	0					
ANR	1788949	CallExpression	lexBuffer . c_str ( )		1788743	0					
ANR	1788950	Callee	lexBuffer . c_str		1788743	0					
ANR	1788951	MemberAccess	lexBuffer . c_str		1788743	0					
ANR	1788952	Identifier	lexBuffer		1788743	0					
ANR	1788953	Identifier	c_str		1788743	1					
ANR	1788954	ArgumentList			1788743	1					
ANR	1788955	Argument	"""is"""		1788743	1					
ANR	1788956	PrimaryExpression	"""is"""		1788743	0					
ANR	1788957	PrimaryExpression	0		1788743	1					
ANR	1788958	CompoundStatement		33:55:890:890	1788743	1					
ANR	1788959	ExpressionStatement	tokenType = LEX_META_EQUAL	485:2:11164:11190	1788743	0	True				
ANR	1788960	AssignmentExpression	tokenType = LEX_META_EQUAL		1788743	0		=			
ANR	1788961	Identifier	tokenType		1788743	0					
ANR	1788962	Identifier	LEX_META_EQUAL		1788743	1					
ANR	1788963	ElseStatement	else		1788743	0					
ANR	1788964	IfStatement	"if ( strcasecmp ( lexBuffer . c_str ( ) , ""isnt"" ) == 0 )"		1788743	0					
ANR	1788965	Condition	"strcasecmp ( lexBuffer . c_str ( ) , ""isnt"" ) == 0"	486:12:11204:11245	1788743	0	True				
ANR	1788966	EqualityExpression	"strcasecmp ( lexBuffer . c_str ( ) , ""isnt"" ) == 0"		1788743	0		==			
ANR	1788967	CallExpression	"strcasecmp ( lexBuffer . c_str ( ) , ""isnt"" )"		1788743	0					
ANR	1788968	Callee	strcasecmp		1788743	0					
ANR	1788969	Identifier	strcasecmp		1788743	0					
ANR	1788970	ArgumentList	lexBuffer . c_str ( )		1788743	1					
ANR	1788971	Argument	lexBuffer . c_str ( )		1788743	0					
ANR	1788972	CallExpression	lexBuffer . c_str ( )		1788743	0					
ANR	1788973	Callee	lexBuffer . c_str		1788743	0					
ANR	1788974	MemberAccess	lexBuffer . c_str		1788743	0					
ANR	1788975	Identifier	lexBuffer		1788743	0					
ANR	1788976	Identifier	c_str		1788743	1					
ANR	1788977	ArgumentList			1788743	1					
ANR	1788978	Argument	"""isnt"""		1788743	1					
ANR	1788979	PrimaryExpression	"""isnt"""		1788743	0					
ANR	1788980	PrimaryExpression	0		1788743	1					
ANR	1788981	CompoundStatement		35:56:978:978	1788743	1					
ANR	1788982	ExpressionStatement	tokenType = LEX_META_NOT_EQUAL	487:2:11252:11282	1788743	0	True				
ANR	1788983	AssignmentExpression	tokenType = LEX_META_NOT_EQUAL		1788743	0		=			
ANR	1788984	Identifier	tokenType		1788743	0					
ANR	1788985	Identifier	LEX_META_NOT_EQUAL		1788743	1					
ANR	1788986	ElseStatement	else		1788743	0					
ANR	1788987	CompoundStatement		37:8:1022:1022	1788743	0					
ANR	1788988	ExpressionStatement	tokenType = LEX_IDENTIFIER	490:2:11338:11364	1788743	0	True				
ANR	1788989	AssignmentExpression	tokenType = LEX_IDENTIFIER		1788743	0		=			
ANR	1788990	Identifier	tokenType		1788743	0					
ANR	1788991	Identifier	LEX_IDENTIFIER		1788743	1					
ANR	1788992	ExpressionStatement	yylval . SetStringValue ( lexBuffer . c_str ( ) )	491:2:11368:11410	1788743	1	True				
ANR	1788993	CallExpression	yylval . SetStringValue ( lexBuffer . c_str ( ) )		1788743	0					
ANR	1788994	Callee	yylval . SetStringValue		1788743	0					
ANR	1788995	MemberAccess	yylval . SetStringValue		1788743	0					
ANR	1788996	Identifier	yylval		1788743	0					
ANR	1788997	Identifier	SetStringValue		1788743	1					
ANR	1788998	ArgumentList	lexBuffer . c_str ( )		1788743	1					
ANR	1788999	Argument	lexBuffer . c_str ( )		1788743	0					
ANR	1789000	CallExpression	lexBuffer . c_str ( )		1788743	0					
ANR	1789001	Callee	lexBuffer . c_str		1788743	0					
ANR	1789002	MemberAccess	lexBuffer . c_str		1788743	0					
ANR	1789003	Identifier	lexBuffer		1788743	0					
ANR	1789004	Identifier	c_str		1788743	1					
ANR	1789005	ArgumentList			1788743	1					
ANR	1789006	ReturnStatement	return tokenType ;	494:1:11417:11433	1788743	5	True				
ANR	1789007	Identifier	tokenType		1788743	0					
ANR	1789008	ReturnType	int		1788743	1					
ANR	1789009	Identifier	Lexer :: tokenizeAlphaHead		1788743	2					
ANR	1789010	ParameterList			1788743	3					
ANR	1789011	CFGEntryNode	ENTRY		1788743		True				
ANR	1789012	CFGExitNode	EXIT		1788743		True				
ANR	1789013	Symbol	isalpha		1788743						
ANR	1789014	Symbol	LEX_IDENTIFIER		1788743						
ANR	1789015	Symbol	yylval		1788743						
ANR	1789016	Symbol	isalnum		1788743						
ANR	1789017	Symbol	ch		1788743						
ANR	1789018	Symbol	false		1788743						
ANR	1789019	Symbol	LEX_UNDEFINED_VALUE		1788743						
ANR	1789020	Symbol	LEX_ERROR_VALUE		1788743						
ANR	1789021	Symbol	LEX_META_NOT_EQUAL		1788743						
ANR	1789022	Symbol	LEX_BOOLEAN_VALUE		1788743						
ANR	1789023	Symbol	true		1788743						
ANR	1789024	Symbol	lexBuffer . c_str		1788743						
ANR	1789025	Symbol	tokenType		1788743						
ANR	1789026	Symbol	strcasecmp		1788743						
ANR	1789027	Symbol	isdigit		1788743						
ANR	1789028	Symbol	LEX_META_EQUAL		1788743						
ANR	1789029	Symbol	lexBuffer		1788743						
ANR	1789030	Function	Lexer :: tokenizeString	501:0:11568:13175							
ANR	1789031	FunctionDef	Lexer :: tokenizeString (char delim)		1789030	0					
ANR	1789032	CompoundStatement		503:0:11607:13175	1789030	0					
ANR	1789033	IdentifierDeclStatement	bool stringComplete = false ;	504:1:11610:11637	1789030	0	True				
ANR	1789034	IdentifierDecl	stringComplete = false		1789030	0					
ANR	1789035	IdentifierDeclType	bool		1789030	0					
ANR	1789036	Identifier	stringComplete		1789030	1					
ANR	1789037	AssignmentExpression	stringComplete = false		1789030	2		=			
ANR	1789038	Identifier	false		1789030	0					
ANR	1789039	Identifier	false		1789030	1					
ANR	1789040	ExpressionStatement	inString = true	507:1:11676:11691	1789030	1	True				
ANR	1789041	AssignmentExpression	inString = true		1789030	0		=			
ANR	1789042	Identifier	inString		1789030	0					
ANR	1789043	Identifier	true		1789030	1					
ANR	1789044	ExpressionStatement	wind ( )	508:1:11694:11701	1789030	2	True				
ANR	1789045	CallExpression	wind ( )		1789030	0					
ANR	1789046	Callee	wind		1789030	0					
ANR	1789047	Identifier	wind		1789030	0					
ANR	1789048	ArgumentList			1789030	1					
ANR	1789049	ExpressionStatement	mark ( )	509:1:11704:11711	1789030	3	True				
ANR	1789050	CallExpression	mark ( )		1789030	0					
ANR	1789051	Callee	mark		1789030	0					
ANR	1789052	Identifier	mark		1789030	0					
ANR	1789053	ArgumentList			1789030	1					
ANR	1789054	WhileStatement	while ( ! stringComplete )		1789030	4					
ANR	1789055	Condition	! stringComplete	511:8:11723:11737	1789030	0	True				
ANR	1789056	UnaryOperationExpression	! stringComplete		1789030	0					
ANR	1789057	UnaryOperator	!		1789030	0					
ANR	1789058	Identifier	stringComplete		1789030	1					
ANR	1789059	CompoundStatement		11:2:166:179	1789030	1					
ANR	1789060	IdentifierDeclStatement	bool oddBackWhacks = false ;	512:2:11744:11770	1789030	0	True				
ANR	1789061	IdentifierDecl	oddBackWhacks = false		1789030	0					
ANR	1789062	IdentifierDeclType	bool		1789030	0					
ANR	1789063	Identifier	oddBackWhacks		1789030	1					
ANR	1789064	AssignmentExpression	oddBackWhacks = false		1789030	2		=			
ANR	1789065	Identifier	false		1789030	0					
ANR	1789066	Identifier	false		1789030	1					
ANR	1789067	IdentifierDeclStatement	int oldCh = 0 ;	513:2:11774:11787	1789030	1	True				
ANR	1789068	IdentifierDecl	oldCh = 0		1789030	0					
ANR	1789069	IdentifierDeclType	int		1789030	0					
ANR	1789070	Identifier	oldCh		1789030	1					
ANR	1789071	AssignmentExpression	oldCh = 0		1789030	2		=			
ANR	1789072	Identifier	oldCh		1789030	0					
ANR	1789073	PrimaryExpression	0		1789030	1					
ANR	1789074	WhileStatement	while ( ( ch > 0 ) && ( ch != delim || ( ch == delim && oldCh == '\\\\' && oddBackWhacks ) ) )		1789030	2					
ANR	1789075	Condition	( ch > 0 ) && ( ch != delim || ( ch == delim && oldCh == '\\\\' && oddBackWhacks ) )	515:9:11855:11936	1789030	0	True				
ANR	1789076	AndExpression	( ch > 0 ) && ( ch != delim || ( ch == delim && oldCh == '\\\\' && oddBackWhacks ) )		1789030	0		&&			
ANR	1789077	RelationalExpression	ch > 0		1789030	0		>			
ANR	1789078	Identifier	ch		1789030	0					
ANR	1789079	PrimaryExpression	0		1789030	1					
ANR	1789080	OrExpression	ch != delim || ( ch == delim && oldCh == '\\\\' && oddBackWhacks )		1789030	1		||			
ANR	1789081	EqualityExpression	ch != delim		1789030	0		!=			
ANR	1789082	Identifier	ch		1789030	0					
ANR	1789083	Identifier	delim		1789030	1					
ANR	1789084	AndExpression	ch == delim && oldCh == '\\\\' && oddBackWhacks		1789030	1		&&			
ANR	1789085	EqualityExpression	ch == delim		1789030	0		==			
ANR	1789086	Identifier	ch		1789030	0					
ANR	1789087	Identifier	delim		1789030	1					
ANR	1789088	AndExpression	oldCh == '\\\\' && oddBackWhacks		1789030	1		&&			
ANR	1789089	EqualityExpression	oldCh == '\\\\'		1789030	0		==			
ANR	1789090	Identifier	oldCh		1789030	0					
ANR	1789091	PrimaryExpression	'\\\\'		1789030	1					
ANR	1789092	Identifier	oddBackWhacks		1789030	1					
ANR	1789093	CompoundStatement		13:94:332:332	1789030	1					
ANR	1789094	IfStatement	if ( ! oddBackWhacks && ch == '\\\\' )		1789030	0					
ANR	1789095	Condition	! oddBackWhacks && ch == '\\\\'	516:7:11949:11976	1789030	0	True				
ANR	1789096	AndExpression	! oddBackWhacks && ch == '\\\\'		1789030	0		&&			
ANR	1789097	UnaryOperationExpression	! oddBackWhacks		1789030	0					
ANR	1789098	UnaryOperator	!		1789030	0					
ANR	1789099	Identifier	oddBackWhacks		1789030	1					
ANR	1789100	EqualityExpression	ch == '\\\\'		1789030	1		==			
ANR	1789101	Identifier	ch		1789030	0					
ANR	1789102	PrimaryExpression	'\\\\'		1789030	1					
ANR	1789103	CompoundStatement		14:38:372:372	1789030	1					
ANR	1789104	ExpressionStatement	oddBackWhacks = true	517:4:11986:12006	1789030	0	True				
ANR	1789105	AssignmentExpression	oddBackWhacks = true		1789030	0		=			
ANR	1789106	Identifier	oddBackWhacks		1789030	0					
ANR	1789107	Identifier	true		1789030	1					
ANR	1789108	ElseStatement	else		1789030	0					
ANR	1789109	CompoundStatement		17:8:413:413	1789030	0					
ANR	1789110	ExpressionStatement	oddBackWhacks = false	520:4:12027:12048	1789030	0	True				
ANR	1789111	AssignmentExpression	oddBackWhacks = false		1789030	0		=			
ANR	1789112	Identifier	oddBackWhacks		1789030	0					
ANR	1789113	Identifier	false		1789030	1					
ANR	1789114	ExpressionStatement	oldCh = ch	522:3:12058:12068	1789030	1	True				
ANR	1789115	AssignmentExpression	oldCh = ch		1789030	0		=			
ANR	1789116	Identifier	oldCh		1789030	0					
ANR	1789117	Identifier	ch		1789030	1					
ANR	1789118	ExpressionStatement	wind ( )	523:3:12073:12080	1789030	2	True				
ANR	1789119	CallExpression	wind ( )		1789030	0					
ANR	1789120	Callee	wind		1789030	0					
ANR	1789121	Identifier	wind		1789030	0					
ANR	1789122	ArgumentList			1789030	1					
ANR	1789123	IfStatement	if ( ch == delim )		1789030	3					
ANR	1789124	Condition	ch == delim	526:6:12095:12105	1789030	0	True				
ANR	1789125	EqualityExpression	ch == delim		1789030	0		==			
ANR	1789126	Identifier	ch		1789030	0					
ANR	1789127	Identifier	delim		1789030	1					
ANR	1789128	CompoundStatement		25:3:506:522	1789030	1					
ANR	1789129	IdentifierDeclStatement	int tempch = ' ' ;	527:3:12114:12130	1789030	0	True				
ANR	1789130	IdentifierDecl	tempch = ' '		1789030	0					
ANR	1789131	IdentifierDeclType	int		1789030	0					
ANR	1789132	Identifier	tempch		1789030	1					
ANR	1789133	AssignmentExpression	tempch = ' '		1789030	2		=			
ANR	1789134	Identifier	tempch		1789030	0					
ANR	1789135	PrimaryExpression	' '		1789030	1					
ANR	1789136	WhileStatement	while ( isspace ( tempch ) )		1789030	1					
ANR	1789137	Condition	isspace ( tempch )	529:10:12184:12198	1789030	0	True				
ANR	1789138	CallExpression	isspace ( tempch )		1789030	0					
ANR	1789139	Callee	isspace		1789030	0					
ANR	1789140	Identifier	isspace		1789030	0					
ANR	1789141	ArgumentList	tempch		1789030	1					
ANR	1789142	Argument	tempch		1789030	0					
ANR	1789143	Identifier	tempch		1789030	0					
ANR	1789144	CompoundStatement		27:27:593:593	1789030	1					
ANR	1789145	ExpressionStatement	tempch = lexSource -> ReadCharacter ( )	530:4:12207:12242	1789030	0	True				
ANR	1789146	AssignmentExpression	tempch = lexSource -> ReadCharacter ( )		1789030	0		=			
ANR	1789147	Identifier	tempch		1789030	0					
ANR	1789148	CallExpression	lexSource -> ReadCharacter ( )		1789030	1					
ANR	1789149	Callee	lexSource -> ReadCharacter		1789030	0					
ANR	1789150	PtrMemberAccess	lexSource -> ReadCharacter		1789030	0					
ANR	1789151	Identifier	lexSource		1789030	0					
ANR	1789152	Identifier	ReadCharacter		1789030	1					
ANR	1789153	ArgumentList			1789030	1					
ANR	1789154	IfStatement	if ( tempch != delim )		1789030	2					
ANR	1789155	Condition	tempch != delim	532:7:12256:12270	1789030	0	True				
ANR	1789156	EqualityExpression	tempch != delim		1789030	0		!=			
ANR	1789157	Identifier	tempch		1789030	0					
ANR	1789158	Identifier	delim		1789030	1					
ANR	1789159	CompoundStatement		30:24:665:665	1789030	1					
ANR	1789160	IfStatement	if ( tempch != - 1 )		1789030	0					
ANR	1789161	Condition	tempch != - 1	533:20:12335:12346	1789030	0	True				
ANR	1789162	EqualityExpression	tempch != - 1		1789030	0		!=			
ANR	1789163	Identifier	tempch		1789030	0					
ANR	1789164	UnaryOperationExpression	- 1		1789030	1					
ANR	1789165	UnaryOperator	-		1789030	0					
ANR	1789166	PrimaryExpression	1		1789030	1					
ANR	1789167	CompoundStatement		31:34:741:741	1789030	1					
ANR	1789168	ExpressionStatement	lexSource -> UnreadCharacter ( )	534:20:12371:12399	1789030	0	True				
ANR	1789169	CallExpression	lexSource -> UnreadCharacter ( )		1789030	0					
ANR	1789170	Callee	lexSource -> UnreadCharacter		1789030	0					
ANR	1789171	PtrMemberAccess	lexSource -> UnreadCharacter		1789030	0					
ANR	1789172	Identifier	lexSource		1789030	0					
ANR	1789173	Identifier	UnreadCharacter		1789030	1					
ANR	1789174	ArgumentList			1789030	1					
ANR	1789175	ExpressionStatement	stringComplete = true	536:4:12423:12444	1789030	1	True				
ANR	1789176	AssignmentExpression	stringComplete = true		1789030	0		=			
ANR	1789177	Identifier	stringComplete		1789030	0					
ANR	1789178	Identifier	true		1789030	1					
ANR	1789179	ElseStatement	else		1789030	0					
ANR	1789180	CompoundStatement		35:10:848:848	1789030	0					
ANR	1789181	ExpressionStatement	lexBuffer . erase ( lexBufferCount -- )	538:4:12533:12566	1789030	0	True				
ANR	1789182	CallExpression	lexBuffer . erase ( lexBufferCount -- )		1789030	0					
ANR	1789183	Callee	lexBuffer . erase		1789030	0					
ANR	1789184	MemberAccess	lexBuffer . erase		1789030	0					
ANR	1789185	Identifier	lexBuffer		1789030	0					
ANR	1789186	Identifier	erase		1789030	1					
ANR	1789187	ArgumentList	lexBufferCount --		1789030	1					
ANR	1789188	Argument	lexBufferCount --		1789030	0					
ANR	1789189	PostIncDecOperationExpression	lexBufferCount --		1789030	0					
ANR	1789190	Identifier	lexBufferCount		1789030	0					
ANR	1789191	IncDec	--		1789030	1					
ANR	1789192	ExpressionStatement	wind ( )	539:4:12598:12604	1789030	1	True				
ANR	1789193	CallExpression	wind ( )		1789030	0					
ANR	1789194	Callee	wind		1789030	0					
ANR	1789195	Identifier	wind		1789030	0					
ANR	1789196	ArgumentList			1789030	1					
ANR	1789197	ElseStatement	else		1789030	0					
ANR	1789198	CompoundStatement		40:7:1014:1014	1789030	0					
ANR	1789199	ExpressionStatement	tokenType = LEX_TOKEN_ERROR	544:3:12671:12698	1789030	0	True				
ANR	1789200	AssignmentExpression	tokenType = LEX_TOKEN_ERROR		1789030	0		=			
ANR	1789201	Identifier	tokenType		1789030	0					
ANR	1789202	Identifier	LEX_TOKEN_ERROR		1789030	1					
ANR	1789203	ReturnStatement	return tokenType ;	545:3:12703:12719	1789030	1	True				
ANR	1789204	Identifier	tokenType		1789030	0					
ANR	1789205	ExpressionStatement	cut ( )	548:1:12733:12739	1789030	5	True				
ANR	1789206	CallExpression	cut ( )		1789030	0					
ANR	1789207	Callee	cut		1789030	0					
ANR	1789208	Identifier	cut		1789030	0					
ANR	1789209	ArgumentList			1789030	1					
ANR	1789210	ExpressionStatement	wind ( )	549:1:12742:12749	1789030	6	True				
ANR	1789211	CallExpression	wind ( )		1789030	0					
ANR	1789212	Callee	wind		1789030	0					
ANR	1789213	Identifier	wind		1789030	0					
ANR	1789214	ArgumentList			1789030	1					
ANR	1789215	IdentifierDeclStatement	bool validStr = true ;	550:1:12781:12801	1789030	7	True				
ANR	1789216	IdentifierDecl	validStr = true		1789030	0					
ANR	1789217	IdentifierDeclType	bool		1789030	0					
ANR	1789218	Identifier	validStr		1789030	1					
ANR	1789219	AssignmentExpression	validStr = true		1789030	2		=			
ANR	1789220	Identifier	true		1789030	0					
ANR	1789221	Identifier	true		1789030	1					
ANR	1789222	ExpressionStatement	"convert_escapes ( lexBuffer , validStr )"	551:1:12859:12895	1789030	8	True				
ANR	1789223	CallExpression	"convert_escapes ( lexBuffer , validStr )"		1789030	0					
ANR	1789224	Callee	convert_escapes		1789030	0					
ANR	1789225	Identifier	convert_escapes		1789030	0					
ANR	1789226	ArgumentList	lexBuffer		1789030	1					
ANR	1789227	Argument	lexBuffer		1789030	0					
ANR	1789228	Identifier	lexBuffer		1789030	0					
ANR	1789229	Argument	validStr		1789030	1					
ANR	1789230	Identifier	validStr		1789030	0					
ANR	1789231	ExpressionStatement	yylval . SetStringValue ( lexBuffer . c_str ( ) )	552:1:12898:12941	1789030	9	True				
ANR	1789232	CallExpression	yylval . SetStringValue ( lexBuffer . c_str ( ) )		1789030	0					
ANR	1789233	Callee	yylval . SetStringValue		1789030	0					
ANR	1789234	MemberAccess	yylval . SetStringValue		1789030	0					
ANR	1789235	Identifier	yylval		1789030	0					
ANR	1789236	Identifier	SetStringValue		1789030	1					
ANR	1789237	ArgumentList	lexBuffer . c_str ( )		1789030	1					
ANR	1789238	Argument	lexBuffer . c_str ( )		1789030	0					
ANR	1789239	CallExpression	lexBuffer . c_str ( )		1789030	0					
ANR	1789240	Callee	lexBuffer . c_str		1789030	0					
ANR	1789241	MemberAccess	lexBuffer . c_str		1789030	0					
ANR	1789242	Identifier	lexBuffer		1789030	0					
ANR	1789243	Identifier	c_str		1789030	1					
ANR	1789244	ArgumentList			1789030	1					
ANR	1789245	IfStatement	if ( validStr )		1789030	10					
ANR	1789246	Condition	validStr	553:5:12948:12955	1789030	0	True				
ANR	1789247	Identifier	validStr		1789030	0					
ANR	1789248	CompoundStatement		51:15:1350:1350	1789030	1					
ANR	1789249	IfStatement	"if ( delim == '\\""' )"		1789030	0					
ANR	1789250	Condition	"delim == '\\""'"	554:5:12965:12977	1789030	0	True				
ANR	1789251	EqualityExpression	"delim == '\\""'"		1789030	0		==			
ANR	1789252	Identifier	delim		1789030	0					
ANR	1789253	PrimaryExpression	"'\\""'"		1789030	1					
ANR	1789254	CompoundStatement		52:20:1372:1372	1789030	1					
ANR	1789255	ExpressionStatement	tokenType = LEX_STRING_VALUE	555:3:12985:13013	1789030	0	True				
ANR	1789256	AssignmentExpression	tokenType = LEX_STRING_VALUE		1789030	0		=			
ANR	1789257	Identifier	tokenType		1789030	0					
ANR	1789258	Identifier	LEX_STRING_VALUE		1789030	1					
ANR	1789259	ElseStatement	else		1789030	0					
ANR	1789260	CompoundStatement		55:7:1418:1418	1789030	0					
ANR	1789261	ExpressionStatement	tokenType = LEX_IDENTIFIER	558:3:13031:13057	1789030	0	True				
ANR	1789262	AssignmentExpression	tokenType = LEX_IDENTIFIER		1789030	0		=			
ANR	1789263	Identifier	tokenType		1789030	0					
ANR	1789264	Identifier	LEX_IDENTIFIER		1789030	1					
ANR	1789265	ElseStatement	else		1789030	0					
ANR	1789266	CompoundStatement		59:6:1464:1464	1789030	0					
ANR	1789267	ExpressionStatement	tokenType = LEX_TOKEN_ERROR	562:2:13076:13103	1789030	0	True				
ANR	1789268	AssignmentExpression	tokenType = LEX_TOKEN_ERROR		1789030	0		=			
ANR	1789269	Identifier	tokenType		1789030	0					
ANR	1789270	Identifier	LEX_TOKEN_ERROR		1789030	1					
ANR	1789271	ReturnStatement	return tokenType ;	565:1:13157:13173	1789030	11	True				
ANR	1789272	Identifier	tokenType		1789030	0					
ANR	1789273	ReturnType	int		1789030	1					
ANR	1789274	Identifier	Lexer :: tokenizeString		1789030	2					
ANR	1789275	ParameterList	char delim		1789030	3					
ANR	1789276	Parameter	char delim	502:15:11595:11604	1789030	0	True				
ANR	1789277	ParameterType	char		1789030	0					
ANR	1789278	Identifier	delim		1789030	1					
ANR	1789279	CFGEntryNode	ENTRY		1789030		True				
ANR	1789280	CFGExitNode	EXIT		1789030		True				
ANR	1789281	Symbol	oddBackWhacks		1789030						
ANR	1789282	Symbol	oldCh		1789030						
ANR	1789283	Symbol	yylval		1789030						
ANR	1789284	Symbol	LEX_IDENTIFIER		1789030						
ANR	1789285	Symbol	ch		1789030						
ANR	1789286	Symbol	false		1789030						
ANR	1789287	Symbol	isspace		1789030						
ANR	1789288	Symbol	stringComplete		1789030						
ANR	1789289	Symbol	LEX_TOKEN_ERROR		1789030						
ANR	1789290	Symbol	LEX_STRING_VALUE		1789030						
ANR	1789291	Symbol	lexSource		1789030						
ANR	1789292	Symbol	tempch		1789030						
ANR	1789293	Symbol	* lexSource		1789030						
ANR	1789294	Symbol	lexSource -> ReadCharacter		1789030						
ANR	1789295	Symbol	inString		1789030						
ANR	1789296	Symbol	true		1789030						
ANR	1789297	Symbol	lexBuffer . c_str		1789030						
ANR	1789298	Symbol	tokenType		1789030						
ANR	1789299	Symbol	lexBufferCount		1789030						
ANR	1789300	Symbol	validStr		1789030						
ANR	1789301	Symbol	lexBuffer		1789030						
ANR	1789302	Symbol	delim		1789030						
ANR	1789303	Function	Lexer :: tokenizePunctOperator	570:0:13242:16455							
ANR	1789304	FunctionDef	Lexer :: tokenizePunctOperator ()		1789303	0					
ANR	1789305	CompoundStatement		572:0:13283:16455	1789303	0					
ANR	1789306	IdentifierDeclStatement	int oldch = ch ;	574:1:13328:13342	1789303	0	True				
ANR	1789307	IdentifierDecl	oldch = ch		1789303	0					
ANR	1789308	IdentifierDeclType	int		1789303	0					
ANR	1789309	Identifier	oldch		1789303	1					
ANR	1789310	AssignmentExpression	oldch = ch		1789303	2		=			
ANR	1789311	Identifier	ch		1789303	0					
ANR	1789312	Identifier	ch		1789303	1					
ANR	1789313	IdentifierDeclStatement	int extra_lookahead ;	575:1:13345:13364	1789303	1	True				
ANR	1789314	IdentifierDecl	extra_lookahead		1789303	0					
ANR	1789315	IdentifierDeclType	int		1789303	0					
ANR	1789316	Identifier	extra_lookahead		1789303	1					
ANR	1789317	ExpressionStatement	mark ( )	577:1:13368:13375	1789303	2	True				
ANR	1789318	CallExpression	mark ( )		1789303	0					
ANR	1789319	Callee	mark		1789303	0					
ANR	1789320	Identifier	mark		1789303	0					
ANR	1789321	ArgumentList			1789303	1					
ANR	1789322	ExpressionStatement	wind ( )	578:1:13378:13385	1789303	3	True				
ANR	1789323	CallExpression	wind ( )		1789303	0					
ANR	1789324	Callee	wind		1789303	0					
ANR	1789325	Identifier	wind		1789303	0					
ANR	1789326	ArgumentList			1789303	1					
ANR	1789327	SwitchStatement	switch ( oldch )		1789303	4					
ANR	1789328	Condition	oldch	579:9:13396:13400	1789303	0	True				
ANR	1789329	Identifier	oldch		1789303	0					
ANR	1789330	CompoundStatement		8:16:119:119	1789303	1					
ANR	1789331	Label	case '.' :	581:2:13446:13454	1789303	0	True				
ANR	1789332	ExpressionStatement	tokenType = LEX_SELECTION	582:3:13459:13484	1789303	1	True				
ANR	1789333	AssignmentExpression	tokenType = LEX_SELECTION		1789303	0		=			
ANR	1789334	Identifier	tokenType		1789303	0					
ANR	1789335	Identifier	LEX_SELECTION		1789303	1					
ANR	1789336	BreakStatement	break ;	583:3:13489:13494	1789303	2	True				
ANR	1789337	Label	case '*' :	586:2:13500:13508	1789303	3	True				
ANR	1789338	ExpressionStatement	tokenType = LEX_MULTIPLY	587:3:13514:13538	1789303	4	True				
ANR	1789339	AssignmentExpression	tokenType = LEX_MULTIPLY		1789303	0		=			
ANR	1789340	Identifier	tokenType		1789303	0					
ANR	1789341	Identifier	LEX_MULTIPLY		1789303	1					
ANR	1789342	BreakStatement	break ;	588:3:13545:13550	1789303	5	True				
ANR	1789343	Label	case '/' :	591:2:13556:13564	1789303	6	True				
ANR	1789344	ExpressionStatement	tokenType = LEX_DIVIDE	592:3:13570:13592	1789303	7	True				
ANR	1789345	AssignmentExpression	tokenType = LEX_DIVIDE		1789303	0		=			
ANR	1789346	Identifier	tokenType		1789303	0					
ANR	1789347	Identifier	LEX_DIVIDE		1789303	1					
ANR	1789348	BreakStatement	break ;	593:3:13599:13604	1789303	8	True				
ANR	1789349	Label	case '%' :	596:2:13610:13618	1789303	9	True				
ANR	1789350	ExpressionStatement	tokenType = LEX_MODULUS	597:3:13624:13647	1789303	10	True				
ANR	1789351	AssignmentExpression	tokenType = LEX_MODULUS		1789303	0		=			
ANR	1789352	Identifier	tokenType		1789303	0					
ANR	1789353	Identifier	LEX_MODULUS		1789303	1					
ANR	1789354	BreakStatement	break ;	598:3:13654:13659	1789303	11	True				
ANR	1789355	Label	case '+' :	601:2:13665:13673	1789303	12	True				
ANR	1789356	ExpressionStatement	tokenType = LEX_PLUS	602:3:13679:13699	1789303	13	True				
ANR	1789357	AssignmentExpression	tokenType = LEX_PLUS		1789303	0		=			
ANR	1789358	Identifier	tokenType		1789303	0					
ANR	1789359	Identifier	LEX_PLUS		1789303	1					
ANR	1789360	BreakStatement	break ;	603:3:13707:13712	1789303	14	True				
ANR	1789361	Label	case '-' :	606:2:13718:13726	1789303	15	True				
ANR	1789362	ExpressionStatement	tokenType = LEX_MINUS	607:3:13732:13753	1789303	16	True				
ANR	1789363	AssignmentExpression	tokenType = LEX_MINUS		1789303	0		=			
ANR	1789364	Identifier	tokenType		1789303	0					
ANR	1789365	Identifier	LEX_MINUS		1789303	1					
ANR	1789366	BreakStatement	break ;	608:3:13761:13766	1789303	17	True				
ANR	1789367	Label	case '~' :	611:2:13772:13780	1789303	18	True				
ANR	1789368	ExpressionStatement	tokenType = LEX_BITWISE_NOT	612:3:13786:13813	1789303	19	True				
ANR	1789369	AssignmentExpression	tokenType = LEX_BITWISE_NOT		1789303	0		=			
ANR	1789370	Identifier	tokenType		1789303	0					
ANR	1789371	Identifier	LEX_BITWISE_NOT		1789303	1					
ANR	1789372	BreakStatement	break ;	613:3:13819:13824	1789303	20	True				
ANR	1789373	Label	case '^' :	616:2:13830:13838	1789303	21	True				
ANR	1789374	ExpressionStatement	tokenType = LEX_BITWISE_XOR	617:3:13844:13871	1789303	22	True				
ANR	1789375	AssignmentExpression	tokenType = LEX_BITWISE_XOR		1789303	0		=			
ANR	1789376	Identifier	tokenType		1789303	0					
ANR	1789377	Identifier	LEX_BITWISE_XOR		1789303	1					
ANR	1789378	BreakStatement	break ;	618:3:13877:13882	1789303	23	True				
ANR	1789379	Label	case '?' :	621:2:13888:13896	1789303	24	True				
ANR	1789380	ExpressionStatement	tokenType = LEX_QMARK	622:3:13902:13923	1789303	25	True				
ANR	1789381	AssignmentExpression	tokenType = LEX_QMARK		1789303	0		=			
ANR	1789382	Identifier	tokenType		1789303	0					
ANR	1789383	Identifier	LEX_QMARK		1789303	1					
ANR	1789384	BreakStatement	break ;	623:3:13931:13936	1789303	26	True				
ANR	1789385	Label	case ':' :	626:2:13942:13950	1789303	27	True				
ANR	1789386	ExpressionStatement	tokenType = LEX_COLON	627:3:13956:13977	1789303	28	True				
ANR	1789387	AssignmentExpression	tokenType = LEX_COLON		1789303	0		=			
ANR	1789388	Identifier	tokenType		1789303	0					
ANR	1789389	Identifier	LEX_COLON		1789303	1					
ANR	1789390	BreakStatement	break ;	628:3:13985:13990	1789303	29	True				
ANR	1789391	Label	case ';' :	631:2:13996:14004	1789303	30	True				
ANR	1789392	ExpressionStatement	tokenType = LEX_SEMICOLON	632:3:14010:14035	1789303	31	True				
ANR	1789393	AssignmentExpression	tokenType = LEX_SEMICOLON		1789303	0		=			
ANR	1789394	Identifier	tokenType		1789303	0					
ANR	1789395	Identifier	LEX_SEMICOLON		1789303	1					
ANR	1789396	BreakStatement	break ;	633:3:14042:14047	1789303	32	True				
ANR	1789397	Label	"case ',' :"	636:2:14053:14061	1789303	33	True				
ANR	1789398	ExpressionStatement	tokenType = LEX_COMMA	637:3:14066:14087	1789303	34	True				
ANR	1789399	AssignmentExpression	tokenType = LEX_COMMA		1789303	0		=			
ANR	1789400	Identifier	tokenType		1789303	0					
ANR	1789401	Identifier	LEX_COMMA		1789303	1					
ANR	1789402	BreakStatement	break ;	638:3:14092:14097	1789303	35	True				
ANR	1789403	Label	case '[' :	641:2:14103:14111	1789303	36	True				
ANR	1789404	ExpressionStatement	tokenType = LEX_OPEN_BOX	642:3:14117:14141	1789303	37	True				
ANR	1789405	AssignmentExpression	tokenType = LEX_OPEN_BOX		1789303	0		=			
ANR	1789406	Identifier	tokenType		1789303	0					
ANR	1789407	Identifier	LEX_OPEN_BOX		1789303	1					
ANR	1789408	BreakStatement	break ;	643:3:14148:14153	1789303	38	True				
ANR	1789409	Label	case ']' :	646:2:14159:14167	1789303	39	True				
ANR	1789410	ExpressionStatement	tokenType = LEX_CLOSE_BOX	647:3:14173:14198	1789303	40	True				
ANR	1789411	AssignmentExpression	tokenType = LEX_CLOSE_BOX		1789303	0		=			
ANR	1789412	Identifier	tokenType		1789303	0					
ANR	1789413	Identifier	LEX_CLOSE_BOX		1789303	1					
ANR	1789414	BreakStatement	break ;	648:3:14205:14210	1789303	41	True				
ANR	1789415	Label	case '(' :	651:2:14216:14224	1789303	42	True				
ANR	1789416	ExpressionStatement	tokenType = LEX_OPEN_PAREN	652:3:14230:14256	1789303	43	True				
ANR	1789417	AssignmentExpression	tokenType = LEX_OPEN_PAREN		1789303	0		=			
ANR	1789418	Identifier	tokenType		1789303	0					
ANR	1789419	Identifier	LEX_OPEN_PAREN		1789303	1					
ANR	1789420	BreakStatement	break ;	653:3:14262:14267	1789303	44	True				
ANR	1789421	Label	case ')' :	656:2:14273:14281	1789303	45	True				
ANR	1789422	ExpressionStatement	tokenType = LEX_CLOSE_PAREN	657:3:14287:14314	1789303	46	True				
ANR	1789423	AssignmentExpression	tokenType = LEX_CLOSE_PAREN		1789303	0		=			
ANR	1789424	Identifier	tokenType		1789303	0					
ANR	1789425	Identifier	LEX_CLOSE_PAREN		1789303	1					
ANR	1789426	BreakStatement	break ;	658:3:14320:14325	1789303	47	True				
ANR	1789427	Label	case '{' :	661:2:14331:14339	1789303	48	True				
ANR	1789428	ExpressionStatement	tokenType = LEX_OPEN_BRACE	662:3:14344:14370	1789303	49	True				
ANR	1789429	AssignmentExpression	tokenType = LEX_OPEN_BRACE		1789303	0		=			
ANR	1789430	Identifier	tokenType		1789303	0					
ANR	1789431	Identifier	LEX_OPEN_BRACE		1789303	1					
ANR	1789432	BreakStatement	break ;	663:3:14375:14380	1789303	50	True				
ANR	1789433	Label	case '}' :	666:2:14386:14394	1789303	51	True				
ANR	1789434	ExpressionStatement	tokenType = LEX_CLOSE_BRACE	667:3:14399:14426	1789303	52	True				
ANR	1789435	AssignmentExpression	tokenType = LEX_CLOSE_BRACE		1789303	0		=			
ANR	1789436	Identifier	tokenType		1789303	0					
ANR	1789437	Identifier	LEX_CLOSE_BRACE		1789303	1					
ANR	1789438	BreakStatement	break ;	668:3:14431:14436	1789303	53	True				
ANR	1789439	Label	case '&' :	673:2:14484:14492	1789303	54	True				
ANR	1789440	ExpressionStatement	tokenType = LEX_BITWISE_AND	674:3:14497:14524	1789303	55	True				
ANR	1789441	AssignmentExpression	tokenType = LEX_BITWISE_AND		1789303	0		=			
ANR	1789442	Identifier	tokenType		1789303	0					
ANR	1789443	Identifier	LEX_BITWISE_AND		1789303	1					
ANR	1789444	IfStatement	if ( ch == '&' )		1789303	56					
ANR	1789445	Condition	ch == '&'	675:7:14533:14541	1789303	0	True				
ANR	1789446	EqualityExpression	ch == '&'		1789303	0		==			
ANR	1789447	Identifier	ch		1789303	0					
ANR	1789448	PrimaryExpression	'&'		1789303	1					
ANR	1789449	CompoundStatement		104:18:1260:1260	1789303	1					
ANR	1789450	ExpressionStatement	tokenType = LEX_LOGICAL_AND	676:4:14550:14577	1789303	0	True				
ANR	1789451	AssignmentExpression	tokenType = LEX_LOGICAL_AND		1789303	0		=			
ANR	1789452	Identifier	tokenType		1789303	0					
ANR	1789453	Identifier	LEX_LOGICAL_AND		1789303	1					
ANR	1789454	ExpressionStatement	wind ( )	677:4:14583:14590	1789303	1	True				
ANR	1789455	CallExpression	wind ( )		1789303	0					
ANR	1789456	Callee	wind		1789303	0					
ANR	1789457	Identifier	wind		1789303	0					
ANR	1789458	ArgumentList			1789303	1					
ANR	1789459	BreakStatement	break ;	679:3:14600:14605	1789303	57	True				
ANR	1789460	Label	case '|' :	682:2:14611:14619	1789303	58	True				
ANR	1789461	ExpressionStatement	tokenType = LEX_BITWISE_OR	683:3:14624:14650	1789303	59	True				
ANR	1789462	AssignmentExpression	tokenType = LEX_BITWISE_OR		1789303	0		=			
ANR	1789463	Identifier	tokenType		1789303	0					
ANR	1789464	Identifier	LEX_BITWISE_OR		1789303	1					
ANR	1789465	IfStatement	if ( ch == '|' )		1789303	60					
ANR	1789466	Condition	ch == '|'	684:7:14659:14667	1789303	0	True				
ANR	1789467	EqualityExpression	ch == '|'		1789303	0		==			
ANR	1789468	Identifier	ch		1789303	0					
ANR	1789469	PrimaryExpression	'|'		1789303	1					
ANR	1789470	CompoundStatement		113:18:1386:1386	1789303	1					
ANR	1789471	ExpressionStatement	tokenType = LEX_LOGICAL_OR	685:4:14676:14702	1789303	0	True				
ANR	1789472	AssignmentExpression	tokenType = LEX_LOGICAL_OR		1789303	0		=			
ANR	1789473	Identifier	tokenType		1789303	0					
ANR	1789474	Identifier	LEX_LOGICAL_OR		1789303	1					
ANR	1789475	ExpressionStatement	wind ( )	686:4:14708:14715	1789303	1	True				
ANR	1789476	CallExpression	wind ( )		1789303	0					
ANR	1789477	Callee	wind		1789303	0					
ANR	1789478	Identifier	wind		1789303	0					
ANR	1789479	ArgumentList			1789303	1					
ANR	1789480	BreakStatement	break ;	688:3:14725:14730	1789303	61	True				
ANR	1789481	Label	case '<' :	691:2:14736:14744	1789303	62	True				
ANR	1789482	ExpressionStatement	tokenType = LEX_LESS_THAN	692:3:14749:14774	1789303	63	True				
ANR	1789483	AssignmentExpression	tokenType = LEX_LESS_THAN		1789303	0		=			
ANR	1789484	Identifier	tokenType		1789303	0					
ANR	1789485	Identifier	LEX_LESS_THAN		1789303	1					
ANR	1789486	SwitchStatement	switch ( ch )		1789303	64					
ANR	1789487	Condition	ch	693:11:14787:14788	1789303	0	True				
ANR	1789488	Identifier	ch		1789303	0					
ANR	1789489	CompoundStatement		122:15:1507:1507	1789303	1					
ANR	1789490	Label	case '=' :	694:4:14797:14805	1789303	0	True				
ANR	1789491	ExpressionStatement	tokenType = LEX_LESS_OR_EQUAL	695:5:14812:14841	1789303	1	True				
ANR	1789492	AssignmentExpression	tokenType = LEX_LESS_OR_EQUAL		1789303	0		=			
ANR	1789493	Identifier	tokenType		1789303	0					
ANR	1789494	Identifier	LEX_LESS_OR_EQUAL		1789303	1					
ANR	1789495	ExpressionStatement	wind ( )	696:5:14848:14855	1789303	2	True				
ANR	1789496	CallExpression	wind ( )		1789303	0					
ANR	1789497	Callee	wind		1789303	0					
ANR	1789498	Identifier	wind		1789303	0					
ANR	1789499	ArgumentList			1789303	1					
ANR	1789500	BreakStatement	break ;	697:5:14862:14867	1789303	3	True				
ANR	1789501	Label	case '<' :	699:4:14874:14882	1789303	4	True				
ANR	1789502	ExpressionStatement	tokenType = LEX_LEFT_SHIFT	700:5:14889:14915	1789303	5	True				
ANR	1789503	AssignmentExpression	tokenType = LEX_LEFT_SHIFT		1789303	0		=			
ANR	1789504	Identifier	tokenType		1789303	0					
ANR	1789505	Identifier	LEX_LEFT_SHIFT		1789303	1					
ANR	1789506	ExpressionStatement	wind ( )	701:5:14922:14929	1789303	6	True				
ANR	1789507	CallExpression	wind ( )		1789303	0					
ANR	1789508	Callee	wind		1789303	0					
ANR	1789509	Identifier	wind		1789303	0					
ANR	1789510	ArgumentList			1789303	1					
ANR	1789511	BreakStatement	break ;	702:5:14936:14941	1789303	7	True				
ANR	1789512	Label	default :	704:4:14948:14955	1789303	8	True				
ANR	1789513	Identifier	default		1789303	0					
ANR	1789514	BreakStatement	break ;	706:5:15010:15015	1789303	9	True				
ANR	1789515	BreakStatement	break ;	708:3:15025:15030	1789303	65	True				
ANR	1789516	Label	case '>' :	711:2:15036:15044	1789303	66	True				
ANR	1789517	ExpressionStatement	tokenType = LEX_GREATER_THAN	712:3:15049:15077	1789303	67	True				
ANR	1789518	AssignmentExpression	tokenType = LEX_GREATER_THAN		1789303	0		=			
ANR	1789519	Identifier	tokenType		1789303	0					
ANR	1789520	Identifier	LEX_GREATER_THAN		1789303	1					
ANR	1789521	SwitchStatement	switch ( ch )		1789303	68					
ANR	1789522	Condition	ch	713:11:15090:15091	1789303	0	True				
ANR	1789523	Identifier	ch		1789303	0					
ANR	1789524	CompoundStatement		142:15:1810:1810	1789303	1					
ANR	1789525	Label	case '=' :	714:4:15100:15108	1789303	0	True				
ANR	1789526	ExpressionStatement	tokenType = LEX_GREATER_OR_EQUAL	715:5:15115:15147	1789303	1	True				
ANR	1789527	AssignmentExpression	tokenType = LEX_GREATER_OR_EQUAL		1789303	0		=			
ANR	1789528	Identifier	tokenType		1789303	0					
ANR	1789529	Identifier	LEX_GREATER_OR_EQUAL		1789303	1					
ANR	1789530	ExpressionStatement	wind ( )	716:5:15154:15161	1789303	2	True				
ANR	1789531	CallExpression	wind ( )		1789303	0					
ANR	1789532	Callee	wind		1789303	0					
ANR	1789533	Identifier	wind		1789303	0					
ANR	1789534	ArgumentList			1789303	1					
ANR	1789535	BreakStatement	break ;	717:5:15168:15173	1789303	3	True				
ANR	1789536	Label	case '>' :	719:4:15180:15188	1789303	4	True				
ANR	1789537	ExpressionStatement	tokenType = LEX_RIGHT_SHIFT	720:5:15195:15222	1789303	5	True				
ANR	1789538	AssignmentExpression	tokenType = LEX_RIGHT_SHIFT		1789303	0		=			
ANR	1789539	Identifier	tokenType		1789303	0					
ANR	1789540	Identifier	LEX_RIGHT_SHIFT		1789303	1					
ANR	1789541	ExpressionStatement	wind ( )	721:5:15229:15236	1789303	6	True				
ANR	1789542	CallExpression	wind ( )		1789303	0					
ANR	1789543	Callee	wind		1789303	0					
ANR	1789544	Identifier	wind		1789303	0					
ANR	1789545	ArgumentList			1789303	1					
ANR	1789546	IfStatement	if ( ch == '>' )		1789303	7					
ANR	1789547	Condition	ch == '>'	722:9:15247:15255	1789303	0	True				
ANR	1789548	EqualityExpression	ch == '>'		1789303	0		==			
ANR	1789549	Identifier	ch		1789303	0					
ANR	1789550	PrimaryExpression	'>'		1789303	1					
ANR	1789551	CompoundStatement		151:20:1974:1974	1789303	1					
ANR	1789552	ExpressionStatement	tokenType = LEX_URIGHT_SHIFT	723:6:15266:15294	1789303	0	True				
ANR	1789553	AssignmentExpression	tokenType = LEX_URIGHT_SHIFT		1789303	0		=			
ANR	1789554	Identifier	tokenType		1789303	0					
ANR	1789555	Identifier	LEX_URIGHT_SHIFT		1789303	1					
ANR	1789556	ExpressionStatement	wind ( )	724:6:15302:15309	1789303	1	True				
ANR	1789557	CallExpression	wind ( )		1789303	0					
ANR	1789558	Callee	wind		1789303	0					
ANR	1789559	Identifier	wind		1789303	0					
ANR	1789560	ArgumentList			1789303	1					
ANR	1789561	BreakStatement	break ;	726:5:15323:15328	1789303	8	True				
ANR	1789562	Label	default :	728:4:15339:15346	1789303	9	True				
ANR	1789563	Identifier	default		1789303	0					
ANR	1789564	BreakStatement	break ;	730:5:15401:15406	1789303	10	True				
ANR	1789565	BreakStatement	break ;	732:3:15416:15421	1789303	69	True				
ANR	1789566	Label	case '=' :	735:2:15427:15435	1789303	70	True				
ANR	1789567	ExpressionStatement	tokenType = LEX_BOUND_TO	736:3:15440:15464	1789303	71	True				
ANR	1789568	AssignmentExpression	tokenType = LEX_BOUND_TO		1789303	0		=			
ANR	1789569	Identifier	tokenType		1789303	0					
ANR	1789570	Identifier	LEX_BOUND_TO		1789303	1					
ANR	1789571	SwitchStatement	switch ( ch )		1789303	72					
ANR	1789572	Condition	ch	737:11:15477:15478	1789303	0	True				
ANR	1789573	Identifier	ch		1789303	0					
ANR	1789574	CompoundStatement		166:15:2197:2197	1789303	1					
ANR	1789575	Label	case '=' :	738:4:15487:15495	1789303	0	True				
ANR	1789576	ExpressionStatement	tokenType = LEX_EQUAL	739:5:15502:15523	1789303	1	True				
ANR	1789577	AssignmentExpression	tokenType = LEX_EQUAL		1789303	0		=			
ANR	1789578	Identifier	tokenType		1789303	0					
ANR	1789579	Identifier	LEX_EQUAL		1789303	1					
ANR	1789580	ExpressionStatement	wind ( )	740:5:15530:15537	1789303	2	True				
ANR	1789581	CallExpression	wind ( )		1789303	0					
ANR	1789582	Callee	wind		1789303	0					
ANR	1789583	Identifier	wind		1789303	0					
ANR	1789584	ArgumentList			1789303	1					
ANR	1789585	BreakStatement	break ;	741:5:15544:15549	1789303	3	True				
ANR	1789586	Label	case '?' :	743:4:15556:15564	1789303	4	True				
ANR	1789587	ExpressionStatement	tokenType = LEX_META_EQUAL	744:5:15571:15597	1789303	5	True				
ANR	1789588	AssignmentExpression	tokenType = LEX_META_EQUAL		1789303	0		=			
ANR	1789589	Identifier	tokenType		1789303	0					
ANR	1789590	Identifier	LEX_META_EQUAL		1789303	1					
ANR	1789591	ExpressionStatement	wind ( )	745:5:15604:15611	1789303	6	True				
ANR	1789592	CallExpression	wind ( )		1789303	0					
ANR	1789593	Callee	wind		1789303	0					
ANR	1789594	Identifier	wind		1789303	0					
ANR	1789595	ArgumentList			1789303	1					
ANR	1789596	IfStatement	if ( ch != '=' )		1789303	7					
ANR	1789597	Condition	ch != '='	748:9:15680:15688	1789303	0	True				
ANR	1789598	EqualityExpression	ch != '='		1789303	0		!=			
ANR	1789599	Identifier	ch		1789303	0					
ANR	1789600	PrimaryExpression	'='		1789303	1					
ANR	1789601	CompoundStatement		178:5:2413:2413	1789303	1					
ANR	1789602	ExpressionStatement	tokenType = LEX_TOKEN_ERROR	750:6:15705:15732	1789303	0	True				
ANR	1789603	AssignmentExpression	tokenType = LEX_TOKEN_ERROR		1789303	0		=			
ANR	1789604	Identifier	tokenType		1789303	0					
ANR	1789605	Identifier	LEX_TOKEN_ERROR		1789303	1					
ANR	1789606	ReturnStatement	return tokenType ;	751:6:15740:15756	1789303	1	True				
ANR	1789607	Identifier	tokenType		1789303	0					
ANR	1789608	ExpressionStatement	wind ( )	754:5:15771:15778	1789303	8	True				
ANR	1789609	CallExpression	wind ( )		1789303	0					
ANR	1789610	Callee	wind		1789303	0					
ANR	1789611	Identifier	wind		1789303	0					
ANR	1789612	ArgumentList			1789303	1					
ANR	1789613	BreakStatement	break ;	755:5:15785:15790	1789303	9	True				
ANR	1789614	Label	case '!' :	757:4:15797:15805	1789303	10	True				
ANR	1789615	ExpressionStatement	extra_lookahead = lexSource -> ReadCharacter ( )	758:5:15812:15856	1789303	11	True				
ANR	1789616	AssignmentExpression	extra_lookahead = lexSource -> ReadCharacter ( )		1789303	0		=			
ANR	1789617	Identifier	extra_lookahead		1789303	0					
ANR	1789618	CallExpression	lexSource -> ReadCharacter ( )		1789303	1					
ANR	1789619	Callee	lexSource -> ReadCharacter		1789303	0					
ANR	1789620	PtrMemberAccess	lexSource -> ReadCharacter		1789303	0					
ANR	1789621	Identifier	lexSource		1789303	0					
ANR	1789622	Identifier	ReadCharacter		1789303	1					
ANR	1789623	ArgumentList			1789303	1					
ANR	1789624	ExpressionStatement	lexSource -> UnreadCharacter ( )	759:5:15863:15891	1789303	12	True				
ANR	1789625	CallExpression	lexSource -> UnreadCharacter ( )		1789303	0					
ANR	1789626	Callee	lexSource -> UnreadCharacter		1789303	0					
ANR	1789627	PtrMemberAccess	lexSource -> UnreadCharacter		1789303	0					
ANR	1789628	Identifier	lexSource		1789303	0					
ANR	1789629	Identifier	UnreadCharacter		1789303	1					
ANR	1789630	ArgumentList			1789303	1					
ANR	1789631	IfStatement	if ( extra_lookahead == '=' )		1789303	13					
ANR	1789632	Condition	extra_lookahead == '='	760:9:15902:15923	1789303	0	True				
ANR	1789633	EqualityExpression	extra_lookahead == '='		1789303	0		==			
ANR	1789634	Identifier	extra_lookahead		1789303	0					
ANR	1789635	PrimaryExpression	'='		1789303	1					
ANR	1789636	CompoundStatement		189:33:2642:2642	1789303	1					
ANR	1789637	ExpressionStatement	tokenType = LEX_META_NOT_EQUAL	761:6:15934:15964	1789303	0	True				
ANR	1789638	AssignmentExpression	tokenType = LEX_META_NOT_EQUAL		1789303	0		=			
ANR	1789639	Identifier	tokenType		1789303	0					
ANR	1789640	Identifier	LEX_META_NOT_EQUAL		1789303	1					
ANR	1789641	ExpressionStatement	wind ( )	762:6:15972:15978	1789303	1	True				
ANR	1789642	CallExpression	wind ( )		1789303	0					
ANR	1789643	Callee	wind		1789303	0					
ANR	1789644	Identifier	wind		1789303	0					
ANR	1789645	ArgumentList			1789303	1					
ANR	1789646	ExpressionStatement	wind ( )	763:6:15986:15992	1789303	2	True				
ANR	1789647	CallExpression	wind ( )		1789303	0					
ANR	1789648	Callee	wind		1789303	0					
ANR	1789649	Identifier	wind		1789303	0					
ANR	1789650	ArgumentList			1789303	1					
ANR	1789651	BreakStatement	break ;	765:5:16006:16011	1789303	14	True				
ANR	1789652	Label	default :	767:4:16018:16025	1789303	15	True				
ANR	1789653	Identifier	default		1789303	0					
ANR	1789654	BreakStatement	break ;	769:5:16080:16085	1789303	16	True				
ANR	1789655	BreakStatement	break ;	771:3:16095:16100	1789303	73	True				
ANR	1789656	Label	case '!' :	774:2:16106:16114	1789303	74	True				
ANR	1789657	ExpressionStatement	tokenType = LEX_LOGICAL_NOT	775:3:16119:16146	1789303	75	True				
ANR	1789658	AssignmentExpression	tokenType = LEX_LOGICAL_NOT		1789303	0		=			
ANR	1789659	Identifier	tokenType		1789303	0					
ANR	1789660	Identifier	LEX_LOGICAL_NOT		1789303	1					
ANR	1789661	SwitchStatement	switch ( ch )		1789303	76					
ANR	1789662	Condition	ch	776:11:16159:16160	1789303	0	True				
ANR	1789663	Identifier	ch		1789303	0					
ANR	1789664	CompoundStatement		205:15:2879:2879	1789303	1					
ANR	1789665	Label	case '=' :	777:4:16169:16177	1789303	0	True				
ANR	1789666	ExpressionStatement	tokenType = LEX_NOT_EQUAL	778:5:16184:16209	1789303	1	True				
ANR	1789667	AssignmentExpression	tokenType = LEX_NOT_EQUAL		1789303	0		=			
ANR	1789668	Identifier	tokenType		1789303	0					
ANR	1789669	Identifier	LEX_NOT_EQUAL		1789303	1					
ANR	1789670	ExpressionStatement	wind ( )	779:5:16216:16223	1789303	2	True				
ANR	1789671	CallExpression	wind ( )		1789303	0					
ANR	1789672	Callee	wind		1789303	0					
ANR	1789673	Identifier	wind		1789303	0					
ANR	1789674	ArgumentList			1789303	1					
ANR	1789675	BreakStatement	break ;	780:5:16230:16235	1789303	3	True				
ANR	1789676	Label	default :	782:4:16242:16249	1789303	4	True				
ANR	1789677	Identifier	default		1789303	0					
ANR	1789678	BreakStatement	break ;	784:5:16304:16309	1789303	5	True				
ANR	1789679	BreakStatement	break ;	786:3:16319:16324	1789303	77	True				
ANR	1789680	Label	default :	789:2:16330:16337	1789303	78	True				
ANR	1789681	Identifier	default		1789303	0					
ANR	1789682	ExpressionStatement	tokenType = LEX_TOKEN_ERROR	790:3:16342:16369	1789303	79	True				
ANR	1789683	AssignmentExpression	tokenType = LEX_TOKEN_ERROR		1789303	0		=			
ANR	1789684	Identifier	tokenType		1789303	0					
ANR	1789685	Identifier	LEX_TOKEN_ERROR		1789303	1					
ANR	1789686	ReturnStatement	return tokenType ;	791:3:16374:16390	1789303	80	True				
ANR	1789687	Identifier	tokenType		1789303	0					
ANR	1789688	ExpressionStatement	cut ( )	795:1:16427:16433	1789303	5	True				
ANR	1789689	CallExpression	cut ( )		1789303	0					
ANR	1789690	Callee	cut		1789303	0					
ANR	1789691	Identifier	cut		1789303	0					
ANR	1789692	ArgumentList			1789303	1					
ANR	1789693	ReturnStatement	return tokenType ;	797:1:16437:16453	1789303	6	True				
ANR	1789694	Identifier	tokenType		1789303	0					
ANR	1789695	ReturnType	int		1789303	1					
ANR	1789696	Identifier	Lexer :: tokenizePunctOperator		1789303	2					
ANR	1789697	ParameterList			1789303	3					
ANR	1789698	CFGEntryNode	ENTRY		1789303		True				
ANR	1789699	CFGExitNode	EXIT		1789303		True				
ANR	1789700	Symbol	LEX_BITWISE_NOT		1789303						
ANR	1789701	Symbol	oldch		1789303						
ANR	1789702	Symbol	LEX_QMARK		1789303						
ANR	1789703	Symbol	LEX_MULTIPLY		1789303						
ANR	1789704	Symbol	LEX_BITWISE_XOR		1789303						
ANR	1789705	Symbol	LEX_LOGICAL_AND		1789303						
ANR	1789706	Symbol	LEX_TOKEN_ERROR		1789303						
ANR	1789707	Symbol	LEX_CLOSE_BOX		1789303						
ANR	1789708	Symbol	LEX_BITWISE_AND		1789303						
ANR	1789709	Symbol	lexSource		1789303						
ANR	1789710	Symbol	LEX_URIGHT_SHIFT		1789303						
ANR	1789711	Symbol	extra_lookahead		1789303						
ANR	1789712	Symbol	LEX_LOGICAL_OR		1789303						
ANR	1789713	Symbol	LEX_LESS_THAN		1789303						
ANR	1789714	Symbol	LEX_CLOSE_PAREN		1789303						
ANR	1789715	Symbol	LEX_SELECTION		1789303						
ANR	1789716	Symbol	LEX_OPEN_BOX		1789303						
ANR	1789717	Symbol	LEX_META_EQUAL		1789303						
ANR	1789718	Symbol	LEX_NOT_EQUAL		1789303						
ANR	1789719	Symbol	LEX_RIGHT_SHIFT		1789303						
ANR	1789720	Symbol	LEX_EQUAL		1789303						
ANR	1789721	Symbol	ch		1789303						
ANR	1789722	Symbol	LEX_GREATER_THAN		1789303						
ANR	1789723	Symbol	LEX_COLON		1789303						
ANR	1789724	Symbol	LEX_GREATER_OR_EQUAL		1789303						
ANR	1789725	Symbol	LEX_BOUND_TO		1789303						
ANR	1789726	Symbol	LEX_PLUS		1789303						
ANR	1789727	Symbol	LEX_OPEN_PAREN		1789303						
ANR	1789728	Symbol	LEX_MODULUS		1789303						
ANR	1789729	Symbol	LEX_COMMA		1789303						
ANR	1789730	Symbol	LEX_LEFT_SHIFT		1789303						
ANR	1789731	Symbol	* lexSource		1789303						
ANR	1789732	Symbol	lexSource -> ReadCharacter		1789303						
ANR	1789733	Symbol	LEX_CLOSE_BRACE		1789303						
ANR	1789734	Symbol	LEX_MINUS		1789303						
ANR	1789735	Symbol	LEX_META_NOT_EQUAL		1789303						
ANR	1789736	Symbol	LEX_DIVIDE		1789303						
ANR	1789737	Symbol	LEX_LOGICAL_NOT		1789303						
ANR	1789738	Symbol	LEX_LESS_OR_EQUAL		1789303						
ANR	1789739	Symbol	tokenType		1789303						
ANR	1789740	Symbol	LEX_SEMICOLON		1789303						
ANR	1789741	Symbol	LEX_OPEN_BRACE		1789303						
ANR	1789742	Symbol	LEX_BITWISE_OR		1789303						
ANR	1789743	Function	Lexer :: strLexToken	802:0:16519:19506							
ANR	1789744	FunctionDef	Lexer :: strLexToken (int tokenValue)		1789743	0					
ANR	1789745	CompoundStatement		804:0:16568:19506	1789743	0					
ANR	1789746	SwitchStatement	switch ( tokenValue )		1789743	0					
ANR	1789747	Condition	tokenValue	805:9:16579:16588	1789743	0	True				
ANR	1789748	Identifier	tokenValue		1789743	0					
ANR	1789749	CompoundStatement		2:21:22:22	1789743	1					
ANR	1789750	Label	case LEX_END_OF_INPUT :	806:2:16595:16616	1789743	0	True				
ANR	1789751	Identifier	LEX_END_OF_INPUT		1789743	0					
ANR	1789752	ReturnStatement	"return ""LEX_END_OF_INPUT"" ;"	806:35:16628:16653	1789743	1	True				
ANR	1789753	PrimaryExpression	"""LEX_END_OF_INPUT"""		1789743	0					
ANR	1789754	Label	case LEX_TOKEN_ERROR :	807:2:16657:16677	1789743	2	True				
ANR	1789755	Identifier	LEX_TOKEN_ERROR		1789743	0					
ANR	1789756	ReturnStatement	"return ""LEX_TOKEN_ERROR"" ;"	807:35:16690:16714	1789743	3	True				
ANR	1789757	PrimaryExpression	"""LEX_TOKEN_ERROR"""		1789743	0					
ANR	1789758	Label	case LEX_TOKEN_TOO_LONG :	808:2:16718:16741	1789743	4	True				
ANR	1789759	Identifier	LEX_TOKEN_TOO_LONG		1789743	0					
ANR	1789760	ReturnStatement	"return ""LEX_TOKEN_TOO_LONG"" ;"	808:35:16751:16778	1789743	5	True				
ANR	1789761	PrimaryExpression	"""LEX_TOKEN_TOO_LONG"""		1789743	0					
ANR	1789762	Label	case LEX_INTEGER_VALUE :	810:2:16783:16805	1789743	6	True				
ANR	1789763	Identifier	LEX_INTEGER_VALUE		1789743	0					
ANR	1789764	ReturnStatement	"return ""LEX_INTEGER_VALUE"" ;"	810:35:16816:16842	1789743	7	True				
ANR	1789765	PrimaryExpression	"""LEX_INTEGER_VALUE"""		1789743	0					
ANR	1789766	Label	case LEX_REAL_VALUE :	811:2:16846:16865	1789743	8	True				
ANR	1789767	Identifier	LEX_REAL_VALUE		1789743	0					
ANR	1789768	ReturnStatement	"return ""LEX_REAL_VALUE"" ;"	811:35:16879:16902	1789743	9	True				
ANR	1789769	PrimaryExpression	"""LEX_REAL_VALUE"""		1789743	0					
ANR	1789770	Label	case LEX_BOOLEAN_VALUE :	812:2:16906:16928	1789743	10	True				
ANR	1789771	Identifier	LEX_BOOLEAN_VALUE		1789743	0					
ANR	1789772	ReturnStatement	"return ""LEX_BOOLEAN_VALUE"" ;"	812:35:16939:16965	1789743	11	True				
ANR	1789773	PrimaryExpression	"""LEX_BOOLEAN_VALUE"""		1789743	0					
ANR	1789774	Label	case LEX_STRING_VALUE :	813:2:16969:16990	1789743	12	True				
ANR	1789775	Identifier	LEX_STRING_VALUE		1789743	0					
ANR	1789776	ReturnStatement	"return ""LEX_STRING_VALUE"" ;"	813:35:17002:17027	1789743	13	True				
ANR	1789777	PrimaryExpression	"""LEX_STRING_VALUE"""		1789743	0					
ANR	1789778	Label	case LEX_UNDEFINED_VALUE :	814:2:17031:17055	1789743	14	True				
ANR	1789779	Identifier	LEX_UNDEFINED_VALUE		1789743	0					
ANR	1789780	ReturnStatement	"return ""LEX_UNDEFINED_VALUE"" ;"	814:35:17064:17092	1789743	15	True				
ANR	1789781	PrimaryExpression	"""LEX_UNDEFINED_VALUE"""		1789743	0					
ANR	1789782	Label	case LEX_ERROR_VALUE :	815:2:17096:17116	1789743	16	True				
ANR	1789783	Identifier	LEX_ERROR_VALUE		1789743	0					
ANR	1789784	ReturnStatement	"return ""LEX_ERROR_VALUE"" ;"	815:35:17129:17153	1789743	17	True				
ANR	1789785	PrimaryExpression	"""LEX_ERROR_VALUE"""		1789743	0					
ANR	1789786	Label	case LEX_IDENTIFIER :	817:2:17158:17177	1789743	18	True				
ANR	1789787	Identifier	LEX_IDENTIFIER		1789743	0					
ANR	1789788	ReturnStatement	"return ""LEX_IDENTIFIER"" ;"	817:35:17191:17214	1789743	19	True				
ANR	1789789	PrimaryExpression	"""LEX_IDENTIFIER"""		1789743	0					
ANR	1789790	Label	case LEX_SELECTION :	818:2:17218:17236	1789743	20	True				
ANR	1789791	Identifier	LEX_SELECTION		1789743	0					
ANR	1789792	ReturnStatement	"return ""LEX_SELECTION"" ;"	818:31:17247:17269	1789743	21	True				
ANR	1789793	PrimaryExpression	"""LEX_SELECTION"""		1789743	0					
ANR	1789794	Label	case LEX_MULTIPLY :	820:2:17274:17291	1789743	22	True				
ANR	1789795	Identifier	LEX_MULTIPLY		1789743	0					
ANR	1789796	ReturnStatement	"return ""LEX_MULTIPLY"" ;"	820:35:17307:17328	1789743	23	True				
ANR	1789797	PrimaryExpression	"""LEX_MULTIPLY"""		1789743	0					
ANR	1789798	Label	case LEX_DIVIDE :	821:2:17332:17347	1789743	24	True				
ANR	1789799	Identifier	LEX_DIVIDE		1789743	0					
ANR	1789800	ReturnStatement	"return ""LEX_DIVIDE"" ;"	821:35:17365:17384	1789743	25	True				
ANR	1789801	PrimaryExpression	"""LEX_DIVIDE"""		1789743	0					
ANR	1789802	Label	case LEX_MODULUS :	822:2:17388:17404	1789743	26	True				
ANR	1789803	Identifier	LEX_MODULUS		1789743	0					
ANR	1789804	ReturnStatement	"return ""LEX_MODULUS"" ;"	822:35:17421:17441	1789743	27	True				
ANR	1789805	PrimaryExpression	"""LEX_MODULUS"""		1789743	0					
ANR	1789806	Label	case LEX_PLUS :	823:2:17445:17458	1789743	28	True				
ANR	1789807	Identifier	LEX_PLUS		1789743	0					
ANR	1789808	ReturnStatement	"return ""LEX_PLUS"" ;"	823:35:17478:17495	1789743	29	True				
ANR	1789809	PrimaryExpression	"""LEX_PLUS"""		1789743	0					
ANR	1789810	Label	case LEX_MINUS :	824:2:17499:17513	1789743	30	True				
ANR	1789811	Identifier	LEX_MINUS		1789743	0					
ANR	1789812	ReturnStatement	"return ""LEX_MINUS"" ;"	824:35:17532:17550	1789743	31	True				
ANR	1789813	PrimaryExpression	"""LEX_MINUS"""		1789743	0					
ANR	1789814	Label	case LEX_BITWISE_AND :	826:2:17555:17575	1789743	32	True				
ANR	1789815	Identifier	LEX_BITWISE_AND		1789743	0					
ANR	1789816	ReturnStatement	"return ""LEX_BITWISE_AND"" ;"	826:35:17588:17612	1789743	33	True				
ANR	1789817	PrimaryExpression	"""LEX_BITWISE_AND"""		1789743	0					
ANR	1789818	Label	case LEX_BITWISE_OR :	827:2:17616:17635	1789743	34	True				
ANR	1789819	Identifier	LEX_BITWISE_OR		1789743	0					
ANR	1789820	ReturnStatement	"return ""LEX_BITWISE_OR"" ;"	827:35:17649:17672	1789743	35	True				
ANR	1789821	PrimaryExpression	"""LEX_BITWISE_OR"""		1789743	0					
ANR	1789822	Label	case LEX_BITWISE_NOT :	828:2:17676:17696	1789743	36	True				
ANR	1789823	Identifier	LEX_BITWISE_NOT		1789743	0					
ANR	1789824	ReturnStatement	"return ""LEX_BITWISE_NOT"" ;"	828:35:17709:17733	1789743	37	True				
ANR	1789825	PrimaryExpression	"""LEX_BITWISE_NOT"""		1789743	0					
ANR	1789826	Label	case LEX_BITWISE_XOR :	829:2:17737:17757	1789743	38	True				
ANR	1789827	Identifier	LEX_BITWISE_XOR		1789743	0					
ANR	1789828	ReturnStatement	"return ""LEX_BITWISE_XOR"" ;"	829:35:17770:17794	1789743	39	True				
ANR	1789829	PrimaryExpression	"""LEX_BITWISE_XOR"""		1789743	0					
ANR	1789830	Label	case LEX_LEFT_SHIFT :	831:2:17799:17818	1789743	40	True				
ANR	1789831	Identifier	LEX_LEFT_SHIFT		1789743	0					
ANR	1789832	ReturnStatement	"return ""LEX_LEFT_SHIFT"" ;"	831:35:17832:17855	1789743	41	True				
ANR	1789833	PrimaryExpression	"""LEX_LEFT_SHIFT"""		1789743	0					
ANR	1789834	Label	case LEX_RIGHT_SHIFT :	832:2:17859:17879	1789743	42	True				
ANR	1789835	Identifier	LEX_RIGHT_SHIFT		1789743	0					
ANR	1789836	ReturnStatement	"return ""LEX_RIGHT_SHIFT"" ;"	832:30:17887:17911	1789743	43	True				
ANR	1789837	PrimaryExpression	"""LEX_RIGHT_SHIFT"""		1789743	0					
ANR	1789838	Label	case LEX_URIGHT_SHIFT :	833:2:17915:17936	1789743	44	True				
ANR	1789839	Identifier	LEX_URIGHT_SHIFT		1789743	0					
ANR	1789840	ReturnStatement	"return ""LEX_URIGHT_SHIFT"" ;"	833:32:17945:17970	1789743	45	True				
ANR	1789841	PrimaryExpression	"""LEX_URIGHT_SHIFT"""		1789743	0					
ANR	1789842	Label	case LEX_LOGICAL_AND :	835:2:17975:17995	1789743	46	True				
ANR	1789843	Identifier	LEX_LOGICAL_AND		1789743	0					
ANR	1789844	ReturnStatement	"return ""LEX_LOGICAL_AND"" ;"	835:35:18008:18032	1789743	47	True				
ANR	1789845	PrimaryExpression	"""LEX_LOGICAL_AND"""		1789743	0					
ANR	1789846	Label	case LEX_LOGICAL_OR :	836:2:18036:18055	1789743	48	True				
ANR	1789847	Identifier	LEX_LOGICAL_OR		1789743	0					
ANR	1789848	ReturnStatement	"return ""LEX_LOGICAL_OR"" ;"	836:35:18069:18092	1789743	49	True				
ANR	1789849	PrimaryExpression	"""LEX_LOGICAL_OR"""		1789743	0					
ANR	1789850	Label	case LEX_LOGICAL_NOT :	837:2:18096:18116	1789743	50	True				
ANR	1789851	Identifier	LEX_LOGICAL_NOT		1789743	0					
ANR	1789852	ReturnStatement	"return ""LEX_LOGICAL_NOT"" ;"	837:35:18129:18153	1789743	51	True				
ANR	1789853	PrimaryExpression	"""LEX_LOGICAL_NOT"""		1789743	0					
ANR	1789854	Label	case LEX_LESS_THAN :	839:2:18158:18176	1789743	52	True				
ANR	1789855	Identifier	LEX_LESS_THAN		1789743	0					
ANR	1789856	ReturnStatement	"return ""LEX_LESS_THAN"" ;"	839:35:18191:18213	1789743	53	True				
ANR	1789857	PrimaryExpression	"""LEX_LESS_THAN"""		1789743	0					
ANR	1789858	Label	case LEX_LESS_OR_EQUAL :	840:2:18217:18239	1789743	54	True				
ANR	1789859	Identifier	LEX_LESS_OR_EQUAL		1789743	0					
ANR	1789860	ReturnStatement	"return ""LEX_LESS_OR_EQUAL"" ;"	840:35:18250:18276	1789743	55	True				
ANR	1789861	PrimaryExpression	"""LEX_LESS_OR_EQUAL"""		1789743	0					
ANR	1789862	Label	case LEX_GREATER_THAN :	841:2:18280:18301	1789743	56	True				
ANR	1789863	Identifier	LEX_GREATER_THAN		1789743	0					
ANR	1789864	ReturnStatement	"return ""LEX_GREATER_THAN"" ;"	841:35:18313:18338	1789743	57	True				
ANR	1789865	PrimaryExpression	"""LEX_GREATER_THAN"""		1789743	0					
ANR	1789866	Label	case LEX_GREATER_OR_EQUAL :	842:2:18342:18367	1789743	58	True				
ANR	1789867	Identifier	LEX_GREATER_OR_EQUAL		1789743	0					
ANR	1789868	ReturnStatement	"return ""LEX_GREATER_OR_EQUAL"" ;"	842:35:18375:18404	1789743	59	True				
ANR	1789869	PrimaryExpression	"""LEX_GREATER_OR_EQUAL"""		1789743	0					
ANR	1789870	Label	case LEX_EQUAL :	843:2:18408:18422	1789743	60	True				
ANR	1789871	Identifier	LEX_EQUAL		1789743	0					
ANR	1789872	ReturnStatement	"return ""LEX_EQUAL"" ;"	843:35:18441:18459	1789743	61	True				
ANR	1789873	PrimaryExpression	"""LEX_EQUAL"""		1789743	0					
ANR	1789874	Label	case LEX_NOT_EQUAL :	844:2:18463:18481	1789743	62	True				
ANR	1789875	Identifier	LEX_NOT_EQUAL		1789743	0					
ANR	1789876	ReturnStatement	"return ""LEX_NOT_EQUAL"" ;"	844:35:18496:18518	1789743	63	True				
ANR	1789877	PrimaryExpression	"""LEX_NOT_EQUAL"""		1789743	0					
ANR	1789878	Label	case LEX_META_EQUAL :	845:2:18522:18541	1789743	64	True				
ANR	1789879	Identifier	LEX_META_EQUAL		1789743	0					
ANR	1789880	ReturnStatement	"return ""LEX_META_EQUAL"" ;"	845:35:18555:18578	1789743	65	True				
ANR	1789881	PrimaryExpression	"""LEX_META_EQUAL"""		1789743	0					
ANR	1789882	Label	case LEX_META_NOT_EQUAL :	846:2:18582:18605	1789743	66	True				
ANR	1789883	Identifier	LEX_META_NOT_EQUAL		1789743	0					
ANR	1789884	ReturnStatement	"return ""LEX_META_NOT_EQUAL"" ;"	846:35:18615:18642	1789743	67	True				
ANR	1789885	PrimaryExpression	"""LEX_META_NOT_EQUAL"""		1789743	0					
ANR	1789886	Label	case LEX_BOUND_TO :	848:2:18647:18664	1789743	68	True				
ANR	1789887	Identifier	LEX_BOUND_TO		1789743	0					
ANR	1789888	ReturnStatement	"return ""LEX_BOUND_TO"" ;"	848:35:18680:18701	1789743	69	True				
ANR	1789889	PrimaryExpression	"""LEX_BOUND_TO"""		1789743	0					
ANR	1789890	Label	case LEX_QMARK :	850:2:18706:18720	1789743	70	True				
ANR	1789891	Identifier	LEX_QMARK		1789743	0					
ANR	1789892	ReturnStatement	"return ""LEX_QMARK"" ;"	850:35:18739:18757	1789743	71	True				
ANR	1789893	PrimaryExpression	"""LEX_QMARK"""		1789743	0					
ANR	1789894	Label	case LEX_COLON :	851:2:18761:18775	1789743	72	True				
ANR	1789895	Identifier	LEX_COLON		1789743	0					
ANR	1789896	ReturnStatement	"return ""LEX_COLON"" ;"	851:35:18794:18812	1789743	73	True				
ANR	1789897	PrimaryExpression	"""LEX_COLON"""		1789743	0					
ANR	1789898	Label	case LEX_SEMICOLON :	852:2:18816:18834	1789743	74	True				
ANR	1789899	Identifier	LEX_SEMICOLON		1789743	0					
ANR	1789900	ReturnStatement	"return ""LEX_SEMICOLON"" ;"	852:35:18849:18871	1789743	75	True				
ANR	1789901	PrimaryExpression	"""LEX_SEMICOLON"""		1789743	0					
ANR	1789902	Label	case LEX_COMMA :	853:2:18875:18889	1789743	76	True				
ANR	1789903	Identifier	LEX_COMMA		1789743	0					
ANR	1789904	ReturnStatement	"return ""LEX_COMMA"" ;"	853:23:18896:18914	1789743	77	True				
ANR	1789905	PrimaryExpression	"""LEX_COMMA"""		1789743	0					
ANR	1789906	Label	case LEX_OPEN_BOX :	854:2:18918:18935	1789743	78	True				
ANR	1789907	Identifier	LEX_OPEN_BOX		1789743	0					
ANR	1789908	ReturnStatement	"return ""LEX_OPEN_BOX"" ;"	854:35:18951:18972	1789743	79	True				
ANR	1789909	PrimaryExpression	"""LEX_OPEN_BOX"""		1789743	0					
ANR	1789910	Label	case LEX_CLOSE_BOX :	855:2:18976:18994	1789743	80	True				
ANR	1789911	Identifier	LEX_CLOSE_BOX		1789743	0					
ANR	1789912	ReturnStatement	"return ""LEX_CLOSE_BOX"" ;"	855:35:19009:19031	1789743	81	True				
ANR	1789913	PrimaryExpression	"""LEX_CLOSE_BOX"""		1789743	0					
ANR	1789914	Label	case LEX_OPEN_PAREN :	856:2:19035:19054	1789743	82	True				
ANR	1789915	Identifier	LEX_OPEN_PAREN		1789743	0					
ANR	1789916	ReturnStatement	"return ""LEX_OPEN_PAREN"" ;"	856:35:19068:19091	1789743	83	True				
ANR	1789917	PrimaryExpression	"""LEX_OPEN_PAREN"""		1789743	0					
ANR	1789918	Label	case LEX_CLOSE_PAREN :	857:2:19095:19115	1789743	84	True				
ANR	1789919	Identifier	LEX_CLOSE_PAREN		1789743	0					
ANR	1789920	ReturnStatement	"return ""LEX_CLOSE_PAREN"" ;"	857:35:19128:19152	1789743	85	True				
ANR	1789921	PrimaryExpression	"""LEX_CLOSE_PAREN"""		1789743	0					
ANR	1789922	Label	case LEX_OPEN_BRACE :	858:2:19156:19175	1789743	86	True				
ANR	1789923	Identifier	LEX_OPEN_BRACE		1789743	0					
ANR	1789924	ReturnStatement	"return ""LEX_OPEN_BRACE"" ;"	858:27:19181:19204	1789743	87	True				
ANR	1789925	PrimaryExpression	"""LEX_OPEN_BRACE"""		1789743	0					
ANR	1789926	Label	case LEX_CLOSE_BRACE :	859:2:19208:19228	1789743	88	True				
ANR	1789927	Identifier	LEX_CLOSE_BRACE		1789743	0					
ANR	1789928	ReturnStatement	"return ""LEX_CLOSE_BRACE"" ;"	859:28:19234:19258	1789743	89	True				
ANR	1789929	PrimaryExpression	"""LEX_CLOSE_BRACE"""		1789743	0					
ANR	1789930	Label	case LEX_BACKSLASH :	860:2:19262:19280	1789743	90	True				
ANR	1789931	Identifier	LEX_BACKSLASH		1789743	0					
ANR	1789932	ReturnStatement	"return ""LEX_BACKSLASH"" ;"	860:35:19295:19317	1789743	91	True				
ANR	1789933	PrimaryExpression	"""LEX_BACKSLASH"""		1789743	0					
ANR	1789934	Label	case LEX_ABSOLUTE_TIME_VALUE :	861:5:19324:19352	1789743	92	True				
ANR	1789935	Identifier	LEX_ABSOLUTE_TIME_VALUE		1789743	0					
ANR	1789936	ReturnStatement	"return ""LEX_ABSOLUTE_TIME_VALUE"" ;"	861:38:19357:19389	1789743	93	True				
ANR	1789937	PrimaryExpression	"""LEX_ABSOLUTE_TIME_VALUE"""		1789743	0					
ANR	1789938	Label	case LEX_RELATIVE_TIME_VALUE :	862:5:19396:19424	1789743	94	True				
ANR	1789939	Identifier	LEX_RELATIVE_TIME_VALUE		1789743	0					
ANR	1789940	ReturnStatement	"return ""LEX_RELATIVE_TIME_VALUE"" ;"	862:38:19429:19461	1789743	95	True				
ANR	1789941	PrimaryExpression	"""LEX_RELATIVE_TIME_VALUE"""		1789743	0					
ANR	1789942	Label	default :	864:2:19466:19473	1789743	96	True				
ANR	1789943	Identifier	default		1789743	0					
ANR	1789944	ReturnStatement	"return ""** Unknown **"" ;"	865:4:19479:19501	1789743	97	True				
ANR	1789945	PrimaryExpression	"""** Unknown **"""		1789743	0					
ANR	1789946	ReturnType	const char *		1789743	1					
ANR	1789947	Identifier	Lexer :: strLexToken		1789743	2					
ANR	1789948	ParameterList	int tokenValue		1789743	3					
ANR	1789949	Parameter	int tokenValue	803:13:16552:16565	1789743	0	True				
ANR	1789950	ParameterType	int		1789743	0					
ANR	1789951	Identifier	tokenValue		1789743	1					
ANR	1789952	CFGEntryNode	ENTRY		1789743		True				
ANR	1789953	CFGExitNode	EXIT		1789743		True				
ANR	1789954	Symbol	tokenValue		1789743						
