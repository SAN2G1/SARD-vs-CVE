command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5239619	File	data/converged/CVE-2011-4930_htcondor/stat_wrapper.cpp								
ANR	5239620	DeclStmt									
ANR	5239621	Decl							extern int	"extern int ( const char * path , struct stat64 * buf )"	stat64
ANR	5239622	DeclStmt									
ANR	5239623	Decl							extern int	"extern int ( const char * path , struct stat64 * buf )"	lstat64
ANR	5239624	DeclStmt									
ANR	5239625	Decl							extern int	"extern int ( int fildes , struct stat64 * buf )"	fstat64
ANR	5239626	DeclStmt									
ANR	5239627	Decl							const char	const char *	STAT_NAME
ANR	5239628	DeclStmt									
ANR	5239629	Decl							const char	const char *	STAT_NAME
ANR	5239630	DeclStmt									
ANR	5239631	Decl							const char	const char *	STAT_NAME
ANR	5239632	DeclStmt									
ANR	5239633	Decl							const char	const char *	LSTAT_NAME
ANR	5239634	DeclStmt									
ANR	5239635	Decl							const char	const char *	LSTAT_NAME
ANR	5239636	DeclStmt									
ANR	5239637	Decl							const char	const char *	LSTAT_NAME
ANR	5239638	DeclStmt									
ANR	5239639	Decl							const char	const char *	LSTAT_NAME
ANR	5239640	DeclStmt									
ANR	5239641	Decl							const char	const char *	FSTAT_NAME
ANR	5239642	DeclStmt									
ANR	5239643	Decl							const char	const char *	FSTAT_NAME
ANR	5239644	DeclStmt									
ANR	5239645	Decl							const char	const char *	FSTAT_NAME
ANR	5239646	ClassDef	StatWrapperOp	83:0:2505:3223							
ANR	5239647	Function	StatWrapperOp	86:1:2536:2838							
ANR	5239648	FunctionDef	"StatWrapperOp (StatWrapperIntBase * stat , StatWrapperIntBase * lstat , StatWrapperIntBase * fstat , StatWrapperIntBase * primary)"		5239647	0					
ANR	5239649	CompoundStatement		90:2:2684:2838	5239647	0					
ANR	5239650	ExpressionStatement	m_stat = stat	91:3:2689:2704	5239647	0	True				
ANR	5239651	AssignmentExpression	m_stat = stat		5239647	0		=			
ANR	5239652	Identifier	m_stat		5239647	0					
ANR	5239653	Identifier	stat		5239647	1					
ANR	5239654	ExpressionStatement	m_lstat = lstat	92:3:2709:2725	5239647	1	True				
ANR	5239655	AssignmentExpression	m_lstat = lstat		5239647	0		=			
ANR	5239656	Identifier	m_lstat		5239647	0					
ANR	5239657	Identifier	lstat		5239647	1					
ANR	5239658	ExpressionStatement	m_fstat = fstat	93:3:2730:2746	5239647	2	True				
ANR	5239659	AssignmentExpression	m_fstat = fstat		5239647	0		=			
ANR	5239660	Identifier	m_fstat		5239647	0					
ANR	5239661	Identifier	fstat		5239647	1					
ANR	5239662	ExpressionStatement	m_all [ 0 ] = stat	95:3:2752:2767	5239647	3	True				
ANR	5239663	AssignmentExpression	m_all [ 0 ] = stat		5239647	0		=			
ANR	5239664	ArrayIndexing	m_all [ 0 ]		5239647	0					
ANR	5239665	Identifier	m_all		5239647	0					
ANR	5239666	PrimaryExpression	0		5239647	1					
ANR	5239667	Identifier	stat		5239647	1					
ANR	5239668	ExpressionStatement	m_all [ 1 ] = lstat	96:3:2772:2788	5239647	4	True				
ANR	5239669	AssignmentExpression	m_all [ 1 ] = lstat		5239647	0		=			
ANR	5239670	ArrayIndexing	m_all [ 1 ]		5239647	0					
ANR	5239671	Identifier	m_all		5239647	0					
ANR	5239672	PrimaryExpression	1		5239647	1					
ANR	5239673	Identifier	lstat		5239647	1					
ANR	5239674	ExpressionStatement	m_all [ 2 ] = fstat	97:3:2793:2809	5239647	5	True				
ANR	5239675	AssignmentExpression	m_all [ 2 ] = fstat		5239647	0		=			
ANR	5239676	ArrayIndexing	m_all [ 2 ]		5239647	0					
ANR	5239677	Identifier	m_all		5239647	0					
ANR	5239678	PrimaryExpression	2		5239647	1					
ANR	5239679	Identifier	fstat		5239647	1					
ANR	5239680	ExpressionStatement	m_primary = primary	99:3:2815:2834	5239647	6	True				
ANR	5239681	AssignmentExpression	m_primary = primary		5239647	0		=			
ANR	5239682	Identifier	m_primary		5239647	0					
ANR	5239683	Identifier	primary		5239647	1					
ANR	5239684	Identifier	StatWrapperOp		5239647	1					
ANR	5239685	ParameterList	"StatWrapperIntBase * stat , StatWrapperIntBase * lstat , StatWrapperIntBase * fstat , StatWrapperIntBase * primary"		5239647	2					
ANR	5239686	Parameter	StatWrapperIntBase * stat	86:16:2551:2574	5239647	0	True				
ANR	5239687	ParameterType	StatWrapperIntBase *		5239647	0					
ANR	5239688	Identifier	stat		5239647	1					
ANR	5239689	Parameter	StatWrapperIntBase * lstat	87:7:2584:2608	5239647	1	True				
ANR	5239690	ParameterType	StatWrapperIntBase *		5239647	0					
ANR	5239691	Identifier	lstat		5239647	1					
ANR	5239692	Parameter	StatWrapperIntBase * fstat	88:7:2618:2642	5239647	2	True				
ANR	5239693	ParameterType	StatWrapperIntBase *		5239647	0					
ANR	5239694	Identifier	fstat		5239647	1					
ANR	5239695	Parameter	StatWrapperIntBase * primary	89:7:2652:2678	5239647	3	True				
ANR	5239696	ParameterType	StatWrapperIntBase *		5239647	0					
ANR	5239697	Identifier	primary		5239647	1					
ANR	5239698	CFGEntryNode	ENTRY		5239647		True				
ANR	5239699	CFGExitNode	EXIT		5239647		True				
ANR	5239700	Symbol	stat		5239647						
ANR	5239701	Symbol	m_all		5239647						
ANR	5239702	Symbol	* m_all		5239647						
ANR	5239703	Symbol	m_lstat		5239647						
ANR	5239704	Symbol	m_stat		5239647						
ANR	5239705	Symbol	lstat		5239647						
ANR	5239706	Symbol	fstat		5239647						
ANR	5239707	Symbol	primary		5239647						
ANR	5239708	Symbol	m_fstat		5239647						
ANR	5239709	Symbol	m_primary		5239647						
ANR	5239710	Function	~StatWrapperOp	101:1:2841:2866							
ANR	5239711	FunctionDef	~StatWrapperOp ()		5239710	1					
ANR	5239712	CompoundStatement		101:24:2864:2866	5239710	0					
ANR	5239713	Identifier	~StatWrapperOp		5239710	1					
ANR	5239714	ParameterList			5239710	2					
ANR	5239715	CFGEntryNode	ENTRY		5239710		True				
ANR	5239716	CFGExitNode	EXIT		5239710		True				
ANR	5239717	DeclStmt									
ANR	5239718	Decl							int	int ( bool force )	StatAll
ANR	5239719	Function	getPrimary	106:1:2938:3000							
ANR	5239720	FunctionDef	getPrimary ()		5239719	3					
ANR	5239721	CompoundStatement		106:40:2977:3000	5239719	0					
ANR	5239722	ReturnStatement	return m_primary ;	107:2:2981:2997	5239719	0	True				
ANR	5239723	Identifier	m_primary		5239719	0					
ANR	5239724	ReturnType	StatWrapperIntBase *		5239719	1					
ANR	5239725	Identifier	getPrimary		5239719	2					
ANR	5239726	ParameterList			5239719	3					
ANR	5239727	CFGEntryNode	ENTRY		5239719		True				
ANR	5239728	CFGExitNode	EXIT		5239719		True				
ANR	5239729	Symbol	m_primary		5239719						
ANR	5239730	Function	getAll	109:1:3003:3058							
ANR	5239731	FunctionDef	getAll ()		5239730	4					
ANR	5239732	CompoundStatement		109:37:3039:3058	5239730	0					
ANR	5239733	ReturnStatement	return m_all ;	110:2:3043:3055	5239730	0	True				
ANR	5239734	Identifier	m_all		5239730	0					
ANR	5239735	ReturnType	StatWrapperIntBase * *		5239730	1					
ANR	5239736	Identifier	getAll		5239730	2					
ANR	5239737	ParameterList			5239730	3					
ANR	5239738	CFGEntryNode	ENTRY		5239730		True				
ANR	5239739	CFGExitNode	EXIT		5239730		True				
ANR	5239740	Symbol	m_all		5239730						
ANR	5239741	DeclStmt									
ANR	5239742	Decl							StatWrapperIntBase	StatWrapperIntBase *	m_stat
ANR	5239743	DeclStmt									
ANR	5239744	Decl							StatWrapperIntBase	StatWrapperIntBase *	m_fstat
ANR	5239745	DeclStmt									
ANR	5239746	Decl							StatWrapperIntBase	StatWrapperIntBase *	m_lstat
ANR	5239747	DeclStmt									
ANR	5239748	Decl							StatWrapperIntBase	StatWrapperIntBase *	m_primary
ANR	5239749	DeclStmt									
ANR	5239750	Decl							StatWrapperIntBase	StatWrapperIntBase * [ 3 ]	m_all
ANR	5239751	Function	StatWrapperOp :: StatAll	122:0:3227:3510							
ANR	5239752	FunctionDef	StatWrapperOp :: StatAll (bool force)		5239751	0					
ANR	5239753	CompoundStatement		124:0:3268:3510	5239751	0					
ANR	5239754	ExpressionStatement	m_stat -> Stat ( force )	125:1:3271:3293	5239751	0	True				
ANR	5239755	CallExpression	m_stat -> Stat ( force )		5239751	0					
ANR	5239756	Callee	m_stat -> Stat		5239751	0					
ANR	5239757	PtrMemberAccess	m_stat -> Stat		5239751	0					
ANR	5239758	Identifier	m_stat		5239751	0					
ANR	5239759	Identifier	Stat		5239751	1					
ANR	5239760	ArgumentList	force		5239751	1					
ANR	5239761	Argument	force		5239751	0					
ANR	5239762	Identifier	force		5239751	0					
ANR	5239763	ExpressionStatement	m_lstat -> Stat ( force )	126:1:3296:3318	5239751	1	True				
ANR	5239764	CallExpression	m_lstat -> Stat ( force )		5239751	0					
ANR	5239765	Callee	m_lstat -> Stat		5239751	0					
ANR	5239766	PtrMemberAccess	m_lstat -> Stat		5239751	0					
ANR	5239767	Identifier	m_lstat		5239751	0					
ANR	5239768	Identifier	Stat		5239751	1					
ANR	5239769	ArgumentList	force		5239751	1					
ANR	5239770	Argument	force		5239751	0					
ANR	5239771	Identifier	force		5239751	0					
ANR	5239772	ExpressionStatement	m_fstat -> Stat ( force )	127:1:3321:3343	5239751	2	True				
ANR	5239773	CallExpression	m_fstat -> Stat ( force )		5239751	0					
ANR	5239774	Callee	m_fstat -> Stat		5239751	0					
ANR	5239775	PtrMemberAccess	m_fstat -> Stat		5239751	0					
ANR	5239776	Identifier	m_fstat		5239751	0					
ANR	5239777	Identifier	Stat		5239751	1					
ANR	5239778	ArgumentList	force		5239751	1					
ANR	5239779	Argument	force		5239751	0					
ANR	5239780	Identifier	force		5239751	0					
ANR	5239781	IfStatement	if ( m_stat -> GetRc ( ) )		5239751	3					
ANR	5239782	Condition	m_stat -> GetRc ( )	129:6:3352:3368	5239751	0	True				
ANR	5239783	CallExpression	m_stat -> GetRc ( )		5239751	0					
ANR	5239784	Callee	m_stat -> GetRc		5239751	0					
ANR	5239785	PtrMemberAccess	m_stat -> GetRc		5239751	0					
ANR	5239786	Identifier	m_stat		5239751	0					
ANR	5239787	Identifier	GetRc		5239751	1					
ANR	5239788	ArgumentList			5239751	1					
ANR	5239789	ReturnStatement	return m_stat -> GetRc ( ) ;	129:26:3372:3395	5239751	1	True				
ANR	5239790	CallExpression	m_stat -> GetRc ( )		5239751	0					
ANR	5239791	Callee	m_stat -> GetRc		5239751	0					
ANR	5239792	PtrMemberAccess	m_stat -> GetRc		5239751	0					
ANR	5239793	Identifier	m_stat		5239751	0					
ANR	5239794	Identifier	GetRc		5239751	1					
ANR	5239795	ArgumentList			5239751	1					
ANR	5239796	IfStatement	if ( m_lstat -> GetRc ( ) )		5239751	4					
ANR	5239797	Condition	m_lstat -> GetRc ( )	130:6:3403:3419	5239751	0	True				
ANR	5239798	CallExpression	m_lstat -> GetRc ( )		5239751	0					
ANR	5239799	Callee	m_lstat -> GetRc		5239751	0					
ANR	5239800	PtrMemberAccess	m_lstat -> GetRc		5239751	0					
ANR	5239801	Identifier	m_lstat		5239751	0					
ANR	5239802	Identifier	GetRc		5239751	1					
ANR	5239803	ArgumentList			5239751	1					
ANR	5239804	ReturnStatement	return m_lstat -> GetRc ( ) ;	130:26:3423:3446	5239751	1	True				
ANR	5239805	CallExpression	m_lstat -> GetRc ( )		5239751	0					
ANR	5239806	Callee	m_lstat -> GetRc		5239751	0					
ANR	5239807	PtrMemberAccess	m_lstat -> GetRc		5239751	0					
ANR	5239808	Identifier	m_lstat		5239751	0					
ANR	5239809	Identifier	GetRc		5239751	1					
ANR	5239810	ArgumentList			5239751	1					
ANR	5239811	IfStatement	if ( m_fstat -> GetRc ( ) )		5239751	5					
ANR	5239812	Condition	m_fstat -> GetRc ( )	131:6:3454:3470	5239751	0	True				
ANR	5239813	CallExpression	m_fstat -> GetRc ( )		5239751	0					
ANR	5239814	Callee	m_fstat -> GetRc		5239751	0					
ANR	5239815	PtrMemberAccess	m_fstat -> GetRc		5239751	0					
ANR	5239816	Identifier	m_fstat		5239751	0					
ANR	5239817	Identifier	GetRc		5239751	1					
ANR	5239818	ArgumentList			5239751	1					
ANR	5239819	ReturnStatement	return m_fstat -> GetRc ( ) ;	131:26:3474:3497	5239751	1	True				
ANR	5239820	CallExpression	m_fstat -> GetRc ( )		5239751	0					
ANR	5239821	Callee	m_fstat -> GetRc		5239751	0					
ANR	5239822	PtrMemberAccess	m_fstat -> GetRc		5239751	0					
ANR	5239823	Identifier	m_fstat		5239751	0					
ANR	5239824	Identifier	GetRc		5239751	1					
ANR	5239825	ArgumentList			5239751	1					
ANR	5239826	ReturnStatement	return 0 ;	132:1:3500:3508	5239751	6	True				
ANR	5239827	PrimaryExpression	0		5239751	0					
ANR	5239828	ReturnType	int		5239751	1					
ANR	5239829	Identifier	StatWrapperOp :: StatAll		5239751	2					
ANR	5239830	ParameterList	bool force		5239751	3					
ANR	5239831	Parameter	bool force	123:24:3255:3264	5239751	0	True				
ANR	5239832	ParameterType	bool		5239751	0					
ANR	5239833	Identifier	force		5239751	1					
ANR	5239834	CFGEntryNode	ENTRY		5239751		True				
ANR	5239835	CFGExitNode	EXIT		5239751		True				
ANR	5239836	Symbol	m_lstat -> GetRc		5239751						
ANR	5239837	Symbol	* m_lstat		5239751						
ANR	5239838	Symbol	* m_fstat		5239751						
ANR	5239839	Symbol	m_lstat		5239751						
ANR	5239840	Symbol	* m_stat		5239751						
ANR	5239841	Symbol	m_stat		5239751						
ANR	5239842	Symbol	m_fstat -> GetRc		5239751						
ANR	5239843	Symbol	force		5239751						
ANR	5239844	Symbol	m_stat -> GetRc		5239751						
ANR	5239845	Symbol	m_fstat		5239751						
ANR	5239846	Function	StatWrapper :: StatWrapper	139:0:3556:3706							
ANR	5239847	FunctionDef	"StatWrapper :: StatWrapper (const MyString & path , StatOpType which)"		5239846	0					
ANR	5239848	CompoundStatement		140:0:3623:3706	5239846	0					
ANR	5239849	ExpressionStatement	init ( )	141:1:3626:3633	5239846	0	True				
ANR	5239850	CallExpression	init ( )		5239846	0					
ANR	5239851	Callee	init		5239846	0					
ANR	5239852	Identifier	init		5239846	0					
ANR	5239853	ArgumentList			5239846	1					
ANR	5239854	IfStatement	if ( which != STATOP_NONE )		5239846	1					
ANR	5239855	Condition	which != STATOP_NONE	143:6:3642:3661	5239846	0	True				
ANR	5239856	EqualityExpression	which != STATOP_NONE		5239846	0		!=			
ANR	5239857	Identifier	which		5239846	0					
ANR	5239858	Identifier	STATOP_NONE		5239846	1					
ANR	5239859	CompoundStatement		4:29:41:41	5239846	1					
ANR	5239860	ExpressionStatement	"( void ) Stat ( path , which , true )"	144:2:3669:3701	5239846	0	True				
ANR	5239861	CastExpression	"( void ) Stat ( path , which , true )"		5239846	0					
ANR	5239862	CastTarget	void		5239846	0					
ANR	5239863	CallExpression	"Stat ( path , which , true )"		5239846	1					
ANR	5239864	Callee	Stat		5239846	0					
ANR	5239865	Identifier	Stat		5239846	0					
ANR	5239866	ArgumentList	path		5239846	1					
ANR	5239867	Argument	path		5239846	0					
ANR	5239868	Identifier	path		5239846	0					
ANR	5239869	Argument	which		5239846	1					
ANR	5239870	Identifier	which		5239846	0					
ANR	5239871	Argument	true		5239846	2					
ANR	5239872	Identifier	true		5239846	0					
ANR	5239873	Identifier	StatWrapper :: StatWrapper		5239846	1					
ANR	5239874	ParameterList	"const MyString & path , StatOpType which"		5239846	2					
ANR	5239875	Parameter	const MyString & path	139:26:3582:3601	5239846	0	True				
ANR	5239876	ParameterType	const MyString &		5239846	0					
ANR	5239877	Identifier	path		5239846	1					
ANR	5239878	Parameter	StatOpType which	139:48:3604:3619	5239846	1	True				
ANR	5239879	ParameterType	StatOpType		5239846	0					
ANR	5239880	Identifier	which		5239846	1					
ANR	5239881	CFGEntryNode	ENTRY		5239846		True				
ANR	5239882	CFGExitNode	EXIT		5239846		True				
ANR	5239883	Symbol	which		5239846						
ANR	5239884	Symbol	path		5239846						
ANR	5239885	Symbol	STATOP_NONE		5239846						
ANR	5239886	Symbol	true		5239846						
ANR	5239887	Function	StatWrapper :: StatWrapper	148:0:3709:3909							
ANR	5239888	FunctionDef	"StatWrapper :: StatWrapper (const char * path , StatOpType which)"		5239887	0					
ANR	5239889	CompoundStatement		149:0:3772:3909	5239887	0					
ANR	5239890	ExpressionStatement	init ( )	150:1:3775:3782	5239887	0	True				
ANR	5239891	CallExpression	init ( )		5239887	0					
ANR	5239892	Callee	init		5239887	0					
ANR	5239893	Identifier	init		5239887	0					
ANR	5239894	ArgumentList			5239887	1					
ANR	5239895	ExpressionStatement	m_stat -> SetPath ( path )	151:1:3785:3809	5239887	1	True				
ANR	5239896	CallExpression	m_stat -> SetPath ( path )		5239887	0					
ANR	5239897	Callee	m_stat -> SetPath		5239887	0					
ANR	5239898	PtrMemberAccess	m_stat -> SetPath		5239887	0					
ANR	5239899	Identifier	m_stat		5239887	0					
ANR	5239900	Identifier	SetPath		5239887	1					
ANR	5239901	ArgumentList	path		5239887	1					
ANR	5239902	Argument	path		5239887	0					
ANR	5239903	Identifier	path		5239887	0					
ANR	5239904	ExpressionStatement	m_lstat -> SetPath ( path )	152:1:3812:3836	5239887	2	True				
ANR	5239905	CallExpression	m_lstat -> SetPath ( path )		5239887	0					
ANR	5239906	Callee	m_lstat -> SetPath		5239887	0					
ANR	5239907	PtrMemberAccess	m_lstat -> SetPath		5239887	0					
ANR	5239908	Identifier	m_lstat		5239887	0					
ANR	5239909	Identifier	SetPath		5239887	1					
ANR	5239910	ArgumentList	path		5239887	1					
ANR	5239911	Argument	path		5239887	0					
ANR	5239912	Identifier	path		5239887	0					
ANR	5239913	IfStatement	if ( which != STATOP_NONE )		5239887	3					
ANR	5239914	Condition	which != STATOP_NONE	154:6:3845:3864	5239887	0	True				
ANR	5239915	EqualityExpression	which != STATOP_NONE		5239887	0		!=			
ANR	5239916	Identifier	which		5239887	0					
ANR	5239917	Identifier	STATOP_NONE		5239887	1					
ANR	5239918	CompoundStatement		6:29:95:95	5239887	1					
ANR	5239919	ExpressionStatement	"( void ) Stat ( path , which , true )"	155:2:3872:3904	5239887	0	True				
ANR	5239920	CastExpression	"( void ) Stat ( path , which , true )"		5239887	0					
ANR	5239921	CastTarget	void		5239887	0					
ANR	5239922	CallExpression	"Stat ( path , which , true )"		5239887	1					
ANR	5239923	Callee	Stat		5239887	0					
ANR	5239924	Identifier	Stat		5239887	0					
ANR	5239925	ArgumentList	path		5239887	1					
ANR	5239926	Argument	path		5239887	0					
ANR	5239927	Identifier	path		5239887	0					
ANR	5239928	Argument	which		5239887	1					
ANR	5239929	Identifier	which		5239887	0					
ANR	5239930	Argument	true		5239887	2					
ANR	5239931	Identifier	true		5239887	0					
ANR	5239932	Identifier	StatWrapper :: StatWrapper		5239887	1					
ANR	5239933	ParameterList	"const char * path , StatOpType which"		5239887	2					
ANR	5239934	Parameter	const char * path	148:26:3735:3750	5239887	0	True				
ANR	5239935	ParameterType	const char *		5239887	0					
ANR	5239936	Identifier	path		5239887	1					
ANR	5239937	Parameter	StatOpType which	148:44:3753:3768	5239887	1	True				
ANR	5239938	ParameterType	StatOpType		5239887	0					
ANR	5239939	Identifier	which		5239887	1					
ANR	5239940	CFGEntryNode	ENTRY		5239887		True				
ANR	5239941	CFGExitNode	EXIT		5239887		True				
ANR	5239942	Symbol	which		5239887						
ANR	5239943	Symbol	path		5239887						
ANR	5239944	Symbol	STATOP_NONE		5239887						
ANR	5239945	Symbol	m_lstat		5239887						
ANR	5239946	Symbol	m_stat		5239887						
ANR	5239947	Symbol	true		5239887						
ANR	5239948	Function	StatWrapper :: StatWrapper	159:0:3912:4062							
ANR	5239949	FunctionDef	"StatWrapper :: StatWrapper (int fd , StatOpType which)"		5239948	0					
ANR	5239950	CompoundStatement		160:0:3965:4062	5239948	0					
ANR	5239951	ExpressionStatement	init ( )	161:1:3968:3975	5239948	0	True				
ANR	5239952	CallExpression	init ( )		5239948	0					
ANR	5239953	Callee	init		5239948	0					
ANR	5239954	Identifier	init		5239948	0					
ANR	5239955	ArgumentList			5239948	1					
ANR	5239956	ExpressionStatement	m_fstat -> SetFD ( fd )	162:1:3978:3998	5239948	1	True				
ANR	5239957	CallExpression	m_fstat -> SetFD ( fd )		5239948	0					
ANR	5239958	Callee	m_fstat -> SetFD		5239948	0					
ANR	5239959	PtrMemberAccess	m_fstat -> SetFD		5239948	0					
ANR	5239960	Identifier	m_fstat		5239948	0					
ANR	5239961	Identifier	SetFD		5239948	1					
ANR	5239962	ArgumentList	fd		5239948	1					
ANR	5239963	Argument	fd		5239948	0					
ANR	5239964	Identifier	fd		5239948	0					
ANR	5239965	IfStatement	if ( which != STATOP_NONE )		5239948	2					
ANR	5239966	Condition	which != STATOP_NONE	164:6:4007:4026	5239948	0	True				
ANR	5239967	EqualityExpression	which != STATOP_NONE		5239948	0		!=			
ANR	5239968	Identifier	which		5239948	0					
ANR	5239969	Identifier	STATOP_NONE		5239948	1					
ANR	5239970	CompoundStatement		5:29:64:64	5239948	1					
ANR	5239971	ExpressionStatement	"( void ) Stat ( fd , true )"	165:2:4034:4057	5239948	0	True				
ANR	5239972	CastExpression	"( void ) Stat ( fd , true )"		5239948	0					
ANR	5239973	CastTarget	void		5239948	0					
ANR	5239974	CallExpression	"Stat ( fd , true )"		5239948	1					
ANR	5239975	Callee	Stat		5239948	0					
ANR	5239976	Identifier	Stat		5239948	0					
ANR	5239977	ArgumentList	fd		5239948	1					
ANR	5239978	Argument	fd		5239948	0					
ANR	5239979	Identifier	fd		5239948	0					
ANR	5239980	Argument	true		5239948	1					
ANR	5239981	Identifier	true		5239948	0					
ANR	5239982	Identifier	StatWrapper :: StatWrapper		5239948	1					
ANR	5239983	ParameterList	"int fd , StatOpType which"		5239948	2					
ANR	5239984	Parameter	int fd	159:26:3938:3943	5239948	0	True				
ANR	5239985	ParameterType	int		5239948	0					
ANR	5239986	Identifier	fd		5239948	1					
ANR	5239987	Parameter	StatOpType which	159:34:3946:3961	5239948	1	True				
ANR	5239988	ParameterType	StatOpType		5239948	0					
ANR	5239989	Identifier	which		5239948	1					
ANR	5239990	CFGEntryNode	ENTRY		5239948		True				
ANR	5239991	CFGExitNode	EXIT		5239948		True				
ANR	5239992	Symbol	which		5239948						
ANR	5239993	Symbol	STATOP_NONE		5239948						
ANR	5239994	Symbol	true		5239948						
ANR	5239995	Symbol	fd		5239948						
ANR	5239996	Symbol	m_fstat		5239948						
ANR	5239997	Function	StatWrapper :: StatWrapper	169:0:4065:4110							
ANR	5239998	FunctionDef	StatWrapper :: StatWrapper ()		5239997	0					
ANR	5239999	CompoundStatement		170:0:4098:4110	5239997	0					
ANR	5240000	ExpressionStatement	init ( )	171:1:4101:4108	5239997	0	True				
ANR	5240001	CallExpression	init ( )		5239997	0					
ANR	5240002	Callee	init		5239997	0					
ANR	5240003	Identifier	init		5239997	0					
ANR	5240004	ArgumentList			5239997	1					
ANR	5240005	Identifier	StatWrapper :: StatWrapper		5239997	1					
ANR	5240006	ParameterList			5239997	2					
ANR	5240007	CFGEntryNode	ENTRY		5239997		True				
ANR	5240008	CFGExitNode	EXIT		5239997		True				
ANR	5240009	Function	StatWrapper :: ~StatWrapper	174:0:4113:4307							
ANR	5240010	FunctionDef	StatWrapper :: ~StatWrapper ()		5240009	0					
ANR	5240011	CompoundStatement		175:0:4147:4307	5240009	0					
ANR	5240012	ForStatement	for ( int i = STATOP_MIN ; i <= STATOP_MAX ; i ++ )		5240009	0					
ANR	5240013	ForInit	int i = STATOP_MIN ;	176:5:4154:4170	5240009	0	True				
ANR	5240014	IdentifierDeclStatement	int i = STATOP_MIN ;		5240009	0					
ANR	5240015	IdentifierDecl	i = STATOP_MIN		5240009	0					
ANR	5240016	IdentifierDeclType	int		5240009	0					
ANR	5240017	Identifier	i		5240009	1					
ANR	5240018	AssignmentExpression	i = STATOP_MIN		5240009	2		=			
ANR	5240019	Identifier	STATOP_MIN		5240009	0					
ANR	5240020	Identifier	STATOP_MIN		5240009	1					
ANR	5240021	Condition	i <= STATOP_MAX	176:23:4172:4184	5240009	1	True				
ANR	5240022	RelationalExpression	i <= STATOP_MAX		5240009	0		<=			
ANR	5240023	Identifier	i		5240009	0					
ANR	5240024	Identifier	STATOP_MAX		5240009	1					
ANR	5240025	PostIncDecOperationExpression	i ++	176:38:4187:4189	5240009	2	True				
ANR	5240026	Identifier	i		5240009	0					
ANR	5240027	IncDec	++		5240009	1					
ANR	5240028	CompoundStatement		2:44:45:45	5240009	3					
ANR	5240029	IfStatement	if ( m_ops [ i ] )		5240009	0					
ANR	5240030	Condition	m_ops [ i ]	177:6:4201:4208	5240009	0	True				
ANR	5240031	ArrayIndexing	m_ops [ i ]		5240009	0					
ANR	5240032	Identifier	m_ops		5240009	0					
ANR	5240033	Identifier	i		5240009	1					
ANR	5240034	CompoundStatement		3:17:64:64	5240009	1					
ANR	5240035	Statement	delete	178:3:4217:4222	5240009	0	True				
ANR	5240036	ExpressionStatement	m_ops [ i ]	178:10:4224:4232	5240009	1	True				
ANR	5240037	ArrayIndexing	m_ops [ i ]		5240009	0					
ANR	5240038	Identifier	m_ops		5240009	0					
ANR	5240039	Identifier	i		5240009	1					
ANR	5240040	Statement	delete	182:1:4243:4248	5240009	1	True				
ANR	5240041	ExpressionStatement	m_nop	182:8:4250:4255	5240009	2	True				
ANR	5240042	Identifier	m_nop		5240009	0					
ANR	5240043	Statement	delete	183:1:4258:4263	5240009	3	True				
ANR	5240044	ExpressionStatement	m_stat	183:8:4265:4271	5240009	4	True				
ANR	5240045	Identifier	m_stat		5240009	0					
ANR	5240046	Statement	delete	184:1:4274:4279	5240009	5	True				
ANR	5240047	ExpressionStatement	m_lstat	184:8:4281:4288	5240009	6	True				
ANR	5240048	Identifier	m_lstat		5240009	0					
ANR	5240049	Statement	delete	185:1:4291:4296	5240009	7	True				
ANR	5240050	ExpressionStatement	m_fstat	185:8:4298:4305	5240009	8	True				
ANR	5240051	Identifier	m_fstat		5240009	0					
ANR	5240052	Identifier	StatWrapper :: ~StatWrapper		5240009	1					
ANR	5240053	ParameterList			5240009	2					
ANR	5240054	CFGEntryNode	ENTRY		5240009		True				
ANR	5240055	CFGExitNode	EXIT		5240009		True				
ANR	5240056	Symbol	* i		5240009						
ANR	5240057	Symbol	STATOP_MAX		5240009						
ANR	5240058	Symbol	STATOP_MIN		5240009						
ANR	5240059	Symbol	* m_ops		5240009						
ANR	5240060	Symbol	i		5240009						
ANR	5240061	Symbol	m_ops		5240009						
ANR	5240062	Function	StatWrapper :: IsInitialized	188:0:4310:4407							
ANR	5240063	FunctionDef	StatWrapper :: IsInitialized ()		5240062	0					
ANR	5240064	CompoundStatement		190:0:4356:4407	5240062	0					
ANR	5240065	ReturnStatement	return m_stat -> IsValid ( ) || m_fstat -> IsValid ( ) ;	191:1:4359:4405	5240062	0	True				
ANR	5240066	OrExpression	m_stat -> IsValid ( ) || m_fstat -> IsValid ( )		5240062	0		||			
ANR	5240067	CallExpression	m_stat -> IsValid ( )		5240062	0					
ANR	5240068	Callee	m_stat -> IsValid		5240062	0					
ANR	5240069	PtrMemberAccess	m_stat -> IsValid		5240062	0					
ANR	5240070	Identifier	m_stat		5240062	0					
ANR	5240071	Identifier	IsValid		5240062	1					
ANR	5240072	ArgumentList			5240062	1					
ANR	5240073	CallExpression	m_fstat -> IsValid ( )		5240062	1					
ANR	5240074	Callee	m_fstat -> IsValid		5240062	0					
ANR	5240075	PtrMemberAccess	m_fstat -> IsValid		5240062	0					
ANR	5240076	Identifier	m_fstat		5240062	0					
ANR	5240077	Identifier	IsValid		5240062	1					
ANR	5240078	ArgumentList			5240062	1					
ANR	5240079	ReturnType	bool		5240062	1					
ANR	5240080	Identifier	StatWrapper :: IsInitialized		5240062	2					
ANR	5240081	ParameterList			5240062	3					
ANR	5240082	CFGEntryNode	ENTRY		5240062		True				
ANR	5240083	CFGExitNode	EXIT		5240062		True				
ANR	5240084	Symbol	m_stat -> IsValid		5240062						
ANR	5240085	Symbol	* m_fstat		5240062						
ANR	5240086	Symbol	m_fstat -> IsValid		5240062						
ANR	5240087	Symbol	* m_stat		5240062						
ANR	5240088	Symbol	m_stat		5240062						
ANR	5240089	Symbol	m_fstat		5240062						
ANR	5240090	Function	StatWrapper :: init	195:0:4422:5515							
ANR	5240091	FunctionDef	StatWrapper :: init ()		5240090	0					
ANR	5240092	CompoundStatement		197:0:4453:5515	5240090	0					
ANR	5240093	ExpressionStatement	"m_nop = new StatWrapperIntNop ( NULL , NULL )"	198:1:4456:4508	5240090	0	True				
ANR	5240094	AssignmentExpression	"m_nop = new StatWrapperIntNop ( NULL , NULL )"		5240090	0		=			
ANR	5240095	Identifier	m_nop		5240090	0					
ANR	5240096	Expression	"NULL , NULL"		5240090	1					
ANR	5240097	Identifier	NULL		5240090	0					
ANR	5240098	Identifier	NULL		5240090	1					
ANR	5240099	ExpressionStatement	"m_stat = new StatWrapperIntPath ( STAT_NAME , STAT_FUNC )"	199:1:4511:4569	5240090	1	True				
ANR	5240100	AssignmentExpression	"m_stat = new StatWrapperIntPath ( STAT_NAME , STAT_FUNC )"		5240090	0		=			
ANR	5240101	Identifier	m_stat		5240090	0					
ANR	5240102	Expression	"STAT_NAME , STAT_FUNC"		5240090	1					
ANR	5240103	Identifier	STAT_NAME		5240090	0					
ANR	5240104	Identifier	STAT_FUNC		5240090	1					
ANR	5240105	ExpressionStatement	"m_lstat = new StatWrapperIntPath ( LSTAT_NAME , LSTAT_FUNC )"	200:1:4572:4630	5240090	2	True				
ANR	5240106	AssignmentExpression	"m_lstat = new StatWrapperIntPath ( LSTAT_NAME , LSTAT_FUNC )"		5240090	0		=			
ANR	5240107	Identifier	m_lstat		5240090	0					
ANR	5240108	Expression	"LSTAT_NAME , LSTAT_FUNC"		5240090	1					
ANR	5240109	Identifier	LSTAT_NAME		5240090	0					
ANR	5240110	Identifier	LSTAT_FUNC		5240090	1					
ANR	5240111	ExpressionStatement	"m_fstat = new StatWrapperIntFd ( FSTAT_NAME , FSTAT_FUNC )"	201:1:4633:4691	5240090	3	True				
ANR	5240112	AssignmentExpression	"m_fstat = new StatWrapperIntFd ( FSTAT_NAME , FSTAT_FUNC )"		5240090	0		=			
ANR	5240113	Identifier	m_fstat		5240090	0					
ANR	5240114	Expression	"FSTAT_NAME , FSTAT_FUNC"		5240090	1					
ANR	5240115	Identifier	FSTAT_NAME		5240090	0					
ANR	5240116	Identifier	FSTAT_FUNC		5240090	1					
ANR	5240117	ExpressionStatement	"memset ( m_ops , 0 , sizeof ( m_ops ) )"	205:1:4781:4814	5240090	4	True				
ANR	5240118	CallExpression	"memset ( m_ops , 0 , sizeof ( m_ops ) )"		5240090	0					
ANR	5240119	Callee	memset		5240090	0					
ANR	5240120	Identifier	memset		5240090	0					
ANR	5240121	ArgumentList	m_ops		5240090	1					
ANR	5240122	Argument	m_ops		5240090	0					
ANR	5240123	Identifier	m_ops		5240090	0					
ANR	5240124	Argument	0		5240090	1					
ANR	5240125	PrimaryExpression	0		5240090	0					
ANR	5240126	Argument	sizeof ( m_ops )		5240090	2					
ANR	5240127	SizeofExpression	sizeof ( m_ops )		5240090	0					
ANR	5240128	Sizeof	sizeof		5240090	0					
ANR	5240129	SizeofOperand	m_ops		5240090	1					
ANR	5240130	IdentifierDeclStatement	ifdef HAVE_AN_LSTAT StatWrapperIntPath * lstat = m_lstat ;	206:2:4818:4874	5240090	5	True				
ANR	5240131	IdentifierDecl	* lstat = m_lstat		5240090	0					
ANR	5240132	IdentifierDeclType	ifdef HAVE_AN_LSTAT StatWrapperIntPath *		5240090	0					
ANR	5240133	Identifier	lstat		5240090	1					
ANR	5240134	AssignmentExpression	* lstat = m_lstat		5240090	2		=			
ANR	5240135	Identifier	m_lstat		5240090	0					
ANR	5240136	Identifier	m_lstat		5240090	1					
ANR	5240137	ReturnType	void		5240090	1					
ANR	5240138	Identifier	StatWrapper :: init		5240090	2					
ANR	5240139	ParameterList			5240090	3					
ANR	5240140	CFGEntryNode	ENTRY		5240090		True				
ANR	5240141	CFGExitNode	EXIT		5240090		True				
ANR	5240142	Symbol	LSTAT_NAME		5240090						
ANR	5240143	Symbol	FSTAT_NAME		5240090						
ANR	5240144	Symbol	NULL		5240090						
ANR	5240145	Symbol	m_lstat		5240090						
ANR	5240146	Symbol	FSTAT_FUNC		5240090						
ANR	5240147	Symbol	lstat		5240090						
ANR	5240148	Symbol	STAT_NAME		5240090						
ANR	5240149	Symbol	LSTAT_FUNC		5240090						
ANR	5240150	Symbol	m_ops		5240090						
ANR	5240151	Symbol	m_nop		5240090						
ANR	5240152	Symbol	STAT_FUNC		5240090						
ANR	5240153	Symbol	m_stat		5240090						
ANR	5240154	Symbol	m_fstat		5240090						
ANR	5240155	Function	StatWrapper :: SetPath	224:0:5537:5645							
ANR	5240156	FunctionDef	StatWrapper :: SetPath (const MyString & path)		5240155	0					
ANR	5240157	CompoundStatement		226:0:5587:5645	5240155	0					
ANR	5240158	ReturnStatement	return SetPath ( path . IsEmpty ( ) ? NULL : path . Value ( ) ) ;	227:1:5590:5643	5240155	0	True				
ANR	5240159	CallExpression	SetPath ( path . IsEmpty ( ) ? NULL : path . Value ( ) )		5240155	0					
ANR	5240160	Callee	SetPath		5240155	0					
ANR	5240161	Identifier	SetPath		5240155	0					
ANR	5240162	ArgumentList	path . IsEmpty ( ) ? NULL : path . Value ( )		5240155	1					
ANR	5240163	Argument	path . IsEmpty ( ) ? NULL : path . Value ( )		5240155	0					
ANR	5240164	ConditionalExpression	path . IsEmpty ( ) ? NULL : path . Value ( )		5240155	0					
ANR	5240165	Condition	path . IsEmpty ( )		5240155	0					
ANR	5240166	CallExpression	path . IsEmpty ( )		5240155	0					
ANR	5240167	Callee	path . IsEmpty		5240155	0					
ANR	5240168	MemberAccess	path . IsEmpty		5240155	0					
ANR	5240169	Identifier	path		5240155	0					
ANR	5240170	Identifier	IsEmpty		5240155	1					
ANR	5240171	ArgumentList			5240155	1					
ANR	5240172	Identifier	NULL		5240155	1					
ANR	5240173	CallExpression	path . Value ( )		5240155	2					
ANR	5240174	Callee	path . Value		5240155	0					
ANR	5240175	MemberAccess	path . Value		5240155	0					
ANR	5240176	Identifier	path		5240155	0					
ANR	5240177	Identifier	Value		5240155	1					
ANR	5240178	ArgumentList			5240155	1					
ANR	5240179	ReturnType	bool		5240155	1					
ANR	5240180	Identifier	StatWrapper :: SetPath		5240155	2					
ANR	5240181	ParameterList	const MyString & path		5240155	3					
ANR	5240182	Parameter	const MyString & path	225:22:5564:5583	5240155	0	True				
ANR	5240183	ParameterType	const MyString &		5240155	0					
ANR	5240184	Identifier	path		5240155	1					
ANR	5240185	CFGEntryNode	ENTRY		5240155		True				
ANR	5240186	CFGExitNode	EXIT		5240155		True				
ANR	5240187	Symbol	SetPath		5240155						
ANR	5240188	Symbol	path		5240155						
ANR	5240189	Symbol	NULL		5240155						
ANR	5240190	Symbol	path . Value		5240155						
ANR	5240191	Symbol	path . IsEmpty		5240155						
ANR	5240192	Function	StatWrapper :: SetPath	231:0:5667:5867							
ANR	5240193	FunctionDef	StatWrapper :: SetPath (const char * path)		5240192	0					
ANR	5240194	CompoundStatement		233:0:5713:5867	5240192	0					
ANR	5240195	IdentifierDeclStatement	bool status = true ;	234:1:5716:5734	5240192	0	True				
ANR	5240196	IdentifierDecl	status = true		5240192	0					
ANR	5240197	IdentifierDeclType	bool		5240192	0					
ANR	5240198	Identifier	status		5240192	1					
ANR	5240199	AssignmentExpression	status = true		5240192	2		=			
ANR	5240200	Identifier	true		5240192	0					
ANR	5240201	Identifier	true		5240192	1					
ANR	5240202	IfStatement	if ( ! m_stat -> SetPath ( path ) )		5240192	1					
ANR	5240203	Condition	! m_stat -> SetPath ( path )	236:6:5743:5766	5240192	0	True				
ANR	5240204	UnaryOperationExpression	! m_stat -> SetPath ( path )		5240192	0					
ANR	5240205	UnaryOperator	!		5240192	0					
ANR	5240206	CallExpression	m_stat -> SetPath ( path )		5240192	1					
ANR	5240207	Callee	m_stat -> SetPath		5240192	0					
ANR	5240208	PtrMemberAccess	m_stat -> SetPath		5240192	0					
ANR	5240209	Identifier	m_stat		5240192	0					
ANR	5240210	Identifier	SetPath		5240192	1					
ANR	5240211	ArgumentList	path		5240192	1					
ANR	5240212	Argument	path		5240192	0					
ANR	5240213	Identifier	path		5240192	0					
ANR	5240214	CompoundStatement		4:33:56:56	5240192	1					
ANR	5240215	ExpressionStatement	status = false	237:2:5774:5788	5240192	0	True				
ANR	5240216	AssignmentExpression	status = false		5240192	0		=			
ANR	5240217	Identifier	status		5240192	0					
ANR	5240218	Identifier	false		5240192	1					
ANR	5240219	IfStatement	if ( ! m_lstat -> SetPath ( path ) )		5240192	2					
ANR	5240220	Condition	! m_lstat -> SetPath ( path )	239:6:5799:5823	5240192	0	True				
ANR	5240221	UnaryOperationExpression	! m_lstat -> SetPath ( path )		5240192	0					
ANR	5240222	UnaryOperator	!		5240192	0					
ANR	5240223	CallExpression	m_lstat -> SetPath ( path )		5240192	1					
ANR	5240224	Callee	m_lstat -> SetPath		5240192	0					
ANR	5240225	PtrMemberAccess	m_lstat -> SetPath		5240192	0					
ANR	5240226	Identifier	m_lstat		5240192	0					
ANR	5240227	Identifier	SetPath		5240192	1					
ANR	5240228	ArgumentList	path		5240192	1					
ANR	5240229	Argument	path		5240192	0					
ANR	5240230	Identifier	path		5240192	0					
ANR	5240231	CompoundStatement		7:34:113:113	5240192	1					
ANR	5240232	ExpressionStatement	status = false	240:2:5831:5845	5240192	0	True				
ANR	5240233	AssignmentExpression	status = false		5240192	0		=			
ANR	5240234	Identifier	status		5240192	0					
ANR	5240235	Identifier	false		5240192	1					
ANR	5240236	ReturnStatement	return status ;	243:1:5852:5865	5240192	3	True				
ANR	5240237	Identifier	status		5240192	0					
ANR	5240238	ReturnType	bool		5240192	1					
ANR	5240239	Identifier	StatWrapper :: SetPath		5240192	2					
ANR	5240240	ParameterList	const char * path		5240192	3					
ANR	5240241	Parameter	const char * path	232:22:5694:5709	5240192	0	True				
ANR	5240242	ParameterType	const char *		5240192	0					
ANR	5240243	Identifier	path		5240192	1					
ANR	5240244	CFGEntryNode	ENTRY		5240192		True				
ANR	5240245	CFGExitNode	EXIT		5240192		True				
ANR	5240246	Symbol	path		5240192						
ANR	5240247	Symbol	* m_lstat		5240192						
ANR	5240248	Symbol	* m_stat		5240192						
ANR	5240249	Symbol	m_lstat		5240192						
ANR	5240250	Symbol	m_stat		5240192						
ANR	5240251	Symbol	true		5240192						
ANR	5240252	Symbol	false		5240192						
ANR	5240253	Symbol	m_lstat -> SetPath		5240192						
ANR	5240254	Symbol	m_stat -> SetPath		5240192						
ANR	5240255	Symbol	status		5240192						
ANR	5240256	Function	StatWrapper :: SetFD	246:0:5870:5936							
ANR	5240257	FunctionDef	StatWrapper :: SetFD (int fd)		5240256	0					
ANR	5240258	CompoundStatement		248:0:5904:5936	5240256	0					
ANR	5240259	ReturnStatement	return m_fstat -> SetFD ( fd ) ;	249:1:5907:5934	5240256	0	True				
ANR	5240260	CallExpression	m_fstat -> SetFD ( fd )		5240256	0					
ANR	5240261	Callee	m_fstat -> SetFD		5240256	0					
ANR	5240262	PtrMemberAccess	m_fstat -> SetFD		5240256	0					
ANR	5240263	Identifier	m_fstat		5240256	0					
ANR	5240264	Identifier	SetFD		5240256	1					
ANR	5240265	ArgumentList	fd		5240256	1					
ANR	5240266	Argument	fd		5240256	0					
ANR	5240267	Identifier	fd		5240256	0					
ANR	5240268	ReturnType	bool		5240256	1					
ANR	5240269	Identifier	StatWrapper :: SetFD		5240256	2					
ANR	5240270	ParameterList	int fd		5240256	3					
ANR	5240271	Parameter	int fd	247:20:5895:5900	5240256	0	True				
ANR	5240272	ParameterType	int		5240256	0					
ANR	5240273	Identifier	fd		5240256	1					
ANR	5240274	CFGEntryNode	ENTRY		5240256		True				
ANR	5240275	CFGExitNode	EXIT		5240256		True				
ANR	5240276	Symbol	* m_fstat		5240256						
ANR	5240277	Symbol	m_fstat -> SetFD		5240256						
ANR	5240278	Symbol	fd		5240256						
ANR	5240279	Symbol	m_fstat		5240256						
ANR	5240280	Function	StatWrapper :: GetRc	252:0:5939:6060							
ANR	5240281	FunctionDef	StatWrapper :: GetRc (const StatWrapperIntBase * stat)		5240280	0					
ANR	5240282	CompoundStatement		254:0:6002:6060	5240280	0					
ANR	5240283	IfStatement	if ( ! stat )		5240280	0					
ANR	5240284	Condition	! stat	255:6:6010:6014	5240280	0	True				
ANR	5240285	UnaryOperationExpression	! stat		5240280	0					
ANR	5240286	UnaryOperator	!		5240280	0					
ANR	5240287	Identifier	stat		5240280	1					
ANR	5240288	CompoundStatement		2:14:15:15	5240280	1					
ANR	5240289	ReturnStatement	return - 1 ;	256:2:6022:6031	5240280	0	True				
ANR	5240290	UnaryOperationExpression	- 1		5240280	0					
ANR	5240291	UnaryOperator	-		5240280	0					
ANR	5240292	PrimaryExpression	1		5240280	1					
ANR	5240293	ReturnStatement	return stat -> GetRc ( ) ;	258:1:6037:6058	5240280	1	True				
ANR	5240294	CallExpression	stat -> GetRc ( )		5240280	0					
ANR	5240295	Callee	stat -> GetRc		5240280	0					
ANR	5240296	PtrMemberAccess	stat -> GetRc		5240280	0					
ANR	5240297	Identifier	stat		5240280	0					
ANR	5240298	Identifier	GetRc		5240280	1					
ANR	5240299	ArgumentList			5240280	1					
ANR	5240300	ReturnType	int		5240280	1					
ANR	5240301	Identifier	StatWrapper :: GetRc		5240280	2					
ANR	5240302	ParameterList	const StatWrapperIntBase * stat		5240280	3					
ANR	5240303	Parameter	const StatWrapperIntBase * stat	253:20:5963:5992	5240280	0	True				
ANR	5240304	ParameterType	const StatWrapperIntBase *		5240280	0					
ANR	5240305	Identifier	stat		5240280	1					
ANR	5240306	CFGEntryNode	ENTRY		5240280		True				
ANR	5240307	CFGExitNode	EXIT		5240280		True				
ANR	5240308	Symbol	stat		5240280						
ANR	5240309	Symbol	stat -> GetRc		5240280						
ANR	5240310	Symbol	* stat		5240280						
ANR	5240311	Function	StatWrapper :: GetErrno	261:0:6063:6190							
ANR	5240312	FunctionDef	StatWrapper :: GetErrno (const StatWrapperIntBase * stat)		5240311	0					
ANR	5240313	CompoundStatement		263:0:6129:6190	5240311	0					
ANR	5240314	IfStatement	if ( ! stat )		5240311	0					
ANR	5240315	Condition	! stat	264:6:6137:6141	5240311	0	True				
ANR	5240316	UnaryOperationExpression	! stat		5240311	0					
ANR	5240317	UnaryOperator	!		5240311	0					
ANR	5240318	Identifier	stat		5240311	1					
ANR	5240319	CompoundStatement		2:14:15:15	5240311	1					
ANR	5240320	ReturnStatement	return - 1 ;	265:2:6149:6158	5240311	0	True				
ANR	5240321	UnaryOperationExpression	- 1		5240311	0					
ANR	5240322	UnaryOperator	-		5240311	0					
ANR	5240323	PrimaryExpression	1		5240311	1					
ANR	5240324	ReturnStatement	return stat -> GetErrno ( ) ;	267:1:6164:6188	5240311	1	True				
ANR	5240325	CallExpression	stat -> GetErrno ( )		5240311	0					
ANR	5240326	Callee	stat -> GetErrno		5240311	0					
ANR	5240327	PtrMemberAccess	stat -> GetErrno		5240311	0					
ANR	5240328	Identifier	stat		5240311	0					
ANR	5240329	Identifier	GetErrno		5240311	1					
ANR	5240330	ArgumentList			5240311	1					
ANR	5240331	ReturnType	int		5240311	1					
ANR	5240332	Identifier	StatWrapper :: GetErrno		5240311	2					
ANR	5240333	ParameterList	const StatWrapperIntBase * stat		5240311	3					
ANR	5240334	Parameter	const StatWrapperIntBase * stat	262:23:6090:6119	5240311	0	True				
ANR	5240335	ParameterType	const StatWrapperIntBase *		5240311	0					
ANR	5240336	Identifier	stat		5240311	1					
ANR	5240337	CFGEntryNode	ENTRY		5240311		True				
ANR	5240338	CFGExitNode	EXIT		5240311		True				
ANR	5240339	Symbol	stat		5240311						
ANR	5240340	Symbol	stat -> GetErrno		5240311						
ANR	5240341	Symbol	* stat		5240311						
ANR	5240342	Function	StatWrapper :: IsValid	270:0:6193:6322							
ANR	5240343	FunctionDef	StatWrapper :: IsValid (const StatWrapperIntBase * stat)		5240342	0					
ANR	5240344	CompoundStatement		272:0:6259:6322	5240342	0					
ANR	5240345	IfStatement	if ( ! stat )		5240342	0					
ANR	5240346	Condition	! stat	273:6:6267:6271	5240342	0	True				
ANR	5240347	UnaryOperationExpression	! stat		5240342	0					
ANR	5240348	UnaryOperator	!		5240342	0					
ANR	5240349	Identifier	stat		5240342	1					
ANR	5240350	CompoundStatement		2:14:15:15	5240342	1					
ANR	5240351	ReturnStatement	return false ;	274:2:6279:6291	5240342	0	True				
ANR	5240352	Identifier	false		5240342	0					
ANR	5240353	ReturnStatement	return stat -> IsValid ( ) ;	276:1:6297:6320	5240342	1	True				
ANR	5240354	CallExpression	stat -> IsValid ( )		5240342	0					
ANR	5240355	Callee	stat -> IsValid		5240342	0					
ANR	5240356	PtrMemberAccess	stat -> IsValid		5240342	0					
ANR	5240357	Identifier	stat		5240342	0					
ANR	5240358	Identifier	IsValid		5240342	1					
ANR	5240359	ArgumentList			5240342	1					
ANR	5240360	ReturnType	bool		5240342	1					
ANR	5240361	Identifier	StatWrapper :: IsValid		5240342	2					
ANR	5240362	ParameterList	const StatWrapperIntBase * stat		5240342	3					
ANR	5240363	Parameter	const StatWrapperIntBase * stat	271:22:6220:6249	5240342	0	True				
ANR	5240364	ParameterType	const StatWrapperIntBase *		5240342	0					
ANR	5240365	Identifier	stat		5240342	1					
ANR	5240366	CFGEntryNode	ENTRY		5240342		True				
ANR	5240367	CFGExitNode	EXIT		5240342		True				
ANR	5240368	Symbol	stat		5240342						
ANR	5240369	Symbol	stat -> IsValid		5240342						
ANR	5240370	Symbol	false		5240342						
ANR	5240371	Symbol	* stat		5240342						
ANR	5240372	Function	StatWrapper :: GetStatFn	279:0:6325:6465							
ANR	5240373	FunctionDef	StatWrapper :: GetStatFn (const StatWrapperIntBase * stat)		5240372	0					
ANR	5240374	CompoundStatement		281:0:6401:6465	5240372	0					
ANR	5240375	IfStatement	if ( ! stat )		5240372	0					
ANR	5240376	Condition	! stat	282:6:6409:6413	5240372	0	True				
ANR	5240377	UnaryOperationExpression	! stat		5240372	0					
ANR	5240378	UnaryOperator	!		5240372	0					
ANR	5240379	Identifier	stat		5240372	1					
ANR	5240380	CompoundStatement		2:14:15:15	5240372	1					
ANR	5240381	ReturnStatement	return NULL ;	283:2:6421:6432	5240372	0	True				
ANR	5240382	Identifier	NULL		5240372	0					
ANR	5240383	ReturnStatement	return stat -> GetFnName ( ) ;	285:1:6438:6463	5240372	1	True				
ANR	5240384	CallExpression	stat -> GetFnName ( )		5240372	0					
ANR	5240385	Callee	stat -> GetFnName		5240372	0					
ANR	5240386	PtrMemberAccess	stat -> GetFnName		5240372	0					
ANR	5240387	Identifier	stat		5240372	0					
ANR	5240388	Identifier	GetFnName		5240372	1					
ANR	5240389	ArgumentList			5240372	1					
ANR	5240390	ReturnType	const char *		5240372	1					
ANR	5240391	Identifier	StatWrapper :: GetStatFn		5240372	2					
ANR	5240392	ParameterList	const StatWrapperIntBase * stat		5240372	3					
ANR	5240393	Parameter	const StatWrapperIntBase * stat	280:24:6362:6391	5240372	0	True				
ANR	5240394	ParameterType	const StatWrapperIntBase *		5240372	0					
ANR	5240395	Identifier	stat		5240372	1					
ANR	5240396	CFGEntryNode	ENTRY		5240372		True				
ANR	5240397	CFGExitNode	EXIT		5240372		True				
ANR	5240398	Symbol	stat		5240372						
ANR	5240399	Symbol	NULL		5240372						
ANR	5240400	Symbol	stat -> GetFnName		5240372						
ANR	5240401	Symbol	* stat		5240372						
ANR	5240402	Function	StatWrapper :: IsBufValid	288:0:6468:6603							
ANR	5240403	FunctionDef	StatWrapper :: IsBufValid (const StatWrapperIntBase * stat)		5240402	0					
ANR	5240404	CompoundStatement		290:0:6537:6603	5240402	0					
ANR	5240405	IfStatement	if ( ! stat )		5240402	0					
ANR	5240406	Condition	! stat	291:6:6545:6549	5240402	0	True				
ANR	5240407	UnaryOperationExpression	! stat		5240402	0					
ANR	5240408	UnaryOperator	!		5240402	0					
ANR	5240409	Identifier	stat		5240402	1					
ANR	5240410	CompoundStatement		2:14:15:15	5240402	1					
ANR	5240411	ReturnStatement	return false ;	292:2:6557:6569	5240402	0	True				
ANR	5240412	Identifier	false		5240402	0					
ANR	5240413	ReturnStatement	return stat -> IsBufValid ( ) ;	294:1:6575:6601	5240402	1	True				
ANR	5240414	CallExpression	stat -> IsBufValid ( )		5240402	0					
ANR	5240415	Callee	stat -> IsBufValid		5240402	0					
ANR	5240416	PtrMemberAccess	stat -> IsBufValid		5240402	0					
ANR	5240417	Identifier	stat		5240402	0					
ANR	5240418	Identifier	IsBufValid		5240402	1					
ANR	5240419	ArgumentList			5240402	1					
ANR	5240420	ReturnType	bool		5240402	1					
ANR	5240421	Identifier	StatWrapper :: IsBufValid		5240402	2					
ANR	5240422	ParameterList	const StatWrapperIntBase * stat		5240402	3					
ANR	5240423	Parameter	const StatWrapperIntBase * stat	289:25:6498:6527	5240402	0	True				
ANR	5240424	ParameterType	const StatWrapperIntBase *		5240402	0					
ANR	5240425	Identifier	stat		5240402	1					
ANR	5240426	CFGEntryNode	ENTRY		5240402		True				
ANR	5240427	CFGExitNode	EXIT		5240402		True				
ANR	5240428	Symbol	stat		5240402						
ANR	5240429	Symbol	false		5240402						
ANR	5240430	Symbol	stat -> IsBufValid		5240402						
ANR	5240431	Symbol	* stat		5240402						
ANR	5240432	Function	StatWrapper :: GetBuf	297:0:6606:6750							
ANR	5240433	FunctionDef	StatWrapper :: GetBuf (const StatWrapperIntBase * stat)		5240432	0					
ANR	5240434	CompoundStatement		299:0:6689:6750	5240432	0					
ANR	5240435	IfStatement	if ( ! stat )		5240432	0					
ANR	5240436	Condition	! stat	300:6:6697:6701	5240432	0	True				
ANR	5240437	UnaryOperationExpression	! stat		5240432	0					
ANR	5240438	UnaryOperator	!		5240432	0					
ANR	5240439	Identifier	stat		5240432	1					
ANR	5240440	CompoundStatement		2:14:15:15	5240432	1					
ANR	5240441	ReturnStatement	return NULL ;	301:2:6709:6720	5240432	0	True				
ANR	5240442	Identifier	NULL		5240432	0					
ANR	5240443	ReturnStatement	return stat -> GetBuf ( ) ;	303:1:6726:6748	5240432	1	True				
ANR	5240444	CallExpression	stat -> GetBuf ( )		5240432	0					
ANR	5240445	Callee	stat -> GetBuf		5240432	0					
ANR	5240446	PtrMemberAccess	stat -> GetBuf		5240432	0					
ANR	5240447	Identifier	stat		5240432	0					
ANR	5240448	Identifier	GetBuf		5240432	1					
ANR	5240449	ArgumentList			5240432	1					
ANR	5240450	ReturnType	const StatStructType *		5240432	1					
ANR	5240451	Identifier	StatWrapper :: GetBuf		5240432	2					
ANR	5240452	ParameterList	const StatWrapperIntBase * stat		5240432	3					
ANR	5240453	Parameter	const StatWrapperIntBase * stat	298:21:6650:6679	5240432	0	True				
ANR	5240454	ParameterType	const StatWrapperIntBase *		5240432	0					
ANR	5240455	Identifier	stat		5240432	1					
ANR	5240456	CFGEntryNode	ENTRY		5240432		True				
ANR	5240457	CFGExitNode	EXIT		5240432		True				
ANR	5240458	Symbol	stat		5240432						
ANR	5240459	Symbol	NULL		5240432						
ANR	5240460	Symbol	stat -> GetBuf		5240432						
ANR	5240461	Symbol	* stat		5240432						
ANR	5240462	Function	StatWrapper :: GetBuf	306:0:6753:6911							
ANR	5240463	FunctionDef	"StatWrapper :: GetBuf (const StatWrapperIntBase * stat , StatStructType & buf)"		5240462	0					
ANR	5240464	CompoundStatement		309:0:6845:6911	5240462	0					
ANR	5240465	IfStatement	if ( ! stat )		5240462	0					
ANR	5240466	Condition	! stat	310:6:6853:6857	5240462	0	True				
ANR	5240467	UnaryOperationExpression	! stat		5240462	0					
ANR	5240468	UnaryOperator	!		5240462	0					
ANR	5240469	Identifier	stat		5240462	1					
ANR	5240470	CompoundStatement		2:14:15:15	5240462	1					
ANR	5240471	ReturnStatement	return false ;	311:2:6865:6877	5240462	0	True				
ANR	5240472	Identifier	false		5240462	0					
ANR	5240473	ReturnStatement	return stat -> GetBuf ( buf ) ;	313:1:6883:6909	5240462	1	True				
ANR	5240474	CallExpression	stat -> GetBuf ( buf )		5240462	0					
ANR	5240475	Callee	stat -> GetBuf		5240462	0					
ANR	5240476	PtrMemberAccess	stat -> GetBuf		5240462	0					
ANR	5240477	Identifier	stat		5240462	0					
ANR	5240478	Identifier	GetBuf		5240462	1					
ANR	5240479	ArgumentList	buf		5240462	1					
ANR	5240480	Argument	buf		5240462	0					
ANR	5240481	Identifier	buf		5240462	0					
ANR	5240482	ReturnType	bool		5240462	1					
ANR	5240483	Identifier	StatWrapper :: GetBuf		5240462	2					
ANR	5240484	ParameterList	"const StatWrapperIntBase * stat , StatStructType & buf"		5240462	3					
ANR	5240485	Parameter	const StatWrapperIntBase * stat	307:21:6779:6808	5240462	0	True				
ANR	5240486	ParameterType	const StatWrapperIntBase *		5240462	0					
ANR	5240487	Identifier	stat		5240462	1					
ANR	5240488	Parameter	StatStructType & buf	308:6:6817:6835	5240462	1	True				
ANR	5240489	ParameterType	StatStructType &		5240462	0					
ANR	5240490	Identifier	buf		5240462	1					
ANR	5240491	CFGEntryNode	ENTRY		5240462		True				
ANR	5240492	CFGExitNode	EXIT		5240462		True				
ANR	5240493	Symbol	stat		5240462						
ANR	5240494	Symbol	buf		5240462						
ANR	5240495	Symbol	stat -> GetBuf		5240462						
ANR	5240496	Symbol	false		5240462						
ANR	5240497	Symbol	* stat		5240462						
ANR	5240498	Function	StatWrapper :: GetAccess	316:0:6914:7026							
ANR	5240499	FunctionDef	StatWrapper :: GetAccess (const StatWrapperIntBase * stat)		5240498	0					
ANR	5240500	CompoundStatement		318:0:6996:7026	5240498	0					
ANR	5240501	ReturnStatement	return stat -> GetAccess ( ) ;	319:1:6999:7024	5240498	0	True				
ANR	5240502	CallExpression	stat -> GetAccess ( )		5240498	0					
ANR	5240503	Callee	stat -> GetAccess		5240498	0					
ANR	5240504	PtrMemberAccess	stat -> GetAccess		5240498	0					
ANR	5240505	Identifier	stat		5240498	0					
ANR	5240506	Identifier	GetAccess		5240498	1					
ANR	5240507	ArgumentList			5240498	1					
ANR	5240508	ReturnType	const StatAccess &		5240498	1					
ANR	5240509	Identifier	StatWrapper :: GetAccess		5240498	2					
ANR	5240510	ParameterList	const StatWrapperIntBase * stat		5240498	3					
ANR	5240511	Parameter	const StatWrapperIntBase * stat	317:24:6957:6986	5240498	0	True				
ANR	5240512	ParameterType	const StatWrapperIntBase *		5240498	0					
ANR	5240513	Identifier	stat		5240498	1					
ANR	5240514	CFGEntryNode	ENTRY		5240498		True				
ANR	5240515	CFGExitNode	EXIT		5240498		True				
ANR	5240516	Symbol	stat -> GetAccess		5240498						
ANR	5240517	Symbol	stat		5240498						
ANR	5240518	Symbol	* stat		5240498						
ANR	5240519	Function	StatWrapper :: GetAccess	322:0:7029:7191							
ANR	5240520	FunctionDef	"StatWrapper :: GetAccess (const StatWrapperIntBase * stat , StatAccess & abuf)"		5240519	0					
ANR	5240521	CompoundStatement		325:0:7121:7191	5240519	0					
ANR	5240522	IfStatement	if ( ! stat )		5240519	0					
ANR	5240523	Condition	! stat	326:6:7129:7133	5240519	0	True				
ANR	5240524	UnaryOperationExpression	! stat		5240519	0					
ANR	5240525	UnaryOperator	!		5240519	0					
ANR	5240526	Identifier	stat		5240519	1					
ANR	5240527	CompoundStatement		2:14:15:15	5240519	1					
ANR	5240528	ReturnStatement	return false ;	327:2:7141:7153	5240519	0	True				
ANR	5240529	Identifier	false		5240519	0					
ANR	5240530	ReturnStatement	return stat -> GetAccess ( abuf ) ;	329:1:7159:7189	5240519	1	True				
ANR	5240531	CallExpression	stat -> GetAccess ( abuf )		5240519	0					
ANR	5240532	Callee	stat -> GetAccess		5240519	0					
ANR	5240533	PtrMemberAccess	stat -> GetAccess		5240519	0					
ANR	5240534	Identifier	stat		5240519	0					
ANR	5240535	Identifier	GetAccess		5240519	1					
ANR	5240536	ArgumentList	abuf		5240519	1					
ANR	5240537	Argument	abuf		5240519	0					
ANR	5240538	Identifier	abuf		5240519	0					
ANR	5240539	ReturnType	bool		5240519	1					
ANR	5240540	Identifier	StatWrapper :: GetAccess		5240519	2					
ANR	5240541	ParameterList	"const StatWrapperIntBase * stat , StatAccess & abuf"		5240519	3					
ANR	5240542	Parameter	const StatWrapperIntBase * stat	323:24:7058:7087	5240519	0	True				
ANR	5240543	ParameterType	const StatWrapperIntBase *		5240519	0					
ANR	5240544	Identifier	stat		5240519	1					
ANR	5240545	Parameter	StatAccess & abuf	324:6:7096:7111	5240519	1	True				
ANR	5240546	ParameterType	StatAccess &		5240519	0					
ANR	5240547	Identifier	abuf		5240519	1					
ANR	5240548	CFGEntryNode	ENTRY		5240519		True				
ANR	5240549	CFGExitNode	EXIT		5240519		True				
ANR	5240550	Symbol	stat -> GetAccess		5240519						
ANR	5240551	Symbol	stat		5240519						
ANR	5240552	Symbol	false		5240519						
ANR	5240553	Symbol	* stat		5240519						
ANR	5240554	Symbol	abuf		5240519						
ANR	5240555	Function	StatWrapper :: Stat	334:0:7234:7472							
ANR	5240556	FunctionDef	"StatWrapper :: Stat (StatOpType which , bool force)"		5240555	0					
ANR	5240557	CompoundStatement		336:0:7288:7472	5240555	0					
ANR	5240558	IdentifierDeclStatement	StatWrapperOp * op = m_ops [ which ] ;	337:1:7291:7323	5240555	0	True				
ANR	5240559	IdentifierDecl	* op = m_ops [ which ]		5240555	0					
ANR	5240560	IdentifierDeclType	StatWrapperOp *		5240555	0					
ANR	5240561	Identifier	op		5240555	1					
ANR	5240562	AssignmentExpression	* op = m_ops [ which ]		5240555	2		=			
ANR	5240563	Identifier	op		5240555	0					
ANR	5240564	ArrayIndexing	m_ops [ which ]		5240555	1					
ANR	5240565	Identifier	m_ops		5240555	0					
ANR	5240566	Identifier	which		5240555	1					
ANR	5240567	ExpressionStatement	m_last_op = op	339:1:7327:7341	5240555	1	True				
ANR	5240568	AssignmentExpression	m_last_op = op		5240555	0		=			
ANR	5240569	Identifier	m_last_op		5240555	0					
ANR	5240570	Identifier	op		5240555	1					
ANR	5240571	ExpressionStatement	m_last_which = which	340:1:7344:7364	5240555	2	True				
ANR	5240572	AssignmentExpression	m_last_which = which		5240555	0		=			
ANR	5240573	Identifier	m_last_which		5240555	0					
ANR	5240574	Identifier	which		5240555	1					
ANR	5240575	ReturnStatement	return op -> StatAll ( force ) ;	344:1:7443:7470	5240555	3	True				
ANR	5240576	CallExpression	op -> StatAll ( force )		5240555	0					
ANR	5240577	Callee	op -> StatAll		5240555	0					
ANR	5240578	PtrMemberAccess	op -> StatAll		5240555	0					
ANR	5240579	Identifier	op		5240555	0					
ANR	5240580	Identifier	StatAll		5240555	1					
ANR	5240581	ArgumentList	force		5240555	1					
ANR	5240582	Argument	force		5240555	0					
ANR	5240583	Identifier	force		5240555	0					
ANR	5240584	ReturnType	int		5240555	1					
ANR	5240585	Identifier	StatWrapper :: Stat		5240555	2					
ANR	5240586	ParameterList	"StatOpType which , bool force"		5240555	3					
ANR	5240587	Parameter	StatOpType which	335:19:7257:7272	5240555	0	True				
ANR	5240588	ParameterType	StatOpType		5240555	0					
ANR	5240589	Identifier	which		5240555	1					
ANR	5240590	Parameter	bool force	335:37:7275:7284	5240555	1	True				
ANR	5240591	ParameterType	bool		5240555	0					
ANR	5240592	Identifier	force		5240555	1					
ANR	5240593	CFGEntryNode	ENTRY		5240555		True				
ANR	5240594	CFGExitNode	EXIT		5240555		True				
ANR	5240595	Symbol	which		5240555						
ANR	5240596	Symbol	op		5240555						
ANR	5240597	Symbol	* op		5240555						
ANR	5240598	Symbol	* m_ops		5240555						
ANR	5240599	Symbol	* which		5240555						
ANR	5240600	Symbol	m_last_which		5240555						
ANR	5240601	Symbol	force		5240555						
ANR	5240602	Symbol	m_ops		5240555						
ANR	5240603	Symbol	m_last_op		5240555						
ANR	5240604	Symbol	op -> StatAll		5240555						
ANR	5240605	Function	StatWrapper :: Stat	348:0:7529:7681							
ANR	5240606	FunctionDef	"StatWrapper :: Stat (const MyString & path , StatOpType which , bool force)"		5240605	0					
ANR	5240607	CompoundStatement		350:0:7605:7681	5240605	0					
ANR	5240608	IfStatement	if ( ! SetPath ( path ) )		5240605	0					
ANR	5240609	Condition	! SetPath ( path )	351:6:7613:7628	5240605	0	True				
ANR	5240610	UnaryOperationExpression	! SetPath ( path )		5240605	0					
ANR	5240611	UnaryOperator	!		5240605	0					
ANR	5240612	CallExpression	SetPath ( path )		5240605	1					
ANR	5240613	Callee	SetPath		5240605	0					
ANR	5240614	Identifier	SetPath		5240605	0					
ANR	5240615	ArgumentList	path		5240605	1					
ANR	5240616	Argument	path		5240605	0					
ANR	5240617	Identifier	path		5240605	0					
ANR	5240618	CompoundStatement		2:25:26:26	5240605	1					
ANR	5240619	ReturnStatement	return - 1 ;	352:2:7636:7645	5240605	0	True				
ANR	5240620	UnaryOperationExpression	- 1		5240605	0					
ANR	5240621	UnaryOperator	-		5240605	0					
ANR	5240622	PrimaryExpression	1		5240605	1					
ANR	5240623	ReturnStatement	"return Stat ( which , force ) ;"	355:1:7652:7679	5240605	1	True				
ANR	5240624	CallExpression	"Stat ( which , force )"		5240605	0					
ANR	5240625	Callee	Stat		5240605	0					
ANR	5240626	Identifier	Stat		5240605	0					
ANR	5240627	ArgumentList	which		5240605	1					
ANR	5240628	Argument	which		5240605	0					
ANR	5240629	Identifier	which		5240605	0					
ANR	5240630	Argument	force		5240605	1					
ANR	5240631	Identifier	force		5240605	0					
ANR	5240632	ReturnType	int		5240605	1					
ANR	5240633	Identifier	StatWrapper :: Stat		5240605	2					
ANR	5240634	ParameterList	"const MyString & path , StatOpType which , bool force"		5240605	3					
ANR	5240635	Parameter	const MyString & path	349:19:7552:7571	5240605	0	True				
ANR	5240636	ParameterType	const MyString &		5240605	0					
ANR	5240637	Identifier	path		5240605	1					
ANR	5240638	Parameter	StatOpType which	349:41:7574:7589	5240605	1	True				
ANR	5240639	ParameterType	StatOpType		5240605	0					
ANR	5240640	Identifier	which		5240605	1					
ANR	5240641	Parameter	bool force	349:59:7592:7601	5240605	2	True				
ANR	5240642	ParameterType	bool		5240605	0					
ANR	5240643	Identifier	force		5240605	1					
ANR	5240644	CFGEntryNode	ENTRY		5240605		True				
ANR	5240645	CFGExitNode	EXIT		5240605		True				
ANR	5240646	Symbol	which		5240605						
ANR	5240647	Symbol	SetPath		5240605						
ANR	5240648	Symbol	path		5240605						
ANR	5240649	Symbol	Stat		5240605						
ANR	5240650	Symbol	force		5240605						
ANR	5240651	Function	StatWrapper :: Stat	359:0:7738:7886							
ANR	5240652	FunctionDef	"StatWrapper :: Stat (const char * path , StatOpType which , bool force)"		5240651	0					
ANR	5240653	CompoundStatement		361:0:7810:7886	5240651	0					
ANR	5240654	IfStatement	if ( ! SetPath ( path ) )		5240651	0					
ANR	5240655	Condition	! SetPath ( path )	362:6:7818:7833	5240651	0	True				
ANR	5240656	UnaryOperationExpression	! SetPath ( path )		5240651	0					
ANR	5240657	UnaryOperator	!		5240651	0					
ANR	5240658	CallExpression	SetPath ( path )		5240651	1					
ANR	5240659	Callee	SetPath		5240651	0					
ANR	5240660	Identifier	SetPath		5240651	0					
ANR	5240661	ArgumentList	path		5240651	1					
ANR	5240662	Argument	path		5240651	0					
ANR	5240663	Identifier	path		5240651	0					
ANR	5240664	CompoundStatement		2:25:26:26	5240651	1					
ANR	5240665	ReturnStatement	return - 1 ;	363:2:7841:7850	5240651	0	True				
ANR	5240666	UnaryOperationExpression	- 1		5240651	0					
ANR	5240667	UnaryOperator	-		5240651	0					
ANR	5240668	PrimaryExpression	1		5240651	1					
ANR	5240669	ReturnStatement	"return Stat ( which , force ) ;"	366:1:7857:7884	5240651	1	True				
ANR	5240670	CallExpression	"Stat ( which , force )"		5240651	0					
ANR	5240671	Callee	Stat		5240651	0					
ANR	5240672	Identifier	Stat		5240651	0					
ANR	5240673	ArgumentList	which		5240651	1					
ANR	5240674	Argument	which		5240651	0					
ANR	5240675	Identifier	which		5240651	0					
ANR	5240676	Argument	force		5240651	1					
ANR	5240677	Identifier	force		5240651	0					
ANR	5240678	ReturnType	int		5240651	1					
ANR	5240679	Identifier	StatWrapper :: Stat		5240651	2					
ANR	5240680	ParameterList	"const char * path , StatOpType which , bool force"		5240651	3					
ANR	5240681	Parameter	const char * path	360:19:7761:7776	5240651	0	True				
ANR	5240682	ParameterType	const char *		5240651	0					
ANR	5240683	Identifier	path		5240651	1					
ANR	5240684	Parameter	StatOpType which	360:37:7779:7794	5240651	1	True				
ANR	5240685	ParameterType	StatOpType		5240651	0					
ANR	5240686	Identifier	which		5240651	1					
ANR	5240687	Parameter	bool force	360:55:7797:7806	5240651	2	True				
ANR	5240688	ParameterType	bool		5240651	0					
ANR	5240689	Identifier	force		5240651	1					
ANR	5240690	CFGEntryNode	ENTRY		5240651		True				
ANR	5240691	CFGExitNode	EXIT		5240651		True				
ANR	5240692	Symbol	which		5240651						
ANR	5240693	Symbol	SetPath		5240651						
ANR	5240694	Symbol	path		5240651						
ANR	5240695	Symbol	Stat		5240651						
ANR	5240696	Symbol	force		5240651						
ANR	5240697	Function	StatWrapper :: Stat	370:0:7911:8034							
ANR	5240698	FunctionDef	"StatWrapper :: Stat (int fd , bool force)"		5240697	0					
ANR	5240699	CompoundStatement		372:0:7955:8034	5240697	0					
ANR	5240700	IfStatement	if ( ! SetFD ( fd ) )		5240697	0					
ANR	5240701	Condition	! SetFD ( fd )	373:6:7963:7974	5240697	0	True				
ANR	5240702	UnaryOperationExpression	! SetFD ( fd )		5240697	0					
ANR	5240703	UnaryOperator	!		5240697	0					
ANR	5240704	CallExpression	SetFD ( fd )		5240697	1					
ANR	5240705	Callee	SetFD		5240697	0					
ANR	5240706	Identifier	SetFD		5240697	0					
ANR	5240707	ArgumentList	fd		5240697	1					
ANR	5240708	Argument	fd		5240697	0					
ANR	5240709	Identifier	fd		5240697	0					
ANR	5240710	CompoundStatement		2:21:22:22	5240697	1					
ANR	5240711	ReturnStatement	return - 1 ;	374:2:7982:7991	5240697	0	True				
ANR	5240712	UnaryOperationExpression	- 1		5240697	0					
ANR	5240713	UnaryOperator	-		5240697	0					
ANR	5240714	PrimaryExpression	1		5240697	1					
ANR	5240715	ReturnStatement	"return Stat ( STATOP_FSTAT , force ) ;"	377:1:7998:8032	5240697	1	True				
ANR	5240716	CallExpression	"Stat ( STATOP_FSTAT , force )"		5240697	0					
ANR	5240717	Callee	Stat		5240697	0					
ANR	5240718	Identifier	Stat		5240697	0					
ANR	5240719	ArgumentList	STATOP_FSTAT		5240697	1					
ANR	5240720	Argument	STATOP_FSTAT		5240697	0					
ANR	5240721	Identifier	STATOP_FSTAT		5240697	0					
ANR	5240722	Argument	force		5240697	1					
ANR	5240723	Identifier	force		5240697	0					
ANR	5240724	ReturnType	int		5240697	1					
ANR	5240725	Identifier	StatWrapper :: Stat		5240697	2					
ANR	5240726	ParameterList	"int fd , bool force"		5240697	3					
ANR	5240727	Parameter	int fd	371:19:7934:7939	5240697	0	True				
ANR	5240728	ParameterType	int		5240697	0					
ANR	5240729	Identifier	fd		5240697	1					
ANR	5240730	Parameter	bool force	371:27:7942:7951	5240697	1	True				
ANR	5240731	ParameterType	bool		5240697	0					
ANR	5240732	Identifier	force		5240697	1					
ANR	5240733	CFGEntryNode	ENTRY		5240697		True				
ANR	5240734	CFGExitNode	EXIT		5240697		True				
ANR	5240735	Symbol	SetFD		5240697						
ANR	5240736	Symbol	Stat		5240697						
ANR	5240737	Symbol	force		5240697						
ANR	5240738	Symbol	STATOP_FSTAT		5240697						
ANR	5240739	Symbol	fd		5240697						
ANR	5240740	Function	StatWrapper :: Retry	381:0:8065:8134							
ANR	5240741	FunctionDef	StatWrapper :: Retry ()		5240740	0					
ANR	5240742	CompoundStatement		383:0:8096:8134	5240740	0					
ANR	5240743	ReturnStatement	return m_last_op -> StatAll ( true ) ;	384:1:8099:8132	5240740	0	True				
ANR	5240744	CallExpression	m_last_op -> StatAll ( true )		5240740	0					
ANR	5240745	Callee	m_last_op -> StatAll		5240740	0					
ANR	5240746	PtrMemberAccess	m_last_op -> StatAll		5240740	0					
ANR	5240747	Identifier	m_last_op		5240740	0					
ANR	5240748	Identifier	StatAll		5240740	1					
ANR	5240749	ArgumentList	true		5240740	1					
ANR	5240750	Argument	true		5240740	0					
ANR	5240751	Identifier	true		5240740	0					
ANR	5240752	ReturnType	int		5240740	1					
ANR	5240753	Identifier	StatWrapper :: Retry		5240740	2					
ANR	5240754	ParameterList			5240740	3					
ANR	5240755	CFGEntryNode	ENTRY		5240740		True				
ANR	5240756	CFGExitNode	EXIT		5240740		True				
ANR	5240757	Symbol	true		5240740						
ANR	5240758	Symbol	m_last_op -> StatAll		5240740						
ANR	5240759	Symbol	* m_last_op		5240740						
ANR	5240760	Symbol	m_last_op		5240740						
ANR	5240761	Function	StatWrapper :: GetStat	388:0:8163:8409							
ANR	5240762	FunctionDef	StatWrapper :: GetStat (StatOpType which)		5240761	0					
ANR	5240763	CompoundStatement		390:0:8231:8409	5240761	0					
ANR	5240764	IfStatement	if ( STATOP_LAST == which )		5240761	0					
ANR	5240765	Condition	STATOP_LAST == which	391:6:8239:8258	5240761	0	True				
ANR	5240766	EqualityExpression	STATOP_LAST == which		5240761	0		==			
ANR	5240767	Identifier	STATOP_LAST		5240761	0					
ANR	5240768	Identifier	which		5240761	1					
ANR	5240769	CompoundStatement		2:29:30:30	5240761	1					
ANR	5240770	ExpressionStatement	which = m_last_which	392:2:8266:8286	5240761	0	True				
ANR	5240771	AssignmentExpression	which = m_last_which		5240761	0		=			
ANR	5240772	Identifier	which		5240761	0					
ANR	5240773	Identifier	m_last_which		5240761	1					
ANR	5240774	IfStatement	if ( ( which < STATOP_MIN ) || ( which > STATOP_MAX ) )		5240761	1					
ANR	5240775	Condition	( which < STATOP_MIN ) || ( which > STATOP_MAX )	394:6:8297:8340	5240761	0	True				
ANR	5240776	OrExpression	( which < STATOP_MIN ) || ( which > STATOP_MAX )		5240761	0		||			
ANR	5240777	RelationalExpression	which < STATOP_MIN		5240761	0		<			
ANR	5240778	Identifier	which		5240761	0					
ANR	5240779	Identifier	STATOP_MIN		5240761	1					
ANR	5240780	RelationalExpression	which > STATOP_MAX		5240761	1		>			
ANR	5240781	Identifier	which		5240761	0					
ANR	5240782	Identifier	STATOP_MAX		5240761	1					
ANR	5240783	CompoundStatement		5:53:112:112	5240761	1					
ANR	5240784	ExpressionStatement	which = STATOP_NONE	395:2:8348:8367	5240761	0	True				
ANR	5240785	AssignmentExpression	which = STATOP_NONE		5240761	0		=			
ANR	5240786	Identifier	which		5240761	0					
ANR	5240787	Identifier	STATOP_NONE		5240761	1					
ANR	5240788	ReturnStatement	return m_ops [ which ] -> getPrimary ( ) ;	397:1:8373:8407	5240761	2	True				
ANR	5240789	CallExpression	m_ops [ which ] -> getPrimary ( )		5240761	0					
ANR	5240790	Callee	m_ops [ which ] -> getPrimary		5240761	0					
ANR	5240791	PtrMemberAccess	m_ops [ which ] -> getPrimary		5240761	0					
ANR	5240792	ArrayIndexing	m_ops [ which ]		5240761	0					
ANR	5240793	Identifier	m_ops		5240761	0					
ANR	5240794	Identifier	which		5240761	1					
ANR	5240795	Identifier	getPrimary		5240761	1					
ANR	5240796	ArgumentList			5240761	1					
ANR	5240797	ReturnType	StatWrapperIntBase *		5240761	1					
ANR	5240798	Identifier	StatWrapper :: GetStat		5240761	2					
ANR	5240799	ParameterList	StatOpType which		5240761	3					
ANR	5240800	Parameter	StatOpType which	389:22:8206:8221	5240761	0	True				
ANR	5240801	ParameterType	StatOpType		5240761	0					
ANR	5240802	Identifier	which		5240761	1					
ANR	5240803	CFGEntryNode	ENTRY		5240761		True				
ANR	5240804	CFGExitNode	EXIT		5240761		True				
ANR	5240805	Symbol	which		5240761						
ANR	5240806	Symbol	STATOP_LAST		5240761						
ANR	5240807	Symbol	STATOP_NONE		5240761						
ANR	5240808	Symbol	STATOP_MAX		5240761						
ANR	5240809	Symbol	STATOP_MIN		5240761						
ANR	5240810	Symbol	* m_ops		5240761						
ANR	5240811	Symbol	m_last_which		5240761						
ANR	5240812	Symbol	* * m_ops		5240761						
ANR	5240813	Symbol	* which		5240761						
ANR	5240814	Symbol	m_ops		5240761						
ANR	5240815	Symbol	* * which		5240761						
ANR	5240816	Symbol	m_ops [ which ] -> getPrimary		5240761						
