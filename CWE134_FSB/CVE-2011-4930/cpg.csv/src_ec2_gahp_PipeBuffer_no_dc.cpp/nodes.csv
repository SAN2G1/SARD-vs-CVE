command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5069672	File	data/converged/CVE-2011-4930_htcondor/src_ec2_gahp_PipeBuffer_no_dc.cpp								
ANR	5069673	Function	PipeBuffer :: PipeBuffer	25:0:916:1140							
ANR	5069674	FunctionDef	PipeBuffer :: PipeBuffer (int _pipe_end)		5069673	0					
ANR	5069675	CompoundStatement		25:39:955:1140	5069673	0					
ANR	5069676	ExpressionStatement	pipe_end = _pipe_end	26:1:958:978	5069673	0	True				
ANR	5069677	AssignmentExpression	pipe_end = _pipe_end		5069673	0		=			
ANR	5069678	Identifier	pipe_end		5069673	0					
ANR	5069679	Identifier	_pipe_end		5069673	1					
ANR	5069680	ExpressionStatement	buffer . reserve ( 5000 )	27:2:982:1003	5069673	1	True				
ANR	5069681	CallExpression	buffer . reserve ( 5000 )		5069673	0					
ANR	5069682	Callee	buffer . reserve		5069673	0					
ANR	5069683	MemberAccess	buffer . reserve		5069673	0					
ANR	5069684	Identifier	buffer		5069673	0					
ANR	5069685	Identifier	reserve		5069673	1					
ANR	5069686	ArgumentList	5000		5069673	1					
ANR	5069687	Argument	5000		5069673	0					
ANR	5069688	PrimaryExpression	5000		5069673	0					
ANR	5069689	ExpressionStatement	error = false	28:1:1006:1019	5069673	2	True				
ANR	5069690	AssignmentExpression	error = false		5069673	0		=			
ANR	5069691	Identifier	error		5069673	0					
ANR	5069692	Identifier	false		5069673	1					
ANR	5069693	ExpressionStatement	eof = false	29:1:1022:1033	5069673	3	True				
ANR	5069694	AssignmentExpression	eof = false		5069673	0		=			
ANR	5069695	Identifier	eof		5069673	0					
ANR	5069696	Identifier	false		5069673	1					
ANR	5069697	ExpressionStatement	last_char_was_escape = false	30:1:1036:1064	5069673	4	True				
ANR	5069698	AssignmentExpression	last_char_was_escape = false		5069673	0		=			
ANR	5069699	Identifier	last_char_was_escape		5069673	0					
ANR	5069700	Identifier	false		5069673	1					
ANR	5069701	ExpressionStatement	readahead_length = 0	31:1:1067:1087	5069673	5	True				
ANR	5069702	AssignmentExpression	readahead_length = 0		5069673	0		=			
ANR	5069703	Identifier	readahead_length		5069673	0					
ANR	5069704	PrimaryExpression	0		5069673	1					
ANR	5069705	ExpressionStatement	readahead_index = 0	32:1:1090:1109	5069673	6	True				
ANR	5069706	AssignmentExpression	readahead_index = 0		5069673	0		=			
ANR	5069707	Identifier	readahead_index		5069673	0					
ANR	5069708	PrimaryExpression	0		5069673	1					
ANR	5069709	ExpressionStatement	readahead_buffer [ 0 ] = '\\0'	33:1:1112:1138	5069673	7	True				
ANR	5069710	AssignmentExpression	readahead_buffer [ 0 ] = '\\0'		5069673	0		=			
ANR	5069711	ArrayIndexing	readahead_buffer [ 0 ]		5069673	0					
ANR	5069712	Identifier	readahead_buffer		5069673	0					
ANR	5069713	PrimaryExpression	0		5069673	1					
ANR	5069714	PrimaryExpression	'\\0'		5069673	1					
ANR	5069715	Identifier	PipeBuffer :: PipeBuffer		5069673	1					
ANR	5069716	ParameterList	int _pipe_end		5069673	2					
ANR	5069717	Parameter	int _pipe_end	25:24:940:952	5069673	0	True				
ANR	5069718	ParameterType	int		5069673	0					
ANR	5069719	Identifier	_pipe_end		5069673	1					
ANR	5069720	CFGEntryNode	ENTRY		5069673		True				
ANR	5069721	CFGExitNode	EXIT		5069673		True				
ANR	5069722	Symbol	* readahead_buffer		5069673						
ANR	5069723	Symbol	pipe_end		5069673						
ANR	5069724	Symbol	last_char_was_escape		5069673						
ANR	5069725	Symbol	_pipe_end		5069673						
ANR	5069726	Symbol	false		5069673						
ANR	5069727	Symbol	readahead_index		5069673						
ANR	5069728	Symbol	readahead_buffer		5069673						
ANR	5069729	Symbol	buffer		5069673						
ANR	5069730	Symbol	readahead_length		5069673						
ANR	5069731	Symbol	error		5069673						
ANR	5069732	Symbol	eof		5069673						
ANR	5069733	Function	PipeBuffer :: PipeBuffer	36:0:1143:1346							
ANR	5069734	FunctionDef	PipeBuffer :: PipeBuffer ()		5069733	0					
ANR	5069735	CompoundStatement		36:25:1168:1346	5069733	0					
ANR	5069736	ExpressionStatement	pipe_end = - 1	37:1:1171:1184	5069733	0	True				
ANR	5069737	AssignmentExpression	pipe_end = - 1		5069733	0		=			
ANR	5069738	Identifier	pipe_end		5069733	0					
ANR	5069739	UnaryOperationExpression	- 1		5069733	1					
ANR	5069740	UnaryOperator	-		5069733	0					
ANR	5069741	PrimaryExpression	1		5069733	1					
ANR	5069742	ExpressionStatement	buffer . reserve ( 5000 )	38:2:1188:1209	5069733	1	True				
ANR	5069743	CallExpression	buffer . reserve ( 5000 )		5069733	0					
ANR	5069744	Callee	buffer . reserve		5069733	0					
ANR	5069745	MemberAccess	buffer . reserve		5069733	0					
ANR	5069746	Identifier	buffer		5069733	0					
ANR	5069747	Identifier	reserve		5069733	1					
ANR	5069748	ArgumentList	5000		5069733	1					
ANR	5069749	Argument	5000		5069733	0					
ANR	5069750	PrimaryExpression	5000		5069733	0					
ANR	5069751	ExpressionStatement	error = false	39:1:1212:1225	5069733	2	True				
ANR	5069752	AssignmentExpression	error = false		5069733	0		=			
ANR	5069753	Identifier	error		5069733	0					
ANR	5069754	Identifier	false		5069733	1					
ANR	5069755	ExpressionStatement	eof = false	40:1:1228:1239	5069733	3	True				
ANR	5069756	AssignmentExpression	eof = false		5069733	0		=			
ANR	5069757	Identifier	eof		5069733	0					
ANR	5069758	Identifier	false		5069733	1					
ANR	5069759	ExpressionStatement	last_char_was_escape = false	41:1:1242:1270	5069733	4	True				
ANR	5069760	AssignmentExpression	last_char_was_escape = false		5069733	0		=			
ANR	5069761	Identifier	last_char_was_escape		5069733	0					
ANR	5069762	Identifier	false		5069733	1					
ANR	5069763	ExpressionStatement	readahead_length = 0	42:1:1273:1293	5069733	5	True				
ANR	5069764	AssignmentExpression	readahead_length = 0		5069733	0		=			
ANR	5069765	Identifier	readahead_length		5069733	0					
ANR	5069766	PrimaryExpression	0		5069733	1					
ANR	5069767	ExpressionStatement	readahead_index = 0	43:1:1296:1315	5069733	6	True				
ANR	5069768	AssignmentExpression	readahead_index = 0		5069733	0		=			
ANR	5069769	Identifier	readahead_index		5069733	0					
ANR	5069770	PrimaryExpression	0		5069733	1					
ANR	5069771	ExpressionStatement	readahead_buffer [ 0 ] = '\\0'	44:1:1318:1344	5069733	7	True				
ANR	5069772	AssignmentExpression	readahead_buffer [ 0 ] = '\\0'		5069733	0		=			
ANR	5069773	ArrayIndexing	readahead_buffer [ 0 ]		5069733	0					
ANR	5069774	Identifier	readahead_buffer		5069733	0					
ANR	5069775	PrimaryExpression	0		5069733	1					
ANR	5069776	PrimaryExpression	'\\0'		5069733	1					
ANR	5069777	Identifier	PipeBuffer :: PipeBuffer		5069733	1					
ANR	5069778	ParameterList			5069733	2					
ANR	5069779	CFGEntryNode	ENTRY		5069733		True				
ANR	5069780	CFGExitNode	EXIT		5069733		True				
ANR	5069781	Symbol	* readahead_buffer		5069733						
ANR	5069782	Symbol	pipe_end		5069733						
ANR	5069783	Symbol	last_char_was_escape		5069733						
ANR	5069784	Symbol	false		5069733						
ANR	5069785	Symbol	readahead_index		5069733						
ANR	5069786	Symbol	readahead_buffer		5069733						
ANR	5069787	Symbol	buffer		5069733						
ANR	5069788	Symbol	readahead_length		5069733						
ANR	5069789	Symbol	error		5069733						
ANR	5069790	Symbol	eof		5069733						
ANR	5069791	Function	PipeBuffer :: GetNextLine	47:0:1349:2671							
ANR	5069792	FunctionDef	PipeBuffer :: GetNextLine ()		5069791	0					
ANR	5069793	CompoundStatement		48:27:1390:2671	5069791	0					
ANR	5069794	IfStatement	if ( readahead_length == 0 )		5069791	0					
ANR	5069795	Condition	readahead_length == 0	50:5:1398:1418	5069791	0	True				
ANR	5069796	EqualityExpression	readahead_length == 0		5069791	0		==			
ANR	5069797	Identifier	readahead_length		5069791	0					
ANR	5069798	PrimaryExpression	0		5069791	1					
ANR	5069799	CompoundStatement		3:28:30:30	5069791	1					
ANR	5069800	ExpressionStatement	amazon_gahp_release_big_mutex ( )	55:2:1563:1594	5069791	0	True				
ANR	5069801	CallExpression	amazon_gahp_release_big_mutex ( )		5069791	0					
ANR	5069802	Callee	amazon_gahp_release_big_mutex		5069791	0					
ANR	5069803	Identifier	amazon_gahp_release_big_mutex		5069791	0					
ANR	5069804	ArgumentList			5069791	1					
ANR	5069805	ExpressionStatement	"readahead_length = read ( pipe_end , readahead_buffer , PIPE_BUFFER_READAHEAD_SIZE )"	56:2:1598:1677	5069791	1	True				
ANR	5069806	AssignmentExpression	"readahead_length = read ( pipe_end , readahead_buffer , PIPE_BUFFER_READAHEAD_SIZE )"		5069791	0		=			
ANR	5069807	Identifier	readahead_length		5069791	0					
ANR	5069808	CallExpression	"read ( pipe_end , readahead_buffer , PIPE_BUFFER_READAHEAD_SIZE )"		5069791	1					
ANR	5069809	Callee	read		5069791	0					
ANR	5069810	Identifier	read		5069791	0					
ANR	5069811	ArgumentList	pipe_end		5069791	1					
ANR	5069812	Argument	pipe_end		5069791	0					
ANR	5069813	Identifier	pipe_end		5069791	0					
ANR	5069814	Argument	readahead_buffer		5069791	1					
ANR	5069815	Identifier	readahead_buffer		5069791	0					
ANR	5069816	Argument	PIPE_BUFFER_READAHEAD_SIZE		5069791	2					
ANR	5069817	Identifier	PIPE_BUFFER_READAHEAD_SIZE		5069791	0					
ANR	5069818	ExpressionStatement	amazon_gahp_grab_big_mutex ( )	57:2:1681:1709	5069791	2	True				
ANR	5069819	CallExpression	amazon_gahp_grab_big_mutex ( )		5069791	0					
ANR	5069820	Callee	amazon_gahp_grab_big_mutex		5069791	0					
ANR	5069821	Identifier	amazon_gahp_grab_big_mutex		5069791	0					
ANR	5069822	ArgumentList			5069791	1					
ANR	5069823	IfStatement	if ( readahead_length < 0 )		5069791	3					
ANR	5069824	Condition	readahead_length < 0	58:6:1717:1736	5069791	0	True				
ANR	5069825	RelationalExpression	readahead_length < 0		5069791	0		<			
ANR	5069826	Identifier	readahead_length		5069791	0					
ANR	5069827	PrimaryExpression	0		5069791	1					
ANR	5069828	CompoundStatement		11:28:348:348	5069791	1					
ANR	5069829	ExpressionStatement	error = true	59:3:1744:1756	5069791	0	True				
ANR	5069830	AssignmentExpression	error = true		5069791	0		=			
ANR	5069831	Identifier	error		5069791	0					
ANR	5069832	Identifier	true		5069791	1					
ANR	5069833	ExpressionStatement	"dprintf ( D_ALWAYS , ""error reading from pipe %d\\n"" , pipe_end )"	60:3:1761:1821	5069791	1	True				
ANR	5069834	CallExpression	"dprintf ( D_ALWAYS , ""error reading from pipe %d\\n"" , pipe_end )"		5069791	0					
ANR	5069835	Callee	dprintf		5069791	0					
ANR	5069836	Identifier	dprintf		5069791	0					
ANR	5069837	ArgumentList	D_ALWAYS		5069791	1					
ANR	5069838	Argument	D_ALWAYS		5069791	0					
ANR	5069839	Identifier	D_ALWAYS		5069791	0					
ANR	5069840	Argument	"""error reading from pipe %d\\n"""		5069791	1					
ANR	5069841	PrimaryExpression	"""error reading from pipe %d\\n"""		5069791	0					
ANR	5069842	Argument	pipe_end		5069791	2					
ANR	5069843	Identifier	pipe_end		5069791	0					
ANR	5069844	ReturnStatement	return NULL ;	61:3:1826:1837	5069791	2	True				
ANR	5069845	Identifier	NULL		5069791	0					
ANR	5069846	IfStatement	if ( readahead_length == 0 )		5069791	4					
ANR	5069847	Condition	readahead_length == 0	63:6:1849:1869	5069791	0	True				
ANR	5069848	EqualityExpression	readahead_length == 0		5069791	0		==			
ANR	5069849	Identifier	readahead_length		5069791	0					
ANR	5069850	PrimaryExpression	0		5069791	1					
ANR	5069851	CompoundStatement		16:29:481:481	5069791	1					
ANR	5069852	ExpressionStatement	eof = true	64:3:1877:1887	5069791	0	True				
ANR	5069853	AssignmentExpression	eof = true		5069791	0		=			
ANR	5069854	Identifier	eof		5069791	0					
ANR	5069855	Identifier	true		5069791	1					
ANR	5069856	ExpressionStatement	"dprintf ( D_ALWAYS , ""EOF reached on pipe %d\\n"" , pipe_end )"	65:3:1892:1947	5069791	1	True				
ANR	5069857	CallExpression	"dprintf ( D_ALWAYS , ""EOF reached on pipe %d\\n"" , pipe_end )"		5069791	0					
ANR	5069858	Callee	dprintf		5069791	0					
ANR	5069859	Identifier	dprintf		5069791	0					
ANR	5069860	ArgumentList	D_ALWAYS		5069791	1					
ANR	5069861	Argument	D_ALWAYS		5069791	0					
ANR	5069862	Identifier	D_ALWAYS		5069791	0					
ANR	5069863	Argument	"""EOF reached on pipe %d\\n"""		5069791	1					
ANR	5069864	PrimaryExpression	"""EOF reached on pipe %d\\n"""		5069791	0					
ANR	5069865	Argument	pipe_end		5069791	2					
ANR	5069866	Identifier	pipe_end		5069791	0					
ANR	5069867	ReturnStatement	return NULL ;	66:3:1952:1963	5069791	2	True				
ANR	5069868	Identifier	NULL		5069791	0					
ANR	5069869	ExpressionStatement	readahead_index = 0	70:2:2046:2065	5069791	5	True				
ANR	5069870	AssignmentExpression	readahead_index = 0		5069791	0		=			
ANR	5069871	Identifier	readahead_index		5069791	0					
ANR	5069872	PrimaryExpression	0		5069791	1					
ANR	5069873	WhileStatement	while ( readahead_index != readahead_length )		5069791	1					
ANR	5069874	Condition	readahead_index != readahead_length	73:8:2079:2113	5069791	0	True				
ANR	5069875	EqualityExpression	readahead_index != readahead_length		5069791	0		!=			
ANR	5069876	Identifier	readahead_index		5069791	0					
ANR	5069877	Identifier	readahead_length		5069791	1					
ANR	5069878	CompoundStatement		28:2:730:774	5069791	1					
ANR	5069879	IdentifierDeclStatement	char c = readahead_buffer [ readahead_index ++ ] ;	75:2:2121:2165	5069791	0	True				
ANR	5069880	IdentifierDecl	c = readahead_buffer [ readahead_index ++ ]		5069791	0					
ANR	5069881	IdentifierDeclType	char		5069791	0					
ANR	5069882	Identifier	c		5069791	1					
ANR	5069883	AssignmentExpression	c = readahead_buffer [ readahead_index ++ ]		5069791	2		=			
ANR	5069884	Identifier	c		5069791	0					
ANR	5069885	ArrayIndexing	readahead_buffer [ readahead_index ++ ]		5069791	1					
ANR	5069886	Identifier	readahead_buffer		5069791	0					
ANR	5069887	PostIncDecOperationExpression	readahead_index ++		5069791	1					
ANR	5069888	Identifier	readahead_index		5069791	0					
ANR	5069889	IncDec	++		5069791	1					
ANR	5069890	IfStatement	if ( c == '\\n' && ! last_char_was_escape )		5069791	1					
ANR	5069891	Condition	c == '\\n' && ! last_char_was_escape	77:6:2174:2207	5069791	0	True				
ANR	5069892	AndExpression	c == '\\n' && ! last_char_was_escape		5069791	0		&&			
ANR	5069893	EqualityExpression	c == '\\n'		5069791	0		==			
ANR	5069894	Identifier	c		5069791	0					
ANR	5069895	PrimaryExpression	'\\n'		5069791	1					
ANR	5069896	UnaryOperationExpression	! last_char_was_escape		5069791	1					
ANR	5069897	UnaryOperator	!		5069791	0					
ANR	5069898	Identifier	last_char_was_escape		5069791	1					
ANR	5069899	CompoundStatement		32:3:857:902	5069791	1					
ANR	5069900	IdentifierDeclStatement	std :: string * result = new std :: string ( buffer ) ;	79:3:2248:2293	5069791	0	True				
ANR	5069901	IdentifierDecl	* result = new std :: string ( buffer )		5069791	0					
ANR	5069902	IdentifierDeclType	std :: string *		5069791	0					
ANR	5069903	Identifier	result		5069791	1					
ANR	5069904	AssignmentExpression	* result = new std :: string ( buffer )		5069791	2		=			
ANR	5069905	Identifier	buffer		5069791	0					
ANR	5069906	Identifier	buffer		5069791	1					
ANR	5069907	ExpressionStatement	"buffer = """""	80:3:2298:2309	5069791	1	True				
ANR	5069908	AssignmentExpression	"buffer = """""		5069791	0		=			
ANR	5069909	Identifier	buffer		5069791	0					
ANR	5069910	PrimaryExpression	""""""		5069791	1					
ANR	5069911	ReturnStatement	return result ;	81:3:2314:2327	5069791	2	True				
ANR	5069912	Identifier	result		5069791	0					
ANR	5069913	ElseStatement	else		5069791	0					
ANR	5069914	IfStatement	if ( c == '\\r' && ! last_char_was_escape )		5069791	0					
ANR	5069915	Condition	c == '\\r' && ! last_char_was_escape	82:13:2342:2375	5069791	0	True				
ANR	5069916	AndExpression	c == '\\r' && ! last_char_was_escape		5069791	0		&&			
ANR	5069917	EqualityExpression	c == '\\r'		5069791	0		==			
ANR	5069918	Identifier	c		5069791	0					
ANR	5069919	PrimaryExpression	'\\r'		5069791	1					
ANR	5069920	UnaryOperationExpression	! last_char_was_escape		5069791	1					
ANR	5069921	UnaryOperator	!		5069791	0					
ANR	5069922	Identifier	last_char_was_escape		5069791	1					
ANR	5069923	CompoundStatement		35:49:987:987	5069791	1					
ANR	5069924	ElseStatement	else		5069791	0					
ANR	5069925	CompoundStatement		37:9:1015:1015	5069791	0					
ANR	5069926	ExpressionStatement	buffer += c	85:3:2411:2422	5069791	0	True				
ANR	5069927	AssignmentExpression	buffer += c		5069791	0		+=			
ANR	5069928	Identifier	buffer		5069791	0					
ANR	5069929	Identifier	c		5069791	1					
ANR	5069930	IfStatement	if ( c == '\\\\' )		5069791	1					
ANR	5069931	Condition	c == '\\\\'	87:7:2432:2440	5069791	0	True				
ANR	5069932	EqualityExpression	c == '\\\\'		5069791	0		==			
ANR	5069933	Identifier	c		5069791	0					
ANR	5069934	PrimaryExpression	'\\\\'		5069791	1					
ANR	5069935	CompoundStatement		40:18:1052:1052	5069791	1					
ANR	5069936	ExpressionStatement	last_char_was_escape = ! last_char_was_escape	88:4:2449:2493	5069791	0	True				
ANR	5069937	AssignmentExpression	last_char_was_escape = ! last_char_was_escape		5069791	0		=			
ANR	5069938	Identifier	last_char_was_escape		5069791	0					
ANR	5069939	UnaryOperationExpression	! last_char_was_escape		5069791	1					
ANR	5069940	UnaryOperator	!		5069791	0					
ANR	5069941	Identifier	last_char_was_escape		5069791	1					
ANR	5069942	ElseStatement	else		5069791	0					
ANR	5069943	CompoundStatement		43:8:1117:1117	5069791	0					
ANR	5069944	ExpressionStatement	last_char_was_escape = false	91:4:2514:2542	5069791	0	True				
ANR	5069945	AssignmentExpression	last_char_was_escape = false		5069791	0		=			
ANR	5069946	Identifier	last_char_was_escape		5069791	0					
ANR	5069947	Identifier	false		5069791	1					
ANR	5069948	ExpressionStatement	readahead_length = 0	97:1:2635:2655	5069791	2	True				
ANR	5069949	AssignmentExpression	readahead_length = 0		5069791	0		=			
ANR	5069950	Identifier	readahead_length		5069791	0					
ANR	5069951	PrimaryExpression	0		5069791	1					
ANR	5069952	ReturnStatement	return NULL ;	98:1:2658:2669	5069791	3	True				
ANR	5069953	Identifier	NULL		5069791	0					
ANR	5069954	ReturnType	std :: string *		5069791	1					
ANR	5069955	Identifier	PipeBuffer :: GetNextLine		5069791	2					
ANR	5069956	ParameterList			5069791	3					
ANR	5069957	CFGEntryNode	ENTRY		5069791		True				
ANR	5069958	CFGExitNode	EXIT		5069791		True				
ANR	5069959	Symbol	read		5069791						
ANR	5069960	Symbol	NULL		5069791						
ANR	5069961	Symbol	* readahead_buffer		5069791						
ANR	5069962	Symbol	c		5069791						
ANR	5069963	Symbol	pipe_end		5069791						
ANR	5069964	Symbol	last_char_was_escape		5069791						
ANR	5069965	Symbol	PIPE_BUFFER_READAHEAD_SIZE		5069791						
ANR	5069966	Symbol	D_ALWAYS		5069791						
ANR	5069967	Symbol	readahead_index		5069791						
ANR	5069968	Symbol	false		5069791						
ANR	5069969	Symbol	readahead_buffer		5069791						
ANR	5069970	Symbol	readahead_length		5069791						
ANR	5069971	Symbol	error		5069791						
ANR	5069972	Symbol	result		5069791						
ANR	5069973	Symbol	true		5069791						
ANR	5069974	Symbol	buffer		5069791						
ANR	5069975	Symbol	eof		5069791						
ANR	5069976	Function	PipeBuffer :: Write	101:0:2674:3321							
ANR	5069977	FunctionDef	PipeBuffer :: Write (const char * towrite)		5069976	0					
ANR	5069978	CompoundStatement		102:41:2719:3321	5069976	0					
ANR	5069979	IfStatement	if ( towrite )		5069976	0					
ANR	5069980	Condition	towrite	104:5:2728:2734	5069976	0	True				
ANR	5069981	Identifier	towrite		5069976	0					
ANR	5069982	ExpressionStatement	buffer += towrite	105:2:2739:2756	5069976	1	True				
ANR	5069983	AssignmentExpression	buffer += towrite		5069976	0		+=			
ANR	5069984	Identifier	buffer		5069976	0					
ANR	5069985	Identifier	towrite		5069976	1					
ANR	5069986	IdentifierDeclStatement	int len = buffer . length ( ) ;	107:1:2760:2785	5069976	1	True				
ANR	5069987	IdentifierDecl	len = buffer . length ( )		5069976	0					
ANR	5069988	IdentifierDeclType	int		5069976	0					
ANR	5069989	Identifier	len		5069976	1					
ANR	5069990	AssignmentExpression	len = buffer . length ( )		5069976	2		=			
ANR	5069991	Identifier	len		5069976	0					
ANR	5069992	CallExpression	buffer . length ( )		5069976	1					
ANR	5069993	Callee	buffer . length		5069976	0					
ANR	5069994	MemberAccess	buffer . length		5069976	0					
ANR	5069995	Identifier	buffer		5069976	0					
ANR	5069996	Identifier	length		5069976	1					
ANR	5069997	ArgumentList			5069976	1					
ANR	5069998	IfStatement	if ( len == 0 )		5069976	2					
ANR	5069999	Condition	len == 0	108:5:2792:2799	5069976	0	True				
ANR	5070000	EqualityExpression	len == 0		5069976	0		==			
ANR	5070001	Identifier	len		5069976	0					
ANR	5070002	PrimaryExpression	0		5069976	1					
ANR	5070003	ReturnStatement	return 0 ;	109:2:2804:2812	5069976	1	True				
ANR	5070004	PrimaryExpression	0		5069976	0					
ANR	5070005	ExpressionStatement	amazon_gahp_release_big_mutex ( )	112:1:2870:2901	5069976	3	True				
ANR	5070006	CallExpression	amazon_gahp_release_big_mutex ( )		5069976	0					
ANR	5070007	Callee	amazon_gahp_release_big_mutex		5069976	0					
ANR	5070008	Identifier	amazon_gahp_release_big_mutex		5069976	0					
ANR	5070009	ArgumentList			5069976	1					
ANR	5070010	IdentifierDeclStatement	"int numwritten = write ( pipe_end , buffer . c_str ( ) , len ) ;"	113:1:2904:2957	5069976	4	True				
ANR	5070011	IdentifierDecl	"numwritten = write ( pipe_end , buffer . c_str ( ) , len )"		5069976	0					
ANR	5070012	IdentifierDeclType	int		5069976	0					
ANR	5070013	Identifier	numwritten		5069976	1					
ANR	5070014	AssignmentExpression	"numwritten = write ( pipe_end , buffer . c_str ( ) , len )"		5069976	2		=			
ANR	5070015	Identifier	numwritten		5069976	0					
ANR	5070016	CallExpression	"write ( pipe_end , buffer . c_str ( ) , len )"		5069976	1					
ANR	5070017	Callee	write		5069976	0					
ANR	5070018	Identifier	write		5069976	0					
ANR	5070019	ArgumentList	pipe_end		5069976	1					
ANR	5070020	Argument	pipe_end		5069976	0					
ANR	5070021	Identifier	pipe_end		5069976	0					
ANR	5070022	Argument	buffer . c_str ( )		5069976	1					
ANR	5070023	CallExpression	buffer . c_str ( )		5069976	0					
ANR	5070024	Callee	buffer . c_str		5069976	0					
ANR	5070025	MemberAccess	buffer . c_str		5069976	0					
ANR	5070026	Identifier	buffer		5069976	0					
ANR	5070027	Identifier	c_str		5069976	1					
ANR	5070028	ArgumentList			5069976	1					
ANR	5070029	Argument	len		5069976	2					
ANR	5070030	Identifier	len		5069976	0					
ANR	5070031	ExpressionStatement	amazon_gahp_grab_big_mutex ( )	114:1:2960:2988	5069976	5	True				
ANR	5070032	CallExpression	amazon_gahp_grab_big_mutex ( )		5069976	0					
ANR	5070033	Callee	amazon_gahp_grab_big_mutex		5069976	0					
ANR	5070034	Identifier	amazon_gahp_grab_big_mutex		5069976	0					
ANR	5070035	ArgumentList			5069976	1					
ANR	5070036	IfStatement	if ( numwritten > 0 )		5069976	6					
ANR	5070037	Condition	numwritten > 0	116:5:2996:3009	5069976	0	True				
ANR	5070038	RelationalExpression	numwritten > 0		5069976	0		>			
ANR	5070039	Identifier	numwritten		5069976	0					
ANR	5070040	PrimaryExpression	0		5069976	1					
ANR	5070041	CompoundStatement		15:21:292:292	5069976	1					
ANR	5070042	ExpressionStatement	"buffer = buffer . erase ( 0 , numwritten )"	118:2:3041:3078	5069976	0	True				
ANR	5070043	AssignmentExpression	"buffer = buffer . erase ( 0 , numwritten )"		5069976	0		=			
ANR	5070044	Identifier	buffer		5069976	0					
ANR	5070045	CallExpression	"buffer . erase ( 0 , numwritten )"		5069976	1					
ANR	5070046	Callee	buffer . erase		5069976	0					
ANR	5070047	MemberAccess	buffer . erase		5069976	0					
ANR	5070048	Identifier	buffer		5069976	0					
ANR	5070049	Identifier	erase		5069976	1					
ANR	5070050	ArgumentList	0		5069976	1					
ANR	5070051	Argument	0		5069976	0					
ANR	5070052	PrimaryExpression	0		5069976	0					
ANR	5070053	Argument	numwritten		5069976	1					
ANR	5070054	Identifier	numwritten		5069976	0					
ANR	5070055	ReturnStatement	return numwritten ;	119:2:3082:3099	5069976	1	True				
ANR	5070056	Identifier	numwritten		5069976	0					
ANR	5070057	ElseStatement	else		5069976	0					
ANR	5070058	IfStatement	if ( numwritten == 0 )		5069976	0					
ANR	5070059	Condition	numwritten == 0	120:13:3114:3128	5069976	0	True				
ANR	5070060	EqualityExpression	numwritten == 0		5069976	0		==			
ANR	5070061	Identifier	numwritten		5069976	0					
ANR	5070062	PrimaryExpression	0		5069976	1					
ANR	5070063	CompoundStatement		19:31:412:412	5069976	1					
ANR	5070064	ReturnStatement	return 0 ;	121:2:3136:3144	5069976	0	True				
ANR	5070065	PrimaryExpression	0		5069976	0					
ANR	5070066	ElseStatement	else		5069976	0					
ANR	5070067	CompoundStatement		21:8:434:434	5069976	0					
ANR	5070068	IfStatement	if ( errno == EAGAIN || errno == EWOULDBLOCK )		5069976	0					
ANR	5070069	Condition	errno == EAGAIN || errno == EWOULDBLOCK	123:6:3162:3200	5069976	0	True				
ANR	5070070	OrExpression	errno == EAGAIN || errno == EWOULDBLOCK		5069976	0		||			
ANR	5070071	EqualityExpression	errno == EAGAIN		5069976	0		==			
ANR	5070072	Identifier	errno		5069976	0					
ANR	5070073	Identifier	EAGAIN		5069976	1					
ANR	5070074	EqualityExpression	errno == EWOULDBLOCK		5069976	1		==			
ANR	5070075	Identifier	errno		5069976	0					
ANR	5070076	Identifier	EWOULDBLOCK		5069976	1					
ANR	5070077	ReturnStatement	return 0 ;	124:3:3206:3214	5069976	1	True				
ANR	5070078	PrimaryExpression	0		5069976	0					
ANR	5070079	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error %d writing to pipe %d\\n"" , errno , pipe_end )"	126:2:3219:3287	5069976	1	True				
ANR	5070080	CallExpression	"dprintf ( D_ALWAYS , ""Error %d writing to pipe %d\\n"" , errno , pipe_end )"		5069976	0					
ANR	5070081	Callee	dprintf		5069976	0					
ANR	5070082	Identifier	dprintf		5069976	0					
ANR	5070083	ArgumentList	D_ALWAYS		5069976	1					
ANR	5070084	Argument	D_ALWAYS		5069976	0					
ANR	5070085	Identifier	D_ALWAYS		5069976	0					
ANR	5070086	Argument	"""Error %d writing to pipe %d\\n"""		5069976	1					
ANR	5070087	PrimaryExpression	"""Error %d writing to pipe %d\\n"""		5069976	0					
ANR	5070088	Argument	errno		5069976	2					
ANR	5070089	Identifier	errno		5069976	0					
ANR	5070090	Argument	pipe_end		5069976	3					
ANR	5070091	Identifier	pipe_end		5069976	0					
ANR	5070092	ExpressionStatement	error = true	127:2:3291:3303	5069976	2	True				
ANR	5070093	AssignmentExpression	error = true		5069976	0		=			
ANR	5070094	Identifier	error		5069976	0					
ANR	5070095	Identifier	true		5069976	1					
ANR	5070096	ReturnStatement	return - 1 ;	128:2:3307:3316	5069976	3	True				
ANR	5070097	UnaryOperationExpression	- 1		5069976	0					
ANR	5070098	UnaryOperator	-		5069976	0					
ANR	5070099	PrimaryExpression	1		5069976	1					
ANR	5070100	ReturnType	int		5069976	1					
ANR	5070101	Identifier	PipeBuffer :: Write		5069976	2					
ANR	5070102	ParameterList	const char * towrite		5069976	3					
ANR	5070103	Parameter	const char * towrite	102:19:2697:2716	5069976	0	True				
ANR	5070104	ParameterType	const char *		5069976	0					
ANR	5070105	Identifier	towrite		5069976	1					
ANR	5070106	CFGEntryNode	ENTRY		5069976		True				
ANR	5070107	CFGExitNode	EXIT		5069976		True				
ANR	5070108	Symbol	buffer . c_str		5069976						
ANR	5070109	Symbol	errno		5069976						
ANR	5070110	Symbol	pipe_end		5069976						
ANR	5070111	Symbol	EAGAIN		5069976						
ANR	5070112	Symbol	D_ALWAYS		5069976						
ANR	5070113	Symbol	error		5069976						
ANR	5070114	Symbol	numwritten		5069976						
ANR	5070115	Symbol	buffer . erase		5069976						
ANR	5070116	Symbol	len		5069976						
ANR	5070117	Symbol	buffer . length		5069976						
ANR	5070118	Symbol	true		5069976						
ANR	5070119	Symbol	EWOULDBLOCK		5069976						
ANR	5070120	Symbol	towrite		5069976						
ANR	5070121	Symbol	buffer		5069976						
ANR	5070122	Symbol	write		5069976						
ANR	5070123	Function	PipeBuffer :: IsEmpty	132:0:3324:3384							
ANR	5070124	FunctionDef	PipeBuffer :: IsEmpty ()		5070123	0					
ANR	5070125	CompoundStatement		133:22:3350:3384	5070123	0					
ANR	5070126	ReturnStatement	return ( buffer . length ( ) == 0 ) ;	134:1:3353:3382	5070123	0	True				
ANR	5070127	EqualityExpression	buffer . length ( ) == 0		5070123	0		==			
ANR	5070128	CallExpression	buffer . length ( )		5070123	0					
ANR	5070129	Callee	buffer . length		5070123	0					
ANR	5070130	MemberAccess	buffer . length		5070123	0					
ANR	5070131	Identifier	buffer		5070123	0					
ANR	5070132	Identifier	length		5070123	1					
ANR	5070133	ArgumentList			5070123	1					
ANR	5070134	PrimaryExpression	0		5070123	1					
ANR	5070135	ReturnType	int		5070123	1					
ANR	5070136	Identifier	PipeBuffer :: IsEmpty		5070123	2					
ANR	5070137	ParameterList			5070123	3					
ANR	5070138	CFGEntryNode	ENTRY		5070123		True				
ANR	5070139	CFGExitNode	EXIT		5070123		True				
ANR	5070140	Symbol	buffer . length		5070123						
ANR	5070141	Symbol	buffer		5070123						
