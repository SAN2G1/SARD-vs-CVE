command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4906686	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_subsystem_info.cpp								
ANR	4906687	DeclStmt									
ANR	4906688	Decl							SubsystemInfo	SubsystemInfo *	mySubSystem
ANR	4906689	Function	get_mySubSystem	28:0:975:1130							
ANR	4906690	FunctionDef	get_mySubSystem ()		4906689	0					
ANR	4906691	CompoundStatement		29:0:1008:1130	4906689	0					
ANR	4906692	IfStatement	if ( mySubSystem == NULL )		4906689	0					
ANR	4906693	Condition	mySubSystem == NULL	30:6:1016:1034	4906689	0	True				
ANR	4906694	EqualityExpression	mySubSystem == NULL		4906689	0		==			
ANR	4906695	Identifier	mySubSystem		4906689	0					
ANR	4906696	Identifier	NULL		4906689	1					
ANR	4906697	CompoundStatement		2:28:29:29	4906689	1					
ANR	4906698	ExpressionStatement	"mySubSystem = new SubsystemInfo ( ""TOOL"" , SUBSYSTEM_TYPE_TOOL )"	31:2:1042:1104	4906689	0	True				
ANR	4906699	AssignmentExpression	"mySubSystem = new SubsystemInfo ( ""TOOL"" , SUBSYSTEM_TYPE_TOOL )"		4906689	0		=			
ANR	4906700	Identifier	mySubSystem		4906689	0					
ANR	4906701	Expression	"""TOOL"" , SUBSYSTEM_TYPE_TOOL"		4906689	1					
ANR	4906702	PrimaryExpression	"""TOOL"""		4906689	0					
ANR	4906703	Identifier	SUBSYSTEM_TYPE_TOOL		4906689	1					
ANR	4906704	ReturnStatement	return mySubSystem ;	33:1:1110:1128	4906689	1	True				
ANR	4906705	Identifier	mySubSystem		4906689	0					
ANR	4906706	ReturnType	SubsystemInfo *		4906689	1					
ANR	4906707	Identifier	get_mySubSystem		4906689	2					
ANR	4906708	ParameterList			4906689	3					
ANR	4906709	CFGEntryNode	ENTRY		4906689		True				
ANR	4906710	CFGExitNode	EXIT		4906689		True				
ANR	4906711	Symbol	NULL		4906689						
ANR	4906712	Symbol	SUBSYSTEM_TYPE_TOOL		4906689						
ANR	4906713	Symbol	mySubSystem		4906689						
ANR	4906714	Function	set_mySubSystem	36:0:1133:1294							
ANR	4906715	FunctionDef	"set_mySubSystem (const char * subsystem_name , SubsystemType _type)"		4906714	0					
ANR	4906716	CompoundStatement		38:0:1212:1294	4906714	0					
ANR	4906717	Statement	delete	39:1:1215:1220	4906714	0	True				
ANR	4906718	ExpressionStatement	mySubSystem	39:8:1222:1233	4906714	1	True				
ANR	4906719	Identifier	mySubSystem		4906714	0					
ANR	4906720	ExpressionStatement	"mySubSystem = new SubsystemInfo ( subsystem_name , _type )"	40:1:1236:1292	4906714	2	True				
ANR	4906721	AssignmentExpression	"mySubSystem = new SubsystemInfo ( subsystem_name , _type )"		4906714	0		=			
ANR	4906722	Identifier	mySubSystem		4906714	0					
ANR	4906723	Expression	"subsystem_name , _type"		4906714	1					
ANR	4906724	Identifier	subsystem_name		4906714	0					
ANR	4906725	Identifier	_type		4906714	1					
ANR	4906726	ReturnType	void		4906714	1					
ANR	4906727	Identifier	set_mySubSystem		4906714	2					
ANR	4906728	ParameterList	"const char * subsystem_name , SubsystemType _type"		4906714	3					
ANR	4906729	Parameter	const char * subsystem_name	36:22:1155:1180	4906714	0	True				
ANR	4906730	ParameterType	const char *		4906714	0					
ANR	4906731	Identifier	subsystem_name		4906714	1					
ANR	4906732	Parameter	SubsystemType _type	37:7:1190:1208	4906714	1	True				
ANR	4906733	ParameterType	SubsystemType		4906714	0					
ANR	4906734	Identifier	_type		4906714	1					
ANR	4906735	CFGEntryNode	ENTRY		4906714		True				
ANR	4906736	CFGExitNode	EXIT		4906714		True				
ANR	4906737	Symbol	mySubSystem		4906714						
ANR	4906738	Symbol	_type		4906714						
ANR	4906739	Symbol	subsystem_name		4906714						
ANR	4906740	ClassDef	SubsystemInfoLookup	46:0:1350:2190							
ANR	4906741	Function	~SubsystemInfoLookup	51:1:1484:1515							
ANR	4906742	FunctionDef	~SubsystemInfoLookup ()		4906741	0					
ANR	4906743	CompoundStatement		51:30:1513:1515	4906741	0					
ANR	4906744	Identifier	~SubsystemInfoLookup		4906741	1					
ANR	4906745	ParameterList			4906741	2					
ANR	4906746	CFGEntryNode	ENTRY		4906741		True				
ANR	4906747	CFGExitNode	EXIT		4906741		True				
ANR	4906748	Function	getType	53:1:1520:1573							
ANR	4906749	FunctionDef	getType ()		4906748	1					
ANR	4906750	CompoundStatement		53:37:1556:1573	4906748	0					
ANR	4906751	ReturnStatement	return m_Type ;	53:1:1558:1571	4906748	0	True				
ANR	4906752	Identifier	m_Type		4906748	0					
ANR	4906753	ReturnType	SubsystemType		4906748	1					
ANR	4906754	Identifier	getType		4906748	2					
ANR	4906755	ParameterList			4906748	3					
ANR	4906756	CFGEntryNode	ENTRY		4906748		True				
ANR	4906757	CFGExitNode	EXIT		4906748		True				
ANR	4906758	Symbol	m_Type		4906748						
ANR	4906759	Function	getClass	54:1:1577:1633							
ANR	4906760	FunctionDef	getClass ()		4906759	2					
ANR	4906761	CompoundStatement		54:39:1615:1633	4906759	0					
ANR	4906762	ReturnStatement	return m_Class ;	54:1:1617:1631	4906759	0	True				
ANR	4906763	Identifier	m_Class		4906759	0					
ANR	4906764	ReturnType	SubsystemClass		4906759	1					
ANR	4906765	Identifier	getClass		4906759	2					
ANR	4906766	ParameterList			4906759	3					
ANR	4906767	CFGEntryNode	ENTRY		4906759		True				
ANR	4906768	CFGExitNode	EXIT		4906759		True				
ANR	4906769	Symbol	m_Class		4906759						
ANR	4906770	Function	getTypeName	55:1:1638:1698							
ANR	4906771	FunctionDef	getTypeName ()		4906770	3					
ANR	4906772	CompoundStatement		55:40:1677:1698	4906770	0					
ANR	4906773	ReturnStatement	return m_TypeName ;	55:1:1679:1696	4906770	0	True				
ANR	4906774	Identifier	m_TypeName		4906770	0					
ANR	4906775	ReturnType	const char *		4906770	1					
ANR	4906776	Identifier	getTypeName		4906770	2					
ANR	4906777	ParameterList			4906770	3					
ANR	4906778	CFGEntryNode	ENTRY		4906770		True				
ANR	4906779	CFGExitNode	EXIT		4906770		True				
ANR	4906780	Symbol	m_TypeName		4906770						
ANR	4906781	Function	getTypeSubstr	56:1:1702:1766							
ANR	4906782	FunctionDef	getTypeSubstr ()		4906781	4					
ANR	4906783	CompoundStatement		56:42:1743:1766	4906781	0					
ANR	4906784	ReturnStatement	return m_TypeSubstr ;	56:1:1745:1764	4906781	0	True				
ANR	4906785	Identifier	m_TypeSubstr		4906781	0					
ANR	4906786	ReturnType	const char *		4906781	1					
ANR	4906787	Identifier	getTypeSubstr		4906781	2					
ANR	4906788	ParameterList			4906781	3					
ANR	4906789	CFGEntryNode	ENTRY		4906781		True				
ANR	4906790	CFGExitNode	EXIT		4906781		True				
ANR	4906791	Symbol	m_TypeSubstr		4906781						
ANR	4906792	Function	match	58:1:1771:1837							
ANR	4906793	FunctionDef	match (SubsystemType _type)		4906792	5					
ANR	4906794	CompoundStatement		58:41:1811:1837	4906792	0					
ANR	4906795	ReturnStatement	return m_Type == _type ;	58:1:1813:1835	4906792	0	True				
ANR	4906796	EqualityExpression	m_Type == _type		4906792	0		==			
ANR	4906797	Identifier	m_Type		4906792	0					
ANR	4906798	Identifier	_type		4906792	1					
ANR	4906799	ReturnType	bool		4906792	1					
ANR	4906800	Identifier	match		4906792	2					
ANR	4906801	ParameterList	SubsystemType _type		4906792	3					
ANR	4906802	Parameter	SubsystemType _type	58:13:1783:1801	4906792	0	True				
ANR	4906803	ParameterType	SubsystemType		4906792	0					
ANR	4906804	Identifier	_type		4906792	1					
ANR	4906805	CFGEntryNode	ENTRY		4906792		True				
ANR	4906806	CFGExitNode	EXIT		4906792		True				
ANR	4906807	Symbol	_type		4906792						
ANR	4906808	Symbol	m_Type		4906792						
ANR	4906809	Function	match	59:1:1841:1911							
ANR	4906810	FunctionDef	match (SubsystemClass _class)		4906809	6					
ANR	4906811	CompoundStatement		59:43:1883:1911	4906809	0					
ANR	4906812	ReturnStatement	return m_Class == _class ;	59:1:1885:1909	4906809	0	True				
ANR	4906813	EqualityExpression	m_Class == _class		4906809	0		==			
ANR	4906814	Identifier	m_Class		4906809	0					
ANR	4906815	Identifier	_class		4906809	1					
ANR	4906816	ReturnType	bool		4906809	1					
ANR	4906817	Identifier	match		4906809	2					
ANR	4906818	ParameterList	SubsystemClass _class		4906809	3					
ANR	4906819	Parameter	SubsystemClass _class	59:13:1853:1873	4906809	0	True				
ANR	4906820	ParameterType	SubsystemClass		4906809	0					
ANR	4906821	Identifier	_class		4906809	1					
ANR	4906822	CFGEntryNode	ENTRY		4906809		True				
ANR	4906823	CFGExitNode	EXIT		4906809		True				
ANR	4906824	Symbol	m_Class		4906809						
ANR	4906825	Symbol	_class		4906809						
ANR	4906826	Function	isValid	62:1:2001:2073							
ANR	4906827	FunctionDef	isValid ()		4906826	7					
ANR	4906828	CompoundStatement		62:28:2028:2073	4906826	0					
ANR	4906829	ReturnStatement	return ( m_Type != SUBSYSTEM_TYPE_INVALID ) ;	62:1:2030:2071	4906826	0	True				
ANR	4906830	EqualityExpression	m_Type != SUBSYSTEM_TYPE_INVALID		4906826	0		!=			
ANR	4906831	Identifier	m_Type		4906826	0					
ANR	4906832	Identifier	SUBSYSTEM_TYPE_INVALID		4906826	1					
ANR	4906833	ReturnType	bool		4906826	1					
ANR	4906834	Identifier	isValid		4906826	2					
ANR	4906835	ParameterList			4906826	3					
ANR	4906836	CFGEntryNode	ENTRY		4906826		True				
ANR	4906837	CFGExitNode	EXIT		4906826		True				
ANR	4906838	Symbol	SUBSYSTEM_TYPE_INVALID		4906826						
ANR	4906839	Symbol	m_Type		4906826						
ANR	4906840	DeclStmt									
ANR	4906841	Decl							SubsystemType	SubsystemType	m_Type
ANR	4906842	DeclStmt									
ANR	4906843	Decl							SubsystemClass	SubsystemClass	m_Class
ANR	4906844	DeclStmt									
ANR	4906845	Decl							const char	const char *	m_TypeName
ANR	4906846	DeclStmt									
ANR	4906847	Decl							const char	const char *	m_TypeSubstr
ANR	4906848	Function	SubsystemInfoLookup :: SubsystemInfoLookup	70:0:2193:2424							
ANR	4906849	FunctionDef	"SubsystemInfoLookup :: SubsystemInfoLookup (SubsystemType _type , SubsystemClass _class , const char * _type_name , const char * _type_substr)"		4906848	0					
ANR	4906850	CompoundStatement		73:0:2332:2424	4906848	0					
ANR	4906851	ExpressionStatement	m_Type = _type	74:1:2335:2349	4906848	0	True				
ANR	4906852	AssignmentExpression	m_Type = _type		4906848	0		=			
ANR	4906853	Identifier	m_Type		4906848	0					
ANR	4906854	Identifier	_type		4906848	1					
ANR	4906855	ExpressionStatement	m_Class = _class	74:17:2351:2367	4906848	1	True				
ANR	4906856	AssignmentExpression	m_Class = _class		4906848	0		=			
ANR	4906857	Identifier	m_Class		4906848	0					
ANR	4906858	Identifier	_class		4906848	1					
ANR	4906859	ExpressionStatement	"m_TypeName = _type_name , m_TypeSubstr = _type_substr"	75:1:2370:2422	4906848	2	True				
ANR	4906860	Expression	"m_TypeName = _type_name , m_TypeSubstr = _type_substr"		4906848	0					
ANR	4906861	AssignmentExpression	m_TypeName = _type_name		4906848	0		=			
ANR	4906862	Identifier	m_TypeName		4906848	0					
ANR	4906863	Identifier	_type_name		4906848	1					
ANR	4906864	AssignmentExpression	m_TypeSubstr = _type_substr		4906848	1		=			
ANR	4906865	Identifier	m_TypeSubstr		4906848	0					
ANR	4906866	Identifier	_type_substr		4906848	1					
ANR	4906867	Identifier	SubsystemInfoLookup :: SubsystemInfoLookup		4906848	1					
ANR	4906868	ParameterList	"SubsystemType _type , SubsystemClass _class , const char * _type_name , const char * _type_substr"		4906848	2					
ANR	4906869	Parameter	SubsystemType _type	71:1:2236:2254	4906848	0	True				
ANR	4906870	ParameterType	SubsystemType		4906848	0					
ANR	4906871	Identifier	_type		4906848	1					
ANR	4906872	Parameter	SubsystemClass _class	71:22:2257:2277	4906848	1	True				
ANR	4906873	ParameterType	SubsystemClass		4906848	0					
ANR	4906874	Identifier	_class		4906848	1					
ANR	4906875	Parameter	const char * _type_name	72:1:2281:2302	4906848	2	True				
ANR	4906876	ParameterType	const char *		4906848	0					
ANR	4906877	Identifier	_type_name		4906848	1					
ANR	4906878	Parameter	const char * _type_substr	72:25:2305:2328	4906848	3	True				
ANR	4906879	ParameterType	const char *		4906848	0					
ANR	4906880	Identifier	_type_substr		4906848	1					
ANR	4906881	CFGEntryNode	ENTRY		4906848		True				
ANR	4906882	CFGExitNode	EXIT		4906848		True				
ANR	4906883	Symbol	_type_substr		4906848						
ANR	4906884	Symbol	m_Class		4906848						
ANR	4906885	Symbol	m_TypeSubstr		4906848						
ANR	4906886	Symbol	_type_name		4906848						
ANR	4906887	Symbol	m_TypeName		4906848						
ANR	4906888	Symbol	_type		4906848						
ANR	4906889	Symbol	_class		4906848						
ANR	4906890	Symbol	m_Type		4906848						
ANR	4906891	Function	SubsystemInfoLookup :: match	77:0:2426:2535							
ANR	4906892	FunctionDef	SubsystemInfoLookup :: match (const char * _name)		4906891	0					
ANR	4906893	CompoundStatement		79:0:2485:2535	4906891	0					
ANR	4906894	ReturnStatement	"return ( strcasecmp ( _name , m_TypeName ) == 0 ) ;"	80:1:2488:2533	4906891	0	True				
ANR	4906895	EqualityExpression	"strcasecmp ( _name , m_TypeName ) == 0"		4906891	0		==			
ANR	4906896	CallExpression	"strcasecmp ( _name , m_TypeName )"		4906891	0					
ANR	4906897	Callee	strcasecmp		4906891	0					
ANR	4906898	Identifier	strcasecmp		4906891	0					
ANR	4906899	ArgumentList	_name		4906891	1					
ANR	4906900	Argument	_name		4906891	0					
ANR	4906901	Identifier	_name		4906891	0					
ANR	4906902	Argument	m_TypeName		4906891	1					
ANR	4906903	Identifier	m_TypeName		4906891	0					
ANR	4906904	PrimaryExpression	0		4906891	1					
ANR	4906905	ReturnType	bool		4906891	1					
ANR	4906906	Identifier	SubsystemInfoLookup :: match		4906891	2					
ANR	4906907	ParameterList	const char * _name		4906891	3					
ANR	4906908	Parameter	const char * _name	78:28:2459:2475	4906891	0	True				
ANR	4906909	ParameterType	const char *		4906891	0					
ANR	4906910	Identifier	_name		4906891	1					
ANR	4906911	CFGEntryNode	ENTRY		4906891		True				
ANR	4906912	CFGExitNode	EXIT		4906891		True				
ANR	4906913	Symbol	_name		4906891						
ANR	4906914	Symbol	m_TypeName		4906891						
ANR	4906915	Symbol	strcasecmp		4906891						
ANR	4906916	Function	SubsystemInfoLookup :: matchSubstr	82:0:2538:2716							
ANR	4906917	FunctionDef	SubsystemInfoLookup :: matchSubstr (const char * _name)		4906916	0					
ANR	4906918	CompoundStatement		84:0:2603:2716	4906916	0					
ANR	4906919	IdentifierDeclStatement	const char * substr = m_TypeSubstr ? m_TypeSubstr : m_TypeName ;	85:1:2606:2667	4906916	0	True				
ANR	4906920	IdentifierDecl	* substr = m_TypeSubstr ? m_TypeSubstr : m_TypeName		4906916	0					
ANR	4906921	IdentifierDeclType	const char *		4906916	0					
ANR	4906922	Identifier	substr		4906916	1					
ANR	4906923	AssignmentExpression	* substr = m_TypeSubstr ? m_TypeSubstr : m_TypeName		4906916	2		=			
ANR	4906924	Identifier	substr		4906916	0					
ANR	4906925	ConditionalExpression	m_TypeSubstr ? m_TypeSubstr : m_TypeName		4906916	1					
ANR	4906926	Condition	m_TypeSubstr		4906916	0					
ANR	4906927	Identifier	m_TypeSubstr		4906916	0					
ANR	4906928	Identifier	m_TypeSubstr		4906916	1					
ANR	4906929	Identifier	m_TypeName		4906916	2					
ANR	4906930	ReturnStatement	"return ( strcasestr ( _name , substr ) != NULL ) ;"	86:1:2670:2714	4906916	1	True				
ANR	4906931	EqualityExpression	"strcasestr ( _name , substr ) != NULL"		4906916	0		!=			
ANR	4906932	CallExpression	"strcasestr ( _name , substr )"		4906916	0					
ANR	4906933	Callee	strcasestr		4906916	0					
ANR	4906934	Identifier	strcasestr		4906916	0					
ANR	4906935	ArgumentList	_name		4906916	1					
ANR	4906936	Argument	_name		4906916	0					
ANR	4906937	Identifier	_name		4906916	0					
ANR	4906938	Argument	substr		4906916	1					
ANR	4906939	Identifier	substr		4906916	0					
ANR	4906940	Identifier	NULL		4906916	1					
ANR	4906941	ReturnType	bool		4906916	1					
ANR	4906942	Identifier	SubsystemInfoLookup :: matchSubstr		4906916	2					
ANR	4906943	ParameterList	const char * _name		4906916	3					
ANR	4906944	Parameter	const char * _name	83:34:2577:2593	4906916	0	True				
ANR	4906945	ParameterType	const char *		4906916	0					
ANR	4906946	Identifier	_name		4906916	1					
ANR	4906947	CFGEntryNode	ENTRY		4906916		True				
ANR	4906948	CFGExitNode	EXIT		4906916		True				
ANR	4906949	Symbol	m_TypeSubstr		4906916						
ANR	4906950	Symbol	NULL		4906916						
ANR	4906951	Symbol	_name		4906916						
ANR	4906952	Symbol	m_TypeName		4906916						
ANR	4906953	Symbol	strcasestr		4906916						
ANR	4906954	Symbol	substr		4906916						
ANR	4906955	DeclStmt									
ANR	4906956	Decl							const int	const int	MaxSubsystemInfoTableSize
ANR	4906957	ClassDef	SubsystemInfoTable	93:0:2811:3590							
ANR	4906958	DeclStmt									
ANR	4906959	Decl							void	void ( const SubsystemInfoLookup * )	addEntry
ANR	4906960	Function	Invalid	106:1:3363:3432							
ANR	4906961	FunctionDef	Invalid ()		4906960	1					
ANR	4906962	CompoundStatement		106:50:3412:3432	4906960	0					
ANR	4906963	ReturnStatement	return m_Invalid ;	106:1:3414:3430	4906960	0	True				
ANR	4906964	Identifier	m_Invalid		4906960	0					
ANR	4906965	ReturnType	const SubsystemInfoLookup *		4906960	1					
ANR	4906966	Identifier	Invalid		4906960	2					
ANR	4906967	ParameterList			4906960	3					
ANR	4906968	CFGEntryNode	ENTRY		4906960		True				
ANR	4906969	CFGExitNode	EXIT		4906960		True				
ANR	4906970	Symbol	m_Invalid		4906960						
ANR	4906971	DeclStmt									
ANR	4906972	Decl							int	int	m_Size
ANR	4906973	DeclStmt									
ANR	4906974	Decl							int	int	m_Count
ANR	4906975	DeclStmt									
ANR	4906976	Decl							const SubsystemInfoLookup	const SubsystemInfoLookup *	m_Invalid
ANR	4906977	DeclStmt									
ANR	4906978	Decl							const SubsystemInfoLookup	const SubsystemInfoLookup * [ MaxSubsystemInfoTableSize ]	m_Table
ANR	4906979	Function	SubsystemInfoTable :: SubsystemInfoTable	134:0:4499:6026							
ANR	4906980	FunctionDef	SubsystemInfoTable :: SubsystemInfoTable ()		4906979	0					
ANR	4906981	CompoundStatement		135:0:4546:6026	4906979	0					
ANR	4906982	ExpressionStatement	m_Count = 0	136:1:4549:4560	4906979	0	True				
ANR	4906983	AssignmentExpression	m_Count = 0		4906979	0		=			
ANR	4906984	Identifier	m_Count		4906979	0					
ANR	4906985	PrimaryExpression	0		4906979	1					
ANR	4906986	ExpressionStatement	m_Size = MaxSubsystemInfoTableSize	137:1:4563:4597	4906979	1	True				
ANR	4906987	AssignmentExpression	m_Size = MaxSubsystemInfoTableSize		4906979	0		=			
ANR	4906988	Identifier	m_Size		4906979	0					
ANR	4906989	Identifier	MaxSubsystemInfoTableSize		4906979	1					
ANR	4906990	ExpressionStatement	"addEntry ( SUBSYSTEM_TYPE_MASTER , SUBSYSTEM_CLASS_DAEMON , ""MASTER"" )"	139:1:4601:4678	4906979	2	True				
ANR	4906991	CallExpression	"addEntry ( SUBSYSTEM_TYPE_MASTER , SUBSYSTEM_CLASS_DAEMON , ""MASTER"" )"		4906979	0					
ANR	4906992	Callee	addEntry		4906979	0					
ANR	4906993	Identifier	addEntry		4906979	0					
ANR	4906994	ArgumentList	SUBSYSTEM_TYPE_MASTER		4906979	1					
ANR	4906995	Argument	SUBSYSTEM_TYPE_MASTER		4906979	0					
ANR	4906996	Identifier	SUBSYSTEM_TYPE_MASTER		4906979	0					
ANR	4906997	Argument	SUBSYSTEM_CLASS_DAEMON		4906979	1					
ANR	4906998	Identifier	SUBSYSTEM_CLASS_DAEMON		4906979	0					
ANR	4906999	Argument	"""MASTER"""		4906979	2					
ANR	4907000	PrimaryExpression	"""MASTER"""		4906979	0					
ANR	4907001	ExpressionStatement	"addEntry ( SUBSYSTEM_TYPE_COLLECTOR , SUBSYSTEM_CLASS_DAEMON , ""COLLECTOR"" )"	142:1:4681:4764	4906979	3	True				
ANR	4907002	CallExpression	"addEntry ( SUBSYSTEM_TYPE_COLLECTOR , SUBSYSTEM_CLASS_DAEMON , ""COLLECTOR"" )"		4906979	0					
ANR	4907003	Callee	addEntry		4906979	0					
ANR	4907004	Identifier	addEntry		4906979	0					
ANR	4907005	ArgumentList	SUBSYSTEM_TYPE_COLLECTOR		4906979	1					
ANR	4907006	Argument	SUBSYSTEM_TYPE_COLLECTOR		4906979	0					
ANR	4907007	Identifier	SUBSYSTEM_TYPE_COLLECTOR		4906979	0					
ANR	4907008	Argument	SUBSYSTEM_CLASS_DAEMON		4906979	1					
ANR	4907009	Identifier	SUBSYSTEM_CLASS_DAEMON		4906979	0					
ANR	4907010	Argument	"""COLLECTOR"""		4906979	2					
ANR	4907011	PrimaryExpression	"""COLLECTOR"""		4906979	0					
ANR	4907012	ExpressionStatement	"addEntry ( SUBSYSTEM_TYPE_NEGOTIATOR , SUBSYSTEM_CLASS_DAEMON , ""NEGOTIATOR"" )"	145:1:4767:4852	4906979	4	True				
ANR	4907013	CallExpression	"addEntry ( SUBSYSTEM_TYPE_NEGOTIATOR , SUBSYSTEM_CLASS_DAEMON , ""NEGOTIATOR"" )"		4906979	0					
ANR	4907014	Callee	addEntry		4906979	0					
ANR	4907015	Identifier	addEntry		4906979	0					
ANR	4907016	ArgumentList	SUBSYSTEM_TYPE_NEGOTIATOR		4906979	1					
ANR	4907017	Argument	SUBSYSTEM_TYPE_NEGOTIATOR		4906979	0					
ANR	4907018	Identifier	SUBSYSTEM_TYPE_NEGOTIATOR		4906979	0					
ANR	4907019	Argument	SUBSYSTEM_CLASS_DAEMON		4906979	1					
ANR	4907020	Identifier	SUBSYSTEM_CLASS_DAEMON		4906979	0					
ANR	4907021	Argument	"""NEGOTIATOR"""		4906979	2					
ANR	4907022	PrimaryExpression	"""NEGOTIATOR"""		4906979	0					
ANR	4907023	ExpressionStatement	"addEntry ( SUBSYSTEM_TYPE_SCHEDD , SUBSYSTEM_CLASS_DAEMON , ""SCHEDD"" )"	148:1:4855:4932	4906979	5	True				
ANR	4907024	CallExpression	"addEntry ( SUBSYSTEM_TYPE_SCHEDD , SUBSYSTEM_CLASS_DAEMON , ""SCHEDD"" )"		4906979	0					
ANR	4907025	Callee	addEntry		4906979	0					
ANR	4907026	Identifier	addEntry		4906979	0					
ANR	4907027	ArgumentList	SUBSYSTEM_TYPE_SCHEDD		4906979	1					
ANR	4907028	Argument	SUBSYSTEM_TYPE_SCHEDD		4906979	0					
ANR	4907029	Identifier	SUBSYSTEM_TYPE_SCHEDD		4906979	0					
ANR	4907030	Argument	SUBSYSTEM_CLASS_DAEMON		4906979	1					
ANR	4907031	Identifier	SUBSYSTEM_CLASS_DAEMON		4906979	0					
ANR	4907032	Argument	"""SCHEDD"""		4906979	2					
ANR	4907033	PrimaryExpression	"""SCHEDD"""		4906979	0					
ANR	4907034	ExpressionStatement	"addEntry ( SUBSYSTEM_TYPE_SHADOW , SUBSYSTEM_CLASS_DAEMON , ""SHADOW"" )"	151:1:4935:5012	4906979	6	True				
ANR	4907035	CallExpression	"addEntry ( SUBSYSTEM_TYPE_SHADOW , SUBSYSTEM_CLASS_DAEMON , ""SHADOW"" )"		4906979	0					
ANR	4907036	Callee	addEntry		4906979	0					
ANR	4907037	Identifier	addEntry		4906979	0					
ANR	4907038	ArgumentList	SUBSYSTEM_TYPE_SHADOW		4906979	1					
ANR	4907039	Argument	SUBSYSTEM_TYPE_SHADOW		4906979	0					
ANR	4907040	Identifier	SUBSYSTEM_TYPE_SHADOW		4906979	0					
ANR	4907041	Argument	SUBSYSTEM_CLASS_DAEMON		4906979	1					
ANR	4907042	Identifier	SUBSYSTEM_CLASS_DAEMON		4906979	0					
ANR	4907043	Argument	"""SHADOW"""		4906979	2					
ANR	4907044	PrimaryExpression	"""SHADOW"""		4906979	0					
ANR	4907045	ExpressionStatement	"addEntry ( SUBSYSTEM_TYPE_STARTD , SUBSYSTEM_CLASS_DAEMON , ""STARTD"" )"	154:1:5015:5092	4906979	7	True				
ANR	4907046	CallExpression	"addEntry ( SUBSYSTEM_TYPE_STARTD , SUBSYSTEM_CLASS_DAEMON , ""STARTD"" )"		4906979	0					
ANR	4907047	Callee	addEntry		4906979	0					
ANR	4907048	Identifier	addEntry		4906979	0					
ANR	4907049	ArgumentList	SUBSYSTEM_TYPE_STARTD		4906979	1					
ANR	4907050	Argument	SUBSYSTEM_TYPE_STARTD		4906979	0					
ANR	4907051	Identifier	SUBSYSTEM_TYPE_STARTD		4906979	0					
ANR	4907052	Argument	SUBSYSTEM_CLASS_DAEMON		4906979	1					
ANR	4907053	Identifier	SUBSYSTEM_CLASS_DAEMON		4906979	0					
ANR	4907054	Argument	"""STARTD"""		4906979	2					
ANR	4907055	PrimaryExpression	"""STARTD"""		4906979	0					
ANR	4907056	ExpressionStatement	"addEntry ( SUBSYSTEM_TYPE_STARTER , SUBSYSTEM_CLASS_DAEMON , ""STARTER"" )"	157:1:5095:5174	4906979	8	True				
ANR	4907057	CallExpression	"addEntry ( SUBSYSTEM_TYPE_STARTER , SUBSYSTEM_CLASS_DAEMON , ""STARTER"" )"		4906979	0					
ANR	4907058	Callee	addEntry		4906979	0					
ANR	4907059	Identifier	addEntry		4906979	0					
ANR	4907060	ArgumentList	SUBSYSTEM_TYPE_STARTER		4906979	1					
ANR	4907061	Argument	SUBSYSTEM_TYPE_STARTER		4906979	0					
ANR	4907062	Identifier	SUBSYSTEM_TYPE_STARTER		4906979	0					
ANR	4907063	Argument	SUBSYSTEM_CLASS_DAEMON		4906979	1					
ANR	4907064	Identifier	SUBSYSTEM_CLASS_DAEMON		4906979	0					
ANR	4907065	Argument	"""STARTER"""		4906979	2					
ANR	4907066	PrimaryExpression	"""STARTER"""		4906979	0					
ANR	4907067	ExpressionStatement	"addEntry ( SUBSYSTEM_TYPE_GAHP , SUBSYSTEM_CLASS_DAEMON , ""GAHP"" )"	160:1:5177:5250	4906979	9	True				
ANR	4907068	CallExpression	"addEntry ( SUBSYSTEM_TYPE_GAHP , SUBSYSTEM_CLASS_DAEMON , ""GAHP"" )"		4906979	0					
ANR	4907069	Callee	addEntry		4906979	0					
ANR	4907070	Identifier	addEntry		4906979	0					
ANR	4907071	ArgumentList	SUBSYSTEM_TYPE_GAHP		4906979	1					
ANR	4907072	Argument	SUBSYSTEM_TYPE_GAHP		4906979	0					
ANR	4907073	Identifier	SUBSYSTEM_TYPE_GAHP		4906979	0					
ANR	4907074	Argument	SUBSYSTEM_CLASS_DAEMON		4906979	1					
ANR	4907075	Identifier	SUBSYSTEM_CLASS_DAEMON		4906979	0					
ANR	4907076	Argument	"""GAHP"""		4906979	2					
ANR	4907077	PrimaryExpression	"""GAHP"""		4906979	0					
ANR	4907078	ExpressionStatement	"addEntry ( SUBSYSTEM_TYPE_DAGMAN , SUBSYSTEM_CLASS_DAEMON , ""DAGMAN"" )"	163:1:5253:5330	4906979	10	True				
ANR	4907079	CallExpression	"addEntry ( SUBSYSTEM_TYPE_DAGMAN , SUBSYSTEM_CLASS_DAEMON , ""DAGMAN"" )"		4906979	0					
ANR	4907080	Callee	addEntry		4906979	0					
ANR	4907081	Identifier	addEntry		4906979	0					
ANR	4907082	ArgumentList	SUBSYSTEM_TYPE_DAGMAN		4906979	1					
ANR	4907083	Argument	SUBSYSTEM_TYPE_DAGMAN		4906979	0					
ANR	4907084	Identifier	SUBSYSTEM_TYPE_DAGMAN		4906979	0					
ANR	4907085	Argument	SUBSYSTEM_CLASS_DAEMON		4906979	1					
ANR	4907086	Identifier	SUBSYSTEM_CLASS_DAEMON		4906979	0					
ANR	4907087	Argument	"""DAGMAN"""		4906979	2					
ANR	4907088	PrimaryExpression	"""DAGMAN"""		4906979	0					
ANR	4907089	ExpressionStatement	"addEntry ( SUBSYSTEM_TYPE_SHARED_PORT , SUBSYSTEM_CLASS_DAEMON , ""SHARED_PORT"" )"	166:1:5333:5420	4906979	11	True				
ANR	4907090	CallExpression	"addEntry ( SUBSYSTEM_TYPE_SHARED_PORT , SUBSYSTEM_CLASS_DAEMON , ""SHARED_PORT"" )"		4906979	0					
ANR	4907091	Callee	addEntry		4906979	0					
ANR	4907092	Identifier	addEntry		4906979	0					
ANR	4907093	ArgumentList	SUBSYSTEM_TYPE_SHARED_PORT		4906979	1					
ANR	4907094	Argument	SUBSYSTEM_TYPE_SHARED_PORT		4906979	0					
ANR	4907095	Identifier	SUBSYSTEM_TYPE_SHARED_PORT		4906979	0					
ANR	4907096	Argument	SUBSYSTEM_CLASS_DAEMON		4906979	1					
ANR	4907097	Identifier	SUBSYSTEM_CLASS_DAEMON		4906979	0					
ANR	4907098	Argument	"""SHARED_PORT"""		4906979	2					
ANR	4907099	PrimaryExpression	"""SHARED_PORT"""		4906979	0					
ANR	4907100	ExpressionStatement	"addEntry ( SUBSYSTEM_TYPE_TOOL , SUBSYSTEM_CLASS_CLIENT , ""TOOL"" )"	169:1:5423:5496	4906979	12	True				
ANR	4907101	CallExpression	"addEntry ( SUBSYSTEM_TYPE_TOOL , SUBSYSTEM_CLASS_CLIENT , ""TOOL"" )"		4906979	0					
ANR	4907102	Callee	addEntry		4906979	0					
ANR	4907103	Identifier	addEntry		4906979	0					
ANR	4907104	ArgumentList	SUBSYSTEM_TYPE_TOOL		4906979	1					
ANR	4907105	Argument	SUBSYSTEM_TYPE_TOOL		4906979	0					
ANR	4907106	Identifier	SUBSYSTEM_TYPE_TOOL		4906979	0					
ANR	4907107	Argument	SUBSYSTEM_CLASS_CLIENT		4906979	1					
ANR	4907108	Identifier	SUBSYSTEM_CLASS_CLIENT		4906979	0					
ANR	4907109	Argument	"""TOOL"""		4906979	2					
ANR	4907110	PrimaryExpression	"""TOOL"""		4906979	0					
ANR	4907111	ExpressionStatement	"addEntry ( SUBSYSTEM_TYPE_SUBMIT , SUBSYSTEM_CLASS_CLIENT , ""SUBMIT"" )"	172:1:5499:5576	4906979	13	True				
ANR	4907112	CallExpression	"addEntry ( SUBSYSTEM_TYPE_SUBMIT , SUBSYSTEM_CLASS_CLIENT , ""SUBMIT"" )"		4906979	0					
ANR	4907113	Callee	addEntry		4906979	0					
ANR	4907114	Identifier	addEntry		4906979	0					
ANR	4907115	ArgumentList	SUBSYSTEM_TYPE_SUBMIT		4906979	1					
ANR	4907116	Argument	SUBSYSTEM_TYPE_SUBMIT		4906979	0					
ANR	4907117	Identifier	SUBSYSTEM_TYPE_SUBMIT		4906979	0					
ANR	4907118	Argument	SUBSYSTEM_CLASS_CLIENT		4906979	1					
ANR	4907119	Identifier	SUBSYSTEM_CLASS_CLIENT		4906979	0					
ANR	4907120	Argument	"""SUBMIT"""		4906979	2					
ANR	4907121	PrimaryExpression	"""SUBMIT"""		4906979	0					
ANR	4907122	ExpressionStatement	"addEntry ( SUBSYSTEM_TYPE_JOB , SUBSYSTEM_CLASS_JOB , ""JOB"" )"	175:1:5579:5647	4906979	14	True				
ANR	4907123	CallExpression	"addEntry ( SUBSYSTEM_TYPE_JOB , SUBSYSTEM_CLASS_JOB , ""JOB"" )"		4906979	0					
ANR	4907124	Callee	addEntry		4906979	0					
ANR	4907125	Identifier	addEntry		4906979	0					
ANR	4907126	ArgumentList	SUBSYSTEM_TYPE_JOB		4906979	1					
ANR	4907127	Argument	SUBSYSTEM_TYPE_JOB		4906979	0					
ANR	4907128	Identifier	SUBSYSTEM_TYPE_JOB		4906979	0					
ANR	4907129	Argument	SUBSYSTEM_CLASS_JOB		4906979	1					
ANR	4907130	Identifier	SUBSYSTEM_CLASS_JOB		4906979	0					
ANR	4907131	Argument	"""JOB"""		4906979	2					
ANR	4907132	PrimaryExpression	"""JOB"""		4906979	0					
ANR	4907133	ExpressionStatement	"addEntry ( SUBSYSTEM_TYPE_DAEMON , SUBSYSTEM_CLASS_DAEMON , ""DAEMON"" , """" )"	178:1:5650:5736	4906979	15	True				
ANR	4907134	CallExpression	"addEntry ( SUBSYSTEM_TYPE_DAEMON , SUBSYSTEM_CLASS_DAEMON , ""DAEMON"" , """" )"		4906979	0					
ANR	4907135	Callee	addEntry		4906979	0					
ANR	4907136	Identifier	addEntry		4906979	0					
ANR	4907137	ArgumentList	SUBSYSTEM_TYPE_DAEMON		4906979	1					
ANR	4907138	Argument	SUBSYSTEM_TYPE_DAEMON		4906979	0					
ANR	4907139	Identifier	SUBSYSTEM_TYPE_DAEMON		4906979	0					
ANR	4907140	Argument	SUBSYSTEM_CLASS_DAEMON		4906979	1					
ANR	4907141	Identifier	SUBSYSTEM_CLASS_DAEMON		4906979	0					
ANR	4907142	Argument	"""DAEMON"""		4906979	2					
ANR	4907143	PrimaryExpression	"""DAEMON"""		4906979	0					
ANR	4907144	Argument	""""""		4906979	3					
ANR	4907145	PrimaryExpression	""""""		4906979	0					
ANR	4907146	ExpressionStatement	"addEntry ( SUBSYSTEM_TYPE_INVALID , SUBSYSTEM_CLASS_NONE , ""INVALID"" )"	182:1:5739:5816	4906979	16	True				
ANR	4907147	CallExpression	"addEntry ( SUBSYSTEM_TYPE_INVALID , SUBSYSTEM_CLASS_NONE , ""INVALID"" )"		4906979	0					
ANR	4907148	Callee	addEntry		4906979	0					
ANR	4907149	Identifier	addEntry		4906979	0					
ANR	4907150	ArgumentList	SUBSYSTEM_TYPE_INVALID		4906979	1					
ANR	4907151	Argument	SUBSYSTEM_TYPE_INVALID		4906979	0					
ANR	4907152	Identifier	SUBSYSTEM_TYPE_INVALID		4906979	0					
ANR	4907153	Argument	SUBSYSTEM_CLASS_NONE		4906979	1					
ANR	4907154	Identifier	SUBSYSTEM_CLASS_NONE		4906979	0					
ANR	4907155	Argument	"""INVALID"""		4906979	2					
ANR	4907156	PrimaryExpression	"""INVALID"""		4906979	0					
ANR	4907157	ExpressionStatement	ASSERT ( m_Invalid != NULL )	186:1:5820:5847	4906979	17	True				
ANR	4907158	CallExpression	ASSERT ( m_Invalid != NULL )		4906979	0					
ANR	4907159	Callee	ASSERT		4906979	0					
ANR	4907160	Identifier	ASSERT		4906979	0					
ANR	4907161	ArgumentList	m_Invalid != NULL		4906979	1					
ANR	4907162	Argument	m_Invalid != NULL		4906979	0					
ANR	4907163	EqualityExpression	m_Invalid != NULL		4906979	0		!=			
ANR	4907164	Identifier	m_Invalid		4906979	0					
ANR	4907165	Identifier	NULL		4906979	1					
ANR	4907166	ExpressionStatement	ASSERT ( m_Invalid -> match ( SUBSYSTEM_TYPE_INVALID ) )	187:1:5850:5900	4906979	18	True				
ANR	4907167	CallExpression	ASSERT ( m_Invalid -> match ( SUBSYSTEM_TYPE_INVALID ) )		4906979	0					
ANR	4907168	Callee	ASSERT		4906979	0					
ANR	4907169	Identifier	ASSERT		4906979	0					
ANR	4907170	ArgumentList	m_Invalid -> match ( SUBSYSTEM_TYPE_INVALID )		4906979	1					
ANR	4907171	Argument	m_Invalid -> match ( SUBSYSTEM_TYPE_INVALID )		4906979	0					
ANR	4907172	CallExpression	m_Invalid -> match ( SUBSYSTEM_TYPE_INVALID )		4906979	0					
ANR	4907173	Callee	m_Invalid -> match		4906979	0					
ANR	4907174	PtrMemberAccess	m_Invalid -> match		4906979	0					
ANR	4907175	Identifier	m_Invalid		4906979	0					
ANR	4907176	Identifier	match		4906979	1					
ANR	4907177	ArgumentList	SUBSYSTEM_TYPE_INVALID		4906979	1					
ANR	4907178	Argument	SUBSYSTEM_TYPE_INVALID		4906979	0					
ANR	4907179	Identifier	SUBSYSTEM_TYPE_INVALID		4906979	0					
ANR	4907180	ForStatement	for ( int i = 0 ; i < m_Count ; i ++ )		4906979	19					
ANR	4907181	ForInit	int i = 0 ;	189:7:5910:5917	4906979	0	True				
ANR	4907182	IdentifierDeclStatement	int i = 0 ;		4906979	0					
ANR	4907183	IdentifierDecl	i = 0		4906979	0					
ANR	4907184	IdentifierDeclType	int		4906979	0					
ANR	4907185	Identifier	i		4906979	1					
ANR	4907186	AssignmentExpression	i = 0		4906979	2		=			
ANR	4907187	Identifier	i		4906979	0					
ANR	4907188	PrimaryExpression	0		4906979	1					
ANR	4907189	Condition	i < m_Count	189:17:5920:5928	4906979	1	True				
ANR	4907190	RelationalExpression	i < m_Count		4906979	0		<			
ANR	4907191	Identifier	i		4906979	0					
ANR	4907192	Identifier	m_Count		4906979	1					
ANR	4907193	PostIncDecOperationExpression	i ++	189:29:5932:5934	4906979	2	True				
ANR	4907194	Identifier	i		4906979	0					
ANR	4907195	IncDec	++		4906979	1					
ANR	4907196	CompoundStatement		56:2:1395:1444	4906979	3					
ANR	4907197	IdentifierDeclStatement	const SubsystemInfoLookup * cur = getValidEntry ( i ) ;	190:2:5942:5991	4906979	0	True				
ANR	4907198	IdentifierDecl	* cur = getValidEntry ( i )		4906979	0					
ANR	4907199	IdentifierDeclType	const SubsystemInfoLookup *		4906979	0					
ANR	4907200	Identifier	cur		4906979	1					
ANR	4907201	AssignmentExpression	* cur = getValidEntry ( i )		4906979	2		=			
ANR	4907202	Identifier	cur		4906979	0					
ANR	4907203	CallExpression	getValidEntry ( i )		4906979	1					
ANR	4907204	Callee	getValidEntry		4906979	0					
ANR	4907205	Identifier	getValidEntry		4906979	0					
ANR	4907206	ArgumentList	i		4906979	1					
ANR	4907207	Argument	i		4906979	0					
ANR	4907208	Identifier	i		4906979	0					
ANR	4907209	IfStatement	if ( ! cur )		4906979	1					
ANR	4907210	Condition	! cur	191:7:6000:6003	4906979	0	True				
ANR	4907211	UnaryOperationExpression	! cur		4906979	0					
ANR	4907212	UnaryOperator	!		4906979	0					
ANR	4907213	Identifier	cur		4906979	1					
ANR	4907214	CompoundStatement		57:14:1460:1460	4906979	1					
ANR	4907215	BreakStatement	break ;	192:3:6012:6017	4906979	0	True				
ANR	4907216	Identifier	SubsystemInfoTable :: SubsystemInfoTable		4906979	1					
ANR	4907217	ParameterList			4906979	2					
ANR	4907218	CFGEntryNode	ENTRY		4906979		True				
ANR	4907219	CFGExitNode	EXIT		4906979		True				
ANR	4907220	Symbol	cur		4906979						
ANR	4907221	Symbol	SUBSYSTEM_TYPE_SHADOW		4906979						
ANR	4907222	Symbol	SUBSYSTEM_TYPE_SUBMIT		4906979						
ANR	4907223	Symbol	SUBSYSTEM_TYPE_SCHEDD		4906979						
ANR	4907224	Symbol	SUBSYSTEM_TYPE_STARTD		4906979						
ANR	4907225	Symbol	SUBSYSTEM_CLASS_CLIENT		4906979						
ANR	4907226	Symbol	SUBSYSTEM_TYPE_COLLECTOR		4906979						
ANR	4907227	Symbol	m_Size		4906979						
ANR	4907228	Symbol	SUBSYSTEM_TYPE_DAGMAN		4906979						
ANR	4907229	Symbol	SUBSYSTEM_TYPE_JOB		4906979						
ANR	4907230	Symbol	m_Invalid -> match		4906979						
ANR	4907231	Symbol	getValidEntry		4906979						
ANR	4907232	Symbol	MaxSubsystemInfoTableSize		4906979						
ANR	4907233	Symbol	m_Count		4906979						
ANR	4907234	Symbol	SUBSYSTEM_TYPE_INVALID		4906979						
ANR	4907235	Symbol	SUBSYSTEM_TYPE_NEGOTIATOR		4906979						
ANR	4907236	Symbol	SUBSYSTEM_CLASS_DAEMON		4906979						
ANR	4907237	Symbol	* m_Invalid		4906979						
ANR	4907238	Symbol	SUBSYSTEM_TYPE_TOOL		4906979						
ANR	4907239	Symbol	NULL		4906979						
ANR	4907240	Symbol	i		4906979						
ANR	4907241	Symbol	SUBSYSTEM_TYPE_STARTER		4906979						
ANR	4907242	Symbol	SUBSYSTEM_TYPE_MASTER		4906979						
ANR	4907243	Symbol	SUBSYSTEM_TYPE_DAEMON		4906979						
ANR	4907244	Symbol	SUBSYSTEM_CLASS_JOB		4906979						
ANR	4907245	Symbol	SUBSYSTEM_CLASS_NONE		4906979						
ANR	4907246	Symbol	SUBSYSTEM_TYPE_SHARED_PORT		4906979						
ANR	4907247	Symbol	m_Invalid		4906979						
ANR	4907248	Symbol	SUBSYSTEM_TYPE_GAHP		4906979						
ANR	4907249	Function	SubsystemInfoTable :: ~SubsystemInfoTable	197:0:6029:6231							
ANR	4907250	FunctionDef	SubsystemInfoTable :: ~SubsystemInfoTable ()		4907249	0					
ANR	4907251	CompoundStatement		198:0:6077:6231	4907249	0					
ANR	4907252	ForStatement	for ( int i = 0 ; i < m_Count ; i ++ )		4907249	0					
ANR	4907253	ForInit	int i = 0 ;	199:7:6086:6093	4907249	0	True				
ANR	4907254	IdentifierDeclStatement	int i = 0 ;		4907249	0					
ANR	4907255	IdentifierDecl	i = 0		4907249	0					
ANR	4907256	IdentifierDeclType	int		4907249	0					
ANR	4907257	Identifier	i		4907249	1					
ANR	4907258	AssignmentExpression	i = 0		4907249	2		=			
ANR	4907259	Identifier	i		4907249	0					
ANR	4907260	PrimaryExpression	0		4907249	1					
ANR	4907261	Condition	i < m_Count	199:17:6096:6104	4907249	1	True				
ANR	4907262	RelationalExpression	i < m_Count		4907249	0		<			
ANR	4907263	Identifier	i		4907249	0					
ANR	4907264	Identifier	m_Count		4907249	1					
ANR	4907265	PostIncDecOperationExpression	i ++	199:29:6108:6110	4907249	2	True				
ANR	4907266	Identifier	i		4907249	0					
ANR	4907267	IncDec	++		4907249	1					
ANR	4907268	CompoundStatement		3:2:40:83	4907249	3					
ANR	4907269	IdentifierDeclStatement	const SubsystemInfoLookup * cur = m_Table [ i ] ;	200:2:6118:6161	4907249	0	True				
ANR	4907270	IdentifierDecl	* cur = m_Table [ i ]		4907249	0					
ANR	4907271	IdentifierDeclType	const SubsystemInfoLookup *		4907249	0					
ANR	4907272	Identifier	cur		4907249	1					
ANR	4907273	AssignmentExpression	* cur = m_Table [ i ]		4907249	2		=			
ANR	4907274	Identifier	cur		4907249	0					
ANR	4907275	ArrayIndexing	m_Table [ i ]		4907249	1					
ANR	4907276	Identifier	m_Table		4907249	0					
ANR	4907277	Identifier	i		4907249	1					
ANR	4907278	IfStatement	if ( ! cur )		4907249	1					
ANR	4907279	Condition	! cur	201:7:6170:6173	4907249	0	True				
ANR	4907280	UnaryOperationExpression	! cur		4907249	0					
ANR	4907281	UnaryOperator	!		4907249	0					
ANR	4907282	Identifier	cur		4907249	1					
ANR	4907283	CompoundStatement		4:14:99:99	4907249	1					
ANR	4907284	BreakStatement	break ;	202:3:6182:6187	4907249	0	True				
ANR	4907285	Statement	delete	204:2:6195:6200	4907249	2	True				
ANR	4907286	ExpressionStatement	cur	204:9:6202:6205	4907249	3	True				
ANR	4907287	Identifier	cur		4907249	0					
ANR	4907288	ExpressionStatement	m_Table [ i ] = NULL	205:2:6209:6226	4907249	4	True				
ANR	4907289	AssignmentExpression	m_Table [ i ] = NULL		4907249	0		=			
ANR	4907290	ArrayIndexing	m_Table [ i ]		4907249	0					
ANR	4907291	Identifier	m_Table		4907249	0					
ANR	4907292	Identifier	i		4907249	1					
ANR	4907293	Identifier	NULL		4907249	1					
ANR	4907294	Identifier	SubsystemInfoTable :: ~SubsystemInfoTable		4907249	1					
ANR	4907295	ParameterList			4907249	2					
ANR	4907296	CFGEntryNode	ENTRY		4907249		True				
ANR	4907297	CFGExitNode	EXIT		4907249		True				
ANR	4907298	Symbol	cur		4907249						
ANR	4907299	Symbol	* i		4907249						
ANR	4907300	Symbol	NULL		4907249						
ANR	4907301	Symbol	* m_Table		4907249						
ANR	4907302	Symbol	i		4907249						
ANR	4907303	Symbol	m_Count		4907249						
ANR	4907304	Symbol	m_Table		4907249						
ANR	4907305	Function	SubsystemInfoTable :: addEntry	210:0:6253:6575							
ANR	4907306	FunctionDef	"SubsystemInfoTable :: addEntry (SubsystemType _type , SubsystemClass _class , const char * _type_name , const char * _type_substr)"		4907305	0					
ANR	4907307	CompoundStatement		214:0:6385:6575	4907305	0					
ANR	4907308	IdentifierDeclStatement	"SubsystemInfoLookup * entry = new SubsystemInfoLookup ( _type , _class , _type_name , _type_substr ) ;"	215:1:6388:6485	4907305	0	True				
ANR	4907309	IdentifierDecl	"* entry = new SubsystemInfoLookup ( _type , _class , _type_name , _type_substr )"		4907305	0					
ANR	4907310	IdentifierDeclType	SubsystemInfoLookup *		4907305	0					
ANR	4907311	Identifier	entry		4907305	1					
ANR	4907312	AssignmentExpression	"* entry = new SubsystemInfoLookup ( _type , _class , _type_name , _type_substr )"		4907305	2		=			
ANR	4907313	Identifier	entry		4907305	0					
ANR	4907314	Expression	"_type , _class , _type_name , _type_substr"		4907305	1					
ANR	4907315	Identifier	_type		4907305	0					
ANR	4907316	Expression	"_class , _type_name , _type_substr"		4907305	1					
ANR	4907317	Identifier	_class		4907305	0					
ANR	4907318	Expression	"_type_name , _type_substr"		4907305	1					
ANR	4907319	Identifier	_type_name		4907305	0					
ANR	4907320	Identifier	_type_substr		4907305	1					
ANR	4907321	ExpressionStatement	addEntry ( entry )	218:1:6489:6506	4907305	1	True				
ANR	4907322	CallExpression	addEntry ( entry )		4907305	0					
ANR	4907323	Callee	addEntry		4907305	0					
ANR	4907324	Identifier	addEntry		4907305	0					
ANR	4907325	ArgumentList	entry		4907305	1					
ANR	4907326	Argument	entry		4907305	0					
ANR	4907327	Identifier	entry		4907305	0					
ANR	4907328	IfStatement	if ( _type == SUBSYSTEM_TYPE_INVALID )		4907305	2					
ANR	4907329	Condition	_type == SUBSYSTEM_TYPE_INVALID	219:6:6514:6544	4907305	0	True				
ANR	4907330	EqualityExpression	_type == SUBSYSTEM_TYPE_INVALID		4907305	0		==			
ANR	4907331	Identifier	_type		4907305	0					
ANR	4907332	Identifier	SUBSYSTEM_TYPE_INVALID		4907305	1					
ANR	4907333	CompoundStatement		6:40:162:162	4907305	1					
ANR	4907334	ExpressionStatement	m_Invalid = entry	220:2:6552:6569	4907305	0	True				
ANR	4907335	AssignmentExpression	m_Invalid = entry		4907305	0		=			
ANR	4907336	Identifier	m_Invalid		4907305	0					
ANR	4907337	Identifier	entry		4907305	1					
ANR	4907338	ReturnType	void		4907305	1					
ANR	4907339	Identifier	SubsystemInfoTable :: addEntry		4907305	2					
ANR	4907340	ParameterList	"SubsystemType _type , SubsystemClass _class , const char * _type_name , const char * _type_substr"		4907305	3					
ANR	4907341	Parameter	SubsystemType _type	212:1:6289:6307	4907305	0	True				
ANR	4907342	ParameterType	SubsystemType		4907305	0					
ANR	4907343	Identifier	_type		4907305	1					
ANR	4907344	Parameter	SubsystemClass _class	212:22:6310:6330	4907305	1	True				
ANR	4907345	ParameterType	SubsystemClass		4907305	0					
ANR	4907346	Identifier	_class		4907305	1					
ANR	4907347	Parameter	const char * _type_name	213:1:6334:6355	4907305	2	True				
ANR	4907348	ParameterType	const char *		4907305	0					
ANR	4907349	Identifier	_type_name		4907305	1					
ANR	4907350	Parameter	const char * _type_substr	213:25:6358:6381	4907305	3	True				
ANR	4907351	ParameterType	const char *		4907305	0					
ANR	4907352	Identifier	_type_substr		4907305	1					
ANR	4907353	CFGEntryNode	ENTRY		4907305		True				
ANR	4907354	CFGExitNode	EXIT		4907305		True				
ANR	4907355	Symbol	_type_substr		4907305						
ANR	4907356	Symbol	entry		4907305						
ANR	4907357	Symbol	_type_name		4907305						
ANR	4907358	Symbol	_type		4907305						
ANR	4907359	Symbol	SUBSYSTEM_TYPE_INVALID		4907305						
ANR	4907360	Symbol	_class		4907305						
ANR	4907361	Symbol	m_Invalid		4907305						
ANR	4907362	Function	SubsystemInfoTable :: addEntry	225:0:6578:6709							
ANR	4907363	FunctionDef	SubsystemInfoTable :: addEntry (const SubsystemInfoLookup * entry)		4907362	0					
ANR	4907364	CompoundStatement		227:0:6648:6709	4907362	0					
ANR	4907365	ExpressionStatement	m_Table [ m_Count ] = entry	228:1:6651:6675	4907362	0	True				
ANR	4907366	AssignmentExpression	m_Table [ m_Count ] = entry		4907362	0		=			
ANR	4907367	ArrayIndexing	m_Table [ m_Count ]		4907362	0					
ANR	4907368	Identifier	m_Table		4907362	0					
ANR	4907369	Identifier	m_Count		4907362	1					
ANR	4907370	Identifier	entry		4907362	1					
ANR	4907371	ExpressionStatement	assert ( ++ m_Count < m_Size )	229:1:6678:6707	4907362	1	True				
ANR	4907372	CallExpression	assert ( ++ m_Count < m_Size )		4907362	0					
ANR	4907373	Callee	assert		4907362	0					
ANR	4907374	Identifier	assert		4907362	0					
ANR	4907375	ArgumentList	++ m_Count < m_Size		4907362	1					
ANR	4907376	Argument	++ m_Count < m_Size		4907362	0					
ANR	4907377	RelationalExpression	++ m_Count < m_Size		4907362	0		<			
ANR	4907378	UnaryExpression	++ m_Count		4907362	0					
ANR	4907379	IncDec	++		4907362	0					
ANR	4907380	Identifier	m_Count		4907362	1					
ANR	4907381	Identifier	m_Size		4907362	1					
ANR	4907382	ReturnType	void		4907362	1					
ANR	4907383	Identifier	SubsystemInfoTable :: addEntry		4907362	2					
ANR	4907384	ParameterList	const SubsystemInfoLookup * entry		4907362	3					
ANR	4907385	Parameter	const SubsystemInfoLookup * entry	226:30:6613:6644	4907362	0	True				
ANR	4907386	ParameterType	const SubsystemInfoLookup *		4907362	0					
ANR	4907387	Identifier	entry		4907362	1					
ANR	4907388	CFGEntryNode	ENTRY		4907362		True				
ANR	4907389	CFGExitNode	EXIT		4907362		True				
ANR	4907390	Symbol	* m_Count		4907362						
ANR	4907391	Symbol	entry		4907362						
ANR	4907392	Symbol	m_Size		4907362						
ANR	4907393	Symbol	* m_Table		4907362						
ANR	4907394	Symbol	m_Count		4907362						
ANR	4907395	Symbol	m_Table		4907362						
ANR	4907396	Function	SubsystemInfoTable :: getEntry	232:0:6712:6853							
ANR	4907397	FunctionDef	SubsystemInfoTable :: getEntry (int num)		4907396	0					
ANR	4907398	CompoundStatement		234:0:6786:6853	4907396	0					
ANR	4907399	IfStatement	if ( num >= m_Count )		4907396	0					
ANR	4907400	Condition	num >= m_Count	235:6:6794:6807	4907396	0	True				
ANR	4907401	RelationalExpression	num >= m_Count		4907396	0		>=			
ANR	4907402	Identifier	num		4907396	0					
ANR	4907403	Identifier	m_Count		4907396	1					
ANR	4907404	CompoundStatement		2:23:24:24	4907396	1					
ANR	4907405	ReturnStatement	return NULL ;	236:2:6815:6826	4907396	0	True				
ANR	4907406	Identifier	NULL		4907396	0					
ANR	4907407	ReturnStatement	return m_Table [ num ] ;	238:1:6832:6851	4907396	1	True				
ANR	4907408	ArrayIndexing	m_Table [ num ]		4907396	0					
ANR	4907409	Identifier	m_Table		4907396	0					
ANR	4907410	Identifier	num		4907396	1					
ANR	4907411	ReturnType	const SubsystemInfoLookup *		4907396	1					
ANR	4907412	Identifier	SubsystemInfoTable :: getEntry		4907396	2					
ANR	4907413	ParameterList	int num		4907396	3					
ANR	4907414	Parameter	int num	233:30:6770:6776	4907396	0	True				
ANR	4907415	ParameterType	int		4907396	0					
ANR	4907416	Identifier	num		4907396	1					
ANR	4907417	CFGEntryNode	ENTRY		4907396		True				
ANR	4907418	CFGExitNode	EXIT		4907396		True				
ANR	4907419	Symbol	* num		4907396						
ANR	4907420	Symbol	NULL		4907396						
ANR	4907421	Symbol	* m_Table		4907396						
ANR	4907422	Symbol	num		4907396						
ANR	4907423	Symbol	m_Count		4907396						
ANR	4907424	Symbol	m_Table		4907396						
ANR	4907425	Function	SubsystemInfoTable :: getValidEntry	241:0:6856:7052							
ANR	4907426	FunctionDef	SubsystemInfoTable :: getValidEntry (int num)		4907425	0					
ANR	4907427	CompoundStatement		243:0:6935:7052	4907425	0					
ANR	4907428	IdentifierDeclStatement	const SubsystemInfoLookup * entry = getEntry ( num ) ;	244:1:6938:6988	4907425	0	True				
ANR	4907429	IdentifierDecl	* entry = getEntry ( num )		4907425	0					
ANR	4907430	IdentifierDeclType	const SubsystemInfoLookup *		4907425	0					
ANR	4907431	Identifier	entry		4907425	1					
ANR	4907432	AssignmentExpression	* entry = getEntry ( num )		4907425	2		=			
ANR	4907433	Identifier	entry		4907425	0					
ANR	4907434	CallExpression	getEntry ( num )		4907425	1					
ANR	4907435	Callee	getEntry		4907425	0					
ANR	4907436	Identifier	getEntry		4907425	0					
ANR	4907437	ArgumentList	num		4907425	1					
ANR	4907438	Argument	num		4907425	0					
ANR	4907439	Identifier	num		4907425	0					
ANR	4907440	IfStatement	if ( ! entry -> isValid ( ) )		4907425	1					
ANR	4907441	Condition	! entry -> isValid ( )	245:6:6996:7013	4907425	0	True				
ANR	4907442	UnaryOperationExpression	! entry -> isValid ( )		4907425	0					
ANR	4907443	UnaryOperator	!		4907425	0					
ANR	4907444	CallExpression	entry -> isValid ( )		4907425	1					
ANR	4907445	Callee	entry -> isValid		4907425	0					
ANR	4907446	PtrMemberAccess	entry -> isValid		4907425	0					
ANR	4907447	Identifier	entry		4907425	0					
ANR	4907448	Identifier	isValid		4907425	1					
ANR	4907449	ArgumentList			4907425	1					
ANR	4907450	CompoundStatement		3:27:81:81	4907425	1					
ANR	4907451	ReturnStatement	return NULL ;	246:2:7021:7032	4907425	0	True				
ANR	4907452	Identifier	NULL		4907425	0					
ANR	4907453	ReturnStatement	return entry ;	248:1:7038:7050	4907425	2	True				
ANR	4907454	Identifier	entry		4907425	0					
ANR	4907455	ReturnType	const SubsystemInfoLookup *		4907425	1					
ANR	4907456	Identifier	SubsystemInfoTable :: getValidEntry		4907425	2					
ANR	4907457	ParameterList	int num		4907425	3					
ANR	4907458	Parameter	int num	242:35:6919:6925	4907425	0	True				
ANR	4907459	ParameterType	int		4907425	0					
ANR	4907460	Identifier	num		4907425	1					
ANR	4907461	CFGEntryNode	ENTRY		4907425		True				
ANR	4907462	CFGExitNode	EXIT		4907425		True				
ANR	4907463	Symbol	entry		4907425						
ANR	4907464	Symbol	entry -> isValid		4907425						
ANR	4907465	Symbol	NULL		4907425						
ANR	4907466	Symbol	num		4907425						
ANR	4907467	Symbol	getEntry		4907425						
ANR	4907468	Symbol	* entry		4907425						
ANR	4907469	Function	SubsystemInfoTable :: lookup	253:0:7083:7364							
ANR	4907470	FunctionDef	SubsystemInfoTable :: lookup (SubsystemType _type)		4907469	0					
ANR	4907471	CompoundStatement		255:0:7167:7364	4907469	0					
ANR	4907472	ForStatement	for ( int i = 0 ; i < m_Count ; i ++ )		4907469	0					
ANR	4907473	ForInit	int i = 0 ;	256:7:7176:7183	4907469	0	True				
ANR	4907474	IdentifierDeclStatement	int i = 0 ;		4907469	0					
ANR	4907475	IdentifierDecl	i = 0		4907469	0					
ANR	4907476	IdentifierDeclType	int		4907469	0					
ANR	4907477	Identifier	i		4907469	1					
ANR	4907478	AssignmentExpression	i = 0		4907469	2		=			
ANR	4907479	Identifier	i		4907469	0					
ANR	4907480	PrimaryExpression	0		4907469	1					
ANR	4907481	Condition	i < m_Count	256:17:7186:7194	4907469	1	True				
ANR	4907482	RelationalExpression	i < m_Count		4907469	0		<			
ANR	4907483	Identifier	i		4907469	0					
ANR	4907484	Identifier	m_Count		4907469	1					
ANR	4907485	PostIncDecOperationExpression	i ++	256:29:7198:7200	4907469	2	True				
ANR	4907486	Identifier	i		4907469	0					
ANR	4907487	IncDec	++		4907469	1					
ANR	4907488	CompoundStatement		3:2:40:89	4907469	3					
ANR	4907489	IdentifierDeclStatement	const SubsystemInfoLookup * cur = getValidEntry ( i ) ;	257:2:7208:7257	4907469	0	True				
ANR	4907490	IdentifierDecl	* cur = getValidEntry ( i )		4907469	0					
ANR	4907491	IdentifierDeclType	const SubsystemInfoLookup *		4907469	0					
ANR	4907492	Identifier	cur		4907469	1					
ANR	4907493	AssignmentExpression	* cur = getValidEntry ( i )		4907469	2		=			
ANR	4907494	Identifier	cur		4907469	0					
ANR	4907495	CallExpression	getValidEntry ( i )		4907469	1					
ANR	4907496	Callee	getValidEntry		4907469	0					
ANR	4907497	Identifier	getValidEntry		4907469	0					
ANR	4907498	ArgumentList	i		4907469	1					
ANR	4907499	Argument	i		4907469	0					
ANR	4907500	Identifier	i		4907469	0					
ANR	4907501	IfStatement	if ( ! cur )		4907469	1					
ANR	4907502	Condition	! cur	258:7:7266:7269	4907469	0	True				
ANR	4907503	UnaryOperationExpression	! cur		4907469	0					
ANR	4907504	UnaryOperator	!		4907469	0					
ANR	4907505	Identifier	cur		4907469	1					
ANR	4907506	CompoundStatement		4:14:105:105	4907469	1					
ANR	4907507	BreakStatement	break ;	259:3:7278:7283	4907469	0	True				
ANR	4907508	ElseStatement	else		4907469	0					
ANR	4907509	IfStatement	if ( cur -> match ( _type ) )		4907469	0					
ANR	4907510	Condition	cur -> match ( _type )	261:12:7301:7317	4907469	0	True				
ANR	4907511	CallExpression	cur -> match ( _type )		4907469	0					
ANR	4907512	Callee	cur -> match		4907469	0					
ANR	4907513	PtrMemberAccess	cur -> match		4907469	0					
ANR	4907514	Identifier	cur		4907469	0					
ANR	4907515	Identifier	match		4907469	1					
ANR	4907516	ArgumentList	_type		4907469	1					
ANR	4907517	Argument	_type		4907469	0					
ANR	4907518	Identifier	_type		4907469	0					
ANR	4907519	CompoundStatement		7:32:153:153	4907469	1					
ANR	4907520	ReturnStatement	return cur ;	262:3:7326:7336	4907469	0	True				
ANR	4907521	Identifier	cur		4907469	0					
ANR	4907522	ReturnStatement	return m_Invalid ;	265:1:7346:7362	4907469	1	True				
ANR	4907523	Identifier	m_Invalid		4907469	0					
ANR	4907524	ReturnType	const SubsystemInfoLookup *		4907469	1					
ANR	4907525	Identifier	SubsystemInfoTable :: lookup		4907469	2					
ANR	4907526	ParameterList	SubsystemType _type		4907469	3					
ANR	4907527	Parameter	SubsystemType _type	254:28:7139:7157	4907469	0	True				
ANR	4907528	ParameterType	SubsystemType		4907469	0					
ANR	4907529	Identifier	_type		4907469	1					
ANR	4907530	CFGEntryNode	ENTRY		4907469		True				
ANR	4907531	CFGExitNode	EXIT		4907469		True				
ANR	4907532	Symbol	cur		4907469						
ANR	4907533	Symbol	* cur		4907469						
ANR	4907534	Symbol	getValidEntry		4907469						
ANR	4907535	Symbol	_type		4907469						
ANR	4907536	Symbol	i		4907469						
ANR	4907537	Symbol	m_Count		4907469						
ANR	4907538	Symbol	cur -> match		4907469						
ANR	4907539	Symbol	m_Invalid		4907469						
ANR	4907540	Function	SubsystemInfoTable :: lookup	269:0:7395:7679							
ANR	4907541	FunctionDef	SubsystemInfoTable :: lookup (SubsystemClass _class)		4907540	0					
ANR	4907542	CompoundStatement		271:0:7481:7679	4907540	0					
ANR	4907543	ForStatement	for ( int i = 0 ; i < m_Count ; i ++ )		4907540	0					
ANR	4907544	ForInit	int i = 0 ;	272:7:7490:7497	4907540	0	True				
ANR	4907545	IdentifierDeclStatement	int i = 0 ;		4907540	0					
ANR	4907546	IdentifierDecl	i = 0		4907540	0					
ANR	4907547	IdentifierDeclType	int		4907540	0					
ANR	4907548	Identifier	i		4907540	1					
ANR	4907549	AssignmentExpression	i = 0		4907540	2		=			
ANR	4907550	Identifier	i		4907540	0					
ANR	4907551	PrimaryExpression	0		4907540	1					
ANR	4907552	Condition	i < m_Count	272:17:7500:7508	4907540	1	True				
ANR	4907553	RelationalExpression	i < m_Count		4907540	0		<			
ANR	4907554	Identifier	i		4907540	0					
ANR	4907555	Identifier	m_Count		4907540	1					
ANR	4907556	PostIncDecOperationExpression	i ++	272:29:7512:7514	4907540	2	True				
ANR	4907557	Identifier	i		4907540	0					
ANR	4907558	IncDec	++		4907540	1					
ANR	4907559	CompoundStatement		3:2:40:89	4907540	3					
ANR	4907560	IdentifierDeclStatement	const SubsystemInfoLookup * cur = getValidEntry ( i ) ;	273:2:7522:7571	4907540	0	True				
ANR	4907561	IdentifierDecl	* cur = getValidEntry ( i )		4907540	0					
ANR	4907562	IdentifierDeclType	const SubsystemInfoLookup *		4907540	0					
ANR	4907563	Identifier	cur		4907540	1					
ANR	4907564	AssignmentExpression	* cur = getValidEntry ( i )		4907540	2		=			
ANR	4907565	Identifier	cur		4907540	0					
ANR	4907566	CallExpression	getValidEntry ( i )		4907540	1					
ANR	4907567	Callee	getValidEntry		4907540	0					
ANR	4907568	Identifier	getValidEntry		4907540	0					
ANR	4907569	ArgumentList	i		4907540	1					
ANR	4907570	Argument	i		4907540	0					
ANR	4907571	Identifier	i		4907540	0					
ANR	4907572	IfStatement	if ( ! cur )		4907540	1					
ANR	4907573	Condition	! cur	274:7:7580:7583	4907540	0	True				
ANR	4907574	UnaryOperationExpression	! cur		4907540	0					
ANR	4907575	UnaryOperator	!		4907540	0					
ANR	4907576	Identifier	cur		4907540	1					
ANR	4907577	CompoundStatement		4:14:105:105	4907540	1					
ANR	4907578	BreakStatement	break ;	275:3:7592:7597	4907540	0	True				
ANR	4907579	ElseStatement	else		4907540	0					
ANR	4907580	IfStatement	if ( cur -> match ( _class ) )		4907540	0					
ANR	4907581	Condition	cur -> match ( _class )	277:12:7615:7632	4907540	0	True				
ANR	4907582	CallExpression	cur -> match ( _class )		4907540	0					
ANR	4907583	Callee	cur -> match		4907540	0					
ANR	4907584	PtrMemberAccess	cur -> match		4907540	0					
ANR	4907585	Identifier	cur		4907540	0					
ANR	4907586	Identifier	match		4907540	1					
ANR	4907587	ArgumentList	_class		4907540	1					
ANR	4907588	Argument	_class		4907540	0					
ANR	4907589	Identifier	_class		4907540	0					
ANR	4907590	CompoundStatement		7:33:154:154	4907540	1					
ANR	4907591	ReturnStatement	return cur ;	278:3:7641:7651	4907540	0	True				
ANR	4907592	Identifier	cur		4907540	0					
ANR	4907593	ReturnStatement	return m_Invalid ;	281:1:7661:7677	4907540	1	True				
ANR	4907594	Identifier	m_Invalid		4907540	0					
ANR	4907595	ReturnType	const SubsystemInfoLookup *		4907540	1					
ANR	4907596	Identifier	SubsystemInfoTable :: lookup		4907540	2					
ANR	4907597	ParameterList	SubsystemClass _class		4907540	3					
ANR	4907598	Parameter	SubsystemClass _class	270:28:7451:7471	4907540	0	True				
ANR	4907599	ParameterType	SubsystemClass		4907540	0					
ANR	4907600	Identifier	_class		4907540	1					
ANR	4907601	CFGEntryNode	ENTRY		4907540		True				
ANR	4907602	CFGExitNode	EXIT		4907540		True				
ANR	4907603	Symbol	cur		4907540						
ANR	4907604	Symbol	* cur		4907540						
ANR	4907605	Symbol	getValidEntry		4907540						
ANR	4907606	Symbol	i		4907540						
ANR	4907607	Symbol	m_Count		4907540						
ANR	4907608	Symbol	_class		4907540						
ANR	4907609	Symbol	cur -> match		4907540						
ANR	4907610	Symbol	m_Invalid		4907540						
ANR	4907611	Function	SubsystemInfoTable :: lookup	285:0:7700:8263							
ANR	4907612	FunctionDef	SubsystemInfoTable :: lookup (const char * _name)		4907611	0					
ANR	4907613	CompoundStatement		287:0:7782:8263	4907611	0					
ANR	4907614	IdentifierDeclStatement	int i ;	288:1:7785:7791	4907611	0	True				
ANR	4907615	IdentifierDecl	i		4907611	0					
ANR	4907616	IdentifierDeclType	int		4907611	0					
ANR	4907617	Identifier	i		4907611	1					
ANR	4907618	ForStatement	for ( i = 0 ; i < m_Count ; i ++ )		4907611	1					
ANR	4907619	ForInit	i = 0 ;	291:7:7834:7837	4907611	0	True				
ANR	4907620	AssignmentExpression	i = 0		4907611	0		=			
ANR	4907621	Identifier	i		4907611	0					
ANR	4907622	PrimaryExpression	0		4907611	1					
ANR	4907623	Condition	i < m_Count	291:13:7840:7848	4907611	1	True				
ANR	4907624	RelationalExpression	i < m_Count		4907611	0		<			
ANR	4907625	Identifier	i		4907611	0					
ANR	4907626	Identifier	m_Count		4907611	1					
ANR	4907627	PostIncDecOperationExpression	i ++	291:25:7852:7854	4907611	2	True				
ANR	4907628	Identifier	i		4907611	0					
ANR	4907629	IncDec	++		4907611	1					
ANR	4907630	CompoundStatement		6:2:79:128	4907611	3					
ANR	4907631	IdentifierDeclStatement	const SubsystemInfoLookup * cur = getValidEntry ( i ) ;	292:2:7862:7911	4907611	0	True				
ANR	4907632	IdentifierDecl	* cur = getValidEntry ( i )		4907611	0					
ANR	4907633	IdentifierDeclType	const SubsystemInfoLookup *		4907611	0					
ANR	4907634	Identifier	cur		4907611	1					
ANR	4907635	AssignmentExpression	* cur = getValidEntry ( i )		4907611	2		=			
ANR	4907636	Identifier	cur		4907611	0					
ANR	4907637	CallExpression	getValidEntry ( i )		4907611	1					
ANR	4907638	Callee	getValidEntry		4907611	0					
ANR	4907639	Identifier	getValidEntry		4907611	0					
ANR	4907640	ArgumentList	i		4907611	1					
ANR	4907641	Argument	i		4907611	0					
ANR	4907642	Identifier	i		4907611	0					
ANR	4907643	IfStatement	if ( ! cur )		4907611	1					
ANR	4907644	Condition	! cur	293:7:7920:7923	4907611	0	True				
ANR	4907645	UnaryOperationExpression	! cur		4907611	0					
ANR	4907646	UnaryOperator	!		4907611	0					
ANR	4907647	Identifier	cur		4907611	1					
ANR	4907648	CompoundStatement		7:14:144:144	4907611	1					
ANR	4907649	BreakStatement	break ;	294:3:7932:7937	4907611	0	True				
ANR	4907650	ElseStatement	else		4907611	0					
ANR	4907651	IfStatement	if ( cur -> match ( _name ) )		4907611	0					
ANR	4907652	Condition	cur -> match ( _name )	296:12:7955:7971	4907611	0	True				
ANR	4907653	CallExpression	cur -> match ( _name )		4907611	0					
ANR	4907654	Callee	cur -> match		4907611	0					
ANR	4907655	PtrMemberAccess	cur -> match		4907611	0					
ANR	4907656	Identifier	cur		4907611	0					
ANR	4907657	Identifier	match		4907611	1					
ANR	4907658	ArgumentList	_name		4907611	1					
ANR	4907659	Argument	_name		4907611	0					
ANR	4907660	Identifier	_name		4907611	0					
ANR	4907661	CompoundStatement		10:32:192:192	4907611	1					
ANR	4907662	ReturnStatement	return cur ;	297:3:7980:7990	4907611	0	True				
ANR	4907663	Identifier	cur		4907611	0					
ANR	4907664	ForStatement	for ( i = 0 ; i < m_Count ; i ++ )		4907611	2					
ANR	4907665	ForInit	i = 0 ;	301:7:8043:8046	4907611	0	True				
ANR	4907666	AssignmentExpression	i = 0		4907611	0		=			
ANR	4907667	Identifier	i		4907611	0					
ANR	4907668	PrimaryExpression	0		4907611	1					
ANR	4907669	Condition	i < m_Count	301:13:8049:8057	4907611	1	True				
ANR	4907670	RelationalExpression	i < m_Count		4907611	0		<			
ANR	4907671	Identifier	i		4907611	0					
ANR	4907672	Identifier	m_Count		4907611	1					
ANR	4907673	PostIncDecOperationExpression	i ++	301:25:8061:8063	4907611	2	True				
ANR	4907674	Identifier	i		4907611	0					
ANR	4907675	IncDec	++		4907611	1					
ANR	4907676	CompoundStatement		16:2:288:337	4907611	3					
ANR	4907677	IdentifierDeclStatement	const SubsystemInfoLookup * cur = getValidEntry ( i ) ;	302:2:8071:8120	4907611	0	True				
ANR	4907678	IdentifierDecl	* cur = getValidEntry ( i )		4907611	0					
ANR	4907679	IdentifierDeclType	const SubsystemInfoLookup *		4907611	0					
ANR	4907680	Identifier	cur		4907611	1					
ANR	4907681	AssignmentExpression	* cur = getValidEntry ( i )		4907611	2		=			
ANR	4907682	Identifier	cur		4907611	0					
ANR	4907683	CallExpression	getValidEntry ( i )		4907611	1					
ANR	4907684	Callee	getValidEntry		4907611	0					
ANR	4907685	Identifier	getValidEntry		4907611	0					
ANR	4907686	ArgumentList	i		4907611	1					
ANR	4907687	Argument	i		4907611	0					
ANR	4907688	Identifier	i		4907611	0					
ANR	4907689	IfStatement	if ( ! cur )		4907611	1					
ANR	4907690	Condition	! cur	303:7:8129:8132	4907611	0	True				
ANR	4907691	UnaryOperationExpression	! cur		4907611	0					
ANR	4907692	UnaryOperator	!		4907611	0					
ANR	4907693	Identifier	cur		4907611	1					
ANR	4907694	CompoundStatement		17:14:353:353	4907611	1					
ANR	4907695	BreakStatement	break ;	304:3:8141:8146	4907611	0	True				
ANR	4907696	ElseStatement	else		4907611	0					
ANR	4907697	IfStatement	if ( cur -> matchSubstr ( _name ) )		4907611	0					
ANR	4907698	Condition	cur -> matchSubstr ( _name )	306:12:8164:8186	4907611	0	True				
ANR	4907699	CallExpression	cur -> matchSubstr ( _name )		4907611	0					
ANR	4907700	Callee	cur -> matchSubstr		4907611	0					
ANR	4907701	PtrMemberAccess	cur -> matchSubstr		4907611	0					
ANR	4907702	Identifier	cur		4907611	0					
ANR	4907703	Identifier	matchSubstr		4907611	1					
ANR	4907704	ArgumentList	_name		4907611	1					
ANR	4907705	Argument	_name		4907611	0					
ANR	4907706	Identifier	_name		4907611	0					
ANR	4907707	CompoundStatement		20:38:407:407	4907611	1					
ANR	4907708	ReturnStatement	return cur ;	307:3:8195:8205	4907611	0	True				
ANR	4907709	Identifier	cur		4907611	0					
ANR	4907710	ReturnStatement	return m_Invalid ;	312:1:8245:8261	4907611	3	True				
ANR	4907711	Identifier	m_Invalid		4907611	0					
ANR	4907712	ReturnType	const SubsystemInfoLookup *		4907611	1					
ANR	4907713	Identifier	SubsystemInfoTable :: lookup		4907611	2					
ANR	4907714	ParameterList	const char * _name		4907611	3					
ANR	4907715	Parameter	const char * _name	286:28:7756:7772	4907611	0	True				
ANR	4907716	ParameterType	const char *		4907611	0					
ANR	4907717	Identifier	_name		4907611	1					
ANR	4907718	CFGEntryNode	ENTRY		4907611		True				
ANR	4907719	CFGExitNode	EXIT		4907611		True				
ANR	4907720	Symbol	cur		4907611						
ANR	4907721	Symbol	_name		4907611						
ANR	4907722	Symbol	* cur		4907611						
ANR	4907723	Symbol	getValidEntry		4907611						
ANR	4907724	Symbol	cur -> matchSubstr		4907611						
ANR	4907725	Symbol	i		4907611						
ANR	4907726	Symbol	m_Count		4907611						
ANR	4907727	Symbol	cur -> match		4907611						
ANR	4907728	Symbol	m_Invalid		4907611						
ANR	4907729	Function	SubsystemInfo :: SubsystemInfo	320:0:8394:8702							
ANR	4907730	FunctionDef	"SubsystemInfo :: SubsystemInfo (const char * _name , SubsystemType _type)"		4907729	0					
ANR	4907731	CompoundStatement		321:0:8465:8702	4907729	0					
ANR	4907732	ExpressionStatement	m_Name = NULL	322:1:8468:8481	4907729	0	True				
ANR	4907733	AssignmentExpression	m_Name = NULL		4907729	0		=			
ANR	4907734	Identifier	m_Name		4907729	0					
ANR	4907735	Identifier	NULL		4907729	1					
ANR	4907736	ExpressionStatement	m_TempName = NULL	323:1:8484:8501	4907729	1	True				
ANR	4907737	AssignmentExpression	m_TempName = NULL		4907729	0		=			
ANR	4907738	Identifier	m_TempName		4907729	0					
ANR	4907739	Identifier	NULL		4907729	1					
ANR	4907740	ExpressionStatement	m_LocalName = NULL	324:1:8504:8522	4907729	2	True				
ANR	4907741	AssignmentExpression	m_LocalName = NULL		4907729	0		=			
ANR	4907742	Identifier	m_LocalName		4907729	0					
ANR	4907743	Identifier	NULL		4907729	1					
ANR	4907744	ExpressionStatement	m_Info = NULL	325:1:8525:8538	4907729	3	True				
ANR	4907745	AssignmentExpression	m_Info = NULL		4907729	0		=			
ANR	4907746	Identifier	m_Info		4907729	0					
ANR	4907747	Identifier	NULL		4907729	1					
ANR	4907748	ExpressionStatement	m_InfoTable = new SubsystemInfoTable ( )	326:1:8541:8580	4907729	4	True				
ANR	4907749	AssignmentExpression	m_InfoTable = new SubsystemInfoTable ( )		4907729	0		=			
ANR	4907750	Identifier	m_InfoTable		4907729	0					
ANR	4907751	UnaryExpression	new SubsystemInfoTable ( )		4907729	1					
ANR	4907752	ExpressionStatement	setName ( _name )	327:1:8583:8599	4907729	5	True				
ANR	4907753	CallExpression	setName ( _name )		4907729	0					
ANR	4907754	Callee	setName		4907729	0					
ANR	4907755	Identifier	setName		4907729	0					
ANR	4907756	ArgumentList	_name		4907729	1					
ANR	4907757	Argument	_name		4907729	0					
ANR	4907758	Identifier	_name		4907729	0					
ANR	4907759	IfStatement	if ( _type == SUBSYSTEM_TYPE_AUTO )		4907729	6					
ANR	4907760	Condition	_type == SUBSYSTEM_TYPE_AUTO	328:6:8607:8634	4907729	0	True				
ANR	4907761	EqualityExpression	_type == SUBSYSTEM_TYPE_AUTO		4907729	0		==			
ANR	4907762	Identifier	_type		4907729	0					
ANR	4907763	Identifier	SUBSYSTEM_TYPE_AUTO		4907729	1					
ANR	4907764	CompoundStatement		8:37:172:172	4907729	1					
ANR	4907765	ExpressionStatement	setTypeFromName ( _name )	329:2:8642:8666	4907729	0	True				
ANR	4907766	CallExpression	setTypeFromName ( _name )		4907729	0					
ANR	4907767	Callee	setTypeFromName		4907729	0					
ANR	4907768	Identifier	setTypeFromName		4907729	0					
ANR	4907769	ArgumentList	_name		4907729	1					
ANR	4907770	Argument	_name		4907729	0					
ANR	4907771	Identifier	_name		4907729	0					
ANR	4907772	ElseStatement	else		4907729	0					
ANR	4907773	CompoundStatement		11:6:211:211	4907729	0					
ANR	4907774	ExpressionStatement	setType ( _type )	332:2:8681:8697	4907729	0	True				
ANR	4907775	CallExpression	setType ( _type )		4907729	0					
ANR	4907776	Callee	setType		4907729	0					
ANR	4907777	Identifier	setType		4907729	0					
ANR	4907778	ArgumentList	_type		4907729	1					
ANR	4907779	Argument	_type		4907729	0					
ANR	4907780	Identifier	_type		4907729	0					
ANR	4907781	Identifier	SubsystemInfo :: SubsystemInfo		4907729	1					
ANR	4907782	ParameterList	"const char * _name , SubsystemType _type"		4907729	2					
ANR	4907783	Parameter	const char * _name	320:30:8424:8440	4907729	0	True				
ANR	4907784	ParameterType	const char *		4907729	0					
ANR	4907785	Identifier	_name		4907729	1					
ANR	4907786	Parameter	SubsystemType _type	320:49:8443:8461	4907729	1	True				
ANR	4907787	ParameterType	SubsystemType		4907729	0					
ANR	4907788	Identifier	_type		4907729	1					
ANR	4907789	CFGEntryNode	ENTRY		4907729		True				
ANR	4907790	CFGExitNode	EXIT		4907729		True				
ANR	4907791	Symbol	m_TempName		4907729						
ANR	4907792	Symbol	m_Name		4907729						
ANR	4907793	Symbol	SUBSYSTEM_TYPE_AUTO		4907729						
ANR	4907794	Symbol	NULL		4907729						
ANR	4907795	Symbol	_name		4907729						
ANR	4907796	Symbol	m_InfoTable		4907729						
ANR	4907797	Symbol	_type		4907729						
ANR	4907798	Symbol	m_Info		4907729						
ANR	4907799	Symbol	m_LocalName		4907729						
ANR	4907800	Function	SubsystemInfo :: ~SubsystemInfo	336:0:8705:8953							
ANR	4907801	FunctionDef	SubsystemInfo :: ~SubsystemInfo ()		4907800	0					
ANR	4907802	CompoundStatement		337:0:8743:8953	4907800	0					
ANR	4907803	IfStatement	if ( m_Name )		4907800	0					
ANR	4907804	Condition	m_Name	338:6:8751:8756	4907800	0	True				
ANR	4907805	Identifier	m_Name		4907800	0					
ANR	4907806	CompoundStatement		2:15:16:16	4907800	1					
ANR	4907807	Statement	free	339:2:8764:8767	4907800	0	True				
ANR	4907808	Statement	(	339:6:8768:8768	4907800	1	True				
ANR	4907809	Statement	const_cast	339:8:8770:8779	4907800	2	True				
ANR	4907810	Statement	<	339:18:8780:8780	4907800	3	True				
ANR	4907811	Statement	char	339:19:8781:8784	4907800	4	True				
ANR	4907812	Statement	*	339:24:8786:8786	4907800	5	True				
ANR	4907813	Statement	>	339:25:8787:8787	4907800	6	True				
ANR	4907814	Statement	(	339:26:8788:8788	4907800	7	True				
ANR	4907815	Statement	m_Name	339:28:8790:8795	4907800	8	True				
ANR	4907816	Statement	)	339:35:8797:8797	4907800	9	True				
ANR	4907817	Statement	)	339:37:8799:8799	4907800	10	True				
ANR	4907818	ExpressionStatement		339:38:8800:8800	4907800	11	True				
ANR	4907819	ExpressionStatement	m_Name = NULL	340:2:8804:8817	4907800	12	True				
ANR	4907820	AssignmentExpression	m_Name = NULL		4907800	0		=			
ANR	4907821	Identifier	m_Name		4907800	0					
ANR	4907822	Identifier	NULL		4907800	1					
ANR	4907823	IfStatement	if ( m_TempName )		4907800	1					
ANR	4907824	Condition	m_TempName	342:6:8828:8837	4907800	0	True				
ANR	4907825	Identifier	m_TempName		4907800	0					
ANR	4907826	CompoundStatement		6:19:97:97	4907800	1					
ANR	4907827	Statement	free	343:2:8845:8848	4907800	0	True				
ANR	4907828	Statement	(	343:6:8849:8849	4907800	1	True				
ANR	4907829	Statement	const_cast	343:8:8851:8860	4907800	2	True				
ANR	4907830	Statement	<	343:18:8861:8861	4907800	3	True				
ANR	4907831	Statement	char	343:19:8862:8865	4907800	4	True				
ANR	4907832	Statement	*	343:24:8867:8867	4907800	5	True				
ANR	4907833	Statement	>	343:25:8868:8868	4907800	6	True				
ANR	4907834	Statement	(	343:26:8869:8869	4907800	7	True				
ANR	4907835	Statement	m_TempName	343:28:8871:8880	4907800	8	True				
ANR	4907836	Statement	)	343:39:8882:8882	4907800	9	True				
ANR	4907837	Statement	)	343:41:8884:8884	4907800	10	True				
ANR	4907838	ExpressionStatement		343:42:8885:8885	4907800	11	True				
ANR	4907839	ExpressionStatement	m_TempName = NULL	344:2:8889:8906	4907800	12	True				
ANR	4907840	AssignmentExpression	m_TempName = NULL		4907800	0		=			
ANR	4907841	Identifier	m_TempName		4907800	0					
ANR	4907842	Identifier	NULL		4907800	1					
ANR	4907843	Statement	delete	346:1:8912:8917	4907800	2	True				
ANR	4907844	ExpressionStatement	m_InfoTable	346:8:8919:8930	4907800	3	True				
ANR	4907845	Identifier	m_InfoTable		4907800	0					
ANR	4907846	ExpressionStatement	m_InfoTable = NULL	347:1:8933:8951	4907800	4	True				
ANR	4907847	AssignmentExpression	m_InfoTable = NULL		4907800	0		=			
ANR	4907848	Identifier	m_InfoTable		4907800	0					
ANR	4907849	Identifier	NULL		4907800	1					
ANR	4907850	Identifier	SubsystemInfo :: ~SubsystemInfo		4907800	1					
ANR	4907851	ParameterList			4907800	2					
ANR	4907852	CFGEntryNode	ENTRY		4907800		True				
ANR	4907853	CFGExitNode	EXIT		4907800		True				
ANR	4907854	Symbol	m_TempName		4907800						
ANR	4907855	Symbol	m_Name		4907800						
ANR	4907856	Symbol	NULL		4907800						
ANR	4907857	Symbol	m_InfoTable		4907800						
ANR	4907858	Function	SubsystemInfo :: nameMatch	350:0:8956:9059							
ANR	4907859	FunctionDef	SubsystemInfo :: nameMatch (const char * _name)		4907858	0					
ANR	4907860	CompoundStatement		352:0:9013:9059	4907858	0					
ANR	4907861	ReturnStatement	"return ( strcasecmp ( _name , m_Name ) == 0 ) ;"	353:1:9016:9057	4907858	0	True				
ANR	4907862	EqualityExpression	"strcasecmp ( _name , m_Name ) == 0"		4907858	0		==			
ANR	4907863	CallExpression	"strcasecmp ( _name , m_Name )"		4907858	0					
ANR	4907864	Callee	strcasecmp		4907858	0					
ANR	4907865	Identifier	strcasecmp		4907858	0					
ANR	4907866	ArgumentList	_name		4907858	1					
ANR	4907867	Argument	_name		4907858	0					
ANR	4907868	Identifier	_name		4907858	0					
ANR	4907869	Argument	m_Name		4907858	1					
ANR	4907870	Identifier	m_Name		4907858	0					
ANR	4907871	PrimaryExpression	0		4907858	1					
ANR	4907872	ReturnType	bool		4907858	1					
ANR	4907873	Identifier	SubsystemInfo :: nameMatch		4907858	2					
ANR	4907874	ParameterList	const char * _name		4907858	3					
ANR	4907875	Parameter	const char * _name	351:26:8987:9003	4907858	0	True				
ANR	4907876	ParameterType	const char *		4907858	0					
ANR	4907877	Identifier	_name		4907858	1					
ANR	4907878	CFGEntryNode	ENTRY		4907858		True				
ANR	4907879	CFGExitNode	EXIT		4907858		True				
ANR	4907880	Symbol	m_Name		4907858						
ANR	4907881	Symbol	_name		4907858						
ANR	4907882	Symbol	strcasecmp		4907858						
ANR	4907883	Function	SubsystemInfo :: setName	356:0:9062:9399							
ANR	4907884	FunctionDef	SubsystemInfo :: setName (const char * _name)		4907883	0					
ANR	4907885	CompoundStatement		358:0:9119:9399	4907883	0					
ANR	4907886	IfStatement	if ( m_Name != NULL )		4907883	0					
ANR	4907887	Condition	m_Name != NULL	359:6:9127:9140	4907883	0	True				
ANR	4907888	EqualityExpression	m_Name != NULL		4907883	0		!=			
ANR	4907889	Identifier	m_Name		4907883	0					
ANR	4907890	Identifier	NULL		4907883	1					
ANR	4907891	CompoundStatement		2:23:24:24	4907883	1					
ANR	4907892	Statement	free	360:2:9148:9151	4907883	0	True				
ANR	4907893	Statement	(	360:6:9152:9152	4907883	1	True				
ANR	4907894	Statement	const_cast	360:8:9154:9163	4907883	2	True				
ANR	4907895	Statement	<	360:18:9164:9164	4907883	3	True				
ANR	4907896	Statement	char	360:19:9165:9168	4907883	4	True				
ANR	4907897	Statement	*	360:24:9170:9170	4907883	5	True				
ANR	4907898	Statement	>	360:25:9171:9171	4907883	6	True				
ANR	4907899	Statement	(	360:26:9172:9172	4907883	7	True				
ANR	4907900	Statement	m_Name	360:28:9174:9179	4907883	8	True				
ANR	4907901	Statement	)	360:35:9181:9181	4907883	9	True				
ANR	4907902	Statement	)	360:37:9183:9183	4907883	10	True				
ANR	4907903	ExpressionStatement		360:38:9184:9184	4907883	11	True				
ANR	4907904	ExpressionStatement	m_Name = NULL	361:2:9188:9201	4907883	12	True				
ANR	4907905	AssignmentExpression	m_Name = NULL		4907883	0		=			
ANR	4907906	Identifier	m_Name		4907883	0					
ANR	4907907	Identifier	NULL		4907883	1					
ANR	4907908	IfStatement	if ( _name != NULL )		4907883	1					
ANR	4907909	Condition	_name != NULL	363:6:9212:9224	4907883	0	True				
ANR	4907910	EqualityExpression	_name != NULL		4907883	0		!=			
ANR	4907911	Identifier	_name		4907883	0					
ANR	4907912	Identifier	NULL		4907883	1					
ANR	4907913	CompoundStatement		6:22:108:108	4907883	1					
ANR	4907914	ExpressionStatement	m_Name = strdup ( _name )	364:2:9232:9254	4907883	0	True				
ANR	4907915	AssignmentExpression	m_Name = strdup ( _name )		4907883	0		=			
ANR	4907916	Identifier	m_Name		4907883	0					
ANR	4907917	CallExpression	strdup ( _name )		4907883	1					
ANR	4907918	Callee	strdup		4907883	0					
ANR	4907919	Identifier	strdup		4907883	0					
ANR	4907920	ArgumentList	_name		4907883	1					
ANR	4907921	Argument	_name		4907883	0					
ANR	4907922	Identifier	_name		4907883	0					
ANR	4907923	ExpressionStatement	m_NameValid = true	365:2:9258:9277	4907883	1	True				
ANR	4907924	AssignmentExpression	m_NameValid = true		4907883	0		=			
ANR	4907925	Identifier	m_NameValid		4907883	0					
ANR	4907926	Identifier	true		4907883	1					
ANR	4907927	ElseStatement	else		4907883	0					
ANR	4907928	CompoundStatement		10:6:168:168	4907883	0					
ANR	4907929	ExpressionStatement	"m_Name = strdup ( ""UNKNOWN"" )"	368:2:9292:9318	4907883	0	True				
ANR	4907930	AssignmentExpression	"m_Name = strdup ( ""UNKNOWN"" )"		4907883	0		=			
ANR	4907931	Identifier	m_Name		4907883	0					
ANR	4907932	CallExpression	"strdup ( ""UNKNOWN"" )"		4907883	1					
ANR	4907933	Callee	strdup		4907883	0					
ANR	4907934	Identifier	strdup		4907883	0					
ANR	4907935	ArgumentList	"""UNKNOWN"""		4907883	1					
ANR	4907936	Argument	"""UNKNOWN"""		4907883	0					
ANR	4907937	PrimaryExpression	"""UNKNOWN"""		4907883	0					
ANR	4907938	ExpressionStatement	m_NameValid = false	369:2:9359:9378	4907883	1	True				
ANR	4907939	AssignmentExpression	m_NameValid = false		4907883	0		=			
ANR	4907940	Identifier	m_NameValid		4907883	0					
ANR	4907941	Identifier	false		4907883	1					
ANR	4907942	ReturnStatement	return m_Name ;	371:1:9384:9397	4907883	2	True				
ANR	4907943	Identifier	m_Name		4907883	0					
ANR	4907944	ReturnType	const char *		4907883	1					
ANR	4907945	Identifier	SubsystemInfo :: setName		4907883	2					
ANR	4907946	ParameterList	const char * _name		4907883	3					
ANR	4907947	Parameter	const char * _name	357:24:9099:9115	4907883	0	True				
ANR	4907948	ParameterType	const char *		4907883	0					
ANR	4907949	Identifier	_name		4907883	1					
ANR	4907950	CFGEntryNode	ENTRY		4907883		True				
ANR	4907951	CFGExitNode	EXIT		4907883		True				
ANR	4907952	Symbol	m_Name		4907883						
ANR	4907953	Symbol	NULL		4907883						
ANR	4907954	Symbol	_name		4907883						
ANR	4907955	Symbol	m_NameValid		4907883						
ANR	4907956	Symbol	true		4907883						
ANR	4907957	Symbol	false		4907883						
ANR	4907958	Symbol	strdup		4907883						
ANR	4907959	Function	SubsystemInfo :: setTempName	375:0:9424:9577							
ANR	4907960	FunctionDef	SubsystemInfo :: setTempName (const char * _name)		4907959	0					
ANR	4907961	CompoundStatement		377:0:9485:9577	4907959	0					
ANR	4907962	ExpressionStatement	resetTempName ( )	378:1:9488:9504	4907959	0	True				
ANR	4907963	CallExpression	resetTempName ( )		4907959	0					
ANR	4907964	Callee	resetTempName		4907959	0					
ANR	4907965	Identifier	resetTempName		4907959	0					
ANR	4907966	ArgumentList			4907959	1					
ANR	4907967	IfStatement	if ( _name )		4907959	1					
ANR	4907968	Condition	_name	379:6:9512:9516	4907959	0	True				
ANR	4907969	Identifier	_name		4907959	0					
ANR	4907970	CompoundStatement		3:14:34:34	4907959	1					
ANR	4907971	ExpressionStatement	m_TempName = strdup ( _name )	380:2:9524:9552	4907959	0	True				
ANR	4907972	AssignmentExpression	m_TempName = strdup ( _name )		4907959	0		=			
ANR	4907973	Identifier	m_TempName		4907959	0					
ANR	4907974	CallExpression	strdup ( _name )		4907959	1					
ANR	4907975	Callee	strdup		4907959	0					
ANR	4907976	Identifier	strdup		4907959	0					
ANR	4907977	ArgumentList	_name		4907959	1					
ANR	4907978	Argument	_name		4907959	0					
ANR	4907979	Identifier	_name		4907959	0					
ANR	4907980	ReturnStatement	return m_TempName ;	382:1:9558:9575	4907959	2	True				
ANR	4907981	Identifier	m_TempName		4907959	0					
ANR	4907982	ReturnType	const char *		4907959	1					
ANR	4907983	Identifier	SubsystemInfo :: setTempName		4907959	2					
ANR	4907984	ParameterList	const char * _name		4907959	3					
ANR	4907985	Parameter	const char * _name	376:28:9465:9481	4907959	0	True				
ANR	4907986	ParameterType	const char *		4907959	0					
ANR	4907987	Identifier	_name		4907959	1					
ANR	4907988	CFGEntryNode	ENTRY		4907959		True				
ANR	4907989	CFGExitNode	EXIT		4907959		True				
ANR	4907990	Symbol	m_TempName		4907959						
ANR	4907991	Symbol	_name		4907959						
ANR	4907992	Symbol	strdup		4907959						
ANR	4907993	Function	SubsystemInfo :: resetTempName	385:0:9580:9710							
ANR	4907994	FunctionDef	SubsystemInfo :: resetTempName ()		4907993	0					
ANR	4907995	CompoundStatement		387:0:9622:9710	4907993	0					
ANR	4907996	IfStatement	if ( m_TempName )		4907993	0					
ANR	4907997	Condition	m_TempName	388:6:9630:9639	4907993	0	True				
ANR	4907998	Identifier	m_TempName		4907993	0					
ANR	4907999	CompoundStatement		2:19:20:20	4907993	1					
ANR	4908000	Statement	free	389:2:9647:9650	4907993	0	True				
ANR	4908001	Statement	(	389:6:9651:9651	4907993	1	True				
ANR	4908002	Statement	const_cast	389:8:9653:9662	4907993	2	True				
ANR	4908003	Statement	<	389:18:9663:9663	4907993	3	True				
ANR	4908004	Statement	char	389:19:9664:9667	4907993	4	True				
ANR	4908005	Statement	*	389:23:9668:9668	4907993	5	True				
ANR	4908006	Statement	>	389:24:9669:9669	4907993	6	True				
ANR	4908007	Statement	(	389:25:9670:9670	4907993	7	True				
ANR	4908008	Statement	m_TempName	389:26:9671:9680	4907993	8	True				
ANR	4908009	Statement	)	389:36:9681:9681	4907993	9	True				
ANR	4908010	Statement	)	389:38:9683:9683	4907993	10	True				
ANR	4908011	ExpressionStatement		389:39:9684:9684	4907993	11	True				
ANR	4908012	ExpressionStatement	m_TempName = NULL	390:2:9688:9705	4907993	12	True				
ANR	4908013	AssignmentExpression	m_TempName = NULL		4907993	0		=			
ANR	4908014	Identifier	m_TempName		4907993	0					
ANR	4908015	Identifier	NULL		4907993	1					
ANR	4908016	ReturnType	void		4907993	1					
ANR	4908017	Identifier	SubsystemInfo :: resetTempName		4907993	2					
ANR	4908018	ParameterList			4907993	3					
ANR	4908019	CFGEntryNode	ENTRY		4907993		True				
ANR	4908020	CFGExitNode	EXIT		4907993		True				
ANR	4908021	Symbol	m_TempName		4907993						
ANR	4908022	Symbol	NULL		4907993						
ANR	4908023	Function	SubsystemInfo :: setTypeFromName	395:0:9761:10183							
ANR	4908024	FunctionDef	SubsystemInfo :: setTypeFromName (const char * _type_name)		4908023	0					
ANR	4908025	CompoundStatement		397:0:9832:10183	4908023	0					
ANR	4908026	IfStatement	if ( NULL == _type_name )		4908023	0					
ANR	4908027	Condition	NULL == _type_name	398:6:9840:9857	4908023	0	True				
ANR	4908028	EqualityExpression	NULL == _type_name		4908023	0		==			
ANR	4908029	Identifier	NULL		4908023	0					
ANR	4908030	Identifier	_type_name		4908023	1					
ANR	4908031	CompoundStatement		2:27:28:28	4908023	1					
ANR	4908032	ExpressionStatement	_type_name = m_Name	399:2:9865:9884	4908023	0	True				
ANR	4908033	AssignmentExpression	_type_name = m_Name		4908023	0		=			
ANR	4908034	Identifier	_type_name		4908023	0					
ANR	4908035	Identifier	m_Name		4908023	1					
ANR	4908036	IfStatement	if ( NULL == _type_name )		4908023	1					
ANR	4908037	Condition	NULL == _type_name	401:6:9895:9912	4908023	0	True				
ANR	4908038	EqualityExpression	NULL == _type_name		4908023	0		==			
ANR	4908039	Identifier	NULL		4908023	0					
ANR	4908040	Identifier	_type_name		4908023	1					
ANR	4908041	CompoundStatement		5:27:83:83	4908023	1					
ANR	4908042	ReturnStatement	return setType ( SUBSYSTEM_TYPE_DAEMON ) ;	402:2:9920:9959	4908023	0	True				
ANR	4908043	CallExpression	setType ( SUBSYSTEM_TYPE_DAEMON )		4908023	0					
ANR	4908044	Callee	setType		4908023	0					
ANR	4908045	Identifier	setType		4908023	0					
ANR	4908046	ArgumentList	SUBSYSTEM_TYPE_DAEMON		4908023	1					
ANR	4908047	Argument	SUBSYSTEM_TYPE_DAEMON		4908023	0					
ANR	4908048	Identifier	SUBSYSTEM_TYPE_DAEMON		4908023	0					
ANR	4908049	IdentifierDeclStatement	const SubsystemInfoLookup * match = m_InfoTable -> lookup ( _type_name ) ;	406:1:10001:10069	4908023	2	True				
ANR	4908050	IdentifierDecl	* match = m_InfoTable -> lookup ( _type_name )		4908023	0					
ANR	4908051	IdentifierDeclType	const SubsystemInfoLookup *		4908023	0					
ANR	4908052	Identifier	match		4908023	1					
ANR	4908053	AssignmentExpression	* match = m_InfoTable -> lookup ( _type_name )		4908023	2		=			
ANR	4908054	Identifier	match		4908023	0					
ANR	4908055	CallExpression	m_InfoTable -> lookup ( _type_name )		4908023	1					
ANR	4908056	Callee	m_InfoTable -> lookup		4908023	0					
ANR	4908057	PtrMemberAccess	m_InfoTable -> lookup		4908023	0					
ANR	4908058	Identifier	m_InfoTable		4908023	0					
ANR	4908059	Identifier	lookup		4908023	1					
ANR	4908060	ArgumentList	_type_name		4908023	1					
ANR	4908061	Argument	_type_name		4908023	0					
ANR	4908062	Identifier	_type_name		4908023	0					
ANR	4908063	IfStatement	if ( match )		4908023	3					
ANR	4908064	Condition	match	407:6:10077:10081	4908023	0	True				
ANR	4908065	Identifier	match		4908023	0					
ANR	4908066	CompoundStatement		11:14:252:252	4908023	1					
ANR	4908067	ReturnStatement	"return setType ( match , _type_name ) ;"	408:2:10089:10124	4908023	0	True				
ANR	4908068	CallExpression	"setType ( match , _type_name )"		4908023	0					
ANR	4908069	Callee	setType		4908023	0					
ANR	4908070	Identifier	setType		4908023	0					
ANR	4908071	ArgumentList	match		4908023	1					
ANR	4908072	Argument	match		4908023	0					
ANR	4908073	Identifier	match		4908023	0					
ANR	4908074	Argument	_type_name		4908023	1					
ANR	4908075	Identifier	_type_name		4908023	0					
ANR	4908076	ReturnStatement	"return setType ( SUBSYSTEM_TYPE_DAEMON , _type_name ) ;"	410:1:10130:10181	4908023	4	True				
ANR	4908077	CallExpression	"setType ( SUBSYSTEM_TYPE_DAEMON , _type_name )"		4908023	0					
ANR	4908078	Callee	setType		4908023	0					
ANR	4908079	Identifier	setType		4908023	0					
ANR	4908080	ArgumentList	SUBSYSTEM_TYPE_DAEMON		4908023	1					
ANR	4908081	Argument	SUBSYSTEM_TYPE_DAEMON		4908023	0					
ANR	4908082	Identifier	SUBSYSTEM_TYPE_DAEMON		4908023	0					
ANR	4908083	Argument	_type_name		4908023	1					
ANR	4908084	Identifier	_type_name		4908023	0					
ANR	4908085	ReturnType	SubsystemType		4908023	1					
ANR	4908086	Identifier	SubsystemInfo :: setTypeFromName		4908023	2					
ANR	4908087	ParameterList	const char * _type_name		4908023	3					
ANR	4908088	Parameter	const char * _type_name	396:32:9807:9828	4908023	0	True				
ANR	4908089	ParameterType	const char *		4908023	0					
ANR	4908090	Identifier	_type_name		4908023	1					
ANR	4908091	CFGEntryNode	ENTRY		4908023		True				
ANR	4908092	CFGExitNode	EXIT		4908023		True				
ANR	4908093	Symbol	_type_name		4908023						
ANR	4908094	Symbol	m_Name		4908023						
ANR	4908095	Symbol	NULL		4908023						
ANR	4908096	Symbol	* m_InfoTable		4908023						
ANR	4908097	Symbol	m_InfoTable		4908023						
ANR	4908098	Symbol	m_InfoTable -> lookup		4908023						
ANR	4908099	Symbol	match		4908023						
ANR	4908100	Symbol	setType		4908023						
ANR	4908101	Symbol	SUBSYSTEM_TYPE_DAEMON		4908023						
ANR	4908102	Function	SubsystemInfo :: setType	414:0:10212:10306							
ANR	4908103	FunctionDef	SubsystemInfo :: setType (SubsystemType _type)		4908102	0					
ANR	4908104	CompoundStatement		416:0:10272:10306	4908102	0					
ANR	4908105	ReturnStatement	"return setType ( _type , NULL ) ;"	417:1:10275:10304	4908102	0	True				
ANR	4908106	CallExpression	"setType ( _type , NULL )"		4908102	0					
ANR	4908107	Callee	setType		4908102	0					
ANR	4908108	Identifier	setType		4908102	0					
ANR	4908109	ArgumentList	_type		4908102	1					
ANR	4908110	Argument	_type		4908102	0					
ANR	4908111	Identifier	_type		4908102	0					
ANR	4908112	Argument	NULL		4908102	1					
ANR	4908113	Identifier	NULL		4908102	0					
ANR	4908114	ReturnType	SubsystemType		4908102	1					
ANR	4908115	Identifier	SubsystemInfo :: setType		4908102	2					
ANR	4908116	ParameterList	SubsystemType _type		4908102	3					
ANR	4908117	Parameter	SubsystemType _type	415:24:10250:10268	4908102	0	True				
ANR	4908118	ParameterType	SubsystemType		4908102	0					
ANR	4908119	Identifier	_type		4908102	1					
ANR	4908120	CFGEntryNode	ENTRY		4908102		True				
ANR	4908121	CFGExitNode	EXIT		4908102		True				
ANR	4908122	Symbol	NULL		4908102						
ANR	4908123	Symbol	_type		4908102						
ANR	4908124	Symbol	setType		4908102						
ANR	4908125	Function	SubsystemInfo :: setType	421:0:10337:10482							
ANR	4908126	FunctionDef	"SubsystemInfo :: setType (SubsystemType _type , const char * _type_name)"		4908125	0					
ANR	4908127	CompoundStatement		423:0:10421:10482	4908125	0					
ANR	4908128	ReturnStatement	"return setType ( m_InfoTable -> lookup ( _type ) , _type_name ) ;"	424:1:10424:10480	4908125	0	True				
ANR	4908129	CallExpression	"setType ( m_InfoTable -> lookup ( _type ) , _type_name )"		4908125	0					
ANR	4908130	Callee	setType		4908125	0					
ANR	4908131	Identifier	setType		4908125	0					
ANR	4908132	ArgumentList	m_InfoTable -> lookup ( _type )		4908125	1					
ANR	4908133	Argument	m_InfoTable -> lookup ( _type )		4908125	0					
ANR	4908134	CallExpression	m_InfoTable -> lookup ( _type )		4908125	0					
ANR	4908135	Callee	m_InfoTable -> lookup		4908125	0					
ANR	4908136	PtrMemberAccess	m_InfoTable -> lookup		4908125	0					
ANR	4908137	Identifier	m_InfoTable		4908125	0					
ANR	4908138	Identifier	lookup		4908125	1					
ANR	4908139	ArgumentList	_type		4908125	1					
ANR	4908140	Argument	_type		4908125	0					
ANR	4908141	Identifier	_type		4908125	0					
ANR	4908142	Argument	_type_name		4908125	1					
ANR	4908143	Identifier	_type_name		4908125	0					
ANR	4908144	ReturnType	SubsystemType		4908125	1					
ANR	4908145	Identifier	SubsystemInfo :: setType		4908125	2					
ANR	4908146	ParameterList	"SubsystemType _type , const char * _type_name"		4908125	3					
ANR	4908147	Parameter	SubsystemType _type	422:24:10375:10393	4908125	0	True				
ANR	4908148	ParameterType	SubsystemType		4908125	0					
ANR	4908149	Identifier	_type		4908125	1					
ANR	4908150	Parameter	const char * _type_name	422:45:10396:10417	4908125	1	True				
ANR	4908151	ParameterType	const char *		4908125	0					
ANR	4908152	Identifier	_type_name		4908125	1					
ANR	4908153	CFGEntryNode	ENTRY		4908125		True				
ANR	4908154	CFGExitNode	EXIT		4908125		True				
ANR	4908155	Symbol	_type_name		4908125						
ANR	4908156	Symbol	* m_InfoTable		4908125						
ANR	4908157	Symbol	m_InfoTable		4908125						
ANR	4908158	Symbol	m_InfoTable -> lookup		4908125						
ANR	4908159	Symbol	_type		4908125						
ANR	4908160	Symbol	setType		4908125						
ANR	4908161	Function	SubsystemInfo :: setType	428:0:10513:10799							
ANR	4908162	FunctionDef	"SubsystemInfo :: setType (const SubsystemInfoLookup * info , const char * type_name)"		4908161	0					
ANR	4908163	CompoundStatement		431:0:10614:10799	4908161	0					
ANR	4908164	ExpressionStatement	m_Type = info -> getType ( )	432:1:10617:10641	4908161	0	True				
ANR	4908165	AssignmentExpression	m_Type = info -> getType ( )		4908161	0		=			
ANR	4908166	Identifier	m_Type		4908161	0					
ANR	4908167	CallExpression	info -> getType ( )		4908161	1					
ANR	4908168	Callee	info -> getType		4908161	0					
ANR	4908169	PtrMemberAccess	info -> getType		4908161	0					
ANR	4908170	Identifier	info		4908161	0					
ANR	4908171	Identifier	getType		4908161	1					
ANR	4908172	ArgumentList			4908161	1					
ANR	4908173	ExpressionStatement	setClass ( info )	433:1:10644:10660	4908161	1	True				
ANR	4908174	CallExpression	setClass ( info )		4908161	0					
ANR	4908175	Callee	setClass		4908161	0					
ANR	4908176	Identifier	setClass		4908161	0					
ANR	4908177	ArgumentList	info		4908161	1					
ANR	4908178	Argument	info		4908161	0					
ANR	4908179	Identifier	info		4908161	0					
ANR	4908180	ExpressionStatement	m_Info = info	434:1:10663:10676	4908161	2	True				
ANR	4908181	AssignmentExpression	m_Info = info		4908161	0		=			
ANR	4908182	Identifier	m_Info		4908161	0					
ANR	4908183	Identifier	info		4908161	1					
ANR	4908184	IfStatement	if ( type_name != NULL )		4908161	3					
ANR	4908185	Condition	type_name != NULL	435:6:10684:10700	4908161	0	True				
ANR	4908186	EqualityExpression	type_name != NULL		4908161	0		!=			
ANR	4908187	Identifier	type_name		4908161	0					
ANR	4908188	Identifier	NULL		4908161	1					
ANR	4908189	CompoundStatement		5:26:89:89	4908161	1					
ANR	4908190	ExpressionStatement	m_TypeName = type_name	436:2:10708:10730	4908161	0	True				
ANR	4908191	AssignmentExpression	m_TypeName = type_name		4908161	0		=			
ANR	4908192	Identifier	m_TypeName		4908161	0					
ANR	4908193	Identifier	type_name		4908161	1					
ANR	4908194	ElseStatement	else		4908161	0					
ANR	4908195	CompoundStatement		8:6:126:126	4908161	0					
ANR	4908196	ExpressionStatement	m_TypeName = info -> getTypeName ( )	439:2:10745:10777	4908161	0	True				
ANR	4908197	AssignmentExpression	m_TypeName = info -> getTypeName ( )		4908161	0		=			
ANR	4908198	Identifier	m_TypeName		4908161	0					
ANR	4908199	CallExpression	info -> getTypeName ( )		4908161	1					
ANR	4908200	Callee	info -> getTypeName		4908161	0					
ANR	4908201	PtrMemberAccess	info -> getTypeName		4908161	0					
ANR	4908202	Identifier	info		4908161	0					
ANR	4908203	Identifier	getTypeName		4908161	1					
ANR	4908204	ArgumentList			4908161	1					
ANR	4908205	ReturnStatement	return m_Type ;	442:1:10784:10797	4908161	4	True				
ANR	4908206	Identifier	m_Type		4908161	0					
ANR	4908207	ReturnType	SubsystemType		4908161	1					
ANR	4908208	Identifier	SubsystemInfo :: setType		4908161	2					
ANR	4908209	ParameterList	"const SubsystemInfoLookup * info , const char * type_name"		4908161	3					
ANR	4908210	Parameter	const SubsystemInfoLookup * info	429:24:10551:10581	4908161	0	True				
ANR	4908211	ParameterType	const SubsystemInfoLookup *		4908161	0					
ANR	4908212	Identifier	info		4908161	1					
ANR	4908213	Parameter	const char * type_name	430:6:10590:10610	4908161	1	True				
ANR	4908214	ParameterType	const char *		4908161	0					
ANR	4908215	Identifier	type_name		4908161	1					
ANR	4908216	CFGEntryNode	ENTRY		4908161		True				
ANR	4908217	CFGExitNode	EXIT		4908161		True				
ANR	4908218	Symbol	type_name		4908161						
ANR	4908219	Symbol	NULL		4908161						
ANR	4908220	Symbol	m_TypeName		4908161						
ANR	4908221	Symbol	info -> getType		4908161						
ANR	4908222	Symbol	* info		4908161						
ANR	4908223	Symbol	m_Info		4908161						
ANR	4908224	Symbol	m_Type		4908161						
ANR	4908225	Symbol	info -> getTypeName		4908161						
ANR	4908226	Symbol	info		4908161						
ANR	4908227	Function	SubsystemInfo :: setClass	446:0:10831:11199							
ANR	4908228	FunctionDef	SubsystemInfo :: setClass (const SubsystemInfoLookup * info)		4908227	0					
ANR	4908229	CompoundStatement		448:0:10905:11199	4908227	0					
ANR	4908230	Statement	static	449:1:10908:10913	4908227	0	True				
ANR	4908231	IdentifierDeclStatement	"const char * _class_names [ ] = { ""None"" , ""DAEMON"" , ""CLIENT"" , ""JOB"" } ;"	449:8:10915:10990	4908227	1	True				
ANR	4908232	IdentifierDecl	"* _class_names [ ] = { ""None"" , ""DAEMON"" , ""CLIENT"" , ""JOB"" }"		4908227	0					
ANR	4908233	IdentifierDeclType	const char * [ ]		4908227	0					
ANR	4908234	Identifier	_class_names		4908227	1					
ANR	4908235	AssignmentExpression	"* _class_names [ ] = { ""None"" , ""DAEMON"" , ""CLIENT"" , ""JOB"" }"		4908227	2		=			
ANR	4908236	Identifier	_class_names		4908227	0					
ANR	4908237	InitializerList	"""None"""		4908227	1					
ANR	4908238	PrimaryExpression	"""None"""		4908227	0					
ANR	4908239	PrimaryExpression	"""DAEMON"""		4908227	1					
ANR	4908240	PrimaryExpression	"""CLIENT"""		4908227	2					
ANR	4908241	PrimaryExpression	"""JOB"""		4908227	3					
ANR	4908242	Statement	static	455:1:10993:10998	4908227	2	True				
ANR	4908243	IdentifierDeclStatement	int _num = ( sizeof ( _class_names ) / sizeof ( const char * ) ) ;	455:8:11000:11059	4908227	3	True				
ANR	4908244	IdentifierDecl	_num = ( sizeof ( _class_names ) / sizeof ( const char * ) )		4908227	0					
ANR	4908245	IdentifierDeclType	int		4908227	0					
ANR	4908246	Identifier	_num		4908227	1					
ANR	4908247	AssignmentExpression	_num = ( sizeof ( _class_names ) / sizeof ( const char * ) )		4908227	2		=			
ANR	4908248	Identifier	_num		4908227	0					
ANR	4908249	MultiplicativeExpression	sizeof ( _class_names ) / sizeof ( const char * )		4908227	1		/			
ANR	4908250	SizeofExpression	sizeof ( _class_names )		4908227	0					
ANR	4908251	Sizeof	sizeof		4908227	0					
ANR	4908252	SizeofOperand	_class_names		4908227	1					
ANR	4908253	SizeofExpression	sizeof ( const char * )		4908227	1					
ANR	4908254	Sizeof	sizeof		4908227	0					
ANR	4908255	SizeofOperand	const char *		4908227	1					
ANR	4908256	ExpressionStatement	m_Class = info -> getClass ( )	457:1:11063:11089	4908227	4	True				
ANR	4908257	AssignmentExpression	m_Class = info -> getClass ( )		4908227	0		=			
ANR	4908258	Identifier	m_Class		4908227	0					
ANR	4908259	CallExpression	info -> getClass ( )		4908227	1					
ANR	4908260	Callee	info -> getClass		4908227	0					
ANR	4908261	PtrMemberAccess	info -> getClass		4908227	0					
ANR	4908262	Identifier	info		4908227	0					
ANR	4908263	Identifier	getClass		4908227	1					
ANR	4908264	ArgumentList			4908227	1					
ANR	4908265	ExpressionStatement	ASSERT ( ( m_Class >= 0 ) && ( m_Class <= _num ) )	458:1:11092:11142	4908227	5	True				
ANR	4908266	CallExpression	ASSERT ( ( m_Class >= 0 ) && ( m_Class <= _num ) )		4908227	0					
ANR	4908267	Callee	ASSERT		4908227	0					
ANR	4908268	Identifier	ASSERT		4908227	0					
ANR	4908269	ArgumentList	( m_Class >= 0 ) && ( m_Class <= _num )		4908227	1					
ANR	4908270	Argument	( m_Class >= 0 ) && ( m_Class <= _num )		4908227	0					
ANR	4908271	AndExpression	( m_Class >= 0 ) && ( m_Class <= _num )		4908227	0		&&			
ANR	4908272	RelationalExpression	m_Class >= 0		4908227	0		>=			
ANR	4908273	Identifier	m_Class		4908227	0					
ANR	4908274	PrimaryExpression	0		4908227	1					
ANR	4908275	RelationalExpression	m_Class <= _num		4908227	1		<=			
ANR	4908276	Identifier	m_Class		4908227	0					
ANR	4908277	Identifier	_num		4908227	1					
ANR	4908278	ExpressionStatement	m_ClassName = _class_names [ m_Class ]	459:1:11145:11180	4908227	6	True				
ANR	4908279	AssignmentExpression	m_ClassName = _class_names [ m_Class ]		4908227	0		=			
ANR	4908280	Identifier	m_ClassName		4908227	0					
ANR	4908281	ArrayIndexing	_class_names [ m_Class ]		4908227	1					
ANR	4908282	Identifier	_class_names		4908227	0					
ANR	4908283	Identifier	m_Class		4908227	1					
ANR	4908284	ReturnStatement	return m_Class ;	460:1:11183:11197	4908227	7	True				
ANR	4908285	Identifier	m_Class		4908227	0					
ANR	4908286	ReturnType	SubsystemClass		4908227	1					
ANR	4908287	Identifier	SubsystemInfo :: setClass		4908227	2					
ANR	4908288	ParameterList	const SubsystemInfoLookup * info		4908227	3					
ANR	4908289	Parameter	const SubsystemInfoLookup * info	447:25:10871:10901	4908227	0	True				
ANR	4908290	ParameterType	const SubsystemInfoLookup *		4908227	0					
ANR	4908291	Identifier	info		4908227	1					
ANR	4908292	CFGEntryNode	ENTRY		4908227		True				
ANR	4908293	CFGExitNode	EXIT		4908227		True				
ANR	4908294	Symbol	m_Class		4908227						
ANR	4908295	Symbol	_class_names		4908227						
ANR	4908296	Symbol	info -> getClass		4908227						
ANR	4908297	Symbol	* m_Class		4908227						
ANR	4908298	Symbol	_num		4908227						
ANR	4908299	Symbol	* info		4908227						
ANR	4908300	Symbol	m_ClassName		4908227						
ANR	4908301	Symbol	info		4908227						
ANR	4908302	Symbol	* _class_names		4908227						
ANR	4908303	Function	SubsystemInfo :: getLocalName	464:0:11239:11390							
ANR	4908304	FunctionDef	SubsystemInfo :: getLocalName (const char * _default)		4908303	0					
ANR	4908305	CompoundStatement		466:0:11311:11390	4908303	0					
ANR	4908306	IfStatement	if ( m_LocalName )		4908303	0					
ANR	4908307	Condition	m_LocalName	467:6:11319:11329	4908303	0	True				
ANR	4908308	Identifier	m_LocalName		4908303	0					
ANR	4908309	CompoundStatement		2:20:21:21	4908303	1					
ANR	4908310	ReturnStatement	return m_LocalName ;	468:2:11337:11355	4908303	0	True				
ANR	4908311	Identifier	m_LocalName		4908303	0					
ANR	4908312	ElseStatement	else		4908303	0					
ANR	4908313	CompoundStatement		5:6:54:54	4908303	0					
ANR	4908314	ReturnStatement	return _default ;	471:2:11370:11385	4908303	0	True				
ANR	4908315	Identifier	_default		4908303	0					
ANR	4908316	ReturnType	const char *		4908303	1					
ANR	4908317	Identifier	SubsystemInfo :: getLocalName		4908303	2					
ANR	4908318	ParameterList	const char * _default		4908303	3					
ANR	4908319	Parameter	const char * _default	465:29:11281:11301	4908303	0	True				
ANR	4908320	ParameterType	const char *		4908303	0					
ANR	4908321	Identifier	_default		4908303	1					
ANR	4908322	CFGEntryNode	ENTRY		4908303		True				
ANR	4908323	CFGExitNode	EXIT		4908303		True				
ANR	4908324	Symbol	_default		4908303						
ANR	4908325	Symbol	m_LocalName		4908303						
ANR	4908326	Function	SubsystemInfo :: setLocalName	474:0:11392:11600							
ANR	4908327	FunctionDef	SubsystemInfo :: setLocalName (const char * _name)		4908326	0					
ANR	4908328	CompoundStatement		476:0:11455:11600	4908326	0					
ANR	4908329	IfStatement	if ( m_LocalName )		4908326	0					
ANR	4908330	Condition	m_LocalName	477:6:11463:11473	4908326	0	True				
ANR	4908331	Identifier	m_LocalName		4908326	0					
ANR	4908332	CompoundStatement		2:20:21:21	4908326	1					
ANR	4908333	Statement	free	478:2:11481:11484	4908326	0	True				
ANR	4908334	Statement	(	478:6:11485:11485	4908326	1	True				
ANR	4908335	Statement	const_cast	478:8:11487:11496	4908326	2	True				
ANR	4908336	Statement	<	478:18:11497:11497	4908326	3	True				
ANR	4908337	Statement	char	478:19:11498:11501	4908326	4	True				
ANR	4908338	Statement	*	478:24:11503:11503	4908326	5	True				
ANR	4908339	Statement	>	478:25:11504:11504	4908326	6	True				
ANR	4908340	Statement	(	478:26:11505:11505	4908326	7	True				
ANR	4908341	Statement	m_LocalName	478:28:11507:11517	4908326	8	True				
ANR	4908342	Statement	)	478:40:11519:11519	4908326	9	True				
ANR	4908343	Statement	)	478:42:11521:11521	4908326	10	True				
ANR	4908344	ExpressionStatement		478:43:11522:11522	4908326	11	True				
ANR	4908345	ExpressionStatement	m_LocalName = NULL	479:2:11526:11544	4908326	12	True				
ANR	4908346	AssignmentExpression	m_LocalName = NULL		4908326	0		=			
ANR	4908347	Identifier	m_LocalName		4908326	0					
ANR	4908348	Identifier	NULL		4908326	1					
ANR	4908349	ExpressionStatement	m_LocalName = strdup ( _name )	481:1:11550:11577	4908326	1	True				
ANR	4908350	AssignmentExpression	m_LocalName = strdup ( _name )		4908326	0		=			
ANR	4908351	Identifier	m_LocalName		4908326	0					
ANR	4908352	CallExpression	strdup ( _name )		4908326	1					
ANR	4908353	Callee	strdup		4908326	0					
ANR	4908354	Identifier	strdup		4908326	0					
ANR	4908355	ArgumentList	_name		4908326	1					
ANR	4908356	Argument	_name		4908326	0					
ANR	4908357	Identifier	_name		4908326	0					
ANR	4908358	ReturnStatement	return m_LocalName ;	482:1:11580:11598	4908326	2	True				
ANR	4908359	Identifier	m_LocalName		4908326	0					
ANR	4908360	ReturnType	const char *		4908326	1					
ANR	4908361	Identifier	SubsystemInfo :: setLocalName		4908326	2					
ANR	4908362	ParameterList	const char * _name		4908326	3					
ANR	4908363	Parameter	const char * _name	475:29:11434:11451	4908326	0	True				
ANR	4908364	ParameterType	const char *		4908326	0					
ANR	4908365	Identifier	_name		4908326	1					
ANR	4908366	CFGEntryNode	ENTRY		4908326		True				
ANR	4908367	CFGExitNode	EXIT		4908326		True				
ANR	4908368	Symbol	NULL		4908326						
ANR	4908369	Symbol	_name		4908326						
ANR	4908370	Symbol	strdup		4908326						
ANR	4908371	Symbol	m_LocalName		4908326						
ANR	4908372	Function	SubsystemInfo :: dprintf	486:0:11638:11729							
ANR	4908373	FunctionDef	SubsystemInfo :: dprintf (int level)		4908372	0					
ANR	4908374	CompoundStatement		488:0:11685:11729	4908372	0					
ANR	4908375	Statement	::	489:1:11688:11689	4908372	0	True				
ANR	4908376	ExpressionStatement	"dprintf ( level , ""%s\\n"" , getString ( ) )"	489:3:11690:11727	4908372	1	True				
ANR	4908377	CallExpression	"dprintf ( level , ""%s\\n"" , getString ( ) )"		4908372	0					
ANR	4908378	Callee	dprintf		4908372	0					
ANR	4908379	Identifier	dprintf		4908372	0					
ANR	4908380	ArgumentList	level		4908372	1					
ANR	4908381	Argument	level		4908372	0					
ANR	4908382	Identifier	level		4908372	0					
ANR	4908383	Argument	"""%s\\n"""		4908372	1					
ANR	4908384	PrimaryExpression	"""%s\\n"""		4908372	0					
ANR	4908385	Argument	getString ( )		4908372	2					
ANR	4908386	CallExpression	getString ( )		4908372	0					
ANR	4908387	Callee	getString		4908372	0					
ANR	4908388	Identifier	getString		4908372	0					
ANR	4908389	ArgumentList			4908372	1					
ANR	4908390	ReturnType	void		4908372	1					
ANR	4908391	Identifier	SubsystemInfo :: dprintf		4908372	2					
ANR	4908392	ParameterList	int level		4908372	3					
ANR	4908393	Parameter	int level	487:24:11667:11675	4908372	0	True				
ANR	4908394	ParameterType	int		4908372	0					
ANR	4908395	Identifier	level		4908372	1					
ANR	4908396	CFGEntryNode	ENTRY		4908372		True				
ANR	4908397	CFGExitNode	EXIT		4908372		True				
ANR	4908398	Symbol	level		4908372						
ANR	4908399	Symbol	getString		4908372						
ANR	4908400	Function	SubsystemInfo :: printf	491:0:11731:11808							
ANR	4908401	FunctionDef	SubsystemInfo :: printf ()		4908400	0					
ANR	4908402	CompoundStatement		493:0:11772:11808	4908400	0					
ANR	4908403	Statement	::	494:1:11775:11776	4908400	0	True				
ANR	4908404	ExpressionStatement	"printf ( ""%s\\n"" , getString ( ) )"	494:3:11777:11806	4908400	1	True				
ANR	4908405	CallExpression	"printf ( ""%s\\n"" , getString ( ) )"		4908400	0					
ANR	4908406	Callee	printf		4908400	0					
ANR	4908407	Identifier	printf		4908400	0					
ANR	4908408	ArgumentList	"""%s\\n"""		4908400	1					
ANR	4908409	Argument	"""%s\\n"""		4908400	0					
ANR	4908410	PrimaryExpression	"""%s\\n"""		4908400	0					
ANR	4908411	Argument	getString ( )		4908400	1					
ANR	4908412	CallExpression	getString ( )		4908400	0					
ANR	4908413	Callee	getString		4908400	0					
ANR	4908414	Identifier	getString		4908400	0					
ANR	4908415	ArgumentList			4908400	1					
ANR	4908416	ReturnType	void		4908400	1					
ANR	4908417	Identifier	SubsystemInfo :: printf		4908400	2					
ANR	4908418	ParameterList			4908400	3					
ANR	4908419	CFGEntryNode	ENTRY		4908400		True				
ANR	4908420	CFGExitNode	EXIT		4908400		True				
ANR	4908421	Symbol	getString		4908400						
ANR	4908422	Function	SubsystemInfo :: getString	496:0:11810:12136							
ANR	4908423	FunctionDef	SubsystemInfo :: getString ()		4908422	0					
ANR	4908424	CompoundStatement		498:0:11862:12136	4908422	0					
ANR	4908425	Statement	static	499:1:11865:11870	4908422	0	True				
ANR	4908426	IdentifierDeclStatement	char buf [ 128 ] ;	499:8:11872:11886	4908422	1	True				
ANR	4908427	IdentifierDecl	buf [ 128 ]		4908422	0					
ANR	4908428	IdentifierDeclType	char [ 128 ]		4908422	0					
ANR	4908429	Identifier	buf		4908422	1					
ANR	4908430	PrimaryExpression	128		4908422	2					
ANR	4908431	IdentifierDeclStatement	"const char * type_name = ""UNKNOWN"" ;"	500:1:11889:11922	4908422	2	True				
ANR	4908432	IdentifierDecl	"* type_name = ""UNKNOWN"""		4908422	0					
ANR	4908433	IdentifierDeclType	const char *		4908422	0					
ANR	4908434	Identifier	type_name		4908422	1					
ANR	4908435	AssignmentExpression	"* type_name = ""UNKNOWN"""		4908422	2		=			
ANR	4908436	Identifier	type_name		4908422	0					
ANR	4908437	PrimaryExpression	"""UNKNOWN"""		4908422	1					
ANR	4908438	IfStatement	if ( m_Info )		4908422	3					
ANR	4908439	Condition	m_Info	502:6:11931:11936	4908422	0	True				
ANR	4908440	Identifier	m_Info		4908422	0					
ANR	4908441	CompoundStatement		5:15:77:77	4908422	1					
ANR	4908442	ExpressionStatement	type_name = m_Info -> getTypeName ( )	503:2:11944:11977	4908422	0	True				
ANR	4908443	AssignmentExpression	type_name = m_Info -> getTypeName ( )		4908422	0		=			
ANR	4908444	Identifier	type_name		4908422	0					
ANR	4908445	CallExpression	m_Info -> getTypeName ( )		4908422	1					
ANR	4908446	Callee	m_Info -> getTypeName		4908422	0					
ANR	4908447	PtrMemberAccess	m_Info -> getTypeName		4908422	0					
ANR	4908448	Identifier	m_Info		4908422	0					
ANR	4908449	Identifier	getTypeName		4908422	1					
ANR	4908450	ArgumentList			4908422	1					
ANR	4908451	ExpressionStatement	"snprintf ( buf , sizeof ( buf ) , ""SubsystemInfo: name=%s type=%s(%d) class=%s(%d)"" , m_Name , type_name , m_Type , m_ClassName , m_Class )"	505:1:11983:12121	4908422	4	True				
ANR	4908452	CallExpression	"snprintf ( buf , sizeof ( buf ) , ""SubsystemInfo: name=%s type=%s(%d) class=%s(%d)"" , m_Name , type_name , m_Type , m_ClassName , m_Class )"		4908422	0					
ANR	4908453	Callee	snprintf		4908422	0					
ANR	4908454	Identifier	snprintf		4908422	0					
ANR	4908455	ArgumentList	buf		4908422	1					
ANR	4908456	Argument	buf		4908422	0					
ANR	4908457	Identifier	buf		4908422	0					
ANR	4908458	Argument	sizeof ( buf )		4908422	1					
ANR	4908459	SizeofExpression	sizeof ( buf )		4908422	0					
ANR	4908460	Sizeof	sizeof		4908422	0					
ANR	4908461	SizeofOperand	buf		4908422	1					
ANR	4908462	Argument	"""SubsystemInfo: name=%s type=%s(%d) class=%s(%d)"""		4908422	2					
ANR	4908463	PrimaryExpression	"""SubsystemInfo: name=%s type=%s(%d) class=%s(%d)"""		4908422	0					
ANR	4908464	Argument	m_Name		4908422	3					
ANR	4908465	Identifier	m_Name		4908422	0					
ANR	4908466	Argument	type_name		4908422	4					
ANR	4908467	Identifier	type_name		4908422	0					
ANR	4908468	Argument	m_Type		4908422	5					
ANR	4908469	Identifier	m_Type		4908422	0					
ANR	4908470	Argument	m_ClassName		4908422	6					
ANR	4908471	Identifier	m_ClassName		4908422	0					
ANR	4908472	Argument	m_Class		4908422	7					
ANR	4908473	Identifier	m_Class		4908422	0					
ANR	4908474	ReturnStatement	return buf ;	508:1:12124:12134	4908422	5	True				
ANR	4908475	Identifier	buf		4908422	0					
ANR	4908476	ReturnType	const char *		4908422	1					
ANR	4908477	Identifier	SubsystemInfo :: getString		4908422	2					
ANR	4908478	ParameterList			4908422	3					
ANR	4908479	CFGEntryNode	ENTRY		4908422		True				
ANR	4908480	CFGExitNode	EXIT		4908422		True				
ANR	4908481	Symbol	* m_Info		4908422						
ANR	4908482	Symbol	m_Class		4908422						
ANR	4908483	Symbol	buf		4908422						
ANR	4908484	Symbol	type_name		4908422						
ANR	4908485	Symbol	m_Name		4908422						
ANR	4908486	Symbol	m_Info		4908422						
ANR	4908487	Symbol	m_ClassName		4908422						
ANR	4908488	Symbol	m_Type		4908422						
ANR	4908489	Symbol	m_Info -> getTypeName		4908422						
ANR	4908490	Function	get_mySubSystemName	516:1:12331:12408							
ANR	4908491	FunctionDef	get_mySubSystemName ()		4908490	0					
ANR	4908492	CompoundStatement		516:39:12369:12408	4908490	0					
ANR	4908493	ReturnStatement	return get_mySubSystem ( ) -> getName ( ) ;	516:1:12371:12406	4908490	0	True				
ANR	4908494	CallExpression	get_mySubSystem ( ) -> getName ( )		4908490	0					
ANR	4908495	Callee	get_mySubSystem ( ) -> getName		4908490	0					
ANR	4908496	PtrMemberAccess	get_mySubSystem ( ) -> getName		4908490	0					
ANR	4908497	CallExpression	get_mySubSystem ( )		4908490	0					
ANR	4908498	Callee	get_mySubSystem		4908490	0					
ANR	4908499	Identifier	get_mySubSystem		4908490	0					
ANR	4908500	ArgumentList			4908490	1					
ANR	4908501	Identifier	getName		4908490	1					
ANR	4908502	ArgumentList			4908490	1					
ANR	4908503	ReturnType	const char *		4908490	1					
ANR	4908504	Identifier	get_mySubSystemName		4908490	2					
ANR	4908505	ParameterList			4908490	3					
ANR	4908506	CFGEntryNode	ENTRY		4908490		True				
ANR	4908507	CFGExitNode	EXIT		4908490		True				
ANR	4908508	Symbol	get_mySubSystem ( ) -> getName		4908490						
ANR	4908509	Symbol	* get_mySubSystem		4908490						
ANR	4908510	Symbol	get_mySubSystem		4908490						
ANR	4908511	Function	get_mySubSystemType	517:1:12411:12491							
ANR	4908512	FunctionDef	get_mySubSystemType ()		4908511	0					
ANR	4908513	CompoundStatement		517:42:12452:12491	4908511	0					
ANR	4908514	ReturnStatement	return get_mySubSystem ( ) -> getType ( ) ;	517:1:12454:12489	4908511	0	True				
ANR	4908515	CallExpression	get_mySubSystem ( ) -> getType ( )		4908511	0					
ANR	4908516	Callee	get_mySubSystem ( ) -> getType		4908511	0					
ANR	4908517	PtrMemberAccess	get_mySubSystem ( ) -> getType		4908511	0					
ANR	4908518	CallExpression	get_mySubSystem ( )		4908511	0					
ANR	4908519	Callee	get_mySubSystem		4908511	0					
ANR	4908520	Identifier	get_mySubSystem		4908511	0					
ANR	4908521	ArgumentList			4908511	1					
ANR	4908522	Identifier	getType		4908511	1					
ANR	4908523	ArgumentList			4908511	1					
ANR	4908524	ReturnType	SubsystemType		4908511	1					
ANR	4908525	Identifier	get_mySubSystemType		4908511	2					
ANR	4908526	ParameterList			4908511	3					
ANR	4908527	CFGEntryNode	ENTRY		4908511		True				
ANR	4908528	CFGExitNode	EXIT		4908511		True				
ANR	4908529	Symbol	get_mySubSystem ( ) -> getType		4908511						
ANR	4908530	Symbol	* get_mySubSystem		4908511						
ANR	4908531	Symbol	get_mySubSystem		4908511						
