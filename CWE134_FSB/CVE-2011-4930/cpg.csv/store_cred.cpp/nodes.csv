command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5255613	File	data/converged/CVE-2011-4930_htcondor/store_cred.cpp								
ANR	5255614	DeclStmt									
ANR	5255615	Decl							int	"int ( Stream * socket , char * & user , char * & pw , int & mode )"	code_store_cred
ANR	5255616	Function	SecureZeroMemory	37:0:1152:1240							
ANR	5255617	FunctionDef	"SecureZeroMemory (void * p , size_t n)"		5255616	0					
ANR	5255618	CompoundStatement		38:0:1193:1240	5255616	0					
ANR	5255619	ExpressionStatement	"memset ( p , 0 , n )"	40:1:1223:1238	5255616	0	True				
ANR	5255620	CallExpression	"memset ( p , 0 , n )"		5255616	0					
ANR	5255621	Callee	memset		5255616	0					
ANR	5255622	Identifier	memset		5255616	0					
ANR	5255623	ArgumentList	p		5255616	1					
ANR	5255624	Argument	p		5255616	0					
ANR	5255625	Identifier	p		5255616	0					
ANR	5255626	Argument	0		5255616	1					
ANR	5255627	PrimaryExpression	0		5255616	0					
ANR	5255628	Argument	n		5255616	2					
ANR	5255629	Identifier	n		5255616	0					
ANR	5255630	ReturnType	void		5255616	1					
ANR	5255631	Identifier	SecureZeroMemory		5255616	2					
ANR	5255632	ParameterList	"void * p , size_t n"		5255616	3					
ANR	5255633	Parameter	void * p	37:22:1174:1180	5255616	0	True				
ANR	5255634	ParameterType	void *		5255616	0					
ANR	5255635	Identifier	p		5255616	1					
ANR	5255636	Parameter	size_t n	37:31:1183:1190	5255616	1	True				
ANR	5255637	ParameterType	size_t		5255616	0					
ANR	5255638	Identifier	n		5255616	1					
ANR	5255639	CFGEntryNode	ENTRY		5255616		True				
ANR	5255640	CFGExitNode	EXIT		5255616		True				
ANR	5255641	Symbol	p		5255616						
ANR	5255642	Symbol	n		5255616						
ANR	5255643	Function	simple_scramble	45:0:1376:1591							
ANR	5255644	FunctionDef	"simple_scramble (char * scrambled , const char * orig , int len)"		5255643	0					
ANR	5255645	CompoundStatement		46:0:1442:1591	5255643	0					
ANR	5255646	IdentifierDeclStatement	"const char deadbeef [ ] = { 0xDE , 0xAD , 0xBE , 0xEF } ;"	47:1:1445:1493	5255643	0	True				
ANR	5255647	IdentifierDecl	"deadbeef [ ] = { 0xDE , 0xAD , 0xBE , 0xEF }"		5255643	0					
ANR	5255648	IdentifierDeclType	const char [ ]		5255643	0					
ANR	5255649	Identifier	deadbeef		5255643	1					
ANR	5255650	AssignmentExpression	"deadbeef [ ] = { 0xDE , 0xAD , 0xBE , 0xEF }"		5255643	2		=			
ANR	5255651	Identifier	deadbeef		5255643	0					
ANR	5255652	InitializerList	0xDE		5255643	1					
ANR	5255653	PrimaryExpression	0xDE		5255643	0					
ANR	5255654	PrimaryExpression	0xAD		5255643	1					
ANR	5255655	PrimaryExpression	0xBE		5255643	2					
ANR	5255656	PrimaryExpression	0xEF		5255643	3					
ANR	5255657	ForStatement	for ( int i = 0 ; i < len ; i ++ )		5255643	1					
ANR	5255658	ForInit	int i = 0 ;	49:6:1502:1511	5255643	0	True				
ANR	5255659	IdentifierDeclStatement	int i = 0 ;		5255643	0					
ANR	5255660	IdentifierDecl	i = 0		5255643	0					
ANR	5255661	IdentifierDeclType	int		5255643	0					
ANR	5255662	Identifier	i		5255643	1					
ANR	5255663	AssignmentExpression	i = 0		5255643	2		=			
ANR	5255664	Identifier	i		5255643	0					
ANR	5255665	PrimaryExpression	0		5255643	1					
ANR	5255666	Condition	i < len	49:17:1513:1519	5255643	1	True				
ANR	5255667	RelationalExpression	i < len		5255643	0		<			
ANR	5255668	Identifier	i		5255643	0					
ANR	5255669	Identifier	len		5255643	1					
ANR	5255670	PostIncDecOperationExpression	i ++	49:26:1522:1524	5255643	2	True				
ANR	5255671	Identifier	i		5255643	0					
ANR	5255672	IncDec	++		5255643	1					
ANR	5255673	CompoundStatement		4:31:84:84	5255643	3					
ANR	5255674	ExpressionStatement	scrambled [ i ] = orig [ i ] ^ deadbeef [ i % sizeof ( deadbeef ) ]	50:2:1531:1586	5255643	0	True				
ANR	5255675	AssignmentExpression	scrambled [ i ] = orig [ i ] ^ deadbeef [ i % sizeof ( deadbeef ) ]		5255643	0		=			
ANR	5255676	ArrayIndexing	scrambled [ i ]		5255643	0					
ANR	5255677	Identifier	scrambled		5255643	0					
ANR	5255678	Identifier	i		5255643	1					
ANR	5255679	ExclusiveOrExpression	orig [ i ] ^ deadbeef [ i % sizeof ( deadbeef ) ]		5255643	1		^			
ANR	5255680	ArrayIndexing	orig [ i ]		5255643	0					
ANR	5255681	Identifier	orig		5255643	0					
ANR	5255682	Identifier	i		5255643	1					
ANR	5255683	ArrayIndexing	deadbeef [ i % sizeof ( deadbeef ) ]		5255643	1					
ANR	5255684	Identifier	deadbeef		5255643	0					
ANR	5255685	MultiplicativeExpression	i % sizeof ( deadbeef )		5255643	1		%			
ANR	5255686	Identifier	i		5255643	0					
ANR	5255687	SizeofExpression	sizeof ( deadbeef )		5255643	1					
ANR	5255688	Sizeof	sizeof		5255643	0					
ANR	5255689	SizeofOperand	deadbeef		5255643	1					
ANR	5255690	ReturnType	void		5255643	1					
ANR	5255691	Identifier	simple_scramble		5255643	2					
ANR	5255692	ParameterList	"char * scrambled , const char * orig , int len"		5255643	3					
ANR	5255693	Parameter	char * scrambled	45:21:1397:1411	5255643	0	True				
ANR	5255694	ParameterType	char *		5255643	0					
ANR	5255695	Identifier	scrambled		5255643	1					
ANR	5255696	Parameter	const char * orig	45:39:1415:1430	5255643	1	True				
ANR	5255697	ParameterType	const char *		5255643	0					
ANR	5255698	Identifier	orig		5255643	1					
ANR	5255699	Parameter	int len	45:57:1433:1439	5255643	2	True				
ANR	5255700	ParameterType	int		5255643	0					
ANR	5255701	Identifier	len		5255643	1					
ANR	5255702	CFGEntryNode	ENTRY		5255643		True				
ANR	5255703	CFGExitNode	EXIT		5255643		True				
ANR	5255704	Symbol	* scrambled		5255643						
ANR	5255705	Symbol	* i		5255643						
ANR	5255706	Symbol	len		5255643						
ANR	5255707	Symbol	* deadbeef		5255643						
ANR	5255708	Symbol	orig		5255643						
ANR	5255709	Symbol	* orig		5255643						
ANR	5255710	Symbol	deadbeef		5255643						
ANR	5255711	Symbol	i		5255643						
ANR	5255712	Symbol	scrambled		5255643						
ANR	5255713	Function	write_password_file	57:0:1683:2808							
ANR	5255714	FunctionDef	"write_password_file (const char * path , const char * password)"		5255713	0					
ANR	5255715	CompoundStatement		58:0:1747:2808	5255713	0					
ANR	5255716	IdentifierDeclStatement	"int fd = safe_open_wrapper_follow ( path , O_WRONLY | O_CREAT | O_TRUNC , 0600 ) ;"	59:2:1751:1884	5255713	0	True				
ANR	5255717	IdentifierDecl	"fd = safe_open_wrapper_follow ( path , O_WRONLY | O_CREAT | O_TRUNC , 0600 )"		5255713	0					
ANR	5255718	IdentifierDeclType	int		5255713	0					
ANR	5255719	Identifier	fd		5255713	1					
ANR	5255720	AssignmentExpression	"fd = safe_open_wrapper_follow ( path , O_WRONLY | O_CREAT | O_TRUNC , 0600 )"		5255713	2		=			
ANR	5255721	Identifier	fd		5255713	0					
ANR	5255722	CallExpression	"safe_open_wrapper_follow ( path , O_WRONLY | O_CREAT | O_TRUNC , 0600 )"		5255713	1					
ANR	5255723	Callee	safe_open_wrapper_follow		5255713	0					
ANR	5255724	Identifier	safe_open_wrapper_follow		5255713	0					
ANR	5255725	ArgumentList	path		5255713	1					
ANR	5255726	Argument	path		5255713	0					
ANR	5255727	Identifier	path		5255713	0					
ANR	5255728	Argument	O_WRONLY | O_CREAT | O_TRUNC		5255713	1					
ANR	5255729	InclusiveOrExpression	O_WRONLY | O_CREAT | O_TRUNC		5255713	0		|			
ANR	5255730	Identifier	O_WRONLY		5255713	0					
ANR	5255731	InclusiveOrExpression	O_CREAT | O_TRUNC		5255713	1		|			
ANR	5255732	Identifier	O_CREAT		5255713	0					
ANR	5255733	Identifier	O_TRUNC		5255713	1					
ANR	5255734	Argument	0600		5255713	2					
ANR	5255735	PrimaryExpression	0600		5255713	0					
ANR	5255736	IfStatement	if ( fd == - 1 )		5255713	1					
ANR	5255737	Condition	fd == - 1	62:6:1892:1899	5255713	0	True				
ANR	5255738	EqualityExpression	fd == - 1		5255713	0		==			
ANR	5255739	Identifier	fd		5255713	0					
ANR	5255740	UnaryOperationExpression	- 1		5255713	1					
ANR	5255741	UnaryOperator	-		5255713	0					
ANR	5255742	PrimaryExpression	1		5255713	1					
ANR	5255743	CompoundStatement		5:16:154:154	5255713	1					
ANR	5255744	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred_service: open failed on %s: %s (%d)\\n"" , path , strerror ( errno ) , errno )"	63:3:1907:2044	5255713	0	True				
ANR	5255745	CallExpression	"dprintf ( D_ALWAYS , ""store_cred_service: open failed on %s: %s (%d)\\n"" , path , strerror ( errno ) , errno )"		5255713	0					
ANR	5255746	Callee	dprintf		5255713	0					
ANR	5255747	Identifier	dprintf		5255713	0					
ANR	5255748	ArgumentList	D_ALWAYS		5255713	1					
ANR	5255749	Argument	D_ALWAYS		5255713	0					
ANR	5255750	Identifier	D_ALWAYS		5255713	0					
ANR	5255751	Argument	"""store_cred_service: open failed on %s: %s (%d)\\n"""		5255713	1					
ANR	5255752	PrimaryExpression	"""store_cred_service: open failed on %s: %s (%d)\\n"""		5255713	0					
ANR	5255753	Argument	path		5255713	2					
ANR	5255754	Identifier	path		5255713	0					
ANR	5255755	Argument	strerror ( errno )		5255713	3					
ANR	5255756	CallExpression	strerror ( errno )		5255713	0					
ANR	5255757	Callee	strerror		5255713	0					
ANR	5255758	Identifier	strerror		5255713	0					
ANR	5255759	ArgumentList	errno		5255713	1					
ANR	5255760	Argument	errno		5255713	0					
ANR	5255761	Identifier	errno		5255713	0					
ANR	5255762	Argument	errno		5255713	4					
ANR	5255763	Identifier	errno		5255713	0					
ANR	5255764	ReturnStatement	return FAILURE ;	68:3:2049:2063	5255713	1	True				
ANR	5255765	Identifier	FAILURE		5255713	0					
ANR	5255766	IdentifierDeclStatement	"FILE * fp = fdopen ( fd , ""w"" ) ;"	70:2:2071:2097	5255713	2	True				
ANR	5255767	IdentifierDecl	"* fp = fdopen ( fd , ""w"" )"		5255713	0					
ANR	5255768	IdentifierDeclType	FILE *		5255713	0					
ANR	5255769	Identifier	fp		5255713	1					
ANR	5255770	AssignmentExpression	"* fp = fdopen ( fd , ""w"" )"		5255713	2		=			
ANR	5255771	Identifier	fp		5255713	0					
ANR	5255772	CallExpression	"fdopen ( fd , ""w"" )"		5255713	1					
ANR	5255773	Callee	fdopen		5255713	0					
ANR	5255774	Identifier	fdopen		5255713	0					
ANR	5255775	ArgumentList	fd		5255713	1					
ANR	5255776	Argument	fd		5255713	0					
ANR	5255777	Identifier	fd		5255713	0					
ANR	5255778	Argument	"""w"""		5255713	1					
ANR	5255779	PrimaryExpression	"""w"""		5255713	0					
ANR	5255780	IfStatement	if ( fp == NULL )		5255713	3					
ANR	5255781	Condition	fp == NULL	71:6:2105:2114	5255713	0	True				
ANR	5255782	EqualityExpression	fp == NULL		5255713	0		==			
ANR	5255783	Identifier	fp		5255713	0					
ANR	5255784	Identifier	NULL		5255713	1					
ANR	5255785	CompoundStatement		14:18:369:369	5255713	1					
ANR	5255786	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred_service: fdopen failed: %s (%d)\\n"" , strerror ( errno ) , errno )"	72:3:2122:2244	5255713	0	True				
ANR	5255787	CallExpression	"dprintf ( D_ALWAYS , ""store_cred_service: fdopen failed: %s (%d)\\n"" , strerror ( errno ) , errno )"		5255713	0					
ANR	5255788	Callee	dprintf		5255713	0					
ANR	5255789	Identifier	dprintf		5255713	0					
ANR	5255790	ArgumentList	D_ALWAYS		5255713	1					
ANR	5255791	Argument	D_ALWAYS		5255713	0					
ANR	5255792	Identifier	D_ALWAYS		5255713	0					
ANR	5255793	Argument	"""store_cred_service: fdopen failed: %s (%d)\\n"""		5255713	1					
ANR	5255794	PrimaryExpression	"""store_cred_service: fdopen failed: %s (%d)\\n"""		5255713	0					
ANR	5255795	Argument	strerror ( errno )		5255713	2					
ANR	5255796	CallExpression	strerror ( errno )		5255713	0					
ANR	5255797	Callee	strerror		5255713	0					
ANR	5255798	Identifier	strerror		5255713	0					
ANR	5255799	ArgumentList	errno		5255713	1					
ANR	5255800	Argument	errno		5255713	0					
ANR	5255801	Identifier	errno		5255713	0					
ANR	5255802	Argument	errno		5255713	3					
ANR	5255803	Identifier	errno		5255713	0					
ANR	5255804	ReturnStatement	return FAILURE ;	76:3:2249:2263	5255713	1	True				
ANR	5255805	Identifier	FAILURE		5255713	0					
ANR	5255806	IdentifierDeclStatement	size_t password_len = strlen ( password ) ;	78:2:2271:2309	5255713	4	True				
ANR	5255807	IdentifierDecl	password_len = strlen ( password )		5255713	0					
ANR	5255808	IdentifierDeclType	size_t		5255713	0					
ANR	5255809	Identifier	password_len		5255713	1					
ANR	5255810	AssignmentExpression	password_len = strlen ( password )		5255713	2		=			
ANR	5255811	Identifier	password_len		5255713	0					
ANR	5255812	CallExpression	strlen ( password )		5255713	1					
ANR	5255813	Callee	strlen		5255713	0					
ANR	5255814	Identifier	strlen		5255713	0					
ANR	5255815	ArgumentList	password		5255713	1					
ANR	5255816	Argument	password		5255713	0					
ANR	5255817	Identifier	password		5255713	0					
ANR	5255818	IdentifierDeclStatement	char scrambled_password [ MAX_PASSWORD_LENGTH + 1 ] ;	79:2:2313:2361	5255713	5	True				
ANR	5255819	IdentifierDecl	scrambled_password [ MAX_PASSWORD_LENGTH + 1 ]		5255713	0					
ANR	5255820	IdentifierDeclType	char [ MAX_PASSWORD_LENGTH + 1 ]		5255713	0					
ANR	5255821	Identifier	scrambled_password		5255713	1					
ANR	5255822	AdditiveExpression	MAX_PASSWORD_LENGTH + 1		5255713	2		+			
ANR	5255823	Identifier	MAX_PASSWORD_LENGTH		5255713	0					
ANR	5255824	PrimaryExpression	1		5255713	1					
ANR	5255825	ExpressionStatement	"memset ( scrambled_password , 0 , MAX_PASSWORD_LENGTH + 1 )"	80:2:2365:2419	5255713	6	True				
ANR	5255826	CallExpression	"memset ( scrambled_password , 0 , MAX_PASSWORD_LENGTH + 1 )"		5255713	0					
ANR	5255827	Callee	memset		5255713	0					
ANR	5255828	Identifier	memset		5255713	0					
ANR	5255829	ArgumentList	scrambled_password		5255713	1					
ANR	5255830	Argument	scrambled_password		5255713	0					
ANR	5255831	Identifier	scrambled_password		5255713	0					
ANR	5255832	Argument	0		5255713	1					
ANR	5255833	PrimaryExpression	0		5255713	0					
ANR	5255834	Argument	MAX_PASSWORD_LENGTH + 1		5255713	2					
ANR	5255835	AdditiveExpression	MAX_PASSWORD_LENGTH + 1		5255713	0		+			
ANR	5255836	Identifier	MAX_PASSWORD_LENGTH		5255713	0					
ANR	5255837	PrimaryExpression	1		5255713	1					
ANR	5255838	ExpressionStatement	"simple_scramble ( scrambled_password , password , password_len )"	81:2:2423:2482	5255713	7	True				
ANR	5255839	CallExpression	"simple_scramble ( scrambled_password , password , password_len )"		5255713	0					
ANR	5255840	Callee	simple_scramble		5255713	0					
ANR	5255841	Identifier	simple_scramble		5255713	0					
ANR	5255842	ArgumentList	scrambled_password		5255713	1					
ANR	5255843	Argument	scrambled_password		5255713	0					
ANR	5255844	Identifier	scrambled_password		5255713	0					
ANR	5255845	Argument	password		5255713	1					
ANR	5255846	Identifier	password		5255713	0					
ANR	5255847	Argument	password_len		5255713	2					
ANR	5255848	Identifier	password_len		5255713	0					
ANR	5255849	IdentifierDeclStatement	"size_t sz = fwrite ( scrambled_password , 1 , MAX_PASSWORD_LENGTH + 1 , fp ) ;"	82:2:2486:2556	5255713	8	True				
ANR	5255850	IdentifierDecl	"sz = fwrite ( scrambled_password , 1 , MAX_PASSWORD_LENGTH + 1 , fp )"		5255713	0					
ANR	5255851	IdentifierDeclType	size_t		5255713	0					
ANR	5255852	Identifier	sz		5255713	1					
ANR	5255853	AssignmentExpression	"sz = fwrite ( scrambled_password , 1 , MAX_PASSWORD_LENGTH + 1 , fp )"		5255713	2		=			
ANR	5255854	Identifier	sz		5255713	0					
ANR	5255855	CallExpression	"fwrite ( scrambled_password , 1 , MAX_PASSWORD_LENGTH + 1 , fp )"		5255713	1					
ANR	5255856	Callee	fwrite		5255713	0					
ANR	5255857	Identifier	fwrite		5255713	0					
ANR	5255858	ArgumentList	scrambled_password		5255713	1					
ANR	5255859	Argument	scrambled_password		5255713	0					
ANR	5255860	Identifier	scrambled_password		5255713	0					
ANR	5255861	Argument	1		5255713	1					
ANR	5255862	PrimaryExpression	1		5255713	0					
ANR	5255863	Argument	MAX_PASSWORD_LENGTH + 1		5255713	2					
ANR	5255864	AdditiveExpression	MAX_PASSWORD_LENGTH + 1		5255713	0		+			
ANR	5255865	Identifier	MAX_PASSWORD_LENGTH		5255713	0					
ANR	5255866	PrimaryExpression	1		5255713	1					
ANR	5255867	Argument	fp		5255713	3					
ANR	5255868	Identifier	fp		5255713	0					
ANR	5255869	ExpressionStatement	fclose ( fp )	83:2:2560:2570	5255713	9	True				
ANR	5255870	CallExpression	fclose ( fp )		5255713	0					
ANR	5255871	Callee	fclose		5255713	0					
ANR	5255872	Identifier	fclose		5255713	0					
ANR	5255873	ArgumentList	fp		5255713	1					
ANR	5255874	Argument	fp		5255713	0					
ANR	5255875	Identifier	fp		5255713	0					
ANR	5255876	IfStatement	if ( sz != MAX_PASSWORD_LENGTH + 1 )		5255713	10					
ANR	5255877	Condition	sz != MAX_PASSWORD_LENGTH + 1	84:6:2578:2606	5255713	0	True				
ANR	5255878	EqualityExpression	sz != MAX_PASSWORD_LENGTH + 1		5255713	0		!=			
ANR	5255879	Identifier	sz		5255713	0					
ANR	5255880	AdditiveExpression	MAX_PASSWORD_LENGTH + 1		5255713	1		+			
ANR	5255881	Identifier	MAX_PASSWORD_LENGTH		5255713	0					
ANR	5255882	PrimaryExpression	1		5255713	1					
ANR	5255883	CompoundStatement		27:37:861:861	5255713	1					
ANR	5255884	Statement	dprintf	85:3:2614:2620	5255713	0	True				
ANR	5255885	Statement	(	85:10:2621:2621	5255713	1	True				
ANR	5255886	Statement	D_ALWAYS	85:11:2622:2629	5255713	2	True				
ANR	5255887	Statement	","	85:19:2630:2630	5255713	3	True				
ANR	5255888	Statement	"""store_cred_service: """	86:11:2643:2664	5255713	4	True				
ANR	5255889	Statement	"""error writing to password file: %s (%d)\\n"""	87:15:2681:2723	5255713	5	True				
ANR	5255890	Statement	","	87:58:2724:2724	5255713	6	True				
ANR	5255891	Statement	strerror	88:5:2731:2738	5255713	7	True				
ANR	5255892	Statement	(	88:13:2739:2739	5255713	8	True				
ANR	5255893	Statement	errno	88:14:2740:2744	5255713	9	True				
ANR	5255894	Statement	)	88:19:2745:2745	5255713	10	True				
ANR	5255895	Statement	","	88:20:2746:2746	5255713	11	True				
ANR	5255896	Statement	errno	89:11:2759:2763	5255713	12	True				
ANR	5255897	Statement	)	89:16:2764:2764	5255713	13	True				
ANR	5255898	ExpressionStatement		89:17:2765:2765	5255713	14	True				
ANR	5255899	ReturnStatement	return FAILURE ;	90:3:2770:2784	5255713	15	True				
ANR	5255900	Identifier	FAILURE		5255713	0					
ANR	5255901	ReturnStatement	return SUCCESS ;	92:2:2792:2806	5255713	11	True				
ANR	5255902	Identifier	SUCCESS		5255713	0					
ANR	5255903	ReturnType	int		5255713	1					
ANR	5255904	Identifier	write_password_file		5255713	2					
ANR	5255905	ParameterList	"const char * path , const char * password"		5255713	3					
ANR	5255906	Parameter	const char * path	57:24:1707:1722	5255713	0	True				
ANR	5255907	ParameterType	const char *		5255713	0					
ANR	5255908	Identifier	path		5255713	1					
ANR	5255909	Parameter	const char * password	57:42:1725:1744	5255713	1	True				
ANR	5255910	ParameterType	const char *		5255713	0					
ANR	5255911	Identifier	password		5255713	1					
ANR	5255912	CFGEntryNode	ENTRY		5255713		True				
ANR	5255913	CFGExitNode	EXIT		5255713		True				
ANR	5255914	Symbol	password_len		5255713						
ANR	5255915	Symbol	errno		5255713						
ANR	5255916	Symbol	safe_open_wrapper_follow		5255713						
ANR	5255917	Symbol	NULL		5255713						
ANR	5255918	Symbol	SUCCESS		5255713						
ANR	5255919	Symbol	O_CREAT		5255713						
ANR	5255920	Symbol	sz		5255713						
ANR	5255921	Symbol	D_ALWAYS		5255713						
ANR	5255922	Symbol	fwrite		5255713						
ANR	5255923	Symbol	fp		5255713						
ANR	5255924	Symbol	fdopen		5255713						
ANR	5255925	Symbol	FAILURE		5255713						
ANR	5255926	Symbol	strerror		5255713						
ANR	5255927	Symbol	path		5255713						
ANR	5255928	Symbol	strlen		5255713						
ANR	5255929	Symbol	password		5255713						
ANR	5255930	Symbol	O_TRUNC		5255713						
ANR	5255931	Symbol	scrambled_password		5255713						
ANR	5255932	Symbol	O_WRONLY		5255713						
ANR	5255933	Symbol	MAX_PASSWORD_LENGTH		5255713						
ANR	5255934	Symbol	fd		5255713						
ANR	5255935	Function	getStoredCredential	95:0:2811:4697							
ANR	5255936	FunctionDef	"getStoredCredential (const char * username , const char * domain)"		5255935	0					
ANR	5255937	CompoundStatement		96:0:2879:4697	5255935	0					
ANR	5255938	IfStatement	if ( ! username || ! domain )		5255935	0					
ANR	5255939	Condition	! username || ! domain	99:6:2931:2950	5255935	0	True				
ANR	5255940	OrExpression	! username || ! domain		5255935	0		||			
ANR	5255941	UnaryOperationExpression	! username		5255935	0					
ANR	5255942	UnaryOperator	!		5255935	0					
ANR	5255943	Identifier	username		5255935	1					
ANR	5255944	UnaryOperationExpression	! domain		5255935	1					
ANR	5255945	UnaryOperator	!		5255935	0					
ANR	5255946	Identifier	domain		5255935	1					
ANR	5255947	CompoundStatement		4:29:74:74	5255935	1					
ANR	5255948	ReturnStatement	return NULL ;	100:2:2958:2969	5255935	0	True				
ANR	5255949	Identifier	NULL		5255935	0					
ANR	5255950	IfStatement	"if ( strcmp ( username , POOL_PASSWORD_USERNAME ) != 0 )"		5255935	1					
ANR	5255951	Condition	"strcmp ( username , POOL_PASSWORD_USERNAME ) != 0"	103:5:2980:3024	5255935	0	True				
ANR	5255952	EqualityExpression	"strcmp ( username , POOL_PASSWORD_USERNAME ) != 0"		5255935	0		!=			
ANR	5255953	CallExpression	"strcmp ( username , POOL_PASSWORD_USERNAME )"		5255935	0					
ANR	5255954	Callee	strcmp		5255935	0					
ANR	5255955	Identifier	strcmp		5255935	0					
ANR	5255956	ArgumentList	username		5255935	1					
ANR	5255957	Argument	username		5255935	0					
ANR	5255958	Identifier	username		5255935	0					
ANR	5255959	Argument	POOL_PASSWORD_USERNAME		5255935	1					
ANR	5255960	Identifier	POOL_PASSWORD_USERNAME		5255935	0					
ANR	5255961	PrimaryExpression	0		5255935	1					
ANR	5255962	CompoundStatement		8:52:147:147	5255935	1					
ANR	5255963	Statement	dprintf	104:2:3031:3037	5255935	0	True				
ANR	5255964	Statement	(	104:9:3038:3038	5255935	1	True				
ANR	5255965	Statement	D_ALWAYS	104:10:3039:3046	5255935	2	True				
ANR	5255966	Statement	","	104:18:3047:3047	5255935	3	True				
ANR	5255967	Statement	"""getStoredCredential: """	105:10:3059:3081	5255935	4	True				
ANR	5255968	Statement	"""only pool password is supported on UNIX\\n"""	106:14:3097:3139	5255935	5	True				
ANR	5255969	Statement	)	106:57:3140:3140	5255935	6	True				
ANR	5255970	ExpressionStatement		106:58:3141:3141	5255935	7	True				
ANR	5255971	ReturnStatement	return NULL ;	107:2:3145:3156	5255935	8	True				
ANR	5255972	Identifier	NULL		5255935	0					
ANR	5255973	IdentifierDeclStatement	"char * filename = param ( ""SEC_PASSWORD_FILE"" ) ;"	110:1:3164:3207	5255935	2	True				
ANR	5255974	IdentifierDecl	"* filename = param ( ""SEC_PASSWORD_FILE"" )"		5255935	0					
ANR	5255975	IdentifierDeclType	char *		5255935	0					
ANR	5255976	Identifier	filename		5255935	1					
ANR	5255977	AssignmentExpression	"* filename = param ( ""SEC_PASSWORD_FILE"" )"		5255935	2		=			
ANR	5255978	Identifier	filename		5255935	0					
ANR	5255979	CallExpression	"param ( ""SEC_PASSWORD_FILE"" )"		5255935	1					
ANR	5255980	Callee	param		5255935	0					
ANR	5255981	Identifier	param		5255935	0					
ANR	5255982	ArgumentList	"""SEC_PASSWORD_FILE"""		5255935	1					
ANR	5255983	Argument	"""SEC_PASSWORD_FILE"""		5255935	0					
ANR	5255984	PrimaryExpression	"""SEC_PASSWORD_FILE"""		5255935	0					
ANR	5255985	IfStatement	if ( filename == NULL )		5255935	3					
ANR	5255986	Condition	filename == NULL	111:5:3214:3229	5255935	0	True				
ANR	5255987	EqualityExpression	filename == NULL		5255935	0		==			
ANR	5255988	Identifier	filename		5255935	0					
ANR	5255989	Identifier	NULL		5255935	1					
ANR	5255990	CompoundStatement		16:23:352:352	5255935	1					
ANR	5255991	Statement	dprintf	112:2:3236:3242	5255935	0	True				
ANR	5255992	Statement	(	112:9:3243:3243	5255935	1	True				
ANR	5255993	Statement	D_ALWAYS	112:10:3244:3251	5255935	2	True				
ANR	5255994	Statement	","	112:18:3252:3252	5255935	3	True				
ANR	5255995	Statement	"""error fetching pool password; """	113:10:3264:3295	5255935	4	True				
ANR	5255996	Statement	"""SEC_PASSWORD_FILE not defined\\n"""	114:14:3311:3343	5255935	5	True				
ANR	5255997	Statement	)	114:47:3344:3344	5255935	6	True				
ANR	5255998	ExpressionStatement		114:48:3345:3345	5255935	7	True				
ANR	5255999	ReturnStatement	return NULL ;	115:2:3349:3360	5255935	8	True				
ANR	5256000	Identifier	NULL		5255935	0					
ANR	5256001	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	119:1:3414:3447	5255935	4	True				
ANR	5256002	IdentifierDecl	priv = set_root_priv ( )		5255935	0					
ANR	5256003	IdentifierDeclType	priv_state		5255935	0					
ANR	5256004	Identifier	priv		5255935	1					
ANR	5256005	AssignmentExpression	priv = set_root_priv ( )		5255935	2		=			
ANR	5256006	Identifier	priv		5255935	0					
ANR	5256007	CallExpression	set_root_priv ( )		5255935	1					
ANR	5256008	Callee	set_root_priv		5255935	0					
ANR	5256009	Identifier	set_root_priv		5255935	0					
ANR	5256010	ArgumentList			5255935	1					
ANR	5256011	IdentifierDeclStatement	"FILE * fp = safe_fopen_wrapper_follow ( filename , ""r"" ) ;"	120:1:3450:3501	5255935	5	True				
ANR	5256012	IdentifierDecl	"* fp = safe_fopen_wrapper_follow ( filename , ""r"" )"		5255935	0					
ANR	5256013	IdentifierDeclType	FILE *		5255935	0					
ANR	5256014	Identifier	fp		5255935	1					
ANR	5256015	AssignmentExpression	"* fp = safe_fopen_wrapper_follow ( filename , ""r"" )"		5255935	2		=			
ANR	5256016	Identifier	fp		5255935	0					
ANR	5256017	CallExpression	"safe_fopen_wrapper_follow ( filename , ""r"" )"		5255935	1					
ANR	5256018	Callee	safe_fopen_wrapper_follow		5255935	0					
ANR	5256019	Identifier	safe_fopen_wrapper_follow		5255935	0					
ANR	5256020	ArgumentList	filename		5255935	1					
ANR	5256021	Argument	filename		5255935	0					
ANR	5256022	Identifier	filename		5255935	0					
ANR	5256023	Argument	"""r"""		5255935	1					
ANR	5256024	PrimaryExpression	"""r"""		5255935	0					
ANR	5256025	ExpressionStatement	set_priv ( priv )	121:1:3504:3518	5255935	6	True				
ANR	5256026	CallExpression	set_priv ( priv )		5255935	0					
ANR	5256027	Callee	set_priv		5255935	0					
ANR	5256028	Identifier	set_priv		5255935	0					
ANR	5256029	ArgumentList	priv		5255935	1					
ANR	5256030	Argument	priv		5255935	0					
ANR	5256031	Identifier	priv		5255935	0					
ANR	5256032	IfStatement	if ( fp == NULL )		5255935	7					
ANR	5256033	Condition	fp == NULL	122:5:3525:3534	5255935	0	True				
ANR	5256034	EqualityExpression	fp == NULL		5255935	0		==			
ANR	5256035	Identifier	fp		5255935	0					
ANR	5256036	Identifier	NULL		5255935	1					
ANR	5256037	CompoundStatement		27:17:657:657	5255935	1					
ANR	5256038	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""error opening SEC_PASSWORD_FILE (%s), %s (errno: %d)\\n"" , filename , strerror ( errno ) , errno )"	123:2:3541:3693	5255935	0	True				
ANR	5256039	CallExpression	"dprintf ( D_FULLDEBUG , ""error opening SEC_PASSWORD_FILE (%s), %s (errno: %d)\\n"" , filename , strerror ( errno ) , errno )"		5255935	0					
ANR	5256040	Callee	dprintf		5255935	0					
ANR	5256041	Identifier	dprintf		5255935	0					
ANR	5256042	ArgumentList	D_FULLDEBUG		5255935	1					
ANR	5256043	Argument	D_FULLDEBUG		5255935	0					
ANR	5256044	Identifier	D_FULLDEBUG		5255935	0					
ANR	5256045	Argument	"""error opening SEC_PASSWORD_FILE (%s), %s (errno: %d)\\n"""		5255935	1					
ANR	5256046	PrimaryExpression	"""error opening SEC_PASSWORD_FILE (%s), %s (errno: %d)\\n"""		5255935	0					
ANR	5256047	Argument	filename		5255935	2					
ANR	5256048	Identifier	filename		5255935	0					
ANR	5256049	Argument	strerror ( errno )		5255935	3					
ANR	5256050	CallExpression	strerror ( errno )		5255935	0					
ANR	5256051	Callee	strerror		5255935	0					
ANR	5256052	Identifier	strerror		5255935	0					
ANR	5256053	ArgumentList	errno		5255935	1					
ANR	5256054	Argument	errno		5255935	0					
ANR	5256055	Identifier	errno		5255935	0					
ANR	5256056	Argument	errno		5255935	4					
ANR	5256057	Identifier	errno		5255935	0					
ANR	5256058	ExpressionStatement	free ( filename )	128:2:3697:3711	5255935	1	True				
ANR	5256059	CallExpression	free ( filename )		5255935	0					
ANR	5256060	Callee	free		5255935	0					
ANR	5256061	Identifier	free		5255935	0					
ANR	5256062	ArgumentList	filename		5255935	1					
ANR	5256063	Argument	filename		5255935	0					
ANR	5256064	Identifier	filename		5255935	0					
ANR	5256065	ReturnStatement	return NULL ;	129:2:3715:3726	5255935	2	True				
ANR	5256066	Identifier	NULL		5255935	0					
ANR	5256067	IdentifierDeclStatement	struct stat st ;	133:1:3783:3797	5255935	8	True				
ANR	5256068	IdentifierDecl	st		5255935	0					
ANR	5256069	IdentifierDeclType	struct stat		5255935	0					
ANR	5256070	Identifier	st		5255935	1					
ANR	5256071	IfStatement	"if ( fstat ( fileno ( fp ) , & st ) == - 1 )"		5255935	9					
ANR	5256072	Condition	"fstat ( fileno ( fp ) , & st ) == - 1"	134:5:3804:3831	5255935	0	True				
ANR	5256073	EqualityExpression	"fstat ( fileno ( fp ) , & st ) == - 1"		5255935	0		==			
ANR	5256074	CallExpression	"fstat ( fileno ( fp ) , & st )"		5255935	0					
ANR	5256075	Callee	fstat		5255935	0					
ANR	5256076	Identifier	fstat		5255935	0					
ANR	5256077	ArgumentList	fileno ( fp )		5255935	1					
ANR	5256078	Argument	fileno ( fp )		5255935	0					
ANR	5256079	CallExpression	fileno ( fp )		5255935	0					
ANR	5256080	Callee	fileno		5255935	0					
ANR	5256081	Identifier	fileno		5255935	0					
ANR	5256082	ArgumentList	fp		5255935	1					
ANR	5256083	Argument	fp		5255935	0					
ANR	5256084	Identifier	fp		5255935	0					
ANR	5256085	Argument	& st		5255935	1					
ANR	5256086	UnaryOperationExpression	& st		5255935	0					
ANR	5256087	UnaryOperator	&		5255935	0					
ANR	5256088	Identifier	st		5255935	1					
ANR	5256089	UnaryOperationExpression	- 1		5255935	1					
ANR	5256090	UnaryOperator	-		5255935	0					
ANR	5256091	PrimaryExpression	1		5255935	1					
ANR	5256092	CompoundStatement		39:35:954:954	5255935	1					
ANR	5256093	ExpressionStatement	"dprintf ( D_ALWAYS , ""fstat failed on SEC_PASSWORD_FILE (%s), %s (errno: %d)\\n"" , filename , strerror ( errno ) , errno )"	135:2:3838:3989	5255935	0	True				
ANR	5256094	CallExpression	"dprintf ( D_ALWAYS , ""fstat failed on SEC_PASSWORD_FILE (%s), %s (errno: %d)\\n"" , filename , strerror ( errno ) , errno )"		5255935	0					
ANR	5256095	Callee	dprintf		5255935	0					
ANR	5256096	Identifier	dprintf		5255935	0					
ANR	5256097	ArgumentList	D_ALWAYS		5255935	1					
ANR	5256098	Argument	D_ALWAYS		5255935	0					
ANR	5256099	Identifier	D_ALWAYS		5255935	0					
ANR	5256100	Argument	"""fstat failed on SEC_PASSWORD_FILE (%s), %s (errno: %d)\\n"""		5255935	1					
ANR	5256101	PrimaryExpression	"""fstat failed on SEC_PASSWORD_FILE (%s), %s (errno: %d)\\n"""		5255935	0					
ANR	5256102	Argument	filename		5255935	2					
ANR	5256103	Identifier	filename		5255935	0					
ANR	5256104	Argument	strerror ( errno )		5255935	3					
ANR	5256105	CallExpression	strerror ( errno )		5255935	0					
ANR	5256106	Callee	strerror		5255935	0					
ANR	5256107	Identifier	strerror		5255935	0					
ANR	5256108	ArgumentList	errno		5255935	1					
ANR	5256109	Argument	errno		5255935	0					
ANR	5256110	Identifier	errno		5255935	0					
ANR	5256111	Argument	errno		5255935	4					
ANR	5256112	Identifier	errno		5255935	0					
ANR	5256113	ExpressionStatement	fclose ( fp )	140:2:3993:4003	5255935	1	True				
ANR	5256114	CallExpression	fclose ( fp )		5255935	0					
ANR	5256115	Callee	fclose		5255935	0					
ANR	5256116	Identifier	fclose		5255935	0					
ANR	5256117	ArgumentList	fp		5255935	1					
ANR	5256118	Argument	fp		5255935	0					
ANR	5256119	Identifier	fp		5255935	0					
ANR	5256120	ExpressionStatement	free ( filename )	141:2:4007:4021	5255935	2	True				
ANR	5256121	CallExpression	free ( filename )		5255935	0					
ANR	5256122	Callee	free		5255935	0					
ANR	5256123	Identifier	free		5255935	0					
ANR	5256124	ArgumentList	filename		5255935	1					
ANR	5256125	Argument	filename		5255935	0					
ANR	5256126	Identifier	filename		5255935	0					
ANR	5256127	ReturnStatement	return NULL ;	142:2:4025:4036	5255935	3	True				
ANR	5256128	Identifier	NULL		5255935	0					
ANR	5256129	ExpressionStatement	free ( filename )	144:1:4042:4056	5255935	10	True				
ANR	5256130	CallExpression	free ( filename )		5255935	0					
ANR	5256131	Callee	free		5255935	0					
ANR	5256132	Identifier	free		5255935	0					
ANR	5256133	ArgumentList	filename		5255935	1					
ANR	5256134	Argument	filename		5255935	0					
ANR	5256135	Identifier	filename		5255935	0					
ANR	5256136	IfStatement	if ( st . st_uid != get_my_uid ( ) )		5255935	11					
ANR	5256137	Condition	st . st_uid != get_my_uid ( )	145:5:4063:4087	5255935	0	True				
ANR	5256138	EqualityExpression	st . st_uid != get_my_uid ( )		5255935	0		!=			
ANR	5256139	MemberAccess	st . st_uid		5255935	0					
ANR	5256140	Identifier	st		5255935	0					
ANR	5256141	Identifier	st_uid		5255935	1					
ANR	5256142	CallExpression	get_my_uid ( )		5255935	1					
ANR	5256143	Callee	get_my_uid		5255935	0					
ANR	5256144	Identifier	get_my_uid		5255935	0					
ANR	5256145	ArgumentList			5255935	1					
ANR	5256146	CompoundStatement		50:32:1210:1210	5255935	1					
ANR	5256147	Statement	dprintf	146:2:4094:4100	5255935	0	True				
ANR	5256148	Statement	(	146:9:4101:4101	5255935	1	True				
ANR	5256149	Statement	D_ALWAYS	146:10:4102:4109	5255935	2	True				
ANR	5256150	Statement	","	146:18:4110:4110	5255935	3	True				
ANR	5256151	Statement	"""error: SEC_PASSWORD_FILE must be owned """	147:10:4122:4162	5255935	4	True				
ANR	5256152	Statement	"""by Condor's real uid\\n"""	148:14:4178:4201	5255935	5	True				
ANR	5256153	Statement	)	148:38:4202:4202	5255935	6	True				
ANR	5256154	ExpressionStatement		148:39:4203:4203	5255935	7	True				
ANR	5256155	ExpressionStatement	fclose ( fp )	149:2:4207:4217	5255935	8	True				
ANR	5256156	CallExpression	fclose ( fp )		5255935	0					
ANR	5256157	Callee	fclose		5255935	0					
ANR	5256158	Identifier	fclose		5255935	0					
ANR	5256159	ArgumentList	fp		5255935	1					
ANR	5256160	Argument	fp		5255935	0					
ANR	5256161	Identifier	fp		5255935	0					
ANR	5256162	ReturnStatement	return NULL ;	150:2:4221:4232	5255935	9	True				
ANR	5256163	Identifier	NULL		5255935	0					
ANR	5256164	IdentifierDeclStatement	char scrambled_pw [ MAX_PASSWORD_LENGTH + 1 ] ;	153:1:4239:4281	5255935	12	True				
ANR	5256165	IdentifierDecl	scrambled_pw [ MAX_PASSWORD_LENGTH + 1 ]		5255935	0					
ANR	5256166	IdentifierDeclType	char [ MAX_PASSWORD_LENGTH + 1 ]		5255935	0					
ANR	5256167	Identifier	scrambled_pw		5255935	1					
ANR	5256168	AdditiveExpression	MAX_PASSWORD_LENGTH + 1		5255935	2		+			
ANR	5256169	Identifier	MAX_PASSWORD_LENGTH		5255935	0					
ANR	5256170	PrimaryExpression	1		5255935	1					
ANR	5256171	IdentifierDeclStatement	"size_t sz = fread ( scrambled_pw , 1 , MAX_PASSWORD_LENGTH , fp ) ;"	154:1:4284:4343	5255935	13	True				
ANR	5256172	IdentifierDecl	"sz = fread ( scrambled_pw , 1 , MAX_PASSWORD_LENGTH , fp )"		5255935	0					
ANR	5256173	IdentifierDeclType	size_t		5255935	0					
ANR	5256174	Identifier	sz		5255935	1					
ANR	5256175	AssignmentExpression	"sz = fread ( scrambled_pw , 1 , MAX_PASSWORD_LENGTH , fp )"		5255935	2		=			
ANR	5256176	Identifier	sz		5255935	0					
ANR	5256177	CallExpression	"fread ( scrambled_pw , 1 , MAX_PASSWORD_LENGTH , fp )"		5255935	1					
ANR	5256178	Callee	fread		5255935	0					
ANR	5256179	Identifier	fread		5255935	0					
ANR	5256180	ArgumentList	scrambled_pw		5255935	1					
ANR	5256181	Argument	scrambled_pw		5255935	0					
ANR	5256182	Identifier	scrambled_pw		5255935	0					
ANR	5256183	Argument	1		5255935	1					
ANR	5256184	PrimaryExpression	1		5255935	0					
ANR	5256185	Argument	MAX_PASSWORD_LENGTH		5255935	2					
ANR	5256186	Identifier	MAX_PASSWORD_LENGTH		5255935	0					
ANR	5256187	Argument	fp		5255935	3					
ANR	5256188	Identifier	fp		5255935	0					
ANR	5256189	ExpressionStatement	fclose ( fp )	155:1:4346:4356	5255935	14	True				
ANR	5256190	CallExpression	fclose ( fp )		5255935	0					
ANR	5256191	Callee	fclose		5255935	0					
ANR	5256192	Identifier	fclose		5255935	0					
ANR	5256193	ArgumentList	fp		5255935	1					
ANR	5256194	Argument	fp		5255935	0					
ANR	5256195	Identifier	fp		5255935	0					
ANR	5256196	IfStatement	if ( sz == 0 )		5255935	15					
ANR	5256197	Condition	sz == 0	157:5:4364:4370	5255935	0	True				
ANR	5256198	EqualityExpression	sz == 0		5255935	0		==			
ANR	5256199	Identifier	sz		5255935	0					
ANR	5256200	PrimaryExpression	0		5255935	1					
ANR	5256201	CompoundStatement		62:14:1493:1493	5255935	1					
ANR	5256202	ExpressionStatement	"dprintf ( D_ALWAYS , ""error reading pool password (file may be empty)\\n"" )"	158:2:4377:4447	5255935	0	True				
ANR	5256203	CallExpression	"dprintf ( D_ALWAYS , ""error reading pool password (file may be empty)\\n"" )"		5255935	0					
ANR	5256204	Callee	dprintf		5255935	0					
ANR	5256205	Identifier	dprintf		5255935	0					
ANR	5256206	ArgumentList	D_ALWAYS		5255935	1					
ANR	5256207	Argument	D_ALWAYS		5255935	0					
ANR	5256208	Identifier	D_ALWAYS		5255935	0					
ANR	5256209	Argument	"""error reading pool password (file may be empty)\\n"""		5255935	1					
ANR	5256210	PrimaryExpression	"""error reading pool password (file may be empty)\\n"""		5255935	0					
ANR	5256211	ReturnStatement	return NULL ;	159:2:4451:4462	5255935	1	True				
ANR	5256212	Identifier	NULL		5255935	0					
ANR	5256213	ExpressionStatement	scrambled_pw [ sz ] = '\\0'	161:1:4468:4491	5255935	16	True				
ANR	5256214	AssignmentExpression	scrambled_pw [ sz ] = '\\0'		5255935	0		=			
ANR	5256215	ArrayIndexing	scrambled_pw [ sz ]		5255935	0					
ANR	5256216	Identifier	scrambled_pw		5255935	0					
ANR	5256217	Identifier	sz		5255935	1					
ANR	5256218	PrimaryExpression	'\\0'		5255935	1					
ANR	5256219	IdentifierDeclStatement	int len = strlen ( scrambled_pw ) ;	164:1:4557:4587	5255935	17	True				
ANR	5256220	IdentifierDecl	len = strlen ( scrambled_pw )		5255935	0					
ANR	5256221	IdentifierDeclType	int		5255935	0					
ANR	5256222	Identifier	len		5255935	1					
ANR	5256223	AssignmentExpression	len = strlen ( scrambled_pw )		5255935	2		=			
ANR	5256224	Identifier	len		5255935	0					
ANR	5256225	CallExpression	strlen ( scrambled_pw )		5255935	1					
ANR	5256226	Callee	strlen		5255935	0					
ANR	5256227	Identifier	strlen		5255935	0					
ANR	5256228	ArgumentList	scrambled_pw		5255935	1					
ANR	5256229	Argument	scrambled_pw		5255935	0					
ANR	5256230	Identifier	scrambled_pw		5255935	0					
ANR	5256231	IdentifierDeclStatement	char * pw = ( char * ) malloc ( len + 1 ) ;	165:1:4590:4624	5255935	18	True				
ANR	5256232	IdentifierDecl	* pw = ( char * ) malloc ( len + 1 )		5255935	0					
ANR	5256233	IdentifierDeclType	char *		5255935	0					
ANR	5256234	Identifier	pw		5255935	1					
ANR	5256235	AssignmentExpression	* pw = ( char * ) malloc ( len + 1 )		5255935	2		=			
ANR	5256236	Identifier	pw		5255935	0					
ANR	5256237	CastExpression	( char * ) malloc ( len + 1 )		5255935	1					
ANR	5256238	CastTarget	char *		5255935	0					
ANR	5256239	CallExpression	malloc ( len + 1 )		5255935	1					
ANR	5256240	Callee	malloc		5255935	0					
ANR	5256241	Identifier	malloc		5255935	0					
ANR	5256242	ArgumentList	len + 1		5255935	1					
ANR	5256243	Argument	len + 1		5255935	0					
ANR	5256244	AdditiveExpression	len + 1		5255935	0		+			
ANR	5256245	Identifier	len		5255935	0					
ANR	5256246	PrimaryExpression	1		5255935	1					
ANR	5256247	ExpressionStatement	"simple_scramble ( pw , scrambled_pw , len )"	166:1:4627:4665	5255935	19	True				
ANR	5256248	CallExpression	"simple_scramble ( pw , scrambled_pw , len )"		5255935	0					
ANR	5256249	Callee	simple_scramble		5255935	0					
ANR	5256250	Identifier	simple_scramble		5255935	0					
ANR	5256251	ArgumentList	pw		5255935	1					
ANR	5256252	Argument	pw		5255935	0					
ANR	5256253	Identifier	pw		5255935	0					
ANR	5256254	Argument	scrambled_pw		5255935	1					
ANR	5256255	Identifier	scrambled_pw		5255935	0					
ANR	5256256	Argument	len		5255935	2					
ANR	5256257	Identifier	len		5255935	0					
ANR	5256258	ExpressionStatement	pw [ len ] = '\\0'	167:1:4668:4682	5255935	20	True				
ANR	5256259	AssignmentExpression	pw [ len ] = '\\0'		5255935	0		=			
ANR	5256260	ArrayIndexing	pw [ len ]		5255935	0					
ANR	5256261	Identifier	pw		5255935	0					
ANR	5256262	Identifier	len		5255935	1					
ANR	5256263	PrimaryExpression	'\\0'		5255935	1					
ANR	5256264	ReturnStatement	return pw ;	169:1:4686:4695	5255935	21	True				
ANR	5256265	Identifier	pw		5255935	0					
ANR	5256266	ReturnType	char *		5255935	1					
ANR	5256267	Identifier	getStoredCredential		5255935	2					
ANR	5256268	ParameterList	"const char * username , const char * domain"		5255935	3					
ANR	5256269	Parameter	const char * username	95:26:2837:2856	5255935	0	True				
ANR	5256270	ParameterType	const char *		5255935	0					
ANR	5256271	Identifier	username		5255935	1					
ANR	5256272	Parameter	const char * domain	95:48:2859:2876	5255935	1	True				
ANR	5256273	ParameterType	const char *		5255935	0					
ANR	5256274	Identifier	domain		5255935	1					
ANR	5256275	CFGEntryNode	ENTRY		5255935		True				
ANR	5256276	CFGExitNode	EXIT		5255935		True				
ANR	5256277	Symbol	pw		5255935						
ANR	5256278	Symbol	fp		5255935						
ANR	5256279	Symbol	& st		5255935						
ANR	5256280	Symbol	* sz		5255935						
ANR	5256281	Symbol	strlen		5255935						
ANR	5256282	Symbol	len		5255935						
ANR	5256283	Symbol	param		5255935						
ANR	5256284	Symbol	st . st_uid		5255935						
ANR	5256285	Symbol	priv		5255935						
ANR	5256286	Symbol	get_my_uid		5255935						
ANR	5256287	Symbol	safe_fopen_wrapper_follow		5255935						
ANR	5256288	Symbol	strcmp		5255935						
ANR	5256289	Symbol	st		5255935						
ANR	5256290	Symbol	malloc		5255935						
ANR	5256291	Symbol	errno		5255935						
ANR	5256292	Symbol	scrambled_pw		5255935						
ANR	5256293	Symbol	NULL		5255935						
ANR	5256294	Symbol	sz		5255935						
ANR	5256295	Symbol	D_ALWAYS		5255935						
ANR	5256296	Symbol	fstat		5255935						
ANR	5256297	Symbol	set_root_priv		5255935						
ANR	5256298	Symbol	D_FULLDEBUG		5255935						
ANR	5256299	Symbol	fread		5255935						
ANR	5256300	Symbol	* pw		5255935						
ANR	5256301	Symbol	strerror		5255935						
ANR	5256302	Symbol	filename		5255935						
ANR	5256303	Symbol	* scrambled_pw		5255935						
ANR	5256304	Symbol	POOL_PASSWORD_USERNAME		5255935						
ANR	5256305	Symbol	fileno		5255935						
ANR	5256306	Symbol	domain		5255935						
ANR	5256307	Symbol	MAX_PASSWORD_LENGTH		5255935						
ANR	5256308	Symbol	username		5255935						
ANR	5256309	Symbol	* len		5255935						
ANR	5256310	Function	store_cred_service	172:0:4700:6458							
ANR	5256311	FunctionDef	"store_cred_service (const char * user , const char * pw , int mode)"		5256310	0					
ANR	5256312	CompoundStatement		173:0:4767:6458	5256310	0					
ANR	5256313	IdentifierDeclStatement	"const char * at = strchr ( user , '@' ) ;"	174:1:4770:4804	5256310	0	True				
ANR	5256314	IdentifierDecl	"* at = strchr ( user , '@' )"		5256310	0					
ANR	5256315	IdentifierDeclType	const char *		5256310	0					
ANR	5256316	Identifier	at		5256310	1					
ANR	5256317	AssignmentExpression	"* at = strchr ( user , '@' )"		5256310	2		=			
ANR	5256318	Identifier	at		5256310	0					
ANR	5256319	CallExpression	"strchr ( user , '@' )"		5256310	1					
ANR	5256320	Callee	strchr		5256310	0					
ANR	5256321	Identifier	strchr		5256310	0					
ANR	5256322	ArgumentList	user		5256310	1					
ANR	5256323	Argument	user		5256310	0					
ANR	5256324	Identifier	user		5256310	0					
ANR	5256325	Argument	'@'		5256310	1					
ANR	5256326	PrimaryExpression	'@'		5256310	0					
ANR	5256327	IfStatement	if ( ( at == NULL ) || ( at == user ) )		5256310	1					
ANR	5256328	Condition	( at == NULL ) || ( at == user )	175:5:4811:4838	5256310	0	True				
ANR	5256329	OrExpression	( at == NULL ) || ( at == user )		5256310	0		||			
ANR	5256330	EqualityExpression	at == NULL		5256310	0		==			
ANR	5256331	Identifier	at		5256310	0					
ANR	5256332	Identifier	NULL		5256310	1					
ANR	5256333	EqualityExpression	at == user		5256310	1		==			
ANR	5256334	Identifier	at		5256310	0					
ANR	5256335	Identifier	user		5256310	1					
ANR	5256336	CompoundStatement		3:35:73:73	5256310	1					
ANR	5256337	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred: malformed user name\\n"" )"	176:2:4845:4899	5256310	0	True				
ANR	5256338	CallExpression	"dprintf ( D_ALWAYS , ""store_cred: malformed user name\\n"" )"		5256310	0					
ANR	5256339	Callee	dprintf		5256310	0					
ANR	5256340	Identifier	dprintf		5256310	0					
ANR	5256341	ArgumentList	D_ALWAYS		5256310	1					
ANR	5256342	Argument	D_ALWAYS		5256310	0					
ANR	5256343	Identifier	D_ALWAYS		5256310	0					
ANR	5256344	Argument	"""store_cred: malformed user name\\n"""		5256310	1					
ANR	5256345	PrimaryExpression	"""store_cred: malformed user name\\n"""		5256310	0					
ANR	5256346	ReturnStatement	return FAILURE ;	177:2:4903:4917	5256310	1	True				
ANR	5256347	Identifier	FAILURE		5256310	0					
ANR	5256348	IfStatement	"if ( ( ( size_t ) ( at - user ) != strlen ( POOL_PASSWORD_USERNAME ) ) || ( memcmp ( user , POOL_PASSWORD_USERNAME , at - user ) != 0 ) )"		5256310	2					
ANR	5256349	Condition	"( ( size_t ) ( at - user ) != strlen ( POOL_PASSWORD_USERNAME ) ) || ( memcmp ( user , POOL_PASSWORD_USERNAME , at - user ) != 0 )"	179:5:4927:5045	5256310	0	True				
ANR	5256350	OrExpression	"( ( size_t ) ( at - user ) != strlen ( POOL_PASSWORD_USERNAME ) ) || ( memcmp ( user , POOL_PASSWORD_USERNAME , at - user ) != 0 )"		5256310	0		||			
ANR	5256351	EqualityExpression	( size_t ) ( at - user ) != strlen ( POOL_PASSWORD_USERNAME )		5256310	0		!=			
ANR	5256352	CastExpression	( size_t ) ( at - user )		5256310	0					
ANR	5256353	CastTarget	size_t		5256310	0					
ANR	5256354	AdditiveExpression	at - user		5256310	1		-			
ANR	5256355	Identifier	at		5256310	0					
ANR	5256356	Identifier	user		5256310	1					
ANR	5256357	CallExpression	strlen ( POOL_PASSWORD_USERNAME )		5256310	1					
ANR	5256358	Callee	strlen		5256310	0					
ANR	5256359	Identifier	strlen		5256310	0					
ANR	5256360	ArgumentList	POOL_PASSWORD_USERNAME		5256310	1					
ANR	5256361	Argument	POOL_PASSWORD_USERNAME		5256310	0					
ANR	5256362	Identifier	POOL_PASSWORD_USERNAME		5256310	0					
ANR	5256363	EqualityExpression	"memcmp ( user , POOL_PASSWORD_USERNAME , at - user ) != 0"		5256310	1		!=			
ANR	5256364	CallExpression	"memcmp ( user , POOL_PASSWORD_USERNAME , at - user )"		5256310	0					
ANR	5256365	Callee	memcmp		5256310	0					
ANR	5256366	Identifier	memcmp		5256310	0					
ANR	5256367	ArgumentList	user		5256310	1					
ANR	5256368	Argument	user		5256310	0					
ANR	5256369	Identifier	user		5256310	0					
ANR	5256370	Argument	POOL_PASSWORD_USERNAME		5256310	1					
ANR	5256371	Identifier	POOL_PASSWORD_USERNAME		5256310	0					
ANR	5256372	Argument	at - user		5256310	2					
ANR	5256373	AdditiveExpression	at - user		5256310	0		-			
ANR	5256374	Identifier	at		5256310	0					
ANR	5256375	Identifier	user		5256310	1					
ANR	5256376	PrimaryExpression	0		5256310	1					
ANR	5256377	CompoundStatement		9:1:281:281	5256310	1					
ANR	5256378	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred: only pool password is supported on UNIX\\n"" )"	182:2:5053:5127	5256310	0	True				
ANR	5256379	CallExpression	"dprintf ( D_ALWAYS , ""store_cred: only pool password is supported on UNIX\\n"" )"		5256310	0					
ANR	5256380	Callee	dprintf		5256310	0					
ANR	5256381	Identifier	dprintf		5256310	0					
ANR	5256382	ArgumentList	D_ALWAYS		5256310	1					
ANR	5256383	Argument	D_ALWAYS		5256310	0					
ANR	5256384	Identifier	D_ALWAYS		5256310	0					
ANR	5256385	Argument	"""store_cred: only pool password is supported on UNIX\\n"""		5256310	1					
ANR	5256386	PrimaryExpression	"""store_cred: only pool password is supported on UNIX\\n"""		5256310	0					
ANR	5256387	ReturnStatement	return FAILURE ;	183:2:5131:5145	5256310	1	True				
ANR	5256388	Identifier	FAILURE		5256310	0					
ANR	5256389	IdentifierDeclStatement	char * filename ;	186:1:5152:5166	5256310	3	True				
ANR	5256390	IdentifierDecl	* filename		5256310	0					
ANR	5256391	IdentifierDeclType	char *		5256310	0					
ANR	5256392	Identifier	filename		5256310	1					
ANR	5256393	IfStatement	if ( mode != QUERY_MODE )		5256310	4					
ANR	5256394	Condition	mode != QUERY_MODE	187:5:5173:5190	5256310	0	True				
ANR	5256395	EqualityExpression	mode != QUERY_MODE		5256310	0		!=			
ANR	5256396	Identifier	mode		5256310	0					
ANR	5256397	Identifier	QUERY_MODE		5256310	1					
ANR	5256398	CompoundStatement		15:25:425:425	5256310	1					
ANR	5256399	ExpressionStatement	"filename = param ( ""SEC_PASSWORD_FILE"" )"	188:2:5197:5234	5256310	0	True				
ANR	5256400	AssignmentExpression	"filename = param ( ""SEC_PASSWORD_FILE"" )"		5256310	0		=			
ANR	5256401	Identifier	filename		5256310	0					
ANR	5256402	CallExpression	"param ( ""SEC_PASSWORD_FILE"" )"		5256310	1					
ANR	5256403	Callee	param		5256310	0					
ANR	5256404	Identifier	param		5256310	0					
ANR	5256405	ArgumentList	"""SEC_PASSWORD_FILE"""		5256310	1					
ANR	5256406	Argument	"""SEC_PASSWORD_FILE"""		5256310	0					
ANR	5256407	PrimaryExpression	"""SEC_PASSWORD_FILE"""		5256310	0					
ANR	5256408	IfStatement	if ( filename == NULL )		5256310	1					
ANR	5256409	Condition	filename == NULL	189:6:5242:5257	5256310	0	True				
ANR	5256410	EqualityExpression	filename == NULL		5256310	0		==			
ANR	5256411	Identifier	filename		5256310	0					
ANR	5256412	Identifier	NULL		5256310	1					
ANR	5256413	CompoundStatement		17:24:492:492	5256310	1					
ANR	5256414	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred: SEC_PASSWORD_FILE not defined\\n"" )"	190:3:5265:5329	5256310	0	True				
ANR	5256415	CallExpression	"dprintf ( D_ALWAYS , ""store_cred: SEC_PASSWORD_FILE not defined\\n"" )"		5256310	0					
ANR	5256416	Callee	dprintf		5256310	0					
ANR	5256417	Identifier	dprintf		5256310	0					
ANR	5256418	ArgumentList	D_ALWAYS		5256310	1					
ANR	5256419	Argument	D_ALWAYS		5256310	0					
ANR	5256420	Identifier	D_ALWAYS		5256310	0					
ANR	5256421	Argument	"""store_cred: SEC_PASSWORD_FILE not defined\\n"""		5256310	1					
ANR	5256422	PrimaryExpression	"""store_cred: SEC_PASSWORD_FILE not defined\\n"""		5256310	0					
ANR	5256423	ReturnStatement	return FAILURE ;	191:3:5334:5348	5256310	1	True				
ANR	5256424	Identifier	FAILURE		5256310	0					
ANR	5256425	IdentifierDeclStatement	int answer ;	195:1:5359:5369	5256310	5	True				
ANR	5256426	IdentifierDecl	answer		5256310	0					
ANR	5256427	IdentifierDeclType	int		5256310	0					
ANR	5256428	Identifier	answer		5256310	1					
ANR	5256429	SwitchStatement	switch ( mode )		5256310	6					
ANR	5256430	Condition	mode	196:9:5380:5383	5256310	0	True				
ANR	5256431	Identifier	mode		5256310	0					
ANR	5256432	CompoundStatement		24:15:618:618	5256310	1					
ANR	5256433	Label	case ADD_MODE :	197:1:5389:5402	5256310	0	True				
ANR	5256434	Identifier	ADD_MODE		5256310	0					
ANR	5256435	CompoundStatement		37:2:921:954	5256310	1					
ANR	5256436	ExpressionStatement	answer = FAILURE	198:2:5408:5424	5256310	0	True				
ANR	5256437	AssignmentExpression	answer = FAILURE		5256310	0		=			
ANR	5256438	Identifier	answer		5256310	0					
ANR	5256439	Identifier	FAILURE		5256310	1					
ANR	5256440	IdentifierDeclStatement	size_t pw_sz = strlen ( pw ) ;	199:2:5428:5453	5256310	1	True				
ANR	5256441	IdentifierDecl	pw_sz = strlen ( pw )		5256310	0					
ANR	5256442	IdentifierDeclType	size_t		5256310	0					
ANR	5256443	Identifier	pw_sz		5256310	1					
ANR	5256444	AssignmentExpression	pw_sz = strlen ( pw )		5256310	2		=			
ANR	5256445	Identifier	pw_sz		5256310	0					
ANR	5256446	CallExpression	strlen ( pw )		5256310	1					
ANR	5256447	Callee	strlen		5256310	0					
ANR	5256448	Identifier	strlen		5256310	0					
ANR	5256449	ArgumentList	pw		5256310	1					
ANR	5256450	Argument	pw		5256310	0					
ANR	5256451	Identifier	pw		5256310	0					
ANR	5256452	IfStatement	if ( ! pw_sz )		5256310	2					
ANR	5256453	Condition	! pw_sz	200:6:5461:5466	5256310	0	True				
ANR	5256454	UnaryOperationExpression	! pw_sz		5256310	0					
ANR	5256455	UnaryOperator	!		5256310	0					
ANR	5256456	Identifier	pw_sz		5256310	1					
ANR	5256457	CompoundStatement		28:14:701:701	5256310	1					
ANR	5256458	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred_service: empty password not allowed\\n"" )"	201:3:5474:5554	5256310	0	True				
ANR	5256459	CallExpression	"dprintf ( D_ALWAYS , ""store_cred_service: empty password not allowed\\n"" )"		5256310	0					
ANR	5256460	Callee	dprintf		5256310	0					
ANR	5256461	Identifier	dprintf		5256310	0					
ANR	5256462	ArgumentList	D_ALWAYS		5256310	1					
ANR	5256463	Argument	D_ALWAYS		5256310	0					
ANR	5256464	Identifier	D_ALWAYS		5256310	0					
ANR	5256465	Argument	"""store_cred_service: empty password not allowed\\n"""		5256310	1					
ANR	5256466	PrimaryExpression	"""store_cred_service: empty password not allowed\\n"""		5256310	0					
ANR	5256467	BreakStatement	break ;	203:3:5559:5564	5256310	1	True				
ANR	5256468	IfStatement	if ( pw_sz > MAX_PASSWORD_LENGTH )		5256310	3					
ANR	5256469	Condition	pw_sz > MAX_PASSWORD_LENGTH	205:6:5576:5602	5256310	0	True				
ANR	5256470	RelationalExpression	pw_sz > MAX_PASSWORD_LENGTH		5256310	0		>			
ANR	5256471	Identifier	pw_sz		5256310	0					
ANR	5256472	Identifier	MAX_PASSWORD_LENGTH		5256310	1					
ANR	5256473	CompoundStatement		33:35:837:837	5256310	1					
ANR	5256474	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred_service: password too large\\n"" )"	206:3:5610:5671	5256310	0	True				
ANR	5256475	CallExpression	"dprintf ( D_ALWAYS , ""store_cred_service: password too large\\n"" )"		5256310	0					
ANR	5256476	Callee	dprintf		5256310	0					
ANR	5256477	Identifier	dprintf		5256310	0					
ANR	5256478	ArgumentList	D_ALWAYS		5256310	1					
ANR	5256479	Argument	D_ALWAYS		5256310	0					
ANR	5256480	Identifier	D_ALWAYS		5256310	0					
ANR	5256481	Argument	"""store_cred_service: password too large\\n"""		5256310	1					
ANR	5256482	PrimaryExpression	"""store_cred_service: password too large\\n"""		5256310	0					
ANR	5256483	BreakStatement	break ;	207:3:5676:5681	5256310	1	True				
ANR	5256484	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	209:2:5689:5722	5256310	4	True				
ANR	5256485	IdentifierDecl	priv = set_root_priv ( )		5256310	0					
ANR	5256486	IdentifierDeclType	priv_state		5256310	0					
ANR	5256487	Identifier	priv		5256310	1					
ANR	5256488	AssignmentExpression	priv = set_root_priv ( )		5256310	2		=			
ANR	5256489	Identifier	priv		5256310	0					
ANR	5256490	CallExpression	set_root_priv ( )		5256310	1					
ANR	5256491	Callee	set_root_priv		5256310	0					
ANR	5256492	Identifier	set_root_priv		5256310	0					
ANR	5256493	ArgumentList			5256310	1					
ANR	5256494	ExpressionStatement	"answer = write_password_file ( filename , pw )"	210:2:5726:5768	5256310	5	True				
ANR	5256495	AssignmentExpression	"answer = write_password_file ( filename , pw )"		5256310	0		=			
ANR	5256496	Identifier	answer		5256310	0					
ANR	5256497	CallExpression	"write_password_file ( filename , pw )"		5256310	1					
ANR	5256498	Callee	write_password_file		5256310	0					
ANR	5256499	Identifier	write_password_file		5256310	0					
ANR	5256500	ArgumentList	filename		5256310	1					
ANR	5256501	Argument	filename		5256310	0					
ANR	5256502	Identifier	filename		5256310	0					
ANR	5256503	Argument	pw		5256310	1					
ANR	5256504	Identifier	pw		5256310	0					
ANR	5256505	ExpressionStatement	set_priv ( priv )	211:2:5772:5786	5256310	6	True				
ANR	5256506	CallExpression	set_priv ( priv )		5256310	0					
ANR	5256507	Callee	set_priv		5256310	0					
ANR	5256508	Identifier	set_priv		5256310	0					
ANR	5256509	ArgumentList	priv		5256310	1					
ANR	5256510	Argument	priv		5256310	0					
ANR	5256511	Identifier	priv		5256310	0					
ANR	5256512	BreakStatement	break ;	212:2:5790:5795	5256310	7	True				
ANR	5256513	Label	case DELETE_MODE :	214:1:5801:5817	5256310	2	True				
ANR	5256514	Identifier	DELETE_MODE		5256310	0					
ANR	5256515	CompoundStatement		44:2:1092:1118	5256310	3					
ANR	5256516	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	215:2:5823:5856	5256310	0	True				
ANR	5256517	IdentifierDecl	priv = set_root_priv ( )		5256310	0					
ANR	5256518	IdentifierDeclType	priv_state		5256310	0					
ANR	5256519	Identifier	priv		5256310	1					
ANR	5256520	AssignmentExpression	priv = set_root_priv ( )		5256310	2		=			
ANR	5256521	Identifier	priv		5256310	0					
ANR	5256522	CallExpression	set_root_priv ( )		5256310	1					
ANR	5256523	Callee	set_root_priv		5256310	0					
ANR	5256524	Identifier	set_root_priv		5256310	0					
ANR	5256525	ArgumentList			5256310	1					
ANR	5256526	IdentifierDeclStatement	int err = unlink ( filename ) ;	216:2:5860:5886	5256310	1	True				
ANR	5256527	IdentifierDecl	err = unlink ( filename )		5256310	0					
ANR	5256528	IdentifierDeclType	int		5256310	0					
ANR	5256529	Identifier	err		5256310	1					
ANR	5256530	AssignmentExpression	err = unlink ( filename )		5256310	2		=			
ANR	5256531	Identifier	err		5256310	0					
ANR	5256532	CallExpression	unlink ( filename )		5256310	1					
ANR	5256533	Callee	unlink		5256310	0					
ANR	5256534	Identifier	unlink		5256310	0					
ANR	5256535	ArgumentList	filename		5256310	1					
ANR	5256536	Argument	filename		5256310	0					
ANR	5256537	Identifier	filename		5256310	0					
ANR	5256538	ExpressionStatement	set_priv ( priv )	217:2:5890:5904	5256310	2	True				
ANR	5256539	CallExpression	set_priv ( priv )		5256310	0					
ANR	5256540	Callee	set_priv		5256310	0					
ANR	5256541	Identifier	set_priv		5256310	0					
ANR	5256542	ArgumentList	priv		5256310	1					
ANR	5256543	Argument	priv		5256310	0					
ANR	5256544	Identifier	priv		5256310	0					
ANR	5256545	IfStatement	if ( ! err )		5256310	3					
ANR	5256546	Condition	! err	218:6:5912:5915	5256310	0	True				
ANR	5256547	UnaryOperationExpression	! err		5256310	0					
ANR	5256548	UnaryOperator	!		5256310	0					
ANR	5256549	Identifier	err		5256310	1					
ANR	5256550	CompoundStatement		46:12:1150:1150	5256310	1					
ANR	5256551	ExpressionStatement	answer = SUCCESS	219:3:5923:5939	5256310	0	True				
ANR	5256552	AssignmentExpression	answer = SUCCESS		5256310	0		=			
ANR	5256553	Identifier	answer		5256310	0					
ANR	5256554	Identifier	SUCCESS		5256310	1					
ANR	5256555	ElseStatement	else		5256310	0					
ANR	5256556	CompoundStatement		49:7:1184:1184	5256310	0					
ANR	5256557	ExpressionStatement	answer = FAILURE_NOT_FOUND	222:3:5957:5983	5256310	0	True				
ANR	5256558	AssignmentExpression	answer = FAILURE_NOT_FOUND		5256310	0		=			
ANR	5256559	Identifier	answer		5256310	0					
ANR	5256560	Identifier	FAILURE_NOT_FOUND		5256310	1					
ANR	5256561	BreakStatement	break ;	224:2:5991:5996	5256310	4	True				
ANR	5256562	Label	case QUERY_MODE :	226:1:6002:6017	5256310	4	True				
ANR	5256563	Identifier	QUERY_MODE		5256310	0					
ANR	5256564	CompoundStatement		55:2:1255:1321	5256310	5					
ANR	5256565	IdentifierDeclStatement	"char * password = getStoredCredential ( POOL_PASSWORD_USERNAME , NULL ) ;"	227:2:6023:6089	5256310	0	True				
ANR	5256566	IdentifierDecl	"* password = getStoredCredential ( POOL_PASSWORD_USERNAME , NULL )"		5256310	0					
ANR	5256567	IdentifierDeclType	char *		5256310	0					
ANR	5256568	Identifier	password		5256310	1					
ANR	5256569	AssignmentExpression	"* password = getStoredCredential ( POOL_PASSWORD_USERNAME , NULL )"		5256310	2		=			
ANR	5256570	Identifier	password		5256310	0					
ANR	5256571	CallExpression	"getStoredCredential ( POOL_PASSWORD_USERNAME , NULL )"		5256310	1					
ANR	5256572	Callee	getStoredCredential		5256310	0					
ANR	5256573	Identifier	getStoredCredential		5256310	0					
ANR	5256574	ArgumentList	POOL_PASSWORD_USERNAME		5256310	1					
ANR	5256575	Argument	POOL_PASSWORD_USERNAME		5256310	0					
ANR	5256576	Identifier	POOL_PASSWORD_USERNAME		5256310	0					
ANR	5256577	Argument	NULL		5256310	1					
ANR	5256578	Identifier	NULL		5256310	0					
ANR	5256579	IfStatement	if ( password )		5256310	1					
ANR	5256580	Condition	password	228:6:6097:6104	5256310	0	True				
ANR	5256581	Identifier	password		5256310	0					
ANR	5256582	CompoundStatement		56:16:1339:1339	5256310	1					
ANR	5256583	ExpressionStatement	answer = SUCCESS	229:3:6112:6128	5256310	0	True				
ANR	5256584	AssignmentExpression	answer = SUCCESS		5256310	0		=			
ANR	5256585	Identifier	answer		5256310	0					
ANR	5256586	Identifier	SUCCESS		5256310	1					
ANR	5256587	ExpressionStatement	"SecureZeroMemory ( password , MAX_PASSWORD_LENGTH )"	230:3:6133:6180	5256310	1	True				
ANR	5256588	CallExpression	"SecureZeroMemory ( password , MAX_PASSWORD_LENGTH )"		5256310	0					
ANR	5256589	Callee	SecureZeroMemory		5256310	0					
ANR	5256590	Identifier	SecureZeroMemory		5256310	0					
ANR	5256591	ArgumentList	password		5256310	1					
ANR	5256592	Argument	password		5256310	0					
ANR	5256593	Identifier	password		5256310	0					
ANR	5256594	Argument	MAX_PASSWORD_LENGTH		5256310	1					
ANR	5256595	Identifier	MAX_PASSWORD_LENGTH		5256310	0					
ANR	5256596	ExpressionStatement	free ( password )	231:3:6185:6199	5256310	2	True				
ANR	5256597	CallExpression	free ( password )		5256310	0					
ANR	5256598	Callee	free		5256310	0					
ANR	5256599	Identifier	free		5256310	0					
ANR	5256600	ArgumentList	password		5256310	1					
ANR	5256601	Argument	password		5256310	0					
ANR	5256602	Identifier	password		5256310	0					
ANR	5256603	ElseStatement	else		5256310	0					
ANR	5256604	CompoundStatement		61:7:1444:1444	5256310	0					
ANR	5256605	ExpressionStatement	answer = FAILURE_NOT_FOUND	234:3:6217:6243	5256310	0	True				
ANR	5256606	AssignmentExpression	answer = FAILURE_NOT_FOUND		5256310	0		=			
ANR	5256607	Identifier	answer		5256310	0					
ANR	5256608	Identifier	FAILURE_NOT_FOUND		5256310	1					
ANR	5256609	BreakStatement	break ;	236:2:6251:6256	5256310	2	True				
ANR	5256610	Label	default :	238:1:6262:6269	5256310	6	True				
ANR	5256611	Identifier	default		5256310	0					
ANR	5256612	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred_service: unknown mode: %d\\n"" , mode )"	239:2:6273:6338	5256310	7	True				
ANR	5256613	CallExpression	"dprintf ( D_ALWAYS , ""store_cred_service: unknown mode: %d\\n"" , mode )"		5256310	0					
ANR	5256614	Callee	dprintf		5256310	0					
ANR	5256615	Identifier	dprintf		5256310	0					
ANR	5256616	ArgumentList	D_ALWAYS		5256310	1					
ANR	5256617	Argument	D_ALWAYS		5256310	0					
ANR	5256618	Identifier	D_ALWAYS		5256310	0					
ANR	5256619	Argument	"""store_cred_service: unknown mode: %d\\n"""		5256310	1					
ANR	5256620	PrimaryExpression	"""store_cred_service: unknown mode: %d\\n"""		5256310	0					
ANR	5256621	Argument	mode		5256310	2					
ANR	5256622	Identifier	mode		5256310	0					
ANR	5256623	ExpressionStatement	answer = FAILURE	240:2:6342:6358	5256310	8	True				
ANR	5256624	AssignmentExpression	answer = FAILURE		5256310	0		=			
ANR	5256625	Identifier	answer		5256310	0					
ANR	5256626	Identifier	FAILURE		5256310	1					
ANR	5256627	IfStatement	if ( mode != QUERY_MODE )		5256310	7					
ANR	5256628	Condition	mode != QUERY_MODE	244:5:6398:6415	5256310	0	True				
ANR	5256629	EqualityExpression	mode != QUERY_MODE		5256310	0		!=			
ANR	5256630	Identifier	mode		5256310	0					
ANR	5256631	Identifier	QUERY_MODE		5256310	1					
ANR	5256632	CompoundStatement		72:25:1650:1650	5256310	1					
ANR	5256633	ExpressionStatement	free ( filename )	245:2:6422:6436	5256310	0	True				
ANR	5256634	CallExpression	free ( filename )		5256310	0					
ANR	5256635	Callee	free		5256310	0					
ANR	5256636	Identifier	free		5256310	0					
ANR	5256637	ArgumentList	filename		5256310	1					
ANR	5256638	Argument	filename		5256310	0					
ANR	5256639	Identifier	filename		5256310	0					
ANR	5256640	ReturnStatement	return answer ;	248:1:6443:6456	5256310	8	True				
ANR	5256641	Identifier	answer		5256310	0					
ANR	5256642	ReturnType	int		5256310	1					
ANR	5256643	Identifier	store_cred_service		5256310	2					
ANR	5256644	ParameterList	"const char * user , const char * pw , int mode"		5256310	3					
ANR	5256645	Parameter	const char * user	172:23:4723:4738	5256310	0	True				
ANR	5256646	ParameterType	const char *		5256310	0					
ANR	5256647	Identifier	user		5256310	1					
ANR	5256648	Parameter	const char * pw	172:41:4741:4754	5256310	1	True				
ANR	5256649	ParameterType	const char *		5256310	0					
ANR	5256650	Identifier	pw		5256310	1					
ANR	5256651	Parameter	int mode	172:57:4757:4764	5256310	2	True				
ANR	5256652	ParameterType	int		5256310	0					
ANR	5256653	Identifier	mode		5256310	1					
ANR	5256654	CFGEntryNode	ENTRY		5256310		True				
ANR	5256655	CFGExitNode	EXIT		5256310		True				
ANR	5256656	Symbol	getStoredCredential		5256310						
ANR	5256657	Symbol	pw		5256310						
ANR	5256658	Symbol	strchr		5256310						
ANR	5256659	Symbol	mode		5256310						
ANR	5256660	Symbol	strlen		5256310						
ANR	5256661	Symbol	password		5256310						
ANR	5256662	Symbol	memcmp		5256310						
ANR	5256663	Symbol	param		5256310						
ANR	5256664	Symbol	priv		5256310						
ANR	5256665	Symbol	NULL		5256310						
ANR	5256666	Symbol	SUCCESS		5256310						
ANR	5256667	Symbol	err		5256310						
ANR	5256668	Symbol	D_ALWAYS		5256310						
ANR	5256669	Symbol	set_root_priv		5256310						
ANR	5256670	Symbol	FAILURE		5256310						
ANR	5256671	Symbol	write_password_file		5256310						
ANR	5256672	Symbol	FAILURE_NOT_FOUND		5256310						
ANR	5256673	Symbol	at		5256310						
ANR	5256674	Symbol	filename		5256310						
ANR	5256675	Symbol	answer		5256310						
ANR	5256676	Symbol	unlink		5256310						
ANR	5256677	Symbol	POOL_PASSWORD_USERNAME		5256310						
ANR	5256678	Symbol	QUERY_MODE		5256310						
ANR	5256679	Symbol	MAX_PASSWORD_LENGTH		5256310						
ANR	5256680	Symbol	user		5256310						
ANR	5256681	Symbol	pw_sz		5256310						
ANR	5256682	DeclStmt									
ANR	5256683	Decl							FILE	FILE *	DebugFP
ANR	5256684	DeclStmt									
ANR	5256685	Decl							int	int	DebugFlags
ANR	5256686	Function	getStoredCredential	259:0:6567:7446							
ANR	5256687	FunctionDef	"getStoredCredential (const char * username , const char * domain)"		5256686	0					
ANR	5256688	CompoundStatement		260:0:6635:7446	5256686	0					
ANR	5256689	IdentifierDeclStatement	lsa_mgr lsaMan ;	261:1:6638:6652	5256686	0	True				
ANR	5256690	IdentifierDecl	lsaMan		5256686	0					
ANR	5256691	IdentifierDeclType	lsa_mgr		5256686	0					
ANR	5256692	Identifier	lsaMan		5256686	1					
ANR	5256693	IdentifierDeclStatement	char pw [ 255 ] ;	262:1:6655:6667	5256686	1	True				
ANR	5256694	IdentifierDecl	pw [ 255 ]		5256686	0					
ANR	5256695	IdentifierDeclType	char [ 255 ]		5256686	0					
ANR	5256696	Identifier	pw		5256686	1					
ANR	5256697	PrimaryExpression	255		5256686	2					
ANR	5256698	IdentifierDeclStatement	wchar_t w_fullname [ 512 ] ;	263:1:6670:6693	5256686	2	True				
ANR	5256699	IdentifierDecl	w_fullname [ 512 ]		5256686	0					
ANR	5256700	IdentifierDeclType	wchar_t [ 512 ]		5256686	0					
ANR	5256701	Identifier	w_fullname		5256686	1					
ANR	5256702	PrimaryExpression	512		5256686	2					
ANR	5256703	IdentifierDeclStatement	wchar_t * w_pw ;	264:1:6696:6709	5256686	3	True				
ANR	5256704	IdentifierDecl	* w_pw		5256686	0					
ANR	5256705	IdentifierDeclType	wchar_t *		5256686	0					
ANR	5256706	Identifier	w_pw		5256686	1					
ANR	5256707	IfStatement	if ( ! username || ! domain )		5256686	4					
ANR	5256708	Condition	! username || ! domain	266:6:6718:6737	5256686	0	True				
ANR	5256709	OrExpression	! username || ! domain		5256686	0		||			
ANR	5256710	UnaryOperationExpression	! username		5256686	0					
ANR	5256711	UnaryOperator	!		5256686	0					
ANR	5256712	Identifier	username		5256686	1					
ANR	5256713	UnaryOperationExpression	! domain		5256686	1					
ANR	5256714	UnaryOperator	!		5256686	0					
ANR	5256715	Identifier	domain		5256686	1					
ANR	5256716	CompoundStatement		7:29:105:105	5256686	1					
ANR	5256717	ReturnStatement	return NULL ;	267:2:6745:6756	5256686	0	True				
ANR	5256718	Identifier	NULL		5256686	0					
ANR	5256719	Statement	if	270:1:6763:6764	5256686	5	True				
ANR	5256720	Statement	(	270:4:6766:6766	5256686	6	True				
ANR	5256721	Statement	_snwprintf	270:6:6768:6777	5256686	7	True				
ANR	5256722	Statement	(	270:16:6778:6778	5256686	8	True				
ANR	5256723	Statement	w_fullname	270:17:6779:6788	5256686	9	True				
ANR	5256724	Statement	","	270:27:6789:6789	5256686	10	True				
ANR	5256725	Statement	254	270:29:6791:6793	5256686	11	True				
ANR	5256726	Statement	","	270:32:6794:6794	5256686	12	True				
ANR	5256727	Statement	L	270:34:6796:6796	5256686	13	True				
ANR	5256728	Statement	"""%S@%S"""	270:35:6797:6803	5256686	14	True				
ANR	5256729	Statement	","	270:42:6804:6804	5256686	15	True				
ANR	5256730	Statement	username	270:44:6806:6813	5256686	16	True				
ANR	5256731	Statement	","	270:52:6814:6814	5256686	17	True				
ANR	5256732	Statement	domain	270:54:6816:6821	5256686	18	True				
ANR	5256733	Statement	)	270:60:6822:6822	5256686	19	True				
ANR	5256734	Statement	<	270:62:6824:6824	5256686	20	True				
ANR	5256735	Statement	0	270:64:6826:6826	5256686	21	True				
ANR	5256736	Statement	)	270:66:6828:6828	5256686	22	True				
ANR	5256737	CompoundStatement		11:68:194:194	5256686	23					
ANR	5256738	ReturnStatement	return NULL ;	271:2:6834:6845	5256686	0	True				
ANR	5256739	Identifier	NULL		5256686	0					
ANR	5256740	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	275:1:6895:6928	5256686	24	True				
ANR	5256741	IdentifierDecl	priv = set_root_priv ( )		5256686	0					
ANR	5256742	IdentifierDeclType	priv_state		5256686	0					
ANR	5256743	Identifier	priv		5256686	1					
ANR	5256744	AssignmentExpression	priv = set_root_priv ( )		5256686	2		=			
ANR	5256745	Identifier	priv		5256686	0					
ANR	5256746	CallExpression	set_root_priv ( )		5256686	1					
ANR	5256747	Callee	set_root_priv		5256686	0					
ANR	5256748	Identifier	set_root_priv		5256686	0					
ANR	5256749	ArgumentList			5256686	1					
ANR	5256750	ExpressionStatement	w_pw = lsaMan . query ( w_fullname )	276:1:6931:6962	5256686	25	True				
ANR	5256751	AssignmentExpression	w_pw = lsaMan . query ( w_fullname )		5256686	0		=			
ANR	5256752	Identifier	w_pw		5256686	0					
ANR	5256753	CallExpression	lsaMan . query ( w_fullname )		5256686	1					
ANR	5256754	Callee	lsaMan . query		5256686	0					
ANR	5256755	MemberAccess	lsaMan . query		5256686	0					
ANR	5256756	Identifier	lsaMan		5256686	0					
ANR	5256757	Identifier	query		5256686	1					
ANR	5256758	ArgumentList	w_fullname		5256686	1					
ANR	5256759	Argument	w_fullname		5256686	0					
ANR	5256760	Identifier	w_fullname		5256686	0					
ANR	5256761	ExpressionStatement	set_priv ( priv )	277:1:6965:6979	5256686	26	True				
ANR	5256762	CallExpression	set_priv ( priv )		5256686	0					
ANR	5256763	Callee	set_priv		5256686	0					
ANR	5256764	Identifier	set_priv		5256686	0					
ANR	5256765	ArgumentList	priv		5256686	1					
ANR	5256766	Argument	priv		5256686	0					
ANR	5256767	Identifier	priv		5256686	0					
ANR	5256768	IfStatement	if ( ! w_pw )		5256686	27					
ANR	5256769	Condition	! w_pw	279:6:6988:6993	5256686	0	True				
ANR	5256770	UnaryOperationExpression	! w_pw		5256686	0					
ANR	5256771	UnaryOperator	!		5256686	0					
ANR	5256772	Identifier	w_pw		5256686	1					
ANR	5256773	CompoundStatement		20:15:361:361	5256686	1					
ANR	5256774	Statement	dprintf	280:2:7001:7007	5256686	0	True				
ANR	5256775	Statement	(	280:9:7008:7008	5256686	1	True				
ANR	5256776	Statement	D_ALWAYS	280:10:7009:7016	5256686	2	True				
ANR	5256777	Statement	","	280:18:7017:7017	5256686	3	True				
ANR	5256778	Statement	"""getStoredCredential(): Could not locate credential for user """	281:3:7023:7084	5256686	4	True				
ANR	5256779	Statement	"""'%s@%s'\\n"""	282:3:7089:7099	5256686	5	True				
ANR	5256780	Statement	","	282:14:7100:7100	5256686	6	True				
ANR	5256781	Statement	username	282:16:7102:7109	5256686	7	True				
ANR	5256782	Statement	","	282:24:7110:7110	5256686	8	True				
ANR	5256783	Statement	domain	282:26:7112:7117	5256686	9	True				
ANR	5256784	Statement	)	282:32:7118:7118	5256686	10	True				
ANR	5256785	ExpressionStatement		282:33:7119:7119	5256686	11	True				
ANR	5256786	ReturnStatement	return NULL ;	283:2:7123:7134	5256686	12	True				
ANR	5256787	Identifier	NULL		5256686	0					
ANR	5256788	IfStatement	"if ( _snprintf ( pw , sizeof ( pw ) , ""%S"" , w_pw ) < 0 )"		5256686	28					
ANR	5256789	Condition	"_snprintf ( pw , sizeof ( pw ) , ""%S"" , w_pw ) < 0"	286:6:7146:7186	5256686	0	True				
ANR	5256790	RelationalExpression	"_snprintf ( pw , sizeof ( pw ) , ""%S"" , w_pw ) < 0"		5256686	0		<			
ANR	5256791	CallExpression	"_snprintf ( pw , sizeof ( pw ) , ""%S"" , w_pw )"		5256686	0					
ANR	5256792	Callee	_snprintf		5256686	0					
ANR	5256793	Identifier	_snprintf		5256686	0					
ANR	5256794	ArgumentList	pw		5256686	1					
ANR	5256795	Argument	pw		5256686	0					
ANR	5256796	Identifier	pw		5256686	0					
ANR	5256797	Argument	sizeof ( pw )		5256686	1					
ANR	5256798	SizeofExpression	sizeof ( pw )		5256686	0					
ANR	5256799	Sizeof	sizeof		5256686	0					
ANR	5256800	SizeofOperand	pw		5256686	1					
ANR	5256801	Argument	"""%S"""		5256686	2					
ANR	5256802	PrimaryExpression	"""%S"""		5256686	0					
ANR	5256803	Argument	w_pw		5256686	3					
ANR	5256804	Identifier	w_pw		5256686	0					
ANR	5256805	PrimaryExpression	0		5256686	1					
ANR	5256806	CompoundStatement		27:50:554:554	5256686	1					
ANR	5256807	ReturnStatement	return NULL ;	287:2:7194:7205	5256686	0	True				
ANR	5256808	Identifier	NULL		5256686	0					
ANR	5256809	ExpressionStatement	"SecureZeroMemory ( w_pw , wcslen ( w_pw ) * sizeof ( wchar_t ) )"	291:1:7271:7323	5256686	29	True				
ANR	5256810	CallExpression	"SecureZeroMemory ( w_pw , wcslen ( w_pw ) * sizeof ( wchar_t ) )"		5256686	0					
ANR	5256811	Callee	SecureZeroMemory		5256686	0					
ANR	5256812	Identifier	SecureZeroMemory		5256686	0					
ANR	5256813	ArgumentList	w_pw		5256686	1					
ANR	5256814	Argument	w_pw		5256686	0					
ANR	5256815	Identifier	w_pw		5256686	0					
ANR	5256816	Argument	wcslen ( w_pw ) * sizeof ( wchar_t )		5256686	1					
ANR	5256817	MultiplicativeExpression	wcslen ( w_pw ) * sizeof ( wchar_t )		5256686	0		*			
ANR	5256818	CallExpression	wcslen ( w_pw )		5256686	0					
ANR	5256819	Callee	wcslen		5256686	0					
ANR	5256820	Identifier	wcslen		5256686	0					
ANR	5256821	ArgumentList	w_pw		5256686	1					
ANR	5256822	Argument	w_pw		5256686	0					
ANR	5256823	Identifier	w_pw		5256686	0					
ANR	5256824	SizeofExpression	sizeof ( wchar_t )		5256686	1					
ANR	5256825	Sizeof	sizeof		5256686	0					
ANR	5256826	SizeofOperand	wchar_t		5256686	1					
ANR	5256827	Statement	delete	292:1:7326:7331	5256686	30	True				
ANR	5256828	Statement	[	292:7:7332:7332	5256686	31	True				
ANR	5256829	Statement	]	292:8:7333:7333	5256686	32	True				
ANR	5256830	ExpressionStatement	w_pw	292:9:7334:7340	5256686	33	True				
ANR	5256831	Identifier	w_pw		5256686	0					
ANR	5256832	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Found credential for user '%s@%s'\\n"" , username , domain )"	294:1:7344:7424	5256686	34	True				
ANR	5256833	CallExpression	"dprintf ( D_FULLDEBUG , ""Found credential for user '%s@%s'\\n"" , username , domain )"		5256686	0					
ANR	5256834	Callee	dprintf		5256686	0					
ANR	5256835	Identifier	dprintf		5256686	0					
ANR	5256836	ArgumentList	D_FULLDEBUG		5256686	1					
ANR	5256837	Argument	D_FULLDEBUG		5256686	0					
ANR	5256838	Identifier	D_FULLDEBUG		5256686	0					
ANR	5256839	Argument	"""Found credential for user '%s@%s'\\n"""		5256686	1					
ANR	5256840	PrimaryExpression	"""Found credential for user '%s@%s'\\n"""		5256686	0					
ANR	5256841	Argument	username		5256686	2					
ANR	5256842	Identifier	username		5256686	0					
ANR	5256843	Argument	domain		5256686	3					
ANR	5256844	Identifier	domain		5256686	0					
ANR	5256845	ReturnStatement	return strdup ( pw ) ;	296:1:7427:7444	5256686	35	True				
ANR	5256846	CallExpression	strdup ( pw )		5256686	0					
ANR	5256847	Callee	strdup		5256686	0					
ANR	5256848	Identifier	strdup		5256686	0					
ANR	5256849	ArgumentList	pw		5256686	1					
ANR	5256850	Argument	pw		5256686	0					
ANR	5256851	Identifier	pw		5256686	0					
ANR	5256852	ReturnType	char *		5256686	1					
ANR	5256853	Identifier	getStoredCredential		5256686	2					
ANR	5256854	ParameterList	"const char * username , const char * domain"		5256686	3					
ANR	5256855	Parameter	const char * username	259:26:6593:6612	5256686	0	True				
ANR	5256856	ParameterType	const char *		5256686	0					
ANR	5256857	Identifier	username		5256686	1					
ANR	5256858	Parameter	const char * domain	259:48:6615:6632	5256686	1	True				
ANR	5256859	ParameterType	const char *		5256686	0					
ANR	5256860	Identifier	domain		5256686	1					
ANR	5256861	CFGEntryNode	ENTRY		5256686		True				
ANR	5256862	CFGExitNode	EXIT		5256686		True				
ANR	5256863	Symbol	NULL		5256686						
ANR	5256864	Symbol	_snprintf		5256686						
ANR	5256865	Symbol	lsaMan . query		5256686						
ANR	5256866	Symbol	pw		5256686						
ANR	5256867	Symbol	w_fullname		5256686						
ANR	5256868	Symbol	set_root_priv		5256686						
ANR	5256869	Symbol	D_FULLDEBUG		5256686						
ANR	5256870	Symbol	lsaMan		5256686						
ANR	5256871	Symbol	domain		5256686						
ANR	5256872	Symbol	wcslen		5256686						
ANR	5256873	Symbol	w_pw		5256686						
ANR	5256874	Symbol	priv		5256686						
ANR	5256875	Symbol	strdup		5256686						
ANR	5256876	Symbol	username		5256686						
ANR	5256877	Function	store_cred_service	299:0:7449:9952							
ANR	5256878	FunctionDef	"store_cred_service (const char * user , const char * pw , int mode)"		5256877	0					
ANR	5256879	CompoundStatement		300:0:7517:9952	5256877	0					
ANR	5256880	IdentifierDeclStatement	wchar_t pwbuf [ MAX_PASSWORD_LENGTH ] ;	302:1:7521:7555	5256877	0	True				
ANR	5256881	IdentifierDecl	pwbuf [ MAX_PASSWORD_LENGTH ]		5256877	0					
ANR	5256882	IdentifierDeclType	wchar_t [ MAX_PASSWORD_LENGTH ]		5256877	0					
ANR	5256883	Identifier	pwbuf		5256877	1					
ANR	5256884	Identifier	MAX_PASSWORD_LENGTH		5256877	2					
ANR	5256885	IdentifierDeclStatement	wchar_t userbuf [ MAX_PASSWORD_LENGTH ] ;	303:1:7558:7594	5256877	1	True				
ANR	5256886	IdentifierDecl	userbuf [ MAX_PASSWORD_LENGTH ]		5256877	0					
ANR	5256887	IdentifierDeclType	wchar_t [ MAX_PASSWORD_LENGTH ]		5256877	0					
ANR	5256888	Identifier	userbuf		5256877	1					
ANR	5256889	Identifier	MAX_PASSWORD_LENGTH		5256877	2					
ANR	5256890	IdentifierDeclStatement	priv_state priv ;	304:1:7597:7612	5256877	2	True				
ANR	5256891	IdentifierDecl	priv		5256877	0					
ANR	5256892	IdentifierDeclType	priv_state		5256877	0					
ANR	5256893	Identifier	priv		5256877	1					
ANR	5256894	IdentifierDeclStatement	int errno_result = 0 ;	305:1:7615:7635	5256877	3	True				
ANR	5256895	IdentifierDecl	errno_result = 0		5256877	0					
ANR	5256896	IdentifierDeclType	int		5256877	0					
ANR	5256897	Identifier	errno_result		5256877	1					
ANR	5256898	AssignmentExpression	errno_result = 0		5256877	2		=			
ANR	5256899	Identifier	errno_result		5256877	0					
ANR	5256900	PrimaryExpression	0		5256877	1					
ANR	5256901	IdentifierDeclStatement	int answer = FAILURE ;	306:1:7638:7658	5256877	4	True				
ANR	5256902	IdentifierDecl	answer = FAILURE		5256877	0					
ANR	5256903	IdentifierDeclType	int		5256877	0					
ANR	5256904	Identifier	answer		5256877	1					
ANR	5256905	AssignmentExpression	answer = FAILURE		5256877	2		=			
ANR	5256906	Identifier	FAILURE		5256877	0					
ANR	5256907	Identifier	FAILURE		5256877	1					
ANR	5256908	IdentifierDeclStatement	lsa_mgr lsa_man ;	307:1:7661:7676	5256877	5	True				
ANR	5256909	IdentifierDecl	lsa_man		5256877	0					
ANR	5256910	IdentifierDeclType	lsa_mgr		5256877	0					
ANR	5256911	Identifier	lsa_man		5256877	1					
ANR	5256912	IdentifierDeclStatement	wchar_t * pw_wc ;	308:1:7679:7693	5256877	6	True				
ANR	5256913	IdentifierDecl	* pw_wc		5256877	0					
ANR	5256914	IdentifierDeclType	wchar_t *		5256877	0					
ANR	5256915	Identifier	pw_wc		5256877	1					
ANR	5256916	IfStatement	if ( user )		5256877	7					
ANR	5256917	Condition	user	311:6:7761:7764	5256877	0	True				
ANR	5256918	Identifier	user		5256877	0					
ANR	5256919	CompoundStatement		12:13:250:250	5256877	1					
ANR	5256920	Statement	swprintf	312:2:7772:7779	5256877	0	True				
ANR	5256921	Statement	(	312:10:7780:7780	5256877	1	True				
ANR	5256922	Statement	userbuf	312:11:7781:7787	5256877	2	True				
ANR	5256923	Statement	","	312:18:7788:7788	5256877	3	True				
ANR	5256924	Statement	L	312:20:7790:7790	5256877	4	True				
ANR	5256925	Statement	"""%S"""	312:21:7791:7794	5256877	5	True				
ANR	5256926	Statement	","	312:25:7795:7795	5256877	6	True				
ANR	5256927	Statement	user	312:27:7797:7800	5256877	7	True				
ANR	5256928	Statement	)	312:31:7801:7801	5256877	8	True				
ANR	5256929	ExpressionStatement		312:32:7802:7802	5256877	9	True				
ANR	5256930	IfStatement	if ( ! can_switch_ids ( ) )		5256877	8					
ANR	5256931	Condition	! can_switch_ids ( )	315:5:7813:7829	5256877	0	True				
ANR	5256932	UnaryOperationExpression	! can_switch_ids ( )		5256877	0					
ANR	5256933	UnaryOperator	!		5256877	0					
ANR	5256934	CallExpression	can_switch_ids ( )		5256877	1					
ANR	5256935	Callee	can_switch_ids		5256877	0					
ANR	5256936	Identifier	can_switch_ids		5256877	0					
ANR	5256937	ArgumentList			5256877	1					
ANR	5256938	CompoundStatement		16:24:314:314	5256877	1					
ANR	5256939	ExpressionStatement	answer = FAILURE_NOT_SUPPORTED	316:2:7836:7866	5256877	0	True				
ANR	5256940	AssignmentExpression	answer = FAILURE_NOT_SUPPORTED		5256877	0		=			
ANR	5256941	Identifier	answer		5256877	0					
ANR	5256942	Identifier	FAILURE_NOT_SUPPORTED		5256877	1					
ANR	5256943	ElseStatement	else		5256877	0					
ANR	5256944	CompoundStatement		18:8:358:358	5256877	0					
ANR	5256945	ExpressionStatement	priv = set_root_priv ( )	318:2:7880:7902	5256877	0	True				
ANR	5256946	AssignmentExpression	priv = set_root_priv ( )		5256877	0		=			
ANR	5256947	Identifier	priv		5256877	0					
ANR	5256948	CallExpression	set_root_priv ( )		5256877	1					
ANR	5256949	Callee	set_root_priv		5256877	0					
ANR	5256950	Identifier	set_root_priv		5256877	0					
ANR	5256951	ArgumentList			5256877	1					
ANR	5256952	SwitchStatement	switch ( mode )		5256877	1					
ANR	5256953	Condition	mode	320:9:7916:7919	5256877	0	True				
ANR	5256954	Identifier	mode		5256877	0					
ANR	5256955	CompoundStatement		23:3:426:437	5256877	1					
ANR	5256956	Label	case ADD_MODE :	321:2:7926:7939	5256877	0	True				
ANR	5256957	Identifier	ADD_MODE		5256877	0					
ANR	5256958	IdentifierDeclStatement	bool retval ;	322:3:7944:7955	5256877	1	True				
ANR	5256959	IdentifierDecl	retval		5256877	0					
ANR	5256960	IdentifierDeclType	bool		5256877	0					
ANR	5256961	Identifier	retval		5256877	1					
ANR	5256962	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Adding %S to credential storage.\\n"" , userbuf )"	324:3:7961:8035	5256877	2	True				
ANR	5256963	CallExpression	"dprintf ( D_FULLDEBUG , ""Adding %S to credential storage.\\n"" , userbuf )"		5256877	0					
ANR	5256964	Callee	dprintf		5256877	0					
ANR	5256965	Identifier	dprintf		5256877	0					
ANR	5256966	ArgumentList	D_FULLDEBUG		5256877	1					
ANR	5256967	Argument	D_FULLDEBUG		5256877	0					
ANR	5256968	Identifier	D_FULLDEBUG		5256877	0					
ANR	5256969	Argument	"""Adding %S to credential storage.\\n"""		5256877	1					
ANR	5256970	PrimaryExpression	"""Adding %S to credential storage.\\n"""		5256877	0					
ANR	5256971	Argument	userbuf		5256877	2					
ANR	5256972	Identifier	userbuf		5256877	0					
ANR	5256973	ExpressionStatement	"retval = isValidCredential ( user , pw )"	327:3:8041:8077	5256877	3	True				
ANR	5256974	AssignmentExpression	"retval = isValidCredential ( user , pw )"		5256877	0		=			
ANR	5256975	Identifier	retval		5256877	0					
ANR	5256976	CallExpression	"isValidCredential ( user , pw )"		5256877	1					
ANR	5256977	Callee	isValidCredential		5256877	0					
ANR	5256978	Identifier	isValidCredential		5256877	0					
ANR	5256979	ArgumentList	user		5256877	1					
ANR	5256980	Argument	user		5256877	0					
ANR	5256981	Identifier	user		5256877	0					
ANR	5256982	Argument	pw		5256877	1					
ANR	5256983	Identifier	pw		5256877	0					
ANR	5256984	IfStatement	if ( ! retval )		5256877	4					
ANR	5256985	Condition	! retval	329:8:8088:8095	5256877	0	True				
ANR	5256986	UnaryOperationExpression	! retval		5256877	0					
ANR	5256987	UnaryOperator	!		5256877	0					
ANR	5256988	Identifier	retval		5256877	1					
ANR	5256989	CompoundStatement		30:19:581:581	5256877	1					
ANR	5256990	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""store_cred: tried to add invalid credential\\n"" )"	330:4:8105:8174	5256877	0	True				
ANR	5256991	CallExpression	"dprintf ( D_FULLDEBUG , ""store_cred: tried to add invalid credential\\n"" )"		5256877	0					
ANR	5256992	Callee	dprintf		5256877	0					
ANR	5256993	Identifier	dprintf		5256877	0					
ANR	5256994	ArgumentList	D_FULLDEBUG		5256877	1					
ANR	5256995	Argument	D_FULLDEBUG		5256877	0					
ANR	5256996	Identifier	D_FULLDEBUG		5256877	0					
ANR	5256997	Argument	"""store_cred: tried to add invalid credential\\n"""		5256877	1					
ANR	5256998	PrimaryExpression	"""store_cred: tried to add invalid credential\\n"""		5256877	0					
ANR	5256999	ExpressionStatement	answer = FAILURE_BAD_PASSWORD	331:4:8180:8207	5256877	1	True				
ANR	5257000	AssignmentExpression	answer = FAILURE_BAD_PASSWORD		5256877	0		=			
ANR	5257001	Identifier	answer		5256877	0					
ANR	5257002	Identifier	FAILURE_BAD_PASSWORD		5256877	1					
ANR	5257003	BreakStatement	break ;	332:4:8214:8219	5256877	2	True				
ANR	5257004	IfStatement	if ( pw )		5256877	5					
ANR	5257005	Condition	pw	335:7:8247:8248	5256877	0	True				
ANR	5257006	Identifier	pw		5256877	0					
ANR	5257007	CompoundStatement		36:11:733:733	5256877	1					
ANR	5257008	Statement	swprintf	336:4:8257:8264	5256877	0	True				
ANR	5257009	Statement	(	336:12:8265:8265	5256877	1	True				
ANR	5257010	Statement	pwbuf	336:13:8266:8270	5256877	2	True				
ANR	5257011	Statement	","	336:18:8271:8271	5256877	3	True				
ANR	5257012	Statement	L	336:20:8273:8273	5256877	4	True				
ANR	5257013	Statement	"""%S"""	336:21:8274:8277	5256877	5	True				
ANR	5257014	Statement	","	336:25:8278:8278	5256877	6	True				
ANR	5257015	Statement	pw	336:27:8280:8281	5256877	7	True				
ANR	5257016	Statement	)	336:29:8282:8282	5256877	8	True				
ANR	5257017	ExpressionStatement		336:30:8283:8283	5256877	9	True				
ANR	5257018	IfStatement	"if ( ! lsa_man . add ( userbuf , pwbuf ) )"		5256877	6					
ANR	5257019	Condition	"! lsa_man . add ( userbuf , pwbuf )"	341:7:8379:8406	5256877	0	True				
ANR	5257020	UnaryOperationExpression	"! lsa_man . add ( userbuf , pwbuf )"		5256877	0					
ANR	5257021	UnaryOperator	!		5256877	0					
ANR	5257022	CallExpression	"lsa_man . add ( userbuf , pwbuf )"		5256877	1					
ANR	5257023	Callee	lsa_man . add		5256877	0					
ANR	5257024	MemberAccess	lsa_man . add		5256877	0					
ANR	5257025	Identifier	lsa_man		5256877	0					
ANR	5257026	Identifier	add		5256877	1					
ANR	5257027	ArgumentList	userbuf		5256877	1					
ANR	5257028	Argument	userbuf		5256877	0					
ANR	5257029	Identifier	userbuf		5256877	0					
ANR	5257030	Argument	pwbuf		5256877	1					
ANR	5257031	Identifier	pwbuf		5256877	0					
ANR	5257032	CompoundStatement		42:36:890:890	5256877	1					
ANR	5257033	ExpressionStatement	answer = FAILURE	342:4:8414:8430	5256877	0	True				
ANR	5257034	AssignmentExpression	answer = FAILURE		5256877	0		=			
ANR	5257035	Identifier	answer		5256877	0					
ANR	5257036	Identifier	FAILURE		5256877	1					
ANR	5257037	ElseStatement	else		5256877	0					
ANR	5257038	CompoundStatement		44:10:924:924	5256877	0					
ANR	5257039	ExpressionStatement	answer = SUCCESS	344:4:8448:8464	5256877	0	True				
ANR	5257040	AssignmentExpression	answer = SUCCESS		5256877	0		=			
ANR	5257041	Identifier	answer		5256877	0					
ANR	5257042	Identifier	SUCCESS		5256877	1					
ANR	5257043	ExpressionStatement	"SecureZeroMemory ( pwbuf , MAX_PASSWORD_LENGTH * sizeof ( wchar_t ) )"	346:3:8474:8534	5256877	7	True				
ANR	5257044	CallExpression	"SecureZeroMemory ( pwbuf , MAX_PASSWORD_LENGTH * sizeof ( wchar_t ) )"		5256877	0					
ANR	5257045	Callee	SecureZeroMemory		5256877	0					
ANR	5257046	Identifier	SecureZeroMemory		5256877	0					
ANR	5257047	ArgumentList	pwbuf		5256877	1					
ANR	5257048	Argument	pwbuf		5256877	0					
ANR	5257049	Identifier	pwbuf		5256877	0					
ANR	5257050	Argument	MAX_PASSWORD_LENGTH * sizeof ( wchar_t )		5256877	1					
ANR	5257051	MultiplicativeExpression	MAX_PASSWORD_LENGTH * sizeof ( wchar_t )		5256877	0		*			
ANR	5257052	Identifier	MAX_PASSWORD_LENGTH		5256877	0					
ANR	5257053	SizeofExpression	sizeof ( wchar_t )		5256877	1					
ANR	5257054	Sizeof	sizeof		5256877	0					
ANR	5257055	SizeofOperand	wchar_t		5256877	1					
ANR	5257056	BreakStatement	break ;	347:3:8540:8545	5256877	8	True				
ANR	5257057	Label	case DELETE_MODE :	348:2:8549:8565	5256877	9	True				
ANR	5257058	Identifier	DELETE_MODE		5256877	0					
ANR	5257059	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Deleting %S from credential storage.\\n"" , userbuf )"	349:3:8570:8648	5256877	10	True				
ANR	5257060	CallExpression	"dprintf ( D_FULLDEBUG , ""Deleting %S from credential storage.\\n"" , userbuf )"		5256877	0					
ANR	5257061	Callee	dprintf		5256877	0					
ANR	5257062	Identifier	dprintf		5256877	0					
ANR	5257063	ArgumentList	D_FULLDEBUG		5256877	1					
ANR	5257064	Argument	D_FULLDEBUG		5256877	0					
ANR	5257065	Identifier	D_FULLDEBUG		5256877	0					
ANR	5257066	Argument	"""Deleting %S from credential storage.\\n"""		5256877	1					
ANR	5257067	PrimaryExpression	"""Deleting %S from credential storage.\\n"""		5256877	0					
ANR	5257068	Argument	userbuf		5256877	2					
ANR	5257069	Identifier	userbuf		5256877	0					
ANR	5257070	ExpressionStatement	pw_wc = lsa_man . query ( userbuf )	352:3:8654:8684	5256877	11	True				
ANR	5257071	AssignmentExpression	pw_wc = lsa_man . query ( userbuf )		5256877	0		=			
ANR	5257072	Identifier	pw_wc		5256877	0					
ANR	5257073	CallExpression	lsa_man . query ( userbuf )		5256877	1					
ANR	5257074	Callee	lsa_man . query		5256877	0					
ANR	5257075	MemberAccess	lsa_man . query		5256877	0					
ANR	5257076	Identifier	lsa_man		5256877	0					
ANR	5257077	Identifier	query		5256877	1					
ANR	5257078	ArgumentList	userbuf		5256877	1					
ANR	5257079	Argument	userbuf		5256877	0					
ANR	5257080	Identifier	userbuf		5256877	0					
ANR	5257081	IfStatement	if ( ! pw_wc )		5256877	12					
ANR	5257082	Condition	! pw_wc	353:8:8694:8699	5256877	0	True				
ANR	5257083	UnaryOperationExpression	! pw_wc		5256877	0					
ANR	5257084	UnaryOperator	!		5256877	0					
ANR	5257085	Identifier	pw_wc		5256877	1					
ANR	5257086	CompoundStatement		54:17:1185:1185	5256877	1					
ANR	5257087	ExpressionStatement	answer = FAILURE_NOT_FOUND	354:4:8709:8735	5256877	0	True				
ANR	5257088	AssignmentExpression	answer = FAILURE_NOT_FOUND		5256877	0		=			
ANR	5257089	Identifier	answer		5256877	0					
ANR	5257090	Identifier	FAILURE_NOT_FOUND		5256877	1					
ANR	5257091	BreakStatement	break ;	355:4:8741:8746	5256877	1	True				
ANR	5257092	ElseStatement	else		5256877	0					
ANR	5257093	CompoundStatement		58:8:1243:1243	5256877	0					
ANR	5257094	ExpressionStatement	"SecureZeroMemory ( pw_wc , wcslen ( pw_wc ) )"	358:4:8767:8805	5256877	0	True				
ANR	5257095	CallExpression	"SecureZeroMemory ( pw_wc , wcslen ( pw_wc ) )"		5256877	0					
ANR	5257096	Callee	SecureZeroMemory		5256877	0					
ANR	5257097	Identifier	SecureZeroMemory		5256877	0					
ANR	5257098	ArgumentList	pw_wc		5256877	1					
ANR	5257099	Argument	pw_wc		5256877	0					
ANR	5257100	Identifier	pw_wc		5256877	0					
ANR	5257101	Argument	wcslen ( pw_wc )		5256877	1					
ANR	5257102	CallExpression	wcslen ( pw_wc )		5256877	0					
ANR	5257103	Callee	wcslen		5256877	0					
ANR	5257104	Identifier	wcslen		5256877	0					
ANR	5257105	ArgumentList	pw_wc		5256877	1					
ANR	5257106	Argument	pw_wc		5256877	0					
ANR	5257107	Identifier	pw_wc		5256877	0					
ANR	5257108	Statement	delete	359:4:8811:8816	5256877	1	True				
ANR	5257109	Statement	[	359:10:8817:8817	5256877	2	True				
ANR	5257110	Statement	]	359:11:8818:8818	5256877	3	True				
ANR	5257111	ExpressionStatement	pw_wc	359:13:8820:8825	5256877	4	True				
ANR	5257112	Identifier	pw_wc		5256877	0					
ANR	5257113	IfStatement	"if ( ! isValidCredential ( user , pw ) )"		5256877	13					
ANR	5257114	Condition	"! isValidCredential ( user , pw )"	362:7:8840:8867	5256877	0	True				
ANR	5257115	UnaryOperationExpression	"! isValidCredential ( user , pw )"		5256877	0					
ANR	5257116	UnaryOperator	!		5256877	0					
ANR	5257117	CallExpression	"isValidCredential ( user , pw )"		5256877	1					
ANR	5257118	Callee	isValidCredential		5256877	0					
ANR	5257119	Identifier	isValidCredential		5256877	0					
ANR	5257120	ArgumentList	user		5256877	1					
ANR	5257121	Argument	user		5256877	0					
ANR	5257122	Identifier	user		5256877	0					
ANR	5257123	Argument	pw		5256877	1					
ANR	5257124	Identifier	pw		5256877	0					
ANR	5257125	CompoundStatement		63:37:1352:1352	5256877	1					
ANR	5257126	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""store_cred: invalid credential given for delete\\n"" )"	363:4:8876:8949	5256877	0	True				
ANR	5257127	CallExpression	"dprintf ( D_FULLDEBUG , ""store_cred: invalid credential given for delete\\n"" )"		5256877	0					
ANR	5257128	Callee	dprintf		5256877	0					
ANR	5257129	Identifier	dprintf		5256877	0					
ANR	5257130	ArgumentList	D_FULLDEBUG		5256877	1					
ANR	5257131	Argument	D_FULLDEBUG		5256877	0					
ANR	5257132	Identifier	D_FULLDEBUG		5256877	0					
ANR	5257133	Argument	"""store_cred: invalid credential given for delete\\n"""		5256877	1					
ANR	5257134	PrimaryExpression	"""store_cred: invalid credential given for delete\\n"""		5256877	0					
ANR	5257135	ExpressionStatement	answer = FAILURE_BAD_PASSWORD	364:4:8955:8984	5256877	1	True				
ANR	5257136	AssignmentExpression	answer = FAILURE_BAD_PASSWORD		5256877	0		=			
ANR	5257137	Identifier	answer		5256877	0					
ANR	5257138	Identifier	FAILURE_BAD_PASSWORD		5256877	1					
ANR	5257139	BreakStatement	break ;	365:4:8990:8995	5256877	2	True				
ANR	5257140	IfStatement	if ( ! lsa_man . remove ( userbuf ) )		5256877	14					
ANR	5257141	Condition	! lsa_man . remove ( userbuf )	370:7:9060:9083	5256877	0	True				
ANR	5257142	UnaryOperationExpression	! lsa_man . remove ( userbuf )		5256877	0					
ANR	5257143	UnaryOperator	!		5256877	0					
ANR	5257144	CallExpression	lsa_man . remove ( userbuf )		5256877	1					
ANR	5257145	Callee	lsa_man . remove		5256877	0					
ANR	5257146	MemberAccess	lsa_man . remove		5256877	0					
ANR	5257147	Identifier	lsa_man		5256877	0					
ANR	5257148	Identifier	remove		5256877	1					
ANR	5257149	ArgumentList	userbuf		5256877	1					
ANR	5257150	Argument	userbuf		5256877	0					
ANR	5257151	Identifier	userbuf		5256877	0					
ANR	5257152	CompoundStatement		71:33:1568:1568	5256877	1					
ANR	5257153	ExpressionStatement	answer = FAILURE	371:4:9092:9108	5256877	0	True				
ANR	5257154	AssignmentExpression	answer = FAILURE		5256877	0		=			
ANR	5257155	Identifier	answer		5256877	0					
ANR	5257156	Identifier	FAILURE		5256877	1					
ANR	5257157	ElseStatement	else		5256877	0					
ANR	5257158	CompoundStatement		73:10:1602:1602	5256877	0					
ANR	5257159	ExpressionStatement	answer = SUCCESS	373:4:9126:9142	5256877	0	True				
ANR	5257160	AssignmentExpression	answer = SUCCESS		5256877	0		=			
ANR	5257161	Identifier	answer		5256877	0					
ANR	5257162	Identifier	SUCCESS		5256877	1					
ANR	5257163	BreakStatement	break ;	375:3:9152:9157	5256877	15	True				
ANR	5257164	Label	case QUERY_MODE :	376:2:9161:9176	5256877	16	True				
ANR	5257165	Identifier	QUERY_MODE		5256877	0					
ANR	5257166	CompoundStatement		82:4:1762:1793	5256877	17					
ANR	5257167	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Checking for %S in credential storage.\\n"" , userbuf )"	378:4:9187:9269	5256877	0	True				
ANR	5257168	CallExpression	"dprintf ( D_FULLDEBUG , ""Checking for %S in credential storage.\\n"" , userbuf )"		5256877	0					
ANR	5257169	Callee	dprintf		5256877	0					
ANR	5257170	Identifier	dprintf		5256877	0					
ANR	5257171	ArgumentList	D_FULLDEBUG		5256877	1					
ANR	5257172	Argument	D_FULLDEBUG		5256877	0					
ANR	5257173	Identifier	D_FULLDEBUG		5256877	0					
ANR	5257174	Argument	"""Checking for %S in credential storage.\\n"""		5256877	1					
ANR	5257175	PrimaryExpression	"""Checking for %S in credential storage.\\n"""		5256877	0					
ANR	5257176	Argument	userbuf		5256877	2					
ANR	5257177	Identifier	userbuf		5256877	0					
ANR	5257178	IdentifierDeclStatement	char passw [ MAX_PASSWORD_LENGTH ] ;	381:4:9280:9311	5256877	1	True				
ANR	5257179	IdentifierDecl	passw [ MAX_PASSWORD_LENGTH ]		5256877	0					
ANR	5257180	IdentifierDeclType	char [ MAX_PASSWORD_LENGTH ]		5256877	0					
ANR	5257181	Identifier	passw		5256877	1					
ANR	5257182	Identifier	MAX_PASSWORD_LENGTH		5256877	2					
ANR	5257183	ExpressionStatement	pw_wc = lsa_man . query ( userbuf )	382:4:9317:9347	5256877	2	True				
ANR	5257184	AssignmentExpression	pw_wc = lsa_man . query ( userbuf )		5256877	0		=			
ANR	5257185	Identifier	pw_wc		5256877	0					
ANR	5257186	CallExpression	lsa_man . query ( userbuf )		5256877	1					
ANR	5257187	Callee	lsa_man . query		5256877	0					
ANR	5257188	MemberAccess	lsa_man . query		5256877	0					
ANR	5257189	Identifier	lsa_man		5256877	0					
ANR	5257190	Identifier	query		5256877	1					
ANR	5257191	ArgumentList	userbuf		5256877	1					
ANR	5257192	Argument	userbuf		5256877	0					
ANR	5257193	Identifier	userbuf		5256877	0					
ANR	5257194	IfStatement	if ( ! pw_wc )		5256877	3					
ANR	5257195	Condition	! pw_wc	384:9:9363:9368	5256877	0	True				
ANR	5257196	UnaryOperationExpression	! pw_wc		5256877	0					
ANR	5257197	UnaryOperator	!		5256877	0					
ANR	5257198	Identifier	pw_wc		5256877	1					
ANR	5257199	CompoundStatement		85:18:1854:1854	5256877	1					
ANR	5257200	ExpressionStatement	answer = FAILURE_NOT_FOUND	385:5:9379:9405	5256877	0	True				
ANR	5257201	AssignmentExpression	answer = FAILURE_NOT_FOUND		5256877	0		=			
ANR	5257202	Identifier	answer		5256877	0					
ANR	5257203	Identifier	FAILURE_NOT_FOUND		5256877	1					
ANR	5257204	ElseStatement	else		5256877	0					
ANR	5257205	CompoundStatement		87:11:1900:1900	5256877	0					
ANR	5257206	ExpressionStatement	"sprintf ( passw , ""%S"" , pw_wc )"	387:5:9425:9452	5256877	0	True				
ANR	5257207	CallExpression	"sprintf ( passw , ""%S"" , pw_wc )"		5256877	0					
ANR	5257208	Callee	sprintf		5256877	0					
ANR	5257209	Identifier	sprintf		5256877	0					
ANR	5257210	ArgumentList	passw		5256877	1					
ANR	5257211	Argument	passw		5256877	0					
ANR	5257212	Identifier	passw		5256877	0					
ANR	5257213	Argument	"""%S"""		5256877	1					
ANR	5257214	PrimaryExpression	"""%S"""		5256877	0					
ANR	5257215	Argument	pw_wc		5256877	2					
ANR	5257216	Identifier	pw_wc		5256877	0					
ANR	5257217	ExpressionStatement	"SecureZeroMemory ( pw_wc , wcslen ( pw_wc ) )"	388:5:9459:9497	5256877	1	True				
ANR	5257218	CallExpression	"SecureZeroMemory ( pw_wc , wcslen ( pw_wc ) )"		5256877	0					
ANR	5257219	Callee	SecureZeroMemory		5256877	0					
ANR	5257220	Identifier	SecureZeroMemory		5256877	0					
ANR	5257221	ArgumentList	pw_wc		5256877	1					
ANR	5257222	Argument	pw_wc		5256877	0					
ANR	5257223	Identifier	pw_wc		5256877	0					
ANR	5257224	Argument	wcslen ( pw_wc )		5256877	1					
ANR	5257225	CallExpression	wcslen ( pw_wc )		5256877	0					
ANR	5257226	Callee	wcslen		5256877	0					
ANR	5257227	Identifier	wcslen		5256877	0					
ANR	5257228	ArgumentList	pw_wc		5256877	1					
ANR	5257229	Argument	pw_wc		5256877	0					
ANR	5257230	Identifier	pw_wc		5256877	0					
ANR	5257231	Statement	delete	389:5:9504:9509	5256877	2	True				
ANR	5257232	Statement	[	389:11:9510:9510	5256877	3	True				
ANR	5257233	Statement	]	389:12:9511:9511	5256877	4	True				
ANR	5257234	ExpressionStatement	pw_wc	389:14:9513:9518	5256877	5	True				
ANR	5257235	Identifier	pw_wc		5256877	0					
ANR	5257236	IfStatement	"if ( isValidCredential ( user , passw ) )"		5256877	6					
ANR	5257237	Condition	"isValidCredential ( user , passw )"	391:10:9536:9565	5256877	0	True				
ANR	5257238	CallExpression	"isValidCredential ( user , passw )"		5256877	0					
ANR	5257239	Callee	isValidCredential		5256877	0					
ANR	5257240	Identifier	isValidCredential		5256877	0					
ANR	5257241	ArgumentList	user		5256877	1					
ANR	5257242	Argument	user		5256877	0					
ANR	5257243	Identifier	user		5256877	0					
ANR	5257244	Argument	passw		5256877	1					
ANR	5257245	Identifier	passw		5256877	0					
ANR	5257246	CompoundStatement		92:43:2051:2051	5256877	1					
ANR	5257247	ExpressionStatement	answer = SUCCESS	392:6:9577:9593	5256877	0	True				
ANR	5257248	AssignmentExpression	answer = SUCCESS		5256877	0		=			
ANR	5257249	Identifier	answer		5256877	0					
ANR	5257250	Identifier	SUCCESS		5256877	1					
ANR	5257251	ElseStatement	else		5256877	0					
ANR	5257252	CompoundStatement		94:12:2089:2089	5256877	0					
ANR	5257253	ExpressionStatement	answer = FAILURE_BAD_PASSWORD	394:6:9615:9644	5256877	0	True				
ANR	5257254	AssignmentExpression	answer = FAILURE_BAD_PASSWORD		5256877	0		=			
ANR	5257255	Identifier	answer		5256877	0					
ANR	5257256	Identifier	FAILURE_BAD_PASSWORD		5256877	1					
ANR	5257257	ExpressionStatement	"SecureZeroMemory ( passw , MAX_PASSWORD_LENGTH )"	397:5:9664:9708	5256877	7	True				
ANR	5257258	CallExpression	"SecureZeroMemory ( passw , MAX_PASSWORD_LENGTH )"		5256877	0					
ANR	5257259	Callee	SecureZeroMemory		5256877	0					
ANR	5257260	Identifier	SecureZeroMemory		5256877	0					
ANR	5257261	ArgumentList	passw		5256877	1					
ANR	5257262	Argument	passw		5256877	0					
ANR	5257263	Identifier	passw		5256877	0					
ANR	5257264	Argument	MAX_PASSWORD_LENGTH		5256877	1					
ANR	5257265	Identifier	MAX_PASSWORD_LENGTH		5256877	0					
ANR	5257266	BreakStatement	break ;	399:4:9720:9725	5256877	4	True				
ANR	5257267	Label	default :	401:2:9734:9741	5256877	18	True				
ANR	5257268	Identifier	default		5256877	0					
ANR	5257269	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred: Unknown access mode (%d).\\n"" , mode )"	402:4:9747:9815	5256877	19	True				
ANR	5257270	CallExpression	"dprintf ( D_ALWAYS , ""store_cred: Unknown access mode (%d).\\n"" , mode )"		5256877	0					
ANR	5257271	Callee	dprintf		5256877	0					
ANR	5257272	Identifier	dprintf		5256877	0					
ANR	5257273	ArgumentList	D_ALWAYS		5256877	1					
ANR	5257274	Argument	D_ALWAYS		5256877	0					
ANR	5257275	Identifier	D_ALWAYS		5256877	0					
ANR	5257276	Argument	"""store_cred: Unknown access mode (%d).\\n"""		5256877	1					
ANR	5257277	PrimaryExpression	"""store_cred: Unknown access mode (%d).\\n"""		5256877	0					
ANR	5257278	Argument	mode		5256877	2					
ANR	5257279	Identifier	mode		5256877	0					
ANR	5257280	ExpressionStatement	answer = 0	403:4:9821:9829	5256877	20	True				
ANR	5257281	AssignmentExpression	answer = 0		5256877	0		=			
ANR	5257282	Identifier	answer		5256877	0					
ANR	5257283	PrimaryExpression	0		5256877	1					
ANR	5257284	BreakStatement	break ;	404:4:9835:9840	5256877	21	True				
ANR	5257285	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Switching back to old priv state.\\n"" )"	407:2:9852:9911	5256877	2	True				
ANR	5257286	CallExpression	"dprintf ( D_FULLDEBUG , ""Switching back to old priv state.\\n"" )"		5256877	0					
ANR	5257287	Callee	dprintf		5256877	0					
ANR	5257288	Identifier	dprintf		5256877	0					
ANR	5257289	ArgumentList	D_FULLDEBUG		5256877	1					
ANR	5257290	Argument	D_FULLDEBUG		5256877	0					
ANR	5257291	Identifier	D_FULLDEBUG		5256877	0					
ANR	5257292	Argument	"""Switching back to old priv state.\\n"""		5256877	1					
ANR	5257293	PrimaryExpression	"""Switching back to old priv state.\\n"""		5256877	0					
ANR	5257294	ExpressionStatement	set_priv ( priv )	408:2:9915:9929	5256877	3	True				
ANR	5257295	CallExpression	set_priv ( priv )		5256877	0					
ANR	5257296	Callee	set_priv		5256877	0					
ANR	5257297	Identifier	set_priv		5256877	0					
ANR	5257298	ArgumentList	priv		5256877	1					
ANR	5257299	Argument	priv		5256877	0					
ANR	5257300	Identifier	priv		5256877	0					
ANR	5257301	ReturnStatement	return answer ;	411:1:9937:9950	5256877	9	True				
ANR	5257302	Identifier	answer		5256877	0					
ANR	5257303	ReturnType	int		5256877	1					
ANR	5257304	Identifier	store_cred_service		5256877	2					
ANR	5257305	ParameterList	"const char * user , const char * pw , int mode"		5256877	3					
ANR	5257306	Parameter	const char * user	299:23:7472:7487	5256877	0	True				
ANR	5257307	ParameterType	const char *		5256877	0					
ANR	5257308	Identifier	user		5256877	1					
ANR	5257309	Parameter	const char * pw	299:41:7490:7503	5256877	1	True				
ANR	5257310	ParameterType	const char *		5256877	0					
ANR	5257311	Identifier	pw		5256877	1					
ANR	5257312	Parameter	int mode	299:57:7506:7513	5256877	2	True				
ANR	5257313	ParameterType	int		5256877	0					
ANR	5257314	Identifier	mode		5256877	1					
ANR	5257315	CFGEntryNode	ENTRY		5256877		True				
ANR	5257316	CFGExitNode	EXIT		5256877		True				
ANR	5257317	Symbol	pw		5256877						
ANR	5257318	Symbol	mode		5256877						
ANR	5257319	Symbol	lsa_man . remove		5256877						
ANR	5257320	Symbol	can_switch_ids		5256877						
ANR	5257321	Symbol	priv		5256877						
ANR	5257322	Symbol	passw		5256877						
ANR	5257323	Symbol	SUCCESS		5256877						
ANR	5257324	Symbol	pw_wc		5256877						
ANR	5257325	Symbol	lsa_man . query		5256877						
ANR	5257326	Symbol	D_ALWAYS		5256877						
ANR	5257327	Symbol	isValidCredential		5256877						
ANR	5257328	Symbol	set_root_priv		5256877						
ANR	5257329	Symbol	D_FULLDEBUG		5256877						
ANR	5257330	Symbol	pwbuf		5256877						
ANR	5257331	Symbol	FAILURE		5256877						
ANR	5257332	Symbol	retval		5256877						
ANR	5257333	Symbol	FAILURE_NOT_FOUND		5256877						
ANR	5257334	Symbol	userbuf		5256877						
ANR	5257335	Symbol	answer		5256877						
ANR	5257336	Symbol	lsa_man . add		5256877						
ANR	5257337	Symbol	lsa_man		5256877						
ANR	5257338	Symbol	FAILURE_BAD_PASSWORD		5256877						
ANR	5257339	Symbol	wcslen		5256877						
ANR	5257340	Symbol	FAILURE_NOT_SUPPORTED		5256877						
ANR	5257341	Symbol	errno_result		5256877						
ANR	5257342	Symbol	MAX_PASSWORD_LENGTH		5256877						
ANR	5257343	Symbol	user		5256877						
ANR	5257344	DeclStmt									
ANR	5257345	Decl							char	char *	user
ANR	5257346	DeclStmt									
ANR	5257347	Decl							char	char *	pw
ANR	5257348	DeclStmt									
ANR	5257349	Decl							int	int	mode
ANR	5257350	DeclStmt									
ANR	5257351	Decl							int	int	result
ANR	5257352	DeclStmt									
ANR	5257353	Decl							int	int	errno_result
ANR	5257354	DeclStmt									
ANR	5257355	Decl							int	int	answer
ANR	5257356	DeclStmt									
ANR	5257357	Decl							lsa_mgr	lsa_mgr	lsa_man
ANR	5257358	DeclStmt									
ANR	5257359	Decl							char const	char const *	tmp
ANR	5257360	Function	isValidCredential	479:0:11379:13237							
ANR	5257361	FunctionDef	"isValidCredential (const char * input_user , const char * input_pw)"		5257360	0					
ANR	5257362	CompoundStatement		480:66:11450:13237	5257360	0					
ANR	5257363	IdentifierDeclStatement	HANDLE usrHnd = NULL ;	482:1:11507:11527	5257360	0	True				
ANR	5257364	IdentifierDecl	usrHnd = NULL		5257360	0					
ANR	5257365	IdentifierDeclType	HANDLE		5257360	0					
ANR	5257366	Identifier	usrHnd		5257360	1					
ANR	5257367	AssignmentExpression	usrHnd = NULL		5257360	2		=			
ANR	5257368	Identifier	NULL		5257360	0					
ANR	5257369	Identifier	NULL		5257360	1					
ANR	5257370	IdentifierDeclStatement	char * dom ;	483:1:11530:11539	5257360	1	True				
ANR	5257371	IdentifierDecl	* dom		5257360	0					
ANR	5257372	IdentifierDeclType	char *		5257360	0					
ANR	5257373	Identifier	dom		5257360	1					
ANR	5257374	IdentifierDeclStatement	DWORD LogonUserError ;	484:1:11542:11562	5257360	2	True				
ANR	5257375	IdentifierDecl	LogonUserError		5257360	0					
ANR	5257376	IdentifierDeclType	DWORD		5257360	0					
ANR	5257377	Identifier	LogonUserError		5257360	1					
ANR	5257378	IdentifierDeclStatement	BOOL retval ;	485:1:11565:11576	5257360	3	True				
ANR	5257379	IdentifierDecl	retval		5257360	0					
ANR	5257380	IdentifierDeclType	BOOL		5257360	0					
ANR	5257381	Identifier	retval		5257360	1					
ANR	5257382	ExpressionStatement	retval = 0	487:1:11580:11590	5257360	4	True				
ANR	5257383	AssignmentExpression	retval = 0		5257360	0		=			
ANR	5257384	Identifier	retval		5257360	0					
ANR	5257385	PrimaryExpression	0		5257360	1					
ANR	5257386	ExpressionStatement	usrHnd = NULL	488:1:11593:11606	5257360	5	True				
ANR	5257387	AssignmentExpression	usrHnd = NULL		5257360	0		=			
ANR	5257388	Identifier	usrHnd		5257360	0					
ANR	5257389	Identifier	NULL		5257360	1					
ANR	5257390	IdentifierDeclStatement	char * user = strdup ( input_user ) ;	490:1:11610:11642	5257360	6	True				
ANR	5257391	IdentifierDecl	* user = strdup ( input_user )		5257360	0					
ANR	5257392	IdentifierDeclType	char *		5257360	0					
ANR	5257393	Identifier	user		5257360	1					
ANR	5257394	AssignmentExpression	* user = strdup ( input_user )		5257360	2		=			
ANR	5257395	Identifier	user		5257360	0					
ANR	5257396	CallExpression	strdup ( input_user )		5257360	1					
ANR	5257397	Callee	strdup		5257360	0					
ANR	5257398	Identifier	strdup		5257360	0					
ANR	5257399	ArgumentList	input_user		5257360	1					
ANR	5257400	Argument	input_user		5257360	0					
ANR	5257401	Identifier	input_user		5257360	0					
ANR	5257402	ExpressionStatement	"dom = strchr ( user , '@' )"	493:1:11700:11723	5257360	7	True				
ANR	5257403	AssignmentExpression	"dom = strchr ( user , '@' )"		5257360	0		=			
ANR	5257404	Identifier	dom		5257360	0					
ANR	5257405	CallExpression	"strchr ( user , '@' )"		5257360	1					
ANR	5257406	Callee	strchr		5257360	0					
ANR	5257407	Identifier	strchr		5257360	0					
ANR	5257408	ArgumentList	user		5257360	1					
ANR	5257409	Argument	user		5257360	0					
ANR	5257410	Identifier	user		5257360	0					
ANR	5257411	Argument	'@'		5257360	1					
ANR	5257412	PrimaryExpression	'@'		5257360	0					
ANR	5257413	IfStatement	if ( dom )		5257360	8					
ANR	5257414	Condition	dom	495:6:11732:11734	5257360	0	True				
ANR	5257415	Identifier	dom		5257360	0					
ANR	5257416	CompoundStatement		16:12:287:287	5257360	1					
ANR	5257417	ExpressionStatement	* dom = '\\0'	496:2:11742:11753	5257360	0	True				
ANR	5257418	AssignmentExpression	* dom = '\\0'		5257360	0		=			
ANR	5257419	UnaryOperationExpression	* dom		5257360	0					
ANR	5257420	UnaryOperator	*		5257360	0					
ANR	5257421	Identifier	dom		5257360	1					
ANR	5257422	PrimaryExpression	'\\0'		5257360	1					
ANR	5257423	ExpressionStatement	dom ++	497:2:11757:11762	5257360	1	True				
ANR	5257424	PostIncDecOperationExpression	dom ++		5257360	0					
ANR	5257425	Identifier	dom		5257360	0					
ANR	5257426	IncDec	++		5257360	1					
ANR	5257427	IfStatement	"if ( strcmp ( user , POOL_PASSWORD_USERNAME ) == 0 )"		5257360	9					
ANR	5257428	Condition	"strcmp ( user , POOL_PASSWORD_USERNAME ) == 0"	501:5:11834:11874	5257360	0	True				
ANR	5257429	EqualityExpression	"strcmp ( user , POOL_PASSWORD_USERNAME ) == 0"		5257360	0		==			
ANR	5257430	CallExpression	"strcmp ( user , POOL_PASSWORD_USERNAME )"		5257360	0					
ANR	5257431	Callee	strcmp		5257360	0					
ANR	5257432	Identifier	strcmp		5257360	0					
ANR	5257433	ArgumentList	user		5257360	1					
ANR	5257434	Argument	user		5257360	0					
ANR	5257435	Identifier	user		5257360	0					
ANR	5257436	Argument	POOL_PASSWORD_USERNAME		5257360	1					
ANR	5257437	Identifier	POOL_PASSWORD_USERNAME		5257360	0					
ANR	5257438	PrimaryExpression	0		5257360	1					
ANR	5257439	CompoundStatement		22:48:426:426	5257360	1					
ANR	5257440	ExpressionStatement	free ( user )	502:2:11881:11891	5257360	0	True				
ANR	5257441	CallExpression	free ( user )		5257360	0					
ANR	5257442	Callee	free		5257360	0					
ANR	5257443	Identifier	free		5257360	0					
ANR	5257444	ArgumentList	user		5257360	1					
ANR	5257445	Argument	user		5257360	0					
ANR	5257446	Identifier	user		5257360	0					
ANR	5257447	ReturnStatement	return true ;	503:2:11895:11906	5257360	1	True				
ANR	5257448	Identifier	true		5257360	0					
ANR	5257449	IdentifierDeclStatement	char * pw = strdup ( input_pw ) ;	506:1:11913:11941	5257360	10	True				
ANR	5257450	IdentifierDecl	* pw = strdup ( input_pw )		5257360	0					
ANR	5257451	IdentifierDeclType	char *		5257360	0					
ANR	5257452	Identifier	pw		5257360	1					
ANR	5257453	AssignmentExpression	* pw = strdup ( input_pw )		5257360	2		=			
ANR	5257454	Identifier	pw		5257360	0					
ANR	5257455	CallExpression	strdup ( input_pw )		5257360	1					
ANR	5257456	Callee	strdup		5257360	0					
ANR	5257457	Identifier	strdup		5257360	0					
ANR	5257458	ArgumentList	input_pw		5257360	1					
ANR	5257459	Argument	input_pw		5257360	0					
ANR	5257460	Identifier	input_pw		5257360	0					
ANR	5257461	IdentifierDeclStatement	"bool wantSkipNetworkLogon = param_boolean ( ""SKIP_WINDOWS_LOGON_NETWORK"" , false ) ;"	507:1:11944:12022	5257360	11	True				
ANR	5257462	IdentifierDecl	"wantSkipNetworkLogon = param_boolean ( ""SKIP_WINDOWS_LOGON_NETWORK"" , false )"		5257360	0					
ANR	5257463	IdentifierDeclType	bool		5257360	0					
ANR	5257464	Identifier	wantSkipNetworkLogon		5257360	1					
ANR	5257465	AssignmentExpression	"wantSkipNetworkLogon = param_boolean ( ""SKIP_WINDOWS_LOGON_NETWORK"" , false )"		5257360	2		=			
ANR	5257466	Identifier	wantSkipNetworkLogon		5257360	0					
ANR	5257467	CallExpression	"param_boolean ( ""SKIP_WINDOWS_LOGON_NETWORK"" , false )"		5257360	1					
ANR	5257468	Callee	param_boolean		5257360	0					
ANR	5257469	Identifier	param_boolean		5257360	0					
ANR	5257470	ArgumentList	"""SKIP_WINDOWS_LOGON_NETWORK"""		5257360	1					
ANR	5257471	Argument	"""SKIP_WINDOWS_LOGON_NETWORK"""		5257360	0					
ANR	5257472	PrimaryExpression	"""SKIP_WINDOWS_LOGON_NETWORK"""		5257360	0					
ANR	5257473	Argument	false		5257360	1					
ANR	5257474	Identifier	false		5257360	0					
ANR	5257475	IfStatement	if ( ! wantSkipNetworkLogon )		5257360	12					
ANR	5257476	Condition	! wantSkipNetworkLogon	508:5:12029:12049	5257360	0	True				
ANR	5257477	UnaryOperationExpression	! wantSkipNetworkLogon		5257360	0					
ANR	5257478	UnaryOperator	!		5257360	0					
ANR	5257479	Identifier	wantSkipNetworkLogon		5257360	1					
ANR	5257480	CompoundStatement		29:28:601:601	5257360	1					
ANR	5257481	ExpressionStatement	"retval = LogonUser ( user , dom , pw , LOGON32_LOGON_NETWORK , LOGON32_PROVIDER_DEFAULT , & usrHnd )"	509:3:12057:12315	5257360	0	True				
ANR	5257482	AssignmentExpression	"retval = LogonUser ( user , dom , pw , LOGON32_LOGON_NETWORK , LOGON32_PROVIDER_DEFAULT , & usrHnd )"		5257360	0		=			
ANR	5257483	Identifier	retval		5257360	0					
ANR	5257484	CallExpression	"LogonUser ( user , dom , pw , LOGON32_LOGON_NETWORK , LOGON32_PROVIDER_DEFAULT , & usrHnd )"		5257360	1					
ANR	5257485	Callee	LogonUser		5257360	0					
ANR	5257486	Identifier	LogonUser		5257360	0					
ANR	5257487	ArgumentList	user		5257360	1					
ANR	5257488	Argument	user		5257360	0					
ANR	5257489	Identifier	user		5257360	0					
ANR	5257490	Argument	dom		5257360	1					
ANR	5257491	Identifier	dom		5257360	0					
ANR	5257492	Argument	pw		5257360	2					
ANR	5257493	Identifier	pw		5257360	0					
ANR	5257494	Argument	LOGON32_LOGON_NETWORK		5257360	3					
ANR	5257495	Identifier	LOGON32_LOGON_NETWORK		5257360	0					
ANR	5257496	Argument	LOGON32_PROVIDER_DEFAULT		5257360	4					
ANR	5257497	Identifier	LOGON32_PROVIDER_DEFAULT		5257360	0					
ANR	5257498	Argument	& usrHnd		5257360	5					
ANR	5257499	UnaryOperationExpression	& usrHnd		5257360	0					
ANR	5257500	UnaryOperator	&		5257360	0					
ANR	5257501	Identifier	usrHnd		5257360	1					
ANR	5257502	ExpressionStatement	LogonUserError = GetLastError ( )	517:3:12320:12351	5257360	1	True				
ANR	5257503	AssignmentExpression	LogonUserError = GetLastError ( )		5257360	0		=			
ANR	5257504	Identifier	LogonUserError		5257360	0					
ANR	5257505	CallExpression	GetLastError ( )		5257360	1					
ANR	5257506	Callee	GetLastError		5257360	0					
ANR	5257507	Identifier	GetLastError		5257360	0					
ANR	5257508	ArgumentList			5257360	1					
ANR	5257509	IfStatement	if ( 0 == retval )		5257360	13					
ANR	5257510	Condition	0 == retval	519:6:12362:12372	5257360	0	True				
ANR	5257511	EqualityExpression	0 == retval		5257360	0		==			
ANR	5257512	PrimaryExpression	0		5257360	0					
ANR	5257513	Identifier	retval		5257360	1					
ANR	5257514	CompoundStatement		40:20:925:925	5257360	1					
ANR	5257515	IfStatement	if ( ! wantSkipNetworkLogon )		5257360	0					
ANR	5257516	Condition	! wantSkipNetworkLogon	520:6:12384:12404	5257360	0	True				
ANR	5257517	UnaryOperationExpression	! wantSkipNetworkLogon		5257360	0					
ANR	5257518	UnaryOperator	!		5257360	0					
ANR	5257519	Identifier	wantSkipNetworkLogon		5257360	1					
ANR	5257520	CompoundStatement		41:29:956:956	5257360	1					
ANR	5257521	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""NETWORK logon failed. Attempting INTERACTIVE\\n"" )"	521:4:12413:12483	5257360	0	True				
ANR	5257522	CallExpression	"dprintf ( D_FULLDEBUG , ""NETWORK logon failed. Attempting INTERACTIVE\\n"" )"		5257360	0					
ANR	5257523	Callee	dprintf		5257360	0					
ANR	5257524	Identifier	dprintf		5257360	0					
ANR	5257525	ArgumentList	D_FULLDEBUG		5257360	1					
ANR	5257526	Argument	D_FULLDEBUG		5257360	0					
ANR	5257527	Identifier	D_FULLDEBUG		5257360	0					
ANR	5257528	Argument	"""NETWORK logon failed. Attempting INTERACTIVE\\n"""		5257360	1					
ANR	5257529	PrimaryExpression	"""NETWORK logon failed. Attempting INTERACTIVE\\n"""		5257360	0					
ANR	5257530	ElseStatement	else		5257360	0					
ANR	5257531	CompoundStatement		43:9:1043:1043	5257360	0					
ANR	5257532	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""NETWORK logon disabled. Trying INTERACTIVE only!\\n"" )"	523:4:12500:12574	5257360	0	True				
ANR	5257533	CallExpression	"dprintf ( D_FULLDEBUG , ""NETWORK logon disabled. Trying INTERACTIVE only!\\n"" )"		5257360	0					
ANR	5257534	Callee	dprintf		5257360	0					
ANR	5257535	Identifier	dprintf		5257360	0					
ANR	5257536	ArgumentList	D_FULLDEBUG		5257360	1					
ANR	5257537	Argument	D_FULLDEBUG		5257360	0					
ANR	5257538	Identifier	D_FULLDEBUG		5257360	0					
ANR	5257539	Argument	"""NETWORK logon disabled. Trying INTERACTIVE only!\\n"""		5257360	1					
ANR	5257540	PrimaryExpression	"""NETWORK logon disabled. Trying INTERACTIVE only!\\n"""		5257360	0					
ANR	5257541	ExpressionStatement	"retval = LogonUser ( user , dom , pw , LOGON32_LOGON_INTERACTIVE , LOGON32_PROVIDER_DEFAULT , & usrHnd )"	525:2:12582:12867	5257360	1	True				
ANR	5257542	AssignmentExpression	"retval = LogonUser ( user , dom , pw , LOGON32_LOGON_INTERACTIVE , LOGON32_PROVIDER_DEFAULT , & usrHnd )"		5257360	0		=			
ANR	5257543	Identifier	retval		5257360	0					
ANR	5257544	CallExpression	"LogonUser ( user , dom , pw , LOGON32_LOGON_INTERACTIVE , LOGON32_PROVIDER_DEFAULT , & usrHnd )"		5257360	1					
ANR	5257545	Callee	LogonUser		5257360	0					
ANR	5257546	Identifier	LogonUser		5257360	0					
ANR	5257547	ArgumentList	user		5257360	1					
ANR	5257548	Argument	user		5257360	0					
ANR	5257549	Identifier	user		5257360	0					
ANR	5257550	Argument	dom		5257360	1					
ANR	5257551	Identifier	dom		5257360	0					
ANR	5257552	Argument	pw		5257360	2					
ANR	5257553	Identifier	pw		5257360	0					
ANR	5257554	Argument	LOGON32_LOGON_INTERACTIVE		5257360	3					
ANR	5257555	Identifier	LOGON32_LOGON_INTERACTIVE		5257360	0					
ANR	5257556	Argument	LOGON32_PROVIDER_DEFAULT		5257360	4					
ANR	5257557	Identifier	LOGON32_PROVIDER_DEFAULT		5257360	0					
ANR	5257558	Argument	& usrHnd		5257360	5					
ANR	5257559	UnaryOperationExpression	& usrHnd		5257360	0					
ANR	5257560	UnaryOperator	&		5257360	0					
ANR	5257561	Identifier	usrHnd		5257360	1					
ANR	5257562	ExpressionStatement	LogonUserError = GetLastError ( )	533:2:12871:12902	5257360	2	True				
ANR	5257563	AssignmentExpression	LogonUserError = GetLastError ( )		5257360	0		=			
ANR	5257564	Identifier	LogonUserError		5257360	0					
ANR	5257565	CallExpression	GetLastError ( )		5257360	1					
ANR	5257566	Callee	GetLastError		5257360	0					
ANR	5257567	Identifier	GetLastError		5257360	0					
ANR	5257568	ArgumentList			5257360	1					
ANR	5257569	IfStatement	if ( user )		5257360	14					
ANR	5257570	Condition	user	536:5:12913:12916	5257360	0	True				
ANR	5257571	Identifier	user		5257360	0					
ANR	5257572	ExpressionStatement	free ( user )	536:11:12919:12929	5257360	1	True				
ANR	5257573	CallExpression	free ( user )		5257360	0					
ANR	5257574	Callee	free		5257360	0					
ANR	5257575	Identifier	free		5257360	0					
ANR	5257576	ArgumentList	user		5257360	1					
ANR	5257577	Argument	user		5257360	0					
ANR	5257578	Identifier	user		5257360	0					
ANR	5257579	IfStatement	if ( pw )		5257360	15					
ANR	5257580	Condition	pw	537:5:12936:12937	5257360	0	True				
ANR	5257581	Identifier	pw		5257360	0					
ANR	5257582	CompoundStatement		58:9:1489:1489	5257360	1					
ANR	5257583	ExpressionStatement	"SecureZeroMemory ( pw , strlen ( pw ) )"	538:2:12944:12975	5257360	0	True				
ANR	5257584	CallExpression	"SecureZeroMemory ( pw , strlen ( pw ) )"		5257360	0					
ANR	5257585	Callee	SecureZeroMemory		5257360	0					
ANR	5257586	Identifier	SecureZeroMemory		5257360	0					
ANR	5257587	ArgumentList	pw		5257360	1					
ANR	5257588	Argument	pw		5257360	0					
ANR	5257589	Identifier	pw		5257360	0					
ANR	5257590	Argument	strlen ( pw )		5257360	1					
ANR	5257591	CallExpression	strlen ( pw )		5257360	0					
ANR	5257592	Callee	strlen		5257360	0					
ANR	5257593	Identifier	strlen		5257360	0					
ANR	5257594	ArgumentList	pw		5257360	1					
ANR	5257595	Argument	pw		5257360	0					
ANR	5257596	Identifier	pw		5257360	0					
ANR	5257597	ExpressionStatement	free ( pw )	539:2:12979:12987	5257360	1	True				
ANR	5257598	CallExpression	free ( pw )		5257360	0					
ANR	5257599	Callee	free		5257360	0					
ANR	5257600	Identifier	free		5257360	0					
ANR	5257601	ArgumentList	pw		5257360	1					
ANR	5257602	Argument	pw		5257360	0					
ANR	5257603	Identifier	pw		5257360	0					
ANR	5257604	IfStatement	if ( retval == 0 )		5257360	16					
ANR	5257605	Condition	retval == 0	542:6:12999:13009	5257360	0	True				
ANR	5257606	EqualityExpression	retval == 0		5257360	0		==			
ANR	5257607	Identifier	retval		5257360	0					
ANR	5257608	PrimaryExpression	0		5257360	1					
ANR	5257609	CompoundStatement		63:20:1562:1562	5257360	1					
ANR	5257610	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to log in %s with err=%d\\n"" , input_user , LogonUserError )"	543:2:13017:13104	5257360	0	True				
ANR	5257611	CallExpression	"dprintf ( D_ALWAYS , ""Failed to log in %s with err=%d\\n"" , input_user , LogonUserError )"		5257360	0					
ANR	5257612	Callee	dprintf		5257360	0					
ANR	5257613	Identifier	dprintf		5257360	0					
ANR	5257614	ArgumentList	D_ALWAYS		5257360	1					
ANR	5257615	Argument	D_ALWAYS		5257360	0					
ANR	5257616	Identifier	D_ALWAYS		5257360	0					
ANR	5257617	Argument	"""Failed to log in %s with err=%d\\n"""		5257360	1					
ANR	5257618	PrimaryExpression	"""Failed to log in %s with err=%d\\n"""		5257360	0					
ANR	5257619	Argument	input_user		5257360	2					
ANR	5257620	Identifier	input_user		5257360	0					
ANR	5257621	Argument	LogonUserError		5257360	3					
ANR	5257622	Identifier	LogonUserError		5257360	0					
ANR	5257623	ReturnStatement	return false ;	545:2:13108:13120	5257360	1	True				
ANR	5257624	Identifier	false		5257360	0					
ANR	5257625	ElseStatement	else		5257360	0					
ANR	5257626	CompoundStatement		67:8:1679:1679	5257360	0					
ANR	5257627	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Succeeded to log in %s\\n"" , input_user )"	547:2:13134:13194	5257360	0	True				
ANR	5257628	CallExpression	"dprintf ( D_FULLDEBUG , ""Succeeded to log in %s\\n"" , input_user )"		5257360	0					
ANR	5257629	Callee	dprintf		5257360	0					
ANR	5257630	Identifier	dprintf		5257360	0					
ANR	5257631	ArgumentList	D_FULLDEBUG		5257360	1					
ANR	5257632	Argument	D_FULLDEBUG		5257360	0					
ANR	5257633	Identifier	D_FULLDEBUG		5257360	0					
ANR	5257634	Argument	"""Succeeded to log in %s\\n"""		5257360	1					
ANR	5257635	PrimaryExpression	"""Succeeded to log in %s\\n"""		5257360	0					
ANR	5257636	Argument	input_user		5257360	2					
ANR	5257637	Identifier	input_user		5257360	0					
ANR	5257638	ExpressionStatement	CloseHandle ( usrHnd )	548:2:13198:13217	5257360	1	True				
ANR	5257639	CallExpression	CloseHandle ( usrHnd )		5257360	0					
ANR	5257640	Callee	CloseHandle		5257360	0					
ANR	5257641	Identifier	CloseHandle		5257360	0					
ANR	5257642	ArgumentList	usrHnd		5257360	1					
ANR	5257643	Argument	usrHnd		5257360	0					
ANR	5257644	Identifier	usrHnd		5257360	0					
ANR	5257645	ReturnStatement	return true ;	549:2:13221:13232	5257360	2	True				
ANR	5257646	Identifier	true		5257360	0					
ANR	5257647	ReturnType	bool		5257360	1					
ANR	5257648	Identifier	isValidCredential		5257360	2					
ANR	5257649	ParameterList	"const char * input_user , const char * input_pw"		5257360	3					
ANR	5257650	Parameter	const char * input_user	480:19:11403:11424	5257360	0	True				
ANR	5257651	ParameterType	const char *		5257360	0					
ANR	5257652	Identifier	input_user		5257360	1					
ANR	5257653	Parameter	const char * input_pw	480:43:11427:11446	5257360	1	True				
ANR	5257654	ParameterType	const char *		5257360	0					
ANR	5257655	Identifier	input_pw		5257360	1					
ANR	5257656	CFGEntryNode	ENTRY		5257360		True				
ANR	5257657	CFGExitNode	EXIT		5257360		True				
ANR	5257658	Symbol	& usrHnd		5257360						
ANR	5257659	Symbol	dom		5257360						
ANR	5257660	Symbol	input_user		5257360						
ANR	5257661	Symbol	pw		5257360						
ANR	5257662	Symbol	LOGON32_LOGON_INTERACTIVE		5257360						
ANR	5257663	Symbol	strchr		5257360						
ANR	5257664	Symbol	LOGON32_LOGON_NETWORK		5257360						
ANR	5257665	Symbol	strlen		5257360						
ANR	5257666	Symbol	input_pw		5257360						
ANR	5257667	Symbol	* dom		5257360						
ANR	5257668	Symbol	usrHnd		5257360						
ANR	5257669	Symbol	LogonUser		5257360						
ANR	5257670	Symbol	strcmp		5257360						
ANR	5257671	Symbol	NULL		5257360						
ANR	5257672	Symbol	LogonUserError		5257360						
ANR	5257673	Symbol	false		5257360						
ANR	5257674	Symbol	LOGON32_PROVIDER_DEFAULT		5257360						
ANR	5257675	Symbol	D_ALWAYS		5257360						
ANR	5257676	Symbol	param_boolean		5257360						
ANR	5257677	Symbol	D_FULLDEBUG		5257360						
ANR	5257678	Symbol	retval		5257360						
ANR	5257679	Symbol	wantSkipNetworkLogon		5257360						
ANR	5257680	Symbol	POOL_PASSWORD_USERNAME		5257360						
ANR	5257681	Symbol	GetLastError		5257360						
ANR	5257682	Symbol	true		5257360						
ANR	5257683	Symbol	strdup		5257360						
ANR	5257684	Symbol	user		5257360						
ANR	5257685	Function	code_store_cred	555:0:13257:13899							
ANR	5257686	FunctionDef	"code_store_cred (Stream * socket , char * & user , char * & pw , int & mode)"		5257685	0					
ANR	5257687	CompoundStatement		555:78:13335:13899	5257685	0					
ANR	5257688	IdentifierDeclStatement	int result ;	557:1:13340:13350	5257685	0	True				
ANR	5257689	IdentifierDecl	result		5257685	0					
ANR	5257690	IdentifierDeclType	int		5257685	0					
ANR	5257691	Identifier	result		5257685	1					
ANR	5257692	ExpressionStatement	result = socket -> code ( user )	559:1:13355:13382	5257685	1	True				
ANR	5257693	AssignmentExpression	result = socket -> code ( user )		5257685	0		=			
ANR	5257694	Identifier	result		5257685	0					
ANR	5257695	CallExpression	socket -> code ( user )		5257685	1					
ANR	5257696	Callee	socket -> code		5257685	0					
ANR	5257697	PtrMemberAccess	socket -> code		5257685	0					
ANR	5257698	Identifier	socket		5257685	0					
ANR	5257699	Identifier	code		5257685	1					
ANR	5257700	ArgumentList	user		5257685	1					
ANR	5257701	Argument	user		5257685	0					
ANR	5257702	Identifier	user		5257685	0					
ANR	5257703	IfStatement	if ( ! result )		5257685	2					
ANR	5257704	Condition	! result	560:5:13389:13395	5257685	0	True				
ANR	5257705	UnaryOperationExpression	! result		5257685	0					
ANR	5257706	UnaryOperator	!		5257685	0					
ANR	5257707	Identifier	result		5257685	1					
ANR	5257708	CompoundStatement		6:15:63:63	5257685	1					
ANR	5257709	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred: Failed to send/recv user.\\n"" )"	561:2:13403:13463	5257685	0	True				
ANR	5257710	CallExpression	"dprintf ( D_ALWAYS , ""store_cred: Failed to send/recv user.\\n"" )"		5257685	0					
ANR	5257711	Callee	dprintf		5257685	0					
ANR	5257712	Identifier	dprintf		5257685	0					
ANR	5257713	ArgumentList	D_ALWAYS		5257685	1					
ANR	5257714	Argument	D_ALWAYS		5257685	0					
ANR	5257715	Identifier	D_ALWAYS		5257685	0					
ANR	5257716	Argument	"""store_cred: Failed to send/recv user.\\n"""		5257685	1					
ANR	5257717	PrimaryExpression	"""store_cred: Failed to send/recv user.\\n"""		5257685	0					
ANR	5257718	ReturnStatement	return FALSE ;	562:2:13467:13479	5257685	1	True				
ANR	5257719	Identifier	FALSE		5257685	0					
ANR	5257720	ExpressionStatement	result = socket -> code ( pw )	565:1:13487:13512	5257685	3	True				
ANR	5257721	AssignmentExpression	result = socket -> code ( pw )		5257685	0		=			
ANR	5257722	Identifier	result		5257685	0					
ANR	5257723	CallExpression	socket -> code ( pw )		5257685	1					
ANR	5257724	Callee	socket -> code		5257685	0					
ANR	5257725	PtrMemberAccess	socket -> code		5257685	0					
ANR	5257726	Identifier	socket		5257685	0					
ANR	5257727	Identifier	code		5257685	1					
ANR	5257728	ArgumentList	pw		5257685	1					
ANR	5257729	Argument	pw		5257685	0					
ANR	5257730	Identifier	pw		5257685	0					
ANR	5257731	IfStatement	if ( ! result )		5257685	4					
ANR	5257732	Condition	! result	566:5:13519:13525	5257685	0	True				
ANR	5257733	UnaryOperationExpression	! result		5257685	0					
ANR	5257734	UnaryOperator	!		5257685	0					
ANR	5257735	Identifier	result		5257685	1					
ANR	5257736	CompoundStatement		12:15:193:193	5257685	1					
ANR	5257737	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred: Failed to send/recv pw.\\n"" )"	567:2:13533:13591	5257685	0	True				
ANR	5257738	CallExpression	"dprintf ( D_ALWAYS , ""store_cred: Failed to send/recv pw.\\n"" )"		5257685	0					
ANR	5257739	Callee	dprintf		5257685	0					
ANR	5257740	Identifier	dprintf		5257685	0					
ANR	5257741	ArgumentList	D_ALWAYS		5257685	1					
ANR	5257742	Argument	D_ALWAYS		5257685	0					
ANR	5257743	Identifier	D_ALWAYS		5257685	0					
ANR	5257744	Argument	"""store_cred: Failed to send/recv pw.\\n"""		5257685	1					
ANR	5257745	PrimaryExpression	"""store_cred: Failed to send/recv pw.\\n"""		5257685	0					
ANR	5257746	ReturnStatement	return FALSE ;	568:2:13595:13607	5257685	1	True				
ANR	5257747	Identifier	FALSE		5257685	0					
ANR	5257748	ExpressionStatement	result = socket -> code ( mode )	571:1:13615:13642	5257685	5	True				
ANR	5257749	AssignmentExpression	result = socket -> code ( mode )		5257685	0		=			
ANR	5257750	Identifier	result		5257685	0					
ANR	5257751	CallExpression	socket -> code ( mode )		5257685	1					
ANR	5257752	Callee	socket -> code		5257685	0					
ANR	5257753	PtrMemberAccess	socket -> code		5257685	0					
ANR	5257754	Identifier	socket		5257685	0					
ANR	5257755	Identifier	code		5257685	1					
ANR	5257756	ArgumentList	mode		5257685	1					
ANR	5257757	Argument	mode		5257685	0					
ANR	5257758	Identifier	mode		5257685	0					
ANR	5257759	IfStatement	if ( ! result )		5257685	6					
ANR	5257760	Condition	! result	572:5:13649:13655	5257685	0	True				
ANR	5257761	UnaryOperationExpression	! result		5257685	0					
ANR	5257762	UnaryOperator	!		5257685	0					
ANR	5257763	Identifier	result		5257685	1					
ANR	5257764	CompoundStatement		18:15:323:323	5257685	1					
ANR	5257765	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred: Failed to send/recv mode.\\n"" )"	573:2:13663:13723	5257685	0	True				
ANR	5257766	CallExpression	"dprintf ( D_ALWAYS , ""store_cred: Failed to send/recv mode.\\n"" )"		5257685	0					
ANR	5257767	Callee	dprintf		5257685	0					
ANR	5257768	Identifier	dprintf		5257685	0					
ANR	5257769	ArgumentList	D_ALWAYS		5257685	1					
ANR	5257770	Argument	D_ALWAYS		5257685	0					
ANR	5257771	Identifier	D_ALWAYS		5257685	0					
ANR	5257772	Argument	"""store_cred: Failed to send/recv mode.\\n"""		5257685	1					
ANR	5257773	PrimaryExpression	"""store_cred: Failed to send/recv mode.\\n"""		5257685	0					
ANR	5257774	ReturnStatement	return FALSE ;	574:2:13727:13739	5257685	1	True				
ANR	5257775	Identifier	FALSE		5257685	0					
ANR	5257776	ExpressionStatement	result = socket -> end_of_message ( )	577:1:13747:13780	5257685	7	True				
ANR	5257777	AssignmentExpression	result = socket -> end_of_message ( )		5257685	0		=			
ANR	5257778	Identifier	result		5257685	0					
ANR	5257779	CallExpression	socket -> end_of_message ( )		5257685	1					
ANR	5257780	Callee	socket -> end_of_message		5257685	0					
ANR	5257781	PtrMemberAccess	socket -> end_of_message		5257685	0					
ANR	5257782	Identifier	socket		5257685	0					
ANR	5257783	Identifier	end_of_message		5257685	1					
ANR	5257784	ArgumentList			5257685	1					
ANR	5257785	IfStatement	if ( ! result )		5257685	8					
ANR	5257786	Condition	! result	578:5:13787:13793	5257685	0	True				
ANR	5257787	UnaryOperationExpression	! result		5257685	0					
ANR	5257788	UnaryOperator	!		5257685	0					
ANR	5257789	Identifier	result		5257685	1					
ANR	5257790	CompoundStatement		24:15:461:461	5257685	1					
ANR	5257791	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred: Failed to send/recv eom.\\n"" )"	579:2:13801:13860	5257685	0	True				
ANR	5257792	CallExpression	"dprintf ( D_ALWAYS , ""store_cred: Failed to send/recv eom.\\n"" )"		5257685	0					
ANR	5257793	Callee	dprintf		5257685	0					
ANR	5257794	Identifier	dprintf		5257685	0					
ANR	5257795	ArgumentList	D_ALWAYS		5257685	1					
ANR	5257796	Argument	D_ALWAYS		5257685	0					
ANR	5257797	Identifier	D_ALWAYS		5257685	0					
ANR	5257798	Argument	"""store_cred: Failed to send/recv eom.\\n"""		5257685	1					
ANR	5257799	PrimaryExpression	"""store_cred: Failed to send/recv eom.\\n"""		5257685	0					
ANR	5257800	ReturnStatement	return FALSE ;	580:2:13864:13876	5257685	1	True				
ANR	5257801	Identifier	FALSE		5257685	0					
ANR	5257802	ReturnStatement	return TRUE ;	583:1:13884:13895	5257685	9	True				
ANR	5257803	Identifier	TRUE		5257685	0					
ANR	5257804	ReturnType	static int		5257685	1					
ANR	5257805	Identifier	code_store_cred		5257685	2					
ANR	5257806	ParameterList	"Stream * socket , char * & user , char * & pw , int & mode"		5257685	3					
ANR	5257807	Parameter	Stream * socket	555:27:13284:13297	5257685	0	True				
ANR	5257808	ParameterType	Stream *		5257685	0					
ANR	5257809	Identifier	socket		5257685	1					
ANR	5257810	Parameter	char * & user	555:43:13300:13310	5257685	1	True				
ANR	5257811	ParameterType	char * &		5257685	0					
ANR	5257812	Identifier	user		5257685	1					
ANR	5257813	Parameter	char * & pw	555:56:13313:13321	5257685	2	True				
ANR	5257814	ParameterType	char * &		5257685	0					
ANR	5257815	Identifier	pw		5257685	1					
ANR	5257816	Parameter	int & mode	555:67:13324:13332	5257685	3	True				
ANR	5257817	ParameterType	int &		5257685	0					
ANR	5257818	Identifier	mode		5257685	1					
ANR	5257819	CFGEntryNode	ENTRY		5257685		True				
ANR	5257820	CFGExitNode	EXIT		5257685		True				
ANR	5257821	Symbol	mode		5257685						
ANR	5257822	Symbol	result		5257685						
ANR	5257823	Symbol	pw		5257685						
ANR	5257824	Symbol	D_ALWAYS		5257685						
ANR	5257825	Symbol	* socket		5257685						
ANR	5257826	Symbol	TRUE		5257685						
ANR	5257827	Symbol	FALSE		5257685						
ANR	5257828	Symbol	socket		5257685						
ANR	5257829	Symbol	socket -> code		5257685						
ANR	5257830	Symbol	user		5257685						
ANR	5257831	Symbol	socket -> end_of_message		5257685						
ANR	5257832	DeclStmt									
ANR	5257833	Decl							int	int	result
ANR	5257834	DeclStmt									
ANR	5257835	Decl							char	char *	pw
ANR	5257836	DeclStmt									
ANR	5257837	Decl							char	char *	domain
ANR	5257838	DeclStmt									
ANR	5257839	Decl							MyString	MyString	username
ANR	5257840	DeclStmt									
ANR	5257841	Decl							char	char *	credd_host
ANR	5257842	DeclStmt									
ANR	5257843	Decl							MyString	MyString	my_fqdn_str
ANR	5257844	DeclStmt									
ANR	5257845	Decl							MyString	MyString	my_hostname_str
ANR	5257846	DeclStmt									
ANR	5257847	Decl							MyString	MyString	my_ip_str
ANR	5257848	DeclStmt									
ANR	5257849	Decl							bool	bool	on_credd_host
ANR	5257850	DeclStmt									
ANR	5257851	Decl							const char	const char *	addr
ANR	5257852	Function	store_cred	662:0:16096:20309							
ANR	5257853	FunctionDef	"store_cred (const char * user , const char * pw , int mode , Daemon * d , bool force)"		5257852	0					
ANR	5257854	CompoundStatement		663:78:16179:20309	5257852	0					
ANR	5257855	IdentifierDeclStatement	int result ;	665:1:16184:16194	5257852	0	True				
ANR	5257856	IdentifierDecl	result		5257852	0					
ANR	5257857	IdentifierDeclType	int		5257852	0					
ANR	5257858	Identifier	result		5257852	1					
ANR	5257859	IdentifierDeclStatement	int return_val ;	666:1:16197:16211	5257852	1	True				
ANR	5257860	IdentifierDecl	return_val		5257852	0					
ANR	5257861	IdentifierDeclType	int		5257852	0					
ANR	5257862	Identifier	return_val		5257852	1					
ANR	5257863	IdentifierDeclStatement	Sock * sock = NULL ;	667:1:16214:16231	5257852	2	True				
ANR	5257864	IdentifierDecl	* sock = NULL		5257852	0					
ANR	5257865	IdentifierDeclType	Sock *		5257852	0					
ANR	5257866	Identifier	sock		5257852	1					
ANR	5257867	AssignmentExpression	* sock = NULL		5257852	2		=			
ANR	5257868	Identifier	NULL		5257852	0					
ANR	5257869	Identifier	NULL		5257852	1					
ANR	5257870	Statement	static	670:1:16295:16300	5257852	3	True				
ANR	5257871	IdentifierDeclStatement	const int mode_offset = 100 ;	670:8:16302:16329	5257852	4	True				
ANR	5257872	IdentifierDecl	mode_offset = 100		5257852	0					
ANR	5257873	IdentifierDeclType	const int		5257852	0					
ANR	5257874	Identifier	mode_offset		5257852	1					
ANR	5257875	AssignmentExpression	mode_offset = 100		5257852	2		=			
ANR	5257876	Identifier	mode_offset		5257852	0					
ANR	5257877	PrimaryExpression	100		5257852	1					
ANR	5257878	Statement	static	671:1:16332:16337	5257852	5	True				
ANR	5257879	Statement	const	671:8:16339:16343	5257852	6	True				
ANR	5257880	Statement	char	671:14:16345:16348	5257852	7	True				
ANR	5257881	Statement	*	671:19:16350:16350	5257852	8	True				
ANR	5257882	Statement	mode_name	671:20:16351:16359	5257852	9	True				
ANR	5257883	Statement	[	671:29:16360:16360	5257852	10	True				
ANR	5257884	Statement	]	671:30:16361:16361	5257852	11	True				
ANR	5257885	Statement	=	671:32:16363:16363	5257852	12	True				
ANR	5257886	CompoundStatement		9:34:185:185	5257852	13					
ANR	5257887	Statement	ADD_CREDENTIAL	672:2:16369:16382	5257852	0	True				
ANR	5257888	Statement	","	672:16:16383:16383	5257852	1	True				
ANR	5257889	Statement	DELETE_CREDENTIAL	673:2:16387:16403	5257852	2	True				
ANR	5257890	Statement	","	673:19:16404:16404	5257852	3	True				
ANR	5257891	Statement	QUERY_CREDENTIAL	674:2:16408:16423	5257852	4	True				
ANR	5257892	Statement	","	676:2:16440:16440	5257852	5	True				
ANR	5257893	Statement	CONFIG_CREDENTIAL	676:4:16442:16458	5257852	6	True				
ANR	5257894	ExpressionStatement		678:2:16469:16469	5257852	14	True				
ANR	5257895	ExpressionStatement	"dprintf ( D_ALWAYS , ""STORE_CRED: In mode '%s'\\n"" , mode_name [ mode - mode_offset ] )"	679:1:16473:16560	5257852	15	True				
ANR	5257896	CallExpression	"dprintf ( D_ALWAYS , ""STORE_CRED: In mode '%s'\\n"" , mode_name [ mode - mode_offset ] )"		5257852	0					
ANR	5257897	Callee	dprintf		5257852	0					
ANR	5257898	Identifier	dprintf		5257852	0					
ANR	5257899	ArgumentList	D_ALWAYS		5257852	1					
ANR	5257900	Argument	D_ALWAYS		5257852	0					
ANR	5257901	Identifier	D_ALWAYS		5257852	0					
ANR	5257902	Argument	"""STORE_CRED: In mode '%s'\\n"""		5257852	1					
ANR	5257903	PrimaryExpression	"""STORE_CRED: In mode '%s'\\n"""		5257852	0					
ANR	5257904	Argument	mode_name [ mode - mode_offset ]		5257852	2					
ANR	5257905	ArrayIndexing	mode_name [ mode - mode_offset ]		5257852	0					
ANR	5257906	Identifier	mode_name		5257852	0					
ANR	5257907	AdditiveExpression	mode - mode_offset		5257852	1		-			
ANR	5257908	Identifier	mode		5257852	0					
ANR	5257909	Identifier	mode_offset		5257852	1					
ANR	5257910	IfStatement	if ( is_root ( ) && d == NULL )		5257852	16					
ANR	5257911	Condition	is_root ( ) && d == NULL	687:6:16761:16782	5257852	0	True				
ANR	5257912	AndExpression	is_root ( ) && d == NULL		5257852	0		&&			
ANR	5257913	CallExpression	is_root ( )		5257852	0					
ANR	5257914	Callee	is_root		5257852	0					
ANR	5257915	Identifier	is_root		5257852	0					
ANR	5257916	ArgumentList			5257852	1					
ANR	5257917	EqualityExpression	d == NULL		5257852	1		==			
ANR	5257918	Identifier	d		5257852	0					
ANR	5257919	Identifier	NULL		5257852	1					
ANR	5257920	CompoundStatement		25:31:606:606	5257852	1					
ANR	5257921	ExpressionStatement	"return_val = store_cred_service ( user , pw , mode )"	689:2:16841:16886	5257852	0	True				
ANR	5257922	AssignmentExpression	"return_val = store_cred_service ( user , pw , mode )"		5257852	0		=			
ANR	5257923	Identifier	return_val		5257852	0					
ANR	5257924	CallExpression	"store_cred_service ( user , pw , mode )"		5257852	1					
ANR	5257925	Callee	store_cred_service		5257852	0					
ANR	5257926	Identifier	store_cred_service		5257852	0					
ANR	5257927	ArgumentList	user		5257852	1					
ANR	5257928	Argument	user		5257852	0					
ANR	5257929	Identifier	user		5257852	0					
ANR	5257930	Argument	pw		5257852	1					
ANR	5257931	Identifier	pw		5257852	0					
ANR	5257932	Argument	mode		5257852	2					
ANR	5257933	Identifier	mode		5257852	0					
ANR	5257934	ElseStatement	else		5257852	0					
ANR	5257935	CompoundStatement		33:2:838:873	5257852	0					
ANR	5257936	IdentifierDeclStatement	int cmd = STORE_CRED ;	694:2:16994:17014	5257852	0	True				
ANR	5257937	IdentifierDecl	cmd = STORE_CRED		5257852	0					
ANR	5257938	IdentifierDeclType	int		5257852	0					
ANR	5257939	Identifier	cmd		5257852	1					
ANR	5257940	AssignmentExpression	cmd = STORE_CRED		5257852	2		=			
ANR	5257941	Identifier	STORE_CRED		5257852	0					
ANR	5257942	Identifier	STORE_CRED		5257852	1					
ANR	5257943	IdentifierDeclStatement	"char const * tmp = strchr ( user , '@' ) ;"	695:2:17018:17053	5257852	1	True				
ANR	5257944	IdentifierDecl	"* tmp = strchr ( user , '@' )"		5257852	0					
ANR	5257945	IdentifierDeclType	char const *		5257852	0					
ANR	5257946	Identifier	tmp		5257852	1					
ANR	5257947	AssignmentExpression	"* tmp = strchr ( user , '@' )"		5257852	2		=			
ANR	5257948	Identifier	tmp		5257852	0					
ANR	5257949	CallExpression	"strchr ( user , '@' )"		5257852	1					
ANR	5257950	Callee	strchr		5257852	0					
ANR	5257951	Identifier	strchr		5257852	0					
ANR	5257952	ArgumentList	user		5257852	1					
ANR	5257953	Argument	user		5257852	0					
ANR	5257954	Identifier	user		5257852	0					
ANR	5257955	Argument	'@'		5257852	1					
ANR	5257956	PrimaryExpression	'@'		5257852	0					
ANR	5257957	IfStatement	if ( tmp == NULL || tmp == user || * ( tmp + 1 ) == '\\0' )		5257852	2					
ANR	5257958	Condition	tmp == NULL || tmp == user || * ( tmp + 1 ) == '\\0'	696:6:17061:17108	5257852	0	True				
ANR	5257959	OrExpression	tmp == NULL || tmp == user || * ( tmp + 1 ) == '\\0'		5257852	0		||			
ANR	5257960	EqualityExpression	tmp == NULL		5257852	0		==			
ANR	5257961	Identifier	tmp		5257852	0					
ANR	5257962	Identifier	NULL		5257852	1					
ANR	5257963	OrExpression	tmp == user || * ( tmp + 1 ) == '\\0'		5257852	1		||			
ANR	5257964	EqualityExpression	tmp == user		5257852	0		==			
ANR	5257965	Identifier	tmp		5257852	0					
ANR	5257966	Identifier	user		5257852	1					
ANR	5257967	EqualityExpression	* ( tmp + 1 ) == '\\0'		5257852	1		==			
ANR	5257968	UnaryOperationExpression	* ( tmp + 1 )		5257852	0					
ANR	5257969	UnaryOperator	*		5257852	0					
ANR	5257970	AdditiveExpression	tmp + 1		5257852	1		+			
ANR	5257971	Identifier	tmp		5257852	0					
ANR	5257972	PrimaryExpression	1		5257852	1					
ANR	5257973	PrimaryExpression	'\\0'		5257852	1					
ANR	5257974	CompoundStatement		34:56:931:931	5257852	1					
ANR	5257975	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred: user not in user@domain format\\n"" )"	697:3:17116:17181	5257852	0	True				
ANR	5257976	CallExpression	"dprintf ( D_ALWAYS , ""store_cred: user not in user@domain format\\n"" )"		5257852	0					
ANR	5257977	Callee	dprintf		5257852	0					
ANR	5257978	Identifier	dprintf		5257852	0					
ANR	5257979	ArgumentList	D_ALWAYS		5257852	1					
ANR	5257980	Argument	D_ALWAYS		5257852	0					
ANR	5257981	Identifier	D_ALWAYS		5257852	0					
ANR	5257982	Argument	"""store_cred: user not in user@domain format\\n"""		5257852	1					
ANR	5257983	PrimaryExpression	"""store_cred: user not in user@domain format\\n"""		5257852	0					
ANR	5257984	ReturnStatement	return FAILURE ;	698:3:17186:17200	5257852	1	True				
ANR	5257985	Identifier	FAILURE		5257852	0					
ANR	5257986	IfStatement	"if ( ( ( mode == ADD_MODE ) || ( mode == DELETE_MODE ) ) && ( ( size_t ) ( tmp - user ) == strlen ( POOL_PASSWORD_USERNAME ) ) && ( memcmp ( POOL_PASSWORD_USERNAME , user , tmp - user ) == 0 ) )"		5257852	3					
ANR	5257987	Condition	"( ( mode == ADD_MODE ) || ( mode == DELETE_MODE ) ) && ( ( size_t ) ( tmp - user ) == strlen ( POOL_PASSWORD_USERNAME ) ) && ( memcmp ( POOL_PASSWORD_USERNAME , user , tmp - user ) == 0 )"	700:6:17212:17388	5257852	0	True				
ANR	5257988	AndExpression	"( ( mode == ADD_MODE ) || ( mode == DELETE_MODE ) ) && ( ( size_t ) ( tmp - user ) == strlen ( POOL_PASSWORD_USERNAME ) ) && ( memcmp ( POOL_PASSWORD_USERNAME , user , tmp - user ) == 0 )"		5257852	0		&&			
ANR	5257989	OrExpression	( mode == ADD_MODE ) || ( mode == DELETE_MODE )		5257852	0		||			
ANR	5257990	EqualityExpression	mode == ADD_MODE		5257852	0		==			
ANR	5257991	Identifier	mode		5257852	0					
ANR	5257992	Identifier	ADD_MODE		5257852	1					
ANR	5257993	EqualityExpression	mode == DELETE_MODE		5257852	1		==			
ANR	5257994	Identifier	mode		5257852	0					
ANR	5257995	Identifier	DELETE_MODE		5257852	1					
ANR	5257996	AndExpression	"( ( size_t ) ( tmp - user ) == strlen ( POOL_PASSWORD_USERNAME ) ) && ( memcmp ( POOL_PASSWORD_USERNAME , user , tmp - user ) == 0 )"		5257852	1		&&			
ANR	5257997	EqualityExpression	( size_t ) ( tmp - user ) == strlen ( POOL_PASSWORD_USERNAME )		5257852	0		==			
ANR	5257998	CastExpression	( size_t ) ( tmp - user )		5257852	0					
ANR	5257999	CastTarget	size_t		5257852	0					
ANR	5258000	AdditiveExpression	tmp - user		5257852	1		-			
ANR	5258001	Identifier	tmp		5257852	0					
ANR	5258002	Identifier	user		5257852	1					
ANR	5258003	CallExpression	strlen ( POOL_PASSWORD_USERNAME )		5257852	1					
ANR	5258004	Callee	strlen		5257852	0					
ANR	5258005	Identifier	strlen		5257852	0					
ANR	5258006	ArgumentList	POOL_PASSWORD_USERNAME		5257852	1					
ANR	5258007	Argument	POOL_PASSWORD_USERNAME		5257852	0					
ANR	5258008	Identifier	POOL_PASSWORD_USERNAME		5257852	0					
ANR	5258009	EqualityExpression	"memcmp ( POOL_PASSWORD_USERNAME , user , tmp - user ) == 0"		5257852	1		==			
ANR	5258010	CallExpression	"memcmp ( POOL_PASSWORD_USERNAME , user , tmp - user )"		5257852	0					
ANR	5258011	Callee	memcmp		5257852	0					
ANR	5258012	Identifier	memcmp		5257852	0					
ANR	5258013	ArgumentList	POOL_PASSWORD_USERNAME		5257852	1					
ANR	5258014	Argument	POOL_PASSWORD_USERNAME		5257852	0					
ANR	5258015	Identifier	POOL_PASSWORD_USERNAME		5257852	0					
ANR	5258016	Argument	user		5257852	1					
ANR	5258017	Identifier	user		5257852	0					
ANR	5258018	Argument	tmp - user		5257852	2					
ANR	5258019	AdditiveExpression	tmp - user		5257852	0		-			
ANR	5258020	Identifier	tmp		5257852	0					
ANR	5258021	Identifier	user		5257852	1					
ANR	5258022	PrimaryExpression	0		5257852	1					
ANR	5258023	CompoundStatement		41:2:1213:1213	5257852	1					
ANR	5258024	ExpressionStatement	cmd = STORE_POOL_CRED	704:3:17398:17419	5257852	0	True				
ANR	5258025	AssignmentExpression	cmd = STORE_POOL_CRED		5257852	0		=			
ANR	5258026	Identifier	cmd		5257852	0					
ANR	5258027	Identifier	STORE_POOL_CRED		5257852	1					
ANR	5258028	ExpressionStatement	user = tmp + 1	705:3:17424:17438	5257852	1	True				
ANR	5258029	AssignmentExpression	user = tmp + 1		5257852	0		=			
ANR	5258030	Identifier	user		5257852	0					
ANR	5258031	AdditiveExpression	tmp + 1		5257852	1		+			
ANR	5258032	Identifier	tmp		5257852	0					
ANR	5258033	PrimaryExpression	1		5257852	1					
ANR	5258034	IfStatement	if ( d == NULL )		5257852	4					
ANR	5258035	Condition	d == NULL	708:6:17511:17519	5257852	0	True				
ANR	5258036	EqualityExpression	d == NULL		5257852	0		==			
ANR	5258037	Identifier	d		5257852	0					
ANR	5258038	Identifier	NULL		5257852	1					
ANR	5258039	CompoundStatement		46:17:1342:1342	5257852	1					
ANR	5258040	IfStatement	if ( cmd == STORE_POOL_CRED )		5257852	0					
ANR	5258041	Condition	cmd == STORE_POOL_CRED	709:7:17531:17552	5257852	0	True				
ANR	5258042	EqualityExpression	cmd == STORE_POOL_CRED		5257852	0		==			
ANR	5258043	Identifier	cmd		5257852	0					
ANR	5258044	Identifier	STORE_POOL_CRED		5257852	1					
ANR	5258045	CompoundStatement		50:4:1509:1536	5257852	1					
ANR	5258046	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Storing credential to local master\\n"" )"	711:4:17623:17683	5257852	0	True				
ANR	5258047	CallExpression	"dprintf ( D_FULLDEBUG , ""Storing credential to local master\\n"" )"		5257852	0					
ANR	5258048	Callee	dprintf		5257852	0					
ANR	5258049	Identifier	dprintf		5257852	0					
ANR	5258050	ArgumentList	D_FULLDEBUG		5257852	1					
ANR	5258051	Argument	D_FULLDEBUG		5257852	0					
ANR	5258052	Identifier	D_FULLDEBUG		5257852	0					
ANR	5258053	Argument	"""Storing credential to local master\\n"""		5257852	1					
ANR	5258054	PrimaryExpression	"""Storing credential to local master\\n"""		5257852	0					
ANR	5258055	IdentifierDeclStatement	Daemon my_master ( DT_MASTER ) ;	712:4:17689:17716	5257852	1	True				
ANR	5258056	IdentifierDecl	my_master ( DT_MASTER )		5257852	0					
ANR	5258057	IdentifierDeclType	Daemon		5257852	0					
ANR	5258058	Identifier	my_master		5257852	1					
ANR	5258059	Identifier	DT_MASTER		5257852	2					
ANR	5258060	ExpressionStatement	"sock = my_master . startCommand ( cmd , Stream :: reli_sock , 0 )"	713:4:17722:17778	5257852	2	True				
ANR	5258061	AssignmentExpression	"sock = my_master . startCommand ( cmd , Stream :: reli_sock , 0 )"		5257852	0		=			
ANR	5258062	Identifier	sock		5257852	0					
ANR	5258063	CallExpression	"my_master . startCommand ( cmd , Stream :: reli_sock , 0 )"		5257852	1					
ANR	5258064	Callee	my_master . startCommand		5257852	0					
ANR	5258065	MemberAccess	my_master . startCommand		5257852	0					
ANR	5258066	Identifier	my_master		5257852	0					
ANR	5258067	Identifier	startCommand		5257852	1					
ANR	5258068	ArgumentList	cmd		5257852	1					
ANR	5258069	Argument	cmd		5257852	0					
ANR	5258070	Identifier	cmd		5257852	0					
ANR	5258071	Argument	Stream :: reli_sock		5257852	1					
ANR	5258072	Identifier	Stream :: reli_sock		5257852	0					
ANR	5258073	Argument	0		5257852	2					
ANR	5258074	PrimaryExpression	0		5257852	0					
ANR	5258075	ElseStatement	else		5257852	0					
ANR	5258076	CompoundStatement		55:4:1685:1712	5257852	0					
ANR	5258077	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Storing credential to local schedd\\n"" )"	716:4:17799:17859	5257852	0	True				
ANR	5258078	CallExpression	"dprintf ( D_FULLDEBUG , ""Storing credential to local schedd\\n"" )"		5257852	0					
ANR	5258079	Callee	dprintf		5257852	0					
ANR	5258080	Identifier	dprintf		5257852	0					
ANR	5258081	ArgumentList	D_FULLDEBUG		5257852	1					
ANR	5258082	Argument	D_FULLDEBUG		5257852	0					
ANR	5258083	Identifier	D_FULLDEBUG		5257852	0					
ANR	5258084	Argument	"""Storing credential to local schedd\\n"""		5257852	1					
ANR	5258085	PrimaryExpression	"""Storing credential to local schedd\\n"""		5257852	0					
ANR	5258086	IdentifierDeclStatement	Daemon my_schedd ( DT_SCHEDD ) ;	717:4:17865:17892	5257852	1	True				
ANR	5258087	IdentifierDecl	my_schedd ( DT_SCHEDD )		5257852	0					
ANR	5258088	IdentifierDeclType	Daemon		5257852	0					
ANR	5258089	Identifier	my_schedd		5257852	1					
ANR	5258090	Identifier	DT_SCHEDD		5257852	2					
ANR	5258091	ExpressionStatement	"sock = my_schedd . startCommand ( cmd , Stream :: reli_sock , 0 )"	718:4:17898:17954	5257852	2	True				
ANR	5258092	AssignmentExpression	"sock = my_schedd . startCommand ( cmd , Stream :: reli_sock , 0 )"		5257852	0		=			
ANR	5258093	Identifier	sock		5257852	0					
ANR	5258094	CallExpression	"my_schedd . startCommand ( cmd , Stream :: reli_sock , 0 )"		5257852	1					
ANR	5258095	Callee	my_schedd . startCommand		5257852	0					
ANR	5258096	MemberAccess	my_schedd . startCommand		5257852	0					
ANR	5258097	Identifier	my_schedd		5257852	0					
ANR	5258098	Identifier	startCommand		5257852	1					
ANR	5258099	ArgumentList	cmd		5257852	1					
ANR	5258100	Argument	cmd		5257852	0					
ANR	5258101	Identifier	cmd		5257852	0					
ANR	5258102	Argument	Stream :: reli_sock		5257852	1					
ANR	5258103	Identifier	Stream :: reli_sock		5257852	0					
ANR	5258104	Argument	0		5257852	2					
ANR	5258105	PrimaryExpression	0		5257852	0					
ANR	5258106	ElseStatement	else		5257852	0					
ANR	5258107	CompoundStatement		58:9:1790:1790	5257852	0					
ANR	5258108	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Starting a command on a REMOTE schedd\\n"" )"	721:3:17975:18038	5257852	0	True				
ANR	5258109	CallExpression	"dprintf ( D_FULLDEBUG , ""Starting a command on a REMOTE schedd\\n"" )"		5257852	0					
ANR	5258110	Callee	dprintf		5257852	0					
ANR	5258111	Identifier	dprintf		5257852	0					
ANR	5258112	ArgumentList	D_FULLDEBUG		5257852	1					
ANR	5258113	Argument	D_FULLDEBUG		5257852	0					
ANR	5258114	Identifier	D_FULLDEBUG		5257852	0					
ANR	5258115	Argument	"""Starting a command on a REMOTE schedd\\n"""		5257852	1					
ANR	5258116	PrimaryExpression	"""Starting a command on a REMOTE schedd\\n"""		5257852	0					
ANR	5258117	ExpressionStatement	"sock = d -> startCommand ( cmd , Stream :: reli_sock , 0 )"	722:3:18043:18092	5257852	1	True				
ANR	5258118	AssignmentExpression	"sock = d -> startCommand ( cmd , Stream :: reli_sock , 0 )"		5257852	0		=			
ANR	5258119	Identifier	sock		5257852	0					
ANR	5258120	CallExpression	"d -> startCommand ( cmd , Stream :: reli_sock , 0 )"		5257852	1					
ANR	5258121	Callee	d -> startCommand		5257852	0					
ANR	5258122	PtrMemberAccess	d -> startCommand		5257852	0					
ANR	5258123	Identifier	d		5257852	0					
ANR	5258124	Identifier	startCommand		5257852	1					
ANR	5258125	ArgumentList	cmd		5257852	1					
ANR	5258126	Argument	cmd		5257852	0					
ANR	5258127	Identifier	cmd		5257852	0					
ANR	5258128	Argument	Stream :: reli_sock		5257852	1					
ANR	5258129	Identifier	Stream :: reli_sock		5257852	0					
ANR	5258130	Argument	0		5257852	2					
ANR	5258131	PrimaryExpression	0		5257852	0					
ANR	5258132	IfStatement	if ( ! sock )		5257852	5					
ANR	5258133	Condition	! sock	725:6:18107:18111	5257852	0	True				
ANR	5258134	UnaryOperationExpression	! sock		5257852	0					
ANR	5258135	UnaryOperator	!		5257852	0					
ANR	5258136	Identifier	sock		5257852	1					
ANR	5258137	CompoundStatement		63:14:1935:1935	5257852	1					
ANR	5258138	ExpressionStatement	"dprintf ( D_ALWAYS , ""STORE_CRED: Failed to start command.\\n"" )"	726:3:18120:18184	5257852	0	True				
ANR	5258139	CallExpression	"dprintf ( D_ALWAYS , ""STORE_CRED: Failed to start command.\\n"" )"		5257852	0					
ANR	5258140	Callee	dprintf		5257852	0					
ANR	5258141	Identifier	dprintf		5257852	0					
ANR	5258142	ArgumentList	D_ALWAYS		5257852	1					
ANR	5258143	Argument	D_ALWAYS		5257852	0					
ANR	5258144	Identifier	D_ALWAYS		5257852	0					
ANR	5258145	Argument	"""STORE_CRED: Failed to start command.\\n"""		5257852	1					
ANR	5258146	PrimaryExpression	"""STORE_CRED: Failed to start command.\\n"""		5257852	0					
ANR	5258147	ExpressionStatement	"dprintf ( D_ALWAYS , ""STORE_CRED: Unable to contact the REMOTE schedd.\\n"" )"	728:3:18189:18265	5257852	1	True				
ANR	5258148	CallExpression	"dprintf ( D_ALWAYS , ""STORE_CRED: Unable to contact the REMOTE schedd.\\n"" )"		5257852	0					
ANR	5258149	Callee	dprintf		5257852	0					
ANR	5258150	Identifier	dprintf		5257852	0					
ANR	5258151	ArgumentList	D_ALWAYS		5257852	1					
ANR	5258152	Argument	D_ALWAYS		5257852	0					
ANR	5258153	Identifier	D_ALWAYS		5257852	0					
ANR	5258154	Argument	"""STORE_CRED: Unable to contact the REMOTE schedd.\\n"""		5257852	1					
ANR	5258155	PrimaryExpression	"""STORE_CRED: Unable to contact the REMOTE schedd.\\n"""		5257852	0					
ANR	5258156	ReturnStatement	return FAILURE ;	730:3:18270:18284	5257852	2	True				
ANR	5258157	Identifier	FAILURE		5257852	0					
ANR	5258158	IfStatement	if ( ( ( mode == ADD_MODE ) || ( mode == DELETE_MODE ) ) && ! force && ( d != NULL ) && ( ( sock -> type ( ) != Stream :: reli_sock ) || ! ( ( ReliSock * ) sock ) -> triedAuthentication ( ) || ! sock -> get_encryption ( ) ) )		5257852	6					
ANR	5258159	Condition	( ( mode == ADD_MODE ) || ( mode == DELETE_MODE ) ) && ! force && ( d != NULL ) && ( ( sock -> type ( ) != Stream :: reli_sock ) || ! ( ( ReliSock * ) sock ) -> triedAuthentication ( ) || ! sock -> get_encryption ( ) )	735:6:18414:18599	5257852	0	True				
ANR	5258160	AndExpression	( ( mode == ADD_MODE ) || ( mode == DELETE_MODE ) ) && ! force && ( d != NULL ) && ( ( sock -> type ( ) != Stream :: reli_sock ) || ! ( ( ReliSock * ) sock ) -> triedAuthentication ( ) || ! sock -> get_encryption ( ) )		5257852	0		&&			
ANR	5258161	OrExpression	( mode == ADD_MODE ) || ( mode == DELETE_MODE )		5257852	0		||			
ANR	5258162	EqualityExpression	mode == ADD_MODE		5257852	0		==			
ANR	5258163	Identifier	mode		5257852	0					
ANR	5258164	Identifier	ADD_MODE		5257852	1					
ANR	5258165	EqualityExpression	mode == DELETE_MODE		5257852	1		==			
ANR	5258166	Identifier	mode		5257852	0					
ANR	5258167	Identifier	DELETE_MODE		5257852	1					
ANR	5258168	AndExpression	! force && ( d != NULL ) && ( ( sock -> type ( ) != Stream :: reli_sock ) || ! ( ( ReliSock * ) sock ) -> triedAuthentication ( ) || ! sock -> get_encryption ( ) )		5257852	1		&&			
ANR	5258169	UnaryOperationExpression	! force		5257852	0					
ANR	5258170	UnaryOperator	!		5257852	0					
ANR	5258171	Identifier	force		5257852	1					
ANR	5258172	AndExpression	( d != NULL ) && ( ( sock -> type ( ) != Stream :: reli_sock ) || ! ( ( ReliSock * ) sock ) -> triedAuthentication ( ) || ! sock -> get_encryption ( ) )		5257852	1		&&			
ANR	5258173	EqualityExpression	d != NULL		5257852	0		!=			
ANR	5258174	Identifier	d		5257852	0					
ANR	5258175	Identifier	NULL		5257852	1					
ANR	5258176	OrExpression	( sock -> type ( ) != Stream :: reli_sock ) || ! ( ( ReliSock * ) sock ) -> triedAuthentication ( ) || ! sock -> get_encryption ( )		5257852	1		||			
ANR	5258177	EqualityExpression	sock -> type ( ) != Stream :: reli_sock		5257852	0		!=			
ANR	5258178	CallExpression	sock -> type ( )		5257852	0					
ANR	5258179	Callee	sock -> type		5257852	0					
ANR	5258180	PtrMemberAccess	sock -> type		5257852	0					
ANR	5258181	Identifier	sock		5257852	0					
ANR	5258182	Identifier	type		5257852	1					
ANR	5258183	ArgumentList			5257852	1					
ANR	5258184	Identifier	Stream :: reli_sock		5257852	1					
ANR	5258185	OrExpression	! ( ( ReliSock * ) sock ) -> triedAuthentication ( ) || ! sock -> get_encryption ( )		5257852	1		||			
ANR	5258186	UnaryOperationExpression	! ( ( ReliSock * ) sock ) -> triedAuthentication ( )		5257852	0					
ANR	5258187	UnaryOperator	!		5257852	0					
ANR	5258188	CallExpression	( ( ReliSock * ) sock ) -> triedAuthentication ( )		5257852	1					
ANR	5258189	Callee	( ( ReliSock * ) sock ) -> triedAuthentication		5257852	0					
ANR	5258190	PtrMemberAccess	( ( ReliSock * ) sock ) -> triedAuthentication		5257852	0					
ANR	5258191	CastExpression	( ReliSock * ) sock		5257852	0					
ANR	5258192	CastTarget	ReliSock *		5257852	0					
ANR	5258193	Identifier	sock		5257852	1					
ANR	5258194	Identifier	triedAuthentication		5257852	1					
ANR	5258195	ArgumentList			5257852	1					
ANR	5258196	UnaryOperationExpression	! sock -> get_encryption ( )		5257852	1					
ANR	5258197	UnaryOperator	!		5257852	0					
ANR	5258198	CallExpression	sock -> get_encryption ( )		5257852	1					
ANR	5258199	Callee	sock -> get_encryption		5257852	0					
ANR	5258200	PtrMemberAccess	sock -> get_encryption		5257852	0					
ANR	5258201	Identifier	sock		5257852	0					
ANR	5258202	Identifier	get_encryption		5257852	1					
ANR	5258203	ArgumentList			5257852	1					
ANR	5258204	CompoundStatement		74:114:2422:2422	5257852	1					
ANR	5258205	ExpressionStatement	"dprintf ( D_ALWAYS , ""STORE_CRED: blocking attempt to update over insecure channel\\n"" )"	737:3:18607:18690	5257852	0	True				
ANR	5258206	CallExpression	"dprintf ( D_ALWAYS , ""STORE_CRED: blocking attempt to update over insecure channel\\n"" )"		5257852	0					
ANR	5258207	Callee	dprintf		5257852	0					
ANR	5258208	Identifier	dprintf		5257852	0					
ANR	5258209	ArgumentList	D_ALWAYS		5257852	1					
ANR	5258210	Argument	D_ALWAYS		5257852	0					
ANR	5258211	Identifier	D_ALWAYS		5257852	0					
ANR	5258212	Argument	"""STORE_CRED: blocking attempt to update over insecure channel\\n"""		5257852	1					
ANR	5258213	PrimaryExpression	"""STORE_CRED: blocking attempt to update over insecure channel\\n"""		5257852	0					
ANR	5258214	Statement	delete	738:3:18695:18700	5257852	1	True				
ANR	5258215	ExpressionStatement	sock	738:10:18702:18706	5257852	2	True				
ANR	5258216	Identifier	sock		5257852	0					
ANR	5258217	ReturnStatement	return FAILURE_NOT_SECURE ;	739:3:18711:18736	5257852	3	True				
ANR	5258218	Identifier	FAILURE_NOT_SECURE		5257852	0					
ANR	5258219	IfStatement	if ( cmd == STORE_CRED )		5257852	7					
ANR	5258220	Condition	cmd == STORE_CRED	742:6:18751:18767	5257852	0	True				
ANR	5258221	EqualityExpression	cmd == STORE_CRED		5257852	0		==			
ANR	5258222	Identifier	cmd		5257852	0					
ANR	5258223	Identifier	STORE_CRED		5257852	1					
ANR	5258224	CompoundStatement		80:25:2590:2590	5257852	1					
ANR	5258225	Statement	result	743:3:18775:18780	5257852	0	True				
ANR	5258226	Statement	=	743:10:18782:18782	5257852	1	True				
ANR	5258227	Statement	code_store_cred	743:12:18784:18798	5257852	2	True				
ANR	5258228	Statement	(	743:27:18799:18799	5257852	3	True				
ANR	5258229	Statement	sock	743:28:18800:18803	5257852	4	True				
ANR	5258230	Statement	","	743:32:18804:18804	5257852	5	True				
ANR	5258231	Statement	const_cast	743:34:18806:18815	5257852	6	True				
ANR	5258232	Statement	<	743:44:18816:18816	5257852	7	True				
ANR	5258233	Statement	char	743:45:18817:18820	5257852	8	True				
ANR	5258234	Statement	*	743:49:18821:18821	5257852	9	True				
ANR	5258235	Statement	&	743:50:18822:18822	5257852	10	True				
ANR	5258236	Statement	>	743:51:18823:18823	5257852	11	True				
ANR	5258237	Statement	(	743:52:18824:18824	5257852	12	True				
ANR	5258238	Statement	user	743:53:18825:18828	5257852	13	True				
ANR	5258239	Statement	)	743:57:18829:18829	5257852	14	True				
ANR	5258240	Statement	","	743:58:18830:18830	5257852	15	True				
ANR	5258241	Statement	const_cast	744:4:18836:18845	5257852	16	True				
ANR	5258242	Statement	<	744:14:18846:18846	5257852	17	True				
ANR	5258243	Statement	char	744:15:18847:18850	5257852	18	True				
ANR	5258244	Statement	*	744:19:18851:18851	5257852	19	True				
ANR	5258245	Statement	&	744:20:18852:18852	5257852	20	True				
ANR	5258246	Statement	>	744:21:18853:18853	5257852	21	True				
ANR	5258247	Statement	(	744:22:18854:18854	5257852	22	True				
ANR	5258248	Statement	pw	744:23:18855:18856	5257852	23	True				
ANR	5258249	Statement	)	744:25:18857:18857	5257852	24	True				
ANR	5258250	Statement	","	744:26:18858:18858	5257852	25	True				
ANR	5258251	Statement	mode	744:28:18860:18863	5257852	26	True				
ANR	5258252	Statement	)	744:32:18864:18864	5257852	27	True				
ANR	5258253	ExpressionStatement		744:33:18865:18865	5257852	28	True				
ANR	5258254	IfStatement	if ( result == FALSE )		5257852	29					
ANR	5258255	Condition	result == FALSE	745:7:18874:18888	5257852	0	True				
ANR	5258256	EqualityExpression	result == FALSE		5257852	0		==			
ANR	5258257	Identifier	result		5257852	0					
ANR	5258258	Identifier	FALSE		5257852	1					
ANR	5258259	CompoundStatement		83:25:2712:2712	5257852	1					
ANR	5258260	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred: code_store_cred failed.\\n"" )"	746:4:18898:18956	5257852	0	True				
ANR	5258261	CallExpression	"dprintf ( D_ALWAYS , ""store_cred: code_store_cred failed.\\n"" )"		5257852	0					
ANR	5258262	Callee	dprintf		5257852	0					
ANR	5258263	Identifier	dprintf		5257852	0					
ANR	5258264	ArgumentList	D_ALWAYS		5257852	1					
ANR	5258265	Argument	D_ALWAYS		5257852	0					
ANR	5258266	Identifier	D_ALWAYS		5257852	0					
ANR	5258267	Argument	"""store_cred: code_store_cred failed.\\n"""		5257852	1					
ANR	5258268	PrimaryExpression	"""store_cred: code_store_cred failed.\\n"""		5257852	0					
ANR	5258269	Statement	delete	747:4:18962:18967	5257852	1	True				
ANR	5258270	ExpressionStatement	sock	747:11:18969:18973	5257852	2	True				
ANR	5258271	Identifier	sock		5257852	0					
ANR	5258272	ReturnStatement	return FAILURE ;	748:4:18979:18993	5257852	3	True				
ANR	5258273	Identifier	FAILURE		5257852	0					
ANR	5258274	ElseStatement	else		5257852	0					
ANR	5258275	CompoundStatement		89:7:2831:2831	5257852	0					
ANR	5258276	Statement	if	753:3:19085:19086	5257852	0	True				
ANR	5258277	Statement	(	753:6:19088:19088	5257852	1	True				
ANR	5258278	Statement	!	753:7:19089:19089	5257852	2	True				
ANR	5258279	Statement	sock	753:8:19090:19093	5257852	3	True				
ANR	5258280	Statement	->	753:12:19094:19095	5257852	4	True				
ANR	5258281	Statement	code	753:14:19096:19099	5257852	5	True				
ANR	5258282	Statement	(	753:18:19100:19100	5257852	6	True				
ANR	5258283	Statement	const_cast	753:19:19101:19110	5257852	7	True				
ANR	5258284	Statement	<	753:29:19111:19111	5257852	8	True				
ANR	5258285	Statement	char	753:30:19112:19115	5257852	9	True				
ANR	5258286	Statement	*	753:34:19116:19116	5257852	10	True				
ANR	5258287	Statement	&	753:35:19117:19117	5257852	11	True				
ANR	5258288	Statement	>	753:36:19118:19118	5257852	12	True				
ANR	5258289	Statement	(	753:37:19119:19119	5257852	13	True				
ANR	5258290	Statement	user	753:38:19120:19123	5257852	14	True				
ANR	5258291	Statement	)	753:42:19124:19124	5257852	15	True				
ANR	5258292	Statement	)	753:43:19125:19125	5257852	16	True				
ANR	5258293	Statement	||	753:45:19127:19128	5257852	17	True				
ANR	5258294	Statement	!	754:4:19134:19134	5257852	18	True				
ANR	5258295	Statement	sock	754:5:19135:19138	5257852	19	True				
ANR	5258296	Statement	->	754:9:19139:19140	5257852	20	True				
ANR	5258297	Statement	code	754:11:19141:19144	5257852	21	True				
ANR	5258298	Statement	(	754:15:19145:19145	5257852	22	True				
ANR	5258299	Statement	const_cast	754:16:19146:19155	5257852	23	True				
ANR	5258300	Statement	<	754:26:19156:19156	5257852	24	True				
ANR	5258301	Statement	char	754:27:19157:19160	5257852	25	True				
ANR	5258302	Statement	*	754:31:19161:19161	5257852	26	True				
ANR	5258303	Statement	&	754:32:19162:19162	5257852	27	True				
ANR	5258304	Statement	>	754:33:19163:19163	5257852	28	True				
ANR	5258305	Statement	(	754:34:19164:19164	5257852	29	True				
ANR	5258306	Statement	pw	754:35:19165:19166	5257852	30	True				
ANR	5258307	Statement	)	754:37:19167:19167	5257852	31	True				
ANR	5258308	Statement	)	754:38:19168:19168	5257852	32	True				
ANR	5258309	Statement	||	754:40:19170:19171	5257852	33	True				
ANR	5258310	Statement	!	755:4:19177:19177	5257852	34	True				
ANR	5258311	Statement	sock	755:5:19178:19181	5257852	35	True				
ANR	5258312	Statement	->	755:9:19182:19183	5257852	36	True				
ANR	5258313	Statement	end_of_message	755:11:19184:19197	5257852	37	True				
ANR	5258314	Statement	(	755:25:19198:19198	5257852	38	True				
ANR	5258315	Statement	)	755:26:19199:19199	5257852	39	True				
ANR	5258316	Statement	)	755:27:19200:19200	5257852	40	True				
ANR	5258317	CompoundStatement		93:29:3022:3022	5257852	41					
ANR	5258318	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred: failed to send STORE_POOL_CRED message\\n"" )"	756:4:19208:19281	5257852	0	True				
ANR	5258319	CallExpression	"dprintf ( D_ALWAYS , ""store_cred: failed to send STORE_POOL_CRED message\\n"" )"		5257852	0					
ANR	5258320	Callee	dprintf		5257852	0					
ANR	5258321	Identifier	dprintf		5257852	0					
ANR	5258322	ArgumentList	D_ALWAYS		5257852	1					
ANR	5258323	Argument	D_ALWAYS		5257852	0					
ANR	5258324	Identifier	D_ALWAYS		5257852	0					
ANR	5258325	Argument	"""store_cred: failed to send STORE_POOL_CRED message\\n"""		5257852	1					
ANR	5258326	PrimaryExpression	"""store_cred: failed to send STORE_POOL_CRED message\\n"""		5257852	0					
ANR	5258327	Statement	delete	757:4:19287:19292	5257852	1	True				
ANR	5258328	ExpressionStatement	sock	757:11:19294:19298	5257852	2	True				
ANR	5258329	Identifier	sock		5257852	0					
ANR	5258330	ReturnStatement	return FAILURE ;	758:4:19304:19318	5257852	3	True				
ANR	5258331	Identifier	FAILURE		5257852	0					
ANR	5258332	ExpressionStatement	sock -> decode ( )	762:2:19334:19348	5257852	8	True				
ANR	5258333	CallExpression	sock -> decode ( )		5257852	0					
ANR	5258334	Callee	sock -> decode		5257852	0					
ANR	5258335	PtrMemberAccess	sock -> decode		5257852	0					
ANR	5258336	Identifier	sock		5257852	0					
ANR	5258337	Identifier	decode		5257852	1					
ANR	5258338	ArgumentList			5257852	1					
ANR	5258339	ExpressionStatement	result = sock -> code ( return_val )	764:2:19355:19386	5257852	9	True				
ANR	5258340	AssignmentExpression	result = sock -> code ( return_val )		5257852	0		=			
ANR	5258341	Identifier	result		5257852	0					
ANR	5258342	CallExpression	sock -> code ( return_val )		5257852	1					
ANR	5258343	Callee	sock -> code		5257852	0					
ANR	5258344	PtrMemberAccess	sock -> code		5257852	0					
ANR	5258345	Identifier	sock		5257852	0					
ANR	5258346	Identifier	code		5257852	1					
ANR	5258347	ArgumentList	return_val		5257852	1					
ANR	5258348	Argument	return_val		5257852	0					
ANR	5258349	Identifier	return_val		5257852	0					
ANR	5258350	IfStatement	if ( ! result )		5257852	10					
ANR	5258351	Condition	! result	765:6:19394:19400	5257852	0	True				
ANR	5258352	UnaryOperationExpression	! result		5257852	0					
ANR	5258353	UnaryOperator	!		5257852	0					
ANR	5258354	Identifier	result		5257852	1					
ANR	5258355	CompoundStatement		103:16:3224:3224	5257852	1					
ANR	5258356	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred: failed to recv answer.\\n"" )"	766:3:19409:19466	5257852	0	True				
ANR	5258357	CallExpression	"dprintf ( D_ALWAYS , ""store_cred: failed to recv answer.\\n"" )"		5257852	0					
ANR	5258358	Callee	dprintf		5257852	0					
ANR	5258359	Identifier	dprintf		5257852	0					
ANR	5258360	ArgumentList	D_ALWAYS		5257852	1					
ANR	5258361	Argument	D_ALWAYS		5257852	0					
ANR	5258362	Identifier	D_ALWAYS		5257852	0					
ANR	5258363	Argument	"""store_cred: failed to recv answer.\\n"""		5257852	1					
ANR	5258364	PrimaryExpression	"""store_cred: failed to recv answer.\\n"""		5257852	0					
ANR	5258365	Statement	delete	767:3:19471:19476	5257852	1	True				
ANR	5258366	ExpressionStatement	sock	767:10:19478:19482	5257852	2	True				
ANR	5258367	Identifier	sock		5257852	0					
ANR	5258368	ReturnStatement	return FAILURE ;	768:3:19487:19501	5257852	3	True				
ANR	5258369	Identifier	FAILURE		5257852	0					
ANR	5258370	ExpressionStatement	result = sock -> end_of_message ( )	771:2:19512:19543	5257852	11	True				
ANR	5258371	AssignmentExpression	result = sock -> end_of_message ( )		5257852	0		=			
ANR	5258372	Identifier	result		5257852	0					
ANR	5258373	CallExpression	sock -> end_of_message ( )		5257852	1					
ANR	5258374	Callee	sock -> end_of_message		5257852	0					
ANR	5258375	PtrMemberAccess	sock -> end_of_message		5257852	0					
ANR	5258376	Identifier	sock		5257852	0					
ANR	5258377	Identifier	end_of_message		5257852	1					
ANR	5258378	ArgumentList			5257852	1					
ANR	5258379	IfStatement	if ( ! result )		5257852	12					
ANR	5258380	Condition	! result	772:6:19551:19557	5257852	0	True				
ANR	5258381	UnaryOperationExpression	! result		5257852	0					
ANR	5258382	UnaryOperator	!		5257852	0					
ANR	5258383	Identifier	result		5257852	1					
ANR	5258384	CompoundStatement		110:16:3381:3381	5257852	1					
ANR	5258385	ExpressionStatement	"dprintf ( D_ALWAYS , ""store_cred: failed to recv eom.\\n"" )"	773:3:19566:19620	5257852	0	True				
ANR	5258386	CallExpression	"dprintf ( D_ALWAYS , ""store_cred: failed to recv eom.\\n"" )"		5257852	0					
ANR	5258387	Callee	dprintf		5257852	0					
ANR	5258388	Identifier	dprintf		5257852	0					
ANR	5258389	ArgumentList	D_ALWAYS		5257852	1					
ANR	5258390	Argument	D_ALWAYS		5257852	0					
ANR	5258391	Identifier	D_ALWAYS		5257852	0					
ANR	5258392	Argument	"""store_cred: failed to recv eom.\\n"""		5257852	1					
ANR	5258393	PrimaryExpression	"""store_cred: failed to recv eom.\\n"""		5257852	0					
ANR	5258394	Statement	delete	774:3:19625:19630	5257852	1	True				
ANR	5258395	ExpressionStatement	sock	774:10:19632:19636	5257852	2	True				
ANR	5258396	Identifier	sock		5257852	0					
ANR	5258397	ReturnStatement	return FAILURE ;	775:3:19641:19655	5257852	3	True				
ANR	5258398	Identifier	FAILURE		5257852	0					
ANR	5258399	SwitchStatement	switch ( mode )		5257852	17					
ANR	5258400	Condition	mode	780:8:19730:19733	5257852	0	True				
ANR	5258401	Identifier	mode		5257852	0					
ANR	5258402	CompoundStatement		119:1:3557:3557	5257852	1					
ANR	5258403	Label	case ADD_MODE :	782:1:19740:19753	5257852	0	True				
ANR	5258404	Identifier	ADD_MODE		5257852	0					
ANR	5258405	IfStatement	if ( return_val == SUCCESS )		5257852	1					
ANR	5258406	Condition	return_val == SUCCESS	783:6:19761:19781	5257852	0	True				
ANR	5258407	EqualityExpression	return_val == SUCCESS		5257852	0		==			
ANR	5258408	Identifier	return_val		5257852	0					
ANR	5258409	Identifier	SUCCESS		5257852	1					
ANR	5258410	CompoundStatement		121:30:3605:3605	5257852	1					
ANR	5258411	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Addition succeeded!\\n"" )"	784:3:19790:19835	5257852	0	True				
ANR	5258412	CallExpression	"dprintf ( D_FULLDEBUG , ""Addition succeeded!\\n"" )"		5257852	0					
ANR	5258413	Callee	dprintf		5257852	0					
ANR	5258414	Identifier	dprintf		5257852	0					
ANR	5258415	ArgumentList	D_FULLDEBUG		5257852	1					
ANR	5258416	Argument	D_FULLDEBUG		5257852	0					
ANR	5258417	Identifier	D_FULLDEBUG		5257852	0					
ANR	5258418	Argument	"""Addition succeeded!\\n"""		5257852	1					
ANR	5258419	PrimaryExpression	"""Addition succeeded!\\n"""		5257852	0					
ANR	5258420	ElseStatement	else		5257852	0					
ANR	5258421	CompoundStatement		123:9:3671:3671	5257852	0					
ANR	5258422	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Addition failed!\\n"" )"	786:3:19856:19898	5257852	0	True				
ANR	5258423	CallExpression	"dprintf ( D_FULLDEBUG , ""Addition failed!\\n"" )"		5257852	0					
ANR	5258424	Callee	dprintf		5257852	0					
ANR	5258425	Identifier	dprintf		5257852	0					
ANR	5258426	ArgumentList	D_FULLDEBUG		5257852	1					
ANR	5258427	Argument	D_FULLDEBUG		5257852	0					
ANR	5258428	Identifier	D_FULLDEBUG		5257852	0					
ANR	5258429	Argument	"""Addition failed!\\n"""		5257852	1					
ANR	5258430	PrimaryExpression	"""Addition failed!\\n"""		5257852	0					
ANR	5258431	BreakStatement	break ;	788:2:19906:19911	5257852	2	True				
ANR	5258432	Label	case DELETE_MODE :	789:1:19914:19930	5257852	3	True				
ANR	5258433	Identifier	DELETE_MODE		5257852	0					
ANR	5258434	IfStatement	if ( return_val == SUCCESS )		5257852	4					
ANR	5258435	Condition	return_val == SUCCESS	790:6:19938:19958	5257852	0	True				
ANR	5258436	EqualityExpression	return_val == SUCCESS		5257852	0		==			
ANR	5258437	Identifier	return_val		5257852	0					
ANR	5258438	Identifier	SUCCESS		5257852	1					
ANR	5258439	CompoundStatement		128:30:3782:3782	5257852	1					
ANR	5258440	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Delete succeeded!\\n"" )"	791:3:19967:20010	5257852	0	True				
ANR	5258441	CallExpression	"dprintf ( D_FULLDEBUG , ""Delete succeeded!\\n"" )"		5257852	0					
ANR	5258442	Callee	dprintf		5257852	0					
ANR	5258443	Identifier	dprintf		5257852	0					
ANR	5258444	ArgumentList	D_FULLDEBUG		5257852	1					
ANR	5258445	Argument	D_FULLDEBUG		5257852	0					
ANR	5258446	Identifier	D_FULLDEBUG		5257852	0					
ANR	5258447	Argument	"""Delete succeeded!\\n"""		5257852	1					
ANR	5258448	PrimaryExpression	"""Delete succeeded!\\n"""		5257852	0					
ANR	5258449	ElseStatement	else		5257852	0					
ANR	5258450	CompoundStatement		130:9:3841:3841	5257852	0					
ANR	5258451	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Delete failed!\\n"" )"	793:3:20026:20066	5257852	0	True				
ANR	5258452	CallExpression	"dprintf ( D_FULLDEBUG , ""Delete failed!\\n"" )"		5257852	0					
ANR	5258453	Callee	dprintf		5257852	0					
ANR	5258454	Identifier	dprintf		5257852	0					
ANR	5258455	ArgumentList	D_FULLDEBUG		5257852	1					
ANR	5258456	Argument	D_FULLDEBUG		5257852	0					
ANR	5258457	Identifier	D_FULLDEBUG		5257852	0					
ANR	5258458	Argument	"""Delete failed!\\n"""		5257852	1					
ANR	5258459	PrimaryExpression	"""Delete failed!\\n"""		5257852	0					
ANR	5258460	BreakStatement	break ;	795:2:20074:20079	5257852	5	True				
ANR	5258461	Label	case QUERY_MODE :	796:1:20082:20097	5257852	6	True				
ANR	5258462	Identifier	QUERY_MODE		5257852	0					
ANR	5258463	IfStatement	if ( return_val == SUCCESS )		5257852	7					
ANR	5258464	Condition	return_val == SUCCESS	797:6:20105:20125	5257852	0	True				
ANR	5258465	EqualityExpression	return_val == SUCCESS		5257852	0		==			
ANR	5258466	Identifier	return_val		5257852	0					
ANR	5258467	Identifier	SUCCESS		5257852	1					
ANR	5258468	CompoundStatement		135:30:3949:3949	5257852	1					
ANR	5258469	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""We have a credential stored!\\n"" )"	798:3:20134:20188	5257852	0	True				
ANR	5258470	CallExpression	"dprintf ( D_FULLDEBUG , ""We have a credential stored!\\n"" )"		5257852	0					
ANR	5258471	Callee	dprintf		5257852	0					
ANR	5258472	Identifier	dprintf		5257852	0					
ANR	5258473	ArgumentList	D_FULLDEBUG		5257852	1					
ANR	5258474	Argument	D_FULLDEBUG		5257852	0					
ANR	5258475	Identifier	D_FULLDEBUG		5257852	0					
ANR	5258476	Argument	"""We have a credential stored!\\n"""		5257852	1					
ANR	5258477	PrimaryExpression	"""We have a credential stored!\\n"""		5257852	0					
ANR	5258478	ElseStatement	else		5257852	0					
ANR	5258479	CompoundStatement		137:9:4019:4019	5257852	0					
ANR	5258480	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Query failed!\\n"" )"	800:3:20204:20243	5257852	0	True				
ANR	5258481	CallExpression	"dprintf ( D_FULLDEBUG , ""Query failed!\\n"" )"		5257852	0					
ANR	5258482	Callee	dprintf		5257852	0					
ANR	5258483	Identifier	dprintf		5257852	0					
ANR	5258484	ArgumentList	D_FULLDEBUG		5257852	1					
ANR	5258485	Argument	D_FULLDEBUG		5257852	0					
ANR	5258486	Identifier	D_FULLDEBUG		5257852	0					
ANR	5258487	Argument	"""Query failed!\\n"""		5257852	1					
ANR	5258488	PrimaryExpression	"""Query failed!\\n"""		5257852	0					
ANR	5258489	BreakStatement	break ;	802:2:20251:20256	5257852	8	True				
ANR	5258490	IfStatement	if ( sock )		5257852	18					
ANR	5258491	Condition	sock	805:6:20268:20271	5257852	0	True				
ANR	5258492	Identifier	sock		5257852	0					
ANR	5258493	Statement	delete	805:13:20275:20280	5257852	1	True				
ANR	5258494	ExpressionStatement	sock	805:20:20282:20286	5257852	19	True				
ANR	5258495	Identifier	sock		5257852	0					
ANR	5258496	ReturnStatement	return return_val ;	807:1:20290:20307	5257852	20	True				
ANR	5258497	Identifier	return_val		5257852	0					
ANR	5258498	ReturnType	int		5257852	1					
ANR	5258499	Identifier	store_cred		5257852	2					
ANR	5258500	ParameterList	"const char * user , const char * pw , int mode , Daemon * d , bool force"		5257852	3					
ANR	5258501	Parameter	const char * user	663:11:16112:16127	5257852	0	True				
ANR	5258502	ParameterType	const char *		5257852	0					
ANR	5258503	Identifier	user		5257852	1					
ANR	5258504	Parameter	const char * pw	663:29:16130:16143	5257852	1	True				
ANR	5258505	ParameterType	const char *		5257852	0					
ANR	5258506	Identifier	pw		5257852	1					
ANR	5258507	Parameter	int mode	663:45:16146:16153	5257852	2	True				
ANR	5258508	ParameterType	int		5257852	0					
ANR	5258509	Identifier	mode		5257852	1					
ANR	5258510	Parameter	Daemon * d	663:55:16156:16164	5257852	3	True				
ANR	5258511	ParameterType	Daemon *		5257852	0					
ANR	5258512	Identifier	d		5257852	1					
ANR	5258513	Parameter	bool force	663:66:16167:16176	5257852	4	True				
ANR	5258514	ParameterType	bool		5257852	0					
ANR	5258515	Identifier	force		5257852	1					
ANR	5258516	CFGEntryNode	ENTRY		5257852		True				
ANR	5258517	CFGExitNode	EXIT		5257852		True				
ANR	5258518	Symbol	* tmp		5257852						
ANR	5258519	Symbol	DELETE_MODE		5257852						
ANR	5258520	Symbol	FAILURE_NOT_SECURE		5257852						
ANR	5258521	Symbol	sock -> end_of_message		5257852						
ANR	5258522	Symbol	pw		5257852						
ANR	5258523	Symbol	STORE_POOL_CRED		5257852						
ANR	5258524	Symbol	strchr		5257852						
ANR	5258525	Symbol	store_cred_service		5257852						
ANR	5258526	Symbol	is_root		5257852						
ANR	5258527	Symbol	* ( tmp + 1 )		5257852						
ANR	5258528	Symbol	mode		5257852						
ANR	5258529	Symbol	result		5257852						
ANR	5258530	Symbol	strlen		5257852						
ANR	5258531	Symbol	sock -> get_encryption		5257852						
ANR	5258532	Symbol	memcmp		5257852						
ANR	5258533	Symbol	STORE_CRED		5257852						
ANR	5258534	Symbol	tmp		5257852						
ANR	5258535	Symbol	( ( ReliSock * ) sock ) -> triedAuthentication		5257852						
ANR	5258536	Symbol	Stream :: reli_sock		5257852						
ANR	5258537	Symbol	mode_name		5257852						
ANR	5258538	Symbol	my_master		5257852						
ANR	5258539	Symbol	* mode_offset		5257852						
ANR	5258540	Symbol	ADD_MODE		5257852						
ANR	5258541	Symbol	mode_offset		5257852						
ANR	5258542	Symbol	* mode_name		5257852						
ANR	5258543	Symbol	* sock		5257852						
ANR	5258544	Symbol	my_schedd		5257852						
ANR	5258545	Symbol	NULL		5257852						
ANR	5258546	Symbol	SUCCESS		5257852						
ANR	5258547	Symbol	d		5257852						
ANR	5258548	Symbol	D_ALWAYS		5257852						
ANR	5258549	Symbol	D_FULLDEBUG		5257852						
ANR	5258550	Symbol	return_val		5257852						
ANR	5258551	Symbol	FAILURE		5257852						
ANR	5258552	Symbol	* d		5257852						
ANR	5258553	Symbol	my_master . startCommand		5257852						
ANR	5258554	Symbol	sock		5257852						
ANR	5258555	Symbol	sock -> code		5257852						
ANR	5258556	Symbol	POOL_PASSWORD_USERNAME		5257852						
ANR	5258557	Symbol	my_schedd . startCommand		5257852						
ANR	5258558	Symbol	sock -> type		5257852						
ANR	5258559	Symbol	* mode		5257852						
ANR	5258560	Symbol	force		5257852						
ANR	5258561	Symbol	FALSE		5257852						
ANR	5258562	Symbol	cmd		5257852						
ANR	5258563	Symbol	user		5257852						
ANR	5258564	Symbol	d -> startCommand		5257852						
ANR	5258565	Function	deleteCredential	810:0:20313:20430							
ANR	5258566	FunctionDef	"deleteCredential (const char * user , const char * pw , Daemon * d)"		5258565	0					
ANR	5258567	CompoundStatement		810:68:20381:20430	5258565	0					
ANR	5258568	ReturnStatement	"return store_cred ( user , pw , DELETE_MODE , d ) ;"	811:1:20384:20427	5258565	0	True				
ANR	5258569	CallExpression	"store_cred ( user , pw , DELETE_MODE , d )"		5258565	0					
ANR	5258570	Callee	store_cred		5258565	0					
ANR	5258571	Identifier	store_cred		5258565	0					
ANR	5258572	ArgumentList	user		5258565	1					
ANR	5258573	Argument	user		5258565	0					
ANR	5258574	Identifier	user		5258565	0					
ANR	5258575	Argument	pw		5258565	1					
ANR	5258576	Identifier	pw		5258565	0					
ANR	5258577	Argument	DELETE_MODE		5258565	2					
ANR	5258578	Identifier	DELETE_MODE		5258565	0					
ANR	5258579	Argument	d		5258565	3					
ANR	5258580	Identifier	d		5258565	0					
ANR	5258581	ReturnType	int		5258565	1					
ANR	5258582	Identifier	deleteCredential		5258565	2					
ANR	5258583	ParameterList	"const char * user , const char * pw , Daemon * d"		5258565	3					
ANR	5258584	Parameter	const char * user	810:22:20335:20350	5258565	0	True				
ANR	5258585	ParameterType	const char *		5258565	0					
ANR	5258586	Identifier	user		5258565	1					
ANR	5258587	Parameter	const char * pw	810:40:20353:20366	5258565	1	True				
ANR	5258588	ParameterType	const char *		5258565	0					
ANR	5258589	Identifier	pw		5258565	1					
ANR	5258590	Parameter	Daemon * d	810:56:20369:20377	5258565	2	True				
ANR	5258591	ParameterType	Daemon *		5258565	0					
ANR	5258592	Identifier	d		5258565	1					
ANR	5258593	CFGEntryNode	ENTRY		5258565		True				
ANR	5258594	CFGExitNode	EXIT		5258565		True				
ANR	5258595	Symbol	DELETE_MODE		5258565						
ANR	5258596	Symbol	d		5258565						
ANR	5258597	Symbol	pw		5258565						
ANR	5258598	Symbol	store_cred		5258565						
ANR	5258599	Symbol	user		5258565						
ANR	5258600	Function	addCredential	814:0:20433:20544							
ANR	5258601	FunctionDef	"addCredential (const char * user , const char * pw , Daemon * d)"		5258600	0					
ANR	5258602	CompoundStatement		814:65:20498:20544	5258600	0					
ANR	5258603	ReturnStatement	"return store_cred ( user , pw , ADD_MODE , d ) ;"	815:1:20501:20541	5258600	0	True				
ANR	5258604	CallExpression	"store_cred ( user , pw , ADD_MODE , d )"		5258600	0					
ANR	5258605	Callee	store_cred		5258600	0					
ANR	5258606	Identifier	store_cred		5258600	0					
ANR	5258607	ArgumentList	user		5258600	1					
ANR	5258608	Argument	user		5258600	0					
ANR	5258609	Identifier	user		5258600	0					
ANR	5258610	Argument	pw		5258600	1					
ANR	5258611	Identifier	pw		5258600	0					
ANR	5258612	Argument	ADD_MODE		5258600	2					
ANR	5258613	Identifier	ADD_MODE		5258600	0					
ANR	5258614	Argument	d		5258600	3					
ANR	5258615	Identifier	d		5258600	0					
ANR	5258616	ReturnType	int		5258600	1					
ANR	5258617	Identifier	addCredential		5258600	2					
ANR	5258618	ParameterList	"const char * user , const char * pw , Daemon * d"		5258600	3					
ANR	5258619	Parameter	const char * user	814:19:20452:20467	5258600	0	True				
ANR	5258620	ParameterType	const char *		5258600	0					
ANR	5258621	Identifier	user		5258600	1					
ANR	5258622	Parameter	const char * pw	814:37:20470:20483	5258600	1	True				
ANR	5258623	ParameterType	const char *		5258600	0					
ANR	5258624	Identifier	pw		5258600	1					
ANR	5258625	Parameter	Daemon * d	814:53:20486:20494	5258600	2	True				
ANR	5258626	ParameterType	Daemon *		5258600	0					
ANR	5258627	Identifier	d		5258600	1					
ANR	5258628	CFGEntryNode	ENTRY		5258600		True				
ANR	5258629	CFGExitNode	EXIT		5258600		True				
ANR	5258630	Symbol	d		5258600						
ANR	5258631	Symbol	pw		5258600						
ANR	5258632	Symbol	store_cred		5258600						
ANR	5258633	Symbol	user		5258600						
ANR	5258634	Symbol	ADD_MODE		5258600						
ANR	5258635	Function	queryCredential	818:0:20547:20648							
ANR	5258636	FunctionDef	"queryCredential (const char * user , Daemon * d)"		5258635	0					
ANR	5258637	CompoundStatement		818:51:20598:20648	5258635	0					
ANR	5258638	ReturnStatement	"return store_cred ( user , NULL , QUERY_MODE , d ) ;"	819:1:20601:20645	5258635	0	True				
ANR	5258639	CallExpression	"store_cred ( user , NULL , QUERY_MODE , d )"		5258635	0					
ANR	5258640	Callee	store_cred		5258635	0					
ANR	5258641	Identifier	store_cred		5258635	0					
ANR	5258642	ArgumentList	user		5258635	1					
ANR	5258643	Argument	user		5258635	0					
ANR	5258644	Identifier	user		5258635	0					
ANR	5258645	Argument	NULL		5258635	1					
ANR	5258646	Identifier	NULL		5258635	0					
ANR	5258647	Argument	QUERY_MODE		5258635	2					
ANR	5258648	Identifier	QUERY_MODE		5258635	0					
ANR	5258649	Argument	d		5258635	3					
ANR	5258650	Identifier	d		5258635	0					
ANR	5258651	ReturnType	int		5258635	1					
ANR	5258652	Identifier	queryCredential		5258635	2					
ANR	5258653	ParameterList	"const char * user , Daemon * d"		5258635	3					
ANR	5258654	Parameter	const char * user	818:21:20568:20583	5258635	0	True				
ANR	5258655	ParameterType	const char *		5258635	0					
ANR	5258656	Identifier	user		5258635	1					
ANR	5258657	Parameter	Daemon * d	818:39:20586:20594	5258635	1	True				
ANR	5258658	ParameterType	Daemon *		5258635	0					
ANR	5258659	Identifier	d		5258635	1					
ANR	5258660	CFGEntryNode	ENTRY		5258635		True				
ANR	5258661	CFGExitNode	EXIT		5258635		True				
ANR	5258662	Symbol	NULL		5258635						
ANR	5258663	Symbol	d		5258635						
ANR	5258664	Symbol	store_cred		5258635						
ANR	5258665	Symbol	QUERY_MODE		5258635						
ANR	5258666	Symbol	user		5258635						
ANR	5258667	DeclStmt									
ANR	5258668	Decl							struct termios	struct termios	stored_settings
ANR	5258669	Function	echo_off	829:0:20777:21017							
ANR	5258670	FunctionDef	echo_off ()		5258669	0					
ANR	5258671	CompoundStatement		830:0:20804:21017	5258669	0					
ANR	5258672	IdentifierDeclStatement	struct termios new_settings ;	831:1:20807:20834	5258669	0	True				
ANR	5258673	IdentifierDecl	new_settings		5258669	0					
ANR	5258674	IdentifierDeclType	struct termios		5258669	0					
ANR	5258675	Identifier	new_settings		5258669	1					
ANR	5258676	ExpressionStatement	"tcgetattr ( 0 , & stored_settings )"	832:1:20837:20867	5258669	1	True				
ANR	5258677	CallExpression	"tcgetattr ( 0 , & stored_settings )"		5258669	0					
ANR	5258678	Callee	tcgetattr		5258669	0					
ANR	5258679	Identifier	tcgetattr		5258669	0					
ANR	5258680	ArgumentList	0		5258669	1					
ANR	5258681	Argument	0		5258669	0					
ANR	5258682	PrimaryExpression	0		5258669	0					
ANR	5258683	Argument	& stored_settings		5258669	1					
ANR	5258684	UnaryOperationExpression	& stored_settings		5258669	0					
ANR	5258685	UnaryOperator	&		5258669	0					
ANR	5258686	Identifier	stored_settings		5258669	1					
ANR	5258687	ExpressionStatement	"memcpy ( & new_settings , & stored_settings , sizeof ( struct termios ) )"	833:1:20870:20933	5258669	2	True				
ANR	5258688	CallExpression	"memcpy ( & new_settings , & stored_settings , sizeof ( struct termios ) )"		5258669	0					
ANR	5258689	Callee	memcpy		5258669	0					
ANR	5258690	Identifier	memcpy		5258669	0					
ANR	5258691	ArgumentList	& new_settings		5258669	1					
ANR	5258692	Argument	& new_settings		5258669	0					
ANR	5258693	UnaryOperationExpression	& new_settings		5258669	0					
ANR	5258694	UnaryOperator	&		5258669	0					
ANR	5258695	Identifier	new_settings		5258669	1					
ANR	5258696	Argument	& stored_settings		5258669	1					
ANR	5258697	UnaryOperationExpression	& stored_settings		5258669	0					
ANR	5258698	UnaryOperator	&		5258669	0					
ANR	5258699	Identifier	stored_settings		5258669	1					
ANR	5258700	Argument	sizeof ( struct termios )		5258669	2					
ANR	5258701	SizeofExpression	sizeof ( struct termios )		5258669	0					
ANR	5258702	Sizeof	sizeof		5258669	0					
ANR	5258703	SizeofOperand	struct termios		5258669	1					
ANR	5258704	ExpressionStatement	new_settings . c_lflag &= ( ~ECHO )	834:1:20936:20967	5258669	3	True				
ANR	5258705	AssignmentExpression	new_settings . c_lflag &= ( ~ECHO )		5258669	0		&=			
ANR	5258706	MemberAccess	new_settings . c_lflag		5258669	0					
ANR	5258707	Identifier	new_settings		5258669	0					
ANR	5258708	Identifier	c_lflag		5258669	1					
ANR	5258709	Identifier	~ECHO		5258669	1					
ANR	5258710	ExpressionStatement	"tcsetattr ( 0 , TCSANOW , & new_settings )"	835:1:20970:21006	5258669	4	True				
ANR	5258711	CallExpression	"tcsetattr ( 0 , TCSANOW , & new_settings )"		5258669	0					
ANR	5258712	Callee	tcsetattr		5258669	0					
ANR	5258713	Identifier	tcsetattr		5258669	0					
ANR	5258714	ArgumentList	0		5258669	1					
ANR	5258715	Argument	0		5258669	0					
ANR	5258716	PrimaryExpression	0		5258669	0					
ANR	5258717	Argument	TCSANOW		5258669	1					
ANR	5258718	Identifier	TCSANOW		5258669	0					
ANR	5258719	Argument	& new_settings		5258669	2					
ANR	5258720	UnaryOperationExpression	& new_settings		5258669	0					
ANR	5258721	UnaryOperator	&		5258669	0					
ANR	5258722	Identifier	new_settings		5258669	1					
ANR	5258723	ReturnStatement	return ;	836:1:21009:21015	5258669	5	True				
ANR	5258724	ReturnType	static void		5258669	1					
ANR	5258725	Identifier	echo_off		5258669	2					
ANR	5258726	ParameterList			5258669	3					
ANR	5258727	CFGEntryNode	ENTRY		5258669		True				
ANR	5258728	CFGExitNode	EXIT		5258669		True				
ANR	5258729	Symbol	& stored_settings		5258669						
ANR	5258730	Symbol	new_settings		5258669						
ANR	5258731	Symbol	TCSANOW		5258669						
ANR	5258732	Symbol	& new_settings		5258669						
ANR	5258733	Symbol	new_settings . c_lflag		5258669						
ANR	5258734	Symbol	~ECHO		5258669						
ANR	5258735	Function	echo_on	839:0:21020:21103							
ANR	5258736	FunctionDef	echo_on ()		5258735	0					
ANR	5258737	CompoundStatement		840:0:21046:21103	5258735	0					
ANR	5258738	ExpressionStatement	"tcsetattr ( 0 , TCSANOW , & stored_settings )"	841:4:21052:21089	5258735	0	True				
ANR	5258739	CallExpression	"tcsetattr ( 0 , TCSANOW , & stored_settings )"		5258735	0					
ANR	5258740	Callee	tcsetattr		5258735	0					
ANR	5258741	Identifier	tcsetattr		5258735	0					
ANR	5258742	ArgumentList	0		5258735	1					
ANR	5258743	Argument	0		5258735	0					
ANR	5258744	PrimaryExpression	0		5258735	0					
ANR	5258745	Argument	TCSANOW		5258735	1					
ANR	5258746	Identifier	TCSANOW		5258735	0					
ANR	5258747	Argument	& stored_settings		5258735	2					
ANR	5258748	UnaryOperationExpression	& stored_settings		5258735	0					
ANR	5258749	UnaryOperator	&		5258735	0					
ANR	5258750	Identifier	stored_settings		5258735	1					
ANR	5258751	ReturnStatement	return ;	842:4:21095:21101	5258735	1	True				
ANR	5258752	ReturnType	static void		5258735	1					
ANR	5258753	Identifier	echo_on		5258735	2					
ANR	5258754	ParameterList			5258735	3					
ANR	5258755	CFGEntryNode	ENTRY		5258735		True				
ANR	5258756	CFGExitNode	EXIT		5258735		True				
ANR	5258757	Symbol	& stored_settings		5258735						
ANR	5258758	Symbol	TCSANOW		5258735						
ANR	5258759	Function	read_from_keyboard	848:0:21188:23660							
ANR	5258760	FunctionDef	"read_from_keyboard (char * buf , int maxlength , bool echo)"		5258759	0					
ANR	5258761	CompoundStatement		849:56:21249:23660	5258759	0					
ANR	5258762	IdentifierDeclStatement	"int ch , ch_count ;"	851:1:21272:21288	5258759	0	True				
ANR	5258763	IdentifierDecl	ch		5258759	0					
ANR	5258764	IdentifierDeclType	int		5258759	0					
ANR	5258765	Identifier	ch		5258759	1					
ANR	5258766	IdentifierDecl	ch_count		5258759	1					
ANR	5258767	IdentifierDeclType	int		5258759	0					
ANR	5258768	Identifier	ch_count		5258759	1					
ANR	5258769	ExpressionStatement	ch = ch_count = 0	853:1:21292:21309	5258759	1	True				
ANR	5258770	AssignmentExpression	ch = ch_count = 0		5258759	0		=			
ANR	5258771	Identifier	ch		5258759	0					
ANR	5258772	AssignmentExpression	ch_count = 0		5258759	1		=			
ANR	5258773	Identifier	ch_count		5258759	0					
ANR	5258774	PrimaryExpression	0		5258759	1					
ANR	5258775	ExpressionStatement	fflush ( stdout )	854:1:21312:21326	5258759	2	True				
ANR	5258776	CallExpression	fflush ( stdout )		5258759	0					
ANR	5258777	Callee	fflush		5258759	0					
ANR	5258778	Identifier	fflush		5258759	0					
ANR	5258779	ArgumentList	stdout		5258759	1					
ANR	5258780	Argument	stdout		5258759	0					
ANR	5258781	Identifier	stdout		5258759	0					
ANR	5258782	IdentifierDeclStatement	const char end_char = '\\n' ;	856:1:21330:21356	5258759	3	True				
ANR	5258783	IdentifierDecl	end_char = '\\n'		5258759	0					
ANR	5258784	IdentifierDeclType	const char		5258759	0					
ANR	5258785	Identifier	end_char		5258759	1					
ANR	5258786	AssignmentExpression	end_char = '\\n'		5258759	2		=			
ANR	5258787	Identifier	end_char		5258759	0					
ANR	5258788	PrimaryExpression	'\\n'		5258759	1					
ANR	5258789	IfStatement	if ( ! echo )		5258759	4					
ANR	5258790	Condition	! echo	857:5:21363:21367	5258759	0	True				
ANR	5258791	UnaryOperationExpression	! echo		5258759	0					
ANR	5258792	UnaryOperator	!		5258759	0					
ANR	5258793	Identifier	echo		5258759	1					
ANR	5258794	ExpressionStatement	echo_off ( )	857:12:21370:21380	5258759	1	True				
ANR	5258795	CallExpression	echo_off ( )		5258759	0					
ANR	5258796	Callee	echo_off		5258759	0					
ANR	5258797	Identifier	echo_off		5258759	0					
ANR	5258798	ArgumentList			5258759	1					
ANR	5258799	WhileStatement	while ( ch_count < maxlength - 1 )		5258759	5					
ANR	5258800	Condition	ch_count < maxlength - 1	859:9:21395:21416	5258759	0	True				
ANR	5258801	RelationalExpression	ch_count < maxlength - 1		5258759	0		<			
ANR	5258802	Identifier	ch_count		5258759	0					
ANR	5258803	AdditiveExpression	maxlength - 1		5258759	1		-			
ANR	5258804	Identifier	maxlength		5258759	0					
ANR	5258805	PrimaryExpression	1		5258759	1					
ANR	5258806	CompoundStatement		11:34:170:170	5258759	1					
ANR	5258807	ExpressionStatement	ch = getchar ( )	860:2:21424:21438	5258759	0	True				
ANR	5258808	AssignmentExpression	ch = getchar ( )		5258759	0		=			
ANR	5258809	Identifier	ch		5258759	0					
ANR	5258810	CallExpression	getchar ( )		5258759	1					
ANR	5258811	Callee	getchar		5258759	0					
ANR	5258812	Identifier	getchar		5258759	0					
ANR	5258813	ArgumentList			5258759	1					
ANR	5258814	IfStatement	if ( ch == end_char )		5258759	1					
ANR	5258815	Condition	ch == end_char	861:7:21447:21460	5258759	0	True				
ANR	5258816	EqualityExpression	ch == end_char		5258759	0		==			
ANR	5258817	Identifier	ch		5258759	0					
ANR	5258818	Identifier	end_char		5258759	1					
ANR	5258819	CompoundStatement		13:24:214:214	5258759	1					
ANR	5258820	BreakStatement	break ;	862:3:21469:21474	5258759	0	True				
ANR	5258821	ElseStatement	else		5258759	0					
ANR	5258822	IfStatement	if ( ch == '\\b' )		5258759	0					
ANR	5258823	Condition	ch == '\\b'	863:14:21490:21499	5258759	0	True				
ANR	5258824	EqualityExpression	ch == '\\b'		5258759	0		==			
ANR	5258825	Identifier	ch		5258759	0					
ANR	5258826	PrimaryExpression	'\\b'		5258759	1					
ANR	5258827	CompoundStatement		15:26:252:252	5258759	1					
ANR	5258828	IfStatement	if ( ch_count > 0 )		5258759	0					
ANR	5258829	Condition	ch_count > 0	864:8:21525:21536	5258759	0	True				
ANR	5258830	RelationalExpression	ch_count > 0		5258759	0		>			
ANR	5258831	Identifier	ch_count		5258759	0					
ANR	5258832	PrimaryExpression	0		5258759	1					
ANR	5258833	CompoundStatement		16:23:290:290	5258759	1					
ANR	5258834	ExpressionStatement	ch_count --	864:25:21542:21552	5258759	0	True				
ANR	5258835	PostIncDecOperationExpression	ch_count --		5258759	0					
ANR	5258836	Identifier	ch_count		5258759	0					
ANR	5258837	IncDec	--		5258759	1					
ANR	5258838	ContinueStatement	continue ;	865:3:21559:21567	5258759	1	True				
ANR	5258839	ElseStatement	else		5258759	0					
ANR	5258840	IfStatement	if ( ch == '\\003' )		5258759	0					
ANR	5258841	Condition	ch == '\\003'	866:14:21583:21594	5258759	0	True				
ANR	5258842	EqualityExpression	ch == '\\003'		5258759	0		==			
ANR	5258843	Identifier	ch		5258759	0					
ANR	5258844	PrimaryExpression	'\\003'		5258759	1					
ANR	5258845	CompoundStatement		18:29:348:348	5258759	1					
ANR	5258846	ReturnStatement	return FALSE ;	867:3:21613:21625	5258759	0	True				
ANR	5258847	Identifier	FALSE		5258759	0					
ANR	5258848	ExpressionStatement	buf [ ch_count ++ ] = ( char ) ch	869:2:21633:21660	5258759	2	True				
ANR	5258849	AssignmentExpression	buf [ ch_count ++ ] = ( char ) ch		5258759	0		=			
ANR	5258850	ArrayIndexing	buf [ ch_count ++ ]		5258759	0					
ANR	5258851	Identifier	buf		5258759	0					
ANR	5258852	PostIncDecOperationExpression	ch_count ++		5258759	1					
ANR	5258853	Identifier	ch_count		5258759	0					
ANR	5258854	IncDec	++		5258759	1					
ANR	5258855	CastExpression	( char ) ch		5258759	1					
ANR	5258856	CastTarget	char		5258759	0					
ANR	5258857	Identifier	ch		5258759	1					
ANR	5258858	ExpressionStatement	buf [ ch_count ] = '\\0'	871:1:21666:21686	5258759	6	True				
ANR	5258859	AssignmentExpression	buf [ ch_count ] = '\\0'		5258759	0		=			
ANR	5258860	ArrayIndexing	buf [ ch_count ]		5258759	0					
ANR	5258861	Identifier	buf		5258759	0					
ANR	5258862	Identifier	ch_count		5258759	1					
ANR	5258863	PrimaryExpression	'\\0'		5258759	1					
ANR	5258864	IfStatement	if ( ! echo )		5258759	7					
ANR	5258865	Condition	! echo	873:5:21694:21698	5258759	0	True				
ANR	5258866	UnaryOperationExpression	! echo		5258759	0					
ANR	5258867	UnaryOperator	!		5258759	0					
ANR	5258868	Identifier	echo		5258759	1					
ANR	5258869	ExpressionStatement	echo_on ( )	873:12:21701:21710	5258759	1	True				
ANR	5258870	CallExpression	echo_on ( )		5258759	0					
ANR	5258871	Callee	echo_on		5258759	0					
ANR	5258872	Identifier	echo_on		5258759	0					
ANR	5258873	ArgumentList			5258759	1					
ANR	5258874	ReturnStatement	return TRUE ;	936:1:23647:23658	5258759	8	True				
ANR	5258875	Identifier	TRUE		5258759	0					
ANR	5258876	ReturnType	bool		5258759	1					
ANR	5258877	Identifier	read_from_keyboard		5258759	2					
ANR	5258878	ParameterList	"char * buf , int maxlength , bool echo"		5258759	3					
ANR	5258879	Parameter	char * buf	849:19:21212:21220	5258759	0	True				
ANR	5258880	ParameterType	char *		5258759	0					
ANR	5258881	Identifier	buf		5258759	1					
ANR	5258882	Parameter	int maxlength	849:30:21223:21235	5258759	1	True				
ANR	5258883	ParameterType	int		5258759	0					
ANR	5258884	Identifier	maxlength		5258759	1					
ANR	5258885	Parameter	bool echo	849:45:21238:21246	5258759	2	True				
ANR	5258886	ParameterType	bool		5258759	0					
ANR	5258887	Identifier	echo		5258759	1					
ANR	5258888	CFGEntryNode	ENTRY		5258759		True				
ANR	5258889	CFGExitNode	EXIT		5258759		True				
ANR	5258890	Symbol	getchar		5258759						
ANR	5258891	Symbol	* ch_count		5258759						
ANR	5258892	Symbol	buf		5258759						
ANR	5258893	Symbol	* buf		5258759						
ANR	5258894	Symbol	stdout		5258759						
ANR	5258895	Symbol	maxlength		5258759						
ANR	5258896	Symbol	ch		5258759						
ANR	5258897	Symbol	ch_count		5258759						
ANR	5258898	Symbol	end_char		5258759						
ANR	5258899	Symbol	TRUE		5258759						
ANR	5258900	Symbol	echo		5258759						
ANR	5258901	Symbol	FALSE		5258759						
ANR	5258902	Function	get_password	939:0:23663:23963							
ANR	5258903	FunctionDef	get_password ()		5258902	0					
ANR	5258904	CompoundStatement		940:15:23684:23963	5258902	0					
ANR	5258905	IdentifierDeclStatement	char * buf ;	941:1:23687:23696	5258902	0	True				
ANR	5258906	IdentifierDecl	* buf		5258902	0					
ANR	5258907	IdentifierDeclType	char *		5258902	0					
ANR	5258908	Identifier	buf		5258902	1					
ANR	5258909	ExpressionStatement	buf = new char [ MAX_PASSWORD_LENGTH + 1 ]	943:1:23701:23740	5258902	1	True				
ANR	5258910	AssignmentExpression	buf = new char [ MAX_PASSWORD_LENGTH + 1 ]		5258902	0		=			
ANR	5258911	Identifier	buf		5258902	0					
ANR	5258912	AdditiveExpression	MAX_PASSWORD_LENGTH + 1		5258902	1		+			
ANR	5258913	Identifier	MAX_PASSWORD_LENGTH		5258902	0					
ANR	5258914	PrimaryExpression	1		5258902	1					
ANR	5258915	IfStatement	if ( ! buf )		5258902	2					
ANR	5258916	Condition	! buf	945:5:23749:23753	5258902	0	True				
ANR	5258917	UnaryOperationExpression	! buf		5258902	0					
ANR	5258918	UnaryOperator	!		5258902	0					
ANR	5258919	Identifier	buf		5258902	1					
ANR	5258920	CompoundStatement		6:12:71:71	5258902	1					
ANR	5258921	ExpressionStatement	"fprintf ( stderr , ""Out of Memory!\\n\\n"" )"	945:14:23758:23795	5258902	0	True				
ANR	5258922	CallExpression	"fprintf ( stderr , ""Out of Memory!\\n\\n"" )"		5258902	0					
ANR	5258923	Callee	fprintf		5258902	0					
ANR	5258924	Identifier	fprintf		5258902	0					
ANR	5258925	ArgumentList	stderr		5258902	1					
ANR	5258926	Argument	stderr		5258902	0					
ANR	5258927	Identifier	stderr		5258902	0					
ANR	5258928	Argument	"""Out of Memory!\\n\\n"""		5258902	1					
ANR	5258929	PrimaryExpression	"""Out of Memory!\\n\\n"""		5258902	0					
ANR	5258930	ReturnStatement	return NULL ;	945:53:23797:23808	5258902	1	True				
ANR	5258931	Identifier	NULL		5258902	0					
ANR	5258932	ExpressionStatement	"printf ( ""Enter password: "" )"	948:1:23818:23844	5258902	3	True				
ANR	5258933	CallExpression	"printf ( ""Enter password: "" )"		5258902	0					
ANR	5258934	Callee	printf		5258902	0					
ANR	5258935	Identifier	printf		5258902	0					
ANR	5258936	ArgumentList	"""Enter password: """		5258902	1					
ANR	5258937	Argument	"""Enter password: """		5258902	0					
ANR	5258938	PrimaryExpression	"""Enter password: """		5258902	0					
ANR	5258939	IfStatement	"if ( ! read_from_keyboard ( buf , MAX_PASSWORD_LENGTH + 1 , false ) )"		5258902	4					
ANR	5258940	Condition	"! read_from_keyboard ( buf , MAX_PASSWORD_LENGTH + 1 , false )"	949:6:23852:23908	5258902	0	True				
ANR	5258941	UnaryOperationExpression	"! read_from_keyboard ( buf , MAX_PASSWORD_LENGTH + 1 , false )"		5258902	0					
ANR	5258942	UnaryOperator	!		5258902	0					
ANR	5258943	CallExpression	"read_from_keyboard ( buf , MAX_PASSWORD_LENGTH + 1 , false )"		5258902	1					
ANR	5258944	Callee	read_from_keyboard		5258902	0					
ANR	5258945	Identifier	read_from_keyboard		5258902	0					
ANR	5258946	ArgumentList	buf		5258902	1					
ANR	5258947	Argument	buf		5258902	0					
ANR	5258948	Identifier	buf		5258902	0					
ANR	5258949	Argument	MAX_PASSWORD_LENGTH + 1		5258902	1					
ANR	5258950	AdditiveExpression	MAX_PASSWORD_LENGTH + 1		5258902	0		+			
ANR	5258951	Identifier	MAX_PASSWORD_LENGTH		5258902	0					
ANR	5258952	PrimaryExpression	1		5258902	1					
ANR	5258953	Argument	false		5258902	2					
ANR	5258954	Identifier	false		5258902	0					
ANR	5258955	CompoundStatement		10:66:227:227	5258902	1					
ANR	5258956	Statement	delete	950:2:23916:23921	5258902	0	True				
ANR	5258957	Statement	[	950:8:23922:23922	5258902	1	True				
ANR	5258958	Statement	]	950:9:23923:23923	5258902	2	True				
ANR	5258959	ExpressionStatement	buf	950:11:23925:23928	5258902	3	True				
ANR	5258960	Identifier	buf		5258902	0					
ANR	5258961	ReturnStatement	return NULL ;	951:2:23932:23943	5258902	4	True				
ANR	5258962	Identifier	NULL		5258902	0					
ANR	5258963	ReturnStatement	return buf ;	954:1:23951:23961	5258902	5	True				
ANR	5258964	Identifier	buf		5258902	0					
ANR	5258965	ReturnType	char *		5258902	1					
ANR	5258966	Identifier	get_password		5258902	2					
ANR	5258967	ParameterList			5258902	3					
ANR	5258968	CFGEntryNode	ENTRY		5258902		True				
ANR	5258969	CFGExitNode	EXIT		5258902		True				
ANR	5258970	Symbol	buf		5258902						
ANR	5258971	Symbol	NULL		5258902						
ANR	5258972	Symbol	false		5258902						
ANR	5258973	Symbol	MAX_PASSWORD_LENGTH		5258902						
ANR	5258974	Symbol	stderr		5258902						
ANR	5258975	Symbol	read_from_keyboard		5258902						
