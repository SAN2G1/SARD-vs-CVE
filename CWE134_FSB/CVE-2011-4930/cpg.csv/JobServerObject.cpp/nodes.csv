command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	230403	File	data/converged/CVE-2011-4930_htcondor/JobServerObject.cpp								
ANR	230404	Function	JobServerObject :: JobServerObject	52:0:1197:1552							
ANR	230405	FunctionDef	"JobServerObject :: JobServerObject (ManagementAgent * agent , const char * _name , ObjectId & _oid)"		230404	0					
ANR	230406	CompoundStatement		53:0:1292:1552	230404	0					
ANR	230407	ExpressionStatement	"mgmtObject = new JobServer ( agent , this )"	54:4:1298:1340	230404	0	True				
ANR	230408	AssignmentExpression	"mgmtObject = new JobServer ( agent , this )"		230404	0		=			
ANR	230409	Identifier	mgmtObject		230404	0					
ANR	230410	Expression	"agent , this"		230404	1					
ANR	230411	Identifier	agent		230404	0					
ANR	230412	Identifier	this		230404	1					
ANR	230413	ExpressionStatement	mgmtObject -> set_schedulerRef ( _oid )	55:4:1346:1380	230404	1	True				
ANR	230414	CallExpression	mgmtObject -> set_schedulerRef ( _oid )		230404	0					
ANR	230415	Callee	mgmtObject -> set_schedulerRef		230404	0					
ANR	230416	PtrMemberAccess	mgmtObject -> set_schedulerRef		230404	0					
ANR	230417	Identifier	mgmtObject		230404	0					
ANR	230418	Identifier	set_schedulerRef		230404	1					
ANR	230419	ArgumentList	_oid		230404	1					
ANR	230420	Argument	_oid		230404	0					
ANR	230421	Identifier	_oid		230404	0					
ANR	230422	IdentifierDeclStatement	"bool _lifetime = param_boolean ( ""QMF_IS_PERSISTENT"" , true ) ;"	58:4:1439:1496	230404	2	True				
ANR	230423	IdentifierDecl	"_lifetime = param_boolean ( ""QMF_IS_PERSISTENT"" , true )"		230404	0					
ANR	230424	IdentifierDeclType	bool		230404	0					
ANR	230425	Identifier	_lifetime		230404	1					
ANR	230426	AssignmentExpression	"_lifetime = param_boolean ( ""QMF_IS_PERSISTENT"" , true )"		230404	2		=			
ANR	230427	Identifier	_lifetime		230404	0					
ANR	230428	CallExpression	"param_boolean ( ""QMF_IS_PERSISTENT"" , true )"		230404	1					
ANR	230429	Callee	param_boolean		230404	0					
ANR	230430	Identifier	param_boolean		230404	0					
ANR	230431	ArgumentList	"""QMF_IS_PERSISTENT"""		230404	1					
ANR	230432	Argument	"""QMF_IS_PERSISTENT"""		230404	0					
ANR	230433	PrimaryExpression	"""QMF_IS_PERSISTENT"""		230404	0					
ANR	230434	Argument	true		230404	1					
ANR	230435	Identifier	true		230404	0					
ANR	230436	ExpressionStatement	"agent -> addObject ( mgmtObject , _name , _lifetime )"	59:4:1502:1550	230404	3	True				
ANR	230437	CallExpression	"agent -> addObject ( mgmtObject , _name , _lifetime )"		230404	0					
ANR	230438	Callee	agent -> addObject		230404	0					
ANR	230439	PtrMemberAccess	agent -> addObject		230404	0					
ANR	230440	Identifier	agent		230404	0					
ANR	230441	Identifier	addObject		230404	1					
ANR	230442	ArgumentList	mgmtObject		230404	1					
ANR	230443	Argument	mgmtObject		230404	0					
ANR	230444	Identifier	mgmtObject		230404	0					
ANR	230445	Argument	_name		230404	1					
ANR	230446	Identifier	_name		230404	0					
ANR	230447	Argument	_lifetime		230404	2					
ANR	230448	Identifier	_lifetime		230404	0					
ANR	230449	Identifier	JobServerObject :: JobServerObject		230404	1					
ANR	230450	ParameterList	"ManagementAgent * agent , const char * _name , ObjectId & _oid"		230404	2					
ANR	230451	Parameter	ManagementAgent * agent	52:35:1232:1253	230404	0	True				
ANR	230452	ParameterType	ManagementAgent *		230404	0					
ANR	230453	Identifier	agent		230404	1					
ANR	230454	Parameter	const char * _name	52:59:1256:1272	230404	1	True				
ANR	230455	ParameterType	const char *		230404	0					
ANR	230456	Identifier	_name		230404	1					
ANR	230457	Parameter	ObjectId & _oid	52:78:1275:1288	230404	2	True				
ANR	230458	ParameterType	ObjectId &		230404	0					
ANR	230459	Identifier	_oid		230404	1					
ANR	230460	CFGEntryNode	ENTRY		230404		True				
ANR	230461	CFGExitNode	EXIT		230404		True				
ANR	230462	Symbol	agent		230404						
ANR	230463	Symbol	_name		230404						
ANR	230464	Symbol	mgmtObject		230404						
ANR	230465	Symbol	_oid		230404						
ANR	230466	Symbol	this		230404						
ANR	230467	Symbol	true		230404						
ANR	230468	Symbol	param_boolean		230404						
ANR	230469	Symbol	_lifetime		230404						
ANR	230470	Function	JobServerObject :: ~JobServerObject	63:0:1556:1667							
ANR	230471	FunctionDef	JobServerObject :: ~JobServerObject ()		230470	0					
ANR	230472	CompoundStatement		64:0:1592:1667	230470	0					
ANR	230473	IfStatement	if ( mgmtObject )		230470	0					
ANR	230474	Condition	mgmtObject	65:9:1603:1612	230470	0	True				
ANR	230475	Identifier	mgmtObject		230470	0					
ANR	230476	CompoundStatement		3:4:27:27	230470	1					
ANR	230477	ExpressionStatement	mgmtObject -> resourceDestroy ( )	67:8:1630:1659	230470	0	True				
ANR	230478	CallExpression	mgmtObject -> resourceDestroy ( )		230470	0					
ANR	230479	Callee	mgmtObject -> resourceDestroy		230470	0					
ANR	230480	PtrMemberAccess	mgmtObject -> resourceDestroy		230470	0					
ANR	230481	Identifier	mgmtObject		230470	0					
ANR	230482	Identifier	resourceDestroy		230470	1					
ANR	230483	ArgumentList			230470	1					
ANR	230484	Identifier	JobServerObject :: ~JobServerObject		230470	1					
ANR	230485	ParameterList			230470	2					
ANR	230486	CFGEntryNode	ENTRY		230470		True				
ANR	230487	CFGExitNode	EXIT		230470		True				
ANR	230488	Symbol	mgmtObject		230470						
ANR	230489	Function	JobServerObject :: update	72:0:1671:2560							
ANR	230490	FunctionDef	JobServerObject :: update (const ClassAd & ad)		230489	0					
ANR	230491	CompoundStatement		74:0:1722:2560	230489	0					
ANR	230492	ExpressionStatement	MGMT_DECLARATIONS	75:4:1728:1745	230489	0	True				
ANR	230493	Identifier	MGMT_DECLARATIONS		230489	0					
ANR	230494	ExpressionStatement	mgmtObject -> set_Pool ( GetPoolName ( ) )	77:4:1752:1787	230489	1	True				
ANR	230495	CallExpression	mgmtObject -> set_Pool ( GetPoolName ( ) )		230489	0					
ANR	230496	Callee	mgmtObject -> set_Pool		230489	0					
ANR	230497	PtrMemberAccess	mgmtObject -> set_Pool		230489	0					
ANR	230498	Identifier	mgmtObject		230489	0					
ANR	230499	Identifier	set_Pool		230489	1					
ANR	230500	ArgumentList	GetPoolName ( )		230489	1					
ANR	230501	Argument	GetPoolName ( )		230489	0					
ANR	230502	CallExpression	GetPoolName ( )		230489	0					
ANR	230503	Callee	GetPoolName		230489	0					
ANR	230504	Identifier	GetPoolName		230489	0					
ANR	230505	ArgumentList			230489	1					
ANR	230506	ExpressionStatement	STRING ( CondorPlatform )	79:4:1794:1819	230489	2	True				
ANR	230507	CallExpression	STRING ( CondorPlatform )		230489	0					
ANR	230508	Callee	STRING		230489	0					
ANR	230509	Identifier	STRING		230489	0					
ANR	230510	ArgumentList	CondorPlatform		230489	1					
ANR	230511	Argument	CondorPlatform		230489	0					
ANR	230512	Identifier	CondorPlatform		230489	0					
ANR	230513	ExpressionStatement	STRING ( CondorVersion )	80:4:1825:1849	230489	3	True				
ANR	230514	CallExpression	STRING ( CondorVersion )		230489	0					
ANR	230515	Callee	STRING		230489	0					
ANR	230516	Identifier	STRING		230489	0					
ANR	230517	ArgumentList	CondorVersion		230489	1					
ANR	230518	Argument	CondorVersion		230489	0					
ANR	230519	Identifier	CondorVersion		230489	0					
ANR	230520	ExpressionStatement	TIME_INTEGER ( DaemonStartTime )	81:4:1855:1887	230489	4	True				
ANR	230521	CallExpression	TIME_INTEGER ( DaemonStartTime )		230489	0					
ANR	230522	Callee	TIME_INTEGER		230489	0					
ANR	230523	Identifier	TIME_INTEGER		230489	0					
ANR	230524	ArgumentList	DaemonStartTime		230489	1					
ANR	230525	Argument	DaemonStartTime		230489	0					
ANR	230526	Identifier	DaemonStartTime		230489	0					
ANR	230527	ExpressionStatement	STRING ( Machine )	83:4:1930:1948	230489	5	True				
ANR	230528	CallExpression	STRING ( Machine )		230489	0					
ANR	230529	Callee	STRING		230489	0					
ANR	230530	Identifier	STRING		230489	0					
ANR	230531	ArgumentList	Machine		230489	1					
ANR	230532	Argument	Machine		230489	0					
ANR	230533	Identifier	Machine		230489	0					
ANR	230534	ExpressionStatement	INTEGER ( MonitorSelfAge )	85:4:1983:2009	230489	6	True				
ANR	230535	CallExpression	INTEGER ( MonitorSelfAge )		230489	0					
ANR	230536	Callee	INTEGER		230489	0					
ANR	230537	Identifier	INTEGER		230489	0					
ANR	230538	ArgumentList	MonitorSelfAge		230489	1					
ANR	230539	Argument	MonitorSelfAge		230489	0					
ANR	230540	Identifier	MonitorSelfAge		230489	0					
ANR	230541	ExpressionStatement	DOUBLE ( MonitorSelfCPUUsage )	86:4:2015:2045	230489	7	True				
ANR	230542	CallExpression	DOUBLE ( MonitorSelfCPUUsage )		230489	0					
ANR	230543	Callee	DOUBLE		230489	0					
ANR	230544	Identifier	DOUBLE		230489	0					
ANR	230545	ArgumentList	MonitorSelfCPUUsage		230489	1					
ANR	230546	Argument	MonitorSelfCPUUsage		230489	0					
ANR	230547	Identifier	MonitorSelfCPUUsage		230489	0					
ANR	230548	ExpressionStatement	DOUBLE ( MonitorSelfImageSize )	87:4:2051:2082	230489	8	True				
ANR	230549	CallExpression	DOUBLE ( MonitorSelfImageSize )		230489	0					
ANR	230550	Callee	DOUBLE		230489	0					
ANR	230551	Identifier	DOUBLE		230489	0					
ANR	230552	ArgumentList	MonitorSelfImageSize		230489	1					
ANR	230553	Argument	MonitorSelfImageSize		230489	0					
ANR	230554	Identifier	MonitorSelfImageSize		230489	0					
ANR	230555	ExpressionStatement	INTEGER ( MonitorSelfRegisteredSocketCount )	88:4:2088:2132	230489	9	True				
ANR	230556	CallExpression	INTEGER ( MonitorSelfRegisteredSocketCount )		230489	0					
ANR	230557	Callee	INTEGER		230489	0					
ANR	230558	Identifier	INTEGER		230489	0					
ANR	230559	ArgumentList	MonitorSelfRegisteredSocketCount		230489	1					
ANR	230560	Argument	MonitorSelfRegisteredSocketCount		230489	0					
ANR	230561	Identifier	MonitorSelfRegisteredSocketCount		230489	0					
ANR	230562	ExpressionStatement	INTEGER ( MonitorSelfResidentSetSize )	89:4:2138:2176	230489	10	True				
ANR	230563	CallExpression	INTEGER ( MonitorSelfResidentSetSize )		230489	0					
ANR	230564	Callee	INTEGER		230489	0					
ANR	230565	Identifier	INTEGER		230489	0					
ANR	230566	ArgumentList	MonitorSelfResidentSetSize		230489	1					
ANR	230567	Argument	MonitorSelfResidentSetSize		230489	0					
ANR	230568	Identifier	MonitorSelfResidentSetSize		230489	0					
ANR	230569	ExpressionStatement	TIME_INTEGER ( MonitorSelfTime )	90:4:2182:2214	230489	11	True				
ANR	230570	CallExpression	TIME_INTEGER ( MonitorSelfTime )		230489	0					
ANR	230571	Callee	TIME_INTEGER		230489	0					
ANR	230572	Identifier	TIME_INTEGER		230489	0					
ANR	230573	ArgumentList	MonitorSelfTime		230489	1					
ANR	230574	Argument	MonitorSelfTime		230489	0					
ANR	230575	Identifier	MonitorSelfTime		230489	0					
ANR	230576	ExpressionStatement	STRING ( MyAddress )	91:4:2220:2240	230489	12	True				
ANR	230577	CallExpression	STRING ( MyAddress )		230489	0					
ANR	230578	Callee	STRING		230489	0					
ANR	230579	Identifier	STRING		230489	0					
ANR	230580	ArgumentList	MyAddress		230489	1					
ANR	230581	Argument	MyAddress		230489	0					
ANR	230582	Identifier	MyAddress		230489	0					
ANR	230583	ExpressionStatement	STRING ( Name )	93:4:2281:2296	230489	13	True				
ANR	230584	CallExpression	STRING ( Name )		230489	0					
ANR	230585	Callee	STRING		230489	0					
ANR	230586	Identifier	STRING		230489	0					
ANR	230587	ArgumentList	Name		230489	1					
ANR	230588	Argument	Name		230489	0					
ANR	230589	Identifier	Name		230489	0					
ANR	230590	ExpressionStatement	STRING ( PublicNetworkIpAddr )	95:4:2325:2355	230489	14	True				
ANR	230591	CallExpression	STRING ( PublicNetworkIpAddr )		230489	0					
ANR	230592	Callee	STRING		230489	0					
ANR	230593	Identifier	STRING		230489	0					
ANR	230594	ArgumentList	PublicNetworkIpAddr		230489	1					
ANR	230595	Argument	PublicNetworkIpAddr		230489	0					
ANR	230596	Identifier	PublicNetworkIpAddr		230489	0					
ANR	230597	ExpressionStatement	mgmtObject -> set_System ( mgmtObject -> get_Machine ( ) )	102:4:2506:2558	230489	15	True				
ANR	230598	CallExpression	mgmtObject -> set_System ( mgmtObject -> get_Machine ( ) )		230489	0					
ANR	230599	Callee	mgmtObject -> set_System		230489	0					
ANR	230600	PtrMemberAccess	mgmtObject -> set_System		230489	0					
ANR	230601	Identifier	mgmtObject		230489	0					
ANR	230602	Identifier	set_System		230489	1					
ANR	230603	ArgumentList	mgmtObject -> get_Machine ( )		230489	1					
ANR	230604	Argument	mgmtObject -> get_Machine ( )		230489	0					
ANR	230605	CallExpression	mgmtObject -> get_Machine ( )		230489	0					
ANR	230606	Callee	mgmtObject -> get_Machine		230489	0					
ANR	230607	PtrMemberAccess	mgmtObject -> get_Machine		230489	0					
ANR	230608	Identifier	mgmtObject		230489	0					
ANR	230609	Identifier	get_Machine		230489	1					
ANR	230610	ArgumentList			230489	1					
ANR	230611	ReturnType	void		230489	1					
ANR	230612	Identifier	JobServerObject :: update		230489	2					
ANR	230613	ParameterList	const ClassAd & ad		230489	3					
ANR	230614	Parameter	const ClassAd & ad	73:26:1702:1718	230489	0	True				
ANR	230615	ParameterType	const ClassAd &		230489	0					
ANR	230616	Identifier	ad		230489	1					
ANR	230617	CFGEntryNode	ENTRY		230489		True				
ANR	230618	CFGExitNode	EXIT		230489		True				
ANR	230619	Symbol	MonitorSelfRegisteredSocketCount		230489						
ANR	230620	Symbol	MonitorSelfResidentSetSize		230489						
ANR	230621	Symbol	ad		230489						
ANR	230622	Symbol	MonitorSelfImageSize		230489						
ANR	230623	Symbol	mgmtObject		230489						
ANR	230624	Symbol	GetPoolName		230489						
ANR	230625	Symbol	mgmtObject -> get_Machine		230489						
ANR	230626	Symbol	DaemonStartTime		230489						
ANR	230627	Symbol	Machine		230489						
ANR	230628	Symbol	Name		230489						
ANR	230629	Symbol	PublicNetworkIpAddr		230489						
ANR	230630	Symbol	CondorVersion		230489						
ANR	230631	Symbol	CondorPlatform		230489						
ANR	230632	Symbol	* mgmtObject		230489						
ANR	230633	Symbol	MonitorSelfAge		230489						
ANR	230634	Symbol	MonitorSelfCPUUsage		230489						
ANR	230635	Symbol	MyAddress		230489						
ANR	230636	Symbol	MonitorSelfTime		230489						
ANR	230637	Function	JobServerObject :: GetJobAd	106:0:2564:3651							
ANR	230638	FunctionDef	"JobServerObject :: GetJobAd (std :: string key , Variant :: Map & _map , std :: string & text)"		230637	0					
ANR	230639	CompoundStatement		110:0:2721:3651	230637	0					
ANR	230640	IdentifierDeclStatement	JobCollectionType :: const_iterator element = g_jobs . find ( key . c_str ( ) ) ;	111:4:2727:2795	230637	0	True				
ANR	230641	IdentifierDecl	element = g_jobs . find ( key . c_str ( ) )		230637	0					
ANR	230642	IdentifierDeclType	JobCollectionType :: const_iterator		230637	0					
ANR	230643	Identifier	element		230637	1					
ANR	230644	AssignmentExpression	element = g_jobs . find ( key . c_str ( ) )		230637	2		=			
ANR	230645	Identifier	element		230637	0					
ANR	230646	CallExpression	g_jobs . find ( key . c_str ( ) )		230637	1					
ANR	230647	Callee	g_jobs . find		230637	0					
ANR	230648	MemberAccess	g_jobs . find		230637	0					
ANR	230649	Identifier	g_jobs		230637	0					
ANR	230650	Identifier	find		230637	1					
ANR	230651	ArgumentList	key . c_str ( )		230637	1					
ANR	230652	Argument	key . c_str ( )		230637	0					
ANR	230653	CallExpression	key . c_str ( )		230637	0					
ANR	230654	Callee	key . c_str		230637	0					
ANR	230655	MemberAccess	key . c_str		230637	0					
ANR	230656	Identifier	key		230637	0					
ANR	230657	Identifier	c_str		230637	1					
ANR	230658	ArgumentList			230637	1					
ANR	230659	IfStatement	if ( g_jobs . end ( ) == element )		230637	1					
ANR	230660	Condition	g_jobs . end ( ) == element	112:9:2806:2828	230637	0	True				
ANR	230661	EqualityExpression	g_jobs . end ( ) == element		230637	0		==			
ANR	230662	CallExpression	g_jobs . end ( )		230637	0					
ANR	230663	Callee	g_jobs . end		230637	0					
ANR	230664	MemberAccess	g_jobs . end		230637	0					
ANR	230665	Identifier	g_jobs		230637	0					
ANR	230666	Identifier	end		230637	1					
ANR	230667	ArgumentList			230637	1					
ANR	230668	Identifier	element		230637	1					
ANR	230669	CompoundStatement		4:4:114:114	230637	1					
ANR	230670	ExpressionStatement	"text = ""Unknown Job Id"""	114:8:2846:2869	230637	0	True				
ANR	230671	AssignmentExpression	"text = ""Unknown Job Id"""		230637	0		=			
ANR	230672	Identifier	text		230637	0					
ANR	230673	PrimaryExpression	"""Unknown Job Id"""		230637	1					
ANR	230674	ReturnStatement	return STATUS_USER + 0 ;	115:8:2879:2901	230637	1	True				
ANR	230675	AdditiveExpression	STATUS_USER + 0		230637	0		+			
ANR	230676	Identifier	STATUS_USER		230637	0					
ANR	230677	PrimaryExpression	0		230637	1					
ANR	230678	IdentifierDeclStatement	ClassAd classAd ;	119:4:2986:3001	230637	2	True				
ANR	230679	IdentifierDecl	classAd		230637	0					
ANR	230680	IdentifierDeclType	ClassAd		230637	0					
ANR	230681	Identifier	classAd		230637	1					
ANR	230682	ExpressionStatement	( * element ) . second -> GetFullAd ( classAd )	120:4:3007:3049	230637	3	True				
ANR	230683	CallExpression	( * element ) . second -> GetFullAd ( classAd )		230637	0					
ANR	230684	Callee	( * element ) . second -> GetFullAd		230637	0					
ANR	230685	PtrMemberAccess	( * element ) . second -> GetFullAd		230637	0					
ANR	230686	MemberAccess	( * element ) . second		230637	0					
ANR	230687	UnaryOperationExpression	* element		230637	0					
ANR	230688	UnaryOperator	*		230637	0					
ANR	230689	Identifier	element		230637	1					
ANR	230690	Identifier	second		230637	1					
ANR	230691	Identifier	GetFullAd		230637	1					
ANR	230692	ArgumentList	classAd		230637	1					
ANR	230693	Argument	classAd		230637	0					
ANR	230694	Identifier	classAd		230637	0					
ANR	230695	IfStatement	"if ( classAd . LookupString ( ""JOB_AD_ERROR"" , text ) )"		230637	4					
ANR	230696	Condition	"classAd . LookupString ( ""JOB_AD_ERROR"" , text )"	122:9:3117:3158	230637	0	True				
ANR	230697	CallExpression	"classAd . LookupString ( ""JOB_AD_ERROR"" , text )"		230637	0					
ANR	230698	Callee	classAd . LookupString		230637	0					
ANR	230699	MemberAccess	classAd . LookupString		230637	0					
ANR	230700	Identifier	classAd		230637	0					
ANR	230701	Identifier	LookupString		230637	1					
ANR	230702	ArgumentList	"""JOB_AD_ERROR"""		230637	1					
ANR	230703	Argument	"""JOB_AD_ERROR"""		230637	0					
ANR	230704	PrimaryExpression	"""JOB_AD_ERROR"""		230637	0					
ANR	230705	Argument	text		230637	1					
ANR	230706	Identifier	text		230637	0					
ANR	230707	CompoundStatement		14:4:444:444	230637	1					
ANR	230708	ReturnStatement	return STATUS_USER + 1 ;	124:8:3176:3198	230637	0	True				
ANR	230709	AdditiveExpression	STATUS_USER + 1		230637	0		+			
ANR	230710	Identifier	STATUS_USER		230637	0					
ANR	230711	PrimaryExpression	1		230637	1					
ANR	230712	IfStatement	"if ( ! PopulateVariantMapFromAd ( classAd , _map ) )"		230637	5					
ANR	230713	Condition	"! PopulateVariantMapFromAd ( classAd , _map )"	128:9:3264:3307	230637	0	True				
ANR	230714	UnaryOperationExpression	"! PopulateVariantMapFromAd ( classAd , _map )"		230637	0					
ANR	230715	UnaryOperator	!		230637	0					
ANR	230716	CallExpression	"PopulateVariantMapFromAd ( classAd , _map )"		230637	1					
ANR	230717	Callee	PopulateVariantMapFromAd		230637	0					
ANR	230718	Identifier	PopulateVariantMapFromAd		230637	0					
ANR	230719	ArgumentList	classAd		230637	1					
ANR	230720	Argument	classAd		230637	0					
ANR	230721	Identifier	classAd		230637	0					
ANR	230722	Argument	_map		230637	1					
ANR	230723	Identifier	_map		230637	0					
ANR	230724	CompoundStatement		20:4:593:593	230637	1					
ANR	230725	ExpressionStatement	"text = ""Error retrieving Job data"""	130:8:3325:3359	230637	0	True				
ANR	230726	AssignmentExpression	"text = ""Error retrieving Job data"""		230637	0		=			
ANR	230727	Identifier	text		230637	0					
ANR	230728	PrimaryExpression	"""Error retrieving Job data"""		230637	1					
ANR	230729	ReturnStatement	return STATUS_USER + 2 ;	131:8:3369:3391	230637	1	True				
ANR	230730	AdditiveExpression	STATUS_USER + 2		230637	0		+			
ANR	230731	Identifier	STATUS_USER		230637	0					
ANR	230732	PrimaryExpression	2		230637	1					
ANR	230733	ReturnStatement	return STATUS_OK ;	142:4:3633:3649	230637	6	True				
ANR	230734	Identifier	STATUS_OK		230637	0					
ANR	230735	ReturnType	Manageable :: status_t		230637	1					
ANR	230736	Identifier	JobServerObject :: GetJobAd		230637	2					
ANR	230737	ParameterList	"std :: string key , Variant :: Map & _map , std :: string & text"		230637	3					
ANR	230738	Parameter	std :: string key	107:28:2613:2627	230637	0	True				
ANR	230739	ParameterType	std :: string		230637	0					
ANR	230740	Identifier	key		230637	1					
ANR	230741	Parameter	Variant :: Map & _map	108:26:2656:2673	230637	1	True				
ANR	230742	ParameterType	Variant :: Map &		230637	0					
ANR	230743	Identifier	_map		230637	1					
ANR	230744	Parameter	std :: string & text	109:26:2702:2718	230637	2	True				
ANR	230745	ParameterType	std :: string &		230637	0					
ANR	230746	Identifier	text		230637	1					
ANR	230747	CFGEntryNode	ENTRY		230637		True				
ANR	230748	CFGExitNode	EXIT		230637		True				
ANR	230749	Symbol	STATUS_USER		230637						
ANR	230750	Symbol	g_jobs		230637						
ANR	230751	Symbol	PopulateVariantMapFromAd		230637						
ANR	230752	Symbol	* element		230637						
ANR	230753	Symbol	key . c_str		230637						
ANR	230754	Symbol	_map		230637						
ANR	230755	Symbol	( * element ) . second		230637						
ANR	230756	Symbol	g_jobs . end		230637						
ANR	230757	Symbol	classAd		230637						
ANR	230758	Symbol	STATUS_OK		230637						
ANR	230759	Symbol	text		230637						
ANR	230760	Symbol	classAd . LookupString		230637						
ANR	230761	Symbol	g_jobs . find		230637						
ANR	230762	Symbol	key		230637						
ANR	230763	Symbol	element		230637						
ANR	230764	Function	JobServerObject :: FetchJobData	145:0:3654:6789							
ANR	230765	FunctionDef	"JobServerObject :: FetchJobData (std :: string key , std :: string & file , int32_t start , int32_t end , std :: string & data , std :: string & text)"		230764	0					
ANR	230766	CompoundStatement		152:0:3847:6789	230764	0					
ANR	230767	IdentifierDeclStatement	priv_state prev_priv_state ;	153:1:3850:3876	230764	0	True				
ANR	230768	IdentifierDecl	prev_priv_state		230764	0					
ANR	230769	IdentifierDeclType	priv_state		230764	0					
ANR	230770	Identifier	prev_priv_state		230764	1					
ANR	230771	IdentifierDeclStatement	int fd = - 1 ;	154:1:3879:3890	230764	1	True				
ANR	230772	IdentifierDecl	fd = - 1		230764	0					
ANR	230773	IdentifierDeclType	int		230764	0					
ANR	230774	Identifier	fd		230764	1					
ANR	230775	AssignmentExpression	fd = - 1		230764	2		=			
ANR	230776	Identifier	fd		230764	0					
ANR	230777	UnaryOperationExpression	- 1		230764	1					
ANR	230778	UnaryOperator	-		230764	0					
ANR	230779	PrimaryExpression	1		230764	1					
ANR	230780	IdentifierDeclStatement	int count ;	155:1:3893:3902	230764	2	True				
ANR	230781	IdentifierDecl	count		230764	0					
ANR	230782	IdentifierDeclType	int		230764	0					
ANR	230783	Identifier	count		230764	1					
ANR	230784	IdentifierDeclStatement	int length ;	156:1:3905:3915	230764	3	True				
ANR	230785	IdentifierDecl	length		230764	0					
ANR	230786	IdentifierDeclType	int		230764	0					
ANR	230787	Identifier	length		230764	1					
ANR	230788	IdentifierDeclStatement	int whence ;	157:1:3918:3928	230764	4	True				
ANR	230789	IdentifierDecl	whence		230764	0					
ANR	230790	IdentifierDeclType	int		230764	0					
ANR	230791	Identifier	whence		230764	1					
ANR	230792	IdentifierDeclStatement	char * buffer ;	158:1:3931:3943	230764	5	True				
ANR	230793	IdentifierDecl	* buffer		230764	0					
ANR	230794	IdentifierDeclType	char *		230764	0					
ANR	230795	Identifier	buffer		230764	1					
ANR	230796	IdentifierDeclStatement	Manageable :: status_t status ;	159:1:3946:3973	230764	6	True				
ANR	230797	IdentifierDecl	status		230764	0					
ANR	230798	IdentifierDeclType	Manageable :: status_t		230764	0					
ANR	230799	Identifier	status		230764	1					
ANR	230800	IdentifierDeclStatement	PROC_ID id = getProcByString ( key . c_str ( ) ) ;	161:1:3977:4018	230764	7	True				
ANR	230801	IdentifierDecl	id = getProcByString ( key . c_str ( ) )		230764	0					
ANR	230802	IdentifierDeclType	PROC_ID		230764	0					
ANR	230803	Identifier	id		230764	1					
ANR	230804	AssignmentExpression	id = getProcByString ( key . c_str ( ) )		230764	2		=			
ANR	230805	Identifier	id		230764	0					
ANR	230806	CallExpression	getProcByString ( key . c_str ( ) )		230764	1					
ANR	230807	Callee	getProcByString		230764	0					
ANR	230808	Identifier	getProcByString		230764	0					
ANR	230809	ArgumentList	key . c_str ( )		230764	1					
ANR	230810	Argument	key . c_str ( )		230764	0					
ANR	230811	CallExpression	key . c_str ( )		230764	0					
ANR	230812	Callee	key . c_str		230764	0					
ANR	230813	MemberAccess	key . c_str		230764	0					
ANR	230814	Identifier	key		230764	0					
ANR	230815	Identifier	c_str		230764	1					
ANR	230816	ArgumentList			230764	1					
ANR	230817	IfStatement	if ( id . cluster < 0 || id . proc < 0 )		230764	8					
ANR	230818	Condition	id . cluster < 0 || id . proc < 0	162:5:4025:4053	230764	0	True				
ANR	230819	OrExpression	id . cluster < 0 || id . proc < 0		230764	0		||			
ANR	230820	RelationalExpression	id . cluster < 0		230764	0		<			
ANR	230821	MemberAccess	id . cluster		230764	0					
ANR	230822	Identifier	id		230764	0					
ANR	230823	Identifier	cluster		230764	1					
ANR	230824	PrimaryExpression	0		230764	1					
ANR	230825	RelationalExpression	id . proc < 0		230764	1		<			
ANR	230826	MemberAccess	id . proc		230764	0					
ANR	230827	Identifier	id		230764	0					
ANR	230828	Identifier	proc		230764	1					
ANR	230829	PrimaryExpression	0		230764	1					
ANR	230830	CompoundStatement		11:36:208:208	230764	1					
ANR	230831	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""FetchJobData: Failed to parse id: %s\\n"" , key . c_str ( ) )"	163:2:4060:4135	230764	0	True				
ANR	230832	CallExpression	"dprintf ( D_FULLDEBUG , ""FetchJobData: Failed to parse id: %s\\n"" , key . c_str ( ) )"		230764	0					
ANR	230833	Callee	dprintf		230764	0					
ANR	230834	Identifier	dprintf		230764	0					
ANR	230835	ArgumentList	D_FULLDEBUG		230764	1					
ANR	230836	Argument	D_FULLDEBUG		230764	0					
ANR	230837	Identifier	D_FULLDEBUG		230764	0					
ANR	230838	Argument	"""FetchJobData: Failed to parse id: %s\\n"""		230764	1					
ANR	230839	PrimaryExpression	"""FetchJobData: Failed to parse id: %s\\n"""		230764	0					
ANR	230840	Argument	key . c_str ( )		230764	2					
ANR	230841	CallExpression	key . c_str ( )		230764	0					
ANR	230842	Callee	key . c_str		230764	0					
ANR	230843	MemberAccess	key . c_str		230764	0					
ANR	230844	Identifier	key		230764	0					
ANR	230845	Identifier	c_str		230764	1					
ANR	230846	ArgumentList			230764	1					
ANR	230847	ExpressionStatement	"text = ""Invalid Job Id"""	164:2:4139:4162	230764	1	True				
ANR	230848	AssignmentExpression	"text = ""Invalid Job Id"""		230764	0		=			
ANR	230849	Identifier	text		230764	0					
ANR	230850	PrimaryExpression	"""Invalid Job Id"""		230764	1					
ANR	230851	ReturnStatement	return STATUS_USER + 0 ;	165:2:4166:4188	230764	2	True				
ANR	230852	AdditiveExpression	STATUS_USER + 0		230764	0		+			
ANR	230853	Identifier	STATUS_USER		230764	0					
ANR	230854	PrimaryExpression	0		230764	1					
ANR	230855	IfStatement	if ( ( start >= 0 && end >= 0 && end < start ) || ( start >= 0 && end < 0 ) || ( start < 0 && end <= 0 && end < start ) )		230764	9					
ANR	230856	Condition	( start >= 0 && end >= 0 && end < start ) || ( start >= 0 && end < 0 ) || ( start < 0 && end <= 0 && end < start )	175:5:4575:4686	230764	0	True				
ANR	230857	OrExpression	( start >= 0 && end >= 0 && end < start ) || ( start >= 0 && end < 0 ) || ( start < 0 && end <= 0 && end < start )		230764	0		||			
ANR	230858	AndExpression	start >= 0 && end >= 0 && end < start		230764	0		&&			
ANR	230859	RelationalExpression	start >= 0		230764	0		>=			
ANR	230860	Identifier	start		230764	0					
ANR	230861	PrimaryExpression	0		230764	1					
ANR	230862	AndExpression	end >= 0 && end < start		230764	1		&&			
ANR	230863	RelationalExpression	end >= 0		230764	0		>=			
ANR	230864	Identifier	end		230764	0					
ANR	230865	PrimaryExpression	0		230764	1					
ANR	230866	RelationalExpression	end < start		230764	1		<			
ANR	230867	Identifier	end		230764	0					
ANR	230868	Identifier	start		230764	1					
ANR	230869	OrExpression	( start >= 0 && end < 0 ) || ( start < 0 && end <= 0 && end < start )		230764	1		||			
ANR	230870	AndExpression	start >= 0 && end < 0		230764	0		&&			
ANR	230871	RelationalExpression	start >= 0		230764	0		>=			
ANR	230872	Identifier	start		230764	0					
ANR	230873	PrimaryExpression	0		230764	1					
ANR	230874	RelationalExpression	end < 0		230764	1		<			
ANR	230875	Identifier	end		230764	0					
ANR	230876	PrimaryExpression	0		230764	1					
ANR	230877	AndExpression	start < 0 && end <= 0 && end < start		230764	1		&&			
ANR	230878	RelationalExpression	start < 0		230764	0		<			
ANR	230879	Identifier	start		230764	0					
ANR	230880	PrimaryExpression	0		230764	1					
ANR	230881	AndExpression	end <= 0 && end < start		230764	1		&&			
ANR	230882	RelationalExpression	end <= 0		230764	0		<=			
ANR	230883	Identifier	end		230764	0					
ANR	230884	PrimaryExpression	0		230764	1					
ANR	230885	RelationalExpression	end < start		230764	1		<			
ANR	230886	Identifier	end		230764	0					
ANR	230887	Identifier	start		230764	1					
ANR	230888	CompoundStatement		26:42:841:841	230764	1					
ANR	230889	ExpressionStatement	"text = ""Invalid start and end values"""	178:2:4693:4730	230764	0	True				
ANR	230890	AssignmentExpression	"text = ""Invalid start and end values"""		230764	0		=			
ANR	230891	Identifier	text		230764	0					
ANR	230892	PrimaryExpression	"""Invalid start and end values"""		230764	1					
ANR	230893	ReturnStatement	return STATUS_USER + 10 ;	179:2:4734:4757	230764	1	True				
ANR	230894	AdditiveExpression	STATUS_USER + 10		230764	0		+			
ANR	230895	Identifier	STATUS_USER		230764	0					
ANR	230896	PrimaryExpression	10		230764	1					
ANR	230897	IfStatement	if ( start < 0 && end > 0 )		230764	10					
ANR	230898	Condition	start < 0 && end > 0	184:5:4844:4863	230764	0	True				
ANR	230899	AndExpression	start < 0 && end > 0		230764	0		&&			
ANR	230900	RelationalExpression	start < 0		230764	0		<			
ANR	230901	Identifier	start		230764	0					
ANR	230902	PrimaryExpression	0		230764	1					
ANR	230903	RelationalExpression	end > 0		230764	1		>			
ANR	230904	Identifier	end		230764	0					
ANR	230905	PrimaryExpression	0		230764	1					
ANR	230906	CompoundStatement		33:27:1018:1018	230764	1					
ANR	230907	ExpressionStatement	end = 0	185:2:4870:4877	230764	0	True				
ANR	230908	AssignmentExpression	end = 0		230764	0		=			
ANR	230909	Identifier	end		230764	0					
ANR	230910	PrimaryExpression	0		230764	1					
ANR	230911	IfStatement	if ( start >= 0 )		230764	11					
ANR	230912	Condition	start >= 0	188:5:4888:4897	230764	0	True				
ANR	230913	RelationalExpression	start >= 0		230764	0		>=			
ANR	230914	Identifier	start		230764	0					
ANR	230915	PrimaryExpression	0		230764	1					
ANR	230916	CompoundStatement		37:17:1052:1052	230764	1					
ANR	230917	ExpressionStatement	whence = SEEK_SET	189:2:4904:4921	230764	0	True				
ANR	230918	AssignmentExpression	whence = SEEK_SET		230764	0		=			
ANR	230919	Identifier	whence		230764	0					
ANR	230920	Identifier	SEEK_SET		230764	1					
ANR	230921	ExpressionStatement	length = end - start	190:2:4925:4945	230764	1	True				
ANR	230922	AssignmentExpression	length = end - start		230764	0		=			
ANR	230923	Identifier	length		230764	0					
ANR	230924	AdditiveExpression	end - start		230764	1		-			
ANR	230925	Identifier	end		230764	0					
ANR	230926	Identifier	start		230764	1					
ANR	230927	ElseStatement	else		230764	0					
ANR	230928	CompoundStatement		40:8:1107:1107	230764	0					
ANR	230929	ExpressionStatement	whence = SEEK_END	192:2:4959:4976	230764	0	True				
ANR	230930	AssignmentExpression	whence = SEEK_END		230764	0		=			
ANR	230931	Identifier	whence		230764	0					
ANR	230932	Identifier	SEEK_END		230764	1					
ANR	230933	ExpressionStatement	length = abs ( start - end )	193:2:4980:5005	230764	1	True				
ANR	230934	AssignmentExpression	length = abs ( start - end )		230764	0		=			
ANR	230935	Identifier	length		230764	0					
ANR	230936	CallExpression	abs ( start - end )		230764	1					
ANR	230937	Callee	abs		230764	0					
ANR	230938	Identifier	abs		230764	0					
ANR	230939	ArgumentList	start - end		230764	1					
ANR	230940	Argument	start - end		230764	0					
ANR	230941	AdditiveExpression	start - end		230764	0		-			
ANR	230942	Identifier	start		230764	0					
ANR	230943	Identifier	end		230764	1					
ANR	230944	ExpressionStatement	buffer = new char [ length + 1 ]	198:1:5063:5092	230764	12	True				
ANR	230945	AssignmentExpression	buffer = new char [ length + 1 ]		230764	0		=			
ANR	230946	Identifier	buffer		230764	0					
ANR	230947	AdditiveExpression	length + 1		230764	1		+			
ANR	230948	Identifier	length		230764	0					
ANR	230949	PrimaryExpression	1		230764	1					
ANR	230950	IdentifierDeclStatement	JobCollectionType :: const_iterator element = g_jobs . find ( key . c_str ( ) ) ;	201:1:5156:5224	230764	13	True				
ANR	230951	IdentifierDecl	element = g_jobs . find ( key . c_str ( ) )		230764	0					
ANR	230952	IdentifierDeclType	JobCollectionType :: const_iterator		230764	0					
ANR	230953	Identifier	element		230764	1					
ANR	230954	AssignmentExpression	element = g_jobs . find ( key . c_str ( ) )		230764	2		=			
ANR	230955	Identifier	element		230764	0					
ANR	230956	CallExpression	g_jobs . find ( key . c_str ( ) )		230764	1					
ANR	230957	Callee	g_jobs . find		230764	0					
ANR	230958	MemberAccess	g_jobs . find		230764	0					
ANR	230959	Identifier	g_jobs		230764	0					
ANR	230960	Identifier	find		230764	1					
ANR	230961	ArgumentList	key . c_str ( )		230764	1					
ANR	230962	Argument	key . c_str ( )		230764	0					
ANR	230963	CallExpression	key . c_str ( )		230764	0					
ANR	230964	Callee	key . c_str		230764	0					
ANR	230965	MemberAccess	key . c_str		230764	0					
ANR	230966	Identifier	key		230764	0					
ANR	230967	Identifier	c_str		230764	1					
ANR	230968	ArgumentList			230764	1					
ANR	230969	IfStatement	if ( g_jobs . end ( ) == element )		230764	14					
ANR	230970	Condition	g_jobs . end ( ) == element	202:6:5232:5254	230764	0	True				
ANR	230971	EqualityExpression	g_jobs . end ( ) == element		230764	0		==			
ANR	230972	CallExpression	g_jobs . end ( )		230764	0					
ANR	230973	Callee	g_jobs . end		230764	0					
ANR	230974	MemberAccess	g_jobs . end		230764	0					
ANR	230975	Identifier	g_jobs		230764	0					
ANR	230976	Identifier	end		230764	1					
ANR	230977	ArgumentList			230764	1					
ANR	230978	Identifier	element		230764	1					
ANR	230979	CompoundStatement		51:32:1410:1410	230764	1					
ANR	230980	ExpressionStatement	"dprintf ( D_ALWAYS , ""Fetch method called on '%d.%d', which does not exist\\n"" , id . cluster , id . proc )"	203:2:5262:5366	230764	0	True				
ANR	230981	CallExpression	"dprintf ( D_ALWAYS , ""Fetch method called on '%d.%d', which does not exist\\n"" , id . cluster , id . proc )"		230764	0					
ANR	230982	Callee	dprintf		230764	0					
ANR	230983	Identifier	dprintf		230764	0					
ANR	230984	ArgumentList	D_ALWAYS		230764	1					
ANR	230985	Argument	D_ALWAYS		230764	0					
ANR	230986	Identifier	D_ALWAYS		230764	0					
ANR	230987	Argument	"""Fetch method called on '%d.%d', which does not exist\\n"""		230764	1					
ANR	230988	PrimaryExpression	"""Fetch method called on '%d.%d', which does not exist\\n"""		230764	0					
ANR	230989	Argument	id . cluster		230764	2					
ANR	230990	MemberAccess	id . cluster		230764	0					
ANR	230991	Identifier	id		230764	0					
ANR	230992	Identifier	cluster		230764	1					
ANR	230993	Argument	id . proc		230764	3					
ANR	230994	MemberAccess	id . proc		230764	0					
ANR	230995	Identifier	id		230764	0					
ANR	230996	Identifier	proc		230764	1					
ANR	230997	ReturnStatement	return STATUS_UNKNOWN_OBJECT ;	206:2:5370:5398	230764	1	True				
ANR	230998	Identifier	STATUS_UNKNOWN_OBJECT		230764	0					
ANR	230999	IdentifierDeclStatement	ClassAd ad ;	209:1:5405:5415	230764	15	True				
ANR	231000	IdentifierDecl	ad		230764	0					
ANR	231001	IdentifierDeclType	ClassAd		230764	0					
ANR	231002	Identifier	ad		230764	1					
ANR	231003	ExpressionStatement	( * element ) . second -> GetFullAd ( ad )	210:1:5418:5455	230764	16	True				
ANR	231004	CallExpression	( * element ) . second -> GetFullAd ( ad )		230764	0					
ANR	231005	Callee	( * element ) . second -> GetFullAd		230764	0					
ANR	231006	PtrMemberAccess	( * element ) . second -> GetFullAd		230764	0					
ANR	231007	MemberAccess	( * element ) . second		230764	0					
ANR	231008	UnaryOperationExpression	* element		230764	0					
ANR	231009	UnaryOperator	*		230764	0					
ANR	231010	Identifier	element		230764	1					
ANR	231011	Identifier	second		230764	1					
ANR	231012	Identifier	GetFullAd		230764	1					
ANR	231013	ArgumentList	ad		230764	1					
ANR	231014	Argument	ad		230764	0					
ANR	231015	Identifier	ad		230764	0					
ANR	231016	IfStatement	"if ( ad . LookupString ( ""JOB_AD_ERROR"" , text ) )"		230764	17					
ANR	231017	Condition	"ad . LookupString ( ""JOB_AD_ERROR"" , text )"	211:6:5463:5499	230764	0	True				
ANR	231018	CallExpression	"ad . LookupString ( ""JOB_AD_ERROR"" , text )"		230764	0					
ANR	231019	Callee	ad . LookupString		230764	0					
ANR	231020	MemberAccess	ad . LookupString		230764	0					
ANR	231021	Identifier	ad		230764	0					
ANR	231022	Identifier	LookupString		230764	1					
ANR	231023	ArgumentList	"""JOB_AD_ERROR"""		230764	1					
ANR	231024	Argument	"""JOB_AD_ERROR"""		230764	0					
ANR	231025	PrimaryExpression	"""JOB_AD_ERROR"""		230764	0					
ANR	231026	Argument	text		230764	1					
ANR	231027	Identifier	text		230764	0					
ANR	231028	CompoundStatement		60:47:1656:1656	230764	1					
ANR	231029	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error checking ClassAd for user priv on key = '%d.%d'\\n"" , id . cluster , id . proc )"	212:2:5508:5613	230764	0	True				
ANR	231030	CallExpression	"dprintf ( D_ALWAYS , ""Error checking ClassAd for user priv on key = '%d.%d'\\n"" , id . cluster , id . proc )"		230764	0					
ANR	231031	Callee	dprintf		230764	0					
ANR	231032	Identifier	dprintf		230764	0					
ANR	231033	ArgumentList	D_ALWAYS		230764	1					
ANR	231034	Argument	D_ALWAYS		230764	0					
ANR	231035	Identifier	D_ALWAYS		230764	0					
ANR	231036	Argument	"""Error checking ClassAd for user priv on key = '%d.%d'\\n"""		230764	1					
ANR	231037	PrimaryExpression	"""Error checking ClassAd for user priv on key = '%d.%d'\\n"""		230764	0					
ANR	231038	Argument	id . cluster		230764	2					
ANR	231039	MemberAccess	id . cluster		230764	0					
ANR	231040	Identifier	id		230764	0					
ANR	231041	Identifier	cluster		230764	1					
ANR	231042	Argument	id . proc		230764	3					
ANR	231043	MemberAccess	id . proc		230764	0					
ANR	231044	Identifier	id		230764	0					
ANR	231045	Identifier	proc		230764	1					
ANR	231046	ReturnStatement	return STATUS_USER + 7 ;	215:2:5617:5639	230764	1	True				
ANR	231047	AdditiveExpression	STATUS_USER + 7		230764	0		+			
ANR	231048	Identifier	STATUS_USER		230764	0					
ANR	231049	PrimaryExpression	7		230764	1					
ANR	231050	ExpressionStatement	prev_priv_state = set_user_priv_from_ad ( ad )	218:1:5646:5689	230764	18	True				
ANR	231051	AssignmentExpression	prev_priv_state = set_user_priv_from_ad ( ad )		230764	0		=			
ANR	231052	Identifier	prev_priv_state		230764	0					
ANR	231053	CallExpression	set_user_priv_from_ad ( ad )		230764	1					
ANR	231054	Callee	set_user_priv_from_ad		230764	0					
ANR	231055	Identifier	set_user_priv_from_ad		230764	0					
ANR	231056	ArgumentList	ad		230764	1					
ANR	231057	Argument	ad		230764	0					
ANR	231058	Identifier	ad		230764	0					
ANR	231059	IfStatement	"if ( - 1 != ( fd = safe_open_wrapper ( file . c_str ( ) , O_RDONLY | _O_BINARY , 0 ) ) )"		230764	19					
ANR	231060	Condition	"- 1 != ( fd = safe_open_wrapper ( file . c_str ( ) , O_RDONLY | _O_BINARY , 0 ) )"	220:5:5697:5787	230764	0	True				
ANR	231061	EqualityExpression	"- 1 != ( fd = safe_open_wrapper ( file . c_str ( ) , O_RDONLY | _O_BINARY , 0 ) )"		230764	0		!=			
ANR	231062	UnaryOperationExpression	- 1		230764	0					
ANR	231063	UnaryOperator	-		230764	0					
ANR	231064	PrimaryExpression	1		230764	1					
ANR	231065	AssignmentExpression	"fd = safe_open_wrapper ( file . c_str ( ) , O_RDONLY | _O_BINARY , 0 )"		230764	1		=			
ANR	231066	Identifier	fd		230764	0					
ANR	231067	CallExpression	"safe_open_wrapper ( file . c_str ( ) , O_RDONLY | _O_BINARY , 0 )"		230764	1					
ANR	231068	Callee	safe_open_wrapper		230764	0					
ANR	231069	Identifier	safe_open_wrapper		230764	0					
ANR	231070	ArgumentList	file . c_str ( )		230764	1					
ANR	231071	Argument	file . c_str ( )		230764	0					
ANR	231072	CallExpression	file . c_str ( )		230764	0					
ANR	231073	Callee	file . c_str		230764	0					
ANR	231074	MemberAccess	file . c_str		230764	0					
ANR	231075	Identifier	file		230764	0					
ANR	231076	Identifier	c_str		230764	1					
ANR	231077	ArgumentList			230764	1					
ANR	231078	Argument	O_RDONLY | _O_BINARY		230764	1					
ANR	231079	InclusiveOrExpression	O_RDONLY | _O_BINARY		230764	0		|			
ANR	231080	Identifier	O_RDONLY		230764	0					
ANR	231081	Identifier	_O_BINARY		230764	1					
ANR	231082	Argument	0		230764	2					
ANR	231083	PrimaryExpression	0		230764	0					
ANR	231084	CompoundStatement		71:16:1942:1942	230764	1					
ANR	231085	IfStatement	if ( SEEK_END == whence )		230764	0					
ANR	231086	Condition	SEEK_END == whence	227:6:6021:6038	230764	0	True				
ANR	231087	EqualityExpression	SEEK_END == whence		230764	0		==			
ANR	231088	Identifier	SEEK_END		230764	0					
ANR	231089	Identifier	whence		230764	1					
ANR	231090	CompoundStatement		77:3:2198:2213	230764	1					
ANR	231091	IdentifierDeclStatement	struct stat buf ;	228:3:6046:6061	230764	0	True				
ANR	231092	IdentifierDecl	buf		230764	0					
ANR	231093	IdentifierDeclType	struct stat		230764	0					
ANR	231094	Identifier	buf		230764	1					
ANR	231095	IfStatement	"if ( - 1 != fstat ( fd , & buf ) )"		230764	1					
ANR	231096	Condition	"- 1 != fstat ( fd , & buf )"	229:7:6070:6090	230764	0	True				
ANR	231097	EqualityExpression	"- 1 != fstat ( fd , & buf )"		230764	0		!=			
ANR	231098	UnaryOperationExpression	- 1		230764	0					
ANR	231099	UnaryOperator	-		230764	0					
ANR	231100	PrimaryExpression	1		230764	1					
ANR	231101	CallExpression	"fstat ( fd , & buf )"		230764	1					
ANR	231102	Callee	fstat		230764	0					
ANR	231103	Identifier	fstat		230764	0					
ANR	231104	ArgumentList	fd		230764	1					
ANR	231105	Argument	fd		230764	0					
ANR	231106	Identifier	fd		230764	0					
ANR	231107	Argument	& buf		230764	1					
ANR	231108	UnaryOperationExpression	& buf		230764	0					
ANR	231109	UnaryOperator	&		230764	0					
ANR	231110	Identifier	buf		230764	1					
ANR	231111	CompoundStatement		78:30:2245:2245	230764	1					
ANR	231112	IfStatement	if ( buf . st_size < abs ( start ) )		230764	0					
ANR	231113	Condition	buf . st_size < abs ( start )	230:8:6103:6126	230764	0	True				
ANR	231114	RelationalExpression	buf . st_size < abs ( start )		230764	0		<			
ANR	231115	MemberAccess	buf . st_size		230764	0					
ANR	231116	Identifier	buf		230764	0					
ANR	231117	Identifier	st_size		230764	1					
ANR	231118	CallExpression	abs ( start )		230764	1					
ANR	231119	Callee	abs		230764	0					
ANR	231120	Identifier	abs		230764	0					
ANR	231121	ArgumentList	start		230764	1					
ANR	231122	Argument	start		230764	0					
ANR	231123	Identifier	start		230764	0					
ANR	231124	CompoundStatement		79:34:2281:2281	230764	1					
ANR	231125	ExpressionStatement	start = - buf . st_size	231:5:6136:6156	230764	0	True				
ANR	231126	AssignmentExpression	start = - buf . st_size		230764	0		=			
ANR	231127	Identifier	start		230764	0					
ANR	231128	UnaryOperationExpression	- buf . st_size		230764	1					
ANR	231129	UnaryOperator	-		230764	0					
ANR	231130	MemberAccess	buf . st_size		230764	1					
ANR	231131	Identifier	buf		230764	0					
ANR	231132	Identifier	st_size		230764	1					
ANR	231133	IfStatement	"if ( - 1 != lseek ( fd , start , whence ) )"		230764	1					
ANR	231134	Condition	"- 1 != lseek ( fd , start , whence )"	236:6:6238:6267	230764	0	True				
ANR	231135	EqualityExpression	"- 1 != lseek ( fd , start , whence )"		230764	0		!=			
ANR	231136	UnaryOperationExpression	- 1		230764	0					
ANR	231137	UnaryOperator	-		230764	0					
ANR	231138	PrimaryExpression	1		230764	1					
ANR	231139	CallExpression	"lseek ( fd , start , whence )"		230764	1					
ANR	231140	Callee	lseek		230764	0					
ANR	231141	Identifier	lseek		230764	0					
ANR	231142	ArgumentList	fd		230764	1					
ANR	231143	Argument	fd		230764	0					
ANR	231144	Identifier	fd		230764	0					
ANR	231145	Argument	start		230764	1					
ANR	231146	Identifier	start		230764	0					
ANR	231147	Argument	whence		230764	2					
ANR	231148	Identifier	whence		230764	0					
ANR	231149	CompoundStatement		85:38:2422:2422	230764	1					
ANR	231150	IfStatement	"if ( - 1 == ( count = full_read ( fd , buffer , length ) ) )"		230764	0					
ANR	231151	Condition	"- 1 == ( count = full_read ( fd , buffer , length ) )"	237:7:6283:6327	230764	0	True				
ANR	231152	EqualityExpression	"- 1 == ( count = full_read ( fd , buffer , length ) )"		230764	0		==			
ANR	231153	UnaryOperationExpression	- 1		230764	0					
ANR	231154	UnaryOperator	-		230764	0					
ANR	231155	PrimaryExpression	1		230764	1					
ANR	231156	AssignmentExpression	"count = full_read ( fd , buffer , length )"		230764	1		=			
ANR	231157	Identifier	count		230764	0					
ANR	231158	CallExpression	"full_read ( fd , buffer , length )"		230764	1					
ANR	231159	Callee	full_read		230764	0					
ANR	231160	Identifier	full_read		230764	0					
ANR	231161	ArgumentList	fd		230764	1					
ANR	231162	Argument	fd		230764	0					
ANR	231163	Identifier	fd		230764	0					
ANR	231164	Argument	buffer		230764	1					
ANR	231165	Identifier	buffer		230764	0					
ANR	231166	Argument	length		230764	2					
ANR	231167	Identifier	length		230764	0					
ANR	231168	CompoundStatement		86:54:2482:2482	230764	1					
ANR	231169	ExpressionStatement	"text = ""Failed to read from "" + file"	238:4:6336:6372	230764	0	True				
ANR	231170	AssignmentExpression	"text = ""Failed to read from "" + file"		230764	0		=			
ANR	231171	Identifier	text		230764	0					
ANR	231172	AdditiveExpression	"""Failed to read from "" + file"		230764	1		+			
ANR	231173	PrimaryExpression	"""Failed to read from """		230764	0					
ANR	231174	Identifier	file		230764	1					
ANR	231175	ExpressionStatement	status = STATUS_USER + 3	239:4:6378:6402	230764	1	True				
ANR	231176	AssignmentExpression	status = STATUS_USER + 3		230764	0		=			
ANR	231177	Identifier	status		230764	0					
ANR	231178	AdditiveExpression	STATUS_USER + 3		230764	1		+			
ANR	231179	Identifier	STATUS_USER		230764	0					
ANR	231180	PrimaryExpression	3		230764	1					
ANR	231181	ElseStatement	else		230764	0					
ANR	231182	CompoundStatement		89:10:2566:2566	230764	0					
ANR	231183	ExpressionStatement	buffer [ count ] = '\\0'	242:4:6450:6470	230764	0	True				
ANR	231184	AssignmentExpression	buffer [ count ] = '\\0'		230764	0		=			
ANR	231185	ArrayIndexing	buffer [ count ]		230764	0					
ANR	231186	Identifier	buffer		230764	0					
ANR	231187	Identifier	count		230764	1					
ANR	231188	PrimaryExpression	'\\0'		230764	1					
ANR	231189	ExpressionStatement	data = buffer	244:4:6477:6490	230764	1	True				
ANR	231190	AssignmentExpression	data = buffer		230764	0		=			
ANR	231191	Identifier	data		230764	0					
ANR	231192	Identifier	buffer		230764	1					
ANR	231193	ExpressionStatement	status = STATUS_OK	245:4:6496:6514	230764	2	True				
ANR	231194	AssignmentExpression	status = STATUS_OK		230764	0		=			
ANR	231195	Identifier	status		230764	0					
ANR	231196	Identifier	STATUS_OK		230764	1					
ANR	231197	ExpressionStatement	close ( fd )	248:3:6525:6534	230764	1	True				
ANR	231198	CallExpression	close ( fd )		230764	0					
ANR	231199	Callee	close		230764	0					
ANR	231200	Identifier	close		230764	0					
ANR	231201	ArgumentList	fd		230764	1					
ANR	231202	Argument	fd		230764	0					
ANR	231203	Identifier	fd		230764	0					
ANR	231204	ElseStatement	else		230764	0					
ANR	231205	CompoundStatement		98:9:2726:2726	230764	0					
ANR	231206	ExpressionStatement	"text = ""Failed to seek in "" + file"	250:3:6579:6613	230764	0	True				
ANR	231207	AssignmentExpression	"text = ""Failed to seek in "" + file"		230764	0		=			
ANR	231208	Identifier	text		230764	0					
ANR	231209	AdditiveExpression	"""Failed to seek in "" + file"		230764	1		+			
ANR	231210	PrimaryExpression	"""Failed to seek in """		230764	0					
ANR	231211	Identifier	file		230764	1					
ANR	231212	ExpressionStatement	status = STATUS_USER + 2	251:3:6618:6642	230764	1	True				
ANR	231213	AssignmentExpression	status = STATUS_USER + 2		230764	0		=			
ANR	231214	Identifier	status		230764	0					
ANR	231215	AdditiveExpression	STATUS_USER + 2		230764	1		+			
ANR	231216	Identifier	STATUS_USER		230764	0					
ANR	231217	PrimaryExpression	2		230764	1					
ANR	231218	ElseStatement	else		230764	0					
ANR	231219	CompoundStatement		102:8:2808:2808	230764	0					
ANR	231220	ExpressionStatement	"text = ""Failed to open "" + file"	254:2:6660:6691	230764	0	True				
ANR	231221	AssignmentExpression	"text = ""Failed to open "" + file"		230764	0		=			
ANR	231222	Identifier	text		230764	0					
ANR	231223	AdditiveExpression	"""Failed to open "" + file"		230764	1		+			
ANR	231224	PrimaryExpression	"""Failed to open """		230764	0					
ANR	231225	Identifier	file		230764	1					
ANR	231226	ExpressionStatement	status = STATUS_USER + 1	255:2:6695:6719	230764	1	True				
ANR	231227	AssignmentExpression	status = STATUS_USER + 1		230764	0		=			
ANR	231228	Identifier	status		230764	0					
ANR	231229	AdditiveExpression	STATUS_USER + 1		230764	1		+			
ANR	231230	Identifier	STATUS_USER		230764	0					
ANR	231231	PrimaryExpression	1		230764	1					
ANR	231232	ExpressionStatement	set_priv ( prev_priv_state )	258:1:6726:6751	230764	20	True				
ANR	231233	CallExpression	set_priv ( prev_priv_state )		230764	0					
ANR	231234	Callee	set_priv		230764	0					
ANR	231235	Identifier	set_priv		230764	0					
ANR	231236	ArgumentList	prev_priv_state		230764	1					
ANR	231237	Argument	prev_priv_state		230764	0					
ANR	231238	Identifier	prev_priv_state		230764	0					
ANR	231239	Statement	delete	260:1:6755:6760	230764	21	True				
ANR	231240	Statement	[	260:8:6762:6762	230764	22	True				
ANR	231241	Statement	]	260:9:6763:6763	230764	23	True				
ANR	231242	ExpressionStatement	buffer	260:10:6764:6770	230764	24	True				
ANR	231243	Identifier	buffer		230764	0					
ANR	231244	ReturnStatement	return status ;	262:1:6774:6787	230764	25	True				
ANR	231245	Identifier	status		230764	0					
ANR	231246	ReturnType	Manageable :: status_t		230764	1					
ANR	231247	Identifier	JobServerObject :: FetchJobData		230764	2					
ANR	231248	ParameterList	"std :: string key , std :: string & file , int32_t start , int32_t end , std :: string & data , std :: string & text"		230764	3					
ANR	231249	Parameter	std :: string key	146:30:3705:3719	230764	0	True				
ANR	231250	ParameterType	std :: string		230764	0					
ANR	231251	Identifier	key		230764	1					
ANR	231252	Parameter	std :: string & file	147:8:3730:3746	230764	1	True				
ANR	231253	ParameterType	std :: string &		230764	0					
ANR	231254	Identifier	file		230764	1					
ANR	231255	Parameter	int32_t start	148:8:3757:3769	230764	2	True				
ANR	231256	ParameterType	int32_t		230764	0					
ANR	231257	Identifier	start		230764	1					
ANR	231258	Parameter	int32_t end	149:8:3780:3790	230764	3	True				
ANR	231259	ParameterType	int32_t		230764	0					
ANR	231260	Identifier	end		230764	1					
ANR	231261	Parameter	std :: string & data	150:8:3801:3817	230764	4	True				
ANR	231262	ParameterType	std :: string &		230764	0					
ANR	231263	Identifier	data		230764	1					
ANR	231264	Parameter	std :: string & text	151:8:3828:3844	230764	5	True				
ANR	231265	ParameterType	std :: string &		230764	0					
ANR	231266	Identifier	text		230764	1					
ANR	231267	CFGEntryNode	ENTRY		230764		True				
ANR	231268	CFGExitNode	EXIT		230764		True				
ANR	231269	Symbol	STATUS_USER		230764						
ANR	231270	Symbol	g_jobs		230764						
ANR	231271	Symbol	lseek		230764						
ANR	231272	Symbol	data		230764						
ANR	231273	Symbol	* element		230764						
ANR	231274	Symbol	key . c_str		230764						
ANR	231275	Symbol	_O_BINARY		230764						
ANR	231276	Symbol	full_read		230764						
ANR	231277	Symbol	id . cluster		230764						
ANR	231278	Symbol	* count		230764						
ANR	231279	Symbol	file		230764						
ANR	231280	Symbol	end		230764						
ANR	231281	Symbol	text		230764						
ANR	231282	Symbol	buffer		230764						
ANR	231283	Symbol	id		230764						
ANR	231284	Symbol	g_jobs . find		230764						
ANR	231285	Symbol	key		230764						
ANR	231286	Symbol	& buf		230764						
ANR	231287	Symbol	getProcByString		230764						
ANR	231288	Symbol	element		230764						
ANR	231289	Symbol	SEEK_SET		230764						
ANR	231290	Symbol	* buffer		230764						
ANR	231291	Symbol	ad		230764						
ANR	231292	Symbol	STATUS_UNKNOWN_OBJECT		230764						
ANR	231293	Symbol	whence		230764						
ANR	231294	Symbol	buf . st_size		230764						
ANR	231295	Symbol	start		230764						
ANR	231296	Symbol	count		230764						
ANR	231297	Symbol	length		230764						
ANR	231298	Symbol	D_ALWAYS		230764						
ANR	231299	Symbol	id . proc		230764						
ANR	231300	Symbol	fstat		230764						
ANR	231301	Symbol	D_FULLDEBUG		230764						
ANR	231302	Symbol	ad . LookupString		230764						
ANR	231303	Symbol	SEEK_END		230764						
ANR	231304	Symbol	safe_open_wrapper		230764						
ANR	231305	Symbol	file . c_str		230764						
ANR	231306	Symbol	buf		230764						
ANR	231307	Symbol	abs		230764						
ANR	231308	Symbol	O_RDONLY		230764						
ANR	231309	Symbol	( * element ) . second		230764						
ANR	231310	Symbol	g_jobs . end		230764						
ANR	231311	Symbol	STATUS_OK		230764						
ANR	231312	Symbol	prev_priv_state		230764						
ANR	231313	Symbol	fd		230764						
ANR	231314	Symbol	set_user_priv_from_ad		230764						
ANR	231315	Symbol	status		230764						
ANR	231316	Function	JobServerObject :: GetManagementObject	265:0:6792:6888							
ANR	231317	FunctionDef	JobServerObject :: GetManagementObject ()		231316	0					
ANR	231318	CompoundStatement		267:0:6863:6888	231316	0					
ANR	231319	ReturnStatement	return mgmtObject ;	268:4:6869:6886	231316	0	True				
ANR	231320	Identifier	mgmtObject		231316	0					
ANR	231321	ReturnType	ManagementObject *		231316	1					
ANR	231322	Identifier	JobServerObject :: GetManagementObject		231316	2					
ANR	231323	ParameterList			231316	3					
ANR	231324	CFGEntryNode	ENTRY		231316		True				
ANR	231325	CFGExitNode	EXIT		231316		True				
ANR	231326	Symbol	mgmtObject		231316						
ANR	231327	Function	JobServerObject :: ManagementMethod	272:0:6892:7994							
ANR	231328	FunctionDef	"JobServerObject :: ManagementMethod (uint32_t methodId , Args & args , std :: string & text)"		231327	0					
ANR	231329	CompoundStatement		276:0:7072:7994	231327	0					
ANR	231330	SwitchStatement	switch ( methodId )		231327	0					
ANR	231331	Condition	methodId	277:13:7087:7094	231327	0	True				
ANR	231332	Identifier	methodId		231327	0					
ANR	231333	CompoundStatement		3:4:29:29	231327	1					
ANR	231334	Label	case qmf :: com :: redhat :: grid :: JobServer :: METHOD_ECHO :	279:8:7112:7163	231327	0	True				
ANR	231335	Identifier	qmf :: com :: redhat :: grid :: JobServer :: METHOD_ECHO		231327	0					
ANR	231336	IfStatement	"if ( ! param_boolean ( ""QMF_MANAGEMENT_METHOD_ECHO"" , false ) )"		231327	1					
ANR	231337	Condition	"! param_boolean ( ""QMF_MANAGEMENT_METHOD_ECHO"" , false )"	280:7:7172:7222	231327	0	True				
ANR	231338	UnaryOperationExpression	"! param_boolean ( ""QMF_MANAGEMENT_METHOD_ECHO"" , false )"		231327	0					
ANR	231339	UnaryOperator	!		231327	0					
ANR	231340	CallExpression	"param_boolean ( ""QMF_MANAGEMENT_METHOD_ECHO"" , false )"		231327	1					
ANR	231341	Callee	param_boolean		231327	0					
ANR	231342	Identifier	param_boolean		231327	0					
ANR	231343	ArgumentList	"""QMF_MANAGEMENT_METHOD_ECHO"""		231327	1					
ANR	231344	Argument	"""QMF_MANAGEMENT_METHOD_ECHO"""		231327	0					
ANR	231345	PrimaryExpression	"""QMF_MANAGEMENT_METHOD_ECHO"""		231327	0					
ANR	231346	Argument	false		231327	1					
ANR	231347	Identifier	false		231327	0					
ANR	231348	ReturnStatement	return STATUS_NOT_IMPLEMENTED ;	280:60:7225:7254	231327	1	True				
ANR	231349	Identifier	STATUS_NOT_IMPLEMENTED		231327	0					
ANR	231350	ReturnStatement	return STATUS_OK ;	282:12:7269:7285	231327	2	True				
ANR	231351	Identifier	STATUS_OK		231327	0					
ANR	231352	Label	case qmf :: com :: redhat :: grid :: JobServer :: METHOD_GETJOBAD :	283:8:7295:7350	231327	3	True				
ANR	231353	Identifier	qmf :: com :: redhat :: grid :: JobServer :: METHOD_GETJOBAD		231327	0					
ANR	231354	ReturnStatement	"return GetJobAd ( ( ( ArgsJobServerGetJobAd & ) args ) . i_Id , ( ( ArgsJobServerGetJobAd & ) args ) . o_JobAd , text ) ;"	284:12:7364:7531	231327	4	True				
ANR	231355	CallExpression	"GetJobAd ( ( ( ArgsJobServerGetJobAd & ) args ) . i_Id , ( ( ArgsJobServerGetJobAd & ) args ) . o_JobAd , text )"		231327	0					
ANR	231356	Callee	GetJobAd		231327	0					
ANR	231357	Identifier	GetJobAd		231327	0					
ANR	231358	ArgumentList	( ( ArgsJobServerGetJobAd & ) args ) . i_Id		231327	1					
ANR	231359	Argument	( ( ArgsJobServerGetJobAd & ) args ) . i_Id		231327	0					
ANR	231360	MemberAccess	( ( ArgsJobServerGetJobAd & ) args ) . i_Id		231327	0					
ANR	231361	CastExpression	( ArgsJobServerGetJobAd & ) args		231327	0					
ANR	231362	CastTarget	ArgsJobServerGetJobAd &		231327	0					
ANR	231363	Identifier	args		231327	1					
ANR	231364	Identifier	i_Id		231327	1					
ANR	231365	Argument	( ( ArgsJobServerGetJobAd & ) args ) . o_JobAd		231327	1					
ANR	231366	MemberAccess	( ( ArgsJobServerGetJobAd & ) args ) . o_JobAd		231327	0					
ANR	231367	CastExpression	( ArgsJobServerGetJobAd & ) args		231327	0					
ANR	231368	CastTarget	ArgsJobServerGetJobAd &		231327	0					
ANR	231369	Identifier	args		231327	1					
ANR	231370	Identifier	o_JobAd		231327	1					
ANR	231371	Argument	text		231327	2					
ANR	231372	Identifier	text		231327	0					
ANR	231373	Label	case qmf :: com :: redhat :: grid :: JobServer :: METHOD_FETCHJOBDATA :	287:1:7534:7593	231327	5	True				
ANR	231374	Identifier	qmf :: com :: redhat :: grid :: JobServer :: METHOD_FETCHJOBDATA		231327	0					
ANR	231375	ReturnStatement	"return FetchJobData ( ( ( ArgsJobServerFetchJobData & ) args ) . i_Id , ( ( ArgsJobServerFetchJobData & ) args ) . i_File , ( ( ArgsJobServerFetchJobData & ) args ) . i_Start , ( ( ArgsJobServerFetchJobData & ) args ) . i_End , ( ( ArgsJobServerFetchJobData & ) args ) . o_Data , text ) ;"	288:12:7607:7950	231327	6	True				
ANR	231376	CallExpression	"FetchJobData ( ( ( ArgsJobServerFetchJobData & ) args ) . i_Id , ( ( ArgsJobServerFetchJobData & ) args ) . i_File , ( ( ArgsJobServerFetchJobData & ) args ) . i_Start , ( ( ArgsJobServerFetchJobData & ) args ) . i_End , ( ( ArgsJobServerFetchJobData & ) args ) . o_Data , text )"		231327	0					
ANR	231377	Callee	FetchJobData		231327	0					
ANR	231378	Identifier	FetchJobData		231327	0					
ANR	231379	ArgumentList	( ( ArgsJobServerFetchJobData & ) args ) . i_Id		231327	1					
ANR	231380	Argument	( ( ArgsJobServerFetchJobData & ) args ) . i_Id		231327	0					
ANR	231381	MemberAccess	( ( ArgsJobServerFetchJobData & ) args ) . i_Id		231327	0					
ANR	231382	CastExpression	( ArgsJobServerFetchJobData & ) args		231327	0					
ANR	231383	CastTarget	ArgsJobServerFetchJobData &		231327	0					
ANR	231384	Identifier	args		231327	1					
ANR	231385	Identifier	i_Id		231327	1					
ANR	231386	Argument	( ( ArgsJobServerFetchJobData & ) args ) . i_File		231327	1					
ANR	231387	MemberAccess	( ( ArgsJobServerFetchJobData & ) args ) . i_File		231327	0					
ANR	231388	CastExpression	( ArgsJobServerFetchJobData & ) args		231327	0					
ANR	231389	CastTarget	ArgsJobServerFetchJobData &		231327	0					
ANR	231390	Identifier	args		231327	1					
ANR	231391	Identifier	i_File		231327	1					
ANR	231392	Argument	( ( ArgsJobServerFetchJobData & ) args ) . i_Start		231327	2					
ANR	231393	MemberAccess	( ( ArgsJobServerFetchJobData & ) args ) . i_Start		231327	0					
ANR	231394	CastExpression	( ArgsJobServerFetchJobData & ) args		231327	0					
ANR	231395	CastTarget	ArgsJobServerFetchJobData &		231327	0					
ANR	231396	Identifier	args		231327	1					
ANR	231397	Identifier	i_Start		231327	1					
ANR	231398	Argument	( ( ArgsJobServerFetchJobData & ) args ) . i_End		231327	3					
ANR	231399	MemberAccess	( ( ArgsJobServerFetchJobData & ) args ) . i_End		231327	0					
ANR	231400	CastExpression	( ArgsJobServerFetchJobData & ) args		231327	0					
ANR	231401	CastTarget	ArgsJobServerFetchJobData &		231327	0					
ANR	231402	Identifier	args		231327	1					
ANR	231403	Identifier	i_End		231327	1					
ANR	231404	Argument	( ( ArgsJobServerFetchJobData & ) args ) . o_Data		231327	4					
ANR	231405	MemberAccess	( ( ArgsJobServerFetchJobData & ) args ) . o_Data		231327	0					
ANR	231406	CastExpression	( ArgsJobServerFetchJobData & ) args		231327	0					
ANR	231407	CastTarget	ArgsJobServerFetchJobData &		231327	0					
ANR	231408	Identifier	args		231327	1					
ANR	231409	Identifier	o_Data		231327	1					
ANR	231410	Argument	text		231327	5					
ANR	231411	Identifier	text		231327	0					
ANR	231412	ReturnStatement	return STATUS_NOT_IMPLEMENTED ;	296:4:7963:7992	231327	1	True				
ANR	231413	Identifier	STATUS_NOT_IMPLEMENTED		231327	0					
ANR	231414	ReturnType	Manageable :: status_t		231327	1					
ANR	231415	Identifier	JobServerObject :: ManagementMethod		231327	2					
ANR	231416	ParameterList	"uint32_t methodId , Args & args , std :: string & text"		231327	3					
ANR	231417	Parameter	uint32_t methodId	273:36:6949:6965	231327	0	True				
ANR	231418	ParameterType	uint32_t		231327	0					
ANR	231419	Identifier	methodId		231327	1					
ANR	231420	Parameter	Args & args	274:36:7004:7013	231327	1	True				
ANR	231421	ParameterType	Args &		231327	0					
ANR	231422	Identifier	args		231327	1					
ANR	231423	Parameter	std :: string & text	275:36:7052:7068	231327	2	True				
ANR	231424	ParameterType	std :: string &		231327	0					
ANR	231425	Identifier	text		231327	1					
ANR	231426	CFGEntryNode	ENTRY		231327		True				
ANR	231427	CFGExitNode	EXIT		231327		True				
ANR	231428	Symbol	( ( ArgsJobServerFetchJobData & ) args ) . o_Data		231327						
ANR	231429	Symbol	false		231327						
ANR	231430	Symbol	methodId		231327						
ANR	231431	Symbol	param_boolean		231327						
ANR	231432	Symbol	( ( ArgsJobServerFetchJobData & ) args ) . i_Id		231327						
ANR	231433	Symbol	GetJobAd		231327						
ANR	231434	Symbol	FetchJobData		231327						
ANR	231435	Symbol	args		231327						
ANR	231436	Symbol	( ( ArgsJobServerGetJobAd & ) args ) . i_Id		231327						
ANR	231437	Symbol	( ( ArgsJobServerFetchJobData & ) args ) . i_End		231327						
ANR	231438	Symbol	( ( ArgsJobServerGetJobAd & ) args ) . o_JobAd		231327						
ANR	231439	Symbol	( ( ArgsJobServerFetchJobData & ) args ) . i_File		231327						
ANR	231440	Symbol	( ( ArgsJobServerFetchJobData & ) args ) . i_Start		231327						
ANR	231441	Symbol	STATUS_OK		231327						
ANR	231442	Symbol	text		231327						
ANR	231443	Symbol	STATUS_NOT_IMPLEMENTED		231327						
ANR	231444	Function	JobServerObject :: AuthorizeMethod	299:0:7997:8240							
ANR	231445	FunctionDef	"JobServerObject :: AuthorizeMethod (uint32_t methodId , Args & args , const std :: string & userId)"		231444	0					
ANR	231446	CompoundStatement		300:91:8093:8240	231444	0					
ANR	231447	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""AuthorizeMethod: checking '%s'\\n"" , userId . c_str ( ) )"	301:1:8096:8168	231444	0	True				
ANR	231448	CallExpression	"dprintf ( D_FULLDEBUG , ""AuthorizeMethod: checking '%s'\\n"" , userId . c_str ( ) )"		231444	0					
ANR	231449	Callee	dprintf		231444	0					
ANR	231450	Identifier	dprintf		231444	0					
ANR	231451	ArgumentList	D_FULLDEBUG		231444	1					
ANR	231452	Argument	D_FULLDEBUG		231444	0					
ANR	231453	Identifier	D_FULLDEBUG		231444	0					
ANR	231454	Argument	"""AuthorizeMethod: checking '%s'\\n"""		231444	1					
ANR	231455	PrimaryExpression	"""AuthorizeMethod: checking '%s'\\n"""		231444	0					
ANR	231456	Argument	userId . c_str ( )		231444	2					
ANR	231457	CallExpression	userId . c_str ( )		231444	0					
ANR	231458	Callee	userId . c_str		231444	0					
ANR	231459	MemberAccess	userId . c_str		231444	0					
ANR	231460	Identifier	userId		231444	0					
ANR	231461	Identifier	c_str		231444	1					
ANR	231462	ArgumentList			231444	1					
ANR	231463	IfStatement	"if ( 0 == userId . compare ( ""cumin"" ) )"		231444	1					
ANR	231464	Condition	"0 == userId . compare ( ""cumin"" )"	302:5:8175:8202	231444	0	True				
ANR	231465	EqualityExpression	"0 == userId . compare ( ""cumin"" )"		231444	0		==			
ANR	231466	PrimaryExpression	0		231444	0					
ANR	231467	CallExpression	"userId . compare ( ""cumin"" )"		231444	1					
ANR	231468	Callee	userId . compare		231444	0					
ANR	231469	MemberAccess	userId . compare		231444	0					
ANR	231470	Identifier	userId		231444	0					
ANR	231471	Identifier	compare		231444	1					
ANR	231472	ArgumentList	"""cumin"""		231444	1					
ANR	231473	Argument	"""cumin"""		231444	0					
ANR	231474	PrimaryExpression	"""cumin"""		231444	0					
ANR	231475	CompoundStatement		3:35:111:111	231444	1					
ANR	231476	ReturnStatement	return true ;	303:2:8209:8220	231444	0	True				
ANR	231477	Identifier	true		231444	0					
ANR	231478	ReturnStatement	return false ;	305:1:8226:8238	231444	2	True				
ANR	231479	Identifier	false		231444	0					
ANR	231480	ReturnType	bool		231444	1					
ANR	231481	Identifier	JobServerObject :: AuthorizeMethod		231444	2					
ANR	231482	ParameterList	"uint32_t methodId , Args & args , const std :: string & userId"		231444	3					
ANR	231483	Parameter	uint32_t methodId	300:33:8035:8051	231444	0	True				
ANR	231484	ParameterType	uint32_t		231444	0					
ANR	231485	Identifier	methodId		231444	1					
ANR	231486	Parameter	Args & args	300:52:8054:8063	231444	1	True				
ANR	231487	ParameterType	Args &		231444	0					
ANR	231488	Identifier	args		231444	1					
ANR	231489	Parameter	const std :: string & userId	300:64:8066:8090	231444	2	True				
ANR	231490	ParameterType	const std :: string &		231444	0					
ANR	231491	Identifier	userId		231444	1					
ANR	231492	CFGEntryNode	ENTRY		231444		True				
ANR	231493	CFGExitNode	EXIT		231444		True				
ANR	231494	Symbol	args		231444						
ANR	231495	Symbol	userId . compare		231444						
ANR	231496	Symbol	true		231444						
ANR	231497	Symbol	false		231444						
ANR	231498	Symbol	methodId		231444						
ANR	231499	Symbol	D_FULLDEBUG		231444						
ANR	231500	Symbol	userId . c_str		231444						
ANR	231501	Symbol	userId		231444						
