command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2648110	File	data/converged/CVE-2011-4930_htcondor/src_condor_chirp_condor_chirp.cpp								
ANR	2648111	DeclStmt									
ANR	2648112	Decl							int	int	save_errno
ANR	2648113	DeclStmt									
ANR	2648114	Decl							int	int	save_errno
ANR	2648115	DeclStmt									
ANR	2648116	Decl							time_t	time_t	t
ANR	2648117	Function	chirp_client_connect_starter	83:0:2716:3592							
ANR	2648118	FunctionDef	chirp_client_connect_starter ()		2648117	0					
ANR	2648119	CompoundStatement		85:0:2769:3592	2648117	0					
ANR	2648120	IdentifierDeclStatement	FILE * file ;	86:4:2775:2785	2648117	0	True				
ANR	2648121	IdentifierDecl	* file		2648117	0					
ANR	2648122	IdentifierDeclType	FILE *		2648117	0					
ANR	2648123	Identifier	file		2648117	1					
ANR	2648124	IdentifierDeclStatement	int fields ;	87:4:2791:2801	2648117	1	True				
ANR	2648125	IdentifierDecl	fields		2648117	0					
ANR	2648126	IdentifierDeclType	int		2648117	0					
ANR	2648127	Identifier	fields		2648117	1					
ANR	2648128	IdentifierDeclStatement	struct chirp_client * client ;	88:4:2807:2834	2648117	2	True				
ANR	2648129	IdentifierDecl	* client		2648117	0					
ANR	2648130	IdentifierDeclType	struct chirp_client *		2648117	0					
ANR	2648131	Identifier	client		2648117	1					
ANR	2648132	IdentifierDeclStatement	char host [ CONDOR_HOSTNAME_MAX ] ;	89:4:2840:2870	2648117	3	True				
ANR	2648133	IdentifierDecl	host [ CONDOR_HOSTNAME_MAX ]		2648117	0					
ANR	2648134	IdentifierDeclType	char [ CONDOR_HOSTNAME_MAX ]		2648117	0					
ANR	2648135	Identifier	host		2648117	1					
ANR	2648136	Identifier	CONDOR_HOSTNAME_MAX		2648117	2					
ANR	2648137	IdentifierDeclStatement	char cookie [ CHIRP_LINE_MAX ] ;	90:4:2876:2903	2648117	4	True				
ANR	2648138	IdentifierDecl	cookie [ CHIRP_LINE_MAX ]		2648117	0					
ANR	2648139	IdentifierDeclType	char [ CHIRP_LINE_MAX ]		2648117	0					
ANR	2648140	Identifier	cookie		2648117	1					
ANR	2648141	Identifier	CHIRP_LINE_MAX		2648117	2					
ANR	2648142	IdentifierDeclStatement	MyString path ;	91:1:2906:2919	2648117	5	True				
ANR	2648143	IdentifierDecl	path		2648117	0					
ANR	2648144	IdentifierDeclType	MyString		2648117	0					
ANR	2648145	Identifier	path		2648117	1					
ANR	2648146	IdentifierDeclStatement	int port ;	92:4:2925:2933	2648117	6	True				
ANR	2648147	IdentifierDecl	port		2648117	0					
ANR	2648148	IdentifierDeclType	int		2648117	0					
ANR	2648149	Identifier	port		2648117	1					
ANR	2648150	IdentifierDeclStatement	int result ;	93:4:2939:2949	2648117	7	True				
ANR	2648151	IdentifierDecl	result		2648117	0					
ANR	2648152	IdentifierDeclType	int		2648117	0					
ANR	2648153	Identifier	result		2648117	1					
ANR	2648154	IdentifierDeclStatement	const char * dir ;	94:1:2952:2967	2648117	8	True				
ANR	2648155	IdentifierDecl	* dir		2648117	0					
ANR	2648156	IdentifierDeclType	const char *		2648117	0					
ANR	2648157	Identifier	dir		2648117	1					
ANR	2648158	IfStatement	"if ( NULL == ( dir = getenv ( ""_CONDOR_SCRATCH_DIR"" ) ) )"		2648117	9					
ANR	2648159	Condition	"NULL == ( dir = getenv ( ""_CONDOR_SCRATCH_DIR"" ) )"	96:5:2975:3019	2648117	0	True				
ANR	2648160	EqualityExpression	"NULL == ( dir = getenv ( ""_CONDOR_SCRATCH_DIR"" ) )"		2648117	0		==			
ANR	2648161	Identifier	NULL		2648117	0					
ANR	2648162	AssignmentExpression	"dir = getenv ( ""_CONDOR_SCRATCH_DIR"" )"		2648117	1		=			
ANR	2648163	Identifier	dir		2648117	0					
ANR	2648164	CallExpression	"getenv ( ""_CONDOR_SCRATCH_DIR"" )"		2648117	1					
ANR	2648165	Callee	getenv		2648117	0					
ANR	2648166	Identifier	getenv		2648117	0					
ANR	2648167	ArgumentList	"""_CONDOR_SCRATCH_DIR"""		2648117	1					
ANR	2648168	Argument	"""_CONDOR_SCRATCH_DIR"""		2648117	0					
ANR	2648169	PrimaryExpression	"""_CONDOR_SCRATCH_DIR"""		2648117	0					
ANR	2648170	CompoundStatement		12:52:252:252	2648117	1					
ANR	2648171	ExpressionStatement	"dir = ""."""	97:2:3026:3035	2648117	0	True				
ANR	2648172	AssignmentExpression	"dir = ""."""		2648117	0		=			
ANR	2648173	Identifier	dir		2648117	0					
ANR	2648174	PrimaryExpression	"""."""		2648117	1					
ANR	2648175	ExpressionStatement	"path . sprintf ( ""%s%c%s"" , dir , DIR_DELIM_CHAR , ""chirp.config"" )"	99:1:3041:3098	2648117	10	True				
ANR	2648176	CallExpression	"path . sprintf ( ""%s%c%s"" , dir , DIR_DELIM_CHAR , ""chirp.config"" )"		2648117	0					
ANR	2648177	Callee	path . sprintf		2648117	0					
ANR	2648178	MemberAccess	path . sprintf		2648117	0					
ANR	2648179	Identifier	path		2648117	0					
ANR	2648180	Identifier	sprintf		2648117	1					
ANR	2648181	ArgumentList	"""%s%c%s"""		2648117	1					
ANR	2648182	Argument	"""%s%c%s"""		2648117	0					
ANR	2648183	PrimaryExpression	"""%s%c%s"""		2648117	0					
ANR	2648184	Argument	dir		2648117	1					
ANR	2648185	Identifier	dir		2648117	0					
ANR	2648186	Argument	DIR_DELIM_CHAR		2648117	2					
ANR	2648187	Identifier	DIR_DELIM_CHAR		2648117	0					
ANR	2648188	Argument	"""chirp.config"""		2648117	3					
ANR	2648189	PrimaryExpression	"""chirp.config"""		2648117	0					
ANR	2648190	ExpressionStatement	"file = safe_fopen_wrapper_follow ( path . Value ( ) , ""r"" )"	100:4:3104:3154	2648117	11	True				
ANR	2648191	AssignmentExpression	"file = safe_fopen_wrapper_follow ( path . Value ( ) , ""r"" )"		2648117	0		=			
ANR	2648192	Identifier	file		2648117	0					
ANR	2648193	CallExpression	"safe_fopen_wrapper_follow ( path . Value ( ) , ""r"" )"		2648117	1					
ANR	2648194	Callee	safe_fopen_wrapper_follow		2648117	0					
ANR	2648195	Identifier	safe_fopen_wrapper_follow		2648117	0					
ANR	2648196	ArgumentList	path . Value ( )		2648117	1					
ANR	2648197	Argument	path . Value ( )		2648117	0					
ANR	2648198	CallExpression	path . Value ( )		2648117	0					
ANR	2648199	Callee	path . Value		2648117	0					
ANR	2648200	MemberAccess	path . Value		2648117	0					
ANR	2648201	Identifier	path		2648117	0					
ANR	2648202	Identifier	Value		2648117	1					
ANR	2648203	ArgumentList			2648117	1					
ANR	2648204	Argument	"""r"""		2648117	1					
ANR	2648205	PrimaryExpression	"""r"""		2648117	0					
ANR	2648206	IfStatement	if ( ! file )		2648117	12					
ANR	2648207	Condition	! file	101:7:3163:3167	2648117	0	True				
ANR	2648208	UnaryOperationExpression	! file		2648117	0					
ANR	2648209	UnaryOperator	!		2648117	0					
ANR	2648210	Identifier	file		2648117	1					
ANR	2648211	CompoundStatement		17:14:400:400	2648117	1					
ANR	2648212	ExpressionStatement	"fprintf ( stderr , ""Can't open %s file\\n"" , path . Value ( ) )"	102:2:3174:3226	2648117	0	True				
ANR	2648213	CallExpression	"fprintf ( stderr , ""Can't open %s file\\n"" , path . Value ( ) )"		2648117	0					
ANR	2648214	Callee	fprintf		2648117	0					
ANR	2648215	Identifier	fprintf		2648117	0					
ANR	2648216	ArgumentList	stderr		2648117	1					
ANR	2648217	Argument	stderr		2648117	0					
ANR	2648218	Identifier	stderr		2648117	0					
ANR	2648219	Argument	"""Can't open %s file\\n"""		2648117	1					
ANR	2648220	PrimaryExpression	"""Can't open %s file\\n"""		2648117	0					
ANR	2648221	Argument	path . Value ( )		2648117	2					
ANR	2648222	CallExpression	path . Value ( )		2648117	0					
ANR	2648223	Callee	path . Value		2648117	0					
ANR	2648224	MemberAccess	path . Value		2648117	0					
ANR	2648225	Identifier	path		2648117	0					
ANR	2648226	Identifier	Value		2648117	1					
ANR	2648227	ArgumentList			2648117	1					
ANR	2648228	ReturnStatement	return 0 ;	103:2:3230:3238	2648117	1	True				
ANR	2648229	PrimaryExpression	0		2648117	0					
ANR	2648230	ExpressionStatement	"fields = fscanf ( file , ""%s %d %s"" , host , & port , cookie )"	106:4:3248:3298	2648117	13	True				
ANR	2648231	AssignmentExpression	"fields = fscanf ( file , ""%s %d %s"" , host , & port , cookie )"		2648117	0		=			
ANR	2648232	Identifier	fields		2648117	0					
ANR	2648233	CallExpression	"fscanf ( file , ""%s %d %s"" , host , & port , cookie )"		2648117	1					
ANR	2648234	Callee	fscanf		2648117	0					
ANR	2648235	Identifier	fscanf		2648117	0					
ANR	2648236	ArgumentList	file		2648117	1					
ANR	2648237	Argument	file		2648117	0					
ANR	2648238	Identifier	file		2648117	0					
ANR	2648239	Argument	"""%s %d %s"""		2648117	1					
ANR	2648240	PrimaryExpression	"""%s %d %s"""		2648117	0					
ANR	2648241	Argument	host		2648117	2					
ANR	2648242	Identifier	host		2648117	0					
ANR	2648243	Argument	& port		2648117	3					
ANR	2648244	UnaryOperationExpression	& port		2648117	0					
ANR	2648245	UnaryOperator	&		2648117	0					
ANR	2648246	Identifier	port		2648117	1					
ANR	2648247	Argument	cookie		2648117	4					
ANR	2648248	Identifier	cookie		2648117	0					
ANR	2648249	ExpressionStatement	fclose ( file )	107:4:3304:3316	2648117	14	True				
ANR	2648250	CallExpression	fclose ( file )		2648117	0					
ANR	2648251	Callee	fclose		2648117	0					
ANR	2648252	Identifier	fclose		2648117	0					
ANR	2648253	ArgumentList	file		2648117	1					
ANR	2648254	Argument	file		2648117	0					
ANR	2648255	Identifier	file		2648117	0					
ANR	2648256	IfStatement	if ( fields != 3 )		2648117	15					
ANR	2648257	Condition	fields != 3	109:7:3326:3334	2648117	0	True				
ANR	2648258	EqualityExpression	fields != 3		2648117	0		!=			
ANR	2648259	Identifier	fields		2648117	0					
ANR	2648260	PrimaryExpression	3		2648117	1					
ANR	2648261	CompoundStatement		25:18:567:567	2648117	1					
ANR	2648262	ExpressionStatement	errno = EINVAL	110:8:3347:3361	2648117	0	True				
ANR	2648263	AssignmentExpression	errno = EINVAL		2648117	0		=			
ANR	2648264	Identifier	errno		2648117	0					
ANR	2648265	Identifier	EINVAL		2648117	1					
ANR	2648266	ReturnStatement	return 0 ;	111:8:3371:3379	2648117	1	True				
ANR	2648267	PrimaryExpression	0		2648117	0					
ANR	2648268	ExpressionStatement	"client = chirp_client_connect ( host , port )"	114:4:3392:3432	2648117	16	True				
ANR	2648269	AssignmentExpression	"client = chirp_client_connect ( host , port )"		2648117	0		=			
ANR	2648270	Identifier	client		2648117	0					
ANR	2648271	CallExpression	"chirp_client_connect ( host , port )"		2648117	1					
ANR	2648272	Callee	chirp_client_connect		2648117	0					
ANR	2648273	Identifier	chirp_client_connect		2648117	0					
ANR	2648274	ArgumentList	host		2648117	1					
ANR	2648275	Argument	host		2648117	0					
ANR	2648276	Identifier	host		2648117	0					
ANR	2648277	Argument	port		2648117	1					
ANR	2648278	Identifier	port		2648117	0					
ANR	2648279	IfStatement	if ( ! client )		2648117	17					
ANR	2648280	Condition	! client	115:7:3441:3447	2648117	0	True				
ANR	2648281	UnaryOperationExpression	! client		2648117	0					
ANR	2648282	UnaryOperator	!		2648117	0					
ANR	2648283	Identifier	client		2648117	1					
ANR	2648284	ReturnStatement	return 0 ;	115:16:3450:3458	2648117	1	True				
ANR	2648285	PrimaryExpression	0		2648117	0					
ANR	2648286	ExpressionStatement	"result = chirp_client_cookie ( client , cookie )"	117:4:3465:3508	2648117	18	True				
ANR	2648287	AssignmentExpression	"result = chirp_client_cookie ( client , cookie )"		2648117	0		=			
ANR	2648288	Identifier	result		2648117	0					
ANR	2648289	CallExpression	"chirp_client_cookie ( client , cookie )"		2648117	1					
ANR	2648290	Callee	chirp_client_cookie		2648117	0					
ANR	2648291	Identifier	chirp_client_cookie		2648117	0					
ANR	2648292	ArgumentList	client		2648117	1					
ANR	2648293	Argument	client		2648117	0					
ANR	2648294	Identifier	client		2648117	0					
ANR	2648295	Argument	cookie		2648117	1					
ANR	2648296	Identifier	cookie		2648117	0					
ANR	2648297	IfStatement	if ( result != 0 )		2648117	19					
ANR	2648298	Condition	result != 0	118:7:3517:3525	2648117	0	True				
ANR	2648299	EqualityExpression	result != 0		2648117	0		!=			
ANR	2648300	Identifier	result		2648117	0					
ANR	2648301	PrimaryExpression	0		2648117	1					
ANR	2648302	CompoundStatement		34:18:758:758	2648117	1					
ANR	2648303	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , 0 )"	119:2:3532:3564	2648117	0	True				
ANR	2648304	CallExpression	"DISCONNECT_AND_RETURN ( client , 0 )"		2648117	0					
ANR	2648305	Callee	DISCONNECT_AND_RETURN		2648117	0					
ANR	2648306	Identifier	DISCONNECT_AND_RETURN		2648117	0					
ANR	2648307	ArgumentList	client		2648117	1					
ANR	2648308	Argument	client		2648117	0					
ANR	2648309	Identifier	client		2648117	0					
ANR	2648310	Argument	0		2648117	1					
ANR	2648311	PrimaryExpression	0		2648117	0					
ANR	2648312	ReturnStatement	return client ;	122:4:3577:3590	2648117	20	True				
ANR	2648313	Identifier	client		2648117	0					
ANR	2648314	ReturnType	struct chirp_client *		2648117	1					
ANR	2648315	Identifier	chirp_client_connect_starter		2648117	2					
ANR	2648316	ParameterList			2648117	3					
ANR	2648317	CFGEntryNode	ENTRY		2648117		True				
ANR	2648318	CFGExitNode	EXIT		2648117		True				
ANR	2648319	Symbol	errno		2648117						
ANR	2648320	Symbol	chirp_client_cookie		2648117						
ANR	2648321	Symbol	NULL		2648117						
ANR	2648322	Symbol	cookie		2648117						
ANR	2648323	Symbol	DIR_DELIM_CHAR		2648117						
ANR	2648324	Symbol	dir		2648117						
ANR	2648325	Symbol	stderr		2648117						
ANR	2648326	Symbol	chirp_client_connect		2648117						
ANR	2648327	Symbol	result		2648117						
ANR	2648328	Symbol	EINVAL		2648117						
ANR	2648329	Symbol	path		2648117						
ANR	2648330	Symbol	fscanf		2648117						
ANR	2648331	Symbol	file		2648117						
ANR	2648332	Symbol	& port		2648117						
ANR	2648333	Symbol	port		2648117						
ANR	2648334	Symbol	host		2648117						
ANR	2648335	Symbol	client		2648117						
ANR	2648336	Symbol	path . Value		2648117						
ANR	2648337	Symbol	fields		2648117						
ANR	2648338	Symbol	safe_fopen_wrapper_follow		2648117						
ANR	2648339	Symbol	getenv		2648117						
ANR	2648340	Function	chirp_get_one_file	125:0:3595:4393							
ANR	2648341	FunctionDef	"chirp_get_one_file (char * remote , char * local)"		2648340	0					
ANR	2648342	CompoundStatement		126:46:3645:4393	2648340	0					
ANR	2648343	IdentifierDeclStatement	struct chirp_client * client = 0 ;	127:1:3648:3679	2648340	0	True				
ANR	2648344	IdentifierDecl	* client = 0		2648340	0					
ANR	2648345	IdentifierDeclType	struct chirp_client *		2648340	0					
ANR	2648346	Identifier	client		2648340	1					
ANR	2648347	AssignmentExpression	* client = 0		2648340	2		=			
ANR	2648348	Identifier	client		2648340	0					
ANR	2648349	PrimaryExpression	0		2648340	1					
ANR	2648350	ExpressionStatement	CONNECT_STARTER ( client )	129:1:3683:3706	2648340	1	True				
ANR	2648351	CallExpression	CONNECT_STARTER ( client )		2648340	0					
ANR	2648352	Callee	CONNECT_STARTER		2648340	0					
ANR	2648353	Identifier	CONNECT_STARTER		2648340	0					
ANR	2648354	ArgumentList	client		2648340	1					
ANR	2648355	Argument	client		2648340	0					
ANR	2648356	Identifier	client		2648340	0					
ANR	2648357	IdentifierDeclStatement	char * buf = NULL ;	131:1:3711:3727	2648340	2	True				
ANR	2648358	IdentifierDecl	* buf = NULL		2648340	0					
ANR	2648359	IdentifierDeclType	char *		2648340	0					
ANR	2648360	Identifier	buf		2648340	1					
ANR	2648361	AssignmentExpression	* buf = NULL		2648340	2		=			
ANR	2648362	Identifier	NULL		2648340	0					
ANR	2648363	Identifier	NULL		2648340	1					
ANR	2648364	IdentifierDeclStatement	"int num_read = chirp_client_getfile_buffer ( client , remote , & buf ) ;"	133:1:3732:3798	2648340	3	True				
ANR	2648365	IdentifierDecl	"num_read = chirp_client_getfile_buffer ( client , remote , & buf )"		2648340	0					
ANR	2648366	IdentifierDeclType	int		2648340	0					
ANR	2648367	Identifier	num_read		2648340	1					
ANR	2648368	AssignmentExpression	"num_read = chirp_client_getfile_buffer ( client , remote , & buf )"		2648340	2		=			
ANR	2648369	Identifier	num_read		2648340	0					
ANR	2648370	CallExpression	"chirp_client_getfile_buffer ( client , remote , & buf )"		2648340	1					
ANR	2648371	Callee	chirp_client_getfile_buffer		2648340	0					
ANR	2648372	Identifier	chirp_client_getfile_buffer		2648340	0					
ANR	2648373	ArgumentList	client		2648340	1					
ANR	2648374	Argument	client		2648340	0					
ANR	2648375	Identifier	client		2648340	0					
ANR	2648376	Argument	remote		2648340	1					
ANR	2648377	Identifier	remote		2648340	0					
ANR	2648378	Argument	& buf		2648340	2					
ANR	2648379	UnaryOperationExpression	& buf		2648340	0					
ANR	2648380	UnaryOperator	&		2648340	0					
ANR	2648381	Identifier	buf		2648340	1					
ANR	2648382	IfStatement	if ( num_read < 0 )		2648340	4					
ANR	2648383	Condition	num_read < 0	134:5:3805:3816	2648340	0	True				
ANR	2648384	RelationalExpression	num_read < 0		2648340	0		<			
ANR	2648385	Identifier	num_read		2648340	0					
ANR	2648386	PrimaryExpression	0		2648340	1					
ANR	2648387	CompoundStatement		9:19:173:173	2648340	1					
ANR	2648388	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , - 1 )"	135:2:3823:3856	2648340	0	True				
ANR	2648389	CallExpression	"DISCONNECT_AND_RETURN ( client , - 1 )"		2648340	0					
ANR	2648390	Callee	DISCONNECT_AND_RETURN		2648340	0					
ANR	2648391	Identifier	DISCONNECT_AND_RETURN		2648340	0					
ANR	2648392	ArgumentList	client		2648340	1					
ANR	2648393	Argument	client		2648340	0					
ANR	2648394	Identifier	client		2648340	0					
ANR	2648395	Argument	- 1		2648340	1					
ANR	2648396	UnaryOperationExpression	- 1		2648340	0					
ANR	2648397	UnaryOperator	-		2648340	0					
ANR	2648398	PrimaryExpression	1		2648340	1					
ANR	2648399	IdentifierDeclStatement	FILE * wfd ;	138:1:3864:3873	2648340	5	True				
ANR	2648400	IdentifierDecl	* wfd		2648340	0					
ANR	2648401	IdentifierDeclType	FILE *		2648340	0					
ANR	2648402	Identifier	wfd		2648340	1					
ANR	2648403	IfStatement	"if ( strcmp ( local , ""-"" ) == 0 )"		2648340	6					
ANR	2648404	Condition	"strcmp ( local , ""-"" ) == 0"	139:5:3880:3902	2648340	0	True				
ANR	2648405	EqualityExpression	"strcmp ( local , ""-"" ) == 0"		2648340	0		==			
ANR	2648406	CallExpression	"strcmp ( local , ""-"" )"		2648340	0					
ANR	2648407	Callee	strcmp		2648340	0					
ANR	2648408	Identifier	strcmp		2648340	0					
ANR	2648409	ArgumentList	local		2648340	1					
ANR	2648410	Argument	local		2648340	0					
ANR	2648411	Identifier	local		2648340	0					
ANR	2648412	Argument	"""-"""		2648340	1					
ANR	2648413	PrimaryExpression	"""-"""		2648340	0					
ANR	2648414	PrimaryExpression	0		2648340	1					
ANR	2648415	CompoundStatement		14:30:259:259	2648340	1					
ANR	2648416	ExpressionStatement	wfd = stdout	140:2:3909:3921	2648340	0	True				
ANR	2648417	AssignmentExpression	wfd = stdout		2648340	0		=			
ANR	2648418	Identifier	wfd		2648340	0					
ANR	2648419	Identifier	stdout		2648340	1					
ANR	2648420	ElseStatement	else		2648340	0					
ANR	2648421	CompoundStatement		16:8:285:285	2648340	0					
ANR	2648422	Statement	wfd	142:2:3935:3937	2648340	0	True				
ANR	2648423	Statement	=	142:6:3939:3939	2648340	1	True				
ANR	2648424	Statement	::	142:8:3941:3942	2648340	2	True				
ANR	2648425	ExpressionStatement	"safe_fopen_wrapper_follow ( local , ""wb+"" )"	142:10:3943:3982	2648340	3	True				
ANR	2648426	CallExpression	"safe_fopen_wrapper_follow ( local , ""wb+"" )"		2648340	0					
ANR	2648427	Callee	safe_fopen_wrapper_follow		2648340	0					
ANR	2648428	Identifier	safe_fopen_wrapper_follow		2648340	0					
ANR	2648429	ArgumentList	local		2648340	1					
ANR	2648430	Argument	local		2648340	0					
ANR	2648431	Identifier	local		2648340	0					
ANR	2648432	Argument	"""wb+"""		2648340	1					
ANR	2648433	PrimaryExpression	"""wb+"""		2648340	0					
ANR	2648434	IfStatement	if ( wfd == NULL )		2648340	7					
ANR	2648435	Condition	wfd == NULL	145:5:3993:4003	2648340	0	True				
ANR	2648436	EqualityExpression	wfd == NULL		2648340	0		==			
ANR	2648437	Identifier	wfd		2648340	0					
ANR	2648438	Identifier	NULL		2648340	1					
ANR	2648439	CompoundStatement		20:18:360:360	2648340	1					
ANR	2648440	ExpressionStatement	"fprintf ( stderr , ""Can't open local file %s\\n"" , local )"	146:2:4010:4062	2648340	0	True				
ANR	2648441	CallExpression	"fprintf ( stderr , ""Can't open local file %s\\n"" , local )"		2648340	0					
ANR	2648442	Callee	fprintf		2648340	0					
ANR	2648443	Identifier	fprintf		2648340	0					
ANR	2648444	ArgumentList	stderr		2648340	1					
ANR	2648445	Argument	stderr		2648340	0					
ANR	2648446	Identifier	stderr		2648340	0					
ANR	2648447	Argument	"""Can't open local file %s\\n"""		2648340	1					
ANR	2648448	PrimaryExpression	"""Can't open local file %s\\n"""		2648340	0					
ANR	2648449	Argument	local		2648340	2					
ANR	2648450	Identifier	local		2648340	0					
ANR	2648451	ExpressionStatement	free ( buf )	147:2:4066:4075	2648340	1	True				
ANR	2648452	CallExpression	free ( buf )		2648340	0					
ANR	2648453	Callee	free		2648340	0					
ANR	2648454	Identifier	free		2648340	0					
ANR	2648455	ArgumentList	buf		2648340	1					
ANR	2648456	Argument	buf		2648340	0					
ANR	2648457	Identifier	buf		2648340	0					
ANR	2648458	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , - 1 )"	148:2:4079:4112	2648340	2	True				
ANR	2648459	CallExpression	"DISCONNECT_AND_RETURN ( client , - 1 )"		2648340	0					
ANR	2648460	Callee	DISCONNECT_AND_RETURN		2648340	0					
ANR	2648461	Identifier	DISCONNECT_AND_RETURN		2648340	0					
ANR	2648462	ArgumentList	client		2648340	1					
ANR	2648463	Argument	client		2648340	0					
ANR	2648464	Identifier	client		2648340	0					
ANR	2648465	Argument	- 1		2648340	1					
ANR	2648466	UnaryOperationExpression	- 1		2648340	0					
ANR	2648467	UnaryOperator	-		2648340	0					
ANR	2648468	PrimaryExpression	1		2648340	1					
ANR	2648469	Statement	int	152:1:4122:4124	2648340	8	True				
ANR	2648470	Statement	num_written	152:5:4126:4136	2648340	9	True				
ANR	2648471	Statement	=	152:17:4138:4138	2648340	10	True				
ANR	2648472	Statement	::	152:19:4140:4141	2648340	11	True				
ANR	2648473	ExpressionStatement	"fwrite ( buf , 1 , num_read , wfd )"	152:21:4142:4171	2648340	12	True				
ANR	2648474	CallExpression	"fwrite ( buf , 1 , num_read , wfd )"		2648340	0					
ANR	2648475	Callee	fwrite		2648340	0					
ANR	2648476	Identifier	fwrite		2648340	0					
ANR	2648477	ArgumentList	buf		2648340	1					
ANR	2648478	Argument	buf		2648340	0					
ANR	2648479	Identifier	buf		2648340	0					
ANR	2648480	Argument	1		2648340	1					
ANR	2648481	PrimaryExpression	1		2648340	0					
ANR	2648482	Argument	num_read		2648340	2					
ANR	2648483	Identifier	num_read		2648340	0					
ANR	2648484	Argument	wfd		2648340	3					
ANR	2648485	Identifier	wfd		2648340	0					
ANR	2648486	IfStatement	if ( num_written != num_read )		2648340	13					
ANR	2648487	Condition	num_written != num_read	153:5:4178:4200	2648340	0	True				
ANR	2648488	EqualityExpression	num_written != num_read		2648340	0		!=			
ANR	2648489	Identifier	num_written		2648340	0					
ANR	2648490	Identifier	num_read		2648340	1					
ANR	2648491	CompoundStatement		28:30:557:557	2648340	1					
ANR	2648492	ExpressionStatement	"fprintf ( stderr , ""local write error on %s\\n"" , local )"	154:2:4207:4258	2648340	0	True				
ANR	2648493	CallExpression	"fprintf ( stderr , ""local write error on %s\\n"" , local )"		2648340	0					
ANR	2648494	Callee	fprintf		2648340	0					
ANR	2648495	Identifier	fprintf		2648340	0					
ANR	2648496	ArgumentList	stderr		2648340	1					
ANR	2648497	Argument	stderr		2648340	0					
ANR	2648498	Identifier	stderr		2648340	0					
ANR	2648499	Argument	"""local write error on %s\\n"""		2648340	1					
ANR	2648500	PrimaryExpression	"""local write error on %s\\n"""		2648340	0					
ANR	2648501	Argument	local		2648340	2					
ANR	2648502	Identifier	local		2648340	0					
ANR	2648503	Statement	::	155:2:4262:4263	2648340	1	True				
ANR	2648504	ExpressionStatement	fclose ( wfd )	155:4:4264:4275	2648340	2	True				
ANR	2648505	CallExpression	fclose ( wfd )		2648340	0					
ANR	2648506	Callee	fclose		2648340	0					
ANR	2648507	Identifier	fclose		2648340	0					
ANR	2648508	ArgumentList	wfd		2648340	1					
ANR	2648509	Argument	wfd		2648340	0					
ANR	2648510	Identifier	wfd		2648340	0					
ANR	2648511	ExpressionStatement	free ( buf )	156:2:4279:4288	2648340	3	True				
ANR	2648512	CallExpression	free ( buf )		2648340	0					
ANR	2648513	Callee	free		2648340	0					
ANR	2648514	Identifier	free		2648340	0					
ANR	2648515	ArgumentList	buf		2648340	1					
ANR	2648516	Argument	buf		2648340	0					
ANR	2648517	Identifier	buf		2648340	0					
ANR	2648518	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , - 1 )"	157:2:4292:4325	2648340	4	True				
ANR	2648519	CallExpression	"DISCONNECT_AND_RETURN ( client , - 1 )"		2648340	0					
ANR	2648520	Callee	DISCONNECT_AND_RETURN		2648340	0					
ANR	2648521	Identifier	DISCONNECT_AND_RETURN		2648340	0					
ANR	2648522	ArgumentList	client		2648340	1					
ANR	2648523	Argument	client		2648340	0					
ANR	2648524	Identifier	client		2648340	0					
ANR	2648525	Argument	- 1		2648340	1					
ANR	2648526	UnaryOperationExpression	- 1		2648340	0					
ANR	2648527	UnaryOperator	-		2648340	0					
ANR	2648528	PrimaryExpression	1		2648340	1					
ANR	2648529	ExpressionStatement	fclose ( wfd )	160:1:4333:4344	2648340	14	True				
ANR	2648530	CallExpression	fclose ( wfd )		2648340	0					
ANR	2648531	Callee	fclose		2648340	0					
ANR	2648532	Identifier	fclose		2648340	0					
ANR	2648533	ArgumentList	wfd		2648340	1					
ANR	2648534	Argument	wfd		2648340	0					
ANR	2648535	Identifier	wfd		2648340	0					
ANR	2648536	ExpressionStatement	free ( buf )	161:1:4347:4356	2648340	15	True				
ANR	2648537	CallExpression	free ( buf )		2648340	0					
ANR	2648538	Callee	free		2648340	0					
ANR	2648539	Identifier	free		2648340	0					
ANR	2648540	ArgumentList	buf		2648340	1					
ANR	2648541	Argument	buf		2648340	0					
ANR	2648542	Identifier	buf		2648340	0					
ANR	2648543	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , 0 )"	162:1:4359:4391	2648340	16	True				
ANR	2648544	CallExpression	"DISCONNECT_AND_RETURN ( client , 0 )"		2648340	0					
ANR	2648545	Callee	DISCONNECT_AND_RETURN		2648340	0					
ANR	2648546	Identifier	DISCONNECT_AND_RETURN		2648340	0					
ANR	2648547	ArgumentList	client		2648340	1					
ANR	2648548	Argument	client		2648340	0					
ANR	2648549	Identifier	client		2648340	0					
ANR	2648550	Argument	0		2648340	1					
ANR	2648551	PrimaryExpression	0		2648340	0					
ANR	2648552	ReturnType	int		2648340	1					
ANR	2648553	Identifier	chirp_get_one_file		2648340	2					
ANR	2648554	ParameterList	"char * remote , char * local"		2648340	3					
ANR	2648555	Parameter	char * remote	126:19:3618:3629	2648340	0	True				
ANR	2648556	ParameterType	char *		2648340	0					
ANR	2648557	Identifier	remote		2648340	1					
ANR	2648558	Parameter	char * local	126:33:3632:3642	2648340	1	True				
ANR	2648559	ParameterType	char *		2648340	0					
ANR	2648560	Identifier	local		2648340	1					
ANR	2648561	CFGEntryNode	ENTRY		2648340		True				
ANR	2648562	CFGExitNode	EXIT		2648340		True				
ANR	2648563	Symbol	chirp_client_getfile_buffer		2648340						
ANR	2648564	Symbol	strcmp		2648340						
ANR	2648565	Symbol	NULL		2648340						
ANR	2648566	Symbol	stdout		2648340						
ANR	2648567	Symbol	num_read		2648340						
ANR	2648568	Symbol	num_written		2648340						
ANR	2648569	Symbol	remote		2648340						
ANR	2648570	Symbol	stderr		2648340						
ANR	2648571	Symbol	local		2648340						
ANR	2648572	Symbol	buf		2648340						
ANR	2648573	Symbol	wfd		2648340						
ANR	2648574	Symbol	client		2648340						
ANR	2648575	Symbol	& buf		2648340						
ANR	2648576	Function	chirp_put_one_file	167:0:4489:5775							
ANR	2648577	FunctionDef	"chirp_put_one_file (char * local , char * remote , char * mode , int perm)"		2648576	0					
ANR	2648578	CompoundStatement		168:68:4561:5775	2648576	0					
ANR	2648579	IdentifierDeclStatement	struct chirp_client * client ;	169:1:4564:4591	2648576	0	True				
ANR	2648580	IdentifierDecl	* client		2648576	0					
ANR	2648581	IdentifierDeclType	struct chirp_client *		2648576	0					
ANR	2648582	Identifier	client		2648576	1					
ANR	2648583	ExpressionStatement	CONNECT_STARTER ( client )	173:1:4705:4728	2648576	1	True				
ANR	2648584	CallExpression	CONNECT_STARTER ( client )		2648576	0					
ANR	2648585	Callee	CONNECT_STARTER		2648576	0					
ANR	2648586	Identifier	CONNECT_STARTER		2648576	0					
ANR	2648587	ArgumentList	client		2648576	1					
ANR	2648588	Argument	client		2648576	0					
ANR	2648589	Identifier	client		2648576	0					
ANR	2648590	IdentifierDeclStatement	FILE * rfd ;	175:1:4732:4741	2648576	2	True				
ANR	2648591	IdentifierDecl	* rfd		2648576	0					
ANR	2648592	IdentifierDeclType	FILE *		2648576	0					
ANR	2648593	Identifier	rfd		2648576	1					
ANR	2648594	IfStatement	"if ( strcmp ( local , ""-"" ) == 0 )"		2648576	3					
ANR	2648595	Condition	"strcmp ( local , ""-"" ) == 0"	176:5:4748:4770	2648576	0	True				
ANR	2648596	EqualityExpression	"strcmp ( local , ""-"" ) == 0"		2648576	0		==			
ANR	2648597	CallExpression	"strcmp ( local , ""-"" )"		2648576	0					
ANR	2648598	Callee	strcmp		2648576	0					
ANR	2648599	Identifier	strcmp		2648576	0					
ANR	2648600	ArgumentList	local		2648576	1					
ANR	2648601	Argument	local		2648576	0					
ANR	2648602	Identifier	local		2648576	0					
ANR	2648603	Argument	"""-"""		2648576	1					
ANR	2648604	PrimaryExpression	"""-"""		2648576	0					
ANR	2648605	PrimaryExpression	0		2648576	1					
ANR	2648606	CompoundStatement		9:30:211:211	2648576	1					
ANR	2648607	ExpressionStatement	rfd = stdin	177:2:4777:4788	2648576	0	True				
ANR	2648608	AssignmentExpression	rfd = stdin		2648576	0		=			
ANR	2648609	Identifier	rfd		2648576	0					
ANR	2648610	Identifier	stdin		2648576	1					
ANR	2648611	ElseStatement	else		2648576	0					
ANR	2648612	CompoundStatement		11:8:236:236	2648576	0					
ANR	2648613	Statement	rfd	179:2:4802:4804	2648576	0	True				
ANR	2648614	Statement	=	179:6:4806:4806	2648576	1	True				
ANR	2648615	Statement	::	179:8:4808:4809	2648576	2	True				
ANR	2648616	ExpressionStatement	"safe_fopen_wrapper_follow ( local , ""rb"" )"	179:10:4810:4848	2648576	3	True				
ANR	2648617	CallExpression	"safe_fopen_wrapper_follow ( local , ""rb"" )"		2648576	0					
ANR	2648618	Callee	safe_fopen_wrapper_follow		2648576	0					
ANR	2648619	Identifier	safe_fopen_wrapper_follow		2648576	0					
ANR	2648620	ArgumentList	local		2648576	1					
ANR	2648621	Argument	local		2648576	0					
ANR	2648622	Identifier	local		2648576	0					
ANR	2648623	Argument	"""rb"""		2648576	1					
ANR	2648624	PrimaryExpression	"""rb"""		2648576	0					
ANR	2648625	IfStatement	if ( rfd == NULL )		2648576	4					
ANR	2648626	Condition	rfd == NULL	182:5:4859:4869	2648576	0	True				
ANR	2648627	EqualityExpression	rfd == NULL		2648576	0		==			
ANR	2648628	Identifier	rfd		2648576	0					
ANR	2648629	Identifier	NULL		2648576	1					
ANR	2648630	CompoundStatement		15:18:310:310	2648576	1					
ANR	2648631	ExpressionStatement	"fprintf ( stderr , ""Can't open local file %s\\n"" , local )"	183:2:4876:4928	2648576	0	True				
ANR	2648632	CallExpression	"fprintf ( stderr , ""Can't open local file %s\\n"" , local )"		2648576	0					
ANR	2648633	Callee	fprintf		2648576	0					
ANR	2648634	Identifier	fprintf		2648576	0					
ANR	2648635	ArgumentList	stderr		2648576	1					
ANR	2648636	Argument	stderr		2648576	0					
ANR	2648637	Identifier	stderr		2648576	0					
ANR	2648638	Argument	"""Can't open local file %s\\n"""		2648576	1					
ANR	2648639	PrimaryExpression	"""Can't open local file %s\\n"""		2648576	0					
ANR	2648640	Argument	local		2648576	2					
ANR	2648641	Identifier	local		2648576	0					
ANR	2648642	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , - 1 )"	184:2:4932:4965	2648576	1	True				
ANR	2648643	CallExpression	"DISCONNECT_AND_RETURN ( client , - 1 )"		2648576	0					
ANR	2648644	Callee	DISCONNECT_AND_RETURN		2648576	0					
ANR	2648645	Identifier	DISCONNECT_AND_RETURN		2648576	0					
ANR	2648646	ArgumentList	client		2648576	1					
ANR	2648647	Argument	client		2648576	0					
ANR	2648648	Identifier	client		2648576	0					
ANR	2648649	Argument	- 1		2648576	1					
ANR	2648650	UnaryOperationExpression	- 1		2648576	0					
ANR	2648651	UnaryOperator	-		2648576	0					
ANR	2648652	PrimaryExpression	1		2648576	1					
ANR	2648653	IdentifierDeclStatement	"int wfd = chirp_client_open ( client , remote , mode , perm ) ;"	187:1:4972:5027	2648576	5	True				
ANR	2648654	IdentifierDecl	"wfd = chirp_client_open ( client , remote , mode , perm )"		2648576	0					
ANR	2648655	IdentifierDeclType	int		2648576	0					
ANR	2648656	Identifier	wfd		2648576	1					
ANR	2648657	AssignmentExpression	"wfd = chirp_client_open ( client , remote , mode , perm )"		2648576	2		=			
ANR	2648658	Identifier	wfd		2648576	0					
ANR	2648659	CallExpression	"chirp_client_open ( client , remote , mode , perm )"		2648576	1					
ANR	2648660	Callee	chirp_client_open		2648576	0					
ANR	2648661	Identifier	chirp_client_open		2648576	0					
ANR	2648662	ArgumentList	client		2648576	1					
ANR	2648663	Argument	client		2648576	0					
ANR	2648664	Identifier	client		2648576	0					
ANR	2648665	Argument	remote		2648576	1					
ANR	2648666	Identifier	remote		2648576	0					
ANR	2648667	Argument	mode		2648576	2					
ANR	2648668	Identifier	mode		2648576	0					
ANR	2648669	Argument	perm		2648576	3					
ANR	2648670	Identifier	perm		2648576	0					
ANR	2648671	IfStatement	if ( wfd < 0 )		2648576	6					
ANR	2648672	Condition	wfd < 0	188:5:5034:5040	2648576	0	True				
ANR	2648673	RelationalExpression	wfd < 0		2648576	0		<			
ANR	2648674	Identifier	wfd		2648576	0					
ANR	2648675	PrimaryExpression	0		2648576	1					
ANR	2648676	CompoundStatement		21:14:481:481	2648576	1					
ANR	2648677	Statement	::	189:2:5047:5048	2648576	0	True				
ANR	2648678	ExpressionStatement	fclose ( rfd )	189:4:5049:5060	2648576	1	True				
ANR	2648679	CallExpression	fclose ( rfd )		2648576	0					
ANR	2648680	Callee	fclose		2648576	0					
ANR	2648681	Identifier	fclose		2648576	0					
ANR	2648682	ArgumentList	rfd		2648576	1					
ANR	2648683	Argument	rfd		2648576	0					
ANR	2648684	Identifier	rfd		2648576	0					
ANR	2648685	ExpressionStatement	"fprintf ( stderr , ""Can't chirp_client_open %s:%d\\n"" , remote , wfd )"	190:2:5064:5127	2648576	2	True				
ANR	2648686	CallExpression	"fprintf ( stderr , ""Can't chirp_client_open %s:%d\\n"" , remote , wfd )"		2648576	0					
ANR	2648687	Callee	fprintf		2648576	0					
ANR	2648688	Identifier	fprintf		2648576	0					
ANR	2648689	ArgumentList	stderr		2648576	1					
ANR	2648690	Argument	stderr		2648576	0					
ANR	2648691	Identifier	stderr		2648576	0					
ANR	2648692	Argument	"""Can't chirp_client_open %s:%d\\n"""		2648576	1					
ANR	2648693	PrimaryExpression	"""Can't chirp_client_open %s:%d\\n"""		2648576	0					
ANR	2648694	Argument	remote		2648576	2					
ANR	2648695	Identifier	remote		2648576	0					
ANR	2648696	Argument	wfd		2648576	3					
ANR	2648697	Identifier	wfd		2648576	0					
ANR	2648698	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , - 1 )"	191:2:5131:5164	2648576	3	True				
ANR	2648699	CallExpression	"DISCONNECT_AND_RETURN ( client , - 1 )"		2648576	0					
ANR	2648700	Callee	DISCONNECT_AND_RETURN		2648576	0					
ANR	2648701	Identifier	DISCONNECT_AND_RETURN		2648576	0					
ANR	2648702	ArgumentList	client		2648576	1					
ANR	2648703	Argument	client		2648576	0					
ANR	2648704	Identifier	client		2648576	0					
ANR	2648705	Argument	- 1		2648576	1					
ANR	2648706	UnaryOperationExpression	- 1		2648576	0					
ANR	2648707	UnaryOperator	-		2648576	0					
ANR	2648708	PrimaryExpression	1		2648576	1					
ANR	2648709	IdentifierDeclStatement	char buf [ 8192 ] ;	194:1:5171:5185	2648576	7	True				
ANR	2648710	IdentifierDecl	buf [ 8192 ]		2648576	0					
ANR	2648711	IdentifierDeclType	char [ 8192 ]		2648576	0					
ANR	2648712	Identifier	buf		2648576	1					
ANR	2648713	PrimaryExpression	8192		2648576	2					
ANR	2648714	IdentifierDeclStatement	int num_read = 0 ;	196:1:5189:5205	2648576	8	True				
ANR	2648715	IdentifierDecl	num_read = 0		2648576	0					
ANR	2648716	IdentifierDeclType	int		2648576	0					
ANR	2648717	Identifier	num_read		2648576	1					
ANR	2648718	AssignmentExpression	num_read = 0		2648576	2		=			
ANR	2648719	Identifier	num_read		2648576	0					
ANR	2648720	PrimaryExpression	0		2648576	1					
ANR	2648721	DoStatement	do		2648576	9					
ANR	2648722	CompoundStatement		43:2:889:953	2648576	0					
ANR	2648723	Statement	num_read	198:2:5215:5222	2648576	0	True				
ANR	2648724	Statement	=	198:11:5224:5224	2648576	1	True				
ANR	2648725	Statement	::	198:13:5226:5227	2648576	2	True				
ANR	2648726	ExpressionStatement	"fread ( buf , 1 , 8192 , rfd )"	198:15:5228:5252	2648576	3	True				
ANR	2648727	CallExpression	"fread ( buf , 1 , 8192 , rfd )"		2648576	0					
ANR	2648728	Callee	fread		2648576	0					
ANR	2648729	Identifier	fread		2648576	0					
ANR	2648730	ArgumentList	buf		2648576	1					
ANR	2648731	Argument	buf		2648576	0					
ANR	2648732	Identifier	buf		2648576	0					
ANR	2648733	Argument	1		2648576	1					
ANR	2648734	PrimaryExpression	1		2648576	0					
ANR	2648735	Argument	8192		2648576	2					
ANR	2648736	PrimaryExpression	8192		2648576	0					
ANR	2648737	Argument	rfd		2648576	3					
ANR	2648738	Identifier	rfd		2648576	0					
ANR	2648739	IfStatement	if ( num_read < 0 )		2648576	4					
ANR	2648740	Condition	num_read < 0	199:6:5260:5271	2648576	0	True				
ANR	2648741	RelationalExpression	num_read < 0		2648576	0		<			
ANR	2648742	Identifier	num_read		2648576	0					
ANR	2648743	PrimaryExpression	0		2648576	1					
ANR	2648744	CompoundStatement		32:20:712:712	2648576	1					
ANR	2648745	ExpressionStatement	fclose ( rfd )	200:3:5279:5290	2648576	0	True				
ANR	2648746	CallExpression	fclose ( rfd )		2648576	0					
ANR	2648747	Callee	fclose		2648576	0					
ANR	2648748	Identifier	fclose		2648576	0					
ANR	2648749	ArgumentList	rfd		2648576	1					
ANR	2648750	Argument	rfd		2648576	0					
ANR	2648751	Identifier	rfd		2648576	0					
ANR	2648752	ExpressionStatement	"fprintf ( stderr , ""local read error on %s\\n"" , local )"	201:3:5295:5345	2648576	1	True				
ANR	2648753	CallExpression	"fprintf ( stderr , ""local read error on %s\\n"" , local )"		2648576	0					
ANR	2648754	Callee	fprintf		2648576	0					
ANR	2648755	Identifier	fprintf		2648576	0					
ANR	2648756	ArgumentList	stderr		2648576	1					
ANR	2648757	Argument	stderr		2648576	0					
ANR	2648758	Identifier	stderr		2648576	0					
ANR	2648759	Argument	"""local read error on %s\\n"""		2648576	1					
ANR	2648760	PrimaryExpression	"""local read error on %s\\n"""		2648576	0					
ANR	2648761	Argument	local		2648576	2					
ANR	2648762	Identifier	local		2648576	0					
ANR	2648763	ExpressionStatement	"CLOSE_DISCONNECT_AND_RETURN ( client , wfd , - 1 )"	202:3:5350:5394	2648576	2	True				
ANR	2648764	CallExpression	"CLOSE_DISCONNECT_AND_RETURN ( client , wfd , - 1 )"		2648576	0					
ANR	2648765	Callee	CLOSE_DISCONNECT_AND_RETURN		2648576	0					
ANR	2648766	Identifier	CLOSE_DISCONNECT_AND_RETURN		2648576	0					
ANR	2648767	ArgumentList	client		2648576	1					
ANR	2648768	Argument	client		2648576	0					
ANR	2648769	Identifier	client		2648576	0					
ANR	2648770	Argument	wfd		2648576	1					
ANR	2648771	Identifier	wfd		2648576	0					
ANR	2648772	Argument	- 1		2648576	2					
ANR	2648773	UnaryOperationExpression	- 1		2648576	0					
ANR	2648774	UnaryOperator	-		2648576	0					
ANR	2648775	PrimaryExpression	1		2648576	1					
ANR	2648776	IfStatement	if ( num_read == 0 )		2648576	5					
ANR	2648777	Condition	num_read == 0	206:6:5417:5429	2648576	0	True				
ANR	2648778	EqualityExpression	num_read == 0		2648576	0		==			
ANR	2648779	Identifier	num_read		2648576	0					
ANR	2648780	PrimaryExpression	0		2648576	1					
ANR	2648781	CompoundStatement		39:21:870:870	2648576	1					
ANR	2648782	BreakStatement	break ;	207:3:5437:5442	2648576	0	True				
ANR	2648783	IdentifierDeclStatement	"int num_written = chirp_client_write ( client , wfd , buf , num_read ) ;"	210:2:5451:5515	2648576	6	True				
ANR	2648784	IdentifierDecl	"num_written = chirp_client_write ( client , wfd , buf , num_read )"		2648576	0					
ANR	2648785	IdentifierDeclType	int		2648576	0					
ANR	2648786	Identifier	num_written		2648576	1					
ANR	2648787	AssignmentExpression	"num_written = chirp_client_write ( client , wfd , buf , num_read )"		2648576	2		=			
ANR	2648788	Identifier	num_written		2648576	0					
ANR	2648789	CallExpression	"chirp_client_write ( client , wfd , buf , num_read )"		2648576	1					
ANR	2648790	Callee	chirp_client_write		2648576	0					
ANR	2648791	Identifier	chirp_client_write		2648576	0					
ANR	2648792	ArgumentList	client		2648576	1					
ANR	2648793	Argument	client		2648576	0					
ANR	2648794	Identifier	client		2648576	0					
ANR	2648795	Argument	wfd		2648576	1					
ANR	2648796	Identifier	wfd		2648576	0					
ANR	2648797	Argument	buf		2648576	2					
ANR	2648798	Identifier	buf		2648576	0					
ANR	2648799	Argument	num_read		2648576	3					
ANR	2648800	Identifier	num_read		2648576	0					
ANR	2648801	IfStatement	if ( num_written != num_read )		2648576	7					
ANR	2648802	Condition	num_written != num_read	211:6:5523:5545	2648576	0	True				
ANR	2648803	EqualityExpression	num_written != num_read		2648576	0		!=			
ANR	2648804	Identifier	num_written		2648576	0					
ANR	2648805	Identifier	num_read		2648576	1					
ANR	2648806	CompoundStatement		44:31:986:986	2648576	1					
ANR	2648807	ExpressionStatement	fclose ( rfd )	212:3:5553:5564	2648576	0	True				
ANR	2648808	CallExpression	fclose ( rfd )		2648576	0					
ANR	2648809	Callee	fclose		2648576	0					
ANR	2648810	Identifier	fclose		2648576	0					
ANR	2648811	ArgumentList	rfd		2648576	1					
ANR	2648812	Argument	rfd		2648576	0					
ANR	2648813	Identifier	rfd		2648576	0					
ANR	2648814	ExpressionStatement	"fprintf ( stderr , ""Couldn't chirp_write as much as we read\\n"" )"	213:3:5569:5629	2648576	1	True				
ANR	2648815	CallExpression	"fprintf ( stderr , ""Couldn't chirp_write as much as we read\\n"" )"		2648576	0					
ANR	2648816	Callee	fprintf		2648576	0					
ANR	2648817	Identifier	fprintf		2648576	0					
ANR	2648818	ArgumentList	stderr		2648576	1					
ANR	2648819	Argument	stderr		2648576	0					
ANR	2648820	Identifier	stderr		2648576	0					
ANR	2648821	Argument	"""Couldn't chirp_write as much as we read\\n"""		2648576	1					
ANR	2648822	PrimaryExpression	"""Couldn't chirp_write as much as we read\\n"""		2648576	0					
ANR	2648823	ExpressionStatement	"CLOSE_DISCONNECT_AND_RETURN ( client , wfd , - 1 )"	214:3:5634:5678	2648576	2	True				
ANR	2648824	CallExpression	"CLOSE_DISCONNECT_AND_RETURN ( client , wfd , - 1 )"		2648576	0					
ANR	2648825	Callee	CLOSE_DISCONNECT_AND_RETURN		2648576	0					
ANR	2648826	Identifier	CLOSE_DISCONNECT_AND_RETURN		2648576	0					
ANR	2648827	ArgumentList	client		2648576	1					
ANR	2648828	Argument	client		2648576	0					
ANR	2648829	Identifier	client		2648576	0					
ANR	2648830	Argument	wfd		2648576	1					
ANR	2648831	Identifier	wfd		2648576	0					
ANR	2648832	Argument	- 1		2648576	2					
ANR	2648833	UnaryOperationExpression	- 1		2648576	0					
ANR	2648834	UnaryOperator	-		2648576	0					
ANR	2648835	PrimaryExpression	1		2648576	1					
ANR	2648836	Condition	num_read > 0	217:10:5695:5706	2648576	1	True				
ANR	2648837	RelationalExpression	num_read > 0		2648576	0		>			
ANR	2648838	Identifier	num_read		2648576	0					
ANR	2648839	PrimaryExpression	0		2648576	1					
ANR	2648840	Statement	::	218:1:5711:5712	2648576	10	True				
ANR	2648841	ExpressionStatement	fclose ( rfd )	218:3:5713:5724	2648576	11	True				
ANR	2648842	CallExpression	fclose ( rfd )		2648576	0					
ANR	2648843	Callee	fclose		2648576	0					
ANR	2648844	Identifier	fclose		2648576	0					
ANR	2648845	ArgumentList	rfd		2648576	1					
ANR	2648846	Argument	rfd		2648576	0					
ANR	2648847	Identifier	rfd		2648576	0					
ANR	2648848	ExpressionStatement	"CLOSE_DISCONNECT_AND_RETURN ( client , wfd , 0 )"	220:1:5730:5773	2648576	12	True				
ANR	2648849	CallExpression	"CLOSE_DISCONNECT_AND_RETURN ( client , wfd , 0 )"		2648576	0					
ANR	2648850	Callee	CLOSE_DISCONNECT_AND_RETURN		2648576	0					
ANR	2648851	Identifier	CLOSE_DISCONNECT_AND_RETURN		2648576	0					
ANR	2648852	ArgumentList	client		2648576	1					
ANR	2648853	Argument	client		2648576	0					
ANR	2648854	Identifier	client		2648576	0					
ANR	2648855	Argument	wfd		2648576	1					
ANR	2648856	Identifier	wfd		2648576	0					
ANR	2648857	Argument	0		2648576	2					
ANR	2648858	PrimaryExpression	0		2648576	0					
ANR	2648859	ReturnType	int		2648576	1					
ANR	2648860	Identifier	chirp_put_one_file		2648576	2					
ANR	2648861	ParameterList	"char * local , char * remote , char * mode , int perm"		2648576	3					
ANR	2648862	Parameter	char * local	168:19:4512:4522	2648576	0	True				
ANR	2648863	ParameterType	char *		2648576	0					
ANR	2648864	Identifier	local		2648576	1					
ANR	2648865	Parameter	char * remote	168:32:4525:4536	2648576	1	True				
ANR	2648866	ParameterType	char *		2648576	0					
ANR	2648867	Identifier	remote		2648576	1					
ANR	2648868	Parameter	char * mode	168:46:4539:4548	2648576	2	True				
ANR	2648869	ParameterType	char *		2648576	0					
ANR	2648870	Identifier	mode		2648576	1					
ANR	2648871	Parameter	int perm	168:58:4551:4558	2648576	3	True				
ANR	2648872	ParameterType	int		2648576	0					
ANR	2648873	Identifier	perm		2648576	1					
ANR	2648874	CFGEntryNode	ENTRY		2648576		True				
ANR	2648875	CFGExitNode	EXIT		2648576		True				
ANR	2648876	Symbol	strcmp		2648576						
ANR	2648877	Symbol	stdin		2648576						
ANR	2648878	Symbol	NULL		2648576						
ANR	2648879	Symbol	perm		2648576						
ANR	2648880	Symbol	num_read		2648576						
ANR	2648881	Symbol	num_written		2648576						
ANR	2648882	Symbol	remote		2648576						
ANR	2648883	Symbol	stderr		2648576						
ANR	2648884	Symbol	local		2648576						
ANR	2648885	Symbol	mode		2648576						
ANR	2648886	Symbol	rfd		2648576						
ANR	2648887	Symbol	buf		2648576						
ANR	2648888	Symbol	wfd		2648576						
ANR	2648889	Symbol	chirp_client_write		2648576						
ANR	2648890	Symbol	client		2648576						
ANR	2648891	Symbol	chirp_client_open		2648576						
ANR	2648892	Function	chirp_put_one_file	224:0:5807:6900							
ANR	2648893	FunctionDef	"chirp_put_one_file (char * local , char * remote , int perm)"		2648892	0					
ANR	2648894	CompoundStatement		225:56:5867:6900	2648892	0					
ANR	2648895	IdentifierDeclStatement	struct chirp_client * client ;	226:1:5870:5897	2648892	0	True				
ANR	2648896	IdentifierDecl	* client		2648892	0					
ANR	2648897	IdentifierDeclType	struct chirp_client *		2648892	0					
ANR	2648898	Identifier	client		2648892	1					
ANR	2648899	ExpressionStatement	CONNECT_STARTER ( client )	228:1:5901:5924	2648892	1	True				
ANR	2648900	CallExpression	CONNECT_STARTER ( client )		2648892	0					
ANR	2648901	Callee	CONNECT_STARTER		2648892	0					
ANR	2648902	Identifier	CONNECT_STARTER		2648892	0					
ANR	2648903	ArgumentList	client		2648892	1					
ANR	2648904	Argument	client		2648892	0					
ANR	2648905	Identifier	client		2648892	0					
ANR	2648906	Statement	FILE	230:1:5928:5931	2648892	2	True				
ANR	2648907	Statement	*	230:6:5933:5933	2648892	3	True				
ANR	2648908	Statement	rfd	230:7:5934:5936	2648892	4	True				
ANR	2648909	Statement	=	230:11:5938:5938	2648892	5	True				
ANR	2648910	Statement	::	230:13:5940:5941	2648892	6	True				
ANR	2648911	ExpressionStatement	"safe_fopen_wrapper_follow ( local , ""rb"" )"	230:15:5942:5980	2648892	7	True				
ANR	2648912	CallExpression	"safe_fopen_wrapper_follow ( local , ""rb"" )"		2648892	0					
ANR	2648913	Callee	safe_fopen_wrapper_follow		2648892	0					
ANR	2648914	Identifier	safe_fopen_wrapper_follow		2648892	0					
ANR	2648915	ArgumentList	local		2648892	1					
ANR	2648916	Argument	local		2648892	0					
ANR	2648917	Identifier	local		2648892	0					
ANR	2648918	Argument	"""rb"""		2648892	1					
ANR	2648919	PrimaryExpression	"""rb"""		2648892	0					
ANR	2648920	IfStatement	if ( rfd == NULL )		2648892	8					
ANR	2648921	Condition	rfd == NULL	233:5:5989:5999	2648892	0	True				
ANR	2648922	EqualityExpression	rfd == NULL		2648892	0		==			
ANR	2648923	Identifier	rfd		2648892	0					
ANR	2648924	Identifier	NULL		2648892	1					
ANR	2648925	CompoundStatement		9:18:134:134	2648892	1					
ANR	2648926	ExpressionStatement	"fprintf ( stderr , ""Can't open local file %s\\n"" , local )"	234:2:6006:6058	2648892	0	True				
ANR	2648927	CallExpression	"fprintf ( stderr , ""Can't open local file %s\\n"" , local )"		2648892	0					
ANR	2648928	Callee	fprintf		2648892	0					
ANR	2648929	Identifier	fprintf		2648892	0					
ANR	2648930	ArgumentList	stderr		2648892	1					
ANR	2648931	Argument	stderr		2648892	0					
ANR	2648932	Identifier	stderr		2648892	0					
ANR	2648933	Argument	"""Can't open local file %s\\n"""		2648892	1					
ANR	2648934	PrimaryExpression	"""Can't open local file %s\\n"""		2648892	0					
ANR	2648935	Argument	local		2648892	2					
ANR	2648936	Identifier	local		2648892	0					
ANR	2648937	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , - 1 )"	235:2:6062:6095	2648892	1	True				
ANR	2648938	CallExpression	"DISCONNECT_AND_RETURN ( client , - 1 )"		2648892	0					
ANR	2648939	Callee	DISCONNECT_AND_RETURN		2648892	0					
ANR	2648940	Identifier	DISCONNECT_AND_RETURN		2648892	0					
ANR	2648941	ArgumentList	client		2648892	1					
ANR	2648942	Argument	client		2648892	0					
ANR	2648943	Identifier	client		2648892	0					
ANR	2648944	Argument	- 1		2648892	1					
ANR	2648945	UnaryOperationExpression	- 1		2648892	0					
ANR	2648946	UnaryOperator	-		2648892	0					
ANR	2648947	PrimaryExpression	1		2648892	1					
ANR	2648948	IdentifierDeclStatement	struct stat stat_buf ;	239:1:6142:6162	2648892	9	True				
ANR	2648949	IdentifierDecl	stat_buf		2648892	0					
ANR	2648950	IdentifierDeclType	struct stat		2648892	0					
ANR	2648951	Identifier	stat_buf		2648892	1					
ANR	2648952	ExpressionStatement	"stat ( local , & stat_buf )"	240:1:6165:6187	2648892	10	True				
ANR	2648953	CallExpression	"stat ( local , & stat_buf )"		2648892	0					
ANR	2648954	Callee	stat		2648892	0					
ANR	2648955	Identifier	stat		2648892	0					
ANR	2648956	ArgumentList	local		2648892	1					
ANR	2648957	Argument	local		2648892	0					
ANR	2648958	Identifier	local		2648892	0					
ANR	2648959	Argument	& stat_buf		2648892	1					
ANR	2648960	UnaryOperationExpression	& stat_buf		2648892	0					
ANR	2648961	UnaryOperator	&		2648892	0					
ANR	2648962	Identifier	stat_buf		2648892	1					
ANR	2648963	IdentifierDeclStatement	int size = stat_buf . st_size ;	241:1:6190:6217	2648892	11	True				
ANR	2648964	IdentifierDecl	size = stat_buf . st_size		2648892	0					
ANR	2648965	IdentifierDeclType	int		2648892	0					
ANR	2648966	Identifier	size		2648892	1					
ANR	2648967	AssignmentExpression	size = stat_buf . st_size		2648892	2		=			
ANR	2648968	Identifier	size		2648892	0					
ANR	2648969	MemberAccess	stat_buf . st_size		2648892	1					
ANR	2648970	Identifier	stat_buf		2648892	0					
ANR	2648971	Identifier	st_size		2648892	1					
ANR	2648972	IdentifierDeclStatement	char * buf = ( char * ) malloc ( size ) ;	242:1:6220:6251	2648892	12	True				
ANR	2648973	IdentifierDecl	* buf = ( char * ) malloc ( size )		2648892	0					
ANR	2648974	IdentifierDeclType	char *		2648892	0					
ANR	2648975	Identifier	buf		2648892	1					
ANR	2648976	AssignmentExpression	* buf = ( char * ) malloc ( size )		2648892	2		=			
ANR	2648977	Identifier	buf		2648892	0					
ANR	2648978	CastExpression	( char * ) malloc ( size )		2648892	1					
ANR	2648979	CastTarget	char *		2648892	0					
ANR	2648980	CallExpression	malloc ( size )		2648892	1					
ANR	2648981	Callee	malloc		2648892	0					
ANR	2648982	Identifier	malloc		2648892	0					
ANR	2648983	ArgumentList	size		2648892	1					
ANR	2648984	Argument	size		2648892	0					
ANR	2648985	Identifier	size		2648892	0					
ANR	2648986	IfStatement	if ( ! buf )		2648892	13					
ANR	2648987	Condition	! buf	243:6:6259:6263	2648892	0	True				
ANR	2648988	UnaryOperationExpression	! buf		2648892	0					
ANR	2648989	UnaryOperator	!		2648892	0					
ANR	2648990	Identifier	buf		2648892	1					
ANR	2648991	CompoundStatement		19:13:398:398	2648892	1					
ANR	2648992	ExpressionStatement	"fprintf ( stderr , ""Can't allocate %d bytes\\n"" , size )"	244:2:6270:6320	2648892	0	True				
ANR	2648993	CallExpression	"fprintf ( stderr , ""Can't allocate %d bytes\\n"" , size )"		2648892	0					
ANR	2648994	Callee	fprintf		2648892	0					
ANR	2648995	Identifier	fprintf		2648892	0					
ANR	2648996	ArgumentList	stderr		2648892	1					
ANR	2648997	Argument	stderr		2648892	0					
ANR	2648998	Identifier	stderr		2648892	0					
ANR	2648999	Argument	"""Can't allocate %d bytes\\n"""		2648892	1					
ANR	2649000	PrimaryExpression	"""Can't allocate %d bytes\\n"""		2648892	0					
ANR	2649001	Argument	size		2648892	2					
ANR	2649002	Identifier	size		2648892	0					
ANR	2649003	ExpressionStatement	fclose ( rfd )	245:2:6324:6335	2648892	1	True				
ANR	2649004	CallExpression	fclose ( rfd )		2648892	0					
ANR	2649005	Callee	fclose		2648892	0					
ANR	2649006	Identifier	fclose		2648892	0					
ANR	2649007	ArgumentList	rfd		2648892	1					
ANR	2649008	Argument	rfd		2648892	0					
ANR	2649009	Identifier	rfd		2648892	0					
ANR	2649010	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , - 1 )"	246:2:6339:6372	2648892	2	True				
ANR	2649011	CallExpression	"DISCONNECT_AND_RETURN ( client , - 1 )"		2648892	0					
ANR	2649012	Callee	DISCONNECT_AND_RETURN		2648892	0					
ANR	2649013	Identifier	DISCONNECT_AND_RETURN		2648892	0					
ANR	2649014	ArgumentList	client		2648892	1					
ANR	2649015	Argument	client		2648892	0					
ANR	2649016	Identifier	client		2648892	0					
ANR	2649017	Argument	- 1		2648892	1					
ANR	2649018	UnaryOperationExpression	- 1		2648892	0					
ANR	2649019	UnaryOperator	-		2648892	0					
ANR	2649020	PrimaryExpression	1		2648892	1					
ANR	2649021	Statement	int	249:1:6380:6382	2648892	14	True				
ANR	2649022	Statement	num_read	249:5:6384:6391	2648892	15	True				
ANR	2649023	Statement	=	249:14:6393:6393	2648892	16	True				
ANR	2649024	Statement	::	249:16:6395:6396	2648892	17	True				
ANR	2649025	ExpressionStatement	"fread ( buf , 1 , size , rfd )"	249:18:6397:6421	2648892	18	True				
ANR	2649026	CallExpression	"fread ( buf , 1 , size , rfd )"		2648892	0					
ANR	2649027	Callee	fread		2648892	0					
ANR	2649028	Identifier	fread		2648892	0					
ANR	2649029	ArgumentList	buf		2648892	1					
ANR	2649030	Argument	buf		2648892	0					
ANR	2649031	Identifier	buf		2648892	0					
ANR	2649032	Argument	1		2648892	1					
ANR	2649033	PrimaryExpression	1		2648892	0					
ANR	2649034	Argument	size		2648892	2					
ANR	2649035	Identifier	size		2648892	0					
ANR	2649036	Argument	rfd		2648892	3					
ANR	2649037	Identifier	rfd		2648892	0					
ANR	2649038	IfStatement	if ( num_read < 0 )		2648892	19					
ANR	2649039	Condition	num_read < 0	251:5:6430:6441	2648892	0	True				
ANR	2649040	RelationalExpression	num_read < 0		2648892	0		<			
ANR	2649041	Identifier	num_read		2648892	0					
ANR	2649042	PrimaryExpression	0		2648892	1					
ANR	2649043	CompoundStatement		27:19:576:576	2648892	1					
ANR	2649044	ExpressionStatement	fclose ( rfd )	252:2:6448:6459	2648892	0	True				
ANR	2649045	CallExpression	fclose ( rfd )		2648892	0					
ANR	2649046	Callee	fclose		2648892	0					
ANR	2649047	Identifier	fclose		2648892	0					
ANR	2649048	ArgumentList	rfd		2648892	1					
ANR	2649049	Argument	rfd		2648892	0					
ANR	2649050	Identifier	rfd		2648892	0					
ANR	2649051	ExpressionStatement	free ( buf )	253:2:6463:6472	2648892	1	True				
ANR	2649052	CallExpression	free ( buf )		2648892	0					
ANR	2649053	Callee	free		2648892	0					
ANR	2649054	Identifier	free		2648892	0					
ANR	2649055	ArgumentList	buf		2648892	1					
ANR	2649056	Argument	buf		2648892	0					
ANR	2649057	Identifier	buf		2648892	0					
ANR	2649058	ExpressionStatement	"fprintf ( stderr , ""Local read error on %s\\n"" , local )"	254:2:6476:6526	2648892	2	True				
ANR	2649059	CallExpression	"fprintf ( stderr , ""Local read error on %s\\n"" , local )"		2648892	0					
ANR	2649060	Callee	fprintf		2648892	0					
ANR	2649061	Identifier	fprintf		2648892	0					
ANR	2649062	ArgumentList	stderr		2648892	1					
ANR	2649063	Argument	stderr		2648892	0					
ANR	2649064	Identifier	stderr		2648892	0					
ANR	2649065	Argument	"""Local read error on %s\\n"""		2648892	1					
ANR	2649066	PrimaryExpression	"""Local read error on %s\\n"""		2648892	0					
ANR	2649067	Argument	local		2648892	2					
ANR	2649068	Identifier	local		2648892	0					
ANR	2649069	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , - 1 )"	255:2:6530:6563	2648892	3	True				
ANR	2649070	CallExpression	"DISCONNECT_AND_RETURN ( client , - 1 )"		2648892	0					
ANR	2649071	Callee	DISCONNECT_AND_RETURN		2648892	0					
ANR	2649072	Identifier	DISCONNECT_AND_RETURN		2648892	0					
ANR	2649073	ArgumentList	client		2648892	1					
ANR	2649074	Argument	client		2648892	0					
ANR	2649075	Identifier	client		2648892	0					
ANR	2649076	Argument	- 1		2648892	1					
ANR	2649077	UnaryOperationExpression	- 1		2648892	0					
ANR	2649078	UnaryOperator	-		2648892	0					
ANR	2649079	PrimaryExpression	1		2648892	1					
ANR	2649080	IdentifierDeclStatement	"int num_written = chirp_client_putfile_buffer ( client , remote , buf , perm , num_read ) ;"	259:1:6589:6671	2648892	20	True				
ANR	2649081	IdentifierDecl	"num_written = chirp_client_putfile_buffer ( client , remote , buf , perm , num_read )"		2648892	0					
ANR	2649082	IdentifierDeclType	int		2648892	0					
ANR	2649083	Identifier	num_written		2648892	1					
ANR	2649084	AssignmentExpression	"num_written = chirp_client_putfile_buffer ( client , remote , buf , perm , num_read )"		2648892	2		=			
ANR	2649085	Identifier	num_written		2648892	0					
ANR	2649086	CallExpression	"chirp_client_putfile_buffer ( client , remote , buf , perm , num_read )"		2648892	1					
ANR	2649087	Callee	chirp_client_putfile_buffer		2648892	0					
ANR	2649088	Identifier	chirp_client_putfile_buffer		2648892	0					
ANR	2649089	ArgumentList	client		2648892	1					
ANR	2649090	Argument	client		2648892	0					
ANR	2649091	Identifier	client		2648892	0					
ANR	2649092	Argument	remote		2648892	1					
ANR	2649093	Identifier	remote		2648892	0					
ANR	2649094	Argument	buf		2648892	2					
ANR	2649095	Identifier	buf		2648892	0					
ANR	2649096	Argument	perm		2648892	3					
ANR	2649097	Identifier	perm		2648892	0					
ANR	2649098	Argument	num_read		2648892	4					
ANR	2649099	Identifier	num_read		2648892	0					
ANR	2649100	IfStatement	if ( num_written != num_read )		2648892	21					
ANR	2649101	Condition	num_written != num_read	260:5:6678:6700	2648892	0	True				
ANR	2649102	EqualityExpression	num_written != num_read		2648892	0		!=			
ANR	2649103	Identifier	num_written		2648892	0					
ANR	2649104	Identifier	num_read		2648892	1					
ANR	2649105	CompoundStatement		36:30:835:835	2648892	1					
ANR	2649106	ExpressionStatement	fclose ( rfd )	261:2:6707:6718	2648892	0	True				
ANR	2649107	CallExpression	fclose ( rfd )		2648892	0					
ANR	2649108	Callee	fclose		2648892	0					
ANR	2649109	Identifier	fclose		2648892	0					
ANR	2649110	ArgumentList	rfd		2648892	1					
ANR	2649111	Argument	rfd		2648892	0					
ANR	2649112	Identifier	rfd		2648892	0					
ANR	2649113	ExpressionStatement	free ( buf )	262:2:6722:6731	2648892	1	True				
ANR	2649114	CallExpression	free ( buf )		2648892	0					
ANR	2649115	Callee	free		2648892	0					
ANR	2649116	Identifier	free		2648892	0					
ANR	2649117	ArgumentList	buf		2648892	1					
ANR	2649118	Argument	buf		2648892	0					
ANR	2649119	Identifier	buf		2648892	0					
ANR	2649120	ExpressionStatement	"fprintf ( stderr , ""Couldn't chirp_write as much as we read\\n"" )"	263:2:6735:6795	2648892	2	True				
ANR	2649121	CallExpression	"fprintf ( stderr , ""Couldn't chirp_write as much as we read\\n"" )"		2648892	0					
ANR	2649122	Callee	fprintf		2648892	0					
ANR	2649123	Identifier	fprintf		2648892	0					
ANR	2649124	ArgumentList	stderr		2648892	1					
ANR	2649125	Argument	stderr		2648892	0					
ANR	2649126	Identifier	stderr		2648892	0					
ANR	2649127	Argument	"""Couldn't chirp_write as much as we read\\n"""		2648892	1					
ANR	2649128	PrimaryExpression	"""Couldn't chirp_write as much as we read\\n"""		2648892	0					
ANR	2649129	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , - 1 )"	264:2:6799:6832	2648892	3	True				
ANR	2649130	CallExpression	"DISCONNECT_AND_RETURN ( client , - 1 )"		2648892	0					
ANR	2649131	Callee	DISCONNECT_AND_RETURN		2648892	0					
ANR	2649132	Identifier	DISCONNECT_AND_RETURN		2648892	0					
ANR	2649133	ArgumentList	client		2648892	1					
ANR	2649134	Argument	client		2648892	0					
ANR	2649135	Identifier	client		2648892	0					
ANR	2649136	Argument	- 1		2648892	1					
ANR	2649137	UnaryOperationExpression	- 1		2648892	0					
ANR	2649138	UnaryOperator	-		2648892	0					
ANR	2649139	PrimaryExpression	1		2648892	1					
ANR	2649140	ExpressionStatement	fclose ( rfd )	267:1:6840:6851	2648892	22	True				
ANR	2649141	CallExpression	fclose ( rfd )		2648892	0					
ANR	2649142	Callee	fclose		2648892	0					
ANR	2649143	Identifier	fclose		2648892	0					
ANR	2649144	ArgumentList	rfd		2648892	1					
ANR	2649145	Argument	rfd		2648892	0					
ANR	2649146	Identifier	rfd		2648892	0					
ANR	2649147	ExpressionStatement	free ( buf )	268:1:6854:6863	2648892	23	True				
ANR	2649148	CallExpression	free ( buf )		2648892	0					
ANR	2649149	Callee	free		2648892	0					
ANR	2649150	Identifier	free		2648892	0					
ANR	2649151	ArgumentList	buf		2648892	1					
ANR	2649152	Argument	buf		2648892	0					
ANR	2649153	Identifier	buf		2648892	0					
ANR	2649154	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , 0 )"	269:1:6866:6898	2648892	24	True				
ANR	2649155	CallExpression	"DISCONNECT_AND_RETURN ( client , 0 )"		2648892	0					
ANR	2649156	Callee	DISCONNECT_AND_RETURN		2648892	0					
ANR	2649157	Identifier	DISCONNECT_AND_RETURN		2648892	0					
ANR	2649158	ArgumentList	client		2648892	1					
ANR	2649159	Argument	client		2648892	0					
ANR	2649160	Identifier	client		2648892	0					
ANR	2649161	Argument	0		2648892	1					
ANR	2649162	PrimaryExpression	0		2648892	0					
ANR	2649163	ReturnType	int		2648892	1					
ANR	2649164	Identifier	chirp_put_one_file		2648892	2					
ANR	2649165	ParameterList	"char * local , char * remote , int perm"		2648892	3					
ANR	2649166	Parameter	char * local	225:19:5830:5840	2648892	0	True				
ANR	2649167	ParameterType	char *		2648892	0					
ANR	2649168	Identifier	local		2648892	1					
ANR	2649169	Parameter	char * remote	225:32:5843:5854	2648892	1	True				
ANR	2649170	ParameterType	char *		2648892	0					
ANR	2649171	Identifier	remote		2648892	1					
ANR	2649172	Parameter	int perm	225:46:5857:5864	2648892	2	True				
ANR	2649173	ParameterType	int		2648892	0					
ANR	2649174	Identifier	perm		2648892	1					
ANR	2649175	CFGEntryNode	ENTRY		2648892		True				
ANR	2649176	CFGExitNode	EXIT		2648892		True				
ANR	2649177	Symbol	malloc		2648892						
ANR	2649178	Symbol	NULL		2648892						
ANR	2649179	Symbol	perm		2648892						
ANR	2649180	Symbol	num_read		2648892						
ANR	2649181	Symbol	& stat_buf		2648892						
ANR	2649182	Symbol	stat_buf		2648892						
ANR	2649183	Symbol	num_written		2648892						
ANR	2649184	Symbol	chirp_client_putfile_buffer		2648892						
ANR	2649185	Symbol	remote		2648892						
ANR	2649186	Symbol	stderr		2648892						
ANR	2649187	Symbol	local		2648892						
ANR	2649188	Symbol	rfd		2648892						
ANR	2649189	Symbol	stat_buf . st_size		2648892						
ANR	2649190	Symbol	buf		2648892						
ANR	2649191	Symbol	size		2648892						
ANR	2649192	Symbol	client		2648892						
ANR	2649193	Function	chirp_fetch	278:0:7020:7198							
ANR	2649194	FunctionDef	"chirp_fetch (int argc , char * * argv)"		2649193	0					
ANR	2649195	CompoundStatement		278:39:7059:7198	2649193	0					
ANR	2649196	IfStatement	if ( argc != 4 )		2649193	0					
ANR	2649197	Condition	argc != 4	279:5:7066:7074	2649193	0	True				
ANR	2649198	EqualityExpression	argc != 4		2649193	0		!=			
ANR	2649199	Identifier	argc		2649193	0					
ANR	2649200	PrimaryExpression	4		2649193	1					
ANR	2649201	CompoundStatement		2:16:17:17	2649193	1					
ANR	2649202	ExpressionStatement	"printf ( ""condor_chirp fetch remote_file local_file\\n"" )"	280:2:7081:7134	2649193	0	True				
ANR	2649203	CallExpression	"printf ( ""condor_chirp fetch remote_file local_file\\n"" )"		2649193	0					
ANR	2649204	Callee	printf		2649193	0					
ANR	2649205	Identifier	printf		2649193	0					
ANR	2649206	ArgumentList	"""condor_chirp fetch remote_file local_file\\n"""		2649193	1					
ANR	2649207	Argument	"""condor_chirp fetch remote_file local_file\\n"""		2649193	0					
ANR	2649208	PrimaryExpression	"""condor_chirp fetch remote_file local_file\\n"""		2649193	0					
ANR	2649209	ReturnStatement	return - 1 ;	281:2:7138:7147	2649193	1	True				
ANR	2649210	UnaryOperationExpression	- 1		2649193	0					
ANR	2649211	UnaryOperator	-		2649193	0					
ANR	2649212	PrimaryExpression	1		2649193	1					
ANR	2649213	ReturnStatement	"return chirp_get_one_file ( argv [ 2 ] , argv [ 3 ] ) ;"	283:1:7153:7196	2649193	1	True				
ANR	2649214	CallExpression	"chirp_get_one_file ( argv [ 2 ] , argv [ 3 ] )"		2649193	0					
ANR	2649215	Callee	chirp_get_one_file		2649193	0					
ANR	2649216	Identifier	chirp_get_one_file		2649193	0					
ANR	2649217	ArgumentList	argv [ 2 ]		2649193	1					
ANR	2649218	Argument	argv [ 2 ]		2649193	0					
ANR	2649219	ArrayIndexing	argv [ 2 ]		2649193	0					
ANR	2649220	Identifier	argv		2649193	0					
ANR	2649221	PrimaryExpression	2		2649193	1					
ANR	2649222	Argument	argv [ 3 ]		2649193	1					
ANR	2649223	ArrayIndexing	argv [ 3 ]		2649193	0					
ANR	2649224	Identifier	argv		2649193	0					
ANR	2649225	PrimaryExpression	3		2649193	1					
ANR	2649226	ReturnType	int		2649193	1					
ANR	2649227	Identifier	chirp_fetch		2649193	2					
ANR	2649228	ParameterList	"int argc , char * * argv"		2649193	3					
ANR	2649229	Parameter	int argc	278:16:7036:7043	2649193	0	True				
ANR	2649230	ParameterType	int		2649193	0					
ANR	2649231	Identifier	argc		2649193	1					
ANR	2649232	Parameter	char * * argv	278:26:7046:7056	2649193	1	True				
ANR	2649233	ParameterType	char * *		2649193	0					
ANR	2649234	Identifier	argv		2649193	1					
ANR	2649235	CFGEntryNode	ENTRY		2649193		True				
ANR	2649236	CFGExitNode	EXIT		2649193		True				
ANR	2649237	Symbol	argc		2649193						
ANR	2649238	Symbol	chirp_get_one_file		2649193						
ANR	2649239	Symbol	* argv		2649193						
ANR	2649240	Symbol	argv		2649193						
ANR	2649241	Function	chirp_put	292:0:7314:8281							
ANR	2649242	FunctionDef	"chirp_put (int argc , char * * argv)"		2649241	0					
ANR	2649243	CompoundStatement		292:37:7351:8281	2649241	0					
ANR	2649244	IdentifierDeclStatement	int fileOffset = 2 ;	294:1:7355:7373	2649241	0	True				
ANR	2649245	IdentifierDecl	fileOffset = 2		2649241	0					
ANR	2649246	IdentifierDeclType	int		2649241	0					
ANR	2649247	Identifier	fileOffset		2649241	1					
ANR	2649248	AssignmentExpression	fileOffset = 2		2649241	2		=			
ANR	2649249	Identifier	fileOffset		2649241	0					
ANR	2649250	PrimaryExpression	2		2649241	1					
ANR	2649251	IdentifierDeclStatement	"char default_mode [ ] = ""cwt"" ;"	295:1:7376:7404	2649241	1	True				
ANR	2649252	IdentifierDecl	"default_mode [ ] = ""cwt"""		2649241	0					
ANR	2649253	IdentifierDeclType	char [ ]		2649241	0					
ANR	2649254	Identifier	default_mode		2649241	1					
ANR	2649255	AssignmentExpression	"default_mode [ ] = ""cwt"""		2649241	2		=			
ANR	2649256	Identifier	default_mode		2649241	0					
ANR	2649257	PrimaryExpression	"""cwt"""		2649241	1					
ANR	2649258	IdentifierDeclStatement	char * mode = default_mode ;	296:1:7407:7432	2649241	2	True				
ANR	2649259	IdentifierDecl	* mode = default_mode		2649241	0					
ANR	2649260	IdentifierDeclType	char *		2649241	0					
ANR	2649261	Identifier	mode		2649241	1					
ANR	2649262	AssignmentExpression	* mode = default_mode		2649241	2		=			
ANR	2649263	Identifier	default_mode		2649241	0					
ANR	2649264	Identifier	default_mode		2649241	1					
ANR	2649265	IdentifierDeclStatement	unsigned perm = 0777 ;	297:1:7435:7455	2649241	3	True				
ANR	2649266	IdentifierDecl	perm = 0777		2649241	0					
ANR	2649267	IdentifierDeclType	unsigned		2649241	0					
ANR	2649268	Identifier	perm		2649241	1					
ANR	2649269	AssignmentExpression	perm = 0777		2649241	2		=			
ANR	2649270	Identifier	perm		2649241	0					
ANR	2649271	PrimaryExpression	0777		2649241	1					
ANR	2649272	IdentifierDeclStatement	bool more = true ;	299:1:7459:7475	2649241	4	True				
ANR	2649273	IdentifierDecl	more = true		2649241	0					
ANR	2649274	IdentifierDeclType	bool		2649241	0					
ANR	2649275	Identifier	more		2649241	1					
ANR	2649276	AssignmentExpression	more = true		2649241	2		=			
ANR	2649277	Identifier	true		2649241	0					
ANR	2649278	Identifier	true		2649241	1					
ANR	2649279	WhileStatement	while ( more && fileOffset + 1 < argc )		2649241	5					
ANR	2649280	Condition	more && fileOffset + 1 < argc	300:8:7485:7513	2649241	0	True				
ANR	2649281	AndExpression	more && fileOffset + 1 < argc		2649241	0		&&			
ANR	2649282	Identifier	more		2649241	0					
ANR	2649283	RelationalExpression	fileOffset + 1 < argc		2649241	1		<			
ANR	2649284	AdditiveExpression	fileOffset + 1		2649241	0		+			
ANR	2649285	Identifier	fileOffset		2649241	0					
ANR	2649286	PrimaryExpression	1		2649241	1					
ANR	2649287	Identifier	argc		2649241	1					
ANR	2649288	CompoundStatement		9:39:164:164	2649241	1					
ANR	2649289	IfStatement	"if ( strcmp ( argv [ fileOffset ] , ""-mode"" ) == 0 )"		2649241	0					
ANR	2649290	Condition	"strcmp ( argv [ fileOffset ] , ""-mode"" ) == 0"	302:6:7525:7562	2649241	0	True				
ANR	2649291	EqualityExpression	"strcmp ( argv [ fileOffset ] , ""-mode"" ) == 0"		2649241	0		==			
ANR	2649292	CallExpression	"strcmp ( argv [ fileOffset ] , ""-mode"" )"		2649241	0					
ANR	2649293	Callee	strcmp		2649241	0					
ANR	2649294	Identifier	strcmp		2649241	0					
ANR	2649295	ArgumentList	argv [ fileOffset ]		2649241	1					
ANR	2649296	Argument	argv [ fileOffset ]		2649241	0					
ANR	2649297	ArrayIndexing	argv [ fileOffset ]		2649241	0					
ANR	2649298	Identifier	argv		2649241	0					
ANR	2649299	Identifier	fileOffset		2649241	1					
ANR	2649300	Argument	"""-mode"""		2649241	1					
ANR	2649301	PrimaryExpression	"""-mode"""		2649241	0					
ANR	2649302	PrimaryExpression	0		2649241	1					
ANR	2649303	CompoundStatement		11:46:213:213	2649241	1					
ANR	2649304	ExpressionStatement	mode = argv [ fileOffset + 1 ]	303:3:7570:7595	2649241	0	True				
ANR	2649305	AssignmentExpression	mode = argv [ fileOffset + 1 ]		2649241	0		=			
ANR	2649306	Identifier	mode		2649241	0					
ANR	2649307	ArrayIndexing	argv [ fileOffset + 1 ]		2649241	1					
ANR	2649308	Identifier	argv		2649241	0					
ANR	2649309	AdditiveExpression	fileOffset + 1		2649241	1		+			
ANR	2649310	Identifier	fileOffset		2649241	0					
ANR	2649311	PrimaryExpression	1		2649241	1					
ANR	2649312	ExpressionStatement	fileOffset += 2	304:3:7600:7615	2649241	1	True				
ANR	2649313	AssignmentExpression	fileOffset += 2		2649241	0		+=			
ANR	2649314	Identifier	fileOffset		2649241	0					
ANR	2649315	PrimaryExpression	2		2649241	1					
ANR	2649316	ExpressionStatement	more = true	305:3:7620:7631	2649241	2	True				
ANR	2649317	AssignmentExpression	more = true		2649241	0		=			
ANR	2649318	Identifier	more		2649241	0					
ANR	2649319	Identifier	true		2649241	1					
ANR	2649320	ElseStatement	else		2649241	0					
ANR	2649321	IfStatement	"if ( strcmp ( argv [ fileOffset ] , ""-perm"" ) == 0 )"		2649241	0					
ANR	2649322	Condition	"strcmp ( argv [ fileOffset ] , ""-perm"" ) == 0"	307:11:7648:7685	2649241	0	True				
ANR	2649323	EqualityExpression	"strcmp ( argv [ fileOffset ] , ""-perm"" ) == 0"		2649241	0		==			
ANR	2649324	CallExpression	"strcmp ( argv [ fileOffset ] , ""-perm"" )"		2649241	0					
ANR	2649325	Callee	strcmp		2649241	0					
ANR	2649326	Identifier	strcmp		2649241	0					
ANR	2649327	ArgumentList	argv [ fileOffset ]		2649241	1					
ANR	2649328	Argument	argv [ fileOffset ]		2649241	0					
ANR	2649329	ArrayIndexing	argv [ fileOffset ]		2649241	0					
ANR	2649330	Identifier	argv		2649241	0					
ANR	2649331	Identifier	fileOffset		2649241	1					
ANR	2649332	Argument	"""-perm"""		2649241	1					
ANR	2649333	PrimaryExpression	"""-perm"""		2649241	0					
ANR	2649334	PrimaryExpression	0		2649241	1					
ANR	2649335	CompoundStatement		17:3:341:377	2649241	1					
ANR	2649336	IdentifierDeclStatement	char * permStr = argv [ fileOffset + 1 ] ;	308:3:7693:7729	2649241	0	True				
ANR	2649337	IdentifierDecl	* permStr = argv [ fileOffset + 1 ]		2649241	0					
ANR	2649338	IdentifierDeclType	char *		2649241	0					
ANR	2649339	Identifier	permStr		2649241	1					
ANR	2649340	AssignmentExpression	* permStr = argv [ fileOffset + 1 ]		2649241	2		=			
ANR	2649341	Identifier	permStr		2649241	0					
ANR	2649342	ArrayIndexing	argv [ fileOffset + 1 ]		2649241	1					
ANR	2649343	Identifier	argv		2649241	0					
ANR	2649344	AdditiveExpression	fileOffset + 1		2649241	1		+			
ANR	2649345	Identifier	fileOffset		2649241	0					
ANR	2649346	PrimaryExpression	1		2649241	1					
ANR	2649347	ExpressionStatement	"perm = strtol ( permStr , NULL , 8 )"	309:3:7734:7765	2649241	1	True				
ANR	2649348	AssignmentExpression	"perm = strtol ( permStr , NULL , 8 )"		2649241	0		=			
ANR	2649349	Identifier	perm		2649241	0					
ANR	2649350	CallExpression	"strtol ( permStr , NULL , 8 )"		2649241	1					
ANR	2649351	Callee	strtol		2649241	0					
ANR	2649352	Identifier	strtol		2649241	0					
ANR	2649353	ArgumentList	permStr		2649241	1					
ANR	2649354	Argument	permStr		2649241	0					
ANR	2649355	Identifier	permStr		2649241	0					
ANR	2649356	Argument	NULL		2649241	1					
ANR	2649357	Identifier	NULL		2649241	0					
ANR	2649358	Argument	8		2649241	2					
ANR	2649359	PrimaryExpression	8		2649241	0					
ANR	2649360	ExpressionStatement	fileOffset += 2	310:3:7770:7785	2649241	2	True				
ANR	2649361	AssignmentExpression	fileOffset += 2		2649241	0		+=			
ANR	2649362	Identifier	fileOffset		2649241	0					
ANR	2649363	PrimaryExpression	2		2649241	1					
ANR	2649364	ExpressionStatement	more = true	311:3:7790:7801	2649241	3	True				
ANR	2649365	AssignmentExpression	more = true		2649241	0		=			
ANR	2649366	Identifier	more		2649241	0					
ANR	2649367	Identifier	true		2649241	1					
ANR	2649368	ElseStatement	else		2649241	0					
ANR	2649369	CompoundStatement		22:7:462:462	2649241	0					
ANR	2649370	ExpressionStatement	more = false	314:3:7819:7831	2649241	0	True				
ANR	2649371	AssignmentExpression	more = false		2649241	0		=			
ANR	2649372	Identifier	more		2649241	0					
ANR	2649373	Identifier	false		2649241	1					
ANR	2649374	IfStatement	if ( fileOffset + 1 >= argc || argc > fileOffset + 2 )		2649241	6					
ANR	2649375	Condition	fileOffset + 1 >= argc || argc > fileOffset + 2	318:4:7845:7891	2649241	0	True				
ANR	2649376	OrExpression	fileOffset + 1 >= argc || argc > fileOffset + 2		2649241	0		||			
ANR	2649377	RelationalExpression	fileOffset + 1 >= argc		2649241	0		>=			
ANR	2649378	AdditiveExpression	fileOffset + 1		2649241	0		+			
ANR	2649379	Identifier	fileOffset		2649241	0					
ANR	2649380	PrimaryExpression	1		2649241	1					
ANR	2649381	Identifier	argc		2649241	1					
ANR	2649382	RelationalExpression	argc > fileOffset + 2		2649241	1		>			
ANR	2649383	Identifier	argc		2649241	0					
ANR	2649384	AdditiveExpression	fileOffset + 2		2649241	1		+			
ANR	2649385	Identifier	fileOffset		2649241	0					
ANR	2649386	PrimaryExpression	2		2649241	1					
ANR	2649387	CompoundStatement		27:53:542:542	2649241	1					
ANR	2649388	Statement	printf	319:2:7898:7903	2649241	0	True				
ANR	2649389	Statement	(	319:8:7904:7904	2649241	1	True				
ANR	2649390	Statement	"""condor_chirp put  [-mode mode] [-perm perm] local_file """	319:9:7905:7961	2649241	2	True				
ANR	2649391	Statement	"""remote_file\\n"""	320:6:7969:7983	2649241	3	True				
ANR	2649392	Statement	)	320:21:7984:7984	2649241	4	True				
ANR	2649393	ExpressionStatement		320:22:7985:7985	2649241	5	True				
ANR	2649394	ReturnStatement	return - 1 ;	321:2:7989:7998	2649241	6	True				
ANR	2649395	UnaryOperationExpression	- 1		2649241	0					
ANR	2649396	UnaryOperator	-		2649241	0					
ANR	2649397	PrimaryExpression	1		2649241	1					
ANR	2649398	IfStatement	"if ( strcmp ( mode , ""cwt"" ) == 0 && strcmp ( argv [ fileOffset ] , ""-"" ) != 0 )"		2649241	7					
ANR	2649399	Condition	"strcmp ( mode , ""cwt"" ) == 0 && strcmp ( argv [ fileOffset ] , ""-"" ) != 0"	325:4:8025:8086	2649241	0	True				
ANR	2649400	AndExpression	"strcmp ( mode , ""cwt"" ) == 0 && strcmp ( argv [ fileOffset ] , ""-"" ) != 0"		2649241	0		&&			
ANR	2649401	EqualityExpression	"strcmp ( mode , ""cwt"" ) == 0"		2649241	0		==			
ANR	2649402	CallExpression	"strcmp ( mode , ""cwt"" )"		2649241	0					
ANR	2649403	Callee	strcmp		2649241	0					
ANR	2649404	Identifier	strcmp		2649241	0					
ANR	2649405	ArgumentList	mode		2649241	1					
ANR	2649406	Argument	mode		2649241	0					
ANR	2649407	Identifier	mode		2649241	0					
ANR	2649408	Argument	"""cwt"""		2649241	1					
ANR	2649409	PrimaryExpression	"""cwt"""		2649241	0					
ANR	2649410	PrimaryExpression	0		2649241	1					
ANR	2649411	EqualityExpression	"strcmp ( argv [ fileOffset ] , ""-"" ) != 0"		2649241	1		!=			
ANR	2649412	CallExpression	"strcmp ( argv [ fileOffset ] , ""-"" )"		2649241	0					
ANR	2649413	Callee	strcmp		2649241	0					
ANR	2649414	Identifier	strcmp		2649241	0					
ANR	2649415	ArgumentList	argv [ fileOffset ]		2649241	1					
ANR	2649416	Argument	argv [ fileOffset ]		2649241	0					
ANR	2649417	ArrayIndexing	argv [ fileOffset ]		2649241	0					
ANR	2649418	Identifier	argv		2649241	0					
ANR	2649419	Identifier	fileOffset		2649241	1					
ANR	2649420	Argument	"""-"""		2649241	1					
ANR	2649421	PrimaryExpression	"""-"""		2649241	0					
ANR	2649422	PrimaryExpression	0		2649241	1					
ANR	2649423	CompoundStatement		34:68:737:737	2649241	1					
ANR	2649424	ReturnStatement	"return chirp_put_one_file ( argv [ fileOffset ] , argv [ fileOffset + 1 ] , perm ) ;"	326:2:8093:8164	2649241	0	True				
ANR	2649425	CallExpression	"chirp_put_one_file ( argv [ fileOffset ] , argv [ fileOffset + 1 ] , perm )"		2649241	0					
ANR	2649426	Callee	chirp_put_one_file		2649241	0					
ANR	2649427	Identifier	chirp_put_one_file		2649241	0					
ANR	2649428	ArgumentList	argv [ fileOffset ]		2649241	1					
ANR	2649429	Argument	argv [ fileOffset ]		2649241	0					
ANR	2649430	ArrayIndexing	argv [ fileOffset ]		2649241	0					
ANR	2649431	Identifier	argv		2649241	0					
ANR	2649432	Identifier	fileOffset		2649241	1					
ANR	2649433	Argument	argv [ fileOffset + 1 ]		2649241	1					
ANR	2649434	ArrayIndexing	argv [ fileOffset + 1 ]		2649241	0					
ANR	2649435	Identifier	argv		2649241	0					
ANR	2649436	AdditiveExpression	fileOffset + 1		2649241	1		+			
ANR	2649437	Identifier	fileOffset		2649241	0					
ANR	2649438	PrimaryExpression	1		2649241	1					
ANR	2649439	Argument	perm		2649241	2					
ANR	2649440	Identifier	perm		2649241	0					
ANR	2649441	ElseStatement	else		2649241	0					
ANR	2649442	CompoundStatement		38:6:843:843	2649241	0					
ANR	2649443	ReturnStatement	"return chirp_put_one_file ( argv [ fileOffset ] , argv [ fileOffset + 1 ] , mode , perm ) ;"	330:2:8199:8276	2649241	0	True				
ANR	2649444	CallExpression	"chirp_put_one_file ( argv [ fileOffset ] , argv [ fileOffset + 1 ] , mode , perm )"		2649241	0					
ANR	2649445	Callee	chirp_put_one_file		2649241	0					
ANR	2649446	Identifier	chirp_put_one_file		2649241	0					
ANR	2649447	ArgumentList	argv [ fileOffset ]		2649241	1					
ANR	2649448	Argument	argv [ fileOffset ]		2649241	0					
ANR	2649449	ArrayIndexing	argv [ fileOffset ]		2649241	0					
ANR	2649450	Identifier	argv		2649241	0					
ANR	2649451	Identifier	fileOffset		2649241	1					
ANR	2649452	Argument	argv [ fileOffset + 1 ]		2649241	1					
ANR	2649453	ArrayIndexing	argv [ fileOffset + 1 ]		2649241	0					
ANR	2649454	Identifier	argv		2649241	0					
ANR	2649455	AdditiveExpression	fileOffset + 1		2649241	1		+			
ANR	2649456	Identifier	fileOffset		2649241	0					
ANR	2649457	PrimaryExpression	1		2649241	1					
ANR	2649458	Argument	mode		2649241	2					
ANR	2649459	Identifier	mode		2649241	0					
ANR	2649460	Argument	perm		2649241	3					
ANR	2649461	Identifier	perm		2649241	0					
ANR	2649462	ReturnType	int		2649241	1					
ANR	2649463	Identifier	chirp_put		2649241	2					
ANR	2649464	ParameterList	"int argc , char * * argv"		2649241	3					
ANR	2649465	Parameter	int argc	292:14:7328:7335	2649241	0	True				
ANR	2649466	ParameterType	int		2649241	0					
ANR	2649467	Identifier	argc		2649241	1					
ANR	2649468	Parameter	char * * argv	292:24:7338:7348	2649241	1	True				
ANR	2649469	ParameterType	char * *		2649241	0					
ANR	2649470	Identifier	argv		2649241	1					
ANR	2649471	CFGEntryNode	ENTRY		2649241		True				
ANR	2649472	CFGExitNode	EXIT		2649241		True				
ANR	2649473	Symbol	argc		2649241						
ANR	2649474	Symbol	strcmp		2649241						
ANR	2649475	Symbol	NULL		2649241						
ANR	2649476	Symbol	perm		2649241						
ANR	2649477	Symbol	* fileOffset		2649241						
ANR	2649478	Symbol	more		2649241						
ANR	2649479	Symbol	false		2649241						
ANR	2649480	Symbol	fileOffset		2649241						
ANR	2649481	Symbol	* argv		2649241						
ANR	2649482	Symbol	argv		2649241						
ANR	2649483	Symbol	permStr		2649241						
ANR	2649484	Symbol	mode		2649241						
ANR	2649485	Symbol	strtol		2649241						
ANR	2649486	Symbol	true		2649241						
ANR	2649487	Symbol	default_mode		2649241						
ANR	2649488	Symbol	chirp_put_one_file		2649241						
ANR	2649489	Function	chirp_remove	339:0:8351:8627							
ANR	2649490	FunctionDef	"chirp_remove (int argc , char * * argv)"		2649489	0					
ANR	2649491	CompoundStatement		339:40:8391:8627	2649489	0					
ANR	2649492	IfStatement	if ( argc != 3 )		2649489	0					
ANR	2649493	Condition	argc != 3	340:5:8398:8406	2649489	0	True				
ANR	2649494	EqualityExpression	argc != 3		2649489	0		!=			
ANR	2649495	Identifier	argc		2649489	0					
ANR	2649496	PrimaryExpression	3		2649489	1					
ANR	2649497	CompoundStatement		2:16:17:17	2649489	1					
ANR	2649498	ExpressionStatement	"printf ( ""condor_chirp remove remote_file\\n"" )"	341:2:8413:8456	2649489	0	True				
ANR	2649499	CallExpression	"printf ( ""condor_chirp remove remote_file\\n"" )"		2649489	0					
ANR	2649500	Callee	printf		2649489	0					
ANR	2649501	Identifier	printf		2649489	0					
ANR	2649502	ArgumentList	"""condor_chirp remove remote_file\\n"""		2649489	1					
ANR	2649503	Argument	"""condor_chirp remove remote_file\\n"""		2649489	0					
ANR	2649504	PrimaryExpression	"""condor_chirp remove remote_file\\n"""		2649489	0					
ANR	2649505	ReturnStatement	return - 1 ;	342:2:8460:8469	2649489	1	True				
ANR	2649506	UnaryOperationExpression	- 1		2649489	0					
ANR	2649507	UnaryOperator	-		2649489	0					
ANR	2649508	PrimaryExpression	1		2649489	1					
ANR	2649509	IdentifierDeclStatement	struct chirp_client * client = 0 ;	345:1:8476:8507	2649489	1	True				
ANR	2649510	IdentifierDecl	* client = 0		2649489	0					
ANR	2649511	IdentifierDeclType	struct chirp_client *		2649489	0					
ANR	2649512	Identifier	client		2649489	1					
ANR	2649513	AssignmentExpression	* client = 0		2649489	2		=			
ANR	2649514	Identifier	client		2649489	0					
ANR	2649515	PrimaryExpression	0		2649489	1					
ANR	2649516	ExpressionStatement	CONNECT_STARTER ( client )	346:1:8510:8533	2649489	2	True				
ANR	2649517	CallExpression	CONNECT_STARTER ( client )		2649489	0					
ANR	2649518	Callee	CONNECT_STARTER		2649489	0					
ANR	2649519	Identifier	CONNECT_STARTER		2649489	0					
ANR	2649520	ArgumentList	client		2649489	1					
ANR	2649521	Argument	client		2649489	0					
ANR	2649522	Identifier	client		2649489	0					
ANR	2649523	IdentifierDeclStatement	"int rval = chirp_client_unlink ( client , argv [ 2 ] ) ;"	348:4:8540:8587	2649489	3	True				
ANR	2649524	IdentifierDecl	"rval = chirp_client_unlink ( client , argv [ 2 ] )"		2649489	0					
ANR	2649525	IdentifierDeclType	int		2649489	0					
ANR	2649526	Identifier	rval		2649489	1					
ANR	2649527	AssignmentExpression	"rval = chirp_client_unlink ( client , argv [ 2 ] )"		2649489	2		=			
ANR	2649528	Identifier	rval		2649489	0					
ANR	2649529	CallExpression	"chirp_client_unlink ( client , argv [ 2 ] )"		2649489	1					
ANR	2649530	Callee	chirp_client_unlink		2649489	0					
ANR	2649531	Identifier	chirp_client_unlink		2649489	0					
ANR	2649532	ArgumentList	client		2649489	1					
ANR	2649533	Argument	client		2649489	0					
ANR	2649534	Identifier	client		2649489	0					
ANR	2649535	Argument	argv [ 2 ]		2649489	1					
ANR	2649536	ArrayIndexing	argv [ 2 ]		2649489	0					
ANR	2649537	Identifier	argv		2649489	0					
ANR	2649538	PrimaryExpression	2		2649489	1					
ANR	2649539	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , rval )"	349:1:8590:8625	2649489	4	True				
ANR	2649540	CallExpression	"DISCONNECT_AND_RETURN ( client , rval )"		2649489	0					
ANR	2649541	Callee	DISCONNECT_AND_RETURN		2649489	0					
ANR	2649542	Identifier	DISCONNECT_AND_RETURN		2649489	0					
ANR	2649543	ArgumentList	client		2649489	1					
ANR	2649544	Argument	client		2649489	0					
ANR	2649545	Identifier	client		2649489	0					
ANR	2649546	Argument	rval		2649489	1					
ANR	2649547	Identifier	rval		2649489	0					
ANR	2649548	ReturnType	int		2649489	1					
ANR	2649549	Identifier	chirp_remove		2649489	2					
ANR	2649550	ParameterList	"int argc , char * * argv"		2649489	3					
ANR	2649551	Parameter	int argc	339:17:8368:8375	2649489	0	True				
ANR	2649552	ParameterType	int		2649489	0					
ANR	2649553	Identifier	argc		2649489	1					
ANR	2649554	Parameter	char * * argv	339:27:8378:8388	2649489	1	True				
ANR	2649555	ParameterType	char * *		2649489	0					
ANR	2649556	Identifier	argv		2649489	1					
ANR	2649557	CFGEntryNode	ENTRY		2649489		True				
ANR	2649558	CFGExitNode	EXIT		2649489		True				
ANR	2649559	Symbol	argc		2649489						
ANR	2649560	Symbol	client		2649489						
ANR	2649561	Symbol	rval		2649489						
ANR	2649562	Symbol	* argv		2649489						
ANR	2649563	Symbol	chirp_client_unlink		2649489						
ANR	2649564	Symbol	argv		2649489						
ANR	2649565	Function	chirp_get_job_attr	357:0:8699:9033							
ANR	2649566	FunctionDef	"chirp_get_job_attr (int argc , char * * argv)"		2649565	0					
ANR	2649567	CompoundStatement		357:46:8745:9033	2649565	0					
ANR	2649568	IfStatement	if ( argc != 3 )		2649565	0					
ANR	2649569	Condition	argc != 3	358:5:8752:8760	2649565	0	True				
ANR	2649570	EqualityExpression	argc != 3		2649565	0		!=			
ANR	2649571	Identifier	argc		2649565	0					
ANR	2649572	PrimaryExpression	3		2649565	1					
ANR	2649573	CompoundStatement		2:16:17:17	2649565	1					
ANR	2649574	ExpressionStatement	"printf ( ""condor_chirp get_job_attr AttributeName\\n"" )"	359:2:8767:8818	2649565	0	True				
ANR	2649575	CallExpression	"printf ( ""condor_chirp get_job_attr AttributeName\\n"" )"		2649565	0					
ANR	2649576	Callee	printf		2649565	0					
ANR	2649577	Identifier	printf		2649565	0					
ANR	2649578	ArgumentList	"""condor_chirp get_job_attr AttributeName\\n"""		2649565	1					
ANR	2649579	Argument	"""condor_chirp get_job_attr AttributeName\\n"""		2649565	0					
ANR	2649580	PrimaryExpression	"""condor_chirp get_job_attr AttributeName\\n"""		2649565	0					
ANR	2649581	ReturnStatement	return - 1 ;	360:2:8822:8831	2649565	1	True				
ANR	2649582	UnaryOperationExpression	- 1		2649565	0					
ANR	2649583	UnaryOperator	-		2649565	0					
ANR	2649584	PrimaryExpression	1		2649565	1					
ANR	2649585	IdentifierDeclStatement	struct chirp_client * client = 0 ;	363:1:8838:8869	2649565	1	True				
ANR	2649586	IdentifierDecl	* client = 0		2649565	0					
ANR	2649587	IdentifierDeclType	struct chirp_client *		2649565	0					
ANR	2649588	Identifier	client		2649565	1					
ANR	2649589	AssignmentExpression	* client = 0		2649565	2		=			
ANR	2649590	Identifier	client		2649565	0					
ANR	2649591	PrimaryExpression	0		2649565	1					
ANR	2649592	ExpressionStatement	CONNECT_STARTER ( client )	364:1:8872:8895	2649565	2	True				
ANR	2649593	CallExpression	CONNECT_STARTER ( client )		2649565	0					
ANR	2649594	Callee	CONNECT_STARTER		2649565	0					
ANR	2649595	Identifier	CONNECT_STARTER		2649565	0					
ANR	2649596	ArgumentList	client		2649565	1					
ANR	2649597	Argument	client		2649565	0					
ANR	2649598	Identifier	client		2649565	0					
ANR	2649599	IdentifierDeclStatement	char * p = 0 ;	366:1:8899:8910	2649565	3	True				
ANR	2649600	IdentifierDecl	* p = 0		2649565	0					
ANR	2649601	IdentifierDeclType	char *		2649565	0					
ANR	2649602	Identifier	p		2649565	1					
ANR	2649603	AssignmentExpression	* p = 0		2649565	2		=			
ANR	2649604	Identifier	p		2649565	0					
ANR	2649605	PrimaryExpression	0		2649565	1					
ANR	2649606	IdentifierDeclStatement	"int len = chirp_client_get_job_attr ( client , argv [ 2 ] , & p ) ;"	367:1:8913:8969	2649565	4	True				
ANR	2649607	IdentifierDecl	"len = chirp_client_get_job_attr ( client , argv [ 2 ] , & p )"		2649565	0					
ANR	2649608	IdentifierDeclType	int		2649565	0					
ANR	2649609	Identifier	len		2649565	1					
ANR	2649610	AssignmentExpression	"len = chirp_client_get_job_attr ( client , argv [ 2 ] , & p )"		2649565	2		=			
ANR	2649611	Identifier	len		2649565	0					
ANR	2649612	CallExpression	"chirp_client_get_job_attr ( client , argv [ 2 ] , & p )"		2649565	1					
ANR	2649613	Callee	chirp_client_get_job_attr		2649565	0					
ANR	2649614	Identifier	chirp_client_get_job_attr		2649565	0					
ANR	2649615	ArgumentList	client		2649565	1					
ANR	2649616	Argument	client		2649565	0					
ANR	2649617	Identifier	client		2649565	0					
ANR	2649618	Argument	argv [ 2 ]		2649565	1					
ANR	2649619	ArrayIndexing	argv [ 2 ]		2649565	0					
ANR	2649620	Identifier	argv		2649565	0					
ANR	2649621	PrimaryExpression	2		2649565	1					
ANR	2649622	Argument	& p		2649565	2					
ANR	2649623	UnaryOperationExpression	& p		2649565	0					
ANR	2649624	UnaryOperator	&		2649565	0					
ANR	2649625	Identifier	p		2649565	1					
ANR	2649626	ExpressionStatement	"printf ( ""%.*s\\n"" , len , p )"	368:1:8972:8996	2649565	5	True				
ANR	2649627	CallExpression	"printf ( ""%.*s\\n"" , len , p )"		2649565	0					
ANR	2649628	Callee	printf		2649565	0					
ANR	2649629	Identifier	printf		2649565	0					
ANR	2649630	ArgumentList	"""%.*s\\n"""		2649565	1					
ANR	2649631	Argument	"""%.*s\\n"""		2649565	0					
ANR	2649632	PrimaryExpression	"""%.*s\\n"""		2649565	0					
ANR	2649633	Argument	len		2649565	1					
ANR	2649634	Identifier	len		2649565	0					
ANR	2649635	Argument	p		2649565	2					
ANR	2649636	Identifier	p		2649565	0					
ANR	2649637	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , 0 )"	369:1:8999:9031	2649565	6	True				
ANR	2649638	CallExpression	"DISCONNECT_AND_RETURN ( client , 0 )"		2649565	0					
ANR	2649639	Callee	DISCONNECT_AND_RETURN		2649565	0					
ANR	2649640	Identifier	DISCONNECT_AND_RETURN		2649565	0					
ANR	2649641	ArgumentList	client		2649565	1					
ANR	2649642	Argument	client		2649565	0					
ANR	2649643	Identifier	client		2649565	0					
ANR	2649644	Argument	0		2649565	1					
ANR	2649645	PrimaryExpression	0		2649565	0					
ANR	2649646	ReturnType	int		2649565	1					
ANR	2649647	Identifier	chirp_get_job_attr		2649565	2					
ANR	2649648	ParameterList	"int argc , char * * argv"		2649565	3					
ANR	2649649	Parameter	int argc	357:23:8722:8729	2649565	0	True				
ANR	2649650	ParameterType	int		2649565	0					
ANR	2649651	Identifier	argc		2649565	1					
ANR	2649652	Parameter	char * * argv	357:33:8732:8742	2649565	1	True				
ANR	2649653	ParameterType	char * *		2649565	0					
ANR	2649654	Identifier	argv		2649565	1					
ANR	2649655	CFGEntryNode	ENTRY		2649565		True				
ANR	2649656	CFGExitNode	EXIT		2649565		True				
ANR	2649657	Symbol	argc		2649565						
ANR	2649658	Symbol	p		2649565						
ANR	2649659	Symbol	chirp_client_get_job_attr		2649565						
ANR	2649660	Symbol	len		2649565						
ANR	2649661	Symbol	& p		2649565						
ANR	2649662	Symbol	client		2649565						
ANR	2649663	Symbol	* argv		2649565						
ANR	2649664	Symbol	argv		2649565						
ANR	2649665	Function	chirp_set_job_attr	377:0:9105:9425							
ANR	2649666	FunctionDef	"chirp_set_job_attr (int argc , char * * argv)"		2649665	0					
ANR	2649667	CompoundStatement		377:46:9151:9425	2649665	0					
ANR	2649668	IfStatement	if ( argc != 4 )		2649665	0					
ANR	2649669	Condition	argc != 4	378:5:9158:9166	2649665	0	True				
ANR	2649670	EqualityExpression	argc != 4		2649665	0		!=			
ANR	2649671	Identifier	argc		2649665	0					
ANR	2649672	PrimaryExpression	4		2649665	1					
ANR	2649673	CompoundStatement		2:16:17:17	2649665	1					
ANR	2649674	ExpressionStatement	"printf ( ""condor_chirp set_job_attr AttributeName AttributeValue\\n"" )"	379:2:9173:9239	2649665	0	True				
ANR	2649675	CallExpression	"printf ( ""condor_chirp set_job_attr AttributeName AttributeValue\\n"" )"		2649665	0					
ANR	2649676	Callee	printf		2649665	0					
ANR	2649677	Identifier	printf		2649665	0					
ANR	2649678	ArgumentList	"""condor_chirp set_job_attr AttributeName AttributeValue\\n"""		2649665	1					
ANR	2649679	Argument	"""condor_chirp set_job_attr AttributeName AttributeValue\\n"""		2649665	0					
ANR	2649680	PrimaryExpression	"""condor_chirp set_job_attr AttributeName AttributeValue\\n"""		2649665	0					
ANR	2649681	ReturnStatement	return - 1 ;	380:2:9243:9252	2649665	1	True				
ANR	2649682	UnaryOperationExpression	- 1		2649665	0					
ANR	2649683	UnaryOperator	-		2649665	0					
ANR	2649684	PrimaryExpression	1		2649665	1					
ANR	2649685	IdentifierDeclStatement	struct chirp_client * client = 0 ;	383:1:9259:9290	2649665	1	True				
ANR	2649686	IdentifierDecl	* client = 0		2649665	0					
ANR	2649687	IdentifierDeclType	struct chirp_client *		2649665	0					
ANR	2649688	Identifier	client		2649665	1					
ANR	2649689	AssignmentExpression	* client = 0		2649665	2		=			
ANR	2649690	Identifier	client		2649665	0					
ANR	2649691	PrimaryExpression	0		2649665	1					
ANR	2649692	ExpressionStatement	CONNECT_STARTER ( client )	384:1:9293:9316	2649665	2	True				
ANR	2649693	CallExpression	CONNECT_STARTER ( client )		2649665	0					
ANR	2649694	Callee	CONNECT_STARTER		2649665	0					
ANR	2649695	Identifier	CONNECT_STARTER		2649665	0					
ANR	2649696	ArgumentList	client		2649665	1					
ANR	2649697	Argument	client		2649665	0					
ANR	2649698	Identifier	client		2649665	0					
ANR	2649699	IdentifierDeclStatement	"int rval = chirp_client_set_job_attr ( client , argv [ 2 ] , argv [ 3 ] ) ;"	386:4:9323:9385	2649665	3	True				
ANR	2649700	IdentifierDecl	"rval = chirp_client_set_job_attr ( client , argv [ 2 ] , argv [ 3 ] )"		2649665	0					
ANR	2649701	IdentifierDeclType	int		2649665	0					
ANR	2649702	Identifier	rval		2649665	1					
ANR	2649703	AssignmentExpression	"rval = chirp_client_set_job_attr ( client , argv [ 2 ] , argv [ 3 ] )"		2649665	2		=			
ANR	2649704	Identifier	rval		2649665	0					
ANR	2649705	CallExpression	"chirp_client_set_job_attr ( client , argv [ 2 ] , argv [ 3 ] )"		2649665	1					
ANR	2649706	Callee	chirp_client_set_job_attr		2649665	0					
ANR	2649707	Identifier	chirp_client_set_job_attr		2649665	0					
ANR	2649708	ArgumentList	client		2649665	1					
ANR	2649709	Argument	client		2649665	0					
ANR	2649710	Identifier	client		2649665	0					
ANR	2649711	Argument	argv [ 2 ]		2649665	1					
ANR	2649712	ArrayIndexing	argv [ 2 ]		2649665	0					
ANR	2649713	Identifier	argv		2649665	0					
ANR	2649714	PrimaryExpression	2		2649665	1					
ANR	2649715	Argument	argv [ 3 ]		2649665	2					
ANR	2649716	ArrayIndexing	argv [ 3 ]		2649665	0					
ANR	2649717	Identifier	argv		2649665	0					
ANR	2649718	PrimaryExpression	3		2649665	1					
ANR	2649719	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , rval )"	387:1:9388:9423	2649665	4	True				
ANR	2649720	CallExpression	"DISCONNECT_AND_RETURN ( client , rval )"		2649665	0					
ANR	2649721	Callee	DISCONNECT_AND_RETURN		2649665	0					
ANR	2649722	Identifier	DISCONNECT_AND_RETURN		2649665	0					
ANR	2649723	ArgumentList	client		2649665	1					
ANR	2649724	Argument	client		2649665	0					
ANR	2649725	Identifier	client		2649665	0					
ANR	2649726	Argument	rval		2649665	1					
ANR	2649727	Identifier	rval		2649665	0					
ANR	2649728	ReturnType	int		2649665	1					
ANR	2649729	Identifier	chirp_set_job_attr		2649665	2					
ANR	2649730	ParameterList	"int argc , char * * argv"		2649665	3					
ANR	2649731	Parameter	int argc	377:23:9128:9135	2649665	0	True				
ANR	2649732	ParameterType	int		2649665	0					
ANR	2649733	Identifier	argc		2649665	1					
ANR	2649734	Parameter	char * * argv	377:33:9138:9148	2649665	1	True				
ANR	2649735	ParameterType	char * *		2649665	0					
ANR	2649736	Identifier	argv		2649665	1					
ANR	2649737	CFGEntryNode	ENTRY		2649665		True				
ANR	2649738	CFGExitNode	EXIT		2649665		True				
ANR	2649739	Symbol	argc		2649665						
ANR	2649740	Symbol	chirp_client_set_job_attr		2649665						
ANR	2649741	Symbol	client		2649665						
ANR	2649742	Symbol	rval		2649665						
ANR	2649743	Symbol	* argv		2649665						
ANR	2649744	Symbol	argv		2649665						
ANR	2649745	Function	chirp_ulog	395:0:9453:9719							
ANR	2649746	FunctionDef	"chirp_ulog (int argc , char * * argv)"		2649745	0					
ANR	2649747	CompoundStatement		395:38:9491:9719	2649745	0					
ANR	2649748	IfStatement	if ( argc != 3 )		2649745	0					
ANR	2649749	Condition	argc != 3	396:5:9498:9506	2649745	0	True				
ANR	2649750	EqualityExpression	argc != 3		2649745	0		!=			
ANR	2649751	Identifier	argc		2649745	0					
ANR	2649752	PrimaryExpression	3		2649745	1					
ANR	2649753	CompoundStatement		2:16:17:17	2649745	1					
ANR	2649754	ExpressionStatement	"printf ( ""condor_chirp ulog message\\n"" )"	397:2:9513:9550	2649745	0	True				
ANR	2649755	CallExpression	"printf ( ""condor_chirp ulog message\\n"" )"		2649745	0					
ANR	2649756	Callee	printf		2649745	0					
ANR	2649757	Identifier	printf		2649745	0					
ANR	2649758	ArgumentList	"""condor_chirp ulog message\\n"""		2649745	1					
ANR	2649759	Argument	"""condor_chirp ulog message\\n"""		2649745	0					
ANR	2649760	PrimaryExpression	"""condor_chirp ulog message\\n"""		2649745	0					
ANR	2649761	ReturnStatement	return - 1 ;	398:2:9554:9563	2649745	1	True				
ANR	2649762	UnaryOperationExpression	- 1		2649745	0					
ANR	2649763	UnaryOperator	-		2649745	0					
ANR	2649764	PrimaryExpression	1		2649745	1					
ANR	2649765	IdentifierDeclStatement	struct chirp_client * client = 0 ;	401:1:9570:9601	2649745	1	True				
ANR	2649766	IdentifierDecl	* client = 0		2649745	0					
ANR	2649767	IdentifierDeclType	struct chirp_client *		2649745	0					
ANR	2649768	Identifier	client		2649745	1					
ANR	2649769	AssignmentExpression	* client = 0		2649745	2		=			
ANR	2649770	Identifier	client		2649745	0					
ANR	2649771	PrimaryExpression	0		2649745	1					
ANR	2649772	ExpressionStatement	CONNECT_STARTER ( client )	402:1:9604:9627	2649745	2	True				
ANR	2649773	CallExpression	CONNECT_STARTER ( client )		2649745	0					
ANR	2649774	Callee	CONNECT_STARTER		2649745	0					
ANR	2649775	Identifier	CONNECT_STARTER		2649745	0					
ANR	2649776	ArgumentList	client		2649745	1					
ANR	2649777	Argument	client		2649745	0					
ANR	2649778	Identifier	client		2649745	0					
ANR	2649779	IdentifierDeclStatement	"int rval = chirp_client_ulog ( client , argv [ 2 ] ) ;"	404:4:9634:9679	2649745	3	True				
ANR	2649780	IdentifierDecl	"rval = chirp_client_ulog ( client , argv [ 2 ] )"		2649745	0					
ANR	2649781	IdentifierDeclType	int		2649745	0					
ANR	2649782	Identifier	rval		2649745	1					
ANR	2649783	AssignmentExpression	"rval = chirp_client_ulog ( client , argv [ 2 ] )"		2649745	2		=			
ANR	2649784	Identifier	rval		2649745	0					
ANR	2649785	CallExpression	"chirp_client_ulog ( client , argv [ 2 ] )"		2649745	1					
ANR	2649786	Callee	chirp_client_ulog		2649745	0					
ANR	2649787	Identifier	chirp_client_ulog		2649745	0					
ANR	2649788	ArgumentList	client		2649745	1					
ANR	2649789	Argument	client		2649745	0					
ANR	2649790	Identifier	client		2649745	0					
ANR	2649791	Argument	argv [ 2 ]		2649745	1					
ANR	2649792	ArrayIndexing	argv [ 2 ]		2649745	0					
ANR	2649793	Identifier	argv		2649745	0					
ANR	2649794	PrimaryExpression	2		2649745	1					
ANR	2649795	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , rval )"	405:1:9682:9717	2649745	4	True				
ANR	2649796	CallExpression	"DISCONNECT_AND_RETURN ( client , rval )"		2649745	0					
ANR	2649797	Callee	DISCONNECT_AND_RETURN		2649745	0					
ANR	2649798	Identifier	DISCONNECT_AND_RETURN		2649745	0					
ANR	2649799	ArgumentList	client		2649745	1					
ANR	2649800	Argument	client		2649745	0					
ANR	2649801	Identifier	client		2649745	0					
ANR	2649802	Argument	rval		2649745	1					
ANR	2649803	Identifier	rval		2649745	0					
ANR	2649804	ReturnType	int		2649745	1					
ANR	2649805	Identifier	chirp_ulog		2649745	2					
ANR	2649806	ParameterList	"int argc , char * * argv"		2649745	3					
ANR	2649807	Parameter	int argc	395:15:9468:9475	2649745	0	True				
ANR	2649808	ParameterType	int		2649745	0					
ANR	2649809	Identifier	argc		2649745	1					
ANR	2649810	Parameter	char * * argv	395:25:9478:9488	2649745	1	True				
ANR	2649811	ParameterType	char * *		2649745	0					
ANR	2649812	Identifier	argv		2649745	1					
ANR	2649813	CFGEntryNode	ENTRY		2649745		True				
ANR	2649814	CFGExitNode	EXIT		2649745		True				
ANR	2649815	Symbol	argc		2649745						
ANR	2649816	Symbol	client		2649745						
ANR	2649817	Symbol	rval		2649745						
ANR	2649818	Symbol	* argv		2649745						
ANR	2649819	Symbol	chirp_client_ulog		2649745						
ANR	2649820	Symbol	argv		2649745						
ANR	2649821	Function	chirp_read	408:0:9722:11352							
ANR	2649822	FunctionDef	"chirp_read (int argc , char * * argv)"		2649821	0					
ANR	2649823	CompoundStatement		408:38:9760:11352	2649821	0					
ANR	2649824	IdentifierDeclStatement	int fileOffset = 2 ;	409:1:9763:9781	2649821	0	True				
ANR	2649825	IdentifierDecl	fileOffset = 2		2649821	0					
ANR	2649826	IdentifierDeclType	int		2649821	0					
ANR	2649827	Identifier	fileOffset		2649821	1					
ANR	2649828	AssignmentExpression	fileOffset = 2		2649821	2		=			
ANR	2649829	Identifier	fileOffset		2649821	0					
ANR	2649830	PrimaryExpression	2		2649821	1					
ANR	2649831	IdentifierDeclStatement	int offset = 0 ;	410:1:9784:9798	2649821	1	True				
ANR	2649832	IdentifierDecl	offset = 0		2649821	0					
ANR	2649833	IdentifierDeclType	int		2649821	0					
ANR	2649834	Identifier	offset		2649821	1					
ANR	2649835	AssignmentExpression	offset = 0		2649821	2		=			
ANR	2649836	Identifier	offset		2649821	0					
ANR	2649837	PrimaryExpression	0		2649821	1					
ANR	2649838	IdentifierDeclStatement	int stride_length = 0 ;	411:1:9801:9822	2649821	2	True				
ANR	2649839	IdentifierDecl	stride_length = 0		2649821	0					
ANR	2649840	IdentifierDeclType	int		2649821	0					
ANR	2649841	Identifier	stride_length		2649821	1					
ANR	2649842	AssignmentExpression	stride_length = 0		2649821	2		=			
ANR	2649843	Identifier	stride_length		2649821	0					
ANR	2649844	PrimaryExpression	0		2649821	1					
ANR	2649845	IdentifierDeclStatement	int stride_skip = 0 ;	412:1:9825:9844	2649821	3	True				
ANR	2649846	IdentifierDecl	stride_skip = 0		2649821	0					
ANR	2649847	IdentifierDeclType	int		2649821	0					
ANR	2649848	Identifier	stride_skip		2649821	1					
ANR	2649849	AssignmentExpression	stride_skip = 0		2649821	2		=			
ANR	2649850	Identifier	stride_skip		2649821	0					
ANR	2649851	PrimaryExpression	0		2649821	1					
ANR	2649852	IdentifierDeclStatement	bool more = true ;	414:1:9848:9864	2649821	4	True				
ANR	2649853	IdentifierDecl	more = true		2649821	0					
ANR	2649854	IdentifierDeclType	bool		2649821	0					
ANR	2649855	Identifier	more		2649821	1					
ANR	2649856	AssignmentExpression	more = true		2649821	2		=			
ANR	2649857	Identifier	true		2649821	0					
ANR	2649858	Identifier	true		2649821	1					
ANR	2649859	WhileStatement	while ( more && fileOffset + 1 < argc )		2649821	5					
ANR	2649860	Condition	more && fileOffset + 1 < argc	415:8:9874:9902	2649821	0	True				
ANR	2649861	AndExpression	more && fileOffset + 1 < argc		2649821	0		&&			
ANR	2649862	Identifier	more		2649821	0					
ANR	2649863	RelationalExpression	fileOffset + 1 < argc		2649821	1		<			
ANR	2649864	AdditiveExpression	fileOffset + 1		2649821	0		+			
ANR	2649865	Identifier	fileOffset		2649821	0					
ANR	2649866	PrimaryExpression	1		2649821	1					
ANR	2649867	Identifier	argc		2649821	1					
ANR	2649868	CompoundStatement		8:39:144:144	2649821	1					
ANR	2649869	IfStatement	"if ( strcmp ( argv [ fileOffset ] , ""-offset"" ) == 0 )"		2649821	0					
ANR	2649870	Condition	"strcmp ( argv [ fileOffset ] , ""-offset"" ) == 0"	417:6:9914:9953	2649821	0	True				
ANR	2649871	EqualityExpression	"strcmp ( argv [ fileOffset ] , ""-offset"" ) == 0"		2649821	0		==			
ANR	2649872	CallExpression	"strcmp ( argv [ fileOffset ] , ""-offset"" )"		2649821	0					
ANR	2649873	Callee	strcmp		2649821	0					
ANR	2649874	Identifier	strcmp		2649821	0					
ANR	2649875	ArgumentList	argv [ fileOffset ]		2649821	1					
ANR	2649876	Argument	argv [ fileOffset ]		2649821	0					
ANR	2649877	ArrayIndexing	argv [ fileOffset ]		2649821	0					
ANR	2649878	Identifier	argv		2649821	0					
ANR	2649879	Identifier	fileOffset		2649821	1					
ANR	2649880	Argument	"""-offset"""		2649821	1					
ANR	2649881	PrimaryExpression	"""-offset"""		2649821	0					
ANR	2649882	PrimaryExpression	0		2649821	1					
ANR	2649883	CompoundStatement		10:48:195:195	2649821	1					
ANR	2649884	ExpressionStatement	"offset = strtol ( argv [ fileOffset + 1 ] , NULL , 10 )"	418:3:9961:10008	2649821	0	True				
ANR	2649885	AssignmentExpression	"offset = strtol ( argv [ fileOffset + 1 ] , NULL , 10 )"		2649821	0		=			
ANR	2649886	Identifier	offset		2649821	0					
ANR	2649887	CallExpression	"strtol ( argv [ fileOffset + 1 ] , NULL , 10 )"		2649821	1					
ANR	2649888	Callee	strtol		2649821	0					
ANR	2649889	Identifier	strtol		2649821	0					
ANR	2649890	ArgumentList	argv [ fileOffset + 1 ]		2649821	1					
ANR	2649891	Argument	argv [ fileOffset + 1 ]		2649821	0					
ANR	2649892	ArrayIndexing	argv [ fileOffset + 1 ]		2649821	0					
ANR	2649893	Identifier	argv		2649821	0					
ANR	2649894	AdditiveExpression	fileOffset + 1		2649821	1		+			
ANR	2649895	Identifier	fileOffset		2649821	0					
ANR	2649896	PrimaryExpression	1		2649821	1					
ANR	2649897	Argument	NULL		2649821	1					
ANR	2649898	Identifier	NULL		2649821	0					
ANR	2649899	Argument	10		2649821	2					
ANR	2649900	PrimaryExpression	10		2649821	0					
ANR	2649901	ExpressionStatement	fileOffset += 2	419:3:10013:10028	2649821	1	True				
ANR	2649902	AssignmentExpression	fileOffset += 2		2649821	0		+=			
ANR	2649903	Identifier	fileOffset		2649821	0					
ANR	2649904	PrimaryExpression	2		2649821	1					
ANR	2649905	ExpressionStatement	more = true	420:3:10033:10044	2649821	2	True				
ANR	2649906	AssignmentExpression	more = true		2649821	0		=			
ANR	2649907	Identifier	more		2649821	0					
ANR	2649908	Identifier	true		2649821	1					
ANR	2649909	ElseStatement	else		2649821	0					
ANR	2649910	IfStatement	"if ( strcmp ( argv [ fileOffset ] , ""-stride"" ) == 0 && fileOffset + 2 < argc )"		2649821	0					
ANR	2649911	Condition	"strcmp ( argv [ fileOffset ] , ""-stride"" ) == 0 && fileOffset + 2 < argc"	422:11:10061:10130	2649821	0	True				
ANR	2649912	AndExpression	"strcmp ( argv [ fileOffset ] , ""-stride"" ) == 0 && fileOffset + 2 < argc"		2649821	0		&&			
ANR	2649913	EqualityExpression	"strcmp ( argv [ fileOffset ] , ""-stride"" ) == 0"		2649821	0		==			
ANR	2649914	CallExpression	"strcmp ( argv [ fileOffset ] , ""-stride"" )"		2649821	0					
ANR	2649915	Callee	strcmp		2649821	0					
ANR	2649916	Identifier	strcmp		2649821	0					
ANR	2649917	ArgumentList	argv [ fileOffset ]		2649821	1					
ANR	2649918	Argument	argv [ fileOffset ]		2649821	0					
ANR	2649919	ArrayIndexing	argv [ fileOffset ]		2649821	0					
ANR	2649920	Identifier	argv		2649821	0					
ANR	2649921	Identifier	fileOffset		2649821	1					
ANR	2649922	Argument	"""-stride"""		2649821	1					
ANR	2649923	PrimaryExpression	"""-stride"""		2649821	0					
ANR	2649924	PrimaryExpression	0		2649821	1					
ANR	2649925	RelationalExpression	fileOffset + 2 < argc		2649821	1		<			
ANR	2649926	AdditiveExpression	fileOffset + 2		2649821	0		+			
ANR	2649927	Identifier	fileOffset		2649821	0					
ANR	2649928	PrimaryExpression	2		2649821	1					
ANR	2649929	Identifier	argc		2649821	1					
ANR	2649930	CompoundStatement		16:31:372:372	2649821	1					
ANR	2649931	ExpressionStatement	"stride_length = strtol ( argv [ fileOffset + 1 ] , NULL , 10 )"	424:3:10138:10192	2649821	0	True				
ANR	2649932	AssignmentExpression	"stride_length = strtol ( argv [ fileOffset + 1 ] , NULL , 10 )"		2649821	0		=			
ANR	2649933	Identifier	stride_length		2649821	0					
ANR	2649934	CallExpression	"strtol ( argv [ fileOffset + 1 ] , NULL , 10 )"		2649821	1					
ANR	2649935	Callee	strtol		2649821	0					
ANR	2649936	Identifier	strtol		2649821	0					
ANR	2649937	ArgumentList	argv [ fileOffset + 1 ]		2649821	1					
ANR	2649938	Argument	argv [ fileOffset + 1 ]		2649821	0					
ANR	2649939	ArrayIndexing	argv [ fileOffset + 1 ]		2649821	0					
ANR	2649940	Identifier	argv		2649821	0					
ANR	2649941	AdditiveExpression	fileOffset + 1		2649821	1		+			
ANR	2649942	Identifier	fileOffset		2649821	0					
ANR	2649943	PrimaryExpression	1		2649821	1					
ANR	2649944	Argument	NULL		2649821	1					
ANR	2649945	Identifier	NULL		2649821	0					
ANR	2649946	Argument	10		2649821	2					
ANR	2649947	PrimaryExpression	10		2649821	0					
ANR	2649948	ExpressionStatement	"stride_skip = strtol ( argv [ fileOffset + 2 ] , NULL , 10 )"	425:3:10197:10249	2649821	1	True				
ANR	2649949	AssignmentExpression	"stride_skip = strtol ( argv [ fileOffset + 2 ] , NULL , 10 )"		2649821	0		=			
ANR	2649950	Identifier	stride_skip		2649821	0					
ANR	2649951	CallExpression	"strtol ( argv [ fileOffset + 2 ] , NULL , 10 )"		2649821	1					
ANR	2649952	Callee	strtol		2649821	0					
ANR	2649953	Identifier	strtol		2649821	0					
ANR	2649954	ArgumentList	argv [ fileOffset + 2 ]		2649821	1					
ANR	2649955	Argument	argv [ fileOffset + 2 ]		2649821	0					
ANR	2649956	ArrayIndexing	argv [ fileOffset + 2 ]		2649821	0					
ANR	2649957	Identifier	argv		2649821	0					
ANR	2649958	AdditiveExpression	fileOffset + 2		2649821	1		+			
ANR	2649959	Identifier	fileOffset		2649821	0					
ANR	2649960	PrimaryExpression	2		2649821	1					
ANR	2649961	Argument	NULL		2649821	1					
ANR	2649962	Identifier	NULL		2649821	0					
ANR	2649963	Argument	10		2649821	2					
ANR	2649964	PrimaryExpression	10		2649821	0					
ANR	2649965	ExpressionStatement	fileOffset += 3	426:3:10254:10269	2649821	2	True				
ANR	2649966	AssignmentExpression	fileOffset += 3		2649821	0		+=			
ANR	2649967	Identifier	fileOffset		2649821	0					
ANR	2649968	PrimaryExpression	3		2649821	1					
ANR	2649969	ExpressionStatement	more = true	427:3:10274:10285	2649821	3	True				
ANR	2649970	AssignmentExpression	more = true		2649821	0		=			
ANR	2649971	Identifier	more		2649821	0					
ANR	2649972	Identifier	true		2649821	1					
ANR	2649973	ElseStatement	else		2649821	0					
ANR	2649974	CompoundStatement		22:7:537:537	2649821	0					
ANR	2649975	ExpressionStatement	more = false	430:3:10303:10315	2649821	0	True				
ANR	2649976	AssignmentExpression	more = false		2649821	0		=			
ANR	2649977	Identifier	more		2649821	0					
ANR	2649978	Identifier	false		2649821	1					
ANR	2649979	IfStatement	if ( fileOffset + 2 != argc )		2649821	6					
ANR	2649980	Condition	fileOffset + 2 != argc	434:4:10329:10350	2649821	0	True				
ANR	2649981	EqualityExpression	fileOffset + 2 != argc		2649821	0		!=			
ANR	2649982	AdditiveExpression	fileOffset + 2		2649821	0		+			
ANR	2649983	Identifier	fileOffset		2649821	0					
ANR	2649984	PrimaryExpression	2		2649821	1					
ANR	2649985	Identifier	argc		2649821	1					
ANR	2649986	CompoundStatement		27:28:592:592	2649821	1					
ANR	2649987	Statement	printf	435:2:10357:10362	2649821	0	True				
ANR	2649988	Statement	(	435:8:10363:10363	2649821	1	True				
ANR	2649989	Statement	"""condor_chirp read [-offset offset] [-stride length skip] """	435:9:10364:10422	2649821	2	True				
ANR	2649990	Statement	"""remotepath length\\n"""	436:3:10427:10447	2649821	3	True				
ANR	2649991	Statement	)	436:24:10448:10448	2649821	4	True				
ANR	2649992	ExpressionStatement		436:25:10449:10449	2649821	5	True				
ANR	2649993	ReturnStatement	return - 1 ;	437:2:10453:10462	2649821	6	True				
ANR	2649994	UnaryOperationExpression	- 1		2649821	0					
ANR	2649995	UnaryOperator	-		2649821	0					
ANR	2649996	PrimaryExpression	1		2649821	1					
ANR	2649997	IdentifierDeclStatement	char * path = argv [ fileOffset ] ;	440:1:10469:10498	2649821	7	True				
ANR	2649998	IdentifierDecl	* path = argv [ fileOffset ]		2649821	0					
ANR	2649999	IdentifierDeclType	char *		2649821	0					
ANR	2650000	Identifier	path		2649821	1					
ANR	2650001	AssignmentExpression	* path = argv [ fileOffset ]		2649821	2		=			
ANR	2650002	Identifier	path		2649821	0					
ANR	2650003	ArrayIndexing	argv [ fileOffset ]		2649821	1					
ANR	2650004	Identifier	argv		2649821	0					
ANR	2650005	Identifier	fileOffset		2649821	1					
ANR	2650006	IdentifierDeclStatement	"int length = strtol ( argv [ fileOffset + 1 ] , NULL , 10 ) ;"	441:1:10501:10552	2649821	8	True				
ANR	2650007	IdentifierDecl	"length = strtol ( argv [ fileOffset + 1 ] , NULL , 10 )"		2649821	0					
ANR	2650008	IdentifierDeclType	int		2649821	0					
ANR	2650009	Identifier	length		2649821	1					
ANR	2650010	AssignmentExpression	"length = strtol ( argv [ fileOffset + 1 ] , NULL , 10 )"		2649821	2		=			
ANR	2650011	Identifier	length		2649821	0					
ANR	2650012	CallExpression	"strtol ( argv [ fileOffset + 1 ] , NULL , 10 )"		2649821	1					
ANR	2650013	Callee	strtol		2649821	0					
ANR	2650014	Identifier	strtol		2649821	0					
ANR	2650015	ArgumentList	argv [ fileOffset + 1 ]		2649821	1					
ANR	2650016	Argument	argv [ fileOffset + 1 ]		2649821	0					
ANR	2650017	ArrayIndexing	argv [ fileOffset + 1 ]		2649821	0					
ANR	2650018	Identifier	argv		2649821	0					
ANR	2650019	AdditiveExpression	fileOffset + 1		2649821	1		+			
ANR	2650020	Identifier	fileOffset		2649821	0					
ANR	2650021	PrimaryExpression	1		2649821	1					
ANR	2650022	Argument	NULL		2649821	1					
ANR	2650023	Identifier	NULL		2649821	0					
ANR	2650024	Argument	10		2649821	2					
ANR	2650025	PrimaryExpression	10		2649821	0					
ANR	2650026	IdentifierDeclStatement	struct chirp_client * client = 0 ;	443:1:10557:10588	2649821	9	True				
ANR	2650027	IdentifierDecl	* client = 0		2649821	0					
ANR	2650028	IdentifierDeclType	struct chirp_client *		2649821	0					
ANR	2650029	Identifier	client		2649821	1					
ANR	2650030	AssignmentExpression	* client = 0		2649821	2		=			
ANR	2650031	Identifier	client		2649821	0					
ANR	2650032	PrimaryExpression	0		2649821	1					
ANR	2650033	ExpressionStatement	CONNECT_STARTER ( client )	444:1:10591:10614	2649821	10	True				
ANR	2650034	CallExpression	CONNECT_STARTER ( client )		2649821	0					
ANR	2650035	Callee	CONNECT_STARTER		2649821	0					
ANR	2650036	Identifier	CONNECT_STARTER		2649821	0					
ANR	2650037	ArgumentList	client		2649821	1					
ANR	2650038	Argument	client		2649821	0					
ANR	2650039	Identifier	client		2649821	0					
ANR	2650040	IdentifierDeclStatement	"int fd = chirp_client_open ( client , path , ""r"" , 0 ) ;"	446:1:10618:10666	2649821	11	True				
ANR	2650041	IdentifierDecl	"fd = chirp_client_open ( client , path , ""r"" , 0 )"		2649821	0					
ANR	2650042	IdentifierDeclType	int		2649821	0					
ANR	2650043	Identifier	fd		2649821	1					
ANR	2650044	AssignmentExpression	"fd = chirp_client_open ( client , path , ""r"" , 0 )"		2649821	2		=			
ANR	2650045	Identifier	fd		2649821	0					
ANR	2650046	CallExpression	"chirp_client_open ( client , path , ""r"" , 0 )"		2649821	1					
ANR	2650047	Callee	chirp_client_open		2649821	0					
ANR	2650048	Identifier	chirp_client_open		2649821	0					
ANR	2650049	ArgumentList	client		2649821	1					
ANR	2650050	Argument	client		2649821	0					
ANR	2650051	Identifier	client		2649821	0					
ANR	2650052	Argument	path		2649821	1					
ANR	2650053	Identifier	path		2649821	0					
ANR	2650054	Argument	"""r"""		2649821	2					
ANR	2650055	PrimaryExpression	"""r"""		2649821	0					
ANR	2650056	Argument	0		2649821	3					
ANR	2650057	PrimaryExpression	0		2649821	0					
ANR	2650058	IfStatement	if ( fd < 0 )		2649821	12					
ANR	2650059	Condition	fd < 0	447:4:10672:10677	2649821	0	True				
ANR	2650060	RelationalExpression	fd < 0		2649821	0		<			
ANR	2650061	Identifier	fd		2649821	0					
ANR	2650062	PrimaryExpression	0		2649821	1					
ANR	2650063	CompoundStatement		40:12:919:919	2649821	1					
ANR	2650064	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , fd )"	448:2:10684:10717	2649821	0	True				
ANR	2650065	CallExpression	"DISCONNECT_AND_RETURN ( client , fd )"		2649821	0					
ANR	2650066	Callee	DISCONNECT_AND_RETURN		2649821	0					
ANR	2650067	Identifier	DISCONNECT_AND_RETURN		2649821	0					
ANR	2650068	ArgumentList	client		2649821	1					
ANR	2650069	Argument	client		2649821	0					
ANR	2650070	Identifier	client		2649821	0					
ANR	2650071	Argument	fd		2649821	1					
ANR	2650072	Identifier	fd		2649821	0					
ANR	2650073	IdentifierDeclStatement	void * buf = malloc ( length + 1 ) ;	450:1:10723:10751	2649821	13	True				
ANR	2650074	IdentifierDecl	* buf = malloc ( length + 1 )		2649821	0					
ANR	2650075	IdentifierDeclType	void *		2649821	0					
ANR	2650076	Identifier	buf		2649821	1					
ANR	2650077	AssignmentExpression	* buf = malloc ( length + 1 )		2649821	2		=			
ANR	2650078	Identifier	buf		2649821	0					
ANR	2650079	CallExpression	malloc ( length + 1 )		2649821	1					
ANR	2650080	Callee	malloc		2649821	0					
ANR	2650081	Identifier	malloc		2649821	0					
ANR	2650082	ArgumentList	length + 1		2649821	1					
ANR	2650083	Argument	length + 1		2649821	0					
ANR	2650084	AdditiveExpression	length + 1		2649821	0		+			
ANR	2650085	Identifier	length		2649821	0					
ANR	2650086	PrimaryExpression	1		2649821	1					
ANR	2650087	IdentifierDeclStatement	int ret_val = - 1 ;	452:1:10756:10772	2649821	14	True				
ANR	2650088	IdentifierDecl	ret_val = - 1		2649821	0					
ANR	2650089	IdentifierDeclType	int		2649821	0					
ANR	2650090	Identifier	ret_val		2649821	1					
ANR	2650091	AssignmentExpression	ret_val = - 1		2649821	2		=			
ANR	2650092	Identifier	ret_val		2649821	0					
ANR	2650093	UnaryOperationExpression	- 1		2649821	1					
ANR	2650094	UnaryOperator	-		2649821	0					
ANR	2650095	PrimaryExpression	1		2649821	1					
ANR	2650096	IfStatement	if ( offset == 0 && stride_length == 0 && stride_skip == 0 )		2649821	15					
ANR	2650097	Condition	offset == 0 && stride_length == 0 && stride_skip == 0	454:4:10791:10843	2649821	0	True				
ANR	2650098	AndExpression	offset == 0 && stride_length == 0 && stride_skip == 0		2649821	0		&&			
ANR	2650099	EqualityExpression	offset == 0		2649821	0		==			
ANR	2650100	Identifier	offset		2649821	0					
ANR	2650101	PrimaryExpression	0		2649821	1					
ANR	2650102	AndExpression	stride_length == 0 && stride_skip == 0		2649821	1		&&			
ANR	2650103	EqualityExpression	stride_length == 0		2649821	0		==			
ANR	2650104	Identifier	stride_length		2649821	0					
ANR	2650105	PrimaryExpression	0		2649821	1					
ANR	2650106	EqualityExpression	stride_skip == 0		2649821	1		==			
ANR	2650107	Identifier	stride_skip		2649821	0					
ANR	2650108	PrimaryExpression	0		2649821	1					
ANR	2650109	CompoundStatement		47:59:1085:1085	2649821	1					
ANR	2650110	ExpressionStatement	"ret_val = chirp_client_read ( client , fd , buf , length )"	455:2:10850:10902	2649821	0	True				
ANR	2650111	AssignmentExpression	"ret_val = chirp_client_read ( client , fd , buf , length )"		2649821	0		=			
ANR	2650112	Identifier	ret_val		2649821	0					
ANR	2650113	CallExpression	"chirp_client_read ( client , fd , buf , length )"		2649821	1					
ANR	2650114	Callee	chirp_client_read		2649821	0					
ANR	2650115	Identifier	chirp_client_read		2649821	0					
ANR	2650116	ArgumentList	client		2649821	1					
ANR	2650117	Argument	client		2649821	0					
ANR	2650118	Identifier	client		2649821	0					
ANR	2650119	Argument	fd		2649821	1					
ANR	2650120	Identifier	fd		2649821	0					
ANR	2650121	Argument	buf		2649821	2					
ANR	2650122	Identifier	buf		2649821	0					
ANR	2650123	Argument	length		2649821	3					
ANR	2650124	Identifier	length		2649821	0					
ANR	2650125	ElseStatement	else		2649821	0					
ANR	2650126	IfStatement	if ( offset != 0 && stride_length == 0 && stride_skip == 0 )		2649821	0					
ANR	2650127	Condition	offset != 0 && stride_length == 0 && stride_skip == 0	458:9:10930:10982	2649821	0	True				
ANR	2650128	AndExpression	offset != 0 && stride_length == 0 && stride_skip == 0		2649821	0		&&			
ANR	2650129	EqualityExpression	offset != 0		2649821	0		!=			
ANR	2650130	Identifier	offset		2649821	0					
ANR	2650131	PrimaryExpression	0		2649821	1					
ANR	2650132	AndExpression	stride_length == 0 && stride_skip == 0		2649821	1		&&			
ANR	2650133	EqualityExpression	stride_length == 0		2649821	0		==			
ANR	2650134	Identifier	stride_length		2649821	0					
ANR	2650135	PrimaryExpression	0		2649821	1					
ANR	2650136	EqualityExpression	stride_skip == 0		2649821	1		==			
ANR	2650137	Identifier	stride_skip		2649821	0					
ANR	2650138	PrimaryExpression	0		2649821	1					
ANR	2650139	CompoundStatement		51:64:1224:1224	2649821	1					
ANR	2650140	ExpressionStatement	"ret_val = chirp_client_pread ( client , fd , buf , length , offset )"	459:2:10989:11050	2649821	0	True				
ANR	2650141	AssignmentExpression	"ret_val = chirp_client_pread ( client , fd , buf , length , offset )"		2649821	0		=			
ANR	2650142	Identifier	ret_val		2649821	0					
ANR	2650143	CallExpression	"chirp_client_pread ( client , fd , buf , length , offset )"		2649821	1					
ANR	2650144	Callee	chirp_client_pread		2649821	0					
ANR	2650145	Identifier	chirp_client_pread		2649821	0					
ANR	2650146	ArgumentList	client		2649821	1					
ANR	2650147	Argument	client		2649821	0					
ANR	2650148	Identifier	client		2649821	0					
ANR	2650149	Argument	fd		2649821	1					
ANR	2650150	Identifier	fd		2649821	0					
ANR	2650151	Argument	buf		2649821	2					
ANR	2650152	Identifier	buf		2649821	0					
ANR	2650153	Argument	length		2649821	3					
ANR	2650154	Identifier	length		2649821	0					
ANR	2650155	Argument	offset		2649821	4					
ANR	2650156	Identifier	offset		2649821	0					
ANR	2650157	ElseStatement	else		2649821	0					
ANR	2650158	CompoundStatement		55:6:1314:1314	2649821	0					
ANR	2650159	ExpressionStatement	"ret_val = chirp_client_sread ( client , fd , buf , length , offset , stride_length , stride_skip )"	463:2:11079:11171	2649821	0	True				
ANR	2650160	AssignmentExpression	"ret_val = chirp_client_sread ( client , fd , buf , length , offset , stride_length , stride_skip )"		2649821	0		=			
ANR	2650161	Identifier	ret_val		2649821	0					
ANR	2650162	CallExpression	"chirp_client_sread ( client , fd , buf , length , offset , stride_length , stride_skip )"		2649821	1					
ANR	2650163	Callee	chirp_client_sread		2649821	0					
ANR	2650164	Identifier	chirp_client_sread		2649821	0					
ANR	2650165	ArgumentList	client		2649821	1					
ANR	2650166	Argument	client		2649821	0					
ANR	2650167	Identifier	client		2649821	0					
ANR	2650168	Argument	fd		2649821	1					
ANR	2650169	Identifier	fd		2649821	0					
ANR	2650170	Argument	buf		2649821	2					
ANR	2650171	Identifier	buf		2649821	0					
ANR	2650172	Argument	length		2649821	3					
ANR	2650173	Identifier	length		2649821	0					
ANR	2650174	Argument	offset		2649821	4					
ANR	2650175	Identifier	offset		2649821	0					
ANR	2650176	Argument	stride_length		2649821	5					
ANR	2650177	Identifier	stride_length		2649821	0					
ANR	2650178	Argument	stride_skip		2649821	6					
ANR	2650179	Identifier	stride_skip		2649821	0					
ANR	2650180	IfStatement	if ( ret_val >= 0 )		2649821	16					
ANR	2650181	Condition	ret_val >= 0	467:4:11181:11192	2649821	0	True				
ANR	2650182	RelationalExpression	ret_val >= 0		2649821	0		>=			
ANR	2650183	Identifier	ret_val		2649821	0					
ANR	2650184	PrimaryExpression	0		2649821	1					
ANR	2650185	CompoundStatement		61:2:1438:1465	2649821	1					
ANR	2650186	IdentifierDeclStatement	char * to_print = ( char * ) buf ;	468:2:11199:11226	2649821	0	True				
ANR	2650187	IdentifierDecl	* to_print = ( char * ) buf		2649821	0					
ANR	2650188	IdentifierDeclType	char *		2649821	0					
ANR	2650189	Identifier	to_print		2649821	1					
ANR	2650190	AssignmentExpression	* to_print = ( char * ) buf		2649821	2		=			
ANR	2650191	Identifier	to_print		2649821	0					
ANR	2650192	CastExpression	( char * ) buf		2649821	1					
ANR	2650193	CastTarget	char *		2649821	0					
ANR	2650194	Identifier	buf		2649821	1					
ANR	2650195	ExpressionStatement	to_print [ length ] = '\\0'	469:2:11230:11253	2649821	1	True				
ANR	2650196	AssignmentExpression	to_print [ length ] = '\\0'		2649821	0		=			
ANR	2650197	ArrayIndexing	to_print [ length ]		2649821	0					
ANR	2650198	Identifier	to_print		2649821	0					
ANR	2650199	Identifier	length		2649821	1					
ANR	2650200	PrimaryExpression	'\\0'		2649821	1					
ANR	2650201	ExpressionStatement	"printf ( ""%s\\n"" , to_print )"	470:2:11257:11281	2649821	2	True				
ANR	2650202	CallExpression	"printf ( ""%s\\n"" , to_print )"		2649821	0					
ANR	2650203	Callee	printf		2649821	0					
ANR	2650204	Identifier	printf		2649821	0					
ANR	2650205	ArgumentList	"""%s\\n"""		2649821	1					
ANR	2650206	Argument	"""%s\\n"""		2649821	0					
ANR	2650207	PrimaryExpression	"""%s\\n"""		2649821	0					
ANR	2650208	Argument	to_print		2649821	1					
ANR	2650209	Identifier	to_print		2649821	0					
ANR	2650210	ExpressionStatement	free ( buf )	473:1:11288:11297	2649821	17	True				
ANR	2650211	CallExpression	free ( buf )		2649821	0					
ANR	2650212	Callee	free		2649821	0					
ANR	2650213	Identifier	free		2649821	0					
ANR	2650214	ArgumentList	buf		2649821	1					
ANR	2650215	Argument	buf		2649821	0					
ANR	2650216	Identifier	buf		2649821	0					
ANR	2650217	ExpressionStatement	"CLOSE_DISCONNECT_AND_RETURN ( client , fd , ret_val )"	474:1:11300:11348	2649821	18	True				
ANR	2650218	CallExpression	"CLOSE_DISCONNECT_AND_RETURN ( client , fd , ret_val )"		2649821	0					
ANR	2650219	Callee	CLOSE_DISCONNECT_AND_RETURN		2649821	0					
ANR	2650220	Identifier	CLOSE_DISCONNECT_AND_RETURN		2649821	0					
ANR	2650221	ArgumentList	client		2649821	1					
ANR	2650222	Argument	client		2649821	0					
ANR	2650223	Identifier	client		2649821	0					
ANR	2650224	Argument	fd		2649821	1					
ANR	2650225	Identifier	fd		2649821	0					
ANR	2650226	Argument	ret_val		2649821	2					
ANR	2650227	Identifier	ret_val		2649821	0					
ANR	2650228	ReturnType	int		2649821	1					
ANR	2650229	Identifier	chirp_read		2649821	2					
ANR	2650230	ParameterList	"int argc , char * * argv"		2649821	3					
ANR	2650231	Parameter	int argc	408:15:9737:9744	2649821	0	True				
ANR	2650232	ParameterType	int		2649821	0					
ANR	2650233	Identifier	argc		2649821	1					
ANR	2650234	Parameter	char * * argv	408:25:9747:9757	2649821	1	True				
ANR	2650235	ParameterType	char * *		2649821	0					
ANR	2650236	Identifier	argv		2649821	1					
ANR	2650237	CFGEntryNode	ENTRY		2649821		True				
ANR	2650238	CFGExitNode	EXIT		2649821		True				
ANR	2650239	Symbol	* argv		2649821						
ANR	2650240	Symbol	argv		2649821						
ANR	2650241	Symbol	path		2649821						
ANR	2650242	Symbol	strtol		2649821						
ANR	2650243	Symbol	client		2649821						
ANR	2650244	Symbol	* length		2649821						
ANR	2650245	Symbol	argc		2649821						
ANR	2650246	Symbol	strcmp		2649821						
ANR	2650247	Symbol	malloc		2649821						
ANR	2650248	Symbol	NULL		2649821						
ANR	2650249	Symbol	offset		2649821						
ANR	2650250	Symbol	* fileOffset		2649821						
ANR	2650251	Symbol	more		2649821						
ANR	2650252	Symbol	false		2649821						
ANR	2650253	Symbol	length		2649821						
ANR	2650254	Symbol	fileOffset		2649821						
ANR	2650255	Symbol	ret_val		2649821						
ANR	2650256	Symbol	* to_print		2649821						
ANR	2650257	Symbol	stride_length		2649821						
ANR	2650258	Symbol	to_print		2649821						
ANR	2650259	Symbol	buf		2649821						
ANR	2650260	Symbol	stride_skip		2649821						
ANR	2650261	Symbol	chirp_client_read		2649821						
ANR	2650262	Symbol	chirp_client_pread		2649821						
ANR	2650263	Symbol	chirp_client_sread		2649821						
ANR	2650264	Symbol	true		2649821						
ANR	2650265	Symbol	chirp_client_open		2649821						
ANR	2650266	Symbol	fd		2649821						
ANR	2650267	Function	chirp_write	478:0:11355:13751							
ANR	2650268	FunctionDef	"chirp_write (int argc , char * * argv)"		2650267	0					
ANR	2650269	CompoundStatement		478:39:11394:13751	2650267	0					
ANR	2650270	IdentifierDeclStatement	int fileOffset = 2 ;	479:1:11397:11415	2650267	0	True				
ANR	2650271	IdentifierDecl	fileOffset = 2		2650267	0					
ANR	2650272	IdentifierDeclType	int		2650267	0					
ANR	2650273	Identifier	fileOffset		2650267	1					
ANR	2650274	AssignmentExpression	fileOffset = 2		2650267	2		=			
ANR	2650275	Identifier	fileOffset		2650267	0					
ANR	2650276	PrimaryExpression	2		2650267	1					
ANR	2650277	IdentifierDeclStatement	int offset = 0 ;	480:1:11418:11432	2650267	1	True				
ANR	2650278	IdentifierDecl	offset = 0		2650267	0					
ANR	2650279	IdentifierDeclType	int		2650267	0					
ANR	2650280	Identifier	offset		2650267	1					
ANR	2650281	AssignmentExpression	offset = 0		2650267	2		=			
ANR	2650282	Identifier	offset		2650267	0					
ANR	2650283	PrimaryExpression	0		2650267	1					
ANR	2650284	IdentifierDeclStatement	int stride_length = 0 ;	481:1:11435:11456	2650267	2	True				
ANR	2650285	IdentifierDecl	stride_length = 0		2650267	0					
ANR	2650286	IdentifierDeclType	int		2650267	0					
ANR	2650287	Identifier	stride_length		2650267	1					
ANR	2650288	AssignmentExpression	stride_length = 0		2650267	2		=			
ANR	2650289	Identifier	stride_length		2650267	0					
ANR	2650290	PrimaryExpression	0		2650267	1					
ANR	2650291	IdentifierDeclStatement	int stride_skip = 0 ;	482:1:11459:11478	2650267	3	True				
ANR	2650292	IdentifierDecl	stride_skip = 0		2650267	0					
ANR	2650293	IdentifierDeclType	int		2650267	0					
ANR	2650294	Identifier	stride_skip		2650267	1					
ANR	2650295	AssignmentExpression	stride_skip = 0		2650267	2		=			
ANR	2650296	Identifier	stride_skip		2650267	0					
ANR	2650297	PrimaryExpression	0		2650267	1					
ANR	2650298	IdentifierDeclStatement	bool more = true ;	484:1:11483:11499	2650267	4	True				
ANR	2650299	IdentifierDecl	more = true		2650267	0					
ANR	2650300	IdentifierDeclType	bool		2650267	0					
ANR	2650301	Identifier	more		2650267	1					
ANR	2650302	AssignmentExpression	more = true		2650267	2		=			
ANR	2650303	Identifier	true		2650267	0					
ANR	2650304	Identifier	true		2650267	1					
ANR	2650305	WhileStatement	while ( more && fileOffset + 1 < argc )		2650267	5					
ANR	2650306	Condition	more && fileOffset + 1 < argc	485:8:11509:11537	2650267	0	True				
ANR	2650307	AndExpression	more && fileOffset + 1 < argc		2650267	0		&&			
ANR	2650308	Identifier	more		2650267	0					
ANR	2650309	RelationalExpression	fileOffset + 1 < argc		2650267	1		<			
ANR	2650310	AdditiveExpression	fileOffset + 1		2650267	0		+			
ANR	2650311	Identifier	fileOffset		2650267	0					
ANR	2650312	PrimaryExpression	1		2650267	1					
ANR	2650313	Identifier	argc		2650267	1					
ANR	2650314	CompoundStatement		8:39:145:145	2650267	1					
ANR	2650315	IfStatement	"if ( strcmp ( argv [ fileOffset ] , ""-offset"" ) == 0 )"		2650267	0					
ANR	2650316	Condition	"strcmp ( argv [ fileOffset ] , ""-offset"" ) == 0"	487:6:11549:11588	2650267	0	True				
ANR	2650317	EqualityExpression	"strcmp ( argv [ fileOffset ] , ""-offset"" ) == 0"		2650267	0		==			
ANR	2650318	CallExpression	"strcmp ( argv [ fileOffset ] , ""-offset"" )"		2650267	0					
ANR	2650319	Callee	strcmp		2650267	0					
ANR	2650320	Identifier	strcmp		2650267	0					
ANR	2650321	ArgumentList	argv [ fileOffset ]		2650267	1					
ANR	2650322	Argument	argv [ fileOffset ]		2650267	0					
ANR	2650323	ArrayIndexing	argv [ fileOffset ]		2650267	0					
ANR	2650324	Identifier	argv		2650267	0					
ANR	2650325	Identifier	fileOffset		2650267	1					
ANR	2650326	Argument	"""-offset"""		2650267	1					
ANR	2650327	PrimaryExpression	"""-offset"""		2650267	0					
ANR	2650328	PrimaryExpression	0		2650267	1					
ANR	2650329	CompoundStatement		10:48:196:196	2650267	1					
ANR	2650330	ExpressionStatement	"offset = strtol ( argv [ fileOffset + 1 ] , NULL , 10 )"	488:3:11596:11643	2650267	0	True				
ANR	2650331	AssignmentExpression	"offset = strtol ( argv [ fileOffset + 1 ] , NULL , 10 )"		2650267	0		=			
ANR	2650332	Identifier	offset		2650267	0					
ANR	2650333	CallExpression	"strtol ( argv [ fileOffset + 1 ] , NULL , 10 )"		2650267	1					
ANR	2650334	Callee	strtol		2650267	0					
ANR	2650335	Identifier	strtol		2650267	0					
ANR	2650336	ArgumentList	argv [ fileOffset + 1 ]		2650267	1					
ANR	2650337	Argument	argv [ fileOffset + 1 ]		2650267	0					
ANR	2650338	ArrayIndexing	argv [ fileOffset + 1 ]		2650267	0					
ANR	2650339	Identifier	argv		2650267	0					
ANR	2650340	AdditiveExpression	fileOffset + 1		2650267	1		+			
ANR	2650341	Identifier	fileOffset		2650267	0					
ANR	2650342	PrimaryExpression	1		2650267	1					
ANR	2650343	Argument	NULL		2650267	1					
ANR	2650344	Identifier	NULL		2650267	0					
ANR	2650345	Argument	10		2650267	2					
ANR	2650346	PrimaryExpression	10		2650267	0					
ANR	2650347	ExpressionStatement	fileOffset += 2	489:3:11648:11663	2650267	1	True				
ANR	2650348	AssignmentExpression	fileOffset += 2		2650267	0		+=			
ANR	2650349	Identifier	fileOffset		2650267	0					
ANR	2650350	PrimaryExpression	2		2650267	1					
ANR	2650351	ExpressionStatement	more = true	490:3:11668:11679	2650267	2	True				
ANR	2650352	AssignmentExpression	more = true		2650267	0		=			
ANR	2650353	Identifier	more		2650267	0					
ANR	2650354	Identifier	true		2650267	1					
ANR	2650355	ElseStatement	else		2650267	0					
ANR	2650356	IfStatement	"if ( strcmp ( argv [ fileOffset ] , ""-stride"" ) == 0 && fileOffset + 2 < argc )"		2650267	0					
ANR	2650357	Condition	"strcmp ( argv [ fileOffset ] , ""-stride"" ) == 0 && fileOffset + 2 < argc"	492:11:11696:11765	2650267	0	True				
ANR	2650358	AndExpression	"strcmp ( argv [ fileOffset ] , ""-stride"" ) == 0 && fileOffset + 2 < argc"		2650267	0		&&			
ANR	2650359	EqualityExpression	"strcmp ( argv [ fileOffset ] , ""-stride"" ) == 0"		2650267	0		==			
ANR	2650360	CallExpression	"strcmp ( argv [ fileOffset ] , ""-stride"" )"		2650267	0					
ANR	2650361	Callee	strcmp		2650267	0					
ANR	2650362	Identifier	strcmp		2650267	0					
ANR	2650363	ArgumentList	argv [ fileOffset ]		2650267	1					
ANR	2650364	Argument	argv [ fileOffset ]		2650267	0					
ANR	2650365	ArrayIndexing	argv [ fileOffset ]		2650267	0					
ANR	2650366	Identifier	argv		2650267	0					
ANR	2650367	Identifier	fileOffset		2650267	1					
ANR	2650368	Argument	"""-stride"""		2650267	1					
ANR	2650369	PrimaryExpression	"""-stride"""		2650267	0					
ANR	2650370	PrimaryExpression	0		2650267	1					
ANR	2650371	RelationalExpression	fileOffset + 2 < argc		2650267	1		<			
ANR	2650372	AdditiveExpression	fileOffset + 2		2650267	0		+			
ANR	2650373	Identifier	fileOffset		2650267	0					
ANR	2650374	PrimaryExpression	2		2650267	1					
ANR	2650375	Identifier	argc		2650267	1					
ANR	2650376	CompoundStatement		16:31:373:373	2650267	1					
ANR	2650377	ExpressionStatement	"stride_length = strtol ( argv [ fileOffset + 1 ] , NULL , 10 )"	494:3:11773:11827	2650267	0	True				
ANR	2650378	AssignmentExpression	"stride_length = strtol ( argv [ fileOffset + 1 ] , NULL , 10 )"		2650267	0		=			
ANR	2650379	Identifier	stride_length		2650267	0					
ANR	2650380	CallExpression	"strtol ( argv [ fileOffset + 1 ] , NULL , 10 )"		2650267	1					
ANR	2650381	Callee	strtol		2650267	0					
ANR	2650382	Identifier	strtol		2650267	0					
ANR	2650383	ArgumentList	argv [ fileOffset + 1 ]		2650267	1					
ANR	2650384	Argument	argv [ fileOffset + 1 ]		2650267	0					
ANR	2650385	ArrayIndexing	argv [ fileOffset + 1 ]		2650267	0					
ANR	2650386	Identifier	argv		2650267	0					
ANR	2650387	AdditiveExpression	fileOffset + 1		2650267	1		+			
ANR	2650388	Identifier	fileOffset		2650267	0					
ANR	2650389	PrimaryExpression	1		2650267	1					
ANR	2650390	Argument	NULL		2650267	1					
ANR	2650391	Identifier	NULL		2650267	0					
ANR	2650392	Argument	10		2650267	2					
ANR	2650393	PrimaryExpression	10		2650267	0					
ANR	2650394	ExpressionStatement	"stride_skip = strtol ( argv [ fileOffset + 2 ] , NULL , 10 )"	495:3:11832:11884	2650267	1	True				
ANR	2650395	AssignmentExpression	"stride_skip = strtol ( argv [ fileOffset + 2 ] , NULL , 10 )"		2650267	0		=			
ANR	2650396	Identifier	stride_skip		2650267	0					
ANR	2650397	CallExpression	"strtol ( argv [ fileOffset + 2 ] , NULL , 10 )"		2650267	1					
ANR	2650398	Callee	strtol		2650267	0					
ANR	2650399	Identifier	strtol		2650267	0					
ANR	2650400	ArgumentList	argv [ fileOffset + 2 ]		2650267	1					
ANR	2650401	Argument	argv [ fileOffset + 2 ]		2650267	0					
ANR	2650402	ArrayIndexing	argv [ fileOffset + 2 ]		2650267	0					
ANR	2650403	Identifier	argv		2650267	0					
ANR	2650404	AdditiveExpression	fileOffset + 2		2650267	1		+			
ANR	2650405	Identifier	fileOffset		2650267	0					
ANR	2650406	PrimaryExpression	2		2650267	1					
ANR	2650407	Argument	NULL		2650267	1					
ANR	2650408	Identifier	NULL		2650267	0					
ANR	2650409	Argument	10		2650267	2					
ANR	2650410	PrimaryExpression	10		2650267	0					
ANR	2650411	ExpressionStatement	fileOffset += 3	496:3:11889:11904	2650267	2	True				
ANR	2650412	AssignmentExpression	fileOffset += 3		2650267	0		+=			
ANR	2650413	Identifier	fileOffset		2650267	0					
ANR	2650414	PrimaryExpression	3		2650267	1					
ANR	2650415	ExpressionStatement	more = true	497:3:11909:11920	2650267	3	True				
ANR	2650416	AssignmentExpression	more = true		2650267	0		=			
ANR	2650417	Identifier	more		2650267	0					
ANR	2650418	Identifier	true		2650267	1					
ANR	2650419	ElseStatement	else		2650267	0					
ANR	2650420	CompoundStatement		22:7:538:538	2650267	0					
ANR	2650421	ExpressionStatement	more = false	500:3:11938:11950	2650267	0	True				
ANR	2650422	AssignmentExpression	more = false		2650267	0		=			
ANR	2650423	Identifier	more		2650267	0					
ANR	2650424	Identifier	false		2650267	1					
ANR	2650425	IfStatement	if ( fileOffset + 2 != argc )		2650267	6					
ANR	2650426	Condition	fileOffset + 2 != argc	504:4:11964:11985	2650267	0	True				
ANR	2650427	EqualityExpression	fileOffset + 2 != argc		2650267	0		!=			
ANR	2650428	AdditiveExpression	fileOffset + 2		2650267	0		+			
ANR	2650429	Identifier	fileOffset		2650267	0					
ANR	2650430	PrimaryExpression	2		2650267	1					
ANR	2650431	Identifier	argc		2650267	1					
ANR	2650432	CompoundStatement		27:28:593:593	2650267	1					
ANR	2650433	Statement	printf	505:2:11992:11997	2650267	0	True				
ANR	2650434	Statement	(	505:8:11998:11998	2650267	1	True				
ANR	2650435	Statement	"""condor_chirp write [-offset offset] [-stride length skip] """	505:9:11999:12058	2650267	2	True				
ANR	2650436	Statement	"""remote_file local_file\\n"""	506:3:12063:12088	2650267	3	True				
ANR	2650437	Statement	)	506:29:12089:12089	2650267	4	True				
ANR	2650438	ExpressionStatement		506:30:12090:12090	2650267	5	True				
ANR	2650439	ReturnStatement	return - 1 ;	507:2:12094:12103	2650267	6	True				
ANR	2650440	UnaryOperationExpression	- 1		2650267	0					
ANR	2650441	UnaryOperator	-		2650267	0					
ANR	2650442	PrimaryExpression	1		2650267	1					
ANR	2650443	IdentifierDeclStatement	char * remote_file = argv [ fileOffset ] ;	509:1:12109:12145	2650267	7	True				
ANR	2650444	IdentifierDecl	* remote_file = argv [ fileOffset ]		2650267	0					
ANR	2650445	IdentifierDeclType	char *		2650267	0					
ANR	2650446	Identifier	remote_file		2650267	1					
ANR	2650447	AssignmentExpression	* remote_file = argv [ fileOffset ]		2650267	2		=			
ANR	2650448	Identifier	remote_file		2650267	0					
ANR	2650449	ArrayIndexing	argv [ fileOffset ]		2650267	1					
ANR	2650450	Identifier	argv		2650267	0					
ANR	2650451	Identifier	fileOffset		2650267	1					
ANR	2650452	IdentifierDeclStatement	char * local_file = argv [ fileOffset + 1 ] ;	510:1:12148:12185	2650267	8	True				
ANR	2650453	IdentifierDecl	* local_file = argv [ fileOffset + 1 ]		2650267	0					
ANR	2650454	IdentifierDeclType	char *		2650267	0					
ANR	2650455	Identifier	local_file		2650267	1					
ANR	2650456	AssignmentExpression	* local_file = argv [ fileOffset + 1 ]		2650267	2		=			
ANR	2650457	Identifier	local_file		2650267	0					
ANR	2650458	ArrayIndexing	argv [ fileOffset + 1 ]		2650267	1					
ANR	2650459	Identifier	argv		2650267	0					
ANR	2650460	AdditiveExpression	fileOffset + 1		2650267	1		+			
ANR	2650461	Identifier	fileOffset		2650267	0					
ANR	2650462	PrimaryExpression	1		2650267	1					
ANR	2650463	IdentifierDeclStatement	struct chirp_client * client = 0 ;	512:1:12189:12220	2650267	9	True				
ANR	2650464	IdentifierDecl	* client = 0		2650267	0					
ANR	2650465	IdentifierDeclType	struct chirp_client *		2650267	0					
ANR	2650466	Identifier	client		2650267	1					
ANR	2650467	AssignmentExpression	* client = 0		2650267	2		=			
ANR	2650468	Identifier	client		2650267	0					
ANR	2650469	PrimaryExpression	0		2650267	1					
ANR	2650470	ExpressionStatement	CONNECT_STARTER ( client )	513:1:12223:12246	2650267	10	True				
ANR	2650471	CallExpression	CONNECT_STARTER ( client )		2650267	0					
ANR	2650472	Callee	CONNECT_STARTER		2650267	0					
ANR	2650473	Identifier	CONNECT_STARTER		2650267	0					
ANR	2650474	ArgumentList	client		2650267	1					
ANR	2650475	Argument	client		2650267	0					
ANR	2650476	Identifier	client		2650267	0					
ANR	2650477	IdentifierDeclStatement	"int num_read = 0 , num_written = 0 , size = 0 , add = 0 ;"	515:1:12250:12302	2650267	11	True				
ANR	2650478	IdentifierDecl	num_read = 0		2650267	0					
ANR	2650479	IdentifierDeclType	int		2650267	0					
ANR	2650480	Identifier	num_read		2650267	1					
ANR	2650481	AssignmentExpression	num_read = 0		2650267	2		=			
ANR	2650482	Identifier	num_read		2650267	0					
ANR	2650483	PrimaryExpression	0		2650267	1					
ANR	2650484	IdentifierDecl	num_written = 0		2650267	1					
ANR	2650485	IdentifierDeclType	int		2650267	0					
ANR	2650486	Identifier	num_written		2650267	1					
ANR	2650487	AssignmentExpression	num_written = 0		2650267	2		=			
ANR	2650488	Identifier	num_written		2650267	0					
ANR	2650489	PrimaryExpression	0		2650267	1					
ANR	2650490	IdentifierDecl	size = 0		2650267	2					
ANR	2650491	IdentifierDeclType	int		2650267	0					
ANR	2650492	Identifier	size		2650267	1					
ANR	2650493	AssignmentExpression	size = 0		2650267	2		=			
ANR	2650494	Identifier	size		2650267	0					
ANR	2650495	PrimaryExpression	0		2650267	1					
ANR	2650496	IdentifierDecl	add = 0		2650267	3					
ANR	2650497	IdentifierDeclType	int		2650267	0					
ANR	2650498	Identifier	add		2650267	1					
ANR	2650499	AssignmentExpression	add = 0		2650267	2		=			
ANR	2650500	Identifier	add		2650267	0					
ANR	2650501	PrimaryExpression	0		2650267	1					
ANR	2650502	IdentifierDeclStatement	FILE * rfd ;	516:1:12305:12314	2650267	12	True				
ANR	2650503	IdentifierDecl	* rfd		2650267	0					
ANR	2650504	IdentifierDeclType	FILE *		2650267	0					
ANR	2650505	Identifier	rfd		2650267	1					
ANR	2650506	IdentifierDeclStatement	char * buf ;	517:1:12317:12326	2650267	13	True				
ANR	2650507	IdentifierDecl	* buf		2650267	0					
ANR	2650508	IdentifierDeclType	char *		2650267	0					
ANR	2650509	Identifier	buf		2650267	1					
ANR	2650510	IfStatement	if ( stride_length != 0 || stride_skip != 0 )		2650267	14					
ANR	2650511	Condition	stride_length != 0 || stride_skip != 0	519:4:12333:12370	2650267	0	True				
ANR	2650512	OrExpression	stride_length != 0 || stride_skip != 0		2650267	0		||			
ANR	2650513	EqualityExpression	stride_length != 0		2650267	0		!=			
ANR	2650514	Identifier	stride_length		2650267	0					
ANR	2650515	PrimaryExpression	0		2650267	1					
ANR	2650516	EqualityExpression	stride_skip != 0		2650267	1		!=			
ANR	2650517	Identifier	stride_skip		2650267	0					
ANR	2650518	PrimaryExpression	0		2650267	1					
ANR	2650519	CompoundStatement		42:44:978:978	2650267	1					
ANR	2650520	ExpressionStatement	size = stride_length	520:2:12377:12397	2650267	0	True				
ANR	2650521	AssignmentExpression	size = stride_length		2650267	0		=			
ANR	2650522	Identifier	size		2650267	0					
ANR	2650523	Identifier	stride_length		2650267	1					
ANR	2650524	ElseStatement	else		2650267	0					
ANR	2650525	CompoundStatement		44:8:1012:1012	2650267	0					
ANR	2650526	ExpressionStatement	size = 1024	522:2:12411:12422	2650267	0	True				
ANR	2650527	AssignmentExpression	size = 1024		2650267	0		=			
ANR	2650528	Identifier	size		2650267	0					
ANR	2650529	PrimaryExpression	1024		2650267	1					
ANR	2650530	ExpressionStatement	buf = ( char * ) malloc ( size )	524:1:12428:12453	2650267	15	True				
ANR	2650531	AssignmentExpression	buf = ( char * ) malloc ( size )		2650267	0		=			
ANR	2650532	Identifier	buf		2650267	0					
ANR	2650533	CastExpression	( char * ) malloc ( size )		2650267	1					
ANR	2650534	CastTarget	char *		2650267	0					
ANR	2650535	CallExpression	malloc ( size )		2650267	1					
ANR	2650536	Callee	malloc		2650267	0					
ANR	2650537	Identifier	malloc		2650267	0					
ANR	2650538	ArgumentList	size		2650267	1					
ANR	2650539	Argument	size		2650267	0					
ANR	2650540	Identifier	size		2650267	0					
ANR	2650541	IfStatement	"if ( strcmp ( local_file , ""-"" ) == 0 )"		2650267	16					
ANR	2650542	Condition	"strcmp ( local_file , ""-"" ) == 0"	527:5:12493:12520	2650267	0	True				
ANR	2650543	EqualityExpression	"strcmp ( local_file , ""-"" ) == 0"		2650267	0		==			
ANR	2650544	CallExpression	"strcmp ( local_file , ""-"" )"		2650267	0					
ANR	2650545	Callee	strcmp		2650267	0					
ANR	2650546	Identifier	strcmp		2650267	0					
ANR	2650547	ArgumentList	local_file		2650267	1					
ANR	2650548	Argument	local_file		2650267	0					
ANR	2650549	Identifier	local_file		2650267	0					
ANR	2650550	Argument	"""-"""		2650267	1					
ANR	2650551	PrimaryExpression	"""-"""		2650267	0					
ANR	2650552	PrimaryExpression	0		2650267	1					
ANR	2650553	CompoundStatement		50:35:1128:1128	2650267	1					
ANR	2650554	ExpressionStatement	rfd = stdin	528:2:12527:12538	2650267	0	True				
ANR	2650555	AssignmentExpression	rfd = stdin		2650267	0		=			
ANR	2650556	Identifier	rfd		2650267	0					
ANR	2650557	Identifier	stdin		2650267	1					
ANR	2650558	ElseStatement	else		2650267	0					
ANR	2650559	CompoundStatement		52:8:1153:1153	2650267	0					
ANR	2650560	Statement	rfd	530:2:12552:12554	2650267	0	True				
ANR	2650561	Statement	=	530:6:12556:12556	2650267	1	True				
ANR	2650562	Statement	::	530:8:12558:12559	2650267	2	True				
ANR	2650563	ExpressionStatement	"safe_fopen_wrapper_follow ( local_file , ""rb"" )"	530:10:12560:12603	2650267	3	True				
ANR	2650564	CallExpression	"safe_fopen_wrapper_follow ( local_file , ""rb"" )"		2650267	0					
ANR	2650565	Callee	safe_fopen_wrapper_follow		2650267	0					
ANR	2650566	Identifier	safe_fopen_wrapper_follow		2650267	0					
ANR	2650567	ArgumentList	local_file		2650267	1					
ANR	2650568	Argument	local_file		2650267	0					
ANR	2650569	Identifier	local_file		2650267	0					
ANR	2650570	Argument	"""rb"""		2650267	1					
ANR	2650571	PrimaryExpression	"""rb"""		2650267	0					
ANR	2650572	IfStatement	if ( ! rfd )		2650267	4					
ANR	2650573	Condition	! rfd	531:6:12611:12614	2650267	0	True				
ANR	2650574	UnaryOperationExpression	! rfd		2650267	0					
ANR	2650575	UnaryOperator	!		2650267	0					
ANR	2650576	Identifier	rfd		2650267	1					
ANR	2650577	CompoundStatement		54:12:1222:1222	2650267	1					
ANR	2650578	ExpressionStatement	free ( ( char * ) buf )	532:3:12622:12638	2650267	0	True				
ANR	2650579	CallExpression	free ( ( char * ) buf )		2650267	0					
ANR	2650580	Callee	free		2650267	0					
ANR	2650581	Identifier	free		2650267	0					
ANR	2650582	ArgumentList	( char * ) buf		2650267	1					
ANR	2650583	Argument	( char * ) buf		2650267	0					
ANR	2650584	CastExpression	( char * ) buf		2650267	0					
ANR	2650585	CastTarget	char *		2650267	0					
ANR	2650586	Identifier	buf		2650267	1					
ANR	2650587	ExpressionStatement	"fprintf ( stderr , ""Can't open local file %s\\n"" , local_file )"	533:3:12643:12700	2650267	1	True				
ANR	2650588	CallExpression	"fprintf ( stderr , ""Can't open local file %s\\n"" , local_file )"		2650267	0					
ANR	2650589	Callee	fprintf		2650267	0					
ANR	2650590	Identifier	fprintf		2650267	0					
ANR	2650591	ArgumentList	stderr		2650267	1					
ANR	2650592	Argument	stderr		2650267	0					
ANR	2650593	Identifier	stderr		2650267	0					
ANR	2650594	Argument	"""Can't open local file %s\\n"""		2650267	1					
ANR	2650595	PrimaryExpression	"""Can't open local file %s\\n"""		2650267	0					
ANR	2650596	Argument	local_file		2650267	2					
ANR	2650597	Identifier	local_file		2650267	0					
ANR	2650598	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , - 1 )"	534:3:12705:12738	2650267	2	True				
ANR	2650599	CallExpression	"DISCONNECT_AND_RETURN ( client , - 1 )"		2650267	0					
ANR	2650600	Callee	DISCONNECT_AND_RETURN		2650267	0					
ANR	2650601	Identifier	DISCONNECT_AND_RETURN		2650267	0					
ANR	2650602	ArgumentList	client		2650267	1					
ANR	2650603	Argument	client		2650267	0					
ANR	2650604	Identifier	client		2650267	0					
ANR	2650605	Argument	- 1		2650267	1					
ANR	2650606	UnaryOperationExpression	- 1		2650267	0					
ANR	2650607	UnaryOperator	-		2650267	0					
ANR	2650608	PrimaryExpression	1		2650267	1					
ANR	2650609	IdentifierDeclStatement	"int fd = chirp_client_open ( client , remote_file , ""w"" , 0 ) ;"	539:1:12776:12831	2650267	17	True				
ANR	2650610	IdentifierDecl	"fd = chirp_client_open ( client , remote_file , ""w"" , 0 )"		2650267	0					
ANR	2650611	IdentifierDeclType	int		2650267	0					
ANR	2650612	Identifier	fd		2650267	1					
ANR	2650613	AssignmentExpression	"fd = chirp_client_open ( client , remote_file , ""w"" , 0 )"		2650267	2		=			
ANR	2650614	Identifier	fd		2650267	0					
ANR	2650615	CallExpression	"chirp_client_open ( client , remote_file , ""w"" , 0 )"		2650267	1					
ANR	2650616	Callee	chirp_client_open		2650267	0					
ANR	2650617	Identifier	chirp_client_open		2650267	0					
ANR	2650618	ArgumentList	client		2650267	1					
ANR	2650619	Argument	client		2650267	0					
ANR	2650620	Identifier	client		2650267	0					
ANR	2650621	Argument	remote_file		2650267	1					
ANR	2650622	Identifier	remote_file		2650267	0					
ANR	2650623	Argument	"""w"""		2650267	2					
ANR	2650624	PrimaryExpression	"""w"""		2650267	0					
ANR	2650625	Argument	0		2650267	3					
ANR	2650626	PrimaryExpression	0		2650267	0					
ANR	2650627	IfStatement	if ( fd < 0 )		2650267	18					
ANR	2650628	Condition	fd < 0	540:4:12837:12842	2650267	0	True				
ANR	2650629	RelationalExpression	fd < 0		2650267	0		<			
ANR	2650630	Identifier	fd		2650267	0					
ANR	2650631	PrimaryExpression	0		2650267	1					
ANR	2650632	CompoundStatement		63:12:1450:1450	2650267	1					
ANR	2650633	ExpressionStatement	fclose ( rfd )	541:2:12849:12860	2650267	0	True				
ANR	2650634	CallExpression	fclose ( rfd )		2650267	0					
ANR	2650635	Callee	fclose		2650267	0					
ANR	2650636	Identifier	fclose		2650267	0					
ANR	2650637	ArgumentList	rfd		2650267	1					
ANR	2650638	Argument	rfd		2650267	0					
ANR	2650639	Identifier	rfd		2650267	0					
ANR	2650640	ExpressionStatement	free ( ( char * ) buf )	542:2:12864:12880	2650267	1	True				
ANR	2650641	CallExpression	free ( ( char * ) buf )		2650267	0					
ANR	2650642	Callee	free		2650267	0					
ANR	2650643	Identifier	free		2650267	0					
ANR	2650644	ArgumentList	( char * ) buf		2650267	1					
ANR	2650645	Argument	( char * ) buf		2650267	0					
ANR	2650646	CastExpression	( char * ) buf		2650267	0					
ANR	2650647	CastTarget	char *		2650267	0					
ANR	2650648	Identifier	buf		2650267	1					
ANR	2650649	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , fd )"	543:2:12884:12917	2650267	2	True				
ANR	2650650	CallExpression	"DISCONNECT_AND_RETURN ( client , fd )"		2650267	0					
ANR	2650651	Callee	DISCONNECT_AND_RETURN		2650267	0					
ANR	2650652	Identifier	DISCONNECT_AND_RETURN		2650267	0					
ANR	2650653	ArgumentList	client		2650267	1					
ANR	2650654	Argument	client		2650267	0					
ANR	2650655	Identifier	client		2650267	0					
ANR	2650656	Argument	fd		2650267	1					
ANR	2650657	Identifier	fd		2650267	0					
ANR	2650658	DoStatement	do		2650267	19					
ANR	2650659	CompoundStatement		70:4:1553:1553	2650267	0					
ANR	2650660	Statement	num_read	548:2:12952:12959	2650267	0	True				
ANR	2650661	Statement	=	548:11:12961:12961	2650267	1	True				
ANR	2650662	Statement	::	548:13:12963:12964	2650267	2	True				
ANR	2650663	ExpressionStatement	"fread ( buf , 1 , size , rfd )"	548:15:12965:12989	2650267	3	True				
ANR	2650664	CallExpression	"fread ( buf , 1 , size , rfd )"		2650267	0					
ANR	2650665	Callee	fread		2650267	0					
ANR	2650666	Identifier	fread		2650267	0					
ANR	2650667	ArgumentList	buf		2650267	1					
ANR	2650668	Argument	buf		2650267	0					
ANR	2650669	Identifier	buf		2650267	0					
ANR	2650670	Argument	1		2650267	1					
ANR	2650671	PrimaryExpression	1		2650267	0					
ANR	2650672	Argument	size		2650267	2					
ANR	2650673	Identifier	size		2650267	0					
ANR	2650674	Argument	rfd		2650267	3					
ANR	2650675	Identifier	rfd		2650267	0					
ANR	2650676	IfStatement	if ( num_read < 0 )		2650267	4					
ANR	2650677	Condition	num_read < 0	549:6:12997:13008	2650267	0	True				
ANR	2650678	RelationalExpression	num_read < 0		2650267	0		<			
ANR	2650679	Identifier	num_read		2650267	0					
ANR	2650680	PrimaryExpression	0		2650267	1					
ANR	2650681	CompoundStatement		72:20:1616:1616	2650267	1					
ANR	2650682	ExpressionStatement	fclose ( rfd )	550:3:13016:13027	2650267	0	True				
ANR	2650683	CallExpression	fclose ( rfd )		2650267	0					
ANR	2650684	Callee	fclose		2650267	0					
ANR	2650685	Identifier	fclose		2650267	0					
ANR	2650686	ArgumentList	rfd		2650267	1					
ANR	2650687	Argument	rfd		2650267	0					
ANR	2650688	Identifier	rfd		2650267	0					
ANR	2650689	ExpressionStatement	free ( ( char * ) buf )	551:3:13032:13048	2650267	1	True				
ANR	2650690	CallExpression	free ( ( char * ) buf )		2650267	0					
ANR	2650691	Callee	free		2650267	0					
ANR	2650692	Identifier	free		2650267	0					
ANR	2650693	ArgumentList	( char * ) buf		2650267	1					
ANR	2650694	Argument	( char * ) buf		2650267	0					
ANR	2650695	CastExpression	( char * ) buf		2650267	0					
ANR	2650696	CastTarget	char *		2650267	0					
ANR	2650697	Identifier	buf		2650267	1					
ANR	2650698	ExpressionStatement	"fprintf ( stderr , ""Local read error on %s\\n"" , local_file )"	552:3:13053:13108	2650267	2	True				
ANR	2650699	CallExpression	"fprintf ( stderr , ""Local read error on %s\\n"" , local_file )"		2650267	0					
ANR	2650700	Callee	fprintf		2650267	0					
ANR	2650701	Identifier	fprintf		2650267	0					
ANR	2650702	ArgumentList	stderr		2650267	1					
ANR	2650703	Argument	stderr		2650267	0					
ANR	2650704	Identifier	stderr		2650267	0					
ANR	2650705	Argument	"""Local read error on %s\\n"""		2650267	1					
ANR	2650706	PrimaryExpression	"""Local read error on %s\\n"""		2650267	0					
ANR	2650707	Argument	local_file		2650267	2					
ANR	2650708	Identifier	local_file		2650267	0					
ANR	2650709	ExpressionStatement	"CLOSE_DISCONNECT_AND_RETURN ( client , fd , - 1 )"	553:3:13113:13156	2650267	3	True				
ANR	2650710	CallExpression	"CLOSE_DISCONNECT_AND_RETURN ( client , fd , - 1 )"		2650267	0					
ANR	2650711	Callee	CLOSE_DISCONNECT_AND_RETURN		2650267	0					
ANR	2650712	Identifier	CLOSE_DISCONNECT_AND_RETURN		2650267	0					
ANR	2650713	ArgumentList	client		2650267	1					
ANR	2650714	Argument	client		2650267	0					
ANR	2650715	Identifier	client		2650267	0					
ANR	2650716	Argument	fd		2650267	1					
ANR	2650717	Identifier	fd		2650267	0					
ANR	2650718	Argument	- 1		2650267	2					
ANR	2650719	UnaryOperationExpression	- 1		2650267	0					
ANR	2650720	UnaryOperator	-		2650267	0					
ANR	2650721	PrimaryExpression	1		2650267	1					
ANR	2650722	IfStatement	if ( num_read == 0 )		2650267	5					
ANR	2650723	Condition	num_read == 0	557:6:13179:13191	2650267	0	True				
ANR	2650724	EqualityExpression	num_read == 0		2650267	0		==			
ANR	2650725	Identifier	num_read		2650267	0					
ANR	2650726	PrimaryExpression	0		2650267	1					
ANR	2650727	CompoundStatement		80:21:1799:1799	2650267	1					
ANR	2650728	BreakStatement	break ;	558:3:13199:13204	2650267	0	True				
ANR	2650729	ExpressionStatement	"num_written = chirp_client_pwrite ( client , fd , buf , num_read , offset + add )"	562:2:13231:13303	2650267	6	True				
ANR	2650730	AssignmentExpression	"num_written = chirp_client_pwrite ( client , fd , buf , num_read , offset + add )"		2650267	0		=			
ANR	2650731	Identifier	num_written		2650267	0					
ANR	2650732	CallExpression	"chirp_client_pwrite ( client , fd , buf , num_read , offset + add )"		2650267	1					
ANR	2650733	Callee	chirp_client_pwrite		2650267	0					
ANR	2650734	Identifier	chirp_client_pwrite		2650267	0					
ANR	2650735	ArgumentList	client		2650267	1					
ANR	2650736	Argument	client		2650267	0					
ANR	2650737	Identifier	client		2650267	0					
ANR	2650738	Argument	fd		2650267	1					
ANR	2650739	Identifier	fd		2650267	0					
ANR	2650740	Argument	buf		2650267	2					
ANR	2650741	Identifier	buf		2650267	0					
ANR	2650742	Argument	num_read		2650267	3					
ANR	2650743	Identifier	num_read		2650267	0					
ANR	2650744	Argument	offset + add		2650267	4					
ANR	2650745	AdditiveExpression	offset + add		2650267	0		+			
ANR	2650746	Identifier	offset		2650267	0					
ANR	2650747	Identifier	add		2650267	1					
ANR	2650748	IfStatement	if ( num_written != num_read )		2650267	7					
ANR	2650749	Condition	num_written != num_read	565:5:13365:13387	2650267	0	True				
ANR	2650750	EqualityExpression	num_written != num_read		2650267	0		!=			
ANR	2650751	Identifier	num_written		2650267	0					
ANR	2650752	Identifier	num_read		2650267	1					
ANR	2650753	CompoundStatement		88:30:1995:1995	2650267	1					
ANR	2650754	ExpressionStatement	fclose ( rfd )	566:3:13395:13406	2650267	0	True				
ANR	2650755	CallExpression	fclose ( rfd )		2650267	0					
ANR	2650756	Callee	fclose		2650267	0					
ANR	2650757	Identifier	fclose		2650267	0					
ANR	2650758	ArgumentList	rfd		2650267	1					
ANR	2650759	Argument	rfd		2650267	0					
ANR	2650760	Identifier	rfd		2650267	0					
ANR	2650761	ExpressionStatement	free ( ( char * ) buf )	567:3:13411:13427	2650267	1	True				
ANR	2650762	CallExpression	free ( ( char * ) buf )		2650267	0					
ANR	2650763	Callee	free		2650267	0					
ANR	2650764	Identifier	free		2650267	0					
ANR	2650765	ArgumentList	( char * ) buf		2650267	1					
ANR	2650766	Argument	( char * ) buf		2650267	0					
ANR	2650767	CastExpression	( char * ) buf		2650267	0					
ANR	2650768	CastTarget	char *		2650267	0					
ANR	2650769	Identifier	buf		2650267	1					
ANR	2650770	ExpressionStatement	"fprintf ( stderr , ""pwrite unable to write %d bytes\\n"" , num_read )"	568:3:13432:13494	2650267	2	True				
ANR	2650771	CallExpression	"fprintf ( stderr , ""pwrite unable to write %d bytes\\n"" , num_read )"		2650267	0					
ANR	2650772	Callee	fprintf		2650267	0					
ANR	2650773	Identifier	fprintf		2650267	0					
ANR	2650774	ArgumentList	stderr		2650267	1					
ANR	2650775	Argument	stderr		2650267	0					
ANR	2650776	Identifier	stderr		2650267	0					
ANR	2650777	Argument	"""pwrite unable to write %d bytes\\n"""		2650267	1					
ANR	2650778	PrimaryExpression	"""pwrite unable to write %d bytes\\n"""		2650267	0					
ANR	2650779	Argument	num_read		2650267	2					
ANR	2650780	Identifier	num_read		2650267	0					
ANR	2650781	ExpressionStatement	"CLOSE_DISCONNECT_AND_RETURN ( client , fd , - 1 )"	569:3:13499:13542	2650267	3	True				
ANR	2650782	CallExpression	"CLOSE_DISCONNECT_AND_RETURN ( client , fd , - 1 )"		2650267	0					
ANR	2650783	Callee	CLOSE_DISCONNECT_AND_RETURN		2650267	0					
ANR	2650784	Identifier	CLOSE_DISCONNECT_AND_RETURN		2650267	0					
ANR	2650785	ArgumentList	client		2650267	1					
ANR	2650786	Argument	client		2650267	0					
ANR	2650787	Identifier	client		2650267	0					
ANR	2650788	Argument	fd		2650267	1					
ANR	2650789	Identifier	fd		2650267	0					
ANR	2650790	Argument	- 1		2650267	2					
ANR	2650791	UnaryOperationExpression	- 1		2650267	0					
ANR	2650792	UnaryOperator	-		2650267	0					
ANR	2650793	PrimaryExpression	1		2650267	1					
ANR	2650794	IfStatement	if ( stride_length != 0 || stride_skip != 0 )		2650267	8					
ANR	2650795	Condition	stride_length != 0 || stride_skip != 0	572:5:13556:13593	2650267	0	True				
ANR	2650796	OrExpression	stride_length != 0 || stride_skip != 0		2650267	0		||			
ANR	2650797	EqualityExpression	stride_length != 0		2650267	0		!=			
ANR	2650798	Identifier	stride_length		2650267	0					
ANR	2650799	PrimaryExpression	0		2650267	1					
ANR	2650800	EqualityExpression	stride_skip != 0		2650267	1		!=			
ANR	2650801	Identifier	stride_skip		2650267	0					
ANR	2650802	PrimaryExpression	0		2650267	1					
ANR	2650803	CompoundStatement		95:45:2201:2201	2650267	1					
ANR	2650804	ExpressionStatement	add += stride_skip	573:3:13601:13619	2650267	0	True				
ANR	2650805	AssignmentExpression	add += stride_skip		2650267	0		+=			
ANR	2650806	Identifier	add		2650267	0					
ANR	2650807	Identifier	stride_skip		2650267	1					
ANR	2650808	ElseStatement	else		2650267	0					
ANR	2650809	CompoundStatement		97:9:2235:2235	2650267	0					
ANR	2650810	ExpressionStatement	add += num_read	575:3:13635:13650	2650267	0	True				
ANR	2650811	AssignmentExpression	add += num_read		2650267	0		+=			
ANR	2650812	Identifier	add		2650267	0					
ANR	2650813	Identifier	num_read		2650267	1					
ANR	2650814	Condition	num_read > 0	577:10:13666:13677	2650267	1	True				
ANR	2650815	RelationalExpression	num_read > 0		2650267	0		>			
ANR	2650816	Identifier	num_read		2650267	0					
ANR	2650817	PrimaryExpression	0		2650267	1					
ANR	2650818	ExpressionStatement	fclose ( rfd )	579:1:13684:13695	2650267	20	True				
ANR	2650819	CallExpression	fclose ( rfd )		2650267	0					
ANR	2650820	Callee	fclose		2650267	0					
ANR	2650821	Identifier	fclose		2650267	0					
ANR	2650822	ArgumentList	rfd		2650267	1					
ANR	2650823	Argument	rfd		2650267	0					
ANR	2650824	Identifier	rfd		2650267	0					
ANR	2650825	ExpressionStatement	free ( ( char * ) buf )	580:1:13698:13714	2650267	21	True				
ANR	2650826	CallExpression	free ( ( char * ) buf )		2650267	0					
ANR	2650827	Callee	free		2650267	0					
ANR	2650828	Identifier	free		2650267	0					
ANR	2650829	ArgumentList	( char * ) buf		2650267	1					
ANR	2650830	Argument	( char * ) buf		2650267	0					
ANR	2650831	CastExpression	( char * ) buf		2650267	0					
ANR	2650832	CastTarget	char *		2650267	0					
ANR	2650833	Identifier	buf		2650267	1					
ANR	2650834	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , 0 )"	581:1:13717:13749	2650267	22	True				
ANR	2650835	CallExpression	"DISCONNECT_AND_RETURN ( client , 0 )"		2650267	0					
ANR	2650836	Callee	DISCONNECT_AND_RETURN		2650267	0					
ANR	2650837	Identifier	DISCONNECT_AND_RETURN		2650267	0					
ANR	2650838	ArgumentList	client		2650267	1					
ANR	2650839	Argument	client		2650267	0					
ANR	2650840	Identifier	client		2650267	0					
ANR	2650841	Argument	0		2650267	1					
ANR	2650842	PrimaryExpression	0		2650267	0					
ANR	2650843	ReturnType	int		2650267	1					
ANR	2650844	Identifier	chirp_write		2650267	2					
ANR	2650845	ParameterList	"int argc , char * * argv"		2650267	3					
ANR	2650846	Parameter	int argc	478:16:11371:11378	2650267	0	True				
ANR	2650847	ParameterType	int		2650267	0					
ANR	2650848	Identifier	argc		2650267	1					
ANR	2650849	Parameter	char * * argv	478:26:11381:11391	2650267	1	True				
ANR	2650850	ParameterType	char * *		2650267	0					
ANR	2650851	Identifier	argv		2650267	1					
ANR	2650852	CFGEntryNode	ENTRY		2650267		True				
ANR	2650853	CFGExitNode	EXIT		2650267		True				
ANR	2650854	Symbol	stdin		2650267						
ANR	2650855	Symbol	num_read		2650267						
ANR	2650856	Symbol	* argv		2650267						
ANR	2650857	Symbol	num_written		2650267						
ANR	2650858	Symbol	argv		2650267						
ANR	2650859	Symbol	strtol		2650267						
ANR	2650860	Symbol	client		2650267						
ANR	2650861	Symbol	argc		2650267						
ANR	2650862	Symbol	strcmp		2650267						
ANR	2650863	Symbol	add		2650267						
ANR	2650864	Symbol	malloc		2650267						
ANR	2650865	Symbol	NULL		2650267						
ANR	2650866	Symbol	offset		2650267						
ANR	2650867	Symbol	* fileOffset		2650267						
ANR	2650868	Symbol	more		2650267						
ANR	2650869	Symbol	false		2650267						
ANR	2650870	Symbol	fileOffset		2650267						
ANR	2650871	Symbol	stderr		2650267						
ANR	2650872	Symbol	stride_length		2650267						
ANR	2650873	Symbol	rfd		2650267						
ANR	2650874	Symbol	buf		2650267						
ANR	2650875	Symbol	stride_skip		2650267						
ANR	2650876	Symbol	size		2650267						
ANR	2650877	Symbol	true		2650267						
ANR	2650878	Symbol	remote_file		2650267						
ANR	2650879	Symbol	chirp_client_open		2650267						
ANR	2650880	Symbol	chirp_client_pwrite		2650267						
ANR	2650881	Symbol	local_file		2650267						
ANR	2650882	Symbol	fd		2650267						
ANR	2650883	Function	chirp_rmdir	584:0:13754:14218							
ANR	2650884	FunctionDef	"chirp_rmdir (int argc , char * * argv)"		2650883	0					
ANR	2650885	CompoundStatement		584:39:13793:14218	2650883	0					
ANR	2650886	IfStatement	"if ( argc < 3 || argc > 4 || ( argc == 4 && strcmp ( argv [ 2 ] , ""-r"" ) != 0 ) )"		2650883	0					
ANR	2650887	Condition	"argc < 3 || argc > 4 || ( argc == 4 && strcmp ( argv [ 2 ] , ""-r"" ) != 0 )"	585:5:13800:13864	2650883	0	True				
ANR	2650888	OrExpression	"argc < 3 || argc > 4 || ( argc == 4 && strcmp ( argv [ 2 ] , ""-r"" ) != 0 )"		2650883	0		||			
ANR	2650889	RelationalExpression	argc < 3		2650883	0		<			
ANR	2650890	Identifier	argc		2650883	0					
ANR	2650891	PrimaryExpression	3		2650883	1					
ANR	2650892	OrExpression	"argc > 4 || ( argc == 4 && strcmp ( argv [ 2 ] , ""-r"" ) != 0 )"		2650883	1		||			
ANR	2650893	RelationalExpression	argc > 4		2650883	0		>			
ANR	2650894	Identifier	argc		2650883	0					
ANR	2650895	PrimaryExpression	4		2650883	1					
ANR	2650896	AndExpression	"argc == 4 && strcmp ( argv [ 2 ] , ""-r"" ) != 0"		2650883	1		&&			
ANR	2650897	EqualityExpression	argc == 4		2650883	0		==			
ANR	2650898	Identifier	argc		2650883	0					
ANR	2650899	PrimaryExpression	4		2650883	1					
ANR	2650900	EqualityExpression	"strcmp ( argv [ 2 ] , ""-r"" ) != 0"		2650883	1		!=			
ANR	2650901	CallExpression	"strcmp ( argv [ 2 ] , ""-r"" )"		2650883	0					
ANR	2650902	Callee	strcmp		2650883	0					
ANR	2650903	Identifier	strcmp		2650883	0					
ANR	2650904	ArgumentList	argv [ 2 ]		2650883	1					
ANR	2650905	Argument	argv [ 2 ]		2650883	0					
ANR	2650906	ArrayIndexing	argv [ 2 ]		2650883	0					
ANR	2650907	Identifier	argv		2650883	0					
ANR	2650908	PrimaryExpression	2		2650883	1					
ANR	2650909	Argument	"""-r"""		2650883	1					
ANR	2650910	PrimaryExpression	"""-r"""		2650883	0					
ANR	2650911	PrimaryExpression	0		2650883	1					
ANR	2650912	CompoundStatement		2:72:73:73	2650883	1					
ANR	2650913	ExpressionStatement	"printf ( ""condor_chirp rmdir [-r] remotepath\\n"" )"	586:2:13871:13917	2650883	0	True				
ANR	2650914	CallExpression	"printf ( ""condor_chirp rmdir [-r] remotepath\\n"" )"		2650883	0					
ANR	2650915	Callee	printf		2650883	0					
ANR	2650916	Identifier	printf		2650883	0					
ANR	2650917	ArgumentList	"""condor_chirp rmdir [-r] remotepath\\n"""		2650883	1					
ANR	2650918	Argument	"""condor_chirp rmdir [-r] remotepath\\n"""		2650883	0					
ANR	2650919	PrimaryExpression	"""condor_chirp rmdir [-r] remotepath\\n"""		2650883	0					
ANR	2650920	ReturnStatement	return - 1 ;	587:2:13921:13930	2650883	1	True				
ANR	2650921	UnaryOperationExpression	- 1		2650883	0					
ANR	2650922	UnaryOperator	-		2650883	0					
ANR	2650923	PrimaryExpression	1		2650883	1					
ANR	2650924	IdentifierDeclStatement	struct chirp_client * client = 0 ;	590:1:13938:13969	2650883	1	True				
ANR	2650925	IdentifierDecl	* client = 0		2650883	0					
ANR	2650926	IdentifierDeclType	struct chirp_client *		2650883	0					
ANR	2650927	Identifier	client		2650883	1					
ANR	2650928	AssignmentExpression	* client = 0		2650883	2		=			
ANR	2650929	Identifier	client		2650883	0					
ANR	2650930	PrimaryExpression	0		2650883	1					
ANR	2650931	ExpressionStatement	CONNECT_STARTER ( client )	591:1:13972:13995	2650883	2	True				
ANR	2650932	CallExpression	CONNECT_STARTER ( client )		2650883	0					
ANR	2650933	Callee	CONNECT_STARTER		2650883	0					
ANR	2650934	Identifier	CONNECT_STARTER		2650883	0					
ANR	2650935	ArgumentList	client		2650883	1					
ANR	2650936	Argument	client		2650883	0					
ANR	2650937	Identifier	client		2650883	0					
ANR	2650938	IdentifierDeclStatement	int status = - 1 ;	593:1:14000:14015	2650883	3	True				
ANR	2650939	IdentifierDecl	status = - 1		2650883	0					
ANR	2650940	IdentifierDeclType	int		2650883	0					
ANR	2650941	Identifier	status		2650883	1					
ANR	2650942	AssignmentExpression	status = - 1		2650883	2		=			
ANR	2650943	Identifier	status		2650883	0					
ANR	2650944	UnaryOperationExpression	- 1		2650883	1					
ANR	2650945	UnaryOperator	-		2650883	0					
ANR	2650946	PrimaryExpression	1		2650883	1					
ANR	2650947	IfStatement	if ( argc == 4 )		2650883	4					
ANR	2650948	Condition	argc == 4	596:4:14056:14064	2650883	0	True				
ANR	2650949	EqualityExpression	argc == 4		2650883	0		==			
ANR	2650950	Identifier	argc		2650883	0					
ANR	2650951	PrimaryExpression	4		2650883	1					
ANR	2650952	CompoundStatement		13:15:273:273	2650883	1					
ANR	2650953	ExpressionStatement	"status = chirp_client_rmall ( client , argv [ 3 ] )"	597:2:14071:14115	2650883	0	True				
ANR	2650954	AssignmentExpression	"status = chirp_client_rmall ( client , argv [ 3 ] )"		2650883	0		=			
ANR	2650955	Identifier	status		2650883	0					
ANR	2650956	CallExpression	"chirp_client_rmall ( client , argv [ 3 ] )"		2650883	1					
ANR	2650957	Callee	chirp_client_rmall		2650883	0					
ANR	2650958	Identifier	chirp_client_rmall		2650883	0					
ANR	2650959	ArgumentList	client		2650883	1					
ANR	2650960	Argument	client		2650883	0					
ANR	2650961	Identifier	client		2650883	0					
ANR	2650962	Argument	argv [ 3 ]		2650883	1					
ANR	2650963	ArrayIndexing	argv [ 3 ]		2650883	0					
ANR	2650964	Identifier	argv		2650883	0					
ANR	2650965	PrimaryExpression	3		2650883	1					
ANR	2650966	ElseStatement	else		2650883	0					
ANR	2650967	CompoundStatement		15:8:331:331	2650883	0					
ANR	2650968	ExpressionStatement	"status = chirp_client_rmdir ( client , argv [ 2 ] )"	599:2:14129:14173	2650883	0	True				
ANR	2650969	AssignmentExpression	"status = chirp_client_rmdir ( client , argv [ 2 ] )"		2650883	0		=			
ANR	2650970	Identifier	status		2650883	0					
ANR	2650971	CallExpression	"chirp_client_rmdir ( client , argv [ 2 ] )"		2650883	1					
ANR	2650972	Callee	chirp_client_rmdir		2650883	0					
ANR	2650973	Identifier	chirp_client_rmdir		2650883	0					
ANR	2650974	ArgumentList	client		2650883	1					
ANR	2650975	Argument	client		2650883	0					
ANR	2650976	Identifier	client		2650883	0					
ANR	2650977	Argument	argv [ 2 ]		2650883	1					
ANR	2650978	ArrayIndexing	argv [ 2 ]		2650883	0					
ANR	2650979	Identifier	argv		2650883	0					
ANR	2650980	PrimaryExpression	2		2650883	1					
ANR	2650981	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , status )"	601:1:14179:14216	2650883	5	True				
ANR	2650982	CallExpression	"DISCONNECT_AND_RETURN ( client , status )"		2650883	0					
ANR	2650983	Callee	DISCONNECT_AND_RETURN		2650883	0					
ANR	2650984	Identifier	DISCONNECT_AND_RETURN		2650883	0					
ANR	2650985	ArgumentList	client		2650883	1					
ANR	2650986	Argument	client		2650883	0					
ANR	2650987	Identifier	client		2650883	0					
ANR	2650988	Argument	status		2650883	1					
ANR	2650989	Identifier	status		2650883	0					
ANR	2650990	ReturnType	int		2650883	1					
ANR	2650991	Identifier	chirp_rmdir		2650883	2					
ANR	2650992	ParameterList	"int argc , char * * argv"		2650883	3					
ANR	2650993	Parameter	int argc	584:16:13770:13777	2650883	0	True				
ANR	2650994	ParameterType	int		2650883	0					
ANR	2650995	Identifier	argc		2650883	1					
ANR	2650996	Parameter	char * * argv	584:26:13780:13790	2650883	1	True				
ANR	2650997	ParameterType	char * *		2650883	0					
ANR	2650998	Identifier	argv		2650883	1					
ANR	2650999	CFGEntryNode	ENTRY		2650883		True				
ANR	2651000	CFGExitNode	EXIT		2650883		True				
ANR	2651001	Symbol	argc		2650883						
ANR	2651002	Symbol	strcmp		2650883						
ANR	2651003	Symbol	client		2650883						
ANR	2651004	Symbol	* argv		2650883						
ANR	2651005	Symbol	chirp_client_rmall		2650883						
ANR	2651006	Symbol	argv		2650883						
ANR	2651007	Symbol	chirp_client_rmdir		2650883						
ANR	2651008	Symbol	status		2650883						
ANR	2651009	Function	chirp_getdir	604:0:14221:15098							
ANR	2651010	FunctionDef	"chirp_getdir (int argc , char * * argv)"		2651009	0					
ANR	2651011	CompoundStatement		604:40:14261:15098	2651009	0					
ANR	2651012	IfStatement	"if ( argc < 3 || argc > 4 || ( argc == 4 && strcmp ( argv [ 2 ] , ""-l"" ) != 0 ) )"		2651009	0					
ANR	2651013	Condition	"argc < 3 || argc > 4 || ( argc == 4 && strcmp ( argv [ 2 ] , ""-l"" ) != 0 )"	605:5:14268:14332	2651009	0	True				
ANR	2651014	OrExpression	"argc < 3 || argc > 4 || ( argc == 4 && strcmp ( argv [ 2 ] , ""-l"" ) != 0 )"		2651009	0		||			
ANR	2651015	RelationalExpression	argc < 3		2651009	0		<			
ANR	2651016	Identifier	argc		2651009	0					
ANR	2651017	PrimaryExpression	3		2651009	1					
ANR	2651018	OrExpression	"argc > 4 || ( argc == 4 && strcmp ( argv [ 2 ] , ""-l"" ) != 0 )"		2651009	1		||			
ANR	2651019	RelationalExpression	argc > 4		2651009	0		>			
ANR	2651020	Identifier	argc		2651009	0					
ANR	2651021	PrimaryExpression	4		2651009	1					
ANR	2651022	AndExpression	"argc == 4 && strcmp ( argv [ 2 ] , ""-l"" ) != 0"		2651009	1		&&			
ANR	2651023	EqualityExpression	argc == 4		2651009	0		==			
ANR	2651024	Identifier	argc		2651009	0					
ANR	2651025	PrimaryExpression	4		2651009	1					
ANR	2651026	EqualityExpression	"strcmp ( argv [ 2 ] , ""-l"" ) != 0"		2651009	1		!=			
ANR	2651027	CallExpression	"strcmp ( argv [ 2 ] , ""-l"" )"		2651009	0					
ANR	2651028	Callee	strcmp		2651009	0					
ANR	2651029	Identifier	strcmp		2651009	0					
ANR	2651030	ArgumentList	argv [ 2 ]		2651009	1					
ANR	2651031	Argument	argv [ 2 ]		2651009	0					
ANR	2651032	ArrayIndexing	argv [ 2 ]		2651009	0					
ANR	2651033	Identifier	argv		2651009	0					
ANR	2651034	PrimaryExpression	2		2651009	1					
ANR	2651035	Argument	"""-l"""		2651009	1					
ANR	2651036	PrimaryExpression	"""-l"""		2651009	0					
ANR	2651037	PrimaryExpression	0		2651009	1					
ANR	2651038	CompoundStatement		2:72:73:73	2651009	1					
ANR	2651039	ExpressionStatement	"printf ( ""condor_chirp getdir [-l] remotepath\\n"" )"	606:2:14339:14386	2651009	0	True				
ANR	2651040	CallExpression	"printf ( ""condor_chirp getdir [-l] remotepath\\n"" )"		2651009	0					
ANR	2651041	Callee	printf		2651009	0					
ANR	2651042	Identifier	printf		2651009	0					
ANR	2651043	ArgumentList	"""condor_chirp getdir [-l] remotepath\\n"""		2651009	1					
ANR	2651044	Argument	"""condor_chirp getdir [-l] remotepath\\n"""		2651009	0					
ANR	2651045	PrimaryExpression	"""condor_chirp getdir [-l] remotepath\\n"""		2651009	0					
ANR	2651046	ReturnStatement	return - 1 ;	607:2:14390:14399	2651009	1	True				
ANR	2651047	UnaryOperationExpression	- 1		2651009	0					
ANR	2651048	UnaryOperator	-		2651009	0					
ANR	2651049	PrimaryExpression	1		2651009	1					
ANR	2651050	IdentifierDeclStatement	struct chirp_client * client = 0 ;	610:1:14407:14438	2651009	1	True				
ANR	2651051	IdentifierDecl	* client = 0		2651009	0					
ANR	2651052	IdentifierDeclType	struct chirp_client *		2651009	0					
ANR	2651053	Identifier	client		2651009	1					
ANR	2651054	AssignmentExpression	* client = 0		2651009	2		=			
ANR	2651055	Identifier	client		2651009	0					
ANR	2651056	PrimaryExpression	0		2651009	1					
ANR	2651057	ExpressionStatement	CONNECT_STARTER ( client )	611:1:14441:14464	2651009	2	True				
ANR	2651058	CallExpression	CONNECT_STARTER ( client )		2651009	0					
ANR	2651059	Callee	CONNECT_STARTER		2651009	0					
ANR	2651060	Identifier	CONNECT_STARTER		2651009	0					
ANR	2651061	ArgumentList	client		2651009	1					
ANR	2651062	Argument	client		2651009	0					
ANR	2651063	Identifier	client		2651009	0					
ANR	2651064	IdentifierDeclStatement	char * buffer ;	613:1:14469:14481	2651009	3	True				
ANR	2651065	IdentifierDecl	* buffer		2651009	0					
ANR	2651066	IdentifierDeclType	char *		2651009	0					
ANR	2651067	Identifier	buffer		2651009	1					
ANR	2651068	IdentifierDeclStatement	int status = - 1 ;	614:1:14484:14499	2651009	4	True				
ANR	2651069	IdentifierDecl	status = - 1		2651009	0					
ANR	2651070	IdentifierDeclType	int		2651009	0					
ANR	2651071	Identifier	status		2651009	1					
ANR	2651072	AssignmentExpression	status = - 1		2651009	2		=			
ANR	2651073	Identifier	status		2651009	0					
ANR	2651074	UnaryOperationExpression	- 1		2651009	1					
ANR	2651075	UnaryOperator	-		2651009	0					
ANR	2651076	PrimaryExpression	1		2651009	1					
ANR	2651077	IfStatement	if ( argc == 4 )		2651009	5					
ANR	2651078	Condition	argc == 4	617:4:14546:14554	2651009	0	True				
ANR	2651079	EqualityExpression	argc == 4		2651009	0		==			
ANR	2651080	Identifier	argc		2651009	0					
ANR	2651081	PrimaryExpression	4		2651009	1					
ANR	2651082	CompoundStatement		14:15:295:295	2651009	1					
ANR	2651083	IfStatement	"if ( ( status = chirp_client_getlongdir ( client , argv [ 3 ] , & buffer ) ) >= 0 )"		2651009	0					
ANR	2651084	Condition	"( status = chirp_client_getlongdir ( client , argv [ 3 ] , & buffer ) ) >= 0"	618:5:14564:14628	2651009	0	True				
ANR	2651085	RelationalExpression	"( status = chirp_client_getlongdir ( client , argv [ 3 ] , & buffer ) ) >= 0"		2651009	0		>=			
ANR	2651086	AssignmentExpression	"status = chirp_client_getlongdir ( client , argv [ 3 ] , & buffer )"		2651009	0		=			
ANR	2651087	Identifier	status		2651009	0					
ANR	2651088	CallExpression	"chirp_client_getlongdir ( client , argv [ 3 ] , & buffer )"		2651009	1					
ANR	2651089	Callee	chirp_client_getlongdir		2651009	0					
ANR	2651090	Identifier	chirp_client_getlongdir		2651009	0					
ANR	2651091	ArgumentList	client		2651009	1					
ANR	2651092	Argument	client		2651009	0					
ANR	2651093	Identifier	client		2651009	0					
ANR	2651094	Argument	argv [ 3 ]		2651009	1					
ANR	2651095	ArrayIndexing	argv [ 3 ]		2651009	0					
ANR	2651096	Identifier	argv		2651009	0					
ANR	2651097	PrimaryExpression	3		2651009	1					
ANR	2651098	Argument	& buffer		2651009	2					
ANR	2651099	UnaryOperationExpression	& buffer		2651009	0					
ANR	2651100	UnaryOperator	&		2651009	0					
ANR	2651101	Identifier	buffer		2651009	1					
ANR	2651102	PrimaryExpression	0		2651009	1					
ANR	2651103	CompoundStatement		17:3:389:411	2651009	1					
ANR	2651104	IdentifierDeclStatement	char * line ;	619:3:14636:14646	2651009	0	True				
ANR	2651105	IdentifierDecl	* line		2651009	0					
ANR	2651106	IdentifierDeclType	char *		2651009	0					
ANR	2651107	Identifier	line		2651009	1					
ANR	2651108	IdentifierDeclStatement	struct chirp_stat stat ;	620:3:14651:14673	2651009	1	True				
ANR	2651109	IdentifierDecl	stat		2651009	0					
ANR	2651110	IdentifierDeclType	struct chirp_stat		2651009	0					
ANR	2651111	Identifier	stat		2651009	1					
ANR	2651112	ExpressionStatement	"line = strtok ( buffer , ""\\n"" )"	622:3:14681:14708	2651009	2	True				
ANR	2651113	AssignmentExpression	"line = strtok ( buffer , ""\\n"" )"		2651009	0		=			
ANR	2651114	Identifier	line		2651009	0					
ANR	2651115	CallExpression	"strtok ( buffer , ""\\n"" )"		2651009	1					
ANR	2651116	Callee	strtok		2651009	0					
ANR	2651117	Identifier	strtok		2651009	0					
ANR	2651118	ArgumentList	buffer		2651009	1					
ANR	2651119	Argument	buffer		2651009	0					
ANR	2651120	Identifier	buffer		2651009	0					
ANR	2651121	Argument	"""\\n"""		2651009	1					
ANR	2651122	PrimaryExpression	"""\\n"""		2651009	0					
ANR	2651123	WhileStatement	while ( line != NULL )		2651009	3					
ANR	2651124	Condition	line != NULL	623:9:14719:14730	2651009	0	True				
ANR	2651125	EqualityExpression	line != NULL		2651009	0		!=			
ANR	2651126	Identifier	line		2651009	0					
ANR	2651127	Identifier	NULL		2651009	1					
ANR	2651128	CompoundStatement		20:23:471:471	2651009	1					
ANR	2651129	ExpressionStatement	"printf ( ""%s\\n"" , line )"	624:4:14739:14759	2651009	0	True				
ANR	2651130	CallExpression	"printf ( ""%s\\n"" , line )"		2651009	0					
ANR	2651131	Callee	printf		2651009	0					
ANR	2651132	Identifier	printf		2651009	0					
ANR	2651133	ArgumentList	"""%s\\n"""		2651009	1					
ANR	2651134	Argument	"""%s\\n"""		2651009	0					
ANR	2651135	PrimaryExpression	"""%s\\n"""		2651009	0					
ANR	2651136	Argument	line		2651009	1					
ANR	2651137	Identifier	line		2651009	0					
ANR	2651138	ExpressionStatement	"line = strtok ( NULL , ""\\n"" )"	625:4:14765:14790	2651009	1	True				
ANR	2651139	AssignmentExpression	"line = strtok ( NULL , ""\\n"" )"		2651009	0		=			
ANR	2651140	Identifier	line		2651009	0					
ANR	2651141	CallExpression	"strtok ( NULL , ""\\n"" )"		2651009	1					
ANR	2651142	Callee	strtok		2651009	0					
ANR	2651143	Identifier	strtok		2651009	0					
ANR	2651144	ArgumentList	NULL		2651009	1					
ANR	2651145	Argument	NULL		2651009	0					
ANR	2651146	Identifier	NULL		2651009	0					
ANR	2651147	Argument	"""\\n"""		2651009	1					
ANR	2651148	PrimaryExpression	"""\\n"""		2651009	0					
ANR	2651149	IfStatement	"if ( line == NULL || get_stat ( line , & stat ) < 0 )"		2651009	2					
ANR	2651150	Condition	"line == NULL || get_stat ( line , & stat ) < 0"	626:7:14799:14839	2651009	0	True				
ANR	2651151	OrExpression	"line == NULL || get_stat ( line , & stat ) < 0"		2651009	0		||			
ANR	2651152	EqualityExpression	line == NULL		2651009	0		==			
ANR	2651153	Identifier	line		2651009	0					
ANR	2651154	Identifier	NULL		2651009	1					
ANR	2651155	RelationalExpression	"get_stat ( line , & stat ) < 0"		2651009	1		<			
ANR	2651156	CallExpression	"get_stat ( line , & stat )"		2651009	0					
ANR	2651157	Callee	get_stat		2651009	0					
ANR	2651158	Identifier	get_stat		2651009	0					
ANR	2651159	ArgumentList	line		2651009	1					
ANR	2651160	Argument	line		2651009	0					
ANR	2651161	Identifier	line		2651009	0					
ANR	2651162	Argument	& stat		2651009	1					
ANR	2651163	UnaryOperationExpression	& stat		2651009	0					
ANR	2651164	UnaryOperator	&		2651009	0					
ANR	2651165	Identifier	stat		2651009	1					
ANR	2651166	PrimaryExpression	0		2651009	1					
ANR	2651167	CompoundStatement		23:50:580:580	2651009	1					
ANR	2651168	BreakStatement	break ;	627:5:14849:14854	2651009	0	True				
ANR	2651169	ExpressionStatement	"print_stat ( & stat , ""\\t"" )"	629:4:14866:14889	2651009	3	True				
ANR	2651170	CallExpression	"print_stat ( & stat , ""\\t"" )"		2651009	0					
ANR	2651171	Callee	print_stat		2651009	0					
ANR	2651172	Identifier	print_stat		2651009	0					
ANR	2651173	ArgumentList	& stat		2651009	1					
ANR	2651174	Argument	& stat		2651009	0					
ANR	2651175	UnaryOperationExpression	& stat		2651009	0					
ANR	2651176	UnaryOperator	&		2651009	0					
ANR	2651177	Identifier	stat		2651009	1					
ANR	2651178	Argument	"""\\t"""		2651009	1					
ANR	2651179	PrimaryExpression	"""\\t"""		2651009	0					
ANR	2651180	ExpressionStatement	"line = strtok ( NULL , ""\\n"" )"	630:4:14895:14920	2651009	4	True				
ANR	2651181	AssignmentExpression	"line = strtok ( NULL , ""\\n"" )"		2651009	0		=			
ANR	2651182	Identifier	line		2651009	0					
ANR	2651183	CallExpression	"strtok ( NULL , ""\\n"" )"		2651009	1					
ANR	2651184	Callee	strtok		2651009	0					
ANR	2651185	Identifier	strtok		2651009	0					
ANR	2651186	ArgumentList	NULL		2651009	1					
ANR	2651187	Argument	NULL		2651009	0					
ANR	2651188	Identifier	NULL		2651009	0					
ANR	2651189	Argument	"""\\n"""		2651009	1					
ANR	2651190	PrimaryExpression	"""\\n"""		2651009	0					
ANR	2651191	ElseStatement	else		2651009	0					
ANR	2651192	CompoundStatement		30:8:677:677	2651009	0					
ANR	2651193	IfStatement	"if ( ( status = chirp_client_getdir ( client , argv [ 2 ] , & buffer ) >= 0 ) )"		2651009	0					
ANR	2651194	Condition	"status = chirp_client_getdir ( client , argv [ 2 ] , & buffer ) >= 0"	634:5:14946:15006	2651009	0	True				
ANR	2651195	AssignmentExpression	"status = chirp_client_getdir ( client , argv [ 2 ] , & buffer ) >= 0"		2651009	0		=			
ANR	2651196	Identifier	status		2651009	0					
ANR	2651197	RelationalExpression	"chirp_client_getdir ( client , argv [ 2 ] , & buffer ) >= 0"		2651009	1		>=			
ANR	2651198	CallExpression	"chirp_client_getdir ( client , argv [ 2 ] , & buffer )"		2651009	0					
ANR	2651199	Callee	chirp_client_getdir		2651009	0					
ANR	2651200	Identifier	chirp_client_getdir		2651009	0					
ANR	2651201	ArgumentList	client		2651009	1					
ANR	2651202	Argument	client		2651009	0					
ANR	2651203	Identifier	client		2651009	0					
ANR	2651204	Argument	argv [ 2 ]		2651009	1					
ANR	2651205	ArrayIndexing	argv [ 2 ]		2651009	0					
ANR	2651206	Identifier	argv		2651009	0					
ANR	2651207	PrimaryExpression	2		2651009	1					
ANR	2651208	Argument	& buffer		2651009	2					
ANR	2651209	UnaryOperationExpression	& buffer		2651009	0					
ANR	2651210	UnaryOperator	&		2651009	0					
ANR	2651211	Identifier	buffer		2651009	1					
ANR	2651212	PrimaryExpression	0		2651009	1					
ANR	2651213	CompoundStatement		31:68:747:747	2651009	1					
ANR	2651214	ExpressionStatement	"printf ( ""%s"" , buffer )"	635:3:15014:15034	2651009	0	True				
ANR	2651215	CallExpression	"printf ( ""%s"" , buffer )"		2651009	0					
ANR	2651216	Callee	printf		2651009	0					
ANR	2651217	Identifier	printf		2651009	0					
ANR	2651218	ArgumentList	"""%s"""		2651009	1					
ANR	2651219	Argument	"""%s"""		2651009	0					
ANR	2651220	PrimaryExpression	"""%s"""		2651009	0					
ANR	2651221	Argument	buffer		2651009	1					
ANR	2651222	Identifier	buffer		2651009	0					
ANR	2651223	ExpressionStatement	free ( buffer )	638:1:15044:15056	2651009	6	True				
ANR	2651224	CallExpression	free ( buffer )		2651009	0					
ANR	2651225	Callee	free		2651009	0					
ANR	2651226	Identifier	free		2651009	0					
ANR	2651227	ArgumentList	buffer		2651009	1					
ANR	2651228	Argument	buffer		2651009	0					
ANR	2651229	Identifier	buffer		2651009	0					
ANR	2651230	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , status )"	639:1:15059:15096	2651009	7	True				
ANR	2651231	CallExpression	"DISCONNECT_AND_RETURN ( client , status )"		2651009	0					
ANR	2651232	Callee	DISCONNECT_AND_RETURN		2651009	0					
ANR	2651233	Identifier	DISCONNECT_AND_RETURN		2651009	0					
ANR	2651234	ArgumentList	client		2651009	1					
ANR	2651235	Argument	client		2651009	0					
ANR	2651236	Identifier	client		2651009	0					
ANR	2651237	Argument	status		2651009	1					
ANR	2651238	Identifier	status		2651009	0					
ANR	2651239	ReturnType	int		2651009	1					
ANR	2651240	Identifier	chirp_getdir		2651009	2					
ANR	2651241	ParameterList	"int argc , char * * argv"		2651009	3					
ANR	2651242	Parameter	int argc	604:17:14238:14245	2651009	0	True				
ANR	2651243	ParameterType	int		2651009	0					
ANR	2651244	Identifier	argc		2651009	1					
ANR	2651245	Parameter	char * * argv	604:27:14248:14258	2651009	1	True				
ANR	2651246	ParameterType	char * *		2651009	0					
ANR	2651247	Identifier	argv		2651009	1					
ANR	2651248	CFGEntryNode	ENTRY		2651009		True				
ANR	2651249	CFGExitNode	EXIT		2651009		True				
ANR	2651250	Symbol	argc		2651009						
ANR	2651251	Symbol	strcmp		2651009						
ANR	2651252	Symbol	stat		2651009						
ANR	2651253	Symbol	NULL		2651009						
ANR	2651254	Symbol	line		2651009						
ANR	2651255	Symbol	* argv		2651009						
ANR	2651256	Symbol	strtok		2651009						
ANR	2651257	Symbol	get_stat		2651009						
ANR	2651258	Symbol	argv		2651009						
ANR	2651259	Symbol	chirp_client_getlongdir		2651009						
ANR	2651260	Symbol	chirp_client_getdir		2651009						
ANR	2651261	Symbol	& buffer		2651009						
ANR	2651262	Symbol	client		2651009						
ANR	2651263	Symbol	buffer		2651009						
ANR	2651264	Symbol	status		2651009						
ANR	2651265	Symbol	& stat		2651009						
ANR	2651266	Function	chirp_whoami	642:0:15101:15378							
ANR	2651267	FunctionDef	chirp_whoami ()		2651266	0					
ANR	2651268	CompoundStatement		642:19:15120:15378	2651266	0					
ANR	2651269	IdentifierDeclStatement	struct chirp_client * client = 0 ;	643:1:15123:15154	2651266	0	True				
ANR	2651270	IdentifierDecl	* client = 0		2651266	0					
ANR	2651271	IdentifierDeclType	struct chirp_client *		2651266	0					
ANR	2651272	Identifier	client		2651266	1					
ANR	2651273	AssignmentExpression	* client = 0		2651266	2		=			
ANR	2651274	Identifier	client		2651266	0					
ANR	2651275	PrimaryExpression	0		2651266	1					
ANR	2651276	ExpressionStatement	CONNECT_STARTER ( client )	644:1:15157:15180	2651266	1	True				
ANR	2651277	CallExpression	CONNECT_STARTER ( client )		2651266	0					
ANR	2651278	Callee	CONNECT_STARTER		2651266	0					
ANR	2651279	Identifier	CONNECT_STARTER		2651266	0					
ANR	2651280	ArgumentList	client		2651266	1					
ANR	2651281	Argument	client		2651266	0					
ANR	2651282	Identifier	client		2651266	0					
ANR	2651283	IdentifierDeclStatement	char * buffer = ( char * ) malloc ( CHIRP_LINE_MAX ) ;	646:1:15185:15229	2651266	2	True				
ANR	2651284	IdentifierDecl	* buffer = ( char * ) malloc ( CHIRP_LINE_MAX )		2651266	0					
ANR	2651285	IdentifierDeclType	char *		2651266	0					
ANR	2651286	Identifier	buffer		2651266	1					
ANR	2651287	AssignmentExpression	* buffer = ( char * ) malloc ( CHIRP_LINE_MAX )		2651266	2		=			
ANR	2651288	Identifier	buffer		2651266	0					
ANR	2651289	CastExpression	( char * ) malloc ( CHIRP_LINE_MAX )		2651266	1					
ANR	2651290	CastTarget	char *		2651266	0					
ANR	2651291	CallExpression	malloc ( CHIRP_LINE_MAX )		2651266	1					
ANR	2651292	Callee	malloc		2651266	0					
ANR	2651293	Identifier	malloc		2651266	0					
ANR	2651294	ArgumentList	CHIRP_LINE_MAX		2651266	1					
ANR	2651295	Argument	CHIRP_LINE_MAX		2651266	0					
ANR	2651296	Identifier	CHIRP_LINE_MAX		2651266	0					
ANR	2651297	IdentifierDeclStatement	"int status = chirp_client_whoami ( client , buffer , CHIRP_LINE_MAX ) ;"	647:1:15232:15296	2651266	3	True				
ANR	2651298	IdentifierDecl	"status = chirp_client_whoami ( client , buffer , CHIRP_LINE_MAX )"		2651266	0					
ANR	2651299	IdentifierDeclType	int		2651266	0					
ANR	2651300	Identifier	status		2651266	1					
ANR	2651301	AssignmentExpression	"status = chirp_client_whoami ( client , buffer , CHIRP_LINE_MAX )"		2651266	2		=			
ANR	2651302	Identifier	status		2651266	0					
ANR	2651303	CallExpression	"chirp_client_whoami ( client , buffer , CHIRP_LINE_MAX )"		2651266	1					
ANR	2651304	Callee	chirp_client_whoami		2651266	0					
ANR	2651305	Identifier	chirp_client_whoami		2651266	0					
ANR	2651306	ArgumentList	client		2651266	1					
ANR	2651307	Argument	client		2651266	0					
ANR	2651308	Identifier	client		2651266	0					
ANR	2651309	Argument	buffer		2651266	1					
ANR	2651310	Identifier	buffer		2651266	0					
ANR	2651311	Argument	CHIRP_LINE_MAX		2651266	2					
ANR	2651312	Identifier	CHIRP_LINE_MAX		2651266	0					
ANR	2651313	ExpressionStatement	"printf ( ""%s\\n"" , buffer )"	648:1:15299:15321	2651266	4	True				
ANR	2651314	CallExpression	"printf ( ""%s\\n"" , buffer )"		2651266	0					
ANR	2651315	Callee	printf		2651266	0					
ANR	2651316	Identifier	printf		2651266	0					
ANR	2651317	ArgumentList	"""%s\\n"""		2651266	1					
ANR	2651318	Argument	"""%s\\n"""		2651266	0					
ANR	2651319	PrimaryExpression	"""%s\\n"""		2651266	0					
ANR	2651320	Argument	buffer		2651266	1					
ANR	2651321	Identifier	buffer		2651266	0					
ANR	2651322	ExpressionStatement	free ( buffer )	649:1:15324:15336	2651266	5	True				
ANR	2651323	CallExpression	free ( buffer )		2651266	0					
ANR	2651324	Callee	free		2651266	0					
ANR	2651325	Identifier	free		2651266	0					
ANR	2651326	ArgumentList	buffer		2651266	1					
ANR	2651327	Argument	buffer		2651266	0					
ANR	2651328	Identifier	buffer		2651266	0					
ANR	2651329	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , status )"	650:1:15339:15376	2651266	6	True				
ANR	2651330	CallExpression	"DISCONNECT_AND_RETURN ( client , status )"		2651266	0					
ANR	2651331	Callee	DISCONNECT_AND_RETURN		2651266	0					
ANR	2651332	Identifier	DISCONNECT_AND_RETURN		2651266	0					
ANR	2651333	ArgumentList	client		2651266	1					
ANR	2651334	Argument	client		2651266	0					
ANR	2651335	Identifier	client		2651266	0					
ANR	2651336	Argument	status		2651266	1					
ANR	2651337	Identifier	status		2651266	0					
ANR	2651338	ReturnType	int		2651266	1					
ANR	2651339	Identifier	chirp_whoami		2651266	2					
ANR	2651340	ParameterList			2651266	3					
ANR	2651341	CFGEntryNode	ENTRY		2651266		True				
ANR	2651342	CFGExitNode	EXIT		2651266		True				
ANR	2651343	Symbol	malloc		2651266						
ANR	2651344	Symbol	chirp_client_whoami		2651266						
ANR	2651345	Symbol	client		2651266						
ANR	2651346	Symbol	buffer		2651266						
ANR	2651347	Symbol	CHIRP_LINE_MAX		2651266						
ANR	2651348	Symbol	status		2651266						
ANR	2651349	Function	chirp_whoareyou	653:0:15381:15779							
ANR	2651350	FunctionDef	"chirp_whoareyou (int argc , char * * argv)"		2651349	0					
ANR	2651351	CompoundStatement		653:43:15424:15779	2651349	0					
ANR	2651352	IfStatement	if ( argc != 3 )		2651349	0					
ANR	2651353	Condition	argc != 3	654:5:15431:15439	2651349	0	True				
ANR	2651354	EqualityExpression	argc != 3		2651349	0		!=			
ANR	2651355	Identifier	argc		2651349	0					
ANR	2651356	PrimaryExpression	3		2651349	1					
ANR	2651357	CompoundStatement		2:16:17:17	2651349	1					
ANR	2651358	ExpressionStatement	"printf ( ""condor_chirp whoareyou remotepath\\n"" )"	655:2:15446:15491	2651349	0	True				
ANR	2651359	CallExpression	"printf ( ""condor_chirp whoareyou remotepath\\n"" )"		2651349	0					
ANR	2651360	Callee	printf		2651349	0					
ANR	2651361	Identifier	printf		2651349	0					
ANR	2651362	ArgumentList	"""condor_chirp whoareyou remotepath\\n"""		2651349	1					
ANR	2651363	Argument	"""condor_chirp whoareyou remotepath\\n"""		2651349	0					
ANR	2651364	PrimaryExpression	"""condor_chirp whoareyou remotepath\\n"""		2651349	0					
ANR	2651365	ReturnStatement	return - 1 ;	656:2:15495:15504	2651349	1	True				
ANR	2651366	UnaryOperationExpression	- 1		2651349	0					
ANR	2651367	UnaryOperator	-		2651349	0					
ANR	2651368	PrimaryExpression	1		2651349	1					
ANR	2651369	IdentifierDeclStatement	struct chirp_client * client = 0 ;	659:1:15512:15543	2651349	1	True				
ANR	2651370	IdentifierDecl	* client = 0		2651349	0					
ANR	2651371	IdentifierDeclType	struct chirp_client *		2651349	0					
ANR	2651372	Identifier	client		2651349	1					
ANR	2651373	AssignmentExpression	* client = 0		2651349	2		=			
ANR	2651374	Identifier	client		2651349	0					
ANR	2651375	PrimaryExpression	0		2651349	1					
ANR	2651376	ExpressionStatement	CONNECT_STARTER ( client )	660:1:15546:15569	2651349	2	True				
ANR	2651377	CallExpression	CONNECT_STARTER ( client )		2651349	0					
ANR	2651378	Callee	CONNECT_STARTER		2651349	0					
ANR	2651379	Identifier	CONNECT_STARTER		2651349	0					
ANR	2651380	ArgumentList	client		2651349	1					
ANR	2651381	Argument	client		2651349	0					
ANR	2651382	Identifier	client		2651349	0					
ANR	2651383	IdentifierDeclStatement	char * buffer = ( char * ) malloc ( CHIRP_LINE_MAX ) ;	662:1:15574:15618	2651349	3	True				
ANR	2651384	IdentifierDecl	* buffer = ( char * ) malloc ( CHIRP_LINE_MAX )		2651349	0					
ANR	2651385	IdentifierDeclType	char *		2651349	0					
ANR	2651386	Identifier	buffer		2651349	1					
ANR	2651387	AssignmentExpression	* buffer = ( char * ) malloc ( CHIRP_LINE_MAX )		2651349	2		=			
ANR	2651388	Identifier	buffer		2651349	0					
ANR	2651389	CastExpression	( char * ) malloc ( CHIRP_LINE_MAX )		2651349	1					
ANR	2651390	CastTarget	char *		2651349	0					
ANR	2651391	CallExpression	malloc ( CHIRP_LINE_MAX )		2651349	1					
ANR	2651392	Callee	malloc		2651349	0					
ANR	2651393	Identifier	malloc		2651349	0					
ANR	2651394	ArgumentList	CHIRP_LINE_MAX		2651349	1					
ANR	2651395	Argument	CHIRP_LINE_MAX		2651349	0					
ANR	2651396	Identifier	CHIRP_LINE_MAX		2651349	0					
ANR	2651397	IdentifierDeclStatement	"int status = chirp_client_whoareyou ( client , argv [ 2 ] , buffer , CHIRP_LINE_MAX ) ;"	663:1:15621:15697	2651349	4	True				
ANR	2651398	IdentifierDecl	"status = chirp_client_whoareyou ( client , argv [ 2 ] , buffer , CHIRP_LINE_MAX )"		2651349	0					
ANR	2651399	IdentifierDeclType	int		2651349	0					
ANR	2651400	Identifier	status		2651349	1					
ANR	2651401	AssignmentExpression	"status = chirp_client_whoareyou ( client , argv [ 2 ] , buffer , CHIRP_LINE_MAX )"		2651349	2		=			
ANR	2651402	Identifier	status		2651349	0					
ANR	2651403	CallExpression	"chirp_client_whoareyou ( client , argv [ 2 ] , buffer , CHIRP_LINE_MAX )"		2651349	1					
ANR	2651404	Callee	chirp_client_whoareyou		2651349	0					
ANR	2651405	Identifier	chirp_client_whoareyou		2651349	0					
ANR	2651406	ArgumentList	client		2651349	1					
ANR	2651407	Argument	client		2651349	0					
ANR	2651408	Identifier	client		2651349	0					
ANR	2651409	Argument	argv [ 2 ]		2651349	1					
ANR	2651410	ArrayIndexing	argv [ 2 ]		2651349	0					
ANR	2651411	Identifier	argv		2651349	0					
ANR	2651412	PrimaryExpression	2		2651349	1					
ANR	2651413	Argument	buffer		2651349	2					
ANR	2651414	Identifier	buffer		2651349	0					
ANR	2651415	Argument	CHIRP_LINE_MAX		2651349	3					
ANR	2651416	Identifier	CHIRP_LINE_MAX		2651349	0					
ANR	2651417	ExpressionStatement	"printf ( ""%s\\n"" , buffer )"	664:1:15700:15722	2651349	5	True				
ANR	2651418	CallExpression	"printf ( ""%s\\n"" , buffer )"		2651349	0					
ANR	2651419	Callee	printf		2651349	0					
ANR	2651420	Identifier	printf		2651349	0					
ANR	2651421	ArgumentList	"""%s\\n"""		2651349	1					
ANR	2651422	Argument	"""%s\\n"""		2651349	0					
ANR	2651423	PrimaryExpression	"""%s\\n"""		2651349	0					
ANR	2651424	Argument	buffer		2651349	1					
ANR	2651425	Identifier	buffer		2651349	0					
ANR	2651426	ExpressionStatement	free ( buffer )	665:1:15725:15737	2651349	6	True				
ANR	2651427	CallExpression	free ( buffer )		2651349	0					
ANR	2651428	Callee	free		2651349	0					
ANR	2651429	Identifier	free		2651349	0					
ANR	2651430	ArgumentList	buffer		2651349	1					
ANR	2651431	Argument	buffer		2651349	0					
ANR	2651432	Identifier	buffer		2651349	0					
ANR	2651433	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , status )"	666:1:15740:15777	2651349	7	True				
ANR	2651434	CallExpression	"DISCONNECT_AND_RETURN ( client , status )"		2651349	0					
ANR	2651435	Callee	DISCONNECT_AND_RETURN		2651349	0					
ANR	2651436	Identifier	DISCONNECT_AND_RETURN		2651349	0					
ANR	2651437	ArgumentList	client		2651349	1					
ANR	2651438	Argument	client		2651349	0					
ANR	2651439	Identifier	client		2651349	0					
ANR	2651440	Argument	status		2651349	1					
ANR	2651441	Identifier	status		2651349	0					
ANR	2651442	ReturnType	int		2651349	1					
ANR	2651443	Identifier	chirp_whoareyou		2651349	2					
ANR	2651444	ParameterList	"int argc , char * * argv"		2651349	3					
ANR	2651445	Parameter	int argc	653:20:15401:15408	2651349	0	True				
ANR	2651446	ParameterType	int		2651349	0					
ANR	2651447	Identifier	argc		2651349	1					
ANR	2651448	Parameter	char * * argv	653:30:15411:15421	2651349	1	True				
ANR	2651449	ParameterType	char * *		2651349	0					
ANR	2651450	Identifier	argv		2651349	1					
ANR	2651451	CFGEntryNode	ENTRY		2651349		True				
ANR	2651452	CFGExitNode	EXIT		2651349		True				
ANR	2651453	Symbol	argc		2651349						
ANR	2651454	Symbol	malloc		2651349						
ANR	2651455	Symbol	client		2651349						
ANR	2651456	Symbol	chirp_client_whoareyou		2651349						
ANR	2651457	Symbol	* argv		2651349						
ANR	2651458	Symbol	buffer		2651349						
ANR	2651459	Symbol	CHIRP_LINE_MAX		2651349						
ANR	2651460	Symbol	argv		2651349						
ANR	2651461	Symbol	status		2651349						
ANR	2651462	Function	chirp_link	669:0:15782:16232							
ANR	2651463	FunctionDef	"chirp_link (int argc , char * * argv)"		2651462	0					
ANR	2651464	CompoundStatement		669:38:15820:16232	2651462	0					
ANR	2651465	IfStatement	"if ( argc < 4 || argc > 5 || ( argc == 5 && strcmp ( argv [ 2 ] , ""-s"" ) != 0 ) )"		2651462	0					
ANR	2651466	Condition	"argc < 4 || argc > 5 || ( argc == 5 && strcmp ( argv [ 2 ] , ""-s"" ) != 0 )"	670:5:15827:15891	2651462	0	True				
ANR	2651467	OrExpression	"argc < 4 || argc > 5 || ( argc == 5 && strcmp ( argv [ 2 ] , ""-s"" ) != 0 )"		2651462	0		||			
ANR	2651468	RelationalExpression	argc < 4		2651462	0		<			
ANR	2651469	Identifier	argc		2651462	0					
ANR	2651470	PrimaryExpression	4		2651462	1					
ANR	2651471	OrExpression	"argc > 5 || ( argc == 5 && strcmp ( argv [ 2 ] , ""-s"" ) != 0 )"		2651462	1		||			
ANR	2651472	RelationalExpression	argc > 5		2651462	0		>			
ANR	2651473	Identifier	argc		2651462	0					
ANR	2651474	PrimaryExpression	5		2651462	1					
ANR	2651475	AndExpression	"argc == 5 && strcmp ( argv [ 2 ] , ""-s"" ) != 0"		2651462	1		&&			
ANR	2651476	EqualityExpression	argc == 5		2651462	0		==			
ANR	2651477	Identifier	argc		2651462	0					
ANR	2651478	PrimaryExpression	5		2651462	1					
ANR	2651479	EqualityExpression	"strcmp ( argv [ 2 ] , ""-s"" ) != 0"		2651462	1		!=			
ANR	2651480	CallExpression	"strcmp ( argv [ 2 ] , ""-s"" )"		2651462	0					
ANR	2651481	Callee	strcmp		2651462	0					
ANR	2651482	Identifier	strcmp		2651462	0					
ANR	2651483	ArgumentList	argv [ 2 ]		2651462	1					
ANR	2651484	Argument	argv [ 2 ]		2651462	0					
ANR	2651485	ArrayIndexing	argv [ 2 ]		2651462	0					
ANR	2651486	Identifier	argv		2651462	0					
ANR	2651487	PrimaryExpression	2		2651462	1					
ANR	2651488	Argument	"""-s"""		2651462	1					
ANR	2651489	PrimaryExpression	"""-s"""		2651462	0					
ANR	2651490	PrimaryExpression	0		2651462	1					
ANR	2651491	CompoundStatement		2:72:73:73	2651462	1					
ANR	2651492	ExpressionStatement	"printf ( ""condor_chirp link [-s] oldpath newpath\\n"" )"	671:2:15898:15948	2651462	0	True				
ANR	2651493	CallExpression	"printf ( ""condor_chirp link [-s] oldpath newpath\\n"" )"		2651462	0					
ANR	2651494	Callee	printf		2651462	0					
ANR	2651495	Identifier	printf		2651462	0					
ANR	2651496	ArgumentList	"""condor_chirp link [-s] oldpath newpath\\n"""		2651462	1					
ANR	2651497	Argument	"""condor_chirp link [-s] oldpath newpath\\n"""		2651462	0					
ANR	2651498	PrimaryExpression	"""condor_chirp link [-s] oldpath newpath\\n"""		2651462	0					
ANR	2651499	ReturnStatement	return - 1 ;	672:2:15952:15961	2651462	1	True				
ANR	2651500	UnaryOperationExpression	- 1		2651462	0					
ANR	2651501	UnaryOperator	-		2651462	0					
ANR	2651502	PrimaryExpression	1		2651462	1					
ANR	2651503	IdentifierDeclStatement	struct chirp_client * client = 0 ;	675:1:15969:16000	2651462	1	True				
ANR	2651504	IdentifierDecl	* client = 0		2651462	0					
ANR	2651505	IdentifierDeclType	struct chirp_client *		2651462	0					
ANR	2651506	Identifier	client		2651462	1					
ANR	2651507	AssignmentExpression	* client = 0		2651462	2		=			
ANR	2651508	Identifier	client		2651462	0					
ANR	2651509	PrimaryExpression	0		2651462	1					
ANR	2651510	ExpressionStatement	CONNECT_STARTER ( client )	676:1:16003:16026	2651462	2	True				
ANR	2651511	CallExpression	CONNECT_STARTER ( client )		2651462	0					
ANR	2651512	Callee	CONNECT_STARTER		2651462	0					
ANR	2651513	Identifier	CONNECT_STARTER		2651462	0					
ANR	2651514	ArgumentList	client		2651462	1					
ANR	2651515	Argument	client		2651462	0					
ANR	2651516	Identifier	client		2651462	0					
ANR	2651517	IdentifierDeclStatement	int status = - 1 ;	678:1:16030:16045	2651462	3	True				
ANR	2651518	IdentifierDecl	status = - 1		2651462	0					
ANR	2651519	IdentifierDeclType	int		2651462	0					
ANR	2651520	Identifier	status		2651462	1					
ANR	2651521	AssignmentExpression	status = - 1		2651462	2		=			
ANR	2651522	Identifier	status		2651462	0					
ANR	2651523	UnaryOperationExpression	- 1		2651462	1					
ANR	2651524	UnaryOperator	-		2651462	0					
ANR	2651525	PrimaryExpression	1		2651462	1					
ANR	2651526	IfStatement	if ( argc == 5 )		2651462	4					
ANR	2651527	Condition	argc == 5	679:4:16051:16059	2651462	0	True				
ANR	2651528	EqualityExpression	argc == 5		2651462	0		==			
ANR	2651529	Identifier	argc		2651462	0					
ANR	2651530	PrimaryExpression	5		2651462	1					
ANR	2651531	CompoundStatement		11:15:241:241	2651462	1					
ANR	2651532	ExpressionStatement	"status = chirp_client_symlink ( client , argv [ 3 ] , argv [ 4 ] )"	680:2:16066:16121	2651462	0	True				
ANR	2651533	AssignmentExpression	"status = chirp_client_symlink ( client , argv [ 3 ] , argv [ 4 ] )"		2651462	0		=			
ANR	2651534	Identifier	status		2651462	0					
ANR	2651535	CallExpression	"chirp_client_symlink ( client , argv [ 3 ] , argv [ 4 ] )"		2651462	1					
ANR	2651536	Callee	chirp_client_symlink		2651462	0					
ANR	2651537	Identifier	chirp_client_symlink		2651462	0					
ANR	2651538	ArgumentList	client		2651462	1					
ANR	2651539	Argument	client		2651462	0					
ANR	2651540	Identifier	client		2651462	0					
ANR	2651541	Argument	argv [ 3 ]		2651462	1					
ANR	2651542	ArrayIndexing	argv [ 3 ]		2651462	0					
ANR	2651543	Identifier	argv		2651462	0					
ANR	2651544	PrimaryExpression	3		2651462	1					
ANR	2651545	Argument	argv [ 4 ]		2651462	2					
ANR	2651546	ArrayIndexing	argv [ 4 ]		2651462	0					
ANR	2651547	Identifier	argv		2651462	0					
ANR	2651548	PrimaryExpression	4		2651462	1					
ANR	2651549	ElseStatement	else		2651462	0					
ANR	2651550	CompoundStatement		13:8:310:310	2651462	0					
ANR	2651551	ExpressionStatement	"status = chirp_client_link ( client , argv [ 2 ] , argv [ 3 ] )"	682:2:16135:16187	2651462	0	True				
ANR	2651552	AssignmentExpression	"status = chirp_client_link ( client , argv [ 2 ] , argv [ 3 ] )"		2651462	0		=			
ANR	2651553	Identifier	status		2651462	0					
ANR	2651554	CallExpression	"chirp_client_link ( client , argv [ 2 ] , argv [ 3 ] )"		2651462	1					
ANR	2651555	Callee	chirp_client_link		2651462	0					
ANR	2651556	Identifier	chirp_client_link		2651462	0					
ANR	2651557	ArgumentList	client		2651462	1					
ANR	2651558	Argument	client		2651462	0					
ANR	2651559	Identifier	client		2651462	0					
ANR	2651560	Argument	argv [ 2 ]		2651462	1					
ANR	2651561	ArrayIndexing	argv [ 2 ]		2651462	0					
ANR	2651562	Identifier	argv		2651462	0					
ANR	2651563	PrimaryExpression	2		2651462	1					
ANR	2651564	Argument	argv [ 3 ]		2651462	2					
ANR	2651565	ArrayIndexing	argv [ 3 ]		2651462	0					
ANR	2651566	Identifier	argv		2651462	0					
ANR	2651567	PrimaryExpression	3		2651462	1					
ANR	2651568	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , status )"	684:1:16193:16230	2651462	5	True				
ANR	2651569	CallExpression	"DISCONNECT_AND_RETURN ( client , status )"		2651462	0					
ANR	2651570	Callee	DISCONNECT_AND_RETURN		2651462	0					
ANR	2651571	Identifier	DISCONNECT_AND_RETURN		2651462	0					
ANR	2651572	ArgumentList	client		2651462	1					
ANR	2651573	Argument	client		2651462	0					
ANR	2651574	Identifier	client		2651462	0					
ANR	2651575	Argument	status		2651462	1					
ANR	2651576	Identifier	status		2651462	0					
ANR	2651577	ReturnType	int		2651462	1					
ANR	2651578	Identifier	chirp_link		2651462	2					
ANR	2651579	ParameterList	"int argc , char * * argv"		2651462	3					
ANR	2651580	Parameter	int argc	669:15:15797:15804	2651462	0	True				
ANR	2651581	ParameterType	int		2651462	0					
ANR	2651582	Identifier	argc		2651462	1					
ANR	2651583	Parameter	char * * argv	669:25:15807:15817	2651462	1	True				
ANR	2651584	ParameterType	char * *		2651462	0					
ANR	2651585	Identifier	argv		2651462	1					
ANR	2651586	CFGEntryNode	ENTRY		2651462		True				
ANR	2651587	CFGExitNode	EXIT		2651462		True				
ANR	2651588	Symbol	argc		2651462						
ANR	2651589	Symbol	strcmp		2651462						
ANR	2651590	Symbol	chirp_client_link		2651462						
ANR	2651591	Symbol	client		2651462						
ANR	2651592	Symbol	chirp_client_symlink		2651462						
ANR	2651593	Symbol	* argv		2651462						
ANR	2651594	Symbol	argv		2651462						
ANR	2651595	Symbol	status		2651462						
ANR	2651596	Function	chirp_readlink	687:0:16235:16657							
ANR	2651597	FunctionDef	"chirp_readlink (int argc , char * * argv)"		2651596	0					
ANR	2651598	CompoundStatement		687:42:16277:16657	2651596	0					
ANR	2651599	IfStatement	if ( argc != 4 )		2651596	0					
ANR	2651600	Condition	argc != 4	688:5:16284:16292	2651596	0	True				
ANR	2651601	EqualityExpression	argc != 4		2651596	0		!=			
ANR	2651602	Identifier	argc		2651596	0					
ANR	2651603	PrimaryExpression	4		2651596	1					
ANR	2651604	CompoundStatement		2:16:17:17	2651596	1					
ANR	2651605	ExpressionStatement	"printf ( ""condor_chirp readlink remotepath length\\n"" )"	689:2:16299:16350	2651596	0	True				
ANR	2651606	CallExpression	"printf ( ""condor_chirp readlink remotepath length\\n"" )"		2651596	0					
ANR	2651607	Callee	printf		2651596	0					
ANR	2651608	Identifier	printf		2651596	0					
ANR	2651609	ArgumentList	"""condor_chirp readlink remotepath length\\n"""		2651596	1					
ANR	2651610	Argument	"""condor_chirp readlink remotepath length\\n"""		2651596	0					
ANR	2651611	PrimaryExpression	"""condor_chirp readlink remotepath length\\n"""		2651596	0					
ANR	2651612	ReturnStatement	return - 1 ;	690:2:16354:16363	2651596	1	True				
ANR	2651613	UnaryOperationExpression	- 1		2651596	0					
ANR	2651614	UnaryOperator	-		2651596	0					
ANR	2651615	PrimaryExpression	1		2651596	1					
ANR	2651616	IdentifierDeclStatement	struct chirp_client * client = 0 ;	693:1:16371:16402	2651596	1	True				
ANR	2651617	IdentifierDecl	* client = 0		2651596	0					
ANR	2651618	IdentifierDeclType	struct chirp_client *		2651596	0					
ANR	2651619	Identifier	client		2651596	1					
ANR	2651620	AssignmentExpression	* client = 0		2651596	2		=			
ANR	2651621	Identifier	client		2651596	0					
ANR	2651622	PrimaryExpression	0		2651596	1					
ANR	2651623	ExpressionStatement	CONNECT_STARTER ( client )	694:1:16405:16428	2651596	2	True				
ANR	2651624	CallExpression	CONNECT_STARTER ( client )		2651596	0					
ANR	2651625	Callee	CONNECT_STARTER		2651596	0					
ANR	2651626	Identifier	CONNECT_STARTER		2651596	0					
ANR	2651627	ArgumentList	client		2651596	1					
ANR	2651628	Argument	client		2651596	0					
ANR	2651629	Identifier	client		2651596	0					
ANR	2651630	IdentifierDeclStatement	char * buffer = NULL ;	696:1:16432:16451	2651596	3	True				
ANR	2651631	IdentifierDecl	* buffer = NULL		2651596	0					
ANR	2651632	IdentifierDeclType	char *		2651596	0					
ANR	2651633	Identifier	buffer		2651596	1					
ANR	2651634	AssignmentExpression	* buffer = NULL		2651596	2		=			
ANR	2651635	Identifier	NULL		2651596	0					
ANR	2651636	Identifier	NULL		2651596	1					
ANR	2651637	IdentifierDeclStatement	int length = atoi ( argv [ 3 ] ) ;	698:1:16455:16481	2651596	4	True				
ANR	2651638	IdentifierDecl	length = atoi ( argv [ 3 ] )		2651596	0					
ANR	2651639	IdentifierDeclType	int		2651596	0					
ANR	2651640	Identifier	length		2651596	1					
ANR	2651641	AssignmentExpression	length = atoi ( argv [ 3 ] )		2651596	2		=			
ANR	2651642	Identifier	length		2651596	0					
ANR	2651643	CallExpression	atoi ( argv [ 3 ] )		2651596	1					
ANR	2651644	Callee	atoi		2651596	0					
ANR	2651645	Identifier	atoi		2651596	0					
ANR	2651646	ArgumentList	argv [ 3 ]		2651596	1					
ANR	2651647	Argument	argv [ 3 ]		2651596	0					
ANR	2651648	ArrayIndexing	argv [ 3 ]		2651596	0					
ANR	2651649	Identifier	argv		2651596	0					
ANR	2651650	PrimaryExpression	3		2651596	1					
ANR	2651651	IdentifierDeclStatement	"int status = chirp_client_readlink ( client , argv [ 2 ] , length , & buffer ) ;"	699:1:16484:16552	2651596	5	True				
ANR	2651652	IdentifierDecl	"status = chirp_client_readlink ( client , argv [ 2 ] , length , & buffer )"		2651596	0					
ANR	2651653	IdentifierDeclType	int		2651596	0					
ANR	2651654	Identifier	status		2651596	1					
ANR	2651655	AssignmentExpression	"status = chirp_client_readlink ( client , argv [ 2 ] , length , & buffer )"		2651596	2		=			
ANR	2651656	Identifier	status		2651596	0					
ANR	2651657	CallExpression	"chirp_client_readlink ( client , argv [ 2 ] , length , & buffer )"		2651596	1					
ANR	2651658	Callee	chirp_client_readlink		2651596	0					
ANR	2651659	Identifier	chirp_client_readlink		2651596	0					
ANR	2651660	ArgumentList	client		2651596	1					
ANR	2651661	Argument	client		2651596	0					
ANR	2651662	Identifier	client		2651596	0					
ANR	2651663	Argument	argv [ 2 ]		2651596	1					
ANR	2651664	ArrayIndexing	argv [ 2 ]		2651596	0					
ANR	2651665	Identifier	argv		2651596	0					
ANR	2651666	PrimaryExpression	2		2651596	1					
ANR	2651667	Argument	length		2651596	2					
ANR	2651668	Identifier	length		2651596	0					
ANR	2651669	Argument	& buffer		2651596	3					
ANR	2651670	UnaryOperationExpression	& buffer		2651596	0					
ANR	2651671	UnaryOperator	&		2651596	0					
ANR	2651672	Identifier	buffer		2651596	1					
ANR	2651673	IfStatement	if ( status >= 0 )		2651596	6					
ANR	2651674	Condition	status >= 0	700:4:16558:16568	2651596	0	True				
ANR	2651675	RelationalExpression	status >= 0		2651596	0		>=			
ANR	2651676	Identifier	status		2651596	0					
ANR	2651677	PrimaryExpression	0		2651596	1					
ANR	2651678	CompoundStatement		14:17:293:293	2651596	1					
ANR	2651679	ExpressionStatement	"printf ( ""%s\\n"" , buffer )"	701:2:16575:16597	2651596	0	True				
ANR	2651680	CallExpression	"printf ( ""%s\\n"" , buffer )"		2651596	0					
ANR	2651681	Callee	printf		2651596	0					
ANR	2651682	Identifier	printf		2651596	0					
ANR	2651683	ArgumentList	"""%s\\n"""		2651596	1					
ANR	2651684	Argument	"""%s\\n"""		2651596	0					
ANR	2651685	PrimaryExpression	"""%s\\n"""		2651596	0					
ANR	2651686	Argument	buffer		2651596	1					
ANR	2651687	Identifier	buffer		2651596	0					
ANR	2651688	ExpressionStatement	free ( buffer )	703:1:16603:16615	2651596	7	True				
ANR	2651689	CallExpression	free ( buffer )		2651596	0					
ANR	2651690	Callee	free		2651596	0					
ANR	2651691	Identifier	free		2651596	0					
ANR	2651692	ArgumentList	buffer		2651596	1					
ANR	2651693	Argument	buffer		2651596	0					
ANR	2651694	Identifier	buffer		2651596	0					
ANR	2651695	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , status )"	704:1:16618:16655	2651596	8	True				
ANR	2651696	CallExpression	"DISCONNECT_AND_RETURN ( client , status )"		2651596	0					
ANR	2651697	Callee	DISCONNECT_AND_RETURN		2651596	0					
ANR	2651698	Identifier	DISCONNECT_AND_RETURN		2651596	0					
ANR	2651699	ArgumentList	client		2651596	1					
ANR	2651700	Argument	client		2651596	0					
ANR	2651701	Identifier	client		2651596	0					
ANR	2651702	Argument	status		2651596	1					
ANR	2651703	Identifier	status		2651596	0					
ANR	2651704	ReturnType	int		2651596	1					
ANR	2651705	Identifier	chirp_readlink		2651596	2					
ANR	2651706	ParameterList	"int argc , char * * argv"		2651596	3					
ANR	2651707	Parameter	int argc	687:19:16254:16261	2651596	0	True				
ANR	2651708	ParameterType	int		2651596	0					
ANR	2651709	Identifier	argc		2651596	1					
ANR	2651710	Parameter	char * * argv	687:29:16264:16274	2651596	1	True				
ANR	2651711	ParameterType	char * *		2651596	0					
ANR	2651712	Identifier	argv		2651596	1					
ANR	2651713	CFGEntryNode	ENTRY		2651596		True				
ANR	2651714	CFGExitNode	EXIT		2651596		True				
ANR	2651715	Symbol	argc		2651596						
ANR	2651716	Symbol	atoi		2651596						
ANR	2651717	Symbol	chirp_client_readlink		2651596						
ANR	2651718	Symbol	NULL		2651596						
ANR	2651719	Symbol	& buffer		2651596						
ANR	2651720	Symbol	length		2651596						
ANR	2651721	Symbol	client		2651596						
ANR	2651722	Symbol	* argv		2651596						
ANR	2651723	Symbol	buffer		2651596						
ANR	2651724	Symbol	argv		2651596						
ANR	2651725	Symbol	status		2651596						
ANR	2651726	Function	chirp_do_stat	707:0:16660:17137							
ANR	2651727	FunctionDef	"chirp_do_stat (int argc , char * * argv)"		2651726	0					
ANR	2651728	CompoundStatement		707:41:16701:17137	2651726	0					
ANR	2651729	IfStatement	if ( argc != 3 )		2651726	0					
ANR	2651730	Condition	argc != 3	708:5:16708:16716	2651726	0	True				
ANR	2651731	EqualityExpression	argc != 3		2651726	0		!=			
ANR	2651732	Identifier	argc		2651726	0					
ANR	2651733	PrimaryExpression	3		2651726	1					
ANR	2651734	CompoundStatement		2:16:17:17	2651726	1					
ANR	2651735	ExpressionStatement	"printf ( ""condor_chirp %s remotepath\\n"" , argv [ 1 ] )"	709:2:16723:16770	2651726	0	True				
ANR	2651736	CallExpression	"printf ( ""condor_chirp %s remotepath\\n"" , argv [ 1 ] )"		2651726	0					
ANR	2651737	Callee	printf		2651726	0					
ANR	2651738	Identifier	printf		2651726	0					
ANR	2651739	ArgumentList	"""condor_chirp %s remotepath\\n"""		2651726	1					
ANR	2651740	Argument	"""condor_chirp %s remotepath\\n"""		2651726	0					
ANR	2651741	PrimaryExpression	"""condor_chirp %s remotepath\\n"""		2651726	0					
ANR	2651742	Argument	argv [ 1 ]		2651726	1					
ANR	2651743	ArrayIndexing	argv [ 1 ]		2651726	0					
ANR	2651744	Identifier	argv		2651726	0					
ANR	2651745	PrimaryExpression	1		2651726	1					
ANR	2651746	ReturnStatement	return - 1 ;	710:2:16774:16783	2651726	1	True				
ANR	2651747	UnaryOperationExpression	- 1		2651726	0					
ANR	2651748	UnaryOperator	-		2651726	0					
ANR	2651749	PrimaryExpression	1		2651726	1					
ANR	2651750	IdentifierDeclStatement	struct chirp_client * client = 0 ;	713:1:16791:16822	2651726	1	True				
ANR	2651751	IdentifierDecl	* client = 0		2651726	0					
ANR	2651752	IdentifierDeclType	struct chirp_client *		2651726	0					
ANR	2651753	Identifier	client		2651726	1					
ANR	2651754	AssignmentExpression	* client = 0		2651726	2		=			
ANR	2651755	Identifier	client		2651726	0					
ANR	2651756	PrimaryExpression	0		2651726	1					
ANR	2651757	ExpressionStatement	CONNECT_STARTER ( client )	714:1:16825:16848	2651726	2	True				
ANR	2651758	CallExpression	CONNECT_STARTER ( client )		2651726	0					
ANR	2651759	Callee	CONNECT_STARTER		2651726	0					
ANR	2651760	Identifier	CONNECT_STARTER		2651726	0					
ANR	2651761	ArgumentList	client		2651726	1					
ANR	2651762	Argument	client		2651726	0					
ANR	2651763	Identifier	client		2651726	0					
ANR	2651764	IdentifierDeclStatement	struct chirp_stat stat ;	716:1:16853:16875	2651726	3	True				
ANR	2651765	IdentifierDecl	stat		2651726	0					
ANR	2651766	IdentifierDeclType	struct chirp_stat		2651726	0					
ANR	2651767	Identifier	stat		2651726	1					
ANR	2651768	IdentifierDeclStatement	int status = - 1 ;	717:1:16878:16893	2651726	4	True				
ANR	2651769	IdentifierDecl	status = - 1		2651726	0					
ANR	2651770	IdentifierDeclType	int		2651726	0					
ANR	2651771	Identifier	status		2651726	1					
ANR	2651772	AssignmentExpression	status = - 1		2651726	2		=			
ANR	2651773	Identifier	status		2651726	0					
ANR	2651774	UnaryOperationExpression	- 1		2651726	1					
ANR	2651775	UnaryOperator	-		2651726	0					
ANR	2651776	PrimaryExpression	1		2651726	1					
ANR	2651777	IfStatement	"if ( strcmp ( argv [ 1 ] , ""lstat"" ) == 0 )"		2651726	5					
ANR	2651778	Condition	"strcmp ( argv [ 1 ] , ""lstat"" ) == 0"	718:4:16899:16927	2651726	0	True				
ANR	2651779	EqualityExpression	"strcmp ( argv [ 1 ] , ""lstat"" ) == 0"		2651726	0		==			
ANR	2651780	CallExpression	"strcmp ( argv [ 1 ] , ""lstat"" )"		2651726	0					
ANR	2651781	Callee	strcmp		2651726	0					
ANR	2651782	Identifier	strcmp		2651726	0					
ANR	2651783	ArgumentList	argv [ 1 ]		2651726	1					
ANR	2651784	Argument	argv [ 1 ]		2651726	0					
ANR	2651785	ArrayIndexing	argv [ 1 ]		2651726	0					
ANR	2651786	Identifier	argv		2651726	0					
ANR	2651787	PrimaryExpression	1		2651726	1					
ANR	2651788	Argument	"""lstat"""		2651726	1					
ANR	2651789	PrimaryExpression	"""lstat"""		2651726	0					
ANR	2651790	PrimaryExpression	0		2651726	1					
ANR	2651791	CompoundStatement		12:35:228:228	2651726	1					
ANR	2651792	ExpressionStatement	"status = chirp_client_lstat ( client , argv [ 2 ] , & stat )"	719:2:16934:16985	2651726	0	True				
ANR	2651793	AssignmentExpression	"status = chirp_client_lstat ( client , argv [ 2 ] , & stat )"		2651726	0		=			
ANR	2651794	Identifier	status		2651726	0					
ANR	2651795	CallExpression	"chirp_client_lstat ( client , argv [ 2 ] , & stat )"		2651726	1					
ANR	2651796	Callee	chirp_client_lstat		2651726	0					
ANR	2651797	Identifier	chirp_client_lstat		2651726	0					
ANR	2651798	ArgumentList	client		2651726	1					
ANR	2651799	Argument	client		2651726	0					
ANR	2651800	Identifier	client		2651726	0					
ANR	2651801	Argument	argv [ 2 ]		2651726	1					
ANR	2651802	ArrayIndexing	argv [ 2 ]		2651726	0					
ANR	2651803	Identifier	argv		2651726	0					
ANR	2651804	PrimaryExpression	2		2651726	1					
ANR	2651805	Argument	& stat		2651726	2					
ANR	2651806	UnaryOperationExpression	& stat		2651726	0					
ANR	2651807	UnaryOperator	&		2651726	0					
ANR	2651808	Identifier	stat		2651726	1					
ANR	2651809	ElseStatement	else		2651726	0					
ANR	2651810	CompoundStatement		14:8:293:293	2651726	0					
ANR	2651811	ExpressionStatement	"status = chirp_client_stat ( client , argv [ 2 ] , & stat )"	721:2:16999:17049	2651726	0	True				
ANR	2651812	AssignmentExpression	"status = chirp_client_stat ( client , argv [ 2 ] , & stat )"		2651726	0		=			
ANR	2651813	Identifier	status		2651726	0					
ANR	2651814	CallExpression	"chirp_client_stat ( client , argv [ 2 ] , & stat )"		2651726	1					
ANR	2651815	Callee	chirp_client_stat		2651726	0					
ANR	2651816	Identifier	chirp_client_stat		2651726	0					
ANR	2651817	ArgumentList	client		2651726	1					
ANR	2651818	Argument	client		2651726	0					
ANR	2651819	Identifier	client		2651726	0					
ANR	2651820	Argument	argv [ 2 ]		2651726	1					
ANR	2651821	ArrayIndexing	argv [ 2 ]		2651726	0					
ANR	2651822	Identifier	argv		2651726	0					
ANR	2651823	PrimaryExpression	2		2651726	1					
ANR	2651824	Argument	& stat		2651726	2					
ANR	2651825	UnaryOperationExpression	& stat		2651726	0					
ANR	2651826	UnaryOperator	&		2651726	0					
ANR	2651827	Identifier	stat		2651726	1					
ANR	2651828	IfStatement	if ( status >= 0 )		2651726	6					
ANR	2651829	Condition	status >= 0	723:4:17058:17068	2651726	0	True				
ANR	2651830	RelationalExpression	status >= 0		2651726	0		>=			
ANR	2651831	Identifier	status		2651726	0					
ANR	2651832	PrimaryExpression	0		2651726	1					
ANR	2651833	CompoundStatement		17:17:369:369	2651726	1					
ANR	2651834	ExpressionStatement	print_stat ( & stat )	724:2:17075:17092	2651726	0	True				
ANR	2651835	CallExpression	print_stat ( & stat )		2651726	0					
ANR	2651836	Callee	print_stat		2651726	0					
ANR	2651837	Identifier	print_stat		2651726	0					
ANR	2651838	ArgumentList	& stat		2651726	1					
ANR	2651839	Argument	& stat		2651726	0					
ANR	2651840	UnaryOperationExpression	& stat		2651726	0					
ANR	2651841	UnaryOperator	&		2651726	0					
ANR	2651842	Identifier	stat		2651726	1					
ANR	2651843	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , status )"	726:1:17098:17135	2651726	7	True				
ANR	2651844	CallExpression	"DISCONNECT_AND_RETURN ( client , status )"		2651726	0					
ANR	2651845	Callee	DISCONNECT_AND_RETURN		2651726	0					
ANR	2651846	Identifier	DISCONNECT_AND_RETURN		2651726	0					
ANR	2651847	ArgumentList	client		2651726	1					
ANR	2651848	Argument	client		2651726	0					
ANR	2651849	Identifier	client		2651726	0					
ANR	2651850	Argument	status		2651726	1					
ANR	2651851	Identifier	status		2651726	0					
ANR	2651852	ReturnType	int		2651726	1					
ANR	2651853	Identifier	chirp_do_stat		2651726	2					
ANR	2651854	ParameterList	"int argc , char * * argv"		2651726	3					
ANR	2651855	Parameter	int argc	707:18:16678:16685	2651726	0	True				
ANR	2651856	ParameterType	int		2651726	0					
ANR	2651857	Identifier	argc		2651726	1					
ANR	2651858	Parameter	char * * argv	707:28:16688:16698	2651726	1	True				
ANR	2651859	ParameterType	char * *		2651726	0					
ANR	2651860	Identifier	argv		2651726	1					
ANR	2651861	CFGEntryNode	ENTRY		2651726		True				
ANR	2651862	CFGExitNode	EXIT		2651726		True				
ANR	2651863	Symbol	argc		2651726						
ANR	2651864	Symbol	strcmp		2651726						
ANR	2651865	Symbol	chirp_client_stat		2651726						
ANR	2651866	Symbol	stat		2651726						
ANR	2651867	Symbol	client		2651726						
ANR	2651868	Symbol	* argv		2651726						
ANR	2651869	Symbol	chirp_client_lstat		2651726						
ANR	2651870	Symbol	argv		2651726						
ANR	2651871	Symbol	status		2651726						
ANR	2651872	Symbol	& stat		2651726						
ANR	2651873	Function	chirp_do_statfs	729:0:17140:17505							
ANR	2651874	FunctionDef	"chirp_do_statfs (int argc , char * * argv)"		2651873	0					
ANR	2651875	CompoundStatement		729:43:17183:17505	2651873	0					
ANR	2651876	IfStatement	if ( argc != 3 )		2651873	0					
ANR	2651877	Condition	argc != 3	730:5:17190:17198	2651873	0	True				
ANR	2651878	EqualityExpression	argc != 3		2651873	0		!=			
ANR	2651879	Identifier	argc		2651873	0					
ANR	2651880	PrimaryExpression	3		2651873	1					
ANR	2651881	CompoundStatement		2:16:17:17	2651873	1					
ANR	2651882	ExpressionStatement	"printf ( ""condor_chirp statfs remotepath\\n"" )"	731:2:17205:17247	2651873	0	True				
ANR	2651883	CallExpression	"printf ( ""condor_chirp statfs remotepath\\n"" )"		2651873	0					
ANR	2651884	Callee	printf		2651873	0					
ANR	2651885	Identifier	printf		2651873	0					
ANR	2651886	ArgumentList	"""condor_chirp statfs remotepath\\n"""		2651873	1					
ANR	2651887	Argument	"""condor_chirp statfs remotepath\\n"""		2651873	0					
ANR	2651888	PrimaryExpression	"""condor_chirp statfs remotepath\\n"""		2651873	0					
ANR	2651889	ReturnStatement	return - 1 ;	732:2:17251:17260	2651873	1	True				
ANR	2651890	UnaryOperationExpression	- 1		2651873	0					
ANR	2651891	UnaryOperator	-		2651873	0					
ANR	2651892	PrimaryExpression	1		2651873	1					
ANR	2651893	IdentifierDeclStatement	struct chirp_client * client = 0 ;	735:1:17268:17299	2651873	1	True				
ANR	2651894	IdentifierDecl	* client = 0		2651873	0					
ANR	2651895	IdentifierDeclType	struct chirp_client *		2651873	0					
ANR	2651896	Identifier	client		2651873	1					
ANR	2651897	AssignmentExpression	* client = 0		2651873	2		=			
ANR	2651898	Identifier	client		2651873	0					
ANR	2651899	PrimaryExpression	0		2651873	1					
ANR	2651900	ExpressionStatement	CONNECT_STARTER ( client )	736:1:17302:17325	2651873	2	True				
ANR	2651901	CallExpression	CONNECT_STARTER ( client )		2651873	0					
ANR	2651902	Callee	CONNECT_STARTER		2651873	0					
ANR	2651903	Identifier	CONNECT_STARTER		2651873	0					
ANR	2651904	ArgumentList	client		2651873	1					
ANR	2651905	Argument	client		2651873	0					
ANR	2651906	Identifier	client		2651873	0					
ANR	2651907	IdentifierDeclStatement	struct chirp_statfs statfs ;	738:1:17329:17355	2651873	3	True				
ANR	2651908	IdentifierDecl	statfs		2651873	0					
ANR	2651909	IdentifierDeclType	struct chirp_statfs		2651873	0					
ANR	2651910	Identifier	statfs		2651873	1					
ANR	2651911	IdentifierDeclStatement	"int status = chirp_client_statfs ( client , argv [ 2 ] , & statfs ) ;"	739:1:17358:17416	2651873	4	True				
ANR	2651912	IdentifierDecl	"status = chirp_client_statfs ( client , argv [ 2 ] , & statfs )"		2651873	0					
ANR	2651913	IdentifierDeclType	int		2651873	0					
ANR	2651914	Identifier	status		2651873	1					
ANR	2651915	AssignmentExpression	"status = chirp_client_statfs ( client , argv [ 2 ] , & statfs )"		2651873	2		=			
ANR	2651916	Identifier	status		2651873	0					
ANR	2651917	CallExpression	"chirp_client_statfs ( client , argv [ 2 ] , & statfs )"		2651873	1					
ANR	2651918	Callee	chirp_client_statfs		2651873	0					
ANR	2651919	Identifier	chirp_client_statfs		2651873	0					
ANR	2651920	ArgumentList	client		2651873	1					
ANR	2651921	Argument	client		2651873	0					
ANR	2651922	Identifier	client		2651873	0					
ANR	2651923	Argument	argv [ 2 ]		2651873	1					
ANR	2651924	ArrayIndexing	argv [ 2 ]		2651873	0					
ANR	2651925	Identifier	argv		2651873	0					
ANR	2651926	PrimaryExpression	2		2651873	1					
ANR	2651927	Argument	& statfs		2651873	2					
ANR	2651928	UnaryOperationExpression	& statfs		2651873	0					
ANR	2651929	UnaryOperator	&		2651873	0					
ANR	2651930	Identifier	statfs		2651873	1					
ANR	2651931	IfStatement	if ( status >= 0 )		2651873	5					
ANR	2651932	Condition	status >= 0	740:4:17422:17432	2651873	0	True				
ANR	2651933	RelationalExpression	status >= 0		2651873	0		>=			
ANR	2651934	Identifier	status		2651873	0					
ANR	2651935	PrimaryExpression	0		2651873	1					
ANR	2651936	CompoundStatement		12:17:251:251	2651873	1					
ANR	2651937	ExpressionStatement	print_statfs ( & statfs )	741:2:17439:17460	2651873	0	True				
ANR	2651938	CallExpression	print_statfs ( & statfs )		2651873	0					
ANR	2651939	Callee	print_statfs		2651873	0					
ANR	2651940	Identifier	print_statfs		2651873	0					
ANR	2651941	ArgumentList	& statfs		2651873	1					
ANR	2651942	Argument	& statfs		2651873	0					
ANR	2651943	UnaryOperationExpression	& statfs		2651873	0					
ANR	2651944	UnaryOperator	&		2651873	0					
ANR	2651945	Identifier	statfs		2651873	1					
ANR	2651946	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , status )"	743:1:17466:17503	2651873	6	True				
ANR	2651947	CallExpression	"DISCONNECT_AND_RETURN ( client , status )"		2651873	0					
ANR	2651948	Callee	DISCONNECT_AND_RETURN		2651873	0					
ANR	2651949	Identifier	DISCONNECT_AND_RETURN		2651873	0					
ANR	2651950	ArgumentList	client		2651873	1					
ANR	2651951	Argument	client		2651873	0					
ANR	2651952	Identifier	client		2651873	0					
ANR	2651953	Argument	status		2651873	1					
ANR	2651954	Identifier	status		2651873	0					
ANR	2651955	ReturnType	int		2651873	1					
ANR	2651956	Identifier	chirp_do_statfs		2651873	2					
ANR	2651957	ParameterList	"int argc , char * * argv"		2651873	3					
ANR	2651958	Parameter	int argc	729:20:17160:17167	2651873	0	True				
ANR	2651959	ParameterType	int		2651873	0					
ANR	2651960	Identifier	argc		2651873	1					
ANR	2651961	Parameter	char * * argv	729:30:17170:17180	2651873	1	True				
ANR	2651962	ParameterType	char * *		2651873	0					
ANR	2651963	Identifier	argv		2651873	1					
ANR	2651964	CFGEntryNode	ENTRY		2651873		True				
ANR	2651965	CFGExitNode	EXIT		2651873		True				
ANR	2651966	Symbol	argc		2651873						
ANR	2651967	Symbol	client		2651873						
ANR	2651968	Symbol	& statfs		2651873						
ANR	2651969	Symbol	* argv		2651873						
ANR	2651970	Symbol	statfs		2651873						
ANR	2651971	Symbol	argv		2651873						
ANR	2651972	Symbol	chirp_client_statfs		2651873						
ANR	2651973	Symbol	status		2651873						
ANR	2651974	Function	chirp_access	746:0:17508:18171							
ANR	2651975	FunctionDef	"chirp_access (int argc , char * * argv)"		2651974	0					
ANR	2651976	CompoundStatement		746:40:17548:18171	2651974	0					
ANR	2651977	IfStatement	if ( argc != 4 )		2651974	0					
ANR	2651978	Condition	argc != 4	747:5:17555:17563	2651974	0	True				
ANR	2651979	EqualityExpression	argc != 4		2651974	0		!=			
ANR	2651980	Identifier	argc		2651974	0					
ANR	2651981	PrimaryExpression	4		2651974	1					
ANR	2651982	CompoundStatement		2:16:17:17	2651974	1					
ANR	2651983	ExpressionStatement	"printf ( ""condor_chirp access remotepath mode(rwxf)\\n"" )"	748:2:17570:17623	2651974	0	True				
ANR	2651984	CallExpression	"printf ( ""condor_chirp access remotepath mode(rwxf)\\n"" )"		2651974	0					
ANR	2651985	Callee	printf		2651974	0					
ANR	2651986	Identifier	printf		2651974	0					
ANR	2651987	ArgumentList	"""condor_chirp access remotepath mode(rwxf)\\n"""		2651974	1					
ANR	2651988	Argument	"""condor_chirp access remotepath mode(rwxf)\\n"""		2651974	0					
ANR	2651989	PrimaryExpression	"""condor_chirp access remotepath mode(rwxf)\\n"""		2651974	0					
ANR	2651990	ReturnStatement	return - 1 ;	749:2:17627:17636	2651974	1	True				
ANR	2651991	UnaryOperationExpression	- 1		2651974	0					
ANR	2651992	UnaryOperator	-		2651974	0					
ANR	2651993	PrimaryExpression	1		2651974	1					
ANR	2651994	IdentifierDeclStatement	struct chirp_client * client = 0 ;	752:1:17644:17675	2651974	1	True				
ANR	2651995	IdentifierDecl	* client = 0		2651974	0					
ANR	2651996	IdentifierDeclType	struct chirp_client *		2651974	0					
ANR	2651997	Identifier	client		2651974	1					
ANR	2651998	AssignmentExpression	* client = 0		2651974	2		=			
ANR	2651999	Identifier	client		2651974	0					
ANR	2652000	PrimaryExpression	0		2651974	1					
ANR	2652001	ExpressionStatement	CONNECT_STARTER ( client )	753:1:17678:17701	2651974	2	True				
ANR	2652002	CallExpression	CONNECT_STARTER ( client )		2651974	0					
ANR	2652003	Callee	CONNECT_STARTER		2651974	0					
ANR	2652004	Identifier	CONNECT_STARTER		2651974	0					
ANR	2652005	ArgumentList	client		2651974	1					
ANR	2652006	Argument	client		2651974	0					
ANR	2652007	Identifier	client		2651974	0					
ANR	2652008	IdentifierDeclStatement	int mode = 0 ;	755:1:17705:17717	2651974	3	True				
ANR	2652009	IdentifierDecl	mode = 0		2651974	0					
ANR	2652010	IdentifierDeclType	int		2651974	0					
ANR	2652011	Identifier	mode		2651974	1					
ANR	2652012	AssignmentExpression	mode = 0		2651974	2		=			
ANR	2652013	Identifier	mode		2651974	0					
ANR	2652014	PrimaryExpression	0		2651974	1					
ANR	2652015	IdentifierDeclStatement	char * m = argv [ 3 ] ;	756:1:17721:17738	2651974	4	True				
ANR	2652016	IdentifierDecl	* m = argv [ 3 ]		2651974	0					
ANR	2652017	IdentifierDeclType	char *		2651974	0					
ANR	2652018	Identifier	m		2651974	1					
ANR	2652019	AssignmentExpression	* m = argv [ 3 ]		2651974	2		=			
ANR	2652020	Identifier	m		2651974	0					
ANR	2652021	ArrayIndexing	argv [ 3 ]		2651974	1					
ANR	2652022	Identifier	argv		2651974	0					
ANR	2652023	PrimaryExpression	3		2651974	1					
ANR	2652024	WhileStatement	while ( * m != '\\0' )		2651974	5					
ANR	2652025	Condition	* m != '\\0'	757:7:17747:17756	2651974	0	True				
ANR	2652026	EqualityExpression	* m != '\\0'		2651974	0		!=			
ANR	2652027	UnaryOperationExpression	* m		2651974	0					
ANR	2652028	UnaryOperator	*		2651974	0					
ANR	2652029	Identifier	m		2651974	1					
ANR	2652030	PrimaryExpression	'\\0'		2651974	1					
ANR	2652031	CompoundStatement		12:19:210:210	2651974	1					
ANR	2652032	SwitchStatement	switch ( * m )		2651974	0					
ANR	2652033	Condition	* m	758:9:17770:17771	2651974	0	True				
ANR	2652034	UnaryOperationExpression	* m		2651974	0					
ANR	2652035	UnaryOperator	*		2651974	0					
ANR	2652036	Identifier	m		2651974	1					
ANR	2652037	CompoundStatement		13:13:225:225	2651974	1					
ANR	2652038	Label	case 'r' :	759:3:17779:17787	2651974	0	True				
ANR	2652039	ExpressionStatement	mode |= R_OK	760:4:17793:17805	2651974	1	True				
ANR	2652040	AssignmentExpression	mode |= R_OK		2651974	0		|=			
ANR	2652041	Identifier	mode		2651974	0					
ANR	2652042	Identifier	R_OK		2651974	1					
ANR	2652043	BreakStatement	break ;	761:4:17811:17816	2651974	2	True				
ANR	2652044	Label	case 'w' :	762:3:17821:17829	2651974	3	True				
ANR	2652045	ExpressionStatement	mode |= W_OK	763:4:17835:17847	2651974	4	True				
ANR	2652046	AssignmentExpression	mode |= W_OK		2651974	0		|=			
ANR	2652047	Identifier	mode		2651974	0					
ANR	2652048	Identifier	W_OK		2651974	1					
ANR	2652049	BreakStatement	break ;	764:4:17853:17858	2651974	5	True				
ANR	2652050	Label	case 'x' :	765:3:17863:17871	2651974	6	True				
ANR	2652051	ExpressionStatement	mode |= X_OK	766:4:17877:17889	2651974	7	True				
ANR	2652052	AssignmentExpression	mode |= X_OK		2651974	0		|=			
ANR	2652053	Identifier	mode		2651974	0					
ANR	2652054	Identifier	X_OK		2651974	1					
ANR	2652055	BreakStatement	break ;	767:4:17895:17900	2651974	8	True				
ANR	2652056	Label	case 'f' :	768:3:17905:17913	2651974	9	True				
ANR	2652057	ExpressionStatement	mode |= F_OK	769:4:17919:17931	2651974	10	True				
ANR	2652058	AssignmentExpression	mode |= F_OK		2651974	0		|=			
ANR	2652059	Identifier	mode		2651974	0					
ANR	2652060	Identifier	F_OK		2651974	1					
ANR	2652061	BreakStatement	break ;	770:4:17937:17942	2651974	11	True				
ANR	2652062	Label	default :	771:3:17947:17954	2651974	12	True				
ANR	2652063	Identifier	default		2651974	0					
ANR	2652064	ExpressionStatement	"fprintf ( stderr , ""invalid mode char '%c'\\n"" , * m )"	772:4:17960:18007	2651974	13	True				
ANR	2652065	CallExpression	"fprintf ( stderr , ""invalid mode char '%c'\\n"" , * m )"		2651974	0					
ANR	2652066	Callee	fprintf		2651974	0					
ANR	2652067	Identifier	fprintf		2651974	0					
ANR	2652068	ArgumentList	stderr		2651974	1					
ANR	2652069	Argument	stderr		2651974	0					
ANR	2652070	Identifier	stderr		2651974	0					
ANR	2652071	Argument	"""invalid mode char '%c'\\n"""		2651974	1					
ANR	2652072	PrimaryExpression	"""invalid mode char '%c'\\n"""		2651974	0					
ANR	2652073	Argument	* m		2651974	2					
ANR	2652074	UnaryOperationExpression	* m		2651974	0					
ANR	2652075	UnaryOperator	*		2651974	0					
ANR	2652076	Identifier	m		2651974	1					
ANR	2652077	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , - 1 )"	773:4:18013:18046	2651974	14	True				
ANR	2652078	CallExpression	"DISCONNECT_AND_RETURN ( client , - 1 )"		2651974	0					
ANR	2652079	Callee	DISCONNECT_AND_RETURN		2651974	0					
ANR	2652080	Identifier	DISCONNECT_AND_RETURN		2651974	0					
ANR	2652081	ArgumentList	client		2651974	1					
ANR	2652082	Argument	client		2651974	0					
ANR	2652083	Identifier	client		2651974	0					
ANR	2652084	Argument	- 1		2651974	1					
ANR	2652085	UnaryOperationExpression	- 1		2651974	0					
ANR	2652086	UnaryOperator	-		2651974	0					
ANR	2652087	PrimaryExpression	1		2651974	1					
ANR	2652088	BreakStatement	break ;	774:4:18052:18057	2651974	15	True				
ANR	2652089	ExpressionStatement	m ++	776:2:18065:18068	2651974	1	True				
ANR	2652090	PostIncDecOperationExpression	m ++		2651974	0					
ANR	2652091	Identifier	m		2651974	0					
ANR	2652092	IncDec	++		2651974	1					
ANR	2652093	IdentifierDeclStatement	"int status = chirp_client_access ( client , argv [ 2 ] , mode ) ;"	778:1:18074:18129	2651974	6	True				
ANR	2652094	IdentifierDecl	"status = chirp_client_access ( client , argv [ 2 ] , mode )"		2651974	0					
ANR	2652095	IdentifierDeclType	int		2651974	0					
ANR	2652096	Identifier	status		2651974	1					
ANR	2652097	AssignmentExpression	"status = chirp_client_access ( client , argv [ 2 ] , mode )"		2651974	2		=			
ANR	2652098	Identifier	status		2651974	0					
ANR	2652099	CallExpression	"chirp_client_access ( client , argv [ 2 ] , mode )"		2651974	1					
ANR	2652100	Callee	chirp_client_access		2651974	0					
ANR	2652101	Identifier	chirp_client_access		2651974	0					
ANR	2652102	ArgumentList	client		2651974	1					
ANR	2652103	Argument	client		2651974	0					
ANR	2652104	Identifier	client		2651974	0					
ANR	2652105	Argument	argv [ 2 ]		2651974	1					
ANR	2652106	ArrayIndexing	argv [ 2 ]		2651974	0					
ANR	2652107	Identifier	argv		2651974	0					
ANR	2652108	PrimaryExpression	2		2651974	1					
ANR	2652109	Argument	mode		2651974	2					
ANR	2652110	Identifier	mode		2651974	0					
ANR	2652111	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , status )"	779:1:18132:18169	2651974	7	True				
ANR	2652112	CallExpression	"DISCONNECT_AND_RETURN ( client , status )"		2651974	0					
ANR	2652113	Callee	DISCONNECT_AND_RETURN		2651974	0					
ANR	2652114	Identifier	DISCONNECT_AND_RETURN		2651974	0					
ANR	2652115	ArgumentList	client		2651974	1					
ANR	2652116	Argument	client		2651974	0					
ANR	2652117	Identifier	client		2651974	0					
ANR	2652118	Argument	status		2651974	1					
ANR	2652119	Identifier	status		2651974	0					
ANR	2652120	ReturnType	int		2651974	1					
ANR	2652121	Identifier	chirp_access		2651974	2					
ANR	2652122	ParameterList	"int argc , char * * argv"		2651974	3					
ANR	2652123	Parameter	int argc	746:17:17525:17532	2651974	0	True				
ANR	2652124	ParameterType	int		2651974	0					
ANR	2652125	Identifier	argc		2651974	1					
ANR	2652126	Parameter	char * * argv	746:27:17535:17545	2651974	1	True				
ANR	2652127	ParameterType	char * *		2651974	0					
ANR	2652128	Identifier	argv		2651974	1					
ANR	2652129	CFGEntryNode	ENTRY		2651974		True				
ANR	2652130	CFGExitNode	EXIT		2651974		True				
ANR	2652131	Symbol	argc		2651974						
ANR	2652132	Symbol	* argv		2651974						
ANR	2652133	Symbol	X_OK		2651974						
ANR	2652134	Symbol	W_OK		2651974						
ANR	2652135	Symbol	stderr		2651974						
ANR	2652136	Symbol	argv		2651974						
ANR	2652137	Symbol	m		2651974						
ANR	2652138	Symbol	R_OK		2651974						
ANR	2652139	Symbol	mode		2651974						
ANR	2652140	Symbol	F_OK		2651974						
ANR	2652141	Symbol	* m		2651974						
ANR	2652142	Symbol	client		2651974						
ANR	2652143	Symbol	chirp_client_access		2651974						
ANR	2652144	Symbol	status		2651974						
ANR	2652145	Function	chirp_chmod	782:0:18174:18506							
ANR	2652146	FunctionDef	"chirp_chmod (int argc , char * * argv)"		2652145	0					
ANR	2652147	CompoundStatement		782:39:18213:18506	2652145	0					
ANR	2652148	IfStatement	if ( argc != 4 )		2652145	0					
ANR	2652149	Condition	argc != 4	783:5:18220:18228	2652145	0	True				
ANR	2652150	EqualityExpression	argc != 4		2652145	0		!=			
ANR	2652151	Identifier	argc		2652145	0					
ANR	2652152	PrimaryExpression	4		2652145	1					
ANR	2652153	CompoundStatement		2:16:17:17	2652145	1					
ANR	2652154	ExpressionStatement	"printf ( ""condor_chirp chmod remotepath mode\\n"" )"	784:2:18235:18281	2652145	0	True				
ANR	2652155	CallExpression	"printf ( ""condor_chirp chmod remotepath mode\\n"" )"		2652145	0					
ANR	2652156	Callee	printf		2652145	0					
ANR	2652157	Identifier	printf		2652145	0					
ANR	2652158	ArgumentList	"""condor_chirp chmod remotepath mode\\n"""		2652145	1					
ANR	2652159	Argument	"""condor_chirp chmod remotepath mode\\n"""		2652145	0					
ANR	2652160	PrimaryExpression	"""condor_chirp chmod remotepath mode\\n"""		2652145	0					
ANR	2652161	ReturnStatement	return - 1 ;	785:2:18285:18294	2652145	1	True				
ANR	2652162	UnaryOperationExpression	- 1		2652145	0					
ANR	2652163	UnaryOperator	-		2652145	0					
ANR	2652164	PrimaryExpression	1		2652145	1					
ANR	2652165	IdentifierDeclStatement	struct chirp_client * client = 0 ;	788:1:18302:18333	2652145	1	True				
ANR	2652166	IdentifierDecl	* client = 0		2652145	0					
ANR	2652167	IdentifierDeclType	struct chirp_client *		2652145	0					
ANR	2652168	Identifier	client		2652145	1					
ANR	2652169	AssignmentExpression	* client = 0		2652145	2		=			
ANR	2652170	Identifier	client		2652145	0					
ANR	2652171	PrimaryExpression	0		2652145	1					
ANR	2652172	ExpressionStatement	CONNECT_STARTER ( client )	789:1:18336:18359	2652145	2	True				
ANR	2652173	CallExpression	CONNECT_STARTER ( client )		2652145	0					
ANR	2652174	Callee	CONNECT_STARTER		2652145	0					
ANR	2652175	Identifier	CONNECT_STARTER		2652145	0					
ANR	2652176	ArgumentList	client		2652145	1					
ANR	2652177	Argument	client		2652145	0					
ANR	2652178	Identifier	client		2652145	0					
ANR	2652179	IdentifierDeclStatement	unsigned mode ;	791:1:18363:18376	2652145	3	True				
ANR	2652180	IdentifierDecl	mode		2652145	0					
ANR	2652181	IdentifierDeclType	unsigned		2652145	0					
ANR	2652182	Identifier	mode		2652145	1					
ANR	2652183	ExpressionStatement	"sscanf ( argv [ 3 ] , ""%o"" , & mode )"	792:1:18379:18407	2652145	4	True				
ANR	2652184	CallExpression	"sscanf ( argv [ 3 ] , ""%o"" , & mode )"		2652145	0					
ANR	2652185	Callee	sscanf		2652145	0					
ANR	2652186	Identifier	sscanf		2652145	0					
ANR	2652187	ArgumentList	argv [ 3 ]		2652145	1					
ANR	2652188	Argument	argv [ 3 ]		2652145	0					
ANR	2652189	ArrayIndexing	argv [ 3 ]		2652145	0					
ANR	2652190	Identifier	argv		2652145	0					
ANR	2652191	PrimaryExpression	3		2652145	1					
ANR	2652192	Argument	"""%o"""		2652145	1					
ANR	2652193	PrimaryExpression	"""%o"""		2652145	0					
ANR	2652194	Argument	& mode		2652145	2					
ANR	2652195	UnaryOperationExpression	& mode		2652145	0					
ANR	2652196	UnaryOperator	&		2652145	0					
ANR	2652197	Identifier	mode		2652145	1					
ANR	2652198	IdentifierDeclStatement	"int status = chirp_client_chmod ( client , argv [ 2 ] , mode ) ;"	793:1:18410:18464	2652145	5	True				
ANR	2652199	IdentifierDecl	"status = chirp_client_chmod ( client , argv [ 2 ] , mode )"		2652145	0					
ANR	2652200	IdentifierDeclType	int		2652145	0					
ANR	2652201	Identifier	status		2652145	1					
ANR	2652202	AssignmentExpression	"status = chirp_client_chmod ( client , argv [ 2 ] , mode )"		2652145	2		=			
ANR	2652203	Identifier	status		2652145	0					
ANR	2652204	CallExpression	"chirp_client_chmod ( client , argv [ 2 ] , mode )"		2652145	1					
ANR	2652205	Callee	chirp_client_chmod		2652145	0					
ANR	2652206	Identifier	chirp_client_chmod		2652145	0					
ANR	2652207	ArgumentList	client		2652145	1					
ANR	2652208	Argument	client		2652145	0					
ANR	2652209	Identifier	client		2652145	0					
ANR	2652210	Argument	argv [ 2 ]		2652145	1					
ANR	2652211	ArrayIndexing	argv [ 2 ]		2652145	0					
ANR	2652212	Identifier	argv		2652145	0					
ANR	2652213	PrimaryExpression	2		2652145	1					
ANR	2652214	Argument	mode		2652145	2					
ANR	2652215	Identifier	mode		2652145	0					
ANR	2652216	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , status )"	794:1:18467:18504	2652145	6	True				
ANR	2652217	CallExpression	"DISCONNECT_AND_RETURN ( client , status )"		2652145	0					
ANR	2652218	Callee	DISCONNECT_AND_RETURN		2652145	0					
ANR	2652219	Identifier	DISCONNECT_AND_RETURN		2652145	0					
ANR	2652220	ArgumentList	client		2652145	1					
ANR	2652221	Argument	client		2652145	0					
ANR	2652222	Identifier	client		2652145	0					
ANR	2652223	Argument	status		2652145	1					
ANR	2652224	Identifier	status		2652145	0					
ANR	2652225	ReturnType	int		2652145	1					
ANR	2652226	Identifier	chirp_chmod		2652145	2					
ANR	2652227	ParameterList	"int argc , char * * argv"		2652145	3					
ANR	2652228	Parameter	int argc	782:16:18190:18197	2652145	0	True				
ANR	2652229	ParameterType	int		2652145	0					
ANR	2652230	Identifier	argc		2652145	1					
ANR	2652231	Parameter	char * * argv	782:26:18200:18210	2652145	1	True				
ANR	2652232	ParameterType	char * *		2652145	0					
ANR	2652233	Identifier	argv		2652145	1					
ANR	2652234	CFGEntryNode	ENTRY		2652145		True				
ANR	2652235	CFGExitNode	EXIT		2652145		True				
ANR	2652236	Symbol	argc		2652145						
ANR	2652237	Symbol	mode		2652145						
ANR	2652238	Symbol	& mode		2652145						
ANR	2652239	Symbol	client		2652145						
ANR	2652240	Symbol	chirp_client_chmod		2652145						
ANR	2652241	Symbol	* argv		2652145						
ANR	2652242	Symbol	argv		2652145						
ANR	2652243	Symbol	status		2652145						
ANR	2652244	Function	chirp_chown	797:0:18509:18979							
ANR	2652245	FunctionDef	"chirp_chown (int argc , char * * argv)"		2652244	0					
ANR	2652246	CompoundStatement		797:39:18548:18979	2652244	0					
ANR	2652247	IfStatement	if ( argc != 5 )		2652244	0					
ANR	2652248	Condition	argc != 5	798:5:18555:18563	2652244	0	True				
ANR	2652249	EqualityExpression	argc != 5		2652244	0		!=			
ANR	2652250	Identifier	argc		2652244	0					
ANR	2652251	PrimaryExpression	5		2652244	1					
ANR	2652252	CompoundStatement		2:16:17:17	2652244	1					
ANR	2652253	ExpressionStatement	"printf ( ""condor_chirp %s remotepath uid gid\\n"" , argv [ 1 ] )"	799:2:18570:18625	2652244	0	True				
ANR	2652254	CallExpression	"printf ( ""condor_chirp %s remotepath uid gid\\n"" , argv [ 1 ] )"		2652244	0					
ANR	2652255	Callee	printf		2652244	0					
ANR	2652256	Identifier	printf		2652244	0					
ANR	2652257	ArgumentList	"""condor_chirp %s remotepath uid gid\\n"""		2652244	1					
ANR	2652258	Argument	"""condor_chirp %s remotepath uid gid\\n"""		2652244	0					
ANR	2652259	PrimaryExpression	"""condor_chirp %s remotepath uid gid\\n"""		2652244	0					
ANR	2652260	Argument	argv [ 1 ]		2652244	1					
ANR	2652261	ArrayIndexing	argv [ 1 ]		2652244	0					
ANR	2652262	Identifier	argv		2652244	0					
ANR	2652263	PrimaryExpression	1		2652244	1					
ANR	2652264	ReturnStatement	return - 1 ;	800:2:18629:18638	2652244	1	True				
ANR	2652265	UnaryOperationExpression	- 1		2652244	0					
ANR	2652266	UnaryOperator	-		2652244	0					
ANR	2652267	PrimaryExpression	1		2652244	1					
ANR	2652268	IdentifierDeclStatement	struct chirp_client * client = 0 ;	803:1:18646:18677	2652244	1	True				
ANR	2652269	IdentifierDecl	* client = 0		2652244	0					
ANR	2652270	IdentifierDeclType	struct chirp_client *		2652244	0					
ANR	2652271	Identifier	client		2652244	1					
ANR	2652272	AssignmentExpression	* client = 0		2652244	2		=			
ANR	2652273	Identifier	client		2652244	0					
ANR	2652274	PrimaryExpression	0		2652244	1					
ANR	2652275	ExpressionStatement	CONNECT_STARTER ( client )	804:1:18680:18703	2652244	2	True				
ANR	2652276	CallExpression	CONNECT_STARTER ( client )		2652244	0					
ANR	2652277	Callee	CONNECT_STARTER		2652244	0					
ANR	2652278	Identifier	CONNECT_STARTER		2652244	0					
ANR	2652279	ArgumentList	client		2652244	1					
ANR	2652280	Argument	client		2652244	0					
ANR	2652281	Identifier	client		2652244	0					
ANR	2652282	IdentifierDeclStatement	int uid = atoi ( argv [ 3 ] ) ;	806:1:18707:18730	2652244	3	True				
ANR	2652283	IdentifierDecl	uid = atoi ( argv [ 3 ] )		2652244	0					
ANR	2652284	IdentifierDeclType	int		2652244	0					
ANR	2652285	Identifier	uid		2652244	1					
ANR	2652286	AssignmentExpression	uid = atoi ( argv [ 3 ] )		2652244	2		=			
ANR	2652287	Identifier	uid		2652244	0					
ANR	2652288	CallExpression	atoi ( argv [ 3 ] )		2652244	1					
ANR	2652289	Callee	atoi		2652244	0					
ANR	2652290	Identifier	atoi		2652244	0					
ANR	2652291	ArgumentList	argv [ 3 ]		2652244	1					
ANR	2652292	Argument	argv [ 3 ]		2652244	0					
ANR	2652293	ArrayIndexing	argv [ 3 ]		2652244	0					
ANR	2652294	Identifier	argv		2652244	0					
ANR	2652295	PrimaryExpression	3		2652244	1					
ANR	2652296	IdentifierDeclStatement	int gid = atoi ( argv [ 4 ] ) ;	807:1:18733:18756	2652244	4	True				
ANR	2652297	IdentifierDecl	gid = atoi ( argv [ 4 ] )		2652244	0					
ANR	2652298	IdentifierDeclType	int		2652244	0					
ANR	2652299	Identifier	gid		2652244	1					
ANR	2652300	AssignmentExpression	gid = atoi ( argv [ 4 ] )		2652244	2		=			
ANR	2652301	Identifier	gid		2652244	0					
ANR	2652302	CallExpression	atoi ( argv [ 4 ] )		2652244	1					
ANR	2652303	Callee	atoi		2652244	0					
ANR	2652304	Identifier	atoi		2652244	0					
ANR	2652305	ArgumentList	argv [ 4 ]		2652244	1					
ANR	2652306	Argument	argv [ 4 ]		2652244	0					
ANR	2652307	ArrayIndexing	argv [ 4 ]		2652244	0					
ANR	2652308	Identifier	argv		2652244	0					
ANR	2652309	PrimaryExpression	4		2652244	1					
ANR	2652310	IdentifierDeclStatement	int status = - 1 ;	808:1:18759:18774	2652244	5	True				
ANR	2652311	IdentifierDecl	status = - 1		2652244	0					
ANR	2652312	IdentifierDeclType	int		2652244	0					
ANR	2652313	Identifier	status		2652244	1					
ANR	2652314	AssignmentExpression	status = - 1		2652244	2		=			
ANR	2652315	Identifier	status		2652244	0					
ANR	2652316	UnaryOperationExpression	- 1		2652244	1					
ANR	2652317	UnaryOperator	-		2652244	0					
ANR	2652318	PrimaryExpression	1		2652244	1					
ANR	2652319	IfStatement	"if ( strcmp ( argv [ 1 ] , ""lchown"" ) )"		2652244	6					
ANR	2652320	Condition	"strcmp ( argv [ 1 ] , ""lchown"" )"	809:4:18780:18804	2652244	0	True				
ANR	2652321	CallExpression	"strcmp ( argv [ 1 ] , ""lchown"" )"		2652244	0					
ANR	2652322	Callee	strcmp		2652244	0					
ANR	2652323	Identifier	strcmp		2652244	0					
ANR	2652324	ArgumentList	argv [ 1 ]		2652244	1					
ANR	2652325	Argument	argv [ 1 ]		2652244	0					
ANR	2652326	ArrayIndexing	argv [ 1 ]		2652244	0					
ANR	2652327	Identifier	argv		2652244	0					
ANR	2652328	PrimaryExpression	1		2652244	1					
ANR	2652329	Argument	"""lchown"""		2652244	1					
ANR	2652330	PrimaryExpression	"""lchown"""		2652244	0					
ANR	2652331	CompoundStatement		13:31:258:258	2652244	1					
ANR	2652332	ExpressionStatement	"status = chirp_client_lchown ( client , argv [ 2 ] , uid , gid )"	810:2:18811:18866	2652244	0	True				
ANR	2652333	AssignmentExpression	"status = chirp_client_lchown ( client , argv [ 2 ] , uid , gid )"		2652244	0		=			
ANR	2652334	Identifier	status		2652244	0					
ANR	2652335	CallExpression	"chirp_client_lchown ( client , argv [ 2 ] , uid , gid )"		2652244	1					
ANR	2652336	Callee	chirp_client_lchown		2652244	0					
ANR	2652337	Identifier	chirp_client_lchown		2652244	0					
ANR	2652338	ArgumentList	client		2652244	1					
ANR	2652339	Argument	client		2652244	0					
ANR	2652340	Identifier	client		2652244	0					
ANR	2652341	Argument	argv [ 2 ]		2652244	1					
ANR	2652342	ArrayIndexing	argv [ 2 ]		2652244	0					
ANR	2652343	Identifier	argv		2652244	0					
ANR	2652344	PrimaryExpression	2		2652244	1					
ANR	2652345	Argument	uid		2652244	2					
ANR	2652346	Identifier	uid		2652244	0					
ANR	2652347	Argument	gid		2652244	3					
ANR	2652348	Identifier	gid		2652244	0					
ANR	2652349	ElseStatement	else		2652244	0					
ANR	2652350	CompoundStatement		15:8:327:327	2652244	0					
ANR	2652351	ExpressionStatement	"status = chirp_client_chown ( client , argv [ 2 ] , uid , gid )"	812:2:18880:18934	2652244	0	True				
ANR	2652352	AssignmentExpression	"status = chirp_client_chown ( client , argv [ 2 ] , uid , gid )"		2652244	0		=			
ANR	2652353	Identifier	status		2652244	0					
ANR	2652354	CallExpression	"chirp_client_chown ( client , argv [ 2 ] , uid , gid )"		2652244	1					
ANR	2652355	Callee	chirp_client_chown		2652244	0					
ANR	2652356	Identifier	chirp_client_chown		2652244	0					
ANR	2652357	ArgumentList	client		2652244	1					
ANR	2652358	Argument	client		2652244	0					
ANR	2652359	Identifier	client		2652244	0					
ANR	2652360	Argument	argv [ 2 ]		2652244	1					
ANR	2652361	ArrayIndexing	argv [ 2 ]		2652244	0					
ANR	2652362	Identifier	argv		2652244	0					
ANR	2652363	PrimaryExpression	2		2652244	1					
ANR	2652364	Argument	uid		2652244	2					
ANR	2652365	Identifier	uid		2652244	0					
ANR	2652366	Argument	gid		2652244	3					
ANR	2652367	Identifier	gid		2652244	0					
ANR	2652368	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , status )"	814:1:18940:18977	2652244	7	True				
ANR	2652369	CallExpression	"DISCONNECT_AND_RETURN ( client , status )"		2652244	0					
ANR	2652370	Callee	DISCONNECT_AND_RETURN		2652244	0					
ANR	2652371	Identifier	DISCONNECT_AND_RETURN		2652244	0					
ANR	2652372	ArgumentList	client		2652244	1					
ANR	2652373	Argument	client		2652244	0					
ANR	2652374	Identifier	client		2652244	0					
ANR	2652375	Argument	status		2652244	1					
ANR	2652376	Identifier	status		2652244	0					
ANR	2652377	ReturnType	int		2652244	1					
ANR	2652378	Identifier	chirp_chown		2652244	2					
ANR	2652379	ParameterList	"int argc , char * * argv"		2652244	3					
ANR	2652380	Parameter	int argc	797:16:18525:18532	2652244	0	True				
ANR	2652381	ParameterType	int		2652244	0					
ANR	2652382	Identifier	argc		2652244	1					
ANR	2652383	Parameter	char * * argv	797:26:18535:18545	2652244	1	True				
ANR	2652384	ParameterType	char * *		2652244	0					
ANR	2652385	Identifier	argv		2652244	1					
ANR	2652386	CFGEntryNode	ENTRY		2652244		True				
ANR	2652387	CFGExitNode	EXIT		2652244		True				
ANR	2652388	Symbol	argc		2652244						
ANR	2652389	Symbol	atoi		2652244						
ANR	2652390	Symbol	strcmp		2652244						
ANR	2652391	Symbol	uid		2652244						
ANR	2652392	Symbol	gid		2652244						
ANR	2652393	Symbol	chirp_client_lchown		2652244						
ANR	2652394	Symbol	chirp_client_chown		2652244						
ANR	2652395	Symbol	client		2652244						
ANR	2652396	Symbol	* argv		2652244						
ANR	2652397	Symbol	argv		2652244						
ANR	2652398	Symbol	status		2652244						
ANR	2652399	Function	chirp_truncate	817:0:18982:19303							
ANR	2652400	FunctionDef	"chirp_truncate (int argc , char * * argv)"		2652399	0					
ANR	2652401	CompoundStatement		817:42:19024:19303	2652399	0					
ANR	2652402	IfStatement	if ( argc != 4 )		2652399	0					
ANR	2652403	Condition	argc != 4	818:5:19031:19039	2652399	0	True				
ANR	2652404	EqualityExpression	argc != 4		2652399	0		!=			
ANR	2652405	Identifier	argc		2652399	0					
ANR	2652406	PrimaryExpression	4		2652399	1					
ANR	2652407	CompoundStatement		2:16:17:17	2652399	1					
ANR	2652408	ExpressionStatement	"printf ( ""condor_chirp truncate remotepath length\\n"" )"	819:2:19046:19097	2652399	0	True				
ANR	2652409	CallExpression	"printf ( ""condor_chirp truncate remotepath length\\n"" )"		2652399	0					
ANR	2652410	Callee	printf		2652399	0					
ANR	2652411	Identifier	printf		2652399	0					
ANR	2652412	ArgumentList	"""condor_chirp truncate remotepath length\\n"""		2652399	1					
ANR	2652413	Argument	"""condor_chirp truncate remotepath length\\n"""		2652399	0					
ANR	2652414	PrimaryExpression	"""condor_chirp truncate remotepath length\\n"""		2652399	0					
ANR	2652415	ReturnStatement	return - 1 ;	820:2:19101:19110	2652399	1	True				
ANR	2652416	UnaryOperationExpression	- 1		2652399	0					
ANR	2652417	UnaryOperator	-		2652399	0					
ANR	2652418	PrimaryExpression	1		2652399	1					
ANR	2652419	IdentifierDeclStatement	struct chirp_client * client = 0 ;	823:1:19118:19149	2652399	1	True				
ANR	2652420	IdentifierDecl	* client = 0		2652399	0					
ANR	2652421	IdentifierDeclType	struct chirp_client *		2652399	0					
ANR	2652422	Identifier	client		2652399	1					
ANR	2652423	AssignmentExpression	* client = 0		2652399	2		=			
ANR	2652424	Identifier	client		2652399	0					
ANR	2652425	PrimaryExpression	0		2652399	1					
ANR	2652426	ExpressionStatement	CONNECT_STARTER ( client )	824:1:19152:19175	2652399	2	True				
ANR	2652427	CallExpression	CONNECT_STARTER ( client )		2652399	0					
ANR	2652428	Callee	CONNECT_STARTER		2652399	0					
ANR	2652429	Identifier	CONNECT_STARTER		2652399	0					
ANR	2652430	ArgumentList	client		2652399	1					
ANR	2652431	Argument	client		2652399	0					
ANR	2652432	Identifier	client		2652399	0					
ANR	2652433	IdentifierDeclStatement	int len = atoi ( argv [ 3 ] ) ;	826:1:19179:19202	2652399	3	True				
ANR	2652434	IdentifierDecl	len = atoi ( argv [ 3 ] )		2652399	0					
ANR	2652435	IdentifierDeclType	int		2652399	0					
ANR	2652436	Identifier	len		2652399	1					
ANR	2652437	AssignmentExpression	len = atoi ( argv [ 3 ] )		2652399	2		=			
ANR	2652438	Identifier	len		2652399	0					
ANR	2652439	CallExpression	atoi ( argv [ 3 ] )		2652399	1					
ANR	2652440	Callee	atoi		2652399	0					
ANR	2652441	Identifier	atoi		2652399	0					
ANR	2652442	ArgumentList	argv [ 3 ]		2652399	1					
ANR	2652443	Argument	argv [ 3 ]		2652399	0					
ANR	2652444	ArrayIndexing	argv [ 3 ]		2652399	0					
ANR	2652445	Identifier	argv		2652399	0					
ANR	2652446	PrimaryExpression	3		2652399	1					
ANR	2652447	IdentifierDeclStatement	"int status = chirp_client_truncate ( client , argv [ 2 ] , len ) ;"	827:1:19205:19261	2652399	4	True				
ANR	2652448	IdentifierDecl	"status = chirp_client_truncate ( client , argv [ 2 ] , len )"		2652399	0					
ANR	2652449	IdentifierDeclType	int		2652399	0					
ANR	2652450	Identifier	status		2652399	1					
ANR	2652451	AssignmentExpression	"status = chirp_client_truncate ( client , argv [ 2 ] , len )"		2652399	2		=			
ANR	2652452	Identifier	status		2652399	0					
ANR	2652453	CallExpression	"chirp_client_truncate ( client , argv [ 2 ] , len )"		2652399	1					
ANR	2652454	Callee	chirp_client_truncate		2652399	0					
ANR	2652455	Identifier	chirp_client_truncate		2652399	0					
ANR	2652456	ArgumentList	client		2652399	1					
ANR	2652457	Argument	client		2652399	0					
ANR	2652458	Identifier	client		2652399	0					
ANR	2652459	Argument	argv [ 2 ]		2652399	1					
ANR	2652460	ArrayIndexing	argv [ 2 ]		2652399	0					
ANR	2652461	Identifier	argv		2652399	0					
ANR	2652462	PrimaryExpression	2		2652399	1					
ANR	2652463	Argument	len		2652399	2					
ANR	2652464	Identifier	len		2652399	0					
ANR	2652465	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , status )"	828:1:19264:19301	2652399	5	True				
ANR	2652466	CallExpression	"DISCONNECT_AND_RETURN ( client , status )"		2652399	0					
ANR	2652467	Callee	DISCONNECT_AND_RETURN		2652399	0					
ANR	2652468	Identifier	DISCONNECT_AND_RETURN		2652399	0					
ANR	2652469	ArgumentList	client		2652399	1					
ANR	2652470	Argument	client		2652399	0					
ANR	2652471	Identifier	client		2652399	0					
ANR	2652472	Argument	status		2652399	1					
ANR	2652473	Identifier	status		2652399	0					
ANR	2652474	ReturnType	int		2652399	1					
ANR	2652475	Identifier	chirp_truncate		2652399	2					
ANR	2652476	ParameterList	"int argc , char * * argv"		2652399	3					
ANR	2652477	Parameter	int argc	817:19:19001:19008	2652399	0	True				
ANR	2652478	ParameterType	int		2652399	0					
ANR	2652479	Identifier	argc		2652399	1					
ANR	2652480	Parameter	char * * argv	817:29:19011:19021	2652399	1	True				
ANR	2652481	ParameterType	char * *		2652399	0					
ANR	2652482	Identifier	argv		2652399	1					
ANR	2652483	CFGEntryNode	ENTRY		2652399		True				
ANR	2652484	CFGExitNode	EXIT		2652399		True				
ANR	2652485	Symbol	argc		2652399						
ANR	2652486	Symbol	atoi		2652399						
ANR	2652487	Symbol	len		2652399						
ANR	2652488	Symbol	client		2652399						
ANR	2652489	Symbol	* argv		2652399						
ANR	2652490	Symbol	argv		2652399						
ANR	2652491	Symbol	chirp_client_truncate		2652399						
ANR	2652492	Symbol	status		2652399						
ANR	2652493	Function	chirp_utime	831:0:19306:19666							
ANR	2652494	FunctionDef	"chirp_utime (int argc , char * * argv)"		2652493	0					
ANR	2652495	CompoundStatement		831:39:19345:19666	2652493	0					
ANR	2652496	IfStatement	if ( argc != 5 )		2652493	0					
ANR	2652497	Condition	argc != 5	832:5:19352:19360	2652493	0	True				
ANR	2652498	EqualityExpression	argc != 5		2652493	0		!=			
ANR	2652499	Identifier	argc		2652493	0					
ANR	2652500	PrimaryExpression	5		2652493	1					
ANR	2652501	CompoundStatement		2:16:17:17	2652493	1					
ANR	2652502	ExpressionStatement	"printf ( ""condor_chirp utime remotepath actime mtime\\n"" )"	833:2:19367:19421	2652493	0	True				
ANR	2652503	CallExpression	"printf ( ""condor_chirp utime remotepath actime mtime\\n"" )"		2652493	0					
ANR	2652504	Callee	printf		2652493	0					
ANR	2652505	Identifier	printf		2652493	0					
ANR	2652506	ArgumentList	"""condor_chirp utime remotepath actime mtime\\n"""		2652493	1					
ANR	2652507	Argument	"""condor_chirp utime remotepath actime mtime\\n"""		2652493	0					
ANR	2652508	PrimaryExpression	"""condor_chirp utime remotepath actime mtime\\n"""		2652493	0					
ANR	2652509	ReturnStatement	return - 1 ;	834:2:19425:19434	2652493	1	True				
ANR	2652510	UnaryOperationExpression	- 1		2652493	0					
ANR	2652511	UnaryOperator	-		2652493	0					
ANR	2652512	PrimaryExpression	1		2652493	1					
ANR	2652513	IdentifierDeclStatement	struct chirp_client * client = 0 ;	837:1:19442:19473	2652493	1	True				
ANR	2652514	IdentifierDecl	* client = 0		2652493	0					
ANR	2652515	IdentifierDeclType	struct chirp_client *		2652493	0					
ANR	2652516	Identifier	client		2652493	1					
ANR	2652517	AssignmentExpression	* client = 0		2652493	2		=			
ANR	2652518	Identifier	client		2652493	0					
ANR	2652519	PrimaryExpression	0		2652493	1					
ANR	2652520	ExpressionStatement	CONNECT_STARTER ( client )	838:1:19476:19499	2652493	2	True				
ANR	2652521	CallExpression	CONNECT_STARTER ( client )		2652493	0					
ANR	2652522	Callee	CONNECT_STARTER		2652493	0					
ANR	2652523	Identifier	CONNECT_STARTER		2652493	0					
ANR	2652524	ArgumentList	client		2652493	1					
ANR	2652525	Argument	client		2652493	0					
ANR	2652526	Identifier	client		2652493	0					
ANR	2652527	IdentifierDeclStatement	int actime = atoi ( argv [ 3 ] ) ;	840:1:19504:19530	2652493	3	True				
ANR	2652528	IdentifierDecl	actime = atoi ( argv [ 3 ] )		2652493	0					
ANR	2652529	IdentifierDeclType	int		2652493	0					
ANR	2652530	Identifier	actime		2652493	1					
ANR	2652531	AssignmentExpression	actime = atoi ( argv [ 3 ] )		2652493	2		=			
ANR	2652532	Identifier	actime		2652493	0					
ANR	2652533	CallExpression	atoi ( argv [ 3 ] )		2652493	1					
ANR	2652534	Callee	atoi		2652493	0					
ANR	2652535	Identifier	atoi		2652493	0					
ANR	2652536	ArgumentList	argv [ 3 ]		2652493	1					
ANR	2652537	Argument	argv [ 3 ]		2652493	0					
ANR	2652538	ArrayIndexing	argv [ 3 ]		2652493	0					
ANR	2652539	Identifier	argv		2652493	0					
ANR	2652540	PrimaryExpression	3		2652493	1					
ANR	2652541	IdentifierDeclStatement	int mtime = atoi ( argv [ 4 ] ) ;	841:1:19533:19558	2652493	4	True				
ANR	2652542	IdentifierDecl	mtime = atoi ( argv [ 4 ] )		2652493	0					
ANR	2652543	IdentifierDeclType	int		2652493	0					
ANR	2652544	Identifier	mtime		2652493	1					
ANR	2652545	AssignmentExpression	mtime = atoi ( argv [ 4 ] )		2652493	2		=			
ANR	2652546	Identifier	mtime		2652493	0					
ANR	2652547	CallExpression	atoi ( argv [ 4 ] )		2652493	1					
ANR	2652548	Callee	atoi		2652493	0					
ANR	2652549	Identifier	atoi		2652493	0					
ANR	2652550	ArgumentList	argv [ 4 ]		2652493	1					
ANR	2652551	Argument	argv [ 4 ]		2652493	0					
ANR	2652552	ArrayIndexing	argv [ 4 ]		2652493	0					
ANR	2652553	Identifier	argv		2652493	0					
ANR	2652554	PrimaryExpression	4		2652493	1					
ANR	2652555	IdentifierDeclStatement	"int status = chirp_client_utime ( client , argv [ 2 ] , actime , mtime ) ;"	842:1:19561:19624	2652493	5	True				
ANR	2652556	IdentifierDecl	"status = chirp_client_utime ( client , argv [ 2 ] , actime , mtime )"		2652493	0					
ANR	2652557	IdentifierDeclType	int		2652493	0					
ANR	2652558	Identifier	status		2652493	1					
ANR	2652559	AssignmentExpression	"status = chirp_client_utime ( client , argv [ 2 ] , actime , mtime )"		2652493	2		=			
ANR	2652560	Identifier	status		2652493	0					
ANR	2652561	CallExpression	"chirp_client_utime ( client , argv [ 2 ] , actime , mtime )"		2652493	1					
ANR	2652562	Callee	chirp_client_utime		2652493	0					
ANR	2652563	Identifier	chirp_client_utime		2652493	0					
ANR	2652564	ArgumentList	client		2652493	1					
ANR	2652565	Argument	client		2652493	0					
ANR	2652566	Identifier	client		2652493	0					
ANR	2652567	Argument	argv [ 2 ]		2652493	1					
ANR	2652568	ArrayIndexing	argv [ 2 ]		2652493	0					
ANR	2652569	Identifier	argv		2652493	0					
ANR	2652570	PrimaryExpression	2		2652493	1					
ANR	2652571	Argument	actime		2652493	2					
ANR	2652572	Identifier	actime		2652493	0					
ANR	2652573	Argument	mtime		2652493	3					
ANR	2652574	Identifier	mtime		2652493	0					
ANR	2652575	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , status )"	843:1:19627:19664	2652493	6	True				
ANR	2652576	CallExpression	"DISCONNECT_AND_RETURN ( client , status )"		2652493	0					
ANR	2652577	Callee	DISCONNECT_AND_RETURN		2652493	0					
ANR	2652578	Identifier	DISCONNECT_AND_RETURN		2652493	0					
ANR	2652579	ArgumentList	client		2652493	1					
ANR	2652580	Argument	client		2652493	0					
ANR	2652581	Identifier	client		2652493	0					
ANR	2652582	Argument	status		2652493	1					
ANR	2652583	Identifier	status		2652493	0					
ANR	2652584	ReturnType	int		2652493	1					
ANR	2652585	Identifier	chirp_utime		2652493	2					
ANR	2652586	ParameterList	"int argc , char * * argv"		2652493	3					
ANR	2652587	Parameter	int argc	831:16:19322:19329	2652493	0	True				
ANR	2652588	ParameterType	int		2652493	0					
ANR	2652589	Identifier	argc		2652493	1					
ANR	2652590	Parameter	char * * argv	831:26:19332:19342	2652493	1	True				
ANR	2652591	ParameterType	char * *		2652493	0					
ANR	2652592	Identifier	argv		2652493	1					
ANR	2652593	CFGEntryNode	ENTRY		2652493		True				
ANR	2652594	CFGExitNode	EXIT		2652493		True				
ANR	2652595	Symbol	argc		2652493						
ANR	2652596	Symbol	atoi		2652493						
ANR	2652597	Symbol	actime		2652493						
ANR	2652598	Symbol	client		2652493						
ANR	2652599	Symbol	chirp_client_utime		2652493						
ANR	2652600	Symbol	* argv		2652493						
ANR	2652601	Symbol	mtime		2652493						
ANR	2652602	Symbol	argv		2652493						
ANR	2652603	Symbol	status		2652493						
ANR	2652604	Function	usage	846:0:19669:20998							
ANR	2652605	FunctionDef	usage ()		2652604	0					
ANR	2652606	CompoundStatement		846:13:19682:20998	2652604	0					
ANR	2652607	ExpressionStatement	"printf ( ""Usage:\\n"" )"	847:1:19685:19703	2652604	0	True				
ANR	2652608	CallExpression	"printf ( ""Usage:\\n"" )"		2652604	0					
ANR	2652609	Callee	printf		2652604	0					
ANR	2652610	Identifier	printf		2652604	0					
ANR	2652611	ArgumentList	"""Usage:\\n"""		2652604	1					
ANR	2652612	Argument	"""Usage:\\n"""		2652604	0					
ANR	2652613	PrimaryExpression	"""Usage:\\n"""		2652604	0					
ANR	2652614	ExpressionStatement	"printf ( ""condor_chirp fetch remote_file local_file\\n"" )"	848:1:19706:19759	2652604	1	True				
ANR	2652615	CallExpression	"printf ( ""condor_chirp fetch remote_file local_file\\n"" )"		2652604	0					
ANR	2652616	Callee	printf		2652604	0					
ANR	2652617	Identifier	printf		2652604	0					
ANR	2652618	ArgumentList	"""condor_chirp fetch remote_file local_file\\n"""		2652604	1					
ANR	2652619	Argument	"""condor_chirp fetch remote_file local_file\\n"""		2652604	0					
ANR	2652620	PrimaryExpression	"""condor_chirp fetch remote_file local_file\\n"""		2652604	0					
ANR	2652621	Statement	printf	849:1:19762:19767	2652604	2	True				
ANR	2652622	Statement	(	849:7:19768:19768	2652604	3	True				
ANR	2652623	Statement	"""condor_chirp put [-mode mode] [-perm perm] local_file """	849:8:19769:19824	2652604	4	True				
ANR	2652624	Statement	"""remote_file\\n"""	850:4:19830:19844	2652604	5	True				
ANR	2652625	Statement	)	850:19:19845:19845	2652604	6	True				
ANR	2652626	ExpressionStatement		850:20:19846:19846	2652604	7	True				
ANR	2652627	ExpressionStatement	"printf ( ""condor_chirp remove remote_file\\n"" )"	851:1:19849:19892	2652604	8	True				
ANR	2652628	CallExpression	"printf ( ""condor_chirp remove remote_file\\n"" )"		2652604	0					
ANR	2652629	Callee	printf		2652604	0					
ANR	2652630	Identifier	printf		2652604	0					
ANR	2652631	ArgumentList	"""condor_chirp remove remote_file\\n"""		2652604	1					
ANR	2652632	Argument	"""condor_chirp remove remote_file\\n"""		2652604	0					
ANR	2652633	PrimaryExpression	"""condor_chirp remove remote_file\\n"""		2652604	0					
ANR	2652634	ExpressionStatement	"printf ( ""condor_chirp get_job_attr job_attribute\\n"" )"	852:1:19895:19946	2652604	9	True				
ANR	2652635	CallExpression	"printf ( ""condor_chirp get_job_attr job_attribute\\n"" )"		2652604	0					
ANR	2652636	Callee	printf		2652604	0					
ANR	2652637	Identifier	printf		2652604	0					
ANR	2652638	ArgumentList	"""condor_chirp get_job_attr job_attribute\\n"""		2652604	1					
ANR	2652639	Argument	"""condor_chirp get_job_attr job_attribute\\n"""		2652604	0					
ANR	2652640	PrimaryExpression	"""condor_chirp get_job_attr job_attribute\\n"""		2652604	0					
ANR	2652641	ExpressionStatement	"printf ( ""condor_chirp set_job_attr job_attribute attribute_value\\n"" )"	853:1:19949:20016	2652604	10	True				
ANR	2652642	CallExpression	"printf ( ""condor_chirp set_job_attr job_attribute attribute_value\\n"" )"		2652604	0					
ANR	2652643	Callee	printf		2652604	0					
ANR	2652644	Identifier	printf		2652604	0					
ANR	2652645	ArgumentList	"""condor_chirp set_job_attr job_attribute attribute_value\\n"""		2652604	1					
ANR	2652646	Argument	"""condor_chirp set_job_attr job_attribute attribute_value\\n"""		2652604	0					
ANR	2652647	PrimaryExpression	"""condor_chirp set_job_attr job_attribute attribute_value\\n"""		2652604	0					
ANR	2652648	ExpressionStatement	"printf ( ""condor_chirp ulog text\\n"" )"	854:1:20019:20053	2652604	11	True				
ANR	2652649	CallExpression	"printf ( ""condor_chirp ulog text\\n"" )"		2652604	0					
ANR	2652650	Callee	printf		2652604	0					
ANR	2652651	Identifier	printf		2652604	0					
ANR	2652652	ArgumentList	"""condor_chirp ulog text\\n"""		2652604	1					
ANR	2652653	Argument	"""condor_chirp ulog text\\n"""		2652604	0					
ANR	2652654	PrimaryExpression	"""condor_chirp ulog text\\n"""		2652604	0					
ANR	2652655	Statement	printf	855:1:20056:20061	2652604	12	True				
ANR	2652656	Statement	(	855:7:20062:20062	2652604	13	True				
ANR	2652657	Statement	"""condor_chirp read [-offset offset] [-stride length skip] """	855:8:20063:20121	2652604	14	True				
ANR	2652658	Statement	"""remote_file length\\n"""	856:2:20125:20146	2652604	15	True				
ANR	2652659	Statement	)	856:24:20147:20147	2652604	16	True				
ANR	2652660	ExpressionStatement		856:25:20148:20148	2652604	17	True				
ANR	2652661	Statement	printf	857:1:20151:20156	2652604	18	True				
ANR	2652662	Statement	(	857:7:20157:20157	2652604	19	True				
ANR	2652663	Statement	"""condor_chirp write [-offset remote_offset] [-stride length skip] """	857:8:20158:20224	2652604	20	True				
ANR	2652664	Statement	"""remote_file local_file\\n"""	858:2:20228:20253	2652604	21	True				
ANR	2652665	Statement	)	858:28:20254:20254	2652604	22	True				
ANR	2652666	ExpressionStatement		858:29:20255:20255	2652604	23	True				
ANR	2652667	ExpressionStatement	"printf ( ""condor_chirp rmdir [-r] remotepath\\n"" )"	859:1:20258:20304	2652604	24	True				
ANR	2652668	CallExpression	"printf ( ""condor_chirp rmdir [-r] remotepath\\n"" )"		2652604	0					
ANR	2652669	Callee	printf		2652604	0					
ANR	2652670	Identifier	printf		2652604	0					
ANR	2652671	ArgumentList	"""condor_chirp rmdir [-r] remotepath\\n"""		2652604	1					
ANR	2652672	Argument	"""condor_chirp rmdir [-r] remotepath\\n"""		2652604	0					
ANR	2652673	PrimaryExpression	"""condor_chirp rmdir [-r] remotepath\\n"""		2652604	0					
ANR	2652674	ExpressionStatement	"printf ( ""condor_chirp getdir [-l] remotepath\\n"" )"	860:1:20307:20354	2652604	25	True				
ANR	2652675	CallExpression	"printf ( ""condor_chirp getdir [-l] remotepath\\n"" )"		2652604	0					
ANR	2652676	Callee	printf		2652604	0					
ANR	2652677	Identifier	printf		2652604	0					
ANR	2652678	ArgumentList	"""condor_chirp getdir [-l] remotepath\\n"""		2652604	1					
ANR	2652679	Argument	"""condor_chirp getdir [-l] remotepath\\n"""		2652604	0					
ANR	2652680	PrimaryExpression	"""condor_chirp getdir [-l] remotepath\\n"""		2652604	0					
ANR	2652681	ExpressionStatement	"printf ( ""condor_chirp whoami\\n"" )"	861:1:20357:20388	2652604	26	True				
ANR	2652682	CallExpression	"printf ( ""condor_chirp whoami\\n"" )"		2652604	0					
ANR	2652683	Callee	printf		2652604	0					
ANR	2652684	Identifier	printf		2652604	0					
ANR	2652685	ArgumentList	"""condor_chirp whoami\\n"""		2652604	1					
ANR	2652686	Argument	"""condor_chirp whoami\\n"""		2652604	0					
ANR	2652687	PrimaryExpression	"""condor_chirp whoami\\n"""		2652604	0					
ANR	2652688	ExpressionStatement	"printf ( ""condor_chirp whoareyou remotepath\\n"" )"	862:1:20391:20436	2652604	27	True				
ANR	2652689	CallExpression	"printf ( ""condor_chirp whoareyou remotepath\\n"" )"		2652604	0					
ANR	2652690	Callee	printf		2652604	0					
ANR	2652691	Identifier	printf		2652604	0					
ANR	2652692	ArgumentList	"""condor_chirp whoareyou remotepath\\n"""		2652604	1					
ANR	2652693	Argument	"""condor_chirp whoareyou remotepath\\n"""		2652604	0					
ANR	2652694	PrimaryExpression	"""condor_chirp whoareyou remotepath\\n"""		2652604	0					
ANR	2652695	ExpressionStatement	"printf ( ""condor_chirp link [-s] oldpath newpath\\n"" )"	863:1:20439:20489	2652604	28	True				
ANR	2652696	CallExpression	"printf ( ""condor_chirp link [-s] oldpath newpath\\n"" )"		2652604	0					
ANR	2652697	Callee	printf		2652604	0					
ANR	2652698	Identifier	printf		2652604	0					
ANR	2652699	ArgumentList	"""condor_chirp link [-s] oldpath newpath\\n"""		2652604	1					
ANR	2652700	Argument	"""condor_chirp link [-s] oldpath newpath\\n"""		2652604	0					
ANR	2652701	PrimaryExpression	"""condor_chirp link [-s] oldpath newpath\\n"""		2652604	0					
ANR	2652702	ExpressionStatement	"printf ( ""condor_chirp readlink remotepath length\\n"" )"	864:1:20492:20543	2652604	29	True				
ANR	2652703	CallExpression	"printf ( ""condor_chirp readlink remotepath length\\n"" )"		2652604	0					
ANR	2652704	Callee	printf		2652604	0					
ANR	2652705	Identifier	printf		2652604	0					
ANR	2652706	ArgumentList	"""condor_chirp readlink remotepath length\\n"""		2652604	1					
ANR	2652707	Argument	"""condor_chirp readlink remotepath length\\n"""		2652604	0					
ANR	2652708	PrimaryExpression	"""condor_chirp readlink remotepath length\\n"""		2652604	0					
ANR	2652709	ExpressionStatement	"printf ( ""condor_chirp stat remotepath\\n"" )"	865:1:20546:20586	2652604	30	True				
ANR	2652710	CallExpression	"printf ( ""condor_chirp stat remotepath\\n"" )"		2652604	0					
ANR	2652711	Callee	printf		2652604	0					
ANR	2652712	Identifier	printf		2652604	0					
ANR	2652713	ArgumentList	"""condor_chirp stat remotepath\\n"""		2652604	1					
ANR	2652714	Argument	"""condor_chirp stat remotepath\\n"""		2652604	0					
ANR	2652715	PrimaryExpression	"""condor_chirp stat remotepath\\n"""		2652604	0					
ANR	2652716	ExpressionStatement	"printf ( ""condor_chirp lstat remotepath\\n"" )"	866:1:20589:20630	2652604	31	True				
ANR	2652717	CallExpression	"printf ( ""condor_chirp lstat remotepath\\n"" )"		2652604	0					
ANR	2652718	Callee	printf		2652604	0					
ANR	2652719	Identifier	printf		2652604	0					
ANR	2652720	ArgumentList	"""condor_chirp lstat remotepath\\n"""		2652604	1					
ANR	2652721	Argument	"""condor_chirp lstat remotepath\\n"""		2652604	0					
ANR	2652722	PrimaryExpression	"""condor_chirp lstat remotepath\\n"""		2652604	0					
ANR	2652723	ExpressionStatement	"printf ( ""condor_chirp statfs remotepath\\n"" )"	867:1:20633:20675	2652604	32	True				
ANR	2652724	CallExpression	"printf ( ""condor_chirp statfs remotepath\\n"" )"		2652604	0					
ANR	2652725	Callee	printf		2652604	0					
ANR	2652726	Identifier	printf		2652604	0					
ANR	2652727	ArgumentList	"""condor_chirp statfs remotepath\\n"""		2652604	1					
ANR	2652728	Argument	"""condor_chirp statfs remotepath\\n"""		2652604	0					
ANR	2652729	PrimaryExpression	"""condor_chirp statfs remotepath\\n"""		2652604	0					
ANR	2652730	ExpressionStatement	"printf ( ""condor_chirp access remotepath mode(rwxf)\\n"" )"	868:1:20678:20731	2652604	33	True				
ANR	2652731	CallExpression	"printf ( ""condor_chirp access remotepath mode(rwxf)\\n"" )"		2652604	0					
ANR	2652732	Callee	printf		2652604	0					
ANR	2652733	Identifier	printf		2652604	0					
ANR	2652734	ArgumentList	"""condor_chirp access remotepath mode(rwxf)\\n"""		2652604	1					
ANR	2652735	Argument	"""condor_chirp access remotepath mode(rwxf)\\n"""		2652604	0					
ANR	2652736	PrimaryExpression	"""condor_chirp access remotepath mode(rwxf)\\n"""		2652604	0					
ANR	2652737	ExpressionStatement	"printf ( ""condor_chirp chmod remotepath mode\\n"" )"	869:1:20734:20780	2652604	34	True				
ANR	2652738	CallExpression	"printf ( ""condor_chirp chmod remotepath mode\\n"" )"		2652604	0					
ANR	2652739	Callee	printf		2652604	0					
ANR	2652740	Identifier	printf		2652604	0					
ANR	2652741	ArgumentList	"""condor_chirp chmod remotepath mode\\n"""		2652604	1					
ANR	2652742	Argument	"""condor_chirp chmod remotepath mode\\n"""		2652604	0					
ANR	2652743	PrimaryExpression	"""condor_chirp chmod remotepath mode\\n"""		2652604	0					
ANR	2652744	ExpressionStatement	"printf ( ""condor_chirp chown remotepath uid gid\\n"" )"	870:1:20783:20832	2652604	35	True				
ANR	2652745	CallExpression	"printf ( ""condor_chirp chown remotepath uid gid\\n"" )"		2652604	0					
ANR	2652746	Callee	printf		2652604	0					
ANR	2652747	Identifier	printf		2652604	0					
ANR	2652748	ArgumentList	"""condor_chirp chown remotepath uid gid\\n"""		2652604	1					
ANR	2652749	Argument	"""condor_chirp chown remotepath uid gid\\n"""		2652604	0					
ANR	2652750	PrimaryExpression	"""condor_chirp chown remotepath uid gid\\n"""		2652604	0					
ANR	2652751	ExpressionStatement	"printf ( ""condor_chirp lchown remotepath uid gid\\n"" )"	871:1:20835:20885	2652604	36	True				
ANR	2652752	CallExpression	"printf ( ""condor_chirp lchown remotepath uid gid\\n"" )"		2652604	0					
ANR	2652753	Callee	printf		2652604	0					
ANR	2652754	Identifier	printf		2652604	0					
ANR	2652755	ArgumentList	"""condor_chirp lchown remotepath uid gid\\n"""		2652604	1					
ANR	2652756	Argument	"""condor_chirp lchown remotepath uid gid\\n"""		2652604	0					
ANR	2652757	PrimaryExpression	"""condor_chirp lchown remotepath uid gid\\n"""		2652604	0					
ANR	2652758	ExpressionStatement	"printf ( ""condor_chirp truncate remotepath length\\n"" )"	872:1:20888:20939	2652604	37	True				
ANR	2652759	CallExpression	"printf ( ""condor_chirp truncate remotepath length\\n"" )"		2652604	0					
ANR	2652760	Callee	printf		2652604	0					
ANR	2652761	Identifier	printf		2652604	0					
ANR	2652762	ArgumentList	"""condor_chirp truncate remotepath length\\n"""		2652604	1					
ANR	2652763	Argument	"""condor_chirp truncate remotepath length\\n"""		2652604	0					
ANR	2652764	PrimaryExpression	"""condor_chirp truncate remotepath length\\n"""		2652604	0					
ANR	2652765	ExpressionStatement	"printf ( ""condor_chirp utime remotepath actime mtime\\n"" )"	873:1:20942:20996	2652604	38	True				
ANR	2652766	CallExpression	"printf ( ""condor_chirp utime remotepath actime mtime\\n"" )"		2652604	0					
ANR	2652767	Callee	printf		2652604	0					
ANR	2652768	Identifier	printf		2652604	0					
ANR	2652769	ArgumentList	"""condor_chirp utime remotepath actime mtime\\n"""		2652604	1					
ANR	2652770	Argument	"""condor_chirp utime remotepath actime mtime\\n"""		2652604	0					
ANR	2652771	PrimaryExpression	"""condor_chirp utime remotepath actime mtime\\n"""		2652604	0					
ANR	2652772	ReturnType	void		2652604	1					
ANR	2652773	Identifier	usage		2652604	2					
ANR	2652774	ParameterList			2652604	3					
ANR	2652775	CFGEntryNode	ENTRY		2652604		True				
ANR	2652776	CFGExitNode	EXIT		2652604		True				
ANR	2652777	Function	main	876:0:21001:23170							
ANR	2652778	FunctionDef	"main (int argc , char * * argv)"		2652777	0					
ANR	2652779	CompoundStatement		877:28:21033:23170	2652777	0					
ANR	2652780	IdentifierDeclStatement	int ret_val = - 1 ;	879:1:21037:21053	2652777	0	True				
ANR	2652781	IdentifierDecl	ret_val = - 1		2652777	0					
ANR	2652782	IdentifierDeclType	int		2652777	0					
ANR	2652783	Identifier	ret_val		2652777	1					
ANR	2652784	AssignmentExpression	ret_val = - 1		2652777	2		=			
ANR	2652785	Identifier	ret_val		2652777	0					
ANR	2652786	UnaryOperationExpression	- 1		2652777	1					
ANR	2652787	UnaryOperator	-		2652777	0					
ANR	2652788	PrimaryExpression	1		2652777	1					
ANR	2652789	IfStatement	"if ( argc == 1 || ( argc == 2 && strcmp ( argv [ 1 ] , ""-h"" ) == 0 ) )"		2652777	1					
ANR	2652790	Condition	"argc == 1 || ( argc == 2 && strcmp ( argv [ 1 ] , ""-h"" ) == 0 )"	881:5:21061:21114	2652777	0	True				
ANR	2652791	OrExpression	"argc == 1 || ( argc == 2 && strcmp ( argv [ 1 ] , ""-h"" ) == 0 )"		2652777	0		||			
ANR	2652792	EqualityExpression	argc == 1		2652777	0		==			
ANR	2652793	Identifier	argc		2652777	0					
ANR	2652794	PrimaryExpression	1		2652777	1					
ANR	2652795	AndExpression	"argc == 2 && strcmp ( argv [ 1 ] , ""-h"" ) == 0"		2652777	1		&&			
ANR	2652796	EqualityExpression	argc == 2		2652777	0		==			
ANR	2652797	Identifier	argc		2652777	0					
ANR	2652798	PrimaryExpression	2		2652777	1					
ANR	2652799	EqualityExpression	"strcmp ( argv [ 1 ] , ""-h"" ) == 0"		2652777	1		==			
ANR	2652800	CallExpression	"strcmp ( argv [ 1 ] , ""-h"" )"		2652777	0					
ANR	2652801	Callee	strcmp		2652777	0					
ANR	2652802	Identifier	strcmp		2652777	0					
ANR	2652803	ArgumentList	argv [ 1 ]		2652777	1					
ANR	2652804	Argument	argv [ 1 ]		2652777	0					
ANR	2652805	ArrayIndexing	argv [ 1 ]		2652777	0					
ANR	2652806	Identifier	argv		2652777	0					
ANR	2652807	PrimaryExpression	1		2652777	1					
ANR	2652808	Argument	"""-h"""		2652777	1					
ANR	2652809	PrimaryExpression	"""-h"""		2652777	0					
ANR	2652810	PrimaryExpression	0		2652777	1					
ANR	2652811	CompoundStatement		5:61:83:83	2652777	1					
ANR	2652812	ExpressionStatement	usage ( )	882:2:21121:21128	2652777	0	True				
ANR	2652813	CallExpression	usage ( )		2652777	0					
ANR	2652814	Callee	usage		2652777	0					
ANR	2652815	Identifier	usage		2652777	0					
ANR	2652816	ArgumentList			2652777	1					
ANR	2652817	ExpressionStatement	exit ( - 1 )	883:2:21132:21140	2652777	1	True				
ANR	2652818	CallExpression	exit ( - 1 )		2652777	0					
ANR	2652819	Callee	exit		2652777	0					
ANR	2652820	Identifier	exit		2652777	0					
ANR	2652821	ArgumentList	- 1		2652777	1					
ANR	2652822	Argument	- 1		2652777	0					
ANR	2652823	UnaryOperationExpression	- 1		2652777	0					
ANR	2652824	UnaryOperator	-		2652777	0					
ANR	2652825	PrimaryExpression	1		2652777	1					
ANR	2652826	IfStatement	"if ( strcmp ( ""fetch"" , argv [ 1 ] ) == 0 )"		2652777	2					
ANR	2652827	Condition	"strcmp ( ""fetch"" , argv [ 1 ] ) == 0"	886:5:21151:21179	2652777	0	True				
ANR	2652828	EqualityExpression	"strcmp ( ""fetch"" , argv [ 1 ] ) == 0"		2652777	0		==			
ANR	2652829	CallExpression	"strcmp ( ""fetch"" , argv [ 1 ] )"		2652777	0					
ANR	2652830	Callee	strcmp		2652777	0					
ANR	2652831	Identifier	strcmp		2652777	0					
ANR	2652832	ArgumentList	"""fetch"""		2652777	1					
ANR	2652833	Argument	"""fetch"""		2652777	0					
ANR	2652834	PrimaryExpression	"""fetch"""		2652777	0					
ANR	2652835	Argument	argv [ 1 ]		2652777	1					
ANR	2652836	ArrayIndexing	argv [ 1 ]		2652777	0					
ANR	2652837	Identifier	argv		2652777	0					
ANR	2652838	PrimaryExpression	1		2652777	1					
ANR	2652839	PrimaryExpression	0		2652777	1					
ANR	2652840	CompoundStatement		10:36:148:148	2652777	1					
ANR	2652841	ExpressionStatement	"ret_val = chirp_fetch ( argc , argv )"	887:2:21186:21219	2652777	0	True				
ANR	2652842	AssignmentExpression	"ret_val = chirp_fetch ( argc , argv )"		2652777	0		=			
ANR	2652843	Identifier	ret_val		2652777	0					
ANR	2652844	CallExpression	"chirp_fetch ( argc , argv )"		2652777	1					
ANR	2652845	Callee	chirp_fetch		2652777	0					
ANR	2652846	Identifier	chirp_fetch		2652777	0					
ANR	2652847	ArgumentList	argc		2652777	1					
ANR	2652848	Argument	argc		2652777	0					
ANR	2652849	Identifier	argc		2652777	0					
ANR	2652850	Argument	argv		2652777	1					
ANR	2652851	Identifier	argv		2652777	0					
ANR	2652852	ElseStatement	else		2652777	0					
ANR	2652853	IfStatement	"if ( strcmp ( ""put"" , argv [ 1 ] ) == 0 )"		2652777	0					
ANR	2652854	Condition	"strcmp ( ""put"" , argv [ 1 ] ) == 0"	888:12:21233:21259	2652777	0	True				
ANR	2652855	EqualityExpression	"strcmp ( ""put"" , argv [ 1 ] ) == 0"		2652777	0		==			
ANR	2652856	CallExpression	"strcmp ( ""put"" , argv [ 1 ] )"		2652777	0					
ANR	2652857	Callee	strcmp		2652777	0					
ANR	2652858	Identifier	strcmp		2652777	0					
ANR	2652859	ArgumentList	"""put"""		2652777	1					
ANR	2652860	Argument	"""put"""		2652777	0					
ANR	2652861	PrimaryExpression	"""put"""		2652777	0					
ANR	2652862	Argument	argv [ 1 ]		2652777	1					
ANR	2652863	ArrayIndexing	argv [ 1 ]		2652777	0					
ANR	2652864	Identifier	argv		2652777	0					
ANR	2652865	PrimaryExpression	1		2652777	1					
ANR	2652866	PrimaryExpression	0		2652777	1					
ANR	2652867	CompoundStatement		12:41:228:228	2652777	1					
ANR	2652868	ExpressionStatement	"ret_val = chirp_put ( argc , argv )"	889:2:21266:21297	2652777	0	True				
ANR	2652869	AssignmentExpression	"ret_val = chirp_put ( argc , argv )"		2652777	0		=			
ANR	2652870	Identifier	ret_val		2652777	0					
ANR	2652871	CallExpression	"chirp_put ( argc , argv )"		2652777	1					
ANR	2652872	Callee	chirp_put		2652777	0					
ANR	2652873	Identifier	chirp_put		2652777	0					
ANR	2652874	ArgumentList	argc		2652777	1					
ANR	2652875	Argument	argc		2652777	0					
ANR	2652876	Identifier	argc		2652777	0					
ANR	2652877	Argument	argv		2652777	1					
ANR	2652878	Identifier	argv		2652777	0					
ANR	2652879	ElseStatement	else		2652777	0					
ANR	2652880	IfStatement	"if ( strcmp ( ""remove"" , argv [ 1 ] ) == 0 )"		2652777	0					
ANR	2652881	Condition	"strcmp ( ""remove"" , argv [ 1 ] ) == 0"	890:12:21311:21340	2652777	0	True				
ANR	2652882	EqualityExpression	"strcmp ( ""remove"" , argv [ 1 ] ) == 0"		2652777	0		==			
ANR	2652883	CallExpression	"strcmp ( ""remove"" , argv [ 1 ] )"		2652777	0					
ANR	2652884	Callee	strcmp		2652777	0					
ANR	2652885	Identifier	strcmp		2652777	0					
ANR	2652886	ArgumentList	"""remove"""		2652777	1					
ANR	2652887	Argument	"""remove"""		2652777	0					
ANR	2652888	PrimaryExpression	"""remove"""		2652777	0					
ANR	2652889	Argument	argv [ 1 ]		2652777	1					
ANR	2652890	ArrayIndexing	argv [ 1 ]		2652777	0					
ANR	2652891	Identifier	argv		2652777	0					
ANR	2652892	PrimaryExpression	1		2652777	1					
ANR	2652893	PrimaryExpression	0		2652777	1					
ANR	2652894	CompoundStatement		14:44:309:309	2652777	1					
ANR	2652895	ExpressionStatement	"ret_val = chirp_remove ( argc , argv )"	891:2:21347:21381	2652777	0	True				
ANR	2652896	AssignmentExpression	"ret_val = chirp_remove ( argc , argv )"		2652777	0		=			
ANR	2652897	Identifier	ret_val		2652777	0					
ANR	2652898	CallExpression	"chirp_remove ( argc , argv )"		2652777	1					
ANR	2652899	Callee	chirp_remove		2652777	0					
ANR	2652900	Identifier	chirp_remove		2652777	0					
ANR	2652901	ArgumentList	argc		2652777	1					
ANR	2652902	Argument	argc		2652777	0					
ANR	2652903	Identifier	argc		2652777	0					
ANR	2652904	Argument	argv		2652777	1					
ANR	2652905	Identifier	argv		2652777	0					
ANR	2652906	ElseStatement	else		2652777	0					
ANR	2652907	IfStatement	"if ( strcmp ( ""get_job_attr"" , argv [ 1 ] ) == 0 )"		2652777	0					
ANR	2652908	Condition	"strcmp ( ""get_job_attr"" , argv [ 1 ] ) == 0"	892:12:21395:21430	2652777	0	True				
ANR	2652909	EqualityExpression	"strcmp ( ""get_job_attr"" , argv [ 1 ] ) == 0"		2652777	0		==			
ANR	2652910	CallExpression	"strcmp ( ""get_job_attr"" , argv [ 1 ] )"		2652777	0					
ANR	2652911	Callee	strcmp		2652777	0					
ANR	2652912	Identifier	strcmp		2652777	0					
ANR	2652913	ArgumentList	"""get_job_attr"""		2652777	1					
ANR	2652914	Argument	"""get_job_attr"""		2652777	0					
ANR	2652915	PrimaryExpression	"""get_job_attr"""		2652777	0					
ANR	2652916	Argument	argv [ 1 ]		2652777	1					
ANR	2652917	ArrayIndexing	argv [ 1 ]		2652777	0					
ANR	2652918	Identifier	argv		2652777	0					
ANR	2652919	PrimaryExpression	1		2652777	1					
ANR	2652920	PrimaryExpression	0		2652777	1					
ANR	2652921	CompoundStatement		16:50:399:399	2652777	1					
ANR	2652922	ExpressionStatement	"ret_val = chirp_get_job_attr ( argc , argv )"	893:2:21437:21477	2652777	0	True				
ANR	2652923	AssignmentExpression	"ret_val = chirp_get_job_attr ( argc , argv )"		2652777	0		=			
ANR	2652924	Identifier	ret_val		2652777	0					
ANR	2652925	CallExpression	"chirp_get_job_attr ( argc , argv )"		2652777	1					
ANR	2652926	Callee	chirp_get_job_attr		2652777	0					
ANR	2652927	Identifier	chirp_get_job_attr		2652777	0					
ANR	2652928	ArgumentList	argc		2652777	1					
ANR	2652929	Argument	argc		2652777	0					
ANR	2652930	Identifier	argc		2652777	0					
ANR	2652931	Argument	argv		2652777	1					
ANR	2652932	Identifier	argv		2652777	0					
ANR	2652933	ElseStatement	else		2652777	0					
ANR	2652934	IfStatement	"if ( strcmp ( ""set_job_attr"" , argv [ 1 ] ) == 0 )"		2652777	0					
ANR	2652935	Condition	"strcmp ( ""set_job_attr"" , argv [ 1 ] ) == 0"	894:12:21491:21526	2652777	0	True				
ANR	2652936	EqualityExpression	"strcmp ( ""set_job_attr"" , argv [ 1 ] ) == 0"		2652777	0		==			
ANR	2652937	CallExpression	"strcmp ( ""set_job_attr"" , argv [ 1 ] )"		2652777	0					
ANR	2652938	Callee	strcmp		2652777	0					
ANR	2652939	Identifier	strcmp		2652777	0					
ANR	2652940	ArgumentList	"""set_job_attr"""		2652777	1					
ANR	2652941	Argument	"""set_job_attr"""		2652777	0					
ANR	2652942	PrimaryExpression	"""set_job_attr"""		2652777	0					
ANR	2652943	Argument	argv [ 1 ]		2652777	1					
ANR	2652944	ArrayIndexing	argv [ 1 ]		2652777	0					
ANR	2652945	Identifier	argv		2652777	0					
ANR	2652946	PrimaryExpression	1		2652777	1					
ANR	2652947	PrimaryExpression	0		2652777	1					
ANR	2652948	CompoundStatement		18:50:495:495	2652777	1					
ANR	2652949	ExpressionStatement	"ret_val = chirp_set_job_attr ( argc , argv )"	895:2:21533:21573	2652777	0	True				
ANR	2652950	AssignmentExpression	"ret_val = chirp_set_job_attr ( argc , argv )"		2652777	0		=			
ANR	2652951	Identifier	ret_val		2652777	0					
ANR	2652952	CallExpression	"chirp_set_job_attr ( argc , argv )"		2652777	1					
ANR	2652953	Callee	chirp_set_job_attr		2652777	0					
ANR	2652954	Identifier	chirp_set_job_attr		2652777	0					
ANR	2652955	ArgumentList	argc		2652777	1					
ANR	2652956	Argument	argc		2652777	0					
ANR	2652957	Identifier	argc		2652777	0					
ANR	2652958	Argument	argv		2652777	1					
ANR	2652959	Identifier	argv		2652777	0					
ANR	2652960	ElseStatement	else		2652777	0					
ANR	2652961	IfStatement	"if ( strcmp ( ""ulog"" , argv [ 1 ] ) == 0 )"		2652777	0					
ANR	2652962	Condition	"strcmp ( ""ulog"" , argv [ 1 ] ) == 0"	896:12:21587:21614	2652777	0	True				
ANR	2652963	EqualityExpression	"strcmp ( ""ulog"" , argv [ 1 ] ) == 0"		2652777	0		==			
ANR	2652964	CallExpression	"strcmp ( ""ulog"" , argv [ 1 ] )"		2652777	0					
ANR	2652965	Callee	strcmp		2652777	0					
ANR	2652966	Identifier	strcmp		2652777	0					
ANR	2652967	ArgumentList	"""ulog"""		2652777	1					
ANR	2652968	Argument	"""ulog"""		2652777	0					
ANR	2652969	PrimaryExpression	"""ulog"""		2652777	0					
ANR	2652970	Argument	argv [ 1 ]		2652777	1					
ANR	2652971	ArrayIndexing	argv [ 1 ]		2652777	0					
ANR	2652972	Identifier	argv		2652777	0					
ANR	2652973	PrimaryExpression	1		2652777	1					
ANR	2652974	PrimaryExpression	0		2652777	1					
ANR	2652975	CompoundStatement		20:42:583:583	2652777	1					
ANR	2652976	ExpressionStatement	"ret_val = chirp_ulog ( argc , argv )"	897:2:21621:21653	2652777	0	True				
ANR	2652977	AssignmentExpression	"ret_val = chirp_ulog ( argc , argv )"		2652777	0		=			
ANR	2652978	Identifier	ret_val		2652777	0					
ANR	2652979	CallExpression	"chirp_ulog ( argc , argv )"		2652777	1					
ANR	2652980	Callee	chirp_ulog		2652777	0					
ANR	2652981	Identifier	chirp_ulog		2652777	0					
ANR	2652982	ArgumentList	argc		2652777	1					
ANR	2652983	Argument	argc		2652777	0					
ANR	2652984	Identifier	argc		2652777	0					
ANR	2652985	Argument	argv		2652777	1					
ANR	2652986	Identifier	argv		2652777	0					
ANR	2652987	ElseStatement	else		2652777	0					
ANR	2652988	IfStatement	"if ( strcmp ( ""read"" , argv [ 1 ] ) == 0 )"		2652777	0					
ANR	2652989	Condition	"strcmp ( ""read"" , argv [ 1 ] ) == 0"	898:12:21667:21694	2652777	0	True				
ANR	2652990	EqualityExpression	"strcmp ( ""read"" , argv [ 1 ] ) == 0"		2652777	0		==			
ANR	2652991	CallExpression	"strcmp ( ""read"" , argv [ 1 ] )"		2652777	0					
ANR	2652992	Callee	strcmp		2652777	0					
ANR	2652993	Identifier	strcmp		2652777	0					
ANR	2652994	ArgumentList	"""read"""		2652777	1					
ANR	2652995	Argument	"""read"""		2652777	0					
ANR	2652996	PrimaryExpression	"""read"""		2652777	0					
ANR	2652997	Argument	argv [ 1 ]		2652777	1					
ANR	2652998	ArrayIndexing	argv [ 1 ]		2652777	0					
ANR	2652999	Identifier	argv		2652777	0					
ANR	2653000	PrimaryExpression	1		2652777	1					
ANR	2653001	PrimaryExpression	0		2652777	1					
ANR	2653002	CompoundStatement		22:42:663:663	2652777	1					
ANR	2653003	ExpressionStatement	"ret_val = chirp_read ( argc , argv )"	899:2:21701:21733	2652777	0	True				
ANR	2653004	AssignmentExpression	"ret_val = chirp_read ( argc , argv )"		2652777	0		=			
ANR	2653005	Identifier	ret_val		2652777	0					
ANR	2653006	CallExpression	"chirp_read ( argc , argv )"		2652777	1					
ANR	2653007	Callee	chirp_read		2652777	0					
ANR	2653008	Identifier	chirp_read		2652777	0					
ANR	2653009	ArgumentList	argc		2652777	1					
ANR	2653010	Argument	argc		2652777	0					
ANR	2653011	Identifier	argc		2652777	0					
ANR	2653012	Argument	argv		2652777	1					
ANR	2653013	Identifier	argv		2652777	0					
ANR	2653014	ElseStatement	else		2652777	0					
ANR	2653015	IfStatement	"if ( strcmp ( ""write"" , argv [ 1 ] ) == 0 )"		2652777	0					
ANR	2653016	Condition	"strcmp ( ""write"" , argv [ 1 ] ) == 0"	900:12:21747:21775	2652777	0	True				
ANR	2653017	EqualityExpression	"strcmp ( ""write"" , argv [ 1 ] ) == 0"		2652777	0		==			
ANR	2653018	CallExpression	"strcmp ( ""write"" , argv [ 1 ] )"		2652777	0					
ANR	2653019	Callee	strcmp		2652777	0					
ANR	2653020	Identifier	strcmp		2652777	0					
ANR	2653021	ArgumentList	"""write"""		2652777	1					
ANR	2653022	Argument	"""write"""		2652777	0					
ANR	2653023	PrimaryExpression	"""write"""		2652777	0					
ANR	2653024	Argument	argv [ 1 ]		2652777	1					
ANR	2653025	ArrayIndexing	argv [ 1 ]		2652777	0					
ANR	2653026	Identifier	argv		2652777	0					
ANR	2653027	PrimaryExpression	1		2652777	1					
ANR	2653028	PrimaryExpression	0		2652777	1					
ANR	2653029	CompoundStatement		24:43:744:744	2652777	1					
ANR	2653030	ExpressionStatement	"ret_val = chirp_write ( argc , argv )"	901:2:21782:21815	2652777	0	True				
ANR	2653031	AssignmentExpression	"ret_val = chirp_write ( argc , argv )"		2652777	0		=			
ANR	2653032	Identifier	ret_val		2652777	0					
ANR	2653033	CallExpression	"chirp_write ( argc , argv )"		2652777	1					
ANR	2653034	Callee	chirp_write		2652777	0					
ANR	2653035	Identifier	chirp_write		2652777	0					
ANR	2653036	ArgumentList	argc		2652777	1					
ANR	2653037	Argument	argc		2652777	0					
ANR	2653038	Identifier	argc		2652777	0					
ANR	2653039	Argument	argv		2652777	1					
ANR	2653040	Identifier	argv		2652777	0					
ANR	2653041	ElseStatement	else		2652777	0					
ANR	2653042	IfStatement	"if ( strcmp ( ""rmdir"" , argv [ 1 ] ) == 0 )"		2652777	0					
ANR	2653043	Condition	"strcmp ( ""rmdir"" , argv [ 1 ] ) == 0"	902:12:21829:21857	2652777	0	True				
ANR	2653044	EqualityExpression	"strcmp ( ""rmdir"" , argv [ 1 ] ) == 0"		2652777	0		==			
ANR	2653045	CallExpression	"strcmp ( ""rmdir"" , argv [ 1 ] )"		2652777	0					
ANR	2653046	Callee	strcmp		2652777	0					
ANR	2653047	Identifier	strcmp		2652777	0					
ANR	2653048	ArgumentList	"""rmdir"""		2652777	1					
ANR	2653049	Argument	"""rmdir"""		2652777	0					
ANR	2653050	PrimaryExpression	"""rmdir"""		2652777	0					
ANR	2653051	Argument	argv [ 1 ]		2652777	1					
ANR	2653052	ArrayIndexing	argv [ 1 ]		2652777	0					
ANR	2653053	Identifier	argv		2652777	0					
ANR	2653054	PrimaryExpression	1		2652777	1					
ANR	2653055	PrimaryExpression	0		2652777	1					
ANR	2653056	CompoundStatement		26:43:826:826	2652777	1					
ANR	2653057	ExpressionStatement	"ret_val = chirp_rmdir ( argc , argv )"	903:2:21864:21897	2652777	0	True				
ANR	2653058	AssignmentExpression	"ret_val = chirp_rmdir ( argc , argv )"		2652777	0		=			
ANR	2653059	Identifier	ret_val		2652777	0					
ANR	2653060	CallExpression	"chirp_rmdir ( argc , argv )"		2652777	1					
ANR	2653061	Callee	chirp_rmdir		2652777	0					
ANR	2653062	Identifier	chirp_rmdir		2652777	0					
ANR	2653063	ArgumentList	argc		2652777	1					
ANR	2653064	Argument	argc		2652777	0					
ANR	2653065	Identifier	argc		2652777	0					
ANR	2653066	Argument	argv		2652777	1					
ANR	2653067	Identifier	argv		2652777	0					
ANR	2653068	ElseStatement	else		2652777	0					
ANR	2653069	IfStatement	"if ( strcmp ( ""getdir"" , argv [ 1 ] ) == 0 )"		2652777	0					
ANR	2653070	Condition	"strcmp ( ""getdir"" , argv [ 1 ] ) == 0"	904:12:21912:21941	2652777	0	True				
ANR	2653071	EqualityExpression	"strcmp ( ""getdir"" , argv [ 1 ] ) == 0"		2652777	0		==			
ANR	2653072	CallExpression	"strcmp ( ""getdir"" , argv [ 1 ] )"		2652777	0					
ANR	2653073	Callee	strcmp		2652777	0					
ANR	2653074	Identifier	strcmp		2652777	0					
ANR	2653075	ArgumentList	"""getdir"""		2652777	1					
ANR	2653076	Argument	"""getdir"""		2652777	0					
ANR	2653077	PrimaryExpression	"""getdir"""		2652777	0					
ANR	2653078	Argument	argv [ 1 ]		2652777	1					
ANR	2653079	ArrayIndexing	argv [ 1 ]		2652777	0					
ANR	2653080	Identifier	argv		2652777	0					
ANR	2653081	PrimaryExpression	1		2652777	1					
ANR	2653082	PrimaryExpression	0		2652777	1					
ANR	2653083	CompoundStatement		28:44:910:910	2652777	1					
ANR	2653084	ExpressionStatement	"ret_val = chirp_getdir ( argc , argv )"	905:2:21948:21982	2652777	0	True				
ANR	2653085	AssignmentExpression	"ret_val = chirp_getdir ( argc , argv )"		2652777	0		=			
ANR	2653086	Identifier	ret_val		2652777	0					
ANR	2653087	CallExpression	"chirp_getdir ( argc , argv )"		2652777	1					
ANR	2653088	Callee	chirp_getdir		2652777	0					
ANR	2653089	Identifier	chirp_getdir		2652777	0					
ANR	2653090	ArgumentList	argc		2652777	1					
ANR	2653091	Argument	argc		2652777	0					
ANR	2653092	Identifier	argc		2652777	0					
ANR	2653093	Argument	argv		2652777	1					
ANR	2653094	Identifier	argv		2652777	0					
ANR	2653095	ElseStatement	else		2652777	0					
ANR	2653096	IfStatement	"if ( strcmp ( ""whoami"" , argv [ 1 ] ) == 0 )"		2652777	0					
ANR	2653097	Condition	"strcmp ( ""whoami"" , argv [ 1 ] ) == 0"	906:12:21996:22025	2652777	0	True				
ANR	2653098	EqualityExpression	"strcmp ( ""whoami"" , argv [ 1 ] ) == 0"		2652777	0		==			
ANR	2653099	CallExpression	"strcmp ( ""whoami"" , argv [ 1 ] )"		2652777	0					
ANR	2653100	Callee	strcmp		2652777	0					
ANR	2653101	Identifier	strcmp		2652777	0					
ANR	2653102	ArgumentList	"""whoami"""		2652777	1					
ANR	2653103	Argument	"""whoami"""		2652777	0					
ANR	2653104	PrimaryExpression	"""whoami"""		2652777	0					
ANR	2653105	Argument	argv [ 1 ]		2652777	1					
ANR	2653106	ArrayIndexing	argv [ 1 ]		2652777	0					
ANR	2653107	Identifier	argv		2652777	0					
ANR	2653108	PrimaryExpression	1		2652777	1					
ANR	2653109	PrimaryExpression	0		2652777	1					
ANR	2653110	CompoundStatement		30:44:994:994	2652777	1					
ANR	2653111	ExpressionStatement	ret_val = chirp_whoami ( )	907:2:22032:22056	2652777	0	True				
ANR	2653112	AssignmentExpression	ret_val = chirp_whoami ( )		2652777	0		=			
ANR	2653113	Identifier	ret_val		2652777	0					
ANR	2653114	CallExpression	chirp_whoami ( )		2652777	1					
ANR	2653115	Callee	chirp_whoami		2652777	0					
ANR	2653116	Identifier	chirp_whoami		2652777	0					
ANR	2653117	ArgumentList			2652777	1					
ANR	2653118	ElseStatement	else		2652777	0					
ANR	2653119	IfStatement	"if ( strcmp ( ""whoareyou"" , argv [ 1 ] ) == 0 )"		2652777	0					
ANR	2653120	Condition	"strcmp ( ""whoareyou"" , argv [ 1 ] ) == 0"	908:12:22070:22102	2652777	0	True				
ANR	2653121	EqualityExpression	"strcmp ( ""whoareyou"" , argv [ 1 ] ) == 0"		2652777	0		==			
ANR	2653122	CallExpression	"strcmp ( ""whoareyou"" , argv [ 1 ] )"		2652777	0					
ANR	2653123	Callee	strcmp		2652777	0					
ANR	2653124	Identifier	strcmp		2652777	0					
ANR	2653125	ArgumentList	"""whoareyou"""		2652777	1					
ANR	2653126	Argument	"""whoareyou"""		2652777	0					
ANR	2653127	PrimaryExpression	"""whoareyou"""		2652777	0					
ANR	2653128	Argument	argv [ 1 ]		2652777	1					
ANR	2653129	ArrayIndexing	argv [ 1 ]		2652777	0					
ANR	2653130	Identifier	argv		2652777	0					
ANR	2653131	PrimaryExpression	1		2652777	1					
ANR	2653132	PrimaryExpression	0		2652777	1					
ANR	2653133	CompoundStatement		32:47:1071:1071	2652777	1					
ANR	2653134	ExpressionStatement	"ret_val = chirp_whoareyou ( argc , argv )"	909:2:22109:22146	2652777	0	True				
ANR	2653135	AssignmentExpression	"ret_val = chirp_whoareyou ( argc , argv )"		2652777	0		=			
ANR	2653136	Identifier	ret_val		2652777	0					
ANR	2653137	CallExpression	"chirp_whoareyou ( argc , argv )"		2652777	1					
ANR	2653138	Callee	chirp_whoareyou		2652777	0					
ANR	2653139	Identifier	chirp_whoareyou		2652777	0					
ANR	2653140	ArgumentList	argc		2652777	1					
ANR	2653141	Argument	argc		2652777	0					
ANR	2653142	Identifier	argc		2652777	0					
ANR	2653143	Argument	argv		2652777	1					
ANR	2653144	Identifier	argv		2652777	0					
ANR	2653145	ElseStatement	else		2652777	0					
ANR	2653146	IfStatement	"if ( strcmp ( ""link"" , argv [ 1 ] ) == 0 )"		2652777	0					
ANR	2653147	Condition	"strcmp ( ""link"" , argv [ 1 ] ) == 0"	910:12:22160:22187	2652777	0	True				
ANR	2653148	EqualityExpression	"strcmp ( ""link"" , argv [ 1 ] ) == 0"		2652777	0		==			
ANR	2653149	CallExpression	"strcmp ( ""link"" , argv [ 1 ] )"		2652777	0					
ANR	2653150	Callee	strcmp		2652777	0					
ANR	2653151	Identifier	strcmp		2652777	0					
ANR	2653152	ArgumentList	"""link"""		2652777	1					
ANR	2653153	Argument	"""link"""		2652777	0					
ANR	2653154	PrimaryExpression	"""link"""		2652777	0					
ANR	2653155	Argument	argv [ 1 ]		2652777	1					
ANR	2653156	ArrayIndexing	argv [ 1 ]		2652777	0					
ANR	2653157	Identifier	argv		2652777	0					
ANR	2653158	PrimaryExpression	1		2652777	1					
ANR	2653159	PrimaryExpression	0		2652777	1					
ANR	2653160	CompoundStatement		34:42:1156:1156	2652777	1					
ANR	2653161	ExpressionStatement	"ret_val = chirp_link ( argc , argv )"	911:2:22194:22226	2652777	0	True				
ANR	2653162	AssignmentExpression	"ret_val = chirp_link ( argc , argv )"		2652777	0		=			
ANR	2653163	Identifier	ret_val		2652777	0					
ANR	2653164	CallExpression	"chirp_link ( argc , argv )"		2652777	1					
ANR	2653165	Callee	chirp_link		2652777	0					
ANR	2653166	Identifier	chirp_link		2652777	0					
ANR	2653167	ArgumentList	argc		2652777	1					
ANR	2653168	Argument	argc		2652777	0					
ANR	2653169	Identifier	argc		2652777	0					
ANR	2653170	Argument	argv		2652777	1					
ANR	2653171	Identifier	argv		2652777	0					
ANR	2653172	ElseStatement	else		2652777	0					
ANR	2653173	IfStatement	"if ( strcmp ( ""readlink"" , argv [ 1 ] ) == 0 )"		2652777	0					
ANR	2653174	Condition	"strcmp ( ""readlink"" , argv [ 1 ] ) == 0"	912:12:22240:22271	2652777	0	True				
ANR	2653175	EqualityExpression	"strcmp ( ""readlink"" , argv [ 1 ] ) == 0"		2652777	0		==			
ANR	2653176	CallExpression	"strcmp ( ""readlink"" , argv [ 1 ] )"		2652777	0					
ANR	2653177	Callee	strcmp		2652777	0					
ANR	2653178	Identifier	strcmp		2652777	0					
ANR	2653179	ArgumentList	"""readlink"""		2652777	1					
ANR	2653180	Argument	"""readlink"""		2652777	0					
ANR	2653181	PrimaryExpression	"""readlink"""		2652777	0					
ANR	2653182	Argument	argv [ 1 ]		2652777	1					
ANR	2653183	ArrayIndexing	argv [ 1 ]		2652777	0					
ANR	2653184	Identifier	argv		2652777	0					
ANR	2653185	PrimaryExpression	1		2652777	1					
ANR	2653186	PrimaryExpression	0		2652777	1					
ANR	2653187	CompoundStatement		36:46:1240:1240	2652777	1					
ANR	2653188	ExpressionStatement	"ret_val = chirp_readlink ( argc , argv )"	913:2:22278:22314	2652777	0	True				
ANR	2653189	AssignmentExpression	"ret_val = chirp_readlink ( argc , argv )"		2652777	0		=			
ANR	2653190	Identifier	ret_val		2652777	0					
ANR	2653191	CallExpression	"chirp_readlink ( argc , argv )"		2652777	1					
ANR	2653192	Callee	chirp_readlink		2652777	0					
ANR	2653193	Identifier	chirp_readlink		2652777	0					
ANR	2653194	ArgumentList	argc		2652777	1					
ANR	2653195	Argument	argc		2652777	0					
ANR	2653196	Identifier	argc		2652777	0					
ANR	2653197	Argument	argv		2652777	1					
ANR	2653198	Identifier	argv		2652777	0					
ANR	2653199	ElseStatement	else		2652777	0					
ANR	2653200	IfStatement	"if ( strcmp ( ""stat"" , argv [ 1 ] ) == 0 || strcmp ( ""lstat"" , argv [ 1 ] ) == 0 )"		2652777	0					
ANR	2653201	Condition	"strcmp ( ""stat"" , argv [ 1 ] ) == 0 || strcmp ( ""lstat"" , argv [ 1 ] ) == 0"	914:12:22328:22388	2652777	0	True				
ANR	2653202	OrExpression	"strcmp ( ""stat"" , argv [ 1 ] ) == 0 || strcmp ( ""lstat"" , argv [ 1 ] ) == 0"		2652777	0		||			
ANR	2653203	EqualityExpression	"strcmp ( ""stat"" , argv [ 1 ] ) == 0"		2652777	0		==			
ANR	2653204	CallExpression	"strcmp ( ""stat"" , argv [ 1 ] )"		2652777	0					
ANR	2653205	Callee	strcmp		2652777	0					
ANR	2653206	Identifier	strcmp		2652777	0					
ANR	2653207	ArgumentList	"""stat"""		2652777	1					
ANR	2653208	Argument	"""stat"""		2652777	0					
ANR	2653209	PrimaryExpression	"""stat"""		2652777	0					
ANR	2653210	Argument	argv [ 1 ]		2652777	1					
ANR	2653211	ArrayIndexing	argv [ 1 ]		2652777	0					
ANR	2653212	Identifier	argv		2652777	0					
ANR	2653213	PrimaryExpression	1		2652777	1					
ANR	2653214	PrimaryExpression	0		2652777	1					
ANR	2653215	EqualityExpression	"strcmp ( ""lstat"" , argv [ 1 ] ) == 0"		2652777	1		==			
ANR	2653216	CallExpression	"strcmp ( ""lstat"" , argv [ 1 ] )"		2652777	0					
ANR	2653217	Callee	strcmp		2652777	0					
ANR	2653218	Identifier	strcmp		2652777	0					
ANR	2653219	ArgumentList	"""lstat"""		2652777	1					
ANR	2653220	Argument	"""lstat"""		2652777	0					
ANR	2653221	PrimaryExpression	"""lstat"""		2652777	0					
ANR	2653222	Argument	argv [ 1 ]		2652777	1					
ANR	2653223	ArrayIndexing	argv [ 1 ]		2652777	0					
ANR	2653224	Identifier	argv		2652777	0					
ANR	2653225	PrimaryExpression	1		2652777	1					
ANR	2653226	PrimaryExpression	0		2652777	1					
ANR	2653227	CompoundStatement		38:75:1357:1357	2652777	1					
ANR	2653228	ExpressionStatement	"ret_val = chirp_do_stat ( argc , argv )"	915:2:22395:22430	2652777	0	True				
ANR	2653229	AssignmentExpression	"ret_val = chirp_do_stat ( argc , argv )"		2652777	0		=			
ANR	2653230	Identifier	ret_val		2652777	0					
ANR	2653231	CallExpression	"chirp_do_stat ( argc , argv )"		2652777	1					
ANR	2653232	Callee	chirp_do_stat		2652777	0					
ANR	2653233	Identifier	chirp_do_stat		2652777	0					
ANR	2653234	ArgumentList	argc		2652777	1					
ANR	2653235	Argument	argc		2652777	0					
ANR	2653236	Identifier	argc		2652777	0					
ANR	2653237	Argument	argv		2652777	1					
ANR	2653238	Identifier	argv		2652777	0					
ANR	2653239	ElseStatement	else		2652777	0					
ANR	2653240	IfStatement	"if ( strcmp ( ""statfs"" , argv [ 1 ] ) == 0 )"		2652777	0					
ANR	2653241	Condition	"strcmp ( ""statfs"" , argv [ 1 ] ) == 0"	916:12:22444:22473	2652777	0	True				
ANR	2653242	EqualityExpression	"strcmp ( ""statfs"" , argv [ 1 ] ) == 0"		2652777	0		==			
ANR	2653243	CallExpression	"strcmp ( ""statfs"" , argv [ 1 ] )"		2652777	0					
ANR	2653244	Callee	strcmp		2652777	0					
ANR	2653245	Identifier	strcmp		2652777	0					
ANR	2653246	ArgumentList	"""statfs"""		2652777	1					
ANR	2653247	Argument	"""statfs"""		2652777	0					
ANR	2653248	PrimaryExpression	"""statfs"""		2652777	0					
ANR	2653249	Argument	argv [ 1 ]		2652777	1					
ANR	2653250	ArrayIndexing	argv [ 1 ]		2652777	0					
ANR	2653251	Identifier	argv		2652777	0					
ANR	2653252	PrimaryExpression	1		2652777	1					
ANR	2653253	PrimaryExpression	0		2652777	1					
ANR	2653254	CompoundStatement		40:44:1442:1442	2652777	1					
ANR	2653255	ExpressionStatement	"ret_val = chirp_do_statfs ( argc , argv )"	917:2:22480:22517	2652777	0	True				
ANR	2653256	AssignmentExpression	"ret_val = chirp_do_statfs ( argc , argv )"		2652777	0		=			
ANR	2653257	Identifier	ret_val		2652777	0					
ANR	2653258	CallExpression	"chirp_do_statfs ( argc , argv )"		2652777	1					
ANR	2653259	Callee	chirp_do_statfs		2652777	0					
ANR	2653260	Identifier	chirp_do_statfs		2652777	0					
ANR	2653261	ArgumentList	argc		2652777	1					
ANR	2653262	Argument	argc		2652777	0					
ANR	2653263	Identifier	argc		2652777	0					
ANR	2653264	Argument	argv		2652777	1					
ANR	2653265	Identifier	argv		2652777	0					
ANR	2653266	ElseStatement	else		2652777	0					
ANR	2653267	IfStatement	"if ( strcmp ( ""access"" , argv [ 1 ] ) == 0 )"		2652777	0					
ANR	2653268	Condition	"strcmp ( ""access"" , argv [ 1 ] ) == 0"	918:12:22531:22560	2652777	0	True				
ANR	2653269	EqualityExpression	"strcmp ( ""access"" , argv [ 1 ] ) == 0"		2652777	0		==			
ANR	2653270	CallExpression	"strcmp ( ""access"" , argv [ 1 ] )"		2652777	0					
ANR	2653271	Callee	strcmp		2652777	0					
ANR	2653272	Identifier	strcmp		2652777	0					
ANR	2653273	ArgumentList	"""access"""		2652777	1					
ANR	2653274	Argument	"""access"""		2652777	0					
ANR	2653275	PrimaryExpression	"""access"""		2652777	0					
ANR	2653276	Argument	argv [ 1 ]		2652777	1					
ANR	2653277	ArrayIndexing	argv [ 1 ]		2652777	0					
ANR	2653278	Identifier	argv		2652777	0					
ANR	2653279	PrimaryExpression	1		2652777	1					
ANR	2653280	PrimaryExpression	0		2652777	1					
ANR	2653281	CompoundStatement		42:44:1529:1529	2652777	1					
ANR	2653282	ExpressionStatement	"ret_val = chirp_access ( argc , argv )"	919:2:22567:22601	2652777	0	True				
ANR	2653283	AssignmentExpression	"ret_val = chirp_access ( argc , argv )"		2652777	0		=			
ANR	2653284	Identifier	ret_val		2652777	0					
ANR	2653285	CallExpression	"chirp_access ( argc , argv )"		2652777	1					
ANR	2653286	Callee	chirp_access		2652777	0					
ANR	2653287	Identifier	chirp_access		2652777	0					
ANR	2653288	ArgumentList	argc		2652777	1					
ANR	2653289	Argument	argc		2652777	0					
ANR	2653290	Identifier	argc		2652777	0					
ANR	2653291	Argument	argv		2652777	1					
ANR	2653292	Identifier	argv		2652777	0					
ANR	2653293	ElseStatement	else		2652777	0					
ANR	2653294	IfStatement	"if ( strcmp ( ""chmod"" , argv [ 1 ] ) == 0 )"		2652777	0					
ANR	2653295	Condition	"strcmp ( ""chmod"" , argv [ 1 ] ) == 0"	920:12:22615:22643	2652777	0	True				
ANR	2653296	EqualityExpression	"strcmp ( ""chmod"" , argv [ 1 ] ) == 0"		2652777	0		==			
ANR	2653297	CallExpression	"strcmp ( ""chmod"" , argv [ 1 ] )"		2652777	0					
ANR	2653298	Callee	strcmp		2652777	0					
ANR	2653299	Identifier	strcmp		2652777	0					
ANR	2653300	ArgumentList	"""chmod"""		2652777	1					
ANR	2653301	Argument	"""chmod"""		2652777	0					
ANR	2653302	PrimaryExpression	"""chmod"""		2652777	0					
ANR	2653303	Argument	argv [ 1 ]		2652777	1					
ANR	2653304	ArrayIndexing	argv [ 1 ]		2652777	0					
ANR	2653305	Identifier	argv		2652777	0					
ANR	2653306	PrimaryExpression	1		2652777	1					
ANR	2653307	PrimaryExpression	0		2652777	1					
ANR	2653308	CompoundStatement		44:43:1612:1612	2652777	1					
ANR	2653309	ExpressionStatement	"ret_val = chirp_chmod ( argc , argv )"	921:2:22650:22683	2652777	0	True				
ANR	2653310	AssignmentExpression	"ret_val = chirp_chmod ( argc , argv )"		2652777	0		=			
ANR	2653311	Identifier	ret_val		2652777	0					
ANR	2653312	CallExpression	"chirp_chmod ( argc , argv )"		2652777	1					
ANR	2653313	Callee	chirp_chmod		2652777	0					
ANR	2653314	Identifier	chirp_chmod		2652777	0					
ANR	2653315	ArgumentList	argc		2652777	1					
ANR	2653316	Argument	argc		2652777	0					
ANR	2653317	Identifier	argc		2652777	0					
ANR	2653318	Argument	argv		2652777	1					
ANR	2653319	Identifier	argv		2652777	0					
ANR	2653320	ElseStatement	else		2652777	0					
ANR	2653321	IfStatement	"if ( strcmp ( ""chown"" , argv [ 1 ] ) == 0 || strcmp ( ""lchown"" , argv [ 1 ] ) == 0 )"		2652777	0					
ANR	2653322	Condition	"strcmp ( ""chown"" , argv [ 1 ] ) == 0 || strcmp ( ""lchown"" , argv [ 1 ] ) == 0"	922:12:22697:22759	2652777	0	True				
ANR	2653323	OrExpression	"strcmp ( ""chown"" , argv [ 1 ] ) == 0 || strcmp ( ""lchown"" , argv [ 1 ] ) == 0"		2652777	0		||			
ANR	2653324	EqualityExpression	"strcmp ( ""chown"" , argv [ 1 ] ) == 0"		2652777	0		==			
ANR	2653325	CallExpression	"strcmp ( ""chown"" , argv [ 1 ] )"		2652777	0					
ANR	2653326	Callee	strcmp		2652777	0					
ANR	2653327	Identifier	strcmp		2652777	0					
ANR	2653328	ArgumentList	"""chown"""		2652777	1					
ANR	2653329	Argument	"""chown"""		2652777	0					
ANR	2653330	PrimaryExpression	"""chown"""		2652777	0					
ANR	2653331	Argument	argv [ 1 ]		2652777	1					
ANR	2653332	ArrayIndexing	argv [ 1 ]		2652777	0					
ANR	2653333	Identifier	argv		2652777	0					
ANR	2653334	PrimaryExpression	1		2652777	1					
ANR	2653335	PrimaryExpression	0		2652777	1					
ANR	2653336	EqualityExpression	"strcmp ( ""lchown"" , argv [ 1 ] ) == 0"		2652777	1		==			
ANR	2653337	CallExpression	"strcmp ( ""lchown"" , argv [ 1 ] )"		2652777	0					
ANR	2653338	Callee	strcmp		2652777	0					
ANR	2653339	Identifier	strcmp		2652777	0					
ANR	2653340	ArgumentList	"""lchown"""		2652777	1					
ANR	2653341	Argument	"""lchown"""		2652777	0					
ANR	2653342	PrimaryExpression	"""lchown"""		2652777	0					
ANR	2653343	Argument	argv [ 1 ]		2652777	1					
ANR	2653344	ArrayIndexing	argv [ 1 ]		2652777	0					
ANR	2653345	Identifier	argv		2652777	0					
ANR	2653346	PrimaryExpression	1		2652777	1					
ANR	2653347	PrimaryExpression	0		2652777	1					
ANR	2653348	CompoundStatement		46:76:1727:1727	2652777	1					
ANR	2653349	ExpressionStatement	"ret_val = chirp_chown ( argc , argv )"	923:2:22765:22798	2652777	0	True				
ANR	2653350	AssignmentExpression	"ret_val = chirp_chown ( argc , argv )"		2652777	0		=			
ANR	2653351	Identifier	ret_val		2652777	0					
ANR	2653352	CallExpression	"chirp_chown ( argc , argv )"		2652777	1					
ANR	2653353	Callee	chirp_chown		2652777	0					
ANR	2653354	Identifier	chirp_chown		2652777	0					
ANR	2653355	ArgumentList	argc		2652777	1					
ANR	2653356	Argument	argc		2652777	0					
ANR	2653357	Identifier	argc		2652777	0					
ANR	2653358	Argument	argv		2652777	1					
ANR	2653359	Identifier	argv		2652777	0					
ANR	2653360	ElseStatement	else		2652777	0					
ANR	2653361	IfStatement	"if ( strcmp ( ""truncate"" , argv [ 1 ] ) == 0 )"		2652777	0					
ANR	2653362	Condition	"strcmp ( ""truncate"" , argv [ 1 ] ) == 0"	924:12:22812:22843	2652777	0	True				
ANR	2653363	EqualityExpression	"strcmp ( ""truncate"" , argv [ 1 ] ) == 0"		2652777	0		==			
ANR	2653364	CallExpression	"strcmp ( ""truncate"" , argv [ 1 ] )"		2652777	0					
ANR	2653365	Callee	strcmp		2652777	0					
ANR	2653366	Identifier	strcmp		2652777	0					
ANR	2653367	ArgumentList	"""truncate"""		2652777	1					
ANR	2653368	Argument	"""truncate"""		2652777	0					
ANR	2653369	PrimaryExpression	"""truncate"""		2652777	0					
ANR	2653370	Argument	argv [ 1 ]		2652777	1					
ANR	2653371	ArrayIndexing	argv [ 1 ]		2652777	0					
ANR	2653372	Identifier	argv		2652777	0					
ANR	2653373	PrimaryExpression	1		2652777	1					
ANR	2653374	PrimaryExpression	0		2652777	1					
ANR	2653375	CompoundStatement		48:46:1812:1812	2652777	1					
ANR	2653376	ExpressionStatement	"ret_val = chirp_truncate ( argc , argv )"	925:2:22850:22886	2652777	0	True				
ANR	2653377	AssignmentExpression	"ret_val = chirp_truncate ( argc , argv )"		2652777	0		=			
ANR	2653378	Identifier	ret_val		2652777	0					
ANR	2653379	CallExpression	"chirp_truncate ( argc , argv )"		2652777	1					
ANR	2653380	Callee	chirp_truncate		2652777	0					
ANR	2653381	Identifier	chirp_truncate		2652777	0					
ANR	2653382	ArgumentList	argc		2652777	1					
ANR	2653383	Argument	argc		2652777	0					
ANR	2653384	Identifier	argc		2652777	0					
ANR	2653385	Argument	argv		2652777	1					
ANR	2653386	Identifier	argv		2652777	0					
ANR	2653387	ElseStatement	else		2652777	0					
ANR	2653388	IfStatement	"if ( strcmp ( ""utime"" , argv [ 1 ] ) == 0 )"		2652777	0					
ANR	2653389	Condition	"strcmp ( ""utime"" , argv [ 1 ] ) == 0"	926:12:22900:22928	2652777	0	True				
ANR	2653390	EqualityExpression	"strcmp ( ""utime"" , argv [ 1 ] ) == 0"		2652777	0		==			
ANR	2653391	CallExpression	"strcmp ( ""utime"" , argv [ 1 ] )"		2652777	0					
ANR	2653392	Callee	strcmp		2652777	0					
ANR	2653393	Identifier	strcmp		2652777	0					
ANR	2653394	ArgumentList	"""utime"""		2652777	1					
ANR	2653395	Argument	"""utime"""		2652777	0					
ANR	2653396	PrimaryExpression	"""utime"""		2652777	0					
ANR	2653397	Argument	argv [ 1 ]		2652777	1					
ANR	2653398	ArrayIndexing	argv [ 1 ]		2652777	0					
ANR	2653399	Identifier	argv		2652777	0					
ANR	2653400	PrimaryExpression	1		2652777	1					
ANR	2653401	PrimaryExpression	0		2652777	1					
ANR	2653402	CompoundStatement		50:43:1897:1897	2652777	1					
ANR	2653403	ExpressionStatement	"ret_val = chirp_utime ( argc , argv )"	927:2:22935:22968	2652777	0	True				
ANR	2653404	AssignmentExpression	"ret_val = chirp_utime ( argc , argv )"		2652777	0		=			
ANR	2653405	Identifier	ret_val		2652777	0					
ANR	2653406	CallExpression	"chirp_utime ( argc , argv )"		2652777	1					
ANR	2653407	Callee	chirp_utime		2652777	0					
ANR	2653408	Identifier	chirp_utime		2652777	0					
ANR	2653409	ArgumentList	argc		2652777	1					
ANR	2653410	Argument	argc		2652777	0					
ANR	2653411	Identifier	argc		2652777	0					
ANR	2653412	Argument	argv		2652777	1					
ANR	2653413	Identifier	argv		2652777	0					
ANR	2653414	ElseStatement	else		2652777	0					
ANR	2653415	CompoundStatement		52:8:1944:1944	2652777	0					
ANR	2653416	ExpressionStatement	"printf ( ""Unknown command %s\\n"" , argv [ 1 ] )"	929:2:22982:23021	2652777	0	True				
ANR	2653417	CallExpression	"printf ( ""Unknown command %s\\n"" , argv [ 1 ] )"		2652777	0					
ANR	2653418	Callee	printf		2652777	0					
ANR	2653419	Identifier	printf		2652777	0					
ANR	2653420	ArgumentList	"""Unknown command %s\\n"""		2652777	1					
ANR	2653421	Argument	"""Unknown command %s\\n"""		2652777	0					
ANR	2653422	PrimaryExpression	"""Unknown command %s\\n"""		2652777	0					
ANR	2653423	Argument	argv [ 1 ]		2652777	1					
ANR	2653424	ArrayIndexing	argv [ 1 ]		2652777	0					
ANR	2653425	Identifier	argv		2652777	0					
ANR	2653426	PrimaryExpression	1		2652777	1					
ANR	2653427	ExpressionStatement	usage ( )	930:2:23025:23032	2652777	1	True				
ANR	2653428	CallExpression	usage ( )		2652777	0					
ANR	2653429	Callee	usage		2652777	0					
ANR	2653430	Identifier	usage		2652777	0					
ANR	2653431	ArgumentList			2652777	1					
ANR	2653432	ExpressionStatement	exit ( - 1 )	931:2:23036:23044	2652777	2	True				
ANR	2653433	CallExpression	exit ( - 1 )		2652777	0					
ANR	2653434	Callee	exit		2652777	0					
ANR	2653435	Identifier	exit		2652777	0					
ANR	2653436	ArgumentList	- 1		2652777	1					
ANR	2653437	Argument	- 1		2652777	0					
ANR	2653438	UnaryOperationExpression	- 1		2652777	0					
ANR	2653439	UnaryOperator	-		2652777	0					
ANR	2653440	PrimaryExpression	1		2652777	1					
ANR	2653441	IfStatement	if ( ret_val < 0 && errno != 0 )		2652777	3					
ANR	2653442	Condition	ret_val < 0 && errno != 0	934:4:23054:23078	2652777	0	True				
ANR	2653443	AndExpression	ret_val < 0 && errno != 0		2652777	0		&&			
ANR	2653444	RelationalExpression	ret_val < 0		2652777	0		<			
ANR	2653445	Identifier	ret_val		2652777	0					
ANR	2653446	PrimaryExpression	0		2652777	1					
ANR	2653447	EqualityExpression	errno != 0		2652777	1		!=			
ANR	2653448	Identifier	errno		2652777	0					
ANR	2653449	PrimaryExpression	0		2652777	1					
ANR	2653450	CompoundStatement		58:31:2047:2047	2652777	1					
ANR	2653451	ExpressionStatement	"printf ( ""\\tError: %d (%s)\\n"" , errno , strerror ( errno ) )"	935:2:23085:23137	2652777	0	True				
ANR	2653452	CallExpression	"printf ( ""\\tError: %d (%s)\\n"" , errno , strerror ( errno ) )"		2652777	0					
ANR	2653453	Callee	printf		2652777	0					
ANR	2653454	Identifier	printf		2652777	0					
ANR	2653455	ArgumentList	"""\\tError: %d (%s)\\n"""		2652777	1					
ANR	2653456	Argument	"""\\tError: %d (%s)\\n"""		2652777	0					
ANR	2653457	PrimaryExpression	"""\\tError: %d (%s)\\n"""		2652777	0					
ANR	2653458	Argument	errno		2652777	1					
ANR	2653459	Identifier	errno		2652777	0					
ANR	2653460	Argument	strerror ( errno )		2652777	2					
ANR	2653461	CallExpression	strerror ( errno )		2652777	0					
ANR	2653462	Callee	strerror		2652777	0					
ANR	2653463	Identifier	strerror		2652777	0					
ANR	2653464	ArgumentList	errno		2652777	1					
ANR	2653465	Argument	errno		2652777	0					
ANR	2653466	Identifier	errno		2652777	0					
ANR	2653467	ReturnStatement	return ret_val ;	937:1:23143:23157	2652777	4	True				
ANR	2653468	Identifier	ret_val		2652777	0					
ANR	2653469	ExpressionStatement	exit ( - 1 )	938:1:23160:23168	2652777	5	True				
ANR	2653470	CallExpression	exit ( - 1 )		2652777	0					
ANR	2653471	Callee	exit		2652777	0					
ANR	2653472	Identifier	exit		2652777	0					
ANR	2653473	ArgumentList	- 1		2652777	1					
ANR	2653474	Argument	- 1		2652777	0					
ANR	2653475	UnaryOperationExpression	- 1		2652777	0					
ANR	2653476	UnaryOperator	-		2652777	0					
ANR	2653477	PrimaryExpression	1		2652777	1					
ANR	2653478	ReturnType	int		2652777	1					
ANR	2653479	Identifier	main		2652777	2					
ANR	2653480	ParameterList	"int argc , char * * argv"		2652777	3					
ANR	2653481	Parameter	int argc	877:5:21010:21017	2652777	0	True				
ANR	2653482	ParameterType	int		2652777	0					
ANR	2653483	Identifier	argc		2652777	1					
ANR	2653484	Parameter	char * * argv	877:15:21020:21030	2652777	1	True				
ANR	2653485	ParameterType	char * *		2652777	0					
ANR	2653486	Identifier	argv		2652777	1					
ANR	2653487	CFGEntryNode	ENTRY		2652777		True				
ANR	2653488	CFGExitNode	EXIT		2652777		True				
ANR	2653489	Symbol	chirp_do_statfs		2652777						
ANR	2653490	Symbol	chirp_getdir		2652777						
ANR	2653491	Symbol	chirp_get_job_attr		2652777						
ANR	2653492	Symbol	chirp_ulog		2652777						
ANR	2653493	Symbol	chirp_do_stat		2652777						
ANR	2653494	Symbol	* argv		2652777						
ANR	2653495	Symbol	argv		2652777						
ANR	2653496	Symbol	chirp_put		2652777						
ANR	2653497	Symbol	chirp_truncate		2652777						
ANR	2653498	Symbol	chirp_link		2652777						
ANR	2653499	Symbol	chirp_whoami		2652777						
ANR	2653500	Symbol	chirp_whoareyou		2652777						
ANR	2653501	Symbol	chirp_fetch		2652777						
ANR	2653502	Symbol	chirp_readlink		2652777						
ANR	2653503	Symbol	argc		2652777						
ANR	2653504	Symbol	strcmp		2652777						
ANR	2653505	Symbol	errno		2652777						
ANR	2653506	Symbol	chirp_set_job_attr		2652777						
ANR	2653507	Symbol	ret_val		2652777						
ANR	2653508	Symbol	chirp_access		2652777						
ANR	2653509	Symbol	strerror		2652777						
ANR	2653510	Symbol	chirp_remove		2652777						
ANR	2653511	Symbol	chirp_write		2652777						
ANR	2653512	Symbol	chirp_read		2652777						
ANR	2653513	Symbol	chirp_chmod		2652777						
ANR	2653514	Symbol	chirp_rmdir		2652777						
ANR	2653515	Symbol	chirp_chown		2652777						
ANR	2653516	Symbol	chirp_utime		2652777						
