command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	749535	File	data/converged/CVE-2011-4930_htcondor/classad_log.cpp								
ANR	749536	DeclStmt									
ANR	749537	Decl							const char	const char *	EMPTY_CLASSAD_TYPE_NAME
ANR	749538	Function	ClassAdLog :: ClassAdLog	57:0:1711:1916							
ANR	749539	FunctionDef	ClassAdLog :: ClassAdLog ()		749538	0					
ANR	749540	CompoundStatement		58:0:1786:1916	749538	0					
ANR	749541	ExpressionStatement	active_transaction = NULL	59:1:1789:1814	749538	0	True				
ANR	749542	AssignmentExpression	active_transaction = NULL		749538	0		=			
ANR	749543	Identifier	active_transaction		749538	0					
ANR	749544	Identifier	NULL		749538	1					
ANR	749545	ExpressionStatement	log_fp = NULL	60:1:1817:1830	749538	1	True				
ANR	749546	AssignmentExpression	log_fp = NULL		749538	0		=			
ANR	749547	Identifier	log_fp		749538	0					
ANR	749548	Identifier	NULL		749538	1					
ANR	749549	ExpressionStatement	m_nondurable_level = 0	61:1:1833:1855	749538	2	True				
ANR	749550	AssignmentExpression	m_nondurable_level = 0		749538	0		=			
ANR	749551	Identifier	m_nondurable_level		749538	0					
ANR	749552	PrimaryExpression	0		749538	1					
ANR	749553	ExpressionStatement	max_historical_logs = 0	62:1:1858:1881	749538	3	True				
ANR	749554	AssignmentExpression	max_historical_logs = 0		749538	0		=			
ANR	749555	Identifier	max_historical_logs		749538	0					
ANR	749556	PrimaryExpression	0		749538	1					
ANR	749557	ExpressionStatement	historical_sequence_number = 0	63:1:1884:1914	749538	4	True				
ANR	749558	AssignmentExpression	historical_sequence_number = 0		749538	0		=			
ANR	749559	Identifier	historical_sequence_number		749538	0					
ANR	749560	PrimaryExpression	0		749538	1					
ANR	749561	Identifier	ClassAdLog :: ClassAdLog		749538	1					
ANR	749562	ParameterList			749538	2					
ANR	749563	CFGEntryNode	ENTRY		749538		True				
ANR	749564	CFGExitNode	EXIT		749538		True				
ANR	749565	Symbol	log_fp		749538						
ANR	749566	Symbol	NULL		749538						
ANR	749567	Symbol	m_nondurable_level		749538						
ANR	749568	Symbol	max_historical_logs		749538						
ANR	749569	Symbol	active_transaction		749538						
ANR	749570	Symbol	historical_sequence_number		749538						
ANR	749571	Function	ClassAdLog :: ClassAdLog	66:0:1919:5806							
ANR	749572	FunctionDef	"ClassAdLog :: ClassAdLog (const char * filename , int max_historical_logs_arg)"		749571	0					
ANR	749573	CompoundStatement		67:0:2042:5806	749571	0					
ANR	749574	ExpressionStatement	log_filename_buf = filename	68:1:2045:2072	749571	0	True				
ANR	749575	AssignmentExpression	log_filename_buf = filename		749571	0		=			
ANR	749576	Identifier	log_filename_buf		749571	0					
ANR	749577	Identifier	filename		749571	1					
ANR	749578	ExpressionStatement	active_transaction = NULL	69:1:2075:2100	749571	1	True				
ANR	749579	AssignmentExpression	active_transaction = NULL		749571	0		=			
ANR	749580	Identifier	active_transaction		749571	0					
ANR	749581	Identifier	NULL		749571	1					
ANR	749582	ExpressionStatement	m_nondurable_level = 0	70:1:2103:2125	749571	2	True				
ANR	749583	AssignmentExpression	m_nondurable_level = 0		749571	0		=			
ANR	749584	Identifier	m_nondurable_level		749571	0					
ANR	749585	PrimaryExpression	0		749571	1					
ANR	749586	ExpressionStatement	this -> max_historical_logs = max_historical_logs_arg	72:1:2129:2180	749571	3	True				
ANR	749587	AssignmentExpression	this -> max_historical_logs = max_historical_logs_arg		749571	0		=			
ANR	749588	PtrMemberAccess	this -> max_historical_logs		749571	0					
ANR	749589	Identifier	this		749571	0					
ANR	749590	Identifier	max_historical_logs		749571	1					
ANR	749591	Identifier	max_historical_logs_arg		749571	1					
ANR	749592	ExpressionStatement	historical_sequence_number = 1	73:1:2183:2213	749571	4	True				
ANR	749593	AssignmentExpression	historical_sequence_number = 1		749571	0		=			
ANR	749594	Identifier	historical_sequence_number		749571	0					
ANR	749595	PrimaryExpression	1		749571	1					
ANR	749596	ExpressionStatement	m_original_log_birthdate = time ( NULL )	74:1:2216:2253	749571	5	True				
ANR	749597	AssignmentExpression	m_original_log_birthdate = time ( NULL )		749571	0		=			
ANR	749598	Identifier	m_original_log_birthdate		749571	0					
ANR	749599	CallExpression	time ( NULL )		749571	1					
ANR	749600	Callee	time		749571	0					
ANR	749601	Identifier	time		749571	0					
ANR	749602	ArgumentList	NULL		749571	1					
ANR	749603	Argument	NULL		749571	0					
ANR	749604	Identifier	NULL		749571	0					
ANR	749605	IdentifierDeclStatement	"int log_fd = safe_open_wrapper_follow ( logFilename ( ) , O_RDWR | O_CREAT | O_LARGEFILE , 0600 ) ;"	76:1:2257:2347	749571	6	True				
ANR	749606	IdentifierDecl	"log_fd = safe_open_wrapper_follow ( logFilename ( ) , O_RDWR | O_CREAT | O_LARGEFILE , 0600 )"		749571	0					
ANR	749607	IdentifierDeclType	int		749571	0					
ANR	749608	Identifier	log_fd		749571	1					
ANR	749609	AssignmentExpression	"log_fd = safe_open_wrapper_follow ( logFilename ( ) , O_RDWR | O_CREAT | O_LARGEFILE , 0600 )"		749571	2		=			
ANR	749610	Identifier	log_fd		749571	0					
ANR	749611	CallExpression	"safe_open_wrapper_follow ( logFilename ( ) , O_RDWR | O_CREAT | O_LARGEFILE , 0600 )"		749571	1					
ANR	749612	Callee	safe_open_wrapper_follow		749571	0					
ANR	749613	Identifier	safe_open_wrapper_follow		749571	0					
ANR	749614	ArgumentList	logFilename ( )		749571	1					
ANR	749615	Argument	logFilename ( )		749571	0					
ANR	749616	CallExpression	logFilename ( )		749571	0					
ANR	749617	Callee	logFilename		749571	0					
ANR	749618	Identifier	logFilename		749571	0					
ANR	749619	ArgumentList			749571	1					
ANR	749620	Argument	O_RDWR | O_CREAT | O_LARGEFILE		749571	1					
ANR	749621	InclusiveOrExpression	O_RDWR | O_CREAT | O_LARGEFILE		749571	0		|			
ANR	749622	Identifier	O_RDWR		749571	0					
ANR	749623	InclusiveOrExpression	O_CREAT | O_LARGEFILE		749571	1		|			
ANR	749624	Identifier	O_CREAT		749571	0					
ANR	749625	Identifier	O_LARGEFILE		749571	1					
ANR	749626	Argument	0600		749571	2					
ANR	749627	PrimaryExpression	0600		749571	0					
ANR	749628	IfStatement	if ( log_fd < 0 )		749571	7					
ANR	749629	Condition	log_fd < 0	77:5:2354:2363	749571	0	True				
ANR	749630	RelationalExpression	log_fd < 0		749571	0		<			
ANR	749631	Identifier	log_fd		749571	0					
ANR	749632	PrimaryExpression	0		749571	1					
ANR	749633	CompoundStatement		11:17:323:323	749571	1					
ANR	749634	ExpressionStatement	"EXCEPT ( ""failed to open log %s, errno = %d"" , logFilename ( ) , errno )"	78:2:2370:2435	749571	0	True				
ANR	749635	CallExpression	"EXCEPT ( ""failed to open log %s, errno = %d"" , logFilename ( ) , errno )"		749571	0					
ANR	749636	Callee	EXCEPT		749571	0					
ANR	749637	Identifier	EXCEPT		749571	0					
ANR	749638	ArgumentList	"""failed to open log %s, errno = %d"""		749571	1					
ANR	749639	Argument	"""failed to open log %s, errno = %d"""		749571	0					
ANR	749640	PrimaryExpression	"""failed to open log %s, errno = %d"""		749571	0					
ANR	749641	Argument	logFilename ( )		749571	1					
ANR	749642	CallExpression	logFilename ( )		749571	0					
ANR	749643	Callee	logFilename		749571	0					
ANR	749644	Identifier	logFilename		749571	0					
ANR	749645	ArgumentList			749571	1					
ANR	749646	Argument	errno		749571	2					
ANR	749647	Identifier	errno		749571	0					
ANR	749648	ExpressionStatement	"log_fp = fdopen ( log_fd , ""r+"" )"	81:1:2442:2471	749571	8	True				
ANR	749649	AssignmentExpression	"log_fp = fdopen ( log_fd , ""r+"" )"		749571	0		=			
ANR	749650	Identifier	log_fp		749571	0					
ANR	749651	CallExpression	"fdopen ( log_fd , ""r+"" )"		749571	1					
ANR	749652	Callee	fdopen		749571	0					
ANR	749653	Identifier	fdopen		749571	0					
ANR	749654	ArgumentList	log_fd		749571	1					
ANR	749655	Argument	log_fd		749571	0					
ANR	749656	Identifier	log_fd		749571	0					
ANR	749657	Argument	"""r+"""		749571	1					
ANR	749658	PrimaryExpression	"""r+"""		749571	0					
ANR	749659	IfStatement	if ( log_fp == NULL )		749571	9					
ANR	749660	Condition	log_fp == NULL	82:5:2478:2491	749571	0	True				
ANR	749661	EqualityExpression	log_fp == NULL		749571	0		==			
ANR	749662	Identifier	log_fp		749571	0					
ANR	749663	Identifier	NULL		749571	1					
ANR	749664	CompoundStatement		16:21:451:451	749571	1					
ANR	749665	ExpressionStatement	"EXCEPT ( ""failed to fdopen log %s, errno = %d"" , logFilename ( ) , errno )"	83:2:2498:2565	749571	0	True				
ANR	749666	CallExpression	"EXCEPT ( ""failed to fdopen log %s, errno = %d"" , logFilename ( ) , errno )"		749571	0					
ANR	749667	Callee	EXCEPT		749571	0					
ANR	749668	Identifier	EXCEPT		749571	0					
ANR	749669	ArgumentList	"""failed to fdopen log %s, errno = %d"""		749571	1					
ANR	749670	Argument	"""failed to fdopen log %s, errno = %d"""		749571	0					
ANR	749671	PrimaryExpression	"""failed to fdopen log %s, errno = %d"""		749571	0					
ANR	749672	Argument	logFilename ( )		749571	1					
ANR	749673	CallExpression	logFilename ( )		749571	0					
ANR	749674	Callee	logFilename		749571	0					
ANR	749675	Identifier	logFilename		749571	0					
ANR	749676	ArgumentList			749571	1					
ANR	749677	Argument	errno		749571	2					
ANR	749678	Identifier	errno		749571	0					
ANR	749679	IdentifierDeclStatement	LogRecord * log_rec ;	88:1:2605:2624	749571	10	True				
ANR	749680	IdentifierDecl	* log_rec		749571	0					
ANR	749681	IdentifierDeclType	LogRecord *		749571	0					
ANR	749682	Identifier	log_rec		749571	1					
ANR	749683	IdentifierDeclStatement	unsigned long count = 0 ;	89:1:2627:2650	749571	11	True				
ANR	749684	IdentifierDecl	count = 0		749571	0					
ANR	749685	IdentifierDeclType	unsigned long		749571	0					
ANR	749686	Identifier	count		749571	1					
ANR	749687	AssignmentExpression	count = 0		749571	2		=			
ANR	749688	Identifier	count		749571	0					
ANR	749689	PrimaryExpression	0		749571	1					
ANR	749690	IdentifierDeclStatement	bool is_clean = true ;	90:1:2653:2673	749571	12	True				
ANR	749691	IdentifierDecl	is_clean = true		749571	0					
ANR	749692	IdentifierDeclType	bool		749571	0					
ANR	749693	Identifier	is_clean		749571	1					
ANR	749694	AssignmentExpression	is_clean = true		749571	2		=			
ANR	749695	Identifier	true		749571	0					
ANR	749696	Identifier	true		749571	1					
ANR	749697	IdentifierDeclStatement	bool requires_successful_cleaning = false ;	91:1:2728:2769	749571	13	True				
ANR	749698	IdentifierDecl	requires_successful_cleaning = false		749571	0					
ANR	749699	IdentifierDeclType	bool		749571	0					
ANR	749700	Identifier	requires_successful_cleaning		749571	1					
ANR	749701	AssignmentExpression	requires_successful_cleaning = false		749571	2		=			
ANR	749702	Identifier	false		749571	0					
ANR	749703	Identifier	false		749571	1					
ANR	749704	IdentifierDeclStatement	long next_log_entry_pos = 0 ;	92:1:2772:2799	749571	14	True				
ANR	749705	IdentifierDecl	next_log_entry_pos = 0		749571	0					
ANR	749706	IdentifierDeclType	long		749571	0					
ANR	749707	Identifier	next_log_entry_pos		749571	1					
ANR	749708	AssignmentExpression	next_log_entry_pos = 0		749571	2		=			
ANR	749709	Identifier	next_log_entry_pos		749571	0					
ANR	749710	PrimaryExpression	0		749571	1					
ANR	749711	WhileStatement	"while ( ( log_rec = ReadLogEntry ( log_fp , InstantiateLogEntry ) ) != 0 )"		749571	15					
ANR	749712	Condition	"( log_rec = ReadLogEntry ( log_fp , InstantiateLogEntry ) ) != 0"	93:8:2809:2866	749571	0	True				
ANR	749713	EqualityExpression	"( log_rec = ReadLogEntry ( log_fp , InstantiateLogEntry ) ) != 0"		749571	0		!=			
ANR	749714	AssignmentExpression	"log_rec = ReadLogEntry ( log_fp , InstantiateLogEntry )"		749571	0		=			
ANR	749715	Identifier	log_rec		749571	0					
ANR	749716	CallExpression	"ReadLogEntry ( log_fp , InstantiateLogEntry )"		749571	1					
ANR	749717	Callee	ReadLogEntry		749571	0					
ANR	749718	Identifier	ReadLogEntry		749571	0					
ANR	749719	ArgumentList	log_fp		749571	1					
ANR	749720	Argument	log_fp		749571	0					
ANR	749721	Identifier	log_fp		749571	0					
ANR	749722	Argument	InstantiateLogEntry		749571	1					
ANR	749723	Identifier	InstantiateLogEntry		749571	0					
ANR	749724	PrimaryExpression	0		749571	1					
ANR	749725	CompoundStatement		27:68:826:826	749571	1					
ANR	749726	ExpressionStatement	next_log_entry_pos = ftell ( log_fp )	94:2:2873:2907	749571	0	True				
ANR	749727	AssignmentExpression	next_log_entry_pos = ftell ( log_fp )		749571	0		=			
ANR	749728	Identifier	next_log_entry_pos		749571	0					
ANR	749729	CallExpression	ftell ( log_fp )		749571	1					
ANR	749730	Callee	ftell		749571	0					
ANR	749731	Identifier	ftell		749571	0					
ANR	749732	ArgumentList	log_fp		749571	1					
ANR	749733	Argument	log_fp		749571	0					
ANR	749734	Identifier	log_fp		749571	0					
ANR	749735	ExpressionStatement	count ++	95:2:2911:2918	749571	1	True				
ANR	749736	PostIncDecOperationExpression	count ++		749571	0					
ANR	749737	Identifier	count		749571	0					
ANR	749738	IncDec	++		749571	1					
ANR	749739	SwitchStatement	switch ( log_rec -> get_op_type ( ) )		749571	2					
ANR	749740	Condition	log_rec -> get_op_type ( )	96:10:2930:2951	749571	0	True				
ANR	749741	CallExpression	log_rec -> get_op_type ( )		749571	0					
ANR	749742	Callee	log_rec -> get_op_type		749571	0					
ANR	749743	PtrMemberAccess	log_rec -> get_op_type		749571	0					
ANR	749744	Identifier	log_rec		749571	0					
ANR	749745	Identifier	get_op_type		749571	1					
ANR	749746	ArgumentList			749571	1					
ANR	749747	CompoundStatement		30:34:911:911	749571	1					
ANR	749748	Label	case CondorLogOp_BeginTransaction :	97:2:2958:2991	749571	0	True				
ANR	749749	Identifier	CondorLogOp_BeginTransaction		749571	0					
ANR	749750	ExpressionStatement	is_clean = false	100:3:3084:3100	749571	1	True				
ANR	749751	AssignmentExpression	is_clean = false		749571	0		=			
ANR	749752	Identifier	is_clean		749571	0					
ANR	749753	Identifier	false		749571	1					
ANR	749754	IfStatement	if ( active_transaction )		749571	2					
ANR	749755	Condition	active_transaction	101:7:3109:3126	749571	0	True				
ANR	749756	Identifier	active_transaction		749571	0					
ANR	749757	CompoundStatement		35:27:1086:1086	749571	1					
ANR	749758	Statement	dprintf	102:4:3135:3141	749571	0	True				
ANR	749759	Statement	(	102:11:3142:3142	749571	1	True				
ANR	749760	Statement	D_ALWAYS	102:12:3143:3150	749571	2	True				
ANR	749761	Statement	","	102:20:3151:3151	749571	3	True				
ANR	749762	Statement	"""Warning: Encountered nested transactions in %s, """	102:22:3153:3202	749571	4	True				
ANR	749763	Statement	"""log may be bogus..."""	103:6:3210:3230	749571	5	True				
ANR	749764	Statement	","	103:27:3231:3231	749571	6	True				
ANR	749765	Statement	filename	103:29:3233:3240	749571	7	True				
ANR	749766	Statement	)	103:37:3241:3241	749571	8	True				
ANR	749767	ExpressionStatement		103:38:3242:3242	749571	9	True				
ANR	749768	ElseStatement	else		749571	0					
ANR	749769	CompoundStatement		38:10:1211:1211	749571	0					
ANR	749770	ExpressionStatement	active_transaction = new Transaction ( )	105:4:3260:3298	749571	0	True				
ANR	749771	AssignmentExpression	active_transaction = new Transaction ( )		749571	0		=			
ANR	749772	Identifier	active_transaction		749571	0					
ANR	749773	UnaryExpression	new Transaction ( )		749571	1					
ANR	749774	Statement	delete	107:3:3308:3313	749571	3	True				
ANR	749775	ExpressionStatement	log_rec	107:10:3315:3322	749571	4	True				
ANR	749776	Identifier	log_rec		749571	0					
ANR	749777	BreakStatement	break ;	108:3:3327:3332	749571	5	True				
ANR	749778	Label	case CondorLogOp_EndTransaction :	109:2:3336:3367	749571	6	True				
ANR	749779	Identifier	CondorLogOp_EndTransaction		749571	0					
ANR	749780	IfStatement	if ( ! active_transaction )		749571	7					
ANR	749781	Condition	! active_transaction	110:7:3376:3394	749571	0	True				
ANR	749782	UnaryOperationExpression	! active_transaction		749571	0					
ANR	749783	UnaryOperator	!		749571	0					
ANR	749784	Identifier	active_transaction		749571	1					
ANR	749785	CompoundStatement		44:28:1354:1354	749571	1					
ANR	749786	Statement	dprintf	111:4:3403:3409	749571	0	True				
ANR	749787	Statement	(	111:11:3410:3410	749571	1	True				
ANR	749788	Statement	D_ALWAYS	111:12:3411:3418	749571	2	True				
ANR	749789	Statement	","	111:20:3419:3419	749571	3	True				
ANR	749790	Statement	"""Warning: Encountered unmatched end transaction in %s, """	111:22:3421:3476	749571	4	True				
ANR	749791	Statement	"""log may be bogus..."""	112:6:3484:3504	749571	5	True				
ANR	749792	Statement	","	112:27:3505:3505	749571	6	True				
ANR	749793	Statement	filename	112:29:3507:3514	749571	7	True				
ANR	749794	Statement	)	112:37:3515:3515	749571	8	True				
ANR	749795	ExpressionStatement		112:38:3516:3516	749571	9	True				
ANR	749796	ElseStatement	else		749571	0					
ANR	749797	CompoundStatement		47:10:1485:1485	749571	0					
ANR	749798	ExpressionStatement	"active_transaction -> Commit ( NULL , ( void * ) & table )"	114:4:3534:3582	749571	0	True				
ANR	749799	CallExpression	"active_transaction -> Commit ( NULL , ( void * ) & table )"		749571	0					
ANR	749800	Callee	active_transaction -> Commit		749571	0					
ANR	749801	PtrMemberAccess	active_transaction -> Commit		749571	0					
ANR	749802	Identifier	active_transaction		749571	0					
ANR	749803	Identifier	Commit		749571	1					
ANR	749804	ArgumentList	NULL		749571	1					
ANR	749805	Argument	NULL		749571	0					
ANR	749806	Identifier	NULL		749571	0					
ANR	749807	Argument	( void * ) & table		749571	1					
ANR	749808	CastExpression	( void * ) & table		749571	0					
ANR	749809	CastTarget	void *		749571	0					
ANR	749810	UnaryOperationExpression	& table		749571	1					
ANR	749811	UnaryOperator	&		749571	0					
ANR	749812	Identifier	table		749571	1					
ANR	749813	Statement	delete	115:4:3613:3618	749571	1	True				
ANR	749814	ExpressionStatement	active_transaction	115:11:3620:3638	749571	2	True				
ANR	749815	Identifier	active_transaction		749571	0					
ANR	749816	ExpressionStatement	active_transaction = NULL	116:4:3644:3669	749571	3	True				
ANR	749817	AssignmentExpression	active_transaction = NULL		749571	0		=			
ANR	749818	Identifier	active_transaction		749571	0					
ANR	749819	Identifier	NULL		749571	1					
ANR	749820	Statement	delete	118:3:3679:3684	749571	8	True				
ANR	749821	ExpressionStatement	log_rec	118:10:3686:3693	749571	9	True				
ANR	749822	Identifier	log_rec		749571	0					
ANR	749823	BreakStatement	break ;	119:3:3698:3703	749571	10	True				
ANR	749824	Label	case CondorLogOp_LogHistoricalSequenceNumber :	120:2:3707:3751	749571	11	True				
ANR	749825	Identifier	CondorLogOp_LogHistoricalSequenceNumber		749571	0					
ANR	749826	IfStatement	if ( count != 1 )		749571	12					
ANR	749827	Condition	count != 1	121:6:3759:3768	749571	0	True				
ANR	749828	EqualityExpression	count != 1		749571	0		!=			
ANR	749829	Identifier	count		749571	0					
ANR	749830	PrimaryExpression	1		749571	1					
ANR	749831	CompoundStatement		55:18:1728:1728	749571	1					
ANR	749832	ExpressionStatement	"dprintf ( D_ALWAYS , ""Warning: Encountered historical sequence number after first log entry (entry number = %ld)\\n"" , count )"	122:4:3777:3896	749571	0	True				
ANR	749833	CallExpression	"dprintf ( D_ALWAYS , ""Warning: Encountered historical sequence number after first log entry (entry number = %ld)\\n"" , count )"		749571	0					
ANR	749834	Callee	dprintf		749571	0					
ANR	749835	Identifier	dprintf		749571	0					
ANR	749836	ArgumentList	D_ALWAYS		749571	1					
ANR	749837	Argument	D_ALWAYS		749571	0					
ANR	749838	Identifier	D_ALWAYS		749571	0					
ANR	749839	Argument	"""Warning: Encountered historical sequence number after first log entry (entry number = %ld)\\n"""		749571	1					
ANR	749840	PrimaryExpression	"""Warning: Encountered historical sequence number after first log entry (entry number = %ld)\\n"""		749571	0					
ANR	749841	Argument	count		749571	2					
ANR	749842	Identifier	count		749571	0					
ANR	749843	ExpressionStatement	historical_sequence_number = ( ( LogHistoricalSequenceNumber * ) log_rec ) -> get_historical_sequence_number ( )	124:3:3906:4009	749571	13	True				
ANR	749844	AssignmentExpression	historical_sequence_number = ( ( LogHistoricalSequenceNumber * ) log_rec ) -> get_historical_sequence_number ( )		749571	0		=			
ANR	749845	Identifier	historical_sequence_number		749571	0					
ANR	749846	CallExpression	( ( LogHistoricalSequenceNumber * ) log_rec ) -> get_historical_sequence_number ( )		749571	1					
ANR	749847	Callee	( ( LogHistoricalSequenceNumber * ) log_rec ) -> get_historical_sequence_number		749571	0					
ANR	749848	PtrMemberAccess	( ( LogHistoricalSequenceNumber * ) log_rec ) -> get_historical_sequence_number		749571	0					
ANR	749849	CastExpression	( LogHistoricalSequenceNumber * ) log_rec		749571	0					
ANR	749850	CastTarget	LogHistoricalSequenceNumber *		749571	0					
ANR	749851	Identifier	log_rec		749571	1					
ANR	749852	Identifier	get_historical_sequence_number		749571	1					
ANR	749853	ArgumentList			749571	1					
ANR	749854	ExpressionStatement	m_original_log_birthdate = ( ( LogHistoricalSequenceNumber * ) log_rec ) -> get_timestamp ( )	125:3:4014:4098	749571	14	True				
ANR	749855	AssignmentExpression	m_original_log_birthdate = ( ( LogHistoricalSequenceNumber * ) log_rec ) -> get_timestamp ( )		749571	0		=			
ANR	749856	Identifier	m_original_log_birthdate		749571	0					
ANR	749857	CallExpression	( ( LogHistoricalSequenceNumber * ) log_rec ) -> get_timestamp ( )		749571	1					
ANR	749858	Callee	( ( LogHistoricalSequenceNumber * ) log_rec ) -> get_timestamp		749571	0					
ANR	749859	PtrMemberAccess	( ( LogHistoricalSequenceNumber * ) log_rec ) -> get_timestamp		749571	0					
ANR	749860	CastExpression	( LogHistoricalSequenceNumber * ) log_rec		749571	0					
ANR	749861	CastTarget	LogHistoricalSequenceNumber *		749571	0					
ANR	749862	Identifier	log_rec		749571	1					
ANR	749863	Identifier	get_timestamp		749571	1					
ANR	749864	ArgumentList			749571	1					
ANR	749865	Statement	delete	126:3:4103:4108	749571	15	True				
ANR	749866	ExpressionStatement	log_rec	126:10:4110:4117	749571	16	True				
ANR	749867	Identifier	log_rec		749571	0					
ANR	749868	BreakStatement	break ;	127:3:4122:4127	749571	17	True				
ANR	749869	Label	default :	128:2:4131:4138	749571	18	True				
ANR	749870	Identifier	default		749571	0					
ANR	749871	IfStatement	if ( active_transaction )		749571	19					
ANR	749872	Condition	active_transaction	129:7:4147:4164	749571	0	True				
ANR	749873	Identifier	active_transaction		749571	0					
ANR	749874	CompoundStatement		63:27:2124:2124	749571	1					
ANR	749875	ExpressionStatement	active_transaction -> AppendLog ( log_rec )	130:4:4173:4211	749571	0	True				
ANR	749876	CallExpression	active_transaction -> AppendLog ( log_rec )		749571	0					
ANR	749877	Callee	active_transaction -> AppendLog		749571	0					
ANR	749878	PtrMemberAccess	active_transaction -> AppendLog		749571	0					
ANR	749879	Identifier	active_transaction		749571	0					
ANR	749880	Identifier	AppendLog		749571	1					
ANR	749881	ArgumentList	log_rec		749571	1					
ANR	749882	Argument	log_rec		749571	0					
ANR	749883	Identifier	log_rec		749571	0					
ANR	749884	ElseStatement	else		749571	0					
ANR	749885	CompoundStatement		65:10:2180:2180	749571	0					
ANR	749886	ExpressionStatement	log_rec -> Play ( ( void * ) & table )	132:4:4229:4258	749571	0	True				
ANR	749887	CallExpression	log_rec -> Play ( ( void * ) & table )		749571	0					
ANR	749888	Callee	log_rec -> Play		749571	0					
ANR	749889	PtrMemberAccess	log_rec -> Play		749571	0					
ANR	749890	Identifier	log_rec		749571	0					
ANR	749891	Identifier	Play		749571	1					
ANR	749892	ArgumentList	( void * ) & table		749571	1					
ANR	749893	Argument	( void * ) & table		749571	0					
ANR	749894	CastExpression	( void * ) & table		749571	0					
ANR	749895	CastTarget	void *		749571	0					
ANR	749896	UnaryOperationExpression	& table		749571	1					
ANR	749897	UnaryOperator	&		749571	0					
ANR	749898	Identifier	table		749571	1					
ANR	749899	Statement	delete	133:4:4264:4269	749571	1	True				
ANR	749900	ExpressionStatement	log_rec	133:11:4271:4278	749571	2	True				
ANR	749901	Identifier	log_rec		749571	0					
ANR	749902	IdentifierDeclStatement	long final_log_entry_pos = ftell ( log_fp ) ;	137:1:4293:4333	749571	16	True				
ANR	749903	IdentifierDecl	final_log_entry_pos = ftell ( log_fp )		749571	0					
ANR	749904	IdentifierDeclType	long		749571	0					
ANR	749905	Identifier	final_log_entry_pos		749571	1					
ANR	749906	AssignmentExpression	final_log_entry_pos = ftell ( log_fp )		749571	2		=			
ANR	749907	Identifier	final_log_entry_pos		749571	0					
ANR	749908	CallExpression	ftell ( log_fp )		749571	1					
ANR	749909	Callee	ftell		749571	0					
ANR	749910	Identifier	ftell		749571	0					
ANR	749911	ArgumentList	log_fp		749571	1					
ANR	749912	Argument	log_fp		749571	0					
ANR	749913	Identifier	log_fp		749571	0					
ANR	749914	IfStatement	if ( next_log_entry_pos != final_log_entry_pos )		749571	17					
ANR	749915	Condition	next_log_entry_pos != final_log_entry_pos	138:5:4340:4380	749571	0	True				
ANR	749916	EqualityExpression	next_log_entry_pos != final_log_entry_pos		749571	0		!=			
ANR	749917	Identifier	next_log_entry_pos		749571	0					
ANR	749918	Identifier	final_log_entry_pos		749571	1					
ANR	749919	CompoundStatement		72:49:2341:2341	749571	1					
ANR	749920	Statement	dprintf	146:2:4832:4838	749571	0	True				
ANR	749921	Statement	(	146:9:4839:4839	749571	1	True				
ANR	749922	Statement	D_ALWAYS	146:10:4840:4847	749571	2	True				
ANR	749923	Statement	","	146:18:4848:4848	749571	3	True				
ANR	749924	Statement	"""Detected unterminated log entry in ClassAd Log %s."""	146:19:4849:4900	749571	4	True				
ANR	749925	Statement	""" Forcing rotation.\\n"""	147:4:4906:4927	749571	5	True				
ANR	749926	Statement	","	147:26:4928:4928	749571	6	True				
ANR	749927	Statement	logFilename	147:28:4930:4940	749571	7	True				
ANR	749928	Statement	(	147:39:4941:4941	749571	8	True				
ANR	749929	Statement	)	147:40:4942:4942	749571	9	True				
ANR	749930	Statement	)	147:41:4943:4943	749571	10	True				
ANR	749931	ExpressionStatement		147:42:4944:4944	749571	11	True				
ANR	749932	ExpressionStatement	requires_successful_cleaning = true	148:2:4948:4983	749571	12	True				
ANR	749933	AssignmentExpression	requires_successful_cleaning = true		749571	0		=			
ANR	749934	Identifier	requires_successful_cleaning		749571	0					
ANR	749935	Identifier	true		749571	1					
ANR	749936	IfStatement	if ( active_transaction )		749571	18					
ANR	749937	Condition	active_transaction	150:5:4993:5010	749571	0	True				
ANR	749938	Identifier	active_transaction		749571	0					
ANR	749939	CompoundStatement		84:25:2970:2970	749571	1					
ANR	749940	Statement	delete	151:2:5049:5054	749571	0	True				
ANR	749941	ExpressionStatement	active_transaction	151:9:5056:5074	749571	1	True				
ANR	749942	Identifier	active_transaction		749571	0					
ANR	749943	ExpressionStatement	active_transaction = NULL	152:2:5078:5103	749571	2	True				
ANR	749944	AssignmentExpression	active_transaction = NULL		749571	0		=			
ANR	749945	Identifier	active_transaction		749571	0					
ANR	749946	Identifier	NULL		749571	1					
ANR	749947	IfStatement	if ( ! requires_successful_cleaning )		749571	3					
ANR	749948	Condition	! requires_successful_cleaning	154:6:5112:5140	749571	0	True				
ANR	749949	UnaryOperationExpression	! requires_successful_cleaning		749571	0					
ANR	749950	UnaryOperator	!		749571	0					
ANR	749951	Identifier	requires_successful_cleaning		749571	1					
ANR	749952	CompoundStatement		88:38:3101:3101	749571	1					
ANR	749953	Statement	dprintf	157:3:5242:5248	749571	0	True				
ANR	749954	Statement	(	157:10:5249:5249	749571	1	True				
ANR	749955	Statement	D_ALWAYS	157:11:5250:5257	749571	2	True				
ANR	749956	Statement	","	157:19:5258:5258	749571	3	True				
ANR	749957	Statement	"""Detected unterminated transaction in ClassAd Log"""	157:20:5259:5308	749571	4	True				
ANR	749958	Statement	"""%s. Forcing rotation.\\n"""	158:5:5315:5339	749571	5	True				
ANR	749959	Statement	","	158:30:5340:5340	749571	6	True				
ANR	749960	Statement	logFilename	158:32:5342:5352	749571	7	True				
ANR	749961	Statement	(	158:43:5353:5353	749571	8	True				
ANR	749962	Statement	)	158:44:5354:5354	749571	9	True				
ANR	749963	Statement	)	158:45:5355:5355	749571	10	True				
ANR	749964	ExpressionStatement		158:46:5356:5356	749571	11	True				
ANR	749965	ExpressionStatement	requires_successful_cleaning = true	159:3:5361:5396	749571	12	True				
ANR	749966	AssignmentExpression	requires_successful_cleaning = true		749571	0		=			
ANR	749967	Identifier	requires_successful_cleaning		749571	0					
ANR	749968	Identifier	true		749571	1					
ANR	749969	IfStatement	if ( ! count )		749571	19					
ANR	749970	Condition	! count	162:4:5409:5414	749571	0	True				
ANR	749971	UnaryOperationExpression	! count		749571	0					
ANR	749972	UnaryOperator	!		749571	0					
ANR	749973	Identifier	count		749571	1					
ANR	749974	CompoundStatement		96:12:3374:3374	749571	1					
ANR	749975	ExpressionStatement	"log_rec = new LogHistoricalSequenceNumber ( historical_sequence_number , m_original_log_birthdate )"	163:2:5421:5518	749571	0	True				
ANR	749976	AssignmentExpression	"log_rec = new LogHistoricalSequenceNumber ( historical_sequence_number , m_original_log_birthdate )"		749571	0		=			
ANR	749977	Identifier	log_rec		749571	0					
ANR	749978	Expression	"historical_sequence_number , m_original_log_birthdate"		749571	1					
ANR	749979	Identifier	historical_sequence_number		749571	0					
ANR	749980	Identifier	m_original_log_birthdate		749571	1					
ANR	749981	IfStatement	if ( log_rec -> Write ( log_fp ) < 0 )		749571	1					
ANR	749982	Condition	log_rec -> Write ( log_fp ) < 0	164:6:5526:5551	749571	0	True				
ANR	749983	RelationalExpression	log_rec -> Write ( log_fp ) < 0		749571	0		<			
ANR	749984	CallExpression	log_rec -> Write ( log_fp )		749571	0					
ANR	749985	Callee	log_rec -> Write		749571	0					
ANR	749986	PtrMemberAccess	log_rec -> Write		749571	0					
ANR	749987	Identifier	log_rec		749571	0					
ANR	749988	Identifier	Write		749571	1					
ANR	749989	ArgumentList	log_fp		749571	1					
ANR	749990	Argument	log_fp		749571	0					
ANR	749991	Identifier	log_fp		749571	0					
ANR	749992	PrimaryExpression	0		749571	1					
ANR	749993	CompoundStatement		98:34:3511:3511	749571	1					
ANR	749994	ExpressionStatement	"EXCEPT ( ""write to %s failed, errno = %d"" , logFilename ( ) , errno )"	165:3:5559:5621	749571	0	True				
ANR	749995	CallExpression	"EXCEPT ( ""write to %s failed, errno = %d"" , logFilename ( ) , errno )"		749571	0					
ANR	749996	Callee	EXCEPT		749571	0					
ANR	749997	Identifier	EXCEPT		749571	0					
ANR	749998	ArgumentList	"""write to %s failed, errno = %d"""		749571	1					
ANR	749999	Argument	"""write to %s failed, errno = %d"""		749571	0					
ANR	750000	PrimaryExpression	"""write to %s failed, errno = %d"""		749571	0					
ANR	750001	Argument	logFilename ( )		749571	1					
ANR	750002	CallExpression	logFilename ( )		749571	0					
ANR	750003	Callee	logFilename		749571	0					
ANR	750004	Identifier	logFilename		749571	0					
ANR	750005	ArgumentList			749571	1					
ANR	750006	Argument	errno		749571	2					
ANR	750007	Identifier	errno		749571	0					
ANR	750008	IfStatement	if ( ! is_clean || requires_successful_cleaning )		749571	20					
ANR	750009	Condition	! is_clean || requires_successful_cleaning	168:5:5635:5675	749571	0	True				
ANR	750010	OrExpression	! is_clean || requires_successful_cleaning		749571	0		||			
ANR	750011	UnaryOperationExpression	! is_clean		749571	0					
ANR	750012	UnaryOperator	!		749571	0					
ANR	750013	Identifier	is_clean		749571	1					
ANR	750014	Identifier	requires_successful_cleaning		749571	1					
ANR	750015	CompoundStatement		102:49:3636:3636	749571	1					
ANR	750016	IfStatement	if ( ! TruncLog ( ) && requires_successful_cleaning )		749571	0					
ANR	750017	Condition	! TruncLog ( ) && requires_successful_cleaning	169:6:5687:5729	749571	0	True				
ANR	750018	AndExpression	! TruncLog ( ) && requires_successful_cleaning		749571	0		&&			
ANR	750019	UnaryOperationExpression	! TruncLog ( )		749571	0					
ANR	750020	UnaryOperator	!		749571	0					
ANR	750021	CallExpression	TruncLog ( )		749571	1					
ANR	750022	Callee	TruncLog		749571	0					
ANR	750023	Identifier	TruncLog		749571	0					
ANR	750024	ArgumentList			749571	1					
ANR	750025	Identifier	requires_successful_cleaning		749571	1					
ANR	750026	CompoundStatement		103:52:3690:3690	749571	1					
ANR	750027	ExpressionStatement	"EXCEPT ( ""Failed to rotate ClassAd log %s.\\n"" , logFilename ( ) )"	170:3:5738:5797	749571	0	True				
ANR	750028	CallExpression	"EXCEPT ( ""Failed to rotate ClassAd log %s.\\n"" , logFilename ( ) )"		749571	0					
ANR	750029	Callee	EXCEPT		749571	0					
ANR	750030	Identifier	EXCEPT		749571	0					
ANR	750031	ArgumentList	"""Failed to rotate ClassAd log %s.\\n"""		749571	1					
ANR	750032	Argument	"""Failed to rotate ClassAd log %s.\\n"""		749571	0					
ANR	750033	PrimaryExpression	"""Failed to rotate ClassAd log %s.\\n"""		749571	0					
ANR	750034	Argument	logFilename ( )		749571	1					
ANR	750035	CallExpression	logFilename ( )		749571	0					
ANR	750036	Callee	logFilename		749571	0					
ANR	750037	Identifier	logFilename		749571	0					
ANR	750038	ArgumentList			749571	1					
ANR	750039	Identifier	ClassAdLog :: ClassAdLog		749571	1					
ANR	750040	ParameterList	"const char * filename , int max_historical_logs_arg"		749571	2					
ANR	750041	Parameter	const char * filename	66:23:1942:1961	749571	0	True				
ANR	750042	ParameterType	const char *		749571	0					
ANR	750043	Identifier	filename		749571	1					
ANR	750044	Parameter	int max_historical_logs_arg	66:44:1963:1989	749571	1	True				
ANR	750045	ParameterType	int		749571	0					
ANR	750046	Identifier	max_historical_logs_arg		749571	1					
ANR	750047	CFGEntryNode	ENTRY		749571		True				
ANR	750048	CFGExitNode	EXIT		749571		True				
ANR	750049	Symbol	( ( LogHistoricalSequenceNumber * ) log_rec ) -> get_timestamp		749571						
ANR	750050	Symbol	logFilename		749571						
ANR	750051	Symbol	O_LARGEFILE		749571						
ANR	750052	Symbol	safe_open_wrapper_follow		749571						
ANR	750053	Symbol	log_filename_buf		749571						
ANR	750054	Symbol	ReadLogEntry		749571						
ANR	750055	Symbol	ftell		749571						
ANR	750056	Symbol	O_CREAT		749571						
ANR	750057	Symbol	m_original_log_birthdate		749571						
ANR	750058	Symbol	fdopen		749571						
ANR	750059	Symbol	& table		749571						
ANR	750060	Symbol	log_fd		749571						
ANR	750061	Symbol	InstantiateLogEntry		749571						
ANR	750062	Symbol	O_RDWR		749571						
ANR	750063	Symbol	next_log_entry_pos		749571						
ANR	750064	Symbol	requires_successful_cleaning		749571						
ANR	750065	Symbol	TruncLog		749571						
ANR	750066	Symbol	m_nondurable_level		749571						
ANR	750067	Symbol	* log_rec		749571						
ANR	750068	Symbol	final_log_entry_pos		749571						
ANR	750069	Symbol	errno		749571						
ANR	750070	Symbol	NULL		749571						
ANR	750071	Symbol	( ( LogHistoricalSequenceNumber * ) log_rec ) -> get_historical_sequence_number		749571						
ANR	750072	Symbol	this		749571						
ANR	750073	Symbol	count		749571						
ANR	750074	Symbol	false		749571						
ANR	750075	Symbol	D_ALWAYS		749571						
ANR	750076	Symbol	active_transaction		749571						
ANR	750077	Symbol	log_rec -> get_op_type		749571						
ANR	750078	Symbol	* this		749571						
ANR	750079	Symbol	log_fp		749571						
ANR	750080	Symbol	filename		749571						
ANR	750081	Symbol	log_rec		749571						
ANR	750082	Symbol	max_historical_logs_arg		749571						
ANR	750083	Symbol	true		749571						
ANR	750084	Symbol	this -> max_historical_logs		749571						
ANR	750085	Symbol	time		749571						
ANR	750086	Symbol	historical_sequence_number		749571						
ANR	750087	Symbol	is_clean		749571						
ANR	750088	Symbol	log_rec -> Write		749571						
ANR	750089	Function	ClassAdLog :: ~ClassAdLog	175:0:5809:6104							
ANR	750090	FunctionDef	ClassAdLog :: ~ClassAdLog ()		750089	0					
ANR	750091	CompoundStatement		176:0:5835:6104	750089	0					
ANR	750092	IfStatement	if ( active_transaction )		750089	0					
ANR	750093	Condition	active_transaction	177:5:5842:5859	750089	0	True				
ANR	750094	Identifier	active_transaction		750089	0					
ANR	750095	Statement	delete	177:25:5862:5867	750089	1	True				
ANR	750096	ExpressionStatement	active_transaction	177:32:5869:5887	750089	1	True				
ANR	750097	Identifier	active_transaction		750089	0					
ANR	750098	ExpressionStatement	table . startIterations ( )	181:1:5996:6019	750089	2	True				
ANR	750099	CallExpression	table . startIterations ( )		750089	0					
ANR	750100	Callee	table . startIterations		750089	0					
ANR	750101	MemberAccess	table . startIterations		750089	0					
ANR	750102	Identifier	table		750089	0					
ANR	750103	Identifier	startIterations		750089	1					
ANR	750104	ArgumentList			750089	1					
ANR	750105	IdentifierDeclStatement	ClassAd * ad ;	182:1:6022:6033	750089	3	True				
ANR	750106	IdentifierDecl	* ad		750089	0					
ANR	750107	IdentifierDeclType	ClassAd *		750089	0					
ANR	750108	Identifier	ad		750089	1					
ANR	750109	IdentifierDeclStatement	HashKey key ;	183:1:6036:6047	750089	4	True				
ANR	750110	IdentifierDecl	key		750089	0					
ANR	750111	IdentifierDeclType	HashKey		750089	0					
ANR	750112	Identifier	key		750089	1					
ANR	750113	WhileStatement	"while ( table . iterate ( key , ad ) == 1 )"		750089	5					
ANR	750114	Condition	"table . iterate ( key , ad ) == 1"	184:8:6057:6083	750089	0	True				
ANR	750115	EqualityExpression	"table . iterate ( key , ad ) == 1"		750089	0		==			
ANR	750116	CallExpression	"table . iterate ( key , ad )"		750089	0					
ANR	750117	Callee	table . iterate		750089	0					
ANR	750118	MemberAccess	table . iterate		750089	0					
ANR	750119	Identifier	table		750089	0					
ANR	750120	Identifier	iterate		750089	1					
ANR	750121	ArgumentList	key		750089	1					
ANR	750122	Argument	key		750089	0					
ANR	750123	Identifier	key		750089	0					
ANR	750124	Argument	ad		750089	1					
ANR	750125	Identifier	ad		750089	0					
ANR	750126	PrimaryExpression	1		750089	1					
ANR	750127	CompoundStatement		9:37:250:250	750089	1					
ANR	750128	Statement	delete	185:2:6090:6095	750089	0	True				
ANR	750129	ExpressionStatement	ad	185:9:6097:6099	750089	1	True				
ANR	750130	Identifier	ad		750089	0					
ANR	750131	Identifier	ClassAdLog :: ~ClassAdLog		750089	1					
ANR	750132	ParameterList			750089	2					
ANR	750133	CFGEntryNode	ENTRY		750089		True				
ANR	750134	CFGExitNode	EXIT		750089		True				
ANR	750135	Symbol	ad		750089						
ANR	750136	Symbol	table . iterate		750089						
ANR	750137	Symbol	active_transaction		750089						
ANR	750138	Symbol	table		750089						
ANR	750139	Symbol	key		750089						
ANR	750140	Function	ClassAdLog :: AppendLog	188:0:6106:6929							
ANR	750141	FunctionDef	ClassAdLog :: AppendLog (LogRecord * log)		750140	0					
ANR	750142	CompoundStatement		190:0:6149:6929	750140	0					
ANR	750143	IfStatement	if ( active_transaction )		750140	0					
ANR	750144	Condition	active_transaction	191:5:6156:6173	750140	0	True				
ANR	750145	Identifier	active_transaction		750140	0					
ANR	750146	CompoundStatement		2:25:26:26	750140	1					
ANR	750147	IfStatement	if ( active_transaction -> EmptyTransaction ( ) )		750140	0					
ANR	750148	Condition	active_transaction -> EmptyTransaction ( )	192:6:6184:6221	750140	0	True				
ANR	750149	CallExpression	active_transaction -> EmptyTransaction ( )		750140	0					
ANR	750150	Callee	active_transaction -> EmptyTransaction		750140	0					
ANR	750151	PtrMemberAccess	active_transaction -> EmptyTransaction		750140	0					
ANR	750152	Identifier	active_transaction		750140	0					
ANR	750153	Identifier	EmptyTransaction		750140	1					
ANR	750154	ArgumentList			750140	1					
ANR	750155	CompoundStatement		3:46:74:74	750140	1					
ANR	750156	Statement	LogBeginTransaction	193:3:6229:6247	750140	0	True				
ANR	750157	Statement	*	193:23:6249:6249	750140	1	True				
ANR	750158	Statement	l	193:24:6250:6250	750140	2	True				
ANR	750159	Statement	=	193:26:6252:6252	750140	3	True				
ANR	750160	Statement	new	193:28:6254:6256	750140	4	True				
ANR	750161	ExpressionStatement	LogBeginTransaction	193:32:6258:6277	750140	5	True				
ANR	750162	Identifier	LogBeginTransaction		750140	0					
ANR	750163	ExpressionStatement	active_transaction -> AppendLog ( l )	194:3:6282:6314	750140	6	True				
ANR	750164	CallExpression	active_transaction -> AppendLog ( l )		750140	0					
ANR	750165	Callee	active_transaction -> AppendLog		750140	0					
ANR	750166	PtrMemberAccess	active_transaction -> AppendLog		750140	0					
ANR	750167	Identifier	active_transaction		750140	0					
ANR	750168	Identifier	AppendLog		750140	1					
ANR	750169	ArgumentList	l		750140	1					
ANR	750170	Argument	l		750140	0					
ANR	750171	Identifier	l		750140	0					
ANR	750172	ExpressionStatement	active_transaction -> AppendLog ( log )	196:2:6322:6356	750140	1	True				
ANR	750173	CallExpression	active_transaction -> AppendLog ( log )		750140	0					
ANR	750174	Callee	active_transaction -> AppendLog		750140	0					
ANR	750175	PtrMemberAccess	active_transaction -> AppendLog		750140	0					
ANR	750176	Identifier	active_transaction		750140	0					
ANR	750177	Identifier	AppendLog		750140	1					
ANR	750178	ArgumentList	log		750140	1					
ANR	750179	Argument	log		750140	0					
ANR	750180	Identifier	log		750140	0					
ANR	750181	ElseStatement	else		750140	0					
ANR	750182	CompoundStatement		8:8:216:216	750140	0					
ANR	750183	IfStatement	if ( log_fp != NULL )		750140	0					
ANR	750184	Condition	log_fp != NULL	199:6:6402:6413	750140	0	True				
ANR	750185	EqualityExpression	log_fp != NULL		750140	0		!=			
ANR	750186	Identifier	log_fp		750140	0					
ANR	750187	Identifier	NULL		750140	1					
ANR	750188	CompoundStatement		10:20:266:266	750140	1					
ANR	750189	IfStatement	if ( log -> Write ( log_fp ) < 0 )		750140	0					
ANR	750190	Condition	log -> Write ( log_fp ) < 0	200:7:6425:6446	750140	0	True				
ANR	750191	RelationalExpression	log -> Write ( log_fp ) < 0		750140	0		<			
ANR	750192	CallExpression	log -> Write ( log_fp )		750140	0					
ANR	750193	Callee	log -> Write		750140	0					
ANR	750194	PtrMemberAccess	log -> Write		750140	0					
ANR	750195	Identifier	log		750140	0					
ANR	750196	Identifier	Write		750140	1					
ANR	750197	ArgumentList	log_fp		750140	1					
ANR	750198	Argument	log_fp		750140	0					
ANR	750199	Identifier	log_fp		750140	0					
ANR	750200	PrimaryExpression	0		750140	1					
ANR	750201	CompoundStatement		11:31:299:299	750140	1					
ANR	750202	ExpressionStatement	"EXCEPT ( ""write to %s failed, errno = %d"" , logFilename ( ) , errno )"	201:4:6455:6517	750140	0	True				
ANR	750203	CallExpression	"EXCEPT ( ""write to %s failed, errno = %d"" , logFilename ( ) , errno )"		750140	0					
ANR	750204	Callee	EXCEPT		750140	0					
ANR	750205	Identifier	EXCEPT		750140	0					
ANR	750206	ArgumentList	"""write to %s failed, errno = %d"""		750140	1					
ANR	750207	Argument	"""write to %s failed, errno = %d"""		750140	0					
ANR	750208	PrimaryExpression	"""write to %s failed, errno = %d"""		750140	0					
ANR	750209	Argument	logFilename ( )		750140	1					
ANR	750210	CallExpression	logFilename ( )		750140	0					
ANR	750211	Callee	logFilename		750140	0					
ANR	750212	Identifier	logFilename		750140	0					
ANR	750213	ArgumentList			750140	1					
ANR	750214	Argument	errno		750140	2					
ANR	750215	Identifier	errno		750140	0					
ANR	750216	IfStatement	if ( m_nondurable_level == 0 )		750140	1					
ANR	750217	Condition	m_nondurable_level == 0	203:7:6531:6553	750140	0	True				
ANR	750218	EqualityExpression	m_nondurable_level == 0		750140	0		==			
ANR	750219	Identifier	m_nondurable_level		750140	0					
ANR	750220	PrimaryExpression	0		750140	1					
ANR	750221	CompoundStatement		14:33:407:407	750140	1					
ANR	750222	IfStatement	if ( fflush ( log_fp ) != 0 )		750140	0					
ANR	750223	Condition	fflush ( log_fp ) != 0	205:8:6616:6633	750140	0	True				
ANR	750224	EqualityExpression	fflush ( log_fp ) != 0		750140	0		!=			
ANR	750225	CallExpression	fflush ( log_fp )		750140	0					
ANR	750226	Callee	fflush		750140	0					
ANR	750227	Identifier	fflush		750140	0					
ANR	750228	ArgumentList	log_fp		750140	1					
ANR	750229	Argument	log_fp		750140	0					
ANR	750230	Identifier	log_fp		750140	0					
ANR	750231	PrimaryExpression	0		750140	1					
ANR	750232	CompoundStatement		16:27:485:485	750140	1					
ANR	750233	ExpressionStatement	"EXCEPT ( ""flush to %s failed, errno = %d"" , logFilename ( ) , errno )"	206:5:6642:6704	750140	0	True				
ANR	750234	CallExpression	"EXCEPT ( ""flush to %s failed, errno = %d"" , logFilename ( ) , errno )"		750140	0					
ANR	750235	Callee	EXCEPT		750140	0					
ANR	750236	Identifier	EXCEPT		750140	0					
ANR	750237	ArgumentList	"""flush to %s failed, errno = %d"""		750140	1					
ANR	750238	Argument	"""flush to %s failed, errno = %d"""		750140	0					
ANR	750239	PrimaryExpression	"""flush to %s failed, errno = %d"""		750140	0					
ANR	750240	Argument	logFilename ( )		750140	1					
ANR	750241	CallExpression	logFilename ( )		750140	0					
ANR	750242	Callee	logFilename		750140	0					
ANR	750243	Identifier	logFilename		750140	0					
ANR	750244	ArgumentList			750140	1					
ANR	750245	Argument	errno		750140	2					
ANR	750246	Identifier	errno		750140	0					
ANR	750247	IfStatement	if ( condor_fsync ( fileno ( log_fp ) ) < 0 )		750140	1					
ANR	750248	Condition	condor_fsync ( fileno ( log_fp ) ) < 0	209:8:6763:6794	750140	0	True				
ANR	750249	RelationalExpression	condor_fsync ( fileno ( log_fp ) ) < 0		750140	0		<			
ANR	750250	CallExpression	condor_fsync ( fileno ( log_fp ) )		750140	0					
ANR	750251	Callee	condor_fsync		750140	0					
ANR	750252	Identifier	condor_fsync		750140	0					
ANR	750253	ArgumentList	fileno ( log_fp )		750140	1					
ANR	750254	Argument	fileno ( log_fp )		750140	0					
ANR	750255	CallExpression	fileno ( log_fp )		750140	0					
ANR	750256	Callee	fileno		750140	0					
ANR	750257	Identifier	fileno		750140	0					
ANR	750258	ArgumentList	log_fp		750140	1					
ANR	750259	Argument	log_fp		750140	0					
ANR	750260	Identifier	log_fp		750140	0					
ANR	750261	PrimaryExpression	0		750140	1					
ANR	750262	CompoundStatement		20:42:647:647	750140	1					
ANR	750263	ExpressionStatement	"EXCEPT ( ""fsync of %s failed, errno = %d"" , logFilename ( ) , errno )"	210:5:6804:6866	750140	0	True				
ANR	750264	CallExpression	"EXCEPT ( ""fsync of %s failed, errno = %d"" , logFilename ( ) , errno )"		750140	0					
ANR	750265	Callee	EXCEPT		750140	0					
ANR	750266	Identifier	EXCEPT		750140	0					
ANR	750267	ArgumentList	"""fsync of %s failed, errno = %d"""		750140	1					
ANR	750268	Argument	"""fsync of %s failed, errno = %d"""		750140	0					
ANR	750269	PrimaryExpression	"""fsync of %s failed, errno = %d"""		750140	0					
ANR	750270	Argument	logFilename ( )		750140	1					
ANR	750271	CallExpression	logFilename ( )		750140	0					
ANR	750272	Callee	logFilename		750140	0					
ANR	750273	Identifier	logFilename		750140	0					
ANR	750274	ArgumentList			750140	1					
ANR	750275	Argument	errno		750140	2					
ANR	750276	Identifier	errno		750140	0					
ANR	750277	ExpressionStatement	log -> Play ( ( void * ) & table )	214:2:6885:6910	750140	1	True				
ANR	750278	CallExpression	log -> Play ( ( void * ) & table )		750140	0					
ANR	750279	Callee	log -> Play		750140	0					
ANR	750280	PtrMemberAccess	log -> Play		750140	0					
ANR	750281	Identifier	log		750140	0					
ANR	750282	Identifier	Play		750140	1					
ANR	750283	ArgumentList	( void * ) & table		750140	1					
ANR	750284	Argument	( void * ) & table		750140	0					
ANR	750285	CastExpression	( void * ) & table		750140	0					
ANR	750286	CastTarget	void *		750140	0					
ANR	750287	UnaryOperationExpression	& table		750140	1					
ANR	750288	UnaryOperator	&		750140	0					
ANR	750289	Identifier	table		750140	1					
ANR	750290	Statement	delete	215:2:6914:6919	750140	2	True				
ANR	750291	ExpressionStatement	log	215:9:6921:6924	750140	3	True				
ANR	750292	Identifier	log		750140	0					
ANR	750293	ReturnType	void		750140	1					
ANR	750294	Identifier	ClassAdLog :: AppendLog		750140	2					
ANR	750295	ParameterList	LogRecord * log		750140	3					
ANR	750296	Parameter	LogRecord * log	189:22:6133:6146	750140	0	True				
ANR	750297	ParameterType	LogRecord *		750140	0					
ANR	750298	Identifier	log		750140	1					
ANR	750299	CFGEntryNode	ENTRY		750140		True				
ANR	750300	CFGExitNode	EXIT		750140		True				
ANR	750301	Symbol	fflush		750140						
ANR	750302	Symbol	logFilename		750140						
ANR	750303	Symbol	errno		750140						
ANR	750304	Symbol	NULL		750140						
ANR	750305	Symbol	log		750140						
ANR	750306	Symbol	log -> Write		750140						
ANR	750307	Symbol	l		750140						
ANR	750308	Symbol	& table		750140						
ANR	750309	Symbol	active_transaction		750140						
ANR	750310	Symbol	* log		750140						
ANR	750311	Symbol	log_fp		750140						
ANR	750312	Symbol	active_transaction -> EmptyTransaction		750140						
ANR	750313	Symbol	fileno		750140						
ANR	750314	Symbol	m_nondurable_level		750140						
ANR	750315	Symbol	condor_fsync		750140						
ANR	750316	Symbol	* active_transaction		750140						
ANR	750317	Function	ClassAdLog :: FlushLog	219:0:6932:7084							
ANR	750318	FunctionDef	ClassAdLog :: FlushLog ()		750317	0					
ANR	750319	CompoundStatement		221:0:6960:7084	750317	0					
ANR	750320	IfStatement	if ( log_fp != NULL )		750317	0					
ANR	750321	Condition	log_fp != NULL	222:5:6967:6978	750317	0	True				
ANR	750322	EqualityExpression	log_fp != NULL		750317	0		!=			
ANR	750323	Identifier	log_fp		750317	0					
ANR	750324	Identifier	NULL		750317	1					
ANR	750325	CompoundStatement		2:19:20:20	750317	1					
ANR	750326	IfStatement	if ( fflush ( log_fp ) != 0 )		750317	0					
ANR	750327	Condition	fflush ( log_fp ) != 0	223:6:6989:7006	750317	0	True				
ANR	750328	EqualityExpression	fflush ( log_fp ) != 0		750317	0		!=			
ANR	750329	CallExpression	fflush ( log_fp )		750317	0					
ANR	750330	Callee	fflush		750317	0					
ANR	750331	Identifier	fflush		750317	0					
ANR	750332	ArgumentList	log_fp		750317	1					
ANR	750333	Argument	log_fp		750317	0					
ANR	750334	Identifier	log_fp		750317	0					
ANR	750335	PrimaryExpression	0		750317	1					
ANR	750336	CompoundStatement		3:25:47:47	750317	1					
ANR	750337	ExpressionStatement	"EXCEPT ( ""flush to %s failed, errno = %d"" , logFilename ( ) , errno )"	224:3:7013:7075	750317	0	True				
ANR	750338	CallExpression	"EXCEPT ( ""flush to %s failed, errno = %d"" , logFilename ( ) , errno )"		750317	0					
ANR	750339	Callee	EXCEPT		750317	0					
ANR	750340	Identifier	EXCEPT		750317	0					
ANR	750341	ArgumentList	"""flush to %s failed, errno = %d"""		750317	1					
ANR	750342	Argument	"""flush to %s failed, errno = %d"""		750317	0					
ANR	750343	PrimaryExpression	"""flush to %s failed, errno = %d"""		750317	0					
ANR	750344	Argument	logFilename ( )		750317	1					
ANR	750345	CallExpression	logFilename ( )		750317	0					
ANR	750346	Callee	logFilename		750317	0					
ANR	750347	Identifier	logFilename		750317	0					
ANR	750348	ArgumentList			750317	1					
ANR	750349	Argument	errno		750317	2					
ANR	750350	Identifier	errno		750317	0					
ANR	750351	ReturnType	void		750317	1					
ANR	750352	Identifier	ClassAdLog :: FlushLog		750317	2					
ANR	750353	ParameterList			750317	3					
ANR	750354	CFGEntryNode	ENTRY		750317		True				
ANR	750355	CFGExitNode	EXIT		750317		True				
ANR	750356	Symbol	fflush		750317						
ANR	750357	Symbol	logFilename		750317						
ANR	750358	Symbol	log_fp		750317						
ANR	750359	Symbol	errno		750317						
ANR	750360	Symbol	NULL		750317						
ANR	750361	Function	ClassAdLog :: SaveHistoricalLogs	229:0:7087:8339							
ANR	750362	FunctionDef	ClassAdLog :: SaveHistoricalLogs ()		750361	0					
ANR	750363	CompoundStatement		231:0:7125:8339	750361	0					
ANR	750364	IfStatement	if ( ! max_historical_logs )		750361	0					
ANR	750365	Condition	! max_historical_logs	232:4:7131:7150	750361	0	True				
ANR	750366	UnaryOperationExpression	! max_historical_logs		750361	0					
ANR	750367	UnaryOperator	!		750361	0					
ANR	750368	Identifier	max_historical_logs		750361	1					
ANR	750369	ReturnStatement	return true ;	232:26:7153:7164	750361	1	True				
ANR	750370	Identifier	true		750361	0					
ANR	750371	IdentifierDeclStatement	MyString new_histfile ;	234:1:7168:7189	750361	1	True				
ANR	750372	IdentifierDecl	new_histfile		750361	0					
ANR	750373	IdentifierDeclType	MyString		750361	0					
ANR	750374	Identifier	new_histfile		750361	1					
ANR	750375	IfStatement	"if ( ! new_histfile . sprintf ( ""%s.%lu"" , logFilename ( ) , historical_sequence_number ) )"		750361	2					
ANR	750376	Condition	"! new_histfile . sprintf ( ""%s.%lu"" , logFilename ( ) , historical_sequence_number )"	235:4:7195:7266	750361	0	True				
ANR	750377	UnaryOperationExpression	"! new_histfile . sprintf ( ""%s.%lu"" , logFilename ( ) , historical_sequence_number )"		750361	0					
ANR	750378	UnaryOperator	!		750361	0					
ANR	750379	CallExpression	"new_histfile . sprintf ( ""%s.%lu"" , logFilename ( ) , historical_sequence_number )"		750361	1					
ANR	750380	Callee	new_histfile . sprintf		750361	0					
ANR	750381	MemberAccess	new_histfile . sprintf		750361	0					
ANR	750382	Identifier	new_histfile		750361	0					
ANR	750383	Identifier	sprintf		750361	1					
ANR	750384	ArgumentList	"""%s.%lu"""		750361	1					
ANR	750385	Argument	"""%s.%lu"""		750361	0					
ANR	750386	PrimaryExpression	"""%s.%lu"""		750361	0					
ANR	750387	Argument	logFilename ( )		750361	1					
ANR	750388	CallExpression	logFilename ( )		750361	0					
ANR	750389	Callee	logFilename		750361	0					
ANR	750390	Identifier	logFilename		750361	0					
ANR	750391	ArgumentList			750361	1					
ANR	750392	Argument	historical_sequence_number		750361	2					
ANR	750393	Identifier	historical_sequence_number		750361	0					
ANR	750394	CompoundStatement		6:1:144:144	750361	1					
ANR	750395	ExpressionStatement	"dprintf ( D_ALWAYS , ""Aborting save of historical log: out of memory.\\n"" )"	237:2:7274:7343	750361	0	True				
ANR	750396	CallExpression	"dprintf ( D_ALWAYS , ""Aborting save of historical log: out of memory.\\n"" )"		750361	0					
ANR	750397	Callee	dprintf		750361	0					
ANR	750398	Identifier	dprintf		750361	0					
ANR	750399	ArgumentList	D_ALWAYS		750361	1					
ANR	750400	Argument	D_ALWAYS		750361	0					
ANR	750401	Identifier	D_ALWAYS		750361	0					
ANR	750402	Argument	"""Aborting save of historical log: out of memory.\\n"""		750361	1					
ANR	750403	PrimaryExpression	"""Aborting save of historical log: out of memory.\\n"""		750361	0					
ANR	750404	ReturnStatement	return false ;	238:2:7347:7359	750361	1	True				
ANR	750405	Identifier	false		750361	0					
ANR	750406	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""About to save historical log %s\\n"" , new_histfile . Value ( ) )"	241:1:7366:7443	750361	3	True				
ANR	750407	CallExpression	"dprintf ( D_FULLDEBUG , ""About to save historical log %s\\n"" , new_histfile . Value ( ) )"		750361	0					
ANR	750408	Callee	dprintf		750361	0					
ANR	750409	Identifier	dprintf		750361	0					
ANR	750410	ArgumentList	D_FULLDEBUG		750361	1					
ANR	750411	Argument	D_FULLDEBUG		750361	0					
ANR	750412	Identifier	D_FULLDEBUG		750361	0					
ANR	750413	Argument	"""About to save historical log %s\\n"""		750361	1					
ANR	750414	PrimaryExpression	"""About to save historical log %s\\n"""		750361	0					
ANR	750415	Argument	new_histfile . Value ( )		750361	2					
ANR	750416	CallExpression	new_histfile . Value ( )		750361	0					
ANR	750417	Callee	new_histfile . Value		750361	0					
ANR	750418	MemberAccess	new_histfile . Value		750361	0					
ANR	750419	Identifier	new_histfile		750361	0					
ANR	750420	Identifier	Value		750361	1					
ANR	750421	ArgumentList			750361	1					
ANR	750422	IfStatement	"if ( hardlink_or_copy_file ( logFilename ( ) , new_histfile . Value ( ) ) < 0 )"		750361	4					
ANR	750423	Condition	"hardlink_or_copy_file ( logFilename ( ) , new_histfile . Value ( ) ) < 0"	243:5:7451:7512	750361	0	True				
ANR	750424	RelationalExpression	"hardlink_or_copy_file ( logFilename ( ) , new_histfile . Value ( ) ) < 0"		750361	0		<			
ANR	750425	CallExpression	"hardlink_or_copy_file ( logFilename ( ) , new_histfile . Value ( ) )"		750361	0					
ANR	750426	Callee	hardlink_or_copy_file		750361	0					
ANR	750427	Identifier	hardlink_or_copy_file		750361	0					
ANR	750428	ArgumentList	logFilename ( )		750361	1					
ANR	750429	Argument	logFilename ( )		750361	0					
ANR	750430	CallExpression	logFilename ( )		750361	0					
ANR	750431	Callee	logFilename		750361	0					
ANR	750432	Identifier	logFilename		750361	0					
ANR	750433	ArgumentList			750361	1					
ANR	750434	Argument	new_histfile . Value ( )		750361	1					
ANR	750435	CallExpression	new_histfile . Value ( )		750361	0					
ANR	750436	Callee	new_histfile . Value		750361	0					
ANR	750437	MemberAccess	new_histfile . Value		750361	0					
ANR	750438	Identifier	new_histfile		750361	0					
ANR	750439	Identifier	Value		750361	1					
ANR	750440	ArgumentList			750361	1					
ANR	750441	PrimaryExpression	0		750361	1					
ANR	750442	CompoundStatement		13:69:389:389	750361	1					
ANR	750443	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to copy %s to %s.\\n"" , logFilename ( ) , new_histfile . Value ( ) )"	244:2:7519:7600	750361	0	True				
ANR	750444	CallExpression	"dprintf ( D_ALWAYS , ""Failed to copy %s to %s.\\n"" , logFilename ( ) , new_histfile . Value ( ) )"		750361	0					
ANR	750445	Callee	dprintf		750361	0					
ANR	750446	Identifier	dprintf		750361	0					
ANR	750447	ArgumentList	D_ALWAYS		750361	1					
ANR	750448	Argument	D_ALWAYS		750361	0					
ANR	750449	Identifier	D_ALWAYS		750361	0					
ANR	750450	Argument	"""Failed to copy %s to %s.\\n"""		750361	1					
ANR	750451	PrimaryExpression	"""Failed to copy %s to %s.\\n"""		750361	0					
ANR	750452	Argument	logFilename ( )		750361	2					
ANR	750453	CallExpression	logFilename ( )		750361	0					
ANR	750454	Callee	logFilename		750361	0					
ANR	750455	Identifier	logFilename		750361	0					
ANR	750456	ArgumentList			750361	1					
ANR	750457	Argument	new_histfile . Value ( )		750361	3					
ANR	750458	CallExpression	new_histfile . Value ( )		750361	0					
ANR	750459	Callee	new_histfile . Value		750361	0					
ANR	750460	MemberAccess	new_histfile . Value		750361	0					
ANR	750461	Identifier	new_histfile		750361	0					
ANR	750462	Identifier	Value		750361	1					
ANR	750463	ArgumentList			750361	1					
ANR	750464	ReturnStatement	return false ;	245:2:7604:7616	750361	1	True				
ANR	750465	Identifier	false		750361	0					
ANR	750466	IdentifierDeclStatement	MyString old_histfile ;	248:1:7623:7644	750361	5	True				
ANR	750467	IdentifierDecl	old_histfile		750361	0					
ANR	750468	IdentifierDeclType	MyString		750361	0					
ANR	750469	Identifier	old_histfile		750361	1					
ANR	750470	IfStatement	"if ( ! old_histfile . sprintf ( ""%s.%lu"" , logFilename ( ) , historical_sequence_number - max_historical_logs ) )"		750361	6					
ANR	750471	Condition	"! old_histfile . sprintf ( ""%s.%lu"" , logFilename ( ) , historical_sequence_number - max_historical_logs )"	249:4:7650:7743	750361	0	True				
ANR	750472	UnaryOperationExpression	"! old_histfile . sprintf ( ""%s.%lu"" , logFilename ( ) , historical_sequence_number - max_historical_logs )"		750361	0					
ANR	750473	UnaryOperator	!		750361	0					
ANR	750474	CallExpression	"old_histfile . sprintf ( ""%s.%lu"" , logFilename ( ) , historical_sequence_number - max_historical_logs )"		750361	1					
ANR	750475	Callee	old_histfile . sprintf		750361	0					
ANR	750476	MemberAccess	old_histfile . sprintf		750361	0					
ANR	750477	Identifier	old_histfile		750361	0					
ANR	750478	Identifier	sprintf		750361	1					
ANR	750479	ArgumentList	"""%s.%lu"""		750361	1					
ANR	750480	Argument	"""%s.%lu"""		750361	0					
ANR	750481	PrimaryExpression	"""%s.%lu"""		750361	0					
ANR	750482	Argument	logFilename ( )		750361	1					
ANR	750483	CallExpression	logFilename ( )		750361	0					
ANR	750484	Callee	logFilename		750361	0					
ANR	750485	Identifier	logFilename		750361	0					
ANR	750486	ArgumentList			750361	1					
ANR	750487	Argument	historical_sequence_number - max_historical_logs		750361	2					
ANR	750488	AdditiveExpression	historical_sequence_number - max_historical_logs		750361	0		-			
ANR	750489	Identifier	historical_sequence_number		750361	0					
ANR	750490	Identifier	max_historical_logs		750361	1					
ANR	750491	CompoundStatement		20:1:621:621	750361	1					
ANR	750492	ExpressionStatement	"dprintf ( D_ALWAYS , ""Aborting cleanup of historical logs: out of memory.\\n"" )"	251:2:7751:7824	750361	0	True				
ANR	750493	CallExpression	"dprintf ( D_ALWAYS , ""Aborting cleanup of historical logs: out of memory.\\n"" )"		750361	0					
ANR	750494	Callee	dprintf		750361	0					
ANR	750495	Identifier	dprintf		750361	0					
ANR	750496	ArgumentList	D_ALWAYS		750361	1					
ANR	750497	Argument	D_ALWAYS		750361	0					
ANR	750498	Identifier	D_ALWAYS		750361	0					
ANR	750499	Argument	"""Aborting cleanup of historical logs: out of memory.\\n"""		750361	1					
ANR	750500	PrimaryExpression	"""Aborting cleanup of historical logs: out of memory.\\n"""		750361	0					
ANR	750501	ReturnStatement	return true ;	252:2:7828:7839	750361	1	True				
ANR	750502	Identifier	true		750361	0					
ANR	750503	IfStatement	if ( unlink ( old_histfile . Value ( ) ) == 0 )		750361	7					
ANR	750504	Condition	unlink ( old_histfile . Value ( ) ) == 0	255:5:7879:7911	750361	0	True				
ANR	750505	EqualityExpression	unlink ( old_histfile . Value ( ) ) == 0		750361	0		==			
ANR	750506	CallExpression	unlink ( old_histfile . Value ( ) )		750361	0					
ANR	750507	Callee	unlink		750361	0					
ANR	750508	Identifier	unlink		750361	0					
ANR	750509	ArgumentList	old_histfile . Value ( )		750361	1					
ANR	750510	Argument	old_histfile . Value ( )		750361	0					
ANR	750511	CallExpression	old_histfile . Value ( )		750361	0					
ANR	750512	Callee	old_histfile . Value		750361	0					
ANR	750513	MemberAccess	old_histfile . Value		750361	0					
ANR	750514	Identifier	old_histfile		750361	0					
ANR	750515	Identifier	Value		750361	1					
ANR	750516	ArgumentList			750361	1					
ANR	750517	PrimaryExpression	0		750361	1					
ANR	750518	CompoundStatement		25:41:789:789	750361	1					
ANR	750519	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Removed historical log %s.\\n"" , old_histfile . Value ( ) )"	256:2:7919:7991	750361	0	True				
ANR	750520	CallExpression	"dprintf ( D_FULLDEBUG , ""Removed historical log %s.\\n"" , old_histfile . Value ( ) )"		750361	0					
ANR	750521	Callee	dprintf		750361	0					
ANR	750522	Identifier	dprintf		750361	0					
ANR	750523	ArgumentList	D_FULLDEBUG		750361	1					
ANR	750524	Argument	D_FULLDEBUG		750361	0					
ANR	750525	Identifier	D_FULLDEBUG		750361	0					
ANR	750526	Argument	"""Removed historical log %s.\\n"""		750361	1					
ANR	750527	PrimaryExpression	"""Removed historical log %s.\\n"""		750361	0					
ANR	750528	Argument	old_histfile . Value ( )		750361	2					
ANR	750529	CallExpression	old_histfile . Value ( )		750361	0					
ANR	750530	Callee	old_histfile . Value		750361	0					
ANR	750531	MemberAccess	old_histfile . Value		750361	0					
ANR	750532	Identifier	old_histfile		750361	0					
ANR	750533	Identifier	Value		750361	1					
ANR	750534	ArgumentList			750361	1					
ANR	750535	ElseStatement	else		750361	0					
ANR	750536	CompoundStatement		28:6:876:876	750361	0					
ANR	750537	IfStatement	if ( errno != ENOENT )		750361	0					
ANR	750538	Condition	errno != ENOENT	260:6:8061:8075	750361	0	True				
ANR	750539	EqualityExpression	errno != ENOENT		750361	0		!=			
ANR	750540	Identifier	errno		750361	0					
ANR	750541	Identifier	ENOENT		750361	1					
ANR	750542	CompoundStatement		30:24:953:953	750361	1					
ANR	750543	ExpressionStatement	"dprintf ( D_ALWAYS , ""WARNING: failed to remove '%s': %s\\n"" , old_histfile . Value ( ) , strerror ( errno ) )"	263:3:8179:8272	750361	0	True				
ANR	750544	CallExpression	"dprintf ( D_ALWAYS , ""WARNING: failed to remove '%s': %s\\n"" , old_histfile . Value ( ) , strerror ( errno ) )"		750361	0					
ANR	750545	Callee	dprintf		750361	0					
ANR	750546	Identifier	dprintf		750361	0					
ANR	750547	ArgumentList	D_ALWAYS		750361	1					
ANR	750548	Argument	D_ALWAYS		750361	0					
ANR	750549	Identifier	D_ALWAYS		750361	0					
ANR	750550	Argument	"""WARNING: failed to remove '%s': %s\\n"""		750361	1					
ANR	750551	PrimaryExpression	"""WARNING: failed to remove '%s': %s\\n"""		750361	0					
ANR	750552	Argument	old_histfile . Value ( )		750361	2					
ANR	750553	CallExpression	old_histfile . Value ( )		750361	0					
ANR	750554	Callee	old_histfile . Value		750361	0					
ANR	750555	MemberAccess	old_histfile . Value		750361	0					
ANR	750556	Identifier	old_histfile		750361	0					
ANR	750557	Identifier	Value		750361	1					
ANR	750558	ArgumentList			750361	1					
ANR	750559	Argument	strerror ( errno )		750361	3					
ANR	750560	CallExpression	strerror ( errno )		750361	0					
ANR	750561	Callee	strerror		750361	0					
ANR	750562	Identifier	strerror		750361	0					
ANR	750563	ArgumentList	errno		750361	1					
ANR	750564	Argument	errno		750361	0					
ANR	750565	Identifier	errno		750361	0					
ANR	750566	ReturnStatement	return true ;	265:2:8280:8291	750361	1	True				
ANR	750567	Identifier	true		750361	0					
ANR	750568	ReturnStatement	return true ;	267:1:8326:8337	750361	8	True				
ANR	750569	Identifier	true		750361	0					
ANR	750570	ReturnType	bool		750361	1					
ANR	750571	Identifier	ClassAdLog :: SaveHistoricalLogs		750361	2					
ANR	750572	ParameterList			750361	3					
ANR	750573	CFGEntryNode	ENTRY		750361		True				
ANR	750574	CFGExitNode	EXIT		750361		True				
ANR	750575	Symbol	logFilename		750361						
ANR	750576	Symbol	errno		750361						
ANR	750577	Symbol	hardlink_or_copy_file		750361						
ANR	750578	Symbol	new_histfile . sprintf		750361						
ANR	750579	Symbol	D_ALWAYS		750361						
ANR	750580	Symbol	false		750361						
ANR	750581	Symbol	D_FULLDEBUG		750361						
ANR	750582	Symbol	max_historical_logs		750361						
ANR	750583	Symbol	new_histfile . Value		750361						
ANR	750584	Symbol	ENOENT		750361						
ANR	750585	Symbol	new_histfile		750361						
ANR	750586	Symbol	strerror		750361						
ANR	750587	Symbol	old_histfile . sprintf		750361						
ANR	750588	Symbol	unlink		750361						
ANR	750589	Symbol	true		750361						
ANR	750590	Symbol	old_histfile . Value		750361						
ANR	750591	Symbol	old_histfile		750361						
ANR	750592	Symbol	historical_sequence_number		750361						
ANR	750593	Function	ClassAdLog :: SetMaxHistoricalLogs	270:0:8342:8425							
ANR	750594	FunctionDef	ClassAdLog :: SetMaxHistoricalLogs (int max)		750593	0					
ANR	750595	CompoundStatement		271:42:8389:8425	750593	0					
ANR	750596	ExpressionStatement	this -> max_historical_logs = max	272:1:8392:8423	750593	0	True				
ANR	750597	AssignmentExpression	this -> max_historical_logs = max		750593	0		=			
ANR	750598	PtrMemberAccess	this -> max_historical_logs		750593	0					
ANR	750599	Identifier	this		750593	0					
ANR	750600	Identifier	max_historical_logs		750593	1					
ANR	750601	Identifier	max		750593	1					
ANR	750602	ReturnType	void		750593	1					
ANR	750603	Identifier	ClassAdLog :: SetMaxHistoricalLogs		750593	2					
ANR	750604	ParameterList	int max		750593	3					
ANR	750605	Parameter	int max	271:33:8380:8386	750593	0	True				
ANR	750606	ParameterType	int		750593	0					
ANR	750607	Identifier	max		750593	1					
ANR	750608	CFGEntryNode	ENTRY		750593		True				
ANR	750609	CFGExitNode	EXIT		750593		True				
ANR	750610	Symbol	* this		750593						
ANR	750611	Symbol	max		750593						
ANR	750612	Symbol	this		750593						
ANR	750613	Symbol	this -> max_historical_logs		750593						
ANR	750614	Function	ClassAdLog :: GetMaxHistoricalLogs	275:0:8428:8498							
ANR	750615	FunctionDef	ClassAdLog :: GetMaxHistoricalLogs ()		750614	0					
ANR	750616	CompoundStatement		276:35:8467:8498	750614	0					
ANR	750617	ReturnStatement	return max_historical_logs ;	277:1:8470:8496	750614	0	True				
ANR	750618	Identifier	max_historical_logs		750614	0					
ANR	750619	ReturnType	int		750614	1					
ANR	750620	Identifier	ClassAdLog :: GetMaxHistoricalLogs		750614	2					
ANR	750621	ParameterList			750614	3					
ANR	750622	CFGEntryNode	ENTRY		750614		True				
ANR	750623	CFGExitNode	EXIT		750614		True				
ANR	750624	Symbol	max_historical_logs		750614						
ANR	750625	Function	ClassAdLog :: TruncLog	280:0:8501:10560							
ANR	750626	FunctionDef	ClassAdLog :: TruncLog ()		750625	0					
ANR	750627	CompoundStatement		282:0:8529:10560	750625	0					
ANR	750628	IdentifierDeclStatement	MyString tmp_log_filename ;	283:1:8532:8557	750625	0	True				
ANR	750629	IdentifierDecl	tmp_log_filename		750625	0					
ANR	750630	IdentifierDeclType	MyString		750625	0					
ANR	750631	Identifier	tmp_log_filename		750625	1					
ANR	750632	IdentifierDeclStatement	int new_log_fd ;	284:1:8560:8574	750625	1	True				
ANR	750633	IdentifierDecl	new_log_fd		750625	0					
ANR	750634	IdentifierDeclType	int		750625	0					
ANR	750635	Identifier	new_log_fd		750625	1					
ANR	750636	IdentifierDeclStatement	FILE * new_log_fp ;	285:1:8577:8593	750625	2	True				
ANR	750637	IdentifierDecl	* new_log_fp		750625	0					
ANR	750638	IdentifierDeclType	FILE *		750625	0					
ANR	750639	Identifier	new_log_fp		750625	1					
ANR	750640	ExpressionStatement	"dprintf ( D_ALWAYS , ""About to rotate ClassAd log %s\\n"" , logFilename ( ) )"	287:1:8597:8663	750625	3	True				
ANR	750641	CallExpression	"dprintf ( D_ALWAYS , ""About to rotate ClassAd log %s\\n"" , logFilename ( ) )"		750625	0					
ANR	750642	Callee	dprintf		750625	0					
ANR	750643	Identifier	dprintf		750625	0					
ANR	750644	ArgumentList	D_ALWAYS		750625	1					
ANR	750645	Argument	D_ALWAYS		750625	0					
ANR	750646	Identifier	D_ALWAYS		750625	0					
ANR	750647	Argument	"""About to rotate ClassAd log %s\\n"""		750625	1					
ANR	750648	PrimaryExpression	"""About to rotate ClassAd log %s\\n"""		750625	0					
ANR	750649	Argument	logFilename ( )		750625	2					
ANR	750650	CallExpression	logFilename ( )		750625	0					
ANR	750651	Callee	logFilename		750625	0					
ANR	750652	Identifier	logFilename		750625	0					
ANR	750653	ArgumentList			750625	1					
ANR	750654	IfStatement	if ( ! SaveHistoricalLogs ( ) )		750625	4					
ANR	750655	Condition	! SaveHistoricalLogs ( )	289:4:8670:8690	750625	0	True				
ANR	750656	UnaryOperationExpression	! SaveHistoricalLogs ( )		750625	0					
ANR	750657	UnaryOperator	!		750625	0					
ANR	750658	CallExpression	SaveHistoricalLogs ( )		750625	1					
ANR	750659	Callee	SaveHistoricalLogs		750625	0					
ANR	750660	Identifier	SaveHistoricalLogs		750625	0					
ANR	750661	ArgumentList			750625	1					
ANR	750662	CompoundStatement		8:27:163:163	750625	1					
ANR	750663	ExpressionStatement	"dprintf ( D_ALWAYS , ""Skipping log rotation, because saving of historical log failed for %s.\\n"" , logFilename ( ) )"	290:2:8697:8803	750625	0	True				
ANR	750664	CallExpression	"dprintf ( D_ALWAYS , ""Skipping log rotation, because saving of historical log failed for %s.\\n"" , logFilename ( ) )"		750625	0					
ANR	750665	Callee	dprintf		750625	0					
ANR	750666	Identifier	dprintf		750625	0					
ANR	750667	ArgumentList	D_ALWAYS		750625	1					
ANR	750668	Argument	D_ALWAYS		750625	0					
ANR	750669	Identifier	D_ALWAYS		750625	0					
ANR	750670	Argument	"""Skipping log rotation, because saving of historical log failed for %s.\\n"""		750625	1					
ANR	750671	PrimaryExpression	"""Skipping log rotation, because saving of historical log failed for %s.\\n"""		750625	0					
ANR	750672	Argument	logFilename ( )		750625	2					
ANR	750673	CallExpression	logFilename ( )		750625	0					
ANR	750674	Callee	logFilename		750625	0					
ANR	750675	Identifier	logFilename		750625	0					
ANR	750676	ArgumentList			750625	1					
ANR	750677	ReturnStatement	return false ;	291:2:8807:8819	750625	1	True				
ANR	750678	Identifier	false		750625	0					
ANR	750679	ExpressionStatement	"tmp_log_filename . sprintf ( ""%s.tmp"" , logFilename ( ) )"	294:1:8826:8876	750625	5	True				
ANR	750680	CallExpression	"tmp_log_filename . sprintf ( ""%s.tmp"" , logFilename ( ) )"		750625	0					
ANR	750681	Callee	tmp_log_filename . sprintf		750625	0					
ANR	750682	MemberAccess	tmp_log_filename . sprintf		750625	0					
ANR	750683	Identifier	tmp_log_filename		750625	0					
ANR	750684	Identifier	sprintf		750625	1					
ANR	750685	ArgumentList	"""%s.tmp"""		750625	1					
ANR	750686	Argument	"""%s.tmp"""		750625	0					
ANR	750687	PrimaryExpression	"""%s.tmp"""		750625	0					
ANR	750688	Argument	logFilename ( )		750625	1					
ANR	750689	CallExpression	logFilename ( )		750625	0					
ANR	750690	Callee	logFilename		750625	0					
ANR	750691	Identifier	logFilename		750625	0					
ANR	750692	ArgumentList			750625	1					
ANR	750693	ExpressionStatement	"new_log_fd = safe_open_wrapper_follow ( tmp_log_filename . Value ( ) , O_RDWR | O_CREAT | O_LARGEFILE , 0600 )"	295:1:8879:8980	750625	6	True				
ANR	750694	AssignmentExpression	"new_log_fd = safe_open_wrapper_follow ( tmp_log_filename . Value ( ) , O_RDWR | O_CREAT | O_LARGEFILE , 0600 )"		750625	0		=			
ANR	750695	Identifier	new_log_fd		750625	0					
ANR	750696	CallExpression	"safe_open_wrapper_follow ( tmp_log_filename . Value ( ) , O_RDWR | O_CREAT | O_LARGEFILE , 0600 )"		750625	1					
ANR	750697	Callee	safe_open_wrapper_follow		750625	0					
ANR	750698	Identifier	safe_open_wrapper_follow		750625	0					
ANR	750699	ArgumentList	tmp_log_filename . Value ( )		750625	1					
ANR	750700	Argument	tmp_log_filename . Value ( )		750625	0					
ANR	750701	CallExpression	tmp_log_filename . Value ( )		750625	0					
ANR	750702	Callee	tmp_log_filename . Value		750625	0					
ANR	750703	MemberAccess	tmp_log_filename . Value		750625	0					
ANR	750704	Identifier	tmp_log_filename		750625	0					
ANR	750705	Identifier	Value		750625	1					
ANR	750706	ArgumentList			750625	1					
ANR	750707	Argument	O_RDWR | O_CREAT | O_LARGEFILE		750625	1					
ANR	750708	InclusiveOrExpression	O_RDWR | O_CREAT | O_LARGEFILE		750625	0		|			
ANR	750709	Identifier	O_RDWR		750625	0					
ANR	750710	InclusiveOrExpression	O_CREAT | O_LARGEFILE		750625	1		|			
ANR	750711	Identifier	O_CREAT		750625	0					
ANR	750712	Identifier	O_LARGEFILE		750625	1					
ANR	750713	Argument	0600		750625	2					
ANR	750714	PrimaryExpression	0600		750625	0					
ANR	750715	IfStatement	if ( new_log_fd < 0 )		750625	7					
ANR	750716	Condition	new_log_fd < 0	296:5:8987:9000	750625	0	True				
ANR	750717	RelationalExpression	new_log_fd < 0		750625	0		<			
ANR	750718	Identifier	new_log_fd		750625	0					
ANR	750719	PrimaryExpression	0		750625	1					
ANR	750720	CompoundStatement		15:21:473:473	750625	1					
ANR	750721	ExpressionStatement	"dprintf ( D_ALWAYS , ""failed to rotate log: safe_open_wrapper(%s) returns %d\\n"" , tmp_log_filename . Value ( ) , new_log_fd )"	297:2:9007:9126	750625	0	True				
ANR	750722	CallExpression	"dprintf ( D_ALWAYS , ""failed to rotate log: safe_open_wrapper(%s) returns %d\\n"" , tmp_log_filename . Value ( ) , new_log_fd )"		750625	0					
ANR	750723	Callee	dprintf		750625	0					
ANR	750724	Identifier	dprintf		750625	0					
ANR	750725	ArgumentList	D_ALWAYS		750625	1					
ANR	750726	Argument	D_ALWAYS		750625	0					
ANR	750727	Identifier	D_ALWAYS		750625	0					
ANR	750728	Argument	"""failed to rotate log: safe_open_wrapper(%s) returns %d\\n"""		750625	1					
ANR	750729	PrimaryExpression	"""failed to rotate log: safe_open_wrapper(%s) returns %d\\n"""		750625	0					
ANR	750730	Argument	tmp_log_filename . Value ( )		750625	2					
ANR	750731	CallExpression	tmp_log_filename . Value ( )		750625	0					
ANR	750732	Callee	tmp_log_filename . Value		750625	0					
ANR	750733	MemberAccess	tmp_log_filename . Value		750625	0					
ANR	750734	Identifier	tmp_log_filename		750625	0					
ANR	750735	Identifier	Value		750625	1					
ANR	750736	ArgumentList			750625	1					
ANR	750737	Argument	new_log_fd		750625	3					
ANR	750738	Identifier	new_log_fd		750625	0					
ANR	750739	ReturnStatement	return false ;	299:2:9130:9142	750625	1	True				
ANR	750740	Identifier	false		750625	0					
ANR	750741	ExpressionStatement	"new_log_fp = fdopen ( new_log_fd , ""r+"" )"	302:1:9149:9186	750625	8	True				
ANR	750742	AssignmentExpression	"new_log_fp = fdopen ( new_log_fd , ""r+"" )"		750625	0		=			
ANR	750743	Identifier	new_log_fp		750625	0					
ANR	750744	CallExpression	"fdopen ( new_log_fd , ""r+"" )"		750625	1					
ANR	750745	Callee	fdopen		750625	0					
ANR	750746	Identifier	fdopen		750625	0					
ANR	750747	ArgumentList	new_log_fd		750625	1					
ANR	750748	Argument	new_log_fd		750625	0					
ANR	750749	Identifier	new_log_fd		750625	0					
ANR	750750	Argument	"""r+"""		750625	1					
ANR	750751	PrimaryExpression	"""r+"""		750625	0					
ANR	750752	IfStatement	if ( new_log_fp == NULL )		750625	9					
ANR	750753	Condition	new_log_fp == NULL	303:5:9193:9210	750625	0	True				
ANR	750754	EqualityExpression	new_log_fp == NULL		750625	0		==			
ANR	750755	Identifier	new_log_fp		750625	0					
ANR	750756	Identifier	NULL		750625	1					
ANR	750757	CompoundStatement		22:25:683:683	750625	1					
ANR	750758	ExpressionStatement	"dprintf ( D_ALWAYS , ""failed to rotate log: fdopen(%s) returns NULL\\n"" , tmp_log_filename . Value ( ) )"	304:2:9217:9315	750625	0	True				
ANR	750759	CallExpression	"dprintf ( D_ALWAYS , ""failed to rotate log: fdopen(%s) returns NULL\\n"" , tmp_log_filename . Value ( ) )"		750625	0					
ANR	750760	Callee	dprintf		750625	0					
ANR	750761	Identifier	dprintf		750625	0					
ANR	750762	ArgumentList	D_ALWAYS		750625	1					
ANR	750763	Argument	D_ALWAYS		750625	0					
ANR	750764	Identifier	D_ALWAYS		750625	0					
ANR	750765	Argument	"""failed to rotate log: fdopen(%s) returns NULL\\n"""		750625	1					
ANR	750766	PrimaryExpression	"""failed to rotate log: fdopen(%s) returns NULL\\n"""		750625	0					
ANR	750767	Argument	tmp_log_filename . Value ( )		750625	2					
ANR	750768	CallExpression	tmp_log_filename . Value ( )		750625	0					
ANR	750769	Callee	tmp_log_filename . Value		750625	0					
ANR	750770	MemberAccess	tmp_log_filename . Value		750625	0					
ANR	750771	Identifier	tmp_log_filename		750625	0					
ANR	750772	Identifier	Value		750625	1					
ANR	750773	ArgumentList			750625	1					
ANR	750774	ReturnStatement	return false ;	306:2:9319:9331	750625	1	True				
ANR	750775	Identifier	false		750625	0					
ANR	750776	ExpressionStatement	historical_sequence_number ++	311:1:9396:9424	750625	10	True				
ANR	750777	PostIncDecOperationExpression	historical_sequence_number ++		750625	0					
ANR	750778	Identifier	historical_sequence_number		750625	0					
ANR	750779	IncDec	++		750625	1					
ANR	750780	ExpressionStatement	LogState ( new_log_fp )	313:1:9428:9448	750625	11	True				
ANR	750781	CallExpression	LogState ( new_log_fp )		750625	0					
ANR	750782	Callee	LogState		750625	0					
ANR	750783	Identifier	LogState		750625	0					
ANR	750784	ArgumentList	new_log_fp		750625	1					
ANR	750785	Argument	new_log_fp		750625	0					
ANR	750786	Identifier	new_log_fp		750625	0					
ANR	750787	ExpressionStatement	fclose ( log_fp )	314:1:9451:9465	750625	12	True				
ANR	750788	CallExpression	fclose ( log_fp )		750625	0					
ANR	750789	Callee	fclose		750625	0					
ANR	750790	Identifier	fclose		750625	0					
ANR	750791	ArgumentList	log_fp		750625	1					
ANR	750792	Argument	log_fp		750625	0					
ANR	750793	Identifier	log_fp		750625	0					
ANR	750794	ExpressionStatement	log_fp = NULL	315:1:9468:9481	750625	13	True				
ANR	750795	AssignmentExpression	log_fp = NULL		750625	0		=			
ANR	750796	Identifier	log_fp		750625	0					
ANR	750797	Identifier	NULL		750625	1					
ANR	750798	ExpressionStatement	fclose ( new_log_fp )	316:1:9484:9502	750625	14	True				
ANR	750799	CallExpression	fclose ( new_log_fp )		750625	0					
ANR	750800	Callee	fclose		750625	0					
ANR	750801	Identifier	fclose		750625	0					
ANR	750802	ArgumentList	new_log_fp		750625	1					
ANR	750803	Argument	new_log_fp		750625	0					
ANR	750804	Identifier	new_log_fp		750625	0					
ANR	750805	IfStatement	"if ( rotate_file ( tmp_log_filename . Value ( ) , logFilename ( ) ) < 0 )"		750625	15					
ANR	750806	Condition	"rotate_file ( tmp_log_filename . Value ( ) , logFilename ( ) ) < 0"	317:5:9544:9599	750625	0	True				
ANR	750807	RelationalExpression	"rotate_file ( tmp_log_filename . Value ( ) , logFilename ( ) ) < 0"		750625	0		<			
ANR	750808	CallExpression	"rotate_file ( tmp_log_filename . Value ( ) , logFilename ( ) )"		750625	0					
ANR	750809	Callee	rotate_file		750625	0					
ANR	750810	Identifier	rotate_file		750625	0					
ANR	750811	ArgumentList	tmp_log_filename . Value ( )		750625	1					
ANR	750812	Argument	tmp_log_filename . Value ( )		750625	0					
ANR	750813	CallExpression	tmp_log_filename . Value ( )		750625	0					
ANR	750814	Callee	tmp_log_filename . Value		750625	0					
ANR	750815	MemberAccess	tmp_log_filename . Value		750625	0					
ANR	750816	Identifier	tmp_log_filename		750625	0					
ANR	750817	Identifier	Value		750625	1					
ANR	750818	ArgumentList			750625	1					
ANR	750819	Argument	logFilename ( )		750625	1					
ANR	750820	CallExpression	logFilename ( )		750625	0					
ANR	750821	Callee	logFilename		750625	0					
ANR	750822	Identifier	logFilename		750625	0					
ANR	750823	ArgumentList			750625	1					
ANR	750824	PrimaryExpression	0		750625	1					
ANR	750825	CompoundStatement		42:2:1209:1300	750625	1					
ANR	750826	ExpressionStatement	"dprintf ( D_ALWAYS , ""failed to rotate job queue log!\\n"" )"	318:2:9606:9660	750625	0	True				
ANR	750827	CallExpression	"dprintf ( D_ALWAYS , ""failed to rotate job queue log!\\n"" )"		750625	0					
ANR	750828	Callee	dprintf		750625	0					
ANR	750829	Identifier	dprintf		750625	0					
ANR	750830	ArgumentList	D_ALWAYS		750625	1					
ANR	750831	Argument	D_ALWAYS		750625	0					
ANR	750832	Identifier	D_ALWAYS		750625	0					
ANR	750833	Argument	"""failed to rotate job queue log!\\n"""		750625	1					
ANR	750834	PrimaryExpression	"""failed to rotate job queue log!\\n"""		750625	0					
ANR	750835	ExpressionStatement	historical_sequence_number --	321:2:9706:9734	750625	1	True				
ANR	750836	PostIncDecOperationExpression	historical_sequence_number --		750625	0					
ANR	750837	Identifier	historical_sequence_number		750625	0					
ANR	750838	IncDec	--		750625	1					
ANR	750839	IdentifierDeclStatement	"int log_fd = safe_open_wrapper_follow ( logFilename ( ) , O_RDWR | O_APPEND | O_LARGEFILE , 0600 ) ;"	323:2:9739:9830	750625	2	True				
ANR	750840	IdentifierDecl	"log_fd = safe_open_wrapper_follow ( logFilename ( ) , O_RDWR | O_APPEND | O_LARGEFILE , 0600 )"		750625	0					
ANR	750841	IdentifierDeclType	int		750625	0					
ANR	750842	Identifier	log_fd		750625	1					
ANR	750843	AssignmentExpression	"log_fd = safe_open_wrapper_follow ( logFilename ( ) , O_RDWR | O_APPEND | O_LARGEFILE , 0600 )"		750625	2		=			
ANR	750844	Identifier	log_fd		750625	0					
ANR	750845	CallExpression	"safe_open_wrapper_follow ( logFilename ( ) , O_RDWR | O_APPEND | O_LARGEFILE , 0600 )"		750625	1					
ANR	750846	Callee	safe_open_wrapper_follow		750625	0					
ANR	750847	Identifier	safe_open_wrapper_follow		750625	0					
ANR	750848	ArgumentList	logFilename ( )		750625	1					
ANR	750849	Argument	logFilename ( )		750625	0					
ANR	750850	CallExpression	logFilename ( )		750625	0					
ANR	750851	Callee	logFilename		750625	0					
ANR	750852	Identifier	logFilename		750625	0					
ANR	750853	ArgumentList			750625	1					
ANR	750854	Argument	O_RDWR | O_APPEND | O_LARGEFILE		750625	1					
ANR	750855	InclusiveOrExpression	O_RDWR | O_APPEND | O_LARGEFILE		750625	0		|			
ANR	750856	Identifier	O_RDWR		750625	0					
ANR	750857	InclusiveOrExpression	O_APPEND | O_LARGEFILE		750625	1		|			
ANR	750858	Identifier	O_APPEND		750625	0					
ANR	750859	Identifier	O_LARGEFILE		750625	1					
ANR	750860	Argument	0600		750625	2					
ANR	750861	PrimaryExpression	0600		750625	0					
ANR	750862	IfStatement	if ( log_fd < 0 )		750625	3					
ANR	750863	Condition	log_fd < 0	324:6:9838:9847	750625	0	True				
ANR	750864	RelationalExpression	log_fd < 0		750625	0		<			
ANR	750865	Identifier	log_fd		750625	0					
ANR	750866	PrimaryExpression	0		750625	1					
ANR	750867	CompoundStatement		43:18:1320:1320	750625	1					
ANR	750868	ExpressionStatement	"EXCEPT ( ""failed to reopen log %s, errno = %d after failing to rotate log."" , logFilename ( ) , errno )"	325:3:9855:9949	750625	0	True				
ANR	750869	CallExpression	"EXCEPT ( ""failed to reopen log %s, errno = %d after failing to rotate log."" , logFilename ( ) , errno )"		750625	0					
ANR	750870	Callee	EXCEPT		750625	0					
ANR	750871	Identifier	EXCEPT		750625	0					
ANR	750872	ArgumentList	"""failed to reopen log %s, errno = %d after failing to rotate log."""		750625	1					
ANR	750873	Argument	"""failed to reopen log %s, errno = %d after failing to rotate log."""		750625	0					
ANR	750874	PrimaryExpression	"""failed to reopen log %s, errno = %d after failing to rotate log."""		750625	0					
ANR	750875	Argument	logFilename ( )		750625	1					
ANR	750876	CallExpression	logFilename ( )		750625	0					
ANR	750877	Callee	logFilename		750625	0					
ANR	750878	Identifier	logFilename		750625	0					
ANR	750879	ArgumentList			750625	1					
ANR	750880	Argument	errno		750625	2					
ANR	750881	Identifier	errno		750625	0					
ANR	750882	ExpressionStatement	"log_fp = fdopen ( log_fd , ""a+"" )"	328:2:9958:9987	750625	4	True				
ANR	750883	AssignmentExpression	"log_fp = fdopen ( log_fd , ""a+"" )"		750625	0		=			
ANR	750884	Identifier	log_fp		750625	0					
ANR	750885	CallExpression	"fdopen ( log_fd , ""a+"" )"		750625	1					
ANR	750886	Callee	fdopen		750625	0					
ANR	750887	Identifier	fdopen		750625	0					
ANR	750888	ArgumentList	log_fd		750625	1					
ANR	750889	Argument	log_fd		750625	0					
ANR	750890	Identifier	log_fd		750625	0					
ANR	750891	Argument	"""a+"""		750625	1					
ANR	750892	PrimaryExpression	"""a+"""		750625	0					
ANR	750893	IfStatement	if ( log_fp == NULL )		750625	5					
ANR	750894	Condition	log_fp == NULL	329:6:9995:10008	750625	0	True				
ANR	750895	EqualityExpression	log_fp == NULL		750625	0		==			
ANR	750896	Identifier	log_fp		750625	0					
ANR	750897	Identifier	NULL		750625	1					
ANR	750898	CompoundStatement		48:22:1481:1481	750625	1					
ANR	750899	ExpressionStatement	"EXCEPT ( ""failed to refdopen log %s, errno = %d after failing to rotate log."" , logFilename ( ) , errno )"	330:3:10016:10112	750625	0	True				
ANR	750900	CallExpression	"EXCEPT ( ""failed to refdopen log %s, errno = %d after failing to rotate log."" , logFilename ( ) , errno )"		750625	0					
ANR	750901	Callee	EXCEPT		750625	0					
ANR	750902	Identifier	EXCEPT		750625	0					
ANR	750903	ArgumentList	"""failed to refdopen log %s, errno = %d after failing to rotate log."""		750625	1					
ANR	750904	Argument	"""failed to refdopen log %s, errno = %d after failing to rotate log."""		750625	0					
ANR	750905	PrimaryExpression	"""failed to refdopen log %s, errno = %d after failing to rotate log."""		750625	0					
ANR	750906	Argument	logFilename ( )		750625	1					
ANR	750907	CallExpression	logFilename ( )		750625	0					
ANR	750908	Callee	logFilename		750625	0					
ANR	750909	Identifier	logFilename		750625	0					
ANR	750910	ArgumentList			750625	1					
ANR	750911	Argument	errno		750625	2					
ANR	750912	Identifier	errno		750625	0					
ANR	750913	ReturnStatement	return false ;	333:2:10121:10133	750625	6	True				
ANR	750914	Identifier	false		750625	0					
ANR	750915	IdentifierDeclStatement	"int log_fd = safe_open_wrapper_follow ( logFilename ( ) , O_RDWR | O_APPEND | O_LARGEFILE , 0600 ) ;"	335:1:10139:10230	750625	16	True				
ANR	750916	IdentifierDecl	"log_fd = safe_open_wrapper_follow ( logFilename ( ) , O_RDWR | O_APPEND | O_LARGEFILE , 0600 )"		750625	0					
ANR	750917	IdentifierDeclType	int		750625	0					
ANR	750918	Identifier	log_fd		750625	1					
ANR	750919	AssignmentExpression	"log_fd = safe_open_wrapper_follow ( logFilename ( ) , O_RDWR | O_APPEND | O_LARGEFILE , 0600 )"		750625	2		=			
ANR	750920	Identifier	log_fd		750625	0					
ANR	750921	CallExpression	"safe_open_wrapper_follow ( logFilename ( ) , O_RDWR | O_APPEND | O_LARGEFILE , 0600 )"		750625	1					
ANR	750922	Callee	safe_open_wrapper_follow		750625	0					
ANR	750923	Identifier	safe_open_wrapper_follow		750625	0					
ANR	750924	ArgumentList	logFilename ( )		750625	1					
ANR	750925	Argument	logFilename ( )		750625	0					
ANR	750926	CallExpression	logFilename ( )		750625	0					
ANR	750927	Callee	logFilename		750625	0					
ANR	750928	Identifier	logFilename		750625	0					
ANR	750929	ArgumentList			750625	1					
ANR	750930	Argument	O_RDWR | O_APPEND | O_LARGEFILE		750625	1					
ANR	750931	InclusiveOrExpression	O_RDWR | O_APPEND | O_LARGEFILE		750625	0		|			
ANR	750932	Identifier	O_RDWR		750625	0					
ANR	750933	InclusiveOrExpression	O_APPEND | O_LARGEFILE		750625	1		|			
ANR	750934	Identifier	O_APPEND		750625	0					
ANR	750935	Identifier	O_LARGEFILE		750625	1					
ANR	750936	Argument	0600		750625	2					
ANR	750937	PrimaryExpression	0600		750625	0					
ANR	750938	IfStatement	if ( log_fd < 0 )		750625	17					
ANR	750939	Condition	log_fd < 0	336:5:10237:10246	750625	0	True				
ANR	750940	RelationalExpression	log_fd < 0		750625	0		<			
ANR	750941	Identifier	log_fd		750625	0					
ANR	750942	PrimaryExpression	0		750625	1					
ANR	750943	CompoundStatement		55:17:1719:1719	750625	1					
ANR	750944	Statement	EXCEPT	337:2:10253:10258	750625	0	True				
ANR	750945	Statement	(	337:8:10259:10259	750625	1	True				
ANR	750946	Statement	"""failed to open log in append mode: """	337:10:10261:10297	750625	2	True				
ANR	750947	Statement	"""safe_open_wrapper(%s) returns %d\\n"""	338:3:10302:10337	750625	3	True				
ANR	750948	Statement	","	338:39:10338:10338	750625	4	True				
ANR	750949	Statement	logFilename	338:41:10340:10350	750625	5	True				
ANR	750950	Statement	(	338:52:10351:10351	750625	6	True				
ANR	750951	Statement	)	338:53:10352:10352	750625	7	True				
ANR	750952	Statement	","	338:54:10353:10353	750625	8	True				
ANR	750953	Statement	log_fd	338:56:10355:10360	750625	9	True				
ANR	750954	Statement	)	338:62:10361:10361	750625	10	True				
ANR	750955	ExpressionStatement		338:63:10362:10362	750625	11	True				
ANR	750956	ExpressionStatement	"log_fp = fdopen ( log_fd , ""a+"" )"	340:1:10368:10397	750625	18	True				
ANR	750957	AssignmentExpression	"log_fp = fdopen ( log_fd , ""a+"" )"		750625	0		=			
ANR	750958	Identifier	log_fp		750625	0					
ANR	750959	CallExpression	"fdopen ( log_fd , ""a+"" )"		750625	1					
ANR	750960	Callee	fdopen		750625	0					
ANR	750961	Identifier	fdopen		750625	0					
ANR	750962	ArgumentList	log_fd		750625	1					
ANR	750963	Argument	log_fd		750625	0					
ANR	750964	Identifier	log_fd		750625	0					
ANR	750965	Argument	"""a+"""		750625	1					
ANR	750966	PrimaryExpression	"""a+"""		750625	0					
ANR	750967	IfStatement	if ( log_fp == NULL )		750625	19					
ANR	750968	Condition	log_fp == NULL	341:5:10404:10417	750625	0	True				
ANR	750969	EqualityExpression	log_fp == NULL		750625	0		==			
ANR	750970	Identifier	log_fp		750625	0					
ANR	750971	Identifier	NULL		750625	1					
ANR	750972	CompoundStatement		60:21:1890:1890	750625	1					
ANR	750973	ExpressionStatement	close ( log_fd )	342:2:10424:10437	750625	0	True				
ANR	750974	CallExpression	close ( log_fd )		750625	0					
ANR	750975	Callee	close		750625	0					
ANR	750976	Identifier	close		750625	0					
ANR	750977	ArgumentList	log_fd		750625	1					
ANR	750978	Argument	log_fd		750625	0					
ANR	750979	Identifier	log_fd		750625	0					
ANR	750980	Statement	EXCEPT	343:2:10441:10446	750625	1	True				
ANR	750981	Statement	(	343:8:10447:10447	750625	2	True				
ANR	750982	Statement	"""failed to fdopen log in append mode: """	343:9:10448:10486	750625	3	True				
ANR	750983	Statement	"""fdopen(%s) returns %d\\n"""	344:3:10491:10515	750625	4	True				
ANR	750984	Statement	","	344:28:10516:10516	750625	5	True				
ANR	750985	Statement	logFilename	344:30:10518:10528	750625	6	True				
ANR	750986	Statement	(	344:41:10529:10529	750625	7	True				
ANR	750987	Statement	)	344:42:10530:10530	750625	8	True				
ANR	750988	Statement	","	344:43:10531:10531	750625	9	True				
ANR	750989	Statement	log_fd	344:45:10533:10538	750625	10	True				
ANR	750990	Statement	)	344:51:10539:10539	750625	11	True				
ANR	750991	ExpressionStatement		344:52:10540:10540	750625	12	True				
ANR	750992	ReturnStatement	return true ;	347:1:10547:10558	750625	20	True				
ANR	750993	Identifier	true		750625	0					
ANR	750994	ReturnType	bool		750625	1					
ANR	750995	Identifier	ClassAdLog :: TruncLog		750625	2					
ANR	750996	ParameterList			750625	3					
ANR	750997	CFGEntryNode	ENTRY		750625		True				
ANR	750998	CFGExitNode	EXIT		750625		True				
ANR	750999	Symbol	logFilename		750625						
ANR	751000	Symbol	O_LARGEFILE		750625						
ANR	751001	Symbol	errno		750625						
ANR	751002	Symbol	SaveHistoricalLogs		750625						
ANR	751003	Symbol	safe_open_wrapper_follow		750625						
ANR	751004	Symbol	NULL		750625						
ANR	751005	Symbol	new_log_fp		750625						
ANR	751006	Symbol	O_CREAT		750625						
ANR	751007	Symbol	tmp_log_filename		750625						
ANR	751008	Symbol	D_ALWAYS		750625						
ANR	751009	Symbol	false		750625						
ANR	751010	Symbol	fdopen		750625						
ANR	751011	Symbol	tmp_log_filename . Value		750625						
ANR	751012	Symbol	O_APPEND		750625						
ANR	751013	Symbol	log_fd		750625						
ANR	751014	Symbol	O_RDWR		750625						
ANR	751015	Symbol	log_fp		750625						
ANR	751016	Symbol	true		750625						
ANR	751017	Symbol	new_log_fd		750625						
ANR	751018	Symbol	rotate_file		750625						
ANR	751019	Symbol	historical_sequence_number		750625						
ANR	751020	Function	ClassAdLog :: IncNondurableCommitLevel	350:0:10563:10638							
ANR	751021	FunctionDef	ClassAdLog :: IncNondurableCommitLevel ()		751020	0					
ANR	751022	CompoundStatement		352:0:10606:10638	751020	0					
ANR	751023	ReturnStatement	return m_nondurable_level ++ ;	353:1:10609:10636	751020	0	True				
ANR	751024	PostIncDecOperationExpression	m_nondurable_level ++		751020	0					
ANR	751025	Identifier	m_nondurable_level		751020	0					
ANR	751026	IncDec	++		751020	1					
ANR	751027	ReturnType	int		751020	1					
ANR	751028	Identifier	ClassAdLog :: IncNondurableCommitLevel		751020	2					
ANR	751029	ParameterList			751020	3					
ANR	751030	CFGEntryNode	ENTRY		751020		True				
ANR	751031	CFGExitNode	EXIT		751020		True				
ANR	751032	Symbol	m_nondurable_level		751020						
ANR	751033	Function	ClassAdLog :: DecNondurableCommitLevel	356:0:10641:10864							
ANR	751034	FunctionDef	ClassAdLog :: DecNondurableCommitLevel (int old_level)		751033	0					
ANR	751035	CompoundStatement		358:0:10698:10864	751033	0					
ANR	751036	IfStatement	if ( -- m_nondurable_level != old_level )		751033	0					
ANR	751037	Condition	-- m_nondurable_level != old_level	359:5:10705:10737	751033	0	True				
ANR	751038	EqualityExpression	-- m_nondurable_level != old_level		751033	0		!=			
ANR	751039	UnaryExpression	-- m_nondurable_level		751033	0					
ANR	751040	IncDec	--		751033	0					
ANR	751041	Identifier	m_nondurable_level		751033	1					
ANR	751042	Identifier	old_level		751033	1					
ANR	751043	CompoundStatement		2:41:42:42	751033	1					
ANR	751044	ExpressionStatement	"EXCEPT ( ""ClassAdLog::DecNondurableCommitLevel(%d) with existing level %d\\n"" , old_level , m_nondurable_level + 1 )"	360:2:10745:10859	751033	0	True				
ANR	751045	CallExpression	"EXCEPT ( ""ClassAdLog::DecNondurableCommitLevel(%d) with existing level %d\\n"" , old_level , m_nondurable_level + 1 )"		751033	0					
ANR	751046	Callee	EXCEPT		751033	0					
ANR	751047	Identifier	EXCEPT		751033	0					
ANR	751048	ArgumentList	"""ClassAdLog::DecNondurableCommitLevel(%d) with existing level %d\\n"""		751033	1					
ANR	751049	Argument	"""ClassAdLog::DecNondurableCommitLevel(%d) with existing level %d\\n"""		751033	0					
ANR	751050	PrimaryExpression	"""ClassAdLog::DecNondurableCommitLevel(%d) with existing level %d\\n"""		751033	0					
ANR	751051	Argument	old_level		751033	1					
ANR	751052	Identifier	old_level		751033	0					
ANR	751053	Argument	m_nondurable_level + 1		751033	2					
ANR	751054	AdditiveExpression	m_nondurable_level + 1		751033	0		+			
ANR	751055	Identifier	m_nondurable_level		751033	0					
ANR	751056	PrimaryExpression	1		751033	1					
ANR	751057	ReturnType	void		751033	1					
ANR	751058	Identifier	ClassAdLog :: DecNondurableCommitLevel		751033	2					
ANR	751059	ParameterList	int old_level		751033	3					
ANR	751060	Parameter	int old_level	357:37:10683:10695	751033	0	True				
ANR	751061	ParameterType	int		751033	0					
ANR	751062	Identifier	old_level		751033	1					
ANR	751063	CFGEntryNode	ENTRY		751033		True				
ANR	751064	CFGExitNode	EXIT		751033		True				
ANR	751065	Symbol	old_level		751033						
ANR	751066	Symbol	m_nondurable_level		751033						
ANR	751067	Function	ClassAdLog :: BeginTransaction	365:0:10867:10976							
ANR	751068	FunctionDef	ClassAdLog :: BeginTransaction ()		751067	0					
ANR	751069	CompoundStatement		367:0:10903:10976	751067	0					
ANR	751070	ExpressionStatement	ASSERT ( ! active_transaction )	368:1:10906:10933	751067	0	True				
ANR	751071	CallExpression	ASSERT ( ! active_transaction )		751067	0					
ANR	751072	Callee	ASSERT		751067	0					
ANR	751073	Identifier	ASSERT		751067	0					
ANR	751074	ArgumentList	! active_transaction		751067	1					
ANR	751075	Argument	! active_transaction		751067	0					
ANR	751076	UnaryOperationExpression	! active_transaction		751067	0					
ANR	751077	UnaryOperator	!		751067	0					
ANR	751078	Identifier	active_transaction		751067	1					
ANR	751079	ExpressionStatement	active_transaction = new Transaction ( )	369:1:10936:10974	751067	1	True				
ANR	751080	AssignmentExpression	active_transaction = new Transaction ( )		751067	0		=			
ANR	751081	Identifier	active_transaction		751067	0					
ANR	751082	UnaryExpression	new Transaction ( )		751067	1					
ANR	751083	ReturnType	void		751067	1					
ANR	751084	Identifier	ClassAdLog :: BeginTransaction		751067	2					
ANR	751085	ParameterList			751067	3					
ANR	751086	CFGEntryNode	ENTRY		751067		True				
ANR	751087	CFGExitNode	EXIT		751067		True				
ANR	751088	Symbol	active_transaction		751067						
ANR	751089	Function	ClassAdLog :: AbortTransaction	372:0:10979:11254							
ANR	751090	FunctionDef	ClassAdLog :: AbortTransaction ()		751089	0					
ANR	751091	CompoundStatement		374:0:11015:11254	751089	0					
ANR	751092	IfStatement	if ( active_transaction )		751089	0					
ANR	751093	Condition	active_transaction	377:5:11141:11158	751089	0	True				
ANR	751094	Identifier	active_transaction		751089	0					
ANR	751095	CompoundStatement		4:25:145:145	751089	1					
ANR	751096	Statement	delete	378:2:11165:11170	751089	0	True				
ANR	751097	ExpressionStatement	active_transaction	378:9:11172:11190	751089	1	True				
ANR	751098	Identifier	active_transaction		751089	0					
ANR	751099	ExpressionStatement	active_transaction = NULL	379:2:11194:11219	751089	2	True				
ANR	751100	AssignmentExpression	active_transaction = NULL		751089	0		=			
ANR	751101	Identifier	active_transaction		751089	0					
ANR	751102	Identifier	NULL		751089	1					
ANR	751103	ReturnStatement	return true ;	380:2:11223:11234	751089	3	True				
ANR	751104	Identifier	true		751089	0					
ANR	751105	ReturnStatement	return false ;	382:1:11240:11252	751089	1	True				
ANR	751106	Identifier	false		751089	0					
ANR	751107	ReturnType	bool		751089	1					
ANR	751108	Identifier	ClassAdLog :: AbortTransaction		751089	2					
ANR	751109	ParameterList			751089	3					
ANR	751110	CFGEntryNode	ENTRY		751089		True				
ANR	751111	CFGExitNode	EXIT		751089		True				
ANR	751112	Symbol	NULL		751089						
ANR	751113	Symbol	true		751089						
ANR	751114	Symbol	false		751089						
ANR	751115	Symbol	active_transaction		751089						
ANR	751116	Function	ClassAdLog :: CommitTransaction	385:0:11257:11755							
ANR	751117	FunctionDef	ClassAdLog :: CommitTransaction ()		751116	0					
ANR	751118	CompoundStatement		387:0:11294:11755	751116	0					
ANR	751119	IfStatement	if ( ! active_transaction )		751116	0					
ANR	751120	Condition	! active_transaction	390:5:11420:11438	751116	0	True				
ANR	751121	UnaryOperationExpression	! active_transaction		751116	0					
ANR	751122	UnaryOperator	!		751116	0					
ANR	751123	Identifier	active_transaction		751116	1					
ANR	751124	ReturnStatement	return ;	390:26:11441:11447	751116	1	True				
ANR	751125	IfStatement	if ( ! active_transaction -> EmptyTransaction ( ) )		751116	1					
ANR	751126	Condition	! active_transaction -> EmptyTransaction ( )	391:5:11454:11492	751116	0	True				
ANR	751127	UnaryOperationExpression	! active_transaction -> EmptyTransaction ( )		751116	0					
ANR	751128	UnaryOperator	!		751116	0					
ANR	751129	CallExpression	active_transaction -> EmptyTransaction ( )		751116	1					
ANR	751130	Callee	active_transaction -> EmptyTransaction		751116	0					
ANR	751131	PtrMemberAccess	active_transaction -> EmptyTransaction		751116	0					
ANR	751132	Identifier	active_transaction		751116	0					
ANR	751133	Identifier	EmptyTransaction		751116	1					
ANR	751134	ArgumentList			751116	1					
ANR	751135	CompoundStatement		8:2:292:332	751116	1					
ANR	751136	Statement	LogEndTransaction	392:2:11499:11515	751116	0	True				
ANR	751137	Statement	*	392:20:11517:11517	751116	1	True				
ANR	751138	Statement	log	392:21:11518:11520	751116	2	True				
ANR	751139	Statement	=	392:25:11522:11522	751116	3	True				
ANR	751140	Statement	new	392:27:11524:11526	751116	4	True				
ANR	751141	ExpressionStatement	LogEndTransaction	392:31:11528:11545	751116	5	True				
ANR	751142	Identifier	LogEndTransaction		751116	0					
ANR	751143	ExpressionStatement	active_transaction -> AppendLog ( log )	393:2:11549:11583	751116	6	True				
ANR	751144	CallExpression	active_transaction -> AppendLog ( log )		751116	0					
ANR	751145	Callee	active_transaction -> AppendLog		751116	0					
ANR	751146	PtrMemberAccess	active_transaction -> AppendLog		751116	0					
ANR	751147	Identifier	active_transaction		751116	0					
ANR	751148	Identifier	AppendLog		751116	1					
ANR	751149	ArgumentList	log		751116	1					
ANR	751150	Argument	log		751116	0					
ANR	751151	Identifier	log		751116	0					
ANR	751152	IdentifierDeclStatement	bool nondurable = m_nondurable_level > 0 ;	394:2:11587:11627	751116	7	True				
ANR	751153	IdentifierDecl	nondurable = m_nondurable_level > 0		751116	0					
ANR	751154	IdentifierDeclType	bool		751116	0					
ANR	751155	Identifier	nondurable		751116	1					
ANR	751156	AssignmentExpression	nondurable = m_nondurable_level > 0		751116	2		=			
ANR	751157	Identifier	nondurable		751116	0					
ANR	751158	RelationalExpression	m_nondurable_level > 0		751116	1		>			
ANR	751159	Identifier	m_nondurable_level		751116	0					
ANR	751160	PrimaryExpression	0		751116	1					
ANR	751161	ExpressionStatement	"active_transaction -> Commit ( log_fp , ( void * ) & table , nondurable )"	395:2:11631:11694	751116	8	True				
ANR	751162	CallExpression	"active_transaction -> Commit ( log_fp , ( void * ) & table , nondurable )"		751116	0					
ANR	751163	Callee	active_transaction -> Commit		751116	0					
ANR	751164	PtrMemberAccess	active_transaction -> Commit		751116	0					
ANR	751165	Identifier	active_transaction		751116	0					
ANR	751166	Identifier	Commit		751116	1					
ANR	751167	ArgumentList	log_fp		751116	1					
ANR	751168	Argument	log_fp		751116	0					
ANR	751169	Identifier	log_fp		751116	0					
ANR	751170	Argument	( void * ) & table		751116	1					
ANR	751171	CastExpression	( void * ) & table		751116	0					
ANR	751172	CastTarget	void *		751116	0					
ANR	751173	UnaryOperationExpression	& table		751116	1					
ANR	751174	UnaryOperator	&		751116	0					
ANR	751175	Identifier	table		751116	1					
ANR	751176	Argument	nondurable		751116	2					
ANR	751177	Identifier	nondurable		751116	0					
ANR	751178	Statement	delete	397:1:11700:11705	751116	2	True				
ANR	751179	ExpressionStatement	active_transaction	397:8:11707:11725	751116	3	True				
ANR	751180	Identifier	active_transaction		751116	0					
ANR	751181	ExpressionStatement	active_transaction = NULL	398:1:11728:11753	751116	4	True				
ANR	751182	AssignmentExpression	active_transaction = NULL		751116	0		=			
ANR	751183	Identifier	active_transaction		751116	0					
ANR	751184	Identifier	NULL		751116	1					
ANR	751185	ReturnType	void		751116	1					
ANR	751186	Identifier	ClassAdLog :: CommitTransaction		751116	2					
ANR	751187	ParameterList			751116	3					
ANR	751188	CFGEntryNode	ENTRY		751116		True				
ANR	751189	CFGExitNode	EXIT		751116		True				
ANR	751190	Symbol	log_fp		751116						
ANR	751191	Symbol	active_transaction -> EmptyTransaction		751116						
ANR	751192	Symbol	NULL		751116						
ANR	751193	Symbol	log		751116						
ANR	751194	Symbol	m_nondurable_level		751116						
ANR	751195	Symbol	nondurable		751116						
ANR	751196	Symbol	* active_transaction		751116						
ANR	751197	Symbol	& table		751116						
ANR	751198	Symbol	active_transaction		751116						
ANR	751199	Function	ClassAdLog :: CommitNondurableTransaction	401:0:11758:11914							
ANR	751200	FunctionDef	ClassAdLog :: CommitNondurableTransaction ()		751199	0					
ANR	751201	CompoundStatement		403:0:11805:11914	751199	0					
ANR	751202	IdentifierDeclStatement	int old_level = IncNondurableCommitLevel ( ) ;	404:1:11808:11850	751199	0	True				
ANR	751203	IdentifierDecl	old_level = IncNondurableCommitLevel ( )		751199	0					
ANR	751204	IdentifierDeclType	int		751199	0					
ANR	751205	Identifier	old_level		751199	1					
ANR	751206	AssignmentExpression	old_level = IncNondurableCommitLevel ( )		751199	2		=			
ANR	751207	Identifier	old_level		751199	0					
ANR	751208	CallExpression	IncNondurableCommitLevel ( )		751199	1					
ANR	751209	Callee	IncNondurableCommitLevel		751199	0					
ANR	751210	Identifier	IncNondurableCommitLevel		751199	0					
ANR	751211	ArgumentList			751199	1					
ANR	751212	ExpressionStatement	CommitTransaction ( )	405:1:11853:11872	751199	1	True				
ANR	751213	CallExpression	CommitTransaction ( )		751199	0					
ANR	751214	Callee	CommitTransaction		751199	0					
ANR	751215	Identifier	CommitTransaction		751199	0					
ANR	751216	ArgumentList			751199	1					
ANR	751217	ExpressionStatement	DecNondurableCommitLevel ( old_level )	406:1:11875:11912	751199	2	True				
ANR	751218	CallExpression	DecNondurableCommitLevel ( old_level )		751199	0					
ANR	751219	Callee	DecNondurableCommitLevel		751199	0					
ANR	751220	Identifier	DecNondurableCommitLevel		751199	0					
ANR	751221	ArgumentList	old_level		751199	1					
ANR	751222	Argument	old_level		751199	0					
ANR	751223	Identifier	old_level		751199	0					
ANR	751224	ReturnType	void		751199	1					
ANR	751225	Identifier	ClassAdLog :: CommitNondurableTransaction		751199	2					
ANR	751226	ParameterList			751199	3					
ANR	751227	CFGEntryNode	ENTRY		751199		True				
ANR	751228	CFGExitNode	EXIT		751199		True				
ANR	751229	Symbol	old_level		751199						
ANR	751230	Symbol	IncNondurableCommitLevel		751199						
ANR	751231	Function	ClassAdLog :: AdExistsInTableOrTransaction	409:0:11917:12651							
ANR	751232	FunctionDef	ClassAdLog :: AdExistsInTableOrTransaction (const char * key)		751231	0					
ANR	751233	CompoundStatement		411:0:11980:12651	751231	0					
ANR	751234	IdentifierDeclStatement	bool adexists = false ;	412:1:11983:12004	751231	0	True				
ANR	751235	IdentifierDecl	adexists = false		751231	0					
ANR	751236	IdentifierDeclType	bool		751231	0					
ANR	751237	Identifier	adexists		751231	1					
ANR	751238	AssignmentExpression	adexists = false		751231	2		=			
ANR	751239	Identifier	false		751231	0					
ANR	751240	Identifier	false		751231	1					
ANR	751241	IdentifierDeclStatement	HashKey hkey ( key ) ;	415:1:12064:12081	751231	1	True				
ANR	751242	IdentifierDecl	hkey ( key )		751231	0					
ANR	751243	IdentifierDeclType	HashKey		751231	0					
ANR	751244	Identifier	hkey		751231	1					
ANR	751245	Identifier	key		751231	2					
ANR	751246	IdentifierDeclStatement	ClassAd * ad = NULL ;	416:1:12084:12102	751231	2	True				
ANR	751247	IdentifierDecl	* ad = NULL		751231	0					
ANR	751248	IdentifierDeclType	ClassAd *		751231	0					
ANR	751249	Identifier	ad		751231	1					
ANR	751250	AssignmentExpression	* ad = NULL		751231	2		=			
ANR	751251	Identifier	NULL		751231	0					
ANR	751252	Identifier	NULL		751231	1					
ANR	751253	ExpressionStatement	"table . lookup ( hkey , ad )"	417:1:12105:12127	751231	3	True				
ANR	751254	CallExpression	"table . lookup ( hkey , ad )"		751231	0					
ANR	751255	Callee	table . lookup		751231	0					
ANR	751256	MemberAccess	table . lookup		751231	0					
ANR	751257	Identifier	table		751231	0					
ANR	751258	Identifier	lookup		751231	1					
ANR	751259	ArgumentList	hkey		751231	1					
ANR	751260	Argument	hkey		751231	0					
ANR	751261	Identifier	hkey		751231	0					
ANR	751262	Argument	ad		751231	1					
ANR	751263	Identifier	ad		751231	0					
ANR	751264	IfStatement	if ( ad )		751231	4					
ANR	751265	Condition	ad	418:6:12135:12136	751231	0	True				
ANR	751266	Identifier	ad		751231	0					
ANR	751267	CompoundStatement		8:11:159:159	751231	1					
ANR	751268	ExpressionStatement	adexists = true	419:2:12144:12159	751231	0	True				
ANR	751269	AssignmentExpression	adexists = true		751231	0		=			
ANR	751270	Identifier	adexists		751231	0					
ANR	751271	Identifier	true		751231	1					
ANR	751272	IfStatement	if ( ! active_transaction )		751231	5					
ANR	751273	Condition	! active_transaction	423:5:12222:12240	751231	0	True				
ANR	751274	UnaryOperationExpression	! active_transaction		751231	0					
ANR	751275	UnaryOperator	!		751231	0					
ANR	751276	Identifier	active_transaction		751231	1					
ANR	751277	CompoundStatement		13:26:262:262	751231	1					
ANR	751278	ReturnStatement	return adexists ;	424:2:12247:12262	751231	0	True				
ANR	751279	Identifier	adexists		751231	0					
ANR	751280	ForStatement	for ( LogRecord * log = active_transaction -> FirstEntry ( key ) ; log ; log = active_transaction -> NextEntry ( ) )		751231	6					
ANR	751281	ForInit	LogRecord * log = active_transaction -> FirstEntry ( key ) ;	428:6:12327:12379	751231	0	True				
ANR	751282	IdentifierDeclStatement	LogRecord * log = active_transaction -> FirstEntry ( key ) ;		751231	0					
ANR	751283	IdentifierDecl	* log = active_transaction -> FirstEntry ( key )		751231	0					
ANR	751284	IdentifierDeclType	LogRecord *		751231	0					
ANR	751285	Identifier	log		751231	1					
ANR	751286	AssignmentExpression	* log = active_transaction -> FirstEntry ( key )		751231	2		=			
ANR	751287	Identifier	log		751231	0					
ANR	751288	CallExpression	active_transaction -> FirstEntry ( key )		751231	1					
ANR	751289	Callee	active_transaction -> FirstEntry		751231	0					
ANR	751290	PtrMemberAccess	active_transaction -> FirstEntry		751231	0					
ANR	751291	Identifier	active_transaction		751231	0					
ANR	751292	Identifier	FirstEntry		751231	1					
ANR	751293	ArgumentList	key		751231	1					
ANR	751294	Argument	key		751231	0					
ANR	751295	Identifier	key		751231	0					
ANR	751296	Condition	log	428:60:12381:12383	751231	1	True				
ANR	751297	Identifier	log		751231	0					
ANR	751298	AssignmentExpression	log = active_transaction -> NextEntry ( )	429:3:12390:12426	751231	2	True	=			
ANR	751299	Identifier	log		751231	0					
ANR	751300	CallExpression	active_transaction -> NextEntry ( )		751231	1					
ANR	751301	Callee	active_transaction -> NextEntry		751231	0					
ANR	751302	PtrMemberAccess	active_transaction -> NextEntry		751231	0					
ANR	751303	Identifier	active_transaction		751231	0					
ANR	751304	Identifier	NextEntry		751231	1					
ANR	751305	ArgumentList			751231	1					
ANR	751306	CompoundStatement		20:1:450:450	751231	3					
ANR	751307	SwitchStatement	switch ( log -> get_op_type ( ) )		751231	0					
ANR	751308	Condition	log -> get_op_type ( )	431:10:12443:12460	751231	0	True				
ANR	751309	CallExpression	log -> get_op_type ( )		751231	0					
ANR	751310	Callee	log -> get_op_type		751231	0					
ANR	751311	PtrMemberAccess	log -> get_op_type		751231	0					
ANR	751312	Identifier	log		751231	0					
ANR	751313	Identifier	get_op_type		751231	1					
ANR	751314	ArgumentList			751231	1					
ANR	751315	CompoundStatement		21:30:482:482	751231	1					
ANR	751316	Label	case CondorLogOp_NewClassAd :	432:2:12467:12494	751231	0	True				
ANR	751317	Identifier	CondorLogOp_NewClassAd		751231	0					
ANR	751318	CompoundStatement		22:31:515:515	751231	1					
ANR	751319	ExpressionStatement	adexists = true	433:3:12501:12516	751231	0	True				
ANR	751320	AssignmentExpression	adexists = true		751231	0		=			
ANR	751321	Identifier	adexists		751231	0					
ANR	751322	Identifier	true		751231	1					
ANR	751323	BreakStatement	break ;	434:3:12521:12526	751231	1	True				
ANR	751324	Label	case CondorLogOp_DestroyClassAd :	436:2:12534:12565	751231	2	True				
ANR	751325	Identifier	CondorLogOp_DestroyClassAd		751231	0					
ANR	751326	CompoundStatement		26:35:586:586	751231	3					
ANR	751327	ExpressionStatement	adexists = false	437:3:12572:12588	751231	0	True				
ANR	751328	AssignmentExpression	adexists = false		751231	0		=			
ANR	751329	Identifier	adexists		751231	0					
ANR	751330	Identifier	false		751231	1					
ANR	751331	BreakStatement	break ;	438:3:12593:12598	751231	1	True				
ANR	751332	Label	default :	440:2:12606:12613	751231	4	True				
ANR	751333	Identifier	default		751231	0					
ANR	751334	BreakStatement	break ;	441:3:12618:12623	751231	5	True				
ANR	751335	ReturnStatement	return adexists ;	445:1:12634:12649	751231	7	True				
ANR	751336	Identifier	adexists		751231	0					
ANR	751337	ReturnType	bool		751231	1					
ANR	751338	Identifier	ClassAdLog :: AdExistsInTableOrTransaction		751231	2					
ANR	751339	ParameterList	const char * key		751231	3					
ANR	751340	Parameter	const char * key	410:41:11963:11977	751231	0	True				
ANR	751341	ParameterType	const char *		751231	0					
ANR	751342	Identifier	key		751231	1					
ANR	751343	CFGEntryNode	ENTRY		751231		True				
ANR	751344	CFGExitNode	EXIT		751231		True				
ANR	751345	Symbol	ad		751231						
ANR	751346	Symbol	NULL		751231						
ANR	751347	Symbol	log		751231						
ANR	751348	Symbol	hkey		751231						
ANR	751349	Symbol	false		751231						
ANR	751350	Symbol	log -> get_op_type		751231						
ANR	751351	Symbol	active_transaction		751231						
ANR	751352	Symbol	active_transaction -> NextEntry		751231						
ANR	751353	Symbol	* log		751231						
ANR	751354	Symbol	active_transaction -> FirstEntry		751231						
ANR	751355	Symbol	adexists		751231						
ANR	751356	Symbol	true		751231						
ANR	751357	Symbol	* active_transaction		751231						
ANR	751358	Symbol	key		751231						
ANR	751359	Symbol	table		751231						
ANR	751360	Function	ClassAdLog :: LookupInTransaction	449:0:12655:12834							
ANR	751361	FunctionDef	"ClassAdLog :: LookupInTransaction (const char * key , const char * name , char * & val)"		751360	0					
ANR	751362	CompoundStatement		451:0:12739:12834	751360	0					
ANR	751363	IdentifierDeclStatement	ClassAd * ad = NULL ;	452:1:12742:12760	751360	0	True				
ANR	751364	IdentifierDecl	* ad = NULL		751360	0					
ANR	751365	IdentifierDeclType	ClassAd *		751360	0					
ANR	751366	Identifier	ad		751360	1					
ANR	751367	AssignmentExpression	* ad = NULL		751360	2		=			
ANR	751368	Identifier	NULL		751360	0					
ANR	751369	Identifier	NULL		751360	1					
ANR	751370	IfStatement	if ( ! name )		751360	1					
ANR	751371	Condition	! name	454:5:12768:12772	751360	0	True				
ANR	751372	UnaryOperationExpression	! name		751360	0					
ANR	751373	UnaryOperator	!		751360	0					
ANR	751374	Identifier	name		751360	1					
ANR	751375	ReturnStatement	return 0 ;	454:12:12775:12783	751360	1	True				
ANR	751376	PrimaryExpression	0		751360	0					
ANR	751377	ReturnStatement	"return ExamineTransaction ( key , name , val , ad ) ;"	456:1:12787:12832	751360	2	True				
ANR	751378	CallExpression	"ExamineTransaction ( key , name , val , ad )"		751360	0					
ANR	751379	Callee	ExamineTransaction		751360	0					
ANR	751380	Identifier	ExamineTransaction		751360	0					
ANR	751381	ArgumentList	key		751360	1					
ANR	751382	Argument	key		751360	0					
ANR	751383	Identifier	key		751360	0					
ANR	751384	Argument	name		751360	1					
ANR	751385	Identifier	name		751360	0					
ANR	751386	Argument	val		751360	2					
ANR	751387	Identifier	val		751360	0					
ANR	751388	Argument	ad		751360	3					
ANR	751389	Identifier	ad		751360	0					
ANR	751390	ReturnType	int		751360	1					
ANR	751391	Identifier	ClassAdLog :: LookupInTransaction		751360	2					
ANR	751392	ParameterList	"const char * key , const char * name , char * & val"		751360	3					
ANR	751393	Parameter	const char * key	450:32:12692:12706	751360	0	True				
ANR	751394	ParameterType	const char *		751360	0					
ANR	751395	Identifier	key		751360	1					
ANR	751396	Parameter	const char * name	450:49:12709:12724	751360	1	True				
ANR	751397	ParameterType	const char *		751360	0					
ANR	751398	Identifier	name		751360	1					
ANR	751399	Parameter	char * & val	450:67:12727:12736	751360	2	True				
ANR	751400	ParameterType	char * &		751360	0					
ANR	751401	Identifier	val		751360	1					
ANR	751402	CFGEntryNode	ENTRY		751360		True				
ANR	751403	CFGExitNode	EXIT		751360		True				
ANR	751404	Symbol	val		751360						
ANR	751405	Symbol	NULL		751360						
ANR	751406	Symbol	ad		751360						
ANR	751407	Symbol	ExamineTransaction		751360						
ANR	751408	Symbol	name		751360						
ANR	751409	Symbol	key		751360						
ANR	751410	Function	ClassAdLog :: AddAttrsFromTransaction	459:0:12837:13379							
ANR	751411	FunctionDef	"ClassAdLog :: AddAttrsFromTransaction (const char * key , ClassAd & ad)"		751410	0					
ANR	751412	CompoundStatement		461:0:12908:13379	751410	0					
ANR	751413	IdentifierDeclStatement	char * val = NULL ;	462:1:12911:12927	751410	0	True				
ANR	751414	IdentifierDecl	* val = NULL		751410	0					
ANR	751415	IdentifierDeclType	char *		751410	0					
ANR	751416	Identifier	val		751410	1					
ANR	751417	AssignmentExpression	* val = NULL		751410	2		=			
ANR	751418	Identifier	NULL		751410	0					
ANR	751419	Identifier	NULL		751410	1					
ANR	751420	IdentifierDeclStatement	ClassAd * attrsFromTransaction ;	463:1:12930:12959	751410	1	True				
ANR	751421	IdentifierDecl	* attrsFromTransaction		751410	0					
ANR	751422	IdentifierDeclType	ClassAd *		751410	0					
ANR	751423	Identifier	attrsFromTransaction		751410	1					
ANR	751424	IfStatement	if ( ! key )		751410	2					
ANR	751425	Condition	! key	465:6:12968:12971	751410	0	True				
ANR	751426	UnaryOperationExpression	! key		751410	0					
ANR	751427	UnaryOperator	!		751410	0					
ANR	751428	Identifier	key		751410	1					
ANR	751429	CompoundStatement		5:13:66:66	751410	1					
ANR	751430	ReturnStatement	return false ;	466:2:12979:12991	751410	0	True				
ANR	751431	Identifier	false		751410	0					
ANR	751432	IfStatement	if ( ! active_transaction )		751410	3					
ANR	751433	Condition	! active_transaction	470:5:13054:13072	751410	0	True				
ANR	751434	UnaryOperationExpression	! active_transaction		751410	0					
ANR	751435	UnaryOperator	!		751410	0					
ANR	751436	Identifier	active_transaction		751410	1					
ANR	751437	CompoundStatement		10:26:166:166	751410	1					
ANR	751438	ReturnStatement	return false ;	471:2:13079:13091	751410	0	True				
ANR	751439	Identifier	false		751410	0					
ANR	751440	ExpressionStatement	attrsFromTransaction = NULL	475:1:13151:13178	751410	4	True				
ANR	751441	AssignmentExpression	attrsFromTransaction = NULL		751410	0		=			
ANR	751442	Identifier	attrsFromTransaction		751410	0					
ANR	751443	Identifier	NULL		751410	1					
ANR	751444	ExpressionStatement	"ExamineTransaction ( key , NULL , val , attrsFromTransaction )"	476:1:13181:13234	751410	5	True				
ANR	751445	CallExpression	"ExamineTransaction ( key , NULL , val , attrsFromTransaction )"		751410	0					
ANR	751446	Callee	ExamineTransaction		751410	0					
ANR	751447	Identifier	ExamineTransaction		751410	0					
ANR	751448	ArgumentList	key		751410	1					
ANR	751449	Argument	key		751410	0					
ANR	751450	Identifier	key		751410	0					
ANR	751451	Argument	NULL		751410	1					
ANR	751452	Identifier	NULL		751410	0					
ANR	751453	Argument	val		751410	2					
ANR	751454	Identifier	val		751410	0					
ANR	751455	Argument	attrsFromTransaction		751410	3					
ANR	751456	Identifier	attrsFromTransaction		751410	0					
ANR	751457	IfStatement	if ( attrsFromTransaction )		751410	6					
ANR	751458	Condition	attrsFromTransaction	477:6:13242:13261	751410	0	True				
ANR	751459	Identifier	attrsFromTransaction		751410	0					
ANR	751460	CompoundStatement		17:29:356:356	751410	1					
ANR	751461	ExpressionStatement	"MergeClassAds ( & ad , attrsFromTransaction , true )"	478:2:13269:13313	751410	0	True				
ANR	751462	CallExpression	"MergeClassAds ( & ad , attrsFromTransaction , true )"		751410	0					
ANR	751463	Callee	MergeClassAds		751410	0					
ANR	751464	Identifier	MergeClassAds		751410	0					
ANR	751465	ArgumentList	& ad		751410	1					
ANR	751466	Argument	& ad		751410	0					
ANR	751467	UnaryOperationExpression	& ad		751410	0					
ANR	751468	UnaryOperator	&		751410	0					
ANR	751469	Identifier	ad		751410	1					
ANR	751470	Argument	attrsFromTransaction		751410	1					
ANR	751471	Identifier	attrsFromTransaction		751410	0					
ANR	751472	Argument	true		751410	2					
ANR	751473	Identifier	true		751410	0					
ANR	751474	Statement	delete	479:2:13317:13322	751410	1	True				
ANR	751475	ExpressionStatement	attrsFromTransaction	479:9:13324:13344	751410	2	True				
ANR	751476	Identifier	attrsFromTransaction		751410	0					
ANR	751477	ReturnStatement	return true ;	480:2:13348:13359	751410	3	True				
ANR	751478	Identifier	true		751410	0					
ANR	751479	ReturnStatement	return false ;	482:1:13365:13377	751410	7	True				
ANR	751480	Identifier	false		751410	0					
ANR	751481	ReturnType	bool		751410	1					
ANR	751482	Identifier	ClassAdLog :: AddAttrsFromTransaction		751410	2					
ANR	751483	ParameterList	"const char * key , ClassAd & ad"		751410	3					
ANR	751484	Parameter	const char * key	460:36:12878:12892	751410	0	True				
ANR	751485	ParameterType	const char *		751410	0					
ANR	751486	Identifier	key		751410	1					
ANR	751487	Parameter	ClassAd & ad	460:53:12895:12905	751410	1	True				
ANR	751488	ParameterType	ClassAd &		751410	0					
ANR	751489	Identifier	ad		751410	1					
ANR	751490	CFGEntryNode	ENTRY		751410		True				
ANR	751491	CFGExitNode	EXIT		751410		True				
ANR	751492	Symbol	val		751410						
ANR	751493	Symbol	ad		751410						
ANR	751494	Symbol	NULL		751410						
ANR	751495	Symbol	false		751410						
ANR	751496	Symbol	true		751410						
ANR	751497	Symbol	& ad		751410						
ANR	751498	Symbol	active_transaction		751410						
ANR	751499	Symbol	key		751410						
ANR	751500	Symbol	attrsFromTransaction		751410						
ANR	751501	Function	ClassAdLog :: ExamineTransaction	485:0:13382:15113							
ANR	751502	FunctionDef	"ClassAdLog :: ExamineTransaction (const char * key , const char * name , char * & val , ClassAd * & ad)"		751501	0					
ANR	751503	CompoundStatement		487:0:13478:15113	751501	0					
ANR	751504	IdentifierDeclStatement	"bool AdDeleted = false , ValDeleted = false , ValFound = false ;"	488:1:13481:13535	751501	0	True				
ANR	751505	IdentifierDecl	AdDeleted = false		751501	0					
ANR	751506	IdentifierDeclType	bool		751501	0					
ANR	751507	Identifier	AdDeleted		751501	1					
ANR	751508	AssignmentExpression	AdDeleted = false		751501	2		=			
ANR	751509	Identifier	false		751501	0					
ANR	751510	Identifier	false		751501	1					
ANR	751511	IdentifierDecl	ValDeleted = false		751501	1					
ANR	751512	IdentifierDeclType	bool		751501	0					
ANR	751513	Identifier	ValDeleted		751501	1					
ANR	751514	AssignmentExpression	ValDeleted = false		751501	2		=			
ANR	751515	Identifier	false		751501	0					
ANR	751516	Identifier	false		751501	1					
ANR	751517	IdentifierDecl	ValFound = false		751501	2					
ANR	751518	IdentifierDeclType	bool		751501	0					
ANR	751519	Identifier	ValFound		751501	1					
ANR	751520	AssignmentExpression	ValFound = false		751501	2		=			
ANR	751521	Identifier	false		751501	0					
ANR	751522	Identifier	false		751501	1					
ANR	751523	IdentifierDeclStatement	int attrsAdded = 0 ;	489:1:13538:13556	751501	1	True				
ANR	751524	IdentifierDecl	attrsAdded = 0		751501	0					
ANR	751525	IdentifierDeclType	int		751501	0					
ANR	751526	Identifier	attrsAdded		751501	1					
ANR	751527	AssignmentExpression	attrsAdded = 0		751501	2		=			
ANR	751528	Identifier	attrsAdded		751501	0					
ANR	751529	PrimaryExpression	0		751501	1					
ANR	751530	IfStatement	if ( ! active_transaction )		751501	2					
ANR	751531	Condition	! active_transaction	491:5:13564:13582	751501	0	True				
ANR	751532	UnaryOperationExpression	! active_transaction		751501	0					
ANR	751533	UnaryOperator	!		751501	0					
ANR	751534	Identifier	active_transaction		751501	1					
ANR	751535	ReturnStatement	return 0 ;	491:26:13585:13593	751501	1	True				
ANR	751536	PrimaryExpression	0		751501	0					
ANR	751537	ForStatement	for ( LogRecord * log = active_transaction -> FirstEntry ( key ) ; log ; log = active_transaction -> NextEntry ( ) )		751501	3					
ANR	751538	ForInit	LogRecord * log = active_transaction -> FirstEntry ( key ) ;	493:6:13602:13654	751501	0	True				
ANR	751539	IdentifierDeclStatement	LogRecord * log = active_transaction -> FirstEntry ( key ) ;		751501	0					
ANR	751540	IdentifierDecl	* log = active_transaction -> FirstEntry ( key )		751501	0					
ANR	751541	IdentifierDeclType	LogRecord *		751501	0					
ANR	751542	Identifier	log		751501	1					
ANR	751543	AssignmentExpression	* log = active_transaction -> FirstEntry ( key )		751501	2		=			
ANR	751544	Identifier	log		751501	0					
ANR	751545	CallExpression	active_transaction -> FirstEntry ( key )		751501	1					
ANR	751546	Callee	active_transaction -> FirstEntry		751501	0					
ANR	751547	PtrMemberAccess	active_transaction -> FirstEntry		751501	0					
ANR	751548	Identifier	active_transaction		751501	0					
ANR	751549	Identifier	FirstEntry		751501	1					
ANR	751550	ArgumentList	key		751501	1					
ANR	751551	Argument	key		751501	0					
ANR	751552	Identifier	key		751501	0					
ANR	751553	Condition	log	493:60:13656:13658	751501	1	True				
ANR	751554	Identifier	log		751501	0					
ANR	751555	AssignmentExpression	log = active_transaction -> NextEntry ( )	494:3:13665:13701	751501	2	True	=			
ANR	751556	Identifier	log		751501	0					
ANR	751557	CallExpression	active_transaction -> NextEntry ( )		751501	1					
ANR	751558	Callee	active_transaction -> NextEntry		751501	0					
ANR	751559	PtrMemberAccess	active_transaction -> NextEntry		751501	0					
ANR	751560	Identifier	active_transaction		751501	0					
ANR	751561	Identifier	NextEntry		751501	1					
ANR	751562	ArgumentList			751501	1					
ANR	751563	CompoundStatement		8:42:225:225	751501	3					
ANR	751564	SwitchStatement	switch ( log -> get_op_type ( ) )		751501	0					
ANR	751565	Condition	log -> get_op_type ( )	496:10:13717:13734	751501	0	True				
ANR	751566	CallExpression	log -> get_op_type ( )		751501	0					
ANR	751567	Callee	log -> get_op_type		751501	0					
ANR	751568	PtrMemberAccess	log -> get_op_type		751501	0					
ANR	751569	Identifier	log		751501	0					
ANR	751570	Identifier	get_op_type		751501	1					
ANR	751571	ArgumentList			751501	1					
ANR	751572	CompoundStatement		10:30:258:258	751501	1					
ANR	751573	Label	case CondorLogOp_NewClassAd :	497:2:13741:13768	751501	0	True				
ANR	751574	Identifier	CondorLogOp_NewClassAd		751501	0					
ANR	751575	CompoundStatement		11:31:291:291	751501	1					
ANR	751576	IfStatement	if ( AdDeleted )		751501	0					
ANR	751577	Condition	AdDeleted	498:7:13779:13787	751501	0	True				
ANR	751578	Identifier	AdDeleted		751501	0					
ANR	751579	CompoundStatement		12:18:311:311	751501	1					
ANR	751580	ExpressionStatement	AdDeleted = false	499:4:13844:13861	751501	0	True				
ANR	751581	AssignmentExpression	AdDeleted = false		751501	0		=			
ANR	751582	Identifier	AdDeleted		751501	0					
ANR	751583	Identifier	false		751501	1					
ANR	751584	BreakStatement	break ;	501:3:13871:13876	751501	1	True				
ANR	751585	Label	case CondorLogOp_DestroyClassAd :	503:2:13884:13915	751501	2	True				
ANR	751586	Identifier	CondorLogOp_DestroyClassAd		751501	0					
ANR	751587	CompoundStatement		17:35:438:438	751501	3					
ANR	751588	ExpressionStatement	AdDeleted = true	504:3:13922:13938	751501	0	True				
ANR	751589	AssignmentExpression	AdDeleted = true		751501	0		=			
ANR	751590	Identifier	AdDeleted		751501	0					
ANR	751591	Identifier	true		751501	1					
ANR	751592	IfStatement	if ( ad )		751501	1					
ANR	751593	Condition	ad	505:8:13948:13949	751501	0	True				
ANR	751594	Identifier	ad		751501	0					
ANR	751595	CompoundStatement		19:13:474:474	751501	1					
ANR	751596	Statement	delete	506:4:13959:13964	751501	0	True				
ANR	751597	ExpressionStatement	ad	506:11:13966:13968	751501	1	True				
ANR	751598	Identifier	ad		751501	0					
ANR	751599	ExpressionStatement	ad = NULL	507:4:13974:13983	751501	2	True				
ANR	751600	AssignmentExpression	ad = NULL		751501	0		=			
ANR	751601	Identifier	ad		751501	0					
ANR	751602	Identifier	NULL		751501	1					
ANR	751603	ExpressionStatement	attrsAdded = 0	508:4:13989:14003	751501	3	True				
ANR	751604	AssignmentExpression	attrsAdded = 0		751501	0		=			
ANR	751605	Identifier	attrsAdded		751501	0					
ANR	751606	PrimaryExpression	0		751501	1					
ANR	751607	BreakStatement	break ;	510:3:14013:14018	751501	2	True				
ANR	751608	Label	case CondorLogOp_SetAttribute :	512:2:14026:14055	751501	4	True				
ANR	751609	Identifier	CondorLogOp_SetAttribute		751501	0					
ANR	751610	CompoundStatement		27:3:583:639	751501	5					
ANR	751611	IdentifierDeclStatement	char const * lname = ( ( LogSetAttribute * ) log ) -> get_name ( ) ;	513:3:14062:14118	751501	0	True				
ANR	751612	IdentifierDecl	* lname = ( ( LogSetAttribute * ) log ) -> get_name ( )		751501	0					
ANR	751613	IdentifierDeclType	char const *		751501	0					
ANR	751614	Identifier	lname		751501	1					
ANR	751615	AssignmentExpression	* lname = ( ( LogSetAttribute * ) log ) -> get_name ( )		751501	2		=			
ANR	751616	Identifier	lname		751501	0					
ANR	751617	CallExpression	( ( LogSetAttribute * ) log ) -> get_name ( )		751501	1					
ANR	751618	Callee	( ( LogSetAttribute * ) log ) -> get_name		751501	0					
ANR	751619	PtrMemberAccess	( ( LogSetAttribute * ) log ) -> get_name		751501	0					
ANR	751620	CastExpression	( LogSetAttribute * ) log		751501	0					
ANR	751621	CastTarget	LogSetAttribute *		751501	0					
ANR	751622	Identifier	log		751501	1					
ANR	751623	Identifier	get_name		751501	1					
ANR	751624	ArgumentList			751501	1					
ANR	751625	IfStatement	"if ( name && strcasecmp ( lname , name ) == 0 )"		751501	1					
ANR	751626	Condition	"name && strcasecmp ( lname , name ) == 0"	514:7:14127:14162	751501	0	True				
ANR	751627	AndExpression	"name && strcasecmp ( lname , name ) == 0"		751501	0		&&			
ANR	751628	Identifier	name		751501	0					
ANR	751629	EqualityExpression	"strcasecmp ( lname , name ) == 0"		751501	1		==			
ANR	751630	CallExpression	"strcasecmp ( lname , name )"		751501	0					
ANR	751631	Callee	strcasecmp		751501	0					
ANR	751632	Identifier	strcasecmp		751501	0					
ANR	751633	ArgumentList	lname		751501	1					
ANR	751634	Argument	lname		751501	0					
ANR	751635	Identifier	lname		751501	0					
ANR	751636	Argument	name		751501	1					
ANR	751637	Identifier	name		751501	0					
ANR	751638	PrimaryExpression	0		751501	1					
ANR	751639	CompoundStatement		28:45:686:686	751501	1					
ANR	751640	IfStatement	if ( ValFound )		751501	0					
ANR	751641	Condition	ValFound	515:8:14175:14182	751501	0	True				
ANR	751642	Identifier	ValFound		751501	0					
ANR	751643	CompoundStatement		29:18:706:706	751501	1					
ANR	751644	ExpressionStatement	free ( val )	516:5:14192:14201	751501	0	True				
ANR	751645	CallExpression	free ( val )		751501	0					
ANR	751646	Callee	free		751501	0					
ANR	751647	Identifier	free		751501	0					
ANR	751648	ArgumentList	val		751501	1					
ANR	751649	Argument	val		751501	0					
ANR	751650	Identifier	val		751501	0					
ANR	751651	ExpressionStatement	val = strdup ( ( ( LogSetAttribute * ) log ) -> get_value ( ) )	518:4:14213:14264	751501	1	True				
ANR	751652	AssignmentExpression	val = strdup ( ( ( LogSetAttribute * ) log ) -> get_value ( ) )		751501	0		=			
ANR	751653	Identifier	val		751501	0					
ANR	751654	CallExpression	strdup ( ( ( LogSetAttribute * ) log ) -> get_value ( ) )		751501	1					
ANR	751655	Callee	strdup		751501	0					
ANR	751656	Identifier	strdup		751501	0					
ANR	751657	ArgumentList	( ( LogSetAttribute * ) log ) -> get_value ( )		751501	1					
ANR	751658	Argument	( ( LogSetAttribute * ) log ) -> get_value ( )		751501	0					
ANR	751659	CallExpression	( ( LogSetAttribute * ) log ) -> get_value ( )		751501	0					
ANR	751660	Callee	( ( LogSetAttribute * ) log ) -> get_value		751501	0					
ANR	751661	PtrMemberAccess	( ( LogSetAttribute * ) log ) -> get_value		751501	0					
ANR	751662	CastExpression	( LogSetAttribute * ) log		751501	0					
ANR	751663	CastTarget	LogSetAttribute *		751501	0					
ANR	751664	Identifier	log		751501	1					
ANR	751665	Identifier	get_value		751501	1					
ANR	751666	ArgumentList			751501	1					
ANR	751667	ExpressionStatement	ValFound = true	519:4:14270:14285	751501	2	True				
ANR	751668	AssignmentExpression	ValFound = true		751501	0		=			
ANR	751669	Identifier	ValFound		751501	0					
ANR	751670	Identifier	true		751501	1					
ANR	751671	ExpressionStatement	ValDeleted = false	520:4:14291:14309	751501	3	True				
ANR	751672	AssignmentExpression	ValDeleted = false		751501	0		=			
ANR	751673	Identifier	ValDeleted		751501	0					
ANR	751674	Identifier	false		751501	1					
ANR	751675	IfStatement	if ( ! name )		751501	2					
ANR	751676	Condition	! name	522:7:14323:14327	751501	0	True				
ANR	751677	UnaryOperationExpression	! name		751501	0					
ANR	751678	UnaryOperator	!		751501	0					
ANR	751679	Identifier	name		751501	1					
ANR	751680	CompoundStatement		36:14:851:851	751501	1					
ANR	751681	IfStatement	if ( ! ad )		751501	0					
ANR	751682	Condition	! ad	523:9:14341:14343	751501	0	True				
ANR	751683	UnaryOperationExpression	! ad		751501	0					
ANR	751684	UnaryOperator	!		751501	0					
ANR	751685	Identifier	ad		751501	1					
ANR	751686	CompoundStatement		37:15:868:868	751501	1					
ANR	751687	Statement	ad	524:5:14354:14355	751501	0	True				
ANR	751688	Statement	=	524:8:14357:14357	751501	1	True				
ANR	751689	Statement	new	524:10:14359:14361	751501	2	True				
ANR	751690	ExpressionStatement	ClassAd	524:14:14363:14370	751501	3	True				
ANR	751691	Identifier	ClassAd		751501	0					
ANR	751692	ExpressionStatement	ASSERT ( ad )	525:5:14377:14387	751501	4	True				
ANR	751693	CallExpression	ASSERT ( ad )		751501	0					
ANR	751694	Callee	ASSERT		751501	0					
ANR	751695	Identifier	ASSERT		751501	0					
ANR	751696	ArgumentList	ad		751501	1					
ANR	751697	Argument	ad		751501	0					
ANR	751698	Identifier	ad		751501	0					
ANR	751699	IfStatement	if ( val )		751501	1					
ANR	751700	Condition	val	527:8:14403:14405	751501	0	True				
ANR	751701	Identifier	val		751501	0					
ANR	751702	CompoundStatement		41:13:929:929	751501	1					
ANR	751703	ExpressionStatement	free ( val )	528:5:14415:14424	751501	0	True				
ANR	751704	CallExpression	free ( val )		751501	0					
ANR	751705	Callee	free		751501	0					
ANR	751706	Identifier	free		751501	0					
ANR	751707	ArgumentList	val		751501	1					
ANR	751708	Argument	val		751501	0					
ANR	751709	Identifier	val		751501	0					
ANR	751710	ExpressionStatement	val = NULL	529:5:14431:14441	751501	1	True				
ANR	751711	AssignmentExpression	val = NULL		751501	0		=			
ANR	751712	Identifier	val		751501	0					
ANR	751713	Identifier	NULL		751501	1					
ANR	751714	ExpressionStatement	val = strdup ( ( ( LogSetAttribute * ) log ) -> get_value ( ) )	531:4:14453:14504	751501	2	True				
ANR	751715	AssignmentExpression	val = strdup ( ( ( LogSetAttribute * ) log ) -> get_value ( ) )		751501	0		=			
ANR	751716	Identifier	val		751501	0					
ANR	751717	CallExpression	strdup ( ( ( LogSetAttribute * ) log ) -> get_value ( ) )		751501	1					
ANR	751718	Callee	strdup		751501	0					
ANR	751719	Identifier	strdup		751501	0					
ANR	751720	ArgumentList	( ( LogSetAttribute * ) log ) -> get_value ( )		751501	1					
ANR	751721	Argument	( ( LogSetAttribute * ) log ) -> get_value ( )		751501	0					
ANR	751722	CallExpression	( ( LogSetAttribute * ) log ) -> get_value ( )		751501	0					
ANR	751723	Callee	( ( LogSetAttribute * ) log ) -> get_value		751501	0					
ANR	751724	PtrMemberAccess	( ( LogSetAttribute * ) log ) -> get_value		751501	0					
ANR	751725	CastExpression	( LogSetAttribute * ) log		751501	0					
ANR	751726	CastTarget	LogSetAttribute *		751501	0					
ANR	751727	Identifier	log		751501	1					
ANR	751728	Identifier	get_value		751501	1					
ANR	751729	ArgumentList			751501	1					
ANR	751730	ExpressionStatement	"ad -> AssignExpr ( lname , val )"	532:4:14510:14535	751501	3	True				
ANR	751731	CallExpression	"ad -> AssignExpr ( lname , val )"		751501	0					
ANR	751732	Callee	ad -> AssignExpr		751501	0					
ANR	751733	PtrMemberAccess	ad -> AssignExpr		751501	0					
ANR	751734	Identifier	ad		751501	0					
ANR	751735	Identifier	AssignExpr		751501	1					
ANR	751736	ArgumentList	lname		751501	1					
ANR	751737	Argument	lname		751501	0					
ANR	751738	Identifier	lname		751501	0					
ANR	751739	Argument	val		751501	1					
ANR	751740	Identifier	val		751501	0					
ANR	751741	ExpressionStatement	attrsAdded ++	533:4:14541:14553	751501	4	True				
ANR	751742	PostIncDecOperationExpression	attrsAdded ++		751501	0					
ANR	751743	Identifier	attrsAdded		751501	0					
ANR	751744	IncDec	++		751501	1					
ANR	751745	BreakStatement	break ;	535:3:14563:14568	751501	3	True				
ANR	751746	Label	case CondorLogOp_DeleteAttribute :	537:2:14576:14608	751501	6	True				
ANR	751747	Identifier	CondorLogOp_DeleteAttribute		751501	0					
ANR	751748	CompoundStatement		52:3:1136:1195	751501	7					
ANR	751749	IdentifierDeclStatement	char const * lname = ( ( LogDeleteAttribute * ) log ) -> get_name ( ) ;	538:3:14615:14674	751501	0	True				
ANR	751750	IdentifierDecl	* lname = ( ( LogDeleteAttribute * ) log ) -> get_name ( )		751501	0					
ANR	751751	IdentifierDeclType	char const *		751501	0					
ANR	751752	Identifier	lname		751501	1					
ANR	751753	AssignmentExpression	* lname = ( ( LogDeleteAttribute * ) log ) -> get_name ( )		751501	2		=			
ANR	751754	Identifier	lname		751501	0					
ANR	751755	CallExpression	( ( LogDeleteAttribute * ) log ) -> get_name ( )		751501	1					
ANR	751756	Callee	( ( LogDeleteAttribute * ) log ) -> get_name		751501	0					
ANR	751757	PtrMemberAccess	( ( LogDeleteAttribute * ) log ) -> get_name		751501	0					
ANR	751758	CastExpression	( LogDeleteAttribute * ) log		751501	0					
ANR	751759	CastTarget	LogDeleteAttribute *		751501	0					
ANR	751760	Identifier	log		751501	1					
ANR	751761	Identifier	get_name		751501	1					
ANR	751762	ArgumentList			751501	1					
ANR	751763	IfStatement	"if ( name && strcasecmp ( lname , name ) == 0 )"		751501	1					
ANR	751764	Condition	"name && strcasecmp ( lname , name ) == 0"	539:7:14683:14718	751501	0	True				
ANR	751765	AndExpression	"name && strcasecmp ( lname , name ) == 0"		751501	0		&&			
ANR	751766	Identifier	name		751501	0					
ANR	751767	EqualityExpression	"strcasecmp ( lname , name ) == 0"		751501	1		==			
ANR	751768	CallExpression	"strcasecmp ( lname , name )"		751501	0					
ANR	751769	Callee	strcasecmp		751501	0					
ANR	751770	Identifier	strcasecmp		751501	0					
ANR	751771	ArgumentList	lname		751501	1					
ANR	751772	Argument	lname		751501	0					
ANR	751773	Identifier	lname		751501	0					
ANR	751774	Argument	name		751501	1					
ANR	751775	Identifier	name		751501	0					
ANR	751776	PrimaryExpression	0		751501	1					
ANR	751777	CompoundStatement		53:45:1242:1242	751501	1					
ANR	751778	IfStatement	if ( ValFound )		751501	0					
ANR	751779	Condition	ValFound	540:8:14731:14738	751501	0	True				
ANR	751780	Identifier	ValFound		751501	0					
ANR	751781	CompoundStatement		54:18:1262:1262	751501	1					
ANR	751782	ExpressionStatement	free ( val )	541:5:14748:14757	751501	0	True				
ANR	751783	CallExpression	free ( val )		751501	0					
ANR	751784	Callee	free		751501	0					
ANR	751785	Identifier	free		751501	0					
ANR	751786	ArgumentList	val		751501	1					
ANR	751787	Argument	val		751501	0					
ANR	751788	Identifier	val		751501	0					
ANR	751789	ExpressionStatement	ValFound = false	543:4:14769:14785	751501	1	True				
ANR	751790	AssignmentExpression	ValFound = false		751501	0		=			
ANR	751791	Identifier	ValFound		751501	0					
ANR	751792	Identifier	false		751501	1					
ANR	751793	ExpressionStatement	ValDeleted = true	544:4:14791:14808	751501	2	True				
ANR	751794	AssignmentExpression	ValDeleted = true		751501	0		=			
ANR	751795	Identifier	ValDeleted		751501	0					
ANR	751796	Identifier	true		751501	1					
ANR	751797	IfStatement	if ( ! name )		751501	2					
ANR	751798	Condition	! name	546:7:14822:14826	751501	0	True				
ANR	751799	UnaryOperationExpression	! name		751501	0					
ANR	751800	UnaryOperator	!		751501	0					
ANR	751801	Identifier	name		751501	1					
ANR	751802	CompoundStatement		60:14:1350:1350	751501	1					
ANR	751803	IfStatement	if ( ad )		751501	0					
ANR	751804	Condition	ad	547:8:14839:14840	751501	0	True				
ANR	751805	Identifier	ad		751501	0					
ANR	751806	CompoundStatement		61:12:1364:1364	751501	1					
ANR	751807	ExpressionStatement	ad -> Delete ( lname )	548:5:14850:14867	751501	0	True				
ANR	751808	CallExpression	ad -> Delete ( lname )		751501	0					
ANR	751809	Callee	ad -> Delete		751501	0					
ANR	751810	PtrMemberAccess	ad -> Delete		751501	0					
ANR	751811	Identifier	ad		751501	0					
ANR	751812	Identifier	Delete		751501	1					
ANR	751813	ArgumentList	lname		751501	1					
ANR	751814	Argument	lname		751501	0					
ANR	751815	Identifier	lname		751501	0					
ANR	751816	ExpressionStatement	attrsAdded --	549:5:14874:14886	751501	1	True				
ANR	751817	PostIncDecOperationExpression	attrsAdded --		751501	0					
ANR	751818	Identifier	attrsAdded		751501	0					
ANR	751819	IncDec	--		751501	1					
ANR	751820	BreakStatement	break ;	552:3:14902:14907	751501	3	True				
ANR	751821	Label	default :	554:2:14915:14922	751501	8	True				
ANR	751822	Identifier	default		751501	0					
ANR	751823	BreakStatement	break ;	555:3:14927:14932	751501	9	True				
ANR	751824	IfStatement	if ( name )		751501	4					
ANR	751825	Condition	name	559:6:14948:14951	751501	0	True				
ANR	751826	Identifier	name		751501	0					
ANR	751827	CompoundStatement		73:13:1476:1476	751501	1					
ANR	751828	IfStatement	if ( AdDeleted || ValDeleted )		751501	0					
ANR	751829	Condition	AdDeleted || ValDeleted	560:6:14963:14985	751501	0	True				
ANR	751830	OrExpression	AdDeleted || ValDeleted		751501	0		||			
ANR	751831	Identifier	AdDeleted		751501	0					
ANR	751832	Identifier	ValDeleted		751501	1					
ANR	751833	ReturnStatement	return - 1 ;	560:31:14988:14997	751501	1	True				
ANR	751834	UnaryOperationExpression	- 1		751501	0					
ANR	751835	UnaryOperator	-		751501	0					
ANR	751836	PrimaryExpression	1		751501	1					
ANR	751837	IfStatement	if ( ValFound )		751501	1					
ANR	751838	Condition	ValFound	561:6:15005:15012	751501	0	True				
ANR	751839	Identifier	ValFound		751501	0					
ANR	751840	ReturnStatement	return 1 ;	561:16:15015:15023	751501	1	True				
ANR	751841	PrimaryExpression	1		751501	0					
ANR	751842	ReturnStatement	return 0 ;	562:2:15027:15035	751501	2	True				
ANR	751843	PrimaryExpression	0		751501	0					
ANR	751844	ElseStatement	else		751501	0					
ANR	751845	CompoundStatement		77:8:1566:1566	751501	0					
ANR	751846	IfStatement	if ( attrsAdded < 0 )		751501	0					
ANR	751847	Condition	attrsAdded < 0	564:6:15053:15066	751501	0	True				
ANR	751848	RelationalExpression	attrsAdded < 0		751501	0		<			
ANR	751849	Identifier	attrsAdded		751501	0					
ANR	751850	PrimaryExpression	0		751501	1					
ANR	751851	CompoundStatement		78:23:1591:1591	751501	1					
ANR	751852	ReturnStatement	return 0 ;	565:3:15075:15083	751501	0	True				
ANR	751853	PrimaryExpression	0		751501	0					
ANR	751854	ReturnStatement	return attrsAdded ;	567:2:15091:15108	751501	1	True				
ANR	751855	Identifier	attrsAdded		751501	0					
ANR	751856	ReturnType	int		751501	1					
ANR	751857	Identifier	ClassAdLog :: ExamineTransaction		751501	2					
ANR	751858	ParameterList	"const char * key , const char * name , char * & val , ClassAd * & ad"		751501	3					
ANR	751859	Parameter	const char * key	486:31:13417:13431	751501	0	True				
ANR	751860	ParameterType	const char *		751501	0					
ANR	751861	Identifier	key		751501	1					
ANR	751862	Parameter	const char * name	486:48:13434:13449	751501	1	True				
ANR	751863	ParameterType	const char *		751501	0					
ANR	751864	Identifier	name		751501	1					
ANR	751865	Parameter	char * & val	486:66:13452:13461	751501	2	True				
ANR	751866	ParameterType	char * &		751501	0					
ANR	751867	Identifier	val		751501	1					
ANR	751868	Parameter	ClassAd * & ad	486:78:13464:13475	751501	3	True				
ANR	751869	ParameterType	ClassAd * &		751501	0					
ANR	751870	Identifier	ad		751501	1					
ANR	751871	CFGEntryNode	ENTRY		751501		True				
ANR	751872	CFGExitNode	EXIT		751501		True				
ANR	751873	Symbol	val		751501						
ANR	751874	Symbol	ad		751501						
ANR	751875	Symbol	ValDeleted		751501						
ANR	751876	Symbol	NULL		751501						
ANR	751877	Symbol	log		751501						
ANR	751878	Symbol	false		751501						
ANR	751879	Symbol	log -> get_op_type		751501						
ANR	751880	Symbol	( ( LogSetAttribute * ) log ) -> get_value		751501						
ANR	751881	Symbol	active_transaction		751501						
ANR	751882	Symbol	active_transaction -> NextEntry		751501						
ANR	751883	Symbol	AdDeleted		751501						
ANR	751884	Symbol	* log		751501						
ANR	751885	Symbol	lname		751501						
ANR	751886	Symbol	active_transaction -> FirstEntry		751501						
ANR	751887	Symbol	( ( LogSetAttribute * ) log ) -> get_name		751501						
ANR	751888	Symbol	name		751501						
ANR	751889	Symbol	true		751501						
ANR	751890	Symbol	( ( LogDeleteAttribute * ) log ) -> get_name		751501						
ANR	751891	Symbol	ValFound		751501						
ANR	751892	Symbol	* active_transaction		751501						
ANR	751893	Symbol	attrsAdded		751501						
ANR	751894	Symbol	strdup		751501						
ANR	751895	Symbol	strcasecmp		751501						
ANR	751896	Symbol	key		751501						
ANR	751897	Function	ClassAdLog :: getActiveTransaction	571:0:15116:15326							
ANR	751898	FunctionDef	ClassAdLog :: getActiveTransaction ()		751897	0					
ANR	751899	CompoundStatement		573:0:15165:15326	751897	0					
ANR	751900	IdentifierDeclStatement	Transaction * ret_value = active_transaction ;	574:1:15168:15211	751897	0	True				
ANR	751901	IdentifierDecl	* ret_value = active_transaction		751897	0					
ANR	751902	IdentifierDeclType	Transaction *		751897	0					
ANR	751903	Identifier	ret_value		751897	1					
ANR	751904	AssignmentExpression	* ret_value = active_transaction		751897	2		=			
ANR	751905	Identifier	active_transaction		751897	0					
ANR	751906	Identifier	active_transaction		751897	1					
ANR	751907	ExpressionStatement	active_transaction = NULL	575:1:15214:15239	751897	1	True				
ANR	751908	AssignmentExpression	active_transaction = NULL		751897	0		=			
ANR	751909	Identifier	active_transaction		751897	0					
ANR	751910	Identifier	NULL		751897	1					
ANR	751911	ReturnStatement	return ret_value ;	576:1:15308:15324	751897	2	True				
ANR	751912	Identifier	ret_value		751897	0					
ANR	751913	ReturnType	Transaction *		751897	1					
ANR	751914	Identifier	ClassAdLog :: getActiveTransaction		751897	2					
ANR	751915	ParameterList			751897	3					
ANR	751916	CFGEntryNode	ENTRY		751897		True				
ANR	751917	CFGExitNode	EXIT		751897		True				
ANR	751918	Symbol	NULL		751897						
ANR	751919	Symbol	ret_value		751897						
ANR	751920	Symbol	active_transaction		751897						
ANR	751921	Function	ClassAdLog :: setActiveTransaction	579:0:15329:15570							
ANR	751922	FunctionDef	ClassAdLog :: setActiveTransaction (Transaction * & transaction)		751921	0					
ANR	751923	CompoundStatement		581:0:15395:15570	751921	0					
ANR	751924	IfStatement	if ( active_transaction )		751921	0					
ANR	751925	Condition	active_transaction	582:6:15403:15420	751921	0	True				
ANR	751926	Identifier	active_transaction		751921	0					
ANR	751927	CompoundStatement		2:27:28:28	751921	1					
ANR	751928	ReturnStatement	return false ;	583:2:15428:15440	751921	0	True				
ANR	751929	Identifier	false		751921	0					
ANR	751930	ExpressionStatement	active_transaction = transaction	586:1:15447:15479	751921	1	True				
ANR	751931	AssignmentExpression	active_transaction = transaction		751921	0		=			
ANR	751932	Identifier	active_transaction		751921	0					
ANR	751933	Identifier	transaction		751921	1					
ANR	751934	ExpressionStatement	transaction = NULL	588:1:15483:15501	751921	2	True				
ANR	751935	AssignmentExpression	transaction = NULL		751921	0		=			
ANR	751936	Identifier	transaction		751921	0					
ANR	751937	Identifier	NULL		751921	1					
ANR	751938	ReturnStatement	return true ;	590:1:15557:15568	751921	3	True				
ANR	751939	Identifier	true		751921	0					
ANR	751940	ReturnType	bool		751921	1					
ANR	751941	Identifier	ClassAdLog :: setActiveTransaction		751921	2					
ANR	751942	ParameterList	Transaction * & transaction		751921	3					
ANR	751943	Parameter	Transaction * & transaction	580:33:15367:15392	751921	0	True				
ANR	751944	ParameterType	Transaction * &		751921	0					
ANR	751945	Identifier	transaction		751921	1					
ANR	751946	CFGEntryNode	ENTRY		751921		True				
ANR	751947	CFGExitNode	EXIT		751921		True				
ANR	751948	Symbol	NULL		751921						
ANR	751949	Symbol	false		751921						
ANR	751950	Symbol	true		751921						
ANR	751951	Symbol	active_transaction		751921						
ANR	751952	Symbol	transaction		751921						
ANR	751953	Function	ClassAdLog :: LogState	594:0:15574:17362							
ANR	751954	FunctionDef	ClassAdLog :: LogState (FILE * fp)		751953	0					
ANR	751955	CompoundStatement		596:0:15610:17362	751953	0					
ANR	751956	IdentifierDeclStatement	LogRecord * log = NULL ;	597:1:15613:15632	751953	0	True				
ANR	751957	IdentifierDecl	* log = NULL		751953	0					
ANR	751958	IdentifierDeclType	LogRecord *		751953	0					
ANR	751959	Identifier	log		751953	1					
ANR	751960	AssignmentExpression	* log = NULL		751953	2		=			
ANR	751961	Identifier	NULL		751953	0					
ANR	751962	Identifier	NULL		751953	1					
ANR	751963	IdentifierDeclStatement	ClassAd * ad = NULL ;	598:1:15635:15652	751953	1	True				
ANR	751964	IdentifierDecl	* ad = NULL		751953	0					
ANR	751965	IdentifierDeclType	ClassAd *		751953	0					
ANR	751966	Identifier	ad		751953	1					
ANR	751967	AssignmentExpression	* ad = NULL		751953	2		=			
ANR	751968	Identifier	NULL		751953	0					
ANR	751969	Identifier	NULL		751953	1					
ANR	751970	IdentifierDeclStatement	ExprTree * expr = NULL ;	599:1:15655:15674	751953	2	True				
ANR	751971	IdentifierDecl	* expr = NULL		751953	0					
ANR	751972	IdentifierDeclType	ExprTree *		751953	0					
ANR	751973	Identifier	expr		751953	1					
ANR	751974	AssignmentExpression	* expr = NULL		751953	2		=			
ANR	751975	Identifier	NULL		751953	0					
ANR	751976	Identifier	NULL		751953	1					
ANR	751977	IdentifierDeclStatement	HashKey hashval ;	600:1:15677:15693	751953	3	True				
ANR	751978	IdentifierDecl	hashval		751953	0					
ANR	751979	IdentifierDeclType	HashKey		751953	0					
ANR	751980	Identifier	hashval		751953	1					
ANR	751981	IdentifierDeclStatement	MyString key ;	601:1:15696:15708	751953	4	True				
ANR	751982	IdentifierDecl	key		751953	0					
ANR	751983	IdentifierDeclType	MyString		751953	0					
ANR	751984	Identifier	key		751953	1					
ANR	751985	IdentifierDeclStatement	const char * attr_name = NULL ;	602:1:15711:15739	751953	5	True				
ANR	751986	IdentifierDecl	* attr_name = NULL		751953	0					
ANR	751987	IdentifierDeclType	const char *		751953	0					
ANR	751988	Identifier	attr_name		751953	1					
ANR	751989	AssignmentExpression	* attr_name = NULL		751953	2		=			
ANR	751990	Identifier	NULL		751953	0					
ANR	751991	Identifier	NULL		751953	1					
ANR	751992	ExpressionStatement	"log = new LogHistoricalSequenceNumber ( historical_sequence_number , m_original_log_birthdate )"	605:1:15795:15888	751953	6	True				
ANR	751993	AssignmentExpression	"log = new LogHistoricalSequenceNumber ( historical_sequence_number , m_original_log_birthdate )"		751953	0		=			
ANR	751994	Identifier	log		751953	0					
ANR	751995	Expression	"historical_sequence_number , m_original_log_birthdate"		751953	1					
ANR	751996	Identifier	historical_sequence_number		751953	0					
ANR	751997	Identifier	m_original_log_birthdate		751953	1					
ANR	751998	IfStatement	if ( log -> Write ( fp ) < 0 )		751953	7					
ANR	751999	Condition	log -> Write ( fp ) < 0	606:5:15895:15912	751953	0	True				
ANR	752000	RelationalExpression	log -> Write ( fp ) < 0		751953	0		<			
ANR	752001	CallExpression	log -> Write ( fp )		751953	0					
ANR	752002	Callee	log -> Write		751953	0					
ANR	752003	PtrMemberAccess	log -> Write		751953	0					
ANR	752004	Identifier	log		751953	0					
ANR	752005	Identifier	Write		751953	1					
ANR	752006	ArgumentList	fp		751953	1					
ANR	752007	Argument	fp		751953	0					
ANR	752008	Identifier	fp		751953	0					
ANR	752009	PrimaryExpression	0		751953	1					
ANR	752010	CompoundStatement		11:25:304:304	751953	1					
ANR	752011	ExpressionStatement	"EXCEPT ( ""write to %s failed, errno = %d"" , logFilename ( ) , errno )"	607:2:15919:15981	751953	0	True				
ANR	752012	CallExpression	"EXCEPT ( ""write to %s failed, errno = %d"" , logFilename ( ) , errno )"		751953	0					
ANR	752013	Callee	EXCEPT		751953	0					
ANR	752014	Identifier	EXCEPT		751953	0					
ANR	752015	ArgumentList	"""write to %s failed, errno = %d"""		751953	1					
ANR	752016	Argument	"""write to %s failed, errno = %d"""		751953	0					
ANR	752017	PrimaryExpression	"""write to %s failed, errno = %d"""		751953	0					
ANR	752018	Argument	logFilename ( )		751953	1					
ANR	752019	CallExpression	logFilename ( )		751953	0					
ANR	752020	Callee	logFilename		751953	0					
ANR	752021	Identifier	logFilename		751953	0					
ANR	752022	ArgumentList			751953	1					
ANR	752023	Argument	errno		751953	2					
ANR	752024	Identifier	errno		751953	0					
ANR	752025	Statement	delete	609:1:15987:15992	751953	8	True				
ANR	752026	ExpressionStatement	log	609:8:15994:15997	751953	9	True				
ANR	752027	Identifier	log		751953	0					
ANR	752028	ExpressionStatement	table . startIterations ( )	611:1:16001:16024	751953	10	True				
ANR	752029	CallExpression	table . startIterations ( )		751953	0					
ANR	752030	Callee	table . startIterations		751953	0					
ANR	752031	MemberAccess	table . startIterations		751953	0					
ANR	752032	Identifier	table		751953	0					
ANR	752033	Identifier	startIterations		751953	1					
ANR	752034	ArgumentList			751953	1					
ANR	752035	WhileStatement	while ( table . iterate ( ad ) == 1 )		751953	11					
ANR	752036	Condition	table . iterate ( ad ) == 1	612:7:16033:16054	751953	0	True				
ANR	752037	EqualityExpression	table . iterate ( ad ) == 1		751953	0		==			
ANR	752038	CallExpression	table . iterate ( ad )		751953	0					
ANR	752039	Callee	table . iterate		751953	0					
ANR	752040	MemberAccess	table . iterate		751953	0					
ANR	752041	Identifier	table		751953	0					
ANR	752042	Identifier	iterate		751953	1					
ANR	752043	ArgumentList	ad		751953	1					
ANR	752044	Argument	ad		751953	0					
ANR	752045	Identifier	ad		751953	0					
ANR	752046	PrimaryExpression	1		751953	1					
ANR	752047	CompoundStatement		17:31:446:446	751953	1					
ANR	752048	ExpressionStatement	table . getCurrentKey ( hashval )	613:2:16061:16089	751953	0	True				
ANR	752049	CallExpression	table . getCurrentKey ( hashval )		751953	0					
ANR	752050	Callee	table . getCurrentKey		751953	0					
ANR	752051	MemberAccess	table . getCurrentKey		751953	0					
ANR	752052	Identifier	table		751953	0					
ANR	752053	Identifier	getCurrentKey		751953	1					
ANR	752054	ArgumentList	hashval		751953	1					
ANR	752055	Argument	hashval		751953	0					
ANR	752056	Identifier	hashval		751953	0					
ANR	752057	ExpressionStatement	hashval . sprint ( key )	614:2:16093:16112	751953	1	True				
ANR	752058	CallExpression	hashval . sprint ( key )		751953	0					
ANR	752059	Callee	hashval . sprint		751953	0					
ANR	752060	MemberAccess	hashval . sprint		751953	0					
ANR	752061	Identifier	hashval		751953	0					
ANR	752062	Identifier	sprint		751953	1					
ANR	752063	ArgumentList	key		751953	1					
ANR	752064	Argument	key		751953	0					
ANR	752065	Identifier	key		751953	0					
ANR	752066	ExpressionStatement	"log = new LogNewClassAd ( key . Value ( ) , ad -> GetMyTypeName ( ) , ad -> GetTargetTypeName ( ) )"	615:2:16116:16198	751953	2	True				
ANR	752067	AssignmentExpression	"log = new LogNewClassAd ( key . Value ( ) , ad -> GetMyTypeName ( ) , ad -> GetTargetTypeName ( ) )"		751953	0		=			
ANR	752068	Identifier	log		751953	0					
ANR	752069	Expression	"key . Value ( ) , ad -> GetMyTypeName ( ) , ad -> GetTargetTypeName ( )"		751953	1					
ANR	752070	CallExpression	key . Value ( )		751953	0					
ANR	752071	Callee	key . Value		751953	0					
ANR	752072	MemberAccess	key . Value		751953	0					
ANR	752073	Identifier	key		751953	0					
ANR	752074	Identifier	Value		751953	1					
ANR	752075	ArgumentList			751953	1					
ANR	752076	Expression	"ad -> GetMyTypeName ( ) , ad -> GetTargetTypeName ( )"		751953	1					
ANR	752077	CallExpression	ad -> GetMyTypeName ( )		751953	0					
ANR	752078	Callee	ad -> GetMyTypeName		751953	0					
ANR	752079	PtrMemberAccess	ad -> GetMyTypeName		751953	0					
ANR	752080	Identifier	ad		751953	0					
ANR	752081	Identifier	GetMyTypeName		751953	1					
ANR	752082	ArgumentList			751953	1					
ANR	752083	CallExpression	ad -> GetTargetTypeName ( )		751953	1					
ANR	752084	Callee	ad -> GetTargetTypeName		751953	0					
ANR	752085	PtrMemberAccess	ad -> GetTargetTypeName		751953	0					
ANR	752086	Identifier	ad		751953	0					
ANR	752087	Identifier	GetTargetTypeName		751953	1					
ANR	752088	ArgumentList			751953	1					
ANR	752089	IfStatement	if ( log -> Write ( fp ) < 0 )		751953	3					
ANR	752090	Condition	log -> Write ( fp ) < 0	616:6:16206:16223	751953	0	True				
ANR	752091	RelationalExpression	log -> Write ( fp ) < 0		751953	0		<			
ANR	752092	CallExpression	log -> Write ( fp )		751953	0					
ANR	752093	Callee	log -> Write		751953	0					
ANR	752094	PtrMemberAccess	log -> Write		751953	0					
ANR	752095	Identifier	log		751953	0					
ANR	752096	Identifier	Write		751953	1					
ANR	752097	ArgumentList	fp		751953	1					
ANR	752098	Argument	fp		751953	0					
ANR	752099	Identifier	fp		751953	0					
ANR	752100	PrimaryExpression	0		751953	1					
ANR	752101	CompoundStatement		21:26:615:615	751953	1					
ANR	752102	ExpressionStatement	"EXCEPT ( ""write to %s failed, errno = %d"" , logFilename ( ) , errno )"	617:3:16231:16293	751953	0	True				
ANR	752103	CallExpression	"EXCEPT ( ""write to %s failed, errno = %d"" , logFilename ( ) , errno )"		751953	0					
ANR	752104	Callee	EXCEPT		751953	0					
ANR	752105	Identifier	EXCEPT		751953	0					
ANR	752106	ArgumentList	"""write to %s failed, errno = %d"""		751953	1					
ANR	752107	Argument	"""write to %s failed, errno = %d"""		751953	0					
ANR	752108	PrimaryExpression	"""write to %s failed, errno = %d"""		751953	0					
ANR	752109	Argument	logFilename ( )		751953	1					
ANR	752110	CallExpression	logFilename ( )		751953	0					
ANR	752111	Callee	logFilename		751953	0					
ANR	752112	Identifier	logFilename		751953	0					
ANR	752113	ArgumentList			751953	1					
ANR	752114	Argument	errno		751953	2					
ANR	752115	Identifier	errno		751953	0					
ANR	752116	Statement	delete	619:2:16301:16306	751953	4	True				
ANR	752117	ExpressionStatement	log	619:9:16308:16311	751953	5	True				
ANR	752118	Identifier	log		751953	0					
ANR	752119	Statement	AttrList	622:2:16432:16439	751953	6	True				
ANR	752120	Statement	*	622:11:16441:16441	751953	7	True				
ANR	752121	Statement	chain	622:12:16442:16446	751953	8	True				
ANR	752122	Statement	=	622:18:16448:16448	751953	9	True				
ANR	752123	Statement	dynamic_cast	622:20:16450:16461	751953	10	True				
ANR	752124	Statement	<	622:32:16462:16462	751953	11	True				
ANR	752125	Statement	AttrList	622:33:16463:16470	751953	12	True				
ANR	752126	Statement	*	622:41:16471:16471	751953	13	True				
ANR	752127	Statement	>	622:42:16472:16472	751953	14	True				
ANR	752128	ExpressionStatement	ad -> GetChainedParentAd ( )	622:43:16473:16499	751953	15	True				
ANR	752129	CallExpression	ad -> GetChainedParentAd ( )		751953	0					
ANR	752130	Callee	ad -> GetChainedParentAd		751953	0					
ANR	752131	PtrMemberAccess	ad -> GetChainedParentAd		751953	0					
ANR	752132	Identifier	ad		751953	0					
ANR	752133	Identifier	GetChainedParentAd		751953	1					
ANR	752134	ArgumentList			751953	1					
ANR	752135	ExpressionStatement	ad -> Unchain ( )	623:2:16503:16516	751953	16	True				
ANR	752136	CallExpression	ad -> Unchain ( )		751953	0					
ANR	752137	Callee	ad -> Unchain		751953	0					
ANR	752138	PtrMemberAccess	ad -> Unchain		751953	0					
ANR	752139	Identifier	ad		751953	0					
ANR	752140	Identifier	Unchain		751953	1					
ANR	752141	ArgumentList			751953	1					
ANR	752142	ExpressionStatement	ad -> ResetName ( )	624:2:16520:16535	751953	17	True				
ANR	752143	CallExpression	ad -> ResetName ( )		751953	0					
ANR	752144	Callee	ad -> ResetName		751953	0					
ANR	752145	PtrMemberAccess	ad -> ResetName		751953	0					
ANR	752146	Identifier	ad		751953	0					
ANR	752147	Identifier	ResetName		751953	1					
ANR	752148	ArgumentList			751953	1					
ANR	752149	ExpressionStatement	attr_name = ad -> NextNameOriginal ( )	625:2:16539:16573	751953	18	True				
ANR	752150	AssignmentExpression	attr_name = ad -> NextNameOriginal ( )		751953	0		=			
ANR	752151	Identifier	attr_name		751953	0					
ANR	752152	CallExpression	ad -> NextNameOriginal ( )		751953	1					
ANR	752153	Callee	ad -> NextNameOriginal		751953	0					
ANR	752154	PtrMemberAccess	ad -> NextNameOriginal		751953	0					
ANR	752155	Identifier	ad		751953	0					
ANR	752156	Identifier	NextNameOriginal		751953	1					
ANR	752157	ArgumentList			751953	1					
ANR	752158	WhileStatement	while ( attr_name )		751953	19					
ANR	752159	Condition	attr_name	626:9:16584:16592	751953	0	True				
ANR	752160	Identifier	attr_name		751953	0					
ANR	752161	CompoundStatement		31:20:984:984	751953	1					
ANR	752162	ExpressionStatement	expr = ad -> LookupExpr ( attr_name )	627:3:16600:16632	751953	0	True				
ANR	752163	AssignmentExpression	expr = ad -> LookupExpr ( attr_name )		751953	0		=			
ANR	752164	Identifier	expr		751953	0					
ANR	752165	CallExpression	ad -> LookupExpr ( attr_name )		751953	1					
ANR	752166	Callee	ad -> LookupExpr		751953	0					
ANR	752167	PtrMemberAccess	ad -> LookupExpr		751953	0					
ANR	752168	Identifier	ad		751953	0					
ANR	752169	Identifier	LookupExpr		751953	1					
ANR	752170	ArgumentList	attr_name		751953	1					
ANR	752171	Argument	attr_name		751953	0					
ANR	752172	Identifier	attr_name		751953	0					
ANR	752173	IfStatement	if ( expr )		751953	1					
ANR	752174	Condition	expr	631:7:16789:16792	751953	0	True				
ANR	752175	Identifier	expr		751953	0					
ANR	752176	CompoundStatement		36:13:1184:1184	751953	1					
ANR	752177	ExpressionStatement	"log = new LogSetAttribute ( key . Value ( ) , attr_name , ExprTreeToString ( expr ) )"	632:4:16801:16886	751953	0	True				
ANR	752178	AssignmentExpression	"log = new LogSetAttribute ( key . Value ( ) , attr_name , ExprTreeToString ( expr ) )"		751953	0		=			
ANR	752179	Identifier	log		751953	0					
ANR	752180	Expression	"key . Value ( ) , attr_name , ExprTreeToString ( expr )"		751953	1					
ANR	752181	CallExpression	key . Value ( )		751953	0					
ANR	752182	Callee	key . Value		751953	0					
ANR	752183	MemberAccess	key . Value		751953	0					
ANR	752184	Identifier	key		751953	0					
ANR	752185	Identifier	Value		751953	1					
ANR	752186	ArgumentList			751953	1					
ANR	752187	Expression	"attr_name , ExprTreeToString ( expr )"		751953	1					
ANR	752188	Identifier	attr_name		751953	0					
ANR	752189	CallExpression	ExprTreeToString ( expr )		751953	1					
ANR	752190	Callee	ExprTreeToString		751953	0					
ANR	752191	Identifier	ExprTreeToString		751953	0					
ANR	752192	ArgumentList	expr		751953	1					
ANR	752193	Argument	expr		751953	0					
ANR	752194	Identifier	expr		751953	0					
ANR	752195	IfStatement	if ( log -> Write ( fp ) < 0 )		751953	1					
ANR	752196	Condition	log -> Write ( fp ) < 0	634:8:16896:16913	751953	0	True				
ANR	752197	RelationalExpression	log -> Write ( fp ) < 0		751953	0		<			
ANR	752198	CallExpression	log -> Write ( fp )		751953	0					
ANR	752199	Callee	log -> Write		751953	0					
ANR	752200	PtrMemberAccess	log -> Write		751953	0					
ANR	752201	Identifier	log		751953	0					
ANR	752202	Identifier	Write		751953	1					
ANR	752203	ArgumentList	fp		751953	1					
ANR	752204	Argument	fp		751953	0					
ANR	752205	Identifier	fp		751953	0					
ANR	752206	PrimaryExpression	0		751953	1					
ANR	752207	CompoundStatement		39:28:1305:1305	751953	1					
ANR	752208	ExpressionStatement	"EXCEPT ( ""write to %s failed, errno = %d"" , logFilename ( ) , errno )"	635:5:16923:16994	751953	0	True				
ANR	752209	CallExpression	"EXCEPT ( ""write to %s failed, errno = %d"" , logFilename ( ) , errno )"		751953	0					
ANR	752210	Callee	EXCEPT		751953	0					
ANR	752211	Identifier	EXCEPT		751953	0					
ANR	752212	ArgumentList	"""write to %s failed, errno = %d"""		751953	1					
ANR	752213	Argument	"""write to %s failed, errno = %d"""		751953	0					
ANR	752214	PrimaryExpression	"""write to %s failed, errno = %d"""		751953	0					
ANR	752215	Argument	logFilename ( )		751953	1					
ANR	752216	CallExpression	logFilename ( )		751953	0					
ANR	752217	Callee	logFilename		751953	0					
ANR	752218	Identifier	logFilename		751953	0					
ANR	752219	ArgumentList			751953	1					
ANR	752220	Argument	errno		751953	2					
ANR	752221	Identifier	errno		751953	0					
ANR	752222	Statement	delete	638:4:17006:17011	751953	2	True				
ANR	752223	ExpressionStatement	log	638:11:17013:17016	751953	3	True				
ANR	752224	Identifier	log		751953	0					
ANR	752225	ExpressionStatement	attr_name = ad -> NextNameOriginal ( )	640:3:17026:17060	751953	2	True				
ANR	752226	AssignmentExpression	attr_name = ad -> NextNameOriginal ( )		751953	0		=			
ANR	752227	Identifier	attr_name		751953	0					
ANR	752228	CallExpression	ad -> NextNameOriginal ( )		751953	1					
ANR	752229	Callee	ad -> NextNameOriginal		751953	0					
ANR	752230	PtrMemberAccess	ad -> NextNameOriginal		751953	0					
ANR	752231	Identifier	ad		751953	0					
ANR	752232	Identifier	NextNameOriginal		751953	1					
ANR	752233	ArgumentList			751953	1					
ANR	752234	ExpressionStatement	ad -> ChainToAd ( chain )	643:2:17137:17157	751953	20	True				
ANR	752235	CallExpression	ad -> ChainToAd ( chain )		751953	0					
ANR	752236	Callee	ad -> ChainToAd		751953	0					
ANR	752237	PtrMemberAccess	ad -> ChainToAd		751953	0					
ANR	752238	Identifier	ad		751953	0					
ANR	752239	Identifier	ChainToAd		751953	1					
ANR	752240	ArgumentList	chain		751953	1					
ANR	752241	Argument	chain		751953	0					
ANR	752242	Identifier	chain		751953	0					
ANR	752243	IfStatement	if ( fflush ( fp ) != 0 )		751953	12					
ANR	752244	Condition	fflush ( fp ) != 0	645:5:17167:17180	751953	0	True				
ANR	752245	EqualityExpression	fflush ( fp ) != 0		751953	0		!=			
ANR	752246	CallExpression	fflush ( fp )		751953	0					
ANR	752247	Callee	fflush		751953	0					
ANR	752248	Identifier	fflush		751953	0					
ANR	752249	ArgumentList	fp		751953	1					
ANR	752250	Argument	fp		751953	0					
ANR	752251	Identifier	fp		751953	0					
ANR	752252	PrimaryExpression	0		751953	1					
ANR	752253	CompoundStatement		50:20:1571:1571	751953	1					
ANR	752254	ExpressionStatement	"EXCEPT ( ""fflush of %s failed, errno = %d"" , logFilename ( ) , errno )"	646:3:17187:17250	751953	0	True				
ANR	752255	CallExpression	"EXCEPT ( ""fflush of %s failed, errno = %d"" , logFilename ( ) , errno )"		751953	0					
ANR	752256	Callee	EXCEPT		751953	0					
ANR	752257	Identifier	EXCEPT		751953	0					
ANR	752258	ArgumentList	"""fflush of %s failed, errno = %d"""		751953	1					
ANR	752259	Argument	"""fflush of %s failed, errno = %d"""		751953	0					
ANR	752260	PrimaryExpression	"""fflush of %s failed, errno = %d"""		751953	0					
ANR	752261	Argument	logFilename ( )		751953	1					
ANR	752262	CallExpression	logFilename ( )		751953	0					
ANR	752263	Callee	logFilename		751953	0					
ANR	752264	Identifier	logFilename		751953	0					
ANR	752265	ArgumentList			751953	1					
ANR	752266	Argument	errno		751953	2					
ANR	752267	Identifier	errno		751953	0					
ANR	752268	IfStatement	if ( condor_fsync ( fileno ( fp ) ) < 0 )		751953	13					
ANR	752269	Condition	condor_fsync ( fileno ( fp ) ) < 0	648:5:17260:17287	751953	0	True				
ANR	752270	RelationalExpression	condor_fsync ( fileno ( fp ) ) < 0		751953	0		<			
ANR	752271	CallExpression	condor_fsync ( fileno ( fp ) )		751953	0					
ANR	752272	Callee	condor_fsync		751953	0					
ANR	752273	Identifier	condor_fsync		751953	0					
ANR	752274	ArgumentList	fileno ( fp )		751953	1					
ANR	752275	Argument	fileno ( fp )		751953	0					
ANR	752276	CallExpression	fileno ( fp )		751953	0					
ANR	752277	Callee	fileno		751953	0					
ANR	752278	Identifier	fileno		751953	0					
ANR	752279	ArgumentList	fp		751953	1					
ANR	752280	Argument	fp		751953	0					
ANR	752281	Identifier	fp		751953	0					
ANR	752282	PrimaryExpression	0		751953	1					
ANR	752283	CompoundStatement		53:35:1679:1679	751953	1					
ANR	752284	ExpressionStatement	"EXCEPT ( ""fsync of %s failed, errno = %d"" , logFilename ( ) , errno )"	649:2:17294:17356	751953	0	True				
ANR	752285	CallExpression	"EXCEPT ( ""fsync of %s failed, errno = %d"" , logFilename ( ) , errno )"		751953	0					
ANR	752286	Callee	EXCEPT		751953	0					
ANR	752287	Identifier	EXCEPT		751953	0					
ANR	752288	ArgumentList	"""fsync of %s failed, errno = %d"""		751953	1					
ANR	752289	Argument	"""fsync of %s failed, errno = %d"""		751953	0					
ANR	752290	PrimaryExpression	"""fsync of %s failed, errno = %d"""		751953	0					
ANR	752291	Argument	logFilename ( )		751953	1					
ANR	752292	CallExpression	logFilename ( )		751953	0					
ANR	752293	Callee	logFilename		751953	0					
ANR	752294	Identifier	logFilename		751953	0					
ANR	752295	ArgumentList			751953	1					
ANR	752296	Argument	errno		751953	2					
ANR	752297	Identifier	errno		751953	0					
ANR	752298	ReturnType	void		751953	1					
ANR	752299	Identifier	ClassAdLog :: LogState		751953	2					
ANR	752300	ParameterList	FILE * fp		751953	3					
ANR	752301	Parameter	FILE * fp	595:21:15600:15607	751953	0	True				
ANR	752302	ParameterType	FILE *		751953	0					
ANR	752303	Identifier	fp		751953	1					
ANR	752304	CFGEntryNode	ENTRY		751953		True				
ANR	752305	CFGExitNode	EXIT		751953		True				
ANR	752306	Symbol	hashval		751953						
ANR	752307	Symbol	fflush		751953						
ANR	752308	Symbol	logFilename		751953						
ANR	752309	Symbol	log		751953						
ANR	752310	Symbol	m_original_log_birthdate		751953						
ANR	752311	Symbol	ExprTreeToString		751953						
ANR	752312	Symbol	fp		751953						
ANR	752313	Symbol	* ad		751953						
ANR	752314	Symbol	log -> Write		751953						
ANR	752315	Symbol	expr		751953						
ANR	752316	Symbol	ad -> NextNameOriginal		751953						
ANR	752317	Symbol	key		751953						
ANR	752318	Symbol	table		751953						
ANR	752319	Symbol	ad -> LookupExpr		751953						
ANR	752320	Symbol	errno		751953						
ANR	752321	Symbol	chain		751953						
ANR	752322	Symbol	NULL		751953						
ANR	752323	Symbol	ad		751953						
ANR	752324	Symbol	attr_name		751953						
ANR	752325	Symbol	ad -> GetTargetTypeName		751953						
ANR	752326	Symbol	* log		751953						
ANR	752327	Symbol	key . Value		751953						
ANR	752328	Symbol	fileno		751953						
ANR	752329	Symbol	ad -> GetMyTypeName		751953						
ANR	752330	Symbol	condor_fsync		751953						
ANR	752331	Symbol	table . iterate		751953						
ANR	752332	Symbol	historical_sequence_number		751953						
ANR	752333	Function	LogHistoricalSequenceNumber :: LogHistoricalSequenceNumber	653:0:17365:17645							
ANR	752334	FunctionDef	"LogHistoricalSequenceNumber :: LogHistoricalSequenceNumber (unsigned long historical_sequence_number_arg , time_t timestamp_arg)"		752333	0					
ANR	752335	CompoundStatement		654:0:17489:17645	752333	0					
ANR	752336	ExpressionStatement	op_type = CondorLogOp_LogHistoricalSequenceNumber	655:1:17492:17541	752333	0	True				
ANR	752337	AssignmentExpression	op_type = CondorLogOp_LogHistoricalSequenceNumber		752333	0		=			
ANR	752338	Identifier	op_type		752333	0					
ANR	752339	Identifier	CondorLogOp_LogHistoricalSequenceNumber		752333	1					
ANR	752340	ExpressionStatement	this -> historical_sequence_number = historical_sequence_number_arg	656:1:17544:17609	752333	1	True				
ANR	752341	AssignmentExpression	this -> historical_sequence_number = historical_sequence_number_arg		752333	0		=			
ANR	752342	PtrMemberAccess	this -> historical_sequence_number		752333	0					
ANR	752343	Identifier	this		752333	0					
ANR	752344	Identifier	historical_sequence_number		752333	1					
ANR	752345	Identifier	historical_sequence_number_arg		752333	1					
ANR	752346	ExpressionStatement	this -> timestamp = timestamp_arg	657:1:17612:17643	752333	2	True				
ANR	752347	AssignmentExpression	this -> timestamp = timestamp_arg		752333	0		=			
ANR	752348	PtrMemberAccess	this -> timestamp		752333	0					
ANR	752349	Identifier	this		752333	0					
ANR	752350	Identifier	timestamp		752333	1					
ANR	752351	Identifier	timestamp_arg		752333	1					
ANR	752352	Identifier	LogHistoricalSequenceNumber :: LogHistoricalSequenceNumber		752333	1					
ANR	752353	ParameterList	"unsigned long historical_sequence_number_arg , time_t timestamp_arg"		752333	2					
ANR	752354	Parameter	unsigned long historical_sequence_number_arg	653:57:17422:17465	752333	0	True				
ANR	752355	ParameterType	unsigned long		752333	0					
ANR	752356	Identifier	historical_sequence_number_arg		752333	1					
ANR	752357	Parameter	time_t timestamp_arg	653:102:17467:17486	752333	1	True				
ANR	752358	ParameterType	time_t		752333	0					
ANR	752359	Identifier	timestamp_arg		752333	1					
ANR	752360	CFGEntryNode	ENTRY		752333		True				
ANR	752361	CFGExitNode	EXIT		752333		True				
ANR	752362	Symbol	* this		752333						
ANR	752363	Symbol	timestamp_arg		752333						
ANR	752364	Symbol	historical_sequence_number_arg		752333						
ANR	752365	Symbol	this		752333						
ANR	752366	Symbol	CondorLogOp_LogHistoricalSequenceNumber		752333						
ANR	752367	Symbol	this -> timestamp		752333						
ANR	752368	Symbol	op_type		752333						
ANR	752369	Symbol	this -> historical_sequence_number		752333						
ANR	752370	Function	LogHistoricalSequenceNumber :: ReadBody	668:0:17909:18359							
ANR	752371	FunctionDef	LogHistoricalSequenceNumber :: ReadBody (FILE * fp)		752370	0					
ANR	752372	CompoundStatement		670:0:17961:18359	752370	0					
ANR	752373	IdentifierDeclStatement	"int rval , rval1 ;"	671:1:17964:17978	752370	0	True				
ANR	752374	IdentifierDecl	rval		752370	0					
ANR	752375	IdentifierDeclType	int		752370	0					
ANR	752376	Identifier	rval		752370	1					
ANR	752377	IdentifierDecl	rval1		752370	1					
ANR	752378	IdentifierDeclType	int		752370	0					
ANR	752379	Identifier	rval1		752370	1					
ANR	752380	IdentifierDeclStatement	char * buf = NULL ;	672:1:17981:17997	752370	1	True				
ANR	752381	IdentifierDecl	* buf = NULL		752370	0					
ANR	752382	IdentifierDeclType	char *		752370	0					
ANR	752383	Identifier	buf		752370	1					
ANR	752384	AssignmentExpression	* buf = NULL		752370	2		=			
ANR	752385	Identifier	NULL		752370	0					
ANR	752386	Identifier	NULL		752370	1					
ANR	752387	ExpressionStatement	"rval = readword ( fp , buf )"	673:1:18000:18024	752370	2	True				
ANR	752388	AssignmentExpression	"rval = readword ( fp , buf )"		752370	0		=			
ANR	752389	Identifier	rval		752370	0					
ANR	752390	CallExpression	"readword ( fp , buf )"		752370	1					
ANR	752391	Callee	readword		752370	0					
ANR	752392	Identifier	readword		752370	0					
ANR	752393	ArgumentList	fp		752370	1					
ANR	752394	Argument	fp		752370	0					
ANR	752395	Identifier	fp		752370	0					
ANR	752396	Argument	buf		752370	1					
ANR	752397	Identifier	buf		752370	0					
ANR	752398	IfStatement	if ( rval < 0 )		752370	3					
ANR	752399	Condition	rval < 0	674:5:18031:18038	752370	0	True				
ANR	752400	RelationalExpression	rval < 0		752370	0		<			
ANR	752401	Identifier	rval		752370	0					
ANR	752402	PrimaryExpression	0		752370	1					
ANR	752403	ReturnStatement	return rval ;	674:15:18041:18052	752370	1	True				
ANR	752404	Identifier	rval		752370	0					
ANR	752405	ExpressionStatement	"sscanf ( buf , ""%lu"" , & historical_sequence_number )"	675:1:18055:18100	752370	4	True				
ANR	752406	CallExpression	"sscanf ( buf , ""%lu"" , & historical_sequence_number )"		752370	0					
ANR	752407	Callee	sscanf		752370	0					
ANR	752408	Identifier	sscanf		752370	0					
ANR	752409	ArgumentList	buf		752370	1					
ANR	752410	Argument	buf		752370	0					
ANR	752411	Identifier	buf		752370	0					
ANR	752412	Argument	"""%lu"""		752370	1					
ANR	752413	PrimaryExpression	"""%lu"""		752370	0					
ANR	752414	Argument	& historical_sequence_number		752370	2					
ANR	752415	UnaryOperationExpression	& historical_sequence_number		752370	0					
ANR	752416	UnaryOperator	&		752370	0					
ANR	752417	Identifier	historical_sequence_number		752370	1					
ANR	752418	ExpressionStatement	free ( buf )	676:1:18103:18112	752370	5	True				
ANR	752419	CallExpression	free ( buf )		752370	0					
ANR	752420	Callee	free		752370	0					
ANR	752421	Identifier	free		752370	0					
ANR	752422	ArgumentList	buf		752370	1					
ANR	752423	Argument	buf		752370	0					
ANR	752424	Identifier	buf		752370	0					
ANR	752425	ExpressionStatement	"rval1 = readword ( fp , buf )"	678:1:18116:18141	752370	6	True				
ANR	752426	AssignmentExpression	"rval1 = readword ( fp , buf )"		752370	0		=			
ANR	752427	Identifier	rval1		752370	0					
ANR	752428	CallExpression	"readword ( fp , buf )"		752370	1					
ANR	752429	Callee	readword		752370	0					
ANR	752430	Identifier	readword		752370	0					
ANR	752431	ArgumentList	fp		752370	1					
ANR	752432	Argument	fp		752370	0					
ANR	752433	Identifier	fp		752370	0					
ANR	752434	Argument	buf		752370	1					
ANR	752435	Identifier	buf		752370	0					
ANR	752436	IfStatement	if ( rval1 < 0 )		752370	7					
ANR	752437	Condition	rval1 < 0	680:5:18197:18205	752370	0	True				
ANR	752438	RelationalExpression	rval1 < 0		752370	0		<			
ANR	752439	Identifier	rval1		752370	0					
ANR	752440	PrimaryExpression	0		752370	1					
ANR	752441	ReturnStatement	return rval1 ;	680:16:18208:18220	752370	1	True				
ANR	752442	Identifier	rval1		752370	0					
ANR	752443	ExpressionStatement	free ( buf )	681:1:18224:18233	752370	8	True				
ANR	752444	CallExpression	free ( buf )		752370	0					
ANR	752445	Callee	free		752370	0					
ANR	752446	Identifier	free		752370	0					
ANR	752447	ArgumentList	buf		752370	1					
ANR	752448	Argument	buf		752370	0					
ANR	752449	Identifier	buf		752370	0					
ANR	752450	ExpressionStatement	"rval1 = readword ( fp , buf )"	683:1:18237:18262	752370	9	True				
ANR	752451	AssignmentExpression	"rval1 = readword ( fp , buf )"		752370	0		=			
ANR	752452	Identifier	rval1		752370	0					
ANR	752453	CallExpression	"readword ( fp , buf )"		752370	1					
ANR	752454	Callee	readword		752370	0					
ANR	752455	Identifier	readword		752370	0					
ANR	752456	ArgumentList	fp		752370	1					
ANR	752457	Argument	fp		752370	0					
ANR	752458	Identifier	fp		752370	0					
ANR	752459	Argument	buf		752370	1					
ANR	752460	Identifier	buf		752370	0					
ANR	752461	IfStatement	if ( rval1 < 0 )		752370	10					
ANR	752462	Condition	rval1 < 0	684:5:18269:18277	752370	0	True				
ANR	752463	RelationalExpression	rval1 < 0		752370	0		<			
ANR	752464	Identifier	rval1		752370	0					
ANR	752465	PrimaryExpression	0		752370	1					
ANR	752466	ReturnStatement	return rval1 ;	684:16:18280:18292	752370	1	True				
ANR	752467	Identifier	rval1		752370	0					
ANR	752468	ExpressionStatement	"sscanf ( buf , ""%lu"" , & timestamp )"	685:1:18295:18323	752370	11	True				
ANR	752469	CallExpression	"sscanf ( buf , ""%lu"" , & timestamp )"		752370	0					
ANR	752470	Callee	sscanf		752370	0					
ANR	752471	Identifier	sscanf		752370	0					
ANR	752472	ArgumentList	buf		752370	1					
ANR	752473	Argument	buf		752370	0					
ANR	752474	Identifier	buf		752370	0					
ANR	752475	Argument	"""%lu"""		752370	1					
ANR	752476	PrimaryExpression	"""%lu"""		752370	0					
ANR	752477	Argument	& timestamp		752370	2					
ANR	752478	UnaryOperationExpression	& timestamp		752370	0					
ANR	752479	UnaryOperator	&		752370	0					
ANR	752480	Identifier	timestamp		752370	1					
ANR	752481	ExpressionStatement	free ( buf )	686:1:18326:18335	752370	12	True				
ANR	752482	CallExpression	free ( buf )		752370	0					
ANR	752483	Callee	free		752370	0					
ANR	752484	Identifier	free		752370	0					
ANR	752485	ArgumentList	buf		752370	1					
ANR	752486	Argument	buf		752370	0					
ANR	752487	Identifier	buf		752370	0					
ANR	752488	ReturnStatement	return rval + rval1 ;	687:1:18338:18357	752370	13	True				
ANR	752489	AdditiveExpression	rval + rval1		752370	0		+			
ANR	752490	Identifier	rval		752370	0					
ANR	752491	Identifier	rval1		752370	1					
ANR	752492	ReturnType	int		752370	1					
ANR	752493	Identifier	LogHistoricalSequenceNumber :: ReadBody		752370	2					
ANR	752494	ParameterList	FILE * fp		752370	3					
ANR	752495	Parameter	FILE * fp	669:38:17951:17958	752370	0	True				
ANR	752496	ParameterType	FILE *		752370	0					
ANR	752497	Identifier	fp		752370	1					
ANR	752498	CFGEntryNode	ENTRY		752370		True				
ANR	752499	CFGExitNode	EXIT		752370		True				
ANR	752500	Symbol	buf		752370						
ANR	752501	Symbol	NULL		752370						
ANR	752502	Symbol	& timestamp		752370						
ANR	752503	Symbol	fp		752370						
ANR	752504	Symbol	rval		752370						
ANR	752505	Symbol	readword		752370						
ANR	752506	Symbol	& historical_sequence_number		752370						
ANR	752507	Symbol	rval1		752370						
ANR	752508	Function	LogHistoricalSequenceNumber :: WriteBody	690:0:18362:18606							
ANR	752509	FunctionDef	LogHistoricalSequenceNumber :: WriteBody (FILE * fp)		752508	0					
ANR	752510	CompoundStatement		692:0:18415:18606	752508	0					
ANR	752511	IdentifierDeclStatement	char buf [ 100 ] ;	693:1:18418:18431	752508	0	True				
ANR	752512	IdentifierDecl	buf [ 100 ]		752508	0					
ANR	752513	IdentifierDeclType	char [ 100 ]		752508	0					
ANR	752514	Identifier	buf		752508	1					
ANR	752515	PrimaryExpression	100		752508	2					
ANR	752516	ExpressionStatement	"snprintf ( buf , 100 , ""%lu CreationTimestamp %lu"" , historical_sequence_number , timestamp )"	694:1:18434:18519	752508	1	True				
ANR	752517	CallExpression	"snprintf ( buf , 100 , ""%lu CreationTimestamp %lu"" , historical_sequence_number , timestamp )"		752508	0					
ANR	752518	Callee	snprintf		752508	0					
ANR	752519	Identifier	snprintf		752508	0					
ANR	752520	ArgumentList	buf		752508	1					
ANR	752521	Argument	buf		752508	0					
ANR	752522	Identifier	buf		752508	0					
ANR	752523	Argument	100		752508	1					
ANR	752524	PrimaryExpression	100		752508	0					
ANR	752525	Argument	"""%lu CreationTimestamp %lu"""		752508	2					
ANR	752526	PrimaryExpression	"""%lu CreationTimestamp %lu"""		752508	0					
ANR	752527	Argument	historical_sequence_number		752508	3					
ANR	752528	Identifier	historical_sequence_number		752508	0					
ANR	752529	Argument	timestamp		752508	4					
ANR	752530	Identifier	timestamp		752508	0					
ANR	752531	IdentifierDeclStatement	int len = strlen ( buf ) ;	696:1:18522:18543	752508	2	True				
ANR	752532	IdentifierDecl	len = strlen ( buf )		752508	0					
ANR	752533	IdentifierDeclType	int		752508	0					
ANR	752534	Identifier	len		752508	1					
ANR	752535	AssignmentExpression	len = strlen ( buf )		752508	2		=			
ANR	752536	Identifier	len		752508	0					
ANR	752537	CallExpression	strlen ( buf )		752508	1					
ANR	752538	Callee	strlen		752508	0					
ANR	752539	Identifier	strlen		752508	0					
ANR	752540	ArgumentList	buf		752508	1					
ANR	752541	Argument	buf		752508	0					
ANR	752542	Identifier	buf		752508	0					
ANR	752543	ReturnStatement	"return ( fwrite ( buf , 1 , len , fp ) < ( unsigned ) len ) ? - 1 : len ;"	697:1:18546:18604	752508	3	True				
ANR	752544	ConditionalExpression	"( fwrite ( buf , 1 , len , fp ) < ( unsigned ) len ) ? - 1 : len"		752508	0					
ANR	752545	Condition	"fwrite ( buf , 1 , len , fp ) < ( unsigned ) len"		752508	0					
ANR	752546	RelationalExpression	"fwrite ( buf , 1 , len , fp ) < ( unsigned ) len"		752508	0		<			
ANR	752547	CallExpression	"fwrite ( buf , 1 , len , fp )"		752508	0					
ANR	752548	Callee	fwrite		752508	0					
ANR	752549	Identifier	fwrite		752508	0					
ANR	752550	ArgumentList	buf		752508	1					
ANR	752551	Argument	buf		752508	0					
ANR	752552	Identifier	buf		752508	0					
ANR	752553	Argument	1		752508	1					
ANR	752554	PrimaryExpression	1		752508	0					
ANR	752555	Argument	len		752508	2					
ANR	752556	Identifier	len		752508	0					
ANR	752557	Argument	fp		752508	3					
ANR	752558	Identifier	fp		752508	0					
ANR	752559	CastExpression	( unsigned ) len		752508	1					
ANR	752560	CastTarget	unsigned		752508	0					
ANR	752561	Identifier	len		752508	1					
ANR	752562	UnaryOperationExpression	- 1		752508	1					
ANR	752563	UnaryOperator	-		752508	0					
ANR	752564	PrimaryExpression	1		752508	1					
ANR	752565	Identifier	len		752508	2					
ANR	752566	ReturnType	int		752508	1					
ANR	752567	Identifier	LogHistoricalSequenceNumber :: WriteBody		752508	2					
ANR	752568	ParameterList	FILE * fp		752508	3					
ANR	752569	Parameter	FILE * fp	691:39:18405:18412	752508	0	True				
ANR	752570	ParameterType	FILE *		752508	0					
ANR	752571	Identifier	fp		752508	1					
ANR	752572	CFGEntryNode	ENTRY		752508		True				
ANR	752573	CFGExitNode	EXIT		752508		True				
ANR	752574	Symbol	strlen		752508						
ANR	752575	Symbol	buf		752508						
ANR	752576	Symbol	len		752508						
ANR	752577	Symbol	fwrite		752508						
ANR	752578	Symbol	fp		752508						
ANR	752579	Symbol	historical_sequence_number		752508						
ANR	752580	Symbol	timestamp		752508						
ANR	752581	Function	LogNewClassAd :: LogNewClassAd	700:0:18609:18784							
ANR	752582	FunctionDef	"LogNewClassAd :: LogNewClassAd (const char * k , const char * m , const char * t)"		752581	0					
ANR	752583	CompoundStatement		701:0:18683:18784	752581	0					
ANR	752584	ExpressionStatement	op_type = CondorLogOp_NewClassAd	702:1:18686:18718	752581	0	True				
ANR	752585	AssignmentExpression	op_type = CondorLogOp_NewClassAd		752581	0		=			
ANR	752586	Identifier	op_type		752581	0					
ANR	752587	Identifier	CondorLogOp_NewClassAd		752581	1					
ANR	752588	ExpressionStatement	key = strdup ( k )	703:1:18721:18736	752581	1	True				
ANR	752589	AssignmentExpression	key = strdup ( k )		752581	0		=			
ANR	752590	Identifier	key		752581	0					
ANR	752591	CallExpression	strdup ( k )		752581	1					
ANR	752592	Callee	strdup		752581	0					
ANR	752593	Identifier	strdup		752581	0					
ANR	752594	ArgumentList	k		752581	1					
ANR	752595	Argument	k		752581	0					
ANR	752596	Identifier	k		752581	0					
ANR	752597	ExpressionStatement	mytype = strdup ( m )	704:1:18739:18757	752581	2	True				
ANR	752598	AssignmentExpression	mytype = strdup ( m )		752581	0		=			
ANR	752599	Identifier	mytype		752581	0					
ANR	752600	CallExpression	strdup ( m )		752581	1					
ANR	752601	Callee	strdup		752581	0					
ANR	752602	Identifier	strdup		752581	0					
ANR	752603	ArgumentList	m		752581	1					
ANR	752604	Argument	m		752581	0					
ANR	752605	Identifier	m		752581	0					
ANR	752606	ExpressionStatement	targettype = strdup ( t )	705:1:18760:18782	752581	3	True				
ANR	752607	AssignmentExpression	targettype = strdup ( t )		752581	0		=			
ANR	752608	Identifier	targettype		752581	0					
ANR	752609	CallExpression	strdup ( t )		752581	1					
ANR	752610	Callee	strdup		752581	0					
ANR	752611	Identifier	strdup		752581	0					
ANR	752612	ArgumentList	t		752581	1					
ANR	752613	Argument	t		752581	0					
ANR	752614	Identifier	t		752581	0					
ANR	752615	Identifier	LogNewClassAd :: LogNewClassAd		752581	1					
ANR	752616	ParameterList	"const char * k , const char * m , const char * t"		752581	2					
ANR	752617	Parameter	const char * k	700:29:18638:18650	752581	0	True				
ANR	752618	ParameterType	const char *		752581	0					
ANR	752619	Identifier	k		752581	1					
ANR	752620	Parameter	const char * m	700:44:18653:18665	752581	1	True				
ANR	752621	ParameterType	const char *		752581	0					
ANR	752622	Identifier	m		752581	1					
ANR	752623	Parameter	const char * t	700:59:18668:18680	752581	2	True				
ANR	752624	ParameterType	const char *		752581	0					
ANR	752625	Identifier	t		752581	1					
ANR	752626	CFGEntryNode	ENTRY		752581		True				
ANR	752627	CFGExitNode	EXIT		752581		True				
ANR	752628	Symbol	CondorLogOp_NewClassAd		752581						
ANR	752629	Symbol	t		752581						
ANR	752630	Symbol	targettype		752581						
ANR	752631	Symbol	mytype		752581						
ANR	752632	Symbol	k		752581						
ANR	752633	Symbol	op_type		752581						
ANR	752634	Symbol	strdup		752581						
ANR	752635	Symbol	m		752581						
ANR	752636	Symbol	key		752581						
ANR	752637	Function	LogNewClassAd :: ~LogNewClassAd	708:0:18787:18867							
ANR	752638	FunctionDef	LogNewClassAd :: ~LogNewClassAd ()		752637	0					
ANR	752639	CompoundStatement		709:0:18819:18867	752637	0					
ANR	752640	ExpressionStatement	free ( key )	710:1:18822:18831	752637	0	True				
ANR	752641	CallExpression	free ( key )		752637	0					
ANR	752642	Callee	free		752637	0					
ANR	752643	Identifier	free		752637	0					
ANR	752644	ArgumentList	key		752637	1					
ANR	752645	Argument	key		752637	0					
ANR	752646	Identifier	key		752637	0					
ANR	752647	ExpressionStatement	free ( mytype )	711:1:18834:18846	752637	1	True				
ANR	752648	CallExpression	free ( mytype )		752637	0					
ANR	752649	Callee	free		752637	0					
ANR	752650	Identifier	free		752637	0					
ANR	752651	ArgumentList	mytype		752637	1					
ANR	752652	Argument	mytype		752637	0					
ANR	752653	Identifier	mytype		752637	0					
ANR	752654	ExpressionStatement	free ( targettype )	712:1:18849:18865	752637	2	True				
ANR	752655	CallExpression	free ( targettype )		752637	0					
ANR	752656	Callee	free		752637	0					
ANR	752657	Identifier	free		752637	0					
ANR	752658	ArgumentList	targettype		752637	1					
ANR	752659	Argument	targettype		752637	0					
ANR	752660	Identifier	targettype		752637	0					
ANR	752661	Identifier	LogNewClassAd :: ~LogNewClassAd		752637	1					
ANR	752662	ParameterList			752637	2					
ANR	752663	CFGEntryNode	ENTRY		752637		True				
ANR	752664	CFGExitNode	EXIT		752637		True				
ANR	752665	Symbol	targettype		752637						
ANR	752666	Symbol	mytype		752637						
ANR	752667	Symbol	key		752637						
ANR	752668	Function	LogNewClassAd :: Play	715:0:18870:19224							
ANR	752669	FunctionDef	LogNewClassAd :: Play (void * data_structure)		752668	0					
ANR	752670	CompoundStatement		717:0:18916:19224	752668	0					
ANR	752671	IdentifierDeclStatement	int result ;	718:1:18919:18929	752668	0	True				
ANR	752672	IdentifierDecl	result		752668	0					
ANR	752673	IdentifierDeclType	int		752668	0					
ANR	752674	Identifier	result		752668	1					
ANR	752675	IdentifierDeclStatement	ClassAdHashTable * table = ( ClassAdHashTable * ) data_structure ;	719:1:18932:18992	752668	1	True				
ANR	752676	IdentifierDecl	* table = ( ClassAdHashTable * ) data_structure		752668	0					
ANR	752677	IdentifierDeclType	ClassAdHashTable *		752668	0					
ANR	752678	Identifier	table		752668	1					
ANR	752679	AssignmentExpression	* table = ( ClassAdHashTable * ) data_structure		752668	2		=			
ANR	752680	Identifier	table		752668	0					
ANR	752681	CastExpression	( ClassAdHashTable * ) data_structure		752668	1					
ANR	752682	CastTarget	ClassAdHashTable *		752668	0					
ANR	752683	Identifier	data_structure		752668	1					
ANR	752684	IdentifierDeclStatement	ClassAd * ad = new ClassAd ( ) ;	720:1:18995:19022	752668	2	True				
ANR	752685	IdentifierDecl	* ad = new ClassAd ( )		752668	0					
ANR	752686	IdentifierDeclType	ClassAd *		752668	0					
ANR	752687	Identifier	ad		752668	1					
ANR	752688	AssignmentExpression	* ad = new ClassAd ( )		752668	2		=			
ANR	752689	Identifier	ad		752668	0					
ANR	752690	UnaryExpression	new ClassAd ( )		752668	1					
ANR	752691	ExpressionStatement	ad -> SetMyTypeName ( mytype )	721:1:19025:19050	752668	3	True				
ANR	752692	CallExpression	ad -> SetMyTypeName ( mytype )		752668	0					
ANR	752693	Callee	ad -> SetMyTypeName		752668	0					
ANR	752694	PtrMemberAccess	ad -> SetMyTypeName		752668	0					
ANR	752695	Identifier	ad		752668	0					
ANR	752696	Identifier	SetMyTypeName		752668	1					
ANR	752697	ArgumentList	mytype		752668	1					
ANR	752698	Argument	mytype		752668	0					
ANR	752699	Identifier	mytype		752668	0					
ANR	752700	ExpressionStatement	ad -> SetTargetTypeName ( targettype )	722:1:19053:19086	752668	4	True				
ANR	752701	CallExpression	ad -> SetTargetTypeName ( targettype )		752668	0					
ANR	752702	Callee	ad -> SetTargetTypeName		752668	0					
ANR	752703	PtrMemberAccess	ad -> SetTargetTypeName		752668	0					
ANR	752704	Identifier	ad		752668	0					
ANR	752705	Identifier	SetTargetTypeName		752668	1					
ANR	752706	ArgumentList	targettype		752668	1					
ANR	752707	Argument	targettype		752668	0					
ANR	752708	Identifier	targettype		752668	0					
ANR	752709	ExpressionStatement	"result = table -> insert ( HashKey ( key ) , ad )"	723:1:19089:19129	752668	5	True				
ANR	752710	AssignmentExpression	"result = table -> insert ( HashKey ( key ) , ad )"		752668	0		=			
ANR	752711	Identifier	result		752668	0					
ANR	752712	CallExpression	"table -> insert ( HashKey ( key ) , ad )"		752668	1					
ANR	752713	Callee	table -> insert		752668	0					
ANR	752714	PtrMemberAccess	table -> insert		752668	0					
ANR	752715	Identifier	table		752668	0					
ANR	752716	Identifier	insert		752668	1					
ANR	752717	ArgumentList	HashKey ( key )		752668	1					
ANR	752718	Argument	HashKey ( key )		752668	0					
ANR	752719	CallExpression	HashKey ( key )		752668	0					
ANR	752720	Callee	HashKey		752668	0					
ANR	752721	Identifier	HashKey		752668	0					
ANR	752722	ArgumentList	key		752668	1					
ANR	752723	Argument	key		752668	0					
ANR	752724	Identifier	key		752668	0					
ANR	752725	Argument	ad		752668	1					
ANR	752726	Identifier	ad		752668	0					
ANR	752727	ExpressionStatement	ClassAdLogPluginManager :: NewClassAd ( key )	726:1:19158:19198	752668	6	True				
ANR	752728	CallExpression	ClassAdLogPluginManager :: NewClassAd ( key )		752668	0					
ANR	752729	Callee	ClassAdLogPluginManager :: NewClassAd		752668	0					
ANR	752730	Identifier	ClassAdLogPluginManager :: NewClassAd		752668	0					
ANR	752731	ArgumentList	key		752668	1					
ANR	752732	Argument	key		752668	0					
ANR	752733	Identifier	key		752668	0					
ANR	752734	ReturnStatement	return result ;	729:1:19209:19222	752668	7	True				
ANR	752735	Identifier	result		752668	0					
ANR	752736	ReturnType	int		752668	1					
ANR	752737	Identifier	LogNewClassAd :: Play		752668	2					
ANR	752738	ParameterList	void * data_structure		752668	3					
ANR	752739	Parameter	void * data_structure	716:20:18894:18913	752668	0	True				
ANR	752740	ParameterType	void *		752668	0					
ANR	752741	Identifier	data_structure		752668	1					
ANR	752742	CFGEntryNode	ENTRY		752668		True				
ANR	752743	CFGExitNode	EXIT		752668		True				
ANR	752744	Symbol	result		752668						
ANR	752745	Symbol	data_structure		752668						
ANR	752746	Symbol	ad		752668						
ANR	752747	Symbol	targettype		752668						
ANR	752748	Symbol	table -> insert		752668						
ANR	752749	Symbol	mytype		752668						
ANR	752750	Symbol	* table		752668						
ANR	752751	Symbol	HashKey		752668						
ANR	752752	Symbol	table		752668						
ANR	752753	Symbol	key		752668						
ANR	752754	Function	LogNewClassAd :: ReadBody	732:0:19227:19816							
ANR	752755	FunctionDef	LogNewClassAd :: ReadBody (FILE * fp)		752754	0					
ANR	752756	CompoundStatement		734:0:19265:19816	752754	0					
ANR	752757	IdentifierDeclStatement	"int rval , rval1 ;"	735:1:19268:19283	752754	0	True				
ANR	752758	IdentifierDecl	rval		752754	0					
ANR	752759	IdentifierDeclType	int		752754	0					
ANR	752760	Identifier	rval		752754	1					
ANR	752761	IdentifierDecl	rval1		752754	1					
ANR	752762	IdentifierDeclType	int		752754	0					
ANR	752763	Identifier	rval1		752754	1					
ANR	752764	ExpressionStatement	free ( key )	736:1:19286:19295	752754	1	True				
ANR	752765	CallExpression	free ( key )		752754	0					
ANR	752766	Callee	free		752754	0					
ANR	752767	Identifier	free		752754	0					
ANR	752768	ArgumentList	key		752754	1					
ANR	752769	Argument	key		752754	0					
ANR	752770	Identifier	key		752754	0					
ANR	752771	ExpressionStatement	"rval = readword ( fp , key )"	737:1:19298:19322	752754	2	True				
ANR	752772	AssignmentExpression	"rval = readword ( fp , key )"		752754	0		=			
ANR	752773	Identifier	rval		752754	0					
ANR	752774	CallExpression	"readword ( fp , key )"		752754	1					
ANR	752775	Callee	readword		752754	0					
ANR	752776	Identifier	readword		752754	0					
ANR	752777	ArgumentList	fp		752754	1					
ANR	752778	Argument	fp		752754	0					
ANR	752779	Identifier	fp		752754	0					
ANR	752780	Argument	key		752754	1					
ANR	752781	Identifier	key		752754	0					
ANR	752782	IfStatement	if ( rval < 0 )		752754	3					
ANR	752783	Condition	rval < 0	738:5:19329:19336	752754	0	True				
ANR	752784	RelationalExpression	rval < 0		752754	0		<			
ANR	752785	Identifier	rval		752754	0					
ANR	752786	PrimaryExpression	0		752754	1					
ANR	752787	ReturnStatement	return rval ;	738:15:19339:19350	752754	1	True				
ANR	752788	Identifier	rval		752754	0					
ANR	752789	ExpressionStatement	free ( mytype )	739:1:19353:19365	752754	4	True				
ANR	752790	CallExpression	free ( mytype )		752754	0					
ANR	752791	Callee	free		752754	0					
ANR	752792	Identifier	free		752754	0					
ANR	752793	ArgumentList	mytype		752754	1					
ANR	752794	Argument	mytype		752754	0					
ANR	752795	Identifier	mytype		752754	0					
ANR	752796	ExpressionStatement	"rval1 = readword ( fp , mytype )"	740:1:19368:19396	752754	5	True				
ANR	752797	AssignmentExpression	"rval1 = readword ( fp , mytype )"		752754	0		=			
ANR	752798	Identifier	rval1		752754	0					
ANR	752799	CallExpression	"readword ( fp , mytype )"		752754	1					
ANR	752800	Callee	readword		752754	0					
ANR	752801	Identifier	readword		752754	0					
ANR	752802	ArgumentList	fp		752754	1					
ANR	752803	Argument	fp		752754	0					
ANR	752804	Identifier	fp		752754	0					
ANR	752805	Argument	mytype		752754	1					
ANR	752806	Identifier	mytype		752754	0					
ANR	752807	IfStatement	"if ( mytype && strcmp ( mytype , EMPTY_CLASSAD_TYPE_NAME ) == 0 )"		752754	6					
ANR	752808	Condition	"mytype && strcmp ( mytype , EMPTY_CLASSAD_TYPE_NAME ) == 0"	741:5:19403:19453	752754	0	True				
ANR	752809	AndExpression	"mytype && strcmp ( mytype , EMPTY_CLASSAD_TYPE_NAME ) == 0"		752754	0		&&			
ANR	752810	Identifier	mytype		752754	0					
ANR	752811	EqualityExpression	"strcmp ( mytype , EMPTY_CLASSAD_TYPE_NAME ) == 0"		752754	1		==			
ANR	752812	CallExpression	"strcmp ( mytype , EMPTY_CLASSAD_TYPE_NAME )"		752754	0					
ANR	752813	Callee	strcmp		752754	0					
ANR	752814	Identifier	strcmp		752754	0					
ANR	752815	ArgumentList	mytype		752754	1					
ANR	752816	Argument	mytype		752754	0					
ANR	752817	Identifier	mytype		752754	0					
ANR	752818	Argument	EMPTY_CLASSAD_TYPE_NAME		752754	1					
ANR	752819	Identifier	EMPTY_CLASSAD_TYPE_NAME		752754	0					
ANR	752820	PrimaryExpression	0		752754	1					
ANR	752821	CompoundStatement		8:59:191:191	752754	1					
ANR	752822	ExpressionStatement	free ( mytype )	742:2:19461:19473	752754	0	True				
ANR	752823	CallExpression	free ( mytype )		752754	0					
ANR	752824	Callee	free		752754	0					
ANR	752825	Identifier	free		752754	0					
ANR	752826	ArgumentList	mytype		752754	1					
ANR	752827	Argument	mytype		752754	0					
ANR	752828	Identifier	mytype		752754	0					
ANR	752829	ExpressionStatement	"mytype = strdup ( """" )"	743:2:19477:19496	752754	1	True				
ANR	752830	AssignmentExpression	"mytype = strdup ( """" )"		752754	0		=			
ANR	752831	Identifier	mytype		752754	0					
ANR	752832	CallExpression	"strdup ( """" )"		752754	1					
ANR	752833	Callee	strdup		752754	0					
ANR	752834	Identifier	strdup		752754	0					
ANR	752835	ArgumentList	""""""		752754	1					
ANR	752836	Argument	""""""		752754	0					
ANR	752837	PrimaryExpression	""""""		752754	0					
ANR	752838	ExpressionStatement	ASSERT ( mytype )	744:2:19500:19516	752754	2	True				
ANR	752839	CallExpression	ASSERT ( mytype )		752754	0					
ANR	752840	Callee	ASSERT		752754	0					
ANR	752841	Identifier	ASSERT		752754	0					
ANR	752842	ArgumentList	mytype		752754	1					
ANR	752843	Argument	mytype		752754	0					
ANR	752844	Identifier	mytype		752754	0					
ANR	752845	IfStatement	if ( rval1 < 0 )		752754	7					
ANR	752846	Condition	rval1 < 0	746:5:19526:19534	752754	0	True				
ANR	752847	RelationalExpression	rval1 < 0		752754	0		<			
ANR	752848	Identifier	rval1		752754	0					
ANR	752849	PrimaryExpression	0		752754	1					
ANR	752850	ReturnStatement	return rval1 ;	746:16:19537:19549	752754	1	True				
ANR	752851	Identifier	rval1		752754	0					
ANR	752852	ExpressionStatement	rval += rval1	747:1:19552:19565	752754	8	True				
ANR	752853	AssignmentExpression	rval += rval1		752754	0		+=			
ANR	752854	Identifier	rval		752754	0					
ANR	752855	Identifier	rval1		752754	1					
ANR	752856	ExpressionStatement	free ( targettype )	748:1:19568:19584	752754	9	True				
ANR	752857	CallExpression	free ( targettype )		752754	0					
ANR	752858	Callee	free		752754	0					
ANR	752859	Identifier	free		752754	0					
ANR	752860	ArgumentList	targettype		752754	1					
ANR	752861	Argument	targettype		752754	0					
ANR	752862	Identifier	targettype		752754	0					
ANR	752863	ExpressionStatement	"rval1 = readword ( fp , targettype )"	749:1:19587:19619	752754	10	True				
ANR	752864	AssignmentExpression	"rval1 = readword ( fp , targettype )"		752754	0		=			
ANR	752865	Identifier	rval1		752754	0					
ANR	752866	CallExpression	"readword ( fp , targettype )"		752754	1					
ANR	752867	Callee	readword		752754	0					
ANR	752868	Identifier	readword		752754	0					
ANR	752869	ArgumentList	fp		752754	1					
ANR	752870	Argument	fp		752754	0					
ANR	752871	Identifier	fp		752754	0					
ANR	752872	Argument	targettype		752754	1					
ANR	752873	Identifier	targettype		752754	0					
ANR	752874	IfStatement	"if ( targettype && strcmp ( targettype , EMPTY_CLASSAD_TYPE_NAME ) == 0 )"		752754	11					
ANR	752875	Condition	"targettype && strcmp ( targettype , EMPTY_CLASSAD_TYPE_NAME ) == 0"	750:5:19626:19684	752754	0	True				
ANR	752876	AndExpression	"targettype && strcmp ( targettype , EMPTY_CLASSAD_TYPE_NAME ) == 0"		752754	0		&&			
ANR	752877	Identifier	targettype		752754	0					
ANR	752878	EqualityExpression	"strcmp ( targettype , EMPTY_CLASSAD_TYPE_NAME ) == 0"		752754	1		==			
ANR	752879	CallExpression	"strcmp ( targettype , EMPTY_CLASSAD_TYPE_NAME )"		752754	0					
ANR	752880	Callee	strcmp		752754	0					
ANR	752881	Identifier	strcmp		752754	0					
ANR	752882	ArgumentList	targettype		752754	1					
ANR	752883	Argument	targettype		752754	0					
ANR	752884	Identifier	targettype		752754	0					
ANR	752885	Argument	EMPTY_CLASSAD_TYPE_NAME		752754	1					
ANR	752886	Identifier	EMPTY_CLASSAD_TYPE_NAME		752754	0					
ANR	752887	PrimaryExpression	0		752754	1					
ANR	752888	CompoundStatement		17:67:422:422	752754	1					
ANR	752889	ExpressionStatement	free ( targettype )	751:2:19692:19708	752754	0	True				
ANR	752890	CallExpression	free ( targettype )		752754	0					
ANR	752891	Callee	free		752754	0					
ANR	752892	Identifier	free		752754	0					
ANR	752893	ArgumentList	targettype		752754	1					
ANR	752894	Argument	targettype		752754	0					
ANR	752895	Identifier	targettype		752754	0					
ANR	752896	ExpressionStatement	"targettype = strdup ( """" )"	752:2:19712:19735	752754	1	True				
ANR	752897	AssignmentExpression	"targettype = strdup ( """" )"		752754	0		=			
ANR	752898	Identifier	targettype		752754	0					
ANR	752899	CallExpression	"strdup ( """" )"		752754	1					
ANR	752900	Callee	strdup		752754	0					
ANR	752901	Identifier	strdup		752754	0					
ANR	752902	ArgumentList	""""""		752754	1					
ANR	752903	Argument	""""""		752754	0					
ANR	752904	PrimaryExpression	""""""		752754	0					
ANR	752905	ExpressionStatement	ASSERT ( targettype )	753:2:19739:19759	752754	2	True				
ANR	752906	CallExpression	ASSERT ( targettype )		752754	0					
ANR	752907	Callee	ASSERT		752754	0					
ANR	752908	Identifier	ASSERT		752754	0					
ANR	752909	ArgumentList	targettype		752754	1					
ANR	752910	Argument	targettype		752754	0					
ANR	752911	Identifier	targettype		752754	0					
ANR	752912	IfStatement	if ( rval1 < 0 )		752754	12					
ANR	752913	Condition	rval1 < 0	755:5:19769:19777	752754	0	True				
ANR	752914	RelationalExpression	rval1 < 0		752754	0		<			
ANR	752915	Identifier	rval1		752754	0					
ANR	752916	PrimaryExpression	0		752754	1					
ANR	752917	ReturnStatement	return rval1 ;	755:16:19780:19792	752754	1	True				
ANR	752918	Identifier	rval1		752754	0					
ANR	752919	ReturnStatement	return rval + rval1 ;	756:1:19795:19814	752754	13	True				
ANR	752920	AdditiveExpression	rval + rval1		752754	0		+			
ANR	752921	Identifier	rval		752754	0					
ANR	752922	Identifier	rval1		752754	1					
ANR	752923	ReturnType	int		752754	1					
ANR	752924	Identifier	LogNewClassAd :: ReadBody		752754	2					
ANR	752925	ParameterList	FILE * fp		752754	3					
ANR	752926	Parameter	FILE * fp	733:24:19255:19262	752754	0	True				
ANR	752927	ParameterType	FILE *		752754	0					
ANR	752928	Identifier	fp		752754	1					
ANR	752929	CFGEntryNode	ENTRY		752754		True				
ANR	752930	CFGExitNode	EXIT		752754		True				
ANR	752931	Symbol	strcmp		752754						
ANR	752932	Symbol	targettype		752754						
ANR	752933	Symbol	EMPTY_CLASSAD_TYPE_NAME		752754						
ANR	752934	Symbol	mytype		752754						
ANR	752935	Symbol	fp		752754						
ANR	752936	Symbol	rval		752754						
ANR	752937	Symbol	readword		752754						
ANR	752938	Symbol	strdup		752754						
ANR	752939	Symbol	key		752754						
ANR	752940	Symbol	rval1		752754						
ANR	752941	Function	LogNewClassAd :: WriteBody	759:0:19819:20781							
ANR	752942	FunctionDef	LogNewClassAd :: WriteBody (FILE * fp)		752941	0					
ANR	752943	CompoundStatement		761:0:19858:20781	752941	0					
ANR	752944	IdentifierDeclStatement	"int rval , rval1 ;"	762:1:19861:19876	752941	0	True				
ANR	752945	IdentifierDecl	rval		752941	0					
ANR	752946	IdentifierDeclType	int		752941	0					
ANR	752947	Identifier	rval		752941	1					
ANR	752948	IdentifierDecl	rval1		752941	1					
ANR	752949	IdentifierDeclType	int		752941	0					
ANR	752950	Identifier	rval1		752941	1					
ANR	752951	ExpressionStatement	"rval = fwrite ( key , sizeof ( char ) , strlen ( key ) , fp )"	763:1:19879:19928	752941	1	True				
ANR	752952	AssignmentExpression	"rval = fwrite ( key , sizeof ( char ) , strlen ( key ) , fp )"		752941	0		=			
ANR	752953	Identifier	rval		752941	0					
ANR	752954	CallExpression	"fwrite ( key , sizeof ( char ) , strlen ( key ) , fp )"		752941	1					
ANR	752955	Callee	fwrite		752941	0					
ANR	752956	Identifier	fwrite		752941	0					
ANR	752957	ArgumentList	key		752941	1					
ANR	752958	Argument	key		752941	0					
ANR	752959	Identifier	key		752941	0					
ANR	752960	Argument	sizeof ( char )		752941	1					
ANR	752961	SizeofExpression	sizeof ( char )		752941	0					
ANR	752962	Sizeof	sizeof		752941	0					
ANR	752963	SizeofOperand	char		752941	1					
ANR	752964	Argument	strlen ( key )		752941	2					
ANR	752965	CallExpression	strlen ( key )		752941	0					
ANR	752966	Callee	strlen		752941	0					
ANR	752967	Identifier	strlen		752941	0					
ANR	752968	ArgumentList	key		752941	1					
ANR	752969	Argument	key		752941	0					
ANR	752970	Identifier	key		752941	0					
ANR	752971	Argument	fp		752941	3					
ANR	752972	Identifier	fp		752941	0					
ANR	752973	IfStatement	if ( rval < ( int ) strlen ( key ) )		752941	2					
ANR	752974	Condition	rval < ( int ) strlen ( key )	764:5:19935:19957	752941	0	True				
ANR	752975	RelationalExpression	rval < ( int ) strlen ( key )		752941	0		<			
ANR	752976	Identifier	rval		752941	0					
ANR	752977	CastExpression	( int ) strlen ( key )		752941	1					
ANR	752978	CastTarget	int		752941	0					
ANR	752979	CallExpression	strlen ( key )		752941	1					
ANR	752980	Callee	strlen		752941	0					
ANR	752981	Identifier	strlen		752941	0					
ANR	752982	ArgumentList	key		752941	1					
ANR	752983	Argument	key		752941	0					
ANR	752984	Identifier	key		752941	0					
ANR	752985	ReturnStatement	return - 1 ;	764:30:19960:19969	752941	1	True				
ANR	752986	UnaryOperationExpression	- 1		752941	0					
ANR	752987	UnaryOperator	-		752941	0					
ANR	752988	PrimaryExpression	1		752941	1					
ANR	752989	ExpressionStatement	"rval1 = fwrite ( "" "" , sizeof ( char ) , 1 , fp )"	765:1:19972:20013	752941	3	True				
ANR	752990	AssignmentExpression	"rval1 = fwrite ( "" "" , sizeof ( char ) , 1 , fp )"		752941	0		=			
ANR	752991	Identifier	rval1		752941	0					
ANR	752992	CallExpression	"fwrite ( "" "" , sizeof ( char ) , 1 , fp )"		752941	1					
ANR	752993	Callee	fwrite		752941	0					
ANR	752994	Identifier	fwrite		752941	0					
ANR	752995	ArgumentList	""" """		752941	1					
ANR	752996	Argument	""" """		752941	0					
ANR	752997	PrimaryExpression	""" """		752941	0					
ANR	752998	Argument	sizeof ( char )		752941	1					
ANR	752999	SizeofExpression	sizeof ( char )		752941	0					
ANR	753000	Sizeof	sizeof		752941	0					
ANR	753001	SizeofOperand	char		752941	1					
ANR	753002	Argument	1		752941	2					
ANR	753003	PrimaryExpression	1		752941	0					
ANR	753004	Argument	fp		752941	3					
ANR	753005	Identifier	fp		752941	0					
ANR	753006	IfStatement	if ( rval1 < 1 )		752941	4					
ANR	753007	Condition	rval1 < 1	766:5:20020:20028	752941	0	True				
ANR	753008	RelationalExpression	rval1 < 1		752941	0		<			
ANR	753009	Identifier	rval1		752941	0					
ANR	753010	PrimaryExpression	1		752941	1					
ANR	753011	ReturnStatement	return - 1 ;	766:16:20031:20040	752941	1	True				
ANR	753012	UnaryOperationExpression	- 1		752941	0					
ANR	753013	UnaryOperator	-		752941	0					
ANR	753014	PrimaryExpression	1		752941	1					
ANR	753015	ExpressionStatement	rval += rval1	767:1:20043:20056	752941	5	True				
ANR	753016	AssignmentExpression	rval += rval1		752941	0		+=			
ANR	753017	Identifier	rval		752941	0					
ANR	753018	Identifier	rval1		752941	1					
ANR	753019	IdentifierDeclStatement	char const * s = mytype ;	768:1:20059:20081	752941	6	True				
ANR	753020	IdentifierDecl	* s = mytype		752941	0					
ANR	753021	IdentifierDeclType	char const *		752941	0					
ANR	753022	Identifier	s		752941	1					
ANR	753023	AssignmentExpression	* s = mytype		752941	2		=			
ANR	753024	Identifier	mytype		752941	0					
ANR	753025	Identifier	mytype		752941	1					
ANR	753026	IfStatement	if ( ! s || ! s [ 0 ] )		752941	7					
ANR	753027	Condition	! s || ! s [ 0 ]	769:5:20088:20098	752941	0	True				
ANR	753028	OrExpression	! s || ! s [ 0 ]		752941	0		||			
ANR	753029	UnaryOperationExpression	! s		752941	0					
ANR	753030	UnaryOperator	!		752941	0					
ANR	753031	Identifier	s		752941	1					
ANR	753032	UnaryOperationExpression	! s [ 0 ]		752941	1					
ANR	753033	UnaryOperator	!		752941	0					
ANR	753034	ArrayIndexing	s [ 0 ]		752941	1					
ANR	753035	Identifier	s		752941	0					
ANR	753036	PrimaryExpression	0		752941	1					
ANR	753037	CompoundStatement		9:19:243:243	752941	1					
ANR	753038	ExpressionStatement	s = EMPTY_CLASSAD_TYPE_NAME	773:2:20241:20268	752941	0	True				
ANR	753039	AssignmentExpression	s = EMPTY_CLASSAD_TYPE_NAME		752941	0		=			
ANR	753040	Identifier	s		752941	0					
ANR	753041	Identifier	EMPTY_CLASSAD_TYPE_NAME		752941	1					
ANR	753042	ExpressionStatement	"rval1 = fwrite ( s , sizeof ( char ) , strlen ( s ) , fp )"	775:1:20274:20320	752941	8	True				
ANR	753043	AssignmentExpression	"rval1 = fwrite ( s , sizeof ( char ) , strlen ( s ) , fp )"		752941	0		=			
ANR	753044	Identifier	rval1		752941	0					
ANR	753045	CallExpression	"fwrite ( s , sizeof ( char ) , strlen ( s ) , fp )"		752941	1					
ANR	753046	Callee	fwrite		752941	0					
ANR	753047	Identifier	fwrite		752941	0					
ANR	753048	ArgumentList	s		752941	1					
ANR	753049	Argument	s		752941	0					
ANR	753050	Identifier	s		752941	0					
ANR	753051	Argument	sizeof ( char )		752941	1					
ANR	753052	SizeofExpression	sizeof ( char )		752941	0					
ANR	753053	Sizeof	sizeof		752941	0					
ANR	753054	SizeofOperand	char		752941	1					
ANR	753055	Argument	strlen ( s )		752941	2					
ANR	753056	CallExpression	strlen ( s )		752941	0					
ANR	753057	Callee	strlen		752941	0					
ANR	753058	Identifier	strlen		752941	0					
ANR	753059	ArgumentList	s		752941	1					
ANR	753060	Argument	s		752941	0					
ANR	753061	Identifier	s		752941	0					
ANR	753062	Argument	fp		752941	3					
ANR	753063	Identifier	fp		752941	0					
ANR	753064	IfStatement	if ( rval1 < ( int ) strlen ( s ) )		752941	9					
ANR	753065	Condition	rval1 < ( int ) strlen ( s )	776:5:20327:20348	752941	0	True				
ANR	753066	RelationalExpression	rval1 < ( int ) strlen ( s )		752941	0		<			
ANR	753067	Identifier	rval1		752941	0					
ANR	753068	CastExpression	( int ) strlen ( s )		752941	1					
ANR	753069	CastTarget	int		752941	0					
ANR	753070	CallExpression	strlen ( s )		752941	1					
ANR	753071	Callee	strlen		752941	0					
ANR	753072	Identifier	strlen		752941	0					
ANR	753073	ArgumentList	s		752941	1					
ANR	753074	Argument	s		752941	0					
ANR	753075	Identifier	s		752941	0					
ANR	753076	ReturnStatement	return - 1 ;	776:29:20351:20360	752941	1	True				
ANR	753077	UnaryOperationExpression	- 1		752941	0					
ANR	753078	UnaryOperator	-		752941	0					
ANR	753079	PrimaryExpression	1		752941	1					
ANR	753080	ExpressionStatement	rval += rval1	777:1:20363:20376	752941	10	True				
ANR	753081	AssignmentExpression	rval += rval1		752941	0		+=			
ANR	753082	Identifier	rval		752941	0					
ANR	753083	Identifier	rval1		752941	1					
ANR	753084	ExpressionStatement	"rval1 = fwrite ( "" "" , sizeof ( char ) , 1 , fp )"	778:1:20379:20419	752941	11	True				
ANR	753085	AssignmentExpression	"rval1 = fwrite ( "" "" , sizeof ( char ) , 1 , fp )"		752941	0		=			
ANR	753086	Identifier	rval1		752941	0					
ANR	753087	CallExpression	"fwrite ( "" "" , sizeof ( char ) , 1 , fp )"		752941	1					
ANR	753088	Callee	fwrite		752941	0					
ANR	753089	Identifier	fwrite		752941	0					
ANR	753090	ArgumentList	""" """		752941	1					
ANR	753091	Argument	""" """		752941	0					
ANR	753092	PrimaryExpression	""" """		752941	0					
ANR	753093	Argument	sizeof ( char )		752941	1					
ANR	753094	SizeofExpression	sizeof ( char )		752941	0					
ANR	753095	Sizeof	sizeof		752941	0					
ANR	753096	SizeofOperand	char		752941	1					
ANR	753097	Argument	1		752941	2					
ANR	753098	PrimaryExpression	1		752941	0					
ANR	753099	Argument	fp		752941	3					
ANR	753100	Identifier	fp		752941	0					
ANR	753101	IfStatement	if ( rval1 < 1 )		752941	12					
ANR	753102	Condition	rval1 < 1	779:5:20426:20434	752941	0	True				
ANR	753103	RelationalExpression	rval1 < 1		752941	0		<			
ANR	753104	Identifier	rval1		752941	0					
ANR	753105	PrimaryExpression	1		752941	1					
ANR	753106	ReturnStatement	return - 1 ;	779:16:20437:20446	752941	1	True				
ANR	753107	UnaryOperationExpression	- 1		752941	0					
ANR	753108	UnaryOperator	-		752941	0					
ANR	753109	PrimaryExpression	1		752941	1					
ANR	753110	ExpressionStatement	rval += rval1	780:1:20449:20462	752941	13	True				
ANR	753111	AssignmentExpression	rval += rval1		752941	0		+=			
ANR	753112	Identifier	rval		752941	0					
ANR	753113	Identifier	rval1		752941	1					
ANR	753114	ExpressionStatement	s = targettype	781:1:20465:20479	752941	14	True				
ANR	753115	AssignmentExpression	s = targettype		752941	0		=			
ANR	753116	Identifier	s		752941	0					
ANR	753117	Identifier	targettype		752941	1					
ANR	753118	IfStatement	if ( ! s || ! s [ 0 ] )		752941	15					
ANR	753119	Condition	! s || ! s [ 0 ]	782:5:20486:20496	752941	0	True				
ANR	753120	OrExpression	! s || ! s [ 0 ]		752941	0		||			
ANR	753121	UnaryOperationExpression	! s		752941	0					
ANR	753122	UnaryOperator	!		752941	0					
ANR	753123	Identifier	s		752941	1					
ANR	753124	UnaryOperationExpression	! s [ 0 ]		752941	1					
ANR	753125	UnaryOperator	!		752941	0					
ANR	753126	ArrayIndexing	s [ 0 ]		752941	1					
ANR	753127	Identifier	s		752941	0					
ANR	753128	PrimaryExpression	0		752941	1					
ANR	753129	CompoundStatement		22:19:641:641	752941	1					
ANR	753130	ExpressionStatement	s = EMPTY_CLASSAD_TYPE_NAME	786:2:20639:20666	752941	0	True				
ANR	753131	AssignmentExpression	s = EMPTY_CLASSAD_TYPE_NAME		752941	0		=			
ANR	753132	Identifier	s		752941	0					
ANR	753133	Identifier	EMPTY_CLASSAD_TYPE_NAME		752941	1					
ANR	753134	ExpressionStatement	"rval1 = fwrite ( s , sizeof ( char ) , strlen ( s ) , fp )"	788:1:20672:20717	752941	16	True				
ANR	753135	AssignmentExpression	"rval1 = fwrite ( s , sizeof ( char ) , strlen ( s ) , fp )"		752941	0		=			
ANR	753136	Identifier	rval1		752941	0					
ANR	753137	CallExpression	"fwrite ( s , sizeof ( char ) , strlen ( s ) , fp )"		752941	1					
ANR	753138	Callee	fwrite		752941	0					
ANR	753139	Identifier	fwrite		752941	0					
ANR	753140	ArgumentList	s		752941	1					
ANR	753141	Argument	s		752941	0					
ANR	753142	Identifier	s		752941	0					
ANR	753143	Argument	sizeof ( char )		752941	1					
ANR	753144	SizeofExpression	sizeof ( char )		752941	0					
ANR	753145	Sizeof	sizeof		752941	0					
ANR	753146	SizeofOperand	char		752941	1					
ANR	753147	Argument	strlen ( s )		752941	2					
ANR	753148	CallExpression	strlen ( s )		752941	0					
ANR	753149	Callee	strlen		752941	0					
ANR	753150	Identifier	strlen		752941	0					
ANR	753151	ArgumentList	s		752941	1					
ANR	753152	Argument	s		752941	0					
ANR	753153	Identifier	s		752941	0					
ANR	753154	Argument	fp		752941	3					
ANR	753155	Identifier	fp		752941	0					
ANR	753156	IfStatement	if ( rval1 < ( int ) strlen ( s ) )		752941	17					
ANR	753157	Condition	rval1 < ( int ) strlen ( s )	789:5:20724:20745	752941	0	True				
ANR	753158	RelationalExpression	rval1 < ( int ) strlen ( s )		752941	0		<			
ANR	753159	Identifier	rval1		752941	0					
ANR	753160	CastExpression	( int ) strlen ( s )		752941	1					
ANR	753161	CastTarget	int		752941	0					
ANR	753162	CallExpression	strlen ( s )		752941	1					
ANR	753163	Callee	strlen		752941	0					
ANR	753164	Identifier	strlen		752941	0					
ANR	753165	ArgumentList	s		752941	1					
ANR	753166	Argument	s		752941	0					
ANR	753167	Identifier	s		752941	0					
ANR	753168	ReturnStatement	return - 1 ;	789:29:20748:20757	752941	1	True				
ANR	753169	UnaryOperationExpression	- 1		752941	0					
ANR	753170	UnaryOperator	-		752941	0					
ANR	753171	PrimaryExpression	1		752941	1					
ANR	753172	ReturnStatement	return rval + rval1 ;	790:1:20760:20779	752941	18	True				
ANR	753173	AdditiveExpression	rval + rval1		752941	0		+			
ANR	753174	Identifier	rval		752941	0					
ANR	753175	Identifier	rval1		752941	1					
ANR	753176	ReturnType	int		752941	1					
ANR	753177	Identifier	LogNewClassAd :: WriteBody		752941	2					
ANR	753178	ParameterList	FILE * fp		752941	3					
ANR	753179	Parameter	FILE * fp	760:25:19848:19855	752941	0	True				
ANR	753180	ParameterType	FILE *		752941	0					
ANR	753181	Identifier	fp		752941	1					
ANR	753182	CFGEntryNode	ENTRY		752941		True				
ANR	753183	CFGExitNode	EXIT		752941		True				
ANR	753184	Symbol	strlen		752941						
ANR	753185	Symbol	s		752941						
ANR	753186	Symbol	targettype		752941						
ANR	753187	Symbol	EMPTY_CLASSAD_TYPE_NAME		752941						
ANR	753188	Symbol	fwrite		752941						
ANR	753189	Symbol	mytype		752941						
ANR	753190	Symbol	fp		752941						
ANR	753191	Symbol	rval		752941						
ANR	753192	Symbol	* s		752941						
ANR	753193	Symbol	key		752941						
ANR	753194	Symbol	rval1		752941						
ANR	753195	Function	LogDestroyClassAd :: LogDestroyClassAd	793:0:20784:20895							
ANR	753196	FunctionDef	LogDestroyClassAd :: LogDestroyClassAd (const char * k)		753195	0					
ANR	753197	CompoundStatement		794:0:20836:20895	753195	0					
ANR	753198	ExpressionStatement	op_type = CondorLogOp_DestroyClassAd	795:1:20839:20875	753195	0	True				
ANR	753199	AssignmentExpression	op_type = CondorLogOp_DestroyClassAd		753195	0		=			
ANR	753200	Identifier	op_type		753195	0					
ANR	753201	Identifier	CondorLogOp_DestroyClassAd		753195	1					
ANR	753202	ExpressionStatement	key = strdup ( k )	796:1:20878:20893	753195	1	True				
ANR	753203	AssignmentExpression	key = strdup ( k )		753195	0		=			
ANR	753204	Identifier	key		753195	0					
ANR	753205	CallExpression	strdup ( k )		753195	1					
ANR	753206	Callee	strdup		753195	0					
ANR	753207	Identifier	strdup		753195	0					
ANR	753208	ArgumentList	k		753195	1					
ANR	753209	Argument	k		753195	0					
ANR	753210	Identifier	k		753195	0					
ANR	753211	Identifier	LogDestroyClassAd :: LogDestroyClassAd		753195	1					
ANR	753212	ParameterList	const char * k		753195	2					
ANR	753213	Parameter	const char * k	793:37:20821:20833	753195	0	True				
ANR	753214	ParameterType	const char *		753195	0					
ANR	753215	Identifier	k		753195	1					
ANR	753216	CFGEntryNode	ENTRY		753195		True				
ANR	753217	CFGExitNode	EXIT		753195		True				
ANR	753218	Symbol	k		753195						
ANR	753219	Symbol	op_type		753195						
ANR	753220	Symbol	strdup		753195						
ANR	753221	Symbol	key		753195						
ANR	753222	Symbol	CondorLogOp_DestroyClassAd		753195						
ANR	753223	Function	LogDestroyClassAd :: ~LogDestroyClassAd	800:0:20899:20953							
ANR	753224	FunctionDef	LogDestroyClassAd :: ~LogDestroyClassAd ()		753223	0					
ANR	753225	CompoundStatement		801:0:20939:20953	753223	0					
ANR	753226	ExpressionStatement	free ( key )	802:1:20942:20951	753223	0	True				
ANR	753227	CallExpression	free ( key )		753223	0					
ANR	753228	Callee	free		753223	0					
ANR	753229	Identifier	free		753223	0					
ANR	753230	ArgumentList	key		753223	1					
ANR	753231	Argument	key		753223	0					
ANR	753232	Identifier	key		753223	0					
ANR	753233	Identifier	LogDestroyClassAd :: ~LogDestroyClassAd		753223	1					
ANR	753234	ParameterList			753223	2					
ANR	753235	CFGEntryNode	ENTRY		753223		True				
ANR	753236	CFGExitNode	EXIT		753223		True				
ANR	753237	Symbol	key		753223						
ANR	753238	Function	LogDestroyClassAd :: Play	806:0:20957:21281							
ANR	753239	FunctionDef	LogDestroyClassAd :: Play (void * data_structure)		753238	0					
ANR	753240	CompoundStatement		808:0:21007:21281	753238	0					
ANR	753241	IdentifierDeclStatement	ClassAdHashTable * table = ( ClassAdHashTable * ) data_structure ;	809:1:21010:21070	753238	0	True				
ANR	753242	IdentifierDecl	* table = ( ClassAdHashTable * ) data_structure		753238	0					
ANR	753243	IdentifierDeclType	ClassAdHashTable *		753238	0					
ANR	753244	Identifier	table		753238	1					
ANR	753245	AssignmentExpression	* table = ( ClassAdHashTable * ) data_structure		753238	2		=			
ANR	753246	Identifier	table		753238	0					
ANR	753247	CastExpression	( ClassAdHashTable * ) data_structure		753238	1					
ANR	753248	CastTarget	ClassAdHashTable *		753238	0					
ANR	753249	Identifier	data_structure		753238	1					
ANR	753250	IdentifierDeclStatement	HashKey hkey ( key ) ;	810:1:21073:21090	753238	1	True				
ANR	753251	IdentifierDecl	hkey ( key )		753238	0					
ANR	753252	IdentifierDeclType	HashKey		753238	0					
ANR	753253	Identifier	hkey		753238	1					
ANR	753254	Identifier	key		753238	2					
ANR	753255	IdentifierDeclStatement	ClassAd * ad ;	811:1:21093:21104	753238	2	True				
ANR	753256	IdentifierDecl	* ad		753238	0					
ANR	753257	IdentifierDeclType	ClassAd *		753238	0					
ANR	753258	Identifier	ad		753238	1					
ANR	753259	IfStatement	"if ( table -> lookup ( hkey , ad ) < 0 )"		753238	3					
ANR	753260	Condition	"table -> lookup ( hkey , ad ) < 0"	813:5:21112:21138	753238	0	True				
ANR	753261	RelationalExpression	"table -> lookup ( hkey , ad ) < 0"		753238	0		<			
ANR	753262	CallExpression	"table -> lookup ( hkey , ad )"		753238	0					
ANR	753263	Callee	table -> lookup		753238	0					
ANR	753264	PtrMemberAccess	table -> lookup		753238	0					
ANR	753265	Identifier	table		753238	0					
ANR	753266	Identifier	lookup		753238	1					
ANR	753267	ArgumentList	hkey		753238	1					
ANR	753268	Argument	hkey		753238	0					
ANR	753269	Identifier	hkey		753238	0					
ANR	753270	Argument	ad		753238	1					
ANR	753271	Identifier	ad		753238	0					
ANR	753272	PrimaryExpression	0		753238	1					
ANR	753273	CompoundStatement		6:34:133:133	753238	1					
ANR	753274	ReturnStatement	return - 1 ;	814:2:21145:21154	753238	0	True				
ANR	753275	UnaryOperationExpression	- 1		753238	0					
ANR	753276	UnaryOperator	-		753238	0					
ANR	753277	PrimaryExpression	1		753238	1					
ANR	753278	ExpressionStatement	ClassAdLogPluginManager :: DestroyClassAd ( key )	818:1:21186:21230	753238	4	True				
ANR	753279	CallExpression	ClassAdLogPluginManager :: DestroyClassAd ( key )		753238	0					
ANR	753280	Callee	ClassAdLogPluginManager :: DestroyClassAd		753238	0					
ANR	753281	Identifier	ClassAdLogPluginManager :: DestroyClassAd		753238	0					
ANR	753282	ArgumentList	key		753238	1					
ANR	753283	Argument	key		753238	0					
ANR	753284	Identifier	key		753238	0					
ANR	753285	Statement	delete	821:1:21241:21246	753238	5	True				
ANR	753286	ExpressionStatement	ad	821:8:21248:21250	753238	6	True				
ANR	753287	Identifier	ad		753238	0					
ANR	753288	ReturnStatement	return table -> remove ( hkey ) ;	822:1:21253:21279	753238	7	True				
ANR	753289	CallExpression	table -> remove ( hkey )		753238	0					
ANR	753290	Callee	table -> remove		753238	0					
ANR	753291	PtrMemberAccess	table -> remove		753238	0					
ANR	753292	Identifier	table		753238	0					
ANR	753293	Identifier	remove		753238	1					
ANR	753294	ArgumentList	hkey		753238	1					
ANR	753295	Argument	hkey		753238	0					
ANR	753296	Identifier	hkey		753238	0					
ANR	753297	ReturnType	int		753238	1					
ANR	753298	Identifier	LogDestroyClassAd :: Play		753238	2					
ANR	753299	ParameterList	void * data_structure		753238	3					
ANR	753300	Parameter	void * data_structure	807:24:20985:21004	753238	0	True				
ANR	753301	ParameterType	void *		753238	0					
ANR	753302	Identifier	data_structure		753238	1					
ANR	753303	CFGEntryNode	ENTRY		753238		True				
ANR	753304	CFGExitNode	EXIT		753238		True				
ANR	753305	Symbol	data_structure		753238						
ANR	753306	Symbol	ad		753238						
ANR	753307	Symbol	hkey		753238						
ANR	753308	Symbol	* table		753238						
ANR	753309	Symbol	table -> remove		753238						
ANR	753310	Symbol	table -> lookup		753238						
ANR	753311	Symbol	table		753238						
ANR	753312	Symbol	key		753238						
ANR	753313	Function	LogDestroyClassAd :: ReadBody	825:0:21284:21367							
ANR	753314	FunctionDef	LogDestroyClassAd :: ReadBody (FILE * fp)		753313	0					
ANR	753315	CompoundStatement		827:0:21326:21367	753313	0					
ANR	753316	ExpressionStatement	free ( key )	828:1:21329:21338	753313	0	True				
ANR	753317	CallExpression	free ( key )		753313	0					
ANR	753318	Callee	free		753313	0					
ANR	753319	Identifier	free		753313	0					
ANR	753320	ArgumentList	key		753313	1					
ANR	753321	Argument	key		753313	0					
ANR	753322	Identifier	key		753313	0					
ANR	753323	ReturnStatement	"return readword ( fp , key ) ;"	829:1:21341:21365	753313	1	True				
ANR	753324	CallExpression	"readword ( fp , key )"		753313	0					
ANR	753325	Callee	readword		753313	0					
ANR	753326	Identifier	readword		753313	0					
ANR	753327	ArgumentList	fp		753313	1					
ANR	753328	Argument	fp		753313	0					
ANR	753329	Identifier	fp		753313	0					
ANR	753330	Argument	key		753313	1					
ANR	753331	Identifier	key		753313	0					
ANR	753332	ReturnType	int		753313	1					
ANR	753333	Identifier	LogDestroyClassAd :: ReadBody		753313	2					
ANR	753334	ParameterList	FILE * fp		753313	3					
ANR	753335	Parameter	FILE * fp	826:28:21316:21323	753313	0	True				
ANR	753336	ParameterType	FILE *		753313	0					
ANR	753337	Identifier	fp		753313	1					
ANR	753338	CFGEntryNode	ENTRY		753313		True				
ANR	753339	CFGExitNode	EXIT		753313		True				
ANR	753340	Symbol	fp		753313						
ANR	753341	Symbol	readword		753313						
ANR	753342	Symbol	key		753313						
ANR	753343	Function	LogSetAttribute :: LogSetAttribute	832:0:21370:21651							
ANR	753344	FunctionDef	"LogSetAttribute :: LogSetAttribute (const char * k , const char * n , const char * val , bool dirty)"		753343	0					
ANR	753345	CompoundStatement		833:0:21462:21651	753343	0					
ANR	753346	ExpressionStatement	op_type = CondorLogOp_SetAttribute	834:1:21465:21499	753343	0	True				
ANR	753347	AssignmentExpression	op_type = CondorLogOp_SetAttribute		753343	0		=			
ANR	753348	Identifier	op_type		753343	0					
ANR	753349	Identifier	CondorLogOp_SetAttribute		753343	1					
ANR	753350	ExpressionStatement	key = strdup ( k )	835:1:21502:21517	753343	1	True				
ANR	753351	AssignmentExpression	key = strdup ( k )		753343	0		=			
ANR	753352	Identifier	key		753343	0					
ANR	753353	CallExpression	strdup ( k )		753343	1					
ANR	753354	Callee	strdup		753343	0					
ANR	753355	Identifier	strdup		753343	0					
ANR	753356	ArgumentList	k		753343	1					
ANR	753357	Argument	k		753343	0					
ANR	753358	Identifier	k		753343	0					
ANR	753359	ExpressionStatement	name = strdup ( n )	836:1:21520:21536	753343	2	True				
ANR	753360	AssignmentExpression	name = strdup ( n )		753343	0		=			
ANR	753361	Identifier	name		753343	0					
ANR	753362	CallExpression	strdup ( n )		753343	1					
ANR	753363	Callee	strdup		753343	0					
ANR	753364	Identifier	strdup		753343	0					
ANR	753365	ArgumentList	n		753343	1					
ANR	753366	Argument	n		753343	0					
ANR	753367	Identifier	n		753343	0					
ANR	753368	IfStatement	if ( val && strlen ( val ) )		753343	3					
ANR	753369	Condition	val && strlen ( val )	837:5:21543:21560	753343	0	True				
ANR	753370	AndExpression	val && strlen ( val )		753343	0		&&			
ANR	753371	Identifier	val		753343	0					
ANR	753372	CallExpression	strlen ( val )		753343	1					
ANR	753373	Callee	strlen		753343	0					
ANR	753374	Identifier	strlen		753343	0					
ANR	753375	ArgumentList	val		753343	1					
ANR	753376	Argument	val		753343	0					
ANR	753377	Identifier	val		753343	0					
ANR	753378	CompoundStatement		5:25:100:100	753343	1					
ANR	753379	ExpressionStatement	value = strdup ( val )	838:2:21567:21586	753343	0	True				
ANR	753380	AssignmentExpression	value = strdup ( val )		753343	0		=			
ANR	753381	Identifier	value		753343	0					
ANR	753382	CallExpression	strdup ( val )		753343	1					
ANR	753383	Callee	strdup		753343	0					
ANR	753384	Identifier	strdup		753343	0					
ANR	753385	ArgumentList	val		753343	1					
ANR	753386	Argument	val		753343	0					
ANR	753387	Identifier	val		753343	0					
ANR	753388	ElseStatement	else		753343	0					
ANR	753389	CompoundStatement		7:8:133:133	753343	0					
ANR	753390	ExpressionStatement	"value = strdup ( ""UNDEFINED"" )"	840:2:21600:21627	753343	0	True				
ANR	753391	AssignmentExpression	"value = strdup ( ""UNDEFINED"" )"		753343	0		=			
ANR	753392	Identifier	value		753343	0					
ANR	753393	CallExpression	"strdup ( ""UNDEFINED"" )"		753343	1					
ANR	753394	Callee	strdup		753343	0					
ANR	753395	Identifier	strdup		753343	0					
ANR	753396	ArgumentList	"""UNDEFINED"""		753343	1					
ANR	753397	Argument	"""UNDEFINED"""		753343	0					
ANR	753398	PrimaryExpression	"""UNDEFINED"""		753343	0					
ANR	753399	ExpressionStatement	is_dirty = dirty	842:1:21633:21649	753343	4	True				
ANR	753400	AssignmentExpression	is_dirty = dirty		753343	0		=			
ANR	753401	Identifier	is_dirty		753343	0					
ANR	753402	Identifier	dirty		753343	1					
ANR	753403	Identifier	LogSetAttribute :: LogSetAttribute		753343	1					
ANR	753404	ParameterList	"const char * k , const char * n , const char * val , bool dirty"		753343	2					
ANR	753405	Parameter	const char * k	832:33:21403:21415	753343	0	True				
ANR	753406	ParameterType	const char *		753343	0					
ANR	753407	Identifier	k		753343	1					
ANR	753408	Parameter	const char * n	832:48:21418:21430	753343	1	True				
ANR	753409	ParameterType	const char *		753343	0					
ANR	753410	Identifier	n		753343	1					
ANR	753411	Parameter	const char * val	832:63:21433:21447	753343	2	True				
ANR	753412	ParameterType	const char *		753343	0					
ANR	753413	Identifier	val		753343	1					
ANR	753414	Parameter	bool dirty	832:80:21450:21459	753343	3	True				
ANR	753415	ParameterType	bool		753343	0					
ANR	753416	Identifier	dirty		753343	1					
ANR	753417	CFGEntryNode	ENTRY		753343		True				
ANR	753418	CFGExitNode	EXIT		753343		True				
ANR	753419	Symbol	val		753343						
ANR	753420	Symbol	dirty		753343						
ANR	753421	Symbol	strlen		753343						
ANR	753422	Symbol	name		753343						
ANR	753423	Symbol	CondorLogOp_SetAttribute		753343						
ANR	753424	Symbol	is_dirty		753343						
ANR	753425	Symbol	k		753343						
ANR	753426	Symbol	op_type		753343						
ANR	753427	Symbol	strdup		753343						
ANR	753428	Symbol	value		753343						
ANR	753429	Symbol	n		753343						
ANR	753430	Symbol	key		753343						
ANR	753431	Function	LogSetAttribute :: ~LogSetAttribute	846:0:21655:21732							
ANR	753432	FunctionDef	LogSetAttribute :: ~LogSetAttribute ()		753431	0					
ANR	753433	CompoundStatement		847:0:21691:21732	753431	0					
ANR	753434	ExpressionStatement	free ( key )	848:1:21694:21703	753431	0	True				
ANR	753435	CallExpression	free ( key )		753431	0					
ANR	753436	Callee	free		753431	0					
ANR	753437	Identifier	free		753431	0					
ANR	753438	ArgumentList	key		753431	1					
ANR	753439	Argument	key		753431	0					
ANR	753440	Identifier	key		753431	0					
ANR	753441	ExpressionStatement	free ( name )	849:1:21706:21716	753431	1	True				
ANR	753442	CallExpression	free ( name )		753431	0					
ANR	753443	Callee	free		753431	0					
ANR	753444	Identifier	free		753431	0					
ANR	753445	ArgumentList	name		753431	1					
ANR	753446	Argument	name		753431	0					
ANR	753447	Identifier	name		753431	0					
ANR	753448	ExpressionStatement	free ( value )	850:1:21719:21730	753431	2	True				
ANR	753449	CallExpression	free ( value )		753431	0					
ANR	753450	Callee	free		753431	0					
ANR	753451	Identifier	free		753431	0					
ANR	753452	ArgumentList	value		753431	1					
ANR	753453	Argument	value		753431	0					
ANR	753454	Identifier	value		753431	0					
ANR	753455	Identifier	LogSetAttribute :: ~LogSetAttribute		753431	1					
ANR	753456	ParameterList			753431	2					
ANR	753457	CFGEntryNode	ENTRY		753431		True				
ANR	753458	CFGExitNode	EXIT		753431		True				
ANR	753459	Symbol	name		753431						
ANR	753460	Symbol	value		753431						
ANR	753461	Symbol	key		753431						
ANR	753462	Function	LogSetAttribute :: Play	854:0:21736:22111							
ANR	753463	FunctionDef	LogSetAttribute :: Play (void * data_structure)		753462	0					
ANR	753464	CompoundStatement		856:0:21784:22111	753462	0					
ANR	753465	IdentifierDeclStatement	ClassAdHashTable * table = ( ClassAdHashTable * ) data_structure ;	857:1:21787:21847	753462	0	True				
ANR	753466	IdentifierDecl	* table = ( ClassAdHashTable * ) data_structure		753462	0					
ANR	753467	IdentifierDeclType	ClassAdHashTable *		753462	0					
ANR	753468	Identifier	table		753462	1					
ANR	753469	AssignmentExpression	* table = ( ClassAdHashTable * ) data_structure		753462	2		=			
ANR	753470	Identifier	table		753462	0					
ANR	753471	CastExpression	( ClassAdHashTable * ) data_structure		753462	1					
ANR	753472	CastTarget	ClassAdHashTable *		753462	0					
ANR	753473	Identifier	data_structure		753462	1					
ANR	753474	IdentifierDeclStatement	int rval ;	858:1:21850:21858	753462	1	True				
ANR	753475	IdentifierDecl	rval		753462	0					
ANR	753476	IdentifierDeclType	int		753462	0					
ANR	753477	Identifier	rval		753462	1					
ANR	753478	IdentifierDeclStatement	ClassAd * ad = 0 ;	859:1:21861:21876	753462	2	True				
ANR	753479	IdentifierDecl	* ad = 0		753462	0					
ANR	753480	IdentifierDeclType	ClassAd *		753462	0					
ANR	753481	Identifier	ad		753462	1					
ANR	753482	AssignmentExpression	* ad = 0		753462	2		=			
ANR	753483	Identifier	ad		753462	0					
ANR	753484	PrimaryExpression	0		753462	1					
ANR	753485	IfStatement	"if ( table -> lookup ( HashKey ( key ) , ad ) < 0 )"		753462	3					
ANR	753486	Condition	"table -> lookup ( HashKey ( key ) , ad ) < 0"	860:5:21883:21917	753462	0	True				
ANR	753487	RelationalExpression	"table -> lookup ( HashKey ( key ) , ad ) < 0"		753462	0		<			
ANR	753488	CallExpression	"table -> lookup ( HashKey ( key ) , ad )"		753462	0					
ANR	753489	Callee	table -> lookup		753462	0					
ANR	753490	PtrMemberAccess	table -> lookup		753462	0					
ANR	753491	Identifier	table		753462	0					
ANR	753492	Identifier	lookup		753462	1					
ANR	753493	ArgumentList	HashKey ( key )		753462	1					
ANR	753494	Argument	HashKey ( key )		753462	0					
ANR	753495	CallExpression	HashKey ( key )		753462	0					
ANR	753496	Callee	HashKey		753462	0					
ANR	753497	Identifier	HashKey		753462	0					
ANR	753498	ArgumentList	key		753462	1					
ANR	753499	Argument	key		753462	0					
ANR	753500	Identifier	key		753462	0					
ANR	753501	Argument	ad		753462	1					
ANR	753502	Identifier	ad		753462	0					
ANR	753503	PrimaryExpression	0		753462	1					
ANR	753504	ReturnStatement	return - 1 ;	861:2:21922:21931	753462	1	True				
ANR	753505	UnaryOperationExpression	- 1		753462	0					
ANR	753506	UnaryOperator	-		753462	0					
ANR	753507	PrimaryExpression	1		753462	1					
ANR	753508	ExpressionStatement	"rval = ad -> AssignExpr ( name , value )"	862:1:21934:21968	753462	4	True				
ANR	753509	AssignmentExpression	"rval = ad -> AssignExpr ( name , value )"		753462	0		=			
ANR	753510	Identifier	rval		753462	0					
ANR	753511	CallExpression	"ad -> AssignExpr ( name , value )"		753462	1					
ANR	753512	Callee	ad -> AssignExpr		753462	0					
ANR	753513	PtrMemberAccess	ad -> AssignExpr		753462	0					
ANR	753514	Identifier	ad		753462	0					
ANR	753515	Identifier	AssignExpr		753462	1					
ANR	753516	ArgumentList	name		753462	1					
ANR	753517	Argument	name		753462	0					
ANR	753518	Identifier	name		753462	0					
ANR	753519	Argument	value		753462	1					
ANR	753520	Identifier	value		753462	0					
ANR	753521	ExpressionStatement	"ad -> SetDirtyFlag ( name , is_dirty )"	863:1:21971:22003	753462	5	True				
ANR	753522	CallExpression	"ad -> SetDirtyFlag ( name , is_dirty )"		753462	0					
ANR	753523	Callee	ad -> SetDirtyFlag		753462	0					
ANR	753524	PtrMemberAccess	ad -> SetDirtyFlag		753462	0					
ANR	753525	Identifier	ad		753462	0					
ANR	753526	Identifier	SetDirtyFlag		753462	1					
ANR	753527	ArgumentList	name		753462	1					
ANR	753528	Argument	name		753462	0					
ANR	753529	Identifier	name		753462	0					
ANR	753530	Argument	is_dirty		753462	1					
ANR	753531	Identifier	is_dirty		753462	0					
ANR	753532	ExpressionStatement	"ClassAdLogPluginManager :: SetAttribute ( key , name , value )"	866:1:22032:22087	753462	6	True				
ANR	753533	CallExpression	"ClassAdLogPluginManager :: SetAttribute ( key , name , value )"		753462	0					
ANR	753534	Callee	ClassAdLogPluginManager :: SetAttribute		753462	0					
ANR	753535	Identifier	ClassAdLogPluginManager :: SetAttribute		753462	0					
ANR	753536	ArgumentList	key		753462	1					
ANR	753537	Argument	key		753462	0					
ANR	753538	Identifier	key		753462	0					
ANR	753539	Argument	name		753462	1					
ANR	753540	Identifier	name		753462	0					
ANR	753541	Argument	value		753462	2					
ANR	753542	Identifier	value		753462	0					
ANR	753543	ReturnStatement	return rval ;	869:1:22098:22109	753462	7	True				
ANR	753544	Identifier	rval		753462	0					
ANR	753545	ReturnType	int		753462	1					
ANR	753546	Identifier	LogSetAttribute :: Play		753462	2					
ANR	753547	ParameterList	void * data_structure		753462	3					
ANR	753548	Parameter	void * data_structure	855:22:21762:21781	753462	0	True				
ANR	753549	ParameterType	void *		753462	0					
ANR	753550	Identifier	data_structure		753462	1					
ANR	753551	CFGEntryNode	ENTRY		753462		True				
ANR	753552	CFGExitNode	EXIT		753462		True				
ANR	753553	Symbol	ad		753462						
ANR	753554	Symbol	* table		753462						
ANR	753555	Symbol	* ad		753462						
ANR	753556	Symbol	is_dirty		753462						
ANR	753557	Symbol	data_structure		753462						
ANR	753558	Symbol	ad -> AssignExpr		753462						
ANR	753559	Symbol	name		753462						
ANR	753560	Symbol	rval		753462						
ANR	753561	Symbol	HashKey		753462						
ANR	753562	Symbol	table -> lookup		753462						
ANR	753563	Symbol	value		753462						
ANR	753564	Symbol	table		753462						
ANR	753565	Symbol	key		753462						
ANR	753566	Function	LogSetAttribute :: WriteBody	872:0:22114:23007							
ANR	753567	FunctionDef	LogSetAttribute :: WriteBody (FILE * fp)		753566	0					
ANR	753568	CompoundStatement		874:0:22155:23007	753566	0					
ANR	753569	IdentifierDeclStatement	"int rval , rval1 , len ;"	875:1:22158:22179	753566	0	True				
ANR	753570	IdentifierDecl	rval		753566	0					
ANR	753571	IdentifierDeclType	int		753566	0					
ANR	753572	Identifier	rval		753566	1					
ANR	753573	IdentifierDecl	rval1		753566	1					
ANR	753574	IdentifierDeclType	int		753566	0					
ANR	753575	Identifier	rval1		753566	1					
ANR	753576	IdentifierDecl	len		753566	2					
ANR	753577	IdentifierDeclType	int		753566	0					
ANR	753578	Identifier	len		753566	1					
ANR	753579	IfStatement	"if ( strchr ( key , '\\n' ) || strchr ( name , '\\n' ) || strchr ( value , '\\n' ) )"		753566	1					
ANR	753580	Condition	"strchr ( key , '\\n' ) || strchr ( name , '\\n' ) || strchr ( value , '\\n' )"	878:5:22256:22317	753566	0	True				
ANR	753581	OrExpression	"strchr ( key , '\\n' ) || strchr ( name , '\\n' ) || strchr ( value , '\\n' )"		753566	0		||			
ANR	753582	CallExpression	"strchr ( key , '\\n' )"		753566	0					
ANR	753583	Callee	strchr		753566	0					
ANR	753584	Identifier	strchr		753566	0					
ANR	753585	ArgumentList	key		753566	1					
ANR	753586	Argument	key		753566	0					
ANR	753587	Identifier	key		753566	0					
ANR	753588	Argument	'\\n'		753566	1					
ANR	753589	PrimaryExpression	'\\n'		753566	0					
ANR	753590	OrExpression	"strchr ( name , '\\n' ) || strchr ( value , '\\n' )"		753566	1		||			
ANR	753591	CallExpression	"strchr ( name , '\\n' )"		753566	0					
ANR	753592	Callee	strchr		753566	0					
ANR	753593	Identifier	strchr		753566	0					
ANR	753594	ArgumentList	name		753566	1					
ANR	753595	Argument	name		753566	0					
ANR	753596	Identifier	name		753566	0					
ANR	753597	Argument	'\\n'		753566	1					
ANR	753598	PrimaryExpression	'\\n'		753566	0					
ANR	753599	CallExpression	"strchr ( value , '\\n' )"		753566	1					
ANR	753600	Callee	strchr		753566	0					
ANR	753601	Identifier	strchr		753566	0					
ANR	753602	ArgumentList	value		753566	1					
ANR	753603	Argument	value		753566	0					
ANR	753604	Identifier	value		753566	0					
ANR	753605	Argument	'\\n'		753566	1					
ANR	753606	PrimaryExpression	'\\n'		753566	0					
ANR	753607	CompoundStatement		5:70:165:165	753566	1					
ANR	753608	ExpressionStatement	"dprintf ( D_ALWAYS , ""Refusing attempt to add '%s' = '%s' to record '%s' as it contains a newline, which is not allowed.\\n"" , name , value , key )"	879:2:22325:22464	753566	0	True				
ANR	753609	CallExpression	"dprintf ( D_ALWAYS , ""Refusing attempt to add '%s' = '%s' to record '%s' as it contains a newline, which is not allowed.\\n"" , name , value , key )"		753566	0					
ANR	753610	Callee	dprintf		753566	0					
ANR	753611	Identifier	dprintf		753566	0					
ANR	753612	ArgumentList	D_ALWAYS		753566	1					
ANR	753613	Argument	D_ALWAYS		753566	0					
ANR	753614	Identifier	D_ALWAYS		753566	0					
ANR	753615	Argument	"""Refusing attempt to add '%s' = '%s' to record '%s' as it contains a newline, which is not allowed.\\n"""		753566	1					
ANR	753616	PrimaryExpression	"""Refusing attempt to add '%s' = '%s' to record '%s' as it contains a newline, which is not allowed.\\n"""		753566	0					
ANR	753617	Argument	name		753566	2					
ANR	753618	Identifier	name		753566	0					
ANR	753619	Argument	value		753566	3					
ANR	753620	Identifier	value		753566	0					
ANR	753621	Argument	key		753566	4					
ANR	753622	Identifier	key		753566	0					
ANR	753623	ReturnStatement	return - 1 ;	880:2:22468:22477	753566	1	True				
ANR	753624	UnaryOperationExpression	- 1		753566	0					
ANR	753625	UnaryOperator	-		753566	0					
ANR	753626	PrimaryExpression	1		753566	1					
ANR	753627	ExpressionStatement	len = strlen ( key )	883:1:22484:22501	753566	2	True				
ANR	753628	AssignmentExpression	len = strlen ( key )		753566	0		=			
ANR	753629	Identifier	len		753566	0					
ANR	753630	CallExpression	strlen ( key )		753566	1					
ANR	753631	Callee	strlen		753566	0					
ANR	753632	Identifier	strlen		753566	0					
ANR	753633	ArgumentList	key		753566	1					
ANR	753634	Argument	key		753566	0					
ANR	753635	Identifier	key		753566	0					
ANR	753636	ExpressionStatement	"rval = fwrite ( key , sizeof ( char ) , len , fp )"	884:1:22504:22545	753566	3	True				
ANR	753637	AssignmentExpression	"rval = fwrite ( key , sizeof ( char ) , len , fp )"		753566	0		=			
ANR	753638	Identifier	rval		753566	0					
ANR	753639	CallExpression	"fwrite ( key , sizeof ( char ) , len , fp )"		753566	1					
ANR	753640	Callee	fwrite		753566	0					
ANR	753641	Identifier	fwrite		753566	0					
ANR	753642	ArgumentList	key		753566	1					
ANR	753643	Argument	key		753566	0					
ANR	753644	Identifier	key		753566	0					
ANR	753645	Argument	sizeof ( char )		753566	1					
ANR	753646	SizeofExpression	sizeof ( char )		753566	0					
ANR	753647	Sizeof	sizeof		753566	0					
ANR	753648	SizeofOperand	char		753566	1					
ANR	753649	Argument	len		753566	2					
ANR	753650	Identifier	len		753566	0					
ANR	753651	Argument	fp		753566	3					
ANR	753652	Identifier	fp		753566	0					
ANR	753653	IfStatement	if ( rval < len )		753566	4					
ANR	753654	Condition	rval < len	885:5:22552:22561	753566	0	True				
ANR	753655	RelationalExpression	rval < len		753566	0		<			
ANR	753656	Identifier	rval		753566	0					
ANR	753657	Identifier	len		753566	1					
ANR	753658	CompoundStatement		12:17:408:408	753566	1					
ANR	753659	ReturnStatement	return - 1 ;	886:2:22568:22577	753566	0	True				
ANR	753660	UnaryOperationExpression	- 1		753566	0					
ANR	753661	UnaryOperator	-		753566	0					
ANR	753662	PrimaryExpression	1		753566	1					
ANR	753663	ExpressionStatement	"rval1 = fwrite ( "" "" , sizeof ( char ) , 1 , fp )"	888:1:22583:22622	753566	5	True				
ANR	753664	AssignmentExpression	"rval1 = fwrite ( "" "" , sizeof ( char ) , 1 , fp )"		753566	0		=			
ANR	753665	Identifier	rval1		753566	0					
ANR	753666	CallExpression	"fwrite ( "" "" , sizeof ( char ) , 1 , fp )"		753566	1					
ANR	753667	Callee	fwrite		753566	0					
ANR	753668	Identifier	fwrite		753566	0					
ANR	753669	ArgumentList	""" """		753566	1					
ANR	753670	Argument	""" """		753566	0					
ANR	753671	PrimaryExpression	""" """		753566	0					
ANR	753672	Argument	sizeof ( char )		753566	1					
ANR	753673	SizeofExpression	sizeof ( char )		753566	0					
ANR	753674	Sizeof	sizeof		753566	0					
ANR	753675	SizeofOperand	char		753566	1					
ANR	753676	Argument	1		753566	2					
ANR	753677	PrimaryExpression	1		753566	0					
ANR	753678	Argument	fp		753566	3					
ANR	753679	Identifier	fp		753566	0					
ANR	753680	IfStatement	if ( rval1 < 1 )		753566	6					
ANR	753681	Condition	rval1 < 1	889:5:22629:22637	753566	0	True				
ANR	753682	RelationalExpression	rval1 < 1		753566	0		<			
ANR	753683	Identifier	rval1		753566	0					
ANR	753684	PrimaryExpression	1		753566	1					
ANR	753685	CompoundStatement		16:16:484:484	753566	1					
ANR	753686	ReturnStatement	return - 1 ;	890:2:22644:22653	753566	0	True				
ANR	753687	UnaryOperationExpression	- 1		753566	0					
ANR	753688	UnaryOperator	-		753566	0					
ANR	753689	PrimaryExpression	1		753566	1					
ANR	753690	ExpressionStatement	rval1 += rval	892:1:22659:22672	753566	7	True				
ANR	753691	AssignmentExpression	rval1 += rval		753566	0		+=			
ANR	753692	Identifier	rval1		753566	0					
ANR	753693	Identifier	rval		753566	1					
ANR	753694	ExpressionStatement	len = strlen ( name )	893:1:22675:22693	753566	8	True				
ANR	753695	AssignmentExpression	len = strlen ( name )		753566	0		=			
ANR	753696	Identifier	len		753566	0					
ANR	753697	CallExpression	strlen ( name )		753566	1					
ANR	753698	Callee	strlen		753566	0					
ANR	753699	Identifier	strlen		753566	0					
ANR	753700	ArgumentList	name		753566	1					
ANR	753701	Argument	name		753566	0					
ANR	753702	Identifier	name		753566	0					
ANR	753703	ExpressionStatement	"rval = fwrite ( name , sizeof ( char ) , len , fp )"	894:1:22696:22738	753566	9	True				
ANR	753704	AssignmentExpression	"rval = fwrite ( name , sizeof ( char ) , len , fp )"		753566	0		=			
ANR	753705	Identifier	rval		753566	0					
ANR	753706	CallExpression	"fwrite ( name , sizeof ( char ) , len , fp )"		753566	1					
ANR	753707	Callee	fwrite		753566	0					
ANR	753708	Identifier	fwrite		753566	0					
ANR	753709	ArgumentList	name		753566	1					
ANR	753710	Argument	name		753566	0					
ANR	753711	Identifier	name		753566	0					
ANR	753712	Argument	sizeof ( char )		753566	1					
ANR	753713	SizeofExpression	sizeof ( char )		753566	0					
ANR	753714	Sizeof	sizeof		753566	0					
ANR	753715	SizeofOperand	char		753566	1					
ANR	753716	Argument	len		753566	2					
ANR	753717	Identifier	len		753566	0					
ANR	753718	Argument	fp		753566	3					
ANR	753719	Identifier	fp		753566	0					
ANR	753720	IfStatement	if ( rval < len )		753566	10					
ANR	753721	Condition	rval < len	895:5:22745:22754	753566	0	True				
ANR	753722	RelationalExpression	rval < len		753566	0		<			
ANR	753723	Identifier	rval		753566	0					
ANR	753724	Identifier	len		753566	1					
ANR	753725	CompoundStatement		22:17:601:601	753566	1					
ANR	753726	ReturnStatement	return - 1 ;	896:2:22761:22770	753566	0	True				
ANR	753727	UnaryOperationExpression	- 1		753566	0					
ANR	753728	UnaryOperator	-		753566	0					
ANR	753729	PrimaryExpression	1		753566	1					
ANR	753730	ExpressionStatement	rval1 += rval	898:1:22776:22789	753566	11	True				
ANR	753731	AssignmentExpression	rval1 += rval		753566	0		+=			
ANR	753732	Identifier	rval1		753566	0					
ANR	753733	Identifier	rval		753566	1					
ANR	753734	ExpressionStatement	"rval = fwrite ( "" "" , sizeof ( char ) , 1 , fp )"	899:1:22792:22831	753566	12	True				
ANR	753735	AssignmentExpression	"rval = fwrite ( "" "" , sizeof ( char ) , 1 , fp )"		753566	0		=			
ANR	753736	Identifier	rval		753566	0					
ANR	753737	CallExpression	"fwrite ( "" "" , sizeof ( char ) , 1 , fp )"		753566	1					
ANR	753738	Callee	fwrite		753566	0					
ANR	753739	Identifier	fwrite		753566	0					
ANR	753740	ArgumentList	""" """		753566	1					
ANR	753741	Argument	""" """		753566	0					
ANR	753742	PrimaryExpression	""" """		753566	0					
ANR	753743	Argument	sizeof ( char )		753566	1					
ANR	753744	SizeofExpression	sizeof ( char )		753566	0					
ANR	753745	Sizeof	sizeof		753566	0					
ANR	753746	SizeofOperand	char		753566	1					
ANR	753747	Argument	1		753566	2					
ANR	753748	PrimaryExpression	1		753566	0					
ANR	753749	Argument	fp		753566	3					
ANR	753750	Identifier	fp		753566	0					
ANR	753751	IfStatement	if ( rval < 1 )		753566	13					
ANR	753752	Condition	rval < 1	900:5:22838:22845	753566	0	True				
ANR	753753	RelationalExpression	rval < 1		753566	0		<			
ANR	753754	Identifier	rval		753566	0					
ANR	753755	PrimaryExpression	1		753566	1					
ANR	753756	CompoundStatement		27:15:692:692	753566	1					
ANR	753757	ReturnStatement	return - 1 ;	901:2:22852:22861	753566	0	True				
ANR	753758	UnaryOperationExpression	- 1		753566	0					
ANR	753759	UnaryOperator	-		753566	0					
ANR	753760	PrimaryExpression	1		753566	1					
ANR	753761	ExpressionStatement	rval1 += rval	903:1:22867:22880	753566	14	True				
ANR	753762	AssignmentExpression	rval1 += rval		753566	0		+=			
ANR	753763	Identifier	rval1		753566	0					
ANR	753764	Identifier	rval		753566	1					
ANR	753765	ExpressionStatement	len = strlen ( value )	904:1:22883:22902	753566	15	True				
ANR	753766	AssignmentExpression	len = strlen ( value )		753566	0		=			
ANR	753767	Identifier	len		753566	0					
ANR	753768	CallExpression	strlen ( value )		753566	1					
ANR	753769	Callee	strlen		753566	0					
ANR	753770	Identifier	strlen		753566	0					
ANR	753771	ArgumentList	value		753566	1					
ANR	753772	Argument	value		753566	0					
ANR	753773	Identifier	value		753566	0					
ANR	753774	ExpressionStatement	"rval = fwrite ( value , sizeof ( char ) , len , fp )"	905:1:22905:22948	753566	16	True				
ANR	753775	AssignmentExpression	"rval = fwrite ( value , sizeof ( char ) , len , fp )"		753566	0		=			
ANR	753776	Identifier	rval		753566	0					
ANR	753777	CallExpression	"fwrite ( value , sizeof ( char ) , len , fp )"		753566	1					
ANR	753778	Callee	fwrite		753566	0					
ANR	753779	Identifier	fwrite		753566	0					
ANR	753780	ArgumentList	value		753566	1					
ANR	753781	Argument	value		753566	0					
ANR	753782	Identifier	value		753566	0					
ANR	753783	Argument	sizeof ( char )		753566	1					
ANR	753784	SizeofExpression	sizeof ( char )		753566	0					
ANR	753785	Sizeof	sizeof		753566	0					
ANR	753786	SizeofOperand	char		753566	1					
ANR	753787	Argument	len		753566	2					
ANR	753788	Identifier	len		753566	0					
ANR	753789	Argument	fp		753566	3					
ANR	753790	Identifier	fp		753566	0					
ANR	753791	IfStatement	if ( rval < len )		753566	17					
ANR	753792	Condition	rval < len	906:5:22955:22964	753566	0	True				
ANR	753793	RelationalExpression	rval < len		753566	0		<			
ANR	753794	Identifier	rval		753566	0					
ANR	753795	Identifier	len		753566	1					
ANR	753796	CompoundStatement		33:17:811:811	753566	1					
ANR	753797	ReturnStatement	return - 1 ;	907:2:22971:22980	753566	0	True				
ANR	753798	UnaryOperationExpression	- 1		753566	0					
ANR	753799	UnaryOperator	-		753566	0					
ANR	753800	PrimaryExpression	1		753566	1					
ANR	753801	ReturnStatement	return rval1 + rval ;	909:1:22986:23005	753566	18	True				
ANR	753802	AdditiveExpression	rval1 + rval		753566	0		+			
ANR	753803	Identifier	rval1		753566	0					
ANR	753804	Identifier	rval		753566	1					
ANR	753805	ReturnType	int		753566	1					
ANR	753806	Identifier	LogSetAttribute :: WriteBody		753566	2					
ANR	753807	ParameterList	FILE * fp		753566	3					
ANR	753808	Parameter	FILE * fp	873:27:22145:22152	753566	0	True				
ANR	753809	ParameterType	FILE *		753566	0					
ANR	753810	Identifier	fp		753566	1					
ANR	753811	CFGEntryNode	ENTRY		753566		True				
ANR	753812	CFGExitNode	EXIT		753566		True				
ANR	753813	Symbol	strlen		753566						
ANR	753814	Symbol	len		753566						
ANR	753815	Symbol	name		753566						
ANR	753816	Symbol	D_ALWAYS		753566						
ANR	753817	Symbol	strchr		753566						
ANR	753818	Symbol	fwrite		753566						
ANR	753819	Symbol	fp		753566						
ANR	753820	Symbol	rval		753566						
ANR	753821	Symbol	value		753566						
ANR	753822	Symbol	key		753566						
ANR	753823	Symbol	rval1		753566						
ANR	753824	Function	LogSetAttribute :: ReadBody	912:0:23010:23342							
ANR	753825	FunctionDef	LogSetAttribute :: ReadBody (FILE * fp)		753824	0					
ANR	753826	CompoundStatement		914:0:23050:23342	753824	0					
ANR	753827	IdentifierDeclStatement	"int rval , rval1 ;"	915:1:23053:23068	753824	0	True				
ANR	753828	IdentifierDecl	rval		753824	0					
ANR	753829	IdentifierDeclType	int		753824	0					
ANR	753830	Identifier	rval		753824	1					
ANR	753831	IdentifierDecl	rval1		753824	1					
ANR	753832	IdentifierDeclType	int		753824	0					
ANR	753833	Identifier	rval1		753824	1					
ANR	753834	ExpressionStatement	free ( key )	917:1:23072:23081	753824	1	True				
ANR	753835	CallExpression	free ( key )		753824	0					
ANR	753836	Callee	free		753824	0					
ANR	753837	Identifier	free		753824	0					
ANR	753838	ArgumentList	key		753824	1					
ANR	753839	Argument	key		753824	0					
ANR	753840	Identifier	key		753824	0					
ANR	753841	ExpressionStatement	"rval1 = readword ( fp , key )"	918:1:23084:23109	753824	2	True				
ANR	753842	AssignmentExpression	"rval1 = readword ( fp , key )"		753824	0		=			
ANR	753843	Identifier	rval1		753824	0					
ANR	753844	CallExpression	"readword ( fp , key )"		753824	1					
ANR	753845	Callee	readword		753824	0					
ANR	753846	Identifier	readword		753824	0					
ANR	753847	ArgumentList	fp		753824	1					
ANR	753848	Argument	fp		753824	0					
ANR	753849	Identifier	fp		753824	0					
ANR	753850	Argument	key		753824	1					
ANR	753851	Identifier	key		753824	0					
ANR	753852	IfStatement	if ( rval1 < 0 )		753824	3					
ANR	753853	Condition	rval1 < 0	919:5:23116:23124	753824	0	True				
ANR	753854	RelationalExpression	rval1 < 0		753824	0		<			
ANR	753855	Identifier	rval1		753824	0					
ANR	753856	PrimaryExpression	0		753824	1					
ANR	753857	CompoundStatement		6:16:76:76	753824	1					
ANR	753858	ReturnStatement	return rval1 ;	920:2:23131:23143	753824	0	True				
ANR	753859	Identifier	rval1		753824	0					
ANR	753860	ExpressionStatement	free ( name )	923:1:23150:23160	753824	4	True				
ANR	753861	CallExpression	free ( name )		753824	0					
ANR	753862	Callee	free		753824	0					
ANR	753863	Identifier	free		753824	0					
ANR	753864	ArgumentList	name		753824	1					
ANR	753865	Argument	name		753824	0					
ANR	753866	Identifier	name		753824	0					
ANR	753867	ExpressionStatement	"rval = readword ( fp , name )"	924:1:23163:23188	753824	5	True				
ANR	753868	AssignmentExpression	"rval = readword ( fp , name )"		753824	0		=			
ANR	753869	Identifier	rval		753824	0					
ANR	753870	CallExpression	"readword ( fp , name )"		753824	1					
ANR	753871	Callee	readword		753824	0					
ANR	753872	Identifier	readword		753824	0					
ANR	753873	ArgumentList	fp		753824	1					
ANR	753874	Argument	fp		753824	0					
ANR	753875	Identifier	fp		753824	0					
ANR	753876	Argument	name		753824	1					
ANR	753877	Identifier	name		753824	0					
ANR	753878	IfStatement	if ( rval < 0 )		753824	6					
ANR	753879	Condition	rval < 0	925:5:23195:23202	753824	0	True				
ANR	753880	RelationalExpression	rval < 0		753824	0		<			
ANR	753881	Identifier	rval		753824	0					
ANR	753882	PrimaryExpression	0		753824	1					
ANR	753883	CompoundStatement		12:15:154:154	753824	1					
ANR	753884	ReturnStatement	return rval ;	926:2:23209:23220	753824	0	True				
ANR	753885	Identifier	rval		753824	0					
ANR	753886	ExpressionStatement	rval1 += rval	928:1:23226:23239	753824	7	True				
ANR	753887	AssignmentExpression	rval1 += rval		753824	0		+=			
ANR	753888	Identifier	rval1		753824	0					
ANR	753889	Identifier	rval		753824	1					
ANR	753890	ExpressionStatement	free ( value )	930:1:23243:23254	753824	8	True				
ANR	753891	CallExpression	free ( value )		753824	0					
ANR	753892	Callee	free		753824	0					
ANR	753893	Identifier	free		753824	0					
ANR	753894	ArgumentList	value		753824	1					
ANR	753895	Argument	value		753824	0					
ANR	753896	Identifier	value		753824	0					
ANR	753897	ExpressionStatement	"rval = readline ( fp , value )"	931:1:23257:23283	753824	9	True				
ANR	753898	AssignmentExpression	"rval = readline ( fp , value )"		753824	0		=			
ANR	753899	Identifier	rval		753824	0					
ANR	753900	CallExpression	"readline ( fp , value )"		753824	1					
ANR	753901	Callee	readline		753824	0					
ANR	753902	Identifier	readline		753824	0					
ANR	753903	ArgumentList	fp		753824	1					
ANR	753904	Argument	fp		753824	0					
ANR	753905	Identifier	fp		753824	0					
ANR	753906	Argument	value		753824	1					
ANR	753907	Identifier	value		753824	0					
ANR	753908	IfStatement	if ( rval < 0 )		753824	10					
ANR	753909	Condition	rval < 0	932:5:23290:23297	753824	0	True				
ANR	753910	RelationalExpression	rval < 0		753824	0		<			
ANR	753911	Identifier	rval		753824	0					
ANR	753912	PrimaryExpression	0		753824	1					
ANR	753913	CompoundStatement		19:15:249:249	753824	1					
ANR	753914	ReturnStatement	return rval ;	933:2:23304:23315	753824	0	True				
ANR	753915	Identifier	rval		753824	0					
ANR	753916	ReturnStatement	return rval + rval1 ;	935:1:23321:23340	753824	11	True				
ANR	753917	AdditiveExpression	rval + rval1		753824	0		+			
ANR	753918	Identifier	rval		753824	0					
ANR	753919	Identifier	rval1		753824	1					
ANR	753920	ReturnType	int		753824	1					
ANR	753921	Identifier	LogSetAttribute :: ReadBody		753824	2					
ANR	753922	ParameterList	FILE * fp		753824	3					
ANR	753923	Parameter	FILE * fp	913:26:23040:23047	753824	0	True				
ANR	753924	ParameterType	FILE *		753824	0					
ANR	753925	Identifier	fp		753824	1					
ANR	753926	CFGEntryNode	ENTRY		753824		True				
ANR	753927	CFGExitNode	EXIT		753824		True				
ANR	753928	Symbol	name		753824						
ANR	753929	Symbol	fp		753824						
ANR	753930	Symbol	rval		753824						
ANR	753931	Symbol	readword		753824						
ANR	753932	Symbol	value		753824						
ANR	753933	Symbol	key		753824						
ANR	753934	Symbol	rval1		753824						
ANR	753935	Symbol	readline		753824						
ANR	753936	Function	LogDeleteAttribute :: LogDeleteAttribute	939:0:23346:23494							
ANR	753937	FunctionDef	"LogDeleteAttribute :: LogDeleteAttribute (const char * k , const char * n)"		753936	0					
ANR	753938	CompoundStatement		940:0:23415:23494	753936	0					
ANR	753939	ExpressionStatement	op_type = CondorLogOp_DeleteAttribute	941:1:23418:23455	753936	0	True				
ANR	753940	AssignmentExpression	op_type = CondorLogOp_DeleteAttribute		753936	0		=			
ANR	753941	Identifier	op_type		753936	0					
ANR	753942	Identifier	CondorLogOp_DeleteAttribute		753936	1					
ANR	753943	ExpressionStatement	key = strdup ( k )	942:1:23458:23473	753936	1	True				
ANR	753944	AssignmentExpression	key = strdup ( k )		753936	0		=			
ANR	753945	Identifier	key		753936	0					
ANR	753946	CallExpression	strdup ( k )		753936	1					
ANR	753947	Callee	strdup		753936	0					
ANR	753948	Identifier	strdup		753936	0					
ANR	753949	ArgumentList	k		753936	1					
ANR	753950	Argument	k		753936	0					
ANR	753951	Identifier	k		753936	0					
ANR	753952	ExpressionStatement	name = strdup ( n )	943:1:23476:23492	753936	2	True				
ANR	753953	AssignmentExpression	name = strdup ( n )		753936	0		=			
ANR	753954	Identifier	name		753936	0					
ANR	753955	CallExpression	strdup ( n )		753936	1					
ANR	753956	Callee	strdup		753936	0					
ANR	753957	Identifier	strdup		753936	0					
ANR	753958	ArgumentList	n		753936	1					
ANR	753959	Argument	n		753936	0					
ANR	753960	Identifier	n		753936	0					
ANR	753961	Identifier	LogDeleteAttribute :: LogDeleteAttribute		753936	1					
ANR	753962	ParameterList	"const char * k , const char * n"		753936	2					
ANR	753963	Parameter	const char * k	939:39:23385:23397	753936	0	True				
ANR	753964	ParameterType	const char *		753936	0					
ANR	753965	Identifier	k		753936	1					
ANR	753966	Parameter	const char * n	939:54:23400:23412	753936	1	True				
ANR	753967	ParameterType	const char *		753936	0					
ANR	753968	Identifier	n		753936	1					
ANR	753969	CFGEntryNode	ENTRY		753936		True				
ANR	753970	CFGExitNode	EXIT		753936		True				
ANR	753971	Symbol	CondorLogOp_DeleteAttribute		753936						
ANR	753972	Symbol	name		753936						
ANR	753973	Symbol	k		753936						
ANR	753974	Symbol	op_type		753936						
ANR	753975	Symbol	strdup		753936						
ANR	753976	Symbol	n		753936						
ANR	753977	Symbol	key		753936						
ANR	753978	Function	LogDeleteAttribute :: ~LogDeleteAttribute	947:0:23498:23567							
ANR	753979	FunctionDef	LogDeleteAttribute :: ~LogDeleteAttribute ()		753978	0					
ANR	753980	CompoundStatement		948:0:23540:23567	753978	0					
ANR	753981	ExpressionStatement	free ( key )	949:1:23543:23552	753978	0	True				
ANR	753982	CallExpression	free ( key )		753978	0					
ANR	753983	Callee	free		753978	0					
ANR	753984	Identifier	free		753978	0					
ANR	753985	ArgumentList	key		753978	1					
ANR	753986	Argument	key		753978	0					
ANR	753987	Identifier	key		753978	0					
ANR	753988	ExpressionStatement	free ( name )	950:1:23555:23565	753978	1	True				
ANR	753989	CallExpression	free ( name )		753978	0					
ANR	753990	Callee	free		753978	0					
ANR	753991	Identifier	free		753978	0					
ANR	753992	ArgumentList	name		753978	1					
ANR	753993	Argument	name		753978	0					
ANR	753994	Identifier	name		753978	0					
ANR	753995	Identifier	LogDeleteAttribute :: ~LogDeleteAttribute		753978	1					
ANR	753996	ParameterList			753978	2					
ANR	753997	CFGEntryNode	ENTRY		753978		True				
ANR	753998	CFGExitNode	EXIT		753978		True				
ANR	753999	Symbol	name		753978						
ANR	754000	Symbol	key		753978						
ANR	754001	Function	LogDeleteAttribute :: Play	954:0:23571:23874							
ANR	754002	FunctionDef	LogDeleteAttribute :: Play (void * data_structure)		754001	0					
ANR	754003	CompoundStatement		956:0:23622:23874	754001	0					
ANR	754004	IdentifierDeclStatement	ClassAdHashTable * table = ( ClassAdHashTable * ) data_structure ;	957:1:23625:23685	754001	0	True				
ANR	754005	IdentifierDecl	* table = ( ClassAdHashTable * ) data_structure		754001	0					
ANR	754006	IdentifierDeclType	ClassAdHashTable *		754001	0					
ANR	754007	Identifier	table		754001	1					
ANR	754008	AssignmentExpression	* table = ( ClassAdHashTable * ) data_structure		754001	2		=			
ANR	754009	Identifier	table		754001	0					
ANR	754010	CastExpression	( ClassAdHashTable * ) data_structure		754001	1					
ANR	754011	CastTarget	ClassAdHashTable *		754001	0					
ANR	754012	Identifier	data_structure		754001	1					
ANR	754013	IdentifierDeclStatement	ClassAd * ad = 0 ;	958:1:23688:23703	754001	1	True				
ANR	754014	IdentifierDecl	* ad = 0		754001	0					
ANR	754015	IdentifierDeclType	ClassAd *		754001	0					
ANR	754016	Identifier	ad		754001	1					
ANR	754017	AssignmentExpression	* ad = 0		754001	2		=			
ANR	754018	Identifier	ad		754001	0					
ANR	754019	PrimaryExpression	0		754001	1					
ANR	754020	IfStatement	"if ( table -> lookup ( HashKey ( key ) , ad ) < 0 )"		754001	2					
ANR	754021	Condition	"table -> lookup ( HashKey ( key ) , ad ) < 0"	959:5:23710:23744	754001	0	True				
ANR	754022	RelationalExpression	"table -> lookup ( HashKey ( key ) , ad ) < 0"		754001	0		<			
ANR	754023	CallExpression	"table -> lookup ( HashKey ( key ) , ad )"		754001	0					
ANR	754024	Callee	table -> lookup		754001	0					
ANR	754025	PtrMemberAccess	table -> lookup		754001	0					
ANR	754026	Identifier	table		754001	0					
ANR	754027	Identifier	lookup		754001	1					
ANR	754028	ArgumentList	HashKey ( key )		754001	1					
ANR	754029	Argument	HashKey ( key )		754001	0					
ANR	754030	CallExpression	HashKey ( key )		754001	0					
ANR	754031	Callee	HashKey		754001	0					
ANR	754032	Identifier	HashKey		754001	0					
ANR	754033	ArgumentList	key		754001	1					
ANR	754034	Argument	key		754001	0					
ANR	754035	Identifier	key		754001	0					
ANR	754036	Argument	ad		754001	1					
ANR	754037	Identifier	ad		754001	0					
ANR	754038	PrimaryExpression	0		754001	1					
ANR	754039	ReturnStatement	return - 1 ;	960:2:23749:23758	754001	1	True				
ANR	754040	UnaryOperationExpression	- 1		754001	0					
ANR	754041	UnaryOperator	-		754001	0					
ANR	754042	PrimaryExpression	1		754001	1					
ANR	754043	ExpressionStatement	"ClassAdLogPluginManager :: DeleteAttribute ( key , name )"	963:1:23787:23838	754001	3	True				
ANR	754044	CallExpression	"ClassAdLogPluginManager :: DeleteAttribute ( key , name )"		754001	0					
ANR	754045	Callee	ClassAdLogPluginManager :: DeleteAttribute		754001	0					
ANR	754046	Identifier	ClassAdLogPluginManager :: DeleteAttribute		754001	0					
ANR	754047	ArgumentList	key		754001	1					
ANR	754048	Argument	key		754001	0					
ANR	754049	Identifier	key		754001	0					
ANR	754050	Argument	name		754001	1					
ANR	754051	Identifier	name		754001	0					
ANR	754052	ReturnStatement	return ad -> Delete ( name ) ;	966:1:23849:23872	754001	4	True				
ANR	754053	CallExpression	ad -> Delete ( name )		754001	0					
ANR	754054	Callee	ad -> Delete		754001	0					
ANR	754055	PtrMemberAccess	ad -> Delete		754001	0					
ANR	754056	Identifier	ad		754001	0					
ANR	754057	Identifier	Delete		754001	1					
ANR	754058	ArgumentList	name		754001	1					
ANR	754059	Argument	name		754001	0					
ANR	754060	Identifier	name		754001	0					
ANR	754061	ReturnType	int		754001	1					
ANR	754062	Identifier	LogDeleteAttribute :: Play		754001	2					
ANR	754063	ParameterList	void * data_structure		754001	3					
ANR	754064	Parameter	void * data_structure	955:25:23600:23619	754001	0	True				
ANR	754065	ParameterType	void *		754001	0					
ANR	754066	Identifier	data_structure		754001	1					
ANR	754067	CFGEntryNode	ENTRY		754001		True				
ANR	754068	CFGExitNode	EXIT		754001		True				
ANR	754069	Symbol	data_structure		754001						
ANR	754070	Symbol	ad		754001						
ANR	754071	Symbol	name		754001						
ANR	754072	Symbol	* table		754001						
ANR	754073	Symbol	HashKey		754001						
ANR	754074	Symbol	* ad		754001						
ANR	754075	Symbol	ad -> Delete		754001						
ANR	754076	Symbol	table -> lookup		754001						
ANR	754077	Symbol	table		754001						
ANR	754078	Symbol	key		754001						
ANR	754079	Function	LogDeleteAttribute :: WriteBody	969:0:23877:24263							
ANR	754080	FunctionDef	LogDeleteAttribute :: WriteBody (FILE * fp)		754079	0					
ANR	754081	CompoundStatement		971:0:23921:24263	754079	0					
ANR	754082	IdentifierDeclStatement	"int rval , rval1 , len ;"	972:1:23924:23945	754079	0	True				
ANR	754083	IdentifierDecl	rval		754079	0					
ANR	754084	IdentifierDeclType	int		754079	0					
ANR	754085	Identifier	rval		754079	1					
ANR	754086	IdentifierDecl	rval1		754079	1					
ANR	754087	IdentifierDeclType	int		754079	0					
ANR	754088	Identifier	rval1		754079	1					
ANR	754089	IdentifierDecl	len		754079	2					
ANR	754090	IdentifierDeclType	int		754079	0					
ANR	754091	Identifier	len		754079	1					
ANR	754092	ExpressionStatement	len = strlen ( key )	974:1:23949:23966	754079	1	True				
ANR	754093	AssignmentExpression	len = strlen ( key )		754079	0		=			
ANR	754094	Identifier	len		754079	0					
ANR	754095	CallExpression	strlen ( key )		754079	1					
ANR	754096	Callee	strlen		754079	0					
ANR	754097	Identifier	strlen		754079	0					
ANR	754098	ArgumentList	key		754079	1					
ANR	754099	Argument	key		754079	0					
ANR	754100	Identifier	key		754079	0					
ANR	754101	ExpressionStatement	"rval = fwrite ( key , sizeof ( char ) , len , fp )"	975:1:23969:24010	754079	2	True				
ANR	754102	AssignmentExpression	"rval = fwrite ( key , sizeof ( char ) , len , fp )"		754079	0		=			
ANR	754103	Identifier	rval		754079	0					
ANR	754104	CallExpression	"fwrite ( key , sizeof ( char ) , len , fp )"		754079	1					
ANR	754105	Callee	fwrite		754079	0					
ANR	754106	Identifier	fwrite		754079	0					
ANR	754107	ArgumentList	key		754079	1					
ANR	754108	Argument	key		754079	0					
ANR	754109	Identifier	key		754079	0					
ANR	754110	Argument	sizeof ( char )		754079	1					
ANR	754111	SizeofExpression	sizeof ( char )		754079	0					
ANR	754112	Sizeof	sizeof		754079	0					
ANR	754113	SizeofOperand	char		754079	1					
ANR	754114	Argument	len		754079	2					
ANR	754115	Identifier	len		754079	0					
ANR	754116	Argument	fp		754079	3					
ANR	754117	Identifier	fp		754079	0					
ANR	754118	IfStatement	if ( rval < len )		754079	3					
ANR	754119	Condition	rval < len	976:5:24017:24026	754079	0	True				
ANR	754120	RelationalExpression	rval < len		754079	0		<			
ANR	754121	Identifier	rval		754079	0					
ANR	754122	Identifier	len		754079	1					
ANR	754123	CompoundStatement		6:17:107:107	754079	1					
ANR	754124	ReturnStatement	return - 1 ;	977:2:24033:24042	754079	0	True				
ANR	754125	UnaryOperationExpression	- 1		754079	0					
ANR	754126	UnaryOperator	-		754079	0					
ANR	754127	PrimaryExpression	1		754079	1					
ANR	754128	ExpressionStatement	"rval1 = fwrite ( "" "" , sizeof ( char ) , 1 , fp )"	979:1:24048:24088	754079	4	True				
ANR	754129	AssignmentExpression	"rval1 = fwrite ( "" "" , sizeof ( char ) , 1 , fp )"		754079	0		=			
ANR	754130	Identifier	rval1		754079	0					
ANR	754131	CallExpression	"fwrite ( "" "" , sizeof ( char ) , 1 , fp )"		754079	1					
ANR	754132	Callee	fwrite		754079	0					
ANR	754133	Identifier	fwrite		754079	0					
ANR	754134	ArgumentList	""" """		754079	1					
ANR	754135	Argument	""" """		754079	0					
ANR	754136	PrimaryExpression	""" """		754079	0					
ANR	754137	Argument	sizeof ( char )		754079	1					
ANR	754138	SizeofExpression	sizeof ( char )		754079	0					
ANR	754139	Sizeof	sizeof		754079	0					
ANR	754140	SizeofOperand	char		754079	1					
ANR	754141	Argument	1		754079	2					
ANR	754142	PrimaryExpression	1		754079	0					
ANR	754143	Argument	fp		754079	3					
ANR	754144	Identifier	fp		754079	0					
ANR	754145	IfStatement	if ( rval1 < 1 )		754079	5					
ANR	754146	Condition	rval1 < 1	980:5:24095:24103	754079	0	True				
ANR	754147	RelationalExpression	rval1 < 1		754079	0		<			
ANR	754148	Identifier	rval1		754079	0					
ANR	754149	PrimaryExpression	1		754079	1					
ANR	754150	CompoundStatement		10:16:184:184	754079	1					
ANR	754151	ReturnStatement	return - 1 ;	981:2:24110:24119	754079	0	True				
ANR	754152	UnaryOperationExpression	- 1		754079	0					
ANR	754153	UnaryOperator	-		754079	0					
ANR	754154	PrimaryExpression	1		754079	1					
ANR	754155	ExpressionStatement	rval1 += rval	983:1:24125:24138	754079	6	True				
ANR	754156	AssignmentExpression	rval1 += rval		754079	0		+=			
ANR	754157	Identifier	rval1		754079	0					
ANR	754158	Identifier	rval		754079	1					
ANR	754159	ExpressionStatement	len = strlen ( name )	984:1:24141:24159	754079	7	True				
ANR	754160	AssignmentExpression	len = strlen ( name )		754079	0		=			
ANR	754161	Identifier	len		754079	0					
ANR	754162	CallExpression	strlen ( name )		754079	1					
ANR	754163	Callee	strlen		754079	0					
ANR	754164	Identifier	strlen		754079	0					
ANR	754165	ArgumentList	name		754079	1					
ANR	754166	Argument	name		754079	0					
ANR	754167	Identifier	name		754079	0					
ANR	754168	ExpressionStatement	"rval = fwrite ( name , sizeof ( char ) , len , fp )"	985:1:24162:24204	754079	8	True				
ANR	754169	AssignmentExpression	"rval = fwrite ( name , sizeof ( char ) , len , fp )"		754079	0		=			
ANR	754170	Identifier	rval		754079	0					
ANR	754171	CallExpression	"fwrite ( name , sizeof ( char ) , len , fp )"		754079	1					
ANR	754172	Callee	fwrite		754079	0					
ANR	754173	Identifier	fwrite		754079	0					
ANR	754174	ArgumentList	name		754079	1					
ANR	754175	Argument	name		754079	0					
ANR	754176	Identifier	name		754079	0					
ANR	754177	Argument	sizeof ( char )		754079	1					
ANR	754178	SizeofExpression	sizeof ( char )		754079	0					
ANR	754179	Sizeof	sizeof		754079	0					
ANR	754180	SizeofOperand	char		754079	1					
ANR	754181	Argument	len		754079	2					
ANR	754182	Identifier	len		754079	0					
ANR	754183	Argument	fp		754079	3					
ANR	754184	Identifier	fp		754079	0					
ANR	754185	IfStatement	if ( rval < len )		754079	9					
ANR	754186	Condition	rval < len	986:5:24211:24220	754079	0	True				
ANR	754187	RelationalExpression	rval < len		754079	0		<			
ANR	754188	Identifier	rval		754079	0					
ANR	754189	Identifier	len		754079	1					
ANR	754190	CompoundStatement		16:17:301:301	754079	1					
ANR	754191	ReturnStatement	return - 1 ;	987:2:24227:24236	754079	0	True				
ANR	754192	UnaryOperationExpression	- 1		754079	0					
ANR	754193	UnaryOperator	-		754079	0					
ANR	754194	PrimaryExpression	1		754079	1					
ANR	754195	ReturnStatement	return rval1 + rval ;	989:1:24242:24261	754079	10	True				
ANR	754196	AdditiveExpression	rval1 + rval		754079	0		+			
ANR	754197	Identifier	rval1		754079	0					
ANR	754198	Identifier	rval		754079	1					
ANR	754199	ReturnType	int		754079	1					
ANR	754200	Identifier	LogDeleteAttribute :: WriteBody		754079	2					
ANR	754201	ParameterList	FILE * fp		754079	3					
ANR	754202	Parameter	FILE * fp	970:30:23911:23918	754079	0	True				
ANR	754203	ParameterType	FILE *		754079	0					
ANR	754204	Identifier	fp		754079	1					
ANR	754205	CFGEntryNode	ENTRY		754079		True				
ANR	754206	CFGExitNode	EXIT		754079		True				
ANR	754207	Symbol	strlen		754079						
ANR	754208	Symbol	len		754079						
ANR	754209	Symbol	name		754079						
ANR	754210	Symbol	fwrite		754079						
ANR	754211	Symbol	fp		754079						
ANR	754212	Symbol	rval		754079						
ANR	754213	Symbol	key		754079						
ANR	754214	Symbol	rval1		754079						
ANR	754215	Function	LogBeginTransaction :: ReadBody	992:0:24266:24436							
ANR	754216	FunctionDef	LogBeginTransaction :: ReadBody (FILE * fp)		754215	0					
ANR	754217	CompoundStatement		994:0:24311:24436	754215	0					
ANR	754218	IdentifierDeclStatement	char ch ;	995:1:24314:24322	754215	0	True				
ANR	754219	IdentifierDecl	ch		754215	0					
ANR	754220	IdentifierDeclType	char		754215	0					
ANR	754221	Identifier	ch		754215	1					
ANR	754222	IdentifierDeclStatement	"int rval = fread ( & ch , sizeof ( char ) , 1 , fp ) ;"	996:1:24325:24369	754215	1	True				
ANR	754223	IdentifierDecl	"rval = fread ( & ch , sizeof ( char ) , 1 , fp )"		754215	0					
ANR	754224	IdentifierDeclType	int		754215	0					
ANR	754225	Identifier	rval		754215	1					
ANR	754226	AssignmentExpression	"rval = fread ( & ch , sizeof ( char ) , 1 , fp )"		754215	2		=			
ANR	754227	Identifier	rval		754215	0					
ANR	754228	CallExpression	"fread ( & ch , sizeof ( char ) , 1 , fp )"		754215	1					
ANR	754229	Callee	fread		754215	0					
ANR	754230	Identifier	fread		754215	0					
ANR	754231	ArgumentList	& ch		754215	1					
ANR	754232	Argument	& ch		754215	0					
ANR	754233	UnaryOperationExpression	& ch		754215	0					
ANR	754234	UnaryOperator	&		754215	0					
ANR	754235	Identifier	ch		754215	1					
ANR	754236	Argument	sizeof ( char )		754215	1					
ANR	754237	SizeofExpression	sizeof ( char )		754215	0					
ANR	754238	Sizeof	sizeof		754215	0					
ANR	754239	SizeofOperand	char		754215	1					
ANR	754240	Argument	1		754215	2					
ANR	754241	PrimaryExpression	1		754215	0					
ANR	754242	Argument	fp		754215	3					
ANR	754243	Identifier	fp		754215	0					
ANR	754244	IfStatement	if ( rval < 1 || ch != '\\n' )		754215	2					
ANR	754245	Condition	rval < 1 || ch != '\\n'	997:5:24376:24397	754215	0	True				
ANR	754246	OrExpression	rval < 1 || ch != '\\n'		754215	0		||			
ANR	754247	RelationalExpression	rval < 1		754215	0		<			
ANR	754248	Identifier	rval		754215	0					
ANR	754249	PrimaryExpression	1		754215	1					
ANR	754250	EqualityExpression	ch != '\\n'		754215	1		!=			
ANR	754251	Identifier	ch		754215	0					
ANR	754252	PrimaryExpression	'\\n'		754215	1					
ANR	754253	CompoundStatement		4:30:89:89	754215	1					
ANR	754254	ReturnStatement	return ( - 1 ) ;	998:2:24405:24417	754215	0	True				
ANR	754255	UnaryOperationExpression	- 1		754215	0					
ANR	754256	UnaryOperator	-		754215	0					
ANR	754257	PrimaryExpression	1		754215	1					
ANR	754258	ReturnStatement	return ( 1 ) ;	1000:1:24423:24434	754215	3	True				
ANR	754259	PrimaryExpression	1		754215	0					
ANR	754260	ReturnType	int		754215	1					
ANR	754261	Identifier	LogBeginTransaction :: ReadBody		754215	2					
ANR	754262	ParameterList	FILE * fp		754215	3					
ANR	754263	Parameter	FILE * fp	993:30:24301:24308	754215	0	True				
ANR	754264	ParameterType	FILE *		754215	0					
ANR	754265	Identifier	fp		754215	1					
ANR	754266	CFGEntryNode	ENTRY		754215		True				
ANR	754267	CFGExitNode	EXIT		754215		True				
ANR	754268	Symbol	ch		754215						
ANR	754269	Symbol	fp		754215						
ANR	754270	Symbol	rval		754215						
ANR	754271	Symbol	& ch		754215						
ANR	754272	Symbol	fread		754215						
ANR	754273	Function	LogEndTransaction :: ReadBody	1003:0:24439:24610							
ANR	754274	FunctionDef	LogEndTransaction :: ReadBody (FILE * fp)		754273	0					
ANR	754275	CompoundStatement		1005:0:24484:24610	754273	0					
ANR	754276	IdentifierDeclStatement	char ch ;	1006:1:24487:24495	754273	0	True				
ANR	754277	IdentifierDecl	ch		754273	0					
ANR	754278	IdentifierDeclType	char		754273	0					
ANR	754279	Identifier	ch		754273	1					
ANR	754280	IdentifierDeclStatement	"int rval = fread ( & ch , sizeof ( char ) , 1 , fp ) ;"	1007:1:24498:24543	754273	1	True				
ANR	754281	IdentifierDecl	"rval = fread ( & ch , sizeof ( char ) , 1 , fp )"		754273	0					
ANR	754282	IdentifierDeclType	int		754273	0					
ANR	754283	Identifier	rval		754273	1					
ANR	754284	AssignmentExpression	"rval = fread ( & ch , sizeof ( char ) , 1 , fp )"		754273	2		=			
ANR	754285	Identifier	rval		754273	0					
ANR	754286	CallExpression	"fread ( & ch , sizeof ( char ) , 1 , fp )"		754273	1					
ANR	754287	Callee	fread		754273	0					
ANR	754288	Identifier	fread		754273	0					
ANR	754289	ArgumentList	& ch		754273	1					
ANR	754290	Argument	& ch		754273	0					
ANR	754291	UnaryOperationExpression	& ch		754273	0					
ANR	754292	UnaryOperator	&		754273	0					
ANR	754293	Identifier	ch		754273	1					
ANR	754294	Argument	sizeof ( char )		754273	1					
ANR	754295	SizeofExpression	sizeof ( char )		754273	0					
ANR	754296	Sizeof	sizeof		754273	0					
ANR	754297	SizeofOperand	char		754273	1					
ANR	754298	Argument	1		754273	2					
ANR	754299	PrimaryExpression	1		754273	0					
ANR	754300	Argument	fp		754273	3					
ANR	754301	Identifier	fp		754273	0					
ANR	754302	IfStatement	if ( rval < 1 || ch != '\\n' )		754273	2					
ANR	754303	Condition	rval < 1 || ch != '\\n'	1008:5:24550:24571	754273	0	True				
ANR	754304	OrExpression	rval < 1 || ch != '\\n'		754273	0		||			
ANR	754305	RelationalExpression	rval < 1		754273	0		<			
ANR	754306	Identifier	rval		754273	0					
ANR	754307	PrimaryExpression	1		754273	1					
ANR	754308	EqualityExpression	ch != '\\n'		754273	1		!=			
ANR	754309	Identifier	ch		754273	0					
ANR	754310	PrimaryExpression	'\\n'		754273	1					
ANR	754311	CompoundStatement		4:30:90:90	754273	1					
ANR	754312	ReturnStatement	return ( - 1 ) ;	1009:2:24579:24591	754273	0	True				
ANR	754313	UnaryOperationExpression	- 1		754273	0					
ANR	754314	UnaryOperator	-		754273	0					
ANR	754315	PrimaryExpression	1		754273	1					
ANR	754316	ReturnStatement	return ( 1 ) ;	1011:1:24597:24608	754273	3	True				
ANR	754317	PrimaryExpression	1		754273	0					
ANR	754318	ReturnType	int		754273	1					
ANR	754319	Identifier	LogEndTransaction :: ReadBody		754273	2					
ANR	754320	ParameterList	FILE * fp		754273	3					
ANR	754321	Parameter	FILE * fp	1004:29:24473:24480	754273	0	True				
ANR	754322	ParameterType	FILE *		754273	0					
ANR	754323	Identifier	fp		754273	1					
ANR	754324	CFGEntryNode	ENTRY		754273		True				
ANR	754325	CFGExitNode	EXIT		754273		True				
ANR	754326	Symbol	ch		754273						
ANR	754327	Symbol	fp		754273						
ANR	754328	Symbol	rval		754273						
ANR	754329	Symbol	fread		754273						
ANR	754330	Symbol	& ch		754273						
ANR	754331	Function	LogDeleteAttribute :: ReadBody	1014:0:24613:24853							
ANR	754332	FunctionDef	LogDeleteAttribute :: ReadBody (FILE * fp)		754331	0					
ANR	754333	CompoundStatement		1016:0:24656:24853	754331	0					
ANR	754334	IdentifierDeclStatement	"int rval , rval1 ;"	1017:1:24659:24674	754331	0	True				
ANR	754335	IdentifierDecl	rval		754331	0					
ANR	754336	IdentifierDeclType	int		754331	0					
ANR	754337	Identifier	rval		754331	1					
ANR	754338	IdentifierDecl	rval1		754331	1					
ANR	754339	IdentifierDeclType	int		754331	0					
ANR	754340	Identifier	rval1		754331	1					
ANR	754341	ExpressionStatement	free ( key )	1019:1:24678:24687	754331	1	True				
ANR	754342	CallExpression	free ( key )		754331	0					
ANR	754343	Callee	free		754331	0					
ANR	754344	Identifier	free		754331	0					
ANR	754345	ArgumentList	key		754331	1					
ANR	754346	Argument	key		754331	0					
ANR	754347	Identifier	key		754331	0					
ANR	754348	ExpressionStatement	"rval1 = readword ( fp , key )"	1020:1:24690:24715	754331	2	True				
ANR	754349	AssignmentExpression	"rval1 = readword ( fp , key )"		754331	0		=			
ANR	754350	Identifier	rval1		754331	0					
ANR	754351	CallExpression	"readword ( fp , key )"		754331	1					
ANR	754352	Callee	readword		754331	0					
ANR	754353	Identifier	readword		754331	0					
ANR	754354	ArgumentList	fp		754331	1					
ANR	754355	Argument	fp		754331	0					
ANR	754356	Identifier	fp		754331	0					
ANR	754357	Argument	key		754331	1					
ANR	754358	Identifier	key		754331	0					
ANR	754359	IfStatement	if ( rval1 < 0 )		754331	3					
ANR	754360	Condition	rval1 < 0	1021:5:24722:24730	754331	0	True				
ANR	754361	RelationalExpression	rval1 < 0		754331	0		<			
ANR	754362	Identifier	rval1		754331	0					
ANR	754363	PrimaryExpression	0		754331	1					
ANR	754364	CompoundStatement		6:16:76:76	754331	1					
ANR	754365	ReturnStatement	return rval1 ;	1022:2:24737:24749	754331	0	True				
ANR	754366	Identifier	rval1		754331	0					
ANR	754367	ExpressionStatement	free ( name )	1025:1:24756:24766	754331	4	True				
ANR	754368	CallExpression	free ( name )		754331	0					
ANR	754369	Callee	free		754331	0					
ANR	754370	Identifier	free		754331	0					
ANR	754371	ArgumentList	name		754331	1					
ANR	754372	Argument	name		754331	0					
ANR	754373	Identifier	name		754331	0					
ANR	754374	ExpressionStatement	"rval = readword ( fp , name )"	1026:1:24769:24794	754331	5	True				
ANR	754375	AssignmentExpression	"rval = readword ( fp , name )"		754331	0		=			
ANR	754376	Identifier	rval		754331	0					
ANR	754377	CallExpression	"readword ( fp , name )"		754331	1					
ANR	754378	Callee	readword		754331	0					
ANR	754379	Identifier	readword		754331	0					
ANR	754380	ArgumentList	fp		754331	1					
ANR	754381	Argument	fp		754331	0					
ANR	754382	Identifier	fp		754331	0					
ANR	754383	Argument	name		754331	1					
ANR	754384	Identifier	name		754331	0					
ANR	754385	IfStatement	if ( rval < 0 )		754331	6					
ANR	754386	Condition	rval < 0	1027:5:24801:24808	754331	0	True				
ANR	754387	RelationalExpression	rval < 0		754331	0		<			
ANR	754388	Identifier	rval		754331	0					
ANR	754389	PrimaryExpression	0		754331	1					
ANR	754390	CompoundStatement		12:15:154:154	754331	1					
ANR	754391	ReturnStatement	return rval ;	1028:2:24815:24826	754331	0	True				
ANR	754392	Identifier	rval		754331	0					
ANR	754393	ReturnStatement	return rval + rval1 ;	1030:1:24832:24851	754331	7	True				
ANR	754394	AdditiveExpression	rval + rval1		754331	0		+			
ANR	754395	Identifier	rval		754331	0					
ANR	754396	Identifier	rval1		754331	1					
ANR	754397	ReturnType	int		754331	1					
ANR	754398	Identifier	LogDeleteAttribute :: ReadBody		754331	2					
ANR	754399	ParameterList	FILE * fp		754331	3					
ANR	754400	Parameter	FILE * fp	1015:29:24646:24653	754331	0	True				
ANR	754401	ParameterType	FILE *		754331	0					
ANR	754402	Identifier	fp		754331	1					
ANR	754403	CFGEntryNode	ENTRY		754331		True				
ANR	754404	CFGExitNode	EXIT		754331		True				
ANR	754405	Symbol	name		754331						
ANR	754406	Symbol	fp		754331						
ANR	754407	Symbol	rval		754331						
ANR	754408	Symbol	readword		754331						
ANR	754409	Symbol	key		754331						
ANR	754410	Symbol	rval1		754331						
ANR	754411	Function	InstantiateLogEntry	1033:0:24856:26854							
ANR	754412	FunctionDef	"InstantiateLogEntry (FILE * fp , int type)"		754411	0					
ANR	754413	CompoundStatement		1035:0:24908:26854	754411	0					
ANR	754414	IdentifierDeclStatement	LogRecord * log_rec ;	1036:1:24911:24929	754411	0	True				
ANR	754415	IdentifierDecl	* log_rec		754411	0					
ANR	754416	IdentifierDeclType	LogRecord *		754411	0					
ANR	754417	Identifier	log_rec		754411	1					
ANR	754418	SwitchStatement	switch ( type )		754411	1					
ANR	754419	Condition	type	1038:8:24940:24943	754411	0	True				
ANR	754420	Identifier	type		754411	0					
ANR	754421	CompoundStatement		4:14:37:37	754411	1					
ANR	754422	Label	case CondorLogOp_NewClassAd :	1039:5:24953:24980	754411	0	True				
ANR	754423	Identifier	CondorLogOp_NewClassAd		754411	0					
ANR	754424	ExpressionStatement	"log_rec = new LogNewClassAd ( """" , """" , """" )"	1040:6:24988:25027	754411	1	True				
ANR	754425	AssignmentExpression	"log_rec = new LogNewClassAd ( """" , """" , """" )"		754411	0		=			
ANR	754426	Identifier	log_rec		754411	0					
ANR	754427	Expression	""""" , """" , """""		754411	1					
ANR	754428	PrimaryExpression	""""""		754411	0					
ANR	754429	Expression	""""" , """""		754411	1					
ANR	754430	PrimaryExpression	""""""		754411	0					
ANR	754431	PrimaryExpression	""""""		754411	1					
ANR	754432	BreakStatement	break ;	1041:3:25032:25037	754411	2	True				
ANR	754433	Label	case CondorLogOp_DestroyClassAd :	1042:5:25044:25075	754411	3	True				
ANR	754434	Identifier	CondorLogOp_DestroyClassAd		754411	0					
ANR	754435	ExpressionStatement	"log_rec = new LogDestroyClassAd ( """" )"	1043:6:25083:25118	754411	4	True				
ANR	754436	AssignmentExpression	"log_rec = new LogDestroyClassAd ( """" )"		754411	0		=			
ANR	754437	Identifier	log_rec		754411	0					
ANR	754438	PrimaryExpression	""""""		754411	1					
ANR	754439	BreakStatement	break ;	1044:3:25123:25128	754411	5	True				
ANR	754440	Label	case CondorLogOp_SetAttribute :	1045:5:25135:25164	754411	6	True				
ANR	754441	Identifier	CondorLogOp_SetAttribute		754411	0					
ANR	754442	ExpressionStatement	"log_rec = new LogSetAttribute ( """" , """" , """" )"	1046:6:25172:25213	754411	7	True				
ANR	754443	AssignmentExpression	"log_rec = new LogSetAttribute ( """" , """" , """" )"		754411	0		=			
ANR	754444	Identifier	log_rec		754411	0					
ANR	754445	Expression	""""" , """" , """""		754411	1					
ANR	754446	PrimaryExpression	""""""		754411	0					
ANR	754447	Expression	""""" , """""		754411	1					
ANR	754448	PrimaryExpression	""""""		754411	0					
ANR	754449	PrimaryExpression	""""""		754411	1					
ANR	754450	BreakStatement	break ;	1047:3:25218:25223	754411	8	True				
ANR	754451	Label	case CondorLogOp_DeleteAttribute :	1048:5:25230:25262	754411	9	True				
ANR	754452	Identifier	CondorLogOp_DeleteAttribute		754411	0					
ANR	754453	ExpressionStatement	"log_rec = new LogDeleteAttribute ( """" , """" )"	1049:6:25270:25310	754411	10	True				
ANR	754454	AssignmentExpression	"log_rec = new LogDeleteAttribute ( """" , """" )"		754411	0		=			
ANR	754455	Identifier	log_rec		754411	0					
ANR	754456	Expression	""""" , """""		754411	1					
ANR	754457	PrimaryExpression	""""""		754411	0					
ANR	754458	PrimaryExpression	""""""		754411	1					
ANR	754459	BreakStatement	break ;	1050:3:25315:25320	754411	11	True				
ANR	754460	Label	case CondorLogOp_BeginTransaction :	1051:2:25324:25357	754411	12	True				
ANR	754461	Identifier	CondorLogOp_BeginTransaction		754411	0					
ANR	754462	ExpressionStatement	log_rec = new LogBeginTransaction ( )	1052:3:25362:25397	754411	13	True				
ANR	754463	AssignmentExpression	log_rec = new LogBeginTransaction ( )		754411	0		=			
ANR	754464	Identifier	log_rec		754411	0					
ANR	754465	UnaryExpression	new LogBeginTransaction ( )		754411	1					
ANR	754466	BreakStatement	break ;	1053:3:25402:25407	754411	14	True				
ANR	754467	Label	case CondorLogOp_EndTransaction :	1054:2:25411:25442	754411	15	True				
ANR	754468	Identifier	CondorLogOp_EndTransaction		754411	0					
ANR	754469	ExpressionStatement	log_rec = new LogEndTransaction ( )	1055:3:25447:25480	754411	16	True				
ANR	754470	AssignmentExpression	log_rec = new LogEndTransaction ( )		754411	0		=			
ANR	754471	Identifier	log_rec		754411	0					
ANR	754472	UnaryExpression	new LogEndTransaction ( )		754411	1					
ANR	754473	BreakStatement	break ;	1056:3:25485:25490	754411	17	True				
ANR	754474	Label	case CondorLogOp_LogHistoricalSequenceNumber :	1057:2:25494:25538	754411	18	True				
ANR	754475	Identifier	CondorLogOp_LogHistoricalSequenceNumber		754411	0					
ANR	754476	ExpressionStatement	"log_rec = new LogHistoricalSequenceNumber ( 0 , 0 )"	1058:3:25543:25589	754411	19	True				
ANR	754477	AssignmentExpression	"log_rec = new LogHistoricalSequenceNumber ( 0 , 0 )"		754411	0		=			
ANR	754478	Identifier	log_rec		754411	0					
ANR	754479	Expression	"0 , 0"		754411	1					
ANR	754480	PrimaryExpression	0		754411	0					
ANR	754481	PrimaryExpression	0		754411	1					
ANR	754482	BreakStatement	break ;	1059:3:25594:25599	754411	20	True				
ANR	754483	Label	default :	1060:5:25606:25613	754411	21	True				
ANR	754484	Identifier	default		754411	0					
ANR	754485	ReturnStatement	return 0 ;	1061:6:25621:25629	754411	22	True				
ANR	754486	PrimaryExpression	0		754411	0					
ANR	754487	BreakStatement	break ;	1062:3:25634:25639	754411	23	True				
ANR	754488	IdentifierDeclStatement	long pos = ftell ( fp ) ;	1065:1:25646:25666	754411	2	True				
ANR	754489	IdentifierDecl	pos = ftell ( fp )		754411	0					
ANR	754490	IdentifierDeclType	long		754411	0					
ANR	754491	Identifier	pos		754411	1					
ANR	754492	AssignmentExpression	pos = ftell ( fp )		754411	2		=			
ANR	754493	Identifier	pos		754411	0					
ANR	754494	CallExpression	ftell ( fp )		754411	1					
ANR	754495	Callee	ftell		754411	0					
ANR	754496	Identifier	ftell		754411	0					
ANR	754497	ArgumentList	fp		754411	1					
ANR	754498	Argument	fp		754411	0					
ANR	754499	Identifier	fp		754411	0					
ANR	754500	IfStatement	if ( log_rec -> ReadBody ( fp ) < 0 )		754411	3					
ANR	754501	Condition	log_rec -> ReadBody ( fp ) < 0	1068:5:25736:25760	754411	0	True				
ANR	754502	RelationalExpression	log_rec -> ReadBody ( fp ) < 0		754411	0		<			
ANR	754503	CallExpression	log_rec -> ReadBody ( fp )		754411	0					
ANR	754504	Callee	log_rec -> ReadBody		754411	0					
ANR	754505	PtrMemberAccess	log_rec -> ReadBody		754411	0					
ANR	754506	Identifier	log_rec		754411	0					
ANR	754507	Identifier	ReadBody		754411	1					
ANR	754508	ArgumentList	fp		754411	1					
ANR	754509	Argument	fp		754411	0					
ANR	754510	Identifier	fp		754411	0					
ANR	754511	PrimaryExpression	0		754411	1					
ANR	754512	CompoundStatement		41:2:1021:1028	754411	1					
ANR	754513	IdentifierDeclStatement	char line [ ATTRLIST_MAX_EXPRESSION + 64 ] ;	1074:2:25887:25926	754411	0	True				
ANR	754514	IdentifierDecl	line [ ATTRLIST_MAX_EXPRESSION + 64 ]		754411	0					
ANR	754515	IdentifierDeclType	char [ ATTRLIST_MAX_EXPRESSION + 64 ]		754411	0					
ANR	754516	Identifier	line		754411	1					
ANR	754517	AdditiveExpression	ATTRLIST_MAX_EXPRESSION + 64		754411	2		+			
ANR	754518	Identifier	ATTRLIST_MAX_EXPRESSION		754411	0					
ANR	754519	PrimaryExpression	64		754411	1					
ANR	754520	IdentifierDeclStatement	int op ;	1075:2:25930:25937	754411	1	True				
ANR	754521	IdentifierDecl	op		754411	0					
ANR	754522	IdentifierDeclType	int		754411	0					
ANR	754523	Identifier	op		754411	1					
ANR	754524	Statement	delete	1077:2:25942:25947	754411	2	True				
ANR	754525	ExpressionStatement	log_rec	1077:9:25949:25956	754411	3	True				
ANR	754526	Identifier	log_rec		754411	0					
ANR	754527	IfStatement	if ( ! fp )		754411	4					
ANR	754528	Condition	! fp	1078:6:25964:25966	754411	0	True				
ANR	754529	UnaryOperationExpression	! fp		754411	0					
ANR	754530	UnaryOperator	!		754411	0					
ANR	754531	Identifier	fp		754411	1					
ANR	754532	CompoundStatement		44:12:1061:1061	754411	1					
ANR	754533	ExpressionStatement	"EXCEPT ( ""Error: failed fdopen() when recovering corrpupt log file"" )"	1079:3:25975:26041	754411	0	True				
ANR	754534	CallExpression	"EXCEPT ( ""Error: failed fdopen() when recovering corrpupt log file"" )"		754411	0					
ANR	754535	Callee	EXCEPT		754411	0					
ANR	754536	Identifier	EXCEPT		754411	0					
ANR	754537	ArgumentList	"""Error: failed fdopen() when recovering corrpupt log file"""		754411	1					
ANR	754538	Argument	"""Error: failed fdopen() when recovering corrpupt log file"""		754411	0					
ANR	754539	PrimaryExpression	"""Error: failed fdopen() when recovering corrpupt log file"""		754411	0					
ANR	754540	WhileStatement	"while ( fgets ( line , ATTRLIST_MAX_EXPRESSION + 64 , fp ) )"		754411	5					
ANR	754541	Condition	"fgets ( line , ATTRLIST_MAX_EXPRESSION + 64 , fp )"	1082:9:26057:26101	754411	0	True				
ANR	754542	CallExpression	"fgets ( line , ATTRLIST_MAX_EXPRESSION + 64 , fp )"		754411	0					
ANR	754543	Callee	fgets		754411	0					
ANR	754544	Identifier	fgets		754411	0					
ANR	754545	ArgumentList	line		754411	1					
ANR	754546	Argument	line		754411	0					
ANR	754547	Identifier	line		754411	0					
ANR	754548	Argument	ATTRLIST_MAX_EXPRESSION + 64		754411	1					
ANR	754549	AdditiveExpression	ATTRLIST_MAX_EXPRESSION + 64		754411	0		+			
ANR	754550	Identifier	ATTRLIST_MAX_EXPRESSION		754411	0					
ANR	754551	PrimaryExpression	64		754411	1					
ANR	754552	Argument	fp		754411	2					
ANR	754553	Identifier	fp		754411	0					
ANR	754554	CompoundStatement		48:57:1196:1196	754411	1					
ANR	754555	IfStatement	"if ( sscanf ( line , ""%d "" , & op ) != 1 )"		754411	0					
ANR	754556	Condition	"sscanf ( line , ""%d "" , & op ) != 1"	1083:7:26114:26144	754411	0	True				
ANR	754557	EqualityExpression	"sscanf ( line , ""%d "" , & op ) != 1"		754411	0		!=			
ANR	754558	CallExpression	"sscanf ( line , ""%d "" , & op )"		754411	0					
ANR	754559	Callee	sscanf		754411	0					
ANR	754560	Identifier	sscanf		754411	0					
ANR	754561	ArgumentList	line		754411	1					
ANR	754562	Argument	line		754411	0					
ANR	754563	Identifier	line		754411	0					
ANR	754564	Argument	"""%d """		754411	1					
ANR	754565	PrimaryExpression	"""%d """		754411	0					
ANR	754566	Argument	& op		754411	2					
ANR	754567	UnaryOperationExpression	& op		754411	0					
ANR	754568	UnaryOperator	&		754411	0					
ANR	754569	Identifier	op		754411	1					
ANR	754570	PrimaryExpression	1		754411	1					
ANR	754571	CompoundStatement		49:41:1239:1239	754411	1					
ANR	754572	ContinueStatement	continue ;	1085:4:26207:26215	754411	0	True				
ANR	754573	IfStatement	if ( op == CondorLogOp_EndTransaction )		754411	1					
ANR	754574	Condition	op == CondorLogOp_EndTransaction	1087:7:26229:26260	754411	0	True				
ANR	754575	EqualityExpression	op == CondorLogOp_EndTransaction		754411	0		==			
ANR	754576	Identifier	op		754411	0					
ANR	754577	Identifier	CondorLogOp_EndTransaction		754411	1					
ANR	754578	CompoundStatement		53:42:1355:1355	754411	1					
ANR	754579	ExpressionStatement	"EXCEPT ( ""Error: bad record with op=%d (at byte offset %ld) in corrupt logfile"" , type , pos )"	1089:4:26321:26408	754411	0	True				
ANR	754580	CallExpression	"EXCEPT ( ""Error: bad record with op=%d (at byte offset %ld) in corrupt logfile"" , type , pos )"		754411	0					
ANR	754581	Callee	EXCEPT		754411	0					
ANR	754582	Identifier	EXCEPT		754411	0					
ANR	754583	ArgumentList	"""Error: bad record with op=%d (at byte offset %ld) in corrupt logfile"""		754411	1					
ANR	754584	Argument	"""Error: bad record with op=%d (at byte offset %ld) in corrupt logfile"""		754411	0					
ANR	754585	PrimaryExpression	"""Error: bad record with op=%d (at byte offset %ld) in corrupt logfile"""		754411	0					
ANR	754586	Argument	type		754411	1					
ANR	754587	Identifier	type		754411	0					
ANR	754588	Argument	pos		754411	2					
ANR	754589	Identifier	pos		754411	0					
ANR	754590	IfStatement	if ( ! feof ( fp ) )		754411	6					
ANR	754591	Condition	! feof ( fp )	1093:6:26426:26436	754411	0	True				
ANR	754592	UnaryOperationExpression	! feof ( fp )		754411	0					
ANR	754593	UnaryOperator	!		754411	0					
ANR	754594	CallExpression	feof ( fp )		754411	1					
ANR	754595	Callee	feof		754411	0					
ANR	754596	Identifier	feof		754411	0					
ANR	754597	ArgumentList	fp		754411	1					
ANR	754598	Argument	fp		754411	0					
ANR	754599	Identifier	fp		754411	0					
ANR	754600	CompoundStatement		59:20:1531:1531	754411	1					
ANR	754601	ExpressionStatement	"EXCEPT ( ""Error: failed recovering from corrupt file, errno=%d"" , errno )"	1094:3:26445:26519	754411	0	True				
ANR	754602	CallExpression	"EXCEPT ( ""Error: failed recovering from corrupt file, errno=%d"" , errno )"		754411	0					
ANR	754603	Callee	EXCEPT		754411	0					
ANR	754604	Identifier	EXCEPT		754411	0					
ANR	754605	ArgumentList	"""Error: failed recovering from corrupt file, errno=%d"""		754411	1					
ANR	754606	Argument	"""Error: failed recovering from corrupt file, errno=%d"""		754411	0					
ANR	754607	PrimaryExpression	"""Error: failed recovering from corrupt file, errno=%d"""		754411	0					
ANR	754608	Argument	errno		754411	1					
ANR	754609	Identifier	errno		754411	0					
ANR	754610	ExpressionStatement	"fseek ( fp , 0 , SEEK_END )"	1102:2:26768:26792	754411	7	True				
ANR	754611	CallExpression	"fseek ( fp , 0 , SEEK_END )"		754411	0					
ANR	754612	Callee	fseek		754411	0					
ANR	754613	Identifier	fseek		754411	0					
ANR	754614	ArgumentList	fp		754411	1					
ANR	754615	Argument	fp		754411	0					
ANR	754616	Identifier	fp		754411	0					
ANR	754617	Argument	0		754411	1					
ANR	754618	PrimaryExpression	0		754411	0					
ANR	754619	Argument	SEEK_END		754411	2					
ANR	754620	Identifier	SEEK_END		754411	0					
ANR	754621	ReturnStatement	return ( NULL ) ;	1103:2:26796:26810	754411	8	True				
ANR	754622	Identifier	NULL		754411	0					
ANR	754623	ReturnStatement	return log_rec ;	1107:1:26838:26852	754411	4	True				
ANR	754624	Identifier	log_rec		754411	0					
ANR	754625	ReturnType	LogRecord *		754411	1					
ANR	754626	Identifier	InstantiateLogEntry		754411	2					
ANR	754627	ParameterList	"FILE * fp , int type"		754411	3					
ANR	754628	Parameter	FILE * fp	1034:20:24888:24895	754411	0	True				
ANR	754629	ParameterType	FILE *		754411	0					
ANR	754630	Identifier	fp		754411	1					
ANR	754631	Parameter	int type	1034:30:24898:24905	754411	1	True				
ANR	754632	ParameterType	int		754411	0					
ANR	754633	Identifier	type		754411	1					
ANR	754634	CFGEntryNode	ENTRY		754411		True				
ANR	754635	CFGExitNode	EXIT		754411		True				
ANR	754636	Symbol	op		754411						
ANR	754637	Symbol	CondorLogOp_EndTransaction		754411						
ANR	754638	Symbol	errno		754411						
ANR	754639	Symbol	NULL		754411						
ANR	754640	Symbol	ftell		754411						
ANR	754641	Symbol	log_rec -> ReadBody		754411						
ANR	754642	Symbol	line		754411						
ANR	754643	Symbol	fp		754411						
ANR	754644	Symbol	& op		754411						
ANR	754645	Symbol	type		754411						
ANR	754646	Symbol	fgets		754411						
ANR	754647	Symbol	SEEK_END		754411						
ANR	754648	Symbol	pos		754411						
ANR	754649	Symbol	log_rec		754411						
ANR	754650	Symbol	sscanf		754411						
ANR	754651	Symbol	ATTRLIST_MAX_EXPRESSION		754411						
ANR	754652	Symbol	feof		754411						
ANR	754653	Symbol	* log_rec		754411						
ANR	754654	Function	ClassAdLog :: ListNewAdsInTransaction	1110:0:26857:27069							
ANR	754655	FunctionDef	ClassAdLog :: ListNewAdsInTransaction (std :: list < std :: string > & new_keys)		754654	0					
ANR	754656	CompoundStatement		1111:0:26934:27069	754654	0					
ANR	754657	IfStatement	if ( ! active_transaction )		754654	0					
ANR	754658	Condition	! active_transaction	1112:5:26941:26959	754654	0	True				
ANR	754659	UnaryOperationExpression	! active_transaction		754654	0					
ANR	754660	UnaryOperator	!		754654	0					
ANR	754661	Identifier	active_transaction		754654	1					
ANR	754662	CompoundStatement		2:27:28:28	754654	1					
ANR	754663	ReturnStatement	return ;	1113:2:26967:26973	754654	0	True				
ANR	754664	ExpressionStatement	"active_transaction -> InTransactionListKeysWithOpType ( CondorLogOp_NewClassAd , new_keys )"	1116:1:26980:27067	754654	1	True				
ANR	754665	CallExpression	"active_transaction -> InTransactionListKeysWithOpType ( CondorLogOp_NewClassAd , new_keys )"		754654	0					
ANR	754666	Callee	active_transaction -> InTransactionListKeysWithOpType		754654	0					
ANR	754667	PtrMemberAccess	active_transaction -> InTransactionListKeysWithOpType		754654	0					
ANR	754668	Identifier	active_transaction		754654	0					
ANR	754669	Identifier	InTransactionListKeysWithOpType		754654	1					
ANR	754670	ArgumentList	CondorLogOp_NewClassAd		754654	1					
ANR	754671	Argument	CondorLogOp_NewClassAd		754654	0					
ANR	754672	Identifier	CondorLogOp_NewClassAd		754654	0					
ANR	754673	Argument	new_keys		754654	1					
ANR	754674	Identifier	new_keys		754654	0					
ANR	754675	ReturnType	void		754654	1					
ANR	754676	Identifier	ClassAdLog :: ListNewAdsInTransaction		754654	2					
ANR	754677	ParameterList	std :: list < std :: string > & new_keys		754654	3					
ANR	754678	Parameter	std :: list < std :: string > & new_keys	1110:42:26899:26930	754654	0	True				
ANR	754679	ParameterType	std :: list < std :: string > &		754654	0					
ANR	754680	Identifier	new_keys		754654	1					
ANR	754681	CFGEntryNode	ENTRY		754654		True				
ANR	754682	CFGExitNode	EXIT		754654		True				
ANR	754683	Symbol	CondorLogOp_NewClassAd		754654						
ANR	754684	Symbol	new_keys		754654						
ANR	754685	Symbol	active_transaction		754654						
