command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	981920	File	data/converged/CVE-2011-4930_htcondor/condor_ver_info.cpp								
ANR	981921	DeclStmt									
ANR	981922	Decl							char	char * ( void )	CondorVersion
ANR	981923	DeclStmt									
ANR	981924	Decl							char	char * ( void )	CondorPlatform
ANR	981925	DeclStmt									
ANR	981926	Decl							const char	const char * [ ]	monthNames
ANR	981927	Function	CondorVersionInfo :: CondorVersionInfo	33:0:1184:1776							
ANR	981928	FunctionDef	"CondorVersionInfo :: CondorVersionInfo (const char * versionstring , const char * subsystem , const char * platformstring)"		981927	0					
ANR	981929	CompoundStatement		36:0:1320:1776	981927	0					
ANR	981930	ExpressionStatement	myversion . MajorVer = 0	37:1:1323:1345	981927	0	True				
ANR	981931	AssignmentExpression	myversion . MajorVer = 0		981927	0		=			
ANR	981932	MemberAccess	myversion . MajorVer		981927	0					
ANR	981933	Identifier	myversion		981927	0					
ANR	981934	Identifier	MajorVer		981927	1					
ANR	981935	PrimaryExpression	0		981927	1					
ANR	981936	ExpressionStatement	myversion . Arch = NULL	38:1:1348:1369	981927	1	True				
ANR	981937	AssignmentExpression	myversion . Arch = NULL		981927	0		=			
ANR	981938	MemberAccess	myversion . Arch		981927	0					
ANR	981939	Identifier	myversion		981927	0					
ANR	981940	Identifier	Arch		981927	1					
ANR	981941	Identifier	NULL		981927	1					
ANR	981942	ExpressionStatement	myversion . OpSys = NULL	39:1:1372:1394	981927	2	True				
ANR	981943	AssignmentExpression	myversion . OpSys = NULL		981927	0		=			
ANR	981944	MemberAccess	myversion . OpSys		981927	0					
ANR	981945	Identifier	myversion		981927	0					
ANR	981946	Identifier	OpSys		981927	1					
ANR	981947	Identifier	NULL		981927	1					
ANR	981948	ExpressionStatement	mysubsys = NULL	40:1:1397:1412	981927	3	True				
ANR	981949	AssignmentExpression	mysubsys = NULL		981927	0		=			
ANR	981950	Identifier	mysubsys		981927	0					
ANR	981951	Identifier	NULL		981927	1					
ANR	981952	IfStatement	if ( versionstring == NULL )		981927	4					
ANR	981953	Condition	versionstring == NULL	42:6:1421:1441	981927	0	True				
ANR	981954	EqualityExpression	versionstring == NULL		981927	0		==			
ANR	981955	Identifier	versionstring		981927	0					
ANR	981956	Identifier	NULL		981927	1					
ANR	981957	CompoundStatement		7:30:124:124	981927	1					
ANR	981958	ExpressionStatement	versionstring = CondorVersion ( )	43:2:1449:1480	981927	0	True				
ANR	981959	AssignmentExpression	versionstring = CondorVersion ( )		981927	0		=			
ANR	981960	Identifier	versionstring		981927	0					
ANR	981961	CallExpression	CondorVersion ( )		981927	1					
ANR	981962	Callee	CondorVersion		981927	0					
ANR	981963	Identifier	CondorVersion		981927	0					
ANR	981964	ArgumentList			981927	1					
ANR	981965	IfStatement	if ( platformstring == NULL )		981927	5					
ANR	981966	Condition	platformstring == NULL	45:6:1491:1512	981927	0	True				
ANR	981967	EqualityExpression	platformstring == NULL		981927	0		==			
ANR	981968	Identifier	platformstring		981927	0					
ANR	981969	Identifier	NULL		981927	1					
ANR	981970	CompoundStatement		10:31:195:195	981927	1					
ANR	981971	ExpressionStatement	platformstring = CondorPlatform ( )	46:2:1520:1553	981927	0	True				
ANR	981972	AssignmentExpression	platformstring = CondorPlatform ( )		981927	0		=			
ANR	981973	Identifier	platformstring		981927	0					
ANR	981974	CallExpression	CondorPlatform ( )		981927	1					
ANR	981975	Callee	CondorPlatform		981927	0					
ANR	981976	Identifier	CondorPlatform		981927	0					
ANR	981977	ArgumentList			981927	1					
ANR	981978	ExpressionStatement	"string_to_VersionData ( versionstring , myversion )"	49:1:1560:1606	981927	6	True				
ANR	981979	CallExpression	"string_to_VersionData ( versionstring , myversion )"		981927	0					
ANR	981980	Callee	string_to_VersionData		981927	0					
ANR	981981	Identifier	string_to_VersionData		981927	0					
ANR	981982	ArgumentList	versionstring		981927	1					
ANR	981983	Argument	versionstring		981927	0					
ANR	981984	Identifier	versionstring		981927	0					
ANR	981985	Argument	myversion		981927	1					
ANR	981986	Identifier	myversion		981927	0					
ANR	981987	ExpressionStatement	"string_to_PlatformData ( platformstring , myversion )"	50:1:1609:1657	981927	7	True				
ANR	981988	CallExpression	"string_to_PlatformData ( platformstring , myversion )"		981927	0					
ANR	981989	Callee	string_to_PlatformData		981927	0					
ANR	981990	Identifier	string_to_PlatformData		981927	0					
ANR	981991	ArgumentList	platformstring		981927	1					
ANR	981992	Argument	platformstring		981927	0					
ANR	981993	Identifier	platformstring		981927	0					
ANR	981994	Argument	myversion		981927	1					
ANR	981995	Identifier	myversion		981927	0					
ANR	981996	IfStatement	if ( subsystem )		981927	8					
ANR	981997	Condition	subsystem	52:6:1666:1674	981927	0	True				
ANR	981998	Identifier	subsystem		981927	0					
ANR	981999	CompoundStatement		17:18:357:357	981927	1					
ANR	982000	ExpressionStatement	mysubsys = strdup ( subsystem )	53:2:1682:1710	981927	0	True				
ANR	982001	AssignmentExpression	mysubsys = strdup ( subsystem )		981927	0		=			
ANR	982002	Identifier	mysubsys		981927	0					
ANR	982003	CallExpression	strdup ( subsystem )		981927	1					
ANR	982004	Callee	strdup		981927	0					
ANR	982005	Identifier	strdup		981927	0					
ANR	982006	ArgumentList	subsystem		981927	1					
ANR	982007	Argument	subsystem		981927	0					
ANR	982008	Identifier	subsystem		981927	0					
ANR	982009	ElseStatement	else		981927	0					
ANR	982010	CompoundStatement		19:8:399:399	981927	0					
ANR	982011	ExpressionStatement	mysubsys = strdup ( get_mySubSystem ( ) -> getName ( ) )	55:2:1724:1771	981927	0	True				
ANR	982012	AssignmentExpression	mysubsys = strdup ( get_mySubSystem ( ) -> getName ( ) )		981927	0		=			
ANR	982013	Identifier	mysubsys		981927	0					
ANR	982014	CallExpression	strdup ( get_mySubSystem ( ) -> getName ( ) )		981927	1					
ANR	982015	Callee	strdup		981927	0					
ANR	982016	Identifier	strdup		981927	0					
ANR	982017	ArgumentList	get_mySubSystem ( ) -> getName ( )		981927	1					
ANR	982018	Argument	get_mySubSystem ( ) -> getName ( )		981927	0					
ANR	982019	CallExpression	get_mySubSystem ( ) -> getName ( )		981927	0					
ANR	982020	Callee	get_mySubSystem ( ) -> getName		981927	0					
ANR	982021	PtrMemberAccess	get_mySubSystem ( ) -> getName		981927	0					
ANR	982022	CallExpression	get_mySubSystem ( )		981927	0					
ANR	982023	Callee	get_mySubSystem		981927	0					
ANR	982024	Identifier	get_mySubSystem		981927	0					
ANR	982025	ArgumentList			981927	1					
ANR	982026	Identifier	getName		981927	1					
ANR	982027	ArgumentList			981927	1					
ANR	982028	Identifier	CondorVersionInfo :: CondorVersionInfo		981927	1					
ANR	982029	ParameterList	"const char * versionstring , const char * subsystem , const char * platformstring"		981927	2					
ANR	982030	Parameter	const char * versionstring	33:37:1221:1245	981927	0	True				
ANR	982031	ParameterType	const char *		981927	0					
ANR	982032	Identifier	versionstring		981927	1					
ANR	982033	Parameter	const char * subsystem	34:10:1259:1279	981927	1	True				
ANR	982034	ParameterType	const char *		981927	0					
ANR	982035	Identifier	subsystem		981927	1					
ANR	982036	Parameter	const char * platformstring	35:10:1292:1317	981927	2	True				
ANR	982037	ParameterType	const char *		981927	0					
ANR	982038	Identifier	platformstring		981927	1					
ANR	982039	CFGEntryNode	ENTRY		981927		True				
ANR	982040	CFGExitNode	EXIT		981927		True				
ANR	982041	Symbol	NULL		981927						
ANR	982042	Symbol	get_mySubSystem ( ) -> getName		981927						
ANR	982043	Symbol	myversion . MajorVer		981927						
ANR	982044	Symbol	* get_mySubSystem		981927						
ANR	982045	Symbol	subsystem		981927						
ANR	982046	Symbol	myversion		981927						
ANR	982047	Symbol	versionstring		981927						
ANR	982048	Symbol	myversion . OpSys		981927						
ANR	982049	Symbol	platformstring		981927						
ANR	982050	Symbol	CondorVersion		981927						
ANR	982051	Symbol	myversion . Arch		981927						
ANR	982052	Symbol	mysubsys		981927						
ANR	982053	Symbol	CondorPlatform		981927						
ANR	982054	Symbol	strdup		981927						
ANR	982055	Symbol	get_mySubSystem		981927						
ANR	982056	Function	CondorVersionInfo :: CondorVersionInfo	59:0:1779:2129							
ANR	982057	FunctionDef	CondorVersionInfo :: CondorVersionInfo (CondorVersionInfo const & other)		982056	0					
ANR	982058	CompoundStatement		60:0:1848:2129	982056	0					
ANR	982059	ExpressionStatement	myversion = other . myversion	61:1:1851:1878	982056	0	True				
ANR	982060	AssignmentExpression	myversion = other . myversion		982056	0		=			
ANR	982061	Identifier	myversion		982056	0					
ANR	982062	MemberAccess	other . myversion		982056	1					
ANR	982063	Identifier	other		982056	0					
ANR	982064	Identifier	myversion		982056	1					
ANR	982065	ExpressionStatement	mysubsys = NULL	62:1:1881:1896	982056	1	True				
ANR	982066	AssignmentExpression	mysubsys = NULL		982056	0		=			
ANR	982067	Identifier	mysubsys		982056	0					
ANR	982068	Identifier	NULL		982056	1					
ANR	982069	IfStatement	if ( other . mysubsys )		982056	2					
ANR	982070	Condition	other . mysubsys	63:5:1903:1916	982056	0	True				
ANR	982071	MemberAccess	other . mysubsys		982056	0					
ANR	982072	Identifier	other		982056	0					
ANR	982073	Identifier	mysubsys		982056	1					
ANR	982074	CompoundStatement		4:22:71:71	982056	1					
ANR	982075	ExpressionStatement	mysubsys = strdup ( other . mysubsys )	64:2:1924:1957	982056	0	True				
ANR	982076	AssignmentExpression	mysubsys = strdup ( other . mysubsys )		982056	0		=			
ANR	982077	Identifier	mysubsys		982056	0					
ANR	982078	CallExpression	strdup ( other . mysubsys )		982056	1					
ANR	982079	Callee	strdup		982056	0					
ANR	982080	Identifier	strdup		982056	0					
ANR	982081	ArgumentList	other . mysubsys		982056	1					
ANR	982082	Argument	other . mysubsys		982056	0					
ANR	982083	MemberAccess	other . mysubsys		982056	0					
ANR	982084	Identifier	other		982056	0					
ANR	982085	Identifier	mysubsys		982056	1					
ANR	982086	IfStatement	if ( other . myversion . Arch )		982056	3					
ANR	982087	Condition	other . myversion . Arch	66:5:1967:1986	982056	0	True				
ANR	982088	MemberAccess	other . myversion . Arch		982056	0					
ANR	982089	MemberAccess	other . myversion		982056	0					
ANR	982090	Identifier	other		982056	0					
ANR	982091	Identifier	myversion		982056	1					
ANR	982092	Identifier	Arch		982056	1					
ANR	982093	CompoundStatement		7:28:141:141	982056	1					
ANR	982094	ExpressionStatement	myversion . Arch = strdup ( other . myversion . Arch )	67:2:1994:2039	982056	0	True				
ANR	982095	AssignmentExpression	myversion . Arch = strdup ( other . myversion . Arch )		982056	0		=			
ANR	982096	MemberAccess	myversion . Arch		982056	0					
ANR	982097	Identifier	myversion		982056	0					
ANR	982098	Identifier	Arch		982056	1					
ANR	982099	CallExpression	strdup ( other . myversion . Arch )		982056	1					
ANR	982100	Callee	strdup		982056	0					
ANR	982101	Identifier	strdup		982056	0					
ANR	982102	ArgumentList	other . myversion . Arch		982056	1					
ANR	982103	Argument	other . myversion . Arch		982056	0					
ANR	982104	MemberAccess	other . myversion . Arch		982056	0					
ANR	982105	MemberAccess	other . myversion		982056	0					
ANR	982106	Identifier	other		982056	0					
ANR	982107	Identifier	myversion		982056	1					
ANR	982108	Identifier	Arch		982056	1					
ANR	982109	IfStatement	if ( other . myversion . OpSys )		982056	4					
ANR	982110	Condition	other . myversion . OpSys	69:5:2049:2069	982056	0	True				
ANR	982111	MemberAccess	other . myversion . OpSys		982056	0					
ANR	982112	MemberAccess	other . myversion		982056	0					
ANR	982113	Identifier	other		982056	0					
ANR	982114	Identifier	myversion		982056	1					
ANR	982115	Identifier	OpSys		982056	1					
ANR	982116	CompoundStatement		10:29:224:224	982056	1					
ANR	982117	ExpressionStatement	myversion . OpSys = strdup ( other . myversion . OpSys )	70:2:2077:2124	982056	0	True				
ANR	982118	AssignmentExpression	myversion . OpSys = strdup ( other . myversion . OpSys )		982056	0		=			
ANR	982119	MemberAccess	myversion . OpSys		982056	0					
ANR	982120	Identifier	myversion		982056	0					
ANR	982121	Identifier	OpSys		982056	1					
ANR	982122	CallExpression	strdup ( other . myversion . OpSys )		982056	1					
ANR	982123	Callee	strdup		982056	0					
ANR	982124	Identifier	strdup		982056	0					
ANR	982125	ArgumentList	other . myversion . OpSys		982056	1					
ANR	982126	Argument	other . myversion . OpSys		982056	0					
ANR	982127	MemberAccess	other . myversion . OpSys		982056	0					
ANR	982128	MemberAccess	other . myversion		982056	0					
ANR	982129	Identifier	other		982056	0					
ANR	982130	Identifier	myversion		982056	1					
ANR	982131	Identifier	OpSys		982056	1					
ANR	982132	Identifier	CondorVersionInfo :: CondorVersionInfo		982056	1					
ANR	982133	ParameterList	CondorVersionInfo const & other		982056	2					
ANR	982134	Parameter	CondorVersionInfo const & other	59:37:1816:1845	982056	0	True				
ANR	982135	ParameterType	CondorVersionInfo const &		982056	0					
ANR	982136	Identifier	other		982056	1					
ANR	982137	CFGEntryNode	ENTRY		982056		True				
ANR	982138	CFGExitNode	EXIT		982056		True				
ANR	982139	Symbol	other		982056						
ANR	982140	Symbol	NULL		982056						
ANR	982141	Symbol	other . myversion . Arch		982056						
ANR	982142	Symbol	myversion . Arch		982056						
ANR	982143	Symbol	other . myversion		982056						
ANR	982144	Symbol	mysubsys		982056						
ANR	982145	Symbol	myversion		982056						
ANR	982146	Symbol	strdup		982056						
ANR	982147	Symbol	other . mysubsys		982056						
ANR	982148	Symbol	other . myversion . OpSys		982056						
ANR	982149	Symbol	myversion . OpSys		982056						
ANR	982150	Function	CondorVersionInfo :: ~CondorVersionInfo	74:0:2132:2293							
ANR	982151	FunctionDef	CondorVersionInfo :: ~CondorVersionInfo ()		982150	0					
ANR	982152	CompoundStatement		75:0:2172:2293	982150	0					
ANR	982153	IfStatement	if ( mysubsys )		982150	0					
ANR	982154	Condition	mysubsys	76:5:2179:2186	982150	0	True				
ANR	982155	Identifier	mysubsys		982150	0					
ANR	982156	ExpressionStatement	free ( mysubsys )	76:15:2189:2203	982150	1	True				
ANR	982157	CallExpression	free ( mysubsys )		982150	0					
ANR	982158	Callee	free		982150	0					
ANR	982159	Identifier	free		982150	0					
ANR	982160	ArgumentList	mysubsys		982150	1					
ANR	982161	Argument	mysubsys		982150	0					
ANR	982162	Identifier	mysubsys		982150	0					
ANR	982163	IfStatement	if ( myversion . Arch )		982150	1					
ANR	982164	Condition	myversion . Arch	77:5:2210:2223	982150	0	True				
ANR	982165	MemberAccess	myversion . Arch		982150	0					
ANR	982166	Identifier	myversion		982150	0					
ANR	982167	Identifier	Arch		982150	1					
ANR	982168	ExpressionStatement	free ( myversion . Arch )	77:21:2226:2246	982150	1	True				
ANR	982169	CallExpression	free ( myversion . Arch )		982150	0					
ANR	982170	Callee	free		982150	0					
ANR	982171	Identifier	free		982150	0					
ANR	982172	ArgumentList	myversion . Arch		982150	1					
ANR	982173	Argument	myversion . Arch		982150	0					
ANR	982174	MemberAccess	myversion . Arch		982150	0					
ANR	982175	Identifier	myversion		982150	0					
ANR	982176	Identifier	Arch		982150	1					
ANR	982177	IfStatement	if ( myversion . OpSys )		982150	2					
ANR	982178	Condition	myversion . OpSys	78:5:2253:2267	982150	0	True				
ANR	982179	MemberAccess	myversion . OpSys		982150	0					
ANR	982180	Identifier	myversion		982150	0					
ANR	982181	Identifier	OpSys		982150	1					
ANR	982182	ExpressionStatement	free ( myversion . OpSys )	78:22:2270:2291	982150	1	True				
ANR	982183	CallExpression	free ( myversion . OpSys )		982150	0					
ANR	982184	Callee	free		982150	0					
ANR	982185	Identifier	free		982150	0					
ANR	982186	ArgumentList	myversion . OpSys		982150	1					
ANR	982187	Argument	myversion . OpSys		982150	0					
ANR	982188	MemberAccess	myversion . OpSys		982150	0					
ANR	982189	Identifier	myversion		982150	0					
ANR	982190	Identifier	OpSys		982150	1					
ANR	982191	Identifier	CondorVersionInfo :: ~CondorVersionInfo		982150	1					
ANR	982192	ParameterList			982150	2					
ANR	982193	CFGEntryNode	ENTRY		982150		True				
ANR	982194	CFGExitNode	EXIT		982150		True				
ANR	982195	Symbol	myversion . Arch		982150						
ANR	982196	Symbol	mysubsys		982150						
ANR	982197	Symbol	myversion		982150						
ANR	982198	Symbol	myversion . OpSys		982150						
ANR	982199	Function	CondorVersionInfo :: compare_versions	82:0:2298:2585							
ANR	982200	FunctionDef	CondorVersionInfo :: compare_versions (const char * VersionString1)		982199	0					
ANR	982201	CompoundStatement		84:0:2372:2585	982199	0					
ANR	982202	IdentifierDeclStatement	VersionData_t ver1 ;	85:1:2375:2393	982199	0	True				
ANR	982203	IdentifierDecl	ver1		982199	0					
ANR	982204	IdentifierDeclType	VersionData_t		982199	0					
ANR	982205	Identifier	ver1		982199	1					
ANR	982206	ExpressionStatement	ver1 . Scalar = 0	87:1:2397:2412	982199	1	True				
ANR	982207	AssignmentExpression	ver1 . Scalar = 0		982199	0		=			
ANR	982208	MemberAccess	ver1 . Scalar		982199	0					
ANR	982209	Identifier	ver1		982199	0					
ANR	982210	Identifier	Scalar		982199	1					
ANR	982211	PrimaryExpression	0		982199	1					
ANR	982212	ExpressionStatement	"string_to_VersionData ( VersionString1 , ver1 )"	88:1:2415:2457	982199	2	True				
ANR	982213	CallExpression	"string_to_VersionData ( VersionString1 , ver1 )"		982199	0					
ANR	982214	Callee	string_to_VersionData		982199	0					
ANR	982215	Identifier	string_to_VersionData		982199	0					
ANR	982216	ArgumentList	VersionString1		982199	1					
ANR	982217	Argument	VersionString1		982199	0					
ANR	982218	Identifier	VersionString1		982199	0					
ANR	982219	Argument	ver1		982199	1					
ANR	982220	Identifier	ver1		982199	0					
ANR	982221	IfStatement	if ( ver1 . Scalar < myversion . Scalar )		982199	3					
ANR	982222	Condition	ver1 . Scalar < myversion . Scalar	90:6:2466:2495	982199	0	True				
ANR	982223	RelationalExpression	ver1 . Scalar < myversion . Scalar		982199	0		<			
ANR	982224	MemberAccess	ver1 . Scalar		982199	0					
ANR	982225	Identifier	ver1		982199	0					
ANR	982226	Identifier	Scalar		982199	1					
ANR	982227	MemberAccess	myversion . Scalar		982199	1					
ANR	982228	Identifier	myversion		982199	0					
ANR	982229	Identifier	Scalar		982199	1					
ANR	982230	CompoundStatement		7:39:126:126	982199	1					
ANR	982231	ReturnStatement	return - 1 ;	91:2:2503:2512	982199	0	True				
ANR	982232	UnaryOperationExpression	- 1		982199	0					
ANR	982233	UnaryOperator	-		982199	0					
ANR	982234	PrimaryExpression	1		982199	1					
ANR	982235	IfStatement	if ( ver1 . Scalar > myversion . Scalar )		982199	4					
ANR	982236	Condition	ver1 . Scalar > myversion . Scalar	93:6:2523:2552	982199	0	True				
ANR	982237	RelationalExpression	ver1 . Scalar > myversion . Scalar		982199	0		>			
ANR	982238	MemberAccess	ver1 . Scalar		982199	0					
ANR	982239	Identifier	ver1		982199	0					
ANR	982240	Identifier	Scalar		982199	1					
ANR	982241	MemberAccess	myversion . Scalar		982199	1					
ANR	982242	Identifier	myversion		982199	0					
ANR	982243	Identifier	Scalar		982199	1					
ANR	982244	CompoundStatement		10:39:183:183	982199	1					
ANR	982245	ReturnStatement	return 1 ;	94:2:2560:2568	982199	0	True				
ANR	982246	PrimaryExpression	1		982199	0					
ANR	982247	ReturnStatement	return 0 ;	97:1:2575:2583	982199	5	True				
ANR	982248	PrimaryExpression	0		982199	0					
ANR	982249	ReturnType	int		982199	1					
ANR	982250	Identifier	CondorVersionInfo :: compare_versions		982199	2					
ANR	982251	ParameterList	const char * VersionString1		982199	3					
ANR	982252	Parameter	const char * VersionString1	83:36:2338:2363	982199	0	True				
ANR	982253	ParameterType	const char *		982199	0					
ANR	982254	Identifier	VersionString1		982199	1					
ANR	982255	CFGEntryNode	ENTRY		982199		True				
ANR	982256	CFGExitNode	EXIT		982199		True				
ANR	982257	Symbol	myversion . Scalar		982199						
ANR	982258	Symbol	ver1		982199						
ANR	982259	Symbol	myversion		982199						
ANR	982260	Symbol	VersionString1		982199						
ANR	982261	Symbol	ver1 . Scalar		982199						
ANR	982262	Function	CondorVersionInfo :: compare_build_dates	100:0:2588:2884							
ANR	982263	FunctionDef	CondorVersionInfo :: compare_build_dates (const char * VersionString1)		982262	0					
ANR	982264	CompoundStatement		102:0:2665:2884	982262	0					
ANR	982265	IdentifierDeclStatement	VersionData_t ver1 ;	103:1:2668:2686	982262	0	True				
ANR	982266	IdentifierDecl	ver1		982262	0					
ANR	982267	IdentifierDeclType	VersionData_t		982262	0					
ANR	982268	Identifier	ver1		982262	1					
ANR	982269	ExpressionStatement	ver1 . BuildDate = 0	105:1:2690:2708	982262	1	True				
ANR	982270	AssignmentExpression	ver1 . BuildDate = 0		982262	0		=			
ANR	982271	MemberAccess	ver1 . BuildDate		982262	0					
ANR	982272	Identifier	ver1		982262	0					
ANR	982273	Identifier	BuildDate		982262	1					
ANR	982274	PrimaryExpression	0		982262	1					
ANR	982275	ExpressionStatement	"string_to_VersionData ( VersionString1 , ver1 )"	106:1:2711:2753	982262	2	True				
ANR	982276	CallExpression	"string_to_VersionData ( VersionString1 , ver1 )"		982262	0					
ANR	982277	Callee	string_to_VersionData		982262	0					
ANR	982278	Identifier	string_to_VersionData		982262	0					
ANR	982279	ArgumentList	VersionString1		982262	1					
ANR	982280	Argument	VersionString1		982262	0					
ANR	982281	Identifier	VersionString1		982262	0					
ANR	982282	Argument	ver1		982262	1					
ANR	982283	Identifier	ver1		982262	0					
ANR	982284	IfStatement	if ( ver1 . BuildDate < myversion . BuildDate )		982262	3					
ANR	982285	Condition	ver1 . BuildDate < myversion . BuildDate	109:6:2763:2798	982262	0	True				
ANR	982286	RelationalExpression	ver1 . BuildDate < myversion . BuildDate		982262	0		<			
ANR	982287	MemberAccess	ver1 . BuildDate		982262	0					
ANR	982288	Identifier	ver1		982262	0					
ANR	982289	Identifier	BuildDate		982262	1					
ANR	982290	MemberAccess	myversion . BuildDate		982262	1					
ANR	982291	Identifier	myversion		982262	0					
ANR	982292	Identifier	BuildDate		982262	1					
ANR	982293	ReturnStatement	return - 1 ;	110:2:2804:2813	982262	1	True				
ANR	982294	UnaryOperationExpression	- 1		982262	0					
ANR	982295	UnaryOperator	-		982262	0					
ANR	982296	PrimaryExpression	1		982262	1					
ANR	982297	IfStatement	if ( ver1 . BuildDate > myversion . BuildDate )		982262	4					
ANR	982298	Condition	ver1 . BuildDate > myversion . BuildDate	111:6:2821:2856	982262	0	True				
ANR	982299	RelationalExpression	ver1 . BuildDate > myversion . BuildDate		982262	0		>			
ANR	982300	MemberAccess	ver1 . BuildDate		982262	0					
ANR	982301	Identifier	ver1		982262	0					
ANR	982302	Identifier	BuildDate		982262	1					
ANR	982303	MemberAccess	myversion . BuildDate		982262	1					
ANR	982304	Identifier	myversion		982262	0					
ANR	982305	Identifier	BuildDate		982262	1					
ANR	982306	ReturnStatement	return 1 ;	112:2:2862:2870	982262	1	True				
ANR	982307	PrimaryExpression	1		982262	0					
ANR	982308	ReturnStatement	return 0 ;	114:1:2874:2882	982262	5	True				
ANR	982309	PrimaryExpression	0		982262	0					
ANR	982310	ReturnType	int		982262	1					
ANR	982311	Identifier	CondorVersionInfo :: compare_build_dates		982262	2					
ANR	982312	ParameterList	const char * VersionString1		982262	3					
ANR	982313	Parameter	const char * VersionString1	101:39:2631:2656	982262	0	True				
ANR	982314	ParameterType	const char *		982262	0					
ANR	982315	Identifier	VersionString1		982262	1					
ANR	982316	CFGEntryNode	ENTRY		982262		True				
ANR	982317	CFGExitNode	EXIT		982262		True				
ANR	982318	Symbol	ver1 . BuildDate		982262						
ANR	982319	Symbol	ver1		982262						
ANR	982320	Symbol	myversion		982262						
ANR	982321	Symbol	myversion . BuildDate		982262						
ANR	982322	Symbol	VersionString1		982262						
ANR	982323	DeclStmt									
ANR	982324	Decl							VersionData_t	VersionData_t	other_ver
ANR	982325	Function	CondorVersionInfo :: built_since_version	164:0:4394:4617							
ANR	982326	FunctionDef	"CondorVersionInfo :: built_since_version (int MajorVer , int MinorVer , int SubMinorVer)"		982325	0					
ANR	982327	CompoundStatement		167:0:4502:4617	982325	0					
ANR	982328	IdentifierDeclStatement	int Scalar = MajorVer * 1000000 + MinorVer * 1000 + SubMinorVer ;	168:1:4505:4574	982325	0	True				
ANR	982329	IdentifierDecl	Scalar = MajorVer * 1000000 + MinorVer * 1000 + SubMinorVer		982325	0					
ANR	982330	IdentifierDeclType	int		982325	0					
ANR	982331	Identifier	Scalar		982325	1					
ANR	982332	AssignmentExpression	Scalar = MajorVer * 1000000 + MinorVer * 1000 + SubMinorVer		982325	2		=			
ANR	982333	Identifier	Scalar		982325	0					
ANR	982334	AdditiveExpression	MajorVer * 1000000 + MinorVer * 1000 + SubMinorVer		982325	1		+			
ANR	982335	MultiplicativeExpression	MajorVer * 1000000		982325	0		*			
ANR	982336	Identifier	MajorVer		982325	0					
ANR	982337	PrimaryExpression	1000000		982325	1					
ANR	982338	AdditiveExpression	MinorVer * 1000 + SubMinorVer		982325	1		+			
ANR	982339	MultiplicativeExpression	MinorVer * 1000		982325	0		*			
ANR	982340	Identifier	MinorVer		982325	0					
ANR	982341	PrimaryExpression	1000		982325	1					
ANR	982342	Identifier	SubMinorVer		982325	1					
ANR	982343	ReturnStatement	return ( myversion . Scalar >= Scalar ) ;	171:1:4578:4615	982325	1	True				
ANR	982344	RelationalExpression	myversion . Scalar >= Scalar		982325	0		>=			
ANR	982345	MemberAccess	myversion . Scalar		982325	0					
ANR	982346	Identifier	myversion		982325	0					
ANR	982347	Identifier	Scalar		982325	1					
ANR	982348	Identifier	Scalar		982325	1					
ANR	982349	ReturnType	bool		982325	1					
ANR	982350	Identifier	CondorVersionInfo :: built_since_version		982325	2					
ANR	982351	ParameterList	"int MajorVer , int MinorVer , int SubMinorVer"		982325	3					
ANR	982352	Parameter	int MajorVer	165:39:4438:4449	982325	0	True				
ANR	982353	ParameterType	int		982325	0					
ANR	982354	Identifier	MajorVer		982325	1					
ANR	982355	Parameter	int MinorVer	165:53:4452:4463	982325	1	True				
ANR	982356	ParameterType	int		982325	0					
ANR	982357	Identifier	MinorVer		982325	1					
ANR	982358	Parameter	int SubMinorVer	166:12:4479:4493	982325	2	True				
ANR	982359	ParameterType	int		982325	0					
ANR	982360	Identifier	SubMinorVer		982325	1					
ANR	982361	CFGEntryNode	ENTRY		982325		True				
ANR	982362	CFGExitNode	EXIT		982325		True				
ANR	982363	Symbol	MinorVer		982325						
ANR	982364	Symbol	MajorVer		982325						
ANR	982365	Symbol	myversion . Scalar		982325						
ANR	982366	Symbol	SubMinorVer		982325						
ANR	982367	Symbol	myversion		982325						
ANR	982368	Symbol	Scalar		982325						
ANR	982369	Function	CondorVersionInfo :: built_since_date	174:0:4620:5074							
ANR	982370	FunctionDef	"CondorVersionInfo :: built_since_date (int month , int day , int year)"		982369	0					
ANR	982371	CompoundStatement		176:0:4697:5074	982369	0					
ANR	982372	IdentifierDeclStatement	struct tm build_date ;	179:1:4723:4743	982369	0	True				
ANR	982373	IdentifierDecl	build_date		982369	0					
ANR	982374	IdentifierDeclType	struct tm		982369	0					
ANR	982375	Identifier	build_date		982369	1					
ANR	982376	IdentifierDeclStatement	time_t BuildDate ;	180:1:4746:4762	982369	1	True				
ANR	982377	IdentifierDecl	BuildDate		982369	0					
ANR	982378	IdentifierDeclType	time_t		982369	0					
ANR	982379	Identifier	BuildDate		982369	1					
ANR	982380	ExpressionStatement	build_date . tm_hour = 0	181:1:4765:4787	982369	2	True				
ANR	982381	AssignmentExpression	build_date . tm_hour = 0		982369	0		=			
ANR	982382	MemberAccess	build_date . tm_hour		982369	0					
ANR	982383	Identifier	build_date		982369	0					
ANR	982384	Identifier	tm_hour		982369	1					
ANR	982385	PrimaryExpression	0		982369	1					
ANR	982386	ExpressionStatement	build_date . tm_isdst = 1	182:1:4790:4813	982369	3	True				
ANR	982387	AssignmentExpression	build_date . tm_isdst = 1		982369	0		=			
ANR	982388	MemberAccess	build_date . tm_isdst		982369	0					
ANR	982389	Identifier	build_date		982369	0					
ANR	982390	Identifier	tm_isdst		982369	1					
ANR	982391	PrimaryExpression	1		982369	1					
ANR	982392	ExpressionStatement	build_date . tm_mday = day	183:1:4816:4840	982369	4	True				
ANR	982393	AssignmentExpression	build_date . tm_mday = day		982369	0		=			
ANR	982394	MemberAccess	build_date . tm_mday		982369	0					
ANR	982395	Identifier	build_date		982369	0					
ANR	982396	Identifier	tm_mday		982369	1					
ANR	982397	Identifier	day		982369	1					
ANR	982398	ExpressionStatement	build_date . tm_min = 0	184:1:4843:4864	982369	5	True				
ANR	982399	AssignmentExpression	build_date . tm_min = 0		982369	0		=			
ANR	982400	MemberAccess	build_date . tm_min		982369	0					
ANR	982401	Identifier	build_date		982369	0					
ANR	982402	Identifier	tm_min		982369	1					
ANR	982403	PrimaryExpression	0		982369	1					
ANR	982404	ExpressionStatement	build_date . tm_mon = month - 1	185:1:4867:4896	982369	6	True				
ANR	982405	AssignmentExpression	build_date . tm_mon = month - 1		982369	0		=			
ANR	982406	MemberAccess	build_date . tm_mon		982369	0					
ANR	982407	Identifier	build_date		982369	0					
ANR	982408	Identifier	tm_mon		982369	1					
ANR	982409	AdditiveExpression	month - 1		982369	1		-			
ANR	982410	Identifier	month		982369	0					
ANR	982411	PrimaryExpression	1		982369	1					
ANR	982412	ExpressionStatement	build_date . tm_sec = 0	186:1:4899:4920	982369	7	True				
ANR	982413	AssignmentExpression	build_date . tm_sec = 0		982369	0		=			
ANR	982414	MemberAccess	build_date . tm_sec		982369	0					
ANR	982415	Identifier	build_date		982369	0					
ANR	982416	Identifier	tm_sec		982369	1					
ANR	982417	PrimaryExpression	0		982369	1					
ANR	982418	ExpressionStatement	build_date . tm_year = year - 1900	187:1:4923:4955	982369	8	True				
ANR	982419	AssignmentExpression	build_date . tm_year = year - 1900		982369	0		=			
ANR	982420	MemberAccess	build_date . tm_year		982369	0					
ANR	982421	Identifier	build_date		982369	0					
ANR	982422	Identifier	tm_year		982369	1					
ANR	982423	AdditiveExpression	year - 1900		982369	1		-			
ANR	982424	Identifier	year		982369	0					
ANR	982425	PrimaryExpression	1900		982369	1					
ANR	982426	IfStatement	if ( ( BuildDate = mktime ( & build_date ) ) == - 1 )		982369	9					
ANR	982427	Condition	( BuildDate = mktime ( & build_date ) ) == - 1	189:6:4964:5002	982369	0	True				
ANR	982428	EqualityExpression	( BuildDate = mktime ( & build_date ) ) == - 1		982369	0		==			
ANR	982429	AssignmentExpression	BuildDate = mktime ( & build_date )		982369	0		=			
ANR	982430	Identifier	BuildDate		982369	0					
ANR	982431	CallExpression	mktime ( & build_date )		982369	1					
ANR	982432	Callee	mktime		982369	0					
ANR	982433	Identifier	mktime		982369	0					
ANR	982434	ArgumentList	& build_date		982369	1					
ANR	982435	Argument	& build_date		982369	0					
ANR	982436	UnaryOperationExpression	& build_date		982369	0					
ANR	982437	UnaryOperator	&		982369	0					
ANR	982438	Identifier	build_date		982369	1					
ANR	982439	UnaryOperationExpression	- 1		982369	1					
ANR	982440	UnaryOperator	-		982369	0					
ANR	982441	PrimaryExpression	1		982369	1					
ANR	982442	CompoundStatement		14:48:308:308	982369	1					
ANR	982443	ReturnStatement	return false ;	190:2:5010:5022	982369	0	True				
ANR	982444	Identifier	false		982369	0					
ANR	982445	ReturnStatement	return ( myversion . BuildDate >= BuildDate ) ;	193:1:5029:5072	982369	10	True				
ANR	982446	RelationalExpression	myversion . BuildDate >= BuildDate		982369	0		>=			
ANR	982447	MemberAccess	myversion . BuildDate		982369	0					
ANR	982448	Identifier	myversion		982369	0					
ANR	982449	Identifier	BuildDate		982369	1					
ANR	982450	Identifier	BuildDate		982369	1					
ANR	982451	ReturnType	bool		982369	1					
ANR	982452	Identifier	CondorVersionInfo :: built_since_date		982369	2					
ANR	982453	ParameterList	"int month , int day , int year"		982369	3					
ANR	982454	Parameter	int month	175:36:4661:4669	982369	0	True				
ANR	982455	ParameterType	int		982369	0					
ANR	982456	Identifier	month		982369	1					
ANR	982457	Parameter	int day	175:47:4672:4678	982369	1	True				
ANR	982458	ParameterType	int		982369	0					
ANR	982459	Identifier	day		982369	1					
ANR	982460	Parameter	int year	175:56:4681:4688	982369	2	True				
ANR	982461	ParameterType	int		982369	0					
ANR	982462	Identifier	year		982369	1					
ANR	982463	CFGEntryNode	ENTRY		982369		True				
ANR	982464	CFGExitNode	EXIT		982369		True				
ANR	982465	Symbol	year		982369						
ANR	982466	Symbol	false		982369						
ANR	982467	Symbol	build_date . tm_isdst		982369						
ANR	982468	Symbol	myversion		982369						
ANR	982469	Symbol	myversion . BuildDate		982369						
ANR	982470	Symbol	build_date . tm_hour		982369						
ANR	982471	Symbol	build_date . tm_year		982369						
ANR	982472	Symbol	build_date		982369						
ANR	982473	Symbol	mktime		982369						
ANR	982474	Symbol	month		982369						
ANR	982475	Symbol	BuildDate		982369						
ANR	982476	Symbol	build_date . tm_mon		982369						
ANR	982477	Symbol	build_date . tm_mday		982369						
ANR	982478	Symbol	& build_date		982369						
ANR	982479	Symbol	build_date . tm_sec		982369						
ANR	982480	Symbol	day		982369						
ANR	982481	Symbol	build_date . tm_min		982369						
ANR	982482	Function	CondorVersionInfo :: is_valid	196:0:5077:5326							
ANR	982483	FunctionDef	CondorVersionInfo :: is_valid (const char * VersionString)		982482	0					
ANR	982484	CompoundStatement		198:0:5143:5326	982482	0					
ANR	982485	IdentifierDeclStatement	bool ret_value ;	199:1:5146:5160	982482	0	True				
ANR	982486	IdentifierDecl	ret_value		982482	0					
ANR	982487	IdentifierDeclType	bool		982482	0					
ANR	982488	Identifier	ret_value		982482	1					
ANR	982489	IdentifierDeclStatement	VersionData_t ver1 ;	200:1:5163:5181	982482	1	True				
ANR	982490	IdentifierDecl	ver1		982482	0					
ANR	982491	IdentifierDeclType	VersionData_t		982482	0					
ANR	982492	Identifier	ver1		982482	1					
ANR	982493	IfStatement	if ( ! VersionString )		982482	2					
ANR	982494	Condition	! VersionString	202:6:5190:5203	982482	0	True				
ANR	982495	UnaryOperationExpression	! VersionString		982482	0					
ANR	982496	UnaryOperator	!		982482	0					
ANR	982497	Identifier	VersionString		982482	1					
ANR	982498	CompoundStatement		5:23:63:63	982482	1					
ANR	982499	ReturnStatement	return ( myversion . MajorVer > 5 ) ;	203:2:5211:5242	982482	0	True				
ANR	982500	RelationalExpression	myversion . MajorVer > 5		982482	0		>			
ANR	982501	MemberAccess	myversion . MajorVer		982482	0					
ANR	982502	Identifier	myversion		982482	0					
ANR	982503	Identifier	MajorVer		982482	1					
ANR	982504	PrimaryExpression	5		982482	1					
ANR	982505	ExpressionStatement	"ret_value = string_to_VersionData ( VersionString , ver1 )"	206:1:5249:5302	982482	3	True				
ANR	982506	AssignmentExpression	"ret_value = string_to_VersionData ( VersionString , ver1 )"		982482	0		=			
ANR	982507	Identifier	ret_value		982482	0					
ANR	982508	CallExpression	"string_to_VersionData ( VersionString , ver1 )"		982482	1					
ANR	982509	Callee	string_to_VersionData		982482	0					
ANR	982510	Identifier	string_to_VersionData		982482	0					
ANR	982511	ArgumentList	VersionString		982482	1					
ANR	982512	Argument	VersionString		982482	0					
ANR	982513	Identifier	VersionString		982482	0					
ANR	982514	Argument	ver1		982482	1					
ANR	982515	Identifier	ver1		982482	0					
ANR	982516	ReturnStatement	return ret_value ;	208:1:5306:5322	982482	4	True				
ANR	982517	Identifier	ret_value		982482	0					
ANR	982518	ReturnType	bool		982482	1					
ANR	982519	Identifier	CondorVersionInfo :: is_valid		982482	2					
ANR	982520	ParameterList	const char * VersionString		982482	3					
ANR	982521	Parameter	const char * VersionString	197:28:5110:5134	982482	0	True				
ANR	982522	ParameterType	const char *		982482	0					
ANR	982523	Identifier	VersionString		982482	1					
ANR	982524	CFGEntryNode	ENTRY		982482		True				
ANR	982525	CFGExitNode	EXIT		982482		True				
ANR	982526	Symbol	VersionString		982482						
ANR	982527	Symbol	myversion . MajorVer		982482						
ANR	982528	Symbol	string_to_VersionData		982482						
ANR	982529	Symbol	ret_value		982482						
ANR	982530	Symbol	ver1		982482						
ANR	982531	Symbol	myversion		982482						
ANR	982532	Function	CondorVersionInfo :: get_version_from_file	212:0:5330:7165							
ANR	982533	FunctionDef	"CondorVersionInfo :: get_version_from_file (const char * filename , char * ver , int maxlen)"		982532	0					
ANR	982534	CompoundStatement		215:0:5435:7165	982532	0					
ANR	982535	IdentifierDeclStatement	bool must_free = false ;	216:1:5438:5460	982532	0	True				
ANR	982536	IdentifierDecl	must_free = false		982532	0					
ANR	982537	IdentifierDeclType	bool		982532	0					
ANR	982538	Identifier	must_free		982532	1					
ANR	982539	AssignmentExpression	must_free = false		982532	2		=			
ANR	982540	Identifier	false		982532	0					
ANR	982541	Identifier	false		982532	1					
ANR	982542	IfStatement	if ( ! filename )		982532	1					
ANR	982543	Condition	! filename	218:5:5468:5476	982532	0	True				
ANR	982544	UnaryOperationExpression	! filename		982532	0					
ANR	982545	UnaryOperator	!		982532	0					
ANR	982546	Identifier	filename		982532	1					
ANR	982547	ReturnStatement	return NULL ;	219:2:5481:5492	982532	1	True				
ANR	982548	Identifier	NULL		982532	0					
ANR	982549	IfStatement	if ( ver && maxlen < 40 )		982532	2					
ANR	982550	Condition	ver && maxlen < 40	221:5:5501:5518	982532	0	True				
ANR	982551	AndExpression	ver && maxlen < 40		982532	0		&&			
ANR	982552	Identifier	ver		982532	0					
ANR	982553	RelationalExpression	maxlen < 40		982532	1		<			
ANR	982554	Identifier	maxlen		982532	0					
ANR	982555	PrimaryExpression	40		982532	1					
ANR	982556	ReturnStatement	return NULL ;	222:2:5524:5535	982532	1	True				
ANR	982557	Identifier	NULL		982532	0					
ANR	982558	ExpressionStatement	maxlen --	224:1:5539:5547	982532	3	True				
ANR	982559	PostIncDecOperationExpression	maxlen --		982532	0					
ANR	982560	Identifier	maxlen		982532	0					
ANR	982561	IncDec	--		982532	1					
ANR	982562	Statement	static	227:1:5611:5616	982532	4	True				
ANR	982563	IdentifierDeclStatement	"const char * readonly = ""rb"" ;"	227:8:5618:5645	982532	5	True				
ANR	982564	IdentifierDecl	"* readonly = ""rb"""		982532	0					
ANR	982565	IdentifierDeclType	const char *		982532	0					
ANR	982566	Identifier	readonly		982532	1					
ANR	982567	AssignmentExpression	"* readonly = ""rb"""		982532	2		=			
ANR	982568	Identifier	readonly		982532	0					
ANR	982569	PrimaryExpression	"""rb"""		982532	1					
ANR	982570	IdentifierDeclStatement	"FILE * fp = safe_fopen_wrapper_follow ( filename , readonly ) ;"	232:1:5724:5779	982532	6	True				
ANR	982571	IdentifierDecl	"* fp = safe_fopen_wrapper_follow ( filename , readonly )"		982532	0					
ANR	982572	IdentifierDeclType	FILE *		982532	0					
ANR	982573	Identifier	fp		982532	1					
ANR	982574	AssignmentExpression	"* fp = safe_fopen_wrapper_follow ( filename , readonly )"		982532	2		=			
ANR	982575	Identifier	fp		982532	0					
ANR	982576	CallExpression	"safe_fopen_wrapper_follow ( filename , readonly )"		982532	1					
ANR	982577	Callee	safe_fopen_wrapper_follow		982532	0					
ANR	982578	Identifier	safe_fopen_wrapper_follow		982532	0					
ANR	982579	ArgumentList	filename		982532	1					
ANR	982580	Argument	filename		982532	0					
ANR	982581	Identifier	filename		982532	0					
ANR	982582	Argument	readonly		982532	1					
ANR	982583	Identifier	readonly		982532	0					
ANR	982584	IfStatement	if ( ! fp )		982532	7					
ANR	982585	Condition	! fp	234:5:5787:5789	982532	0	True				
ANR	982586	UnaryOperationExpression	! fp		982532	0					
ANR	982587	UnaryOperator	!		982532	0					
ANR	982588	Identifier	fp		982532	1					
ANR	982589	CompoundStatement		22:2:409:460	982532	1					
ANR	982590	IdentifierDeclStatement	char * altname = alternate_exec_pathname ( filename ) ;	236:2:5845:5896	982532	0	True				
ANR	982591	IdentifierDecl	* altname = alternate_exec_pathname ( filename )		982532	0					
ANR	982592	IdentifierDeclType	char *		982532	0					
ANR	982593	Identifier	altname		982532	1					
ANR	982594	AssignmentExpression	* altname = alternate_exec_pathname ( filename )		982532	2		=			
ANR	982595	Identifier	altname		982532	0					
ANR	982596	CallExpression	alternate_exec_pathname ( filename )		982532	1					
ANR	982597	Callee	alternate_exec_pathname		982532	0					
ANR	982598	Identifier	alternate_exec_pathname		982532	0					
ANR	982599	ArgumentList	filename		982532	1					
ANR	982600	Argument	filename		982532	0					
ANR	982601	Identifier	filename		982532	0					
ANR	982602	IfStatement	if ( altname )		982532	1					
ANR	982603	Condition	altname	237:7:5905:5911	982532	0	True				
ANR	982604	Identifier	altname		982532	0					
ANR	982605	CompoundStatement		23:17:479:479	982532	1					
ANR	982606	ExpressionStatement	"fp = safe_fopen_wrapper_follow ( altname , readonly )"	238:3:5920:5968	982532	0	True				
ANR	982607	AssignmentExpression	"fp = safe_fopen_wrapper_follow ( altname , readonly )"		982532	0		=			
ANR	982608	Identifier	fp		982532	0					
ANR	982609	CallExpression	"safe_fopen_wrapper_follow ( altname , readonly )"		982532	1					
ANR	982610	Callee	safe_fopen_wrapper_follow		982532	0					
ANR	982611	Identifier	safe_fopen_wrapper_follow		982532	0					
ANR	982612	ArgumentList	altname		982532	1					
ANR	982613	Argument	altname		982532	0					
ANR	982614	Identifier	altname		982532	0					
ANR	982615	Argument	readonly		982532	1					
ANR	982616	Identifier	readonly		982532	0					
ANR	982617	ExpressionStatement	free ( altname )	239:3:5973:5986	982532	1	True				
ANR	982618	CallExpression	free ( altname )		982532	0					
ANR	982619	Callee	free		982532	0					
ANR	982620	Identifier	free		982532	0					
ANR	982621	ArgumentList	altname		982532	1					
ANR	982622	Argument	altname		982532	0					
ANR	982623	Identifier	altname		982532	0					
ANR	982624	IfStatement	if ( ! fp )		982532	8					
ANR	982625	Condition	! fp	243:6:6002:6004	982532	0	True				
ANR	982626	UnaryOperationExpression	! fp		982532	0					
ANR	982627	UnaryOperator	!		982532	0					
ANR	982628	Identifier	fp		982532	1					
ANR	982629	CompoundStatement		29:12:572:572	982532	1					
ANR	982630	ReturnStatement	return NULL ;	245:2:6032:6043	982532	0	True				
ANR	982631	Identifier	NULL		982532	0					
ANR	982632	IfStatement	if ( ! ver )		982532	9					
ANR	982633	Condition	! ver	248:5:6056:6059	982532	0	True				
ANR	982634	UnaryOperationExpression	! ver		982532	0					
ANR	982635	UnaryOperator	!		982532	0					
ANR	982636	Identifier	ver		982532	1					
ANR	982637	CompoundStatement		34:11:626:626	982532	1					
ANR	982638	IfStatement	if ( ! ( ver = ( char * ) malloc ( 100 ) ) )		982532	0					
ANR	982639	Condition	! ( ver = ( char * ) malloc ( 100 ) )	249:7:6071:6098	982532	0	True				
ANR	982640	UnaryOperationExpression	! ( ver = ( char * ) malloc ( 100 ) )		982532	0					
ANR	982641	UnaryOperator	!		982532	0					
ANR	982642	AssignmentExpression	ver = ( char * ) malloc ( 100 )		982532	1		=			
ANR	982643	Identifier	ver		982532	0					
ANR	982644	CastExpression	( char * ) malloc ( 100 )		982532	1					
ANR	982645	CastTarget	char *		982532	0					
ANR	982646	CallExpression	malloc ( 100 )		982532	1					
ANR	982647	Callee	malloc		982532	0					
ANR	982648	Identifier	malloc		982532	0					
ANR	982649	ArgumentList	100		982532	1					
ANR	982650	Argument	100		982532	0					
ANR	982651	PrimaryExpression	100		982532	0					
ANR	982652	CompoundStatement		35:38:666:666	982532	1					
ANR	982653	ReturnStatement	return NULL ;	251:3:6127:6138	982532	0	True				
ANR	982654	Identifier	NULL		982532	0					
ANR	982655	ExpressionStatement	must_free = true	253:2:6146:6162	982532	1	True				
ANR	982656	AssignmentExpression	must_free = true		982532	0		=			
ANR	982657	Identifier	must_free		982532	0					
ANR	982658	Identifier	true		982532	1					
ANR	982659	ExpressionStatement	maxlen = 100	254:2:6166:6178	982532	2	True				
ANR	982660	AssignmentExpression	maxlen = 100		982532	0		=			
ANR	982661	Identifier	maxlen		982532	0					
ANR	982662	PrimaryExpression	100		982532	1					
ANR	982663	IdentifierDeclStatement	int i = 0 ;	263:1:6545:6554	982532	10	True				
ANR	982664	IdentifierDecl	i = 0		982532	0					
ANR	982665	IdentifierDeclType	int		982532	0					
ANR	982666	Identifier	i		982532	1					
ANR	982667	AssignmentExpression	i = 0		982532	2		=			
ANR	982668	Identifier	i		982532	0					
ANR	982669	PrimaryExpression	0		982532	1					
ANR	982670	IdentifierDeclStatement	bool got_verstring = false ;	264:1:6557:6583	982532	11	True				
ANR	982671	IdentifierDecl	got_verstring = false		982532	0					
ANR	982672	IdentifierDeclType	bool		982532	0					
ANR	982673	Identifier	got_verstring		982532	1					
ANR	982674	AssignmentExpression	got_verstring = false		982532	2		=			
ANR	982675	Identifier	false		982532	0					
ANR	982676	Identifier	false		982532	1					
ANR	982677	IdentifierDeclStatement	"const char * verprefix = ""$CondorVersion: "" ;"	265:1:6586:6628	982532	12	True				
ANR	982678	IdentifierDecl	"* verprefix = ""$CondorVersion: """		982532	0					
ANR	982679	IdentifierDeclType	const char *		982532	0					
ANR	982680	Identifier	verprefix		982532	1					
ANR	982681	AssignmentExpression	"* verprefix = ""$CondorVersion: """		982532	2		=			
ANR	982682	Identifier	verprefix		982532	0					
ANR	982683	PrimaryExpression	"""$CondorVersion: """		982532	1					
ANR	982684	IdentifierDeclStatement	int ch ;	266:1:6631:6637	982532	13	True				
ANR	982685	IdentifierDecl	ch		982532	0					
ANR	982686	IdentifierDeclType	int		982532	0					
ANR	982687	Identifier	ch		982532	1					
ANR	982688	WhileStatement	while ( ( ch = fgetc ( fp ) ) != EOF )		982532	14					
ANR	982689	Condition	( ch = fgetc ( fp ) ) != EOF	267:8:6647:6667	982532	0	True				
ANR	982690	EqualityExpression	( ch = fgetc ( fp ) ) != EOF		982532	0		!=			
ANR	982691	AssignmentExpression	ch = fgetc ( fp )		982532	0		=			
ANR	982692	Identifier	ch		982532	0					
ANR	982693	CallExpression	fgetc ( fp )		982532	1					
ANR	982694	Callee	fgetc		982532	0					
ANR	982695	Identifier	fgetc		982532	0					
ANR	982696	ArgumentList	fp		982532	1					
ANR	982697	Argument	fp		982532	0					
ANR	982698	Identifier	fp		982532	0					
ANR	982699	Identifier	EOF		982532	1					
ANR	982700	CompoundStatement		53:32:1235:1235	982532	1					
ANR	982701	IfStatement	if ( verprefix [ i ] == '\\0' && ch != '\\0' )		982532	0					
ANR	982702	Condition	verprefix [ i ] == '\\0' && ch != '\\0'	268:7:6680:6713	982532	0	True				
ANR	982703	AndExpression	verprefix [ i ] == '\\0' && ch != '\\0'		982532	0		&&			
ANR	982704	EqualityExpression	verprefix [ i ] == '\\0'		982532	0		==			
ANR	982705	ArrayIndexing	verprefix [ i ]		982532	0					
ANR	982706	Identifier	verprefix		982532	0					
ANR	982707	Identifier	i		982532	1					
ANR	982708	PrimaryExpression	'\\0'		982532	1					
ANR	982709	EqualityExpression	ch != '\\0'		982532	1		!=			
ANR	982710	Identifier	ch		982532	0					
ANR	982711	PrimaryExpression	'\\0'		982532	1					
ANR	982712	CompoundStatement		54:44:1281:1281	982532	1					
ANR	982713	DoStatement	do		982532	0					
ANR	982714	CompoundStatement		55:6:1289:1289	982532	0					
ANR	982715	ExpressionStatement	ver [ i ++ ] = ch	270:4:6731:6744	982532	0	True				
ANR	982716	AssignmentExpression	ver [ i ++ ] = ch		982532	0		=			
ANR	982717	ArrayIndexing	ver [ i ++ ]		982532	0					
ANR	982718	Identifier	ver		982532	0					
ANR	982719	PostIncDecOperationExpression	i ++		982532	1					
ANR	982720	Identifier	i		982532	0					
ANR	982721	IncDec	++		982532	1					
ANR	982722	Identifier	ch		982532	1					
ANR	982723	IfStatement	if ( ch == '$' )		982532	1					
ANR	982724	Condition	ch == '$'	271:9:6755:6763	982532	0	True				
ANR	982725	EqualityExpression	ch == '$'		982532	0		==			
ANR	982726	Identifier	ch		982532	0					
ANR	982727	PrimaryExpression	'$'		982532	1					
ANR	982728	CompoundStatement		57:21:1331:1331	982532	1					
ANR	982729	ExpressionStatement	got_verstring = true	272:5:6774:6794	982532	0	True				
ANR	982730	AssignmentExpression	got_verstring = true		982532	0		=			
ANR	982731	Identifier	got_verstring		982532	0					
ANR	982732	Identifier	true		982532	1					
ANR	982733	ExpressionStatement	ver [ i ] = '\\0'	273:5:6801:6814	982532	1	True				
ANR	982734	AssignmentExpression	ver [ i ] = '\\0'		982532	0		=			
ANR	982735	ArrayIndexing	ver [ i ]		982532	0					
ANR	982736	Identifier	ver		982532	0					
ANR	982737	Identifier	i		982532	1					
ANR	982738	PrimaryExpression	'\\0'		982532	1					
ANR	982739	BreakStatement	break ;	274:5:6821:6826	982532	2	True				
ANR	982740	Condition	( i < maxlen ) && ( ( ch = fgetc ( fp ) ) != EOF )	276:13:6847:6885	982532	1	True				
ANR	982741	AndExpression	( i < maxlen ) && ( ( ch = fgetc ( fp ) ) != EOF )		982532	0		&&			
ANR	982742	RelationalExpression	i < maxlen		982532	0		<			
ANR	982743	Identifier	i		982532	0					
ANR	982744	Identifier	maxlen		982532	1					
ANR	982745	EqualityExpression	( ch = fgetc ( fp ) ) != EOF		982532	1		!=			
ANR	982746	AssignmentExpression	ch = fgetc ( fp )		982532	0		=			
ANR	982747	Identifier	ch		982532	0					
ANR	982748	CallExpression	fgetc ( fp )		982532	1					
ANR	982749	Callee	fgetc		982532	0					
ANR	982750	Identifier	fgetc		982532	0					
ANR	982751	ArgumentList	fp		982532	1					
ANR	982752	Argument	fp		982532	0					
ANR	982753	Identifier	fp		982532	0					
ANR	982754	Identifier	EOF		982532	1					
ANR	982755	BreakStatement	break ;	277:3:6893:6898	982532	1	True				
ANR	982756	IfStatement	if ( ch != verprefix [ i ] )		982532	1					
ANR	982757	Condition	ch != verprefix [ i ]	280:7:6912:6929	982532	0	True				
ANR	982758	EqualityExpression	ch != verprefix [ i ]		982532	0		!=			
ANR	982759	Identifier	ch		982532	0					
ANR	982760	ArrayIndexing	verprefix [ i ]		982532	1					
ANR	982761	Identifier	verprefix		982532	0					
ANR	982762	Identifier	i		982532	1					
ANR	982763	CompoundStatement		66:28:1497:1497	982532	1					
ANR	982764	ExpressionStatement	i = 0	281:3:6938:6943	982532	0	True				
ANR	982765	AssignmentExpression	i = 0		982532	0		=			
ANR	982766	Identifier	i		982532	0					
ANR	982767	PrimaryExpression	0		982532	1					
ANR	982768	IfStatement	if ( ch != verprefix [ 0 ] )		982532	1					
ANR	982769	Condition	ch != verprefix [ 0 ]	282:8:6953:6970	982532	0	True				
ANR	982770	EqualityExpression	ch != verprefix [ 0 ]		982532	0		!=			
ANR	982771	Identifier	ch		982532	0					
ANR	982772	ArrayIndexing	verprefix [ 0 ]		982532	1					
ANR	982773	Identifier	verprefix		982532	0					
ANR	982774	PrimaryExpression	0		982532	1					
ANR	982775	CompoundStatement		68:29:1538:1538	982532	1					
ANR	982776	ContinueStatement	continue ;	283:4:6980:6988	982532	0	True				
ANR	982777	ExpressionStatement	ver [ i ++ ] = ch	287:2:7002:7015	982532	2	True				
ANR	982778	AssignmentExpression	ver [ i ++ ] = ch		982532	0		=			
ANR	982779	ArrayIndexing	ver [ i ++ ]		982532	0					
ANR	982780	Identifier	ver		982532	0					
ANR	982781	PostIncDecOperationExpression	i ++		982532	1					
ANR	982782	Identifier	i		982532	0					
ANR	982783	IncDec	++		982532	1					
ANR	982784	Identifier	ch		982532	1					
ANR	982785	ExpressionStatement	fclose ( fp )	290:1:7022:7032	982532	15	True				
ANR	982786	CallExpression	fclose ( fp )		982532	0					
ANR	982787	Callee	fclose		982532	0					
ANR	982788	Identifier	fclose		982532	0					
ANR	982789	ArgumentList	fp		982532	1					
ANR	982790	Argument	fp		982532	0					
ANR	982791	Identifier	fp		982532	0					
ANR	982792	IfStatement	if ( got_verstring )		982532	16					
ANR	982793	Condition	got_verstring	292:6:7041:7053	982532	0	True				
ANR	982794	Identifier	got_verstring		982532	0					
ANR	982795	CompoundStatement		78:22:1621:1621	982532	1					
ANR	982796	ReturnStatement	return ver ;	293:2:7061:7071	982532	0	True				
ANR	982797	Identifier	ver		982532	0					
ANR	982798	ElseStatement	else		982532	0					
ANR	982799	CompoundStatement		80:8:1645:1645	982532	0					
ANR	982800	IfStatement	if ( must_free )		982532	0					
ANR	982801	Condition	must_free	296:7:7113:7121	982532	0	True				
ANR	982802	Identifier	must_free		982532	0					
ANR	982803	CompoundStatement		82:19:1689:1689	982532	1					
ANR	982804	ExpressionStatement	free ( ver )	297:3:7130:7141	982532	0	True				
ANR	982805	CallExpression	free ( ver )		982532	0					
ANR	982806	Callee	free		982532	0					
ANR	982807	Identifier	free		982532	0					
ANR	982808	ArgumentList	ver		982532	1					
ANR	982809	Argument	ver		982532	0					
ANR	982810	Identifier	ver		982532	0					
ANR	982811	ReturnStatement	return NULL ;	299:2:7149:7160	982532	1	True				
ANR	982812	Identifier	NULL		982532	0					
ANR	982813	ReturnType	char *		982532	1					
ANR	982814	Identifier	CondorVersionInfo :: get_version_from_file		982532	2					
ANR	982815	ParameterList	"const char * filename , char * ver , int maxlen"		982532	3					
ANR	982816	Parameter	const char * filename	213:41:5378:5397	982532	0	True				
ANR	982817	ParameterType	const char *		982532	0					
ANR	982818	Identifier	filename		982532	1					
ANR	982819	Parameter	char * ver	214:11:5412:5420	982532	1	True				
ANR	982820	ParameterType	char *		982532	0					
ANR	982821	Identifier	ver		982532	1					
ANR	982822	Parameter	int maxlen	214:22:5423:5432	982532	2	True				
ANR	982823	ParameterType	int		982532	0					
ANR	982824	Identifier	maxlen		982532	1					
ANR	982825	CFGEntryNode	ENTRY		982532		True				
ANR	982826	CFGExitNode	EXIT		982532		True				
ANR	982827	Symbol	malloc		982532						
ANR	982828	Symbol	ver		982532						
ANR	982829	Symbol	NULL		982532						
ANR	982830	Symbol	ch		982532						
ANR	982831	Symbol	alternate_exec_pathname		982532						
ANR	982832	Symbol	false		982532						
ANR	982833	Symbol	altname		982532						
ANR	982834	Symbol	i		982532						
ANR	982835	Symbol	verprefix		982532						
ANR	982836	Symbol	fp		982532						
ANR	982837	Symbol	* ver		982532						
ANR	982838	Symbol	* verprefix		982532						
ANR	982839	Symbol	filename		982532						
ANR	982840	Symbol	* i		982532						
ANR	982841	Symbol	must_free		982532						
ANR	982842	Symbol	readonly		982532						
ANR	982843	Symbol	true		982532						
ANR	982844	Symbol	got_verstring		982532						
ANR	982845	Symbol	safe_fopen_wrapper_follow		982532						
ANR	982846	Symbol	EOF		982532						
ANR	982847	Symbol	maxlen		982532						
ANR	982848	Symbol	fgetc		982532						
ANR	982849	Function	CondorVersionInfo :: get_platform_from_file	303:0:7168:8676							
ANR	982850	FunctionDef	"CondorVersionInfo :: get_platform_from_file (const char * filename , char * platform , int maxlen)"		982849	0					
ANR	982851	CompoundStatement		306:0:7279:8676	982849	0					
ANR	982852	IdentifierDeclStatement	bool must_free = false ;	307:1:7282:7304	982849	0	True				
ANR	982853	IdentifierDecl	must_free = false		982849	0					
ANR	982854	IdentifierDeclType	bool		982849	0					
ANR	982855	Identifier	must_free		982849	1					
ANR	982856	AssignmentExpression	must_free = false		982849	2		=			
ANR	982857	Identifier	false		982849	0					
ANR	982858	Identifier	false		982849	1					
ANR	982859	IfStatement	if ( ! filename )		982849	1					
ANR	982860	Condition	! filename	309:5:7312:7320	982849	0	True				
ANR	982861	UnaryOperationExpression	! filename		982849	0					
ANR	982862	UnaryOperator	!		982849	0					
ANR	982863	Identifier	filename		982849	1					
ANR	982864	ReturnStatement	return NULL ;	310:2:7325:7336	982849	1	True				
ANR	982865	Identifier	NULL		982849	0					
ANR	982866	IfStatement	if ( platform && maxlen < 40 )		982849	2					
ANR	982867	Condition	platform && maxlen < 40	312:5:7345:7367	982849	0	True				
ANR	982868	AndExpression	platform && maxlen < 40		982849	0		&&			
ANR	982869	Identifier	platform		982849	0					
ANR	982870	RelationalExpression	maxlen < 40		982849	1		<			
ANR	982871	Identifier	maxlen		982849	0					
ANR	982872	PrimaryExpression	40		982849	1					
ANR	982873	ReturnStatement	return NULL ;	313:2:7373:7384	982849	1	True				
ANR	982874	Identifier	NULL		982849	0					
ANR	982875	ExpressionStatement	maxlen --	315:1:7388:7396	982849	3	True				
ANR	982876	PostIncDecOperationExpression	maxlen --		982849	0					
ANR	982877	Identifier	maxlen		982849	0					
ANR	982878	IncDec	--		982849	1					
ANR	982879	Statement	static	318:1:7460:7465	982849	4	True				
ANR	982880	IdentifierDeclStatement	"const char * readonly = ""rb"" ;"	318:8:7467:7494	982849	5	True				
ANR	982881	IdentifierDecl	"* readonly = ""rb"""		982849	0					
ANR	982882	IdentifierDeclType	const char *		982849	0					
ANR	982883	Identifier	readonly		982849	1					
ANR	982884	AssignmentExpression	"* readonly = ""rb"""		982849	2		=			
ANR	982885	Identifier	readonly		982849	0					
ANR	982886	PrimaryExpression	"""rb"""		982849	1					
ANR	982887	IdentifierDeclStatement	"FILE * fp = safe_fopen_wrapper_follow ( filename , readonly ) ;"	323:1:7573:7628	982849	6	True				
ANR	982888	IdentifierDecl	"* fp = safe_fopen_wrapper_follow ( filename , readonly )"		982849	0					
ANR	982889	IdentifierDeclType	FILE *		982849	0					
ANR	982890	Identifier	fp		982849	1					
ANR	982891	AssignmentExpression	"* fp = safe_fopen_wrapper_follow ( filename , readonly )"		982849	2		=			
ANR	982892	Identifier	fp		982849	0					
ANR	982893	CallExpression	"safe_fopen_wrapper_follow ( filename , readonly )"		982849	1					
ANR	982894	Callee	safe_fopen_wrapper_follow		982849	0					
ANR	982895	Identifier	safe_fopen_wrapper_follow		982849	0					
ANR	982896	ArgumentList	filename		982849	1					
ANR	982897	Argument	filename		982849	0					
ANR	982898	Identifier	filename		982849	0					
ANR	982899	Argument	readonly		982849	1					
ANR	982900	Identifier	readonly		982849	0					
ANR	982901	IfStatement	if ( ! fp )		982849	7					
ANR	982902	Condition	! fp	325:5:7636:7638	982849	0	True				
ANR	982903	UnaryOperationExpression	! fp		982849	0					
ANR	982904	UnaryOperator	!		982849	0					
ANR	982905	Identifier	fp		982849	1					
ANR	982906	CompoundStatement		22:2:414:465	982849	1					
ANR	982907	IdentifierDeclStatement	char * altname = alternate_exec_pathname ( filename ) ;	327:2:7694:7745	982849	0	True				
ANR	982908	IdentifierDecl	* altname = alternate_exec_pathname ( filename )		982849	0					
ANR	982909	IdentifierDeclType	char *		982849	0					
ANR	982910	Identifier	altname		982849	1					
ANR	982911	AssignmentExpression	* altname = alternate_exec_pathname ( filename )		982849	2		=			
ANR	982912	Identifier	altname		982849	0					
ANR	982913	CallExpression	alternate_exec_pathname ( filename )		982849	1					
ANR	982914	Callee	alternate_exec_pathname		982849	0					
ANR	982915	Identifier	alternate_exec_pathname		982849	0					
ANR	982916	ArgumentList	filename		982849	1					
ANR	982917	Argument	filename		982849	0					
ANR	982918	Identifier	filename		982849	0					
ANR	982919	IfStatement	if ( altname )		982849	1					
ANR	982920	Condition	altname	328:7:7754:7760	982849	0	True				
ANR	982921	Identifier	altname		982849	0					
ANR	982922	CompoundStatement		23:17:484:484	982849	1					
ANR	982923	ExpressionStatement	"fp = safe_fopen_wrapper_follow ( altname , readonly )"	329:3:7769:7817	982849	0	True				
ANR	982924	AssignmentExpression	"fp = safe_fopen_wrapper_follow ( altname , readonly )"		982849	0		=			
ANR	982925	Identifier	fp		982849	0					
ANR	982926	CallExpression	"safe_fopen_wrapper_follow ( altname , readonly )"		982849	1					
ANR	982927	Callee	safe_fopen_wrapper_follow		982849	0					
ANR	982928	Identifier	safe_fopen_wrapper_follow		982849	0					
ANR	982929	ArgumentList	altname		982849	1					
ANR	982930	Argument	altname		982849	0					
ANR	982931	Identifier	altname		982849	0					
ANR	982932	Argument	readonly		982849	1					
ANR	982933	Identifier	readonly		982849	0					
ANR	982934	ExpressionStatement	free ( altname )	330:3:7822:7835	982849	1	True				
ANR	982935	CallExpression	free ( altname )		982849	0					
ANR	982936	Callee	free		982849	0					
ANR	982937	Identifier	free		982849	0					
ANR	982938	ArgumentList	altname		982849	1					
ANR	982939	Argument	altname		982849	0					
ANR	982940	Identifier	altname		982849	0					
ANR	982941	IfStatement	if ( ! fp )		982849	8					
ANR	982942	Condition	! fp	334:6:7851:7853	982849	0	True				
ANR	982943	UnaryOperationExpression	! fp		982849	0					
ANR	982944	UnaryOperator	!		982849	0					
ANR	982945	Identifier	fp		982849	1					
ANR	982946	CompoundStatement		29:12:577:577	982849	1					
ANR	982947	ReturnStatement	return NULL ;	336:2:7881:7892	982849	0	True				
ANR	982948	Identifier	NULL		982849	0					
ANR	982949	IfStatement	if ( ! platform )		982849	9					
ANR	982950	Condition	! platform	339:5:7905:7913	982849	0	True				
ANR	982951	UnaryOperationExpression	! platform		982849	0					
ANR	982952	UnaryOperator	!		982849	0					
ANR	982953	Identifier	platform		982849	1					
ANR	982954	CompoundStatement		34:16:636:636	982849	1					
ANR	982955	IfStatement	if ( ! ( platform = ( char * ) malloc ( 100 ) ) )		982849	0					
ANR	982956	Condition	! ( platform = ( char * ) malloc ( 100 ) )	340:7:7925:7957	982849	0	True				
ANR	982957	UnaryOperationExpression	! ( platform = ( char * ) malloc ( 100 ) )		982849	0					
ANR	982958	UnaryOperator	!		982849	0					
ANR	982959	AssignmentExpression	platform = ( char * ) malloc ( 100 )		982849	1		=			
ANR	982960	Identifier	platform		982849	0					
ANR	982961	CastExpression	( char * ) malloc ( 100 )		982849	1					
ANR	982962	CastTarget	char *		982849	0					
ANR	982963	CallExpression	malloc ( 100 )		982849	1					
ANR	982964	Callee	malloc		982849	0					
ANR	982965	Identifier	malloc		982849	0					
ANR	982966	ArgumentList	100		982849	1					
ANR	982967	Argument	100		982849	0					
ANR	982968	PrimaryExpression	100		982849	0					
ANR	982969	CompoundStatement		35:43:681:681	982849	1					
ANR	982970	ExpressionStatement	fclose ( fp )	342:3:7986:7996	982849	0	True				
ANR	982971	CallExpression	fclose ( fp )		982849	0					
ANR	982972	Callee	fclose		982849	0					
ANR	982973	Identifier	fclose		982849	0					
ANR	982974	ArgumentList	fp		982849	1					
ANR	982975	Argument	fp		982849	0					
ANR	982976	Identifier	fp		982849	0					
ANR	982977	ReturnStatement	return NULL ;	343:3:8001:8012	982849	1	True				
ANR	982978	Identifier	NULL		982849	0					
ANR	982979	ExpressionStatement	must_free = true	345:2:8020:8036	982849	1	True				
ANR	982980	AssignmentExpression	must_free = true		982849	0		=			
ANR	982981	Identifier	must_free		982849	0					
ANR	982982	Identifier	true		982849	1					
ANR	982983	ExpressionStatement	maxlen = 100	346:2:8040:8052	982849	2	True				
ANR	982984	AssignmentExpression	maxlen = 100		982849	0		=			
ANR	982985	Identifier	maxlen		982849	0					
ANR	982986	PrimaryExpression	100		982849	1					
ANR	982987	IdentifierDeclStatement	int i = 0 ;	349:1:8059:8068	982849	10	True				
ANR	982988	IdentifierDecl	i = 0		982849	0					
ANR	982989	IdentifierDeclType	int		982849	0					
ANR	982990	Identifier	i		982849	1					
ANR	982991	AssignmentExpression	i = 0		982849	2		=			
ANR	982992	Identifier	i		982849	0					
ANR	982993	PrimaryExpression	0		982849	1					
ANR	982994	IdentifierDeclStatement	bool got_verstring = false ;	350:1:8071:8097	982849	11	True				
ANR	982995	IdentifierDecl	got_verstring = false		982849	0					
ANR	982996	IdentifierDeclType	bool		982849	0					
ANR	982997	Identifier	got_verstring		982849	1					
ANR	982998	AssignmentExpression	got_verstring = false		982849	2		=			
ANR	982999	Identifier	false		982849	0					
ANR	983000	Identifier	false		982849	1					
ANR	983001	IdentifierDeclStatement	const char * platprefix = CondorPlatform ( ) ;	351:1:8100:8141	982849	12	True				
ANR	983002	IdentifierDecl	* platprefix = CondorPlatform ( )		982849	0					
ANR	983003	IdentifierDeclType	const char *		982849	0					
ANR	983004	Identifier	platprefix		982849	1					
ANR	983005	AssignmentExpression	* platprefix = CondorPlatform ( )		982849	2		=			
ANR	983006	Identifier	platprefix		982849	0					
ANR	983007	CallExpression	CondorPlatform ( )		982849	1					
ANR	983008	Callee	CondorPlatform		982849	0					
ANR	983009	Identifier	CondorPlatform		982849	0					
ANR	983010	ArgumentList			982849	1					
ANR	983011	IdentifierDeclStatement	int ch ;	352:1:8144:8150	982849	13	True				
ANR	983012	IdentifierDecl	ch		982849	0					
ANR	983013	IdentifierDeclType	int		982849	0					
ANR	983014	Identifier	ch		982849	1					
ANR	983015	WhileStatement	while ( ( ch = fgetc ( fp ) ) != EOF )		982849	14					
ANR	983016	Condition	( ch = fgetc ( fp ) ) != EOF	353:8:8160:8180	982849	0	True				
ANR	983017	EqualityExpression	( ch = fgetc ( fp ) ) != EOF		982849	0		!=			
ANR	983018	AssignmentExpression	ch = fgetc ( fp )		982849	0		=			
ANR	983019	Identifier	ch		982849	0					
ANR	983020	CallExpression	fgetc ( fp )		982849	1					
ANR	983021	Callee	fgetc		982849	0					
ANR	983022	Identifier	fgetc		982849	0					
ANR	983023	ArgumentList	fp		982849	1					
ANR	983024	Argument	fp		982849	0					
ANR	983025	Identifier	fp		982849	0					
ANR	983026	Identifier	EOF		982849	1					
ANR	983027	CompoundStatement		48:32:904:904	982849	1					
ANR	983028	IfStatement	if ( ch != platprefix [ i ] )		982849	0					
ANR	983029	Condition	ch != platprefix [ i ]	354:7:8193:8211	982849	0	True				
ANR	983030	EqualityExpression	ch != platprefix [ i ]		982849	0		!=			
ANR	983031	Identifier	ch		982849	0					
ANR	983032	ArrayIndexing	platprefix [ i ]		982849	1					
ANR	983033	Identifier	platprefix		982849	0					
ANR	983034	Identifier	i		982849	1					
ANR	983035	CompoundStatement		49:29:935:935	982849	1					
ANR	983036	ExpressionStatement	i = 0	355:3:8220:8225	982849	0	True				
ANR	983037	AssignmentExpression	i = 0		982849	0		=			
ANR	983038	Identifier	i		982849	0					
ANR	983039	PrimaryExpression	0		982849	1					
ANR	983040	IfStatement	if ( ch != platprefix [ 0 ] )		982849	1					
ANR	983041	Condition	ch != platprefix [ 0 ]	356:8:8235:8253	982849	0	True				
ANR	983042	EqualityExpression	ch != platprefix [ 0 ]		982849	0		!=			
ANR	983043	Identifier	ch		982849	0					
ANR	983044	ArrayIndexing	platprefix [ 0 ]		982849	1					
ANR	983045	Identifier	platprefix		982849	0					
ANR	983046	PrimaryExpression	0		982849	1					
ANR	983047	CompoundStatement		51:30:977:977	982849	1					
ANR	983048	ContinueStatement	continue ;	357:4:8263:8271	982849	0	True				
ANR	983049	ExpressionStatement	platform [ i ++ ] = ch	361:2:8285:8303	982849	1	True				
ANR	983050	AssignmentExpression	platform [ i ++ ] = ch		982849	0		=			
ANR	983051	ArrayIndexing	platform [ i ++ ]		982849	0					
ANR	983052	Identifier	platform		982849	0					
ANR	983053	PostIncDecOperationExpression	i ++		982849	1					
ANR	983054	Identifier	i		982849	0					
ANR	983055	IncDec	++		982849	1					
ANR	983056	Identifier	ch		982849	1					
ANR	983057	IfStatement	if ( ch == ':' )		982849	2					
ANR	983058	Condition	ch == ':'	363:7:8313:8321	982849	0	True				
ANR	983059	EqualityExpression	ch == ':'		982849	0		==			
ANR	983060	Identifier	ch		982849	0					
ANR	983061	PrimaryExpression	':'		982849	1					
ANR	983062	CompoundStatement		58:19:1045:1045	982849	1					
ANR	983063	WhileStatement	while ( ( i < maxlen ) && ( ( ch = fgetc ( fp ) ) != EOF ) )		982849	0					
ANR	983064	Condition	( i < maxlen ) && ( ( ch = fgetc ( fp ) ) != EOF )	364:11:8338:8376	982849	0	True				
ANR	983065	AndExpression	( i < maxlen ) && ( ( ch = fgetc ( fp ) ) != EOF )		982849	0		&&			
ANR	983066	RelationalExpression	i < maxlen		982849	0		<			
ANR	983067	Identifier	i		982849	0					
ANR	983068	Identifier	maxlen		982849	1					
ANR	983069	EqualityExpression	( ch = fgetc ( fp ) ) != EOF		982849	1		!=			
ANR	983070	AssignmentExpression	ch = fgetc ( fp )		982849	0		=			
ANR	983071	Identifier	ch		982849	0					
ANR	983072	CallExpression	fgetc ( fp )		982849	1					
ANR	983073	Callee	fgetc		982849	0					
ANR	983074	Identifier	fgetc		982849	0					
ANR	983075	ArgumentList	fp		982849	1					
ANR	983076	Argument	fp		982849	0					
ANR	983077	Identifier	fp		982849	0					
ANR	983078	Identifier	EOF		982849	1					
ANR	983079	CompoundStatement		59:53:1100:1100	982849	1					
ANR	983080	ExpressionStatement	platform [ i ++ ] = ch	365:4:8386:8404	982849	0	True				
ANR	983081	AssignmentExpression	platform [ i ++ ] = ch		982849	0		=			
ANR	983082	ArrayIndexing	platform [ i ++ ]		982849	0					
ANR	983083	Identifier	platform		982849	0					
ANR	983084	PostIncDecOperationExpression	i ++		982849	1					
ANR	983085	Identifier	i		982849	0					
ANR	983086	IncDec	++		982849	1					
ANR	983087	Identifier	ch		982849	1					
ANR	983088	IfStatement	if ( ch == '$' )		982849	1					
ANR	983089	Condition	ch == '$'	366:9:8415:8423	982849	0	True				
ANR	983090	EqualityExpression	ch == '$'		982849	0		==			
ANR	983091	Identifier	ch		982849	0					
ANR	983092	PrimaryExpression	'$'		982849	1					
ANR	983093	CompoundStatement		61:21:1147:1147	982849	1					
ANR	983094	ExpressionStatement	got_verstring = true	367:5:8434:8454	982849	0	True				
ANR	983095	AssignmentExpression	got_verstring = true		982849	0		=			
ANR	983096	Identifier	got_verstring		982849	0					
ANR	983097	Identifier	true		982849	1					
ANR	983098	ExpressionStatement	platform [ i ] = '\\0'	368:5:8461:8479	982849	1	True				
ANR	983099	AssignmentExpression	platform [ i ] = '\\0'		982849	0		=			
ANR	983100	ArrayIndexing	platform [ i ]		982849	0					
ANR	983101	Identifier	platform		982849	0					
ANR	983102	Identifier	i		982849	1					
ANR	983103	PrimaryExpression	'\\0'		982849	1					
ANR	983104	BreakStatement	break ;	369:5:8486:8491	982849	2	True				
ANR	983105	BreakStatement	break ;	372:3:8507:8512	982849	1	True				
ANR	983106	ExpressionStatement	fclose ( fp )	376:1:8523:8533	982849	15	True				
ANR	983107	CallExpression	fclose ( fp )		982849	0					
ANR	983108	Callee	fclose		982849	0					
ANR	983109	Identifier	fclose		982849	0					
ANR	983110	ArgumentList	fp		982849	1					
ANR	983111	Argument	fp		982849	0					
ANR	983112	Identifier	fp		982849	0					
ANR	983113	IfStatement	if ( got_verstring )		982849	16					
ANR	983114	Condition	got_verstring	378:6:8542:8554	982849	0	True				
ANR	983115	Identifier	got_verstring		982849	0					
ANR	983116	CompoundStatement		73:22:1278:1278	982849	1					
ANR	983117	ReturnStatement	return platform ;	379:2:8562:8577	982849	0	True				
ANR	983118	Identifier	platform		982849	0					
ANR	983119	ElseStatement	else		982849	0					
ANR	983120	CompoundStatement		75:8:1307:1307	982849	0					
ANR	983121	IfStatement	if ( must_free )		982849	0					
ANR	983122	Condition	must_free	382:7:8619:8627	982849	0	True				
ANR	983123	Identifier	must_free		982849	0					
ANR	983124	CompoundStatement		77:19:1351:1351	982849	1					
ANR	983125	ExpressionStatement	free ( platform )	383:3:8636:8652	982849	0	True				
ANR	983126	CallExpression	free ( platform )		982849	0					
ANR	983127	Callee	free		982849	0					
ANR	983128	Identifier	free		982849	0					
ANR	983129	ArgumentList	platform		982849	1					
ANR	983130	Argument	platform		982849	0					
ANR	983131	Identifier	platform		982849	0					
ANR	983132	ReturnStatement	return NULL ;	385:2:8660:8671	982849	1	True				
ANR	983133	Identifier	NULL		982849	0					
ANR	983134	ReturnType	char *		982849	1					
ANR	983135	Identifier	CondorVersionInfo :: get_platform_from_file		982849	2					
ANR	983136	ParameterList	"const char * filename , char * platform , int maxlen"		982849	3					
ANR	983137	Parameter	const char * filename	304:42:7217:7236	982849	0	True				
ANR	983138	ParameterType	const char *		982849	0					
ANR	983139	Identifier	filename		982849	1					
ANR	983140	Parameter	char * platform	305:11:7251:7264	982849	1	True				
ANR	983141	ParameterType	char *		982849	0					
ANR	983142	Identifier	platform		982849	1					
ANR	983143	Parameter	int maxlen	305:27:7267:7276	982849	2	True				
ANR	983144	ParameterType	int		982849	0					
ANR	983145	Identifier	maxlen		982849	1					
ANR	983146	CFGEntryNode	ENTRY		982849		True				
ANR	983147	CFGExitNode	EXIT		982849		True				
ANR	983148	Symbol	malloc		982849						
ANR	983149	Symbol	* platprefix		982849						
ANR	983150	Symbol	NULL		982849						
ANR	983151	Symbol	ch		982849						
ANR	983152	Symbol	alternate_exec_pathname		982849						
ANR	983153	Symbol	false		982849						
ANR	983154	Symbol	altname		982849						
ANR	983155	Symbol	i		982849						
ANR	983156	Symbol	fp		982849						
ANR	983157	Symbol	platform		982849						
ANR	983158	Symbol	filename		982849						
ANR	983159	Symbol	* i		982849						
ANR	983160	Symbol	must_free		982849						
ANR	983161	Symbol	readonly		982849						
ANR	983162	Symbol	CondorPlatform		982849						
ANR	983163	Symbol	true		982849						
ANR	983164	Symbol	platprefix		982849						
ANR	983165	Symbol	got_verstring		982849						
ANR	983166	Symbol	safe_fopen_wrapper_follow		982849						
ANR	983167	Symbol	EOF		982849						
ANR	983168	Symbol	maxlen		982849						
ANR	983169	Symbol	fgetc		982849						
ANR	983170	Symbol	* platform		982849						
ANR	983171	Function	CondorVersionInfo :: get_version_string	389:0:8679:8778							
ANR	983172	FunctionDef	CondorVersionInfo :: get_version_string ()		983171	0					
ANR	983173	CompoundStatement		391:0:8732:8778	983171	0					
ANR	983174	ReturnStatement	return VersionData_to_string ( myversion ) ;	392:1:8735:8776	983171	0	True				
ANR	983175	CallExpression	VersionData_to_string ( myversion )		983171	0					
ANR	983176	Callee	VersionData_to_string		983171	0					
ANR	983177	Identifier	VersionData_to_string		983171	0					
ANR	983178	ArgumentList	myversion		983171	1					
ANR	983179	Argument	myversion		983171	0					
ANR	983180	Identifier	myversion		983171	0					
ANR	983181	ReturnType	char *		983171	1					
ANR	983182	Identifier	CondorVersionInfo :: get_version_string		983171	2					
ANR	983183	ParameterList			983171	3					
ANR	983184	CFGEntryNode	ENTRY		983171		True				
ANR	983185	CFGExitNode	EXIT		983171		True				
ANR	983186	Symbol	myversion		983171						
ANR	983187	Symbol	VersionData_to_string		983171						
ANR	983188	Function	CondorVersionInfo :: VersionData_to_string	395:0:8781:9379							
ANR	983189	FunctionDef	CondorVersionInfo :: VersionData_to_string (VersionData_t const & ver)		983188	0					
ANR	983190	CompoundStatement		397:0:8861:9379	983188	0					
ANR	983191	IdentifierDeclStatement	struct tm * tm ;	398:1:8864:8877	983188	0	True				
ANR	983192	IdentifierDecl	* tm		983188	0					
ANR	983193	IdentifierDeclType	struct tm *		983188	0					
ANR	983194	Identifier	tm		983188	1					
ANR	983195	ExpressionStatement	tm = localtime ( & ver . BuildDate )	399:1:8880:8912	983188	1	True				
ANR	983196	AssignmentExpression	tm = localtime ( & ver . BuildDate )		983188	0		=			
ANR	983197	Identifier	tm		983188	0					
ANR	983198	CallExpression	localtime ( & ver . BuildDate )		983188	1					
ANR	983199	Callee	localtime		983188	0					
ANR	983200	Identifier	localtime		983188	0					
ANR	983201	ArgumentList	& ver . BuildDate		983188	1					
ANR	983202	Argument	& ver . BuildDate		983188	0					
ANR	983203	UnaryOperationExpression	& ver . BuildDate		983188	0					
ANR	983204	UnaryOperator	&		983188	0					
ANR	983205	MemberAccess	ver . BuildDate		983188	1					
ANR	983206	Identifier	ver		983188	0					
ANR	983207	Identifier	BuildDate		983188	1					
ANR	983208	IfStatement	if ( ! tm )		983188	2					
ANR	983209	Condition	! tm	400:5:8919:8921	983188	0	True				
ANR	983210	UnaryOperationExpression	! tm		983188	0					
ANR	983211	UnaryOperator	!		983188	0					
ANR	983212	Identifier	tm		983188	1					
ANR	983213	CompoundStatement		4:11:63:63	983188	1					
ANR	983214	ReturnStatement	return NULL ;	401:2:8929:8940	983188	0	True				
ANR	983215	Identifier	NULL		983188	0					
ANR	983216	IdentifierDeclStatement	int day = tm -> tm_mday ;	403:1:8946:8967	983188	3	True				
ANR	983217	IdentifierDecl	day = tm -> tm_mday		983188	0					
ANR	983218	IdentifierDeclType	int		983188	0					
ANR	983219	Identifier	day		983188	1					
ANR	983220	AssignmentExpression	day = tm -> tm_mday		983188	2		=			
ANR	983221	Identifier	day		983188	0					
ANR	983222	PtrMemberAccess	tm -> tm_mday		983188	1					
ANR	983223	Identifier	tm		983188	0					
ANR	983224	Identifier	tm_mday		983188	1					
ANR	983225	IdentifierDeclStatement	int year = tm -> tm_year + 1900 ;	404:1:8970:8999	983188	4	True				
ANR	983226	IdentifierDecl	year = tm -> tm_year + 1900		983188	0					
ANR	983227	IdentifierDeclType	int		983188	0					
ANR	983228	Identifier	year		983188	1					
ANR	983229	AssignmentExpression	year = tm -> tm_year + 1900		983188	2		=			
ANR	983230	Identifier	year		983188	0					
ANR	983231	AdditiveExpression	tm -> tm_year + 1900		983188	1		+			
ANR	983232	PtrMemberAccess	tm -> tm_year		983188	0					
ANR	983233	Identifier	tm		983188	0					
ANR	983234	Identifier	tm_year		983188	1					
ANR	983235	PrimaryExpression	1900		983188	1					
ANR	983236	IdentifierDeclStatement	char const * month = monthNames [ tm -> tm_mon ] ;	405:1:9002:9044	983188	5	True				
ANR	983237	IdentifierDecl	* month = monthNames [ tm -> tm_mon ]		983188	0					
ANR	983238	IdentifierDeclType	char const *		983188	0					
ANR	983239	Identifier	month		983188	1					
ANR	983240	AssignmentExpression	* month = monthNames [ tm -> tm_mon ]		983188	2		=			
ANR	983241	Identifier	month		983188	0					
ANR	983242	ArrayIndexing	monthNames [ tm -> tm_mon ]		983188	1					
ANR	983243	Identifier	monthNames		983188	0					
ANR	983244	PtrMemberAccess	tm -> tm_mon		983188	1					
ANR	983245	Identifier	tm		983188	0					
ANR	983246	Identifier	tm_mon		983188	1					
ANR	983247	IdentifierDeclStatement	const int buflen = 256 ;	407:1:9048:9070	983188	6	True				
ANR	983248	IdentifierDecl	buflen = 256		983188	0					
ANR	983249	IdentifierDeclType	const int		983188	0					
ANR	983250	Identifier	buflen		983188	1					
ANR	983251	AssignmentExpression	buflen = 256		983188	2		=			
ANR	983252	Identifier	buflen		983188	0					
ANR	983253	PrimaryExpression	256		983188	1					
ANR	983254	IdentifierDeclStatement	char * buf = ( char * ) malloc ( buflen ) ;	408:1:9073:9107	983188	7	True				
ANR	983255	IdentifierDecl	* buf = ( char * ) malloc ( buflen )		983188	0					
ANR	983256	IdentifierDeclType	char *		983188	0					
ANR	983257	Identifier	buf		983188	1					
ANR	983258	AssignmentExpression	* buf = ( char * ) malloc ( buflen )		983188	2		=			
ANR	983259	Identifier	buf		983188	0					
ANR	983260	CastExpression	( char * ) malloc ( buflen )		983188	1					
ANR	983261	CastTarget	char *		983188	0					
ANR	983262	CallExpression	malloc ( buflen )		983188	1					
ANR	983263	Callee	malloc		983188	0					
ANR	983264	Identifier	malloc		983188	0					
ANR	983265	ArgumentList	buflen		983188	1					
ANR	983266	Argument	buflen		983188	0					
ANR	983267	Identifier	buflen		983188	0					
ANR	983268	IfStatement	if ( ! buf )		983188	8					
ANR	983269	Condition	! buf	409:5:9114:9117	983188	0	True				
ANR	983270	UnaryOperationExpression	! buf		983188	0					
ANR	983271	UnaryOperator	!		983188	0					
ANR	983272	Identifier	buf		983188	1					
ANR	983273	CompoundStatement		13:12:259:259	983188	1					
ANR	983274	ReturnStatement	return NULL ;	410:2:9125:9136	983188	0	True				
ANR	983275	Identifier	NULL		983188	0					
ANR	983276	IdentifierDeclStatement	"int n = snprintf ( buf , buflen , ""$CondorVersion: %d.%d.%d %s %d %d $"" , ver . MajorVer , ver . MinorVer , ver . SubMinorVer , month , day , year ) ;"	413:1:9143:9284	983188	9	True				
ANR	983277	IdentifierDecl	"n = snprintf ( buf , buflen , ""$CondorVersion: %d.%d.%d %s %d %d $"" , ver . MajorVer , ver . MinorVer , ver . SubMinorVer , month , day , year )"		983188	0					
ANR	983278	IdentifierDeclType	int		983188	0					
ANR	983279	Identifier	n		983188	1					
ANR	983280	AssignmentExpression	"n = snprintf ( buf , buflen , ""$CondorVersion: %d.%d.%d %s %d %d $"" , ver . MajorVer , ver . MinorVer , ver . SubMinorVer , month , day , year )"		983188	2		=			
ANR	983281	Identifier	n		983188	0					
ANR	983282	CallExpression	"snprintf ( buf , buflen , ""$CondorVersion: %d.%d.%d %s %d %d $"" , ver . MajorVer , ver . MinorVer , ver . SubMinorVer , month , day , year )"		983188	1					
ANR	983283	Callee	snprintf		983188	0					
ANR	983284	Identifier	snprintf		983188	0					
ANR	983285	ArgumentList	buf		983188	1					
ANR	983286	Argument	buf		983188	0					
ANR	983287	Identifier	buf		983188	0					
ANR	983288	Argument	buflen		983188	1					
ANR	983289	Identifier	buflen		983188	0					
ANR	983290	Argument	"""$CondorVersion: %d.%d.%d %s %d %d $"""		983188	2					
ANR	983291	PrimaryExpression	"""$CondorVersion: %d.%d.%d %s %d %d $"""		983188	0					
ANR	983292	Argument	ver . MajorVer		983188	3					
ANR	983293	MemberAccess	ver . MajorVer		983188	0					
ANR	983294	Identifier	ver		983188	0					
ANR	983295	Identifier	MajorVer		983188	1					
ANR	983296	Argument	ver . MinorVer		983188	4					
ANR	983297	MemberAccess	ver . MinorVer		983188	0					
ANR	983298	Identifier	ver		983188	0					
ANR	983299	Identifier	MinorVer		983188	1					
ANR	983300	Argument	ver . SubMinorVer		983188	5					
ANR	983301	MemberAccess	ver . SubMinorVer		983188	0					
ANR	983302	Identifier	ver		983188	0					
ANR	983303	Identifier	SubMinorVer		983188	1					
ANR	983304	Argument	month		983188	6					
ANR	983305	Identifier	month		983188	0					
ANR	983306	Argument	day		983188	7					
ANR	983307	Identifier	day		983188	0					
ANR	983308	Argument	year		983188	8					
ANR	983309	Identifier	year		983188	0					
ANR	983310	IfStatement	if ( n >= buflen || n < 0 )		983188	10					
ANR	983311	Condition	n >= buflen || n < 0	416:5:9291:9306	983188	0	True				
ANR	983312	OrExpression	n >= buflen || n < 0		983188	0		||			
ANR	983313	RelationalExpression	n >= buflen		983188	0		>=			
ANR	983314	Identifier	n		983188	0					
ANR	983315	Identifier	buflen		983188	1					
ANR	983316	RelationalExpression	n < 0		983188	1		<			
ANR	983317	Identifier	n		983188	0					
ANR	983318	PrimaryExpression	0		983188	1					
ANR	983319	CompoundStatement		20:24:448:448	983188	1					
ANR	983320	ExpressionStatement	free ( buf )	417:2:9314:9323	983188	0	True				
ANR	983321	CallExpression	free ( buf )		983188	0					
ANR	983322	Callee	free		983188	0					
ANR	983323	Identifier	free		983188	0					
ANR	983324	ArgumentList	buf		983188	1					
ANR	983325	Argument	buf		983188	0					
ANR	983326	Identifier	buf		983188	0					
ANR	983327	ReturnStatement	return NULL ;	418:2:9327:9338	983188	1	True				
ANR	983328	Identifier	NULL		983188	0					
ANR	983329	ExpressionStatement	buf [ buflen - 1 ] = '\\0'	420:1:9344:9364	983188	11	True				
ANR	983330	AssignmentExpression	buf [ buflen - 1 ] = '\\0'		983188	0		=			
ANR	983331	ArrayIndexing	buf [ buflen - 1 ]		983188	0					
ANR	983332	Identifier	buf		983188	0					
ANR	983333	AdditiveExpression	buflen - 1		983188	1		-			
ANR	983334	Identifier	buflen		983188	0					
ANR	983335	PrimaryExpression	1		983188	1					
ANR	983336	PrimaryExpression	'\\0'		983188	1					
ANR	983337	ReturnStatement	return buf ;	421:1:9367:9377	983188	12	True				
ANR	983338	Identifier	buf		983188	0					
ANR	983339	ReturnType	char *		983188	1					
ANR	983340	Identifier	CondorVersionInfo :: VersionData_to_string		983188	2					
ANR	983341	ParameterList	VersionData_t const & ver		983188	3					
ANR	983342	Parameter	VersionData_t const & ver	396:41:8829:8852	983188	0	True				
ANR	983343	ParameterType	VersionData_t const &		983188	0					
ANR	983344	Identifier	ver		983188	1					
ANR	983345	CFGEntryNode	ENTRY		983188		True				
ANR	983346	CFGExitNode	EXIT		983188		True				
ANR	983347	Symbol	localtime		983188						
ANR	983348	Symbol	year		983188						
ANR	983349	Symbol	& ver		983188						
ANR	983350	Symbol	ver . MinorVer		983188						
ANR	983351	Symbol	ver . MajorVer		983188						
ANR	983352	Symbol	tm -> tm_mday		983188						
ANR	983353	Symbol	buflen		983188						
ANR	983354	Symbol	tm -> tm_year		983188						
ANR	983355	Symbol	day		983188						
ANR	983356	Symbol	monthNames		983188						
ANR	983357	Symbol	snprintf		983188						
ANR	983358	Symbol	& ver . BuildDate		983188						
ANR	983359	Symbol	ver . SubMinorVer		983188						
ANR	983360	Symbol	malloc		983188						
ANR	983361	Symbol	ver		983188						
ANR	983362	Symbol	* buf		983188						
ANR	983363	Symbol	NULL		983188						
ANR	983364	Symbol	* tm -> tm_mon		983188						
ANR	983365	Symbol	* * tm		983188						
ANR	983366	Symbol	* buflen		983188						
ANR	983367	Symbol	tm -> tm_mon		983188						
ANR	983368	Symbol	n		983188						
ANR	983369	Symbol	* monthNames		983188						
ANR	983370	Symbol	buf		983188						
ANR	983371	Symbol	month		983188						
ANR	983372	Symbol	tm		983188						
ANR	983373	Symbol	* tm		983188						
ANR	983374	Function	CondorVersionInfo :: string_to_VersionData	424:0:9382:11136							
ANR	983375	FunctionDef	"CondorVersionInfo :: string_to_VersionData (const char * verstring , VersionData_t & ver)"		983374	0					
ANR	983376	CompoundStatement		427:0:9490:11136	983374	0					
ANR	983377	IfStatement	if ( ! verstring )		983374	0					
ANR	983378	Condition	! verstring	430:6:9563:9572	983374	0	True				
ANR	983379	UnaryOperationExpression	! verstring		983374	0					
ANR	983380	UnaryOperator	!		983374	0					
ANR	983381	Identifier	verstring		983374	1					
ANR	983382	CompoundStatement		4:19:85:85	983374	1					
ANR	983383	ExpressionStatement	ver = myversion	432:2:9614:9629	983374	0	True				
ANR	983384	AssignmentExpression	ver = myversion		983374	0		=			
ANR	983385	Identifier	ver		983374	0					
ANR	983386	Identifier	myversion		983374	1					
ANR	983387	ReturnStatement	return true ;	433:2:9633:9644	983374	1	True				
ANR	983388	Identifier	true		983374	0					
ANR	983389	IfStatement	"if ( strncmp ( verstring , ""$CondorVersion: "" , 16 ) != 0 )"		983374	1					
ANR	983390	Condition	"strncmp ( verstring , ""$CondorVersion: "" , 16 ) != 0"	436:6:9656:9700	983374	0	True				
ANR	983391	EqualityExpression	"strncmp ( verstring , ""$CondorVersion: "" , 16 ) != 0"		983374	0		!=			
ANR	983392	CallExpression	"strncmp ( verstring , ""$CondorVersion: "" , 16 )"		983374	0					
ANR	983393	Callee	strncmp		983374	0					
ANR	983394	Identifier	strncmp		983374	0					
ANR	983395	ArgumentList	verstring		983374	1					
ANR	983396	Argument	verstring		983374	0					
ANR	983397	Identifier	verstring		983374	0					
ANR	983398	Argument	"""$CondorVersion: """		983374	1					
ANR	983399	PrimaryExpression	"""$CondorVersion: """		983374	0					
ANR	983400	Argument	16		983374	2					
ANR	983401	PrimaryExpression	16		983374	0					
ANR	983402	PrimaryExpression	0		983374	1					
ANR	983403	CompoundStatement		10:54:213:213	983374	1					
ANR	983404	ReturnStatement	return false ;	437:2:9708:9720	983374	0	True				
ANR	983405	Identifier	false		983374	0					
ANR	983406	IdentifierDeclStatement	"char const * ptr = strchr ( verstring , ' ' ) ;"	440:1:9727:9766	983374	2	True				
ANR	983407	IdentifierDecl	"* ptr = strchr ( verstring , ' ' )"		983374	0					
ANR	983408	IdentifierDeclType	char const *		983374	0					
ANR	983409	Identifier	ptr		983374	1					
ANR	983410	AssignmentExpression	"* ptr = strchr ( verstring , ' ' )"		983374	2		=			
ANR	983411	Identifier	ptr		983374	0					
ANR	983412	CallExpression	"strchr ( verstring , ' ' )"		983374	1					
ANR	983413	Callee	strchr		983374	0					
ANR	983414	Identifier	strchr		983374	0					
ANR	983415	ArgumentList	verstring		983374	1					
ANR	983416	Argument	verstring		983374	0					
ANR	983417	Identifier	verstring		983374	0					
ANR	983418	Argument	' '		983374	1					
ANR	983419	PrimaryExpression	' '		983374	0					
ANR	983420	ExpressionStatement	ptr ++	441:1:9769:9774	983374	3	True				
ANR	983421	PostIncDecOperationExpression	ptr ++		983374	0					
ANR	983422	Identifier	ptr		983374	0					
ANR	983423	IncDec	++		983374	1					
ANR	983424	ExpressionStatement	"sscanf ( ptr , ""%d.%d.%d "" , & ver . MajorVer , & ver . MinorVer , & ver . SubMinorVer )"	443:1:9809:9877	983374	4	True				
ANR	983425	CallExpression	"sscanf ( ptr , ""%d.%d.%d "" , & ver . MajorVer , & ver . MinorVer , & ver . SubMinorVer )"		983374	0					
ANR	983426	Callee	sscanf		983374	0					
ANR	983427	Identifier	sscanf		983374	0					
ANR	983428	ArgumentList	ptr		983374	1					
ANR	983429	Argument	ptr		983374	0					
ANR	983430	Identifier	ptr		983374	0					
ANR	983431	Argument	"""%d.%d.%d """		983374	1					
ANR	983432	PrimaryExpression	"""%d.%d.%d """		983374	0					
ANR	983433	Argument	& ver . MajorVer		983374	2					
ANR	983434	UnaryOperationExpression	& ver . MajorVer		983374	0					
ANR	983435	UnaryOperator	&		983374	0					
ANR	983436	MemberAccess	ver . MajorVer		983374	1					
ANR	983437	Identifier	ver		983374	0					
ANR	983438	Identifier	MajorVer		983374	1					
ANR	983439	Argument	& ver . MinorVer		983374	3					
ANR	983440	UnaryOperationExpression	& ver . MinorVer		983374	0					
ANR	983441	UnaryOperator	&		983374	0					
ANR	983442	MemberAccess	ver . MinorVer		983374	1					
ANR	983443	Identifier	ver		983374	0					
ANR	983444	Identifier	MinorVer		983374	1					
ANR	983445	Argument	& ver . SubMinorVer		983374	4					
ANR	983446	UnaryOperationExpression	& ver . SubMinorVer		983374	0					
ANR	983447	UnaryOperator	&		983374	0					
ANR	983448	MemberAccess	ver . SubMinorVer		983374	1					
ANR	983449	Identifier	ver		983374	0					
ANR	983450	Identifier	SubMinorVer		983374	1					
ANR	983451	IfStatement	if ( ver . MajorVer < 6 || ver . MinorVer > 99 || ver . SubMinorVer > 99 )		983374	5					
ANR	983452	Condition	ver . MajorVer < 6 || ver . MinorVer > 99 || ver . SubMinorVer > 99	446:5:9938:9999	983374	0	True				
ANR	983453	OrExpression	ver . MajorVer < 6 || ver . MinorVer > 99 || ver . SubMinorVer > 99		983374	0		||			
ANR	983454	RelationalExpression	ver . MajorVer < 6		983374	0		<			
ANR	983455	MemberAccess	ver . MajorVer		983374	0					
ANR	983456	Identifier	ver		983374	0					
ANR	983457	Identifier	MajorVer		983374	1					
ANR	983458	PrimaryExpression	6		983374	1					
ANR	983459	OrExpression	ver . MinorVer > 99 || ver . SubMinorVer > 99		983374	1		||			
ANR	983460	RelationalExpression	ver . MinorVer > 99		983374	0		>			
ANR	983461	MemberAccess	ver . MinorVer		983374	0					
ANR	983462	Identifier	ver		983374	0					
ANR	983463	Identifier	MinorVer		983374	1					
ANR	983464	PrimaryExpression	99		983374	1					
ANR	983465	RelationalExpression	ver . SubMinorVer > 99		983374	1		>			
ANR	983466	MemberAccess	ver . SubMinorVer		983374	0					
ANR	983467	Identifier	ver		983374	0					
ANR	983468	Identifier	SubMinorVer		983374	1					
ANR	983469	PrimaryExpression	99		983374	1					
ANR	983470	CompoundStatement		20:69:511:511	983374	1					
ANR	983471	ExpressionStatement	ver . MajorVer = 0	447:2:10006:10022	983374	0	True				
ANR	983472	AssignmentExpression	ver . MajorVer = 0		983374	0		=			
ANR	983473	MemberAccess	ver . MajorVer		983374	0					
ANR	983474	Identifier	ver		983374	0					
ANR	983475	Identifier	MajorVer		983374	1					
ANR	983476	PrimaryExpression	0		983374	1					
ANR	983477	ReturnStatement	return false ;	448:2:10026:10038	983374	1	True				
ANR	983478	Identifier	false		983374	0					
ANR	983479	ExpressionStatement	ver . Scalar = ver . MajorVer * 1000000 + ver . MinorVer * 1000 + ver . SubMinorVer	451:1:10045:10126	983374	6	True				
ANR	983480	AssignmentExpression	ver . Scalar = ver . MajorVer * 1000000 + ver . MinorVer * 1000 + ver . SubMinorVer		983374	0		=			
ANR	983481	MemberAccess	ver . Scalar		983374	0					
ANR	983482	Identifier	ver		983374	0					
ANR	983483	Identifier	Scalar		983374	1					
ANR	983484	AdditiveExpression	ver . MajorVer * 1000000 + ver . MinorVer * 1000 + ver . SubMinorVer		983374	1		+			
ANR	983485	MultiplicativeExpression	ver . MajorVer * 1000000		983374	0		*			
ANR	983486	MemberAccess	ver . MajorVer		983374	0					
ANR	983487	Identifier	ver		983374	0					
ANR	983488	Identifier	MajorVer		983374	1					
ANR	983489	PrimaryExpression	1000000		983374	1					
ANR	983490	AdditiveExpression	ver . MinorVer * 1000 + ver . SubMinorVer		983374	1		+			
ANR	983491	MultiplicativeExpression	ver . MinorVer * 1000		983374	0		*			
ANR	983492	MemberAccess	ver . MinorVer		983374	0					
ANR	983493	Identifier	ver		983374	0					
ANR	983494	Identifier	MinorVer		983374	1					
ANR	983495	PrimaryExpression	1000		983374	1					
ANR	983496	MemberAccess	ver . SubMinorVer		983374	1					
ANR	983497	Identifier	ver		983374	0					
ANR	983498	Identifier	SubMinorVer		983374	1					
ANR	983499	ExpressionStatement	"ptr = strchr ( ptr , ' ' )"	456:1:10222:10243	983374	7	True				
ANR	983500	AssignmentExpression	"ptr = strchr ( ptr , ' ' )"		983374	0		=			
ANR	983501	Identifier	ptr		983374	0					
ANR	983502	CallExpression	"strchr ( ptr , ' ' )"		983374	1					
ANR	983503	Callee	strchr		983374	0					
ANR	983504	Identifier	strchr		983374	0					
ANR	983505	ArgumentList	ptr		983374	1					
ANR	983506	Argument	ptr		983374	0					
ANR	983507	Identifier	ptr		983374	0					
ANR	983508	Argument	' '		983374	1					
ANR	983509	PrimaryExpression	' '		983374	0					
ANR	983510	IfStatement	if ( ! ptr )		983374	8					
ANR	983511	Condition	! ptr	457:6:10251:10254	983374	0	True				
ANR	983512	UnaryOperationExpression	! ptr		983374	0					
ANR	983513	UnaryOperator	!		983374	0					
ANR	983514	Identifier	ptr		983374	1					
ANR	983515	CompoundStatement		31:13:767:767	983374	1					
ANR	983516	ExpressionStatement	ver . MajorVer = 0	458:2:10262:10278	983374	0	True				
ANR	983517	AssignmentExpression	ver . MajorVer = 0		983374	0		=			
ANR	983518	MemberAccess	ver . MajorVer		983374	0					
ANR	983519	Identifier	ver		983374	0					
ANR	983520	Identifier	MajorVer		983374	1					
ANR	983521	PrimaryExpression	0		983374	1					
ANR	983522	ReturnStatement	return false ;	459:2:10282:10294	983374	1	True				
ANR	983523	Identifier	false		983374	0					
ANR	983524	ExpressionStatement	ptr ++	461:1:10300:10305	983374	9	True				
ANR	983525	PostIncDecOperationExpression	ptr ++		983374	0					
ANR	983526	Identifier	ptr		983374	0					
ANR	983527	IncDec	++		983374	1					
ANR	983528	IdentifierDeclStatement	int month = - 1 ;	464:1:10381:10395	983374	10	True				
ANR	983529	IdentifierDecl	month = - 1		983374	0					
ANR	983530	IdentifierDeclType	int		983374	0					
ANR	983531	Identifier	month		983374	1					
ANR	983532	AssignmentExpression	month = - 1		983374	2		=			
ANR	983533	Identifier	month		983374	0					
ANR	983534	UnaryOperationExpression	- 1		983374	1					
ANR	983535	UnaryOperator	-		983374	0					
ANR	983536	PrimaryExpression	1		983374	1					
ANR	983537	ForStatement	for ( int i = 0 ; i < 12 ; i ++ )		983374	11					
ANR	983538	ForInit	int i = 0 ;	465:6:10403:10410	983374	0	True				
ANR	983539	IdentifierDeclStatement	int i = 0 ;		983374	0					
ANR	983540	IdentifierDecl	i = 0		983374	0					
ANR	983541	IdentifierDeclType	int		983374	0					
ANR	983542	Identifier	i		983374	1					
ANR	983543	AssignmentExpression	i = 0		983374	2		=			
ANR	983544	Identifier	i		983374	0					
ANR	983545	PrimaryExpression	0		983374	1					
ANR	983546	Condition	i < 12	465:15:10412:10415	983374	1	True				
ANR	983547	RelationalExpression	i < 12		983374	0		<			
ANR	983548	Identifier	i		983374	0					
ANR	983549	PrimaryExpression	12		983374	1					
ANR	983550	PostIncDecOperationExpression	i ++	465:21:10418:10420	983374	2	True				
ANR	983551	Identifier	i		983374	0					
ANR	983552	IncDec	++		983374	1					
ANR	983553	CompoundStatement		39:26:932:932	983374	3					
ANR	983554	IfStatement	"if ( strncmp ( monthNames [ i ] , ptr , 3 ) == 0 )"		983374	0					
ANR	983555	Condition	"strncmp ( monthNames [ i ] , ptr , 3 ) == 0"	466:6:10431:10463	983374	0	True				
ANR	983556	EqualityExpression	"strncmp ( monthNames [ i ] , ptr , 3 ) == 0"		983374	0		==			
ANR	983557	CallExpression	"strncmp ( monthNames [ i ] , ptr , 3 )"		983374	0					
ANR	983558	Callee	strncmp		983374	0					
ANR	983559	Identifier	strncmp		983374	0					
ANR	983560	ArgumentList	monthNames [ i ]		983374	1					
ANR	983561	Argument	monthNames [ i ]		983374	0					
ANR	983562	ArrayIndexing	monthNames [ i ]		983374	0					
ANR	983563	Identifier	monthNames		983374	0					
ANR	983564	Identifier	i		983374	1					
ANR	983565	Argument	ptr		983374	1					
ANR	983566	Identifier	ptr		983374	0					
ANR	983567	Argument	3		983374	2					
ANR	983568	PrimaryExpression	3		983374	0					
ANR	983569	PrimaryExpression	0		983374	1					
ANR	983570	CompoundStatement		40:41:975:975	983374	1					
ANR	983571	ExpressionStatement	month = i	467:3:10471:10480	983374	0	True				
ANR	983572	AssignmentExpression	month = i		983374	0		=			
ANR	983573	Identifier	month		983374	0					
ANR	983574	Identifier	i		983374	1					
ANR	983575	BreakStatement	break ;	468:3:10485:10490	983374	1	True				
ANR	983576	ExpressionStatement	ptr += 4	472:1:10501:10508	983374	12	True				
ANR	983577	AssignmentExpression	ptr += 4		983374	0		+=			
ANR	983578	Identifier	ptr		983374	0					
ANR	983579	PrimaryExpression	4		983374	1					
ANR	983580	IdentifierDeclStatement	"int date , year ;"	475:1:10571:10585	983374	13	True				
ANR	983581	IdentifierDecl	date		983374	0					
ANR	983582	IdentifierDeclType	int		983374	0					
ANR	983583	Identifier	date		983374	1					
ANR	983584	IdentifierDecl	year		983374	1					
ANR	983585	IdentifierDeclType	int		983374	0					
ANR	983586	Identifier	year		983374	1					
ANR	983587	ExpressionStatement	date = year = - 1	476:1:10588:10604	983374	14	True				
ANR	983588	AssignmentExpression	date = year = - 1		983374	0		=			
ANR	983589	Identifier	date		983374	0					
ANR	983590	AssignmentExpression	year = - 1		983374	1		=			
ANR	983591	Identifier	year		983374	0					
ANR	983592	UnaryOperationExpression	- 1		983374	1					
ANR	983593	UnaryOperator	-		983374	0					
ANR	983594	PrimaryExpression	1		983374	1					
ANR	983595	ExpressionStatement	"sscanf ( ptr , ""%d %d"" , & date , & year )"	477:1:10607:10638	983374	15	True				
ANR	983596	CallExpression	"sscanf ( ptr , ""%d %d"" , & date , & year )"		983374	0					
ANR	983597	Callee	sscanf		983374	0					
ANR	983598	Identifier	sscanf		983374	0					
ANR	983599	ArgumentList	ptr		983374	1					
ANR	983600	Argument	ptr		983374	0					
ANR	983601	Identifier	ptr		983374	0					
ANR	983602	Argument	"""%d %d"""		983374	1					
ANR	983603	PrimaryExpression	"""%d %d"""		983374	0					
ANR	983604	Argument	& date		983374	2					
ANR	983605	UnaryOperationExpression	& date		983374	0					
ANR	983606	UnaryOperator	&		983374	0					
ANR	983607	Identifier	date		983374	1					
ANR	983608	Argument	& year		983374	3					
ANR	983609	UnaryOperationExpression	& year		983374	0					
ANR	983610	UnaryOperator	&		983374	0					
ANR	983611	Identifier	year		983374	1					
ANR	983612	IfStatement	if ( month < 0 || month > 11 || date < 0 || date > 31 || year < 1997 || year > 2036 )		983374	16					
ANR	983613	Condition	month < 0 || month > 11 || date < 0 || date > 31 || year < 1997 || year > 2036	480:6:10666:10746	983374	0	True				
ANR	983614	OrExpression	month < 0 || month > 11 || date < 0 || date > 31 || year < 1997 || year > 2036		983374	0		||			
ANR	983615	RelationalExpression	month < 0		983374	0		<			
ANR	983616	Identifier	month		983374	0					
ANR	983617	PrimaryExpression	0		983374	1					
ANR	983618	OrExpression	month > 11 || date < 0 || date > 31 || year < 1997 || year > 2036		983374	1		||			
ANR	983619	RelationalExpression	month > 11		983374	0		>			
ANR	983620	Identifier	month		983374	0					
ANR	983621	PrimaryExpression	11		983374	1					
ANR	983622	OrExpression	date < 0 || date > 31 || year < 1997 || year > 2036		983374	1		||			
ANR	983623	RelationalExpression	date < 0		983374	0		<			
ANR	983624	Identifier	date		983374	0					
ANR	983625	PrimaryExpression	0		983374	1					
ANR	983626	OrExpression	date > 31 || year < 1997 || year > 2036		983374	1		||			
ANR	983627	RelationalExpression	date > 31		983374	0		>			
ANR	983628	Identifier	date		983374	0					
ANR	983629	PrimaryExpression	31		983374	1					
ANR	983630	OrExpression	year < 1997 || year > 2036		983374	1		||			
ANR	983631	RelationalExpression	year < 1997		983374	0		<			
ANR	983632	Identifier	year		983374	0					
ANR	983633	PrimaryExpression	1997		983374	1					
ANR	983634	RelationalExpression	year > 2036		983374	1		>			
ANR	983635	Identifier	year		983374	0					
ANR	983636	PrimaryExpression	2036		983374	1					
ANR	983637	CompoundStatement		55:19:1259:1259	983374	1					
ANR	983638	ExpressionStatement	ver . MajorVer = 0	482:2:10754:10770	983374	0	True				
ANR	983639	AssignmentExpression	ver . MajorVer = 0		983374	0		=			
ANR	983640	MemberAccess	ver . MajorVer		983374	0					
ANR	983641	Identifier	ver		983374	0					
ANR	983642	Identifier	MajorVer		983374	1					
ANR	983643	PrimaryExpression	0		983374	1					
ANR	983644	ReturnStatement	return false ;	483:2:10774:10786	983374	1	True				
ANR	983645	Identifier	false		983374	0					
ANR	983646	IdentifierDeclStatement	struct tm build_date ;	487:1:10815:10835	983374	17	True				
ANR	983647	IdentifierDecl	build_date		983374	0					
ANR	983648	IdentifierDeclType	struct tm		983374	0					
ANR	983649	Identifier	build_date		983374	1					
ANR	983650	ExpressionStatement	build_date . tm_hour = 0	488:1:10838:10860	983374	18	True				
ANR	983651	AssignmentExpression	build_date . tm_hour = 0		983374	0		=			
ANR	983652	MemberAccess	build_date . tm_hour		983374	0					
ANR	983653	Identifier	build_date		983374	0					
ANR	983654	Identifier	tm_hour		983374	1					
ANR	983655	PrimaryExpression	0		983374	1					
ANR	983656	ExpressionStatement	build_date . tm_isdst = 1	489:1:10863:10886	983374	19	True				
ANR	983657	AssignmentExpression	build_date . tm_isdst = 1		983374	0		=			
ANR	983658	MemberAccess	build_date . tm_isdst		983374	0					
ANR	983659	Identifier	build_date		983374	0					
ANR	983660	Identifier	tm_isdst		983374	1					
ANR	983661	PrimaryExpression	1		983374	1					
ANR	983662	ExpressionStatement	build_date . tm_mday = date	490:1:10889:10914	983374	20	True				
ANR	983663	AssignmentExpression	build_date . tm_mday = date		983374	0		=			
ANR	983664	MemberAccess	build_date . tm_mday		983374	0					
ANR	983665	Identifier	build_date		983374	0					
ANR	983666	Identifier	tm_mday		983374	1					
ANR	983667	Identifier	date		983374	1					
ANR	983668	ExpressionStatement	build_date . tm_min = 0	491:1:10917:10938	983374	21	True				
ANR	983669	AssignmentExpression	build_date . tm_min = 0		983374	0		=			
ANR	983670	MemberAccess	build_date . tm_min		983374	0					
ANR	983671	Identifier	build_date		983374	0					
ANR	983672	Identifier	tm_min		983374	1					
ANR	983673	PrimaryExpression	0		983374	1					
ANR	983674	ExpressionStatement	build_date . tm_mon = month	492:1:10941:10966	983374	22	True				
ANR	983675	AssignmentExpression	build_date . tm_mon = month		983374	0		=			
ANR	983676	MemberAccess	build_date . tm_mon		983374	0					
ANR	983677	Identifier	build_date		983374	0					
ANR	983678	Identifier	tm_mon		983374	1					
ANR	983679	Identifier	month		983374	1					
ANR	983680	ExpressionStatement	build_date . tm_sec = 0	493:1:10969:10990	983374	23	True				
ANR	983681	AssignmentExpression	build_date . tm_sec = 0		983374	0		=			
ANR	983682	MemberAccess	build_date . tm_sec		983374	0					
ANR	983683	Identifier	build_date		983374	0					
ANR	983684	Identifier	tm_sec		983374	1					
ANR	983685	PrimaryExpression	0		983374	1					
ANR	983686	ExpressionStatement	build_date . tm_year = year - 1900	494:1:10993:11025	983374	24	True				
ANR	983687	AssignmentExpression	build_date . tm_year = year - 1900		983374	0		=			
ANR	983688	MemberAccess	build_date . tm_year		983374	0					
ANR	983689	Identifier	build_date		983374	0					
ANR	983690	Identifier	tm_year		983374	1					
ANR	983691	AdditiveExpression	year - 1900		983374	1		-			
ANR	983692	Identifier	year		983374	0					
ANR	983693	PrimaryExpression	1900		983374	1					
ANR	983694	IfStatement	if ( ( ver . BuildDate = mktime ( & build_date ) ) == - 1 )		983374	25					
ANR	983695	Condition	( ver . BuildDate = mktime ( & build_date ) ) == - 1	496:6:11034:11076	983374	0	True				
ANR	983696	EqualityExpression	( ver . BuildDate = mktime ( & build_date ) ) == - 1		983374	0		==			
ANR	983697	AssignmentExpression	ver . BuildDate = mktime ( & build_date )		983374	0		=			
ANR	983698	MemberAccess	ver . BuildDate		983374	0					
ANR	983699	Identifier	ver		983374	0					
ANR	983700	Identifier	BuildDate		983374	1					
ANR	983701	CallExpression	mktime ( & build_date )		983374	1					
ANR	983702	Callee	mktime		983374	0					
ANR	983703	Identifier	mktime		983374	0					
ANR	983704	ArgumentList	& build_date		983374	1					
ANR	983705	Argument	& build_date		983374	0					
ANR	983706	UnaryOperationExpression	& build_date		983374	0					
ANR	983707	UnaryOperator	&		983374	0					
ANR	983708	Identifier	build_date		983374	1					
ANR	983709	UnaryOperationExpression	- 1		983374	1					
ANR	983710	UnaryOperator	-		983374	0					
ANR	983711	PrimaryExpression	1		983374	1					
ANR	983712	CompoundStatement		70:52:1589:1589	983374	1					
ANR	983713	ExpressionStatement	ver . MajorVer = 0	497:2:11084:11100	983374	0	True				
ANR	983714	AssignmentExpression	ver . MajorVer = 0		983374	0		=			
ANR	983715	MemberAccess	ver . MajorVer		983374	0					
ANR	983716	Identifier	ver		983374	0					
ANR	983717	Identifier	MajorVer		983374	1					
ANR	983718	PrimaryExpression	0		983374	1					
ANR	983719	ReturnStatement	return false ;	498:2:11104:11116	983374	1	True				
ANR	983720	Identifier	false		983374	0					
ANR	983721	ReturnStatement	return true ;	501:1:11123:11134	983374	26	True				
ANR	983722	Identifier	true		983374	0					
ANR	983723	ReturnType	bool		983374	1					
ANR	983724	Identifier	CondorVersionInfo :: string_to_VersionData		983374	2					
ANR	983725	ParameterList	"const char * verstring , VersionData_t & ver"		983374	3					
ANR	983726	Parameter	const char * verstring	425:41:9428:9448	983374	0	True				
ANR	983727	ParameterType	const char *		983374	0					
ANR	983728	Identifier	verstring		983374	1					
ANR	983729	Parameter	VersionData_t & ver	426:11:9463:9481	983374	1	True				
ANR	983730	ParameterType	VersionData_t &		983374	0					
ANR	983731	Identifier	ver		983374	1					
ANR	983732	CFGEntryNode	ENTRY		983374		True				
ANR	983733	CFGExitNode	EXIT		983374		True				
ANR	983734	Symbol	date		983374						
ANR	983735	Symbol	ver . Scalar		983374						
ANR	983736	Symbol	year		983374						
ANR	983737	Symbol	verstring		983374						
ANR	983738	Symbol	strchr		983374						
ANR	983739	Symbol	build_date . tm_isdst		983374						
ANR	983740	Symbol	ver . BuildDate		983374						
ANR	983741	Symbol	& ver		983374						
ANR	983742	Symbol	& ver . MajorVer		983374						
ANR	983743	Symbol	ver . MinorVer		983374						
ANR	983744	Symbol	strncmp		983374						
ANR	983745	Symbol	ver . MajorVer		983374						
ANR	983746	Symbol	monthNames		983374						
ANR	983747	Symbol	ver . SubMinorVer		983374						
ANR	983748	Symbol	ver		983374						
ANR	983749	Symbol	& date		983374						
ANR	983750	Symbol	& ver . SubMinorVer		983374						
ANR	983751	Symbol	& year		983374						
ANR	983752	Symbol	false		983374						
ANR	983753	Symbol	i		983374						
ANR	983754	Symbol	myversion		983374						
ANR	983755	Symbol	build_date . tm_hour		983374						
ANR	983756	Symbol	ptr		983374						
ANR	983757	Symbol	* monthNames		983374						
ANR	983758	Symbol	build_date . tm_year		983374						
ANR	983759	Symbol	build_date		983374						
ANR	983760	Symbol	mktime		983374						
ANR	983761	Symbol	* i		983374						
ANR	983762	Symbol	month		983374						
ANR	983763	Symbol	& ver . MinorVer		983374						
ANR	983764	Symbol	true		983374						
ANR	983765	Symbol	build_date . tm_mon		983374						
ANR	983766	Symbol	build_date . tm_mday		983374						
ANR	983767	Symbol	& build_date		983374						
ANR	983768	Symbol	build_date . tm_sec		983374						
ANR	983769	Symbol	build_date . tm_min		983374						
ANR	983770	Function	CondorVersionInfo :: string_to_PlatformData	505:0:11147:11911							
ANR	983771	FunctionDef	"CondorVersionInfo :: string_to_PlatformData (const char * platformstring , VersionData_t & ver)"		983770	0					
ANR	983772	CompoundStatement		508:0:11262:11911	983770	0					
ANR	983773	IfStatement	if ( ! platformstring )		983770	0					
ANR	983774	Condition	! platformstring	511:6:11338:11352	983770	0	True				
ANR	983775	UnaryOperationExpression	! platformstring		983770	0					
ANR	983776	UnaryOperator	!		983770	0					
ANR	983777	Identifier	platformstring		983770	1					
ANR	983778	CompoundStatement		4:24:93:93	983770	1					
ANR	983779	ExpressionStatement	ver = myversion	513:2:11394:11409	983770	0	True				
ANR	983780	AssignmentExpression	ver = myversion		983770	0		=			
ANR	983781	Identifier	ver		983770	0					
ANR	983782	Identifier	myversion		983770	1					
ANR	983783	ReturnStatement	return true ;	514:2:11413:11424	983770	1	True				
ANR	983784	Identifier	true		983770	0					
ANR	983785	IfStatement	"if ( strncmp ( platformstring , ""$CondorPlatform: "" , 17 ) != 0 )"		983770	1					
ANR	983786	Condition	"strncmp ( platformstring , ""$CondorPlatform: "" , 17 ) != 0"	517:6:11436:11486	983770	0	True				
ANR	983787	EqualityExpression	"strncmp ( platformstring , ""$CondorPlatform: "" , 17 ) != 0"		983770	0		!=			
ANR	983788	CallExpression	"strncmp ( platformstring , ""$CondorPlatform: "" , 17 )"		983770	0					
ANR	983789	Callee	strncmp		983770	0					
ANR	983790	Identifier	strncmp		983770	0					
ANR	983791	ArgumentList	platformstring		983770	1					
ANR	983792	Argument	platformstring		983770	0					
ANR	983793	Identifier	platformstring		983770	0					
ANR	983794	Argument	"""$CondorPlatform: """		983770	1					
ANR	983795	PrimaryExpression	"""$CondorPlatform: """		983770	0					
ANR	983796	Argument	17		983770	2					
ANR	983797	PrimaryExpression	17		983770	0					
ANR	983798	PrimaryExpression	0		983770	1					
ANR	983799	CompoundStatement		10:60:227:227	983770	1					
ANR	983800	ReturnStatement	return false ;	518:2:11494:11506	983770	0	True				
ANR	983801	Identifier	false		983770	0					
ANR	983802	IdentifierDeclStatement	"char const * ptr = strchr ( platformstring , ' ' ) ;"	521:1:11513:11557	983770	2	True				
ANR	983803	IdentifierDecl	"* ptr = strchr ( platformstring , ' ' )"		983770	0					
ANR	983804	IdentifierDeclType	char const *		983770	0					
ANR	983805	Identifier	ptr		983770	1					
ANR	983806	AssignmentExpression	"* ptr = strchr ( platformstring , ' ' )"		983770	2		=			
ANR	983807	Identifier	ptr		983770	0					
ANR	983808	CallExpression	"strchr ( platformstring , ' ' )"		983770	1					
ANR	983809	Callee	strchr		983770	0					
ANR	983810	Identifier	strchr		983770	0					
ANR	983811	ArgumentList	platformstring		983770	1					
ANR	983812	Argument	platformstring		983770	0					
ANR	983813	Identifier	platformstring		983770	0					
ANR	983814	Argument	' '		983770	1					
ANR	983815	PrimaryExpression	' '		983770	0					
ANR	983816	ExpressionStatement	ptr ++	522:1:11560:11565	983770	3	True				
ANR	983817	PostIncDecOperationExpression	ptr ++		983770	0					
ANR	983818	Identifier	ptr		983770	0					
ANR	983819	IncDec	++		983770	1					
ANR	983820	IdentifierDeclStatement	"size_t len = strcspn ( ptr , ""-"" ) ;"	525:1:11601:11630	983770	4	True				
ANR	983821	IdentifierDecl	"len = strcspn ( ptr , ""-"" )"		983770	0					
ANR	983822	IdentifierDeclType	size_t		983770	0					
ANR	983823	Identifier	len		983770	1					
ANR	983824	AssignmentExpression	"len = strcspn ( ptr , ""-"" )"		983770	2		=			
ANR	983825	Identifier	len		983770	0					
ANR	983826	CallExpression	"strcspn ( ptr , ""-"" )"		983770	1					
ANR	983827	Callee	strcspn		983770	0					
ANR	983828	Identifier	strcspn		983770	0					
ANR	983829	ArgumentList	ptr		983770	1					
ANR	983830	Argument	ptr		983770	0					
ANR	983831	Identifier	ptr		983770	0					
ANR	983832	Argument	"""-"""		983770	1					
ANR	983833	PrimaryExpression	"""-"""		983770	0					
ANR	983834	IfStatement	if ( len )		983770	5					
ANR	983835	Condition	len	526:5:11637:11639	983770	0	True				
ANR	983836	Identifier	len		983770	0					
ANR	983837	CompoundStatement		19:11:380:380	983770	1					
ANR	983838	ExpressionStatement	ver . Arch = strdup ( ptr )	527:2:11647:11669	983770	0	True				
ANR	983839	AssignmentExpression	ver . Arch = strdup ( ptr )		983770	0		=			
ANR	983840	MemberAccess	ver . Arch		983770	0					
ANR	983841	Identifier	ver		983770	0					
ANR	983842	Identifier	Arch		983770	1					
ANR	983843	CallExpression	strdup ( ptr )		983770	1					
ANR	983844	Callee	strdup		983770	0					
ANR	983845	Identifier	strdup		983770	0					
ANR	983846	ArgumentList	ptr		983770	1					
ANR	983847	Argument	ptr		983770	0					
ANR	983848	Identifier	ptr		983770	0					
ANR	983849	ExpressionStatement	ASSERT ( ver . Arch )	528:2:11673:11689	983770	1	True				
ANR	983850	CallExpression	ASSERT ( ver . Arch )		983770	0					
ANR	983851	Callee	ASSERT		983770	0					
ANR	983852	Identifier	ASSERT		983770	0					
ANR	983853	ArgumentList	ver . Arch		983770	1					
ANR	983854	Argument	ver . Arch		983770	0					
ANR	983855	MemberAccess	ver . Arch		983770	0					
ANR	983856	Identifier	ver		983770	0					
ANR	983857	Identifier	Arch		983770	1					
ANR	983858	ExpressionStatement	ver . Arch [ len ] = '\\0'	529:2:11693:11713	983770	2	True				
ANR	983859	AssignmentExpression	ver . Arch [ len ] = '\\0'		983770	0		=			
ANR	983860	ArrayIndexing	ver . Arch [ len ]		983770	0					
ANR	983861	MemberAccess	ver . Arch		983770	0					
ANR	983862	Identifier	ver		983770	0					
ANR	983863	Identifier	Arch		983770	1					
ANR	983864	Identifier	len		983770	1					
ANR	983865	PrimaryExpression	'\\0'		983770	1					
ANR	983866	ExpressionStatement	ptr += len	530:2:11717:11727	983770	3	True				
ANR	983867	AssignmentExpression	ptr += len		983770	0		+=			
ANR	983868	Identifier	ptr		983770	0					
ANR	983869	Identifier	len		983770	1					
ANR	983870	IfStatement	if ( * ptr == '-' )		983770	6					
ANR	983871	Condition	* ptr == '-'	533:5:11738:11748	983770	0	True				
ANR	983872	EqualityExpression	* ptr == '-'		983770	0		==			
ANR	983873	UnaryOperationExpression	* ptr		983770	0					
ANR	983874	UnaryOperator	*		983770	0					
ANR	983875	Identifier	ptr		983770	1					
ANR	983876	PrimaryExpression	'-'		983770	1					
ANR	983877	CompoundStatement		26:19:489:489	983770	1					
ANR	983878	ExpressionStatement	ptr ++	534:2:11756:11761	983770	0	True				
ANR	983879	PostIncDecOperationExpression	ptr ++		983770	0					
ANR	983880	Identifier	ptr		983770	0					
ANR	983881	IncDec	++		983770	1					
ANR	983882	ExpressionStatement	"len = strcspn ( ptr , "" $"" )"	537:1:11768:11791	983770	7	True				
ANR	983883	AssignmentExpression	"len = strcspn ( ptr , "" $"" )"		983770	0		=			
ANR	983884	Identifier	len		983770	0					
ANR	983885	CallExpression	"strcspn ( ptr , "" $"" )"		983770	1					
ANR	983886	Callee	strcspn		983770	0					
ANR	983887	Identifier	strcspn		983770	0					
ANR	983888	ArgumentList	ptr		983770	1					
ANR	983889	Argument	ptr		983770	0					
ANR	983890	Identifier	ptr		983770	0					
ANR	983891	Argument	""" $"""		983770	1					
ANR	983892	PrimaryExpression	""" $"""		983770	0					
ANR	983893	IfStatement	if ( len )		983770	8					
ANR	983894	Condition	len	538:5:11798:11800	983770	0	True				
ANR	983895	Identifier	len		983770	0					
ANR	983896	CompoundStatement		31:11:541:541	983770	1					
ANR	983897	ExpressionStatement	ver . OpSys = strdup ( ptr )	539:2:11808:11831	983770	0	True				
ANR	983898	AssignmentExpression	ver . OpSys = strdup ( ptr )		983770	0		=			
ANR	983899	MemberAccess	ver . OpSys		983770	0					
ANR	983900	Identifier	ver		983770	0					
ANR	983901	Identifier	OpSys		983770	1					
ANR	983902	CallExpression	strdup ( ptr )		983770	1					
ANR	983903	Callee	strdup		983770	0					
ANR	983904	Identifier	strdup		983770	0					
ANR	983905	ArgumentList	ptr		983770	1					
ANR	983906	Argument	ptr		983770	0					
ANR	983907	Identifier	ptr		983770	0					
ANR	983908	ExpressionStatement	ASSERT ( ver . OpSys )	540:2:11835:11852	983770	1	True				
ANR	983909	CallExpression	ASSERT ( ver . OpSys )		983770	0					
ANR	983910	Callee	ASSERT		983770	0					
ANR	983911	Identifier	ASSERT		983770	0					
ANR	983912	ArgumentList	ver . OpSys		983770	1					
ANR	983913	Argument	ver . OpSys		983770	0					
ANR	983914	MemberAccess	ver . OpSys		983770	0					
ANR	983915	Identifier	ver		983770	0					
ANR	983916	Identifier	OpSys		983770	1					
ANR	983917	ExpressionStatement	ver . OpSys [ len ] = '\\0'	541:2:11856:11877	983770	2	True				
ANR	983918	AssignmentExpression	ver . OpSys [ len ] = '\\0'		983770	0		=			
ANR	983919	ArrayIndexing	ver . OpSys [ len ]		983770	0					
ANR	983920	MemberAccess	ver . OpSys		983770	0					
ANR	983921	Identifier	ver		983770	0					
ANR	983922	Identifier	OpSys		983770	1					
ANR	983923	Identifier	len		983770	1					
ANR	983924	PrimaryExpression	'\\0'		983770	1					
ANR	983925	ExpressionStatement	ptr += len	542:2:11881:11891	983770	3	True				
ANR	983926	AssignmentExpression	ptr += len		983770	0		+=			
ANR	983927	Identifier	ptr		983770	0					
ANR	983928	Identifier	len		983770	1					
ANR	983929	ReturnStatement	return true ;	545:1:11898:11909	983770	9	True				
ANR	983930	Identifier	true		983770	0					
ANR	983931	ReturnType	bool		983770	1					
ANR	983932	Identifier	CondorVersionInfo :: string_to_PlatformData		983770	2					
ANR	983933	ParameterList	"const char * platformstring , VersionData_t & ver"		983770	3					
ANR	983934	Parameter	const char * platformstring	506:42:11194:11219	983770	0	True				
ANR	983935	ParameterType	const char *		983770	0					
ANR	983936	Identifier	platformstring		983770	1					
ANR	983937	Parameter	VersionData_t & ver	507:12:11235:11253	983770	1	True				
ANR	983938	ParameterType	VersionData_t &		983770	0					
ANR	983939	Identifier	ver		983770	1					
ANR	983940	CFGEntryNode	ENTRY		983770		True				
ANR	983941	CFGExitNode	EXIT		983770		True				
ANR	983942	Symbol	ver		983770						
ANR	983943	Symbol	false		983770						
ANR	983944	Symbol	strchr		983770						
ANR	983945	Symbol	myversion		983770						
ANR	983946	Symbol	strcspn		983770						
ANR	983947	Symbol	ver . Arch		983770						
ANR	983948	Symbol	* ver		983770						
ANR	983949	Symbol	ptr		983770						
ANR	983950	Symbol	strncmp		983770						
ANR	983951	Symbol	len		983770						
ANR	983952	Symbol	platformstring		983770						
ANR	983953	Symbol	ver . OpSys		983770						
ANR	983954	Symbol	true		983770						
ANR	983955	Symbol	* ver . Arch		983770						
ANR	983956	Symbol	* ptr		983770						
ANR	983957	Symbol	* ver . OpSys		983770						
ANR	983958	Symbol	strdup		983770						
ANR	983959	Symbol	* len		983770						
