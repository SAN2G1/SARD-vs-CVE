command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4809973	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_log.cpp								
ANR	4809974	ClassDef	LogRecordHead	31:0:910:996							
ANR	4809975	Function	get_key	32:1:951:994							
ANR	4809976	FunctionDef	get_key ()		4809975	0					
ANR	4809977	CompoundStatement		32:31:981:994	4809975	0					
ANR	4809978	ReturnStatement	return NULL ;	32:0:982:993	4809975	0	True				
ANR	4809979	Identifier	NULL		4809975	0					
ANR	4809980	ReturnType	virtual char const *		4809975	1					
ANR	4809981	Identifier	get_key		4809975	2					
ANR	4809982	ParameterList			4809975	3					
ANR	4809983	CFGEntryNode	ENTRY		4809975		True				
ANR	4809984	CFGExitNode	EXIT		4809975		True				
ANR	4809985	Symbol	NULL		4809975						
ANR	4809986	Function	LogRecord :: LogRecord	35:0:1000:1039							
ANR	4809987	FunctionDef	LogRecord :: LogRecord ()		4809986	0					
ANR	4809988	CompoundStatement		36:0:1023:1039	4809986	0					
ANR	4809989	ExpressionStatement	op_type = 0	37:1:1026:1037	4809986	0	True				
ANR	4809990	AssignmentExpression	op_type = 0		4809986	0		=			
ANR	4809991	Identifier	op_type		4809986	0					
ANR	4809992	PrimaryExpression	0		4809986	1					
ANR	4809993	Identifier	LogRecord :: LogRecord		4809986	1					
ANR	4809994	ParameterList			4809986	2					
ANR	4809995	CFGEntryNode	ENTRY		4809986		True				
ANR	4809996	CFGExitNode	EXIT		4809986		True				
ANR	4809997	Symbol	op_type		4809986						
ANR	4809998	Function	LogRecord :: ~LogRecord	41:0:1043:1069							
ANR	4809999	FunctionDef	LogRecord :: ~LogRecord ()		4809998	0					
ANR	4810000	CompoundStatement		42:0:1067:1069	4809998	0					
ANR	4810001	Identifier	LogRecord :: ~LogRecord		4809998	1					
ANR	4810002	ParameterList			4809998	2					
ANR	4810003	CFGEntryNode	ENTRY		4809998		True				
ANR	4810004	CFGExitNode	EXIT		4809998		True				
ANR	4810005	Function	LogRecord :: readword	45:0:1072:1818							
ANR	4810006	FunctionDef	"LogRecord :: readword (FILE * fp , char * & str)"		4810005	0					
ANR	4810007	CompoundStatement		47:0:1119:1818	4810005	0					
ANR	4810008	IdentifierDeclStatement	"int i , bufsize = 1024 ;"	48:1:1122:1144	4810005	0	True				
ANR	4810009	IdentifierDecl	i		4810005	0					
ANR	4810010	IdentifierDeclType	int		4810005	0					
ANR	4810011	Identifier	i		4810005	1					
ANR	4810012	IdentifierDecl	bufsize = 1024		4810005	1					
ANR	4810013	IdentifierDeclType	int		4810005	0					
ANR	4810014	Identifier	bufsize		4810005	1					
ANR	4810015	AssignmentExpression	bufsize = 1024		4810005	2		=			
ANR	4810016	Identifier	bufsize		4810005	0					
ANR	4810017	PrimaryExpression	1024		4810005	1					
ANR	4810018	IdentifierDeclStatement	char * buf = ( char * ) malloc ( bufsize ) ;	49:1:1147:1182	4810005	1	True				
ANR	4810019	IdentifierDecl	* buf = ( char * ) malloc ( bufsize )		4810005	0					
ANR	4810020	IdentifierDeclType	char *		4810005	0					
ANR	4810021	Identifier	buf		4810005	1					
ANR	4810022	AssignmentExpression	* buf = ( char * ) malloc ( bufsize )		4810005	2		=			
ANR	4810023	Identifier	buf		4810005	0					
ANR	4810024	CastExpression	( char * ) malloc ( bufsize )		4810005	1					
ANR	4810025	CastTarget	char *		4810005	0					
ANR	4810026	CallExpression	malloc ( bufsize )		4810005	1					
ANR	4810027	Callee	malloc		4810005	0					
ANR	4810028	Identifier	malloc		4810005	0					
ANR	4810029	ArgumentList	bufsize		4810005	1					
ANR	4810030	Argument	bufsize		4810005	0					
ANR	4810031	Identifier	bufsize		4810005	0					
ANR	4810032	IdentifierDeclStatement	int ch ;	50:1:1185:1191	4810005	2	True				
ANR	4810033	IdentifierDecl	ch		4810005	0					
ANR	4810034	IdentifierDeclType	int		4810005	0					
ANR	4810035	Identifier	ch		4810005	1					
ANR	4810036	DoStatement	do		4810005	3					
ANR	4810037	CompoundStatement		7:4:131:131	4810005	0					
ANR	4810038	ExpressionStatement	ch = fgetc ( fp )	54:2:1255:1271	4810005	0	True				
ANR	4810039	AssignmentExpression	ch = fgetc ( fp )		4810005	0		=			
ANR	4810040	Identifier	ch		4810005	0					
ANR	4810041	CallExpression	fgetc ( fp )		4810005	1					
ANR	4810042	Callee	fgetc		4810005	0					
ANR	4810043	Identifier	fgetc		4810005	0					
ANR	4810044	ArgumentList	fp		4810005	1					
ANR	4810045	Argument	fp		4810005	0					
ANR	4810046	Identifier	fp		4810005	0					
ANR	4810047	IfStatement	if ( ch == EOF || ch == '\\0' )		4810005	1					
ANR	4810048	Condition	ch == EOF || ch == '\\0'	55:6:1279:1301	4810005	0	True				
ANR	4810049	OrExpression	ch == EOF || ch == '\\0'		4810005	0		||			
ANR	4810050	EqualityExpression	ch == EOF		4810005	0		==			
ANR	4810051	Identifier	ch		4810005	0					
ANR	4810052	Identifier	EOF		4810005	1					
ANR	4810053	EqualityExpression	ch == '\\0'		4810005	1		==			
ANR	4810054	Identifier	ch		4810005	0					
ANR	4810055	PrimaryExpression	'\\0'		4810005	1					
ANR	4810056	CompoundStatement		9:32:185:185	4810005	1					
ANR	4810057	ExpressionStatement	free ( buf )	56:3:1310:1321	4810005	0	True				
ANR	4810058	CallExpression	free ( buf )		4810005	0					
ANR	4810059	Callee	free		4810005	0					
ANR	4810060	Identifier	free		4810005	0					
ANR	4810061	ArgumentList	buf		4810005	1					
ANR	4810062	Argument	buf		4810005	0					
ANR	4810063	Identifier	buf		4810005	0					
ANR	4810064	ReturnStatement	return ( - 1 ) ;	57:3:1326:1338	4810005	1	True				
ANR	4810065	UnaryOperationExpression	- 1		4810005	0					
ANR	4810066	UnaryOperator	-		4810005	0					
ANR	4810067	PrimaryExpression	1		4810005	1					
ANR	4810068	ExpressionStatement	buf [ 0 ] = ch	59:2:1346:1357	4810005	2	True				
ANR	4810069	AssignmentExpression	buf [ 0 ] = ch		4810005	0		=			
ANR	4810070	ArrayIndexing	buf [ 0 ]		4810005	0					
ANR	4810071	Identifier	buf		4810005	0					
ANR	4810072	PrimaryExpression	0		4810005	1					
ANR	4810073	Identifier	ch		4810005	1					
ANR	4810074	Condition	isspace ( buf [ 0 ] ) && buf [ 0 ] != '\\n'	60:10:1369:1399	4810005	1	True				
ANR	4810075	AndExpression	isspace ( buf [ 0 ] ) && buf [ 0 ] != '\\n'		4810005	0		&&			
ANR	4810076	CallExpression	isspace ( buf [ 0 ] )		4810005	0					
ANR	4810077	Callee	isspace		4810005	0					
ANR	4810078	Identifier	isspace		4810005	0					
ANR	4810079	ArgumentList	buf [ 0 ]		4810005	1					
ANR	4810080	Argument	buf [ 0 ]		4810005	0					
ANR	4810081	ArrayIndexing	buf [ 0 ]		4810005	0					
ANR	4810082	Identifier	buf		4810005	0					
ANR	4810083	PrimaryExpression	0		4810005	1					
ANR	4810084	EqualityExpression	buf [ 0 ] != '\\n'		4810005	1		!=			
ANR	4810085	ArrayIndexing	buf [ 0 ]		4810005	0					
ANR	4810086	Identifier	buf		4810005	0					
ANR	4810087	PrimaryExpression	0		4810005	1					
ANR	4810088	PrimaryExpression	'\\n'		4810005	1					
ANR	4810089	ForStatement	for ( i = 1 ; ! isspace ( buf [ i - 1 ] ) ; i ++ )		4810005	4					
ANR	4810090	ForInit	i = 1 ;	63:6:1437:1442	4810005	0	True				
ANR	4810091	AssignmentExpression	i = 1		4810005	0		=			
ANR	4810092	Identifier	i		4810005	0					
ANR	4810093	PrimaryExpression	1		4810005	1					
ANR	4810094	Condition	! isspace ( buf [ i - 1 ] )	63:13:1444:1461	4810005	1	True				
ANR	4810095	UnaryOperationExpression	! isspace ( buf [ i - 1 ] )		4810005	0					
ANR	4810096	UnaryOperator	!		4810005	0					
ANR	4810097	CallExpression	isspace ( buf [ i - 1 ] )		4810005	1					
ANR	4810098	Callee	isspace		4810005	0					
ANR	4810099	Identifier	isspace		4810005	0					
ANR	4810100	ArgumentList	buf [ i - 1 ]		4810005	1					
ANR	4810101	Argument	buf [ i - 1 ]		4810005	0					
ANR	4810102	ArrayIndexing	buf [ i - 1 ]		4810005	0					
ANR	4810103	Identifier	buf		4810005	0					
ANR	4810104	AdditiveExpression	i - 1		4810005	1		-			
ANR	4810105	Identifier	i		4810005	0					
ANR	4810106	PrimaryExpression	1		4810005	1					
ANR	4810107	PostIncDecOperationExpression	i ++	63:33:1464:1466	4810005	2	True				
ANR	4810108	Identifier	i		4810005	0					
ANR	4810109	IncDec	++		4810005	1					
ANR	4810110	CompoundStatement		17:38:349:349	4810005	3					
ANR	4810111	IfStatement	if ( i == bufsize )		4810005	0					
ANR	4810112	Condition	i == bufsize	64:6:1477:1488	4810005	0	True				
ANR	4810113	EqualityExpression	i == bufsize		4810005	0		==			
ANR	4810114	Identifier	i		4810005	0					
ANR	4810115	Identifier	bufsize		4810005	1					
ANR	4810116	CompoundStatement		18:20:371:371	4810005	1					
ANR	4810117	ExpressionStatement	"buf = ( char * ) realloc ( buf , bufsize * 2 )"	65:3:1496:1533	4810005	0	True				
ANR	4810118	AssignmentExpression	"buf = ( char * ) realloc ( buf , bufsize * 2 )"		4810005	0		=			
ANR	4810119	Identifier	buf		4810005	0					
ANR	4810120	CastExpression	"( char * ) realloc ( buf , bufsize * 2 )"		4810005	1					
ANR	4810121	CastTarget	char *		4810005	0					
ANR	4810122	CallExpression	"realloc ( buf , bufsize * 2 )"		4810005	1					
ANR	4810123	Callee	realloc		4810005	0					
ANR	4810124	Identifier	realloc		4810005	0					
ANR	4810125	ArgumentList	buf		4810005	1					
ANR	4810126	Argument	buf		4810005	0					
ANR	4810127	Identifier	buf		4810005	0					
ANR	4810128	Argument	bufsize * 2		4810005	1					
ANR	4810129	MultiplicativeExpression	bufsize * 2		4810005	0		*			
ANR	4810130	Identifier	bufsize		4810005	0					
ANR	4810131	PrimaryExpression	2		4810005	1					
ANR	4810132	ExpressionStatement	bufsize *= 2	66:3:1538:1550	4810005	1	True				
ANR	4810133	AssignmentExpression	bufsize *= 2		4810005	0		*=			
ANR	4810134	Identifier	bufsize		4810005	0					
ANR	4810135	PrimaryExpression	2		4810005	1					
ANR	4810136	ExpressionStatement	ch = fgetc ( fp )	68:2:1559:1575	4810005	1	True				
ANR	4810137	AssignmentExpression	ch = fgetc ( fp )		4810005	0		=			
ANR	4810138	Identifier	ch		4810005	0					
ANR	4810139	CallExpression	fgetc ( fp )		4810005	1					
ANR	4810140	Callee	fgetc		4810005	0					
ANR	4810141	Identifier	fgetc		4810005	0					
ANR	4810142	ArgumentList	fp		4810005	1					
ANR	4810143	Argument	fp		4810005	0					
ANR	4810144	Identifier	fp		4810005	0					
ANR	4810145	IfStatement	if ( ch == EOF || ch == '\\0' )		4810005	2					
ANR	4810146	Condition	ch == EOF || ch == '\\0'	69:6:1583:1605	4810005	0	True				
ANR	4810147	OrExpression	ch == EOF || ch == '\\0'		4810005	0		||			
ANR	4810148	EqualityExpression	ch == EOF		4810005	0		==			
ANR	4810149	Identifier	ch		4810005	0					
ANR	4810150	Identifier	EOF		4810005	1					
ANR	4810151	EqualityExpression	ch == '\\0'		4810005	1		==			
ANR	4810152	Identifier	ch		4810005	0					
ANR	4810153	PrimaryExpression	'\\0'		4810005	1					
ANR	4810154	CompoundStatement		23:32:489:489	4810005	1					
ANR	4810155	ExpressionStatement	free ( buf )	70:3:1614:1625	4810005	0	True				
ANR	4810156	CallExpression	free ( buf )		4810005	0					
ANR	4810157	Callee	free		4810005	0					
ANR	4810158	Identifier	free		4810005	0					
ANR	4810159	ArgumentList	buf		4810005	1					
ANR	4810160	Argument	buf		4810005	0					
ANR	4810161	Identifier	buf		4810005	0					
ANR	4810162	ReturnStatement	return ( - 1 ) ;	71:3:1630:1642	4810005	1	True				
ANR	4810163	UnaryOperationExpression	- 1		4810005	0					
ANR	4810164	UnaryOperator	-		4810005	0					
ANR	4810165	PrimaryExpression	1		4810005	1					
ANR	4810166	ExpressionStatement	buf [ i ] = ch	73:2:1650:1661	4810005	3	True				
ANR	4810167	AssignmentExpression	buf [ i ] = ch		4810005	0		=			
ANR	4810168	ArrayIndexing	buf [ i ]		4810005	0					
ANR	4810169	Identifier	buf		4810005	0					
ANR	4810170	Identifier	i		4810005	1					
ANR	4810171	Identifier	ch		4810005	1					
ANR	4810172	IfStatement	if ( i == 1 )		4810005	5					
ANR	4810173	Condition	i == 1	77:5:1703:1706	4810005	0	True				
ANR	4810174	EqualityExpression	i == 1		4810005	0		==			
ANR	4810175	Identifier	i		4810005	0					
ANR	4810176	PrimaryExpression	1		4810005	1					
ANR	4810177	CompoundStatement		31:12:590:590	4810005	1					
ANR	4810178	ExpressionStatement	free ( buf )	78:2:1714:1725	4810005	0	True				
ANR	4810179	CallExpression	free ( buf )		4810005	0					
ANR	4810180	Callee	free		4810005	0					
ANR	4810181	Identifier	free		4810005	0					
ANR	4810182	ArgumentList	buf		4810005	1					
ANR	4810183	Argument	buf		4810005	0					
ANR	4810184	Identifier	buf		4810005	0					
ANR	4810185	ReturnStatement	return ( - 1 ) ;	79:2:1729:1741	4810005	1	True				
ANR	4810186	UnaryOperationExpression	- 1		4810005	0					
ANR	4810187	UnaryOperator	-		4810005	0					
ANR	4810188	PrimaryExpression	1		4810005	1					
ANR	4810189	ExpressionStatement	buf [ i - 1 ] = '\\0'	82:1:1748:1763	4810005	6	True				
ANR	4810190	AssignmentExpression	buf [ i - 1 ] = '\\0'		4810005	0		=			
ANR	4810191	ArrayIndexing	buf [ i - 1 ]		4810005	0					
ANR	4810192	Identifier	buf		4810005	0					
ANR	4810193	AdditiveExpression	i - 1		4810005	1		-			
ANR	4810194	Identifier	i		4810005	0					
ANR	4810195	PrimaryExpression	1		4810005	1					
ANR	4810196	PrimaryExpression	'\\0'		4810005	1					
ANR	4810197	ExpressionStatement	str = strdup ( ( char * ) buf )	83:1:1766:1791	4810005	7	True				
ANR	4810198	AssignmentExpression	str = strdup ( ( char * ) buf )		4810005	0		=			
ANR	4810199	Identifier	str		4810005	0					
ANR	4810200	CallExpression	strdup ( ( char * ) buf )		4810005	1					
ANR	4810201	Callee	strdup		4810005	0					
ANR	4810202	Identifier	strdup		4810005	0					
ANR	4810203	ArgumentList	( char * ) buf		4810005	1					
ANR	4810204	Argument	( char * ) buf		4810005	0					
ANR	4810205	CastExpression	( char * ) buf		4810005	0					
ANR	4810206	CastTarget	char *		4810005	0					
ANR	4810207	Identifier	buf		4810005	1					
ANR	4810208	ExpressionStatement	free ( buf )	84:1:1794:1803	4810005	8	True				
ANR	4810209	CallExpression	free ( buf )		4810005	0					
ANR	4810210	Callee	free		4810005	0					
ANR	4810211	Identifier	free		4810005	0					
ANR	4810212	ArgumentList	buf		4810005	1					
ANR	4810213	Argument	buf		4810005	0					
ANR	4810214	Identifier	buf		4810005	0					
ANR	4810215	ReturnStatement	return i - 1 ;	85:1:1806:1816	4810005	9	True				
ANR	4810216	AdditiveExpression	i - 1		4810005	0		-			
ANR	4810217	Identifier	i		4810005	0					
ANR	4810218	PrimaryExpression	1		4810005	1					
ANR	4810219	ReturnType	int		4810005	1					
ANR	4810220	Identifier	LogRecord :: readword		4810005	2					
ANR	4810221	ParameterList	"FILE * fp , char * & str"		4810005	3					
ANR	4810222	Parameter	FILE * fp	46:20:1096:1103	4810005	0	True				
ANR	4810223	ParameterType	FILE *		4810005	0					
ANR	4810224	Identifier	fp		4810005	1					
ANR	4810225	Parameter	char * & str	46:30:1106:1116	4810005	1	True				
ANR	4810226	ParameterType	char * &		4810005	0					
ANR	4810227	Identifier	str		4810005	1					
ANR	4810228	CFGEntryNode	ENTRY		4810005		True				
ANR	4810229	CFGExitNode	EXIT		4810005		True				
ANR	4810230	Symbol	malloc		4810005						
ANR	4810231	Symbol	* buf		4810005						
ANR	4810232	Symbol	ch		4810005						
ANR	4810233	Symbol	bufsize		4810005						
ANR	4810234	Symbol	isspace		4810005						
ANR	4810235	Symbol	i		4810005						
ANR	4810236	Symbol	fp		4810005						
ANR	4810237	Symbol	realloc		4810005						
ANR	4810238	Symbol	str		4810005						
ANR	4810239	Symbol	buf		4810005						
ANR	4810240	Symbol	* i		4810005						
ANR	4810241	Symbol	strdup		4810005						
ANR	4810242	Symbol	EOF		4810005						
ANR	4810243	Symbol	fgetc		4810005						
ANR	4810244	Function	LogRecord :: readline	89:0:1822:2518							
ANR	4810245	FunctionDef	"LogRecord :: readline (FILE * fp , char * & str)"		4810244	0					
ANR	4810246	CompoundStatement		91:0:1869:2518	4810244	0					
ANR	4810247	IdentifierDeclStatement	"int i , bufsize = 1024 ;"	92:1:1872:1894	4810244	0	True				
ANR	4810248	IdentifierDecl	i		4810244	0					
ANR	4810249	IdentifierDeclType	int		4810244	0					
ANR	4810250	Identifier	i		4810244	1					
ANR	4810251	IdentifierDecl	bufsize = 1024		4810244	1					
ANR	4810252	IdentifierDeclType	int		4810244	0					
ANR	4810253	Identifier	bufsize		4810244	1					
ANR	4810254	AssignmentExpression	bufsize = 1024		4810244	2		=			
ANR	4810255	Identifier	bufsize		4810244	0					
ANR	4810256	PrimaryExpression	1024		4810244	1					
ANR	4810257	IdentifierDeclStatement	char * buf = ( char * ) malloc ( bufsize ) ;	93:1:1897:1932	4810244	1	True				
ANR	4810258	IdentifierDecl	* buf = ( char * ) malloc ( bufsize )		4810244	0					
ANR	4810259	IdentifierDeclType	char *		4810244	0					
ANR	4810260	Identifier	buf		4810244	1					
ANR	4810261	AssignmentExpression	* buf = ( char * ) malloc ( bufsize )		4810244	2		=			
ANR	4810262	Identifier	buf		4810244	0					
ANR	4810263	CastExpression	( char * ) malloc ( bufsize )		4810244	1					
ANR	4810264	CastTarget	char *		4810244	0					
ANR	4810265	CallExpression	malloc ( bufsize )		4810244	1					
ANR	4810266	Callee	malloc		4810244	0					
ANR	4810267	Identifier	malloc		4810244	0					
ANR	4810268	ArgumentList	bufsize		4810244	1					
ANR	4810269	Argument	bufsize		4810244	0					
ANR	4810270	Identifier	bufsize		4810244	0					
ANR	4810271	IdentifierDeclStatement	int ch ;	94:1:1935:1941	4810244	2	True				
ANR	4810272	IdentifierDecl	ch		4810244	0					
ANR	4810273	IdentifierDeclType	int		4810244	0					
ANR	4810274	Identifier	ch		4810244	1					
ANR	4810275	ExpressionStatement	ch = fgetc ( fp )	97:1:2012:2028	4810244	3	True				
ANR	4810276	AssignmentExpression	ch = fgetc ( fp )		4810244	0		=			
ANR	4810277	Identifier	ch		4810244	0					
ANR	4810278	CallExpression	fgetc ( fp )		4810244	1					
ANR	4810279	Callee	fgetc		4810244	0					
ANR	4810280	Identifier	fgetc		4810244	0					
ANR	4810281	ArgumentList	fp		4810244	1					
ANR	4810282	Argument	fp		4810244	0					
ANR	4810283	Identifier	fp		4810244	0					
ANR	4810284	IfStatement	if ( ch == EOF || ch == '\\0' )		4810244	4					
ANR	4810285	Condition	ch == EOF || ch == '\\0'	98:5:2035:2057	4810244	0	True				
ANR	4810286	OrExpression	ch == EOF || ch == '\\0'		4810244	0		||			
ANR	4810287	EqualityExpression	ch == EOF		4810244	0		==			
ANR	4810288	Identifier	ch		4810244	0					
ANR	4810289	Identifier	EOF		4810244	1					
ANR	4810290	EqualityExpression	ch == '\\0'		4810244	1		==			
ANR	4810291	Identifier	ch		4810244	0					
ANR	4810292	PrimaryExpression	'\\0'		4810244	1					
ANR	4810293	CompoundStatement		8:31:191:191	4810244	1					
ANR	4810294	ExpressionStatement	free ( buf )	99:2:2065:2076	4810244	0	True				
ANR	4810295	CallExpression	free ( buf )		4810244	0					
ANR	4810296	Callee	free		4810244	0					
ANR	4810297	Identifier	free		4810244	0					
ANR	4810298	ArgumentList	buf		4810244	1					
ANR	4810299	Argument	buf		4810244	0					
ANR	4810300	Identifier	buf		4810244	0					
ANR	4810301	ReturnStatement	return ( - 1 ) ;	100:2:2080:2092	4810244	1	True				
ANR	4810302	UnaryOperationExpression	- 1		4810244	0					
ANR	4810303	UnaryOperator	-		4810244	0					
ANR	4810304	PrimaryExpression	1		4810244	1					
ANR	4810305	ExpressionStatement	buf [ 0 ] = ch	102:1:2098:2109	4810244	5	True				
ANR	4810306	AssignmentExpression	buf [ 0 ] = ch		4810244	0		=			
ANR	4810307	ArrayIndexing	buf [ 0 ]		4810244	0					
ANR	4810308	Identifier	buf		4810244	0					
ANR	4810309	PrimaryExpression	0		4810244	1					
ANR	4810310	Identifier	ch		4810244	1					
ANR	4810311	ForStatement	for ( i = 1 ; buf [ i - 1 ] != '\\n' ; i ++ )		4810244	6					
ANR	4810312	ForInit	i = 1 ;	105:6:2141:2146	4810244	0	True				
ANR	4810313	AssignmentExpression	i = 1		4810244	0		=			
ANR	4810314	Identifier	i		4810244	0					
ANR	4810315	PrimaryExpression	1		4810244	1					
ANR	4810316	Condition	buf [ i - 1 ] != '\\n'	105:13:2148:2161	4810244	1	True				
ANR	4810317	EqualityExpression	buf [ i - 1 ] != '\\n'		4810244	0		!=			
ANR	4810318	ArrayIndexing	buf [ i - 1 ]		4810244	0					
ANR	4810319	Identifier	buf		4810244	0					
ANR	4810320	AdditiveExpression	i - 1		4810244	1		-			
ANR	4810321	Identifier	i		4810244	0					
ANR	4810322	PrimaryExpression	1		4810244	1					
ANR	4810323	PrimaryExpression	'\\n'		4810244	1					
ANR	4810324	PostIncDecOperationExpression	i ++	105:29:2164:2166	4810244	2	True				
ANR	4810325	Identifier	i		4810244	0					
ANR	4810326	IncDec	++		4810244	1					
ANR	4810327	CompoundStatement		15:34:299:299	4810244	3					
ANR	4810328	IfStatement	if ( i == bufsize )		4810244	0					
ANR	4810329	Condition	i == bufsize	106:6:2177:2188	4810244	0	True				
ANR	4810330	EqualityExpression	i == bufsize		4810244	0		==			
ANR	4810331	Identifier	i		4810244	0					
ANR	4810332	Identifier	bufsize		4810244	1					
ANR	4810333	CompoundStatement		16:20:321:321	4810244	1					
ANR	4810334	ExpressionStatement	"buf = ( char * ) realloc ( buf , bufsize * 2 )"	107:3:2196:2233	4810244	0	True				
ANR	4810335	AssignmentExpression	"buf = ( char * ) realloc ( buf , bufsize * 2 )"		4810244	0		=			
ANR	4810336	Identifier	buf		4810244	0					
ANR	4810337	CastExpression	"( char * ) realloc ( buf , bufsize * 2 )"		4810244	1					
ANR	4810338	CastTarget	char *		4810244	0					
ANR	4810339	CallExpression	"realloc ( buf , bufsize * 2 )"		4810244	1					
ANR	4810340	Callee	realloc		4810244	0					
ANR	4810341	Identifier	realloc		4810244	0					
ANR	4810342	ArgumentList	buf		4810244	1					
ANR	4810343	Argument	buf		4810244	0					
ANR	4810344	Identifier	buf		4810244	0					
ANR	4810345	Argument	bufsize * 2		4810244	1					
ANR	4810346	MultiplicativeExpression	bufsize * 2		4810244	0		*			
ANR	4810347	Identifier	bufsize		4810244	0					
ANR	4810348	PrimaryExpression	2		4810244	1					
ANR	4810349	ExpressionStatement	bufsize *= 2	108:3:2238:2250	4810244	1	True				
ANR	4810350	AssignmentExpression	bufsize *= 2		4810244	0		*=			
ANR	4810351	Identifier	bufsize		4810244	0					
ANR	4810352	PrimaryExpression	2		4810244	1					
ANR	4810353	ExpressionStatement	ch = fgetc ( fp )	110:2:2259:2275	4810244	1	True				
ANR	4810354	AssignmentExpression	ch = fgetc ( fp )		4810244	0		=			
ANR	4810355	Identifier	ch		4810244	0					
ANR	4810356	CallExpression	fgetc ( fp )		4810244	1					
ANR	4810357	Callee	fgetc		4810244	0					
ANR	4810358	Identifier	fgetc		4810244	0					
ANR	4810359	ArgumentList	fp		4810244	1					
ANR	4810360	Argument	fp		4810244	0					
ANR	4810361	Identifier	fp		4810244	0					
ANR	4810362	IfStatement	if ( ch == EOF || ch == '\\0' )		4810244	2					
ANR	4810363	Condition	ch == EOF || ch == '\\0'	111:6:2283:2305	4810244	0	True				
ANR	4810364	OrExpression	ch == EOF || ch == '\\0'		4810244	0		||			
ANR	4810365	EqualityExpression	ch == EOF		4810244	0		==			
ANR	4810366	Identifier	ch		4810244	0					
ANR	4810367	Identifier	EOF		4810244	1					
ANR	4810368	EqualityExpression	ch == '\\0'		4810244	1		==			
ANR	4810369	Identifier	ch		4810244	0					
ANR	4810370	PrimaryExpression	'\\0'		4810244	1					
ANR	4810371	CompoundStatement		21:32:439:439	4810244	1					
ANR	4810372	ExpressionStatement	free ( buf )	112:3:2314:2325	4810244	0	True				
ANR	4810373	CallExpression	free ( buf )		4810244	0					
ANR	4810374	Callee	free		4810244	0					
ANR	4810375	Identifier	free		4810244	0					
ANR	4810376	ArgumentList	buf		4810244	1					
ANR	4810377	Argument	buf		4810244	0					
ANR	4810378	Identifier	buf		4810244	0					
ANR	4810379	ReturnStatement	return ( - 1 ) ;	113:3:2330:2342	4810244	1	True				
ANR	4810380	UnaryOperationExpression	- 1		4810244	0					
ANR	4810381	UnaryOperator	-		4810244	0					
ANR	4810382	PrimaryExpression	1		4810244	1					
ANR	4810383	ExpressionStatement	buf [ i ] = ch	115:2:2350:2361	4810244	3	True				
ANR	4810384	AssignmentExpression	buf [ i ] = ch		4810244	0		=			
ANR	4810385	ArrayIndexing	buf [ i ]		4810244	0					
ANR	4810386	Identifier	buf		4810244	0					
ANR	4810387	Identifier	i		4810244	1					
ANR	4810388	Identifier	ch		4810244	1					
ANR	4810389	IfStatement	if ( i == 1 )		4810244	7					
ANR	4810390	Condition	i == 1	119:5:2403:2406	4810244	0	True				
ANR	4810391	EqualityExpression	i == 1		4810244	0		==			
ANR	4810392	Identifier	i		4810244	0					
ANR	4810393	PrimaryExpression	1		4810244	1					
ANR	4810394	CompoundStatement		29:12:540:540	4810244	1					
ANR	4810395	ExpressionStatement	free ( buf )	120:2:2414:2425	4810244	0	True				
ANR	4810396	CallExpression	free ( buf )		4810244	0					
ANR	4810397	Callee	free		4810244	0					
ANR	4810398	Identifier	free		4810244	0					
ANR	4810399	ArgumentList	buf		4810244	1					
ANR	4810400	Argument	buf		4810244	0					
ANR	4810401	Identifier	buf		4810244	0					
ANR	4810402	ReturnStatement	return ( - 1 ) ;	121:2:2429:2441	4810244	1	True				
ANR	4810403	UnaryOperationExpression	- 1		4810244	0					
ANR	4810404	UnaryOperator	-		4810244	0					
ANR	4810405	PrimaryExpression	1		4810244	1					
ANR	4810406	ExpressionStatement	buf [ i - 1 ] = '\\0'	124:1:2448:2463	4810244	8	True				
ANR	4810407	AssignmentExpression	buf [ i - 1 ] = '\\0'		4810244	0		=			
ANR	4810408	ArrayIndexing	buf [ i - 1 ]		4810244	0					
ANR	4810409	Identifier	buf		4810244	0					
ANR	4810410	AdditiveExpression	i - 1		4810244	1		-			
ANR	4810411	Identifier	i		4810244	0					
ANR	4810412	PrimaryExpression	1		4810244	1					
ANR	4810413	PrimaryExpression	'\\0'		4810244	1					
ANR	4810414	ExpressionStatement	str = strdup ( ( char * ) buf )	125:1:2466:2491	4810244	9	True				
ANR	4810415	AssignmentExpression	str = strdup ( ( char * ) buf )		4810244	0		=			
ANR	4810416	Identifier	str		4810244	0					
ANR	4810417	CallExpression	strdup ( ( char * ) buf )		4810244	1					
ANR	4810418	Callee	strdup		4810244	0					
ANR	4810419	Identifier	strdup		4810244	0					
ANR	4810420	ArgumentList	( char * ) buf		4810244	1					
ANR	4810421	Argument	( char * ) buf		4810244	0					
ANR	4810422	CastExpression	( char * ) buf		4810244	0					
ANR	4810423	CastTarget	char *		4810244	0					
ANR	4810424	Identifier	buf		4810244	1					
ANR	4810425	ExpressionStatement	free ( buf )	126:1:2494:2503	4810244	10	True				
ANR	4810426	CallExpression	free ( buf )		4810244	0					
ANR	4810427	Callee	free		4810244	0					
ANR	4810428	Identifier	free		4810244	0					
ANR	4810429	ArgumentList	buf		4810244	1					
ANR	4810430	Argument	buf		4810244	0					
ANR	4810431	Identifier	buf		4810244	0					
ANR	4810432	ReturnStatement	return i - 1 ;	127:1:2506:2516	4810244	11	True				
ANR	4810433	AdditiveExpression	i - 1		4810244	0		-			
ANR	4810434	Identifier	i		4810244	0					
ANR	4810435	PrimaryExpression	1		4810244	1					
ANR	4810436	ReturnType	int		4810244	1					
ANR	4810437	Identifier	LogRecord :: readline		4810244	2					
ANR	4810438	ParameterList	"FILE * fp , char * & str"		4810244	3					
ANR	4810439	Parameter	FILE * fp	90:20:1846:1853	4810244	0	True				
ANR	4810440	ParameterType	FILE *		4810244	0					
ANR	4810441	Identifier	fp		4810244	1					
ANR	4810442	Parameter	char * & str	90:30:1856:1866	4810244	1	True				
ANR	4810443	ParameterType	char * &		4810244	0					
ANR	4810444	Identifier	str		4810244	1					
ANR	4810445	CFGEntryNode	ENTRY		4810244		True				
ANR	4810446	CFGExitNode	EXIT		4810244		True				
ANR	4810447	Symbol	malloc		4810244						
ANR	4810448	Symbol	* buf		4810244						
ANR	4810449	Symbol	ch		4810244						
ANR	4810450	Symbol	bufsize		4810244						
ANR	4810451	Symbol	i		4810244						
ANR	4810452	Symbol	fp		4810244						
ANR	4810453	Symbol	realloc		4810244						
ANR	4810454	Symbol	str		4810244						
ANR	4810455	Symbol	buf		4810244						
ANR	4810456	Symbol	* i		4810244						
ANR	4810457	Symbol	strdup		4810244						
ANR	4810458	Symbol	EOF		4810244						
ANR	4810459	Symbol	fgetc		4810244						
ANR	4810460	Function	LogRecord :: Write	130:0:2521:2714							
ANR	4810461	FunctionDef	LogRecord :: Write (FILE * fp)		4810460	0					
ANR	4810462	CompoundStatement		132:0:2552:2714	4810460	0					
ANR	4810463	IdentifierDeclStatement	"int rval1 , rval2 , rval3 ;"	133:1:2555:2578	4810460	0	True				
ANR	4810464	IdentifierDecl	rval1		4810460	0					
ANR	4810465	IdentifierDeclType	int		4810460	0					
ANR	4810466	Identifier	rval1		4810460	1					
ANR	4810467	IdentifierDecl	rval2		4810460	1					
ANR	4810468	IdentifierDeclType	int		4810460	0					
ANR	4810469	Identifier	rval2		4810460	1					
ANR	4810470	IdentifierDecl	rval3		4810460	2					
ANR	4810471	IdentifierDeclType	int		4810460	0					
ANR	4810472	Identifier	rval3		4810460	1					
ANR	4810473	ReturnStatement	return ( ( rval1 = WriteHeader ( fp ) ) < 0 || ( rval2 = WriteBody ( fp ) ) < 0 || ( rval3 = WriteTail ( fp ) ) < 0 ? - 1 : rval1 + rval2 + rval3 ) ;	134:1:2581:2712	4810460	1	True				
ANR	4810474	ConditionalExpression	( rval1 = WriteHeader ( fp ) ) < 0 || ( rval2 = WriteBody ( fp ) ) < 0 || ( rval3 = WriteTail ( fp ) ) < 0 ? - 1 : rval1 + rval2 + rval3		4810460	0					
ANR	4810475	Condition	( rval1 = WriteHeader ( fp ) ) < 0 || ( rval2 = WriteBody ( fp ) ) < 0 || ( rval3 = WriteTail ( fp ) ) < 0		4810460	0					
ANR	4810476	OrExpression	( rval1 = WriteHeader ( fp ) ) < 0 || ( rval2 = WriteBody ( fp ) ) < 0 || ( rval3 = WriteTail ( fp ) ) < 0		4810460	0		||			
ANR	4810477	RelationalExpression	( rval1 = WriteHeader ( fp ) ) < 0		4810460	0		<			
ANR	4810478	AssignmentExpression	rval1 = WriteHeader ( fp )		4810460	0		=			
ANR	4810479	Identifier	rval1		4810460	0					
ANR	4810480	CallExpression	WriteHeader ( fp )		4810460	1					
ANR	4810481	Callee	WriteHeader		4810460	0					
ANR	4810482	Identifier	WriteHeader		4810460	0					
ANR	4810483	ArgumentList	fp		4810460	1					
ANR	4810484	Argument	fp		4810460	0					
ANR	4810485	Identifier	fp		4810460	0					
ANR	4810486	PrimaryExpression	0		4810460	1					
ANR	4810487	OrExpression	( rval2 = WriteBody ( fp ) ) < 0 || ( rval3 = WriteTail ( fp ) ) < 0		4810460	1		||			
ANR	4810488	RelationalExpression	( rval2 = WriteBody ( fp ) ) < 0		4810460	0		<			
ANR	4810489	AssignmentExpression	rval2 = WriteBody ( fp )		4810460	0		=			
ANR	4810490	Identifier	rval2		4810460	0					
ANR	4810491	CallExpression	WriteBody ( fp )		4810460	1					
ANR	4810492	Callee	WriteBody		4810460	0					
ANR	4810493	Identifier	WriteBody		4810460	0					
ANR	4810494	ArgumentList	fp		4810460	1					
ANR	4810495	Argument	fp		4810460	0					
ANR	4810496	Identifier	fp		4810460	0					
ANR	4810497	PrimaryExpression	0		4810460	1					
ANR	4810498	RelationalExpression	( rval3 = WriteTail ( fp ) ) < 0		4810460	1		<			
ANR	4810499	AssignmentExpression	rval3 = WriteTail ( fp )		4810460	0		=			
ANR	4810500	Identifier	rval3		4810460	0					
ANR	4810501	CallExpression	WriteTail ( fp )		4810460	1					
ANR	4810502	Callee	WriteTail		4810460	0					
ANR	4810503	Identifier	WriteTail		4810460	0					
ANR	4810504	ArgumentList	fp		4810460	1					
ANR	4810505	Argument	fp		4810460	0					
ANR	4810506	Identifier	fp		4810460	0					
ANR	4810507	PrimaryExpression	0		4810460	1					
ANR	4810508	UnaryOperationExpression	- 1		4810460	1					
ANR	4810509	UnaryOperator	-		4810460	0					
ANR	4810510	PrimaryExpression	1		4810460	1					
ANR	4810511	AdditiveExpression	rval1 + rval2 + rval3		4810460	2		+			
ANR	4810512	Identifier	rval1		4810460	0					
ANR	4810513	AdditiveExpression	rval2 + rval3		4810460	1		+			
ANR	4810514	Identifier	rval2		4810460	0					
ANR	4810515	Identifier	rval3		4810460	1					
ANR	4810516	ReturnType	int		4810460	1					
ANR	4810517	Identifier	LogRecord :: Write		4810460	2					
ANR	4810518	ParameterList	FILE * fp		4810460	3					
ANR	4810519	Parameter	FILE * fp	131:17:2542:2549	4810460	0	True				
ANR	4810520	ParameterType	FILE *		4810460	0					
ANR	4810521	Identifier	fp		4810460	1					
ANR	4810522	CFGEntryNode	ENTRY		4810460		True				
ANR	4810523	CFGExitNode	EXIT		4810460		True				
ANR	4810524	Symbol	WriteTail		4810460						
ANR	4810525	Symbol	WriteBody		4810460						
ANR	4810526	Symbol	rval3		4810460						
ANR	4810527	Symbol	fp		4810460						
ANR	4810528	Symbol	WriteHeader		4810460						
ANR	4810529	Symbol	rval2		4810460						
ANR	4810530	Symbol	rval1		4810460						
ANR	4810531	Function	LogRecord :: Read	140:0:2718:2907							
ANR	4810532	FunctionDef	LogRecord :: Read (FILE * fp)		4810531	0					
ANR	4810533	CompoundStatement		142:0:2748:2907	4810531	0					
ANR	4810534	IdentifierDeclStatement	"int rval1 , rval2 , rval3 ;"	143:1:2751:2774	4810531	0	True				
ANR	4810535	IdentifierDecl	rval1		4810531	0					
ANR	4810536	IdentifierDeclType	int		4810531	0					
ANR	4810537	Identifier	rval1		4810531	1					
ANR	4810538	IdentifierDecl	rval2		4810531	1					
ANR	4810539	IdentifierDeclType	int		4810531	0					
ANR	4810540	Identifier	rval2		4810531	1					
ANR	4810541	IdentifierDecl	rval3		4810531	2					
ANR	4810542	IdentifierDeclType	int		4810531	0					
ANR	4810543	Identifier	rval3		4810531	1					
ANR	4810544	ReturnStatement	return ( ( rval1 = ReadHeader ( fp ) ) < 0 || ( rval2 = ReadBody ( fp ) ) < 0 || ( rval3 = ReadTail ( fp ) ) < 0 ? - 1 : rval1 + rval2 + rval3 ) ;	144:1:2777:2905	4810531	1	True				
ANR	4810545	ConditionalExpression	( rval1 = ReadHeader ( fp ) ) < 0 || ( rval2 = ReadBody ( fp ) ) < 0 || ( rval3 = ReadTail ( fp ) ) < 0 ? - 1 : rval1 + rval2 + rval3		4810531	0					
ANR	4810546	Condition	( rval1 = ReadHeader ( fp ) ) < 0 || ( rval2 = ReadBody ( fp ) ) < 0 || ( rval3 = ReadTail ( fp ) ) < 0		4810531	0					
ANR	4810547	OrExpression	( rval1 = ReadHeader ( fp ) ) < 0 || ( rval2 = ReadBody ( fp ) ) < 0 || ( rval3 = ReadTail ( fp ) ) < 0		4810531	0		||			
ANR	4810548	RelationalExpression	( rval1 = ReadHeader ( fp ) ) < 0		4810531	0		<			
ANR	4810549	AssignmentExpression	rval1 = ReadHeader ( fp )		4810531	0		=			
ANR	4810550	Identifier	rval1		4810531	0					
ANR	4810551	CallExpression	ReadHeader ( fp )		4810531	1					
ANR	4810552	Callee	ReadHeader		4810531	0					
ANR	4810553	Identifier	ReadHeader		4810531	0					
ANR	4810554	ArgumentList	fp		4810531	1					
ANR	4810555	Argument	fp		4810531	0					
ANR	4810556	Identifier	fp		4810531	0					
ANR	4810557	PrimaryExpression	0		4810531	1					
ANR	4810558	OrExpression	( rval2 = ReadBody ( fp ) ) < 0 || ( rval3 = ReadTail ( fp ) ) < 0		4810531	1		||			
ANR	4810559	RelationalExpression	( rval2 = ReadBody ( fp ) ) < 0		4810531	0		<			
ANR	4810560	AssignmentExpression	rval2 = ReadBody ( fp )		4810531	0		=			
ANR	4810561	Identifier	rval2		4810531	0					
ANR	4810562	CallExpression	ReadBody ( fp )		4810531	1					
ANR	4810563	Callee	ReadBody		4810531	0					
ANR	4810564	Identifier	ReadBody		4810531	0					
ANR	4810565	ArgumentList	fp		4810531	1					
ANR	4810566	Argument	fp		4810531	0					
ANR	4810567	Identifier	fp		4810531	0					
ANR	4810568	PrimaryExpression	0		4810531	1					
ANR	4810569	RelationalExpression	( rval3 = ReadTail ( fp ) ) < 0		4810531	1		<			
ANR	4810570	AssignmentExpression	rval3 = ReadTail ( fp )		4810531	0		=			
ANR	4810571	Identifier	rval3		4810531	0					
ANR	4810572	CallExpression	ReadTail ( fp )		4810531	1					
ANR	4810573	Callee	ReadTail		4810531	0					
ANR	4810574	Identifier	ReadTail		4810531	0					
ANR	4810575	ArgumentList	fp		4810531	1					
ANR	4810576	Argument	fp		4810531	0					
ANR	4810577	Identifier	fp		4810531	0					
ANR	4810578	PrimaryExpression	0		4810531	1					
ANR	4810579	UnaryOperationExpression	- 1		4810531	1					
ANR	4810580	UnaryOperator	-		4810531	0					
ANR	4810581	PrimaryExpression	1		4810531	1					
ANR	4810582	AdditiveExpression	rval1 + rval2 + rval3		4810531	2		+			
ANR	4810583	Identifier	rval1		4810531	0					
ANR	4810584	AdditiveExpression	rval2 + rval3		4810531	1		+			
ANR	4810585	Identifier	rval2		4810531	0					
ANR	4810586	Identifier	rval3		4810531	1					
ANR	4810587	ReturnType	int		4810531	1					
ANR	4810588	Identifier	LogRecord :: Read		4810531	2					
ANR	4810589	ParameterList	FILE * fp		4810531	3					
ANR	4810590	Parameter	FILE * fp	141:16:2738:2745	4810531	0	True				
ANR	4810591	ParameterType	FILE *		4810531	0					
ANR	4810592	Identifier	fp		4810531	1					
ANR	4810593	CFGEntryNode	ENTRY		4810531		True				
ANR	4810594	CFGExitNode	EXIT		4810531		True				
ANR	4810595	Symbol	ReadTail		4810531						
ANR	4810596	Symbol	ReadHeader		4810531						
ANR	4810597	Symbol	ReadBody		4810531						
ANR	4810598	Symbol	rval3		4810531						
ANR	4810599	Symbol	fp		4810531						
ANR	4810600	Symbol	rval2		4810531						
ANR	4810601	Symbol	rval1		4810531						
ANR	4810602	Function	LogRecord :: WriteHeader	149:0:2910:3055							
ANR	4810603	FunctionDef	LogRecord :: WriteHeader (FILE * fp)		4810602	0					
ANR	4810604	CompoundStatement		151:0:2947:3055	4810602	0					
ANR	4810605	IdentifierDeclStatement	char op [ 20 ] ;	152:1:2950:2961	4810602	0	True				
ANR	4810606	IdentifierDecl	op [ 20 ]		4810602	0					
ANR	4810607	IdentifierDeclType	char [ 20 ]		4810602	0					
ANR	4810608	Identifier	op		4810602	1					
ANR	4810609	PrimaryExpression	20		4810602	2					
ANR	4810610	IdentifierDeclStatement	"int len = sprintf ( op , ""%d "" , op_type ) ;"	153:1:2964:3002	4810602	1	True				
ANR	4810611	IdentifierDecl	"len = sprintf ( op , ""%d "" , op_type )"		4810602	0					
ANR	4810612	IdentifierDeclType	int		4810602	0					
ANR	4810613	Identifier	len		4810602	1					
ANR	4810614	AssignmentExpression	"len = sprintf ( op , ""%d "" , op_type )"		4810602	2		=			
ANR	4810615	Identifier	len		4810602	0					
ANR	4810616	CallExpression	"sprintf ( op , ""%d "" , op_type )"		4810602	1					
ANR	4810617	Callee	sprintf		4810602	0					
ANR	4810618	Identifier	sprintf		4810602	0					
ANR	4810619	ArgumentList	op		4810602	1					
ANR	4810620	Argument	op		4810602	0					
ANR	4810621	Identifier	op		4810602	0					
ANR	4810622	Argument	"""%d """		4810602	1					
ANR	4810623	PrimaryExpression	"""%d """		4810602	0					
ANR	4810624	Argument	op_type		4810602	2					
ANR	4810625	Identifier	op_type		4810602	0					
ANR	4810626	ReturnStatement	"return ( fprintf ( fp , ""%s"" , op ) < len ? - 1 : len ) ;"	154:1:3005:3053	4810602	2	True				
ANR	4810627	ConditionalExpression	"fprintf ( fp , ""%s"" , op ) < len ? - 1 : len"		4810602	0					
ANR	4810628	Condition	"fprintf ( fp , ""%s"" , op ) < len"		4810602	0					
ANR	4810629	RelationalExpression	"fprintf ( fp , ""%s"" , op ) < len"		4810602	0		<			
ANR	4810630	CallExpression	"fprintf ( fp , ""%s"" , op )"		4810602	0					
ANR	4810631	Callee	fprintf		4810602	0					
ANR	4810632	Identifier	fprintf		4810602	0					
ANR	4810633	ArgumentList	fp		4810602	1					
ANR	4810634	Argument	fp		4810602	0					
ANR	4810635	Identifier	fp		4810602	0					
ANR	4810636	Argument	"""%s"""		4810602	1					
ANR	4810637	PrimaryExpression	"""%s"""		4810602	0					
ANR	4810638	Argument	op		4810602	2					
ANR	4810639	Identifier	op		4810602	0					
ANR	4810640	Identifier	len		4810602	1					
ANR	4810641	UnaryOperationExpression	- 1		4810602	1					
ANR	4810642	UnaryOperator	-		4810602	0					
ANR	4810643	PrimaryExpression	1		4810602	1					
ANR	4810644	Identifier	len		4810602	2					
ANR	4810645	ReturnType	int		4810602	1					
ANR	4810646	Identifier	LogRecord :: WriteHeader		4810602	2					
ANR	4810647	ParameterList	FILE * fp		4810602	3					
ANR	4810648	Parameter	FILE * fp	150:23:2937:2944	4810602	0	True				
ANR	4810649	ParameterType	FILE *		4810602	0					
ANR	4810650	Identifier	fp		4810602	1					
ANR	4810651	CFGEntryNode	ENTRY		4810602		True				
ANR	4810652	CFGExitNode	EXIT		4810602		True				
ANR	4810653	Symbol	op		4810602						
ANR	4810654	Symbol	len		4810602						
ANR	4810655	Symbol	fp		4810602						
ANR	4810656	Symbol	op_type		4810602						
ANR	4810657	Symbol	fprintf		4810602						
ANR	4810658	Symbol	sprintf		4810602						
ANR	4810659	Function	LogRecord :: WriteTail	158:0:3059:3139							
ANR	4810660	FunctionDef	LogRecord :: WriteTail (FILE * fp)		4810659	0					
ANR	4810661	CompoundStatement		160:0:3094:3139	4810659	0					
ANR	4810662	ReturnStatement	"return ( fprintf ( fp , ""\\n"" ) < 1 ? - 1 : 1 ) ;"	161:1:3097:3137	4810659	0	True				
ANR	4810663	ConditionalExpression	"fprintf ( fp , ""\\n"" ) < 1 ? - 1 : 1"		4810659	0					
ANR	4810664	Condition	"fprintf ( fp , ""\\n"" ) < 1"		4810659	0					
ANR	4810665	RelationalExpression	"fprintf ( fp , ""\\n"" ) < 1"		4810659	0		<			
ANR	4810666	CallExpression	"fprintf ( fp , ""\\n"" )"		4810659	0					
ANR	4810667	Callee	fprintf		4810659	0					
ANR	4810668	Identifier	fprintf		4810659	0					
ANR	4810669	ArgumentList	fp		4810659	1					
ANR	4810670	Argument	fp		4810659	0					
ANR	4810671	Identifier	fp		4810659	0					
ANR	4810672	Argument	"""\\n"""		4810659	1					
ANR	4810673	PrimaryExpression	"""\\n"""		4810659	0					
ANR	4810674	PrimaryExpression	1		4810659	1					
ANR	4810675	UnaryOperationExpression	- 1		4810659	1					
ANR	4810676	UnaryOperator	-		4810659	0					
ANR	4810677	PrimaryExpression	1		4810659	1					
ANR	4810678	PrimaryExpression	1		4810659	2					
ANR	4810679	ReturnType	int		4810659	1					
ANR	4810680	Identifier	LogRecord :: WriteTail		4810659	2					
ANR	4810681	ParameterList	FILE * fp		4810659	3					
ANR	4810682	Parameter	FILE * fp	159:21:3084:3091	4810659	0	True				
ANR	4810683	ParameterType	FILE *		4810659	0					
ANR	4810684	Identifier	fp		4810659	1					
ANR	4810685	CFGEntryNode	ENTRY		4810659		True				
ANR	4810686	CFGExitNode	EXIT		4810659		True				
ANR	4810687	Symbol	fp		4810659						
ANR	4810688	Symbol	fprintf		4810659						
ANR	4810689	Function	LogRecord :: ReadHeader	166:0:3144:3349							
ANR	4810690	FunctionDef	LogRecord :: ReadHeader (FILE * fp)		4810689	0					
ANR	4810691	CompoundStatement		168:0:3180:3349	4810689	0					
ANR	4810692	IdentifierDeclStatement	int rval ;	169:4:3186:3194	4810689	0	True				
ANR	4810693	IdentifierDecl	rval		4810689	0					
ANR	4810694	IdentifierDeclType	int		4810689	0					
ANR	4810695	Identifier	rval		4810689	1					
ANR	4810696	IdentifierDeclStatement	char * op = NULL ;	170:4:3200:3215	4810689	1	True				
ANR	4810697	IdentifierDecl	* op = NULL		4810689	0					
ANR	4810698	IdentifierDeclType	char *		4810689	0					
ANR	4810699	Identifier	op		4810689	1					
ANR	4810700	AssignmentExpression	* op = NULL		4810689	2		=			
ANR	4810701	Identifier	NULL		4810689	0					
ANR	4810702	Identifier	NULL		4810689	1					
ANR	4810703	ExpressionStatement	"rval = readword ( fp , op )"	172:4:3222:3245	4810689	2	True				
ANR	4810704	AssignmentExpression	"rval = readword ( fp , op )"		4810689	0		=			
ANR	4810705	Identifier	rval		4810689	0					
ANR	4810706	CallExpression	"readword ( fp , op )"		4810689	1					
ANR	4810707	Callee	readword		4810689	0					
ANR	4810708	Identifier	readword		4810689	0					
ANR	4810709	ArgumentList	fp		4810689	1					
ANR	4810710	Argument	fp		4810689	0					
ANR	4810711	Identifier	fp		4810689	0					
ANR	4810712	Argument	op		4810689	1					
ANR	4810713	Identifier	op		4810689	0					
ANR	4810714	IfStatement	if ( rval < 0 )		4810689	3					
ANR	4810715	Condition	rval < 0	173:8:3255:3262	4810689	0	True				
ANR	4810716	RelationalExpression	rval < 0		4810689	0		<			
ANR	4810717	Identifier	rval		4810689	0					
ANR	4810718	PrimaryExpression	0		4810689	1					
ANR	4810719	CompoundStatement		6:18:84:84	4810689	1					
ANR	4810720	ReturnStatement	return rval ;	174:8:3275:3286	4810689	0	True				
ANR	4810721	Identifier	rval		4810689	0					
ANR	4810722	ExpressionStatement	op_type = atoi ( op )	176:4:3298:3316	4810689	4	True				
ANR	4810723	AssignmentExpression	op_type = atoi ( op )		4810689	0		=			
ANR	4810724	Identifier	op_type		4810689	0					
ANR	4810725	CallExpression	atoi ( op )		4810689	1					
ANR	4810726	Callee	atoi		4810689	0					
ANR	4810727	Identifier	atoi		4810689	0					
ANR	4810728	ArgumentList	op		4810689	1					
ANR	4810729	Argument	op		4810689	0					
ANR	4810730	Identifier	op		4810689	0					
ANR	4810731	ExpressionStatement	free ( op )	177:4:3322:3330	4810689	5	True				
ANR	4810732	CallExpression	free ( op )		4810689	0					
ANR	4810733	Callee	free		4810689	0					
ANR	4810734	Identifier	free		4810689	0					
ANR	4810735	ArgumentList	op		4810689	1					
ANR	4810736	Argument	op		4810689	0					
ANR	4810737	Identifier	op		4810689	0					
ANR	4810738	ReturnStatement	return rval ;	178:4:3336:3347	4810689	6	True				
ANR	4810739	Identifier	rval		4810689	0					
ANR	4810740	ReturnType	int		4810689	1					
ANR	4810741	Identifier	LogRecord :: ReadHeader		4810689	2					
ANR	4810742	ParameterList	FILE * fp		4810689	3					
ANR	4810743	Parameter	FILE * fp	167:22:3170:3177	4810689	0	True				
ANR	4810744	ParameterType	FILE *		4810689	0					
ANR	4810745	Identifier	fp		4810689	1					
ANR	4810746	CFGEntryNode	ENTRY		4810689		True				
ANR	4810747	CFGExitNode	EXIT		4810689		True				
ANR	4810748	Symbol	atoi		4810689						
ANR	4810749	Symbol	op		4810689						
ANR	4810750	Symbol	NULL		4810689						
ANR	4810751	Symbol	fp		4810689						
ANR	4810752	Symbol	rval		4810689						
ANR	4810753	Symbol	readword		4810689						
ANR	4810754	Symbol	op_type		4810689						
ANR	4810755	Function	ReadLogEntry	190:0:3544:3911							
ANR	4810756	FunctionDef	"ReadLogEntry (FILE * fp , LogRecord * ( * InstantiateLogEntry ) ( FILE * fp , int type ))"		4810755	0					
ANR	4810757	CompoundStatement		192:0:3634:3911	4810755	0					
ANR	4810758	IdentifierDeclStatement	LogRecord * log_rec ;	193:1:3637:3656	4810755	0	True				
ANR	4810759	IdentifierDecl	* log_rec		4810755	0					
ANR	4810760	IdentifierDeclType	LogRecord *		4810755	0					
ANR	4810761	Identifier	log_rec		4810755	1					
ANR	4810762	IdentifierDeclStatement	LogRecordHead head_only ;	194:1:3659:3682	4810755	1	True				
ANR	4810763	IdentifierDecl	head_only		4810755	0					
ANR	4810764	IdentifierDeclType	LogRecordHead		4810755	0					
ANR	4810765	Identifier	head_only		4810755	1					
ANR	4810766	IdentifierDeclStatement	int rval ;	195:1:3685:3696	4810755	2	True				
ANR	4810767	IdentifierDecl	rval		4810755	0					
ANR	4810768	IdentifierDeclType	int		4810755	0					
ANR	4810769	Identifier	rval		4810755	1					
ANR	4810770	ExpressionStatement	rval = head_only . ReadHeader ( fp )	197:1:3700:3731	4810755	3	True				
ANR	4810771	AssignmentExpression	rval = head_only . ReadHeader ( fp )		4810755	0		=			
ANR	4810772	Identifier	rval		4810755	0					
ANR	4810773	CallExpression	head_only . ReadHeader ( fp )		4810755	1					
ANR	4810774	Callee	head_only . ReadHeader		4810755	0					
ANR	4810775	MemberAccess	head_only . ReadHeader		4810755	0					
ANR	4810776	Identifier	head_only		4810755	0					
ANR	4810777	Identifier	ReadHeader		4810755	1					
ANR	4810778	ArgumentList	fp		4810755	1					
ANR	4810779	Argument	fp		4810755	0					
ANR	4810780	Identifier	fp		4810755	0					
ANR	4810781	IfStatement	if ( rval < 0 )		4810755	4					
ANR	4810782	Condition	rval < 0	198:5:3738:3745	4810755	0	True				
ANR	4810783	RelationalExpression	rval < 0		4810755	0		<			
ANR	4810784	Identifier	rval		4810755	0					
ANR	4810785	PrimaryExpression	0		4810755	1					
ANR	4810786	CompoundStatement		7:15:113:113	4810755	1					
ANR	4810787	ReturnStatement	return 0 ;	199:2:3752:3760	4810755	0	True				
ANR	4810788	PrimaryExpression	0		4810755	0					
ANR	4810789	ExpressionStatement	"log_rec = InstantiateLogEntry ( fp , head_only . get_op_type ( ) )"	201:1:3766:3824	4810755	5	True				
ANR	4810790	AssignmentExpression	"log_rec = InstantiateLogEntry ( fp , head_only . get_op_type ( ) )"		4810755	0		=			
ANR	4810791	Identifier	log_rec		4810755	0					
ANR	4810792	CallExpression	"InstantiateLogEntry ( fp , head_only . get_op_type ( ) )"		4810755	1					
ANR	4810793	Callee	InstantiateLogEntry		4810755	0					
ANR	4810794	Identifier	InstantiateLogEntry		4810755	0					
ANR	4810795	ArgumentList	fp		4810755	1					
ANR	4810796	Argument	fp		4810755	0					
ANR	4810797	Identifier	fp		4810755	0					
ANR	4810798	Argument	head_only . get_op_type ( )		4810755	1					
ANR	4810799	CallExpression	head_only . get_op_type ( )		4810755	0					
ANR	4810800	Callee	head_only . get_op_type		4810755	0					
ANR	4810801	MemberAccess	head_only . get_op_type		4810755	0					
ANR	4810802	Identifier	head_only		4810755	0					
ANR	4810803	Identifier	get_op_type		4810755	1					
ANR	4810804	ArgumentList			4810755	1					
ANR	4810805	IfStatement	if ( head_only . ReadTail ( fp ) < 0 )		4810755	6					
ANR	4810806	Condition	head_only . ReadTail ( fp ) < 0	202:5:3831:3856	4810755	0	True				
ANR	4810807	RelationalExpression	head_only . ReadTail ( fp ) < 0		4810755	0		<			
ANR	4810808	CallExpression	head_only . ReadTail ( fp )		4810755	0					
ANR	4810809	Callee	head_only . ReadTail		4810755	0					
ANR	4810810	MemberAccess	head_only . ReadTail		4810755	0					
ANR	4810811	Identifier	head_only		4810755	0					
ANR	4810812	Identifier	ReadTail		4810755	1					
ANR	4810813	ArgumentList	fp		4810755	1					
ANR	4810814	Argument	fp		4810755	0					
ANR	4810815	Identifier	fp		4810755	0					
ANR	4810816	PrimaryExpression	0		4810755	1					
ANR	4810817	CompoundStatement		11:33:224:224	4810755	1					
ANR	4810818	Statement	delete	203:2:3863:3868	4810755	0	True				
ANR	4810819	ExpressionStatement	log_rec	203:9:3870:3877	4810755	1	True				
ANR	4810820	Identifier	log_rec		4810755	0					
ANR	4810821	ReturnStatement	return 0 ;	204:2:3881:3889	4810755	2	True				
ANR	4810822	PrimaryExpression	0		4810755	0					
ANR	4810823	ReturnStatement	return log_rec ;	206:1:3895:3909	4810755	7	True				
ANR	4810824	Identifier	log_rec		4810755	0					
ANR	4810825	ReturnType	LogRecord *		4810755	1					
ANR	4810826	Identifier	ReadLogEntry		4810755	2					
ANR	4810827	ParameterList	"FILE * fp , LogRecord * ( * InstantiateLogEntry ) ( FILE * fp , int type )"		4810755	3					
ANR	4810828	Parameter	FILE * fp	191:13:3569:3576	4810755	0	True				
ANR	4810829	ParameterType	FILE *		4810755	0					
ANR	4810830	Identifier	fp		4810755	1					
ANR	4810831	Parameter	"LogRecord * ( * InstantiateLogEntry ) ( FILE * fp , int type )"	191:23:3579:3631	4810755	1	True				
ANR	4810832	ParameterType	"(* ( FILE * fp , int type ) LogRecord) *"		4810755	0					
ANR	4810833	Identifier	InstantiateLogEntry		4810755	1					
ANR	4810834	CFGEntryNode	ENTRY		4810755		True				
ANR	4810835	CFGExitNode	EXIT		4810755		True				
ANR	4810836	Symbol	head_only . get_op_type		4810755						
ANR	4810837	Symbol	log_rec		4810755						
ANR	4810838	Symbol	head_only . ReadHeader		4810755						
ANR	4810839	Symbol	head_only		4810755						
ANR	4810840	Symbol	fp		4810755						
ANR	4810841	Symbol	rval		4810755						
ANR	4810842	Symbol	head_only . ReadTail		4810755						
ANR	4810843	Symbol	InstantiateLogEntry		4810755						
