command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4532662	File	data/converged/CVE-2011-4930_htcondor/src_condor_unit_tests_unit_test_utils.cpp								
ANR	4532663	Function	utest_sock_eq_octet	28:0:968:1270							
ANR	4532664	FunctionDef	"utest_sock_eq_octet (struct in_addr * address , unsigned char oct1 , unsigned char oct2 , unsigned char oct3 , unsigned char oct4)"		4532663	0					
ANR	4532665	CompoundStatement		32:28:1129:1270	4532663	0					
ANR	4532666	IdentifierDeclStatement	unsigned char * byte = ( unsigned char * ) address ;	33:1:1132:1178	4532663	0	True				
ANR	4532667	IdentifierDecl	* byte = ( unsigned char * ) address		4532663	0					
ANR	4532668	IdentifierDeclType	unsigned char *		4532663	0					
ANR	4532669	Identifier	byte		4532663	1					
ANR	4532670	AssignmentExpression	* byte = ( unsigned char * ) address		4532663	2		=			
ANR	4532671	Identifier	byte		4532663	0					
ANR	4532672	CastExpression	( unsigned char * ) address		4532663	1					
ANR	4532673	CastTarget	unsigned char *		4532663	0					
ANR	4532674	Identifier	address		4532663	1					
ANR	4532675	ReturnStatement	return ( * byte == oct1 && * ( byte + 1 ) == oct2 && * ( byte + 2 ) == oct3 && * ( byte + 3 ) == oct4 ) ;	34:1:1181:1268	4532663	1	True				
ANR	4532676	AndExpression	* byte == oct1 && * ( byte + 1 ) == oct2 && * ( byte + 2 ) == oct3 && * ( byte + 3 ) == oct4		4532663	0		&&			
ANR	4532677	EqualityExpression	* byte == oct1		4532663	0		==			
ANR	4532678	UnaryOperationExpression	* byte		4532663	0					
ANR	4532679	UnaryOperator	*		4532663	0					
ANR	4532680	Identifier	byte		4532663	1					
ANR	4532681	Identifier	oct1		4532663	1					
ANR	4532682	AndExpression	* ( byte + 1 ) == oct2 && * ( byte + 2 ) == oct3 && * ( byte + 3 ) == oct4		4532663	1		&&			
ANR	4532683	EqualityExpression	* ( byte + 1 ) == oct2		4532663	0		==			
ANR	4532684	UnaryOperationExpression	* ( byte + 1 )		4532663	0					
ANR	4532685	UnaryOperator	*		4532663	0					
ANR	4532686	AdditiveExpression	byte + 1		4532663	1		+			
ANR	4532687	Identifier	byte		4532663	0					
ANR	4532688	PrimaryExpression	1		4532663	1					
ANR	4532689	Identifier	oct2		4532663	1					
ANR	4532690	AndExpression	* ( byte + 2 ) == oct3 && * ( byte + 3 ) == oct4		4532663	1		&&			
ANR	4532691	EqualityExpression	* ( byte + 2 ) == oct3		4532663	0		==			
ANR	4532692	UnaryOperationExpression	* ( byte + 2 )		4532663	0					
ANR	4532693	UnaryOperator	*		4532663	0					
ANR	4532694	AdditiveExpression	byte + 2		4532663	1		+			
ANR	4532695	Identifier	byte		4532663	0					
ANR	4532696	PrimaryExpression	2		4532663	1					
ANR	4532697	Identifier	oct3		4532663	1					
ANR	4532698	EqualityExpression	* ( byte + 3 ) == oct4		4532663	1		==			
ANR	4532699	UnaryOperationExpression	* ( byte + 3 )		4532663	0					
ANR	4532700	UnaryOperator	*		4532663	0					
ANR	4532701	AdditiveExpression	byte + 3		4532663	1		+			
ANR	4532702	Identifier	byte		4532663	0					
ANR	4532703	PrimaryExpression	3		4532663	1					
ANR	4532704	Identifier	oct4		4532663	1					
ANR	4532705	ReturnType	bool		4532663	1					
ANR	4532706	Identifier	utest_sock_eq_octet		4532663	2					
ANR	4532707	ParameterList	"struct in_addr * address , unsigned char oct1 , unsigned char oct2 , unsigned char oct3 , unsigned char oct4"		4532663	3					
ANR	4532708	Parameter	struct in_addr * address	28:27:995:1017	4532663	0	True				
ANR	4532709	ParameterType	struct in_addr *		4532663	0					
ANR	4532710	Identifier	address		4532663	1					
ANR	4532711	Parameter	unsigned char oct1	29:7:1027:1044	4532663	1	True				
ANR	4532712	ParameterType	unsigned char		4532663	0					
ANR	4532713	Identifier	oct1		4532663	1					
ANR	4532714	Parameter	unsigned char oct2	30:7:1054:1071	4532663	2	True				
ANR	4532715	ParameterType	unsigned char		4532663	0					
ANR	4532716	Identifier	oct2		4532663	1					
ANR	4532717	Parameter	unsigned char oct3	31:7:1081:1098	4532663	3	True				
ANR	4532718	ParameterType	unsigned char		4532663	0					
ANR	4532719	Identifier	oct3		4532663	1					
ANR	4532720	Parameter	unsigned char oct4	32:7:1108:1125	4532663	4	True				
ANR	4532721	ParameterType	unsigned char		4532663	0					
ANR	4532722	Identifier	oct4		4532663	1					
ANR	4532723	CFGEntryNode	ENTRY		4532663		True				
ANR	4532724	CFGExitNode	EXIT		4532663		True				
ANR	4532725	Symbol	oct3		4532663						
ANR	4532726	Symbol	oct2		4532663						
ANR	4532727	Symbol	oct1		4532663						
ANR	4532728	Symbol	* byte		4532663						
ANR	4532729	Symbol	address		4532663						
ANR	4532730	Symbol	byte		4532663						
ANR	4532731	Symbol	oct4		4532663						
ANR	4532732	Symbol	* ( byte + 3 )		4532663						
ANR	4532733	Symbol	* ( byte + 2 )		4532663						
ANR	4532734	Symbol	* ( byte + 1 )		4532663						
ANR	4532735	Function	tfstr	38:0:1337:1410							
ANR	4532736	FunctionDef	tfstr (bool var)		4532735	0					
ANR	4532737	CompoundStatement		38:30:1367:1410	4532735	0					
ANR	4532738	IfStatement	if ( var )		4532735	0					
ANR	4532739	Condition	var	39:4:1373:1375	4532735	0	True				
ANR	4532740	Identifier	var		4532735	0					
ANR	4532741	ReturnStatement	"return ""TRUE"" ;"	39:9:1378:1391	4532735	1	True				
ANR	4532742	PrimaryExpression	"""TRUE"""		4532735	0					
ANR	4532743	ReturnStatement	"return ""FALSE"" ;"	40:1:1394:1408	4532735	1	True				
ANR	4532744	PrimaryExpression	"""FALSE"""		4532735	0					
ANR	4532745	ReturnType	const char *		4532735	1					
ANR	4532746	Identifier	tfstr		4532735	2					
ANR	4532747	ParameterList	bool var		4532735	3					
ANR	4532748	Parameter	bool var	38:19:1356:1363	4532735	0	True				
ANR	4532749	ParameterType	bool		4532735	0					
ANR	4532750	Identifier	var		4532735	1					
ANR	4532751	CFGEntryNode	ENTRY		4532735		True				
ANR	4532752	CFGExitNode	EXIT		4532735		True				
ANR	4532753	Symbol	var		4532735						
ANR	4532754	Function	tfstr	44:0:1470:1550							
ANR	4532755	FunctionDef	tfstr (int var)		4532754	0					
ANR	4532756	CompoundStatement		44:29:1499:1550	4532754	0					
ANR	4532757	IfStatement	if ( var == TRUE )		4532754	0					
ANR	4532758	Condition	var == TRUE	45:4:1505:1515	4532754	0	True				
ANR	4532759	EqualityExpression	var == TRUE		4532754	0		==			
ANR	4532760	Identifier	var		4532754	0					
ANR	4532761	Identifier	TRUE		4532754	1					
ANR	4532762	ReturnStatement	"return ""TRUE"" ;"	45:17:1518:1531	4532754	1	True				
ANR	4532763	PrimaryExpression	"""TRUE"""		4532754	0					
ANR	4532764	ReturnStatement	"return ""FALSE"" ;"	46:1:1534:1548	4532754	1	True				
ANR	4532765	PrimaryExpression	"""FALSE"""		4532754	0					
ANR	4532766	ReturnType	const char *		4532754	1					
ANR	4532767	Identifier	tfstr		4532754	2					
ANR	4532768	ParameterList	int var		4532754	3					
ANR	4532769	Parameter	int var	44:19:1489:1495	4532754	0	True				
ANR	4532770	ParameterType	int		4532754	0					
ANR	4532771	Identifier	var		4532754	1					
ANR	4532772	CFGEntryNode	ENTRY		4532754		True				
ANR	4532773	CFGExitNode	EXIT		4532754		True				
ANR	4532774	Symbol	var		4532754						
ANR	4532775	Symbol	TRUE		4532754						
ANR	4532776	Function	tfnze	50:0:1611:1689							
ANR	4532777	FunctionDef	tfnze (int var)		4532776	0					
ANR	4532778	CompoundStatement		50:29:1640:1689	4532776	0					
ANR	4532779	IfStatement	if ( var != - 1 )		4532776	0					
ANR	4532780	Condition	var != - 1	51:4:1646:1654	4532776	0	True				
ANR	4532781	EqualityExpression	var != - 1		4532776	0		!=			
ANR	4532782	Identifier	var		4532776	0					
ANR	4532783	UnaryOperationExpression	- 1		4532776	1					
ANR	4532784	UnaryOperator	-		4532776	0					
ANR	4532785	PrimaryExpression	1		4532776	1					
ANR	4532786	ReturnStatement	"return ""TRUE"" ;"	51:15:1657:1670	4532776	1	True				
ANR	4532787	PrimaryExpression	"""TRUE"""		4532776	0					
ANR	4532788	ReturnStatement	"return ""FALSE"" ;"	52:1:1673:1687	4532776	1	True				
ANR	4532789	PrimaryExpression	"""FALSE"""		4532776	0					
ANR	4532790	ReturnType	const char *		4532776	1					
ANR	4532791	Identifier	tfnze		4532776	2					
ANR	4532792	ParameterList	int var		4532776	3					
ANR	4532793	Parameter	int var	50:19:1630:1636	4532776	0	True				
ANR	4532794	ParameterType	int		4532776	0					
ANR	4532795	Identifier	var		4532776	1					
ANR	4532796	CFGEntryNode	ENTRY		4532776		True				
ANR	4532797	CFGExitNode	EXIT		4532776		True				
ANR	4532798	Symbol	var		4532776						
ANR	4532799	Function	vsprintfHelper	55:0:1692:1886							
ANR	4532800	FunctionDef	"vsprintfHelper (MyString * str , const char * format)"		4532799	0					
ANR	4532801	CompoundStatement		55:60:1752:1886	4532799	0					
ANR	4532802	IdentifierDeclStatement	va_list args ;	56:1:1755:1767	4532799	0	True				
ANR	4532803	IdentifierDecl	args		4532799	0					
ANR	4532804	IdentifierDeclType	va_list		4532799	0					
ANR	4532805	Identifier	args		4532799	1					
ANR	4532806	IdentifierDeclStatement	bool toReturn ;	57:1:1770:1783	4532799	1	True				
ANR	4532807	IdentifierDecl	toReturn		4532799	0					
ANR	4532808	IdentifierDeclType	bool		4532799	0					
ANR	4532809	Identifier	toReturn		4532799	1					
ANR	4532810	ExpressionStatement	"va_start ( args , format )"	59:1:1787:1809	4532799	2	True				
ANR	4532811	CallExpression	"va_start ( args , format )"		4532799	0					
ANR	4532812	Callee	va_start		4532799	0					
ANR	4532813	Identifier	va_start		4532799	0					
ANR	4532814	ArgumentList	args		4532799	1					
ANR	4532815	Argument	args		4532799	0					
ANR	4532816	Identifier	args		4532799	0					
ANR	4532817	Argument	format		4532799	1					
ANR	4532818	Identifier	format		4532799	0					
ANR	4532819	ExpressionStatement	"toReturn = str -> vsprintf ( format , args )"	60:1:1812:1850	4532799	3	True				
ANR	4532820	AssignmentExpression	"toReturn = str -> vsprintf ( format , args )"		4532799	0		=			
ANR	4532821	Identifier	toReturn		4532799	0					
ANR	4532822	CallExpression	"str -> vsprintf ( format , args )"		4532799	1					
ANR	4532823	Callee	str -> vsprintf		4532799	0					
ANR	4532824	PtrMemberAccess	str -> vsprintf		4532799	0					
ANR	4532825	Identifier	str		4532799	0					
ANR	4532826	Identifier	vsprintf		4532799	1					
ANR	4532827	ArgumentList	format		4532799	1					
ANR	4532828	Argument	format		4532799	0					
ANR	4532829	Identifier	format		4532799	0					
ANR	4532830	Argument	args		4532799	1					
ANR	4532831	Identifier	args		4532799	0					
ANR	4532832	ExpressionStatement	va_end ( args )	61:1:1853:1865	4532799	4	True				
ANR	4532833	CallExpression	va_end ( args )		4532799	0					
ANR	4532834	Callee	va_end		4532799	0					
ANR	4532835	Identifier	va_end		4532799	0					
ANR	4532836	ArgumentList	args		4532799	1					
ANR	4532837	Argument	args		4532799	0					
ANR	4532838	Identifier	args		4532799	0					
ANR	4532839	ReturnStatement	return toReturn ;	63:1:1869:1884	4532799	5	True				
ANR	4532840	Identifier	toReturn		4532799	0					
ANR	4532841	ReturnType	bool		4532799	1					
ANR	4532842	Identifier	vsprintfHelper		4532799	2					
ANR	4532843	ParameterList	"MyString * str , const char * format"		4532799	3					
ANR	4532844	Parameter	MyString * str	55:20:1712:1724	4532799	0	True				
ANR	4532845	ParameterType	MyString *		4532799	0					
ANR	4532846	Identifier	str		4532799	1					
ANR	4532847	Parameter	const char * format	55:35:1727:1744	4532799	1	True				
ANR	4532848	ParameterType	const char *		4532799	0					
ANR	4532849	Identifier	format		4532799	1					
ANR	4532850	CFGEntryNode	ENTRY		4532799		True				
ANR	4532851	CFGExitNode	EXIT		4532799		True				
ANR	4532852	Symbol	str		4532799						
ANR	4532853	Symbol	args		4532799						
ANR	4532854	Symbol	str -> vsprintf		4532799						
ANR	4532855	Symbol	toReturn		4532799						
ANR	4532856	Symbol	format		4532799						
ANR	4532857	Symbol	* str		4532799						
ANR	4532858	Function	vsprintf_catHelper	66:0:1889:2091							
ANR	4532859	FunctionDef	"vsprintf_catHelper (MyString * str , const char * format)"		4532858	0					
ANR	4532860	CompoundStatement		66:64:1953:2091	4532858	0					
ANR	4532861	IdentifierDeclStatement	va_list args ;	67:1:1956:1968	4532858	0	True				
ANR	4532862	IdentifierDecl	args		4532858	0					
ANR	4532863	IdentifierDeclType	va_list		4532858	0					
ANR	4532864	Identifier	args		4532858	1					
ANR	4532865	IdentifierDeclStatement	bool toReturn ;	68:1:1971:1984	4532858	1	True				
ANR	4532866	IdentifierDecl	toReturn		4532858	0					
ANR	4532867	IdentifierDeclType	bool		4532858	0					
ANR	4532868	Identifier	toReturn		4532858	1					
ANR	4532869	ExpressionStatement	"va_start ( args , format )"	70:1:1988:2010	4532858	2	True				
ANR	4532870	CallExpression	"va_start ( args , format )"		4532858	0					
ANR	4532871	Callee	va_start		4532858	0					
ANR	4532872	Identifier	va_start		4532858	0					
ANR	4532873	ArgumentList	args		4532858	1					
ANR	4532874	Argument	args		4532858	0					
ANR	4532875	Identifier	args		4532858	0					
ANR	4532876	Argument	format		4532858	1					
ANR	4532877	Identifier	format		4532858	0					
ANR	4532878	ExpressionStatement	"toReturn = str -> vsprintf_cat ( format , args )"	71:1:2013:2055	4532858	3	True				
ANR	4532879	AssignmentExpression	"toReturn = str -> vsprintf_cat ( format , args )"		4532858	0		=			
ANR	4532880	Identifier	toReturn		4532858	0					
ANR	4532881	CallExpression	"str -> vsprintf_cat ( format , args )"		4532858	1					
ANR	4532882	Callee	str -> vsprintf_cat		4532858	0					
ANR	4532883	PtrMemberAccess	str -> vsprintf_cat		4532858	0					
ANR	4532884	Identifier	str		4532858	0					
ANR	4532885	Identifier	vsprintf_cat		4532858	1					
ANR	4532886	ArgumentList	format		4532858	1					
ANR	4532887	Argument	format		4532858	0					
ANR	4532888	Identifier	format		4532858	0					
ANR	4532889	Argument	args		4532858	1					
ANR	4532890	Identifier	args		4532858	0					
ANR	4532891	ExpressionStatement	va_end ( args )	72:1:2058:2070	4532858	4	True				
ANR	4532892	CallExpression	va_end ( args )		4532858	0					
ANR	4532893	Callee	va_end		4532858	0					
ANR	4532894	Identifier	va_end		4532858	0					
ANR	4532895	ArgumentList	args		4532858	1					
ANR	4532896	Argument	args		4532858	0					
ANR	4532897	Identifier	args		4532858	0					
ANR	4532898	ReturnStatement	return toReturn ;	74:1:2074:2089	4532858	5	True				
ANR	4532899	Identifier	toReturn		4532858	0					
ANR	4532900	ReturnType	bool		4532858	1					
ANR	4532901	Identifier	vsprintf_catHelper		4532858	2					
ANR	4532902	ParameterList	"MyString * str , const char * format"		4532858	3					
ANR	4532903	Parameter	MyString * str	66:24:1913:1925	4532858	0	True				
ANR	4532904	ParameterType	MyString *		4532858	0					
ANR	4532905	Identifier	str		4532858	1					
ANR	4532906	Parameter	const char * format	66:39:1928:1945	4532858	1	True				
ANR	4532907	ParameterType	const char *		4532858	0					
ANR	4532908	Identifier	format		4532858	1					
ANR	4532909	CFGEntryNode	ENTRY		4532858		True				
ANR	4532910	CFGExitNode	EXIT		4532858		True				
ANR	4532911	Symbol	str		4532858						
ANR	4532912	Symbol	args		4532858						
ANR	4532913	Symbol	str -> vsprintf_cat		4532858						
ANR	4532914	Symbol	toReturn		4532858						
ANR	4532915	Symbol	format		4532858						
ANR	4532916	Symbol	* str		4532858						
ANR	4532917	Function	nicePrint	78:0:2156:2233							
ANR	4532918	FunctionDef	nicePrint (const char * str)		4532917	0					
ANR	4532919	CompoundStatement		78:39:2195:2233	4532917	0					
ANR	4532920	IfStatement	if ( ! str )		4532917	0					
ANR	4532921	Condition	! str	79:4:2201:2204	4532917	0	True				
ANR	4532922	UnaryOperationExpression	! str		4532917	0					
ANR	4532923	UnaryOperator	!		4532917	0					
ANR	4532924	Identifier	str		4532917	1					
ANR	4532925	ReturnStatement	"return """" ;"	80:2:2209:2218	4532917	1	True				
ANR	4532926	PrimaryExpression	""""""		4532917	0					
ANR	4532927	ReturnStatement	return str ;	81:1:2221:2231	4532917	1	True				
ANR	4532928	Identifier	str		4532917	0					
ANR	4532929	ReturnType	const char *		4532917	1					
ANR	4532930	Identifier	nicePrint		4532917	2					
ANR	4532931	ParameterList	const char * str		4532917	3					
ANR	4532932	Parameter	const char * str	78:22:2178:2192	4532917	0	True				
ANR	4532933	ParameterType	const char *		4532917	0					
ANR	4532934	Identifier	str		4532917	1					
ANR	4532935	CFGEntryNode	ENTRY		4532917		True				
ANR	4532936	CFGExitNode	EXIT		4532917		True				
ANR	4532937	Symbol	str		4532917						
ANR	4532938	Function	niceStrCmp	85:0:2295:2534							
ANR	4532939	FunctionDef	"niceStrCmp (const char * str1 , const char * str2)"		4532938	0					
ANR	4532940	CompoundStatement		85:51:2346:2534	4532938	0					
ANR	4532941	IfStatement	if ( ! str1 )		4532938	0					
ANR	4532942	Condition	! str1	86:4:2352:2356	4532938	0	True				
ANR	4532943	UnaryOperationExpression	! str1		4532938	0					
ANR	4532944	UnaryOperator	!		4532938	0					
ANR	4532945	Identifier	str1		4532938	1					
ANR	4532946	CompoundStatement		2:11:12:12	4532938	1					
ANR	4532947	IfStatement	if ( ! str2 )		4532938	0					
ANR	4532948	Condition	! str2	87:5:2366:2370	4532938	0	True				
ANR	4532949	UnaryOperationExpression	! str2		4532938	0					
ANR	4532950	UnaryOperator	!		4532938	0					
ANR	4532951	Identifier	str2		4532938	1					
ANR	4532952	CompoundStatement		3:12:26:26	4532938	1					
ANR	4532953	ReturnStatement	return 0 ;	88:3:2378:2386	4532938	0	True				
ANR	4532954	PrimaryExpression	0		4532938	0					
ANR	4532955	ElseStatement	else		4532938	0					
ANR	4532956	CompoundStatement		5:9:62:62	4532938	0					
ANR	4532957	ReturnStatement	"return strcmp ( str2 , """" ) ;"	90:3:2414:2437	4532938	0	True				
ANR	4532958	CallExpression	"strcmp ( str2 , """" )"		4532938	0					
ANR	4532959	Callee	strcmp		4532938	0					
ANR	4532960	Identifier	strcmp		4532938	0					
ANR	4532961	ArgumentList	str2		4532938	1					
ANR	4532962	Argument	str2		4532938	0					
ANR	4532963	Identifier	str2		4532938	0					
ANR	4532964	Argument	""""""		4532938	1					
ANR	4532965	PrimaryExpression	""""""		4532938	0					
ANR	4532966	IfStatement	if ( ! str2 )		4532938	1					
ANR	4532967	Condition	! str2	93:4:2461:2465	4532938	0	True				
ANR	4532968	UnaryOperationExpression	! str2		4532938	0					
ANR	4532969	UnaryOperator	!		4532938	0					
ANR	4532970	Identifier	str2		4532938	1					
ANR	4532971	ReturnStatement	"return strcmp ( str1 , """" ) ;"	94:2:2470:2493	4532938	1	True				
ANR	4532972	CallExpression	"strcmp ( str1 , """" )"		4532938	0					
ANR	4532973	Callee	strcmp		4532938	0					
ANR	4532974	Identifier	strcmp		4532938	0					
ANR	4532975	ArgumentList	str1		4532938	1					
ANR	4532976	Argument	str1		4532938	0					
ANR	4532977	Identifier	str1		4532938	0					
ANR	4532978	Argument	""""""		4532938	1					
ANR	4532979	PrimaryExpression	""""""		4532938	0					
ANR	4532980	ReturnStatement	"return strcmp ( str1 , str2 ) ;"	95:1:2507:2532	4532938	2	True				
ANR	4532981	CallExpression	"strcmp ( str1 , str2 )"		4532938	0					
ANR	4532982	Callee	strcmp		4532938	0					
ANR	4532983	Identifier	strcmp		4532938	0					
ANR	4532984	ArgumentList	str1		4532938	1					
ANR	4532985	Argument	str1		4532938	0					
ANR	4532986	Identifier	str1		4532938	0					
ANR	4532987	Argument	str2		4532938	1					
ANR	4532988	Identifier	str2		4532938	0					
ANR	4532989	ReturnType	int		4532938	1					
ANR	4532990	Identifier	niceStrCmp		4532938	2					
ANR	4532991	ParameterList	"const char * str1 , const char * str2"		4532938	3					
ANR	4532992	Parameter	const char * str1	85:15:2310:2325	4532938	0	True				
ANR	4532993	ParameterType	const char *		4532938	0					
ANR	4532994	Identifier	str1		4532938	1					
ANR	4532995	Parameter	const char * str2	85:33:2328:2343	4532938	1	True				
ANR	4532996	ParameterType	const char *		4532938	0					
ANR	4532997	Identifier	str2		4532938	1					
ANR	4532998	CFGEntryNode	ENTRY		4532938		True				
ANR	4532999	CFGExitNode	EXIT		4532938		True				
ANR	4533000	Symbol	strcmp		4532938						
ANR	4533001	Symbol	str1		4532938						
ANR	4533002	Symbol	str2		4532938						
ANR	4533003	Function	string_compare_helper	101:0:2636:3012							
ANR	4533004	FunctionDef	"string_compare_helper (StringList * sl , int start)"		4533003	0					
ANR	4533005	CompoundStatement		101:56:2692:3012	4533003	0					
ANR	4533006	IfStatement	if ( start < 0 || start >= sl -> number ( ) )		4533003	0					
ANR	4533007	Condition	start < 0 || start >= sl -> number ( )	102:4:2698:2731	4533003	0	True				
ANR	4533008	OrExpression	start < 0 || start >= sl -> number ( )		4533003	0		||			
ANR	4533009	RelationalExpression	start < 0		4533003	0		<			
ANR	4533010	Identifier	start		4533003	0					
ANR	4533011	PrimaryExpression	0		4533003	1					
ANR	4533012	RelationalExpression	start >= sl -> number ( )		4533003	1		>=			
ANR	4533013	Identifier	start		4533003	0					
ANR	4533014	CallExpression	sl -> number ( )		4533003	1					
ANR	4533015	Callee	sl -> number		4533003	0					
ANR	4533016	PtrMemberAccess	sl -> number		4533003	0					
ANR	4533017	Identifier	sl		4533003	0					
ANR	4533018	Identifier	number		4533003	1					
ANR	4533019	ArgumentList			4533003	1					
ANR	4533020	ReturnStatement	return NULL ;	103:2:2736:2747	4533003	1	True				
ANR	4533021	Identifier	NULL		4533003	0					
ANR	4533022	IdentifierDeclStatement	"char * * list = ( char * * ) calloc ( sl -> number ( ) - start , sizeof ( char * ) ) ;"	105:1:2751:2817	4533003	1	True				
ANR	4533023	IdentifierDecl	"* * list = ( char * * ) calloc ( sl -> number ( ) - start , sizeof ( char * ) )"		4533003	0					
ANR	4533024	IdentifierDeclType	char * *		4533003	0					
ANR	4533025	Identifier	list		4533003	1					
ANR	4533026	AssignmentExpression	"* * list = ( char * * ) calloc ( sl -> number ( ) - start , sizeof ( char * ) )"		4533003	2		=			
ANR	4533027	Identifier	list		4533003	0					
ANR	4533028	CastExpression	"( char * * ) calloc ( sl -> number ( ) - start , sizeof ( char * ) )"		4533003	1					
ANR	4533029	CastTarget	char * *		4533003	0					
ANR	4533030	CallExpression	"calloc ( sl -> number ( ) - start , sizeof ( char * ) )"		4533003	1					
ANR	4533031	Callee	calloc		4533003	0					
ANR	4533032	Identifier	calloc		4533003	0					
ANR	4533033	ArgumentList	sl -> number ( ) - start		4533003	1					
ANR	4533034	Argument	sl -> number ( ) - start		4533003	0					
ANR	4533035	AdditiveExpression	sl -> number ( ) - start		4533003	0		-			
ANR	4533036	CallExpression	sl -> number ( )		4533003	0					
ANR	4533037	Callee	sl -> number		4533003	0					
ANR	4533038	PtrMemberAccess	sl -> number		4533003	0					
ANR	4533039	Identifier	sl		4533003	0					
ANR	4533040	Identifier	number		4533003	1					
ANR	4533041	ArgumentList			4533003	1					
ANR	4533042	Identifier	start		4533003	1					
ANR	4533043	Argument	sizeof ( char * )		4533003	1					
ANR	4533044	SizeofExpression	sizeof ( char * )		4533003	0					
ANR	4533045	Sizeof	sizeof		4533003	0					
ANR	4533046	SizeofOperand	char *		4533003	1					
ANR	4533047	IdentifierDeclStatement	char * str ;	106:1:2820:2829	4533003	2	True				
ANR	4533048	IdentifierDecl	* str		4533003	0					
ANR	4533049	IdentifierDeclType	char *		4533003	0					
ANR	4533050	Identifier	str		4533003	1					
ANR	4533051	IdentifierDeclStatement	int i ;	107:1:2832:2837	4533003	3	True				
ANR	4533052	IdentifierDecl	i		4533003	0					
ANR	4533053	IdentifierDeclType	int		4533003	0					
ANR	4533054	Identifier	i		4533003	1					
ANR	4533055	ForStatement	"for ( i = 0 , sl -> rewind ( ) ; i < start ; i ++ )"		4533003	4					
ANR	4533056	ForInit	"i = 0 , sl -> rewind ( ) ;"	109:5:2846:2865	4533003	0	True				
ANR	4533057	Expression	"i = 0 , sl -> rewind ( )"		4533003	0					
ANR	4533058	AssignmentExpression	i = 0		4533003	0		=			
ANR	4533059	Identifier	i		4533003	0					
ANR	4533060	PrimaryExpression	0		4533003	1					
ANR	4533061	CallExpression	sl -> rewind ( )		4533003	1					
ANR	4533062	Callee	sl -> rewind		4533003	0					
ANR	4533063	PtrMemberAccess	sl -> rewind		4533003	0					
ANR	4533064	Identifier	sl		4533003	0					
ANR	4533065	Identifier	rewind		4533003	1					
ANR	4533066	ArgumentList			4533003	1					
ANR	4533067	Condition	i < start	109:26:2867:2875	4533003	1	True				
ANR	4533068	RelationalExpression	i < start		4533003	0		<			
ANR	4533069	Identifier	i		4533003	0					
ANR	4533070	Identifier	start		4533003	1					
ANR	4533071	PostIncDecOperationExpression	i ++	109:37:2878:2880	4533003	2	True				
ANR	4533072	Identifier	i		4533003	0					
ANR	4533073	IncDec	++		4533003	1					
ANR	4533074	CompoundStatement		9:41:189:189	4533003	3					
ANR	4533075	ExpressionStatement	sl -> next ( )	110:2:2887:2897	4533003	0	True				
ANR	4533076	CallExpression	sl -> next ( )		4533003	0					
ANR	4533077	Callee	sl -> next		4533003	0					
ANR	4533078	PtrMemberAccess	sl -> next		4533003	0					
ANR	4533079	Identifier	sl		4533003	0					
ANR	4533080	Identifier	next		4533003	1					
ANR	4533081	ArgumentList			4533003	1					
ANR	4533082	ForStatement	for ( i = 0 ; i < sl -> number ( ) - start ; i ++ )		4533003	5					
ANR	4533083	ForInit	i = 0 ;	113:5:2910:2915	4533003	0	True				
ANR	4533084	AssignmentExpression	i = 0		4533003	0		=			
ANR	4533085	Identifier	i		4533003	0					
ANR	4533086	PrimaryExpression	0		4533003	1					
ANR	4533087	Condition	i < sl -> number ( ) - start	113:12:2917:2940	4533003	1	True				
ANR	4533088	RelationalExpression	i < sl -> number ( ) - start		4533003	0		<			
ANR	4533089	Identifier	i		4533003	0					
ANR	4533090	AdditiveExpression	sl -> number ( ) - start		4533003	1		-			
ANR	4533091	CallExpression	sl -> number ( )		4533003	0					
ANR	4533092	Callee	sl -> number		4533003	0					
ANR	4533093	PtrMemberAccess	sl -> number		4533003	0					
ANR	4533094	Identifier	sl		4533003	0					
ANR	4533095	Identifier	number		4533003	1					
ANR	4533096	ArgumentList			4533003	1					
ANR	4533097	Identifier	start		4533003	1					
ANR	4533098	PostIncDecOperationExpression	i ++	113:38:2943:2945	4533003	2	True				
ANR	4533099	Identifier	i		4533003	0					
ANR	4533100	IncDec	++		4533003	1					
ANR	4533101	CompoundStatement		13:43:255:255	4533003	3					
ANR	4533102	ExpressionStatement	str = sl -> next ( )	114:2:2952:2968	4533003	0	True				
ANR	4533103	AssignmentExpression	str = sl -> next ( )		4533003	0		=			
ANR	4533104	Identifier	str		4533003	0					
ANR	4533105	CallExpression	sl -> next ( )		4533003	1					
ANR	4533106	Callee	sl -> next		4533003	0					
ANR	4533107	PtrMemberAccess	sl -> next		4533003	0					
ANR	4533108	Identifier	sl		4533003	0					
ANR	4533109	Identifier	next		4533003	1					
ANR	4533110	ArgumentList			4533003	1					
ANR	4533111	ExpressionStatement	list [ i ] = strdup ( str )	115:2:2972:2993	4533003	1	True				
ANR	4533112	AssignmentExpression	list [ i ] = strdup ( str )		4533003	0		=			
ANR	4533113	ArrayIndexing	list [ i ]		4533003	0					
ANR	4533114	Identifier	list		4533003	0					
ANR	4533115	Identifier	i		4533003	1					
ANR	4533116	CallExpression	strdup ( str )		4533003	1					
ANR	4533117	Callee	strdup		4533003	0					
ANR	4533118	Identifier	strdup		4533003	0					
ANR	4533119	ArgumentList	str		4533003	1					
ANR	4533120	Argument	str		4533003	0					
ANR	4533121	Identifier	str		4533003	0					
ANR	4533122	ReturnStatement	return list ;	117:1:2999:3010	4533003	6	True				
ANR	4533123	Identifier	list		4533003	0					
ANR	4533124	ReturnType	char * *		4533003	1					
ANR	4533125	Identifier	string_compare_helper		4533003	2					
ANR	4533126	ParameterList	"StringList * sl , int start"		4533003	3					
ANR	4533127	Parameter	StringList * sl	101:29:2665:2678	4533003	0	True				
ANR	4533128	ParameterType	StringList *		4533003	0					
ANR	4533129	Identifier	sl		4533003	1					
ANR	4533130	Parameter	int start	101:45:2681:2689	4533003	1	True				
ANR	4533131	ParameterType	int		4533003	0					
ANR	4533132	Identifier	start		4533003	1					
ANR	4533133	CFGEntryNode	ENTRY		4533003		True				
ANR	4533134	CFGExitNode	EXIT		4533003		True				
ANR	4533135	Symbol	NULL		4533003						
ANR	4533136	Symbol	sl -> next		4533003						
ANR	4533137	Symbol	start		4533003						
ANR	4533138	Symbol	i		4533003						
ANR	4533139	Symbol	calloc		4533003						
ANR	4533140	Symbol	list		4533003						
ANR	4533141	Symbol	str		4533003						
ANR	4533142	Symbol	* i		4533003						
ANR	4533143	Symbol	* list		4533003						
ANR	4533144	Symbol	sl -> number		4533003						
ANR	4533145	Symbol	sl		4533003						
ANR	4533146	Symbol	strdup		4533003						
ANR	4533147	Symbol	* sl		4533003						
ANR	4533148	Function	free_helper	121:0:3036:3161							
ANR	4533149	FunctionDef	"free_helper (char * * array , int num_strs)"		4533148	0					
ANR	4533150	CompoundStatement		121:45:3081:3161	4533148	0					
ANR	4533151	IdentifierDeclStatement	int i ;	122:1:3084:3089	4533148	0	True				
ANR	4533152	IdentifierDecl	i		4533148	0					
ANR	4533153	IdentifierDeclType	int		4533148	0					
ANR	4533154	Identifier	i		4533148	1					
ANR	4533155	ForStatement	for ( i = 0 ; i < num_strs ; i ++ )		4533148	1					
ANR	4533156	ForInit	i = 0 ;	123:5:3096:3101	4533148	0	True				
ANR	4533157	AssignmentExpression	i = 0		4533148	0		=			
ANR	4533158	Identifier	i		4533148	0					
ANR	4533159	PrimaryExpression	0		4533148	1					
ANR	4533160	Condition	i < num_strs	123:12:3103:3114	4533148	1	True				
ANR	4533161	RelationalExpression	i < num_strs		4533148	0		<			
ANR	4533162	Identifier	i		4533148	0					
ANR	4533163	Identifier	num_strs		4533148	1					
ANR	4533164	PostIncDecOperationExpression	i ++	123:26:3117:3119	4533148	2	True				
ANR	4533165	Identifier	i		4533148	0					
ANR	4533166	IncDec	++		4533148	1					
ANR	4533167	CompoundStatement		3:31:40:40	4533148	3					
ANR	4533168	ExpressionStatement	free ( array [ i ] )	124:2:3126:3140	4533148	0	True				
ANR	4533169	CallExpression	free ( array [ i ] )		4533148	0					
ANR	4533170	Callee	free		4533148	0					
ANR	4533171	Identifier	free		4533148	0					
ANR	4533172	ArgumentList	array [ i ]		4533148	1					
ANR	4533173	Argument	array [ i ]		4533148	0					
ANR	4533174	ArrayIndexing	array [ i ]		4533148	0					
ANR	4533175	Identifier	array		4533148	0					
ANR	4533176	Identifier	i		4533148	1					
ANR	4533177	ExpressionStatement	free ( array )	126:1:3148:3159	4533148	2	True				
ANR	4533178	CallExpression	free ( array )		4533148	0					
ANR	4533179	Callee	free		4533148	0					
ANR	4533180	Identifier	free		4533148	0					
ANR	4533181	ArgumentList	array		4533148	1					
ANR	4533182	Argument	array		4533148	0					
ANR	4533183	Identifier	array		4533148	0					
ANR	4533184	ReturnType	void		4533148	1					
ANR	4533185	Identifier	free_helper		4533148	2					
ANR	4533186	ParameterList	"char * * array , int num_strs"		4533148	3					
ANR	4533187	Parameter	char * * array	121:17:3053:3064	4533148	0	True				
ANR	4533188	ParameterType	char * *		4533148	0					
ANR	4533189	Identifier	array		4533148	1					
ANR	4533190	Parameter	int num_strs	121:31:3067:3078	4533148	1	True				
ANR	4533191	ParameterType	int		4533148	0					
ANR	4533192	Identifier	num_strs		4533148	1					
ANR	4533193	CFGEntryNode	ENTRY		4533148		True				
ANR	4533194	CFGExitNode	EXIT		4533148		True				
ANR	4533195	Symbol	num_strs		4533148						
ANR	4533196	Symbol	* i		4533148						
ANR	4533197	Symbol	array		4533148						
ANR	4533198	Symbol	i		4533148						
ANR	4533199	Symbol	* array		4533148						
ANR	4533200	Function	make_big_string	133:0:3340:3797							
ANR	4533201	FunctionDef	"make_big_string (int length , char * * string , char * * quoted_string)"		4533200	0					
ANR	4533202	CompoundStatement		137:0:3516:3797	4533200	0					
ANR	4533203	ExpressionStatement	* string = ( char * ) malloc ( length + 1 )	138:1:3519:3556	4533200	0	True				
ANR	4533204	AssignmentExpression	* string = ( char * ) malloc ( length + 1 )		4533200	0		=			
ANR	4533205	UnaryOperationExpression	* string		4533200	0					
ANR	4533206	UnaryOperator	*		4533200	0					
ANR	4533207	Identifier	string		4533200	1					
ANR	4533208	CastExpression	( char * ) malloc ( length + 1 )		4533200	1					
ANR	4533209	CastTarget	char *		4533200	0					
ANR	4533210	CallExpression	malloc ( length + 1 )		4533200	1					
ANR	4533211	Callee	malloc		4533200	0					
ANR	4533212	Identifier	malloc		4533200	0					
ANR	4533213	ArgumentList	length + 1		4533200	1					
ANR	4533214	Argument	length + 1		4533200	0					
ANR	4533215	AdditiveExpression	length + 1		4533200	0		+			
ANR	4533216	Identifier	length		4533200	0					
ANR	4533217	PrimaryExpression	1		4533200	1					
ANR	4533218	ForStatement	for ( int i = 0 ; i < length ; i ++ )		4533200	1					
ANR	4533219	ForInit	int i = 0 ;	140:6:3565:3574	4533200	0	True				
ANR	4533220	IdentifierDeclStatement	int i = 0 ;		4533200	0					
ANR	4533221	IdentifierDecl	i = 0		4533200	0					
ANR	4533222	IdentifierDeclType	int		4533200	0					
ANR	4533223	Identifier	i		4533200	1					
ANR	4533224	AssignmentExpression	i = 0		4533200	2		=			
ANR	4533225	Identifier	i		4533200	0					
ANR	4533226	PrimaryExpression	0		4533200	1					
ANR	4533227	Condition	i < length	140:17:3576:3585	4533200	1	True				
ANR	4533228	RelationalExpression	i < length		4533200	0		<			
ANR	4533229	Identifier	i		4533200	0					
ANR	4533230	Identifier	length		4533200	1					
ANR	4533231	PostIncDecOperationExpression	i ++	140:29:3588:3590	4533200	2	True				
ANR	4533232	Identifier	i		4533200	0					
ANR	4533233	IncDec	++		4533200	1					
ANR	4533234	CompoundStatement		4:34:76:76	4533200	3					
ANR	4533235	ExpressionStatement	( * string ) [ i ] = ( rand ( ) % 26 ) + 97	141:2:3597:3630	4533200	0	True				
ANR	4533236	AssignmentExpression	( * string ) [ i ] = ( rand ( ) % 26 ) + 97		4533200	0		=			
ANR	4533237	ArrayIndexing	( * string ) [ i ]		4533200	0					
ANR	4533238	UnaryOperationExpression	* string		4533200	0					
ANR	4533239	UnaryOperator	*		4533200	0					
ANR	4533240	Identifier	string		4533200	1					
ANR	4533241	Identifier	i		4533200	1					
ANR	4533242	AdditiveExpression	( rand ( ) % 26 ) + 97		4533200	1		+			
ANR	4533243	MultiplicativeExpression	rand ( ) % 26		4533200	0		%			
ANR	4533244	CallExpression	rand ( )		4533200	0					
ANR	4533245	Callee	rand		4533200	0					
ANR	4533246	Identifier	rand		4533200	0					
ANR	4533247	ArgumentList			4533200	1					
ANR	4533248	PrimaryExpression	26		4533200	1					
ANR	4533249	PrimaryExpression	97		4533200	1					
ANR	4533250	ExpressionStatement	( * string ) [ length ] = 0	143:1:3636:3657	4533200	2	True				
ANR	4533251	AssignmentExpression	( * string ) [ length ] = 0		4533200	0		=			
ANR	4533252	ArrayIndexing	( * string ) [ length ]		4533200	0					
ANR	4533253	UnaryOperationExpression	* string		4533200	0					
ANR	4533254	UnaryOperator	*		4533200	0					
ANR	4533255	Identifier	string		4533200	1					
ANR	4533256	Identifier	length		4533200	1					
ANR	4533257	PrimaryExpression	0		4533200	1					
ANR	4533258	IfStatement	if ( quoted_string != NULL )		4533200	3					
ANR	4533259	Condition	quoted_string != NULL	145:5:3665:3685	4533200	0	True				
ANR	4533260	EqualityExpression	quoted_string != NULL		4533200	0		!=			
ANR	4533261	Identifier	quoted_string		4533200	0					
ANR	4533262	Identifier	NULL		4533200	1					
ANR	4533263	CompoundStatement		9:28:171:171	4533200	1					
ANR	4533264	ExpressionStatement	* quoted_string = ( char * ) malloc ( length + 3 )	146:2:3692:3736	4533200	0	True				
ANR	4533265	AssignmentExpression	* quoted_string = ( char * ) malloc ( length + 3 )		4533200	0		=			
ANR	4533266	UnaryOperationExpression	* quoted_string		4533200	0					
ANR	4533267	UnaryOperator	*		4533200	0					
ANR	4533268	Identifier	quoted_string		4533200	1					
ANR	4533269	CastExpression	( char * ) malloc ( length + 3 )		4533200	1					
ANR	4533270	CastTarget	char *		4533200	0					
ANR	4533271	CallExpression	malloc ( length + 3 )		4533200	1					
ANR	4533272	Callee	malloc		4533200	0					
ANR	4533273	Identifier	malloc		4533200	0					
ANR	4533274	ArgumentList	length + 3		4533200	1					
ANR	4533275	Argument	length + 3		4533200	0					
ANR	4533276	AdditiveExpression	length + 3		4533200	0		+			
ANR	4533277	Identifier	length		4533200	0					
ANR	4533278	PrimaryExpression	3		4533200	1					
ANR	4533279	ExpressionStatement	"sprintf ( * quoted_string , ""\\""%s\\"""" , * string )"	147:2:3740:3782	4533200	1	True				
ANR	4533280	CallExpression	"sprintf ( * quoted_string , ""\\""%s\\"""" , * string )"		4533200	0					
ANR	4533281	Callee	sprintf		4533200	0					
ANR	4533282	Identifier	sprintf		4533200	0					
ANR	4533283	ArgumentList	* quoted_string		4533200	1					
ANR	4533284	Argument	* quoted_string		4533200	0					
ANR	4533285	UnaryOperationExpression	* quoted_string		4533200	0					
ANR	4533286	UnaryOperator	*		4533200	0					
ANR	4533287	Identifier	quoted_string		4533200	1					
ANR	4533288	Argument	"""\\""%s\\"""""		4533200	1					
ANR	4533289	PrimaryExpression	"""\\""%s\\"""""		4533200	0					
ANR	4533290	Argument	* string		4533200	2					
ANR	4533291	UnaryOperationExpression	* string		4533200	0					
ANR	4533292	UnaryOperator	*		4533200	0					
ANR	4533293	Identifier	string		4533200	1					
ANR	4533294	ReturnStatement	return ;	149:1:3789:3795	4533200	4	True				
ANR	4533295	ReturnType	void		4533200	1					
ANR	4533296	Identifier	make_big_string		4533200	2					
ANR	4533297	ParameterList	"int length , char * * string , char * * quoted_string"		4533200	3					
ANR	4533298	Parameter	int length	134:1:3363:3372	4533200	0	True				
ANR	4533299	ParameterType	int		4533200	0					
ANR	4533300	Identifier	length		4533200	1					
ANR	4533301	Parameter	char * * string	135:1:3412:3424	4533200	1	True				
ANR	4533302	ParameterType	char * *		4533200	0					
ANR	4533303	Identifier	string		4533200	1					
ANR	4533304	Parameter	char * * quoted_string	136:1:3465:3484	4533200	2	True				
ANR	4533305	ParameterType	char * *		4533200	0					
ANR	4533306	Identifier	quoted_string		4533200	1					
ANR	4533307	CFGEntryNode	ENTRY		4533200		True				
ANR	4533308	CFGExitNode	EXIT		4533200		True				
ANR	4533309	Symbol	rand		4533200						
ANR	4533310	Symbol	malloc		4533200						
ANR	4533311	Symbol	* i		4533200						
ANR	4533312	Symbol	NULL		4533200						
ANR	4533313	Symbol	string		4533200						
ANR	4533314	Symbol	* * string		4533200						
ANR	4533315	Symbol	length		4533200						
ANR	4533316	Symbol	* quoted_string		4533200						
ANR	4533317	Symbol	quoted_string		4533200						
ANR	4533318	Symbol	* string		4533200						
ANR	4533319	Symbol	i		4533200						
ANR	4533320	Symbol	* length		4533200						
ANR	4533321	Function	get_classad_from_file	153:0:3856:4522							
ANR	4533322	FunctionDef	get_classad_from_file ()		4533321	0					
ANR	4533323	CompoundStatement		153:48:3904:4522	4533321	0					
ANR	4533324	IdentifierDeclStatement	FILE * classad_file ;	155:1:3908:3926	4533321	0	True				
ANR	4533325	IdentifierDecl	* classad_file		4533321	0					
ANR	4533326	IdentifierDeclType	FILE *		4533321	0					
ANR	4533327	Identifier	classad_file		4533321	1					
ANR	4533328	IdentifierDeclStatement	ClassAd * classad_from_file ;	156:1:3929:3955	4533321	1	True				
ANR	4533329	IdentifierDecl	* classad_from_file		4533321	0					
ANR	4533330	IdentifierDeclType	ClassAd *		4533321	0					
ANR	4533331	Identifier	classad_from_file		4533321	1					
ANR	4533332	Statement	const	157:1:3958:3962	4533321	2	True				
ANR	4533333	Statement	char	157:7:3964:3967	4533321	3	True				
ANR	4533334	Statement	*	157:11:3968:3968	4533321	4	True				
ANR	4533335	Statement	classad_string	157:13:3970:3983	4533321	5	True				
ANR	4533336	Statement	=	157:28:3985:3985	4533321	6	True				
ANR	4533337	Statement	"""A = 0.7\\n B=2\\n C = 3\\n D = \\""alain\\""\\n """	157:30:3987:4028	4533321	7	True				
ANR	4533338	ExpressionStatement	"""MyType=\\""foo\\""\\n TargetType=\\""blah\\"""""	158:2:4032:4070	4533321	8	True				
ANR	4533339	PrimaryExpression	"""MyType=\\""foo\\""\\n TargetType=\\""blah\\"""""		4533321	0					
ANR	4533340	IdentifierDeclStatement	compat_classad :: ClassAd classad ;	159:1:4073:4104	4533321	9	True				
ANR	4533341	IdentifierDecl	classad		4533321	0					
ANR	4533342	IdentifierDeclType	compat_classad :: ClassAd		4533321	0					
ANR	4533343	Identifier	classad		4533321	1					
ANR	4533344	ExpressionStatement	"classad . initFromString ( classad_string , NULL )"	160:1:4107:4151	4533321	10	True				
ANR	4533345	CallExpression	"classad . initFromString ( classad_string , NULL )"		4533321	0					
ANR	4533346	Callee	classad . initFromString		4533321	0					
ANR	4533347	MemberAccess	classad . initFromString		4533321	0					
ANR	4533348	Identifier	classad		4533321	0					
ANR	4533349	Identifier	initFromString		4533321	1					
ANR	4533350	ArgumentList	classad_string		4533321	1					
ANR	4533351	Argument	classad_string		4533321	0					
ANR	4533352	Identifier	classad_string		4533321	0					
ANR	4533353	Argument	NULL		4533321	1					
ANR	4533354	Identifier	NULL		4533321	0					
ANR	4533355	ExpressionStatement	"classad_file = safe_fopen_wrapper_follow ( ""classad_file"" , ""w"" )"	161:1:4154:4215	4533321	11	True				
ANR	4533356	AssignmentExpression	"classad_file = safe_fopen_wrapper_follow ( ""classad_file"" , ""w"" )"		4533321	0		=			
ANR	4533357	Identifier	classad_file		4533321	0					
ANR	4533358	CallExpression	"safe_fopen_wrapper_follow ( ""classad_file"" , ""w"" )"		4533321	1					
ANR	4533359	Callee	safe_fopen_wrapper_follow		4533321	0					
ANR	4533360	Identifier	safe_fopen_wrapper_follow		4533321	0					
ANR	4533361	ArgumentList	"""classad_file"""		4533321	1					
ANR	4533362	Argument	"""classad_file"""		4533321	0					
ANR	4533363	PrimaryExpression	"""classad_file"""		4533321	0					
ANR	4533364	Argument	"""w"""		4533321	1					
ANR	4533365	PrimaryExpression	"""w"""		4533321	0					
ANR	4533366	ExpressionStatement	classad . fPrint ( classad_file )	162:1:4218:4246	4533321	12	True				
ANR	4533367	CallExpression	classad . fPrint ( classad_file )		4533321	0					
ANR	4533368	Callee	classad . fPrint		4533321	0					
ANR	4533369	MemberAccess	classad . fPrint		4533321	0					
ANR	4533370	Identifier	classad		4533321	0					
ANR	4533371	Identifier	fPrint		4533321	1					
ANR	4533372	ArgumentList	classad_file		4533321	1					
ANR	4533373	Argument	classad_file		4533321	0					
ANR	4533374	Identifier	classad_file		4533321	0					
ANR	4533375	ExpressionStatement	"fprintf ( classad_file , ""***\\n"" )"	163:1:4249:4279	4533321	13	True				
ANR	4533376	CallExpression	"fprintf ( classad_file , ""***\\n"" )"		4533321	0					
ANR	4533377	Callee	fprintf		4533321	0					
ANR	4533378	Identifier	fprintf		4533321	0					
ANR	4533379	ArgumentList	classad_file		4533321	1					
ANR	4533380	Argument	classad_file		4533321	0					
ANR	4533381	Identifier	classad_file		4533321	0					
ANR	4533382	Argument	"""***\\n"""		4533321	1					
ANR	4533383	PrimaryExpression	"""***\\n"""		4533321	0					
ANR	4533384	ExpressionStatement	fclose ( classad_file )	164:1:4282:4302	4533321	14	True				
ANR	4533385	CallExpression	fclose ( classad_file )		4533321	0					
ANR	4533386	Callee	fclose		4533321	0					
ANR	4533387	Identifier	fclose		4533321	0					
ANR	4533388	ArgumentList	classad_file		4533321	1					
ANR	4533389	Argument	classad_file		4533321	0					
ANR	4533390	Identifier	classad_file		4533321	0					
ANR	4533391	IdentifierDeclStatement	"int iseof , error , empty ;"	166:1:4306:4329	4533321	15	True				
ANR	4533392	IdentifierDecl	iseof		4533321	0					
ANR	4533393	IdentifierDeclType	int		4533321	0					
ANR	4533394	Identifier	iseof		4533321	1					
ANR	4533395	IdentifierDecl	error		4533321	1					
ANR	4533396	IdentifierDeclType	int		4533321	0					
ANR	4533397	Identifier	error		4533321	1					
ANR	4533398	IdentifierDecl	empty		4533321	2					
ANR	4533399	IdentifierDeclType	int		4533321	0					
ANR	4533400	Identifier	empty		4533321	1					
ANR	4533401	ExpressionStatement	"classad_file = safe_fopen_wrapper_follow ( ""classad_file"" , ""r"" )"	167:1:4332:4393	4533321	16	True				
ANR	4533402	AssignmentExpression	"classad_file = safe_fopen_wrapper_follow ( ""classad_file"" , ""r"" )"		4533321	0		=			
ANR	4533403	Identifier	classad_file		4533321	0					
ANR	4533404	CallExpression	"safe_fopen_wrapper_follow ( ""classad_file"" , ""r"" )"		4533321	1					
ANR	4533405	Callee	safe_fopen_wrapper_follow		4533321	0					
ANR	4533406	Identifier	safe_fopen_wrapper_follow		4533321	0					
ANR	4533407	ArgumentList	"""classad_file"""		4533321	1					
ANR	4533408	Argument	"""classad_file"""		4533321	0					
ANR	4533409	PrimaryExpression	"""classad_file"""		4533321	0					
ANR	4533410	Argument	"""r"""		4533321	1					
ANR	4533411	PrimaryExpression	"""r"""		4533321	0					
ANR	4533412	ExpressionStatement	"classad_from_file = new ClassAd ( classad_file , ""***"" , iseof , error , empty )"	168:1:4396:4469	4533321	17	True				
ANR	4533413	AssignmentExpression	"classad_from_file = new ClassAd ( classad_file , ""***"" , iseof , error , empty )"		4533321	0		=			
ANR	4533414	Identifier	classad_from_file		4533321	0					
ANR	4533415	Expression	"classad_file , ""***"" , iseof , error , empty"		4533321	1					
ANR	4533416	Identifier	classad_file		4533321	0					
ANR	4533417	Expression	"""***"" , iseof , error , empty"		4533321	1					
ANR	4533418	PrimaryExpression	"""***"""		4533321	0					
ANR	4533419	Expression	"iseof , error , empty"		4533321	1					
ANR	4533420	Identifier	iseof		4533321	0					
ANR	4533421	Expression	"error , empty"		4533321	1					
ANR	4533422	Identifier	error		4533321	0					
ANR	4533423	Identifier	empty		4533321	1					
ANR	4533424	ExpressionStatement	fclose ( classad_file )	169:1:4472:4492	4533321	18	True				
ANR	4533425	CallExpression	fclose ( classad_file )		4533321	0					
ANR	4533426	Callee	fclose		4533321	0					
ANR	4533427	Identifier	fclose		4533321	0					
ANR	4533428	ArgumentList	classad_file		4533321	1					
ANR	4533429	Argument	classad_file		4533321	0					
ANR	4533430	Identifier	classad_file		4533321	0					
ANR	4533431	ReturnStatement	return classad_from_file ;	171:1:4496:4520	4533321	19	True				
ANR	4533432	Identifier	classad_from_file		4533321	0					
ANR	4533433	ReturnType	compat_classad :: ClassAd *		4533321	1					
ANR	4533434	Identifier	get_classad_from_file		4533321	2					
ANR	4533435	ParameterList			4533321	3					
ANR	4533436	CFGEntryNode	ENTRY		4533321		True				
ANR	4533437	CFGExitNode	EXIT		4533321		True				
ANR	4533438	Symbol	classad_file		4533321						
ANR	4533439	Symbol	NULL		4533321						
ANR	4533440	Symbol	classad_from_file		4533321						
ANR	4533441	Symbol	classad		4533321						
ANR	4533442	Symbol	classad_string		4533321						
ANR	4533443	Symbol	error		4533321						
ANR	4533444	Symbol	safe_fopen_wrapper_follow		4533321						
ANR	4533445	Symbol	iseof		4533321						
ANR	4533446	Symbol	empty		4533321						
ANR	4533447	Function	floats_close	175:0:4597:4760							
ANR	4533448	FunctionDef	"floats_close (float one , float two , float diff)"		4533447	0					
ANR	4533449	CompoundStatement		175:53:4650:4760	4533447	0					
ANR	4533450	IdentifierDeclStatement	float ftmp = fabs ( one ) - fabs ( two ) ;	176:1:4653:4687	4533447	0	True				
ANR	4533451	IdentifierDecl	ftmp = fabs ( one ) - fabs ( two )		4533447	0					
ANR	4533452	IdentifierDeclType	float		4533447	0					
ANR	4533453	Identifier	ftmp		4533447	1					
ANR	4533454	AssignmentExpression	ftmp = fabs ( one ) - fabs ( two )		4533447	2		=			
ANR	4533455	Identifier	ftmp		4533447	0					
ANR	4533456	AdditiveExpression	fabs ( one ) - fabs ( two )		4533447	1		-			
ANR	4533457	CallExpression	fabs ( one )		4533447	0					
ANR	4533458	Callee	fabs		4533447	0					
ANR	4533459	Identifier	fabs		4533447	0					
ANR	4533460	ArgumentList	one		4533447	1					
ANR	4533461	Argument	one		4533447	0					
ANR	4533462	Identifier	one		4533447	0					
ANR	4533463	CallExpression	fabs ( two )		4533447	1					
ANR	4533464	Callee	fabs		4533447	0					
ANR	4533465	Identifier	fabs		4533447	0					
ANR	4533466	ArgumentList	two		4533447	1					
ANR	4533467	Argument	two		4533447	0					
ANR	4533468	Identifier	two		4533447	0					
ANR	4533469	IfStatement	if ( fabs ( ftmp ) <= diff )		4533447	1					
ANR	4533470	Condition	fabs ( ftmp ) <= diff	177:4:4693:4710	4533447	0	True				
ANR	4533471	RelationalExpression	fabs ( ftmp ) <= diff		4533447	0		<=			
ANR	4533472	CallExpression	fabs ( ftmp )		4533447	0					
ANR	4533473	Callee	fabs		4533447	0					
ANR	4533474	Identifier	fabs		4533447	0					
ANR	4533475	ArgumentList	ftmp		4533447	1					
ANR	4533476	Argument	ftmp		4533447	0					
ANR	4533477	Identifier	ftmp		4533447	0					
ANR	4533478	Identifier	diff		4533447	1					
ANR	4533479	CompoundStatement		3:24:62:62	4533447	1					
ANR	4533480	ReturnStatement	return ( true ) ;	178:2:4717:4729	4533447	0	True				
ANR	4533481	Identifier	true		4533447	0					
ANR	4533482	ElseStatement	else		4533447	0					
ANR	4533483	CompoundStatement		5:8:88:88	4533447	0					
ANR	4533484	ReturnStatement	return ( true ) ;	180:2:4743:4755	4533447	0	True				
ANR	4533485	Identifier	true		4533447	0					
ANR	4533486	ReturnType	bool		4533447	1					
ANR	4533487	Identifier	floats_close		4533447	2					
ANR	4533488	ParameterList	"float one , float two , float diff"		4533447	3					
ANR	4533489	Parameter	float one	175:19:4616:4624	4533447	0	True				
ANR	4533490	ParameterType	float		4533447	0					
ANR	4533491	Identifier	one		4533447	1					
ANR	4533492	Parameter	float two	175:30:4627:4635	4533447	1	True				
ANR	4533493	ParameterType	float		4533447	0					
ANR	4533494	Identifier	two		4533447	1					
ANR	4533495	Parameter	float diff	175:41:4638:4647	4533447	2	True				
ANR	4533496	ParameterType	float		4533447	0					
ANR	4533497	Identifier	diff		4533447	1					
ANR	4533498	CFGEntryNode	ENTRY		4533447		True				
ANR	4533499	CFGExitNode	EXIT		4533447		True				
ANR	4533500	Symbol	ftmp		4533447						
ANR	4533501	Symbol	fabs		4533447						
ANR	4533502	Symbol	one		4533447						
ANR	4533503	Symbol	true		4533447						
ANR	4533504	Symbol	diff		4533447						
ANR	4533505	Symbol	two		4533447						
ANR	4533506	Function	strings_similar	184:0:4763:4916							
ANR	4533507	FunctionDef	"strings_similar (const MyString * str1 , const MyString * str2 , const char * delims)"		4533506	0					
ANR	4533508	CompoundStatement		186:0:4851:4916	4533506	0					
ANR	4533509	ReturnStatement	"return strings_similar ( str1 -> Value ( ) , str2 -> Value ( ) , delims ) ;"	187:1:4854:4914	4533506	0	True				
ANR	4533510	CallExpression	"strings_similar ( str1 -> Value ( ) , str2 -> Value ( ) , delims )"		4533506	0					
ANR	4533511	Callee	strings_similar		4533506	0					
ANR	4533512	Identifier	strings_similar		4533506	0					
ANR	4533513	ArgumentList	str1 -> Value ( )		4533506	1					
ANR	4533514	Argument	str1 -> Value ( )		4533506	0					
ANR	4533515	CallExpression	str1 -> Value ( )		4533506	0					
ANR	4533516	Callee	str1 -> Value		4533506	0					
ANR	4533517	PtrMemberAccess	str1 -> Value		4533506	0					
ANR	4533518	Identifier	str1		4533506	0					
ANR	4533519	Identifier	Value		4533506	1					
ANR	4533520	ArgumentList			4533506	1					
ANR	4533521	Argument	str2 -> Value ( )		4533506	1					
ANR	4533522	CallExpression	str2 -> Value ( )		4533506	0					
ANR	4533523	Callee	str2 -> Value		4533506	0					
ANR	4533524	PtrMemberAccess	str2 -> Value		4533506	0					
ANR	4533525	Identifier	str2		4533506	0					
ANR	4533526	Identifier	Value		4533506	1					
ANR	4533527	ArgumentList			4533506	1					
ANR	4533528	Argument	delims		4533506	2					
ANR	4533529	Identifier	delims		4533506	0					
ANR	4533530	ReturnType	bool		4533506	1					
ANR	4533531	Identifier	strings_similar		4533506	2					
ANR	4533532	ParameterList	"const MyString * str1 , const MyString * str2 , const char * delims"		4533506	3					
ANR	4533533	Parameter	const MyString * str1	184:21:4784:4803	4533506	0	True				
ANR	4533534	ParameterType	const MyString *		4533506	0					
ANR	4533535	Identifier	str1		4533506	1					
ANR	4533536	Parameter	const MyString * str2	184:43:4806:4825	4533506	1	True				
ANR	4533537	ParameterType	const MyString *		4533506	0					
ANR	4533538	Identifier	str2		4533506	1					
ANR	4533539	Parameter	const char * delims	185:1:4830:4847	4533506	2	True				
ANR	4533540	ParameterType	const char *		4533506	0					
ANR	4533541	Identifier	delims		4533506	1					
ANR	4533542	CFGEntryNode	ENTRY		4533506		True				
ANR	4533543	CFGExitNode	EXIT		4533506		True				
ANR	4533544	Symbol	strings_similar		4533506						
ANR	4533545	Symbol	delims		4533506						
ANR	4533546	Symbol	* str1		4533506						
ANR	4533547	Symbol	* str2		4533506						
ANR	4533548	Symbol	str2 -> Value		4533506						
ANR	4533549	Symbol	str1		4533506						
ANR	4533550	Symbol	str2		4533506						
ANR	4533551	Symbol	str1 -> Value		4533506						
ANR	4533552	Function	strings_similar	190:0:4919:5171							
ANR	4533553	FunctionDef	"strings_similar (const char * str1 , const char * str2 , const char * delims)"		4533552	0					
ANR	4533554	CompoundStatement		191:0:4997:5171	4533552	0					
ANR	4533555	IdentifierDeclStatement	"StringList sl1 ( str1 , delims ) ;"	192:1:5000:5028	4533552	0	True				
ANR	4533556	IdentifierDecl	"sl1 ( str1 , delims )"		4533552	0					
ANR	4533557	IdentifierDeclType	StringList		4533552	0					
ANR	4533558	Identifier	sl1		4533552	1					
ANR	4533559	Expression	"str1 , delims"		4533552	2					
ANR	4533560	Identifier	str1		4533552	0					
ANR	4533561	Identifier	delims		4533552	1					
ANR	4533562	IdentifierDeclStatement	"StringList sl2 ( str2 , delims ) ;"	193:1:5031:5059	4533552	1	True				
ANR	4533563	IdentifierDecl	"sl2 ( str2 , delims )"		4533552	0					
ANR	4533564	IdentifierDeclType	StringList		4533552	0					
ANR	4533565	Identifier	sl2		4533552	1					
ANR	4533566	Expression	"str2 , delims"		4533552	2					
ANR	4533567	Identifier	str2		4533552	0					
ANR	4533568	Identifier	delims		4533552	1					
ANR	4533569	ReturnStatement	"return sl1 . number ( ) == sl2 . number ( ) && sl1 . contains_list ( sl2 , false ) && sl2 . contains_list ( sl1 , false ) ;"	194:1:5062:5169	4533552	2	True				
ANR	4533570	AndExpression	"sl1 . number ( ) == sl2 . number ( ) && sl1 . contains_list ( sl2 , false ) && sl2 . contains_list ( sl1 , false )"		4533552	0		&&			
ANR	4533571	EqualityExpression	sl1 . number ( ) == sl2 . number ( )		4533552	0		==			
ANR	4533572	CallExpression	sl1 . number ( )		4533552	0					
ANR	4533573	Callee	sl1 . number		4533552	0					
ANR	4533574	MemberAccess	sl1 . number		4533552	0					
ANR	4533575	Identifier	sl1		4533552	0					
ANR	4533576	Identifier	number		4533552	1					
ANR	4533577	ArgumentList			4533552	1					
ANR	4533578	CallExpression	sl2 . number ( )		4533552	1					
ANR	4533579	Callee	sl2 . number		4533552	0					
ANR	4533580	MemberAccess	sl2 . number		4533552	0					
ANR	4533581	Identifier	sl2		4533552	0					
ANR	4533582	Identifier	number		4533552	1					
ANR	4533583	ArgumentList			4533552	1					
ANR	4533584	AndExpression	"sl1 . contains_list ( sl2 , false ) && sl2 . contains_list ( sl1 , false )"		4533552	1		&&			
ANR	4533585	CallExpression	"sl1 . contains_list ( sl2 , false )"		4533552	0					
ANR	4533586	Callee	sl1 . contains_list		4533552	0					
ANR	4533587	MemberAccess	sl1 . contains_list		4533552	0					
ANR	4533588	Identifier	sl1		4533552	0					
ANR	4533589	Identifier	contains_list		4533552	1					
ANR	4533590	ArgumentList	sl2		4533552	1					
ANR	4533591	Argument	sl2		4533552	0					
ANR	4533592	Identifier	sl2		4533552	0					
ANR	4533593	Argument	false		4533552	1					
ANR	4533594	Identifier	false		4533552	0					
ANR	4533595	CallExpression	"sl2 . contains_list ( sl1 , false )"		4533552	1					
ANR	4533596	Callee	sl2 . contains_list		4533552	0					
ANR	4533597	MemberAccess	sl2 . contains_list		4533552	0					
ANR	4533598	Identifier	sl2		4533552	0					
ANR	4533599	Identifier	contains_list		4533552	1					
ANR	4533600	ArgumentList	sl1		4533552	1					
ANR	4533601	Argument	sl1		4533552	0					
ANR	4533602	Identifier	sl1		4533552	0					
ANR	4533603	Argument	false		4533552	1					
ANR	4533604	Identifier	false		4533552	0					
ANR	4533605	ReturnType	bool		4533552	1					
ANR	4533606	Identifier	strings_similar		4533552	2					
ANR	4533607	ParameterList	"const char * str1 , const char * str2 , const char * delims"		4533552	3					
ANR	4533608	Parameter	const char * str1	190:21:4940:4955	4533552	0	True				
ANR	4533609	ParameterType	const char *		4533552	0					
ANR	4533610	Identifier	str1		4533552	1					
ANR	4533611	Parameter	const char * str2	190:39:4958:4973	4533552	1	True				
ANR	4533612	ParameterType	const char *		4533552	0					
ANR	4533613	Identifier	str2		4533552	1					
ANR	4533614	Parameter	const char * delims	190:57:4976:4993	4533552	2	True				
ANR	4533615	ParameterType	const char *		4533552	0					
ANR	4533616	Identifier	delims		4533552	1					
ANR	4533617	CFGEntryNode	ENTRY		4533552		True				
ANR	4533618	CFGExitNode	EXIT		4533552		True				
ANR	4533619	Symbol	sl2 . contains_list		4533552						
ANR	4533620	Symbol	delims		4533552						
ANR	4533621	Symbol	str1		4533552						
ANR	4533622	Symbol	sl2 . number		4533552						
ANR	4533623	Symbol	str2		4533552						
ANR	4533624	Symbol	sl2		4533552						
ANR	4533625	Symbol	false		4533552						
ANR	4533626	Symbol	sl1 . number		4533552						
ANR	4533627	Symbol	sl1		4533552						
ANR	4533628	Symbol	sl1 . contains_list		4533552						
ANR	4533629	Function	convert_string_array	199:0:5174:5403							
ANR	4533630	FunctionDef	"convert_string_array (char * * str , int size , const char * delim)"		4533629	0					
ANR	4533631	CompoundStatement		199:71:5245:5403	4533629	0					
ANR	4533632	Statement	MyString	200:1:5248:5255	4533629	0	True				
ANR	4533633	Statement	*	200:9:5256:5256	4533629	1	True				
ANR	4533634	Statement	toReturn	200:11:5258:5265	4533629	2	True				
ANR	4533635	Statement	=	200:20:5267:5267	4533629	3	True				
ANR	4533636	Statement	new	200:22:5269:5271	4533629	4	True				
ANR	4533637	ExpressionStatement	MyString	200:26:5273:5281	4533629	5	True				
ANR	4533638	Identifier	MyString		4533629	0					
ANR	4533639	ForStatement	for ( int i = 0 ; i < size && str [ i ] && str [ i ] [ 0 ] ; i ++ )		4533629	6					
ANR	4533640	ForInit	int i = 0 ;	202:5:5290:5299	4533629	0	True				
ANR	4533641	IdentifierDeclStatement	int i = 0 ;		4533629	0					
ANR	4533642	IdentifierDecl	i = 0		4533629	0					
ANR	4533643	IdentifierDeclType	int		4533629	0					
ANR	4533644	Identifier	i		4533629	1					
ANR	4533645	AssignmentExpression	i = 0		4533629	2		=			
ANR	4533646	Identifier	i		4533629	0					
ANR	4533647	PrimaryExpression	0		4533629	1					
ANR	4533648	Condition	i < size && str [ i ] && str [ i ] [ 0 ]	202:16:5301:5331	4533629	1	True				
ANR	4533649	AndExpression	i < size && str [ i ] && str [ i ] [ 0 ]		4533629	0		&&			
ANR	4533650	RelationalExpression	i < size		4533629	0		<			
ANR	4533651	Identifier	i		4533629	0					
ANR	4533652	Identifier	size		4533629	1					
ANR	4533653	AndExpression	str [ i ] && str [ i ] [ 0 ]		4533629	1		&&			
ANR	4533654	ArrayIndexing	str [ i ]		4533629	0					
ANR	4533655	Identifier	str		4533629	0					
ANR	4533656	Identifier	i		4533629	1					
ANR	4533657	ArrayIndexing	str [ i ] [ 0 ]		4533629	1					
ANR	4533658	ArrayIndexing	str [ i ]		4533629	0					
ANR	4533659	Identifier	str		4533629	0					
ANR	4533660	Identifier	i		4533629	1					
ANR	4533661	PrimaryExpression	0		4533629	1					
ANR	4533662	PostIncDecOperationExpression	i ++	202:49:5334:5336	4533629	2	True				
ANR	4533663	Identifier	i		4533629	0					
ANR	4533664	IncDec	++		4533629	1					
ANR	4533665	CompoundStatement		4:54:93:93	4533629	3					
ANR	4533666	ExpressionStatement	* toReturn += str [ i ]	203:2:5343:5360	4533629	0	True				
ANR	4533667	AssignmentExpression	* toReturn += str [ i ]		4533629	0		+=			
ANR	4533668	UnaryOperationExpression	* toReturn		4533629	0					
ANR	4533669	UnaryOperator	*		4533629	0					
ANR	4533670	Identifier	toReturn		4533629	1					
ANR	4533671	ArrayIndexing	str [ i ]		4533629	1					
ANR	4533672	Identifier	str		4533629	0					
ANR	4533673	Identifier	i		4533629	1					
ANR	4533674	ExpressionStatement	* toReturn += delim	204:2:5364:5380	4533629	1	True				
ANR	4533675	AssignmentExpression	* toReturn += delim		4533629	0		+=			
ANR	4533676	UnaryOperationExpression	* toReturn		4533629	0					
ANR	4533677	UnaryOperator	*		4533629	0					
ANR	4533678	Identifier	toReturn		4533629	1					
ANR	4533679	Identifier	delim		4533629	1					
ANR	4533680	ReturnStatement	return toReturn ;	206:1:5386:5401	4533629	7	True				
ANR	4533681	Identifier	toReturn		4533629	0					
ANR	4533682	ReturnType	MyString *		4533629	1					
ANR	4533683	Identifier	convert_string_array		4533629	2					
ANR	4533684	ParameterList	"char * * str , int size , const char * delim"		4533629	3					
ANR	4533685	Parameter	char * * str	199:31:5205:5214	4533629	0	True				
ANR	4533686	ParameterType	char * *		4533629	0					
ANR	4533687	Identifier	str		4533629	1					
ANR	4533688	Parameter	int size	199:43:5217:5224	4533629	1	True				
ANR	4533689	ParameterType	int		4533629	0					
ANR	4533690	Identifier	size		4533629	1					
ANR	4533691	Parameter	const char * delim	199:53:5227:5243	4533629	2	True				
ANR	4533692	ParameterType	const char *		4533629	0					
ANR	4533693	Identifier	delim		4533629	1					
ANR	4533694	CFGEntryNode	ENTRY		4533629		True				
ANR	4533695	CFGExitNode	EXIT		4533629		True				
ANR	4533696	Symbol	str		4533629						
ANR	4533697	Symbol	* * i		4533629						
ANR	4533698	Symbol	* i		4533629						
ANR	4533699	Symbol	size		4533629						
ANR	4533700	Symbol	toReturn		4533629						
ANR	4533701	Symbol	* * str		4533629						
ANR	4533702	Symbol	* toReturn		4533629						
ANR	4533703	Symbol	i		4533629						
ANR	4533704	Symbol	* str		4533629						
ANR	4533705	Symbol	delim		4533629						
ANR	4533706	Function	convert_string_array	209:0:5406:5641							
ANR	4533707	FunctionDef	"convert_string_array (const char * * str , int size , const char * delim)"		4533706	0					
ANR	4533708	CompoundStatement		209:77:5483:5641	4533706	0					
ANR	4533709	Statement	MyString	210:1:5486:5493	4533706	0	True				
ANR	4533710	Statement	*	210:9:5494:5494	4533706	1	True				
ANR	4533711	Statement	toReturn	210:11:5496:5503	4533706	2	True				
ANR	4533712	Statement	=	210:20:5505:5505	4533706	3	True				
ANR	4533713	Statement	new	210:22:5507:5509	4533706	4	True				
ANR	4533714	ExpressionStatement	MyString	210:26:5511:5519	4533706	5	True				
ANR	4533715	Identifier	MyString		4533706	0					
ANR	4533716	ForStatement	for ( int i = 0 ; i < size && str [ i ] && str [ i ] [ 0 ] ; i ++ )		4533706	6					
ANR	4533717	ForInit	int i = 0 ;	212:5:5528:5537	4533706	0	True				
ANR	4533718	IdentifierDeclStatement	int i = 0 ;		4533706	0					
ANR	4533719	IdentifierDecl	i = 0		4533706	0					
ANR	4533720	IdentifierDeclType	int		4533706	0					
ANR	4533721	Identifier	i		4533706	1					
ANR	4533722	AssignmentExpression	i = 0		4533706	2		=			
ANR	4533723	Identifier	i		4533706	0					
ANR	4533724	PrimaryExpression	0		4533706	1					
ANR	4533725	Condition	i < size && str [ i ] && str [ i ] [ 0 ]	212:16:5539:5569	4533706	1	True				
ANR	4533726	AndExpression	i < size && str [ i ] && str [ i ] [ 0 ]		4533706	0		&&			
ANR	4533727	RelationalExpression	i < size		4533706	0		<			
ANR	4533728	Identifier	i		4533706	0					
ANR	4533729	Identifier	size		4533706	1					
ANR	4533730	AndExpression	str [ i ] && str [ i ] [ 0 ]		4533706	1		&&			
ANR	4533731	ArrayIndexing	str [ i ]		4533706	0					
ANR	4533732	Identifier	str		4533706	0					
ANR	4533733	Identifier	i		4533706	1					
ANR	4533734	ArrayIndexing	str [ i ] [ 0 ]		4533706	1					
ANR	4533735	ArrayIndexing	str [ i ]		4533706	0					
ANR	4533736	Identifier	str		4533706	0					
ANR	4533737	Identifier	i		4533706	1					
ANR	4533738	PrimaryExpression	0		4533706	1					
ANR	4533739	PostIncDecOperationExpression	i ++	212:49:5572:5574	4533706	2	True				
ANR	4533740	Identifier	i		4533706	0					
ANR	4533741	IncDec	++		4533706	1					
ANR	4533742	CompoundStatement		4:54:93:93	4533706	3					
ANR	4533743	ExpressionStatement	* toReturn += str [ i ]	213:2:5581:5598	4533706	0	True				
ANR	4533744	AssignmentExpression	* toReturn += str [ i ]		4533706	0		+=			
ANR	4533745	UnaryOperationExpression	* toReturn		4533706	0					
ANR	4533746	UnaryOperator	*		4533706	0					
ANR	4533747	Identifier	toReturn		4533706	1					
ANR	4533748	ArrayIndexing	str [ i ]		4533706	1					
ANR	4533749	Identifier	str		4533706	0					
ANR	4533750	Identifier	i		4533706	1					
ANR	4533751	ExpressionStatement	* toReturn += delim	214:2:5602:5618	4533706	1	True				
ANR	4533752	AssignmentExpression	* toReturn += delim		4533706	0		+=			
ANR	4533753	UnaryOperationExpression	* toReturn		4533706	0					
ANR	4533754	UnaryOperator	*		4533706	0					
ANR	4533755	Identifier	toReturn		4533706	1					
ANR	4533756	Identifier	delim		4533706	1					
ANR	4533757	ReturnStatement	return toReturn ;	216:1:5624:5639	4533706	7	True				
ANR	4533758	Identifier	toReturn		4533706	0					
ANR	4533759	ReturnType	MyString *		4533706	1					
ANR	4533760	Identifier	convert_string_array		4533706	2					
ANR	4533761	ParameterList	"const char * * str , int size , const char * delim"		4533706	3					
ANR	4533762	Parameter	const char * * str	209:31:5437:5452	4533706	0	True				
ANR	4533763	ParameterType	const char * *		4533706	0					
ANR	4533764	Identifier	str		4533706	1					
ANR	4533765	Parameter	int size	209:49:5455:5462	4533706	1	True				
ANR	4533766	ParameterType	int		4533706	0					
ANR	4533767	Identifier	size		4533706	1					
ANR	4533768	Parameter	const char * delim	209:59:5465:5481	4533706	2	True				
ANR	4533769	ParameterType	const char *		4533706	0					
ANR	4533770	Identifier	delim		4533706	1					
ANR	4533771	CFGEntryNode	ENTRY		4533706		True				
ANR	4533772	CFGExitNode	EXIT		4533706		True				
ANR	4533773	Symbol	str		4533706						
ANR	4533774	Symbol	* * i		4533706						
ANR	4533775	Symbol	* i		4533706						
ANR	4533776	Symbol	size		4533706						
ANR	4533777	Symbol	toReturn		4533706						
ANR	4533778	Symbol	* * str		4533706						
ANR	4533779	Symbol	* toReturn		4533706						
ANR	4533780	Symbol	i		4533706						
ANR	4533781	Symbol	* str		4533706						
ANR	4533782	Symbol	delim		4533706						
ANR	4533783	Function	delete_helper	220:0:5667:5800							
ANR	4533784	FunctionDef	"delete_helper (char * * array , int num_strs)"		4533783	0					
ANR	4533785	CompoundStatement		220:47:5714:5800	4533783	0					
ANR	4533786	IdentifierDeclStatement	int i ;	221:1:5717:5722	4533783	0	True				
ANR	4533787	IdentifierDecl	i		4533783	0					
ANR	4533788	IdentifierDeclType	int		4533783	0					
ANR	4533789	Identifier	i		4533783	1					
ANR	4533790	ForStatement	for ( i = 0 ; i < num_strs ; i ++ )		4533783	1					
ANR	4533791	ForInit	i = 0 ;	222:5:5729:5734	4533783	0	True				
ANR	4533792	AssignmentExpression	i = 0		4533783	0		=			
ANR	4533793	Identifier	i		4533783	0					
ANR	4533794	PrimaryExpression	0		4533783	1					
ANR	4533795	Condition	i < num_strs	222:12:5736:5747	4533783	1	True				
ANR	4533796	RelationalExpression	i < num_strs		4533783	0		<			
ANR	4533797	Identifier	i		4533783	0					
ANR	4533798	Identifier	num_strs		4533783	1					
ANR	4533799	PostIncDecOperationExpression	i ++	222:26:5750:5752	4533783	2	True				
ANR	4533800	Identifier	i		4533783	0					
ANR	4533801	IncDec	++		4533783	1					
ANR	4533802	CompoundStatement		3:31:40:40	4533783	3					
ANR	4533803	Statement	delete	223:2:5759:5764	4533783	0	True				
ANR	4533804	Statement	[	223:8:5765:5765	4533783	1	True				
ANR	4533805	Statement	]	223:9:5766:5766	4533783	2	True				
ANR	4533806	ExpressionStatement	array [ i ]	223:11:5768:5776	4533783	3	True				
ANR	4533807	ArrayIndexing	array [ i ]		4533783	0					
ANR	4533808	Identifier	array		4533783	0					
ANR	4533809	Identifier	i		4533783	1					
ANR	4533810	Statement	delete	225:1:5784:5789	4533783	2	True				
ANR	4533811	Statement	[	225:7:5790:5790	4533783	3	True				
ANR	4533812	Statement	]	225:8:5791:5791	4533783	4	True				
ANR	4533813	ExpressionStatement	array	225:10:5793:5798	4533783	5	True				
ANR	4533814	Identifier	array		4533783	0					
ANR	4533815	ReturnType	void		4533783	1					
ANR	4533816	Identifier	delete_helper		4533783	2					
ANR	4533817	ParameterList	"char * * array , int num_strs"		4533783	3					
ANR	4533818	Parameter	char * * array	220:19:5686:5697	4533783	0	True				
ANR	4533819	ParameterType	char * *		4533783	0					
ANR	4533820	Identifier	array		4533783	1					
ANR	4533821	Parameter	int num_strs	220:33:5700:5711	4533783	1	True				
ANR	4533822	ParameterType	int		4533783	0					
ANR	4533823	Identifier	num_strs		4533783	1					
ANR	4533824	CFGEntryNode	ENTRY		4533783		True				
ANR	4533825	CFGExitNode	EXIT		4533783		True				
ANR	4533826	Symbol	num_strs		4533783						
ANR	4533827	Symbol	array		4533783						
ANR	4533828	Symbol	i		4533783						
ANR	4533829	Function	get_tm	228:0:5803:6250							
ANR	4533830	FunctionDef	"get_tm (ISO8601Type type , const struct tm & time , MyString * str)"		4533829	0					
ANR	4533831	CompoundStatement		229:0:5871:6250	4533829	0					
ANR	4533832	IfStatement	if ( str )		4533829	0					
ANR	4533833	Condition	str	230:4:5877:5879	4533829	0	True				
ANR	4533834	Identifier	str		4533829	0					
ANR	4533835	CompoundStatement		2:9:10:10	4533829	1					
ANR	4533836	IfStatement	if ( type == ISO8601_DateOnly )		4533829	0					
ANR	4533837	Condition	type == ISO8601_DateOnly	231:6:5890:5913	4533829	0	True				
ANR	4533838	EqualityExpression	type == ISO8601_DateOnly		4533829	0		==			
ANR	4533839	Identifier	type		4533829	0					
ANR	4533840	Identifier	ISO8601_DateOnly		4533829	1					
ANR	4533841	CompoundStatement		3:32:44:44	4533829	1					
ANR	4533842	ExpressionStatement	"str -> sprintf ( ""%d-%d-%d"" , time . tm_year , time . tm_mon , time . tm_mday )"	232:3:5921:5986	4533829	0	True				
ANR	4533843	CallExpression	"str -> sprintf ( ""%d-%d-%d"" , time . tm_year , time . tm_mon , time . tm_mday )"		4533829	0					
ANR	4533844	Callee	str -> sprintf		4533829	0					
ANR	4533845	PtrMemberAccess	str -> sprintf		4533829	0					
ANR	4533846	Identifier	str		4533829	0					
ANR	4533847	Identifier	sprintf		4533829	1					
ANR	4533848	ArgumentList	"""%d-%d-%d"""		4533829	1					
ANR	4533849	Argument	"""%d-%d-%d"""		4533829	0					
ANR	4533850	PrimaryExpression	"""%d-%d-%d"""		4533829	0					
ANR	4533851	Argument	time . tm_year		4533829	1					
ANR	4533852	MemberAccess	time . tm_year		4533829	0					
ANR	4533853	Identifier	time		4533829	0					
ANR	4533854	Identifier	tm_year		4533829	1					
ANR	4533855	Argument	time . tm_mon		4533829	2					
ANR	4533856	MemberAccess	time . tm_mon		4533829	0					
ANR	4533857	Identifier	time		4533829	0					
ANR	4533858	Identifier	tm_mon		4533829	1					
ANR	4533859	Argument	time . tm_mday		4533829	3					
ANR	4533860	MemberAccess	time . tm_mday		4533829	0					
ANR	4533861	Identifier	time		4533829	0					
ANR	4533862	Identifier	tm_mday		4533829	1					
ANR	4533863	ElseStatement	else		4533829	0					
ANR	4533864	IfStatement	if ( type == ISO8601_TimeOnly )		4533829	0					
ANR	4533865	Condition	type == ISO8601_TimeOnly	233:13:6001:6024	4533829	0	True				
ANR	4533866	EqualityExpression	type == ISO8601_TimeOnly		4533829	0		==			
ANR	4533867	Identifier	type		4533829	0					
ANR	4533868	Identifier	ISO8601_TimeOnly		4533829	1					
ANR	4533869	CompoundStatement		5:39:155:155	4533829	1					
ANR	4533870	ExpressionStatement	"str -> sprintf ( ""%d:%d:%d"" , time . tm_hour , time . tm_min , time . tm_sec )"	234:3:6032:6096	4533829	0	True				
ANR	4533871	CallExpression	"str -> sprintf ( ""%d:%d:%d"" , time . tm_hour , time . tm_min , time . tm_sec )"		4533829	0					
ANR	4533872	Callee	str -> sprintf		4533829	0					
ANR	4533873	PtrMemberAccess	str -> sprintf		4533829	0					
ANR	4533874	Identifier	str		4533829	0					
ANR	4533875	Identifier	sprintf		4533829	1					
ANR	4533876	ArgumentList	"""%d:%d:%d"""		4533829	1					
ANR	4533877	Argument	"""%d:%d:%d"""		4533829	0					
ANR	4533878	PrimaryExpression	"""%d:%d:%d"""		4533829	0					
ANR	4533879	Argument	time . tm_hour		4533829	1					
ANR	4533880	MemberAccess	time . tm_hour		4533829	0					
ANR	4533881	Identifier	time		4533829	0					
ANR	4533882	Identifier	tm_hour		4533829	1					
ANR	4533883	Argument	time . tm_min		4533829	2					
ANR	4533884	MemberAccess	time . tm_min		4533829	0					
ANR	4533885	Identifier	time		4533829	0					
ANR	4533886	Identifier	tm_min		4533829	1					
ANR	4533887	Argument	time . tm_sec		4533829	3					
ANR	4533888	MemberAccess	time . tm_sec		4533829	0					
ANR	4533889	Identifier	time		4533829	0					
ANR	4533890	Identifier	tm_sec		4533829	1					
ANR	4533891	ElseStatement	else		4533829	0					
ANR	4533892	CompoundStatement		7:9:235:235	4533829	0					
ANR	4533893	ExpressionStatement	"str -> sprintf ( ""%d-%d-%dT%d:%d:%d"" , time . tm_year , time . tm_mon , time . tm_mday , time . tm_hour , time . tm_min , time . tm_sec )"	236:3:6112:6240	4533829	0	True				
ANR	4533894	CallExpression	"str -> sprintf ( ""%d-%d-%dT%d:%d:%d"" , time . tm_year , time . tm_mon , time . tm_mday , time . tm_hour , time . tm_min , time . tm_sec )"		4533829	0					
ANR	4533895	Callee	str -> sprintf		4533829	0					
ANR	4533896	PtrMemberAccess	str -> sprintf		4533829	0					
ANR	4533897	Identifier	str		4533829	0					
ANR	4533898	Identifier	sprintf		4533829	1					
ANR	4533899	ArgumentList	"""%d-%d-%dT%d:%d:%d"""		4533829	1					
ANR	4533900	Argument	"""%d-%d-%dT%d:%d:%d"""		4533829	0					
ANR	4533901	PrimaryExpression	"""%d-%d-%dT%d:%d:%d"""		4533829	0					
ANR	4533902	Argument	time . tm_year		4533829	1					
ANR	4533903	MemberAccess	time . tm_year		4533829	0					
ANR	4533904	Identifier	time		4533829	0					
ANR	4533905	Identifier	tm_year		4533829	1					
ANR	4533906	Argument	time . tm_mon		4533829	2					
ANR	4533907	MemberAccess	time . tm_mon		4533829	0					
ANR	4533908	Identifier	time		4533829	0					
ANR	4533909	Identifier	tm_mon		4533829	1					
ANR	4533910	Argument	time . tm_mday		4533829	3					
ANR	4533911	MemberAccess	time . tm_mday		4533829	0					
ANR	4533912	Identifier	time		4533829	0					
ANR	4533913	Identifier	tm_mday		4533829	1					
ANR	4533914	Argument	time . tm_hour		4533829	4					
ANR	4533915	MemberAccess	time . tm_hour		4533829	0					
ANR	4533916	Identifier	time		4533829	0					
ANR	4533917	Identifier	tm_hour		4533829	1					
ANR	4533918	Argument	time . tm_min		4533829	5					
ANR	4533919	MemberAccess	time . tm_min		4533829	0					
ANR	4533920	Identifier	time		4533829	0					
ANR	4533921	Identifier	tm_min		4533829	1					
ANR	4533922	Argument	time . tm_sec		4533829	6					
ANR	4533923	MemberAccess	time . tm_sec		4533829	0					
ANR	4533924	Identifier	time		4533829	0					
ANR	4533925	Identifier	tm_sec		4533829	1					
ANR	4533926	ReturnType	void		4533829	1					
ANR	4533927	Identifier	get_tm		4533829	2					
ANR	4533928	ParameterList	"ISO8601Type type , const struct tm & time , MyString * str"		4533829	3					
ANR	4533929	Parameter	ISO8601Type type	228:12:5815:5830	4533829	0	True				
ANR	4533930	ParameterType	ISO8601Type		4533829	0					
ANR	4533931	Identifier	type		4533829	1					
ANR	4533932	Parameter	const struct tm & time	228:30:5833:5853	4533829	1	True				
ANR	4533933	ParameterType	const struct tm &		4533829	0					
ANR	4533934	Identifier	time		4533829	1					
ANR	4533935	Parameter	MyString * str	228:53:5856:5868	4533829	2	True				
ANR	4533936	ParameterType	MyString *		4533829	0					
ANR	4533937	Identifier	str		4533829	1					
ANR	4533938	CFGEntryNode	ENTRY		4533829		True				
ANR	4533939	CFGExitNode	EXIT		4533829		True				
ANR	4533940	Symbol	str		4533829						
ANR	4533941	Symbol	ISO8601_DateOnly		4533829						
ANR	4533942	Symbol	time . tm_mon		4533829						
ANR	4533943	Symbol	time		4533829						
ANR	4533944	Symbol	time . tm_mday		4533829						
ANR	4533945	Symbol	type		4533829						
ANR	4533946	Symbol	time . tm_hour		4533829						
ANR	4533947	Symbol	time . tm_year		4533829						
ANR	4533948	Symbol	ISO8601_TimeOnly		4533829						
ANR	4533949	Symbol	time . tm_min		4533829						
ANR	4533950	Symbol	time . tm_sec		4533829						
ANR	4533951	Function	user_policy_ad_checker	244:0:6253:7012							
ANR	4533952	FunctionDef	"user_policy_ad_checker (ClassAd * ad , bool periodic_hold , bool periodic_remove , bool periodic_release , bool hold_check , bool remove_check)"		4533951	0					
ANR	4533953	CompoundStatement		250:0:6432:7012	4533951	0					
ANR	4533954	IdentifierDeclStatement	"int val1 , val2 , val3 , val4 , val5 ;"	251:1:6435:6467	4533951	0	True				
ANR	4533955	IdentifierDecl	val1		4533951	0					
ANR	4533956	IdentifierDeclType	int		4533951	0					
ANR	4533957	Identifier	val1		4533951	1					
ANR	4533958	IdentifierDecl	val2		4533951	1					
ANR	4533959	IdentifierDeclType	int		4533951	0					
ANR	4533960	Identifier	val2		4533951	1					
ANR	4533961	IdentifierDecl	val3		4533951	2					
ANR	4533962	IdentifierDeclType	int		4533951	0					
ANR	4533963	Identifier	val3		4533951	1					
ANR	4533964	IdentifierDecl	val4		4533951	3					
ANR	4533965	IdentifierDeclType	int		4533951	0					
ANR	4533966	Identifier	val4		4533951	1					
ANR	4533967	IdentifierDecl	val5		4533951	4					
ANR	4533968	IdentifierDeclType	int		4533951	0					
ANR	4533969	Identifier	val5		4533951	1					
ANR	4533970	IdentifierDeclStatement	"bool found = ad -> EvalBool ( ATTR_PERIODIC_HOLD_CHECK , NULL , val1 ) && ad -> EvalBool ( ATTR_PERIODIC_REMOVE_CHECK , NULL , val2 ) && ad -> EvalBool ( ATTR_PERIODIC_RELEASE_CHECK , NULL , val3 ) && ad -> EvalBool ( ATTR_ON_EXIT_HOLD_CHECK , NULL , val4 ) && ad -> EvalBool ( ATTR_ON_EXIT_REMOVE_CHECK , NULL , val5 ) ;"	252:1:6470:6774	4533951	1	True				
ANR	4533971	IdentifierDecl	"found = ad -> EvalBool ( ATTR_PERIODIC_HOLD_CHECK , NULL , val1 ) && ad -> EvalBool ( ATTR_PERIODIC_REMOVE_CHECK , NULL , val2 ) && ad -> EvalBool ( ATTR_PERIODIC_RELEASE_CHECK , NULL , val3 ) && ad -> EvalBool ( ATTR_ON_EXIT_HOLD_CHECK , NULL , val4 ) && ad -> EvalBool ( ATTR_ON_EXIT_REMOVE_CHECK , NULL , val5 )"		4533951	0					
ANR	4533972	IdentifierDeclType	bool		4533951	0					
ANR	4533973	Identifier	found		4533951	1					
ANR	4533974	AssignmentExpression	"found = ad -> EvalBool ( ATTR_PERIODIC_HOLD_CHECK , NULL , val1 ) && ad -> EvalBool ( ATTR_PERIODIC_REMOVE_CHECK , NULL , val2 ) && ad -> EvalBool ( ATTR_PERIODIC_RELEASE_CHECK , NULL , val3 ) && ad -> EvalBool ( ATTR_ON_EXIT_HOLD_CHECK , NULL , val4 ) && ad -> EvalBool ( ATTR_ON_EXIT_REMOVE_CHECK , NULL , val5 )"		4533951	2		=			
ANR	4533975	Identifier	found		4533951	0					
ANR	4533976	AndExpression	"ad -> EvalBool ( ATTR_PERIODIC_HOLD_CHECK , NULL , val1 ) && ad -> EvalBool ( ATTR_PERIODIC_REMOVE_CHECK , NULL , val2 ) && ad -> EvalBool ( ATTR_PERIODIC_RELEASE_CHECK , NULL , val3 ) && ad -> EvalBool ( ATTR_ON_EXIT_HOLD_CHECK , NULL , val4 ) && ad -> EvalBool ( ATTR_ON_EXIT_REMOVE_CHECK , NULL , val5 )"		4533951	1		&&			
ANR	4533977	CallExpression	"ad -> EvalBool ( ATTR_PERIODIC_HOLD_CHECK , NULL , val1 )"		4533951	0					
ANR	4533978	Callee	ad -> EvalBool		4533951	0					
ANR	4533979	PtrMemberAccess	ad -> EvalBool		4533951	0					
ANR	4533980	Identifier	ad		4533951	0					
ANR	4533981	Identifier	EvalBool		4533951	1					
ANR	4533982	ArgumentList	ATTR_PERIODIC_HOLD_CHECK		4533951	1					
ANR	4533983	Argument	ATTR_PERIODIC_HOLD_CHECK		4533951	0					
ANR	4533984	Identifier	ATTR_PERIODIC_HOLD_CHECK		4533951	0					
ANR	4533985	Argument	NULL		4533951	1					
ANR	4533986	Identifier	NULL		4533951	0					
ANR	4533987	Argument	val1		4533951	2					
ANR	4533988	Identifier	val1		4533951	0					
ANR	4533989	AndExpression	"ad -> EvalBool ( ATTR_PERIODIC_REMOVE_CHECK , NULL , val2 ) && ad -> EvalBool ( ATTR_PERIODIC_RELEASE_CHECK , NULL , val3 ) && ad -> EvalBool ( ATTR_ON_EXIT_HOLD_CHECK , NULL , val4 ) && ad -> EvalBool ( ATTR_ON_EXIT_REMOVE_CHECK , NULL , val5 )"		4533951	1		&&			
ANR	4533990	CallExpression	"ad -> EvalBool ( ATTR_PERIODIC_REMOVE_CHECK , NULL , val2 )"		4533951	0					
ANR	4533991	Callee	ad -> EvalBool		4533951	0					
ANR	4533992	PtrMemberAccess	ad -> EvalBool		4533951	0					
ANR	4533993	Identifier	ad		4533951	0					
ANR	4533994	Identifier	EvalBool		4533951	1					
ANR	4533995	ArgumentList	ATTR_PERIODIC_REMOVE_CHECK		4533951	1					
ANR	4533996	Argument	ATTR_PERIODIC_REMOVE_CHECK		4533951	0					
ANR	4533997	Identifier	ATTR_PERIODIC_REMOVE_CHECK		4533951	0					
ANR	4533998	Argument	NULL		4533951	1					
ANR	4533999	Identifier	NULL		4533951	0					
ANR	4534000	Argument	val2		4533951	2					
ANR	4534001	Identifier	val2		4533951	0					
ANR	4534002	AndExpression	"ad -> EvalBool ( ATTR_PERIODIC_RELEASE_CHECK , NULL , val3 ) && ad -> EvalBool ( ATTR_ON_EXIT_HOLD_CHECK , NULL , val4 ) && ad -> EvalBool ( ATTR_ON_EXIT_REMOVE_CHECK , NULL , val5 )"		4533951	1		&&			
ANR	4534003	CallExpression	"ad -> EvalBool ( ATTR_PERIODIC_RELEASE_CHECK , NULL , val3 )"		4533951	0					
ANR	4534004	Callee	ad -> EvalBool		4533951	0					
ANR	4534005	PtrMemberAccess	ad -> EvalBool		4533951	0					
ANR	4534006	Identifier	ad		4533951	0					
ANR	4534007	Identifier	EvalBool		4533951	1					
ANR	4534008	ArgumentList	ATTR_PERIODIC_RELEASE_CHECK		4533951	1					
ANR	4534009	Argument	ATTR_PERIODIC_RELEASE_CHECK		4533951	0					
ANR	4534010	Identifier	ATTR_PERIODIC_RELEASE_CHECK		4533951	0					
ANR	4534011	Argument	NULL		4533951	1					
ANR	4534012	Identifier	NULL		4533951	0					
ANR	4534013	Argument	val3		4533951	2					
ANR	4534014	Identifier	val3		4533951	0					
ANR	4534015	AndExpression	"ad -> EvalBool ( ATTR_ON_EXIT_HOLD_CHECK , NULL , val4 ) && ad -> EvalBool ( ATTR_ON_EXIT_REMOVE_CHECK , NULL , val5 )"		4533951	1		&&			
ANR	4534016	CallExpression	"ad -> EvalBool ( ATTR_ON_EXIT_HOLD_CHECK , NULL , val4 )"		4533951	0					
ANR	4534017	Callee	ad -> EvalBool		4533951	0					
ANR	4534018	PtrMemberAccess	ad -> EvalBool		4533951	0					
ANR	4534019	Identifier	ad		4533951	0					
ANR	4534020	Identifier	EvalBool		4533951	1					
ANR	4534021	ArgumentList	ATTR_ON_EXIT_HOLD_CHECK		4533951	1					
ANR	4534022	Argument	ATTR_ON_EXIT_HOLD_CHECK		4533951	0					
ANR	4534023	Identifier	ATTR_ON_EXIT_HOLD_CHECK		4533951	0					
ANR	4534024	Argument	NULL		4533951	1					
ANR	4534025	Identifier	NULL		4533951	0					
ANR	4534026	Argument	val4		4533951	2					
ANR	4534027	Identifier	val4		4533951	0					
ANR	4534028	CallExpression	"ad -> EvalBool ( ATTR_ON_EXIT_REMOVE_CHECK , NULL , val5 )"		4533951	1					
ANR	4534029	Callee	ad -> EvalBool		4533951	0					
ANR	4534030	PtrMemberAccess	ad -> EvalBool		4533951	0					
ANR	4534031	Identifier	ad		4533951	0					
ANR	4534032	Identifier	EvalBool		4533951	1					
ANR	4534033	ArgumentList	ATTR_ON_EXIT_REMOVE_CHECK		4533951	1					
ANR	4534034	Argument	ATTR_ON_EXIT_REMOVE_CHECK		4533951	0					
ANR	4534035	Identifier	ATTR_ON_EXIT_REMOVE_CHECK		4533951	0					
ANR	4534036	Argument	NULL		4533951	1					
ANR	4534037	Identifier	NULL		4533951	0					
ANR	4534038	Argument	val5		4533951	2					
ANR	4534039	Identifier	val5		4533951	0					
ANR	4534040	ReturnStatement	return found && ( ( val1 != 0 ) == periodic_hold ) && ( ( val2 != 0 ) == periodic_remove ) && ( ( val3 != 0 ) == periodic_release ) && ( ( val4 != 0 ) == hold_check ) && ( ( val5 != 0 ) == remove_check ) ;	258:1:6779:7010	4533951	2	True				
ANR	4534041	AndExpression	found && ( ( val1 != 0 ) == periodic_hold ) && ( ( val2 != 0 ) == periodic_remove ) && ( ( val3 != 0 ) == periodic_release ) && ( ( val4 != 0 ) == hold_check ) && ( ( val5 != 0 ) == remove_check )		4533951	0		&&			
ANR	4534042	Identifier	found		4533951	0					
ANR	4534043	AndExpression	( ( val1 != 0 ) == periodic_hold ) && ( ( val2 != 0 ) == periodic_remove ) && ( ( val3 != 0 ) == periodic_release ) && ( ( val4 != 0 ) == hold_check ) && ( ( val5 != 0 ) == remove_check )		4533951	1		&&			
ANR	4534044	EqualityExpression	( val1 != 0 ) == periodic_hold		4533951	0		==			
ANR	4534045	EqualityExpression	val1 != 0		4533951	0		!=			
ANR	4534046	Identifier	val1		4533951	0					
ANR	4534047	PrimaryExpression	0		4533951	1					
ANR	4534048	Identifier	periodic_hold		4533951	1					
ANR	4534049	AndExpression	( ( val2 != 0 ) == periodic_remove ) && ( ( val3 != 0 ) == periodic_release ) && ( ( val4 != 0 ) == hold_check ) && ( ( val5 != 0 ) == remove_check )		4533951	1		&&			
ANR	4534050	EqualityExpression	( val2 != 0 ) == periodic_remove		4533951	0		==			
ANR	4534051	EqualityExpression	val2 != 0		4533951	0		!=			
ANR	4534052	Identifier	val2		4533951	0					
ANR	4534053	PrimaryExpression	0		4533951	1					
ANR	4534054	Identifier	periodic_remove		4533951	1					
ANR	4534055	AndExpression	( ( val3 != 0 ) == periodic_release ) && ( ( val4 != 0 ) == hold_check ) && ( ( val5 != 0 ) == remove_check )		4533951	1		&&			
ANR	4534056	EqualityExpression	( val3 != 0 ) == periodic_release		4533951	0		==			
ANR	4534057	EqualityExpression	val3 != 0		4533951	0		!=			
ANR	4534058	Identifier	val3		4533951	0					
ANR	4534059	PrimaryExpression	0		4533951	1					
ANR	4534060	Identifier	periodic_release		4533951	1					
ANR	4534061	AndExpression	( ( val4 != 0 ) == hold_check ) && ( ( val5 != 0 ) == remove_check )		4533951	1		&&			
ANR	4534062	EqualityExpression	( val4 != 0 ) == hold_check		4533951	0		==			
ANR	4534063	EqualityExpression	val4 != 0		4533951	0		!=			
ANR	4534064	Identifier	val4		4533951	0					
ANR	4534065	PrimaryExpression	0		4533951	1					
ANR	4534066	Identifier	hold_check		4533951	1					
ANR	4534067	EqualityExpression	( val5 != 0 ) == remove_check		4533951	1		==			
ANR	4534068	EqualityExpression	val5 != 0		4533951	0		!=			
ANR	4534069	Identifier	val5		4533951	0					
ANR	4534070	PrimaryExpression	0		4533951	1					
ANR	4534071	Identifier	remove_check		4533951	1					
ANR	4534072	ReturnType	bool		4533951	1					
ANR	4534073	Identifier	user_policy_ad_checker		4533951	2					
ANR	4534074	ParameterList	"ClassAd * ad , bool periodic_hold , bool periodic_remove , bool periodic_release , bool hold_check , bool remove_check"		4533951	3					
ANR	4534075	Parameter	ClassAd * ad	244:28:6281:6291	4533951	0	True				
ANR	4534076	ParameterType	ClassAd *		4533951	0					
ANR	4534077	Identifier	ad		4533951	1					
ANR	4534078	Parameter	bool periodic_hold	245:8:6302:6319	4533951	1	True				
ANR	4534079	ParameterType	bool		4533951	0					
ANR	4534080	Identifier	periodic_hold		4533951	1					
ANR	4534081	Parameter	bool periodic_remove	246:7:6329:6348	4533951	2	True				
ANR	4534082	ParameterType	bool		4533951	0					
ANR	4534083	Identifier	periodic_remove		4533951	1					
ANR	4534084	Parameter	bool periodic_release	247:7:6358:6378	4533951	3	True				
ANR	4534085	ParameterType	bool		4533951	0					
ANR	4534086	Identifier	periodic_release		4533951	1					
ANR	4534087	Parameter	bool hold_check	248:7:6388:6402	4533951	4	True				
ANR	4534088	ParameterType	bool		4533951	0					
ANR	4534089	Identifier	hold_check		4533951	1					
ANR	4534090	Parameter	bool remove_check	249:7:6412:6428	4533951	5	True				
ANR	4534091	ParameterType	bool		4533951	0					
ANR	4534092	Identifier	remove_check		4533951	1					
ANR	4534093	CFGEntryNode	ENTRY		4533951		True				
ANR	4534094	CFGExitNode	EXIT		4533951		True				
ANR	4534095	Symbol	ad		4533951						
ANR	4534096	Symbol	val5		4533951						
ANR	4534097	Symbol	NULL		4533951						
ANR	4534098	Symbol	periodic_release		4533951						
ANR	4534099	Symbol	val4		4533951						
ANR	4534100	Symbol	ATTR_PERIODIC_HOLD_CHECK		4533951						
ANR	4534101	Symbol	val3		4533951						
ANR	4534102	Symbol	val2		4533951						
ANR	4534103	Symbol	periodic_remove		4533951						
ANR	4534104	Symbol	val1		4533951						
ANR	4534105	Symbol	ad -> EvalBool		4533951						
ANR	4534106	Symbol	periodic_hold		4533951						
ANR	4534107	Symbol	ATTR_ON_EXIT_HOLD_CHECK		4533951						
ANR	4534108	Symbol	remove_check		4533951						
ANR	4534109	Symbol	* ad		4533951						
ANR	4534110	Symbol	ATTR_PERIODIC_REMOVE_CHECK		4533951						
ANR	4534111	Symbol	ATTR_PERIODIC_RELEASE_CHECK		4533951						
ANR	4534112	Symbol	found		4533951						
ANR	4534113	Symbol	ATTR_ON_EXIT_REMOVE_CHECK		4533951						
ANR	4534114	Symbol	hold_check		4533951						
ANR	4534115	Function	user_policy_ad_checker	266:0:7015:7503							
ANR	4534116	FunctionDef	"user_policy_ad_checker (ClassAd * ad , bool timer_remove , bool periodic_hold , bool periodic_remove , bool periodic_release , bool hold_check , bool remove_check)"		4534115	0					
ANR	4534117	CompoundStatement		273:0:7219:7503	4534115	0					
ANR	4534118	IdentifierDeclStatement	int val ;	274:1:7222:7229	4534115	0	True				
ANR	4534119	IdentifierDecl	val		4534115	0					
ANR	4534120	IdentifierDeclType	int		4534115	0					
ANR	4534121	Identifier	val		4534115	1					
ANR	4534122	IdentifierDeclStatement	"bool found = ad -> EvalBool ( ATTR_TIMER_REMOVE_CHECK , NULL , val ) ;"	275:1:7232:7293	4534115	1	True				
ANR	4534123	IdentifierDecl	"found = ad -> EvalBool ( ATTR_TIMER_REMOVE_CHECK , NULL , val )"		4534115	0					
ANR	4534124	IdentifierDeclType	bool		4534115	0					
ANR	4534125	Identifier	found		4534115	1					
ANR	4534126	AssignmentExpression	"found = ad -> EvalBool ( ATTR_TIMER_REMOVE_CHECK , NULL , val )"		4534115	2		=			
ANR	4534127	Identifier	found		4534115	0					
ANR	4534128	CallExpression	"ad -> EvalBool ( ATTR_TIMER_REMOVE_CHECK , NULL , val )"		4534115	1					
ANR	4534129	Callee	ad -> EvalBool		4534115	0					
ANR	4534130	PtrMemberAccess	ad -> EvalBool		4534115	0					
ANR	4534131	Identifier	ad		4534115	0					
ANR	4534132	Identifier	EvalBool		4534115	1					
ANR	4534133	ArgumentList	ATTR_TIMER_REMOVE_CHECK		4534115	1					
ANR	4534134	Argument	ATTR_TIMER_REMOVE_CHECK		4534115	0					
ANR	4534135	Identifier	ATTR_TIMER_REMOVE_CHECK		4534115	0					
ANR	4534136	Argument	NULL		4534115	1					
ANR	4534137	Identifier	NULL		4534115	0					
ANR	4534138	Argument	val		4534115	2					
ANR	4534139	Identifier	val		4534115	0					
ANR	4534140	ReturnStatement	"return found && ( ( val != 0 ) == timer_remove ) && user_policy_ad_checker ( ad , periodic_hold , periodic_remove , periodic_release , hold_check , remove_check ) ;"	277:1:7298:7501	4534115	2	True				
ANR	4534141	AndExpression	"found && ( ( val != 0 ) == timer_remove ) && user_policy_ad_checker ( ad , periodic_hold , periodic_remove , periodic_release , hold_check , remove_check )"		4534115	0		&&			
ANR	4534142	Identifier	found		4534115	0					
ANR	4534143	AndExpression	"( ( val != 0 ) == timer_remove ) && user_policy_ad_checker ( ad , periodic_hold , periodic_remove , periodic_release , hold_check , remove_check )"		4534115	1		&&			
ANR	4534144	EqualityExpression	( val != 0 ) == timer_remove		4534115	0		==			
ANR	4534145	EqualityExpression	val != 0		4534115	0		!=			
ANR	4534146	Identifier	val		4534115	0					
ANR	4534147	PrimaryExpression	0		4534115	1					
ANR	4534148	Identifier	timer_remove		4534115	1					
ANR	4534149	CallExpression	"user_policy_ad_checker ( ad , periodic_hold , periodic_remove , periodic_release , hold_check , remove_check )"		4534115	1					
ANR	4534150	Callee	user_policy_ad_checker		4534115	0					
ANR	4534151	Identifier	user_policy_ad_checker		4534115	0					
ANR	4534152	ArgumentList	ad		4534115	1					
ANR	4534153	Argument	ad		4534115	0					
ANR	4534154	Identifier	ad		4534115	0					
ANR	4534155	Argument	periodic_hold		4534115	1					
ANR	4534156	Identifier	periodic_hold		4534115	0					
ANR	4534157	Argument	periodic_remove		4534115	2					
ANR	4534158	Identifier	periodic_remove		4534115	0					
ANR	4534159	Argument	periodic_release		4534115	3					
ANR	4534160	Identifier	periodic_release		4534115	0					
ANR	4534161	Argument	hold_check		4534115	4					
ANR	4534162	Identifier	hold_check		4534115	0					
ANR	4534163	Argument	remove_check		4534115	5					
ANR	4534164	Identifier	remove_check		4534115	0					
ANR	4534165	ReturnType	bool		4534115	1					
ANR	4534166	Identifier	user_policy_ad_checker		4534115	2					
ANR	4534167	ParameterList	"ClassAd * ad , bool timer_remove , bool periodic_hold , bool periodic_remove , bool periodic_release , bool hold_check , bool remove_check"		4534115	3					
ANR	4534168	Parameter	ClassAd * ad	266:28:7043:7053	4534115	0	True				
ANR	4534169	ParameterType	ClassAd *		4534115	0					
ANR	4534170	Identifier	ad		4534115	1					
ANR	4534171	Parameter	bool timer_remove	267:7:7063:7079	4534115	1	True				
ANR	4534172	ParameterType	bool		4534115	0					
ANR	4534173	Identifier	timer_remove		4534115	1					
ANR	4534174	Parameter	bool periodic_hold	268:7:7089:7106	4534115	2	True				
ANR	4534175	ParameterType	bool		4534115	0					
ANR	4534176	Identifier	periodic_hold		4534115	1					
ANR	4534177	Parameter	bool periodic_remove	269:7:7116:7135	4534115	3	True				
ANR	4534178	ParameterType	bool		4534115	0					
ANR	4534179	Identifier	periodic_remove		4534115	1					
ANR	4534180	Parameter	bool periodic_release	270:7:7145:7165	4534115	4	True				
ANR	4534181	ParameterType	bool		4534115	0					
ANR	4534182	Identifier	periodic_release		4534115	1					
ANR	4534183	Parameter	bool hold_check	271:7:7175:7189	4534115	5	True				
ANR	4534184	ParameterType	bool		4534115	0					
ANR	4534185	Identifier	hold_check		4534115	1					
ANR	4534186	Parameter	bool remove_check	272:7:7199:7215	4534115	6	True				
ANR	4534187	ParameterType	bool		4534115	0					
ANR	4534188	Identifier	remove_check		4534115	1					
ANR	4534189	CFGEntryNode	ENTRY		4534115		True				
ANR	4534190	CFGExitNode	EXIT		4534115		True				
ANR	4534191	Symbol	val		4534115						
ANR	4534192	Symbol	ad		4534115						
ANR	4534193	Symbol	NULL		4534115						
ANR	4534194	Symbol	periodic_release		4534115						
ANR	4534195	Symbol	periodic_remove		4534115						
ANR	4534196	Symbol	ad -> EvalBool		4534115						
ANR	4534197	Symbol	periodic_hold		4534115						
ANR	4534198	Symbol	remove_check		4534115						
ANR	4534199	Symbol	* ad		4534115						
ANR	4534200	Symbol	timer_remove		4534115						
ANR	4534201	Symbol	ATTR_TIMER_REMOVE_CHECK		4534115						
ANR	4534202	Symbol	found		4534115						
ANR	4534203	Symbol	hold_check		4534115						
ANR	4534204	Symbol	user_policy_ad_checker		4534115						
ANR	4534205	Function	insert_into_ad	286:0:7506:7668							
ANR	4534206	FunctionDef	"insert_into_ad (ClassAd * ad , const char * attribute , const char * value)"		4534205	0					
ANR	4534207	CompoundStatement		286:75:7581:7668	4534205	0					
ANR	4534208	IdentifierDeclStatement	MyString buf ;	287:1:7584:7596	4534205	0	True				
ANR	4534209	IdentifierDecl	buf		4534205	0					
ANR	4534210	IdentifierDeclType	MyString		4534205	0					
ANR	4534211	Identifier	buf		4534205	1					
ANR	4534212	ExpressionStatement	"buf . sprintf ( ""%s = %s"" , attribute , value )"	289:1:7600:7640	4534205	1	True				
ANR	4534213	CallExpression	"buf . sprintf ( ""%s = %s"" , attribute , value )"		4534205	0					
ANR	4534214	Callee	buf . sprintf		4534205	0					
ANR	4534215	MemberAccess	buf . sprintf		4534205	0					
ANR	4534216	Identifier	buf		4534205	0					
ANR	4534217	Identifier	sprintf		4534205	1					
ANR	4534218	ArgumentList	"""%s = %s"""		4534205	1					
ANR	4534219	Argument	"""%s = %s"""		4534205	0					
ANR	4534220	PrimaryExpression	"""%s = %s"""		4534205	0					
ANR	4534221	Argument	attribute		4534205	1					
ANR	4534222	Identifier	attribute		4534205	0					
ANR	4534223	Argument	value		4534205	2					
ANR	4534224	Identifier	value		4534205	0					
ANR	4534225	ExpressionStatement	ad -> Insert ( buf . Value ( ) )	290:1:7643:7666	4534205	2	True				
ANR	4534226	CallExpression	ad -> Insert ( buf . Value ( ) )		4534205	0					
ANR	4534227	Callee	ad -> Insert		4534205	0					
ANR	4534228	PtrMemberAccess	ad -> Insert		4534205	0					
ANR	4534229	Identifier	ad		4534205	0					
ANR	4534230	Identifier	Insert		4534205	1					
ANR	4534231	ArgumentList	buf . Value ( )		4534205	1					
ANR	4534232	Argument	buf . Value ( )		4534205	0					
ANR	4534233	CallExpression	buf . Value ( )		4534205	0					
ANR	4534234	Callee	buf . Value		4534205	0					
ANR	4534235	MemberAccess	buf . Value		4534205	0					
ANR	4534236	Identifier	buf		4534205	0					
ANR	4534237	Identifier	Value		4534205	1					
ANR	4534238	ArgumentList			4534205	1					
ANR	4534239	ReturnType	void		4534205	1					
ANR	4534240	Identifier	insert_into_ad		4534205	2					
ANR	4534241	ParameterList	"ClassAd * ad , const char * attribute , const char * value"		4534205	3					
ANR	4534242	Parameter	ClassAd * ad	286:20:7526:7536	4534205	0	True				
ANR	4534243	ParameterType	ClassAd *		4534205	0					
ANR	4534244	Identifier	ad		4534205	1					
ANR	4534245	Parameter	const char * attribute	286:33:7539:7559	4534205	1	True				
ANR	4534246	ParameterType	const char *		4534205	0					
ANR	4534247	Identifier	attribute		4534205	1					
ANR	4534248	Parameter	const char * value	286:56:7562:7578	4534205	2	True				
ANR	4534249	ParameterType	const char *		4534205	0					
ANR	4534250	Identifier	value		4534205	1					
ANR	4534251	CFGEntryNode	ENTRY		4534205		True				
ANR	4534252	CFGExitNode	EXIT		4534205		True				
ANR	4534253	Symbol	buf		4534205						
ANR	4534254	Symbol	ad		4534205						
ANR	4534255	Symbol	buf . Value		4534205						
ANR	4534256	Symbol	attribute		4534205						
ANR	4534257	Symbol	value		4534205						
ANR	4534258	Function	cut_assert_z_impl	294:0:7739:8104							
ANR	4534259	FunctionDef	"cut_assert_z_impl (int value , const char * expr , const char * file , int line)"		4534258	0					
ANR	4534260	CompoundStatement		295:0:7819:8104	4534258	0					
ANR	4534261	IdentifierDeclStatement	int tmp_errno = errno ;	296:1:7822:7843	4534258	0	True				
ANR	4534262	IdentifierDecl	tmp_errno = errno		4534258	0					
ANR	4534263	IdentifierDeclType	int		4534258	0					
ANR	4534264	Identifier	tmp_errno		4534258	1					
ANR	4534265	AssignmentExpression	tmp_errno = errno		4534258	2		=			
ANR	4534266	Identifier	errno		4534258	0					
ANR	4534267	Identifier	errno		4534258	1					
ANR	4534268	IfStatement	if ( value != 0 )		4534258	1					
ANR	4534269	Condition	value != 0	298:5:7851:7860	4534258	0	True				
ANR	4534270	EqualityExpression	value != 0		4534258	0		!=			
ANR	4534271	Identifier	value		4534258	0					
ANR	4534272	PrimaryExpression	0		4534258	1					
ANR	4534273	CompoundStatement		4:17:43:43	4534258	1					
ANR	4534274	Statement	dprintf	299:2:7867:7873	4534258	0	True				
ANR	4534275	Statement	(	299:9:7874:7874	4534258	1	True				
ANR	4534276	Statement	D_ALWAYS	299:10:7875:7882	4534258	2	True				
ANR	4534277	Statement	","	299:18:7883:7883	4534258	3	True				
ANR	4534278	Statement	"""Failed cut_assert_z(%s) with value %d at line %d in """	299:20:7885:7938	4534258	4	True				
ANR	4534279	Statement	"""file %s.\\n"""	300:3:7943:7954	4534258	5	True				
ANR	4534280	Statement	","	300:15:7955:7955	4534258	6	True				
ANR	4534281	Statement	expr	300:17:7957:7960	4534258	7	True				
ANR	4534282	Statement	","	300:21:7961:7961	4534258	8	True				
ANR	4534283	Statement	value	300:23:7963:7967	4534258	9	True				
ANR	4534284	Statement	","	300:28:7968:7968	4534258	10	True				
ANR	4534285	Statement	line	300:30:7970:7973	4534258	11	True				
ANR	4534286	Statement	","	300:34:7974:7974	4534258	12	True				
ANR	4534287	Statement	file	300:36:7976:7979	4534258	13	True				
ANR	4534288	Statement	)	300:40:7980:7980	4534258	14	True				
ANR	4534289	ExpressionStatement		300:41:7981:7981	4534258	15	True				
ANR	4534290	ExpressionStatement	"dprintf ( D_ALWAYS , ""A possibly useful errno is %d(%s).\\n"" , tmp_errno , strerror ( tmp_errno ) )"	301:2:7985:8077	4534258	16	True				
ANR	4534291	CallExpression	"dprintf ( D_ALWAYS , ""A possibly useful errno is %d(%s).\\n"" , tmp_errno , strerror ( tmp_errno ) )"		4534258	0					
ANR	4534292	Callee	dprintf		4534258	0					
ANR	4534293	Identifier	dprintf		4534258	0					
ANR	4534294	ArgumentList	D_ALWAYS		4534258	1					
ANR	4534295	Argument	D_ALWAYS		4534258	0					
ANR	4534296	Identifier	D_ALWAYS		4534258	0					
ANR	4534297	Argument	"""A possibly useful errno is %d(%s).\\n"""		4534258	1					
ANR	4534298	PrimaryExpression	"""A possibly useful errno is %d(%s).\\n"""		4534258	0					
ANR	4534299	Argument	tmp_errno		4534258	2					
ANR	4534300	Identifier	tmp_errno		4534258	0					
ANR	4534301	Argument	strerror ( tmp_errno )		4534258	3					
ANR	4534302	CallExpression	strerror ( tmp_errno )		4534258	0					
ANR	4534303	Callee	strerror		4534258	0					
ANR	4534304	Identifier	strerror		4534258	0					
ANR	4534305	ArgumentList	tmp_errno		4534258	1					
ANR	4534306	Argument	tmp_errno		4534258	0					
ANR	4534307	Identifier	tmp_errno		4534258	0					
ANR	4534308	ExpressionStatement	exit ( EXIT_FAILURE )	303:2:8081:8099	4534258	17	True				
ANR	4534309	CallExpression	exit ( EXIT_FAILURE )		4534258	0					
ANR	4534310	Callee	exit		4534258	0					
ANR	4534311	Identifier	exit		4534258	0					
ANR	4534312	ArgumentList	EXIT_FAILURE		4534258	1					
ANR	4534313	Argument	EXIT_FAILURE		4534258	0					
ANR	4534314	Identifier	EXIT_FAILURE		4534258	0					
ANR	4534315	ReturnType	void		4534258	1					
ANR	4534316	Identifier	cut_assert_z_impl		4534258	2					
ANR	4534317	ParameterList	"int value , const char * expr , const char * file , int line"		4534258	3					
ANR	4534318	Parameter	int value	294:23:7762:7770	4534258	0	True				
ANR	4534319	ParameterType	int		4534258	0					
ANR	4534320	Identifier	value		4534258	1					
ANR	4534321	Parameter	const char * expr	294:34:7773:7788	4534258	1	True				
ANR	4534322	ParameterType	const char *		4534258	0					
ANR	4534323	Identifier	expr		4534258	1					
ANR	4534324	Parameter	const char * file	294:52:7791:7806	4534258	2	True				
ANR	4534325	ParameterType	const char *		4534258	0					
ANR	4534326	Identifier	file		4534258	1					
ANR	4534327	Parameter	int line	294:70:7809:7816	4534258	3	True				
ANR	4534328	ParameterType	int		4534258	0					
ANR	4534329	Identifier	line		4534258	1					
ANR	4534330	CFGEntryNode	ENTRY		4534258		True				
ANR	4534331	CFGExitNode	EXIT		4534258		True				
ANR	4534332	Symbol	strerror		4534258						
ANR	4534333	Symbol	errno		4534258						
ANR	4534334	Symbol	file		4534258						
ANR	4534335	Symbol	tmp_errno		4534258						
ANR	4534336	Symbol	EXIT_FAILURE		4534258						
ANR	4534337	Symbol	line		4534258						
ANR	4534338	Symbol	D_ALWAYS		4534258						
ANR	4534339	Symbol	expr		4534258						
ANR	4534340	Symbol	value		4534258						
ANR	4534341	Function	cut_assert_nz_impl	307:0:8107:8479							
ANR	4534342	FunctionDef	"cut_assert_nz_impl (int value , const char * expr , const char * file , int line)"		4534341	0					
ANR	4534343	CompoundStatement		308:0:8187:8479	4534341	0					
ANR	4534344	IdentifierDeclStatement	int tmp_errno = errno ;	309:1:8190:8211	4534341	0	True				
ANR	4534345	IdentifierDecl	tmp_errno = errno		4534341	0					
ANR	4534346	IdentifierDeclType	int		4534341	0					
ANR	4534347	Identifier	tmp_errno		4534341	1					
ANR	4534348	AssignmentExpression	tmp_errno = errno		4534341	2		=			
ANR	4534349	Identifier	errno		4534341	0					
ANR	4534350	Identifier	errno		4534341	1					
ANR	4534351	IfStatement	if ( value == 0 )		4534341	1					
ANR	4534352	Condition	value == 0	311:5:8219:8228	4534341	0	True				
ANR	4534353	EqualityExpression	value == 0		4534341	0		==			
ANR	4534354	Identifier	value		4534341	0					
ANR	4534355	PrimaryExpression	0		4534341	1					
ANR	4534356	CompoundStatement		4:17:43:43	4534341	1					
ANR	4534357	Statement	dprintf	312:2:8235:8241	4534341	0	True				
ANR	4534358	Statement	(	312:9:8242:8242	4534341	1	True				
ANR	4534359	Statement	D_ALWAYS	312:10:8243:8250	4534341	2	True				
ANR	4534360	Statement	","	312:18:8251:8251	4534341	3	True				
ANR	4534361	Statement	"""Failed cut_assert_nz(%s) with value %d at %d in %s."""	312:20:8253:8305	4534341	4	True				
ANR	4534362	Statement	"""\\n"""	313:3:8310:8313	4534341	5	True				
ANR	4534363	Statement	","	313:7:8314:8314	4534341	6	True				
ANR	4534364	Statement	expr	313:9:8316:8319	4534341	7	True				
ANR	4534365	Statement	","	313:13:8320:8320	4534341	8	True				
ANR	4534366	Statement	value	313:15:8322:8326	4534341	9	True				
ANR	4534367	Statement	","	313:20:8327:8327	4534341	10	True				
ANR	4534368	Statement	line	313:22:8329:8332	4534341	11	True				
ANR	4534369	Statement	","	313:26:8333:8333	4534341	12	True				
ANR	4534370	Statement	file	313:28:8335:8338	4534341	13	True				
ANR	4534371	Statement	)	313:32:8339:8339	4534341	14	True				
ANR	4534372	ExpressionStatement		313:33:8340:8340	4534341	15	True				
ANR	4534373	ExpressionStatement	"dprintf ( D_ALWAYS , ""A possibly useful errno is %d(%s).\\n"" , tmp_errno , strerror ( tmp_errno ) )"	314:2:8344:8436	4534341	16	True				
ANR	4534374	CallExpression	"dprintf ( D_ALWAYS , ""A possibly useful errno is %d(%s).\\n"" , tmp_errno , strerror ( tmp_errno ) )"		4534341	0					
ANR	4534375	Callee	dprintf		4534341	0					
ANR	4534376	Identifier	dprintf		4534341	0					
ANR	4534377	ArgumentList	D_ALWAYS		4534341	1					
ANR	4534378	Argument	D_ALWAYS		4534341	0					
ANR	4534379	Identifier	D_ALWAYS		4534341	0					
ANR	4534380	Argument	"""A possibly useful errno is %d(%s).\\n"""		4534341	1					
ANR	4534381	PrimaryExpression	"""A possibly useful errno is %d(%s).\\n"""		4534341	0					
ANR	4534382	Argument	tmp_errno		4534341	2					
ANR	4534383	Identifier	tmp_errno		4534341	0					
ANR	4534384	Argument	strerror ( tmp_errno )		4534341	3					
ANR	4534385	CallExpression	strerror ( tmp_errno )		4534341	0					
ANR	4534386	Callee	strerror		4534341	0					
ANR	4534387	Identifier	strerror		4534341	0					
ANR	4534388	ArgumentList	tmp_errno		4534341	1					
ANR	4534389	Argument	tmp_errno		4534341	0					
ANR	4534390	Identifier	tmp_errno		4534341	0					
ANR	4534391	ExpressionStatement	exit ( EXIT_FAILURE )	316:2:8440:8458	4534341	17	True				
ANR	4534392	CallExpression	exit ( EXIT_FAILURE )		4534341	0					
ANR	4534393	Callee	exit		4534341	0					
ANR	4534394	Identifier	exit		4534341	0					
ANR	4534395	ArgumentList	EXIT_FAILURE		4534341	1					
ANR	4534396	Argument	EXIT_FAILURE		4534341	0					
ANR	4534397	Identifier	EXIT_FAILURE		4534341	0					
ANR	4534398	ReturnStatement	return value ;	319:1:8465:8477	4534341	2	True				
ANR	4534399	Identifier	value		4534341	0					
ANR	4534400	ReturnType	int		4534341	1					
ANR	4534401	Identifier	cut_assert_nz_impl		4534341	2					
ANR	4534402	ParameterList	"int value , const char * expr , const char * file , int line"		4534341	3					
ANR	4534403	Parameter	int value	307:23:8130:8138	4534341	0	True				
ANR	4534404	ParameterType	int		4534341	0					
ANR	4534405	Identifier	value		4534341	1					
ANR	4534406	Parameter	const char * expr	307:34:8141:8156	4534341	1	True				
ANR	4534407	ParameterType	const char *		4534341	0					
ANR	4534408	Identifier	expr		4534341	1					
ANR	4534409	Parameter	const char * file	307:52:8159:8174	4534341	2	True				
ANR	4534410	ParameterType	const char *		4534341	0					
ANR	4534411	Identifier	file		4534341	1					
ANR	4534412	Parameter	int line	307:70:8177:8184	4534341	3	True				
ANR	4534413	ParameterType	int		4534341	0					
ANR	4534414	Identifier	line		4534341	1					
ANR	4534415	CFGEntryNode	ENTRY		4534341		True				
ANR	4534416	CFGExitNode	EXIT		4534341		True				
ANR	4534417	Symbol	strerror		4534341						
ANR	4534418	Symbol	errno		4534341						
ANR	4534419	Symbol	file		4534341						
ANR	4534420	Symbol	tmp_errno		4534341						
ANR	4534421	Symbol	EXIT_FAILURE		4534341						
ANR	4534422	Symbol	line		4534341						
ANR	4534423	Symbol	D_ALWAYS		4534341						
ANR	4534424	Symbol	expr		4534341						
ANR	4534425	Symbol	value		4534341						
ANR	4534426	Function	cut_assert_gz_impl	322:0:8482:8854							
ANR	4534427	FunctionDef	"cut_assert_gz_impl (int value , const char * expr , const char * file , int line)"		4534426	0					
ANR	4534428	CompoundStatement		323:0:8562:8854	4534426	0					
ANR	4534429	IdentifierDeclStatement	int tmp_errno = errno ;	324:1:8565:8586	4534426	0	True				
ANR	4534430	IdentifierDecl	tmp_errno = errno		4534426	0					
ANR	4534431	IdentifierDeclType	int		4534426	0					
ANR	4534432	Identifier	tmp_errno		4534426	1					
ANR	4534433	AssignmentExpression	tmp_errno = errno		4534426	2		=			
ANR	4534434	Identifier	errno		4534426	0					
ANR	4534435	Identifier	errno		4534426	1					
ANR	4534436	IfStatement	if ( value <= 0 )		4534426	1					
ANR	4534437	Condition	value <= 0	326:5:8594:8603	4534426	0	True				
ANR	4534438	RelationalExpression	value <= 0		4534426	0		<=			
ANR	4534439	Identifier	value		4534426	0					
ANR	4534440	PrimaryExpression	0		4534426	1					
ANR	4534441	CompoundStatement		4:17:43:43	4534426	1					
ANR	4534442	Statement	dprintf	327:2:8610:8616	4534426	0	True				
ANR	4534443	Statement	(	327:9:8617:8617	4534426	1	True				
ANR	4534444	Statement	D_ALWAYS	327:10:8618:8625	4534426	2	True				
ANR	4534445	Statement	","	327:18:8626:8626	4534426	3	True				
ANR	4534446	Statement	"""Failed cut_assert_gz(%s) with value %d at %d in %s."""	327:20:8628:8680	4534426	4	True				
ANR	4534447	Statement	"""\\n"""	328:3:8685:8688	4534426	5	True				
ANR	4534448	Statement	","	328:7:8689:8689	4534426	6	True				
ANR	4534449	Statement	expr	328:9:8691:8694	4534426	7	True				
ANR	4534450	Statement	","	328:13:8695:8695	4534426	8	True				
ANR	4534451	Statement	value	328:15:8697:8701	4534426	9	True				
ANR	4534452	Statement	","	328:20:8702:8702	4534426	10	True				
ANR	4534453	Statement	line	328:22:8704:8707	4534426	11	True				
ANR	4534454	Statement	","	328:26:8708:8708	4534426	12	True				
ANR	4534455	Statement	file	328:28:8710:8713	4534426	13	True				
ANR	4534456	Statement	)	328:32:8714:8714	4534426	14	True				
ANR	4534457	ExpressionStatement		328:33:8715:8715	4534426	15	True				
ANR	4534458	ExpressionStatement	"dprintf ( D_ALWAYS , ""A possibly useful errno is %d(%s).\\n"" , tmp_errno , strerror ( tmp_errno ) )"	329:2:8719:8811	4534426	16	True				
ANR	4534459	CallExpression	"dprintf ( D_ALWAYS , ""A possibly useful errno is %d(%s).\\n"" , tmp_errno , strerror ( tmp_errno ) )"		4534426	0					
ANR	4534460	Callee	dprintf		4534426	0					
ANR	4534461	Identifier	dprintf		4534426	0					
ANR	4534462	ArgumentList	D_ALWAYS		4534426	1					
ANR	4534463	Argument	D_ALWAYS		4534426	0					
ANR	4534464	Identifier	D_ALWAYS		4534426	0					
ANR	4534465	Argument	"""A possibly useful errno is %d(%s).\\n"""		4534426	1					
ANR	4534466	PrimaryExpression	"""A possibly useful errno is %d(%s).\\n"""		4534426	0					
ANR	4534467	Argument	tmp_errno		4534426	2					
ANR	4534468	Identifier	tmp_errno		4534426	0					
ANR	4534469	Argument	strerror ( tmp_errno )		4534426	3					
ANR	4534470	CallExpression	strerror ( tmp_errno )		4534426	0					
ANR	4534471	Callee	strerror		4534426	0					
ANR	4534472	Identifier	strerror		4534426	0					
ANR	4534473	ArgumentList	tmp_errno		4534426	1					
ANR	4534474	Argument	tmp_errno		4534426	0					
ANR	4534475	Identifier	tmp_errno		4534426	0					
ANR	4534476	ExpressionStatement	exit ( EXIT_FAILURE )	331:2:8815:8833	4534426	17	True				
ANR	4534477	CallExpression	exit ( EXIT_FAILURE )		4534426	0					
ANR	4534478	Callee	exit		4534426	0					
ANR	4534479	Identifier	exit		4534426	0					
ANR	4534480	ArgumentList	EXIT_FAILURE		4534426	1					
ANR	4534481	Argument	EXIT_FAILURE		4534426	0					
ANR	4534482	Identifier	EXIT_FAILURE		4534426	0					
ANR	4534483	ReturnStatement	return value ;	334:1:8840:8852	4534426	2	True				
ANR	4534484	Identifier	value		4534426	0					
ANR	4534485	ReturnType	int		4534426	1					
ANR	4534486	Identifier	cut_assert_gz_impl		4534426	2					
ANR	4534487	ParameterList	"int value , const char * expr , const char * file , int line"		4534426	3					
ANR	4534488	Parameter	int value	322:23:8505:8513	4534426	0	True				
ANR	4534489	ParameterType	int		4534426	0					
ANR	4534490	Identifier	value		4534426	1					
ANR	4534491	Parameter	const char * expr	322:34:8516:8531	4534426	1	True				
ANR	4534492	ParameterType	const char *		4534426	0					
ANR	4534493	Identifier	expr		4534426	1					
ANR	4534494	Parameter	const char * file	322:52:8534:8549	4534426	2	True				
ANR	4534495	ParameterType	const char *		4534426	0					
ANR	4534496	Identifier	file		4534426	1					
ANR	4534497	Parameter	int line	322:70:8552:8559	4534426	3	True				
ANR	4534498	ParameterType	int		4534426	0					
ANR	4534499	Identifier	line		4534426	1					
ANR	4534500	CFGEntryNode	ENTRY		4534426		True				
ANR	4534501	CFGExitNode	EXIT		4534426		True				
ANR	4534502	Symbol	strerror		4534426						
ANR	4534503	Symbol	errno		4534426						
ANR	4534504	Symbol	file		4534426						
ANR	4534505	Symbol	tmp_errno		4534426						
ANR	4534506	Symbol	EXIT_FAILURE		4534426						
ANR	4534507	Symbol	line		4534426						
ANR	4534508	Symbol	D_ALWAYS		4534426						
ANR	4534509	Symbol	expr		4534426						
ANR	4534510	Symbol	value		4534426						
ANR	4534511	Function	cut_assert_lz_impl	337:0:8857:9229							
ANR	4534512	FunctionDef	"cut_assert_lz_impl (int value , const char * expr , const char * file , int line)"		4534511	0					
ANR	4534513	CompoundStatement		338:0:8937:9229	4534511	0					
ANR	4534514	IdentifierDeclStatement	int tmp_errno = errno ;	339:1:8940:8961	4534511	0	True				
ANR	4534515	IdentifierDecl	tmp_errno = errno		4534511	0					
ANR	4534516	IdentifierDeclType	int		4534511	0					
ANR	4534517	Identifier	tmp_errno		4534511	1					
ANR	4534518	AssignmentExpression	tmp_errno = errno		4534511	2		=			
ANR	4534519	Identifier	errno		4534511	0					
ANR	4534520	Identifier	errno		4534511	1					
ANR	4534521	IfStatement	if ( value >= 0 )		4534511	1					
ANR	4534522	Condition	value >= 0	341:5:8969:8978	4534511	0	True				
ANR	4534523	RelationalExpression	value >= 0		4534511	0		>=			
ANR	4534524	Identifier	value		4534511	0					
ANR	4534525	PrimaryExpression	0		4534511	1					
ANR	4534526	CompoundStatement		4:17:43:43	4534511	1					
ANR	4534527	Statement	dprintf	342:2:8985:8991	4534511	0	True				
ANR	4534528	Statement	(	342:9:8992:8992	4534511	1	True				
ANR	4534529	Statement	D_ALWAYS	342:10:8993:9000	4534511	2	True				
ANR	4534530	Statement	","	342:18:9001:9001	4534511	3	True				
ANR	4534531	Statement	"""Failed cut_assert_lz(%s) with value %d at %d in %s."""	342:20:9003:9055	4534511	4	True				
ANR	4534532	Statement	"""\\n"""	343:3:9060:9063	4534511	5	True				
ANR	4534533	Statement	","	343:7:9064:9064	4534511	6	True				
ANR	4534534	Statement	expr	343:9:9066:9069	4534511	7	True				
ANR	4534535	Statement	","	343:13:9070:9070	4534511	8	True				
ANR	4534536	Statement	value	343:15:9072:9076	4534511	9	True				
ANR	4534537	Statement	","	343:20:9077:9077	4534511	10	True				
ANR	4534538	Statement	line	343:22:9079:9082	4534511	11	True				
ANR	4534539	Statement	","	343:26:9083:9083	4534511	12	True				
ANR	4534540	Statement	file	343:28:9085:9088	4534511	13	True				
ANR	4534541	Statement	)	343:32:9089:9089	4534511	14	True				
ANR	4534542	ExpressionStatement		343:33:9090:9090	4534511	15	True				
ANR	4534543	ExpressionStatement	"dprintf ( D_ALWAYS , ""A possibly useful errno is %d(%s).\\n"" , tmp_errno , strerror ( tmp_errno ) )"	344:2:9094:9186	4534511	16	True				
ANR	4534544	CallExpression	"dprintf ( D_ALWAYS , ""A possibly useful errno is %d(%s).\\n"" , tmp_errno , strerror ( tmp_errno ) )"		4534511	0					
ANR	4534545	Callee	dprintf		4534511	0					
ANR	4534546	Identifier	dprintf		4534511	0					
ANR	4534547	ArgumentList	D_ALWAYS		4534511	1					
ANR	4534548	Argument	D_ALWAYS		4534511	0					
ANR	4534549	Identifier	D_ALWAYS		4534511	0					
ANR	4534550	Argument	"""A possibly useful errno is %d(%s).\\n"""		4534511	1					
ANR	4534551	PrimaryExpression	"""A possibly useful errno is %d(%s).\\n"""		4534511	0					
ANR	4534552	Argument	tmp_errno		4534511	2					
ANR	4534553	Identifier	tmp_errno		4534511	0					
ANR	4534554	Argument	strerror ( tmp_errno )		4534511	3					
ANR	4534555	CallExpression	strerror ( tmp_errno )		4534511	0					
ANR	4534556	Callee	strerror		4534511	0					
ANR	4534557	Identifier	strerror		4534511	0					
ANR	4534558	ArgumentList	tmp_errno		4534511	1					
ANR	4534559	Argument	tmp_errno		4534511	0					
ANR	4534560	Identifier	tmp_errno		4534511	0					
ANR	4534561	ExpressionStatement	exit ( EXIT_FAILURE )	346:2:9190:9208	4534511	17	True				
ANR	4534562	CallExpression	exit ( EXIT_FAILURE )		4534511	0					
ANR	4534563	Callee	exit		4534511	0					
ANR	4534564	Identifier	exit		4534511	0					
ANR	4534565	ArgumentList	EXIT_FAILURE		4534511	1					
ANR	4534566	Argument	EXIT_FAILURE		4534511	0					
ANR	4534567	Identifier	EXIT_FAILURE		4534511	0					
ANR	4534568	ReturnStatement	return value ;	349:1:9215:9227	4534511	2	True				
ANR	4534569	Identifier	value		4534511	0					
ANR	4534570	ReturnType	int		4534511	1					
ANR	4534571	Identifier	cut_assert_lz_impl		4534511	2					
ANR	4534572	ParameterList	"int value , const char * expr , const char * file , int line"		4534511	3					
ANR	4534573	Parameter	int value	337:23:8880:8888	4534511	0	True				
ANR	4534574	ParameterType	int		4534511	0					
ANR	4534575	Identifier	value		4534511	1					
ANR	4534576	Parameter	const char * expr	337:34:8891:8906	4534511	1	True				
ANR	4534577	ParameterType	const char *		4534511	0					
ANR	4534578	Identifier	expr		4534511	1					
ANR	4534579	Parameter	const char * file	337:52:8909:8924	4534511	2	True				
ANR	4534580	ParameterType	const char *		4534511	0					
ANR	4534581	Identifier	file		4534511	1					
ANR	4534582	Parameter	int line	337:70:8927:8934	4534511	3	True				
ANR	4534583	ParameterType	int		4534511	0					
ANR	4534584	Identifier	line		4534511	1					
ANR	4534585	CFGEntryNode	ENTRY		4534511		True				
ANR	4534586	CFGExitNode	EXIT		4534511		True				
ANR	4534587	Symbol	strerror		4534511						
ANR	4534588	Symbol	errno		4534511						
ANR	4534589	Symbol	file		4534511						
ANR	4534590	Symbol	tmp_errno		4534511						
ANR	4534591	Symbol	EXIT_FAILURE		4534511						
ANR	4534592	Symbol	line		4534511						
ANR	4534593	Symbol	D_ALWAYS		4534511						
ANR	4534594	Symbol	expr		4534511						
ANR	4534595	Symbol	value		4534511						
ANR	4534596	Function	cut_assert_gez_impl	352:0:9232:9605							
ANR	4534597	FunctionDef	"cut_assert_gez_impl (int value , const char * expr , const char * file , int line)"		4534596	0					
ANR	4534598	CompoundStatement		353:0:9313:9605	4534596	0					
ANR	4534599	IdentifierDeclStatement	int tmp_errno = errno ;	354:1:9316:9337	4534596	0	True				
ANR	4534600	IdentifierDecl	tmp_errno = errno		4534596	0					
ANR	4534601	IdentifierDeclType	int		4534596	0					
ANR	4534602	Identifier	tmp_errno		4534596	1					
ANR	4534603	AssignmentExpression	tmp_errno = errno		4534596	2		=			
ANR	4534604	Identifier	errno		4534596	0					
ANR	4534605	Identifier	errno		4534596	1					
ANR	4534606	IfStatement	if ( value < 0 )		4534596	1					
ANR	4534607	Condition	value < 0	356:5:9345:9353	4534596	0	True				
ANR	4534608	RelationalExpression	value < 0		4534596	0		<			
ANR	4534609	Identifier	value		4534596	0					
ANR	4534610	PrimaryExpression	0		4534596	1					
ANR	4534611	CompoundStatement		4:16:42:42	4534596	1					
ANR	4534612	Statement	dprintf	357:2:9360:9366	4534596	0	True				
ANR	4534613	Statement	(	357:9:9367:9367	4534596	1	True				
ANR	4534614	Statement	D_ALWAYS	357:10:9368:9375	4534596	2	True				
ANR	4534615	Statement	","	357:18:9376:9376	4534596	3	True				
ANR	4534616	Statement	"""Failed cut_assert_gez(%s) with value %d at %d in %s."""	357:20:9378:9431	4534596	4	True				
ANR	4534617	Statement	"""\\n"""	358:3:9436:9439	4534596	5	True				
ANR	4534618	Statement	","	358:7:9440:9440	4534596	6	True				
ANR	4534619	Statement	expr	358:9:9442:9445	4534596	7	True				
ANR	4534620	Statement	","	358:13:9446:9446	4534596	8	True				
ANR	4534621	Statement	value	358:15:9448:9452	4534596	9	True				
ANR	4534622	Statement	","	358:20:9453:9453	4534596	10	True				
ANR	4534623	Statement	line	358:22:9455:9458	4534596	11	True				
ANR	4534624	Statement	","	358:26:9459:9459	4534596	12	True				
ANR	4534625	Statement	file	358:28:9461:9464	4534596	13	True				
ANR	4534626	Statement	)	358:32:9465:9465	4534596	14	True				
ANR	4534627	ExpressionStatement		358:33:9466:9466	4534596	15	True				
ANR	4534628	ExpressionStatement	"dprintf ( D_ALWAYS , ""A possibly useful errno is %d(%s).\\n"" , tmp_errno , strerror ( tmp_errno ) )"	359:2:9470:9562	4534596	16	True				
ANR	4534629	CallExpression	"dprintf ( D_ALWAYS , ""A possibly useful errno is %d(%s).\\n"" , tmp_errno , strerror ( tmp_errno ) )"		4534596	0					
ANR	4534630	Callee	dprintf		4534596	0					
ANR	4534631	Identifier	dprintf		4534596	0					
ANR	4534632	ArgumentList	D_ALWAYS		4534596	1					
ANR	4534633	Argument	D_ALWAYS		4534596	0					
ANR	4534634	Identifier	D_ALWAYS		4534596	0					
ANR	4534635	Argument	"""A possibly useful errno is %d(%s).\\n"""		4534596	1					
ANR	4534636	PrimaryExpression	"""A possibly useful errno is %d(%s).\\n"""		4534596	0					
ANR	4534637	Argument	tmp_errno		4534596	2					
ANR	4534638	Identifier	tmp_errno		4534596	0					
ANR	4534639	Argument	strerror ( tmp_errno )		4534596	3					
ANR	4534640	CallExpression	strerror ( tmp_errno )		4534596	0					
ANR	4534641	Callee	strerror		4534596	0					
ANR	4534642	Identifier	strerror		4534596	0					
ANR	4534643	ArgumentList	tmp_errno		4534596	1					
ANR	4534644	Argument	tmp_errno		4534596	0					
ANR	4534645	Identifier	tmp_errno		4534596	0					
ANR	4534646	ExpressionStatement	exit ( EXIT_FAILURE )	361:2:9566:9584	4534596	17	True				
ANR	4534647	CallExpression	exit ( EXIT_FAILURE )		4534596	0					
ANR	4534648	Callee	exit		4534596	0					
ANR	4534649	Identifier	exit		4534596	0					
ANR	4534650	ArgumentList	EXIT_FAILURE		4534596	1					
ANR	4534651	Argument	EXIT_FAILURE		4534596	0					
ANR	4534652	Identifier	EXIT_FAILURE		4534596	0					
ANR	4534653	ReturnStatement	return value ;	364:1:9591:9603	4534596	2	True				
ANR	4534654	Identifier	value		4534596	0					
ANR	4534655	ReturnType	int		4534596	1					
ANR	4534656	Identifier	cut_assert_gez_impl		4534596	2					
ANR	4534657	ParameterList	"int value , const char * expr , const char * file , int line"		4534596	3					
ANR	4534658	Parameter	int value	352:24:9256:9264	4534596	0	True				
ANR	4534659	ParameterType	int		4534596	0					
ANR	4534660	Identifier	value		4534596	1					
ANR	4534661	Parameter	const char * expr	352:35:9267:9282	4534596	1	True				
ANR	4534662	ParameterType	const char *		4534596	0					
ANR	4534663	Identifier	expr		4534596	1					
ANR	4534664	Parameter	const char * file	352:53:9285:9300	4534596	2	True				
ANR	4534665	ParameterType	const char *		4534596	0					
ANR	4534666	Identifier	file		4534596	1					
ANR	4534667	Parameter	int line	352:71:9303:9310	4534596	3	True				
ANR	4534668	ParameterType	int		4534596	0					
ANR	4534669	Identifier	line		4534596	1					
ANR	4534670	CFGEntryNode	ENTRY		4534596		True				
ANR	4534671	CFGExitNode	EXIT		4534596		True				
ANR	4534672	Symbol	strerror		4534596						
ANR	4534673	Symbol	errno		4534596						
ANR	4534674	Symbol	file		4534596						
ANR	4534675	Symbol	tmp_errno		4534596						
ANR	4534676	Symbol	EXIT_FAILURE		4534596						
ANR	4534677	Symbol	line		4534596						
ANR	4534678	Symbol	D_ALWAYS		4534596						
ANR	4534679	Symbol	expr		4534596						
ANR	4534680	Symbol	value		4534596						
ANR	4534681	Function	cut_assert_lez_impl	367:0:9608:9981							
ANR	4534682	FunctionDef	"cut_assert_lez_impl (int value , const char * expr , const char * file , int line)"		4534681	0					
ANR	4534683	CompoundStatement		368:0:9689:9981	4534681	0					
ANR	4534684	IdentifierDeclStatement	int tmp_errno = errno ;	369:1:9692:9713	4534681	0	True				
ANR	4534685	IdentifierDecl	tmp_errno = errno		4534681	0					
ANR	4534686	IdentifierDeclType	int		4534681	0					
ANR	4534687	Identifier	tmp_errno		4534681	1					
ANR	4534688	AssignmentExpression	tmp_errno = errno		4534681	2		=			
ANR	4534689	Identifier	errno		4534681	0					
ANR	4534690	Identifier	errno		4534681	1					
ANR	4534691	IfStatement	if ( value > 0 )		4534681	1					
ANR	4534692	Condition	value > 0	371:5:9721:9729	4534681	0	True				
ANR	4534693	RelationalExpression	value > 0		4534681	0		>			
ANR	4534694	Identifier	value		4534681	0					
ANR	4534695	PrimaryExpression	0		4534681	1					
ANR	4534696	CompoundStatement		4:16:42:42	4534681	1					
ANR	4534697	Statement	dprintf	372:2:9736:9742	4534681	0	True				
ANR	4534698	Statement	(	372:9:9743:9743	4534681	1	True				
ANR	4534699	Statement	D_ALWAYS	372:10:9744:9751	4534681	2	True				
ANR	4534700	Statement	","	372:18:9752:9752	4534681	3	True				
ANR	4534701	Statement	"""Failed cut_assert_lez(%s) with value %d at %d in %s."""	372:20:9754:9807	4534681	4	True				
ANR	4534702	Statement	"""\\n"""	373:3:9812:9815	4534681	5	True				
ANR	4534703	Statement	","	373:7:9816:9816	4534681	6	True				
ANR	4534704	Statement	expr	373:9:9818:9821	4534681	7	True				
ANR	4534705	Statement	","	373:13:9822:9822	4534681	8	True				
ANR	4534706	Statement	value	373:15:9824:9828	4534681	9	True				
ANR	4534707	Statement	","	373:20:9829:9829	4534681	10	True				
ANR	4534708	Statement	line	373:22:9831:9834	4534681	11	True				
ANR	4534709	Statement	","	373:26:9835:9835	4534681	12	True				
ANR	4534710	Statement	file	373:28:9837:9840	4534681	13	True				
ANR	4534711	Statement	)	373:32:9841:9841	4534681	14	True				
ANR	4534712	ExpressionStatement		373:33:9842:9842	4534681	15	True				
ANR	4534713	ExpressionStatement	"dprintf ( D_ALWAYS , ""A possibly useful errno is %d(%s).\\n"" , tmp_errno , strerror ( tmp_errno ) )"	374:2:9846:9938	4534681	16	True				
ANR	4534714	CallExpression	"dprintf ( D_ALWAYS , ""A possibly useful errno is %d(%s).\\n"" , tmp_errno , strerror ( tmp_errno ) )"		4534681	0					
ANR	4534715	Callee	dprintf		4534681	0					
ANR	4534716	Identifier	dprintf		4534681	0					
ANR	4534717	ArgumentList	D_ALWAYS		4534681	1					
ANR	4534718	Argument	D_ALWAYS		4534681	0					
ANR	4534719	Identifier	D_ALWAYS		4534681	0					
ANR	4534720	Argument	"""A possibly useful errno is %d(%s).\\n"""		4534681	1					
ANR	4534721	PrimaryExpression	"""A possibly useful errno is %d(%s).\\n"""		4534681	0					
ANR	4534722	Argument	tmp_errno		4534681	2					
ANR	4534723	Identifier	tmp_errno		4534681	0					
ANR	4534724	Argument	strerror ( tmp_errno )		4534681	3					
ANR	4534725	CallExpression	strerror ( tmp_errno )		4534681	0					
ANR	4534726	Callee	strerror		4534681	0					
ANR	4534727	Identifier	strerror		4534681	0					
ANR	4534728	ArgumentList	tmp_errno		4534681	1					
ANR	4534729	Argument	tmp_errno		4534681	0					
ANR	4534730	Identifier	tmp_errno		4534681	0					
ANR	4534731	ExpressionStatement	exit ( EXIT_FAILURE )	376:2:9942:9960	4534681	17	True				
ANR	4534732	CallExpression	exit ( EXIT_FAILURE )		4534681	0					
ANR	4534733	Callee	exit		4534681	0					
ANR	4534734	Identifier	exit		4534681	0					
ANR	4534735	ArgumentList	EXIT_FAILURE		4534681	1					
ANR	4534736	Argument	EXIT_FAILURE		4534681	0					
ANR	4534737	Identifier	EXIT_FAILURE		4534681	0					
ANR	4534738	ReturnStatement	return value ;	379:1:9967:9979	4534681	2	True				
ANR	4534739	Identifier	value		4534681	0					
ANR	4534740	ReturnType	int		4534681	1					
ANR	4534741	Identifier	cut_assert_lez_impl		4534681	2					
ANR	4534742	ParameterList	"int value , const char * expr , const char * file , int line"		4534681	3					
ANR	4534743	Parameter	int value	367:24:9632:9640	4534681	0	True				
ANR	4534744	ParameterType	int		4534681	0					
ANR	4534745	Identifier	value		4534681	1					
ANR	4534746	Parameter	const char * expr	367:35:9643:9658	4534681	1	True				
ANR	4534747	ParameterType	const char *		4534681	0					
ANR	4534748	Identifier	expr		4534681	1					
ANR	4534749	Parameter	const char * file	367:53:9661:9676	4534681	2	True				
ANR	4534750	ParameterType	const char *		4534681	0					
ANR	4534751	Identifier	file		4534681	1					
ANR	4534752	Parameter	int line	367:71:9679:9686	4534681	3	True				
ANR	4534753	ParameterType	int		4534681	0					
ANR	4534754	Identifier	line		4534681	1					
ANR	4534755	CFGEntryNode	ENTRY		4534681		True				
ANR	4534756	CFGExitNode	EXIT		4534681		True				
ANR	4534757	Symbol	strerror		4534681						
ANR	4534758	Symbol	errno		4534681						
ANR	4534759	Symbol	file		4534681						
ANR	4534760	Symbol	tmp_errno		4534681						
ANR	4534761	Symbol	EXIT_FAILURE		4534681						
ANR	4534762	Symbol	line		4534681						
ANR	4534763	Symbol	D_ALWAYS		4534681						
ANR	4534764	Symbol	expr		4534681						
ANR	4534765	Symbol	value		4534681						
ANR	4534766	Function	cut_assert_true_impl	382:0:9984:10365							
ANR	4534767	FunctionDef	"cut_assert_true_impl (bool value , const char * expr , const char * file , int line)"		4534766	0					
ANR	4534768	CompoundStatement		383:0:10068:10365	4534766	0					
ANR	4534769	IdentifierDeclStatement	int tmp_errno = errno ;	384:1:10071:10092	4534766	0	True				
ANR	4534770	IdentifierDecl	tmp_errno = errno		4534766	0					
ANR	4534771	IdentifierDeclType	int		4534766	0					
ANR	4534772	Identifier	tmp_errno		4534766	1					
ANR	4534773	AssignmentExpression	tmp_errno = errno		4534766	2		=			
ANR	4534774	Identifier	errno		4534766	0					
ANR	4534775	Identifier	errno		4534766	1					
ANR	4534776	IfStatement	if ( ! value )		4534766	1					
ANR	4534777	Condition	! value	386:5:10100:10105	4534766	0	True				
ANR	4534778	UnaryOperationExpression	! value		4534766	0					
ANR	4534779	UnaryOperator	!		4534766	0					
ANR	4534780	Identifier	value		4534766	1					
ANR	4534781	CompoundStatement		4:13:39:39	4534766	1					
ANR	4534782	Statement	dprintf	387:2:10112:10118	4534766	0	True				
ANR	4534783	Statement	(	387:9:10119:10119	4534766	1	True				
ANR	4534784	Statement	D_ALWAYS	387:10:10120:10127	4534766	2	True				
ANR	4534785	Statement	","	387:18:10128:10128	4534766	3	True				
ANR	4534786	Statement	"""Failed cut_assert_true(%s) with value %s at %d in %s"""	387:20:10130:10183	4534766	4	True				
ANR	4534787	Statement	""".\\n"""	388:3:10188:10192	4534766	5	True				
ANR	4534788	Statement	","	388:8:10193:10193	4534766	6	True				
ANR	4534789	Statement	expr	388:10:10195:10198	4534766	7	True				
ANR	4534790	Statement	","	388:14:10199:10199	4534766	8	True				
ANR	4534791	Statement	tfstr	388:16:10201:10205	4534766	9	True				
ANR	4534792	Statement	(	388:21:10206:10206	4534766	10	True				
ANR	4534793	Statement	value	388:22:10207:10211	4534766	11	True				
ANR	4534794	Statement	)	388:27:10212:10212	4534766	12	True				
ANR	4534795	Statement	","	388:28:10213:10213	4534766	13	True				
ANR	4534796	Statement	line	388:30:10215:10218	4534766	14	True				
ANR	4534797	Statement	","	388:34:10219:10219	4534766	15	True				
ANR	4534798	Statement	file	388:36:10221:10224	4534766	16	True				
ANR	4534799	Statement	)	388:40:10225:10225	4534766	17	True				
ANR	4534800	ExpressionStatement		388:41:10226:10226	4534766	18	True				
ANR	4534801	ExpressionStatement	"dprintf ( D_ALWAYS , ""A possibly useful errno is %d(%s).\\n"" , tmp_errno , strerror ( tmp_errno ) )"	389:2:10230:10322	4534766	19	True				
ANR	4534802	CallExpression	"dprintf ( D_ALWAYS , ""A possibly useful errno is %d(%s).\\n"" , tmp_errno , strerror ( tmp_errno ) )"		4534766	0					
ANR	4534803	Callee	dprintf		4534766	0					
ANR	4534804	Identifier	dprintf		4534766	0					
ANR	4534805	ArgumentList	D_ALWAYS		4534766	1					
ANR	4534806	Argument	D_ALWAYS		4534766	0					
ANR	4534807	Identifier	D_ALWAYS		4534766	0					
ANR	4534808	Argument	"""A possibly useful errno is %d(%s).\\n"""		4534766	1					
ANR	4534809	PrimaryExpression	"""A possibly useful errno is %d(%s).\\n"""		4534766	0					
ANR	4534810	Argument	tmp_errno		4534766	2					
ANR	4534811	Identifier	tmp_errno		4534766	0					
ANR	4534812	Argument	strerror ( tmp_errno )		4534766	3					
ANR	4534813	CallExpression	strerror ( tmp_errno )		4534766	0					
ANR	4534814	Callee	strerror		4534766	0					
ANR	4534815	Identifier	strerror		4534766	0					
ANR	4534816	ArgumentList	tmp_errno		4534766	1					
ANR	4534817	Argument	tmp_errno		4534766	0					
ANR	4534818	Identifier	tmp_errno		4534766	0					
ANR	4534819	ExpressionStatement	exit ( EXIT_FAILURE )	391:2:10326:10344	4534766	20	True				
ANR	4534820	CallExpression	exit ( EXIT_FAILURE )		4534766	0					
ANR	4534821	Callee	exit		4534766	0					
ANR	4534822	Identifier	exit		4534766	0					
ANR	4534823	ArgumentList	EXIT_FAILURE		4534766	1					
ANR	4534824	Argument	EXIT_FAILURE		4534766	0					
ANR	4534825	Identifier	EXIT_FAILURE		4534766	0					
ANR	4534826	ReturnStatement	return value ;	394:1:10351:10363	4534766	2	True				
ANR	4534827	Identifier	value		4534766	0					
ANR	4534828	ReturnType	bool		4534766	1					
ANR	4534829	Identifier	cut_assert_true_impl		4534766	2					
ANR	4534830	ParameterList	"bool value , const char * expr , const char * file , int line"		4534766	3					
ANR	4534831	Parameter	bool value	382:26:10010:10019	4534766	0	True				
ANR	4534832	ParameterType	bool		4534766	0					
ANR	4534833	Identifier	value		4534766	1					
ANR	4534834	Parameter	const char * expr	382:38:10022:10037	4534766	1	True				
ANR	4534835	ParameterType	const char *		4534766	0					
ANR	4534836	Identifier	expr		4534766	1					
ANR	4534837	Parameter	const char * file	382:56:10040:10055	4534766	2	True				
ANR	4534838	ParameterType	const char *		4534766	0					
ANR	4534839	Identifier	file		4534766	1					
ANR	4534840	Parameter	int line	382:74:10058:10065	4534766	3	True				
ANR	4534841	ParameterType	int		4534766	0					
ANR	4534842	Identifier	line		4534766	1					
ANR	4534843	CFGEntryNode	ENTRY		4534766		True				
ANR	4534844	CFGExitNode	EXIT		4534766		True				
ANR	4534845	Symbol	strerror		4534766						
ANR	4534846	Symbol	errno		4534766						
ANR	4534847	Symbol	file		4534766						
ANR	4534848	Symbol	tmp_errno		4534766						
ANR	4534849	Symbol	EXIT_FAILURE		4534766						
ANR	4534850	Symbol	line		4534766						
ANR	4534851	Symbol	D_ALWAYS		4534766						
ANR	4534852	Symbol	expr		4534766						
ANR	4534853	Symbol	value		4534766						
ANR	4534854	Function	cut_assert_false_impl	397:0:10368:10750							
ANR	4534855	FunctionDef	"cut_assert_false_impl (bool value , const char * expr , const char * file , int line)"		4534854	0					
ANR	4534856	CompoundStatement		398:0:10453:10750	4534854	0					
ANR	4534857	IdentifierDeclStatement	int tmp_errno = errno ;	399:1:10456:10477	4534854	0	True				
ANR	4534858	IdentifierDecl	tmp_errno = errno		4534854	0					
ANR	4534859	IdentifierDeclType	int		4534854	0					
ANR	4534860	Identifier	tmp_errno		4534854	1					
ANR	4534861	AssignmentExpression	tmp_errno = errno		4534854	2		=			
ANR	4534862	Identifier	errno		4534854	0					
ANR	4534863	Identifier	errno		4534854	1					
ANR	4534864	IfStatement	if ( value )		4534854	1					
ANR	4534865	Condition	value	401:5:10485:10489	4534854	0	True				
ANR	4534866	Identifier	value		4534854	0					
ANR	4534867	CompoundStatement		4:12:38:38	4534854	1					
ANR	4534868	Statement	dprintf	402:2:10496:10502	4534854	0	True				
ANR	4534869	Statement	(	402:9:10503:10503	4534854	1	True				
ANR	4534870	Statement	D_ALWAYS	402:10:10504:10511	4534854	2	True				
ANR	4534871	Statement	","	402:18:10512:10512	4534854	3	True				
ANR	4534872	Statement	"""Failed cut_assert_false(%s) with value %s at %d in """	402:20:10514:10566	4534854	4	True				
ANR	4534873	Statement	"""%s.\\n"""	403:3:10571:10577	4534854	5	True				
ANR	4534874	Statement	","	403:10:10578:10578	4534854	6	True				
ANR	4534875	Statement	expr	403:12:10580:10583	4534854	7	True				
ANR	4534876	Statement	","	403:16:10584:10584	4534854	8	True				
ANR	4534877	Statement	tfstr	403:18:10586:10590	4534854	9	True				
ANR	4534878	Statement	(	403:23:10591:10591	4534854	10	True				
ANR	4534879	Statement	value	403:24:10592:10596	4534854	11	True				
ANR	4534880	Statement	)	403:29:10597:10597	4534854	12	True				
ANR	4534881	Statement	","	403:30:10598:10598	4534854	13	True				
ANR	4534882	Statement	line	403:32:10600:10603	4534854	14	True				
ANR	4534883	Statement	","	403:36:10604:10604	4534854	15	True				
ANR	4534884	Statement	file	403:38:10606:10609	4534854	16	True				
ANR	4534885	Statement	)	403:42:10610:10610	4534854	17	True				
ANR	4534886	ExpressionStatement		403:43:10611:10611	4534854	18	True				
ANR	4534887	ExpressionStatement	"dprintf ( D_ALWAYS , ""A possibly useful errno is %d(%s).\\n"" , tmp_errno , strerror ( tmp_errno ) )"	404:2:10615:10707	4534854	19	True				
ANR	4534888	CallExpression	"dprintf ( D_ALWAYS , ""A possibly useful errno is %d(%s).\\n"" , tmp_errno , strerror ( tmp_errno ) )"		4534854	0					
ANR	4534889	Callee	dprintf		4534854	0					
ANR	4534890	Identifier	dprintf		4534854	0					
ANR	4534891	ArgumentList	D_ALWAYS		4534854	1					
ANR	4534892	Argument	D_ALWAYS		4534854	0					
ANR	4534893	Identifier	D_ALWAYS		4534854	0					
ANR	4534894	Argument	"""A possibly useful errno is %d(%s).\\n"""		4534854	1					
ANR	4534895	PrimaryExpression	"""A possibly useful errno is %d(%s).\\n"""		4534854	0					
ANR	4534896	Argument	tmp_errno		4534854	2					
ANR	4534897	Identifier	tmp_errno		4534854	0					
ANR	4534898	Argument	strerror ( tmp_errno )		4534854	3					
ANR	4534899	CallExpression	strerror ( tmp_errno )		4534854	0					
ANR	4534900	Callee	strerror		4534854	0					
ANR	4534901	Identifier	strerror		4534854	0					
ANR	4534902	ArgumentList	tmp_errno		4534854	1					
ANR	4534903	Argument	tmp_errno		4534854	0					
ANR	4534904	Identifier	tmp_errno		4534854	0					
ANR	4534905	ExpressionStatement	exit ( EXIT_FAILURE )	406:2:10711:10729	4534854	20	True				
ANR	4534906	CallExpression	exit ( EXIT_FAILURE )		4534854	0					
ANR	4534907	Callee	exit		4534854	0					
ANR	4534908	Identifier	exit		4534854	0					
ANR	4534909	ArgumentList	EXIT_FAILURE		4534854	1					
ANR	4534910	Argument	EXIT_FAILURE		4534854	0					
ANR	4534911	Identifier	EXIT_FAILURE		4534854	0					
ANR	4534912	ReturnStatement	return value ;	409:1:10736:10748	4534854	2	True				
ANR	4534913	Identifier	value		4534854	0					
ANR	4534914	ReturnType	bool		4534854	1					
ANR	4534915	Identifier	cut_assert_false_impl		4534854	2					
ANR	4534916	ParameterList	"bool value , const char * expr , const char * file , int line"		4534854	3					
ANR	4534917	Parameter	bool value	397:27:10395:10404	4534854	0	True				
ANR	4534918	ParameterType	bool		4534854	0					
ANR	4534919	Identifier	value		4534854	1					
ANR	4534920	Parameter	const char * expr	397:39:10407:10422	4534854	1	True				
ANR	4534921	ParameterType	const char *		4534854	0					
ANR	4534922	Identifier	expr		4534854	1					
ANR	4534923	Parameter	const char * file	397:57:10425:10440	4534854	2	True				
ANR	4534924	ParameterType	const char *		4534854	0					
ANR	4534925	Identifier	file		4534854	1					
ANR	4534926	Parameter	int line	397:75:10443:10450	4534854	3	True				
ANR	4534927	ParameterType	int		4534854	0					
ANR	4534928	Identifier	line		4534854	1					
ANR	4534929	CFGEntryNode	ENTRY		4534854		True				
ANR	4534930	CFGExitNode	EXIT		4534854		True				
ANR	4534931	Symbol	strerror		4534854						
ANR	4534932	Symbol	errno		4534854						
ANR	4534933	Symbol	file		4534854						
ANR	4534934	Symbol	tmp_errno		4534854						
ANR	4534935	Symbol	EXIT_FAILURE		4534854						
ANR	4534936	Symbol	line		4534854						
ANR	4534937	Symbol	D_ALWAYS		4534854						
ANR	4534938	Symbol	expr		4534854						
ANR	4534939	Symbol	value		4534854						
ANR	4534940	Function	cut_assert_not_null_impl	412:0:10753:11144							
ANR	4534941	FunctionDef	"cut_assert_not_null_impl (void * value , const char * expr , const char * file , int line)"		4534940	0					
ANR	4534942	CompoundStatement		412:90:10843:11144	4534940	0					
ANR	4534943	IdentifierDeclStatement	int tmp_errno = errno ;	413:1:10846:10867	4534940	0	True				
ANR	4534944	IdentifierDecl	tmp_errno = errno		4534940	0					
ANR	4534945	IdentifierDeclType	int		4534940	0					
ANR	4534946	Identifier	tmp_errno		4534940	1					
ANR	4534947	AssignmentExpression	tmp_errno = errno		4534940	2		=			
ANR	4534948	Identifier	errno		4534940	0					
ANR	4534949	Identifier	errno		4534940	1					
ANR	4534950	IfStatement	if ( value == NULL )		4534940	1					
ANR	4534951	Condition	value == NULL	415:5:10875:10887	4534940	0	True				
ANR	4534952	EqualityExpression	value == NULL		4534940	0		==			
ANR	4534953	Identifier	value		4534940	0					
ANR	4534954	Identifier	NULL		4534940	1					
ANR	4534955	CompoundStatement		4:20:46:46	4534940	1					
ANR	4534956	Statement	dprintf	416:2:10894:10900	4534940	0	True				
ANR	4534957	Statement	(	416:9:10901:10901	4534940	1	True				
ANR	4534958	Statement	D_ALWAYS	416:10:10902:10909	4534940	2	True				
ANR	4534959	Statement	","	416:18:10910:10910	4534940	3	True				
ANR	4534960	Statement	"""Failed cut_assert_not_null(%s) with value %p at %d """	416:20:10912:10964	4534940	4	True				
ANR	4534961	Statement	"""in %s.\\n"""	417:3:10969:10978	4534940	5	True				
ANR	4534962	Statement	","	417:13:10979:10979	4534940	6	True				
ANR	4534963	Statement	expr	417:15:10981:10984	4534940	7	True				
ANR	4534964	Statement	","	417:19:10985:10985	4534940	8	True				
ANR	4534965	Statement	value	417:21:10987:10991	4534940	9	True				
ANR	4534966	Statement	","	417:26:10992:10992	4534940	10	True				
ANR	4534967	Statement	line	417:28:10994:10997	4534940	11	True				
ANR	4534968	Statement	","	417:32:10998:10998	4534940	12	True				
ANR	4534969	Statement	file	417:34:11000:11003	4534940	13	True				
ANR	4534970	Statement	)	417:38:11004:11004	4534940	14	True				
ANR	4534971	ExpressionStatement		417:39:11005:11005	4534940	15	True				
ANR	4534972	ExpressionStatement	"dprintf ( D_ALWAYS , ""A possibly useful errno is %d(%s).\\n"" , tmp_errno , strerror ( tmp_errno ) )"	418:2:11009:11101	4534940	16	True				
ANR	4534973	CallExpression	"dprintf ( D_ALWAYS , ""A possibly useful errno is %d(%s).\\n"" , tmp_errno , strerror ( tmp_errno ) )"		4534940	0					
ANR	4534974	Callee	dprintf		4534940	0					
ANR	4534975	Identifier	dprintf		4534940	0					
ANR	4534976	ArgumentList	D_ALWAYS		4534940	1					
ANR	4534977	Argument	D_ALWAYS		4534940	0					
ANR	4534978	Identifier	D_ALWAYS		4534940	0					
ANR	4534979	Argument	"""A possibly useful errno is %d(%s).\\n"""		4534940	1					
ANR	4534980	PrimaryExpression	"""A possibly useful errno is %d(%s).\\n"""		4534940	0					
ANR	4534981	Argument	tmp_errno		4534940	2					
ANR	4534982	Identifier	tmp_errno		4534940	0					
ANR	4534983	Argument	strerror ( tmp_errno )		4534940	3					
ANR	4534984	CallExpression	strerror ( tmp_errno )		4534940	0					
ANR	4534985	Callee	strerror		4534940	0					
ANR	4534986	Identifier	strerror		4534940	0					
ANR	4534987	ArgumentList	tmp_errno		4534940	1					
ANR	4534988	Argument	tmp_errno		4534940	0					
ANR	4534989	Identifier	tmp_errno		4534940	0					
ANR	4534990	ExpressionStatement	exit ( EXIT_FAILURE )	420:2:11105:11123	4534940	17	True				
ANR	4534991	CallExpression	exit ( EXIT_FAILURE )		4534940	0					
ANR	4534992	Callee	exit		4534940	0					
ANR	4534993	Identifier	exit		4534940	0					
ANR	4534994	ArgumentList	EXIT_FAILURE		4534940	1					
ANR	4534995	Argument	EXIT_FAILURE		4534940	0					
ANR	4534996	Identifier	EXIT_FAILURE		4534940	0					
ANR	4534997	ReturnStatement	return value ;	423:1:11130:11142	4534940	2	True				
ANR	4534998	Identifier	value		4534940	0					
ANR	4534999	ReturnType	void *		4534940	1					
ANR	4535000	Identifier	cut_assert_not_null_impl		4534940	2					
ANR	4535001	ParameterList	"void * value , const char * expr , const char * file , int line"		4534940	3					
ANR	4535002	Parameter	void * value	412:31:10784:10794	4534940	0	True				
ANR	4535003	ParameterType	void *		4534940	0					
ANR	4535004	Identifier	value		4534940	1					
ANR	4535005	Parameter	const char * expr	412:44:10797:10812	4534940	1	True				
ANR	4535006	ParameterType	const char *		4534940	0					
ANR	4535007	Identifier	expr		4534940	1					
ANR	4535008	Parameter	const char * file	412:62:10815:10830	4534940	2	True				
ANR	4535009	ParameterType	const char *		4534940	0					
ANR	4535010	Identifier	file		4534940	1					
ANR	4535011	Parameter	int line	412:80:10833:10840	4534940	3	True				
ANR	4535012	ParameterType	int		4534940	0					
ANR	4535013	Identifier	line		4534940	1					
ANR	4535014	CFGEntryNode	ENTRY		4534940		True				
ANR	4535015	CFGExitNode	EXIT		4534940		True				
ANR	4535016	Symbol	strerror		4534940						
ANR	4535017	Symbol	errno		4534940						
ANR	4535018	Symbol	file		4534940						
ANR	4535019	Symbol	tmp_errno		4534940						
ANR	4535020	Symbol	NULL		4534940						
ANR	4535021	Symbol	EXIT_FAILURE		4534940						
ANR	4535022	Symbol	line		4534940						
ANR	4535023	Symbol	D_ALWAYS		4534940						
ANR	4535024	Symbol	expr		4534940						
ANR	4535025	Symbol	value		4534940						
ANR	4535026	Function	cut_assert_null_impl	427:0:11218:11589							
ANR	4535027	FunctionDef	"cut_assert_null_impl (void * value , const char * expr , const char * file , int line)"		4535026	0					
ANR	4535028	CompoundStatement		427:85:11303:11589	4535026	0					
ANR	4535029	IdentifierDeclStatement	int tmp_errno = errno ;	428:1:11306:11327	4535026	0	True				
ANR	4535030	IdentifierDecl	tmp_errno = errno		4535026	0					
ANR	4535031	IdentifierDeclType	int		4535026	0					
ANR	4535032	Identifier	tmp_errno		4535026	1					
ANR	4535033	AssignmentExpression	tmp_errno = errno		4535026	2		=			
ANR	4535034	Identifier	errno		4535026	0					
ANR	4535035	Identifier	errno		4535026	1					
ANR	4535036	IfStatement	if ( value != NULL )		4535026	1					
ANR	4535037	Condition	value != NULL	430:5:11335:11347	4535026	0	True				
ANR	4535038	EqualityExpression	value != NULL		4535026	0		!=			
ANR	4535039	Identifier	value		4535026	0					
ANR	4535040	Identifier	NULL		4535026	1					
ANR	4535041	CompoundStatement		4:20:46:46	4535026	1					
ANR	4535042	Statement	dprintf	431:2:11354:11360	4535026	0	True				
ANR	4535043	Statement	(	431:9:11361:11361	4535026	1	True				
ANR	4535044	Statement	D_ALWAYS	431:10:11362:11369	4535026	2	True				
ANR	4535045	Statement	","	431:18:11370:11370	4535026	3	True				
ANR	4535046	Statement	"""Failed cut_assert_not_null(%s) with value %p at %d """	431:20:11372:11424	4535026	4	True				
ANR	4535047	Statement	"""in %s.\\n"""	432:3:11429:11438	4535026	5	True				
ANR	4535048	Statement	","	432:13:11439:11439	4535026	6	True				
ANR	4535049	Statement	expr	432:15:11441:11444	4535026	7	True				
ANR	4535050	Statement	","	432:19:11445:11445	4535026	8	True				
ANR	4535051	Statement	value	432:21:11447:11451	4535026	9	True				
ANR	4535052	Statement	","	432:26:11452:11452	4535026	10	True				
ANR	4535053	Statement	line	432:28:11454:11457	4535026	11	True				
ANR	4535054	Statement	","	432:32:11458:11458	4535026	12	True				
ANR	4535055	Statement	file	432:34:11460:11463	4535026	13	True				
ANR	4535056	Statement	)	432:38:11464:11464	4535026	14	True				
ANR	4535057	ExpressionStatement		432:39:11465:11465	4535026	15	True				
ANR	4535058	ExpressionStatement	"dprintf ( D_ALWAYS , ""A possibly useful errno is %d(%s).\\n"" , tmp_errno , strerror ( tmp_errno ) )"	433:2:11469:11561	4535026	16	True				
ANR	4535059	CallExpression	"dprintf ( D_ALWAYS , ""A possibly useful errno is %d(%s).\\n"" , tmp_errno , strerror ( tmp_errno ) )"		4535026	0					
ANR	4535060	Callee	dprintf		4535026	0					
ANR	4535061	Identifier	dprintf		4535026	0					
ANR	4535062	ArgumentList	D_ALWAYS		4535026	1					
ANR	4535063	Argument	D_ALWAYS		4535026	0					
ANR	4535064	Identifier	D_ALWAYS		4535026	0					
ANR	4535065	Argument	"""A possibly useful errno is %d(%s).\\n"""		4535026	1					
ANR	4535066	PrimaryExpression	"""A possibly useful errno is %d(%s).\\n"""		4535026	0					
ANR	4535067	Argument	tmp_errno		4535026	2					
ANR	4535068	Identifier	tmp_errno		4535026	0					
ANR	4535069	Argument	strerror ( tmp_errno )		4535026	3					
ANR	4535070	CallExpression	strerror ( tmp_errno )		4535026	0					
ANR	4535071	Callee	strerror		4535026	0					
ANR	4535072	Identifier	strerror		4535026	0					
ANR	4535073	ArgumentList	tmp_errno		4535026	1					
ANR	4535074	Argument	tmp_errno		4535026	0					
ANR	4535075	Identifier	tmp_errno		4535026	0					
ANR	4535076	ExpressionStatement	exit ( EXIT_FAILURE )	435:2:11565:11583	4535026	17	True				
ANR	4535077	CallExpression	exit ( EXIT_FAILURE )		4535026	0					
ANR	4535078	Callee	exit		4535026	0					
ANR	4535079	Identifier	exit		4535026	0					
ANR	4535080	ArgumentList	EXIT_FAILURE		4535026	1					
ANR	4535081	Argument	EXIT_FAILURE		4535026	0					
ANR	4535082	Identifier	EXIT_FAILURE		4535026	0					
ANR	4535083	ReturnType	void		4535026	1					
ANR	4535084	Identifier	cut_assert_null_impl		4535026	2					
ANR	4535085	ParameterList	"void * value , const char * expr , const char * file , int line"		4535026	3					
ANR	4535086	Parameter	void * value	427:26:11244:11254	4535026	0	True				
ANR	4535087	ParameterType	void *		4535026	0					
ANR	4535088	Identifier	value		4535026	1					
ANR	4535089	Parameter	const char * expr	427:39:11257:11272	4535026	1	True				
ANR	4535090	ParameterType	const char *		4535026	0					
ANR	4535091	Identifier	expr		4535026	1					
ANR	4535092	Parameter	const char * file	427:57:11275:11290	4535026	2	True				
ANR	4535093	ParameterType	const char *		4535026	0					
ANR	4535094	Identifier	file		4535026	1					
ANR	4535095	Parameter	int line	427:75:11293:11300	4535026	3	True				
ANR	4535096	ParameterType	int		4535026	0					
ANR	4535097	Identifier	line		4535026	1					
ANR	4535098	CFGEntryNode	ENTRY		4535026		True				
ANR	4535099	CFGExitNode	EXIT		4535026		True				
ANR	4535100	Symbol	strerror		4535026						
ANR	4535101	Symbol	errno		4535026						
ANR	4535102	Symbol	file		4535026						
ANR	4535103	Symbol	tmp_errno		4535026						
ANR	4535104	Symbol	NULL		4535026						
ANR	4535105	Symbol	EXIT_FAILURE		4535026						
ANR	4535106	Symbol	line		4535026						
ANR	4535107	Symbol	D_ALWAYS		4535026						
ANR	4535108	Symbol	expr		4535026						
ANR	4535109	Symbol	value		4535026						
ANR	4535110	Function	create_empty_file	441:0:11627:11782							
ANR	4535111	FunctionDef	create_empty_file (const char * file)		4535110	0					
ANR	4535112	CompoundStatement		442:0:11668:11782	4535110	0					
ANR	4535113	IdentifierDeclStatement	FILE * f = NULL ;	443:1:11671:11685	4535110	0	True				
ANR	4535114	IdentifierDecl	* f = NULL		4535110	0					
ANR	4535115	IdentifierDeclType	FILE *		4535110	0					
ANR	4535116	Identifier	f		4535110	1					
ANR	4535117	AssignmentExpression	* f = NULL		4535110	2		=			
ANR	4535118	Identifier	NULL		4535110	0					
ANR	4535119	Identifier	NULL		4535110	1					
ANR	4535120	ExpressionStatement	"cut_assert_not_null ( f = safe_fopen_wrapper_follow ( file , ""w+"" ) )"	444:1:11688:11752	4535110	1	True				
ANR	4535121	CallExpression	"cut_assert_not_null ( f = safe_fopen_wrapper_follow ( file , ""w+"" ) )"		4535110	0					
ANR	4535122	Callee	cut_assert_not_null		4535110	0					
ANR	4535123	Identifier	cut_assert_not_null		4535110	0					
ANR	4535124	ArgumentList	"f = safe_fopen_wrapper_follow ( file , ""w+"" )"		4535110	1					
ANR	4535125	Argument	"f = safe_fopen_wrapper_follow ( file , ""w+"" )"		4535110	0					
ANR	4535126	AssignmentExpression	"f = safe_fopen_wrapper_follow ( file , ""w+"" )"		4535110	0		=			
ANR	4535127	Identifier	f		4535110	0					
ANR	4535128	CallExpression	"safe_fopen_wrapper_follow ( file , ""w+"" )"		4535110	1					
ANR	4535129	Callee	safe_fopen_wrapper_follow		4535110	0					
ANR	4535130	Identifier	safe_fopen_wrapper_follow		4535110	0					
ANR	4535131	ArgumentList	file		4535110	1					
ANR	4535132	Argument	file		4535110	0					
ANR	4535133	Identifier	file		4535110	0					
ANR	4535134	Argument	"""w+"""		4535110	1					
ANR	4535135	PrimaryExpression	"""w+"""		4535110	0					
ANR	4535136	ExpressionStatement	cut_assert_z ( fclose ( f ) )	445:1:11755:11780	4535110	2	True				
ANR	4535137	CallExpression	cut_assert_z ( fclose ( f ) )		4535110	0					
ANR	4535138	Callee	cut_assert_z		4535110	0					
ANR	4535139	Identifier	cut_assert_z		4535110	0					
ANR	4535140	ArgumentList	fclose ( f )		4535110	1					
ANR	4535141	Argument	fclose ( f )		4535110	0					
ANR	4535142	CallExpression	fclose ( f )		4535110	0					
ANR	4535143	Callee	fclose		4535110	0					
ANR	4535144	Identifier	fclose		4535110	0					
ANR	4535145	ArgumentList	f		4535110	1					
ANR	4535146	Argument	f		4535110	0					
ANR	4535147	Identifier	f		4535110	0					
ANR	4535148	ReturnType	void		4535110	1					
ANR	4535149	Identifier	create_empty_file		4535110	2					
ANR	4535150	ParameterList	const char * file		4535110	3					
ANR	4535151	Parameter	const char * file	441:23:11650:11665	4535110	0	True				
ANR	4535152	ParameterType	const char *		4535110	0					
ANR	4535153	Identifier	file		4535110	1					
ANR	4535154	CFGEntryNode	ENTRY		4535110		True				
ANR	4535155	CFGExitNode	EXIT		4535110		True				
ANR	4535156	Symbol	file		4535110						
ANR	4535157	Symbol	NULL		4535110						
ANR	4535158	Symbol	f		4535110						
ANR	4535159	Symbol	fclose		4535110						
ANR	4535160	Symbol	safe_fopen_wrapper_follow		4535110						
ANR	4535161	Function	gettimeofday	449:0:11798:12461							
ANR	4535162	FunctionDef	"gettimeofday (struct timeval * tv , struct timezone * tz)"		4535161	0					
ANR	4535163	CompoundStatement		450:0:11857:12461	4535161	0					
ANR	4535164	IdentifierDeclStatement	FILETIME ft ;	451:1:11861:11872	4535161	0	True				
ANR	4535165	IdentifierDecl	ft		4535161	0					
ANR	4535166	IdentifierDeclType	FILETIME		4535161	0					
ANR	4535167	Identifier	ft		4535161	1					
ANR	4535168	IdentifierDeclStatement	unsigned __int64 tmpres = 0 ;	452:1:11876:11903	4535161	1	True				
ANR	4535169	IdentifierDecl	tmpres = 0		4535161	0					
ANR	4535170	IdentifierDeclType	unsigned __int64		4535161	0					
ANR	4535171	Identifier	tmpres		4535161	1					
ANR	4535172	AssignmentExpression	tmpres = 0		4535161	2		=			
ANR	4535173	Identifier	tmpres		4535161	0					
ANR	4535174	PrimaryExpression	0		4535161	1					
ANR	4535175	Statement	static	453:1:11907:11912	4535161	2	True				
ANR	4535176	IdentifierDeclStatement	int tzflag ;	453:8:11914:11924	4535161	3	True				
ANR	4535177	IdentifierDecl	tzflag		4535161	0					
ANR	4535178	IdentifierDeclType	int		4535161	0					
ANR	4535179	Identifier	tzflag		4535161	1					
ANR	4535180	IfStatement	if ( NULL != tv )		4535161	4					
ANR	4535181	Condition	NULL != tv	455:5:11934:11943	4535161	0	True				
ANR	4535182	EqualityExpression	NULL != tv		4535161	0		!=			
ANR	4535183	Identifier	NULL		4535161	0					
ANR	4535184	Identifier	tv		4535161	1					
ANR	4535185	CompoundStatement		7:1:90:90	4535161	1					
ANR	4535186	ExpressionStatement	GetSystemTimeAsFileTime ( & ft )	457:2:11953:11981	4535161	0	True				
ANR	4535187	CallExpression	GetSystemTimeAsFileTime ( & ft )		4535161	0					
ANR	4535188	Callee	GetSystemTimeAsFileTime		4535161	0					
ANR	4535189	Identifier	GetSystemTimeAsFileTime		4535161	0					
ANR	4535190	ArgumentList	& ft		4535161	1					
ANR	4535191	Argument	& ft		4535161	0					
ANR	4535192	UnaryOperationExpression	& ft		4535161	0					
ANR	4535193	UnaryOperator	&		4535161	0					
ANR	4535194	Identifier	ft		4535161	1					
ANR	4535195	ExpressionStatement	tmpres |= ft . dwHighDateTime	459:2:11988:12015	4535161	1	True				
ANR	4535196	AssignmentExpression	tmpres |= ft . dwHighDateTime		4535161	0		|=			
ANR	4535197	Identifier	tmpres		4535161	0					
ANR	4535198	MemberAccess	ft . dwHighDateTime		4535161	1					
ANR	4535199	Identifier	ft		4535161	0					
ANR	4535200	Identifier	dwHighDateTime		4535161	1					
ANR	4535201	ExpressionStatement	tmpres <<= 32	460:2:12020:12033	4535161	2	True				
ANR	4535202	AssignmentExpression	tmpres <<= 32		4535161	0		<<=			
ANR	4535203	Identifier	tmpres		4535161	0					
ANR	4535204	PrimaryExpression	32		4535161	1					
ANR	4535205	ExpressionStatement	tmpres |= ft . dwLowDateTime	461:2:12038:12064	4535161	3	True				
ANR	4535206	AssignmentExpression	tmpres |= ft . dwLowDateTime		4535161	0		|=			
ANR	4535207	Identifier	tmpres		4535161	0					
ANR	4535208	MemberAccess	ft . dwLowDateTime		4535161	1					
ANR	4535209	Identifier	ft		4535161	0					
ANR	4535210	Identifier	dwLowDateTime		4535161	1					
ANR	4535211	ExpressionStatement	tmpres -= DELTA_EPOCH_IN_MICROSECS	464:2:12113:12147	4535161	4	True				
ANR	4535212	AssignmentExpression	tmpres -= DELTA_EPOCH_IN_MICROSECS		4535161	0		-=			
ANR	4535213	Identifier	tmpres		4535161	0					
ANR	4535214	Identifier	DELTA_EPOCH_IN_MICROSECS		4535161	1					
ANR	4535215	ExpressionStatement	tmpres /= 10	465:2:12153:12165	4535161	5	True				
ANR	4535216	AssignmentExpression	tmpres /= 10		4535161	0		/=			
ANR	4535217	Identifier	tmpres		4535161	0					
ANR	4535218	PrimaryExpression	10		4535161	1					
ANR	4535219	ExpressionStatement	tv -> tv_sec = ( long ) ( tmpres / 1000000UL )	466:2:12201:12240	4535161	6	True				
ANR	4535220	AssignmentExpression	tv -> tv_sec = ( long ) ( tmpres / 1000000UL )		4535161	0		=			
ANR	4535221	PtrMemberAccess	tv -> tv_sec		4535161	0					
ANR	4535222	Identifier	tv		4535161	0					
ANR	4535223	Identifier	tv_sec		4535161	1					
ANR	4535224	CastExpression	( long ) ( tmpres / 1000000UL )		4535161	1					
ANR	4535225	CastTarget	long		4535161	0					
ANR	4535226	MultiplicativeExpression	tmpres / 1000000UL		4535161	1		/			
ANR	4535227	Identifier	tmpres		4535161	0					
ANR	4535228	PrimaryExpression	1000000UL		4535161	1					
ANR	4535229	ExpressionStatement	tv -> tv_usec = ( long ) ( tmpres % 1000000UL )	467:2:12245:12285	4535161	7	True				
ANR	4535230	AssignmentExpression	tv -> tv_usec = ( long ) ( tmpres % 1000000UL )		4535161	0		=			
ANR	4535231	PtrMemberAccess	tv -> tv_usec		4535161	0					
ANR	4535232	Identifier	tv		4535161	0					
ANR	4535233	Identifier	tv_usec		4535161	1					
ANR	4535234	CastExpression	( long ) ( tmpres % 1000000UL )		4535161	1					
ANR	4535235	CastTarget	long		4535161	0					
ANR	4535236	MultiplicativeExpression	tmpres % 1000000UL		4535161	1		%			
ANR	4535237	Identifier	tmpres		4535161	0					
ANR	4535238	PrimaryExpression	1000000UL		4535161	1					
ANR	4535239	IfStatement	if ( NULL != tz )		4535161	5					
ANR	4535240	Condition	NULL != tz	470:5:12300:12309	4535161	0	True				
ANR	4535241	EqualityExpression	NULL != tz		4535161	0		!=			
ANR	4535242	Identifier	NULL		4535161	0					
ANR	4535243	Identifier	tz		4535161	1					
ANR	4535244	CompoundStatement		22:1:456:456	4535161	1					
ANR	4535245	IfStatement	if ( ! tzflag )		4535161	0					
ANR	4535246	Condition	! tzflag	472:6:12323:12329	4535161	0	True				
ANR	4535247	UnaryOperationExpression	! tzflag		4535161	0					
ANR	4535248	UnaryOperator	!		4535161	0					
ANR	4535249	Identifier	tzflag		4535161	1					
ANR	4535250	CompoundStatement		24:2:477:477	4535161	1					
ANR	4535251	ExpressionStatement	_tzset ( )	474:3:12341:12349	4535161	0	True				
ANR	4535252	CallExpression	_tzset ( )		4535161	0					
ANR	4535253	Callee	_tzset		4535161	0					
ANR	4535254	Identifier	_tzset		4535161	0					
ANR	4535255	ArgumentList			4535161	1					
ANR	4535256	ExpressionStatement	tzflag ++	475:3:12355:12363	4535161	1	True				
ANR	4535257	PostIncDecOperationExpression	tzflag ++		4535161	0					
ANR	4535258	Identifier	tzflag		4535161	0					
ANR	4535259	IncDec	++		4535161	1					
ANR	4535260	ExpressionStatement	tz -> tz_minuteswest = _timezone / 60	477:2:12373:12408	4535161	1	True				
ANR	4535261	AssignmentExpression	tz -> tz_minuteswest = _timezone / 60		4535161	0		=			
ANR	4535262	PtrMemberAccess	tz -> tz_minuteswest		4535161	0					
ANR	4535263	Identifier	tz		4535161	0					
ANR	4535264	Identifier	tz_minuteswest		4535161	1					
ANR	4535265	MultiplicativeExpression	_timezone / 60		4535161	1		/			
ANR	4535266	Identifier	_timezone		4535161	0					
ANR	4535267	PrimaryExpression	60		4535161	1					
ANR	4535268	ExpressionStatement	tz -> tz_dsttime = _daylight	478:2:12413:12439	4535161	2	True				
ANR	4535269	AssignmentExpression	tz -> tz_dsttime = _daylight		4535161	0		=			
ANR	4535270	PtrMemberAccess	tz -> tz_dsttime		4535161	0					
ANR	4535271	Identifier	tz		4535161	0					
ANR	4535272	Identifier	tz_dsttime		4535161	1					
ANR	4535273	Identifier	_daylight		4535161	1					
ANR	4535274	ReturnStatement	return 0 ;	481:1:12450:12458	4535161	6	True				
ANR	4535275	PrimaryExpression	0		4535161	0					
ANR	4535276	ReturnType	int		4535161	1					
ANR	4535277	Identifier	gettimeofday		4535161	2					
ANR	4535278	ParameterList	"struct timeval * tv , struct timezone * tz"		4535161	3					
ANR	4535279	Parameter	struct timeval * tv	449:17:11815:11832	4535161	0	True				
ANR	4535280	ParameterType	struct timeval *		4535161	0					
ANR	4535281	Identifier	tv		4535161	1					
ANR	4535282	Parameter	struct timezone * tz	449:37:11835:11853	4535161	1	True				
ANR	4535283	ParameterType	struct timezone *		4535161	0					
ANR	4535284	Identifier	tz		4535161	1					
ANR	4535285	CFGEntryNode	ENTRY		4535161		True				
ANR	4535286	CFGExitNode	EXIT		4535161		True				
ANR	4535287	Symbol	tv		4535161						
ANR	4535288	Symbol	NULL		4535161						
ANR	4535289	Symbol	tz		4535161						
ANR	4535290	Symbol	ft . dwLowDateTime		4535161						
ANR	4535291	Symbol	tv -> tv_sec		4535161						
ANR	4535292	Symbol	tzflag		4535161						
ANR	4535293	Symbol	* tv		4535161						
ANR	4535294	Symbol	tz -> tz_minuteswest		4535161						
ANR	4535295	Symbol	_daylight		4535161						
ANR	4535296	Symbol	ft		4535161						
ANR	4535297	Symbol	ft . dwHighDateTime		4535161						
ANR	4535298	Symbol	DELTA_EPOCH_IN_MICROSECS		4535161						
ANR	4535299	Symbol	tz -> tz_dsttime		4535161						
ANR	4535300	Symbol	tmpres		4535161						
ANR	4535301	Symbol	* tz		4535161						
ANR	4535302	Symbol	tv -> tv_usec		4535161						
ANR	4535303	Symbol	& ft		4535161						
ANR	4535304	Symbol	_timezone		4535161						
