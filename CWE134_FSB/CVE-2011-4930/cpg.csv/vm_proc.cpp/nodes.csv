command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5552573	File	data/converged/CVE-2011-4930_htcondor/vm_proc.cpp								
ANR	5552574	DeclStmt									
ANR	5552575	Decl							extern CStarter	extern CStarter *	Starter
ANR	5552576	Function	VMProc :: VMProc	47:0:1411:2746							
ANR	5552577	FunctionDef	VMProc :: VMProc (ClassAd * jobAd)		5552576	0					
ANR	5552578	CompoundStatement		48:0:1458:2746	5552576	0					
ANR	5552579	ExpressionStatement	m_vmgahp = NULL	49:1:1461:1476	5552576	0	True				
ANR	5552580	AssignmentExpression	m_vmgahp = NULL		5552576	0		=			
ANR	5552581	Identifier	m_vmgahp		5552576	0					
ANR	5552582	Identifier	NULL		5552576	1					
ANR	5552583	ExpressionStatement	m_is_cleanuped = false	50:1:1479:1501	5552576	1	True				
ANR	5552584	AssignmentExpression	m_is_cleanuped = false		5552576	0		=			
ANR	5552585	Identifier	m_is_cleanuped		5552576	0					
ANR	5552586	Identifier	false		5552576	1					
ANR	5552587	ExpressionStatement	m_vm_id = 0	52:1:1505:1516	5552576	2	True				
ANR	5552588	AssignmentExpression	m_vm_id = 0		5552576	0		=			
ANR	5552589	Identifier	m_vm_id		5552576	0					
ANR	5552590	PrimaryExpression	0		5552576	1					
ANR	5552591	ExpressionStatement	m_vm_pid = 0	53:1:1519:1531	5552576	3	True				
ANR	5552592	AssignmentExpression	m_vm_pid = 0		5552576	0		=			
ANR	5552593	Identifier	m_vm_pid		5552576	0					
ANR	5552594	PrimaryExpression	0		5552576	1					
ANR	5552595	ExpressionStatement	"memset ( & m_vm_exited_pinfo , 0 , sizeof ( m_vm_exited_pinfo ) )"	55:1:1535:1591	5552576	4	True				
ANR	5552596	CallExpression	"memset ( & m_vm_exited_pinfo , 0 , sizeof ( m_vm_exited_pinfo ) )"		5552576	0					
ANR	5552597	Callee	memset		5552576	0					
ANR	5552598	Identifier	memset		5552576	0					
ANR	5552599	ArgumentList	& m_vm_exited_pinfo		5552576	1					
ANR	5552600	Argument	& m_vm_exited_pinfo		5552576	0					
ANR	5552601	UnaryOperationExpression	& m_vm_exited_pinfo		5552576	0					
ANR	5552602	UnaryOperator	&		5552576	0					
ANR	5552603	Identifier	m_vm_exited_pinfo		5552576	1					
ANR	5552604	Argument	0		5552576	1					
ANR	5552605	PrimaryExpression	0		5552576	0					
ANR	5552606	Argument	sizeof ( m_vm_exited_pinfo )		5552576	2					
ANR	5552607	SizeofExpression	sizeof ( m_vm_exited_pinfo )		5552576	0					
ANR	5552608	Sizeof	sizeof		5552576	0					
ANR	5552609	SizeofOperand	m_vm_exited_pinfo		5552576	1					
ANR	5552610	ExpressionStatement	"memset ( & m_vm_alive_pinfo , 0 , sizeof ( m_vm_alive_pinfo ) )"	56:1:1594:1648	5552576	5	True				
ANR	5552611	CallExpression	"memset ( & m_vm_alive_pinfo , 0 , sizeof ( m_vm_alive_pinfo ) )"		5552576	0					
ANR	5552612	Callee	memset		5552576	0					
ANR	5552613	Identifier	memset		5552576	0					
ANR	5552614	ArgumentList	& m_vm_alive_pinfo		5552576	1					
ANR	5552615	Argument	& m_vm_alive_pinfo		5552576	0					
ANR	5552616	UnaryOperationExpression	& m_vm_alive_pinfo		5552576	0					
ANR	5552617	UnaryOperator	&		5552576	0					
ANR	5552618	Identifier	m_vm_alive_pinfo		5552576	1					
ANR	5552619	Argument	0		5552576	1					
ANR	5552620	PrimaryExpression	0		5552576	0					
ANR	5552621	Argument	sizeof ( m_vm_alive_pinfo )		5552576	2					
ANR	5552622	SizeofExpression	sizeof ( m_vm_alive_pinfo )		5552576	0					
ANR	5552623	Sizeof	sizeof		5552576	0					
ANR	5552624	SizeofOperand	m_vm_alive_pinfo		5552576	1					
ANR	5552625	ExpressionStatement	m_vm_checkpoint = false	58:1:1652:1675	5552576	6	True				
ANR	5552626	AssignmentExpression	m_vm_checkpoint = false		5552576	0		=			
ANR	5552627	Identifier	m_vm_checkpoint		5552576	0					
ANR	5552628	Identifier	false		5552576	1					
ANR	5552629	ExpressionStatement	m_is_vacate_ckpt = false	59:1:1678:1702	5552576	7	True				
ANR	5552630	AssignmentExpression	m_is_vacate_ckpt = false		5552576	0		=			
ANR	5552631	Identifier	m_is_vacate_ckpt		5552576	0					
ANR	5552632	Identifier	false		5552576	1					
ANR	5552633	ExpressionStatement	m_last_ckpt_result = false	60:1:1705:1731	5552576	8	True				
ANR	5552634	AssignmentExpression	m_last_ckpt_result = false		5552576	0		=			
ANR	5552635	Identifier	m_last_ckpt_result		5552576	0					
ANR	5552636	Identifier	false		5552576	1					
ANR	5552637	ExpressionStatement	m_is_soft_suspended = false	62:1:1735:1762	5552576	9	True				
ANR	5552638	AssignmentExpression	m_is_soft_suspended = false		5552576	0		=			
ANR	5552639	Identifier	m_is_soft_suspended		5552576	0					
ANR	5552640	Identifier	false		5552576	1					
ANR	5552641	ExpressionStatement	m_vm_ckpt_count = 0	64:1:1766:1785	5552576	10	True				
ANR	5552642	AssignmentExpression	m_vm_ckpt_count = 0		5552576	0		=			
ANR	5552643	Identifier	m_vm_ckpt_count		5552576	0					
ANR	5552644	PrimaryExpression	0		5552576	1					
ANR	5552645	ExpressionStatement	m_vmstatus_tid = - 1	66:1:1789:1808	5552576	11	True				
ANR	5552646	AssignmentExpression	m_vmstatus_tid = - 1		5552576	0		=			
ANR	5552647	Identifier	m_vmstatus_tid		5552576	0					
ANR	5552648	UnaryOperationExpression	- 1		5552576	1					
ANR	5552649	UnaryOperator	-		5552576	0					
ANR	5552650	PrimaryExpression	1		5552576	1					
ANR	5552651	ExpressionStatement	m_vmstatus_notify_tid = - 1	67:1:1811:1837	5552576	12	True				
ANR	5552652	AssignmentExpression	m_vmstatus_notify_tid = - 1		5552576	0		=			
ANR	5552653	Identifier	m_vmstatus_notify_tid		5552576	0					
ANR	5552654	UnaryOperationExpression	- 1		5552576	1					
ANR	5552655	UnaryOperator	-		5552576	0					
ANR	5552656	PrimaryExpression	1		5552576	1					
ANR	5552657	ExpressionStatement	m_status_req = NULL	68:1:1840:1859	5552576	13	True				
ANR	5552658	AssignmentExpression	m_status_req = NULL		5552576	0		=			
ANR	5552659	Identifier	m_status_req		5552576	0					
ANR	5552660	Identifier	NULL		5552576	1					
ANR	5552661	ExpressionStatement	m_status_error_count = 0	69:1:1862:1886	5552576	14	True				
ANR	5552662	AssignmentExpression	m_status_error_count = 0		5552576	0		=			
ANR	5552663	Identifier	m_status_error_count		5552576	0					
ANR	5552664	PrimaryExpression	0		5552576	1					
ANR	5552665	ExpressionStatement	m_vm_cputime = 0	70:1:1889:1905	5552576	15	True				
ANR	5552666	AssignmentExpression	m_vm_cputime = 0		5552576	0		=			
ANR	5552667	Identifier	m_vm_cputime		5552576	0					
ANR	5552668	PrimaryExpression	0		5552576	1					
ANR	5552669	ExpressionStatement	"m_vmstatus_interval = param_integer ( ""VM_STATUS_INTERVAL"" , VM_DEFAULT_STATUS_INTERVAL )"	73:1:1976:2066	5552576	16	True				
ANR	5552670	AssignmentExpression	"m_vmstatus_interval = param_integer ( ""VM_STATUS_INTERVAL"" , VM_DEFAULT_STATUS_INTERVAL )"		5552576	0		=			
ANR	5552671	Identifier	m_vmstatus_interval		5552576	0					
ANR	5552672	CallExpression	"param_integer ( ""VM_STATUS_INTERVAL"" , VM_DEFAULT_STATUS_INTERVAL )"		5552576	1					
ANR	5552673	Callee	param_integer		5552576	0					
ANR	5552674	Identifier	param_integer		5552576	0					
ANR	5552675	ArgumentList	"""VM_STATUS_INTERVAL"""		5552576	1					
ANR	5552676	Argument	"""VM_STATUS_INTERVAL"""		5552576	0					
ANR	5552677	PrimaryExpression	"""VM_STATUS_INTERVAL"""		5552576	0					
ANR	5552678	Argument	VM_DEFAULT_STATUS_INTERVAL		5552576	1					
ANR	5552679	Identifier	VM_DEFAULT_STATUS_INTERVAL		5552576	0					
ANR	5552680	IfStatement	if ( m_vmstatus_interval < VM_MIN_STATUS_INTERVAL )		5552576	17					
ANR	5552681	Condition	m_vmstatus_interval < VM_MIN_STATUS_INTERVAL	75:5:2073:2116	5552576	0	True				
ANR	5552682	RelationalExpression	m_vmstatus_interval < VM_MIN_STATUS_INTERVAL		5552576	0		<			
ANR	5552683	Identifier	m_vmstatus_interval		5552576	0					
ANR	5552684	Identifier	VM_MIN_STATUS_INTERVAL		5552576	1					
ANR	5552685	CompoundStatement		28:52:661:661	5552576	1					
ANR	5552686	Statement	dprintf	78:2:2226:2232	5552576	0	True				
ANR	5552687	Statement	(	78:9:2233:2233	5552576	1	True				
ANR	5552688	Statement	D_ALWAYS	78:10:2234:2241	5552576	2	True				
ANR	5552689	Statement	","	78:18:2242:2242	5552576	3	True				
ANR	5552690	Statement	"""Even if Condor config file defines %d secs """	78:19:2243:2287	5552576	4	True				
ANR	5552691	Statement	"""for vm status interval, vm status interval is set to """	79:4:2293:2347	5552576	5	True				
ANR	5552692	Statement	"""%d seconds for performance.\\n"""	80:4:2353:2383	5552576	6	True				
ANR	5552693	Statement	","	80:35:2384:2384	5552576	7	True				
ANR	5552694	Statement	m_vmstatus_interval	81:6:2393:2411	5552576	8	True				
ANR	5552695	Statement	","	81:25:2412:2412	5552576	9	True				
ANR	5552696	Statement	VM_MIN_STATUS_INTERVAL	81:27:2414:2435	5552576	10	True				
ANR	5552697	Statement	)	81:49:2436:2436	5552576	11	True				
ANR	5552698	ExpressionStatement		81:50:2437:2437	5552576	12	True				
ANR	5552699	ExpressionStatement	m_vmstatus_interval = VM_MIN_STATUS_INTERVAL	82:2:2441:2485	5552576	13	True				
ANR	5552700	AssignmentExpression	m_vmstatus_interval = VM_MIN_STATUS_INTERVAL		5552576	0		=			
ANR	5552701	Identifier	m_vmstatus_interval		5552576	0					
ANR	5552702	Identifier	VM_MIN_STATUS_INTERVAL		5552576	1					
ANR	5552703	ExpressionStatement	"m_vmstatus_max_error_cnt = param_integer ( ""VM_STATUS_MAX_ERROR"" , VM_STATUS_MAX_ERROR_COUNT )"	85:1:2493:2588	5552576	18	True				
ANR	5552704	AssignmentExpression	"m_vmstatus_max_error_cnt = param_integer ( ""VM_STATUS_MAX_ERROR"" , VM_STATUS_MAX_ERROR_COUNT )"		5552576	0		=			
ANR	5552705	Identifier	m_vmstatus_max_error_cnt		5552576	0					
ANR	5552706	CallExpression	"param_integer ( ""VM_STATUS_MAX_ERROR"" , VM_STATUS_MAX_ERROR_COUNT )"		5552576	1					
ANR	5552707	Callee	param_integer		5552576	0					
ANR	5552708	Identifier	param_integer		5552576	0					
ANR	5552709	ArgumentList	"""VM_STATUS_MAX_ERROR"""		5552576	1					
ANR	5552710	Argument	"""VM_STATUS_MAX_ERROR"""		5552576	0					
ANR	5552711	PrimaryExpression	"""VM_STATUS_MAX_ERROR"""		5552576	0					
ANR	5552712	Argument	VM_STATUS_MAX_ERROR_COUNT		5552576	1					
ANR	5552713	Identifier	VM_STATUS_MAX_ERROR_COUNT		5552576	0					
ANR	5552714	ExpressionStatement	"m_vmoperation_timeout = param_integer ( ""VM_GAHP_REQ_TIMEOUT"" , VM_GAHP_REQ_TIMEOUT )"	88:1:2592:2679	5552576	19	True				
ANR	5552715	AssignmentExpression	"m_vmoperation_timeout = param_integer ( ""VM_GAHP_REQ_TIMEOUT"" , VM_GAHP_REQ_TIMEOUT )"		5552576	0		=			
ANR	5552716	Identifier	m_vmoperation_timeout		5552576	0					
ANR	5552717	CallExpression	"param_integer ( ""VM_GAHP_REQ_TIMEOUT"" , VM_GAHP_REQ_TIMEOUT )"		5552576	1					
ANR	5552718	Callee	param_integer		5552576	0					
ANR	5552719	Identifier	param_integer		5552576	0					
ANR	5552720	ArgumentList	"""VM_GAHP_REQ_TIMEOUT"""		5552576	1					
ANR	5552721	Argument	"""VM_GAHP_REQ_TIMEOUT"""		5552576	0					
ANR	5552722	PrimaryExpression	"""VM_GAHP_REQ_TIMEOUT"""		5552576	0					
ANR	5552723	Argument	VM_GAHP_REQ_TIMEOUT		5552576	1					
ANR	5552724	Identifier	VM_GAHP_REQ_TIMEOUT		5552576	0					
ANR	5552725	ExpressionStatement	"m_use_soft_suspend = param_boolean ( ""VM_SOFT_SUSPEND"" , false )"	91:1:2683:2743	5552576	20	True				
ANR	5552726	AssignmentExpression	"m_use_soft_suspend = param_boolean ( ""VM_SOFT_SUSPEND"" , false )"		5552576	0		=			
ANR	5552727	Identifier	m_use_soft_suspend		5552576	0					
ANR	5552728	CallExpression	"param_boolean ( ""VM_SOFT_SUSPEND"" , false )"		5552576	1					
ANR	5552729	Callee	param_boolean		5552576	0					
ANR	5552730	Identifier	param_boolean		5552576	0					
ANR	5552731	ArgumentList	"""VM_SOFT_SUSPEND"""		5552576	1					
ANR	5552732	Argument	"""VM_SOFT_SUSPEND"""		5552576	0					
ANR	5552733	PrimaryExpression	"""VM_SOFT_SUSPEND"""		5552576	0					
ANR	5552734	Argument	false		5552576	1					
ANR	5552735	Identifier	false		5552576	0					
ANR	5552736	Identifier	VMProc :: VMProc		5552576	1					
ANR	5552737	ParameterList	ClassAd * jobAd		5552576	2					
ANR	5552738	Parameter	ClassAd * jobAd	47:15:1426:1439	5552576	0	True				
ANR	5552739	ParameterType	ClassAd *		5552576	0					
ANR	5552740	Identifier	jobAd		5552576	1					
ANR	5552741	CFGEntryNode	ENTRY		5552576		True				
ANR	5552742	CFGExitNode	EXIT		5552576		True				
ANR	5552743	Symbol	m_vm_id		5552576						
ANR	5552744	Symbol	jobAd		5552576						
ANR	5552745	Symbol	VM_STATUS_MAX_ERROR_COUNT		5552576						
ANR	5552746	Symbol	m_vm_pid		5552576						
ANR	5552747	Symbol	& m_vm_exited_pinfo		5552576						
ANR	5552748	Symbol	m_vm_ckpt_count		5552576						
ANR	5552749	Symbol	VM_DEFAULT_STATUS_INTERVAL		5552576						
ANR	5552750	Symbol	m_status_error_count		5552576						
ANR	5552751	Symbol	m_vmstatus_tid		5552576						
ANR	5552752	Symbol	m_vm_checkpoint		5552576						
ANR	5552753	Symbol	& m_vm_alive_pinfo		5552576						
ANR	5552754	Symbol	m_use_soft_suspend		5552576						
ANR	5552755	Symbol	m_vmstatus_notify_tid		5552576						
ANR	5552756	Symbol	m_vm_cputime		5552576						
ANR	5552757	Symbol	NULL		5552576						
ANR	5552758	Symbol	m_last_ckpt_result		5552576						
ANR	5552759	Symbol	VM_GAHP_REQ_TIMEOUT		5552576						
ANR	5552760	Symbol	VM_MIN_STATUS_INTERVAL		5552576						
ANR	5552761	Symbol	false		5552576						
ANR	5552762	Symbol	m_is_vacate_ckpt		5552576						
ANR	5552763	Symbol	param_boolean		5552576						
ANR	5552764	Symbol	m_status_req		5552576						
ANR	5552765	Symbol	m_vmstatus_max_error_cnt		5552576						
ANR	5552766	Symbol	m_vmoperation_timeout		5552576						
ANR	5552767	Symbol	m_vmgahp		5552576						
ANR	5552768	Symbol	m_is_soft_suspended		5552576						
ANR	5552769	Symbol	m_vmstatus_interval		5552576						
ANR	5552770	Symbol	param_integer		5552576						
ANR	5552771	Symbol	m_is_cleanuped		5552576						
ANR	5552772	Function	VMProc :: ~VMProc	94:0:2749:2811							
ANR	5552773	FunctionDef	VMProc :: ~VMProc ()		5552772	0					
ANR	5552774	CompoundStatement		95:0:2767:2811	5552772	0					
ANR	5552775	ExpressionStatement	cleanup ( )	97:1:2800:2809	5552772	0	True				
ANR	5552776	CallExpression	cleanup ( )		5552772	0					
ANR	5552777	Callee	cleanup		5552772	0					
ANR	5552778	Identifier	cleanup		5552772	0					
ANR	5552779	ArgumentList			5552772	1					
ANR	5552780	Identifier	VMProc :: ~VMProc		5552772	1					
ANR	5552781	ParameterList			5552772	2					
ANR	5552782	CFGEntryNode	ENTRY		5552772		True				
ANR	5552783	CFGExitNode	EXIT		5552772		True				
ANR	5552784	Function	VMProc :: cleanup	100:0:2814:3578							
ANR	5552785	FunctionDef	VMProc :: cleanup ()		5552784	0					
ANR	5552786	CompoundStatement		102:0:2837:3578	5552784	0					
ANR	5552787	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Inside VMProc::cleanup()\\n"" )"	103:1:2840:2889	5552784	0	True				
ANR	5552788	CallExpression	"dprintf ( D_FULLDEBUG , ""Inside VMProc::cleanup()\\n"" )"		5552784	0					
ANR	5552789	Callee	dprintf		5552784	0					
ANR	5552790	Identifier	dprintf		5552784	0					
ANR	5552791	ArgumentList	D_FULLDEBUG		5552784	1					
ANR	5552792	Argument	D_FULLDEBUG		5552784	0					
ANR	5552793	Identifier	D_FULLDEBUG		5552784	0					
ANR	5552794	Argument	"""Inside VMProc::cleanup()\\n"""		5552784	1					
ANR	5552795	PrimaryExpression	"""Inside VMProc::cleanup()\\n"""		5552784	0					
ANR	5552796	IfStatement	if ( m_is_cleanuped )		5552784	1					
ANR	5552797	Condition	m_is_cleanuped	105:5:2897:2910	5552784	0	True				
ANR	5552798	Identifier	m_is_cleanuped		5552784	0					
ANR	5552799	CompoundStatement		4:22:76:76	5552784	1					
ANR	5552800	ReturnStatement	return ;	106:2:2918:2924	5552784	0	True				
ANR	5552801	ExpressionStatement	m_is_cleanuped = true	108:1:2930:2951	5552784	2	True				
ANR	5552802	AssignmentExpression	m_is_cleanuped = true		5552784	0		=			
ANR	5552803	Identifier	m_is_cleanuped		5552784	0					
ANR	5552804	Identifier	true		5552784	1					
ANR	5552805	IfStatement	if ( m_status_req )		5552784	3					
ANR	5552806	Condition	m_status_req	110:4:2958:2969	5552784	0	True				
ANR	5552807	Identifier	m_status_req		5552784	0					
ANR	5552808	CompoundStatement		9:18:134:134	5552784	1					
ANR	5552809	Statement	delete	111:2:2976:2981	5552784	0	True				
ANR	5552810	ExpressionStatement	m_status_req	111:9:2983:2995	5552784	1	True				
ANR	5552811	Identifier	m_status_req		5552784	0					
ANR	5552812	ExpressionStatement	m_status_req = NULL	112:2:2999:3018	5552784	2	True				
ANR	5552813	AssignmentExpression	m_status_req = NULL		5552784	0		=			
ANR	5552814	Identifier	m_status_req		5552784	0					
ANR	5552815	Identifier	NULL		5552784	1					
ANR	5552816	IfStatement	if ( m_vmgahp )		5552784	4					
ANR	5552817	Condition	m_vmgahp	115:4:3028:3035	5552784	0	True				
ANR	5552818	Identifier	m_vmgahp		5552784	0					
ANR	5552819	CompoundStatement		14:14:200:200	5552784	1					
ANR	5552820	Statement	delete	116:2:3042:3047	5552784	0	True				
ANR	5552821	ExpressionStatement	m_vmgahp	116:9:3049:3057	5552784	1	True				
ANR	5552822	Identifier	m_vmgahp		5552784	0					
ANR	5552823	ExpressionStatement	m_vmgahp = NULL	117:2:3061:3076	5552784	2	True				
ANR	5552824	AssignmentExpression	m_vmgahp = NULL		5552784	0		=			
ANR	5552825	Identifier	m_vmgahp		5552784	0					
ANR	5552826	Identifier	NULL		5552784	1					
ANR	5552827	IfStatement	if ( m_vmstatus_tid != - 1 )		5552784	5					
ANR	5552828	Condition	m_vmstatus_tid != - 1	120:5:3087:3106	5552784	0	True				
ANR	5552829	EqualityExpression	m_vmstatus_tid != - 1		5552784	0		!=			
ANR	5552830	Identifier	m_vmstatus_tid		5552784	0					
ANR	5552831	UnaryOperationExpression	- 1		5552784	1					
ANR	5552832	UnaryOperator	-		5552784	0					
ANR	5552833	PrimaryExpression	1		5552784	1					
ANR	5552834	CompoundStatement		19:28:272:272	5552784	1					
ANR	5552835	IfStatement	if ( daemonCore )		5552784	0					
ANR	5552836	Condition	daemonCore	121:6:3118:3127	5552784	0	True				
ANR	5552837	Identifier	daemonCore		5552784	0					
ANR	5552838	CompoundStatement		20:19:293:293	5552784	1					
ANR	5552839	ExpressionStatement	daemonCore -> Cancel_Timer ( m_vmstatus_tid )	122:3:3136:3176	5552784	0	True				
ANR	5552840	CallExpression	daemonCore -> Cancel_Timer ( m_vmstatus_tid )		5552784	0					
ANR	5552841	Callee	daemonCore -> Cancel_Timer		5552784	0					
ANR	5552842	PtrMemberAccess	daemonCore -> Cancel_Timer		5552784	0					
ANR	5552843	Identifier	daemonCore		5552784	0					
ANR	5552844	Identifier	Cancel_Timer		5552784	1					
ANR	5552845	ArgumentList	m_vmstatus_tid		5552784	1					
ANR	5552846	Argument	m_vmstatus_tid		5552784	0					
ANR	5552847	Identifier	m_vmstatus_tid		5552784	0					
ANR	5552848	ExpressionStatement	m_vmstatus_tid = - 1	124:2:3184:3203	5552784	1	True				
ANR	5552849	AssignmentExpression	m_vmstatus_tid = - 1		5552784	0		=			
ANR	5552850	Identifier	m_vmstatus_tid		5552784	0					
ANR	5552851	UnaryOperationExpression	- 1		5552784	1					
ANR	5552852	UnaryOperator	-		5552784	0					
ANR	5552853	PrimaryExpression	1		5552784	1					
ANR	5552854	IfStatement	if ( m_vmstatus_notify_tid != - 1 )		5552784	6					
ANR	5552855	Condition	m_vmstatus_notify_tid != - 1	127:5:3214:3240	5552784	0	True				
ANR	5552856	EqualityExpression	m_vmstatus_notify_tid != - 1		5552784	0		!=			
ANR	5552857	Identifier	m_vmstatus_notify_tid		5552784	0					
ANR	5552858	UnaryOperationExpression	- 1		5552784	1					
ANR	5552859	UnaryOperator	-		5552784	0					
ANR	5552860	PrimaryExpression	1		5552784	1					
ANR	5552861	CompoundStatement		26:35:406:406	5552784	1					
ANR	5552862	IfStatement	if ( daemonCore )		5552784	0					
ANR	5552863	Condition	daemonCore	128:6:3252:3261	5552784	0	True				
ANR	5552864	Identifier	daemonCore		5552784	0					
ANR	5552865	CompoundStatement		27:19:427:427	5552784	1					
ANR	5552866	ExpressionStatement	daemonCore -> Cancel_Timer ( m_vmstatus_notify_tid )	129:3:3270:3317	5552784	0	True				
ANR	5552867	CallExpression	daemonCore -> Cancel_Timer ( m_vmstatus_notify_tid )		5552784	0					
ANR	5552868	Callee	daemonCore -> Cancel_Timer		5552784	0					
ANR	5552869	PtrMemberAccess	daemonCore -> Cancel_Timer		5552784	0					
ANR	5552870	Identifier	daemonCore		5552784	0					
ANR	5552871	Identifier	Cancel_Timer		5552784	1					
ANR	5552872	ArgumentList	m_vmstatus_notify_tid		5552784	1					
ANR	5552873	Argument	m_vmstatus_notify_tid		5552784	0					
ANR	5552874	Identifier	m_vmstatus_notify_tid		5552784	0					
ANR	5552875	ExpressionStatement	m_vmstatus_notify_tid = - 1	131:2:3325:3351	5552784	1	True				
ANR	5552876	AssignmentExpression	m_vmstatus_notify_tid = - 1		5552784	0		=			
ANR	5552877	Identifier	m_vmstatus_notify_tid		5552784	0					
ANR	5552878	UnaryOperationExpression	- 1		5552784	1					
ANR	5552879	UnaryOperator	-		5552784	0					
ANR	5552880	PrimaryExpression	1		5552784	1					
ANR	5552881	ExpressionStatement	m_vm_id = 0	134:1:3358:3369	5552784	7	True				
ANR	5552882	AssignmentExpression	m_vm_id = 0		5552784	0		=			
ANR	5552883	Identifier	m_vm_id		5552784	0					
ANR	5552884	PrimaryExpression	0		5552784	1					
ANR	5552885	ExpressionStatement	m_vm_pid = 0	135:1:3372:3384	5552784	8	True				
ANR	5552886	AssignmentExpression	m_vm_pid = 0		5552784	0		=			
ANR	5552887	Identifier	m_vm_pid		5552784	0					
ANR	5552888	PrimaryExpression	0		5552784	1					
ANR	5552889	ExpressionStatement	"m_vm_type = """""	137:1:3388:3402	5552784	9	True				
ANR	5552890	AssignmentExpression	"m_vm_type = """""		5552784	0		=			
ANR	5552891	Identifier	m_vm_type		5552784	0					
ANR	5552892	PrimaryExpression	""""""		5552784	1					
ANR	5552893	ExpressionStatement	"m_vmgahp_server = """""	138:1:3405:3425	5552784	10	True				
ANR	5552894	AssignmentExpression	"m_vmgahp_server = """""		5552784	0		=			
ANR	5552895	Identifier	m_vmgahp_server		5552784	0					
ANR	5552896	PrimaryExpression	""""""		5552784	1					
ANR	5552897	ExpressionStatement	is_suspended = false	141:1:3473:3493	5552784	11	True				
ANR	5552898	AssignmentExpression	is_suspended = false		5552784	0		=			
ANR	5552899	Identifier	is_suspended		5552784	0					
ANR	5552900	Identifier	false		5552784	1					
ANR	5552901	ExpressionStatement	m_is_soft_suspended = false	142:1:3496:3523	5552784	12	True				
ANR	5552902	AssignmentExpression	m_is_soft_suspended = false		5552784	0		=			
ANR	5552903	Identifier	m_is_soft_suspended		5552784	0					
ANR	5552904	Identifier	false		5552784	1					
ANR	5552905	ExpressionStatement	is_checkpointed = false	143:1:3526:3549	5552784	13	True				
ANR	5552906	AssignmentExpression	is_checkpointed = false		5552784	0		=			
ANR	5552907	Identifier	is_checkpointed		5552784	0					
ANR	5552908	Identifier	false		5552784	1					
ANR	5552909	ExpressionStatement	m_is_vacate_ckpt = false	144:1:3552:3576	5552784	14	True				
ANR	5552910	AssignmentExpression	m_is_vacate_ckpt = false		5552784	0		=			
ANR	5552911	Identifier	m_is_vacate_ckpt		5552784	0					
ANR	5552912	Identifier	false		5552784	1					
ANR	5552913	ReturnType	void		5552784	1					
ANR	5552914	Identifier	VMProc :: cleanup		5552784	2					
ANR	5552915	ParameterList			5552784	3					
ANR	5552916	CFGEntryNode	ENTRY		5552784		True				
ANR	5552917	CFGExitNode	EXIT		5552784		True				
ANR	5552918	Symbol	NULL		5552784						
ANR	5552919	Symbol	m_vm_id		5552784						
ANR	5552920	Symbol	false		5552784						
ANR	5552921	Symbol	is_suspended		5552784						
ANR	5552922	Symbol	D_FULLDEBUG		5552784						
ANR	5552923	Symbol	m_vmgahp_server		5552784						
ANR	5552924	Symbol	m_is_vacate_ckpt		5552784						
ANR	5552925	Symbol	m_status_req		5552784						
ANR	5552926	Symbol	m_vm_pid		5552784						
ANR	5552927	Symbol	m_vm_type		5552784						
ANR	5552928	Symbol	is_checkpointed		5552784						
ANR	5552929	Symbol	m_vmstatus_tid		5552784						
ANR	5552930	Symbol	m_vmgahp		5552784						
ANR	5552931	Symbol	daemonCore		5552784						
ANR	5552932	Symbol	m_is_soft_suspended		5552784						
ANR	5552933	Symbol	true		5552784						
ANR	5552934	Symbol	m_is_cleanuped		5552784						
ANR	5552935	Symbol	m_vmstatus_notify_tid		5552784						
ANR	5552936	Function	VMProc :: StartJob	147:0:3581:13165							
ANR	5552937	FunctionDef	VMProc :: StartJob ()		5552936	0					
ANR	5552938	CompoundStatement		149:0:3604:13165	5552936	0					
ANR	5552939	IdentifierDeclStatement	MyString err_msg ;	150:1:3607:3623	5552936	0	True				
ANR	5552940	IdentifierDecl	err_msg		5552936	0					
ANR	5552941	IdentifierDeclType	MyString		5552936	0					
ANR	5552942	Identifier	err_msg		5552936	1					
ANR	5552943	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Inside VMProc::StartJob()\\n"" )"	151:1:3626:3676	5552936	1	True				
ANR	5552944	CallExpression	"dprintf ( D_FULLDEBUG , ""Inside VMProc::StartJob()\\n"" )"		5552936	0					
ANR	5552945	Callee	dprintf		5552936	0					
ANR	5552946	Identifier	dprintf		5552936	0					
ANR	5552947	ArgumentList	D_FULLDEBUG		5552936	1					
ANR	5552948	Argument	D_FULLDEBUG		5552936	0					
ANR	5552949	Identifier	D_FULLDEBUG		5552936	0					
ANR	5552950	Argument	"""Inside VMProc::StartJob()\\n"""		5552936	1					
ANR	5552951	PrimaryExpression	"""Inside VMProc::StartJob()\\n"""		5552936	0					
ANR	5552952	IdentifierDeclStatement	FamilyInfo fi ;	156:1:3798:3811	5552936	2	True				
ANR	5552953	IdentifierDecl	fi		5552936	0					
ANR	5552954	IdentifierDeclType	FamilyInfo		5552936	0					
ANR	5552955	Identifier	fi		5552936	1					
ANR	5552956	ExpressionStatement	"fi . max_snapshot_interval = param_integer ( ""PID_SNAPSHOT_INTERVAL"" , 15 )"	159:1:3884:3953	5552936	3	True				
ANR	5552957	AssignmentExpression	"fi . max_snapshot_interval = param_integer ( ""PID_SNAPSHOT_INTERVAL"" , 15 )"		5552936	0		=			
ANR	5552958	MemberAccess	fi . max_snapshot_interval		5552936	0					
ANR	5552959	Identifier	fi		5552936	0					
ANR	5552960	Identifier	max_snapshot_interval		5552936	1					
ANR	5552961	CallExpression	"param_integer ( ""PID_SNAPSHOT_INTERVAL"" , 15 )"		5552936	1					
ANR	5552962	Callee	param_integer		5552936	0					
ANR	5552963	Identifier	param_integer		5552936	0					
ANR	5552964	ArgumentList	"""PID_SNAPSHOT_INTERVAL"""		5552936	1					
ANR	5552965	Argument	"""PID_SNAPSHOT_INTERVAL"""		5552936	0					
ANR	5552966	PrimaryExpression	"""PID_SNAPSHOT_INTERVAL"""		5552936	0					
ANR	5552967	Argument	15		5552936	1					
ANR	5552968	PrimaryExpression	15		5552936	0					
ANR	5552969	IdentifierDeclStatement	char const * dedicated_account = Starter -> jic -> getExecuteAccountIsDedicated ( ) ;	161:1:3957:4033	5552936	4	True				
ANR	5552970	IdentifierDecl	* dedicated_account = Starter -> jic -> getExecuteAccountIsDedicated ( )		5552936	0					
ANR	5552971	IdentifierDeclType	char const *		5552936	0					
ANR	5552972	Identifier	dedicated_account		5552936	1					
ANR	5552973	AssignmentExpression	* dedicated_account = Starter -> jic -> getExecuteAccountIsDedicated ( )		5552936	2		=			
ANR	5552974	Identifier	dedicated_account		5552936	0					
ANR	5552975	CallExpression	Starter -> jic -> getExecuteAccountIsDedicated ( )		5552936	1					
ANR	5552976	Callee	Starter -> jic -> getExecuteAccountIsDedicated		5552936	0					
ANR	5552977	PtrMemberAccess	Starter -> jic -> getExecuteAccountIsDedicated		5552936	0					
ANR	5552978	PtrMemberAccess	Starter -> jic		5552936	0					
ANR	5552979	Identifier	Starter		5552936	0					
ANR	5552980	Identifier	jic		5552936	1					
ANR	5552981	Identifier	getExecuteAccountIsDedicated		5552936	1					
ANR	5552982	ArgumentList			5552936	1					
ANR	5552983	IfStatement	if ( dedicated_account )		5552936	5					
ANR	5552984	Condition	dedicated_account	163:5:4041:4057	5552936	0	True				
ANR	5552985	Identifier	dedicated_account		5552936	0					
ANR	5552986	CompoundStatement		15:24:455:455	5552936	1					
ANR	5552987	ExpressionStatement	fi . login = dedicated_account	165:2:4103:4131	5552936	0	True				
ANR	5552988	AssignmentExpression	fi . login = dedicated_account		5552936	0		=			
ANR	5552989	MemberAccess	fi . login		5552936	0					
ANR	5552990	Identifier	fi		5552936	0					
ANR	5552991	Identifier	login		5552936	1					
ANR	5552992	Identifier	dedicated_account		5552936	1					
ANR	5552993	ExpressionStatement	"dprintf ( D_ALWAYS , ""Tracking process family by login \\""%s\\""\\n"" , fi . login )"	169:2:4291:4383	5552936	1	True				
ANR	5552994	CallExpression	"dprintf ( D_ALWAYS , ""Tracking process family by login \\""%s\\""\\n"" , fi . login )"		5552936	0					
ANR	5552995	Callee	dprintf		5552936	0					
ANR	5552996	Identifier	dprintf		5552936	0					
ANR	5552997	ArgumentList	D_ALWAYS		5552936	1					
ANR	5552998	Argument	D_ALWAYS		5552936	0					
ANR	5552999	Identifier	D_ALWAYS		5552936	0					
ANR	5553000	Argument	"""Tracking process family by login \\""%s\\""\\n"""		5552936	1					
ANR	5553001	PrimaryExpression	"""Tracking process family by login \\""%s\\""\\n"""		5552936	0					
ANR	5553002	Argument	fi . login		5552936	2					
ANR	5553003	MemberAccess	fi . login		5552936	0					
ANR	5553004	Identifier	fi		5552936	0					
ANR	5553005	Identifier	login		5552936	1					
ANR	5553006	IdentifierDeclStatement	"char * vmgahpfile = param ( ""VM_GAHP_SERVER"" ) ;"	175:1:4422:4466	5552936	6	True				
ANR	5553007	IdentifierDecl	"* vmgahpfile = param ( ""VM_GAHP_SERVER"" )"		5552936	0					
ANR	5553008	IdentifierDeclType	char *		5552936	0					
ANR	5553009	Identifier	vmgahpfile		5552936	1					
ANR	5553010	AssignmentExpression	"* vmgahpfile = param ( ""VM_GAHP_SERVER"" )"		5552936	2		=			
ANR	5553011	Identifier	vmgahpfile		5552936	0					
ANR	5553012	CallExpression	"param ( ""VM_GAHP_SERVER"" )"		5552936	1					
ANR	5553013	Callee	param		5552936	0					
ANR	5553014	Identifier	param		5552936	0					
ANR	5553015	ArgumentList	"""VM_GAHP_SERVER"""		5552936	1					
ANR	5553016	Argument	"""VM_GAHP_SERVER"""		5552936	0					
ANR	5553017	PrimaryExpression	"""VM_GAHP_SERVER"""		5552936	0					
ANR	5553018	IfStatement	"if ( ! vmgahpfile || ( access ( vmgahpfile , X_OK ) < 0 ) )"		5552936	7					
ANR	5553019	Condition	"! vmgahpfile || ( access ( vmgahpfile , X_OK ) < 0 )"	176:5:4473:4516	5552936	0	True				
ANR	5553020	OrExpression	"! vmgahpfile || ( access ( vmgahpfile , X_OK ) < 0 )"		5552936	0		||			
ANR	5553021	UnaryOperationExpression	! vmgahpfile		5552936	0					
ANR	5553022	UnaryOperator	!		5552936	0					
ANR	5553023	Identifier	vmgahpfile		5552936	1					
ANR	5553024	RelationalExpression	"access ( vmgahpfile , X_OK ) < 0"		5552936	1		<			
ANR	5553025	CallExpression	"access ( vmgahpfile , X_OK )"		5552936	0					
ANR	5553026	Callee	access		5552936	0					
ANR	5553027	Identifier	access		5552936	0					
ANR	5553028	ArgumentList	vmgahpfile		5552936	1					
ANR	5553029	Argument	vmgahpfile		5552936	0					
ANR	5553030	Identifier	vmgahpfile		5552936	0					
ANR	5553031	Argument	X_OK		5552936	1					
ANR	5553032	Identifier	X_OK		5552936	0					
ANR	5553033	PrimaryExpression	0		5552936	1					
ANR	5553034	CompoundStatement		28:52:915:915	5552936	1					
ANR	5553035	ExpressionStatement	"dprintf ( D_ALWAYS , ""vmgahp server cannot be found/executed\\n"" )"	178:2:4582:4643	5552936	0	True				
ANR	5553036	CallExpression	"dprintf ( D_ALWAYS , ""vmgahp server cannot be found/executed\\n"" )"		5552936	0					
ANR	5553037	Callee	dprintf		5552936	0					
ANR	5553038	Identifier	dprintf		5552936	0					
ANR	5553039	ArgumentList	D_ALWAYS		5552936	1					
ANR	5553040	Argument	D_ALWAYS		5552936	0					
ANR	5553041	Identifier	D_ALWAYS		5552936	0					
ANR	5553042	Argument	"""vmgahp server cannot be found/executed\\n"""		5552936	1					
ANR	5553043	PrimaryExpression	"""vmgahp server cannot be found/executed\\n"""		5552936	0					
ANR	5553044	ExpressionStatement	reportErrorToStartd ( )	179:2:4647:4668	5552936	1	True				
ANR	5553045	CallExpression	reportErrorToStartd ( )		5552936	0					
ANR	5553046	Callee	reportErrorToStartd		5552936	0					
ANR	5553047	Identifier	reportErrorToStartd		5552936	0					
ANR	5553048	ArgumentList			5552936	1					
ANR	5553049	IfStatement	if ( vmgahpfile )		5552936	2					
ANR	5553050	Condition	vmgahpfile	180:6:4676:4685	5552936	0	True				
ANR	5553051	Identifier	vmgahpfile		5552936	0					
ANR	5553052	CompoundStatement		32:18:1083:1083	5552936	1					
ANR	5553053	ExpressionStatement	free ( vmgahpfile )	180:20:4690:4706	5552936	0	True				
ANR	5553054	CallExpression	free ( vmgahpfile )		5552936	0					
ANR	5553055	Callee	free		5552936	0					
ANR	5553056	Identifier	free		5552936	0					
ANR	5553057	ArgumentList	vmgahpfile		5552936	1					
ANR	5553058	Argument	vmgahpfile		5552936	0					
ANR	5553059	Identifier	vmgahpfile		5552936	0					
ANR	5553060	ExpressionStatement	vmgahpfile = NULL	180:38:4708:4725	5552936	1	True				
ANR	5553061	AssignmentExpression	vmgahpfile = NULL		5552936	0		=			
ANR	5553062	Identifier	vmgahpfile		5552936	0					
ANR	5553063	Identifier	NULL		5552936	1					
ANR	5553064	ReturnStatement	return false ;	181:2:4731:4743	5552936	3	True				
ANR	5553065	Identifier	false		5552936	0					
ANR	5553066	ExpressionStatement	m_vmgahp_server = vmgahpfile	183:1:4749:4777	5552936	8	True				
ANR	5553067	AssignmentExpression	m_vmgahp_server = vmgahpfile		5552936	0		=			
ANR	5553068	Identifier	m_vmgahp_server		5552936	0					
ANR	5553069	Identifier	vmgahpfile		5552936	1					
ANR	5553070	ExpressionStatement	free ( vmgahpfile )	184:1:4780:4796	5552936	9	True				
ANR	5553071	CallExpression	free ( vmgahpfile )		5552936	0					
ANR	5553072	Callee	free		5552936	0					
ANR	5553073	Identifier	free		5552936	0					
ANR	5553074	ArgumentList	vmgahpfile		5552936	1					
ANR	5553075	Argument	vmgahpfile		5552936	0					
ANR	5553076	Identifier	vmgahpfile		5552936	0					
ANR	5553077	IfStatement	if ( ! JobAd )		5552936	10					
ANR	5553078	Condition	! JobAd	186:5:4804:4809	5552936	0	True				
ANR	5553079	UnaryOperationExpression	! JobAd		5552936	0					
ANR	5553080	UnaryOperator	!		5552936	0					
ANR	5553081	Identifier	JobAd		5552936	1					
ANR	5553082	CompoundStatement		38:14:1208:1208	5552936	1					
ANR	5553083	ExpressionStatement	"dprintf ( D_ALWAYS , ""No JobAd in VMProc::StartJob()!\\n"" )"	187:2:4817:4871	5552936	0	True				
ANR	5553084	CallExpression	"dprintf ( D_ALWAYS , ""No JobAd in VMProc::StartJob()!\\n"" )"		5552936	0					
ANR	5553085	Callee	dprintf		5552936	0					
ANR	5553086	Identifier	dprintf		5552936	0					
ANR	5553087	ArgumentList	D_ALWAYS		5552936	1					
ANR	5553088	Argument	D_ALWAYS		5552936	0					
ANR	5553089	Identifier	D_ALWAYS		5552936	0					
ANR	5553090	Argument	"""No JobAd in VMProc::StartJob()!\\n"""		5552936	1					
ANR	5553091	PrimaryExpression	"""No JobAd in VMProc::StartJob()!\\n"""		5552936	0					
ANR	5553092	ReturnStatement	return false ;	188:2:4875:4887	5552936	1	True				
ANR	5553093	Identifier	false		5552936	0					
ANR	5553094	IdentifierDeclStatement	Env job_env ;	202:1:5193:5204	5552936	11	True				
ANR	5553095	IdentifierDecl	job_env		5552936	0					
ANR	5553096	IdentifierDeclType	Env		5552936	0					
ANR	5553097	Identifier	job_env		5552936	1					
ANR	5553098	IdentifierDeclStatement	"char * env_str = param ( ""STARTER_JOB_ENVIRONMENT"" ) ;"	204:1:5208:5258	5552936	12	True				
ANR	5553099	IdentifierDecl	"* env_str = param ( ""STARTER_JOB_ENVIRONMENT"" )"		5552936	0					
ANR	5553100	IdentifierDeclType	char *		5552936	0					
ANR	5553101	Identifier	env_str		5552936	1					
ANR	5553102	AssignmentExpression	"* env_str = param ( ""STARTER_JOB_ENVIRONMENT"" )"		5552936	2		=			
ANR	5553103	Identifier	env_str		5552936	0					
ANR	5553104	CallExpression	"param ( ""STARTER_JOB_ENVIRONMENT"" )"		5552936	1					
ANR	5553105	Callee	param		5552936	0					
ANR	5553106	Identifier	param		5552936	0					
ANR	5553107	ArgumentList	"""STARTER_JOB_ENVIRONMENT"""		5552936	1					
ANR	5553108	Argument	"""STARTER_JOB_ENVIRONMENT"""		5552936	0					
ANR	5553109	PrimaryExpression	"""STARTER_JOB_ENVIRONMENT"""		5552936	0					
ANR	5553110	IdentifierDeclStatement	MyString env_errors ;	206:1:5262:5281	5552936	13	True				
ANR	5553111	IdentifierDecl	env_errors		5552936	0					
ANR	5553112	IdentifierDeclType	MyString		5552936	0					
ANR	5553113	Identifier	env_errors		5552936	1					
ANR	5553114	IfStatement	"if ( ! job_env . MergeFromV1RawOrV2Quoted ( env_str , & env_errors ) )"		5552936	14					
ANR	5553115	Condition	"! job_env . MergeFromV1RawOrV2Quoted ( env_str , & env_errors )"	207:5:5288:5342	5552936	0	True				
ANR	5553116	UnaryOperationExpression	"! job_env . MergeFromV1RawOrV2Quoted ( env_str , & env_errors )"		5552936	0					
ANR	5553117	UnaryOperator	!		5552936	0					
ANR	5553118	CallExpression	"job_env . MergeFromV1RawOrV2Quoted ( env_str , & env_errors )"		5552936	1					
ANR	5553119	Callee	job_env . MergeFromV1RawOrV2Quoted		5552936	0					
ANR	5553120	MemberAccess	job_env . MergeFromV1RawOrV2Quoted		5552936	0					
ANR	5553121	Identifier	job_env		5552936	0					
ANR	5553122	Identifier	MergeFromV1RawOrV2Quoted		5552936	1					
ANR	5553123	ArgumentList	env_str		5552936	1					
ANR	5553124	Argument	env_str		5552936	0					
ANR	5553125	Identifier	env_str		5552936	0					
ANR	5553126	Argument	& env_errors		5552936	1					
ANR	5553127	UnaryOperationExpression	& env_errors		5552936	0					
ANR	5553128	UnaryOperator	&		5552936	0					
ANR	5553129	Identifier	env_errors		5552936	1					
ANR	5553130	CompoundStatement		59:63:1741:1741	5552936	1					
ANR	5553131	Statement	dprintf	208:2:5350:5356	5552936	0	True				
ANR	5553132	Statement	(	208:9:5357:5357	5552936	1	True				
ANR	5553133	Statement	D_ALWAYS	208:11:5359:5366	5552936	2	True				
ANR	5553134	Statement	","	208:19:5367:5367	5552936	3	True				
ANR	5553135	Statement	"""Aborting VMProc::StartJob: """	208:21:5369:5397	5552936	4	True				
ANR	5553136	Statement	"""%s\\nThe full value for STARTER_JOB_ENVIRONMENT: """	209:4:5403:5452	5552936	5	True				
ANR	5553137	Statement	"""%s\\n"""	210:4:5458:5463	5552936	6	True				
ANR	5553138	Statement	","	210:10:5464:5464	5552936	7	True				
ANR	5553139	Statement	env_errors	210:11:5465:5474	5552936	8	True				
ANR	5553140	Statement	.	210:21:5475:5475	5552936	9	True				
ANR	5553141	Statement	Value	210:22:5476:5480	5552936	10	True				
ANR	5553142	Statement	(	210:27:5481:5481	5552936	11	True				
ANR	5553143	Statement	)	210:28:5482:5482	5552936	12	True				
ANR	5553144	Statement	","	210:29:5483:5483	5552936	13	True				
ANR	5553145	Statement	env_str	210:30:5484:5490	5552936	14	True				
ANR	5553146	Statement	)	210:37:5491:5491	5552936	15	True				
ANR	5553147	ExpressionStatement		210:38:5492:5492	5552936	16	True				
ANR	5553148	IfStatement	if ( env_str )		5552936	17					
ANR	5553149	Condition	env_str	211:6:5500:5506	5552936	0	True				
ANR	5553150	Identifier	env_str		5552936	0					
ANR	5553151	CompoundStatement		63:16:1905:1905	5552936	1					
ANR	5553152	ExpressionStatement	free ( env_str )	212:3:5515:5528	5552936	0	True				
ANR	5553153	CallExpression	free ( env_str )		5552936	0					
ANR	5553154	Callee	free		5552936	0					
ANR	5553155	Identifier	free		5552936	0					
ANR	5553156	ArgumentList	env_str		5552936	1					
ANR	5553157	Argument	env_str		5552936	0					
ANR	5553158	Identifier	env_str		5552936	0					
ANR	5553159	ReturnStatement	return false ;	214:2:5536:5548	5552936	18	True				
ANR	5553160	Identifier	false		5552936	0					
ANR	5553161	IfStatement	if ( env_str )		5552936	15					
ANR	5553162	Condition	env_str	216:5:5558:5564	5552936	0	True				
ANR	5553163	Identifier	env_str		5552936	0					
ANR	5553164	CompoundStatement		68:15:1963:1963	5552936	1					
ANR	5553165	ExpressionStatement	free ( env_str )	217:2:5572:5585	5552936	0	True				
ANR	5553166	CallExpression	free ( env_str )		5552936	0					
ANR	5553167	Callee	free		5552936	0					
ANR	5553168	Identifier	free		5552936	0					
ANR	5553169	ArgumentList	env_str		5552936	1					
ANR	5553170	Argument	env_str		5552936	0					
ANR	5553171	Identifier	env_str		5552936	0					
ANR	5553172	ExpressionStatement	Starter -> PublishToEnv ( & job_env )	222:1:5680:5713	5552936	16	True				
ANR	5553173	CallExpression	Starter -> PublishToEnv ( & job_env )		5552936	0					
ANR	5553174	Callee	Starter -> PublishToEnv		5552936	0					
ANR	5553175	PtrMemberAccess	Starter -> PublishToEnv		5552936	0					
ANR	5553176	Identifier	Starter		5552936	0					
ANR	5553177	Identifier	PublishToEnv		5552936	1					
ANR	5553178	ArgumentList	& job_env		5552936	1					
ANR	5553179	Argument	& job_env		5552936	0					
ANR	5553180	UnaryOperationExpression	& job_env		5552936	0					
ANR	5553181	UnaryOperator	&		5552936	0					
ANR	5553182	Identifier	job_env		5552936	1					
ANR	5553183	IdentifierDeclStatement	int nice_inc = 0 ;	230:1:5890:5906	5552936	17	True				
ANR	5553184	IdentifierDecl	nice_inc = 0		5552936	0					
ANR	5553185	IdentifierDeclType	int		5552936	0					
ANR	5553186	Identifier	nice_inc		5552936	1					
ANR	5553187	AssignmentExpression	nice_inc = 0		5552936	2		=			
ANR	5553188	Identifier	nice_inc		5552936	0					
ANR	5553189	PrimaryExpression	0		5552936	1					
ANR	5553190	IdentifierDeclStatement	"char * ptmp = param ( ""JOB_RENICE_INCREMENT"" ) ;"	231:4:5912:5956	5552936	18	True				
ANR	5553191	IdentifierDecl	"* ptmp = param ( ""JOB_RENICE_INCREMENT"" )"		5552936	0					
ANR	5553192	IdentifierDeclType	char *		5552936	0					
ANR	5553193	Identifier	ptmp		5552936	1					
ANR	5553194	AssignmentExpression	"* ptmp = param ( ""JOB_RENICE_INCREMENT"" )"		5552936	2		=			
ANR	5553195	Identifier	ptmp		5552936	0					
ANR	5553196	CallExpression	"param ( ""JOB_RENICE_INCREMENT"" )"		5552936	1					
ANR	5553197	Callee	param		5552936	0					
ANR	5553198	Identifier	param		5552936	0					
ANR	5553199	ArgumentList	"""JOB_RENICE_INCREMENT"""		5552936	1					
ANR	5553200	Argument	"""JOB_RENICE_INCREMENT"""		5552936	0					
ANR	5553201	PrimaryExpression	"""JOB_RENICE_INCREMENT"""		5552936	0					
ANR	5553202	IfStatement	if ( ptmp )		5552936	19					
ANR	5553203	Condition	ptmp	232:5:5963:5966	5552936	0	True				
ANR	5553204	Identifier	ptmp		5552936	0					
ANR	5553205	CompoundStatement		86:2:2422:2455	5552936	1					
ANR	5553206	IdentifierDeclStatement	"MyString reniceAttr = ""Renice = "" ;"	234:2:6027:6060	5552936	0	True				
ANR	5553207	IdentifierDecl	"reniceAttr = ""Renice = """		5552936	0					
ANR	5553208	IdentifierDeclType	MyString		5552936	0					
ANR	5553209	Identifier	reniceAttr		5552936	1					
ANR	5553210	AssignmentExpression	"reniceAttr = ""Renice = """		5552936	2		=			
ANR	5553211	Identifier	reniceAttr		5552936	0					
ANR	5553212	PrimaryExpression	"""Renice = """		5552936	1					
ANR	5553213	ExpressionStatement	reniceAttr += ptmp	235:2:6064:6082	5552936	1	True				
ANR	5553214	AssignmentExpression	reniceAttr += ptmp		5552936	0		+=			
ANR	5553215	Identifier	reniceAttr		5552936	0					
ANR	5553216	Identifier	ptmp		5552936	1					
ANR	5553217	IfStatement	if ( ! JobAd -> Insert ( reniceAttr . Value ( ) ) )		5552936	2					
ANR	5553218	Condition	! JobAd -> Insert ( reniceAttr . Value ( ) )	236:6:6090:6125	5552936	0	True				
ANR	5553219	UnaryOperationExpression	! JobAd -> Insert ( reniceAttr . Value ( ) )		5552936	0					
ANR	5553220	UnaryOperator	!		5552936	0					
ANR	5553221	CallExpression	JobAd -> Insert ( reniceAttr . Value ( ) )		5552936	1					
ANR	5553222	Callee	JobAd -> Insert		5552936	0					
ANR	5553223	PtrMemberAccess	JobAd -> Insert		5552936	0					
ANR	5553224	Identifier	JobAd		5552936	0					
ANR	5553225	Identifier	Insert		5552936	1					
ANR	5553226	ArgumentList	reniceAttr . Value ( )		5552936	1					
ANR	5553227	Argument	reniceAttr . Value ( )		5552936	0					
ANR	5553228	CallExpression	reniceAttr . Value ( )		5552936	0					
ANR	5553229	Callee	reniceAttr . Value		5552936	0					
ANR	5553230	MemberAccess	reniceAttr . Value		5552936	0					
ANR	5553231	Identifier	reniceAttr		5552936	0					
ANR	5553232	Identifier	Value		5552936	1					
ANR	5553233	ArgumentList			5552936	1					
ANR	5553234	CompoundStatement		88:45:2524:2524	5552936	1					
ANR	5553235	Statement	dprintf	237:3:6134:6140	5552936	0	True				
ANR	5553236	Statement	(	237:10:6141:6141	5552936	1	True				
ANR	5553237	Statement	D_ALWAYS	237:12:6143:6150	5552936	2	True				
ANR	5553238	Statement	","	237:20:6151:6151	5552936	3	True				
ANR	5553239	Statement	"""ERROR: failed to insert JOB_RENICE_INCREMENT """	237:22:6153:6199	5552936	4	True				
ANR	5553240	Statement	"""into job ad, Aborting OsProc::StartJob...\\n"""	238:4:6205:6249	5552936	5	True				
ANR	5553241	Statement	)	238:50:6251:6251	5552936	6	True				
ANR	5553242	ExpressionStatement		238:51:6252:6252	5552936	7	True				
ANR	5553243	ExpressionStatement	free ( ptmp )	239:3:6257:6269	5552936	8	True				
ANR	5553244	CallExpression	free ( ptmp )		5552936	0					
ANR	5553245	Callee	free		5552936	0					
ANR	5553246	Identifier	free		5552936	0					
ANR	5553247	ArgumentList	ptmp		5552936	1					
ANR	5553248	Argument	ptmp		5552936	0					
ANR	5553249	Identifier	ptmp		5552936	0					
ANR	5553250	ReturnStatement	return 0 ;	240:3:6274:6282	5552936	9	True				
ANR	5553251	PrimaryExpression	0		5552936	0					
ANR	5553252	IfStatement	"if ( JobAd -> EvalInteger ( ""Renice"" , NULL , nice_inc ) )"		5552936	3					
ANR	5553253	Condition	"JobAd -> EvalInteger ( ""Renice"" , NULL , nice_inc )"	243:6:6309:6354	5552936	0	True				
ANR	5553254	CallExpression	"JobAd -> EvalInteger ( ""Renice"" , NULL , nice_inc )"		5552936	0					
ANR	5553255	Callee	JobAd -> EvalInteger		5552936	0					
ANR	5553256	PtrMemberAccess	JobAd -> EvalInteger		5552936	0					
ANR	5553257	Identifier	JobAd		5552936	0					
ANR	5553258	Identifier	EvalInteger		5552936	1					
ANR	5553259	ArgumentList	"""Renice"""		5552936	1					
ANR	5553260	Argument	"""Renice"""		5552936	0					
ANR	5553261	PrimaryExpression	"""Renice"""		5552936	0					
ANR	5553262	Argument	NULL		5552936	1					
ANR	5553263	Identifier	NULL		5552936	0					
ANR	5553264	Argument	nice_inc		5552936	2					
ANR	5553265	Identifier	nice_inc		5552936	0					
ANR	5553266	CompoundStatement		95:55:2753:2753	5552936	1					
ANR	5553267	ExpressionStatement	"dprintf ( D_ALWAYS , ""Renice expr \\""%s\\"" evaluated to %d\\n"" , ptmp , nice_inc )"	244:3:6363:6444	5552936	0	True				
ANR	5553268	CallExpression	"dprintf ( D_ALWAYS , ""Renice expr \\""%s\\"" evaluated to %d\\n"" , ptmp , nice_inc )"		5552936	0					
ANR	5553269	Callee	dprintf		5552936	0					
ANR	5553270	Identifier	dprintf		5552936	0					
ANR	5553271	ArgumentList	D_ALWAYS		5552936	1					
ANR	5553272	Argument	D_ALWAYS		5552936	0					
ANR	5553273	Identifier	D_ALWAYS		5552936	0					
ANR	5553274	Argument	"""Renice expr \\""%s\\"" evaluated to %d\\n"""		5552936	1					
ANR	5553275	PrimaryExpression	"""Renice expr \\""%s\\"" evaluated to %d\\n"""		5552936	0					
ANR	5553276	Argument	ptmp		5552936	2					
ANR	5553277	Identifier	ptmp		5552936	0					
ANR	5553278	Argument	nice_inc		5552936	3					
ANR	5553279	Identifier	nice_inc		5552936	0					
ANR	5553280	ElseStatement	else		5552936	0					
ANR	5553281	CompoundStatement		98:9:2850:2850	5552936	0					
ANR	5553282	Statement	dprintf	247:3:6460:6466	5552936	0	True				
ANR	5553283	Statement	(	247:10:6467:6467	5552936	1	True				
ANR	5553284	Statement	D_ALWAYS	247:12:6469:6476	5552936	2	True				
ANR	5553285	Statement	","	247:20:6477:6477	5552936	3	True				
ANR	5553286	Statement	"""WARNING: job renice expr (\\""%s\\"") doesn't """	247:22:6479:6522	5552936	4	True				
ANR	5553287	Statement	"""eval to int!  Using default of 10...\\n"""	248:6:6530:6569	5552936	5	True				
ANR	5553288	Statement	","	248:46:6570:6570	5552936	6	True				
ANR	5553289	Statement	ptmp	248:48:6572:6575	5552936	7	True				
ANR	5553290	Statement	)	248:53:6577:6577	5552936	8	True				
ANR	5553291	ExpressionStatement		248:54:6578:6578	5552936	9	True				
ANR	5553292	ExpressionStatement	nice_inc = 10	249:3:6583:6596	5552936	10	True				
ANR	5553293	AssignmentExpression	nice_inc = 10		5552936	0		=			
ANR	5553294	Identifier	nice_inc		5552936	0					
ANR	5553295	PrimaryExpression	10		5552936	1					
ANR	5553296	IfStatement	if ( nice_inc < 0 )		5552936	4					
ANR	5553297	Condition	nice_inc < 0	253:6:6649:6660	5552936	0	True				
ANR	5553298	RelationalExpression	nice_inc < 0		5552936	0		<			
ANR	5553299	Identifier	nice_inc		5552936	0					
ANR	5553300	PrimaryExpression	0		5552936	1					
ANR	5553301	CompoundStatement		105:21:3059:3059	5552936	1					
ANR	5553302	Statement	dprintf	254:3:6669:6675	5552936	0	True				
ANR	5553303	Statement	(	254:10:6676:6676	5552936	1	True				
ANR	5553304	Statement	D_FULLDEBUG	254:12:6678:6688	5552936	2	True				
ANR	5553305	Statement	","	254:23:6689:6689	5552936	3	True				
ANR	5553306	Statement	"""WARNING: job renice value (%d) is too """	254:25:6691:6730	5552936	4	True				
ANR	5553307	Statement	"""low: adjusted to 0\\n"""	255:6:6738:6759	5552936	5	True				
ANR	5553308	Statement	","	255:28:6760:6760	5552936	6	True				
ANR	5553309	Statement	nice_inc	255:30:6762:6769	5552936	7	True				
ANR	5553310	Statement	)	255:39:6771:6771	5552936	8	True				
ANR	5553311	ExpressionStatement		255:40:6772:6772	5552936	9	True				
ANR	5553312	ExpressionStatement	nice_inc = 0	256:3:6777:6789	5552936	10	True				
ANR	5553313	AssignmentExpression	nice_inc = 0		5552936	0		=			
ANR	5553314	Identifier	nice_inc		5552936	0					
ANR	5553315	PrimaryExpression	0		5552936	1					
ANR	5553316	ElseStatement	else		5552936	0					
ANR	5553317	IfStatement	if ( nice_inc > 19 )		5552936	0					
ANR	5553318	Condition	nice_inc > 19	258:11:6806:6818	5552936	0	True				
ANR	5553319	RelationalExpression	nice_inc > 19		5552936	0		>			
ANR	5553320	Identifier	nice_inc		5552936	0					
ANR	5553321	PrimaryExpression	19		5552936	1					
ANR	5553322	CompoundStatement		110:27:3217:3217	5552936	1					
ANR	5553323	Statement	dprintf	259:3:6827:6833	5552936	0	True				
ANR	5553324	Statement	(	259:10:6834:6834	5552936	1	True				
ANR	5553325	Statement	D_FULLDEBUG	259:12:6836:6846	5552936	2	True				
ANR	5553326	Statement	","	259:23:6847:6847	5552936	3	True				
ANR	5553327	Statement	"""WARNING: job renice value (%d) is too """	259:25:6849:6888	5552936	4	True				
ANR	5553328	Statement	"""high: adjusted to 19\\n"""	260:6:6896:6919	5552936	5	True				
ANR	5553329	Statement	","	260:30:6920:6920	5552936	6	True				
ANR	5553330	Statement	nice_inc	260:32:6922:6929	5552936	7	True				
ANR	5553331	Statement	)	260:41:6931:6931	5552936	8	True				
ANR	5553332	ExpressionStatement		260:42:6932:6932	5552936	9	True				
ANR	5553333	ExpressionStatement	nice_inc = 19	261:3:6937:6950	5552936	10	True				
ANR	5553334	AssignmentExpression	nice_inc = 19		5552936	0		=			
ANR	5553335	Identifier	nice_inc		5552936	0					
ANR	5553336	PrimaryExpression	19		5552936	1					
ANR	5553337	ExpressionStatement	ASSERT ( ptmp )	264:2:6959:6973	5552936	5	True				
ANR	5553338	CallExpression	ASSERT ( ptmp )		5552936	0					
ANR	5553339	Callee	ASSERT		5552936	0					
ANR	5553340	Identifier	ASSERT		5552936	0					
ANR	5553341	ArgumentList	ptmp		5552936	1					
ANR	5553342	Argument	ptmp		5552936	0					
ANR	5553343	Identifier	ptmp		5552936	0					
ANR	5553344	ExpressionStatement	free ( ptmp )	265:2:6977:6989	5552936	6	True				
ANR	5553345	CallExpression	free ( ptmp )		5552936	0					
ANR	5553346	Callee	free		5552936	0					
ANR	5553347	Identifier	free		5552936	0					
ANR	5553348	ArgumentList	ptmp		5552936	1					
ANR	5553349	Argument	ptmp		5552936	0					
ANR	5553350	Identifier	ptmp		5552936	0					
ANR	5553351	ExpressionStatement	ptmp = NULL	266:2:6993:7004	5552936	7	True				
ANR	5553352	AssignmentExpression	ptmp = NULL		5552936	0		=			
ANR	5553353	Identifier	ptmp		5552936	0					
ANR	5553354	Identifier	NULL		5552936	1					
ANR	5553355	ElseStatement	else		5552936	0					
ANR	5553356	CompoundStatement		119:8:3409:3409	5552936	0					
ANR	5553357	ExpressionStatement	nice_inc = 10	269:2:7076:7089	5552936	0	True				
ANR	5553358	AssignmentExpression	nice_inc = 10		5552936	0		=			
ANR	5553359	Identifier	nice_inc		5552936	0					
ANR	5553360	PrimaryExpression	10		5552936	1					
ANR	5553361	IdentifierDeclStatement	MyString vm_job_name ;	273:1:7113:7133	5552936	20	True				
ANR	5553362	IdentifierDecl	vm_job_name		5552936	0					
ANR	5553363	IdentifierDeclType	MyString		5552936	0					
ANR	5553364	Identifier	vm_job_name		5552936	1					
ANR	5553365	IfStatement	"if ( JobAd -> LookupString ( ATTR_JOB_CMD , vm_job_name ) != 1 )"		5552936	21					
ANR	5553366	Condition	"JobAd -> LookupString ( ATTR_JOB_CMD , vm_job_name ) != 1"	274:5:7140:7191	5552936	0	True				
ANR	5553367	EqualityExpression	"JobAd -> LookupString ( ATTR_JOB_CMD , vm_job_name ) != 1"		5552936	0		!=			
ANR	5553368	CallExpression	"JobAd -> LookupString ( ATTR_JOB_CMD , vm_job_name )"		5552936	0					
ANR	5553369	Callee	JobAd -> LookupString		5552936	0					
ANR	5553370	PtrMemberAccess	JobAd -> LookupString		5552936	0					
ANR	5553371	Identifier	JobAd		5552936	0					
ANR	5553372	Identifier	LookupString		5552936	1					
ANR	5553373	ArgumentList	ATTR_JOB_CMD		5552936	1					
ANR	5553374	Argument	ATTR_JOB_CMD		5552936	0					
ANR	5553375	Identifier	ATTR_JOB_CMD		5552936	0					
ANR	5553376	Argument	vm_job_name		5552936	1					
ANR	5553377	Identifier	vm_job_name		5552936	0					
ANR	5553378	PrimaryExpression	1		5552936	1					
ANR	5553379	CompoundStatement		126:60:3590:3590	5552936	1					
ANR	5553380	ExpressionStatement	"err_msg . sprintf ( ""%s cannot be found in job classAd."" , ATTR_JOB_CMD )"	275:2:7199:7266	5552936	0	True				
ANR	5553381	CallExpression	"err_msg . sprintf ( ""%s cannot be found in job classAd."" , ATTR_JOB_CMD )"		5552936	0					
ANR	5553382	Callee	err_msg . sprintf		5552936	0					
ANR	5553383	MemberAccess	err_msg . sprintf		5552936	0					
ANR	5553384	Identifier	err_msg		5552936	0					
ANR	5553385	Identifier	sprintf		5552936	1					
ANR	5553386	ArgumentList	"""%s cannot be found in job classAd."""		5552936	1					
ANR	5553387	Argument	"""%s cannot be found in job classAd."""		5552936	0					
ANR	5553388	PrimaryExpression	"""%s cannot be found in job classAd."""		5552936	0					
ANR	5553389	Argument	ATTR_JOB_CMD		5552936	1					
ANR	5553390	Identifier	ATTR_JOB_CMD		5552936	0					
ANR	5553391	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s\\n"" , err_msg . Value ( ) )"	276:2:7270:7312	5552936	1	True				
ANR	5553392	CallExpression	"dprintf ( D_ALWAYS , ""%s\\n"" , err_msg . Value ( ) )"		5552936	0					
ANR	5553393	Callee	dprintf		5552936	0					
ANR	5553394	Identifier	dprintf		5552936	0					
ANR	5553395	ArgumentList	D_ALWAYS		5552936	1					
ANR	5553396	Argument	D_ALWAYS		5552936	0					
ANR	5553397	Identifier	D_ALWAYS		5552936	0					
ANR	5553398	Argument	"""%s\\n"""		5552936	1					
ANR	5553399	PrimaryExpression	"""%s\\n"""		5552936	0					
ANR	5553400	Argument	err_msg . Value ( )		5552936	2					
ANR	5553401	CallExpression	err_msg . Value ( )		5552936	0					
ANR	5553402	Callee	err_msg . Value		5552936	0					
ANR	5553403	MemberAccess	err_msg . Value		5552936	0					
ANR	5553404	Identifier	err_msg		5552936	0					
ANR	5553405	Identifier	Value		5552936	1					
ANR	5553406	ArgumentList			5552936	1					
ANR	5553407	ExpressionStatement	"Starter -> jic -> notifyStarterError ( err_msg . Value ( ) , true , CONDOR_HOLD_CODE_FailedToCreateProcess , 0 )"	277:2:7316:7420	5552936	2	True				
ANR	5553408	CallExpression	"Starter -> jic -> notifyStarterError ( err_msg . Value ( ) , true , CONDOR_HOLD_CODE_FailedToCreateProcess , 0 )"		5552936	0					
ANR	5553409	Callee	Starter -> jic -> notifyStarterError		5552936	0					
ANR	5553410	PtrMemberAccess	Starter -> jic -> notifyStarterError		5552936	0					
ANR	5553411	PtrMemberAccess	Starter -> jic		5552936	0					
ANR	5553412	Identifier	Starter		5552936	0					
ANR	5553413	Identifier	jic		5552936	1					
ANR	5553414	Identifier	notifyStarterError		5552936	1					
ANR	5553415	ArgumentList	err_msg . Value ( )		5552936	1					
ANR	5553416	Argument	err_msg . Value ( )		5552936	0					
ANR	5553417	CallExpression	err_msg . Value ( )		5552936	0					
ANR	5553418	Callee	err_msg . Value		5552936	0					
ANR	5553419	MemberAccess	err_msg . Value		5552936	0					
ANR	5553420	Identifier	err_msg		5552936	0					
ANR	5553421	Identifier	Value		5552936	1					
ANR	5553422	ArgumentList			5552936	1					
ANR	5553423	Argument	true		5552936	1					
ANR	5553424	Identifier	true		5552936	0					
ANR	5553425	Argument	CONDOR_HOLD_CODE_FailedToCreateProcess		5552936	2					
ANR	5553426	Identifier	CONDOR_HOLD_CODE_FailedToCreateProcess		5552936	0					
ANR	5553427	Argument	0		5552936	3					
ANR	5553428	PrimaryExpression	0		5552936	0					
ANR	5553429	ReturnStatement	return false ;	279:2:7424:7436	5552936	3	True				
ANR	5553430	Identifier	false		5552936	0					
ANR	5553431	ExpressionStatement	m_job_name = vm_job_name	281:1:7442:7466	5552936	22	True				
ANR	5553432	AssignmentExpression	m_job_name = vm_job_name		5552936	0		=			
ANR	5553433	Identifier	m_job_name		5552936	0					
ANR	5553434	Identifier	vm_job_name		5552936	1					
ANR	5553435	IdentifierDeclStatement	MyString vm_type_name ;	284:1:7505:7526	5552936	23	True				
ANR	5553436	IdentifierDecl	vm_type_name		5552936	0					
ANR	5553437	IdentifierDeclType	MyString		5552936	0					
ANR	5553438	Identifier	vm_type_name		5552936	1					
ANR	5553439	IfStatement	"if ( JobAd -> LookupString ( ATTR_JOB_VM_TYPE , vm_type_name ) != 1 )"		5552936	24					
ANR	5553440	Condition	"JobAd -> LookupString ( ATTR_JOB_VM_TYPE , vm_type_name ) != 1"	285:5:7533:7589	5552936	0	True				
ANR	5553441	EqualityExpression	"JobAd -> LookupString ( ATTR_JOB_VM_TYPE , vm_type_name ) != 1"		5552936	0		!=			
ANR	5553442	CallExpression	"JobAd -> LookupString ( ATTR_JOB_VM_TYPE , vm_type_name )"		5552936	0					
ANR	5553443	Callee	JobAd -> LookupString		5552936	0					
ANR	5553444	PtrMemberAccess	JobAd -> LookupString		5552936	0					
ANR	5553445	Identifier	JobAd		5552936	0					
ANR	5553446	Identifier	LookupString		5552936	1					
ANR	5553447	ArgumentList	ATTR_JOB_VM_TYPE		5552936	1					
ANR	5553448	Argument	ATTR_JOB_VM_TYPE		5552936	0					
ANR	5553449	Identifier	ATTR_JOB_VM_TYPE		5552936	0					
ANR	5553450	Argument	vm_type_name		5552936	1					
ANR	5553451	Identifier	vm_type_name		5552936	0					
ANR	5553452	PrimaryExpression	1		5552936	1					
ANR	5553453	CompoundStatement		137:65:3988:3988	5552936	1					
ANR	5553454	ExpressionStatement	"err_msg . sprintf ( ""%s cannot be found in job classAd."" , ATTR_JOB_VM_TYPE )"	286:2:7597:7668	5552936	0	True				
ANR	5553455	CallExpression	"err_msg . sprintf ( ""%s cannot be found in job classAd."" , ATTR_JOB_VM_TYPE )"		5552936	0					
ANR	5553456	Callee	err_msg . sprintf		5552936	0					
ANR	5553457	MemberAccess	err_msg . sprintf		5552936	0					
ANR	5553458	Identifier	err_msg		5552936	0					
ANR	5553459	Identifier	sprintf		5552936	1					
ANR	5553460	ArgumentList	"""%s cannot be found in job classAd."""		5552936	1					
ANR	5553461	Argument	"""%s cannot be found in job classAd."""		5552936	0					
ANR	5553462	PrimaryExpression	"""%s cannot be found in job classAd."""		5552936	0					
ANR	5553463	Argument	ATTR_JOB_VM_TYPE		5552936	1					
ANR	5553464	Identifier	ATTR_JOB_VM_TYPE		5552936	0					
ANR	5553465	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s\\n"" , err_msg . Value ( ) )"	287:2:7672:7714	5552936	1	True				
ANR	5553466	CallExpression	"dprintf ( D_ALWAYS , ""%s\\n"" , err_msg . Value ( ) )"		5552936	0					
ANR	5553467	Callee	dprintf		5552936	0					
ANR	5553468	Identifier	dprintf		5552936	0					
ANR	5553469	ArgumentList	D_ALWAYS		5552936	1					
ANR	5553470	Argument	D_ALWAYS		5552936	0					
ANR	5553471	Identifier	D_ALWAYS		5552936	0					
ANR	5553472	Argument	"""%s\\n"""		5552936	1					
ANR	5553473	PrimaryExpression	"""%s\\n"""		5552936	0					
ANR	5553474	Argument	err_msg . Value ( )		5552936	2					
ANR	5553475	CallExpression	err_msg . Value ( )		5552936	0					
ANR	5553476	Callee	err_msg . Value		5552936	0					
ANR	5553477	MemberAccess	err_msg . Value		5552936	0					
ANR	5553478	Identifier	err_msg		5552936	0					
ANR	5553479	Identifier	Value		5552936	1					
ANR	5553480	ArgumentList			5552936	1					
ANR	5553481	ExpressionStatement	"Starter -> jic -> notifyStarterError ( err_msg . Value ( ) , true , CONDOR_HOLD_CODE_FailedToCreateProcess , 0 )"	288:2:7718:7822	5552936	2	True				
ANR	5553482	CallExpression	"Starter -> jic -> notifyStarterError ( err_msg . Value ( ) , true , CONDOR_HOLD_CODE_FailedToCreateProcess , 0 )"		5552936	0					
ANR	5553483	Callee	Starter -> jic -> notifyStarterError		5552936	0					
ANR	5553484	PtrMemberAccess	Starter -> jic -> notifyStarterError		5552936	0					
ANR	5553485	PtrMemberAccess	Starter -> jic		5552936	0					
ANR	5553486	Identifier	Starter		5552936	0					
ANR	5553487	Identifier	jic		5552936	1					
ANR	5553488	Identifier	notifyStarterError		5552936	1					
ANR	5553489	ArgumentList	err_msg . Value ( )		5552936	1					
ANR	5553490	Argument	err_msg . Value ( )		5552936	0					
ANR	5553491	CallExpression	err_msg . Value ( )		5552936	0					
ANR	5553492	Callee	err_msg . Value		5552936	0					
ANR	5553493	MemberAccess	err_msg . Value		5552936	0					
ANR	5553494	Identifier	err_msg		5552936	0					
ANR	5553495	Identifier	Value		5552936	1					
ANR	5553496	ArgumentList			5552936	1					
ANR	5553497	Argument	true		5552936	1					
ANR	5553498	Identifier	true		5552936	0					
ANR	5553499	Argument	CONDOR_HOLD_CODE_FailedToCreateProcess		5552936	2					
ANR	5553500	Identifier	CONDOR_HOLD_CODE_FailedToCreateProcess		5552936	0					
ANR	5553501	Argument	0		5552936	3					
ANR	5553502	PrimaryExpression	0		5552936	0					
ANR	5553503	ReturnStatement	return false ;	290:2:7826:7838	5552936	3	True				
ANR	5553504	Identifier	false		5552936	0					
ANR	5553505	ExpressionStatement	vm_type_name . lower_case ( )	292:1:7844:7869	5552936	25	True				
ANR	5553506	CallExpression	vm_type_name . lower_case ( )		5552936	0					
ANR	5553507	Callee	vm_type_name . lower_case		5552936	0					
ANR	5553508	MemberAccess	vm_type_name . lower_case		5552936	0					
ANR	5553509	Identifier	vm_type_name		5552936	0					
ANR	5553510	Identifier	lower_case		5552936	1					
ANR	5553511	ArgumentList			5552936	1					
ANR	5553512	ExpressionStatement	m_vm_type = vm_type_name	293:1:7872:7896	5552936	26	True				
ANR	5553513	AssignmentExpression	m_vm_type = vm_type_name		5552936	0		=			
ANR	5553514	Identifier	m_vm_type		5552936	0					
ANR	5553515	Identifier	vm_type_name		5552936	1					
ANR	5553516	ExpressionStatement	m_vm_checkpoint = false	296:1:7940:7963	5552936	27	True				
ANR	5553517	AssignmentExpression	m_vm_checkpoint = false		5552936	0		=			
ANR	5553518	Identifier	m_vm_checkpoint		5552936	0					
ANR	5553519	Identifier	false		5552936	1					
ANR	5553520	ExpressionStatement	"JobAd -> LookupBool ( ATTR_JOB_VM_CHECKPOINT , m_vm_checkpoint )"	297:1:7966:8024	5552936	28	True				
ANR	5553521	CallExpression	"JobAd -> LookupBool ( ATTR_JOB_VM_CHECKPOINT , m_vm_checkpoint )"		5552936	0					
ANR	5553522	Callee	JobAd -> LookupBool		5552936	0					
ANR	5553523	PtrMemberAccess	JobAd -> LookupBool		5552936	0					
ANR	5553524	Identifier	JobAd		5552936	0					
ANR	5553525	Identifier	LookupBool		5552936	1					
ANR	5553526	ArgumentList	ATTR_JOB_VM_CHECKPOINT		5552936	1					
ANR	5553527	Argument	ATTR_JOB_VM_CHECKPOINT		5552936	0					
ANR	5553528	Identifier	ATTR_JOB_VM_CHECKPOINT		5552936	0					
ANR	5553529	Argument	m_vm_checkpoint		5552936	1					
ANR	5553530	Identifier	m_vm_checkpoint		5552936	0					
ANR	5553531	IdentifierDeclStatement	MyString string_value ;	301:1:8124:8145	5552936	29	True				
ANR	5553532	IdentifierDecl	string_value		5552936	0					
ANR	5553533	IdentifierDeclType	MyString		5552936	0					
ANR	5553534	Identifier	string_value		5552936	1					
ANR	5553535	IfStatement	"if ( JobAd -> LookupString ( ATTR_VM_CKPT_MAC , string_value ) == 1 )"		5552936	30					
ANR	5553536	Condition	"JobAd -> LookupString ( ATTR_VM_CKPT_MAC , string_value ) == 1"	302:5:8152:8207	5552936	0	True				
ANR	5553537	EqualityExpression	"JobAd -> LookupString ( ATTR_VM_CKPT_MAC , string_value ) == 1"		5552936	0		==			
ANR	5553538	CallExpression	"JobAd -> LookupString ( ATTR_VM_CKPT_MAC , string_value )"		5552936	0					
ANR	5553539	Callee	JobAd -> LookupString		5552936	0					
ANR	5553540	PtrMemberAccess	JobAd -> LookupString		5552936	0					
ANR	5553541	Identifier	JobAd		5552936	0					
ANR	5553542	Identifier	LookupString		5552936	1					
ANR	5553543	ArgumentList	ATTR_VM_CKPT_MAC		5552936	1					
ANR	5553544	Argument	ATTR_VM_CKPT_MAC		5552936	0					
ANR	5553545	Identifier	ATTR_VM_CKPT_MAC		5552936	0					
ANR	5553546	Argument	string_value		5552936	1					
ANR	5553547	Identifier	string_value		5552936	0					
ANR	5553548	PrimaryExpression	1		5552936	1					
ANR	5553549	CompoundStatement		154:64:4606:4606	5552936	1					
ANR	5553550	ExpressionStatement	m_vm_mac = string_value	303:2:8215:8238	5552936	0	True				
ANR	5553551	AssignmentExpression	m_vm_mac = string_value		5552936	0		=			
ANR	5553552	Identifier	m_vm_mac		5552936	0					
ANR	5553553	Identifier	string_value		5552936	1					
ANR	5553554	IdentifierDeclStatement	ClassAd recovery_ad = * JobAd ;	312:1:8367:8395	5552936	31	True				
ANR	5553555	IdentifierDecl	recovery_ad = * JobAd		5552936	0					
ANR	5553556	IdentifierDeclType	ClassAd		5552936	0					
ANR	5553557	Identifier	recovery_ad		5552936	1					
ANR	5553558	AssignmentExpression	recovery_ad = * JobAd		5552936	2		=			
ANR	5553559	Identifier	recovery_ad		5552936	0					
ANR	5553560	UnaryOperationExpression	* JobAd		5552936	1					
ANR	5553561	UnaryOperator	*		5552936	0					
ANR	5553562	Identifier	JobAd		5552936	1					
ANR	5553563	IdentifierDeclStatement	MyString vm_name ;	313:1:8398:8414	5552936	32	True				
ANR	5553564	IdentifierDecl	vm_name		5552936	0					
ANR	5553565	IdentifierDeclType	MyString		5552936	0					
ANR	5553566	Identifier	vm_name		5552936	1					
ANR	5553567	IfStatement	"if ( strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_KVM ) == MATCH || strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_XEN ) == MATCH )"		5552936	33					
ANR	5553568	Condition	"strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_KVM ) == MATCH || strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_XEN ) == MATCH"	314:6:8422:8556	5552936	0	True				
ANR	5553569	OrExpression	"strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_KVM ) == MATCH || strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_XEN ) == MATCH"		5552936	0		||			
ANR	5553570	EqualityExpression	"strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_KVM ) == MATCH"		5552936	0		==			
ANR	5553571	CallExpression	"strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_KVM )"		5552936	0					
ANR	5553572	Callee	strcasecmp		5552936	0					
ANR	5553573	Identifier	strcasecmp		5552936	0					
ANR	5553574	ArgumentList	m_vm_type . Value ( )		5552936	1					
ANR	5553575	Argument	m_vm_type . Value ( )		5552936	0					
ANR	5553576	CallExpression	m_vm_type . Value ( )		5552936	0					
ANR	5553577	Callee	m_vm_type . Value		5552936	0					
ANR	5553578	MemberAccess	m_vm_type . Value		5552936	0					
ANR	5553579	Identifier	m_vm_type		5552936	0					
ANR	5553580	Identifier	Value		5552936	1					
ANR	5553581	ArgumentList			5552936	1					
ANR	5553582	Argument	CONDOR_VM_UNIVERSE_KVM		5552936	1					
ANR	5553583	Identifier	CONDOR_VM_UNIVERSE_KVM		5552936	0					
ANR	5553584	Identifier	MATCH		5552936	1					
ANR	5553585	EqualityExpression	"strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_XEN ) == MATCH"		5552936	1		==			
ANR	5553586	CallExpression	"strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_XEN )"		5552936	0					
ANR	5553587	Callee	strcasecmp		5552936	0					
ANR	5553588	Identifier	strcasecmp		5552936	0					
ANR	5553589	ArgumentList	m_vm_type . Value ( )		5552936	1					
ANR	5553590	Argument	m_vm_type . Value ( )		5552936	0					
ANR	5553591	CallExpression	m_vm_type . Value ( )		5552936	0					
ANR	5553592	Callee	m_vm_type . Value		5552936	0					
ANR	5553593	MemberAccess	m_vm_type . Value		5552936	0					
ANR	5553594	Identifier	m_vm_type		5552936	0					
ANR	5553595	Identifier	Value		5552936	1					
ANR	5553596	ArgumentList			5552936	1					
ANR	5553597	Argument	CONDOR_VM_UNIVERSE_XEN		5552936	1					
ANR	5553598	Identifier	CONDOR_VM_UNIVERSE_XEN		5552936	0					
ANR	5553599	Identifier	MATCH		5552936	1					
ANR	5553600	CompoundStatement		167:70:4955:4955	5552936	1					
ANR	5553601	ExpressionStatement	"ASSERT ( create_name_for_VM ( JobAd , vm_name ) )"	316:2:8564:8610	5552936	0	True				
ANR	5553602	CallExpression	"ASSERT ( create_name_for_VM ( JobAd , vm_name ) )"		5552936	0					
ANR	5553603	Callee	ASSERT		5552936	0					
ANR	5553604	Identifier	ASSERT		5552936	0					
ANR	5553605	ArgumentList	"create_name_for_VM ( JobAd , vm_name )"		5552936	1					
ANR	5553606	Argument	"create_name_for_VM ( JobAd , vm_name )"		5552936	0					
ANR	5553607	CallExpression	"create_name_for_VM ( JobAd , vm_name )"		5552936	0					
ANR	5553608	Callee	create_name_for_VM		5552936	0					
ANR	5553609	Identifier	create_name_for_VM		5552936	0					
ANR	5553610	ArgumentList	JobAd		5552936	1					
ANR	5553611	Argument	JobAd		5552936	0					
ANR	5553612	Identifier	JobAd		5552936	0					
ANR	5553613	Argument	vm_name		5552936	1					
ANR	5553614	Identifier	vm_name		5552936	0					
ANR	5553615	ElseStatement	else		5552936	0					
ANR	5553616	CompoundStatement		169:8:5015:5015	5552936	0					
ANR	5553617	ExpressionStatement	vm_name = Starter -> GetWorkingDir ( )	318:2:8624:8658	5552936	0	True				
ANR	5553618	AssignmentExpression	vm_name = Starter -> GetWorkingDir ( )		5552936	0		=			
ANR	5553619	Identifier	vm_name		5552936	0					
ANR	5553620	CallExpression	Starter -> GetWorkingDir ( )		5552936	1					
ANR	5553621	Callee	Starter -> GetWorkingDir		5552936	0					
ANR	5553622	PtrMemberAccess	Starter -> GetWorkingDir		5552936	0					
ANR	5553623	Identifier	Starter		5552936	0					
ANR	5553624	Identifier	GetWorkingDir		5552936	1					
ANR	5553625	ArgumentList			5552936	1					
ANR	5553626	ExpressionStatement	"recovery_ad . Assign ( ""JobVMId"" , vm_name . Value ( ) )"	320:1:8664:8712	5552936	34	True				
ANR	5553627	CallExpression	"recovery_ad . Assign ( ""JobVMId"" , vm_name . Value ( ) )"		5552936	0					
ANR	5553628	Callee	recovery_ad . Assign		5552936	0					
ANR	5553629	MemberAccess	recovery_ad . Assign		5552936	0					
ANR	5553630	Identifier	recovery_ad		5552936	0					
ANR	5553631	Identifier	Assign		5552936	1					
ANR	5553632	ArgumentList	"""JobVMId"""		5552936	1					
ANR	5553633	Argument	"""JobVMId"""		5552936	0					
ANR	5553634	PrimaryExpression	"""JobVMId"""		5552936	0					
ANR	5553635	Argument	vm_name . Value ( )		5552936	1					
ANR	5553636	CallExpression	vm_name . Value ( )		5552936	0					
ANR	5553637	Callee	vm_name . Value		5552936	0					
ANR	5553638	MemberAccess	vm_name . Value		5552936	0					
ANR	5553639	Identifier	vm_name		5552936	0					
ANR	5553640	Identifier	Value		5552936	1					
ANR	5553641	ArgumentList			5552936	1					
ANR	5553642	ExpressionStatement	Starter -> WriteRecoveryFile ( & recovery_ad )	321:1:8715:8757	5552936	35	True				
ANR	5553643	CallExpression	Starter -> WriteRecoveryFile ( & recovery_ad )		5552936	0					
ANR	5553644	Callee	Starter -> WriteRecoveryFile		5552936	0					
ANR	5553645	PtrMemberAccess	Starter -> WriteRecoveryFile		5552936	0					
ANR	5553646	Identifier	Starter		5552936	0					
ANR	5553647	Identifier	WriteRecoveryFile		5552936	1					
ANR	5553648	ArgumentList	& recovery_ad		5552936	1					
ANR	5553649	Argument	& recovery_ad		5552936	0					
ANR	5553650	UnaryOperationExpression	& recovery_ad		5552936	0					
ANR	5553651	UnaryOperator	&		5552936	0					
ANR	5553652	Identifier	recovery_ad		5552936	1					
ANR	5553653	ExpressionStatement	"dprintf ( D_ALWAYS , ""About to start new VM\\n"" )"	326:1:8829:8874	5552936	36	True				
ANR	5553654	CallExpression	"dprintf ( D_ALWAYS , ""About to start new VM\\n"" )"		5552936	0					
ANR	5553655	Callee	dprintf		5552936	0					
ANR	5553656	Identifier	dprintf		5552936	0					
ANR	5553657	ArgumentList	D_ALWAYS		5552936	1					
ANR	5553658	Argument	D_ALWAYS		5552936	0					
ANR	5553659	Identifier	D_ALWAYS		5552936	0					
ANR	5553660	Argument	"""About to start new VM\\n"""		5552936	1					
ANR	5553661	PrimaryExpression	"""About to start new VM\\n"""		5552936	0					
ANR	5553662	ExpressionStatement	Starter -> jic -> notifyJobPreSpawn ( )	327:1:8877:8910	5552936	37	True				
ANR	5553663	CallExpression	Starter -> jic -> notifyJobPreSpawn ( )		5552936	0					
ANR	5553664	Callee	Starter -> jic -> notifyJobPreSpawn		5552936	0					
ANR	5553665	PtrMemberAccess	Starter -> jic -> notifyJobPreSpawn		5552936	0					
ANR	5553666	PtrMemberAccess	Starter -> jic		5552936	0					
ANR	5553667	Identifier	Starter		5552936	0					
ANR	5553668	Identifier	jic		5552936	1					
ANR	5553669	Identifier	notifyJobPreSpawn		5552936	1					
ANR	5553670	ArgumentList			5552936	1					
ANR	5553671	ExpressionStatement	"m_vmgahp = new VMGahpServer ( m_vmgahp_server . Value ( ) , m_vm_type . Value ( ) , JobAd )"	330:1:8938:9074	5552936	38	True				
ANR	5553672	AssignmentExpression	"m_vmgahp = new VMGahpServer ( m_vmgahp_server . Value ( ) , m_vm_type . Value ( ) , JobAd )"		5552936	0		=			
ANR	5553673	Identifier	m_vmgahp		5552936	0					
ANR	5553674	Expression	"m_vmgahp_server . Value ( ) , m_vm_type . Value ( ) , JobAd"		5552936	1					
ANR	5553675	CallExpression	m_vmgahp_server . Value ( )		5552936	0					
ANR	5553676	Callee	m_vmgahp_server . Value		5552936	0					
ANR	5553677	MemberAccess	m_vmgahp_server . Value		5552936	0					
ANR	5553678	Identifier	m_vmgahp_server		5552936	0					
ANR	5553679	Identifier	Value		5552936	1					
ANR	5553680	ArgumentList			5552936	1					
ANR	5553681	Expression	"m_vm_type . Value ( ) , JobAd"		5552936	1					
ANR	5553682	CallExpression	m_vm_type . Value ( )		5552936	0					
ANR	5553683	Callee	m_vm_type . Value		5552936	0					
ANR	5553684	MemberAccess	m_vm_type . Value		5552936	0					
ANR	5553685	Identifier	m_vm_type		5552936	0					
ANR	5553686	Identifier	Value		5552936	1					
ANR	5553687	ArgumentList			5552936	1					
ANR	5553688	Identifier	JobAd		5552936	1					
ANR	5553689	ExpressionStatement	ASSERT ( m_vmgahp )	333:1:9077:9093	5552936	39	True				
ANR	5553690	CallExpression	ASSERT ( m_vmgahp )		5552936	0					
ANR	5553691	Callee	ASSERT		5552936	0					
ANR	5553692	Identifier	ASSERT		5552936	0					
ANR	5553693	ArgumentList	m_vmgahp		5552936	1					
ANR	5553694	Argument	m_vmgahp		5552936	0					
ANR	5553695	Identifier	m_vmgahp		5552936	0					
ANR	5553696	ExpressionStatement	"m_vmgahp -> start_err_msg = """""	335:1:9097:9125	5552936	40	True				
ANR	5553697	AssignmentExpression	"m_vmgahp -> start_err_msg = """""		5552936	0		=			
ANR	5553698	PtrMemberAccess	m_vmgahp -> start_err_msg		5552936	0					
ANR	5553699	Identifier	m_vmgahp		5552936	0					
ANR	5553700	Identifier	start_err_msg		5552936	1					
ANR	5553701	PrimaryExpression	""""""		5552936	1					
ANR	5553702	IfStatement	"if ( m_vmgahp -> startUp ( & job_env , Starter -> GetWorkingDir ( ) , nice_inc , & fi ) == false )"		5552936	41					
ANR	5553703	Condition	"m_vmgahp -> startUp ( & job_env , Starter -> GetWorkingDir ( ) , nice_inc , & fi ) == false"	336:5:9132:9213	5552936	0	True				
ANR	5553704	EqualityExpression	"m_vmgahp -> startUp ( & job_env , Starter -> GetWorkingDir ( ) , nice_inc , & fi ) == false"		5552936	0		==			
ANR	5553705	CallExpression	"m_vmgahp -> startUp ( & job_env , Starter -> GetWorkingDir ( ) , nice_inc , & fi )"		5552936	0					
ANR	5553706	Callee	m_vmgahp -> startUp		5552936	0					
ANR	5553707	PtrMemberAccess	m_vmgahp -> startUp		5552936	0					
ANR	5553708	Identifier	m_vmgahp		5552936	0					
ANR	5553709	Identifier	startUp		5552936	1					
ANR	5553710	ArgumentList	& job_env		5552936	1					
ANR	5553711	Argument	& job_env		5552936	0					
ANR	5553712	UnaryOperationExpression	& job_env		5552936	0					
ANR	5553713	UnaryOperator	&		5552936	0					
ANR	5553714	Identifier	job_env		5552936	1					
ANR	5553715	Argument	Starter -> GetWorkingDir ( )		5552936	1					
ANR	5553716	CallExpression	Starter -> GetWorkingDir ( )		5552936	0					
ANR	5553717	Callee	Starter -> GetWorkingDir		5552936	0					
ANR	5553718	PtrMemberAccess	Starter -> GetWorkingDir		5552936	0					
ANR	5553719	Identifier	Starter		5552936	0					
ANR	5553720	Identifier	GetWorkingDir		5552936	1					
ANR	5553721	ArgumentList			5552936	1					
ANR	5553722	Argument	nice_inc		5552936	2					
ANR	5553723	Identifier	nice_inc		5552936	0					
ANR	5553724	Argument	& fi		5552936	3					
ANR	5553725	UnaryOperationExpression	& fi		5552936	0					
ANR	5553726	UnaryOperator	&		5552936	0					
ANR	5553727	Identifier	fi		5552936	1					
ANR	5553728	Identifier	false		5552936	1					
ANR	5553729	CompoundStatement		189:20:5612:5612	5552936	1					
ANR	5553730	ExpressionStatement	JobPid = - 1	338:2:9221:9232	5552936	0	True				
ANR	5553731	AssignmentExpression	JobPid = - 1		5552936	0		=			
ANR	5553732	Identifier	JobPid		5552936	0					
ANR	5553733	UnaryOperationExpression	- 1		5552936	1					
ANR	5553734	UnaryOperator	-		5552936	0					
ANR	5553735	PrimaryExpression	1		5552936	1					
ANR	5553736	ExpressionStatement	"err_msg = ""Failed to start vm-gahp server"""	339:2:9236:9278	5552936	1	True				
ANR	5553737	AssignmentExpression	"err_msg = ""Failed to start vm-gahp server"""		5552936	0		=			
ANR	5553738	Identifier	err_msg		5552936	0					
ANR	5553739	PrimaryExpression	"""Failed to start vm-gahp server"""		5552936	1					
ANR	5553740	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s\\n"" , err_msg . Value ( ) )"	340:2:9282:9325	5552936	2	True				
ANR	5553741	CallExpression	"dprintf ( D_ALWAYS , ""%s\\n"" , err_msg . Value ( ) )"		5552936	0					
ANR	5553742	Callee	dprintf		5552936	0					
ANR	5553743	Identifier	dprintf		5552936	0					
ANR	5553744	ArgumentList	D_ALWAYS		5552936	1					
ANR	5553745	Argument	D_ALWAYS		5552936	0					
ANR	5553746	Identifier	D_ALWAYS		5552936	0					
ANR	5553747	Argument	"""%s\\n"""		5552936	1					
ANR	5553748	PrimaryExpression	"""%s\\n"""		5552936	0					
ANR	5553749	Argument	err_msg . Value ( )		5552936	2					
ANR	5553750	CallExpression	err_msg . Value ( )		5552936	0					
ANR	5553751	Callee	err_msg . Value		5552936	0					
ANR	5553752	MemberAccess	err_msg . Value		5552936	0					
ANR	5553753	Identifier	err_msg		5552936	0					
ANR	5553754	Identifier	Value		5552936	1					
ANR	5553755	ArgumentList			5552936	1					
ANR	5553756	IfStatement	if ( m_vmgahp -> start_err_msg . Length ( ) > 0 )		5552936	3					
ANR	5553757	Condition	m_vmgahp -> start_err_msg . Length ( ) > 0	341:6:9333:9368	5552936	0	True				
ANR	5553758	RelationalExpression	m_vmgahp -> start_err_msg . Length ( ) > 0		5552936	0		>			
ANR	5553759	CallExpression	m_vmgahp -> start_err_msg . Length ( )		5552936	0					
ANR	5553760	Callee	m_vmgahp -> start_err_msg . Length		5552936	0					
ANR	5553761	MemberAccess	m_vmgahp -> start_err_msg . Length		5552936	0					
ANR	5553762	PtrMemberAccess	m_vmgahp -> start_err_msg		5552936	0					
ANR	5553763	Identifier	m_vmgahp		5552936	0					
ANR	5553764	Identifier	start_err_msg		5552936	1					
ANR	5553765	Identifier	Length		5552936	1					
ANR	5553766	ArgumentList			5552936	1					
ANR	5553767	PrimaryExpression	0		5552936	1					
ANR	5553768	CompoundStatement		193:45:5767:5767	5552936	1					
ANR	5553769	ExpressionStatement	m_vmgahp -> start_err_msg . chomp ( )	342:3:9377:9408	5552936	0	True				
ANR	5553770	CallExpression	m_vmgahp -> start_err_msg . chomp ( )		5552936	0					
ANR	5553771	Callee	m_vmgahp -> start_err_msg . chomp		5552936	0					
ANR	5553772	MemberAccess	m_vmgahp -> start_err_msg . chomp		5552936	0					
ANR	5553773	PtrMemberAccess	m_vmgahp -> start_err_msg		5552936	0					
ANR	5553774	Identifier	m_vmgahp		5552936	0					
ANR	5553775	Identifier	start_err_msg		5552936	1					
ANR	5553776	Identifier	chomp		5552936	1					
ANR	5553777	ArgumentList			5552936	1					
ANR	5553778	ExpressionStatement	err_msg = m_vmgahp -> start_err_msg	343:3:9413:9446	5552936	1	True				
ANR	5553779	AssignmentExpression	err_msg = m_vmgahp -> start_err_msg		5552936	0		=			
ANR	5553780	Identifier	err_msg		5552936	0					
ANR	5553781	PtrMemberAccess	m_vmgahp -> start_err_msg		5552936	1					
ANR	5553782	Identifier	m_vmgahp		5552936	0					
ANR	5553783	Identifier	start_err_msg		5552936	1					
ANR	5553784	ExpressionStatement	reportErrorToStartd ( )	345:2:9454:9475	5552936	4	True				
ANR	5553785	CallExpression	reportErrorToStartd ( )		5552936	0					
ANR	5553786	Callee	reportErrorToStartd		5552936	0					
ANR	5553787	Identifier	reportErrorToStartd		5552936	0					
ANR	5553788	ArgumentList			5552936	1					
ANR	5553789	ExpressionStatement	"Starter -> jic -> notifyStarterError ( err_msg . Value ( ) , true , 0 , 0 )"	346:2:9479:9541	5552936	5	True				
ANR	5553790	CallExpression	"Starter -> jic -> notifyStarterError ( err_msg . Value ( ) , true , 0 , 0 )"		5552936	0					
ANR	5553791	Callee	Starter -> jic -> notifyStarterError		5552936	0					
ANR	5553792	PtrMemberAccess	Starter -> jic -> notifyStarterError		5552936	0					
ANR	5553793	PtrMemberAccess	Starter -> jic		5552936	0					
ANR	5553794	Identifier	Starter		5552936	0					
ANR	5553795	Identifier	jic		5552936	1					
ANR	5553796	Identifier	notifyStarterError		5552936	1					
ANR	5553797	ArgumentList	err_msg . Value ( )		5552936	1					
ANR	5553798	Argument	err_msg . Value ( )		5552936	0					
ANR	5553799	CallExpression	err_msg . Value ( )		5552936	0					
ANR	5553800	Callee	err_msg . Value		5552936	0					
ANR	5553801	MemberAccess	err_msg . Value		5552936	0					
ANR	5553802	Identifier	err_msg		5552936	0					
ANR	5553803	Identifier	Value		5552936	1					
ANR	5553804	ArgumentList			5552936	1					
ANR	5553805	Argument	true		5552936	1					
ANR	5553806	Identifier	true		5552936	0					
ANR	5553807	Argument	0		5552936	2					
ANR	5553808	PrimaryExpression	0		5552936	0					
ANR	5553809	Argument	0		5552936	3					
ANR	5553810	PrimaryExpression	0		5552936	0					
ANR	5553811	Statement	delete	348:2:9546:9551	5552936	6	True				
ANR	5553812	ExpressionStatement	m_vmgahp	348:9:9553:9561	5552936	7	True				
ANR	5553813	Identifier	m_vmgahp		5552936	0					
ANR	5553814	ExpressionStatement	m_vmgahp = NULL	349:2:9565:9580	5552936	8	True				
ANR	5553815	AssignmentExpression	m_vmgahp = NULL		5552936	0		=			
ANR	5553816	Identifier	m_vmgahp		5552936	0					
ANR	5553817	Identifier	NULL		5552936	1					
ANR	5553818	ReturnStatement	return false ;	350:2:9585:9597	5552936	9	True				
ANR	5553819	Identifier	false		5552936	0					
ANR	5553820	ExpressionStatement	JobPid = m_vmgahp -> getVMGahpServerPid ( )	354:1:9661:9700	5552936	42	True				
ANR	5553821	AssignmentExpression	JobPid = m_vmgahp -> getVMGahpServerPid ( )		5552936	0		=			
ANR	5553822	Identifier	JobPid		5552936	0					
ANR	5553823	CallExpression	m_vmgahp -> getVMGahpServerPid ( )		5552936	1					
ANR	5553824	Callee	m_vmgahp -> getVMGahpServerPid		5552936	0					
ANR	5553825	PtrMemberAccess	m_vmgahp -> getVMGahpServerPid		5552936	0					
ANR	5553826	Identifier	m_vmgahp		5552936	0					
ANR	5553827	Identifier	getVMGahpServerPid		5552936	1					
ANR	5553828	ArgumentList			5552936	1					
ANR	5553829	ExpressionStatement	num_pids ++	355:1:9703:9713	5552936	43	True				
ANR	5553830	PostIncDecOperationExpression	num_pids ++		5552936	0					
ANR	5553831	Identifier	num_pids		5552936	0					
ANR	5553832	IncDec	++		5552936	1					
ANR	5553833	IdentifierDeclStatement	VMGahpRequest * new_req = new VMGahpRequest ( m_vmgahp ) ;	357:1:9717:9769	5552936	44	True				
ANR	5553834	IdentifierDecl	* new_req = new VMGahpRequest ( m_vmgahp )		5552936	0					
ANR	5553835	IdentifierDeclType	VMGahpRequest *		5552936	0					
ANR	5553836	Identifier	new_req		5552936	1					
ANR	5553837	AssignmentExpression	* new_req = new VMGahpRequest ( m_vmgahp )		5552936	2		=			
ANR	5553838	Identifier	m_vmgahp		5552936	0					
ANR	5553839	Identifier	m_vmgahp		5552936	1					
ANR	5553840	ExpressionStatement	ASSERT ( new_req )	358:1:9772:9787	5552936	45	True				
ANR	5553841	CallExpression	ASSERT ( new_req )		5552936	0					
ANR	5553842	Callee	ASSERT		5552936	0					
ANR	5553843	Identifier	ASSERT		5552936	0					
ANR	5553844	ArgumentList	new_req		5552936	1					
ANR	5553845	Argument	new_req		5552936	0					
ANR	5553846	Identifier	new_req		5552936	0					
ANR	5553847	ExpressionStatement	new_req -> setMode ( VMGahpRequest :: BLOCKING )	359:1:9790:9831	5552936	46	True				
ANR	5553848	CallExpression	new_req -> setMode ( VMGahpRequest :: BLOCKING )		5552936	0					
ANR	5553849	Callee	new_req -> setMode		5552936	0					
ANR	5553850	PtrMemberAccess	new_req -> setMode		5552936	0					
ANR	5553851	Identifier	new_req		5552936	0					
ANR	5553852	Identifier	setMode		5552936	1					
ANR	5553853	ArgumentList	VMGahpRequest :: BLOCKING		5552936	1					
ANR	5553854	Argument	VMGahpRequest :: BLOCKING		5552936	0					
ANR	5553855	Identifier	VMGahpRequest :: BLOCKING		5552936	0					
ANR	5553856	ExpressionStatement	new_req -> setTimeout ( m_vmoperation_timeout + 120 )	363:1:9942:9990	5552936	47	True				
ANR	5553857	CallExpression	new_req -> setTimeout ( m_vmoperation_timeout + 120 )		5552936	0					
ANR	5553858	Callee	new_req -> setTimeout		5552936	0					
ANR	5553859	PtrMemberAccess	new_req -> setTimeout		5552936	0					
ANR	5553860	Identifier	new_req		5552936	0					
ANR	5553861	Identifier	setTimeout		5552936	1					
ANR	5553862	ArgumentList	m_vmoperation_timeout + 120		5552936	1					
ANR	5553863	Argument	m_vmoperation_timeout + 120		5552936	0					
ANR	5553864	AdditiveExpression	m_vmoperation_timeout + 120		5552936	0		+			
ANR	5553865	Identifier	m_vmoperation_timeout		5552936	0					
ANR	5553866	PrimaryExpression	120		5552936	1					
ANR	5553867	IdentifierDeclStatement	int p_result ;	365:1:9994:10006	5552936	48	True				
ANR	5553868	IdentifierDecl	p_result		5552936	0					
ANR	5553869	IdentifierDeclType	int		5552936	0					
ANR	5553870	Identifier	p_result		5552936	1					
ANR	5553871	ExpressionStatement	"p_result = new_req -> vmStart ( m_vm_type . Value ( ) , Starter -> GetWorkingDir ( ) )"	366:1:10009:10081	5552936	49	True				
ANR	5553872	AssignmentExpression	"p_result = new_req -> vmStart ( m_vm_type . Value ( ) , Starter -> GetWorkingDir ( ) )"		5552936	0		=			
ANR	5553873	Identifier	p_result		5552936	0					
ANR	5553874	CallExpression	"new_req -> vmStart ( m_vm_type . Value ( ) , Starter -> GetWorkingDir ( ) )"		5552936	1					
ANR	5553875	Callee	new_req -> vmStart		5552936	0					
ANR	5553876	PtrMemberAccess	new_req -> vmStart		5552936	0					
ANR	5553877	Identifier	new_req		5552936	0					
ANR	5553878	Identifier	vmStart		5552936	1					
ANR	5553879	ArgumentList	m_vm_type . Value ( )		5552936	1					
ANR	5553880	Argument	m_vm_type . Value ( )		5552936	0					
ANR	5553881	CallExpression	m_vm_type . Value ( )		5552936	0					
ANR	5553882	Callee	m_vm_type . Value		5552936	0					
ANR	5553883	MemberAccess	m_vm_type . Value		5552936	0					
ANR	5553884	Identifier	m_vm_type		5552936	0					
ANR	5553885	Identifier	Value		5552936	1					
ANR	5553886	ArgumentList			5552936	1					
ANR	5553887	Argument	Starter -> GetWorkingDir ( )		5552936	1					
ANR	5553888	CallExpression	Starter -> GetWorkingDir ( )		5552936	0					
ANR	5553889	Callee	Starter -> GetWorkingDir		5552936	0					
ANR	5553890	PtrMemberAccess	Starter -> GetWorkingDir		5552936	0					
ANR	5553891	Identifier	Starter		5552936	0					
ANR	5553892	Identifier	GetWorkingDir		5552936	1					
ANR	5553893	ArgumentList			5552936	1					
ANR	5553894	IfStatement	if ( p_result != VMGAHP_REQ_COMMAND_DONE )		5552936	50					
ANR	5553895	Condition	p_result != VMGAHP_REQ_COMMAND_DONE	369:4:10163:10197	5552936	0	True				
ANR	5553896	EqualityExpression	p_result != VMGAHP_REQ_COMMAND_DONE		5552936	0		!=			
ANR	5553897	Identifier	p_result		5552936	0					
ANR	5553898	Identifier	VMGAHP_REQ_COMMAND_DONE		5552936	1					
ANR	5553899	CompoundStatement		221:41:6595:6595	5552936	1					
ANR	5553900	ExpressionStatement	"err_msg = ""Failed to create a new VM"""	370:2:10204:10241	5552936	0	True				
ANR	5553901	AssignmentExpression	"err_msg = ""Failed to create a new VM"""		5552936	0		=			
ANR	5553902	Identifier	err_msg		5552936	0					
ANR	5553903	PrimaryExpression	"""Failed to create a new VM"""		5552936	1					
ANR	5553904	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s\\n"" , err_msg . Value ( ) )"	371:2:10245:10287	5552936	1	True				
ANR	5553905	CallExpression	"dprintf ( D_ALWAYS , ""%s\\n"" , err_msg . Value ( ) )"		5552936	0					
ANR	5553906	Callee	dprintf		5552936	0					
ANR	5553907	Identifier	dprintf		5552936	0					
ANR	5553908	ArgumentList	D_ALWAYS		5552936	1					
ANR	5553909	Argument	D_ALWAYS		5552936	0					
ANR	5553910	Identifier	D_ALWAYS		5552936	0					
ANR	5553911	Argument	"""%s\\n"""		5552936	1					
ANR	5553912	PrimaryExpression	"""%s\\n"""		5552936	0					
ANR	5553913	Argument	err_msg . Value ( )		5552936	2					
ANR	5553914	CallExpression	err_msg . Value ( )		5552936	0					
ANR	5553915	Callee	err_msg . Value		5552936	0					
ANR	5553916	MemberAccess	err_msg . Value		5552936	0					
ANR	5553917	Identifier	err_msg		5552936	0					
ANR	5553918	Identifier	Value		5552936	1					
ANR	5553919	ArgumentList			5552936	1					
ANR	5553920	ExpressionStatement	m_vmgahp -> printSystemErrorMsg ( )	372:2:10291:10322	5552936	2	True				
ANR	5553921	CallExpression	m_vmgahp -> printSystemErrorMsg ( )		5552936	0					
ANR	5553922	Callee	m_vmgahp -> printSystemErrorMsg		5552936	0					
ANR	5553923	PtrMemberAccess	m_vmgahp -> printSystemErrorMsg		5552936	0					
ANR	5553924	Identifier	m_vmgahp		5552936	0					
ANR	5553925	Identifier	printSystemErrorMsg		5552936	1					
ANR	5553926	ArgumentList			5552936	1					
ANR	5553927	ExpressionStatement	reportErrorToStartd ( )	374:2:10327:10348	5552936	3	True				
ANR	5553928	CallExpression	reportErrorToStartd ( )		5552936	0					
ANR	5553929	Callee	reportErrorToStartd		5552936	0					
ANR	5553930	Identifier	reportErrorToStartd		5552936	0					
ANR	5553931	ArgumentList			5552936	1					
ANR	5553932	ExpressionStatement	"Starter -> jic -> notifyStarterError ( err_msg . Value ( ) , true , 0 , 0 )"	375:2:10352:10414	5552936	4	True				
ANR	5553933	CallExpression	"Starter -> jic -> notifyStarterError ( err_msg . Value ( ) , true , 0 , 0 )"		5552936	0					
ANR	5553934	Callee	Starter -> jic -> notifyStarterError		5552936	0					
ANR	5553935	PtrMemberAccess	Starter -> jic -> notifyStarterError		5552936	0					
ANR	5553936	PtrMemberAccess	Starter -> jic		5552936	0					
ANR	5553937	Identifier	Starter		5552936	0					
ANR	5553938	Identifier	jic		5552936	1					
ANR	5553939	Identifier	notifyStarterError		5552936	1					
ANR	5553940	ArgumentList	err_msg . Value ( )		5552936	1					
ANR	5553941	Argument	err_msg . Value ( )		5552936	0					
ANR	5553942	CallExpression	err_msg . Value ( )		5552936	0					
ANR	5553943	Callee	err_msg . Value		5552936	0					
ANR	5553944	MemberAccess	err_msg . Value		5552936	0					
ANR	5553945	Identifier	err_msg		5552936	0					
ANR	5553946	Identifier	Value		5552936	1					
ANR	5553947	ArgumentList			5552936	1					
ANR	5553948	Argument	true		5552936	1					
ANR	5553949	Identifier	true		5552936	0					
ANR	5553950	Argument	0		5552936	2					
ANR	5553951	PrimaryExpression	0		5552936	0					
ANR	5553952	Argument	0		5552936	3					
ANR	5553953	PrimaryExpression	0		5552936	0					
ANR	5553954	Statement	delete	377:2:10419:10424	5552936	5	True				
ANR	5553955	ExpressionStatement	new_req	377:9:10426:10433	5552936	6	True				
ANR	5553956	Identifier	new_req		5552936	0					
ANR	5553957	Statement	delete	378:2:10437:10442	5552936	7	True				
ANR	5553958	ExpressionStatement	m_vmgahp	378:9:10444:10452	5552936	8	True				
ANR	5553959	Identifier	m_vmgahp		5552936	0					
ANR	5553960	ExpressionStatement	m_vmgahp = NULL	379:2:10456:10471	5552936	9	True				
ANR	5553961	AssignmentExpression	m_vmgahp = NULL		5552936	0		=			
ANR	5553962	Identifier	m_vmgahp		5552936	0					
ANR	5553963	Identifier	NULL		5552936	1					
ANR	5553964	ExpressionStatement	daemonCore -> Kill_Family ( JobPid )	382:2:10564:10595	5552936	10	True				
ANR	5553965	CallExpression	daemonCore -> Kill_Family ( JobPid )		5552936	0					
ANR	5553966	Callee	daemonCore -> Kill_Family		5552936	0					
ANR	5553967	PtrMemberAccess	daemonCore -> Kill_Family		5552936	0					
ANR	5553968	Identifier	daemonCore		5552936	0					
ANR	5553969	Identifier	Kill_Family		5552936	1					
ANR	5553970	ArgumentList	JobPid		5552936	1					
ANR	5553971	Argument	JobPid		5552936	0					
ANR	5553972	Identifier	JobPid		5552936	0					
ANR	5553973	ReturnStatement	return false ;	383:2:10599:10611	5552936	11	True				
ANR	5553974	Identifier	false		5552936	0					
ANR	5553975	IfStatement	if ( new_req -> checkResult ( err_msg ) == false )		5552936	51					
ANR	5553976	Condition	new_req -> checkResult ( err_msg ) == false	386:5:10622:10659	5552936	0	True				
ANR	5553977	EqualityExpression	new_req -> checkResult ( err_msg ) == false		5552936	0		==			
ANR	5553978	CallExpression	new_req -> checkResult ( err_msg )		5552936	0					
ANR	5553979	Callee	new_req -> checkResult		5552936	0					
ANR	5553980	PtrMemberAccess	new_req -> checkResult		5552936	0					
ANR	5553981	Identifier	new_req		5552936	0					
ANR	5553982	Identifier	checkResult		5552936	1					
ANR	5553983	ArgumentList	err_msg		5552936	1					
ANR	5553984	Argument	err_msg		5552936	0					
ANR	5553985	Identifier	err_msg		5552936	0					
ANR	5553986	Identifier	false		5552936	1					
ANR	5553987	CompoundStatement		238:46:7058:7058	5552936	1					
ANR	5553988	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s\\n"" , err_msg . Value ( ) )"	387:2:10667:10709	5552936	0	True				
ANR	5553989	CallExpression	"dprintf ( D_ALWAYS , ""%s\\n"" , err_msg . Value ( ) )"		5552936	0					
ANR	5553990	Callee	dprintf		5552936	0					
ANR	5553991	Identifier	dprintf		5552936	0					
ANR	5553992	ArgumentList	D_ALWAYS		5552936	1					
ANR	5553993	Argument	D_ALWAYS		5552936	0					
ANR	5553994	Identifier	D_ALWAYS		5552936	0					
ANR	5553995	Argument	"""%s\\n"""		5552936	1					
ANR	5553996	PrimaryExpression	"""%s\\n"""		5552936	0					
ANR	5553997	Argument	err_msg . Value ( )		5552936	2					
ANR	5553998	CallExpression	err_msg . Value ( )		5552936	0					
ANR	5553999	Callee	err_msg . Value		5552936	0					
ANR	5554000	MemberAccess	err_msg . Value		5552936	0					
ANR	5554001	Identifier	err_msg		5552936	0					
ANR	5554002	Identifier	Value		5552936	1					
ANR	5554003	ArgumentList			5552936	1					
ANR	5554004	ExpressionStatement	m_vmgahp -> printSystemErrorMsg ( )	388:2:10713:10744	5552936	1	True				
ANR	5554005	CallExpression	m_vmgahp -> printSystemErrorMsg ( )		5552936	0					
ANR	5554006	Callee	m_vmgahp -> printSystemErrorMsg		5552936	0					
ANR	5554007	PtrMemberAccess	m_vmgahp -> printSystemErrorMsg		5552936	0					
ANR	5554008	Identifier	m_vmgahp		5552936	0					
ANR	5554009	Identifier	printSystemErrorMsg		5552936	1					
ANR	5554010	ArgumentList			5552936	1					
ANR	5554011	IfStatement	"if ( ! strcmp ( err_msg . Value ( ) , VMGAHP_ERR_INTERNAL ) || ! strcmp ( err_msg . Value ( ) , VMGAHP_ERR_CRITICAL ) )"		5552936	2					
ANR	5554012	Condition	"! strcmp ( err_msg . Value ( ) , VMGAHP_ERR_INTERNAL ) || ! strcmp ( err_msg . Value ( ) , VMGAHP_ERR_CRITICAL )"	390:6:10753:10849	5552936	0	True				
ANR	5554013	OrExpression	"! strcmp ( err_msg . Value ( ) , VMGAHP_ERR_INTERNAL ) || ! strcmp ( err_msg . Value ( ) , VMGAHP_ERR_CRITICAL )"		5552936	0		||			
ANR	5554014	UnaryOperationExpression	"! strcmp ( err_msg . Value ( ) , VMGAHP_ERR_INTERNAL )"		5552936	0					
ANR	5554015	UnaryOperator	!		5552936	0					
ANR	5554016	CallExpression	"strcmp ( err_msg . Value ( ) , VMGAHP_ERR_INTERNAL )"		5552936	1					
ANR	5554017	Callee	strcmp		5552936	0					
ANR	5554018	Identifier	strcmp		5552936	0					
ANR	5554019	ArgumentList	err_msg . Value ( )		5552936	1					
ANR	5554020	Argument	err_msg . Value ( )		5552936	0					
ANR	5554021	CallExpression	err_msg . Value ( )		5552936	0					
ANR	5554022	Callee	err_msg . Value		5552936	0					
ANR	5554023	MemberAccess	err_msg . Value		5552936	0					
ANR	5554024	Identifier	err_msg		5552936	0					
ANR	5554025	Identifier	Value		5552936	1					
ANR	5554026	ArgumentList			5552936	1					
ANR	5554027	Argument	VMGAHP_ERR_INTERNAL		5552936	1					
ANR	5554028	Identifier	VMGAHP_ERR_INTERNAL		5552936	0					
ANR	5554029	UnaryOperationExpression	"! strcmp ( err_msg . Value ( ) , VMGAHP_ERR_CRITICAL )"		5552936	1					
ANR	5554030	UnaryOperator	!		5552936	0					
ANR	5554031	CallExpression	"strcmp ( err_msg . Value ( ) , VMGAHP_ERR_CRITICAL )"		5552936	1					
ANR	5554032	Callee	strcmp		5552936	0					
ANR	5554033	Identifier	strcmp		5552936	0					
ANR	5554034	ArgumentList	err_msg . Value ( )		5552936	1					
ANR	5554035	Argument	err_msg . Value ( )		5552936	0					
ANR	5554036	CallExpression	err_msg . Value ( )		5552936	0					
ANR	5554037	Callee	err_msg . Value		5552936	0					
ANR	5554038	MemberAccess	err_msg . Value		5552936	0					
ANR	5554039	Identifier	err_msg		5552936	0					
ANR	5554040	Identifier	Value		5552936	1					
ANR	5554041	ArgumentList			5552936	1					
ANR	5554042	Argument	VMGAHP_ERR_CRITICAL		5552936	1					
ANR	5554043	Identifier	VMGAHP_ERR_CRITICAL		5552936	0					
ANR	5554044	CompoundStatement		243:52:7249:7249	5552936	1					
ANR	5554045	ExpressionStatement	reportErrorToStartd ( )	392:3:10859:10880	5552936	0	True				
ANR	5554046	CallExpression	reportErrorToStartd ( )		5552936	0					
ANR	5554047	Callee	reportErrorToStartd		5552936	0					
ANR	5554048	Identifier	reportErrorToStartd		5552936	0					
ANR	5554049	ArgumentList			5552936	1					
ANR	5554050	ExpressionStatement	"Starter -> jic -> notifyStarterError ( err_msg . Value ( ) , true , CONDOR_HOLD_CODE_FailedToCreateProcess , 0 )"	395:2:10889:10993	5552936	3	True				
ANR	5554051	CallExpression	"Starter -> jic -> notifyStarterError ( err_msg . Value ( ) , true , CONDOR_HOLD_CODE_FailedToCreateProcess , 0 )"		5552936	0					
ANR	5554052	Callee	Starter -> jic -> notifyStarterError		5552936	0					
ANR	5554053	PtrMemberAccess	Starter -> jic -> notifyStarterError		5552936	0					
ANR	5554054	PtrMemberAccess	Starter -> jic		5552936	0					
ANR	5554055	Identifier	Starter		5552936	0					
ANR	5554056	Identifier	jic		5552936	1					
ANR	5554057	Identifier	notifyStarterError		5552936	1					
ANR	5554058	ArgumentList	err_msg . Value ( )		5552936	1					
ANR	5554059	Argument	err_msg . Value ( )		5552936	0					
ANR	5554060	CallExpression	err_msg . Value ( )		5552936	0					
ANR	5554061	Callee	err_msg . Value		5552936	0					
ANR	5554062	MemberAccess	err_msg . Value		5552936	0					
ANR	5554063	Identifier	err_msg		5552936	0					
ANR	5554064	Identifier	Value		5552936	1					
ANR	5554065	ArgumentList			5552936	1					
ANR	5554066	Argument	true		5552936	1					
ANR	5554067	Identifier	true		5552936	0					
ANR	5554068	Argument	CONDOR_HOLD_CODE_FailedToCreateProcess		5552936	2					
ANR	5554069	Identifier	CONDOR_HOLD_CODE_FailedToCreateProcess		5552936	0					
ANR	5554070	Argument	0		5552936	3					
ANR	5554071	PrimaryExpression	0		5552936	0					
ANR	5554072	Statement	delete	398:2:10998:11003	5552936	4	True				
ANR	5554073	ExpressionStatement	new_req	398:9:11005:11012	5552936	5	True				
ANR	5554074	Identifier	new_req		5552936	0					
ANR	5554075	Statement	delete	399:2:11016:11021	5552936	6	True				
ANR	5554076	ExpressionStatement	m_vmgahp	399:9:11023:11031	5552936	7	True				
ANR	5554077	Identifier	m_vmgahp		5552936	0					
ANR	5554078	ExpressionStatement	m_vmgahp = NULL	400:2:11035:11050	5552936	8	True				
ANR	5554079	AssignmentExpression	m_vmgahp = NULL		5552936	0		=			
ANR	5554080	Identifier	m_vmgahp		5552936	0					
ANR	5554081	Identifier	NULL		5552936	1					
ANR	5554082	ExpressionStatement	daemonCore -> Kill_Family ( JobPid )	403:2:11143:11174	5552936	9	True				
ANR	5554083	CallExpression	daemonCore -> Kill_Family ( JobPid )		5552936	0					
ANR	5554084	Callee	daemonCore -> Kill_Family		5552936	0					
ANR	5554085	PtrMemberAccess	daemonCore -> Kill_Family		5552936	0					
ANR	5554086	Identifier	daemonCore		5552936	0					
ANR	5554087	Identifier	Kill_Family		5552936	1					
ANR	5554088	ArgumentList	JobPid		5552936	1					
ANR	5554089	Argument	JobPid		5552936	0					
ANR	5554090	Identifier	JobPid		5552936	0					
ANR	5554091	ReturnStatement	return false ;	404:2:11178:11190	5552936	10	True				
ANR	5554092	Identifier	false		5552936	0					
ANR	5554093	IdentifierDeclStatement	Gahp_Args * result_args ;	407:1:11197:11219	5552936	52	True				
ANR	5554094	IdentifierDecl	* result_args		5552936	0					
ANR	5554095	IdentifierDeclType	Gahp_Args *		5552936	0					
ANR	5554096	Identifier	result_args		5552936	1					
ANR	5554097	ExpressionStatement	result_args = new_req -> getResult ( )	408:1:11222:11256	5552936	53	True				
ANR	5554098	AssignmentExpression	result_args = new_req -> getResult ( )		5552936	0		=			
ANR	5554099	Identifier	result_args		5552936	0					
ANR	5554100	CallExpression	new_req -> getResult ( )		5552936	1					
ANR	5554101	Callee	new_req -> getResult		5552936	0					
ANR	5554102	PtrMemberAccess	new_req -> getResult		5552936	0					
ANR	5554103	Identifier	new_req		5552936	0					
ANR	5554104	Identifier	getResult		5552936	1					
ANR	5554105	ArgumentList			5552936	1					
ANR	5554106	ExpressionStatement	"m_vm_id = ( int ) strtol ( result_args -> argv [ 2 ] , ( char * * ) NULL , 10 )"	411:1:11287:11349	5552936	54	True				
ANR	5554107	AssignmentExpression	"m_vm_id = ( int ) strtol ( result_args -> argv [ 2 ] , ( char * * ) NULL , 10 )"		5552936	0		=			
ANR	5554108	Identifier	m_vm_id		5552936	0					
ANR	5554109	CastExpression	"( int ) strtol ( result_args -> argv [ 2 ] , ( char * * ) NULL , 10 )"		5552936	1					
ANR	5554110	CastTarget	int		5552936	0					
ANR	5554111	CallExpression	"strtol ( result_args -> argv [ 2 ] , ( char * * ) NULL , 10 )"		5552936	1					
ANR	5554112	Callee	strtol		5552936	0					
ANR	5554113	Identifier	strtol		5552936	0					
ANR	5554114	ArgumentList	result_args -> argv [ 2 ]		5552936	1					
ANR	5554115	Argument	result_args -> argv [ 2 ]		5552936	0					
ANR	5554116	ArrayIndexing	result_args -> argv [ 2 ]		5552936	0					
ANR	5554117	PtrMemberAccess	result_args -> argv		5552936	0					
ANR	5554118	Identifier	result_args		5552936	0					
ANR	5554119	Identifier	argv		5552936	1					
ANR	5554120	PrimaryExpression	2		5552936	1					
ANR	5554121	Argument	( char * * ) NULL		5552936	1					
ANR	5554122	CastExpression	( char * * ) NULL		5552936	0					
ANR	5554123	CastTarget	char * *		5552936	0					
ANR	5554124	Identifier	NULL		5552936	1					
ANR	5554125	Argument	10		5552936	2					
ANR	5554126	PrimaryExpression	10		5552936	0					
ANR	5554127	IfStatement	if ( m_vm_id <= 0 )		5552936	55					
ANR	5554128	Condition	m_vm_id <= 0	412:5:11356:11367	5552936	0	True				
ANR	5554129	RelationalExpression	m_vm_id <= 0		5552936	0		<=			
ANR	5554130	Identifier	m_vm_id		5552936	0					
ANR	5554131	PrimaryExpression	0		5552936	1					
ANR	5554132	CompoundStatement		264:20:7766:7766	5552936	1					
ANR	5554133	ExpressionStatement	m_vm_id = 0	413:2:11375:11386	5552936	0	True				
ANR	5554134	AssignmentExpression	m_vm_id = 0		5552936	0		=			
ANR	5554135	Identifier	m_vm_id		5552936	0					
ANR	5554136	PrimaryExpression	0		5552936	1					
ANR	5554137	ExpressionStatement	"dprintf ( D_ALWAYS , ""Received invalid virtual machine id from vm-gahp\\n"" )"	414:2:11390:11461	5552936	1	True				
ANR	5554138	CallExpression	"dprintf ( D_ALWAYS , ""Received invalid virtual machine id from vm-gahp\\n"" )"		5552936	0					
ANR	5554139	Callee	dprintf		5552936	0					
ANR	5554140	Identifier	dprintf		5552936	0					
ANR	5554141	ArgumentList	D_ALWAYS		5552936	1					
ANR	5554142	Argument	D_ALWAYS		5552936	0					
ANR	5554143	Identifier	D_ALWAYS		5552936	0					
ANR	5554144	Argument	"""Received invalid virtual machine id from vm-gahp\\n"""		5552936	1					
ANR	5554145	PrimaryExpression	"""Received invalid virtual machine id from vm-gahp\\n"""		5552936	0					
ANR	5554146	ExpressionStatement	m_vmgahp -> printSystemErrorMsg ( )	415:2:11465:11496	5552936	2	True				
ANR	5554147	CallExpression	m_vmgahp -> printSystemErrorMsg ( )		5552936	0					
ANR	5554148	Callee	m_vmgahp -> printSystemErrorMsg		5552936	0					
ANR	5554149	PtrMemberAccess	m_vmgahp -> printSystemErrorMsg		5552936	0					
ANR	5554150	Identifier	m_vmgahp		5552936	0					
ANR	5554151	Identifier	printSystemErrorMsg		5552936	1					
ANR	5554152	ArgumentList			5552936	1					
ANR	5554153	ExpressionStatement	reportErrorToStartd ( )	417:2:11501:11522	5552936	3	True				
ANR	5554154	CallExpression	reportErrorToStartd ( )		5552936	0					
ANR	5554155	Callee	reportErrorToStartd		5552936	0					
ANR	5554156	Identifier	reportErrorToStartd		5552936	0					
ANR	5554157	ArgumentList			5552936	1					
ANR	5554158	ExpressionStatement	"Starter -> jic -> notifyStarterError ( ""VMGahp internal error"" , true , 0 , 0 )"	418:2:11526:11596	5552936	4	True				
ANR	5554159	CallExpression	"Starter -> jic -> notifyStarterError ( ""VMGahp internal error"" , true , 0 , 0 )"		5552936	0					
ANR	5554160	Callee	Starter -> jic -> notifyStarterError		5552936	0					
ANR	5554161	PtrMemberAccess	Starter -> jic -> notifyStarterError		5552936	0					
ANR	5554162	PtrMemberAccess	Starter -> jic		5552936	0					
ANR	5554163	Identifier	Starter		5552936	0					
ANR	5554164	Identifier	jic		5552936	1					
ANR	5554165	Identifier	notifyStarterError		5552936	1					
ANR	5554166	ArgumentList	"""VMGahp internal error"""		5552936	1					
ANR	5554167	Argument	"""VMGahp internal error"""		5552936	0					
ANR	5554168	PrimaryExpression	"""VMGahp internal error"""		5552936	0					
ANR	5554169	Argument	true		5552936	1					
ANR	5554170	Identifier	true		5552936	0					
ANR	5554171	Argument	0		5552936	2					
ANR	5554172	PrimaryExpression	0		5552936	0					
ANR	5554173	Argument	0		5552936	3					
ANR	5554174	PrimaryExpression	0		5552936	0					
ANR	5554175	Statement	delete	420:2:11601:11606	5552936	5	True				
ANR	5554176	ExpressionStatement	new_req	420:9:11608:11615	5552936	6	True				
ANR	5554177	Identifier	new_req		5552936	0					
ANR	5554178	Statement	delete	421:2:11619:11624	5552936	7	True				
ANR	5554179	ExpressionStatement	m_vmgahp	421:9:11626:11634	5552936	8	True				
ANR	5554180	Identifier	m_vmgahp		5552936	0					
ANR	5554181	ExpressionStatement	m_vmgahp = NULL	422:2:11638:11653	5552936	9	True				
ANR	5554182	AssignmentExpression	m_vmgahp = NULL		5552936	0		=			
ANR	5554183	Identifier	m_vmgahp		5552936	0					
ANR	5554184	Identifier	NULL		5552936	1					
ANR	5554185	ExpressionStatement	daemonCore -> Kill_Family ( JobPid )	425:2:11746:11777	5552936	10	True				
ANR	5554186	CallExpression	daemonCore -> Kill_Family ( JobPid )		5552936	0					
ANR	5554187	Callee	daemonCore -> Kill_Family		5552936	0					
ANR	5554188	PtrMemberAccess	daemonCore -> Kill_Family		5552936	0					
ANR	5554189	Identifier	daemonCore		5552936	0					
ANR	5554190	Identifier	Kill_Family		5552936	1					
ANR	5554191	ArgumentList	JobPid		5552936	1					
ANR	5554192	Argument	JobPid		5552936	0					
ANR	5554193	Identifier	JobPid		5552936	0					
ANR	5554194	ReturnStatement	return false ;	426:2:11781:11793	5552936	11	True				
ANR	5554195	Identifier	false		5552936	0					
ANR	5554196	Statement	delete	428:1:11799:11804	5552936	56	True				
ANR	5554197	ExpressionStatement	new_req	428:8:11806:11813	5552936	57	True				
ANR	5554198	Identifier	new_req		5552936	0					
ANR	5554199	ExpressionStatement	new_req = NULL	429:1:11816:11830	5552936	58	True				
ANR	5554200	AssignmentExpression	new_req = NULL		5552936	0		=			
ANR	5554201	Identifier	new_req		5552936	0					
ANR	5554202	Identifier	NULL		5552936	1					
ANR	5554203	ExpressionStatement	m_vmgahp -> setVMid ( m_vm_id )	431:1:11834:11860	5552936	59	True				
ANR	5554204	CallExpression	m_vmgahp -> setVMid ( m_vm_id )		5552936	0					
ANR	5554205	Callee	m_vmgahp -> setVMid		5552936	0					
ANR	5554206	PtrMemberAccess	m_vmgahp -> setVMid		5552936	0					
ANR	5554207	Identifier	m_vmgahp		5552936	0					
ANR	5554208	Identifier	setVMid		5552936	1					
ANR	5554209	ArgumentList	m_vm_id		5552936	1					
ANR	5554210	Argument	m_vm_id		5552936	0					
ANR	5554211	Identifier	m_vm_id		5552936	0					
ANR	5554212	ExpressionStatement	sleep ( 30 )	435:1:11966:11975	5552936	60	True				
ANR	5554213	CallExpression	sleep ( 30 )		5552936	0					
ANR	5554214	Callee	sleep		5552936	0					
ANR	5554215	Identifier	sleep		5552936	0					
ANR	5554216	ArgumentList	30		5552936	1					
ANR	5554217	Argument	30		5552936	0					
ANR	5554218	PrimaryExpression	30		5552936	0					
ANR	5554219	ExpressionStatement	m_vm_pid = 0	438:1:12025:12037	5552936	61	True				
ANR	5554220	AssignmentExpression	m_vm_pid = 0		5552936	0		=			
ANR	5554221	Identifier	m_vm_pid		5552936	0					
ANR	5554222	PrimaryExpression	0		5552936	1					
ANR	5554223	ExpressionStatement	"memset ( & m_vm_exited_pinfo , 0 , sizeof ( m_vm_exited_pinfo ) )"	439:1:12040:12096	5552936	62	True				
ANR	5554224	CallExpression	"memset ( & m_vm_exited_pinfo , 0 , sizeof ( m_vm_exited_pinfo ) )"		5552936	0					
ANR	5554225	Callee	memset		5552936	0					
ANR	5554226	Identifier	memset		5552936	0					
ANR	5554227	ArgumentList	& m_vm_exited_pinfo		5552936	1					
ANR	5554228	Argument	& m_vm_exited_pinfo		5552936	0					
ANR	5554229	UnaryOperationExpression	& m_vm_exited_pinfo		5552936	0					
ANR	5554230	UnaryOperator	&		5552936	0					
ANR	5554231	Identifier	m_vm_exited_pinfo		5552936	1					
ANR	5554232	Argument	0		5552936	1					
ANR	5554233	PrimaryExpression	0		5552936	0					
ANR	5554234	Argument	sizeof ( m_vm_exited_pinfo )		5552936	2					
ANR	5554235	SizeofExpression	sizeof ( m_vm_exited_pinfo )		5552936	0					
ANR	5554236	Sizeof	sizeof		5552936	0					
ANR	5554237	SizeofOperand	m_vm_exited_pinfo		5552936	1					
ANR	5554238	ExpressionStatement	"memset ( & m_vm_alive_pinfo , 0 , sizeof ( m_vm_alive_pinfo ) )"	440:1:12099:12153	5552936	63	True				
ANR	5554239	CallExpression	"memset ( & m_vm_alive_pinfo , 0 , sizeof ( m_vm_alive_pinfo ) )"		5552936	0					
ANR	5554240	Callee	memset		5552936	0					
ANR	5554241	Identifier	memset		5552936	0					
ANR	5554242	ArgumentList	& m_vm_alive_pinfo		5552936	1					
ANR	5554243	Argument	& m_vm_alive_pinfo		5552936	0					
ANR	5554244	UnaryOperationExpression	& m_vm_alive_pinfo		5552936	0					
ANR	5554245	UnaryOperator	&		5552936	0					
ANR	5554246	Identifier	m_vm_alive_pinfo		5552936	1					
ANR	5554247	Argument	0		5552936	1					
ANR	5554248	PrimaryExpression	0		5552936	0					
ANR	5554249	Argument	sizeof ( m_vm_alive_pinfo )		5552936	2					
ANR	5554250	SizeofExpression	sizeof ( m_vm_alive_pinfo )		5552936	0					
ANR	5554251	Sizeof	sizeof		5552936	0					
ANR	5554252	SizeofOperand	m_vm_alive_pinfo		5552936	1					
ANR	5554253	IdentifierDeclStatement	int vm_pid = PIDofVM ( ) ;	453:1:12821:12843	5552936	64	True				
ANR	5554254	IdentifierDecl	vm_pid = PIDofVM ( )		5552936	0					
ANR	5554255	IdentifierDeclType	int		5552936	0					
ANR	5554256	Identifier	vm_pid		5552936	1					
ANR	5554257	AssignmentExpression	vm_pid = PIDofVM ( )		5552936	2		=			
ANR	5554258	Identifier	vm_pid		5552936	0					
ANR	5554259	CallExpression	PIDofVM ( )		5552936	1					
ANR	5554260	Callee	PIDofVM		5552936	0					
ANR	5554261	Identifier	PIDofVM		5552936	0					
ANR	5554262	ArgumentList			5552936	1					
ANR	5554263	ExpressionStatement	setVMPID ( vm_pid )	454:1:12846:12862	5552936	65	True				
ANR	5554264	CallExpression	setVMPID ( vm_pid )		5552936	0					
ANR	5554265	Callee	setVMPID		5552936	0					
ANR	5554266	Identifier	setVMPID		5552936	0					
ANR	5554267	ArgumentList	vm_pid		5552936	1					
ANR	5554268	Argument	vm_pid		5552936	0					
ANR	5554269	Identifier	vm_pid		5552936	0					
ANR	5554270	ExpressionStatement	"m_vmstatus_tid = daemonCore -> Register_Timer ( m_vmstatus_interval , m_vmstatus_interval , ( TimerHandlercpp ) & VMProc :: CheckStatus , ""VMProc::CheckStatus"" , this )"	456:1:12866:13031	5552936	66	True				
ANR	5554271	AssignmentExpression	"m_vmstatus_tid = daemonCore -> Register_Timer ( m_vmstatus_interval , m_vmstatus_interval , ( TimerHandlercpp ) & VMProc :: CheckStatus , ""VMProc::CheckStatus"" , this )"		5552936	0		=			
ANR	5554272	Identifier	m_vmstatus_tid		5552936	0					
ANR	5554273	CallExpression	"daemonCore -> Register_Timer ( m_vmstatus_interval , m_vmstatus_interval , ( TimerHandlercpp ) & VMProc :: CheckStatus , ""VMProc::CheckStatus"" , this )"		5552936	1					
ANR	5554274	Callee	daemonCore -> Register_Timer		5552936	0					
ANR	5554275	PtrMemberAccess	daemonCore -> Register_Timer		5552936	0					
ANR	5554276	Identifier	daemonCore		5552936	0					
ANR	5554277	Identifier	Register_Timer		5552936	1					
ANR	5554278	ArgumentList	m_vmstatus_interval		5552936	1					
ANR	5554279	Argument	m_vmstatus_interval		5552936	0					
ANR	5554280	Identifier	m_vmstatus_interval		5552936	0					
ANR	5554281	Argument	m_vmstatus_interval		5552936	1					
ANR	5554282	Identifier	m_vmstatus_interval		5552936	0					
ANR	5554283	Argument	( TimerHandlercpp ) & VMProc :: CheckStatus		5552936	2					
ANR	5554284	CastExpression	( TimerHandlercpp ) & VMProc :: CheckStatus		5552936	0					
ANR	5554285	CastTarget	TimerHandlercpp		5552936	0					
ANR	5554286	UnaryOperationExpression	& VMProc :: CheckStatus		5552936	1					
ANR	5554287	UnaryOperator	&		5552936	0					
ANR	5554288	Identifier	VMProc :: CheckStatus		5552936	1					
ANR	5554289	Argument	"""VMProc::CheckStatus"""		5552936	3					
ANR	5554290	PrimaryExpression	"""VMProc::CheckStatus"""		5552936	0					
ANR	5554291	Argument	this		5552936	4					
ANR	5554292	Identifier	this		5552936	0					
ANR	5554293	ExpressionStatement	job_start_time . getTime ( )	462:1:13073:13097	5552936	67	True				
ANR	5554294	CallExpression	job_start_time . getTime ( )		5552936	0					
ANR	5554295	Callee	job_start_time . getTime		5552936	0					
ANR	5554296	MemberAccess	job_start_time . getTime		5552936	0					
ANR	5554297	Identifier	job_start_time		5552936	0					
ANR	5554298	Identifier	getTime		5552936	1					
ANR	5554299	ArgumentList			5552936	1					
ANR	5554300	ExpressionStatement	"dprintf ( D_ALWAYS , ""StartJob for VM succeeded\\n"" )"	463:1:13100:13149	5552936	68	True				
ANR	5554301	CallExpression	"dprintf ( D_ALWAYS , ""StartJob for VM succeeded\\n"" )"		5552936	0					
ANR	5554302	Callee	dprintf		5552936	0					
ANR	5554303	Identifier	dprintf		5552936	0					
ANR	5554304	ArgumentList	D_ALWAYS		5552936	1					
ANR	5554305	Argument	D_ALWAYS		5552936	0					
ANR	5554306	Identifier	D_ALWAYS		5552936	0					
ANR	5554307	Argument	"""StartJob for VM succeeded\\n"""		5552936	1					
ANR	5554308	PrimaryExpression	"""StartJob for VM succeeded\\n"""		5552936	0					
ANR	5554309	ReturnStatement	return true ;	464:1:13152:13163	5552936	69	True				
ANR	5554310	Identifier	true		5552936	0					
ANR	5554311	ReturnType	int		5552936	1					
ANR	5554312	Identifier	VMProc :: StartJob		5552936	2					
ANR	5554313	ParameterList			5552936	3					
ANR	5554314	CFGEntryNode	ENTRY		5552936		True				
ANR	5554315	CFGExitNode	EXIT		5552936		True				
ANR	5554316	Symbol	m_vm_mac		5552936						
ANR	5554317	Symbol	fi . login		5552936						
ANR	5554318	Symbol	num_pids		5552936						
ANR	5554319	Symbol	X_OK		5552936						
ANR	5554320	Symbol	m_vmgahp_server		5552936						
ANR	5554321	Symbol	& m_vm_exited_pinfo		5552936						
ANR	5554322	Symbol	VMGAHP_REQ_COMMAND_DONE		5552936						
ANR	5554323	Symbol	CONDOR_VM_UNIVERSE_KVM		5552936						
ANR	5554324	Symbol	ATTR_JOB_VM_CHECKPOINT		5552936						
ANR	5554325	Symbol	m_vm_checkpoint		5552936						
ANR	5554326	Symbol	ATTR_JOB_VM_TYPE		5552936						
ANR	5554327	Symbol	JobAd -> EvalInteger		5552936						
ANR	5554328	Symbol	VMGahpRequest :: BLOCKING		5552936						
ANR	5554329	Symbol	JobAd -> Insert		5552936						
ANR	5554330	Symbol	nice_inc		5552936						
ANR	5554331	Symbol	vmgahpfile		5552936						
ANR	5554332	Symbol	* * result_args		5552936						
ANR	5554333	Symbol	* * Starter		5552936						
ANR	5554334	Symbol	* daemonCore		5552936						
ANR	5554335	Symbol	daemonCore -> Register_Timer		5552936						
ANR	5554336	Symbol	param_integer		5552936						
ANR	5554337	Symbol	job_env		5552936						
ANR	5554338	Symbol	m_job_name		5552936						
ANR	5554339	Symbol	m_vmgahp -> start_err_msg . Length		5552936						
ANR	5554340	Symbol	JobPid		5552936						
ANR	5554341	Symbol	access		5552936						
ANR	5554342	Symbol	reniceAttr . Value		5552936						
ANR	5554343	Symbol	fi . max_snapshot_interval		5552936						
ANR	5554344	Symbol	result_args		5552936						
ANR	5554345	Symbol	Starter		5552936						
ANR	5554346	Symbol	& env_errors		5552936						
ANR	5554347	Symbol	new_req -> vmStart		5552936						
ANR	5554348	Symbol	new_req -> checkResult		5552936						
ANR	5554349	Symbol	strtol		5552936						
ANR	5554350	Symbol	m_vmstatus_tid		5552936						
ANR	5554351	Symbol	daemonCore		5552936						
ANR	5554352	Symbol	m_vmgahp -> getVMGahpServerPid		5552936						
ANR	5554353	Symbol	& m_vm_alive_pinfo		5552936						
ANR	5554354	Symbol	& VMProc :: CheckStatus		5552936						
ANR	5554355	Symbol	* result_args		5552936						
ANR	5554356	Symbol	result_args -> argv		5552936						
ANR	5554357	Symbol	Starter -> GetWorkingDir		5552936						
ANR	5554358	Symbol	err_msg		5552936						
ANR	5554359	Symbol	m_vmgahp		5552936						
ANR	5554360	Symbol	new_req		5552936						
ANR	5554361	Symbol	m_vm_id		5552936						
ANR	5554362	Symbol	m_vmgahp_server . Value		5552936						
ANR	5554363	Symbol	vm_pid		5552936						
ANR	5554364	Symbol	env_errors		5552936						
ANR	5554365	Symbol	job_start_time		5552936						
ANR	5554366	Symbol	* JobAd		5552936						
ANR	5554367	Symbol	p_result		5552936						
ANR	5554368	Symbol	ptmp		5552936						
ANR	5554369	Symbol	dedicated_account		5552936						
ANR	5554370	Symbol	* m_vmgahp		5552936						
ANR	5554371	Symbol	& recovery_ad		5552936						
ANR	5554372	Symbol	vm_job_name		5552936						
ANR	5554373	Symbol	strcasecmp		5552936						
ANR	5554374	Symbol	vm_type_name		5552936						
ANR	5554375	Symbol	vm_name		5552936						
ANR	5554376	Symbol	strcmp		5552936						
ANR	5554377	Symbol	Starter -> jic -> getExecuteAccountIsDedicated		5552936						
ANR	5554378	Symbol	ATTR_VM_CKPT_MAC		5552936						
ANR	5554379	Symbol	NULL		5552936						
ANR	5554380	Symbol	reniceAttr		5552936						
ANR	5554381	Symbol	string_value		5552936						
ANR	5554382	Symbol	this		5552936						
ANR	5554383	Symbol	vm_name . Value		5552936						
ANR	5554384	Symbol	D_FULLDEBUG		5552936						
ANR	5554385	Symbol	* result_args -> argv		5552936						
ANR	5554386	Symbol	m_vm_type		5552936						
ANR	5554387	Symbol	true		5552936						
ANR	5554388	Symbol	m_vmstatus_interval		5552936						
ANR	5554389	Symbol	m_vmgahp -> startUp		5552936						
ANR	5554390	Symbol	m_vmgahp -> start_err_msg		5552936						
ANR	5554391	Symbol	VMGAHP_ERR_INTERNAL		5552936						
ANR	5554392	Symbol	fi		5552936						
ANR	5554393	Symbol	JobAd -> LookupString		5552936						
ANR	5554394	Symbol	m_vm_type . Value		5552936						
ANR	5554395	Symbol	VMGAHP_ERR_CRITICAL		5552936						
ANR	5554396	Symbol	CONDOR_HOLD_CODE_FailedToCreateProcess		5552936						
ANR	5554397	Symbol	m_vm_pid		5552936						
ANR	5554398	Symbol	ATTR_JOB_CMD		5552936						
ANR	5554399	Symbol	PIDofVM		5552936						
ANR	5554400	Symbol	param		5552936						
ANR	5554401	Symbol	CONDOR_VM_UNIVERSE_XEN		5552936						
ANR	5554402	Symbol	Starter -> jic		5552936						
ANR	5554403	Symbol	create_name_for_VM		5552936						
ANR	5554404	Symbol	job_env . MergeFromV1RawOrV2Quoted		5552936						
ANR	5554405	Symbol	JobAd		5552936						
ANR	5554406	Symbol	D_ALWAYS		5552936						
ANR	5554407	Symbol	false		5552936						
ANR	5554408	Symbol	env_str		5552936						
ANR	5554409	Symbol	* new_req		5552936						
ANR	5554410	Symbol	& fi		5552936						
ANR	5554411	Symbol	& job_env		5552936						
ANR	5554412	Symbol	err_msg . Value		5552936						
ANR	5554413	Symbol	recovery_ad		5552936						
ANR	5554414	Symbol	m_vmoperation_timeout		5552936						
ANR	5554415	Symbol	* Starter		5552936						
ANR	5554416	Symbol	new_req -> getResult		5552936						
ANR	5554417	Symbol	* Starter -> jic		5552936						
ANR	5554418	Symbol	MATCH		5552936						
ANR	5554419	Function	VMProc :: process_vm_status_result	467:0:13168:16565							
ANR	5554420	FunctionDef	VMProc :: process_vm_status_result (Gahp_Args * result_args)		5554419	0					
ANR	5554421	CompoundStatement		469:0:13231:16565	5554419	0					
ANR	5554422	IfStatement	if ( ! result_args || ( result_args -> argc < 3 ) )		5554419	0					
ANR	5554423	Condition	! result_args || ( result_args -> argc < 3 )	474:5:13354:13393	5554419	0	True				
ANR	5554424	OrExpression	! result_args || ( result_args -> argc < 3 )		5554419	0		||			
ANR	5554425	UnaryOperationExpression	! result_args		5554419	0					
ANR	5554426	UnaryOperator	!		5554419	0					
ANR	5554427	Identifier	result_args		5554419	1					
ANR	5554428	RelationalExpression	result_args -> argc < 3		5554419	1		<			
ANR	5554429	PtrMemberAccess	result_args -> argc		5554419	0					
ANR	5554430	Identifier	result_args		5554419	0					
ANR	5554431	Identifier	argc		5554419	1					
ANR	5554432	PrimaryExpression	3		5554419	1					
ANR	5554433	CompoundStatement		6:48:165:165	5554419	1					
ANR	5554434	ExpressionStatement	"dprintf ( D_ALWAYS , ""Bad Result for VM status\\n"" )"	475:2:13401:13448	5554419	0	True				
ANR	5554435	CallExpression	"dprintf ( D_ALWAYS , ""Bad Result for VM status\\n"" )"		5554419	0					
ANR	5554436	Callee	dprintf		5554419	0					
ANR	5554437	Identifier	dprintf		5554419	0					
ANR	5554438	ArgumentList	D_ALWAYS		5554419	1					
ANR	5554439	Argument	D_ALWAYS		5554419	0					
ANR	5554440	Identifier	D_ALWAYS		5554419	0					
ANR	5554441	Argument	"""Bad Result for VM status\\n"""		5554419	1					
ANR	5554442	PrimaryExpression	"""Bad Result for VM status\\n"""		5554419	0					
ANR	5554443	ExpressionStatement	vm_status_error ( )	476:2:13452:13469	5554419	1	True				
ANR	5554444	CallExpression	vm_status_error ( )		5554419	0					
ANR	5554445	Callee	vm_status_error		5554419	0					
ANR	5554446	Identifier	vm_status_error		5554419	0					
ANR	5554447	ArgumentList			5554419	1					
ANR	5554448	ReturnStatement	return true ;	477:2:13473:13484	5554419	2	True				
ANR	5554449	Identifier	true		5554419	0					
ANR	5554450	IdentifierDeclStatement	"int tmp_argv = ( int ) strtol ( result_args -> argv [ 1 ] , ( char * * ) NULL , 10 ) ;"	480:1:13491:13558	5554419	1	True				
ANR	5554451	IdentifierDecl	"tmp_argv = ( int ) strtol ( result_args -> argv [ 1 ] , ( char * * ) NULL , 10 )"		5554419	0					
ANR	5554452	IdentifierDeclType	int		5554419	0					
ANR	5554453	Identifier	tmp_argv		5554419	1					
ANR	5554454	AssignmentExpression	"tmp_argv = ( int ) strtol ( result_args -> argv [ 1 ] , ( char * * ) NULL , 10 )"		5554419	2		=			
ANR	5554455	Identifier	tmp_argv		5554419	0					
ANR	5554456	CastExpression	"( int ) strtol ( result_args -> argv [ 1 ] , ( char * * ) NULL , 10 )"		5554419	1					
ANR	5554457	CastTarget	int		5554419	0					
ANR	5554458	CallExpression	"strtol ( result_args -> argv [ 1 ] , ( char * * ) NULL , 10 )"		5554419	1					
ANR	5554459	Callee	strtol		5554419	0					
ANR	5554460	Identifier	strtol		5554419	0					
ANR	5554461	ArgumentList	result_args -> argv [ 1 ]		5554419	1					
ANR	5554462	Argument	result_args -> argv [ 1 ]		5554419	0					
ANR	5554463	ArrayIndexing	result_args -> argv [ 1 ]		5554419	0					
ANR	5554464	PtrMemberAccess	result_args -> argv		5554419	0					
ANR	5554465	Identifier	result_args		5554419	0					
ANR	5554466	Identifier	argv		5554419	1					
ANR	5554467	PrimaryExpression	1		5554419	1					
ANR	5554468	Argument	( char * * ) NULL		5554419	1					
ANR	5554469	CastExpression	( char * * ) NULL		5554419	0					
ANR	5554470	CastTarget	char * *		5554419	0					
ANR	5554471	Identifier	NULL		5554419	1					
ANR	5554472	Argument	10		5554419	2					
ANR	5554473	PrimaryExpression	10		5554419	0					
ANR	5554474	IfStatement	"if ( tmp_argv != 0 || ! strcasecmp ( result_args -> argv [ 2 ] , NULLSTRING ) )"		5554419	2					
ANR	5554475	Condition	"tmp_argv != 0 || ! strcasecmp ( result_args -> argv [ 2 ] , NULLSTRING )"	481:5:13565:13630	5554419	0	True				
ANR	5554476	OrExpression	"tmp_argv != 0 || ! strcasecmp ( result_args -> argv [ 2 ] , NULLSTRING )"		5554419	0		||			
ANR	5554477	EqualityExpression	tmp_argv != 0		5554419	0		!=			
ANR	5554478	Identifier	tmp_argv		5554419	0					
ANR	5554479	PrimaryExpression	0		5554419	1					
ANR	5554480	UnaryOperationExpression	"! strcasecmp ( result_args -> argv [ 2 ] , NULLSTRING )"		5554419	1					
ANR	5554481	UnaryOperator	!		5554419	0					
ANR	5554482	CallExpression	"strcasecmp ( result_args -> argv [ 2 ] , NULLSTRING )"		5554419	1					
ANR	5554483	Callee	strcasecmp		5554419	0					
ANR	5554484	Identifier	strcasecmp		5554419	0					
ANR	5554485	ArgumentList	result_args -> argv [ 2 ]		5554419	1					
ANR	5554486	Argument	result_args -> argv [ 2 ]		5554419	0					
ANR	5554487	ArrayIndexing	result_args -> argv [ 2 ]		5554419	0					
ANR	5554488	PtrMemberAccess	result_args -> argv		5554419	0					
ANR	5554489	Identifier	result_args		5554419	0					
ANR	5554490	Identifier	argv		5554419	1					
ANR	5554491	PrimaryExpression	2		5554419	1					
ANR	5554492	Argument	NULLSTRING		5554419	1					
ANR	5554493	Identifier	NULLSTRING		5554419	0					
ANR	5554494	CompoundStatement		14:50:401:401	5554419	1					
ANR	5554495	ExpressionStatement	"dprintf ( D_ALWAYS , ""Received VM status, result(%s,%s)\\n"" , result_args -> argv [ 1 ] , result_args -> argv [ 2 ] )"	483:2:13637:13742	5554419	0	True				
ANR	5554496	CallExpression	"dprintf ( D_ALWAYS , ""Received VM status, result(%s,%s)\\n"" , result_args -> argv [ 1 ] , result_args -> argv [ 2 ] )"		5554419	0					
ANR	5554497	Callee	dprintf		5554419	0					
ANR	5554498	Identifier	dprintf		5554419	0					
ANR	5554499	ArgumentList	D_ALWAYS		5554419	1					
ANR	5554500	Argument	D_ALWAYS		5554419	0					
ANR	5554501	Identifier	D_ALWAYS		5554419	0					
ANR	5554502	Argument	"""Received VM status, result(%s,%s)\\n"""		5554419	1					
ANR	5554503	PrimaryExpression	"""Received VM status, result(%s,%s)\\n"""		5554419	0					
ANR	5554504	Argument	result_args -> argv [ 1 ]		5554419	2					
ANR	5554505	ArrayIndexing	result_args -> argv [ 1 ]		5554419	0					
ANR	5554506	PtrMemberAccess	result_args -> argv		5554419	0					
ANR	5554507	Identifier	result_args		5554419	0					
ANR	5554508	Identifier	argv		5554419	1					
ANR	5554509	PrimaryExpression	1		5554419	1					
ANR	5554510	Argument	result_args -> argv [ 2 ]		5554419	3					
ANR	5554511	ArrayIndexing	result_args -> argv [ 2 ]		5554419	0					
ANR	5554512	PtrMemberAccess	result_args -> argv		5554419	0					
ANR	5554513	Identifier	result_args		5554419	0					
ANR	5554514	Identifier	argv		5554419	1					
ANR	5554515	PrimaryExpression	2		5554419	1					
ANR	5554516	ExpressionStatement	vm_status_error ( )	485:2:13746:13763	5554419	1	True				
ANR	5554517	CallExpression	vm_status_error ( )		5554419	0					
ANR	5554518	Callee	vm_status_error		5554419	0					
ANR	5554519	Identifier	vm_status_error		5554419	0					
ANR	5554520	ArgumentList			5554419	1					
ANR	5554521	ReturnStatement	return true ;	486:2:13767:13778	5554419	2	True				
ANR	5554522	Identifier	true		5554419	0					
ANR	5554523	IdentifierDeclStatement	MyString vm_status ;	490:1:13816:13834	5554419	3	True				
ANR	5554524	IdentifierDecl	vm_status		5554419	0					
ANR	5554525	IdentifierDeclType	MyString		5554419	0					
ANR	5554526	Identifier	vm_status		5554419	1					
ANR	5554527	IdentifierDeclStatement	float cpu_time = 0 ;	491:1:13837:13855	5554419	4	True				
ANR	5554528	IdentifierDecl	cpu_time = 0		5554419	0					
ANR	5554529	IdentifierDeclType	float		5554419	0					
ANR	5554530	Identifier	cpu_time		5554419	1					
ANR	5554531	AssignmentExpression	cpu_time = 0		5554419	2		=			
ANR	5554532	Identifier	cpu_time		5554419	0					
ANR	5554533	PrimaryExpression	0		5554419	1					
ANR	5554534	IdentifierDeclStatement	int vm_pid = 0 ;	492:1:13858:13872	5554419	5	True				
ANR	5554535	IdentifierDecl	vm_pid = 0		5554419	0					
ANR	5554536	IdentifierDeclType	int		5554419	0					
ANR	5554537	Identifier	vm_pid		5554419	1					
ANR	5554538	AssignmentExpression	vm_pid = 0		5554419	2		=			
ANR	5554539	Identifier	vm_pid		5554419	0					
ANR	5554540	PrimaryExpression	0		5554419	1					
ANR	5554541	IdentifierDeclStatement	MyString vm_ip ;	493:1:13875:13889	5554419	6	True				
ANR	5554542	IdentifierDecl	vm_ip		5554419	0					
ANR	5554543	IdentifierDeclType	MyString		5554419	0					
ANR	5554544	Identifier	vm_ip		5554419	1					
ANR	5554545	IdentifierDeclStatement	MyString vm_mac ;	494:1:13892:13907	5554419	7	True				
ANR	5554546	IdentifierDecl	vm_mac		5554419	0					
ANR	5554547	IdentifierDeclType	MyString		5554419	0					
ANR	5554548	Identifier	vm_mac		5554419	1					
ANR	5554549	IdentifierDeclStatement	MyString tmp_name ;	496:1:13911:13928	5554419	8	True				
ANR	5554550	IdentifierDecl	tmp_name		5554419	0					
ANR	5554551	IdentifierDeclType	MyString		5554419	0					
ANR	5554552	Identifier	tmp_name		5554419	1					
ANR	5554553	IdentifierDeclStatement	MyString tmp_value ;	497:1:13931:13949	5554419	9	True				
ANR	5554554	IdentifierDecl	tmp_value		5554419	0					
ANR	5554555	IdentifierDeclType	MyString		5554419	0					
ANR	5554556	Identifier	tmp_value		5554419	1					
ANR	5554557	IdentifierDeclStatement	MyString one_arg ;	498:1:13952:13968	5554419	10	True				
ANR	5554558	IdentifierDecl	one_arg		5554419	0					
ANR	5554559	IdentifierDeclType	MyString		5554419	0					
ANR	5554560	Identifier	one_arg		5554419	1					
ANR	5554561	IdentifierDeclStatement	int i = 2 ;	499:1:13971:13980	5554419	11	True				
ANR	5554562	IdentifierDecl	i = 2		5554419	0					
ANR	5554563	IdentifierDeclType	int		5554419	0					
ANR	5554564	Identifier	i		5554419	1					
ANR	5554565	AssignmentExpression	i = 2		5554419	2		=			
ANR	5554566	Identifier	i		5554419	0					
ANR	5554567	PrimaryExpression	2		5554419	1					
ANR	5554568	ForStatement	for ( ; i < result_args -> argc ; i ++ )		5554419	12					
ANR	5554569	Condition	i < result_args -> argc	500:8:13990:14010	5554419	0	True				
ANR	5554570	RelationalExpression	i < result_args -> argc		5554419	0		<			
ANR	5554571	Identifier	i		5554419	0					
ANR	5554572	PtrMemberAccess	result_args -> argc		5554419	1					
ANR	5554573	Identifier	result_args		5554419	0					
ANR	5554574	Identifier	argc		5554419	1					
ANR	5554575	PostIncDecOperationExpression	i ++	500:31:14013:14015	5554419	1	True				
ANR	5554576	Identifier	i		5554419	0					
ANR	5554577	IncDec	++		5554419	1					
ANR	5554578	CompoundStatement		32:37:787:787	5554419	2					
ANR	5554579	ExpressionStatement	one_arg = result_args -> argv [ i ]	501:2:14023:14053	5554419	0	True				
ANR	5554580	AssignmentExpression	one_arg = result_args -> argv [ i ]		5554419	0		=			
ANR	5554581	Identifier	one_arg		5554419	0					
ANR	5554582	ArrayIndexing	result_args -> argv [ i ]		5554419	1					
ANR	5554583	PtrMemberAccess	result_args -> argv		5554419	0					
ANR	5554584	Identifier	result_args		5554419	0					
ANR	5554585	Identifier	argv		5554419	1					
ANR	5554586	Identifier	i		5554419	1					
ANR	5554587	ExpressionStatement	one_arg . trim ( )	502:2:14057:14071	5554419	1	True				
ANR	5554588	CallExpression	one_arg . trim ( )		5554419	0					
ANR	5554589	Callee	one_arg . trim		5554419	0					
ANR	5554590	MemberAccess	one_arg . trim		5554419	0					
ANR	5554591	Identifier	one_arg		5554419	0					
ANR	5554592	Identifier	trim		5554419	1					
ANR	5554593	ArgumentList			5554419	1					
ANR	5554594	IfStatement	if ( one_arg . IsEmpty ( ) )		5554419	2					
ANR	5554595	Condition	one_arg . IsEmpty ( )	504:5:14079:14095	5554419	0	True				
ANR	5554596	CallExpression	one_arg . IsEmpty ( )		5554419	0					
ANR	5554597	Callee	one_arg . IsEmpty		5554419	0					
ANR	5554598	MemberAccess	one_arg . IsEmpty		5554419	0					
ANR	5554599	Identifier	one_arg		5554419	0					
ANR	5554600	Identifier	IsEmpty		5554419	1					
ANR	5554601	ArgumentList			5554419	1					
ANR	5554602	CompoundStatement		36:24:866:866	5554419	1					
ANR	5554603	ContinueStatement	continue ;	505:3:14103:14111	5554419	0	True				
ANR	5554604	ExpressionStatement	"parse_param_string ( one_arg . Value ( ) , tmp_name , tmp_value , true )"	508:2:14120:14182	5554419	3	True				
ANR	5554605	CallExpression	"parse_param_string ( one_arg . Value ( ) , tmp_name , tmp_value , true )"		5554419	0					
ANR	5554606	Callee	parse_param_string		5554419	0					
ANR	5554607	Identifier	parse_param_string		5554419	0					
ANR	5554608	ArgumentList	one_arg . Value ( )		5554419	1					
ANR	5554609	Argument	one_arg . Value ( )		5554419	0					
ANR	5554610	CallExpression	one_arg . Value ( )		5554419	0					
ANR	5554611	Callee	one_arg . Value		5554419	0					
ANR	5554612	MemberAccess	one_arg . Value		5554419	0					
ANR	5554613	Identifier	one_arg		5554419	0					
ANR	5554614	Identifier	Value		5554419	1					
ANR	5554615	ArgumentList			5554419	1					
ANR	5554616	Argument	tmp_name		5554419	1					
ANR	5554617	Identifier	tmp_name		5554419	0					
ANR	5554618	Argument	tmp_value		5554419	2					
ANR	5554619	Identifier	tmp_value		5554419	0					
ANR	5554620	Argument	true		5554419	3					
ANR	5554621	Identifier	true		5554419	0					
ANR	5554622	IfStatement	if ( tmp_name . IsEmpty ( ) || tmp_value . IsEmpty ( ) )		5554419	4					
ANR	5554623	Condition	tmp_name . IsEmpty ( ) || tmp_value . IsEmpty ( )	509:6:14190:14230	5554419	0	True				
ANR	5554624	OrExpression	tmp_name . IsEmpty ( ) || tmp_value . IsEmpty ( )		5554419	0		||			
ANR	5554625	CallExpression	tmp_name . IsEmpty ( )		5554419	0					
ANR	5554626	Callee	tmp_name . IsEmpty		5554419	0					
ANR	5554627	MemberAccess	tmp_name . IsEmpty		5554419	0					
ANR	5554628	Identifier	tmp_name		5554419	0					
ANR	5554629	Identifier	IsEmpty		5554419	1					
ANR	5554630	ArgumentList			5554419	1					
ANR	5554631	CallExpression	tmp_value . IsEmpty ( )		5554419	1					
ANR	5554632	Callee	tmp_value . IsEmpty		5554419	0					
ANR	5554633	MemberAccess	tmp_value . IsEmpty		5554419	0					
ANR	5554634	Identifier	tmp_value		5554419	0					
ANR	5554635	Identifier	IsEmpty		5554419	1					
ANR	5554636	ArgumentList			5554419	1					
ANR	5554637	CompoundStatement		41:50:1002:1002	5554419	1					
ANR	5554638	ContinueStatement	continue ;	510:3:14239:14247	5554419	0	True				
ANR	5554639	IfStatement	"if ( ! strcasecmp ( tmp_name . Value ( ) , VMGAHP_STATUS_COMMAND_STATUS ) )"		5554419	5					
ANR	5554640	Condition	"! strcasecmp ( tmp_name . Value ( ) , VMGAHP_STATUS_COMMAND_STATUS )"	513:5:14259:14317	5554419	0	True				
ANR	5554641	UnaryOperationExpression	"! strcasecmp ( tmp_name . Value ( ) , VMGAHP_STATUS_COMMAND_STATUS )"		5554419	0					
ANR	5554642	UnaryOperator	!		5554419	0					
ANR	5554643	CallExpression	"strcasecmp ( tmp_name . Value ( ) , VMGAHP_STATUS_COMMAND_STATUS )"		5554419	1					
ANR	5554644	Callee	strcasecmp		5554419	0					
ANR	5554645	Identifier	strcasecmp		5554419	0					
ANR	5554646	ArgumentList	tmp_name . Value ( )		5554419	1					
ANR	5554647	Argument	tmp_name . Value ( )		5554419	0					
ANR	5554648	CallExpression	tmp_name . Value ( )		5554419	0					
ANR	5554649	Callee	tmp_name . Value		5554419	0					
ANR	5554650	MemberAccess	tmp_name . Value		5554419	0					
ANR	5554651	Identifier	tmp_name		5554419	0					
ANR	5554652	Identifier	Value		5554419	1					
ANR	5554653	ArgumentList			5554419	1					
ANR	5554654	Argument	VMGAHP_STATUS_COMMAND_STATUS		5554419	1					
ANR	5554655	Identifier	VMGAHP_STATUS_COMMAND_STATUS		5554419	0					
ANR	5554656	CompoundStatement		45:66:1088:1088	5554419	1					
ANR	5554657	ExpressionStatement	vm_status = tmp_value	514:3:14325:14346	5554419	0	True				
ANR	5554658	AssignmentExpression	vm_status = tmp_value		5554419	0		=			
ANR	5554659	Identifier	vm_status		5554419	0					
ANR	5554660	Identifier	tmp_value		5554419	1					
ANR	5554661	ElseStatement	else		5554419	0					
ANR	5554662	IfStatement	"if ( ! strcasecmp ( tmp_name . Value ( ) , VMGAHP_STATUS_COMMAND_CPUTIME ) )"		5554419	0					
ANR	5554663	Condition	"! strcasecmp ( tmp_name . Value ( ) , VMGAHP_STATUS_COMMAND_CPUTIME )"	515:12:14360:14419	5554419	0	True				
ANR	5554664	UnaryOperationExpression	"! strcasecmp ( tmp_name . Value ( ) , VMGAHP_STATUS_COMMAND_CPUTIME )"		5554419	0					
ANR	5554665	UnaryOperator	!		5554419	0					
ANR	5554666	CallExpression	"strcasecmp ( tmp_name . Value ( ) , VMGAHP_STATUS_COMMAND_CPUTIME )"		5554419	1					
ANR	5554667	Callee	strcasecmp		5554419	0					
ANR	5554668	Identifier	strcasecmp		5554419	0					
ANR	5554669	ArgumentList	tmp_name . Value ( )		5554419	1					
ANR	5554670	Argument	tmp_name . Value ( )		5554419	0					
ANR	5554671	CallExpression	tmp_name . Value ( )		5554419	0					
ANR	5554672	Callee	tmp_name . Value		5554419	0					
ANR	5554673	MemberAccess	tmp_name . Value		5554419	0					
ANR	5554674	Identifier	tmp_name		5554419	0					
ANR	5554675	Identifier	Value		5554419	1					
ANR	5554676	ArgumentList			5554419	1					
ANR	5554677	Argument	VMGAHP_STATUS_COMMAND_CPUTIME		5554419	1					
ANR	5554678	Identifier	VMGAHP_STATUS_COMMAND_CPUTIME		5554419	0					
ANR	5554679	CompoundStatement		47:75:1191:1191	5554419	1					
ANR	5554680	ExpressionStatement	"cpu_time = ( float ) strtod ( tmp_value . Value ( ) , ( char * * ) NULL )"	516:3:14428:14486	5554419	0	True				
ANR	5554681	AssignmentExpression	"cpu_time = ( float ) strtod ( tmp_value . Value ( ) , ( char * * ) NULL )"		5554419	0		=			
ANR	5554682	Identifier	cpu_time		5554419	0					
ANR	5554683	CastExpression	"( float ) strtod ( tmp_value . Value ( ) , ( char * * ) NULL )"		5554419	1					
ANR	5554684	CastTarget	float		5554419	0					
ANR	5554685	CallExpression	"strtod ( tmp_value . Value ( ) , ( char * * ) NULL )"		5554419	1					
ANR	5554686	Callee	strtod		5554419	0					
ANR	5554687	Identifier	strtod		5554419	0					
ANR	5554688	ArgumentList	tmp_value . Value ( )		5554419	1					
ANR	5554689	Argument	tmp_value . Value ( )		5554419	0					
ANR	5554690	CallExpression	tmp_value . Value ( )		5554419	0					
ANR	5554691	Callee	tmp_value . Value		5554419	0					
ANR	5554692	MemberAccess	tmp_value . Value		5554419	0					
ANR	5554693	Identifier	tmp_value		5554419	0					
ANR	5554694	Identifier	Value		5554419	1					
ANR	5554695	ArgumentList			5554419	1					
ANR	5554696	Argument	( char * * ) NULL		5554419	1					
ANR	5554697	CastExpression	( char * * ) NULL		5554419	0					
ANR	5554698	CastTarget	char * *		5554419	0					
ANR	5554699	Identifier	NULL		5554419	1					
ANR	5554700	IfStatement	if ( cpu_time <= 0 )		5554419	1					
ANR	5554701	Condition	cpu_time <= 0	517:7:14495:14507	5554419	0	True				
ANR	5554702	RelationalExpression	cpu_time <= 0		5554419	0		<=			
ANR	5554703	Identifier	cpu_time		5554419	0					
ANR	5554704	PrimaryExpression	0		5554419	1					
ANR	5554705	CompoundStatement		49:23:1279:1279	5554419	1					
ANR	5554706	ExpressionStatement	cpu_time = 0	518:4:14517:14529	5554419	0	True				
ANR	5554707	AssignmentExpression	cpu_time = 0		5554419	0		=			
ANR	5554708	Identifier	cpu_time		5554419	0					
ANR	5554709	PrimaryExpression	0		5554419	1					
ANR	5554710	ElseStatement	else		5554419	0					
ANR	5554711	IfStatement	"if ( ! strcasecmp ( tmp_name . Value ( ) , VMGAHP_STATUS_COMMAND_PID ) )"		5554419	0					
ANR	5554712	Condition	"! strcasecmp ( tmp_name . Value ( ) , VMGAHP_STATUS_COMMAND_PID )"	520:12:14548:14603	5554419	0	True				
ANR	5554713	UnaryOperationExpression	"! strcasecmp ( tmp_name . Value ( ) , VMGAHP_STATUS_COMMAND_PID )"		5554419	0					
ANR	5554714	UnaryOperator	!		5554419	0					
ANR	5554715	CallExpression	"strcasecmp ( tmp_name . Value ( ) , VMGAHP_STATUS_COMMAND_PID )"		5554419	1					
ANR	5554716	Callee	strcasecmp		5554419	0					
ANR	5554717	Identifier	strcasecmp		5554419	0					
ANR	5554718	ArgumentList	tmp_name . Value ( )		5554419	1					
ANR	5554719	Argument	tmp_name . Value ( )		5554419	0					
ANR	5554720	CallExpression	tmp_name . Value ( )		5554419	0					
ANR	5554721	Callee	tmp_name . Value		5554419	0					
ANR	5554722	MemberAccess	tmp_name . Value		5554419	0					
ANR	5554723	Identifier	tmp_name		5554419	0					
ANR	5554724	Identifier	Value		5554419	1					
ANR	5554725	ArgumentList			5554419	1					
ANR	5554726	Argument	VMGAHP_STATUS_COMMAND_PID		5554419	1					
ANR	5554727	Identifier	VMGAHP_STATUS_COMMAND_PID		5554419	0					
ANR	5554728	CompoundStatement		52:71:1375:1375	5554419	1					
ANR	5554729	ExpressionStatement	"vm_pid = ( int ) strtol ( tmp_value . Value ( ) , ( char * * ) NULL , 10 )"	521:3:14612:14670	5554419	0	True				
ANR	5554730	AssignmentExpression	"vm_pid = ( int ) strtol ( tmp_value . Value ( ) , ( char * * ) NULL , 10 )"		5554419	0		=			
ANR	5554731	Identifier	vm_pid		5554419	0					
ANR	5554732	CastExpression	"( int ) strtol ( tmp_value . Value ( ) , ( char * * ) NULL , 10 )"		5554419	1					
ANR	5554733	CastTarget	int		5554419	0					
ANR	5554734	CallExpression	"strtol ( tmp_value . Value ( ) , ( char * * ) NULL , 10 )"		5554419	1					
ANR	5554735	Callee	strtol		5554419	0					
ANR	5554736	Identifier	strtol		5554419	0					
ANR	5554737	ArgumentList	tmp_value . Value ( )		5554419	1					
ANR	5554738	Argument	tmp_value . Value ( )		5554419	0					
ANR	5554739	CallExpression	tmp_value . Value ( )		5554419	0					
ANR	5554740	Callee	tmp_value . Value		5554419	0					
ANR	5554741	MemberAccess	tmp_value . Value		5554419	0					
ANR	5554742	Identifier	tmp_value		5554419	0					
ANR	5554743	Identifier	Value		5554419	1					
ANR	5554744	ArgumentList			5554419	1					
ANR	5554745	Argument	( char * * ) NULL		5554419	1					
ANR	5554746	CastExpression	( char * * ) NULL		5554419	0					
ANR	5554747	CastTarget	char * *		5554419	0					
ANR	5554748	Identifier	NULL		5554419	1					
ANR	5554749	Argument	10		5554419	2					
ANR	5554750	PrimaryExpression	10		5554419	0					
ANR	5554751	IfStatement	if ( vm_pid <= 0 )		5554419	1					
ANR	5554752	Condition	vm_pid <= 0	522:7:14679:14689	5554419	0	True				
ANR	5554753	RelationalExpression	vm_pid <= 0		5554419	0		<=			
ANR	5554754	Identifier	vm_pid		5554419	0					
ANR	5554755	PrimaryExpression	0		5554419	1					
ANR	5554756	CompoundStatement		54:21:1461:1461	5554419	1					
ANR	5554757	ExpressionStatement	vm_pid = 0	523:4:14699:14709	5554419	0	True				
ANR	5554758	AssignmentExpression	vm_pid = 0		5554419	0		=			
ANR	5554759	Identifier	vm_pid		5554419	0					
ANR	5554760	PrimaryExpression	0		5554419	1					
ANR	5554761	ElseStatement	else		5554419	0					
ANR	5554762	IfStatement	"if ( ! strcasecmp ( tmp_name . Value ( ) , VMGAHP_STATUS_COMMAND_MAC ) )"		5554419	0					
ANR	5554763	Condition	"! strcasecmp ( tmp_name . Value ( ) , VMGAHP_STATUS_COMMAND_MAC )"	525:12:14728:14783	5554419	0	True				
ANR	5554764	UnaryOperationExpression	"! strcasecmp ( tmp_name . Value ( ) , VMGAHP_STATUS_COMMAND_MAC )"		5554419	0					
ANR	5554765	UnaryOperator	!		5554419	0					
ANR	5554766	CallExpression	"strcasecmp ( tmp_name . Value ( ) , VMGAHP_STATUS_COMMAND_MAC )"		5554419	1					
ANR	5554767	Callee	strcasecmp		5554419	0					
ANR	5554768	Identifier	strcasecmp		5554419	0					
ANR	5554769	ArgumentList	tmp_name . Value ( )		5554419	1					
ANR	5554770	Argument	tmp_name . Value ( )		5554419	0					
ANR	5554771	CallExpression	tmp_name . Value ( )		5554419	0					
ANR	5554772	Callee	tmp_name . Value		5554419	0					
ANR	5554773	MemberAccess	tmp_name . Value		5554419	0					
ANR	5554774	Identifier	tmp_name		5554419	0					
ANR	5554775	Identifier	Value		5554419	1					
ANR	5554776	ArgumentList			5554419	1					
ANR	5554777	Argument	VMGAHP_STATUS_COMMAND_MAC		5554419	1					
ANR	5554778	Identifier	VMGAHP_STATUS_COMMAND_MAC		5554419	0					
ANR	5554779	CompoundStatement		57:71:1555:1555	5554419	1					
ANR	5554780	ExpressionStatement	vm_mac = tmp_value	526:3:14792:14810	5554419	0	True				
ANR	5554781	AssignmentExpression	vm_mac = tmp_value		5554419	0		=			
ANR	5554782	Identifier	vm_mac		5554419	0					
ANR	5554783	Identifier	tmp_value		5554419	1					
ANR	5554784	ElseStatement	else		5554419	0					
ANR	5554785	IfStatement	"if ( ! strcasecmp ( tmp_name . Value ( ) , VMGAHP_STATUS_COMMAND_IP ) )"		5554419	0					
ANR	5554786	Condition	"! strcasecmp ( tmp_name . Value ( ) , VMGAHP_STATUS_COMMAND_IP )"	527:12:14824:14878	5554419	0	True				
ANR	5554787	UnaryOperationExpression	"! strcasecmp ( tmp_name . Value ( ) , VMGAHP_STATUS_COMMAND_IP )"		5554419	0					
ANR	5554788	UnaryOperator	!		5554419	0					
ANR	5554789	CallExpression	"strcasecmp ( tmp_name . Value ( ) , VMGAHP_STATUS_COMMAND_IP )"		5554419	1					
ANR	5554790	Callee	strcasecmp		5554419	0					
ANR	5554791	Identifier	strcasecmp		5554419	0					
ANR	5554792	ArgumentList	tmp_name . Value ( )		5554419	1					
ANR	5554793	Argument	tmp_name . Value ( )		5554419	0					
ANR	5554794	CallExpression	tmp_name . Value ( )		5554419	0					
ANR	5554795	Callee	tmp_name . Value		5554419	0					
ANR	5554796	MemberAccess	tmp_name . Value		5554419	0					
ANR	5554797	Identifier	tmp_name		5554419	0					
ANR	5554798	Identifier	Value		5554419	1					
ANR	5554799	ArgumentList			5554419	1					
ANR	5554800	Argument	VMGAHP_STATUS_COMMAND_IP		5554419	1					
ANR	5554801	Identifier	VMGAHP_STATUS_COMMAND_IP		5554419	0					
ANR	5554802	CompoundStatement		59:70:1650:1650	5554419	1					
ANR	5554803	ExpressionStatement	vm_ip = tmp_value	528:3:14887:14904	5554419	0	True				
ANR	5554804	AssignmentExpression	vm_ip = tmp_value		5554419	0		=			
ANR	5554805	Identifier	vm_ip		5554419	0					
ANR	5554806	Identifier	tmp_value		5554419	1					
ANR	5554807	IfStatement	if ( vm_status . IsEmpty ( ) )		5554419	13					
ANR	5554808	Condition	vm_status . IsEmpty ( )	532:5:14919:14937	5554419	0	True				
ANR	5554809	CallExpression	vm_status . IsEmpty ( )		5554419	0					
ANR	5554810	Callee	vm_status . IsEmpty		5554419	0					
ANR	5554811	MemberAccess	vm_status . IsEmpty		5554419	0					
ANR	5554812	Identifier	vm_status		5554419	0					
ANR	5554813	Identifier	IsEmpty		5554419	1					
ANR	5554814	ArgumentList			5554419	1					
ANR	5554815	CompoundStatement		64:27:1709:1709	5554419	1					
ANR	5554816	ExpressionStatement	"dprintf ( D_ALWAYS , ""No VM status in result\\n"" )"	534:2:14980:15025	5554419	0	True				
ANR	5554817	CallExpression	"dprintf ( D_ALWAYS , ""No VM status in result\\n"" )"		5554419	0					
ANR	5554818	Callee	dprintf		5554419	0					
ANR	5554819	Identifier	dprintf		5554419	0					
ANR	5554820	ArgumentList	D_ALWAYS		5554419	1					
ANR	5554821	Argument	D_ALWAYS		5554419	0					
ANR	5554822	Identifier	D_ALWAYS		5554419	0					
ANR	5554823	Argument	"""No VM status in result\\n"""		5554419	1					
ANR	5554824	PrimaryExpression	"""No VM status in result\\n"""		5554419	0					
ANR	5554825	ExpressionStatement	vm_status_error ( )	535:2:15029:15046	5554419	1	True				
ANR	5554826	CallExpression	vm_status_error ( )		5554419	0					
ANR	5554827	Callee	vm_status_error		5554419	0					
ANR	5554828	Identifier	vm_status_error		5554419	0					
ANR	5554829	ArgumentList			5554419	1					
ANR	5554830	ReturnStatement	return true ;	536:2:15050:15061	5554419	2	True				
ANR	5554831	Identifier	true		5554419	0					
ANR	5554832	IfStatement	if ( vm_mac . IsEmpty ( ) == false )		5554419	14					
ANR	5554833	Condition	vm_mac . IsEmpty ( ) == false	539:5:15072:15096	5554419	0	True				
ANR	5554834	EqualityExpression	vm_mac . IsEmpty ( ) == false		5554419	0		==			
ANR	5554835	CallExpression	vm_mac . IsEmpty ( )		5554419	0					
ANR	5554836	Callee	vm_mac . IsEmpty		5554419	0					
ANR	5554837	MemberAccess	vm_mac . IsEmpty		5554419	0					
ANR	5554838	Identifier	vm_mac		5554419	0					
ANR	5554839	Identifier	IsEmpty		5554419	1					
ANR	5554840	ArgumentList			5554419	1					
ANR	5554841	Identifier	false		5554419	1					
ANR	5554842	CompoundStatement		71:33:1868:1868	5554419	1					
ANR	5554843	ExpressionStatement	setVMMAC ( vm_mac . Value ( ) )	540:2:15104:15128	5554419	0	True				
ANR	5554844	CallExpression	setVMMAC ( vm_mac . Value ( ) )		5554419	0					
ANR	5554845	Callee	setVMMAC		5554419	0					
ANR	5554846	Identifier	setVMMAC		5554419	0					
ANR	5554847	ArgumentList	vm_mac . Value ( )		5554419	1					
ANR	5554848	Argument	vm_mac . Value ( )		5554419	0					
ANR	5554849	CallExpression	vm_mac . Value ( )		5554419	0					
ANR	5554850	Callee	vm_mac . Value		5554419	0					
ANR	5554851	MemberAccess	vm_mac . Value		5554419	0					
ANR	5554852	Identifier	vm_mac		5554419	0					
ANR	5554853	Identifier	Value		5554419	1					
ANR	5554854	ArgumentList			5554419	1					
ANR	5554855	IfStatement	if ( vm_ip . IsEmpty ( ) == false )		5554419	15					
ANR	5554856	Condition	vm_ip . IsEmpty ( ) == false	542:5:15138:15161	5554419	0	True				
ANR	5554857	EqualityExpression	vm_ip . IsEmpty ( ) == false		5554419	0		==			
ANR	5554858	CallExpression	vm_ip . IsEmpty ( )		5554419	0					
ANR	5554859	Callee	vm_ip . IsEmpty		5554419	0					
ANR	5554860	MemberAccess	vm_ip . IsEmpty		5554419	0					
ANR	5554861	Identifier	vm_ip		5554419	0					
ANR	5554862	Identifier	IsEmpty		5554419	1					
ANR	5554863	ArgumentList			5554419	1					
ANR	5554864	Identifier	false		5554419	1					
ANR	5554865	CompoundStatement		74:32:1933:1933	5554419	1					
ANR	5554866	ExpressionStatement	setVMIP ( vm_ip . Value ( ) )	543:2:15169:15191	5554419	0	True				
ANR	5554867	CallExpression	setVMIP ( vm_ip . Value ( ) )		5554419	0					
ANR	5554868	Callee	setVMIP		5554419	0					
ANR	5554869	Identifier	setVMIP		5554419	0					
ANR	5554870	ArgumentList	vm_ip . Value ( )		5554419	1					
ANR	5554871	Argument	vm_ip . Value ( )		5554419	0					
ANR	5554872	CallExpression	vm_ip . Value ( )		5554419	0					
ANR	5554873	Callee	vm_ip . Value		5554419	0					
ANR	5554874	MemberAccess	vm_ip . Value		5554419	0					
ANR	5554875	Identifier	vm_ip		5554419	0					
ANR	5554876	Identifier	Value		5554419	1					
ANR	5554877	ArgumentList			5554419	1					
ANR	5554878	IdentifierDeclStatement	int old_status_error_count = m_status_error_count ;	546:1:15198:15247	5554419	16	True				
ANR	5554879	IdentifierDecl	old_status_error_count = m_status_error_count		5554419	0					
ANR	5554880	IdentifierDeclType	int		5554419	0					
ANR	5554881	Identifier	old_status_error_count		5554419	1					
ANR	5554882	AssignmentExpression	old_status_error_count = m_status_error_count		5554419	2		=			
ANR	5554883	Identifier	m_status_error_count		5554419	0					
ANR	5554884	Identifier	m_status_error_count		5554419	1					
ANR	5554885	ExpressionStatement	m_status_error_count = 0	548:1:15284:15308	5554419	17	True				
ANR	5554886	AssignmentExpression	m_status_error_count = 0		5554419	0		=			
ANR	5554887	Identifier	m_status_error_count		5554419	0					
ANR	5554888	PrimaryExpression	0		5554419	1					
ANR	5554889	IfStatement	"if ( ! strcasecmp ( vm_status . Value ( ) , ""Stopped"" ) )"		5554419	18					
ANR	5554890	Condition	"! strcasecmp ( vm_status . Value ( ) , ""Stopped"" )"	550:5:15316:15355	5554419	0	True				
ANR	5554891	UnaryOperationExpression	"! strcasecmp ( vm_status . Value ( ) , ""Stopped"" )"		5554419	0					
ANR	5554892	UnaryOperator	!		5554419	0					
ANR	5554893	CallExpression	"strcasecmp ( vm_status . Value ( ) , ""Stopped"" )"		5554419	1					
ANR	5554894	Callee	strcasecmp		5554419	0					
ANR	5554895	Identifier	strcasecmp		5554419	0					
ANR	5554896	ArgumentList	vm_status . Value ( )		5554419	1					
ANR	5554897	Argument	vm_status . Value ( )		5554419	0					
ANR	5554898	CallExpression	vm_status . Value ( )		5554419	0					
ANR	5554899	Callee	vm_status . Value		5554419	0					
ANR	5554900	MemberAccess	vm_status . Value		5554419	0					
ANR	5554901	Identifier	vm_status		5554419	0					
ANR	5554902	Identifier	Value		5554419	1					
ANR	5554903	ArgumentList			5554419	1					
ANR	5554904	Argument	"""Stopped"""		5554419	1					
ANR	5554905	PrimaryExpression	"""Stopped"""		5554419	0					
ANR	5554906	CompoundStatement		82:48:2127:2127	5554419	1					
ANR	5554907	ExpressionStatement	"dprintf ( D_ALWAYS , ""Virtual machine is stopped\\n"" )"	551:2:15363:15412	5554419	0	True				
ANR	5554908	CallExpression	"dprintf ( D_ALWAYS , ""Virtual machine is stopped\\n"" )"		5554419	0					
ANR	5554909	Callee	dprintf		5554419	0					
ANR	5554910	Identifier	dprintf		5554419	0					
ANR	5554911	ArgumentList	D_ALWAYS		5554419	1					
ANR	5554912	Argument	D_ALWAYS		5554419	0					
ANR	5554913	Identifier	D_ALWAYS		5554419	0					
ANR	5554914	Argument	"""Virtual machine is stopped\\n"""		5554419	1					
ANR	5554915	PrimaryExpression	"""Virtual machine is stopped\\n"""		5554419	0					
ANR	5554916	ExpressionStatement	is_suspended = false	553:2:15417:15437	5554419	1	True				
ANR	5554917	AssignmentExpression	is_suspended = false		5554419	0		=			
ANR	5554918	Identifier	is_suspended		5554419	0					
ANR	5554919	Identifier	false		5554419	1					
ANR	5554920	ExpressionStatement	m_is_soft_suspended = false	554:2:15441:15468	5554419	2	True				
ANR	5554921	AssignmentExpression	m_is_soft_suspended = false		5554419	0		=			
ANR	5554922	Identifier	m_is_soft_suspended		5554419	0					
ANR	5554923	Identifier	false		5554419	1					
ANR	5554924	ExpressionStatement	is_checkpointed = false	555:2:15472:15495	5554419	3	True				
ANR	5554925	AssignmentExpression	is_checkpointed = false		5554419	0		=			
ANR	5554926	Identifier	is_checkpointed		5554419	0					
ANR	5554927	Identifier	false		5554419	1					
ANR	5554928	ExpressionStatement	setVMPID ( 0 )	558:2:15518:15529	5554419	4	True				
ANR	5554929	CallExpression	setVMPID ( 0 )		5554419	0					
ANR	5554930	Callee	setVMPID		5554419	0					
ANR	5554931	Identifier	setVMPID		5554419	0					
ANR	5554932	ArgumentList	0		5554419	1					
ANR	5554933	Argument	0		5554419	0					
ANR	5554934	PrimaryExpression	0		5554419	0					
ANR	5554935	ExpressionStatement	cleanup ( )	561:2:15565:15574	5554419	5	True				
ANR	5554936	CallExpression	cleanup ( )		5554419	0					
ANR	5554937	Callee	cleanup		5554419	0					
ANR	5554938	Identifier	cleanup		5554419	0					
ANR	5554939	ArgumentList			5554419	1					
ANR	5554940	ReturnStatement	return false ;	562:2:15578:15590	5554419	6	True				
ANR	5554941	Identifier	false		5554419	0					
ANR	5554942	ElseStatement	else		5554419	0					
ANR	5554943	CompoundStatement		95:7:2367:2367	5554419	0					
ANR	5554944	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Virtual machine status is %s\\n"" , vm_status . Value ( ) )"	564:2:15603:15681	5554419	0	True				
ANR	5554945	CallExpression	"dprintf ( D_FULLDEBUG , ""Virtual machine status is %s\\n"" , vm_status . Value ( ) )"		5554419	0					
ANR	5554946	Callee	dprintf		5554419	0					
ANR	5554947	Identifier	dprintf		5554419	0					
ANR	5554948	ArgumentList	D_FULLDEBUG		5554419	1					
ANR	5554949	Argument	D_FULLDEBUG		5554419	0					
ANR	5554950	Identifier	D_FULLDEBUG		5554419	0					
ANR	5554951	Argument	"""Virtual machine status is %s\\n"""		5554419	1					
ANR	5554952	PrimaryExpression	"""Virtual machine status is %s\\n"""		5554419	0					
ANR	5554953	Argument	vm_status . Value ( )		5554419	2					
ANR	5554954	CallExpression	vm_status . Value ( )		5554419	0					
ANR	5554955	Callee	vm_status . Value		5554419	0					
ANR	5554956	MemberAccess	vm_status . Value		5554419	0					
ANR	5554957	Identifier	vm_status		5554419	0					
ANR	5554958	Identifier	Value		5554419	1					
ANR	5554959	ArgumentList			5554419	1					
ANR	5554960	IfStatement	"if ( ! strcasecmp ( vm_status . Value ( ) , ""Running"" ) )"		5554419	1					
ANR	5554961	Condition	"! strcasecmp ( vm_status . Value ( ) , ""Running"" )"	566:6:15689:15729	5554419	0	True				
ANR	5554962	UnaryOperationExpression	"! strcasecmp ( vm_status . Value ( ) , ""Running"" )"		5554419	0					
ANR	5554963	UnaryOperator	!		5554419	0					
ANR	5554964	CallExpression	"strcasecmp ( vm_status . Value ( ) , ""Running"" )"		5554419	1					
ANR	5554965	Callee	strcasecmp		5554419	0					
ANR	5554966	Identifier	strcasecmp		5554419	0					
ANR	5554967	ArgumentList	vm_status . Value ( )		5554419	1					
ANR	5554968	Argument	vm_status . Value ( )		5554419	0					
ANR	5554969	CallExpression	vm_status . Value ( )		5554419	0					
ANR	5554970	Callee	vm_status . Value		5554419	0					
ANR	5554971	MemberAccess	vm_status . Value		5554419	0					
ANR	5554972	Identifier	vm_status		5554419	0					
ANR	5554973	Identifier	Value		5554419	1					
ANR	5554974	ArgumentList			5554419	1					
ANR	5554975	Argument	"""Running"""		5554419	1					
ANR	5554976	PrimaryExpression	"""Running"""		5554419	0					
ANR	5554977	CompoundStatement		98:50:2501:2501	5554419	1					
ANR	5554978	ExpressionStatement	is_suspended = false	567:3:15738:15758	5554419	0	True				
ANR	5554979	AssignmentExpression	is_suspended = false		5554419	0		=			
ANR	5554980	Identifier	is_suspended		5554419	0					
ANR	5554981	Identifier	false		5554419	1					
ANR	5554982	ExpressionStatement	m_is_soft_suspended = false	568:3:15763:15790	5554419	1	True				
ANR	5554983	AssignmentExpression	m_is_soft_suspended = false		5554419	0		=			
ANR	5554984	Identifier	m_is_soft_suspended		5554419	0					
ANR	5554985	Identifier	false		5554419	1					
ANR	5554986	ExpressionStatement	is_checkpointed = false	569:3:15795:15818	5554419	2	True				
ANR	5554987	AssignmentExpression	is_checkpointed = false		5554419	0		=			
ANR	5554988	Identifier	is_checkpointed		5554419	0					
ANR	5554989	Identifier	false		5554419	1					
ANR	5554990	IfStatement	if ( cpu_time > 0 )		5554419	3					
ANR	5554991	Condition	cpu_time > 0	571:7:15828:15839	5554419	0	True				
ANR	5554992	RelationalExpression	cpu_time > 0		5554419	0		>			
ANR	5554993	Identifier	cpu_time		5554419	0					
ANR	5554994	PrimaryExpression	0		5554419	1					
ANR	5554995	CompoundStatement		103:22:2611:2611	5554419	1					
ANR	5554996	ExpressionStatement	m_vm_cputime = cpu_time	573:4:15882:15905	5554419	0	True				
ANR	5554997	AssignmentExpression	m_vm_cputime = cpu_time		5554419	0		=			
ANR	5554998	Identifier	m_vm_cputime		5554419	0					
ANR	5554999	Identifier	cpu_time		5554419	1					
ANR	5555000	IfStatement	if ( vm_pid > 0 )		5554419	4					
ANR	5555001	Condition	vm_pid > 0	575:7:15919:15928	5554419	0	True				
ANR	5555002	RelationalExpression	vm_pid > 0		5554419	0		>			
ANR	5555003	Identifier	vm_pid		5554419	0					
ANR	5555004	PrimaryExpression	0		5554419	1					
ANR	5555005	CompoundStatement		107:20:2700:2700	5554419	1					
ANR	5555006	ExpressionStatement	setVMPID ( vm_pid )	576:4:15938:15954	5554419	0	True				
ANR	5555007	CallExpression	setVMPID ( vm_pid )		5554419	0					
ANR	5555008	Callee	setVMPID		5554419	0					
ANR	5555009	Identifier	setVMPID		5554419	0					
ANR	5555010	ArgumentList	vm_pid		5554419	1					
ANR	5555011	Argument	vm_pid		5554419	0					
ANR	5555012	Identifier	vm_pid		5554419	0					
ANR	5555013	ExpressionStatement	updateUsageOfVM ( )	580:3:16004:16021	5554419	5	True				
ANR	5555014	CallExpression	updateUsageOfVM ( )		5554419	0					
ANR	5555015	Callee	updateUsageOfVM		5554419	0					
ANR	5555016	Identifier	updateUsageOfVM		5554419	0					
ANR	5555017	ArgumentList			5554419	1					
ANR	5555018	ElseStatement	else		5554419	0					
ANR	5555019	IfStatement	"if ( ! strcasecmp ( vm_status . Value ( ) , ""Suspended"" ) )"		5554419	0					
ANR	5555020	Condition	"! strcasecmp ( vm_status . Value ( ) , ""Suspended"" )"	581:12:16035:16077	5554419	0	True				
ANR	5555021	UnaryOperationExpression	"! strcasecmp ( vm_status . Value ( ) , ""Suspended"" )"		5554419	0					
ANR	5555022	UnaryOperator	!		5554419	0					
ANR	5555023	CallExpression	"strcasecmp ( vm_status . Value ( ) , ""Suspended"" )"		5554419	1					
ANR	5555024	Callee	strcasecmp		5554419	0					
ANR	5555025	Identifier	strcasecmp		5554419	0					
ANR	5555026	ArgumentList	vm_status . Value ( )		5554419	1					
ANR	5555027	Argument	vm_status . Value ( )		5554419	0					
ANR	5555028	CallExpression	vm_status . Value ( )		5554419	0					
ANR	5555029	Callee	vm_status . Value		5554419	0					
ANR	5555030	MemberAccess	vm_status . Value		5554419	0					
ANR	5555031	Identifier	vm_status		5554419	0					
ANR	5555032	Identifier	Value		5554419	1					
ANR	5555033	ArgumentList			5554419	1					
ANR	5555034	Argument	"""Suspended"""		5554419	1					
ANR	5555035	PrimaryExpression	"""Suspended"""		5554419	0					
ANR	5555036	CompoundStatement		113:58:2849:2849	5554419	1					
ANR	5555037	IfStatement	if ( ! is_checkpointed )		5554419	0					
ANR	5555038	Condition	! is_checkpointed	582:7:16090:16105	5554419	0	True				
ANR	5555039	UnaryOperationExpression	! is_checkpointed		5554419	0					
ANR	5555040	UnaryOperator	!		5554419	0					
ANR	5555041	Identifier	is_checkpointed		5554419	1					
ANR	5555042	CompoundStatement		114:26:2877:2877	5554419	1					
ANR	5555043	ExpressionStatement	is_suspended = true	583:4:16115:16134	5554419	0	True				
ANR	5555044	AssignmentExpression	is_suspended = true		5554419	0		=			
ANR	5555045	Identifier	is_suspended		5554419	0					
ANR	5555046	Identifier	true		5554419	1					
ANR	5555047	ExpressionStatement	m_is_soft_suspended = false	585:3:16144:16171	5554419	1	True				
ANR	5555048	AssignmentExpression	m_is_soft_suspended = false		5554419	0		=			
ANR	5555049	Identifier	m_is_soft_suspended		5554419	0					
ANR	5555050	Identifier	false		5554419	1					
ANR	5555051	ExpressionStatement	setVMPID ( 0 )	588:3:16199:16210	5554419	2	True				
ANR	5555052	CallExpression	setVMPID ( 0 )		5554419	0					
ANR	5555053	Callee	setVMPID		5554419	0					
ANR	5555054	Identifier	setVMPID		5554419	0					
ANR	5555055	ArgumentList	0		5554419	1					
ANR	5555056	Argument	0		5554419	0					
ANR	5555057	PrimaryExpression	0		5554419	0					
ANR	5555058	ElseStatement	else		5554419	0					
ANR	5555059	IfStatement	"if ( ! strcasecmp ( vm_status . Value ( ) , ""SoftSuspended"" ) )"		5554419	0					
ANR	5555060	Condition	"! strcasecmp ( vm_status . Value ( ) , ""SoftSuspended"" )"	589:12:16224:16270	5554419	0	True				
ANR	5555061	UnaryOperationExpression	"! strcasecmp ( vm_status . Value ( ) , ""SoftSuspended"" )"		5554419	0					
ANR	5555062	UnaryOperator	!		5554419	0					
ANR	5555063	CallExpression	"strcasecmp ( vm_status . Value ( ) , ""SoftSuspended"" )"		5554419	1					
ANR	5555064	Callee	strcasecmp		5554419	0					
ANR	5555065	Identifier	strcasecmp		5554419	0					
ANR	5555066	ArgumentList	vm_status . Value ( )		5554419	1					
ANR	5555067	Argument	vm_status . Value ( )		5554419	0					
ANR	5555068	CallExpression	vm_status . Value ( )		5554419	0					
ANR	5555069	Callee	vm_status . Value		5554419	0					
ANR	5555070	MemberAccess	vm_status . Value		5554419	0					
ANR	5555071	Identifier	vm_status		5554419	0					
ANR	5555072	Identifier	Value		5554419	1					
ANR	5555073	ArgumentList			5554419	1					
ANR	5555074	Argument	"""SoftSuspended"""		5554419	1					
ANR	5555075	PrimaryExpression	"""SoftSuspended"""		5554419	0					
ANR	5555076	CompoundStatement		121:62:3042:3042	5554419	1					
ANR	5555077	ExpressionStatement	is_suspended = true	590:3:16279:16298	5554419	0	True				
ANR	5555078	AssignmentExpression	is_suspended = true		5554419	0		=			
ANR	5555079	Identifier	is_suspended		5554419	0					
ANR	5555080	Identifier	true		5554419	1					
ANR	5555081	ExpressionStatement	m_is_soft_suspended = true	591:3:16303:16329	5554419	1	True				
ANR	5555082	AssignmentExpression	m_is_soft_suspended = true		5554419	0		=			
ANR	5555083	Identifier	m_is_soft_suspended		5554419	0					
ANR	5555084	Identifier	true		5554419	1					
ANR	5555085	ExpressionStatement	is_checkpointed = false	592:3:16334:16357	5554419	2	True				
ANR	5555086	AssignmentExpression	is_checkpointed = false		5554419	0		=			
ANR	5555087	Identifier	is_checkpointed		5554419	0					
ANR	5555088	Identifier	false		5554419	1					
ANR	5555089	ElseStatement	else		5554419	0					
ANR	5555090	CompoundStatement		125:8:3135:3135	5554419	0					
ANR	5555091	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unknown VM status: %s\\n"" , vm_status . Value ( ) )"	594:3:16372:16435	5554419	0	True				
ANR	5555092	CallExpression	"dprintf ( D_ALWAYS , ""Unknown VM status: %s\\n"" , vm_status . Value ( ) )"		5554419	0					
ANR	5555093	Callee	dprintf		5554419	0					
ANR	5555094	Identifier	dprintf		5554419	0					
ANR	5555095	ArgumentList	D_ALWAYS		5554419	1					
ANR	5555096	Argument	D_ALWAYS		5554419	0					
ANR	5555097	Identifier	D_ALWAYS		5554419	0					
ANR	5555098	Argument	"""Unknown VM status: %s\\n"""		5554419	1					
ANR	5555099	PrimaryExpression	"""Unknown VM status: %s\\n"""		5554419	0					
ANR	5555100	Argument	vm_status . Value ( )		5554419	2					
ANR	5555101	CallExpression	vm_status . Value ( )		5554419	0					
ANR	5555102	Callee	vm_status . Value		5554419	0					
ANR	5555103	MemberAccess	vm_status . Value		5554419	0					
ANR	5555104	Identifier	vm_status		5554419	0					
ANR	5555105	Identifier	Value		5554419	1					
ANR	5555106	ArgumentList			5554419	1					
ANR	5555107	ExpressionStatement	m_status_error_count = old_status_error_count	597:3:16475:16520	5554419	1	True				
ANR	5555108	AssignmentExpression	m_status_error_count = old_status_error_count		5554419	0		=			
ANR	5555109	Identifier	m_status_error_count		5554419	0					
ANR	5555110	Identifier	old_status_error_count		5554419	1					
ANR	5555111	ExpressionStatement	vm_status_error ( )	598:3:16525:16542	5554419	2	True				
ANR	5555112	CallExpression	vm_status_error ( )		5554419	0					
ANR	5555113	Callee	vm_status_error		5554419	0					
ANR	5555114	Identifier	vm_status_error		5554419	0					
ANR	5555115	ArgumentList			5554419	1					
ANR	5555116	ReturnStatement	return true ;	601:1:16552:16563	5554419	19	True				
ANR	5555117	Identifier	true		5554419	0					
ANR	5555118	ReturnType	bool		5554419	1					
ANR	5555119	Identifier	VMProc :: process_vm_status_result		5554419	2					
ANR	5555120	ParameterList	Gahp_Args * result_args		5554419	3					
ANR	5555121	Parameter	Gahp_Args * result_args	468:33:13207:13228	5554419	0	True				
ANR	5555122	ParameterType	Gahp_Args *		5554419	0					
ANR	5555123	Identifier	result_args		5554419	1					
ANR	5555124	CFGEntryNode	ENTRY		5554419		True				
ANR	5555125	CFGExitNode	EXIT		5554419		True				
ANR	5555126	Symbol	tmp_name . Value		5554419						
ANR	5555127	Symbol	vm_pid		5554419						
ANR	5555128	Symbol	VMGAHP_STATUS_COMMAND_MAC		5554419						
ANR	5555129	Symbol	vm_ip . Value		5554419						
ANR	5555130	Symbol	m_status_error_count		5554419						
ANR	5555131	Symbol	is_checkpointed		5554419						
ANR	5555132	Symbol	result_args -> argc		5554419						
ANR	5555133	Symbol	strcasecmp		5554419						
ANR	5555134	Symbol	vm_mac . IsEmpty		5554419						
ANR	5555135	Symbol	tmp_argv		5554419						
ANR	5555136	Symbol	vm_ip		5554419						
ANR	5555137	Symbol	vm_ip . IsEmpty		5554419						
ANR	5555138	Symbol	tmp_value . Value		5554419						
ANR	5555139	Symbol	vm_mac . Value		5554419						
ANR	5555140	Symbol	m_vm_cputime		5554419						
ANR	5555141	Symbol	NULL		5554419						
ANR	5555142	Symbol	vm_status . Value		5554419						
ANR	5555143	Symbol	D_FULLDEBUG		5554419						
ANR	5555144	Symbol	tmp_value		5554419						
ANR	5555145	Symbol	strtod		5554419						
ANR	5555146	Symbol	* result_args -> argv		5554419						
ANR	5555147	Symbol	tmp_name		5554419						
ANR	5555148	Symbol	* * result_args		5554419						
ANR	5555149	Symbol	one_arg . IsEmpty		5554419						
ANR	5555150	Symbol	VMGAHP_STATUS_COMMAND_STATUS		5554419						
ANR	5555151	Symbol	m_is_soft_suspended		5554419						
ANR	5555152	Symbol	true		5554419						
ANR	5555153	Symbol	one_arg		5554419						
ANR	5555154	Symbol	tmp_value . IsEmpty		5554419						
ANR	5555155	Symbol	old_status_error_count		5554419						
ANR	5555156	Symbol	one_arg . Value		5554419						
ANR	5555157	Symbol	is_suspended		5554419						
ANR	5555158	Symbol	result_args		5554419						
ANR	5555159	Symbol	VMGAHP_STATUS_COMMAND_IP		5554419						
ANR	5555160	Symbol	vm_mac		5554419						
ANR	5555161	Symbol	VMGAHP_STATUS_COMMAND_CPUTIME		5554419						
ANR	5555162	Symbol	vm_status		5554419						
ANR	5555163	Symbol	strtol		5554419						
ANR	5555164	Symbol	VMGAHP_STATUS_COMMAND_PID		5554419						
ANR	5555165	Symbol	* result_args		5554419						
ANR	5555166	Symbol	cpu_time		5554419						
ANR	5555167	Symbol	D_ALWAYS		5554419						
ANR	5555168	Symbol	false		5554419						
ANR	5555169	Symbol	i		5554419						
ANR	5555170	Symbol	NULLSTRING		5554419						
ANR	5555171	Symbol	result_args -> argv		5554419						
ANR	5555172	Symbol	vm_status . IsEmpty		5554419						
ANR	5555173	Symbol	* i		5554419						
ANR	5555174	Symbol	tmp_name . IsEmpty		5554419						
ANR	5555175	Function	VMProc :: notify_status_fn	604:0:16568:17587							
ANR	5555176	FunctionDef	VMProc :: notify_status_fn ()		5555175	0					
ANR	5555177	CompoundStatement		606:0:16600:17587	5555175	0					
ANR	5555178	IdentifierDeclStatement	bool has_error = false ;	608:1:16656:16678	5555175	0	True				
ANR	5555179	IdentifierDecl	has_error = false		5555175	0					
ANR	5555180	IdentifierDeclType	bool		5555175	0					
ANR	5555181	Identifier	has_error		5555175	1					
ANR	5555182	AssignmentExpression	has_error = false		5555175	2		=			
ANR	5555183	Identifier	false		5555175	0					
ANR	5555184	Identifier	false		5555175	1					
ANR	5555185	IfStatement	if ( ! m_status_req || ! m_vm_id )		5555175	1					
ANR	5555186	Condition	! m_status_req || ! m_vm_id	610:5:16686:16710	5555175	0	True				
ANR	5555187	OrExpression	! m_status_req || ! m_vm_id		5555175	0		||			
ANR	5555188	UnaryOperationExpression	! m_status_req		5555175	0					
ANR	5555189	UnaryOperator	!		5555175	0					
ANR	5555190	Identifier	m_status_req		5555175	1					
ANR	5555191	UnaryOperationExpression	! m_vm_id		5555175	1					
ANR	5555192	UnaryOperator	!		5555175	0					
ANR	5555193	Identifier	m_vm_id		5555175	1					
ANR	5555194	CompoundStatement		5:33:113:113	5555175	1					
ANR	5555195	ReturnStatement	return ;	611:2:16718:16724	5555175	0	True				
ANR	5555196	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""VM status notify function is called\\n"" )"	614:1:16731:16793	5555175	2	True				
ANR	5555197	CallExpression	"dprintf ( D_FULLDEBUG , ""VM status notify function is called\\n"" )"		5555175	0					
ANR	5555198	Callee	dprintf		5555175	0					
ANR	5555199	Identifier	dprintf		5555175	0					
ANR	5555200	ArgumentList	D_FULLDEBUG		5555175	1					
ANR	5555201	Argument	D_FULLDEBUG		5555175	0					
ANR	5555202	Identifier	D_FULLDEBUG		5555175	0					
ANR	5555203	Argument	"""VM status notify function is called\\n"""		5555175	1					
ANR	5555204	PrimaryExpression	"""VM status notify function is called\\n"""		5555175	0					
ANR	5555205	ExpressionStatement	m_status_req -> setNotificationTimerId ( - 1 )	617:1:16835:16875	5555175	3	True				
ANR	5555206	CallExpression	m_status_req -> setNotificationTimerId ( - 1 )		5555175	0					
ANR	5555207	Callee	m_status_req -> setNotificationTimerId		5555175	0					
ANR	5555208	PtrMemberAccess	m_status_req -> setNotificationTimerId		5555175	0					
ANR	5555209	Identifier	m_status_req		5555175	0					
ANR	5555210	Identifier	setNotificationTimerId		5555175	1					
ANR	5555211	ArgumentList	- 1		5555175	1					
ANR	5555212	Argument	- 1		5555175	0					
ANR	5555213	UnaryOperationExpression	- 1		5555175	0					
ANR	5555214	UnaryOperator	-		5555175	0					
ANR	5555215	PrimaryExpression	1		5555175	1					
ANR	5555216	ExpressionStatement	m_vmstatus_notify_tid = - 1	618:1:16878:16904	5555175	4	True				
ANR	5555217	AssignmentExpression	m_vmstatus_notify_tid = - 1		5555175	0		=			
ANR	5555218	Identifier	m_vmstatus_notify_tid		5555175	0					
ANR	5555219	UnaryOperationExpression	- 1		5555175	1					
ANR	5555220	UnaryOperator	-		5555175	0					
ANR	5555221	PrimaryExpression	1		5555175	1					
ANR	5555222	IdentifierDeclStatement	reqstatus v_status = m_status_req -> getPendingStatus ( ) ;	621:1:16950:17003	5555175	5	True				
ANR	5555223	IdentifierDecl	v_status = m_status_req -> getPendingStatus ( )		5555175	0					
ANR	5555224	IdentifierDeclType	reqstatus		5555175	0					
ANR	5555225	Identifier	v_status		5555175	1					
ANR	5555226	AssignmentExpression	v_status = m_status_req -> getPendingStatus ( )		5555175	2		=			
ANR	5555227	Identifier	v_status		5555175	0					
ANR	5555228	CallExpression	m_status_req -> getPendingStatus ( )		5555175	1					
ANR	5555229	Callee	m_status_req -> getPendingStatus		5555175	0					
ANR	5555230	PtrMemberAccess	m_status_req -> getPendingStatus		5555175	0					
ANR	5555231	Identifier	m_status_req		5555175	0					
ANR	5555232	Identifier	getPendingStatus		5555175	1					
ANR	5555233	ArgumentList			5555175	1					
ANR	5555234	IfStatement	if ( v_status == REQ_DONE )		5555175	6					
ANR	5555235	Condition	v_status == REQ_DONE	623:4:17010:17029	5555175	0	True				
ANR	5555236	EqualityExpression	v_status == REQ_DONE		5555175	0		==			
ANR	5555237	Identifier	v_status		5555175	0					
ANR	5555238	Identifier	REQ_DONE		5555175	1					
ANR	5555239	CompoundStatement		19:2:435:457	5555175	1					
ANR	5555240	IdentifierDeclStatement	Gahp_Args * result_args ;	624:2:17036:17058	5555175	0	True				
ANR	5555241	IdentifierDecl	* result_args		5555175	0					
ANR	5555242	IdentifierDeclType	Gahp_Args *		5555175	0					
ANR	5555243	Identifier	result_args		5555175	1					
ANR	5555244	ExpressionStatement	result_args = m_status_req -> getResult ( )	625:2:17062:17101	5555175	1	True				
ANR	5555245	AssignmentExpression	result_args = m_status_req -> getResult ( )		5555175	0		=			
ANR	5555246	Identifier	result_args		5555175	0					
ANR	5555247	CallExpression	m_status_req -> getResult ( )		5555175	1					
ANR	5555248	Callee	m_status_req -> getResult		5555175	0					
ANR	5555249	PtrMemberAccess	m_status_req -> getResult		5555175	0					
ANR	5555250	Identifier	m_status_req		5555175	0					
ANR	5555251	Identifier	getResult		5555175	1					
ANR	5555252	ArgumentList			5555175	1					
ANR	5555253	ExpressionStatement	process_vm_status_result ( result_args )	629:2:17198:17235	5555175	2	True				
ANR	5555254	CallExpression	process_vm_status_result ( result_args )		5555175	0					
ANR	5555255	Callee	process_vm_status_result		5555175	0					
ANR	5555256	Identifier	process_vm_status_result		5555175	0					
ANR	5555257	ArgumentList	result_args		5555175	1					
ANR	5555258	Argument	result_args		5555175	0					
ANR	5555259	Identifier	result_args		5555175	0					
ANR	5555260	IfStatement	if ( m_status_req )		5555175	3					
ANR	5555261	Condition	m_status_req	630:5:17242:17253	5555175	0	True				
ANR	5555262	Identifier	m_status_req		5555175	0					
ANR	5555263	CompoundStatement		25:19:655:655	5555175	1					
ANR	5555264	Statement	delete	631:3:17261:17266	5555175	0	True				
ANR	5555265	ExpressionStatement	m_status_req	631:10:17268:17280	5555175	1	True				
ANR	5555266	Identifier	m_status_req		5555175	0					
ANR	5555267	ExpressionStatement	m_status_req = NULL	632:3:17285:17304	5555175	2	True				
ANR	5555268	AssignmentExpression	m_status_req = NULL		5555175	0		=			
ANR	5555269	Identifier	m_status_req		5555175	0					
ANR	5555270	Identifier	NULL		5555175	1					
ANR	5555271	ReturnStatement	return ;	634:2:17312:17318	5555175	4	True				
ANR	5555272	ElseStatement	else		5555175	0					
ANR	5555273	CompoundStatement		30:7:726:726	5555175	0					
ANR	5555274	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to receive VM status\\n"" )"	637:2:17388:17438	5555175	0	True				
ANR	5555275	CallExpression	"dprintf ( D_ALWAYS , ""Failed to receive VM status\\n"" )"		5555175	0					
ANR	5555276	Callee	dprintf		5555175	0					
ANR	5555277	Identifier	dprintf		5555175	0					
ANR	5555278	ArgumentList	D_ALWAYS		5555175	1					
ANR	5555279	Argument	D_ALWAYS		5555175	0					
ANR	5555280	Identifier	D_ALWAYS		5555175	0					
ANR	5555281	Argument	"""Failed to receive VM status\\n"""		5555175	1					
ANR	5555282	PrimaryExpression	"""Failed to receive VM status\\n"""		5555175	0					
ANR	5555283	ExpressionStatement	has_error = true	638:2:17442:17458	5555175	1	True				
ANR	5555284	AssignmentExpression	has_error = true		5555175	0		=			
ANR	5555285	Identifier	has_error		5555175	0					
ANR	5555286	Identifier	true		5555175	1					
ANR	5555287	IfStatement	if ( m_status_req )		5555175	7					
ANR	5555288	Condition	m_status_req	641:4:17468:17479	5555175	0	True				
ANR	5555289	Identifier	m_status_req		5555175	0					
ANR	5555290	CompoundStatement		36:18:881:881	5555175	1					
ANR	5555291	Statement	delete	642:2:17486:17491	5555175	0	True				
ANR	5555292	ExpressionStatement	m_status_req	642:9:17493:17505	5555175	1	True				
ANR	5555293	Identifier	m_status_req		5555175	0					
ANR	5555294	ExpressionStatement	m_status_req = NULL	643:2:17509:17528	5555175	2	True				
ANR	5555295	AssignmentExpression	m_status_req = NULL		5555175	0		=			
ANR	5555296	Identifier	m_status_req		5555175	0					
ANR	5555297	Identifier	NULL		5555175	1					
ANR	5555298	IfStatement	if ( has_error )		5555175	8					
ANR	5555299	Condition	has_error	646:5:17539:17547	5555175	0	True				
ANR	5555300	Identifier	has_error		5555175	0					
ANR	5555301	CompoundStatement		41:17:950:950	5555175	1					
ANR	5555302	ExpressionStatement	vm_status_error ( )	647:2:17555:17572	5555175	0	True				
ANR	5555303	CallExpression	vm_status_error ( )		5555175	0					
ANR	5555304	Callee	vm_status_error		5555175	0					
ANR	5555305	Identifier	vm_status_error		5555175	0					
ANR	5555306	ArgumentList			5555175	1					
ANR	5555307	ReturnStatement	return ;	650:1:17579:17585	5555175	9	True				
ANR	5555308	ReturnType	void		5555175	1					
ANR	5555309	Identifier	VMProc :: notify_status_fn		5555175	2					
ANR	5555310	ParameterList			5555175	3					
ANR	5555311	CFGEntryNode	ENTRY		5555175		True				
ANR	5555312	CFGExitNode	EXIT		5555175		True				
ANR	5555313	Symbol	REQ_DONE		5555175						
ANR	5555314	Symbol	NULL		5555175						
ANR	5555315	Symbol	m_vm_id		5555175						
ANR	5555316	Symbol	false		5555175						
ANR	5555317	Symbol	D_ALWAYS		5555175						
ANR	5555318	Symbol	D_FULLDEBUG		5555175						
ANR	5555319	Symbol	* m_status_req		5555175						
ANR	5555320	Symbol	result_args		5555175						
ANR	5555321	Symbol	m_status_req		5555175						
ANR	5555322	Symbol	has_error		5555175						
ANR	5555323	Symbol	v_status		5555175						
ANR	5555324	Symbol	true		5555175						
ANR	5555325	Symbol	m_status_req -> getPendingStatus		5555175						
ANR	5555326	Symbol	m_status_req -> getResult		5555175						
ANR	5555327	Symbol	m_vmstatus_notify_tid		5555175						
ANR	5555328	Function	VMProc :: CheckStatus	653:0:17590:19195							
ANR	5555329	FunctionDef	VMProc :: CheckStatus ()		5555328	0					
ANR	5555330	CompoundStatement		655:0:17617:19195	5555328	0					
ANR	5555331	IfStatement	if ( ! m_vm_id || ! m_vmgahp )		5555328	0					
ANR	5555332	Condition	! m_vm_id || ! m_vmgahp	656:5:17624:17644	5555328	0	True				
ANR	5555333	OrExpression	! m_vm_id || ! m_vmgahp		5555328	0		||			
ANR	5555334	UnaryOperationExpression	! m_vm_id		5555328	0					
ANR	5555335	UnaryOperator	!		5555328	0					
ANR	5555336	Identifier	m_vm_id		5555328	1					
ANR	5555337	UnaryOperationExpression	! m_vmgahp		5555328	1					
ANR	5555338	UnaryOperator	!		5555328	0					
ANR	5555339	Identifier	m_vmgahp		5555328	1					
ANR	5555340	CompoundStatement		2:29:30:30	5555328	1					
ANR	5555341	ReturnStatement	return ;	657:2:17652:17658	5555328	0	True				
ANR	5555342	IfStatement	if ( m_status_req != NULL )		5555328	1					
ANR	5555343	Condition	m_status_req != NULL	660:5:17669:17688	5555328	0	True				
ANR	5555344	EqualityExpression	m_status_req != NULL		5555328	0		!=			
ANR	5555345	Identifier	m_status_req		5555328	0					
ANR	5555346	Identifier	NULL		5555328	1					
ANR	5555347	CompoundStatement		6:28:74:74	5555328	1					
ANR	5555348	Statement	delete	661:2:17696:17701	5555328	0	True				
ANR	5555349	ExpressionStatement	m_status_req	661:9:17703:17715	5555328	1	True				
ANR	5555350	Identifier	m_status_req		5555328	0					
ANR	5555351	ExpressionStatement	m_status_req = NULL	662:2:17719:17738	5555328	2	True				
ANR	5555352	AssignmentExpression	m_status_req = NULL		5555328	0		=			
ANR	5555353	Identifier	m_status_req		5555328	0					
ANR	5555354	Identifier	NULL		5555328	1					
ANR	5555355	ExpressionStatement	m_vmstatus_notify_tid = - 1	663:2:17742:17768	5555328	3	True				
ANR	5555356	AssignmentExpression	m_vmstatus_notify_tid = - 1		5555328	0		=			
ANR	5555357	Identifier	m_vmstatus_notify_tid		5555328	0					
ANR	5555358	UnaryOperationExpression	- 1		5555328	1					
ANR	5555359	UnaryOperator	-		5555328	0					
ANR	5555360	PrimaryExpression	1		5555328	1					
ANR	5555361	ExpressionStatement	m_status_req = new VMGahpRequest ( m_vmgahp )	666:1:17775:17817	5555328	2	True				
ANR	5555362	AssignmentExpression	m_status_req = new VMGahpRequest ( m_vmgahp )		5555328	0		=			
ANR	5555363	Identifier	m_status_req		5555328	0					
ANR	5555364	Identifier	m_vmgahp		5555328	1					
ANR	5555365	ExpressionStatement	ASSERT ( m_status_req )	667:1:17820:17840	5555328	3	True				
ANR	5555366	CallExpression	ASSERT ( m_status_req )		5555328	0					
ANR	5555367	Callee	ASSERT		5555328	0					
ANR	5555368	Identifier	ASSERT		5555328	0					
ANR	5555369	ArgumentList	m_status_req		5555328	1					
ANR	5555370	Argument	m_status_req		5555328	0					
ANR	5555371	Identifier	m_status_req		5555328	0					
ANR	5555372	ExpressionStatement	m_status_req -> setMode ( VMGahpRequest :: NORMAL )	668:1:17843:17887	5555328	4	True				
ANR	5555373	CallExpression	m_status_req -> setMode ( VMGahpRequest :: NORMAL )		5555328	0					
ANR	5555374	Callee	m_status_req -> setMode		5555328	0					
ANR	5555375	PtrMemberAccess	m_status_req -> setMode		5555328	0					
ANR	5555376	Identifier	m_status_req		5555328	0					
ANR	5555377	Identifier	setMode		5555328	1					
ANR	5555378	ArgumentList	VMGahpRequest :: NORMAL		5555328	1					
ANR	5555379	Argument	VMGahpRequest :: NORMAL		5555328	0					
ANR	5555380	Identifier	VMGahpRequest :: NORMAL		5555328	0					
ANR	5555381	ExpressionStatement	m_status_req -> setTimeout ( m_vmstatus_interval - 3 )	669:1:17890:17939	5555328	5	True				
ANR	5555382	CallExpression	m_status_req -> setTimeout ( m_vmstatus_interval - 3 )		5555328	0					
ANR	5555383	Callee	m_status_req -> setTimeout		5555328	0					
ANR	5555384	PtrMemberAccess	m_status_req -> setTimeout		5555328	0					
ANR	5555385	Identifier	m_status_req		5555328	0					
ANR	5555386	Identifier	setTimeout		5555328	1					
ANR	5555387	ArgumentList	m_vmstatus_interval - 3		5555328	1					
ANR	5555388	Argument	m_vmstatus_interval - 3		5555328	0					
ANR	5555389	AdditiveExpression	m_vmstatus_interval - 3		5555328	0		-			
ANR	5555390	Identifier	m_vmstatus_interval		5555328	0					
ANR	5555391	PrimaryExpression	3		5555328	1					
ANR	5555392	ExpressionStatement	"m_vmstatus_notify_tid = daemonCore -> Register_Timer ( m_vmstatus_interval - 1 , ( TimerHandlercpp ) & VMProc :: notify_status_fn , ""VMProc::notify_status_fn"" , this )"	671:1:17943:18103	5555328	6	True				
ANR	5555393	AssignmentExpression	"m_vmstatus_notify_tid = daemonCore -> Register_Timer ( m_vmstatus_interval - 1 , ( TimerHandlercpp ) & VMProc :: notify_status_fn , ""VMProc::notify_status_fn"" , this )"		5555328	0		=			
ANR	5555394	Identifier	m_vmstatus_notify_tid		5555328	0					
ANR	5555395	CallExpression	"daemonCore -> Register_Timer ( m_vmstatus_interval - 1 , ( TimerHandlercpp ) & VMProc :: notify_status_fn , ""VMProc::notify_status_fn"" , this )"		5555328	1					
ANR	5555396	Callee	daemonCore -> Register_Timer		5555328	0					
ANR	5555397	PtrMemberAccess	daemonCore -> Register_Timer		5555328	0					
ANR	5555398	Identifier	daemonCore		5555328	0					
ANR	5555399	Identifier	Register_Timer		5555328	1					
ANR	5555400	ArgumentList	m_vmstatus_interval - 1		5555328	1					
ANR	5555401	Argument	m_vmstatus_interval - 1		5555328	0					
ANR	5555402	AdditiveExpression	m_vmstatus_interval - 1		5555328	0		-			
ANR	5555403	Identifier	m_vmstatus_interval		5555328	0					
ANR	5555404	PrimaryExpression	1		5555328	1					
ANR	5555405	Argument	( TimerHandlercpp ) & VMProc :: notify_status_fn		5555328	1					
ANR	5555406	CastExpression	( TimerHandlercpp ) & VMProc :: notify_status_fn		5555328	0					
ANR	5555407	CastTarget	TimerHandlercpp		5555328	0					
ANR	5555408	UnaryOperationExpression	& VMProc :: notify_status_fn		5555328	1					
ANR	5555409	UnaryOperator	&		5555328	0					
ANR	5555410	Identifier	VMProc :: notify_status_fn		5555328	1					
ANR	5555411	Argument	"""VMProc::notify_status_fn"""		5555328	2					
ANR	5555412	PrimaryExpression	"""VMProc::notify_status_fn"""		5555328	0					
ANR	5555413	Argument	this		5555328	3					
ANR	5555414	Identifier	this		5555328	0					
ANR	5555415	IfStatement	if ( m_vmstatus_notify_tid == - 1 )		5555328	7					
ANR	5555416	Condition	m_vmstatus_notify_tid == - 1	675:5:18111:18137	5555328	0	True				
ANR	5555417	EqualityExpression	m_vmstatus_notify_tid == - 1		5555328	0		==			
ANR	5555418	Identifier	m_vmstatus_notify_tid		5555328	0					
ANR	5555419	UnaryOperationExpression	- 1		5555328	1					
ANR	5555420	UnaryOperator	-		5555328	0					
ANR	5555421	PrimaryExpression	1		5555328	1					
ANR	5555422	CompoundStatement		21:35:523:523	5555328	1					
ANR	5555423	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to regiseter timer for vm status Timeout\\n"" )"	676:2:18145:18216	5555328	0	True				
ANR	5555424	CallExpression	"dprintf ( D_ALWAYS , ""Failed to regiseter timer for vm status Timeout\\n"" )"		5555328	0					
ANR	5555425	Callee	dprintf		5555328	0					
ANR	5555426	Identifier	dprintf		5555328	0					
ANR	5555427	ArgumentList	D_ALWAYS		5555328	1					
ANR	5555428	Argument	D_ALWAYS		5555328	0					
ANR	5555429	Identifier	D_ALWAYS		5555328	0					
ANR	5555430	Argument	"""Failed to regiseter timer for vm status Timeout\\n"""		5555328	1					
ANR	5555431	PrimaryExpression	"""Failed to regiseter timer for vm status Timeout\\n"""		5555328	0					
ANR	5555432	Statement	delete	677:2:18220:18225	5555328	1	True				
ANR	5555433	ExpressionStatement	m_status_req	677:9:18227:18239	5555328	2	True				
ANR	5555434	Identifier	m_status_req		5555328	0					
ANR	5555435	ExpressionStatement	m_status_req = NULL	678:2:18243:18262	5555328	3	True				
ANR	5555436	AssignmentExpression	m_status_req = NULL		5555328	0		=			
ANR	5555437	Identifier	m_status_req		5555328	0					
ANR	5555438	Identifier	NULL		5555328	1					
ANR	5555439	ReturnStatement	return ;	679:2:18266:18272	5555328	4	True				
ANR	5555440	ExpressionStatement	m_status_req -> setNotificationTimerId ( m_vmstatus_notify_tid )	682:1:18279:18338	5555328	8	True				
ANR	5555441	CallExpression	m_status_req -> setNotificationTimerId ( m_vmstatus_notify_tid )		5555328	0					
ANR	5555442	Callee	m_status_req -> setNotificationTimerId		5555328	0					
ANR	5555443	PtrMemberAccess	m_status_req -> setNotificationTimerId		5555328	0					
ANR	5555444	Identifier	m_status_req		5555328	0					
ANR	5555445	Identifier	setNotificationTimerId		5555328	1					
ANR	5555446	ArgumentList	m_vmstatus_notify_tid		5555328	1					
ANR	5555447	Argument	m_vmstatus_notify_tid		5555328	0					
ANR	5555448	Identifier	m_vmstatus_notify_tid		5555328	0					
ANR	5555449	IdentifierDeclStatement	int p_result ;	684:1:18342:18354	5555328	9	True				
ANR	5555450	IdentifierDecl	p_result		5555328	0					
ANR	5555451	IdentifierDeclType	int		5555328	0					
ANR	5555452	Identifier	p_result		5555328	1					
ANR	5555453	ExpressionStatement	p_result = m_status_req -> vmStatus ( m_vm_id )	685:1:18357:18399	5555328	10	True				
ANR	5555454	AssignmentExpression	p_result = m_status_req -> vmStatus ( m_vm_id )		5555328	0		=			
ANR	5555455	Identifier	p_result		5555328	0					
ANR	5555456	CallExpression	m_status_req -> vmStatus ( m_vm_id )		5555328	1					
ANR	5555457	Callee	m_status_req -> vmStatus		5555328	0					
ANR	5555458	PtrMemberAccess	m_status_req -> vmStatus		5555328	0					
ANR	5555459	Identifier	m_status_req		5555328	0					
ANR	5555460	Identifier	vmStatus		5555328	1					
ANR	5555461	ArgumentList	m_vm_id		5555328	1					
ANR	5555462	Argument	m_vm_id		5555328	0					
ANR	5555463	Identifier	m_vm_id		5555328	0					
ANR	5555464	IfStatement	if ( p_result == VMGAHP_REQ_COMMAND_PENDING )		5555328	11					
ANR	5555465	Condition	p_result == VMGAHP_REQ_COMMAND_PENDING	687:5:18407:18444	5555328	0	True				
ANR	5555466	EqualityExpression	p_result == VMGAHP_REQ_COMMAND_PENDING		5555328	0		==			
ANR	5555467	Identifier	p_result		5555328	0					
ANR	5555468	Identifier	VMGAHP_REQ_COMMAND_PENDING		5555328	1					
ANR	5555469	CompoundStatement		33:46:830:830	5555328	1					
ANR	5555470	ReturnStatement	return ;	688:2:18452:18458	5555328	0	True				
ANR	5555471	ElseStatement	else		5555328	0					
ANR	5555472	IfStatement	if ( p_result == VMGAHP_REQ_COMMAND_DONE )		5555328	0					
ANR	5555473	Condition	p_result == VMGAHP_REQ_COMMAND_DONE	689:11:18471:18505	5555328	0	True				
ANR	5555474	EqualityExpression	p_result == VMGAHP_REQ_COMMAND_DONE		5555328	0		==			
ANR	5555475	Identifier	p_result		5555328	0					
ANR	5555476	Identifier	VMGAHP_REQ_COMMAND_DONE		5555328	1					
ANR	5555477	CompoundStatement		42:2:1064:1086	5555328	1					
ANR	5555478	ExpressionStatement	m_status_req -> setNotificationTimerId ( - 1 )	690:2:18512:18552	5555328	0	True				
ANR	5555479	CallExpression	m_status_req -> setNotificationTimerId ( - 1 )		5555328	0					
ANR	5555480	Callee	m_status_req -> setNotificationTimerId		5555328	0					
ANR	5555481	PtrMemberAccess	m_status_req -> setNotificationTimerId		5555328	0					
ANR	5555482	Identifier	m_status_req		5555328	0					
ANR	5555483	Identifier	setNotificationTimerId		5555328	1					
ANR	5555484	ArgumentList	- 1		5555328	1					
ANR	5555485	Argument	- 1		5555328	0					
ANR	5555486	UnaryOperationExpression	- 1		5555328	0					
ANR	5555487	UnaryOperator	-		5555328	0					
ANR	5555488	PrimaryExpression	1		5555328	1					
ANR	5555489	IfStatement	if ( m_vmstatus_notify_tid != - 1 )		5555328	1					
ANR	5555490	Condition	m_vmstatus_notify_tid != - 1	691:6:18560:18586	5555328	0	True				
ANR	5555491	EqualityExpression	m_vmstatus_notify_tid != - 1		5555328	0		!=			
ANR	5555492	Identifier	m_vmstatus_notify_tid		5555328	0					
ANR	5555493	UnaryOperationExpression	- 1		5555328	1					
ANR	5555494	UnaryOperator	-		5555328	0					
ANR	5555495	PrimaryExpression	1		5555328	1					
ANR	5555496	CompoundStatement		37:36:972:972	5555328	1					
ANR	5555497	ExpressionStatement	daemonCore -> Cancel_Timer ( m_vmstatus_notify_tid )	692:3:18595:18642	5555328	0	True				
ANR	5555498	CallExpression	daemonCore -> Cancel_Timer ( m_vmstatus_notify_tid )		5555328	0					
ANR	5555499	Callee	daemonCore -> Cancel_Timer		5555328	0					
ANR	5555500	PtrMemberAccess	daemonCore -> Cancel_Timer		5555328	0					
ANR	5555501	Identifier	daemonCore		5555328	0					
ANR	5555502	Identifier	Cancel_Timer		5555328	1					
ANR	5555503	ArgumentList	m_vmstatus_notify_tid		5555328	1					
ANR	5555504	Argument	m_vmstatus_notify_tid		5555328	0					
ANR	5555505	Identifier	m_vmstatus_notify_tid		5555328	0					
ANR	5555506	ExpressionStatement	m_vmstatus_notify_tid = - 1	693:3:18647:18673	5555328	1	True				
ANR	5555507	AssignmentExpression	m_vmstatus_notify_tid = - 1		5555328	0		=			
ANR	5555508	Identifier	m_vmstatus_notify_tid		5555328	0					
ANR	5555509	UnaryOperationExpression	- 1		5555328	1					
ANR	5555510	UnaryOperator	-		5555328	0					
ANR	5555511	PrimaryExpression	1		5555328	1					
ANR	5555512	IdentifierDeclStatement	Gahp_Args * result_args ;	696:2:18682:18704	5555328	2	True				
ANR	5555513	IdentifierDecl	* result_args		5555328	0					
ANR	5555514	IdentifierDeclType	Gahp_Args *		5555328	0					
ANR	5555515	Identifier	result_args		5555328	1					
ANR	5555516	ExpressionStatement	result_args = m_status_req -> getResult ( )	697:2:18708:18747	5555328	3	True				
ANR	5555517	AssignmentExpression	result_args = m_status_req -> getResult ( )		5555328	0		=			
ANR	5555518	Identifier	result_args		5555328	0					
ANR	5555519	CallExpression	m_status_req -> getResult ( )		5555328	1					
ANR	5555520	Callee	m_status_req -> getResult		5555328	0					
ANR	5555521	PtrMemberAccess	m_status_req -> getResult		5555328	0					
ANR	5555522	Identifier	m_status_req		5555328	0					
ANR	5555523	Identifier	getResult		5555328	1					
ANR	5555524	ArgumentList			5555328	1					
ANR	5555525	ExpressionStatement	process_vm_status_result ( result_args )	701:2:18844:18881	5555328	4	True				
ANR	5555526	CallExpression	process_vm_status_result ( result_args )		5555328	0					
ANR	5555527	Callee	process_vm_status_result		5555328	0					
ANR	5555528	Identifier	process_vm_status_result		5555328	0					
ANR	5555529	ArgumentList	result_args		5555328	1					
ANR	5555530	Argument	result_args		5555328	0					
ANR	5555531	Identifier	result_args		5555328	0					
ANR	5555532	IfStatement	if ( m_status_req )		5555328	5					
ANR	5555533	Condition	m_status_req	702:5:18888:18899	5555328	0	True				
ANR	5555534	Identifier	m_status_req		5555328	0					
ANR	5555535	CompoundStatement		48:19:1284:1284	5555328	1					
ANR	5555536	Statement	delete	703:3:18907:18912	5555328	0	True				
ANR	5555537	ExpressionStatement	m_status_req	703:10:18914:18926	5555328	1	True				
ANR	5555538	Identifier	m_status_req		5555328	0					
ANR	5555539	ExpressionStatement	m_status_req = NULL	704:3:18931:18950	5555328	2	True				
ANR	5555540	AssignmentExpression	m_status_req = NULL		5555328	0		=			
ANR	5555541	Identifier	m_status_req		5555328	0					
ANR	5555542	Identifier	NULL		5555328	1					
ANR	5555543	ReturnStatement	return ;	706:2:18958:18964	5555328	6	True				
ANR	5555544	ElseStatement	else		5555328	0					
ANR	5555545	CompoundStatement		53:7:1355:1355	5555328	0					
ANR	5555546	ExpressionStatement	m_status_req -> setNotificationTimerId ( - 1 )	708:2:18977:19017	5555328	0	True				
ANR	5555547	CallExpression	m_status_req -> setNotificationTimerId ( - 1 )		5555328	0					
ANR	5555548	Callee	m_status_req -> setNotificationTimerId		5555328	0					
ANR	5555549	PtrMemberAccess	m_status_req -> setNotificationTimerId		5555328	0					
ANR	5555550	Identifier	m_status_req		5555328	0					
ANR	5555551	Identifier	setNotificationTimerId		5555328	1					
ANR	5555552	ArgumentList	- 1		5555328	1					
ANR	5555553	Argument	- 1		5555328	0					
ANR	5555554	UnaryOperationExpression	- 1		5555328	0					
ANR	5555555	UnaryOperator	-		5555328	0					
ANR	5555556	PrimaryExpression	1		5555328	1					
ANR	5555557	IfStatement	if ( m_vmstatus_notify_tid != - 1 )		5555328	1					
ANR	5555558	Condition	m_vmstatus_notify_tid != - 1	709:6:19025:19051	5555328	0	True				
ANR	5555559	EqualityExpression	m_vmstatus_notify_tid != - 1		5555328	0		!=			
ANR	5555560	Identifier	m_vmstatus_notify_tid		5555328	0					
ANR	5555561	UnaryOperationExpression	- 1		5555328	1					
ANR	5555562	UnaryOperator	-		5555328	0					
ANR	5555563	PrimaryExpression	1		5555328	1					
ANR	5555564	CompoundStatement		55:36:1437:1437	5555328	1					
ANR	5555565	ExpressionStatement	"daemonCore -> Reset_Timer ( m_vmstatus_notify_tid , 0 )"	710:3:19060:19109	5555328	0	True				
ANR	5555566	CallExpression	"daemonCore -> Reset_Timer ( m_vmstatus_notify_tid , 0 )"		5555328	0					
ANR	5555567	Callee	daemonCore -> Reset_Timer		5555328	0					
ANR	5555568	PtrMemberAccess	daemonCore -> Reset_Timer		5555328	0					
ANR	5555569	Identifier	daemonCore		5555328	0					
ANR	5555570	Identifier	Reset_Timer		5555328	1					
ANR	5555571	ArgumentList	m_vmstatus_notify_tid		5555328	1					
ANR	5555572	Argument	m_vmstatus_notify_tid		5555328	0					
ANR	5555573	Identifier	m_vmstatus_notify_tid		5555328	0					
ANR	5555574	Argument	0		5555328	1					
ANR	5555575	PrimaryExpression	0		5555328	0					
ANR	5555576	ElseStatement	else		5555328	0					
ANR	5555577	CompoundStatement		57:8:1501:1501	5555328	0					
ANR	5555578	Statement	delete	712:3:19124:19129	5555328	0	True				
ANR	5555579	ExpressionStatement	m_status_req	712:10:19131:19143	5555328	1	True				
ANR	5555580	Identifier	m_status_req		5555328	0					
ANR	5555581	ExpressionStatement	m_status_req = NULL	713:3:19148:19167	5555328	2	True				
ANR	5555582	AssignmentExpression	m_status_req = NULL		5555328	0		=			
ANR	5555583	Identifier	m_status_req		5555328	0					
ANR	5555584	Identifier	NULL		5555328	1					
ANR	5555585	ReturnStatement	return ;	715:2:19175:19181	5555328	2	True				
ANR	5555586	ReturnStatement	return ;	717:1:19187:19193	5555328	12	True				
ANR	5555587	ReturnType	void		5555328	1					
ANR	5555588	Identifier	VMProc :: CheckStatus		5555328	2					
ANR	5555589	ParameterList			5555328	3					
ANR	5555590	CFGEntryNode	ENTRY		5555328		True				
ANR	5555591	CFGExitNode	EXIT		5555328		True				
ANR	5555592	Symbol	NULL		5555328						
ANR	5555593	Symbol	m_vm_id		5555328						
ANR	5555594	Symbol	this		5555328						
ANR	5555595	Symbol	D_ALWAYS		5555328						
ANR	5555596	Symbol	* m_status_req		5555328						
ANR	5555597	Symbol	result_args		5555328						
ANR	5555598	Symbol	m_status_req		5555328						
ANR	5555599	Symbol	p_result		5555328						
ANR	5555600	Symbol	VMGahpRequest :: NORMAL		5555328						
ANR	5555601	Symbol	VMGAHP_REQ_COMMAND_PENDING		5555328						
ANR	5555602	Symbol	VMGAHP_REQ_COMMAND_DONE		5555328						
ANR	5555603	Symbol	& VMProc :: notify_status_fn		5555328						
ANR	5555604	Symbol	* daemonCore		5555328						
ANR	5555605	Symbol	m_vmgahp		5555328						
ANR	5555606	Symbol	daemonCore		5555328						
ANR	5555607	Symbol	daemonCore -> Register_Timer		5555328						
ANR	5555608	Symbol	m_vmstatus_interval		5555328						
ANR	5555609	Symbol	m_status_req -> vmStatus		5555328						
ANR	5555610	Symbol	m_status_req -> getResult		5555328						
ANR	5555611	Symbol	m_vmstatus_notify_tid		5555328						
ANR	5555612	Function	VMProc :: JobReaper	720:0:19198:19480							
ANR	5555613	FunctionDef	"VMProc :: JobReaper (int pid , int status)"		5555612	0					
ANR	5555614	CompoundStatement		722:0:19242:19480	5555612	0					
ANR	5555615	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Inside VMProc::JobReaper()\\n"" )"	723:1:19245:19296	5555612	0	True				
ANR	5555616	CallExpression	"dprintf ( D_FULLDEBUG , ""Inside VMProc::JobReaper()\\n"" )"		5555612	0					
ANR	5555617	Callee	dprintf		5555612	0					
ANR	5555618	Identifier	dprintf		5555612	0					
ANR	5555619	ArgumentList	D_FULLDEBUG		5555612	1					
ANR	5555620	Argument	D_FULLDEBUG		5555612	0					
ANR	5555621	Identifier	D_FULLDEBUG		5555612	0					
ANR	5555622	Argument	"""Inside VMProc::JobReaper()\\n"""		5555612	1					
ANR	5555623	PrimaryExpression	"""Inside VMProc::JobReaper()\\n"""		5555612	0					
ANR	5555624	ExpressionStatement	cleanup ( )	727:1:19384:19393	5555612	1	True				
ANR	5555625	CallExpression	cleanup ( )		5555612	0					
ANR	5555626	Callee	cleanup		5555612	0					
ANR	5555627	Identifier	cleanup		5555612	0					
ANR	5555628	ArgumentList			5555612	1					
ANR	5555629	ReturnStatement	"return OsProc :: JobReaper ( pid , status ) ;"	730:1:19439:19478	5555612	2	True				
ANR	5555630	CallExpression	"OsProc :: JobReaper ( pid , status )"		5555612	0					
ANR	5555631	Callee	OsProc :: JobReaper		5555612	0					
ANR	5555632	Identifier	OsProc :: JobReaper		5555612	0					
ANR	5555633	ArgumentList	pid		5555612	1					
ANR	5555634	Argument	pid		5555612	0					
ANR	5555635	Identifier	pid		5555612	0					
ANR	5555636	Argument	status		5555612	1					
ANR	5555637	Identifier	status		5555612	0					
ANR	5555638	ReturnType	bool		5555612	1					
ANR	5555639	Identifier	VMProc :: JobReaper		5555612	2					
ANR	5555640	ParameterList	"int pid , int status"		5555612	3					
ANR	5555641	Parameter	int pid	721:18:19221:19227	5555612	0	True				
ANR	5555642	ParameterType	int		5555612	0					
ANR	5555643	Identifier	pid		5555612	1					
ANR	5555644	Parameter	int status	721:27:19230:19239	5555612	1	True				
ANR	5555645	ParameterType	int		5555612	0					
ANR	5555646	Identifier	status		5555612	1					
ANR	5555647	CFGEntryNode	ENTRY		5555612		True				
ANR	5555648	CFGExitNode	EXIT		5555612		True				
ANR	5555649	Symbol	OsProc :: JobReaper		5555612						
ANR	5555650	Symbol	pid		5555612						
ANR	5555651	Symbol	D_FULLDEBUG		5555612						
ANR	5555652	Symbol	status		5555612						
ANR	5555653	Function	VMProc :: JobExit	733:0:19483:19639							
ANR	5555654	FunctionDef	VMProc :: JobExit ()		5555653	0					
ANR	5555655	CompoundStatement		735:0:19510:19639	5555653	0					
ANR	5555656	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Inside VMProc::JobExit()\\n"" )"	736:1:19513:19562	5555653	0	True				
ANR	5555657	CallExpression	"dprintf ( D_FULLDEBUG , ""Inside VMProc::JobExit()\\n"" )"		5555653	0					
ANR	5555658	Callee	dprintf		5555653	0					
ANR	5555659	Identifier	dprintf		5555653	0					
ANR	5555660	ArgumentList	D_FULLDEBUG		5555653	1					
ANR	5555661	Argument	D_FULLDEBUG		5555653	0					
ANR	5555662	Identifier	D_FULLDEBUG		5555653	0					
ANR	5555663	Argument	"""Inside VMProc::JobExit()\\n"""		5555653	1					
ANR	5555664	PrimaryExpression	"""Inside VMProc::JobExit()\\n"""		5555653	0					
ANR	5555665	ReturnStatement	return OsProc :: JobExit ( ) ;	739:1:19613:19637	5555653	1	True				
ANR	5555666	CallExpression	OsProc :: JobExit ( )		5555653	0					
ANR	5555667	Callee	OsProc :: JobExit		5555653	0					
ANR	5555668	Identifier	OsProc :: JobExit		5555653	0					
ANR	5555669	ArgumentList			5555653	1					
ANR	5555670	ReturnType	bool		5555653	1					
ANR	5555671	Identifier	VMProc :: JobExit		5555653	2					
ANR	5555672	ParameterList			5555653	3					
ANR	5555673	CFGEntryNode	ENTRY		5555653		True				
ANR	5555674	CFGExitNode	EXIT		5555653		True				
ANR	5555675	Symbol	OsProc :: JobExit		5555653						
ANR	5555676	Symbol	D_FULLDEBUG		5555653						
ANR	5555677	Function	VMProc :: Suspend	742:0:19642:21495							
ANR	5555678	FunctionDef	VMProc :: Suspend ()		5555677	0					
ANR	5555679	CompoundStatement		744:0:19665:21495	5555677	0					
ANR	5555680	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Inside VMProc::Suspend()\\n"" )"	745:1:19668:19717	5555677	0	True				
ANR	5555681	CallExpression	"dprintf ( D_FULLDEBUG , ""Inside VMProc::Suspend()\\n"" )"		5555677	0					
ANR	5555682	Callee	dprintf		5555677	0					
ANR	5555683	Identifier	dprintf		5555677	0					
ANR	5555684	ArgumentList	D_FULLDEBUG		5555677	1					
ANR	5555685	Argument	D_FULLDEBUG		5555677	0					
ANR	5555686	Identifier	D_FULLDEBUG		5555677	0					
ANR	5555687	Argument	"""Inside VMProc::Suspend()\\n"""		5555677	1					
ANR	5555688	PrimaryExpression	"""Inside VMProc::Suspend()\\n"""		5555677	0					
ANR	5555689	IfStatement	if ( ! m_vm_id || ! m_vmgahp )		5555677	1					
ANR	5555690	Condition	! m_vm_id || ! m_vmgahp	747:5:19725:19745	5555677	0	True				
ANR	5555691	OrExpression	! m_vm_id || ! m_vmgahp		5555677	0		||			
ANR	5555692	UnaryOperationExpression	! m_vm_id		5555677	0					
ANR	5555693	UnaryOperator	!		5555677	0					
ANR	5555694	Identifier	m_vm_id		5555677	1					
ANR	5555695	UnaryOperationExpression	! m_vmgahp		5555677	1					
ANR	5555696	UnaryOperator	!		5555677	0					
ANR	5555697	Identifier	m_vmgahp		5555677	1					
ANR	5555698	CompoundStatement		4:29:83:83	5555677	1					
ANR	5555699	ReturnStatement	return ;	748:2:19753:19759	5555677	0	True				
ANR	5555700	IfStatement	if ( is_suspended )		5555677	2					
ANR	5555701	Condition	is_suspended	751:5:19770:19781	5555677	0	True				
ANR	5555702	Identifier	is_suspended		5555677	0					
ANR	5555703	CompoundStatement		8:20:119:119	5555677	1					
ANR	5555704	IfStatement	if ( is_checkpointed )		5555677	0					
ANR	5555705	Condition	is_checkpointed	753:6:19822:19836	5555677	0	True				
ANR	5555706	Identifier	is_checkpointed		5555677	0					
ANR	5555707	CompoundStatement		10:24:174:174	5555677	1					
ANR	5555708	ExpressionStatement	m_is_soft_suspended = false	755:3:19878:19905	5555677	0	True				
ANR	5555709	AssignmentExpression	m_is_soft_suspended = false		5555677	0		=			
ANR	5555710	Identifier	m_is_soft_suspended		5555677	0					
ANR	5555711	Identifier	false		5555677	1					
ANR	5555712	ExpressionStatement	is_checkpointed = false	756:3:19910:19933	5555677	1	True				
ANR	5555713	AssignmentExpression	is_checkpointed = false		5555677	0		=			
ANR	5555714	Identifier	is_checkpointed		5555677	0					
ANR	5555715	Identifier	false		5555677	1					
ANR	5555716	ReturnStatement	return ;	758:2:19941:19947	5555677	1	True				
ANR	5555717	IdentifierDeclStatement	VMGahpRequest * new_req = new VMGahpRequest ( m_vmgahp ) ;	761:1:19954:20006	5555677	3	True				
ANR	5555718	IdentifierDecl	* new_req = new VMGahpRequest ( m_vmgahp )		5555677	0					
ANR	5555719	IdentifierDeclType	VMGahpRequest *		5555677	0					
ANR	5555720	Identifier	new_req		5555677	1					
ANR	5555721	AssignmentExpression	* new_req = new VMGahpRequest ( m_vmgahp )		5555677	2		=			
ANR	5555722	Identifier	m_vmgahp		5555677	0					
ANR	5555723	Identifier	m_vmgahp		5555677	1					
ANR	5555724	ExpressionStatement	ASSERT ( new_req )	762:1:20009:20024	5555677	4	True				
ANR	5555725	CallExpression	ASSERT ( new_req )		5555677	0					
ANR	5555726	Callee	ASSERT		5555677	0					
ANR	5555727	Identifier	ASSERT		5555677	0					
ANR	5555728	ArgumentList	new_req		5555677	1					
ANR	5555729	Argument	new_req		5555677	0					
ANR	5555730	Identifier	new_req		5555677	0					
ANR	5555731	ExpressionStatement	new_req -> setMode ( VMGahpRequest :: BLOCKING )	764:1:20028:20069	5555677	5	True				
ANR	5555732	CallExpression	new_req -> setMode ( VMGahpRequest :: BLOCKING )		5555677	0					
ANR	5555733	Callee	new_req -> setMode		5555677	0					
ANR	5555734	PtrMemberAccess	new_req -> setMode		5555677	0					
ANR	5555735	Identifier	new_req		5555677	0					
ANR	5555736	Identifier	setMode		5555677	1					
ANR	5555737	ArgumentList	VMGahpRequest :: BLOCKING		5555677	1					
ANR	5555738	Argument	VMGahpRequest :: BLOCKING		5555677	0					
ANR	5555739	Identifier	VMGahpRequest :: BLOCKING		5555677	0					
ANR	5555740	ExpressionStatement	new_req -> setTimeout ( m_vmoperation_timeout )	765:1:20072:20114	5555677	6	True				
ANR	5555741	CallExpression	new_req -> setTimeout ( m_vmoperation_timeout )		5555677	0					
ANR	5555742	Callee	new_req -> setTimeout		5555677	0					
ANR	5555743	PtrMemberAccess	new_req -> setTimeout		5555677	0					
ANR	5555744	Identifier	new_req		5555677	0					
ANR	5555745	Identifier	setTimeout		5555677	1					
ANR	5555746	ArgumentList	m_vmoperation_timeout		5555677	1					
ANR	5555747	Argument	m_vmoperation_timeout		5555677	0					
ANR	5555748	Identifier	m_vmoperation_timeout		5555677	0					
ANR	5555749	IdentifierDeclStatement	int p_result ;	767:1:20118:20130	5555677	7	True				
ANR	5555750	IdentifierDecl	p_result		5555677	0					
ANR	5555751	IdentifierDeclType	int		5555677	0					
ANR	5555752	Identifier	p_result		5555677	1					
ANR	5555753	IfStatement	if ( m_use_soft_suspend )		5555677	8					
ANR	5555754	Condition	m_use_soft_suspend	768:5:20137:20154	5555677	0	True				
ANR	5555755	Identifier	m_use_soft_suspend		5555677	0					
ANR	5555756	CompoundStatement		25:26:492:492	5555677	1					
ANR	5555757	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Calling Soft Suspend in VMProc::Suspend()\\n"" )"	769:2:20162:20228	5555677	0	True				
ANR	5555758	CallExpression	"dprintf ( D_FULLDEBUG , ""Calling Soft Suspend in VMProc::Suspend()\\n"" )"		5555677	0					
ANR	5555759	Callee	dprintf		5555677	0					
ANR	5555760	Identifier	dprintf		5555677	0					
ANR	5555761	ArgumentList	D_FULLDEBUG		5555677	1					
ANR	5555762	Argument	D_FULLDEBUG		5555677	0					
ANR	5555763	Identifier	D_FULLDEBUG		5555677	0					
ANR	5555764	Argument	"""Calling Soft Suspend in VMProc::Suspend()\\n"""		5555677	1					
ANR	5555765	PrimaryExpression	"""Calling Soft Suspend in VMProc::Suspend()\\n"""		5555677	0					
ANR	5555766	ExpressionStatement	p_result = new_req -> vmSoftSuspend ( m_vm_id )	770:2:20232:20274	5555677	1	True				
ANR	5555767	AssignmentExpression	p_result = new_req -> vmSoftSuspend ( m_vm_id )		5555677	0		=			
ANR	5555768	Identifier	p_result		5555677	0					
ANR	5555769	CallExpression	new_req -> vmSoftSuspend ( m_vm_id )		5555677	1					
ANR	5555770	Callee	new_req -> vmSoftSuspend		5555677	0					
ANR	5555771	PtrMemberAccess	new_req -> vmSoftSuspend		5555677	0					
ANR	5555772	Identifier	new_req		5555677	0					
ANR	5555773	Identifier	vmSoftSuspend		5555677	1					
ANR	5555774	ArgumentList	m_vm_id		5555677	1					
ANR	5555775	Argument	m_vm_id		5555677	0					
ANR	5555776	Identifier	m_vm_id		5555677	0					
ANR	5555777	ElseStatement	else		5555677	0					
ANR	5555778	CompoundStatement		28:7:617:617	5555677	0					
ANR	5555779	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Calling Hard Suspend in VMProc::Suspend()\\n"" )"	772:2:20287:20353	5555677	0	True				
ANR	5555780	CallExpression	"dprintf ( D_FULLDEBUG , ""Calling Hard Suspend in VMProc::Suspend()\\n"" )"		5555677	0					
ANR	5555781	Callee	dprintf		5555677	0					
ANR	5555782	Identifier	dprintf		5555677	0					
ANR	5555783	ArgumentList	D_FULLDEBUG		5555677	1					
ANR	5555784	Argument	D_FULLDEBUG		5555677	0					
ANR	5555785	Identifier	D_FULLDEBUG		5555677	0					
ANR	5555786	Argument	"""Calling Hard Suspend in VMProc::Suspend()\\n"""		5555677	1					
ANR	5555787	PrimaryExpression	"""Calling Hard Suspend in VMProc::Suspend()\\n"""		5555677	0					
ANR	5555788	ExpressionStatement	p_result = new_req -> vmSuspend ( m_vm_id )	773:2:20357:20395	5555677	1	True				
ANR	5555789	AssignmentExpression	p_result = new_req -> vmSuspend ( m_vm_id )		5555677	0		=			
ANR	5555790	Identifier	p_result		5555677	0					
ANR	5555791	CallExpression	new_req -> vmSuspend ( m_vm_id )		5555677	1					
ANR	5555792	Callee	new_req -> vmSuspend		5555677	0					
ANR	5555793	PtrMemberAccess	new_req -> vmSuspend		5555677	0					
ANR	5555794	Identifier	new_req		5555677	0					
ANR	5555795	Identifier	vmSuspend		5555677	1					
ANR	5555796	ArgumentList	m_vm_id		5555677	1					
ANR	5555797	Argument	m_vm_id		5555677	0					
ANR	5555798	Identifier	m_vm_id		5555677	0					
ANR	5555799	IfStatement	if ( p_result != VMGAHP_REQ_COMMAND_DONE )		5555677	9					
ANR	5555800	Condition	p_result != VMGAHP_REQ_COMMAND_DONE	777:4:20480:20514	5555677	0	True				
ANR	5555801	EqualityExpression	p_result != VMGAHP_REQ_COMMAND_DONE		5555677	0		!=			
ANR	5555802	Identifier	p_result		5555677	0					
ANR	5555803	Identifier	VMGAHP_REQ_COMMAND_DONE		5555677	1					
ANR	5555804	CompoundStatement		34:41:851:851	5555677	1					
ANR	5555805	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to suspend the VM\\n"" )"	778:2:20521:20568	5555677	0	True				
ANR	5555806	CallExpression	"dprintf ( D_ALWAYS , ""Failed to suspend the VM\\n"" )"		5555677	0					
ANR	5555807	Callee	dprintf		5555677	0					
ANR	5555808	Identifier	dprintf		5555677	0					
ANR	5555809	ArgumentList	D_ALWAYS		5555677	1					
ANR	5555810	Argument	D_ALWAYS		5555677	0					
ANR	5555811	Identifier	D_ALWAYS		5555677	0					
ANR	5555812	Argument	"""Failed to suspend the VM\\n"""		5555677	1					
ANR	5555813	PrimaryExpression	"""Failed to suspend the VM\\n"""		5555677	0					
ANR	5555814	ExpressionStatement	m_vmgahp -> printSystemErrorMsg ( )	779:2:20572:20603	5555677	1	True				
ANR	5555815	CallExpression	m_vmgahp -> printSystemErrorMsg ( )		5555677	0					
ANR	5555816	Callee	m_vmgahp -> printSystemErrorMsg		5555677	0					
ANR	5555817	PtrMemberAccess	m_vmgahp -> printSystemErrorMsg		5555677	0					
ANR	5555818	Identifier	m_vmgahp		5555677	0					
ANR	5555819	Identifier	printSystemErrorMsg		5555677	1					
ANR	5555820	ArgumentList			5555677	1					
ANR	5555821	Statement	delete	780:2:20607:20612	5555677	2	True				
ANR	5555822	ExpressionStatement	new_req	780:9:20614:20621	5555677	3	True				
ANR	5555823	Identifier	new_req		5555677	0					
ANR	5555824	ExpressionStatement	internalVMGahpError ( )	781:2:20625:20646	5555677	4	True				
ANR	5555825	CallExpression	internalVMGahpError ( )		5555677	0					
ANR	5555826	Callee	internalVMGahpError		5555677	0					
ANR	5555827	Identifier	internalVMGahpError		5555677	0					
ANR	5555828	ArgumentList			5555677	1					
ANR	5555829	ReturnStatement	return ;	782:2:20650:20656	5555677	5	True				
ANR	5555830	IdentifierDeclStatement	MyString gahpmsg ;	785:1:20663:20679	5555677	10	True				
ANR	5555831	IdentifierDecl	gahpmsg		5555677	0					
ANR	5555832	IdentifierDeclType	MyString		5555677	0					
ANR	5555833	Identifier	gahpmsg		5555677	1					
ANR	5555834	IfStatement	if ( new_req -> checkResult ( gahpmsg ) == false )		5555677	11					
ANR	5555835	Condition	new_req -> checkResult ( gahpmsg ) == false	786:5:20686:20723	5555677	0	True				
ANR	5555836	EqualityExpression	new_req -> checkResult ( gahpmsg ) == false		5555677	0		==			
ANR	5555837	CallExpression	new_req -> checkResult ( gahpmsg )		5555677	0					
ANR	5555838	Callee	new_req -> checkResult		5555677	0					
ANR	5555839	PtrMemberAccess	new_req -> checkResult		5555677	0					
ANR	5555840	Identifier	new_req		5555677	0					
ANR	5555841	Identifier	checkResult		5555677	1					
ANR	5555842	ArgumentList	gahpmsg		5555677	1					
ANR	5555843	Argument	gahpmsg		5555677	0					
ANR	5555844	Identifier	gahpmsg		5555677	0					
ANR	5555845	Identifier	false		5555677	1					
ANR	5555846	CompoundStatement		43:46:1061:1061	5555677	1					
ANR	5555847	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to suspend the VM(%s)"" , gahpmsg . Value ( ) )"	787:2:20731:20797	5555677	0	True				
ANR	5555848	CallExpression	"dprintf ( D_ALWAYS , ""Failed to suspend the VM(%s)"" , gahpmsg . Value ( ) )"		5555677	0					
ANR	5555849	Callee	dprintf		5555677	0					
ANR	5555850	Identifier	dprintf		5555677	0					
ANR	5555851	ArgumentList	D_ALWAYS		5555677	1					
ANR	5555852	Argument	D_ALWAYS		5555677	0					
ANR	5555853	Identifier	D_ALWAYS		5555677	0					
ANR	5555854	Argument	"""Failed to suspend the VM(%s)"""		5555677	1					
ANR	5555855	PrimaryExpression	"""Failed to suspend the VM(%s)"""		5555677	0					
ANR	5555856	Argument	gahpmsg . Value ( )		5555677	2					
ANR	5555857	CallExpression	gahpmsg . Value ( )		5555677	0					
ANR	5555858	Callee	gahpmsg . Value		5555677	0					
ANR	5555859	MemberAccess	gahpmsg . Value		5555677	0					
ANR	5555860	Identifier	gahpmsg		5555677	0					
ANR	5555861	Identifier	Value		5555677	1					
ANR	5555862	ArgumentList			5555677	1					
ANR	5555863	ExpressionStatement	m_vmgahp -> printSystemErrorMsg ( )	788:2:20801:20832	5555677	1	True				
ANR	5555864	CallExpression	m_vmgahp -> printSystemErrorMsg ( )		5555677	0					
ANR	5555865	Callee	m_vmgahp -> printSystemErrorMsg		5555677	0					
ANR	5555866	PtrMemberAccess	m_vmgahp -> printSystemErrorMsg		5555677	0					
ANR	5555867	Identifier	m_vmgahp		5555677	0					
ANR	5555868	Identifier	printSystemErrorMsg		5555677	1					
ANR	5555869	ArgumentList			5555677	1					
ANR	5555870	Statement	delete	789:2:20836:20841	5555677	2	True				
ANR	5555871	ExpressionStatement	new_req	789:9:20843:20850	5555677	3	True				
ANR	5555872	Identifier	new_req		5555677	0					
ANR	5555873	IfStatement	"if ( strcmp ( gahpmsg . Value ( ) , VMGAHP_ERR_VM_NO_SUPPORT_SUSPEND ) )"		5555677	4					
ANR	5555874	Condition	"strcmp ( gahpmsg . Value ( ) , VMGAHP_ERR_VM_NO_SUPPORT_SUSPEND )"	791:6:20859:20915	5555677	0	True				
ANR	5555875	CallExpression	"strcmp ( gahpmsg . Value ( ) , VMGAHP_ERR_VM_NO_SUPPORT_SUSPEND )"		5555677	0					
ANR	5555876	Callee	strcmp		5555677	0					
ANR	5555877	Identifier	strcmp		5555677	0					
ANR	5555878	ArgumentList	gahpmsg . Value ( )		5555677	1					
ANR	5555879	Argument	gahpmsg . Value ( )		5555677	0					
ANR	5555880	CallExpression	gahpmsg . Value ( )		5555677	0					
ANR	5555881	Callee	gahpmsg . Value		5555677	0					
ANR	5555882	MemberAccess	gahpmsg . Value		5555677	0					
ANR	5555883	Identifier	gahpmsg		5555677	0					
ANR	5555884	Identifier	Value		5555677	1					
ANR	5555885	ArgumentList			5555677	1					
ANR	5555886	Argument	VMGAHP_ERR_VM_NO_SUPPORT_SUSPEND		5555677	1					
ANR	5555887	Identifier	VMGAHP_ERR_VM_NO_SUPPORT_SUSPEND		5555677	0					
ANR	5555888	CompoundStatement		48:66:1253:1253	5555677	1					
ANR	5555889	IfStatement	if ( m_vmstatus_tid != - 1 )		5555677	0					
ANR	5555890	Condition	m_vmstatus_tid != - 1	794:7:21021:21040	5555677	0	True				
ANR	5555891	EqualityExpression	m_vmstatus_tid != - 1		5555677	0		!=			
ANR	5555892	Identifier	m_vmstatus_tid		5555677	0					
ANR	5555893	UnaryOperationExpression	- 1		5555677	1					
ANR	5555894	UnaryOperator	-		5555677	0					
ANR	5555895	PrimaryExpression	1		5555677	1					
ANR	5555896	CompoundStatement		51:30:1378:1378	5555677	1					
ANR	5555897	ExpressionStatement	"daemonCore -> Reset_Timer ( m_vmstatus_tid , 0 , m_vmstatus_interval )"	795:4:21050:21113	5555677	0	True				
ANR	5555898	CallExpression	"daemonCore -> Reset_Timer ( m_vmstatus_tid , 0 , m_vmstatus_interval )"		5555677	0					
ANR	5555899	Callee	daemonCore -> Reset_Timer		5555677	0					
ANR	5555900	PtrMemberAccess	daemonCore -> Reset_Timer		5555677	0					
ANR	5555901	Identifier	daemonCore		5555677	0					
ANR	5555902	Identifier	Reset_Timer		5555677	1					
ANR	5555903	ArgumentList	m_vmstatus_tid		5555677	1					
ANR	5555904	Argument	m_vmstatus_tid		5555677	0					
ANR	5555905	Identifier	m_vmstatus_tid		5555677	0					
ANR	5555906	Argument	0		5555677	1					
ANR	5555907	PrimaryExpression	0		5555677	0					
ANR	5555908	Argument	m_vmstatus_interval		5555677	2					
ANR	5555909	Identifier	m_vmstatus_interval		5555677	0					
ANR	5555910	ReturnStatement	return ;	798:2:21126:21132	5555677	5	True				
ANR	5555911	Statement	delete	800:1:21138:21143	5555677	12	True				
ANR	5555912	ExpressionStatement	new_req	800:8:21145:21152	5555677	13	True				
ANR	5555913	Identifier	new_req		5555677	0					
ANR	5555914	ExpressionStatement	new_req = NULL	801:1:21155:21169	5555677	14	True				
ANR	5555915	AssignmentExpression	new_req = NULL		5555677	0		=			
ANR	5555916	Identifier	new_req		5555677	0					
ANR	5555917	Identifier	NULL		5555677	1					
ANR	5555918	IfStatement	if ( ! m_use_soft_suspend )		5555677	15					
ANR	5555919	Condition	! m_use_soft_suspend	803:5:21177:21195	5555677	0	True				
ANR	5555920	UnaryOperationExpression	! m_use_soft_suspend		5555677	0					
ANR	5555921	UnaryOperator	!		5555677	0					
ANR	5555922	Identifier	m_use_soft_suspend		5555677	1					
ANR	5555923	CompoundStatement		60:27:1533:1533	5555677	1					
ANR	5555924	ExpressionStatement	sync ( )	806:2:21264:21270	5555677	0	True				
ANR	5555925	CallExpression	sync ( )		5555677	0					
ANR	5555926	Callee	sync		5555677	0					
ANR	5555927	Identifier	sync		5555677	0					
ANR	5555928	ArgumentList			5555677	1					
ANR	5555929	ExpressionStatement	setVMPID ( 0 )	810:2:21334:21345	5555677	1	True				
ANR	5555930	CallExpression	setVMPID ( 0 )		5555677	0					
ANR	5555931	Callee	setVMPID		5555677	0					
ANR	5555932	Identifier	setVMPID		5555677	0					
ANR	5555933	ArgumentList	0		5555677	1					
ANR	5555934	Argument	0		5555677	0					
ANR	5555935	PrimaryExpression	0		5555677	0					
ANR	5555936	ExpressionStatement	is_suspended = true	814:1:21395:21414	5555677	16	True				
ANR	5555937	AssignmentExpression	is_suspended = true		5555677	0		=			
ANR	5555938	Identifier	is_suspended		5555677	0					
ANR	5555939	Identifier	true		5555677	1					
ANR	5555940	ExpressionStatement	m_is_soft_suspended = m_use_soft_suspend	815:1:21417:21457	5555677	17	True				
ANR	5555941	AssignmentExpression	m_is_soft_suspended = m_use_soft_suspend		5555677	0		=			
ANR	5555942	Identifier	m_is_soft_suspended		5555677	0					
ANR	5555943	Identifier	m_use_soft_suspend		5555677	1					
ANR	5555944	ExpressionStatement	is_checkpointed = false	816:1:21460:21483	5555677	18	True				
ANR	5555945	AssignmentExpression	is_checkpointed = false		5555677	0		=			
ANR	5555946	Identifier	is_checkpointed		5555677	0					
ANR	5555947	Identifier	false		5555677	1					
ANR	5555948	ReturnStatement	return ;	818:1:21487:21493	5555677	19	True				
ANR	5555949	ReturnType	void		5555677	1					
ANR	5555950	Identifier	VMProc :: Suspend		5555677	2					
ANR	5555951	ParameterList			5555677	3					
ANR	5555952	CFGEntryNode	ENTRY		5555677		True				
ANR	5555953	CFGExitNode	EXIT		5555677		True				
ANR	5555954	Symbol	m_vm_id		5555677						
ANR	5555955	Symbol	is_suspended		5555677						
ANR	5555956	Symbol	gahpmsg		5555677						
ANR	5555957	Symbol	p_result		5555677						
ANR	5555958	Symbol	VMGAHP_REQ_COMMAND_DONE		5555677						
ANR	5555959	Symbol	new_req -> checkResult		5555677						
ANR	5555960	Symbol	is_checkpointed		5555677						
ANR	5555961	Symbol	m_vmstatus_tid		5555677						
ANR	5555962	Symbol	daemonCore		5555677						
ANR	5555963	Symbol	m_use_soft_suspend		5555677						
ANR	5555964	Symbol	strcmp		5555677						
ANR	5555965	Symbol	VMGahpRequest :: BLOCKING		5555677						
ANR	5555966	Symbol	new_req -> vmSuspend		5555677						
ANR	5555967	Symbol	NULL		5555677						
ANR	5555968	Symbol	false		5555677						
ANR	5555969	Symbol	D_ALWAYS		5555677						
ANR	5555970	Symbol	* new_req		5555677						
ANR	5555971	Symbol	D_FULLDEBUG		5555677						
ANR	5555972	Symbol	gahpmsg . Value		5555677						
ANR	5555973	Symbol	new_req -> vmSoftSuspend		5555677						
ANR	5555974	Symbol	m_vmoperation_timeout		5555677						
ANR	5555975	Symbol	VMGAHP_ERR_VM_NO_SUPPORT_SUSPEND		5555677						
ANR	5555976	Symbol	m_vmgahp		5555677						
ANR	5555977	Symbol	m_is_soft_suspended		5555677						
ANR	5555978	Symbol	true		5555677						
ANR	5555979	Symbol	m_vmstatus_interval		5555677						
ANR	5555980	Symbol	new_req		5555677						
ANR	5555981	Function	VMProc :: Continue	821:0:21498:22664							
ANR	5555982	FunctionDef	VMProc :: Continue ()		5555981	0					
ANR	5555983	CompoundStatement		823:0:21522:22664	5555981	0					
ANR	5555984	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Inside VMProc::Continue()\\n"" )"	824:1:21525:21575	5555981	0	True				
ANR	5555985	CallExpression	"dprintf ( D_FULLDEBUG , ""Inside VMProc::Continue()\\n"" )"		5555981	0					
ANR	5555986	Callee	dprintf		5555981	0					
ANR	5555987	Identifier	dprintf		5555981	0					
ANR	5555988	ArgumentList	D_FULLDEBUG		5555981	1					
ANR	5555989	Argument	D_FULLDEBUG		5555981	0					
ANR	5555990	Identifier	D_FULLDEBUG		5555981	0					
ANR	5555991	Argument	"""Inside VMProc::Continue()\\n"""		5555981	1					
ANR	5555992	PrimaryExpression	"""Inside VMProc::Continue()\\n"""		5555981	0					
ANR	5555993	IfStatement	if ( ! m_vm_id || ! m_vmgahp )		5555981	1					
ANR	5555994	Condition	! m_vm_id || ! m_vmgahp	826:5:21583:21603	5555981	0	True				
ANR	5555995	OrExpression	! m_vm_id || ! m_vmgahp		5555981	0		||			
ANR	5555996	UnaryOperationExpression	! m_vm_id		5555981	0					
ANR	5555997	UnaryOperator	!		5555981	0					
ANR	5555998	Identifier	m_vm_id		5555981	1					
ANR	5555999	UnaryOperationExpression	! m_vmgahp		5555981	1					
ANR	5556000	UnaryOperator	!		5555981	0					
ANR	5556001	Identifier	m_vmgahp		5555981	1					
ANR	5556002	CompoundStatement		4:29:84:84	5555981	1					
ANR	5556003	ReturnStatement	return ;	827:2:21611:21617	5555981	0	True				
ANR	5556004	IdentifierDeclStatement	VMGahpRequest * new_req = new VMGahpRequest ( m_vmgahp ) ;	830:1:21624:21676	5555981	2	True				
ANR	5556005	IdentifierDecl	* new_req = new VMGahpRequest ( m_vmgahp )		5555981	0					
ANR	5556006	IdentifierDeclType	VMGahpRequest *		5555981	0					
ANR	5556007	Identifier	new_req		5555981	1					
ANR	5556008	AssignmentExpression	* new_req = new VMGahpRequest ( m_vmgahp )		5555981	2		=			
ANR	5556009	Identifier	m_vmgahp		5555981	0					
ANR	5556010	Identifier	m_vmgahp		5555981	1					
ANR	5556011	ExpressionStatement	ASSERT ( new_req )	831:1:21679:21694	5555981	3	True				
ANR	5556012	CallExpression	ASSERT ( new_req )		5555981	0					
ANR	5556013	Callee	ASSERT		5555981	0					
ANR	5556014	Identifier	ASSERT		5555981	0					
ANR	5556015	ArgumentList	new_req		5555981	1					
ANR	5556016	Argument	new_req		5555981	0					
ANR	5556017	Identifier	new_req		5555981	0					
ANR	5556018	ExpressionStatement	new_req -> setMode ( VMGahpRequest :: BLOCKING )	832:1:21697:21738	5555981	4	True				
ANR	5556019	CallExpression	new_req -> setMode ( VMGahpRequest :: BLOCKING )		5555981	0					
ANR	5556020	Callee	new_req -> setMode		5555981	0					
ANR	5556021	PtrMemberAccess	new_req -> setMode		5555981	0					
ANR	5556022	Identifier	new_req		5555981	0					
ANR	5556023	Identifier	setMode		5555981	1					
ANR	5556024	ArgumentList	VMGahpRequest :: BLOCKING		5555981	1					
ANR	5556025	Argument	VMGahpRequest :: BLOCKING		5555981	0					
ANR	5556026	Identifier	VMGahpRequest :: BLOCKING		5555981	0					
ANR	5556027	ExpressionStatement	new_req -> setTimeout ( m_vmoperation_timeout )	833:1:21741:21783	5555981	5	True				
ANR	5556028	CallExpression	new_req -> setTimeout ( m_vmoperation_timeout )		5555981	0					
ANR	5556029	Callee	new_req -> setTimeout		5555981	0					
ANR	5556030	PtrMemberAccess	new_req -> setTimeout		5555981	0					
ANR	5556031	Identifier	new_req		5555981	0					
ANR	5556032	Identifier	setTimeout		5555981	1					
ANR	5556033	ArgumentList	m_vmoperation_timeout		5555981	1					
ANR	5556034	Argument	m_vmoperation_timeout		5555981	0					
ANR	5556035	Identifier	m_vmoperation_timeout		5555981	0					
ANR	5556036	IdentifierDeclStatement	int p_result ;	835:1:21787:21799	5555981	6	True				
ANR	5556037	IdentifierDecl	p_result		5555981	0					
ANR	5556038	IdentifierDeclType	int		5555981	0					
ANR	5556039	Identifier	p_result		5555981	1					
ANR	5556040	ExpressionStatement	p_result = new_req -> vmResume ( m_vm_id )	836:1:21802:21839	5555981	7	True				
ANR	5556041	AssignmentExpression	p_result = new_req -> vmResume ( m_vm_id )		5555981	0		=			
ANR	5556042	Identifier	p_result		5555981	0					
ANR	5556043	CallExpression	new_req -> vmResume ( m_vm_id )		5555981	1					
ANR	5556044	Callee	new_req -> vmResume		5555981	0					
ANR	5556045	PtrMemberAccess	new_req -> vmResume		5555981	0					
ANR	5556046	Identifier	new_req		5555981	0					
ANR	5556047	Identifier	vmResume		5555981	1					
ANR	5556048	ArgumentList	m_vm_id		5555981	1					
ANR	5556049	Argument	m_vm_id		5555981	0					
ANR	5556050	Identifier	m_vm_id		5555981	0					
ANR	5556051	IfStatement	if ( p_result != VMGAHP_REQ_COMMAND_DONE )		5555981	8					
ANR	5556052	Condition	p_result != VMGAHP_REQ_COMMAND_DONE	839:4:21921:21955	5555981	0	True				
ANR	5556053	EqualityExpression	p_result != VMGAHP_REQ_COMMAND_DONE		5555981	0		!=			
ANR	5556054	Identifier	p_result		5555981	0					
ANR	5556055	Identifier	VMGAHP_REQ_COMMAND_DONE		5555981	1					
ANR	5556056	CompoundStatement		17:41:435:435	5555981	1					
ANR	5556057	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to resume the VM\\n"" )"	840:2:21962:22008	5555981	0	True				
ANR	5556058	CallExpression	"dprintf ( D_ALWAYS , ""Failed to resume the VM\\n"" )"		5555981	0					
ANR	5556059	Callee	dprintf		5555981	0					
ANR	5556060	Identifier	dprintf		5555981	0					
ANR	5556061	ArgumentList	D_ALWAYS		5555981	1					
ANR	5556062	Argument	D_ALWAYS		5555981	0					
ANR	5556063	Identifier	D_ALWAYS		5555981	0					
ANR	5556064	Argument	"""Failed to resume the VM\\n"""		5555981	1					
ANR	5556065	PrimaryExpression	"""Failed to resume the VM\\n"""		5555981	0					
ANR	5556066	ExpressionStatement	m_vmgahp -> printSystemErrorMsg ( )	841:2:22012:22043	5555981	1	True				
ANR	5556067	CallExpression	m_vmgahp -> printSystemErrorMsg ( )		5555981	0					
ANR	5556068	Callee	m_vmgahp -> printSystemErrorMsg		5555981	0					
ANR	5556069	PtrMemberAccess	m_vmgahp -> printSystemErrorMsg		5555981	0					
ANR	5556070	Identifier	m_vmgahp		5555981	0					
ANR	5556071	Identifier	printSystemErrorMsg		5555981	1					
ANR	5556072	ArgumentList			5555981	1					
ANR	5556073	Statement	delete	842:2:22047:22052	5555981	2	True				
ANR	5556074	ExpressionStatement	new_req	842:9:22054:22061	5555981	3	True				
ANR	5556075	Identifier	new_req		5555981	0					
ANR	5556076	ExpressionStatement	internalVMGahpError ( )	843:2:22065:22086	5555981	4	True				
ANR	5556077	CallExpression	internalVMGahpError ( )		5555981	0					
ANR	5556078	Callee	internalVMGahpError		5555981	0					
ANR	5556079	Identifier	internalVMGahpError		5555981	0					
ANR	5556080	ArgumentList			5555981	1					
ANR	5556081	ReturnStatement	return ;	844:2:22090:22096	5555981	5	True				
ANR	5556082	IdentifierDeclStatement	MyString gahpmsg ;	847:1:22103:22119	5555981	9	True				
ANR	5556083	IdentifierDecl	gahpmsg		5555981	0					
ANR	5556084	IdentifierDeclType	MyString		5555981	0					
ANR	5556085	Identifier	gahpmsg		5555981	1					
ANR	5556086	IfStatement	if ( new_req -> checkResult ( gahpmsg ) == false )		5555981	10					
ANR	5556087	Condition	new_req -> checkResult ( gahpmsg ) == false	848:5:22126:22163	5555981	0	True				
ANR	5556088	EqualityExpression	new_req -> checkResult ( gahpmsg ) == false		5555981	0		==			
ANR	5556089	CallExpression	new_req -> checkResult ( gahpmsg )		5555981	0					
ANR	5556090	Callee	new_req -> checkResult		5555981	0					
ANR	5556091	PtrMemberAccess	new_req -> checkResult		5555981	0					
ANR	5556092	Identifier	new_req		5555981	0					
ANR	5556093	Identifier	checkResult		5555981	1					
ANR	5556094	ArgumentList	gahpmsg		5555981	1					
ANR	5556095	Argument	gahpmsg		5555981	0					
ANR	5556096	Identifier	gahpmsg		5555981	0					
ANR	5556097	Identifier	false		5555981	1					
ANR	5556098	CompoundStatement		26:46:644:644	5555981	1					
ANR	5556099	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to resume the VM(%s)"" , gahpmsg . Value ( ) )"	849:2:22171:22236	5555981	0	True				
ANR	5556100	CallExpression	"dprintf ( D_ALWAYS , ""Failed to resume the VM(%s)"" , gahpmsg . Value ( ) )"		5555981	0					
ANR	5556101	Callee	dprintf		5555981	0					
ANR	5556102	Identifier	dprintf		5555981	0					
ANR	5556103	ArgumentList	D_ALWAYS		5555981	1					
ANR	5556104	Argument	D_ALWAYS		5555981	0					
ANR	5556105	Identifier	D_ALWAYS		5555981	0					
ANR	5556106	Argument	"""Failed to resume the VM(%s)"""		5555981	1					
ANR	5556107	PrimaryExpression	"""Failed to resume the VM(%s)"""		5555981	0					
ANR	5556108	Argument	gahpmsg . Value ( )		5555981	2					
ANR	5556109	CallExpression	gahpmsg . Value ( )		5555981	0					
ANR	5556110	Callee	gahpmsg . Value		5555981	0					
ANR	5556111	MemberAccess	gahpmsg . Value		5555981	0					
ANR	5556112	Identifier	gahpmsg		5555981	0					
ANR	5556113	Identifier	Value		5555981	1					
ANR	5556114	ArgumentList			5555981	1					
ANR	5556115	ExpressionStatement	m_vmgahp -> printSystemErrorMsg ( )	850:2:22240:22271	5555981	1	True				
ANR	5556116	CallExpression	m_vmgahp -> printSystemErrorMsg ( )		5555981	0					
ANR	5556117	Callee	m_vmgahp -> printSystemErrorMsg		5555981	0					
ANR	5556118	PtrMemberAccess	m_vmgahp -> printSystemErrorMsg		5555981	0					
ANR	5556119	Identifier	m_vmgahp		5555981	0					
ANR	5556120	Identifier	printSystemErrorMsg		5555981	1					
ANR	5556121	ArgumentList			5555981	1					
ANR	5556122	Statement	delete	851:2:22275:22280	5555981	2	True				
ANR	5556123	ExpressionStatement	new_req	851:9:22282:22289	5555981	3	True				
ANR	5556124	Identifier	new_req		5555981	0					
ANR	5556125	ExpressionStatement	internalVMGahpError ( )	852:2:22293:22314	5555981	4	True				
ANR	5556126	CallExpression	internalVMGahpError ( )		5555981	0					
ANR	5556127	Callee	internalVMGahpError		5555981	0					
ANR	5556128	Identifier	internalVMGahpError		5555981	0					
ANR	5556129	ArgumentList			5555981	1					
ANR	5556130	ReturnStatement	return ;	853:2:22318:22324	5555981	5	True				
ANR	5556131	Statement	delete	855:1:22330:22335	5555981	11	True				
ANR	5556132	ExpressionStatement	new_req	855:8:22337:22344	5555981	12	True				
ANR	5556133	Identifier	new_req		5555981	0					
ANR	5556134	ExpressionStatement	new_req = NULL	856:1:22347:22361	5555981	13	True				
ANR	5556135	AssignmentExpression	new_req = NULL		5555981	0		=			
ANR	5556136	Identifier	new_req		5555981	0					
ANR	5556137	Identifier	NULL		5555981	1					
ANR	5556138	IdentifierDeclStatement	int vm_pid = PIDofVM ( ) ;	861:1:22488:22510	5555981	14	True				
ANR	5556139	IdentifierDecl	vm_pid = PIDofVM ( )		5555981	0					
ANR	5556140	IdentifierDeclType	int		5555981	0					
ANR	5556141	Identifier	vm_pid		5555981	1					
ANR	5556142	AssignmentExpression	vm_pid = PIDofVM ( )		5555981	2		=			
ANR	5556143	Identifier	vm_pid		5555981	0					
ANR	5556144	CallExpression	PIDofVM ( )		5555981	1					
ANR	5556145	Callee	PIDofVM		5555981	0					
ANR	5556146	Identifier	PIDofVM		5555981	0					
ANR	5556147	ArgumentList			5555981	1					
ANR	5556148	ExpressionStatement	setVMPID ( vm_pid )	862:1:22513:22529	5555981	15	True				
ANR	5556149	CallExpression	setVMPID ( vm_pid )		5555981	0					
ANR	5556150	Callee	setVMPID		5555981	0					
ANR	5556151	Identifier	setVMPID		5555981	0					
ANR	5556152	ArgumentList	vm_pid		5555981	1					
ANR	5556153	Argument	vm_pid		5555981	0					
ANR	5556154	Identifier	vm_pid		5555981	0					
ANR	5556155	ExpressionStatement	is_suspended = false	865:1:22577:22597	5555981	16	True				
ANR	5556156	AssignmentExpression	is_suspended = false		5555981	0		=			
ANR	5556157	Identifier	is_suspended		5555981	0					
ANR	5556158	Identifier	false		5555981	1					
ANR	5556159	ExpressionStatement	m_is_soft_suspended = false	866:1:22600:22627	5555981	17	True				
ANR	5556160	AssignmentExpression	m_is_soft_suspended = false		5555981	0		=			
ANR	5556161	Identifier	m_is_soft_suspended		5555981	0					
ANR	5556162	Identifier	false		5555981	1					
ANR	5556163	ExpressionStatement	is_checkpointed = false	867:1:22630:22653	5555981	18	True				
ANR	5556164	AssignmentExpression	is_checkpointed = false		5555981	0		=			
ANR	5556165	Identifier	is_checkpointed		5555981	0					
ANR	5556166	Identifier	false		5555981	1					
ANR	5556167	ReturnStatement	return ;	868:1:22656:22662	5555981	19	True				
ANR	5556168	ReturnType	void		5555981	1					
ANR	5556169	Identifier	VMProc :: Continue		5555981	2					
ANR	5556170	ParameterList			5555981	3					
ANR	5556171	CFGEntryNode	ENTRY		5555981		True				
ANR	5556172	CFGExitNode	EXIT		5555981		True				
ANR	5556173	Symbol	VMGahpRequest :: BLOCKING		5555981						
ANR	5556174	Symbol	NULL		5555981						
ANR	5556175	Symbol	m_vm_id		5555981						
ANR	5556176	Symbol	D_ALWAYS		5555981						
ANR	5556177	Symbol	false		5555981						
ANR	5556178	Symbol	* new_req		5555981						
ANR	5556179	Symbol	gahpmsg		5555981						
ANR	5556180	Symbol	is_suspended		5555981						
ANR	5556181	Symbol	D_FULLDEBUG		5555981						
ANR	5556182	Symbol	vm_pid		5555981						
ANR	5556183	Symbol	p_result		5555981						
ANR	5556184	Symbol	gahpmsg . Value		5555981						
ANR	5556185	Symbol	PIDofVM		5555981						
ANR	5556186	Symbol	m_vmoperation_timeout		5555981						
ANR	5556187	Symbol	VMGAHP_REQ_COMMAND_DONE		5555981						
ANR	5556188	Symbol	new_req -> checkResult		5555981						
ANR	5556189	Symbol	is_checkpointed		5555981						
ANR	5556190	Symbol	m_vmgahp		5555981						
ANR	5556191	Symbol	m_is_soft_suspended		5555981						
ANR	5556192	Symbol	new_req -> vmResume		5555981						
ANR	5556193	Symbol	new_req		5555981						
ANR	5556194	Function	VMProc :: ShutdownGraceful	871:0:22667:24473							
ANR	5556195	FunctionDef	VMProc :: ShutdownGraceful ()		5556194	0					
ANR	5556196	CompoundStatement		873:0:22699:24473	5556194	0					
ANR	5556197	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Inside VMProc::ShutdownGraceful()\\n"" )"	874:1:22702:22760	5556194	0	True				
ANR	5556198	CallExpression	"dprintf ( D_FULLDEBUG , ""Inside VMProc::ShutdownGraceful()\\n"" )"		5556194	0					
ANR	5556199	Callee	dprintf		5556194	0					
ANR	5556200	Identifier	dprintf		5556194	0					
ANR	5556201	ArgumentList	D_FULLDEBUG		5556194	1					
ANR	5556202	Argument	D_FULLDEBUG		5556194	0					
ANR	5556203	Identifier	D_FULLDEBUG		5556194	0					
ANR	5556204	Argument	"""Inside VMProc::ShutdownGraceful()\\n"""		5556194	1					
ANR	5556205	PrimaryExpression	"""Inside VMProc::ShutdownGraceful()\\n"""		5556194	0					
ANR	5556206	IfStatement	if ( ! m_vmgahp )		5556194	1					
ANR	5556207	Condition	! m_vmgahp	876:5:22768:22776	5556194	0	True				
ANR	5556208	UnaryOperationExpression	! m_vmgahp		5556194	0					
ANR	5556209	UnaryOperator	!		5556194	0					
ANR	5556210	Identifier	m_vmgahp		5556194	1					
ANR	5556211	CompoundStatement		4:17:80:80	5556194	1					
ANR	5556212	ReturnStatement	return true ;	877:2:22784:22795	5556194	0	True				
ANR	5556213	Identifier	true		5556194	0					
ANR	5556214	IfStatement	if ( JobPid == - 1 )		5556194	2					
ANR	5556215	Condition	JobPid == - 1	880:5:22806:22817	5556194	0	True				
ANR	5556216	EqualityExpression	JobPid == - 1		5556194	0		==			
ANR	5556217	Identifier	JobPid		5556194	0					
ANR	5556218	UnaryOperationExpression	- 1		5556194	1					
ANR	5556219	UnaryOperator	-		5556194	0					
ANR	5556220	PrimaryExpression	1		5556194	1					
ANR	5556221	CompoundStatement		8:20:121:121	5556194	1					
ANR	5556222	Statement	delete	881:2:22825:22830	5556194	0	True				
ANR	5556223	ExpressionStatement	m_vmgahp	881:9:22832:22840	5556194	1	True				
ANR	5556224	Identifier	m_vmgahp		5556194	0					
ANR	5556225	ExpressionStatement	m_vmgahp = NULL	882:2:22844:22859	5556194	2	True				
ANR	5556226	AssignmentExpression	m_vmgahp = NULL		5556194	0		=			
ANR	5556227	Identifier	m_vmgahp		5556194	0					
ANR	5556228	Identifier	NULL		5556194	1					
ANR	5556229	ReturnStatement	return true ;	883:2:22863:22874	5556194	3	True				
ANR	5556230	Identifier	true		5556194	0					
ANR	5556231	IdentifierDeclStatement	bool delete_working_files = true ;	886:1:22881:22913	5556194	3	True				
ANR	5556232	IdentifierDecl	delete_working_files = true		5556194	0					
ANR	5556233	IdentifierDeclType	bool		5556194	0					
ANR	5556234	Identifier	delete_working_files		5556194	1					
ANR	5556235	AssignmentExpression	delete_working_files = true		5556194	2		=			
ANR	5556236	Identifier	true		5556194	0					
ANR	5556237	Identifier	true		5556194	1					
ANR	5556238	IfStatement	if ( m_vm_checkpoint )		5556194	4					
ANR	5556239	Condition	m_vm_checkpoint	888:5:22921:22935	5556194	0	True				
ANR	5556240	Identifier	m_vm_checkpoint		5556194	0					
ANR	5556241	CompoundStatement		16:23:239:239	5556194	1					
ANR	5556242	ExpressionStatement	m_is_vacate_ckpt = true	894:2:23229:23252	5556194	0	True				
ANR	5556243	AssignmentExpression	m_is_vacate_ckpt = true		5556194	0		=			
ANR	5556244	Identifier	m_is_vacate_ckpt		5556194	0					
ANR	5556245	Identifier	true		5556194	1					
ANR	5556246	ExpressionStatement	is_checkpointed = false	895:2:23256:23279	5556194	1	True				
ANR	5556247	AssignmentExpression	is_checkpointed = false		5556194	0		=			
ANR	5556248	Identifier	is_checkpointed		5556194	0					
ANR	5556249	Identifier	false		5556194	1					
ANR	5556250	ExpressionStatement	Starter -> RemotePeriodicCkpt ( 1 )	897:2:23284:23314	5556194	2	True				
ANR	5556251	CallExpression	Starter -> RemotePeriodicCkpt ( 1 )		5556194	0					
ANR	5556252	Callee	Starter -> RemotePeriodicCkpt		5556194	0					
ANR	5556253	PtrMemberAccess	Starter -> RemotePeriodicCkpt		5556194	0					
ANR	5556254	Identifier	Starter		5556194	0					
ANR	5556255	Identifier	RemotePeriodicCkpt		5556194	1					
ANR	5556256	ArgumentList	1		5556194	1					
ANR	5556257	Argument	1		5556194	0					
ANR	5556258	PrimaryExpression	1		5556194	0					
ANR	5556259	IfStatement	if ( is_checkpointed && ! m_last_ckpt_result )		5556194	3					
ANR	5556260	Condition	is_checkpointed && ! m_last_ckpt_result	900:6:23378:23415	5556194	0	True				
ANR	5556261	AndExpression	is_checkpointed && ! m_last_ckpt_result		5556194	0		&&			
ANR	5556262	Identifier	is_checkpointed		5556194	0					
ANR	5556263	UnaryOperationExpression	! m_last_ckpt_result		5556194	1					
ANR	5556264	UnaryOperator	!		5556194	0					
ANR	5556265	Identifier	m_last_ckpt_result		5556194	1					
ANR	5556266	CompoundStatement		28:47:719:719	5556194	1					
ANR	5556267	ExpressionStatement	delete_working_files = false	904:3:23592:23620	5556194	0	True				
ANR	5556268	AssignmentExpression	delete_working_files = false		5556194	0		=			
ANR	5556269	Identifier	delete_working_files		5556194	0					
ANR	5556270	Identifier	false		5556194	1					
ANR	5556271	Statement	dprintf	905:3:23625:23631	5556194	1	True				
ANR	5556272	Statement	(	905:10:23632:23632	5556194	2	True				
ANR	5556273	Statement	D_ALWAYS	905:11:23633:23640	5556194	3	True				
ANR	5556274	Statement	","	905:19:23641:23641	5556194	4	True				
ANR	5556275	Statement	"""Vacating checkpoint succeeded but """	905:21:23643:23678	5556194	5	True				
ANR	5556276	Statement	"""file transfer failed\\n"""	906:5:23685:23708	5556194	6	True				
ANR	5556277	Statement	)	906:29:23709:23709	5556194	7	True				
ANR	5556278	ExpressionStatement		906:30:23710:23710	5556194	8	True				
ANR	5556279	ExpressionStatement	StopVM ( )	911:1:23745:23753	5556194	5	True				
ANR	5556280	CallExpression	StopVM ( )		5556194	0					
ANR	5556281	Callee	StopVM		5556194	0					
ANR	5556282	Identifier	StopVM		5556194	0					
ANR	5556283	ArgumentList			5556194	1					
ANR	5556284	ExpressionStatement	is_suspended = false	913:1:23757:23777	5556194	6	True				
ANR	5556285	AssignmentExpression	is_suspended = false		5556194	0		=			
ANR	5556286	Identifier	is_suspended		5556194	0					
ANR	5556287	Identifier	false		5556194	1					
ANR	5556288	ExpressionStatement	m_is_soft_suspended = false	914:1:23780:23807	5556194	7	True				
ANR	5556289	AssignmentExpression	m_is_soft_suspended = false		5556194	0		=			
ANR	5556290	Identifier	m_is_soft_suspended		5556194	0					
ANR	5556291	Identifier	false		5556194	1					
ANR	5556292	ExpressionStatement	is_checkpointed = false	915:1:23810:23833	5556194	8	True				
ANR	5556293	AssignmentExpression	is_checkpointed = false		5556194	0		=			
ANR	5556294	Identifier	is_checkpointed		5556194	0					
ANR	5556295	Identifier	false		5556194	1					
ANR	5556296	ExpressionStatement	requested_exit = true	916:1:23836:23857	5556194	9	True				
ANR	5556297	AssignmentExpression	requested_exit = true		5556194	0		=			
ANR	5556298	Identifier	requested_exit		5556194	0					
ANR	5556299	Identifier	true		5556194	1					
ANR	5556300	IfStatement	if ( m_vmgahp -> cleanup ( ) == false )		5556194	10					
ANR	5556301	Condition	m_vmgahp -> cleanup ( ) == false	919:5:23891:23918	5556194	0	True				
ANR	5556302	EqualityExpression	m_vmgahp -> cleanup ( ) == false		5556194	0		==			
ANR	5556303	CallExpression	m_vmgahp -> cleanup ( )		5556194	0					
ANR	5556304	Callee	m_vmgahp -> cleanup		5556194	0					
ANR	5556305	PtrMemberAccess	m_vmgahp -> cleanup		5556194	0					
ANR	5556306	Identifier	m_vmgahp		5556194	0					
ANR	5556307	Identifier	cleanup		5556194	1					
ANR	5556308	ArgumentList			5556194	1					
ANR	5556309	Identifier	false		5556194	1					
ANR	5556310	CompoundStatement		47:36:1222:1222	5556194	1					
ANR	5556311	ExpressionStatement	daemonCore -> Kill_Family ( JobPid )	921:2:23972:24003	5556194	0	True				
ANR	5556312	CallExpression	daemonCore -> Kill_Family ( JobPid )		5556194	0					
ANR	5556313	Callee	daemonCore -> Kill_Family		5556194	0					
ANR	5556314	PtrMemberAccess	daemonCore -> Kill_Family		5556194	0					
ANR	5556315	Identifier	daemonCore		5556194	0					
ANR	5556316	Identifier	Kill_Family		5556194	1					
ANR	5556317	ArgumentList	JobPid		5556194	1					
ANR	5556318	Argument	JobPid		5556194	0					
ANR	5556319	Identifier	JobPid		5556194	0					
ANR	5556320	ExpressionStatement	killProcessForVM ( )	924:2:24068:24086	5556194	1	True				
ANR	5556321	CallExpression	killProcessForVM ( )		5556194	0					
ANR	5556322	Callee	killProcessForVM		5556194	0					
ANR	5556323	Identifier	killProcessForVM		5556194	0					
ANR	5556324	ArgumentList			5556194	1					
ANR	5556325	ExpressionStatement	cleanup ( )	928:1:24114:24123	5556194	11	True				
ANR	5556326	CallExpression	cleanup ( )		5556194	0					
ANR	5556327	Callee	cleanup		5556194	0					
ANR	5556328	Identifier	cleanup		5556194	0					
ANR	5556329	ArgumentList			5556194	1					
ANR	5556330	IfStatement	if ( delete_working_files )		5556194	12					
ANR	5556331	Condition	delete_working_files	933:5:24282:24301	5556194	0	True				
ANR	5556332	Identifier	delete_working_files		5556194	0					
ANR	5556333	CompoundStatement		62:2:1609:1669	5556194	1					
ANR	5556334	IdentifierDeclStatement	"Directory working_dir ( Starter -> GetWorkingDir ( ) , PRIV_USER ) ;"	934:2:24309:24369	5556194	0	True				
ANR	5556335	IdentifierDecl	"working_dir ( Starter -> GetWorkingDir ( ) , PRIV_USER )"		5556194	0					
ANR	5556336	IdentifierDeclType	Directory		5556194	0					
ANR	5556337	Identifier	working_dir		5556194	1					
ANR	5556338	Expression	"Starter -> GetWorkingDir ( ) , PRIV_USER"		5556194	2					
ANR	5556339	CallExpression	Starter -> GetWorkingDir ( )		5556194	0					
ANR	5556340	Callee	Starter -> GetWorkingDir		5556194	0					
ANR	5556341	PtrMemberAccess	Starter -> GetWorkingDir		5556194	0					
ANR	5556342	Identifier	Starter		5556194	0					
ANR	5556343	Identifier	GetWorkingDir		5556194	1					
ANR	5556344	ArgumentList			5556194	1					
ANR	5556345	Identifier	PRIV_USER		5556194	1					
ANR	5556346	ExpressionStatement	working_dir . Remove_Entire_Directory ( )	935:2:24373:24410	5556194	1	True				
ANR	5556347	CallExpression	working_dir . Remove_Entire_Directory ( )		5556194	0					
ANR	5556348	Callee	working_dir . Remove_Entire_Directory		5556194	0					
ANR	5556349	MemberAccess	working_dir . Remove_Entire_Directory		5556194	0					
ANR	5556350	Identifier	working_dir		5556194	0					
ANR	5556351	Identifier	Remove_Entire_Directory		5556194	1					
ANR	5556352	ArgumentList			5556194	1					
ANR	5556353	ReturnStatement	return false ;	938:1:24417:24429	5556194	13	True				
ANR	5556354	Identifier	false		5556194	0					
ANR	5556355	ReturnType	bool		5556194	1					
ANR	5556356	Identifier	VMProc :: ShutdownGraceful		5556194	2					
ANR	5556357	ParameterList			5556194	3					
ANR	5556358	CFGEntryNode	ENTRY		5556194		True				
ANR	5556359	CFGExitNode	EXIT		5556194		True				
ANR	5556360	Symbol	NULL		5556194						
ANR	5556361	Symbol	m_last_ckpt_result		5556194						
ANR	5556362	Symbol	requested_exit		5556194						
ANR	5556363	Symbol	working_dir		5556194						
ANR	5556364	Symbol	false		5556194						
ANR	5556365	Symbol	is_suspended		5556194						
ANR	5556366	Symbol	m_vmgahp -> cleanup		5556194						
ANR	5556367	Symbol	D_FULLDEBUG		5556194						
ANR	5556368	Symbol	m_is_vacate_ckpt		5556194						
ANR	5556369	Symbol	Starter		5556194						
ANR	5556370	Symbol	is_checkpointed		5556194						
ANR	5556371	Symbol	m_vmgahp		5556194						
ANR	5556372	Symbol	m_vm_checkpoint		5556194						
ANR	5556373	Symbol	m_is_soft_suspended		5556194						
ANR	5556374	Symbol	* m_vmgahp		5556194						
ANR	5556375	Symbol	daemonCore		5556194						
ANR	5556376	Symbol	true		5556194						
ANR	5556377	Symbol	delete_working_files		5556194						
ANR	5556378	Symbol	JobPid		5556194						
ANR	5556379	Function	VMProc :: ShutdownFast	941:0:24476:25142							
ANR	5556380	FunctionDef	VMProc :: ShutdownFast ()		5556379	0					
ANR	5556381	CompoundStatement		943:0:24504:25142	5556379	0					
ANR	5556382	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Inside VMProc::ShutdownFast()\\n"" )"	944:1:24507:24561	5556379	0	True				
ANR	5556383	CallExpression	"dprintf ( D_FULLDEBUG , ""Inside VMProc::ShutdownFast()\\n"" )"		5556379	0					
ANR	5556384	Callee	dprintf		5556379	0					
ANR	5556385	Identifier	dprintf		5556379	0					
ANR	5556386	ArgumentList	D_FULLDEBUG		5556379	1					
ANR	5556387	Argument	D_FULLDEBUG		5556379	0					
ANR	5556388	Identifier	D_FULLDEBUG		5556379	0					
ANR	5556389	Argument	"""Inside VMProc::ShutdownFast()\\n"""		5556379	1					
ANR	5556390	PrimaryExpression	"""Inside VMProc::ShutdownFast()\\n"""		5556379	0					
ANR	5556391	IfStatement	if ( ! m_vmgahp )		5556379	1					
ANR	5556392	Condition	! m_vmgahp	946:5:24569:24577	5556379	0	True				
ANR	5556393	UnaryOperationExpression	! m_vmgahp		5556379	0					
ANR	5556394	UnaryOperator	!		5556379	0					
ANR	5556395	Identifier	m_vmgahp		5556379	1					
ANR	5556396	CompoundStatement		4:17:76:76	5556379	1					
ANR	5556397	ReturnStatement	return true ;	947:2:24585:24596	5556379	0	True				
ANR	5556398	Identifier	true		5556379	0					
ANR	5556399	IfStatement	if ( JobPid == - 1 )		5556379	2					
ANR	5556400	Condition	JobPid == - 1	950:5:24607:24618	5556379	0	True				
ANR	5556401	EqualityExpression	JobPid == - 1		5556379	0		==			
ANR	5556402	Identifier	JobPid		5556379	0					
ANR	5556403	UnaryOperationExpression	- 1		5556379	1					
ANR	5556404	UnaryOperator	-		5556379	0					
ANR	5556405	PrimaryExpression	1		5556379	1					
ANR	5556406	CompoundStatement		8:20:117:117	5556379	1					
ANR	5556407	Statement	delete	951:2:24626:24631	5556379	0	True				
ANR	5556408	ExpressionStatement	m_vmgahp	951:9:24633:24641	5556379	1	True				
ANR	5556409	Identifier	m_vmgahp		5556379	0					
ANR	5556410	ExpressionStatement	m_vmgahp = NULL	952:2:24645:24660	5556379	2	True				
ANR	5556411	AssignmentExpression	m_vmgahp = NULL		5556379	0		=			
ANR	5556412	Identifier	m_vmgahp		5556379	0					
ANR	5556413	Identifier	NULL		5556379	1					
ANR	5556414	ReturnStatement	return true ;	953:2:24664:24675	5556379	3	True				
ANR	5556415	Identifier	true		5556379	0					
ANR	5556416	ExpressionStatement	StopVM ( )	957:1:24706:24714	5556379	3	True				
ANR	5556417	CallExpression	StopVM ( )		5556379	0					
ANR	5556418	Callee	StopVM		5556379	0					
ANR	5556419	Identifier	StopVM		5556379	0					
ANR	5556420	ArgumentList			5556379	1					
ANR	5556421	ExpressionStatement	is_suspended = false	959:1:24718:24738	5556379	4	True				
ANR	5556422	AssignmentExpression	is_suspended = false		5556379	0		=			
ANR	5556423	Identifier	is_suspended		5556379	0					
ANR	5556424	Identifier	false		5556379	1					
ANR	5556425	ExpressionStatement	m_is_soft_suspended = false	960:1:24741:24768	5556379	5	True				
ANR	5556426	AssignmentExpression	m_is_soft_suspended = false		5556379	0		=			
ANR	5556427	Identifier	m_is_soft_suspended		5556379	0					
ANR	5556428	Identifier	false		5556379	1					
ANR	5556429	ExpressionStatement	is_checkpointed = false	961:1:24771:24794	5556379	6	True				
ANR	5556430	AssignmentExpression	is_checkpointed = false		5556379	0		=			
ANR	5556431	Identifier	is_checkpointed		5556379	0					
ANR	5556432	Identifier	false		5556379	1					
ANR	5556433	ExpressionStatement	requested_exit = true	962:1:24797:24818	5556379	7	True				
ANR	5556434	AssignmentExpression	requested_exit = true		5556379	0		=			
ANR	5556435	Identifier	requested_exit		5556379	0					
ANR	5556436	Identifier	true		5556379	1					
ANR	5556437	IfStatement	if ( m_vmgahp -> cleanup ( ) == false )		5556379	8					
ANR	5556438	Condition	m_vmgahp -> cleanup ( ) == false	965:5:24852:24879	5556379	0	True				
ANR	5556439	EqualityExpression	m_vmgahp -> cleanup ( ) == false		5556379	0		==			
ANR	5556440	CallExpression	m_vmgahp -> cleanup ( )		5556379	0					
ANR	5556441	Callee	m_vmgahp -> cleanup		5556379	0					
ANR	5556442	PtrMemberAccess	m_vmgahp -> cleanup		5556379	0					
ANR	5556443	Identifier	m_vmgahp		5556379	0					
ANR	5556444	Identifier	cleanup		5556379	1					
ANR	5556445	ArgumentList			5556379	1					
ANR	5556446	Identifier	false		5556379	1					
ANR	5556447	CompoundStatement		23:36:378:378	5556379	1					
ANR	5556448	ExpressionStatement	daemonCore -> Kill_Family ( JobPid )	967:2:24933:24964	5556379	0	True				
ANR	5556449	CallExpression	daemonCore -> Kill_Family ( JobPid )		5556379	0					
ANR	5556450	Callee	daemonCore -> Kill_Family		5556379	0					
ANR	5556451	PtrMemberAccess	daemonCore -> Kill_Family		5556379	0					
ANR	5556452	Identifier	daemonCore		5556379	0					
ANR	5556453	Identifier	Kill_Family		5556379	1					
ANR	5556454	ArgumentList	JobPid		5556379	1					
ANR	5556455	Argument	JobPid		5556379	0					
ANR	5556456	Identifier	JobPid		5556379	0					
ANR	5556457	ExpressionStatement	killProcessForVM ( )	970:2:25029:25047	5556379	1	True				
ANR	5556458	CallExpression	killProcessForVM ( )		5556379	0					
ANR	5556459	Callee	killProcessForVM		5556379	0					
ANR	5556460	Identifier	killProcessForVM		5556379	0					
ANR	5556461	ArgumentList			5556379	1					
ANR	5556462	ExpressionStatement	cleanup ( )	974:1:25075:25084	5556379	9	True				
ANR	5556463	CallExpression	cleanup ( )		5556379	0					
ANR	5556464	Callee	cleanup		5556379	0					
ANR	5556465	Identifier	cleanup		5556379	0					
ANR	5556466	ArgumentList			5556379	1					
ANR	5556467	ReturnStatement	return false ;	976:1:25088:25100	5556379	10	True				
ANR	5556468	Identifier	false		5556379	0					
ANR	5556469	ReturnType	bool		5556379	1					
ANR	5556470	Identifier	VMProc :: ShutdownFast		5556379	2					
ANR	5556471	ParameterList			5556379	3					
ANR	5556472	CFGEntryNode	ENTRY		5556379		True				
ANR	5556473	CFGExitNode	EXIT		5556379		True				
ANR	5556474	Symbol	NULL		5556379						
ANR	5556475	Symbol	requested_exit		5556379						
ANR	5556476	Symbol	false		5556379						
ANR	5556477	Symbol	is_suspended		5556379						
ANR	5556478	Symbol	m_vmgahp -> cleanup		5556379						
ANR	5556479	Symbol	D_FULLDEBUG		5556379						
ANR	5556480	Symbol	is_checkpointed		5556379						
ANR	5556481	Symbol	m_vmgahp		5556379						
ANR	5556482	Symbol	m_is_soft_suspended		5556379						
ANR	5556483	Symbol	* m_vmgahp		5556379						
ANR	5556484	Symbol	daemonCore		5556379						
ANR	5556485	Symbol	true		5556379						
ANR	5556486	Symbol	JobPid		5556379						
ANR	5556487	Function	VMProc :: Remove	979:0:25145:25193							
ANR	5556488	FunctionDef	VMProc :: Remove ()		5556487	0					
ANR	5556489	CompoundStatement		981:0:25167:25193	5556487	0					
ANR	5556490	ReturnStatement	return ShutdownFast ( ) ;	982:1:25170:25191	5556487	0	True				
ANR	5556491	CallExpression	ShutdownFast ( )		5556487	0					
ANR	5556492	Callee	ShutdownFast		5556487	0					
ANR	5556493	Identifier	ShutdownFast		5556487	0					
ANR	5556494	ArgumentList			5556487	1					
ANR	5556495	ReturnType	bool		5556487	1					
ANR	5556496	Identifier	VMProc :: Remove		5556487	2					
ANR	5556497	ParameterList			5556487	3					
ANR	5556498	CFGEntryNode	ENTRY		5556487		True				
ANR	5556499	CFGExitNode	EXIT		5556487		True				
ANR	5556500	Symbol	ShutdownFast		5556487						
ANR	5556501	Function	VMProc :: Hold	986:0:25197:25243							
ANR	5556502	FunctionDef	VMProc :: Hold ()		5556501	0					
ANR	5556503	CompoundStatement		988:0:25217:25243	5556501	0					
ANR	5556504	ReturnStatement	return ShutdownFast ( ) ;	989:1:25220:25241	5556501	0	True				
ANR	5556505	CallExpression	ShutdownFast ( )		5556501	0					
ANR	5556506	Callee	ShutdownFast		5556501	0					
ANR	5556507	Identifier	ShutdownFast		5556501	0					
ANR	5556508	ArgumentList			5556501	1					
ANR	5556509	ReturnType	bool		5556501	1					
ANR	5556510	Identifier	VMProc :: Hold		5556501	2					
ANR	5556511	ParameterList			5556501	3					
ANR	5556512	CFGEntryNode	ENTRY		5556501		True				
ANR	5556513	CFGExitNode	EXIT		5556501		True				
ANR	5556514	Symbol	ShutdownFast		5556501						
ANR	5556515	Function	VMProc :: StopVM	992:0:25246:26255							
ANR	5556516	FunctionDef	VMProc :: StopVM ()		5556515	0					
ANR	5556517	CompoundStatement		994:0:25268:26255	5556515	0					
ANR	5556518	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Inside VMProc::StopVM\\n"" )"	995:1:25271:25317	5556515	0	True				
ANR	5556519	CallExpression	"dprintf ( D_FULLDEBUG , ""Inside VMProc::StopVM\\n"" )"		5556515	0					
ANR	5556520	Callee	dprintf		5556515	0					
ANR	5556521	Identifier	dprintf		5556515	0					
ANR	5556522	ArgumentList	D_FULLDEBUG		5556515	1					
ANR	5556523	Argument	D_FULLDEBUG		5556515	0					
ANR	5556524	Identifier	D_FULLDEBUG		5556515	0					
ANR	5556525	Argument	"""Inside VMProc::StopVM\\n"""		5556515	1					
ANR	5556526	PrimaryExpression	"""Inside VMProc::StopVM\\n"""		5556515	0					
ANR	5556527	IfStatement	if ( ! m_vm_id || ! m_vmgahp )		5556515	1					
ANR	5556528	Condition	! m_vm_id || ! m_vmgahp	997:5:25325:25345	5556515	0	True				
ANR	5556529	OrExpression	! m_vm_id || ! m_vmgahp		5556515	0		||			
ANR	5556530	UnaryOperationExpression	! m_vm_id		5556515	0					
ANR	5556531	UnaryOperator	!		5556515	0					
ANR	5556532	Identifier	m_vm_id		5556515	1					
ANR	5556533	UnaryOperationExpression	! m_vmgahp		5556515	1					
ANR	5556534	UnaryOperator	!		5556515	0					
ANR	5556535	Identifier	m_vmgahp		5556515	1					
ANR	5556536	CompoundStatement		4:29:80:80	5556515	1					
ANR	5556537	ReturnStatement	return true ;	998:2:25353:25364	5556515	0	True				
ANR	5556538	Identifier	true		5556515	0					
ANR	5556539	IdentifierDeclStatement	VMGahpRequest * new_req = new VMGahpRequest ( m_vmgahp ) ;	1001:1:25371:25423	5556515	2	True				
ANR	5556540	IdentifierDecl	* new_req = new VMGahpRequest ( m_vmgahp )		5556515	0					
ANR	5556541	IdentifierDeclType	VMGahpRequest *		5556515	0					
ANR	5556542	Identifier	new_req		5556515	1					
ANR	5556543	AssignmentExpression	* new_req = new VMGahpRequest ( m_vmgahp )		5556515	2		=			
ANR	5556544	Identifier	m_vmgahp		5556515	0					
ANR	5556545	Identifier	m_vmgahp		5556515	1					
ANR	5556546	ExpressionStatement	ASSERT ( new_req )	1002:1:25426:25441	5556515	3	True				
ANR	5556547	CallExpression	ASSERT ( new_req )		5556515	0					
ANR	5556548	Callee	ASSERT		5556515	0					
ANR	5556549	Identifier	ASSERT		5556515	0					
ANR	5556550	ArgumentList	new_req		5556515	1					
ANR	5556551	Argument	new_req		5556515	0					
ANR	5556552	Identifier	new_req		5556515	0					
ANR	5556553	ExpressionStatement	new_req -> setMode ( VMGahpRequest :: BLOCKING )	1003:1:25444:25485	5556515	4	True				
ANR	5556554	CallExpression	new_req -> setMode ( VMGahpRequest :: BLOCKING )		5556515	0					
ANR	5556555	Callee	new_req -> setMode		5556515	0					
ANR	5556556	PtrMemberAccess	new_req -> setMode		5556515	0					
ANR	5556557	Identifier	new_req		5556515	0					
ANR	5556558	Identifier	setMode		5556515	1					
ANR	5556559	ArgumentList	VMGahpRequest :: BLOCKING		5556515	1					
ANR	5556560	Argument	VMGahpRequest :: BLOCKING		5556515	0					
ANR	5556561	Identifier	VMGahpRequest :: BLOCKING		5556515	0					
ANR	5556562	ExpressionStatement	new_req -> setTimeout ( m_vmoperation_timeout )	1004:1:25488:25530	5556515	5	True				
ANR	5556563	CallExpression	new_req -> setTimeout ( m_vmoperation_timeout )		5556515	0					
ANR	5556564	Callee	new_req -> setTimeout		5556515	0					
ANR	5556565	PtrMemberAccess	new_req -> setTimeout		5556515	0					
ANR	5556566	Identifier	new_req		5556515	0					
ANR	5556567	Identifier	setTimeout		5556515	1					
ANR	5556568	ArgumentList	m_vmoperation_timeout		5556515	1					
ANR	5556569	Argument	m_vmoperation_timeout		5556515	0					
ANR	5556570	Identifier	m_vmoperation_timeout		5556515	0					
ANR	5556571	IdentifierDeclStatement	int p_result ;	1006:1:25534:25546	5556515	6	True				
ANR	5556572	IdentifierDecl	p_result		5556515	0					
ANR	5556573	IdentifierDeclType	int		5556515	0					
ANR	5556574	Identifier	p_result		5556515	1					
ANR	5556575	ExpressionStatement	p_result = new_req -> vmStop ( m_vm_id )	1007:1:25549:25584	5556515	7	True				
ANR	5556576	AssignmentExpression	p_result = new_req -> vmStop ( m_vm_id )		5556515	0		=			
ANR	5556577	Identifier	p_result		5556515	0					
ANR	5556578	CallExpression	new_req -> vmStop ( m_vm_id )		5556515	1					
ANR	5556579	Callee	new_req -> vmStop		5556515	0					
ANR	5556580	PtrMemberAccess	new_req -> vmStop		5556515	0					
ANR	5556581	Identifier	new_req		5556515	0					
ANR	5556582	Identifier	vmStop		5556515	1					
ANR	5556583	ArgumentList	m_vm_id		5556515	1					
ANR	5556584	Argument	m_vm_id		5556515	0					
ANR	5556585	Identifier	m_vm_id		5556515	0					
ANR	5556586	IfStatement	if ( p_result != VMGAHP_REQ_COMMAND_DONE )		5556515	8					
ANR	5556587	Condition	p_result != VMGAHP_REQ_COMMAND_DONE	1010:4:25666:25700	5556515	0	True				
ANR	5556588	EqualityExpression	p_result != VMGAHP_REQ_COMMAND_DONE		5556515	0		!=			
ANR	5556589	Identifier	p_result		5556515	0					
ANR	5556590	Identifier	VMGAHP_REQ_COMMAND_DONE		5556515	1					
ANR	5556591	CompoundStatement		17:41:434:434	5556515	1					
ANR	5556592	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to stop VM\\n"" )"	1011:2:25707:25747	5556515	0	True				
ANR	5556593	CallExpression	"dprintf ( D_ALWAYS , ""Failed to stop VM\\n"" )"		5556515	0					
ANR	5556594	Callee	dprintf		5556515	0					
ANR	5556595	Identifier	dprintf		5556515	0					
ANR	5556596	ArgumentList	D_ALWAYS		5556515	1					
ANR	5556597	Argument	D_ALWAYS		5556515	0					
ANR	5556598	Identifier	D_ALWAYS		5556515	0					
ANR	5556599	Argument	"""Failed to stop VM\\n"""		5556515	1					
ANR	5556600	PrimaryExpression	"""Failed to stop VM\\n"""		5556515	0					
ANR	5556601	ExpressionStatement	m_vmgahp -> printSystemErrorMsg ( )	1012:2:25751:25782	5556515	1	True				
ANR	5556602	CallExpression	m_vmgahp -> printSystemErrorMsg ( )		5556515	0					
ANR	5556603	Callee	m_vmgahp -> printSystemErrorMsg		5556515	0					
ANR	5556604	PtrMemberAccess	m_vmgahp -> printSystemErrorMsg		5556515	0					
ANR	5556605	Identifier	m_vmgahp		5556515	0					
ANR	5556606	Identifier	printSystemErrorMsg		5556515	1					
ANR	5556607	ArgumentList			5556515	1					
ANR	5556608	ExpressionStatement	reportErrorToStartd ( )	1013:2:25786:25807	5556515	2	True				
ANR	5556609	CallExpression	reportErrorToStartd ( )		5556515	0					
ANR	5556610	Callee	reportErrorToStartd		5556515	0					
ANR	5556611	Identifier	reportErrorToStartd		5556515	0					
ANR	5556612	ArgumentList			5556515	1					
ANR	5556613	Statement	delete	1014:2:25811:25816	5556515	3	True				
ANR	5556614	ExpressionStatement	new_req	1014:9:25818:25825	5556515	4	True				
ANR	5556615	Identifier	new_req		5556515	0					
ANR	5556616	ReturnStatement	return false ;	1015:2:25829:25841	5556515	5	True				
ANR	5556617	Identifier	false		5556515	0					
ANR	5556618	IdentifierDeclStatement	MyString gahpmsg ;	1018:1:25848:25864	5556515	9	True				
ANR	5556619	IdentifierDecl	gahpmsg		5556515	0					
ANR	5556620	IdentifierDeclType	MyString		5556515	0					
ANR	5556621	Identifier	gahpmsg		5556515	1					
ANR	5556622	IfStatement	if ( new_req -> checkResult ( gahpmsg ) == false )		5556515	10					
ANR	5556623	Condition	new_req -> checkResult ( gahpmsg ) == false	1019:5:25871:25908	5556515	0	True				
ANR	5556624	EqualityExpression	new_req -> checkResult ( gahpmsg ) == false		5556515	0		==			
ANR	5556625	CallExpression	new_req -> checkResult ( gahpmsg )		5556515	0					
ANR	5556626	Callee	new_req -> checkResult		5556515	0					
ANR	5556627	PtrMemberAccess	new_req -> checkResult		5556515	0					
ANR	5556628	Identifier	new_req		5556515	0					
ANR	5556629	Identifier	checkResult		5556515	1					
ANR	5556630	ArgumentList	gahpmsg		5556515	1					
ANR	5556631	Argument	gahpmsg		5556515	0					
ANR	5556632	Identifier	gahpmsg		5556515	0					
ANR	5556633	Identifier	false		5556515	1					
ANR	5556634	CompoundStatement		26:46:643:643	5556515	1					
ANR	5556635	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to stop the VM(%s)\\n"" , gahpmsg . Value ( ) )"	1020:2:25916:25981	5556515	0	True				
ANR	5556636	CallExpression	"dprintf ( D_ALWAYS , ""Failed to stop the VM(%s)\\n"" , gahpmsg . Value ( ) )"		5556515	0					
ANR	5556637	Callee	dprintf		5556515	0					
ANR	5556638	Identifier	dprintf		5556515	0					
ANR	5556639	ArgumentList	D_ALWAYS		5556515	1					
ANR	5556640	Argument	D_ALWAYS		5556515	0					
ANR	5556641	Identifier	D_ALWAYS		5556515	0					
ANR	5556642	Argument	"""Failed to stop the VM(%s)\\n"""		5556515	1					
ANR	5556643	PrimaryExpression	"""Failed to stop the VM(%s)\\n"""		5556515	0					
ANR	5556644	Argument	gahpmsg . Value ( )		5556515	2					
ANR	5556645	CallExpression	gahpmsg . Value ( )		5556515	0					
ANR	5556646	Callee	gahpmsg . Value		5556515	0					
ANR	5556647	MemberAccess	gahpmsg . Value		5556515	0					
ANR	5556648	Identifier	gahpmsg		5556515	0					
ANR	5556649	Identifier	Value		5556515	1					
ANR	5556650	ArgumentList			5556515	1					
ANR	5556651	ExpressionStatement	m_vmgahp -> printSystemErrorMsg ( )	1021:2:25985:26016	5556515	1	True				
ANR	5556652	CallExpression	m_vmgahp -> printSystemErrorMsg ( )		5556515	0					
ANR	5556653	Callee	m_vmgahp -> printSystemErrorMsg		5556515	0					
ANR	5556654	PtrMemberAccess	m_vmgahp -> printSystemErrorMsg		5556515	0					
ANR	5556655	Identifier	m_vmgahp		5556515	0					
ANR	5556656	Identifier	printSystemErrorMsg		5556515	1					
ANR	5556657	ArgumentList			5556515	1					
ANR	5556658	ExpressionStatement	reportErrorToStartd ( )	1022:2:26020:26041	5556515	2	True				
ANR	5556659	CallExpression	reportErrorToStartd ( )		5556515	0					
ANR	5556660	Callee	reportErrorToStartd		5556515	0					
ANR	5556661	Identifier	reportErrorToStartd		5556515	0					
ANR	5556662	ArgumentList			5556515	1					
ANR	5556663	Statement	delete	1023:2:26045:26050	5556515	3	True				
ANR	5556664	ExpressionStatement	new_req	1023:9:26052:26059	5556515	4	True				
ANR	5556665	Identifier	new_req		5556515	0					
ANR	5556666	ReturnStatement	return false ;	1024:2:26063:26075	5556515	5	True				
ANR	5556667	Identifier	false		5556515	0					
ANR	5556668	Statement	delete	1026:1:26081:26086	5556515	11	True				
ANR	5556669	ExpressionStatement	new_req	1026:8:26088:26095	5556515	12	True				
ANR	5556670	Identifier	new_req		5556515	0					
ANR	5556671	ExpressionStatement	new_req = NULL	1027:1:26098:26112	5556515	13	True				
ANR	5556672	AssignmentExpression	new_req = NULL		5556515	0		=			
ANR	5556673	Identifier	new_req		5556515	0					
ANR	5556674	Identifier	NULL		5556515	1					
ANR	5556675	ExpressionStatement	setVMPID ( 0 )	1030:1:26148:26159	5556515	14	True				
ANR	5556676	CallExpression	setVMPID ( 0 )		5556515	0					
ANR	5556677	Callee	setVMPID		5556515	0					
ANR	5556678	Identifier	setVMPID		5556515	0					
ANR	5556679	ArgumentList	0		5556515	1					
ANR	5556680	Argument	0		5556515	0					
ANR	5556681	PrimaryExpression	0		5556515	0					
ANR	5556682	ExpressionStatement	is_suspended = false	1031:1:26162:26182	5556515	15	True				
ANR	5556683	AssignmentExpression	is_suspended = false		5556515	0		=			
ANR	5556684	Identifier	is_suspended		5556515	0					
ANR	5556685	Identifier	false		5556515	1					
ANR	5556686	ExpressionStatement	m_is_soft_suspended = false	1032:1:26185:26212	5556515	16	True				
ANR	5556687	AssignmentExpression	m_is_soft_suspended = false		5556515	0		=			
ANR	5556688	Identifier	m_is_soft_suspended		5556515	0					
ANR	5556689	Identifier	false		5556515	1					
ANR	5556690	ExpressionStatement	is_checkpointed = false	1033:1:26215:26238	5556515	17	True				
ANR	5556691	AssignmentExpression	is_checkpointed = false		5556515	0		=			
ANR	5556692	Identifier	is_checkpointed		5556515	0					
ANR	5556693	Identifier	false		5556515	1					
ANR	5556694	ReturnStatement	return true ;	1035:1:26242:26253	5556515	18	True				
ANR	5556695	Identifier	true		5556515	0					
ANR	5556696	ReturnType	bool		5556515	1					
ANR	5556697	Identifier	VMProc :: StopVM		5556515	2					
ANR	5556698	ParameterList			5556515	3					
ANR	5556699	CFGEntryNode	ENTRY		5556515		True				
ANR	5556700	CFGExitNode	EXIT		5556515		True				
ANR	5556701	Symbol	VMGahpRequest :: BLOCKING		5556515						
ANR	5556702	Symbol	NULL		5556515						
ANR	5556703	Symbol	m_vm_id		5556515						
ANR	5556704	Symbol	new_req -> vmStop		5556515						
ANR	5556705	Symbol	D_ALWAYS		5556515						
ANR	5556706	Symbol	false		5556515						
ANR	5556707	Symbol	* new_req		5556515						
ANR	5556708	Symbol	gahpmsg		5556515						
ANR	5556709	Symbol	is_suspended		5556515						
ANR	5556710	Symbol	D_FULLDEBUG		5556515						
ANR	5556711	Symbol	p_result		5556515						
ANR	5556712	Symbol	gahpmsg . Value		5556515						
ANR	5556713	Symbol	m_vmoperation_timeout		5556515						
ANR	5556714	Symbol	VMGAHP_REQ_COMMAND_DONE		5556515						
ANR	5556715	Symbol	new_req -> checkResult		5556515						
ANR	5556716	Symbol	is_checkpointed		5556515						
ANR	5556717	Symbol	m_vmgahp		5556515						
ANR	5556718	Symbol	m_is_soft_suspended		5556515						
ANR	5556719	Symbol	true		5556515						
ANR	5556720	Symbol	new_req		5556515						
ANR	5556721	Function	VMProc :: Ckpt	1038:0:26258:27941							
ANR	5556722	FunctionDef	VMProc :: Ckpt ()		5556721	0					
ANR	5556723	CompoundStatement		1040:0:26279:27941	5556721	0					
ANR	5556724	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Inside VMProc::Ckpt()\\n"" )"	1041:1:26282:26328	5556721	0	True				
ANR	5556725	CallExpression	"dprintf ( D_FULLDEBUG , ""Inside VMProc::Ckpt()\\n"" )"		5556721	0					
ANR	5556726	Callee	dprintf		5556721	0					
ANR	5556727	Identifier	dprintf		5556721	0					
ANR	5556728	ArgumentList	D_FULLDEBUG		5556721	1					
ANR	5556729	Argument	D_FULLDEBUG		5556721	0					
ANR	5556730	Identifier	D_FULLDEBUG		5556721	0					
ANR	5556731	Argument	"""Inside VMProc::Ckpt()\\n"""		5556721	1					
ANR	5556732	PrimaryExpression	"""Inside VMProc::Ckpt()\\n"""		5556721	0					
ANR	5556733	IfStatement	if ( ! m_vm_id || ! m_vmgahp )		5556721	1					
ANR	5556734	Condition	! m_vm_id || ! m_vmgahp	1043:5:26336:26356	5556721	0	True				
ANR	5556735	OrExpression	! m_vm_id || ! m_vmgahp		5556721	0		||			
ANR	5556736	UnaryOperationExpression	! m_vm_id		5556721	0					
ANR	5556737	UnaryOperator	!		5556721	0					
ANR	5556738	Identifier	m_vm_id		5556721	1					
ANR	5556739	UnaryOperationExpression	! m_vmgahp		5556721	1					
ANR	5556740	UnaryOperator	!		5556721	0					
ANR	5556741	Identifier	m_vmgahp		5556721	1					
ANR	5556742	CompoundStatement		4:29:80:80	5556721	1					
ANR	5556743	ReturnStatement	return false ;	1044:2:26364:26376	5556721	0	True				
ANR	5556744	Identifier	false		5556721	0					
ANR	5556745	IfStatement	if ( ! m_vm_checkpoint )		5556721	2					
ANR	5556746	Condition	! m_vm_checkpoint	1048:5:26439:26454	5556721	0	True				
ANR	5556747	UnaryOperationExpression	! m_vm_checkpoint		5556721	0					
ANR	5556748	UnaryOperator	!		5556721	0					
ANR	5556749	Identifier	m_vm_checkpoint		5556721	1					
ANR	5556750	CompoundStatement		9:24:178:178	5556721	1					
ANR	5556751	ReturnStatement	return false ;	1049:2:26462:26474	5556721	0	True				
ANR	5556752	Identifier	false		5556721	0					
ANR	5556753	IfStatement	"if ( ( strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_XEN ) == MATCH ) || ( strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_KVM ) == MATCH ) )"		5556721	3					
ANR	5556754	Condition	"( strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_XEN ) == MATCH ) || ( strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_KVM ) == MATCH )"	1052:5:26485:26616	5556721	0	True				
ANR	5556755	OrExpression	"( strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_XEN ) == MATCH ) || ( strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_KVM ) == MATCH )"		5556721	0		||			
ANR	5556756	EqualityExpression	"strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_XEN ) == MATCH"		5556721	0		==			
ANR	5556757	CallExpression	"strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_XEN )"		5556721	0					
ANR	5556758	Callee	strcasecmp		5556721	0					
ANR	5556759	Identifier	strcasecmp		5556721	0					
ANR	5556760	ArgumentList	m_vm_type . Value ( )		5556721	1					
ANR	5556761	Argument	m_vm_type . Value ( )		5556721	0					
ANR	5556762	CallExpression	m_vm_type . Value ( )		5556721	0					
ANR	5556763	Callee	m_vm_type . Value		5556721	0					
ANR	5556764	MemberAccess	m_vm_type . Value		5556721	0					
ANR	5556765	Identifier	m_vm_type		5556721	0					
ANR	5556766	Identifier	Value		5556721	1					
ANR	5556767	ArgumentList			5556721	1					
ANR	5556768	Argument	CONDOR_VM_UNIVERSE_XEN		5556721	1					
ANR	5556769	Identifier	CONDOR_VM_UNIVERSE_XEN		5556721	0					
ANR	5556770	Identifier	MATCH		5556721	1					
ANR	5556771	EqualityExpression	"strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_KVM ) == MATCH"		5556721	1		==			
ANR	5556772	CallExpression	"strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_KVM )"		5556721	0					
ANR	5556773	Callee	strcasecmp		5556721	0					
ANR	5556774	Identifier	strcasecmp		5556721	0					
ANR	5556775	ArgumentList	m_vm_type . Value ( )		5556721	1					
ANR	5556776	Argument	m_vm_type . Value ( )		5556721	0					
ANR	5556777	CallExpression	m_vm_type . Value ( )		5556721	0					
ANR	5556778	Callee	m_vm_type . Value		5556721	0					
ANR	5556779	MemberAccess	m_vm_type . Value		5556721	0					
ANR	5556780	Identifier	m_vm_type		5556721	0					
ANR	5556781	Identifier	Value		5556721	1					
ANR	5556782	ArgumentList			5556721	1					
ANR	5556783	Argument	CONDOR_VM_UNIVERSE_KVM		5556721	1					
ANR	5556784	Identifier	CONDOR_VM_UNIVERSE_KVM		5556721	0					
ANR	5556785	Identifier	MATCH		5556721	1					
ANR	5556786	CompoundStatement		13:140:340:340	5556721	1					
ANR	5556787	IfStatement	if ( ! m_is_vacate_ckpt )		5556721	0					
ANR	5556788	Condition	! m_is_vacate_ckpt	1053:6:26628:26644	5556721	0	True				
ANR	5556789	UnaryOperationExpression	! m_is_vacate_ckpt		5556721	0					
ANR	5556790	UnaryOperator	!		5556721	0					
ANR	5556791	Identifier	m_is_vacate_ckpt		5556721	1					
ANR	5556792	CompoundStatement		14:26:368:368	5556721	1					
ANR	5556793	ReturnStatement	return false ;	1055:3:26699:26711	5556721	0	True				
ANR	5556794	Identifier	false		5556721	0					
ANR	5556795	IdentifierDeclStatement	VMGahpRequest * new_req = new VMGahpRequest ( m_vmgahp ) ;	1059:1:26722:26774	5556721	4	True				
ANR	5556796	IdentifierDecl	* new_req = new VMGahpRequest ( m_vmgahp )		5556721	0					
ANR	5556797	IdentifierDeclType	VMGahpRequest *		5556721	0					
ANR	5556798	Identifier	new_req		5556721	1					
ANR	5556799	AssignmentExpression	* new_req = new VMGahpRequest ( m_vmgahp )		5556721	2		=			
ANR	5556800	Identifier	m_vmgahp		5556721	0					
ANR	5556801	Identifier	m_vmgahp		5556721	1					
ANR	5556802	ExpressionStatement	ASSERT ( new_req )	1060:1:26777:26792	5556721	5	True				
ANR	5556803	CallExpression	ASSERT ( new_req )		5556721	0					
ANR	5556804	Callee	ASSERT		5556721	0					
ANR	5556805	Identifier	ASSERT		5556721	0					
ANR	5556806	ArgumentList	new_req		5556721	1					
ANR	5556807	Argument	new_req		5556721	0					
ANR	5556808	Identifier	new_req		5556721	0					
ANR	5556809	ExpressionStatement	new_req -> setMode ( VMGahpRequest :: BLOCKING )	1061:1:26795:26836	5556721	6	True				
ANR	5556810	CallExpression	new_req -> setMode ( VMGahpRequest :: BLOCKING )		5556721	0					
ANR	5556811	Callee	new_req -> setMode		5556721	0					
ANR	5556812	PtrMemberAccess	new_req -> setMode		5556721	0					
ANR	5556813	Identifier	new_req		5556721	0					
ANR	5556814	Identifier	setMode		5556721	1					
ANR	5556815	ArgumentList	VMGahpRequest :: BLOCKING		5556721	1					
ANR	5556816	Argument	VMGahpRequest :: BLOCKING		5556721	0					
ANR	5556817	Identifier	VMGahpRequest :: BLOCKING		5556721	0					
ANR	5556818	ExpressionStatement	new_req -> setTimeout ( m_vmoperation_timeout )	1062:1:26839:26881	5556721	7	True				
ANR	5556819	CallExpression	new_req -> setTimeout ( m_vmoperation_timeout )		5556721	0					
ANR	5556820	Callee	new_req -> setTimeout		5556721	0					
ANR	5556821	PtrMemberAccess	new_req -> setTimeout		5556721	0					
ANR	5556822	Identifier	new_req		5556721	0					
ANR	5556823	Identifier	setTimeout		5556721	1					
ANR	5556824	ArgumentList	m_vmoperation_timeout		5556721	1					
ANR	5556825	Argument	m_vmoperation_timeout		5556721	0					
ANR	5556826	Identifier	m_vmoperation_timeout		5556721	0					
ANR	5556827	IdentifierDeclStatement	int p_result ;	1064:1:26885:26897	5556721	8	True				
ANR	5556828	IdentifierDecl	p_result		5556721	0					
ANR	5556829	IdentifierDeclType	int		5556721	0					
ANR	5556830	Identifier	p_result		5556721	1					
ANR	5556831	ExpressionStatement	p_result = new_req -> vmCheckpoint ( m_vm_id )	1065:1:26900:26941	5556721	9	True				
ANR	5556832	AssignmentExpression	p_result = new_req -> vmCheckpoint ( m_vm_id )		5556721	0		=			
ANR	5556833	Identifier	p_result		5556721	0					
ANR	5556834	CallExpression	new_req -> vmCheckpoint ( m_vm_id )		5556721	1					
ANR	5556835	Callee	new_req -> vmCheckpoint		5556721	0					
ANR	5556836	PtrMemberAccess	new_req -> vmCheckpoint		5556721	0					
ANR	5556837	Identifier	new_req		5556721	0					
ANR	5556838	Identifier	vmCheckpoint		5556721	1					
ANR	5556839	ArgumentList	m_vm_id		5556721	1					
ANR	5556840	Argument	m_vm_id		5556721	0					
ANR	5556841	Identifier	m_vm_id		5556721	0					
ANR	5556842	IfStatement	if ( p_result != VMGAHP_REQ_COMMAND_DONE )		5556721	10					
ANR	5556843	Condition	p_result != VMGAHP_REQ_COMMAND_DONE	1068:4:27023:27057	5556721	0	True				
ANR	5556844	EqualityExpression	p_result != VMGAHP_REQ_COMMAND_DONE		5556721	0		!=			
ANR	5556845	Identifier	p_result		5556721	0					
ANR	5556846	Identifier	VMGAHP_REQ_COMMAND_DONE		5556721	1					
ANR	5556847	CompoundStatement		29:41:780:780	5556721	1					
ANR	5556848	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to checkpoint the VM\\n"" )"	1069:2:27064:27114	5556721	0	True				
ANR	5556849	CallExpression	"dprintf ( D_ALWAYS , ""Failed to checkpoint the VM\\n"" )"		5556721	0					
ANR	5556850	Callee	dprintf		5556721	0					
ANR	5556851	Identifier	dprintf		5556721	0					
ANR	5556852	ArgumentList	D_ALWAYS		5556721	1					
ANR	5556853	Argument	D_ALWAYS		5556721	0					
ANR	5556854	Identifier	D_ALWAYS		5556721	0					
ANR	5556855	Argument	"""Failed to checkpoint the VM\\n"""		5556721	1					
ANR	5556856	PrimaryExpression	"""Failed to checkpoint the VM\\n"""		5556721	0					
ANR	5556857	ExpressionStatement	m_vmgahp -> printSystemErrorMsg ( )	1070:2:27118:27149	5556721	1	True				
ANR	5556858	CallExpression	m_vmgahp -> printSystemErrorMsg ( )		5556721	0					
ANR	5556859	Callee	m_vmgahp -> printSystemErrorMsg		5556721	0					
ANR	5556860	PtrMemberAccess	m_vmgahp -> printSystemErrorMsg		5556721	0					
ANR	5556861	Identifier	m_vmgahp		5556721	0					
ANR	5556862	Identifier	printSystemErrorMsg		5556721	1					
ANR	5556863	ArgumentList			5556721	1					
ANR	5556864	Statement	delete	1071:2:27153:27158	5556721	2	True				
ANR	5556865	ExpressionStatement	new_req	1071:9:27160:27167	5556721	3	True				
ANR	5556866	Identifier	new_req		5556721	0					
ANR	5556867	ExpressionStatement	internalVMGahpError ( )	1072:2:27171:27192	5556721	4	True				
ANR	5556868	CallExpression	internalVMGahpError ( )		5556721	0					
ANR	5556869	Callee	internalVMGahpError		5556721	0					
ANR	5556870	Identifier	internalVMGahpError		5556721	0					
ANR	5556871	ArgumentList			5556721	1					
ANR	5556872	ReturnStatement	return false ;	1073:2:27196:27208	5556721	5	True				
ANR	5556873	Identifier	false		5556721	0					
ANR	5556874	IdentifierDeclStatement	MyString gahpmsg ;	1076:1:27215:27231	5556721	11	True				
ANR	5556875	IdentifierDecl	gahpmsg		5556721	0					
ANR	5556876	IdentifierDeclType	MyString		5556721	0					
ANR	5556877	Identifier	gahpmsg		5556721	1					
ANR	5556878	IfStatement	if ( new_req -> checkResult ( gahpmsg ) == false )		5556721	12					
ANR	5556879	Condition	new_req -> checkResult ( gahpmsg ) == false	1077:5:27238:27275	5556721	0	True				
ANR	5556880	EqualityExpression	new_req -> checkResult ( gahpmsg ) == false		5556721	0		==			
ANR	5556881	CallExpression	new_req -> checkResult ( gahpmsg )		5556721	0					
ANR	5556882	Callee	new_req -> checkResult		5556721	0					
ANR	5556883	PtrMemberAccess	new_req -> checkResult		5556721	0					
ANR	5556884	Identifier	new_req		5556721	0					
ANR	5556885	Identifier	checkResult		5556721	1					
ANR	5556886	ArgumentList	gahpmsg		5556721	1					
ANR	5556887	Argument	gahpmsg		5556721	0					
ANR	5556888	Identifier	gahpmsg		5556721	0					
ANR	5556889	Identifier	false		5556721	1					
ANR	5556890	CompoundStatement		38:46:999:999	5556721	1					
ANR	5556891	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to checkpoint the VM(%s)"" , gahpmsg . Value ( ) )"	1078:2:27283:27352	5556721	0	True				
ANR	5556892	CallExpression	"dprintf ( D_ALWAYS , ""Failed to checkpoint the VM(%s)"" , gahpmsg . Value ( ) )"		5556721	0					
ANR	5556893	Callee	dprintf		5556721	0					
ANR	5556894	Identifier	dprintf		5556721	0					
ANR	5556895	ArgumentList	D_ALWAYS		5556721	1					
ANR	5556896	Argument	D_ALWAYS		5556721	0					
ANR	5556897	Identifier	D_ALWAYS		5556721	0					
ANR	5556898	Argument	"""Failed to checkpoint the VM(%s)"""		5556721	1					
ANR	5556899	PrimaryExpression	"""Failed to checkpoint the VM(%s)"""		5556721	0					
ANR	5556900	Argument	gahpmsg . Value ( )		5556721	2					
ANR	5556901	CallExpression	gahpmsg . Value ( )		5556721	0					
ANR	5556902	Callee	gahpmsg . Value		5556721	0					
ANR	5556903	MemberAccess	gahpmsg . Value		5556721	0					
ANR	5556904	Identifier	gahpmsg		5556721	0					
ANR	5556905	Identifier	Value		5556721	1					
ANR	5556906	ArgumentList			5556721	1					
ANR	5556907	ExpressionStatement	m_vmgahp -> printSystemErrorMsg ( )	1079:2:27356:27387	5556721	1	True				
ANR	5556908	CallExpression	m_vmgahp -> printSystemErrorMsg ( )		5556721	0					
ANR	5556909	Callee	m_vmgahp -> printSystemErrorMsg		5556721	0					
ANR	5556910	PtrMemberAccess	m_vmgahp -> printSystemErrorMsg		5556721	0					
ANR	5556911	Identifier	m_vmgahp		5556721	0					
ANR	5556912	Identifier	printSystemErrorMsg		5556721	1					
ANR	5556913	ArgumentList			5556721	1					
ANR	5556914	Statement	delete	1080:2:27391:27396	5556721	2	True				
ANR	5556915	ExpressionStatement	new_req	1080:9:27398:27405	5556721	3	True				
ANR	5556916	Identifier	new_req		5556721	0					
ANR	5556917	IfStatement	"if ( strcmp ( gahpmsg . Value ( ) , VMGAHP_ERR_VM_NO_SUPPORT_CHECKPOINT ) )"		5556721	4					
ANR	5556918	Condition	"strcmp ( gahpmsg . Value ( ) , VMGAHP_ERR_VM_NO_SUPPORT_CHECKPOINT )"	1082:6:27414:27473	5556721	0	True				
ANR	5556919	CallExpression	"strcmp ( gahpmsg . Value ( ) , VMGAHP_ERR_VM_NO_SUPPORT_CHECKPOINT )"		5556721	0					
ANR	5556920	Callee	strcmp		5556721	0					
ANR	5556921	Identifier	strcmp		5556721	0					
ANR	5556922	ArgumentList	gahpmsg . Value ( )		5556721	1					
ANR	5556923	Argument	gahpmsg . Value ( )		5556721	0					
ANR	5556924	CallExpression	gahpmsg . Value ( )		5556721	0					
ANR	5556925	Callee	gahpmsg . Value		5556721	0					
ANR	5556926	MemberAccess	gahpmsg . Value		5556721	0					
ANR	5556927	Identifier	gahpmsg		5556721	0					
ANR	5556928	Identifier	Value		5556721	1					
ANR	5556929	ArgumentList			5556721	1					
ANR	5556930	Argument	VMGAHP_ERR_VM_NO_SUPPORT_CHECKPOINT		5556721	1					
ANR	5556931	Identifier	VMGAHP_ERR_VM_NO_SUPPORT_CHECKPOINT		5556721	0					
ANR	5556932	CompoundStatement		43:69:1197:1197	5556721	1					
ANR	5556933	IfStatement	if ( m_vmstatus_tid != - 1 )		5556721	0					
ANR	5556934	Condition	m_vmstatus_tid != - 1	1085:7:27579:27598	5556721	0	True				
ANR	5556935	EqualityExpression	m_vmstatus_tid != - 1		5556721	0		!=			
ANR	5556936	Identifier	m_vmstatus_tid		5556721	0					
ANR	5556937	UnaryOperationExpression	- 1		5556721	1					
ANR	5556938	UnaryOperator	-		5556721	0					
ANR	5556939	PrimaryExpression	1		5556721	1					
ANR	5556940	CompoundStatement		46:30:1322:1322	5556721	1					
ANR	5556941	ExpressionStatement	"daemonCore -> Reset_Timer ( m_vmstatus_tid , 0 , m_vmstatus_interval )"	1086:4:27608:27671	5556721	0	True				
ANR	5556942	CallExpression	"daemonCore -> Reset_Timer ( m_vmstatus_tid , 0 , m_vmstatus_interval )"		5556721	0					
ANR	5556943	Callee	daemonCore -> Reset_Timer		5556721	0					
ANR	5556944	PtrMemberAccess	daemonCore -> Reset_Timer		5556721	0					
ANR	5556945	Identifier	daemonCore		5556721	0					
ANR	5556946	Identifier	Reset_Timer		5556721	1					
ANR	5556947	ArgumentList	m_vmstatus_tid		5556721	1					
ANR	5556948	Argument	m_vmstatus_tid		5556721	0					
ANR	5556949	Identifier	m_vmstatus_tid		5556721	0					
ANR	5556950	Argument	0		5556721	1					
ANR	5556951	PrimaryExpression	0		5556721	0					
ANR	5556952	Argument	m_vmstatus_interval		5556721	2					
ANR	5556953	Identifier	m_vmstatus_interval		5556721	0					
ANR	5556954	ReturnStatement	return false ;	1089:2:27684:27696	5556721	5	True				
ANR	5556955	Identifier	false		5556721	0					
ANR	5556956	Statement	delete	1091:1:27702:27707	5556721	13	True				
ANR	5556957	ExpressionStatement	new_req	1091:8:27709:27716	5556721	14	True				
ANR	5556958	Identifier	new_req		5556721	0					
ANR	5556959	ExpressionStatement	new_req = NULL	1092:1:27719:27733	5556721	15	True				
ANR	5556960	AssignmentExpression	new_req = NULL		5556721	0		=			
ANR	5556961	Identifier	new_req		5556721	0					
ANR	5556962	Identifier	NULL		5556721	1					
ANR	5556963	ExpressionStatement	sync ( )	1096:1:27797:27803	5556721	16	True				
ANR	5556964	CallExpression	sync ( )		5556721	0					
ANR	5556965	Callee	sync		5556721	0					
ANR	5556966	Identifier	sync		5556721	0					
ANR	5556967	ArgumentList			5556721	1					
ANR	5556968	ExpressionStatement	setVMPID ( 0 )	1100:1:27857:27868	5556721	17	True				
ANR	5556969	CallExpression	setVMPID ( 0 )		5556721	0					
ANR	5556970	Callee	setVMPID		5556721	0					
ANR	5556971	Identifier	setVMPID		5556721	0					
ANR	5556972	ArgumentList	0		5556721	1					
ANR	5556973	Argument	0		5556721	0					
ANR	5556974	PrimaryExpression	0		5556721	0					
ANR	5556975	ExpressionStatement	m_is_soft_suspended = false	1102:1:27872:27899	5556721	18	True				
ANR	5556976	AssignmentExpression	m_is_soft_suspended = false		5556721	0		=			
ANR	5556977	Identifier	m_is_soft_suspended		5556721	0					
ANR	5556978	Identifier	false		5556721	1					
ANR	5556979	ExpressionStatement	is_checkpointed = true	1103:1:27902:27924	5556721	19	True				
ANR	5556980	AssignmentExpression	is_checkpointed = true		5556721	0		=			
ANR	5556981	Identifier	is_checkpointed		5556721	0					
ANR	5556982	Identifier	true		5556721	1					
ANR	5556983	ReturnStatement	return true ;	1105:1:27928:27939	5556721	20	True				
ANR	5556984	Identifier	true		5556721	0					
ANR	5556985	ReturnType	bool		5556721	1					
ANR	5556986	Identifier	VMProc :: Ckpt		5556721	2					
ANR	5556987	ParameterList			5556721	3					
ANR	5556988	CFGEntryNode	ENTRY		5556721		True				
ANR	5556989	CFGExitNode	EXIT		5556721		True				
ANR	5556990	Symbol	m_vm_id		5556721						
ANR	5556991	Symbol	m_vm_type . Value		5556721						
ANR	5556992	Symbol	gahpmsg		5556721						
ANR	5556993	Symbol	p_result		5556721						
ANR	5556994	Symbol	VMGAHP_REQ_COMMAND_DONE		5556721						
ANR	5556995	Symbol	new_req -> checkResult		5556721						
ANR	5556996	Symbol	CONDOR_VM_UNIVERSE_KVM		5556721						
ANR	5556997	Symbol	is_checkpointed		5556721						
ANR	5556998	Symbol	m_vmstatus_tid		5556721						
ANR	5556999	Symbol	m_vm_checkpoint		5556721						
ANR	5557000	Symbol	CONDOR_VM_UNIVERSE_XEN		5556721						
ANR	5557001	Symbol	daemonCore		5556721						
ANR	5557002	Symbol	strcasecmp		5556721						
ANR	5557003	Symbol	strcmp		5556721						
ANR	5557004	Symbol	VMGahpRequest :: BLOCKING		5556721						
ANR	5557005	Symbol	NULL		5556721						
ANR	5557006	Symbol	false		5556721						
ANR	5557007	Symbol	new_req -> vmCheckpoint		5556721						
ANR	5557008	Symbol	D_ALWAYS		5556721						
ANR	5557009	Symbol	* new_req		5556721						
ANR	5557010	Symbol	D_FULLDEBUG		5556721						
ANR	5557011	Symbol	m_is_vacate_ckpt		5556721						
ANR	5557012	Symbol	gahpmsg . Value		5556721						
ANR	5557013	Symbol	m_vmoperation_timeout		5556721						
ANR	5557014	Symbol	m_vm_type		5556721						
ANR	5557015	Symbol	m_vmgahp		5556721						
ANR	5557016	Symbol	m_is_soft_suspended		5556721						
ANR	5557017	Symbol	true		5556721						
ANR	5557018	Symbol	VMGAHP_ERR_VM_NO_SUPPORT_CHECKPOINT		5556721						
ANR	5557019	Symbol	m_vmstatus_interval		5556721						
ANR	5557020	Symbol	MATCH		5556721						
ANR	5557021	Symbol	new_req		5556721						
ANR	5557022	Function	VMProc :: CkptDone	1108:0:27944:28525							
ANR	5557023	FunctionDef	VMProc :: CkptDone (bool success)		5557022	0					
ANR	5557024	CompoundStatement		1110:0:27981:28525	5557022	0					
ANR	5557025	IfStatement	if ( ! is_checkpointed )		5557022	0					
ANR	5557026	Condition	! is_checkpointed	1111:5:27988:28003	5557022	0	True				
ANR	5557027	UnaryOperationExpression	! is_checkpointed		5557022	0					
ANR	5557028	UnaryOperator	!		5557022	0					
ANR	5557029	Identifier	is_checkpointed		5557022	1					
ANR	5557030	CompoundStatement		2:24:25:25	5557022	1					
ANR	5557031	ReturnStatement	return ;	1112:2:28011:28017	5557022	0	True				
ANR	5557032	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Inside VMProc::CkptDone()\\n"" )"	1115:1:28024:28074	5557022	1	True				
ANR	5557033	CallExpression	"dprintf ( D_FULLDEBUG , ""Inside VMProc::CkptDone()\\n"" )"		5557022	0					
ANR	5557034	Callee	dprintf		5557022	0					
ANR	5557035	Identifier	dprintf		5557022	0					
ANR	5557036	ArgumentList	D_FULLDEBUG		5557022	1					
ANR	5557037	Argument	D_FULLDEBUG		5557022	0					
ANR	5557038	Identifier	D_FULLDEBUG		5557022	0					
ANR	5557039	Argument	"""Inside VMProc::CkptDone()\\n"""		5557022	1					
ANR	5557040	PrimaryExpression	"""Inside VMProc::CkptDone()\\n"""		5557022	0					
ANR	5557041	ExpressionStatement	m_last_ckpt_result = success	1117:1:28078:28106	5557022	2	True				
ANR	5557042	AssignmentExpression	m_last_ckpt_result = success		5557022	0		=			
ANR	5557043	Identifier	m_last_ckpt_result		5557022	0					
ANR	5557044	Identifier	success		5557022	1					
ANR	5557045	IfStatement	if ( success )		5557022	3					
ANR	5557046	Condition	success	1119:5:28114:28120	5557022	0	True				
ANR	5557047	Identifier	success		5557022	0					
ANR	5557048	CompoundStatement		10:15:142:142	5557022	1					
ANR	5557049	ExpressionStatement	m_vm_ckpt_count ++	1122:2:28213:28230	5557022	0	True				
ANR	5557050	PostIncDecOperationExpression	m_vm_ckpt_count ++		5557022	0					
ANR	5557051	Identifier	m_vm_ckpt_count		5557022	0					
ANR	5557052	IncDec	++		5557022	1					
ANR	5557053	ExpressionStatement	m_vm_last_ckpt_time . getTime ( )	1123:2:28234:28263	5557022	1	True				
ANR	5557054	CallExpression	m_vm_last_ckpt_time . getTime ( )		5557022	0					
ANR	5557055	Callee	m_vm_last_ckpt_time . getTime		5557022	0					
ANR	5557056	MemberAccess	m_vm_last_ckpt_time . getTime		5557022	0					
ANR	5557057	Identifier	m_vm_last_ckpt_time		5557022	0					
ANR	5557058	Identifier	getTime		5557022	1					
ANR	5557059	ArgumentList			5557022	1					
ANR	5557060	IfStatement	if ( m_is_vacate_ckpt )		5557022	4					
ANR	5557061	Condition	m_is_vacate_ckpt	1126:5:28274:28289	5557022	0	True				
ANR	5557062	Identifier	m_is_vacate_ckpt		5557022	0					
ANR	5557063	CompoundStatement		17:24:311:311	5557022	1					
ANR	5557064	ReturnStatement	return ;	1129:2:28371:28377	5557022	0	True				
ANR	5557065	IfStatement	if ( is_suspended )		5557022	5					
ANR	5557066	Condition	is_suspended	1132:5:28388:28399	5557022	0	True				
ANR	5557067	Identifier	is_suspended		5557022	0					
ANR	5557068	CompoundStatement		23:20:421:421	5557022	1					
ANR	5557069	ExpressionStatement	Starter -> RemoteSuspend ( 1 )	1134:2:28456:28481	5557022	0	True				
ANR	5557070	CallExpression	Starter -> RemoteSuspend ( 1 )		5557022	0					
ANR	5557071	Callee	Starter -> RemoteSuspend		5557022	0					
ANR	5557072	PtrMemberAccess	Starter -> RemoteSuspend		5557022	0					
ANR	5557073	Identifier	Starter		5557022	0					
ANR	5557074	Identifier	RemoteSuspend		5557022	1					
ANR	5557075	ArgumentList	1		5557022	1					
ANR	5557076	Argument	1		5557022	0					
ANR	5557077	PrimaryExpression	1		5557022	0					
ANR	5557078	ElseStatement	else		5557022	0					
ANR	5557079	CompoundStatement		26:7:508:508	5557022	0					
ANR	5557080	ExpressionStatement	Starter -> RemoteContinue ( 1 )	1136:2:28494:28520	5557022	0	True				
ANR	5557081	CallExpression	Starter -> RemoteContinue ( 1 )		5557022	0					
ANR	5557082	Callee	Starter -> RemoteContinue		5557022	0					
ANR	5557083	PtrMemberAccess	Starter -> RemoteContinue		5557022	0					
ANR	5557084	Identifier	Starter		5557022	0					
ANR	5557085	Identifier	RemoteContinue		5557022	1					
ANR	5557086	ArgumentList	1		5557022	1					
ANR	5557087	Argument	1		5557022	0					
ANR	5557088	PrimaryExpression	1		5557022	0					
ANR	5557089	ReturnType	void		5557022	1					
ANR	5557090	Identifier	VMProc :: CkptDone		5557022	2					
ANR	5557091	ParameterList	bool success		5557022	3					
ANR	5557092	Parameter	bool success	1109:17:27967:27978	5557022	0	True				
ANR	5557093	ParameterType	bool		5557022	0					
ANR	5557094	Identifier	success		5557022	1					
ANR	5557095	CFGEntryNode	ENTRY		5557022		True				
ANR	5557096	CFGExitNode	EXIT		5557022		True				
ANR	5557097	Symbol	m_last_ckpt_result		5557022						
ANR	5557098	Symbol	is_checkpointed		5557022						
ANR	5557099	Symbol	success		5557022						
ANR	5557100	Symbol	m_vm_last_ckpt_time		5557022						
ANR	5557101	Symbol	is_suspended		5557022						
ANR	5557102	Symbol	D_FULLDEBUG		5557022						
ANR	5557103	Symbol	m_is_vacate_ckpt		5557022						
ANR	5557104	Symbol	Starter		5557022						
ANR	5557105	Symbol	m_vm_ckpt_count		5557022						
ANR	5557106	Function	VMProc :: PIDofVM	1140:0:28528:29593							
ANR	5557107	FunctionDef	VMProc :: PIDofVM ()		5557106	0					
ANR	5557108	CompoundStatement		1142:0:28550:29593	5557106	0					
ANR	5557109	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Inside VMProc::PIDofVM()\\n"" )"	1143:1:28553:28602	5557106	0	True				
ANR	5557110	CallExpression	"dprintf ( D_FULLDEBUG , ""Inside VMProc::PIDofVM()\\n"" )"		5557106	0					
ANR	5557111	Callee	dprintf		5557106	0					
ANR	5557112	Identifier	dprintf		5557106	0					
ANR	5557113	ArgumentList	D_FULLDEBUG		5557106	1					
ANR	5557114	Argument	D_FULLDEBUG		5557106	0					
ANR	5557115	Identifier	D_FULLDEBUG		5557106	0					
ANR	5557116	Argument	"""Inside VMProc::PIDofVM()\\n"""		5557106	1					
ANR	5557117	PrimaryExpression	"""Inside VMProc::PIDofVM()\\n"""		5557106	0					
ANR	5557118	IfStatement	if ( ! m_vm_id || ! m_vmgahp )		5557106	1					
ANR	5557119	Condition	! m_vm_id || ! m_vmgahp	1145:5:28610:28630	5557106	0	True				
ANR	5557120	OrExpression	! m_vm_id || ! m_vmgahp		5557106	0		||			
ANR	5557121	UnaryOperationExpression	! m_vm_id		5557106	0					
ANR	5557122	UnaryOperator	!		5557106	0					
ANR	5557123	Identifier	m_vm_id		5557106	1					
ANR	5557124	UnaryOperationExpression	! m_vmgahp		5557106	1					
ANR	5557125	UnaryOperator	!		5557106	0					
ANR	5557126	Identifier	m_vmgahp		5557106	1					
ANR	5557127	CompoundStatement		4:29:83:83	5557106	1					
ANR	5557128	ReturnStatement	return 0 ;	1146:2:28638:28646	5557106	0	True				
ANR	5557129	PrimaryExpression	0		5557106	0					
ANR	5557130	IdentifierDeclStatement	VMGahpRequest * new_req = new VMGahpRequest ( m_vmgahp ) ;	1149:1:28653:28705	5557106	2	True				
ANR	5557131	IdentifierDecl	* new_req = new VMGahpRequest ( m_vmgahp )		5557106	0					
ANR	5557132	IdentifierDeclType	VMGahpRequest *		5557106	0					
ANR	5557133	Identifier	new_req		5557106	1					
ANR	5557134	AssignmentExpression	* new_req = new VMGahpRequest ( m_vmgahp )		5557106	2		=			
ANR	5557135	Identifier	m_vmgahp		5557106	0					
ANR	5557136	Identifier	m_vmgahp		5557106	1					
ANR	5557137	ExpressionStatement	ASSERT ( new_req )	1150:1:28708:28723	5557106	3	True				
ANR	5557138	CallExpression	ASSERT ( new_req )		5557106	0					
ANR	5557139	Callee	ASSERT		5557106	0					
ANR	5557140	Identifier	ASSERT		5557106	0					
ANR	5557141	ArgumentList	new_req		5557106	1					
ANR	5557142	Argument	new_req		5557106	0					
ANR	5557143	Identifier	new_req		5557106	0					
ANR	5557144	ExpressionStatement	new_req -> setMode ( VMGahpRequest :: BLOCKING )	1152:1:28727:28768	5557106	4	True				
ANR	5557145	CallExpression	new_req -> setMode ( VMGahpRequest :: BLOCKING )		5557106	0					
ANR	5557146	Callee	new_req -> setMode		5557106	0					
ANR	5557147	PtrMemberAccess	new_req -> setMode		5557106	0					
ANR	5557148	Identifier	new_req		5557106	0					
ANR	5557149	Identifier	setMode		5557106	1					
ANR	5557150	ArgumentList	VMGahpRequest :: BLOCKING		5557106	1					
ANR	5557151	Argument	VMGahpRequest :: BLOCKING		5557106	0					
ANR	5557152	Identifier	VMGahpRequest :: BLOCKING		5557106	0					
ANR	5557153	ExpressionStatement	new_req -> setTimeout ( m_vmoperation_timeout )	1153:1:28771:28813	5557106	5	True				
ANR	5557154	CallExpression	new_req -> setTimeout ( m_vmoperation_timeout )		5557106	0					
ANR	5557155	Callee	new_req -> setTimeout		5557106	0					
ANR	5557156	PtrMemberAccess	new_req -> setTimeout		5557106	0					
ANR	5557157	Identifier	new_req		5557106	0					
ANR	5557158	Identifier	setTimeout		5557106	1					
ANR	5557159	ArgumentList	m_vmoperation_timeout		5557106	1					
ANR	5557160	Argument	m_vmoperation_timeout		5557106	0					
ANR	5557161	Identifier	m_vmoperation_timeout		5557106	0					
ANR	5557162	IdentifierDeclStatement	int p_result ;	1155:1:28817:28829	5557106	6	True				
ANR	5557163	IdentifierDecl	p_result		5557106	0					
ANR	5557164	IdentifierDeclType	int		5557106	0					
ANR	5557165	Identifier	p_result		5557106	1					
ANR	5557166	ExpressionStatement	p_result = new_req -> vmGetPid ( m_vm_id )	1156:1:28832:28869	5557106	7	True				
ANR	5557167	AssignmentExpression	p_result = new_req -> vmGetPid ( m_vm_id )		5557106	0		=			
ANR	5557168	Identifier	p_result		5557106	0					
ANR	5557169	CallExpression	new_req -> vmGetPid ( m_vm_id )		5557106	1					
ANR	5557170	Callee	new_req -> vmGetPid		5557106	0					
ANR	5557171	PtrMemberAccess	new_req -> vmGetPid		5557106	0					
ANR	5557172	Identifier	new_req		5557106	0					
ANR	5557173	Identifier	vmGetPid		5557106	1					
ANR	5557174	ArgumentList	m_vm_id		5557106	1					
ANR	5557175	Argument	m_vm_id		5557106	0					
ANR	5557176	Identifier	m_vm_id		5557106	0					
ANR	5557177	IfStatement	if ( p_result != VMGAHP_REQ_COMMAND_DONE )		5557106	8					
ANR	5557178	Condition	p_result != VMGAHP_REQ_COMMAND_DONE	1159:4:28951:28985	5557106	0	True				
ANR	5557179	EqualityExpression	p_result != VMGAHP_REQ_COMMAND_DONE		5557106	0		!=			
ANR	5557180	Identifier	p_result		5557106	0					
ANR	5557181	Identifier	VMGAHP_REQ_COMMAND_DONE		5557106	1					
ANR	5557182	CompoundStatement		18:41:437:437	5557106	1					
ANR	5557183	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to get PID of VM\\n"" )"	1160:2:28992:29038	5557106	0	True				
ANR	5557184	CallExpression	"dprintf ( D_ALWAYS , ""Failed to get PID of VM\\n"" )"		5557106	0					
ANR	5557185	Callee	dprintf		5557106	0					
ANR	5557186	Identifier	dprintf		5557106	0					
ANR	5557187	ArgumentList	D_ALWAYS		5557106	1					
ANR	5557188	Argument	D_ALWAYS		5557106	0					
ANR	5557189	Identifier	D_ALWAYS		5557106	0					
ANR	5557190	Argument	"""Failed to get PID of VM\\n"""		5557106	1					
ANR	5557191	PrimaryExpression	"""Failed to get PID of VM\\n"""		5557106	0					
ANR	5557192	ExpressionStatement	m_vmgahp -> printSystemErrorMsg ( )	1161:2:29042:29073	5557106	1	True				
ANR	5557193	CallExpression	m_vmgahp -> printSystemErrorMsg ( )		5557106	0					
ANR	5557194	Callee	m_vmgahp -> printSystemErrorMsg		5557106	0					
ANR	5557195	PtrMemberAccess	m_vmgahp -> printSystemErrorMsg		5557106	0					
ANR	5557196	Identifier	m_vmgahp		5557106	0					
ANR	5557197	Identifier	printSystemErrorMsg		5557106	1					
ANR	5557198	ArgumentList			5557106	1					
ANR	5557199	Statement	delete	1162:2:29077:29082	5557106	2	True				
ANR	5557200	ExpressionStatement	new_req	1162:9:29084:29091	5557106	3	True				
ANR	5557201	Identifier	new_req		5557106	0					
ANR	5557202	ExpressionStatement	internalVMGahpError ( )	1163:2:29095:29116	5557106	4	True				
ANR	5557203	CallExpression	internalVMGahpError ( )		5557106	0					
ANR	5557204	Callee	internalVMGahpError		5557106	0					
ANR	5557205	Identifier	internalVMGahpError		5557106	0					
ANR	5557206	ArgumentList			5557106	1					
ANR	5557207	ReturnStatement	return 0 ;	1164:2:29120:29128	5557106	5	True				
ANR	5557208	PrimaryExpression	0		5557106	0					
ANR	5557209	IdentifierDeclStatement	MyString gahpmsg ;	1167:1:29135:29151	5557106	9	True				
ANR	5557210	IdentifierDecl	gahpmsg		5557106	0					
ANR	5557211	IdentifierDeclType	MyString		5557106	0					
ANR	5557212	Identifier	gahpmsg		5557106	1					
ANR	5557213	IfStatement	if ( new_req -> checkResult ( gahpmsg ) == false )		5557106	10					
ANR	5557214	Condition	new_req -> checkResult ( gahpmsg ) == false	1168:5:29158:29195	5557106	0	True				
ANR	5557215	EqualityExpression	new_req -> checkResult ( gahpmsg ) == false		5557106	0		==			
ANR	5557216	CallExpression	new_req -> checkResult ( gahpmsg )		5557106	0					
ANR	5557217	Callee	new_req -> checkResult		5557106	0					
ANR	5557218	PtrMemberAccess	new_req -> checkResult		5557106	0					
ANR	5557219	Identifier	new_req		5557106	0					
ANR	5557220	Identifier	checkResult		5557106	1					
ANR	5557221	ArgumentList	gahpmsg		5557106	1					
ANR	5557222	Argument	gahpmsg		5557106	0					
ANR	5557223	Identifier	gahpmsg		5557106	0					
ANR	5557224	Identifier	false		5557106	1					
ANR	5557225	CompoundStatement		27:46:648:648	5557106	1					
ANR	5557226	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to get PID of VM(%s)"" , gahpmsg . Value ( ) )"	1169:2:29203:29268	5557106	0	True				
ANR	5557227	CallExpression	"dprintf ( D_ALWAYS , ""Failed to get PID of VM(%s)"" , gahpmsg . Value ( ) )"		5557106	0					
ANR	5557228	Callee	dprintf		5557106	0					
ANR	5557229	Identifier	dprintf		5557106	0					
ANR	5557230	ArgumentList	D_ALWAYS		5557106	1					
ANR	5557231	Argument	D_ALWAYS		5557106	0					
ANR	5557232	Identifier	D_ALWAYS		5557106	0					
ANR	5557233	Argument	"""Failed to get PID of VM(%s)"""		5557106	1					
ANR	5557234	PrimaryExpression	"""Failed to get PID of VM(%s)"""		5557106	0					
ANR	5557235	Argument	gahpmsg . Value ( )		5557106	2					
ANR	5557236	CallExpression	gahpmsg . Value ( )		5557106	0					
ANR	5557237	Callee	gahpmsg . Value		5557106	0					
ANR	5557238	MemberAccess	gahpmsg . Value		5557106	0					
ANR	5557239	Identifier	gahpmsg		5557106	0					
ANR	5557240	Identifier	Value		5557106	1					
ANR	5557241	ArgumentList			5557106	1					
ANR	5557242	ExpressionStatement	m_vmgahp -> printSystemErrorMsg ( )	1170:2:29272:29303	5557106	1	True				
ANR	5557243	CallExpression	m_vmgahp -> printSystemErrorMsg ( )		5557106	0					
ANR	5557244	Callee	m_vmgahp -> printSystemErrorMsg		5557106	0					
ANR	5557245	PtrMemberAccess	m_vmgahp -> printSystemErrorMsg		5557106	0					
ANR	5557246	Identifier	m_vmgahp		5557106	0					
ANR	5557247	Identifier	printSystemErrorMsg		5557106	1					
ANR	5557248	ArgumentList			5557106	1					
ANR	5557249	Statement	delete	1171:2:29307:29312	5557106	2	True				
ANR	5557250	ExpressionStatement	new_req	1171:9:29314:29321	5557106	3	True				
ANR	5557251	Identifier	new_req		5557106	0					
ANR	5557252	ReturnStatement	return 0 ;	1172:2:29325:29333	5557106	4	True				
ANR	5557253	PrimaryExpression	0		5557106	0					
ANR	5557254	IdentifierDeclStatement	Gahp_Args * result_args ;	1175:1:29340:29362	5557106	11	True				
ANR	5557255	IdentifierDecl	* result_args		5557106	0					
ANR	5557256	IdentifierDeclType	Gahp_Args *		5557106	0					
ANR	5557257	Identifier	result_args		5557106	1					
ANR	5557258	ExpressionStatement	result_args = new_req -> getResult ( )	1176:1:29365:29399	5557106	12	True				
ANR	5557259	AssignmentExpression	result_args = new_req -> getResult ( )		5557106	0		=			
ANR	5557260	Identifier	result_args		5557106	0					
ANR	5557261	CallExpression	new_req -> getResult ( )		5557106	1					
ANR	5557262	Callee	new_req -> getResult		5557106	0					
ANR	5557263	PtrMemberAccess	new_req -> getResult		5557106	0					
ANR	5557264	Identifier	new_req		5557106	0					
ANR	5557265	Identifier	getResult		5557106	1					
ANR	5557266	ArgumentList			5557106	1					
ANR	5557267	IdentifierDeclStatement	"int return_pid = ( int ) strtol ( result_args -> argv [ 2 ] , ( char * * ) NULL , 10 ) ;"	1179:1:29421:29490	5557106	13	True				
ANR	5557268	IdentifierDecl	"return_pid = ( int ) strtol ( result_args -> argv [ 2 ] , ( char * * ) NULL , 10 )"		5557106	0					
ANR	5557269	IdentifierDeclType	int		5557106	0					
ANR	5557270	Identifier	return_pid		5557106	1					
ANR	5557271	AssignmentExpression	"return_pid = ( int ) strtol ( result_args -> argv [ 2 ] , ( char * * ) NULL , 10 )"		5557106	2		=			
ANR	5557272	Identifier	return_pid		5557106	0					
ANR	5557273	CastExpression	"( int ) strtol ( result_args -> argv [ 2 ] , ( char * * ) NULL , 10 )"		5557106	1					
ANR	5557274	CastTarget	int		5557106	0					
ANR	5557275	CallExpression	"strtol ( result_args -> argv [ 2 ] , ( char * * ) NULL , 10 )"		5557106	1					
ANR	5557276	Callee	strtol		5557106	0					
ANR	5557277	Identifier	strtol		5557106	0					
ANR	5557278	ArgumentList	result_args -> argv [ 2 ]		5557106	1					
ANR	5557279	Argument	result_args -> argv [ 2 ]		5557106	0					
ANR	5557280	ArrayIndexing	result_args -> argv [ 2 ]		5557106	0					
ANR	5557281	PtrMemberAccess	result_args -> argv		5557106	0					
ANR	5557282	Identifier	result_args		5557106	0					
ANR	5557283	Identifier	argv		5557106	1					
ANR	5557284	PrimaryExpression	2		5557106	1					
ANR	5557285	Argument	( char * * ) NULL		5557106	1					
ANR	5557286	CastExpression	( char * * ) NULL		5557106	0					
ANR	5557287	CastTarget	char * *		5557106	0					
ANR	5557288	Identifier	NULL		5557106	1					
ANR	5557289	Argument	10		5557106	2					
ANR	5557290	PrimaryExpression	10		5557106	0					
ANR	5557291	IfStatement	if ( return_pid <= 0 )		5557106	14					
ANR	5557292	Condition	return_pid <= 0	1180:5:29497:29511	5557106	0	True				
ANR	5557293	RelationalExpression	return_pid <= 0		5557106	0		<=			
ANR	5557294	Identifier	return_pid		5557106	0					
ANR	5557295	PrimaryExpression	0		5557106	1					
ANR	5557296	CompoundStatement		39:23:964:964	5557106	1					
ANR	5557297	ExpressionStatement	return_pid = 0	1181:2:29519:29533	5557106	0	True				
ANR	5557298	AssignmentExpression	return_pid = 0		5557106	0		=			
ANR	5557299	Identifier	return_pid		5557106	0					
ANR	5557300	PrimaryExpression	0		5557106	1					
ANR	5557301	Statement	delete	1183:1:29539:29544	5557106	15	True				
ANR	5557302	ExpressionStatement	new_req	1183:8:29546:29553	5557106	16	True				
ANR	5557303	Identifier	new_req		5557106	0					
ANR	5557304	ExpressionStatement	new_req = NULL	1184:1:29556:29570	5557106	17	True				
ANR	5557305	AssignmentExpression	new_req = NULL		5557106	0		=			
ANR	5557306	Identifier	new_req		5557106	0					
ANR	5557307	Identifier	NULL		5557106	1					
ANR	5557308	ReturnStatement	return return_pid ;	1186:1:29574:29591	5557106	18	True				
ANR	5557309	Identifier	return_pid		5557106	0					
ANR	5557310	ReturnType	int		5557106	1					
ANR	5557311	Identifier	VMProc :: PIDofVM		5557106	2					
ANR	5557312	ParameterList			5557106	3					
ANR	5557313	CFGEntryNode	ENTRY		5557106		True				
ANR	5557314	CFGExitNode	EXIT		5557106		True				
ANR	5557315	Symbol	* result_args		5557106						
ANR	5557316	Symbol	VMGahpRequest :: BLOCKING		5557106						
ANR	5557317	Symbol	NULL		5557106						
ANR	5557318	Symbol	m_vm_id		5557106						
ANR	5557319	Symbol	return_pid		5557106						
ANR	5557320	Symbol	D_ALWAYS		5557106						
ANR	5557321	Symbol	false		5557106						
ANR	5557322	Symbol	* new_req		5557106						
ANR	5557323	Symbol	gahpmsg		5557106						
ANR	5557324	Symbol	D_FULLDEBUG		5557106						
ANR	5557325	Symbol	result_args		5557106						
ANR	5557326	Symbol	p_result		5557106						
ANR	5557327	Symbol	gahpmsg . Value		5557106						
ANR	5557328	Symbol	result_args -> argv		5557106						
ANR	5557329	Symbol	* result_args -> argv		5557106						
ANR	5557330	Symbol	m_vmoperation_timeout		5557106						
ANR	5557331	Symbol	VMGAHP_REQ_COMMAND_DONE		5557106						
ANR	5557332	Symbol	new_req -> checkResult		5557106						
ANR	5557333	Symbol	* * result_args		5557106						
ANR	5557334	Symbol	strtol		5557106						
ANR	5557335	Symbol	m_vmgahp		5557106						
ANR	5557336	Symbol	new_req -> vmGetPid		5557106						
ANR	5557337	Symbol	new_req -> getResult		5557106						
ANR	5557338	Symbol	new_req		5557106						
ANR	5557339	Function	VMProc :: PublishUpdateAd	1189:0:29596:31290							
ANR	5557340	FunctionDef	VMProc :: PublishUpdateAd (ClassAd * ad)		5557339	0					
ANR	5557341	CompoundStatement		1191:0:29640:31290	5557339	0					
ANR	5557342	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Inside VMProc::PublishUpdateAd()\\n"" )"	1192:1:29643:29703	5557339	0	True				
ANR	5557343	CallExpression	"dprintf ( D_FULLDEBUG , ""Inside VMProc::PublishUpdateAd()\\n"" )"		5557339	0					
ANR	5557344	Callee	dprintf		5557339	0					
ANR	5557345	Identifier	dprintf		5557339	0					
ANR	5557346	ArgumentList	D_FULLDEBUG		5557339	1					
ANR	5557347	Argument	D_FULLDEBUG		5557339	0					
ANR	5557348	Identifier	D_FULLDEBUG		5557339	0					
ANR	5557349	Argument	"""Inside VMProc::PublishUpdateAd()\\n"""		5557339	1					
ANR	5557350	PrimaryExpression	"""Inside VMProc::PublishUpdateAd()\\n"""		5557339	0					
ANR	5557351	IdentifierDeclStatement	MyString buf ;	1194:1:29707:29719	5557339	1	True				
ANR	5557352	IdentifierDecl	buf		5557339	0					
ANR	5557353	IdentifierDeclType	MyString		5557339	0					
ANR	5557354	Identifier	buf		5557339	1					
ANR	5557355	IfStatement	"if ( ( strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_XEN ) == MATCH ) || ( strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_KVM ) == MATCH ) )"		5557339	2					
ANR	5557356	Condition	"( strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_XEN ) == MATCH ) || ( strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_KVM ) == MATCH )"	1195:5:29726:29857	5557339	0	True				
ANR	5557357	OrExpression	"( strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_XEN ) == MATCH ) || ( strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_KVM ) == MATCH )"		5557339	0		||			
ANR	5557358	EqualityExpression	"strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_XEN ) == MATCH"		5557339	0		==			
ANR	5557359	CallExpression	"strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_XEN )"		5557339	0					
ANR	5557360	Callee	strcasecmp		5557339	0					
ANR	5557361	Identifier	strcasecmp		5557339	0					
ANR	5557362	ArgumentList	m_vm_type . Value ( )		5557339	1					
ANR	5557363	Argument	m_vm_type . Value ( )		5557339	0					
ANR	5557364	CallExpression	m_vm_type . Value ( )		5557339	0					
ANR	5557365	Callee	m_vm_type . Value		5557339	0					
ANR	5557366	MemberAccess	m_vm_type . Value		5557339	0					
ANR	5557367	Identifier	m_vm_type		5557339	0					
ANR	5557368	Identifier	Value		5557339	1					
ANR	5557369	ArgumentList			5557339	1					
ANR	5557370	Argument	CONDOR_VM_UNIVERSE_XEN		5557339	1					
ANR	5557371	Identifier	CONDOR_VM_UNIVERSE_XEN		5557339	0					
ANR	5557372	Identifier	MATCH		5557339	1					
ANR	5557373	EqualityExpression	"strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_KVM ) == MATCH"		5557339	1		==			
ANR	5557374	CallExpression	"strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_KVM )"		5557339	0					
ANR	5557375	Callee	strcasecmp		5557339	0					
ANR	5557376	Identifier	strcasecmp		5557339	0					
ANR	5557377	ArgumentList	m_vm_type . Value ( )		5557339	1					
ANR	5557378	Argument	m_vm_type . Value ( )		5557339	0					
ANR	5557379	CallExpression	m_vm_type . Value ( )		5557339	0					
ANR	5557380	Callee	m_vm_type . Value		5557339	0					
ANR	5557381	MemberAccess	m_vm_type . Value		5557339	0					
ANR	5557382	Identifier	m_vm_type		5557339	0					
ANR	5557383	Identifier	Value		5557339	1					
ANR	5557384	ArgumentList			5557339	1					
ANR	5557385	Argument	CONDOR_VM_UNIVERSE_KVM		5557339	1					
ANR	5557386	Identifier	CONDOR_VM_UNIVERSE_KVM		5557339	0					
ANR	5557387	Identifier	MATCH		5557339	1					
ANR	5557388	CompoundStatement		7:2:257:278	5557339	1					
ANR	5557389	IdentifierDeclStatement	float sys_time = m_vm_cputime ;	1196:2:29865:29894	5557339	0	True				
ANR	5557390	IdentifierDecl	sys_time = m_vm_cputime		5557339	0					
ANR	5557391	IdentifierDeclType	float		5557339	0					
ANR	5557392	Identifier	sys_time		5557339	1					
ANR	5557393	AssignmentExpression	sys_time = m_vm_cputime		5557339	2		=			
ANR	5557394	Identifier	m_vm_cputime		5557339	0					
ANR	5557395	Identifier	m_vm_cputime		5557339	1					
ANR	5557396	IdentifierDeclStatement	float user_time = 0.0 ;	1197:2:29898:29919	5557339	1	True				
ANR	5557397	IdentifierDecl	user_time = 0.0		5557339	0					
ANR	5557398	IdentifierDeclType	float		5557339	0					
ANR	5557399	Identifier	user_time		5557339	1					
ANR	5557400	AssignmentExpression	user_time = 0.0		5557339	2		=			
ANR	5557401	Identifier	user_time		5557339	0					
ANR	5557402	PrimaryExpression	0.0		5557339	1					
ANR	5557403	ExpressionStatement	"ad -> Assign ( ATTR_JOB_REMOTE_SYS_CPU , sys_time )"	1200:2:29953:29999	5557339	2	True				
ANR	5557404	CallExpression	"ad -> Assign ( ATTR_JOB_REMOTE_SYS_CPU , sys_time )"		5557339	0					
ANR	5557405	Callee	ad -> Assign		5557339	0					
ANR	5557406	PtrMemberAccess	ad -> Assign		5557339	0					
ANR	5557407	Identifier	ad		5557339	0					
ANR	5557408	Identifier	Assign		5557339	1					
ANR	5557409	ArgumentList	ATTR_JOB_REMOTE_SYS_CPU		5557339	1					
ANR	5557410	Argument	ATTR_JOB_REMOTE_SYS_CPU		5557339	0					
ANR	5557411	Identifier	ATTR_JOB_REMOTE_SYS_CPU		5557339	0					
ANR	5557412	Argument	sys_time		5557339	1					
ANR	5557413	Identifier	sys_time		5557339	0					
ANR	5557414	ExpressionStatement	"ad -> Assign ( ATTR_JOB_REMOTE_USER_CPU , user_time )"	1201:2:30003:30051	5557339	3	True				
ANR	5557415	CallExpression	"ad -> Assign ( ATTR_JOB_REMOTE_USER_CPU , user_time )"		5557339	0					
ANR	5557416	Callee	ad -> Assign		5557339	0					
ANR	5557417	PtrMemberAccess	ad -> Assign		5557339	0					
ANR	5557418	Identifier	ad		5557339	0					
ANR	5557419	Identifier	Assign		5557339	1					
ANR	5557420	ArgumentList	ATTR_JOB_REMOTE_USER_CPU		5557339	1					
ANR	5557421	Argument	ATTR_JOB_REMOTE_USER_CPU		5557339	0					
ANR	5557422	Identifier	ATTR_JOB_REMOTE_USER_CPU		5557339	0					
ANR	5557423	Argument	user_time		5557339	1					
ANR	5557424	Identifier	user_time		5557339	0					
ANR	5557425	ExpressionStatement	"ad -> Assign ( ATTR_IMAGE_SIZE , ( int ) 0 )"	1202:2:30055:30090	5557339	4	True				
ANR	5557426	CallExpression	"ad -> Assign ( ATTR_IMAGE_SIZE , ( int ) 0 )"		5557339	0					
ANR	5557427	Callee	ad -> Assign		5557339	0					
ANR	5557428	PtrMemberAccess	ad -> Assign		5557339	0					
ANR	5557429	Identifier	ad		5557339	0					
ANR	5557430	Identifier	Assign		5557339	1					
ANR	5557431	ArgumentList	ATTR_IMAGE_SIZE		5557339	1					
ANR	5557432	Argument	ATTR_IMAGE_SIZE		5557339	0					
ANR	5557433	Identifier	ATTR_IMAGE_SIZE		5557339	0					
ANR	5557434	Argument	( int ) 0		5557339	1					
ANR	5557435	CastExpression	( int ) 0		5557339	0					
ANR	5557436	CastTarget	int		5557339	0					
ANR	5557437	PrimaryExpression	0		5557339	1					
ANR	5557438	ExpressionStatement	"ad -> Assign ( ATTR_RESIDENT_SET_SIZE , ( int ) 0 )"	1203:2:30094:30136	5557339	5	True				
ANR	5557439	CallExpression	"ad -> Assign ( ATTR_RESIDENT_SET_SIZE , ( int ) 0 )"		5557339	0					
ANR	5557440	Callee	ad -> Assign		5557339	0					
ANR	5557441	PtrMemberAccess	ad -> Assign		5557339	0					
ANR	5557442	Identifier	ad		5557339	0					
ANR	5557443	Identifier	Assign		5557339	1					
ANR	5557444	ArgumentList	ATTR_RESIDENT_SET_SIZE		5557339	1					
ANR	5557445	Argument	ATTR_RESIDENT_SET_SIZE		5557339	0					
ANR	5557446	Identifier	ATTR_RESIDENT_SET_SIZE		5557339	0					
ANR	5557447	Argument	( int ) 0		5557339	1					
ANR	5557448	CastExpression	( int ) 0		5557339	0					
ANR	5557449	CastTarget	int		5557339	0					
ANR	5557450	PrimaryExpression	0		5557339	1					
ANR	5557451	ElseStatement	else		5557339	0					
ANR	5557452	CompoundStatement		21:2:674:700	5557339	0					
ANR	5557453	IdentifierDeclStatement	long sys_time = 0 ;	1206:2:30185:30202	5557339	0	True				
ANR	5557454	IdentifierDecl	sys_time = 0		5557339	0					
ANR	5557455	IdentifierDeclType	long		5557339	0					
ANR	5557456	Identifier	sys_time		5557339	1					
ANR	5557457	AssignmentExpression	sys_time = 0		5557339	2		=			
ANR	5557458	Identifier	sys_time		5557339	0					
ANR	5557459	PrimaryExpression	0		5557339	1					
ANR	5557460	IdentifierDeclStatement	long user_time = 0 ;	1207:2:30206:30224	5557339	1	True				
ANR	5557461	IdentifierDecl	user_time = 0		5557339	0					
ANR	5557462	IdentifierDeclType	long		5557339	0					
ANR	5557463	Identifier	user_time		5557339	1					
ANR	5557464	AssignmentExpression	user_time = 0		5557339	2		=			
ANR	5557465	Identifier	user_time		5557339	0					
ANR	5557466	PrimaryExpression	0		5557339	1					
ANR	5557467	IdentifierDeclStatement	unsigned long max_image = 0 ;	1208:2:30228:30255	5557339	2	True				
ANR	5557468	IdentifierDecl	max_image = 0		5557339	0					
ANR	5557469	IdentifierDeclType	unsigned long		5557339	0					
ANR	5557470	Identifier	max_image		5557339	1					
ANR	5557471	AssignmentExpression	max_image = 0		5557339	2		=			
ANR	5557472	Identifier	max_image		5557339	0					
ANR	5557473	PrimaryExpression	0		5557339	1					
ANR	5557474	IdentifierDeclStatement	unsigned long rss = 0 ;	1209:8:30265:30286	5557339	3	True				
ANR	5557475	IdentifierDecl	rss = 0		5557339	0					
ANR	5557476	IdentifierDeclType	unsigned long		5557339	0					
ANR	5557477	Identifier	rss		5557339	1					
ANR	5557478	AssignmentExpression	rss = 0		5557339	2		=			
ANR	5557479	Identifier	rss		5557339	0					
ANR	5557480	PrimaryExpression	0		5557339	1					
ANR	5557481	IdentifierDeclStatement	unsigned long pss = 0 ;	1210:2:30290:30311	5557339	4	True				
ANR	5557482	IdentifierDecl	pss = 0		5557339	0					
ANR	5557483	IdentifierDeclType	unsigned long		5557339	0					
ANR	5557484	Identifier	pss		5557339	1					
ANR	5557485	AssignmentExpression	pss = 0		5557339	2		=			
ANR	5557486	Identifier	pss		5557339	0					
ANR	5557487	PrimaryExpression	0		5557339	1					
ANR	5557488	IdentifierDeclStatement	bool pss_available = false ;	1211:2:30315:30341	5557339	5	True				
ANR	5557489	IdentifierDecl	pss_available = false		5557339	0					
ANR	5557490	IdentifierDeclType	bool		5557339	0					
ANR	5557491	Identifier	pss_available		5557339	1					
ANR	5557492	AssignmentExpression	pss_available = false		5557339	2		=			
ANR	5557493	Identifier	false		5557339	0					
ANR	5557494	Identifier	false		5557339	1					
ANR	5557495	ExpressionStatement	"getUsageOfVM ( sys_time , user_time , max_image , rss , pss , pss_available )"	1213:2:30346:30415	5557339	6	True				
ANR	5557496	CallExpression	"getUsageOfVM ( sys_time , user_time , max_image , rss , pss , pss_available )"		5557339	0					
ANR	5557497	Callee	getUsageOfVM		5557339	0					
ANR	5557498	Identifier	getUsageOfVM		5557339	0					
ANR	5557499	ArgumentList	sys_time		5557339	1					
ANR	5557500	Argument	sys_time		5557339	0					
ANR	5557501	Identifier	sys_time		5557339	0					
ANR	5557502	Argument	user_time		5557339	1					
ANR	5557503	Identifier	user_time		5557339	0					
ANR	5557504	Argument	max_image		5557339	2					
ANR	5557505	Identifier	max_image		5557339	0					
ANR	5557506	Argument	rss		5557339	3					
ANR	5557507	Identifier	rss		5557339	0					
ANR	5557508	Argument	pss		5557339	4					
ANR	5557509	Identifier	pss		5557339	0					
ANR	5557510	Argument	pss_available		5557339	5					
ANR	5557511	Identifier	pss_available		5557339	0					
ANR	5557512	Statement	if	1216:2:30466:30467	5557339	7	True				
ANR	5557513	Statement	(	1216:5:30469:30469	5557339	8	True				
ANR	5557514	Statement	long	1216:7:30471:30474	5557339	9	True				
ANR	5557515	Statement	(	1216:11:30475:30475	5557339	10	True				
ANR	5557516	Statement	m_vm_cputime	1216:12:30476:30487	5557339	11	True				
ANR	5557517	Statement	)	1216:24:30488:30488	5557339	12	True				
ANR	5557518	Statement	>	1216:26:30490:30490	5557339	13	True				
ANR	5557519	Statement	user_time	1216:28:30492:30500	5557339	14	True				
ANR	5557520	Statement	)	1216:38:30502:30502	5557339	15	True				
ANR	5557521	CompoundStatement		26:40:863:863	5557339	16					
ANR	5557522	Statement	user_time	1217:3:30509:30517	5557339	0	True				
ANR	5557523	Statement	=	1217:13:30519:30519	5557339	1	True				
ANR	5557524	Statement	long	1217:15:30521:30524	5557339	2	True				
ANR	5557525	ExpressionStatement	m_vm_cputime	1217:19:30525:30539	5557339	3	True				
ANR	5557526	Identifier	m_vm_cputime		5557339	0					
ANR	5557527	ExpressionStatement	"ad -> Assign ( ATTR_JOB_REMOTE_SYS_CPU , float ( sys_time ) )"	1221:2:30577:30629	5557339	17	True				
ANR	5557528	CallExpression	"ad -> Assign ( ATTR_JOB_REMOTE_SYS_CPU , float ( sys_time ) )"		5557339	0					
ANR	5557529	Callee	ad -> Assign		5557339	0					
ANR	5557530	PtrMemberAccess	ad -> Assign		5557339	0					
ANR	5557531	Identifier	ad		5557339	0					
ANR	5557532	Identifier	Assign		5557339	1					
ANR	5557533	ArgumentList	ATTR_JOB_REMOTE_SYS_CPU		5557339	1					
ANR	5557534	Argument	ATTR_JOB_REMOTE_SYS_CPU		5557339	0					
ANR	5557535	Identifier	ATTR_JOB_REMOTE_SYS_CPU		5557339	0					
ANR	5557536	Argument	float ( sys_time )		5557339	1					
ANR	5557537	CallExpression	float ( sys_time )		5557339	0					
ANR	5557538	Callee	float		5557339	0					
ANR	5557539	Identifier	float		5557339	0					
ANR	5557540	ArgumentList	sys_time		5557339	1					
ANR	5557541	Argument	sys_time		5557339	0					
ANR	5557542	Identifier	sys_time		5557339	0					
ANR	5557543	ExpressionStatement	"ad -> Assign ( ATTR_JOB_REMOTE_USER_CPU , float ( user_time ) )"	1222:2:30633:30687	5557339	18	True				
ANR	5557544	CallExpression	"ad -> Assign ( ATTR_JOB_REMOTE_USER_CPU , float ( user_time ) )"		5557339	0					
ANR	5557545	Callee	ad -> Assign		5557339	0					
ANR	5557546	PtrMemberAccess	ad -> Assign		5557339	0					
ANR	5557547	Identifier	ad		5557339	0					
ANR	5557548	Identifier	Assign		5557339	1					
ANR	5557549	ArgumentList	ATTR_JOB_REMOTE_USER_CPU		5557339	1					
ANR	5557550	Argument	ATTR_JOB_REMOTE_USER_CPU		5557339	0					
ANR	5557551	Identifier	ATTR_JOB_REMOTE_USER_CPU		5557339	0					
ANR	5557552	Argument	float ( user_time )		5557339	1					
ANR	5557553	CallExpression	float ( user_time )		5557339	0					
ANR	5557554	Callee	float		5557339	0					
ANR	5557555	Identifier	float		5557339	0					
ANR	5557556	ArgumentList	user_time		5557339	1					
ANR	5557557	Argument	user_time		5557339	0					
ANR	5557558	Identifier	user_time		5557339	0					
ANR	5557559	ExpressionStatement	"buf . sprintf ( ""%s=%lu"" , ATTR_IMAGE_SIZE , max_image )"	1224:2:30692:30742	5557339	19	True				
ANR	5557560	CallExpression	"buf . sprintf ( ""%s=%lu"" , ATTR_IMAGE_SIZE , max_image )"		5557339	0					
ANR	5557561	Callee	buf . sprintf		5557339	0					
ANR	5557562	MemberAccess	buf . sprintf		5557339	0					
ANR	5557563	Identifier	buf		5557339	0					
ANR	5557564	Identifier	sprintf		5557339	1					
ANR	5557565	ArgumentList	"""%s=%lu"""		5557339	1					
ANR	5557566	Argument	"""%s=%lu"""		5557339	0					
ANR	5557567	PrimaryExpression	"""%s=%lu"""		5557339	0					
ANR	5557568	Argument	ATTR_IMAGE_SIZE		5557339	1					
ANR	5557569	Identifier	ATTR_IMAGE_SIZE		5557339	0					
ANR	5557570	Argument	max_image		5557339	2					
ANR	5557571	Identifier	max_image		5557339	0					
ANR	5557572	ExpressionStatement	ad -> InsertOrUpdate ( buf . Value ( ) )	1225:2:30746:30778	5557339	20	True				
ANR	5557573	CallExpression	ad -> InsertOrUpdate ( buf . Value ( ) )		5557339	0					
ANR	5557574	Callee	ad -> InsertOrUpdate		5557339	0					
ANR	5557575	PtrMemberAccess	ad -> InsertOrUpdate		5557339	0					
ANR	5557576	Identifier	ad		5557339	0					
ANR	5557577	Identifier	InsertOrUpdate		5557339	1					
ANR	5557578	ArgumentList	buf . Value ( )		5557339	1					
ANR	5557579	Argument	buf . Value ( )		5557339	0					
ANR	5557580	CallExpression	buf . Value ( )		5557339	0					
ANR	5557581	Callee	buf . Value		5557339	0					
ANR	5557582	MemberAccess	buf . Value		5557339	0					
ANR	5557583	Identifier	buf		5557339	0					
ANR	5557584	Identifier	Value		5557339	1					
ANR	5557585	ArgumentList			5557339	1					
ANR	5557586	ExpressionStatement	"buf . sprintf ( ""%s=%lu"" , ATTR_RESIDENT_SET_SIZE , rss )"	1226:2:30782:30833	5557339	21	True				
ANR	5557587	CallExpression	"buf . sprintf ( ""%s=%lu"" , ATTR_RESIDENT_SET_SIZE , rss )"		5557339	0					
ANR	5557588	Callee	buf . sprintf		5557339	0					
ANR	5557589	MemberAccess	buf . sprintf		5557339	0					
ANR	5557590	Identifier	buf		5557339	0					
ANR	5557591	Identifier	sprintf		5557339	1					
ANR	5557592	ArgumentList	"""%s=%lu"""		5557339	1					
ANR	5557593	Argument	"""%s=%lu"""		5557339	0					
ANR	5557594	PrimaryExpression	"""%s=%lu"""		5557339	0					
ANR	5557595	Argument	ATTR_RESIDENT_SET_SIZE		5557339	1					
ANR	5557596	Identifier	ATTR_RESIDENT_SET_SIZE		5557339	0					
ANR	5557597	Argument	rss		5557339	2					
ANR	5557598	Identifier	rss		5557339	0					
ANR	5557599	ExpressionStatement	ad -> InsertOrUpdate ( buf . Value ( ) )	1227:2:30837:30869	5557339	22	True				
ANR	5557600	CallExpression	ad -> InsertOrUpdate ( buf . Value ( ) )		5557339	0					
ANR	5557601	Callee	ad -> InsertOrUpdate		5557339	0					
ANR	5557602	PtrMemberAccess	ad -> InsertOrUpdate		5557339	0					
ANR	5557603	Identifier	ad		5557339	0					
ANR	5557604	Identifier	InsertOrUpdate		5557339	1					
ANR	5557605	ArgumentList	buf . Value ( )		5557339	1					
ANR	5557606	Argument	buf . Value ( )		5557339	0					
ANR	5557607	CallExpression	buf . Value ( )		5557339	0					
ANR	5557608	Callee	buf . Value		5557339	0					
ANR	5557609	MemberAccess	buf . Value		5557339	0					
ANR	5557610	Identifier	buf		5557339	0					
ANR	5557611	Identifier	Value		5557339	1					
ANR	5557612	ArgumentList			5557339	1					
ANR	5557613	IfStatement	if ( pss_available )		5557339	23					
ANR	5557614	Condition	pss_available	1228:6:30877:30889	5557339	0	True				
ANR	5557615	Identifier	pss_available		5557339	0					
ANR	5557616	CompoundStatement		38:22:1252:1252	5557339	1					
ANR	5557617	ExpressionStatement	"ad -> Assign ( ATTR_PROPORTIONAL_SET_SIZE , pss )"	1229:3:30898:30940	5557339	0	True				
ANR	5557618	CallExpression	"ad -> Assign ( ATTR_PROPORTIONAL_SET_SIZE , pss )"		5557339	0					
ANR	5557619	Callee	ad -> Assign		5557339	0					
ANR	5557620	PtrMemberAccess	ad -> Assign		5557339	0					
ANR	5557621	Identifier	ad		5557339	0					
ANR	5557622	Identifier	Assign		5557339	1					
ANR	5557623	ArgumentList	ATTR_PROPORTIONAL_SET_SIZE		5557339	1					
ANR	5557624	Argument	ATTR_PROPORTIONAL_SET_SIZE		5557339	0					
ANR	5557625	Identifier	ATTR_PROPORTIONAL_SET_SIZE		5557339	0					
ANR	5557626	Argument	pss		5557339	1					
ANR	5557627	Identifier	pss		5557339	0					
ANR	5557628	IfStatement	if ( m_vm_checkpoint )		5557339	3					
ANR	5557629	Condition	m_vm_checkpoint	1233:5:30955:30969	5557339	0	True				
ANR	5557630	Identifier	m_vm_checkpoint		5557339	0					
ANR	5557631	CompoundStatement		43:23:1332:1332	5557339	1					
ANR	5557632	IfStatement	if ( m_vm_mac . IsEmpty ( ) == false )		5557339	0					
ANR	5557633	Condition	m_vm_mac . IsEmpty ( ) == false	1234:6:30981:31007	5557339	0	True				
ANR	5557634	EqualityExpression	m_vm_mac . IsEmpty ( ) == false		5557339	0		==			
ANR	5557635	CallExpression	m_vm_mac . IsEmpty ( )		5557339	0					
ANR	5557636	Callee	m_vm_mac . IsEmpty		5557339	0					
ANR	5557637	MemberAccess	m_vm_mac . IsEmpty		5557339	0					
ANR	5557638	Identifier	m_vm_mac		5557339	0					
ANR	5557639	Identifier	IsEmpty		5557339	1					
ANR	5557640	ArgumentList			5557339	1					
ANR	5557641	Identifier	false		5557339	1					
ANR	5557642	CompoundStatement		44:36:1370:1370	5557339	1					
ANR	5557643	ExpressionStatement	"ad -> Assign ( ATTR_VM_CKPT_MAC , m_vm_mac )"	1236:3:31048:31086	5557339	0	True				
ANR	5557644	CallExpression	"ad -> Assign ( ATTR_VM_CKPT_MAC , m_vm_mac )"		5557339	0					
ANR	5557645	Callee	ad -> Assign		5557339	0					
ANR	5557646	PtrMemberAccess	ad -> Assign		5557339	0					
ANR	5557647	Identifier	ad		5557339	0					
ANR	5557648	Identifier	Assign		5557339	1					
ANR	5557649	ArgumentList	ATTR_VM_CKPT_MAC		5557339	1					
ANR	5557650	Argument	ATTR_VM_CKPT_MAC		5557339	0					
ANR	5557651	Identifier	ATTR_VM_CKPT_MAC		5557339	0					
ANR	5557652	Argument	m_vm_mac		5557339	1					
ANR	5557653	Identifier	m_vm_mac		5557339	0					
ANR	5557654	IfStatement	if ( m_vm_ip . IsEmpty ( ) == false )		5557339	1					
ANR	5557655	Condition	m_vm_ip . IsEmpty ( ) == false	1238:6:31098:31123	5557339	0	True				
ANR	5557656	EqualityExpression	m_vm_ip . IsEmpty ( ) == false		5557339	0		==			
ANR	5557657	CallExpression	m_vm_ip . IsEmpty ( )		5557339	0					
ANR	5557658	Callee	m_vm_ip . IsEmpty		5557339	0					
ANR	5557659	MemberAccess	m_vm_ip . IsEmpty		5557339	0					
ANR	5557660	Identifier	m_vm_ip		5557339	0					
ANR	5557661	Identifier	IsEmpty		5557339	1					
ANR	5557662	ArgumentList			5557339	1					
ANR	5557663	Identifier	false		5557339	1					
ANR	5557664	CompoundStatement		48:35:1486:1486	5557339	1					
ANR	5557665	ExpressionStatement	"ad -> Assign ( ATTR_VM_CKPT_IP , m_vm_ip )"	1240:3:31163:31199	5557339	0	True				
ANR	5557666	CallExpression	"ad -> Assign ( ATTR_VM_CKPT_IP , m_vm_ip )"		5557339	0					
ANR	5557667	Callee	ad -> Assign		5557339	0					
ANR	5557668	PtrMemberAccess	ad -> Assign		5557339	0					
ANR	5557669	Identifier	ad		5557339	0					
ANR	5557670	Identifier	Assign		5557339	1					
ANR	5557671	ArgumentList	ATTR_VM_CKPT_IP		5557339	1					
ANR	5557672	Argument	ATTR_VM_CKPT_IP		5557339	0					
ANR	5557673	Identifier	ATTR_VM_CKPT_IP		5557339	0					
ANR	5557674	Argument	m_vm_ip		5557339	1					
ANR	5557675	Identifier	m_vm_ip		5557339	0					
ANR	5557676	ReturnStatement	return OsProc :: PublishUpdateAd ( ad ) ;	1245:1:31254:31288	5557339	4	True				
ANR	5557677	CallExpression	OsProc :: PublishUpdateAd ( ad )		5557339	0					
ANR	5557678	Callee	OsProc :: PublishUpdateAd		5557339	0					
ANR	5557679	Identifier	OsProc :: PublishUpdateAd		5557339	0					
ANR	5557680	ArgumentList	ad		5557339	1					
ANR	5557681	Argument	ad		5557339	0					
ANR	5557682	Identifier	ad		5557339	0					
ANR	5557683	ReturnType	bool		5557339	1					
ANR	5557684	Identifier	VMProc :: PublishUpdateAd		5557339	2					
ANR	5557685	ParameterList	ClassAd * ad		5557339	3					
ANR	5557686	Parameter	ClassAd * ad	1190:25:29626:29636	5557339	0	True				
ANR	5557687	ParameterType	ClassAd *		5557339	0					
ANR	5557688	Identifier	ad		5557339	1					
ANR	5557689	CFGEntryNode	ENTRY		5557339		True				
ANR	5557690	CFGExitNode	EXIT		5557339		True				
ANR	5557691	Symbol	m_vm_mac		5557339						
ANR	5557692	Symbol	m_vm_mac . IsEmpty		5557339						
ANR	5557693	Symbol	pss_available		5557339						
ANR	5557694	Symbol	m_vm_type . Value		5557339						
ANR	5557695	Symbol	m_vm_ip		5557339						
ANR	5557696	Symbol	float		5557339						
ANR	5557697	Symbol	pss		5557339						
ANR	5557698	Symbol	rss		5557339						
ANR	5557699	Symbol	ATTR_PROPORTIONAL_SET_SIZE		5557339						
ANR	5557700	Symbol	OsProc :: PublishUpdateAd		5557339						
ANR	5557701	Symbol	CONDOR_VM_UNIVERSE_KVM		5557339						
ANR	5557702	Symbol	ATTR_JOB_REMOTE_USER_CPU		5557339						
ANR	5557703	Symbol	CONDOR_VM_UNIVERSE_XEN		5557339						
ANR	5557704	Symbol	m_vm_checkpoint		5557339						
ANR	5557705	Symbol	sys_time		5557339						
ANR	5557706	Symbol	buf . Value		5557339						
ANR	5557707	Symbol	strcasecmp		5557339						
ANR	5557708	Symbol	m_vm_cputime		5557339						
ANR	5557709	Symbol	ATTR_VM_CKPT_MAC		5557339						
ANR	5557710	Symbol	ad		5557339						
ANR	5557711	Symbol	false		5557339						
ANR	5557712	Symbol	D_FULLDEBUG		5557339						
ANR	5557713	Symbol	ATTR_RESIDENT_SET_SIZE		5557339						
ANR	5557714	Symbol	buf		5557339						
ANR	5557715	Symbol	m_vm_type		5557339						
ANR	5557716	Symbol	max_image		5557339						
ANR	5557717	Symbol	m_vm_ip . IsEmpty		5557339						
ANR	5557718	Symbol	ATTR_VM_CKPT_IP		5557339						
ANR	5557719	Symbol	user_time		5557339						
ANR	5557720	Symbol	MATCH		5557339						
ANR	5557721	Symbol	ATTR_JOB_REMOTE_SYS_CPU		5557339						
ANR	5557722	Symbol	ATTR_IMAGE_SIZE		5557339						
ANR	5557723	Function	VMProc :: internalVMGahpError	1248:0:31293:31607							
ANR	5557724	FunctionDef	VMProc :: internalVMGahpError ()		5557723	0					
ANR	5557725	CompoundStatement		1250:0:31329:31607	5557723	0					
ANR	5557726	IfStatement	if ( reportErrorToStartd ( ) == false )		5557723	0					
ANR	5557727	Condition	reportErrorToStartd ( ) == false	1253:5:31424:31453	5557723	0	True				
ANR	5557728	EqualityExpression	reportErrorToStartd ( ) == false		5557723	0		==			
ANR	5557729	CallExpression	reportErrorToStartd ( )		5557723	0					
ANR	5557730	Callee	reportErrorToStartd		5557723	0					
ANR	5557731	Identifier	reportErrorToStartd		5557723	0					
ANR	5557732	ArgumentList			5557723	1					
ANR	5557733	Identifier	false		5557723	1					
ANR	5557734	CompoundStatement		4:38:127:127	5557723	1					
ANR	5557735	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: Failed to report a VMGahp error to local startd\\n"" )"	1254:2:31461:31537	5557723	0	True				
ANR	5557736	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: Failed to report a VMGahp error to local startd\\n"" )"		5557723	0					
ANR	5557737	Callee	dprintf		5557723	0					
ANR	5557738	Identifier	dprintf		5557723	0					
ANR	5557739	ArgumentList	D_ALWAYS		5557723	1					
ANR	5557740	Argument	D_ALWAYS		5557723	0					
ANR	5557741	Identifier	D_ALWAYS		5557723	0					
ANR	5557742	Argument	"""ERROR: Failed to report a VMGahp error to local startd\\n"""		5557723	1					
ANR	5557743	PrimaryExpression	"""ERROR: Failed to report a VMGahp error to local startd\\n"""		5557723	0					
ANR	5557744	ExpressionStatement	"daemonCore -> Send_Signal ( daemonCore -> getpid ( ) , DC_SIGHARDKILL )"	1257:1:31544:31605	5557723	1	True				
ANR	5557745	CallExpression	"daemonCore -> Send_Signal ( daemonCore -> getpid ( ) , DC_SIGHARDKILL )"		5557723	0					
ANR	5557746	Callee	daemonCore -> Send_Signal		5557723	0					
ANR	5557747	PtrMemberAccess	daemonCore -> Send_Signal		5557723	0					
ANR	5557748	Identifier	daemonCore		5557723	0					
ANR	5557749	Identifier	Send_Signal		5557723	1					
ANR	5557750	ArgumentList	daemonCore -> getpid ( )		5557723	1					
ANR	5557751	Argument	daemonCore -> getpid ( )		5557723	0					
ANR	5557752	CallExpression	daemonCore -> getpid ( )		5557723	0					
ANR	5557753	Callee	daemonCore -> getpid		5557723	0					
ANR	5557754	PtrMemberAccess	daemonCore -> getpid		5557723	0					
ANR	5557755	Identifier	daemonCore		5557723	0					
ANR	5557756	Identifier	getpid		5557723	1					
ANR	5557757	ArgumentList			5557723	1					
ANR	5557758	Argument	DC_SIGHARDKILL		5557723	1					
ANR	5557759	Identifier	DC_SIGHARDKILL		5557723	0					
ANR	5557760	ReturnType	void		5557723	1					
ANR	5557761	Identifier	VMProc :: internalVMGahpError		5557723	2					
ANR	5557762	ParameterList			5557723	3					
ANR	5557763	CFGEntryNode	ENTRY		5557723		True				
ANR	5557764	CFGExitNode	EXIT		5557723		True				
ANR	5557765	Symbol	reportErrorToStartd		5557723						
ANR	5557766	Symbol	DC_SIGHARDKILL		5557723						
ANR	5557767	Symbol	* daemonCore		5557723						
ANR	5557768	Symbol	daemonCore		5557723						
ANR	5557769	Symbol	false		5557723						
ANR	5557770	Symbol	D_ALWAYS		5557723						
ANR	5557771	Symbol	daemonCore -> getpid		5557723						
ANR	5557772	Function	VMProc :: reportErrorToStartd	1260:0:31610:32683							
ANR	5557773	FunctionDef	VMProc :: reportErrorToStartd ()		5557772	0					
ANR	5557774	CompoundStatement		1262:0:31646:32683	5557772	0					
ANR	5557775	IdentifierDeclStatement	"Daemon startd ( DT_STARTD , NULL ) ;"	1263:1:31649:31679	5557772	0	True				
ANR	5557776	IdentifierDecl	"startd ( DT_STARTD , NULL )"		5557772	0					
ANR	5557777	IdentifierDeclType	Daemon		5557772	0					
ANR	5557778	Identifier	startd		5557772	1					
ANR	5557779	Expression	"DT_STARTD , NULL"		5557772	2					
ANR	5557780	Identifier	DT_STARTD		5557772	0					
ANR	5557781	Identifier	NULL		5557772	1					
ANR	5557782	IfStatement	if ( ! startd . locate ( ) )		5557772	1					
ANR	5557783	Condition	! startd . locate ( )	1265:5:31687:31702	5557772	0	True				
ANR	5557784	UnaryOperationExpression	! startd . locate ( )		5557772	0					
ANR	5557785	UnaryOperator	!		5557772	0					
ANR	5557786	CallExpression	startd . locate ( )		5557772	1					
ANR	5557787	Callee	startd . locate		5557772	0					
ANR	5557788	MemberAccess	startd . locate		5557772	0					
ANR	5557789	Identifier	startd		5557772	0					
ANR	5557790	Identifier	locate		5557772	1					
ANR	5557791	ArgumentList			5557772	1					
ANR	5557792	CompoundStatement		4:24:59:59	5557772	1					
ANR	5557793	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: %s\\n"" , startd . error ( ) )"	1266:2:31710:31757	5557772	0	True				
ANR	5557794	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: %s\\n"" , startd . error ( ) )"		5557772	0					
ANR	5557795	Callee	dprintf		5557772	0					
ANR	5557796	Identifier	dprintf		5557772	0					
ANR	5557797	ArgumentList	D_ALWAYS		5557772	1					
ANR	5557798	Argument	D_ALWAYS		5557772	0					
ANR	5557799	Identifier	D_ALWAYS		5557772	0					
ANR	5557800	Argument	"""ERROR: %s\\n"""		5557772	1					
ANR	5557801	PrimaryExpression	"""ERROR: %s\\n"""		5557772	0					
ANR	5557802	Argument	startd . error ( )		5557772	2					
ANR	5557803	CallExpression	startd . error ( )		5557772	0					
ANR	5557804	Callee	startd . error		5557772	0					
ANR	5557805	MemberAccess	startd . error		5557772	0					
ANR	5557806	Identifier	startd		5557772	0					
ANR	5557807	Identifier	error		5557772	1					
ANR	5557808	ArgumentList			5557772	1					
ANR	5557809	ReturnStatement	return false ;	1267:2:31761:31773	5557772	1	True				
ANR	5557810	Identifier	false		5557772	0					
ANR	5557811	IdentifierDeclStatement	char * addr = startd . addr ( ) ;	1270:1:31780:31806	5557772	2	True				
ANR	5557812	IdentifierDecl	* addr = startd . addr ( )		5557772	0					
ANR	5557813	IdentifierDeclType	char *		5557772	0					
ANR	5557814	Identifier	addr		5557772	1					
ANR	5557815	AssignmentExpression	* addr = startd . addr ( )		5557772	2		=			
ANR	5557816	Identifier	addr		5557772	0					
ANR	5557817	CallExpression	startd . addr ( )		5557772	1					
ANR	5557818	Callee	startd . addr		5557772	0					
ANR	5557819	MemberAccess	startd . addr		5557772	0					
ANR	5557820	Identifier	startd		5557772	0					
ANR	5557821	Identifier	addr		5557772	1					
ANR	5557822	ArgumentList			5557772	1					
ANR	5557823	IfStatement	if ( ! addr )		5557772	3					
ANR	5557824	Condition	! addr	1271:5:31813:31817	5557772	0	True				
ANR	5557825	UnaryOperationExpression	! addr		5557772	0					
ANR	5557826	UnaryOperator	!		5557772	0					
ANR	5557827	Identifier	addr		5557772	1					
ANR	5557828	CompoundStatement		10:13:174:174	5557772	1					
ANR	5557829	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't find the address of local startd\\n"" )"	1272:2:31825:31885	5557772	0	True				
ANR	5557830	CallExpression	"dprintf ( D_ALWAYS , ""Can't find the address of local startd\\n"" )"		5557772	0					
ANR	5557831	Callee	dprintf		5557772	0					
ANR	5557832	Identifier	dprintf		5557772	0					
ANR	5557833	ArgumentList	D_ALWAYS		5557772	1					
ANR	5557834	Argument	D_ALWAYS		5557772	0					
ANR	5557835	Identifier	D_ALWAYS		5557772	0					
ANR	5557836	Argument	"""Can't find the address of local startd\\n"""		5557772	1					
ANR	5557837	PrimaryExpression	"""Can't find the address of local startd\\n"""		5557772	0					
ANR	5557838	ReturnStatement	return false ;	1273:2:31889:31901	5557772	1	True				
ANR	5557839	Identifier	false		5557772	0					
ANR	5557840	IdentifierDeclStatement	SafeSock ssock ;	1277:1:31929:31943	5557772	4	True				
ANR	5557841	IdentifierDecl	ssock		5557772	0					
ANR	5557842	IdentifierDeclType	SafeSock		5557772	0					
ANR	5557843	Identifier	ssock		5557772	1					
ANR	5557844	ExpressionStatement	ssock . timeout ( 5 )	1279:1:31947:31965	5557772	5	True				
ANR	5557845	CallExpression	ssock . timeout ( 5 )		5557772	0					
ANR	5557846	Callee	ssock . timeout		5557772	0					
ANR	5557847	MemberAccess	ssock . timeout		5557772	0					
ANR	5557848	Identifier	ssock		5557772	0					
ANR	5557849	Identifier	timeout		5557772	1					
ANR	5557850	ArgumentList	5		5557772	1					
ANR	5557851	Argument	5		5557772	0					
ANR	5557852	PrimaryExpression	5		5557772	0					
ANR	5557853	ExpressionStatement	ssock . encode ( )	1280:1:31989:32003	5557772	6	True				
ANR	5557854	CallExpression	ssock . encode ( )		5557772	0					
ANR	5557855	Callee	ssock . encode		5557772	0					
ANR	5557856	MemberAccess	ssock . encode		5557772	0					
ANR	5557857	Identifier	ssock		5557772	0					
ANR	5557858	Identifier	encode		5557772	1					
ANR	5557859	ArgumentList			5557772	1					
ANR	5557860	IfStatement	if ( ! ssock . connect ( addr ) )		5557772	7					
ANR	5557861	Condition	! ssock . connect ( addr )	1282:5:32011:32030	5557772	0	True				
ANR	5557862	UnaryOperationExpression	! ssock . connect ( addr )		5557772	0					
ANR	5557863	UnaryOperator	!		5557772	0					
ANR	5557864	CallExpression	ssock . connect ( addr )		5557772	1					
ANR	5557865	Callee	ssock . connect		5557772	0					
ANR	5557866	MemberAccess	ssock . connect		5557772	0					
ANR	5557867	Identifier	ssock		5557772	0					
ANR	5557868	Identifier	connect		5557772	1					
ANR	5557869	ArgumentList	addr		5557772	1					
ANR	5557870	Argument	addr		5557772	0					
ANR	5557871	Identifier	addr		5557772	0					
ANR	5557872	CompoundStatement		21:28:387:387	5557772	1					
ANR	5557873	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to connect to local startd(%s)\\n"" , addr )"	1283:2:32038:32105	5557772	0	True				
ANR	5557874	CallExpression	"dprintf ( D_ALWAYS , ""Failed to connect to local startd(%s)\\n"" , addr )"		5557772	0					
ANR	5557875	Callee	dprintf		5557772	0					
ANR	5557876	Identifier	dprintf		5557772	0					
ANR	5557877	ArgumentList	D_ALWAYS		5557772	1					
ANR	5557878	Argument	D_ALWAYS		5557772	0					
ANR	5557879	Identifier	D_ALWAYS		5557772	0					
ANR	5557880	Argument	"""Failed to connect to local startd(%s)\\n"""		5557772	1					
ANR	5557881	PrimaryExpression	"""Failed to connect to local startd(%s)\\n"""		5557772	0					
ANR	5557882	Argument	addr		5557772	2					
ANR	5557883	Identifier	addr		5557772	0					
ANR	5557884	ReturnStatement	return false ;	1284:2:32109:32121	5557772	1	True				
ANR	5557885	Identifier	false		5557772	0					
ANR	5557886	IdentifierDeclStatement	int cmd = VM_UNIV_GAHP_ERROR ;	1287:1:32128:32156	5557772	8	True				
ANR	5557887	IdentifierDecl	cmd = VM_UNIV_GAHP_ERROR		5557772	0					
ANR	5557888	IdentifierDeclType	int		5557772	0					
ANR	5557889	Identifier	cmd		5557772	1					
ANR	5557890	AssignmentExpression	cmd = VM_UNIV_GAHP_ERROR		5557772	2		=			
ANR	5557891	Identifier	VM_UNIV_GAHP_ERROR		5557772	0					
ANR	5557892	Identifier	VM_UNIV_GAHP_ERROR		5557772	1					
ANR	5557893	IfStatement	"if ( ! startd . startCommand ( cmd , & ssock ) )"		5557772	9					
ANR	5557894	Condition	"! startd . startCommand ( cmd , & ssock )"	1288:5:32163:32195	5557772	0	True				
ANR	5557895	UnaryOperationExpression	"! startd . startCommand ( cmd , & ssock )"		5557772	0					
ANR	5557896	UnaryOperator	!		5557772	0					
ANR	5557897	CallExpression	"startd . startCommand ( cmd , & ssock )"		5557772	1					
ANR	5557898	Callee	startd . startCommand		5557772	0					
ANR	5557899	MemberAccess	startd . startCommand		5557772	0					
ANR	5557900	Identifier	startd		5557772	0					
ANR	5557901	Identifier	startCommand		5557772	1					
ANR	5557902	ArgumentList	cmd		5557772	1					
ANR	5557903	Argument	cmd		5557772	0					
ANR	5557904	Identifier	cmd		5557772	0					
ANR	5557905	Argument	& ssock		5557772	1					
ANR	5557906	UnaryOperationExpression	& ssock		5557772	0					
ANR	5557907	UnaryOperator	&		5557772	0					
ANR	5557908	Identifier	ssock		5557772	1					
ANR	5557909	CompoundStatement		27:41:552:552	5557772	1					
ANR	5557910	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to send UDP command(%s) to local startd %s\\n"" , getCommandString ( cmd ) , addr )"	1289:2:32203:32315	5557772	0	True				
ANR	5557911	CallExpression	"dprintf ( D_ALWAYS , ""Failed to send UDP command(%s) to local startd %s\\n"" , getCommandString ( cmd ) , addr )"		5557772	0					
ANR	5557912	Callee	dprintf		5557772	0					
ANR	5557913	Identifier	dprintf		5557772	0					
ANR	5557914	ArgumentList	D_ALWAYS		5557772	1					
ANR	5557915	Argument	D_ALWAYS		5557772	0					
ANR	5557916	Identifier	D_ALWAYS		5557772	0					
ANR	5557917	Argument	"""Failed to send UDP command(%s) to local startd %s\\n"""		5557772	1					
ANR	5557918	PrimaryExpression	"""Failed to send UDP command(%s) to local startd %s\\n"""		5557772	0					
ANR	5557919	Argument	getCommandString ( cmd )		5557772	2					
ANR	5557920	CallExpression	getCommandString ( cmd )		5557772	0					
ANR	5557921	Callee	getCommandString		5557772	0					
ANR	5557922	Identifier	getCommandString		5557772	0					
ANR	5557923	ArgumentList	cmd		5557772	1					
ANR	5557924	Argument	cmd		5557772	0					
ANR	5557925	Identifier	cmd		5557772	0					
ANR	5557926	Argument	addr		5557772	3					
ANR	5557927	Identifier	addr		5557772	0					
ANR	5557928	ReturnStatement	return false ;	1291:2:32319:32331	5557772	1	True				
ANR	5557929	Identifier	false		5557772	0					
ANR	5557930	IdentifierDeclStatement	MyString s_pid ;	1295:1:32367:32381	5557772	10	True				
ANR	5557931	IdentifierDecl	s_pid		5557772	0					
ANR	5557932	IdentifierDeclType	MyString		5557772	0					
ANR	5557933	Identifier	s_pid		5557772	1					
ANR	5557934	ExpressionStatement	s_pid += ( int ) daemonCore -> getpid ( )	1296:1:32384:32418	5557772	11	True				
ANR	5557935	AssignmentExpression	s_pid += ( int ) daemonCore -> getpid ( )		5557772	0		+=			
ANR	5557936	Identifier	s_pid		5557772	0					
ANR	5557937	CastExpression	( int ) daemonCore -> getpid ( )		5557772	1					
ANR	5557938	CastTarget	int		5557772	0					
ANR	5557939	CallExpression	daemonCore -> getpid ( )		5557772	1					
ANR	5557940	Callee	daemonCore -> getpid		5557772	0					
ANR	5557941	PtrMemberAccess	daemonCore -> getpid		5557772	0					
ANR	5557942	Identifier	daemonCore		5557772	0					
ANR	5557943	Identifier	getpid		5557772	1					
ANR	5557944	ArgumentList			5557772	1					
ANR	5557945	IdentifierDeclStatement	char * buffer = strdup ( s_pid . Value ( ) ) ;	1298:1:32422:32458	5557772	12	True				
ANR	5557946	IdentifierDecl	* buffer = strdup ( s_pid . Value ( ) )		5557772	0					
ANR	5557947	IdentifierDeclType	char *		5557772	0					
ANR	5557948	Identifier	buffer		5557772	1					
ANR	5557949	AssignmentExpression	* buffer = strdup ( s_pid . Value ( ) )		5557772	2		=			
ANR	5557950	Identifier	buffer		5557772	0					
ANR	5557951	CallExpression	strdup ( s_pid . Value ( ) )		5557772	1					
ANR	5557952	Callee	strdup		5557772	0					
ANR	5557953	Identifier	strdup		5557772	0					
ANR	5557954	ArgumentList	s_pid . Value ( )		5557772	1					
ANR	5557955	Argument	s_pid . Value ( )		5557772	0					
ANR	5557956	CallExpression	s_pid . Value ( )		5557772	0					
ANR	5557957	Callee	s_pid . Value		5557772	0					
ANR	5557958	MemberAccess	s_pid . Value		5557772	0					
ANR	5557959	Identifier	s_pid		5557772	0					
ANR	5557960	Identifier	Value		5557772	1					
ANR	5557961	ArgumentList			5557772	1					
ANR	5557962	ExpressionStatement	ASSERT ( buffer )	1299:1:32461:32475	5557772	13	True				
ANR	5557963	CallExpression	ASSERT ( buffer )		5557772	0					
ANR	5557964	Callee	ASSERT		5557772	0					
ANR	5557965	Identifier	ASSERT		5557772	0					
ANR	5557966	ArgumentList	buffer		5557772	1					
ANR	5557967	Argument	buffer		5557772	0					
ANR	5557968	Identifier	buffer		5557772	0					
ANR	5557969	ExpressionStatement	ssock . code ( buffer )	1301:1:32479:32497	5557772	14	True				
ANR	5557970	CallExpression	ssock . code ( buffer )		5557772	0					
ANR	5557971	Callee	ssock . code		5557772	0					
ANR	5557972	MemberAccess	ssock . code		5557772	0					
ANR	5557973	Identifier	ssock		5557772	0					
ANR	5557974	Identifier	code		5557772	1					
ANR	5557975	ArgumentList	buffer		5557772	1					
ANR	5557976	Argument	buffer		5557772	0					
ANR	5557977	Identifier	buffer		5557772	0					
ANR	5557978	IfStatement	if ( ! ssock . end_of_message ( ) )		5557772	15					
ANR	5557979	Condition	! ssock . end_of_message ( )	1303:5:32505:32527	5557772	0	True				
ANR	5557980	UnaryOperationExpression	! ssock . end_of_message ( )		5557772	0					
ANR	5557981	UnaryOperator	!		5557772	0					
ANR	5557982	CallExpression	ssock . end_of_message ( )		5557772	1					
ANR	5557983	Callee	ssock . end_of_message		5557772	0					
ANR	5557984	MemberAccess	ssock . end_of_message		5557772	0					
ANR	5557985	Identifier	ssock		5557772	0					
ANR	5557986	Identifier	end_of_message		5557772	1					
ANR	5557987	ArgumentList			5557772	1					
ANR	5557988	CompoundStatement		42:31:884:884	5557772	1					
ANR	5557989	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Failed to send EOM to local startd %s\\n"" , addr )"	1304:2:32535:32605	5557772	0	True				
ANR	5557990	CallExpression	"dprintf ( D_FULLDEBUG , ""Failed to send EOM to local startd %s\\n"" , addr )"		5557772	0					
ANR	5557991	Callee	dprintf		5557772	0					
ANR	5557992	Identifier	dprintf		5557772	0					
ANR	5557993	ArgumentList	D_FULLDEBUG		5557772	1					
ANR	5557994	Argument	D_FULLDEBUG		5557772	0					
ANR	5557995	Identifier	D_FULLDEBUG		5557772	0					
ANR	5557996	Argument	"""Failed to send EOM to local startd %s\\n"""		5557772	1					
ANR	5557997	PrimaryExpression	"""Failed to send EOM to local startd %s\\n"""		5557772	0					
ANR	5557998	Argument	addr		5557772	2					
ANR	5557999	Identifier	addr		5557772	0					
ANR	5558000	ExpressionStatement	free ( buffer )	1305:2:32609:32621	5557772	1	True				
ANR	5558001	CallExpression	free ( buffer )		5557772	0					
ANR	5558002	Callee	free		5557772	0					
ANR	5558003	Identifier	free		5557772	0					
ANR	5558004	ArgumentList	buffer		5557772	1					
ANR	5558005	Argument	buffer		5557772	0					
ANR	5558006	Identifier	buffer		5557772	0					
ANR	5558007	ReturnStatement	return false ;	1306:2:32625:32637	5557772	2	True				
ANR	5558008	Identifier	false		5557772	0					
ANR	5558009	ExpressionStatement	free ( buffer )	1308:1:32643:32655	5557772	16	True				
ANR	5558010	CallExpression	free ( buffer )		5557772	0					
ANR	5558011	Callee	free		5557772	0					
ANR	5558012	Identifier	free		5557772	0					
ANR	5558013	ArgumentList	buffer		5557772	1					
ANR	5558014	Argument	buffer		5557772	0					
ANR	5558015	Identifier	buffer		5557772	0					
ANR	5558016	ExpressionStatement	sleep ( 1 )	1310:1:32659:32667	5557772	17	True				
ANR	5558017	CallExpression	sleep ( 1 )		5557772	0					
ANR	5558018	Callee	sleep		5557772	0					
ANR	5558019	Identifier	sleep		5557772	0					
ANR	5558020	ArgumentList	1		5557772	1					
ANR	5558021	Argument	1		5557772	0					
ANR	5558022	PrimaryExpression	1		5557772	0					
ANR	5558023	ReturnStatement	return true ;	1311:1:32670:32681	5557772	18	True				
ANR	5558024	Identifier	true		5557772	0					
ANR	5558025	ReturnType	bool		5557772	1					
ANR	5558026	Identifier	VMProc :: reportErrorToStartd		5557772	2					
ANR	5558027	ParameterList			5557772	3					
ANR	5558028	CFGEntryNode	ENTRY		5557772		True				
ANR	5558029	CFGExitNode	EXIT		5557772		True				
ANR	5558030	Symbol	startd . locate		5557772						
ANR	5558031	Symbol	startd . addr		5557772						
ANR	5558032	Symbol	s_pid . Value		5557772						
ANR	5558033	Symbol	ssock . end_of_message		5557772						
ANR	5558034	Symbol	D_ALWAYS		5557772						
ANR	5558035	Symbol	false		5557772						
ANR	5558036	Symbol	daemonCore -> getpid		5557772						
ANR	5558037	Symbol	D_FULLDEBUG		5557772						
ANR	5558038	Symbol	startd		5557772						
ANR	5558039	Symbol	& ssock		5557772						
ANR	5558040	Symbol	ssock . connect		5557772						
ANR	5558041	Symbol	startd . error		5557772						
ANR	5558042	Symbol	startd . startCommand		5557772						
ANR	5558043	Symbol	getCommandString		5557772						
ANR	5558044	Symbol	* daemonCore		5557772						
ANR	5558045	Symbol	daemonCore		5557772						
ANR	5558046	Symbol	true		5557772						
ANR	5558047	Symbol	VM_UNIV_GAHP_ERROR		5557772						
ANR	5558048	Symbol	cmd		5557772						
ANR	5558049	Symbol	buffer		5557772						
ANR	5558050	Symbol	strdup		5557772						
ANR	5558051	Symbol	addr		5557772						
ANR	5558052	Symbol	ssock		5557772						
ANR	5558053	Symbol	s_pid		5557772						
ANR	5558054	Function	VMProc :: reportVMInfoToStartd	1314:0:32686:33910							
ANR	5558055	FunctionDef	"VMProc :: reportVMInfoToStartd (int cmd , const char * value)"		5558054	0					
ANR	5558056	CompoundStatement		1316:0:32749:33910	5558054	0					
ANR	5558057	IdentifierDeclStatement	"Daemon startd ( DT_STARTD , NULL ) ;"	1317:1:32752:32782	5558054	0	True				
ANR	5558058	IdentifierDecl	"startd ( DT_STARTD , NULL )"		5558054	0					
ANR	5558059	IdentifierDeclType	Daemon		5558054	0					
ANR	5558060	Identifier	startd		5558054	1					
ANR	5558061	Expression	"DT_STARTD , NULL"		5558054	2					
ANR	5558062	Identifier	DT_STARTD		5558054	0					
ANR	5558063	Identifier	NULL		5558054	1					
ANR	5558064	IfStatement	if ( ! startd . locate ( ) )		5558054	1					
ANR	5558065	Condition	! startd . locate ( )	1319:5:32790:32805	5558054	0	True				
ANR	5558066	UnaryOperationExpression	! startd . locate ( )		5558054	0					
ANR	5558067	UnaryOperator	!		5558054	0					
ANR	5558068	CallExpression	startd . locate ( )		5558054	1					
ANR	5558069	Callee	startd . locate		5558054	0					
ANR	5558070	MemberAccess	startd . locate		5558054	0					
ANR	5558071	Identifier	startd		5558054	0					
ANR	5558072	Identifier	locate		5558054	1					
ANR	5558073	ArgumentList			5558054	1					
ANR	5558074	CompoundStatement		4:24:59:59	5558054	1					
ANR	5558075	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: %s\\n"" , startd . error ( ) )"	1320:2:32813:32860	5558054	0	True				
ANR	5558076	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: %s\\n"" , startd . error ( ) )"		5558054	0					
ANR	5558077	Callee	dprintf		5558054	0					
ANR	5558078	Identifier	dprintf		5558054	0					
ANR	5558079	ArgumentList	D_ALWAYS		5558054	1					
ANR	5558080	Argument	D_ALWAYS		5558054	0					
ANR	5558081	Identifier	D_ALWAYS		5558054	0					
ANR	5558082	Argument	"""ERROR: %s\\n"""		5558054	1					
ANR	5558083	PrimaryExpression	"""ERROR: %s\\n"""		5558054	0					
ANR	5558084	Argument	startd . error ( )		5558054	2					
ANR	5558085	CallExpression	startd . error ( )		5558054	0					
ANR	5558086	Callee	startd . error		5558054	0					
ANR	5558087	MemberAccess	startd . error		5558054	0					
ANR	5558088	Identifier	startd		5558054	0					
ANR	5558089	Identifier	error		5558054	1					
ANR	5558090	ArgumentList			5558054	1					
ANR	5558091	ReturnStatement	return false ;	1321:2:32864:32876	5558054	1	True				
ANR	5558092	Identifier	false		5558054	0					
ANR	5558093	IdentifierDeclStatement	char * addr = startd . addr ( ) ;	1324:1:32883:32909	5558054	2	True				
ANR	5558094	IdentifierDecl	* addr = startd . addr ( )		5558054	0					
ANR	5558095	IdentifierDeclType	char *		5558054	0					
ANR	5558096	Identifier	addr		5558054	1					
ANR	5558097	AssignmentExpression	* addr = startd . addr ( )		5558054	2		=			
ANR	5558098	Identifier	addr		5558054	0					
ANR	5558099	CallExpression	startd . addr ( )		5558054	1					
ANR	5558100	Callee	startd . addr		5558054	0					
ANR	5558101	MemberAccess	startd . addr		5558054	0					
ANR	5558102	Identifier	startd		5558054	0					
ANR	5558103	Identifier	addr		5558054	1					
ANR	5558104	ArgumentList			5558054	1					
ANR	5558105	IfStatement	if ( ! addr )		5558054	3					
ANR	5558106	Condition	! addr	1325:5:32916:32920	5558054	0	True				
ANR	5558107	UnaryOperationExpression	! addr		5558054	0					
ANR	5558108	UnaryOperator	!		5558054	0					
ANR	5558109	Identifier	addr		5558054	1					
ANR	5558110	CompoundStatement		10:13:174:174	5558054	1					
ANR	5558111	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't find the address of local startd\\n"" )"	1326:2:32928:32988	5558054	0	True				
ANR	5558112	CallExpression	"dprintf ( D_ALWAYS , ""Can't find the address of local startd\\n"" )"		5558054	0					
ANR	5558113	Callee	dprintf		5558054	0					
ANR	5558114	Identifier	dprintf		5558054	0					
ANR	5558115	ArgumentList	D_ALWAYS		5558054	1					
ANR	5558116	Argument	D_ALWAYS		5558054	0					
ANR	5558117	Identifier	D_ALWAYS		5558054	0					
ANR	5558118	Argument	"""Can't find the address of local startd\\n"""		5558054	1					
ANR	5558119	PrimaryExpression	"""Can't find the address of local startd\\n"""		5558054	0					
ANR	5558120	ReturnStatement	return false ;	1327:2:32992:33004	5558054	1	True				
ANR	5558121	Identifier	false		5558054	0					
ANR	5558122	IdentifierDeclStatement	SafeSock ssock ;	1331:1:33032:33046	5558054	4	True				
ANR	5558123	IdentifierDecl	ssock		5558054	0					
ANR	5558124	IdentifierDeclType	SafeSock		5558054	0					
ANR	5558125	Identifier	ssock		5558054	1					
ANR	5558126	ExpressionStatement	ssock . timeout ( 5 )	1333:1:33050:33068	5558054	5	True				
ANR	5558127	CallExpression	ssock . timeout ( 5 )		5558054	0					
ANR	5558128	Callee	ssock . timeout		5558054	0					
ANR	5558129	MemberAccess	ssock . timeout		5558054	0					
ANR	5558130	Identifier	ssock		5558054	0					
ANR	5558131	Identifier	timeout		5558054	1					
ANR	5558132	ArgumentList	5		5558054	1					
ANR	5558133	Argument	5		5558054	0					
ANR	5558134	PrimaryExpression	5		5558054	0					
ANR	5558135	ExpressionStatement	ssock . encode ( )	1334:1:33092:33106	5558054	6	True				
ANR	5558136	CallExpression	ssock . encode ( )		5558054	0					
ANR	5558137	Callee	ssock . encode		5558054	0					
ANR	5558138	MemberAccess	ssock . encode		5558054	0					
ANR	5558139	Identifier	ssock		5558054	0					
ANR	5558140	Identifier	encode		5558054	1					
ANR	5558141	ArgumentList			5558054	1					
ANR	5558142	IfStatement	if ( ! ssock . connect ( addr ) )		5558054	7					
ANR	5558143	Condition	! ssock . connect ( addr )	1336:5:33114:33133	5558054	0	True				
ANR	5558144	UnaryOperationExpression	! ssock . connect ( addr )		5558054	0					
ANR	5558145	UnaryOperator	!		5558054	0					
ANR	5558146	CallExpression	ssock . connect ( addr )		5558054	1					
ANR	5558147	Callee	ssock . connect		5558054	0					
ANR	5558148	MemberAccess	ssock . connect		5558054	0					
ANR	5558149	Identifier	ssock		5558054	0					
ANR	5558150	Identifier	connect		5558054	1					
ANR	5558151	ArgumentList	addr		5558054	1					
ANR	5558152	Argument	addr		5558054	0					
ANR	5558153	Identifier	addr		5558054	0					
ANR	5558154	CompoundStatement		21:28:387:387	5558054	1					
ANR	5558155	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to connect to local startd(%s)\\n"" , addr )"	1337:2:33141:33208	5558054	0	True				
ANR	5558156	CallExpression	"dprintf ( D_ALWAYS , ""Failed to connect to local startd(%s)\\n"" , addr )"		5558054	0					
ANR	5558157	Callee	dprintf		5558054	0					
ANR	5558158	Identifier	dprintf		5558054	0					
ANR	5558159	ArgumentList	D_ALWAYS		5558054	1					
ANR	5558160	Argument	D_ALWAYS		5558054	0					
ANR	5558161	Identifier	D_ALWAYS		5558054	0					
ANR	5558162	Argument	"""Failed to connect to local startd(%s)\\n"""		5558054	1					
ANR	5558163	PrimaryExpression	"""Failed to connect to local startd(%s)\\n"""		5558054	0					
ANR	5558164	Argument	addr		5558054	2					
ANR	5558165	Identifier	addr		5558054	0					
ANR	5558166	ReturnStatement	return false ;	1338:2:33212:33224	5558054	1	True				
ANR	5558167	Identifier	false		5558054	0					
ANR	5558168	IfStatement	"if ( ! startd . startCommand ( cmd , & ssock ) )"		5558054	8					
ANR	5558169	Condition	"! startd . startCommand ( cmd , & ssock )"	1341:5:33235:33267	5558054	0	True				
ANR	5558170	UnaryOperationExpression	"! startd . startCommand ( cmd , & ssock )"		5558054	0					
ANR	5558171	UnaryOperator	!		5558054	0					
ANR	5558172	CallExpression	"startd . startCommand ( cmd , & ssock )"		5558054	1					
ANR	5558173	Callee	startd . startCommand		5558054	0					
ANR	5558174	MemberAccess	startd . startCommand		5558054	0					
ANR	5558175	Identifier	startd		5558054	0					
ANR	5558176	Identifier	startCommand		5558054	1					
ANR	5558177	ArgumentList	cmd		5558054	1					
ANR	5558178	Argument	cmd		5558054	0					
ANR	5558179	Identifier	cmd		5558054	0					
ANR	5558180	Argument	& ssock		5558054	1					
ANR	5558181	UnaryOperationExpression	& ssock		5558054	0					
ANR	5558182	UnaryOperator	&		5558054	0					
ANR	5558183	Identifier	ssock		5558054	1					
ANR	5558184	CompoundStatement		26:41:521:521	5558054	1					
ANR	5558185	Statement	dprintf	1342:2:33275:33281	5558054	0	True				
ANR	5558186	Statement	(	1342:9:33282:33282	5558054	1	True				
ANR	5558187	Statement	D_ALWAYS	1342:11:33284:33291	5558054	2	True				
ANR	5558188	Statement	","	1342:19:33292:33292	5558054	3	True				
ANR	5558189	Statement	"""Failed to send UDP command(%s) """	1342:21:33294:33326	5558054	4	True				
ANR	5558190	Statement	"""to local startd %s\\n"""	1343:5:33333:33354	5558054	5	True				
ANR	5558191	Statement	","	1343:27:33355:33355	5558054	6	True				
ANR	5558192	Statement	getCommandString	1343:29:33357:33372	5558054	7	True				
ANR	5558193	Statement	(	1343:45:33373:33373	5558054	8	True				
ANR	5558194	Statement	cmd	1343:46:33374:33376	5558054	9	True				
ANR	5558195	Statement	)	1343:49:33377:33377	5558054	10	True				
ANR	5558196	Statement	","	1343:50:33378:33378	5558054	11	True				
ANR	5558197	Statement	addr	1343:52:33380:33383	5558054	12	True				
ANR	5558198	Statement	)	1343:56:33384:33384	5558054	13	True				
ANR	5558199	ExpressionStatement		1343:57:33385:33385	5558054	14	True				
ANR	5558200	ReturnStatement	return false ;	1344:2:33389:33401	5558054	15	True				
ANR	5558201	Identifier	false		5558054	0					
ANR	5558202	IdentifierDeclStatement	MyString s_pid ;	1348:1:33441:33455	5558054	9	True				
ANR	5558203	IdentifierDecl	s_pid		5558054	0					
ANR	5558204	IdentifierDeclType	MyString		5558054	0					
ANR	5558205	Identifier	s_pid		5558054	1					
ANR	5558206	ExpressionStatement	s_pid += ( int ) daemonCore -> getpid ( )	1349:1:33458:33492	5558054	10	True				
ANR	5558207	AssignmentExpression	s_pid += ( int ) daemonCore -> getpid ( )		5558054	0		+=			
ANR	5558208	Identifier	s_pid		5558054	0					
ANR	5558209	CastExpression	( int ) daemonCore -> getpid ( )		5558054	1					
ANR	5558210	CastTarget	int		5558054	0					
ANR	5558211	CallExpression	daemonCore -> getpid ( )		5558054	1					
ANR	5558212	Callee	daemonCore -> getpid		5558054	0					
ANR	5558213	PtrMemberAccess	daemonCore -> getpid		5558054	0					
ANR	5558214	Identifier	daemonCore		5558054	0					
ANR	5558215	Identifier	getpid		5558054	1					
ANR	5558216	ArgumentList			5558054	1					
ANR	5558217	IdentifierDeclStatement	char * starter_pid = strdup ( s_pid . Value ( ) ) ;	1351:1:33496:33537	5558054	11	True				
ANR	5558218	IdentifierDecl	* starter_pid = strdup ( s_pid . Value ( ) )		5558054	0					
ANR	5558219	IdentifierDeclType	char *		5558054	0					
ANR	5558220	Identifier	starter_pid		5558054	1					
ANR	5558221	AssignmentExpression	* starter_pid = strdup ( s_pid . Value ( ) )		5558054	2		=			
ANR	5558222	Identifier	starter_pid		5558054	0					
ANR	5558223	CallExpression	strdup ( s_pid . Value ( ) )		5558054	1					
ANR	5558224	Callee	strdup		5558054	0					
ANR	5558225	Identifier	strdup		5558054	0					
ANR	5558226	ArgumentList	s_pid . Value ( )		5558054	1					
ANR	5558227	Argument	s_pid . Value ( )		5558054	0					
ANR	5558228	CallExpression	s_pid . Value ( )		5558054	0					
ANR	5558229	Callee	s_pid . Value		5558054	0					
ANR	5558230	MemberAccess	s_pid . Value		5558054	0					
ANR	5558231	Identifier	s_pid		5558054	0					
ANR	5558232	Identifier	Value		5558054	1					
ANR	5558233	ArgumentList			5558054	1					
ANR	5558234	ExpressionStatement	ASSERT ( starter_pid )	1352:1:33540:33559	5558054	12	True				
ANR	5558235	CallExpression	ASSERT ( starter_pid )		5558054	0					
ANR	5558236	Callee	ASSERT		5558054	0					
ANR	5558237	Identifier	ASSERT		5558054	0					
ANR	5558238	ArgumentList	starter_pid		5558054	1					
ANR	5558239	Argument	starter_pid		5558054	0					
ANR	5558240	Identifier	starter_pid		5558054	0					
ANR	5558241	ExpressionStatement	ssock . code ( starter_pid )	1353:1:33562:33585	5558054	13	True				
ANR	5558242	CallExpression	ssock . code ( starter_pid )		5558054	0					
ANR	5558243	Callee	ssock . code		5558054	0					
ANR	5558244	MemberAccess	ssock . code		5558054	0					
ANR	5558245	Identifier	ssock		5558054	0					
ANR	5558246	Identifier	code		5558054	1					
ANR	5558247	ArgumentList	starter_pid		5558054	1					
ANR	5558248	Argument	starter_pid		5558054	0					
ANR	5558249	Identifier	starter_pid		5558054	0					
ANR	5558250	IdentifierDeclStatement	char * vm_value = strdup ( value ) ;	1356:1:33607:33637	5558054	14	True				
ANR	5558251	IdentifierDecl	* vm_value = strdup ( value )		5558054	0					
ANR	5558252	IdentifierDeclType	char *		5558054	0					
ANR	5558253	Identifier	vm_value		5558054	1					
ANR	5558254	AssignmentExpression	* vm_value = strdup ( value )		5558054	2		=			
ANR	5558255	Identifier	vm_value		5558054	0					
ANR	5558256	CallExpression	strdup ( value )		5558054	1					
ANR	5558257	Callee	strdup		5558054	0					
ANR	5558258	Identifier	strdup		5558054	0					
ANR	5558259	ArgumentList	value		5558054	1					
ANR	5558260	Argument	value		5558054	0					
ANR	5558261	Identifier	value		5558054	0					
ANR	5558262	ExpressionStatement	ASSERT ( vm_value )	1357:1:33640:33656	5558054	15	True				
ANR	5558263	CallExpression	ASSERT ( vm_value )		5558054	0					
ANR	5558264	Callee	ASSERT		5558054	0					
ANR	5558265	Identifier	ASSERT		5558054	0					
ANR	5558266	ArgumentList	vm_value		5558054	1					
ANR	5558267	Argument	vm_value		5558054	0					
ANR	5558268	Identifier	vm_value		5558054	0					
ANR	5558269	ExpressionStatement	ssock . code ( vm_value )	1358:1:33659:33679	5558054	16	True				
ANR	5558270	CallExpression	ssock . code ( vm_value )		5558054	0					
ANR	5558271	Callee	ssock . code		5558054	0					
ANR	5558272	MemberAccess	ssock . code		5558054	0					
ANR	5558273	Identifier	ssock		5558054	0					
ANR	5558274	Identifier	code		5558054	1					
ANR	5558275	ArgumentList	vm_value		5558054	1					
ANR	5558276	Argument	vm_value		5558054	0					
ANR	5558277	Identifier	vm_value		5558054	0					
ANR	5558278	IfStatement	if ( ! ssock . end_of_message ( ) )		5558054	17					
ANR	5558279	Condition	! ssock . end_of_message ( )	1360:5:33687:33709	5558054	0	True				
ANR	5558280	UnaryOperationExpression	! ssock . end_of_message ( )		5558054	0					
ANR	5558281	UnaryOperator	!		5558054	0					
ANR	5558282	CallExpression	ssock . end_of_message ( )		5558054	1					
ANR	5558283	Callee	ssock . end_of_message		5558054	0					
ANR	5558284	MemberAccess	ssock . end_of_message		5558054	0					
ANR	5558285	Identifier	ssock		5558054	0					
ANR	5558286	Identifier	end_of_message		5558054	1					
ANR	5558287	ArgumentList			5558054	1					
ANR	5558288	CompoundStatement		45:31:963:963	5558054	1					
ANR	5558289	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Failed to send EOM to local startd %s\\n"" , addr )"	1361:2:33717:33787	5558054	0	True				
ANR	5558290	CallExpression	"dprintf ( D_FULLDEBUG , ""Failed to send EOM to local startd %s\\n"" , addr )"		5558054	0					
ANR	5558291	Callee	dprintf		5558054	0					
ANR	5558292	Identifier	dprintf		5558054	0					
ANR	5558293	ArgumentList	D_FULLDEBUG		5558054	1					
ANR	5558294	Argument	D_FULLDEBUG		5558054	0					
ANR	5558295	Identifier	D_FULLDEBUG		5558054	0					
ANR	5558296	Argument	"""Failed to send EOM to local startd %s\\n"""		5558054	1					
ANR	5558297	PrimaryExpression	"""Failed to send EOM to local startd %s\\n"""		5558054	0					
ANR	5558298	Argument	addr		5558054	2					
ANR	5558299	Identifier	addr		5558054	0					
ANR	5558300	ExpressionStatement	free ( starter_pid )	1362:2:33791:33808	5558054	1	True				
ANR	5558301	CallExpression	free ( starter_pid )		5558054	0					
ANR	5558302	Callee	free		5558054	0					
ANR	5558303	Identifier	free		5558054	0					
ANR	5558304	ArgumentList	starter_pid		5558054	1					
ANR	5558305	Argument	starter_pid		5558054	0					
ANR	5558306	Identifier	starter_pid		5558054	0					
ANR	5558307	ExpressionStatement	free ( vm_value )	1363:2:33812:33826	5558054	2	True				
ANR	5558308	CallExpression	free ( vm_value )		5558054	0					
ANR	5558309	Callee	free		5558054	0					
ANR	5558310	Identifier	free		5558054	0					
ANR	5558311	ArgumentList	vm_value		5558054	1					
ANR	5558312	Argument	vm_value		5558054	0					
ANR	5558313	Identifier	vm_value		5558054	0					
ANR	5558314	ReturnStatement	return false ;	1364:2:33830:33842	5558054	3	True				
ANR	5558315	Identifier	false		5558054	0					
ANR	5558316	ExpressionStatement	free ( starter_pid )	1366:1:33848:33865	5558054	18	True				
ANR	5558317	CallExpression	free ( starter_pid )		5558054	0					
ANR	5558318	Callee	free		5558054	0					
ANR	5558319	Identifier	free		5558054	0					
ANR	5558320	ArgumentList	starter_pid		5558054	1					
ANR	5558321	Argument	starter_pid		5558054	0					
ANR	5558322	Identifier	starter_pid		5558054	0					
ANR	5558323	ExpressionStatement	free ( vm_value )	1367:1:33868:33882	5558054	19	True				
ANR	5558324	CallExpression	free ( vm_value )		5558054	0					
ANR	5558325	Callee	free		5558054	0					
ANR	5558326	Identifier	free		5558054	0					
ANR	5558327	ArgumentList	vm_value		5558054	1					
ANR	5558328	Argument	vm_value		5558054	0					
ANR	5558329	Identifier	vm_value		5558054	0					
ANR	5558330	ExpressionStatement	sleep ( 1 )	1369:1:33886:33894	5558054	20	True				
ANR	5558331	CallExpression	sleep ( 1 )		5558054	0					
ANR	5558332	Callee	sleep		5558054	0					
ANR	5558333	Identifier	sleep		5558054	0					
ANR	5558334	ArgumentList	1		5558054	1					
ANR	5558335	Argument	1		5558054	0					
ANR	5558336	PrimaryExpression	1		5558054	0					
ANR	5558337	ReturnStatement	return true ;	1370:1:33897:33908	5558054	21	True				
ANR	5558338	Identifier	true		5558054	0					
ANR	5558339	ReturnType	bool		5558054	1					
ANR	5558340	Identifier	VMProc :: reportVMInfoToStartd		5558054	2					
ANR	5558341	ParameterList	"int cmd , const char * value"		5558054	3					
ANR	5558342	Parameter	int cmd	1315:29:32721:32727	5558054	0	True				
ANR	5558343	ParameterType	int		5558054	0					
ANR	5558344	Identifier	cmd		5558054	1					
ANR	5558345	Parameter	const char * value	1315:38:32730:32746	5558054	1	True				
ANR	5558346	ParameterType	const char *		5558054	0					
ANR	5558347	Identifier	value		5558054	1					
ANR	5558348	CFGEntryNode	ENTRY		5558054		True				
ANR	5558349	CFGExitNode	EXIT		5558054		True				
ANR	5558350	Symbol	startd . locate		5558054						
ANR	5558351	Symbol	startd . addr		5558054						
ANR	5558352	Symbol	s_pid . Value		5558054						
ANR	5558353	Symbol	ssock . end_of_message		5558054						
ANR	5558354	Symbol	D_ALWAYS		5558054						
ANR	5558355	Symbol	false		5558054						
ANR	5558356	Symbol	daemonCore -> getpid		5558054						
ANR	5558357	Symbol	D_FULLDEBUG		5558054						
ANR	5558358	Symbol	starter_pid		5558054						
ANR	5558359	Symbol	startd		5558054						
ANR	5558360	Symbol	& ssock		5558054						
ANR	5558361	Symbol	ssock . connect		5558054						
ANR	5558362	Symbol	vm_value		5558054						
ANR	5558363	Symbol	startd . error		5558054						
ANR	5558364	Symbol	startd . startCommand		5558054						
ANR	5558365	Symbol	* daemonCore		5558054						
ANR	5558366	Symbol	daemonCore		5558054						
ANR	5558367	Symbol	true		5558054						
ANR	5558368	Symbol	cmd		5558054						
ANR	5558369	Symbol	strdup		5558054						
ANR	5558370	Symbol	addr		5558054						
ANR	5558371	Symbol	value		5558054						
ANR	5558372	Symbol	ssock		5558054						
ANR	5558373	Symbol	s_pid		5558054						
ANR	5558374	Function	VMProc :: vm_univ_detect	1373:0:33913:33961							
ANR	5558375	FunctionDef	VMProc :: vm_univ_detect ()		5558374	0					
ANR	5558376	CompoundStatement		1375:0:33944:33961	5558374	0					
ANR	5558377	ReturnStatement	return true ;	1376:1:33947:33958	5558374	0	True				
ANR	5558378	Identifier	true		5558374	0					
ANR	5558379	ReturnType	bool		5558374	1					
ANR	5558380	Identifier	VMProc :: vm_univ_detect		5558374	2					
ANR	5558381	ParameterList			5558374	3					
ANR	5558382	CFGEntryNode	ENTRY		5558374		True				
ANR	5558383	CFGExitNode	EXIT		5558374		True				
ANR	5558384	Symbol	true		5558374						
ANR	5558385	Function	VMProc :: setVMPID	1379:0:33964:34903							
ANR	5558386	FunctionDef	VMProc :: setVMPID (int vm_pid)		5558385	0					
ANR	5558387	CompoundStatement		1381:0:33998:34903	5558385	0					
ANR	5558388	IfStatement	if ( m_vm_pid == vm_pid )		5558385	0					
ANR	5558389	Condition	m_vm_pid == vm_pid	1382:5:34005:34022	5558385	0	True				
ANR	5558390	EqualityExpression	m_vm_pid == vm_pid		5558385	0		==			
ANR	5558391	Identifier	m_vm_pid		5558385	0					
ANR	5558392	Identifier	vm_pid		5558385	1					
ANR	5558393	CompoundStatement		2:26:27:27	5558385	1					
ANR	5558394	ReturnStatement	return ;	1384:2:34054:34060	5558385	0	True				
ANR	5558395	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""PID for VM is changed from [%d] to [%d]\\n"" , m_vm_pid , vm_pid )"	1387:1:34067:34153	5558385	1	True				
ANR	5558396	CallExpression	"dprintf ( D_FULLDEBUG , ""PID for VM is changed from [%d] to [%d]\\n"" , m_vm_pid , vm_pid )"		5558385	0					
ANR	5558397	Callee	dprintf		5558385	0					
ANR	5558398	Identifier	dprintf		5558385	0					
ANR	5558399	ArgumentList	D_FULLDEBUG		5558385	1					
ANR	5558400	Argument	D_FULLDEBUG		5558385	0					
ANR	5558401	Identifier	D_FULLDEBUG		5558385	0					
ANR	5558402	Argument	"""PID for VM is changed from [%d] to [%d]\\n"""		5558385	1					
ANR	5558403	PrimaryExpression	"""PID for VM is changed from [%d] to [%d]\\n"""		5558385	0					
ANR	5558404	Argument	m_vm_pid		5558385	2					
ANR	5558405	Identifier	m_vm_pid		5558385	0					
ANR	5558406	Argument	vm_pid		5558385	3					
ANR	5558407	Identifier	vm_pid		5558385	0					
ANR	5558408	ExpressionStatement	m_vm_pid = vm_pid	1391:1:34172:34189	5558385	2	True				
ANR	5558409	AssignmentExpression	m_vm_pid = vm_pid		5558385	0		=			
ANR	5558410	Identifier	m_vm_pid		5558385	0					
ANR	5558411	Identifier	vm_pid		5558385	1					
ANR	5558412	ExpressionStatement	m_vm_exited_pinfo . sys_time += m_vm_alive_pinfo . sys_time	1394:1:34237:34292	5558385	3	True				
ANR	5558413	AssignmentExpression	m_vm_exited_pinfo . sys_time += m_vm_alive_pinfo . sys_time		5558385	0		+=			
ANR	5558414	MemberAccess	m_vm_exited_pinfo . sys_time		5558385	0					
ANR	5558415	Identifier	m_vm_exited_pinfo		5558385	0					
ANR	5558416	Identifier	sys_time		5558385	1					
ANR	5558417	MemberAccess	m_vm_alive_pinfo . sys_time		5558385	1					
ANR	5558418	Identifier	m_vm_alive_pinfo		5558385	0					
ANR	5558419	Identifier	sys_time		5558385	1					
ANR	5558420	ExpressionStatement	m_vm_exited_pinfo . user_time += m_vm_alive_pinfo . user_time	1395:1:34295:34352	5558385	4	True				
ANR	5558421	AssignmentExpression	m_vm_exited_pinfo . user_time += m_vm_alive_pinfo . user_time		5558385	0		+=			
ANR	5558422	MemberAccess	m_vm_exited_pinfo . user_time		5558385	0					
ANR	5558423	Identifier	m_vm_exited_pinfo		5558385	0					
ANR	5558424	Identifier	user_time		5558385	1					
ANR	5558425	MemberAccess	m_vm_alive_pinfo . user_time		5558385	1					
ANR	5558426	Identifier	m_vm_alive_pinfo		5558385	0					
ANR	5558427	Identifier	user_time		5558385	1					
ANR	5558428	IfStatement	if ( m_vm_alive_pinfo . rssize > m_vm_exited_pinfo . rssize )		5558385	5					
ANR	5558429	Condition	m_vm_alive_pinfo . rssize > m_vm_exited_pinfo . rssize	1396:5:34359:34408	5558385	0	True				
ANR	5558430	RelationalExpression	m_vm_alive_pinfo . rssize > m_vm_exited_pinfo . rssize		5558385	0		>			
ANR	5558431	MemberAccess	m_vm_alive_pinfo . rssize		5558385	0					
ANR	5558432	Identifier	m_vm_alive_pinfo		5558385	0					
ANR	5558433	Identifier	rssize		5558385	1					
ANR	5558434	MemberAccess	m_vm_exited_pinfo . rssize		5558385	1					
ANR	5558435	Identifier	m_vm_exited_pinfo		5558385	0					
ANR	5558436	Identifier	rssize		5558385	1					
ANR	5558437	CompoundStatement		16:58:413:413	5558385	1					
ANR	5558438	ExpressionStatement	m_vm_exited_pinfo . rssize = m_vm_alive_pinfo . rssize	1397:2:34416:34466	5558385	0	True				
ANR	5558439	AssignmentExpression	m_vm_exited_pinfo . rssize = m_vm_alive_pinfo . rssize		5558385	0		=			
ANR	5558440	MemberAccess	m_vm_exited_pinfo . rssize		5558385	0					
ANR	5558441	Identifier	m_vm_exited_pinfo		5558385	0					
ANR	5558442	Identifier	rssize		5558385	1					
ANR	5558443	MemberAccess	m_vm_alive_pinfo . rssize		5558385	1					
ANR	5558444	Identifier	m_vm_alive_pinfo		5558385	0					
ANR	5558445	Identifier	rssize		5558385	1					
ANR	5558446	IfStatement	if ( m_vm_alive_pinfo . imgsize > m_vm_exited_pinfo . imgsize )		5558385	6					
ANR	5558447	Condition	m_vm_alive_pinfo . imgsize > m_vm_exited_pinfo . imgsize	1399:5:34476:34527	5558385	0	True				
ANR	5558448	RelationalExpression	m_vm_alive_pinfo . imgsize > m_vm_exited_pinfo . imgsize		5558385	0		>			
ANR	5558449	MemberAccess	m_vm_alive_pinfo . imgsize		5558385	0					
ANR	5558450	Identifier	m_vm_alive_pinfo		5558385	0					
ANR	5558451	Identifier	imgsize		5558385	1					
ANR	5558452	MemberAccess	m_vm_exited_pinfo . imgsize		5558385	1					
ANR	5558453	Identifier	m_vm_exited_pinfo		5558385	0					
ANR	5558454	Identifier	imgsize		5558385	1					
ANR	5558455	CompoundStatement		19:60:532:532	5558385	1					
ANR	5558456	ExpressionStatement	m_vm_exited_pinfo . imgsize = m_vm_alive_pinfo . imgsize	1400:2:34535:34587	5558385	0	True				
ANR	5558457	AssignmentExpression	m_vm_exited_pinfo . imgsize = m_vm_alive_pinfo . imgsize		5558385	0		=			
ANR	5558458	MemberAccess	m_vm_exited_pinfo . imgsize		5558385	0					
ANR	5558459	Identifier	m_vm_exited_pinfo		5558385	0					
ANR	5558460	Identifier	imgsize		5558385	1					
ANR	5558461	MemberAccess	m_vm_alive_pinfo . imgsize		5558385	1					
ANR	5558462	Identifier	m_vm_alive_pinfo		5558385	0					
ANR	5558463	Identifier	imgsize		5558385	1					
ANR	5558464	ExpressionStatement	"memset ( & m_vm_alive_pinfo , 0 , sizeof ( m_vm_alive_pinfo ) )"	1404:1:34640:34694	5558385	7	True				
ANR	5558465	CallExpression	"memset ( & m_vm_alive_pinfo , 0 , sizeof ( m_vm_alive_pinfo ) )"		5558385	0					
ANR	5558466	Callee	memset		5558385	0					
ANR	5558467	Identifier	memset		5558385	0					
ANR	5558468	ArgumentList	& m_vm_alive_pinfo		5558385	1					
ANR	5558469	Argument	& m_vm_alive_pinfo		5558385	0					
ANR	5558470	UnaryOperationExpression	& m_vm_alive_pinfo		5558385	0					
ANR	5558471	UnaryOperator	&		5558385	0					
ANR	5558472	Identifier	m_vm_alive_pinfo		5558385	1					
ANR	5558473	Argument	0		5558385	1					
ANR	5558474	PrimaryExpression	0		5558385	0					
ANR	5558475	Argument	sizeof ( m_vm_alive_pinfo )		5558385	2					
ANR	5558476	SizeofExpression	sizeof ( m_vm_alive_pinfo )		5558385	0					
ANR	5558477	Sizeof	sizeof		5558385	0					
ANR	5558478	SizeofOperand	m_vm_alive_pinfo		5558385	1					
ANR	5558479	ExpressionStatement	updateUsageOfVM ( )	1407:1:34736:34753	5558385	8	True				
ANR	5558480	CallExpression	updateUsageOfVM ( )		5558385	0					
ANR	5558481	Callee	updateUsageOfVM		5558385	0					
ANR	5558482	Identifier	updateUsageOfVM		5558385	0					
ANR	5558483	ArgumentList			5558385	1					
ANR	5558484	IdentifierDeclStatement	MyString pid_string ;	1409:1:34757:34776	5558385	9	True				
ANR	5558485	IdentifierDecl	pid_string		5558385	0					
ANR	5558486	IdentifierDeclType	MyString		5558385	0					
ANR	5558487	Identifier	pid_string		5558385	1					
ANR	5558488	ExpressionStatement	pid_string += ( int ) m_vm_pid	1410:1:34779:34806	5558385	10	True				
ANR	5558489	AssignmentExpression	pid_string += ( int ) m_vm_pid		5558385	0		+=			
ANR	5558490	Identifier	pid_string		5558385	0					
ANR	5558491	CastExpression	( int ) m_vm_pid		5558385	1					
ANR	5558492	CastTarget	int		5558385	0					
ANR	5558493	Identifier	m_vm_pid		5558385	1					
ANR	5558494	ExpressionStatement	"reportVMInfoToStartd ( VM_UNIV_VMPID , pid_string . Value ( ) )"	1413:1:34846:34901	5558385	11	True				
ANR	5558495	CallExpression	"reportVMInfoToStartd ( VM_UNIV_VMPID , pid_string . Value ( ) )"		5558385	0					
ANR	5558496	Callee	reportVMInfoToStartd		5558385	0					
ANR	5558497	Identifier	reportVMInfoToStartd		5558385	0					
ANR	5558498	ArgumentList	VM_UNIV_VMPID		5558385	1					
ANR	5558499	Argument	VM_UNIV_VMPID		5558385	0					
ANR	5558500	Identifier	VM_UNIV_VMPID		5558385	0					
ANR	5558501	Argument	pid_string . Value ( )		5558385	1					
ANR	5558502	CallExpression	pid_string . Value ( )		5558385	0					
ANR	5558503	Callee	pid_string . Value		5558385	0					
ANR	5558504	MemberAccess	pid_string . Value		5558385	0					
ANR	5558505	Identifier	pid_string		5558385	0					
ANR	5558506	Identifier	Value		5558385	1					
ANR	5558507	ArgumentList			5558385	1					
ANR	5558508	ReturnType	void		5558385	1					
ANR	5558509	Identifier	VMProc :: setVMPID		5558385	2					
ANR	5558510	ParameterList	int vm_pid		5558385	3					
ANR	5558511	Parameter	int vm_pid	1380:17:33986:33995	5558385	0	True				
ANR	5558512	ParameterType	int		5558385	0					
ANR	5558513	Identifier	vm_pid		5558385	1					
ANR	5558514	CFGEntryNode	ENTRY		5558385		True				
ANR	5558515	CFGExitNode	EXIT		5558385		True				
ANR	5558516	Symbol	pid_string		5558385						
ANR	5558517	Symbol	D_FULLDEBUG		5558385						
ANR	5558518	Symbol	vm_pid		5558385						
ANR	5558519	Symbol	pid_string . Value		5558385						
ANR	5558520	Symbol	m_vm_pid		5558385						
ANR	5558521	Symbol	m_vm_exited_pinfo . user_time		5558385						
ANR	5558522	Symbol	m_vm_alive_pinfo . rssize		5558385						
ANR	5558523	Symbol	m_vm_alive_pinfo		5558385						
ANR	5558524	Symbol	m_vm_alive_pinfo . sys_time		5558385						
ANR	5558525	Symbol	m_vm_exited_pinfo . sys_time		5558385						
ANR	5558526	Symbol	VM_UNIV_VMPID		5558385						
ANR	5558527	Symbol	m_vm_alive_pinfo . imgsize		5558385						
ANR	5558528	Symbol	& m_vm_alive_pinfo		5558385						
ANR	5558529	Symbol	m_vm_alive_pinfo . user_time		5558385						
ANR	5558530	Symbol	m_vm_exited_pinfo . rssize		5558385						
ANR	5558531	Symbol	m_vm_exited_pinfo . imgsize		5558385						
ANR	5558532	Symbol	m_vm_exited_pinfo		5558385						
ANR	5558533	Function	VMProc :: setVMMAC	1416:0:34906:35245							
ANR	5558534	FunctionDef	VMProc :: setVMMAC (const char * mac)		5558533	0					
ANR	5558535	CompoundStatement		1418:0:34945:35245	5558533	0					
ANR	5558536	IfStatement	"if ( ! strcasecmp ( m_vm_mac . Value ( ) , mac ) )"		5558533	0					
ANR	5558537	Condition	"! strcasecmp ( m_vm_mac . Value ( ) , mac )"	1419:5:34952:34985	5558533	0	True				
ANR	5558538	UnaryOperationExpression	"! strcasecmp ( m_vm_mac . Value ( ) , mac )"		5558533	0					
ANR	5558539	UnaryOperator	!		5558533	0					
ANR	5558540	CallExpression	"strcasecmp ( m_vm_mac . Value ( ) , mac )"		5558533	1					
ANR	5558541	Callee	strcasecmp		5558533	0					
ANR	5558542	Identifier	strcasecmp		5558533	0					
ANR	5558543	ArgumentList	m_vm_mac . Value ( )		5558533	1					
ANR	5558544	Argument	m_vm_mac . Value ( )		5558533	0					
ANR	5558545	CallExpression	m_vm_mac . Value ( )		5558533	0					
ANR	5558546	Callee	m_vm_mac . Value		5558533	0					
ANR	5558547	MemberAccess	m_vm_mac . Value		5558533	0					
ANR	5558548	Identifier	m_vm_mac		5558533	0					
ANR	5558549	Identifier	Value		5558533	1					
ANR	5558550	ArgumentList			5558533	1					
ANR	5558551	Argument	mac		5558533	1					
ANR	5558552	Identifier	mac		5558533	0					
ANR	5558553	CompoundStatement		2:42:43:43	5558533	1					
ANR	5558554	ReturnStatement	return ;	1421:2:35024:35030	5558533	0	True				
ANR	5558555	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""MAC for VM is changed from [%s] to [%s]\\n"" , m_vm_mac . Value ( ) , mac )"	1424:1:35037:35128	5558533	1	True				
ANR	5558556	CallExpression	"dprintf ( D_FULLDEBUG , ""MAC for VM is changed from [%s] to [%s]\\n"" , m_vm_mac . Value ( ) , mac )"		5558533	0					
ANR	5558557	Callee	dprintf		5558533	0					
ANR	5558558	Identifier	dprintf		5558533	0					
ANR	5558559	ArgumentList	D_FULLDEBUG		5558533	1					
ANR	5558560	Argument	D_FULLDEBUG		5558533	0					
ANR	5558561	Identifier	D_FULLDEBUG		5558533	0					
ANR	5558562	Argument	"""MAC for VM is changed from [%s] to [%s]\\n"""		5558533	1					
ANR	5558563	PrimaryExpression	"""MAC for VM is changed from [%s] to [%s]\\n"""		5558533	0					
ANR	5558564	Argument	m_vm_mac . Value ( )		5558533	2					
ANR	5558565	CallExpression	m_vm_mac . Value ( )		5558533	0					
ANR	5558566	Callee	m_vm_mac . Value		5558533	0					
ANR	5558567	MemberAccess	m_vm_mac . Value		5558533	0					
ANR	5558568	Identifier	m_vm_mac		5558533	0					
ANR	5558569	Identifier	Value		5558533	1					
ANR	5558570	ArgumentList			5558533	1					
ANR	5558571	Argument	mac		5558533	3					
ANR	5558572	Identifier	mac		5558533	0					
ANR	5558573	ExpressionStatement	m_vm_mac = mac	1427:1:35132:35146	5558533	2	True				
ANR	5558574	AssignmentExpression	m_vm_mac = mac		5558533	0		=			
ANR	5558575	Identifier	m_vm_mac		5558533	0					
ANR	5558576	Identifier	mac		5558533	1					
ANR	5558577	ExpressionStatement	"reportVMInfoToStartd ( VM_UNIV_GUEST_MAC , m_vm_mac . Value ( ) )"	1430:1:35186:35243	5558533	3	True				
ANR	5558578	CallExpression	"reportVMInfoToStartd ( VM_UNIV_GUEST_MAC , m_vm_mac . Value ( ) )"		5558533	0					
ANR	5558579	Callee	reportVMInfoToStartd		5558533	0					
ANR	5558580	Identifier	reportVMInfoToStartd		5558533	0					
ANR	5558581	ArgumentList	VM_UNIV_GUEST_MAC		5558533	1					
ANR	5558582	Argument	VM_UNIV_GUEST_MAC		5558533	0					
ANR	5558583	Identifier	VM_UNIV_GUEST_MAC		5558533	0					
ANR	5558584	Argument	m_vm_mac . Value ( )		5558533	1					
ANR	5558585	CallExpression	m_vm_mac . Value ( )		5558533	0					
ANR	5558586	Callee	m_vm_mac . Value		5558533	0					
ANR	5558587	MemberAccess	m_vm_mac . Value		5558533	0					
ANR	5558588	Identifier	m_vm_mac		5558533	0					
ANR	5558589	Identifier	Value		5558533	1					
ANR	5558590	ArgumentList			5558533	1					
ANR	5558591	ReturnType	void		5558533	1					
ANR	5558592	Identifier	VMProc :: setVMMAC		5558533	2					
ANR	5558593	ParameterList	const char * mac		5558533	3					
ANR	5558594	Parameter	const char * mac	1417:17:34928:34942	5558533	0	True				
ANR	5558595	ParameterType	const char *		5558533	0					
ANR	5558596	Identifier	mac		5558533	1					
ANR	5558597	CFGEntryNode	ENTRY		5558533		True				
ANR	5558598	CFGExitNode	EXIT		5558533		True				
ANR	5558599	Symbol	m_vm_mac		5558533						
ANR	5558600	Symbol	VM_UNIV_GUEST_MAC		5558533						
ANR	5558601	Symbol	m_vm_mac . Value		5558533						
ANR	5558602	Symbol	D_FULLDEBUG		5558533						
ANR	5558603	Symbol	strcasecmp		5558533						
ANR	5558604	Symbol	mac		5558533						
ANR	5558605	Function	VMProc :: setVMIP	1433:0:35248:35574							
ANR	5558606	FunctionDef	VMProc :: setVMIP (const char * ip)		5558605	0					
ANR	5558607	CompoundStatement		1435:0:35285:35574	5558605	0					
ANR	5558608	IfStatement	"if ( ! strcasecmp ( m_vm_ip . Value ( ) , ip ) )"		5558605	0					
ANR	5558609	Condition	"! strcasecmp ( m_vm_ip . Value ( ) , ip )"	1436:5:35292:35323	5558605	0	True				
ANR	5558610	UnaryOperationExpression	"! strcasecmp ( m_vm_ip . Value ( ) , ip )"		5558605	0					
ANR	5558611	UnaryOperator	!		5558605	0					
ANR	5558612	CallExpression	"strcasecmp ( m_vm_ip . Value ( ) , ip )"		5558605	1					
ANR	5558613	Callee	strcasecmp		5558605	0					
ANR	5558614	Identifier	strcasecmp		5558605	0					
ANR	5558615	ArgumentList	m_vm_ip . Value ( )		5558605	1					
ANR	5558616	Argument	m_vm_ip . Value ( )		5558605	0					
ANR	5558617	CallExpression	m_vm_ip . Value ( )		5558605	0					
ANR	5558618	Callee	m_vm_ip . Value		5558605	0					
ANR	5558619	MemberAccess	m_vm_ip . Value		5558605	0					
ANR	5558620	Identifier	m_vm_ip		5558605	0					
ANR	5558621	Identifier	Value		5558605	1					
ANR	5558622	ArgumentList			5558605	1					
ANR	5558623	Argument	ip		5558605	1					
ANR	5558624	Identifier	ip		5558605	0					
ANR	5558625	CompoundStatement		2:40:41:41	5558605	1					
ANR	5558626	ReturnStatement	return ;	1438:2:35361:35367	5558605	0	True				
ANR	5558627	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""IP for VM is changed from [%s] to [%s]\\n"" , m_vm_ip . Value ( ) , ip )"	1441:1:35374:35462	5558605	1	True				
ANR	5558628	CallExpression	"dprintf ( D_FULLDEBUG , ""IP for VM is changed from [%s] to [%s]\\n"" , m_vm_ip . Value ( ) , ip )"		5558605	0					
ANR	5558629	Callee	dprintf		5558605	0					
ANR	5558630	Identifier	dprintf		5558605	0					
ANR	5558631	ArgumentList	D_FULLDEBUG		5558605	1					
ANR	5558632	Argument	D_FULLDEBUG		5558605	0					
ANR	5558633	Identifier	D_FULLDEBUG		5558605	0					
ANR	5558634	Argument	"""IP for VM is changed from [%s] to [%s]\\n"""		5558605	1					
ANR	5558635	PrimaryExpression	"""IP for VM is changed from [%s] to [%s]\\n"""		5558605	0					
ANR	5558636	Argument	m_vm_ip . Value ( )		5558605	2					
ANR	5558637	CallExpression	m_vm_ip . Value ( )		5558605	0					
ANR	5558638	Callee	m_vm_ip . Value		5558605	0					
ANR	5558639	MemberAccess	m_vm_ip . Value		5558605	0					
ANR	5558640	Identifier	m_vm_ip		5558605	0					
ANR	5558641	Identifier	Value		5558605	1					
ANR	5558642	ArgumentList			5558605	1					
ANR	5558643	Argument	ip		5558605	3					
ANR	5558644	Identifier	ip		5558605	0					
ANR	5558645	ExpressionStatement	m_vm_ip = ip	1444:1:35466:35478	5558605	2	True				
ANR	5558646	AssignmentExpression	m_vm_ip = ip		5558605	0		=			
ANR	5558647	Identifier	m_vm_ip		5558605	0					
ANR	5558648	Identifier	ip		5558605	1					
ANR	5558649	ExpressionStatement	"reportVMInfoToStartd ( VM_UNIV_GUEST_IP , m_vm_ip . Value ( ) )"	1447:1:35517:35572	5558605	3	True				
ANR	5558650	CallExpression	"reportVMInfoToStartd ( VM_UNIV_GUEST_IP , m_vm_ip . Value ( ) )"		5558605	0					
ANR	5558651	Callee	reportVMInfoToStartd		5558605	0					
ANR	5558652	Identifier	reportVMInfoToStartd		5558605	0					
ANR	5558653	ArgumentList	VM_UNIV_GUEST_IP		5558605	1					
ANR	5558654	Argument	VM_UNIV_GUEST_IP		5558605	0					
ANR	5558655	Identifier	VM_UNIV_GUEST_IP		5558605	0					
ANR	5558656	Argument	m_vm_ip . Value ( )		5558605	1					
ANR	5558657	CallExpression	m_vm_ip . Value ( )		5558605	0					
ANR	5558658	Callee	m_vm_ip . Value		5558605	0					
ANR	5558659	MemberAccess	m_vm_ip . Value		5558605	0					
ANR	5558660	Identifier	m_vm_ip		5558605	0					
ANR	5558661	Identifier	Value		5558605	1					
ANR	5558662	ArgumentList			5558605	1					
ANR	5558663	ReturnType	void		5558605	1					
ANR	5558664	Identifier	VMProc :: setVMIP		5558605	2					
ANR	5558665	ParameterList	const char * ip		5558605	3					
ANR	5558666	Parameter	const char * ip	1434:16:35269:35282	5558605	0	True				
ANR	5558667	ParameterType	const char *		5558605	0					
ANR	5558668	Identifier	ip		5558605	1					
ANR	5558669	CFGEntryNode	ENTRY		5558605		True				
ANR	5558670	CFGExitNode	EXIT		5558605		True				
ANR	5558671	Symbol	m_vm_ip . Value		5558605						
ANR	5558672	Symbol	ip		5558605						
ANR	5558673	Symbol	m_vm_ip		5558605						
ANR	5558674	Symbol	D_FULLDEBUG		5558605						
ANR	5558675	Symbol	strcasecmp		5558605						
ANR	5558676	Symbol	VM_UNIV_GUEST_IP		5558605						
ANR	5558677	Function	VMProc :: updateUsageOfVM	1450:0:35577:36264							
ANR	5558678	FunctionDef	VMProc :: updateUsageOfVM ()		5558677	0					
ANR	5558679	CompoundStatement		1452:0:35608:36264	5558677	0					
ANR	5558680	IfStatement	if ( m_vm_pid == 0 )		5558677	0					
ANR	5558681	Condition	m_vm_pid == 0	1453:5:35615:35627	5558677	0	True				
ANR	5558682	EqualityExpression	m_vm_pid == 0		5558677	0		==			
ANR	5558683	Identifier	m_vm_pid		5558677	0					
ANR	5558684	PrimaryExpression	0		5558677	1					
ANR	5558685	CompoundStatement		2:21:22:22	5558677	1					
ANR	5558686	ReturnStatement	return ;	1454:2:35635:35641	5558677	0	True				
ANR	5558687	IdentifierDeclStatement	int proc_status = PROCAPI_OK ;	1457:1:35648:35676	5558677	1	True				
ANR	5558688	IdentifierDecl	proc_status = PROCAPI_OK		5558677	0					
ANR	5558689	IdentifierDeclType	int		5558677	0					
ANR	5558690	Identifier	proc_status		5558677	1					
ANR	5558691	AssignmentExpression	proc_status = PROCAPI_OK		5558677	2		=			
ANR	5558692	Identifier	PROCAPI_OK		5558677	0					
ANR	5558693	Identifier	PROCAPI_OK		5558677	1					
ANR	5558694	IdentifierDeclStatement	struct procInfo pinfo ;	1458:1:35679:35700	5558677	2	True				
ANR	5558695	IdentifierDecl	pinfo		5558677	0					
ANR	5558696	IdentifierDeclType	struct procInfo		5558677	0					
ANR	5558697	Identifier	pinfo		5558677	1					
ANR	5558698	ExpressionStatement	"memset ( & pinfo , 0 , sizeof ( pinfo ) )"	1459:1:35703:35735	5558677	3	True				
ANR	5558699	CallExpression	"memset ( & pinfo , 0 , sizeof ( pinfo ) )"		5558677	0					
ANR	5558700	Callee	memset		5558677	0					
ANR	5558701	Identifier	memset		5558677	0					
ANR	5558702	ArgumentList	& pinfo		5558677	1					
ANR	5558703	Argument	& pinfo		5558677	0					
ANR	5558704	UnaryOperationExpression	& pinfo		5558677	0					
ANR	5558705	UnaryOperator	&		5558677	0					
ANR	5558706	Identifier	pinfo		5558677	1					
ANR	5558707	Argument	0		5558677	1					
ANR	5558708	PrimaryExpression	0		5558677	0					
ANR	5558709	Argument	sizeof ( pinfo )		5558677	2					
ANR	5558710	SizeofExpression	sizeof ( pinfo )		5558677	0					
ANR	5558711	Sizeof	sizeof		5558677	0					
ANR	5558712	SizeofOperand	pinfo		5558677	1					
ANR	5558713	IdentifierDeclStatement	piPTR pi = & pinfo ;	1461:1:35739:35756	5558677	4	True				
ANR	5558714	IdentifierDecl	pi = & pinfo		5558677	0					
ANR	5558715	IdentifierDeclType	piPTR		5558677	0					
ANR	5558716	Identifier	pi		5558677	1					
ANR	5558717	AssignmentExpression	pi = & pinfo		5558677	2		=			
ANR	5558718	Identifier	pi		5558677	0					
ANR	5558719	UnaryOperationExpression	& pinfo		5558677	1					
ANR	5558720	UnaryOperator	&		5558677	0					
ANR	5558721	Identifier	pinfo		5558677	1					
ANR	5558722	IfStatement	"if ( ProcAPI :: getProcInfo ( m_vm_pid , pi , proc_status ) == PROCAPI_SUCCESS )"		5558677	5					
ANR	5558723	Condition	"ProcAPI :: getProcInfo ( m_vm_pid , pi , proc_status ) == PROCAPI_SUCCESS"	1462:5:35763:35832	5558677	0	True				
ANR	5558724	EqualityExpression	"ProcAPI :: getProcInfo ( m_vm_pid , pi , proc_status ) == PROCAPI_SUCCESS"		5558677	0		==			
ANR	5558725	CallExpression	"ProcAPI :: getProcInfo ( m_vm_pid , pi , proc_status )"		5558677	0					
ANR	5558726	Callee	ProcAPI :: getProcInfo		5558677	0					
ANR	5558727	Identifier	ProcAPI :: getProcInfo		5558677	0					
ANR	5558728	ArgumentList	m_vm_pid		5558677	1					
ANR	5558729	Argument	m_vm_pid		5558677	0					
ANR	5558730	Identifier	m_vm_pid		5558677	0					
ANR	5558731	Argument	pi		5558677	1					
ANR	5558732	Identifier	pi		5558677	0					
ANR	5558733	Argument	proc_status		5558677	2					
ANR	5558734	Identifier	proc_status		5558677	0					
ANR	5558735	Identifier	PROCAPI_SUCCESS		5558677	1					
ANR	5558736	CompoundStatement		12:21:227:227	5558677	1					
ANR	5558737	ExpressionStatement	"memcpy ( & m_vm_alive_pinfo , & pinfo , sizeof ( m_vm_alive_pinfo ) )"	1464:2:35840:35899	5558677	0	True				
ANR	5558738	CallExpression	"memcpy ( & m_vm_alive_pinfo , & pinfo , sizeof ( m_vm_alive_pinfo ) )"		5558677	0					
ANR	5558739	Callee	memcpy		5558677	0					
ANR	5558740	Identifier	memcpy		5558677	0					
ANR	5558741	ArgumentList	& m_vm_alive_pinfo		5558677	1					
ANR	5558742	Argument	& m_vm_alive_pinfo		5558677	0					
ANR	5558743	UnaryOperationExpression	& m_vm_alive_pinfo		5558677	0					
ANR	5558744	UnaryOperator	&		5558677	0					
ANR	5558745	Identifier	m_vm_alive_pinfo		5558677	1					
ANR	5558746	Argument	& pinfo		5558677	1					
ANR	5558747	UnaryOperationExpression	& pinfo		5558677	0					
ANR	5558748	UnaryOperator	&		5558677	0					
ANR	5558749	Identifier	pinfo		5558677	1					
ANR	5558750	Argument	sizeof ( m_vm_alive_pinfo )		5558677	2					
ANR	5558751	SizeofExpression	sizeof ( m_vm_alive_pinfo )		5558677	0					
ANR	5558752	Sizeof	sizeof		5558677	0					
ANR	5558753	SizeofOperand	m_vm_alive_pinfo		5558677	1					
ANR	5558754	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Usage of process[%d] for a VM is updated\\n"" , m_vm_pid )"	1465:2:35903:35978	5558677	1	True				
ANR	5558755	CallExpression	"dprintf ( D_FULLDEBUG , ""Usage of process[%d] for a VM is updated\\n"" , m_vm_pid )"		5558677	0					
ANR	5558756	Callee	dprintf		5558677	0					
ANR	5558757	Identifier	dprintf		5558677	0					
ANR	5558758	ArgumentList	D_FULLDEBUG		5558677	1					
ANR	5558759	Argument	D_FULLDEBUG		5558677	0					
ANR	5558760	Identifier	D_FULLDEBUG		5558677	0					
ANR	5558761	Argument	"""Usage of process[%d] for a VM is updated\\n"""		5558677	1					
ANR	5558762	PrimaryExpression	"""Usage of process[%d] for a VM is updated\\n"""		5558677	0					
ANR	5558763	Argument	m_vm_pid		5558677	2					
ANR	5558764	Identifier	m_vm_pid		5558677	0					
ANR	5558765	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""sys_time=%lu, user_time=%lu, image_size=%lu\\n"" , pinfo . sys_time , pinfo . user_time , pinfo . rssize )"	1467:2:36001:36121	5558677	2	True				
ANR	5558766	CallExpression	"dprintf ( D_FULLDEBUG , ""sys_time=%lu, user_time=%lu, image_size=%lu\\n"" , pinfo . sys_time , pinfo . user_time , pinfo . rssize )"		5558677	0					
ANR	5558767	Callee	dprintf		5558677	0					
ANR	5558768	Identifier	dprintf		5558677	0					
ANR	5558769	ArgumentList	D_FULLDEBUG		5558677	1					
ANR	5558770	Argument	D_FULLDEBUG		5558677	0					
ANR	5558771	Identifier	D_FULLDEBUG		5558677	0					
ANR	5558772	Argument	"""sys_time=%lu, user_time=%lu, image_size=%lu\\n"""		5558677	1					
ANR	5558773	PrimaryExpression	"""sys_time=%lu, user_time=%lu, image_size=%lu\\n"""		5558677	0					
ANR	5558774	Argument	pinfo . sys_time		5558677	2					
ANR	5558775	MemberAccess	pinfo . sys_time		5558677	0					
ANR	5558776	Identifier	pinfo		5558677	0					
ANR	5558777	Identifier	sys_time		5558677	1					
ANR	5558778	Argument	pinfo . user_time		5558677	3					
ANR	5558779	MemberAccess	pinfo . user_time		5558677	0					
ANR	5558780	Identifier	pinfo		5558677	0					
ANR	5558781	Identifier	user_time		5558677	1					
ANR	5558782	Argument	pinfo . rssize		5558677	4					
ANR	5558783	MemberAccess	pinfo . rssize		5558677	0					
ANR	5558784	Identifier	pinfo		5558677	0					
ANR	5558785	Identifier	rssize		5558677	1					
ANR	5558786	ReturnType	void		5558677	1					
ANR	5558787	Identifier	VMProc :: updateUsageOfVM		5558677	2					
ANR	5558788	ParameterList			5558677	3					
ANR	5558789	CFGEntryNode	ENTRY		5558677		True				
ANR	5558790	CFGExitNode	EXIT		5558677		True				
ANR	5558791	Symbol	PROCAPI_OK		5558677						
ANR	5558792	Symbol	pinfo		5558677						
ANR	5558793	Symbol	pinfo . sys_time		5558677						
ANR	5558794	Symbol	pinfo . rssize		5558677						
ANR	5558795	Symbol	& pinfo		5558677						
ANR	5558796	Symbol	PROCAPI_SUCCESS		5558677						
ANR	5558797	Symbol	D_FULLDEBUG		5558677						
ANR	5558798	Symbol	m_vm_pid		5558677						
ANR	5558799	Symbol	ProcAPI :: getProcInfo		5558677						
ANR	5558800	Symbol	pi		5558677						
ANR	5558801	Symbol	& m_vm_alive_pinfo		5558677						
ANR	5558802	Symbol	proc_status		5558677						
ANR	5558803	Symbol	pinfo . user_time		5558677						
ANR	5558804	Function	VMProc :: getUsageOfVM	1476:0:36267:37249							
ANR	5558805	FunctionDef	"VMProc :: getUsageOfVM (long & sys_time , long & user_time , unsigned long & max_image , unsigned long & rss , unsigned long & pss , bool & pss_available)"		5558804	0					
ANR	5558806	CompoundStatement		1478:0:36413:37249	5558804	0					
ANR	5558807	ExpressionStatement	updateUsageOfVM ( )	1479:1:36416:36433	5558804	0	True				
ANR	5558808	CallExpression	updateUsageOfVM ( )		5558804	0					
ANR	5558809	Callee	updateUsageOfVM		5558804	0					
ANR	5558810	Identifier	updateUsageOfVM		5558804	0					
ANR	5558811	ArgumentList			5558804	1					
ANR	5558812	ExpressionStatement	sys_time = m_vm_exited_pinfo . sys_time + m_vm_alive_pinfo . sys_time	1480:1:36436:36501	5558804	1	True				
ANR	5558813	AssignmentExpression	sys_time = m_vm_exited_pinfo . sys_time + m_vm_alive_pinfo . sys_time		5558804	0		=			
ANR	5558814	Identifier	sys_time		5558804	0					
ANR	5558815	AdditiveExpression	m_vm_exited_pinfo . sys_time + m_vm_alive_pinfo . sys_time		5558804	1		+			
ANR	5558816	MemberAccess	m_vm_exited_pinfo . sys_time		5558804	0					
ANR	5558817	Identifier	m_vm_exited_pinfo		5558804	0					
ANR	5558818	Identifier	sys_time		5558804	1					
ANR	5558819	MemberAccess	m_vm_alive_pinfo . sys_time		5558804	1					
ANR	5558820	Identifier	m_vm_alive_pinfo		5558804	0					
ANR	5558821	Identifier	sys_time		5558804	1					
ANR	5558822	ExpressionStatement	user_time = m_vm_exited_pinfo . user_time + m_vm_alive_pinfo . user_time	1481:1:36504:36572	5558804	2	True				
ANR	5558823	AssignmentExpression	user_time = m_vm_exited_pinfo . user_time + m_vm_alive_pinfo . user_time		5558804	0		=			
ANR	5558824	Identifier	user_time		5558804	0					
ANR	5558825	AdditiveExpression	m_vm_exited_pinfo . user_time + m_vm_alive_pinfo . user_time		5558804	1		+			
ANR	5558826	MemberAccess	m_vm_exited_pinfo . user_time		5558804	0					
ANR	5558827	Identifier	m_vm_exited_pinfo		5558804	0					
ANR	5558828	Identifier	user_time		5558804	1					
ANR	5558829	MemberAccess	m_vm_alive_pinfo . user_time		5558804	1					
ANR	5558830	Identifier	m_vm_alive_pinfo		5558804	0					
ANR	5558831	Identifier	user_time		5558804	1					
ANR	5558832	ExpressionStatement	rss = ( m_vm_exited_pinfo . rssize > m_vm_alive_pinfo . rssize ) ? m_vm_exited_pinfo . rssize : m_vm_alive_pinfo . rssize	1483:1:36576:36693	5558804	3	True				
ANR	5558833	AssignmentExpression	rss = ( m_vm_exited_pinfo . rssize > m_vm_alive_pinfo . rssize ) ? m_vm_exited_pinfo . rssize : m_vm_alive_pinfo . rssize		5558804	0		=			
ANR	5558834	Identifier	rss		5558804	0					
ANR	5558835	ConditionalExpression	( m_vm_exited_pinfo . rssize > m_vm_alive_pinfo . rssize ) ? m_vm_exited_pinfo . rssize : m_vm_alive_pinfo . rssize		5558804	1					
ANR	5558836	Condition	m_vm_exited_pinfo . rssize > m_vm_alive_pinfo . rssize		5558804	0					
ANR	5558837	RelationalExpression	m_vm_exited_pinfo . rssize > m_vm_alive_pinfo . rssize		5558804	0		>			
ANR	5558838	MemberAccess	m_vm_exited_pinfo . rssize		5558804	0					
ANR	5558839	Identifier	m_vm_exited_pinfo		5558804	0					
ANR	5558840	Identifier	rssize		5558804	1					
ANR	5558841	MemberAccess	m_vm_alive_pinfo . rssize		5558804	1					
ANR	5558842	Identifier	m_vm_alive_pinfo		5558804	0					
ANR	5558843	Identifier	rssize		5558804	1					
ANR	5558844	MemberAccess	m_vm_exited_pinfo . rssize		5558804	1					
ANR	5558845	Identifier	m_vm_exited_pinfo		5558804	0					
ANR	5558846	Identifier	rssize		5558804	1					
ANR	5558847	MemberAccess	m_vm_alive_pinfo . rssize		5558804	2					
ANR	5558848	Identifier	m_vm_alive_pinfo		5558804	0					
ANR	5558849	Identifier	rssize		5558804	1					
ANR	5558850	ExpressionStatement	pss = ( m_vm_exited_pinfo . pssize > m_vm_alive_pinfo . pssize ) ? m_vm_exited_pinfo . pssize : m_vm_alive_pinfo . pssize	1487:1:36710:36827	5558804	4	True				
ANR	5558851	AssignmentExpression	pss = ( m_vm_exited_pinfo . pssize > m_vm_alive_pinfo . pssize ) ? m_vm_exited_pinfo . pssize : m_vm_alive_pinfo . pssize		5558804	0		=			
ANR	5558852	Identifier	pss		5558804	0					
ANR	5558853	ConditionalExpression	( m_vm_exited_pinfo . pssize > m_vm_alive_pinfo . pssize ) ? m_vm_exited_pinfo . pssize : m_vm_alive_pinfo . pssize		5558804	1					
ANR	5558854	Condition	m_vm_exited_pinfo . pssize > m_vm_alive_pinfo . pssize		5558804	0					
ANR	5558855	RelationalExpression	m_vm_exited_pinfo . pssize > m_vm_alive_pinfo . pssize		5558804	0		>			
ANR	5558856	MemberAccess	m_vm_exited_pinfo . pssize		5558804	0					
ANR	5558857	Identifier	m_vm_exited_pinfo		5558804	0					
ANR	5558858	Identifier	pssize		5558804	1					
ANR	5558859	MemberAccess	m_vm_alive_pinfo . pssize		5558804	1					
ANR	5558860	Identifier	m_vm_alive_pinfo		5558804	0					
ANR	5558861	Identifier	pssize		5558804	1					
ANR	5558862	MemberAccess	m_vm_exited_pinfo . pssize		5558804	1					
ANR	5558863	Identifier	m_vm_exited_pinfo		5558804	0					
ANR	5558864	Identifier	pssize		5558804	1					
ANR	5558865	MemberAccess	m_vm_alive_pinfo . pssize		5558804	2					
ANR	5558866	Identifier	m_vm_alive_pinfo		5558804	0					
ANR	5558867	Identifier	pssize		5558804	1					
ANR	5558868	ExpressionStatement	pss_available = m_vm_exited_pinfo . pssize_available || m_vm_alive_pinfo . pssize_available	1489:1:36830:36917	5558804	5	True				
ANR	5558869	AssignmentExpression	pss_available = m_vm_exited_pinfo . pssize_available || m_vm_alive_pinfo . pssize_available		5558804	0		=			
ANR	5558870	Identifier	pss_available		5558804	0					
ANR	5558871	OrExpression	m_vm_exited_pinfo . pssize_available || m_vm_alive_pinfo . pssize_available		5558804	1		||			
ANR	5558872	MemberAccess	m_vm_exited_pinfo . pssize_available		5558804	0					
ANR	5558873	Identifier	m_vm_exited_pinfo		5558804	0					
ANR	5558874	Identifier	pssize_available		5558804	1					
ANR	5558875	MemberAccess	m_vm_alive_pinfo . pssize_available		5558804	1					
ANR	5558876	Identifier	m_vm_alive_pinfo		5558804	0					
ANR	5558877	Identifier	pssize_available		5558804	1					
ANR	5558878	ExpressionStatement	max_image = ( m_vm_exited_pinfo . rssize > m_vm_alive_pinfo . rssize ) ? m_vm_exited_pinfo . rssize : m_vm_alive_pinfo . rssize	1496:1:36987:37107	5558804	6	True				
ANR	5558879	AssignmentExpression	max_image = ( m_vm_exited_pinfo . rssize > m_vm_alive_pinfo . rssize ) ? m_vm_exited_pinfo . rssize : m_vm_alive_pinfo . rssize		5558804	0		=			
ANR	5558880	Identifier	max_image		5558804	0					
ANR	5558881	ConditionalExpression	( m_vm_exited_pinfo . rssize > m_vm_alive_pinfo . rssize ) ? m_vm_exited_pinfo . rssize : m_vm_alive_pinfo . rssize		5558804	1					
ANR	5558882	Condition	m_vm_exited_pinfo . rssize > m_vm_alive_pinfo . rssize		5558804	0					
ANR	5558883	RelationalExpression	m_vm_exited_pinfo . rssize > m_vm_alive_pinfo . rssize		5558804	0		>			
ANR	5558884	MemberAccess	m_vm_exited_pinfo . rssize		5558804	0					
ANR	5558885	Identifier	m_vm_exited_pinfo		5558804	0					
ANR	5558886	Identifier	rssize		5558804	1					
ANR	5558887	MemberAccess	m_vm_alive_pinfo . rssize		5558804	1					
ANR	5558888	Identifier	m_vm_alive_pinfo		5558804	0					
ANR	5558889	Identifier	rssize		5558804	1					
ANR	5558890	MemberAccess	m_vm_exited_pinfo . rssize		5558804	1					
ANR	5558891	Identifier	m_vm_exited_pinfo		5558804	0					
ANR	5558892	Identifier	rssize		5558804	1					
ANR	5558893	MemberAccess	m_vm_alive_pinfo . rssize		5558804	2					
ANR	5558894	Identifier	m_vm_alive_pinfo		5558804	0					
ANR	5558895	Identifier	rssize		5558804	1					
ANR	5558896	ReturnType	void		5558804	1					
ANR	5558897	Identifier	VMProc :: getUsageOfVM		5558804	2					
ANR	5558898	ParameterList	"long & sys_time , long & user_time , unsigned long & max_image , unsigned long & rss , unsigned long & pss , bool & pss_available"		5558804	3					
ANR	5558899	Parameter	long & sys_time	1477:21:36293:36306	5558804	0	True				
ANR	5558900	ParameterType	long &		5558804	0					
ANR	5558901	Identifier	sys_time		5558804	1					
ANR	5558902	Parameter	long & user_time	1477:37:36309:36323	5558804	1	True				
ANR	5558903	ParameterType	long &		5558804	0					
ANR	5558904	Identifier	user_time		5558804	1					
ANR	5558905	Parameter	unsigned long & max_image	1477:54:36326:36349	5558804	2	True				
ANR	5558906	ParameterType	unsigned long &		5558804	0					
ANR	5558907	Identifier	max_image		5558804	1					
ANR	5558908	Parameter	unsigned long & rss	1477:80:36352:36369	5558804	3	True				
ANR	5558909	ParameterType	unsigned long &		5558804	0					
ANR	5558910	Identifier	rss		5558804	1					
ANR	5558911	Parameter	unsigned long & pss	1477:100:36372:36389	5558804	4	True				
ANR	5558912	ParameterType	unsigned long &		5558804	0					
ANR	5558913	Identifier	pss		5558804	1					
ANR	5558914	Parameter	bool & pss_available	1477:120:36392:36410	5558804	5	True				
ANR	5558915	ParameterType	bool &		5558804	0					
ANR	5558916	Identifier	pss_available		5558804	1					
ANR	5558917	CFGEntryNode	ENTRY		5558804		True				
ANR	5558918	CFGExitNode	EXIT		5558804		True				
ANR	5558919	Symbol	pss_available		5558804						
ANR	5558920	Symbol	m_vm_alive_pinfo . pssize		5558804						
ANR	5558921	Symbol	m_vm_exited_pinfo . pssize		5558804						
ANR	5558922	Symbol	m_vm_exited_pinfo . user_time		5558804						
ANR	5558923	Symbol	m_vm_alive_pinfo . rssize		5558804						
ANR	5558924	Symbol	m_vm_alive_pinfo		5558804						
ANR	5558925	Symbol	pss		5558804						
ANR	5558926	Symbol	m_vm_exited_pinfo . sys_time		5558804						
ANR	5558927	Symbol	m_vm_alive_pinfo . sys_time		5558804						
ANR	5558928	Symbol	rss		5558804						
ANR	5558929	Symbol	sys_time		5558804						
ANR	5558930	Symbol	max_image		5558804						
ANR	5558931	Symbol	m_vm_alive_pinfo . user_time		5558804						
ANR	5558932	Symbol	m_vm_exited_pinfo . rssize		5558804						
ANR	5558933	Symbol	m_vm_alive_pinfo . pssize_available		5558804						
ANR	5558934	Symbol	user_time		5558804						
ANR	5558935	Symbol	m_vm_exited_pinfo		5558804						
ANR	5558936	Symbol	m_vm_exited_pinfo . pssize_available		5558804						
ANR	5558937	Function	VMProc :: killProcessForVM	1504:0:37252:37449							
ANR	5558938	FunctionDef	VMProc :: killProcessForVM ()		5558937	0					
ANR	5558939	CompoundStatement		1506:0:37284:37449	5558937	0					
ANR	5558940	IfStatement	if ( m_vm_pid > 0 )		5558937	0					
ANR	5558941	Condition	m_vm_pid > 0	1507:5:37291:37302	5558937	0	True				
ANR	5558942	RelationalExpression	m_vm_pid > 0		5558937	0		>			
ANR	5558943	Identifier	m_vm_pid		5558937	0					
ANR	5558944	PrimaryExpression	0		5558937	1					
ANR	5558945	CompoundStatement		2:20:21:21	5558937	1					
ANR	5558946	ExpressionStatement	updateUsageOfVM ( )	1508:2:37310:37327	5558937	0	True				
ANR	5558947	CallExpression	updateUsageOfVM ( )		5558937	0					
ANR	5558948	Callee	updateUsageOfVM		5558937	0					
ANR	5558949	Identifier	updateUsageOfVM		5558937	0					
ANR	5558950	ArgumentList			5558937	1					
ANR	5558951	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Sending SIGKILL to process for VM\\n"" )"	1509:2:37331:37389	5558937	1	True				
ANR	5558952	CallExpression	"dprintf ( D_FULLDEBUG , ""Sending SIGKILL to process for VM\\n"" )"		5558937	0					
ANR	5558953	Callee	dprintf		5558937	0					
ANR	5558954	Identifier	dprintf		5558937	0					
ANR	5558955	ArgumentList	D_FULLDEBUG		5558937	1					
ANR	5558956	Argument	D_FULLDEBUG		5558937	0					
ANR	5558957	Identifier	D_FULLDEBUG		5558937	0					
ANR	5558958	Argument	"""Sending SIGKILL to process for VM\\n"""		5558937	1					
ANR	5558959	PrimaryExpression	"""Sending SIGKILL to process for VM\\n"""		5558937	0					
ANR	5558960	ExpressionStatement	"daemonCore -> Send_Signal ( m_vm_pid , SIGKILL )"	1510:2:37393:37435	5558937	2	True				
ANR	5558961	CallExpression	"daemonCore -> Send_Signal ( m_vm_pid , SIGKILL )"		5558937	0					
ANR	5558962	Callee	daemonCore -> Send_Signal		5558937	0					
ANR	5558963	PtrMemberAccess	daemonCore -> Send_Signal		5558937	0					
ANR	5558964	Identifier	daemonCore		5558937	0					
ANR	5558965	Identifier	Send_Signal		5558937	1					
ANR	5558966	ArgumentList	m_vm_pid		5558937	1					
ANR	5558967	Argument	m_vm_pid		5558937	0					
ANR	5558968	Identifier	m_vm_pid		5558937	0					
ANR	5558969	Argument	SIGKILL		5558937	1					
ANR	5558970	Identifier	SIGKILL		5558937	0					
ANR	5558971	ReturnStatement	return ;	1512:1:37441:37447	5558937	1	True				
ANR	5558972	ReturnType	void		5558937	1					
ANR	5558973	Identifier	VMProc :: killProcessForVM		5558937	2					
ANR	5558974	ParameterList			5558937	3					
ANR	5558975	CFGEntryNode	ENTRY		5558937		True				
ANR	5558976	CFGExitNode	EXIT		5558937		True				
ANR	5558977	Symbol	daemonCore		5558937						
ANR	5558978	Symbol	D_FULLDEBUG		5558937						
ANR	5558979	Symbol	m_vm_pid		5558937						
ANR	5558980	Symbol	SIGKILL		5558937						
ANR	5558981	Function	VMProc :: vm_status_error	1515:0:37452:38023							
ANR	5558982	FunctionDef	VMProc :: vm_status_error ()		5558981	0					
ANR	5558983	CompoundStatement		1517:0:37483:38023	5558981	0					
ANR	5558984	ExpressionStatement	m_status_error_count ++	1522:1:37694:37716	5558981	0	True				
ANR	5558985	PostIncDecOperationExpression	m_status_error_count ++		5558981	0					
ANR	5558986	Identifier	m_status_error_count		5558981	0					
ANR	5558987	IncDec	++		5558981	1					
ANR	5558988	IfStatement	if ( m_status_error_count >= m_vmstatus_max_error_cnt )		5558981	1					
ANR	5558989	Condition	m_status_error_count >= m_vmstatus_max_error_cnt	1523:5:37723:37770	5558981	0	True				
ANR	5558990	RelationalExpression	m_status_error_count >= m_vmstatus_max_error_cnt		5558981	0		>=			
ANR	5558991	Identifier	m_status_error_count		5558981	0					
ANR	5558992	Identifier	m_vmstatus_max_error_cnt		5558981	1					
ANR	5558993	CompoundStatement		7:56:290:290	5558981	1					
ANR	5558994	IfStatement	if ( m_vmgahp )		5558981	0					
ANR	5558995	Condition	m_vmgahp	1524:6:37782:37789	5558981	0	True				
ANR	5558996	Identifier	m_vmgahp		5558981	0					
ANR	5558997	CompoundStatement		8:17:309:309	5558981	1					
ANR	5558998	ExpressionStatement	m_vmgahp -> printSystemErrorMsg ( )	1525:3:37798:37829	5558981	0	True				
ANR	5558999	CallExpression	m_vmgahp -> printSystemErrorMsg ( )		5558981	0					
ANR	5559000	Callee	m_vmgahp -> printSystemErrorMsg		5558981	0					
ANR	5559001	PtrMemberAccess	m_vmgahp -> printSystemErrorMsg		5558981	0					
ANR	5559002	Identifier	m_vmgahp		5558981	0					
ANR	5559003	Identifier	printSystemErrorMsg		5558981	1					
ANR	5559004	ArgumentList			5558981	1					
ANR	5559005	Statement	dprintf	1528:2:37838:37844	5558981	1	True				
ANR	5559006	Statement	(	1528:9:37845:37845	5558981	2	True				
ANR	5559007	Statement	D_ALWAYS	1528:10:37846:37853	5558981	3	True				
ANR	5559008	Statement	","	1528:18:37854:37854	5558981	4	True				
ANR	5559009	Statement	"""Repeated attempts to receive valid VM status """	1528:20:37856:37902	5558981	5	True				
ANR	5559010	Statement	"""failed up to %d times\\n"""	1529:4:37908:37932	5558981	6	True				
ANR	5559011	Statement	","	1529:29:37933:37933	5558981	7	True				
ANR	5559012	Statement	m_vmstatus_max_error_cnt	1529:31:37935:37958	5558981	8	True				
ANR	5559013	Statement	)	1529:55:37959:37959	5558981	9	True				
ANR	5559014	ExpressionStatement		1529:56:37960:37960	5558981	10	True				
ANR	5559015	ExpressionStatement	internalVMGahpError ( )	1531:2:37988:38009	5558981	11	True				
ANR	5559016	CallExpression	internalVMGahpError ( )		5558981	0					
ANR	5559017	Callee	internalVMGahpError		5558981	0					
ANR	5559018	Identifier	internalVMGahpError		5558981	0					
ANR	5559019	ArgumentList			5558981	1					
ANR	5559020	ReturnStatement	return ;	1533:1:38015:38021	5558981	2	True				
ANR	5559021	ReturnType	void		5558981	1					
ANR	5559022	Identifier	VMProc :: vm_status_error		5558981	2					
ANR	5559023	ParameterList			5558981	3					
ANR	5559024	CFGEntryNode	ENTRY		5558981		True				
ANR	5559025	CFGExitNode	EXIT		5558981		True				
ANR	5559026	Symbol	m_status_error_count		5558981						
ANR	5559027	Symbol	m_vmgahp		5558981						
ANR	5559028	Symbol	m_vmstatus_max_error_cnt		5558981						
