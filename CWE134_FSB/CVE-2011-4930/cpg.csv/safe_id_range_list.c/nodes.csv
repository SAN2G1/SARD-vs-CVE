command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2202799	File	data/converged/CVE-2011-4930_htcondor/safe_id_range_list.c								
ANR	2202800	DeclStmt									
ANR	2202801	Decl							const id_t	const id_t	safe_err_id
ANR	2202802	ClassDef	safe_id_range_list_elem	59:8:1481:1580							
ANR	2202803	DeclStmt									
ANR	2202804	Decl							id_t	id_t	min_value
ANR	2202805	DeclStmt									
ANR	2202806	Decl							id_t	id_t	max_value
ANR	2202807	DeclStmt									
ANR	2202808	Decl							safe_id_range_list_elem	safe_id_range_list_elem	safe_id_range_list_elem
ANR	2202809	Function	safe_init_id_range_list	85:0:1997:2329							
ANR	2202810	FunctionDef	safe_init_id_range_list (safe_id_range_list * list)		2202809	0					
ANR	2202811	CompoundStatement		86:0:2051:2329	2202809	0					
ANR	2202812	IfStatement	if ( list == NULL )		2202809	0					
ANR	2202813	Condition	list == NULL	87:8:2061:2072	2202809	0	True				
ANR	2202814	EqualityExpression	list == NULL		2202809	0		==			
ANR	2202815	Identifier	list		2202809	0					
ANR	2202816	Identifier	NULL		2202809	1					
ANR	2202817	CompoundStatement		2:23:24:24	2202809	1					
ANR	2202818	ExpressionStatement	errno = EINVAL	88:1:2079:2093	2202809	0	True				
ANR	2202819	AssignmentExpression	errno = EINVAL		2202809	0		=			
ANR	2202820	Identifier	errno		2202809	0					
ANR	2202821	Identifier	EINVAL		2202809	1					
ANR	2202822	ReturnStatement	return - 1 ;	89:1:2096:2105	2202809	1	True				
ANR	2202823	UnaryOperationExpression	- 1		2202809	0					
ANR	2202824	UnaryOperator	-		2202809	0					
ANR	2202825	PrimaryExpression	1		2202809	1					
ANR	2202826	ExpressionStatement	list -> count = 0	92:4:2118:2133	2202809	1	True				
ANR	2202827	AssignmentExpression	list -> count = 0		2202809	0		=			
ANR	2202828	PtrMemberAccess	list -> count		2202809	0					
ANR	2202829	Identifier	list		2202809	0					
ANR	2202830	Identifier	count		2202809	1					
ANR	2202831	PrimaryExpression	0		2202809	1					
ANR	2202832	ExpressionStatement	list -> capacity = 10	93:4:2139:2158	2202809	2	True				
ANR	2202833	AssignmentExpression	list -> capacity = 10		2202809	0		=			
ANR	2202834	PtrMemberAccess	list -> capacity		2202809	0					
ANR	2202835	Identifier	list		2202809	0					
ANR	2202836	Identifier	capacity		2202809	1					
ANR	2202837	PrimaryExpression	10		2202809	1					
ANR	2202838	ExpressionStatement	list -> list = ( safe_id_range_list_elem * ) malloc ( list -> capacity * sizeof ( list -> list [ 0 ] ) )	94:4:2164:2249	2202809	3	True				
ANR	2202839	AssignmentExpression	list -> list = ( safe_id_range_list_elem * ) malloc ( list -> capacity * sizeof ( list -> list [ 0 ] ) )		2202809	0		=			
ANR	2202840	PtrMemberAccess	list -> list		2202809	0					
ANR	2202841	Identifier	list		2202809	0					
ANR	2202842	Identifier	list		2202809	1					
ANR	2202843	CastExpression	( safe_id_range_list_elem * ) malloc ( list -> capacity * sizeof ( list -> list [ 0 ] ) )		2202809	1					
ANR	2202844	CastTarget	safe_id_range_list_elem *		2202809	0					
ANR	2202845	CallExpression	malloc ( list -> capacity * sizeof ( list -> list [ 0 ] ) )		2202809	1					
ANR	2202846	Callee	malloc		2202809	0					
ANR	2202847	Identifier	malloc		2202809	0					
ANR	2202848	ArgumentList	list -> capacity * sizeof ( list -> list [ 0 ] )		2202809	1					
ANR	2202849	Argument	list -> capacity * sizeof ( list -> list [ 0 ] )		2202809	0					
ANR	2202850	MultiplicativeExpression	list -> capacity * sizeof ( list -> list [ 0 ] )		2202809	0		*			
ANR	2202851	PtrMemberAccess	list -> capacity		2202809	0					
ANR	2202852	Identifier	list		2202809	0					
ANR	2202853	Identifier	capacity		2202809	1					
ANR	2202854	SizeofExpression	sizeof ( list -> list [ 0 ] )		2202809	1					
ANR	2202855	Sizeof	sizeof		2202809	0					
ANR	2202856	ArrayIndexing	list -> list [ 0 ]		2202809	1					
ANR	2202857	PtrMemberAccess	list -> list		2202809	0					
ANR	2202858	Identifier	list		2202809	0					
ANR	2202859	Identifier	list		2202809	1					
ANR	2202860	PrimaryExpression	0		2202809	1					
ANR	2202861	IfStatement	if ( list -> list == 0 )		2202809	4					
ANR	2202862	Condition	list -> list == 0	95:8:2259:2273	2202809	0	True				
ANR	2202863	EqualityExpression	list -> list == 0		2202809	0		==			
ANR	2202864	PtrMemberAccess	list -> list		2202809	0					
ANR	2202865	Identifier	list		2202809	0					
ANR	2202866	Identifier	list		2202809	1					
ANR	2202867	PrimaryExpression	0		2202809	1					
ANR	2202868	CompoundStatement		10:26:225:225	2202809	1					
ANR	2202869	ExpressionStatement	errno = ENOMEM	96:1:2280:2294	2202809	0	True				
ANR	2202870	AssignmentExpression	errno = ENOMEM		2202809	0		=			
ANR	2202871	Identifier	errno		2202809	0					
ANR	2202872	Identifier	ENOMEM		2202809	1					
ANR	2202873	ReturnStatement	return - 1 ;	97:1:2297:2306	2202809	1	True				
ANR	2202874	UnaryOperationExpression	- 1		2202809	0					
ANR	2202875	UnaryOperator	-		2202809	0					
ANR	2202876	PrimaryExpression	1		2202809	1					
ANR	2202877	ReturnStatement	return 0 ;	100:4:2319:2327	2202809	5	True				
ANR	2202878	PrimaryExpression	0		2202809	0					
ANR	2202879	ReturnType	int		2202809	1					
ANR	2202880	Identifier	safe_init_id_range_list		2202809	2					
ANR	2202881	ParameterList	safe_id_range_list * list		2202809	3					
ANR	2202882	Parameter	safe_id_range_list * list	85:28:2025:2048	2202809	0	True				
ANR	2202883	ParameterType	safe_id_range_list *		2202809	0					
ANR	2202884	Identifier	list		2202809	1					
ANR	2202885	CFGEntryNode	ENTRY		2202809		True				
ANR	2202886	CFGExitNode	EXIT		2202809		True				
ANR	2202887	Symbol	EINVAL		2202809						
ANR	2202888	Symbol	malloc		2202809						
ANR	2202889	Symbol	ENOMEM		2202809						
ANR	2202890	Symbol	errno		2202809						
ANR	2202891	Symbol	* list -> list		2202809						
ANR	2202892	Symbol	NULL		2202809						
ANR	2202893	Symbol	* * list		2202809						
ANR	2202894	Symbol	list -> list		2202809						
ANR	2202895	Symbol	* list		2202809						
ANR	2202896	Symbol	list -> capacity		2202809						
ANR	2202897	Symbol	list		2202809						
ANR	2202898	Symbol	list -> count		2202809						
ANR	2202899	Function	safe_add_id_range_to_list	119:0:2705:3396							
ANR	2202900	FunctionDef	"safe_add_id_range_to_list (safe_id_range_list * list , id_t min_id , id_t max_id)"		2202899	0					
ANR	2202901	CompoundStatement		120:0:2787:3396	2202899	0					
ANR	2202902	IfStatement	if ( list == NULL || min_id > max_id )		2202899	0					
ANR	2202903	Condition	list == NULL || min_id > max_id	121:8:2797:2827	2202899	0	True				
ANR	2202904	OrExpression	list == NULL || min_id > max_id		2202899	0		||			
ANR	2202905	EqualityExpression	list == NULL		2202899	0		==			
ANR	2202906	Identifier	list		2202899	0					
ANR	2202907	Identifier	NULL		2202899	1					
ANR	2202908	RelationalExpression	min_id > max_id		2202899	1		>			
ANR	2202909	Identifier	min_id		2202899	0					
ANR	2202910	Identifier	max_id		2202899	1					
ANR	2202911	CompoundStatement		2:42:43:43	2202899	1					
ANR	2202912	ExpressionStatement	errno = EINVAL	122:1:2834:2848	2202899	0	True				
ANR	2202913	AssignmentExpression	errno = EINVAL		2202899	0		=			
ANR	2202914	Identifier	errno		2202899	0					
ANR	2202915	Identifier	EINVAL		2202899	1					
ANR	2202916	ReturnStatement	return - 1 ;	123:1:2851:2860	2202899	1	True				
ANR	2202917	UnaryOperationExpression	- 1		2202899	0					
ANR	2202918	UnaryOperator	-		2202899	0					
ANR	2202919	PrimaryExpression	1		2202899	1					
ANR	2202920	IfStatement	if ( list -> count == list -> capacity )		2202899	1					
ANR	2202921	Condition	list -> count == list -> capacity	126:8:2877:2905	2202899	0	True				
ANR	2202922	EqualityExpression	list -> count == list -> capacity		2202899	0		==			
ANR	2202923	PtrMemberAccess	list -> count		2202899	0					
ANR	2202924	Identifier	list		2202899	0					
ANR	2202925	Identifier	count		2202899	1					
ANR	2202926	PtrMemberAccess	list -> capacity		2202899	1					
ANR	2202927	Identifier	list		2202899	0					
ANR	2202928	Identifier	capacity		2202899	1					
ANR	2202929	CompoundStatement		9:1:178:282	2202899	1					
ANR	2202930	IdentifierDeclStatement	size_t new_capacity = 10 + 11 * list -> capacity / 10 ;	127:1:2912:2963	2202899	0	True				
ANR	2202931	IdentifierDecl	new_capacity = 10 + 11 * list -> capacity / 10		2202899	0					
ANR	2202932	IdentifierDeclType	size_t		2202899	0					
ANR	2202933	Identifier	new_capacity		2202899	1					
ANR	2202934	AssignmentExpression	new_capacity = 10 + 11 * list -> capacity / 10		2202899	2		=			
ANR	2202935	Identifier	new_capacity		2202899	0					
ANR	2202936	AdditiveExpression	10 + 11 * list -> capacity / 10		2202899	1		+			
ANR	2202937	PrimaryExpression	10		2202899	0					
ANR	2202938	MultiplicativeExpression	11 * list -> capacity / 10		2202899	1		*			
ANR	2202939	PrimaryExpression	11		2202899	0					
ANR	2202940	MultiplicativeExpression	list -> capacity / 10		2202899	1		/			
ANR	2202941	PtrMemberAccess	list -> capacity		2202899	0					
ANR	2202942	Identifier	list		2202899	0					
ANR	2202943	Identifier	capacity		2202899	1					
ANR	2202944	PrimaryExpression	10		2202899	1					
ANR	2202945	IdentifierDeclStatement	safe_id_range_list_elem * new_list = ( safe_id_range_list_elem * ) malloc ( new_capacity * sizeof ( new_list [ 0 ] ) ) ;	128:1:2966:3070	2202899	1	True				
ANR	2202946	IdentifierDecl	* new_list = ( safe_id_range_list_elem * ) malloc ( new_capacity * sizeof ( new_list [ 0 ] ) )		2202899	0					
ANR	2202947	IdentifierDeclType	safe_id_range_list_elem *		2202899	0					
ANR	2202948	Identifier	new_list		2202899	1					
ANR	2202949	AssignmentExpression	* new_list = ( safe_id_range_list_elem * ) malloc ( new_capacity * sizeof ( new_list [ 0 ] ) )		2202899	2		=			
ANR	2202950	Identifier	new_list		2202899	0					
ANR	2202951	CastExpression	( safe_id_range_list_elem * ) malloc ( new_capacity * sizeof ( new_list [ 0 ] ) )		2202899	1					
ANR	2202952	CastTarget	safe_id_range_list_elem *		2202899	0					
ANR	2202953	CallExpression	malloc ( new_capacity * sizeof ( new_list [ 0 ] ) )		2202899	1					
ANR	2202954	Callee	malloc		2202899	0					
ANR	2202955	Identifier	malloc		2202899	0					
ANR	2202956	ArgumentList	new_capacity * sizeof ( new_list [ 0 ] )		2202899	1					
ANR	2202957	Argument	new_capacity * sizeof ( new_list [ 0 ] )		2202899	0					
ANR	2202958	MultiplicativeExpression	new_capacity * sizeof ( new_list [ 0 ] )		2202899	0		*			
ANR	2202959	Identifier	new_capacity		2202899	0					
ANR	2202960	SizeofExpression	sizeof ( new_list [ 0 ] )		2202899	1					
ANR	2202961	Sizeof	sizeof		2202899	0					
ANR	2202962	ArrayIndexing	new_list [ 0 ]		2202899	1					
ANR	2202963	Identifier	new_list		2202899	0					
ANR	2202964	PrimaryExpression	0		2202899	1					
ANR	2202965	IfStatement	if ( new_list == 0 )		2202899	2					
ANR	2202966	Condition	new_list == 0	129:5:3077:3089	2202899	0	True				
ANR	2202967	EqualityExpression	new_list == 0		2202899	0		==			
ANR	2202968	Identifier	new_list		2202899	0					
ANR	2202969	PrimaryExpression	0		2202899	1					
ANR	2202970	CompoundStatement		10:21:305:305	2202899	1					
ANR	2202971	ExpressionStatement	errno = ENOMEM	130:5:3100:3114	2202899	0	True				
ANR	2202972	AssignmentExpression	errno = ENOMEM		2202899	0		=			
ANR	2202973	Identifier	errno		2202899	0					
ANR	2202974	Identifier	ENOMEM		2202899	1					
ANR	2202975	ReturnStatement	return - 1 ;	131:5:3121:3130	2202899	1	True				
ANR	2202976	UnaryOperationExpression	- 1		2202899	0					
ANR	2202977	UnaryOperator	-		2202899	0					
ANR	2202978	PrimaryExpression	1		2202899	1					
ANR	2202979	ExpressionStatement	"memcpy ( new_list , list -> list , list -> count * sizeof ( new_list [ 0 ] ) )"	133:1:3136:3199	2202899	3	True				
ANR	2202980	CallExpression	"memcpy ( new_list , list -> list , list -> count * sizeof ( new_list [ 0 ] ) )"		2202899	0					
ANR	2202981	Callee	memcpy		2202899	0					
ANR	2202982	Identifier	memcpy		2202899	0					
ANR	2202983	ArgumentList	new_list		2202899	1					
ANR	2202984	Argument	new_list		2202899	0					
ANR	2202985	Identifier	new_list		2202899	0					
ANR	2202986	Argument	list -> list		2202899	1					
ANR	2202987	PtrMemberAccess	list -> list		2202899	0					
ANR	2202988	Identifier	list		2202899	0					
ANR	2202989	Identifier	list		2202899	1					
ANR	2202990	Argument	list -> count * sizeof ( new_list [ 0 ] )		2202899	2					
ANR	2202991	MultiplicativeExpression	list -> count * sizeof ( new_list [ 0 ] )		2202899	0		*			
ANR	2202992	PtrMemberAccess	list -> count		2202899	0					
ANR	2202993	Identifier	list		2202899	0					
ANR	2202994	Identifier	count		2202899	1					
ANR	2202995	SizeofExpression	sizeof ( new_list [ 0 ] )		2202899	1					
ANR	2202996	Sizeof	sizeof		2202899	0					
ANR	2202997	ArrayIndexing	new_list [ 0 ]		2202899	1					
ANR	2202998	Identifier	new_list		2202899	0					
ANR	2202999	PrimaryExpression	0		2202899	1					
ANR	2203000	ExpressionStatement	free ( list -> list )	134:1:3202:3218	2202899	4	True				
ANR	2203001	CallExpression	free ( list -> list )		2202899	0					
ANR	2203002	Callee	free		2202899	0					
ANR	2203003	Identifier	free		2202899	0					
ANR	2203004	ArgumentList	list -> list		2202899	1					
ANR	2203005	Argument	list -> list		2202899	0					
ANR	2203006	PtrMemberAccess	list -> list		2202899	0					
ANR	2203007	Identifier	list		2202899	0					
ANR	2203008	Identifier	list		2202899	1					
ANR	2203009	ExpressionStatement	list -> list = new_list	135:1:3221:3242	2202899	5	True				
ANR	2203010	AssignmentExpression	list -> list = new_list		2202899	0		=			
ANR	2203011	PtrMemberAccess	list -> list		2202899	0					
ANR	2203012	Identifier	list		2202899	0					
ANR	2203013	Identifier	list		2202899	1					
ANR	2203014	Identifier	new_list		2202899	1					
ANR	2203015	ExpressionStatement	list -> capacity = new_capacity	136:1:3245:3274	2202899	6	True				
ANR	2203016	AssignmentExpression	list -> capacity = new_capacity		2202899	0		=			
ANR	2203017	PtrMemberAccess	list -> capacity		2202899	0					
ANR	2203018	Identifier	list		2202899	0					
ANR	2203019	Identifier	capacity		2202899	1					
ANR	2203020	Identifier	new_capacity		2202899	1					
ANR	2203021	ExpressionStatement	list -> list [ list -> count ] . min_value = min_id	139:4:3287:3329	2202899	2	True				
ANR	2203022	AssignmentExpression	list -> list [ list -> count ] . min_value = min_id		2202899	0		=			
ANR	2203023	MemberAccess	list -> list [ list -> count ] . min_value		2202899	0					
ANR	2203024	ArrayIndexing	list -> list [ list -> count ]		2202899	0					
ANR	2203025	PtrMemberAccess	list -> list		2202899	0					
ANR	2203026	Identifier	list		2202899	0					
ANR	2203027	Identifier	list		2202899	1					
ANR	2203028	PtrMemberAccess	list -> count		2202899	1					
ANR	2203029	Identifier	list		2202899	0					
ANR	2203030	Identifier	count		2202899	1					
ANR	2203031	Identifier	min_value		2202899	1					
ANR	2203032	Identifier	min_id		2202899	1					
ANR	2203033	ExpressionStatement	list -> list [ list -> count ++ ] . max_value = max_id	140:4:3335:3379	2202899	3	True				
ANR	2203034	AssignmentExpression	list -> list [ list -> count ++ ] . max_value = max_id		2202899	0		=			
ANR	2203035	MemberAccess	list -> list [ list -> count ++ ] . max_value		2202899	0					
ANR	2203036	ArrayIndexing	list -> list [ list -> count ++ ]		2202899	0					
ANR	2203037	PtrMemberAccess	list -> list		2202899	0					
ANR	2203038	Identifier	list		2202899	0					
ANR	2203039	Identifier	list		2202899	1					
ANR	2203040	PostIncDecOperationExpression	list -> count ++		2202899	1					
ANR	2203041	PtrMemberAccess	list -> count		2202899	0					
ANR	2203042	Identifier	list		2202899	0					
ANR	2203043	Identifier	count		2202899	1					
ANR	2203044	IncDec	++		2202899	1					
ANR	2203045	Identifier	max_value		2202899	1					
ANR	2203046	Identifier	max_id		2202899	1					
ANR	2203047	ReturnStatement	return 0 ;	142:4:3386:3394	2202899	4	True				
ANR	2203048	PrimaryExpression	0		2202899	0					
ANR	2203049	ReturnType	int		2202899	1					
ANR	2203050	Identifier	safe_add_id_range_to_list		2202899	2					
ANR	2203051	ParameterList	"safe_id_range_list * list , id_t min_id , id_t max_id"		2202899	3					
ANR	2203052	Parameter	safe_id_range_list * list	119:30:2735:2758	2202899	0	True				
ANR	2203053	ParameterType	safe_id_range_list *		2202899	0					
ANR	2203054	Identifier	list		2202899	1					
ANR	2203055	Parameter	id_t min_id	119:56:2761:2771	2202899	1	True				
ANR	2203056	ParameterType	id_t		2202899	0					
ANR	2203057	Identifier	min_id		2202899	1					
ANR	2203058	Parameter	id_t max_id	119:69:2774:2784	2202899	2	True				
ANR	2203059	ParameterType	id_t		2202899	0					
ANR	2203060	Identifier	max_id		2202899	1					
ANR	2203061	CFGEntryNode	ENTRY		2202899		True				
ANR	2203062	CFGExitNode	EXIT		2202899		True				
ANR	2203063	Symbol	malloc		2202899						
ANR	2203064	Symbol	ENOMEM		2202899						
ANR	2203065	Symbol	errno		2202899						
ANR	2203066	Symbol	* list -> list		2202899						
ANR	2203067	Symbol	NULL		2202899						
ANR	2203068	Symbol	list -> list [ list -> count ++ ] . max_value		2202899						
ANR	2203069	Symbol	new_list		2202899						
ANR	2203070	Symbol	* list -> count		2202899						
ANR	2203071	Symbol	list		2202899						
ANR	2203072	Symbol	list -> count		2202899						
ANR	2203073	Symbol	EINVAL		2202899						
ANR	2203074	Symbol	list -> list [ list -> count ] . min_value		2202899						
ANR	2203075	Symbol	min_id		2202899						
ANR	2203076	Symbol	* * list		2202899						
ANR	2203077	Symbol	new_capacity		2202899						
ANR	2203078	Symbol	list -> list		2202899						
ANR	2203079	Symbol	* list		2202899						
ANR	2203080	Symbol	max_id		2202899						
ANR	2203081	Symbol	list -> capacity		2202899						
ANR	2203082	Symbol	* new_list		2202899						
ANR	2203083	Function	safe_add_id_to_list	159:0:3708:3821							
ANR	2203084	FunctionDef	"safe_add_id_to_list (safe_id_range_list * list , id_t id)"		2203083	0					
ANR	2203085	CompoundStatement		160:0:3767:3821	2203083	0					
ANR	2203086	ReturnStatement	"return safe_add_id_range_to_list ( list , id , id ) ;"	161:4:3773:3819	2203083	0	True				
ANR	2203087	CallExpression	"safe_add_id_range_to_list ( list , id , id )"		2203083	0					
ANR	2203088	Callee	safe_add_id_range_to_list		2203083	0					
ANR	2203089	Identifier	safe_add_id_range_to_list		2203083	0					
ANR	2203090	ArgumentList	list		2203083	1					
ANR	2203091	Argument	list		2203083	0					
ANR	2203092	Identifier	list		2203083	0					
ANR	2203093	Argument	id		2203083	1					
ANR	2203094	Identifier	id		2203083	0					
ANR	2203095	Argument	id		2203083	2					
ANR	2203096	Identifier	id		2203083	0					
ANR	2203097	ReturnType	int		2203083	1					
ANR	2203098	Identifier	safe_add_id_to_list		2203083	2					
ANR	2203099	ParameterList	"safe_id_range_list * list , id_t id"		2203083	3					
ANR	2203100	Parameter	safe_id_range_list * list	159:24:3732:3755	2203083	0	True				
ANR	2203101	ParameterType	safe_id_range_list *		2203083	0					
ANR	2203102	Identifier	list		2203083	1					
ANR	2203103	Parameter	id_t id	159:50:3758:3764	2203083	1	True				
ANR	2203104	ParameterType	id_t		2203083	0					
ANR	2203105	Identifier	id		2203083	1					
ANR	2203106	CFGEntryNode	ENTRY		2203083		True				
ANR	2203107	CFGExitNode	EXIT		2203083		True				
ANR	2203108	Symbol	id		2203083						
ANR	2203109	Symbol	list		2203083						
ANR	2203110	Symbol	safe_add_id_range_to_list		2203083						
ANR	2203111	Function	safe_destroy_id_range_list	174:0:4024:4229							
ANR	2203112	FunctionDef	safe_destroy_id_range_list (safe_id_range_list * list)		2203111	0					
ANR	2203113	CompoundStatement		175:0:4082:4229	2203111	0					
ANR	2203114	IfStatement	if ( list == NULL )		2203111	0					
ANR	2203115	Condition	list == NULL	176:8:4092:4103	2203111	0	True				
ANR	2203116	EqualityExpression	list == NULL		2203111	0		==			
ANR	2203117	Identifier	list		2203111	0					
ANR	2203118	Identifier	NULL		2203111	1					
ANR	2203119	CompoundStatement		2:23:24:24	2203111	1					
ANR	2203120	ExpressionStatement	errno = EINVAL	177:1:4110:4124	2203111	0	True				
ANR	2203121	AssignmentExpression	errno = EINVAL		2203111	0		=			
ANR	2203122	Identifier	errno		2203111	0					
ANR	2203123	Identifier	EINVAL		2203111	1					
ANR	2203124	ReturnStatement	return ;	178:1:4127:4133	2203111	1	True				
ANR	2203125	ExpressionStatement	list -> capacity = 0	181:4:4146:4164	2203111	1	True				
ANR	2203126	AssignmentExpression	list -> capacity = 0		2203111	0		=			
ANR	2203127	PtrMemberAccess	list -> capacity		2203111	0					
ANR	2203128	Identifier	list		2203111	0					
ANR	2203129	Identifier	capacity		2203111	1					
ANR	2203130	PrimaryExpression	0		2203111	1					
ANR	2203131	ExpressionStatement	list -> count = 0	182:4:4170:4185	2203111	2	True				
ANR	2203132	AssignmentExpression	list -> count = 0		2203111	0		=			
ANR	2203133	PtrMemberAccess	list -> count		2203111	0					
ANR	2203134	Identifier	list		2203111	0					
ANR	2203135	Identifier	count		2203111	1					
ANR	2203136	PrimaryExpression	0		2203111	1					
ANR	2203137	ExpressionStatement	free ( list -> list )	183:4:4191:4207	2203111	3	True				
ANR	2203138	CallExpression	free ( list -> list )		2203111	0					
ANR	2203139	Callee	free		2203111	0					
ANR	2203140	Identifier	free		2203111	0					
ANR	2203141	ArgumentList	list -> list		2203111	1					
ANR	2203142	Argument	list -> list		2203111	0					
ANR	2203143	PtrMemberAccess	list -> list		2203111	0					
ANR	2203144	Identifier	list		2203111	0					
ANR	2203145	Identifier	list		2203111	1					
ANR	2203146	ExpressionStatement	list -> list = 0	184:4:4213:4227	2203111	4	True				
ANR	2203147	AssignmentExpression	list -> list = 0		2203111	0		=			
ANR	2203148	PtrMemberAccess	list -> list		2203111	0					
ANR	2203149	Identifier	list		2203111	0					
ANR	2203150	Identifier	list		2203111	1					
ANR	2203151	PrimaryExpression	0		2203111	1					
ANR	2203152	ReturnType	void		2203111	1					
ANR	2203153	Identifier	safe_destroy_id_range_list		2203111	2					
ANR	2203154	ParameterList	safe_id_range_list * list		2203111	3					
ANR	2203155	Parameter	safe_id_range_list * list	174:32:4056:4079	2203111	0	True				
ANR	2203156	ParameterType	safe_id_range_list *		2203111	0					
ANR	2203157	Identifier	list		2203111	1					
ANR	2203158	CFGEntryNode	ENTRY		2203111		True				
ANR	2203159	CFGExitNode	EXIT		2203111		True				
ANR	2203160	Symbol	EINVAL		2203111						
ANR	2203161	Symbol	errno		2203111						
ANR	2203162	Symbol	NULL		2203111						
ANR	2203163	Symbol	list -> list		2203111						
ANR	2203164	Symbol	* list		2203111						
ANR	2203165	Symbol	list -> capacity		2203111						
ANR	2203166	Symbol	list		2203111						
ANR	2203167	Symbol	list -> count		2203111						
ANR	2203168	Function	safe_is_id_in_list	201:0:4502:4790							
ANR	2203169	FunctionDef	"safe_is_id_in_list (safe_id_range_list * list , id_t id)"		2203168	0					
ANR	2203170	CompoundStatement		202:0:4560:4790	2203168	0					
ANR	2203171	IdentifierDeclStatement	size_t i ;	203:4:4566:4574	2203168	0	True				
ANR	2203172	IdentifierDecl	i		2203168	0					
ANR	2203173	IdentifierDeclType	size_t		2203168	0					
ANR	2203174	Identifier	i		2203168	1					
ANR	2203175	IfStatement	if ( list == NULL )		2203168	1					
ANR	2203176	Condition	list == NULL	205:8:4585:4596	2203168	0	True				
ANR	2203177	EqualityExpression	list == NULL		2203168	0		==			
ANR	2203178	Identifier	list		2203168	0					
ANR	2203179	Identifier	NULL		2203168	1					
ANR	2203180	CompoundStatement		4:23:39:39	2203168	1					
ANR	2203181	ExpressionStatement	errno = EINVAL	206:1:4603:4617	2203168	0	True				
ANR	2203182	AssignmentExpression	errno = EINVAL		2203168	0		=			
ANR	2203183	Identifier	errno		2203168	0					
ANR	2203184	Identifier	EINVAL		2203168	1					
ANR	2203185	ReturnStatement	return - 1 ;	207:1:4620:4629	2203168	1	True				
ANR	2203186	UnaryOperationExpression	- 1		2203168	0					
ANR	2203187	UnaryOperator	-		2203168	0					
ANR	2203188	PrimaryExpression	1		2203168	1					
ANR	2203189	ForStatement	for ( i = 0 ; i < list -> count ; ++ i )		2203168	2					
ANR	2203190	ForInit	i = 0 ;	210:9:4647:4652	2203168	0	True				
ANR	2203191	AssignmentExpression	i = 0		2203168	0		=			
ANR	2203192	Identifier	i		2203168	0					
ANR	2203193	PrimaryExpression	0		2203168	1					
ANR	2203194	Condition	i < list -> count	210:16:4654:4668	2203168	1	True				
ANR	2203195	RelationalExpression	i < list -> count		2203168	0		<			
ANR	2203196	Identifier	i		2203168	0					
ANR	2203197	PtrMemberAccess	list -> count		2203168	1					
ANR	2203198	Identifier	list		2203168	0					
ANR	2203199	Identifier	count		2203168	1					
ANR	2203200	UnaryExpression	++ i	210:33:4671:4673	2203168	2	True				
ANR	2203201	IncDec	++		2203168	0					
ANR	2203202	Identifier	i		2203168	1					
ANR	2203203	CompoundStatement		9:39:116:116	2203168	3					
ANR	2203204	IfStatement	if ( list -> list [ i ] . min_value <= id && id <= list -> list [ i ] . max_value )		2203168	0					
ANR	2203205	Condition	list -> list [ i ] . min_value <= id && id <= list -> list [ i ] . max_value	211:5:4684:4745	2203168	0	True				
ANR	2203206	AndExpression	list -> list [ i ] . min_value <= id && id <= list -> list [ i ] . max_value		2203168	0		&&			
ANR	2203207	RelationalExpression	list -> list [ i ] . min_value <= id		2203168	0		<=			
ANR	2203208	MemberAccess	list -> list [ i ] . min_value		2203168	0					
ANR	2203209	ArrayIndexing	list -> list [ i ]		2203168	0					
ANR	2203210	PtrMemberAccess	list -> list		2203168	0					
ANR	2203211	Identifier	list		2203168	0					
ANR	2203212	Identifier	list		2203168	1					
ANR	2203213	Identifier	i		2203168	1					
ANR	2203214	Identifier	min_value		2203168	1					
ANR	2203215	Identifier	id		2203168	1					
ANR	2203216	RelationalExpression	id <= list -> list [ i ] . max_value		2203168	1		<=			
ANR	2203217	Identifier	id		2203168	0					
ANR	2203218	MemberAccess	list -> list [ i ] . max_value		2203168	1					
ANR	2203219	ArrayIndexing	list -> list [ i ]		2203168	0					
ANR	2203220	PtrMemberAccess	list -> list		2203168	0					
ANR	2203221	Identifier	list		2203168	0					
ANR	2203222	Identifier	list		2203168	1					
ANR	2203223	Identifier	i		2203168	1					
ANR	2203224	Identifier	max_value		2203168	1					
ANR	2203225	CompoundStatement		10:70:188:188	2203168	1					
ANR	2203226	ReturnStatement	return 1 ;	212:5:4756:4764	2203168	0	True				
ANR	2203227	PrimaryExpression	1		2203168	0					
ANR	2203228	ReturnStatement	return 0 ;	216:4:4780:4788	2203168	3	True				
ANR	2203229	PrimaryExpression	0		2203168	0					
ANR	2203230	ReturnType	int		2203168	1					
ANR	2203231	Identifier	safe_is_id_in_list		2203168	2					
ANR	2203232	ParameterList	"safe_id_range_list * list , id_t id"		2203168	3					
ANR	2203233	Parameter	safe_id_range_list * list	201:23:4525:4548	2203168	0	True				
ANR	2203234	ParameterType	safe_id_range_list *		2203168	0					
ANR	2203235	Identifier	list		2203168	1					
ANR	2203236	Parameter	id_t id	201:49:4551:4557	2203168	1	True				
ANR	2203237	ParameterType	id_t		2203168	0					
ANR	2203238	Identifier	id		2203168	1					
ANR	2203239	CFGEntryNode	ENTRY		2203168		True				
ANR	2203240	CFGExitNode	EXIT		2203168		True				
ANR	2203241	Symbol	errno		2203168						
ANR	2203242	Symbol	* list -> list		2203168						
ANR	2203243	Symbol	NULL		2203168						
ANR	2203244	Symbol	i		2203168						
ANR	2203245	Symbol	list -> list [ i ] . max_value		2203168						
ANR	2203246	Symbol	list		2203168						
ANR	2203247	Symbol	list -> count		2203168						
ANR	2203248	Symbol	EINVAL		2203168						
ANR	2203249	Symbol	* i		2203168						
ANR	2203250	Symbol	* * list		2203168						
ANR	2203251	Symbol	list -> list		2203168						
ANR	2203252	Symbol	* list		2203168						
ANR	2203253	Symbol	list -> list [ i ] . min_value		2203168						
ANR	2203254	Symbol	id		2203168						
ANR	2203255	Function	safe_is_id_list_empty	231:0:5026:5173							
ANR	2203256	FunctionDef	safe_is_id_list_empty (safe_id_range_list * list)		2203255	0					
ANR	2203257	CompoundStatement		231:53:5079:5173	2203255	0					
ANR	2203258	IfStatement	if ( list == NULL )		2203255	0					
ANR	2203259	Condition	list == NULL	232:8:5089:5100	2203255	0	True				
ANR	2203260	EqualityExpression	list == NULL		2203255	0		==			
ANR	2203261	Identifier	list		2203255	0					
ANR	2203262	Identifier	NULL		2203255	1					
ANR	2203263	CompoundStatement		2:23:24:24	2203255	1					
ANR	2203264	ExpressionStatement	errno = EINVAL	233:1:5107:5121	2203255	0	True				
ANR	2203265	AssignmentExpression	errno = EINVAL		2203255	0		=			
ANR	2203266	Identifier	errno		2203255	0					
ANR	2203267	Identifier	EINVAL		2203255	1					
ANR	2203268	ReturnStatement	return - 1 ;	234:1:5124:5133	2203255	1	True				
ANR	2203269	UnaryOperationExpression	- 1		2203255	0					
ANR	2203270	UnaryOperator	-		2203255	0					
ANR	2203271	PrimaryExpression	1		2203255	1					
ANR	2203272	ReturnStatement	return ( list -> count == 0 ) ;	237:4:5146:5171	2203255	1	True				
ANR	2203273	EqualityExpression	list -> count == 0		2203255	0		==			
ANR	2203274	PtrMemberAccess	list -> count		2203255	0					
ANR	2203275	Identifier	list		2203255	0					
ANR	2203276	Identifier	count		2203255	1					
ANR	2203277	PrimaryExpression	0		2203255	1					
ANR	2203278	ReturnType	int		2203255	1					
ANR	2203279	Identifier	safe_is_id_list_empty		2203255	2					
ANR	2203280	ParameterList	safe_id_range_list * list		2203255	3					
ANR	2203281	Parameter	safe_id_range_list * list	231:26:5052:5075	2203255	0	True				
ANR	2203282	ParameterType	safe_id_range_list *		2203255	0					
ANR	2203283	Identifier	list		2203255	1					
ANR	2203284	CFGEntryNode	ENTRY		2203255		True				
ANR	2203285	CFGExitNode	EXIT		2203255		True				
ANR	2203286	Symbol	EINVAL		2203255						
ANR	2203287	Symbol	errno		2203255						
ANR	2203288	Symbol	NULL		2203255						
ANR	2203289	Symbol	* list		2203255						
ANR	2203290	Symbol	list		2203255						
ANR	2203291	Symbol	list -> count		2203255						
ANR	2203292	Function	skip_whitespace_const	261:0:5636:5769							
ANR	2203293	FunctionDef	skip_whitespace_const (const char * s)		2203292	0					
ANR	2203294	CompoundStatement		262:0:5692:5769	2203292	0					
ANR	2203295	WhileStatement	while ( * s && isspace ( ( unsigned char ) * s ) )		2203292	0					
ANR	2203296	Condition	* s && isspace ( ( unsigned char ) * s )	263:11:5705:5736	2203292	0	True				
ANR	2203297	AndExpression	* s && isspace ( ( unsigned char ) * s )		2203292	0		&&			
ANR	2203298	UnaryOperationExpression	* s		2203292	0					
ANR	2203299	UnaryOperator	*		2203292	0					
ANR	2203300	Identifier	s		2203292	1					
ANR	2203301	CallExpression	isspace ( ( unsigned char ) * s )		2203292	1					
ANR	2203302	Callee	isspace		2203292	0					
ANR	2203303	Identifier	isspace		2203292	0					
ANR	2203304	ArgumentList	( unsigned char ) * s		2203292	1					
ANR	2203305	Argument	( unsigned char ) * s		2203292	0					
ANR	2203306	CastExpression	( unsigned char ) * s		2203292	0					
ANR	2203307	CastTarget	unsigned char		2203292	0					
ANR	2203308	UnaryOperationExpression	* s		2203292	1					
ANR	2203309	UnaryOperator	*		2203292	0					
ANR	2203310	Identifier	s		2203292	1					
ANR	2203311	CompoundStatement		2:46:47:47	2203292	1					
ANR	2203312	ExpressionStatement	++ s	264:1:5743:5746	2203292	0	True				
ANR	2203313	UnaryExpression	++ s		2203292	0					
ANR	2203314	IncDec	++		2203292	0					
ANR	2203315	Identifier	s		2203292	1					
ANR	2203316	ReturnStatement	return s ;	267:4:5759:5767	2203292	1	True				
ANR	2203317	Identifier	s		2203292	0					
ANR	2203318	ReturnType	static const char *		2203292	1					
ANR	2203319	Identifier	skip_whitespace_const		2203292	2					
ANR	2203320	ParameterList	const char * s		2203292	3					
ANR	2203321	Parameter	const char * s	261:41:5677:5689	2203292	0	True				
ANR	2203322	ParameterType	const char *		2203292	0					
ANR	2203323	Identifier	s		2203292	1					
ANR	2203324	CFGEntryNode	ENTRY		2203292		True				
ANR	2203325	CFGExitNode	EXIT		2203292		True				
ANR	2203326	Symbol	s		2203292						
ANR	2203327	Symbol	isspace		2203292						
ANR	2203328	Symbol	* s		2203292						
ANR	2203329	Function	name_to_error	280:0:5937:6043							
ANR	2203330	FunctionDef	name_to_error (const char * name)		2203329	0					
ANR	2203331	CompoundStatement		281:0:5981:6043	2203329	0					
ANR	2203332	ExpressionStatement	( void ) name	282:4:5987:5997	2203329	0	True				
ANR	2203333	CastExpression	( void ) name		2203329	0					
ANR	2203334	CastTarget	void		2203329	0					
ANR	2203335	Identifier	name		2203329	1					
ANR	2203336	ExpressionStatement	errno = EINVAL	283:4:6003:6017	2203329	1	True				
ANR	2203337	AssignmentExpression	errno = EINVAL		2203329	0		=			
ANR	2203338	Identifier	errno		2203329	0					
ANR	2203339	Identifier	EINVAL		2203329	1					
ANR	2203340	ReturnStatement	return safe_err_id ;	284:4:6023:6041	2203329	2	True				
ANR	2203341	Identifier	safe_err_id		2203329	0					
ANR	2203342	ReturnType	static id_t		2203329	1					
ANR	2203343	Identifier	name_to_error		2203329	2					
ANR	2203344	ParameterList	const char * name		2203329	3					
ANR	2203345	Parameter	const char * name	280:26:5963:5978	2203329	0	True				
ANR	2203346	ParameterType	const char *		2203329	0					
ANR	2203347	Identifier	name		2203329	1					
ANR	2203348	CFGEntryNode	ENTRY		2203329		True				
ANR	2203349	CFGExitNode	EXIT		2203329		True				
ANR	2203350	Symbol	EINVAL		2203329						
ANR	2203351	Symbol	errno		2203329						
ANR	2203352	Symbol	safe_err_id		2203329						
ANR	2203353	Symbol	name		2203329						
ANR	2203354	Function	name_to_uid	302:0:6573:6785							
ANR	2203355	FunctionDef	name_to_uid (const char * name)		2203354	0					
ANR	2203356	CompoundStatement		303:0:6615:6785	2203354	0					
ANR	2203357	IdentifierDeclStatement	struct passwd * pw = getpwnam ( name ) ;	304:4:6621:6655	2203354	0	True				
ANR	2203358	IdentifierDecl	* pw = getpwnam ( name )		2203354	0					
ANR	2203359	IdentifierDeclType	struct passwd *		2203354	0					
ANR	2203360	Identifier	pw		2203354	1					
ANR	2203361	AssignmentExpression	* pw = getpwnam ( name )		2203354	2		=			
ANR	2203362	Identifier	pw		2203354	0					
ANR	2203363	CallExpression	getpwnam ( name )		2203354	1					
ANR	2203364	Callee	getpwnam		2203354	0					
ANR	2203365	Identifier	getpwnam		2203354	0					
ANR	2203366	ArgumentList	name		2203354	1					
ANR	2203367	Argument	name		2203354	0					
ANR	2203368	Identifier	name		2203354	0					
ANR	2203369	ExpressionStatement	errno = 0	306:4:6662:6671	2203354	1	True				
ANR	2203370	AssignmentExpression	errno = 0		2203354	0		=			
ANR	2203371	Identifier	errno		2203354	0					
ANR	2203372	PrimaryExpression	0		2203354	1					
ANR	2203373	IfStatement	if ( ! pw )		2203354	2					
ANR	2203374	Condition	! pw	308:8:6682:6684	2203354	0	True				
ANR	2203375	UnaryOperationExpression	! pw		2203354	0					
ANR	2203376	UnaryOperator	!		2203354	0					
ANR	2203377	Identifier	pw		2203354	1					
ANR	2203378	CompoundStatement		6:14:72:72	2203354	1					
ANR	2203379	IfStatement	if ( errno == 0 )		2203354	0					
ANR	2203380	Condition	errno == 0	309:5:6695:6704	2203354	0	True				
ANR	2203381	EqualityExpression	errno == 0		2203354	0		==			
ANR	2203382	Identifier	errno		2203354	0					
ANR	2203383	PrimaryExpression	0		2203354	1					
ANR	2203384	CompoundStatement		7:18:92:92	2203354	1					
ANR	2203385	ExpressionStatement	errno = EINVAL	310:5:6715:6729	2203354	0	True				
ANR	2203386	AssignmentExpression	errno = EINVAL		2203354	0		=			
ANR	2203387	Identifier	errno		2203354	0					
ANR	2203388	Identifier	EINVAL		2203354	1					
ANR	2203389	ReturnStatement	return safe_err_id ;	312:1:6735:6753	2203354	1	True				
ANR	2203390	Identifier	safe_err_id		2203354	0					
ANR	2203391	ReturnStatement	return pw -> pw_uid ;	315:4:6766:6783	2203354	3	True				
ANR	2203392	PtrMemberAccess	pw -> pw_uid		2203354	0					
ANR	2203393	Identifier	pw		2203354	0					
ANR	2203394	Identifier	pw_uid		2203354	1					
ANR	2203395	ReturnType	static id_t		2203354	1					
ANR	2203396	Identifier	name_to_uid		2203354	2					
ANR	2203397	ParameterList	const char * name		2203354	3					
ANR	2203398	Parameter	const char * name	302:24:6597:6612	2203354	0	True				
ANR	2203399	ParameterType	const char *		2203354	0					
ANR	2203400	Identifier	name		2203354	1					
ANR	2203401	CFGEntryNode	ENTRY		2203354		True				
ANR	2203402	CFGExitNode	EXIT		2203354		True				
ANR	2203403	Symbol	EINVAL		2203354						
ANR	2203404	Symbol	errno		2203354						
ANR	2203405	Symbol	pw		2203354						
ANR	2203406	Symbol	safe_err_id		2203354						
ANR	2203407	Symbol	name		2203354						
ANR	2203408	Symbol	pw -> pw_uid		2203354						
ANR	2203409	Symbol	* pw		2203354						
ANR	2203410	Symbol	getpwnam		2203354						
ANR	2203411	Function	name_to_gid	333:0:7316:7527							
ANR	2203412	FunctionDef	name_to_gid (const char * name)		2203411	0					
ANR	2203413	CompoundStatement		334:0:7358:7527	2203411	0					
ANR	2203414	IdentifierDeclStatement	struct group * gr = getgrnam ( name ) ;	335:4:7364:7397	2203411	0	True				
ANR	2203415	IdentifierDecl	* gr = getgrnam ( name )		2203411	0					
ANR	2203416	IdentifierDeclType	struct group *		2203411	0					
ANR	2203417	Identifier	gr		2203411	1					
ANR	2203418	AssignmentExpression	* gr = getgrnam ( name )		2203411	2		=			
ANR	2203419	Identifier	gr		2203411	0					
ANR	2203420	CallExpression	getgrnam ( name )		2203411	1					
ANR	2203421	Callee	getgrnam		2203411	0					
ANR	2203422	Identifier	getgrnam		2203411	0					
ANR	2203423	ArgumentList	name		2203411	1					
ANR	2203424	Argument	name		2203411	0					
ANR	2203425	Identifier	name		2203411	0					
ANR	2203426	ExpressionStatement	errno = 0	337:4:7404:7413	2203411	1	True				
ANR	2203427	AssignmentExpression	errno = 0		2203411	0		=			
ANR	2203428	Identifier	errno		2203411	0					
ANR	2203429	PrimaryExpression	0		2203411	1					
ANR	2203430	IfStatement	if ( ! gr )		2203411	2					
ANR	2203431	Condition	! gr	339:8:7424:7426	2203411	0	True				
ANR	2203432	UnaryOperationExpression	! gr		2203411	0					
ANR	2203433	UnaryOperator	!		2203411	0					
ANR	2203434	Identifier	gr		2203411	1					
ANR	2203435	CompoundStatement		6:14:71:71	2203411	1					
ANR	2203436	IfStatement	if ( errno == 0 )		2203411	0					
ANR	2203437	Condition	errno == 0	340:5:7437:7446	2203411	0	True				
ANR	2203438	EqualityExpression	errno == 0		2203411	0		==			
ANR	2203439	Identifier	errno		2203411	0					
ANR	2203440	PrimaryExpression	0		2203411	1					
ANR	2203441	CompoundStatement		7:18:91:91	2203411	1					
ANR	2203442	ExpressionStatement	errno = EINVAL	341:5:7457:7471	2203411	0	True				
ANR	2203443	AssignmentExpression	errno = EINVAL		2203411	0		=			
ANR	2203444	Identifier	errno		2203411	0					
ANR	2203445	Identifier	EINVAL		2203411	1					
ANR	2203446	ReturnStatement	return safe_err_id ;	343:1:7477:7495	2203411	1	True				
ANR	2203447	Identifier	safe_err_id		2203411	0					
ANR	2203448	ReturnStatement	return gr -> gr_gid ;	346:4:7508:7525	2203411	3	True				
ANR	2203449	PtrMemberAccess	gr -> gr_gid		2203411	0					
ANR	2203450	Identifier	gr		2203411	0					
ANR	2203451	Identifier	gr_gid		2203411	1					
ANR	2203452	ReturnType	static id_t		2203411	1					
ANR	2203453	Identifier	name_to_gid		2203411	2					
ANR	2203454	ParameterList	const char * name		2203411	3					
ANR	2203455	Parameter	const char * name	333:24:7340:7355	2203411	0	True				
ANR	2203456	ParameterType	const char *		2203411	0					
ANR	2203457	Identifier	name		2203411	1					
ANR	2203458	CFGEntryNode	ENTRY		2203411		True				
ANR	2203459	CFGExitNode	EXIT		2203411		True				
ANR	2203460	Symbol	EINVAL		2203411						
ANR	2203461	Symbol	errno		2203411						
ANR	2203462	Symbol	* gr		2203411						
ANR	2203463	Symbol	gr -> gr_gid		2203411						
ANR	2203464	Symbol	safe_err_id		2203411						
ANR	2203465	Symbol	name		2203411						
ANR	2203466	Symbol	getgrnam		2203411						
ANR	2203467	Symbol	gr		2203411						
ANR	2203468	DeclStmt									
ANR	2203469	Decl							id_t ( * ) ( const char * )	id_t ( * ) ( const char * )	lookup_func
ANR	2203470	Function	strto_id	386:0:8895:10649							
ANR	2203471	FunctionDef	"strto_id (id_t * id , const char * value , const char * * endptr , lookup_func lookup)"		2203470	0					
ANR	2203472	CompoundStatement		387:0:8985:10649	2203470	0					
ANR	2203473	IdentifierDeclStatement	const char * endp ;	388:4:8991:9007	2203470	0	True				
ANR	2203474	IdentifierDecl	* endp		2203470	0					
ANR	2203475	IdentifierDeclType	const char *		2203470	0					
ANR	2203476	Identifier	endp		2203470	1					
ANR	2203477	IdentifierDeclStatement	const char * id_begin ;	389:4:9013:9033	2203470	1	True				
ANR	2203478	IdentifierDecl	* id_begin		2203470	0					
ANR	2203479	IdentifierDeclType	const char *		2203470	0					
ANR	2203480	Identifier	id_begin		2203470	1					
ANR	2203481	IfStatement	if ( id == NULL || value == NULL || lookup == NULL )		2203470	2					
ANR	2203482	Condition	id == NULL || value == NULL || lookup == NULL	391:8:9044:9088	2203470	0	True				
ANR	2203483	OrExpression	id == NULL || value == NULL || lookup == NULL		2203470	0		||			
ANR	2203484	EqualityExpression	id == NULL		2203470	0		==			
ANR	2203485	Identifier	id		2203470	0					
ANR	2203486	Identifier	NULL		2203470	1					
ANR	2203487	OrExpression	value == NULL || lookup == NULL		2203470	1		||			
ANR	2203488	EqualityExpression	value == NULL		2203470	0		==			
ANR	2203489	Identifier	value		2203470	0					
ANR	2203490	Identifier	NULL		2203470	1					
ANR	2203491	EqualityExpression	lookup == NULL		2203470	1		==			
ANR	2203492	Identifier	lookup		2203470	0					
ANR	2203493	Identifier	NULL		2203470	1					
ANR	2203494	CompoundStatement		5:56:106:106	2203470	1					
ANR	2203495	ExpressionStatement	errno = EINVAL	392:1:9095:9109	2203470	0	True				
ANR	2203496	AssignmentExpression	errno = EINVAL		2203470	0		=			
ANR	2203497	Identifier	errno		2203470	0					
ANR	2203498	Identifier	EINVAL		2203470	1					
ANR	2203499	IfStatement	if ( id )		2203470	1					
ANR	2203500	Condition	id	393:5:9116:9117	2203470	0	True				
ANR	2203501	Identifier	id		2203470	0					
ANR	2203502	CompoundStatement		7:10:135:135	2203470	1					
ANR	2203503	ExpressionStatement	* id = safe_err_id	394:5:9128:9145	2203470	0	True				
ANR	2203504	AssignmentExpression	* id = safe_err_id		2203470	0		=			
ANR	2203505	UnaryOperationExpression	* id		2203470	0					
ANR	2203506	UnaryOperator	*		2203470	0					
ANR	2203507	Identifier	id		2203470	1					
ANR	2203508	Identifier	safe_err_id		2203470	1					
ANR	2203509	ReturnStatement	return - 1 ;	396:1:9151:9160	2203470	2	True				
ANR	2203510	UnaryOperationExpression	- 1		2203470	0					
ANR	2203511	UnaryOperator	-		2203470	0					
ANR	2203512	PrimaryExpression	1		2203470	1					
ANR	2203513	ExpressionStatement	endp = value	399:4:9173:9185	2203470	3	True				
ANR	2203514	AssignmentExpression	endp = value		2203470	0		=			
ANR	2203515	Identifier	endp		2203470	0					
ANR	2203516	Identifier	value		2203470	1					
ANR	2203517	ExpressionStatement	id_begin = skip_whitespace_const ( value )	401:4:9192:9231	2203470	4	True				
ANR	2203518	AssignmentExpression	id_begin = skip_whitespace_const ( value )		2203470	0		=			
ANR	2203519	Identifier	id_begin		2203470	0					
ANR	2203520	CallExpression	skip_whitespace_const ( value )		2203470	1					
ANR	2203521	Callee	skip_whitespace_const		2203470	0					
ANR	2203522	Identifier	skip_whitespace_const		2203470	0					
ANR	2203523	ArgumentList	value		2203470	1					
ANR	2203524	Argument	value		2203470	0					
ANR	2203525	Identifier	value		2203470	0					
ANR	2203526	ExpressionStatement	errno = 0	403:4:9238:9247	2203470	5	True				
ANR	2203527	AssignmentExpression	errno = 0		2203470	0		=			
ANR	2203528	Identifier	errno		2203470	0					
ANR	2203529	PrimaryExpression	0		2203470	1					
ANR	2203530	IfStatement	if ( isdigit ( ( unsigned char ) * id_begin ) )		2203470	6					
ANR	2203531	Condition	isdigit ( ( unsigned char ) * id_begin )	405:8:9258:9290	2203470	0	True				
ANR	2203532	CallExpression	isdigit ( ( unsigned char ) * id_begin )		2203470	0					
ANR	2203533	Callee	isdigit		2203470	0					
ANR	2203534	Identifier	isdigit		2203470	0					
ANR	2203535	ArgumentList	( unsigned char ) * id_begin		2203470	1					
ANR	2203536	Argument	( unsigned char ) * id_begin		2203470	0					
ANR	2203537	CastExpression	( unsigned char ) * id_begin		2203470	0					
ANR	2203538	CastTarget	unsigned char		2203470	0					
ANR	2203539	UnaryOperationExpression	* id_begin		2203470	1					
ANR	2203540	UnaryOperator	*		2203470	0					
ANR	2203541	Identifier	id_begin		2203470	1					
ANR	2203542	CompoundStatement		21:1:353:360	2203470	1					
ANR	2203543	IdentifierDeclStatement	char * e ;	407:1:9339:9346	2203470	0	True				
ANR	2203544	IdentifierDecl	* e		2203470	0					
ANR	2203545	IdentifierDeclType	char *		2203470	0					
ANR	2203546	Identifier	e		2203470	1					
ANR	2203547	ExpressionStatement	"* id = ( id_t ) strtoul ( id_begin , & e , 10 )"	408:1:9349:9386	2203470	1	True				
ANR	2203548	AssignmentExpression	"* id = ( id_t ) strtoul ( id_begin , & e , 10 )"		2203470	0		=			
ANR	2203549	UnaryOperationExpression	* id		2203470	0					
ANR	2203550	UnaryOperator	*		2203470	0					
ANR	2203551	Identifier	id		2203470	1					
ANR	2203552	CastExpression	"( id_t ) strtoul ( id_begin , & e , 10 )"		2203470	1					
ANR	2203553	CastTarget	id_t		2203470	0					
ANR	2203554	CallExpression	"strtoul ( id_begin , & e , 10 )"		2203470	1					
ANR	2203555	Callee	strtoul		2203470	0					
ANR	2203556	Identifier	strtoul		2203470	0					
ANR	2203557	ArgumentList	id_begin		2203470	1					
ANR	2203558	Argument	id_begin		2203470	0					
ANR	2203559	Identifier	id_begin		2203470	0					
ANR	2203560	Argument	& e		2203470	1					
ANR	2203561	UnaryOperationExpression	& e		2203470	0					
ANR	2203562	UnaryOperator	&		2203470	0					
ANR	2203563	Identifier	e		2203470	1					
ANR	2203564	Argument	10		2203470	2					
ANR	2203565	PrimaryExpression	10		2203470	0					
ANR	2203566	ExpressionStatement	endp = e	409:1:9389:9397	2203470	2	True				
ANR	2203567	AssignmentExpression	endp = e		2203470	0		=			
ANR	2203568	Identifier	endp		2203470	0					
ANR	2203569	Identifier	e		2203470	1					
ANR	2203570	ElseStatement	else		2203470	0					
ANR	2203571	IfStatement	if ( * id_begin )		2203470	0					
ANR	2203572	Condition	* id_begin	410:16:9415:9423	2203470	0	True				
ANR	2203573	UnaryOperationExpression	* id_begin		2203470	0					
ANR	2203574	UnaryOperator	*		2203470	0					
ANR	2203575	Identifier	id_begin		2203470	1					
ANR	2203576	CompoundStatement		28:1:537:555	2203470	1					
ANR	2203577	IdentifierDeclStatement	char * id_name ;	412:1:9491:9504	2203470	0	True				
ANR	2203578	IdentifierDecl	* id_name		2203470	0					
ANR	2203579	IdentifierDeclType	char *		2203470	0					
ANR	2203580	Identifier	id_name		2203470	1					
ANR	2203581	IdentifierDeclStatement	size_t id_len ;	413:1:9507:9520	2203470	1	True				
ANR	2203582	IdentifierDecl	id_len		2203470	0					
ANR	2203583	IdentifierDeclType	size_t		2203470	0					
ANR	2203584	Identifier	id_len		2203470	1					
ANR	2203585	IdentifierDeclStatement	char small_buf [ 16 ] ;	414:1:9523:9541	2203470	2	True				
ANR	2203586	IdentifierDecl	small_buf [ 16 ]		2203470	0					
ANR	2203587	IdentifierDeclType	char [ 16 ]		2203470	0					
ANR	2203588	Identifier	small_buf		2203470	1					
ANR	2203589	PrimaryExpression	16		2203470	2					
ANR	2203590	ExpressionStatement	endp = id_begin	417:1:9664:9679	2203470	3	True				
ANR	2203591	AssignmentExpression	endp = id_begin		2203470	0		=			
ANR	2203592	Identifier	endp		2203470	0					
ANR	2203593	Identifier	id_begin		2203470	1					
ANR	2203594	WhileStatement	while ( * endp && ! isspace ( ( unsigned char ) * endp ) && * endp != ':' )		2203470	4					
ANR	2203595	Condition	* endp && ! isspace ( ( unsigned char ) * endp ) && * endp != ':'	418:8:9689:9743	2203470	0	True				
ANR	2203596	AndExpression	* endp && ! isspace ( ( unsigned char ) * endp ) && * endp != ':'		2203470	0		&&			
ANR	2203597	UnaryOperationExpression	* endp		2203470	0					
ANR	2203598	UnaryOperator	*		2203470	0					
ANR	2203599	Identifier	endp		2203470	1					
ANR	2203600	AndExpression	! isspace ( ( unsigned char ) * endp ) && * endp != ':'		2203470	1		&&			
ANR	2203601	UnaryOperationExpression	! isspace ( ( unsigned char ) * endp )		2203470	0					
ANR	2203602	UnaryOperator	!		2203470	0					
ANR	2203603	CallExpression	isspace ( ( unsigned char ) * endp )		2203470	1					
ANR	2203604	Callee	isspace		2203470	0					
ANR	2203605	Identifier	isspace		2203470	0					
ANR	2203606	ArgumentList	( unsigned char ) * endp		2203470	1					
ANR	2203607	Argument	( unsigned char ) * endp		2203470	0					
ANR	2203608	CastExpression	( unsigned char ) * endp		2203470	0					
ANR	2203609	CastTarget	unsigned char		2203470	0					
ANR	2203610	UnaryOperationExpression	* endp		2203470	1					
ANR	2203611	UnaryOperator	*		2203470	0					
ANR	2203612	Identifier	endp		2203470	1					
ANR	2203613	EqualityExpression	* endp != ':'		2203470	1		!=			
ANR	2203614	UnaryOperationExpression	* endp		2203470	0					
ANR	2203615	UnaryOperator	*		2203470	0					
ANR	2203616	Identifier	endp		2203470	1					
ANR	2203617	PrimaryExpression	':'		2203470	1					
ANR	2203618	CompoundStatement		32:66:761:761	2203470	1					
ANR	2203619	ExpressionStatement	++ endp	419:5:9754:9760	2203470	0	True				
ANR	2203620	UnaryExpression	++ endp		2203470	0					
ANR	2203621	IncDec	++		2203470	0					
ANR	2203622	Identifier	endp		2203470	1					
ANR	2203623	ExpressionStatement	id_len = ( size_t ) ( endp - id_begin )	422:1:9767:9801	2203470	5	True				
ANR	2203624	AssignmentExpression	id_len = ( size_t ) ( endp - id_begin )		2203470	0		=			
ANR	2203625	Identifier	id_len		2203470	0					
ANR	2203626	CastExpression	( size_t ) ( endp - id_begin )		2203470	1					
ANR	2203627	CastTarget	size_t		2203470	0					
ANR	2203628	AdditiveExpression	endp - id_begin		2203470	1		-			
ANR	2203629	Identifier	endp		2203470	0					
ANR	2203630	Identifier	id_begin		2203470	1					
ANR	2203631	IfStatement	if ( id_len == 0 )		2203470	6					
ANR	2203632	Condition	id_len == 0	424:5:9809:9819	2203470	0	True				
ANR	2203633	EqualityExpression	id_len == 0		2203470	0		==			
ANR	2203634	Identifier	id_len		2203470	0					
ANR	2203635	PrimaryExpression	0		2203470	1					
ANR	2203636	CompoundStatement		38:19:837:837	2203470	1					
ANR	2203637	ExpressionStatement	errno = EINVAL	425:5:9830:9844	2203470	0	True				
ANR	2203638	AssignmentExpression	errno = EINVAL		2203470	0		=			
ANR	2203639	Identifier	errno		2203470	0					
ANR	2203640	Identifier	EINVAL		2203470	1					
ANR	2203641	ExpressionStatement	* id = safe_err_id	426:5:9851:9868	2203470	1	True				
ANR	2203642	AssignmentExpression	* id = safe_err_id		2203470	0		=			
ANR	2203643	UnaryOperationExpression	* id		2203470	0					
ANR	2203644	UnaryOperator	*		2203470	0					
ANR	2203645	Identifier	id		2203470	1					
ANR	2203646	Identifier	safe_err_id		2203470	1					
ANR	2203647	IfStatement	if ( endptr )		2203470	2					
ANR	2203648	Condition	endptr	427:9:9879:9884	2203470	0	True				
ANR	2203649	Identifier	endptr		2203470	0					
ANR	2203650	CompoundStatement		41:18:902:902	2203470	1					
ANR	2203651	ExpressionStatement	* endptr = endp	428:2:9892:9906	2203470	0	True				
ANR	2203652	AssignmentExpression	* endptr = endp		2203470	0		=			
ANR	2203653	UnaryOperationExpression	* endptr		2203470	0					
ANR	2203654	UnaryOperator	*		2203470	0					
ANR	2203655	Identifier	endptr		2203470	1					
ANR	2203656	Identifier	endp		2203470	1					
ANR	2203657	ReturnStatement	return - 1 ;	430:5:9920:9929	2203470	3	True				
ANR	2203658	UnaryOperationExpression	- 1		2203470	0					
ANR	2203659	UnaryOperator	-		2203470	0					
ANR	2203660	PrimaryExpression	1		2203470	1					
ANR	2203661	ElseStatement	else		2203470	0					
ANR	2203662	IfStatement	if ( id_len < sizeof ( small_buf ) )		2203470	0					
ANR	2203663	Condition	id_len < sizeof ( small_buf )	431:13:9944:9969	2203470	0	True				
ANR	2203664	RelationalExpression	id_len < sizeof ( small_buf )		2203470	0		<			
ANR	2203665	Identifier	id_len		2203470	0					
ANR	2203666	SizeofExpression	sizeof ( small_buf )		2203470	1					
ANR	2203667	Sizeof	sizeof		2203470	0					
ANR	2203668	SizeofOperand	small_buf		2203470	1					
ANR	2203669	CompoundStatement		45:42:987:987	2203470	1					
ANR	2203670	ExpressionStatement	id_name = small_buf	433:5:10020:10039	2203470	0	True				
ANR	2203671	AssignmentExpression	id_name = small_buf		2203470	0		=			
ANR	2203672	Identifier	id_name		2203470	0					
ANR	2203673	Identifier	small_buf		2203470	1					
ANR	2203674	ElseStatement	else		2203470	0					
ANR	2203675	CompoundStatement		48:10:1065:1065	2203470	0					
ANR	2203676	ExpressionStatement	id_name = ( char * ) malloc ( id_len + 1 )	436:5:10118:10153	2203470	0	True				
ANR	2203677	AssignmentExpression	id_name = ( char * ) malloc ( id_len + 1 )		2203470	0		=			
ANR	2203678	Identifier	id_name		2203470	0					
ANR	2203679	CastExpression	( char * ) malloc ( id_len + 1 )		2203470	1					
ANR	2203680	CastTarget	char *		2203470	0					
ANR	2203681	CallExpression	malloc ( id_len + 1 )		2203470	1					
ANR	2203682	Callee	malloc		2203470	0					
ANR	2203683	Identifier	malloc		2203470	0					
ANR	2203684	ArgumentList	id_len + 1		2203470	1					
ANR	2203685	Argument	id_len + 1		2203470	0					
ANR	2203686	AdditiveExpression	id_len + 1		2203470	0		+			
ANR	2203687	Identifier	id_len		2203470	0					
ANR	2203688	PrimaryExpression	1		2203470	1					
ANR	2203689	IfStatement	if ( id_name == NULL )		2203470	1					
ANR	2203690	Condition	id_name == NULL	437:9:10164:10178	2203470	0	True				
ANR	2203691	EqualityExpression	id_name == NULL		2203470	0		==			
ANR	2203692	Identifier	id_name		2203470	0					
ANR	2203693	Identifier	NULL		2203470	1					
ANR	2203694	CompoundStatement		51:27:1196:1196	2203470	1					
ANR	2203695	ExpressionStatement	errno = ENOMEM	438:2:10186:10200	2203470	0	True				
ANR	2203696	AssignmentExpression	errno = ENOMEM		2203470	0		=			
ANR	2203697	Identifier	errno		2203470	0					
ANR	2203698	Identifier	ENOMEM		2203470	1					
ANR	2203699	ExpressionStatement	* id = safe_err_id	439:2:10204:10221	2203470	1	True				
ANR	2203700	AssignmentExpression	* id = safe_err_id		2203470	0		=			
ANR	2203701	UnaryOperationExpression	* id		2203470	0					
ANR	2203702	UnaryOperator	*		2203470	0					
ANR	2203703	Identifier	id		2203470	1					
ANR	2203704	Identifier	safe_err_id		2203470	1					
ANR	2203705	IfStatement	if ( endptr )		2203470	2					
ANR	2203706	Condition	endptr	440:6:10229:10234	2203470	0	True				
ANR	2203707	Identifier	endptr		2203470	0					
ANR	2203708	CompoundStatement		54:15:1252:1252	2203470	1					
ANR	2203709	ExpressionStatement	* endptr = endp	441:6:10246:10260	2203470	0	True				
ANR	2203710	AssignmentExpression	* endptr = endp		2203470	0		=			
ANR	2203711	UnaryOperationExpression	* endptr		2203470	0					
ANR	2203712	UnaryOperator	*		2203470	0					
ANR	2203713	Identifier	endptr		2203470	1					
ANR	2203714	Identifier	endp		2203470	1					
ANR	2203715	ReturnStatement	return - 1 ;	443:2:10268:10277	2203470	3	True				
ANR	2203716	UnaryOperationExpression	- 1		2203470	0					
ANR	2203717	UnaryOperator	-		2203470	0					
ANR	2203718	PrimaryExpression	1		2203470	1					
ANR	2203719	ExpressionStatement	"memcpy ( id_name , id_begin , id_len )"	448:1:10324:10357	2203470	7	True				
ANR	2203720	CallExpression	"memcpy ( id_name , id_begin , id_len )"		2203470	0					
ANR	2203721	Callee	memcpy		2203470	0					
ANR	2203722	Identifier	memcpy		2203470	0					
ANR	2203723	ArgumentList	id_name		2203470	1					
ANR	2203724	Argument	id_name		2203470	0					
ANR	2203725	Identifier	id_name		2203470	0					
ANR	2203726	Argument	id_begin		2203470	1					
ANR	2203727	Identifier	id_begin		2203470	0					
ANR	2203728	Argument	id_len		2203470	2					
ANR	2203729	Identifier	id_len		2203470	0					
ANR	2203730	ExpressionStatement	id_name [ id_len ] = '\\0'	449:1:10360:10382	2203470	8	True				
ANR	2203731	AssignmentExpression	id_name [ id_len ] = '\\0'		2203470	0		=			
ANR	2203732	ArrayIndexing	id_name [ id_len ]		2203470	0					
ANR	2203733	Identifier	id_name		2203470	0					
ANR	2203734	Identifier	id_len		2203470	1					
ANR	2203735	PrimaryExpression	'\\0'		2203470	1					
ANR	2203736	ExpressionStatement	* id = lookup ( id_name )	451:1:10386:10407	2203470	9	True				
ANR	2203737	AssignmentExpression	* id = lookup ( id_name )		2203470	0		=			
ANR	2203738	UnaryOperationExpression	* id		2203470	0					
ANR	2203739	UnaryOperator	*		2203470	0					
ANR	2203740	Identifier	id		2203470	1					
ANR	2203741	CallExpression	lookup ( id_name )		2203470	1					
ANR	2203742	Callee	lookup		2203470	0					
ANR	2203743	Identifier	lookup		2203470	0					
ANR	2203744	ArgumentList	id_name		2203470	1					
ANR	2203745	Argument	id_name		2203470	0					
ANR	2203746	Identifier	id_name		2203470	0					
ANR	2203747	IfStatement	if ( id_name != small_buf )		2203470	10					
ANR	2203748	Condition	id_name != small_buf	454:5:10446:10465	2203470	0	True				
ANR	2203749	EqualityExpression	id_name != small_buf		2203470	0		!=			
ANR	2203750	Identifier	id_name		2203470	0					
ANR	2203751	Identifier	small_buf		2203470	1					
ANR	2203752	CompoundStatement		68:28:1483:1483	2203470	1					
ANR	2203753	ExpressionStatement	free ( id_name )	455:5:10476:10489	2203470	0	True				
ANR	2203754	CallExpression	free ( id_name )		2203470	0					
ANR	2203755	Callee	free		2203470	0					
ANR	2203756	Identifier	free		2203470	0					
ANR	2203757	ArgumentList	id_name		2203470	1					
ANR	2203758	Argument	id_name		2203470	0					
ANR	2203759	Identifier	id_name		2203470	0					
ANR	2203760	ElseStatement	else		2203470	0					
ANR	2203761	CompoundStatement		71:13:1521:1521	2203470	0					
ANR	2203762	ExpressionStatement	* id = safe_err_id	459:1:10549:10566	2203470	0	True				
ANR	2203763	AssignmentExpression	* id = safe_err_id		2203470	0		=			
ANR	2203764	UnaryOperationExpression	* id		2203470	0					
ANR	2203765	UnaryOperator	*		2203470	0					
ANR	2203766	Identifier	id		2203470	1					
ANR	2203767	Identifier	safe_err_id		2203470	1					
ANR	2203768	ExpressionStatement	errno = EINVAL	460:1:10569:10583	2203470	1	True				
ANR	2203769	AssignmentExpression	errno = EINVAL		2203470	0		=			
ANR	2203770	Identifier	errno		2203470	0					
ANR	2203771	Identifier	EINVAL		2203470	1					
ANR	2203772	IfStatement	if ( endptr )		2203470	7					
ANR	2203773	Condition	endptr	463:8:10600:10605	2203470	0	True				
ANR	2203774	Identifier	endptr		2203470	0					
ANR	2203775	CompoundStatement		77:17:1623:1623	2203470	1					
ANR	2203776	ExpressionStatement	* endptr = endp	464:1:10612:10626	2203470	0	True				
ANR	2203777	AssignmentExpression	* endptr = endp		2203470	0		=			
ANR	2203778	UnaryOperationExpression	* endptr		2203470	0					
ANR	2203779	UnaryOperator	*		2203470	0					
ANR	2203780	Identifier	endptr		2203470	1					
ANR	2203781	Identifier	endp		2203470	1					
ANR	2203782	ReturnStatement	return 0 ;	467:4:10639:10647	2203470	8	True				
ANR	2203783	PrimaryExpression	0		2203470	0					
ANR	2203784	ReturnType	static int		2203470	1					
ANR	2203785	Identifier	strto_id		2203470	2					
ANR	2203786	ParameterList	"id_t * id , const char * value , const char * * endptr , lookup_func lookup"		2203470	3					
ANR	2203787	Parameter	id_t * id	386:20:8915:8922	2203470	0	True				
ANR	2203788	ParameterType	id_t *		2203470	0					
ANR	2203789	Identifier	id		2203470	1					
ANR	2203790	Parameter	const char * value	386:30:8925:8941	2203470	1	True				
ANR	2203791	ParameterType	const char *		2203470	0					
ANR	2203792	Identifier	value		2203470	1					
ANR	2203793	Parameter	const char * * endptr	386:49:8944:8962	2203470	2	True				
ANR	2203794	ParameterType	const char * *		2203470	0					
ANR	2203795	Identifier	endptr		2203470	1					
ANR	2203796	Parameter	lookup_func lookup	386:70:8965:8982	2203470	3	True				
ANR	2203797	ParameterType	lookup_func		2203470	0					
ANR	2203798	Identifier	lookup		2203470	1					
ANR	2203799	CFGEntryNode	ENTRY		2203470		True				
ANR	2203800	CFGExitNode	EXIT		2203470		True				
ANR	2203801	Symbol	ENOMEM		2203470						
ANR	2203802	Symbol	* id		2203470						
ANR	2203803	Symbol	skip_whitespace_const		2203470						
ANR	2203804	Symbol	safe_err_id		2203470						
ANR	2203805	Symbol	strtoul		2203470						
ANR	2203806	Symbol	* id_name		2203470						
ANR	2203807	Symbol	endp		2203470						
ANR	2203808	Symbol	id		2203470						
ANR	2203809	Symbol	value		2203470						
ANR	2203810	Symbol	isdigit		2203470						
ANR	2203811	Symbol	lookup		2203470						
ANR	2203812	Symbol	malloc		2203470						
ANR	2203813	Symbol	errno		2203470						
ANR	2203814	Symbol	NULL		2203470						
ANR	2203815	Symbol	endptr		2203470						
ANR	2203816	Symbol	e		2203470						
ANR	2203817	Symbol	* endptr		2203470						
ANR	2203818	Symbol	isspace		2203470						
ANR	2203819	Symbol	& e		2203470						
ANR	2203820	Symbol	id_len		2203470						
ANR	2203821	Symbol	* id_begin		2203470						
ANR	2203822	Symbol	id_name		2203470						
ANR	2203823	Symbol	EINVAL		2203470						
ANR	2203824	Symbol	* id_len		2203470						
ANR	2203825	Symbol	* endp		2203470						
ANR	2203826	Symbol	id_begin		2203470						
ANR	2203827	Symbol	small_buf		2203470						
ANR	2203828	Function	safe_strto_uid	489:0:11264:11411							
ANR	2203829	FunctionDef	"safe_strto_uid (const char * value , const char * * endptr)"		2203828	0					
ANR	2203830	CompoundStatement		490:0:11325:11411	2203828	0					
ANR	2203831	IdentifierDeclStatement	id_t id ;	491:4:11331:11338	2203828	0	True				
ANR	2203832	IdentifierDecl	id		2203828	0					
ANR	2203833	IdentifierDeclType	id_t		2203828	0					
ANR	2203834	Identifier	id		2203828	1					
ANR	2203835	ExpressionStatement	"strto_id ( & id , value , endptr , name_to_uid )"	493:4:11345:11386	2203828	1	True				
ANR	2203836	CallExpression	"strto_id ( & id , value , endptr , name_to_uid )"		2203828	0					
ANR	2203837	Callee	strto_id		2203828	0					
ANR	2203838	Identifier	strto_id		2203828	0					
ANR	2203839	ArgumentList	& id		2203828	1					
ANR	2203840	Argument	& id		2203828	0					
ANR	2203841	UnaryOperationExpression	& id		2203828	0					
ANR	2203842	UnaryOperator	&		2203828	0					
ANR	2203843	Identifier	id		2203828	1					
ANR	2203844	Argument	value		2203828	1					
ANR	2203845	Identifier	value		2203828	0					
ANR	2203846	Argument	endptr		2203828	2					
ANR	2203847	Identifier	endptr		2203828	0					
ANR	2203848	Argument	name_to_uid		2203828	3					
ANR	2203849	Identifier	name_to_uid		2203828	0					
ANR	2203850	ReturnStatement	return ( uid_t ) id ;	495:4:11393:11409	2203828	2	True				
ANR	2203851	CastExpression	( uid_t ) id		2203828	0					
ANR	2203852	CastTarget	uid_t		2203828	0					
ANR	2203853	Identifier	id		2203828	1					
ANR	2203854	ReturnType	uid_t		2203828	1					
ANR	2203855	Identifier	safe_strto_uid		2203828	2					
ANR	2203856	ParameterList	"const char * value , const char * * endptr"		2203828	3					
ANR	2203857	Parameter	const char * value	489:21:11285:11301	2203828	0	True				
ANR	2203858	ParameterType	const char *		2203828	0					
ANR	2203859	Identifier	value		2203828	1					
ANR	2203860	Parameter	const char * * endptr	489:40:11304:11322	2203828	1	True				
ANR	2203861	ParameterType	const char * *		2203828	0					
ANR	2203862	Identifier	endptr		2203828	1					
ANR	2203863	CFGEntryNode	ENTRY		2203828		True				
ANR	2203864	CFGExitNode	EXIT		2203828		True				
ANR	2203865	Symbol	& id		2203828						
ANR	2203866	Symbol	endptr		2203828						
ANR	2203867	Symbol	id		2203828						
ANR	2203868	Symbol	value		2203828						
ANR	2203869	Symbol	name_to_uid		2203828						
ANR	2203870	Function	safe_strto_gid	517:0:12027:12174							
ANR	2203871	FunctionDef	"safe_strto_gid (const char * value , const char * * endptr)"		2203870	0					
ANR	2203872	CompoundStatement		518:0:12088:12174	2203870	0					
ANR	2203873	IdentifierDeclStatement	id_t id ;	519:4:12094:12101	2203870	0	True				
ANR	2203874	IdentifierDecl	id		2203870	0					
ANR	2203875	IdentifierDeclType	id_t		2203870	0					
ANR	2203876	Identifier	id		2203870	1					
ANR	2203877	ExpressionStatement	"strto_id ( & id , value , endptr , name_to_gid )"	521:4:12108:12149	2203870	1	True				
ANR	2203878	CallExpression	"strto_id ( & id , value , endptr , name_to_gid )"		2203870	0					
ANR	2203879	Callee	strto_id		2203870	0					
ANR	2203880	Identifier	strto_id		2203870	0					
ANR	2203881	ArgumentList	& id		2203870	1					
ANR	2203882	Argument	& id		2203870	0					
ANR	2203883	UnaryOperationExpression	& id		2203870	0					
ANR	2203884	UnaryOperator	&		2203870	0					
ANR	2203885	Identifier	id		2203870	1					
ANR	2203886	Argument	value		2203870	1					
ANR	2203887	Identifier	value		2203870	0					
ANR	2203888	Argument	endptr		2203870	2					
ANR	2203889	Identifier	endptr		2203870	0					
ANR	2203890	Argument	name_to_gid		2203870	3					
ANR	2203891	Identifier	name_to_gid		2203870	0					
ANR	2203892	ReturnStatement	return ( gid_t ) id ;	523:4:12156:12172	2203870	2	True				
ANR	2203893	CastExpression	( gid_t ) id		2203870	0					
ANR	2203894	CastTarget	gid_t		2203870	0					
ANR	2203895	Identifier	id		2203870	1					
ANR	2203896	ReturnType	gid_t		2203870	1					
ANR	2203897	Identifier	safe_strto_gid		2203870	2					
ANR	2203898	ParameterList	"const char * value , const char * * endptr"		2203870	3					
ANR	2203899	Parameter	const char * value	517:21:12048:12064	2203870	0	True				
ANR	2203900	ParameterType	const char *		2203870	0					
ANR	2203901	Identifier	value		2203870	1					
ANR	2203902	Parameter	const char * * endptr	517:40:12067:12085	2203870	1	True				
ANR	2203903	ParameterType	const char * *		2203870	0					
ANR	2203904	Identifier	endptr		2203870	1					
ANR	2203905	CFGEntryNode	ENTRY		2203870		True				
ANR	2203906	CFGExitNode	EXIT		2203870		True				
ANR	2203907	Symbol	& id		2203870						
ANR	2203908	Symbol	endptr		2203870						
ANR	2203909	Symbol	id		2203870						
ANR	2203910	Symbol	value		2203870						
ANR	2203911	Symbol	name_to_gid		2203870						
ANR	2203912	Function	safe_strto_id	545:0:12767:12907							
ANR	2203913	FunctionDef	"safe_strto_id (const char * value , const char * * endptr)"		2203912	0					
ANR	2203914	CompoundStatement		546:0:12826:12907	2203912	0					
ANR	2203915	IdentifierDeclStatement	id_t id ;	547:4:12832:12839	2203912	0	True				
ANR	2203916	IdentifierDecl	id		2203912	0					
ANR	2203917	IdentifierDeclType	id_t		2203912	0					
ANR	2203918	Identifier	id		2203912	1					
ANR	2203919	ExpressionStatement	"strto_id ( & id , value , endptr , name_to_error )"	549:4:12846:12889	2203912	1	True				
ANR	2203920	CallExpression	"strto_id ( & id , value , endptr , name_to_error )"		2203912	0					
ANR	2203921	Callee	strto_id		2203912	0					
ANR	2203922	Identifier	strto_id		2203912	0					
ANR	2203923	ArgumentList	& id		2203912	1					
ANR	2203924	Argument	& id		2203912	0					
ANR	2203925	UnaryOperationExpression	& id		2203912	0					
ANR	2203926	UnaryOperator	&		2203912	0					
ANR	2203927	Identifier	id		2203912	1					
ANR	2203928	Argument	value		2203912	1					
ANR	2203929	Identifier	value		2203912	0					
ANR	2203930	Argument	endptr		2203912	2					
ANR	2203931	Identifier	endptr		2203912	0					
ANR	2203932	Argument	name_to_error		2203912	3					
ANR	2203933	Identifier	name_to_error		2203912	0					
ANR	2203934	ReturnStatement	return id ;	551:4:12896:12905	2203912	2	True				
ANR	2203935	Identifier	id		2203912	0					
ANR	2203936	ReturnType	id_t		2203912	1					
ANR	2203937	Identifier	safe_strto_id		2203912	2					
ANR	2203938	ParameterList	"const char * value , const char * * endptr"		2203912	3					
ANR	2203939	Parameter	const char * value	545:19:12786:12802	2203912	0	True				
ANR	2203940	ParameterType	const char *		2203912	0					
ANR	2203941	Identifier	value		2203912	1					
ANR	2203942	Parameter	const char * * endptr	545:38:12805:12823	2203912	1	True				
ANR	2203943	ParameterType	const char * *		2203912	0					
ANR	2203944	Identifier	endptr		2203912	1					
ANR	2203945	CFGEntryNode	ENTRY		2203912		True				
ANR	2203946	CFGExitNode	EXIT		2203912		True				
ANR	2203947	Symbol	name_to_error		2203912						
ANR	2203948	Symbol	& id		2203912						
ANR	2203949	Symbol	endptr		2203912						
ANR	2203950	Symbol	id		2203912						
ANR	2203951	Symbol	value		2203912						
ANR	2203952	Function	strto_id_range	591:0:14359:15070							
ANR	2203953	FunctionDef	"strto_id_range (id_t * min_id , id_t * max_id , const char * value , const char * * endptr , lookup_func lookup)"		2203952	0					
ANR	2203954	CompoundStatement		592:0:14474:15070	2203952	0					
ANR	2203955	IdentifierDeclStatement	const char * endp ;	593:4:14480:14496	2203952	0	True				
ANR	2203956	IdentifierDecl	* endp		2203952	0					
ANR	2203957	IdentifierDeclType	const char *		2203952	0					
ANR	2203958	Identifier	endp		2203952	1					
ANR	2203959	ExpressionStatement	"strto_id ( min_id , value , & endp , lookup )"	594:4:14502:14540	2203952	1	True				
ANR	2203960	CallExpression	"strto_id ( min_id , value , & endp , lookup )"		2203952	0					
ANR	2203961	Callee	strto_id		2203952	0					
ANR	2203962	Identifier	strto_id		2203952	0					
ANR	2203963	ArgumentList	min_id		2203952	1					
ANR	2203964	Argument	min_id		2203952	0					
ANR	2203965	Identifier	min_id		2203952	0					
ANR	2203966	Argument	value		2203952	1					
ANR	2203967	Identifier	value		2203952	0					
ANR	2203968	Argument	& endp		2203952	2					
ANR	2203969	UnaryOperationExpression	& endp		2203952	0					
ANR	2203970	UnaryOperator	&		2203952	0					
ANR	2203971	Identifier	endp		2203952	1					
ANR	2203972	Argument	lookup		2203952	3					
ANR	2203973	Identifier	lookup		2203952	0					
ANR	2203974	IfStatement	if ( errno == 0 && value != endp )		2203952	2					
ANR	2203975	Condition	errno == 0 && value != endp	595:8:14550:14576	2203952	0	True				
ANR	2203976	AndExpression	errno == 0 && value != endp		2203952	0		&&			
ANR	2203977	EqualityExpression	errno == 0		2203952	0		==			
ANR	2203978	Identifier	errno		2203952	0					
ANR	2203979	PrimaryExpression	0		2203952	1					
ANR	2203980	EqualityExpression	value != endp		2203952	1		!=			
ANR	2203981	Identifier	value		2203952	0					
ANR	2203982	Identifier	endp		2203952	1					
ANR	2203983	CompoundStatement		4:38:105:105	2203952	1					
ANR	2203984	ExpressionStatement	value = skip_whitespace_const ( endp )	597:1:14642:14677	2203952	0	True				
ANR	2203985	AssignmentExpression	value = skip_whitespace_const ( endp )		2203952	0		=			
ANR	2203986	Identifier	value		2203952	0					
ANR	2203987	CallExpression	skip_whitespace_const ( endp )		2203952	1					
ANR	2203988	Callee	skip_whitespace_const		2203952	0					
ANR	2203989	Identifier	skip_whitespace_const		2203952	0					
ANR	2203990	ArgumentList	endp		2203952	1					
ANR	2203991	Argument	endp		2203952	0					
ANR	2203992	Identifier	endp		2203952	0					
ANR	2203993	IfStatement	if ( * value == '-' )		2203952	1					
ANR	2203994	Condition	* value == '-'	598:5:14684:14696	2203952	0	True				
ANR	2203995	EqualityExpression	* value == '-'		2203952	0		==			
ANR	2203996	UnaryOperationExpression	* value		2203952	0					
ANR	2203997	UnaryOperator	*		2203952	0					
ANR	2203998	Identifier	value		2203952	1					
ANR	2203999	PrimaryExpression	'-'		2203952	1					
ANR	2204000	CompoundStatement		7:21:225:225	2203952	1					
ANR	2204001	ExpressionStatement	++ value	599:5:14707:14714	2203952	0	True				
ANR	2204002	UnaryExpression	++ value		2203952	0					
ANR	2204003	IncDec	++		2203952	0					
ANR	2204004	Identifier	value		2203952	1					
ANR	2204005	ExpressionStatement	value = skip_whitespace_const ( value )	600:5:14721:14757	2203952	1	True				
ANR	2204006	AssignmentExpression	value = skip_whitespace_const ( value )		2203952	0		=			
ANR	2204007	Identifier	value		2203952	0					
ANR	2204008	CallExpression	skip_whitespace_const ( value )		2203952	1					
ANR	2204009	Callee	skip_whitespace_const		2203952	0					
ANR	2204010	Identifier	skip_whitespace_const		2203952	0					
ANR	2204011	ArgumentList	value		2203952	1					
ANR	2204012	Argument	value		2203952	0					
ANR	2204013	Identifier	value		2203952	0					
ANR	2204014	IfStatement	if ( * value == '*' )		2203952	2					
ANR	2204015	Condition	* value == '*'	601:9:14768:14780	2203952	0	True				
ANR	2204016	EqualityExpression	* value == '*'		2203952	0		==			
ANR	2204017	UnaryOperationExpression	* value		2203952	0					
ANR	2204018	UnaryOperator	*		2203952	0					
ANR	2204019	Identifier	value		2203952	1					
ANR	2204020	PrimaryExpression	'*'		2203952	1					
ANR	2204021	CompoundStatement		10:25:309:309	2203952	1					
ANR	2204022	ExpressionStatement	* max_id = UINT_MAX	602:2:14788:14806	2203952	0	True				
ANR	2204023	AssignmentExpression	* max_id = UINT_MAX		2203952	0		=			
ANR	2204024	UnaryOperationExpression	* max_id		2203952	0					
ANR	2204025	UnaryOperator	*		2203952	0					
ANR	2204026	Identifier	max_id		2203952	1					
ANR	2204027	Identifier	UINT_MAX		2203952	1					
ANR	2204028	ExpressionStatement	endp = value + 1	603:2:14810:14826	2203952	1	True				
ANR	2204029	AssignmentExpression	endp = value + 1		2203952	0		=			
ANR	2204030	Identifier	endp		2203952	0					
ANR	2204031	AdditiveExpression	value + 1		2203952	1		+			
ANR	2204032	Identifier	value		2203952	0					
ANR	2204033	PrimaryExpression	1		2203952	1					
ANR	2204034	ElseStatement	else		2203952	0					
ANR	2204035	CompoundStatement		13:14:367:367	2203952	0					
ANR	2204036	ExpressionStatement	"strto_id ( max_id , value , & endp , lookup )"	605:2:14846:14884	2203952	0	True				
ANR	2204037	CallExpression	"strto_id ( max_id , value , & endp , lookup )"		2203952	0					
ANR	2204038	Callee	strto_id		2203952	0					
ANR	2204039	Identifier	strto_id		2203952	0					
ANR	2204040	ArgumentList	max_id		2203952	1					
ANR	2204041	Argument	max_id		2203952	0					
ANR	2204042	Identifier	max_id		2203952	0					
ANR	2204043	Argument	value		2203952	1					
ANR	2204044	Identifier	value		2203952	0					
ANR	2204045	Argument	& endp		2203952	2					
ANR	2204046	UnaryOperationExpression	& endp		2203952	0					
ANR	2204047	UnaryOperator	&		2203952	0					
ANR	2204048	Identifier	endp		2203952	1					
ANR	2204049	Argument	lookup		2203952	3					
ANR	2204050	Identifier	lookup		2203952	0					
ANR	2204051	ElseStatement	else		2203952	0					
ANR	2204052	CompoundStatement		16:10:428:428	2203952	0					
ANR	2204053	ExpressionStatement	* max_id = * min_id	608:5:14910:14927	2203952	0	True				
ANR	2204054	AssignmentExpression	* max_id = * min_id		2203952	0		=			
ANR	2204055	UnaryOperationExpression	* max_id		2203952	0					
ANR	2204056	UnaryOperator	*		2203952	0					
ANR	2204057	Identifier	max_id		2203952	1					
ANR	2204058	UnaryOperationExpression	* min_id		2203952	1					
ANR	2204059	UnaryOperator	*		2203952	0					
ANR	2204060	Identifier	min_id		2203952	1					
ANR	2204061	ElseStatement	else		2203952	0					
ANR	2204062	CompoundStatement		19:13:470:470	2203952	0					
ANR	2204063	ExpressionStatement	* max_id = * min_id	611:1:14948:14965	2203952	0	True				
ANR	2204064	AssignmentExpression	* max_id = * min_id		2203952	0		=			
ANR	2204065	UnaryOperationExpression	* max_id		2203952	0					
ANR	2204066	UnaryOperator	*		2203952	0					
ANR	2204067	Identifier	max_id		2203952	1					
ANR	2204068	UnaryOperationExpression	* min_id		2203952	1					
ANR	2204069	UnaryOperator	*		2203952	0					
ANR	2204070	Identifier	min_id		2203952	1					
ANR	2204071	IfStatement	if ( endptr )		2203952	3					
ANR	2204072	Condition	endptr	614:8:14982:14987	2203952	0	True				
ANR	2204073	Identifier	endptr		2203952	0					
ANR	2204074	CompoundStatement		23:17:516:516	2203952	1					
ANR	2204075	ExpressionStatement	* endptr = endp	615:1:14994:15008	2203952	0	True				
ANR	2204076	AssignmentExpression	* endptr = endp		2203952	0		=			
ANR	2204077	UnaryOperationExpression	* endptr		2203952	0					
ANR	2204078	UnaryOperator	*		2203952	0					
ANR	2204079	Identifier	endptr		2203952	1					
ANR	2204080	Identifier	endp		2203952	1					
ANR	2204081	IfStatement	if ( * min_id > * max_id )		2203952	4					
ANR	2204082	Condition	* min_id > * max_id	618:8:15025:15041	2203952	0	True				
ANR	2204083	RelationalExpression	* min_id > * max_id		2203952	0		>			
ANR	2204084	UnaryOperationExpression	* min_id		2203952	0					
ANR	2204085	UnaryOperator	*		2203952	0					
ANR	2204086	Identifier	min_id		2203952	1					
ANR	2204087	UnaryOperationExpression	* max_id		2203952	1					
ANR	2204088	UnaryOperator	*		2203952	0					
ANR	2204089	Identifier	max_id		2203952	1					
ANR	2204090	CompoundStatement		27:28:570:570	2203952	1					
ANR	2204091	ExpressionStatement	errno = EINVAL	619:1:15048:15062	2203952	0	True				
ANR	2204092	AssignmentExpression	errno = EINVAL		2203952	0		=			
ANR	2204093	Identifier	errno		2203952	0					
ANR	2204094	Identifier	EINVAL		2203952	1					
ANR	2204095	ReturnType	static void		2203952	1					
ANR	2204096	Identifier	strto_id_range		2203952	2					
ANR	2204097	ParameterList	"id_t * min_id , id_t * max_id , const char * value , const char * * endptr , lookup_func lookup"		2203952	3					
ANR	2204098	Parameter	id_t * min_id	591:27:14386:14397	2203952	0	True				
ANR	2204099	ParameterType	id_t *		2203952	0					
ANR	2204100	Identifier	min_id		2203952	1					
ANR	2204101	Parameter	id_t * max_id	591:41:14400:14411	2203952	1	True				
ANR	2204102	ParameterType	id_t *		2203952	0					
ANR	2204103	Identifier	max_id		2203952	1					
ANR	2204104	Parameter	const char * value	591:55:14414:14430	2203952	2	True				
ANR	2204105	ParameterType	const char *		2203952	0					
ANR	2204106	Identifier	value		2203952	1					
ANR	2204107	Parameter	const char * * endptr	591:74:14433:14451	2203952	3	True				
ANR	2204108	ParameterType	const char * *		2203952	0					
ANR	2204109	Identifier	endptr		2203952	1					
ANR	2204110	Parameter	lookup_func lookup	591:95:14454:14471	2203952	4	True				
ANR	2204111	ParameterType	lookup_func		2203952	0					
ANR	2204112	Identifier	lookup		2203952	1					
ANR	2204113	CFGEntryNode	ENTRY		2203952		True				
ANR	2204114	CFGExitNode	EXIT		2203952		True				
ANR	2204115	Symbol	lookup		2203952						
ANR	2204116	Symbol	errno		2203952						
ANR	2204117	Symbol	endptr		2203952						
ANR	2204118	Symbol	& endp		2203952						
ANR	2204119	Symbol	* endptr		2203952						
ANR	2204120	Symbol	* min_id		2203952						
ANR	2204121	Symbol	* max_id		2203952						
ANR	2204122	Symbol	UINT_MAX		2203952						
ANR	2204123	Symbol	EINVAL		2203952						
ANR	2204124	Symbol	skip_whitespace_const		2203952						
ANR	2204125	Symbol	min_id		2203952						
ANR	2204126	Symbol	* value		2203952						
ANR	2204127	Symbol	max_id		2203952						
ANR	2204128	Symbol	endp		2203952						
ANR	2204129	Symbol	value		2203952						
ANR	2204130	Function	strto_id_list	654:0:16143:16763							
ANR	2204131	FunctionDef	"strto_id_list (safe_id_range_list * list , const char * value , const char * * endptr , lookup_func lookup)"		2204130	0					
ANR	2204132	CompoundStatement		655:0:16255:16763	2204130	0					
ANR	2204133	IdentifierDeclStatement	const char * endp = value ;	656:4:16261:16286	2204130	0	True				
ANR	2204134	IdentifierDecl	* endp = value		2204130	0					
ANR	2204135	IdentifierDeclType	const char *		2204130	0					
ANR	2204136	Identifier	endp		2204130	1					
ANR	2204137	AssignmentExpression	* endp = value		2204130	2		=			
ANR	2204138	Identifier	value		2204130	0					
ANR	2204139	Identifier	value		2204130	1					
ANR	2204140	IfStatement	if ( list == NULL || value == NULL )		2204130	1					
ANR	2204141	Condition	list == NULL || value == NULL	658:8:16297:16325	2204130	0	True				
ANR	2204142	OrExpression	list == NULL || value == NULL		2204130	0		||			
ANR	2204143	EqualityExpression	list == NULL		2204130	0		==			
ANR	2204144	Identifier	list		2204130	0					
ANR	2204145	Identifier	NULL		2204130	1					
ANR	2204146	EqualityExpression	value == NULL		2204130	1		==			
ANR	2204147	Identifier	value		2204130	0					
ANR	2204148	Identifier	NULL		2204130	1					
ANR	2204149	CompoundStatement		4:40:73:73	2204130	1					
ANR	2204150	ExpressionStatement	errno = EINVAL	659:1:16332:16346	2204130	0	True				
ANR	2204151	AssignmentExpression	errno = EINVAL		2204130	0		=			
ANR	2204152	Identifier	errno		2204130	0					
ANR	2204153	Identifier	EINVAL		2204130	1					
ANR	2204154	IfStatement	if ( endptr )		2204130	1					
ANR	2204155	Condition	endptr	660:5:16353:16358	2204130	0	True				
ANR	2204156	Identifier	endptr		2204130	0					
ANR	2204157	CompoundStatement		6:14:106:106	2204130	1					
ANR	2204158	ExpressionStatement	* endptr = value	661:5:16369:16384	2204130	0	True				
ANR	2204159	AssignmentExpression	* endptr = value		2204130	0		=			
ANR	2204160	UnaryOperationExpression	* endptr		2204130	0					
ANR	2204161	UnaryOperator	*		2204130	0					
ANR	2204162	Identifier	endptr		2204130	1					
ANR	2204163	Identifier	value		2204130	1					
ANR	2204164	ReturnStatement	return ;	663:1:16390:16396	2204130	2	True				
ANR	2204165	WhileStatement	while ( 1 )		2204130	2					
ANR	2204166	Condition	1	666:11:16416:16416	2204130	0	True				
ANR	2204167	PrimaryExpression	1		2204130	0					
ANR	2204168	CompoundStatement		14:1:181:192	2204130	1					
ANR	2204169	IdentifierDeclStatement	id_t min_id ;	667:1:16423:16434	2204130	0	True				
ANR	2204170	IdentifierDecl	min_id		2204130	0					
ANR	2204171	IdentifierDeclType	id_t		2204130	0					
ANR	2204172	Identifier	min_id		2204130	1					
ANR	2204173	IdentifierDeclStatement	id_t max_id ;	668:1:16437:16448	2204130	1	True				
ANR	2204174	IdentifierDecl	max_id		2204130	0					
ANR	2204175	IdentifierDeclType	id_t		2204130	0					
ANR	2204176	Identifier	max_id		2204130	1					
ANR	2204177	ExpressionStatement	"strto_id_range ( & min_id , & max_id , value , & endp , lookup )"	670:1:16452:16506	2204130	2	True				
ANR	2204178	CallExpression	"strto_id_range ( & min_id , & max_id , value , & endp , lookup )"		2204130	0					
ANR	2204179	Callee	strto_id_range		2204130	0					
ANR	2204180	Identifier	strto_id_range		2204130	0					
ANR	2204181	ArgumentList	& min_id		2204130	1					
ANR	2204182	Argument	& min_id		2204130	0					
ANR	2204183	UnaryOperationExpression	& min_id		2204130	0					
ANR	2204184	UnaryOperator	&		2204130	0					
ANR	2204185	Identifier	min_id		2204130	1					
ANR	2204186	Argument	& max_id		2204130	1					
ANR	2204187	UnaryOperationExpression	& max_id		2204130	0					
ANR	2204188	UnaryOperator	&		2204130	0					
ANR	2204189	Identifier	max_id		2204130	1					
ANR	2204190	Argument	value		2204130	2					
ANR	2204191	Identifier	value		2204130	0					
ANR	2204192	Argument	& endp		2204130	3					
ANR	2204193	UnaryOperationExpression	& endp		2204130	0					
ANR	2204194	UnaryOperator	&		2204130	0					
ANR	2204195	Identifier	endp		2204130	1					
ANR	2204196	Argument	lookup		2204130	4					
ANR	2204197	Identifier	lookup		2204130	0					
ANR	2204198	IfStatement	if ( errno != 0 || value == endp )		2204130	3					
ANR	2204199	Condition	errno != 0 || value == endp	671:5:16513:16539	2204130	0	True				
ANR	2204200	OrExpression	errno != 0 || value == endp		2204130	0		||			
ANR	2204201	EqualityExpression	errno != 0		2204130	0		!=			
ANR	2204202	Identifier	errno		2204130	0					
ANR	2204203	PrimaryExpression	0		2204130	1					
ANR	2204204	EqualityExpression	value == endp		2204130	1		==			
ANR	2204205	Identifier	value		2204130	0					
ANR	2204206	Identifier	endp		2204130	1					
ANR	2204207	CompoundStatement		17:35:287:287	2204130	1					
ANR	2204208	BreakStatement	break ;	672:5:16550:16555	2204130	0	True				
ANR	2204209	ExpressionStatement	"safe_add_id_range_to_list ( list , min_id , max_id )"	675:1:16562:16609	2204130	4	True				
ANR	2204210	CallExpression	"safe_add_id_range_to_list ( list , min_id , max_id )"		2204130	0					
ANR	2204211	Callee	safe_add_id_range_to_list		2204130	0					
ANR	2204212	Identifier	safe_add_id_range_to_list		2204130	0					
ANR	2204213	ArgumentList	list		2204130	1					
ANR	2204214	Argument	list		2204130	0					
ANR	2204215	Identifier	list		2204130	0					
ANR	2204216	Argument	min_id		2204130	1					
ANR	2204217	Identifier	min_id		2204130	0					
ANR	2204218	Argument	max_id		2204130	2					
ANR	2204219	Identifier	max_id		2204130	0					
ANR	2204220	ExpressionStatement	value = skip_whitespace_const ( endp )	677:1:16613:16648	2204130	5	True				
ANR	2204221	AssignmentExpression	value = skip_whitespace_const ( endp )		2204130	0		=			
ANR	2204222	Identifier	value		2204130	0					
ANR	2204223	CallExpression	skip_whitespace_const ( endp )		2204130	1					
ANR	2204224	Callee	skip_whitespace_const		2204130	0					
ANR	2204225	Identifier	skip_whitespace_const		2204130	0					
ANR	2204226	ArgumentList	endp		2204130	1					
ANR	2204227	Argument	endp		2204130	0					
ANR	2204228	Identifier	endp		2204130	0					
ANR	2204229	IfStatement	if ( * value == ':' )		2204130	6					
ANR	2204230	Condition	* value == ':'	678:5:16655:16667	2204130	0	True				
ANR	2204231	EqualityExpression	* value == ':'		2204130	0		==			
ANR	2204232	UnaryOperationExpression	* value		2204130	0					
ANR	2204233	UnaryOperator	*		2204130	0					
ANR	2204234	Identifier	value		2204130	1					
ANR	2204235	PrimaryExpression	':'		2204130	1					
ANR	2204236	CompoundStatement		24:21:415:415	2204130	1					
ANR	2204237	ExpressionStatement	++ value	679:5:16678:16685	2204130	0	True				
ANR	2204238	UnaryExpression	++ value		2204130	0					
ANR	2204239	IncDec	++		2204130	0					
ANR	2204240	Identifier	value		2204130	1					
ANR	2204241	ElseStatement	else		2204130	0					
ANR	2204242	CompoundStatement		26:10:441:441	2204130	0					
ANR	2204243	BreakStatement	break ;	681:5:16704:16709	2204130	0	True				
ANR	2204244	IfStatement	if ( endptr )		2204130	3					
ANR	2204245	Condition	endptr	685:8:16729:16734	2204130	0	True				
ANR	2204246	Identifier	endptr		2204130	0					
ANR	2204247	CompoundStatement		31:17:482:482	2204130	1					
ANR	2204248	ExpressionStatement	* endptr = endp	686:1:16741:16755	2204130	0	True				
ANR	2204249	AssignmentExpression	* endptr = endp		2204130	0		=			
ANR	2204250	UnaryOperationExpression	* endptr		2204130	0					
ANR	2204251	UnaryOperator	*		2204130	0					
ANR	2204252	Identifier	endptr		2204130	1					
ANR	2204253	Identifier	endp		2204130	1					
ANR	2204254	ReturnType	static void		2204130	1					
ANR	2204255	Identifier	strto_id_list		2204130	2					
ANR	2204256	ParameterList	"safe_id_range_list * list , const char * value , const char * * endptr , lookup_func lookup"		2204130	3					
ANR	2204257	Parameter	safe_id_range_list * list	654:26:16169:16192	2204130	0	True				
ANR	2204258	ParameterType	safe_id_range_list *		2204130	0					
ANR	2204259	Identifier	list		2204130	1					
ANR	2204260	Parameter	const char * value	654:52:16195:16211	2204130	1	True				
ANR	2204261	ParameterType	const char *		2204130	0					
ANR	2204262	Identifier	value		2204130	1					
ANR	2204263	Parameter	const char * * endptr	654:71:16214:16232	2204130	2	True				
ANR	2204264	ParameterType	const char * *		2204130	0					
ANR	2204265	Identifier	endptr		2204130	1					
ANR	2204266	Parameter	lookup_func lookup	654:92:16235:16252	2204130	3	True				
ANR	2204267	ParameterType	lookup_func		2204130	0					
ANR	2204268	Identifier	lookup		2204130	1					
ANR	2204269	CFGEntryNode	ENTRY		2204130		True				
ANR	2204270	CFGExitNode	EXIT		2204130		True				
ANR	2204271	Symbol	lookup		2204130						
ANR	2204272	Symbol	errno		2204130						
ANR	2204273	Symbol	NULL		2204130						
ANR	2204274	Symbol	endptr		2204130						
ANR	2204275	Symbol	& endp		2204130						
ANR	2204276	Symbol	* endptr		2204130						
ANR	2204277	Symbol	list		2204130						
ANR	2204278	Symbol	& min_id		2204130						
ANR	2204279	Symbol	EINVAL		2204130						
ANR	2204280	Symbol	skip_whitespace_const		2204130						
ANR	2204281	Symbol	min_id		2204130						
ANR	2204282	Symbol	& max_id		2204130						
ANR	2204283	Symbol	* value		2204130						
ANR	2204284	Symbol	max_id		2204130						
ANR	2204285	Symbol	endp		2204130						
ANR	2204286	Symbol	value		2204130						
ANR	2204287	Function	safe_strto_id_list	717:0:17658:17805							
ANR	2204288	FunctionDef	"safe_strto_id_list (safe_id_range_list * list , const char * value , const char * * endptr)"		2204287	0					
ANR	2204289	CompoundStatement		718:0:17748:17805	2204287	0					
ANR	2204290	ExpressionStatement	"strto_id_list ( list , value , endptr , name_to_error )"	719:4:17754:17803	2204287	0	True				
ANR	2204291	CallExpression	"strto_id_list ( list , value , endptr , name_to_error )"		2204287	0					
ANR	2204292	Callee	strto_id_list		2204287	0					
ANR	2204293	Identifier	strto_id_list		2204287	0					
ANR	2204294	ArgumentList	list		2204287	1					
ANR	2204295	Argument	list		2204287	0					
ANR	2204296	Identifier	list		2204287	0					
ANR	2204297	Argument	value		2204287	1					
ANR	2204298	Identifier	value		2204287	0					
ANR	2204299	Argument	endptr		2204287	2					
ANR	2204300	Identifier	endptr		2204287	0					
ANR	2204301	Argument	name_to_error		2204287	3					
ANR	2204302	Identifier	name_to_error		2204287	0					
ANR	2204303	ReturnType	void		2204287	1					
ANR	2204304	Identifier	safe_strto_id_list		2204287	2					
ANR	2204305	ParameterList	"safe_id_range_list * list , const char * value , const char * * endptr"		2204287	3					
ANR	2204306	Parameter	safe_id_range_list * list	717:24:17682:17705	2204287	0	True				
ANR	2204307	ParameterType	safe_id_range_list *		2204287	0					
ANR	2204308	Identifier	list		2204287	1					
ANR	2204309	Parameter	const char * value	717:50:17708:17724	2204287	1	True				
ANR	2204310	ParameterType	const char *		2204287	0					
ANR	2204311	Identifier	value		2204287	1					
ANR	2204312	Parameter	const char * * endptr	717:69:17727:17745	2204287	2	True				
ANR	2204313	ParameterType	const char * *		2204287	0					
ANR	2204314	Identifier	endptr		2204287	1					
ANR	2204315	CFGEntryNode	ENTRY		2204287		True				
ANR	2204316	CFGExitNode	EXIT		2204287		True				
ANR	2204317	Symbol	name_to_error		2204287						
ANR	2204318	Symbol	endptr		2204287						
ANR	2204319	Symbol	list		2204287						
ANR	2204320	Symbol	value		2204287						
ANR	2204321	Function	safe_strto_uid_list	750:0:18760:18906							
ANR	2204322	FunctionDef	"safe_strto_uid_list (safe_id_range_list * list , const char * value , const char * * endptr)"		2204321	0					
ANR	2204323	CompoundStatement		751:0:18851:18906	2204321	0					
ANR	2204324	ExpressionStatement	"strto_id_list ( list , value , endptr , name_to_uid )"	752:4:18857:18904	2204321	0	True				
ANR	2204325	CallExpression	"strto_id_list ( list , value , endptr , name_to_uid )"		2204321	0					
ANR	2204326	Callee	strto_id_list		2204321	0					
ANR	2204327	Identifier	strto_id_list		2204321	0					
ANR	2204328	ArgumentList	list		2204321	1					
ANR	2204329	Argument	list		2204321	0					
ANR	2204330	Identifier	list		2204321	0					
ANR	2204331	Argument	value		2204321	1					
ANR	2204332	Identifier	value		2204321	0					
ANR	2204333	Argument	endptr		2204321	2					
ANR	2204334	Identifier	endptr		2204321	0					
ANR	2204335	Argument	name_to_uid		2204321	3					
ANR	2204336	Identifier	name_to_uid		2204321	0					
ANR	2204337	ReturnType	void		2204321	1					
ANR	2204338	Identifier	safe_strto_uid_list		2204321	2					
ANR	2204339	ParameterList	"safe_id_range_list * list , const char * value , const char * * endptr"		2204321	3					
ANR	2204340	Parameter	safe_id_range_list * list	750:25:18785:18808	2204321	0	True				
ANR	2204341	ParameterType	safe_id_range_list *		2204321	0					
ANR	2204342	Identifier	list		2204321	1					
ANR	2204343	Parameter	const char * value	750:51:18811:18827	2204321	1	True				
ANR	2204344	ParameterType	const char *		2204321	0					
ANR	2204345	Identifier	value		2204321	1					
ANR	2204346	Parameter	const char * * endptr	750:70:18830:18848	2204321	2	True				
ANR	2204347	ParameterType	const char * *		2204321	0					
ANR	2204348	Identifier	endptr		2204321	1					
ANR	2204349	CFGEntryNode	ENTRY		2204321		True				
ANR	2204350	CFGExitNode	EXIT		2204321		True				
ANR	2204351	Symbol	endptr		2204321						
ANR	2204352	Symbol	list		2204321						
ANR	2204353	Symbol	value		2204321						
ANR	2204354	Symbol	name_to_uid		2204321						
ANR	2204355	Function	safe_strto_gid_list	783:0:19863:20009							
ANR	2204356	FunctionDef	"safe_strto_gid_list (safe_id_range_list * list , const char * value , const char * * endptr)"		2204355	0					
ANR	2204357	CompoundStatement		784:0:19954:20009	2204355	0					
ANR	2204358	ExpressionStatement	"strto_id_list ( list , value , endptr , name_to_gid )"	785:4:19960:20007	2204355	0	True				
ANR	2204359	CallExpression	"strto_id_list ( list , value , endptr , name_to_gid )"		2204355	0					
ANR	2204360	Callee	strto_id_list		2204355	0					
ANR	2204361	Identifier	strto_id_list		2204355	0					
ANR	2204362	ArgumentList	list		2204355	1					
ANR	2204363	Argument	list		2204355	0					
ANR	2204364	Identifier	list		2204355	0					
ANR	2204365	Argument	value		2204355	1					
ANR	2204366	Identifier	value		2204355	0					
ANR	2204367	Argument	endptr		2204355	2					
ANR	2204368	Identifier	endptr		2204355	0					
ANR	2204369	Argument	name_to_gid		2204355	3					
ANR	2204370	Identifier	name_to_gid		2204355	0					
ANR	2204371	ReturnType	void		2204355	1					
ANR	2204372	Identifier	safe_strto_gid_list		2204355	2					
ANR	2204373	ParameterList	"safe_id_range_list * list , const char * value , const char * * endptr"		2204355	3					
ANR	2204374	Parameter	safe_id_range_list * list	783:25:19888:19911	2204355	0	True				
ANR	2204375	ParameterType	safe_id_range_list *		2204355	0					
ANR	2204376	Identifier	list		2204355	1					
ANR	2204377	Parameter	const char * value	783:51:19914:19930	2204355	1	True				
ANR	2204378	ParameterType	const char *		2204355	0					
ANR	2204379	Identifier	value		2204355	1					
ANR	2204380	Parameter	const char * * endptr	783:70:19933:19951	2204355	2	True				
ANR	2204381	ParameterType	const char * *		2204355	0					
ANR	2204382	Identifier	endptr		2204355	1					
ANR	2204383	CFGEntryNode	ENTRY		2204355		True				
ANR	2204384	CFGExitNode	EXIT		2204355		True				
ANR	2204385	Symbol	endptr		2204355						
ANR	2204386	Symbol	list		2204355						
ANR	2204387	Symbol	value		2204355						
ANR	2204388	Symbol	name_to_gid		2204355						
ANR	2204389	Function	parse_id_list	813:0:20750:21130							
ANR	2204390	FunctionDef	"parse_id_list (safe_id_range_list * list , const char * value , lookup_func lookup)"		2204389	0					
ANR	2204391	CompoundStatement		814:0:20840:21130	2204389	0					
ANR	2204392	IdentifierDeclStatement	const char * endp ;	815:4:20846:20862	2204389	0	True				
ANR	2204393	IdentifierDecl	* endp		2204389	0					
ANR	2204394	IdentifierDeclType	const char *		2204389	0					
ANR	2204395	Identifier	endp		2204389	1					
ANR	2204396	ExpressionStatement	"strto_id_list ( list , value , & endp , lookup )"	817:4:20869:20910	2204389	1	True				
ANR	2204397	CallExpression	"strto_id_list ( list , value , & endp , lookup )"		2204389	0					
ANR	2204398	Callee	strto_id_list		2204389	0					
ANR	2204399	Identifier	strto_id_list		2204389	0					
ANR	2204400	ArgumentList	list		2204389	1					
ANR	2204401	Argument	list		2204389	0					
ANR	2204402	Identifier	list		2204389	0					
ANR	2204403	Argument	value		2204389	1					
ANR	2204404	Identifier	value		2204389	0					
ANR	2204405	Argument	& endp		2204389	2					
ANR	2204406	UnaryOperationExpression	& endp		2204389	0					
ANR	2204407	UnaryOperator	&		2204389	0					
ANR	2204408	Identifier	endp		2204389	1					
ANR	2204409	Argument	lookup		2204389	3					
ANR	2204410	Identifier	lookup		2204389	0					
ANR	2204411	IfStatement	if ( errno != 0 )		2204389	2					
ANR	2204412	Condition	errno != 0	819:8:20921:20930	2204389	0	True				
ANR	2204413	EqualityExpression	errno != 0		2204389	0		!=			
ANR	2204414	Identifier	errno		2204389	0					
ANR	2204415	PrimaryExpression	0		2204389	1					
ANR	2204416	CompoundStatement		6:21:93:93	2204389	1					
ANR	2204417	ReturnStatement	return - 1 ;	820:1:20937:20946	2204389	0	True				
ANR	2204418	UnaryOperationExpression	- 1		2204389	0					
ANR	2204419	UnaryOperator	-		2204389	0					
ANR	2204420	PrimaryExpression	1		2204389	1					
ANR	2204421	ExpressionStatement	endp = skip_whitespace_const ( endp )	824:4:21035:21069	2204389	3	True				
ANR	2204422	AssignmentExpression	endp = skip_whitespace_const ( endp )		2204389	0		=			
ANR	2204423	Identifier	endp		2204389	0					
ANR	2204424	CallExpression	skip_whitespace_const ( endp )		2204389	1					
ANR	2204425	Callee	skip_whitespace_const		2204389	0					
ANR	2204426	Identifier	skip_whitespace_const		2204389	0					
ANR	2204427	ArgumentList	endp		2204389	1					
ANR	2204428	Argument	endp		2204389	0					
ANR	2204429	Identifier	endp		2204389	0					
ANR	2204430	IfStatement	if ( * endp != '\\0' )		2204389	4					
ANR	2204431	Condition	* endp != '\\0'	825:8:21079:21091	2204389	0	True				
ANR	2204432	EqualityExpression	* endp != '\\0'		2204389	0		!=			
ANR	2204433	UnaryOperationExpression	* endp		2204389	0					
ANR	2204434	UnaryOperator	*		2204389	0					
ANR	2204435	Identifier	endp		2204389	1					
ANR	2204436	PrimaryExpression	'\\0'		2204389	1					
ANR	2204437	CompoundStatement		12:24:254:254	2204389	1					
ANR	2204438	ReturnStatement	return - 1 ;	826:1:21098:21107	2204389	0	True				
ANR	2204439	UnaryOperationExpression	- 1		2204389	0					
ANR	2204440	UnaryOperator	-		2204389	0					
ANR	2204441	PrimaryExpression	1		2204389	1					
ANR	2204442	ReturnStatement	return 0 ;	829:4:21120:21128	2204389	5	True				
ANR	2204443	PrimaryExpression	0		2204389	0					
ANR	2204444	ReturnType	static int		2204389	1					
ANR	2204445	Identifier	parse_id_list		2204389	2					
ANR	2204446	ParameterList	"safe_id_range_list * list , const char * value , lookup_func lookup"		2204389	3					
ANR	2204447	Parameter	safe_id_range_list * list	813:25:20775:20798	2204389	0	True				
ANR	2204448	ParameterType	safe_id_range_list *		2204389	0					
ANR	2204449	Identifier	list		2204389	1					
ANR	2204450	Parameter	const char * value	813:51:20801:20817	2204389	1	True				
ANR	2204451	ParameterType	const char *		2204389	0					
ANR	2204452	Identifier	value		2204389	1					
ANR	2204453	Parameter	lookup_func lookup	813:70:20820:20837	2204389	2	True				
ANR	2204454	ParameterType	lookup_func		2204389	0					
ANR	2204455	Identifier	lookup		2204389	1					
ANR	2204456	CFGEntryNode	ENTRY		2204389		True				
ANR	2204457	CFGExitNode	EXIT		2204389		True				
ANR	2204458	Symbol	lookup		2204389						
ANR	2204459	Symbol	skip_whitespace_const		2204389						
ANR	2204460	Symbol	errno		2204389						
ANR	2204461	Symbol	& endp		2204389						
ANR	2204462	Symbol	* endp		2204389						
ANR	2204463	Symbol	endp		2204389						
ANR	2204464	Symbol	list		2204389						
ANR	2204465	Symbol	value		2204389						
ANR	2204466	Function	safe_parse_id_list	856:0:21775:21899							
ANR	2204467	FunctionDef	"safe_parse_id_list (safe_id_range_list * list , const char * value)"		2204466	0					
ANR	2204468	CompoundStatement		857:0:21843:21899	2204466	0					
ANR	2204469	ReturnStatement	"return parse_id_list ( list , value , name_to_error ) ;"	858:4:21849:21897	2204466	0	True				
ANR	2204470	CallExpression	"parse_id_list ( list , value , name_to_error )"		2204466	0					
ANR	2204471	Callee	parse_id_list		2204466	0					
ANR	2204472	Identifier	parse_id_list		2204466	0					
ANR	2204473	ArgumentList	list		2204466	1					
ANR	2204474	Argument	list		2204466	0					
ANR	2204475	Identifier	list		2204466	0					
ANR	2204476	Argument	value		2204466	1					
ANR	2204477	Identifier	value		2204466	0					
ANR	2204478	Argument	name_to_error		2204466	2					
ANR	2204479	Identifier	name_to_error		2204466	0					
ANR	2204480	ReturnType	int		2204466	1					
ANR	2204481	Identifier	safe_parse_id_list		2204466	2					
ANR	2204482	ParameterList	"safe_id_range_list * list , const char * value"		2204466	3					
ANR	2204483	Parameter	safe_id_range_list * list	856:23:21798:21821	2204466	0	True				
ANR	2204484	ParameterType	safe_id_range_list *		2204466	0					
ANR	2204485	Identifier	list		2204466	1					
ANR	2204486	Parameter	const char * value	856:49:21824:21840	2204466	1	True				
ANR	2204487	ParameterType	const char *		2204466	0					
ANR	2204488	Identifier	value		2204466	1					
ANR	2204489	CFGEntryNode	ENTRY		2204466		True				
ANR	2204490	CFGExitNode	EXIT		2204466		True				
ANR	2204491	Symbol	name_to_error		2204466						
ANR	2204492	Symbol	parse_id_list		2204466						
ANR	2204493	Symbol	list		2204466						
ANR	2204494	Symbol	value		2204466						
ANR	2204495	Function	safe_parse_uid_list	886:0:22645:22768							
ANR	2204496	FunctionDef	"safe_parse_uid_list (safe_id_range_list * list , const char * value)"		2204495	0					
ANR	2204497	CompoundStatement		887:0:22714:22768	2204495	0					
ANR	2204498	ReturnStatement	"return parse_id_list ( list , value , name_to_uid ) ;"	888:4:22720:22766	2204495	0	True				
ANR	2204499	CallExpression	"parse_id_list ( list , value , name_to_uid )"		2204495	0					
ANR	2204500	Callee	parse_id_list		2204495	0					
ANR	2204501	Identifier	parse_id_list		2204495	0					
ANR	2204502	ArgumentList	list		2204495	1					
ANR	2204503	Argument	list		2204495	0					
ANR	2204504	Identifier	list		2204495	0					
ANR	2204505	Argument	value		2204495	1					
ANR	2204506	Identifier	value		2204495	0					
ANR	2204507	Argument	name_to_uid		2204495	2					
ANR	2204508	Identifier	name_to_uid		2204495	0					
ANR	2204509	ReturnType	int		2204495	1					
ANR	2204510	Identifier	safe_parse_uid_list		2204495	2					
ANR	2204511	ParameterList	"safe_id_range_list * list , const char * value"		2204495	3					
ANR	2204512	Parameter	safe_id_range_list * list	886:24:22669:22692	2204495	0	True				
ANR	2204513	ParameterType	safe_id_range_list *		2204495	0					
ANR	2204514	Identifier	list		2204495	1					
ANR	2204515	Parameter	const char * value	886:50:22695:22711	2204495	1	True				
ANR	2204516	ParameterType	const char *		2204495	0					
ANR	2204517	Identifier	value		2204495	1					
ANR	2204518	CFGEntryNode	ENTRY		2204495		True				
ANR	2204519	CFGExitNode	EXIT		2204495		True				
ANR	2204520	Symbol	parse_id_list		2204495						
ANR	2204521	Symbol	list		2204495						
ANR	2204522	Symbol	value		2204495						
ANR	2204523	Symbol	name_to_uid		2204495						
ANR	2204524	Function	safe_parse_gid_list	916:0:23515:23638							
ANR	2204525	FunctionDef	"safe_parse_gid_list (safe_id_range_list * list , const char * value)"		2204524	0					
ANR	2204526	CompoundStatement		917:0:23584:23638	2204524	0					
ANR	2204527	ReturnStatement	"return parse_id_list ( list , value , name_to_gid ) ;"	918:4:23590:23636	2204524	0	True				
ANR	2204528	CallExpression	"parse_id_list ( list , value , name_to_gid )"		2204524	0					
ANR	2204529	Callee	parse_id_list		2204524	0					
ANR	2204530	Identifier	parse_id_list		2204524	0					
ANR	2204531	ArgumentList	list		2204524	1					
ANR	2204532	Argument	list		2204524	0					
ANR	2204533	Identifier	list		2204524	0					
ANR	2204534	Argument	value		2204524	1					
ANR	2204535	Identifier	value		2204524	0					
ANR	2204536	Argument	name_to_gid		2204524	2					
ANR	2204537	Identifier	name_to_gid		2204524	0					
ANR	2204538	ReturnType	int		2204524	1					
ANR	2204539	Identifier	safe_parse_gid_list		2204524	2					
ANR	2204540	ParameterList	"safe_id_range_list * list , const char * value"		2204524	3					
ANR	2204541	Parameter	safe_id_range_list * list	916:24:23539:23562	2204524	0	True				
ANR	2204542	ParameterType	safe_id_range_list *		2204524	0					
ANR	2204543	Identifier	list		2204524	1					
ANR	2204544	Parameter	const char * value	916:50:23565:23581	2204524	1	True				
ANR	2204545	ParameterType	const char *		2204524	0					
ANR	2204546	Identifier	value		2204524	1					
ANR	2204547	CFGEntryNode	ENTRY		2204524		True				
ANR	2204548	CFGExitNode	EXIT		2204524		True				
ANR	2204549	Symbol	parse_id_list		2204524						
ANR	2204550	Symbol	list		2204524						
ANR	2204551	Symbol	value		2204524						
ANR	2204552	Symbol	name_to_gid		2204524						
