command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	514443	File	data/converged/CVE-2011-4930_htcondor/ResAttributes.cpp								
ANR	514444	Function	MachAttributes :: MachAttributes	29:0:926:3247							
ANR	514445	FunctionDef	MachAttributes :: MachAttributes ()		514444	0					
ANR	514446	CompoundStatement		31:0:1021:3247	514444	0					
ANR	514447	ExpressionStatement	m_mips = - 1	32:1:1024:1035	514444	0	True				
ANR	514448	AssignmentExpression	m_mips = - 1		514444	0		=			
ANR	514449	Identifier	m_mips		514444	0					
ANR	514450	UnaryOperationExpression	- 1		514444	1					
ANR	514451	UnaryOperator	-		514444	0					
ANR	514452	PrimaryExpression	1		514444	1					
ANR	514453	ExpressionStatement	m_kflops = - 1	33:1:1038:1051	514444	1	True				
ANR	514454	AssignmentExpression	m_kflops = - 1		514444	0		=			
ANR	514455	Identifier	m_kflops		514444	0					
ANR	514456	UnaryOperationExpression	- 1		514444	1					
ANR	514457	UnaryOperator	-		514444	0					
ANR	514458	PrimaryExpression	1		514444	1					
ANR	514459	ExpressionStatement	m_last_benchmark = 0	34:1:1054:1074	514444	2	True				
ANR	514460	AssignmentExpression	m_last_benchmark = 0		514444	0		=			
ANR	514461	Identifier	m_last_benchmark		514444	0					
ANR	514462	PrimaryExpression	0		514444	1					
ANR	514463	ExpressionStatement	m_last_keypress = time ( 0 ) - 1	35:1:1077:1104	514444	3	True				
ANR	514464	AssignmentExpression	m_last_keypress = time ( 0 ) - 1		514444	0		=			
ANR	514465	Identifier	m_last_keypress		514444	0					
ANR	514466	AdditiveExpression	time ( 0 ) - 1		514444	1		-			
ANR	514467	CallExpression	time ( 0 )		514444	0					
ANR	514468	Callee	time		514444	0					
ANR	514469	Identifier	time		514444	0					
ANR	514470	ArgumentList	0		514444	1					
ANR	514471	Argument	0		514444	0					
ANR	514472	PrimaryExpression	0		514444	0					
ANR	514473	PrimaryExpression	1		514444	1					
ANR	514474	ExpressionStatement	m_seen_keypress = false	36:1:1107:1130	514444	4	True				
ANR	514475	AssignmentExpression	m_seen_keypress = false		514444	0		=			
ANR	514476	Identifier	m_seen_keypress		514444	0					
ANR	514477	Identifier	false		514444	1					
ANR	514478	ExpressionStatement	m_arch = NULL	38:1:1134:1147	514444	5	True				
ANR	514479	AssignmentExpression	m_arch = NULL		514444	0		=			
ANR	514480	Identifier	m_arch		514444	0					
ANR	514481	Identifier	NULL		514444	1					
ANR	514482	ExpressionStatement	m_opsys = NULL	39:1:1150:1164	514444	6	True				
ANR	514483	AssignmentExpression	m_opsys = NULL		514444	0		=			
ANR	514484	Identifier	m_opsys		514444	0					
ANR	514485	Identifier	NULL		514444	1					
ANR	514486	ExpressionStatement	m_opsysver = 0	40:1:1167:1181	514444	7	True				
ANR	514487	AssignmentExpression	m_opsysver = 0		514444	0		=			
ANR	514488	Identifier	m_opsysver		514444	0					
ANR	514489	PrimaryExpression	0		514444	1					
ANR	514490	ExpressionStatement	m_opsys_and_ver = NULL	41:1:1184:1206	514444	8	True				
ANR	514491	AssignmentExpression	m_opsys_and_ver = NULL		514444	0		=			
ANR	514492	Identifier	m_opsys_and_ver		514444	0					
ANR	514493	Identifier	NULL		514444	1					
ANR	514494	ExpressionStatement	m_uid_domain = NULL	42:1:1209:1228	514444	9	True				
ANR	514495	AssignmentExpression	m_uid_domain = NULL		514444	0		=			
ANR	514496	Identifier	m_uid_domain		514444	0					
ANR	514497	Identifier	NULL		514444	1					
ANR	514498	ExpressionStatement	m_filesystem_domain = NULL	43:1:1231:1257	514444	10	True				
ANR	514499	AssignmentExpression	m_filesystem_domain = NULL		514444	0		=			
ANR	514500	Identifier	m_filesystem_domain		514444	0					
ANR	514501	Identifier	NULL		514444	1					
ANR	514502	ExpressionStatement	m_idle_interval = - 1	44:1:1260:1280	514444	11	True				
ANR	514503	AssignmentExpression	m_idle_interval = - 1		514444	0		=			
ANR	514504	Identifier	m_idle_interval		514444	0					
ANR	514505	UnaryOperationExpression	- 1		514444	1					
ANR	514506	UnaryOperator	-		514444	0					
ANR	514507	PrimaryExpression	1		514444	1					
ANR	514508	ExpressionStatement	m_ckptpltfrm = NULL	45:1:1283:1302	514444	12	True				
ANR	514509	AssignmentExpression	m_ckptpltfrm = NULL		514444	0		=			
ANR	514510	Identifier	m_ckptpltfrm		514444	0					
ANR	514511	Identifier	NULL		514444	1					
ANR	514512	ExpressionStatement	m_clock_day = - 1	47:1:1306:1322	514444	13	True				
ANR	514513	AssignmentExpression	m_clock_day = - 1		514444	0		=			
ANR	514514	Identifier	m_clock_day		514444	0					
ANR	514515	UnaryOperationExpression	- 1		514444	1					
ANR	514516	UnaryOperator	-		514444	0					
ANR	514517	PrimaryExpression	1		514444	1					
ANR	514518	ExpressionStatement	m_clock_min = - 1	48:1:1325:1341	514444	14	True				
ANR	514519	AssignmentExpression	m_clock_min = - 1		514444	0		=			
ANR	514520	Identifier	m_clock_min		514444	0					
ANR	514521	UnaryOperationExpression	- 1		514444	1					
ANR	514522	UnaryOperator	-		514444	0					
ANR	514523	PrimaryExpression	1		514444	1					
ANR	514524	ExpressionStatement	m_condor_load = - 1.0	49:1:1344:1364	514444	15	True				
ANR	514525	AssignmentExpression	m_condor_load = - 1.0		514444	0		=			
ANR	514526	Identifier	m_condor_load		514444	0					
ANR	514527	UnaryOperationExpression	- 1.0		514444	1					
ANR	514528	UnaryOperator	-		514444	0					
ANR	514529	PrimaryExpression	1.0		514444	1					
ANR	514530	ExpressionStatement	m_console_idle = 0	50:1:1367:1385	514444	16	True				
ANR	514531	AssignmentExpression	m_console_idle = 0		514444	0		=			
ANR	514532	Identifier	m_console_idle		514444	0					
ANR	514533	PrimaryExpression	0		514444	1					
ANR	514534	ExpressionStatement	m_idle = 0	51:1:1388:1398	514444	17	True				
ANR	514535	AssignmentExpression	m_idle = 0		514444	0		=			
ANR	514536	Identifier	m_idle		514444	0					
ANR	514537	PrimaryExpression	0		514444	1					
ANR	514538	ExpressionStatement	m_load = - 1.0	52:1:1401:1414	514444	18	True				
ANR	514539	AssignmentExpression	m_load = - 1.0		514444	0		=			
ANR	514540	Identifier	m_load		514444	0					
ANR	514541	UnaryOperationExpression	- 1.0		514444	1					
ANR	514542	UnaryOperator	-		514444	0					
ANR	514543	PrimaryExpression	1.0		514444	1					
ANR	514544	ExpressionStatement	m_owner_load = - 1.0	53:1:1417:1436	514444	19	True				
ANR	514545	AssignmentExpression	m_owner_load = - 1.0		514444	0		=			
ANR	514546	Identifier	m_owner_load		514444	0					
ANR	514547	UnaryOperationExpression	- 1.0		514444	1					
ANR	514548	UnaryOperator	-		514444	0					
ANR	514549	PrimaryExpression	1.0		514444	1					
ANR	514550	ExpressionStatement	m_virt_mem = 0	54:1:1439:1453	514444	20	True				
ANR	514551	AssignmentExpression	m_virt_mem = 0		514444	0		=			
ANR	514552	Identifier	m_virt_mem		514444	0					
ANR	514553	PrimaryExpression	0		514444	1					
ANR	514554	ExpressionStatement	m_num_cpus = sysapi_ncpus ( )	59:1:1647:1674	514444	21	True				
ANR	514555	AssignmentExpression	m_num_cpus = sysapi_ncpus ( )		514444	0		=			
ANR	514556	Identifier	m_num_cpus		514444	0					
ANR	514557	CallExpression	sysapi_ncpus ( )		514444	1					
ANR	514558	Callee	sysapi_ncpus		514444	0					
ANR	514559	Identifier	sysapi_ncpus		514444	0					
ANR	514560	ArgumentList			514444	1					
ANR	514561	ExpressionStatement	m_num_real_cpus = sysapi_ncpus_raw ( )	61:1:1678:1714	514444	22	True				
ANR	514562	AssignmentExpression	m_num_real_cpus = sysapi_ncpus_raw ( )		514444	0		=			
ANR	514563	Identifier	m_num_real_cpus		514444	0					
ANR	514564	CallExpression	sysapi_ncpus_raw ( )		514444	1					
ANR	514565	Callee	sysapi_ncpus_raw		514444	0					
ANR	514566	Identifier	sysapi_ncpus_raw		514444	0					
ANR	514567	ArgumentList			514444	1					
ANR	514568	ExpressionStatement	m_phys_mem = sysapi_phys_memory ( )	66:1:1897:1930	514444	23	True				
ANR	514569	AssignmentExpression	m_phys_mem = sysapi_phys_memory ( )		514444	0		=			
ANR	514570	Identifier	m_phys_mem		514444	0					
ANR	514571	CallExpression	sysapi_phys_memory ( )		514444	1					
ANR	514572	Callee	sysapi_phys_memory		514444	0					
ANR	514573	Identifier	sysapi_phys_memory		514444	0					
ANR	514574	ArgumentList			514444	1					
ANR	514575	IfStatement	if ( m_phys_mem <= 0 )		514444	24					
ANR	514576	Condition	m_phys_mem <= 0	67:5:1937:1951	514444	0	True				
ANR	514577	RelationalExpression	m_phys_mem <= 0		514444	0		<=			
ANR	514578	Identifier	m_phys_mem		514444	0					
ANR	514579	PrimaryExpression	0		514444	1					
ANR	514580	CompoundStatement		37:23:933:933	514444	1					
ANR	514581	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error computing physical memory with calc_phys_mem().\\n"" )"	68:2:1959:2043	514444	0	True				
ANR	514582	CallExpression	"dprintf ( D_ALWAYS , ""Error computing physical memory with calc_phys_mem().\\n"" )"		514444	0					
ANR	514583	Callee	dprintf		514444	0					
ANR	514584	Identifier	dprintf		514444	0					
ANR	514585	ArgumentList	D_ALWAYS		514444	1					
ANR	514586	Argument	D_ALWAYS		514444	0					
ANR	514587	Identifier	D_ALWAYS		514444	0					
ANR	514588	Argument	"""Error computing physical memory with calc_phys_mem().\\n"""		514444	1					
ANR	514589	PrimaryExpression	"""Error computing physical memory with calc_phys_mem().\\n"""		514444	0					
ANR	514590	ExpressionStatement	"dprintf ( D_ALWAYS | D_NOHEADER , ""\\t\\tMEMORY parameter not defined in config file.\\n"" )"	70:2:2047:2139	514444	1	True				
ANR	514591	CallExpression	"dprintf ( D_ALWAYS | D_NOHEADER , ""\\t\\tMEMORY parameter not defined in config file.\\n"" )"		514444	0					
ANR	514592	Callee	dprintf		514444	0					
ANR	514593	Identifier	dprintf		514444	0					
ANR	514594	ArgumentList	D_ALWAYS | D_NOHEADER		514444	1					
ANR	514595	Argument	D_ALWAYS | D_NOHEADER		514444	0					
ANR	514596	InclusiveOrExpression	D_ALWAYS | D_NOHEADER		514444	0		|			
ANR	514597	Identifier	D_ALWAYS		514444	0					
ANR	514598	Identifier	D_NOHEADER		514444	1					
ANR	514599	Argument	"""\\t\\tMEMORY parameter not defined in config file.\\n"""		514444	1					
ANR	514600	PrimaryExpression	"""\\t\\tMEMORY parameter not defined in config file.\\n"""		514444	0					
ANR	514601	ExpressionStatement	"dprintf ( D_ALWAYS | D_NOHEADER , ""\\t\\tTry setting MEMORY to the number of megabytes of RAM.\\n"" )"	72:2:2143:2249	514444	2	True				
ANR	514602	CallExpression	"dprintf ( D_ALWAYS | D_NOHEADER , ""\\t\\tTry setting MEMORY to the number of megabytes of RAM.\\n"" )"		514444	0					
ANR	514603	Callee	dprintf		514444	0					
ANR	514604	Identifier	dprintf		514444	0					
ANR	514605	ArgumentList	D_ALWAYS | D_NOHEADER		514444	1					
ANR	514606	Argument	D_ALWAYS | D_NOHEADER		514444	0					
ANR	514607	InclusiveOrExpression	D_ALWAYS | D_NOHEADER		514444	0		|			
ANR	514608	Identifier	D_ALWAYS		514444	0					
ANR	514609	Identifier	D_NOHEADER		514444	1					
ANR	514610	Argument	"""\\t\\tTry setting MEMORY to the number of megabytes of RAM.\\n"""		514444	1					
ANR	514611	PrimaryExpression	"""\\t\\tTry setting MEMORY to the number of megabytes of RAM.\\n"""		514444	0					
ANR	514612	ExpressionStatement	"EXCEPT ( ""Can't compute physical memory."" )"	75:2:2253:2295	514444	3	True				
ANR	514613	CallExpression	"EXCEPT ( ""Can't compute physical memory."" )"		514444	0					
ANR	514614	Callee	EXCEPT		514444	0					
ANR	514615	Identifier	EXCEPT		514444	0					
ANR	514616	ArgumentList	"""Can't compute physical memory."""		514444	1					
ANR	514617	Argument	"""Can't compute physical memory."""		514444	0					
ANR	514618	PrimaryExpression	"""Can't compute physical memory."""		514444	0					
ANR	514619	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Memory: Detected %d megs RAM\\n"" , m_phys_mem )"	78:1:2302:2370	514444	25	True				
ANR	514620	CallExpression	"dprintf ( D_FULLDEBUG , ""Memory: Detected %d megs RAM\\n"" , m_phys_mem )"		514444	0					
ANR	514621	Callee	dprintf		514444	0					
ANR	514622	Identifier	dprintf		514444	0					
ANR	514623	ArgumentList	D_FULLDEBUG		514444	1					
ANR	514624	Argument	D_FULLDEBUG		514444	0					
ANR	514625	Identifier	D_FULLDEBUG		514444	0					
ANR	514626	Argument	"""Memory: Detected %d megs RAM\\n"""		514444	1					
ANR	514627	PrimaryExpression	"""Memory: Detected %d megs RAM\\n"""		514444	0					
ANR	514628	Argument	m_phys_mem		514444	2					
ANR	514629	Identifier	m_phys_mem		514444	0					
ANR	514630	ExpressionStatement	m_ckptpltfrm = strdup ( sysapi_ckptpltfrm ( ) )	81:1:2434:2476	514444	26	True				
ANR	514631	AssignmentExpression	m_ckptpltfrm = strdup ( sysapi_ckptpltfrm ( ) )		514444	0		=			
ANR	514632	Identifier	m_ckptpltfrm		514444	0					
ANR	514633	CallExpression	strdup ( sysapi_ckptpltfrm ( ) )		514444	1					
ANR	514634	Callee	strdup		514444	0					
ANR	514635	Identifier	strdup		514444	0					
ANR	514636	ArgumentList	sysapi_ckptpltfrm ( )		514444	1					
ANR	514637	Argument	sysapi_ckptpltfrm ( )		514444	0					
ANR	514638	CallExpression	sysapi_ckptpltfrm ( )		514444	0					
ANR	514639	Callee	sysapi_ckptpltfrm		514444	0					
ANR	514640	Identifier	sysapi_ckptpltfrm		514444	0					
ANR	514641	ArgumentList			514444	1					
ANR	514642	ExpressionStatement	"ZeroMemory ( & m_window_version_info , sizeof ( OSVERSIONINFOEX ) )"	86:1:2577:2642	514444	27	True				
ANR	514643	CallExpression	"ZeroMemory ( & m_window_version_info , sizeof ( OSVERSIONINFOEX ) )"		514444	0					
ANR	514644	Callee	ZeroMemory		514444	0					
ANR	514645	Identifier	ZeroMemory		514444	0					
ANR	514646	ArgumentList	& m_window_version_info		514444	1					
ANR	514647	Argument	& m_window_version_info		514444	0					
ANR	514648	UnaryOperationExpression	& m_window_version_info		514444	0					
ANR	514649	UnaryOperator	&		514444	0					
ANR	514650	Identifier	m_window_version_info		514444	1					
ANR	514651	Argument	sizeof ( OSVERSIONINFOEX )		514444	1					
ANR	514652	SizeofExpression	sizeof ( OSVERSIONINFOEX )		514444	0					
ANR	514653	Sizeof	sizeof		514444	0					
ANR	514654	SizeofOperand	OSVERSIONINFOEX		514444	1					
ANR	514655	ExpressionStatement	m_window_version_info . dwOSVersionInfoSize = sizeof ( OSVERSIONINFOEX )	87:1:2645:2718	514444	28	True				
ANR	514656	AssignmentExpression	m_window_version_info . dwOSVersionInfoSize = sizeof ( OSVERSIONINFOEX )		514444	0		=			
ANR	514657	MemberAccess	m_window_version_info . dwOSVersionInfoSize		514444	0					
ANR	514658	Identifier	m_window_version_info		514444	0					
ANR	514659	Identifier	dwOSVersionInfoSize		514444	1					
ANR	514660	SizeofExpression	sizeof ( OSVERSIONINFOEX )		514444	1					
ANR	514661	Sizeof	sizeof		514444	0					
ANR	514662	SizeofOperand	OSVERSIONINFOEX		514444	1					
ANR	514663	ExpressionStatement	m_got_windows_version_info = GetVersionEx ( ( OSVERSIONINFO * ) & m_window_version_info )	89:1:2722:2810	514444	29	True				
ANR	514664	AssignmentExpression	m_got_windows_version_info = GetVersionEx ( ( OSVERSIONINFO * ) & m_window_version_info )		514444	0		=			
ANR	514665	Identifier	m_got_windows_version_info		514444	0					
ANR	514666	CallExpression	GetVersionEx ( ( OSVERSIONINFO * ) & m_window_version_info )		514444	1					
ANR	514667	Callee	GetVersionEx		514444	0					
ANR	514668	Identifier	GetVersionEx		514444	0					
ANR	514669	ArgumentList	( OSVERSIONINFO * ) & m_window_version_info		514444	1					
ANR	514670	Argument	( OSVERSIONINFO * ) & m_window_version_info		514444	0					
ANR	514671	CastExpression	( OSVERSIONINFO * ) & m_window_version_info		514444	0					
ANR	514672	CastTarget	OSVERSIONINFO *		514444	0					
ANR	514673	UnaryOperationExpression	& m_window_version_info		514444	1					
ANR	514674	UnaryOperator	&		514444	0					
ANR	514675	Identifier	m_window_version_info		514444	1					
ANR	514676	IfStatement	if ( ! m_got_windows_version_info )		514444	30					
ANR	514677	Condition	! m_got_windows_version_info	91:6:2818:2844	514444	0	True				
ANR	514678	UnaryOperationExpression	! m_got_windows_version_info		514444	0					
ANR	514679	UnaryOperator	!		514444	0					
ANR	514680	Identifier	m_got_windows_version_info		514444	1					
ANR	514681	CompoundStatement		61:36:1826:1826	514444	1					
ANR	514682	ExpressionStatement	m_window_version_info . dwOSVersionInfoSize = sizeof ( OSVERSIONINFO )	92:2:2852:2924	514444	0	True				
ANR	514683	AssignmentExpression	m_window_version_info . dwOSVersionInfoSize = sizeof ( OSVERSIONINFO )		514444	0		=			
ANR	514684	MemberAccess	m_window_version_info . dwOSVersionInfoSize		514444	0					
ANR	514685	Identifier	m_window_version_info		514444	0					
ANR	514686	Identifier	dwOSVersionInfoSize		514444	1					
ANR	514687	SizeofExpression	sizeof ( OSVERSIONINFO )		514444	1					
ANR	514688	Sizeof	sizeof		514444	0					
ANR	514689	SizeofOperand	OSVERSIONINFO		514444	1					
ANR	514690	ExpressionStatement	m_got_windows_version_info = GetVersionEx ( ( OSVERSIONINFO * ) & m_window_version_info )	94:2:2929:3018	514444	1	True				
ANR	514691	AssignmentExpression	m_got_windows_version_info = GetVersionEx ( ( OSVERSIONINFO * ) & m_window_version_info )		514444	0		=			
ANR	514692	Identifier	m_got_windows_version_info		514444	0					
ANR	514693	CallExpression	GetVersionEx ( ( OSVERSIONINFO * ) & m_window_version_info )		514444	1					
ANR	514694	Callee	GetVersionEx		514444	0					
ANR	514695	Identifier	GetVersionEx		514444	0					
ANR	514696	ArgumentList	( OSVERSIONINFO * ) & m_window_version_info		514444	1					
ANR	514697	Argument	( OSVERSIONINFO * ) & m_window_version_info		514444	0					
ANR	514698	CastExpression	( OSVERSIONINFO * ) & m_window_version_info		514444	0					
ANR	514699	CastTarget	OSVERSIONINFO *		514444	0					
ANR	514700	UnaryOperationExpression	& m_window_version_info		514444	1					
ANR	514701	UnaryOperator	&		514444	0					
ANR	514702	Identifier	m_window_version_info		514444	1					
ANR	514703	IfStatement	if ( ! m_got_windows_version_info )		514444	2					
ANR	514704	Condition	! m_got_windows_version_info	96:7:3027:3053	514444	0	True				
ANR	514705	UnaryOperationExpression	! m_got_windows_version_info		514444	0					
ANR	514706	UnaryOperator	!		514444	0					
ANR	514707	Identifier	m_got_windows_version_info		514444	1					
ANR	514708	CompoundStatement		66:37:2035:2035	514444	1					
ANR	514709	Statement	dprintf	97:3:3062:3068	514444	0	True				
ANR	514710	Statement	(	97:11:3070:3070	514444	1	True				
ANR	514711	Statement	D_ALWAYS	97:13:3072:3079	514444	2	True				
ANR	514712	Statement	","	97:21:3080:3080	514444	3	True				
ANR	514713	Statement	"""MachAttributes: failed to """	97:23:3082:3109	514444	4	True				
ANR	514714	Statement	"""get Windows version information.\\n"""	98:4:3115:3150	514444	5	True				
ANR	514715	Statement	)	98:41:3152:3152	514444	6	True				
ANR	514716	ExpressionStatement		98:42:3153:3153	514444	7	True				
ANR	514717	ExpressionStatement	m_local_credd = NULL	101:1:3163:3183	514444	31	True				
ANR	514718	AssignmentExpression	m_local_credd = NULL		514444	0		=			
ANR	514719	Identifier	m_local_credd		514444	0					
ANR	514720	Identifier	NULL		514444	1					
ANR	514721	ExpressionStatement	m_last_credd_test = 0	102:1:3186:3207	514444	32	True				
ANR	514722	AssignmentExpression	m_last_credd_test = 0		514444	0		=			
ANR	514723	Identifier	m_last_credd_test		514444	0					
ANR	514724	PrimaryExpression	0		514444	1					
ANR	514725	ExpressionStatement	m_dot_Net_Versions = NULL	103:4:3213:3238	514444	33	True				
ANR	514726	AssignmentExpression	m_dot_Net_Versions = NULL		514444	0		=			
ANR	514727	Identifier	m_dot_Net_Versions		514444	0					
ANR	514728	Identifier	NULL		514444	1					
ANR	514729	Identifier	MachAttributes :: MachAttributes		514444	1					
ANR	514730	ParameterList			514444	2					
ANR	514731	CFGEntryNode	ENTRY		514444		True				
ANR	514732	CFGExitNode	EXIT		514444		True				
ANR	514733	Symbol	m_arch		514444						
ANR	514734	Symbol	m_kflops		514444						
ANR	514735	Symbol	m_ckptpltfrm		514444						
ANR	514736	Symbol	m_idle_interval		514444						
ANR	514737	Symbol	m_local_credd		514444						
ANR	514738	Symbol	m_opsysver		514444						
ANR	514739	Symbol	m_idle		514444						
ANR	514740	Symbol	m_phys_mem		514444						
ANR	514741	Symbol	m_opsys		514444						
ANR	514742	Symbol	m_console_idle		514444						
ANR	514743	Symbol	GetVersionEx		514444						
ANR	514744	Symbol	m_window_version_info . dwOSVersionInfoSize		514444						
ANR	514745	Symbol	m_seen_keypress		514444						
ANR	514746	Symbol	m_last_credd_test		514444						
ANR	514747	Symbol	m_opsys_and_ver		514444						
ANR	514748	Symbol	m_load		514444						
ANR	514749	Symbol	m_uid_domain		514444						
ANR	514750	Symbol	m_num_real_cpus		514444						
ANR	514751	Symbol	m_filesystem_domain		514444						
ANR	514752	Symbol	m_mips		514444						
ANR	514753	Symbol	sysapi_ckptpltfrm		514444						
ANR	514754	Symbol	m_got_windows_version_info		514444						
ANR	514755	Symbol	NULL		514444						
ANR	514756	Symbol	m_clock_min		514444						
ANR	514757	Symbol	m_last_benchmark		514444						
ANR	514758	Symbol	m_virt_mem		514444						
ANR	514759	Symbol	& m_window_version_info		514444						
ANR	514760	Symbol	false		514444						
ANR	514761	Symbol	m_condor_load		514444						
ANR	514762	Symbol	D_ALWAYS		514444						
ANR	514763	Symbol	D_FULLDEBUG		514444						
ANR	514764	Symbol	m_owner_load		514444						
ANR	514765	Symbol	m_clock_day		514444						
ANR	514766	Symbol	m_dot_Net_Versions		514444						
ANR	514767	Symbol	m_num_cpus		514444						
ANR	514768	Symbol	sysapi_ncpus_raw		514444						
ANR	514769	Symbol	m_window_version_info		514444						
ANR	514770	Symbol	sysapi_phys_memory		514444						
ANR	514771	Symbol	time		514444						
ANR	514772	Symbol	sysapi_ncpus		514444						
ANR	514773	Symbol	strdup		514444						
ANR	514774	Symbol	m_last_keypress		514444						
ANR	514775	Symbol	D_NOHEADER		514444						
ANR	514776	Function	MachAttributes :: ~MachAttributes	108:0:3251:4049							
ANR	514777	FunctionDef	MachAttributes :: ~MachAttributes ()		514776	0					
ANR	514778	CompoundStatement		109:0:3285:4049	514776	0					
ANR	514779	IfStatement	if ( m_arch )		514776	0					
ANR	514780	Condition	m_arch	110:5:3292:3297	514776	0	True				
ANR	514781	Identifier	m_arch		514776	0					
ANR	514782	ExpressionStatement	free ( m_arch )	110:14:3301:3315	514776	1	True				
ANR	514783	CallExpression	free ( m_arch )		514776	0					
ANR	514784	Callee	free		514776	0					
ANR	514785	Identifier	free		514776	0					
ANR	514786	ArgumentList	m_arch		514776	1					
ANR	514787	Argument	m_arch		514776	0					
ANR	514788	Identifier	m_arch		514776	0					
ANR	514789	IfStatement	if ( m_opsys )		514776	1					
ANR	514790	Condition	m_opsys	111:5:3322:3328	514776	0	True				
ANR	514791	Identifier	m_opsys		514776	0					
ANR	514792	ExpressionStatement	free ( m_opsys )	111:15:3332:3347	514776	1	True				
ANR	514793	CallExpression	free ( m_opsys )		514776	0					
ANR	514794	Callee	free		514776	0					
ANR	514795	Identifier	free		514776	0					
ANR	514796	ArgumentList	m_opsys		514776	1					
ANR	514797	Argument	m_opsys		514776	0					
ANR	514798	Identifier	m_opsys		514776	0					
ANR	514799	IfStatement	if ( m_opsys_and_ver )		514776	2					
ANR	514800	Condition	m_opsys_and_ver	112:5:3354:3368	514776	0	True				
ANR	514801	Identifier	m_opsys_and_ver		514776	0					
ANR	514802	ExpressionStatement	free ( m_opsys_and_ver )	112:23:3372:3395	514776	1	True				
ANR	514803	CallExpression	free ( m_opsys_and_ver )		514776	0					
ANR	514804	Callee	free		514776	0					
ANR	514805	Identifier	free		514776	0					
ANR	514806	ArgumentList	m_opsys_and_ver		514776	1					
ANR	514807	Argument	m_opsys_and_ver		514776	0					
ANR	514808	Identifier	m_opsys_and_ver		514776	0					
ANR	514809	IfStatement	if ( m_uid_domain )		514776	3					
ANR	514810	Condition	m_uid_domain	113:5:3402:3413	514776	0	True				
ANR	514811	Identifier	m_uid_domain		514776	0					
ANR	514812	ExpressionStatement	free ( m_uid_domain )	113:20:3417:3437	514776	1	True				
ANR	514813	CallExpression	free ( m_uid_domain )		514776	0					
ANR	514814	Callee	free		514776	0					
ANR	514815	Identifier	free		514776	0					
ANR	514816	ArgumentList	m_uid_domain		514776	1					
ANR	514817	Argument	m_uid_domain		514776	0					
ANR	514818	Identifier	m_uid_domain		514776	0					
ANR	514819	IfStatement	if ( m_filesystem_domain )		514776	4					
ANR	514820	Condition	m_filesystem_domain	114:5:3444:3462	514776	0	True				
ANR	514821	Identifier	m_filesystem_domain		514776	0					
ANR	514822	ExpressionStatement	free ( m_filesystem_domain )	114:27:3466:3493	514776	1	True				
ANR	514823	CallExpression	free ( m_filesystem_domain )		514776	0					
ANR	514824	Callee	free		514776	0					
ANR	514825	Identifier	free		514776	0					
ANR	514826	ArgumentList	m_filesystem_domain		514776	1					
ANR	514827	Argument	m_filesystem_domain		514776	0					
ANR	514828	Identifier	m_filesystem_domain		514776	0					
ANR	514829	IfStatement	if ( m_ckptpltfrm )		514776	5					
ANR	514830	Condition	m_ckptpltfrm	115:5:3500:3511	514776	0	True				
ANR	514831	Identifier	m_ckptpltfrm		514776	0					
ANR	514832	ExpressionStatement	free ( m_ckptpltfrm )	115:20:3515:3535	514776	1	True				
ANR	514833	CallExpression	free ( m_ckptpltfrm )		514776	0					
ANR	514834	Callee	free		514776	0					
ANR	514835	Identifier	free		514776	0					
ANR	514836	ArgumentList	m_ckptpltfrm		514776	1					
ANR	514837	Argument	m_ckptpltfrm		514776	0					
ANR	514838	Identifier	m_ckptpltfrm		514776	0					
ANR	514839	IdentifierDeclStatement	AttribValue * val = NULL ;	117:4:3542:3565	514776	6	True				
ANR	514840	IdentifierDecl	* val = NULL		514776	0					
ANR	514841	IdentifierDeclType	AttribValue *		514776	0					
ANR	514842	Identifier	val		514776	1					
ANR	514843	AssignmentExpression	* val = NULL		514776	2		=			
ANR	514844	Identifier	NULL		514776	0					
ANR	514845	Identifier	NULL		514776	1					
ANR	514846	ExpressionStatement	m_lst_dynamic . Rewind ( )	118:4:3571:3593	514776	7	True				
ANR	514847	CallExpression	m_lst_dynamic . Rewind ( )		514776	0					
ANR	514848	Callee	m_lst_dynamic . Rewind		514776	0					
ANR	514849	MemberAccess	m_lst_dynamic . Rewind		514776	0					
ANR	514850	Identifier	m_lst_dynamic		514776	0					
ANR	514851	Identifier	Rewind		514776	1					
ANR	514852	ArgumentList			514776	1					
ANR	514853	WhileStatement	while ( ( val = m_lst_dynamic . Next ( ) ) )		514776	8					
ANR	514854	Condition	val = m_lst_dynamic . Next ( )	119:11:3606:3633	514776	0	True				
ANR	514855	AssignmentExpression	val = m_lst_dynamic . Next ( )		514776	0		=			
ANR	514856	Identifier	val		514776	0					
ANR	514857	CallExpression	m_lst_dynamic . Next ( )		514776	1					
ANR	514858	Callee	m_lst_dynamic . Next		514776	0					
ANR	514859	MemberAccess	m_lst_dynamic . Next		514776	0					
ANR	514860	Identifier	m_lst_dynamic		514776	0					
ANR	514861	Identifier	Next		514776	1					
ANR	514862	ArgumentList			514776	1					
ANR	514863	CompoundStatement		11:42:351:351	514776	1					
ANR	514864	IfStatement	if ( val )		514776	0					
ANR	514865	Condition	val	120:11:3650:3652	514776	0	True				
ANR	514866	Identifier	val		514776	0					
ANR	514867	ExpressionStatement	free ( val )	120:16:3655:3665	514776	1	True				
ANR	514868	CallExpression	free ( val )		514776	0					
ANR	514869	Callee	free		514776	0					
ANR	514870	Identifier	free		514776	0					
ANR	514871	ArgumentList	val		514776	1					
ANR	514872	Argument	val		514776	0					
ANR	514873	Identifier	val		514776	0					
ANR	514874	ExpressionStatement	m_lst_dynamic . DeleteCurrent ( )	121:7:3674:3703	514776	1	True				
ANR	514875	CallExpression	m_lst_dynamic . DeleteCurrent ( )		514776	0					
ANR	514876	Callee	m_lst_dynamic . DeleteCurrent		514776	0					
ANR	514877	MemberAccess	m_lst_dynamic . DeleteCurrent		514776	0					
ANR	514878	Identifier	m_lst_dynamic		514776	0					
ANR	514879	Identifier	DeleteCurrent		514776	1					
ANR	514880	ArgumentList			514776	1					
ANR	514881	ExpressionStatement	m_lst_static . Rewind ( )	124:4:3716:3737	514776	9	True				
ANR	514882	CallExpression	m_lst_static . Rewind ( )		514776	0					
ANR	514883	Callee	m_lst_static . Rewind		514776	0					
ANR	514884	MemberAccess	m_lst_static . Rewind		514776	0					
ANR	514885	Identifier	m_lst_static		514776	0					
ANR	514886	Identifier	Rewind		514776	1					
ANR	514887	ArgumentList			514776	1					
ANR	514888	WhileStatement	while ( ( val = m_lst_static . Next ( ) ) )		514776	10					
ANR	514889	Condition	val = m_lst_static . Next ( )	125:11:3750:3776	514776	0	True				
ANR	514890	AssignmentExpression	val = m_lst_static . Next ( )		514776	0		=			
ANR	514891	Identifier	val		514776	0					
ANR	514892	CallExpression	m_lst_static . Next ( )		514776	1					
ANR	514893	Callee	m_lst_static . Next		514776	0					
ANR	514894	MemberAccess	m_lst_static . Next		514776	0					
ANR	514895	Identifier	m_lst_static		514776	0					
ANR	514896	Identifier	Next		514776	1					
ANR	514897	ArgumentList			514776	1					
ANR	514898	CompoundStatement		17:40:493:493	514776	1					
ANR	514899	IfStatement	if ( val )		514776	0					
ANR	514900	Condition	val	126:11:3792:3794	514776	0	True				
ANR	514901	Identifier	val		514776	0					
ANR	514902	ExpressionStatement	free ( val )	126:16:3797:3807	514776	1	True				
ANR	514903	CallExpression	free ( val )		514776	0					
ANR	514904	Callee	free		514776	0					
ANR	514905	Identifier	free		514776	0					
ANR	514906	ArgumentList	val		514776	1					
ANR	514907	Argument	val		514776	0					
ANR	514908	Identifier	val		514776	0					
ANR	514909	ExpressionStatement	m_lst_static . DeleteCurrent ( )	127:7:3816:3844	514776	1	True				
ANR	514910	CallExpression	m_lst_static . DeleteCurrent ( )		514776	0					
ANR	514911	Callee	m_lst_static . DeleteCurrent		514776	0					
ANR	514912	MemberAccess	m_lst_static . DeleteCurrent		514776	0					
ANR	514913	Identifier	m_lst_static		514776	0					
ANR	514914	Identifier	DeleteCurrent		514776	1					
ANR	514915	ArgumentList			514776	1					
ANR	514916	ExpressionStatement	m_user_specified . clearAll ( )	129:4:3856:3883	514776	11	True				
ANR	514917	CallExpression	m_user_specified . clearAll ( )		514776	0					
ANR	514918	Callee	m_user_specified . clearAll		514776	0					
ANR	514919	MemberAccess	m_user_specified . clearAll		514776	0					
ANR	514920	Identifier	m_user_specified		514776	0					
ANR	514921	Identifier	clearAll		514776	1					
ANR	514922	ArgumentList			514776	1					
ANR	514923	IfStatement	if ( m_local_credd )		514776	12					
ANR	514924	Condition	m_local_credd	131:5:3909:3921	514776	0	True				
ANR	514925	Identifier	m_local_credd		514776	0					
ANR	514926	ExpressionStatement	free ( m_local_credd )	131:21:3925:3946	514776	1	True				
ANR	514927	CallExpression	free ( m_local_credd )		514776	0					
ANR	514928	Callee	free		514776	0					
ANR	514929	Identifier	free		514776	0					
ANR	514930	ArgumentList	m_local_credd		514776	1					
ANR	514931	Argument	m_local_credd		514776	0					
ANR	514932	Identifier	m_local_credd		514776	0					
ANR	514933	IfStatement	if ( m_dot_Net_Versions )		514776	13					
ANR	514934	Condition	m_dot_Net_Versions	132:8:3956:3973	514776	0	True				
ANR	514935	Identifier	m_dot_Net_Versions		514776	0					
ANR	514936	ExpressionStatement	free ( m_dot_Net_Versions )	132:29:3977:4004	514776	1	True				
ANR	514937	CallExpression	free ( m_dot_Net_Versions )		514776	0					
ANR	514938	Callee	free		514776	0					
ANR	514939	Identifier	free		514776	0					
ANR	514940	ArgumentList	m_dot_Net_Versions		514776	1					
ANR	514941	Argument	m_dot_Net_Versions		514776	0					
ANR	514942	Identifier	m_dot_Net_Versions		514776	0					
ANR	514943	ExpressionStatement	release_all_WinPerf_results ( )	134:4:4011:4040	514776	14	True				
ANR	514944	CallExpression	release_all_WinPerf_results ( )		514776	0					
ANR	514945	Callee	release_all_WinPerf_results		514776	0					
ANR	514946	Identifier	release_all_WinPerf_results		514776	0					
ANR	514947	ArgumentList			514776	1					
ANR	514948	Identifier	MachAttributes :: ~MachAttributes		514776	1					
ANR	514949	ParameterList			514776	2					
ANR	514950	CFGEntryNode	ENTRY		514776		True				
ANR	514951	CFGExitNode	EXIT		514776		True				
ANR	514952	Symbol	m_arch		514776						
ANR	514953	Symbol	val		514776						
ANR	514954	Symbol	m_user_specified		514776						
ANR	514955	Symbol	m_lst_dynamic . Next		514776						
ANR	514956	Symbol	NULL		514776						
ANR	514957	Symbol	m_lst_static . Next		514776						
ANR	514958	Symbol	m_ckptpltfrm		514776						
ANR	514959	Symbol	m_local_credd		514776						
ANR	514960	Symbol	m_opsys		514776						
ANR	514961	Symbol	m_lst_static		514776						
ANR	514962	Symbol	m_opsys_and_ver		514776						
ANR	514963	Symbol	m_dot_Net_Versions		514776						
ANR	514964	Symbol	m_uid_domain		514776						
ANR	514965	Symbol	m_filesystem_domain		514776						
ANR	514966	Symbol	m_lst_dynamic		514776						
ANR	514967	Function	MachAttributes :: init_user_settings	138:0:4052:8421							
ANR	514968	FunctionDef	MachAttributes :: init_user_settings ()		514967	0					
ANR	514969	CompoundStatement		140:0:4094:8421	514967	0					
ANR	514970	ExpressionStatement	m_user_settings_init = true	141:1:4097:4124	514967	0	True				
ANR	514971	AssignmentExpression	m_user_settings_init = true		514967	0		=			
ANR	514972	Identifier	m_user_settings_init		514967	0					
ANR	514973	Identifier	true		514967	1					
ANR	514974	IdentifierDeclStatement	AttribValue * val = NULL ;	143:1:4128:4151	514967	1	True				
ANR	514975	IdentifierDecl	* val = NULL		514967	0					
ANR	514976	IdentifierDeclType	AttribValue *		514967	0					
ANR	514977	Identifier	val		514967	1					
ANR	514978	AssignmentExpression	* val = NULL		514967	2		=			
ANR	514979	Identifier	NULL		514967	0					
ANR	514980	Identifier	NULL		514967	1					
ANR	514981	ExpressionStatement	m_lst_dynamic . Rewind ( )	144:1:4154:4176	514967	2	True				
ANR	514982	CallExpression	m_lst_dynamic . Rewind ( )		514967	0					
ANR	514983	Callee	m_lst_dynamic . Rewind		514967	0					
ANR	514984	MemberAccess	m_lst_dynamic . Rewind		514967	0					
ANR	514985	Identifier	m_lst_dynamic		514967	0					
ANR	514986	Identifier	Rewind		514967	1					
ANR	514987	ArgumentList			514967	1					
ANR	514988	WhileStatement	while ( ( val = m_lst_dynamic . Next ( ) ) )		514967	3					
ANR	514989	Condition	val = m_lst_dynamic . Next ( )	145:8:4186:4213	514967	0	True				
ANR	514990	AssignmentExpression	val = m_lst_dynamic . Next ( )		514967	0		=			
ANR	514991	Identifier	val		514967	0					
ANR	514992	CallExpression	m_lst_dynamic . Next ( )		514967	1					
ANR	514993	Callee	m_lst_dynamic . Next		514967	0					
ANR	514994	MemberAccess	m_lst_dynamic . Next		514967	0					
ANR	514995	Identifier	m_lst_dynamic		514967	0					
ANR	514996	Identifier	Next		514967	1					
ANR	514997	ArgumentList			514967	1					
ANR	514998	CompoundStatement		7:4:125:125	514967	1					
ANR	514999	IfStatement	if ( val )		514967	0					
ANR	515000	Condition	val	147:12:4234:4236	514967	0	True				
ANR	515001	Identifier	val		514967	0					
ANR	515002	ExpressionStatement	free ( val )	147:17:4239:4249	514967	1	True				
ANR	515003	CallExpression	free ( val )		514967	0					
ANR	515004	Callee	free		514967	0					
ANR	515005	Identifier	free		514967	0					
ANR	515006	ArgumentList	val		514967	1					
ANR	515007	Argument	val		514967	0					
ANR	515008	Identifier	val		514967	0					
ANR	515009	ExpressionStatement	m_lst_dynamic . DeleteCurrent ( )	148:5:4256:4285	514967	1	True				
ANR	515010	CallExpression	m_lst_dynamic . DeleteCurrent ( )		514967	0					
ANR	515011	Callee	m_lst_dynamic . DeleteCurrent		514967	0					
ANR	515012	MemberAccess	m_lst_dynamic . DeleteCurrent		514967	0					
ANR	515013	Identifier	m_lst_dynamic		514967	0					
ANR	515014	Identifier	DeleteCurrent		514967	1					
ANR	515015	ArgumentList			514967	1					
ANR	515016	ExpressionStatement	m_lst_static . Rewind ( )	151:1:4292:4313	514967	4	True				
ANR	515017	CallExpression	m_lst_static . Rewind ( )		514967	0					
ANR	515018	Callee	m_lst_static . Rewind		514967	0					
ANR	515019	MemberAccess	m_lst_static . Rewind		514967	0					
ANR	515020	Identifier	m_lst_static		514967	0					
ANR	515021	Identifier	Rewind		514967	1					
ANR	515022	ArgumentList			514967	1					
ANR	515023	WhileStatement	while ( ( val = m_lst_static . Next ( ) ) )		514967	5					
ANR	515024	Condition	val = m_lst_static . Next ( )	152:8:4323:4349	514967	0	True				
ANR	515025	AssignmentExpression	val = m_lst_static . Next ( )		514967	0		=			
ANR	515026	Identifier	val		514967	0					
ANR	515027	CallExpression	m_lst_static . Next ( )		514967	1					
ANR	515028	Callee	m_lst_static . Next		514967	0					
ANR	515029	MemberAccess	m_lst_static . Next		514967	0					
ANR	515030	Identifier	m_lst_static		514967	0					
ANR	515031	Identifier	Next		514967	1					
ANR	515032	ArgumentList			514967	1					
ANR	515033	CompoundStatement		14:4:261:261	514967	1					
ANR	515034	IfStatement	if ( val )		514967	0					
ANR	515035	Condition	val	154:9:4367:4369	514967	0	True				
ANR	515036	Identifier	val		514967	0					
ANR	515037	ExpressionStatement	free ( val )	154:14:4372:4382	514967	1	True				
ANR	515038	CallExpression	free ( val )		514967	0					
ANR	515039	Callee	free		514967	0					
ANR	515040	Identifier	free		514967	0					
ANR	515041	ArgumentList	val		514967	1					
ANR	515042	Argument	val		514967	0					
ANR	515043	Identifier	val		514967	0					
ANR	515044	ExpressionStatement	m_lst_static . DeleteCurrent ( )	155:5:4389:4417	514967	1	True				
ANR	515045	CallExpression	m_lst_static . DeleteCurrent ( )		514967	0					
ANR	515046	Callee	m_lst_static . DeleteCurrent		514967	0					
ANR	515047	MemberAccess	m_lst_static . DeleteCurrent		514967	0					
ANR	515048	Identifier	m_lst_static		514967	0					
ANR	515049	Identifier	DeleteCurrent		514967	1					
ANR	515050	ArgumentList			514967	1					
ANR	515051	ExpressionStatement	m_user_specified . clearAll ( )	158:1:4424:4451	514967	6	True				
ANR	515052	CallExpression	m_user_specified . clearAll ( )		514967	0					
ANR	515053	Callee	m_user_specified . clearAll		514967	0					
ANR	515054	MemberAccess	m_user_specified . clearAll		514967	0					
ANR	515055	Identifier	m_user_specified		514967	0					
ANR	515056	Identifier	clearAll		514967	1					
ANR	515057	ArgumentList			514967	1					
ANR	515058	IdentifierDeclStatement	char * pszParam = NULL ;	159:1:4454:4476	514967	7	True				
ANR	515059	IdentifierDecl	* pszParam = NULL		514967	0					
ANR	515060	IdentifierDeclType	char *		514967	0					
ANR	515061	Identifier	pszParam		514967	1					
ANR	515062	AssignmentExpression	* pszParam = NULL		514967	2		=			
ANR	515063	Identifier	NULL		514967	0					
ANR	515064	Identifier	NULL		514967	1					
ANR	515065	ExpressionStatement	"pszParam = param ( ""STARTD_PUBLISH_WINREG"" )"	161:1:4495:4536	514967	8	True				
ANR	515066	AssignmentExpression	"pszParam = param ( ""STARTD_PUBLISH_WINREG"" )"		514967	0		=			
ANR	515067	Identifier	pszParam		514967	0					
ANR	515068	CallExpression	"param ( ""STARTD_PUBLISH_WINREG"" )"		514967	1					
ANR	515069	Callee	param		514967	0					
ANR	515070	Identifier	param		514967	0					
ANR	515071	ArgumentList	"""STARTD_PUBLISH_WINREG"""		514967	1					
ANR	515072	Argument	"""STARTD_PUBLISH_WINREG"""		514967	0					
ANR	515073	PrimaryExpression	"""STARTD_PUBLISH_WINREG"""		514967	0					
ANR	515074	IfStatement	if ( pszParam )		514967	9					
ANR	515075	Condition	pszParam	163:5:4553:4560	514967	0	True				
ANR	515076	Identifier	pszParam		514967	0					
ANR	515077	CompoundStatement		25:4:472:472	514967	1					
ANR	515078	ExpressionStatement	m_user_specified . initializeFromString ( pszParam )	165:2:4571:4618	514967	0	True				
ANR	515079	CallExpression	m_user_specified . initializeFromString ( pszParam )		514967	0					
ANR	515080	Callee	m_user_specified . initializeFromString		514967	0					
ANR	515081	MemberAccess	m_user_specified . initializeFromString		514967	0					
ANR	515082	Identifier	m_user_specified		514967	0					
ANR	515083	Identifier	initializeFromString		514967	1					
ANR	515084	ArgumentList	pszParam		514967	1					
ANR	515085	Argument	pszParam		514967	0					
ANR	515086	Identifier	pszParam		514967	0					
ANR	515087	ExpressionStatement	free ( pszParam )	166:2:4622:4636	514967	1	True				
ANR	515088	CallExpression	free ( pszParam )		514967	0					
ANR	515089	Callee	free		514967	0					
ANR	515090	Identifier	free		514967	0					
ANR	515091	ArgumentList	pszParam		514967	1					
ANR	515092	Argument	pszParam		514967	0					
ANR	515093	Identifier	pszParam		514967	0					
ANR	515094	ExpressionStatement	m_user_specified . rewind ( )	169:1:4643:4668	514967	10	True				
ANR	515095	CallExpression	m_user_specified . rewind ( )		514967	0					
ANR	515096	Callee	m_user_specified . rewind		514967	0					
ANR	515097	MemberAccess	m_user_specified . rewind		514967	0					
ANR	515098	Identifier	m_user_specified		514967	0					
ANR	515099	Identifier	rewind		514967	1					
ANR	515100	ArgumentList			514967	1					
ANR	515101	WhileStatement	while ( char * pszItem = m_user_specified . next ( ) )		514967	11					
ANR	515102	Condition	char * pszItem = m_user_specified . next ( )	170:7:4677:4716	514967	0	True				
ANR	515103	AssignmentExpression	char * pszItem = m_user_specified . next ( )		514967	0		=			
ANR	515104	MultiplicativeExpression	char * pszItem		514967	0		*			
ANR	515105	Identifier	char		514967	0					
ANR	515106	Identifier	pszItem		514967	1					
ANR	515107	CallExpression	m_user_specified . next ( )		514967	1					
ANR	515108	Callee	m_user_specified . next		514967	0					
ANR	515109	MemberAccess	m_user_specified . next		514967	0					
ANR	515110	Identifier	m_user_specified		514967	0					
ANR	515111	Identifier	next		514967	1					
ANR	515112	ArgumentList			514967	1					
ANR	515113	CompoundStatement		66:2:1568:1618	514967	1					
ANR	515114	IdentifierDeclStatement	"const char * pkey = strchr ( pszItem , '=' ) ;"	177:2:4949:4989	514967	0	True				
ANR	515115	IdentifierDecl	"* pkey = strchr ( pszItem , '=' )"		514967	0					
ANR	515116	IdentifierDeclType	const char *		514967	0					
ANR	515117	Identifier	pkey		514967	1					
ANR	515118	AssignmentExpression	"* pkey = strchr ( pszItem , '=' )"		514967	2		=			
ANR	515119	Identifier	pkey		514967	0					
ANR	515120	CallExpression	"strchr ( pszItem , '=' )"		514967	1					
ANR	515121	Callee	strchr		514967	0					
ANR	515122	Identifier	strchr		514967	0					
ANR	515123	ArgumentList	pszItem		514967	1					
ANR	515124	Argument	pszItem		514967	0					
ANR	515125	Identifier	pszItem		514967	0					
ANR	515126	Argument	'='		514967	1					
ANR	515127	PrimaryExpression	'='		514967	0					
ANR	515128	IdentifierDeclStatement	"const char * pbs = strchr ( pszItem , '\\\\' ) ;"	178:2:4993:5034	514967	1	True				
ANR	515129	IdentifierDecl	"* pbs = strchr ( pszItem , '\\\\' )"		514967	0					
ANR	515130	IdentifierDeclType	const char *		514967	0					
ANR	515131	Identifier	pbs		514967	1					
ANR	515132	AssignmentExpression	"* pbs = strchr ( pszItem , '\\\\' )"		514967	2		=			
ANR	515133	Identifier	pbs		514967	0					
ANR	515134	CallExpression	"strchr ( pszItem , '\\\\' )"		514967	1					
ANR	515135	Callee	strchr		514967	0					
ANR	515136	Identifier	strchr		514967	0					
ANR	515137	ArgumentList	pszItem		514967	1					
ANR	515138	Argument	pszItem		514967	0					
ANR	515139	Identifier	pszItem		514967	0					
ANR	515140	Argument	'\\\\'		514967	1					
ANR	515141	PrimaryExpression	'\\\\'		514967	0					
ANR	515142	IfStatement	if ( pkey && ( ! pbs || pkey < pbs ) )		514967	2					
ANR	515143	Condition	pkey && ( ! pbs || pkey < pbs )	179:6:5042:5071	514967	0	True				
ANR	515144	AndExpression	pkey && ( ! pbs || pkey < pbs )		514967	0		&&			
ANR	515145	Identifier	pkey		514967	0					
ANR	515146	OrExpression	! pbs || pkey < pbs		514967	1		||			
ANR	515147	UnaryOperationExpression	! pbs		514967	0					
ANR	515148	UnaryOperator	!		514967	0					
ANR	515149	Identifier	pbs		514967	1					
ANR	515150	RelationalExpression	pkey < pbs		514967	1		<			
ANR	515151	Identifier	pkey		514967	0					
ANR	515152	Identifier	pbs		514967	1					
ANR	515153	CompoundStatement		40:38:979:979	514967	1					
ANR	515154	ExpressionStatement	++ pkey	180:3:5079:5085	514967	0	True				
ANR	515155	UnaryExpression	++ pkey		514967	0					
ANR	515156	IncDec	++		514967	0					
ANR	515157	Identifier	pkey		514967	1					
ANR	515158	ElseStatement	else		514967	0					
ANR	515159	CompoundStatement		42:9:1017:1017	514967	0					
ANR	515160	ExpressionStatement	pkey = pszItem	182:3:5117:5131	514967	0	True				
ANR	515161	AssignmentExpression	pkey = pszItem		514967	0		=			
ANR	515162	Identifier	pkey		514967	0					
ANR	515163	Identifier	pszItem		514967	1					
ANR	515164	WhileStatement	while ( isspace ( pkey [ 0 ] ) )		514967	3					
ANR	515165	Condition	isspace ( pkey [ 0 ] )	186:9:5191:5206	514967	0	True				
ANR	515166	CallExpression	isspace ( pkey [ 0 ] )		514967	0					
ANR	515167	Callee	isspace		514967	0					
ANR	515168	Identifier	isspace		514967	0					
ANR	515169	ArgumentList	pkey [ 0 ]		514967	1					
ANR	515170	Argument	pkey [ 0 ]		514967	0					
ANR	515171	ArrayIndexing	pkey [ 0 ]		514967	0					
ANR	515172	Identifier	pkey		514967	0					
ANR	515173	PrimaryExpression	0		514967	1					
ANR	515174	ExpressionStatement	++ pkey	187:3:5212:5218	514967	1	True				
ANR	515175	UnaryExpression	++ pkey		514967	0					
ANR	515176	IncDec	++		514967	0					
ANR	515177	Identifier	pkey		514967	1					
ANR	515178	IdentifierDeclStatement	"char * pszAttr = generate_reg_key_attr_name ( ""WINREG_"" , pszItem ) ;"	190:2:5243:5306	514967	4	True				
ANR	515179	IdentifierDecl	"* pszAttr = generate_reg_key_attr_name ( ""WINREG_"" , pszItem )"		514967	0					
ANR	515180	IdentifierDeclType	char *		514967	0					
ANR	515181	Identifier	pszAttr		514967	1					
ANR	515182	AssignmentExpression	"* pszAttr = generate_reg_key_attr_name ( ""WINREG_"" , pszItem )"		514967	2		=			
ANR	515183	Identifier	pszAttr		514967	0					
ANR	515184	CallExpression	"generate_reg_key_attr_name ( ""WINREG_"" , pszItem )"		514967	1					
ANR	515185	Callee	generate_reg_key_attr_name		514967	0					
ANR	515186	Identifier	generate_reg_key_attr_name		514967	0					
ANR	515187	ArgumentList	"""WINREG_"""		514967	1					
ANR	515188	Argument	"""WINREG_"""		514967	0					
ANR	515189	PrimaryExpression	"""WINREG_"""		514967	0					
ANR	515190	Argument	pszItem		514967	1					
ANR	515191	Identifier	pszItem		514967	0					
ANR	515192	IdentifierDeclStatement	int options = 0 ;	195:2:5495:5510	514967	5	True				
ANR	515193	IdentifierDecl	options = 0		514967	0					
ANR	515194	IdentifierDeclType	int		514967	0					
ANR	515195	Identifier	options		514967	1					
ANR	515196	AssignmentExpression	options = 0		514967	2		=			
ANR	515197	Identifier	options		514967	0					
ANR	515198	PrimaryExpression	0		514967	1					
ANR	515199	IfStatement	if ( isdigit ( pkey [ 0 ] ) )		514967	6					
ANR	515200	Condition	isdigit ( pkey [ 0 ] )	196:6:5518:5533	514967	0	True				
ANR	515201	CallExpression	isdigit ( pkey [ 0 ] )		514967	0					
ANR	515202	Callee	isdigit		514967	0					
ANR	515203	Identifier	isdigit		514967	0					
ANR	515204	ArgumentList	pkey [ 0 ]		514967	1					
ANR	515205	Argument	pkey [ 0 ]		514967	0					
ANR	515206	ArrayIndexing	pkey [ 0 ]		514967	0					
ANR	515207	Identifier	pkey		514967	0					
ANR	515208	PrimaryExpression	0		514967	1					
ANR	515209	CompoundStatement		57:24:1441:1441	514967	1					
ANR	515210	ExpressionStatement	options = atoi ( pkey )	197:3:5541:5561	514967	0	True				
ANR	515211	AssignmentExpression	options = atoi ( pkey )		514967	0		=			
ANR	515212	Identifier	options		514967	0					
ANR	515213	CallExpression	atoi ( pkey )		514967	1					
ANR	515214	Callee	atoi		514967	0					
ANR	515215	Identifier	atoi		514967	0					
ANR	515216	ArgumentList	pkey		514967	1					
ANR	515217	Argument	pkey		514967	0					
ANR	515218	Identifier	pkey		514967	0					
ANR	515219	WhileStatement	while ( isdigit ( pkey [ 0 ] ) )		514967	1					
ANR	515220	Condition	isdigit ( pkey [ 0 ] )	198:10:5573:5588	514967	0	True				
ANR	515221	CallExpression	isdigit ( pkey [ 0 ] )		514967	0					
ANR	515222	Callee	isdigit		514967	0					
ANR	515223	Identifier	isdigit		514967	0					
ANR	515224	ArgumentList	pkey [ 0 ]		514967	1					
ANR	515225	Argument	pkey [ 0 ]		514967	0					
ANR	515226	ArrayIndexing	pkey [ 0 ]		514967	0					
ANR	515227	Identifier	pkey		514967	0					
ANR	515228	PrimaryExpression	0		514967	1					
ANR	515229	CompoundStatement		59:28:1496:1496	514967	1					
ANR	515230	ExpressionStatement	++ pkey	199:4:5597:5603	514967	0	True				
ANR	515231	UnaryExpression	++ pkey		514967	0					
ANR	515232	IncDec	++		514967	0					
ANR	515233	Identifier	pkey		514967	1					
ANR	515234	IdentifierDeclStatement	int ixStart = 0 ;	203:2:5617:5632	514967	7	True				
ANR	515235	IdentifierDecl	ixStart = 0		514967	0					
ANR	515236	IdentifierDeclType	int		514967	0					
ANR	515237	Identifier	ixStart		514967	1					
ANR	515238	AssignmentExpression	ixStart = 0		514967	2		=			
ANR	515239	Identifier	ixStart		514967	0					
ANR	515240	PrimaryExpression	0		514967	1					
ANR	515241	IdentifierDeclStatement	int cch = lstrlen ( pkey ) ;	204:2:5636:5659	514967	8	True				
ANR	515242	IdentifierDecl	cch = lstrlen ( pkey )		514967	0					
ANR	515243	IdentifierDeclType	int		514967	0					
ANR	515244	Identifier	cch		514967	1					
ANR	515245	AssignmentExpression	cch = lstrlen ( pkey )		514967	2		=			
ANR	515246	Identifier	cch		514967	0					
ANR	515247	CallExpression	lstrlen ( pkey )		514967	1					
ANR	515248	Callee	lstrlen		514967	0					
ANR	515249	Identifier	lstrlen		514967	0					
ANR	515250	ArgumentList	pkey		514967	1					
ANR	515251	Argument	pkey		514967	0					
ANR	515252	Identifier	pkey		514967	0					
ANR	515253	IdentifierDeclStatement	"HKEY hkey = parse_hive_prefix ( pkey , cch , & ixStart ) ;"	205:2:5663:5713	514967	9	True				
ANR	515254	IdentifierDecl	"hkey = parse_hive_prefix ( pkey , cch , & ixStart )"		514967	0					
ANR	515255	IdentifierDeclType	HKEY		514967	0					
ANR	515256	Identifier	hkey		514967	1					
ANR	515257	AssignmentExpression	"hkey = parse_hive_prefix ( pkey , cch , & ixStart )"		514967	2		=			
ANR	515258	Identifier	hkey		514967	0					
ANR	515259	CallExpression	"parse_hive_prefix ( pkey , cch , & ixStart )"		514967	1					
ANR	515260	Callee	parse_hive_prefix		514967	0					
ANR	515261	Identifier	parse_hive_prefix		514967	0					
ANR	515262	ArgumentList	pkey		514967	1					
ANR	515263	Argument	pkey		514967	0					
ANR	515264	Identifier	pkey		514967	0					
ANR	515265	Argument	cch		514967	1					
ANR	515266	Identifier	cch		514967	0					
ANR	515267	Argument	& ixStart		514967	2					
ANR	515268	UnaryOperationExpression	& ixStart		514967	0					
ANR	515269	UnaryOperator	&		514967	0					
ANR	515270	Identifier	ixStart		514967	1					
ANR	515271	IfStatement	if ( hkey == HKEY_PERFORMANCE_DATA )		514967	10					
ANR	515272	Condition	hkey == HKEY_PERFORMANCE_DATA	206:6:5721:5749	514967	0	True				
ANR	515273	EqualityExpression	hkey == HKEY_PERFORMANCE_DATA		514967	0		==			
ANR	515274	Identifier	hkey		514967	0					
ANR	515275	Identifier	HKEY_PERFORMANCE_DATA		514967	1					
ANR	515276	CompoundStatement		76:12:2006:2068	514967	1					
ANR	515277	IdentifierDeclStatement	"AttribValue * pav = add_WinPerf_Query ( pszAttr , pkey + ixStart + 1 ) ;"	215:12:6101:6163	514967	0	True				
ANR	515278	IdentifierDecl	"* pav = add_WinPerf_Query ( pszAttr , pkey + ixStart + 1 )"		514967	0					
ANR	515279	IdentifierDeclType	AttribValue *		514967	0					
ANR	515280	Identifier	pav		514967	1					
ANR	515281	AssignmentExpression	"* pav = add_WinPerf_Query ( pszAttr , pkey + ixStart + 1 )"		514967	2		=			
ANR	515282	Identifier	pav		514967	0					
ANR	515283	CallExpression	"add_WinPerf_Query ( pszAttr , pkey + ixStart + 1 )"		514967	1					
ANR	515284	Callee	add_WinPerf_Query		514967	0					
ANR	515285	Identifier	add_WinPerf_Query		514967	0					
ANR	515286	ArgumentList	pszAttr		514967	1					
ANR	515287	Argument	pszAttr		514967	0					
ANR	515288	Identifier	pszAttr		514967	0					
ANR	515289	Argument	pkey + ixStart + 1		514967	1					
ANR	515290	AdditiveExpression	pkey + ixStart + 1		514967	0		+			
ANR	515291	Identifier	pkey		514967	0					
ANR	515292	AdditiveExpression	ixStart + 1		514967	1		+			
ANR	515293	Identifier	ixStart		514967	0					
ANR	515294	PrimaryExpression	1		514967	1					
ANR	515295	IfStatement	if ( pav )		514967	1					
ANR	515296	Condition	pav	216:16:6181:6183	514967	0	True				
ANR	515297	Identifier	pav		514967	0					
ANR	515298	ExpressionStatement	m_lst_dynamic . Append ( pav )	217:10:6196:6221	514967	1	True				
ANR	515299	CallExpression	m_lst_dynamic . Append ( pav )		514967	0					
ANR	515300	Callee	m_lst_dynamic . Append		514967	0					
ANR	515301	MemberAccess	m_lst_dynamic . Append		514967	0					
ANR	515302	Identifier	m_lst_dynamic		514967	0					
ANR	515303	Identifier	Append		514967	1					
ANR	515304	ArgumentList	pav		514967	1					
ANR	515305	Argument	pav		514967	0					
ANR	515306	Identifier	pav		514967	0					
ANR	515307	ElseStatement	else		514967	0					
ANR	515308	CompoundStatement		86:12:2365:2422	514967	0					
ANR	515309	IdentifierDeclStatement	"char * value = get_windows_reg_value ( pkey , NULL , options ) ;"	224:3:6389:6446	514967	0	True				
ANR	515310	IdentifierDecl	"* value = get_windows_reg_value ( pkey , NULL , options )"		514967	0					
ANR	515311	IdentifierDeclType	char *		514967	0					
ANR	515312	Identifier	value		514967	1					
ANR	515313	AssignmentExpression	"* value = get_windows_reg_value ( pkey , NULL , options )"		514967	2		=			
ANR	515314	Identifier	value		514967	0					
ANR	515315	CallExpression	"get_windows_reg_value ( pkey , NULL , options )"		514967	1					
ANR	515316	Callee	get_windows_reg_value		514967	0					
ANR	515317	Identifier	get_windows_reg_value		514967	0					
ANR	515318	ArgumentList	pkey		514967	1					
ANR	515319	Argument	pkey		514967	0					
ANR	515320	Identifier	pkey		514967	0					
ANR	515321	Argument	NULL		514967	1					
ANR	515322	Identifier	NULL		514967	0					
ANR	515323	Argument	options		514967	2					
ANR	515324	Identifier	options		514967	0					
ANR	515325	IdentifierDeclStatement	"AttribValue * pav = AttribValue :: Allocate ( pszAttr , value ) ;"	225:12:6460:6517	514967	1	True				
ANR	515326	IdentifierDecl	"* pav = AttribValue :: Allocate ( pszAttr , value )"		514967	0					
ANR	515327	IdentifierDeclType	AttribValue *		514967	0					
ANR	515328	Identifier	pav		514967	1					
ANR	515329	AssignmentExpression	"* pav = AttribValue :: Allocate ( pszAttr , value )"		514967	2		=			
ANR	515330	Identifier	pav		514967	0					
ANR	515331	CallExpression	"AttribValue :: Allocate ( pszAttr , value )"		514967	1					
ANR	515332	Callee	AttribValue :: Allocate		514967	0					
ANR	515333	Identifier	AttribValue :: Allocate		514967	0					
ANR	515334	ArgumentList	pszAttr		514967	1					
ANR	515335	Argument	pszAttr		514967	0					
ANR	515336	Identifier	pszAttr		514967	0					
ANR	515337	Argument	value		514967	1					
ANR	515338	Identifier	value		514967	0					
ANR	515339	IfStatement	if ( pav )		514967	2					
ANR	515340	Condition	pav	226:16:6535:6537	514967	0	True				
ANR	515341	Identifier	pav		514967	0					
ANR	515342	CompoundStatement		88:12:2457:2457	514967	1					
ANR	515343	ExpressionStatement	pav -> pquery = ( void * ) pkey	228:16:6570:6595	514967	0	True				
ANR	515344	AssignmentExpression	pav -> pquery = ( void * ) pkey		514967	0		=			
ANR	515345	PtrMemberAccess	pav -> pquery		514967	0					
ANR	515346	Identifier	pav		514967	0					
ANR	515347	Identifier	pquery		514967	1					
ANR	515348	CastExpression	( void * ) pkey		514967	1					
ANR	515349	CastTarget	void *		514967	0					
ANR	515350	Identifier	pkey		514967	1					
ANR	515351	ExpressionStatement	m_lst_static . Append ( pav )	229:4:6601:6625	514967	1	True				
ANR	515352	CallExpression	m_lst_static . Append ( pav )		514967	0					
ANR	515353	Callee	m_lst_static . Append		514967	0					
ANR	515354	MemberAccess	m_lst_static . Append		514967	0					
ANR	515355	Identifier	m_lst_static		514967	0					
ANR	515356	Identifier	Append		514967	1					
ANR	515357	ArgumentList	pav		514967	1					
ANR	515358	Argument	pav		514967	0					
ANR	515359	Identifier	pav		514967	0					
ANR	515360	IdentifierDeclStatement	"char * detected_versions = param ( ""DOT_NET_VERSIONS"" ) ;"	243:4:6811:6862	514967	12	True				
ANR	515361	IdentifierDecl	"* detected_versions = param ( ""DOT_NET_VERSIONS"" )"		514967	0					
ANR	515362	IdentifierDeclType	char *		514967	0					
ANR	515363	Identifier	detected_versions		514967	1					
ANR	515364	AssignmentExpression	"* detected_versions = param ( ""DOT_NET_VERSIONS"" )"		514967	2		=			
ANR	515365	Identifier	detected_versions		514967	0					
ANR	515366	CallExpression	"param ( ""DOT_NET_VERSIONS"" )"		514967	1					
ANR	515367	Callee	param		514967	0					
ANR	515368	Identifier	param		514967	0					
ANR	515369	ArgumentList	"""DOT_NET_VERSIONS"""		514967	1					
ANR	515370	Argument	"""DOT_NET_VERSIONS"""		514967	0					
ANR	515371	PrimaryExpression	"""DOT_NET_VERSIONS"""		514967	0					
ANR	515372	IfStatement	if ( ! detected_versions )		514967	13					
ANR	515373	Condition	! detected_versions	244:8:6872:6890	514967	0	True				
ANR	515374	UnaryOperationExpression	! detected_versions		514967	0					
ANR	515375	UnaryOperator	!		514967	0					
ANR	515376	Identifier	detected_versions		514967	1					
ANR	515377	CompoundStatement		109:21:2861:2979	514967	1					
ANR	515378	IdentifierDeclStatement	string s_dot_Net_Versions ;	246:8:6907:6932	514967	0	True				
ANR	515379	IdentifierDecl	s_dot_Net_Versions		514967	0					
ANR	515380	IdentifierDeclType	string		514967	0					
ANR	515381	Identifier	s_dot_Net_Versions		514967	1					
ANR	515382	Statement	static	248:8:6943:6948	514967	1	True				
ANR	515383	Statement	const	248:15:6950:6954	514967	2	True				
ANR	515384	ClassDefStatement	struct { const char * pszKey ; const char * pszValue ; const char * pszVer ; }	248:21:6956:7074	514967	3	True				
ANR	515385	Statement	aNet	252:10:7076:7079	514967	4	True				
ANR	515386	Statement	[	252:14:7080:7080	514967	5	True				
ANR	515387	Statement	]	252:15:7081:7081	514967	6	True				
ANR	515388	Statement	=	252:17:7083:7083	514967	7	True				
ANR	515389	CompoundStatement		113:19:2990:2990	514967	8					
ANR	515390	Statement	"""HKLM\\\\SOFTWARE\\\\Microsoft\\\\NET Framework Setup\\\\NDP\\\\v1.1.4322"""	253:11:7098:7161	514967	0	True				
ANR	515391	Statement	","	253:75:7162:7162	514967	1	True				
ANR	515392	Statement	"""Install"""	253:78:7165:7173	514967	2	True				
ANR	515393	Statement	","	253:87:7174:7174	514967	3	True				
ANR	515394	Statement	"""1.1"""	253:89:7176:7180	514967	4	True				
ANR	515395	Statement	","	253:94:7181:7181	514967	5	True				
ANR	515396	Statement	"""HKLM\\\\SOFTWARE\\\\Microsoft\\\\NET Framework Setup\\\\NDP\\\\v2.0.50727"""	254:11:7194:7258	514967	6	True				
ANR	515397	Statement	","	254:76:7259:7259	514967	7	True				
ANR	515398	Statement	"""Install"""	254:78:7261:7269	514967	8	True				
ANR	515399	Statement	","	254:87:7270:7270	514967	9	True				
ANR	515400	Statement	"""2.0"""	254:89:7272:7276	514967	10	True				
ANR	515401	Statement	","	254:94:7277:7277	514967	11	True				
ANR	515402	Statement	"""HKLM\\\\SOFTWARE\\\\Microsoft\\\\NET Framework Setup\\\\NDP\\\\v3.0"""	255:11:7290:7348	514967	12	True				
ANR	515403	Statement	","	255:70:7349:7349	514967	13	True				
ANR	515404	Statement	"""Install"""	255:78:7357:7365	514967	14	True				
ANR	515405	Statement	","	255:87:7366:7366	514967	15	True				
ANR	515406	Statement	"""3.0"""	255:89:7368:7372	514967	16	True				
ANR	515407	Statement	","	255:94:7373:7373	514967	17	True				
ANR	515408	Statement	"""HKLM\\\\SOFTWARE\\\\Microsoft\\\\NET Framework Setup\\\\NDP\\\\v3.5"""	256:11:7386:7444	514967	18	True				
ANR	515409	Statement	","	256:70:7445:7445	514967	19	True				
ANR	515410	Statement	"""Install"""	256:78:7453:7461	514967	20	True				
ANR	515411	Statement	","	256:87:7462:7462	514967	21	True				
ANR	515412	Statement	"""3.5"""	256:89:7464:7468	514967	22	True				
ANR	515413	Statement	","	256:94:7469:7469	514967	23	True				
ANR	515414	Statement	"""HKLM\\\\SOFTWARE\\\\Microsoft\\\\NET Framework Setup\\\\NDP\\\\v4\\\\Client"""	257:11:7482:7546	514967	24	True				
ANR	515415	Statement	","	257:76:7547:7547	514967	25	True				
ANR	515416	Statement	"""Install"""	257:78:7549:7557	514967	26	True				
ANR	515417	Statement	","	257:87:7558:7558	514967	27	True				
ANR	515418	Statement	"""4.0Client"""	257:89:7560:7570	514967	28	True				
ANR	515419	Statement	","	257:100:7571:7571	514967	29	True				
ANR	515420	Statement	"""HKLM\\\\SOFTWARE\\\\Microsoft\\\\NET Framework Setup\\\\NDP\\\\v4\\\\Full"""	258:11:7584:7646	514967	30	True				
ANR	515421	Statement	","	258:74:7647:7647	514967	31	True				
ANR	515422	Statement	"""Install"""	258:78:7651:7659	514967	32	True				
ANR	515423	Statement	","	258:87:7660:7660	514967	33	True				
ANR	515424	Statement	"""4.0Full"""	258:89:7662:7670	514967	34	True				
ANR	515425	Statement	","	258:98:7671:7671	514967	35	True				
ANR	515426	ExpressionStatement		259:9:7682:7682	514967	9	True				
ANR	515427	ForStatement	for ( int ii = 0 ; ii < NUM_ELEMENTS ( aNet ) ; ++ ii )		514967	10					
ANR	515428	ForInit	int ii = 0 ;	261:12:7697:7707	514967	0	True				
ANR	515429	IdentifierDeclStatement	int ii = 0 ;		514967	0					
ANR	515430	IdentifierDecl	ii = 0		514967	0					
ANR	515431	IdentifierDeclType	int		514967	0					
ANR	515432	Identifier	ii		514967	1					
ANR	515433	AssignmentExpression	ii = 0		514967	2		=			
ANR	515434	Identifier	ii		514967	0					
ANR	515435	PrimaryExpression	0		514967	1					
ANR	515436	Condition	ii < NUM_ELEMENTS ( aNet )	261:24:7709:7731	514967	1	True				
ANR	515437	RelationalExpression	ii < NUM_ELEMENTS ( aNet )		514967	0		<			
ANR	515438	Identifier	ii		514967	0					
ANR	515439	CallExpression	NUM_ELEMENTS ( aNet )		514967	1					
ANR	515440	Callee	NUM_ELEMENTS		514967	0					
ANR	515441	Identifier	NUM_ELEMENTS		514967	0					
ANR	515442	ArgumentList	aNet		514967	1					
ANR	515443	Argument	aNet		514967	0					
ANR	515444	Identifier	aNet		514967	0					
ANR	515445	UnaryExpression	++ ii	261:49:7734:7737	514967	2	True				
ANR	515446	IncDec	++		514967	0					
ANR	515447	Identifier	ii		514967	1					
ANR	515448	CompoundStatement		124:11:3665:3740	514967	3					
ANR	515449	IdentifierDeclStatement	"char * pszVal = get_windows_reg_value ( aNet [ ii ] . pszKey , aNet [ ii ] . pszValue , 0 ) ;"	263:11:7760:7835	514967	0	True				
ANR	515450	IdentifierDecl	"* pszVal = get_windows_reg_value ( aNet [ ii ] . pszKey , aNet [ ii ] . pszValue , 0 )"		514967	0					
ANR	515451	IdentifierDeclType	char *		514967	0					
ANR	515452	Identifier	pszVal		514967	1					
ANR	515453	AssignmentExpression	"* pszVal = get_windows_reg_value ( aNet [ ii ] . pszKey , aNet [ ii ] . pszValue , 0 )"		514967	2		=			
ANR	515454	Identifier	pszVal		514967	0					
ANR	515455	CallExpression	"get_windows_reg_value ( aNet [ ii ] . pszKey , aNet [ ii ] . pszValue , 0 )"		514967	1					
ANR	515456	Callee	get_windows_reg_value		514967	0					
ANR	515457	Identifier	get_windows_reg_value		514967	0					
ANR	515458	ArgumentList	aNet [ ii ] . pszKey		514967	1					
ANR	515459	Argument	aNet [ ii ] . pszKey		514967	0					
ANR	515460	MemberAccess	aNet [ ii ] . pszKey		514967	0					
ANR	515461	ArrayIndexing	aNet [ ii ]		514967	0					
ANR	515462	Identifier	aNet		514967	0					
ANR	515463	Identifier	ii		514967	1					
ANR	515464	Identifier	pszKey		514967	1					
ANR	515465	Argument	aNet [ ii ] . pszValue		514967	1					
ANR	515466	MemberAccess	aNet [ ii ] . pszValue		514967	0					
ANR	515467	ArrayIndexing	aNet [ ii ]		514967	0					
ANR	515468	Identifier	aNet		514967	0					
ANR	515469	Identifier	ii		514967	1					
ANR	515470	Identifier	pszValue		514967	1					
ANR	515471	Argument	0		514967	2					
ANR	515472	PrimaryExpression	0		514967	0					
ANR	515473	IfStatement	if ( pszVal )		514967	1					
ANR	515474	Condition	pszVal	264:15:7852:7857	514967	0	True				
ANR	515475	Identifier	pszVal		514967	0					
ANR	515476	CompoundStatement		127:15:3793:3816	514967	1					
ANR	515477	IdentifierDeclStatement	DWORD dw = atoi ( pszVal ) ;	266:15:7888:7911	514967	0	True				
ANR	515478	IdentifierDecl	dw = atoi ( pszVal )		514967	0					
ANR	515479	IdentifierDeclType	DWORD		514967	0					
ANR	515480	Identifier	dw		514967	1					
ANR	515481	AssignmentExpression	dw = atoi ( pszVal )		514967	2		=			
ANR	515482	Identifier	dw		514967	0					
ANR	515483	CallExpression	atoi ( pszVal )		514967	1					
ANR	515484	Callee	atoi		514967	0					
ANR	515485	Identifier	atoi		514967	0					
ANR	515486	ArgumentList	pszVal		514967	1					
ANR	515487	Argument	pszVal		514967	0					
ANR	515488	Identifier	pszVal		514967	0					
ANR	515489	IfStatement	if ( dw )		514967	1					
ANR	515490	Condition	dw	267:18:7931:7932	514967	0	True				
ANR	515491	Identifier	dw		514967	0					
ANR	515492	CompoundStatement		129:15:3855:3855	514967	1					
ANR	515493	IfStatement	if ( ! s_dot_Net_Versions . empty ( ) )		514967	0					
ANR	515494	Condition	! s_dot_Net_Versions . empty ( )	269:23:7975:8002	514967	0	True				
ANR	515495	UnaryOperationExpression	! s_dot_Net_Versions . empty ( )		514967	0					
ANR	515496	UnaryOperator	!		514967	0					
ANR	515497	CallExpression	s_dot_Net_Versions . empty ( )		514967	1					
ANR	515498	Callee	s_dot_Net_Versions . empty		514967	0					
ANR	515499	MemberAccess	s_dot_Net_Versions . empty		514967	0					
ANR	515500	Identifier	s_dot_Net_Versions		514967	0					
ANR	515501	Identifier	empty		514967	1					
ANR	515502	ArgumentList			514967	1					
ANR	515503	ExpressionStatement	"s_dot_Net_Versions . append ( "","" )"	270:23:8028:8058	514967	1	True				
ANR	515504	CallExpression	"s_dot_Net_Versions . append ( "","" )"		514967	0					
ANR	515505	Callee	s_dot_Net_Versions . append		514967	0					
ANR	515506	MemberAccess	s_dot_Net_Versions . append		514967	0					
ANR	515507	Identifier	s_dot_Net_Versions		514967	0					
ANR	515508	Identifier	append		514967	1					
ANR	515509	ArgumentList	""","""		514967	1					
ANR	515510	Argument	""","""		514967	0					
ANR	515511	PrimaryExpression	""","""		514967	0					
ANR	515512	ExpressionStatement	s_dot_Net_Versions . append ( aNet [ ii ] . pszVer )	271:18:8078:8120	514967	1	True				
ANR	515513	CallExpression	s_dot_Net_Versions . append ( aNet [ ii ] . pszVer )		514967	0					
ANR	515514	Callee	s_dot_Net_Versions . append		514967	0					
ANR	515515	MemberAccess	s_dot_Net_Versions . append		514967	0					
ANR	515516	Identifier	s_dot_Net_Versions		514967	0					
ANR	515517	Identifier	append		514967	1					
ANR	515518	ArgumentList	aNet [ ii ] . pszVer		514967	1					
ANR	515519	Argument	aNet [ ii ] . pszVer		514967	0					
ANR	515520	MemberAccess	aNet [ ii ] . pszVer		514967	0					
ANR	515521	ArrayIndexing	aNet [ ii ]		514967	0					
ANR	515522	Identifier	aNet		514967	0					
ANR	515523	Identifier	ii		514967	1					
ANR	515524	Identifier	pszVer		514967	1					
ANR	515525	ExpressionStatement	free ( pszVal )	273:15:8154:8166	514967	2	True				
ANR	515526	CallExpression	free ( pszVal )		514967	0					
ANR	515527	Callee	free		514967	0					
ANR	515528	Identifier	free		514967	0					
ANR	515529	ArgumentList	pszVal		514967	1					
ANR	515530	Argument	pszVal		514967	0					
ANR	515531	Identifier	pszVal		514967	0					
ANR	515532	IfStatement	if ( ! s_dot_Net_Versions . empty ( ) )		514967	11					
ANR	515533	Condition	! s_dot_Net_Versions . empty ( )	277:12:8203:8230	514967	0	True				
ANR	515534	UnaryOperationExpression	! s_dot_Net_Versions . empty ( )		514967	0					
ANR	515535	UnaryOperator	!		514967	0					
ANR	515536	CallExpression	s_dot_Net_Versions . empty ( )		514967	1					
ANR	515537	Callee	s_dot_Net_Versions . empty		514967	0					
ANR	515538	MemberAccess	s_dot_Net_Versions . empty		514967	0					
ANR	515539	Identifier	s_dot_Net_Versions		514967	0					
ANR	515540	Identifier	empty		514967	1					
ANR	515541	ArgumentList			514967	1					
ANR	515542	ExpressionStatement	detected_versions = _strdup ( s_dot_Net_Versions . c_str ( ) )	278:11:8244:8299	514967	1	True				
ANR	515543	AssignmentExpression	detected_versions = _strdup ( s_dot_Net_Versions . c_str ( ) )		514967	0		=			
ANR	515544	Identifier	detected_versions		514967	0					
ANR	515545	CallExpression	_strdup ( s_dot_Net_Versions . c_str ( ) )		514967	1					
ANR	515546	Callee	_strdup		514967	0					
ANR	515547	Identifier	_strdup		514967	0					
ANR	515548	ArgumentList	s_dot_Net_Versions . c_str ( )		514967	1					
ANR	515549	Argument	s_dot_Net_Versions . c_str ( )		514967	0					
ANR	515550	CallExpression	s_dot_Net_Versions . c_str ( )		514967	0					
ANR	515551	Callee	s_dot_Net_Versions . c_str		514967	0					
ANR	515552	MemberAccess	s_dot_Net_Versions . c_str		514967	0					
ANR	515553	Identifier	s_dot_Net_Versions		514967	0					
ANR	515554	Identifier	c_str		514967	1					
ANR	515555	ArgumentList			514967	1					
ANR	515556	IfStatement	if ( m_dot_Net_Versions )		514967	14					
ANR	515557	Condition	m_dot_Net_Versions	280:7:8314:8331	514967	0	True				
ANR	515558	Identifier	m_dot_Net_Versions		514967	0					
ANR	515559	ExpressionStatement	free ( m_dot_Net_Versions )	280:27:8334:8358	514967	1	True				
ANR	515560	CallExpression	free ( m_dot_Net_Versions )		514967	0					
ANR	515561	Callee	free		514967	0					
ANR	515562	Identifier	free		514967	0					
ANR	515563	ArgumentList	m_dot_Net_Versions		514967	1					
ANR	515564	Argument	m_dot_Net_Versions		514967	0					
ANR	515565	Identifier	m_dot_Net_Versions		514967	0					
ANR	515566	ExpressionStatement	m_dot_Net_Versions = detected_versions	281:4:8364:8402	514967	15	True				
ANR	515567	AssignmentExpression	m_dot_Net_Versions = detected_versions		514967	0		=			
ANR	515568	Identifier	m_dot_Net_Versions		514967	0					
ANR	515569	Identifier	detected_versions		514967	1					
ANR	515570	ReturnType	void		514967	1					
ANR	515571	Identifier	MachAttributes :: init_user_settings		514967	2					
ANR	515572	ParameterList			514967	3					
ANR	515573	CFGEntryNode	ENTRY		514967		True				
ANR	515574	CFGExitNode	EXIT		514967		True				
ANR	515575	Symbol	NUM_ELEMENTS		514967						
ANR	515576	Symbol	* pkey		514967						
ANR	515577	Symbol	ixStart		514967						
ANR	515578	Symbol	_strdup		514967						
ANR	515579	Symbol	strchr		514967						
ANR	515580	Symbol	cch		514967						
ANR	515581	Symbol	dw		514967						
ANR	515582	Symbol	options		514967						
ANR	515583	Symbol	m_lst_dynamic		514967						
ANR	515584	Symbol	isdigit		514967						
ANR	515585	Symbol	AttribValue :: Allocate		514967						
ANR	515586	Symbol	val		514967						
ANR	515587	Symbol	m_user_specified		514967						
ANR	515588	Symbol	ii		514967						
ANR	515589	Symbol	m_lst_dynamic . Next		514967						
ANR	515590	Symbol	NULL		514967						
ANR	515591	Symbol	pav		514967						
ANR	515592	Symbol	pszAttr		514967						
ANR	515593	Symbol	m_user_specified . next		514967						
ANR	515594	Symbol	isspace		514967						
ANR	515595	Symbol	aNet [ ii ] . pszValue		514967						
ANR	515596	Symbol	* aNet		514967						
ANR	515597	Symbol	generate_reg_key_attr_name		514967						
ANR	515598	Symbol	get_windows_reg_value		514967						
ANR	515599	Symbol	& ixStart		514967						
ANR	515600	Symbol	m_lst_static		514967						
ANR	515601	Symbol	aNet [ ii ] . pszVer		514967						
ANR	515602	Symbol	true		514967						
ANR	515603	Symbol	pbs		514967						
ANR	515604	Symbol	pszParam		514967						
ANR	515605	Symbol	detected_versions		514967						
ANR	515606	Symbol	m_lst_static . Next		514967						
ANR	515607	Symbol	* ii		514967						
ANR	515608	Symbol	lstrlen		514967						
ANR	515609	Symbol	hkey		514967						
ANR	515610	Symbol	parse_hive_prefix		514967						
ANR	515611	Symbol	pav -> pquery		514967						
ANR	515612	Symbol	* pav		514967						
ANR	515613	Symbol	add_WinPerf_Query		514967						
ANR	515614	Symbol	aNet		514967						
ANR	515615	Symbol	param		514967						
ANR	515616	Symbol	pszItem		514967						
ANR	515617	Symbol	pkey		514967						
ANR	515618	Symbol	value		514967						
ANR	515619	Symbol	atoi		514967						
ANR	515620	Symbol	s_dot_Net_Versions		514967						
ANR	515621	Symbol	pszVal		514967						
ANR	515622	Symbol	s_dot_Net_Versions . empty		514967						
ANR	515623	Symbol	m_user_settings_init		514967						
ANR	515624	Symbol	HKEY_PERFORMANCE_DATA		514967						
ANR	515625	Symbol	s_dot_Net_Versions . c_str		514967						
ANR	515626	Symbol	m_dot_Net_Versions		514967						
ANR	515627	Symbol	char		514967						
ANR	515628	Symbol	aNet [ ii ] . pszKey		514967						
ANR	515629	Function	MachAttributes :: init	288:0:8425:8509							
ANR	515630	FunctionDef	MachAttributes :: init ()		515629	0					
ANR	515631	CompoundStatement		290:0:8453:8509	515629	0					
ANR	515632	ExpressionStatement	this -> init_user_settings ( )	291:1:8456:8482	515629	0	True				
ANR	515633	CallExpression	this -> init_user_settings ( )		515629	0					
ANR	515634	Callee	this -> init_user_settings		515629	0					
ANR	515635	PtrMemberAccess	this -> init_user_settings		515629	0					
ANR	515636	Identifier	this		515629	0					
ANR	515637	Identifier	init_user_settings		515629	1					
ANR	515638	ArgumentList			515629	1					
ANR	515639	ExpressionStatement	this -> compute ( A_ALL )	292:1:8485:8507	515629	1	True				
ANR	515640	CallExpression	this -> compute ( A_ALL )		515629	0					
ANR	515641	Callee	this -> compute		515629	0					
ANR	515642	PtrMemberAccess	this -> compute		515629	0					
ANR	515643	Identifier	this		515629	0					
ANR	515644	Identifier	compute		515629	1					
ANR	515645	ArgumentList	A_ALL		515629	1					
ANR	515646	Argument	A_ALL		515629	0					
ANR	515647	Identifier	A_ALL		515629	0					
ANR	515648	ReturnType	void		515629	1					
ANR	515649	Identifier	MachAttributes :: init		515629	2					
ANR	515650	ParameterList			515629	3					
ANR	515651	CFGEntryNode	ENTRY		515629		True				
ANR	515652	CFGExitNode	EXIT		515629		True				
ANR	515653	Symbol	A_ALL		515629						
ANR	515654	Symbol	this		515629						
ANR	515655	Function	MachAttributes :: compute	296:0:8513:11831							
ANR	515656	FunctionDef	MachAttributes :: compute (amask_t how_much)		515655	0					
ANR	515657	CompoundStatement		298:0:8562:11831	515655	0					
ANR	515658	IfStatement	if ( ! m_user_settings_init )		515655	0					
ANR	515659	Condition	! m_user_settings_init	302:6:8780:8801	515655	0	True				
ANR	515660	UnaryOperationExpression	! m_user_settings_init		515655	0					
ANR	515661	UnaryOperator	!		515655	0					
ANR	515662	Identifier	m_user_settings_init		515655	1					
ANR	515663	ExpressionStatement	init_user_settings ( )	303:2:8806:8826	515655	1	True				
ANR	515664	CallExpression	init_user_settings ( )		515655	0					
ANR	515665	Callee	init_user_settings		515655	0					
ANR	515666	Identifier	init_user_settings		515655	0					
ANR	515667	ArgumentList			515655	1					
ANR	515668	IfStatement	if ( IS_STATIC ( how_much ) && IS_SHARED ( how_much ) )		515655	1					
ANR	515669	Condition	IS_STATIC ( how_much ) && IS_SHARED ( how_much )	305:5:8834:8875	515655	0	True				
ANR	515670	AndExpression	IS_STATIC ( how_much ) && IS_SHARED ( how_much )		515655	0		&&			
ANR	515671	CallExpression	IS_STATIC ( how_much )		515655	0					
ANR	515672	Callee	IS_STATIC		515655	0					
ANR	515673	Identifier	IS_STATIC		515655	0					
ANR	515674	ArgumentList	how_much		515655	1					
ANR	515675	Argument	how_much		515655	0					
ANR	515676	Identifier	how_much		515655	0					
ANR	515677	CallExpression	IS_SHARED ( how_much )		515655	1					
ANR	515678	Callee	IS_SHARED		515655	0					
ANR	515679	Identifier	IS_SHARED		515655	0					
ANR	515680	ArgumentList	how_much		515655	1					
ANR	515681	Argument	how_much		515655	0					
ANR	515682	Identifier	how_much		515655	0					
ANR	515683	CompoundStatement		8:50:316:316	515655	1					
ANR	515684	IfStatement	if ( m_arch )		515655	0					
ANR	515685	Condition	m_arch	315:6:9280:9285	515655	0	True				
ANR	515686	Identifier	m_arch		515655	0					
ANR	515687	CompoundStatement		18:15:726:726	515655	1					
ANR	515688	ExpressionStatement	free ( m_arch )	316:3:9294:9308	515655	0	True				
ANR	515689	CallExpression	free ( m_arch )		515655	0					
ANR	515690	Callee	free		515655	0					
ANR	515691	Identifier	free		515655	0					
ANR	515692	ArgumentList	m_arch		515655	1					
ANR	515693	Argument	m_arch		515655	0					
ANR	515694	Identifier	m_arch		515655	0					
ANR	515695	ExpressionStatement	"m_arch = param ( ""ARCH"" )"	318:2:9316:9340	515655	1	True				
ANR	515696	AssignmentExpression	"m_arch = param ( ""ARCH"" )"		515655	0		=			
ANR	515697	Identifier	m_arch		515655	0					
ANR	515698	CallExpression	"param ( ""ARCH"" )"		515655	1					
ANR	515699	Callee	param		515655	0					
ANR	515700	Identifier	param		515655	0					
ANR	515701	ArgumentList	"""ARCH"""		515655	1					
ANR	515702	Argument	"""ARCH"""		515655	0					
ANR	515703	PrimaryExpression	"""ARCH"""		515655	0					
ANR	515704	IfStatement	if ( m_opsys )		515655	2					
ANR	515705	Condition	m_opsys	320:6:9349:9355	515655	0	True				
ANR	515706	Identifier	m_opsys		515655	0					
ANR	515707	CompoundStatement		23:16:796:796	515655	1					
ANR	515708	ExpressionStatement	free ( m_opsys )	321:3:9364:9379	515655	0	True				
ANR	515709	CallExpression	free ( m_opsys )		515655	0					
ANR	515710	Callee	free		515655	0					
ANR	515711	Identifier	free		515655	0					
ANR	515712	ArgumentList	m_opsys		515655	1					
ANR	515713	Argument	m_opsys		515655	0					
ANR	515714	Identifier	m_opsys		515655	0					
ANR	515715	ExpressionStatement	"m_opsys = param ( ""OPSYS"" )"	323:2:9387:9413	515655	3	True				
ANR	515716	AssignmentExpression	"m_opsys = param ( ""OPSYS"" )"		515655	0		=			
ANR	515717	Identifier	m_opsys		515655	0					
ANR	515718	CallExpression	"param ( ""OPSYS"" )"		515655	1					
ANR	515719	Callee	param		515655	0					
ANR	515720	Identifier	param		515655	0					
ANR	515721	ArgumentList	"""OPSYS"""		515655	1					
ANR	515722	Argument	"""OPSYS"""		515655	0					
ANR	515723	PrimaryExpression	"""OPSYS"""		515655	0					
ANR	515724	ExpressionStatement	"m_opsysver = param_integer ( ""OPSYSVER"" , 0 )"	324:2:9417:9460	515655	4	True				
ANR	515725	AssignmentExpression	"m_opsysver = param_integer ( ""OPSYSVER"" , 0 )"		515655	0		=			
ANR	515726	Identifier	m_opsysver		515655	0					
ANR	515727	CallExpression	"param_integer ( ""OPSYSVER"" , 0 )"		515655	1					
ANR	515728	Callee	param_integer		515655	0					
ANR	515729	Identifier	param_integer		515655	0					
ANR	515730	ArgumentList	"""OPSYSVER"""		515655	1					
ANR	515731	Argument	"""OPSYSVER"""		515655	0					
ANR	515732	PrimaryExpression	"""OPSYSVER"""		515655	0					
ANR	515733	Argument	0		515655	1					
ANR	515734	PrimaryExpression	0		515655	0					
ANR	515735	IfStatement	if ( m_opsys_and_ver )		515655	5					
ANR	515736	Condition	m_opsys_and_ver	326:6:9469:9483	515655	0	True				
ANR	515737	Identifier	m_opsys_and_ver		515655	0					
ANR	515738	CompoundStatement		29:24:924:924	515655	1					
ANR	515739	ExpressionStatement	free ( m_opsys_and_ver )	327:3:9492:9515	515655	0	True				
ANR	515740	CallExpression	free ( m_opsys_and_ver )		515655	0					
ANR	515741	Callee	free		515655	0					
ANR	515742	Identifier	free		515655	0					
ANR	515743	ArgumentList	m_opsys_and_ver		515655	1					
ANR	515744	Argument	m_opsys_and_ver		515655	0					
ANR	515745	Identifier	m_opsys_and_ver		515655	0					
ANR	515746	ExpressionStatement	"m_opsys_and_ver = param ( ""OPSYS_AND_VER"" )"	329:2:9523:9565	515655	6	True				
ANR	515747	AssignmentExpression	"m_opsys_and_ver = param ( ""OPSYS_AND_VER"" )"		515655	0		=			
ANR	515748	Identifier	m_opsys_and_ver		515655	0					
ANR	515749	CallExpression	"param ( ""OPSYS_AND_VER"" )"		515655	1					
ANR	515750	Callee	param		515655	0					
ANR	515751	Identifier	param		515655	0					
ANR	515752	ArgumentList	"""OPSYS_AND_VER"""		515655	1					
ANR	515753	Argument	"""OPSYS_AND_VER"""		515655	0					
ANR	515754	PrimaryExpression	"""OPSYS_AND_VER"""		515655	0					
ANR	515755	IfStatement	if ( m_uid_domain )		515655	7					
ANR	515756	Condition	m_uid_domain	331:6:9574:9585	515655	0	True				
ANR	515757	Identifier	m_uid_domain		515655	0					
ANR	515758	CompoundStatement		34:21:1026:1026	515655	1					
ANR	515759	ExpressionStatement	free ( m_uid_domain )	332:3:9594:9614	515655	0	True				
ANR	515760	CallExpression	free ( m_uid_domain )		515655	0					
ANR	515761	Callee	free		515655	0					
ANR	515762	Identifier	free		515655	0					
ANR	515763	ArgumentList	m_uid_domain		515655	1					
ANR	515764	Argument	m_uid_domain		515655	0					
ANR	515765	Identifier	m_uid_domain		515655	0					
ANR	515766	ExpressionStatement	"m_uid_domain = param ( ""UID_DOMAIN"" )"	334:2:9622:9658	515655	8	True				
ANR	515767	AssignmentExpression	"m_uid_domain = param ( ""UID_DOMAIN"" )"		515655	0		=			
ANR	515768	Identifier	m_uid_domain		515655	0					
ANR	515769	CallExpression	"param ( ""UID_DOMAIN"" )"		515655	1					
ANR	515770	Callee	param		515655	0					
ANR	515771	Identifier	param		515655	0					
ANR	515772	ArgumentList	"""UID_DOMAIN"""		515655	1					
ANR	515773	Argument	"""UID_DOMAIN"""		515655	0					
ANR	515774	PrimaryExpression	"""UID_DOMAIN"""		515655	0					
ANR	515775	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""%s = \\""%s\\""\\n"" , ATTR_UID_DOMAIN , m_uid_domain )"	335:2:9662:9737	515655	9	True				
ANR	515776	CallExpression	"dprintf ( D_FULLDEBUG , ""%s = \\""%s\\""\\n"" , ATTR_UID_DOMAIN , m_uid_domain )"		515655	0					
ANR	515777	Callee	dprintf		515655	0					
ANR	515778	Identifier	dprintf		515655	0					
ANR	515779	ArgumentList	D_FULLDEBUG		515655	1					
ANR	515780	Argument	D_FULLDEBUG		515655	0					
ANR	515781	Identifier	D_FULLDEBUG		515655	0					
ANR	515782	Argument	"""%s = \\""%s\\""\\n"""		515655	1					
ANR	515783	PrimaryExpression	"""%s = \\""%s\\""\\n"""		515655	0					
ANR	515784	Argument	ATTR_UID_DOMAIN		515655	2					
ANR	515785	Identifier	ATTR_UID_DOMAIN		515655	0					
ANR	515786	Argument	m_uid_domain		515655	3					
ANR	515787	Identifier	m_uid_domain		515655	0					
ANR	515788	IfStatement	if ( m_filesystem_domain )		515655	10					
ANR	515789	Condition	m_filesystem_domain	338:6:9746:9764	515655	0	True				
ANR	515790	Identifier	m_filesystem_domain		515655	0					
ANR	515791	CompoundStatement		41:28:1205:1205	515655	1					
ANR	515792	ExpressionStatement	free ( m_filesystem_domain )	339:3:9773:9800	515655	0	True				
ANR	515793	CallExpression	free ( m_filesystem_domain )		515655	0					
ANR	515794	Callee	free		515655	0					
ANR	515795	Identifier	free		515655	0					
ANR	515796	ArgumentList	m_filesystem_domain		515655	1					
ANR	515797	Argument	m_filesystem_domain		515655	0					
ANR	515798	Identifier	m_filesystem_domain		515655	0					
ANR	515799	ExpressionStatement	"m_filesystem_domain = param ( ""FILESYSTEM_DOMAIN"" )"	341:2:9808:9858	515655	11	True				
ANR	515800	AssignmentExpression	"m_filesystem_domain = param ( ""FILESYSTEM_DOMAIN"" )"		515655	0		=			
ANR	515801	Identifier	m_filesystem_domain		515655	0					
ANR	515802	CallExpression	"param ( ""FILESYSTEM_DOMAIN"" )"		515655	1					
ANR	515803	Callee	param		515655	0					
ANR	515804	Identifier	param		515655	0					
ANR	515805	ArgumentList	"""FILESYSTEM_DOMAIN"""		515655	1					
ANR	515806	Argument	"""FILESYSTEM_DOMAIN"""		515655	0					
ANR	515807	PrimaryExpression	"""FILESYSTEM_DOMAIN"""		515655	0					
ANR	515808	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""%s = \\""%s\\""\\n"" , ATTR_FILE_SYSTEM_DOMAIN , m_filesystem_domain )"	342:2:9862:9952	515655	12	True				
ANR	515809	CallExpression	"dprintf ( D_FULLDEBUG , ""%s = \\""%s\\""\\n"" , ATTR_FILE_SYSTEM_DOMAIN , m_filesystem_domain )"		515655	0					
ANR	515810	Callee	dprintf		515655	0					
ANR	515811	Identifier	dprintf		515655	0					
ANR	515812	ArgumentList	D_FULLDEBUG		515655	1					
ANR	515813	Argument	D_FULLDEBUG		515655	0					
ANR	515814	Identifier	D_FULLDEBUG		515655	0					
ANR	515815	Argument	"""%s = \\""%s\\""\\n"""		515655	1					
ANR	515816	PrimaryExpression	"""%s = \\""%s\\""\\n"""		515655	0					
ANR	515817	Argument	ATTR_FILE_SYSTEM_DOMAIN		515655	2					
ANR	515818	Identifier	ATTR_FILE_SYSTEM_DOMAIN		515655	0					
ANR	515819	Argument	m_filesystem_domain		515655	3					
ANR	515820	Identifier	m_filesystem_domain		515655	0					
ANR	515821	ExpressionStatement	"m_idle_interval = param_integer ( ""IDLE_INTERVAL"" , - 1 )"	345:2:9957:10011	515655	13	True				
ANR	515822	AssignmentExpression	"m_idle_interval = param_integer ( ""IDLE_INTERVAL"" , - 1 )"		515655	0		=			
ANR	515823	Identifier	m_idle_interval		515655	0					
ANR	515824	CallExpression	"param_integer ( ""IDLE_INTERVAL"" , - 1 )"		515655	1					
ANR	515825	Callee	param_integer		515655	0					
ANR	515826	Identifier	param_integer		515655	0					
ANR	515827	ArgumentList	"""IDLE_INTERVAL"""		515655	1					
ANR	515828	Argument	"""IDLE_INTERVAL"""		515655	0					
ANR	515829	PrimaryExpression	"""IDLE_INTERVAL"""		515655	0					
ANR	515830	Argument	- 1		515655	1					
ANR	515831	UnaryOperationExpression	- 1		515655	0					
ANR	515832	UnaryOperator	-		515655	0					
ANR	515833	PrimaryExpression	1		515655	1					
ANR	515834	IfStatement	if ( m_ckptpltfrm )		515655	14					
ANR	515835	Condition	m_ckptpltfrm	348:6:10056:10067	515655	0	True				
ANR	515836	Identifier	m_ckptpltfrm		515655	0					
ANR	515837	CompoundStatement		51:20:1507:1507	515655	1					
ANR	515838	ExpressionStatement	free ( m_ckptpltfrm )	349:3:10075:10093	515655	0	True				
ANR	515839	CallExpression	free ( m_ckptpltfrm )		515655	0					
ANR	515840	Callee	free		515655	0					
ANR	515841	Identifier	free		515655	0					
ANR	515842	ArgumentList	m_ckptpltfrm		515655	1					
ANR	515843	Argument	m_ckptpltfrm		515655	0					
ANR	515844	Identifier	m_ckptpltfrm		515655	0					
ANR	515845	ExpressionStatement	m_ckptpltfrm = strdup ( sysapi_ckptpltfrm ( ) )	351:2:10101:10143	515655	15	True				
ANR	515846	AssignmentExpression	m_ckptpltfrm = strdup ( sysapi_ckptpltfrm ( ) )		515655	0		=			
ANR	515847	Identifier	m_ckptpltfrm		515655	0					
ANR	515848	CallExpression	strdup ( sysapi_ckptpltfrm ( ) )		515655	1					
ANR	515849	Callee	strdup		515655	0					
ANR	515850	Identifier	strdup		515655	0					
ANR	515851	ArgumentList	sysapi_ckptpltfrm ( )		515655	1					
ANR	515852	Argument	sysapi_ckptpltfrm ( )		515655	0					
ANR	515853	CallExpression	sysapi_ckptpltfrm ( )		515655	0					
ANR	515854	Callee	sysapi_ckptpltfrm		515655	0					
ANR	515855	Identifier	sysapi_ckptpltfrm		515655	0					
ANR	515856	ArgumentList			515655	1					
ANR	515857	IfStatement	if ( IS_UPDATE ( how_much ) && IS_SHARED ( how_much ) )		515655	2					
ANR	515858	Condition	IS_UPDATE ( how_much ) && IS_SHARED ( how_much )	355:5:10158:10199	515655	0	True				
ANR	515859	AndExpression	IS_UPDATE ( how_much ) && IS_SHARED ( how_much )		515655	0		&&			
ANR	515860	CallExpression	IS_UPDATE ( how_much )		515655	0					
ANR	515861	Callee	IS_UPDATE		515655	0					
ANR	515862	Identifier	IS_UPDATE		515655	0					
ANR	515863	ArgumentList	how_much		515655	1					
ANR	515864	Argument	how_much		515655	0					
ANR	515865	Identifier	how_much		515655	0					
ANR	515866	CallExpression	IS_SHARED ( how_much )		515655	1					
ANR	515867	Callee	IS_SHARED		515655	0					
ANR	515868	Identifier	IS_SHARED		515655	0					
ANR	515869	ArgumentList	how_much		515655	1					
ANR	515870	Argument	how_much		515655	0					
ANR	515871	Identifier	how_much		515655	0					
ANR	515872	CompoundStatement		58:50:1640:1640	515655	1					
ANR	515873	ExpressionStatement	m_virt_mem = sysapi_swap_space ( )	357:2:10208:10240	515655	0	True				
ANR	515874	AssignmentExpression	m_virt_mem = sysapi_swap_space ( )		515655	0		=			
ANR	515875	Identifier	m_virt_mem		515655	0					
ANR	515876	CallExpression	sysapi_swap_space ( )		515655	1					
ANR	515877	Callee	sysapi_swap_space		515655	0					
ANR	515878	Identifier	sysapi_swap_space		515655	0					
ANR	515879	ArgumentList			515655	1					
ANR	515880	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Swap space: %lu\\n"" , m_virt_mem )"	358:2:10244:10299	515655	1	True				
ANR	515881	CallExpression	"dprintf ( D_FULLDEBUG , ""Swap space: %lu\\n"" , m_virt_mem )"		515655	0					
ANR	515882	Callee	dprintf		515655	0					
ANR	515883	Identifier	dprintf		515655	0					
ANR	515884	ArgumentList	D_FULLDEBUG		515655	1					
ANR	515885	Argument	D_FULLDEBUG		515655	0					
ANR	515886	Identifier	D_FULLDEBUG		515655	0					
ANR	515887	Argument	"""Swap space: %lu\\n"""		515655	1					
ANR	515888	PrimaryExpression	"""Swap space: %lu\\n"""		515655	0					
ANR	515889	Argument	m_virt_mem		515655	2					
ANR	515890	Identifier	m_virt_mem		515655	0					
ANR	515891	ExpressionStatement	credd_test ( )	361:2:10323:10335	515655	2	True				
ANR	515892	CallExpression	credd_test ( )		515655	0					
ANR	515893	Callee	credd_test		515655	0					
ANR	515894	Identifier	credd_test		515655	0					
ANR	515895	ArgumentList			515655	1					
ANR	515896	IfStatement	if ( IS_TIMEOUT ( how_much ) && IS_SHARED ( how_much ) )		515655	3					
ANR	515897	Condition	IS_TIMEOUT ( how_much ) && IS_SHARED ( how_much )	366:5:10354:10396	515655	0	True				
ANR	515898	AndExpression	IS_TIMEOUT ( how_much ) && IS_SHARED ( how_much )		515655	0		&&			
ANR	515899	CallExpression	IS_TIMEOUT ( how_much )		515655	0					
ANR	515900	Callee	IS_TIMEOUT		515655	0					
ANR	515901	Identifier	IS_TIMEOUT		515655	0					
ANR	515902	ArgumentList	how_much		515655	1					
ANR	515903	Argument	how_much		515655	0					
ANR	515904	Identifier	how_much		515655	0					
ANR	515905	CallExpression	IS_SHARED ( how_much )		515655	1					
ANR	515906	Callee	IS_SHARED		515655	0					
ANR	515907	Identifier	IS_SHARED		515655	0					
ANR	515908	ArgumentList	how_much		515655	1					
ANR	515909	Argument	how_much		515655	0					
ANR	515910	Identifier	how_much		515655	0					
ANR	515911	CompoundStatement		103:8:2637:2660	515655	1					
ANR	515912	ExpressionStatement	m_load = sysapi_load_avg ( )	367:2:10404:10430	515655	0	True				
ANR	515913	AssignmentExpression	m_load = sysapi_load_avg ( )		515655	0		=			
ANR	515914	Identifier	m_load		515655	0					
ANR	515915	CallExpression	sysapi_load_avg ( )		515655	1					
ANR	515916	Callee	sysapi_load_avg		515655	0					
ANR	515917	Identifier	sysapi_load_avg		515655	0					
ANR	515918	ArgumentList			515655	1					
ANR	515919	ExpressionStatement	"sysapi_idle_time ( & m_idle , & m_console_idle )"	369:2:10435:10479	515655	1	True				
ANR	515920	CallExpression	"sysapi_idle_time ( & m_idle , & m_console_idle )"		515655	0					
ANR	515921	Callee	sysapi_idle_time		515655	0					
ANR	515922	Identifier	sysapi_idle_time		515655	0					
ANR	515923	ArgumentList	& m_idle		515655	1					
ANR	515924	Argument	& m_idle		515655	0					
ANR	515925	UnaryOperationExpression	& m_idle		515655	0					
ANR	515926	UnaryOperator	&		515655	0					
ANR	515927	Identifier	m_idle		515655	1					
ANR	515928	Argument	& m_console_idle		515655	1					
ANR	515929	UnaryOperationExpression	& m_console_idle		515655	0					
ANR	515930	UnaryOperator	&		515655	0					
ANR	515931	Identifier	m_console_idle		515655	1					
ANR	515932	IdentifierDeclStatement	time_t my_timer ;	371:2:10484:10499	515655	2	True				
ANR	515933	IdentifierDecl	my_timer		515655	0					
ANR	515934	IdentifierDeclType	time_t		515655	0					
ANR	515935	Identifier	my_timer		515655	1					
ANR	515936	IdentifierDeclStatement	struct tm * the_time ;	372:2:10503:10522	515655	3	True				
ANR	515937	IdentifierDecl	* the_time		515655	0					
ANR	515938	IdentifierDeclType	struct tm *		515655	0					
ANR	515939	Identifier	the_time		515655	1					
ANR	515940	ExpressionStatement	time ( & my_timer )	373:2:10526:10543	515655	4	True				
ANR	515941	CallExpression	time ( & my_timer )		515655	0					
ANR	515942	Callee	time		515655	0					
ANR	515943	Identifier	time		515655	0					
ANR	515944	ArgumentList	& my_timer		515655	1					
ANR	515945	Argument	& my_timer		515655	0					
ANR	515946	UnaryOperationExpression	& my_timer		515655	0					
ANR	515947	UnaryOperator	&		515655	0					
ANR	515948	Identifier	my_timer		515655	1					
ANR	515949	ExpressionStatement	the_time = localtime ( & my_timer )	374:2:10547:10578	515655	5	True				
ANR	515950	AssignmentExpression	the_time = localtime ( & my_timer )		515655	0		=			
ANR	515951	Identifier	the_time		515655	0					
ANR	515952	CallExpression	localtime ( & my_timer )		515655	1					
ANR	515953	Callee	localtime		515655	0					
ANR	515954	Identifier	localtime		515655	0					
ANR	515955	ArgumentList	& my_timer		515655	1					
ANR	515956	Argument	& my_timer		515655	0					
ANR	515957	UnaryOperationExpression	& my_timer		515655	0					
ANR	515958	UnaryOperator	&		515655	0					
ANR	515959	Identifier	my_timer		515655	1					
ANR	515960	ExpressionStatement	m_clock_min = ( the_time -> tm_hour * 60 ) + the_time -> tm_min	375:2:10582:10639	515655	6	True				
ANR	515961	AssignmentExpression	m_clock_min = ( the_time -> tm_hour * 60 ) + the_time -> tm_min		515655	0		=			
ANR	515962	Identifier	m_clock_min		515655	0					
ANR	515963	AdditiveExpression	( the_time -> tm_hour * 60 ) + the_time -> tm_min		515655	1		+			
ANR	515964	MultiplicativeExpression	the_time -> tm_hour * 60		515655	0		*			
ANR	515965	PtrMemberAccess	the_time -> tm_hour		515655	0					
ANR	515966	Identifier	the_time		515655	0					
ANR	515967	Identifier	tm_hour		515655	1					
ANR	515968	PrimaryExpression	60		515655	1					
ANR	515969	PtrMemberAccess	the_time -> tm_min		515655	1					
ANR	515970	Identifier	the_time		515655	0					
ANR	515971	Identifier	tm_min		515655	1					
ANR	515972	ExpressionStatement	m_clock_day = the_time -> tm_wday	376:2:10643:10674	515655	7	True				
ANR	515973	AssignmentExpression	m_clock_day = the_time -> tm_wday		515655	0		=			
ANR	515974	Identifier	m_clock_day		515655	0					
ANR	515975	PtrMemberAccess	the_time -> tm_wday		515655	1					
ANR	515976	Identifier	the_time		515655	0					
ANR	515977	Identifier	tm_wday		515655	1					
ANR	515978	IfStatement	if ( m_last_keypress < my_timer - m_idle )		515655	8					
ANR	515979	Condition	m_last_keypress < my_timer - m_idle	378:6:10683:10717	515655	0	True				
ANR	515980	RelationalExpression	m_last_keypress < my_timer - m_idle		515655	0		<			
ANR	515981	Identifier	m_last_keypress		515655	0					
ANR	515982	AdditiveExpression	my_timer - m_idle		515655	1		-			
ANR	515983	Identifier	my_timer		515655	0					
ANR	515984	Identifier	m_idle		515655	1					
ANR	515985	CompoundStatement		81:43:2157:2157	515655	1					
ANR	515986	IfStatement	if ( m_idle_interval >= 0 )		515655	0					
ANR	515987	Condition	m_idle_interval >= 0	379:7:10729:10748	515655	0	True				
ANR	515988	RelationalExpression	m_idle_interval >= 0		515655	0		>=			
ANR	515989	Identifier	m_idle_interval		515655	0					
ANR	515990	PrimaryExpression	0		515655	1					
ANR	515991	CompoundStatement		83:4:2194:2235	515655	1					
ANR	515992	IdentifierDeclStatement	int duration = my_timer - m_last_keypress ;	380:4:10757:10798	515655	0	True				
ANR	515993	IdentifierDecl	duration = my_timer - m_last_keypress		515655	0					
ANR	515994	IdentifierDeclType	int		515655	0					
ANR	515995	Identifier	duration		515655	1					
ANR	515996	AssignmentExpression	duration = my_timer - m_last_keypress		515655	2		=			
ANR	515997	Identifier	duration		515655	0					
ANR	515998	AdditiveExpression	my_timer - m_last_keypress		515655	1		-			
ANR	515999	Identifier	my_timer		515655	0					
ANR	516000	Identifier	m_last_keypress		515655	1					
ANR	516001	IfStatement	if ( duration > m_idle_interval )		515655	1					
ANR	516002	Condition	duration > m_idle_interval	381:8:10808:10833	515655	0	True				
ANR	516003	RelationalExpression	duration > m_idle_interval		515655	0		>			
ANR	516004	Identifier	duration		515655	0					
ANR	516005	Identifier	m_idle_interval		515655	1					
ANR	516006	CompoundStatement		84:36:2273:2273	515655	1					
ANR	516007	IfStatement	if ( m_seen_keypress )		515655	0					
ANR	516008	Condition	m_seen_keypress	382:9:10847:10861	515655	0	True				
ANR	516009	Identifier	m_seen_keypress		515655	0					
ANR	516010	CompoundStatement		85:26:2301:2301	515655	1					
ANR	516011	ExpressionStatement	"dprintf ( D_IDLE , ""end idle interval of %d sec.\\n"" , duration )"	383:6:10872:10939	515655	0	True				
ANR	516012	CallExpression	"dprintf ( D_IDLE , ""end idle interval of %d sec.\\n"" , duration )"		515655	0					
ANR	516013	Callee	dprintf		515655	0					
ANR	516014	Identifier	dprintf		515655	0					
ANR	516015	ArgumentList	D_IDLE		515655	1					
ANR	516016	Argument	D_IDLE		515655	0					
ANR	516017	Identifier	D_IDLE		515655	0					
ANR	516018	Argument	"""end idle interval of %d sec.\\n"""		515655	1					
ANR	516019	PrimaryExpression	"""end idle interval of %d sec.\\n"""		515655	0					
ANR	516020	Argument	duration		515655	2					
ANR	516021	Identifier	duration		515655	0					
ANR	516022	ElseStatement	else		515655	0					
ANR	516023	CompoundStatement		88:12:2390:2390	515655	0					
ANR	516024	ExpressionStatement	"dprintf ( D_IDLE , ""first keyboard event %d sec. after startup\\n"" , duration )"	386:6:10961:11050	515655	0	True				
ANR	516025	CallExpression	"dprintf ( D_IDLE , ""first keyboard event %d sec. after startup\\n"" , duration )"		515655	0					
ANR	516026	Callee	dprintf		515655	0					
ANR	516027	Identifier	dprintf		515655	0					
ANR	516028	ArgumentList	D_IDLE		515655	1					
ANR	516029	Argument	D_IDLE		515655	0					
ANR	516030	Identifier	D_IDLE		515655	0					
ANR	516031	Argument	"""first keyboard event %d sec. after startup\\n"""		515655	1					
ANR	516032	PrimaryExpression	"""first keyboard event %d sec. after startup\\n"""		515655	0					
ANR	516033	Argument	duration		515655	2					
ANR	516034	Identifier	duration		515655	0					
ANR	516035	ExpressionStatement	m_last_keypress = my_timer	392:3:11073:11099	515655	1	True				
ANR	516036	AssignmentExpression	m_last_keypress = my_timer		515655	0		=			
ANR	516037	Identifier	m_last_keypress		515655	0					
ANR	516038	Identifier	my_timer		515655	1					
ANR	516039	ExpressionStatement	m_seen_keypress = true	393:3:11104:11126	515655	2	True				
ANR	516040	AssignmentExpression	m_seen_keypress = true		515655	0		=			
ANR	516041	Identifier	m_seen_keypress		515655	0					
ANR	516042	Identifier	true		515655	1					
ANR	516043	ExpressionStatement	update_all_WinPerf_results ( )	397:8:11154:11182	515655	9	True				
ANR	516044	CallExpression	update_all_WinPerf_results ( )		515655	0					
ANR	516045	Callee	update_all_WinPerf_results		515655	0					
ANR	516046	Identifier	update_all_WinPerf_results		515655	0					
ANR	516047	ArgumentList			515655	1					
ANR	516048	IdentifierDeclStatement	AttribValue * pav = NULL ;	400:8:11200:11223	515655	10	True				
ANR	516049	IdentifierDecl	* pav = NULL		515655	0					
ANR	516050	IdentifierDeclType	AttribValue *		515655	0					
ANR	516051	Identifier	pav		515655	1					
ANR	516052	AssignmentExpression	* pav = NULL		515655	2		=			
ANR	516053	Identifier	NULL		515655	0					
ANR	516054	Identifier	NULL		515655	1					
ANR	516055	ExpressionStatement	m_lst_dynamic . Rewind ( )	401:8:11233:11255	515655	11	True				
ANR	516056	CallExpression	m_lst_dynamic . Rewind ( )		515655	0					
ANR	516057	Callee	m_lst_dynamic . Rewind		515655	0					
ANR	516058	MemberAccess	m_lst_dynamic . Rewind		515655	0					
ANR	516059	Identifier	m_lst_dynamic		515655	0					
ANR	516060	Identifier	Rewind		515655	1					
ANR	516061	ArgumentList			515655	1					
ANR	516062	WhileStatement	while ( ( pav = m_lst_dynamic . Next ( ) ) )		515655	12					
ANR	516063	Condition	pav = m_lst_dynamic . Next ( )	402:15:11272:11299	515655	0	True				
ANR	516064	AssignmentExpression	pav = m_lst_dynamic . Next ( )		515655	0		=			
ANR	516065	Identifier	pav		515655	0					
ANR	516066	CallExpression	m_lst_dynamic . Next ( )		515655	1					
ANR	516067	Callee	m_lst_dynamic . Next		515655	0					
ANR	516068	MemberAccess	m_lst_dynamic . Next		515655	0					
ANR	516069	Identifier	m_lst_dynamic		515655	0					
ANR	516070	Identifier	Next		515655	1					
ANR	516071	ArgumentList			515655	1					
ANR	516072	CompoundStatement		105:46:2740:2740	515655	1					
ANR	516073	IfStatement	if ( pav )		515655	0					
ANR	516074	Condition	pav	403:15:11320:11322	515655	0	True				
ANR	516075	Identifier	pav		515655	0					
ANR	516076	CompoundStatement		106:20:2762:2762	515655	1					
ANR	516077	IfStatement	if ( ! update_WinPerf_Value ( pav ) )		515655	0					
ANR	516078	Condition	! update_WinPerf_Value ( pav )	405:19:11372:11398	515655	0	True				
ANR	516079	UnaryOperationExpression	! update_WinPerf_Value ( pav )		515655	0					
ANR	516080	UnaryOperator	!		515655	0					
ANR	516081	CallExpression	update_WinPerf_Value ( pav )		515655	1					
ANR	516082	Callee	update_WinPerf_Value		515655	0					
ANR	516083	Identifier	update_WinPerf_Value		515655	0					
ANR	516084	ArgumentList	pav		515655	1					
ANR	516085	Argument	pav		515655	0					
ANR	516086	Identifier	pav		515655	0					
ANR	516087	ExpressionStatement	pav -> vtype = AttribValue_DataType_Max	406:17:11418:11455	515655	1	True				
ANR	516088	AssignmentExpression	pav -> vtype = AttribValue_DataType_Max		515655	0		=			
ANR	516089	PtrMemberAccess	pav -> vtype		515655	0					
ANR	516090	Identifier	pav		515655	0					
ANR	516091	Identifier	vtype		515655	1					
ANR	516092	Identifier	AttribValue_DataType_Max		515655	1					
ANR	516093	IfStatement	if ( IS_TIMEOUT ( how_much ) && IS_SUMMED ( how_much ) )		515655	4					
ANR	516094	Condition	IS_TIMEOUT ( how_much ) && IS_SUMMED ( how_much )	416:5:11659:11701	515655	0	True				
ANR	516095	AndExpression	IS_TIMEOUT ( how_much ) && IS_SUMMED ( how_much )		515655	0		&&			
ANR	516096	CallExpression	IS_TIMEOUT ( how_much )		515655	0					
ANR	516097	Callee	IS_TIMEOUT		515655	0					
ANR	516098	Identifier	IS_TIMEOUT		515655	0					
ANR	516099	ArgumentList	how_much		515655	1					
ANR	516100	Argument	how_much		515655	0					
ANR	516101	Identifier	how_much		515655	0					
ANR	516102	CallExpression	IS_SUMMED ( how_much )		515655	1					
ANR	516103	Callee	IS_SUMMED		515655	0					
ANR	516104	Identifier	IS_SUMMED		515655	0					
ANR	516105	ArgumentList	how_much		515655	1					
ANR	516106	Argument	how_much		515655	0					
ANR	516107	Identifier	how_much		515655	0					
ANR	516108	CompoundStatement		119:51:3142:3142	515655	1					
ANR	516109	ExpressionStatement	m_condor_load = resmgr -> sum ( & Resource :: condor_load )	417:2:11709:11762	515655	0	True				
ANR	516110	AssignmentExpression	m_condor_load = resmgr -> sum ( & Resource :: condor_load )		515655	0		=			
ANR	516111	Identifier	m_condor_load		515655	0					
ANR	516112	CallExpression	resmgr -> sum ( & Resource :: condor_load )		515655	1					
ANR	516113	Callee	resmgr -> sum		515655	0					
ANR	516114	PtrMemberAccess	resmgr -> sum		515655	0					
ANR	516115	Identifier	resmgr		515655	0					
ANR	516116	Identifier	sum		515655	1					
ANR	516117	ArgumentList	& Resource :: condor_load		515655	1					
ANR	516118	Argument	& Resource :: condor_load		515655	0					
ANR	516119	UnaryOperationExpression	& Resource :: condor_load		515655	0					
ANR	516120	UnaryOperator	&		515655	0					
ANR	516121	Identifier	Resource :: condor_load		515655	1					
ANR	516122	IfStatement	if ( m_condor_load > m_load )		515655	1					
ANR	516123	Condition	m_condor_load > m_load	418:6:11770:11791	515655	0	True				
ANR	516124	RelationalExpression	m_condor_load > m_load		515655	0		>			
ANR	516125	Identifier	m_condor_load		515655	0					
ANR	516126	Identifier	m_load		515655	1					
ANR	516127	CompoundStatement		121:31:3232:3232	515655	1					
ANR	516128	ExpressionStatement	m_condor_load = m_load	419:3:11800:11822	515655	0	True				
ANR	516129	AssignmentExpression	m_condor_load = m_load		515655	0		=			
ANR	516130	Identifier	m_condor_load		515655	0					
ANR	516131	Identifier	m_load		515655	1					
ANR	516132	ReturnType	void		515655	1					
ANR	516133	Identifier	MachAttributes :: compute		515655	2					
ANR	516134	ParameterList	amask_t how_much		515655	3					
ANR	516135	Parameter	amask_t how_much	297:25:8543:8558	515655	0	True				
ANR	516136	ParameterType	amask_t		515655	0					
ANR	516137	Identifier	how_much		515655	1					
ANR	516138	CFGEntryNode	ENTRY		515655		True				
ANR	516139	CFGExitNode	EXIT		515655		True				
ANR	516140	Symbol	m_arch		515655						
ANR	516141	Symbol	& m_idle		515655						
ANR	516142	Symbol	localtime		515655						
ANR	516143	Symbol	the_time		515655						
ANR	516144	Symbol	the_time -> tm_min		515655						
ANR	516145	Symbol	m_ckptpltfrm		515655						
ANR	516146	Symbol	IS_TIMEOUT		515655						
ANR	516147	Symbol	D_IDLE		515655						
ANR	516148	Symbol	m_idle		515655						
ANR	516149	Symbol	m_opsys		515655						
ANR	516150	Symbol	my_timer		515655						
ANR	516151	Symbol	m_seen_keypress		515655						
ANR	516152	Symbol	m_load		515655						
ANR	516153	Symbol	update_WinPerf_Value		515655						
ANR	516154	Symbol	m_lst_dynamic		515655						
ANR	516155	Symbol	the_time -> tm_wday		515655						
ANR	516156	Symbol	m_lst_dynamic . Next		515655						
ANR	516157	Symbol	NULL		515655						
ANR	516158	Symbol	m_clock_min		515655						
ANR	516159	Symbol	pav		515655						
ANR	516160	Symbol	m_virt_mem		515655						
ANR	516161	Symbol	* resmgr		515655						
ANR	516162	Symbol	m_condor_load		515655						
ANR	516163	Symbol	D_FULLDEBUG		515655						
ANR	516164	Symbol	ATTR_UID_DOMAIN		515655						
ANR	516165	Symbol	ATTR_FILE_SYSTEM_DOMAIN		515655						
ANR	516166	Symbol	resmgr		515655						
ANR	516167	Symbol	IS_SHARED		515655						
ANR	516168	Symbol	the_time -> tm_hour		515655						
ANR	516169	Symbol	true		515655						
ANR	516170	Symbol	param_integer		515655						
ANR	516171	Symbol	IS_SUMMED		515655						
ANR	516172	Symbol	& Resource :: condor_load		515655						
ANR	516173	Symbol	m_idle_interval		515655						
ANR	516174	Symbol	m_opsysver		515655						
ANR	516175	Symbol	sysapi_swap_space		515655						
ANR	516176	Symbol	resmgr -> sum		515655						
ANR	516177	Symbol	* pav		515655						
ANR	516178	Symbol	how_much		515655						
ANR	516179	Symbol	duration		515655						
ANR	516180	Symbol	m_opsys_and_ver		515655						
ANR	516181	Symbol	param		515655						
ANR	516182	Symbol	m_uid_domain		515655						
ANR	516183	Symbol	m_filesystem_domain		515655						
ANR	516184	Symbol	AttribValue_DataType_Max		515655						
ANR	516185	Symbol	& m_console_idle		515655						
ANR	516186	Symbol	sysapi_ckptpltfrm		515655						
ANR	516187	Symbol	sysapi_load_avg		515655						
ANR	516188	Symbol	* the_time		515655						
ANR	516189	Symbol	m_user_settings_init		515655						
ANR	516190	Symbol	m_clock_day		515655						
ANR	516191	Symbol	pav -> vtype		515655						
ANR	516192	Symbol	IS_STATIC		515655						
ANR	516193	Symbol	IS_UPDATE		515655						
ANR	516194	Symbol	strdup		515655						
ANR	516195	Symbol	& my_timer		515655						
ANR	516196	Symbol	m_last_keypress		515655						
ANR	516197	Function	MachAttributes :: final_idle_dprintf	424:0:11834:12106							
ANR	516198	FunctionDef	MachAttributes :: final_idle_dprintf ()		516197	0					
ANR	516199	CompoundStatement		426:0:11876:12106	516197	0					
ANR	516200	IfStatement	if ( m_idle_interval >= 0 )		516197	0					
ANR	516201	Condition	m_idle_interval >= 0	427:5:11883:11902	516197	0	True				
ANR	516202	RelationalExpression	m_idle_interval >= 0		516197	0		>=			
ANR	516203	Identifier	m_idle_interval		516197	0					
ANR	516204	PrimaryExpression	0		516197	1					
ANR	516205	CompoundStatement		4:2:61:102	516197	1					
ANR	516206	IdentifierDeclStatement	time_t my_timer = time ( 0 ) ;	428:2:11909:11934	516197	0	True				
ANR	516207	IdentifierDecl	my_timer = time ( 0 )		516197	0					
ANR	516208	IdentifierDeclType	time_t		516197	0					
ANR	516209	Identifier	my_timer		516197	1					
ANR	516210	AssignmentExpression	my_timer = time ( 0 )		516197	2		=			
ANR	516211	Identifier	my_timer		516197	0					
ANR	516212	CallExpression	time ( 0 )		516197	1					
ANR	516213	Callee	time		516197	0					
ANR	516214	Identifier	time		516197	0					
ANR	516215	ArgumentList	0		516197	1					
ANR	516216	Argument	0		516197	0					
ANR	516217	PrimaryExpression	0		516197	0					
ANR	516218	IdentifierDeclStatement	int duration = my_timer - m_last_keypress ;	429:2:11938:11979	516197	1	True				
ANR	516219	IdentifierDecl	duration = my_timer - m_last_keypress		516197	0					
ANR	516220	IdentifierDeclType	int		516197	0					
ANR	516221	Identifier	duration		516197	1					
ANR	516222	AssignmentExpression	duration = my_timer - m_last_keypress		516197	2		=			
ANR	516223	Identifier	duration		516197	0					
ANR	516224	AdditiveExpression	my_timer - m_last_keypress		516197	1		-			
ANR	516225	Identifier	my_timer		516197	0					
ANR	516226	Identifier	m_last_keypress		516197	1					
ANR	516227	IfStatement	if ( duration > m_idle_interval )		516197	2					
ANR	516228	Condition	duration > m_idle_interval	430:6:11987:12012	516197	0	True				
ANR	516229	RelationalExpression	duration > m_idle_interval		516197	0		>			
ANR	516230	Identifier	duration		516197	0					
ANR	516231	Identifier	m_idle_interval		516197	1					
ANR	516232	CompoundStatement		5:34:138:138	516197	1					
ANR	516233	ExpressionStatement	"dprintf ( D_IDLE , ""keyboard idle for %d sec. before shutdown\\n"" , duration )"	431:3:12020:12097	516197	0	True				
ANR	516234	CallExpression	"dprintf ( D_IDLE , ""keyboard idle for %d sec. before shutdown\\n"" , duration )"		516197	0					
ANR	516235	Callee	dprintf		516197	0					
ANR	516236	Identifier	dprintf		516197	0					
ANR	516237	ArgumentList	D_IDLE		516197	1					
ANR	516238	Argument	D_IDLE		516197	0					
ANR	516239	Identifier	D_IDLE		516197	0					
ANR	516240	Argument	"""keyboard idle for %d sec. before shutdown\\n"""		516197	1					
ANR	516241	PrimaryExpression	"""keyboard idle for %d sec. before shutdown\\n"""		516197	0					
ANR	516242	Argument	duration		516197	2					
ANR	516243	Identifier	duration		516197	0					
ANR	516244	ReturnType	void		516197	1					
ANR	516245	Identifier	MachAttributes :: final_idle_dprintf		516197	2					
ANR	516246	ParameterList			516197	3					
ANR	516247	CFGEntryNode	ENTRY		516197		True				
ANR	516248	CFGExitNode	EXIT		516197		True				
ANR	516249	Symbol	my_timer		516197						
ANR	516250	Symbol	duration		516197						
ANR	516251	Symbol	m_idle_interval		516197						
ANR	516252	Symbol	D_IDLE		516197						
ANR	516253	Symbol	time		516197						
ANR	516254	Symbol	m_last_keypress		516197						
ANR	516255	Function	MachAttributes :: publish	437:0:12109:16873							
ANR	516256	FunctionDef	"MachAttributes :: publish (ClassAd * cp , amask_t how_much)"		516255	0					
ANR	516257	CompoundStatement		439:0:12171:16873	516255	0					
ANR	516258	IfStatement	if ( IS_STATIC ( how_much ) || IS_PUBLIC ( how_much ) )		516255	0					
ANR	516259	Condition	IS_STATIC ( how_much ) || IS_PUBLIC ( how_much )	440:5:12178:12219	516255	0	True				
ANR	516260	OrExpression	IS_STATIC ( how_much ) || IS_PUBLIC ( how_much )		516255	0		||			
ANR	516261	CallExpression	IS_STATIC ( how_much )		516255	0					
ANR	516262	Callee	IS_STATIC		516255	0					
ANR	516263	Identifier	IS_STATIC		516255	0					
ANR	516264	ArgumentList	how_much		516255	1					
ANR	516265	Argument	how_much		516255	0					
ANR	516266	Identifier	how_much		516255	0					
ANR	516267	CallExpression	IS_PUBLIC ( how_much )		516255	1					
ANR	516268	Callee	IS_PUBLIC		516255	0					
ANR	516269	Identifier	IS_PUBLIC		516255	0					
ANR	516270	ArgumentList	how_much		516255	1					
ANR	516271	Argument	how_much		516255	0					
ANR	516272	Identifier	how_much		516255	0					
ANR	516273	CompoundStatement		2:50:51:51	516255	1					
ANR	516274	ExpressionStatement	"cp -> Assign ( ATTR_STARTD_IP_ADDR , daemonCore -> InfoCommandSinfulString ( ) )"	443:2:12249:12326	516255	0	True				
ANR	516275	CallExpression	"cp -> Assign ( ATTR_STARTD_IP_ADDR , daemonCore -> InfoCommandSinfulString ( ) )"		516255	0					
ANR	516276	Callee	cp -> Assign		516255	0					
ANR	516277	PtrMemberAccess	cp -> Assign		516255	0					
ANR	516278	Identifier	cp		516255	0					
ANR	516279	Identifier	Assign		516255	1					
ANR	516280	ArgumentList	ATTR_STARTD_IP_ADDR		516255	1					
ANR	516281	Argument	ATTR_STARTD_IP_ADDR		516255	0					
ANR	516282	Identifier	ATTR_STARTD_IP_ADDR		516255	0					
ANR	516283	Argument	daemonCore -> InfoCommandSinfulString ( )		516255	1					
ANR	516284	CallExpression	daemonCore -> InfoCommandSinfulString ( )		516255	0					
ANR	516285	Callee	daemonCore -> InfoCommandSinfulString		516255	0					
ANR	516286	PtrMemberAccess	daemonCore -> InfoCommandSinfulString		516255	0					
ANR	516287	Identifier	daemonCore		516255	0					
ANR	516288	Identifier	InfoCommandSinfulString		516255	1					
ANR	516289	ArgumentList			516255	1					
ANR	516290	ExpressionStatement	"cp -> Assign ( ATTR_ARCH , m_arch )"	446:8:12337:12368	516255	1	True				
ANR	516291	CallExpression	"cp -> Assign ( ATTR_ARCH , m_arch )"		516255	0					
ANR	516292	Callee	cp -> Assign		516255	0					
ANR	516293	PtrMemberAccess	cp -> Assign		516255	0					
ANR	516294	Identifier	cp		516255	0					
ANR	516295	Identifier	Assign		516255	1					
ANR	516296	ArgumentList	ATTR_ARCH		516255	1					
ANR	516297	Argument	ATTR_ARCH		516255	0					
ANR	516298	Identifier	ATTR_ARCH		516255	0					
ANR	516299	Argument	m_arch		516255	1					
ANR	516300	Identifier	m_arch		516255	0					
ANR	516301	ExpressionStatement	"cp -> Assign ( ATTR_OPSYS , m_opsys )"	448:2:12373:12406	516255	2	True				
ANR	516302	CallExpression	"cp -> Assign ( ATTR_OPSYS , m_opsys )"		516255	0					
ANR	516303	Callee	cp -> Assign		516255	0					
ANR	516304	PtrMemberAccess	cp -> Assign		516255	0					
ANR	516305	Identifier	cp		516255	0					
ANR	516306	Identifier	Assign		516255	1					
ANR	516307	ArgumentList	ATTR_OPSYS		516255	1					
ANR	516308	Argument	ATTR_OPSYS		516255	0					
ANR	516309	Identifier	ATTR_OPSYS		516255	0					
ANR	516310	Argument	m_opsys		516255	1					
ANR	516311	Identifier	m_opsys		516255	0					
ANR	516312	IfStatement	if ( m_opsysver )		516255	3					
ANR	516313	Condition	m_opsysver	449:12:12420:12429	516255	0	True				
ANR	516314	Identifier	m_opsysver		516255	0					
ANR	516315	CompoundStatement		11:24:260:260	516255	1					
ANR	516316	ExpressionStatement	"cp -> Assign ( ATTR_OPSYSVER , m_opsysver )"	450:3:12437:12476	516255	0	True				
ANR	516317	CallExpression	"cp -> Assign ( ATTR_OPSYSVER , m_opsysver )"		516255	0					
ANR	516318	Callee	cp -> Assign		516255	0					
ANR	516319	PtrMemberAccess	cp -> Assign		516255	0					
ANR	516320	Identifier	cp		516255	0					
ANR	516321	Identifier	Assign		516255	1					
ANR	516322	ArgumentList	ATTR_OPSYSVER		516255	1					
ANR	516323	Argument	ATTR_OPSYSVER		516255	0					
ANR	516324	Identifier	ATTR_OPSYSVER		516255	0					
ANR	516325	Argument	m_opsysver		516255	1					
ANR	516326	Identifier	m_opsysver		516255	0					
ANR	516327	ExpressionStatement	"cp -> Assign ( ATTR_OPSYS_AND_VER , m_opsys_and_ver )"	452:2:12490:12539	516255	4	True				
ANR	516328	CallExpression	"cp -> Assign ( ATTR_OPSYS_AND_VER , m_opsys_and_ver )"		516255	0					
ANR	516329	Callee	cp -> Assign		516255	0					
ANR	516330	PtrMemberAccess	cp -> Assign		516255	0					
ANR	516331	Identifier	cp		516255	0					
ANR	516332	Identifier	Assign		516255	1					
ANR	516333	ArgumentList	ATTR_OPSYS_AND_VER		516255	1					
ANR	516334	Argument	ATTR_OPSYS_AND_VER		516255	0					
ANR	516335	Identifier	ATTR_OPSYS_AND_VER		516255	0					
ANR	516336	Argument	m_opsys_and_ver		516255	1					
ANR	516337	Identifier	m_opsys_and_ver		516255	0					
ANR	516338	ExpressionStatement	"cp -> Assign ( ATTR_UID_DOMAIN , m_uid_domain )"	454:2:12544:12587	516255	5	True				
ANR	516339	CallExpression	"cp -> Assign ( ATTR_UID_DOMAIN , m_uid_domain )"		516255	0					
ANR	516340	Callee	cp -> Assign		516255	0					
ANR	516341	PtrMemberAccess	cp -> Assign		516255	0					
ANR	516342	Identifier	cp		516255	0					
ANR	516343	Identifier	Assign		516255	1					
ANR	516344	ArgumentList	ATTR_UID_DOMAIN		516255	1					
ANR	516345	Argument	ATTR_UID_DOMAIN		516255	0					
ANR	516346	Identifier	ATTR_UID_DOMAIN		516255	0					
ANR	516347	Argument	m_uid_domain		516255	1					
ANR	516348	Identifier	m_uid_domain		516255	0					
ANR	516349	ExpressionStatement	"cp -> Assign ( ATTR_FILE_SYSTEM_DOMAIN , m_filesystem_domain )"	456:2:12592:12650	516255	6	True				
ANR	516350	CallExpression	"cp -> Assign ( ATTR_FILE_SYSTEM_DOMAIN , m_filesystem_domain )"		516255	0					
ANR	516351	Callee	cp -> Assign		516255	0					
ANR	516352	PtrMemberAccess	cp -> Assign		516255	0					
ANR	516353	Identifier	cp		516255	0					
ANR	516354	Identifier	Assign		516255	1					
ANR	516355	ArgumentList	ATTR_FILE_SYSTEM_DOMAIN		516255	1					
ANR	516356	Argument	ATTR_FILE_SYSTEM_DOMAIN		516255	0					
ANR	516357	Identifier	ATTR_FILE_SYSTEM_DOMAIN		516255	0					
ANR	516358	Argument	m_filesystem_domain		516255	1					
ANR	516359	Identifier	m_filesystem_domain		516255	0					
ANR	516360	ExpressionStatement	"cp -> Assign ( ATTR_HAS_IO_PROXY , true )"	458:2:12655:12692	516255	7	True				
ANR	516361	CallExpression	"cp -> Assign ( ATTR_HAS_IO_PROXY , true )"		516255	0					
ANR	516362	Callee	cp -> Assign		516255	0					
ANR	516363	PtrMemberAccess	cp -> Assign		516255	0					
ANR	516364	Identifier	cp		516255	0					
ANR	516365	Identifier	Assign		516255	1					
ANR	516366	ArgumentList	ATTR_HAS_IO_PROXY		516255	1					
ANR	516367	Argument	ATTR_HAS_IO_PROXY		516255	0					
ANR	516368	Identifier	ATTR_HAS_IO_PROXY		516255	0					
ANR	516369	Argument	true		516255	1					
ANR	516370	Identifier	true		516255	0					
ANR	516371	ExpressionStatement	"cp -> Assign ( ATTR_CHECKPOINT_PLATFORM , m_ckptpltfrm )"	460:2:12697:12749	516255	8	True				
ANR	516372	CallExpression	"cp -> Assign ( ATTR_CHECKPOINT_PLATFORM , m_ckptpltfrm )"		516255	0					
ANR	516373	Callee	cp -> Assign		516255	0					
ANR	516374	PtrMemberAccess	cp -> Assign		516255	0					
ANR	516375	Identifier	cp		516255	0					
ANR	516376	Identifier	Assign		516255	1					
ANR	516377	ArgumentList	ATTR_CHECKPOINT_PLATFORM		516255	1					
ANR	516378	Argument	ATTR_CHECKPOINT_PLATFORM		516255	0					
ANR	516379	Identifier	ATTR_CHECKPOINT_PLATFORM		516255	0					
ANR	516380	Argument	m_ckptpltfrm		516255	1					
ANR	516381	Identifier	m_ckptpltfrm		516255	0					
ANR	516382	IfStatement	if ( m_got_windows_version_info )		516255	9					
ANR	516383	Condition	m_got_windows_version_info	464:7:12826:12851	516255	0	True				
ANR	516384	Identifier	m_got_windows_version_info		516255	0					
ANR	516385	CompoundStatement		26:36:683:683	516255	1					
ANR	516386	ExpressionStatement	"cp -> Assign ( ATTR_WINDOWS_MAJOR_VERSION , ( int ) m_window_version_info . dwMajorVersion )"	465:3:12860:12948	516255	0	True				
ANR	516387	CallExpression	"cp -> Assign ( ATTR_WINDOWS_MAJOR_VERSION , ( int ) m_window_version_info . dwMajorVersion )"		516255	0					
ANR	516388	Callee	cp -> Assign		516255	0					
ANR	516389	PtrMemberAccess	cp -> Assign		516255	0					
ANR	516390	Identifier	cp		516255	0					
ANR	516391	Identifier	Assign		516255	1					
ANR	516392	ArgumentList	ATTR_WINDOWS_MAJOR_VERSION		516255	1					
ANR	516393	Argument	ATTR_WINDOWS_MAJOR_VERSION		516255	0					
ANR	516394	Identifier	ATTR_WINDOWS_MAJOR_VERSION		516255	0					
ANR	516395	Argument	( int ) m_window_version_info . dwMajorVersion		516255	1					
ANR	516396	CastExpression	( int ) m_window_version_info . dwMajorVersion		516255	0					
ANR	516397	CastTarget	int		516255	0					
ANR	516398	MemberAccess	m_window_version_info . dwMajorVersion		516255	1					
ANR	516399	Identifier	m_window_version_info		516255	0					
ANR	516400	Identifier	dwMajorVersion		516255	1					
ANR	516401	ExpressionStatement	"cp -> Assign ( ATTR_WINDOWS_MINOR_VERSION , ( int ) m_window_version_info . dwMinorVersion )"	467:3:12953:13041	516255	1	True				
ANR	516402	CallExpression	"cp -> Assign ( ATTR_WINDOWS_MINOR_VERSION , ( int ) m_window_version_info . dwMinorVersion )"		516255	0					
ANR	516403	Callee	cp -> Assign		516255	0					
ANR	516404	PtrMemberAccess	cp -> Assign		516255	0					
ANR	516405	Identifier	cp		516255	0					
ANR	516406	Identifier	Assign		516255	1					
ANR	516407	ArgumentList	ATTR_WINDOWS_MINOR_VERSION		516255	1					
ANR	516408	Argument	ATTR_WINDOWS_MINOR_VERSION		516255	0					
ANR	516409	Identifier	ATTR_WINDOWS_MINOR_VERSION		516255	0					
ANR	516410	Argument	( int ) m_window_version_info . dwMinorVersion		516255	1					
ANR	516411	CastExpression	( int ) m_window_version_info . dwMinorVersion		516255	0					
ANR	516412	CastTarget	int		516255	0					
ANR	516413	MemberAccess	m_window_version_info . dwMinorVersion		516255	1					
ANR	516414	Identifier	m_window_version_info		516255	0					
ANR	516415	Identifier	dwMinorVersion		516255	1					
ANR	516416	ExpressionStatement	"cp -> Assign ( ATTR_WINDOWS_BUILD_NUMBER , ( int ) m_window_version_info . dwBuildNumber )"	469:3:13046:13132	516255	2	True				
ANR	516417	CallExpression	"cp -> Assign ( ATTR_WINDOWS_BUILD_NUMBER , ( int ) m_window_version_info . dwBuildNumber )"		516255	0					
ANR	516418	Callee	cp -> Assign		516255	0					
ANR	516419	PtrMemberAccess	cp -> Assign		516255	0					
ANR	516420	Identifier	cp		516255	0					
ANR	516421	Identifier	Assign		516255	1					
ANR	516422	ArgumentList	ATTR_WINDOWS_BUILD_NUMBER		516255	1					
ANR	516423	Argument	ATTR_WINDOWS_BUILD_NUMBER		516255	0					
ANR	516424	Identifier	ATTR_WINDOWS_BUILD_NUMBER		516255	0					
ANR	516425	Argument	( int ) m_window_version_info . dwBuildNumber		516255	1					
ANR	516426	CastExpression	( int ) m_window_version_info . dwBuildNumber		516255	0					
ANR	516427	CastTarget	int		516255	0					
ANR	516428	MemberAccess	m_window_version_info . dwBuildNumber		516255	1					
ANR	516429	Identifier	m_window_version_info		516255	0					
ANR	516430	Identifier	dwBuildNumber		516255	1					
ANR	516431	IfStatement	if ( sizeof ( OSVERSIONINFOEX ) == m_window_version_info . dwOSVersionInfoSize )		516255	3					
ANR	516432	Condition	sizeof ( OSVERSIONINFOEX ) == m_window_version_info . dwOSVersionInfoSize	473:8:13233:13309	516255	0	True				
ANR	516433	EqualityExpression	sizeof ( OSVERSIONINFOEX ) == m_window_version_info . dwOSVersionInfoSize		516255	0		==			
ANR	516434	SizeofExpression	sizeof ( OSVERSIONINFOEX )		516255	0					
ANR	516435	Sizeof	sizeof		516255	0					
ANR	516436	SizeofOperand	OSVERSIONINFOEX		516255	1					
ANR	516437	MemberAccess	m_window_version_info . dwOSVersionInfoSize		516255	1					
ANR	516438	Identifier	m_window_version_info		516255	0					
ANR	516439	Identifier	dwOSVersionInfoSize		516255	1					
ANR	516440	CompoundStatement		36:49:1141:1141	516255	1					
ANR	516441	ExpressionStatement	"cp -> Assign ( ATTR_WINDOWS_SERVICE_PACK_MAJOR , ( int ) m_window_version_info . wServicePackMajor )"	475:4:13319:13416	516255	0	True				
ANR	516442	CallExpression	"cp -> Assign ( ATTR_WINDOWS_SERVICE_PACK_MAJOR , ( int ) m_window_version_info . wServicePackMajor )"		516255	0					
ANR	516443	Callee	cp -> Assign		516255	0					
ANR	516444	PtrMemberAccess	cp -> Assign		516255	0					
ANR	516445	Identifier	cp		516255	0					
ANR	516446	Identifier	Assign		516255	1					
ANR	516447	ArgumentList	ATTR_WINDOWS_SERVICE_PACK_MAJOR		516255	1					
ANR	516448	Argument	ATTR_WINDOWS_SERVICE_PACK_MAJOR		516255	0					
ANR	516449	Identifier	ATTR_WINDOWS_SERVICE_PACK_MAJOR		516255	0					
ANR	516450	Argument	( int ) m_window_version_info . wServicePackMajor		516255	1					
ANR	516451	CastExpression	( int ) m_window_version_info . wServicePackMajor		516255	0					
ANR	516452	CastTarget	int		516255	0					
ANR	516453	MemberAccess	m_window_version_info . wServicePackMajor		516255	1					
ANR	516454	Identifier	m_window_version_info		516255	0					
ANR	516455	Identifier	wServicePackMajor		516255	1					
ANR	516456	ExpressionStatement	"cp -> Assign ( ATTR_WINDOWS_SERVICE_PACK_MINOR , ( int ) m_window_version_info . wServicePackMinor )"	477:4:13422:13519	516255	1	True				
ANR	516457	CallExpression	"cp -> Assign ( ATTR_WINDOWS_SERVICE_PACK_MINOR , ( int ) m_window_version_info . wServicePackMinor )"		516255	0					
ANR	516458	Callee	cp -> Assign		516255	0					
ANR	516459	PtrMemberAccess	cp -> Assign		516255	0					
ANR	516460	Identifier	cp		516255	0					
ANR	516461	Identifier	Assign		516255	1					
ANR	516462	ArgumentList	ATTR_WINDOWS_SERVICE_PACK_MINOR		516255	1					
ANR	516463	Argument	ATTR_WINDOWS_SERVICE_PACK_MINOR		516255	0					
ANR	516464	Identifier	ATTR_WINDOWS_SERVICE_PACK_MINOR		516255	0					
ANR	516465	Argument	( int ) m_window_version_info . wServicePackMinor		516255	1					
ANR	516466	CastExpression	( int ) m_window_version_info . wServicePackMinor		516255	0					
ANR	516467	CastTarget	int		516255	0					
ANR	516468	MemberAccess	m_window_version_info . wServicePackMinor		516255	1					
ANR	516469	Identifier	m_window_version_info		516255	0					
ANR	516470	Identifier	wServicePackMinor		516255	1					
ANR	516471	ExpressionStatement	"cp -> Assign ( ATTR_WINDOWS_PRODUCT_TYPE , ( int ) m_window_version_info . wProductType )"	479:4:13525:13611	516255	2	True				
ANR	516472	CallExpression	"cp -> Assign ( ATTR_WINDOWS_PRODUCT_TYPE , ( int ) m_window_version_info . wProductType )"		516255	0					
ANR	516473	Callee	cp -> Assign		516255	0					
ANR	516474	PtrMemberAccess	cp -> Assign		516255	0					
ANR	516475	Identifier	cp		516255	0					
ANR	516476	Identifier	Assign		516255	1					
ANR	516477	ArgumentList	ATTR_WINDOWS_PRODUCT_TYPE		516255	1					
ANR	516478	Argument	ATTR_WINDOWS_PRODUCT_TYPE		516255	0					
ANR	516479	Identifier	ATTR_WINDOWS_PRODUCT_TYPE		516255	0					
ANR	516480	Argument	( int ) m_window_version_info . wProductType		516255	1					
ANR	516481	CastExpression	( int ) m_window_version_info . wProductType		516255	0					
ANR	516482	CastTarget	int		516255	0					
ANR	516483	MemberAccess	m_window_version_info . wProductType		516255	1					
ANR	516484	Identifier	m_window_version_info		516255	0					
ANR	516485	Identifier	wProductType		516255	1					
ANR	516486	IfStatement	"if ( param_boolean ( ""STARTD_PUBLISH_DOTNET"" , true ) )"		516255	10					
ANR	516487	Condition	"param_boolean ( ""STARTD_PUBLISH_DOTNET"" , true )"	489:11:13759:13802	516255	0	True				
ANR	516488	CallExpression	"param_boolean ( ""STARTD_PUBLISH_DOTNET"" , true )"		516255	0					
ANR	516489	Callee	param_boolean		516255	0					
ANR	516490	Identifier	param_boolean		516255	0					
ANR	516491	ArgumentList	"""STARTD_PUBLISH_DOTNET"""		516255	1					
ANR	516492	Argument	"""STARTD_PUBLISH_DOTNET"""		516255	0					
ANR	516493	PrimaryExpression	"""STARTD_PUBLISH_DOTNET"""		516255	0					
ANR	516494	Argument	true		516255	1					
ANR	516495	Identifier	true		516255	0					
ANR	516496	CompoundStatement		52:8:1641:1641	516255	1					
ANR	516497	IfStatement	if ( m_dot_Net_Versions )		516255	0					
ANR	516498	Condition	m_dot_Net_Versions	491:15:13830:13847	516255	0	True				
ANR	516499	Identifier	m_dot_Net_Versions		516255	0					
ANR	516500	ExpressionStatement	"cp -> Assign ( ATTR_DOTNET_VERSIONS , m_dot_Net_Versions )"	492:16:13866:13918	516255	1	True				
ANR	516501	CallExpression	"cp -> Assign ( ATTR_DOTNET_VERSIONS , m_dot_Net_Versions )"		516255	0					
ANR	516502	Callee	cp -> Assign		516255	0					
ANR	516503	PtrMemberAccess	cp -> Assign		516255	0					
ANR	516504	Identifier	cp		516255	0					
ANR	516505	Identifier	Assign		516255	1					
ANR	516506	ArgumentList	ATTR_DOTNET_VERSIONS		516255	1					
ANR	516507	Argument	ATTR_DOTNET_VERSIONS		516255	0					
ANR	516508	Identifier	ATTR_DOTNET_VERSIONS		516255	0					
ANR	516509	Argument	m_dot_Net_Versions		516255	1					
ANR	516510	Identifier	m_dot_Net_Versions		516255	0					
ANR	516511	ExpressionStatement	m_lst_static . Rewind ( )	498:2:14045:14066	516255	11	True				
ANR	516512	CallExpression	m_lst_static . Rewind ( )		516255	0					
ANR	516513	Callee	m_lst_static . Rewind		516255	0					
ANR	516514	MemberAccess	m_lst_static . Rewind		516255	0					
ANR	516515	Identifier	m_lst_static		516255	0					
ANR	516516	Identifier	Rewind		516255	1					
ANR	516517	ArgumentList			516255	1					
ANR	516518	WhileStatement	while ( AttribValue * pav = m_lst_static . Next ( ) )		516255	12					
ANR	516519	Condition	AttribValue * pav = m_lst_static . Next ( )	499:9:14077:14114	516255	0	True				
ANR	516520	AssignmentExpression	AttribValue * pav = m_lst_static . Next ( )		516255	0		=			
ANR	516521	MultiplicativeExpression	AttribValue * pav		516255	0		*			
ANR	516522	Identifier	AttribValue		516255	0					
ANR	516523	Identifier	pav		516255	1					
ANR	516524	CallExpression	m_lst_static . Next ( )		516255	1					
ANR	516525	Callee	m_lst_static . Next		516255	0					
ANR	516526	MemberAccess	m_lst_static . Next		516255	0					
ANR	516527	Identifier	m_lst_static		516255	0					
ANR	516528	Identifier	Next		516255	1					
ANR	516529	ArgumentList			516255	1					
ANR	516530	CompoundStatement		61:49:1945:1945	516255	1					
ANR	516531	IfStatement	if ( pav )		516255	0					
ANR	516532	Condition	pav	500:7:14126:14128	516255	0	True				
ANR	516533	Identifier	pav		516255	0					
ANR	516534	ExpressionStatement	pav -> AssignToClassAd ( cp )	500:12:14131:14155	516255	1	True				
ANR	516535	CallExpression	pav -> AssignToClassAd ( cp )		516255	0					
ANR	516536	Callee	pav -> AssignToClassAd		516255	0					
ANR	516537	PtrMemberAccess	pav -> AssignToClassAd		516255	0					
ANR	516538	Identifier	pav		516255	0					
ANR	516539	Identifier	AssignToClassAd		516255	1					
ANR	516540	ArgumentList	cp		516255	1					
ANR	516541	Argument	cp		516255	0					
ANR	516542	Identifier	cp		516255	0					
ANR	516543	IfStatement	if ( IS_UPDATE ( how_much ) || IS_PUBLIC ( how_much ) )		516255	1					
ANR	516544	Condition	IS_UPDATE ( how_much ) || IS_PUBLIC ( how_much )	559:5:15703:15744	516255	0	True				
ANR	516545	OrExpression	IS_UPDATE ( how_much ) || IS_PUBLIC ( how_much )		516255	0		||			
ANR	516546	CallExpression	IS_UPDATE ( how_much )		516255	0					
ANR	516547	Callee	IS_UPDATE		516255	0					
ANR	516548	Identifier	IS_UPDATE		516255	0					
ANR	516549	ArgumentList	how_much		516255	1					
ANR	516550	Argument	how_much		516255	0					
ANR	516551	Identifier	how_much		516255	0					
ANR	516552	CallExpression	IS_PUBLIC ( how_much )		516255	1					
ANR	516553	Callee	IS_PUBLIC		516255	0					
ANR	516554	Identifier	IS_PUBLIC		516255	0					
ANR	516555	ArgumentList	how_much		516255	1					
ANR	516556	Argument	how_much		516255	0					
ANR	516557	Identifier	how_much		516255	0					
ANR	516558	CompoundStatement		121:50:3576:3576	516255	1					
ANR	516559	ExpressionStatement	"cp -> Assign ( ATTR_TOTAL_VIRTUAL_MEMORY , ( int ) m_virt_mem )"	561:2:15753:15809	516255	0	True				
ANR	516560	CallExpression	"cp -> Assign ( ATTR_TOTAL_VIRTUAL_MEMORY , ( int ) m_virt_mem )"		516255	0					
ANR	516561	Callee	cp -> Assign		516255	0					
ANR	516562	PtrMemberAccess	cp -> Assign		516255	0					
ANR	516563	Identifier	cp		516255	0					
ANR	516564	Identifier	Assign		516255	1					
ANR	516565	ArgumentList	ATTR_TOTAL_VIRTUAL_MEMORY		516255	1					
ANR	516566	Argument	ATTR_TOTAL_VIRTUAL_MEMORY		516255	0					
ANR	516567	Identifier	ATTR_TOTAL_VIRTUAL_MEMORY		516255	0					
ANR	516568	Argument	( int ) m_virt_mem		516255	1					
ANR	516569	CastExpression	( int ) m_virt_mem		516255	0					
ANR	516570	CastTarget	int		516255	0					
ANR	516571	Identifier	m_virt_mem		516255	1					
ANR	516572	ExpressionStatement	"cp -> Assign ( ATTR_TOTAL_CPUS , m_num_cpus )"	563:2:15814:15855	516255	1	True				
ANR	516573	CallExpression	"cp -> Assign ( ATTR_TOTAL_CPUS , m_num_cpus )"		516255	0					
ANR	516574	Callee	cp -> Assign		516255	0					
ANR	516575	PtrMemberAccess	cp -> Assign		516255	0					
ANR	516576	Identifier	cp		516255	0					
ANR	516577	Identifier	Assign		516255	1					
ANR	516578	ArgumentList	ATTR_TOTAL_CPUS		516255	1					
ANR	516579	Argument	ATTR_TOTAL_CPUS		516255	0					
ANR	516580	Identifier	ATTR_TOTAL_CPUS		516255	0					
ANR	516581	Argument	m_num_cpus		516255	1					
ANR	516582	Identifier	m_num_cpus		516255	0					
ANR	516583	ExpressionStatement	"cp -> Assign ( ATTR_TOTAL_MEMORY , m_phys_mem )"	565:2:15860:15903	516255	2	True				
ANR	516584	CallExpression	"cp -> Assign ( ATTR_TOTAL_MEMORY , m_phys_mem )"		516255	0					
ANR	516585	Callee	cp -> Assign		516255	0					
ANR	516586	PtrMemberAccess	cp -> Assign		516255	0					
ANR	516587	Identifier	cp		516255	0					
ANR	516588	Identifier	Assign		516255	1					
ANR	516589	ArgumentList	ATTR_TOTAL_MEMORY		516255	1					
ANR	516590	Argument	ATTR_TOTAL_MEMORY		516255	0					
ANR	516591	Identifier	ATTR_TOTAL_MEMORY		516255	0					
ANR	516592	Argument	m_phys_mem		516255	1					
ANR	516593	Identifier	m_phys_mem		516255	0					
ANR	516594	IfStatement	if ( m_kflops > 0 )		516255	3					
ANR	516595	Condition	m_kflops > 0	569:7:16021:16032	516255	0	True				
ANR	516596	RelationalExpression	m_kflops > 0		516255	0		>			
ANR	516597	Identifier	m_kflops		516255	0					
ANR	516598	PrimaryExpression	0		516255	1					
ANR	516599	CompoundStatement		131:22:3864:3864	516255	1					
ANR	516600	ExpressionStatement	"cp -> Assign ( ATTR_KFLOPS , m_kflops )"	570:3:16041:16076	516255	0	True				
ANR	516601	CallExpression	"cp -> Assign ( ATTR_KFLOPS , m_kflops )"		516255	0					
ANR	516602	Callee	cp -> Assign		516255	0					
ANR	516603	PtrMemberAccess	cp -> Assign		516255	0					
ANR	516604	Identifier	cp		516255	0					
ANR	516605	Identifier	Assign		516255	1					
ANR	516606	ArgumentList	ATTR_KFLOPS		516255	1					
ANR	516607	Argument	ATTR_KFLOPS		516255	0					
ANR	516608	Identifier	ATTR_KFLOPS		516255	0					
ANR	516609	Argument	m_kflops		516255	1					
ANR	516610	Identifier	m_kflops		516255	0					
ANR	516611	IfStatement	if ( m_mips > 0 )		516255	4					
ANR	516612	Condition	m_mips > 0	572:7:16089:16098	516255	0	True				
ANR	516613	RelationalExpression	m_mips > 0		516255	0		>			
ANR	516614	Identifier	m_mips		516255	0					
ANR	516615	PrimaryExpression	0		516255	1					
ANR	516616	CompoundStatement		134:20:3930:3930	516255	1					
ANR	516617	ExpressionStatement	"cp -> Assign ( ATTR_MIPS , m_mips )"	573:3:16107:16138	516255	0	True				
ANR	516618	CallExpression	"cp -> Assign ( ATTR_MIPS , m_mips )"		516255	0					
ANR	516619	Callee	cp -> Assign		516255	0					
ANR	516620	PtrMemberAccess	cp -> Assign		516255	0					
ANR	516621	Identifier	cp		516255	0					
ANR	516622	Identifier	Assign		516255	1					
ANR	516623	ArgumentList	ATTR_MIPS		516255	1					
ANR	516624	Argument	ATTR_MIPS		516255	0					
ANR	516625	Identifier	ATTR_MIPS		516255	0					
ANR	516626	Argument	m_mips		516255	1					
ANR	516627	Identifier	m_mips		516255	0					
ANR	516628	IfStatement	if ( m_local_credd != NULL )		516255	5					
ANR	516629	Condition	m_local_credd != NULL	577:7:16171:16191	516255	0	True				
ANR	516630	EqualityExpression	m_local_credd != NULL		516255	0		!=			
ANR	516631	Identifier	m_local_credd		516255	0					
ANR	516632	Identifier	NULL		516255	1					
ANR	516633	CompoundStatement		139:31:4023:4023	516255	1					
ANR	516634	ExpressionStatement	"cp -> Assign ( ATTR_LOCAL_CREDD , m_local_credd )"	578:3:16200:16243	516255	0	True				
ANR	516635	CallExpression	"cp -> Assign ( ATTR_LOCAL_CREDD , m_local_credd )"		516255	0					
ANR	516636	Callee	cp -> Assign		516255	0					
ANR	516637	PtrMemberAccess	cp -> Assign		516255	0					
ANR	516638	Identifier	cp		516255	0					
ANR	516639	Identifier	Assign		516255	1					
ANR	516640	ArgumentList	ATTR_LOCAL_CREDD		516255	1					
ANR	516641	Argument	ATTR_LOCAL_CREDD		516255	0					
ANR	516642	Identifier	ATTR_LOCAL_CREDD		516255	0					
ANR	516643	Argument	m_local_credd		516255	1					
ANR	516644	Identifier	m_local_credd		516255	0					
ANR	516645	IfStatement	if ( IS_UPDATE ( how_much ) || IS_TIMEOUT ( how_much ) )		516255	2					
ANR	516646	Condition	IS_UPDATE ( how_much ) || IS_TIMEOUT ( how_much )	584:5:16331:16373	516255	0	True				
ANR	516647	OrExpression	IS_UPDATE ( how_much ) || IS_TIMEOUT ( how_much )		516255	0		||			
ANR	516648	CallExpression	IS_UPDATE ( how_much )		516255	0					
ANR	516649	Callee	IS_UPDATE		516255	0					
ANR	516650	Identifier	IS_UPDATE		516255	0					
ANR	516651	ArgumentList	how_much		516255	1					
ANR	516652	Argument	how_much		516255	0					
ANR	516653	Identifier	how_much		516255	0					
ANR	516654	CallExpression	IS_TIMEOUT ( how_much )		516255	1					
ANR	516655	Callee	IS_TIMEOUT		516255	0					
ANR	516656	Identifier	IS_TIMEOUT		516255	0					
ANR	516657	ArgumentList	how_much		516255	1					
ANR	516658	Argument	how_much		516255	0					
ANR	516659	Identifier	how_much		516255	0					
ANR	516660	CompoundStatement		146:51:4205:4205	516255	1					
ANR	516661	ExpressionStatement	"cp -> Assign ( ATTR_LAST_BENCHMARK , ( unsigned ) m_last_benchmark )"	585:2:16381:16442	516255	0	True				
ANR	516662	CallExpression	"cp -> Assign ( ATTR_LAST_BENCHMARK , ( unsigned ) m_last_benchmark )"		516255	0					
ANR	516663	Callee	cp -> Assign		516255	0					
ANR	516664	PtrMemberAccess	cp -> Assign		516255	0					
ANR	516665	Identifier	cp		516255	0					
ANR	516666	Identifier	Assign		516255	1					
ANR	516667	ArgumentList	ATTR_LAST_BENCHMARK		516255	1					
ANR	516668	Argument	ATTR_LAST_BENCHMARK		516255	0					
ANR	516669	Identifier	ATTR_LAST_BENCHMARK		516255	0					
ANR	516670	Argument	( unsigned ) m_last_benchmark		516255	1					
ANR	516671	CastExpression	( unsigned ) m_last_benchmark		516255	0					
ANR	516672	CastTarget	unsigned		516255	0					
ANR	516673	Identifier	m_last_benchmark		516255	1					
ANR	516674	IfStatement	if ( IS_TIMEOUT ( how_much ) || IS_PUBLIC ( how_much ) )		516255	3					
ANR	516675	Condition	IS_TIMEOUT ( how_much ) || IS_PUBLIC ( how_much )	589:5:16454:16496	516255	0	True				
ANR	516676	OrExpression	IS_TIMEOUT ( how_much ) || IS_PUBLIC ( how_much )		516255	0		||			
ANR	516677	CallExpression	IS_TIMEOUT ( how_much )		516255	0					
ANR	516678	Callee	IS_TIMEOUT		516255	0					
ANR	516679	Identifier	IS_TIMEOUT		516255	0					
ANR	516680	ArgumentList	how_much		516255	1					
ANR	516681	Argument	how_much		516255	0					
ANR	516682	Identifier	how_much		516255	0					
ANR	516683	CallExpression	IS_PUBLIC ( how_much )		516255	1					
ANR	516684	Callee	IS_PUBLIC		516255	0					
ANR	516685	Identifier	IS_PUBLIC		516255	0					
ANR	516686	ArgumentList	how_much		516255	1					
ANR	516687	Argument	how_much		516255	0					
ANR	516688	Identifier	how_much		516255	0					
ANR	516689	CompoundStatement		151:51:4328:4328	516255	1					
ANR	516690	ExpressionStatement	"cp -> Assign ( ATTR_TOTAL_LOAD_AVG , rint ( m_load * 100 ) / 100.0 )"	591:2:16505:16565	516255	0	True				
ANR	516691	CallExpression	"cp -> Assign ( ATTR_TOTAL_LOAD_AVG , rint ( m_load * 100 ) / 100.0 )"		516255	0					
ANR	516692	Callee	cp -> Assign		516255	0					
ANR	516693	PtrMemberAccess	cp -> Assign		516255	0					
ANR	516694	Identifier	cp		516255	0					
ANR	516695	Identifier	Assign		516255	1					
ANR	516696	ArgumentList	ATTR_TOTAL_LOAD_AVG		516255	1					
ANR	516697	Argument	ATTR_TOTAL_LOAD_AVG		516255	0					
ANR	516698	Identifier	ATTR_TOTAL_LOAD_AVG		516255	0					
ANR	516699	Argument	rint ( m_load * 100 ) / 100.0		516255	1					
ANR	516700	MultiplicativeExpression	rint ( m_load * 100 ) / 100.0		516255	0		/			
ANR	516701	CallExpression	rint ( m_load * 100 )		516255	0					
ANR	516702	Callee	rint		516255	0					
ANR	516703	Identifier	rint		516255	0					
ANR	516704	ArgumentList	m_load * 100		516255	1					
ANR	516705	Argument	m_load * 100		516255	0					
ANR	516706	MultiplicativeExpression	m_load * 100		516255	0		*			
ANR	516707	Identifier	m_load		516255	0					
ANR	516708	PrimaryExpression	100		516255	1					
ANR	516709	PrimaryExpression	100.0		516255	1					
ANR	516710	ExpressionStatement	"cp -> Assign ( ATTR_TOTAL_CONDOR_LOAD_AVG , rint ( m_condor_load * 100 ) / 100.0 )"	593:2:16572:16651	516255	1	True				
ANR	516711	CallExpression	"cp -> Assign ( ATTR_TOTAL_CONDOR_LOAD_AVG , rint ( m_condor_load * 100 ) / 100.0 )"		516255	0					
ANR	516712	Callee	cp -> Assign		516255	0					
ANR	516713	PtrMemberAccess	cp -> Assign		516255	0					
ANR	516714	Identifier	cp		516255	0					
ANR	516715	Identifier	Assign		516255	1					
ANR	516716	ArgumentList	ATTR_TOTAL_CONDOR_LOAD_AVG		516255	1					
ANR	516717	Argument	ATTR_TOTAL_CONDOR_LOAD_AVG		516255	0					
ANR	516718	Identifier	ATTR_TOTAL_CONDOR_LOAD_AVG		516255	0					
ANR	516719	Argument	rint ( m_condor_load * 100 ) / 100.0		516255	1					
ANR	516720	MultiplicativeExpression	rint ( m_condor_load * 100 ) / 100.0		516255	0		/			
ANR	516721	CallExpression	rint ( m_condor_load * 100 )		516255	0					
ANR	516722	Callee	rint		516255	0					
ANR	516723	Identifier	rint		516255	0					
ANR	516724	ArgumentList	m_condor_load * 100		516255	1					
ANR	516725	Argument	m_condor_load * 100		516255	0					
ANR	516726	MultiplicativeExpression	m_condor_load * 100		516255	0		*			
ANR	516727	Identifier	m_condor_load		516255	0					
ANR	516728	PrimaryExpression	100		516255	1					
ANR	516729	PrimaryExpression	100.0		516255	1					
ANR	516730	ExpressionStatement	"cp -> Assign ( ATTR_CLOCK_MIN , m_clock_min )"	596:2:16658:16699	516255	2	True				
ANR	516731	CallExpression	"cp -> Assign ( ATTR_CLOCK_MIN , m_clock_min )"		516255	0					
ANR	516732	Callee	cp -> Assign		516255	0					
ANR	516733	PtrMemberAccess	cp -> Assign		516255	0					
ANR	516734	Identifier	cp		516255	0					
ANR	516735	Identifier	Assign		516255	1					
ANR	516736	ArgumentList	ATTR_CLOCK_MIN		516255	1					
ANR	516737	Argument	ATTR_CLOCK_MIN		516255	0					
ANR	516738	Identifier	ATTR_CLOCK_MIN		516255	0					
ANR	516739	Argument	m_clock_min		516255	1					
ANR	516740	Identifier	m_clock_min		516255	0					
ANR	516741	ExpressionStatement	"cp -> Assign ( ATTR_CLOCK_DAY , m_clock_day )"	598:2:16704:16745	516255	3	True				
ANR	516742	CallExpression	"cp -> Assign ( ATTR_CLOCK_DAY , m_clock_day )"		516255	0					
ANR	516743	Callee	cp -> Assign		516255	0					
ANR	516744	PtrMemberAccess	cp -> Assign		516255	0					
ANR	516745	Identifier	cp		516255	0					
ANR	516746	Identifier	Assign		516255	1					
ANR	516747	ArgumentList	ATTR_CLOCK_DAY		516255	1					
ANR	516748	Argument	ATTR_CLOCK_DAY		516255	0					
ANR	516749	Identifier	ATTR_CLOCK_DAY		516255	0					
ANR	516750	Argument	m_clock_day		516255	1					
ANR	516751	Identifier	m_clock_day		516255	0					
ANR	516752	ExpressionStatement	m_lst_dynamic . Rewind ( )	600:2:16750:16772	516255	4	True				
ANR	516753	CallExpression	m_lst_dynamic . Rewind ( )		516255	0					
ANR	516754	Callee	m_lst_dynamic . Rewind		516255	0					
ANR	516755	MemberAccess	m_lst_dynamic . Rewind		516255	0					
ANR	516756	Identifier	m_lst_dynamic		516255	0					
ANR	516757	Identifier	Rewind		516255	1					
ANR	516758	ArgumentList			516255	1					
ANR	516759	WhileStatement	while ( AttribValue * pav = m_lst_dynamic . Next ( ) )		516255	5					
ANR	516760	Condition	AttribValue * pav = m_lst_dynamic . Next ( )	601:9:16783:16821	516255	0	True				
ANR	516761	AssignmentExpression	AttribValue * pav = m_lst_dynamic . Next ( )		516255	0		=			
ANR	516762	MultiplicativeExpression	AttribValue * pav		516255	0		*			
ANR	516763	Identifier	AttribValue		516255	0					
ANR	516764	Identifier	pav		516255	1					
ANR	516765	CallExpression	m_lst_dynamic . Next ( )		516255	1					
ANR	516766	Callee	m_lst_dynamic . Next		516255	0					
ANR	516767	MemberAccess	m_lst_dynamic . Next		516255	0					
ANR	516768	Identifier	m_lst_dynamic		516255	0					
ANR	516769	Identifier	Next		516255	1					
ANR	516770	ArgumentList			516255	1					
ANR	516771	CompoundStatement		163:51:4653:4653	516255	1					
ANR	516772	IfStatement	if ( pav )		516255	0					
ANR	516773	Condition	pav	602:7:16834:16836	516255	0	True				
ANR	516774	Identifier	pav		516255	0					
ANR	516775	ExpressionStatement	pav -> AssignToClassAd ( cp )	602:12:16839:16863	516255	1	True				
ANR	516776	CallExpression	pav -> AssignToClassAd ( cp )		516255	0					
ANR	516777	Callee	pav -> AssignToClassAd		516255	0					
ANR	516778	PtrMemberAccess	pav -> AssignToClassAd		516255	0					
ANR	516779	Identifier	pav		516255	0					
ANR	516780	Identifier	AssignToClassAd		516255	1					
ANR	516781	ArgumentList	cp		516255	1					
ANR	516782	Argument	cp		516255	0					
ANR	516783	Identifier	cp		516255	0					
ANR	516784	ReturnType	void		516255	1					
ANR	516785	Identifier	MachAttributes :: publish		516255	2					
ANR	516786	ParameterList	"ClassAd * cp , amask_t how_much"		516255	3					
ANR	516787	Parameter	ClassAd * cp	438:25:12139:12149	516255	0	True				
ANR	516788	ParameterType	ClassAd *		516255	0					
ANR	516789	Identifier	cp		516255	1					
ANR	516790	Parameter	amask_t how_much	438:38:12152:12167	516255	1	True				
ANR	516791	ParameterType	amask_t		516255	0					
ANR	516792	Identifier	how_much		516255	1					
ANR	516793	CFGEntryNode	ENTRY		516255		True				
ANR	516794	CFGExitNode	EXIT		516255		True				
ANR	516795	Symbol	m_arch		516255						
ANR	516796	Symbol	m_kflops		516255						
ANR	516797	Symbol	m_ckptpltfrm		516255						
ANR	516798	Symbol	ATTR_KFLOPS		516255						
ANR	516799	Symbol	IS_TIMEOUT		516255						
ANR	516800	Symbol	m_local_credd		516255						
ANR	516801	Symbol	rint		516255						
ANR	516802	Symbol	ATTR_OPSYS		516255						
ANR	516803	Symbol	ATTR_WINDOWS_MINOR_VERSION		516255						
ANR	516804	Symbol	m_phys_mem		516255						
ANR	516805	Symbol	m_opsys		516255						
ANR	516806	Symbol	ATTR_OPSYS_AND_VER		516255						
ANR	516807	Symbol	ATTR_TOTAL_CONDOR_LOAD_AVG		516255						
ANR	516808	Symbol	m_window_version_info . dwBuildNumber		516255						
ANR	516809	Symbol	ATTR_CHECKPOINT_PLATFORM		516255						
ANR	516810	Symbol	m_window_version_info . dwMajorVersion		516255						
ANR	516811	Symbol	m_window_version_info . wProductType		516255						
ANR	516812	Symbol	AttribValue		516255						
ANR	516813	Symbol	m_load		516255						
ANR	516814	Symbol	ATTR_TOTAL_MEMORY		516255						
ANR	516815	Symbol	ATTR_CLOCK_MIN		516255						
ANR	516816	Symbol	m_lst_dynamic		516255						
ANR	516817	Symbol	m_got_windows_version_info		516255						
ANR	516818	Symbol	m_lst_dynamic . Next		516255						
ANR	516819	Symbol	NULL		516255						
ANR	516820	Symbol	ATTR_TOTAL_LOAD_AVG		516255						
ANR	516821	Symbol	pav		516255						
ANR	516822	Symbol	m_clock_min		516255						
ANR	516823	Symbol	ATTR_WINDOWS_MAJOR_VERSION		516255						
ANR	516824	Symbol	m_virt_mem		516255						
ANR	516825	Symbol	m_condor_load		516255						
ANR	516826	Symbol	param_boolean		516255						
ANR	516827	Symbol	ATTR_UID_DOMAIN		516255						
ANR	516828	Symbol	m_window_version_info . wServicePackMajor		516255						
ANR	516829	Symbol	ATTR_FILE_SYSTEM_DOMAIN		516255						
ANR	516830	Symbol	m_lst_static		516255						
ANR	516831	Symbol	* daemonCore		516255						
ANR	516832	Symbol	ATTR_MIPS		516255						
ANR	516833	Symbol	true		516255						
ANR	516834	Symbol	m_window_version_info		516255						
ANR	516835	Symbol	ATTR_STARTD_IP_ADDR		516255						
ANR	516836	Symbol	m_lst_static . Next		516255						
ANR	516837	Symbol	ATTR_OPSYSVER		516255						
ANR	516838	Symbol	m_opsysver		516255						
ANR	516839	Symbol	m_window_version_info . wServicePackMinor		516255						
ANR	516840	Symbol	ATTR_TOTAL_CPUS		516255						
ANR	516841	Symbol	ATTR_DOTNET_VERSIONS		516255						
ANR	516842	Symbol	how_much		516255						
ANR	516843	Symbol	m_window_version_info . dwOSVersionInfoSize		516255						
ANR	516844	Symbol	ATTR_WINDOWS_PRODUCT_TYPE		516255						
ANR	516845	Symbol	m_opsys_and_ver		516255						
ANR	516846	Symbol	ATTR_CLOCK_DAY		516255						
ANR	516847	Symbol	daemonCore		516255						
ANR	516848	Symbol	ATTR_WINDOWS_BUILD_NUMBER		516255						
ANR	516849	Symbol	ATTR_LOCAL_CREDD		516255						
ANR	516850	Symbol	m_uid_domain		516255						
ANR	516851	Symbol	m_window_version_info . dwMinorVersion		516255						
ANR	516852	Symbol	m_filesystem_domain		516255						
ANR	516853	Symbol	IS_PUBLIC		516255						
ANR	516854	Symbol	m_mips		516255						
ANR	516855	Symbol	daemonCore -> InfoCommandSinfulString		516255						
ANR	516856	Symbol	ATTR_TOTAL_VIRTUAL_MEMORY		516255						
ANR	516857	Symbol	m_last_benchmark		516255						
ANR	516858	Symbol	cp		516255						
ANR	516859	Symbol	ATTR_LAST_BENCHMARK		516255						
ANR	516860	Symbol	ATTR_ARCH		516255						
ANR	516861	Symbol	m_clock_day		516255						
ANR	516862	Symbol	IS_STATIC		516255						
ANR	516863	Symbol	m_dot_Net_Versions		516255						
ANR	516864	Symbol	IS_UPDATE		516255						
ANR	516865	Symbol	ATTR_HAS_IO_PROXY		516255						
ANR	516866	Symbol	m_num_cpus		516255						
ANR	516867	Symbol	ATTR_WINDOWS_SERVICE_PACK_MAJOR		516255						
ANR	516868	Symbol	ATTR_WINDOWS_SERVICE_PACK_MINOR		516255						
ANR	516869	Function	MachAttributes :: start_benchmarks	608:0:16876:18138							
ANR	516870	FunctionDef	"MachAttributes :: start_benchmarks (Resource * rip , int & count)"		516869	0					
ANR	516871	CompoundStatement		610:0:16943:18138	516869	0					
ANR	516872	ExpressionStatement	count = 0	611:1:16946:16955	516869	0	True				
ANR	516873	AssignmentExpression	count = 0		516869	0		=			
ANR	516874	Identifier	count		516869	0					
ANR	516875	PrimaryExpression	0		516869	1					
ANR	516876	IdentifierDeclStatement	ClassAd * cp = rip -> r_classad ;	612:1:16958:16986	516869	1	True				
ANR	516877	IdentifierDecl	* cp = rip -> r_classad		516869	0					
ANR	516878	IdentifierDeclType	ClassAd *		516869	0					
ANR	516879	Identifier	cp		516869	1					
ANR	516880	AssignmentExpression	* cp = rip -> r_classad		516869	2		=			
ANR	516881	Identifier	cp		516869	0					
ANR	516882	PtrMemberAccess	rip -> r_classad		516869	1					
ANR	516883	Identifier	rip		516869	0					
ANR	516884	Identifier	r_classad		516869	1					
ANR	516885	IfStatement	if ( rip -> isSuspendedForCOD ( ) )		516869	2					
ANR	516886	Condition	rip -> isSuspendedForCOD ( )	614:5:16994:17017	516869	0	True				
ANR	516887	CallExpression	rip -> isSuspendedForCOD ( )		516869	0					
ANR	516888	Callee	rip -> isSuspendedForCOD		516869	0					
ANR	516889	PtrMemberAccess	rip -> isSuspendedForCOD		516869	0					
ANR	516890	Identifier	rip		516869	0					
ANR	516891	Identifier	isSuspendedForCOD		516869	1					
ANR	516892	ArgumentList			516869	1					
ANR	516893	CompoundStatement		5:32:77:77	516869	1					
ANR	516894	ReturnStatement	return ;	617:2:17102:17108	516869	0	True				
ANR	516895	IdentifierDeclStatement	int run_benchmarks = 0 ;	621:1:17172:17194	516869	3	True				
ANR	516896	IdentifierDecl	run_benchmarks = 0		516869	0					
ANR	516897	IdentifierDeclType	int		516869	0					
ANR	516898	Identifier	run_benchmarks		516869	1					
ANR	516899	AssignmentExpression	run_benchmarks = 0		516869	2		=			
ANR	516900	Identifier	run_benchmarks		516869	0					
ANR	516901	PrimaryExpression	0		516869	1					
ANR	516902	IfStatement	"if ( cp -> EvalBool ( ATTR_RUN_BENCHMARKS , cp , run_benchmarks ) == 0 )"		516869	4					
ANR	516903	Condition	"cp -> EvalBool ( ATTR_RUN_BENCHMARKS , cp , run_benchmarks ) == 0"	622:6:17202:17261	516869	0	True				
ANR	516904	EqualityExpression	"cp -> EvalBool ( ATTR_RUN_BENCHMARKS , cp , run_benchmarks ) == 0"		516869	0		==			
ANR	516905	CallExpression	"cp -> EvalBool ( ATTR_RUN_BENCHMARKS , cp , run_benchmarks )"		516869	0					
ANR	516906	Callee	cp -> EvalBool		516869	0					
ANR	516907	PtrMemberAccess	cp -> EvalBool		516869	0					
ANR	516908	Identifier	cp		516869	0					
ANR	516909	Identifier	EvalBool		516869	1					
ANR	516910	ArgumentList	ATTR_RUN_BENCHMARKS		516869	1					
ANR	516911	Argument	ATTR_RUN_BENCHMARKS		516869	0					
ANR	516912	Identifier	ATTR_RUN_BENCHMARKS		516869	0					
ANR	516913	Argument	cp		516869	1					
ANR	516914	Identifier	cp		516869	0					
ANR	516915	Argument	run_benchmarks		516869	2					
ANR	516916	Identifier	run_benchmarks		516869	0					
ANR	516917	PrimaryExpression	0		516869	1					
ANR	516918	CompoundStatement		13:69:321:321	516869	1					
ANR	516919	ExpressionStatement	run_benchmarks = 0	623:2:17269:17287	516869	0	True				
ANR	516920	AssignmentExpression	run_benchmarks = 0		516869	0		=			
ANR	516921	Identifier	run_benchmarks		516869	0					
ANR	516922	PrimaryExpression	0		516869	1					
ANR	516923	IfStatement	if ( ! run_benchmarks )		516869	5					
ANR	516924	Condition	! run_benchmarks	625:6:17298:17312	516869	0	True				
ANR	516925	UnaryOperationExpression	! run_benchmarks		516869	0					
ANR	516926	UnaryOperator	!		516869	0					
ANR	516927	Identifier	run_benchmarks		516869	1					
ANR	516928	CompoundStatement		16:24:372:372	516869	1					
ANR	516929	ReturnStatement	return ;	626:2:17320:17326	516869	0	True				
ANR	516930	ExpressionStatement	"dprintf ( D_ALWAYS , ""State change: %s is TRUE\\n"" , ATTR_RUN_BENCHMARKS )"	629:1:17333:17407	516869	6	True				
ANR	516931	CallExpression	"dprintf ( D_ALWAYS , ""State change: %s is TRUE\\n"" , ATTR_RUN_BENCHMARKS )"		516869	0					
ANR	516932	Callee	dprintf		516869	0					
ANR	516933	Identifier	dprintf		516869	0					
ANR	516934	ArgumentList	D_ALWAYS		516869	1					
ANR	516935	Argument	D_ALWAYS		516869	0					
ANR	516936	Identifier	D_ALWAYS		516869	0					
ANR	516937	Argument	"""State change: %s is TRUE\\n"""		516869	1					
ANR	516938	PrimaryExpression	"""State change: %s is TRUE\\n"""		516869	0					
ANR	516939	Argument	ATTR_RUN_BENCHMARKS		516869	2					
ANR	516940	Identifier	ATTR_RUN_BENCHMARKS		516869	0					
ANR	516941	IfStatement	if ( ( rip -> state ( ) != unclaimed_state ) && ( rip -> activity ( ) != idle_act ) )		516869	7					
ANR	516942	Condition	( rip -> state ( ) != unclaimed_state ) && ( rip -> activity ( ) != idle_act )	632:6:17416:17485	516869	0	True				
ANR	516943	AndExpression	( rip -> state ( ) != unclaimed_state ) && ( rip -> activity ( ) != idle_act )		516869	0		&&			
ANR	516944	EqualityExpression	rip -> state ( ) != unclaimed_state		516869	0		!=			
ANR	516945	CallExpression	rip -> state ( )		516869	0					
ANR	516946	Callee	rip -> state		516869	0					
ANR	516947	PtrMemberAccess	rip -> state		516869	0					
ANR	516948	Identifier	rip		516869	0					
ANR	516949	Identifier	state		516869	1					
ANR	516950	ArgumentList			516869	1					
ANR	516951	Identifier	unclaimed_state		516869	1					
ANR	516952	EqualityExpression	rip -> activity ( ) != idle_act		516869	1		!=			
ANR	516953	CallExpression	rip -> activity ( )		516869	0					
ANR	516954	Callee	rip -> activity		516869	0					
ANR	516955	PtrMemberAccess	rip -> activity		516869	0					
ANR	516956	Identifier	rip		516869	0					
ANR	516957	Identifier	activity		516869	1					
ANR	516958	ArgumentList			516869	1					
ANR	516959	Identifier	idle_act		516869	1					
ANR	516960	CompoundStatement		24:40:550:550	516869	1					
ANR	516961	ExpressionStatement	"dprintf ( D_ALWAYS , ""Tried to run benchmarks when not idle, aborting.\\n"" )"	634:2:17498:17576	516869	0	True				
ANR	516962	CallExpression	"dprintf ( D_ALWAYS , ""Tried to run benchmarks when not idle, aborting.\\n"" )"		516869	0					
ANR	516963	Callee	dprintf		516869	0					
ANR	516964	Identifier	dprintf		516869	0					
ANR	516965	ArgumentList	D_ALWAYS		516869	1					
ANR	516966	Argument	D_ALWAYS		516869	0					
ANR	516967	Identifier	D_ALWAYS		516869	0					
ANR	516968	Argument	"""Tried to run benchmarks when not idle, aborting.\\n"""		516869	1					
ANR	516969	PrimaryExpression	"""Tried to run benchmarks when not idle, aborting.\\n"""		516869	0					
ANR	516970	ReturnStatement	return ;	636:2:17580:17586	516869	1	True				
ANR	516971	ExpressionStatement	ASSERT ( bench_job_mgr != NULL )	639:1:17593:17624	516869	8	True				
ANR	516972	CallExpression	ASSERT ( bench_job_mgr != NULL )		516869	0					
ANR	516973	Callee	ASSERT		516869	0					
ANR	516974	Identifier	ASSERT		516869	0					
ANR	516975	ArgumentList	bench_job_mgr != NULL		516869	1					
ANR	516976	Argument	bench_job_mgr != NULL		516869	0					
ANR	516977	EqualityExpression	bench_job_mgr != NULL		516869	0		!=			
ANR	516978	Identifier	bench_job_mgr		516869	0					
ANR	516979	Identifier	NULL		516869	1					
ANR	516980	ExpressionStatement	rip -> change_state ( benchmarking_act )	645:1:17843:17880	516869	9	True				
ANR	516981	CallExpression	rip -> change_state ( benchmarking_act )		516869	0					
ANR	516982	Callee	rip -> change_state		516869	0					
ANR	516983	PtrMemberAccess	rip -> change_state		516869	0					
ANR	516984	Identifier	rip		516869	0					
ANR	516985	Identifier	change_state		516869	1					
ANR	516986	ArgumentList	benchmarking_act		516869	1					
ANR	516987	Argument	benchmarking_act		516869	0					
ANR	516988	Identifier	benchmarking_act		516869	0					
ANR	516989	ExpressionStatement	"bench_job_mgr -> StartBenchmarks ( rip , count )"	646:1:17883:17927	516869	10	True				
ANR	516990	CallExpression	"bench_job_mgr -> StartBenchmarks ( rip , count )"		516869	0					
ANR	516991	Callee	bench_job_mgr -> StartBenchmarks		516869	0					
ANR	516992	PtrMemberAccess	bench_job_mgr -> StartBenchmarks		516869	0					
ANR	516993	Identifier	bench_job_mgr		516869	0					
ANR	516994	Identifier	StartBenchmarks		516869	1					
ANR	516995	ArgumentList	rip		516869	1					
ANR	516996	Argument	rip		516869	0					
ANR	516997	Identifier	rip		516869	0					
ANR	516998	Argument	count		516869	1					
ANR	516999	Identifier	count		516869	0					
ANR	517000	IfStatement	if ( count == 0 )		516869	11					
ANR	517001	Condition	count == 0	650:6:18086:18095	516869	0	True				
ANR	517002	EqualityExpression	count == 0		516869	0		==			
ANR	517003	Identifier	count		516869	0					
ANR	517004	PrimaryExpression	0		516869	1					
ANR	517005	CompoundStatement		41:19:1155:1155	516869	1					
ANR	517006	ExpressionStatement	rip -> change_state ( idle_act )	651:2:18103:18132	516869	0	True				
ANR	517007	CallExpression	rip -> change_state ( idle_act )		516869	0					
ANR	517008	Callee	rip -> change_state		516869	0					
ANR	517009	PtrMemberAccess	rip -> change_state		516869	0					
ANR	517010	Identifier	rip		516869	0					
ANR	517011	Identifier	change_state		516869	1					
ANR	517012	ArgumentList	idle_act		516869	1					
ANR	517013	Argument	idle_act		516869	0					
ANR	517014	Identifier	idle_act		516869	0					
ANR	517015	ReturnType	void		516869	1					
ANR	517016	Identifier	MachAttributes :: start_benchmarks		516869	2					
ANR	517017	ParameterList	"Resource * rip , int & count"		516869	3					
ANR	517018	Parameter	Resource * rip	609:34:16915:16927	516869	0	True				
ANR	517019	ParameterType	Resource *		516869	0					
ANR	517020	Identifier	rip		516869	1					
ANR	517021	Parameter	int & count	609:49:16930:16939	516869	1	True				
ANR	517022	ParameterType	int &		516869	0					
ANR	517023	Identifier	count		516869	1					
ANR	517024	CFGEntryNode	ENTRY		516869		True				
ANR	517025	CFGExitNode	EXIT		516869		True				
ANR	517026	Symbol	* rip		516869						
ANR	517027	Symbol	NULL		516869						
ANR	517028	Symbol	count		516869						
ANR	517029	Symbol	D_ALWAYS		516869						
ANR	517030	Symbol	benchmarking_act		516869						
ANR	517031	Symbol	rip -> isSuspendedForCOD		516869						
ANR	517032	Symbol	run_benchmarks		516869						
ANR	517033	Symbol	cp		516869						
ANR	517034	Symbol	* cp		516869						
ANR	517035	Symbol	bench_job_mgr		516869						
ANR	517036	Symbol	rip -> r_classad		516869						
ANR	517037	Symbol	idle_act		516869						
ANR	517038	Symbol	rip		516869						
ANR	517039	Symbol	ATTR_RUN_BENCHMARKS		516869						
ANR	517040	Symbol	rip -> activity		516869						
ANR	517041	Symbol	rip -> state		516869						
ANR	517042	Symbol	unclaimed_state		516869						
ANR	517043	Symbol	cp -> EvalBool		516869						
ANR	517044	Function	MachAttributes :: benchmarks_finished	656:0:18141:18471							
ANR	517045	FunctionDef	MachAttributes :: benchmarks_finished (Resource * rip)		517044	0					
ANR	517046	CompoundStatement		658:0:18199:18471	517044	0					
ANR	517047	ExpressionStatement	m_last_benchmark = time ( NULL )	660:1:18265:18294	517044	0	True				
ANR	517048	AssignmentExpression	m_last_benchmark = time ( NULL )		517044	0		=			
ANR	517049	Identifier	m_last_benchmark		517044	0					
ANR	517050	CallExpression	time ( NULL )		517044	1					
ANR	517051	Callee	time		517044	0					
ANR	517052	Identifier	time		517044	0					
ANR	517053	ArgumentList	NULL		517044	1					
ANR	517054	Argument	NULL		517044	0					
ANR	517055	Identifier	NULL		517044	0					
ANR	517056	ExpressionStatement	resmgr -> refresh_benchmarks ( )	661:1:18297:18325	517044	1	True				
ANR	517057	CallExpression	resmgr -> refresh_benchmarks ( )		517044	0					
ANR	517058	Callee	resmgr -> refresh_benchmarks		517044	0					
ANR	517059	PtrMemberAccess	resmgr -> refresh_benchmarks		517044	0					
ANR	517060	Identifier	resmgr		517044	0					
ANR	517061	Identifier	refresh_benchmarks		517044	1					
ANR	517062	ArgumentList			517044	1					
ANR	517063	ExpressionStatement	"dprintf ( D_ALWAYS , ""State change: benchmarks completed\\n"" )"	663:1:18329:18388	517044	2	True				
ANR	517064	CallExpression	"dprintf ( D_ALWAYS , ""State change: benchmarks completed\\n"" )"		517044	0					
ANR	517065	Callee	dprintf		517044	0					
ANR	517066	Identifier	dprintf		517044	0					
ANR	517067	ArgumentList	D_ALWAYS		517044	1					
ANR	517068	Argument	D_ALWAYS		517044	0					
ANR	517069	Identifier	D_ALWAYS		517044	0					
ANR	517070	Argument	"""State change: benchmarks completed\\n"""		517044	1					
ANR	517071	PrimaryExpression	"""State change: benchmarks completed\\n"""		517044	0					
ANR	517072	IfStatement	if ( rip -> activity ( ) == benchmarking_act )		517044	3					
ANR	517073	Condition	rip -> activity ( ) == benchmarking_act	664:5:18395:18429	517044	0	True				
ANR	517074	EqualityExpression	rip -> activity ( ) == benchmarking_act		517044	0		==			
ANR	517075	CallExpression	rip -> activity ( )		517044	0					
ANR	517076	Callee	rip -> activity		517044	0					
ANR	517077	PtrMemberAccess	rip -> activity		517044	0					
ANR	517078	Identifier	rip		517044	0					
ANR	517079	Identifier	activity		517044	1					
ANR	517080	ArgumentList			517044	1					
ANR	517081	Identifier	benchmarking_act		517044	1					
ANR	517082	CompoundStatement		7:43:233:233	517044	1					
ANR	517083	ExpressionStatement	rip -> change_state ( idle_act )	665:2:18437:18466	517044	0	True				
ANR	517084	CallExpression	rip -> change_state ( idle_act )		517044	0					
ANR	517085	Callee	rip -> change_state		517044	0					
ANR	517086	PtrMemberAccess	rip -> change_state		517044	0					
ANR	517087	Identifier	rip		517044	0					
ANR	517088	Identifier	change_state		517044	1					
ANR	517089	ArgumentList	idle_act		517044	1					
ANR	517090	Argument	idle_act		517044	0					
ANR	517091	Identifier	idle_act		517044	0					
ANR	517092	ReturnType	void		517044	1					
ANR	517093	Identifier	MachAttributes :: benchmarks_finished		517044	2					
ANR	517094	ParameterList	Resource * rip		517044	3					
ANR	517095	Parameter	Resource * rip	657:37:18183:18195	517044	0	True				
ANR	517096	ParameterType	Resource *		517044	0					
ANR	517097	Identifier	rip		517044	1					
ANR	517098	CFGEntryNode	ENTRY		517044		True				
ANR	517099	CFGExitNode	EXIT		517044		True				
ANR	517100	Symbol	NULL		517044						
ANR	517101	Symbol	* rip		517044						
ANR	517102	Symbol	resmgr		517044						
ANR	517103	Symbol	m_last_benchmark		517044						
ANR	517104	Symbol	idle_act		517044						
ANR	517105	Symbol	rip		517044						
ANR	517106	Symbol	D_ALWAYS		517044						
ANR	517107	Symbol	benchmarking_act		517044						
ANR	517108	Symbol	time		517044						
ANR	517109	Symbol	rip -> activity		517044						
ANR	517110	Function	MachAttributes :: credd_test	670:0:18493:19576							
ANR	517111	FunctionDef	MachAttributes :: credd_test ()		517110	0					
ANR	517112	CompoundStatement		672:0:18527:19576	517110	0					
ANR	517113	IdentifierDeclStatement	"char * credd_host = param ( ""CREDD_HOST"" ) ;"	677:1:18726:18764	517110	0	True				
ANR	517114	IdentifierDecl	"* credd_host = param ( ""CREDD_HOST"" )"		517110	0					
ANR	517115	IdentifierDeclType	char *		517110	0					
ANR	517116	Identifier	credd_host		517110	1					
ANR	517117	AssignmentExpression	"* credd_host = param ( ""CREDD_HOST"" )"		517110	2		=			
ANR	517118	Identifier	credd_host		517110	0					
ANR	517119	CallExpression	"param ( ""CREDD_HOST"" )"		517110	1					
ANR	517120	Callee	param		517110	0					
ANR	517121	Identifier	param		517110	0					
ANR	517122	ArgumentList	"""CREDD_HOST"""		517110	1					
ANR	517123	Argument	"""CREDD_HOST"""		517110	0					
ANR	517124	PrimaryExpression	"""CREDD_HOST"""		517110	0					
ANR	517125	IfStatement	if ( credd_host == NULL )		517110	1					
ANR	517126	Condition	credd_host == NULL	679:5:18772:18789	517110	0	True				
ANR	517127	EqualityExpression	credd_host == NULL		517110	0		==			
ANR	517128	Identifier	credd_host		517110	0					
ANR	517129	Identifier	NULL		517110	1					
ANR	517130	CompoundStatement		8:25:264:264	517110	1					
ANR	517131	IfStatement	if ( m_local_credd != NULL )		517110	0					
ANR	517132	Condition	m_local_credd != NULL	680:6:18800:18820	517110	0	True				
ANR	517133	EqualityExpression	m_local_credd != NULL		517110	0		!=			
ANR	517134	Identifier	m_local_credd		517110	0					
ANR	517135	Identifier	NULL		517110	1					
ANR	517136	CompoundStatement		9:29:295:295	517110	1					
ANR	517137	ExpressionStatement	free ( m_local_credd )	681:3:18828:18847	517110	0	True				
ANR	517138	CallExpression	free ( m_local_credd )		517110	0					
ANR	517139	Callee	free		517110	0					
ANR	517140	Identifier	free		517110	0					
ANR	517141	ArgumentList	m_local_credd		517110	1					
ANR	517142	Argument	m_local_credd		517110	0					
ANR	517143	Identifier	m_local_credd		517110	0					
ANR	517144	ExpressionStatement	m_local_credd = NULL	682:3:18852:18872	517110	1	True				
ANR	517145	AssignmentExpression	m_local_credd = NULL		517110	0		=			
ANR	517146	Identifier	m_local_credd		517110	0					
ANR	517147	Identifier	NULL		517110	1					
ANR	517148	ReturnStatement	return ;	684:2:18880:18886	517110	1	True				
ANR	517149	IfStatement	if ( m_local_credd != NULL )		517110	2					
ANR	517150	Condition	m_local_credd != NULL	687:5:18897:18917	517110	0	True				
ANR	517151	EqualityExpression	m_local_credd != NULL		517110	0		!=			
ANR	517152	Identifier	m_local_credd		517110	0					
ANR	517153	Identifier	NULL		517110	1					
ANR	517154	CompoundStatement		16:28:392:392	517110	1					
ANR	517155	IfStatement	"if ( strcmp ( m_local_credd , credd_host ) == 0 )"		517110	0					
ANR	517156	Condition	"strcmp ( m_local_credd , credd_host ) == 0"	688:6:18928:18965	517110	0	True				
ANR	517157	EqualityExpression	"strcmp ( m_local_credd , credd_host ) == 0"		517110	0		==			
ANR	517158	CallExpression	"strcmp ( m_local_credd , credd_host )"		517110	0					
ANR	517159	Callee	strcmp		517110	0					
ANR	517160	Identifier	strcmp		517110	0					
ANR	517161	ArgumentList	m_local_credd		517110	1					
ANR	517162	Argument	m_local_credd		517110	0					
ANR	517163	Identifier	m_local_credd		517110	0					
ANR	517164	Argument	credd_host		517110	1					
ANR	517165	Identifier	credd_host		517110	0					
ANR	517166	PrimaryExpression	0		517110	1					
ANR	517167	CompoundStatement		17:46:440:440	517110	1					
ANR	517168	ExpressionStatement	free ( credd_host )	689:3:18973:18989	517110	0	True				
ANR	517169	CallExpression	free ( credd_host )		517110	0					
ANR	517170	Callee	free		517110	0					
ANR	517171	Identifier	free		517110	0					
ANR	517172	ArgumentList	credd_host		517110	1					
ANR	517173	Argument	credd_host		517110	0					
ANR	517174	Identifier	credd_host		517110	0					
ANR	517175	ReturnStatement	return ;	690:3:18994:19000	517110	1	True				
ANR	517176	ElseStatement	else		517110	0					
ANR	517177	CompoundStatement		21:7:485:485	517110	0					
ANR	517178	ExpressionStatement	free ( m_local_credd )	693:3:19018:19037	517110	0	True				
ANR	517179	CallExpression	free ( m_local_credd )		517110	0					
ANR	517180	Callee	free		517110	0					
ANR	517181	Identifier	free		517110	0					
ANR	517182	ArgumentList	m_local_credd		517110	1					
ANR	517183	Argument	m_local_credd		517110	0					
ANR	517184	Identifier	m_local_credd		517110	0					
ANR	517185	ExpressionStatement	m_local_credd = NULL	694:3:19042:19062	517110	1	True				
ANR	517186	AssignmentExpression	m_local_credd = NULL		517110	0		=			
ANR	517187	Identifier	m_local_credd		517110	0					
ANR	517188	Identifier	NULL		517110	1					
ANR	517189	ExpressionStatement	m_last_credd_test = 0	695:3:19067:19088	517110	2	True				
ANR	517190	AssignmentExpression	m_last_credd_test = 0		517110	0		=			
ANR	517191	Identifier	m_last_credd_test		517110	0					
ANR	517192	PrimaryExpression	0		517110	1					
ANR	517193	IdentifierDeclStatement	time_t now = time ( NULL ) ;	699:1:19099:19122	517110	3	True				
ANR	517194	IdentifierDecl	now = time ( NULL )		517110	0					
ANR	517195	IdentifierDeclType	time_t		517110	0					
ANR	517196	Identifier	now		517110	1					
ANR	517197	AssignmentExpression	now = time ( NULL )		517110	2		=			
ANR	517198	Identifier	now		517110	0					
ANR	517199	CallExpression	time ( NULL )		517110	1					
ANR	517200	Callee	time		517110	0					
ANR	517201	Identifier	time		517110	0					
ANR	517202	ArgumentList	NULL		517110	1					
ANR	517203	Argument	NULL		517110	0					
ANR	517204	Identifier	NULL		517110	0					
ANR	517205	IdentifierDeclStatement	"double thresh = ( double ) param_integer ( ""CREDD_TEST_INTERVAL"" , 300 ) ;"	700:1:19125:19190	517110	4	True				
ANR	517206	IdentifierDecl	"thresh = ( double ) param_integer ( ""CREDD_TEST_INTERVAL"" , 300 )"		517110	0					
ANR	517207	IdentifierDeclType	double		517110	0					
ANR	517208	Identifier	thresh		517110	1					
ANR	517209	AssignmentExpression	"thresh = ( double ) param_integer ( ""CREDD_TEST_INTERVAL"" , 300 )"		517110	2		=			
ANR	517210	Identifier	thresh		517110	0					
ANR	517211	CastExpression	"( double ) param_integer ( ""CREDD_TEST_INTERVAL"" , 300 )"		517110	1					
ANR	517212	CastTarget	double		517110	0					
ANR	517213	CallExpression	"param_integer ( ""CREDD_TEST_INTERVAL"" , 300 )"		517110	1					
ANR	517214	Callee	param_integer		517110	0					
ANR	517215	Identifier	param_integer		517110	0					
ANR	517216	ArgumentList	"""CREDD_TEST_INTERVAL"""		517110	1					
ANR	517217	Argument	"""CREDD_TEST_INTERVAL"""		517110	0					
ANR	517218	PrimaryExpression	"""CREDD_TEST_INTERVAL"""		517110	0					
ANR	517219	Argument	300		517110	1					
ANR	517220	PrimaryExpression	300		517110	0					
ANR	517221	IfStatement	"if ( difftime ( now , m_last_credd_test ) > thresh )"		517110	5					
ANR	517222	Condition	"difftime ( now , m_last_credd_test ) > thresh"	701:5:19197:19237	517110	0	True				
ANR	517223	RelationalExpression	"difftime ( now , m_last_credd_test ) > thresh"		517110	0		>			
ANR	517224	CallExpression	"difftime ( now , m_last_credd_test )"		517110	0					
ANR	517225	Callee	difftime		517110	0					
ANR	517226	Identifier	difftime		517110	0					
ANR	517227	ArgumentList	now		517110	1					
ANR	517228	Argument	now		517110	0					
ANR	517229	Identifier	now		517110	0					
ANR	517230	Argument	m_last_credd_test		517110	1					
ANR	517231	Identifier	m_last_credd_test		517110	0					
ANR	517232	Identifier	thresh		517110	1					
ANR	517233	CompoundStatement		31:2:716:738	517110	1					
ANR	517234	IdentifierDeclStatement	Daemon credd ( DT_CREDD ) ;	702:2:19244:19266	517110	0	True				
ANR	517235	IdentifierDecl	credd ( DT_CREDD )		517110	0					
ANR	517236	IdentifierDeclType	Daemon		517110	0					
ANR	517237	Identifier	credd		517110	1					
ANR	517238	Identifier	DT_CREDD		517110	2					
ANR	517239	IfStatement	if ( credd . locate ( ) )		517110	1					
ANR	517240	Condition	credd . locate ( )	703:6:19274:19287	517110	0	True				
ANR	517241	CallExpression	credd . locate ( )		517110	0					
ANR	517242	Callee	credd . locate		517110	0					
ANR	517243	MemberAccess	credd . locate		517110	0					
ANR	517244	Identifier	credd		517110	0					
ANR	517245	Identifier	locate		517110	1					
ANR	517246	ArgumentList			517110	1					
ANR	517247	CompoundStatement		33:3:767:832	517110	1					
ANR	517248	IdentifierDeclStatement	"Sock * sock = credd . startCommand ( CREDD_NOP , Stream :: reli_sock , 20 ) ;"	704:3:19295:19360	517110	0	True				
ANR	517249	IdentifierDecl	"* sock = credd . startCommand ( CREDD_NOP , Stream :: reli_sock , 20 )"		517110	0					
ANR	517250	IdentifierDeclType	Sock *		517110	0					
ANR	517251	Identifier	sock		517110	1					
ANR	517252	AssignmentExpression	"* sock = credd . startCommand ( CREDD_NOP , Stream :: reli_sock , 20 )"		517110	2		=			
ANR	517253	Identifier	sock		517110	0					
ANR	517254	CallExpression	"credd . startCommand ( CREDD_NOP , Stream :: reli_sock , 20 )"		517110	1					
ANR	517255	Callee	credd . startCommand		517110	0					
ANR	517256	MemberAccess	credd . startCommand		517110	0					
ANR	517257	Identifier	credd		517110	0					
ANR	517258	Identifier	startCommand		517110	1					
ANR	517259	ArgumentList	CREDD_NOP		517110	1					
ANR	517260	Argument	CREDD_NOP		517110	0					
ANR	517261	Identifier	CREDD_NOP		517110	0					
ANR	517262	Argument	Stream :: reli_sock		517110	1					
ANR	517263	Identifier	Stream :: reli_sock		517110	0					
ANR	517264	Argument	20		517110	2					
ANR	517265	PrimaryExpression	20		517110	0					
ANR	517266	IfStatement	if ( sock != NULL )		517110	1					
ANR	517267	Condition	sock != NULL	705:7:19369:19380	517110	0	True				
ANR	517268	EqualityExpression	sock != NULL		517110	0		!=			
ANR	517269	Identifier	sock		517110	0					
ANR	517270	Identifier	NULL		517110	1					
ANR	517271	CompoundStatement		34:21:855:855	517110	1					
ANR	517272	ExpressionStatement	sock -> decode ( )	706:4:19389:19403	517110	0	True				
ANR	517273	CallExpression	sock -> decode ( )		517110	0					
ANR	517274	Callee	sock -> decode		517110	0					
ANR	517275	PtrMemberAccess	sock -> decode		517110	0					
ANR	517276	Identifier	sock		517110	0					
ANR	517277	Identifier	decode		517110	1					
ANR	517278	ArgumentList			517110	1					
ANR	517279	IfStatement	if ( sock -> end_of_message ( ) )		517110	1					
ANR	517280	Condition	sock -> end_of_message ( )	707:8:19413:19434	517110	0	True				
ANR	517281	CallExpression	sock -> end_of_message ( )		517110	0					
ANR	517282	Callee	sock -> end_of_message		517110	0					
ANR	517283	PtrMemberAccess	sock -> end_of_message		517110	0					
ANR	517284	Identifier	sock		517110	0					
ANR	517285	Identifier	end_of_message		517110	1					
ANR	517286	ArgumentList			517110	1					
ANR	517287	CompoundStatement		36:32:909:909	517110	1					
ANR	517288	ExpressionStatement	m_local_credd = credd_host	708:5:19444:19470	517110	0	True				
ANR	517289	AssignmentExpression	m_local_credd = credd_host		517110	0		=			
ANR	517290	Identifier	m_local_credd		517110	0					
ANR	517291	Identifier	credd_host		517110	1					
ANR	517292	ExpressionStatement	m_last_credd_test = now	712:2:19489:19512	517110	2	True				
ANR	517293	AssignmentExpression	m_last_credd_test = now		517110	0		=			
ANR	517294	Identifier	m_last_credd_test		517110	0					
ANR	517295	Identifier	now		517110	1					
ANR	517296	IfStatement	if ( credd_host != m_local_credd )		517110	6					
ANR	517297	Condition	credd_host != m_local_credd	714:5:19522:19548	517110	0	True				
ANR	517298	EqualityExpression	credd_host != m_local_credd		517110	0		!=			
ANR	517299	Identifier	credd_host		517110	0					
ANR	517300	Identifier	m_local_credd		517110	1					
ANR	517301	CompoundStatement		43:34:1023:1023	517110	1					
ANR	517302	ExpressionStatement	free ( credd_host )	715:2:19555:19571	517110	0	True				
ANR	517303	CallExpression	free ( credd_host )		517110	0					
ANR	517304	Callee	free		517110	0					
ANR	517305	Identifier	free		517110	0					
ANR	517306	ArgumentList	credd_host		517110	1					
ANR	517307	Argument	credd_host		517110	0					
ANR	517308	Identifier	credd_host		517110	0					
ANR	517309	ReturnType	void		517110	1					
ANR	517310	Identifier	MachAttributes :: credd_test		517110	2					
ANR	517311	ParameterList			517110	3					
ANR	517312	CFGEntryNode	ENTRY		517110		True				
ANR	517313	CFGExitNode	EXIT		517110		True				
ANR	517314	Symbol	strcmp		517110						
ANR	517315	Symbol	NULL		517110						
ANR	517316	Symbol	sock -> end_of_message		517110						
ANR	517317	Symbol	credd . startCommand		517110						
ANR	517318	Symbol	credd_host		517110						
ANR	517319	Symbol	m_local_credd		517110						
ANR	517320	Symbol	CREDD_NOP		517110						
ANR	517321	Symbol	m_last_credd_test		517110						
ANR	517322	Symbol	sock		517110						
ANR	517323	Symbol	param		517110						
ANR	517324	Symbol	credd . locate		517110						
ANR	517325	Symbol	now		517110						
ANR	517326	Symbol	difftime		517110						
ANR	517327	Symbol	param_integer		517110						
ANR	517328	Symbol	Stream :: reli_sock		517110						
ANR	517329	Symbol	time		517110						
ANR	517330	Symbol	thresh		517110						
ANR	517331	Symbol	credd		517110						
ANR	517332	Symbol	* sock		517110						
ANR	517333	Function	CpuAttributes :: CpuAttributes	720:0:19586:20252							
ANR	517334	FunctionDef	"CpuAttributes :: CpuAttributes (MachAttributes * map_arg , int slot_type , int num_cpus_arg , int num_phys_mem , float virt_mem_fraction , float disk_fraction , MyString & execute_dir , MyString & execute_partition_id)"		517333	0					
ANR	517335	CompoundStatement		728:0:19859:20252	517333	0					
ANR	517336	ExpressionStatement	map = map_arg	729:1:19862:19875	517333	0	True				
ANR	517337	AssignmentExpression	map = map_arg		517333	0		=			
ANR	517338	Identifier	map		517333	0					
ANR	517339	Identifier	map_arg		517333	1					
ANR	517340	ExpressionStatement	c_type = slot_type	730:1:19878:19896	517333	1	True				
ANR	517341	AssignmentExpression	c_type = slot_type		517333	0		=			
ANR	517342	Identifier	c_type		517333	0					
ANR	517343	Identifier	slot_type		517333	1					
ANR	517344	ExpressionStatement	c_num_cpus = num_cpus_arg	731:1:19899:19924	517333	2	True				
ANR	517345	AssignmentExpression	c_num_cpus = num_cpus_arg		517333	0		=			
ANR	517346	Identifier	c_num_cpus		517333	0					
ANR	517347	Identifier	num_cpus_arg		517333	1					
ANR	517348	ExpressionStatement	c_phys_mem = num_phys_mem	732:1:19927:19952	517333	3	True				
ANR	517349	AssignmentExpression	c_phys_mem = num_phys_mem		517333	0		=			
ANR	517350	Identifier	c_phys_mem		517333	0					
ANR	517351	Identifier	num_phys_mem		517333	1					
ANR	517352	ExpressionStatement	c_virt_mem_fraction = virt_mem_fraction	733:1:19955:19994	517333	4	True				
ANR	517353	AssignmentExpression	c_virt_mem_fraction = virt_mem_fraction		517333	0		=			
ANR	517354	Identifier	c_virt_mem_fraction		517333	0					
ANR	517355	Identifier	virt_mem_fraction		517333	1					
ANR	517356	ExpressionStatement	c_disk_fraction = disk_fraction	734:1:19997:20028	517333	5	True				
ANR	517357	AssignmentExpression	c_disk_fraction = disk_fraction		517333	0		=			
ANR	517358	Identifier	c_disk_fraction		517333	0					
ANR	517359	Identifier	disk_fraction		517333	1					
ANR	517360	ExpressionStatement	c_execute_dir = execute_dir	735:1:20031:20058	517333	6	True				
ANR	517361	AssignmentExpression	c_execute_dir = execute_dir		517333	0		=			
ANR	517362	Identifier	c_execute_dir		517333	0					
ANR	517363	Identifier	execute_dir		517333	1					
ANR	517364	ExpressionStatement	c_execute_partition_id = execute_partition_id	736:1:20061:20106	517333	7	True				
ANR	517365	AssignmentExpression	c_execute_partition_id = execute_partition_id		517333	0		=			
ANR	517366	Identifier	c_execute_partition_id		517333	0					
ANR	517367	Identifier	execute_partition_id		517333	1					
ANR	517368	ExpressionStatement	c_idle = - 1	737:1:20109:20120	517333	8	True				
ANR	517369	AssignmentExpression	c_idle = - 1		517333	0		=			
ANR	517370	Identifier	c_idle		517333	0					
ANR	517371	UnaryOperationExpression	- 1		517333	1					
ANR	517372	UnaryOperator	-		517333	0					
ANR	517373	PrimaryExpression	1		517333	1					
ANR	517374	ExpressionStatement	c_console_idle = - 1	738:1:20123:20142	517333	9	True				
ANR	517375	AssignmentExpression	c_console_idle = - 1		517333	0		=			
ANR	517376	Identifier	c_console_idle		517333	0					
ANR	517377	UnaryOperationExpression	- 1		517333	1					
ANR	517378	UnaryOperator	-		517333	0					
ANR	517379	PrimaryExpression	1		517333	1					
ANR	517380	ExpressionStatement	c_disk = 0	739:1:20145:20155	517333	10	True				
ANR	517381	AssignmentExpression	c_disk = 0		517333	0		=			
ANR	517382	Identifier	c_disk		517333	0					
ANR	517383	PrimaryExpression	0		517333	1					
ANR	517384	ExpressionStatement	c_total_disk = 0	740:1:20158:20174	517333	11	True				
ANR	517385	AssignmentExpression	c_total_disk = 0		517333	0		=			
ANR	517386	Identifier	c_total_disk		517333	0					
ANR	517387	PrimaryExpression	0		517333	1					
ANR	517388	ExpressionStatement	c_condor_load = - 1.0	742:1:20178:20198	517333	12	True				
ANR	517389	AssignmentExpression	c_condor_load = - 1.0		517333	0		=			
ANR	517390	Identifier	c_condor_load		517333	0					
ANR	517391	UnaryOperationExpression	- 1.0		517333	1					
ANR	517392	UnaryOperator	-		517333	0					
ANR	517393	PrimaryExpression	1.0		517333	1					
ANR	517394	ExpressionStatement	c_owner_load = - 1.0	743:1:20201:20220	517333	13	True				
ANR	517395	AssignmentExpression	c_owner_load = - 1.0		517333	0		=			
ANR	517396	Identifier	c_owner_load		517333	0					
ANR	517397	UnaryOperationExpression	- 1.0		517333	1					
ANR	517398	UnaryOperator	-		517333	0					
ANR	517399	PrimaryExpression	1.0		517333	1					
ANR	517400	ExpressionStatement	c_virt_mem = 0	744:1:20223:20237	517333	14	True				
ANR	517401	AssignmentExpression	c_virt_mem = 0		517333	0		=			
ANR	517402	Identifier	c_virt_mem		517333	0					
ANR	517403	PrimaryExpression	0		517333	1					
ANR	517404	ExpressionStatement	rip = NULL	745:1:20240:20250	517333	15	True				
ANR	517405	AssignmentExpression	rip = NULL		517333	0		=			
ANR	517406	Identifier	rip		517333	0					
ANR	517407	Identifier	NULL		517333	1					
ANR	517408	Identifier	CpuAttributes :: CpuAttributes		517333	1					
ANR	517409	ParameterList	"MachAttributes * map_arg , int slot_type , int num_cpus_arg , int num_phys_mem , float virt_mem_fraction , float disk_fraction , MyString & execute_dir , MyString & execute_partition_id"		517333	2					
ANR	517410	Parameter	MachAttributes * map_arg	720:30:19616:19638	517333	0	True				
ANR	517411	ParameterType	MachAttributes *		517333	0					
ANR	517412	Identifier	map_arg		517333	1					
ANR	517413	Parameter	int slot_type	721:9:19651:19663	517333	1	True				
ANR	517414	ParameterType	int		517333	0					
ANR	517415	Identifier	slot_type		517333	1					
ANR	517416	Parameter	int num_cpus_arg	722:9:19675:19690	517333	2	True				
ANR	517417	ParameterType	int		517333	0					
ANR	517418	Identifier	num_cpus_arg		517333	1					
ANR	517419	Parameter	int num_phys_mem	723:9:19703:19718	517333	3	True				
ANR	517420	ParameterType	int		517333	0					
ANR	517421	Identifier	num_phys_mem		517333	1					
ANR	517422	Parameter	float virt_mem_fraction	724:9:19730:19752	517333	4	True				
ANR	517423	ParameterType	float		517333	0					
ANR	517424	Identifier	virt_mem_fraction		517333	1					
ANR	517425	Parameter	float disk_fraction	725:9:19764:19782	517333	5	True				
ANR	517426	ParameterType	float		517333	0					
ANR	517427	Identifier	disk_fraction		517333	1					
ANR	517428	Parameter	MyString & execute_dir	726:9:19794:19814	517333	6	True				
ANR	517429	ParameterType	MyString &		517333	0					
ANR	517430	Identifier	execute_dir		517333	1					
ANR	517431	Parameter	MyString & execute_partition_id	727:9:19826:19855	517333	7	True				
ANR	517432	ParameterType	MyString &		517333	0					
ANR	517433	Identifier	execute_partition_id		517333	1					
ANR	517434	CFGEntryNode	ENTRY		517333		True				
ANR	517435	CFGExitNode	EXIT		517333		True				
ANR	517436	Symbol	num_cpus_arg		517333						
ANR	517437	Symbol	c_condor_load		517333						
ANR	517438	Symbol	c_owner_load		517333						
ANR	517439	Symbol	num_phys_mem		517333						
ANR	517440	Symbol	c_console_idle		517333						
ANR	517441	Symbol	map_arg		517333						
ANR	517442	Symbol	c_phys_mem		517333						
ANR	517443	Symbol	rip		517333						
ANR	517444	Symbol	virt_mem_fraction		517333						
ANR	517445	Symbol	map		517333						
ANR	517446	Symbol	c_execute_dir		517333						
ANR	517447	Symbol	c_execute_partition_id		517333						
ANR	517448	Symbol	c_disk		517333						
ANR	517449	Symbol	execute_dir		517333						
ANR	517450	Symbol	NULL		517333						
ANR	517451	Symbol	slot_type		517333						
ANR	517452	Symbol	disk_fraction		517333						
ANR	517453	Symbol	c_total_disk		517333						
ANR	517454	Symbol	c_virt_mem_fraction		517333						
ANR	517455	Symbol	c_idle		517333						
ANR	517456	Symbol	c_num_cpus		517333						
ANR	517457	Symbol	execute_partition_id		517333						
ANR	517458	Symbol	c_type		517333						
ANR	517459	Symbol	c_virt_mem		517333						
ANR	517460	Symbol	c_disk_fraction		517333						
ANR	517461	Function	CpuAttributes :: attach	749:0:20256:20326							
ANR	517462	FunctionDef	CpuAttributes :: attach (Resource * res_ip)		517461	0					
ANR	517463	CompoundStatement		751:0:20303:20326	517461	0					
ANR	517464	ExpressionStatement	this -> rip = res_ip	752:1:20306:20324	517461	0	True				
ANR	517465	AssignmentExpression	this -> rip = res_ip		517461	0		=			
ANR	517466	PtrMemberAccess	this -> rip		517461	0					
ANR	517467	Identifier	this		517461	0					
ANR	517468	Identifier	rip		517461	1					
ANR	517469	Identifier	res_ip		517461	1					
ANR	517470	ReturnType	void		517461	1					
ANR	517471	Identifier	CpuAttributes :: attach		517461	2					
ANR	517472	ParameterList	Resource * res_ip		517461	3					
ANR	517473	Parameter	Resource * res_ip	750:23:20284:20299	517461	0	True				
ANR	517474	ParameterType	Resource *		517461	0					
ANR	517475	Identifier	res_ip		517461	1					
ANR	517476	CFGEntryNode	ENTRY		517461		True				
ANR	517477	CFGExitNode	EXIT		517461		True				
ANR	517478	Symbol	* this		517461						
ANR	517479	Symbol	this -> rip		517461						
ANR	517480	Symbol	this		517461						
ANR	517481	Symbol	res_ip		517461						
ANR	517482	Function	CpuAttributes :: publish	756:0:20330:21196							
ANR	517483	FunctionDef	"CpuAttributes :: publish (ClassAd * cp , amask_t how_much)"		517482	0					
ANR	517484	CompoundStatement		758:0:20391:21196	517482	0					
ANR	517485	IfStatement	if ( IS_UPDATE ( how_much ) || IS_PUBLIC ( how_much ) )		517482	0					
ANR	517486	Condition	IS_UPDATE ( how_much ) || IS_PUBLIC ( how_much )	759:5:20398:20439	517482	0	True				
ANR	517487	OrExpression	IS_UPDATE ( how_much ) || IS_PUBLIC ( how_much )		517482	0		||			
ANR	517488	CallExpression	IS_UPDATE ( how_much )		517482	0					
ANR	517489	Callee	IS_UPDATE		517482	0					
ANR	517490	Identifier	IS_UPDATE		517482	0					
ANR	517491	ArgumentList	how_much		517482	1					
ANR	517492	Argument	how_much		517482	0					
ANR	517493	Identifier	how_much		517482	0					
ANR	517494	CallExpression	IS_PUBLIC ( how_much )		517482	1					
ANR	517495	Callee	IS_PUBLIC		517482	0					
ANR	517496	Identifier	IS_PUBLIC		517482	0					
ANR	517497	ArgumentList	how_much		517482	1					
ANR	517498	Argument	how_much		517482	0					
ANR	517499	Identifier	how_much		517482	0					
ANR	517500	CompoundStatement		2:50:51:51	517482	1					
ANR	517501	ExpressionStatement	"cp -> Assign ( ATTR_VIRTUAL_MEMORY , ( int ) c_virt_mem )"	761:2:20448:20498	517482	0	True				
ANR	517502	CallExpression	"cp -> Assign ( ATTR_VIRTUAL_MEMORY , ( int ) c_virt_mem )"		517482	0					
ANR	517503	Callee	cp -> Assign		517482	0					
ANR	517504	PtrMemberAccess	cp -> Assign		517482	0					
ANR	517505	Identifier	cp		517482	0					
ANR	517506	Identifier	Assign		517482	1					
ANR	517507	ArgumentList	ATTR_VIRTUAL_MEMORY		517482	1					
ANR	517508	Argument	ATTR_VIRTUAL_MEMORY		517482	0					
ANR	517509	Identifier	ATTR_VIRTUAL_MEMORY		517482	0					
ANR	517510	Argument	( int ) c_virt_mem		517482	1					
ANR	517511	CastExpression	( int ) c_virt_mem		517482	0					
ANR	517512	CastTarget	int		517482	0					
ANR	517513	Identifier	c_virt_mem		517482	1					
ANR	517514	ExpressionStatement	"cp -> Assign ( ATTR_TOTAL_DISK , ( int ) c_total_disk )"	763:2:20503:20551	517482	1	True				
ANR	517515	CallExpression	"cp -> Assign ( ATTR_TOTAL_DISK , ( int ) c_total_disk )"		517482	0					
ANR	517516	Callee	cp -> Assign		517482	0					
ANR	517517	PtrMemberAccess	cp -> Assign		517482	0					
ANR	517518	Identifier	cp		517482	0					
ANR	517519	Identifier	Assign		517482	1					
ANR	517520	ArgumentList	ATTR_TOTAL_DISK		517482	1					
ANR	517521	Argument	ATTR_TOTAL_DISK		517482	0					
ANR	517522	Identifier	ATTR_TOTAL_DISK		517482	0					
ANR	517523	Argument	( int ) c_total_disk		517482	1					
ANR	517524	CastExpression	( int ) c_total_disk		517482	0					
ANR	517525	CastTarget	int		517482	0					
ANR	517526	Identifier	c_total_disk		517482	1					
ANR	517527	ExpressionStatement	"cp -> Assign ( ATTR_DISK , ( int ) c_disk )"	765:2:20556:20592	517482	2	True				
ANR	517528	CallExpression	"cp -> Assign ( ATTR_DISK , ( int ) c_disk )"		517482	0					
ANR	517529	Callee	cp -> Assign		517482	0					
ANR	517530	PtrMemberAccess	cp -> Assign		517482	0					
ANR	517531	Identifier	cp		517482	0					
ANR	517532	Identifier	Assign		517482	1					
ANR	517533	ArgumentList	ATTR_DISK		517482	1					
ANR	517534	Argument	ATTR_DISK		517482	0					
ANR	517535	Identifier	ATTR_DISK		517482	0					
ANR	517536	Argument	( int ) c_disk		517482	1					
ANR	517537	CastExpression	( int ) c_disk		517482	0					
ANR	517538	CastTarget	int		517482	0					
ANR	517539	Identifier	c_disk		517482	1					
ANR	517540	IfStatement	if ( IS_TIMEOUT ( how_much ) || IS_PUBLIC ( how_much ) )		517482	1					
ANR	517541	Condition	IS_TIMEOUT ( how_much ) || IS_PUBLIC ( how_much )	768:5:20603:20645	517482	0	True				
ANR	517542	OrExpression	IS_TIMEOUT ( how_much ) || IS_PUBLIC ( how_much )		517482	0		||			
ANR	517543	CallExpression	IS_TIMEOUT ( how_much )		517482	0					
ANR	517544	Callee	IS_TIMEOUT		517482	0					
ANR	517545	Identifier	IS_TIMEOUT		517482	0					
ANR	517546	ArgumentList	how_much		517482	1					
ANR	517547	Argument	how_much		517482	0					
ANR	517548	Identifier	how_much		517482	0					
ANR	517549	CallExpression	IS_PUBLIC ( how_much )		517482	1					
ANR	517550	Callee	IS_PUBLIC		517482	0					
ANR	517551	Identifier	IS_PUBLIC		517482	0					
ANR	517552	ArgumentList	how_much		517482	1					
ANR	517553	Argument	how_much		517482	0					
ANR	517554	Identifier	how_much		517482	0					
ANR	517555	CompoundStatement		11:51:257:257	517482	1					
ANR	517556	ExpressionStatement	"cp -> Assign ( ATTR_CONDOR_LOAD_AVG , rint ( c_condor_load * 100 ) / 100.0 )"	770:2:20654:20723	517482	0	True				
ANR	517557	CallExpression	"cp -> Assign ( ATTR_CONDOR_LOAD_AVG , rint ( c_condor_load * 100 ) / 100.0 )"		517482	0					
ANR	517558	Callee	cp -> Assign		517482	0					
ANR	517559	PtrMemberAccess	cp -> Assign		517482	0					
ANR	517560	Identifier	cp		517482	0					
ANR	517561	Identifier	Assign		517482	1					
ANR	517562	ArgumentList	ATTR_CONDOR_LOAD_AVG		517482	1					
ANR	517563	Argument	ATTR_CONDOR_LOAD_AVG		517482	0					
ANR	517564	Identifier	ATTR_CONDOR_LOAD_AVG		517482	0					
ANR	517565	Argument	rint ( c_condor_load * 100 ) / 100.0		517482	1					
ANR	517566	MultiplicativeExpression	rint ( c_condor_load * 100 ) / 100.0		517482	0		/			
ANR	517567	CallExpression	rint ( c_condor_load * 100 )		517482	0					
ANR	517568	Callee	rint		517482	0					
ANR	517569	Identifier	rint		517482	0					
ANR	517570	ArgumentList	c_condor_load * 100		517482	1					
ANR	517571	Argument	c_condor_load * 100		517482	0					
ANR	517572	MultiplicativeExpression	c_condor_load * 100		517482	0		*			
ANR	517573	Identifier	c_condor_load		517482	0					
ANR	517574	PrimaryExpression	100		517482	1					
ANR	517575	PrimaryExpression	100.0		517482	1					
ANR	517576	ExpressionStatement	"cp -> Assign ( ATTR_LOAD_AVG , rint ( ( c_owner_load + c_condor_load ) * 100 ) / 100.0 )"	772:2:20728:20807	517482	1	True				
ANR	517577	CallExpression	"cp -> Assign ( ATTR_LOAD_AVG , rint ( ( c_owner_load + c_condor_load ) * 100 ) / 100.0 )"		517482	0					
ANR	517578	Callee	cp -> Assign		517482	0					
ANR	517579	PtrMemberAccess	cp -> Assign		517482	0					
ANR	517580	Identifier	cp		517482	0					
ANR	517581	Identifier	Assign		517482	1					
ANR	517582	ArgumentList	ATTR_LOAD_AVG		517482	1					
ANR	517583	Argument	ATTR_LOAD_AVG		517482	0					
ANR	517584	Identifier	ATTR_LOAD_AVG		517482	0					
ANR	517585	Argument	rint ( ( c_owner_load + c_condor_load ) * 100 ) / 100.0		517482	1					
ANR	517586	MultiplicativeExpression	rint ( ( c_owner_load + c_condor_load ) * 100 ) / 100.0		517482	0		/			
ANR	517587	CallExpression	rint ( ( c_owner_load + c_condor_load ) * 100 )		517482	0					
ANR	517588	Callee	rint		517482	0					
ANR	517589	Identifier	rint		517482	0					
ANR	517590	ArgumentList	( c_owner_load + c_condor_load ) * 100		517482	1					
ANR	517591	Argument	( c_owner_load + c_condor_load ) * 100		517482	0					
ANR	517592	MultiplicativeExpression	( c_owner_load + c_condor_load ) * 100		517482	0		*			
ANR	517593	AdditiveExpression	c_owner_load + c_condor_load		517482	0		+			
ANR	517594	Identifier	c_owner_load		517482	0					
ANR	517595	Identifier	c_condor_load		517482	1					
ANR	517596	PrimaryExpression	100		517482	1					
ANR	517597	PrimaryExpression	100.0		517482	1					
ANR	517598	ExpressionStatement	"cp -> Assign ( ATTR_KEYBOARD_IDLE , ( int ) c_idle )"	774:2:20812:20857	517482	2	True				
ANR	517599	CallExpression	"cp -> Assign ( ATTR_KEYBOARD_IDLE , ( int ) c_idle )"		517482	0					
ANR	517600	Callee	cp -> Assign		517482	0					
ANR	517601	PtrMemberAccess	cp -> Assign		517482	0					
ANR	517602	Identifier	cp		517482	0					
ANR	517603	Identifier	Assign		517482	1					
ANR	517604	ArgumentList	ATTR_KEYBOARD_IDLE		517482	1					
ANR	517605	Argument	ATTR_KEYBOARD_IDLE		517482	0					
ANR	517606	Identifier	ATTR_KEYBOARD_IDLE		517482	0					
ANR	517607	Argument	( int ) c_idle		517482	1					
ANR	517608	CastExpression	( int ) c_idle		517482	0					
ANR	517609	CastTarget	int		517482	0					
ANR	517610	Identifier	c_idle		517482	1					
ANR	517611	IfStatement	if ( c_console_idle != - 1 )		517482	3					
ANR	517612	Condition	c_console_idle != - 1	778:6:20969:20988	517482	0	True				
ANR	517613	EqualityExpression	c_console_idle != - 1		517482	0		!=			
ANR	517614	Identifier	c_console_idle		517482	0					
ANR	517615	UnaryOperationExpression	- 1		517482	1					
ANR	517616	UnaryOperator	-		517482	0					
ANR	517617	PrimaryExpression	1		517482	1					
ANR	517618	CompoundStatement		21:29:600:600	517482	1					
ANR	517619	ExpressionStatement	"cp -> Assign ( ATTR_CONSOLE_IDLE , ( int ) c_console_idle )"	779:3:20997:21049	517482	0	True				
ANR	517620	CallExpression	"cp -> Assign ( ATTR_CONSOLE_IDLE , ( int ) c_console_idle )"		517482	0					
ANR	517621	Callee	cp -> Assign		517482	0					
ANR	517622	PtrMemberAccess	cp -> Assign		517482	0					
ANR	517623	Identifier	cp		517482	0					
ANR	517624	Identifier	Assign		517482	1					
ANR	517625	ArgumentList	ATTR_CONSOLE_IDLE		517482	1					
ANR	517626	Argument	ATTR_CONSOLE_IDLE		517482	0					
ANR	517627	Identifier	ATTR_CONSOLE_IDLE		517482	0					
ANR	517628	Argument	( int ) c_console_idle		517482	1					
ANR	517629	CastExpression	( int ) c_console_idle		517482	0					
ANR	517630	CastTarget	int		517482	0					
ANR	517631	Identifier	c_console_idle		517482	1					
ANR	517632	IfStatement	if ( IS_STATIC ( how_much ) || IS_PUBLIC ( how_much ) )		517482	2					
ANR	517633	Condition	IS_STATIC ( how_much ) || IS_PUBLIC ( how_much )	783:5:21064:21105	517482	0	True				
ANR	517634	OrExpression	IS_STATIC ( how_much ) || IS_PUBLIC ( how_much )		517482	0		||			
ANR	517635	CallExpression	IS_STATIC ( how_much )		517482	0					
ANR	517636	Callee	IS_STATIC		517482	0					
ANR	517637	Identifier	IS_STATIC		517482	0					
ANR	517638	ArgumentList	how_much		517482	1					
ANR	517639	Argument	how_much		517482	0					
ANR	517640	Identifier	how_much		517482	0					
ANR	517641	CallExpression	IS_PUBLIC ( how_much )		517482	1					
ANR	517642	Callee	IS_PUBLIC		517482	0					
ANR	517643	Identifier	IS_PUBLIC		517482	0					
ANR	517644	ArgumentList	how_much		517482	1					
ANR	517645	Argument	how_much		517482	0					
ANR	517646	Identifier	how_much		517482	0					
ANR	517647	CompoundStatement		26:50:717:717	517482	1					
ANR	517648	ExpressionStatement	"cp -> Assign ( ATTR_MEMORY , c_phys_mem )"	785:2:21114:21151	517482	0	True				
ANR	517649	CallExpression	"cp -> Assign ( ATTR_MEMORY , c_phys_mem )"		517482	0					
ANR	517650	Callee	cp -> Assign		517482	0					
ANR	517651	PtrMemberAccess	cp -> Assign		517482	0					
ANR	517652	Identifier	cp		517482	0					
ANR	517653	Identifier	Assign		517482	1					
ANR	517654	ArgumentList	ATTR_MEMORY		517482	1					
ANR	517655	Argument	ATTR_MEMORY		517482	0					
ANR	517656	Identifier	ATTR_MEMORY		517482	0					
ANR	517657	Argument	c_phys_mem		517482	1					
ANR	517658	Identifier	c_phys_mem		517482	0					
ANR	517659	ExpressionStatement	"cp -> Assign ( ATTR_CPUS , c_num_cpus )"	787:2:21156:21191	517482	1	True				
ANR	517660	CallExpression	"cp -> Assign ( ATTR_CPUS , c_num_cpus )"		517482	0					
ANR	517661	Callee	cp -> Assign		517482	0					
ANR	517662	PtrMemberAccess	cp -> Assign		517482	0					
ANR	517663	Identifier	cp		517482	0					
ANR	517664	Identifier	Assign		517482	1					
ANR	517665	ArgumentList	ATTR_CPUS		517482	1					
ANR	517666	Argument	ATTR_CPUS		517482	0					
ANR	517667	Identifier	ATTR_CPUS		517482	0					
ANR	517668	Argument	c_num_cpus		517482	1					
ANR	517669	Identifier	c_num_cpus		517482	0					
ANR	517670	ReturnType	void		517482	1					
ANR	517671	Identifier	CpuAttributes :: publish		517482	2					
ANR	517672	ParameterList	"ClassAd * cp , amask_t how_much"		517482	3					
ANR	517673	Parameter	ClassAd * cp	757:24:20359:20369	517482	0	True				
ANR	517674	ParameterType	ClassAd *		517482	0					
ANR	517675	Identifier	cp		517482	1					
ANR	517676	Parameter	amask_t how_much	757:37:20372:20387	517482	1	True				
ANR	517677	ParameterType	amask_t		517482	0					
ANR	517678	Identifier	how_much		517482	1					
ANR	517679	CFGEntryNode	ENTRY		517482		True				
ANR	517680	CFGExitNode	EXIT		517482		True				
ANR	517681	Symbol	ATTR_KEYBOARD_IDLE		517482						
ANR	517682	Symbol	c_condor_load		517482						
ANR	517683	Symbol	IS_TIMEOUT		517482						
ANR	517684	Symbol	rint		517482						
ANR	517685	Symbol	c_owner_load		517482						
ANR	517686	Symbol	ATTR_MEMORY		517482						
ANR	517687	Symbol	c_console_idle		517482						
ANR	517688	Symbol	ATTR_CPUS		517482						
ANR	517689	Symbol	how_much		517482						
ANR	517690	Symbol	ATTR_CONSOLE_IDLE		517482						
ANR	517691	Symbol	ATTR_VIRTUAL_MEMORY		517482						
ANR	517692	Symbol	c_phys_mem		517482						
ANR	517693	Symbol	IS_PUBLIC		517482						
ANR	517694	Symbol	ATTR_CONDOR_LOAD_AVG		517482						
ANR	517695	Symbol	c_disk		517482						
ANR	517696	Symbol	ATTR_LOAD_AVG		517482						
ANR	517697	Symbol	c_total_disk		517482						
ANR	517698	Symbol	c_idle		517482						
ANR	517699	Symbol	cp		517482						
ANR	517700	Symbol	c_num_cpus		517482						
ANR	517701	Symbol	IS_UPDATE		517482						
ANR	517702	Symbol	IS_STATIC		517482						
ANR	517703	Symbol	c_virt_mem		517482						
ANR	517704	Symbol	ATTR_DISK		517482						
ANR	517705	Symbol	ATTR_TOTAL_DISK		517482						
ANR	517706	Function	CpuAttributes :: compute	792:0:21200:21923							
ANR	517707	FunctionDef	CpuAttributes :: compute (amask_t how_much)		517706	0					
ANR	517708	CompoundStatement		794:0:21248:21923	517706	0					
ANR	517709	IdentifierDeclStatement	double val ;	795:1:21251:21261	517706	0	True				
ANR	517710	IdentifierDecl	val		517706	0					
ANR	517711	IdentifierDeclType	double		517706	0					
ANR	517712	Identifier	val		517706	1					
ANR	517713	IfStatement	if ( IS_UPDATE ( how_much ) && IS_SHARED ( how_much ) )		517706	1					
ANR	517714	Condition	IS_UPDATE ( how_much ) && IS_SHARED ( how_much )	797:5:21269:21310	517706	0	True				
ANR	517715	AndExpression	IS_UPDATE ( how_much ) && IS_SHARED ( how_much )		517706	0		&&			
ANR	517716	CallExpression	IS_UPDATE ( how_much )		517706	0					
ANR	517717	Callee	IS_UPDATE		517706	0					
ANR	517718	Identifier	IS_UPDATE		517706	0					
ANR	517719	ArgumentList	how_much		517706	1					
ANR	517720	Argument	how_much		517706	0					
ANR	517721	Identifier	how_much		517706	0					
ANR	517722	CallExpression	IS_SHARED ( how_much )		517706	1					
ANR	517723	Callee	IS_SHARED		517706	0					
ANR	517724	Identifier	IS_SHARED		517706	0					
ANR	517725	ArgumentList	how_much		517706	1					
ANR	517726	Argument	how_much		517706	0					
ANR	517727	Identifier	how_much		517706	0					
ANR	517728	CompoundStatement		4:50:65:65	517706	1					
ANR	517729	ExpressionStatement	val = map -> virt_mem ( )	800:2:21374:21395	517706	0	True				
ANR	517730	AssignmentExpression	val = map -> virt_mem ( )		517706	0		=			
ANR	517731	Identifier	val		517706	0					
ANR	517732	CallExpression	map -> virt_mem ( )		517706	1					
ANR	517733	Callee	map -> virt_mem		517706	0					
ANR	517734	PtrMemberAccess	map -> virt_mem		517706	0					
ANR	517735	Identifier	map		517706	0					
ANR	517736	Identifier	virt_mem		517706	1					
ANR	517737	ArgumentList			517706	1					
ANR	517738	IfStatement	if ( ! IS_AUTO_SHARE ( c_virt_mem_fraction ) )		517706	1					
ANR	517739	Condition	! IS_AUTO_SHARE ( c_virt_mem_fraction )	801:6:21403:21437	517706	0	True				
ANR	517740	UnaryOperationExpression	! IS_AUTO_SHARE ( c_virt_mem_fraction )		517706	0					
ANR	517741	UnaryOperator	!		517706	0					
ANR	517742	CallExpression	IS_AUTO_SHARE ( c_virt_mem_fraction )		517706	1					
ANR	517743	Callee	IS_AUTO_SHARE		517706	0					
ANR	517744	Identifier	IS_AUTO_SHARE		517706	0					
ANR	517745	ArgumentList	c_virt_mem_fraction		517706	1					
ANR	517746	Argument	c_virt_mem_fraction		517706	0					
ANR	517747	Identifier	c_virt_mem_fraction		517706	0					
ANR	517748	CompoundStatement		8:43:191:191	517706	1					
ANR	517749	ExpressionStatement	val *= c_virt_mem_fraction	802:3:21445:21471	517706	0	True				
ANR	517750	AssignmentExpression	val *= c_virt_mem_fraction		517706	0		*=			
ANR	517751	Identifier	val		517706	0					
ANR	517752	Identifier	c_virt_mem_fraction		517706	1					
ANR	517753	ExpressionStatement	c_virt_mem = ( unsigned long ) floor ( val )	804:2:21479:21519	517706	2	True				
ANR	517754	AssignmentExpression	c_virt_mem = ( unsigned long ) floor ( val )		517706	0		=			
ANR	517755	Identifier	c_virt_mem		517706	0					
ANR	517756	CastExpression	( unsigned long ) floor ( val )		517706	1					
ANR	517757	CastTarget	unsigned long		517706	0					
ANR	517758	CallExpression	floor ( val )		517706	1					
ANR	517759	Callee	floor		517706	0					
ANR	517760	Identifier	floor		517706	0					
ANR	517761	ArgumentList	val		517706	1					
ANR	517762	Argument	val		517706	0					
ANR	517763	Identifier	val		517706	0					
ANR	517764	IfStatement	if ( IS_TIMEOUT ( how_much ) && ! IS_SHARED ( how_much ) )		517706	2					
ANR	517765	Condition	IS_TIMEOUT ( how_much ) && ! IS_SHARED ( how_much )	807:5:21530:21573	517706	0	True				
ANR	517766	AndExpression	IS_TIMEOUT ( how_much ) && ! IS_SHARED ( how_much )		517706	0		&&			
ANR	517767	CallExpression	IS_TIMEOUT ( how_much )		517706	0					
ANR	517768	Callee	IS_TIMEOUT		517706	0					
ANR	517769	Identifier	IS_TIMEOUT		517706	0					
ANR	517770	ArgumentList	how_much		517706	1					
ANR	517771	Argument	how_much		517706	0					
ANR	517772	Identifier	how_much		517706	0					
ANR	517773	UnaryOperationExpression	! IS_SHARED ( how_much )		517706	1					
ANR	517774	UnaryOperator	!		517706	0					
ANR	517775	CallExpression	IS_SHARED ( how_much )		517706	1					
ANR	517776	Callee	IS_SHARED		517706	0					
ANR	517777	Identifier	IS_SHARED		517706	0					
ANR	517778	ArgumentList	how_much		517706	1					
ANR	517779	Argument	how_much		517706	0					
ANR	517780	Identifier	how_much		517706	0					
ANR	517781	CompoundStatement		14:52:328:328	517706	1					
ANR	517782	ExpressionStatement	c_condor_load = rip -> compute_condor_load ( )	810:2:21646:21688	517706	0	True				
ANR	517783	AssignmentExpression	c_condor_load = rip -> compute_condor_load ( )		517706	0		=			
ANR	517784	Identifier	c_condor_load		517706	0					
ANR	517785	CallExpression	rip -> compute_condor_load ( )		517706	1					
ANR	517786	Callee	rip -> compute_condor_load		517706	0					
ANR	517787	PtrMemberAccess	rip -> compute_condor_load		517706	0					
ANR	517788	Identifier	rip		517706	0					
ANR	517789	Identifier	compute_condor_load		517706	1					
ANR	517790	ArgumentList			517706	1					
ANR	517791	ExpressionStatement	c_total_disk = sysapi_disk_space ( rip -> executeDir ( ) )	812:2:21693:21744	517706	1	True				
ANR	517792	AssignmentExpression	c_total_disk = sysapi_disk_space ( rip -> executeDir ( ) )		517706	0		=			
ANR	517793	Identifier	c_total_disk		517706	0					
ANR	517794	CallExpression	sysapi_disk_space ( rip -> executeDir ( ) )		517706	1					
ANR	517795	Callee	sysapi_disk_space		517706	0					
ANR	517796	Identifier	sysapi_disk_space		517706	0					
ANR	517797	ArgumentList	rip -> executeDir ( )		517706	1					
ANR	517798	Argument	rip -> executeDir ( )		517706	0					
ANR	517799	CallExpression	rip -> executeDir ( )		517706	0					
ANR	517800	Callee	rip -> executeDir		517706	0					
ANR	517801	PtrMemberAccess	rip -> executeDir		517706	0					
ANR	517802	Identifier	rip		517706	0					
ANR	517803	Identifier	executeDir		517706	1					
ANR	517804	ArgumentList			517706	1					
ANR	517805	IfStatement	if ( IS_UPDATE ( how_much ) )		517706	2					
ANR	517806	Condition	IS_UPDATE ( how_much )	813:6:21752:21770	517706	0	True				
ANR	517807	CallExpression	IS_UPDATE ( how_much )		517706	0					
ANR	517808	Callee	IS_UPDATE		517706	0					
ANR	517809	Identifier	IS_UPDATE		517706	0					
ANR	517810	ArgumentList	how_much		517706	1					
ANR	517811	Argument	how_much		517706	0					
ANR	517812	Identifier	how_much		517706	0					
ANR	517813	CompoundStatement		20:27:524:524	517706	1					
ANR	517814	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Total execute space: %lu\\n"" , c_total_disk )"	814:3:21778:21842	517706	0	True				
ANR	517815	CallExpression	"dprintf ( D_FULLDEBUG , ""Total execute space: %lu\\n"" , c_total_disk )"		517706	0					
ANR	517816	Callee	dprintf		517706	0					
ANR	517817	Identifier	dprintf		517706	0					
ANR	517818	ArgumentList	D_FULLDEBUG		517706	1					
ANR	517819	Argument	D_FULLDEBUG		517706	0					
ANR	517820	Identifier	D_FULLDEBUG		517706	0					
ANR	517821	Argument	"""Total execute space: %lu\\n"""		517706	1					
ANR	517822	PrimaryExpression	"""Total execute space: %lu\\n"""		517706	0					
ANR	517823	Argument	c_total_disk		517706	2					
ANR	517824	Identifier	c_total_disk		517706	0					
ANR	517825	ExpressionStatement	val = c_total_disk * c_disk_fraction	817:2:21851:21887	517706	3	True				
ANR	517826	AssignmentExpression	val = c_total_disk * c_disk_fraction		517706	0		=			
ANR	517827	Identifier	val		517706	0					
ANR	517828	MultiplicativeExpression	c_total_disk * c_disk_fraction		517706	1		*			
ANR	517829	Identifier	c_total_disk		517706	0					
ANR	517830	Identifier	c_disk_fraction		517706	1					
ANR	517831	ExpressionStatement	c_disk = ( int ) floor ( val )	818:2:21891:21917	517706	4	True				
ANR	517832	AssignmentExpression	c_disk = ( int ) floor ( val )		517706	0		=			
ANR	517833	Identifier	c_disk		517706	0					
ANR	517834	CastExpression	( int ) floor ( val )		517706	1					
ANR	517835	CastTarget	int		517706	0					
ANR	517836	CallExpression	floor ( val )		517706	1					
ANR	517837	Callee	floor		517706	0					
ANR	517838	Identifier	floor		517706	0					
ANR	517839	ArgumentList	val		517706	1					
ANR	517840	Argument	val		517706	0					
ANR	517841	Identifier	val		517706	0					
ANR	517842	ReturnType	void		517706	1					
ANR	517843	Identifier	CpuAttributes :: compute		517706	2					
ANR	517844	ParameterList	amask_t how_much		517706	3					
ANR	517845	Parameter	amask_t how_much	793:24:21229:21244	517706	0	True				
ANR	517846	ParameterType	amask_t		517706	0					
ANR	517847	Identifier	how_much		517706	1					
ANR	517848	CFGEntryNode	ENTRY		517706		True				
ANR	517849	CFGExitNode	EXIT		517706		True				
ANR	517850	Symbol	val		517706						
ANR	517851	Symbol	c_disk		517706						
ANR	517852	Symbol	c_condor_load		517706						
ANR	517853	Symbol	* rip		517706						
ANR	517854	Symbol	* map		517706						
ANR	517855	Symbol	IS_TIMEOUT		517706						
ANR	517856	Symbol	sysapi_disk_space		517706						
ANR	517857	Symbol	c_total_disk		517706						
ANR	517858	Symbol	D_FULLDEBUG		517706						
ANR	517859	Symbol	c_virt_mem_fraction		517706						
ANR	517860	Symbol	map -> virt_mem		517706						
ANR	517861	Symbol	rip -> compute_condor_load		517706						
ANR	517862	Symbol	how_much		517706						
ANR	517863	Symbol	IS_AUTO_SHARE		517706						
ANR	517864	Symbol	IS_SHARED		517706						
ANR	517865	Symbol	IS_UPDATE		517706						
ANR	517866	Symbol	rip		517706						
ANR	517867	Symbol	rip -> executeDir		517706						
ANR	517868	Symbol	c_virt_mem		517706						
ANR	517869	Symbol	floor		517706						
ANR	517870	Symbol	c_disk_fraction		517706						
ANR	517871	Symbol	map		517706						
ANR	517872	Function	CpuAttributes :: display	822:0:21926:22728							
ANR	517873	FunctionDef	CpuAttributes :: display (amask_t how_much)		517872	0					
ANR	517874	CompoundStatement		824:0:21974:22728	517872	0					
ANR	517875	IfStatement	if ( IS_UPDATE ( how_much ) )		517872	0					
ANR	517876	Condition	IS_UPDATE ( how_much )	825:5:21981:21999	517872	0	True				
ANR	517877	CallExpression	IS_UPDATE ( how_much )		517872	0					
ANR	517878	Callee	IS_UPDATE		517872	0					
ANR	517879	Identifier	IS_UPDATE		517872	0					
ANR	517880	ArgumentList	how_much		517872	1					
ANR	517881	Argument	how_much		517872	0					
ANR	517882	Identifier	how_much		517872	0					
ANR	517883	CompoundStatement		2:27:28:28	517872	1					
ANR	517884	ExpressionStatement	"dprintf ( D_KEYBOARD , ""Idle time: %s %-8d %s %d\\n"" , ""Keyboard:"" , ( int ) c_idle , ""Console:"" , ( int ) c_console_idle )"	826:2:22007:22136	517872	0	True				
ANR	517885	CallExpression	"dprintf ( D_KEYBOARD , ""Idle time: %s %-8d %s %d\\n"" , ""Keyboard:"" , ( int ) c_idle , ""Console:"" , ( int ) c_console_idle )"		517872	0					
ANR	517886	Callee	dprintf		517872	0					
ANR	517887	Identifier	dprintf		517872	0					
ANR	517888	ArgumentList	D_KEYBOARD		517872	1					
ANR	517889	Argument	D_KEYBOARD		517872	0					
ANR	517890	Identifier	D_KEYBOARD		517872	0					
ANR	517891	Argument	"""Idle time: %s %-8d %s %d\\n"""		517872	1					
ANR	517892	PrimaryExpression	"""Idle time: %s %-8d %s %d\\n"""		517872	0					
ANR	517893	Argument	"""Keyboard:"""		517872	2					
ANR	517894	PrimaryExpression	"""Keyboard:"""		517872	0					
ANR	517895	Argument	( int ) c_idle		517872	3					
ANR	517896	CastExpression	( int ) c_idle		517872	0					
ANR	517897	CastTarget	int		517872	0					
ANR	517898	Identifier	c_idle		517872	1					
ANR	517899	Argument	"""Console:"""		517872	4					
ANR	517900	PrimaryExpression	"""Console:"""		517872	0					
ANR	517901	Argument	( int ) c_console_idle		517872	5					
ANR	517902	CastExpression	( int ) c_console_idle		517872	0					
ANR	517903	CastTarget	int		517872	0					
ANR	517904	Identifier	c_console_idle		517872	1					
ANR	517905	ExpressionStatement	"dprintf ( D_LOAD , ""%s %.2f  %s %.2f  %s %.2f\\n"" , ""SystemLoad:"" , c_condor_load + c_owner_load , ""CondorLoad:"" , c_condor_load , ""OwnerLoad:"" , c_owner_load )"	831:2:22141:22315	517872	1	True				
ANR	517906	CallExpression	"dprintf ( D_LOAD , ""%s %.2f  %s %.2f  %s %.2f\\n"" , ""SystemLoad:"" , c_condor_load + c_owner_load , ""CondorLoad:"" , c_condor_load , ""OwnerLoad:"" , c_owner_load )"		517872	0					
ANR	517907	Callee	dprintf		517872	0					
ANR	517908	Identifier	dprintf		517872	0					
ANR	517909	ArgumentList	D_LOAD		517872	1					
ANR	517910	Argument	D_LOAD		517872	0					
ANR	517911	Identifier	D_LOAD		517872	0					
ANR	517912	Argument	"""%s %.2f  %s %.2f  %s %.2f\\n"""		517872	1					
ANR	517913	PrimaryExpression	"""%s %.2f  %s %.2f  %s %.2f\\n"""		517872	0					
ANR	517914	Argument	"""SystemLoad:"""		517872	2					
ANR	517915	PrimaryExpression	"""SystemLoad:"""		517872	0					
ANR	517916	Argument	c_condor_load + c_owner_load		517872	3					
ANR	517917	AdditiveExpression	c_condor_load + c_owner_load		517872	0		+			
ANR	517918	Identifier	c_condor_load		517872	0					
ANR	517919	Identifier	c_owner_load		517872	1					
ANR	517920	Argument	"""CondorLoad:"""		517872	4					
ANR	517921	PrimaryExpression	"""CondorLoad:"""		517872	0					
ANR	517922	Argument	c_condor_load		517872	5					
ANR	517923	Identifier	c_condor_load		517872	0					
ANR	517924	Argument	"""OwnerLoad:"""		517872	6					
ANR	517925	PrimaryExpression	"""OwnerLoad:"""		517872	0					
ANR	517926	Argument	c_owner_load		517872	7					
ANR	517927	Identifier	c_owner_load		517872	0					
ANR	517928	ElseStatement	else		517872	0					
ANR	517929	CompoundStatement		13:8:350:350	517872	0					
ANR	517930	IfStatement	if ( DebugFlags & D_LOAD )		517872	0					
ANR	517931	Condition	DebugFlags & D_LOAD	837:6:22333:22351	517872	0	True				
ANR	517932	BitAndExpression	DebugFlags & D_LOAD		517872	0		&			
ANR	517933	Identifier	DebugFlags		517872	0					
ANR	517934	Identifier	D_LOAD		517872	1					
ANR	517935	CompoundStatement		14:28:380:380	517872	1					
ANR	517936	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""%s %.2f  %s %.2f  %s %.2f\\n"" , ""SystemLoad:"" , c_condor_load + c_owner_load , ""CondorLoad:"" , c_condor_load , ""OwnerLoad:"" , c_owner_load )"	838:3:22360:22543	517872	0	True				
ANR	517937	CallExpression	"dprintf ( D_FULLDEBUG , ""%s %.2f  %s %.2f  %s %.2f\\n"" , ""SystemLoad:"" , c_condor_load + c_owner_load , ""CondorLoad:"" , c_condor_load , ""OwnerLoad:"" , c_owner_load )"		517872	0					
ANR	517938	Callee	dprintf		517872	0					
ANR	517939	Identifier	dprintf		517872	0					
ANR	517940	ArgumentList	D_FULLDEBUG		517872	1					
ANR	517941	Argument	D_FULLDEBUG		517872	0					
ANR	517942	Identifier	D_FULLDEBUG		517872	0					
ANR	517943	Argument	"""%s %.2f  %s %.2f  %s %.2f\\n"""		517872	1					
ANR	517944	PrimaryExpression	"""%s %.2f  %s %.2f  %s %.2f\\n"""		517872	0					
ANR	517945	Argument	"""SystemLoad:"""		517872	2					
ANR	517946	PrimaryExpression	"""SystemLoad:"""		517872	0					
ANR	517947	Argument	c_condor_load + c_owner_load		517872	3					
ANR	517948	AdditiveExpression	c_condor_load + c_owner_load		517872	0		+			
ANR	517949	Identifier	c_condor_load		517872	0					
ANR	517950	Identifier	c_owner_load		517872	1					
ANR	517951	Argument	"""CondorLoad:"""		517872	4					
ANR	517952	PrimaryExpression	"""CondorLoad:"""		517872	0					
ANR	517953	Argument	c_condor_load		517872	5					
ANR	517954	Identifier	c_condor_load		517872	0					
ANR	517955	Argument	"""OwnerLoad:"""		517872	6					
ANR	517956	PrimaryExpression	"""OwnerLoad:"""		517872	0					
ANR	517957	Argument	c_owner_load		517872	7					
ANR	517958	Identifier	c_owner_load		517872	0					
ANR	517959	IfStatement	if ( DebugFlags & D_KEYBOARD )		517872	1					
ANR	517960	Condition	DebugFlags & D_KEYBOARD	844:6:22555:22577	517872	0	True				
ANR	517961	BitAndExpression	DebugFlags & D_KEYBOARD		517872	0		&			
ANR	517962	Identifier	DebugFlags		517872	0					
ANR	517963	Identifier	D_KEYBOARD		517872	1					
ANR	517964	CompoundStatement		21:32:606:606	517872	1					
ANR	517965	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Idle time: %s %-8d %s %d\\n"" , ""Keyboard:"" , ( int ) c_idle , ""Console:"" , ( int ) c_console_idle )"	845:3:22586:22719	517872	0	True				
ANR	517966	CallExpression	"dprintf ( D_FULLDEBUG , ""Idle time: %s %-8d %s %d\\n"" , ""Keyboard:"" , ( int ) c_idle , ""Console:"" , ( int ) c_console_idle )"		517872	0					
ANR	517967	Callee	dprintf		517872	0					
ANR	517968	Identifier	dprintf		517872	0					
ANR	517969	ArgumentList	D_FULLDEBUG		517872	1					
ANR	517970	Argument	D_FULLDEBUG		517872	0					
ANR	517971	Identifier	D_FULLDEBUG		517872	0					
ANR	517972	Argument	"""Idle time: %s %-8d %s %d\\n"""		517872	1					
ANR	517973	PrimaryExpression	"""Idle time: %s %-8d %s %d\\n"""		517872	0					
ANR	517974	Argument	"""Keyboard:"""		517872	2					
ANR	517975	PrimaryExpression	"""Keyboard:"""		517872	0					
ANR	517976	Argument	( int ) c_idle		517872	3					
ANR	517977	CastExpression	( int ) c_idle		517872	0					
ANR	517978	CastTarget	int		517872	0					
ANR	517979	Identifier	c_idle		517872	1					
ANR	517980	Argument	"""Console:"""		517872	4					
ANR	517981	PrimaryExpression	"""Console:"""		517872	0					
ANR	517982	Argument	( int ) c_console_idle		517872	5					
ANR	517983	CastExpression	( int ) c_console_idle		517872	0					
ANR	517984	CastTarget	int		517872	0					
ANR	517985	Identifier	c_console_idle		517872	1					
ANR	517986	ReturnType	void		517872	1					
ANR	517987	Identifier	CpuAttributes :: display		517872	2					
ANR	517988	ParameterList	amask_t how_much		517872	3					
ANR	517989	Parameter	amask_t how_much	823:24:21955:21970	517872	0	True				
ANR	517990	ParameterType	amask_t		517872	0					
ANR	517991	Identifier	how_much		517872	1					
ANR	517992	CFGEntryNode	ENTRY		517872		True				
ANR	517993	CFGExitNode	EXIT		517872		True				
ANR	517994	Symbol	how_much		517872						
ANR	517995	Symbol	D_KEYBOARD		517872						
ANR	517996	Symbol	c_condor_load		517872						
ANR	517997	Symbol	IS_UPDATE		517872						
ANR	517998	Symbol	D_LOAD		517872						
ANR	517999	Symbol	DebugFlags		517872						
ANR	518000	Symbol	D_FULLDEBUG		517872						
ANR	518001	Symbol	c_idle		517872						
ANR	518002	Symbol	c_owner_load		517872						
ANR	518003	Symbol	c_console_idle		517872						
ANR	518004	Function	CpuAttributes :: show_totals	854:0:22733:23428							
ANR	518005	FunctionDef	CpuAttributes :: show_totals (int dflag)		518004	0					
ANR	518006	CompoundStatement		856:0:22778:23428	518004	0					
ANR	518007	Statement	::	857:1:22781:22782	518004	0	True				
ANR	518008	ExpressionStatement	"dprintf ( dflag | D_NOHEADER , ""Cpus: %d"" , c_num_cpus )"	857:3:22783:22840	518004	1	True				
ANR	518009	CallExpression	"dprintf ( dflag | D_NOHEADER , ""Cpus: %d"" , c_num_cpus )"		518004	0					
ANR	518010	Callee	dprintf		518004	0					
ANR	518011	Identifier	dprintf		518004	0					
ANR	518012	ArgumentList	dflag | D_NOHEADER		518004	1					
ANR	518013	Argument	dflag | D_NOHEADER		518004	0					
ANR	518014	InclusiveOrExpression	dflag | D_NOHEADER		518004	0		|			
ANR	518015	Identifier	dflag		518004	0					
ANR	518016	Identifier	D_NOHEADER		518004	1					
ANR	518017	Argument	"""Cpus: %d"""		518004	1					
ANR	518018	PrimaryExpression	"""Cpus: %d"""		518004	0					
ANR	518019	Argument	c_num_cpus		518004	2					
ANR	518020	Identifier	c_num_cpus		518004	0					
ANR	518021	IfStatement	if ( c_phys_mem == AUTO_MEM )		518004	2					
ANR	518022	Condition	c_phys_mem == AUTO_MEM	860:5:22848:22869	518004	0	True				
ANR	518023	EqualityExpression	c_phys_mem == AUTO_MEM		518004	0		==			
ANR	518024	Identifier	c_phys_mem		518004	0					
ANR	518025	Identifier	AUTO_MEM		518004	1					
ANR	518026	CompoundStatement		5:30:94:94	518004	1					
ANR	518027	Statement	::	861:2:22877:22878	518004	0	True				
ANR	518028	ExpressionStatement	"dprintf ( dflag | D_NOHEADER , "", Memory: auto"" )"	861:4:22879:22934	518004	1	True				
ANR	518029	CallExpression	"dprintf ( dflag | D_NOHEADER , "", Memory: auto"" )"		518004	0					
ANR	518030	Callee	dprintf		518004	0					
ANR	518031	Identifier	dprintf		518004	0					
ANR	518032	ArgumentList	dflag | D_NOHEADER		518004	1					
ANR	518033	Argument	dflag | D_NOHEADER		518004	0					
ANR	518034	InclusiveOrExpression	dflag | D_NOHEADER		518004	0		|			
ANR	518035	Identifier	dflag		518004	0					
ANR	518036	Identifier	D_NOHEADER		518004	1					
ANR	518037	Argument	""", Memory: auto"""		518004	1					
ANR	518038	PrimaryExpression	""", Memory: auto"""		518004	0					
ANR	518039	ElseStatement	else		518004	0					
ANR	518040	CompoundStatement		9:6:166:166	518004	0					
ANR	518041	Statement	::	865:2:22949:22950	518004	0	True				
ANR	518042	ExpressionStatement	"dprintf ( dflag | D_NOHEADER , "", Memory: %d"" , c_phys_mem )"	865:4:22951:23015	518004	1	True				
ANR	518043	CallExpression	"dprintf ( dflag | D_NOHEADER , "", Memory: %d"" , c_phys_mem )"		518004	0					
ANR	518044	Callee	dprintf		518004	0					
ANR	518045	Identifier	dprintf		518004	0					
ANR	518046	ArgumentList	dflag | D_NOHEADER		518004	1					
ANR	518047	Argument	dflag | D_NOHEADER		518004	0					
ANR	518048	InclusiveOrExpression	dflag | D_NOHEADER		518004	0		|			
ANR	518049	Identifier	dflag		518004	0					
ANR	518050	Identifier	D_NOHEADER		518004	1					
ANR	518051	Argument	""", Memory: %d"""		518004	1					
ANR	518052	PrimaryExpression	""", Memory: %d"""		518004	0					
ANR	518053	Argument	c_phys_mem		518004	2					
ANR	518054	Identifier	c_phys_mem		518004	0					
ANR	518055	IfStatement	if ( IS_AUTO_SHARE ( c_virt_mem_fraction ) )		518004	3					
ANR	518056	Condition	IS_AUTO_SHARE ( c_virt_mem_fraction )	870:5:23028:23061	518004	0	True				
ANR	518057	CallExpression	IS_AUTO_SHARE ( c_virt_mem_fraction )		518004	0					
ANR	518058	Callee	IS_AUTO_SHARE		518004	0					
ANR	518059	Identifier	IS_AUTO_SHARE		518004	0					
ANR	518060	ArgumentList	c_virt_mem_fraction		518004	1					
ANR	518061	Argument	c_virt_mem_fraction		518004	0					
ANR	518062	Identifier	c_virt_mem_fraction		518004	0					
ANR	518063	CompoundStatement		15:42:286:286	518004	1					
ANR	518064	Statement	::	871:2:23069:23070	518004	0	True				
ANR	518065	ExpressionStatement	"dprintf ( dflag | D_NOHEADER , "", Swap: auto"" )"	871:4:23071:23124	518004	1	True				
ANR	518066	CallExpression	"dprintf ( dflag | D_NOHEADER , "", Swap: auto"" )"		518004	0					
ANR	518067	Callee	dprintf		518004	0					
ANR	518068	Identifier	dprintf		518004	0					
ANR	518069	ArgumentList	dflag | D_NOHEADER		518004	1					
ANR	518070	Argument	dflag | D_NOHEADER		518004	0					
ANR	518071	InclusiveOrExpression	dflag | D_NOHEADER		518004	0		|			
ANR	518072	Identifier	dflag		518004	0					
ANR	518073	Identifier	D_NOHEADER		518004	1					
ANR	518074	Argument	""", Swap: auto"""		518004	1					
ANR	518075	PrimaryExpression	""", Swap: auto"""		518004	0					
ANR	518076	ElseStatement	else		518004	0					
ANR	518077	CompoundStatement		19:6:356:356	518004	0					
ANR	518078	Statement	::	875:2:23139:23140	518004	0	True				
ANR	518079	ExpressionStatement	"dprintf ( dflag | D_NOHEADER , "", Swap: %.2f%%"" , 100 * c_virt_mem_fraction )"	875:4:23141:23221	518004	1	True				
ANR	518080	CallExpression	"dprintf ( dflag | D_NOHEADER , "", Swap: %.2f%%"" , 100 * c_virt_mem_fraction )"		518004	0					
ANR	518081	Callee	dprintf		518004	0					
ANR	518082	Identifier	dprintf		518004	0					
ANR	518083	ArgumentList	dflag | D_NOHEADER		518004	1					
ANR	518084	Argument	dflag | D_NOHEADER		518004	0					
ANR	518085	InclusiveOrExpression	dflag | D_NOHEADER		518004	0		|			
ANR	518086	Identifier	dflag		518004	0					
ANR	518087	Identifier	D_NOHEADER		518004	1					
ANR	518088	Argument	""", Swap: %.2f%%"""		518004	1					
ANR	518089	PrimaryExpression	""", Swap: %.2f%%"""		518004	0					
ANR	518090	Argument	100 * c_virt_mem_fraction		518004	2					
ANR	518091	MultiplicativeExpression	100 * c_virt_mem_fraction		518004	0		*			
ANR	518092	PrimaryExpression	100		518004	0					
ANR	518093	Identifier	c_virt_mem_fraction		518004	1					
ANR	518094	IfStatement	if ( IS_AUTO_SHARE ( c_disk_fraction ) )		518004	4					
ANR	518095	Condition	IS_AUTO_SHARE ( c_disk_fraction )	880:5:23234:23263	518004	0	True				
ANR	518096	CallExpression	IS_AUTO_SHARE ( c_disk_fraction )		518004	0					
ANR	518097	Callee	IS_AUTO_SHARE		518004	0					
ANR	518098	Identifier	IS_AUTO_SHARE		518004	0					
ANR	518099	ArgumentList	c_disk_fraction		518004	1					
ANR	518100	Argument	c_disk_fraction		518004	0					
ANR	518101	Identifier	c_disk_fraction		518004	0					
ANR	518102	CompoundStatement		25:38:488:488	518004	1					
ANR	518103	Statement	::	881:2:23271:23272	518004	0	True				
ANR	518104	ExpressionStatement	"dprintf ( dflag | D_NOHEADER , "", Disk: auto\\n"" )"	881:4:23273:23328	518004	1	True				
ANR	518105	CallExpression	"dprintf ( dflag | D_NOHEADER , "", Disk: auto\\n"" )"		518004	0					
ANR	518106	Callee	dprintf		518004	0					
ANR	518107	Identifier	dprintf		518004	0					
ANR	518108	ArgumentList	dflag | D_NOHEADER		518004	1					
ANR	518109	Argument	dflag | D_NOHEADER		518004	0					
ANR	518110	InclusiveOrExpression	dflag | D_NOHEADER		518004	0		|			
ANR	518111	Identifier	dflag		518004	0					
ANR	518112	Identifier	D_NOHEADER		518004	1					
ANR	518113	Argument	""", Disk: auto\\n"""		518004	1					
ANR	518114	PrimaryExpression	""", Disk: auto\\n"""		518004	0					
ANR	518115	ElseStatement	else		518004	0					
ANR	518116	CompoundStatement		29:6:560:560	518004	0					
ANR	518117	Statement	::	885:2:23343:23344	518004	0	True				
ANR	518118	ExpressionStatement	"dprintf ( dflag | D_NOHEADER , "", Disk: %.2f%%\\n"" , 100 * c_disk_fraction )"	885:4:23345:23423	518004	1	True				
ANR	518119	CallExpression	"dprintf ( dflag | D_NOHEADER , "", Disk: %.2f%%\\n"" , 100 * c_disk_fraction )"		518004	0					
ANR	518120	Callee	dprintf		518004	0					
ANR	518121	Identifier	dprintf		518004	0					
ANR	518122	ArgumentList	dflag | D_NOHEADER		518004	1					
ANR	518123	Argument	dflag | D_NOHEADER		518004	0					
ANR	518124	InclusiveOrExpression	dflag | D_NOHEADER		518004	0		|			
ANR	518125	Identifier	dflag		518004	0					
ANR	518126	Identifier	D_NOHEADER		518004	1					
ANR	518127	Argument	""", Disk: %.2f%%\\n"""		518004	1					
ANR	518128	PrimaryExpression	""", Disk: %.2f%%\\n"""		518004	0					
ANR	518129	Argument	100 * c_disk_fraction		518004	2					
ANR	518130	MultiplicativeExpression	100 * c_disk_fraction		518004	0		*			
ANR	518131	PrimaryExpression	100		518004	0					
ANR	518132	Identifier	c_disk_fraction		518004	1					
ANR	518133	ReturnType	void		518004	1					
ANR	518134	Identifier	CpuAttributes :: show_totals		518004	2					
ANR	518135	ParameterList	int dflag		518004	3					
ANR	518136	Parameter	int dflag	855:28:22766:22774	518004	0	True				
ANR	518137	ParameterType	int		518004	0					
ANR	518138	Identifier	dflag		518004	1					
ANR	518139	CFGEntryNode	ENTRY		518004		True				
ANR	518140	CFGExitNode	EXIT		518004		True				
ANR	518141	Symbol	dflag		518004						
ANR	518142	Symbol	IS_AUTO_SHARE		518004						
ANR	518143	Symbol	c_phys_mem		518004						
ANR	518144	Symbol	c_virt_mem_fraction		518004						
ANR	518145	Symbol	c_disk_fraction		518004						
ANR	518146	Symbol	D_NOHEADER		518004						
ANR	518147	Symbol	c_num_cpus		518004						
ANR	518148	Symbol	AUTO_MEM		518004						
ANR	518149	Function	CpuAttributes :: dprintf	891:0:23432:23591							
ANR	518150	FunctionDef	"CpuAttributes :: dprintf (int flags , const char * fmt)"		518149	0					
ANR	518151	CompoundStatement		893:0:23495:23591	518149	0					
ANR	518152	IdentifierDeclStatement	va_list args ;	894:1:23498:23510	518149	0	True				
ANR	518153	IdentifierDecl	args		518149	0					
ANR	518154	IdentifierDeclType	va_list		518149	0					
ANR	518155	Identifier	args		518149	1					
ANR	518156	ExpressionStatement	"va_start ( args , fmt )"	895:1:23513:23534	518149	1	True				
ANR	518157	CallExpression	"va_start ( args , fmt )"		518149	0					
ANR	518158	Callee	va_start		518149	0					
ANR	518159	Identifier	va_start		518149	0					
ANR	518160	ArgumentList	args		518149	1					
ANR	518161	Argument	args		518149	0					
ANR	518162	Identifier	args		518149	0					
ANR	518163	Argument	fmt		518149	1					
ANR	518164	Identifier	fmt		518149	0					
ANR	518165	ExpressionStatement	"rip -> dprintf_va ( flags , fmt , args )"	896:1:23537:23572	518149	2	True				
ANR	518166	CallExpression	"rip -> dprintf_va ( flags , fmt , args )"		518149	0					
ANR	518167	Callee	rip -> dprintf_va		518149	0					
ANR	518168	PtrMemberAccess	rip -> dprintf_va		518149	0					
ANR	518169	Identifier	rip		518149	0					
ANR	518170	Identifier	dprintf_va		518149	1					
ANR	518171	ArgumentList	flags		518149	1					
ANR	518172	Argument	flags		518149	0					
ANR	518173	Identifier	flags		518149	0					
ANR	518174	Argument	fmt		518149	1					
ANR	518175	Identifier	fmt		518149	0					
ANR	518176	Argument	args		518149	2					
ANR	518177	Identifier	args		518149	0					
ANR	518178	ExpressionStatement	va_end ( args )	897:1:23575:23589	518149	3	True				
ANR	518179	CallExpression	va_end ( args )		518149	0					
ANR	518180	Callee	va_end		518149	0					
ANR	518181	Identifier	va_end		518149	0					
ANR	518182	ArgumentList	args		518149	1					
ANR	518183	Argument	args		518149	0					
ANR	518184	Identifier	args		518149	0					
ANR	518185	ReturnType	void		518149	1					
ANR	518186	Identifier	CpuAttributes :: dprintf		518149	2					
ANR	518187	ParameterList	"int flags , const char * fmt"		518149	3					
ANR	518188	Parameter	int flags	892:24:23461:23469	518149	0	True				
ANR	518189	ParameterType	int		518149	0					
ANR	518190	Identifier	flags		518149	1					
ANR	518191	Parameter	const char * fmt	892:35:23472:23486	518149	1	True				
ANR	518192	ParameterType	const char *		518149	0					
ANR	518193	Identifier	fmt		518149	1					
ANR	518194	CFGEntryNode	ENTRY		518149		True				
ANR	518195	CFGExitNode	EXIT		518149		True				
ANR	518196	Symbol	args		518149						
ANR	518197	Symbol	flags		518149						
ANR	518198	Symbol	rip		518149						
ANR	518199	Symbol	fmt		518149						
ANR	518200	Function	operator +=	902:15:23625:24055							
ANR	518201	FunctionDef	operator += (CpuAttributes & rhs)		518200	0					
ANR	518202	CompoundStatement		903:0:23658:24055	518200	0					
ANR	518203	ExpressionStatement	c_num_cpus += rhs . c_num_cpus	904:1:23661:23689	518200	0	True				
ANR	518204	AssignmentExpression	c_num_cpus += rhs . c_num_cpus		518200	0		+=			
ANR	518205	Identifier	c_num_cpus		518200	0					
ANR	518206	MemberAccess	rhs . c_num_cpus		518200	1					
ANR	518207	Identifier	rhs		518200	0					
ANR	518208	Identifier	c_num_cpus		518200	1					
ANR	518209	ExpressionStatement	c_phys_mem += rhs . c_phys_mem	905:1:23692:23720	518200	1	True				
ANR	518210	AssignmentExpression	c_phys_mem += rhs . c_phys_mem		518200	0		+=			
ANR	518211	Identifier	c_phys_mem		518200	0					
ANR	518212	MemberAccess	rhs . c_phys_mem		518200	1					
ANR	518213	Identifier	rhs		518200	0					
ANR	518214	Identifier	c_phys_mem		518200	1					
ANR	518215	IfStatement	if ( ! IS_AUTO_SHARE ( rhs . c_virt_mem_fraction ) && ! IS_AUTO_SHARE ( c_virt_mem_fraction ) )		518200	2					
ANR	518216	Condition	! IS_AUTO_SHARE ( rhs . c_virt_mem_fraction ) && ! IS_AUTO_SHARE ( c_virt_mem_fraction )	906:5:23727:23806	518200	0	True				
ANR	518217	AndExpression	! IS_AUTO_SHARE ( rhs . c_virt_mem_fraction ) && ! IS_AUTO_SHARE ( c_virt_mem_fraction )		518200	0		&&			
ANR	518218	UnaryOperationExpression	! IS_AUTO_SHARE ( rhs . c_virt_mem_fraction )		518200	0					
ANR	518219	UnaryOperator	!		518200	0					
ANR	518220	CallExpression	IS_AUTO_SHARE ( rhs . c_virt_mem_fraction )		518200	1					
ANR	518221	Callee	IS_AUTO_SHARE		518200	0					
ANR	518222	Identifier	IS_AUTO_SHARE		518200	0					
ANR	518223	ArgumentList	rhs . c_virt_mem_fraction		518200	1					
ANR	518224	Argument	rhs . c_virt_mem_fraction		518200	0					
ANR	518225	MemberAccess	rhs . c_virt_mem_fraction		518200	0					
ANR	518226	Identifier	rhs		518200	0					
ANR	518227	Identifier	c_virt_mem_fraction		518200	1					
ANR	518228	UnaryOperationExpression	! IS_AUTO_SHARE ( c_virt_mem_fraction )		518200	1					
ANR	518229	UnaryOperator	!		518200	0					
ANR	518230	CallExpression	IS_AUTO_SHARE ( c_virt_mem_fraction )		518200	1					
ANR	518231	Callee	IS_AUTO_SHARE		518200	0					
ANR	518232	Identifier	IS_AUTO_SHARE		518200	0					
ANR	518233	ArgumentList	c_virt_mem_fraction		518200	1					
ANR	518234	Argument	c_virt_mem_fraction		518200	0					
ANR	518235	Identifier	c_virt_mem_fraction		518200	0					
ANR	518236	CompoundStatement		5:39:150:150	518200	1					
ANR	518237	ExpressionStatement	c_virt_mem_fraction += rhs . c_virt_mem_fraction	908:2:23813:23859	518200	0	True				
ANR	518238	AssignmentExpression	c_virt_mem_fraction += rhs . c_virt_mem_fraction		518200	0		+=			
ANR	518239	Identifier	c_virt_mem_fraction		518200	0					
ANR	518240	MemberAccess	rhs . c_virt_mem_fraction		518200	1					
ANR	518241	Identifier	rhs		518200	0					
ANR	518242	Identifier	c_virt_mem_fraction		518200	1					
ANR	518243	IfStatement	if ( ! IS_AUTO_SHARE ( rhs . c_disk_fraction ) && ! IS_AUTO_SHARE ( c_disk_fraction ) )		518200	3					
ANR	518244	Condition	! IS_AUTO_SHARE ( rhs . c_disk_fraction ) && ! IS_AUTO_SHARE ( c_disk_fraction )	910:5:23869:23940	518200	0	True				
ANR	518245	AndExpression	! IS_AUTO_SHARE ( rhs . c_disk_fraction ) && ! IS_AUTO_SHARE ( c_disk_fraction )		518200	0		&&			
ANR	518246	UnaryOperationExpression	! IS_AUTO_SHARE ( rhs . c_disk_fraction )		518200	0					
ANR	518247	UnaryOperator	!		518200	0					
ANR	518248	CallExpression	IS_AUTO_SHARE ( rhs . c_disk_fraction )		518200	1					
ANR	518249	Callee	IS_AUTO_SHARE		518200	0					
ANR	518250	Identifier	IS_AUTO_SHARE		518200	0					
ANR	518251	ArgumentList	rhs . c_disk_fraction		518200	1					
ANR	518252	Argument	rhs . c_disk_fraction		518200	0					
ANR	518253	MemberAccess	rhs . c_disk_fraction		518200	0					
ANR	518254	Identifier	rhs		518200	0					
ANR	518255	Identifier	c_disk_fraction		518200	1					
ANR	518256	UnaryOperationExpression	! IS_AUTO_SHARE ( c_disk_fraction )		518200	1					
ANR	518257	UnaryOperator	!		518200	0					
ANR	518258	CallExpression	IS_AUTO_SHARE ( c_disk_fraction )		518200	1					
ANR	518259	Callee	IS_AUTO_SHARE		518200	0					
ANR	518260	Identifier	IS_AUTO_SHARE		518200	0					
ANR	518261	ArgumentList	c_disk_fraction		518200	1					
ANR	518262	Argument	c_disk_fraction		518200	0					
ANR	518263	Identifier	c_disk_fraction		518200	0					
ANR	518264	CompoundStatement		9:35:284:284	518200	1					
ANR	518265	ExpressionStatement	c_disk_fraction += rhs . c_disk_fraction	912:2:23947:23985	518200	0	True				
ANR	518266	AssignmentExpression	c_disk_fraction += rhs . c_disk_fraction		518200	0		+=			
ANR	518267	Identifier	c_disk_fraction		518200	0					
ANR	518268	MemberAccess	rhs . c_disk_fraction		518200	1					
ANR	518269	Identifier	rhs		518200	0					
ANR	518270	Identifier	c_disk_fraction		518200	1					
ANR	518271	ExpressionStatement	compute ( A_TIMEOUT | A_UPDATE )	915:1:23992:24023	518200	4	True				
ANR	518272	CallExpression	compute ( A_TIMEOUT | A_UPDATE )		518200	0					
ANR	518273	Callee	compute		518200	0					
ANR	518274	Identifier	compute		518200	0					
ANR	518275	ArgumentList	A_TIMEOUT | A_UPDATE		518200	1					
ANR	518276	Argument	A_TIMEOUT | A_UPDATE		518200	0					
ANR	518277	InclusiveOrExpression	A_TIMEOUT | A_UPDATE		518200	0		|			
ANR	518278	Identifier	A_TIMEOUT		518200	0					
ANR	518279	Identifier	A_UPDATE		518200	1					
ANR	518280	ReturnStatement	return * this ;	917:1:24041:24053	518200	5	True				
ANR	518281	UnaryOperationExpression	* this		518200	0					
ANR	518282	UnaryOperator	*		518200	0					
ANR	518283	Identifier	this		518200	1					
ANR	518284	Identifier	operator +=		518200	1					
ANR	518285	ParameterList	CpuAttributes & rhs		518200	2					
ANR	518286	Parameter	CpuAttributes & rhs	902:27:23637:23654	518200	0	True				
ANR	518287	ParameterType	CpuAttributes &		518200	0					
ANR	518288	Identifier	rhs		518200	1					
ANR	518289	CFGEntryNode	ENTRY		518200		True				
ANR	518290	CFGExitNode	EXIT		518200		True				
ANR	518291	Symbol	A_UPDATE		518200						
ANR	518292	Symbol	this		518200						
ANR	518293	Symbol	A_TIMEOUT		518200						
ANR	518294	Symbol	rhs . c_disk_fraction		518200						
ANR	518295	Symbol	c_virt_mem_fraction		518200						
ANR	518296	Symbol	rhs . c_virt_mem_fraction		518200						
ANR	518297	Symbol	c_num_cpus		518200						
ANR	518298	Symbol	* this		518200						
ANR	518299	Symbol	IS_AUTO_SHARE		518200						
ANR	518300	Symbol	rhs . c_phys_mem		518200						
ANR	518301	Symbol	c_phys_mem		518200						
ANR	518302	Symbol	rhs . c_num_cpus		518200						
ANR	518303	Symbol	rhs		518200						
ANR	518304	Symbol	c_disk_fraction		518200						
ANR	518305	Function	operator -=	921:15:24088:24518							
ANR	518306	FunctionDef	operator -= (CpuAttributes & rhs)		518305	0					
ANR	518307	CompoundStatement		922:0:24121:24518	518305	0					
ANR	518308	ExpressionStatement	c_num_cpus -= rhs . c_num_cpus	923:1:24124:24152	518305	0	True				
ANR	518309	AssignmentExpression	c_num_cpus -= rhs . c_num_cpus		518305	0		-=			
ANR	518310	Identifier	c_num_cpus		518305	0					
ANR	518311	MemberAccess	rhs . c_num_cpus		518305	1					
ANR	518312	Identifier	rhs		518305	0					
ANR	518313	Identifier	c_num_cpus		518305	1					
ANR	518314	ExpressionStatement	c_phys_mem -= rhs . c_phys_mem	924:1:24155:24183	518305	1	True				
ANR	518315	AssignmentExpression	c_phys_mem -= rhs . c_phys_mem		518305	0		-=			
ANR	518316	Identifier	c_phys_mem		518305	0					
ANR	518317	MemberAccess	rhs . c_phys_mem		518305	1					
ANR	518318	Identifier	rhs		518305	0					
ANR	518319	Identifier	c_phys_mem		518305	1					
ANR	518320	IfStatement	if ( ! IS_AUTO_SHARE ( rhs . c_virt_mem_fraction ) && ! IS_AUTO_SHARE ( c_virt_mem_fraction ) )		518305	2					
ANR	518321	Condition	! IS_AUTO_SHARE ( rhs . c_virt_mem_fraction ) && ! IS_AUTO_SHARE ( c_virt_mem_fraction )	925:5:24190:24269	518305	0	True				
ANR	518322	AndExpression	! IS_AUTO_SHARE ( rhs . c_virt_mem_fraction ) && ! IS_AUTO_SHARE ( c_virt_mem_fraction )		518305	0		&&			
ANR	518323	UnaryOperationExpression	! IS_AUTO_SHARE ( rhs . c_virt_mem_fraction )		518305	0					
ANR	518324	UnaryOperator	!		518305	0					
ANR	518325	CallExpression	IS_AUTO_SHARE ( rhs . c_virt_mem_fraction )		518305	1					
ANR	518326	Callee	IS_AUTO_SHARE		518305	0					
ANR	518327	Identifier	IS_AUTO_SHARE		518305	0					
ANR	518328	ArgumentList	rhs . c_virt_mem_fraction		518305	1					
ANR	518329	Argument	rhs . c_virt_mem_fraction		518305	0					
ANR	518330	MemberAccess	rhs . c_virt_mem_fraction		518305	0					
ANR	518331	Identifier	rhs		518305	0					
ANR	518332	Identifier	c_virt_mem_fraction		518305	1					
ANR	518333	UnaryOperationExpression	! IS_AUTO_SHARE ( c_virt_mem_fraction )		518305	1					
ANR	518334	UnaryOperator	!		518305	0					
ANR	518335	CallExpression	IS_AUTO_SHARE ( c_virt_mem_fraction )		518305	1					
ANR	518336	Callee	IS_AUTO_SHARE		518305	0					
ANR	518337	Identifier	IS_AUTO_SHARE		518305	0					
ANR	518338	ArgumentList	c_virt_mem_fraction		518305	1					
ANR	518339	Argument	c_virt_mem_fraction		518305	0					
ANR	518340	Identifier	c_virt_mem_fraction		518305	0					
ANR	518341	CompoundStatement		5:39:150:150	518305	1					
ANR	518342	ExpressionStatement	c_virt_mem_fraction -= rhs . c_virt_mem_fraction	927:2:24276:24322	518305	0	True				
ANR	518343	AssignmentExpression	c_virt_mem_fraction -= rhs . c_virt_mem_fraction		518305	0		-=			
ANR	518344	Identifier	c_virt_mem_fraction		518305	0					
ANR	518345	MemberAccess	rhs . c_virt_mem_fraction		518305	1					
ANR	518346	Identifier	rhs		518305	0					
ANR	518347	Identifier	c_virt_mem_fraction		518305	1					
ANR	518348	IfStatement	if ( ! IS_AUTO_SHARE ( rhs . c_disk_fraction ) && ! IS_AUTO_SHARE ( c_disk_fraction ) )		518305	3					
ANR	518349	Condition	! IS_AUTO_SHARE ( rhs . c_disk_fraction ) && ! IS_AUTO_SHARE ( c_disk_fraction )	929:5:24332:24403	518305	0	True				
ANR	518350	AndExpression	! IS_AUTO_SHARE ( rhs . c_disk_fraction ) && ! IS_AUTO_SHARE ( c_disk_fraction )		518305	0		&&			
ANR	518351	UnaryOperationExpression	! IS_AUTO_SHARE ( rhs . c_disk_fraction )		518305	0					
ANR	518352	UnaryOperator	!		518305	0					
ANR	518353	CallExpression	IS_AUTO_SHARE ( rhs . c_disk_fraction )		518305	1					
ANR	518354	Callee	IS_AUTO_SHARE		518305	0					
ANR	518355	Identifier	IS_AUTO_SHARE		518305	0					
ANR	518356	ArgumentList	rhs . c_disk_fraction		518305	1					
ANR	518357	Argument	rhs . c_disk_fraction		518305	0					
ANR	518358	MemberAccess	rhs . c_disk_fraction		518305	0					
ANR	518359	Identifier	rhs		518305	0					
ANR	518360	Identifier	c_disk_fraction		518305	1					
ANR	518361	UnaryOperationExpression	! IS_AUTO_SHARE ( c_disk_fraction )		518305	1					
ANR	518362	UnaryOperator	!		518305	0					
ANR	518363	CallExpression	IS_AUTO_SHARE ( c_disk_fraction )		518305	1					
ANR	518364	Callee	IS_AUTO_SHARE		518305	0					
ANR	518365	Identifier	IS_AUTO_SHARE		518305	0					
ANR	518366	ArgumentList	c_disk_fraction		518305	1					
ANR	518367	Argument	c_disk_fraction		518305	0					
ANR	518368	Identifier	c_disk_fraction		518305	0					
ANR	518369	CompoundStatement		9:35:284:284	518305	1					
ANR	518370	ExpressionStatement	c_disk_fraction -= rhs . c_disk_fraction	931:2:24410:24448	518305	0	True				
ANR	518371	AssignmentExpression	c_disk_fraction -= rhs . c_disk_fraction		518305	0		-=			
ANR	518372	Identifier	c_disk_fraction		518305	0					
ANR	518373	MemberAccess	rhs . c_disk_fraction		518305	1					
ANR	518374	Identifier	rhs		518305	0					
ANR	518375	Identifier	c_disk_fraction		518305	1					
ANR	518376	ExpressionStatement	compute ( A_TIMEOUT | A_UPDATE )	934:1:24455:24486	518305	4	True				
ANR	518377	CallExpression	compute ( A_TIMEOUT | A_UPDATE )		518305	0					
ANR	518378	Callee	compute		518305	0					
ANR	518379	Identifier	compute		518305	0					
ANR	518380	ArgumentList	A_TIMEOUT | A_UPDATE		518305	1					
ANR	518381	Argument	A_TIMEOUT | A_UPDATE		518305	0					
ANR	518382	InclusiveOrExpression	A_TIMEOUT | A_UPDATE		518305	0		|			
ANR	518383	Identifier	A_TIMEOUT		518305	0					
ANR	518384	Identifier	A_UPDATE		518305	1					
ANR	518385	ReturnStatement	return * this ;	936:1:24504:24516	518305	5	True				
ANR	518386	UnaryOperationExpression	* this		518305	0					
ANR	518387	UnaryOperator	*		518305	0					
ANR	518388	Identifier	this		518305	1					
ANR	518389	Identifier	operator -=		518305	1					
ANR	518390	ParameterList	CpuAttributes & rhs		518305	2					
ANR	518391	Parameter	CpuAttributes & rhs	921:27:24100:24117	518305	0	True				
ANR	518392	ParameterType	CpuAttributes &		518305	0					
ANR	518393	Identifier	rhs		518305	1					
ANR	518394	CFGEntryNode	ENTRY		518305		True				
ANR	518395	CFGExitNode	EXIT		518305		True				
ANR	518396	Symbol	A_UPDATE		518305						
ANR	518397	Symbol	this		518305						
ANR	518398	Symbol	A_TIMEOUT		518305						
ANR	518399	Symbol	rhs . c_disk_fraction		518305						
ANR	518400	Symbol	c_virt_mem_fraction		518305						
ANR	518401	Symbol	rhs . c_virt_mem_fraction		518305						
ANR	518402	Symbol	c_num_cpus		518305						
ANR	518403	Symbol	* this		518305						
ANR	518404	Symbol	IS_AUTO_SHARE		518305						
ANR	518405	Symbol	rhs . c_phys_mem		518305						
ANR	518406	Symbol	c_phys_mem		518305						
ANR	518407	Symbol	rhs . c_num_cpus		518305						
ANR	518408	Symbol	rhs		518305						
ANR	518409	Symbol	c_disk_fraction		518305						
ANR	518410	Function	AvailAttributes :: AvailAttributes	939:0:24521:24786							
ANR	518411	FunctionDef	AvailAttributes :: AvailAttributes (MachAttributes * map)		518410	0					
ANR	518412	CompoundStatement		941:0:24638:24786	518410	0					
ANR	518413	ExpressionStatement	a_num_cpus = map -> num_cpus ( )	942:1:24641:24669	518410	0	True				
ANR	518414	AssignmentExpression	a_num_cpus = map -> num_cpus ( )		518410	0		=			
ANR	518415	Identifier	a_num_cpus		518410	0					
ANR	518416	CallExpression	map -> num_cpus ( )		518410	1					
ANR	518417	Callee	map -> num_cpus		518410	0					
ANR	518418	PtrMemberAccess	map -> num_cpus		518410	0					
ANR	518419	Identifier	map		518410	0					
ANR	518420	Identifier	num_cpus		518410	1					
ANR	518421	ArgumentList			518410	1					
ANR	518422	ExpressionStatement	a_phys_mem = map -> phys_mem ( )	943:1:24672:24700	518410	1	True				
ANR	518423	AssignmentExpression	a_phys_mem = map -> phys_mem ( )		518410	0		=			
ANR	518424	Identifier	a_phys_mem		518410	0					
ANR	518425	CallExpression	map -> phys_mem ( )		518410	1					
ANR	518426	Callee	map -> phys_mem		518410	0					
ANR	518427	PtrMemberAccess	map -> phys_mem		518410	0					
ANR	518428	Identifier	map		518410	0					
ANR	518429	Identifier	phys_mem		518410	1					
ANR	518430	ArgumentList			518410	1					
ANR	518431	ExpressionStatement	a_phys_mem_auto_count = 0	944:1:24703:24728	518410	2	True				
ANR	518432	AssignmentExpression	a_phys_mem_auto_count = 0		518410	0		=			
ANR	518433	Identifier	a_phys_mem_auto_count		518410	0					
ANR	518434	PrimaryExpression	0		518410	1					
ANR	518435	ExpressionStatement	a_virt_mem_fraction = 1.0	945:1:24731:24756	518410	3	True				
ANR	518436	AssignmentExpression	a_virt_mem_fraction = 1.0		518410	0		=			
ANR	518437	Identifier	a_virt_mem_fraction		518410	0					
ANR	518438	PrimaryExpression	1.0		518410	1					
ANR	518439	ExpressionStatement	a_virt_mem_auto_count = 0	946:1:24759:24784	518410	4	True				
ANR	518440	AssignmentExpression	a_virt_mem_auto_count = 0		518410	0		=			
ANR	518441	Identifier	a_virt_mem_auto_count		518410	0					
ANR	518442	PrimaryExpression	0		518410	1					
ANR	518443	Identifier	AvailAttributes :: AvailAttributes		518410	1					
ANR	518444	ParameterList	MachAttributes * map		518410	2					
ANR	518445	Parameter	MachAttributes * map	939:34:24555:24573	518410	0	True				
ANR	518446	ParameterType	MachAttributes *		518410	0					
ANR	518447	Identifier	map		518410	1					
ANR	518448	CFGEntryNode	ENTRY		518410		True				
ANR	518449	CFGExitNode	EXIT		518410		True				
ANR	518450	Symbol	a_phys_mem_auto_count		518410						
ANR	518451	Symbol	map -> num_cpus		518410						
ANR	518452	Symbol	a_virt_mem_fraction		518410						
ANR	518453	Symbol	* map		518410						
ANR	518454	Symbol	a_phys_mem		518410						
ANR	518455	Symbol	map -> phys_mem		518410						
ANR	518456	Symbol	map		518410						
ANR	518457	Symbol	a_virt_mem_auto_count		518410						
ANR	518458	Symbol	a_num_cpus		518410						
ANR	518459	Function	AvailAttributes :: GetAvailDiskPartition	949:0:24789:25199							
ANR	518460	FunctionDef	AvailAttributes :: GetAvailDiskPartition (MyString const & execute_partition_id)		518459	0					
ANR	518461	CompoundStatement		951:0:24887:25199	518459	0					
ANR	518462	IdentifierDeclStatement	AvailDiskPartition * a = NULL ;	952:1:24890:24918	518459	0	True				
ANR	518463	IdentifierDecl	* a = NULL		518459	0					
ANR	518464	IdentifierDeclType	AvailDiskPartition *		518459	0					
ANR	518465	Identifier	a		518459	1					
ANR	518466	AssignmentExpression	* a = NULL		518459	2		=			
ANR	518467	Identifier	NULL		518459	0					
ANR	518468	Identifier	NULL		518459	1					
ANR	518469	IfStatement	"if ( m_execute_partitions . lookup ( execute_partition_id , a ) < 0 )"		518459	1					
ANR	518470	Condition	"m_execute_partitions . lookup ( execute_partition_id , a ) < 0"	953:5:24925:24979	518459	0	True				
ANR	518471	RelationalExpression	"m_execute_partitions . lookup ( execute_partition_id , a ) < 0"		518459	0		<			
ANR	518472	CallExpression	"m_execute_partitions . lookup ( execute_partition_id , a )"		518459	0					
ANR	518473	Callee	m_execute_partitions . lookup		518459	0					
ANR	518474	MemberAccess	m_execute_partitions . lookup		518459	0					
ANR	518475	Identifier	m_execute_partitions		518459	0					
ANR	518476	Identifier	lookup		518459	1					
ANR	518477	ArgumentList	execute_partition_id		518459	1					
ANR	518478	Argument	execute_partition_id		518459	0					
ANR	518479	Identifier	execute_partition_id		518459	0					
ANR	518480	Argument	a		518459	1					
ANR	518481	Identifier	a		518459	0					
ANR	518482	PrimaryExpression	0		518459	1					
ANR	518483	CompoundStatement		3:63:95:95	518459	1					
ANR	518484	ExpressionStatement	"m_execute_partitions . insert ( execute_partition_id , AvailDiskPartition ( ) )"	955:2:25041:25114	518459	0	True				
ANR	518485	CallExpression	"m_execute_partitions . insert ( execute_partition_id , AvailDiskPartition ( ) )"		518459	0					
ANR	518486	Callee	m_execute_partitions . insert		518459	0					
ANR	518487	MemberAccess	m_execute_partitions . insert		518459	0					
ANR	518488	Identifier	m_execute_partitions		518459	0					
ANR	518489	Identifier	insert		518459	1					
ANR	518490	ArgumentList	execute_partition_id		518459	1					
ANR	518491	Argument	execute_partition_id		518459	0					
ANR	518492	Identifier	execute_partition_id		518459	0					
ANR	518493	Argument	AvailDiskPartition ( )		518459	1					
ANR	518494	CallExpression	AvailDiskPartition ( )		518459	0					
ANR	518495	Callee	AvailDiskPartition		518459	0					
ANR	518496	Identifier	AvailDiskPartition		518459	0					
ANR	518497	ArgumentList			518459	1					
ANR	518498	ExpressionStatement	"m_execute_partitions . lookup ( execute_partition_id , a )"	956:2:25118:25169	518459	1	True				
ANR	518499	CallExpression	"m_execute_partitions . lookup ( execute_partition_id , a )"		518459	0					
ANR	518500	Callee	m_execute_partitions . lookup		518459	0					
ANR	518501	MemberAccess	m_execute_partitions . lookup		518459	0					
ANR	518502	Identifier	m_execute_partitions		518459	0					
ANR	518503	Identifier	lookup		518459	1					
ANR	518504	ArgumentList	execute_partition_id		518459	1					
ANR	518505	Argument	execute_partition_id		518459	0					
ANR	518506	Identifier	execute_partition_id		518459	0					
ANR	518507	Argument	a		518459	1					
ANR	518508	Identifier	a		518459	0					
ANR	518509	ExpressionStatement	ASSERT ( a )	957:2:25173:25182	518459	2	True				
ANR	518510	CallExpression	ASSERT ( a )		518459	0					
ANR	518511	Callee	ASSERT		518459	0					
ANR	518512	Identifier	ASSERT		518459	0					
ANR	518513	ArgumentList	a		518459	1					
ANR	518514	Argument	a		518459	0					
ANR	518515	Identifier	a		518459	0					
ANR	518516	ReturnStatement	return * a ;	959:1:25188:25197	518459	2	True				
ANR	518517	UnaryOperationExpression	* a		518459	0					
ANR	518518	UnaryOperator	*		518459	0					
ANR	518519	Identifier	a		518459	1					
ANR	518520	ReturnType	AvailDiskPartition &		518459	1					
ANR	518521	Identifier	AvailAttributes :: GetAvailDiskPartition		518459	2					
ANR	518522	ParameterList	MyString const & execute_partition_id		518459	3					
ANR	518523	Parameter	MyString const & execute_partition_id	950:39:24849:24884	518459	0	True				
ANR	518524	ParameterType	MyString const &		518459	0					
ANR	518525	Identifier	execute_partition_id		518459	1					
ANR	518526	CFGEntryNode	ENTRY		518459		True				
ANR	518527	CFGExitNode	EXIT		518459		True				
ANR	518528	Symbol	a		518459						
ANR	518529	Symbol	AvailDiskPartition		518459						
ANR	518530	Symbol	NULL		518459						
ANR	518531	Symbol	execute_partition_id		518459						
ANR	518532	Symbol	m_execute_partitions		518459						
ANR	518533	Symbol	m_execute_partitions . lookup		518459						
ANR	518534	Symbol	* a		518459						
ANR	518535	Function	AvailAttributes :: decrement	962:0:25202:26348							
ANR	518536	FunctionDef	AvailAttributes :: decrement (CpuAttributes * cap)		518535	0					
ANR	518537	CompoundStatement		964:0:25257:26348	518535	0					
ANR	518538	IdentifierDeclStatement	"int new_cpus , new_phys_mem ;"	965:1:25260:25286	518535	0	True				
ANR	518539	IdentifierDecl	new_cpus		518535	0					
ANR	518540	IdentifierDeclType	int		518535	0					
ANR	518541	Identifier	new_cpus		518535	1					
ANR	518542	IdentifierDecl	new_phys_mem		518535	1					
ANR	518543	IdentifierDeclType	int		518535	0					
ANR	518544	Identifier	new_phys_mem		518535	1					
ANR	518545	IdentifierDeclStatement	"float new_virt_mem , new_disk , floor = - 0.000001f ;"	966:1:25289:25337	518535	1	True				
ANR	518546	IdentifierDecl	new_virt_mem		518535	0					
ANR	518547	IdentifierDeclType	float		518535	0					
ANR	518548	Identifier	new_virt_mem		518535	1					
ANR	518549	IdentifierDecl	new_disk		518535	1					
ANR	518550	IdentifierDeclType	float		518535	0					
ANR	518551	Identifier	new_disk		518535	1					
ANR	518552	IdentifierDecl	floor = - 0.000001f		518535	2					
ANR	518553	IdentifierDeclType	float		518535	0					
ANR	518554	Identifier	floor		518535	1					
ANR	518555	AssignmentExpression	floor = - 0.000001f		518535	2		=			
ANR	518556	Identifier	floor		518535	0					
ANR	518557	UnaryOperationExpression	- 0.000001f		518535	1					
ANR	518558	UnaryOperator	-		518535	0					
ANR	518559	PrimaryExpression	0.000001f		518535	1					
ANR	518560	ExpressionStatement	new_cpus = a_num_cpus - cap -> c_num_cpus	968:1:25342:25381	518535	2	True				
ANR	518561	AssignmentExpression	new_cpus = a_num_cpus - cap -> c_num_cpus		518535	0		=			
ANR	518562	Identifier	new_cpus		518535	0					
ANR	518563	AdditiveExpression	a_num_cpus - cap -> c_num_cpus		518535	1		-			
ANR	518564	Identifier	a_num_cpus		518535	0					
ANR	518565	PtrMemberAccess	cap -> c_num_cpus		518535	1					
ANR	518566	Identifier	cap		518535	0					
ANR	518567	Identifier	c_num_cpus		518535	1					
ANR	518568	ExpressionStatement	new_phys_mem = a_phys_mem	970:1:25385:25410	518535	3	True				
ANR	518569	AssignmentExpression	new_phys_mem = a_phys_mem		518535	0		=			
ANR	518570	Identifier	new_phys_mem		518535	0					
ANR	518571	Identifier	a_phys_mem		518535	1					
ANR	518572	IfStatement	if ( cap -> c_phys_mem != AUTO_MEM )		518535	4					
ANR	518573	Condition	cap -> c_phys_mem != AUTO_MEM	971:5:25417:25443	518535	0	True				
ANR	518574	EqualityExpression	cap -> c_phys_mem != AUTO_MEM		518535	0		!=			
ANR	518575	PtrMemberAccess	cap -> c_phys_mem		518535	0					
ANR	518576	Identifier	cap		518535	0					
ANR	518577	Identifier	c_phys_mem		518535	1					
ANR	518578	Identifier	AUTO_MEM		518535	1					
ANR	518579	CompoundStatement		8:35:189:189	518535	1					
ANR	518580	ExpressionStatement	new_phys_mem -= cap -> c_phys_mem	972:2:25451:25482	518535	0	True				
ANR	518581	AssignmentExpression	new_phys_mem -= cap -> c_phys_mem		518535	0		-=			
ANR	518582	Identifier	new_phys_mem		518535	0					
ANR	518583	PtrMemberAccess	cap -> c_phys_mem		518535	1					
ANR	518584	Identifier	cap		518535	0					
ANR	518585	Identifier	c_phys_mem		518535	1					
ANR	518586	ExpressionStatement	new_virt_mem = a_virt_mem_fraction	975:1:25489:25523	518535	5	True				
ANR	518587	AssignmentExpression	new_virt_mem = a_virt_mem_fraction		518535	0		=			
ANR	518588	Identifier	new_virt_mem		518535	0					
ANR	518589	Identifier	a_virt_mem_fraction		518535	1					
ANR	518590	IfStatement	if ( ! IS_AUTO_SHARE ( cap -> c_virt_mem_fraction ) )		518535	6					
ANR	518591	Condition	! IS_AUTO_SHARE ( cap -> c_virt_mem_fraction )	976:5:25530:25569	518535	0	True				
ANR	518592	UnaryOperationExpression	! IS_AUTO_SHARE ( cap -> c_virt_mem_fraction )		518535	0					
ANR	518593	UnaryOperator	!		518535	0					
ANR	518594	CallExpression	IS_AUTO_SHARE ( cap -> c_virt_mem_fraction )		518535	1					
ANR	518595	Callee	IS_AUTO_SHARE		518535	0					
ANR	518596	Identifier	IS_AUTO_SHARE		518535	0					
ANR	518597	ArgumentList	cap -> c_virt_mem_fraction		518535	1					
ANR	518598	Argument	cap -> c_virt_mem_fraction		518535	0					
ANR	518599	PtrMemberAccess	cap -> c_virt_mem_fraction		518535	0					
ANR	518600	Identifier	cap		518535	0					
ANR	518601	Identifier	c_virt_mem_fraction		518535	1					
ANR	518602	CompoundStatement		13:48:315:315	518535	1					
ANR	518603	ExpressionStatement	new_virt_mem -= cap -> c_virt_mem_fraction	977:2:25577:25617	518535	0	True				
ANR	518604	AssignmentExpression	new_virt_mem -= cap -> c_virt_mem_fraction		518535	0		-=			
ANR	518605	Identifier	new_virt_mem		518535	0					
ANR	518606	PtrMemberAccess	cap -> c_virt_mem_fraction		518535	1					
ANR	518607	Identifier	cap		518535	0					
ANR	518608	Identifier	c_virt_mem_fraction		518535	1					
ANR	518609	IdentifierDeclStatement	AvailDiskPartition & partition = GetAvailDiskPartition ( cap -> executePartitionID ( ) ) ;	980:1:25624:25706	518535	7	True				
ANR	518610	IdentifierDecl	& partition = GetAvailDiskPartition ( cap -> executePartitionID ( ) )		518535	0					
ANR	518611	IdentifierDeclType	AvailDiskPartition &		518535	0					
ANR	518612	Identifier	partition		518535	1					
ANR	518613	AssignmentExpression	& partition = GetAvailDiskPartition ( cap -> executePartitionID ( ) )		518535	2		=			
ANR	518614	Identifier	partition		518535	0					
ANR	518615	CallExpression	GetAvailDiskPartition ( cap -> executePartitionID ( ) )		518535	1					
ANR	518616	Callee	GetAvailDiskPartition		518535	0					
ANR	518617	Identifier	GetAvailDiskPartition		518535	0					
ANR	518618	ArgumentList	cap -> executePartitionID ( )		518535	1					
ANR	518619	Argument	cap -> executePartitionID ( )		518535	0					
ANR	518620	CallExpression	cap -> executePartitionID ( )		518535	0					
ANR	518621	Callee	cap -> executePartitionID		518535	0					
ANR	518622	PtrMemberAccess	cap -> executePartitionID		518535	0					
ANR	518623	Identifier	cap		518535	0					
ANR	518624	Identifier	executePartitionID		518535	1					
ANR	518625	ArgumentList			518535	1					
ANR	518626	ExpressionStatement	new_disk = partition . m_disk_fraction	981:1:25709:25745	518535	8	True				
ANR	518627	AssignmentExpression	new_disk = partition . m_disk_fraction		518535	0		=			
ANR	518628	Identifier	new_disk		518535	0					
ANR	518629	MemberAccess	partition . m_disk_fraction		518535	1					
ANR	518630	Identifier	partition		518535	0					
ANR	518631	Identifier	m_disk_fraction		518535	1					
ANR	518632	IfStatement	if ( ! IS_AUTO_SHARE ( cap -> c_disk_fraction ) )		518535	9					
ANR	518633	Condition	! IS_AUTO_SHARE ( cap -> c_disk_fraction )	982:5:25752:25787	518535	0	True				
ANR	518634	UnaryOperationExpression	! IS_AUTO_SHARE ( cap -> c_disk_fraction )		518535	0					
ANR	518635	UnaryOperator	!		518535	0					
ANR	518636	CallExpression	IS_AUTO_SHARE ( cap -> c_disk_fraction )		518535	1					
ANR	518637	Callee	IS_AUTO_SHARE		518535	0					
ANR	518638	Identifier	IS_AUTO_SHARE		518535	0					
ANR	518639	ArgumentList	cap -> c_disk_fraction		518535	1					
ANR	518640	Argument	cap -> c_disk_fraction		518535	0					
ANR	518641	PtrMemberAccess	cap -> c_disk_fraction		518535	0					
ANR	518642	Identifier	cap		518535	0					
ANR	518643	Identifier	c_disk_fraction		518535	1					
ANR	518644	CompoundStatement		19:44:533:533	518535	1					
ANR	518645	ExpressionStatement	new_disk -= cap -> c_disk_fraction	983:2:25795:25827	518535	0	True				
ANR	518646	AssignmentExpression	new_disk -= cap -> c_disk_fraction		518535	0		-=			
ANR	518647	Identifier	new_disk		518535	0					
ANR	518648	PtrMemberAccess	cap -> c_disk_fraction		518535	1					
ANR	518649	Identifier	cap		518535	0					
ANR	518650	Identifier	c_disk_fraction		518535	1					
ANR	518651	IfStatement	if ( new_cpus < floor || new_phys_mem < floor || new_virt_mem < floor || new_disk < floor )		518535	10					
ANR	518652	Condition	new_cpus < floor || new_phys_mem < floor || new_virt_mem < floor || new_disk < floor	986:5:25838:25924	518535	0	True				
ANR	518653	OrExpression	new_cpus < floor || new_phys_mem < floor || new_virt_mem < floor || new_disk < floor		518535	0		||			
ANR	518654	RelationalExpression	new_cpus < floor		518535	0		<			
ANR	518655	Identifier	new_cpus		518535	0					
ANR	518656	Identifier	floor		518535	1					
ANR	518657	OrExpression	new_phys_mem < floor || new_virt_mem < floor || new_disk < floor		518535	1		||			
ANR	518658	RelationalExpression	new_phys_mem < floor		518535	0		<			
ANR	518659	Identifier	new_phys_mem		518535	0					
ANR	518660	Identifier	floor		518535	1					
ANR	518661	OrExpression	new_virt_mem < floor || new_disk < floor		518535	1		||			
ANR	518662	RelationalExpression	new_virt_mem < floor		518535	0		<			
ANR	518663	Identifier	new_virt_mem		518535	0					
ANR	518664	Identifier	floor		518535	1					
ANR	518665	RelationalExpression	new_disk < floor		518535	1		<			
ANR	518666	Identifier	new_disk		518535	0					
ANR	518667	Identifier	floor		518535	1					
ANR	518668	CompoundStatement		24:45:670:670	518535	1					
ANR	518669	ReturnStatement	return false ;	988:2:25932:25944	518535	0	True				
ANR	518670	Identifier	false		518535	0					
ANR	518671	ElseStatement	else		518535	0					
ANR	518672	CompoundStatement		26:8:696:696	518535	0					
ANR	518673	ExpressionStatement	a_num_cpus = new_cpus	990:2:25958:25979	518535	0	True				
ANR	518674	AssignmentExpression	a_num_cpus = new_cpus		518535	0		=			
ANR	518675	Identifier	a_num_cpus		518535	0					
ANR	518676	Identifier	new_cpus		518535	1					
ANR	518677	ExpressionStatement	a_phys_mem = new_phys_mem	992:2:25984:26009	518535	1	True				
ANR	518678	AssignmentExpression	a_phys_mem = new_phys_mem		518535	0		=			
ANR	518679	Identifier	a_phys_mem		518535	0					
ANR	518680	Identifier	new_phys_mem		518535	1					
ANR	518681	IfStatement	if ( cap -> c_phys_mem == AUTO_MEM )		518535	2					
ANR	518682	Condition	cap -> c_phys_mem == AUTO_MEM	993:6:26017:26043	518535	0	True				
ANR	518683	EqualityExpression	cap -> c_phys_mem == AUTO_MEM		518535	0		==			
ANR	518684	PtrMemberAccess	cap -> c_phys_mem		518535	0					
ANR	518685	Identifier	cap		518535	0					
ANR	518686	Identifier	c_phys_mem		518535	1					
ANR	518687	Identifier	AUTO_MEM		518535	1					
ANR	518688	CompoundStatement		30:36:789:789	518535	1					
ANR	518689	ExpressionStatement	a_phys_mem_auto_count += 1	994:3:26052:26078	518535	0	True				
ANR	518690	AssignmentExpression	a_phys_mem_auto_count += 1		518535	0		+=			
ANR	518691	Identifier	a_phys_mem_auto_count		518535	0					
ANR	518692	PrimaryExpression	1		518535	1					
ANR	518693	ExpressionStatement	a_virt_mem_fraction = new_virt_mem	997:2:26087:26121	518535	3	True				
ANR	518694	AssignmentExpression	a_virt_mem_fraction = new_virt_mem		518535	0		=			
ANR	518695	Identifier	a_virt_mem_fraction		518535	0					
ANR	518696	Identifier	new_virt_mem		518535	1					
ANR	518697	IfStatement	if ( IS_AUTO_SHARE ( cap -> c_virt_mem_fraction ) )		518535	4					
ANR	518698	Condition	IS_AUTO_SHARE ( cap -> c_virt_mem_fraction )	998:6:26129:26167	518535	0	True				
ANR	518699	CallExpression	IS_AUTO_SHARE ( cap -> c_virt_mem_fraction )		518535	0					
ANR	518700	Callee	IS_AUTO_SHARE		518535	0					
ANR	518701	Identifier	IS_AUTO_SHARE		518535	0					
ANR	518702	ArgumentList	cap -> c_virt_mem_fraction		518535	1					
ANR	518703	Argument	cap -> c_virt_mem_fraction		518535	0					
ANR	518704	PtrMemberAccess	cap -> c_virt_mem_fraction		518535	0					
ANR	518705	Identifier	cap		518535	0					
ANR	518706	Identifier	c_virt_mem_fraction		518535	1					
ANR	518707	CompoundStatement		35:48:913:913	518535	1					
ANR	518708	ExpressionStatement	a_virt_mem_auto_count += 1	999:3:26176:26202	518535	0	True				
ANR	518709	AssignmentExpression	a_virt_mem_auto_count += 1		518535	0		+=			
ANR	518710	Identifier	a_virt_mem_auto_count		518535	0					
ANR	518711	PrimaryExpression	1		518535	1					
ANR	518712	ExpressionStatement	partition . m_disk_fraction = new_disk	1002:2:26211:26247	518535	5	True				
ANR	518713	AssignmentExpression	partition . m_disk_fraction = new_disk		518535	0		=			
ANR	518714	MemberAccess	partition . m_disk_fraction		518535	0					
ANR	518715	Identifier	partition		518535	0					
ANR	518716	Identifier	m_disk_fraction		518535	1					
ANR	518717	Identifier	new_disk		518535	1					
ANR	518718	IfStatement	if ( IS_AUTO_SHARE ( cap -> c_disk_fraction ) )		518535	6					
ANR	518719	Condition	IS_AUTO_SHARE ( cap -> c_disk_fraction )	1003:6:26255:26289	518535	0	True				
ANR	518720	CallExpression	IS_AUTO_SHARE ( cap -> c_disk_fraction )		518535	0					
ANR	518721	Callee	IS_AUTO_SHARE		518535	0					
ANR	518722	Identifier	IS_AUTO_SHARE		518535	0					
ANR	518723	ArgumentList	cap -> c_disk_fraction		518535	1					
ANR	518724	Argument	cap -> c_disk_fraction		518535	0					
ANR	518725	PtrMemberAccess	cap -> c_disk_fraction		518535	0					
ANR	518726	Identifier	cap		518535	0					
ANR	518727	Identifier	c_disk_fraction		518535	1					
ANR	518728	CompoundStatement		40:44:1035:1035	518535	1					
ANR	518729	ExpressionStatement	partition . m_auto_count += 1	1004:3:26298:26325	518535	0	True				
ANR	518730	AssignmentExpression	partition . m_auto_count += 1		518535	0		+=			
ANR	518731	MemberAccess	partition . m_auto_count		518535	0					
ANR	518732	Identifier	partition		518535	0					
ANR	518733	Identifier	m_auto_count		518535	1					
ANR	518734	PrimaryExpression	1		518535	1					
ANR	518735	ReturnStatement	return true ;	1007:1:26335:26346	518535	11	True				
ANR	518736	Identifier	true		518535	0					
ANR	518737	ReturnType	bool		518535	1					
ANR	518738	Identifier	AvailAttributes :: decrement		518535	2					
ANR	518739	ParameterList	CpuAttributes * cap		518535	3					
ANR	518740	Parameter	CpuAttributes * cap	963:28:25235:25252	518535	0	True				
ANR	518741	ParameterType	CpuAttributes *		518535	0					
ANR	518742	Identifier	cap		518535	1					
ANR	518743	CFGEntryNode	ENTRY		518535		True				
ANR	518744	CFGExitNode	EXIT		518535		True				
ANR	518745	Symbol	partition . m_auto_count		518535						
ANR	518746	Symbol	cap -> c_num_cpus		518535						
ANR	518747	Symbol	* cap		518535						
ANR	518748	Symbol	a_virt_mem_fraction		518535						
ANR	518749	Symbol	a_phys_mem		518535						
ANR	518750	Symbol	cap -> c_virt_mem_fraction		518535						
ANR	518751	Symbol	new_disk		518535						
ANR	518752	Symbol	cap		518535						
ANR	518753	Symbol	partition		518535						
ANR	518754	Symbol	IS_AUTO_SHARE		518535						
ANR	518755	Symbol	cap -> c_disk_fraction		518535						
ANR	518756	Symbol	new_cpus		518535						
ANR	518757	Symbol	floor		518535						
ANR	518758	Symbol	GetAvailDiskPartition		518535						
ANR	518759	Symbol	a_num_cpus		518535						
ANR	518760	Symbol	AUTO_MEM		518535						
ANR	518761	Symbol	cap -> c_phys_mem		518535						
ANR	518762	Symbol	new_virt_mem		518535						
ANR	518763	Symbol	false		518535						
ANR	518764	Symbol	cap -> executePartitionID		518535						
ANR	518765	Symbol	partition . m_disk_fraction		518535						
ANR	518766	Symbol	a_phys_mem_auto_count		518535						
ANR	518767	Symbol	new_phys_mem		518535						
ANR	518768	Symbol	true		518535						
ANR	518769	Symbol	a_virt_mem_auto_count		518535						
ANR	518770	Function	AvailAttributes :: computeAutoShares	1010:0:26351:27212							
ANR	518771	FunctionDef	AvailAttributes :: computeAutoShares (CpuAttributes * cap)		518770	0					
ANR	518772	CompoundStatement		1012:0:26413:27212	518770	0					
ANR	518773	IfStatement	if ( cap -> c_phys_mem == AUTO_MEM )		518770	0					
ANR	518774	Condition	cap -> c_phys_mem == AUTO_MEM	1013:5:26420:26446	518770	0	True				
ANR	518775	EqualityExpression	cap -> c_phys_mem == AUTO_MEM		518770	0		==			
ANR	518776	PtrMemberAccess	cap -> c_phys_mem		518770	0					
ANR	518777	Identifier	cap		518770	0					
ANR	518778	Identifier	c_phys_mem		518770	1					
ANR	518779	Identifier	AUTO_MEM		518770	1					
ANR	518780	CompoundStatement		4:2:79:129	518770	1					
ANR	518781	ExpressionStatement	ASSERT ( a_phys_mem_auto_count > 0 )	1014:2:26454:26489	518770	0	True				
ANR	518782	CallExpression	ASSERT ( a_phys_mem_auto_count > 0 )		518770	0					
ANR	518783	Callee	ASSERT		518770	0					
ANR	518784	Identifier	ASSERT		518770	0					
ANR	518785	ArgumentList	a_phys_mem_auto_count > 0		518770	1					
ANR	518786	Argument	a_phys_mem_auto_count > 0		518770	0					
ANR	518787	RelationalExpression	a_phys_mem_auto_count > 0		518770	0		>			
ANR	518788	Identifier	a_phys_mem_auto_count		518770	0					
ANR	518789	PrimaryExpression	0		518770	1					
ANR	518790	IdentifierDeclStatement	int new_value = a_phys_mem / a_phys_mem_auto_count ;	1015:2:26493:26543	518770	1	True				
ANR	518791	IdentifierDecl	new_value = a_phys_mem / a_phys_mem_auto_count		518770	0					
ANR	518792	IdentifierDeclType	int		518770	0					
ANR	518793	Identifier	new_value		518770	1					
ANR	518794	AssignmentExpression	new_value = a_phys_mem / a_phys_mem_auto_count		518770	2		=			
ANR	518795	Identifier	new_value		518770	0					
ANR	518796	MultiplicativeExpression	a_phys_mem / a_phys_mem_auto_count		518770	1		/			
ANR	518797	Identifier	a_phys_mem		518770	0					
ANR	518798	Identifier	a_phys_mem_auto_count		518770	1					
ANR	518799	IfStatement	if ( new_value < 1 )		518770	2					
ANR	518800	Condition	new_value < 1	1016:6:26551:26563	518770	0	True				
ANR	518801	RelationalExpression	new_value < 1		518770	0		<			
ANR	518802	Identifier	new_value		518770	0					
ANR	518803	PrimaryExpression	1		518770	1					
ANR	518804	CompoundStatement		5:22:153:153	518770	1					
ANR	518805	ReturnStatement	return false ;	1017:3:26572:26584	518770	0	True				
ANR	518806	Identifier	false		518770	0					
ANR	518807	ExpressionStatement	cap -> c_phys_mem = new_value	1019:2:26592:26619	518770	3	True				
ANR	518808	AssignmentExpression	cap -> c_phys_mem = new_value		518770	0		=			
ANR	518809	PtrMemberAccess	cap -> c_phys_mem		518770	0					
ANR	518810	Identifier	cap		518770	0					
ANR	518811	Identifier	c_phys_mem		518770	1					
ANR	518812	Identifier	new_value		518770	1					
ANR	518813	IfStatement	if ( IS_AUTO_SHARE ( cap -> c_virt_mem_fraction ) )		518770	1					
ANR	518814	Condition	IS_AUTO_SHARE ( cap -> c_virt_mem_fraction )	1022:5:26630:26668	518770	0	True				
ANR	518815	CallExpression	IS_AUTO_SHARE ( cap -> c_virt_mem_fraction )		518770	0					
ANR	518816	Callee	IS_AUTO_SHARE		518770	0					
ANR	518817	Identifier	IS_AUTO_SHARE		518770	0					
ANR	518818	ArgumentList	cap -> c_virt_mem_fraction		518770	1					
ANR	518819	Argument	cap -> c_virt_mem_fraction		518770	0					
ANR	518820	PtrMemberAccess	cap -> c_virt_mem_fraction		518770	0					
ANR	518821	Identifier	cap		518770	0					
ANR	518822	Identifier	c_virt_mem_fraction		518770	1					
ANR	518823	CompoundStatement		13:2:301:362	518770	1					
ANR	518824	ExpressionStatement	ASSERT ( a_virt_mem_auto_count > 0 )	1023:2:26676:26711	518770	0	True				
ANR	518825	CallExpression	ASSERT ( a_virt_mem_auto_count > 0 )		518770	0					
ANR	518826	Callee	ASSERT		518770	0					
ANR	518827	Identifier	ASSERT		518770	0					
ANR	518828	ArgumentList	a_virt_mem_auto_count > 0		518770	1					
ANR	518829	Argument	a_virt_mem_auto_count > 0		518770	0					
ANR	518830	RelationalExpression	a_virt_mem_auto_count > 0		518770	0		>			
ANR	518831	Identifier	a_virt_mem_auto_count		518770	0					
ANR	518832	PrimaryExpression	0		518770	1					
ANR	518833	IdentifierDeclStatement	float new_value = a_virt_mem_fraction / a_virt_mem_auto_count ;	1024:2:26715:26776	518770	1	True				
ANR	518834	IdentifierDecl	new_value = a_virt_mem_fraction / a_virt_mem_auto_count		518770	0					
ANR	518835	IdentifierDeclType	float		518770	0					
ANR	518836	Identifier	new_value		518770	1					
ANR	518837	AssignmentExpression	new_value = a_virt_mem_fraction / a_virt_mem_auto_count		518770	2		=			
ANR	518838	Identifier	new_value		518770	0					
ANR	518839	MultiplicativeExpression	a_virt_mem_fraction / a_virt_mem_auto_count		518770	1		/			
ANR	518840	Identifier	a_virt_mem_fraction		518770	0					
ANR	518841	Identifier	a_virt_mem_auto_count		518770	1					
ANR	518842	IfStatement	if ( new_value <= 0 )		518770	2					
ANR	518843	Condition	new_value <= 0	1025:6:26784:26797	518770	0	True				
ANR	518844	RelationalExpression	new_value <= 0		518770	0		<=			
ANR	518845	Identifier	new_value		518770	0					
ANR	518846	PrimaryExpression	0		518770	1					
ANR	518847	CompoundStatement		14:23:387:387	518770	1					
ANR	518848	ReturnStatement	return false ;	1026:3:26806:26818	518770	0	True				
ANR	518849	Identifier	false		518770	0					
ANR	518850	ExpressionStatement	cap -> c_virt_mem_fraction = new_value	1028:2:26826:26862	518770	3	True				
ANR	518851	AssignmentExpression	cap -> c_virt_mem_fraction = new_value		518770	0		=			
ANR	518852	PtrMemberAccess	cap -> c_virt_mem_fraction		518770	0					
ANR	518853	Identifier	cap		518770	0					
ANR	518854	Identifier	c_virt_mem_fraction		518770	1					
ANR	518855	Identifier	new_value		518770	1					
ANR	518856	IfStatement	if ( IS_AUTO_SHARE ( cap -> c_disk_fraction ) )		518770	2					
ANR	518857	Condition	IS_AUTO_SHARE ( cap -> c_disk_fraction )	1031:5:26873:26907	518770	0	True				
ANR	518858	CallExpression	IS_AUTO_SHARE ( cap -> c_disk_fraction )		518770	0					
ANR	518859	Callee	IS_AUTO_SHARE		518770	0					
ANR	518860	Identifier	IS_AUTO_SHARE		518770	0					
ANR	518861	ArgumentList	cap -> c_disk_fraction		518770	1					
ANR	518862	Argument	cap -> c_disk_fraction		518770	0					
ANR	518863	PtrMemberAccess	cap -> c_disk_fraction		518770	0					
ANR	518864	Identifier	cap		518770	0					
ANR	518865	Identifier	c_disk_fraction		518770	1					
ANR	518866	CompoundStatement		23:2:629:697	518770	1					
ANR	518867	IdentifierDeclStatement	AvailDiskPartition & partition = GetAvailDiskPartition ( cap -> c_execute_partition_id ) ;	1032:2:26915:26999	518770	0	True				
ANR	518868	IdentifierDecl	& partition = GetAvailDiskPartition ( cap -> c_execute_partition_id )		518770	0					
ANR	518869	IdentifierDeclType	AvailDiskPartition &		518770	0					
ANR	518870	Identifier	partition		518770	1					
ANR	518871	AssignmentExpression	& partition = GetAvailDiskPartition ( cap -> c_execute_partition_id )		518770	2		=			
ANR	518872	Identifier	partition		518770	0					
ANR	518873	CallExpression	GetAvailDiskPartition ( cap -> c_execute_partition_id )		518770	1					
ANR	518874	Callee	GetAvailDiskPartition		518770	0					
ANR	518875	Identifier	GetAvailDiskPartition		518770	0					
ANR	518876	ArgumentList	cap -> c_execute_partition_id		518770	1					
ANR	518877	Argument	cap -> c_execute_partition_id		518770	0					
ANR	518878	PtrMemberAccess	cap -> c_execute_partition_id		518770	0					
ANR	518879	Identifier	cap		518770	0					
ANR	518880	Identifier	c_execute_partition_id		518770	1					
ANR	518881	ExpressionStatement	ASSERT ( partition . m_auto_count > 0 )	1033:2:27003:27039	518770	1	True				
ANR	518882	CallExpression	ASSERT ( partition . m_auto_count > 0 )		518770	0					
ANR	518883	Callee	ASSERT		518770	0					
ANR	518884	Identifier	ASSERT		518770	0					
ANR	518885	ArgumentList	partition . m_auto_count > 0		518770	1					
ANR	518886	Argument	partition . m_auto_count > 0		518770	0					
ANR	518887	RelationalExpression	partition . m_auto_count > 0		518770	0		>			
ANR	518888	MemberAccess	partition . m_auto_count		518770	0					
ANR	518889	Identifier	partition		518770	0					
ANR	518890	Identifier	m_auto_count		518770	1					
ANR	518891	PrimaryExpression	0		518770	1					
ANR	518892	IdentifierDeclStatement	float new_value = partition . m_disk_fraction / partition . m_auto_count ;	1034:2:27043:27111	518770	2	True				
ANR	518893	IdentifierDecl	new_value = partition . m_disk_fraction / partition . m_auto_count		518770	0					
ANR	518894	IdentifierDeclType	float		518770	0					
ANR	518895	Identifier	new_value		518770	1					
ANR	518896	AssignmentExpression	new_value = partition . m_disk_fraction / partition . m_auto_count		518770	2		=			
ANR	518897	Identifier	new_value		518770	0					
ANR	518898	MultiplicativeExpression	partition . m_disk_fraction / partition . m_auto_count		518770	1		/			
ANR	518899	MemberAccess	partition . m_disk_fraction		518770	0					
ANR	518900	Identifier	partition		518770	0					
ANR	518901	Identifier	m_disk_fraction		518770	1					
ANR	518902	MemberAccess	partition . m_auto_count		518770	1					
ANR	518903	Identifier	partition		518770	0					
ANR	518904	Identifier	m_auto_count		518770	1					
ANR	518905	IfStatement	if ( new_value <= 0 )		518770	3					
ANR	518906	Condition	new_value <= 0	1035:6:27119:27132	518770	0	True				
ANR	518907	RelationalExpression	new_value <= 0		518770	0		<=			
ANR	518908	Identifier	new_value		518770	0					
ANR	518909	PrimaryExpression	0		518770	1					
ANR	518910	CompoundStatement		24:23:722:722	518770	1					
ANR	518911	ReturnStatement	return false ;	1036:3:27141:27153	518770	0	True				
ANR	518912	Identifier	false		518770	0					
ANR	518913	ExpressionStatement	cap -> c_disk_fraction = new_value	1038:2:27161:27193	518770	4	True				
ANR	518914	AssignmentExpression	cap -> c_disk_fraction = new_value		518770	0		=			
ANR	518915	PtrMemberAccess	cap -> c_disk_fraction		518770	0					
ANR	518916	Identifier	cap		518770	0					
ANR	518917	Identifier	c_disk_fraction		518770	1					
ANR	518918	Identifier	new_value		518770	1					
ANR	518919	ReturnStatement	return true ;	1040:1:27199:27210	518770	3	True				
ANR	518920	Identifier	true		518770	0					
ANR	518921	ReturnType	bool		518770	1					
ANR	518922	Identifier	AvailAttributes :: computeAutoShares		518770	2					
ANR	518923	ParameterList	CpuAttributes * cap		518770	3					
ANR	518924	Parameter	CpuAttributes * cap	1011:36:26392:26409	518770	0	True				
ANR	518925	ParameterType	CpuAttributes *		518770	0					
ANR	518926	Identifier	cap		518770	1					
ANR	518927	CFGEntryNode	ENTRY		518770		True				
ANR	518928	CFGExitNode	EXIT		518770		True				
ANR	518929	Symbol	cap -> c_phys_mem		518770						
ANR	518930	Symbol	partition . m_auto_count		518770						
ANR	518931	Symbol	* cap		518770						
ANR	518932	Symbol	cap -> c_execute_partition_id		518770						
ANR	518933	Symbol	a_virt_mem_fraction		518770						
ANR	518934	Symbol	a_phys_mem		518770						
ANR	518935	Symbol	false		518770						
ANR	518936	Symbol	cap -> c_virt_mem_fraction		518770						
ANR	518937	Symbol	partition . m_disk_fraction		518770						
ANR	518938	Symbol	cap		518770						
ANR	518939	Symbol	a_phys_mem_auto_count		518770						
ANR	518940	Symbol	partition		518770						
ANR	518941	Symbol	IS_AUTO_SHARE		518770						
ANR	518942	Symbol	cap -> c_disk_fraction		518770						
ANR	518943	Symbol	true		518770						
ANR	518944	Symbol	a_virt_mem_auto_count		518770						
ANR	518945	Symbol	GetAvailDiskPartition		518770						
ANR	518946	Symbol	new_value		518770						
ANR	518947	Symbol	AUTO_MEM		518770						
ANR	518948	Function	AvailAttributes :: show_totals	1044:0:27216:27553							
ANR	518949	FunctionDef	"AvailAttributes :: show_totals (int dflag , CpuAttributes * cap)"		518948	0					
ANR	518950	CompoundStatement		1046:0:27283:27553	518948	0					
ANR	518951	IdentifierDeclStatement	AvailDiskPartition & partition = GetAvailDiskPartition ( cap -> c_execute_partition_id ) ;	1047:1:27286:27370	518948	0	True				
ANR	518952	IdentifierDecl	& partition = GetAvailDiskPartition ( cap -> c_execute_partition_id )		518948	0					
ANR	518953	IdentifierDeclType	AvailDiskPartition &		518948	0					
ANR	518954	Identifier	partition		518948	1					
ANR	518955	AssignmentExpression	& partition = GetAvailDiskPartition ( cap -> c_execute_partition_id )		518948	2		=			
ANR	518956	Identifier	partition		518948	0					
ANR	518957	CallExpression	GetAvailDiskPartition ( cap -> c_execute_partition_id )		518948	1					
ANR	518958	Callee	GetAvailDiskPartition		518948	0					
ANR	518959	Identifier	GetAvailDiskPartition		518948	0					
ANR	518960	ArgumentList	cap -> c_execute_partition_id		518948	1					
ANR	518961	Argument	cap -> c_execute_partition_id		518948	0					
ANR	518962	PtrMemberAccess	cap -> c_execute_partition_id		518948	0					
ANR	518963	Identifier	cap		518948	0					
ANR	518964	Identifier	c_execute_partition_id		518948	1					
ANR	518965	Statement	::	1048:1:27373:27374	518948	1	True				
ANR	518966	ExpressionStatement	"dprintf ( dflag | D_NOHEADER , ""Cpus: %d, Memory: %d, Swap: %.2f%%, Disk: %.2f%%\\n"" , a_num_cpus , a_phys_mem , 100 * a_virt_mem_fraction , 100 * partition . m_disk_fraction )"	1048:3:27375:27551	518948	2	True				
ANR	518967	CallExpression	"dprintf ( dflag | D_NOHEADER , ""Cpus: %d, Memory: %d, Swap: %.2f%%, Disk: %.2f%%\\n"" , a_num_cpus , a_phys_mem , 100 * a_virt_mem_fraction , 100 * partition . m_disk_fraction )"		518948	0					
ANR	518968	Callee	dprintf		518948	0					
ANR	518969	Identifier	dprintf		518948	0					
ANR	518970	ArgumentList	dflag | D_NOHEADER		518948	1					
ANR	518971	Argument	dflag | D_NOHEADER		518948	0					
ANR	518972	InclusiveOrExpression	dflag | D_NOHEADER		518948	0		|			
ANR	518973	Identifier	dflag		518948	0					
ANR	518974	Identifier	D_NOHEADER		518948	1					
ANR	518975	Argument	"""Cpus: %d, Memory: %d, Swap: %.2f%%, Disk: %.2f%%\\n"""		518948	1					
ANR	518976	PrimaryExpression	"""Cpus: %d, Memory: %d, Swap: %.2f%%, Disk: %.2f%%\\n"""		518948	0					
ANR	518977	Argument	a_num_cpus		518948	2					
ANR	518978	Identifier	a_num_cpus		518948	0					
ANR	518979	Argument	a_phys_mem		518948	3					
ANR	518980	Identifier	a_phys_mem		518948	0					
ANR	518981	Argument	100 * a_virt_mem_fraction		518948	4					
ANR	518982	MultiplicativeExpression	100 * a_virt_mem_fraction		518948	0		*			
ANR	518983	PrimaryExpression	100		518948	0					
ANR	518984	Identifier	a_virt_mem_fraction		518948	1					
ANR	518985	Argument	100 * partition . m_disk_fraction		518948	5					
ANR	518986	MultiplicativeExpression	100 * partition . m_disk_fraction		518948	0		*			
ANR	518987	PrimaryExpression	100		518948	0					
ANR	518988	MemberAccess	partition . m_disk_fraction		518948	1					
ANR	518989	Identifier	partition		518948	0					
ANR	518990	Identifier	m_disk_fraction		518948	1					
ANR	518991	ReturnType	void		518948	1					
ANR	518992	Identifier	AvailAttributes :: show_totals		518948	2					
ANR	518993	ParameterList	"int dflag , CpuAttributes * cap"		518948	3					
ANR	518994	Parameter	int dflag	1045:30:27251:27259	518948	0	True				
ANR	518995	ParameterType	int		518948	0					
ANR	518996	Identifier	dflag		518948	1					
ANR	518997	Parameter	CpuAttributes * cap	1045:41:27262:27279	518948	1	True				
ANR	518998	ParameterType	CpuAttributes *		518948	0					
ANR	518999	Identifier	cap		518948	1					
ANR	519000	CFGEntryNode	ENTRY		518948		True				
ANR	519001	CFGExitNode	EXIT		518948		True				
ANR	519002	Symbol	partition . m_disk_fraction		518948						
ANR	519003	Symbol	dflag		518948						
ANR	519004	Symbol	cap		518948						
ANR	519005	Symbol	partition		518948						
ANR	519006	Symbol	* cap		518948						
ANR	519007	Symbol	cap -> c_execute_partition_id		518948						
ANR	519008	Symbol	a_virt_mem_fraction		518948						
ANR	519009	Symbol	a_phys_mem		518948						
ANR	519010	Symbol	GetAvailDiskPartition		518948						
ANR	519011	Symbol	D_NOHEADER		518948						
ANR	519012	Symbol	a_num_cpus		518948						
