command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	65006	File	data/converged/CVE-2011-4930_htcondor/AviaryCommon_StatusCodeType.cpp								
ANR	65007	Function	AviaryCommon :: StatusCodeType :: StatusCodeType	23:11:595:1045							
ANR	65008	FunctionDef	AviaryCommon :: StatusCodeType :: StatusCodeType ()		65007	0					
ANR	65009	CompoundStatement		24:8:650:1045	65007	0					
ANR	65010	ExpressionStatement	qname = NULL	27:12:674:686	65007	0	True				
ANR	65011	AssignmentExpression	qname = NULL		65007	0		=			
ANR	65012	Identifier	qname		65007	0					
ANR	65013	Identifier	NULL		65007	1					
ANR	65014	ExpressionStatement	property_StatusCodeType	29:20:717:740	65007	1	True				
ANR	65015	Identifier	property_StatusCodeType		65007	0					
ANR	65016	ExpressionStatement	isValidStatusCodeType = false	31:12:771:801	65007	2	True				
ANR	65017	AssignmentExpression	isValidStatusCodeType = false		65007	0		=			
ANR	65018	Identifier	isValidStatusCodeType		65007	0					
ANR	65019	Identifier	false		65007	1					
ANR	65020	ExpressionStatement	"qname = axutil_qname_create ( Environment :: getEnv ( ) , ""StatusCodeType"" , ""http://common.aviary.grid.redhat.com"" , NULL )"	33:18:830:1018	65007	3	True				
ANR	65021	AssignmentExpression	"qname = axutil_qname_create ( Environment :: getEnv ( ) , ""StatusCodeType"" , ""http://common.aviary.grid.redhat.com"" , NULL )"		65007	0		=			
ANR	65022	Identifier	qname		65007	0					
ANR	65023	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""StatusCodeType"" , ""http://common.aviary.grid.redhat.com"" , NULL )"		65007	1					
ANR	65024	Callee	axutil_qname_create		65007	0					
ANR	65025	Identifier	axutil_qname_create		65007	0					
ANR	65026	ArgumentList	Environment :: getEnv ( )		65007	1					
ANR	65027	Argument	Environment :: getEnv ( )		65007	0					
ANR	65028	CallExpression	Environment :: getEnv ( )		65007	0					
ANR	65029	Callee	Environment :: getEnv		65007	0					
ANR	65030	Identifier	Environment :: getEnv		65007	0					
ANR	65031	ArgumentList			65007	1					
ANR	65032	Argument	"""StatusCodeType"""		65007	1					
ANR	65033	PrimaryExpression	"""StatusCodeType"""		65007	0					
ANR	65034	Argument	"""http://common.aviary.grid.redhat.com"""		65007	2					
ANR	65035	PrimaryExpression	"""http://common.aviary.grid.redhat.com"""		65007	0					
ANR	65036	Argument	NULL		65007	3					
ANR	65037	Identifier	NULL		65007	0					
ANR	65038	Identifier	AviaryCommon :: StatusCodeType :: StatusCodeType		65007	1					
ANR	65039	ParameterList			65007	2					
ANR	65040	CFGEntryNode	ENTRY		65007		True				
ANR	65041	CFGExitNode	EXIT		65007		True				
ANR	65042	Symbol	isValidStatusCodeType		65007						
ANR	65043	Symbol	Environment :: getEnv		65007						
ANR	65044	Symbol	NULL		65007						
ANR	65045	Symbol	qname		65007						
ANR	65046	Symbol	false		65007						
ANR	65047	Symbol	axutil_qname_create		65007						
ANR	65048	Function	AviaryCommon :: StatusCodeType :: StatusCodeType	40:7:1055:1622							
ANR	65049	FunctionDef	AviaryCommon :: StatusCodeType :: StatusCodeType (std :: string arg_StatusCodeType)		65048	0					
ANR	65050	CompoundStatement		41:8:1140:1622	65048	0					
ANR	65051	ExpressionStatement	qname = NULL	43:19:1175:1187	65048	0	True				
ANR	65052	AssignmentExpression	qname = NULL		65048	0		=			
ANR	65053	Identifier	qname		65048	0					
ANR	65054	Identifier	NULL		65048	1					
ANR	65055	ExpressionStatement	property_StatusCodeType	45:17:1220:1243	65048	1	True				
ANR	65056	Identifier	property_StatusCodeType		65048	0					
ANR	65057	ExpressionStatement	isValidStatusCodeType = true	47:12:1271:1300	65048	2	True				
ANR	65058	AssignmentExpression	isValidStatusCodeType = true		65048	0		=			
ANR	65059	Identifier	isValidStatusCodeType		65048	0					
ANR	65060	Identifier	true		65048	1					
ANR	65061	ExpressionStatement	"qname = axutil_qname_create ( Environment :: getEnv ( ) , ""StatusCodeType"" , ""http://common.aviary.grid.redhat.com"" , NULL )"	49:17:1332:1517	65048	3	True				
ANR	65062	AssignmentExpression	"qname = axutil_qname_create ( Environment :: getEnv ( ) , ""StatusCodeType"" , ""http://common.aviary.grid.redhat.com"" , NULL )"		65048	0		=			
ANR	65063	Identifier	qname		65048	0					
ANR	65064	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""StatusCodeType"" , ""http://common.aviary.grid.redhat.com"" , NULL )"		65048	1					
ANR	65065	Callee	axutil_qname_create		65048	0					
ANR	65066	Identifier	axutil_qname_create		65048	0					
ANR	65067	ArgumentList	Environment :: getEnv ( )		65048	1					
ANR	65068	Argument	Environment :: getEnv ( )		65048	0					
ANR	65069	CallExpression	Environment :: getEnv ( )		65048	0					
ANR	65070	Callee	Environment :: getEnv		65048	0					
ANR	65071	Identifier	Environment :: getEnv		65048	0					
ANR	65072	ArgumentList			65048	1					
ANR	65073	Argument	"""StatusCodeType"""		65048	1					
ANR	65074	PrimaryExpression	"""StatusCodeType"""		65048	0					
ANR	65075	Argument	"""http://common.aviary.grid.redhat.com"""		65048	2					
ANR	65076	PrimaryExpression	"""http://common.aviary.grid.redhat.com"""		65048	0					
ANR	65077	Argument	NULL		65048	3					
ANR	65078	Identifier	NULL		65048	0					
ANR	65079	ExpressionStatement	property_StatusCodeType = arg_StatusCodeType	54:20:1555:1599	65048	4	True				
ANR	65080	AssignmentExpression	property_StatusCodeType = arg_StatusCodeType		65048	0		=			
ANR	65081	Identifier	property_StatusCodeType		65048	0					
ANR	65082	Identifier	arg_StatusCodeType		65048	1					
ANR	65083	Identifier	AviaryCommon :: StatusCodeType :: StatusCodeType		65048	1					
ANR	65084	ParameterList	std :: string arg_StatusCodeType		65048	2					
ANR	65085	Parameter	std :: string arg_StatusCodeType	40:52:1100:1129	65048	0	True				
ANR	65086	ParameterType	std :: string		65048	0					
ANR	65087	Identifier	arg_StatusCodeType		65048	1					
ANR	65088	CFGEntryNode	ENTRY		65048		True				
ANR	65089	CFGExitNode	EXIT		65048		True				
ANR	65090	Symbol	isValidStatusCodeType		65048						
ANR	65091	Symbol	Environment :: getEnv		65048						
ANR	65092	Symbol	NULL		65048						
ANR	65093	Symbol	qname		65048						
ANR	65094	Symbol	true		65048						
ANR	65095	Symbol	axutil_qname_create		65048						
ANR	65096	Symbol	property_StatusCodeType		65048						
ANR	65097	Symbol	arg_StatusCodeType		65048						
ANR	65098	Function	AviaryCommon :: StatusCodeType :: ~StatusCodeType	57:8:1632:1758							
ANR	65099	FunctionDef	AviaryCommon :: StatusCodeType :: ~StatusCodeType ()		65098	0					
ANR	65100	CompoundStatement		58:8:1688:1758	65098	0					
ANR	65101	ExpressionStatement	"axutil_qname_free ( qname , Environment :: getEnv ( ) )"	59:12:1702:1748	65098	0	True				
ANR	65102	CallExpression	"axutil_qname_free ( qname , Environment :: getEnv ( ) )"		65098	0					
ANR	65103	Callee	axutil_qname_free		65098	0					
ANR	65104	Identifier	axutil_qname_free		65098	0					
ANR	65105	ArgumentList	qname		65098	1					
ANR	65106	Argument	qname		65098	0					
ANR	65107	Identifier	qname		65098	0					
ANR	65108	Argument	Environment :: getEnv ( )		65098	1					
ANR	65109	CallExpression	Environment :: getEnv ( )		65098	0					
ANR	65110	Callee	Environment :: getEnv		65098	0					
ANR	65111	Identifier	Environment :: getEnv		65098	0					
ANR	65112	ArgumentList			65098	1					
ANR	65113	Identifier	AviaryCommon :: StatusCodeType :: ~StatusCodeType		65098	1					
ANR	65114	ParameterList			65098	2					
ANR	65115	CFGEntryNode	ENTRY		65098		True				
ANR	65116	CFGExitNode	EXIT		65098		True				
ANR	65117	Symbol	Environment :: getEnv		65098						
ANR	65118	Symbol	qname		65098						
ANR	65119	Function	StatusCodeType :: deserializeFromString	63:12:1782:2167							
ANR	65120	FunctionDef	"StatusCodeType :: deserializeFromString (const axis2_char_t * node_value , axiom_node_t * parent)"		65119	0					
ANR	65121	CompoundStatement		67:12:2001:2167	65119	0					
ANR	65122	IdentifierDeclStatement	bool status = true ;	68:14:2017:2035	65119	0	True				
ANR	65123	IdentifierDecl	status = true		65119	0					
ANR	65124	IdentifierDeclType	bool		65119	0					
ANR	65125	Identifier	status		65119	1					
ANR	65126	AssignmentExpression	status = true		65119	2		=			
ANR	65127	Identifier	true		65119	0					
ANR	65128	Identifier	true		65119	1					
ANR	65129	ExpressionStatement	setStatusCodeType ( node_value )	70:24:2074:2103	65119	1	True				
ANR	65130	CallExpression	setStatusCodeType ( node_value )		65119	0					
ANR	65131	Callee	setStatusCodeType		65119	0					
ANR	65132	Identifier	setStatusCodeType		65119	0					
ANR	65133	ArgumentList	node_value		65119	1					
ANR	65134	Argument	node_value		65119	0					
ANR	65135	Identifier	node_value		65119	0					
ANR	65136	ReturnStatement	return status ;	72:14:2140:2153	65119	2	True				
ANR	65137	Identifier	status		65119	0					
ANR	65138	ReturnType	bool WSF_CALL		65119	1					
ANR	65139	Identifier	StatusCodeType :: deserializeFromString		65119	2					
ANR	65140	ParameterList	"const axis2_char_t * node_value , axiom_node_t * parent"		65119	3					
ANR	65141	Parameter	const axis2_char_t * node_value	65:44:1891:1920	65119	0	True				
ANR	65142	ParameterType	const axis2_char_t *		65119	0					
ANR	65143	Identifier	node_value		65119	1					
ANR	65144	Parameter	axiom_node_t * parent	66:44:1967:1986	65119	1	True				
ANR	65145	ParameterType	axiom_node_t *		65119	0					
ANR	65146	Identifier	parent		65119	1					
ANR	65147	CFGEntryNode	ENTRY		65119		True				
ANR	65148	CFGExitNode	EXIT		65119		True				
ANR	65149	Symbol	parent		65119						
ANR	65150	Symbol	true		65119						
ANR	65151	Symbol	node_value		65119						
ANR	65152	Symbol	status		65119						
ANR	65153	Function	AviaryCommon :: StatusCodeType :: deserialize	76:8:2187:4103							
ANR	65154	FunctionDef	"AviaryCommon :: StatusCodeType :: deserialize (axiom_node_t * * dp_parent , bool * dp_is_early_node_valid , bool dont_care_minoccurs)"		65153	0					
ANR	65155	CompoundStatement		78:8:2340:4103	65153	0					
ANR	65156	IdentifierDeclStatement	axiom_node_t * parent = * dp_parent ;	79:10:2352:2385	65153	0	True				
ANR	65157	IdentifierDecl	* parent = * dp_parent		65153	0					
ANR	65158	IdentifierDeclType	axiom_node_t *		65153	0					
ANR	65159	Identifier	parent		65153	1					
ANR	65160	AssignmentExpression	* parent = * dp_parent		65153	2		=			
ANR	65161	Identifier	parent		65153	0					
ANR	65162	UnaryOperationExpression	* dp_parent		65153	1					
ANR	65163	UnaryOperator	*		65153	0					
ANR	65164	Identifier	dp_parent		65153	1					
ANR	65165	IdentifierDeclStatement	bool status = AXIS2_SUCCESS ;	81:10:2408:2435	65153	1	True				
ANR	65166	IdentifierDecl	status = AXIS2_SUCCESS		65153	0					
ANR	65167	IdentifierDeclType	bool		65153	0					
ANR	65168	Identifier	status		65153	1					
ANR	65169	AssignmentExpression	status = AXIS2_SUCCESS		65153	2		=			
ANR	65170	Identifier	AXIS2_SUCCESS		65153	0					
ANR	65171	Identifier	AXIS2_SUCCESS		65153	1					
ANR	65172	IdentifierDeclStatement	const axis2_char_t * text_value = NULL ;	83:9:2458:2495	65153	2	True				
ANR	65173	IdentifierDecl	* text_value = NULL		65153	0					
ANR	65174	IdentifierDeclType	const axis2_char_t *		65153	0					
ANR	65175	Identifier	text_value		65153	1					
ANR	65176	AssignmentExpression	* text_value = NULL		65153	2		=			
ANR	65177	Identifier	NULL		65153	0					
ANR	65178	Identifier	NULL		65153	1					
ANR	65179	IdentifierDeclStatement	axutil_qname_t * mqname = NULL ;	84:9:2506:2535	65153	3	True				
ANR	65180	IdentifierDecl	* mqname = NULL		65153	0					
ANR	65181	IdentifierDeclType	axutil_qname_t *		65153	0					
ANR	65182	Identifier	mqname		65153	1					
ANR	65183	AssignmentExpression	* mqname = NULL		65153	2		=			
ANR	65184	Identifier	NULL		65153	0					
ANR	65185	Identifier	NULL		65153	1					
ANR	65186	ExpressionStatement	status = AXIS2_FAILURE	87:8:2569:2591	65153	4	True				
ANR	65187	AssignmentExpression	status = AXIS2_FAILURE		65153	0		=			
ANR	65188	Identifier	status		65153	0					
ANR	65189	Identifier	AXIS2_FAILURE		65153	1					
ANR	65190	IfStatement	if ( parent )		65153	5					
ANR	65191	Condition	parent	88:11:2604:2609	65153	0	True				
ANR	65192	Identifier	parent		65153	0					
ANR	65193	CompoundStatement		13:12:293:325	65153	1					
ANR	65194	IdentifierDeclStatement	axis2_char_t * attrib_text = NULL ;	90:12:2634:2666	65153	0	True				
ANR	65195	IdentifierDecl	* attrib_text = NULL		65153	0					
ANR	65196	IdentifierDeclType	axis2_char_t *		65153	0					
ANR	65197	Identifier	attrib_text		65153	1					
ANR	65198	AssignmentExpression	* attrib_text = NULL		65153	2		=			
ANR	65199	Identifier	NULL		65153	0					
ANR	65200	Identifier	NULL		65153	1					
ANR	65201	ExpressionStatement	"attrib_text = axiom_element_get_attribute_value_by_name ( ( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) ) , Environment :: getEnv ( ) , ""nil"" )"	91:12:2680:2843	65153	1	True				
ANR	65202	AssignmentExpression	"attrib_text = axiom_element_get_attribute_value_by_name ( ( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) ) , Environment :: getEnv ( ) , ""nil"" )"		65153	0		=			
ANR	65203	Identifier	attrib_text		65153	0					
ANR	65204	CallExpression	"axiom_element_get_attribute_value_by_name ( ( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) ) , Environment :: getEnv ( ) , ""nil"" )"		65153	1					
ANR	65205	Callee	axiom_element_get_attribute_value_by_name		65153	0					
ANR	65206	Identifier	axiom_element_get_attribute_value_by_name		65153	0					
ANR	65207	ArgumentList	"( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"		65153	1					
ANR	65208	Argument	"( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"		65153	0					
ANR	65209	CastExpression	"( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"		65153	0					
ANR	65210	CastTarget	axiom_element_t *		65153	0					
ANR	65211	CallExpression	"axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"		65153	1					
ANR	65212	Callee	axiom_node_get_data_element		65153	0					
ANR	65213	Identifier	axiom_node_get_data_element		65153	0					
ANR	65214	ArgumentList	parent		65153	1					
ANR	65215	Argument	parent		65153	0					
ANR	65216	Identifier	parent		65153	0					
ANR	65217	Argument	Environment :: getEnv ( )		65153	1					
ANR	65218	CallExpression	Environment :: getEnv ( )		65153	0					
ANR	65219	Callee	Environment :: getEnv		65153	0					
ANR	65220	Identifier	Environment :: getEnv		65153	0					
ANR	65221	ArgumentList			65153	1					
ANR	65222	Argument	Environment :: getEnv ( )		65153	1					
ANR	65223	CallExpression	Environment :: getEnv ( )		65153	0					
ANR	65224	Callee	Environment :: getEnv		65153	0					
ANR	65225	Identifier	Environment :: getEnv		65153	0					
ANR	65226	ArgumentList			65153	1					
ANR	65227	Argument	"""nil"""		65153	2					
ANR	65228	PrimaryExpression	"""nil"""		65153	0					
ANR	65229	IfStatement	"if ( attrib_text != NULL && ! axutil_strcasecmp ( attrib_text , ""true"" ) )"		65153	2					
ANR	65230	Condition	"attrib_text != NULL && ! axutil_strcasecmp ( attrib_text , ""true"" )"	92:16:2861:2922	65153	0	True				
ANR	65231	AndExpression	"attrib_text != NULL && ! axutil_strcasecmp ( attrib_text , ""true"" )"		65153	0		&&			
ANR	65232	EqualityExpression	attrib_text != NULL		65153	0		!=			
ANR	65233	Identifier	attrib_text		65153	0					
ANR	65234	Identifier	NULL		65153	1					
ANR	65235	UnaryOperationExpression	"! axutil_strcasecmp ( attrib_text , ""true"" )"		65153	1					
ANR	65236	UnaryOperator	!		65153	0					
ANR	65237	CallExpression	"axutil_strcasecmp ( attrib_text , ""true"" )"		65153	1					
ANR	65238	Callee	axutil_strcasecmp		65153	0					
ANR	65239	Identifier	axutil_strcasecmp		65153	0					
ANR	65240	ArgumentList	attrib_text		65153	1					
ANR	65241	Argument	attrib_text		65153	0					
ANR	65242	Identifier	attrib_text		65153	0					
ANR	65243	Argument	"""true"""		65153	1					
ANR	65244	PrimaryExpression	"""true"""		65153	0					
ANR	65245	CompoundStatement		16:12:596:596	65153	1					
ANR	65246	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""NULL value is set to a non nillable element StatusCodeType"" )"	96:16:3036:3155	65153	0	True				
ANR	65247	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""NULL value is set to a non nillable element StatusCodeType"" )"		65153	0					
ANR	65248	Callee	WSF_LOG_ERROR_MSG		65153	0					
ANR	65249	Identifier	WSF_LOG_ERROR_MSG		65153	0					
ANR	65250	ArgumentList	Environment :: getEnv ( ) -> log		65153	1					
ANR	65251	Argument	Environment :: getEnv ( ) -> log		65153	0					
ANR	65252	PtrMemberAccess	Environment :: getEnv ( ) -> log		65153	0					
ANR	65253	CallExpression	Environment :: getEnv ( )		65153	0					
ANR	65254	Callee	Environment :: getEnv		65153	0					
ANR	65255	Identifier	Environment :: getEnv		65153	0					
ANR	65256	ArgumentList			65153	1					
ANR	65257	Identifier	log		65153	1					
ANR	65258	Argument	WSF_LOG_SI		65153	1					
ANR	65259	Identifier	WSF_LOG_SI		65153	0					
ANR	65260	Argument	"""NULL value is set to a non nillable element StatusCodeType"""		65153	2					
ANR	65261	PrimaryExpression	"""NULL value is set to a non nillable element StatusCodeType"""		65153	0					
ANR	65262	ExpressionStatement	status = AXIS2_FAILURE	97:16:3173:3195	65153	1	True				
ANR	65263	AssignmentExpression	status = AXIS2_FAILURE		65153	0		=			
ANR	65264	Identifier	status		65153	0					
ANR	65265	Identifier	AXIS2_FAILURE		65153	1					
ANR	65266	ElseStatement	else		65153	0					
ANR	65267	CompoundStatement		27:16:1068:1101	65153	0					
ANR	65268	IdentifierDeclStatement	axiom_node_t * text_node = NULL ;	102:16:3274:3304	65153	0	True				
ANR	65269	IdentifierDecl	* text_node = NULL		65153	0					
ANR	65270	IdentifierDeclType	axiom_node_t *		65153	0					
ANR	65271	Identifier	text_node		65153	1					
ANR	65272	AssignmentExpression	* text_node = NULL		65153	2		=			
ANR	65273	Identifier	NULL		65153	0					
ANR	65274	Identifier	NULL		65153	1					
ANR	65275	ExpressionStatement	"text_node = axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"	103:16:3322:3391	65153	1	True				
ANR	65276	AssignmentExpression	"text_node = axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"		65153	0		=			
ANR	65277	Identifier	text_node		65153	0					
ANR	65278	CallExpression	"axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"		65153	1					
ANR	65279	Callee	axiom_node_get_first_child		65153	0					
ANR	65280	Identifier	axiom_node_get_first_child		65153	0					
ANR	65281	ArgumentList	parent		65153	1					
ANR	65282	Argument	parent		65153	0					
ANR	65283	Identifier	parent		65153	0					
ANR	65284	Argument	Environment :: getEnv ( )		65153	1					
ANR	65285	CallExpression	Environment :: getEnv ( )		65153	0					
ANR	65286	Callee	Environment :: getEnv		65153	0					
ANR	65287	Identifier	Environment :: getEnv		65153	0					
ANR	65288	ArgumentList			65153	1					
ANR	65289	IdentifierDeclStatement	axiom_text_t * text_element = NULL ;	104:16:3409:3442	65153	2	True				
ANR	65290	IdentifierDecl	* text_element = NULL		65153	0					
ANR	65291	IdentifierDeclType	axiom_text_t *		65153	0					
ANR	65292	Identifier	text_element		65153	1					
ANR	65293	AssignmentExpression	* text_element = NULL		65153	2		=			
ANR	65294	Identifier	NULL		65153	0					
ANR	65295	Identifier	NULL		65153	1					
ANR	65296	IfStatement	"if ( text_node && axiom_node_get_node_type ( text_node , Environment :: getEnv ( ) ) == AXIOM_TEXT )"		65153	3					
ANR	65297	Condition	"text_node && axiom_node_get_node_type ( text_node , Environment :: getEnv ( ) ) == AXIOM_TEXT"	105:20:3464:3572	65153	0	True				
ANR	65298	AndExpression	"text_node && axiom_node_get_node_type ( text_node , Environment :: getEnv ( ) ) == AXIOM_TEXT"		65153	0		&&			
ANR	65299	Identifier	text_node		65153	0					
ANR	65300	EqualityExpression	"axiom_node_get_node_type ( text_node , Environment :: getEnv ( ) ) == AXIOM_TEXT"		65153	1		==			
ANR	65301	CallExpression	"axiom_node_get_node_type ( text_node , Environment :: getEnv ( ) )"		65153	0					
ANR	65302	Callee	axiom_node_get_node_type		65153	0					
ANR	65303	Identifier	axiom_node_get_node_type		65153	0					
ANR	65304	ArgumentList	text_node		65153	1					
ANR	65305	Argument	text_node		65153	0					
ANR	65306	Identifier	text_node		65153	0					
ANR	65307	Argument	Environment :: getEnv ( )		65153	1					
ANR	65308	CallExpression	Environment :: getEnv ( )		65153	0					
ANR	65309	Callee	Environment :: getEnv		65153	0					
ANR	65310	Identifier	Environment :: getEnv		65153	0					
ANR	65311	ArgumentList			65153	1					
ANR	65312	Identifier	AXIOM_TEXT		65153	1					
ANR	65313	ExpressionStatement	"text_element = ( axiom_text_t * ) axiom_node_get_data_element ( text_node , Environment :: getEnv ( ) )"	107:20:3595:3686	65153	1	True				
ANR	65314	AssignmentExpression	"text_element = ( axiom_text_t * ) axiom_node_get_data_element ( text_node , Environment :: getEnv ( ) )"		65153	0		=			
ANR	65315	Identifier	text_element		65153	0					
ANR	65316	CastExpression	"( axiom_text_t * ) axiom_node_get_data_element ( text_node , Environment :: getEnv ( ) )"		65153	1					
ANR	65317	CastTarget	axiom_text_t *		65153	0					
ANR	65318	CallExpression	"axiom_node_get_data_element ( text_node , Environment :: getEnv ( ) )"		65153	1					
ANR	65319	Callee	axiom_node_get_data_element		65153	0					
ANR	65320	Identifier	axiom_node_get_data_element		65153	0					
ANR	65321	ArgumentList	text_node		65153	1					
ANR	65322	Argument	text_node		65153	0					
ANR	65323	Identifier	text_node		65153	0					
ANR	65324	Argument	Environment :: getEnv ( )		65153	1					
ANR	65325	CallExpression	Environment :: getEnv ( )		65153	0					
ANR	65326	Callee	Environment :: getEnv		65153	0					
ANR	65327	Identifier	Environment :: getEnv		65153	0					
ANR	65328	ArgumentList			65153	1					
ANR	65329	ExpressionStatement	"text_value = """""	108:16:3704:3719	65153	4	True				
ANR	65330	AssignmentExpression	"text_value = """""		65153	0		=			
ANR	65331	Identifier	text_value		65153	0					
ANR	65332	PrimaryExpression	""""""		65153	1					
ANR	65333	IfStatement	"if ( text_element && axiom_text_get_value ( text_element , Environment :: getEnv ( ) ) )"		65153	5					
ANR	65334	Condition	"text_element && axiom_text_get_value ( text_element , Environment :: getEnv ( ) )"	109:19:3740:3812	65153	0	True				
ANR	65335	AndExpression	"text_element && axiom_text_get_value ( text_element , Environment :: getEnv ( ) )"		65153	0		&&			
ANR	65336	Identifier	text_element		65153	0					
ANR	65337	CallExpression	"axiom_text_get_value ( text_element , Environment :: getEnv ( ) )"		65153	1					
ANR	65338	Callee	axiom_text_get_value		65153	0					
ANR	65339	Identifier	axiom_text_get_value		65153	0					
ANR	65340	ArgumentList	text_element		65153	1					
ANR	65341	Argument	text_element		65153	0					
ANR	65342	Identifier	text_element		65153	0					
ANR	65343	Argument	Environment :: getEnv ( )		65153	1					
ANR	65344	CallExpression	Environment :: getEnv ( )		65153	0					
ANR	65345	Callee	Environment :: getEnv		65153	0					
ANR	65346	Identifier	Environment :: getEnv		65153	0					
ANR	65347	ArgumentList			65153	1					
ANR	65348	CompoundStatement		33:16:1490:1490	65153	1					
ANR	65349	ExpressionStatement	"text_value = ( axis2_char_t * ) axiom_text_get_value ( text_element , Environment :: getEnv ( ) )"	111:20:3853:3938	65153	0	True				
ANR	65350	AssignmentExpression	"text_value = ( axis2_char_t * ) axiom_text_get_value ( text_element , Environment :: getEnv ( ) )"		65153	0		=			
ANR	65351	Identifier	text_value		65153	0					
ANR	65352	CastExpression	"( axis2_char_t * ) axiom_text_get_value ( text_element , Environment :: getEnv ( ) )"		65153	1					
ANR	65353	CastTarget	axis2_char_t *		65153	0					
ANR	65354	CallExpression	"axiom_text_get_value ( text_element , Environment :: getEnv ( ) )"		65153	1					
ANR	65355	Callee	axiom_text_get_value		65153	0					
ANR	65356	Identifier	axiom_text_get_value		65153	0					
ANR	65357	ArgumentList	text_element		65153	1					
ANR	65358	Argument	text_element		65153	0					
ANR	65359	Identifier	text_element		65153	0					
ANR	65360	Argument	Environment :: getEnv ( )		65153	1					
ANR	65361	CallExpression	Environment :: getEnv ( )		65153	0					
ANR	65362	Callee	Environment :: getEnv		65153	0					
ANR	65363	Identifier	Environment :: getEnv		65153	0					
ANR	65364	ArgumentList			65153	1					
ANR	65365	ExpressionStatement	"status = deserializeFromString ( text_value , parent )"	113:16:3974:4024	65153	6	True				
ANR	65366	AssignmentExpression	"status = deserializeFromString ( text_value , parent )"		65153	0		=			
ANR	65367	Identifier	status		65153	0					
ANR	65368	CallExpression	"deserializeFromString ( text_value , parent )"		65153	1					
ANR	65369	Callee	deserializeFromString		65153	0					
ANR	65370	Identifier	deserializeFromString		65153	0					
ANR	65371	ArgumentList	text_value		65153	1					
ANR	65372	Argument	text_value		65153	0					
ANR	65373	Identifier	text_value		65153	0					
ANR	65374	Argument	parent		65153	1					
ANR	65375	Identifier	parent		65153	0					
ANR	65376	ReturnStatement	return status ;	117:10:4081:4094	65153	6	True				
ANR	65377	Identifier	status		65153	0					
ANR	65378	ReturnType	bool WSF_CALL		65153	1					
ANR	65379	Identifier	AviaryCommon :: StatusCodeType :: deserialize		65153	2					
ANR	65380	ParameterList	"axiom_node_t * * dp_parent , bool * dp_is_early_node_valid , bool dont_care_minoccurs"		65153	3					
ANR	65381	Parameter	axiom_node_t * * dp_parent	77:50:2251:2274	65153	0	True				
ANR	65382	ParameterType	axiom_node_t * *		65153	0					
ANR	65383	Identifier	dp_parent		65153	1					
ANR	65384	Parameter	bool * dp_is_early_node_valid	77:75:2276:2303	65153	1	True				
ANR	65385	ParameterType	bool *		65153	0					
ANR	65386	Identifier	dp_is_early_node_valid		65153	1					
ANR	65387	Parameter	bool dont_care_minoccurs	77:105:2306:2329	65153	2	True				
ANR	65388	ParameterType	bool		65153	0					
ANR	65389	Identifier	dont_care_minoccurs		65153	1					
ANR	65390	CFGEntryNode	ENTRY		65153		True				
ANR	65391	CFGExitNode	EXIT		65153		True				
ANR	65392	Symbol	parent		65153						
ANR	65393	Symbol	Environment :: getEnv		65153						
ANR	65394	Symbol	mqname		65153						
ANR	65395	Symbol	axiom_element_get_attribute_value_by_name		65153						
ANR	65396	Symbol	deserializeFromString		65153						
ANR	65397	Symbol	AXIOM_TEXT		65153						
ANR	65398	Symbol	* dp_parent		65153						
ANR	65399	Symbol	AXIS2_FAILURE		65153						
ANR	65400	Symbol	axiom_node_get_data_element		65153						
ANR	65401	Symbol	dont_care_minoccurs		65153						
ANR	65402	Symbol	attrib_text		65153						
ANR	65403	Symbol	dp_is_early_node_valid		65153						
ANR	65404	Symbol	WSF_LOG_SI		65153						
ANR	65405	Symbol	AXIS2_SUCCESS		65153						
ANR	65406	Symbol	axutil_strcasecmp		65153						
ANR	65407	Symbol	NULL		65153						
ANR	65408	Symbol	dp_parent		65153						
ANR	65409	Symbol	axiom_node_get_node_type		65153						
ANR	65410	Symbol	Environment :: getEnv ( ) -> log		65153						
ANR	65411	Symbol	axiom_text_get_value		65153						
ANR	65412	Symbol	text_value		65153						
ANR	65413	Symbol	text_node		65153						
ANR	65414	Symbol	axiom_node_get_first_child		65153						
ANR	65415	Symbol	text_element		65153						
ANR	65416	Symbol	* Environment :: getEnv		65153						
ANR	65417	Symbol	status		65153						
ANR	65418	Function	AviaryCommon :: StatusCodeType :: isParticle	120:10:4116:4264							
ANR	65419	FunctionDef	AviaryCommon :: StatusCodeType :: isParticle ()		65418	0					
ANR	65420	CompoundStatement		122:10:4193:4264	65418	0					
ANR	65421	ReturnStatement	return false ;	124:17:4225:4237	65418	0	True				
ANR	65422	Identifier	false		65418	0					
ANR	65423	ReturnType	bool WSF_CALL		65418	1					
ANR	65424	Identifier	AviaryCommon :: StatusCodeType :: isParticle		65418	2					
ANR	65425	ParameterList			65418	3					
ANR	65426	CFGEntryNode	ENTRY		65418		True				
ANR	65427	CFGExitNode	EXIT		65418		True				
ANR	65428	Symbol	false		65418						
ANR	65429	Function	AviaryCommon :: StatusCodeType :: declareParentNamespaces	129:10:4278:4605							
ANR	65430	FunctionDef	"AviaryCommon :: StatusCodeType :: declareParentNamespaces (axiom_element_t * parent_element , axutil_hash_t * namespaces , int * next_ns_index)"		65429	0					
ANR	65431	CompoundStatement		133:10:4487:4605	65429	0					
ANR	65432	ReturnType	void WSF_CALL		65429	1					
ANR	65433	Identifier	AviaryCommon :: StatusCodeType :: declareParentNamespaces		65429	2					
ANR	65434	ParameterList	"axiom_element_t * parent_element , axutil_hash_t * namespaces , int * next_ns_index"		65429	3					
ANR	65435	Parameter	axiom_element_t * parent_element	131:20:4377:4407	65429	0	True				
ANR	65436	ParameterType	axiom_element_t *		65429	0					
ANR	65437	Identifier	parent_element		65429	1					
ANR	65438	Parameter	axutil_hash_t * namespaces	132:20:4430:4454	65429	1	True				
ANR	65439	ParameterType	axutil_hash_t *		65429	0					
ANR	65440	Identifier	namespaces		65429	1					
ANR	65441	Parameter	int * next_ns_index	132:47:4457:4474	65429	2	True				
ANR	65442	ParameterType	int *		65429	0					
ANR	65443	Identifier	next_ns_index		65429	1					
ANR	65444	CFGEntryNode	ENTRY		65429		True				
ANR	65445	CFGExitNode	EXIT		65429		True				
ANR	65446	Symbol	parent_element		65429						
ANR	65447	Symbol	next_ns_index		65429						
ANR	65448	Symbol	namespaces		65429						
ANR	65449	Function	AviaryCommon :: StatusCodeType :: serializeToString	140:18:4635:5360							
ANR	65450	FunctionDef	AviaryCommon :: StatusCodeType :: serializeToString (axutil_hash_t * namespaces)		65449	0					
ANR	65451	CompoundStatement		142:12:4743:5360	65449	0					
ANR	65452	IdentifierDeclStatement	axis2_char_t * text_value = NULL ;	143:16:4761:4792	65449	0	True				
ANR	65453	IdentifierDecl	* text_value = NULL		65449	0					
ANR	65454	IdentifierDeclType	axis2_char_t *		65449	0					
ANR	65455	Identifier	text_value		65449	1					
ANR	65456	AssignmentExpression	* text_value = NULL		65449	2		=			
ANR	65457	Identifier	NULL		65449	0					
ANR	65458	Identifier	NULL		65449	1					
ANR	65459	IdentifierDeclStatement	axis2_char_t * qname_uri = NULL ;	144:16:4810:4840	65449	1	True				
ANR	65460	IdentifierDecl	* qname_uri = NULL		65449	0					
ANR	65461	IdentifierDeclType	axis2_char_t *		65449	0					
ANR	65462	Identifier	qname_uri		65449	1					
ANR	65463	AssignmentExpression	* qname_uri = NULL		65449	2		=			
ANR	65464	Identifier	NULL		65449	0					
ANR	65465	Identifier	NULL		65449	1					
ANR	65466	IdentifierDeclStatement	axis2_char_t * qname_prefix = NULL ;	145:16:4858:4891	65449	2	True				
ANR	65467	IdentifierDecl	* qname_prefix = NULL		65449	0					
ANR	65468	IdentifierDeclType	axis2_char_t *		65449	0					
ANR	65469	Identifier	qname_prefix		65449	1					
ANR	65470	AssignmentExpression	* qname_prefix = NULL		65449	2		=			
ANR	65471	Identifier	NULL		65449	0					
ANR	65472	Identifier	NULL		65449	1					
ANR	65473	ExpressionStatement	"text_value = ( axis2_char_t * ) axutil_xml_quote_string ( Environment :: getEnv ( ) , ( axis2_char_t * ) property_StatusCodeType . c_str ( ) , false )"	147:25:4935:5064	65449	3	True				
ANR	65474	AssignmentExpression	"text_value = ( axis2_char_t * ) axutil_xml_quote_string ( Environment :: getEnv ( ) , ( axis2_char_t * ) property_StatusCodeType . c_str ( ) , false )"		65449	0		=			
ANR	65475	Identifier	text_value		65449	0					
ANR	65476	CastExpression	"( axis2_char_t * ) axutil_xml_quote_string ( Environment :: getEnv ( ) , ( axis2_char_t * ) property_StatusCodeType . c_str ( ) , false )"		65449	1					
ANR	65477	CastTarget	axis2_char_t *		65449	0					
ANR	65478	CallExpression	"axutil_xml_quote_string ( Environment :: getEnv ( ) , ( axis2_char_t * ) property_StatusCodeType . c_str ( ) , false )"		65449	1					
ANR	65479	Callee	axutil_xml_quote_string		65449	0					
ANR	65480	Identifier	axutil_xml_quote_string		65449	0					
ANR	65481	ArgumentList	Environment :: getEnv ( )		65449	1					
ANR	65482	Argument	Environment :: getEnv ( )		65449	0					
ANR	65483	CallExpression	Environment :: getEnv ( )		65449	0					
ANR	65484	Callee	Environment :: getEnv		65449	0					
ANR	65485	Identifier	Environment :: getEnv		65449	0					
ANR	65486	ArgumentList			65449	1					
ANR	65487	Argument	( axis2_char_t * ) property_StatusCodeType . c_str ( )		65449	1					
ANR	65488	CastExpression	( axis2_char_t * ) property_StatusCodeType . c_str ( )		65449	0					
ANR	65489	CastTarget	axis2_char_t *		65449	0					
ANR	65490	CallExpression	property_StatusCodeType . c_str ( )		65449	1					
ANR	65491	Callee	property_StatusCodeType . c_str		65449	0					
ANR	65492	MemberAccess	property_StatusCodeType . c_str		65449	0					
ANR	65493	Identifier	property_StatusCodeType		65449	0					
ANR	65494	Identifier	c_str		65449	1					
ANR	65495	ArgumentList			65449	1					
ANR	65496	Argument	false		65449	2					
ANR	65497	Identifier	false		65449	0					
ANR	65498	IfStatement	if ( ! text_value )		65449	4					
ANR	65499	Condition	! text_value	148:29:5095:5105	65449	0	True				
ANR	65500	UnaryOperationExpression	! text_value		65449	0					
ANR	65501	UnaryOperator	!		65449	0					
ANR	65502	Identifier	text_value		65449	1					
ANR	65503	CompoundStatement		8:25:389:389	65449	1					
ANR	65504	ExpressionStatement	"text_value = ( axis2_char_t * ) axutil_strdup ( Environment :: getEnv ( ) , property_StatusCodeType . c_str ( ) )"	150:29:5164:5261	65449	0	True				
ANR	65505	AssignmentExpression	"text_value = ( axis2_char_t * ) axutil_strdup ( Environment :: getEnv ( ) , property_StatusCodeType . c_str ( ) )"		65449	0		=			
ANR	65506	Identifier	text_value		65449	0					
ANR	65507	CastExpression	"( axis2_char_t * ) axutil_strdup ( Environment :: getEnv ( ) , property_StatusCodeType . c_str ( ) )"		65449	1					
ANR	65508	CastTarget	axis2_char_t *		65449	0					
ANR	65509	CallExpression	"axutil_strdup ( Environment :: getEnv ( ) , property_StatusCodeType . c_str ( ) )"		65449	1					
ANR	65510	Callee	axutil_strdup		65449	0					
ANR	65511	Identifier	axutil_strdup		65449	0					
ANR	65512	ArgumentList	Environment :: getEnv ( )		65449	1					
ANR	65513	Argument	Environment :: getEnv ( )		65449	0					
ANR	65514	CallExpression	Environment :: getEnv ( )		65449	0					
ANR	65515	Callee	Environment :: getEnv		65449	0					
ANR	65516	Identifier	Environment :: getEnv		65449	0					
ANR	65517	ArgumentList			65449	1					
ANR	65518	Argument	property_StatusCodeType . c_str ( )		65449	1					
ANR	65519	CallExpression	property_StatusCodeType . c_str ( )		65449	0					
ANR	65520	Callee	property_StatusCodeType . c_str		65449	0					
ANR	65521	MemberAccess	property_StatusCodeType . c_str		65449	0					
ANR	65522	Identifier	property_StatusCodeType		65449	0					
ANR	65523	Identifier	c_str		65449	1					
ANR	65524	ArgumentList			65449	1					
ANR	65525	ReturnStatement	return text_value ;	153:16:5329:5346	65449	5	True				
ANR	65526	Identifier	text_value		65449	0					
ANR	65527	ReturnType	WSF_CALL		65449	1					
ANR	65528	Identifier	AviaryCommon :: StatusCodeType :: serializeToString		65449	2					
ANR	65529	ParameterList	axutil_hash_t * namespaces		65449	3					
ANR	65530	Parameter	axutil_hash_t * namespaces	141:60:4704:4728	65449	0	True				
ANR	65531	ParameterType	axutil_hash_t *		65449	0					
ANR	65532	Identifier	namespaces		65449	1					
ANR	65533	CFGEntryNode	ENTRY		65449		True				
ANR	65534	CFGExitNode	EXIT		65449		True				
ANR	65535	Symbol	text_value		65449						
ANR	65536	Symbol	Environment :: getEnv		65449						
ANR	65537	Symbol	NULL		65449						
ANR	65538	Symbol	axutil_xml_quote_string		65449						
ANR	65539	Symbol	qname_prefix		65449						
ANR	65540	Symbol	qname_uri		65449						
ANR	65541	Symbol	property_StatusCodeType . c_str		65449						
ANR	65542	Symbol	property_StatusCodeType		65449						
ANR	65543	Symbol	false		65449						
ANR	65544	Symbol	axutil_strdup		65449						
ANR	65545	Symbol	namespaces		65449						
ANR	65546	Function	AviaryCommon :: StatusCodeType :: serialize	157:22:5402:6960							
ANR	65547	FunctionDef	"AviaryCommon :: StatusCodeType :: serialize (axiom_node_t * parent , axiom_element_t * parent_element , int parent_tag_closed , axutil_hash_t * namespaces , int * next_ns_index)"		65546	0					
ANR	65548	CompoundStatement		163:8:5601:6960	65546	0					
ANR	65549	IdentifierDeclStatement	axiom_node_t * current_node = NULL ;	167:9:5648:5681	65546	0	True				
ANR	65550	IdentifierDecl	* current_node = NULL		65546	0					
ANR	65551	IdentifierDeclType	axiom_node_t *		65546	0					
ANR	65552	Identifier	current_node		65546	1					
ANR	65553	AssignmentExpression	* current_node = NULL		65546	2		=			
ANR	65554	Identifier	NULL		65546	0					
ANR	65555	Identifier	NULL		65546	1					
ANR	65556	IdentifierDeclStatement	int tag_closed = 0 ;	168:9:5692:5710	65546	1	True				
ANR	65557	IdentifierDecl	tag_closed = 0		65546	0					
ANR	65558	IdentifierDeclType	int		65546	0					
ANR	65559	Identifier	tag_closed		65546	1					
ANR	65560	AssignmentExpression	tag_closed = 0		65546	2		=			
ANR	65561	Identifier	tag_closed		65546	0					
ANR	65562	PrimaryExpression	0		65546	1					
ANR	65563	IdentifierDeclStatement	axiom_data_source_t * data_source = NULL ;	172:12:5745:5784	65546	2	True				
ANR	65564	IdentifierDecl	* data_source = NULL		65546	0					
ANR	65565	IdentifierDeclType	axiom_data_source_t *		65546	0					
ANR	65566	Identifier	data_source		65546	1					
ANR	65567	AssignmentExpression	* data_source = NULL		65546	2		=			
ANR	65568	Identifier	NULL		65546	0					
ANR	65569	Identifier	NULL		65546	1					
ANR	65570	IdentifierDeclStatement	axutil_stream_t * stream = NULL ;	173:12:5798:5828	65546	3	True				
ANR	65571	IdentifierDecl	* stream = NULL		65546	0					
ANR	65572	IdentifierDeclType	axutil_stream_t *		65546	0					
ANR	65573	Identifier	stream		65546	1					
ANR	65574	AssignmentExpression	* stream = NULL		65546	2		=			
ANR	65575	Identifier	NULL		65546	0					
ANR	65576	Identifier	NULL		65546	1					
ANR	65577	IdentifierDeclStatement	axis2_char_t * text_value ;	174:12:5842:5866	65546	4	True				
ANR	65578	IdentifierDecl	* text_value		65546	0					
ANR	65579	IdentifierDeclType	axis2_char_t *		65546	0					
ANR	65580	Identifier	text_value		65546	1					
ANR	65581	ExpressionStatement	current_node = parent	176:20:5902:5923	65546	5	True				
ANR	65582	AssignmentExpression	current_node = parent		65546	0		=			
ANR	65583	Identifier	current_node		65546	0					
ANR	65584	Identifier	parent		65546	1					
ANR	65585	ExpressionStatement	"data_source = ( axiom_data_source_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"	177:20:5945:6046	65546	6	True				
ANR	65586	AssignmentExpression	"data_source = ( axiom_data_source_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		65546	0		=			
ANR	65587	Identifier	data_source		65546	0					
ANR	65588	CastExpression	"( axiom_data_source_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		65546	1					
ANR	65589	CastTarget	axiom_data_source_t *		65546	0					
ANR	65590	CallExpression	"axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		65546	1					
ANR	65591	Callee	axiom_node_get_data_element		65546	0					
ANR	65592	Identifier	axiom_node_get_data_element		65546	0					
ANR	65593	ArgumentList	current_node		65546	1					
ANR	65594	Argument	current_node		65546	0					
ANR	65595	Identifier	current_node		65546	0					
ANR	65596	Argument	Environment :: getEnv ( )		65546	1					
ANR	65597	CallExpression	Environment :: getEnv ( )		65546	0					
ANR	65598	Callee	Environment :: getEnv		65546	0					
ANR	65599	Identifier	Environment :: getEnv		65546	0					
ANR	65600	ArgumentList			65546	1					
ANR	65601	IfStatement	if ( ! data_source )		65546	7					
ANR	65602	Condition	! data_source	178:24:6072:6083	65546	0	True				
ANR	65603	UnaryOperationExpression	! data_source		65546	0					
ANR	65604	UnaryOperator	!		65546	0					
ANR	65605	Identifier	data_source		65546	1					
ANR	65606	ReturnStatement	return NULL ;	179:24:6110:6121	65546	1	True				
ANR	65607	Identifier	NULL		65546	0					
ANR	65608	ExpressionStatement	"stream = axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"	180:20:6143:6216	65546	8	True				
ANR	65609	AssignmentExpression	"stream = axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"		65546	0		=			
ANR	65610	Identifier	stream		65546	0					
ANR	65611	CallExpression	"axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"		65546	1					
ANR	65612	Callee	axiom_data_source_get_stream		65546	0					
ANR	65613	Identifier	axiom_data_source_get_stream		65546	0					
ANR	65614	ArgumentList	data_source		65546	1					
ANR	65615	Argument	data_source		65546	0					
ANR	65616	Identifier	data_source		65546	0					
ANR	65617	Argument	Environment :: getEnv ( )		65546	1					
ANR	65618	CallExpression	Environment :: getEnv ( )		65546	0					
ANR	65619	Callee	Environment :: getEnv		65546	0					
ANR	65620	Identifier	Environment :: getEnv		65546	0					
ANR	65621	ArgumentList			65546	1					
ANR	65622	IfStatement	if ( ! stream )		65546	9					
ANR	65623	Condition	! stream	181:24:6285:6291	65546	0	True				
ANR	65624	UnaryOperationExpression	! stream		65546	0					
ANR	65625	UnaryOperator	!		65546	0					
ANR	65626	Identifier	stream		65546	1					
ANR	65627	ReturnStatement	return NULL ;	182:24:6318:6329	65546	1	True				
ANR	65628	Identifier	NULL		65546	0					
ANR	65629	IfStatement	if ( ! parent_tag_closed && ! tag_closed )		65546	10					
ANR	65630	Condition	! parent_tag_closed && ! tag_closed	184:18:6368:6400	65546	0	True				
ANR	65631	AndExpression	! parent_tag_closed && ! tag_closed		65546	0		&&			
ANR	65632	UnaryOperationExpression	! parent_tag_closed		65546	0					
ANR	65633	UnaryOperator	!		65546	0					
ANR	65634	Identifier	parent_tag_closed		65546	1					
ANR	65635	UnaryOperationExpression	! tag_closed		65546	1					
ANR	65636	UnaryOperator	!		65546	0					
ANR	65637	Identifier	tag_closed		65546	1					
ANR	65638	CompoundStatement		23:15:816:816	65546	1					
ANR	65639	ExpressionStatement	"text_value = "">"""	186:18:6438:6454	65546	0	True				
ANR	65640	AssignmentExpression	"text_value = "">"""		65546	0		=			
ANR	65641	Identifier	text_value		65546	0					
ANR	65642	PrimaryExpression	""">"""		65546	1					
ANR	65643	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value , axutil_strlen ( text_value ) )"	187:18:6475:6564	65546	1	True				
ANR	65644	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value , axutil_strlen ( text_value ) )"		65546	0					
ANR	65645	Callee	axutil_stream_write		65546	0					
ANR	65646	Identifier	axutil_stream_write		65546	0					
ANR	65647	ArgumentList	stream		65546	1					
ANR	65648	Argument	stream		65546	0					
ANR	65649	Identifier	stream		65546	0					
ANR	65650	Argument	Environment :: getEnv ( )		65546	1					
ANR	65651	CallExpression	Environment :: getEnv ( )		65546	0					
ANR	65652	Callee	Environment :: getEnv		65546	0					
ANR	65653	Identifier	Environment :: getEnv		65546	0					
ANR	65654	ArgumentList			65546	1					
ANR	65655	Argument	text_value		65546	2					
ANR	65656	Identifier	text_value		65546	0					
ANR	65657	Argument	axutil_strlen ( text_value )		65546	3					
ANR	65658	CallExpression	axutil_strlen ( text_value )		65546	0					
ANR	65659	Callee	axutil_strlen		65546	0					
ANR	65660	Identifier	axutil_strlen		65546	0					
ANR	65661	ArgumentList	text_value		65546	1					
ANR	65662	Argument	text_value		65546	0					
ANR	65663	Identifier	text_value		65546	0					
ANR	65664	ExpressionStatement	text_value = serializeToString ( namespaces )	190:15:6614:6656	65546	11	True				
ANR	65665	AssignmentExpression	text_value = serializeToString ( namespaces )		65546	0		=			
ANR	65666	Identifier	text_value		65546	0					
ANR	65667	CallExpression	serializeToString ( namespaces )		65546	1					
ANR	65668	Callee	serializeToString		65546	0					
ANR	65669	Identifier	serializeToString		65546	0					
ANR	65670	ArgumentList	namespaces		65546	1					
ANR	65671	Argument	namespaces		65546	0					
ANR	65672	Identifier	namespaces		65546	0					
ANR	65673	IfStatement	if ( text_value )		65546	12					
ANR	65674	Condition	text_value	191:18:6676:6685	65546	0	True				
ANR	65675	Identifier	text_value		65546	0					
ANR	65676	CompoundStatement		30:15:1101:1101	65546	1					
ANR	65677	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value , axutil_strlen ( text_value ) )"	193:20:6725:6814	65546	0	True				
ANR	65678	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value , axutil_strlen ( text_value ) )"		65546	0					
ANR	65679	Callee	axutil_stream_write		65546	0					
ANR	65680	Identifier	axutil_stream_write		65546	0					
ANR	65681	ArgumentList	stream		65546	1					
ANR	65682	Argument	stream		65546	0					
ANR	65683	Identifier	stream		65546	0					
ANR	65684	Argument	Environment :: getEnv ( )		65546	1					
ANR	65685	CallExpression	Environment :: getEnv ( )		65546	0					
ANR	65686	Callee	Environment :: getEnv		65546	0					
ANR	65687	Identifier	Environment :: getEnv		65546	0					
ANR	65688	ArgumentList			65546	1					
ANR	65689	Argument	text_value		65546	2					
ANR	65690	Identifier	text_value		65546	0					
ANR	65691	Argument	axutil_strlen ( text_value )		65546	3					
ANR	65692	CallExpression	axutil_strlen ( text_value )		65546	0					
ANR	65693	Callee	axutil_strlen		65546	0					
ANR	65694	Identifier	axutil_strlen		65546	0					
ANR	65695	ArgumentList	text_value		65546	1					
ANR	65696	Argument	text_value		65546	0					
ANR	65697	Identifier	text_value		65546	0					
ANR	65698	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , text_value )"	194:20:6836:6892	65546	1	True				
ANR	65699	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , text_value )"		65546	0					
ANR	65700	Callee	AXIS2_FREE		65546	0					
ANR	65701	Identifier	AXIS2_FREE		65546	0					
ANR	65702	ArgumentList	Environment :: getEnv ( ) -> allocator		65546	1					
ANR	65703	Argument	Environment :: getEnv ( ) -> allocator		65546	0					
ANR	65704	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		65546	0					
ANR	65705	CallExpression	Environment :: getEnv ( )		65546	0					
ANR	65706	Callee	Environment :: getEnv		65546	0					
ANR	65707	Identifier	Environment :: getEnv		65546	0					
ANR	65708	ArgumentList			65546	1					
ANR	65709	Identifier	allocator		65546	1					
ANR	65710	Argument	text_value		65546	1					
ANR	65711	Identifier	text_value		65546	0					
ANR	65712	ReturnStatement	return parent ;	198:12:6937:6950	65546	13	True				
ANR	65713	Identifier	parent		65546	0					
ANR	65714	ReturnType	WSF_CALL		65546	1					
ANR	65715	Identifier	AviaryCommon :: StatusCodeType :: serialize		65546	2					
ANR	65716	ParameterList	"axiom_node_t * parent , axiom_element_t * parent_element , int parent_tag_closed , axutil_hash_t * namespaces , int * next_ns_index"		65546	3					
ANR	65717	Parameter	axiom_node_t * parent	158:41:5452:5471	65546	0	True				
ANR	65718	ParameterType	axiom_node_t *		65546	0					
ANR	65719	Identifier	parent		65546	1					
ANR	65720	Parameter	axiom_element_t * parent_element	159:3:5478:5508	65546	1	True				
ANR	65721	ParameterType	axiom_element_t *		65546	0					
ANR	65722	Identifier	parent_element		65546	1					
ANR	65723	Parameter	int parent_tag_closed	160:3:5515:5535	65546	2	True				
ANR	65724	ParameterType	int		65546	0					
ANR	65725	Identifier	parent_tag_closed		65546	1					
ANR	65726	Parameter	axutil_hash_t * namespaces	161:3:5542:5566	65546	3	True				
ANR	65727	ParameterType	axutil_hash_t *		65546	0					
ANR	65728	Identifier	namespaces		65546	1					
ANR	65729	Parameter	int * next_ns_index	162:3:5573:5590	65546	4	True				
ANR	65730	ParameterType	int *		65546	0					
ANR	65731	Identifier	next_ns_index		65546	1					
ANR	65732	CFGEntryNode	ENTRY		65546		True				
ANR	65733	CFGExitNode	EXIT		65546		True				
ANR	65734	Symbol	parent_element		65546						
ANR	65735	Symbol	parent		65546						
ANR	65736	Symbol	axiom_data_source_get_stream		65546						
ANR	65737	Symbol	Environment :: getEnv		65546						
ANR	65738	Symbol	current_node		65546						
ANR	65739	Symbol	NULL		65546						
ANR	65740	Symbol	tag_closed		65546						
ANR	65741	Symbol	axutil_strlen		65546						
ANR	65742	Symbol	parent_tag_closed		65546						
ANR	65743	Symbol	next_ns_index		65546						
ANR	65744	Symbol	data_source		65546						
ANR	65745	Symbol	axiom_node_get_data_element		65546						
ANR	65746	Symbol	text_value		65546						
ANR	65747	Symbol	serializeToString		65546						
ANR	65748	Symbol	stream		65546						
ANR	65749	Symbol	* Environment :: getEnv		65546						
ANR	65750	Symbol	Environment :: getEnv ( ) -> allocator		65546						
ANR	65751	Symbol	namespaces		65546						
ANR	65752	Function	AviaryCommon :: StatusCodeType :: getProperty1	207:12:7081:7229							
ANR	65753	FunctionDef	AviaryCommon :: StatusCodeType :: getProperty1 ()		65752	0					
ANR	65754	CompoundStatement		209:12:7171:7229	65752	0					
ANR	65755	ReturnStatement	return getStatusCodeType ( ) ;	210:16:7189:7215	65752	0	True				
ANR	65756	CallExpression	getStatusCodeType ( )		65752	0					
ANR	65757	Callee	getStatusCodeType		65752	0					
ANR	65758	Identifier	getStatusCodeType		65752	0					
ANR	65759	ArgumentList			65752	1					
ANR	65760	ReturnType	std :: string WSF_CALL		65752	1					
ANR	65761	Identifier	AviaryCommon :: StatusCodeType :: getProperty1		65752	2					
ANR	65762	ParameterList			65752	3					
ANR	65763	CFGEntryNode	ENTRY		65752		True				
ANR	65764	CFGExitNode	EXIT		65752		True				
ANR	65765	Symbol	getStatusCodeType		65752						
ANR	65766	Function	AviaryCommon :: StatusCodeType :: getStatusCodeType	216:12:7318:7477							
ANR	65767	FunctionDef	AviaryCommon :: StatusCodeType :: getStatusCodeType ()		65766	0					
ANR	65768	CompoundStatement		218:13:7414:7477	65766	0					
ANR	65769	ReturnStatement	return property_StatusCodeType ;	219:16:7432:7462	65766	0	True				
ANR	65770	Identifier	property_StatusCodeType		65766	0					
ANR	65771	ReturnType	std :: string WSF_CALL		65766	1					
ANR	65772	Identifier	AviaryCommon :: StatusCodeType :: getStatusCodeType		65766	2					
ANR	65773	ParameterList			65766	3					
ANR	65774	CFGEntryNode	ENTRY		65766		True				
ANR	65775	CFGExitNode	EXIT		65766		True				
ANR	65776	Symbol	property_StatusCodeType		65766						
ANR	65777	Function	AviaryCommon :: StatusCodeType :: setStatusCodeType	225:12:7565:8565							
ANR	65778	FunctionDef	AviaryCommon :: StatusCodeType :: setStatusCodeType (const std :: string arg_StatusCodeType)		65777	0					
ANR	65779	CompoundStatement		228:13:7712:8565	65777	0					
ANR	65780	IfStatement	if ( isValidStatusCodeType && arg_StatusCodeType == property_StatusCodeType )		65777	0					
ANR	65781	Condition	isValidStatusCodeType && arg_StatusCodeType == property_StatusCodeType	231:19:7751:7844	65777	0	True				
ANR	65782	AndExpression	isValidStatusCodeType && arg_StatusCodeType == property_StatusCodeType		65777	0		&&			
ANR	65783	Identifier	isValidStatusCodeType		65777	0					
ANR	65784	EqualityExpression	arg_StatusCodeType == property_StatusCodeType		65777	1		==			
ANR	65785	Identifier	arg_StatusCodeType		65777	0					
ANR	65786	Identifier	property_StatusCodeType		65777	1					
ANR	65787	CompoundStatement		6:16:150:150	65777	1					
ANR	65788	ReturnStatement	return true ;	235:20:7906:7917	65777	0	True				
ANR	65789	Identifier	true		65777	0					
ANR	65790	IfStatement	if ( arg_StatusCodeType . empty ( ) )		65777	1					
ANR	65791	Condition	arg_StatusCodeType . empty ( )	239:21:7976:8001	65777	0	True				
ANR	65792	CallExpression	arg_StatusCodeType . empty ( )		65777	0					
ANR	65793	Callee	arg_StatusCodeType . empty		65777	0					
ANR	65794	MemberAccess	arg_StatusCodeType . empty		65777	0					
ANR	65795	Identifier	arg_StatusCodeType		65777	0					
ANR	65796	Identifier	empty		65777	1					
ANR	65797	ArgumentList			65777	1					
ANR	65798	CompoundStatement		14:18:333:333	65777	1					
ANR	65799	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""StatusCodeType is being set to NULL, but it is not a nullable element"" )"	242:22:8070:8199	65777	0	True				
ANR	65800	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""StatusCodeType is being set to NULL, but it is not a nullable element"" )"		65777	0					
ANR	65801	Callee	WSF_LOG_ERROR_MSG		65777	0					
ANR	65802	Identifier	WSF_LOG_ERROR_MSG		65777	0					
ANR	65803	ArgumentList	Environment :: getEnv ( ) -> log		65777	1					
ANR	65804	Argument	Environment :: getEnv ( ) -> log		65777	0					
ANR	65805	PtrMemberAccess	Environment :: getEnv ( ) -> log		65777	0					
ANR	65806	CallExpression	Environment :: getEnv ( )		65777	0					
ANR	65807	Callee	Environment :: getEnv		65777	0					
ANR	65808	Identifier	Environment :: getEnv		65777	0					
ANR	65809	ArgumentList			65777	1					
ANR	65810	Identifier	log		65777	1					
ANR	65811	Argument	WSF_LOG_SI		65777	1					
ANR	65812	Identifier	WSF_LOG_SI		65777	0					
ANR	65813	Argument	"""StatusCodeType is being set to NULL, but it is not a nullable element"""		65777	2					
ANR	65814	PrimaryExpression	"""StatusCodeType is being set to NULL, but it is not a nullable element"""		65777	0					
ANR	65815	ReturnStatement	return AXIS2_FAILURE ;	243:22:8223:8243	65777	1	True				
ANR	65816	Identifier	AXIS2_FAILURE		65777	0					
ANR	65817	ExpressionStatement	resetStatusCodeType ( )	248:16:8316:8337	65777	2	True				
ANR	65818	CallExpression	resetStatusCodeType ( )		65777	0					
ANR	65819	Callee	resetStatusCodeType		65777	0					
ANR	65820	Identifier	resetStatusCodeType		65777	0					
ANR	65821	ArgumentList			65777	1					
ANR	65822	ExpressionStatement	property_StatusCodeType = std :: string ( arg_StatusCodeType . c_str ( ) )	251:24:8381:8446	65777	3	True				
ANR	65823	AssignmentExpression	property_StatusCodeType = std :: string ( arg_StatusCodeType . c_str ( ) )		65777	0		=			
ANR	65824	Identifier	property_StatusCodeType		65777	0					
ANR	65825	CallExpression	std :: string ( arg_StatusCodeType . c_str ( ) )		65777	1					
ANR	65826	Callee	std :: string		65777	0					
ANR	65827	Identifier	std :: string		65777	0					
ANR	65828	ArgumentList	arg_StatusCodeType . c_str ( )		65777	1					
ANR	65829	Argument	arg_StatusCodeType . c_str ( )		65777	0					
ANR	65830	CallExpression	arg_StatusCodeType . c_str ( )		65777	0					
ANR	65831	Callee	arg_StatusCodeType . c_str		65777	0					
ANR	65832	MemberAccess	arg_StatusCodeType . c_str		65777	0					
ANR	65833	Identifier	arg_StatusCodeType		65777	0					
ANR	65834	Identifier	c_str		65777	1					
ANR	65835	ArgumentList			65777	1					
ANR	65836	ExpressionStatement	isValidStatusCodeType = true	252:24:8472:8500	65777	4	True				
ANR	65837	AssignmentExpression	isValidStatusCodeType = true		65777	0		=			
ANR	65838	Identifier	isValidStatusCodeType		65777	0					
ANR	65839	Identifier	true		65777	1					
ANR	65840	ReturnStatement	return true ;	254:16:8539:8550	65777	5	True				
ANR	65841	Identifier	true		65777	0					
ANR	65842	ReturnType	bool WSF_CALL		65777	1					
ANR	65843	Identifier	AviaryCommon :: StatusCodeType :: setStatusCodeType		65777	2					
ANR	65844	ParameterList	const std :: string arg_StatusCodeType		65777	3					
ANR	65845	Parameter	const std :: string arg_StatusCodeType	227:20:7660:7696	65777	0	True				
ANR	65846	ParameterType	const std :: string		65777	0					
ANR	65847	Identifier	arg_StatusCodeType		65777	1					
ANR	65848	CFGEntryNode	ENTRY		65777		True				
ANR	65849	CFGExitNode	EXIT		65777		True				
ANR	65850	Symbol	isValidStatusCodeType		65777						
ANR	65851	Symbol	Environment :: getEnv		65777						
ANR	65852	Symbol	arg_StatusCodeType . c_str		65777						
ANR	65853	Symbol	arg_StatusCodeType . empty		65777						
ANR	65854	Symbol	WSF_LOG_SI		65777						
ANR	65855	Symbol	std :: string		65777						
ANR	65856	Symbol	* Environment :: getEnv		65777						
ANR	65857	Symbol	property_StatusCodeType		65777						
ANR	65858	Symbol	true		65777						
ANR	65859	Symbol	Environment :: getEnv ( ) -> log		65777						
ANR	65860	Symbol	AXIS2_FAILURE		65777						
ANR	65861	Symbol	arg_StatusCodeType		65777						
ANR	65862	Function	AviaryCommon :: StatusCodeType :: getStatusCodeTypeEnum	261:13:8686:9893							
ANR	65863	FunctionDef	AviaryCommon :: StatusCodeType :: getStatusCodeTypeEnum ()		65862	0					
ANR	65864	CompoundStatement		263:13:8797:9893	65862	0					
ANR	65865	IfStatement	"if ( axutil_strcmp ( property_StatusCodeType . c_str ( ) , ""OK"" ) == 0 )"		65862	0					
ANR	65866	Condition	"axutil_strcmp ( property_StatusCodeType . c_str ( ) , ""OK"" ) == 0"	266:21:8838:8894	65862	0	True				
ANR	65867	EqualityExpression	"axutil_strcmp ( property_StatusCodeType . c_str ( ) , ""OK"" ) == 0"		65862	0		==			
ANR	65868	CallExpression	"axutil_strcmp ( property_StatusCodeType . c_str ( ) , ""OK"" )"		65862	0					
ANR	65869	Callee	axutil_strcmp		65862	0					
ANR	65870	Identifier	axutil_strcmp		65862	0					
ANR	65871	ArgumentList	property_StatusCodeType . c_str ( )		65862	1					
ANR	65872	Argument	property_StatusCodeType . c_str ( )		65862	0					
ANR	65873	CallExpression	property_StatusCodeType . c_str ( )		65862	0					
ANR	65874	Callee	property_StatusCodeType . c_str		65862	0					
ANR	65875	MemberAccess	property_StatusCodeType . c_str		65862	0					
ANR	65876	Identifier	property_StatusCodeType		65862	0					
ANR	65877	Identifier	c_str		65862	1					
ANR	65878	ArgumentList			65862	1					
ANR	65879	Argument	"""OK"""		65862	1					
ANR	65880	PrimaryExpression	"""OK"""		65862	0					
ANR	65881	PrimaryExpression	0		65862	1					
ANR	65882	ReturnStatement	return StatusCodeType_OK ;	267:20:8917:8941	65862	1	True				
ANR	65883	Identifier	StatusCodeType_OK		65862	0					
ANR	65884	IfStatement	"if ( axutil_strcmp ( property_StatusCodeType . c_str ( ) , ""FAIL"" ) == 0 )"		65862	1					
ANR	65885	Condition	"axutil_strcmp ( property_StatusCodeType . c_str ( ) , ""FAIL"" ) == 0"	269:21:8978:9036	65862	0	True				
ANR	65886	EqualityExpression	"axutil_strcmp ( property_StatusCodeType . c_str ( ) , ""FAIL"" ) == 0"		65862	0		==			
ANR	65887	CallExpression	"axutil_strcmp ( property_StatusCodeType . c_str ( ) , ""FAIL"" )"		65862	0					
ANR	65888	Callee	axutil_strcmp		65862	0					
ANR	65889	Identifier	axutil_strcmp		65862	0					
ANR	65890	ArgumentList	property_StatusCodeType . c_str ( )		65862	1					
ANR	65891	Argument	property_StatusCodeType . c_str ( )		65862	0					
ANR	65892	CallExpression	property_StatusCodeType . c_str ( )		65862	0					
ANR	65893	Callee	property_StatusCodeType . c_str		65862	0					
ANR	65894	MemberAccess	property_StatusCodeType . c_str		65862	0					
ANR	65895	Identifier	property_StatusCodeType		65862	0					
ANR	65896	Identifier	c_str		65862	1					
ANR	65897	ArgumentList			65862	1					
ANR	65898	Argument	"""FAIL"""		65862	1					
ANR	65899	PrimaryExpression	"""FAIL"""		65862	0					
ANR	65900	PrimaryExpression	0		65862	1					
ANR	65901	ReturnStatement	return StatusCodeType_FAIL ;	270:20:9059:9085	65862	1	True				
ANR	65902	Identifier	StatusCodeType_FAIL		65862	0					
ANR	65903	IfStatement	"if ( axutil_strcmp ( property_StatusCodeType . c_str ( ) , ""NO_MATCH"" ) == 0 )"		65862	2					
ANR	65904	Condition	"axutil_strcmp ( property_StatusCodeType . c_str ( ) , ""NO_MATCH"" ) == 0"	272:21:9122:9184	65862	0	True				
ANR	65905	EqualityExpression	"axutil_strcmp ( property_StatusCodeType . c_str ( ) , ""NO_MATCH"" ) == 0"		65862	0		==			
ANR	65906	CallExpression	"axutil_strcmp ( property_StatusCodeType . c_str ( ) , ""NO_MATCH"" )"		65862	0					
ANR	65907	Callee	axutil_strcmp		65862	0					
ANR	65908	Identifier	axutil_strcmp		65862	0					
ANR	65909	ArgumentList	property_StatusCodeType . c_str ( )		65862	1					
ANR	65910	Argument	property_StatusCodeType . c_str ( )		65862	0					
ANR	65911	CallExpression	property_StatusCodeType . c_str ( )		65862	0					
ANR	65912	Callee	property_StatusCodeType . c_str		65862	0					
ANR	65913	MemberAccess	property_StatusCodeType . c_str		65862	0					
ANR	65914	Identifier	property_StatusCodeType		65862	0					
ANR	65915	Identifier	c_str		65862	1					
ANR	65916	ArgumentList			65862	1					
ANR	65917	Argument	"""NO_MATCH"""		65862	1					
ANR	65918	PrimaryExpression	"""NO_MATCH"""		65862	0					
ANR	65919	PrimaryExpression	0		65862	1					
ANR	65920	ReturnStatement	return StatusCodeType_NO_MATCH ;	273:20:9207:9237	65862	1	True				
ANR	65921	Identifier	StatusCodeType_NO_MATCH		65862	0					
ANR	65922	IfStatement	"if ( axutil_strcmp ( property_StatusCodeType . c_str ( ) , ""INVALID_OFFSET"" ) == 0 )"		65862	3					
ANR	65923	Condition	"axutil_strcmp ( property_StatusCodeType . c_str ( ) , ""INVALID_OFFSET"" ) == 0"	275:21:9274:9342	65862	0	True				
ANR	65924	EqualityExpression	"axutil_strcmp ( property_StatusCodeType . c_str ( ) , ""INVALID_OFFSET"" ) == 0"		65862	0		==			
ANR	65925	CallExpression	"axutil_strcmp ( property_StatusCodeType . c_str ( ) , ""INVALID_OFFSET"" )"		65862	0					
ANR	65926	Callee	axutil_strcmp		65862	0					
ANR	65927	Identifier	axutil_strcmp		65862	0					
ANR	65928	ArgumentList	property_StatusCodeType . c_str ( )		65862	1					
ANR	65929	Argument	property_StatusCodeType . c_str ( )		65862	0					
ANR	65930	CallExpression	property_StatusCodeType . c_str ( )		65862	0					
ANR	65931	Callee	property_StatusCodeType . c_str		65862	0					
ANR	65932	MemberAccess	property_StatusCodeType . c_str		65862	0					
ANR	65933	Identifier	property_StatusCodeType		65862	0					
ANR	65934	Identifier	c_str		65862	1					
ANR	65935	ArgumentList			65862	1					
ANR	65936	Argument	"""INVALID_OFFSET"""		65862	1					
ANR	65937	PrimaryExpression	"""INVALID_OFFSET"""		65862	0					
ANR	65938	PrimaryExpression	0		65862	1					
ANR	65939	ReturnStatement	return StatusCodeType_INVALID_OFFSET ;	276:20:9365:9401	65862	1	True				
ANR	65940	Identifier	StatusCodeType_INVALID_OFFSET		65862	0					
ANR	65941	IfStatement	"if ( axutil_strcmp ( property_StatusCodeType . c_str ( ) , ""UNIMPLEMENTED"" ) == 0 )"		65862	4					
ANR	65942	Condition	"axutil_strcmp ( property_StatusCodeType . c_str ( ) , ""UNIMPLEMENTED"" ) == 0"	278:21:9438:9505	65862	0	True				
ANR	65943	EqualityExpression	"axutil_strcmp ( property_StatusCodeType . c_str ( ) , ""UNIMPLEMENTED"" ) == 0"		65862	0		==			
ANR	65944	CallExpression	"axutil_strcmp ( property_StatusCodeType . c_str ( ) , ""UNIMPLEMENTED"" )"		65862	0					
ANR	65945	Callee	axutil_strcmp		65862	0					
ANR	65946	Identifier	axutil_strcmp		65862	0					
ANR	65947	ArgumentList	property_StatusCodeType . c_str ( )		65862	1					
ANR	65948	Argument	property_StatusCodeType . c_str ( )		65862	0					
ANR	65949	CallExpression	property_StatusCodeType . c_str ( )		65862	0					
ANR	65950	Callee	property_StatusCodeType . c_str		65862	0					
ANR	65951	MemberAccess	property_StatusCodeType . c_str		65862	0					
ANR	65952	Identifier	property_StatusCodeType		65862	0					
ANR	65953	Identifier	c_str		65862	1					
ANR	65954	ArgumentList			65862	1					
ANR	65955	Argument	"""UNIMPLEMENTED"""		65862	1					
ANR	65956	PrimaryExpression	"""UNIMPLEMENTED"""		65862	0					
ANR	65957	PrimaryExpression	0		65862	1					
ANR	65958	ReturnStatement	return StatusCodeType_UNIMPLEMENTED ;	279:20:9528:9563	65862	1	True				
ANR	65959	Identifier	StatusCodeType_UNIMPLEMENTED		65862	0					
ANR	65960	IfStatement	"if ( axutil_strcmp ( property_StatusCodeType . c_str ( ) , ""UNAVAILABLE"" ) == 0 )"		65862	5					
ANR	65961	Condition	"axutil_strcmp ( property_StatusCodeType . c_str ( ) , ""UNAVAILABLE"" ) == 0"	281:21:9600:9665	65862	0	True				
ANR	65962	EqualityExpression	"axutil_strcmp ( property_StatusCodeType . c_str ( ) , ""UNAVAILABLE"" ) == 0"		65862	0		==			
ANR	65963	CallExpression	"axutil_strcmp ( property_StatusCodeType . c_str ( ) , ""UNAVAILABLE"" )"		65862	0					
ANR	65964	Callee	axutil_strcmp		65862	0					
ANR	65965	Identifier	axutil_strcmp		65862	0					
ANR	65966	ArgumentList	property_StatusCodeType . c_str ( )		65862	1					
ANR	65967	Argument	property_StatusCodeType . c_str ( )		65862	0					
ANR	65968	CallExpression	property_StatusCodeType . c_str ( )		65862	0					
ANR	65969	Callee	property_StatusCodeType . c_str		65862	0					
ANR	65970	MemberAccess	property_StatusCodeType . c_str		65862	0					
ANR	65971	Identifier	property_StatusCodeType		65862	0					
ANR	65972	Identifier	c_str		65862	1					
ANR	65973	ArgumentList			65862	1					
ANR	65974	Argument	"""UNAVAILABLE"""		65862	1					
ANR	65975	PrimaryExpression	"""UNAVAILABLE"""		65862	0					
ANR	65976	PrimaryExpression	0		65862	1					
ANR	65977	ReturnStatement	return StatusCodeType_UNAVAILABLE ;	282:20:9688:9721	65862	1	True				
ANR	65978	Identifier	StatusCodeType_UNAVAILABLE		65862	0					
ANR	65979	ReturnStatement	return ( ADBStatusCodeTypeEnum ) - 1 ;	286:17:9846:9878	65862	6	True				
ANR	65980	CastExpression	( ADBStatusCodeTypeEnum ) - 1		65862	0					
ANR	65981	CastTarget	ADBStatusCodeTypeEnum		65862	0					
ANR	65982	UnaryOperationExpression	- 1		65862	1					
ANR	65983	UnaryOperator	-		65862	0					
ANR	65984	PrimaryExpression	1		65862	1					
ANR	65985	ReturnType	ADBStatusCodeTypeEnum WSF_CALL		65862	1					
ANR	65986	Identifier	AviaryCommon :: StatusCodeType :: getStatusCodeTypeEnum		65862	2					
ANR	65987	ParameterList			65862	3					
ANR	65988	CFGEntryNode	ENTRY		65862		True				
ANR	65989	CFGExitNode	EXIT		65862		True				
ANR	65990	Symbol	StatusCodeType_INVALID_OFFSET		65862						
ANR	65991	Symbol	StatusCodeType_UNAVAILABLE		65862						
ANR	65992	Symbol	StatusCodeType_OK		65862						
ANR	65993	Symbol	axutil_strcmp		65862						
ANR	65994	Symbol	StatusCodeType_NO_MATCH		65862						
ANR	65995	Symbol	property_StatusCodeType . c_str		65862						
ANR	65996	Symbol	StatusCodeType_UNIMPLEMENTED		65862						
ANR	65997	Symbol	property_StatusCodeType		65862						
ANR	65998	Symbol	StatusCodeType_FAIL		65862						
ANR	65999	Function	AviaryCommon :: StatusCodeType :: setStatusCodeTypeEnum	293:13:10028:12085							
ANR	66000	FunctionDef	AviaryCommon :: StatusCodeType :: setStatusCodeTypeEnum (const ADBStatusCodeTypeEnum arg_StatusCodeType)		65999	0					
ANR	66001	CompoundStatement		295:13:10168:12085	65999	0					
ANR	66002	ExpressionStatement	resetStatusCodeType ( )	299:16:10221:10242	65999	0	True				
ANR	66003	CallExpression	resetStatusCodeType ( )		65999	0					
ANR	66004	Callee	resetStatusCodeType		65999	0					
ANR	66005	Identifier	resetStatusCodeType		65999	0					
ANR	66006	ArgumentList			65999	1					
ANR	66007	SwitchStatement	switch ( arg_StatusCodeType )		65999	1					
ANR	66008	Condition	arg_StatusCodeType	302:27:10292:10309	65999	0	True				
ANR	66009	Identifier	arg_StatusCodeType		65999	0					
ANR	66010	CompoundStatement		9:19:162:162	65999	1					
ANR	66011	Label	case StatusCodeType_OK :	305:23:10378:10401	65999	0	True				
ANR	66012	Identifier	StatusCodeType_OK		65999	0					
ANR	66013	ExpressionStatement	"property_StatusCodeType = ( ""OK"" )"	306:28:10431:10463	65999	1	True				
ANR	66014	AssignmentExpression	"property_StatusCodeType = ( ""OK"" )"		65999	0		=			
ANR	66015	Identifier	property_StatusCodeType		65999	0					
ANR	66016	PrimaryExpression	"""OK"""		65999	1					
ANR	66017	BreakStatement	break ;	307:26:10491:10496	65999	2	True				
ANR	66018	Label	case StatusCodeType_FAIL :	309:23:10543:10568	65999	3	True				
ANR	66019	Identifier	StatusCodeType_FAIL		65999	0					
ANR	66020	ExpressionStatement	"property_StatusCodeType = ( ""FAIL"" )"	310:28:10598:10632	65999	4	True				
ANR	66021	AssignmentExpression	"property_StatusCodeType = ( ""FAIL"" )"		65999	0		=			
ANR	66022	Identifier	property_StatusCodeType		65999	0					
ANR	66023	PrimaryExpression	"""FAIL"""		65999	1					
ANR	66024	BreakStatement	break ;	311:26:10660:10665	65999	5	True				
ANR	66025	Label	case StatusCodeType_NO_MATCH :	313:23:10712:10741	65999	6	True				
ANR	66026	Identifier	StatusCodeType_NO_MATCH		65999	0					
ANR	66027	ExpressionStatement	"property_StatusCodeType = ( ""NO_MATCH"" )"	314:28:10771:10809	65999	7	True				
ANR	66028	AssignmentExpression	"property_StatusCodeType = ( ""NO_MATCH"" )"		65999	0		=			
ANR	66029	Identifier	property_StatusCodeType		65999	0					
ANR	66030	PrimaryExpression	"""NO_MATCH"""		65999	1					
ANR	66031	BreakStatement	break ;	315:26:10837:10842	65999	8	True				
ANR	66032	Label	case StatusCodeType_INVALID_OFFSET :	317:23:10889:10924	65999	9	True				
ANR	66033	Identifier	StatusCodeType_INVALID_OFFSET		65999	0					
ANR	66034	ExpressionStatement	"property_StatusCodeType = ( ""INVALID_OFFSET"" )"	318:28:10954:10998	65999	10	True				
ANR	66035	AssignmentExpression	"property_StatusCodeType = ( ""INVALID_OFFSET"" )"		65999	0		=			
ANR	66036	Identifier	property_StatusCodeType		65999	0					
ANR	66037	PrimaryExpression	"""INVALID_OFFSET"""		65999	1					
ANR	66038	BreakStatement	break ;	319:26:11026:11031	65999	11	True				
ANR	66039	Label	case StatusCodeType_UNIMPLEMENTED :	321:23:11078:11112	65999	12	True				
ANR	66040	Identifier	StatusCodeType_UNIMPLEMENTED		65999	0					
ANR	66041	ExpressionStatement	"property_StatusCodeType = ( ""UNIMPLEMENTED"" )"	322:28:11142:11185	65999	13	True				
ANR	66042	AssignmentExpression	"property_StatusCodeType = ( ""UNIMPLEMENTED"" )"		65999	0		=			
ANR	66043	Identifier	property_StatusCodeType		65999	0					
ANR	66044	PrimaryExpression	"""UNIMPLEMENTED"""		65999	1					
ANR	66045	BreakStatement	break ;	323:26:11213:11218	65999	14	True				
ANR	66046	Label	case StatusCodeType_UNAVAILABLE :	325:23:11265:11297	65999	15	True				
ANR	66047	Identifier	StatusCodeType_UNAVAILABLE		65999	0					
ANR	66048	ExpressionStatement	"property_StatusCodeType = ( ""UNAVAILABLE"" )"	326:28:11327:11368	65999	16	True				
ANR	66049	AssignmentExpression	"property_StatusCodeType = ( ""UNAVAILABLE"" )"		65999	0		=			
ANR	66050	Identifier	property_StatusCodeType		65999	0					
ANR	66051	PrimaryExpression	"""UNAVAILABLE"""		65999	1					
ANR	66052	BreakStatement	break ;	327:26:11396:11401	65999	17	True				
ANR	66053	Label	default :	330:23:11470:11477	65999	18	True				
ANR	66054	Identifier	default		65999	0					
ANR	66055	ExpressionStatement	isValidStatusCodeType = false	331:26:11505:11534	65999	19	True				
ANR	66056	AssignmentExpression	isValidStatusCodeType = false		65999	0		=			
ANR	66057	Identifier	isValidStatusCodeType		65999	0					
ANR	66058	Identifier	false		65999	1					
ANR	66059	ExpressionStatement	"property_StatusCodeType = """""	332:26:11562:11590	65999	20	True				
ANR	66060	AssignmentExpression	"property_StatusCodeType = """""		65999	0		=			
ANR	66061	Identifier	property_StatusCodeType		65999	0					
ANR	66062	PrimaryExpression	""""""		65999	1					
ANR	66063	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""Error setting StatusCodeType: undefined enum value"" )"	333:26:11618:11728	65999	21	True				
ANR	66064	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""Error setting StatusCodeType: undefined enum value"" )"		65999	0					
ANR	66065	Callee	WSF_LOG_ERROR_MSG		65999	0					
ANR	66066	Identifier	WSF_LOG_ERROR_MSG		65999	0					
ANR	66067	ArgumentList	Environment :: getEnv ( ) -> log		65999	1					
ANR	66068	Argument	Environment :: getEnv ( ) -> log		65999	0					
ANR	66069	PtrMemberAccess	Environment :: getEnv ( ) -> log		65999	0					
ANR	66070	CallExpression	Environment :: getEnv ( )		65999	0					
ANR	66071	Callee	Environment :: getEnv		65999	0					
ANR	66072	Identifier	Environment :: getEnv		65999	0					
ANR	66073	ArgumentList			65999	1					
ANR	66074	Identifier	log		65999	1					
ANR	66075	Argument	WSF_LOG_SI		65999	1					
ANR	66076	Identifier	WSF_LOG_SI		65999	0					
ANR	66077	Argument	"""Error setting StatusCodeType: undefined enum value"""		65999	2					
ANR	66078	PrimaryExpression	"""Error setting StatusCodeType: undefined enum value"""		65999	0					
ANR	66079	ReturnStatement	return false ;	334:26:11756:11768	65999	22	True				
ANR	66080	Identifier	false		65999	0					
ANR	66081	IfStatement	if ( property_StatusCodeType . empty ( ) )		65999	2					
ANR	66082	Condition	property_StatusCodeType . empty ( )	337:22:11830:11860	65999	0	True				
ANR	66083	CallExpression	property_StatusCodeType . empty ( )		65999	0					
ANR	66084	Callee	property_StatusCodeType . empty		65999	0					
ANR	66085	MemberAccess	property_StatusCodeType . empty		65999	0					
ANR	66086	Identifier	property_StatusCodeType		65999	0					
ANR	66087	Identifier	empty		65999	1					
ANR	66088	ArgumentList			65999	1					
ANR	66089	CompoundStatement		44:19:1713:1713	65999	1					
ANR	66090	ReturnStatement	return AXIS2_FAILURE ;	339:23:11907:11927	65999	0	True				
ANR	66091	Identifier	AXIS2_FAILURE		65999	0					
ANR	66092	ExpressionStatement	isValidStatusCodeType = true	341:21:11971:11999	65999	3	True				
ANR	66093	AssignmentExpression	isValidStatusCodeType = true		65999	0		=			
ANR	66094	Identifier	isValidStatusCodeType		65999	0					
ANR	66095	Identifier	true		65999	1					
ANR	66096	ReturnStatement	return true ;	344:16:12059:12070	65999	4	True				
ANR	66097	Identifier	true		65999	0					
ANR	66098	ReturnType	bool WSF_CALL		65999	1					
ANR	66099	Identifier	AviaryCommon :: StatusCodeType :: setStatusCodeTypeEnum		65999	2					
ANR	66100	ParameterList	const ADBStatusCodeTypeEnum arg_StatusCodeType		65999	3					
ANR	66101	Parameter	const ADBStatusCodeTypeEnum arg_StatusCodeType	294:64:10106:10152	65999	0	True				
ANR	66102	ParameterType	const ADBStatusCodeTypeEnum		65999	0					
ANR	66103	Identifier	arg_StatusCodeType		65999	1					
ANR	66104	CFGEntryNode	ENTRY		65999		True				
ANR	66105	CFGExitNode	EXIT		65999		True				
ANR	66106	Symbol	isValidStatusCodeType		65999						
ANR	66107	Symbol	Environment :: getEnv		65999						
ANR	66108	Symbol	WSF_LOG_SI		65999						
ANR	66109	Symbol	* Environment :: getEnv		65999						
ANR	66110	Symbol	property_StatusCodeType		65999						
ANR	66111	Symbol	false		65999						
ANR	66112	Symbol	true		65999						
ANR	66113	Symbol	Environment :: getEnv ( ) -> log		65999						
ANR	66114	Symbol	property_StatusCodeType . empty		65999						
ANR	66115	Symbol	AXIS2_FAILURE		65999						
ANR	66116	Symbol	arg_StatusCodeType		65999						
ANR	66117	Function	AviaryCommon :: StatusCodeType :: resetStatusCodeType	351:11:12185:12435							
ANR	66118	FunctionDef	AviaryCommon :: StatusCodeType :: resetStatusCodeType ()		66117	0					
ANR	66119	CompoundStatement		353:11:12273:12435	66117	0					
ANR	66120	IdentifierDeclStatement	int i = 0 ;	354:15:12290:12299	66117	0	True				
ANR	66121	IdentifierDecl	i = 0		66117	0					
ANR	66122	IdentifierDeclType	int		66117	0					
ANR	66123	Identifier	i		66117	1					
ANR	66124	AssignmentExpression	i = 0		66117	2		=			
ANR	66125	Identifier	i		66117	0					
ANR	66126	PrimaryExpression	0		66117	1					
ANR	66127	IdentifierDeclStatement	int count = 0 ;	355:15:12316:12329	66117	1	True				
ANR	66128	IdentifierDecl	count = 0		66117	0					
ANR	66129	IdentifierDeclType	int		66117	0					
ANR	66130	Identifier	count		66117	1					
ANR	66131	AssignmentExpression	count = 0		66117	2		=			
ANR	66132	Identifier	count		66117	0					
ANR	66133	PrimaryExpression	0		66117	1					
ANR	66134	ExpressionStatement	isValidStatusCodeType = false	359:15:12364:12393	66117	2	True				
ANR	66135	AssignmentExpression	isValidStatusCodeType = false		66117	0		=			
ANR	66136	Identifier	isValidStatusCodeType		66117	0					
ANR	66137	Identifier	false		66117	1					
ANR	66138	ReturnStatement	return true ;	360:15:12411:12422	66117	3	True				
ANR	66139	Identifier	true		66117	0					
ANR	66140	ReturnType	bool WSF_CALL		66117	1					
ANR	66141	Identifier	AviaryCommon :: StatusCodeType :: resetStatusCodeType		66117	2					
ANR	66142	ParameterList			66117	3					
ANR	66143	CFGEntryNode	ENTRY		66117		True				
ANR	66144	CFGExitNode	EXIT		66117		True				
ANR	66145	Symbol	isValidStatusCodeType		66117						
ANR	66146	Symbol	count		66117						
ANR	66147	Symbol	false		66117						
ANR	66148	Symbol	true		66117						
ANR	66149	Symbol	i		66117						
ANR	66150	Function	AviaryCommon :: StatusCodeType :: isStatusCodeTypeNil	366:11:12530:12677							
ANR	66151	FunctionDef	AviaryCommon :: StatusCodeType :: isStatusCodeTypeNil ()		66150	0					
ANR	66152	CompoundStatement		368:11:12618:12677	66150	0					
ANR	66153	ReturnStatement	return ! isValidStatusCodeType ;	369:15:12635:12664	66150	0	True				
ANR	66154	UnaryOperationExpression	! isValidStatusCodeType		66150	0					
ANR	66155	UnaryOperator	!		66150	0					
ANR	66156	Identifier	isValidStatusCodeType		66150	1					
ANR	66157	ReturnType	bool WSF_CALL		66150	1					
ANR	66158	Identifier	AviaryCommon :: StatusCodeType :: isStatusCodeTypeNil		66150	2					
ANR	66159	ParameterList			66150	3					
ANR	66160	CFGEntryNode	ENTRY		66150		True				
ANR	66161	CFGExitNode	EXIT		66150		True				
ANR	66162	Symbol	isValidStatusCodeType		66150						
ANR	66163	Function	AviaryCommon :: StatusCodeType :: setStatusCodeTypeNil	375:11:12792:12939							
ANR	66164	FunctionDef	AviaryCommon :: StatusCodeType :: setStatusCodeTypeNil ()		66163	0					
ANR	66165	CompoundStatement		377:11:12881:12939	66163	0					
ANR	66166	ReturnStatement	return resetStatusCodeType ( ) ;	378:15:12898:12926	66163	0	True				
ANR	66167	CallExpression	resetStatusCodeType ( )		66163	0					
ANR	66168	Callee	resetStatusCodeType		66163	0					
ANR	66169	Identifier	resetStatusCodeType		66163	0					
ANR	66170	ArgumentList			66163	1					
ANR	66171	ReturnType	bool WSF_CALL		66163	1					
ANR	66172	Identifier	AviaryCommon :: StatusCodeType :: setStatusCodeTypeNil		66163	2					
ANR	66173	ParameterList			66163	3					
ANR	66174	CFGEntryNode	ENTRY		66163		True				
ANR	66175	CFGExitNode	EXIT		66163		True				
ANR	66176	Symbol	resetStatusCodeType		66163						
