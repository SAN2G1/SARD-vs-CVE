command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1228583	File	data/converged/CVE-2011-4930_htcondor/declare_queues.cpp								
ANR	1228584	Function	main	34:0:1007:3006							
ANR	1228585	FunctionDef	"main (int argc , char * * argv)"		1228584	0					
ANR	1228586	CompoundStatement		34:32:1039:3006	1228584	0					
ANR	1228587	IdentifierDeclStatement	"const char * host = argc > 1 ? argv [ 1 ] : ""127.0.0.1"" ;"	35:2:1043:1092	1228584	0	True				
ANR	1228588	IdentifierDecl	"* host = argc > 1 ? argv [ 1 ] : ""127.0.0.1"""		1228584	0					
ANR	1228589	IdentifierDeclType	const char *		1228584	0					
ANR	1228590	Identifier	host		1228584	1					
ANR	1228591	AssignmentExpression	"* host = argc > 1 ? argv [ 1 ] : ""127.0.0.1"""		1228584	2		=			
ANR	1228592	Identifier	host		1228584	0					
ANR	1228593	ConditionalExpression	"argc > 1 ? argv [ 1 ] : ""127.0.0.1"""		1228584	1					
ANR	1228594	Condition	argc > 1		1228584	0					
ANR	1228595	RelationalExpression	argc > 1		1228584	0		>			
ANR	1228596	Identifier	argc		1228584	0					
ANR	1228597	PrimaryExpression	1		1228584	1					
ANR	1228598	ArrayIndexing	argv [ 1 ]		1228584	1					
ANR	1228599	Identifier	argv		1228584	0					
ANR	1228600	PrimaryExpression	1		1228584	1					
ANR	1228601	PrimaryExpression	"""127.0.0.1"""		1228584	2					
ANR	1228602	IdentifierDeclStatement	std :: string sPort = getPort ( ) ;	36:2:1096:1125	1228584	1	True				
ANR	1228603	IdentifierDecl	sPort = getPort ( )		1228584	0					
ANR	1228604	IdentifierDeclType	std :: string		1228584	0					
ANR	1228605	Identifier	sPort		1228584	1					
ANR	1228606	AssignmentExpression	sPort = getPort ( )		1228584	2		=			
ANR	1228607	Identifier	sPort		1228584	0					
ANR	1228608	CallExpression	getPort ( )		1228584	1					
ANR	1228609	Callee	getPort		1228584	0					
ANR	1228610	Identifier	getPort		1228584	0					
ANR	1228611	ArgumentList			1228584	1					
ANR	1228612	IdentifierDeclStatement	int port = argc > 2 ? atoi ( argv [ 2 ] ) : atoi ( sPort . c_str ( ) ) ;	37:2:1129:1185	1228584	2	True				
ANR	1228613	IdentifierDecl	port = argc > 2 ? atoi ( argv [ 2 ] ) : atoi ( sPort . c_str ( ) )		1228584	0					
ANR	1228614	IdentifierDeclType	int		1228584	0					
ANR	1228615	Identifier	port		1228584	1					
ANR	1228616	AssignmentExpression	port = argc > 2 ? atoi ( argv [ 2 ] ) : atoi ( sPort . c_str ( ) )		1228584	2		=			
ANR	1228617	Identifier	port		1228584	0					
ANR	1228618	ConditionalExpression	argc > 2 ? atoi ( argv [ 2 ] ) : atoi ( sPort . c_str ( ) )		1228584	1					
ANR	1228619	Condition	argc > 2		1228584	0					
ANR	1228620	RelationalExpression	argc > 2		1228584	0		>			
ANR	1228621	Identifier	argc		1228584	0					
ANR	1228622	PrimaryExpression	2		1228584	1					
ANR	1228623	CallExpression	atoi ( argv [ 2 ] )		1228584	1					
ANR	1228624	Callee	atoi		1228584	0					
ANR	1228625	Identifier	atoi		1228584	0					
ANR	1228626	ArgumentList	argv [ 2 ]		1228584	1					
ANR	1228627	Argument	argv [ 2 ]		1228584	0					
ANR	1228628	ArrayIndexing	argv [ 2 ]		1228584	0					
ANR	1228629	Identifier	argv		1228584	0					
ANR	1228630	PrimaryExpression	2		1228584	1					
ANR	1228631	CallExpression	atoi ( sPort . c_str ( ) )		1228584	2					
ANR	1228632	Callee	atoi		1228584	0					
ANR	1228633	Identifier	atoi		1228584	0					
ANR	1228634	ArgumentList	sPort . c_str ( )		1228584	1					
ANR	1228635	Argument	sPort . c_str ( )		1228584	0					
ANR	1228636	CallExpression	sPort . c_str ( )		1228584	0					
ANR	1228637	Callee	sPort . c_str		1228584	0					
ANR	1228638	MemberAccess	sPort . c_str		1228584	0					
ANR	1228639	Identifier	sPort		1228584	0					
ANR	1228640	Identifier	c_str		1228584	1					
ANR	1228641	ArgumentList			1228584	1					
ANR	1228642	ExpressionStatement	"printf ( ""Port: %i \\n"" , port )"	38:2:1222:1249	1228584	3	True				
ANR	1228643	CallExpression	"printf ( ""Port: %i \\n"" , port )"		1228584	0					
ANR	1228644	Callee	printf		1228584	0					
ANR	1228645	Identifier	printf		1228584	0					
ANR	1228646	ArgumentList	"""Port: %i \\n"""		1228584	1					
ANR	1228647	Argument	"""Port: %i \\n"""		1228584	0					
ANR	1228648	PrimaryExpression	"""Port: %i \\n"""		1228584	0					
ANR	1228649	Argument	port		1228584	1					
ANR	1228650	Identifier	port		1228584	0					
ANR	1228651	IdentifierDeclStatement	Connection connection ;	39:2:1253:1274	1228584	4	True				
ANR	1228652	IdentifierDecl	connection		1228584	0					
ANR	1228653	IdentifierDeclType	Connection		1228584	0					
ANR	1228654	Identifier	connection		1228584	1					
ANR	1228655	TryStatement	try		1228584	5					
ANR	1228656	CompoundStatement		10:4:282:324	1228584	0					
ANR	1228657	ExpressionStatement	"connection . open ( host , port )"		1228584	0					
ANR	1228658	CallExpression	"connection . open ( host , port )"		1228584	0					
ANR	1228659	Callee	connection . open		1228584	0					
ANR	1228660	MemberAccess	connection . open		1228584	0					
ANR	1228661	Identifier	connection		1228584	0					
ANR	1228662	Identifier	open		1228584	1					
ANR	1228663	ArgumentList	host		1228584	1					
ANR	1228664	Argument	host		1228584	0					
ANR	1228665	Identifier	host		1228584	0					
ANR	1228666	Argument	port		1228584	1					
ANR	1228667	Identifier	port		1228584	0					
ANR	1228668	IdentifierDeclStatement	Session session = connection . newSession ( ) ;		1228584	1					
ANR	1228669	IdentifierDecl	session = connection . newSession ( )		1228584	0					
ANR	1228670	IdentifierDeclType	Session		1228584	0					
ANR	1228671	Identifier	session		1228584	1					
ANR	1228672	AssignmentExpression	session = connection . newSession ( )		1228584	2		=			
ANR	1228673	Identifier	session		1228584	0					
ANR	1228674	CallExpression	connection . newSession ( )		1228584	1					
ANR	1228675	Callee	connection . newSession		1228584	0					
ANR	1228676	MemberAccess	connection . newSession		1228584	0					
ANR	1228677	Identifier	connection		1228584	0					
ANR	1228678	Identifier	newSession		1228584	1					
ANR	1228679	ArgumentList			1228584	1					
ANR	1228680	ExpressionStatement	"session . queueDeclare ( arg :: queue = ""condor_queue"" , arg :: exclusive = false )"		1228584	2					
ANR	1228681	CallExpression	"session . queueDeclare ( arg :: queue = ""condor_queue"" , arg :: exclusive = false )"		1228584	0					
ANR	1228682	Callee	session . queueDeclare		1228584	0					
ANR	1228683	MemberAccess	session . queueDeclare		1228584	0					
ANR	1228684	Identifier	session		1228584	0					
ANR	1228685	Identifier	queueDeclare		1228584	1					
ANR	1228686	ArgumentList	"arg :: queue = ""condor_queue"""		1228584	1					
ANR	1228687	Argument	"arg :: queue = ""condor_queue"""		1228584	0					
ANR	1228688	AssignmentExpression	"arg :: queue = ""condor_queue"""		1228584	0		=			
ANR	1228689	Identifier	arg :: queue		1228584	0					
ANR	1228690	PrimaryExpression	"""condor_queue"""		1228584	1					
ANR	1228691	Argument	arg :: exclusive = false		1228584	1					
ANR	1228692	AssignmentExpression	arg :: exclusive = false		1228584	0		=			
ANR	1228693	Identifier	arg :: exclusive		1228584	0					
ANR	1228694	Identifier	false		1228584	1					
ANR	1228695	ExpressionStatement	"session . queueDeclare ( arg :: queue = ""log_msg_queue"" , arg :: exclusive = false )"		1228584	3					
ANR	1228696	CallExpression	"session . queueDeclare ( arg :: queue = ""log_msg_queue"" , arg :: exclusive = false )"		1228584	0					
ANR	1228697	Callee	session . queueDeclare		1228584	0					
ANR	1228698	MemberAccess	session . queueDeclare		1228584	0					
ANR	1228699	Identifier	session		1228584	0					
ANR	1228700	Identifier	queueDeclare		1228584	1					
ANR	1228701	ArgumentList	"arg :: queue = ""log_msg_queue"""		1228584	1					
ANR	1228702	Argument	"arg :: queue = ""log_msg_queue"""		1228584	0					
ANR	1228703	AssignmentExpression	"arg :: queue = ""log_msg_queue"""		1228584	0		=			
ANR	1228704	Identifier	arg :: queue		1228584	0					
ANR	1228705	PrimaryExpression	"""log_msg_queue"""		1228584	1					
ANR	1228706	Argument	arg :: exclusive = false		1228584	1					
ANR	1228707	AssignmentExpression	arg :: exclusive = false		1228584	0		=			
ANR	1228708	Identifier	arg :: exclusive		1228584	0					
ANR	1228709	Identifier	false		1228584	1					
ANR	1228710	ExpressionStatement	"session . queueDeclare ( arg :: queue = ""log_msg_queue1"" , arg :: exclusive = false )"		1228584	4					
ANR	1228711	CallExpression	"session . queueDeclare ( arg :: queue = ""log_msg_queue1"" , arg :: exclusive = false )"		1228584	0					
ANR	1228712	Callee	session . queueDeclare		1228584	0					
ANR	1228713	MemberAccess	session . queueDeclare		1228584	0					
ANR	1228714	Identifier	session		1228584	0					
ANR	1228715	Identifier	queueDeclare		1228584	1					
ANR	1228716	ArgumentList	"arg :: queue = ""log_msg_queue1"""		1228584	1					
ANR	1228717	Argument	"arg :: queue = ""log_msg_queue1"""		1228584	0					
ANR	1228718	AssignmentExpression	"arg :: queue = ""log_msg_queue1"""		1228584	0		=			
ANR	1228719	Identifier	arg :: queue		1228584	0					
ANR	1228720	PrimaryExpression	"""log_msg_queue1"""		1228584	1					
ANR	1228721	Argument	arg :: exclusive = false		1228584	1					
ANR	1228722	AssignmentExpression	arg :: exclusive = false		1228584	0		=			
ANR	1228723	Identifier	arg :: exclusive		1228584	0					
ANR	1228724	Identifier	false		1228584	1					
ANR	1228725	ExpressionStatement	"session . exchangeBind ( arg :: exchange = ""amq.topic"" , arg :: queue = ""condor_queue"" , arg :: bindingKey = ""routing_key1"" )"		1228584	5					
ANR	1228726	CallExpression	"session . exchangeBind ( arg :: exchange = ""amq.topic"" , arg :: queue = ""condor_queue"" , arg :: bindingKey = ""routing_key1"" )"		1228584	0					
ANR	1228727	Callee	session . exchangeBind		1228584	0					
ANR	1228728	MemberAccess	session . exchangeBind		1228584	0					
ANR	1228729	Identifier	session		1228584	0					
ANR	1228730	Identifier	exchangeBind		1228584	1					
ANR	1228731	ArgumentList	"arg :: exchange = ""amq.topic"""		1228584	1					
ANR	1228732	Argument	"arg :: exchange = ""amq.topic"""		1228584	0					
ANR	1228733	AssignmentExpression	"arg :: exchange = ""amq.topic"""		1228584	0		=			
ANR	1228734	Identifier	arg :: exchange		1228584	0					
ANR	1228735	PrimaryExpression	"""amq.topic"""		1228584	1					
ANR	1228736	Argument	"arg :: queue = ""condor_queue"""		1228584	1					
ANR	1228737	AssignmentExpression	"arg :: queue = ""condor_queue"""		1228584	0		=			
ANR	1228738	Identifier	arg :: queue		1228584	0					
ANR	1228739	PrimaryExpression	"""condor_queue"""		1228584	1					
ANR	1228740	Argument	"arg :: bindingKey = ""routing_key1"""		1228584	2					
ANR	1228741	AssignmentExpression	"arg :: bindingKey = ""routing_key1"""		1228584	0		=			
ANR	1228742	Identifier	arg :: bindingKey		1228584	0					
ANR	1228743	PrimaryExpression	"""routing_key1"""		1228584	1					
ANR	1228744	ExpressionStatement	"session . exchangeBind ( arg :: exchange = ""amq.topic"" , arg :: queue = ""log_msg_queue"" , arg :: bindingKey = ""routing_key1"" )"		1228584	6					
ANR	1228745	CallExpression	"session . exchangeBind ( arg :: exchange = ""amq.topic"" , arg :: queue = ""log_msg_queue"" , arg :: bindingKey = ""routing_key1"" )"		1228584	0					
ANR	1228746	Callee	session . exchangeBind		1228584	0					
ANR	1228747	MemberAccess	session . exchangeBind		1228584	0					
ANR	1228748	Identifier	session		1228584	0					
ANR	1228749	Identifier	exchangeBind		1228584	1					
ANR	1228750	ArgumentList	"arg :: exchange = ""amq.topic"""		1228584	1					
ANR	1228751	Argument	"arg :: exchange = ""amq.topic"""		1228584	0					
ANR	1228752	AssignmentExpression	"arg :: exchange = ""amq.topic"""		1228584	0		=			
ANR	1228753	Identifier	arg :: exchange		1228584	0					
ANR	1228754	PrimaryExpression	"""amq.topic"""		1228584	1					
ANR	1228755	Argument	"arg :: queue = ""log_msg_queue"""		1228584	1					
ANR	1228756	AssignmentExpression	"arg :: queue = ""log_msg_queue"""		1228584	0		=			
ANR	1228757	Identifier	arg :: queue		1228584	0					
ANR	1228758	PrimaryExpression	"""log_msg_queue"""		1228584	1					
ANR	1228759	Argument	"arg :: bindingKey = ""routing_key1"""		1228584	2					
ANR	1228760	AssignmentExpression	"arg :: bindingKey = ""routing_key1"""		1228584	0		=			
ANR	1228761	Identifier	arg :: bindingKey		1228584	0					
ANR	1228762	PrimaryExpression	"""routing_key1"""		1228584	1					
ANR	1228763	ExpressionStatement	"session . exchangeBind ( arg :: exchange = ""amq.topic"" , arg :: queue = ""log_msg_queue1"" , arg :: bindingKey = ""routing_key1"" )"		1228584	7					
ANR	1228764	CallExpression	"session . exchangeBind ( arg :: exchange = ""amq.topic"" , arg :: queue = ""log_msg_queue1"" , arg :: bindingKey = ""routing_key1"" )"		1228584	0					
ANR	1228765	Callee	session . exchangeBind		1228584	0					
ANR	1228766	MemberAccess	session . exchangeBind		1228584	0					
ANR	1228767	Identifier	session		1228584	0					
ANR	1228768	Identifier	exchangeBind		1228584	1					
ANR	1228769	ArgumentList	"arg :: exchange = ""amq.topic"""		1228584	1					
ANR	1228770	Argument	"arg :: exchange = ""amq.topic"""		1228584	0					
ANR	1228771	AssignmentExpression	"arg :: exchange = ""amq.topic"""		1228584	0		=			
ANR	1228772	Identifier	arg :: exchange		1228584	0					
ANR	1228773	PrimaryExpression	"""amq.topic"""		1228584	1					
ANR	1228774	Argument	"arg :: queue = ""log_msg_queue1"""		1228584	1					
ANR	1228775	AssignmentExpression	"arg :: queue = ""log_msg_queue1"""		1228584	0		=			
ANR	1228776	Identifier	arg :: queue		1228584	0					
ANR	1228777	PrimaryExpression	"""log_msg_queue1"""		1228584	1					
ANR	1228778	Argument	"arg :: bindingKey = ""routing_key1"""		1228584	2					
ANR	1228779	AssignmentExpression	"arg :: bindingKey = ""routing_key1"""		1228584	0		=			
ANR	1228780	Identifier	arg :: bindingKey		1228584	0					
ANR	1228781	PrimaryExpression	"""routing_key1"""		1228584	1					
ANR	1228782	ExpressionStatement	connection . close ( )		1228584	8					
ANR	1228783	CallExpression	connection . close ( )		1228584	0					
ANR	1228784	Callee	connection . close		1228584	0					
ANR	1228785	MemberAccess	connection . close		1228584	0					
ANR	1228786	Identifier	connection		1228584	0					
ANR	1228787	Identifier	close		1228584	1					
ANR	1228788	ArgumentList			1228584	1					
ANR	1228789	ReturnStatement	return 0 ;		1228584	9					
ANR	1228790	PrimaryExpression	0		1228584	0					
ANR	1228791	CatchList			1228584	1					
ANR	1228792	CatchStatement	catch ( const std :: exception & error )		1228584	0					
ANR	1228793	Identifier	error		1228584	0					
ANR	1228794	CompoundStatement		44:39:1903:1903	1228584	1					
ANR	1228795	ExpressionStatement	std :: cout << error . what ( ) << std :: endl	78:4:2949:2987	1228584	0	True				
ANR	1228796	ShiftExpression	std :: cout << error . what ( ) << std :: endl		1228584	0		<<			
ANR	1228797	Identifier	std :: cout		1228584	0					
ANR	1228798	ShiftExpression	error . what ( ) << std :: endl		1228584	1		<<			
ANR	1228799	CallExpression	error . what ( )		1228584	0					
ANR	1228800	Callee	error . what		1228584	0					
ANR	1228801	MemberAccess	error . what		1228584	0					
ANR	1228802	Identifier	error		1228584	0					
ANR	1228803	Identifier	what		1228584	1					
ANR	1228804	ArgumentList			1228584	1					
ANR	1228805	Identifier	std :: endl		1228584	1					
ANR	1228806	ReturnStatement	return 1 ;	80:2:2995:3003	1228584	6	True				
ANR	1228807	PrimaryExpression	1		1228584	0					
ANR	1228808	ReturnType	int		1228584	1					
ANR	1228809	Identifier	main		1228584	2					
ANR	1228810	ParameterList	"int argc , char * * argv"		1228584	3					
ANR	1228811	Parameter	int argc	34:9:1016:1023	1228584	0	True				
ANR	1228812	ParameterType	int		1228584	0					
ANR	1228813	Identifier	argc		1228584	1					
ANR	1228814	Parameter	char * * argv	34:19:1026:1036	1228584	1	True				
ANR	1228815	ParameterType	char * *		1228584	0					
ANR	1228816	Identifier	argv		1228584	1					
ANR	1228817	CFGEntryNode	ENTRY		1228584		True				
ANR	1228818	CFGExitNode	EXIT		1228584		True				
ANR	1228819	CFGErrorNode	ERROR		1228584		True				
ANR	1228820	Symbol	argc		1228584						
ANR	1228821	Symbol	atoi		1228584						
ANR	1228822	Symbol	getPort		1228584						
ANR	1228823	Symbol	port		1228584						
ANR	1228824	Symbol	host		1228584						
ANR	1228825	Symbol	sPort . c_str		1228584						
ANR	1228826	Symbol	* argv		1228584						
ANR	1228827	Symbol	connection		1228584						
ANR	1228828	Symbol	argv		1228584						
ANR	1228829	Symbol	sPort		1228584						
