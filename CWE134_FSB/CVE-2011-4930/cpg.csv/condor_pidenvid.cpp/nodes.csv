command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	931867	File	data/converged/CVE-2011-4930_htcondor/condor_pidenvid.cpp								
ANR	931868	DeclStmt									
ANR	931869	Decl							DLL_IMPORT_MAGIC extern char	DLL_IMPORT_MAGIC extern char * *	environ
ANR	931870	Function	pidenvid_init	28:0:977:1179							
ANR	931871	FunctionDef	pidenvid_init (PidEnvID * penvid)		931870	0					
ANR	931872	CompoundStatement		29:0:1014:1179	931870	0					
ANR	931873	ExpressionStatement	"memset ( penvid , 0 , sizeof ( PidEnvID ) )"	31:1:1050:1085	931870	0	True				
ANR	931874	CallExpression	"memset ( penvid , 0 , sizeof ( PidEnvID ) )"		931870	0					
ANR	931875	Callee	memset		931870	0					
ANR	931876	Identifier	memset		931870	0					
ANR	931877	ArgumentList	penvid		931870	1					
ANR	931878	Argument	penvid		931870	0					
ANR	931879	Identifier	penvid		931870	0					
ANR	931880	Argument	0		931870	1					
ANR	931881	PrimaryExpression	0		931870	0					
ANR	931882	Argument	sizeof ( PidEnvID )		931870	2					
ANR	931883	SizeofExpression	sizeof ( PidEnvID )		931870	0					
ANR	931884	Sizeof	sizeof		931870	0					
ANR	931885	SizeofOperand	PidEnvID		931870	1					
ANR	931886	ExpressionStatement	penvid -> num = PIDENVID_MAX	34:1:1151:1177	931870	1	True				
ANR	931887	AssignmentExpression	penvid -> num = PIDENVID_MAX		931870	0		=			
ANR	931888	PtrMemberAccess	penvid -> num		931870	0					
ANR	931889	Identifier	penvid		931870	0					
ANR	931890	Identifier	num		931870	1					
ANR	931891	Identifier	PIDENVID_MAX		931870	1					
ANR	931892	ReturnType	void		931870	1					
ANR	931893	Identifier	pidenvid_init		931870	2					
ANR	931894	ParameterList	PidEnvID * penvid		931870	3					
ANR	931895	Parameter	PidEnvID * penvid	28:19:996:1011	931870	0	True				
ANR	931896	ParameterType	PidEnvID *		931870	0					
ANR	931897	Identifier	penvid		931870	1					
ANR	931898	CFGEntryNode	ENTRY		931870		True				
ANR	931899	CFGExitNode	EXIT		931870		True				
ANR	931900	Symbol	* penvid		931870						
ANR	931901	Symbol	penvid -> num		931870						
ANR	931902	Symbol	penvid		931870						
ANR	931903	Symbol	PIDENVID_MAX		931870						
ANR	931904	Function	pidenvid_filter_and_insert	39:0:1280:1851							
ANR	931905	FunctionDef	"pidenvid_filter_and_insert (PidEnvID * penvid , char * * env)"		931904	0					
ANR	931906	CompoundStatement		40:0:1341:1851	931904	0					
ANR	931907	IdentifierDeclStatement	int i ;	41:1:1344:1349	931904	0	True				
ANR	931908	IdentifierDecl	i		931904	0					
ANR	931909	IdentifierDeclType	int		931904	0					
ANR	931910	Identifier	i		931904	1					
ANR	931911	IdentifierDeclStatement	char * * curr ;	42:1:1352:1363	931904	1	True				
ANR	931912	IdentifierDecl	* * curr		931904	0					
ANR	931913	IdentifierDeclType	char * *		931904	0					
ANR	931914	Identifier	curr		931904	1					
ANR	931915	ExpressionStatement	i = 0	44:1:1367:1372	931904	2	True				
ANR	931916	AssignmentExpression	i = 0		931904	0		=			
ANR	931917	Identifier	i		931904	0					
ANR	931918	PrimaryExpression	0		931904	1					
ANR	931919	ForStatement	for ( curr = env ; * curr != NULL ; curr ++ )		931904	3					
ANR	931920	ForInit	curr = env ;	46:6:1381:1391	931904	0	True				
ANR	931921	AssignmentExpression	curr = env		931904	0		=			
ANR	931922	Identifier	curr		931904	0					
ANR	931923	Identifier	env		931904	1					
ANR	931924	Condition	* curr != NULL	46:18:1393:1405	931904	1	True				
ANR	931925	EqualityExpression	* curr != NULL		931904	0		!=			
ANR	931926	UnaryOperationExpression	* curr		931904	0					
ANR	931927	UnaryOperator	*		931904	0					
ANR	931928	Identifier	curr		931904	1					
ANR	931929	Identifier	NULL		931904	1					
ANR	931930	PostIncDecOperationExpression	curr ++	46:33:1408:1413	931904	2	True				
ANR	931931	Identifier	curr		931904	0					
ANR	931932	IncDec	++		931904	1					
ANR	931933	CompoundStatement		7:41:74:74	931904	3					
ANR	931934	IfStatement	"if ( strncmp ( * curr , PIDENVID_PREFIX , strlen ( PIDENVID_PREFIX ) ) == 0 )"		931904	0					
ANR	931935	Condition	"strncmp ( * curr , PIDENVID_PREFIX , strlen ( PIDENVID_PREFIX ) ) == 0"	48:6:1425:1485	931904	0	True				
ANR	931936	EqualityExpression	"strncmp ( * curr , PIDENVID_PREFIX , strlen ( PIDENVID_PREFIX ) ) == 0"		931904	0		==			
ANR	931937	CallExpression	"strncmp ( * curr , PIDENVID_PREFIX , strlen ( PIDENVID_PREFIX ) )"		931904	0					
ANR	931938	Callee	strncmp		931904	0					
ANR	931939	Identifier	strncmp		931904	0					
ANR	931940	ArgumentList	* curr		931904	1					
ANR	931941	Argument	* curr		931904	0					
ANR	931942	UnaryOperationExpression	* curr		931904	0					
ANR	931943	UnaryOperator	*		931904	0					
ANR	931944	Identifier	curr		931904	1					
ANR	931945	Argument	PIDENVID_PREFIX		931904	1					
ANR	931946	Identifier	PIDENVID_PREFIX		931904	0					
ANR	931947	Argument	strlen ( PIDENVID_PREFIX )		931904	2					
ANR	931948	CallExpression	strlen ( PIDENVID_PREFIX )		931904	0					
ANR	931949	Callee	strlen		931904	0					
ANR	931950	Identifier	strlen		931904	0					
ANR	931951	ArgumentList	PIDENVID_PREFIX		931904	1					
ANR	931952	Argument	PIDENVID_PREFIX		931904	0					
ANR	931953	Identifier	PIDENVID_PREFIX		931904	0					
ANR	931954	PrimaryExpression	0		931904	1					
ANR	931955	CompoundStatement		9:69:146:146	931904	1					
ANR	931956	IfStatement	if ( i == PIDENVID_MAX )		931904	0					
ANR	931957	Condition	i == PIDENVID_MAX	50:7:1498:1514	931904	0	True				
ANR	931958	EqualityExpression	i == PIDENVID_MAX		931904	0		==			
ANR	931959	Identifier	i		931904	0					
ANR	931960	Identifier	PIDENVID_MAX		931904	1					
ANR	931961	CompoundStatement		11:26:175:175	931904	1					
ANR	931962	ReturnStatement	return PIDENVID_NO_SPACE ;	51:4:1523:1547	931904	0	True				
ANR	931963	Identifier	PIDENVID_NO_SPACE		931904	0					
ANR	931964	IfStatement	if ( ( strlen ( * curr ) + 1 ) >= PIDENVID_ENVID_SIZE )		931904	1					
ANR	931965	Condition	( strlen ( * curr ) + 1 ) >= PIDENVID_ENVID_SIZE	54:7:1562:1603	931904	0	True				
ANR	931966	RelationalExpression	( strlen ( * curr ) + 1 ) >= PIDENVID_ENVID_SIZE		931904	0		>=			
ANR	931967	AdditiveExpression	strlen ( * curr ) + 1		931904	0		+			
ANR	931968	CallExpression	strlen ( * curr )		931904	0					
ANR	931969	Callee	strlen		931904	0					
ANR	931970	Identifier	strlen		931904	0					
ANR	931971	ArgumentList	* curr		931904	1					
ANR	931972	Argument	* curr		931904	0					
ANR	931973	UnaryOperationExpression	* curr		931904	0					
ANR	931974	UnaryOperator	*		931904	0					
ANR	931975	Identifier	curr		931904	1					
ANR	931976	PrimaryExpression	1		931904	1					
ANR	931977	Identifier	PIDENVID_ENVID_SIZE		931904	1					
ANR	931978	CompoundStatement		15:51:264:264	931904	1					
ANR	931979	ReturnStatement	return PIDENVID_OVERSIZED ;	55:4:1612:1637	931904	0	True				
ANR	931980	Identifier	PIDENVID_OVERSIZED		931904	0					
ANR	931981	ExpressionStatement	"strncpy ( penvid -> ancestors [ i ] . envid , * curr , PIDENVID_ENVID_SIZE )"	58:3:1648:1711	931904	2	True				
ANR	931982	CallExpression	"strncpy ( penvid -> ancestors [ i ] . envid , * curr , PIDENVID_ENVID_SIZE )"		931904	0					
ANR	931983	Callee	strncpy		931904	0					
ANR	931984	Identifier	strncpy		931904	0					
ANR	931985	ArgumentList	penvid -> ancestors [ i ] . envid		931904	1					
ANR	931986	Argument	penvid -> ancestors [ i ] . envid		931904	0					
ANR	931987	MemberAccess	penvid -> ancestors [ i ] . envid		931904	0					
ANR	931988	ArrayIndexing	penvid -> ancestors [ i ]		931904	0					
ANR	931989	PtrMemberAccess	penvid -> ancestors		931904	0					
ANR	931990	Identifier	penvid		931904	0					
ANR	931991	Identifier	ancestors		931904	1					
ANR	931992	Identifier	i		931904	1					
ANR	931993	Identifier	envid		931904	1					
ANR	931994	Argument	* curr		931904	1					
ANR	931995	UnaryOperationExpression	* curr		931904	0					
ANR	931996	UnaryOperator	*		931904	0					
ANR	931997	Identifier	curr		931904	1					
ANR	931998	Argument	PIDENVID_ENVID_SIZE		931904	2					
ANR	931999	Identifier	PIDENVID_ENVID_SIZE		931904	0					
ANR	932000	ExpressionStatement	penvid -> ancestors [ i ] . envid [ PIDENVID_ENVID_SIZE - 1 ] = '\\0'	59:3:1716:1772	931904	3	True				
ANR	932001	AssignmentExpression	penvid -> ancestors [ i ] . envid [ PIDENVID_ENVID_SIZE - 1 ] = '\\0'		931904	0		=			
ANR	932002	ArrayIndexing	penvid -> ancestors [ i ] . envid [ PIDENVID_ENVID_SIZE - 1 ]		931904	0					
ANR	932003	MemberAccess	penvid -> ancestors [ i ] . envid		931904	0					
ANR	932004	ArrayIndexing	penvid -> ancestors [ i ]		931904	0					
ANR	932005	PtrMemberAccess	penvid -> ancestors		931904	0					
ANR	932006	Identifier	penvid		931904	0					
ANR	932007	Identifier	ancestors		931904	1					
ANR	932008	Identifier	i		931904	1					
ANR	932009	Identifier	envid		931904	1					
ANR	932010	AdditiveExpression	PIDENVID_ENVID_SIZE - 1		931904	1		-			
ANR	932011	Identifier	PIDENVID_ENVID_SIZE		931904	0					
ANR	932012	PrimaryExpression	1		931904	1					
ANR	932013	PrimaryExpression	'\\0'		931904	1					
ANR	932014	ExpressionStatement	penvid -> ancestors [ i ] . active = TRUE	60:3:1777:1811	931904	4	True				
ANR	932015	AssignmentExpression	penvid -> ancestors [ i ] . active = TRUE		931904	0		=			
ANR	932016	MemberAccess	penvid -> ancestors [ i ] . active		931904	0					
ANR	932017	ArrayIndexing	penvid -> ancestors [ i ]		931904	0					
ANR	932018	PtrMemberAccess	penvid -> ancestors		931904	0					
ANR	932019	Identifier	penvid		931904	0					
ANR	932020	Identifier	ancestors		931904	1					
ANR	932021	Identifier	i		931904	1					
ANR	932022	Identifier	active		931904	1					
ANR	932023	Identifier	TRUE		931904	1					
ANR	932024	ExpressionStatement	i ++	62:3:1817:1820	931904	5	True				
ANR	932025	PostIncDecOperationExpression	i ++		931904	0					
ANR	932026	Identifier	i		931904	0					
ANR	932027	IncDec	++		931904	1					
ANR	932028	ReturnStatement	return PIDENVID_OK ;	66:1:1831:1849	931904	4	True				
ANR	932029	Identifier	PIDENVID_OK		931904	0					
ANR	932030	ReturnType	int		931904	1					
ANR	932031	Identifier	pidenvid_filter_and_insert		931904	2					
ANR	932032	ParameterList	"PidEnvID * penvid , char * * env"		931904	3					
ANR	932033	Parameter	PidEnvID * penvid	39:31:1311:1326	931904	0	True				
ANR	932034	ParameterType	PidEnvID *		931904	0					
ANR	932035	Identifier	penvid		931904	1					
ANR	932036	Parameter	char * * env	39:49:1329:1338	931904	1	True				
ANR	932037	ParameterType	char * *		931904	0					
ANR	932038	Identifier	env		931904	1					
ANR	932039	CFGEntryNode	ENTRY		931904		True				
ANR	932040	CFGExitNode	EXIT		931904		True				
ANR	932041	Symbol	* * penvid -> ancestors		931904						
ANR	932042	Symbol	* * * penvid		931904						
ANR	932043	Symbol	strncmp		931904						
ANR	932044	Symbol	strlen		931904						
ANR	932045	Symbol	* penvid		931904						
ANR	932046	Symbol	penvid -> ancestors [ i ] . active		931904						
ANR	932047	Symbol	* PIDENVID_ENVID_SIZE		931904						
ANR	932048	Symbol	curr		931904						
ANR	932049	Symbol	* penvid -> ancestors [ i ] . envid		931904						
ANR	932050	Symbol	* * i		931904						
ANR	932051	Symbol	NULL		931904						
ANR	932052	Symbol	penvid -> ancestors		931904						
ANR	932053	Symbol	i		931904						
ANR	932054	Symbol	TRUE		931904						
ANR	932055	Symbol	env		931904						
ANR	932056	Symbol	penvid -> ancestors [ i ] . envid		931904						
ANR	932057	Symbol	PIDENVID_OK		931904						
ANR	932058	Symbol	PIDENVID_PREFIX		931904						
ANR	932059	Symbol	PIDENVID_ENVID_SIZE		931904						
ANR	932060	Symbol	PIDENVID_OVERSIZED		931904						
ANR	932061	Symbol	* * penvid		931904						
ANR	932062	Symbol	* i		931904						
ANR	932063	Symbol	* penvid -> ancestors		931904						
ANR	932064	Symbol	* curr		931904						
ANR	932065	Symbol	penvid		931904						
ANR	932066	Symbol	PIDENVID_NO_SPACE		931904						
ANR	932067	Symbol	PIDENVID_MAX		931904						
ANR	932068	Function	pidenvid_append	70:0:1928:2538							
ANR	932069	FunctionDef	"pidenvid_append (PidEnvID * penvid , char * line)"		932068	0					
ANR	932070	CompoundStatement		71:0:1978:2538	932068	0					
ANR	932071	IdentifierDeclStatement	int i ;	72:1:1981:1986	932068	0	True				
ANR	932072	IdentifierDecl	i		932068	0					
ANR	932073	IdentifierDeclType	int		932068	0					
ANR	932074	Identifier	i		932068	1					
ANR	932075	ForStatement	for ( i = 0 ; i < penvid -> num ; i ++ )		932068	1					
ANR	932076	ForInit	i = 0 ;	76:6:2048:2053	932068	0	True				
ANR	932077	AssignmentExpression	i = 0		932068	0		=			
ANR	932078	Identifier	i		932068	0					
ANR	932079	PrimaryExpression	0		932068	1					
ANR	932080	Condition	i < penvid -> num	76:13:2055:2069	932068	1	True				
ANR	932081	RelationalExpression	i < penvid -> num		932068	0		<			
ANR	932082	Identifier	i		932068	0					
ANR	932083	PtrMemberAccess	penvid -> num		932068	1					
ANR	932084	Identifier	penvid		932068	0					
ANR	932085	Identifier	num		932068	1					
ANR	932086	PostIncDecOperationExpression	i ++	76:30:2072:2074	932068	2	True				
ANR	932087	Identifier	i		932068	0					
ANR	932088	IncDec	++		932068	1					
ANR	932089	CompoundStatement		7:1:99:99	932068	3					
ANR	932090	IfStatement	if ( penvid -> ancestors [ i ] . active == FALSE )		932068	0					
ANR	932091	Condition	penvid -> ancestors [ i ] . active == FALSE	78:6:2086:2121	932068	0	True				
ANR	932092	EqualityExpression	penvid -> ancestors [ i ] . active == FALSE		932068	0		==			
ANR	932093	MemberAccess	penvid -> ancestors [ i ] . active		932068	0					
ANR	932094	ArrayIndexing	penvid -> ancestors [ i ]		932068	0					
ANR	932095	PtrMemberAccess	penvid -> ancestors		932068	0					
ANR	932096	Identifier	penvid		932068	0					
ANR	932097	Identifier	ancestors		932068	1					
ANR	932098	Identifier	i		932068	1					
ANR	932099	Identifier	active		932068	1					
ANR	932100	Identifier	FALSE		932068	1					
ANR	932101	CompoundStatement		8:44:145:145	932068	1					
ANR	932102	IfStatement	if ( ( strlen ( line ) + 1 ) >= PIDENVID_ENVID_SIZE )		932068	0					
ANR	932103	Condition	( strlen ( line ) + 1 ) >= PIDENVID_ENVID_SIZE	82:7:2229:2269	932068	0	True				
ANR	932104	RelationalExpression	( strlen ( line ) + 1 ) >= PIDENVID_ENVID_SIZE		932068	0		>=			
ANR	932105	AdditiveExpression	strlen ( line ) + 1		932068	0		+			
ANR	932106	CallExpression	strlen ( line )		932068	0					
ANR	932107	Callee	strlen		932068	0					
ANR	932108	Identifier	strlen		932068	0					
ANR	932109	ArgumentList	line		932068	1					
ANR	932110	Argument	line		932068	0					
ANR	932111	Identifier	line		932068	0					
ANR	932112	PrimaryExpression	1		932068	1					
ANR	932113	Identifier	PIDENVID_ENVID_SIZE		932068	1					
ANR	932114	CompoundStatement		12:50:293:293	932068	1					
ANR	932115	ReturnStatement	return PIDENVID_OVERSIZED ;	83:4:2278:2303	932068	0	True				
ANR	932116	Identifier	PIDENVID_OVERSIZED		932068	0					
ANR	932117	ExpressionStatement	"strncpy ( penvid -> ancestors [ i ] . envid , line , PIDENVID_ENVID_SIZE )"	86:3:2314:2376	932068	1	True				
ANR	932118	CallExpression	"strncpy ( penvid -> ancestors [ i ] . envid , line , PIDENVID_ENVID_SIZE )"		932068	0					
ANR	932119	Callee	strncpy		932068	0					
ANR	932120	Identifier	strncpy		932068	0					
ANR	932121	ArgumentList	penvid -> ancestors [ i ] . envid		932068	1					
ANR	932122	Argument	penvid -> ancestors [ i ] . envid		932068	0					
ANR	932123	MemberAccess	penvid -> ancestors [ i ] . envid		932068	0					
ANR	932124	ArrayIndexing	penvid -> ancestors [ i ]		932068	0					
ANR	932125	PtrMemberAccess	penvid -> ancestors		932068	0					
ANR	932126	Identifier	penvid		932068	0					
ANR	932127	Identifier	ancestors		932068	1					
ANR	932128	Identifier	i		932068	1					
ANR	932129	Identifier	envid		932068	1					
ANR	932130	Argument	line		932068	1					
ANR	932131	Identifier	line		932068	0					
ANR	932132	Argument	PIDENVID_ENVID_SIZE		932068	2					
ANR	932133	Identifier	PIDENVID_ENVID_SIZE		932068	0					
ANR	932134	ExpressionStatement	penvid -> ancestors [ i ] . envid [ PIDENVID_ENVID_SIZE - 1 ] = '\\0'	87:3:2381:2437	932068	2	True				
ANR	932135	AssignmentExpression	penvid -> ancestors [ i ] . envid [ PIDENVID_ENVID_SIZE - 1 ] = '\\0'		932068	0		=			
ANR	932136	ArrayIndexing	penvid -> ancestors [ i ] . envid [ PIDENVID_ENVID_SIZE - 1 ]		932068	0					
ANR	932137	MemberAccess	penvid -> ancestors [ i ] . envid		932068	0					
ANR	932138	ArrayIndexing	penvid -> ancestors [ i ]		932068	0					
ANR	932139	PtrMemberAccess	penvid -> ancestors		932068	0					
ANR	932140	Identifier	penvid		932068	0					
ANR	932141	Identifier	ancestors		932068	1					
ANR	932142	Identifier	i		932068	1					
ANR	932143	Identifier	envid		932068	1					
ANR	932144	AdditiveExpression	PIDENVID_ENVID_SIZE - 1		932068	1		-			
ANR	932145	Identifier	PIDENVID_ENVID_SIZE		932068	0					
ANR	932146	PrimaryExpression	1		932068	1					
ANR	932147	PrimaryExpression	'\\0'		932068	1					
ANR	932148	ExpressionStatement	penvid -> ancestors [ i ] . active = TRUE	88:3:2442:2476	932068	3	True				
ANR	932149	AssignmentExpression	penvid -> ancestors [ i ] . active = TRUE		932068	0		=			
ANR	932150	MemberAccess	penvid -> ancestors [ i ] . active		932068	0					
ANR	932151	ArrayIndexing	penvid -> ancestors [ i ]		932068	0					
ANR	932152	PtrMemberAccess	penvid -> ancestors		932068	0					
ANR	932153	Identifier	penvid		932068	0					
ANR	932154	Identifier	ancestors		932068	1					
ANR	932155	Identifier	i		932068	1					
ANR	932156	Identifier	active		932068	1					
ANR	932157	Identifier	TRUE		932068	1					
ANR	932158	ReturnStatement	return PIDENVID_OK ;	90:3:2482:2500	932068	4	True				
ANR	932159	Identifier	PIDENVID_OK		932068	0					
ANR	932160	ReturnStatement	return PIDENVID_NO_SPACE ;	94:1:2512:2536	932068	2	True				
ANR	932161	Identifier	PIDENVID_NO_SPACE		932068	0					
ANR	932162	ReturnType	int		932068	1					
ANR	932163	Identifier	pidenvid_append		932068	2					
ANR	932164	ParameterList	"PidEnvID * penvid , char * line"		932068	3					
ANR	932165	Parameter	PidEnvID * penvid	70:20:1948:1963	932068	0	True				
ANR	932166	ParameterType	PidEnvID *		932068	0					
ANR	932167	Identifier	penvid		932068	1					
ANR	932168	Parameter	char * line	70:38:1966:1975	932068	1	True				
ANR	932169	ParameterType	char *		932068	0					
ANR	932170	Identifier	line		932068	1					
ANR	932171	CFGEntryNode	ENTRY		932068		True				
ANR	932172	CFGExitNode	EXIT		932068		True				
ANR	932173	Symbol	* * i		932068						
ANR	932174	Symbol	penvid -> num		932068						
ANR	932175	Symbol	penvid -> ancestors		932068						
ANR	932176	Symbol	line		932068						
ANR	932177	Symbol	* * penvid -> ancestors		932068						
ANR	932178	Symbol	i		932068						
ANR	932179	Symbol	TRUE		932068						
ANR	932180	Symbol	* * * penvid		932068						
ANR	932181	Symbol	penvid -> ancestors [ i ] . envid		932068						
ANR	932182	Symbol	PIDENVID_OK		932068						
ANR	932183	Symbol	* * penvid		932068						
ANR	932184	Symbol	PIDENVID_ENVID_SIZE		932068						
ANR	932185	Symbol	strlen		932068						
ANR	932186	Symbol	PIDENVID_OVERSIZED		932068						
ANR	932187	Symbol	* penvid -> ancestors		932068						
ANR	932188	Symbol	* i		932068						
ANR	932189	Symbol	* penvid		932068						
ANR	932190	Symbol	penvid -> ancestors [ i ] . active		932068						
ANR	932191	Symbol	penvid		932068						
ANR	932192	Symbol	FALSE		932068						
ANR	932193	Symbol	* PIDENVID_ENVID_SIZE		932068						
ANR	932194	Symbol	PIDENVID_NO_SPACE		932068						
ANR	932195	Symbol	* penvid -> ancestors [ i ] . envid		932068						
ANR	932196	Function	pidenvid_format_to_envid	99:0:2644:3079							
ANR	932197	FunctionDef	"pidenvid_format_to_envid (char * dest , unsigned size , pid_t forker_pid , pid_t forked_pid , time_t t , unsigned int mii)"		932196	0					
ANR	932198	CompoundStatement		103:0:2782:3079	932196	0					
ANR	932199	IfStatement	if ( size > PIDENVID_ENVID_SIZE )		932196	0					
ANR	932200	Condition	size > PIDENVID_ENVID_SIZE	104:6:2790:2815	932196	0	True				
ANR	932201	RelationalExpression	size > PIDENVID_ENVID_SIZE		932196	0		>			
ANR	932202	Identifier	size		932196	0					
ANR	932203	Identifier	PIDENVID_ENVID_SIZE		932196	1					
ANR	932204	CompoundStatement		2:34:35:35	932196	1					
ANR	932205	ReturnStatement	return PIDENVID_OVERSIZED ;	105:2:2822:2847	932196	0	True				
ANR	932206	Identifier	PIDENVID_OVERSIZED		932196	0					
ANR	932207	ExpressionStatement	"sprintf ( dest , ""%s%d=%d%s%lu%s%u"" , PIDENVID_PREFIX , forker_pid , forked_pid , PIDENVID_SEP , t , PIDENVID_SEP , mii )"	110:1:2937:3055	932196	1	True				
ANR	932208	CallExpression	"sprintf ( dest , ""%s%d=%d%s%lu%s%u"" , PIDENVID_PREFIX , forker_pid , forked_pid , PIDENVID_SEP , t , PIDENVID_SEP , mii )"		932196	0					
ANR	932209	Callee	sprintf		932196	0					
ANR	932210	Identifier	sprintf		932196	0					
ANR	932211	ArgumentList	dest		932196	1					
ANR	932212	Argument	dest		932196	0					
ANR	932213	Identifier	dest		932196	0					
ANR	932214	Argument	"""%s%d=%d%s%lu%s%u"""		932196	1					
ANR	932215	PrimaryExpression	"""%s%d=%d%s%lu%s%u"""		932196	0					
ANR	932216	Argument	PIDENVID_PREFIX		932196	2					
ANR	932217	Identifier	PIDENVID_PREFIX		932196	0					
ANR	932218	Argument	forker_pid		932196	3					
ANR	932219	Identifier	forker_pid		932196	0					
ANR	932220	Argument	forked_pid		932196	4					
ANR	932221	Identifier	forked_pid		932196	0					
ANR	932222	Argument	PIDENVID_SEP		932196	5					
ANR	932223	Identifier	PIDENVID_SEP		932196	0					
ANR	932224	Argument	t		932196	6					
ANR	932225	Identifier	t		932196	0					
ANR	932226	Argument	PIDENVID_SEP		932196	7					
ANR	932227	Identifier	PIDENVID_SEP		932196	0					
ANR	932228	Argument	mii		932196	8					
ANR	932229	Identifier	mii		932196	0					
ANR	932230	ReturnStatement	return PIDENVID_OK ;	114:1:3059:3077	932196	2	True				
ANR	932231	Identifier	PIDENVID_OK		932196	0					
ANR	932232	ReturnType	int		932196	1					
ANR	932233	Identifier	pidenvid_format_to_envid		932196	2					
ANR	932234	ParameterList	"char * dest , unsigned size , pid_t forker_pid , pid_t forked_pid , time_t t , unsigned int mii"		932196	3					
ANR	932235	Parameter	char * dest	100:26:2674:2683	932196	0	True				
ANR	932236	ParameterType	char *		932196	0					
ANR	932237	Identifier	dest		932196	1					
ANR	932238	Parameter	unsigned size	100:38:2686:2698	932196	1	True				
ANR	932239	ParameterType	unsigned		932196	0					
ANR	932240	Identifier	size		932196	1					
ANR	932241	Parameter	pid_t forker_pid	101:8:2709:2724	932196	2	True				
ANR	932242	ParameterType	pid_t		932196	0					
ANR	932243	Identifier	forker_pid		932196	1					
ANR	932244	Parameter	pid_t forked_pid	101:26:2727:2742	932196	3	True				
ANR	932245	ParameterType	pid_t		932196	0					
ANR	932246	Identifier	forked_pid		932196	1					
ANR	932247	Parameter	time_t t	102:8:2753:2760	932196	4	True				
ANR	932248	ParameterType	time_t		932196	0					
ANR	932249	Identifier	t		932196	1					
ANR	932250	Parameter	unsigned int mii	102:18:2763:2778	932196	5	True				
ANR	932251	ParameterType	unsigned int		932196	0					
ANR	932252	Identifier	mii		932196	1					
ANR	932253	CFGEntryNode	ENTRY		932196		True				
ANR	932254	CFGExitNode	EXIT		932196		True				
ANR	932255	Symbol	PIDENVID_PREFIX		932196						
ANR	932256	Symbol	PIDENVID_ENVID_SIZE		932196						
ANR	932257	Symbol	PIDENVID_OVERSIZED		932196						
ANR	932258	Symbol	PIDENVID_SEP		932196						
ANR	932259	Symbol	size		932196						
ANR	932260	Symbol	t		932196						
ANR	932261	Symbol	forker_pid		932196						
ANR	932262	Symbol	forked_pid		932196						
ANR	932263	Symbol	dest		932196						
ANR	932264	Symbol	mii		932196						
ANR	932265	Symbol	PIDENVID_OK		932196						
ANR	932266	Function	pidenvid_format_from_envid	118:0:3139:3601							
ANR	932267	FunctionDef	"pidenvid_format_from_envid (char * src , pid_t * forker_pid , pid_t * forked_pid , time_t * t , unsigned int * mii)"		932266	0					
ANR	932268	CompoundStatement		120:0:3252:3601	932266	0					
ANR	932269	IdentifierDeclStatement	int rval ;	121:1:3255:3263	932266	0	True				
ANR	932270	IdentifierDecl	rval		932266	0					
ANR	932271	IdentifierDeclType	int		932266	0					
ANR	932272	Identifier	rval		932266	1					
ANR	932273	Statement	rval	124:1:3329:3332	932266	1	True				
ANR	932274	Statement	=	124:6:3334:3334	932266	2	True				
ANR	932275	Statement	sscanf	124:8:3336:3341	932266	3	True				
ANR	932276	Statement	(	124:14:3342:3342	932266	4	True				
ANR	932277	Statement	src	124:15:3343:3345	932266	5	True				
ANR	932278	Statement	","	124:18:3346:3346	932266	6	True				
ANR	932279	Statement	PIDENVID_PREFIX	125:2:3351:3365	932266	7	True				
ANR	932280	Statement	"""%d=%d"""	125:18:3367:3373	932266	8	True				
ANR	932281	Statement	PIDENVID_SEP	125:26:3375:3386	932266	9	True				
ANR	932282	Statement	"""%lu"""	125:39:3388:3392	932266	10	True				
ANR	932283	Statement	PIDENVID_SEP	125:45:3394:3405	932266	11	True				
ANR	932284	Statement	"""%u"""	125:58:3407:3410	932266	12	True				
ANR	932285	Statement	","	125:62:3411:3411	932266	13	True				
ANR	932286	Statement	forker_pid	126:2:3416:3425	932266	14	True				
ANR	932287	Statement	","	126:12:3426:3426	932266	15	True				
ANR	932288	Statement	forked_pid	126:14:3428:3437	932266	16	True				
ANR	932289	Statement	","	126:24:3438:3438	932266	17	True				
ANR	932290	Statement	t	126:26:3440:3440	932266	18	True				
ANR	932291	Statement	","	126:27:3441:3441	932266	19	True				
ANR	932292	Statement	mii	126:29:3443:3445	932266	20	True				
ANR	932293	Statement	)	126:32:3446:3446	932266	21	True				
ANR	932294	ExpressionStatement		126:33:3447:3447	932266	22	True				
ANR	932295	IfStatement	if ( rval == 4 )		932266	23					
ANR	932296	Condition	rval == 4	129:5:3532:3540	932266	0	True				
ANR	932297	EqualityExpression	rval == 4		932266	0		==			
ANR	932298	Identifier	rval		932266	0					
ANR	932299	PrimaryExpression	4		932266	1					
ANR	932300	CompoundStatement		10:16:290:290	932266	1					
ANR	932301	ReturnStatement	return PIDENVID_OK ;	130:2:3547:3565	932266	0	True				
ANR	932302	Identifier	PIDENVID_OK		932266	0					
ANR	932303	ReturnStatement	return PIDENVID_BAD_FORMAT ;	133:1:3572:3598	932266	24	True				
ANR	932304	Identifier	PIDENVID_BAD_FORMAT		932266	0					
ANR	932305	ReturnType	int		932266	1					
ANR	932306	Identifier	pidenvid_format_from_envid		932266	2					
ANR	932307	ParameterList	"char * src , pid_t * forker_pid , pid_t * forked_pid , time_t * t , unsigned int * mii"		932266	3					
ANR	932308	Parameter	char * src	118:31:3170:3178	932266	0	True				
ANR	932309	ParameterType	char *		932266	0					
ANR	932310	Identifier	src		932266	1					
ANR	932311	Parameter	pid_t * forker_pid	118:42:3181:3197	932266	1	True				
ANR	932312	ParameterType	pid_t *		932266	0					
ANR	932313	Identifier	forker_pid		932266	1					
ANR	932314	Parameter	pid_t * forked_pid	119:2:3203:3219	932266	2	True				
ANR	932315	ParameterType	pid_t *		932266	0					
ANR	932316	Identifier	forked_pid		932266	1					
ANR	932317	Parameter	time_t * t	119:21:3222:3230	932266	3	True				
ANR	932318	ParameterType	time_t *		932266	0					
ANR	932319	Identifier	t		932266	1					
ANR	932320	Parameter	unsigned int * mii	119:32:3233:3249	932266	4	True				
ANR	932321	ParameterType	unsigned int *		932266	0					
ANR	932322	Identifier	mii		932266	1					
ANR	932323	CFGEntryNode	ENTRY		932266		True				
ANR	932324	CFGExitNode	EXIT		932266		True				
ANR	932325	Symbol	PIDENVID_BAD_FORMAT		932266						
ANR	932326	Symbol	t		932266						
ANR	932327	Symbol	src		932266						
ANR	932328	Symbol	forker_pid		932266						
ANR	932329	Symbol	forked_pid		932266						
ANR	932330	Symbol	rval		932266						
ANR	932331	Symbol	mii		932266						
ANR	932332	Symbol	PIDENVID_OK		932266						
ANR	932333	Function	pidenvid_match	143:0:3953:5050							
ANR	932334	FunctionDef	"pidenvid_match (PidEnvID * left , PidEnvID * right)"		932333	0					
ANR	932335	CompoundStatement		144:0:4005:5050	932333	0					
ANR	932336	IdentifierDeclStatement	"int l , r ;"	145:1:4008:4016	932333	0	True				
ANR	932337	IdentifierDecl	l		932333	0					
ANR	932338	IdentifierDeclType	int		932333	0					
ANR	932339	Identifier	l		932333	1					
ANR	932340	IdentifierDecl	r		932333	1					
ANR	932341	IdentifierDeclType	int		932333	0					
ANR	932342	Identifier	r		932333	1					
ANR	932343	IdentifierDeclStatement	int count ;	146:1:4019:4028	932333	1	True				
ANR	932344	IdentifierDecl	count		932333	0					
ANR	932345	IdentifierDeclType	int		932333	0					
ANR	932346	Identifier	count		932333	1					
ANR	932347	ExpressionStatement	count = 0	151:1:4200:4209	932333	2	True				
ANR	932348	AssignmentExpression	count = 0		932333	0		=			
ANR	932349	Identifier	count		932333	0					
ANR	932350	PrimaryExpression	0		932333	1					
ANR	932351	ExpressionStatement	l = 0	152:1:4212:4217	932333	3	True				
ANR	932352	AssignmentExpression	l = 0		932333	0		=			
ANR	932353	Identifier	l		932333	0					
ANR	932354	PrimaryExpression	0		932333	1					
ANR	932355	ForStatement	for ( l = 0 ; l < left -> num ; l ++ )		932333	4					
ANR	932356	ForInit	l = 0 ;	154:6:4226:4231	932333	0	True				
ANR	932357	AssignmentExpression	l = 0		932333	0		=			
ANR	932358	Identifier	l		932333	0					
ANR	932359	PrimaryExpression	0		932333	1					
ANR	932360	Condition	l < left -> num	154:13:4233:4245	932333	1	True				
ANR	932361	RelationalExpression	l < left -> num		932333	0		<			
ANR	932362	Identifier	l		932333	0					
ANR	932363	PtrMemberAccess	left -> num		932333	1					
ANR	932364	Identifier	left		932333	0					
ANR	932365	Identifier	num		932333	1					
ANR	932366	PostIncDecOperationExpression	l ++	154:28:4248:4250	932333	2	True				
ANR	932367	Identifier	l		932333	0					
ANR	932368	IncDec	++		932333	1					
ANR	932369	CompoundStatement		11:33:247:247	932333	3					
ANR	932370	IfStatement	if ( left -> ancestors [ l ] . active == FALSE )		932333	0					
ANR	932371	Condition	left -> ancestors [ l ] . active == FALSE	157:6:4328:4361	932333	0	True				
ANR	932372	EqualityExpression	left -> ancestors [ l ] . active == FALSE		932333	0		==			
ANR	932373	MemberAccess	left -> ancestors [ l ] . active		932333	0					
ANR	932374	ArrayIndexing	left -> ancestors [ l ]		932333	0					
ANR	932375	PtrMemberAccess	left -> ancestors		932333	0					
ANR	932376	Identifier	left		932333	0					
ANR	932377	Identifier	ancestors		932333	1					
ANR	932378	Identifier	l		932333	1					
ANR	932379	Identifier	active		932333	1					
ANR	932380	Identifier	FALSE		932333	1					
ANR	932381	CompoundStatement		14:42:358:358	932333	1					
ANR	932382	BreakStatement	break ;	158:3:4369:4374	932333	0	True				
ANR	932383	ForStatement	for ( r = 0 ; r < right -> num ; r ++ )		932333	1					
ANR	932384	ForInit	r = 0 ;	161:7:4389:4394	932333	0	True				
ANR	932385	AssignmentExpression	r = 0		932333	0		=			
ANR	932386	Identifier	r		932333	0					
ANR	932387	PrimaryExpression	0		932333	1					
ANR	932388	Condition	r < right -> num	161:14:4396:4409	932333	1	True				
ANR	932389	RelationalExpression	r < right -> num		932333	0		<			
ANR	932390	Identifier	r		932333	0					
ANR	932391	PtrMemberAccess	right -> num		932333	1					
ANR	932392	Identifier	right		932333	0					
ANR	932393	Identifier	num		932333	1					
ANR	932394	PostIncDecOperationExpression	r ++	161:30:4412:4414	932333	2	True				
ANR	932395	Identifier	r		932333	0					
ANR	932396	IncDec	++		932333	1					
ANR	932397	CompoundStatement		18:35:411:411	932333	3					
ANR	932398	IfStatement	if ( right -> ancestors [ r ] . active == FALSE )		932333	0					
ANR	932399	Condition	right -> ancestors [ r ] . active == FALSE	163:7:4481:4515	932333	0	True				
ANR	932400	EqualityExpression	right -> ancestors [ r ] . active == FALSE		932333	0		==			
ANR	932401	MemberAccess	right -> ancestors [ r ] . active		932333	0					
ANR	932402	ArrayIndexing	right -> ancestors [ r ]		932333	0					
ANR	932403	PtrMemberAccess	right -> ancestors		932333	0					
ANR	932404	Identifier	right		932333	0					
ANR	932405	Identifier	ancestors		932333	1					
ANR	932406	Identifier	r		932333	1					
ANR	932407	Identifier	active		932333	1					
ANR	932408	Identifier	FALSE		932333	1					
ANR	932409	CompoundStatement		20:44:512:512	932333	1					
ANR	932410	BreakStatement	break ;	164:4:4524:4529	932333	0	True				
ANR	932411	IfStatement	"if ( strncmp ( left -> ancestors [ l ] . envid , right -> ancestors [ r ] . envid , PIDENVID_ENVID_SIZE ) == 0 )"		932333	1					
ANR	932412	Condition	"strncmp ( left -> ancestors [ l ] . envid , right -> ancestors [ r ] . envid , PIDENVID_ENVID_SIZE ) == 0"	168:7:4598:4689	932333	0	True				
ANR	932413	EqualityExpression	"strncmp ( left -> ancestors [ l ] . envid , right -> ancestors [ r ] . envid , PIDENVID_ENVID_SIZE ) == 0"		932333	0		==			
ANR	932414	CallExpression	"strncmp ( left -> ancestors [ l ] . envid , right -> ancestors [ r ] . envid , PIDENVID_ENVID_SIZE )"		932333	0					
ANR	932415	Callee	strncmp		932333	0					
ANR	932416	Identifier	strncmp		932333	0					
ANR	932417	ArgumentList	left -> ancestors [ l ] . envid		932333	1					
ANR	932418	Argument	left -> ancestors [ l ] . envid		932333	0					
ANR	932419	MemberAccess	left -> ancestors [ l ] . envid		932333	0					
ANR	932420	ArrayIndexing	left -> ancestors [ l ]		932333	0					
ANR	932421	PtrMemberAccess	left -> ancestors		932333	0					
ANR	932422	Identifier	left		932333	0					
ANR	932423	Identifier	ancestors		932333	1					
ANR	932424	Identifier	l		932333	1					
ANR	932425	Identifier	envid		932333	1					
ANR	932426	Argument	right -> ancestors [ r ] . envid		932333	1					
ANR	932427	MemberAccess	right -> ancestors [ r ] . envid		932333	0					
ANR	932428	ArrayIndexing	right -> ancestors [ r ]		932333	0					
ANR	932429	PtrMemberAccess	right -> ancestors		932333	0					
ANR	932430	Identifier	right		932333	0					
ANR	932431	Identifier	ancestors		932333	1					
ANR	932432	Identifier	r		932333	1					
ANR	932433	Identifier	envid		932333	1					
ANR	932434	Argument	PIDENVID_ENVID_SIZE		932333	2					
ANR	932435	Identifier	PIDENVID_ENVID_SIZE		932333	0					
ANR	932436	PrimaryExpression	0		932333	1					
ANR	932437	CompoundStatement		26:33:686:686	932333	1					
ANR	932438	ExpressionStatement	count ++	170:4:4698:4705	932333	0	True				
ANR	932439	PostIncDecOperationExpression	count ++		932333	0					
ANR	932440	Identifier	count		932333	0					
ANR	932441	IncDec	++		932333	1					
ANR	932442	IfStatement	if ( count == l && l != 0 )		932333	5					
ANR	932443	Condition	count == l && l != 0	177:5:4827:4846	932333	0	True				
ANR	932444	AndExpression	count == l && l != 0		932333	0		&&			
ANR	932445	EqualityExpression	count == l		932333	0		==			
ANR	932446	Identifier	count		932333	0					
ANR	932447	Identifier	l		932333	1					
ANR	932448	EqualityExpression	l != 0		932333	1		!=			
ANR	932449	Identifier	l		932333	0					
ANR	932450	PrimaryExpression	0		932333	1					
ANR	932451	CompoundStatement		34:27:843:843	932333	1					
ANR	932452	ReturnStatement	return PIDENVID_MATCH ;	178:2:4853:4874	932333	0	True				
ANR	932453	Identifier	PIDENVID_MATCH		932333	0					
ANR	932454	ReturnStatement	return PIDENVID_NO_MATCH ;	183:1:5024:5048	932333	6	True				
ANR	932455	Identifier	PIDENVID_NO_MATCH		932333	0					
ANR	932456	ReturnType	int		932333	1					
ANR	932457	Identifier	pidenvid_match		932333	2					
ANR	932458	ParameterList	"PidEnvID * left , PidEnvID * right"		932333	3					
ANR	932459	Parameter	PidEnvID * left	143:19:3972:3985	932333	0	True				
ANR	932460	ParameterType	PidEnvID *		932333	0					
ANR	932461	Identifier	left		932333	1					
ANR	932462	Parameter	PidEnvID * right	143:35:3988:4002	932333	1	True				
ANR	932463	ParameterType	PidEnvID *		932333	0					
ANR	932464	Identifier	right		932333	1					
ANR	932465	CFGEntryNode	ENTRY		932333		True				
ANR	932466	CFGExitNode	EXIT		932333		True				
ANR	932467	Symbol	* * right		932333						
ANR	932468	Symbol	right -> num		932333						
ANR	932469	Symbol	* left -> ancestors		932333						
ANR	932470	Symbol	strncmp		932333						
ANR	932471	Symbol	left -> ancestors [ l ] . envid		932333						
ANR	932472	Symbol	left -> ancestors [ l ] . active		932333						
ANR	932473	Symbol	* left		932333						
ANR	932474	Symbol	left -> num		932333						
ANR	932475	Symbol	* right -> ancestors		932333						
ANR	932476	Symbol	PIDENVID_NO_MATCH		932333						
ANR	932477	Symbol	left -> ancestors		932333						
ANR	932478	Symbol	count		932333						
ANR	932479	Symbol	* * left		932333						
ANR	932480	Symbol	right		932333						
ANR	932481	Symbol	right -> ancestors		932333						
ANR	932482	Symbol	l		932333						
ANR	932483	Symbol	right -> ancestors [ r ] . active		932333						
ANR	932484	Symbol	PIDENVID_MATCH		932333						
ANR	932485	Symbol	PIDENVID_ENVID_SIZE		932333						
ANR	932486	Symbol	r		932333						
ANR	932487	Symbol	left		932333						
ANR	932488	Symbol	* l		932333						
ANR	932489	Symbol	FALSE		932333						
ANR	932490	Symbol	right -> ancestors [ r ] . envid		932333						
ANR	932491	Symbol	* r		932333						
ANR	932492	Symbol	* right		932333						
ANR	932493	Function	pidenvid_append_direct	188:0:5180:5601							
ANR	932494	FunctionDef	"pidenvid_append_direct (PidEnvID * penvid , pid_t forker_pid , pid_t forked_pid , time_t t , unsigned int mii)"		932493	0					
ANR	932495	CompoundStatement		190:0:5290:5601	932493	0					
ANR	932496	IdentifierDeclStatement	int rval ;	191:1:5293:5301	932493	0	True				
ANR	932497	IdentifierDecl	rval		932493	0					
ANR	932498	IdentifierDeclType	int		932493	0					
ANR	932499	Identifier	rval		932493	1					
ANR	932500	IdentifierDeclStatement	char buf [ PIDENVID_ENVID_SIZE ] ;	192:1:5304:5333	932493	1	True				
ANR	932501	IdentifierDecl	buf [ PIDENVID_ENVID_SIZE ]		932493	0					
ANR	932502	IdentifierDeclType	char [ PIDENVID_ENVID_SIZE ]		932493	0					
ANR	932503	Identifier	buf		932493	1					
ANR	932504	Identifier	PIDENVID_ENVID_SIZE		932493	2					
ANR	932505	ExpressionStatement	"rval = pidenvid_format_to_envid ( buf , PIDENVID_ENVID_SIZE , forker_pid , forked_pid , t , mii )"	194:1:5337:5431	932493	2	True				
ANR	932506	AssignmentExpression	"rval = pidenvid_format_to_envid ( buf , PIDENVID_ENVID_SIZE , forker_pid , forked_pid , t , mii )"		932493	0		=			
ANR	932507	Identifier	rval		932493	0					
ANR	932508	CallExpression	"pidenvid_format_to_envid ( buf , PIDENVID_ENVID_SIZE , forker_pid , forked_pid , t , mii )"		932493	1					
ANR	932509	Callee	pidenvid_format_to_envid		932493	0					
ANR	932510	Identifier	pidenvid_format_to_envid		932493	0					
ANR	932511	ArgumentList	buf		932493	1					
ANR	932512	Argument	buf		932493	0					
ANR	932513	Identifier	buf		932493	0					
ANR	932514	Argument	PIDENVID_ENVID_SIZE		932493	1					
ANR	932515	Identifier	PIDENVID_ENVID_SIZE		932493	0					
ANR	932516	Argument	forker_pid		932493	2					
ANR	932517	Identifier	forker_pid		932493	0					
ANR	932518	Argument	forked_pid		932493	3					
ANR	932519	Identifier	forked_pid		932493	0					
ANR	932520	Argument	t		932493	4					
ANR	932521	Identifier	t		932493	0					
ANR	932522	Argument	mii		932493	5					
ANR	932523	Identifier	mii		932493	0					
ANR	932524	IfStatement	if ( rval == PIDENVID_OVERSIZED )		932493	3					
ANR	932525	Condition	rval == PIDENVID_OVERSIZED	197:5:5439:5464	932493	0	True				
ANR	932526	EqualityExpression	rval == PIDENVID_OVERSIZED		932493	0		==			
ANR	932527	Identifier	rval		932493	0					
ANR	932528	Identifier	PIDENVID_OVERSIZED		932493	1					
ANR	932529	CompoundStatement		8:33:176:176	932493	1					
ANR	932530	ReturnStatement	return rval ;	198:2:5471:5482	932493	0	True				
ANR	932531	Identifier	rval		932493	0					
ANR	932532	ExpressionStatement	"rval = pidenvid_append ( penvid , buf )"	201:1:5489:5524	932493	4	True				
ANR	932533	AssignmentExpression	"rval = pidenvid_append ( penvid , buf )"		932493	0		=			
ANR	932534	Identifier	rval		932493	0					
ANR	932535	CallExpression	"pidenvid_append ( penvid , buf )"		932493	1					
ANR	932536	Callee	pidenvid_append		932493	0					
ANR	932537	Identifier	pidenvid_append		932493	0					
ANR	932538	ArgumentList	penvid		932493	1					
ANR	932539	Argument	penvid		932493	0					
ANR	932540	Identifier	penvid		932493	0					
ANR	932541	Argument	buf		932493	1					
ANR	932542	Identifier	buf		932493	0					
ANR	932543	IfStatement	if ( rval == PIDENVID_OVERSIZED )		932493	5					
ANR	932544	Condition	rval == PIDENVID_OVERSIZED	202:5:5531:5556	932493	0	True				
ANR	932545	EqualityExpression	rval == PIDENVID_OVERSIZED		932493	0		==			
ANR	932546	Identifier	rval		932493	0					
ANR	932547	Identifier	PIDENVID_OVERSIZED		932493	1					
ANR	932548	CompoundStatement		13:33:268:268	932493	1					
ANR	932549	ReturnStatement	return rval ;	203:2:5563:5574	932493	0	True				
ANR	932550	Identifier	rval		932493	0					
ANR	932551	ReturnStatement	return PIDENVID_OK ;	206:1:5581:5599	932493	6	True				
ANR	932552	Identifier	PIDENVID_OK		932493	0					
ANR	932553	ReturnType	int		932493	1					
ANR	932554	Identifier	pidenvid_append_direct		932493	2					
ANR	932555	ParameterList	"PidEnvID * penvid , pid_t forker_pid , pid_t forked_pid , time_t t , unsigned int mii"		932493	3					
ANR	932556	Parameter	PidEnvID * penvid	188:27:5207:5222	932493	0	True				
ANR	932557	ParameterType	PidEnvID *		932493	0					
ANR	932558	Identifier	penvid		932493	1					
ANR	932559	Parameter	pid_t forker_pid	189:1:5226:5241	932493	1	True				
ANR	932560	ParameterType	pid_t		932493	0					
ANR	932561	Identifier	forker_pid		932493	1					
ANR	932562	Parameter	pid_t forked_pid	189:19:5244:5259	932493	2	True				
ANR	932563	ParameterType	pid_t		932493	0					
ANR	932564	Identifier	forked_pid		932493	1					
ANR	932565	Parameter	time_t t	189:37:5262:5269	932493	3	True				
ANR	932566	ParameterType	time_t		932493	0					
ANR	932567	Identifier	t		932493	1					
ANR	932568	Parameter	unsigned int mii	189:47:5272:5287	932493	4	True				
ANR	932569	ParameterType	unsigned int		932493	0					
ANR	932570	Identifier	mii		932493	1					
ANR	932571	CFGEntryNode	ENTRY		932493		True				
ANR	932572	CFGExitNode	EXIT		932493		True				
ANR	932573	Symbol	PIDENVID_ENVID_SIZE		932493						
ANR	932574	Symbol	PIDENVID_OVERSIZED		932493						
ANR	932575	Symbol	buf		932493						
ANR	932576	Symbol	t		932493						
ANR	932577	Symbol	forker_pid		932493						
ANR	932578	Symbol	penvid		932493						
ANR	932579	Symbol	pidenvid_format_to_envid		932493						
ANR	932580	Symbol	pidenvid_append		932493						
ANR	932581	Symbol	forked_pid		932493						
ANR	932582	Symbol	rval		932493						
ANR	932583	Symbol	mii		932493						
ANR	932584	Symbol	PIDENVID_OK		932493						
ANR	932585	Function	pidenvid_copy	209:0:5604:5988							
ANR	932586	FunctionDef	"pidenvid_copy (PidEnvID * to , PidEnvID * from)"		932585	0					
ANR	932587	CompoundStatement		210:0:5653:5988	932585	0					
ANR	932588	IdentifierDeclStatement	int i ;	211:1:5656:5661	932585	0	True				
ANR	932589	IdentifierDecl	i		932585	0					
ANR	932590	IdentifierDeclType	int		932585	0					
ANR	932591	Identifier	i		932585	1					
ANR	932592	ExpressionStatement	pidenvid_init ( to )	213:1:5665:5682	932585	1	True				
ANR	932593	CallExpression	pidenvid_init ( to )		932585	0					
ANR	932594	Callee	pidenvid_init		932585	0					
ANR	932595	Identifier	pidenvid_init		932585	0					
ANR	932596	ArgumentList	to		932585	1					
ANR	932597	Argument	to		932585	0					
ANR	932598	Identifier	to		932585	0					
ANR	932599	ExpressionStatement	to -> num = from -> num	215:1:5686:5705	932585	2	True				
ANR	932600	AssignmentExpression	to -> num = from -> num		932585	0		=			
ANR	932601	PtrMemberAccess	to -> num		932585	0					
ANR	932602	Identifier	to		932585	0					
ANR	932603	Identifier	num		932585	1					
ANR	932604	PtrMemberAccess	from -> num		932585	1					
ANR	932605	Identifier	from		932585	0					
ANR	932606	Identifier	num		932585	1					
ANR	932607	ForStatement	for ( i = 0 ; i < from -> num ; i ++ )		932585	3					
ANR	932608	ForInit	i = 0 ;	217:6:5714:5719	932585	0	True				
ANR	932609	AssignmentExpression	i = 0		932585	0		=			
ANR	932610	Identifier	i		932585	0					
ANR	932611	PrimaryExpression	0		932585	1					
ANR	932612	Condition	i < from -> num	217:13:5721:5733	932585	1	True				
ANR	932613	RelationalExpression	i < from -> num		932585	0		<			
ANR	932614	Identifier	i		932585	0					
ANR	932615	PtrMemberAccess	from -> num		932585	1					
ANR	932616	Identifier	from		932585	0					
ANR	932617	Identifier	num		932585	1					
ANR	932618	PostIncDecOperationExpression	i ++	217:28:5736:5738	932585	2	True				
ANR	932619	Identifier	i		932585	0					
ANR	932620	IncDec	++		932585	1					
ANR	932621	CompoundStatement		8:33:87:87	932585	3					
ANR	932622	ExpressionStatement	to -> ancestors [ i ] . active = from -> ancestors [ i ] . active	218:2:5745:5796	932585	0	True				
ANR	932623	AssignmentExpression	to -> ancestors [ i ] . active = from -> ancestors [ i ] . active		932585	0		=			
ANR	932624	MemberAccess	to -> ancestors [ i ] . active		932585	0					
ANR	932625	ArrayIndexing	to -> ancestors [ i ]		932585	0					
ANR	932626	PtrMemberAccess	to -> ancestors		932585	0					
ANR	932627	Identifier	to		932585	0					
ANR	932628	Identifier	ancestors		932585	1					
ANR	932629	Identifier	i		932585	1					
ANR	932630	Identifier	active		932585	1					
ANR	932631	MemberAccess	from -> ancestors [ i ] . active		932585	1					
ANR	932632	ArrayIndexing	from -> ancestors [ i ]		932585	0					
ANR	932633	PtrMemberAccess	from -> ancestors		932585	0					
ANR	932634	Identifier	from		932585	0					
ANR	932635	Identifier	ancestors		932585	1					
ANR	932636	Identifier	i		932585	1					
ANR	932637	Identifier	active		932585	1					
ANR	932638	IfStatement	if ( from -> ancestors [ i ] . active == TRUE )		932585	1					
ANR	932639	Condition	from -> ancestors [ i ] . active == TRUE	219:6:5804:5836	932585	0	True				
ANR	932640	EqualityExpression	from -> ancestors [ i ] . active == TRUE		932585	0		==			
ANR	932641	MemberAccess	from -> ancestors [ i ] . active		932585	0					
ANR	932642	ArrayIndexing	from -> ancestors [ i ]		932585	0					
ANR	932643	PtrMemberAccess	from -> ancestors		932585	0					
ANR	932644	Identifier	from		932585	0					
ANR	932645	Identifier	ancestors		932585	1					
ANR	932646	Identifier	i		932585	1					
ANR	932647	Identifier	active		932585	1					
ANR	932648	Identifier	TRUE		932585	1					
ANR	932649	CompoundStatement		10:41:185:185	932585	1					
ANR	932650	ExpressionStatement	"strncpy ( to -> ancestors [ i ] . envid , from -> ancestors [ i ] . envid , PIDENVID_ENVID_SIZE )"	220:3:5844:5922	932585	0	True				
ANR	932651	CallExpression	"strncpy ( to -> ancestors [ i ] . envid , from -> ancestors [ i ] . envid , PIDENVID_ENVID_SIZE )"		932585	0					
ANR	932652	Callee	strncpy		932585	0					
ANR	932653	Identifier	strncpy		932585	0					
ANR	932654	ArgumentList	to -> ancestors [ i ] . envid		932585	1					
ANR	932655	Argument	to -> ancestors [ i ] . envid		932585	0					
ANR	932656	MemberAccess	to -> ancestors [ i ] . envid		932585	0					
ANR	932657	ArrayIndexing	to -> ancestors [ i ]		932585	0					
ANR	932658	PtrMemberAccess	to -> ancestors		932585	0					
ANR	932659	Identifier	to		932585	0					
ANR	932660	Identifier	ancestors		932585	1					
ANR	932661	Identifier	i		932585	1					
ANR	932662	Identifier	envid		932585	1					
ANR	932663	Argument	from -> ancestors [ i ] . envid		932585	1					
ANR	932664	MemberAccess	from -> ancestors [ i ] . envid		932585	0					
ANR	932665	ArrayIndexing	from -> ancestors [ i ]		932585	0					
ANR	932666	PtrMemberAccess	from -> ancestors		932585	0					
ANR	932667	Identifier	from		932585	0					
ANR	932668	Identifier	ancestors		932585	1					
ANR	932669	Identifier	i		932585	1					
ANR	932670	Identifier	envid		932585	1					
ANR	932671	Argument	PIDENVID_ENVID_SIZE		932585	2					
ANR	932672	Identifier	PIDENVID_ENVID_SIZE		932585	0					
ANR	932673	ExpressionStatement	to -> ancestors [ i ] . envid [ PIDENVID_ENVID_SIZE - 1 ] = '\\0'	221:3:5927:5979	932585	1	True				
ANR	932674	AssignmentExpression	to -> ancestors [ i ] . envid [ PIDENVID_ENVID_SIZE - 1 ] = '\\0'		932585	0		=			
ANR	932675	ArrayIndexing	to -> ancestors [ i ] . envid [ PIDENVID_ENVID_SIZE - 1 ]		932585	0					
ANR	932676	MemberAccess	to -> ancestors [ i ] . envid		932585	0					
ANR	932677	ArrayIndexing	to -> ancestors [ i ]		932585	0					
ANR	932678	PtrMemberAccess	to -> ancestors		932585	0					
ANR	932679	Identifier	to		932585	0					
ANR	932680	Identifier	ancestors		932585	1					
ANR	932681	Identifier	i		932585	1					
ANR	932682	Identifier	envid		932585	1					
ANR	932683	AdditiveExpression	PIDENVID_ENVID_SIZE - 1		932585	1		-			
ANR	932684	Identifier	PIDENVID_ENVID_SIZE		932585	0					
ANR	932685	PrimaryExpression	1		932585	1					
ANR	932686	PrimaryExpression	'\\0'		932585	1					
ANR	932687	ReturnType	void		932585	1					
ANR	932688	Identifier	pidenvid_copy		932585	2					
ANR	932689	ParameterList	"PidEnvID * to , PidEnvID * from"		932585	3					
ANR	932690	Parameter	PidEnvID * to	209:19:5623:5634	932585	0	True				
ANR	932691	ParameterType	PidEnvID *		932585	0					
ANR	932692	Identifier	to		932585	1					
ANR	932693	Parameter	PidEnvID * from	209:33:5637:5650	932585	1	True				
ANR	932694	ParameterType	PidEnvID *		932585	0					
ANR	932695	Identifier	from		932585	1					
ANR	932696	CFGEntryNode	ENTRY		932585		True				
ANR	932697	CFGExitNode	EXIT		932585		True				
ANR	932698	Symbol	* * to -> ancestors		932585						
ANR	932699	Symbol	* * from		932585						
ANR	932700	Symbol	to -> ancestors		932585						
ANR	932701	Symbol	from -> ancestors [ i ] . active		932585						
ANR	932702	Symbol	to -> ancestors [ i ] . envid		932585						
ANR	932703	Symbol	* to -> ancestors		932585						
ANR	932704	Symbol	from		932585						
ANR	932705	Symbol	* PIDENVID_ENVID_SIZE		932585						
ANR	932706	Symbol	to -> ancestors [ i ] . active		932585						
ANR	932707	Symbol	* to		932585						
ANR	932708	Symbol	* * i		932585						
ANR	932709	Symbol	* * to		932585						
ANR	932710	Symbol	from -> num		932585						
ANR	932711	Symbol	* * * to		932585						
ANR	932712	Symbol	i		932585						
ANR	932713	Symbol	TRUE		932585						
ANR	932714	Symbol	to -> num		932585						
ANR	932715	Symbol	from -> ancestors [ i ] . envid		932585						
ANR	932716	Symbol	PIDENVID_ENVID_SIZE		932585						
ANR	932717	Symbol	* i		932585						
ANR	932718	Symbol	* to -> ancestors [ i ] . envid		932585						
ANR	932719	Symbol	from -> ancestors		932585						
ANR	932720	Symbol	to		932585						
ANR	932721	Symbol	* from		932585						
ANR	932722	Symbol	* from -> ancestors		932585						
ANR	932723	Function	pidenvid_dump	227:0:6057:6474							
ANR	932724	FunctionDef	"pidenvid_dump (PidEnvID * penvid , int dlvl)"		932723	0					
ANR	932725	CompoundStatement		228:0:6104:6474	932723	0					
ANR	932726	IdentifierDeclStatement	int i ;	229:1:6107:6112	932723	0	True				
ANR	932727	IdentifierDecl	i		932723	0					
ANR	932728	IdentifierDeclType	int		932723	0					
ANR	932729	Identifier	i		932723	1					
ANR	932730	ExpressionStatement	"dprintf ( dlvl , ""PidEnvID: There are %d entries total.\\n"" , penvid -> num )"	231:1:6116:6185	932723	1	True				
ANR	932731	CallExpression	"dprintf ( dlvl , ""PidEnvID: There are %d entries total.\\n"" , penvid -> num )"		932723	0					
ANR	932732	Callee	dprintf		932723	0					
ANR	932733	Identifier	dprintf		932723	0					
ANR	932734	ArgumentList	dlvl		932723	1					
ANR	932735	Argument	dlvl		932723	0					
ANR	932736	Identifier	dlvl		932723	0					
ANR	932737	Argument	"""PidEnvID: There are %d entries total.\\n"""		932723	1					
ANR	932738	PrimaryExpression	"""PidEnvID: There are %d entries total.\\n"""		932723	0					
ANR	932739	Argument	penvid -> num		932723	2					
ANR	932740	PtrMemberAccess	penvid -> num		932723	0					
ANR	932741	Identifier	penvid		932723	0					
ANR	932742	Identifier	num		932723	1					
ANR	932743	ForStatement	for ( i = 0 ; i < penvid -> num ; i ++ )		932723	2					
ANR	932744	ForInit	i = 0 ;	233:6:6194:6199	932723	0	True				
ANR	932745	AssignmentExpression	i = 0		932723	0		=			
ANR	932746	Identifier	i		932723	0					
ANR	932747	PrimaryExpression	0		932723	1					
ANR	932748	Condition	i < penvid -> num	233:13:6201:6215	932723	1	True				
ANR	932749	RelationalExpression	i < penvid -> num		932723	0		<			
ANR	932750	Identifier	i		932723	0					
ANR	932751	PtrMemberAccess	penvid -> num		932723	1					
ANR	932752	Identifier	penvid		932723	0					
ANR	932753	Identifier	num		932723	1					
ANR	932754	PostIncDecOperationExpression	i ++	233:30:6218:6220	932723	2	True				
ANR	932755	Identifier	i		932723	0					
ANR	932756	IncDec	++		932723	1					
ANR	932757	CompoundStatement		6:35:118:118	932723	3					
ANR	932758	IfStatement	if ( penvid -> ancestors [ i ] . active == TRUE )		932723	0					
ANR	932759	Condition	penvid -> ancestors [ i ] . active == TRUE	235:6:6264:6298	932723	0	True				
ANR	932760	EqualityExpression	penvid -> ancestors [ i ] . active == TRUE		932723	0		==			
ANR	932761	MemberAccess	penvid -> ancestors [ i ] . active		932723	0					
ANR	932762	ArrayIndexing	penvid -> ancestors [ i ]		932723	0					
ANR	932763	PtrMemberAccess	penvid -> ancestors		932723	0					
ANR	932764	Identifier	penvid		932723	0					
ANR	932765	Identifier	ancestors		932723	1					
ANR	932766	Identifier	i		932723	1					
ANR	932767	Identifier	active		932723	1					
ANR	932768	Identifier	TRUE		932723	1					
ANR	932769	CompoundStatement		8:43:196:196	932723	1					
ANR	932770	ExpressionStatement	"dprintf ( dlvl , ""\\t[%d]: active = %s\\n"" , i , penvid -> ancestors [ i ] . active == TRUE ? ""TRUE"" : ""FALSE"" )"	236:3:6306:6407	932723	0	True				
ANR	932771	CallExpression	"dprintf ( dlvl , ""\\t[%d]: active = %s\\n"" , i , penvid -> ancestors [ i ] . active == TRUE ? ""TRUE"" : ""FALSE"" )"		932723	0					
ANR	932772	Callee	dprintf		932723	0					
ANR	932773	Identifier	dprintf		932723	0					
ANR	932774	ArgumentList	dlvl		932723	1					
ANR	932775	Argument	dlvl		932723	0					
ANR	932776	Identifier	dlvl		932723	0					
ANR	932777	Argument	"""\\t[%d]: active = %s\\n"""		932723	1					
ANR	932778	PrimaryExpression	"""\\t[%d]: active = %s\\n"""		932723	0					
ANR	932779	Argument	i		932723	2					
ANR	932780	Identifier	i		932723	0					
ANR	932781	Argument	"penvid -> ancestors [ i ] . active == TRUE ? ""TRUE"" : ""FALSE"""		932723	3					
ANR	932782	ConditionalExpression	"penvid -> ancestors [ i ] . active == TRUE ? ""TRUE"" : ""FALSE"""		932723	0					
ANR	932783	Condition	penvid -> ancestors [ i ] . active == TRUE		932723	0					
ANR	932784	EqualityExpression	penvid -> ancestors [ i ] . active == TRUE		932723	0		==			
ANR	932785	MemberAccess	penvid -> ancestors [ i ] . active		932723	0					
ANR	932786	ArrayIndexing	penvid -> ancestors [ i ]		932723	0					
ANR	932787	PtrMemberAccess	penvid -> ancestors		932723	0					
ANR	932788	Identifier	penvid		932723	0					
ANR	932789	Identifier	ancestors		932723	1					
ANR	932790	Identifier	i		932723	1					
ANR	932791	Identifier	active		932723	1					
ANR	932792	Identifier	TRUE		932723	1					
ANR	932793	PrimaryExpression	"""TRUE"""		932723	1					
ANR	932794	PrimaryExpression	"""FALSE"""		932723	2					
ANR	932795	ExpressionStatement	"dprintf ( dlvl , ""\\t\\t%s\\n"" , penvid -> ancestors [ i ] . envid )"	238:3:6412:6465	932723	1	True				
ANR	932796	CallExpression	"dprintf ( dlvl , ""\\t\\t%s\\n"" , penvid -> ancestors [ i ] . envid )"		932723	0					
ANR	932797	Callee	dprintf		932723	0					
ANR	932798	Identifier	dprintf		932723	0					
ANR	932799	ArgumentList	dlvl		932723	1					
ANR	932800	Argument	dlvl		932723	0					
ANR	932801	Identifier	dlvl		932723	0					
ANR	932802	Argument	"""\\t\\t%s\\n"""		932723	1					
ANR	932803	PrimaryExpression	"""\\t\\t%s\\n"""		932723	0					
ANR	932804	Argument	penvid -> ancestors [ i ] . envid		932723	2					
ANR	932805	MemberAccess	penvid -> ancestors [ i ] . envid		932723	0					
ANR	932806	ArrayIndexing	penvid -> ancestors [ i ]		932723	0					
ANR	932807	PtrMemberAccess	penvid -> ancestors		932723	0					
ANR	932808	Identifier	penvid		932723	0					
ANR	932809	Identifier	ancestors		932723	1					
ANR	932810	Identifier	i		932723	1					
ANR	932811	Identifier	envid		932723	1					
ANR	932812	ReturnType	void		932723	1					
ANR	932813	Identifier	pidenvid_dump		932723	2					
ANR	932814	ParameterList	"PidEnvID * penvid , int dlvl"		932723	3					
ANR	932815	Parameter	PidEnvID * penvid	227:19:6076:6091	932723	0	True				
ANR	932816	ParameterType	PidEnvID *		932723	0					
ANR	932817	Identifier	penvid		932723	1					
ANR	932818	Parameter	int dlvl	227:37:6094:6101	932723	1	True				
ANR	932819	ParameterType	int		932723	0					
ANR	932820	Identifier	dlvl		932723	1					
ANR	932821	CFGEntryNode	ENTRY		932723		True				
ANR	932822	CFGExitNode	EXIT		932723		True				
ANR	932823	Symbol	dlvl		932723						
ANR	932824	Symbol	* * penvid		932723						
ANR	932825	Symbol	* penvid -> ancestors		932723						
ANR	932826	Symbol	* i		932723						
ANR	932827	Symbol	* penvid		932723						
ANR	932828	Symbol	penvid -> num		932723						
ANR	932829	Symbol	penvid -> ancestors [ i ] . active		932723						
ANR	932830	Symbol	penvid -> ancestors		932723						
ANR	932831	Symbol	penvid		932723						
ANR	932832	Symbol	i		932723						
ANR	932833	Symbol	TRUE		932723						
ANR	932834	Symbol	penvid -> ancestors [ i ] . envid		932723						
ANR	932835	Function	pidenvid_shuffle_to_front	243:0:6477:7434							
ANR	932836	FunctionDef	pidenvid_shuffle_to_front (char * * env)		932835	0					
ANR	932837	CompoundStatement		245:0:6520:7434	932835	0					
ANR	932838	IdentifierDeclStatement	size_t count ;	246:1:6523:6535	932835	0	True				
ANR	932839	IdentifierDecl	count		932835	0					
ANR	932840	IdentifierDeclType	size_t		932835	0					
ANR	932841	Identifier	count		932835	1					
ANR	932842	IdentifierDeclStatement	size_t prefix_len = strlen ( PIDENVID_PREFIX ) ;	247:1:6538:6583	932835	1	True				
ANR	932843	IdentifierDecl	prefix_len = strlen ( PIDENVID_PREFIX )		932835	0					
ANR	932844	IdentifierDeclType	size_t		932835	0					
ANR	932845	Identifier	prefix_len		932835	1					
ANR	932846	AssignmentExpression	prefix_len = strlen ( PIDENVID_PREFIX )		932835	2		=			
ANR	932847	Identifier	prefix_len		932835	0					
ANR	932848	CallExpression	strlen ( PIDENVID_PREFIX )		932835	1					
ANR	932849	Callee	strlen		932835	0					
ANR	932850	Identifier	strlen		932835	0					
ANR	932851	ArgumentList	PIDENVID_PREFIX		932835	1					
ANR	932852	Argument	PIDENVID_PREFIX		932835	0					
ANR	932853	Identifier	PIDENVID_PREFIX		932835	0					
ANR	932854	IdentifierDeclStatement	int changed ;	248:1:6586:6597	932835	2	True				
ANR	932855	IdentifierDecl	changed		932835	0					
ANR	932856	IdentifierDeclType	int		932835	0					
ANR	932857	Identifier	changed		932835	1					
ANR	932858	ForStatement	for ( count = 0 ; env [ count ] ; count ++ )		932835	3					
ANR	932859	ForInit	count = 0 ;	250:6:6606:6613	932835	0	True				
ANR	932860	AssignmentExpression	count = 0		932835	0		=			
ANR	932861	Identifier	count		932835	0					
ANR	932862	PrimaryExpression	0		932835	1					
ANR	932863	Condition	env [ count ]	250:15:6615:6624	932835	1	True				
ANR	932864	ArrayIndexing	env [ count ]		932835	0					
ANR	932865	Identifier	env		932835	0					
ANR	932866	Identifier	count		932835	1					
ANR	932867	PostIncDecOperationExpression	count ++	250:27:6627:6633	932835	2	True				
ANR	932868	Identifier	count		932835	0					
ANR	932869	IncDec	++		932835	1					
ANR	932870	ExpressionStatement		250:36:6636:6636	932835	3	True				
ANR	932871	IfStatement	if ( count == 0 )		932835	4					
ANR	932872	Condition	count == 0	252:5:6644:6653	932835	0	True				
ANR	932873	EqualityExpression	count == 0		932835	0		==			
ANR	932874	Identifier	count		932835	0					
ANR	932875	PrimaryExpression	0		932835	1					
ANR	932876	CompoundStatement		8:18:136:136	932835	1					
ANR	932877	ReturnStatement	return ;	253:2:6661:6667	932835	0	True				
ANR	932878	DoStatement	do		932835	5					
ANR	932879	CompoundStatement		17:2:334:342	932835	0					
ANR	932880	IdentifierDeclStatement	size_t i ;	261:2:6855:6863	932835	0	True				
ANR	932881	IdentifierDecl	i		932835	0					
ANR	932882	IdentifierDeclType	size_t		932835	0					
ANR	932883	Identifier	i		932835	1					
ANR	932884	ExpressionStatement	changed = 0	263:2:6868:6879	932835	1	True				
ANR	932885	AssignmentExpression	changed = 0		932835	0		=			
ANR	932886	Identifier	changed		932835	0					
ANR	932887	PrimaryExpression	0		932835	1					
ANR	932888	ForStatement	for ( i = count - 1 ; i ; i -- )		932835	2					
ANR	932889	ForInit	i = count - 1 ;	264:7:6888:6897	932835	0	True				
ANR	932890	AssignmentExpression	i = count - 1		932835	0		=			
ANR	932891	Identifier	i		932835	0					
ANR	932892	AdditiveExpression	count - 1		932835	1		-			
ANR	932893	Identifier	count		932835	0					
ANR	932894	PrimaryExpression	1		932835	1					
ANR	932895	Condition	i	264:18:6899:6899	932835	1	True				
ANR	932896	Identifier	i		932835	0					
ANR	932897	PostIncDecOperationExpression	i --	264:21:6902:6904	932835	2	True				
ANR	932898	Identifier	i		932835	0					
ANR	932899	IncDec	--		932835	1					
ANR	932900	CompoundStatement		20:27:387:387	932835	3					
ANR	932901	IfStatement	"if ( ! strncmp ( env [ i ] , PIDENVID_PREFIX , prefix_len ) )"		932835	0					
ANR	932902	Condition	"! strncmp ( env [ i ] , PIDENVID_PREFIX , prefix_len )"	265:7:6917:6959	932835	0	True				
ANR	932903	UnaryOperationExpression	"! strncmp ( env [ i ] , PIDENVID_PREFIX , prefix_len )"		932835	0					
ANR	932904	UnaryOperator	!		932835	0					
ANR	932905	CallExpression	"strncmp ( env [ i ] , PIDENVID_PREFIX , prefix_len )"		932835	1					
ANR	932906	Callee	strncmp		932835	0					
ANR	932907	Identifier	strncmp		932835	0					
ANR	932908	ArgumentList	env [ i ]		932835	1					
ANR	932909	Argument	env [ i ]		932835	0					
ANR	932910	ArrayIndexing	env [ i ]		932835	0					
ANR	932911	Identifier	env		932835	0					
ANR	932912	Identifier	i		932835	1					
ANR	932913	Argument	PIDENVID_PREFIX		932835	1					
ANR	932914	Identifier	PIDENVID_PREFIX		932835	0					
ANR	932915	Argument	prefix_len		932835	2					
ANR	932916	Identifier	prefix_len		932835	0					
ANR	932917	CompoundStatement		22:4:448:456	932835	1					
ANR	932918	IdentifierDeclStatement	size_t j ;	266:4:6969:6977	932835	0	True				
ANR	932919	IdentifierDecl	j		932835	0					
ANR	932920	IdentifierDeclType	size_t		932835	0					
ANR	932921	Identifier	j		932835	1					
ANR	932922	ForStatement	for ( j = i ; j -- ; )		932835	1					
ANR	932923	ForInit	j = i ;	270:9:7118:7121	932835	0	True				
ANR	932924	AssignmentExpression	j = i		932835	0		=			
ANR	932925	Identifier	j		932835	0					
ANR	932926	Identifier	i		932835	1					
ANR	932927	Condition	j --	270:14:7123:7125	932835	1	True				
ANR	932928	PostIncDecOperationExpression	j --		932835	0					
ANR	932929	Identifier	j		932835	0					
ANR	932930	IncDec	--		932835	1					
ANR	932931	CompoundStatement		27:5:616:635	932835	2					
ANR	932932	IdentifierDeclStatement	char * prev = env [ j ] ;	271:5:7137:7156	932835	0	True				
ANR	932933	IdentifierDecl	* prev = env [ j ]		932835	0					
ANR	932934	IdentifierDeclType	char *		932835	0					
ANR	932935	Identifier	prev		932835	1					
ANR	932936	AssignmentExpression	* prev = env [ j ]		932835	2		=			
ANR	932937	Identifier	prev		932835	0					
ANR	932938	ArrayIndexing	env [ j ]		932835	1					
ANR	932939	Identifier	env		932835	0					
ANR	932940	Identifier	j		932835	1					
ANR	932941	IfStatement	"if ( ! strncmp ( prev , PIDENVID_PREFIX , prefix_len ) )"		932835	1					
ANR	932942	Condition	"! strncmp ( prev , PIDENVID_PREFIX , prefix_len )"	272:9:7167:7207	932835	0	True				
ANR	932943	UnaryOperationExpression	"! strncmp ( prev , PIDENVID_PREFIX , prefix_len )"		932835	0					
ANR	932944	UnaryOperator	!		932835	0					
ANR	932945	CallExpression	"strncmp ( prev , PIDENVID_PREFIX , prefix_len )"		932835	1					
ANR	932946	Callee	strncmp		932835	0					
ANR	932947	Identifier	strncmp		932835	0					
ANR	932948	ArgumentList	prev		932835	1					
ANR	932949	Argument	prev		932835	0					
ANR	932950	Identifier	prev		932835	0					
ANR	932951	Argument	PIDENVID_PREFIX		932835	1					
ANR	932952	Identifier	PIDENVID_PREFIX		932835	0					
ANR	932953	Argument	prefix_len		932835	2					
ANR	932954	Identifier	prefix_len		932835	0					
ANR	932955	CompoundStatement		28:53:690:690	932835	1					
ANR	932956	BreakStatement	break ;	273:6:7219:7224	932835	0	True				
ANR	932957	ExpressionStatement	changed = 1	276:5:7295:7306	932835	2	True				
ANR	932958	AssignmentExpression	changed = 1		932835	0		=			
ANR	932959	Identifier	changed		932835	0					
ANR	932960	PrimaryExpression	1		932835	1					
ANR	932961	ExpressionStatement	env [ j ] = env [ i ]	277:5:7313:7328	932835	3	True				
ANR	932962	AssignmentExpression	env [ j ] = env [ i ]		932835	0		=			
ANR	932963	ArrayIndexing	env [ j ]		932835	0					
ANR	932964	Identifier	env		932835	0					
ANR	932965	Identifier	j		932835	1					
ANR	932966	ArrayIndexing	env [ i ]		932835	1					
ANR	932967	Identifier	env		932835	0					
ANR	932968	Identifier	i		932835	1					
ANR	932969	ExpressionStatement	env [ i ] = prev	278:5:7335:7348	932835	4	True				
ANR	932970	AssignmentExpression	env [ i ] = prev		932835	0		=			
ANR	932971	ArrayIndexing	env [ i ]		932835	0					
ANR	932972	Identifier	env		932835	0					
ANR	932973	Identifier	i		932835	1					
ANR	932974	Identifier	prev		932835	1					
ANR	932975	ExpressionStatement	i = j	279:5:7355:7360	932835	5	True				
ANR	932976	AssignmentExpression	i = j		932835	0		=			
ANR	932977	Identifier	i		932835	0					
ANR	932978	Identifier	j		932835	1					
ANR	932979	IfStatement	if ( i == 0 )		932835	2					
ANR	932980	Condition	i == 0	281:8:7376:7379	932835	0	True				
ANR	932981	EqualityExpression	i == 0		932835	0		==			
ANR	932982	Identifier	i		932835	0					
ANR	932983	PrimaryExpression	0		932835	1					
ANR	932984	CompoundStatement		37:15:862:862	932835	1					
ANR	932985	BreakStatement	break ;	282:5:7390:7395	932835	0	True				
ANR	932986	Condition	changed	287:10:7423:7429	932835	1	True				
ANR	932987	Identifier	changed		932835	0					
ANR	932988	ReturnType	void		932835	1					
ANR	932989	Identifier	pidenvid_shuffle_to_front		932835	2					
ANR	932990	ParameterList	char * * env		932835	3					
ANR	932991	Parameter	char * * env	244:26:6508:6517	932835	0	True				
ANR	932992	ParameterType	char * *		932835	0					
ANR	932993	Identifier	env		932835	1					
ANR	932994	CFGEntryNode	ENTRY		932835		True				
ANR	932995	CFGExitNode	EXIT		932835		True				
ANR	932996	Symbol	prev		932835						
ANR	932997	Symbol	count		932835						
ANR	932998	Symbol	* env		932835						
ANR	932999	Symbol	prefix_len		932835						
ANR	933000	Symbol	i		932835						
ANR	933001	Symbol	j		932835						
ANR	933002	Symbol	env		932835						
ANR	933003	Symbol	PIDENVID_PREFIX		932835						
ANR	933004	Symbol	strlen		932835						
ANR	933005	Symbol	* count		932835						
ANR	933006	Symbol	strncmp		932835						
ANR	933007	Symbol	* i		932835						
ANR	933008	Symbol	* j		932835						
ANR	933009	Symbol	changed		932835						
ANR	933010	Function	pidenvid_optimize_final_env	290:0:7437:7543							
ANR	933011	FunctionDef	pidenvid_optimize_final_env (char * * env)		933010	0					
ANR	933012	CompoundStatement		292:0:7482:7543	933010	0					
ANR	933013	ExpressionStatement	pidenvid_shuffle_to_front ( env )	294:1:7504:7534	933010	0	True				
ANR	933014	CallExpression	pidenvid_shuffle_to_front ( env )		933010	0					
ANR	933015	Callee	pidenvid_shuffle_to_front		933010	0					
ANR	933016	Identifier	pidenvid_shuffle_to_front		933010	0					
ANR	933017	ArgumentList	env		933010	1					
ANR	933018	Argument	env		933010	0					
ANR	933019	Identifier	env		933010	0					
ANR	933020	ReturnType	void		933010	1					
ANR	933021	Identifier	pidenvid_optimize_final_env		933010	2					
ANR	933022	ParameterList	char * * env		933010	3					
ANR	933023	Parameter	char * * env	291:28:7470:7479	933010	0	True				
ANR	933024	ParameterType	char * *		933010	0					
ANR	933025	Identifier	env		933010	1					
ANR	933026	CFGEntryNode	ENTRY		933010		True				
ANR	933027	CFGExitNode	EXIT		933010		True				
ANR	933028	Symbol	env		933010						
