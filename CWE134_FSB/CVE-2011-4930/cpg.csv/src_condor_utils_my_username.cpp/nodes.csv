command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4823115	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_my_username.cpp								
ANR	4823116	Function	my_username	29:0:987:1462							
ANR	4823117	FunctionDef	my_username (int uuid)		4823116	0					
ANR	4823118	CompoundStatement		30:24:1018:1462	4823116	0					
ANR	4823119	IdentifierDeclStatement	char username [ UNLEN + 1 ] ;	32:3:1042:1064	4823116	0	True				
ANR	4823120	IdentifierDecl	username [ UNLEN + 1 ]		4823116	0					
ANR	4823121	IdentifierDeclType	char [ UNLEN + 1 ]		4823116	0					
ANR	4823122	Identifier	username		4823116	1					
ANR	4823123	AdditiveExpression	UNLEN + 1		4823116	2		+			
ANR	4823124	Identifier	UNLEN		4823116	0					
ANR	4823125	PrimaryExpression	1		4823116	1					
ANR	4823126	IdentifierDeclStatement	unsigned long usernamelen = UNLEN + 1 ;	33:3:1069:1104	4823116	1	True				
ANR	4823127	IdentifierDecl	usernamelen = UNLEN + 1		4823116	0					
ANR	4823128	IdentifierDeclType	unsigned long		4823116	0					
ANR	4823129	Identifier	usernamelen		4823116	1					
ANR	4823130	AssignmentExpression	usernamelen = UNLEN + 1		4823116	2		=			
ANR	4823131	Identifier	usernamelen		4823116	0					
ANR	4823132	AdditiveExpression	UNLEN + 1		4823116	1		+			
ANR	4823133	Identifier	UNLEN		4823116	0					
ANR	4823134	PrimaryExpression	1		4823116	1					
ANR	4823135	IfStatement	"if ( GetUserName ( username , & usernamelen ) < 0 )"		4823116	2					
ANR	4823136	Condition	"GetUserName ( username , & usernamelen ) < 0"	34:7:1113:1151	4823116	0	True				
ANR	4823137	RelationalExpression	"GetUserName ( username , & usernamelen ) < 0"		4823116	0		<			
ANR	4823138	CallExpression	"GetUserName ( username , & usernamelen )"		4823116	0					
ANR	4823139	Callee	GetUserName		4823116	0					
ANR	4823140	Identifier	GetUserName		4823116	0					
ANR	4823141	ArgumentList	username		4823116	1					
ANR	4823142	Argument	username		4823116	0					
ANR	4823143	Identifier	username		4823116	0					
ANR	4823144	Argument	& usernamelen		4823116	1					
ANR	4823145	UnaryOperationExpression	& usernamelen		4823116	0					
ANR	4823146	UnaryOperator	&		4823116	0					
ANR	4823147	Identifier	usernamelen		4823116	1					
ANR	4823148	PrimaryExpression	0		4823116	1					
ANR	4823149	CompoundStatement		5:48:135:135	4823116	1					
ANR	4823150	ReturnStatement	return ( NULL ) ;	35:2:1158:1172	4823116	0	True				
ANR	4823151	Identifier	NULL		4823116	0					
ANR	4823152	ReturnStatement	return strdup ( username ) ;	37:3:1182:1205	4823116	3	True				
ANR	4823153	CallExpression	strdup ( username )		4823116	0					
ANR	4823154	Callee	strdup		4823116	0					
ANR	4823155	Identifier	strdup		4823116	0					
ANR	4823156	ArgumentList	username		4823116	1					
ANR	4823157	Argument	username		4823116	0					
ANR	4823158	Identifier	username		4823116	0					
ANR	4823159	ReturnType	char *		4823116	1					
ANR	4823160	Identifier	my_username		4823116	2					
ANR	4823161	ParameterList	int uuid		4823116	3					
ANR	4823162	Parameter	int uuid	30:13:1007:1014	4823116	0	True				
ANR	4823163	ParameterType	int		4823116	0					
ANR	4823164	Identifier	uuid		4823116	1					
ANR	4823165	CFGEntryNode	ENTRY		4823116		True				
ANR	4823166	CFGExitNode	EXIT		4823116		True				
ANR	4823167	Symbol	& usernamelen		4823116						
ANR	4823168	Symbol	GetUserName		4823116						
ANR	4823169	Symbol	usernamelen		4823116						
ANR	4823170	Symbol	NULL		4823116						
ANR	4823171	Symbol	strdup		4823116						
ANR	4823172	Symbol	uuid		4823116						
ANR	4823173	Symbol	UNLEN		4823116						
ANR	4823174	Symbol	username		4823116						
ANR	4823175	Function	my_domainname	53:0:1465:1518							
ANR	4823176	FunctionDef	my_domainname ()		4823175	0					
ANR	4823177	CompoundStatement		53:23:1488:1518	4823175	0					
ANR	4823178	ReturnStatement	return NULL ;	55:1:1505:1516	4823175	0	True				
ANR	4823179	Identifier	NULL		4823175	0					
ANR	4823180	ReturnType	char *		4823175	1					
ANR	4823181	Identifier	my_domainname		4823175	2					
ANR	4823182	ParameterList			4823175	3					
ANR	4823183	CFGEntryNode	ENTRY		4823175		True				
ANR	4823184	CFGExitNode	EXIT		4823175		True				
ANR	4823185	Symbol	NULL		4823175						
ANR	4823186	DeclStmt									
ANR	4823187	Decl							HANDLE	HANDLE	hAccessToken
ANR	4823188	DeclStmt									
ANR	4823189	Decl							UCHAR	UCHAR [ 1000 ]	InfoBuffer
ANR	4823190	DeclStmt									
ANR	4823191	Decl							char	char [ 200 ]	szAccountName
ANR	4823192	Decl							char	char [ 200 ]	szDomainName
ANR	4823193	DeclStmt									
ANR	4823194	Decl							PTOKEN_USER	PTOKEN_USER	pTokenUser
ANR	4823195	DeclStmt									
ANR	4823196	Decl							DWORD	DWORD	dwInfoBufferSize
ANR	4823197	Decl							DWORD	DWORD	dwAccountSize
ANR	4823198	Decl							DWORD	DWORD	dwDomainSize
ANR	4823199	DeclStmt									
ANR	4823200	Decl							SID_NAME_USE	SID_NAME_USE	snu
ANR	4823201	Function	my_usertoken	89:0:2374:2607							
ANR	4823202	FunctionDef	my_usertoken ()		4823201	0					
ANR	4823203	CompoundStatement		89:22:2396:2607	4823201	0					
ANR	4823204	IdentifierDeclStatement	HANDLE hAccessToken = NULL ;	90:1:2399:2425	4823201	0	True				
ANR	4823205	IdentifierDecl	hAccessToken = NULL		4823201	0					
ANR	4823206	IdentifierDeclType	HANDLE		4823201	0					
ANR	4823207	Identifier	hAccessToken		4823201	1					
ANR	4823208	AssignmentExpression	hAccessToken = NULL		4823201	2		=			
ANR	4823209	Identifier	NULL		4823201	0					
ANR	4823210	Identifier	NULL		4823201	1					
ANR	4823211	IfStatement	"if ( ! OpenThreadToken ( GetCurrentThread ( ) , TOKEN_READ , TRUE , & hAccessToken ) )"		4823201	1					
ANR	4823212	Condition	"! OpenThreadToken ( GetCurrentThread ( ) , TOKEN_READ , TRUE , & hAccessToken )"	91:5:2432:2508	4823201	0	True				
ANR	4823213	UnaryOperationExpression	"! OpenThreadToken ( GetCurrentThread ( ) , TOKEN_READ , TRUE , & hAccessToken )"		4823201	0					
ANR	4823214	UnaryOperator	!		4823201	0					
ANR	4823215	CallExpression	"OpenThreadToken ( GetCurrentThread ( ) , TOKEN_READ , TRUE , & hAccessToken )"		4823201	1					
ANR	4823216	Callee	OpenThreadToken		4823201	0					
ANR	4823217	Identifier	OpenThreadToken		4823201	0					
ANR	4823218	ArgumentList	GetCurrentThread ( )		4823201	1					
ANR	4823219	Argument	GetCurrentThread ( )		4823201	0					
ANR	4823220	CallExpression	GetCurrentThread ( )		4823201	0					
ANR	4823221	Callee	GetCurrentThread		4823201	0					
ANR	4823222	Identifier	GetCurrentThread		4823201	0					
ANR	4823223	ArgumentList			4823201	1					
ANR	4823224	Argument	TOKEN_READ		4823201	1					
ANR	4823225	Identifier	TOKEN_READ		4823201	0					
ANR	4823226	Argument	TRUE		4823201	2					
ANR	4823227	Identifier	TRUE		4823201	0					
ANR	4823228	Argument	& hAccessToken		4823201	3					
ANR	4823229	UnaryOperationExpression	& hAccessToken		4823201	0					
ANR	4823230	UnaryOperator	&		4823201	0					
ANR	4823231	Identifier	hAccessToken		4823201	1					
ANR	4823232	CompoundStatement		4:24:115:115	4823201	1					
ANR	4823233	ExpressionStatement	"OpenProcessToken ( GetCurrentProcess ( ) , TOKEN_READ , & hAccessToken )"	93:2:2516:2580	4823201	0	True				
ANR	4823234	CallExpression	"OpenProcessToken ( GetCurrentProcess ( ) , TOKEN_READ , & hAccessToken )"		4823201	0					
ANR	4823235	Callee	OpenProcessToken		4823201	0					
ANR	4823236	Identifier	OpenProcessToken		4823201	0					
ANR	4823237	ArgumentList	GetCurrentProcess ( )		4823201	1					
ANR	4823238	Argument	GetCurrentProcess ( )		4823201	0					
ANR	4823239	CallExpression	GetCurrentProcess ( )		4823201	0					
ANR	4823240	Callee	GetCurrentProcess		4823201	0					
ANR	4823241	Identifier	GetCurrentProcess		4823201	0					
ANR	4823242	ArgumentList			4823201	1					
ANR	4823243	Argument	TOKEN_READ		4823201	1					
ANR	4823244	Identifier	TOKEN_READ		4823201	0					
ANR	4823245	Argument	& hAccessToken		4823201	2					
ANR	4823246	UnaryOperationExpression	& hAccessToken		4823201	0					
ANR	4823247	UnaryOperator	&		4823201	0					
ANR	4823248	Identifier	hAccessToken		4823201	1					
ANR	4823249	ReturnStatement	return hAccessToken ;	95:1:2586:2605	4823201	2	True				
ANR	4823250	Identifier	hAccessToken		4823201	0					
ANR	4823251	ReturnType	HANDLE		4823201	1					
ANR	4823252	Identifier	my_usertoken		4823201	2					
ANR	4823253	ParameterList			4823201	3					
ANR	4823254	CFGEntryNode	ENTRY		4823201		True				
ANR	4823255	CFGExitNode	EXIT		4823201		True				
ANR	4823256	Symbol	hAccessToken		4823201						
ANR	4823257	Symbol	NULL		4823201						
ANR	4823258	Symbol	TOKEN_READ		4823201						
ANR	4823259	Symbol	GetCurrentThread		4823201						
ANR	4823260	Symbol	TRUE		4823201						
ANR	4823261	Symbol	GetCurrentProcess		4823201						
ANR	4823262	Symbol	& hAccessToken		4823201						
ANR	4823263	Symbol	OpenThreadToken		4823201						
