command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2042241	File	data/converged/CVE-2011-4930_htcondor/procapi_fork_t.cpp								
ANR	2042242	DeclStmt									
ANR	2042243	Decl							int	int	TOTAL_DEPTH
ANR	2042244	DeclStmt									
ANR	2042245	Decl							int	int	TREE_BREADTH_CHANGE
ANR	2042246	Function	do_work	40:0:1495:2138							
ANR	2042247	FunctionDef	"do_work (int k , bool verbose)"		2042246	0					
ANR	2042248	CompoundStatement		40:33:1528:2138	2042246	0					
ANR	2042249	IdentifierDeclStatement	char * * memory ;	41:2:1532:1545	2042246	0	True				
ANR	2042250	IdentifierDecl	* * memory		2042246	0					
ANR	2042251	IdentifierDeclType	char * *		2042246	0					
ANR	2042252	Identifier	memory		2042246	1					
ANR	2042253	Statement	memory	44:2:1576:1581	2042246	1	True				
ANR	2042254	Statement	=	44:9:1583:1583	2042246	2	True				
ANR	2042255	Statement	new	44:11:1585:1587	2042246	3	True				
ANR	2042256	Statement	char	44:15:1589:1592	2042246	4	True				
ANR	2042257	Statement	*	44:19:1593:1593	2042246	5	True				
ANR	2042258	Statement	[	44:20:1594:1594	2042246	6	True				
ANR	2042259	Statement	k	44:21:1595:1595	2042246	7	True				
ANR	2042260	Statement	]	44:22:1596:1596	2042246	8	True				
ANR	2042261	ExpressionStatement		44:23:1597:1597	2042246	9	True				
ANR	2042262	ForStatement	for ( int i = 0 ; i < k ; i ++ )		2042246	10					
ANR	2042263	ForInit	int i = 0 ;	45:6:1605:1614	2042246	0	True				
ANR	2042264	IdentifierDeclStatement	int i = 0 ;		2042246	0					
ANR	2042265	IdentifierDecl	i = 0		2042246	0					
ANR	2042266	IdentifierDeclType	int		2042246	0					
ANR	2042267	Identifier	i		2042246	1					
ANR	2042268	AssignmentExpression	i = 0		2042246	2		=			
ANR	2042269	Identifier	i		2042246	0					
ANR	2042270	PrimaryExpression	0		2042246	1					
ANR	2042271	Condition	i < k	45:17:1616:1620	2042246	1	True				
ANR	2042272	RelationalExpression	i < k		2042246	0		<			
ANR	2042273	Identifier	i		2042246	0					
ANR	2042274	Identifier	k		2042246	1					
ANR	2042275	PostIncDecOperationExpression	i ++	45:24:1623:1625	2042246	2	True				
ANR	2042276	Identifier	i		2042246	0					
ANR	2042277	IncDec	++		2042246	1					
ANR	2042278	CompoundStatement		6:28:98:98	2042246	3					
ANR	2042279	ExpressionStatement	memory [ i ] = new char [ 1024 ]	46:4:1633:1659	2042246	0	True				
ANR	2042280	AssignmentExpression	memory [ i ] = new char [ 1024 ]		2042246	0		=			
ANR	2042281	ArrayIndexing	memory [ i ]		2042246	0					
ANR	2042282	Identifier	memory		2042246	0					
ANR	2042283	Identifier	i		2042246	1					
ANR	2042284	PrimaryExpression	1024		2042246	1					
ANR	2042285	IfStatement	if ( verbose )		2042246	11					
ANR	2042286	Condition	verbose	48:5:1670:1676	2042246	0	True				
ANR	2042287	Identifier	verbose		2042246	0					
ANR	2042288	CompoundStatement		9:13:149:149	2042246	1					
ANR	2042289	ExpressionStatement	"printf ( ""Process %d done allocating %d k of memory\\n"" , getpid ( ) , k )"	49:4:1684:1750	2042246	0	True				
ANR	2042290	CallExpression	"printf ( ""Process %d done allocating %d k of memory\\n"" , getpid ( ) , k )"		2042246	0					
ANR	2042291	Callee	printf		2042246	0					
ANR	2042292	Identifier	printf		2042246	0					
ANR	2042293	ArgumentList	"""Process %d done allocating %d k of memory\\n"""		2042246	1					
ANR	2042294	Argument	"""Process %d done allocating %d k of memory\\n"""		2042246	0					
ANR	2042295	PrimaryExpression	"""Process %d done allocating %d k of memory\\n"""		2042246	0					
ANR	2042296	Argument	getpid ( )		2042246	1					
ANR	2042297	CallExpression	getpid ( )		2042246	0					
ANR	2042298	Callee	getpid		2042246	0					
ANR	2042299	Identifier	getpid		2042246	0					
ANR	2042300	ArgumentList			2042246	1					
ANR	2042301	Argument	k		2042246	2					
ANR	2042302	Identifier	k		2042246	0					
ANR	2042303	ForStatement	for ( int i = 0 ; i < k ; i ++ )		2042246	12					
ANR	2042304	ForInit	int i = 0 ;	52:7:1782:1791	2042246	0	True				
ANR	2042305	IdentifierDeclStatement	int i = 0 ;		2042246	0					
ANR	2042306	IdentifierDecl	i = 0		2042246	0					
ANR	2042307	IdentifierDeclType	int		2042246	0					
ANR	2042308	Identifier	i		2042246	1					
ANR	2042309	AssignmentExpression	i = 0		2042246	2		=			
ANR	2042310	Identifier	i		2042246	0					
ANR	2042311	PrimaryExpression	0		2042246	1					
ANR	2042312	Condition	i < k	52:18:1793:1797	2042246	1	True				
ANR	2042313	RelationalExpression	i < k		2042246	0		<			
ANR	2042314	Identifier	i		2042246	0					
ANR	2042315	Identifier	k		2042246	1					
ANR	2042316	PostIncDecOperationExpression	i ++	52:25:1800:1802	2042246	2	True				
ANR	2042317	Identifier	i		2042246	0					
ANR	2042318	IncDec	++		2042246	1					
ANR	2042319	CompoundStatement		13:29:275:275	2042246	3					
ANR	2042320	ExpressionStatement	memory [ i ] [ 0 ] = 'x'	53:4:1810:1828	2042246	0	True				
ANR	2042321	AssignmentExpression	memory [ i ] [ 0 ] = 'x'		2042246	0		=			
ANR	2042322	ArrayIndexing	memory [ i ] [ 0 ]		2042246	0					
ANR	2042323	ArrayIndexing	memory [ i ]		2042246	0					
ANR	2042324	Identifier	memory		2042246	0					
ANR	2042325	Identifier	i		2042246	1					
ANR	2042326	PrimaryExpression	0		2042246	1					
ANR	2042327	PrimaryExpression	'x'		2042246	1					
ANR	2042328	IfStatement	if ( verbose )		2042246	13					
ANR	2042329	Condition	verbose	55:5:1839:1845	2042246	0	True				
ANR	2042330	Identifier	verbose		2042246	0					
ANR	2042331	CompoundStatement		16:13:318:318	2042246	1					
ANR	2042332	ExpressionStatement	"printf ( ""Process %d done touching all pages\\n"" , getpid ( ) )"	56:4:1853:1909	2042246	0	True				
ANR	2042333	CallExpression	"printf ( ""Process %d done touching all pages\\n"" , getpid ( ) )"		2042246	0					
ANR	2042334	Callee	printf		2042246	0					
ANR	2042335	Identifier	printf		2042246	0					
ANR	2042336	ArgumentList	"""Process %d done touching all pages\\n"""		2042246	1					
ANR	2042337	Argument	"""Process %d done touching all pages\\n"""		2042246	0					
ANR	2042338	PrimaryExpression	"""Process %d done touching all pages\\n"""		2042246	0					
ANR	2042339	Argument	getpid ( )		2042246	1					
ANR	2042340	CallExpression	getpid ( )		2042246	0					
ANR	2042341	Callee	getpid		2042246	0					
ANR	2042342	Identifier	getpid		2042246	0					
ANR	2042343	ArgumentList			2042246	1					
ANR	2042344	ForStatement	for ( int i = 0 ; i < BUSY_WORK_TIME ; i ++ )		2042246	14					
ANR	2042345	ForInit	int i = 0 ;	59:6:1924:1933	2042246	0	True				
ANR	2042346	IdentifierDeclStatement	int i = 0 ;		2042246	0					
ANR	2042347	IdentifierDecl	i = 0		2042246	0					
ANR	2042348	IdentifierDeclType	int		2042246	0					
ANR	2042349	Identifier	i		2042246	1					
ANR	2042350	AssignmentExpression	i = 0		2042246	2		=			
ANR	2042351	Identifier	i		2042246	0					
ANR	2042352	PrimaryExpression	0		2042246	1					
ANR	2042353	Condition	i < BUSY_WORK_TIME	59:17:1935:1952	2042246	1	True				
ANR	2042354	RelationalExpression	i < BUSY_WORK_TIME		2042246	0		<			
ANR	2042355	Identifier	i		2042246	0					
ANR	2042356	Identifier	BUSY_WORK_TIME		2042246	1					
ANR	2042357	PostIncDecOperationExpression	i ++	59:37:1955:1957	2042246	2	True				
ANR	2042358	Identifier	i		2042246	0					
ANR	2042359	IncDec	++		2042246	1					
ANR	2042360	ExpressionStatement		60:4:1964:1964	2042246	3	True				
ANR	2042361	IfStatement	if ( verbose )		2042246	15					
ANR	2042362	Condition	verbose	61:5:1971:1977	2042246	0	True				
ANR	2042363	Identifier	verbose		2042246	0					
ANR	2042364	CompoundStatement		22:13:450:450	2042246	1					
ANR	2042365	ExpressionStatement	"printf ( ""Process %d done doing busy work\\n"" , getpid ( ) )"	62:4:1985:2038	2042246	0	True				
ANR	2042366	CallExpression	"printf ( ""Process %d done doing busy work\\n"" , getpid ( ) )"		2042246	0					
ANR	2042367	Callee	printf		2042246	0					
ANR	2042368	Identifier	printf		2042246	0					
ANR	2042369	ArgumentList	"""Process %d done doing busy work\\n"""		2042246	1					
ANR	2042370	Argument	"""Process %d done doing busy work\\n"""		2042246	0					
ANR	2042371	PrimaryExpression	"""Process %d done doing busy work\\n"""		2042246	0					
ANR	2042372	Argument	getpid ( )		2042246	1					
ANR	2042373	CallExpression	getpid ( )		2042246	0					
ANR	2042374	Callee	getpid		2042246	0					
ANR	2042375	Identifier	getpid		2042246	0					
ANR	2042376	ArgumentList			2042246	1					
ANR	2042377	ReturnType	void		2042246	1					
ANR	2042378	Identifier	do_work		2042246	2					
ANR	2042379	ParameterList	"int k , bool verbose"		2042246	3					
ANR	2042380	Parameter	int k	40:13:1508:1512	2042246	0	True				
ANR	2042381	ParameterType	int		2042246	0					
ANR	2042382	Identifier	k		2042246	1					
ANR	2042383	Parameter	bool verbose	40:20:1515:1526	2042246	1	True				
ANR	2042384	ParameterType	bool		2042246	0					
ANR	2042385	Identifier	verbose		2042246	1					
ANR	2042386	CFGEntryNode	ENTRY		2042246		True				
ANR	2042387	CFGExitNode	EXIT		2042246		True				
ANR	2042388	Symbol	BUSY_WORK_TIME		2042246						
ANR	2042389	Symbol	* * i		2042246						
ANR	2042390	Symbol	memory		2042246						
ANR	2042391	Symbol	* i		2042246						
ANR	2042392	Symbol	* * memory		2042246						
ANR	2042393	Symbol	i		2042246						
ANR	2042394	Symbol	k		2042246						
ANR	2042395	Symbol	* memory		2042246						
ANR	2042396	Symbol	getpid		2042246						
ANR	2042397	Symbol	verbose		2042246						
ANR	2042398	Function	recursive_fork	69:0:2141:5146							
ANR	2042399	FunctionDef	"recursive_fork (int depth , int breadth , bool verbose)"		2042398	0					
ANR	2042400	CompoundStatement		69:63:2204:5146	2042398	0					
ANR	2042401	IfStatement	if ( depth <= 0 )		2042398	0					
ANR	2042402	Condition	depth <= 0	71:5:2214:2223	2042398	0	True				
ANR	2042403	RelationalExpression	depth <= 0		2042398	0		<=			
ANR	2042404	Identifier	depth		2042398	0					
ANR	2042405	PrimaryExpression	0		2042398	1					
ANR	2042406	CompoundStatement		5:4:88:121	2042398	1					
ANR	2042407	IdentifierDeclStatement	PID_ENTRY * arr = new PID_ENTRY [ 1 ] ;	73:4:2293:2326	2042398	0	True				
ANR	2042408	IdentifierDecl	* arr = new PID_ENTRY [ 1 ]		2042398	0					
ANR	2042409	IdentifierDeclType	PID_ENTRY *		2042398	0					
ANR	2042410	Identifier	arr		2042398	1					
ANR	2042411	AssignmentExpression	* arr = new PID_ENTRY [ 1 ]		2042398	2		=			
ANR	2042412	Identifier	arr		2042398	0					
ANR	2042413	PrimaryExpression	1		2042398	1					
ANR	2042414	ExpressionStatement	arr [ 0 ] . pid = getpid ( )	74:4:2332:2353	2042398	1	True				
ANR	2042415	AssignmentExpression	arr [ 0 ] . pid = getpid ( )		2042398	0		=			
ANR	2042416	MemberAccess	arr [ 0 ] . pid		2042398	0					
ANR	2042417	ArrayIndexing	arr [ 0 ]		2042398	0					
ANR	2042418	Identifier	arr		2042398	0					
ANR	2042419	PrimaryExpression	0		2042398	1					
ANR	2042420	Identifier	pid		2042398	1					
ANR	2042421	CallExpression	getpid ( )		2042398	1					
ANR	2042422	Callee	getpid		2042398	0					
ANR	2042423	Identifier	getpid		2042398	0					
ANR	2042424	ArgumentList			2042398	1					
ANR	2042425	ExpressionStatement	arr [ 0 ] . ppid = getppid ( )	75:4:2359:2382	2042398	2	True				
ANR	2042426	AssignmentExpression	arr [ 0 ] . ppid = getppid ( )		2042398	0		=			
ANR	2042427	MemberAccess	arr [ 0 ] . ppid		2042398	0					
ANR	2042428	ArrayIndexing	arr [ 0 ]		2042398	0					
ANR	2042429	Identifier	arr		2042398	0					
ANR	2042430	PrimaryExpression	0		2042398	1					
ANR	2042431	Identifier	ppid		2042398	1					
ANR	2042432	CallExpression	getppid ( )		2042398	1					
ANR	2042433	Callee	getppid		2042398	0					
ANR	2042434	Identifier	getppid		2042398	0					
ANR	2042435	ArgumentList			2042398	1					
ANR	2042436	ExpressionStatement	arr [ 0 ] . depth = 1	76:4:2388:2404	2042398	3	True				
ANR	2042437	AssignmentExpression	arr [ 0 ] . depth = 1		2042398	0		=			
ANR	2042438	MemberAccess	arr [ 0 ] . depth		2042398	0					
ANR	2042439	ArrayIndexing	arr [ 0 ]		2042398	0					
ANR	2042440	Identifier	arr		2042398	0					
ANR	2042441	PrimaryExpression	0		2042398	1					
ANR	2042442	Identifier	depth		2042398	1					
ANR	2042443	PrimaryExpression	1		2042398	1					
ANR	2042444	ExpressionStatement	arr [ 0 ] . breadth = breadth	77:4:2410:2434	2042398	4	True				
ANR	2042445	AssignmentExpression	arr [ 0 ] . breadth = breadth		2042398	0		=			
ANR	2042446	MemberAccess	arr [ 0 ] . breadth		2042398	0					
ANR	2042447	ArrayIndexing	arr [ 0 ]		2042398	0					
ANR	2042448	Identifier	arr		2042398	0					
ANR	2042449	PrimaryExpression	0		2042398	1					
ANR	2042450	Identifier	breadth		2042398	1					
ANR	2042451	Identifier	breadth		2042398	1					
ANR	2042452	ReturnStatement	return arr ;	78:4:2440:2450	2042398	5	True				
ANR	2042453	Identifier	arr		2042398	0					
ANR	2042454	IdentifierDeclStatement	int * * fds ;	84:2:2554:2563	2042398	1	True				
ANR	2042455	IdentifierDecl	* * fds		2042398	0					
ANR	2042456	IdentifierDeclType	int * *		2042398	0					
ANR	2042457	Identifier	fds		2042398	1					
ANR	2042458	Statement	fds	85:2:2567:2569	2042398	2	True				
ANR	2042459	Statement	=	85:6:2571:2571	2042398	3	True				
ANR	2042460	Statement	new	85:8:2573:2575	2042398	4	True				
ANR	2042461	Statement	int	85:12:2577:2579	2042398	5	True				
ANR	2042462	Statement	*	85:15:2580:2580	2042398	6	True				
ANR	2042463	Statement	[	85:16:2581:2581	2042398	7	True				
ANR	2042464	Statement	breadth	85:17:2582:2588	2042398	8	True				
ANR	2042465	Statement	]	85:24:2589:2589	2042398	9	True				
ANR	2042466	ExpressionStatement		85:25:2590:2590	2042398	10	True				
ANR	2042467	ForStatement	for ( int i = 0 ; i < breadth ; i ++ )		2042398	11					
ANR	2042468	ForInit	int i = 0 ;	86:6:2598:2607	2042398	0	True				
ANR	2042469	IdentifierDeclStatement	int i = 0 ;		2042398	0					
ANR	2042470	IdentifierDecl	i = 0		2042398	0					
ANR	2042471	IdentifierDeclType	int		2042398	0					
ANR	2042472	Identifier	i		2042398	1					
ANR	2042473	AssignmentExpression	i = 0		2042398	2		=			
ANR	2042474	Identifier	i		2042398	0					
ANR	2042475	PrimaryExpression	0		2042398	1					
ANR	2042476	Condition	i < breadth	86:17:2609:2619	2042398	1	True				
ANR	2042477	RelationalExpression	i < breadth		2042398	0		<			
ANR	2042478	Identifier	i		2042398	0					
ANR	2042479	Identifier	breadth		2042398	1					
ANR	2042480	PostIncDecOperationExpression	i ++	86:30:2622:2624	2042398	2	True				
ANR	2042481	Identifier	i		2042398	0					
ANR	2042482	IncDec	++		2042398	1					
ANR	2042483	CompoundStatement		18:34:421:421	2042398	3					
ANR	2042484	ExpressionStatement	fds [ i ] = new int [ 2 ]	87:4:2632:2651	2042398	0	True				
ANR	2042485	AssignmentExpression	fds [ i ] = new int [ 2 ]		2042398	0		=			
ANR	2042486	ArrayIndexing	fds [ i ]		2042398	0					
ANR	2042487	Identifier	fds		2042398	0					
ANR	2042488	Identifier	i		2042398	1					
ANR	2042489	PrimaryExpression	2		2042398	1					
ANR	2042490	IdentifierDeclStatement	"PID_ENTRY * pid_arr = new PID_ENTRY [ get_num_nodes ( depth + 1 , breadth ) ] ;"	91:2:2733:2803	2042398	12	True				
ANR	2042491	IdentifierDecl	"* pid_arr = new PID_ENTRY [ get_num_nodes ( depth + 1 , breadth ) ]"		2042398	0					
ANR	2042492	IdentifierDeclType	PID_ENTRY *		2042398	0					
ANR	2042493	Identifier	pid_arr		2042398	1					
ANR	2042494	AssignmentExpression	"* pid_arr = new PID_ENTRY [ get_num_nodes ( depth + 1 , breadth ) ]"		2042398	2		=			
ANR	2042495	Identifier	pid_arr		2042398	0					
ANR	2042496	CallExpression	"get_num_nodes ( depth + 1 , breadth )"		2042398	1					
ANR	2042497	Callee	get_num_nodes		2042398	0					
ANR	2042498	Identifier	get_num_nodes		2042398	0					
ANR	2042499	ArgumentList	depth + 1		2042398	1					
ANR	2042500	Argument	depth + 1		2042398	0					
ANR	2042501	AdditiveExpression	depth + 1		2042398	0		+			
ANR	2042502	Identifier	depth		2042398	0					
ANR	2042503	PrimaryExpression	1		2042398	1					
ANR	2042504	Argument	breadth		2042398	1					
ANR	2042505	Identifier	breadth		2042398	0					
ANR	2042506	ForStatement	for ( int i = 0 ; i < breadth ; i ++ )		2042398	13					
ANR	2042507	ForInit	int i = 0 ;	93:7:2813:2822	2042398	0	True				
ANR	2042508	IdentifierDeclStatement	int i = 0 ;		2042398	0					
ANR	2042509	IdentifierDecl	i = 0		2042398	0					
ANR	2042510	IdentifierDeclType	int		2042398	0					
ANR	2042511	Identifier	i		2042398	1					
ANR	2042512	AssignmentExpression	i = 0		2042398	2		=			
ANR	2042513	Identifier	i		2042398	0					
ANR	2042514	PrimaryExpression	0		2042398	1					
ANR	2042515	Condition	i < breadth	93:18:2824:2834	2042398	1	True				
ANR	2042516	RelationalExpression	i < breadth		2042398	0		<			
ANR	2042517	Identifier	i		2042398	0					
ANR	2042518	Identifier	breadth		2042398	1					
ANR	2042519	PostIncDecOperationExpression	i ++	93:31:2837:2839	2042398	2	True				
ANR	2042520	Identifier	i		2042398	0					
ANR	2042521	IncDec	++		2042398	1					
ANR	2042522	CompoundStatement		29:4:688:708	2042398	3					
ANR	2042523	ExpressionStatement	pipe ( fds [ i ] )	96:4:2875:2887	2042398	0	True				
ANR	2042524	CallExpression	pipe ( fds [ i ] )		2042398	0					
ANR	2042525	Callee	pipe		2042398	0					
ANR	2042526	Identifier	pipe		2042398	0					
ANR	2042527	ArgumentList	fds [ i ]		2042398	1					
ANR	2042528	Argument	fds [ i ]		2042398	0					
ANR	2042529	ArrayIndexing	fds [ i ]		2042398	0					
ANR	2042530	Identifier	fds		2042398	0					
ANR	2042531	Identifier	i		2042398	1					
ANR	2042532	IdentifierDeclStatement	pid_t child = fork ( ) ;	97:4:2893:2913	2042398	1	True				
ANR	2042533	IdentifierDecl	child = fork ( )		2042398	0					
ANR	2042534	IdentifierDeclType	pid_t		2042398	0					
ANR	2042535	Identifier	child		2042398	1					
ANR	2042536	AssignmentExpression	child = fork ( )		2042398	2		=			
ANR	2042537	Identifier	child		2042398	0					
ANR	2042538	CallExpression	fork ( )		2042398	1					
ANR	2042539	Callee	fork		2042398	0					
ANR	2042540	Identifier	fork		2042398	0					
ANR	2042541	ArgumentList			2042398	1					
ANR	2042542	IfStatement	if ( child == 0 )		2042398	2					
ANR	2042543	Condition	child == 0	98:7:2922:2931	2042398	0	True				
ANR	2042544	EqualityExpression	child == 0		2042398	0		==			
ANR	2042545	Identifier	child		2042398	0					
ANR	2042546	PrimaryExpression	0		2042398	1					
ANR	2042547	CompoundStatement		48:6:1311:1357	2042398	1					
ANR	2042548	IfStatement	if ( verbose )		2042398	0					
ANR	2042549	Condition	verbose	102:9:2976:2982	2042398	0	True				
ANR	2042550	Identifier	verbose		2042398	0					
ANR	2042551	CompoundStatement		34:17:779:779	2042398	1					
ANR	2042552	ExpressionStatement	"printf ( ""Process %d is the #%d child of %d at depth %d\\n"" , getpid ( ) , i , getppid ( ) , TOTAL_DEPTH - depth )"	103:1:2987:3099	2042398	0	True				
ANR	2042553	CallExpression	"printf ( ""Process %d is the #%d child of %d at depth %d\\n"" , getpid ( ) , i , getppid ( ) , TOTAL_DEPTH - depth )"		2042398	0					
ANR	2042554	Callee	printf		2042398	0					
ANR	2042555	Identifier	printf		2042398	0					
ANR	2042556	ArgumentList	"""Process %d is the #%d child of %d at depth %d\\n"""		2042398	1					
ANR	2042557	Argument	"""Process %d is the #%d child of %d at depth %d\\n"""		2042398	0					
ANR	2042558	PrimaryExpression	"""Process %d is the #%d child of %d at depth %d\\n"""		2042398	0					
ANR	2042559	Argument	getpid ( )		2042398	1					
ANR	2042560	CallExpression	getpid ( )		2042398	0					
ANR	2042561	Callee	getpid		2042398	0					
ANR	2042562	Identifier	getpid		2042398	0					
ANR	2042563	ArgumentList			2042398	1					
ANR	2042564	Argument	i		2042398	2					
ANR	2042565	Identifier	i		2042398	0					
ANR	2042566	Argument	getppid ( )		2042398	3					
ANR	2042567	CallExpression	getppid ( )		2042398	0					
ANR	2042568	Callee	getppid		2042398	0					
ANR	2042569	Identifier	getppid		2042398	0					
ANR	2042570	ArgumentList			2042398	1					
ANR	2042571	Argument	TOTAL_DEPTH - depth		2042398	4					
ANR	2042572	AdditiveExpression	TOTAL_DEPTH - depth		2042398	0		-			
ANR	2042573	Identifier	TOTAL_DEPTH		2042398	0					
ANR	2042574	Identifier	depth		2042398	1					
ANR	2042575	IdentifierDeclStatement	"PID_ENTRY * child_arr = recursive_fork ( depth - 1 , breadth + TREE_BREADTH_CHANGE , verbose ) ;"	108:6:3140:3228	2042398	1	True				
ANR	2042576	IdentifierDecl	"* child_arr = recursive_fork ( depth - 1 , breadth + TREE_BREADTH_CHANGE , verbose )"		2042398	0					
ANR	2042577	IdentifierDeclType	PID_ENTRY *		2042398	0					
ANR	2042578	Identifier	child_arr		2042398	1					
ANR	2042579	AssignmentExpression	"* child_arr = recursive_fork ( depth - 1 , breadth + TREE_BREADTH_CHANGE , verbose )"		2042398	2		=			
ANR	2042580	Identifier	child_arr		2042398	0					
ANR	2042581	CallExpression	"recursive_fork ( depth - 1 , breadth + TREE_BREADTH_CHANGE , verbose )"		2042398	1					
ANR	2042582	Callee	recursive_fork		2042398	0					
ANR	2042583	Identifier	recursive_fork		2042398	0					
ANR	2042584	ArgumentList	depth - 1		2042398	1					
ANR	2042585	Argument	depth - 1		2042398	0					
ANR	2042586	AdditiveExpression	depth - 1		2042398	0		-			
ANR	2042587	Identifier	depth		2042398	0					
ANR	2042588	PrimaryExpression	1		2042398	1					
ANR	2042589	Argument	breadth + TREE_BREADTH_CHANGE		2042398	1					
ANR	2042590	AdditiveExpression	breadth + TREE_BREADTH_CHANGE		2042398	0		+			
ANR	2042591	Identifier	breadth		2042398	0					
ANR	2042592	Identifier	TREE_BREADTH_CHANGE		2042398	1					
ANR	2042593	Argument	verbose		2042398	2					
ANR	2042594	Identifier	verbose		2042398	0					
ANR	2042595	ExpressionStatement	"do_work ( MEMFACTOR * 1024 , verbose )"	113:6:3405:3437	2042398	2	True				
ANR	2042596	CallExpression	"do_work ( MEMFACTOR * 1024 , verbose )"		2042398	0					
ANR	2042597	Callee	do_work		2042398	0					
ANR	2042598	Identifier	do_work		2042398	0					
ANR	2042599	ArgumentList	MEMFACTOR * 1024		2042398	1					
ANR	2042600	Argument	MEMFACTOR * 1024		2042398	0					
ANR	2042601	MultiplicativeExpression	MEMFACTOR * 1024		2042398	0		*			
ANR	2042602	Identifier	MEMFACTOR		2042398	0					
ANR	2042603	PrimaryExpression	1024		2042398	1					
ANR	2042604	Argument	verbose		2042398	1					
ANR	2042605	Identifier	verbose		2042398	0					
ANR	2042606	IdentifierDeclStatement	"int num_nodes = get_num_nodes ( depth , breadth ) ;"	116:6:3516:3562	2042398	3	True				
ANR	2042607	IdentifierDecl	"num_nodes = get_num_nodes ( depth , breadth )"		2042398	0					
ANR	2042608	IdentifierDeclType	int		2042398	0					
ANR	2042609	Identifier	num_nodes		2042398	1					
ANR	2042610	AssignmentExpression	"num_nodes = get_num_nodes ( depth , breadth )"		2042398	2		=			
ANR	2042611	Identifier	num_nodes		2042398	0					
ANR	2042612	CallExpression	"get_num_nodes ( depth , breadth )"		2042398	1					
ANR	2042613	Callee	get_num_nodes		2042398	0					
ANR	2042614	Identifier	get_num_nodes		2042398	0					
ANR	2042615	ArgumentList	depth		2042398	1					
ANR	2042616	Argument	depth		2042398	0					
ANR	2042617	Identifier	depth		2042398	0					
ANR	2042618	Argument	breadth		2042398	1					
ANR	2042619	Identifier	breadth		2042398	0					
ANR	2042620	ExpressionStatement	child_arr [ 0 ] . pid = getpid ( )	117:6:3570:3597	2042398	4	True				
ANR	2042621	AssignmentExpression	child_arr [ 0 ] . pid = getpid ( )		2042398	0		=			
ANR	2042622	MemberAccess	child_arr [ 0 ] . pid		2042398	0					
ANR	2042623	ArrayIndexing	child_arr [ 0 ]		2042398	0					
ANR	2042624	Identifier	child_arr		2042398	0					
ANR	2042625	PrimaryExpression	0		2042398	1					
ANR	2042626	Identifier	pid		2042398	1					
ANR	2042627	CallExpression	getpid ( )		2042398	1					
ANR	2042628	Callee	getpid		2042398	0					
ANR	2042629	Identifier	getpid		2042398	0					
ANR	2042630	ArgumentList			2042398	1					
ANR	2042631	ExpressionStatement	child_arr [ 0 ] . ppid = getppid ( )	118:6:3605:3634	2042398	5	True				
ANR	2042632	AssignmentExpression	child_arr [ 0 ] . ppid = getppid ( )		2042398	0		=			
ANR	2042633	MemberAccess	child_arr [ 0 ] . ppid		2042398	0					
ANR	2042634	ArrayIndexing	child_arr [ 0 ]		2042398	0					
ANR	2042635	Identifier	child_arr		2042398	0					
ANR	2042636	PrimaryExpression	0		2042398	1					
ANR	2042637	Identifier	ppid		2042398	1					
ANR	2042638	CallExpression	getppid ( )		2042398	1					
ANR	2042639	Callee	getppid		2042398	0					
ANR	2042640	Identifier	getppid		2042398	0					
ANR	2042641	ArgumentList			2042398	1					
ANR	2042642	ExpressionStatement	child_arr [ 0 ] . depth = TOTAL_DEPTH - depth	119:6:3642:3682	2042398	6	True				
ANR	2042643	AssignmentExpression	child_arr [ 0 ] . depth = TOTAL_DEPTH - depth		2042398	0		=			
ANR	2042644	MemberAccess	child_arr [ 0 ] . depth		2042398	0					
ANR	2042645	ArrayIndexing	child_arr [ 0 ]		2042398	0					
ANR	2042646	Identifier	child_arr		2042398	0					
ANR	2042647	PrimaryExpression	0		2042398	1					
ANR	2042648	Identifier	depth		2042398	1					
ANR	2042649	AdditiveExpression	TOTAL_DEPTH - depth		2042398	1		-			
ANR	2042650	Identifier	TOTAL_DEPTH		2042398	0					
ANR	2042651	Identifier	depth		2042398	1					
ANR	2042652	ExpressionStatement	child_arr [ 0 ] . subtree_depth = depth	120:6:3690:3724	2042398	7	True				
ANR	2042653	AssignmentExpression	child_arr [ 0 ] . subtree_depth = depth		2042398	0		=			
ANR	2042654	MemberAccess	child_arr [ 0 ] . subtree_depth		2042398	0					
ANR	2042655	ArrayIndexing	child_arr [ 0 ]		2042398	0					
ANR	2042656	Identifier	child_arr		2042398	0					
ANR	2042657	PrimaryExpression	0		2042398	1					
ANR	2042658	Identifier	subtree_depth		2042398	1					
ANR	2042659	Identifier	depth		2042398	1					
ANR	2042660	ExpressionStatement	child_arr [ 0 ] . breadth = i	121:6:3732:3756	2042398	8	True				
ANR	2042661	AssignmentExpression	child_arr [ 0 ] . breadth = i		2042398	0		=			
ANR	2042662	MemberAccess	child_arr [ 0 ] . breadth		2042398	0					
ANR	2042663	ArrayIndexing	child_arr [ 0 ]		2042398	0					
ANR	2042664	Identifier	child_arr		2042398	0					
ANR	2042665	PrimaryExpression	0		2042398	1					
ANR	2042666	Identifier	breadth		2042398	1					
ANR	2042667	Identifier	i		2042398	1					
ANR	2042668	ExpressionStatement	close ( fds [ i ] [ 0 ] )	124:6:3803:3819	2042398	9	True				
ANR	2042669	CallExpression	close ( fds [ i ] [ 0 ] )		2042398	0					
ANR	2042670	Callee	close		2042398	0					
ANR	2042671	Identifier	close		2042398	0					
ANR	2042672	ArgumentList	fds [ i ] [ 0 ]		2042398	1					
ANR	2042673	Argument	fds [ i ] [ 0 ]		2042398	0					
ANR	2042674	ArrayIndexing	fds [ i ] [ 0 ]		2042398	0					
ANR	2042675	ArrayIndexing	fds [ i ]		2042398	0					
ANR	2042676	Identifier	fds		2042398	0					
ANR	2042677	Identifier	i		2042398	1					
ANR	2042678	PrimaryExpression	0		2042398	1					
ANR	2042679	ExpressionStatement	"write ( fds [ i ] [ 1 ] , child_arr , num_nodes * sizeof ( PID_ENTRY ) )"	125:6:3827:3885	2042398	10	True				
ANR	2042680	CallExpression	"write ( fds [ i ] [ 1 ] , child_arr , num_nodes * sizeof ( PID_ENTRY ) )"		2042398	0					
ANR	2042681	Callee	write		2042398	0					
ANR	2042682	Identifier	write		2042398	0					
ANR	2042683	ArgumentList	fds [ i ] [ 1 ]		2042398	1					
ANR	2042684	Argument	fds [ i ] [ 1 ]		2042398	0					
ANR	2042685	ArrayIndexing	fds [ i ] [ 1 ]		2042398	0					
ANR	2042686	ArrayIndexing	fds [ i ]		2042398	0					
ANR	2042687	Identifier	fds		2042398	0					
ANR	2042688	Identifier	i		2042398	1					
ANR	2042689	PrimaryExpression	1		2042398	1					
ANR	2042690	Argument	child_arr		2042398	1					
ANR	2042691	Identifier	child_arr		2042398	0					
ANR	2042692	Argument	num_nodes * sizeof ( PID_ENTRY )		2042398	2					
ANR	2042693	MultiplicativeExpression	num_nodes * sizeof ( PID_ENTRY )		2042398	0		*			
ANR	2042694	Identifier	num_nodes		2042398	0					
ANR	2042695	SizeofExpression	sizeof ( PID_ENTRY )		2042398	1					
ANR	2042696	Sizeof	sizeof		2042398	0					
ANR	2042697	SizeofOperand	PID_ENTRY		2042398	1					
ANR	2042698	Statement	delete	126:6:3893:3898	2042398	11	True				
ANR	2042699	Statement	[	126:12:3899:3899	2042398	12	True				
ANR	2042700	Statement	]	126:13:3900:3900	2042398	13	True				
ANR	2042701	ExpressionStatement	child_arr	126:15:3902:3911	2042398	14	True				
ANR	2042702	Identifier	child_arr		2042398	0					
ANR	2042703	ExpressionStatement	"kill ( getpid ( ) , SIGSTOP )"	130:6:3980:4003	2042398	15	True				
ANR	2042704	CallExpression	"kill ( getpid ( ) , SIGSTOP )"		2042398	0					
ANR	2042705	Callee	kill		2042398	0					
ANR	2042706	Identifier	kill		2042398	0					
ANR	2042707	ArgumentList	getpid ( )		2042398	1					
ANR	2042708	Argument	getpid ( )		2042398	0					
ANR	2042709	CallExpression	getpid ( )		2042398	0					
ANR	2042710	Callee	getpid		2042398	0					
ANR	2042711	Identifier	getpid		2042398	0					
ANR	2042712	ArgumentList			2042398	1					
ANR	2042713	Argument	SIGSTOP		2042398	1					
ANR	2042714	Identifier	SIGSTOP		2042398	0					
ANR	2042715	WhileStatement	while ( wait ( 0 ) != - 1 )		2042398	16					
ANR	2042716	Condition	wait ( 0 ) != - 1	132:12:4072:4084	2042398	0	True				
ANR	2042717	EqualityExpression	wait ( 0 ) != - 1		2042398	0		!=			
ANR	2042718	CallExpression	wait ( 0 )		2042398	0					
ANR	2042719	Callee	wait		2042398	0					
ANR	2042720	Identifier	wait		2042398	0					
ANR	2042721	ArgumentList	0		2042398	1					
ANR	2042722	Argument	0		2042398	0					
ANR	2042723	PrimaryExpression	0		2042398	0					
ANR	2042724	UnaryOperationExpression	- 1		2042398	1					
ANR	2042725	UnaryOperator	-		2042398	0					
ANR	2042726	PrimaryExpression	1		2042398	1					
ANR	2042727	ExpressionStatement		133:1:4088:4088	2042398	1	True				
ANR	2042728	IfStatement	if ( verbose )		2042398	17					
ANR	2042729	Condition	verbose	134:9:4099:4105	2042398	0	True				
ANR	2042730	Identifier	verbose		2042398	0					
ANR	2042731	CompoundStatement		66:17:1902:1902	2042398	1					
ANR	2042732	ExpressionStatement	"printf ( ""exiting process %d\\n"" , getpid ( ) )"	135:1:4110:4150	2042398	0	True				
ANR	2042733	CallExpression	"printf ( ""exiting process %d\\n"" , getpid ( ) )"		2042398	0					
ANR	2042734	Callee	printf		2042398	0					
ANR	2042735	Identifier	printf		2042398	0					
ANR	2042736	ArgumentList	"""exiting process %d\\n"""		2042398	1					
ANR	2042737	Argument	"""exiting process %d\\n"""		2042398	0					
ANR	2042738	PrimaryExpression	"""exiting process %d\\n"""		2042398	0					
ANR	2042739	Argument	getpid ( )		2042398	1					
ANR	2042740	CallExpression	getpid ( )		2042398	0					
ANR	2042741	Callee	getpid		2042398	0					
ANR	2042742	Identifier	getpid		2042398	0					
ANR	2042743	ArgumentList			2042398	1					
ANR	2042744	ExpressionStatement	exit ( 0 )	137:6:4166:4173	2042398	18	True				
ANR	2042745	CallExpression	exit ( 0 )		2042398	0					
ANR	2042746	Callee	exit		2042398	0					
ANR	2042747	Identifier	exit		2042398	0					
ANR	2042748	ArgumentList	0		2042398	1					
ANR	2042749	Argument	0		2042398	0					
ANR	2042750	PrimaryExpression	0		2042398	0					
ANR	2042751	IfStatement	if ( child == - 1 )		2042398	3					
ANR	2042752	Condition	child == - 1	140:7:4204:4214	2042398	0	True				
ANR	2042753	EqualityExpression	child == - 1		2042398	0		==			
ANR	2042754	Identifier	child		2042398	0					
ANR	2042755	UnaryOperationExpression	- 1		2042398	1					
ANR	2042756	UnaryOperator	-		2042398	0					
ANR	2042757	PrimaryExpression	1		2042398	1					
ANR	2042758	CompoundStatement		72:19:2011:2011	2042398	1					
ANR	2042759	ExpressionStatement	"perror ( ""Error forking child"" )"	141:6:4224:4253	2042398	0	True				
ANR	2042760	CallExpression	"perror ( ""Error forking child"" )"		2042398	0					
ANR	2042761	Callee	perror		2042398	0					
ANR	2042762	Identifier	perror		2042398	0					
ANR	2042763	ArgumentList	"""Error forking child"""		2042398	1					
ANR	2042764	Argument	"""Error forking child"""		2042398	0					
ANR	2042765	PrimaryExpression	"""Error forking child"""		2042398	0					
ANR	2042766	IfStatement	if ( errno == EAGAIN )		2042398	1					
ANR	2042767	Condition	errno == EAGAIN	143:9:4290:4304	2042398	0	True				
ANR	2042768	EqualityExpression	errno == EAGAIN		2042398	0		==			
ANR	2042769	Identifier	errno		2042398	0					
ANR	2042770	Identifier	EAGAIN		2042398	1					
ANR	2042771	CompoundStatement		75:25:2101:2101	2042398	1					
ANR	2042772	ExpressionStatement	"printf ( ""EAGAIN\\n"" )"	144:1:4309:4327	2042398	0	True				
ANR	2042773	CallExpression	"printf ( ""EAGAIN\\n"" )"		2042398	0					
ANR	2042774	Callee	printf		2042398	0					
ANR	2042775	Identifier	printf		2042398	0					
ANR	2042776	ArgumentList	"""EAGAIN\\n"""		2042398	1					
ANR	2042777	Argument	"""EAGAIN\\n"""		2042398	0					
ANR	2042778	PrimaryExpression	"""EAGAIN\\n"""		2042398	0					
ANR	2042779	ElseStatement	else		2042398	0					
ANR	2042780	IfStatement	if ( errno == ENOMEM )		2042398	0					
ANR	2042781	Condition	errno == ENOMEM	146:14:4351:4365	2042398	0	True				
ANR	2042782	EqualityExpression	errno == ENOMEM		2042398	0		==			
ANR	2042783	Identifier	errno		2042398	0					
ANR	2042784	Identifier	ENOMEM		2042398	1					
ANR	2042785	CompoundStatement		78:30:2162:2162	2042398	1					
ANR	2042786	ExpressionStatement	"printf ( ""ENOMEM\\n"" )"	147:1:4370:4388	2042398	0	True				
ANR	2042787	CallExpression	"printf ( ""ENOMEM\\n"" )"		2042398	0					
ANR	2042788	Callee	printf		2042398	0					
ANR	2042789	Identifier	printf		2042398	0					
ANR	2042790	ArgumentList	"""ENOMEM\\n"""		2042398	1					
ANR	2042791	Argument	"""ENOMEM\\n"""		2042398	0					
ANR	2042792	PrimaryExpression	"""ENOMEM\\n"""		2042398	0					
ANR	2042793	IdentifierDeclStatement	PID_ENTRY p ;	155:2:4492:4503	2042398	14	True				
ANR	2042794	IdentifierDecl	p		2042398	0					
ANR	2042795	IdentifierDeclType	PID_ENTRY		2042398	0					
ANR	2042796	Identifier	p		2042398	1					
ANR	2042797	ExpressionStatement	p . pid = getpid ( )	156:2:4507:4523	2042398	15	True				
ANR	2042798	AssignmentExpression	p . pid = getpid ( )		2042398	0		=			
ANR	2042799	MemberAccess	p . pid		2042398	0					
ANR	2042800	Identifier	p		2042398	0					
ANR	2042801	Identifier	pid		2042398	1					
ANR	2042802	CallExpression	getpid ( )		2042398	1					
ANR	2042803	Callee	getpid		2042398	0					
ANR	2042804	Identifier	getpid		2042398	0					
ANR	2042805	ArgumentList			2042398	1					
ANR	2042806	ExpressionStatement	p . ppid = getppid ( )	157:2:4527:4545	2042398	16	True				
ANR	2042807	AssignmentExpression	p . ppid = getppid ( )		2042398	0		=			
ANR	2042808	MemberAccess	p . ppid		2042398	0					
ANR	2042809	Identifier	p		2042398	0					
ANR	2042810	Identifier	ppid		2042398	1					
ANR	2042811	CallExpression	getppid ( )		2042398	1					
ANR	2042812	Callee	getppid		2042398	0					
ANR	2042813	Identifier	getppid		2042398	0					
ANR	2042814	ArgumentList			2042398	1					
ANR	2042815	ExpressionStatement	pid_arr [ 0 ] = p	160:2:4555:4569	2042398	17	True				
ANR	2042816	AssignmentExpression	pid_arr [ 0 ] = p		2042398	0		=			
ANR	2042817	ArrayIndexing	pid_arr [ 0 ]		2042398	0					
ANR	2042818	Identifier	pid_arr		2042398	0					
ANR	2042819	PrimaryExpression	0		2042398	1					
ANR	2042820	Identifier	p		2042398	1					
ANR	2042821	ForStatement	for ( int i = 0 ; i < breadth ; i ++ )		2042398	18					
ANR	2042822	ForInit	int i = 0 ;	163:7:4645:4654	2042398	0	True				
ANR	2042823	IdentifierDeclStatement	int i = 0 ;		2042398	0					
ANR	2042824	IdentifierDecl	i = 0		2042398	0					
ANR	2042825	IdentifierDeclType	int		2042398	0					
ANR	2042826	Identifier	i		2042398	1					
ANR	2042827	AssignmentExpression	i = 0		2042398	2		=			
ANR	2042828	Identifier	i		2042398	0					
ANR	2042829	PrimaryExpression	0		2042398	1					
ANR	2042830	Condition	i < breadth	163:18:4656:4666	2042398	1	True				
ANR	2042831	RelationalExpression	i < breadth		2042398	0		<			
ANR	2042832	Identifier	i		2042398	0					
ANR	2042833	Identifier	breadth		2042398	1					
ANR	2042834	PostIncDecOperationExpression	i ++	163:31:4669:4671	2042398	2	True				
ANR	2042835	Identifier	i		2042398	0					
ANR	2042836	IncDec	++		2042398	1					
ANR	2042837	CompoundStatement		104:4:2763:2772	2042398	3					
ANR	2042838	IdentifierDeclStatement	"int num_nodes = ( get_num_nodes ( depth + 1 , breadth ) - 1 ) / breadth ;"	165:4:4735:4799	2042398	0	True				
ANR	2042839	IdentifierDecl	"num_nodes = ( get_num_nodes ( depth + 1 , breadth ) - 1 ) / breadth"		2042398	0					
ANR	2042840	IdentifierDeclType	int		2042398	0					
ANR	2042841	Identifier	num_nodes		2042398	1					
ANR	2042842	AssignmentExpression	"num_nodes = ( get_num_nodes ( depth + 1 , breadth ) - 1 ) / breadth"		2042398	2		=			
ANR	2042843	Identifier	num_nodes		2042398	0					
ANR	2042844	MultiplicativeExpression	"( get_num_nodes ( depth + 1 , breadth ) - 1 ) / breadth"		2042398	1		/			
ANR	2042845	AdditiveExpression	"get_num_nodes ( depth + 1 , breadth ) - 1"		2042398	0		-			
ANR	2042846	CallExpression	"get_num_nodes ( depth + 1 , breadth )"		2042398	0					
ANR	2042847	Callee	get_num_nodes		2042398	0					
ANR	2042848	Identifier	get_num_nodes		2042398	0					
ANR	2042849	ArgumentList	depth + 1		2042398	1					
ANR	2042850	Argument	depth + 1		2042398	0					
ANR	2042851	AdditiveExpression	depth + 1		2042398	0		+			
ANR	2042852	Identifier	depth		2042398	0					
ANR	2042853	PrimaryExpression	1		2042398	1					
ANR	2042854	Argument	breadth		2042398	1					
ANR	2042855	Identifier	breadth		2042398	0					
ANR	2042856	PrimaryExpression	1		2042398	1					
ANR	2042857	Identifier	breadth		2042398	1					
ANR	2042858	IdentifierDeclStatement	PID_ENTRY temp_arr [ num_nodes ] ;	167:4:4810:4840	2042398	1	True				
ANR	2042859	IdentifierDecl	temp_arr [ num_nodes ]		2042398	0					
ANR	2042860	IdentifierDeclType	PID_ENTRY [ num_nodes ]		2042398	0					
ANR	2042861	Identifier	temp_arr		2042398	1					
ANR	2042862	Identifier	num_nodes		2042398	2					
ANR	2042863	ExpressionStatement	close ( fds [ i ] [ 1 ] )	168:4:4846:4862	2042398	2	True				
ANR	2042864	CallExpression	close ( fds [ i ] [ 1 ] )		2042398	0					
ANR	2042865	Callee	close		2042398	0					
ANR	2042866	Identifier	close		2042398	0					
ANR	2042867	ArgumentList	fds [ i ] [ 1 ]		2042398	1					
ANR	2042868	Argument	fds [ i ] [ 1 ]		2042398	0					
ANR	2042869	ArrayIndexing	fds [ i ] [ 1 ]		2042398	0					
ANR	2042870	ArrayIndexing	fds [ i ]		2042398	0					
ANR	2042871	Identifier	fds		2042398	0					
ANR	2042872	Identifier	i		2042398	1					
ANR	2042873	PrimaryExpression	1		2042398	1					
ANR	2042874	ExpressionStatement	"read ( fds [ i ] [ 0 ] , temp_arr , num_nodes * sizeof ( PID_ENTRY ) )"	169:4:4868:4924	2042398	3	True				
ANR	2042875	CallExpression	"read ( fds [ i ] [ 0 ] , temp_arr , num_nodes * sizeof ( PID_ENTRY ) )"		2042398	0					
ANR	2042876	Callee	read		2042398	0					
ANR	2042877	Identifier	read		2042398	0					
ANR	2042878	ArgumentList	fds [ i ] [ 0 ]		2042398	1					
ANR	2042879	Argument	fds [ i ] [ 0 ]		2042398	0					
ANR	2042880	ArrayIndexing	fds [ i ] [ 0 ]		2042398	0					
ANR	2042881	ArrayIndexing	fds [ i ]		2042398	0					
ANR	2042882	Identifier	fds		2042398	0					
ANR	2042883	Identifier	i		2042398	1					
ANR	2042884	PrimaryExpression	0		2042398	1					
ANR	2042885	Argument	temp_arr		2042398	1					
ANR	2042886	Identifier	temp_arr		2042398	0					
ANR	2042887	Argument	num_nodes * sizeof ( PID_ENTRY )		2042398	2					
ANR	2042888	MultiplicativeExpression	num_nodes * sizeof ( PID_ENTRY )		2042398	0		*			
ANR	2042889	Identifier	num_nodes		2042398	0					
ANR	2042890	SizeofExpression	sizeof ( PID_ENTRY )		2042398	1					
ANR	2042891	Sizeof	sizeof		2042398	0					
ANR	2042892	SizeofOperand	PID_ENTRY		2042398	1					
ANR	2042893	IdentifierDeclStatement	int start = 1 + i * num_nodes ;	171:4:4935:4962	2042398	4	True				
ANR	2042894	IdentifierDecl	start = 1 + i * num_nodes		2042398	0					
ANR	2042895	IdentifierDeclType	int		2042398	0					
ANR	2042896	Identifier	start		2042398	1					
ANR	2042897	AssignmentExpression	start = 1 + i * num_nodes		2042398	2		=			
ANR	2042898	Identifier	start		2042398	0					
ANR	2042899	AdditiveExpression	1 + i * num_nodes		2042398	1		+			
ANR	2042900	PrimaryExpression	1		2042398	0					
ANR	2042901	MultiplicativeExpression	i * num_nodes		2042398	1		*			
ANR	2042902	Identifier	i		2042398	0					
ANR	2042903	Identifier	num_nodes		2042398	1					
ANR	2042904	IdentifierDeclStatement	int k = 0 ;	172:4:4968:4977	2042398	5	True				
ANR	2042905	IdentifierDecl	k = 0		2042398	0					
ANR	2042906	IdentifierDeclType	int		2042398	0					
ANR	2042907	Identifier	k		2042398	1					
ANR	2042908	AssignmentExpression	k = 0		2042398	2		=			
ANR	2042909	Identifier	k		2042398	0					
ANR	2042910	PrimaryExpression	0		2042398	1					
ANR	2042911	ForStatement	for ( int j = start ; j < start + num_nodes ; j ++ )		2042398	6					
ANR	2042912	ForInit	int j = start ;	175:8:5022:5035	2042398	0	True				
ANR	2042913	IdentifierDeclStatement	int j = start ;		2042398	0					
ANR	2042914	IdentifierDecl	j = start		2042398	0					
ANR	2042915	IdentifierDeclType	int		2042398	0					
ANR	2042916	Identifier	j		2042398	1					
ANR	2042917	AssignmentExpression	j = start		2042398	2		=			
ANR	2042918	Identifier	start		2042398	0					
ANR	2042919	Identifier	start		2042398	1					
ANR	2042920	Condition	j < start + num_nodes	175:23:5037:5057	2042398	1	True				
ANR	2042921	RelationalExpression	j < start + num_nodes		2042398	0		<			
ANR	2042922	Identifier	j		2042398	0					
ANR	2042923	AdditiveExpression	start + num_nodes		2042398	1		+			
ANR	2042924	Identifier	start		2042398	0					
ANR	2042925	Identifier	num_nodes		2042398	1					
ANR	2042926	PostIncDecOperationExpression	j ++	175:46:5060:5062	2042398	2	True				
ANR	2042927	Identifier	j		2042398	0					
ANR	2042928	IncDec	++		2042398	1					
ANR	2042929	CompoundStatement		107:50:2859:2859	2042398	3					
ANR	2042930	ExpressionStatement	pid_arr [ j ] = temp_arr [ k ]	176:6:5072:5096	2042398	0	True				
ANR	2042931	AssignmentExpression	pid_arr [ j ] = temp_arr [ k ]		2042398	0		=			
ANR	2042932	ArrayIndexing	pid_arr [ j ]		2042398	0					
ANR	2042933	Identifier	pid_arr		2042398	0					
ANR	2042934	Identifier	j		2042398	1					
ANR	2042935	ArrayIndexing	temp_arr [ k ]		2042398	1					
ANR	2042936	Identifier	temp_arr		2042398	0					
ANR	2042937	Identifier	k		2042398	1					
ANR	2042938	ExpressionStatement	k ++	177:6:5104:5107	2042398	1	True				
ANR	2042939	PostIncDecOperationExpression	k ++		2042398	0					
ANR	2042940	Identifier	k		2042398	0					
ANR	2042941	IncDec	++		2042398	1					
ANR	2042942	ReturnStatement	return pid_arr ;	182:2:5130:5144	2042398	19	True				
ANR	2042943	Identifier	pid_arr		2042398	0					
ANR	2042944	ReturnType	PID_ENTRY *		2042398	1					
ANR	2042945	Identifier	recursive_fork		2042398	2					
ANR	2042946	ParameterList	"int depth , int breadth , bool verbose"		2042398	3					
ANR	2042947	Parameter	int depth	69:26:2167:2175	2042398	0	True				
ANR	2042948	ParameterType	int		2042398	0					
ANR	2042949	Identifier	depth		2042398	1					
ANR	2042950	Parameter	int breadth	69:37:2178:2188	2042398	1	True				
ANR	2042951	ParameterType	int		2042398	0					
ANR	2042952	Identifier	breadth		2042398	1					
ANR	2042953	Parameter	bool verbose	69:50:2191:2202	2042398	2	True				
ANR	2042954	ParameterType	bool		2042398	0					
ANR	2042955	Identifier	verbose		2042398	1					
ANR	2042956	CFGEntryNode	ENTRY		2042398		True				
ANR	2042957	CFGExitNode	EXIT		2042398		True				
ANR	2042958	Symbol	ENOMEM		2042398						
ANR	2042959	Symbol	breadth		2042398						
ANR	2042960	Symbol	p . pid		2042398						
ANR	2042961	Symbol	child_arr [ 0 ] . depth		2042398						
ANR	2042962	Symbol	num_nodes		2042398						
ANR	2042963	Symbol	arr [ 0 ] . ppid		2042398						
ANR	2042964	Symbol	arr [ 0 ] . depth		2042398						
ANR	2042965	Symbol	* fds		2042398						
ANR	2042966	Symbol	TREE_BREADTH_CHANGE		2042398						
ANR	2042967	Symbol	* * i		2042398						
ANR	2042968	Symbol	errno		2042398						
ANR	2042969	Symbol	child_arr [ 0 ] . pid		2042398						
ANR	2042970	Symbol	* arr		2042398						
ANR	2042971	Symbol	child_arr [ 0 ] . subtree_depth		2042398						
ANR	2042972	Symbol	pid_arr		2042398						
ANR	2042973	Symbol	child_arr [ 0 ] . ppid		2042398						
ANR	2042974	Symbol	p . ppid		2042398						
ANR	2042975	Symbol	child		2042398						
ANR	2042976	Symbol	child_arr [ 0 ] . breadth		2042398						
ANR	2042977	Symbol	wait		2042398						
ANR	2042978	Symbol	temp_arr		2042398						
ANR	2042979	Symbol	arr [ 0 ] . breadth		2042398						
ANR	2042980	Symbol	* pid_arr		2042398						
ANR	2042981	Symbol	* child_arr		2042398						
ANR	2042982	Symbol	* * fds		2042398						
ANR	2042983	Symbol	arr [ 0 ] . pid		2042398						
ANR	2042984	Symbol	arr		2042398						
ANR	2042985	Symbol	TOTAL_DEPTH		2042398						
ANR	2042986	Symbol	getppid		2042398						
ANR	2042987	Symbol	* temp_arr		2042398						
ANR	2042988	Symbol	child_arr		2042398						
ANR	2042989	Symbol	EAGAIN		2042398						
ANR	2042990	Symbol	start		2042398						
ANR	2042991	Symbol	i		2042398						
ANR	2042992	Symbol	get_num_nodes		2042398						
ANR	2042993	Symbol	MEMFACTOR		2042398						
ANR	2042994	Symbol	j		2042398						
ANR	2042995	Symbol	k		2042398						
ANR	2042996	Symbol	verbose		2042398						
ANR	2042997	Symbol	recursive_fork		2042398						
ANR	2042998	Symbol	p		2042398						
ANR	2042999	Symbol	fork		2042398						
ANR	2043000	Symbol	depth		2042398						
ANR	2043001	Symbol	* i		2042398						
ANR	2043002	Symbol	fds		2042398						
ANR	2043003	Symbol	* j		2042398						
ANR	2043004	Symbol	SIGSTOP		2042398						
ANR	2043005	Symbol	* k		2042398						
ANR	2043006	Symbol	getpid		2042398						
ANR	2043007	Function	fork_tree	202:0:5506:6887							
ANR	2043008	FunctionDef	"fork_tree (int depth , int breadth , int tree_breadth_change , bool verbose)"		2043007	0					
ANR	2043009	CompoundStatement		202:83:5589:6887	2043007	0					
ANR	2043010	ExpressionStatement	TREE_BREADTH_CHANGE = tree_breadth_change	203:2:5593:5634	2043007	0	True				
ANR	2043011	AssignmentExpression	TREE_BREADTH_CHANGE = tree_breadth_change		2043007	0		=			
ANR	2043012	Identifier	TREE_BREADTH_CHANGE		2043007	0					
ANR	2043013	Identifier	tree_breadth_change		2043007	1					
ANR	2043014	ExpressionStatement	TOTAL_DEPTH = depth	204:2:5638:5657	2043007	1	True				
ANR	2043015	AssignmentExpression	TOTAL_DEPTH = depth		2043007	0		=			
ANR	2043016	Identifier	TOTAL_DEPTH		2043007	0					
ANR	2043017	Identifier	depth		2043007	1					
ANR	2043018	IdentifierDeclStatement	int fds [ 2 ] ;	206:2:5662:5672	2043007	2	True				
ANR	2043019	IdentifierDecl	fds [ 2 ]		2043007	0					
ANR	2043020	IdentifierDeclType	int [ 2 ]		2043007	0					
ANR	2043021	Identifier	fds		2043007	1					
ANR	2043022	PrimaryExpression	2		2043007	2					
ANR	2043023	ExpressionStatement	pipe ( fds )	208:2:5677:5686	2043007	3	True				
ANR	2043024	CallExpression	pipe ( fds )		2043007	0					
ANR	2043025	Callee	pipe		2043007	0					
ANR	2043026	Identifier	pipe		2043007	0					
ANR	2043027	ArgumentList	fds		2043007	1					
ANR	2043028	Argument	fds		2043007	0					
ANR	2043029	Identifier	fds		2043007	0					
ANR	2043030	IdentifierDeclStatement	pid_t child = fork ( ) ;	209:2:5690:5710	2043007	4	True				
ANR	2043031	IdentifierDecl	child = fork ( )		2043007	0					
ANR	2043032	IdentifierDeclType	pid_t		2043007	0					
ANR	2043033	Identifier	child		2043007	1					
ANR	2043034	AssignmentExpression	child = fork ( )		2043007	2		=			
ANR	2043035	Identifier	child		2043007	0					
ANR	2043036	CallExpression	fork ( )		2043007	1					
ANR	2043037	Callee	fork		2043007	0					
ANR	2043038	Identifier	fork		2043007	0					
ANR	2043039	ArgumentList			2043007	1					
ANR	2043040	IfStatement	if ( child == 0 )		2043007	5					
ANR	2043041	Condition	child == 0	210:5:5717:5726	2043007	0	True				
ANR	2043042	EqualityExpression	child == 0		2043007	0		==			
ANR	2043043	Identifier	child		2043007	0					
ANR	2043044	PrimaryExpression	0		2043007	1					
ANR	2043045	CompoundStatement		15:4:298:356	2043007	1					
ANR	2043046	IfStatement	if ( verbose )		2043007	0					
ANR	2043047	Condition	verbose	211:7:5747:5753	2043007	0	True				
ANR	2043048	Identifier	verbose		2043007	0					
ANR	2043049	CompoundStatement		10:15:165:165	2043007	1					
ANR	2043050	ExpressionStatement	"printf ( ""Process %d is the head node at depth 0\\n"" , getpid ( ) )"	212:6:5763:5823	2043007	0	True				
ANR	2043051	CallExpression	"printf ( ""Process %d is the head node at depth 0\\n"" , getpid ( ) )"		2043007	0					
ANR	2043052	Callee	printf		2043007	0					
ANR	2043053	Identifier	printf		2043007	0					
ANR	2043054	ArgumentList	"""Process %d is the head node at depth 0\\n"""		2043007	1					
ANR	2043055	Argument	"""Process %d is the head node at depth 0\\n"""		2043007	0					
ANR	2043056	PrimaryExpression	"""Process %d is the head node at depth 0\\n"""		2043007	0					
ANR	2043057	Argument	getpid ( )		2043007	1					
ANR	2043058	CallExpression	getpid ( )		2043007	0					
ANR	2043059	Callee	getpid		2043007	0					
ANR	2043060	Identifier	getpid		2043007	0					
ANR	2043061	ArgumentList			2043007	1					
ANR	2043062	IdentifierDeclStatement	"int num_nodes = get_num_nodes ( depth , breadth ) ;"	215:4:5836:5881	2043007	1	True				
ANR	2043063	IdentifierDecl	"num_nodes = get_num_nodes ( depth , breadth )"		2043007	0					
ANR	2043064	IdentifierDeclType	int		2043007	0					
ANR	2043065	Identifier	num_nodes		2043007	1					
ANR	2043066	AssignmentExpression	"num_nodes = get_num_nodes ( depth , breadth )"		2043007	2		=			
ANR	2043067	Identifier	num_nodes		2043007	0					
ANR	2043068	CallExpression	"get_num_nodes ( depth , breadth )"		2043007	1					
ANR	2043069	Callee	get_num_nodes		2043007	0					
ANR	2043070	Identifier	get_num_nodes		2043007	0					
ANR	2043071	ArgumentList	depth		2043007	1					
ANR	2043072	Argument	depth		2043007	0					
ANR	2043073	Identifier	depth		2043007	0					
ANR	2043074	Argument	breadth		2043007	1					
ANR	2043075	Identifier	breadth		2043007	0					
ANR	2043076	IdentifierDeclStatement	"PID_ENTRY * p = recursive_fork ( depth - 1 , breadth , verbose ) ;"	216:4:5888:5946	2043007	2	True				
ANR	2043077	IdentifierDecl	"* p = recursive_fork ( depth - 1 , breadth , verbose )"		2043007	0					
ANR	2043078	IdentifierDeclType	PID_ENTRY *		2043007	0					
ANR	2043079	Identifier	p		2043007	1					
ANR	2043080	AssignmentExpression	"* p = recursive_fork ( depth - 1 , breadth , verbose )"		2043007	2		=			
ANR	2043081	Identifier	p		2043007	0					
ANR	2043082	CallExpression	"recursive_fork ( depth - 1 , breadth , verbose )"		2043007	1					
ANR	2043083	Callee	recursive_fork		2043007	0					
ANR	2043084	Identifier	recursive_fork		2043007	0					
ANR	2043085	ArgumentList	depth - 1		2043007	1					
ANR	2043086	Argument	depth - 1		2043007	0					
ANR	2043087	AdditiveExpression	depth - 1		2043007	0		-			
ANR	2043088	Identifier	depth		2043007	0					
ANR	2043089	PrimaryExpression	1		2043007	1					
ANR	2043090	Argument	breadth		2043007	1					
ANR	2043091	Identifier	breadth		2043007	0					
ANR	2043092	Argument	verbose		2043007	2					
ANR	2043093	Identifier	verbose		2043007	0					
ANR	2043094	ExpressionStatement	"do_work ( MEMFACTOR * 1024 , verbose )"	219:4:5998:6030	2043007	3	True				
ANR	2043095	CallExpression	"do_work ( MEMFACTOR * 1024 , verbose )"		2043007	0					
ANR	2043096	Callee	do_work		2043007	0					
ANR	2043097	Identifier	do_work		2043007	0					
ANR	2043098	ArgumentList	MEMFACTOR * 1024		2043007	1					
ANR	2043099	Argument	MEMFACTOR * 1024		2043007	0					
ANR	2043100	MultiplicativeExpression	MEMFACTOR * 1024		2043007	0		*			
ANR	2043101	Identifier	MEMFACTOR		2043007	0					
ANR	2043102	PrimaryExpression	1024		2043007	1					
ANR	2043103	Argument	verbose		2043007	1					
ANR	2043104	Identifier	verbose		2043007	0					
ANR	2043105	ExpressionStatement	p [ 0 ] . pid = getpid ( )	220:4:6036:6055	2043007	4	True				
ANR	2043106	AssignmentExpression	p [ 0 ] . pid = getpid ( )		2043007	0		=			
ANR	2043107	MemberAccess	p [ 0 ] . pid		2043007	0					
ANR	2043108	ArrayIndexing	p [ 0 ]		2043007	0					
ANR	2043109	Identifier	p		2043007	0					
ANR	2043110	PrimaryExpression	0		2043007	1					
ANR	2043111	Identifier	pid		2043007	1					
ANR	2043112	CallExpression	getpid ( )		2043007	1					
ANR	2043113	Callee	getpid		2043007	0					
ANR	2043114	Identifier	getpid		2043007	0					
ANR	2043115	ArgumentList			2043007	1					
ANR	2043116	ExpressionStatement	p [ 0 ] . ppid = getppid ( )	221:4:6061:6082	2043007	5	True				
ANR	2043117	AssignmentExpression	p [ 0 ] . ppid = getppid ( )		2043007	0		=			
ANR	2043118	MemberAccess	p [ 0 ] . ppid		2043007	0					
ANR	2043119	ArrayIndexing	p [ 0 ]		2043007	0					
ANR	2043120	Identifier	p		2043007	0					
ANR	2043121	PrimaryExpression	0		2043007	1					
ANR	2043122	Identifier	ppid		2043007	1					
ANR	2043123	CallExpression	getppid ( )		2043007	1					
ANR	2043124	Callee	getppid		2043007	0					
ANR	2043125	Identifier	getppid		2043007	0					
ANR	2043126	ArgumentList			2043007	1					
ANR	2043127	ExpressionStatement	p [ 0 ] . depth = TOTAL_DEPTH - depth	222:4:6088:6120	2043007	6	True				
ANR	2043128	AssignmentExpression	p [ 0 ] . depth = TOTAL_DEPTH - depth		2043007	0		=			
ANR	2043129	MemberAccess	p [ 0 ] . depth		2043007	0					
ANR	2043130	ArrayIndexing	p [ 0 ]		2043007	0					
ANR	2043131	Identifier	p		2043007	0					
ANR	2043132	PrimaryExpression	0		2043007	1					
ANR	2043133	Identifier	depth		2043007	1					
ANR	2043134	AdditiveExpression	TOTAL_DEPTH - depth		2043007	1		-			
ANR	2043135	Identifier	TOTAL_DEPTH		2043007	0					
ANR	2043136	Identifier	depth		2043007	1					
ANR	2043137	ExpressionStatement	p [ 0 ] . subtree_depth = depth	223:4:6126:6152	2043007	7	True				
ANR	2043138	AssignmentExpression	p [ 0 ] . subtree_depth = depth		2043007	0		=			
ANR	2043139	MemberAccess	p [ 0 ] . subtree_depth		2043007	0					
ANR	2043140	ArrayIndexing	p [ 0 ]		2043007	0					
ANR	2043141	Identifier	p		2043007	0					
ANR	2043142	PrimaryExpression	0		2043007	1					
ANR	2043143	Identifier	subtree_depth		2043007	1					
ANR	2043144	Identifier	depth		2043007	1					
ANR	2043145	ExpressionStatement	p [ 0 ] . breadth = 0	224:4:6158:6174	2043007	8	True				
ANR	2043146	AssignmentExpression	p [ 0 ] . breadth = 0		2043007	0		=			
ANR	2043147	MemberAccess	p [ 0 ] . breadth		2043007	0					
ANR	2043148	ArrayIndexing	p [ 0 ]		2043007	0					
ANR	2043149	Identifier	p		2043007	0					
ANR	2043150	PrimaryExpression	0		2043007	1					
ANR	2043151	Identifier	breadth		2043007	1					
ANR	2043152	PrimaryExpression	0		2043007	1					
ANR	2043153	ExpressionStatement	close ( fds [ 0 ] )	225:4:6180:6193	2043007	9	True				
ANR	2043154	CallExpression	close ( fds [ 0 ] )		2043007	0					
ANR	2043155	Callee	close		2043007	0					
ANR	2043156	Identifier	close		2043007	0					
ANR	2043157	ArgumentList	fds [ 0 ]		2043007	1					
ANR	2043158	Argument	fds [ 0 ]		2043007	0					
ANR	2043159	ArrayIndexing	fds [ 0 ]		2043007	0					
ANR	2043160	Identifier	fds		2043007	0					
ANR	2043161	PrimaryExpression	0		2043007	1					
ANR	2043162	ExpressionStatement	"write ( fds [ 1 ] , p , num_nodes * ( sizeof ( PID_ENTRY ) ) )"	226:4:6199:6246	2043007	10	True				
ANR	2043163	CallExpression	"write ( fds [ 1 ] , p , num_nodes * ( sizeof ( PID_ENTRY ) ) )"		2043007	0					
ANR	2043164	Callee	write		2043007	0					
ANR	2043165	Identifier	write		2043007	0					
ANR	2043166	ArgumentList	fds [ 1 ]		2043007	1					
ANR	2043167	Argument	fds [ 1 ]		2043007	0					
ANR	2043168	ArrayIndexing	fds [ 1 ]		2043007	0					
ANR	2043169	Identifier	fds		2043007	0					
ANR	2043170	PrimaryExpression	1		2043007	1					
ANR	2043171	Argument	p		2043007	1					
ANR	2043172	Identifier	p		2043007	0					
ANR	2043173	Argument	num_nodes * ( sizeof ( PID_ENTRY ) )		2043007	2					
ANR	2043174	MultiplicativeExpression	num_nodes * ( sizeof ( PID_ENTRY ) )		2043007	0		*			
ANR	2043175	Identifier	num_nodes		2043007	0					
ANR	2043176	SizeofExpression	sizeof ( PID_ENTRY )		2043007	1					
ANR	2043177	Sizeof	sizeof		2043007	0					
ANR	2043178	SizeofOperand	PID_ENTRY		2043007	1					
ANR	2043179	Statement	delete	227:4:6252:6257	2043007	11	True				
ANR	2043180	Statement	[	227:10:6258:6258	2043007	12	True				
ANR	2043181	Statement	]	227:11:6259:6259	2043007	13	True				
ANR	2043182	ExpressionStatement	p	227:13:6261:6262	2043007	14	True				
ANR	2043183	Identifier	p		2043007	0					
ANR	2043184	ExpressionStatement	"kill ( getpid ( ) , SIGSTOP )"	230:4:6303:6326	2043007	15	True				
ANR	2043185	CallExpression	"kill ( getpid ( ) , SIGSTOP )"		2043007	0					
ANR	2043186	Callee	kill		2043007	0					
ANR	2043187	Identifier	kill		2043007	0					
ANR	2043188	ArgumentList	getpid ( )		2043007	1					
ANR	2043189	Argument	getpid ( )		2043007	0					
ANR	2043190	CallExpression	getpid ( )		2043007	0					
ANR	2043191	Callee	getpid		2043007	0					
ANR	2043192	Identifier	getpid		2043007	0					
ANR	2043193	ArgumentList			2043007	1					
ANR	2043194	Argument	SIGSTOP		2043007	1					
ANR	2043195	Identifier	SIGSTOP		2043007	0					
ANR	2043196	WhileStatement	while ( wait ( 0 ) != - 1 )		2043007	16					
ANR	2043197	Condition	wait ( 0 ) != - 1	233:10:6392:6404	2043007	0	True				
ANR	2043198	EqualityExpression	wait ( 0 ) != - 1		2043007	0		!=			
ANR	2043199	CallExpression	wait ( 0 )		2043007	0					
ANR	2043200	Callee	wait		2043007	0					
ANR	2043201	Identifier	wait		2043007	0					
ANR	2043202	ArgumentList	0		2043007	1					
ANR	2043203	Argument	0		2043007	0					
ANR	2043204	PrimaryExpression	0		2043007	0					
ANR	2043205	UnaryOperationExpression	- 1		2043007	1					
ANR	2043206	UnaryOperator	-		2043007	0					
ANR	2043207	PrimaryExpression	1		2043007	1					
ANR	2043208	ExpressionStatement		234:6:6413:6413	2043007	1	True				
ANR	2043209	IfStatement	if ( verbose )		2043007	17					
ANR	2043210	Condition	verbose	235:7:6422:6428	2043007	0	True				
ANR	2043211	Identifier	verbose		2043007	0					
ANR	2043212	CompoundStatement		34:15:840:840	2043007	1					
ANR	2043213	ExpressionStatement	"printf ( ""exiting process %d\\n"" , getpid ( ) )"	236:6:6438:6478	2043007	0	True				
ANR	2043214	CallExpression	"printf ( ""exiting process %d\\n"" , getpid ( ) )"		2043007	0					
ANR	2043215	Callee	printf		2043007	0					
ANR	2043216	Identifier	printf		2043007	0					
ANR	2043217	ArgumentList	"""exiting process %d\\n"""		2043007	1					
ANR	2043218	Argument	"""exiting process %d\\n"""		2043007	0					
ANR	2043219	PrimaryExpression	"""exiting process %d\\n"""		2043007	0					
ANR	2043220	Argument	getpid ( )		2043007	1					
ANR	2043221	CallExpression	getpid ( )		2043007	0					
ANR	2043222	Callee	getpid		2043007	0					
ANR	2043223	Identifier	getpid		2043007	0					
ANR	2043224	ArgumentList			2043007	1					
ANR	2043225	ExpressionStatement	exit ( 0 )	238:4:6490:6497	2043007	18	True				
ANR	2043226	CallExpression	exit ( 0 )		2043007	0					
ANR	2043227	Callee	exit		2043007	0					
ANR	2043228	Identifier	exit		2043007	0					
ANR	2043229	ArgumentList	0		2043007	1					
ANR	2043230	Argument	0		2043007	0					
ANR	2043231	PrimaryExpression	0		2043007	0					
ANR	2043232	IdentifierDeclStatement	"int num_nodes = get_num_nodes ( depth , breadth ) ;"	241:2:6520:6565	2043007	6	True				
ANR	2043233	IdentifierDecl	"num_nodes = get_num_nodes ( depth , breadth )"		2043007	0					
ANR	2043234	IdentifierDeclType	int		2043007	0					
ANR	2043235	Identifier	num_nodes		2043007	1					
ANR	2043236	AssignmentExpression	"num_nodes = get_num_nodes ( depth , breadth )"		2043007	2		=			
ANR	2043237	Identifier	num_nodes		2043007	0					
ANR	2043238	CallExpression	"get_num_nodes ( depth , breadth )"		2043007	1					
ANR	2043239	Callee	get_num_nodes		2043007	0					
ANR	2043240	Identifier	get_num_nodes		2043007	0					
ANR	2043241	ArgumentList	depth		2043007	1					
ANR	2043242	Argument	depth		2043007	0					
ANR	2043243	Identifier	depth		2043007	0					
ANR	2043244	Argument	breadth		2043007	1					
ANR	2043245	Identifier	breadth		2043007	0					
ANR	2043246	IdentifierDeclStatement	PID_ENTRY * arr = new PID_ENTRY [ num_nodes ] ;	242:2:6569:6610	2043007	7	True				
ANR	2043247	IdentifierDecl	* arr = new PID_ENTRY [ num_nodes ]		2043007	0					
ANR	2043248	IdentifierDeclType	PID_ENTRY *		2043007	0					
ANR	2043249	Identifier	arr		2043007	1					
ANR	2043250	AssignmentExpression	* arr = new PID_ENTRY [ num_nodes ]		2043007	2		=			
ANR	2043251	Identifier	num_nodes		2043007	0					
ANR	2043252	Identifier	num_nodes		2043007	1					
ANR	2043253	ExpressionStatement	close ( fds [ 1 ] )	243:2:6614:6627	2043007	8	True				
ANR	2043254	CallExpression	close ( fds [ 1 ] )		2043007	0					
ANR	2043255	Callee	close		2043007	0					
ANR	2043256	Identifier	close		2043007	0					
ANR	2043257	ArgumentList	fds [ 1 ]		2043007	1					
ANR	2043258	Argument	fds [ 1 ]		2043007	0					
ANR	2043259	ArrayIndexing	fds [ 1 ]		2043007	0					
ANR	2043260	Identifier	fds		2043007	0					
ANR	2043261	PrimaryExpression	1		2043007	1					
ANR	2043262	ExpressionStatement	"read ( fds [ 0 ] , arr , num_nodes * ( sizeof ( PID_ENTRY ) ) )"	244:2:6631:6679	2043007	9	True				
ANR	2043263	CallExpression	"read ( fds [ 0 ] , arr , num_nodes * ( sizeof ( PID_ENTRY ) ) )"		2043007	0					
ANR	2043264	Callee	read		2043007	0					
ANR	2043265	Identifier	read		2043007	0					
ANR	2043266	ArgumentList	fds [ 0 ]		2043007	1					
ANR	2043267	Argument	fds [ 0 ]		2043007	0					
ANR	2043268	ArrayIndexing	fds [ 0 ]		2043007	0					
ANR	2043269	Identifier	fds		2043007	0					
ANR	2043270	PrimaryExpression	0		2043007	1					
ANR	2043271	Argument	arr		2043007	1					
ANR	2043272	Identifier	arr		2043007	0					
ANR	2043273	Argument	num_nodes * ( sizeof ( PID_ENTRY ) )		2043007	2					
ANR	2043274	MultiplicativeExpression	num_nodes * ( sizeof ( PID_ENTRY ) )		2043007	0		*			
ANR	2043275	Identifier	num_nodes		2043007	0					
ANR	2043276	SizeofExpression	sizeof ( PID_ENTRY )		2043007	1					
ANR	2043277	Sizeof	sizeof		2043007	0					
ANR	2043278	SizeofOperand	PID_ENTRY		2043007	1					
ANR	2043279	ForStatement	for ( int i = 0 ; i < num_nodes ; i ++ )		2043007	10					
ANR	2043280	ForInit	int i = 0 ;	246:6:6690:6699	2043007	0	True				
ANR	2043281	IdentifierDeclStatement	int i = 0 ;		2043007	0					
ANR	2043282	IdentifierDecl	i = 0		2043007	0					
ANR	2043283	IdentifierDeclType	int		2043007	0					
ANR	2043284	Identifier	i		2043007	1					
ANR	2043285	AssignmentExpression	i = 0		2043007	2		=			
ANR	2043286	Identifier	i		2043007	0					
ANR	2043287	PrimaryExpression	0		2043007	1					
ANR	2043288	Condition	i < num_nodes	246:17:6701:6713	2043007	1	True				
ANR	2043289	RelationalExpression	i < num_nodes		2043007	0		<			
ANR	2043290	Identifier	i		2043007	0					
ANR	2043291	Identifier	num_nodes		2043007	1					
ANR	2043292	PostIncDecOperationExpression	i ++	246:32:6716:6718	2043007	2	True				
ANR	2043293	Identifier	i		2043007	0					
ANR	2043294	IncDec	++		2043007	1					
ANR	2043295	CompoundStatement		45:36:1130:1130	2043007	3					
ANR	2043296	ExpressionStatement	"printf ( ""pid %d ppid %d depth %d breadth %d subtree_depth %d\\n"" , arr [ i ] . pid , arr [ i ] . ppid , arr [ i ] . depth , arr [ i ] . breadth , arr [ i ] . subtree_depth )"	247:4:6726:6866	2043007	0	True				
ANR	2043297	CallExpression	"printf ( ""pid %d ppid %d depth %d breadth %d subtree_depth %d\\n"" , arr [ i ] . pid , arr [ i ] . ppid , arr [ i ] . depth , arr [ i ] . breadth , arr [ i ] . subtree_depth )"		2043007	0					
ANR	2043298	Callee	printf		2043007	0					
ANR	2043299	Identifier	printf		2043007	0					
ANR	2043300	ArgumentList	"""pid %d ppid %d depth %d breadth %d subtree_depth %d\\n"""		2043007	1					
ANR	2043301	Argument	"""pid %d ppid %d depth %d breadth %d subtree_depth %d\\n"""		2043007	0					
ANR	2043302	PrimaryExpression	"""pid %d ppid %d depth %d breadth %d subtree_depth %d\\n"""		2043007	0					
ANR	2043303	Argument	arr [ i ] . pid		2043007	1					
ANR	2043304	MemberAccess	arr [ i ] . pid		2043007	0					
ANR	2043305	ArrayIndexing	arr [ i ]		2043007	0					
ANR	2043306	Identifier	arr		2043007	0					
ANR	2043307	Identifier	i		2043007	1					
ANR	2043308	Identifier	pid		2043007	1					
ANR	2043309	Argument	arr [ i ] . ppid		2043007	2					
ANR	2043310	MemberAccess	arr [ i ] . ppid		2043007	0					
ANR	2043311	ArrayIndexing	arr [ i ]		2043007	0					
ANR	2043312	Identifier	arr		2043007	0					
ANR	2043313	Identifier	i		2043007	1					
ANR	2043314	Identifier	ppid		2043007	1					
ANR	2043315	Argument	arr [ i ] . depth		2043007	3					
ANR	2043316	MemberAccess	arr [ i ] . depth		2043007	0					
ANR	2043317	ArrayIndexing	arr [ i ]		2043007	0					
ANR	2043318	Identifier	arr		2043007	0					
ANR	2043319	Identifier	i		2043007	1					
ANR	2043320	Identifier	depth		2043007	1					
ANR	2043321	Argument	arr [ i ] . breadth		2043007	4					
ANR	2043322	MemberAccess	arr [ i ] . breadth		2043007	0					
ANR	2043323	ArrayIndexing	arr [ i ]		2043007	0					
ANR	2043324	Identifier	arr		2043007	0					
ANR	2043325	Identifier	i		2043007	1					
ANR	2043326	Identifier	breadth		2043007	1					
ANR	2043327	Argument	arr [ i ] . subtree_depth		2043007	5					
ANR	2043328	MemberAccess	arr [ i ] . subtree_depth		2043007	0					
ANR	2043329	ArrayIndexing	arr [ i ]		2043007	0					
ANR	2043330	Identifier	arr		2043007	0					
ANR	2043331	Identifier	i		2043007	1					
ANR	2043332	Identifier	subtree_depth		2043007	1					
ANR	2043333	ReturnStatement	return arr ;	250:2:6875:6885	2043007	11	True				
ANR	2043334	Identifier	arr		2043007	0					
ANR	2043335	ReturnType	PID_ENTRY *		2043007	1					
ANR	2043336	Identifier	fork_tree		2043007	2					
ANR	2043337	ParameterList	"int depth , int breadth , int tree_breadth_change , bool verbose"		2043007	3					
ANR	2043338	Parameter	int depth	202:21:5527:5535	2043007	0	True				
ANR	2043339	ParameterType	int		2043007	0					
ANR	2043340	Identifier	depth		2043007	1					
ANR	2043341	Parameter	int breadth	202:32:5538:5548	2043007	1	True				
ANR	2043342	ParameterType	int		2043007	0					
ANR	2043343	Identifier	breadth		2043007	1					
ANR	2043344	Parameter	int tree_breadth_change	202:45:5551:5573	2043007	2	True				
ANR	2043345	ParameterType	int		2043007	0					
ANR	2043346	Identifier	tree_breadth_change		2043007	1					
ANR	2043347	Parameter	bool verbose	202:70:5576:5587	2043007	3	True				
ANR	2043348	ParameterType	bool		2043007	0					
ANR	2043349	Identifier	verbose		2043007	1					
ANR	2043350	CFGEntryNode	ENTRY		2043007		True				
ANR	2043351	CFGExitNode	EXIT		2043007		True				
ANR	2043352	Symbol	wait		2043007						
ANR	2043353	Symbol	breadth		2043007						
ANR	2043354	Symbol	num_nodes		2043007						
ANR	2043355	Symbol	arr [ i ] . breadth		2043007						
ANR	2043356	Symbol	p [ 0 ] . depth		2043007						
ANR	2043357	Symbol	p [ 0 ] . subtree_depth		2043007						
ANR	2043358	Symbol	arr [ i ] . ppid		2043007						
ANR	2043359	Symbol	arr [ i ] . subtree_depth		2043007						
ANR	2043360	Symbol	* fds		2043007						
ANR	2043361	Symbol	arr		2043007						
ANR	2043362	Symbol	TREE_BREADTH_CHANGE		2043007						
ANR	2043363	Symbol	TOTAL_DEPTH		2043007						
ANR	2043364	Symbol	p [ 0 ] . pid		2043007						
ANR	2043365	Symbol	getppid		2043007						
ANR	2043366	Symbol	arr [ i ] . depth		2043007						
ANR	2043367	Symbol	arr [ i ] . pid		2043007						
ANR	2043368	Symbol	get_num_nodes		2043007						
ANR	2043369	Symbol	MEMFACTOR		2043007						
ANR	2043370	Symbol	i		2043007						
ANR	2043371	Symbol	verbose		2043007						
ANR	2043372	Symbol	recursive_fork		2043007						
ANR	2043373	Symbol	p		2043007						
ANR	2043374	Symbol	fork		2043007						
ANR	2043375	Symbol	depth		2043007						
ANR	2043376	Symbol	* i		2043007						
ANR	2043377	Symbol	fds		2043007						
ANR	2043378	Symbol	* arr		2043007						
ANR	2043379	Symbol	p [ 0 ] . breadth		2043007						
ANR	2043380	Symbol	SIGSTOP		2043007						
ANR	2043381	Symbol	p [ 0 ] . ppid		2043007						
ANR	2043382	Symbol	* p		2043007						
ANR	2043383	Symbol	getpid		2043007						
ANR	2043384	Symbol	tree_breadth_change		2043007						
ANR	2043385	Symbol	child		2043007						
ANR	2043386	Function	end_tree	253:0:6890:7155							
ANR	2043387	FunctionDef	"end_tree (PID_ENTRY * pids , int num_pids)"		2043386	0					
ANR	2043388	CompoundStatement		253:44:6934:7155	2043386	0					
ANR	2043389	ExpressionStatement	sleep ( 10 )	255:2:6939:6948	2043386	0	True				
ANR	2043390	CallExpression	sleep ( 10 )		2043386	0					
ANR	2043391	Callee	sleep		2043386	0					
ANR	2043392	Identifier	sleep		2043386	0					
ANR	2043393	ArgumentList	10		2043386	1					
ANR	2043394	Argument	10		2043386	0					
ANR	2043395	PrimaryExpression	10		2043386	0					
ANR	2043396	ForStatement	for ( int i = 0 ; i < num_pids ; i ++ )		2043386	1					
ANR	2043397	ForInit	int i = 0 ;	257:6:7026:7035	2043386	0	True				
ANR	2043398	IdentifierDeclStatement	int i = 0 ;		2043386	0					
ANR	2043399	IdentifierDecl	i = 0		2043386	0					
ANR	2043400	IdentifierDeclType	int		2043386	0					
ANR	2043401	Identifier	i		2043386	1					
ANR	2043402	AssignmentExpression	i = 0		2043386	2		=			
ANR	2043403	Identifier	i		2043386	0					
ANR	2043404	PrimaryExpression	0		2043386	1					
ANR	2043405	Condition	i < num_pids	257:17:7037:7048	2043386	1	True				
ANR	2043406	RelationalExpression	i < num_pids		2043386	0		<			
ANR	2043407	Identifier	i		2043386	0					
ANR	2043408	Identifier	num_pids		2043386	1					
ANR	2043409	PostIncDecOperationExpression	i ++	257:31:7051:7053	2043386	2	True				
ANR	2043410	Identifier	i		2043386	0					
ANR	2043411	IncDec	++		2043386	1					
ANR	2043412	CompoundStatement		5:35:120:120	2043386	3					
ANR	2043413	ExpressionStatement	"kill ( pids [ i ] . pid , SIGCONT )"	258:4:7061:7087	2043386	0	True				
ANR	2043414	CallExpression	"kill ( pids [ i ] . pid , SIGCONT )"		2043386	0					
ANR	2043415	Callee	kill		2043386	0					
ANR	2043416	Identifier	kill		2043386	0					
ANR	2043417	ArgumentList	pids [ i ] . pid		2043386	1					
ANR	2043418	Argument	pids [ i ] . pid		2043386	0					
ANR	2043419	MemberAccess	pids [ i ] . pid		2043386	0					
ANR	2043420	ArrayIndexing	pids [ i ]		2043386	0					
ANR	2043421	Identifier	pids		2043386	0					
ANR	2043422	Identifier	i		2043386	1					
ANR	2043423	Identifier	pid		2043386	1					
ANR	2043424	Argument	SIGCONT		2043386	1					
ANR	2043425	Identifier	SIGCONT		2043386	0					
ANR	2043426	ExpressionStatement	wait ( 0 )	262:2:7128:7135	2043386	2	True				
ANR	2043427	CallExpression	wait ( 0 )		2043386	0					
ANR	2043428	Callee	wait		2043386	0					
ANR	2043429	Identifier	wait		2043386	0					
ANR	2043430	ArgumentList	0		2043386	1					
ANR	2043431	Argument	0		2043386	0					
ANR	2043432	PrimaryExpression	0		2043386	0					
ANR	2043433	Statement	delete	263:2:7139:7144	2043386	3	True				
ANR	2043434	Statement	[	263:8:7145:7145	2043386	4	True				
ANR	2043435	Statement	]	263:9:7146:7146	2043386	5	True				
ANR	2043436	ExpressionStatement	pids	263:11:7148:7152	2043386	6	True				
ANR	2043437	Identifier	pids		2043386	0					
ANR	2043438	ReturnType	void		2043386	1					
ANR	2043439	Identifier	end_tree		2043386	2					
ANR	2043440	ParameterList	"PID_ENTRY * pids , int num_pids"		2043386	3					
ANR	2043441	Parameter	PID_ENTRY * pids	253:14:6904:6918	2043386	0	True				
ANR	2043442	ParameterType	PID_ENTRY *		2043386	0					
ANR	2043443	Identifier	pids		2043386	1					
ANR	2043444	Parameter	int num_pids	253:31:6921:6932	2043386	1	True				
ANR	2043445	ParameterType	int		2043386	0					
ANR	2043446	Identifier	num_pids		2043386	1					
ANR	2043447	CFGEntryNode	ENTRY		2043386		True				
ANR	2043448	CFGExitNode	EXIT		2043386		True				
ANR	2043449	Symbol	* i		2043386						
ANR	2043450	Symbol	num_pids		2043386						
ANR	2043451	Symbol	pids [ i ] . pid		2043386						
ANR	2043452	Symbol	i		2043386						
ANR	2043453	Symbol	pids		2043386						
ANR	2043454	Symbol	SIGCONT		2043386						
ANR	2043455	Symbol	* pids		2043386						
ANR	2043456	Function	get_approx_mem	268:0:7159:7660							
ANR	2043457	FunctionDef	"get_approx_mem (int depth , int breadth)"		2043456	0					
ANR	2043458	CompoundStatement		268:42:7201:7660	2043456	0					
ANR	2043459	IfStatement	if ( depth <= 0 || breadth <= 0 )		2043456	0					
ANR	2043460	Condition	depth <= 0 || breadth <= 0	270:6:7210:7235	2043456	0	True				
ANR	2043461	OrExpression	depth <= 0 || breadth <= 0		2043456	0		||			
ANR	2043462	RelationalExpression	depth <= 0		2043456	0		<=			
ANR	2043463	Identifier	depth		2043456	0					
ANR	2043464	PrimaryExpression	0		2043456	1					
ANR	2043465	RelationalExpression	breadth <= 0		2043456	1		<=			
ANR	2043466	Identifier	breadth		2043456	0					
ANR	2043467	PrimaryExpression	0		2043456	1					
ANR	2043468	CompoundStatement		3:33:35:35	2043456	1					
ANR	2043469	ReturnStatement	return 0 ;	271:4:7243:7251	2043456	0	True				
ANR	2043470	PrimaryExpression	0		2043456	0					
ANR	2043471	IdentifierDeclStatement	int mem ;	273:2:7259:7266	2043456	1	True				
ANR	2043472	IdentifierDecl	mem		2043456	0					
ANR	2043473	IdentifierDeclType	int		2043456	0					
ANR	2043474	Identifier	mem		2043456	1					
ANR	2043475	ExpressionStatement	mem = 0	275:2:7285:7292	2043456	2	True				
ANR	2043476	AssignmentExpression	mem = 0		2043456	0		=			
ANR	2043477	Identifier	mem		2043456	0					
ANR	2043478	PrimaryExpression	0		2043456	1					
ANR	2043479	IdentifierDeclStatement	int mem_per_group = 0 ;	277:2:7360:7381	2043456	3	True				
ANR	2043480	IdentifierDecl	mem_per_group = 0		2043456	0					
ANR	2043481	IdentifierDeclType	int		2043456	0					
ANR	2043482	Identifier	mem_per_group		2043456	1					
ANR	2043483	AssignmentExpression	mem_per_group = 0		2043456	2		=			
ANR	2043484	Identifier	mem_per_group		2043456	0					
ANR	2043485	PrimaryExpression	0		2043456	1					
ANR	2043486	ForStatement	for ( int i = 1 ; i <= breadth ; i ++ )		2043456	4					
ANR	2043487	ForInit	int i = 1 ;	279:6:7390:7399	2043456	0	True				
ANR	2043488	IdentifierDeclStatement	int i = 1 ;		2043456	0					
ANR	2043489	IdentifierDecl	i = 1		2043456	0					
ANR	2043490	IdentifierDeclType	int		2043456	0					
ANR	2043491	Identifier	i		2043456	1					
ANR	2043492	AssignmentExpression	i = 1		2043456	2		=			
ANR	2043493	Identifier	i		2043456	0					
ANR	2043494	PrimaryExpression	1		2043456	1					
ANR	2043495	Condition	i <= breadth	279:17:7401:7412	2043456	1	True				
ANR	2043496	RelationalExpression	i <= breadth		2043456	0		<=			
ANR	2043497	Identifier	i		2043456	0					
ANR	2043498	Identifier	breadth		2043456	1					
ANR	2043499	PostIncDecOperationExpression	i ++	279:31:7415:7417	2043456	2	True				
ANR	2043500	Identifier	i		2043456	0					
ANR	2043501	IncDec	++		2043456	1					
ANR	2043502	CompoundStatement		12:35:217:217	2043456	3					
ANR	2043503	ExpressionStatement	mem_per_group += MEMFACTOR	280:4:7425:7451	2043456	0	True				
ANR	2043504	AssignmentExpression	mem_per_group += MEMFACTOR		2043456	0		+=			
ANR	2043505	Identifier	mem_per_group		2043456	0					
ANR	2043506	Identifier	MEMFACTOR		2043456	1					
ANR	2043507	ExpressionStatement	mem = MEMFACTOR	284:2:7478:7493	2043456	5	True				
ANR	2043508	AssignmentExpression	mem = MEMFACTOR		2043456	0		=			
ANR	2043509	Identifier	mem		2043456	0					
ANR	2043510	Identifier	MEMFACTOR		2043456	1					
ANR	2043511	ForStatement	for ( int i = 1 ; i < depth ; i ++ )		2043456	6					
ANR	2043512	ForInit	int i = 1 ;	285:7:7502:7511	2043456	0	True				
ANR	2043513	IdentifierDeclStatement	int i = 1 ;		2043456	0					
ANR	2043514	IdentifierDecl	i = 1		2043456	0					
ANR	2043515	IdentifierDeclType	int		2043456	0					
ANR	2043516	Identifier	i		2043456	1					
ANR	2043517	AssignmentExpression	i = 1		2043456	2		=			
ANR	2043518	Identifier	i		2043456	0					
ANR	2043519	PrimaryExpression	1		2043456	1					
ANR	2043520	Condition	i < depth	285:18:7513:7521	2043456	1	True				
ANR	2043521	RelationalExpression	i < depth		2043456	0		<			
ANR	2043522	Identifier	i		2043456	0					
ANR	2043523	Identifier	depth		2043456	1					
ANR	2043524	PostIncDecOperationExpression	i ++	285:29:7524:7526	2043456	2	True				
ANR	2043525	Identifier	i		2043456	0					
ANR	2043526	IncDec	++		2043456	1					
ANR	2043527	CompoundStatement		19:4:332:384	2043456	3					
ANR	2043528	IdentifierDeclStatement	"int num_nodes = ( int ) pow ( ( double ) breadth , ( double ) i ) ;"	286:4:7534:7586	2043456	0	True				
ANR	2043529	IdentifierDecl	"num_nodes = ( int ) pow ( ( double ) breadth , ( double ) i )"		2043456	0					
ANR	2043530	IdentifierDeclType	int		2043456	0					
ANR	2043531	Identifier	num_nodes		2043456	1					
ANR	2043532	AssignmentExpression	"num_nodes = ( int ) pow ( ( double ) breadth , ( double ) i )"		2043456	2		=			
ANR	2043533	Identifier	num_nodes		2043456	0					
ANR	2043534	CastExpression	"( int ) pow ( ( double ) breadth , ( double ) i )"		2043456	1					
ANR	2043535	CastTarget	int		2043456	0					
ANR	2043536	CallExpression	"pow ( ( double ) breadth , ( double ) i )"		2043456	1					
ANR	2043537	Callee	pow		2043456	0					
ANR	2043538	Identifier	pow		2043456	0					
ANR	2043539	ArgumentList	( double ) breadth		2043456	1					
ANR	2043540	Argument	( double ) breadth		2043456	0					
ANR	2043541	CastExpression	( double ) breadth		2043456	0					
ANR	2043542	CastTarget	double		2043456	0					
ANR	2043543	Identifier	breadth		2043456	1					
ANR	2043544	Argument	( double ) i		2043456	1					
ANR	2043545	CastExpression	( double ) i		2043456	0					
ANR	2043546	CastTarget	double		2043456	0					
ANR	2043547	Identifier	i		2043456	1					
ANR	2043548	ExpressionStatement	mem += ( num_nodes / breadth ) * mem_per_group	287:4:7592:7636	2043456	1	True				
ANR	2043549	AssignmentExpression	mem += ( num_nodes / breadth ) * mem_per_group		2043456	0		+=			
ANR	2043550	Identifier	mem		2043456	0					
ANR	2043551	MultiplicativeExpression	( num_nodes / breadth ) * mem_per_group		2043456	1		*			
ANR	2043552	MultiplicativeExpression	num_nodes / breadth		2043456	0		/			
ANR	2043553	Identifier	num_nodes		2043456	0					
ANR	2043554	Identifier	breadth		2043456	1					
ANR	2043555	Identifier	mem_per_group		2043456	1					
ANR	2043556	ReturnStatement	return mem ;	290:2:7647:7657	2043456	7	True				
ANR	2043557	Identifier	mem		2043456	0					
ANR	2043558	ReturnType	int		2043456	1					
ANR	2043559	Identifier	get_approx_mem		2043456	2					
ANR	2043560	ParameterList	"int depth , int breadth"		2043456	3					
ANR	2043561	Parameter	int depth	268:19:7178:7186	2043456	0	True				
ANR	2043562	ParameterType	int		2043456	0					
ANR	2043563	Identifier	depth		2043456	1					
ANR	2043564	Parameter	int breadth	268:30:7189:7199	2043456	1	True				
ANR	2043565	ParameterType	int		2043456	0					
ANR	2043566	Identifier	breadth		2043456	1					
ANR	2043567	CFGEntryNode	ENTRY		2043456		True				
ANR	2043568	CFGExitNode	EXIT		2043456		True				
ANR	2043569	Symbol	depth		2043456						
ANR	2043570	Symbol	breadth		2043456						
ANR	2043571	Symbol	mem		2043456						
ANR	2043572	Symbol	i		2043456						
ANR	2043573	Symbol	MEMFACTOR		2043456						
ANR	2043574	Symbol	pow		2043456						
ANR	2043575	Symbol	num_nodes		2043456						
ANR	2043576	Symbol	mem_per_group		2043456						
ANR	2043577	Function	get_num_nodes	294:0:7663:7894							
ANR	2043578	FunctionDef	"get_num_nodes (int depth , int breadth)"		2043577	0					
ANR	2043579	CompoundStatement		294:41:7704:7894	2043577	0					
ANR	2043580	IfStatement	if ( depth <= 0 || breadth <= 0 )		2043577	0					
ANR	2043581	Condition	depth <= 0 || breadth <= 0	296:6:7713:7738	2043577	0	True				
ANR	2043582	OrExpression	depth <= 0 || breadth <= 0		2043577	0		||			
ANR	2043583	RelationalExpression	depth <= 0		2043577	0		<=			
ANR	2043584	Identifier	depth		2043577	0					
ANR	2043585	PrimaryExpression	0		2043577	1					
ANR	2043586	RelationalExpression	breadth <= 0		2043577	1		<=			
ANR	2043587	Identifier	breadth		2043577	0					
ANR	2043588	PrimaryExpression	0		2043577	1					
ANR	2043589	CompoundStatement		3:33:35:35	2043577	1					
ANR	2043590	ReturnStatement	return 0 ;	297:4:7746:7754	2043577	0	True				
ANR	2043591	PrimaryExpression	0		2043577	0					
ANR	2043592	IdentifierDeclStatement	int num_nodes = 0 ;	299:2:7762:7779	2043577	1	True				
ANR	2043593	IdentifierDecl	num_nodes = 0		2043577	0					
ANR	2043594	IdentifierDeclType	int		2043577	0					
ANR	2043595	Identifier	num_nodes		2043577	1					
ANR	2043596	AssignmentExpression	num_nodes = 0		2043577	2		=			
ANR	2043597	Identifier	num_nodes		2043577	0					
ANR	2043598	PrimaryExpression	0		2043577	1					
ANR	2043599	ForStatement	for ( int i = 0 ; i < depth ; i ++ )		2043577	2					
ANR	2043600	ForInit	int i = 0 ;	300:6:7787:7796	2043577	0	True				
ANR	2043601	IdentifierDeclStatement	int i = 0 ;		2043577	0					
ANR	2043602	IdentifierDecl	i = 0		2043577	0					
ANR	2043603	IdentifierDeclType	int		2043577	0					
ANR	2043604	Identifier	i		2043577	1					
ANR	2043605	AssignmentExpression	i = 0		2043577	2		=			
ANR	2043606	Identifier	i		2043577	0					
ANR	2043607	PrimaryExpression	0		2043577	1					
ANR	2043608	Condition	i < depth	300:17:7798:7806	2043577	1	True				
ANR	2043609	RelationalExpression	i < depth		2043577	0		<			
ANR	2043610	Identifier	i		2043577	0					
ANR	2043611	Identifier	depth		2043577	1					
ANR	2043612	PostIncDecOperationExpression	i ++	300:28:7809:7811	2043577	2	True				
ANR	2043613	Identifier	i		2043577	0					
ANR	2043614	IncDec	++		2043577	1					
ANR	2043615	CompoundStatement		7:32:108:108	2043577	3					
ANR	2043616	ExpressionStatement	"num_nodes += ( int ) pow ( ( double ) breadth , ( double ) i )"	301:4:7819:7868	2043577	0	True				
ANR	2043617	AssignmentExpression	"num_nodes += ( int ) pow ( ( double ) breadth , ( double ) i )"		2043577	0		+=			
ANR	2043618	Identifier	num_nodes		2043577	0					
ANR	2043619	CastExpression	"( int ) pow ( ( double ) breadth , ( double ) i )"		2043577	1					
ANR	2043620	CastTarget	int		2043577	0					
ANR	2043621	CallExpression	"pow ( ( double ) breadth , ( double ) i )"		2043577	1					
ANR	2043622	Callee	pow		2043577	0					
ANR	2043623	Identifier	pow		2043577	0					
ANR	2043624	ArgumentList	( double ) breadth		2043577	1					
ANR	2043625	Argument	( double ) breadth		2043577	0					
ANR	2043626	CastExpression	( double ) breadth		2043577	0					
ANR	2043627	CastTarget	double		2043577	0					
ANR	2043628	Identifier	breadth		2043577	1					
ANR	2043629	Argument	( double ) i		2043577	1					
ANR	2043630	CastExpression	( double ) i		2043577	0					
ANR	2043631	CastTarget	double		2043577	0					
ANR	2043632	Identifier	i		2043577	1					
ANR	2043633	ReturnStatement	return num_nodes ;	303:2:7876:7892	2043577	3	True				
ANR	2043634	Identifier	num_nodes		2043577	0					
ANR	2043635	ReturnType	int		2043577	1					
ANR	2043636	Identifier	get_num_nodes		2043577	2					
ANR	2043637	ParameterList	"int depth , int breadth"		2043577	3					
ANR	2043638	Parameter	int depth	294:18:7681:7689	2043577	0	True				
ANR	2043639	ParameterType	int		2043577	0					
ANR	2043640	Identifier	depth		2043577	1					
ANR	2043641	Parameter	int breadth	294:29:7692:7702	2043577	1	True				
ANR	2043642	ParameterType	int		2043577	0					
ANR	2043643	Identifier	breadth		2043577	1					
ANR	2043644	CFGEntryNode	ENTRY		2043577		True				
ANR	2043645	CFGExitNode	EXIT		2043577		True				
ANR	2043646	Symbol	depth		2043577						
ANR	2043647	Symbol	breadth		2043577						
ANR	2043648	Symbol	i		2043577						
ANR	2043649	Symbol	pow		2043577						
ANR	2043650	Symbol	num_nodes		2043577						
