command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3162193	File	data/converged/CVE-2011-4930_htcondor/src_condor_dagman_node_scheduler_Trie.cpp								
ANR	3162194	Function	Trie :: Trie	43:0:1013:1240							
ANR	3162195	FunctionDef	Trie :: Trie ()		3162194	0					
ANR	3162196	CompoundStatement		44:0:1030:1240	3162194	0					
ANR	3162197	Statement	root	45:1:1033:1036	3162194	0	True				
ANR	3162198	Statement	=	45:6:1038:1038	3162194	1	True				
ANR	3162199	Statement	new	45:8:1040:1042	3162194	2	True				
ANR	3162200	ExpressionStatement	Trie_Node	45:12:1044:1053	3162194	3	True				
ANR	3162201	Identifier	Trie_Node		3162194	0					
ANR	3162202	IfStatement	if ( NULL == root )		3162194	4					
ANR	3162203	Condition	NULL == root	46:5:1060:1069	3162194	0	True				
ANR	3162204	EqualityExpression	NULL == root		3162194	0		==			
ANR	3162205	Identifier	NULL		3162194	0					
ANR	3162206	Identifier	root		3162194	1					
ANR	3162207	ThrowStatement	"throw ""Trie::Trie, root is NULL"" ;"	47:2:1075:1107	3162194	1	True				
ANR	3162208	PrimaryExpression	"""Trie::Trie, root is NULL"""		3162194	0					
ANR	3162209	ExpressionStatement	root -> letter = 'a'	49:1:1111:1129	3162194	5	True				
ANR	3162210	AssignmentExpression	root -> letter = 'a'		3162194	0		=			
ANR	3162211	PtrMemberAccess	root -> letter		3162194	0					
ANR	3162212	Identifier	root		3162194	0					
ANR	3162213	Identifier	letter		3162194	1					
ANR	3162214	PrimaryExpression	'a'		3162194	1					
ANR	3162215	ExpressionStatement	root -> id = - 1	50:1:1132:1145	3162194	6	True				
ANR	3162216	AssignmentExpression	root -> id = - 1		3162194	0		=			
ANR	3162217	PtrMemberAccess	root -> id		3162194	0					
ANR	3162218	Identifier	root		3162194	0					
ANR	3162219	Identifier	id		3162194	1					
ANR	3162220	UnaryOperationExpression	- 1		3162194	1					
ANR	3162221	UnaryOperator	-		3162194	0					
ANR	3162222	PrimaryExpression	1		3162194	1					
ANR	3162223	ExpressionStatement	root -> child = NULL	51:1:1197:1215	3162194	7	True				
ANR	3162224	AssignmentExpression	root -> child = NULL		3162194	0		=			
ANR	3162225	PtrMemberAccess	root -> child		3162194	0					
ANR	3162226	Identifier	root		3162194	0					
ANR	3162227	Identifier	child		3162194	1					
ANR	3162228	Identifier	NULL		3162194	1					
ANR	3162229	ExpressionStatement	root -> sibling = NULL	52:1:1218:1238	3162194	8	True				
ANR	3162230	AssignmentExpression	root -> sibling = NULL		3162194	0		=			
ANR	3162231	PtrMemberAccess	root -> sibling		3162194	0					
ANR	3162232	Identifier	root		3162194	0					
ANR	3162233	Identifier	sibling		3162194	1					
ANR	3162234	Identifier	NULL		3162194	1					
ANR	3162235	Identifier	Trie :: Trie		3162194	1					
ANR	3162236	ParameterList			3162194	2					
ANR	3162237	CFGEntryNode	ENTRY		3162194		True				
ANR	3162238	CFGExitNode	EXIT		3162194		True				
ANR	3162239	CFGExceptionNode	EXCEPTION		3162194		True				
ANR	3162240	Symbol	NULL		3162194						
ANR	3162241	Symbol	root -> letter		3162194						
ANR	3162242	Symbol	root -> sibling		3162194						
ANR	3162243	Symbol	root		3162194						
ANR	3162244	Symbol	* root		3162194						
ANR	3162245	Symbol	root -> id		3162194						
ANR	3162246	Symbol	root -> child		3162194						
ANR	3162247	Function	Trie :: ~Trie	70:0:1436:1494							
ANR	3162248	FunctionDef	Trie :: ~Trie ()		3162247	0					
ANR	3162249	CompoundStatement		71:0:1454:1494	3162247	0					
ANR	3162250	ExpressionStatement	removeRecursive ( root )	72:1:1457:1478	3162247	0	True				
ANR	3162251	CallExpression	removeRecursive ( root )		3162247	0					
ANR	3162252	Callee	removeRecursive		3162247	0					
ANR	3162253	Identifier	removeRecursive		3162247	0					
ANR	3162254	ArgumentList	root		3162247	1					
ANR	3162255	Argument	root		3162247	0					
ANR	3162256	Identifier	root		3162247	0					
ANR	3162257	ExpressionStatement	root = NULL	73:1:1481:1492	3162247	1	True				
ANR	3162258	AssignmentExpression	root = NULL		3162247	0		=			
ANR	3162259	Identifier	root		3162247	0					
ANR	3162260	Identifier	NULL		3162247	1					
ANR	3162261	Identifier	Trie :: ~Trie		3162247	1					
ANR	3162262	ParameterList			3162247	2					
ANR	3162263	CFGEntryNode	ENTRY		3162247		True				
ANR	3162264	CFGExitNode	EXIT		3162247		True				
ANR	3162265	Symbol	NULL		3162247						
ANR	3162266	Symbol	root		3162247						
ANR	3162267	Function	Trie :: removeRecursive	90:0:1683:1867							
ANR	3162268	FunctionDef	Trie :: removeRecursive (Trie_Node * node)		3162267	0					
ANR	3162269	CompoundStatement		91:0:1729:1867	3162267	0					
ANR	3162270	IdentifierDeclStatement	Trie_Node * temp ;	92:1:1732:1747	3162267	0	True				
ANR	3162271	IdentifierDecl	* temp		3162267	0					
ANR	3162272	IdentifierDeclType	Trie_Node *		3162267	0					
ANR	3162273	Identifier	temp		3162267	1					
ANR	3162274	WhileStatement	while ( NULL != node )		3162267	1					
ANR	3162275	Condition	NULL != node	94:8:1758:1769	3162267	0	True				
ANR	3162276	EqualityExpression	NULL != node		3162267	0		!=			
ANR	3162277	Identifier	NULL		3162267	0					
ANR	3162278	Identifier	node		3162267	1					
ANR	3162279	CompoundStatement		4:23:43:43	3162267	1					
ANR	3162280	ExpressionStatement	removeRecursive ( node -> child )	95:2:1777:1807	3162267	0	True				
ANR	3162281	CallExpression	removeRecursive ( node -> child )		3162267	0					
ANR	3162282	Callee	removeRecursive		3162267	0					
ANR	3162283	Identifier	removeRecursive		3162267	0					
ANR	3162284	ArgumentList	node -> child		3162267	1					
ANR	3162285	Argument	node -> child		3162267	0					
ANR	3162286	PtrMemberAccess	node -> child		3162267	0					
ANR	3162287	Identifier	node		3162267	0					
ANR	3162288	Identifier	child		3162267	1					
ANR	3162289	ExpressionStatement	temp = node	96:2:1811:1822	3162267	1	True				
ANR	3162290	AssignmentExpression	temp = node		3162267	0		=			
ANR	3162291	Identifier	temp		3162267	0					
ANR	3162292	Identifier	node		3162267	1					
ANR	3162293	ExpressionStatement	node = node -> sibling	97:2:1826:1846	3162267	2	True				
ANR	3162294	AssignmentExpression	node = node -> sibling		3162267	0		=			
ANR	3162295	Identifier	node		3162267	0					
ANR	3162296	PtrMemberAccess	node -> sibling		3162267	1					
ANR	3162297	Identifier	node		3162267	0					
ANR	3162298	Identifier	sibling		3162267	1					
ANR	3162299	Statement	delete	98:2:1850:1855	3162267	3	True				
ANR	3162300	ExpressionStatement	temp	98:9:1857:1861	3162267	4	True				
ANR	3162301	Identifier	temp		3162267	0					
ANR	3162302	ExpressionStatement		99:2:1865:1865	3162267	2	True				
ANR	3162303	ReturnType	void		3162267	1					
ANR	3162304	Identifier	Trie :: removeRecursive		3162267	2					
ANR	3162305	ParameterList	Trie_Node * node		3162267	3					
ANR	3162306	Parameter	Trie_Node * node	90:28:1711:1725	3162267	0	True				
ANR	3162307	ParameterType	Trie_Node *		3162267	0					
ANR	3162308	Identifier	node		3162267	1					
ANR	3162309	CFGEntryNode	ENTRY		3162267		True				
ANR	3162310	CFGExitNode	EXIT		3162267		True				
ANR	3162311	Symbol	node		3162267						
ANR	3162312	Symbol	temp		3162267						
ANR	3162313	Symbol	NULL		3162267						
ANR	3162314	Symbol	* node		3162267						
ANR	3162315	Symbol	node -> child		3162267						
ANR	3162316	Symbol	node -> sibling		3162267						
ANR	3162317	Function	Trie :: add	119:0:2201:4436							
ANR	3162318	FunctionDef	"Trie :: add (const char * string , int id)"		3162317	0					
ANR	3162319	CompoundStatement		120:0:2246:4436	3162317	0					
ANR	3162320	IdentifierDeclStatement	Trie_Node * node ;	121:1:2249:2264	3162317	0	True				
ANR	3162321	IdentifierDecl	* node		3162317	0					
ANR	3162322	IdentifierDeclType	Trie_Node *		3162317	0					
ANR	3162323	Identifier	node		3162317	1					
ANR	3162324	IdentifierDeclStatement	int i ;	122:1:2267:2272	3162317	1	True				
ANR	3162325	IdentifierDecl	i		3162317	0					
ANR	3162326	IdentifierDeclType	int		3162317	0					
ANR	3162327	Identifier	i		3162317	1					
ANR	3162328	IfStatement	if ( NULL == string || '\\0' == string [ 0 ] )		3162317	2					
ANR	3162329	Condition	NULL == string || '\\0' == string [ 0 ]	125:5:2315:2345	3162317	0	True				
ANR	3162330	OrExpression	NULL == string || '\\0' == string [ 0 ]		3162317	0		||			
ANR	3162331	EqualityExpression	NULL == string		3162317	0		==			
ANR	3162332	Identifier	NULL		3162317	0					
ANR	3162333	Identifier	string		3162317	1					
ANR	3162334	EqualityExpression	'\\0' == string [ 0 ]		3162317	1		==			
ANR	3162335	PrimaryExpression	'\\0'		3162317	0					
ANR	3162336	ArrayIndexing	string [ 0 ]		3162317	1					
ANR	3162337	Identifier	string		3162317	0					
ANR	3162338	PrimaryExpression	0		3162317	1					
ANR	3162339	ThrowStatement	"throw ""Trie::add, null or empty string"" ;"	126:2:2351:2390	3162317	1	True				
ANR	3162340	PrimaryExpression	"""Trie::add, null or empty string"""		3162317	0					
ANR	3162341	IfStatement	if ( id < 0 )		3162317	3					
ANR	3162342	Condition	id < 0	129:5:2426:2429	3162317	0	True				
ANR	3162343	RelationalExpression	id < 0		3162317	0		<			
ANR	3162344	Identifier	id		3162317	0					
ANR	3162345	PrimaryExpression	0		3162317	1					
ANR	3162346	ThrowStatement	"throw ""Trie::add, negative id"" ;"	130:2:2435:2465	3162317	1	True				
ANR	3162347	PrimaryExpression	"""Trie::add, negative id"""		3162317	0					
ANR	3162348	ExpressionStatement	i = 0	133:1:2494:2497	3162317	4	True				
ANR	3162349	AssignmentExpression	i = 0		3162317	0		=			
ANR	3162350	Identifier	i		3162317	0					
ANR	3162351	PrimaryExpression	0		3162317	1					
ANR	3162352	ExpressionStatement	node = root	134:1:2500:2511	3162317	5	True				
ANR	3162353	AssignmentExpression	node = root		3162317	0		=			
ANR	3162354	Identifier	node		3162317	0					
ANR	3162355	Identifier	root		3162317	1					
ANR	3162356	WhileStatement	while ( true )		3162317	6					
ANR	3162357	Condition	true	135:8:2521:2524	3162317	0	True				
ANR	3162358	Identifier	true		3162317	0					
ANR	3162359	CompoundStatement		24:2:471:489	3162317	1					
ANR	3162360	IfStatement	if ( i > 10000 )		3162317	0					
ANR	3162361	Condition	i > 10000	138:6:2588:2594	3162317	0	True				
ANR	3162362	RelationalExpression	i > 10000		3162317	0		>			
ANR	3162363	Identifier	i		3162317	0					
ANR	3162364	PrimaryExpression	10000		3162317	1					
ANR	3162365	ThrowStatement	"throw ""Trie::add, lack of zero?"" ;"	139:3:2601:2633	3162317	1	True				
ANR	3162366	PrimaryExpression	"""Trie::add, lack of zero?"""		3162317	0					
ANR	3162367	IdentifierDeclStatement	Trie_Node * temp = node ;	142:2:2692:2714	3162317	1	True				
ANR	3162368	IdentifierDecl	* temp = node		3162317	0					
ANR	3162369	IdentifierDeclType	Trie_Node *		3162317	0					
ANR	3162370	Identifier	temp		3162317	1					
ANR	3162371	AssignmentExpression	* temp = node		3162317	2		=			
ANR	3162372	Identifier	node		3162317	0					
ANR	3162373	Identifier	node		3162317	1					
ANR	3162374	IdentifierDeclStatement	bool found = false ;	143:2:2718:2736	3162317	2	True				
ANR	3162375	IdentifierDecl	found = false		3162317	0					
ANR	3162376	IdentifierDeclType	bool		3162317	0					
ANR	3162377	Identifier	found		3162317	1					
ANR	3162378	AssignmentExpression	found = false		3162317	2		=			
ANR	3162379	Identifier	false		3162317	0					
ANR	3162380	Identifier	false		3162317	1					
ANR	3162381	WhileStatement	while ( true )		3162317	3					
ANR	3162382	Condition	true	144:9:2747:2750	3162317	0	True				
ANR	3162383	Identifier	true		3162317	0					
ANR	3162384	CompoundStatement		25:16:507:507	3162317	1					
ANR	3162385	IfStatement	if ( temp -> letter == string [ i ] )		3162317	0					
ANR	3162386	Condition	temp -> letter == string [ i ]	145:7:2763:2787	3162317	0	True				
ANR	3162387	EqualityExpression	temp -> letter == string [ i ]		3162317	0		==			
ANR	3162388	PtrMemberAccess	temp -> letter		3162317	0					
ANR	3162389	Identifier	temp		3162317	0					
ANR	3162390	Identifier	letter		3162317	1					
ANR	3162391	ArrayIndexing	string [ i ]		3162317	1					
ANR	3162392	Identifier	string		3162317	0					
ANR	3162393	Identifier	i		3162317	1					
ANR	3162394	CompoundStatement		26:35:544:544	3162317	1					
ANR	3162395	ExpressionStatement	found = true	146:4:2797:2809	3162317	0	True				
ANR	3162396	AssignmentExpression	found = true		3162317	0		=			
ANR	3162397	Identifier	found		3162317	0					
ANR	3162398	Identifier	true		3162317	1					
ANR	3162399	BreakStatement	break ;	147:4:2815:2820	3162317	1	True				
ANR	3162400	ExpressionStatement		148:4:2826:2826	3162317	1	True				
ANR	3162401	IfStatement	if ( NULL != temp -> sibling )		3162317	2					
ANR	3162402	Condition	NULL != temp -> sibling	149:7:2835:2855	3162317	0	True				
ANR	3162403	EqualityExpression	NULL != temp -> sibling		3162317	0		!=			
ANR	3162404	Identifier	NULL		3162317	0					
ANR	3162405	PtrMemberAccess	temp -> sibling		3162317	1					
ANR	3162406	Identifier	temp		3162317	0					
ANR	3162407	Identifier	sibling		3162317	1					
ANR	3162408	ExpressionStatement	temp = temp -> sibling	150:4:2863:2883	3162317	1	True				
ANR	3162409	AssignmentExpression	temp = temp -> sibling		3162317	0		=			
ANR	3162410	Identifier	temp		3162317	0					
ANR	3162411	PtrMemberAccess	temp -> sibling		3162317	1					
ANR	3162412	Identifier	temp		3162317	0					
ANR	3162413	Identifier	sibling		3162317	1					
ANR	3162414	ElseStatement	else		3162317	0					
ANR	3162415	BreakStatement	break ;	152:4:2897:2902	3162317	0	True				
ANR	3162416	ExpressionStatement		153:3:2907:2907	3162317	4	True				
ANR	3162417	IfStatement	if ( found )		3162317	5					
ANR	3162418	Condition	found	155:6:2916:2920	3162317	0	True				
ANR	3162419	Identifier	found		3162317	0					
ANR	3162420	CompoundStatement		36:14:677:677	3162317	1					
ANR	3162421	IfStatement	if ( '\\0' == string [ i + 1 ] )		3162317	0					
ANR	3162422	Condition	'\\0' == string [ i + 1 ]	158:7:3013:3031	3162317	0	True				
ANR	3162423	EqualityExpression	'\\0' == string [ i + 1 ]		3162317	0		==			
ANR	3162424	PrimaryExpression	'\\0'		3162317	0					
ANR	3162425	ArrayIndexing	string [ i + 1 ]		3162317	1					
ANR	3162426	Identifier	string		3162317	0					
ANR	3162427	AdditiveExpression	i + 1		3162317	1		+			
ANR	3162428	Identifier	i		3162317	0					
ANR	3162429	PrimaryExpression	1		3162317	1					
ANR	3162430	CompoundStatement		39:29:788:788	3162317	1					
ANR	3162431	IfStatement	if ( - 1 != temp -> id )		3162317	0					
ANR	3162432	Condition	- 1 != temp -> id	161:8:3096:3109	3162317	0	True				
ANR	3162433	EqualityExpression	- 1 != temp -> id		3162317	0		!=			
ANR	3162434	UnaryOperationExpression	- 1		3162317	0					
ANR	3162435	UnaryOperator	-		3162317	0					
ANR	3162436	PrimaryExpression	1		3162317	1					
ANR	3162437	PtrMemberAccess	temp -> id		3162317	1					
ANR	3162438	Identifier	temp		3162317	0					
ANR	3162439	Identifier	id		3162317	1					
ANR	3162440	CompoundStatement		42:25:866:866	3162317	1					
ANR	3162441	ThrowStatement	"throw ""Trie::add, string already exists\\n"" ;"	162:5:3120:3162	3162317	0	True				
ANR	3162442	PrimaryExpression	"""Trie::add, string already exists\\n"""		3162317	0					
ANR	3162443	ElseStatement	else		3162317	0					
ANR	3162444	CompoundStatement		45:9:932:932	3162317	0					
ANR	3162445	ExpressionStatement	temp -> id = id	165:5:3186:3199	3162317	0	True				
ANR	3162446	AssignmentExpression	temp -> id = id		3162317	0		=			
ANR	3162447	PtrMemberAccess	temp -> id		3162317	0					
ANR	3162448	Identifier	temp		3162317	0					
ANR	3162449	Identifier	id		3162317	1					
ANR	3162450	Identifier	id		3162317	1					
ANR	3162451	BreakStatement	break ;	166:5:3206:3211	3162317	1	True				
ANR	3162452	ExpressionStatement		167:5:3218:3218	3162317	1	True				
ANR	3162453	ElseStatement	else		3162317	0					
ANR	3162454	CompoundStatement		51:8:1064:1064	3162317	0					
ANR	3162455	IfStatement	if ( NULL != temp -> child )		3162317	0					
ANR	3162456	Condition	NULL != temp -> child	173:8:3374:3392	3162317	0	True				
ANR	3162457	EqualityExpression	NULL != temp -> child		3162317	0		!=			
ANR	3162458	Identifier	NULL		3162317	0					
ANR	3162459	PtrMemberAccess	temp -> child		3162317	1					
ANR	3162460	Identifier	temp		3162317	0					
ANR	3162461	Identifier	child		3162317	1					
ANR	3162462	CompoundStatement		54:30:1149:1149	3162317	1					
ANR	3162463	ExpressionStatement	node = temp -> child	174:5:3403:3421	3162317	0	True				
ANR	3162464	AssignmentExpression	node = temp -> child		3162317	0		=			
ANR	3162465	Identifier	node		3162317	0					
ANR	3162466	PtrMemberAccess	temp -> child		3162317	1					
ANR	3162467	Identifier	temp		3162317	0					
ANR	3162468	Identifier	child		3162317	1					
ANR	3162469	ExpressionStatement	i ++	175:5:3428:3431	3162317	1	True				
ANR	3162470	PostIncDecOperationExpression	i ++		3162317	0					
ANR	3162471	Identifier	i		3162317	0					
ANR	3162472	IncDec	++		3162317	1					
ANR	3162473	ElseStatement	else		3162317	0					
ANR	3162474	CompoundStatement		58:9:1201:1201	3162317	0					
ANR	3162475	WhileStatement	while ( '\\0' != string [ i + 1 ] )		3162317	0					
ANR	3162476	Condition	'\\0' != string [ i + 1 ]	180:12:3549:3567	3162317	0	True				
ANR	3162477	EqualityExpression	'\\0' != string [ i + 1 ]		3162317	0		!=			
ANR	3162478	PrimaryExpression	'\\0'		3162317	0					
ANR	3162479	ArrayIndexing	string [ i + 1 ]		3162317	1					
ANR	3162480	Identifier	string		3162317	0					
ANR	3162481	AdditiveExpression	i + 1		3162317	1		+			
ANR	3162482	Identifier	i		3162317	0					
ANR	3162483	PrimaryExpression	1		3162317	1					
ANR	3162484	CompoundStatement		61:34:1324:1324	3162317	1					
ANR	3162485	ExpressionStatement	i ++	181:6:3579:3582	3162317	0	True				
ANR	3162486	PostIncDecOperationExpression	i ++		3162317	0					
ANR	3162487	Identifier	i		3162317	0					
ANR	3162488	IncDec	++		3162317	1					
ANR	3162489	Statement	temp	182:6:3590:3593	3162317	1	True				
ANR	3162490	Statement	->	182:10:3594:3595	3162317	2	True				
ANR	3162491	Statement	child	182:12:3596:3600	3162317	3	True				
ANR	3162492	Statement	=	182:18:3602:3602	3162317	4	True				
ANR	3162493	Statement	new	182:20:3604:3606	3162317	5	True				
ANR	3162494	ExpressionStatement	Trie_Node	182:24:3608:3617	3162317	6	True				
ANR	3162495	Identifier	Trie_Node		3162317	0					
ANR	3162496	ExpressionStatement	temp = temp -> child	183:6:3625:3643	3162317	7	True				
ANR	3162497	AssignmentExpression	temp = temp -> child		3162317	0		=			
ANR	3162498	Identifier	temp		3162317	0					
ANR	3162499	PtrMemberAccess	temp -> child		3162317	1					
ANR	3162500	Identifier	temp		3162317	0					
ANR	3162501	Identifier	child		3162317	1					
ANR	3162502	ExpressionStatement	temp -> child = NULL	184:6:3651:3669	3162317	8	True				
ANR	3162503	AssignmentExpression	temp -> child = NULL		3162317	0		=			
ANR	3162504	PtrMemberAccess	temp -> child		3162317	0					
ANR	3162505	Identifier	temp		3162317	0					
ANR	3162506	Identifier	child		3162317	1					
ANR	3162507	Identifier	NULL		3162317	1					
ANR	3162508	ExpressionStatement	temp -> id = - 1	185:6:3677:3690	3162317	9	True				
ANR	3162509	AssignmentExpression	temp -> id = - 1		3162317	0		=			
ANR	3162510	PtrMemberAccess	temp -> id		3162317	0					
ANR	3162511	Identifier	temp		3162317	0					
ANR	3162512	Identifier	id		3162317	1					
ANR	3162513	UnaryOperationExpression	- 1		3162317	1					
ANR	3162514	UnaryOperator	-		3162317	0					
ANR	3162515	PrimaryExpression	1		3162317	1					
ANR	3162516	ExpressionStatement	temp -> letter = string [ i ]	186:6:3698:3722	3162317	10	True				
ANR	3162517	AssignmentExpression	temp -> letter = string [ i ]		3162317	0		=			
ANR	3162518	PtrMemberAccess	temp -> letter		3162317	0					
ANR	3162519	Identifier	temp		3162317	0					
ANR	3162520	Identifier	letter		3162317	1					
ANR	3162521	ArrayIndexing	string [ i ]		3162317	1					
ANR	3162522	Identifier	string		3162317	0					
ANR	3162523	Identifier	i		3162317	1					
ANR	3162524	ExpressionStatement	temp -> sibling = NULL	187:6:3730:3750	3162317	11	True				
ANR	3162525	AssignmentExpression	temp -> sibling = NULL		3162317	0		=			
ANR	3162526	PtrMemberAccess	temp -> sibling		3162317	0					
ANR	3162527	Identifier	temp		3162317	0					
ANR	3162528	Identifier	sibling		3162317	1					
ANR	3162529	Identifier	NULL		3162317	1					
ANR	3162530	ExpressionStatement		188:6:3758:3758	3162317	1	True				
ANR	3162531	ExpressionStatement	temp -> id = id	189:5:3765:3778	3162317	2	True				
ANR	3162532	AssignmentExpression	temp -> id = id		3162317	0		=			
ANR	3162533	PtrMemberAccess	temp -> id		3162317	0					
ANR	3162534	Identifier	temp		3162317	0					
ANR	3162535	Identifier	id		3162317	1					
ANR	3162536	Identifier	id		3162317	1					
ANR	3162537	BreakStatement	break ;	190:5:3785:3790	3162317	3	True				
ANR	3162538	ExpressionStatement		191:5:3797:3797	3162317	1	True				
ANR	3162539	ExpressionStatement		193:4:3820:3820	3162317	1	True				
ANR	3162540	ElseStatement	else		3162317	0					
ANR	3162541	CompoundStatement		77:7:1587:1587	3162317	0					
ANR	3162542	Statement	temp	201:3:3976:3979	3162317	0	True				
ANR	3162543	Statement	->	201:7:3980:3981	3162317	1	True				
ANR	3162544	Statement	sibling	201:9:3982:3988	3162317	2	True				
ANR	3162545	Statement	=	201:17:3990:3990	3162317	3	True				
ANR	3162546	Statement	new	201:19:3992:3994	3162317	4	True				
ANR	3162547	ExpressionStatement	Trie_Node	201:23:3996:4005	3162317	5	True				
ANR	3162548	Identifier	Trie_Node		3162317	0					
ANR	3162549	ExpressionStatement	temp = temp -> sibling	202:3:4010:4030	3162317	6	True				
ANR	3162550	AssignmentExpression	temp = temp -> sibling		3162317	0		=			
ANR	3162551	Identifier	temp		3162317	0					
ANR	3162552	PtrMemberAccess	temp -> sibling		3162317	1					
ANR	3162553	Identifier	temp		3162317	0					
ANR	3162554	Identifier	sibling		3162317	1					
ANR	3162555	ExpressionStatement	temp -> child = NULL	203:3:4035:4053	3162317	7	True				
ANR	3162556	AssignmentExpression	temp -> child = NULL		3162317	0		=			
ANR	3162557	PtrMemberAccess	temp -> child		3162317	0					
ANR	3162558	Identifier	temp		3162317	0					
ANR	3162559	Identifier	child		3162317	1					
ANR	3162560	Identifier	NULL		3162317	1					
ANR	3162561	ExpressionStatement	temp -> id = - 1	204:3:4058:4071	3162317	8	True				
ANR	3162562	AssignmentExpression	temp -> id = - 1		3162317	0		=			
ANR	3162563	PtrMemberAccess	temp -> id		3162317	0					
ANR	3162564	Identifier	temp		3162317	0					
ANR	3162565	Identifier	id		3162317	1					
ANR	3162566	UnaryOperationExpression	- 1		3162317	1					
ANR	3162567	UnaryOperator	-		3162317	0					
ANR	3162568	PrimaryExpression	1		3162317	1					
ANR	3162569	ExpressionStatement	temp -> letter = string [ i ]	205:3:4076:4100	3162317	9	True				
ANR	3162570	AssignmentExpression	temp -> letter = string [ i ]		3162317	0		=			
ANR	3162571	PtrMemberAccess	temp -> letter		3162317	0					
ANR	3162572	Identifier	temp		3162317	0					
ANR	3162573	Identifier	letter		3162317	1					
ANR	3162574	ArrayIndexing	string [ i ]		3162317	1					
ANR	3162575	Identifier	string		3162317	0					
ANR	3162576	Identifier	i		3162317	1					
ANR	3162577	ExpressionStatement	temp -> sibling = NULL	206:3:4105:4125	3162317	10	True				
ANR	3162578	AssignmentExpression	temp -> sibling = NULL		3162317	0		=			
ANR	3162579	PtrMemberAccess	temp -> sibling		3162317	0					
ANR	3162580	Identifier	temp		3162317	0					
ANR	3162581	Identifier	sibling		3162317	1					
ANR	3162582	Identifier	NULL		3162317	1					
ANR	3162583	ExpressionStatement	i ++	207:3:4130:4133	3162317	11	True				
ANR	3162584	PostIncDecOperationExpression	i ++		3162317	0					
ANR	3162585	Identifier	i		3162317	0					
ANR	3162586	IncDec	++		3162317	1					
ANR	3162587	WhileStatement	while ( '\\0' != string [ i ] )		3162317	12					
ANR	3162588	Condition	'\\0' != string [ i ]	210:10:4205:4221	3162317	0	True				
ANR	3162589	EqualityExpression	'\\0' != string [ i ]		3162317	0		!=			
ANR	3162590	PrimaryExpression	'\\0'		3162317	0					
ANR	3162591	ArrayIndexing	string [ i ]		3162317	1					
ANR	3162592	Identifier	string		3162317	0					
ANR	3162593	Identifier	i		3162317	1					
ANR	3162594	CompoundStatement		91:30:1978:1978	3162317	1					
ANR	3162595	Statement	temp	211:4:4231:4234	3162317	0	True				
ANR	3162596	Statement	->	211:8:4235:4236	3162317	1	True				
ANR	3162597	Statement	child	211:10:4237:4241	3162317	2	True				
ANR	3162598	Statement	=	211:16:4243:4243	3162317	3	True				
ANR	3162599	Statement	new	211:18:4245:4247	3162317	4	True				
ANR	3162600	ExpressionStatement	Trie_Node	211:22:4249:4258	3162317	5	True				
ANR	3162601	Identifier	Trie_Node		3162317	0					
ANR	3162602	ExpressionStatement	temp = temp -> child	212:4:4264:4282	3162317	6	True				
ANR	3162603	AssignmentExpression	temp = temp -> child		3162317	0		=			
ANR	3162604	Identifier	temp		3162317	0					
ANR	3162605	PtrMemberAccess	temp -> child		3162317	1					
ANR	3162606	Identifier	temp		3162317	0					
ANR	3162607	Identifier	child		3162317	1					
ANR	3162608	ExpressionStatement	temp -> child = NULL	213:4:4288:4306	3162317	7	True				
ANR	3162609	AssignmentExpression	temp -> child = NULL		3162317	0		=			
ANR	3162610	PtrMemberAccess	temp -> child		3162317	0					
ANR	3162611	Identifier	temp		3162317	0					
ANR	3162612	Identifier	child		3162317	1					
ANR	3162613	Identifier	NULL		3162317	1					
ANR	3162614	ExpressionStatement	temp -> id = - 1	214:4:4312:4325	3162317	8	True				
ANR	3162615	AssignmentExpression	temp -> id = - 1		3162317	0		=			
ANR	3162616	PtrMemberAccess	temp -> id		3162317	0					
ANR	3162617	Identifier	temp		3162317	0					
ANR	3162618	Identifier	id		3162317	1					
ANR	3162619	UnaryOperationExpression	- 1		3162317	1					
ANR	3162620	UnaryOperator	-		3162317	0					
ANR	3162621	PrimaryExpression	1		3162317	1					
ANR	3162622	ExpressionStatement	temp -> letter = string [ i ]	215:4:4331:4355	3162317	9	True				
ANR	3162623	AssignmentExpression	temp -> letter = string [ i ]		3162317	0		=			
ANR	3162624	PtrMemberAccess	temp -> letter		3162317	0					
ANR	3162625	Identifier	temp		3162317	0					
ANR	3162626	Identifier	letter		3162317	1					
ANR	3162627	ArrayIndexing	string [ i ]		3162317	1					
ANR	3162628	Identifier	string		3162317	0					
ANR	3162629	Identifier	i		3162317	1					
ANR	3162630	ExpressionStatement	temp -> sibling = NULL	216:4:4361:4381	3162317	10	True				
ANR	3162631	AssignmentExpression	temp -> sibling = NULL		3162317	0		=			
ANR	3162632	PtrMemberAccess	temp -> sibling		3162317	0					
ANR	3162633	Identifier	temp		3162317	0					
ANR	3162634	Identifier	sibling		3162317	1					
ANR	3162635	Identifier	NULL		3162317	1					
ANR	3162636	ExpressionStatement	i ++	217:4:4387:4390	3162317	11	True				
ANR	3162637	PostIncDecOperationExpression	i ++		3162317	0					
ANR	3162638	Identifier	i		3162317	0					
ANR	3162639	IncDec	++		3162317	1					
ANR	3162640	ExpressionStatement		218:4:4396:4396	3162317	13	True				
ANR	3162641	ExpressionStatement	temp -> id = id	219:3:4401:4414	3162317	14	True				
ANR	3162642	AssignmentExpression	temp -> id = id		3162317	0		=			
ANR	3162643	PtrMemberAccess	temp -> id		3162317	0					
ANR	3162644	Identifier	temp		3162317	0					
ANR	3162645	Identifier	id		3162317	1					
ANR	3162646	Identifier	id		3162317	1					
ANR	3162647	BreakStatement	break ;	220:3:4419:4424	3162317	15	True				
ANR	3162648	ExpressionStatement		221:3:4429:4429	3162317	6	True				
ANR	3162649	ExpressionStatement		223:2:4434:4434	3162317	7	True				
ANR	3162650	ReturnType	void		3162317	1					
ANR	3162651	Identifier	Trie :: add		3162317	2					
ANR	3162652	ParameterList	"const char * string , int id"		3162317	3					
ANR	3162653	Parameter	const char * string	119:16:2217:2234	3162317	0	True				
ANR	3162654	ParameterType	const char *		3162317	0					
ANR	3162655	Identifier	string		3162317	1					
ANR	3162656	Parameter	int id	119:36:2237:2242	3162317	1	True				
ANR	3162657	ParameterType	int		3162317	0					
ANR	3162658	Identifier	id		3162317	1					
ANR	3162659	CFGEntryNode	ENTRY		3162317		True				
ANR	3162660	CFGExitNode	EXIT		3162317		True				
ANR	3162661	CFGExceptionNode	EXCEPTION		3162317		True				
ANR	3162662	CFGExceptionNode	EXCEPTION		3162317		True				
ANR	3162663	CFGExceptionNode	EXCEPTION		3162317		True				
ANR	3162664	CFGExceptionNode	EXCEPTION		3162317		True				
ANR	3162665	CFGExceptionNode	EXCEPTION		3162317		True				
ANR	3162666	CFGExceptionNode	EXCEPTION		3162317		True				
ANR	3162667	CFGExceptionNode	EXCEPTION		3162317		True				
ANR	3162668	Symbol	temp		3162317						
ANR	3162669	Symbol	NULL		3162317						
ANR	3162670	Symbol	temp -> child		3162317						
ANR	3162671	Symbol	string		3162317						
ANR	3162672	Symbol	false		3162317						
ANR	3162673	Symbol	temp -> sibling		3162317						
ANR	3162674	Symbol	i		3162317						
ANR	3162675	Symbol	* string		3162317						
ANR	3162676	Symbol	temp -> id		3162317						
ANR	3162677	Symbol	* temp		3162317						
ANR	3162678	Symbol	temp -> letter		3162317						
ANR	3162679	Symbol	node		3162317						
ANR	3162680	Symbol	found		3162317						
ANR	3162681	Symbol	* i		3162317						
ANR	3162682	Symbol	root		3162317						
ANR	3162683	Symbol	true		3162317						
ANR	3162684	Symbol	id		3162317						
ANR	3162685	Function	Trie :: find	242:0:4743:5820							
ANR	3162686	FunctionDef	Trie :: find (const char * string)		3162685	0					
ANR	3162687	CompoundStatement		243:0:4786:5820	3162685	0					
ANR	3162688	IdentifierDeclStatement	Trie_Node * node ;	244:1:4789:4804	3162685	0	True				
ANR	3162689	IdentifierDecl	* node		3162685	0					
ANR	3162690	IdentifierDeclType	Trie_Node *		3162685	0					
ANR	3162691	Identifier	node		3162685	1					
ANR	3162692	IdentifierDeclStatement	int i ;	245:1:4807:4812	3162685	1	True				
ANR	3162693	IdentifierDecl	i		3162685	0					
ANR	3162694	IdentifierDeclType	int		3162685	0					
ANR	3162695	Identifier	i		3162685	1					
ANR	3162696	IfStatement	if ( NULL == string || '\\0' == string [ 0 ] )		3162685	2					
ANR	3162697	Condition	NULL == string || '\\0' == string [ 0 ]	248:5:4855:4885	3162685	0	True				
ANR	3162698	OrExpression	NULL == string || '\\0' == string [ 0 ]		3162685	0		||			
ANR	3162699	EqualityExpression	NULL == string		3162685	0		==			
ANR	3162700	Identifier	NULL		3162685	0					
ANR	3162701	Identifier	string		3162685	1					
ANR	3162702	EqualityExpression	'\\0' == string [ 0 ]		3162685	1		==			
ANR	3162703	PrimaryExpression	'\\0'		3162685	0					
ANR	3162704	ArrayIndexing	string [ 0 ]		3162685	1					
ANR	3162705	Identifier	string		3162685	0					
ANR	3162706	PrimaryExpression	0		3162685	1					
ANR	3162707	ThrowStatement	"throw ""Trie::find, null or empty string"" ;"	249:2:4891:4931	3162685	1	True				
ANR	3162708	PrimaryExpression	"""Trie::find, null or empty string"""		3162685	0					
ANR	3162709	ExpressionStatement	i = 0	252:1:4960:4963	3162685	3	True				
ANR	3162710	AssignmentExpression	i = 0		3162685	0		=			
ANR	3162711	Identifier	i		3162685	0					
ANR	3162712	PrimaryExpression	0		3162685	1					
ANR	3162713	ExpressionStatement	node = root	253:1:4966:4977	3162685	4	True				
ANR	3162714	AssignmentExpression	node = root		3162685	0		=			
ANR	3162715	Identifier	node		3162685	0					
ANR	3162716	Identifier	root		3162685	1					
ANR	3162717	WhileStatement	while ( true )		3162685	5					
ANR	3162718	Condition	true	254:8:4987:4990	3162685	0	True				
ANR	3162719	Identifier	true		3162685	0					
ANR	3162720	CompoundStatement		20:2:398:416	3162685	1					
ANR	3162721	IfStatement	if ( i > 10000 )		3162685	0					
ANR	3162722	Condition	i > 10000	257:6:5054:5060	3162685	0	True				
ANR	3162723	RelationalExpression	i > 10000		3162685	0		>			
ANR	3162724	Identifier	i		3162685	0					
ANR	3162725	PrimaryExpression	10000		3162685	1					
ANR	3162726	ThrowStatement	"throw ""Trie::find, lack of zero?"" ;"	258:3:5067:5100	3162685	1	True				
ANR	3162727	PrimaryExpression	"""Trie::find, lack of zero?"""		3162685	0					
ANR	3162728	IdentifierDeclStatement	Trie_Node * temp = node ;	261:2:5159:5181	3162685	1	True				
ANR	3162729	IdentifierDecl	* temp = node		3162685	0					
ANR	3162730	IdentifierDeclType	Trie_Node *		3162685	0					
ANR	3162731	Identifier	temp		3162685	1					
ANR	3162732	AssignmentExpression	* temp = node		3162685	2		=			
ANR	3162733	Identifier	node		3162685	0					
ANR	3162734	Identifier	node		3162685	1					
ANR	3162735	IdentifierDeclStatement	bool found = false ;	262:2:5185:5203	3162685	2	True				
ANR	3162736	IdentifierDecl	found = false		3162685	0					
ANR	3162737	IdentifierDeclType	bool		3162685	0					
ANR	3162738	Identifier	found		3162685	1					
ANR	3162739	AssignmentExpression	found = false		3162685	2		=			
ANR	3162740	Identifier	false		3162685	0					
ANR	3162741	Identifier	false		3162685	1					
ANR	3162742	WhileStatement	while ( true )		3162685	3					
ANR	3162743	Condition	true	263:9:5214:5217	3162685	0	True				
ANR	3162744	Identifier	true		3162685	0					
ANR	3162745	CompoundStatement		21:16:434:434	3162685	1					
ANR	3162746	IfStatement	if ( temp -> letter == string [ i ] )		3162685	0					
ANR	3162747	Condition	temp -> letter == string [ i ]	264:7:5230:5254	3162685	0	True				
ANR	3162748	EqualityExpression	temp -> letter == string [ i ]		3162685	0		==			
ANR	3162749	PtrMemberAccess	temp -> letter		3162685	0					
ANR	3162750	Identifier	temp		3162685	0					
ANR	3162751	Identifier	letter		3162685	1					
ANR	3162752	ArrayIndexing	string [ i ]		3162685	1					
ANR	3162753	Identifier	string		3162685	0					
ANR	3162754	Identifier	i		3162685	1					
ANR	3162755	CompoundStatement		22:35:471:471	3162685	1					
ANR	3162756	ExpressionStatement	found = true	265:4:5264:5276	3162685	0	True				
ANR	3162757	AssignmentExpression	found = true		3162685	0		=			
ANR	3162758	Identifier	found		3162685	0					
ANR	3162759	Identifier	true		3162685	1					
ANR	3162760	BreakStatement	break ;	266:4:5282:5287	3162685	1	True				
ANR	3162761	ExpressionStatement		267:4:5293:5293	3162685	1	True				
ANR	3162762	IfStatement	if ( NULL != temp -> sibling )		3162685	2					
ANR	3162763	Condition	NULL != temp -> sibling	268:7:5302:5322	3162685	0	True				
ANR	3162764	EqualityExpression	NULL != temp -> sibling		3162685	0		!=			
ANR	3162765	Identifier	NULL		3162685	0					
ANR	3162766	PtrMemberAccess	temp -> sibling		3162685	1					
ANR	3162767	Identifier	temp		3162685	0					
ANR	3162768	Identifier	sibling		3162685	1					
ANR	3162769	ExpressionStatement	temp = temp -> sibling	269:4:5330:5350	3162685	1	True				
ANR	3162770	AssignmentExpression	temp = temp -> sibling		3162685	0		=			
ANR	3162771	Identifier	temp		3162685	0					
ANR	3162772	PtrMemberAccess	temp -> sibling		3162685	1					
ANR	3162773	Identifier	temp		3162685	0					
ANR	3162774	Identifier	sibling		3162685	1					
ANR	3162775	ElseStatement	else		3162685	0					
ANR	3162776	BreakStatement	break ;	271:4:5364:5369	3162685	0	True				
ANR	3162777	ExpressionStatement		272:3:5374:5374	3162685	4	True				
ANR	3162778	IfStatement	if ( ! found )		3162685	5					
ANR	3162779	Condition	! found	274:6:5383:5388	3162685	0	True				
ANR	3162780	UnaryOperationExpression	! found		3162685	0					
ANR	3162781	UnaryOperator	!		3162685	0					
ANR	3162782	Identifier	found		3162685	1					
ANR	3162783	ReturnStatement	return - 1 ;	275:3:5395:5404	3162685	1	True				
ANR	3162784	UnaryOperationExpression	- 1		3162685	0					
ANR	3162785	UnaryOperator	-		3162685	0					
ANR	3162786	PrimaryExpression	1		3162685	1					
ANR	3162787	ElseStatement	else		3162685	0					
ANR	3162788	CompoundStatement		34:7:626:626	3162685	0					
ANR	3162789	IfStatement	if ( '\\0' == string [ i + 1 ] )		3162685	0					
ANR	3162790	Condition	'\\0' == string [ i + 1 ]	280:7:5514:5532	3162685	0	True				
ANR	3162791	EqualityExpression	'\\0' == string [ i + 1 ]		3162685	0		==			
ANR	3162792	PrimaryExpression	'\\0'		3162685	0					
ANR	3162793	ArrayIndexing	string [ i + 1 ]		3162685	1					
ANR	3162794	Identifier	string		3162685	0					
ANR	3162795	AdditiveExpression	i + 1		3162685	1		+			
ANR	3162796	Identifier	i		3162685	0					
ANR	3162797	PrimaryExpression	1		3162685	1					
ANR	3162798	CompoundStatement		38:29:749:749	3162685	1					
ANR	3162799	ReturnStatement	return temp -> id ;	281:4:5542:5557	3162685	0	True				
ANR	3162800	PtrMemberAccess	temp -> id		3162685	0					
ANR	3162801	Identifier	temp		3162685	0					
ANR	3162802	Identifier	id		3162685	1					
ANR	3162803	ElseStatement	else		3162685	0					
ANR	3162804	CompoundStatement		41:8:785:785	3162685	0					
ANR	3162805	IfStatement	if ( NULL == temp -> child )		3162685	0					
ANR	3162806	Condition	NULL == temp -> child	285:8:5663:5681	3162685	0	True				
ANR	3162807	EqualityExpression	NULL == temp -> child		3162685	0		==			
ANR	3162808	Identifier	NULL		3162685	0					
ANR	3162809	PtrMemberAccess	temp -> child		3162685	1					
ANR	3162810	Identifier	temp		3162685	0					
ANR	3162811	Identifier	child		3162685	1					
ANR	3162812	ReturnStatement	return - 1 ;	286:5:5691:5700	3162685	1	True				
ANR	3162813	UnaryOperationExpression	- 1		3162685	0					
ANR	3162814	UnaryOperator	-		3162685	0					
ANR	3162815	PrimaryExpression	1		3162685	1					
ANR	3162816	ElseStatement	else		3162685	0					
ANR	3162817	CompoundStatement		45:9:924:924	3162685	0					
ANR	3162818	ExpressionStatement	node = temp -> child	289:5:5756:5774	3162685	0	True				
ANR	3162819	AssignmentExpression	node = temp -> child		3162685	0		=			
ANR	3162820	Identifier	node		3162685	0					
ANR	3162821	PtrMemberAccess	temp -> child		3162685	1					
ANR	3162822	Identifier	temp		3162685	0					
ANR	3162823	Identifier	child		3162685	1					
ANR	3162824	ExpressionStatement	i ++	290:5:5781:5784	3162685	1	True				
ANR	3162825	PostIncDecOperationExpression	i ++		3162685	0					
ANR	3162826	Identifier	i		3162685	0					
ANR	3162827	IncDec	++		3162685	1					
ANR	3162828	ExpressionStatement		291:5:5791:5791	3162685	1	True				
ANR	3162829	ExpressionStatement		292:4:5797:5797	3162685	1	True				
ANR	3162830	ExpressionStatement		293:3:5802:5802	3162685	6	True				
ANR	3162831	ExpressionStatement		294:2:5806:5806	3162685	6	True				
ANR	3162832	ReturnStatement	return - 1 ;	295:1:5809:5818	3162685	7	True				
ANR	3162833	UnaryOperationExpression	- 1		3162685	0					
ANR	3162834	UnaryOperator	-		3162685	0					
ANR	3162835	PrimaryExpression	1		3162685	1					
ANR	3162836	ReturnType	int		3162685	1					
ANR	3162837	Identifier	Trie :: find		3162685	2					
ANR	3162838	ParameterList	const char * string		3162685	3					
ANR	3162839	Parameter	const char * string	242:16:4759:4776	3162685	0	True				
ANR	3162840	ParameterType	const char *		3162685	0					
ANR	3162841	Identifier	string		3162685	1					
ANR	3162842	CFGEntryNode	ENTRY		3162685		True				
ANR	3162843	CFGExitNode	EXIT		3162685		True				
ANR	3162844	CFGExceptionNode	EXCEPTION		3162685		True				
ANR	3162845	CFGExceptionNode	EXCEPTION		3162685		True				
ANR	3162846	CFGExceptionNode	EXCEPTION		3162685		True				
ANR	3162847	Symbol	temp		3162685						
ANR	3162848	Symbol	NULL		3162685						
ANR	3162849	Symbol	temp -> child		3162685						
ANR	3162850	Symbol	string		3162685						
ANR	3162851	Symbol	false		3162685						
ANR	3162852	Symbol	temp -> sibling		3162685						
ANR	3162853	Symbol	i		3162685						
ANR	3162854	Symbol	* string		3162685						
ANR	3162855	Symbol	temp -> id		3162685						
ANR	3162856	Symbol	* temp		3162685						
ANR	3162857	Symbol	temp -> letter		3162685						
ANR	3162858	Symbol	node		3162685						
ANR	3162859	Symbol	found		3162685						
ANR	3162860	Symbol	* i		3162685						
ANR	3162861	Symbol	root		3162685						
ANR	3162862	Symbol	true		3162685						
ANR	3162863	Function	Trie :: print	312:0:5967:6017							
ANR	3162864	FunctionDef	Trie :: print ()		3162863	0					
ANR	3162865	CompoundStatement		313:0:5996:6017	3162863	0					
ANR	3162866	ExpressionStatement	"print ( root , 0 )"	314:1:5999:6015	3162863	0	True				
ANR	3162867	CallExpression	"print ( root , 0 )"		3162863	0					
ANR	3162868	Callee	print		3162863	0					
ANR	3162869	Identifier	print		3162863	0					
ANR	3162870	ArgumentList	root		3162863	1					
ANR	3162871	Argument	root		3162863	0					
ANR	3162872	Identifier	root		3162863	0					
ANR	3162873	Argument	0		3162863	1					
ANR	3162874	PrimaryExpression	0		3162863	0					
ANR	3162875	ReturnType	void		3162863	1					
ANR	3162876	Identifier	Trie :: print		3162863	2					
ANR	3162877	ParameterList			3162863	3					
ANR	3162878	CFGEntryNode	ENTRY		3162863		True				
ANR	3162879	CFGExitNode	EXIT		3162863		True				
ANR	3162880	Symbol	root		3162863						
ANR	3162881	Function	Trie :: print	333:0:6256:6530							
ANR	3162882	FunctionDef	"Trie :: print (Trie_Node * node , int indent)"		3162881	0					
ANR	3162883	CompoundStatement		334:0:6309:6530	3162881	0					
ANR	3162884	IfStatement	if ( NULL != node )		3162881	0					
ANR	3162885	Condition	NULL != node	335:5:6316:6325	3162881	0	True				
ANR	3162886	EqualityExpression	NULL != node		3162881	0		!=			
ANR	3162887	Identifier	NULL		3162881	0					
ANR	3162888	Identifier	node		3162881	1					
ANR	3162889	CompoundStatement		2:18:19:19	3162881	1					
ANR	3162890	WhileStatement	while ( NULL != node )		3162881	0					
ANR	3162891	Condition	NULL != node	336:9:6340:6351	3162881	0	True				
ANR	3162892	EqualityExpression	NULL != node		3162881	0		!=			
ANR	3162893	Identifier	NULL		3162881	0					
ANR	3162894	Identifier	node		3162881	1					
ANR	3162895	CompoundStatement		3:24:45:45	3162881	1					
ANR	3162896	ForStatement	for ( int i = 0 ; i < indent ; i ++ )		3162881	0					
ANR	3162897	ForInit	int i = 0 ;	337:7:6364:6371	3162881	0	True				
ANR	3162898	IdentifierDeclStatement	int i = 0 ;		3162881	0					
ANR	3162899	IdentifierDecl	i = 0		3162881	0					
ANR	3162900	IdentifierDeclType	int		3162881	0					
ANR	3162901	Identifier	i		3162881	1					
ANR	3162902	AssignmentExpression	i = 0		3162881	2		=			
ANR	3162903	Identifier	i		3162881	0					
ANR	3162904	PrimaryExpression	0		3162881	1					
ANR	3162905	Condition	i < indent	337:16:6373:6380	3162881	1	True				
ANR	3162906	RelationalExpression	i < indent		3162881	0		<			
ANR	3162907	Identifier	i		3162881	0					
ANR	3162908	Identifier	indent		3162881	1					
ANR	3162909	PostIncDecOperationExpression	i ++	337:26:6383:6385	3162881	2	True				
ANR	3162910	Identifier	i		3162881	0					
ANR	3162911	IncDec	++		3162881	1					
ANR	3162912	ExpressionStatement	"printf ( "" "" )"	338:4:6393:6404	3162881	3	True				
ANR	3162913	CallExpression	"printf ( "" "" )"		3162881	0					
ANR	3162914	Callee	printf		3162881	0					
ANR	3162915	Identifier	printf		3162881	0					
ANR	3162916	ArgumentList	""" """		3162881	1					
ANR	3162917	Argument	""" """		3162881	0					
ANR	3162918	PrimaryExpression	""" """		3162881	0					
ANR	3162919	ExpressionStatement	"printf ( ""l: %c,  id: %d\\n"" , node -> letter , node -> id )"	339:3:6409:6460	3162881	1	True				
ANR	3162920	CallExpression	"printf ( ""l: %c,  id: %d\\n"" , node -> letter , node -> id )"		3162881	0					
ANR	3162921	Callee	printf		3162881	0					
ANR	3162922	Identifier	printf		3162881	0					
ANR	3162923	ArgumentList	"""l: %c,  id: %d\\n"""		3162881	1					
ANR	3162924	Argument	"""l: %c,  id: %d\\n"""		3162881	0					
ANR	3162925	PrimaryExpression	"""l: %c,  id: %d\\n"""		3162881	0					
ANR	3162926	Argument	node -> letter		3162881	1					
ANR	3162927	PtrMemberAccess	node -> letter		3162881	0					
ANR	3162928	Identifier	node		3162881	0					
ANR	3162929	Identifier	letter		3162881	1					
ANR	3162930	Argument	node -> id		3162881	2					
ANR	3162931	PtrMemberAccess	node -> id		3162881	0					
ANR	3162932	Identifier	node		3162881	0					
ANR	3162933	Identifier	id		3162881	1					
ANR	3162934	ExpressionStatement	"print ( node -> child , indent + 4 )"	340:3:6465:6494	3162881	2	True				
ANR	3162935	CallExpression	"print ( node -> child , indent + 4 )"		3162881	0					
ANR	3162936	Callee	print		3162881	0					
ANR	3162937	Identifier	print		3162881	0					
ANR	3162938	ArgumentList	node -> child		3162881	1					
ANR	3162939	Argument	node -> child		3162881	0					
ANR	3162940	PtrMemberAccess	node -> child		3162881	0					
ANR	3162941	Identifier	node		3162881	0					
ANR	3162942	Identifier	child		3162881	1					
ANR	3162943	Argument	indent + 4		3162881	1					
ANR	3162944	AdditiveExpression	indent + 4		3162881	0		+			
ANR	3162945	Identifier	indent		3162881	0					
ANR	3162946	PrimaryExpression	4		3162881	1					
ANR	3162947	ExpressionStatement	node = node -> sibling	341:3:6499:6519	3162881	3	True				
ANR	3162948	AssignmentExpression	node = node -> sibling		3162881	0		=			
ANR	3162949	Identifier	node		3162881	0					
ANR	3162950	PtrMemberAccess	node -> sibling		3162881	1					
ANR	3162951	Identifier	node		3162881	0					
ANR	3162952	Identifier	sibling		3162881	1					
ANR	3162953	ExpressionStatement		342:3:6524:6524	3162881	1	True				
ANR	3162954	ExpressionStatement		343:2:6528:6528	3162881	1	True				
ANR	3162955	ReturnType	void		3162881	1					
ANR	3162956	Identifier	Trie :: print		3162881	2					
ANR	3162957	ParameterList	"Trie_Node * node , int indent"		3162881	3					
ANR	3162958	Parameter	Trie_Node * node	333:17:6273:6288	3162881	0	True				
ANR	3162959	ParameterType	Trie_Node *		3162881	0					
ANR	3162960	Identifier	node		3162881	1					
ANR	3162961	Parameter	int indent	333:35:6291:6300	3162881	1	True				
ANR	3162962	ParameterType	int		3162881	0					
ANR	3162963	Identifier	indent		3162881	1					
ANR	3162964	CFGEntryNode	ENTRY		3162881		True				
ANR	3162965	CFGExitNode	EXIT		3162881		True				
ANR	3162966	Symbol	node		3162881						
ANR	3162967	Symbol	NULL		3162881						
ANR	3162968	Symbol	indent		3162881						
ANR	3162969	Symbol	node -> letter		3162881						
ANR	3162970	Symbol	i		3162881						
ANR	3162971	Symbol	* node		3162881						
ANR	3162972	Symbol	node -> id		3162881						
ANR	3162973	Symbol	node -> child		3162881						
ANR	3162974	Symbol	node -> sibling		3162881						
ANR	3162975	Function	Trie_test	360:0:6670:7726							
ANR	3162976	FunctionDef	Trie_test ()		3162975	0					
ANR	3162977	CompoundStatement		361:0:6691:7726	3162975	0					
ANR	3162978	IdentifierDeclStatement	Trie t ;	362:1:6694:6700	3162975	0	True				
ANR	3162979	IdentifierDecl	t		3162975	0					
ANR	3162980	IdentifierDeclType	Trie		3162975	0					
ANR	3162981	Identifier	t		3162975	1					
ANR	3162982	ExpressionStatement	"t . add ( ""ab"" , 0 )"	364:1:6704:6717	3162975	1	True				
ANR	3162983	CallExpression	"t . add ( ""ab"" , 0 )"		3162975	0					
ANR	3162984	Callee	t . add		3162975	0					
ANR	3162985	MemberAccess	t . add		3162975	0					
ANR	3162986	Identifier	t		3162975	0					
ANR	3162987	Identifier	add		3162975	1					
ANR	3162988	ArgumentList	"""ab"""		3162975	1					
ANR	3162989	Argument	"""ab"""		3162975	0					
ANR	3162990	PrimaryExpression	"""ab"""		3162975	0					
ANR	3162991	Argument	0		3162975	1					
ANR	3162992	PrimaryExpression	0		3162975	0					
ANR	3162993	ExpressionStatement	t . print ( )	365:1:6720:6729	3162975	2	True				
ANR	3162994	CallExpression	t . print ( )		3162975	0					
ANR	3162995	Callee	t . print		3162975	0					
ANR	3162996	MemberAccess	t . print		3162975	0					
ANR	3162997	Identifier	t		3162975	0					
ANR	3162998	Identifier	print		3162975	1					
ANR	3162999	ArgumentList			3162975	1					
ANR	3163000	ExpressionStatement	"printf ( ""===============\\n"" )"	366:1:6732:6759	3162975	3	True				
ANR	3163001	CallExpression	"printf ( ""===============\\n"" )"		3162975	0					
ANR	3163002	Callee	printf		3162975	0					
ANR	3163003	Identifier	printf		3162975	0					
ANR	3163004	ArgumentList	"""===============\\n"""		3162975	1					
ANR	3163005	Argument	"""===============\\n"""		3162975	0					
ANR	3163006	PrimaryExpression	"""===============\\n"""		3162975	0					
ANR	3163007	ExpressionStatement	"t . add ( ""a"" , 2 )"	367:1:6762:6774	3162975	4	True				
ANR	3163008	CallExpression	"t . add ( ""a"" , 2 )"		3162975	0					
ANR	3163009	Callee	t . add		3162975	0					
ANR	3163010	MemberAccess	t . add		3162975	0					
ANR	3163011	Identifier	t		3162975	0					
ANR	3163012	Identifier	add		3162975	1					
ANR	3163013	ArgumentList	"""a"""		3162975	1					
ANR	3163014	Argument	"""a"""		3162975	0					
ANR	3163015	PrimaryExpression	"""a"""		3162975	0					
ANR	3163016	Argument	2		3162975	1					
ANR	3163017	PrimaryExpression	2		3162975	0					
ANR	3163018	ExpressionStatement	t . print ( )	368:1:6777:6786	3162975	5	True				
ANR	3163019	CallExpression	t . print ( )		3162975	0					
ANR	3163020	Callee	t . print		3162975	0					
ANR	3163021	MemberAccess	t . print		3162975	0					
ANR	3163022	Identifier	t		3162975	0					
ANR	3163023	Identifier	print		3162975	1					
ANR	3163024	ArgumentList			3162975	1					
ANR	3163025	ExpressionStatement	"printf ( ""===============\\n"" )"	369:1:6789:6816	3162975	6	True				
ANR	3163026	CallExpression	"printf ( ""===============\\n"" )"		3162975	0					
ANR	3163027	Callee	printf		3162975	0					
ANR	3163028	Identifier	printf		3162975	0					
ANR	3163029	ArgumentList	"""===============\\n"""		3162975	1					
ANR	3163030	Argument	"""===============\\n"""		3162975	0					
ANR	3163031	PrimaryExpression	"""===============\\n"""		3162975	0					
ANR	3163032	ExpressionStatement	"t . add ( ""abcde"" , 3 )"	370:1:6819:6835	3162975	7	True				
ANR	3163033	CallExpression	"t . add ( ""abcde"" , 3 )"		3162975	0					
ANR	3163034	Callee	t . add		3162975	0					
ANR	3163035	MemberAccess	t . add		3162975	0					
ANR	3163036	Identifier	t		3162975	0					
ANR	3163037	Identifier	add		3162975	1					
ANR	3163038	ArgumentList	"""abcde"""		3162975	1					
ANR	3163039	Argument	"""abcde"""		3162975	0					
ANR	3163040	PrimaryExpression	"""abcde"""		3162975	0					
ANR	3163041	Argument	3		3162975	1					
ANR	3163042	PrimaryExpression	3		3162975	0					
ANR	3163043	ExpressionStatement	t . print ( )	371:1:6838:6847	3162975	8	True				
ANR	3163044	CallExpression	t . print ( )		3162975	0					
ANR	3163045	Callee	t . print		3162975	0					
ANR	3163046	MemberAccess	t . print		3162975	0					
ANR	3163047	Identifier	t		3162975	0					
ANR	3163048	Identifier	print		3162975	1					
ANR	3163049	ArgumentList			3162975	1					
ANR	3163050	ExpressionStatement	"printf ( ""===============\\n"" )"	372:1:6850:6877	3162975	9	True				
ANR	3163051	CallExpression	"printf ( ""===============\\n"" )"		3162975	0					
ANR	3163052	Callee	printf		3162975	0					
ANR	3163053	Identifier	printf		3162975	0					
ANR	3163054	ArgumentList	"""===============\\n"""		3162975	1					
ANR	3163055	Argument	"""===============\\n"""		3162975	0					
ANR	3163056	PrimaryExpression	"""===============\\n"""		3162975	0					
ANR	3163057	ExpressionStatement	"t . add ( ""z"" , 4 )"	373:1:6880:6892	3162975	10	True				
ANR	3163058	CallExpression	"t . add ( ""z"" , 4 )"		3162975	0					
ANR	3163059	Callee	t . add		3162975	0					
ANR	3163060	MemberAccess	t . add		3162975	0					
ANR	3163061	Identifier	t		3162975	0					
ANR	3163062	Identifier	add		3162975	1					
ANR	3163063	ArgumentList	"""z"""		3162975	1					
ANR	3163064	Argument	"""z"""		3162975	0					
ANR	3163065	PrimaryExpression	"""z"""		3162975	0					
ANR	3163066	Argument	4		3162975	1					
ANR	3163067	PrimaryExpression	4		3162975	0					
ANR	3163068	ExpressionStatement	t . print ( )	374:1:6895:6904	3162975	11	True				
ANR	3163069	CallExpression	t . print ( )		3162975	0					
ANR	3163070	Callee	t . print		3162975	0					
ANR	3163071	MemberAccess	t . print		3162975	0					
ANR	3163072	Identifier	t		3162975	0					
ANR	3163073	Identifier	print		3162975	1					
ANR	3163074	ArgumentList			3162975	1					
ANR	3163075	ExpressionStatement	"printf ( ""===============\\n"" )"	375:1:6907:6934	3162975	12	True				
ANR	3163076	CallExpression	"printf ( ""===============\\n"" )"		3162975	0					
ANR	3163077	Callee	printf		3162975	0					
ANR	3163078	Identifier	printf		3162975	0					
ANR	3163079	ArgumentList	"""===============\\n"""		3162975	1					
ANR	3163080	Argument	"""===============\\n"""		3162975	0					
ANR	3163081	PrimaryExpression	"""===============\\n"""		3162975	0					
ANR	3163082	ExpressionStatement	"t . add ( ""ze"" , 5 )"	376:1:6937:6950	3162975	13	True				
ANR	3163083	CallExpression	"t . add ( ""ze"" , 5 )"		3162975	0					
ANR	3163084	Callee	t . add		3162975	0					
ANR	3163085	MemberAccess	t . add		3162975	0					
ANR	3163086	Identifier	t		3162975	0					
ANR	3163087	Identifier	add		3162975	1					
ANR	3163088	ArgumentList	"""ze"""		3162975	1					
ANR	3163089	Argument	"""ze"""		3162975	0					
ANR	3163090	PrimaryExpression	"""ze"""		3162975	0					
ANR	3163091	Argument	5		3162975	1					
ANR	3163092	PrimaryExpression	5		3162975	0					
ANR	3163093	ExpressionStatement	t . print ( )	377:1:6953:6962	3162975	14	True				
ANR	3163094	CallExpression	t . print ( )		3162975	0					
ANR	3163095	Callee	t . print		3162975	0					
ANR	3163096	MemberAccess	t . print		3162975	0					
ANR	3163097	Identifier	t		3162975	0					
ANR	3163098	Identifier	print		3162975	1					
ANR	3163099	ArgumentList			3162975	1					
ANR	3163100	ExpressionStatement	"printf ( ""===============\\n"" )"	378:1:6965:6992	3162975	15	True				
ANR	3163101	CallExpression	"printf ( ""===============\\n"" )"		3162975	0					
ANR	3163102	Callee	printf		3162975	0					
ANR	3163103	Identifier	printf		3162975	0					
ANR	3163104	ArgumentList	"""===============\\n"""		3162975	1					
ANR	3163105	Argument	"""===============\\n"""		3162975	0					
ANR	3163106	PrimaryExpression	"""===============\\n"""		3162975	0					
ANR	3163107	ExpressionStatement	"t . add ( ""abd"" , 6 )"	379:1:6995:7009	3162975	16	True				
ANR	3163108	CallExpression	"t . add ( ""abd"" , 6 )"		3162975	0					
ANR	3163109	Callee	t . add		3162975	0					
ANR	3163110	MemberAccess	t . add		3162975	0					
ANR	3163111	Identifier	t		3162975	0					
ANR	3163112	Identifier	add		3162975	1					
ANR	3163113	ArgumentList	"""abd"""		3162975	1					
ANR	3163114	Argument	"""abd"""		3162975	0					
ANR	3163115	PrimaryExpression	"""abd"""		3162975	0					
ANR	3163116	Argument	6		3162975	1					
ANR	3163117	PrimaryExpression	6		3162975	0					
ANR	3163118	ExpressionStatement	t . print ( )	380:1:7012:7021	3162975	17	True				
ANR	3163119	CallExpression	t . print ( )		3162975	0					
ANR	3163120	Callee	t . print		3162975	0					
ANR	3163121	MemberAccess	t . print		3162975	0					
ANR	3163122	Identifier	t		3162975	0					
ANR	3163123	Identifier	print		3162975	1					
ANR	3163124	ArgumentList			3162975	1					
ANR	3163125	ExpressionStatement	"printf ( ""===============\\n"" )"	381:1:7024:7051	3162975	18	True				
ANR	3163126	CallExpression	"printf ( ""===============\\n"" )"		3162975	0					
ANR	3163127	Callee	printf		3162975	0					
ANR	3163128	Identifier	printf		3162975	0					
ANR	3163129	ArgumentList	"""===============\\n"""		3162975	1					
ANR	3163130	Argument	"""===============\\n"""		3162975	0					
ANR	3163131	PrimaryExpression	"""===============\\n"""		3162975	0					
ANR	3163132	ExpressionStatement	"t . add ( ""abcf"" , 7 )"	382:1:7054:7069	3162975	19	True				
ANR	3163133	CallExpression	"t . add ( ""abcf"" , 7 )"		3162975	0					
ANR	3163134	Callee	t . add		3162975	0					
ANR	3163135	MemberAccess	t . add		3162975	0					
ANR	3163136	Identifier	t		3162975	0					
ANR	3163137	Identifier	add		3162975	1					
ANR	3163138	ArgumentList	"""abcf"""		3162975	1					
ANR	3163139	Argument	"""abcf"""		3162975	0					
ANR	3163140	PrimaryExpression	"""abcf"""		3162975	0					
ANR	3163141	Argument	7		3162975	1					
ANR	3163142	PrimaryExpression	7		3162975	0					
ANR	3163143	ExpressionStatement	t . print ( )	383:1:7072:7081	3162975	20	True				
ANR	3163144	CallExpression	t . print ( )		3162975	0					
ANR	3163145	Callee	t . print		3162975	0					
ANR	3163146	MemberAccess	t . print		3162975	0					
ANR	3163147	Identifier	t		3162975	0					
ANR	3163148	Identifier	print		3162975	1					
ANR	3163149	ArgumentList			3162975	1					
ANR	3163150	ExpressionStatement	"printf ( ""===============\\n"" )"	384:1:7084:7111	3162975	21	True				
ANR	3163151	CallExpression	"printf ( ""===============\\n"" )"		3162975	0					
ANR	3163152	Callee	printf		3162975	0					
ANR	3163153	Identifier	printf		3162975	0					
ANR	3163154	ArgumentList	"""===============\\n"""		3162975	1					
ANR	3163155	Argument	"""===============\\n"""		3162975	0					
ANR	3163156	PrimaryExpression	"""===============\\n"""		3162975	0					
ANR	3163157	IfStatement	"if ( - 1 != t . find ( ""c"" ) )"		3162975	22					
ANR	3163158	Condition	"- 1 != t . find ( ""c"" )"	385:5:7118:7132	3162975	0	True				
ANR	3163159	EqualityExpression	"- 1 != t . find ( ""c"" )"		3162975	0		!=			
ANR	3163160	UnaryOperationExpression	- 1		3162975	0					
ANR	3163161	UnaryOperator	-		3162975	0					
ANR	3163162	PrimaryExpression	1		3162975	1					
ANR	3163163	CallExpression	"t . find ( ""c"" )"		3162975	1					
ANR	3163164	Callee	t . find		3162975	0					
ANR	3163165	MemberAccess	t . find		3162975	0					
ANR	3163166	Identifier	t		3162975	0					
ANR	3163167	Identifier	find		3162975	1					
ANR	3163168	ArgumentList	"""c"""		3162975	1					
ANR	3163169	Argument	"""c"""		3162975	0					
ANR	3163170	PrimaryExpression	"""c"""		3162975	0					
ANR	3163171	ThrowStatement	"throw ""Trie_test, 1"" ;"	386:2:7138:7158	3162975	1	True				
ANR	3163172	PrimaryExpression	"""Trie_test, 1"""		3162975	0					
ANR	3163173	IfStatement	"if ( - 1 != t . find ( ""abe"" ) )"		3162975	23					
ANR	3163174	Condition	"- 1 != t . find ( ""abe"" )"	387:5:7165:7181	3162975	0	True				
ANR	3163175	EqualityExpression	"- 1 != t . find ( ""abe"" )"		3162975	0		!=			
ANR	3163176	UnaryOperationExpression	- 1		3162975	0					
ANR	3163177	UnaryOperator	-		3162975	0					
ANR	3163178	PrimaryExpression	1		3162975	1					
ANR	3163179	CallExpression	"t . find ( ""abe"" )"		3162975	1					
ANR	3163180	Callee	t . find		3162975	0					
ANR	3163181	MemberAccess	t . find		3162975	0					
ANR	3163182	Identifier	t		3162975	0					
ANR	3163183	Identifier	find		3162975	1					
ANR	3163184	ArgumentList	"""abe"""		3162975	1					
ANR	3163185	Argument	"""abe"""		3162975	0					
ANR	3163186	PrimaryExpression	"""abe"""		3162975	0					
ANR	3163187	ThrowStatement	"throw ""Trie_test, 2"" ;"	388:2:7187:7207	3162975	1	True				
ANR	3163188	PrimaryExpression	"""Trie_test, 2"""		3162975	0					
ANR	3163189	IfStatement	"if ( - 1 != t . find ( ""abcdef"" ) )"		3162975	24					
ANR	3163190	Condition	"- 1 != t . find ( ""abcdef"" )"	389:5:7214:7233	3162975	0	True				
ANR	3163191	EqualityExpression	"- 1 != t . find ( ""abcdef"" )"		3162975	0		!=			
ANR	3163192	UnaryOperationExpression	- 1		3162975	0					
ANR	3163193	UnaryOperator	-		3162975	0					
ANR	3163194	PrimaryExpression	1		3162975	1					
ANR	3163195	CallExpression	"t . find ( ""abcdef"" )"		3162975	1					
ANR	3163196	Callee	t . find		3162975	0					
ANR	3163197	MemberAccess	t . find		3162975	0					
ANR	3163198	Identifier	t		3162975	0					
ANR	3163199	Identifier	find		3162975	1					
ANR	3163200	ArgumentList	"""abcdef"""		3162975	1					
ANR	3163201	Argument	"""abcdef"""		3162975	0					
ANR	3163202	PrimaryExpression	"""abcdef"""		3162975	0					
ANR	3163203	ThrowStatement	"throw ""Trie_test, 3"" ;"	390:2:7239:7259	3162975	1	True				
ANR	3163204	PrimaryExpression	"""Trie_test, 3"""		3162975	0					
ANR	3163205	IfStatement	"if ( 2 != t . find ( ""a"" ) )"		3162975	25					
ANR	3163206	Condition	"2 != t . find ( ""a"" )"	391:5:7266:7279	3162975	0	True				
ANR	3163207	EqualityExpression	"2 != t . find ( ""a"" )"		3162975	0		!=			
ANR	3163208	PrimaryExpression	2		3162975	0					
ANR	3163209	CallExpression	"t . find ( ""a"" )"		3162975	1					
ANR	3163210	Callee	t . find		3162975	0					
ANR	3163211	MemberAccess	t . find		3162975	0					
ANR	3163212	Identifier	t		3162975	0					
ANR	3163213	Identifier	find		3162975	1					
ANR	3163214	ArgumentList	"""a"""		3162975	1					
ANR	3163215	Argument	"""a"""		3162975	0					
ANR	3163216	PrimaryExpression	"""a"""		3162975	0					
ANR	3163217	ThrowStatement	"throw ""Trie_test, 4"" ;"	392:2:7285:7305	3162975	1	True				
ANR	3163218	PrimaryExpression	"""Trie_test, 4"""		3162975	0					
ANR	3163219	IfStatement	"if ( 7 != t . find ( ""abcf"" ) )"		3162975	26					
ANR	3163220	Condition	"7 != t . find ( ""abcf"" )"	393:5:7312:7328	3162975	0	True				
ANR	3163221	EqualityExpression	"7 != t . find ( ""abcf"" )"		3162975	0		!=			
ANR	3163222	PrimaryExpression	7		3162975	0					
ANR	3163223	CallExpression	"t . find ( ""abcf"" )"		3162975	1					
ANR	3163224	Callee	t . find		3162975	0					
ANR	3163225	MemberAccess	t . find		3162975	0					
ANR	3163226	Identifier	t		3162975	0					
ANR	3163227	Identifier	find		3162975	1					
ANR	3163228	ArgumentList	"""abcf"""		3162975	1					
ANR	3163229	Argument	"""abcf"""		3162975	0					
ANR	3163230	PrimaryExpression	"""abcf"""		3162975	0					
ANR	3163231	ThrowStatement	"throw ""Trie_test, 5"" ;"	394:2:7334:7354	3162975	1	True				
ANR	3163232	PrimaryExpression	"""Trie_test, 5"""		3162975	0					
ANR	3163233	ExpressionStatement	"printf ( ""must be 5 error messages -- ok\\n"" )"	395:1:7357:7399	3162975	27	True				
ANR	3163234	CallExpression	"printf ( ""must be 5 error messages -- ok\\n"" )"		3162975	0					
ANR	3163235	Callee	printf		3162975	0					
ANR	3163236	Identifier	printf		3162975	0					
ANR	3163237	ArgumentList	"""must be 5 error messages -- ok\\n"""		3162975	1					
ANR	3163238	Argument	"""must be 5 error messages -- ok\\n"""		3162975	0					
ANR	3163239	PrimaryExpression	"""must be 5 error messages -- ok\\n"""		3162975	0					
ANR	3163240	TryStatement	try		3162975	28					
ANR	3163241	CompoundStatement		36:5:714:714	3162975	0					
ANR	3163242	ExpressionStatement	"t . add ( NULL , 1 )"		3162975	0					
ANR	3163243	CallExpression	"t . add ( NULL , 1 )"		3162975	0					
ANR	3163244	Callee	t . add		3162975	0					
ANR	3163245	MemberAccess	t . add		3162975	0					
ANR	3163246	Identifier	t		3162975	0					
ANR	3163247	Identifier	add		3162975	1					
ANR	3163248	ArgumentList	NULL		3162975	1					
ANR	3163249	Argument	NULL		3162975	0					
ANR	3163250	Identifier	NULL		3162975	0					
ANR	3163251	Argument	1		3162975	1					
ANR	3163252	PrimaryExpression	1		3162975	0					
ANR	3163253	CatchList			3162975	1					
ANR	3163254	CatchStatement	catch ( char * msg )		3162975	0					
ANR	3163255	Identifier	msg		3162975	0					
ANR	3163256	CompoundStatement		38:22:755:755	3162975	1					
ANR	3163257	ExpressionStatement	alert ( msg )	399:2:7451:7461	3162975	0	True				
ANR	3163258	CallExpression	alert ( msg )		3162975	0					
ANR	3163259	Callee	alert		3162975	0					
ANR	3163260	Identifier	alert		3162975	0					
ANR	3163261	ArgumentList	msg		3162975	1					
ANR	3163262	Argument	msg		3162975	0					
ANR	3163263	Identifier	msg		3162975	0					
ANR	3163264	ExpressionStatement		400:2:7465:7465	3162975	29	True				
ANR	3163265	TryStatement	try		3162975	30					
ANR	3163266	CompoundStatement		41:5:780:780	3162975	0					
ANR	3163267	ExpressionStatement	"t . add ( """" , 1 )"		3162975	0					
ANR	3163268	CallExpression	"t . add ( """" , 1 )"		3162975	0					
ANR	3163269	Callee	t . add		3162975	0					
ANR	3163270	MemberAccess	t . add		3162975	0					
ANR	3163271	Identifier	t		3162975	0					
ANR	3163272	Identifier	add		3162975	1					
ANR	3163273	ArgumentList	""""""		3162975	1					
ANR	3163274	Argument	""""""		3162975	0					
ANR	3163275	PrimaryExpression	""""""		3162975	0					
ANR	3163276	Argument	1		3162975	1					
ANR	3163277	PrimaryExpression	1		3162975	0					
ANR	3163278	CatchList			3162975	1					
ANR	3163279	CatchStatement	catch ( char * msg )		3162975	0					
ANR	3163280	Identifier	msg		3162975	0					
ANR	3163281	CompoundStatement		43:22:819:819	3162975	1					
ANR	3163282	ExpressionStatement	alert ( msg )	404:2:7515:7525	3162975	0	True				
ANR	3163283	CallExpression	alert ( msg )		3162975	0					
ANR	3163284	Callee	alert		3162975	0					
ANR	3163285	Identifier	alert		3162975	0					
ANR	3163286	ArgumentList	msg		3162975	1					
ANR	3163287	Argument	msg		3162975	0					
ANR	3163288	Identifier	msg		3162975	0					
ANR	3163289	ExpressionStatement		405:2:7529:7529	3162975	31	True				
ANR	3163290	TryStatement	try		3162975	32					
ANR	3163291	CompoundStatement		46:5:844:844	3162975	0					
ANR	3163292	ExpressionStatement	"t . add ( ""aa"" , - 1 )"		3162975	0					
ANR	3163293	CallExpression	"t . add ( ""aa"" , - 1 )"		3162975	0					
ANR	3163294	Callee	t . add		3162975	0					
ANR	3163295	MemberAccess	t . add		3162975	0					
ANR	3163296	Identifier	t		3162975	0					
ANR	3163297	Identifier	add		3162975	1					
ANR	3163298	ArgumentList	"""aa"""		3162975	1					
ANR	3163299	Argument	"""aa"""		3162975	0					
ANR	3163300	PrimaryExpression	"""aa"""		3162975	0					
ANR	3163301	Argument	- 1		3162975	1					
ANR	3163302	UnaryOperationExpression	- 1		3162975	0					
ANR	3163303	UnaryOperator	-		3162975	0					
ANR	3163304	PrimaryExpression	1		3162975	1					
ANR	3163305	CatchList			3162975	1					
ANR	3163306	CatchStatement	catch ( char * msg )		3162975	0					
ANR	3163307	Identifier	msg		3162975	0					
ANR	3163308	CompoundStatement		48:22:886:886	3162975	1					
ANR	3163309	ExpressionStatement	alert ( msg )	409:2:7582:7592	3162975	0	True				
ANR	3163310	CallExpression	alert ( msg )		3162975	0					
ANR	3163311	Callee	alert		3162975	0					
ANR	3163312	Identifier	alert		3162975	0					
ANR	3163313	ArgumentList	msg		3162975	1					
ANR	3163314	Argument	msg		3162975	0					
ANR	3163315	Identifier	msg		3162975	0					
ANR	3163316	ExpressionStatement		410:2:7596:7596	3162975	33	True				
ANR	3163317	TryStatement	try		3162975	34					
ANR	3163318	CompoundStatement		51:5:911:911	3162975	0					
ANR	3163319	ExpressionStatement	t . find ( NULL )		3162975	0					
ANR	3163320	CallExpression	t . find ( NULL )		3162975	0					
ANR	3163321	Callee	t . find		3162975	0					
ANR	3163322	MemberAccess	t . find		3162975	0					
ANR	3163323	Identifier	t		3162975	0					
ANR	3163324	Identifier	find		3162975	1					
ANR	3163325	ArgumentList	NULL		3162975	1					
ANR	3163326	Argument	NULL		3162975	0					
ANR	3163327	Identifier	NULL		3162975	0					
ANR	3163328	CatchList			3162975	1					
ANR	3163329	CatchStatement	catch ( char * msg )		3162975	0					
ANR	3163330	Identifier	msg		3162975	0					
ANR	3163331	CompoundStatement		53:22:951:951	3162975	1					
ANR	3163332	ExpressionStatement	alert ( msg )	414:2:7647:7657	3162975	0	True				
ANR	3163333	CallExpression	alert ( msg )		3162975	0					
ANR	3163334	Callee	alert		3162975	0					
ANR	3163335	Identifier	alert		3162975	0					
ANR	3163336	ArgumentList	msg		3162975	1					
ANR	3163337	Argument	msg		3162975	0					
ANR	3163338	Identifier	msg		3162975	0					
ANR	3163339	ExpressionStatement		415:2:7661:7661	3162975	35	True				
ANR	3163340	TryStatement	try		3162975	36					
ANR	3163341	CompoundStatement		56:5:976:976	3162975	0					
ANR	3163342	ExpressionStatement	"t . find ( """" )"		3162975	0					
ANR	3163343	CallExpression	"t . find ( """" )"		3162975	0					
ANR	3163344	Callee	t . find		3162975	0					
ANR	3163345	MemberAccess	t . find		3162975	0					
ANR	3163346	Identifier	t		3162975	0					
ANR	3163347	Identifier	find		3162975	1					
ANR	3163348	ArgumentList	""""""		3162975	1					
ANR	3163349	Argument	""""""		3162975	0					
ANR	3163350	PrimaryExpression	""""""		3162975	0					
ANR	3163351	CatchList			3162975	1					
ANR	3163352	CatchStatement	catch ( char * msg )		3162975	0					
ANR	3163353	Identifier	msg		3162975	0					
ANR	3163354	CompoundStatement		58:22:1014:1014	3162975	1					
ANR	3163355	ExpressionStatement	alert ( msg )	419:2:7710:7720	3162975	0	True				
ANR	3163356	CallExpression	alert ( msg )		3162975	0					
ANR	3163357	Callee	alert		3162975	0					
ANR	3163358	Identifier	alert		3162975	0					
ANR	3163359	ArgumentList	msg		3162975	1					
ANR	3163360	Argument	msg		3162975	0					
ANR	3163361	Identifier	msg		3162975	0					
ANR	3163362	ExpressionStatement		420:2:7724:7724	3162975	37	True				
ANR	3163363	ReturnType	void		3162975	1					
ANR	3163364	Identifier	Trie_test		3162975	2					
ANR	3163365	ParameterList			3162975	3					
ANR	3163366	CFGEntryNode	ENTRY		3162975		True				
ANR	3163367	CFGExitNode	EXIT		3162975		True				
ANR	3163368	CFGExceptionNode	EXCEPTION		3162975		True				
ANR	3163369	CFGExceptionNode	EXCEPTION		3162975		True				
ANR	3163370	CFGExceptionNode	EXCEPTION		3162975		True				
ANR	3163371	CFGExceptionNode	EXCEPTION		3162975		True				
ANR	3163372	CFGExceptionNode	EXCEPTION		3162975		True				
ANR	3163373	CFGExceptionNode	EXCEPTION		3162975		True				
ANR	3163374	CFGExceptionNode	EXCEPTION		3162975		True				
ANR	3163375	CFGExceptionNode	EXCEPTION		3162975		True				
ANR	3163376	CFGExceptionNode	EXCEPTION		3162975		True				
ANR	3163377	CFGErrorNode	ERROR		3162975		True				
ANR	3163378	CFGErrorNode	ERROR		3162975		True				
ANR	3163379	CFGErrorNode	ERROR		3162975		True				
ANR	3163380	CFGErrorNode	ERROR		3162975		True				
ANR	3163381	CFGErrorNode	ERROR		3162975		True				
ANR	3163382	Symbol	t		3162975						
ANR	3163383	Symbol	t . find		3162975						
