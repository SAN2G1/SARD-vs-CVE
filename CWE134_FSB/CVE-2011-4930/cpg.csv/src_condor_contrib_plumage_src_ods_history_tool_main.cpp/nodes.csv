command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2965824	File	data/converged/CVE-2011-4930_htcondor/src_condor_contrib_plumage_src_ods_history_tool_main.cpp								
ANR	2965825	Function	print_usage	49:0:1455:1593							
ANR	2965826	FunctionDef	print_usage (char * name)		2965825	0					
ANR	2965827	CompoundStatement		50:0:1492:1593	2965825	0					
ANR	2965828	ExpressionStatement	"printf ( ""Usage: %s [-db <mongodb URL>] [-f <full path to history file>] [-h]\\n"" , name )"	51:2:1496:1580	2965825	0	True				
ANR	2965829	CallExpression	"printf ( ""Usage: %s [-db <mongodb URL>] [-f <full path to history file>] [-h]\\n"" , name )"		2965825	0					
ANR	2965830	Callee	printf		2965825	0					
ANR	2965831	Identifier	printf		2965825	0					
ANR	2965832	ArgumentList	"""Usage: %s [-db <mongodb URL>] [-f <full path to history file>] [-h]\\n"""		2965825	1					
ANR	2965833	Argument	"""Usage: %s [-db <mongodb URL>] [-f <full path to history file>] [-h]\\n"""		2965825	0					
ANR	2965834	PrimaryExpression	"""Usage: %s [-db <mongodb URL>] [-f <full path to history file>] [-h]\\n"""		2965825	0					
ANR	2965835	Argument	name		2965825	1					
ANR	2965836	Identifier	name		2965825	0					
ANR	2965837	ExpressionStatement	exit ( 1 )	52:2:1584:1591	2965825	1	True				
ANR	2965838	CallExpression	exit ( 1 )		2965825	0					
ANR	2965839	Callee	exit		2965825	0					
ANR	2965840	Identifier	exit		2965825	0					
ANR	2965841	ArgumentList	1		2965825	1					
ANR	2965842	Argument	1		2965825	0					
ANR	2965843	PrimaryExpression	1		2965825	0					
ANR	2965844	ReturnType	static void		2965825	1					
ANR	2965845	Identifier	print_usage		2965825	2					
ANR	2965846	ParameterList	char * name		2965825	3					
ANR	2965847	Parameter	char * name	49:24:1479:1488	2965825	0	True				
ANR	2965848	ParameterType	char *		2965825	0					
ANR	2965849	Identifier	name		2965825	1					
ANR	2965850	CFGEntryNode	ENTRY		2965825		True				
ANR	2965851	CFGExitNode	EXIT		2965825		True				
ANR	2965852	Symbol	name		2965825						
ANR	2965853	DeclStmt									
ANR	2965854	Decl							void	void ( char * JobHistoryFileName )	readHistoryFromFiles
ANR	2965855	DeclStmt									
ANR	2965856	Decl							char	char * * ( int * numHistoryFiles )	findHistoryFiles
ANR	2965857	DeclStmt									
ANR	2965858	Decl							bool	"bool ( const char * fullFilename , time_t * backup_time )"	isHistoryBackup
ANR	2965859	DeclStmt									
ANR	2965860	Decl							int	"int ( const void * item1 , const void * item2 )"	compareHistoryFilenames
ANR	2965861	DeclStmt									
ANR	2965862	Decl							void	void ( char * JobHistoryFileName )	readHistoryFromFile
ANR	2965863	DeclStmt									
ANR	2965864	Decl							bool	bool	backwards
ANR	2965865	DeclStmt									
ANR	2965866	Decl							AttrListPrintMask	AttrListPrintMask	mask
ANR	2965867	DeclStmt									
ANR	2965868	Decl							char	char *	BaseJobHistoryFileName
ANR	2965869	DeclStmt									
ANR	2965870	Decl							int	int	cluster
ANR	2965871	Decl							int	int	proc
ANR	2965872	DeclStmt									
ANR	2965873	Decl							int	int	specifiedMatch
ANR	2965874	Decl							int	int	matchCount
ANR	2965875	DeclStmt									
ANR	2965876	Decl							char	char *	schedd_name
ANR	2965877	DeclStmt									
ANR	2965878	Decl							DBClientConnection	DBClientConnection	c
ANR	2965879	DeclStmt									
ANR	2965880	Decl							std :: string	std :: string	db_name
ANR	2965881	Function	main	74:0:2277:3054							
ANR	2965882	FunctionDef	"main (int argc , char * argv [ ])"		2965881	0					
ANR	2965883	CompoundStatement		76:0:2310:3054	2965881	0					
ANR	2965884	IdentifierDeclStatement	int i ;	77:4:2316:2321	2965881	0	True				
ANR	2965885	IdentifierDecl	i		2965881	0					
ANR	2965886	IdentifierDeclType	int		2965881	0					
ANR	2965887	Identifier	i		2965881	1					
ANR	2965888	IdentifierDeclStatement	char * file_name = NULL ;	78:4:2327:2349	2965881	1	True				
ANR	2965889	IdentifierDecl	* file_name = NULL		2965881	0					
ANR	2965890	IdentifierDeclType	char *		2965881	0					
ANR	2965891	Identifier	file_name		2965881	1					
ANR	2965892	AssignmentExpression	* file_name = NULL		2965881	2		=			
ANR	2965893	Identifier	NULL		2965881	0					
ANR	2965894	Identifier	NULL		2965881	1					
ANR	2965895	ExpressionStatement	config ( )	81:4:2387:2395	2965881	2	True				
ANR	2965896	CallExpression	config ( )		2965881	0					
ANR	2965897	Callee	config		2965881	0					
ANR	2965898	Identifier	config		2965881	0					
ANR	2965899	ArgumentList			2965881	1					
ANR	2965900	ExpressionStatement	"set_mySubSystem ( ""TOOL"" , SUBSYSTEM_TYPE_TOOL )"	83:1:2399:2444	2965881	3	True				
ANR	2965901	CallExpression	"set_mySubSystem ( ""TOOL"" , SUBSYSTEM_TYPE_TOOL )"		2965881	0					
ANR	2965902	Callee	set_mySubSystem		2965881	0					
ANR	2965903	Identifier	set_mySubSystem		2965881	0					
ANR	2965904	ArgumentList	"""TOOL"""		2965881	1					
ANR	2965905	Argument	"""TOOL"""		2965881	0					
ANR	2965906	PrimaryExpression	"""TOOL"""		2965881	0					
ANR	2965907	Argument	SUBSYSTEM_TYPE_TOOL		2965881	1					
ANR	2965908	Identifier	SUBSYSTEM_TYPE_TOOL		2965881	0					
ANR	2965909	ForStatement	for ( i = 1 ; i < argc ; i ++ )		2965881	4					
ANR	2965910	ForInit	i = 1 ;	85:8:2459:2462	2965881	0	True				
ANR	2965911	AssignmentExpression	i = 1		2965881	0		=			
ANR	2965912	Identifier	i		2965881	0					
ANR	2965913	PrimaryExpression	1		2965881	1					
ANR	2965914	Condition	i < argc	85:13:2464:2469	2965881	1	True				
ANR	2965915	RelationalExpression	i < argc		2965881	0		<			
ANR	2965916	Identifier	i		2965881	0					
ANR	2965917	Identifier	argc		2965881	1					
ANR	2965918	PostIncDecOperationExpression	i ++	85:21:2472:2474	2965881	2	True				
ANR	2965919	Identifier	i		2965881	0					
ANR	2965920	IncDec	++		2965881	1					
ANR	2965921	CompoundStatement		10:26:166:166	2965881	3					
ANR	2965922	IfStatement	"if ( strcmp ( argv [ i ] , ""-h"" ) == 0 )"		2965881	0					
ANR	2965923	Condition	"strcmp ( argv [ i ] , ""-h"" ) == 0"	86:12:2491:2513	2965881	0	True				
ANR	2965924	EqualityExpression	"strcmp ( argv [ i ] , ""-h"" ) == 0"		2965881	0		==			
ANR	2965925	CallExpression	"strcmp ( argv [ i ] , ""-h"" )"		2965881	0					
ANR	2965926	Callee	strcmp		2965881	0					
ANR	2965927	Identifier	strcmp		2965881	0					
ANR	2965928	ArgumentList	argv [ i ]		2965881	1					
ANR	2965929	Argument	argv [ i ]		2965881	0					
ANR	2965930	ArrayIndexing	argv [ i ]		2965881	0					
ANR	2965931	Identifier	argv		2965881	0					
ANR	2965932	Identifier	i		2965881	1					
ANR	2965933	Argument	"""-h"""		2965881	1					
ANR	2965934	PrimaryExpression	"""-h"""		2965881	0					
ANR	2965935	PrimaryExpression	0		2965881	1					
ANR	2965936	CompoundStatement		11:37:205:205	2965881	1					
ANR	2965937	ExpressionStatement	print_usage ( argv [ 0 ] )	87:12:2530:2550	2965881	0	True				
ANR	2965938	CallExpression	print_usage ( argv [ 0 ] )		2965881	0					
ANR	2965939	Callee	print_usage		2965881	0					
ANR	2965940	Identifier	print_usage		2965881	0					
ANR	2965941	ArgumentList	argv [ 0 ]		2965881	1					
ANR	2965942	Argument	argv [ 0 ]		2965881	0					
ANR	2965943	ArrayIndexing	argv [ 0 ]		2965881	0					
ANR	2965944	Identifier	argv		2965881	0					
ANR	2965945	PrimaryExpression	0		2965881	1					
ANR	2965946	IfStatement	"if ( strcmp ( argv [ i ] , ""-f"" ) == 0 )"		2965881	1					
ANR	2965947	Condition	"strcmp ( argv [ i ] , ""-f"" ) == 0"	89:12:2574:2596	2965881	0	True				
ANR	2965948	EqualityExpression	"strcmp ( argv [ i ] , ""-f"" ) == 0"		2965881	0		==			
ANR	2965949	CallExpression	"strcmp ( argv [ i ] , ""-f"" )"		2965881	0					
ANR	2965950	Callee	strcmp		2965881	0					
ANR	2965951	Identifier	strcmp		2965881	0					
ANR	2965952	ArgumentList	argv [ i ]		2965881	1					
ANR	2965953	Argument	argv [ i ]		2965881	0					
ANR	2965954	ArrayIndexing	argv [ i ]		2965881	0					
ANR	2965955	Identifier	argv		2965881	0					
ANR	2965956	Identifier	i		2965881	1					
ANR	2965957	Argument	"""-f"""		2965881	1					
ANR	2965958	PrimaryExpression	"""-f"""		2965881	0					
ANR	2965959	PrimaryExpression	0		2965881	1					
ANR	2965960	CompoundStatement		14:37:288:288	2965881	1					
ANR	2965961	ExpressionStatement	file_name = argv [ i + 1 ]	90:12:2613:2634	2965881	0	True				
ANR	2965962	AssignmentExpression	file_name = argv [ i + 1 ]		2965881	0		=			
ANR	2965963	Identifier	file_name		2965881	0					
ANR	2965964	ArrayIndexing	argv [ i + 1 ]		2965881	1					
ANR	2965965	Identifier	argv		2965881	0					
ANR	2965966	AdditiveExpression	i + 1		2965881	1		+			
ANR	2965967	Identifier	i		2965881	0					
ANR	2965968	PrimaryExpression	1		2965881	1					
ANR	2965969	IfStatement	if ( i < argc )		2965881	5					
ANR	2965970	Condition	i < argc	93:8:2660:2665	2965881	0	True				
ANR	2965971	RelationalExpression	i < argc		2965881	0		<			
ANR	2965972	Identifier	i		2965881	0					
ANR	2965973	Identifier	argc		2965881	1					
ANR	2965974	CompoundStatement		18:16:357:357	2965881	1					
ANR	2965975	ExpressionStatement	print_usage ( argv [ 0 ] )	94:8:2678:2698	2965881	0	True				
ANR	2965976	CallExpression	print_usage ( argv [ 0 ] )		2965881	0					
ANR	2965977	Callee	print_usage		2965881	0					
ANR	2965978	Identifier	print_usage		2965881	0					
ANR	2965979	ArgumentList	argv [ 0 ]		2965881	1					
ANR	2965980	Argument	argv [ 0 ]		2965881	0					
ANR	2965981	ArrayIndexing	argv [ 0 ]		2965881	0					
ANR	2965982	Identifier	argv		2965881	0					
ANR	2965983	PrimaryExpression	0		2965881	1					
ANR	2965984	IdentifierDeclStatement	"char * tmp = param ( ""SCHEDD_NAME"" ) ;"	97:4:2715:2747	2965881	6	True				
ANR	2965985	IdentifierDecl	"* tmp = param ( ""SCHEDD_NAME"" )"		2965881	0					
ANR	2965986	IdentifierDeclType	char *		2965881	0					
ANR	2965987	Identifier	tmp		2965881	1					
ANR	2965988	AssignmentExpression	"* tmp = param ( ""SCHEDD_NAME"" )"		2965881	2		=			
ANR	2965989	Identifier	tmp		2965881	0					
ANR	2965990	CallExpression	"param ( ""SCHEDD_NAME"" )"		2965881	1					
ANR	2965991	Callee	param		2965881	0					
ANR	2965992	Identifier	param		2965881	0					
ANR	2965993	ArgumentList	"""SCHEDD_NAME"""		2965881	1					
ANR	2965994	Argument	"""SCHEDD_NAME"""		2965881	0					
ANR	2965995	PrimaryExpression	"""SCHEDD_NAME"""		2965881	0					
ANR	2965996	IfStatement	if ( ! tmp )		2965881	7					
ANR	2965997	Condition	! tmp	98:8:2757:2760	2965881	0	True				
ANR	2965998	UnaryOperationExpression	! tmp		2965881	0					
ANR	2965999	UnaryOperator	!		2965881	0					
ANR	2966000	Identifier	tmp		2965881	1					
ANR	2966001	CompoundStatement		23:14:452:452	2965881	1					
ANR	2966002	ExpressionStatement	schedd_name = build_valid_daemon_name ( NULL )	99:8:2773:2816	2965881	0	True				
ANR	2966003	AssignmentExpression	schedd_name = build_valid_daemon_name ( NULL )		2965881	0		=			
ANR	2966004	Identifier	schedd_name		2965881	0					
ANR	2966005	CallExpression	build_valid_daemon_name ( NULL )		2965881	1					
ANR	2966006	Callee	build_valid_daemon_name		2965881	0					
ANR	2966007	Identifier	build_valid_daemon_name		2965881	0					
ANR	2966008	ArgumentList	NULL		2965881	1					
ANR	2966009	Argument	NULL		2965881	0					
ANR	2966010	Identifier	NULL		2965881	0					
ANR	2966011	ElseStatement	else		2965881	0					
ANR	2966012	CompoundStatement		26:9:522:522	2965881	0					
ANR	2966013	ExpressionStatement	schedd_name = strdup ( tmp )	102:8:2843:2868	2965881	0	True				
ANR	2966014	AssignmentExpression	schedd_name = strdup ( tmp )		2965881	0		=			
ANR	2966015	Identifier	schedd_name		2965881	0					
ANR	2966016	CallExpression	strdup ( tmp )		2965881	1					
ANR	2966017	Callee	strdup		2965881	0					
ANR	2966018	Identifier	strdup		2965881	0					
ANR	2966019	ArgumentList	tmp		2965881	1					
ANR	2966020	Argument	tmp		2965881	0					
ANR	2966021	Identifier	tmp		2965881	0					
ANR	2966022	ExpressionStatement	free ( tmp )	103:8:2878:2887	2965881	1	True				
ANR	2966023	CallExpression	free ( tmp )		2965881	0					
ANR	2966024	Callee	free		2965881	0					
ANR	2966025	Identifier	free		2965881	0					
ANR	2966026	ArgumentList	tmp		2965881	1					
ANR	2966027	Argument	tmp		2965881	0					
ANR	2966028	Identifier	tmp		2965881	0					
ANR	2966029	ExpressionStatement	"printf ( ""SCHEDD_NAME=%s\\n"" , schedd_name )"	106:4:2900:2938	2965881	8	True				
ANR	2966030	CallExpression	"printf ( ""SCHEDD_NAME=%s\\n"" , schedd_name )"		2965881	0					
ANR	2966031	Callee	printf		2965881	0					
ANR	2966032	Identifier	printf		2965881	0					
ANR	2966033	ArgumentList	"""SCHEDD_NAME=%s\\n"""		2965881	1					
ANR	2966034	Argument	"""SCHEDD_NAME=%s\\n"""		2965881	0					
ANR	2966035	PrimaryExpression	"""SCHEDD_NAME=%s\\n"""		2965881	0					
ANR	2966036	Argument	schedd_name		2965881	1					
ANR	2966037	Identifier	schedd_name		2965881	0					
ANR	2966038	ExpressionStatement	"c . connect ( ""localhost"" )"	108:4:2945:2967	2965881	9	True				
ANR	2966039	CallExpression	"c . connect ( ""localhost"" )"		2965881	0					
ANR	2966040	Callee	c . connect		2965881	0					
ANR	2966041	MemberAccess	c . connect		2965881	0					
ANR	2966042	Identifier	c		2965881	0					
ANR	2966043	Identifier	connect		2965881	1					
ANR	2966044	ArgumentList	"""localhost"""		2965881	1					
ANR	2966045	Argument	"""localhost"""		2965881	0					
ANR	2966046	PrimaryExpression	"""localhost"""		2965881	0					
ANR	2966047	ExpressionStatement	readHistoryFromFiles ( file_name )	110:4:2978:3009	2965881	10	True				
ANR	2966048	CallExpression	readHistoryFromFiles ( file_name )		2965881	0					
ANR	2966049	Callee	readHistoryFromFiles		2965881	0					
ANR	2966050	Identifier	readHistoryFromFiles		2965881	0					
ANR	2966051	ArgumentList	file_name		2965881	1					
ANR	2966052	Argument	file_name		2965881	0					
ANR	2966053	Identifier	file_name		2965881	0					
ANR	2966054	ExpressionStatement	free ( schedd_name )	112:4:3020:3038	2965881	11	True				
ANR	2966055	CallExpression	free ( schedd_name )		2965881	0					
ANR	2966056	Callee	free		2965881	0					
ANR	2966057	Identifier	free		2965881	0					
ANR	2966058	ArgumentList	schedd_name		2965881	1					
ANR	2966059	Argument	schedd_name		2965881	0					
ANR	2966060	Identifier	schedd_name		2965881	0					
ANR	2966061	ReturnStatement	return 0 ;	113:4:3044:3052	2965881	12	True				
ANR	2966062	PrimaryExpression	0		2965881	0					
ANR	2966063	ReturnType	int		2965881	1					
ANR	2966064	Identifier	main		2965881	2					
ANR	2966065	ParameterList	"int argc , char * argv [ ]"		2965881	3					
ANR	2966066	Parameter	int argc	75:5:2286:2293	2965881	0	True				
ANR	2966067	ParameterType	int		2965881	0					
ANR	2966068	Identifier	argc		2965881	1					
ANR	2966069	Parameter	char * argv [ ]	75:15:2296:2307	2965881	1	True				
ANR	2966070	ParameterType	char * [ ]		2965881	0					
ANR	2966071	Identifier	argv		2965881	1					
ANR	2966072	CFGEntryNode	ENTRY		2965881		True				
ANR	2966073	CFGExitNode	EXIT		2965881		True				
ANR	2966074	Symbol	argc		2965881						
ANR	2966075	Symbol	strcmp		2965881						
ANR	2966076	Symbol	NULL		2965881						
ANR	2966077	Symbol	SUBSYSTEM_TYPE_TOOL		2965881						
ANR	2966078	Symbol	c		2965881						
ANR	2966079	Symbol	file_name		2965881						
ANR	2966080	Symbol	i		2965881						
ANR	2966081	Symbol	* argv		2965881						
ANR	2966082	Symbol	argv		2965881						
ANR	2966083	Symbol	* i		2965881						
ANR	2966084	Symbol	param		2965881						
ANR	2966085	Symbol	schedd_name		2965881						
ANR	2966086	Symbol	tmp		2965881						
ANR	2966087	Symbol	build_valid_daemon_name		2965881						
ANR	2966088	Symbol	strdup		2965881						
ANR	2966089	Function	readHistoryFromFiles	118:0:3202:4383							
ANR	2966090	FunctionDef	readHistoryFromFiles (char * JobHistoryFileName)		2966089	0					
ANR	2966091	CompoundStatement		119:0:3261:4383	2966089	0					
ANR	2966092	IfStatement	if ( JobHistoryFileName )		2966089	0					
ANR	2966093	Condition	JobHistoryFileName	121:8:3272:3289	2966089	0	True				
ANR	2966094	Identifier	JobHistoryFileName		2966089	0					
ANR	2966095	CompoundStatement		3:28:30:30	2966089	1					
ANR	2966096	ExpressionStatement	readHistoryFromFile ( JobHistoryFileName )	123:8:3389:3428	2966089	0	True				
ANR	2966097	CallExpression	readHistoryFromFile ( JobHistoryFileName )		2966089	0					
ANR	2966098	Callee	readHistoryFromFile		2966089	0					
ANR	2966099	Identifier	readHistoryFromFile		2966089	0					
ANR	2966100	ArgumentList	JobHistoryFileName		2966089	1					
ANR	2966101	Argument	JobHistoryFileName		2966089	0					
ANR	2966102	Identifier	JobHistoryFileName		2966089	0					
ANR	2966103	ElseStatement	else		2966089	0					
ANR	2966104	CompoundStatement		10:8:360:379	2966089	0					
ANR	2966105	IdentifierDeclStatement	int numHistoryFiles ;	127:8:3593:3612	2966089	0	True				
ANR	2966106	IdentifierDecl	numHistoryFiles		2966089	0					
ANR	2966107	IdentifierDeclType	int		2966089	0					
ANR	2966108	Identifier	numHistoryFiles		2966089	1					
ANR	2966109	IdentifierDeclStatement	char * * historyFiles ;	128:8:3622:3641	2966089	1	True				
ANR	2966110	IdentifierDecl	* * historyFiles		2966089	0					
ANR	2966111	IdentifierDeclType	char * *		2966089	0					
ANR	2966112	Identifier	historyFiles		2966089	1					
ANR	2966113	ExpressionStatement	historyFiles = findHistoryFiles ( & numHistoryFiles )	130:8:3652:3701	2966089	2	True				
ANR	2966114	AssignmentExpression	historyFiles = findHistoryFiles ( & numHistoryFiles )		2966089	0		=			
ANR	2966115	Identifier	historyFiles		2966089	0					
ANR	2966116	CallExpression	findHistoryFiles ( & numHistoryFiles )		2966089	1					
ANR	2966117	Callee	findHistoryFiles		2966089	0					
ANR	2966118	Identifier	findHistoryFiles		2966089	0					
ANR	2966119	ArgumentList	& numHistoryFiles		2966089	1					
ANR	2966120	Argument	& numHistoryFiles		2966089	0					
ANR	2966121	UnaryOperationExpression	& numHistoryFiles		2966089	0					
ANR	2966122	UnaryOperator	&		2966089	0					
ANR	2966123	Identifier	numHistoryFiles		2966089	1					
ANR	2966124	IfStatement	if ( historyFiles && numHistoryFiles > 0 )		2966089	3					
ANR	2966125	Condition	historyFiles && numHistoryFiles > 0	131:12:3715:3749	2966089	0	True				
ANR	2966126	AndExpression	historyFiles && numHistoryFiles > 0		2966089	0		&&			
ANR	2966127	Identifier	historyFiles		2966089	0					
ANR	2966128	RelationalExpression	numHistoryFiles > 0		2966089	1		>			
ANR	2966129	Identifier	numHistoryFiles		2966089	0					
ANR	2966130	PrimaryExpression	0		2966089	1					
ANR	2966131	CompoundStatement		14:12:504:517	2966089	1					
ANR	2966132	IdentifierDeclStatement	int fileIndex ;	132:12:3766:3779	2966089	0	True				
ANR	2966133	IdentifierDecl	fileIndex		2966089	0					
ANR	2966134	IdentifierDeclType	int		2966089	0					
ANR	2966135	Identifier	fileIndex		2966089	1					
ANR	2966136	IfStatement	if ( backwards )		2966089	1					
ANR	2966137	Condition	backwards	133:16:3797:3805	2966089	0	True				
ANR	2966138	Identifier	backwards		2966089	0					
ANR	2966139	CompoundStatement		15:27:546:546	2966089	1					
ANR	2966140	ForStatement	for ( fileIndex = numHistoryFiles - 1 ; fileIndex >= 0 ; fileIndex -- )		2966089	0					
ANR	2966141	ForInit	fileIndex = numHistoryFiles - 1 ;	134:20:3872:3903	2966089	0	True				
ANR	2966142	AssignmentExpression	fileIndex = numHistoryFiles - 1		2966089	0		=			
ANR	2966143	Identifier	fileIndex		2966089	0					
ANR	2966144	AdditiveExpression	numHistoryFiles - 1		2966089	1		-			
ANR	2966145	Identifier	numHistoryFiles		2966089	0					
ANR	2966146	PrimaryExpression	1		2966089	1					
ANR	2966147	Condition	fileIndex >= 0	134:53:3905:3918	2966089	1	True				
ANR	2966148	RelationalExpression	fileIndex >= 0		2966089	0		>=			
ANR	2966149	Identifier	fileIndex		2966089	0					
ANR	2966150	PrimaryExpression	0		2966089	1					
ANR	2966151	PostIncDecOperationExpression	fileIndex --	134:69:3921:3931	2966089	2	True				
ANR	2966152	Identifier	fileIndex		2966089	0					
ANR	2966153	IncDec	--		2966089	1					
ANR	2966154	CompoundStatement		16:82:672:672	2966089	3					
ANR	2966155	ExpressionStatement	readHistoryFromFile ( historyFiles [ fileIndex ] )	135:20:3956:4000	2966089	0	True				
ANR	2966156	CallExpression	readHistoryFromFile ( historyFiles [ fileIndex ] )		2966089	0					
ANR	2966157	Callee	readHistoryFromFile		2966089	0					
ANR	2966158	Identifier	readHistoryFromFile		2966089	0					
ANR	2966159	ArgumentList	historyFiles [ fileIndex ]		2966089	1					
ANR	2966160	Argument	historyFiles [ fileIndex ]		2966089	0					
ANR	2966161	ArrayIndexing	historyFiles [ fileIndex ]		2966089	0					
ANR	2966162	Identifier	historyFiles		2966089	0					
ANR	2966163	Identifier	fileIndex		2966089	1					
ANR	2966164	ExpressionStatement	free ( historyFiles [ fileIndex ] )	136:20:4022:4051	2966089	1	True				
ANR	2966165	CallExpression	free ( historyFiles [ fileIndex ] )		2966089	0					
ANR	2966166	Callee	free		2966089	0					
ANR	2966167	Identifier	free		2966089	0					
ANR	2966168	ArgumentList	historyFiles [ fileIndex ]		2966089	1					
ANR	2966169	Argument	historyFiles [ fileIndex ]		2966089	0					
ANR	2966170	ArrayIndexing	historyFiles [ fileIndex ]		2966089	0					
ANR	2966171	Identifier	historyFiles		2966089	0					
ANR	2966172	Identifier	fileIndex		2966089	1					
ANR	2966173	ElseStatement	else		2966089	0					
ANR	2966174	CompoundStatement		21:17:840:840	2966089	0					
ANR	2966175	ForStatement	for ( fileIndex = 0 ; fileIndex < numHistoryFiles ; fileIndex ++ )		2966089	0					
ANR	2966176	ForInit	fileIndex = 0 ;	140:21:4125:4138	2966089	0	True				
ANR	2966177	AssignmentExpression	fileIndex = 0		2966089	0		=			
ANR	2966178	Identifier	fileIndex		2966089	0					
ANR	2966179	PrimaryExpression	0		2966089	1					
ANR	2966180	Condition	fileIndex < numHistoryFiles	140:36:4140:4166	2966089	1	True				
ANR	2966181	RelationalExpression	fileIndex < numHistoryFiles		2966089	0		<			
ANR	2966182	Identifier	fileIndex		2966089	0					
ANR	2966183	Identifier	numHistoryFiles		2966089	1					
ANR	2966184	PostIncDecOperationExpression	fileIndex ++	140:65:4169:4179	2966089	2	True				
ANR	2966185	Identifier	fileIndex		2966089	0					
ANR	2966186	IncDec	++		2966089	1					
ANR	2966187	CompoundStatement		22:78:920:920	2966089	3					
ANR	2966188	ExpressionStatement	readHistoryFromFile ( historyFiles [ fileIndex ] )	141:20:4204:4248	2966089	0	True				
ANR	2966189	CallExpression	readHistoryFromFile ( historyFiles [ fileIndex ] )		2966089	0					
ANR	2966190	Callee	readHistoryFromFile		2966089	0					
ANR	2966191	Identifier	readHistoryFromFile		2966089	0					
ANR	2966192	ArgumentList	historyFiles [ fileIndex ]		2966089	1					
ANR	2966193	Argument	historyFiles [ fileIndex ]		2966089	0					
ANR	2966194	ArrayIndexing	historyFiles [ fileIndex ]		2966089	0					
ANR	2966195	Identifier	historyFiles		2966089	0					
ANR	2966196	Identifier	fileIndex		2966089	1					
ANR	2966197	ExpressionStatement	free ( historyFiles [ fileIndex ] )	142:20:4270:4299	2966089	1	True				
ANR	2966198	CallExpression	free ( historyFiles [ fileIndex ] )		2966089	0					
ANR	2966199	Callee	free		2966089	0					
ANR	2966200	Identifier	free		2966089	0					
ANR	2966201	ArgumentList	historyFiles [ fileIndex ]		2966089	1					
ANR	2966202	Argument	historyFiles [ fileIndex ]		2966089	0					
ANR	2966203	ArrayIndexing	historyFiles [ fileIndex ]		2966089	0					
ANR	2966204	Identifier	historyFiles		2966089	0					
ANR	2966205	Identifier	fileIndex		2966089	1					
ANR	2966206	ExpressionStatement	free ( historyFiles )	146:2:4345:4363	2966089	4	True				
ANR	2966207	CallExpression	free ( historyFiles )		2966089	0					
ANR	2966208	Callee	free		2966089	0					
ANR	2966209	Identifier	free		2966089	0					
ANR	2966210	ArgumentList	historyFiles		2966089	1					
ANR	2966211	Argument	historyFiles		2966089	0					
ANR	2966212	Identifier	historyFiles		2966089	0					
ANR	2966213	ReturnStatement	return ;	148:4:4375:4381	2966089	1	True				
ANR	2966214	ReturnType	static void		2966089	1					
ANR	2966215	Identifier	readHistoryFromFiles		2966089	2					
ANR	2966216	ParameterList	char * JobHistoryFileName		2966089	3					
ANR	2966217	Parameter	char * JobHistoryFileName	118:33:3235:3258	2966089	0	True				
ANR	2966218	ParameterType	char *		2966089	0					
ANR	2966219	Identifier	JobHistoryFileName		2966089	1					
ANR	2966220	CFGEntryNode	ENTRY		2966089		True				
ANR	2966221	CFGExitNode	EXIT		2966089		True				
ANR	2966222	Symbol	* historyFiles		2966089						
ANR	2966223	Symbol	historyFiles		2966089						
ANR	2966224	Symbol	fileIndex		2966089						
ANR	2966225	Symbol	* fileIndex		2966089						
ANR	2966226	Symbol	JobHistoryFileName		2966089						
ANR	2966227	Symbol	findHistoryFiles		2966089						
ANR	2966228	Symbol	numHistoryFiles		2966089						
ANR	2966229	Symbol	& numHistoryFiles		2966089						
ANR	2966230	Symbol	backwards		2966089						
ANR	2966231	Function	findHistoryFiles	154:0:4554:6721							
ANR	2966232	FunctionDef	findHistoryFiles (int * numHistoryFiles)		2966231	0					
ANR	2966233	CompoundStatement		155:0:4607:6721	2966231	0					
ANR	2966234	IdentifierDeclStatement	int fileIndex ;	156:4:4613:4627	2966231	0	True				
ANR	2966235	IdentifierDecl	fileIndex		2966231	0					
ANR	2966236	IdentifierDeclType	int		2966231	0					
ANR	2966237	Identifier	fileIndex		2966231	1					
ANR	2966238	IdentifierDeclStatement	char * * historyFiles = NULL ;	157:4:4633:4659	2966231	1	True				
ANR	2966239	IdentifierDecl	* * historyFiles = NULL		2966231	0					
ANR	2966240	IdentifierDeclType	char * *		2966231	0					
ANR	2966241	Identifier	historyFiles		2966231	1					
ANR	2966242	AssignmentExpression	* * historyFiles = NULL		2966231	2		=			
ANR	2966243	Identifier	NULL		2966231	0					
ANR	2966244	Identifier	NULL		2966231	1					
ANR	2966245	IdentifierDeclStatement	char * historyDir ;	158:4:4665:4681	2966231	2	True				
ANR	2966246	IdentifierDecl	* historyDir		2966231	0					
ANR	2966247	IdentifierDeclType	char *		2966231	0					
ANR	2966248	Identifier	historyDir		2966231	1					
ANR	2966249	ExpressionStatement	"BaseJobHistoryFileName = param ( ""HISTORY"" )"	160:4:4688:4729	2966231	3	True				
ANR	2966250	AssignmentExpression	"BaseJobHistoryFileName = param ( ""HISTORY"" )"		2966231	0		=			
ANR	2966251	Identifier	BaseJobHistoryFileName		2966231	0					
ANR	2966252	CallExpression	"param ( ""HISTORY"" )"		2966231	1					
ANR	2966253	Callee	param		2966231	0					
ANR	2966254	Identifier	param		2966231	0					
ANR	2966255	ArgumentList	"""HISTORY"""		2966231	1					
ANR	2966256	Argument	"""HISTORY"""		2966231	0					
ANR	2966257	PrimaryExpression	"""HISTORY"""		2966231	0					
ANR	2966258	IfStatement	if ( BaseJobHistoryFileName == NULL )		2966231	4					
ANR	2966259	Condition	BaseJobHistoryFileName == NULL	161:6:4737:4766	2966231	0	True				
ANR	2966260	EqualityExpression	BaseJobHistoryFileName == NULL		2966231	0		==			
ANR	2966261	Identifier	BaseJobHistoryFileName		2966231	0					
ANR	2966262	Identifier	NULL		2966231	1					
ANR	2966263	CompoundStatement		7:39:162:162	2966231	1					
ANR	2966264	ExpressionStatement	"fprintf ( stderr , ""Error: No history file is defined\\n"" )"	162:2:4774:4829	2966231	0	True				
ANR	2966265	CallExpression	"fprintf ( stderr , ""Error: No history file is defined\\n"" )"		2966231	0					
ANR	2966266	Callee	fprintf		2966231	0					
ANR	2966267	Identifier	fprintf		2966231	0					
ANR	2966268	ArgumentList	stderr		2966231	1					
ANR	2966269	Argument	stderr		2966231	0					
ANR	2966270	Identifier	stderr		2966231	0					
ANR	2966271	Argument	"""Error: No history file is defined\\n"""		2966231	1					
ANR	2966272	PrimaryExpression	"""Error: No history file is defined\\n"""		2966231	0					
ANR	2966273	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	163:2:4833:4854	2966231	1	True				
ANR	2966274	CallExpression	"fprintf ( stderr , ""\\n"" )"		2966231	0					
ANR	2966275	Callee	fprintf		2966231	0					
ANR	2966276	Identifier	fprintf		2966231	0					
ANR	2966277	ArgumentList	stderr		2966231	1					
ANR	2966278	Argument	stderr		2966231	0					
ANR	2966279	Identifier	stderr		2966231	0					
ANR	2966280	Argument	"""\\n"""		2966231	1					
ANR	2966281	PrimaryExpression	"""\\n"""		2966231	0					
ANR	2966282	Statement	print_wrapped_text	164:2:4858:4875	2966231	2	True				
ANR	2966283	Statement	(	164:20:4876:4876	2966231	3	True				
ANR	2966284	Statement	"""Extra Info: """	164:21:4877:4890	2966231	4	True				
ANR	2966285	Statement	"""The variable HISTORY is not defined in """	165:9:4902:4942	2966231	5	True				
ANR	2966286	Statement	"""your config file. If you want Condor to """	166:9:4953:4994	2966231	6	True				
ANR	2966287	Statement	"""keep a history of past jobs, you must """	167:9:5005:5044	2966231	7	True				
ANR	2966288	Statement	"""define HISTORY in your config file"""	168:9:5055:5090	2966231	8	True				
ANR	2966289	Statement	","	168:45:5091:5091	2966231	9	True				
ANR	2966290	Statement	stderr	168:47:5093:5098	2966231	10	True				
ANR	2966291	Statement	)	168:54:5100:5100	2966231	11	True				
ANR	2966292	ExpressionStatement		168:55:5101:5101	2966231	12	True				
ANR	2966293	ExpressionStatement	exit ( 1 )	170:2:5106:5115	2966231	13	True				
ANR	2966294	CallExpression	exit ( 1 )		2966231	0					
ANR	2966295	Callee	exit		2966231	0					
ANR	2966296	Identifier	exit		2966231	0					
ANR	2966297	ArgumentList	1		2966231	1					
ANR	2966298	Argument	1		2966231	0					
ANR	2966299	PrimaryExpression	1		2966231	0					
ANR	2966300	ExpressionStatement	historyDir = condor_dirname ( BaseJobHistoryFileName )	172:4:5128:5179	2966231	5	True				
ANR	2966301	AssignmentExpression	historyDir = condor_dirname ( BaseJobHistoryFileName )		2966231	0		=			
ANR	2966302	Identifier	historyDir		2966231	0					
ANR	2966303	CallExpression	condor_dirname ( BaseJobHistoryFileName )		2966231	1					
ANR	2966304	Callee	condor_dirname		2966231	0					
ANR	2966305	Identifier	condor_dirname		2966231	0					
ANR	2966306	ArgumentList	BaseJobHistoryFileName		2966231	1					
ANR	2966307	Argument	BaseJobHistoryFileName		2966231	0					
ANR	2966308	Identifier	BaseJobHistoryFileName		2966231	0					
ANR	2966309	ExpressionStatement	* numHistoryFiles = 0	174:4:5186:5206	2966231	6	True				
ANR	2966310	AssignmentExpression	* numHistoryFiles = 0		2966231	0		=			
ANR	2966311	UnaryOperationExpression	* numHistoryFiles		2966231	0					
ANR	2966312	UnaryOperator	*		2966231	0					
ANR	2966313	Identifier	numHistoryFiles		2966231	1					
ANR	2966314	PrimaryExpression	0		2966231	1					
ANR	2966315	IfStatement	if ( historyDir != NULL )		2966231	7					
ANR	2966316	Condition	historyDir != NULL	175:8:5216:5233	2966231	0	True				
ANR	2966317	EqualityExpression	historyDir != NULL		2966231	0		!=			
ANR	2966318	Identifier	historyDir		2966231	0					
ANR	2966319	Identifier	NULL		2966231	1					
ANR	2966320	CompoundStatement		23:8:673:701	2966231	1					
ANR	2966321	IdentifierDeclStatement	Directory dir ( historyDir ) ;	176:8:5246:5271	2966231	0	True				
ANR	2966322	IdentifierDecl	dir ( historyDir )		2966231	0					
ANR	2966323	IdentifierDeclType	Directory		2966231	0					
ANR	2966324	Identifier	dir		2966231	1					
ANR	2966325	Identifier	historyDir		2966231	2					
ANR	2966326	IdentifierDeclStatement	const char * current_filename ;	177:8:5281:5309	2966231	1	True				
ANR	2966327	IdentifierDecl	* current_filename		2966231	0					
ANR	2966328	IdentifierDeclType	const char *		2966231	0					
ANR	2966329	Identifier	current_filename		2966231	1					
ANR	2966330	ForStatement	for ( current_filename = dir . Next ( ) ; current_filename != NULL ; current_filename = dir . Next ( ) )		2966231	2					
ANR	2966331	ForInit	current_filename = dir . Next ( ) ;	180:14:5403:5432	2966231	0	True				
ANR	2966332	AssignmentExpression	current_filename = dir . Next ( )		2966231	0		=			
ANR	2966333	Identifier	current_filename		2966231	0					
ANR	2966334	CallExpression	dir . Next ( )		2966231	1					
ANR	2966335	Callee	dir . Next		2966231	0					
ANR	2966336	MemberAccess	dir . Next		2966231	0					
ANR	2966337	Identifier	dir		2966231	0					
ANR	2966338	Identifier	Next		2966231	1					
ANR	2966339	ArgumentList			2966231	1					
ANR	2966340	Condition	current_filename != NULL	181:13:5448:5471	2966231	1	True				
ANR	2966341	EqualityExpression	current_filename != NULL		2966231	0		!=			
ANR	2966342	Identifier	current_filename		2966231	0					
ANR	2966343	Identifier	NULL		2966231	1					
ANR	2966344	AssignmentExpression	current_filename = dir . Next ( )	182:13:5488:5516	2966231	2	True	=			
ANR	2966345	Identifier	current_filename		2966231	0					
ANR	2966346	CallExpression	dir . Next ( )		2966231	1					
ANR	2966347	Callee	dir . Next		2966231	0					
ANR	2966348	MemberAccess	dir . Next		2966231	0					
ANR	2966349	Identifier	dir		2966231	0					
ANR	2966350	Identifier	Next		2966231	1					
ANR	2966351	ArgumentList			2966231	1					
ANR	2966352	CompoundStatement		28:44:911:911	2966231	3					
ANR	2966353	IfStatement	"if ( isHistoryBackup ( current_filename , NULL ) )"		2966231	0					
ANR	2966354	Condition	"isHistoryBackup ( current_filename , NULL )"	184:16:5550:5588	2966231	0	True				
ANR	2966355	CallExpression	"isHistoryBackup ( current_filename , NULL )"		2966231	0					
ANR	2966356	Callee	isHistoryBackup		2966231	0					
ANR	2966357	Identifier	isHistoryBackup		2966231	0					
ANR	2966358	ArgumentList	current_filename		2966231	1					
ANR	2966359	Argument	current_filename		2966231	0					
ANR	2966360	Identifier	current_filename		2966231	0					
ANR	2966361	Argument	NULL		2966231	1					
ANR	2966362	Identifier	NULL		2966231	0					
ANR	2966363	CompoundStatement		30:57:983:983	2966231	1					
ANR	2966364	ExpressionStatement	( * numHistoryFiles ) ++	185:16:5609:5629	2966231	0	True				
ANR	2966365	PostIncDecOperationExpression	( * numHistoryFiles ) ++		2966231	0					
ANR	2966366	UnaryOperationExpression	* numHistoryFiles		2966231	0					
ANR	2966367	UnaryOperator	*		2966231	0					
ANR	2966368	Identifier	numHistoryFiles		2966231	1					
ANR	2966369	IncDec	++		2966231	1					
ANR	2966370	ExpressionStatement	( * numHistoryFiles ) ++	190:8:5712:5732	2966231	3	True				
ANR	2966371	PostIncDecOperationExpression	( * numHistoryFiles ) ++		2966231	0					
ANR	2966372	UnaryOperationExpression	* numHistoryFiles		2966231	0					
ANR	2966373	UnaryOperator	*		2966231	0					
ANR	2966374	Identifier	numHistoryFiles		2966231	1					
ANR	2966375	IncDec	++		2966231	1					
ANR	2966376	ExpressionStatement	historyFiles = ( char * * ) malloc ( sizeof ( char * ) * ( * numHistoryFiles ) )	193:8:5783:5850	2966231	4	True				
ANR	2966377	AssignmentExpression	historyFiles = ( char * * ) malloc ( sizeof ( char * ) * ( * numHistoryFiles ) )		2966231	0		=			
ANR	2966378	Identifier	historyFiles		2966231	0					
ANR	2966379	CastExpression	( char * * ) malloc ( sizeof ( char * ) * ( * numHistoryFiles ) )		2966231	1					
ANR	2966380	CastTarget	char * *		2966231	0					
ANR	2966381	CallExpression	malloc ( sizeof ( char * ) * ( * numHistoryFiles ) )		2966231	1					
ANR	2966382	Callee	malloc		2966231	0					
ANR	2966383	Identifier	malloc		2966231	0					
ANR	2966384	ArgumentList	sizeof ( char * ) * ( * numHistoryFiles )		2966231	1					
ANR	2966385	Argument	sizeof ( char * ) * ( * numHistoryFiles )		2966231	0					
ANR	2966386	MultiplicativeExpression	sizeof ( char * ) * ( * numHistoryFiles )		2966231	0		*			
ANR	2966387	SizeofExpression	sizeof ( char * )		2966231	0					
ANR	2966388	Sizeof	sizeof		2966231	0					
ANR	2966389	SizeofOperand	char *		2966231	1					
ANR	2966390	UnaryOperationExpression	* numHistoryFiles		2966231	1					
ANR	2966391	UnaryOperator	*		2966231	0					
ANR	2966392	Identifier	numHistoryFiles		2966231	1					
ANR	2966393	ExpressionStatement	dir . Rewind ( )	197:8:5971:5983	2966231	5	True				
ANR	2966394	CallExpression	dir . Rewind ( )		2966231	0					
ANR	2966395	Callee	dir . Rewind		2966231	0					
ANR	2966396	MemberAccess	dir . Rewind		2966231	0					
ANR	2966397	Identifier	dir		2966231	0					
ANR	2966398	Identifier	Rewind		2966231	1					
ANR	2966399	ArgumentList			2966231	1					
ANR	2966400	ForStatement	"for ( fileIndex = 0 , current_filename = dir . Next ( ) ; current_filename != NULL ; current_filename = dir . Next ( ) )"		2966231	6					
ANR	2966401	ForInit	"fileIndex = 0 , current_filename = dir . Next ( ) ;"	198:13:5998:6042	2966231	0	True				
ANR	2966402	Expression	"fileIndex = 0 , current_filename = dir . Next ( )"		2966231	0					
ANR	2966403	AssignmentExpression	fileIndex = 0		2966231	0		=			
ANR	2966404	Identifier	fileIndex		2966231	0					
ANR	2966405	PrimaryExpression	0		2966231	1					
ANR	2966406	AssignmentExpression	current_filename = dir . Next ( )		2966231	1		=			
ANR	2966407	Identifier	current_filename		2966231	0					
ANR	2966408	CallExpression	dir . Next ( )		2966231	1					
ANR	2966409	Callee	dir . Next		2966231	0					
ANR	2966410	MemberAccess	dir . Next		2966231	0					
ANR	2966411	Identifier	dir		2966231	0					
ANR	2966412	Identifier	Next		2966231	1					
ANR	2966413	ArgumentList			2966231	1					
ANR	2966414	Condition	current_filename != NULL	199:13:6058:6081	2966231	1	True				
ANR	2966415	EqualityExpression	current_filename != NULL		2966231	0		!=			
ANR	2966416	Identifier	current_filename		2966231	0					
ANR	2966417	Identifier	NULL		2966231	1					
ANR	2966418	AssignmentExpression	current_filename = dir . Next ( )	200:13:6098:6126	2966231	2	True	=			
ANR	2966419	Identifier	current_filename		2966231	0					
ANR	2966420	CallExpression	dir . Next ( )		2966231	1					
ANR	2966421	Callee	dir . Next		2966231	0					
ANR	2966422	MemberAccess	dir . Next		2966231	0					
ANR	2966423	Identifier	dir		2966231	0					
ANR	2966424	Identifier	Next		2966231	1					
ANR	2966425	ArgumentList			2966231	1					
ANR	2966426	CompoundStatement		46:44:1521:1521	2966231	3					
ANR	2966427	IfStatement	"if ( isHistoryBackup ( current_filename , NULL ) )"		2966231	0					
ANR	2966428	Condition	"isHistoryBackup ( current_filename , NULL )"	202:16:6160:6198	2966231	0	True				
ANR	2966429	CallExpression	"isHistoryBackup ( current_filename , NULL )"		2966231	0					
ANR	2966430	Callee	isHistoryBackup		2966231	0					
ANR	2966431	Identifier	isHistoryBackup		2966231	0					
ANR	2966432	ArgumentList	current_filename		2966231	1					
ANR	2966433	Argument	current_filename		2966231	0					
ANR	2966434	Identifier	current_filename		2966231	0					
ANR	2966435	Argument	NULL		2966231	1					
ANR	2966436	Identifier	NULL		2966231	0					
ANR	2966437	CompoundStatement		48:57:1593:1593	2966231	1					
ANR	2966438	ExpressionStatement	historyFiles [ fileIndex ++ ] = strdup ( dir . GetFullPath ( ) )	203:16:6219:6272	2966231	0	True				
ANR	2966439	AssignmentExpression	historyFiles [ fileIndex ++ ] = strdup ( dir . GetFullPath ( ) )		2966231	0		=			
ANR	2966440	ArrayIndexing	historyFiles [ fileIndex ++ ]		2966231	0					
ANR	2966441	Identifier	historyFiles		2966231	0					
ANR	2966442	PostIncDecOperationExpression	fileIndex ++		2966231	1					
ANR	2966443	Identifier	fileIndex		2966231	0					
ANR	2966444	IncDec	++		2966231	1					
ANR	2966445	CallExpression	strdup ( dir . GetFullPath ( ) )		2966231	1					
ANR	2966446	Callee	strdup		2966231	0					
ANR	2966447	Identifier	strdup		2966231	0					
ANR	2966448	ArgumentList	dir . GetFullPath ( )		2966231	1					
ANR	2966449	Argument	dir . GetFullPath ( )		2966231	0					
ANR	2966450	CallExpression	dir . GetFullPath ( )		2966231	0					
ANR	2966451	Callee	dir . GetFullPath		2966231	0					
ANR	2966452	MemberAccess	dir . GetFullPath		2966231	0					
ANR	2966453	Identifier	dir		2966231	0					
ANR	2966454	Identifier	GetFullPath		2966231	1					
ANR	2966455	ArgumentList			2966231	1					
ANR	2966456	ExpressionStatement	historyFiles [ fileIndex ] = strdup ( BaseJobHistoryFileName )	206:8:6306:6362	2966231	7	True				
ANR	2966457	AssignmentExpression	historyFiles [ fileIndex ] = strdup ( BaseJobHistoryFileName )		2966231	0		=			
ANR	2966458	ArrayIndexing	historyFiles [ fileIndex ]		2966231	0					
ANR	2966459	Identifier	historyFiles		2966231	0					
ANR	2966460	Identifier	fileIndex		2966231	1					
ANR	2966461	CallExpression	strdup ( BaseJobHistoryFileName )		2966231	1					
ANR	2966462	Callee	strdup		2966231	0					
ANR	2966463	Identifier	strdup		2966231	0					
ANR	2966464	ArgumentList	BaseJobHistoryFileName		2966231	1					
ANR	2966465	Argument	BaseJobHistoryFileName		2966231	0					
ANR	2966466	Identifier	BaseJobHistoryFileName		2966231	0					
ANR	2966467	IfStatement	if ( ( * numHistoryFiles ) > 2 )		2966231	8					
ANR	2966468	Condition	( * numHistoryFiles ) > 2	208:12:6377:6398	2966231	0	True				
ANR	2966469	RelationalExpression	( * numHistoryFiles ) > 2		2966231	0		>			
ANR	2966470	UnaryOperationExpression	* numHistoryFiles		2966231	0					
ANR	2966471	UnaryOperator	*		2966231	0					
ANR	2966472	Identifier	numHistoryFiles		2966231	1					
ANR	2966473	PrimaryExpression	2		2966231	1					
ANR	2966474	CompoundStatement		54:36:1793:1793	2966231	1					
ANR	2966475	ExpressionStatement	"qsort ( historyFiles , ( * numHistoryFiles ) - 1 , sizeof ( char * ) , compareHistoryFilenames )"	211:12:6562:6643	2966231	0	True				
ANR	2966476	CallExpression	"qsort ( historyFiles , ( * numHistoryFiles ) - 1 , sizeof ( char * ) , compareHistoryFilenames )"		2966231	0					
ANR	2966477	Callee	qsort		2966231	0					
ANR	2966478	Identifier	qsort		2966231	0					
ANR	2966479	ArgumentList	historyFiles		2966231	1					
ANR	2966480	Argument	historyFiles		2966231	0					
ANR	2966481	Identifier	historyFiles		2966231	0					
ANR	2966482	Argument	( * numHistoryFiles ) - 1		2966231	1					
ANR	2966483	AdditiveExpression	( * numHistoryFiles ) - 1		2966231	0		-			
ANR	2966484	UnaryOperationExpression	* numHistoryFiles		2966231	0					
ANR	2966485	UnaryOperator	*		2966231	0					
ANR	2966486	Identifier	numHistoryFiles		2966231	1					
ANR	2966487	PrimaryExpression	1		2966231	1					
ANR	2966488	Argument	sizeof ( char * )		2966231	2					
ANR	2966489	SizeofExpression	sizeof ( char * )		2966231	0					
ANR	2966490	Sizeof	sizeof		2966231	0					
ANR	2966491	SizeofOperand	char *		2966231	1					
ANR	2966492	Argument	compareHistoryFilenames		2966231	3					
ANR	2966493	Identifier	compareHistoryFilenames		2966231	0					
ANR	2966494	ExpressionStatement	free ( historyDir )	214:8:6672:6688	2966231	9	True				
ANR	2966495	CallExpression	free ( historyDir )		2966231	0					
ANR	2966496	Callee	free		2966231	0					
ANR	2966497	Identifier	free		2966231	0					
ANR	2966498	ArgumentList	historyDir		2966231	1					
ANR	2966499	Argument	historyDir		2966231	0					
ANR	2966500	Identifier	historyDir		2966231	0					
ANR	2966501	ReturnStatement	return historyFiles ;	216:4:6700:6719	2966231	8	True				
ANR	2966502	Identifier	historyFiles		2966231	0					
ANR	2966503	ReturnType	static char * *		2966231	1					
ANR	2966504	Identifier	findHistoryFiles		2966231	2					
ANR	2966505	ParameterList	int * numHistoryFiles		2966231	3					
ANR	2966506	Parameter	int * numHistoryFiles	154:31:4585:4604	2966231	0	True				
ANR	2966507	ParameterType	int *		2966231	0					
ANR	2966508	Identifier	numHistoryFiles		2966231	1					
ANR	2966509	CFGEntryNode	ENTRY		2966231		True				
ANR	2966510	CFGExitNode	EXIT		2966231		True				
ANR	2966511	Symbol	malloc		2966231						
ANR	2966512	Symbol	NULL		2966231						
ANR	2966513	Symbol	fileIndex		2966231						
ANR	2966514	Symbol	historyFiles		2966231						
ANR	2966515	Symbol	current_filename		2966231						
ANR	2966516	Symbol	* fileIndex		2966231						
ANR	2966517	Symbol	numHistoryFiles		2966231						
ANR	2966518	Symbol	condor_dirname		2966231						
ANR	2966519	Symbol	* numHistoryFiles		2966231						
ANR	2966520	Symbol	BaseJobHistoryFileName		2966231						
ANR	2966521	Symbol	stderr		2966231						
ANR	2966522	Symbol	dir		2966231						
ANR	2966523	Symbol	dir . Next		2966231						
ANR	2966524	Symbol	isHistoryBackup		2966231						
ANR	2966525	Symbol	historyDir		2966231						
ANR	2966526	Symbol	dir . GetFullPath		2966231						
ANR	2966527	Symbol	* historyFiles		2966231						
ANR	2966528	Symbol	param		2966231						
ANR	2966529	Symbol	compareHistoryFilenames		2966231						
ANR	2966530	Symbol	strdup		2966231						
ANR	2966531	Function	isHistoryBackup	222:0:6875:8173							
ANR	2966532	FunctionDef	"isHistoryBackup (const char * fullFilename , time_t * backup_time)"		2966531	0					
ANR	2966533	CompoundStatement		223:0:6950:8173	2966531	0					
ANR	2966534	IdentifierDeclStatement	bool is_history_filename ;	224:4:6956:6986	2966531	0	True				
ANR	2966535	IdentifierDecl	is_history_filename		2966531	0					
ANR	2966536	IdentifierDeclType	bool		2966531	0					
ANR	2966537	Identifier	is_history_filename		2966531	1					
ANR	2966538	IdentifierDeclStatement	const char * filename ;	225:4:6992:7012	2966531	1	True				
ANR	2966539	IdentifierDecl	* filename		2966531	0					
ANR	2966540	IdentifierDeclType	const char *		2966531	0					
ANR	2966541	Identifier	filename		2966531	1					
ANR	2966542	IdentifierDeclStatement	const char * history_base ;	226:4:7018:7042	2966531	2	True				
ANR	2966543	IdentifierDecl	* history_base		2966531	0					
ANR	2966544	IdentifierDeclType	const char *		2966531	0					
ANR	2966545	Identifier	history_base		2966531	1					
ANR	2966546	IdentifierDeclStatement	int history_base_length ;	227:4:7048:7078	2966531	3	True				
ANR	2966547	IdentifierDecl	history_base_length		2966531	0					
ANR	2966548	IdentifierDeclType	int		2966531	0					
ANR	2966549	Identifier	history_base_length		2966531	1					
ANR	2966550	IfStatement	if ( backup_time != NULL )		2966531	4					
ANR	2966551	Condition	backup_time != NULL	229:8:7089:7107	2966531	0	True				
ANR	2966552	EqualityExpression	backup_time != NULL		2966531	0		!=			
ANR	2966553	Identifier	backup_time		2966531	0					
ANR	2966554	Identifier	NULL		2966531	1					
ANR	2966555	CompoundStatement		7:29:159:159	2966531	1					
ANR	2966556	ExpressionStatement	* backup_time = - 1	230:8:7120:7137	2966531	0	True				
ANR	2966557	AssignmentExpression	* backup_time = - 1		2966531	0		=			
ANR	2966558	UnaryOperationExpression	* backup_time		2966531	0					
ANR	2966559	UnaryOperator	*		2966531	0					
ANR	2966560	Identifier	backup_time		2966531	1					
ANR	2966561	UnaryOperationExpression	- 1		2966531	1					
ANR	2966562	UnaryOperator	-		2966531	0					
ANR	2966563	PrimaryExpression	1		2966531	1					
ANR	2966564	ExpressionStatement	is_history_filename = false	233:4:7154:7181	2966531	5	True				
ANR	2966565	AssignmentExpression	is_history_filename = false		2966531	0		=			
ANR	2966566	Identifier	is_history_filename		2966531	0					
ANR	2966567	Identifier	false		2966531	1					
ANR	2966568	ExpressionStatement	history_base = condor_basename ( BaseJobHistoryFileName )	234:4:7187:7248	2966531	6	True				
ANR	2966569	AssignmentExpression	history_base = condor_basename ( BaseJobHistoryFileName )		2966531	0		=			
ANR	2966570	Identifier	history_base		2966531	0					
ANR	2966571	CallExpression	condor_basename ( BaseJobHistoryFileName )		2966531	1					
ANR	2966572	Callee	condor_basename		2966531	0					
ANR	2966573	Identifier	condor_basename		2966531	0					
ANR	2966574	ArgumentList	BaseJobHistoryFileName		2966531	1					
ANR	2966575	Argument	BaseJobHistoryFileName		2966531	0					
ANR	2966576	Identifier	BaseJobHistoryFileName		2966531	0					
ANR	2966577	ExpressionStatement	history_base_length = strlen ( history_base )	235:4:7254:7296	2966531	7	True				
ANR	2966578	AssignmentExpression	history_base_length = strlen ( history_base )		2966531	0		=			
ANR	2966579	Identifier	history_base_length		2966531	0					
ANR	2966580	CallExpression	strlen ( history_base )		2966531	1					
ANR	2966581	Callee	strlen		2966531	0					
ANR	2966582	Identifier	strlen		2966531	0					
ANR	2966583	ArgumentList	history_base		2966531	1					
ANR	2966584	Argument	history_base		2966531	0					
ANR	2966585	Identifier	history_base		2966531	0					
ANR	2966586	ExpressionStatement	filename = condor_basename ( fullFilename )	236:4:7302:7353	2966531	8	True				
ANR	2966587	AssignmentExpression	filename = condor_basename ( fullFilename )		2966531	0		=			
ANR	2966588	Identifier	filename		2966531	0					
ANR	2966589	CallExpression	condor_basename ( fullFilename )		2966531	1					
ANR	2966590	Callee	condor_basename		2966531	0					
ANR	2966591	Identifier	condor_basename		2966531	0					
ANR	2966592	ArgumentList	fullFilename		2966531	1					
ANR	2966593	Argument	fullFilename		2966531	0					
ANR	2966594	Identifier	fullFilename		2966531	0					
ANR	2966595	IfStatement	"if ( ! strncmp ( filename , history_base , history_base_length ) && filename [ history_base_length ] == '.' )"		2966531	9					
ANR	2966596	Condition	"! strncmp ( filename , history_base , history_base_length ) && filename [ history_base_length ] == '.'"	238:11:7367:7467	2966531	0	True				
ANR	2966597	AndExpression	"! strncmp ( filename , history_base , history_base_length ) && filename [ history_base_length ] == '.'"		2966531	0		&&			
ANR	2966598	UnaryOperationExpression	"! strncmp ( filename , history_base , history_base_length )"		2966531	0					
ANR	2966599	UnaryOperator	!		2966531	0					
ANR	2966600	CallExpression	"strncmp ( filename , history_base , history_base_length )"		2966531	1					
ANR	2966601	Callee	strncmp		2966531	0					
ANR	2966602	Identifier	strncmp		2966531	0					
ANR	2966603	ArgumentList	filename		2966531	1					
ANR	2966604	Argument	filename		2966531	0					
ANR	2966605	Identifier	filename		2966531	0					
ANR	2966606	Argument	history_base		2966531	1					
ANR	2966607	Identifier	history_base		2966531	0					
ANR	2966608	Argument	history_base_length		2966531	2					
ANR	2966609	Identifier	history_base_length		2966531	0					
ANR	2966610	EqualityExpression	filename [ history_base_length ] == '.'		2966531	1		==			
ANR	2966611	ArrayIndexing	filename [ history_base_length ]		2966531	0					
ANR	2966612	Identifier	filename		2966531	0					
ANR	2966613	Identifier	history_base_length		2966531	1					
ANR	2966614	PrimaryExpression	'.'		2966531	1					
ANR	2966615	CompoundStatement		21:8:646:657	2966531	1					
ANR	2966616	IdentifierDeclStatement	struct tm file_time ;	242:8:7568:7587	2966531	0	True				
ANR	2966617	IdentifierDecl	file_time		2966531	0					
ANR	2966618	IdentifierDeclType	struct tm		2966531	0					
ANR	2966619	Identifier	file_time		2966531	1					
ANR	2966620	IdentifierDeclStatement	bool is_utc ;	243:8:7597:7608	2966531	1	True				
ANR	2966621	IdentifierDecl	is_utc		2966531	0					
ANR	2966622	IdentifierDeclType	bool		2966531	0					
ANR	2966623	Identifier	is_utc		2966531	1					
ANR	2966624	ExpressionStatement	"iso8601_to_time ( filename + history_base_length + 1 , & file_time , & is_utc )"	245:8:7619:7691	2966531	2	True				
ANR	2966625	CallExpression	"iso8601_to_time ( filename + history_base_length + 1 , & file_time , & is_utc )"		2966531	0					
ANR	2966626	Callee	iso8601_to_time		2966531	0					
ANR	2966627	Identifier	iso8601_to_time		2966531	0					
ANR	2966628	ArgumentList	filename + history_base_length + 1		2966531	1					
ANR	2966629	Argument	filename + history_base_length + 1		2966531	0					
ANR	2966630	AdditiveExpression	filename + history_base_length + 1		2966531	0		+			
ANR	2966631	Identifier	filename		2966531	0					
ANR	2966632	AdditiveExpression	history_base_length + 1		2966531	1		+			
ANR	2966633	Identifier	history_base_length		2966531	0					
ANR	2966634	PrimaryExpression	1		2966531	1					
ANR	2966635	Argument	& file_time		2966531	1					
ANR	2966636	UnaryOperationExpression	& file_time		2966531	0					
ANR	2966637	UnaryOperator	&		2966531	0					
ANR	2966638	Identifier	file_time		2966531	1					
ANR	2966639	Argument	& is_utc		2966531	2					
ANR	2966640	UnaryOperationExpression	& is_utc		2966531	0					
ANR	2966641	UnaryOperator	&		2966531	0					
ANR	2966642	Identifier	is_utc		2966531	1					
ANR	2966643	IfStatement	if ( file_time . tm_year != - 1 && file_time . tm_mon != - 1 && file_time . tm_mday != - 1 && file_time . tm_hour != - 1 && file_time . tm_min != - 1 && file_time . tm_sec != - 1 && ! is_utc )		2966531	3					
ANR	2966644	Condition	file_time . tm_year != - 1 && file_time . tm_mon != - 1 && file_time . tm_mday != - 1 && file_time . tm_hour != - 1 && file_time . tm_min != - 1 && file_time . tm_sec != - 1 && ! is_utc	246:15:7708:7911	2966531	0	True				
ANR	2966645	AndExpression	file_time . tm_year != - 1 && file_time . tm_mon != - 1 && file_time . tm_mday != - 1 && file_time . tm_hour != - 1 && file_time . tm_min != - 1 && file_time . tm_sec != - 1 && ! is_utc		2966531	0		&&			
ANR	2966646	EqualityExpression	file_time . tm_year != - 1		2966531	0		!=			
ANR	2966647	MemberAccess	file_time . tm_year		2966531	0					
ANR	2966648	Identifier	file_time		2966531	0					
ANR	2966649	Identifier	tm_year		2966531	1					
ANR	2966650	UnaryOperationExpression	- 1		2966531	1					
ANR	2966651	UnaryOperator	-		2966531	0					
ANR	2966652	PrimaryExpression	1		2966531	1					
ANR	2966653	AndExpression	file_time . tm_mon != - 1 && file_time . tm_mday != - 1 && file_time . tm_hour != - 1 && file_time . tm_min != - 1 && file_time . tm_sec != - 1 && ! is_utc		2966531	1		&&			
ANR	2966654	EqualityExpression	file_time . tm_mon != - 1		2966531	0		!=			
ANR	2966655	MemberAccess	file_time . tm_mon		2966531	0					
ANR	2966656	Identifier	file_time		2966531	0					
ANR	2966657	Identifier	tm_mon		2966531	1					
ANR	2966658	UnaryOperationExpression	- 1		2966531	1					
ANR	2966659	UnaryOperator	-		2966531	0					
ANR	2966660	PrimaryExpression	1		2966531	1					
ANR	2966661	AndExpression	file_time . tm_mday != - 1 && file_time . tm_hour != - 1 && file_time . tm_min != - 1 && file_time . tm_sec != - 1 && ! is_utc		2966531	1		&&			
ANR	2966662	EqualityExpression	file_time . tm_mday != - 1		2966531	0		!=			
ANR	2966663	MemberAccess	file_time . tm_mday		2966531	0					
ANR	2966664	Identifier	file_time		2966531	0					
ANR	2966665	Identifier	tm_mday		2966531	1					
ANR	2966666	UnaryOperationExpression	- 1		2966531	1					
ANR	2966667	UnaryOperator	-		2966531	0					
ANR	2966668	PrimaryExpression	1		2966531	1					
ANR	2966669	AndExpression	file_time . tm_hour != - 1 && file_time . tm_min != - 1 && file_time . tm_sec != - 1 && ! is_utc		2966531	1		&&			
ANR	2966670	EqualityExpression	file_time . tm_hour != - 1		2966531	0		!=			
ANR	2966671	MemberAccess	file_time . tm_hour		2966531	0					
ANR	2966672	Identifier	file_time		2966531	0					
ANR	2966673	Identifier	tm_hour		2966531	1					
ANR	2966674	UnaryOperationExpression	- 1		2966531	1					
ANR	2966675	UnaryOperator	-		2966531	0					
ANR	2966676	PrimaryExpression	1		2966531	1					
ANR	2966677	AndExpression	file_time . tm_min != - 1 && file_time . tm_sec != - 1 && ! is_utc		2966531	1		&&			
ANR	2966678	EqualityExpression	file_time . tm_min != - 1		2966531	0		!=			
ANR	2966679	MemberAccess	file_time . tm_min		2966531	0					
ANR	2966680	Identifier	file_time		2966531	0					
ANR	2966681	Identifier	tm_min		2966531	1					
ANR	2966682	UnaryOperationExpression	- 1		2966531	1					
ANR	2966683	UnaryOperator	-		2966531	0					
ANR	2966684	PrimaryExpression	1		2966531	1					
ANR	2966685	AndExpression	file_time . tm_sec != - 1 && ! is_utc		2966531	1		&&			
ANR	2966686	EqualityExpression	file_time . tm_sec != - 1		2966531	0		!=			
ANR	2966687	MemberAccess	file_time . tm_sec		2966531	0					
ANR	2966688	Identifier	file_time		2966531	0					
ANR	2966689	Identifier	tm_sec		2966531	1					
ANR	2966690	UnaryOperationExpression	- 1		2966531	1					
ANR	2966691	UnaryOperator	-		2966531	0					
ANR	2966692	PrimaryExpression	1		2966531	1					
ANR	2966693	UnaryOperationExpression	! is_utc		2966531	1					
ANR	2966694	UnaryOperator	!		2966531	0					
ANR	2966695	Identifier	is_utc		2966531	1					
ANR	2966696	CompoundStatement		27:24:963:963	2966531	1					
ANR	2966697	ExpressionStatement	is_history_filename = true	251:12:7992:8018	2966531	0	True				
ANR	2966698	AssignmentExpression	is_history_filename = true		2966531	0		=			
ANR	2966699	Identifier	is_history_filename		2966531	0					
ANR	2966700	Identifier	true		2966531	1					
ANR	2966701	IfStatement	if ( backup_time != NULL )		2966531	1					
ANR	2966702	Condition	backup_time != NULL	252:16:8036:8054	2966531	0	True				
ANR	2966703	EqualityExpression	backup_time != NULL		2966531	0		!=			
ANR	2966704	Identifier	backup_time		2966531	0					
ANR	2966705	Identifier	NULL		2966531	1					
ANR	2966706	CompoundStatement		30:37:1106:1106	2966531	1					
ANR	2966707	ExpressionStatement	* backup_time = mktime ( & file_time )	253:16:8075:8108	2966531	0	True				
ANR	2966708	AssignmentExpression	* backup_time = mktime ( & file_time )		2966531	0		=			
ANR	2966709	UnaryOperationExpression	* backup_time		2966531	0					
ANR	2966710	UnaryOperator	*		2966531	0					
ANR	2966711	Identifier	backup_time		2966531	1					
ANR	2966712	CallExpression	mktime ( & file_time )		2966531	1					
ANR	2966713	Callee	mktime		2966531	0					
ANR	2966714	Identifier	mktime		2966531	0					
ANR	2966715	ArgumentList	& file_time		2966531	1					
ANR	2966716	Argument	& file_time		2966531	0					
ANR	2966717	UnaryOperationExpression	& file_time		2966531	0					
ANR	2966718	UnaryOperator	&		2966531	0					
ANR	2966719	Identifier	file_time		2966531	1					
ANR	2966720	ReturnStatement	return is_history_filename ;	258:4:8145:8171	2966531	10	True				
ANR	2966721	Identifier	is_history_filename		2966531	0					
ANR	2966722	ReturnType	static bool		2966531	1					
ANR	2966723	Identifier	isHistoryBackup		2966531	2					
ANR	2966724	ParameterList	"const char * fullFilename , time_t * backup_time"		2966531	3					
ANR	2966725	Parameter	const char * fullFilename	222:28:6903:6926	2966531	0	True				
ANR	2966726	ParameterType	const char *		2966531	0					
ANR	2966727	Identifier	fullFilename		2966531	1					
ANR	2966728	Parameter	time_t * backup_time	222:54:6929:6947	2966531	1	True				
ANR	2966729	ParameterType	time_t *		2966531	0					
ANR	2966730	Identifier	backup_time		2966531	1					
ANR	2966731	CFGEntryNode	ENTRY		2966531		True				
ANR	2966732	CFGExitNode	EXIT		2966531		True				
ANR	2966733	Symbol	fullFilename		2966531						
ANR	2966734	Symbol	history_base_length		2966531						
ANR	2966735	Symbol	* backup_time		2966531						
ANR	2966736	Symbol	* history_base_length		2966531						
ANR	2966737	Symbol	strlen		2966531						
ANR	2966738	Symbol	strncmp		2966531						
ANR	2966739	Symbol	backup_time		2966531						
ANR	2966740	Symbol	history_base		2966531						
ANR	2966741	Symbol	file_time . tm_sec		2966531						
ANR	2966742	Symbol	file_time . tm_min		2966531						
ANR	2966743	Symbol	file_time . tm_hour		2966531						
ANR	2966744	Symbol	file_time . tm_mon		2966531						
ANR	2966745	Symbol	& file_time		2966531						
ANR	2966746	Symbol	is_utc		2966531						
ANR	2966747	Symbol	NULL		2966531						
ANR	2966748	Symbol	is_history_filename		2966531						
ANR	2966749	Symbol	file_time . tm_mday		2966531						
ANR	2966750	Symbol	false		2966531						
ANR	2966751	Symbol	& is_utc		2966531						
ANR	2966752	Symbol	BaseJobHistoryFileName		2966531						
ANR	2966753	Symbol	mktime		2966531						
ANR	2966754	Symbol	filename		2966531						
ANR	2966755	Symbol	* filename		2966531						
ANR	2966756	Symbol	true		2966531						
ANR	2966757	Symbol	file_time		2966531						
ANR	2966758	Symbol	file_time . tm_year		2966531						
ANR	2966759	Symbol	condor_basename		2966531						
ANR	2966760	Function	compareHistoryFilenames	262:0:8239:8468							
ANR	2966761	FunctionDef	"compareHistoryFilenames (const void * item1 , const void * item2)"		2966760	0					
ANR	2966762	CompoundStatement		263:0:8312:8468	2966760	0					
ANR	2966763	IdentifierDeclStatement	"time_t time1 , time2 ;"	264:4:8318:8337	2966760	0	True				
ANR	2966764	IdentifierDecl	time1		2966760	0					
ANR	2966765	IdentifierDeclType	time_t		2966760	0					
ANR	2966766	Identifier	time1		2966760	1					
ANR	2966767	IdentifierDecl	time2		2966760	1					
ANR	2966768	IdentifierDeclType	time_t		2966760	0					
ANR	2966769	Identifier	time2		2966760	1					
ANR	2966770	ExpressionStatement	"isHistoryBackup ( ( const char * ) item1 , & time1 )"	266:4:8344:8389	2966760	1	True				
ANR	2966771	CallExpression	"isHistoryBackup ( ( const char * ) item1 , & time1 )"		2966760	0					
ANR	2966772	Callee	isHistoryBackup		2966760	0					
ANR	2966773	Identifier	isHistoryBackup		2966760	0					
ANR	2966774	ArgumentList	( const char * ) item1		2966760	1					
ANR	2966775	Argument	( const char * ) item1		2966760	0					
ANR	2966776	CastExpression	( const char * ) item1		2966760	0					
ANR	2966777	CastTarget	const char *		2966760	0					
ANR	2966778	Identifier	item1		2966760	1					
ANR	2966779	Argument	& time1		2966760	1					
ANR	2966780	UnaryOperationExpression	& time1		2966760	0					
ANR	2966781	UnaryOperator	&		2966760	0					
ANR	2966782	Identifier	time1		2966760	1					
ANR	2966783	ExpressionStatement	"isHistoryBackup ( ( const char * ) item2 , & time2 )"	267:4:8395:8440	2966760	2	True				
ANR	2966784	CallExpression	"isHistoryBackup ( ( const char * ) item2 , & time2 )"		2966760	0					
ANR	2966785	Callee	isHistoryBackup		2966760	0					
ANR	2966786	Identifier	isHistoryBackup		2966760	0					
ANR	2966787	ArgumentList	( const char * ) item2		2966760	1					
ANR	2966788	Argument	( const char * ) item2		2966760	0					
ANR	2966789	CastExpression	( const char * ) item2		2966760	0					
ANR	2966790	CastTarget	const char *		2966760	0					
ANR	2966791	Identifier	item2		2966760	1					
ANR	2966792	Argument	& time2		2966760	1					
ANR	2966793	UnaryOperationExpression	& time2		2966760	0					
ANR	2966794	UnaryOperator	&		2966760	0					
ANR	2966795	Identifier	time2		2966760	1					
ANR	2966796	ReturnStatement	return time1 - time2 ;	268:4:8446:8466	2966760	3	True				
ANR	2966797	AdditiveExpression	time1 - time2		2966760	0		-			
ANR	2966798	Identifier	time1		2966760	0					
ANR	2966799	Identifier	time2		2966760	1					
ANR	2966800	ReturnType	static int		2966760	1					
ANR	2966801	Identifier	compareHistoryFilenames		2966760	2					
ANR	2966802	ParameterList	"const void * item1 , const void * item2"		2966760	3					
ANR	2966803	Parameter	const void * item1	262:35:8274:8290	2966760	0	True				
ANR	2966804	ParameterType	const void *		2966760	0					
ANR	2966805	Identifier	item1		2966760	1					
ANR	2966806	Parameter	const void * item2	262:54:8293:8309	2966760	1	True				
ANR	2966807	ParameterType	const void *		2966760	0					
ANR	2966808	Identifier	item2		2966760	1					
ANR	2966809	CFGEntryNode	ENTRY		2966760		True				
ANR	2966810	CFGExitNode	EXIT		2966760		True				
ANR	2966811	Symbol	time1		2966760						
ANR	2966812	Symbol	& time2		2966760						
ANR	2966813	Symbol	time2		2966760						
ANR	2966814	Symbol	& time1		2966760						
ANR	2966815	Symbol	item2		2966760						
ANR	2966816	Symbol	item1		2966760						
ANR	2966817	Function	findLastDelimiter	274:0:8660:9704							
ANR	2966818	FunctionDef	"findLastDelimiter (FILE * fd , char * filename)"		2966817	0					
ANR	2966819	CompoundStatement		275:0:8716:9704	2966817	0					
ANR	2966820	IdentifierDeclStatement	int i ;	276:4:8722:8735	2966817	0	True				
ANR	2966821	IdentifierDecl	i		2966817	0					
ANR	2966822	IdentifierDeclType	int		2966817	0					
ANR	2966823	Identifier	i		2966817	1					
ANR	2966824	IdentifierDeclStatement	bool found ;	277:4:8741:8758	2966817	1	True				
ANR	2966825	IdentifierDecl	found		2966817	0					
ANR	2966826	IdentifierDeclType	bool		2966817	0					
ANR	2966827	Identifier	found		2966817	1					
ANR	2966828	IdentifierDeclStatement	"long seekOffset , lastOffset ;"	278:4:8764:8798	2966817	2	True				
ANR	2966829	IdentifierDecl	seekOffset		2966817	0					
ANR	2966830	IdentifierDeclType	long		2966817	0					
ANR	2966831	Identifier	seekOffset		2966817	1					
ANR	2966832	IdentifierDecl	lastOffset		2966817	1					
ANR	2966833	IdentifierDeclType	long		2966817	0					
ANR	2966834	Identifier	lastOffset		2966817	1					
ANR	2966835	IdentifierDeclStatement	MyString buf ;	279:4:8804:8819	2966817	3	True				
ANR	2966836	IdentifierDecl	buf		2966817	0					
ANR	2966837	IdentifierDeclType	MyString		2966817	0					
ANR	2966838	Identifier	buf		2966817	1					
ANR	2966839	IdentifierDeclStatement	struct stat st ;	280:4:8825:8839	2966817	4	True				
ANR	2966840	IdentifierDecl	st		2966817	0					
ANR	2966841	IdentifierDeclType	struct stat		2966817	0					
ANR	2966842	Identifier	st		2966817	1					
ANR	2966843	ExpressionStatement	"stat ( filename , & st )"	283:4:8869:8888	2966817	5	True				
ANR	2966844	CallExpression	"stat ( filename , & st )"		2966817	0					
ANR	2966845	Callee	stat		2966817	0					
ANR	2966846	Identifier	stat		2966817	0					
ANR	2966847	ArgumentList	filename		2966817	1					
ANR	2966848	Argument	filename		2966817	0					
ANR	2966849	Identifier	filename		2966817	0					
ANR	2966850	Argument	& st		2966817	1					
ANR	2966851	UnaryOperationExpression	& st		2966817	0					
ANR	2966852	UnaryOperator	&		2966817	0					
ANR	2966853	Identifier	st		2966817	1					
ANR	2966854	ExpressionStatement	found = false	285:4:8897:8910	2966817	6	True				
ANR	2966855	AssignmentExpression	found = false		2966817	0		=			
ANR	2966856	Identifier	found		2966817	0					
ANR	2966857	Identifier	false		2966817	1					
ANR	2966858	ExpressionStatement	i = 0	286:4:8916:8921	2966817	7	True				
ANR	2966859	AssignmentExpression	i = 0		2966817	0		=			
ANR	2966860	Identifier	i		2966817	0					
ANR	2966861	PrimaryExpression	0		2966817	1					
ANR	2966862	WhileStatement	while ( ! found )		2966817	8					
ANR	2966863	Condition	! found	287:11:8934:8939	2966817	0	True				
ANR	2966864	UnaryOperationExpression	! found		2966817	0					
ANR	2966865	UnaryOperator	!		2966817	0					
ANR	2966866	Identifier	found		2966817	1					
ANR	2966867	CompoundStatement		13:19:225:225	2966817	1					
ANR	2966868	ExpressionStatement	seekOffset = st . st_size - ( ++ i * 200 )	289:8:9011:9048	2966817	0	True				
ANR	2966869	AssignmentExpression	seekOffset = st . st_size - ( ++ i * 200 )		2966817	0		=			
ANR	2966870	Identifier	seekOffset		2966817	0					
ANR	2966871	AdditiveExpression	st . st_size - ( ++ i * 200 )		2966817	1		-			
ANR	2966872	MemberAccess	st . st_size		2966817	0					
ANR	2966873	Identifier	st		2966817	0					
ANR	2966874	Identifier	st_size		2966817	1					
ANR	2966875	MultiplicativeExpression	++ i * 200		2966817	1		*			
ANR	2966876	UnaryExpression	++ i		2966817	0					
ANR	2966877	IncDec	++		2966817	0					
ANR	2966878	Identifier	i		2966817	1					
ANR	2966879	PrimaryExpression	200		2966817	1					
ANR	2966880	ExpressionStatement	"fseek ( fd , seekOffset , SEEK_SET )"	291:8:9061:9092	2966817	1	True				
ANR	2966881	CallExpression	"fseek ( fd , seekOffset , SEEK_SET )"		2966817	0					
ANR	2966882	Callee	fseek		2966817	0					
ANR	2966883	Identifier	fseek		2966817	0					
ANR	2966884	ArgumentList	fd		2966817	1					
ANR	2966885	Argument	fd		2966817	0					
ANR	2966886	Identifier	fd		2966817	0					
ANR	2966887	Argument	seekOffset		2966817	1					
ANR	2966888	Identifier	seekOffset		2966817	0					
ANR	2966889	Argument	SEEK_SET		2966817	2					
ANR	2966890	Identifier	SEEK_SET		2966817	0					
ANR	2966891	WhileStatement	while ( 1 )		2966817	2					
ANR	2966892	Condition	1	293:15:9118:9118	2966817	0	True				
ANR	2966893	PrimaryExpression	1		2966817	0					
ANR	2966894	CompoundStatement		19:18:404:404	2966817	1					
ANR	2966895	IfStatement	if ( buf . readLine ( fd ) == false )		2966817	0					
ANR	2966896	Condition	buf . readLine ( fd ) == false	294:16:9139:9163	2966817	0	True				
ANR	2966897	EqualityExpression	buf . readLine ( fd ) == false		2966817	0		==			
ANR	2966898	CallExpression	buf . readLine ( fd )		2966817	0					
ANR	2966899	Callee	buf . readLine		2966817	0					
ANR	2966900	MemberAccess	buf . readLine		2966817	0					
ANR	2966901	Identifier	buf		2966817	0					
ANR	2966902	Identifier	readLine		2966817	1					
ANR	2966903	ArgumentList	fd		2966817	1					
ANR	2966904	Argument	fd		2966817	0					
ANR	2966905	Identifier	fd		2966817	0					
ANR	2966906	Identifier	false		2966817	1					
ANR	2966907	BreakStatement	break ;	295:16:9183:9188	2966817	1	True				
ANR	2966908	IfStatement	"if ( strncmp ( buf . Value ( ) , ""***"" , 3 ) == 0 && buf . readLine ( fd ) == false )"		2966817	1					
ANR	2966909	Condition	"strncmp ( buf . Value ( ) , ""***"" , 3 ) == 0 && buf . readLine ( fd ) == false"	298:16:9275:9338	2966817	0	True				
ANR	2966910	AndExpression	"strncmp ( buf . Value ( ) , ""***"" , 3 ) == 0 && buf . readLine ( fd ) == false"		2966817	0		&&			
ANR	2966911	EqualityExpression	"strncmp ( buf . Value ( ) , ""***"" , 3 ) == 0"		2966817	0		==			
ANR	2966912	CallExpression	"strncmp ( buf . Value ( ) , ""***"" , 3 )"		2966817	0					
ANR	2966913	Callee	strncmp		2966817	0					
ANR	2966914	Identifier	strncmp		2966817	0					
ANR	2966915	ArgumentList	buf . Value ( )		2966817	1					
ANR	2966916	Argument	buf . Value ( )		2966817	0					
ANR	2966917	CallExpression	buf . Value ( )		2966817	0					
ANR	2966918	Callee	buf . Value		2966817	0					
ANR	2966919	MemberAccess	buf . Value		2966817	0					
ANR	2966920	Identifier	buf		2966817	0					
ANR	2966921	Identifier	Value		2966817	1					
ANR	2966922	ArgumentList			2966817	1					
ANR	2966923	Argument	"""***"""		2966817	1					
ANR	2966924	PrimaryExpression	"""***"""		2966817	0					
ANR	2966925	Argument	3		2966817	2					
ANR	2966926	PrimaryExpression	3		2966817	0					
ANR	2966927	PrimaryExpression	0		2966817	1					
ANR	2966928	EqualityExpression	buf . readLine ( fd ) == false		2966817	1		==			
ANR	2966929	CallExpression	buf . readLine ( fd )		2966817	0					
ANR	2966930	Callee	buf . readLine		2966817	0					
ANR	2966931	MemberAccess	buf . readLine		2966817	0					
ANR	2966932	Identifier	buf		2966817	0					
ANR	2966933	Identifier	readLine		2966817	1					
ANR	2966934	ArgumentList	fd		2966817	1					
ANR	2966935	Argument	fd		2966817	0					
ANR	2966936	Identifier	fd		2966817	0					
ANR	2966937	Identifier	false		2966817	1					
ANR	2966938	CompoundStatement		24:82:624:624	2966817	1					
ANR	2966939	ExpressionStatement	found = true	299:16:9359:9371	2966817	0	True				
ANR	2966940	AssignmentExpression	found = true		2966817	0		=			
ANR	2966941	Identifier	found		2966817	0					
ANR	2966942	Identifier	true		2966817	1					
ANR	2966943	BreakStatement	break ;	300:16:9389:9394	2966817	1	True				
ANR	2966944	IfStatement	if ( seekOffset <= 0 )		2966817	3					
ANR	2966945	Condition	seekOffset <= 0	304:12:9435:9449	2966817	0	True				
ANR	2966946	RelationalExpression	seekOffset <= 0		2966817	0		<=			
ANR	2966947	Identifier	seekOffset		2966817	0					
ANR	2966948	PrimaryExpression	0		2966817	1					
ANR	2966949	CompoundStatement		30:29:735:735	2966817	1					
ANR	2966950	ExpressionStatement	"fprintf ( stderr , ""Error: Unable to find last delimiter in file: (%s)\\n"" , filename )"	305:12:9466:9547	2966817	0	True				
ANR	2966951	CallExpression	"fprintf ( stderr , ""Error: Unable to find last delimiter in file: (%s)\\n"" , filename )"		2966817	0					
ANR	2966952	Callee	fprintf		2966817	0					
ANR	2966953	Identifier	fprintf		2966817	0					
ANR	2966954	ArgumentList	stderr		2966817	1					
ANR	2966955	Argument	stderr		2966817	0					
ANR	2966956	Identifier	stderr		2966817	0					
ANR	2966957	Argument	"""Error: Unable to find last delimiter in file: (%s)\\n"""		2966817	1					
ANR	2966958	PrimaryExpression	"""Error: Unable to find last delimiter in file: (%s)\\n"""		2966817	0					
ANR	2966959	Argument	filename		2966817	2					
ANR	2966960	Identifier	filename		2966817	0					
ANR	2966961	ExpressionStatement	exit ( 1 )	306:12:9561:9568	2966817	1	True				
ANR	2966962	CallExpression	exit ( 1 )		2966817	0					
ANR	2966963	Callee	exit		2966817	0					
ANR	2966964	Identifier	exit		2966817	0					
ANR	2966965	ArgumentList	1		2966817	1					
ANR	2966966	Argument	1		2966817	0					
ANR	2966967	PrimaryExpression	1		2966817	0					
ANR	2966968	ExpressionStatement	lastOffset = ftell ( fd ) - buf . Length ( )	311:4:9637:9674	2966817	9	True				
ANR	2966969	AssignmentExpression	lastOffset = ftell ( fd ) - buf . Length ( )		2966817	0		=			
ANR	2966970	Identifier	lastOffset		2966817	0					
ANR	2966971	AdditiveExpression	ftell ( fd ) - buf . Length ( )		2966817	1		-			
ANR	2966972	CallExpression	ftell ( fd )		2966817	0					
ANR	2966973	Callee	ftell		2966817	0					
ANR	2966974	Identifier	ftell		2966817	0					
ANR	2966975	ArgumentList	fd		2966817	1					
ANR	2966976	Argument	fd		2966817	0					
ANR	2966977	Identifier	fd		2966817	0					
ANR	2966978	CallExpression	buf . Length ( )		2966817	1					
ANR	2966979	Callee	buf . Length		2966817	0					
ANR	2966980	MemberAccess	buf . Length		2966817	0					
ANR	2966981	Identifier	buf		2966817	0					
ANR	2966982	Identifier	Length		2966817	1					
ANR	2966983	ArgumentList			2966817	1					
ANR	2966984	ReturnStatement	return lastOffset ;	313:4:9685:9702	2966817	10	True				
ANR	2966985	Identifier	lastOffset		2966817	0					
ANR	2966986	ReturnType	static long		2966817	1					
ANR	2966987	Identifier	findLastDelimiter		2966817	2					
ANR	2966988	ParameterList	"FILE * fd , char * filename"		2966817	3					
ANR	2966989	Parameter	FILE * fd	274:30:8690:8697	2966817	0	True				
ANR	2966990	ParameterType	FILE *		2966817	0					
ANR	2966991	Identifier	fd		2966817	1					
ANR	2966992	Parameter	char * filename	274:40:8700:8713	2966817	1	True				
ANR	2966993	ParameterType	char *		2966817	0					
ANR	2966994	Identifier	filename		2966817	1					
ANR	2966995	CFGEntryNode	ENTRY		2966817		True				
ANR	2966996	CFGExitNode	EXIT		2966817		True				
ANR	2966997	Symbol	seekOffset		2966817						
ANR	2966998	Symbol	SEEK_SET		2966817						
ANR	2966999	Symbol	st		2966817						
ANR	2967000	Symbol	ftell		2966817						
ANR	2967001	Symbol	buf . readLine		2966817						
ANR	2967002	Symbol	false		2966817						
ANR	2967003	Symbol	i		2966817						
ANR	2967004	Symbol	lastOffset		2966817						
ANR	2967005	Symbol	& st		2966817						
ANR	2967006	Symbol	stderr		2966817						
ANR	2967007	Symbol	buf . Length		2966817						
ANR	2967008	Symbol	strncmp		2966817						
ANR	2967009	Symbol	buf		2966817						
ANR	2967010	Symbol	filename		2966817						
ANR	2967011	Symbol	found		2966817						
ANR	2967012	Symbol	st . st_size		2966817						
ANR	2967013	Symbol	buf . Value		2966817						
ANR	2967014	Symbol	true		2966817						
ANR	2967015	Symbol	fd		2966817						
ANR	2967016	Function	findPrevDelimiter	320:0:9973:11702							
ANR	2967017	FunctionDef	"findPrevDelimiter (FILE * fd , char * filename , long currOffset)"		2967016	0					
ANR	2967018	CompoundStatement		321:0:10046:11702	2967016	0					
ANR	2967019	IdentifierDeclStatement	MyString buf ;	322:4:10052:10064	2967016	0	True				
ANR	2967020	IdentifierDecl	buf		2967016	0					
ANR	2967021	IdentifierDeclType	MyString		2967016	0					
ANR	2967022	Identifier	buf		2967016	1					
ANR	2967023	IdentifierDeclStatement	char * owner ;	323:4:10070:10081	2967016	1	True				
ANR	2967024	IdentifierDecl	* owner		2967016	0					
ANR	2967025	IdentifierDeclType	char *		2967016	0					
ANR	2967026	Identifier	owner		2967016	1					
ANR	2967027	IdentifierDeclStatement	"long prevOffset = - 1 , completionDate = - 1 ;"	324:4:10087:10128	2967016	2	True				
ANR	2967028	IdentifierDecl	prevOffset = - 1		2967016	0					
ANR	2967029	IdentifierDeclType	long		2967016	0					
ANR	2967030	Identifier	prevOffset		2967016	1					
ANR	2967031	AssignmentExpression	prevOffset = - 1		2967016	2		=			
ANR	2967032	Identifier	prevOffset		2967016	0					
ANR	2967033	UnaryOperationExpression	- 1		2967016	1					
ANR	2967034	UnaryOperator	-		2967016	0					
ANR	2967035	PrimaryExpression	1		2967016	1					
ANR	2967036	IdentifierDecl	completionDate = - 1		2967016	1					
ANR	2967037	IdentifierDeclType	long		2967016	0					
ANR	2967038	Identifier	completionDate		2967016	1					
ANR	2967039	AssignmentExpression	completionDate = - 1		2967016	2		=			
ANR	2967040	Identifier	completionDate		2967016	0					
ANR	2967041	UnaryOperationExpression	- 1		2967016	1					
ANR	2967042	UnaryOperator	-		2967016	0					
ANR	2967043	PrimaryExpression	1		2967016	1					
ANR	2967044	IdentifierDeclStatement	"int clusterId = - 1 , procId = - 1 ;"	325:4:10134:10165	2967016	3	True				
ANR	2967045	IdentifierDecl	clusterId = - 1		2967016	0					
ANR	2967046	IdentifierDeclType	int		2967016	0					
ANR	2967047	Identifier	clusterId		2967016	1					
ANR	2967048	AssignmentExpression	clusterId = - 1		2967016	2		=			
ANR	2967049	Identifier	clusterId		2967016	0					
ANR	2967050	UnaryOperationExpression	- 1		2967016	1					
ANR	2967051	UnaryOperator	-		2967016	0					
ANR	2967052	PrimaryExpression	1		2967016	1					
ANR	2967053	IdentifierDecl	procId = - 1		2967016	1					
ANR	2967054	IdentifierDeclType	int		2967016	0					
ANR	2967055	Identifier	procId		2967016	1					
ANR	2967056	AssignmentExpression	procId = - 1		2967016	2		=			
ANR	2967057	Identifier	procId		2967016	0					
ANR	2967058	UnaryOperationExpression	- 1		2967016	1					
ANR	2967059	UnaryOperator	-		2967016	0					
ANR	2967060	PrimaryExpression	1		2967016	1					
ANR	2967061	ExpressionStatement	"fseek ( fd , currOffset , SEEK_SET )"	327:4:10174:10205	2967016	4	True				
ANR	2967062	CallExpression	"fseek ( fd , currOffset , SEEK_SET )"		2967016	0					
ANR	2967063	Callee	fseek		2967016	0					
ANR	2967064	Identifier	fseek		2967016	0					
ANR	2967065	ArgumentList	fd		2967016	1					
ANR	2967066	Argument	fd		2967016	0					
ANR	2967067	Identifier	fd		2967016	0					
ANR	2967068	Argument	currOffset		2967016	1					
ANR	2967069	Identifier	currOffset		2967016	0					
ANR	2967070	Argument	SEEK_SET		2967016	2					
ANR	2967071	Identifier	SEEK_SET		2967016	0					
ANR	2967072	ExpressionStatement	buf . readLine ( fd )	328:4:10211:10227	2967016	5	True				
ANR	2967073	CallExpression	buf . readLine ( fd )		2967016	0					
ANR	2967074	Callee	buf . readLine		2967016	0					
ANR	2967075	MemberAccess	buf . readLine		2967016	0					
ANR	2967076	Identifier	buf		2967016	0					
ANR	2967077	Identifier	readLine		2967016	1					
ANR	2967078	ArgumentList	fd		2967016	1					
ANR	2967079	Argument	fd		2967016	0					
ANR	2967080	Identifier	fd		2967016	0					
ANR	2967081	ExpressionStatement	owner = ( char * ) malloc ( buf . Length ( ) * sizeof ( char ) )	330:4:10236:10288	2967016	6	True				
ANR	2967082	AssignmentExpression	owner = ( char * ) malloc ( buf . Length ( ) * sizeof ( char ) )		2967016	0		=			
ANR	2967083	Identifier	owner		2967016	0					
ANR	2967084	CastExpression	( char * ) malloc ( buf . Length ( ) * sizeof ( char ) )		2967016	1					
ANR	2967085	CastTarget	char *		2967016	0					
ANR	2967086	CallExpression	malloc ( buf . Length ( ) * sizeof ( char ) )		2967016	1					
ANR	2967087	Callee	malloc		2967016	0					
ANR	2967088	Identifier	malloc		2967016	0					
ANR	2967089	ArgumentList	buf . Length ( ) * sizeof ( char )		2967016	1					
ANR	2967090	Argument	buf . Length ( ) * sizeof ( char )		2967016	0					
ANR	2967091	MultiplicativeExpression	buf . Length ( ) * sizeof ( char )		2967016	0		*			
ANR	2967092	CallExpression	buf . Length ( )		2967016	0					
ANR	2967093	Callee	buf . Length		2967016	0					
ANR	2967094	MemberAccess	buf . Length		2967016	0					
ANR	2967095	Identifier	buf		2967016	0					
ANR	2967096	Identifier	Length		2967016	1					
ANR	2967097	ArgumentList			2967016	1					
ANR	2967098	SizeofExpression	sizeof ( char )		2967016	1					
ANR	2967099	Sizeof	sizeof		2967016	0					
ANR	2967100	SizeofOperand	char		2967016	1					
ANR	2967101	ExpressionStatement	"sscanf ( buf . Value ( ) , ""%*s %*s %*s %ld %*s %*s %d %*s %*s %d %*s %*s %s %*s %*s %ld"" , & prevOffset , & clusterId , & procId , owner , & completionDate )"	336:4:10512:10665	2967016	7	True				
ANR	2967102	CallExpression	"sscanf ( buf . Value ( ) , ""%*s %*s %*s %ld %*s %*s %d %*s %*s %d %*s %*s %s %*s %*s %ld"" , & prevOffset , & clusterId , & procId , owner , & completionDate )"		2967016	0					
ANR	2967103	Callee	sscanf		2967016	0					
ANR	2967104	Identifier	sscanf		2967016	0					
ANR	2967105	ArgumentList	buf . Value ( )		2967016	1					
ANR	2967106	Argument	buf . Value ( )		2967016	0					
ANR	2967107	CallExpression	buf . Value ( )		2967016	0					
ANR	2967108	Callee	buf . Value		2967016	0					
ANR	2967109	MemberAccess	buf . Value		2967016	0					
ANR	2967110	Identifier	buf		2967016	0					
ANR	2967111	Identifier	Value		2967016	1					
ANR	2967112	ArgumentList			2967016	1					
ANR	2967113	Argument	"""%*s %*s %*s %ld %*s %*s %d %*s %*s %d %*s %*s %s %*s %*s %ld"""		2967016	1					
ANR	2967114	PrimaryExpression	"""%*s %*s %*s %ld %*s %*s %d %*s %*s %d %*s %*s %s %*s %*s %ld"""		2967016	0					
ANR	2967115	Argument	& prevOffset		2967016	2					
ANR	2967116	UnaryOperationExpression	& prevOffset		2967016	0					
ANR	2967117	UnaryOperator	&		2967016	0					
ANR	2967118	Identifier	prevOffset		2967016	1					
ANR	2967119	Argument	& clusterId		2967016	3					
ANR	2967120	UnaryOperationExpression	& clusterId		2967016	0					
ANR	2967121	UnaryOperator	&		2967016	0					
ANR	2967122	Identifier	clusterId		2967016	1					
ANR	2967123	Argument	& procId		2967016	4					
ANR	2967124	UnaryOperationExpression	& procId		2967016	0					
ANR	2967125	UnaryOperator	&		2967016	0					
ANR	2967126	Identifier	procId		2967016	1					
ANR	2967127	Argument	owner		2967016	5					
ANR	2967128	Identifier	owner		2967016	0					
ANR	2967129	Argument	& completionDate		2967016	6					
ANR	2967130	UnaryOperationExpression	& completionDate		2967016	0					
ANR	2967131	UnaryOperator	&		2967016	0					
ANR	2967132	Identifier	completionDate		2967016	1					
ANR	2967133	IfStatement	if ( prevOffset == - 1 && clusterId == - 1 && procId == - 1 )		2967016	8					
ANR	2967134	Condition	prevOffset == - 1 && clusterId == - 1 && procId == - 1	339:8:10676:10726	2967016	0	True				
ANR	2967135	AndExpression	prevOffset == - 1 && clusterId == - 1 && procId == - 1		2967016	0		&&			
ANR	2967136	EqualityExpression	prevOffset == - 1		2967016	0		==			
ANR	2967137	Identifier	prevOffset		2967016	0					
ANR	2967138	UnaryOperationExpression	- 1		2967016	1					
ANR	2967139	UnaryOperator	-		2967016	0					
ANR	2967140	PrimaryExpression	1		2967016	1					
ANR	2967141	AndExpression	clusterId == - 1 && procId == - 1		2967016	1		&&			
ANR	2967142	EqualityExpression	clusterId == - 1		2967016	0		==			
ANR	2967143	Identifier	clusterId		2967016	0					
ANR	2967144	UnaryOperationExpression	- 1		2967016	1					
ANR	2967145	UnaryOperator	-		2967016	0					
ANR	2967146	PrimaryExpression	1		2967016	1					
ANR	2967147	EqualityExpression	procId == - 1		2967016	1		==			
ANR	2967148	Identifier	procId		2967016	0					
ANR	2967149	UnaryOperationExpression	- 1		2967016	1					
ANR	2967150	UnaryOperator	-		2967016	0					
ANR	2967151	PrimaryExpression	1		2967016	1					
ANR	2967152	CompoundStatement		19:61:682:682	2967016	1					
ANR	2967153	ExpressionStatement	"fprintf ( stderr , ""Error: (%s) is an incompatible history file, please run condor_convert_history.\\n"" , filename )"	340:8:10739:10882	2967016	0	True				
ANR	2967154	CallExpression	"fprintf ( stderr , ""Error: (%s) is an incompatible history file, please run condor_convert_history.\\n"" , filename )"		2967016	0					
ANR	2967155	Callee	fprintf		2967016	0					
ANR	2967156	Identifier	fprintf		2967016	0					
ANR	2967157	ArgumentList	stderr		2967016	1					
ANR	2967158	Argument	stderr		2967016	0					
ANR	2967159	Identifier	stderr		2967016	0					
ANR	2967160	Argument	"""Error: (%s) is an incompatible history file, please run condor_convert_history.\\n"""		2967016	1					
ANR	2967161	PrimaryExpression	"""Error: (%s) is an incompatible history file, please run condor_convert_history.\\n"""		2967016	0					
ANR	2967162	Argument	filename		2967016	2					
ANR	2967163	Identifier	filename		2967016	0					
ANR	2967164	ExpressionStatement	free ( owner )	343:8:10892:10903	2967016	1	True				
ANR	2967165	CallExpression	free ( owner )		2967016	0					
ANR	2967166	Callee	free		2967016	0					
ANR	2967167	Identifier	free		2967016	0					
ANR	2967168	ArgumentList	owner		2967016	1					
ANR	2967169	Argument	owner		2967016	0					
ANR	2967170	Identifier	owner		2967016	0					
ANR	2967171	ExpressionStatement	exit ( 1 )	344:8:10913:10920	2967016	2	True				
ANR	2967172	CallExpression	exit ( 1 )		2967016	0					
ANR	2967173	Callee	exit		2967016	0					
ANR	2967174	Identifier	exit		2967016	0					
ANR	2967175	ArgumentList	1		2967016	1					
ANR	2967176	Argument	1		2967016	0					
ANR	2967177	PrimaryExpression	1		2967016	0					
ANR	2967178	IfStatement	if ( cluster != - 1 || proc != - 1 )		2967016	9					
ANR	2967179	Condition	cluster != - 1 || proc != - 1	348:8:10977:11003	2967016	0	True				
ANR	2967180	OrExpression	cluster != - 1 || proc != - 1		2967016	0		||			
ANR	2967181	EqualityExpression	cluster != - 1		2967016	0		!=			
ANR	2967182	Identifier	cluster		2967016	0					
ANR	2967183	UnaryOperationExpression	- 1		2967016	1					
ANR	2967184	UnaryOperator	-		2967016	0					
ANR	2967185	PrimaryExpression	1		2967016	1					
ANR	2967186	EqualityExpression	proc != - 1		2967016	1		!=			
ANR	2967187	Identifier	proc		2967016	0					
ANR	2967188	UnaryOperationExpression	- 1		2967016	1					
ANR	2967189	UnaryOperator	-		2967016	0					
ANR	2967190	PrimaryExpression	1		2967016	1					
ANR	2967191	CompoundStatement		28:37:959:959	2967016	1					
ANR	2967192	WhileStatement	while ( clusterId != cluster || ( proc != - 1 && procId != proc ) )		2967016	0					
ANR	2967193	Condition	clusterId != cluster || ( proc != - 1 && procId != proc )	351:15:11066:11119	2967016	0	True				
ANR	2967194	OrExpression	clusterId != cluster || ( proc != - 1 && procId != proc )		2967016	0		||			
ANR	2967195	EqualityExpression	clusterId != cluster		2967016	0		!=			
ANR	2967196	Identifier	clusterId		2967016	0					
ANR	2967197	Identifier	cluster		2967016	1					
ANR	2967198	AndExpression	proc != - 1 && procId != proc		2967016	1		&&			
ANR	2967199	EqualityExpression	proc != - 1		2967016	0		!=			
ANR	2967200	Identifier	proc		2967016	0					
ANR	2967201	UnaryOperationExpression	- 1		2967016	1					
ANR	2967202	UnaryOperator	-		2967016	0					
ANR	2967203	PrimaryExpression	1		2967016	1					
ANR	2967204	EqualityExpression	procId != proc		2967016	1		!=			
ANR	2967205	Identifier	procId		2967016	0					
ANR	2967206	Identifier	proc		2967016	1					
ANR	2967207	CompoundStatement		31:71:1075:1075	2967016	1					
ANR	2967208	IfStatement	if ( prevOffset == 0 )		2967016	0					
ANR	2967209	Condition	prevOffset == 0	353:16:11144:11158	2967016	0	True				
ANR	2967210	EqualityExpression	prevOffset == 0		2967016	0		==			
ANR	2967211	Identifier	prevOffset		2967016	0					
ANR	2967212	PrimaryExpression	0		2967016	1					
ANR	2967213	CompoundStatement		33:33:1114:1114	2967016	1					
ANR	2967214	ExpressionStatement	free ( owner )	354:16:11191:11202	2967016	0	True				
ANR	2967215	CallExpression	free ( owner )		2967016	0					
ANR	2967216	Callee	free		2967016	0					
ANR	2967217	Identifier	free		2967016	0					
ANR	2967218	ArgumentList	owner		2967016	1					
ANR	2967219	Argument	owner		2967016	0					
ANR	2967220	Identifier	owner		2967016	0					
ANR	2967221	ReturnStatement	return - 1 ;	355:16:11220:11229	2967016	1	True				
ANR	2967222	UnaryOperationExpression	- 1		2967016	0					
ANR	2967223	UnaryOperator	-		2967016	0					
ANR	2967224	PrimaryExpression	1		2967016	1					
ANR	2967225	ExpressionStatement	"fseek ( fd , prevOffset , SEEK_SET )"	359:12:11307:11338	2967016	1	True				
ANR	2967226	CallExpression	"fseek ( fd , prevOffset , SEEK_SET )"		2967016	0					
ANR	2967227	Callee	fseek		2967016	0					
ANR	2967228	Identifier	fseek		2967016	0					
ANR	2967229	ArgumentList	fd		2967016	1					
ANR	2967230	Argument	fd		2967016	0					
ANR	2967231	Identifier	fd		2967016	0					
ANR	2967232	Argument	prevOffset		2967016	1					
ANR	2967233	Identifier	prevOffset		2967016	0					
ANR	2967234	Argument	SEEK_SET		2967016	2					
ANR	2967235	Identifier	SEEK_SET		2967016	0					
ANR	2967236	ExpressionStatement	buf . readLine ( fd )	360:12:11352:11368	2967016	2	True				
ANR	2967237	CallExpression	buf . readLine ( fd )		2967016	0					
ANR	2967238	Callee	buf . readLine		2967016	0					
ANR	2967239	MemberAccess	buf . readLine		2967016	0					
ANR	2967240	Identifier	buf		2967016	0					
ANR	2967241	Identifier	readLine		2967016	1					
ANR	2967242	ArgumentList	fd		2967016	1					
ANR	2967243	Argument	fd		2967016	0					
ANR	2967244	Identifier	fd		2967016	0					
ANR	2967245	ExpressionStatement	"owner = ( char * ) realloc ( owner , buf . Length ( ) * sizeof ( char ) )"	362:12:11395:11456	2967016	3	True				
ANR	2967246	AssignmentExpression	"owner = ( char * ) realloc ( owner , buf . Length ( ) * sizeof ( char ) )"		2967016	0		=			
ANR	2967247	Identifier	owner		2967016	0					
ANR	2967248	CastExpression	"( char * ) realloc ( owner , buf . Length ( ) * sizeof ( char ) )"		2967016	1					
ANR	2967249	CastTarget	char *		2967016	0					
ANR	2967250	CallExpression	"realloc ( owner , buf . Length ( ) * sizeof ( char ) )"		2967016	1					
ANR	2967251	Callee	realloc		2967016	0					
ANR	2967252	Identifier	realloc		2967016	0					
ANR	2967253	ArgumentList	owner		2967016	1					
ANR	2967254	Argument	owner		2967016	0					
ANR	2967255	Identifier	owner		2967016	0					
ANR	2967256	Argument	buf . Length ( ) * sizeof ( char )		2967016	1					
ANR	2967257	MultiplicativeExpression	buf . Length ( ) * sizeof ( char )		2967016	0		*			
ANR	2967258	CallExpression	buf . Length ( )		2967016	0					
ANR	2967259	Callee	buf . Length		2967016	0					
ANR	2967260	MemberAccess	buf . Length		2967016	0					
ANR	2967261	Identifier	buf		2967016	0					
ANR	2967262	Identifier	Length		2967016	1					
ANR	2967263	ArgumentList			2967016	1					
ANR	2967264	SizeofExpression	sizeof ( char )		2967016	1					
ANR	2967265	Sizeof	sizeof		2967016	0					
ANR	2967266	SizeofOperand	char		2967016	1					
ANR	2967267	ExpressionStatement	"sscanf ( buf . Value ( ) , ""%*s %*s %*s %ld %*s %*s %d %*s %*s %d %*s %*s %s %*s %*s %ld"" , & prevOffset , & clusterId , & procId , owner , & completionDate )"	364:12:11477:11638	2967016	4	True				
ANR	2967268	CallExpression	"sscanf ( buf . Value ( ) , ""%*s %*s %*s %ld %*s %*s %d %*s %*s %d %*s %*s %s %*s %*s %ld"" , & prevOffset , & clusterId , & procId , owner , & completionDate )"		2967016	0					
ANR	2967269	Callee	sscanf		2967016	0					
ANR	2967270	Identifier	sscanf		2967016	0					
ANR	2967271	ArgumentList	buf . Value ( )		2967016	1					
ANR	2967272	Argument	buf . Value ( )		2967016	0					
ANR	2967273	CallExpression	buf . Value ( )		2967016	0					
ANR	2967274	Callee	buf . Value		2967016	0					
ANR	2967275	MemberAccess	buf . Value		2967016	0					
ANR	2967276	Identifier	buf		2967016	0					
ANR	2967277	Identifier	Value		2967016	1					
ANR	2967278	ArgumentList			2967016	1					
ANR	2967279	Argument	"""%*s %*s %*s %ld %*s %*s %d %*s %*s %d %*s %*s %s %*s %*s %ld"""		2967016	1					
ANR	2967280	PrimaryExpression	"""%*s %*s %*s %ld %*s %*s %d %*s %*s %d %*s %*s %s %*s %*s %ld"""		2967016	0					
ANR	2967281	Argument	& prevOffset		2967016	2					
ANR	2967282	UnaryOperationExpression	& prevOffset		2967016	0					
ANR	2967283	UnaryOperator	&		2967016	0					
ANR	2967284	Identifier	prevOffset		2967016	1					
ANR	2967285	Argument	& clusterId		2967016	3					
ANR	2967286	UnaryOperationExpression	& clusterId		2967016	0					
ANR	2967287	UnaryOperator	&		2967016	0					
ANR	2967288	Identifier	clusterId		2967016	1					
ANR	2967289	Argument	& procId		2967016	4					
ANR	2967290	UnaryOperationExpression	& procId		2967016	0					
ANR	2967291	UnaryOperator	&		2967016	0					
ANR	2967292	Identifier	procId		2967016	1					
ANR	2967293	Argument	owner		2967016	5					
ANR	2967294	Identifier	owner		2967016	0					
ANR	2967295	Argument	& completionDate		2967016	6					
ANR	2967296	UnaryOperationExpression	& completionDate		2967016	0					
ANR	2967297	UnaryOperator	&		2967016	0					
ANR	2967298	Identifier	completionDate		2967016	1					
ANR	2967299	ExpressionStatement	free ( owner )	369:4:11662:11673	2967016	10	True				
ANR	2967300	CallExpression	free ( owner )		2967016	0					
ANR	2967301	Callee	free		2967016	0					
ANR	2967302	Identifier	free		2967016	0					
ANR	2967303	ArgumentList	owner		2967016	1					
ANR	2967304	Argument	owner		2967016	0					
ANR	2967305	Identifier	owner		2967016	0					
ANR	2967306	ReturnStatement	return prevOffset ;	371:4:11683:11700	2967016	11	True				
ANR	2967307	Identifier	prevOffset		2967016	0					
ANR	2967308	ReturnType	static long		2967016	1					
ANR	2967309	Identifier	findPrevDelimiter		2967016	2					
ANR	2967310	ParameterList	"FILE * fd , char * filename , long currOffset"		2967016	3					
ANR	2967311	Parameter	FILE * fd	320:30:10003:10010	2967016	0	True				
ANR	2967312	ParameterType	FILE *		2967016	0					
ANR	2967313	Identifier	fd		2967016	1					
ANR	2967314	Parameter	char * filename	320:40:10013:10026	2967016	1	True				
ANR	2967315	ParameterType	char *		2967016	0					
ANR	2967316	Identifier	filename		2967016	1					
ANR	2967317	Parameter	long currOffset	320:56:10029:10043	2967016	2	True				
ANR	2967318	ParameterType	long		2967016	0					
ANR	2967319	Identifier	currOffset		2967016	1					
ANR	2967320	CFGEntryNode	ENTRY		2967016		True				
ANR	2967321	CFGExitNode	EXIT		2967016		True				
ANR	2967322	Symbol	owner		2967016						
ANR	2967323	Symbol	SEEK_SET		2967016						
ANR	2967324	Symbol	malloc		2967016						
ANR	2967325	Symbol	& completionDate		2967016						
ANR	2967326	Symbol	cluster		2967016						
ANR	2967327	Symbol	& prevOffset		2967016						
ANR	2967328	Symbol	proc		2967016						
ANR	2967329	Symbol	& clusterId		2967016						
ANR	2967330	Symbol	& procId		2967016						
ANR	2967331	Symbol	procId		2967016						
ANR	2967332	Symbol	prevOffset		2967016						
ANR	2967333	Symbol	clusterId		2967016						
ANR	2967334	Symbol	realloc		2967016						
ANR	2967335	Symbol	stderr		2967016						
ANR	2967336	Symbol	buf . Length		2967016						
ANR	2967337	Symbol	buf		2967016						
ANR	2967338	Symbol	filename		2967016						
ANR	2967339	Symbol	currOffset		2967016						
ANR	2967340	Symbol	buf . Value		2967016						
ANR	2967341	Symbol	completionDate		2967016						
ANR	2967342	Symbol	fd		2967016						
ANR	2967343	Function	writeJobAd	374:0:11706:12398							
ANR	2967344	FunctionDef	writeJobAd (ClassAd * ad)		2967343	0					
ANR	2967345	CompoundStatement		374:29:11735:12398	2967343	0					
ANR	2967346	IdentifierDeclStatement	"clock_t start , end ;"	375:4:11741:11759	2967343	0	True				
ANR	2967347	IdentifierDecl	start		2967343	0					
ANR	2967348	IdentifierDeclType	clock_t		2967343	0					
ANR	2967349	Identifier	start		2967343	1					
ANR	2967350	IdentifierDecl	end		2967343	1					
ANR	2967351	IdentifierDeclType	clock_t		2967343	0					
ANR	2967352	Identifier	end		2967343	1					
ANR	2967353	IdentifierDeclStatement	double elapsed ;	376:4:11765:11779	2967343	1	True				
ANR	2967354	IdentifierDecl	elapsed		2967343	0					
ANR	2967355	IdentifierDeclType	double		2967343	0					
ANR	2967356	Identifier	elapsed		2967343	1					
ANR	2967357	IdentifierDeclStatement	ExprTree * expr ;	377:4:11785:11799	2967343	2	True				
ANR	2967358	IdentifierDecl	* expr		2967343	0					
ANR	2967359	IdentifierDeclType	ExprTree *		2967343	0					
ANR	2967360	Identifier	expr		2967343	1					
ANR	2967361	IdentifierDeclStatement	const char * name ;	378:4:11805:11821	2967343	3	True				
ANR	2967362	IdentifierDecl	* name		2967343	0					
ANR	2967363	IdentifierDeclType	const char *		2967343	0					
ANR	2967364	Identifier	name		2967343	1					
ANR	2967365	ExpressionStatement	ad -> ResetExpr ( )	379:4:11827:11842	2967343	4	True				
ANR	2967366	CallExpression	ad -> ResetExpr ( )		2967343	0					
ANR	2967367	Callee	ad -> ResetExpr		2967343	0					
ANR	2967368	PtrMemberAccess	ad -> ResetExpr		2967343	0					
ANR	2967369	Identifier	ad		2967343	0					
ANR	2967370	Identifier	ResetExpr		2967343	1					
ANR	2967371	ArgumentList			2967343	1					
ANR	2967372	IdentifierDeclStatement	BSONObjBuilder b ;	381:4:11853:11869	2967343	5	True				
ANR	2967373	IdentifierDecl	b		2967343	0					
ANR	2967374	IdentifierDeclType	BSONObjBuilder		2967343	0					
ANR	2967375	Identifier	b		2967343	1					
ANR	2967376	ExpressionStatement	start = clock ( )	382:4:11875:11890	2967343	6	True				
ANR	2967377	AssignmentExpression	start = clock ( )		2967343	0		=			
ANR	2967378	Identifier	start		2967343	0					
ANR	2967379	CallExpression	clock ( )		2967343	1					
ANR	2967380	Callee	clock		2967343	0					
ANR	2967381	Identifier	clock		2967343	0					
ANR	2967382	ArgumentList			2967343	1					
ANR	2967383	WhileStatement	"while ( ad -> NextExpr ( name , expr ) )"		2967343	7					
ANR	2967384	Condition	"ad -> NextExpr ( name , expr )"	383:11:11903:11925	2967343	0	True				
ANR	2967385	CallExpression	"ad -> NextExpr ( name , expr )"		2967343	0					
ANR	2967386	Callee	ad -> NextExpr		2967343	0					
ANR	2967387	PtrMemberAccess	ad -> NextExpr		2967343	0					
ANR	2967388	Identifier	ad		2967343	0					
ANR	2967389	Identifier	NextExpr		2967343	1					
ANR	2967390	ArgumentList	name		2967343	1					
ANR	2967391	Argument	name		2967343	0					
ANR	2967392	Identifier	name		2967343	0					
ANR	2967393	Argument	expr		2967343	1					
ANR	2967394	Identifier	expr		2967343	0					
ANR	2967395	CompoundStatement		10:36:192:192	2967343	1					
ANR	2967396	ExpressionStatement	"b . append ( name , ExprTreeToString ( expr ) )"	384:8:11946:11983	2967343	0	True				
ANR	2967397	CallExpression	"b . append ( name , ExprTreeToString ( expr ) )"		2967343	0					
ANR	2967398	Callee	b . append		2967343	0					
ANR	2967399	MemberAccess	b . append		2967343	0					
ANR	2967400	Identifier	b		2967343	0					
ANR	2967401	Identifier	append		2967343	1					
ANR	2967402	ArgumentList	name		2967343	1					
ANR	2967403	Argument	name		2967343	0					
ANR	2967404	Identifier	name		2967343	0					
ANR	2967405	Argument	ExprTreeToString ( expr )		2967343	1					
ANR	2967406	CallExpression	ExprTreeToString ( expr )		2967343	0					
ANR	2967407	Callee	ExprTreeToString		2967343	0					
ANR	2967408	Identifier	ExprTreeToString		2967343	0					
ANR	2967409	ArgumentList	expr		2967343	1					
ANR	2967410	Argument	expr		2967343	0					
ANR	2967411	Identifier	expr		2967343	0					
ANR	2967412	TryStatement	try		2967343	8					
ANR	2967413	CompoundStatement		13:8:263:263	2967343	0					
ANR	2967414	ExpressionStatement	"c . insert ( db_name , b . obj ( ) )"		2967343	0					
ANR	2967415	CallExpression	"c . insert ( db_name , b . obj ( ) )"		2967343	0					
ANR	2967416	Callee	c . insert		2967343	0					
ANR	2967417	MemberAccess	c . insert		2967343	0					
ANR	2967418	Identifier	c		2967343	0					
ANR	2967419	Identifier	insert		2967343	1					
ANR	2967420	ArgumentList	db_name		2967343	1					
ANR	2967421	Argument	db_name		2967343	0					
ANR	2967422	Identifier	db_name		2967343	0					
ANR	2967423	Argument	b . obj ( )		2967343	1					
ANR	2967424	CallExpression	b . obj ( )		2967343	0					
ANR	2967425	Callee	b . obj		2967343	0					
ANR	2967426	MemberAccess	b . obj		2967343	0					
ANR	2967427	Identifier	b		2967343	0					
ANR	2967428	Identifier	obj		2967343	1					
ANR	2967429	ArgumentList			2967343	1					
ANR	2967430	CatchList			2967343	1					
ANR	2967431	CatchStatement	catch ( DBException & e )		2967343	0					
ANR	2967432	Identifier	e		2967343	0					
ANR	2967433	CompoundStatement		16:26:333:333	2967343	1					
ANR	2967434	ExpressionStatement	"cout << ""caught DBException "" << e . toString ( ) << endl"	390:8:12079:12132	2967343	0	True				
ANR	2967435	ShiftExpression	"cout << ""caught DBException "" << e . toString ( ) << endl"		2967343	0		<<			
ANR	2967436	Identifier	cout		2967343	0					
ANR	2967437	ShiftExpression	"""caught DBException "" << e . toString ( ) << endl"		2967343	1		<<			
ANR	2967438	PrimaryExpression	"""caught DBException """		2967343	0					
ANR	2967439	ShiftExpression	e . toString ( ) << endl		2967343	1		<<			
ANR	2967440	CallExpression	e . toString ( )		2967343	0					
ANR	2967441	Callee	e . toString		2967343	0					
ANR	2967442	MemberAccess	e . toString		2967343	0					
ANR	2967443	Identifier	e		2967343	0					
ANR	2967444	Identifier	toString		2967343	1					
ANR	2967445	ArgumentList			2967343	1					
ANR	2967446	Identifier	endl		2967343	1					
ANR	2967447	ExpressionStatement	end = clock ( )	392:4:12144:12157	2967343	9	True				
ANR	2967448	AssignmentExpression	end = clock ( )		2967343	0		=			
ANR	2967449	Identifier	end		2967343	0					
ANR	2967450	CallExpression	clock ( )		2967343	1					
ANR	2967451	Callee	clock		2967343	0					
ANR	2967452	Identifier	clock		2967343	0					
ANR	2967453	ArgumentList			2967343	1					
ANR	2967454	ExpressionStatement	elapsed = ( ( float ) ( end - start ) ) / CLOCKS_PER_SEC	393:4:12163:12213	2967343	10	True				
ANR	2967455	AssignmentExpression	elapsed = ( ( float ) ( end - start ) ) / CLOCKS_PER_SEC		2967343	0		=			
ANR	2967456	Identifier	elapsed		2967343	0					
ANR	2967457	MultiplicativeExpression	( ( float ) ( end - start ) ) / CLOCKS_PER_SEC		2967343	1		/			
ANR	2967458	CastExpression	( float ) ( end - start )		2967343	0					
ANR	2967459	CastTarget	float		2967343	0					
ANR	2967460	AdditiveExpression	end - start		2967343	1		-			
ANR	2967461	Identifier	end		2967343	0					
ANR	2967462	Identifier	start		2967343	1					
ANR	2967463	Identifier	CLOCKS_PER_SEC		2967343	1					
ANR	2967464	Label	std :	394:4:12219:12222	2967343	11	True				
ANR	2967465	Identifier	std		2967343	0					
ANR	2967466	IdentifierDeclStatement	string last_err = c . getLastError ( ) ;	394:8:12223:12257	2967343	12	True				
ANR	2967467	IdentifierDecl	last_err = c . getLastError ( )		2967343	0					
ANR	2967468	IdentifierDeclType	string		2967343	0					
ANR	2967469	Identifier	last_err		2967343	1					
ANR	2967470	AssignmentExpression	last_err = c . getLastError ( )		2967343	2		=			
ANR	2967471	Identifier	last_err		2967343	0					
ANR	2967472	CallExpression	c . getLastError ( )		2967343	1					
ANR	2967473	Callee	c . getLastError		2967343	0					
ANR	2967474	MemberAccess	c . getLastError		2967343	0					
ANR	2967475	Identifier	c		2967343	0					
ANR	2967476	Identifier	getLastError		2967343	1					
ANR	2967477	ArgumentList			2967343	1					
ANR	2967478	IfStatement	if ( ! last_err . empty ( ) )		2967343	13					
ANR	2967479	Condition	! last_err . empty ( )	395:8:12267:12283	2967343	0	True				
ANR	2967480	UnaryOperationExpression	! last_err . empty ( )		2967343	0					
ANR	2967481	UnaryOperator	!		2967343	0					
ANR	2967482	CallExpression	last_err . empty ( )		2967343	1					
ANR	2967483	Callee	last_err . empty		2967343	0					
ANR	2967484	MemberAccess	last_err . empty		2967343	0					
ANR	2967485	Identifier	last_err		2967343	0					
ANR	2967486	Identifier	empty		2967343	1					
ANR	2967487	ArgumentList			2967343	1					
ANR	2967488	CompoundStatement		22:27:550:550	2967343	1					
ANR	2967489	ExpressionStatement	"printf ( ""getLastError: %s\\n"" , last_err . c_str ( ) )"	396:8:12296:12341	2967343	0	True				
ANR	2967490	CallExpression	"printf ( ""getLastError: %s\\n"" , last_err . c_str ( ) )"		2967343	0					
ANR	2967491	Callee	printf		2967343	0					
ANR	2967492	Identifier	printf		2967343	0					
ANR	2967493	ArgumentList	"""getLastError: %s\\n"""		2967343	1					
ANR	2967494	Argument	"""getLastError: %s\\n"""		2967343	0					
ANR	2967495	PrimaryExpression	"""getLastError: %s\\n"""		2967343	0					
ANR	2967496	Argument	last_err . c_str ( )		2967343	1					
ANR	2967497	CallExpression	last_err . c_str ( )		2967343	0					
ANR	2967498	Callee	last_err . c_str		2967343	0					
ANR	2967499	MemberAccess	last_err . c_str		2967343	0					
ANR	2967500	Identifier	last_err		2967343	0					
ANR	2967501	Identifier	c_str		2967343	1					
ANR	2967502	ArgumentList			2967343	1					
ANR	2967503	ExpressionStatement	"printf ( ""Time elapsed: %1.9f sec\\n"" , elapsed )"	398:4:12353:12396	2967343	14	True				
ANR	2967504	CallExpression	"printf ( ""Time elapsed: %1.9f sec\\n"" , elapsed )"		2967343	0					
ANR	2967505	Callee	printf		2967343	0					
ANR	2967506	Identifier	printf		2967343	0					
ANR	2967507	ArgumentList	"""Time elapsed: %1.9f sec\\n"""		2967343	1					
ANR	2967508	Argument	"""Time elapsed: %1.9f sec\\n"""		2967343	0					
ANR	2967509	PrimaryExpression	"""Time elapsed: %1.9f sec\\n"""		2967343	0					
ANR	2967510	Argument	elapsed		2967343	1					
ANR	2967511	Identifier	elapsed		2967343	0					
ANR	2967512	ReturnType	void		2967343	1					
ANR	2967513	Identifier	writeJobAd		2967343	2					
ANR	2967514	ParameterList	ClassAd * ad		2967343	3					
ANR	2967515	Parameter	ClassAd * ad	374:16:11722:11732	2967343	0	True				
ANR	2967516	ParameterType	ClassAd *		2967343	0					
ANR	2967517	Identifier	ad		2967343	1					
ANR	2967518	CFGEntryNode	ENTRY		2967343		True				
ANR	2967519	CFGExitNode	EXIT		2967343		True				
ANR	2967520	CFGErrorNode	ERROR		2967343		True				
ANR	2967521	Symbol	b		2967343						
ANR	2967522	Symbol	ad		2967343						
ANR	2967523	Symbol	c		2967343						
ANR	2967524	Symbol	start		2967343						
ANR	2967525	Symbol	ExprTreeToString		2967343						
ANR	2967526	Symbol	* ad		2967343						
ANR	2967527	Symbol	clock		2967343						
ANR	2967528	Symbol	ad -> NextExpr		2967343						
ANR	2967529	Symbol	elapsed		2967343						
ANR	2967530	Symbol	last_err		2967343						
ANR	2967531	Symbol	last_err . empty		2967343						
ANR	2967532	Symbol	CLOCKS_PER_SEC		2967343						
ANR	2967533	Symbol	name		2967343						
ANR	2967534	Symbol	end		2967343						
ANR	2967535	Symbol	expr		2967343						
ANR	2967536	Symbol	c . getLastError		2967343						
ANR	2967537	Symbol	last_err . c_str		2967343						
ANR	2967538	Function	readHistoryFromFile	402:0:12459:14781							
ANR	2967539	FunctionDef	readHistoryFromFile (char * JobHistoryFileName)		2967538	0					
ANR	2967540	CompoundStatement		403:0:12517:14781	2967538	0					
ANR	2967541	IdentifierDeclStatement	int EndFlag = 0 ;	404:4:12523:12540	2967538	0	True				
ANR	2967542	IdentifierDecl	EndFlag = 0		2967538	0					
ANR	2967543	IdentifierDeclType	int		2967538	0					
ANR	2967544	Identifier	EndFlag		2967538	1					
ANR	2967545	AssignmentExpression	EndFlag = 0		2967538	2		=			
ANR	2967546	Identifier	EndFlag		2967538	0					
ANR	2967547	PrimaryExpression	0		2967538	1					
ANR	2967548	IdentifierDeclStatement	int ErrorFlag = 0 ;	405:4:12546:12563	2967538	1	True				
ANR	2967549	IdentifierDecl	ErrorFlag = 0		2967538	0					
ANR	2967550	IdentifierDeclType	int		2967538	0					
ANR	2967551	Identifier	ErrorFlag		2967538	1					
ANR	2967552	AssignmentExpression	ErrorFlag = 0		2967538	2		=			
ANR	2967553	Identifier	ErrorFlag		2967538	0					
ANR	2967554	PrimaryExpression	0		2967538	1					
ANR	2967555	IdentifierDeclStatement	int EmptyFlag = 0 ;	406:4:12569:12586	2967538	2	True				
ANR	2967556	IdentifierDecl	EmptyFlag = 0		2967538	0					
ANR	2967557	IdentifierDeclType	int		2967538	0					
ANR	2967558	Identifier	EmptyFlag		2967538	1					
ANR	2967559	AssignmentExpression	EmptyFlag = 0		2967538	2		=			
ANR	2967560	Identifier	EmptyFlag		2967538	0					
ANR	2967561	PrimaryExpression	0		2967538	1					
ANR	2967562	IdentifierDeclStatement	ClassAd * ad = NULL ;	407:4:12592:12610	2967538	3	True				
ANR	2967563	IdentifierDecl	* ad = NULL		2967538	0					
ANR	2967564	IdentifierDeclType	ClassAd *		2967538	0					
ANR	2967565	Identifier	ad		2967538	1					
ANR	2967566	AssignmentExpression	* ad = NULL		2967538	2		=			
ANR	2967567	Identifier	NULL		2967538	0					
ANR	2967568	Identifier	NULL		2967538	1					
ANR	2967569	IdentifierDeclStatement	long offset = 0 ;	409:4:12617:12632	2967538	4	True				
ANR	2967570	IdentifierDecl	offset = 0		2967538	0					
ANR	2967571	IdentifierDeclType	long		2967538	0					
ANR	2967572	Identifier	offset		2967538	1					
ANR	2967573	AssignmentExpression	offset = 0		2967538	2		=			
ANR	2967574	Identifier	offset		2967538	0					
ANR	2967575	PrimaryExpression	0		2967538	1					
ANR	2967576	IdentifierDeclStatement	bool BOF = false ;	410:4:12638:12654	2967538	5	True				
ANR	2967577	IdentifierDecl	BOF = false		2967538	0					
ANR	2967578	IdentifierDeclType	bool		2967538	0					
ANR	2967579	Identifier	BOF		2967538	1					
ANR	2967580	AssignmentExpression	BOF = false		2967538	2		=			
ANR	2967581	Identifier	false		2967538	0					
ANR	2967582	Identifier	false		2967538	1					
ANR	2967583	IdentifierDeclStatement	MyString buf ;	411:4:12681:12693	2967538	6	True				
ANR	2967584	IdentifierDecl	buf		2967538	0					
ANR	2967585	IdentifierDeclType	MyString		2967538	0					
ANR	2967586	Identifier	buf		2967538	1					
ANR	2967587	IdentifierDeclStatement	"FILE * LogFile = safe_fopen_wrapper ( JobHistoryFileName , ""r"" ) ;"	413:4:12704:12760	2967538	7	True				
ANR	2967588	IdentifierDecl	"* LogFile = safe_fopen_wrapper ( JobHistoryFileName , ""r"" )"		2967538	0					
ANR	2967589	IdentifierDeclType	FILE *		2967538	0					
ANR	2967590	Identifier	LogFile		2967538	1					
ANR	2967591	AssignmentExpression	"* LogFile = safe_fopen_wrapper ( JobHistoryFileName , ""r"" )"		2967538	2		=			
ANR	2967592	Identifier	LogFile		2967538	0					
ANR	2967593	CallExpression	"safe_fopen_wrapper ( JobHistoryFileName , ""r"" )"		2967538	1					
ANR	2967594	Callee	safe_fopen_wrapper		2967538	0					
ANR	2967595	Identifier	safe_fopen_wrapper		2967538	0					
ANR	2967596	ArgumentList	JobHistoryFileName		2967538	1					
ANR	2967597	Argument	JobHistoryFileName		2967538	0					
ANR	2967598	Identifier	JobHistoryFileName		2967538	0					
ANR	2967599	Argument	"""r"""		2967538	1					
ANR	2967600	PrimaryExpression	"""r"""		2967538	0					
ANR	2967601	IfStatement	if ( ! LogFile )		2967538	8					
ANR	2967602	Condition	! LogFile	415:5:12772:12779	2967538	0	True				
ANR	2967603	UnaryOperationExpression	! LogFile		2967538	0					
ANR	2967604	UnaryOperator	!		2967538	0					
ANR	2967605	Identifier	LogFile		2967538	1					
ANR	2967606	CompoundStatement		13:15:264:264	2967538	1					
ANR	2967607	ExpressionStatement	"fprintf ( stderr , ""History file (%s) not found or empty.\\n"" , JobHistoryFileName )"	416:8:12792:12869	2967538	0	True				
ANR	2967608	CallExpression	"fprintf ( stderr , ""History file (%s) not found or empty.\\n"" , JobHistoryFileName )"		2967538	0					
ANR	2967609	Callee	fprintf		2967538	0					
ANR	2967610	Identifier	fprintf		2967538	0					
ANR	2967611	ArgumentList	stderr		2967538	1					
ANR	2967612	Argument	stderr		2967538	0					
ANR	2967613	Identifier	stderr		2967538	0					
ANR	2967614	Argument	"""History file (%s) not found or empty.\\n"""		2967538	1					
ANR	2967615	PrimaryExpression	"""History file (%s) not found or empty.\\n"""		2967538	0					
ANR	2967616	Argument	JobHistoryFileName		2967538	2					
ANR	2967617	Identifier	JobHistoryFileName		2967538	0					
ANR	2967618	ExpressionStatement	exit ( 1 )	417:8:12879:12886	2967538	1	True				
ANR	2967619	CallExpression	exit ( 1 )		2967538	0					
ANR	2967620	Callee	exit		2967538	0					
ANR	2967621	Identifier	exit		2967538	0					
ANR	2967622	ArgumentList	1		2967538	1					
ANR	2967623	Argument	1		2967538	0					
ANR	2967624	PrimaryExpression	1		2967538	0					
ANR	2967625	IfStatement	if ( specifiedMatch != 0 )		2967538	9					
ANR	2967626	Condition	specifiedMatch != 0	422:5:13049:13067	2967538	0	True				
ANR	2967627	EqualityExpression	specifiedMatch != 0		2967538	0		!=			
ANR	2967628	Identifier	specifiedMatch		2967538	0					
ANR	2967629	PrimaryExpression	0		2967538	1					
ANR	2967630	CompoundStatement		20:26:552:552	2967538	1					
ANR	2967631	IfStatement	if ( matchCount == specifiedMatch )		2967538	0					
ANR	2967632	Condition	matchCount == specifiedMatch	423:12:13085:13112	2967538	0	True				
ANR	2967633	EqualityExpression	matchCount == specifiedMatch		2967538	0		==			
ANR	2967634	Identifier	matchCount		2967538	0					
ANR	2967635	Identifier	specifiedMatch		2967538	1					
ANR	2967636	CompoundStatement		21:42:597:597	2967538	1					
ANR	2967637	ExpressionStatement	fclose ( LogFile )	424:12:13177:13192	2967538	0	True				
ANR	2967638	CallExpression	fclose ( LogFile )		2967538	0					
ANR	2967639	Callee	fclose		2967538	0					
ANR	2967640	Identifier	fclose		2967538	0					
ANR	2967641	ArgumentList	LogFile		2967538	1					
ANR	2967642	Argument	LogFile		2967538	0					
ANR	2967643	Identifier	LogFile		2967538	0					
ANR	2967644	ReturnStatement	return ;	425:12:13206:13212	2967538	1	True				
ANR	2967645	IfStatement	if ( backwards )		2967538	10					
ANR	2967646	Condition	backwards	429:5:13233:13241	2967538	0	True				
ANR	2967647	Identifier	backwards		2967538	0					
ANR	2967648	CompoundStatement		27:16:726:726	2967538	1					
ANR	2967649	ExpressionStatement	"offset = findLastDelimiter ( LogFile , JobHistoryFileName )"	430:8:13254:13309	2967538	0	True				
ANR	2967650	AssignmentExpression	"offset = findLastDelimiter ( LogFile , JobHistoryFileName )"		2967538	0		=			
ANR	2967651	Identifier	offset		2967538	0					
ANR	2967652	CallExpression	"findLastDelimiter ( LogFile , JobHistoryFileName )"		2967538	1					
ANR	2967653	Callee	findLastDelimiter		2967538	0					
ANR	2967654	Identifier	findLastDelimiter		2967538	0					
ANR	2967655	ArgumentList	LogFile		2967538	1					
ANR	2967656	Argument	LogFile		2967538	0					
ANR	2967657	Identifier	LogFile		2967538	0					
ANR	2967658	Argument	JobHistoryFileName		2967538	1					
ANR	2967659	Identifier	JobHistoryFileName		2967538	0					
ANR	2967660	WhileStatement	while ( ! EndFlag )		2967538	11					
ANR	2967661	Condition	! EndFlag	433:10:13329:13336	2967538	0	True				
ANR	2967662	UnaryOperationExpression	! EndFlag		2967538	0					
ANR	2967663	UnaryOperator	!		2967538	0					
ANR	2967664	Identifier	EndFlag		2967538	1					
ANR	2967665	CompoundStatement		31:20:821:821	2967538	1					
ANR	2967666	IfStatement	if ( backwards )		2967538	0					
ANR	2967667	Condition	backwards	435:12:13354:13362	2967538	0	True				
ANR	2967668	Identifier	backwards		2967538	0					
ANR	2967669	CompoundStatement		33:23:847:847	2967538	1					
ANR	2967670	IfStatement	if ( BOF )		2967538	0					
ANR	2967671	Condition	BOF	436:16:13414:13416	2967538	0	True				
ANR	2967672	Identifier	BOF		2967538	0					
ANR	2967673	CompoundStatement		34:21:901:901	2967538	1					
ANR	2967674	BreakStatement	break ;	437:16:13469:13474	2967538	0	True				
ANR	2967675	ExpressionStatement	"offset = findPrevDelimiter ( LogFile , JobHistoryFileName , offset )"	440:12:13515:13578	2967538	1	True				
ANR	2967676	AssignmentExpression	"offset = findPrevDelimiter ( LogFile , JobHistoryFileName , offset )"		2967538	0		=			
ANR	2967677	Identifier	offset		2967538	0					
ANR	2967678	CallExpression	"findPrevDelimiter ( LogFile , JobHistoryFileName , offset )"		2967538	1					
ANR	2967679	Callee	findPrevDelimiter		2967538	0					
ANR	2967680	Identifier	findPrevDelimiter		2967538	0					
ANR	2967681	ArgumentList	LogFile		2967538	1					
ANR	2967682	Argument	LogFile		2967538	0					
ANR	2967683	Identifier	LogFile		2967538	0					
ANR	2967684	Argument	JobHistoryFileName		2967538	1					
ANR	2967685	Identifier	JobHistoryFileName		2967538	0					
ANR	2967686	Argument	offset		2967538	2					
ANR	2967687	Identifier	offset		2967538	0					
ANR	2967688	IfStatement	if ( offset == - 1 )		2967538	2					
ANR	2967689	Condition	offset == - 1	441:16:13596:13607	2967538	0	True				
ANR	2967690	EqualityExpression	offset == - 1		2967538	0		==			
ANR	2967691	Identifier	offset		2967538	0					
ANR	2967692	UnaryOperationExpression	- 1		2967538	1					
ANR	2967693	UnaryOperator	-		2967538	0					
ANR	2967694	PrimaryExpression	1		2967538	1					
ANR	2967695	CompoundStatement		39:30:1092:1092	2967538	1					
ANR	2967696	BreakStatement	break ;	442:16:13658:13663	2967538	0	True				
ANR	2967697	ElseStatement	else		2967538	0					
ANR	2967698	IfStatement	if ( offset != 0 )		2967538	0					
ANR	2967699	Condition	offset != 0	443:23:13688:13698	2967538	0	True				
ANR	2967700	EqualityExpression	offset != 0		2967538	0		!=			
ANR	2967701	Identifier	offset		2967538	0					
ANR	2967702	PrimaryExpression	0		2967538	1					
ANR	2967703	CompoundStatement		41:36:1183:1183	2967538	1					
ANR	2967704	ExpressionStatement	"fseek ( LogFile , offset , SEEK_SET )"	444:16:13719:13751	2967538	0	True				
ANR	2967705	CallExpression	"fseek ( LogFile , offset , SEEK_SET )"		2967538	0					
ANR	2967706	Callee	fseek		2967538	0					
ANR	2967707	Identifier	fseek		2967538	0					
ANR	2967708	ArgumentList	LogFile		2967538	1					
ANR	2967709	Argument	LogFile		2967538	0					
ANR	2967710	Identifier	LogFile		2967538	0					
ANR	2967711	Argument	offset		2967538	1					
ANR	2967712	Identifier	offset		2967538	0					
ANR	2967713	Argument	SEEK_SET		2967538	2					
ANR	2967714	Identifier	SEEK_SET		2967538	0					
ANR	2967715	ExpressionStatement	buf . readLine ( LogFile )	445:16:13769:13790	2967538	1	True				
ANR	2967716	CallExpression	buf . readLine ( LogFile )		2967538	0					
ANR	2967717	Callee	buf . readLine		2967538	0					
ANR	2967718	MemberAccess	buf . readLine		2967538	0					
ANR	2967719	Identifier	buf		2967538	0					
ANR	2967720	Identifier	readLine		2967538	1					
ANR	2967721	ArgumentList	LogFile		2967538	1					
ANR	2967722	Argument	LogFile		2967538	0					
ANR	2967723	Identifier	LogFile		2967538	0					
ANR	2967724	ElseStatement	else		2967538	0					
ANR	2967725	CompoundStatement		44:19:1362:1362	2967538	0					
ANR	2967726	ExpressionStatement	BOF = true	447:16:13917:13927	2967538	0	True				
ANR	2967727	AssignmentExpression	BOF = true		2967538	0		=			
ANR	2967728	Identifier	BOF		2967538	0					
ANR	2967729	Identifier	true		2967538	1					
ANR	2967730	ExpressionStatement	"fseek ( LogFile , offset , SEEK_SET )"	448:16:13945:13977	2967538	1	True				
ANR	2967731	CallExpression	"fseek ( LogFile , offset , SEEK_SET )"		2967538	0					
ANR	2967732	Callee	fseek		2967538	0					
ANR	2967733	Identifier	fseek		2967538	0					
ANR	2967734	ArgumentList	LogFile		2967538	1					
ANR	2967735	Argument	LogFile		2967538	0					
ANR	2967736	Identifier	LogFile		2967538	0					
ANR	2967737	Argument	offset		2967538	1					
ANR	2967738	Identifier	offset		2967538	0					
ANR	2967739	Argument	SEEK_SET		2967538	2					
ANR	2967740	Identifier	SEEK_SET		2967538	0					
ANR	2967741	IfStatement	"if ( ! ( ad = new ClassAd ( LogFile , ""***"" , EndFlag , ErrorFlag , EmptyFlag ) ) )"		2967538	1					
ANR	2967742	Condition	"! ( ad = new ClassAd ( LogFile , ""***"" , EndFlag , ErrorFlag , EmptyFlag ) )"	452:12:14022:14086	2967538	0	True				
ANR	2967743	UnaryOperationExpression	"! ( ad = new ClassAd ( LogFile , ""***"" , EndFlag , ErrorFlag , EmptyFlag ) )"		2967538	0					
ANR	2967744	UnaryOperator	!		2967538	0					
ANR	2967745	AssignmentExpression	"ad = new ClassAd ( LogFile , ""***"" , EndFlag , ErrorFlag , EmptyFlag )"		2967538	1		=			
ANR	2967746	Identifier	ad		2967538	0					
ANR	2967747	Expression	"LogFile , ""***"" , EndFlag , ErrorFlag , EmptyFlag"		2967538	1					
ANR	2967748	Identifier	LogFile		2967538	0					
ANR	2967749	Expression	"""***"" , EndFlag , ErrorFlag , EmptyFlag"		2967538	1					
ANR	2967750	PrimaryExpression	"""***"""		2967538	0					
ANR	2967751	Expression	"EndFlag , ErrorFlag , EmptyFlag"		2967538	1					
ANR	2967752	Identifier	EndFlag		2967538	0					
ANR	2967753	Expression	"ErrorFlag , EmptyFlag"		2967538	1					
ANR	2967754	Identifier	ErrorFlag		2967538	0					
ANR	2967755	Identifier	EmptyFlag		2967538	1					
ANR	2967756	CompoundStatement		50:79:1571:1571	2967538	1					
ANR	2967757	ExpressionStatement	"fprintf ( stderr , ""Error:  Out of memory\\n"" )"	453:12:14103:14147	2967538	0	True				
ANR	2967758	CallExpression	"fprintf ( stderr , ""Error:  Out of memory\\n"" )"		2967538	0					
ANR	2967759	Callee	fprintf		2967538	0					
ANR	2967760	Identifier	fprintf		2967538	0					
ANR	2967761	ArgumentList	stderr		2967538	1					
ANR	2967762	Argument	stderr		2967538	0					
ANR	2967763	Identifier	stderr		2967538	0					
ANR	2967764	Argument	"""Error:  Out of memory\\n"""		2967538	1					
ANR	2967765	PrimaryExpression	"""Error:  Out of memory\\n"""		2967538	0					
ANR	2967766	ExpressionStatement	exit ( 1 )	454:12:14161:14170	2967538	1	True				
ANR	2967767	CallExpression	exit ( 1 )		2967538	0					
ANR	2967768	Callee	exit		2967538	0					
ANR	2967769	Identifier	exit		2967538	0					
ANR	2967770	ArgumentList	1		2967538	1					
ANR	2967771	Argument	1		2967538	0					
ANR	2967772	PrimaryExpression	1		2967538	0					
ANR	2967773	IfStatement	if ( ErrorFlag )		2967538	2					
ANR	2967774	Condition	ErrorFlag	456:12:14195:14203	2967538	0	True				
ANR	2967775	Identifier	ErrorFlag		2967538	0					
ANR	2967776	CompoundStatement		54:24:1689:1689	2967538	1					
ANR	2967777	ExpressionStatement	"printf ( ""\\t*** Warning: Bad history file; skipping malformed ad(s)\\n"" )"	457:12:14221:14292	2967538	0	True				
ANR	2967778	CallExpression	"printf ( ""\\t*** Warning: Bad history file; skipping malformed ad(s)\\n"" )"		2967538	0					
ANR	2967779	Callee	printf		2967538	0					
ANR	2967780	Identifier	printf		2967538	0					
ANR	2967781	ArgumentList	"""\\t*** Warning: Bad history file; skipping malformed ad(s)\\n"""		2967538	1					
ANR	2967782	Argument	"""\\t*** Warning: Bad history file; skipping malformed ad(s)\\n"""		2967538	0					
ANR	2967783	PrimaryExpression	"""\\t*** Warning: Bad history file; skipping malformed ad(s)\\n"""		2967538	0					
ANR	2967784	ExpressionStatement	ErrorFlag = 0	458:12:14306:14317	2967538	1	True				
ANR	2967785	AssignmentExpression	ErrorFlag = 0		2967538	0		=			
ANR	2967786	Identifier	ErrorFlag		2967538	0					
ANR	2967787	PrimaryExpression	0		2967538	1					
ANR	2967788	IfStatement	if ( ad )		2967538	2					
ANR	2967789	Condition	ad	459:15:14334:14335	2967538	0	True				
ANR	2967790	Identifier	ad		2967538	0					
ANR	2967791	CompoundStatement		57:19:1820:1820	2967538	1					
ANR	2967792	Statement	delete	460:16:14356:14361	2967538	0	True				
ANR	2967793	ExpressionStatement	ad	460:23:14363:14365	2967538	1	True				
ANR	2967794	Identifier	ad		2967538	0					
ANR	2967795	ExpressionStatement	ad = NULL	461:16:14383:14392	2967538	2	True				
ANR	2967796	AssignmentExpression	ad = NULL		2967538	0		=			
ANR	2967797	Identifier	ad		2967538	0					
ANR	2967798	Identifier	NULL		2967538	1					
ANR	2967799	ContinueStatement	continue ;	463:12:14420:14428	2967538	3	True				
ANR	2967800	IfStatement	if ( EmptyFlag )		2967538	3					
ANR	2967801	Condition	EmptyFlag	465:12:14453:14461	2967538	0	True				
ANR	2967802	Identifier	EmptyFlag		2967538	0					
ANR	2967803	CompoundStatement		63:24:1947:1947	2967538	1					
ANR	2967804	ExpressionStatement	EmptyFlag = 0	466:12:14479:14490	2967538	0	True				
ANR	2967805	AssignmentExpression	EmptyFlag = 0		2967538	0		=			
ANR	2967806	Identifier	EmptyFlag		2967538	0					
ANR	2967807	PrimaryExpression	0		2967538	1					
ANR	2967808	IfStatement	if ( ad )		2967538	1					
ANR	2967809	Condition	ad	467:15:14507:14508	2967538	0	True				
ANR	2967810	Identifier	ad		2967538	0					
ANR	2967811	CompoundStatement		65:19:1993:1993	2967538	1					
ANR	2967812	Statement	delete	468:16:14529:14534	2967538	0	True				
ANR	2967813	ExpressionStatement	ad	468:23:14536:14538	2967538	1	True				
ANR	2967814	Identifier	ad		2967538	0					
ANR	2967815	ExpressionStatement	ad = NULL	469:16:14556:14565	2967538	2	True				
ANR	2967816	AssignmentExpression	ad = NULL		2967538	0		=			
ANR	2967817	Identifier	ad		2967538	0					
ANR	2967818	Identifier	NULL		2967538	1					
ANR	2967819	ContinueStatement	continue ;	471:12:14593:14601	2967538	2	True				
ANR	2967820	ExpressionStatement	writeJobAd ( ad )	475:8:14650:14664	2967538	4	True				
ANR	2967821	CallExpression	writeJobAd ( ad )		2967538	0					
ANR	2967822	Callee	writeJobAd		2967538	0					
ANR	2967823	Identifier	writeJobAd		2967538	0					
ANR	2967824	ArgumentList	ad		2967538	1					
ANR	2967825	Argument	ad		2967538	0					
ANR	2967826	Identifier	ad		2967538	0					
ANR	2967827	IfStatement	if ( ad )		2967538	5					
ANR	2967828	Condition	ad	477:11:14680:14681	2967538	0	True				
ANR	2967829	Identifier	ad		2967538	0					
ANR	2967830	CompoundStatement		75:15:2166:2166	2967538	1					
ANR	2967831	Statement	delete	478:12:14698:14703	2967538	0	True				
ANR	2967832	ExpressionStatement	ad	478:19:14705:14707	2967538	1	True				
ANR	2967833	Identifier	ad		2967538	0					
ANR	2967834	ExpressionStatement	ad = NULL	479:12:14721:14730	2967538	2	True				
ANR	2967835	AssignmentExpression	ad = NULL		2967538	0		=			
ANR	2967836	Identifier	ad		2967538	0					
ANR	2967837	Identifier	NULL		2967538	1					
ANR	2967838	ExpressionStatement	fclose ( LogFile )	482:4:14752:14767	2967538	12	True				
ANR	2967839	CallExpression	fclose ( LogFile )		2967538	0					
ANR	2967840	Callee	fclose		2967538	0					
ANR	2967841	Identifier	fclose		2967538	0					
ANR	2967842	ArgumentList	LogFile		2967538	1					
ANR	2967843	Argument	LogFile		2967538	0					
ANR	2967844	Identifier	LogFile		2967538	0					
ANR	2967845	ReturnStatement	return ;	483:4:14773:14779	2967538	13	True				
ANR	2967846	ReturnType	static void		2967538	1					
ANR	2967847	Identifier	readHistoryFromFile		2967538	2					
ANR	2967848	ParameterList	char * JobHistoryFileName		2967538	3					
ANR	2967849	Parameter	char * JobHistoryFileName	402:32:12491:12514	2967538	0	True				
ANR	2967850	ParameterType	char *		2967538	0					
ANR	2967851	Identifier	JobHistoryFileName		2967538	1					
ANR	2967852	CFGEntryNode	ENTRY		2967538		True				
ANR	2967853	CFGExitNode	EXIT		2967538		True				
ANR	2967854	Symbol	SEEK_SET		2967538						
ANR	2967855	Symbol	EndFlag		2967538						
ANR	2967856	Symbol	ad		2967538						
ANR	2967857	Symbol	NULL		2967538						
ANR	2967858	Symbol	ErrorFlag		2967538						
ANR	2967859	Symbol	offset		2967538						
ANR	2967860	Symbol	safe_fopen_wrapper		2967538						
ANR	2967861	Symbol	false		2967538						
ANR	2967862	Symbol	findPrevDelimiter		2967538						
ANR	2967863	Symbol	specifiedMatch		2967538						
ANR	2967864	Symbol	matchCount		2967538						
ANR	2967865	Symbol	stderr		2967538						
ANR	2967866	Symbol	backwards		2967538						
ANR	2967867	Symbol	LogFile		2967538						
ANR	2967868	Symbol	EmptyFlag		2967538						
ANR	2967869	Symbol	findLastDelimiter		2967538						
ANR	2967870	Symbol	buf		2967538						
ANR	2967871	Symbol	JobHistoryFileName		2967538						
ANR	2967872	Symbol	BOF		2967538						
ANR	2967873	Symbol	true		2967538						
