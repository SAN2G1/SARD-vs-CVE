command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4733134	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_exponential_backoff.cpp								
ANR	4733135	DeclStmt									
ANR	4733136	Decl							int	int	ExponentialBackoff :: NEXT_SEED
ANR	4733137	Function	ExponentialBackoff :: ExponentialBackoff	33:0:1275:1428							
ANR	4733138	FunctionDef	"ExponentialBackoff :: ExponentialBackoff (int minimum , int maximum , double b)"		4733137	0					
ANR	4733139	CompoundStatement		33:74:1349:1428	4733137	0					
ANR	4733140	IdentifierDeclStatement	int theSeed = NEXT_SEED ;	34:1:1352:1375	4733137	0	True				
ANR	4733141	IdentifierDecl	theSeed = NEXT_SEED		4733137	0					
ANR	4733142	IdentifierDeclType	int		4733137	0					
ANR	4733143	Identifier	theSeed		4733137	1					
ANR	4733144	AssignmentExpression	theSeed = NEXT_SEED		4733137	2		=			
ANR	4733145	Identifier	NEXT_SEED		4733137	0					
ANR	4733146	Identifier	NEXT_SEED		4733137	1					
ANR	4733147	ExpressionStatement	NEXT_SEED ++	35:1:1378:1389	4733137	1	True				
ANR	4733148	PostIncDecOperationExpression	NEXT_SEED ++		4733137	0					
ANR	4733149	Identifier	NEXT_SEED		4733137	0					
ANR	4733150	IncDec	++		4733137	1					
ANR	4733151	ExpressionStatement	"init ( minimum , maximum , b , theSeed )"	36:1:1392:1426	4733137	2	True				
ANR	4733152	CallExpression	"init ( minimum , maximum , b , theSeed )"		4733137	0					
ANR	4733153	Callee	init		4733137	0					
ANR	4733154	Identifier	init		4733137	0					
ANR	4733155	ArgumentList	minimum		4733137	1					
ANR	4733156	Argument	minimum		4733137	0					
ANR	4733157	Identifier	minimum		4733137	0					
ANR	4733158	Argument	maximum		4733137	1					
ANR	4733159	Identifier	maximum		4733137	0					
ANR	4733160	Argument	b		4733137	2					
ANR	4733161	Identifier	b		4733137	0					
ANR	4733162	Argument	theSeed		4733137	3					
ANR	4733163	Identifier	theSeed		4733137	0					
ANR	4733164	Identifier	ExponentialBackoff :: ExponentialBackoff		4733137	1					
ANR	4733165	ParameterList	"int minimum , int maximum , double b"		4733137	2					
ANR	4733166	Parameter	int minimum	33:39:1314:1324	4733137	0	True				
ANR	4733167	ParameterType	int		4733137	0					
ANR	4733168	Identifier	minimum		4733137	1					
ANR	4733169	Parameter	int maximum	33:52:1327:1337	4733137	1	True				
ANR	4733170	ParameterType	int		4733137	0					
ANR	4733171	Identifier	maximum		4733137	1					
ANR	4733172	Parameter	double b	33:65:1340:1347	4733137	2	True				
ANR	4733173	ParameterType	double		4733137	0					
ANR	4733174	Identifier	b		4733137	1					
ANR	4733175	CFGEntryNode	ENTRY		4733137		True				
ANR	4733176	CFGExitNode	EXIT		4733137		True				
ANR	4733177	Symbol	b		4733137						
ANR	4733178	Symbol	theSeed		4733137						
ANR	4733179	Symbol	maximum		4733137						
ANR	4733180	Symbol	NEXT_SEED		4733137						
ANR	4733181	Symbol	minimum		4733137						
ANR	4733182	Function	ExponentialBackoff :: ExponentialBackoff	39:0:1431:1542							
ANR	4733183	FunctionDef	"ExponentialBackoff :: ExponentialBackoff (int minimum , int maximum , double b , int s)"		4733182	0					
ANR	4733184	CompoundStatement		39:81:1512:1542	4733182	0					
ANR	4733185	ExpressionStatement	"init ( minimum , maximum , b , s )"	40:1:1515:1540	4733182	0	True				
ANR	4733186	CallExpression	"init ( minimum , maximum , b , s )"		4733182	0					
ANR	4733187	Callee	init		4733182	0					
ANR	4733188	Identifier	init		4733182	0					
ANR	4733189	ArgumentList	minimum		4733182	1					
ANR	4733190	Argument	minimum		4733182	0					
ANR	4733191	Identifier	minimum		4733182	0					
ANR	4733192	Argument	maximum		4733182	1					
ANR	4733193	Identifier	maximum		4733182	0					
ANR	4733194	Argument	b		4733182	2					
ANR	4733195	Identifier	b		4733182	0					
ANR	4733196	Argument	s		4733182	3					
ANR	4733197	Identifier	s		4733182	0					
ANR	4733198	Identifier	ExponentialBackoff :: ExponentialBackoff		4733182	1					
ANR	4733199	ParameterList	"int minimum , int maximum , double b , int s"		4733182	2					
ANR	4733200	Parameter	int minimum	39:39:1470:1480	4733182	0	True				
ANR	4733201	ParameterType	int		4733182	0					
ANR	4733202	Identifier	minimum		4733182	1					
ANR	4733203	Parameter	int maximum	39:52:1483:1493	4733182	1	True				
ANR	4733204	ParameterType	int		4733182	0					
ANR	4733205	Identifier	maximum		4733182	1					
ANR	4733206	Parameter	double b	39:65:1496:1503	4733182	2	True				
ANR	4733207	ParameterType	double		4733182	0					
ANR	4733208	Identifier	b		4733182	1					
ANR	4733209	Parameter	int s	39:75:1506:1510	4733182	3	True				
ANR	4733210	ParameterType	int		4733182	0					
ANR	4733211	Identifier	s		4733182	1					
ANR	4733212	CFGEntryNode	ENTRY		4733182		True				
ANR	4733213	CFGExitNode	EXIT		4733182		True				
ANR	4733214	Symbol	b		4733182						
ANR	4733215	Symbol	s		4733182						
ANR	4733216	Symbol	maximum		4733182						
ANR	4733217	Symbol	minimum		4733182						
ANR	4733218	Function	ExponentialBackoff :: ExponentialBackoff	43:0:1545:1634							
ANR	4733219	FunctionDef	ExponentialBackoff :: ExponentialBackoff (const ExponentialBackoff & orig)		4733218	0					
ANR	4733220	CompoundStatement		43:70:1615:1634	4733218	0					
ANR	4733221	ExpressionStatement	deepCopy ( orig )	44:1:1618:1632	4733218	0	True				
ANR	4733222	CallExpression	deepCopy ( orig )		4733218	0					
ANR	4733223	Callee	deepCopy		4733218	0					
ANR	4733224	Identifier	deepCopy		4733218	0					
ANR	4733225	ArgumentList	orig		4733218	1					
ANR	4733226	Argument	orig		4733218	0					
ANR	4733227	Identifier	orig		4733218	0					
ANR	4733228	Identifier	ExponentialBackoff :: ExponentialBackoff		4733218	1					
ANR	4733229	ParameterList	const ExponentialBackoff & orig		4733218	2					
ANR	4733230	Parameter	const ExponentialBackoff & orig	43:39:1584:1613	4733218	0	True				
ANR	4733231	ParameterType	const ExponentialBackoff &		4733218	0					
ANR	4733232	Identifier	orig		4733218	1					
ANR	4733233	CFGEntryNode	ENTRY		4733218		True				
ANR	4733234	CFGExitNode	EXIT		4733218		True				
ANR	4733235	Symbol	orig		4733218						
ANR	4733236	Function	operator =	48:20:1677:1793							
ANR	4733237	FunctionDef	operator = (const ExponentialBackoff & rhs)		4733236	0					
ANR	4733238	CompoundStatement		48:61:1718:1793	4733236	0					
ANR	4733239	IfStatement	if ( this != & rhs )		4733236	0					
ANR	4733240	Condition	this != & rhs	49:5:1725:1736	4733236	0	True				
ANR	4733241	EqualityExpression	this != & rhs		4733236	0		!=			
ANR	4733242	Identifier	this		4733236	0					
ANR	4733243	UnaryOperationExpression	& rhs		4733236	1					
ANR	4733244	UnaryOperator	&		4733236	0					
ANR	4733245	Identifier	rhs		4733236	1					
ANR	4733246	CompoundStatement		2:19:20:20	4733236	1					
ANR	4733247	ExpressionStatement	noLeak ( )	50:2:1743:1751	4733236	0	True				
ANR	4733248	CallExpression	noLeak ( )		4733236	0					
ANR	4733249	Callee	noLeak		4733236	0					
ANR	4733250	Identifier	noLeak		4733236	0					
ANR	4733251	ArgumentList			4733236	1					
ANR	4733252	ExpressionStatement	deepCopy ( rhs )	51:2:1755:1768	4733236	1	True				
ANR	4733253	CallExpression	deepCopy ( rhs )		4733236	0					
ANR	4733254	Callee	deepCopy		4733236	0					
ANR	4733255	Identifier	deepCopy		4733236	0					
ANR	4733256	ArgumentList	rhs		4733236	1					
ANR	4733257	Argument	rhs		4733236	0					
ANR	4733258	Identifier	rhs		4733236	0					
ANR	4733259	ReturnStatement	return ( * this ) ;	54:1:1776:1791	4733236	1	True				
ANR	4733260	UnaryOperationExpression	* this		4733236	0					
ANR	4733261	UnaryOperator	*		4733236	0					
ANR	4733262	Identifier	this		4733236	1					
ANR	4733263	Identifier	operator =		4733236	1					
ANR	4733264	ParameterList	const ExponentialBackoff & rhs		4733236	2					
ANR	4733265	Parameter	const ExponentialBackoff & rhs	48:31:1688:1716	4733236	0	True				
ANR	4733266	ParameterType	const ExponentialBackoff &		4733236	0					
ANR	4733267	Identifier	rhs		4733236	1					
ANR	4733268	CFGEntryNode	ENTRY		4733236		True				
ANR	4733269	CFGExitNode	EXIT		4733236		True				
ANR	4733270	Symbol	* this		4733236						
ANR	4733271	Symbol	& rhs		4733236						
ANR	4733272	Symbol	this		4733236						
ANR	4733273	Symbol	rhs		4733236						
ANR	4733274	Function	ExponentialBackoff :: ~ExponentialBackoff	57:0:1796:1850							
ANR	4733275	FunctionDef	ExponentialBackoff :: ~ExponentialBackoff ()		4733274	0					
ANR	4733276	CompoundStatement		57:41:1837:1850	4733274	0					
ANR	4733277	ExpressionStatement	noLeak ( )	58:1:1840:1848	4733274	0	True				
ANR	4733278	CallExpression	noLeak ( )		4733274	0					
ANR	4733279	Callee	noLeak		4733274	0					
ANR	4733280	Identifier	noLeak		4733274	0					
ANR	4733281	ArgumentList			4733274	1					
ANR	4733282	Identifier	ExponentialBackoff :: ~ExponentialBackoff		4733274	1					
ANR	4733283	ParameterList			4733274	2					
ANR	4733284	CFGEntryNode	ENTRY		4733274		True				
ANR	4733285	CFGExitNode	EXIT		4733274		True				
ANR	4733286	Function	ExponentialBackoff :: init	61:0:1853:2112							
ANR	4733287	FunctionDef	"ExponentialBackoff :: init (int minimum , int maximum , double b , int s)"		4733286	0					
ANR	4733288	CompoundStatement		62:67:1925:2112	4733286	0					
ANR	4733289	ExpressionStatement	this -> min = minimum	63:1:1928:1947	4733286	0	True				
ANR	4733290	AssignmentExpression	this -> min = minimum		4733286	0		=			
ANR	4733291	PtrMemberAccess	this -> min		4733286	0					
ANR	4733292	Identifier	this		4733286	0					
ANR	4733293	Identifier	min		4733286	1					
ANR	4733294	Identifier	minimum		4733286	1					
ANR	4733295	ExpressionStatement	this -> max = maximum	64:1:1950:1969	4733286	1	True				
ANR	4733296	AssignmentExpression	this -> max = maximum		4733286	0		=			
ANR	4733297	PtrMemberAccess	this -> max		4733286	0					
ANR	4733298	Identifier	this		4733286	0					
ANR	4733299	Identifier	max		4733286	1					
ANR	4733300	Identifier	maximum		4733286	1					
ANR	4733301	ExpressionStatement	this -> base = b	65:1:1972:1986	4733286	2	True				
ANR	4733302	AssignmentExpression	this -> base = b		4733286	0		=			
ANR	4733303	PtrMemberAccess	this -> base		4733286	0					
ANR	4733304	Identifier	this		4733286	0					
ANR	4733305	Identifier	base		4733286	1					
ANR	4733306	Identifier	b		4733286	1					
ANR	4733307	ExpressionStatement	this -> seed = s	66:1:1989:2003	4733286	3	True				
ANR	4733308	AssignmentExpression	this -> seed = s		4733286	0		=			
ANR	4733309	PtrMemberAccess	this -> seed		4733286	0					
ANR	4733310	Identifier	this		4733286	0					
ANR	4733311	Identifier	seed		4733286	1					
ANR	4733312	Identifier	s		4733286	1					
ANR	4733313	ExpressionStatement	this -> tries = 0	69:1:2031:2046	4733286	4	True				
ANR	4733314	AssignmentExpression	this -> tries = 0		4733286	0		=			
ANR	4733315	PtrMemberAccess	this -> tries		4733286	0					
ANR	4733316	Identifier	this		4733286	0					
ANR	4733317	Identifier	tries		4733286	1					
ANR	4733318	PrimaryExpression	0		4733286	1					
ANR	4733319	ExpressionStatement	this -> prevBackoff = minimum	70:1:2049:2076	4733286	5	True				
ANR	4733320	AssignmentExpression	this -> prevBackoff = minimum		4733286	0		=			
ANR	4733321	PtrMemberAccess	this -> prevBackoff		4733286	0					
ANR	4733322	Identifier	this		4733286	0					
ANR	4733323	Identifier	prevBackoff		4733286	1					
ANR	4733324	Identifier	minimum		4733286	1					
ANR	4733325	ExpressionStatement	set_seed ( s )	73:1:2099:2110	4733286	6	True				
ANR	4733326	CallExpression	set_seed ( s )		4733286	0					
ANR	4733327	Callee	set_seed		4733286	0					
ANR	4733328	Identifier	set_seed		4733286	0					
ANR	4733329	ArgumentList	s		4733286	1					
ANR	4733330	Argument	s		4733286	0					
ANR	4733331	Identifier	s		4733286	0					
ANR	4733332	ReturnType	void		4733286	1					
ANR	4733333	Identifier	ExponentialBackoff :: init		4733286	2					
ANR	4733334	ParameterList	"int minimum , int maximum , double b , int s"		4733286	3					
ANR	4733335	Parameter	int minimum	62:25:1883:1893	4733286	0	True				
ANR	4733336	ParameterType	int		4733286	0					
ANR	4733337	Identifier	minimum		4733286	1					
ANR	4733338	Parameter	int maximum	62:38:1896:1906	4733286	1	True				
ANR	4733339	ParameterType	int		4733286	0					
ANR	4733340	Identifier	maximum		4733286	1					
ANR	4733341	Parameter	double b	62:51:1909:1916	4733286	2	True				
ANR	4733342	ParameterType	double		4733286	0					
ANR	4733343	Identifier	b		4733286	1					
ANR	4733344	Parameter	int s	62:61:1919:1923	4733286	3	True				
ANR	4733345	ParameterType	int		4733286	0					
ANR	4733346	Identifier	s		4733286	1					
ANR	4733347	CFGEntryNode	ENTRY		4733286		True				
ANR	4733348	CFGExitNode	EXIT		4733286		True				
ANR	4733349	Symbol	* this		4733286						
ANR	4733350	Symbol	this -> prevBackoff		4733286						
ANR	4733351	Symbol	this -> tries		4733286						
ANR	4733352	Symbol	b		4733286						
ANR	4733353	Symbol	s		4733286						
ANR	4733354	Symbol	this -> seed		4733286						
ANR	4733355	Symbol	this		4733286						
ANR	4733356	Symbol	maximum		4733286						
ANR	4733357	Symbol	this -> max		4733286						
ANR	4733358	Symbol	minimum		4733286						
ANR	4733359	Symbol	this -> min		4733286						
ANR	4733360	Symbol	this -> base		4733286						
ANR	4733361	Function	ExponentialBackoff :: deepCopy	76:0:2115:2344							
ANR	4733362	FunctionDef	ExponentialBackoff :: deepCopy (const ExponentialBackoff & orig)		4733361	0					
ANR	4733363	CompoundStatement		77:60:2180:2344	4733361	0					
ANR	4733364	ExpressionStatement	this -> min = orig . min	78:1:2183:2203	4733361	0	True				
ANR	4733365	AssignmentExpression	this -> min = orig . min		4733361	0		=			
ANR	4733366	PtrMemberAccess	this -> min		4733361	0					
ANR	4733367	Identifier	this		4733361	0					
ANR	4733368	Identifier	min		4733361	1					
ANR	4733369	MemberAccess	orig . min		4733361	1					
ANR	4733370	Identifier	orig		4733361	0					
ANR	4733371	Identifier	min		4733361	1					
ANR	4733372	ExpressionStatement	this -> max = orig . max	79:1:2206:2226	4733361	1	True				
ANR	4733373	AssignmentExpression	this -> max = orig . max		4733361	0		=			
ANR	4733374	PtrMemberAccess	this -> max		4733361	0					
ANR	4733375	Identifier	this		4733361	0					
ANR	4733376	Identifier	max		4733361	1					
ANR	4733377	MemberAccess	orig . max		4733361	1					
ANR	4733378	Identifier	orig		4733361	0					
ANR	4733379	Identifier	max		4733361	1					
ANR	4733380	ExpressionStatement	this -> base = orig . base	80:1:2229:2251	4733361	2	True				
ANR	4733381	AssignmentExpression	this -> base = orig . base		4733361	0		=			
ANR	4733382	PtrMemberAccess	this -> base		4733361	0					
ANR	4733383	Identifier	this		4733361	0					
ANR	4733384	Identifier	base		4733361	1					
ANR	4733385	MemberAccess	orig . base		4733361	1					
ANR	4733386	Identifier	orig		4733361	0					
ANR	4733387	Identifier	base		4733361	1					
ANR	4733388	ExpressionStatement	this -> seed = orig . seed	81:1:2254:2276	4733361	3	True				
ANR	4733389	AssignmentExpression	this -> seed = orig . seed		4733361	0		=			
ANR	4733390	PtrMemberAccess	this -> seed		4733361	0					
ANR	4733391	Identifier	this		4733361	0					
ANR	4733392	Identifier	seed		4733361	1					
ANR	4733393	MemberAccess	orig . seed		4733361	1					
ANR	4733394	Identifier	orig		4733361	0					
ANR	4733395	Identifier	seed		4733361	1					
ANR	4733396	ExpressionStatement	this -> tries = orig . tries	82:1:2279:2303	4733361	4	True				
ANR	4733397	AssignmentExpression	this -> tries = orig . tries		4733361	0		=			
ANR	4733398	PtrMemberAccess	this -> tries		4733361	0					
ANR	4733399	Identifier	this		4733361	0					
ANR	4733400	Identifier	tries		4733361	1					
ANR	4733401	MemberAccess	orig . tries		4733361	1					
ANR	4733402	Identifier	orig		4733361	0					
ANR	4733403	Identifier	tries		4733361	1					
ANR	4733404	ExpressionStatement	this -> prevBackoff = orig . prevBackoff	83:1:2306:2342	4733361	5	True				
ANR	4733405	AssignmentExpression	this -> prevBackoff = orig . prevBackoff		4733361	0		=			
ANR	4733406	PtrMemberAccess	this -> prevBackoff		4733361	0					
ANR	4733407	Identifier	this		4733361	0					
ANR	4733408	Identifier	prevBackoff		4733361	1					
ANR	4733409	MemberAccess	orig . prevBackoff		4733361	1					
ANR	4733410	Identifier	orig		4733361	0					
ANR	4733411	Identifier	prevBackoff		4733361	1					
ANR	4733412	ReturnType	void		4733361	1					
ANR	4733413	Identifier	ExponentialBackoff :: deepCopy		4733361	2					
ANR	4733414	ParameterList	const ExponentialBackoff & orig		4733361	3					
ANR	4733415	Parameter	const ExponentialBackoff & orig	77:29:2149:2178	4733361	0	True				
ANR	4733416	ParameterType	const ExponentialBackoff &		4733361	0					
ANR	4733417	Identifier	orig		4733361	1					
ANR	4733418	CFGEntryNode	ENTRY		4733361		True				
ANR	4733419	CFGExitNode	EXIT		4733361		True				
ANR	4733420	Symbol	this -> tries		4733361						
ANR	4733421	Symbol	orig . min		4733361						
ANR	4733422	Symbol	orig . seed		4733361						
ANR	4733423	Symbol	this		4733361						
ANR	4733424	Symbol	orig . prevBackoff		4733361						
ANR	4733425	Symbol	this -> max		4733361						
ANR	4733426	Symbol	* this		4733361						
ANR	4733427	Symbol	this -> prevBackoff		4733361						
ANR	4733428	Symbol	orig . max		4733361						
ANR	4733429	Symbol	orig		4733361						
ANR	4733430	Symbol	orig . tries		4733361						
ANR	4733431	Symbol	this -> seed		4733361						
ANR	4733432	Symbol	orig . base		4733361						
ANR	4733433	Symbol	this -> min		4733361						
ANR	4733434	Symbol	this -> base		4733361						
ANR	4733435	Function	ExponentialBackoff :: noLeak	86:0:2347:2409							
ANR	4733436	FunctionDef	ExponentialBackoff :: noLeak ()		4733435	0					
ANR	4733437	CompoundStatement		87:28:2380:2409	4733435	0					
ANR	4733438	ReturnType	void		4733435	1					
ANR	4733439	Identifier	ExponentialBackoff :: noLeak		4733435	2					
ANR	4733440	ParameterList			4733435	3					
ANR	4733441	CFGEntryNode	ENTRY		4733435		True				
ANR	4733442	CFGExitNode	EXIT		4733435		True				
ANR	4733443	Function	ExponentialBackoff :: freshStart	94:0:2577:2628							
ANR	4733444	FunctionDef	ExponentialBackoff :: freshStart ()		4733443	0					
ANR	4733445	CompoundStatement		95:32:2614:2628	4733443	0					
ANR	4733446	ExpressionStatement	tries = 0	96:1:2617:2626	4733443	0	True				
ANR	4733447	AssignmentExpression	tries = 0		4733443	0		=			
ANR	4733448	Identifier	tries		4733443	0					
ANR	4733449	PrimaryExpression	0		4733443	1					
ANR	4733450	ReturnType	void		4733443	1					
ANR	4733451	Identifier	ExponentialBackoff :: freshStart		4733443	2					
ANR	4733452	ParameterList			4733443	3					
ANR	4733453	CFGEntryNode	ENTRY		4733443		True				
ANR	4733454	CFGExitNode	EXIT		4733443		True				
ANR	4733455	Symbol	tries		4733443						
ANR	4733456	Function	ExponentialBackoff :: nextBackoff	99:0:2631:3082							
ANR	4733457	FunctionDef	ExponentialBackoff :: nextBackoff ()		4733456	0					
ANR	4733458	CompoundStatement		100:33:2668:3082	4733456	0					
ANR	4733459	IfStatement	if ( tries < 1 )		4733456	0					
ANR	4733460	Condition	tries < 1	103:5:2690:2698	4733456	0	True				
ANR	4733461	RelationalExpression	tries < 1		4733456	0		<			
ANR	4733462	Identifier	tries		4733456	0					
ANR	4733463	PrimaryExpression	1		4733456	1					
ANR	4733464	CompoundStatement		4:16:32:32	4733456	1					
ANR	4733465	ReturnStatement	return min ;	104:2:2705:2715	4733456	0	True				
ANR	4733466	Identifier	min		4733456	0					
ANR	4733467	IdentifierDeclStatement	unsigned int backoff_mult = 2 << ( tries - 1 ) ;	108:1:2758:2802	4733456	1	True				
ANR	4733468	IdentifierDecl	backoff_mult = 2 << ( tries - 1 )		4733456	0					
ANR	4733469	IdentifierDeclType	unsigned int		4733456	0					
ANR	4733470	Identifier	backoff_mult		4733456	1					
ANR	4733471	AssignmentExpression	backoff_mult = 2 << ( tries - 1 )		4733456	2		=			
ANR	4733472	Identifier	backoff_mult		4733456	0					
ANR	4733473	ShiftExpression	2 << ( tries - 1 )		4733456	1		<<			
ANR	4733474	PrimaryExpression	2		4733456	0					
ANR	4733475	AdditiveExpression	tries - 1		4733456	1		-			
ANR	4733476	Identifier	tries		4733456	0					
ANR	4733477	PrimaryExpression	1		4733456	1					
ANR	4733478	IdentifierDeclStatement	int result = ( int ) ( base * backoff_mult ) ;	111:1:2808:2847	4733456	2	True				
ANR	4733479	IdentifierDecl	result = ( int ) ( base * backoff_mult )		4733456	0					
ANR	4733480	IdentifierDeclType	int		4733456	0					
ANR	4733481	Identifier	result		4733456	1					
ANR	4733482	AssignmentExpression	result = ( int ) ( base * backoff_mult )		4733456	2		=			
ANR	4733483	Identifier	result		4733456	0					
ANR	4733484	CastExpression	( int ) ( base * backoff_mult )		4733456	1					
ANR	4733485	CastTarget	int		4733456	0					
ANR	4733486	MultiplicativeExpression	base * backoff_mult		4733456	1		*			
ANR	4733487	Identifier	base		4733456	0					
ANR	4733488	Identifier	backoff_mult		4733456	1					
ANR	4733489	ExpressionStatement	result += min	114:1:2876:2889	4733456	3	True				
ANR	4733490	AssignmentExpression	result += min		4733456	0		+=			
ANR	4733491	Identifier	result		4733456	0					
ANR	4733492	Identifier	min		4733456	1					
ANR	4733493	IfStatement	if ( result > max || result < 0 )		4733456	4					
ANR	4733494	Condition	result > max || result < 0	118:5:2934:2959	4733456	0	True				
ANR	4733495	OrExpression	result > max || result < 0		4733456	0		||			
ANR	4733496	RelationalExpression	result > max		4733456	0		>			
ANR	4733497	Identifier	result		4733456	0					
ANR	4733498	Identifier	max		4733456	1					
ANR	4733499	RelationalExpression	result < 0		4733456	1		<			
ANR	4733500	Identifier	result		4733456	0					
ANR	4733501	PrimaryExpression	0		4733456	1					
ANR	4733502	CompoundStatement		19:33:293:293	4733456	1					
ANR	4733503	ExpressionStatement	result = max	119:2:2966:2978	4733456	0	True				
ANR	4733504	AssignmentExpression	result = max		4733456	0		=			
ANR	4733505	Identifier	result		4733456	0					
ANR	4733506	Identifier	max		4733456	1					
ANR	4733507	ExpressionStatement	tries ++	123:1:3006:3013	4733456	5	True				
ANR	4733508	PostIncDecOperationExpression	tries ++		4733456	0					
ANR	4733509	Identifier	tries		4733456	0					
ANR	4733510	IncDec	++		4733456	1					
ANR	4733511	ExpressionStatement	prevBackoff = result	126:1:3039:3059	4733456	6	True				
ANR	4733512	AssignmentExpression	prevBackoff = result		4733456	0		=			
ANR	4733513	Identifier	prevBackoff		4733456	0					
ANR	4733514	Identifier	result		4733456	1					
ANR	4733515	ReturnStatement	return ( result ) ;	128:1:3064:3080	4733456	7	True				
ANR	4733516	Identifier	result		4733456	0					
ANR	4733517	ReturnType	int		4733456	1					
ANR	4733518	Identifier	ExponentialBackoff :: nextBackoff		4733456	2					
ANR	4733519	ParameterList			4733456	3					
ANR	4733520	CFGEntryNode	ENTRY		4733456		True				
ANR	4733521	CFGExitNode	EXIT		4733456		True				
ANR	4733522	Symbol	result		4733456						
ANR	4733523	Symbol	tries		4733456						
ANR	4733524	Symbol	min		4733456						
ANR	4733525	Symbol	backoff_mult		4733456						
ANR	4733526	Symbol	max		4733456						
ANR	4733527	Symbol	prevBackoff		4733456						
ANR	4733528	Symbol	base		4733456						
ANR	4733529	Function	ExponentialBackoff :: nextRandomBackoff	131:0:3085:3645							
ANR	4733530	FunctionDef	ExponentialBackoff :: nextRandomBackoff ()		4733529	0					
ANR	4733531	CompoundStatement		132:39:3128:3645	4733529	0					
ANR	4733532	IfStatement	if ( tries < 1 )		4733529	0					
ANR	4733533	Condition	tries < 1	135:5:3150:3158	4733529	0	True				
ANR	4733534	RelationalExpression	tries < 1		4733529	0		<			
ANR	4733535	Identifier	tries		4733529	0					
ANR	4733536	PrimaryExpression	1		4733529	1					
ANR	4733537	CompoundStatement		4:16:32:32	4733529	1					
ANR	4733538	ReturnStatement	return min ;	136:2:3165:3175	4733529	0	True				
ANR	4733539	Identifier	min		4733529	0					
ANR	4733540	IdentifierDeclStatement	unsigned int max_mult = 2 << ( tries - 1 ) ;	140:1:3218:3258	4733529	1	True				
ANR	4733541	IdentifierDecl	max_mult = 2 << ( tries - 1 )		4733529	0					
ANR	4733542	IdentifierDeclType	unsigned int		4733529	0					
ANR	4733543	Identifier	max_mult		4733529	1					
ANR	4733544	AssignmentExpression	max_mult = 2 << ( tries - 1 )		4733529	2		=			
ANR	4733545	Identifier	max_mult		4733529	0					
ANR	4733546	ShiftExpression	2 << ( tries - 1 )		4733529	1		<<			
ANR	4733547	PrimaryExpression	2		4733529	0					
ANR	4733548	AdditiveExpression	tries - 1		4733529	1		-			
ANR	4733549	Identifier	tries		4733529	0					
ANR	4733550	PrimaryExpression	1		4733529	1					
ANR	4733551	IdentifierDeclStatement	unsigned int backoff_mult = get_random_int ( ) % max_mult ;	143:1:3311:3366	4733529	2	True				
ANR	4733552	IdentifierDecl	backoff_mult = get_random_int ( ) % max_mult		4733529	0					
ANR	4733553	IdentifierDeclType	unsigned int		4733529	0					
ANR	4733554	Identifier	backoff_mult		4733529	1					
ANR	4733555	AssignmentExpression	backoff_mult = get_random_int ( ) % max_mult		4733529	2		=			
ANR	4733556	Identifier	backoff_mult		4733529	0					
ANR	4733557	MultiplicativeExpression	get_random_int ( ) % max_mult		4733529	1		%			
ANR	4733558	CallExpression	get_random_int ( )		4733529	0					
ANR	4733559	Callee	get_random_int		4733529	0					
ANR	4733560	Identifier	get_random_int		4733529	0					
ANR	4733561	ArgumentList			4733529	1					
ANR	4733562	Identifier	max_mult		4733529	1					
ANR	4733563	IdentifierDeclStatement	int result = ( int ) ( base * backoff_mult ) ;	145:1:3371:3410	4733529	3	True				
ANR	4733564	IdentifierDecl	result = ( int ) ( base * backoff_mult )		4733529	0					
ANR	4733565	IdentifierDeclType	int		4733529	0					
ANR	4733566	Identifier	result		4733529	1					
ANR	4733567	AssignmentExpression	result = ( int ) ( base * backoff_mult )		4733529	2		=			
ANR	4733568	Identifier	result		4733529	0					
ANR	4733569	CastExpression	( int ) ( base * backoff_mult )		4733529	1					
ANR	4733570	CastTarget	int		4733529	0					
ANR	4733571	MultiplicativeExpression	base * backoff_mult		4733529	1		*			
ANR	4733572	Identifier	base		4733529	0					
ANR	4733573	Identifier	backoff_mult		4733529	1					
ANR	4733574	ExpressionStatement	result += min	148:1:3439:3452	4733529	4	True				
ANR	4733575	AssignmentExpression	result += min		4733529	0		+=			
ANR	4733576	Identifier	result		4733529	0					
ANR	4733577	Identifier	min		4733529	1					
ANR	4733578	IfStatement	if ( result > max || result < 0 )		4733529	5					
ANR	4733579	Condition	result > max || result < 0	152:5:3497:3522	4733529	0	True				
ANR	4733580	OrExpression	result > max || result < 0		4733529	0		||			
ANR	4733581	RelationalExpression	result > max		4733529	0		>			
ANR	4733582	Identifier	result		4733529	0					
ANR	4733583	Identifier	max		4733529	1					
ANR	4733584	RelationalExpression	result < 0		4733529	1		<			
ANR	4733585	Identifier	result		4733529	0					
ANR	4733586	PrimaryExpression	0		4733529	1					
ANR	4733587	CompoundStatement		21:33:396:396	4733529	1					
ANR	4733588	ExpressionStatement	result = max	153:2:3529:3541	4733529	0	True				
ANR	4733589	AssignmentExpression	result = max		4733529	0		=			
ANR	4733590	Identifier	result		4733529	0					
ANR	4733591	Identifier	max		4733529	1					
ANR	4733592	ExpressionStatement	tries ++	157:1:3569:3576	4733529	6	True				
ANR	4733593	PostIncDecOperationExpression	tries ++		4733529	0					
ANR	4733594	Identifier	tries		4733529	0					
ANR	4733595	IncDec	++		4733529	1					
ANR	4733596	ExpressionStatement	prevBackoff = result	160:1:3602:3622	4733529	7	True				
ANR	4733597	AssignmentExpression	prevBackoff = result		4733529	0		=			
ANR	4733598	Identifier	prevBackoff		4733529	0					
ANR	4733599	Identifier	result		4733529	1					
ANR	4733600	ReturnStatement	return ( result ) ;	162:1:3627:3643	4733529	8	True				
ANR	4733601	Identifier	result		4733529	0					
ANR	4733602	ReturnType	int		4733529	1					
ANR	4733603	Identifier	ExponentialBackoff :: nextRandomBackoff		4733529	2					
ANR	4733604	ParameterList			4733529	3					
ANR	4733605	CFGEntryNode	ENTRY		4733529		True				
ANR	4733606	CFGExitNode	EXIT		4733529		True				
ANR	4733607	Symbol	result		4733529						
ANR	4733608	Symbol	tries		4733529						
ANR	4733609	Symbol	min		4733529						
ANR	4733610	Symbol	backoff_mult		4733529						
ANR	4733611	Symbol	max		4733529						
ANR	4733612	Symbol	prevBackoff		4733529						
ANR	4733613	Symbol	get_random_int		4733529						
ANR	4733614	Symbol	max_mult		4733529						
ANR	4733615	Symbol	base		4733529						
ANR	4733616	Function	ExponentialBackoff :: numberOfTries	165:0:3648:3705							
ANR	4733617	FunctionDef	ExponentialBackoff :: numberOfTries ()		4733616	0					
ANR	4733618	CompoundStatement		166:35:3687:3705	4733616	0					
ANR	4733619	ReturnStatement	return ( tries ) ;	167:1:3690:3703	4733616	0	True				
ANR	4733620	Identifier	tries		4733616	0					
ANR	4733621	ReturnType	int		4733616	1					
ANR	4733622	Identifier	ExponentialBackoff :: numberOfTries		4733616	2					
ANR	4733623	ParameterList			4733616	3					
ANR	4733624	CFGEntryNode	ENTRY		4733616		True				
ANR	4733625	CFGExitNode	EXIT		4733616		True				
ANR	4733626	Symbol	tries		4733616						
