command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5570854	File	data/converged/CVE-2011-4930_htcondor/vmgahp_main.cpp								
ANR	5570855	DeclStmt									
ANR	5570856	Decl							const char	const char *	vmgahp_version
ANR	5570857	DeclStmt									
ANR	5570858	Decl							VMGahp	VMGahp *	vmgahp
ANR	5570859	DeclStmt									
ANR	5570860	Decl							int	int	vmgahp_stdout_pipe
ANR	5570861	DeclStmt									
ANR	5570862	Decl							int	int	vmgahp_stderr_pipe
ANR	5570863	DeclStmt									
ANR	5570864	Decl							int	int	vmgahp_mode
ANR	5570865	DeclStmt									
ANR	5570866	Decl							PBuffer	PBuffer	vmgahp_stderr_buffer
ANR	5570867	DeclStmt									
ANR	5570868	Decl							int	int	vmgahp_stderr_tid
ANR	5570869	DeclStmt									
ANR	5570870	Decl							int	int	oriDebugFlags
ANR	5570871	DeclStmt									
ANR	5570872	Decl							MyString	MyString	workingdir
ANR	5570873	DeclStmt									
ANR	5570874	Decl							extern MyString	extern MyString	caller_name
ANR	5570875	DeclStmt									
ANR	5570876	Decl							extern MyString	extern MyString	job_user_name
ANR	5570877	DeclStmt									
ANR	5570878	Decl							extern uid_t	extern uid_t	caller_uid
ANR	5570879	DeclStmt									
ANR	5570880	Decl							extern uid_t	extern uid_t	caller_gid
ANR	5570881	DeclStmt									
ANR	5570882	Decl							extern uid_t	extern uid_t	job_user_uid
ANR	5570883	DeclStmt									
ANR	5570884	Decl							extern uid_t	extern uid_t	job_user_gid
ANR	5570885	Function	vm_cleanup	56:0:1748:1844							
ANR	5570886	FunctionDef	vm_cleanup ()		5570885	0					
ANR	5570887	CompoundStatement		58:0:1770:1844	5570885	0					
ANR	5570888	IfStatement	if ( vmgahp )		5570885	0					
ANR	5570889	Condition	vmgahp	59:4:1776:1781	5570885	0	True				
ANR	5570890	Identifier	vmgahp		5570885	0					
ANR	5570891	CompoundStatement		2:12:13:13	5570885	1					
ANR	5570892	Statement	delete	60:2:1788:1793	5570885	0	True				
ANR	5570893	ExpressionStatement	vmgahp	60:9:1795:1801	5570885	1	True				
ANR	5570894	Identifier	vmgahp		5570885	0					
ANR	5570895	ExpressionStatement	vmgahp = NULL	61:2:1805:1818	5570885	2	True				
ANR	5570896	AssignmentExpression	vmgahp = NULL		5570885	0		=			
ANR	5570897	Identifier	vmgahp		5570885	0					
ANR	5570898	Identifier	NULL		5570885	1					
ANR	5570899	ExpressionStatement	sleep ( 2 )	62:2:1822:1830	5570885	3	True				
ANR	5570900	CallExpression	sleep ( 2 )		5570885	0					
ANR	5570901	Callee	sleep		5570885	0					
ANR	5570902	Identifier	sleep		5570885	0					
ANR	5570903	ArgumentList	2		5570885	1					
ANR	5570904	Argument	2		5570885	0					
ANR	5570905	PrimaryExpression	2		5570885	0					
ANR	5570906	ReturnStatement	return ;	64:1:1836:1842	5570885	1	True				
ANR	5570907	ReturnType	void		5570885	1					
ANR	5570908	Identifier	vm_cleanup		5570885	2					
ANR	5570909	ParameterList			5570885	3					
ANR	5570910	CFGEntryNode	ENTRY		5570885		True				
ANR	5570911	CFGExitNode	EXIT		5570885		True				
ANR	5570912	Symbol	NULL		5570885						
ANR	5570913	Symbol	vmgahp		5570885						
ANR	5570914	Function	Init	67:0:1847:1860							
ANR	5570915	FunctionDef	Init ()		5570914	0					
ANR	5570916	CompoundStatement		67:12:1859:1860	5570914	0					
ANR	5570917	ReturnType	void		5570914	1					
ANR	5570918	Identifier	Init		5570914	2					
ANR	5570919	ParameterList			5570914	3					
ANR	5570920	CFGEntryNode	ENTRY		5570914		True				
ANR	5570921	CFGExitNode	EXIT		5570914		True				
ANR	5570922	Function	Register	68:0:1862:1879							
ANR	5570923	FunctionDef	Register ()		5570922	0					
ANR	5570924	CompoundStatement		68:16:1878:1879	5570922	0					
ANR	5570925	ReturnType	void		5570922	1					
ANR	5570926	Identifier	Register		5570922	2					
ANR	5570927	ParameterList			5570922	3					
ANR	5570928	CFGEntryNode	ENTRY		5570922		True				
ANR	5570929	CFGExitNode	EXIT		5570922		True				
ANR	5570930	Function	Reconfig	69:0:1881:2675							
ANR	5570931	FunctionDef	Reconfig ()		5570930	0					
ANR	5570932	CompoundStatement		70:0:1897:2675	5570930	0					
ANR	5570933	IfStatement	if ( ! workingdir . IsEmpty ( ) )		5570930	0					
ANR	5570934	Condition	! workingdir . IsEmpty ( )	75:5:2141:2161	5570930	0	True				
ANR	5570935	UnaryOperationExpression	! workingdir . IsEmpty ( )		5570930	0					
ANR	5570936	UnaryOperator	!		5570930	0					
ANR	5570937	CallExpression	workingdir . IsEmpty ( )		5570930	1					
ANR	5570938	Callee	workingdir . IsEmpty		5570930	0					
ANR	5570939	MemberAccess	workingdir . IsEmpty		5570930	0					
ANR	5570940	Identifier	workingdir		5570930	0					
ANR	5570941	Identifier	IsEmpty		5570930	1					
ANR	5570942	ArgumentList			5570930	1					
ANR	5570943	CompoundStatement		6:29:267:267	5570930	1					
ANR	5570944	IfStatement	if ( chdir ( workingdir . Value ( ) ) < 0 )		5570930	0					
ANR	5570945	Condition	chdir ( workingdir . Value ( ) ) < 0	76:6:2173:2201	5570930	0	True				
ANR	5570946	RelationalExpression	chdir ( workingdir . Value ( ) ) < 0		5570930	0		<			
ANR	5570947	CallExpression	chdir ( workingdir . Value ( ) )		5570930	0					
ANR	5570948	Callee	chdir		5570930	0					
ANR	5570949	Identifier	chdir		5570930	0					
ANR	5570950	ArgumentList	workingdir . Value ( )		5570930	1					
ANR	5570951	Argument	workingdir . Value ( )		5570930	0					
ANR	5570952	CallExpression	workingdir . Value ( )		5570930	0					
ANR	5570953	Callee	workingdir . Value		5570930	0					
ANR	5570954	MemberAccess	workingdir . Value		5570930	0					
ANR	5570955	Identifier	workingdir		5570930	0					
ANR	5570956	Identifier	Value		5570930	1					
ANR	5570957	ArgumentList			5570930	1					
ANR	5570958	PrimaryExpression	0		5570930	1					
ANR	5570959	CompoundStatement		7:38:307:307	5570930	1					
ANR	5570960	ExpressionStatement	DC_Exit ( 1 )	77:3:2210:2220	5570930	0	True				
ANR	5570961	CallExpression	DC_Exit ( 1 )		5570930	0					
ANR	5570962	Callee	DC_Exit		5570930	0					
ANR	5570963	Identifier	DC_Exit		5570930	0					
ANR	5570964	ArgumentList	1		5570930	1					
ANR	5570965	Argument	1		5570930	0					
ANR	5570966	PrimaryExpression	1		5570930	0					
ANR	5570967	ExpressionStatement	oriDebugFlags = DebugFlags	83:1:2293:2319	5570930	1	True				
ANR	5570968	AssignmentExpression	oriDebugFlags = DebugFlags		5570930	0		=			
ANR	5570969	Identifier	oriDebugFlags		5570930	0					
ANR	5570970	Identifier	DebugFlags		5570930	1					
ANR	5570971	IfStatement	if ( Termlog )		5570930	2					
ANR	5570972	Condition	Termlog	84:5:2326:2332	5570930	0	True				
ANR	5570973	Identifier	Termlog		5570930	0					
ANR	5570974	CompoundStatement		15:15:438:438	5570930	1					
ANR	5570975	ExpressionStatement	DebugFlags = 0	85:2:2340:2354	5570930	0	True				
ANR	5570976	AssignmentExpression	DebugFlags = 0		5570930	0		=			
ANR	5570977	Identifier	DebugFlags		5570930	0					
ANR	5570978	PrimaryExpression	0		5570930	1					
ANR	5570979	IfStatement	if ( ( vmgahp_mode != VMGAHP_TEST_MODE ) && ( vmgahp_mode != VMGAHP_KILL_MODE ) )		5570930	3					
ANR	5570980	Condition	( vmgahp_mode != VMGAHP_TEST_MODE ) && ( vmgahp_mode != VMGAHP_KILL_MODE )	88:5:2365:2437	5570930	0	True				
ANR	5570981	AndExpression	( vmgahp_mode != VMGAHP_TEST_MODE ) && ( vmgahp_mode != VMGAHP_KILL_MODE )		5570930	0		&&			
ANR	5570982	EqualityExpression	vmgahp_mode != VMGAHP_TEST_MODE		5570930	0		!=			
ANR	5570983	Identifier	vmgahp_mode		5570930	0					
ANR	5570984	Identifier	VMGAHP_TEST_MODE		5570930	1					
ANR	5570985	EqualityExpression	vmgahp_mode != VMGAHP_KILL_MODE		5570930	1		!=			
ANR	5570986	Identifier	vmgahp_mode		5570930	0					
ANR	5570987	Identifier	VMGAHP_KILL_MODE		5570930	1					
ANR	5570988	CompoundStatement		21:2:547:589	5570930	1					
ANR	5570989	IdentifierDeclStatement	"char * gahp_log_file = param ( ""VM_GAHP_LOG"" ) ;"	90:2:2445:2487	5570930	0	True				
ANR	5570990	IdentifierDecl	"* gahp_log_file = param ( ""VM_GAHP_LOG"" )"		5570930	0					
ANR	5570991	IdentifierDeclType	char *		5570930	0					
ANR	5570992	Identifier	gahp_log_file		5570930	1					
ANR	5570993	AssignmentExpression	"* gahp_log_file = param ( ""VM_GAHP_LOG"" )"		5570930	2		=			
ANR	5570994	Identifier	gahp_log_file		5570930	0					
ANR	5570995	CallExpression	"param ( ""VM_GAHP_LOG"" )"		5570930	1					
ANR	5570996	Callee	param		5570930	0					
ANR	5570997	Identifier	param		5570930	0					
ANR	5570998	ArgumentList	"""VM_GAHP_LOG"""		5570930	1					
ANR	5570999	Argument	"""VM_GAHP_LOG"""		5570930	0					
ANR	5571000	PrimaryExpression	"""VM_GAHP_LOG"""		5570930	0					
ANR	5571001	IfStatement	if ( gahp_log_file )		5570930	1					
ANR	5571002	Condition	gahp_log_file	91:6:2495:2507	5570930	0	True				
ANR	5571003	Identifier	gahp_log_file		5570930	0					
ANR	5571004	CompoundStatement		22:22:613:613	5570930	1					
ANR	5571005	IfStatement	"if ( ! strcmp ( gahp_log_file , NULL_FILE ) )"		5570930	0					
ANR	5571006	Condition	"! strcmp ( gahp_log_file , NULL_FILE )"	92:7:2520:2552	5570930	0	True				
ANR	5571007	UnaryOperationExpression	"! strcmp ( gahp_log_file , NULL_FILE )"		5570930	0					
ANR	5571008	UnaryOperator	!		5570930	0					
ANR	5571009	CallExpression	"strcmp ( gahp_log_file , NULL_FILE )"		5570930	1					
ANR	5571010	Callee	strcmp		5570930	0					
ANR	5571011	Identifier	strcmp		5570930	0					
ANR	5571012	ArgumentList	gahp_log_file		5570930	1					
ANR	5571013	Argument	gahp_log_file		5570930	0					
ANR	5571014	Identifier	gahp_log_file		5570930	0					
ANR	5571015	Argument	NULL_FILE		5570930	1					
ANR	5571016	Identifier	NULL_FILE		5570930	0					
ANR	5571017	CompoundStatement		23:43:658:658	5570930	1					
ANR	5571018	ExpressionStatement	oriDebugFlags = 0	94:4:2600:2617	5570930	0	True				
ANR	5571019	AssignmentExpression	oriDebugFlags = 0		5570930	0		=			
ANR	5571020	Identifier	oriDebugFlags		5570930	0					
ANR	5571021	PrimaryExpression	0		5570930	1					
ANR	5571022	ExpressionStatement	DebugFlags = 0	95:4:2623:2637	5570930	1	True				
ANR	5571023	AssignmentExpression	DebugFlags = 0		5570930	0		=			
ANR	5571024	Identifier	DebugFlags		5570930	0					
ANR	5571025	PrimaryExpression	0		5570930	1					
ANR	5571026	ExpressionStatement	free ( gahp_log_file )	97:3:2647:2666	5570930	1	True				
ANR	5571027	CallExpression	free ( gahp_log_file )		5570930	0					
ANR	5571028	Callee	free		5570930	0					
ANR	5571029	Identifier	free		5570930	0					
ANR	5571030	ArgumentList	gahp_log_file		5570930	1					
ANR	5571031	Argument	gahp_log_file		5570930	0					
ANR	5571032	Identifier	gahp_log_file		5570930	0					
ANR	5571033	ReturnType	void		5570930	1					
ANR	5571034	Identifier	Reconfig		5570930	2					
ANR	5571035	ParameterList			5570930	3					
ANR	5571036	CFGEntryNode	ENTRY		5570930		True				
ANR	5571037	CFGExitNode	EXIT		5570930		True				
ANR	5571038	Symbol	strcmp		5570930						
ANR	5571039	Symbol	workingdir . IsEmpty		5570930						
ANR	5571040	Symbol	gahp_log_file		5570930						
ANR	5571041	Symbol	Termlog		5570930						
ANR	5571042	Symbol	workingdir		5570930						
ANR	5571043	Symbol	DebugFlags		5570930						
ANR	5571044	Symbol	chdir		5570930						
ANR	5571045	Symbol	workingdir . Value		5570930						
ANR	5571046	Symbol	oriDebugFlags		5570930						
ANR	5571047	Symbol	param		5570930						
ANR	5571048	Symbol	vmgahp_mode		5570930						
ANR	5571049	Symbol	NULL_FILE		5570930						
ANR	5571050	Symbol	VMGAHP_TEST_MODE		5570930						
ANR	5571051	Symbol	VMGAHP_KILL_MODE		5570930						
ANR	5571052	Function	main_config	102:0:2678:2712							
ANR	5571053	FunctionDef	main_config ()		5571052	0					
ANR	5571054	CompoundStatement		104:0:2697:2712	5571052	0					
ANR	5571055	ExpressionStatement	Reconfig ( )	105:1:2700:2710	5571052	0	True				
ANR	5571056	CallExpression	Reconfig ( )		5571052	0					
ANR	5571057	Callee	Reconfig		5571052	0					
ANR	5571058	Identifier	Reconfig		5571052	0					
ANR	5571059	ArgumentList			5571052	1					
ANR	5571060	ReturnType	void		5571052	1					
ANR	5571061	Identifier	main_config		5571052	2					
ANR	5571062	ParameterList			5571052	3					
ANR	5571063	CFGEntryNode	ENTRY		5571052		True				
ANR	5571064	CFGExitNode	EXIT		5571052		True				
ANR	5571065	Function	main_shutdown_fast	108:0:2715:2831							
ANR	5571066	FunctionDef	main_shutdown_fast ()		5571065	0					
ANR	5571067	CompoundStatement		110:0:2741:2831	5571065	0					
ANR	5571068	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Received Signal for shutdown fast\\n"" )"	111:1:2744:2801	5571065	0	True				
ANR	5571069	CallExpression	"vmprintf ( D_ALWAYS , ""Received Signal for shutdown fast\\n"" )"		5571065	0					
ANR	5571070	Callee	vmprintf		5571065	0					
ANR	5571071	Identifier	vmprintf		5571065	0					
ANR	5571072	ArgumentList	D_ALWAYS		5571065	1					
ANR	5571073	Argument	D_ALWAYS		5571065	0					
ANR	5571074	Identifier	D_ALWAYS		5571065	0					
ANR	5571075	Argument	"""Received Signal for shutdown fast\\n"""		5571065	1					
ANR	5571076	PrimaryExpression	"""Received Signal for shutdown fast\\n"""		5571065	0					
ANR	5571077	ExpressionStatement	vm_cleanup ( )	112:1:2804:2816	5571065	1	True				
ANR	5571078	CallExpression	vm_cleanup ( )		5571065	0					
ANR	5571079	Callee	vm_cleanup		5571065	0					
ANR	5571080	Identifier	vm_cleanup		5571065	0					
ANR	5571081	ArgumentList			5571065	1					
ANR	5571082	ExpressionStatement	DC_Exit ( 0 )	113:1:2819:2829	5571065	2	True				
ANR	5571083	CallExpression	DC_Exit ( 0 )		5571065	0					
ANR	5571084	Callee	DC_Exit		5571065	0					
ANR	5571085	Identifier	DC_Exit		5571065	0					
ANR	5571086	ArgumentList	0		5571065	1					
ANR	5571087	Argument	0		5571065	0					
ANR	5571088	PrimaryExpression	0		5571065	0					
ANR	5571089	ReturnType	void		5571065	1					
ANR	5571090	Identifier	main_shutdown_fast		5571065	2					
ANR	5571091	ParameterList			5571065	3					
ANR	5571092	CFGEntryNode	ENTRY		5571065		True				
ANR	5571093	CFGExitNode	EXIT		5571065		True				
ANR	5571094	Symbol	D_ALWAYS		5571065						
ANR	5571095	Function	main_shutdown_graceful	116:0:2834:2960							
ANR	5571096	FunctionDef	main_shutdown_graceful ()		5571095	0					
ANR	5571097	CompoundStatement		118:0:2864:2960	5571095	0					
ANR	5571098	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Received Signal for shutdown gracefully\\n"" )"	119:1:2867:2930	5571095	0	True				
ANR	5571099	CallExpression	"vmprintf ( D_ALWAYS , ""Received Signal for shutdown gracefully\\n"" )"		5571095	0					
ANR	5571100	Callee	vmprintf		5571095	0					
ANR	5571101	Identifier	vmprintf		5571095	0					
ANR	5571102	ArgumentList	D_ALWAYS		5571095	1					
ANR	5571103	Argument	D_ALWAYS		5571095	0					
ANR	5571104	Identifier	D_ALWAYS		5571095	0					
ANR	5571105	Argument	"""Received Signal for shutdown gracefully\\n"""		5571095	1					
ANR	5571106	PrimaryExpression	"""Received Signal for shutdown gracefully\\n"""		5571095	0					
ANR	5571107	ExpressionStatement	vm_cleanup ( )	120:1:2933:2945	5571095	1	True				
ANR	5571108	CallExpression	vm_cleanup ( )		5571095	0					
ANR	5571109	Callee	vm_cleanup		5571095	0					
ANR	5571110	Identifier	vm_cleanup		5571095	0					
ANR	5571111	ArgumentList			5571095	1					
ANR	5571112	ExpressionStatement	DC_Exit ( 0 )	121:1:2948:2958	5571095	2	True				
ANR	5571113	CallExpression	DC_Exit ( 0 )		5571095	0					
ANR	5571114	Callee	DC_Exit		5571095	0					
ANR	5571115	Identifier	DC_Exit		5571095	0					
ANR	5571116	ArgumentList	0		5571095	1					
ANR	5571117	Argument	0		5571095	0					
ANR	5571118	PrimaryExpression	0		5571095	0					
ANR	5571119	ReturnType	void		5571095	1					
ANR	5571120	Identifier	main_shutdown_graceful		5571095	2					
ANR	5571121	ParameterList			5571095	3					
ANR	5571122	CFGEntryNode	ENTRY		5571095		True				
ANR	5571123	CFGExitNode	EXIT		5571095		True				
ANR	5571124	Symbol	D_ALWAYS		5571095						
ANR	5571125	Function	init_uids	124:0:2963:4870							
ANR	5571126	FunctionDef	init_uids ()		5571125	0					
ANR	5571127	CompoundStatement		126:0:2980:4870	5571125	0					
ANR	5571128	IdentifierDeclStatement	bool SwitchUid = can_switch_ids ( ) || privsep_enabled ( ) ;	128:1:3003:3057	5571125	0	True				
ANR	5571129	IdentifierDecl	SwitchUid = can_switch_ids ( ) || privsep_enabled ( )		5571125	0					
ANR	5571130	IdentifierDeclType	bool		5571125	0					
ANR	5571131	Identifier	SwitchUid		5571125	1					
ANR	5571132	AssignmentExpression	SwitchUid = can_switch_ids ( ) || privsep_enabled ( )		5571125	2		=			
ANR	5571133	Identifier	SwitchUid		5571125	0					
ANR	5571134	OrExpression	can_switch_ids ( ) || privsep_enabled ( )		5571125	1		||			
ANR	5571135	CallExpression	can_switch_ids ( )		5571125	0					
ANR	5571136	Callee	can_switch_ids		5571125	0					
ANR	5571137	Identifier	can_switch_ids		5571125	0					
ANR	5571138	ArgumentList			5571125	1					
ANR	5571139	CallExpression	privsep_enabled ( )		5571125	1					
ANR	5571140	Callee	privsep_enabled		5571125	0					
ANR	5571141	Identifier	privsep_enabled		5571125	0					
ANR	5571142	ArgumentList			5571125	1					
ANR	5571143	ExpressionStatement	caller_uid = getuid ( )	130:1:3061:3082	5571125	1	True				
ANR	5571144	AssignmentExpression	caller_uid = getuid ( )		5571125	0		=			
ANR	5571145	Identifier	caller_uid		5571125	0					
ANR	5571146	CallExpression	getuid ( )		5571125	1					
ANR	5571147	Callee	getuid		5571125	0					
ANR	5571148	Identifier	getuid		5571125	0					
ANR	5571149	ArgumentList			5571125	1					
ANR	5571150	ExpressionStatement	caller_gid = getgid ( )	131:1:3085:3106	5571125	2	True				
ANR	5571151	AssignmentExpression	caller_gid = getgid ( )		5571125	0		=			
ANR	5571152	Identifier	caller_gid		5571125	0					
ANR	5571153	CallExpression	getgid ( )		5571125	1					
ANR	5571154	Callee	getgid		5571125	0					
ANR	5571155	Identifier	getgid		5571125	0					
ANR	5571156	ArgumentList			5571125	1					
ANR	5571157	IdentifierDeclStatement	MyString user_uid ;	134:1:3131:3148	5571125	3	True				
ANR	5571158	IdentifierDecl	user_uid		5571125	0					
ANR	5571159	IdentifierDeclType	MyString		5571125	0					
ANR	5571160	Identifier	user_uid		5571125	1					
ANR	5571161	IdentifierDeclStatement	MyString user_gid ;	135:1:3151:3168	5571125	4	True				
ANR	5571162	IdentifierDecl	user_gid		5571125	0					
ANR	5571163	IdentifierDeclType	MyString		5571125	0					
ANR	5571164	Identifier	user_gid		5571125	1					
ANR	5571165	ExpressionStatement	"user_uid = getenv ( ""VMGAHP_USER_UID"" )"	136:1:3171:3207	5571125	5	True				
ANR	5571166	AssignmentExpression	"user_uid = getenv ( ""VMGAHP_USER_UID"" )"		5571125	0		=			
ANR	5571167	Identifier	user_uid		5571125	0					
ANR	5571168	CallExpression	"getenv ( ""VMGAHP_USER_UID"" )"		5571125	1					
ANR	5571169	Callee	getenv		5571125	0					
ANR	5571170	Identifier	getenv		5571125	0					
ANR	5571171	ArgumentList	"""VMGAHP_USER_UID"""		5571125	1					
ANR	5571172	Argument	"""VMGAHP_USER_UID"""		5571125	0					
ANR	5571173	PrimaryExpression	"""VMGAHP_USER_UID"""		5571125	0					
ANR	5571174	IfStatement	if ( user_uid . IsEmpty ( ) == false )		5571125	6					
ANR	5571175	Condition	user_uid . IsEmpty ( ) == false	137:5:3214:3240	5571125	0	True				
ANR	5571176	EqualityExpression	user_uid . IsEmpty ( ) == false		5571125	0		==			
ANR	5571177	CallExpression	user_uid . IsEmpty ( )		5571125	0					
ANR	5571178	Callee	user_uid . IsEmpty		5571125	0					
ANR	5571179	MemberAccess	user_uid . IsEmpty		5571125	0					
ANR	5571180	Identifier	user_uid		5571125	0					
ANR	5571181	Identifier	IsEmpty		5571125	1					
ANR	5571182	ArgumentList			5571125	1					
ANR	5571183	Identifier	false		5571125	1					
ANR	5571184	CompoundStatement		13:2:267:329	5571125	1					
ANR	5571185	IdentifierDeclStatement	"int env_uid = ( int ) strtol ( user_uid . Value ( ) , ( char * * ) NULL , 10 ) ;"	138:2:3248:3310	5571125	0	True				
ANR	5571186	IdentifierDecl	"env_uid = ( int ) strtol ( user_uid . Value ( ) , ( char * * ) NULL , 10 )"		5571125	0					
ANR	5571187	IdentifierDeclType	int		5571125	0					
ANR	5571188	Identifier	env_uid		5571125	1					
ANR	5571189	AssignmentExpression	"env_uid = ( int ) strtol ( user_uid . Value ( ) , ( char * * ) NULL , 10 )"		5571125	2		=			
ANR	5571190	Identifier	env_uid		5571125	0					
ANR	5571191	CastExpression	"( int ) strtol ( user_uid . Value ( ) , ( char * * ) NULL , 10 )"		5571125	1					
ANR	5571192	CastTarget	int		5571125	0					
ANR	5571193	CallExpression	"strtol ( user_uid . Value ( ) , ( char * * ) NULL , 10 )"		5571125	1					
ANR	5571194	Callee	strtol		5571125	0					
ANR	5571195	Identifier	strtol		5571125	0					
ANR	5571196	ArgumentList	user_uid . Value ( )		5571125	1					
ANR	5571197	Argument	user_uid . Value ( )		5571125	0					
ANR	5571198	CallExpression	user_uid . Value ( )		5571125	0					
ANR	5571199	Callee	user_uid . Value		5571125	0					
ANR	5571200	MemberAccess	user_uid . Value		5571125	0					
ANR	5571201	Identifier	user_uid		5571125	0					
ANR	5571202	Identifier	Value		5571125	1					
ANR	5571203	ArgumentList			5571125	1					
ANR	5571204	Argument	( char * * ) NULL		5571125	1					
ANR	5571205	CastExpression	( char * * ) NULL		5571125	0					
ANR	5571206	CastTarget	char * *		5571125	0					
ANR	5571207	Identifier	NULL		5571125	1					
ANR	5571208	Argument	10		5571125	2					
ANR	5571209	PrimaryExpression	10		5571125	0					
ANR	5571210	IfStatement	if ( env_uid > 0 )		5571125	1					
ANR	5571211	Condition	env_uid > 0	139:6:3318:3328	5571125	0	True				
ANR	5571212	RelationalExpression	env_uid > 0		5571125	0		>			
ANR	5571213	Identifier	env_uid		5571125	0					
ANR	5571214	PrimaryExpression	0		5571125	1					
ANR	5571215	CompoundStatement		14:20:351:351	5571125	1					
ANR	5571216	ExpressionStatement	job_user_uid = env_uid	140:3:3337:3359	5571125	0	True				
ANR	5571217	AssignmentExpression	job_user_uid = env_uid		5571125	0		=			
ANR	5571218	Identifier	job_user_uid		5571125	0					
ANR	5571219	Identifier	env_uid		5571125	1					
ANR	5571220	ExpressionStatement	"user_gid = getenv ( ""VMGAHP_USER_GID"" )"	143:3:3392:3428	5571125	1	True				
ANR	5571221	AssignmentExpression	"user_gid = getenv ( ""VMGAHP_USER_GID"" )"		5571125	0		=			
ANR	5571222	Identifier	user_gid		5571125	0					
ANR	5571223	CallExpression	"getenv ( ""VMGAHP_USER_GID"" )"		5571125	1					
ANR	5571224	Callee	getenv		5571125	0					
ANR	5571225	Identifier	getenv		5571125	0					
ANR	5571226	ArgumentList	"""VMGAHP_USER_GID"""		5571125	1					
ANR	5571227	Argument	"""VMGAHP_USER_GID"""		5571125	0					
ANR	5571228	PrimaryExpression	"""VMGAHP_USER_GID"""		5571125	0					
ANR	5571229	IfStatement	if ( user_gid . IsEmpty ( ) == false )		5571125	2					
ANR	5571230	Condition	user_gid . IsEmpty ( ) == false	144:7:3437:3463	5571125	0	True				
ANR	5571231	EqualityExpression	user_gid . IsEmpty ( ) == false		5571125	0		==			
ANR	5571232	CallExpression	user_gid . IsEmpty ( )		5571125	0					
ANR	5571233	Callee	user_gid . IsEmpty		5571125	0					
ANR	5571234	MemberAccess	user_gid . IsEmpty		5571125	0					
ANR	5571235	Identifier	user_gid		5571125	0					
ANR	5571236	Identifier	IsEmpty		5571125	1					
ANR	5571237	ArgumentList			5571125	1					
ANR	5571238	Identifier	false		5571125	1					
ANR	5571239	CompoundStatement		20:4:492:554	5571125	1					
ANR	5571240	IdentifierDeclStatement	"int env_gid = ( int ) strtol ( user_gid . Value ( ) , ( char * * ) NULL , 10 ) ;"	145:4:3473:3535	5571125	0	True				
ANR	5571241	IdentifierDecl	"env_gid = ( int ) strtol ( user_gid . Value ( ) , ( char * * ) NULL , 10 )"		5571125	0					
ANR	5571242	IdentifierDeclType	int		5571125	0					
ANR	5571243	Identifier	env_gid		5571125	1					
ANR	5571244	AssignmentExpression	"env_gid = ( int ) strtol ( user_gid . Value ( ) , ( char * * ) NULL , 10 )"		5571125	2		=			
ANR	5571245	Identifier	env_gid		5571125	0					
ANR	5571246	CastExpression	"( int ) strtol ( user_gid . Value ( ) , ( char * * ) NULL , 10 )"		5571125	1					
ANR	5571247	CastTarget	int		5571125	0					
ANR	5571248	CallExpression	"strtol ( user_gid . Value ( ) , ( char * * ) NULL , 10 )"		5571125	1					
ANR	5571249	Callee	strtol		5571125	0					
ANR	5571250	Identifier	strtol		5571125	0					
ANR	5571251	ArgumentList	user_gid . Value ( )		5571125	1					
ANR	5571252	Argument	user_gid . Value ( )		5571125	0					
ANR	5571253	CallExpression	user_gid . Value ( )		5571125	0					
ANR	5571254	Callee	user_gid . Value		5571125	0					
ANR	5571255	MemberAccess	user_gid . Value		5571125	0					
ANR	5571256	Identifier	user_gid		5571125	0					
ANR	5571257	Identifier	Value		5571125	1					
ANR	5571258	ArgumentList			5571125	1					
ANR	5571259	Argument	( char * * ) NULL		5571125	1					
ANR	5571260	CastExpression	( char * * ) NULL		5571125	0					
ANR	5571261	CastTarget	char * *		5571125	0					
ANR	5571262	Identifier	NULL		5571125	1					
ANR	5571263	Argument	10		5571125	2					
ANR	5571264	PrimaryExpression	10		5571125	0					
ANR	5571265	IfStatement	if ( env_gid > 0 )		5571125	1					
ANR	5571266	Condition	env_gid > 0	146:8:3545:3555	5571125	0	True				
ANR	5571267	RelationalExpression	env_gid > 0		5571125	0		>			
ANR	5571268	Identifier	env_gid		5571125	0					
ANR	5571269	PrimaryExpression	0		5571125	1					
ANR	5571270	CompoundStatement		21:22:578:578	5571125	1					
ANR	5571271	ExpressionStatement	job_user_gid = env_gid	147:5:3566:3588	5571125	0	True				
ANR	5571272	AssignmentExpression	job_user_gid = env_gid		5571125	0		=			
ANR	5571273	Identifier	job_user_gid		5571125	0					
ANR	5571274	Identifier	env_gid		5571125	1					
ANR	5571275	IfStatement	if ( job_user_gid == ROOT_UID )		5571125	3					
ANR	5571276	Condition	job_user_gid == ROOT_UID	150:7:3608:3631	5571125	0	True				
ANR	5571277	EqualityExpression	job_user_gid == ROOT_UID		5571125	0		==			
ANR	5571278	Identifier	job_user_gid		5571125	0					
ANR	5571279	Identifier	ROOT_UID		5571125	1					
ANR	5571280	CompoundStatement		25:34:654:654	5571125	1					
ANR	5571281	ExpressionStatement	job_user_gid = job_user_uid	151:4:3641:3668	5571125	0	True				
ANR	5571282	AssignmentExpression	job_user_gid = job_user_uid		5571125	0		=			
ANR	5571283	Identifier	job_user_gid		5571125	0					
ANR	5571284	Identifier	job_user_uid		5571125	1					
ANR	5571285	IfStatement	if ( ! SwitchUid )		5571125	7					
ANR	5571286	Condition	! SwitchUid	156:5:3688:3697	5571125	0	True				
ANR	5571287	UnaryOperationExpression	! SwitchUid		5571125	0					
ANR	5571288	UnaryOperator	!		5571125	0					
ANR	5571289	Identifier	SwitchUid		5571125	1					
ANR	5571290	CompoundStatement		31:18:720:720	5571125	1					
ANR	5571291	ExpressionStatement	job_user_uid = caller_uid	159:2:3773:3798	5571125	0	True				
ANR	5571292	AssignmentExpression	job_user_uid = caller_uid		5571125	0		=			
ANR	5571293	Identifier	job_user_uid		5571125	0					
ANR	5571294	Identifier	caller_uid		5571125	1					
ANR	5571295	ExpressionStatement	job_user_gid = caller_gid	160:2:3802:3827	5571125	1	True				
ANR	5571296	AssignmentExpression	job_user_gid = caller_gid		5571125	0		=			
ANR	5571297	Identifier	job_user_gid		5571125	0					
ANR	5571298	Identifier	caller_gid		5571125	1					
ANR	5571299	ElseStatement	else		5571125	0					
ANR	5571300	CompoundStatement		36:7:855:855	5571125	0					
ANR	5571301	IfStatement	if ( job_user_uid == ROOT_UID )		5571125	0					
ANR	5571302	Condition	job_user_uid == ROOT_UID	163:6:3868:3891	5571125	0	True				
ANR	5571303	EqualityExpression	job_user_uid == ROOT_UID		5571125	0		==			
ANR	5571304	Identifier	job_user_uid		5571125	0					
ANR	5571305	Identifier	ROOT_UID		5571125	1					
ANR	5571306	CompoundStatement		38:33:914:914	5571125	1					
ANR	5571307	IfStatement	if ( caller_uid != ROOT_UID )		5571125	0					
ANR	5571308	Condition	caller_uid != ROOT_UID	165:7:3941:3962	5571125	0	True				
ANR	5571309	EqualityExpression	caller_uid != ROOT_UID		5571125	0		!=			
ANR	5571310	Identifier	caller_uid		5571125	0					
ANR	5571311	Identifier	ROOT_UID		5571125	1					
ANR	5571312	CompoundStatement		40:32:985:985	5571125	1					
ANR	5571313	ExpressionStatement	job_user_uid = caller_uid	166:4:3972:3997	5571125	0	True				
ANR	5571314	AssignmentExpression	job_user_uid = caller_uid		5571125	0		=			
ANR	5571315	Identifier	job_user_uid		5571125	0					
ANR	5571316	Identifier	caller_uid		5571125	1					
ANR	5571317	IfStatement	if ( caller_gid != ROOT_UID )		5571125	1					
ANR	5571318	Condition	caller_gid != ROOT_UID	167:8:4007:4028	5571125	0	True				
ANR	5571319	EqualityExpression	caller_gid != ROOT_UID		5571125	0		!=			
ANR	5571320	Identifier	caller_gid		5571125	0					
ANR	5571321	Identifier	ROOT_UID		5571125	1					
ANR	5571322	CompoundStatement		42:33:1051:1051	5571125	1					
ANR	5571323	ExpressionStatement	job_user_gid = caller_gid	168:5:4039:4064	5571125	0	True				
ANR	5571324	AssignmentExpression	job_user_gid = caller_gid		5571125	0		=			
ANR	5571325	Identifier	job_user_gid		5571125	0					
ANR	5571326	Identifier	caller_gid		5571125	1					
ANR	5571327	ElseStatement	else		5571125	0					
ANR	5571328	CompoundStatement		44:10:1095:1095	5571125	0					
ANR	5571329	ExpressionStatement	job_user_gid = caller_uid	170:5:4083:4108	5571125	0	True				
ANR	5571330	AssignmentExpression	job_user_gid = caller_uid		5571125	0		=			
ANR	5571331	Identifier	job_user_gid		5571125	0					
ANR	5571332	Identifier	caller_uid		5571125	1					
ANR	5571333	ElseStatement	else		5571125	0					
ANR	5571334	CompoundStatement		47:9:1144:1144	5571125	0					
ANR	5571335	Statement	fprintf	173:4:4131:4137	5571125	0	True				
ANR	5571336	Statement	(	173:11:4138:4138	5571125	1	True				
ANR	5571337	Statement	stderr	173:12:4139:4144	5571125	2	True				
ANR	5571338	Statement	","	173:18:4145:4145	5571125	3	True				
ANR	5571339	Statement	"""\\nERROR: Please set environment variable """	173:20:4147:4189	5571125	4	True				
ANR	5571340	Statement	"""'VMGAHP_USER_UID=<uid>'\\n"""	174:6:4197:4223	5571125	5	True				
ANR	5571341	Statement	)	174:33:4224:4224	5571125	6	True				
ANR	5571342	ExpressionStatement		174:34:4225:4225	5571125	7	True				
ANR	5571343	ExpressionStatement	exit ( 1 )	175:4:4231:4238	5571125	8	True				
ANR	5571344	CallExpression	exit ( 1 )		5571125	0					
ANR	5571345	Callee	exit		5571125	0					
ANR	5571346	Identifier	exit		5571125	0					
ANR	5571347	ArgumentList	1		5571125	1					
ANR	5571348	Argument	1		5571125	0					
ANR	5571349	PrimaryExpression	1		5571125	0					
ANR	5571350	IdentifierDeclStatement	char * user_name = NULL ;	181:1:4298:4320	5571125	8	True				
ANR	5571351	IdentifierDecl	* user_name = NULL		5571125	0					
ANR	5571352	IdentifierDeclType	char *		5571125	0					
ANR	5571353	Identifier	user_name		5571125	1					
ANR	5571354	AssignmentExpression	* user_name = NULL		5571125	2		=			
ANR	5571355	Identifier	NULL		5571125	0					
ANR	5571356	Identifier	NULL		5571125	1					
ANR	5571357	IdentifierDeclStatement	passwd_cache * p_cache = pcache ( ) ;	182:1:4323:4355	5571125	9	True				
ANR	5571358	IdentifierDecl	* p_cache = pcache ( )		5571125	0					
ANR	5571359	IdentifierDeclType	passwd_cache *		5571125	0					
ANR	5571360	Identifier	p_cache		5571125	1					
ANR	5571361	AssignmentExpression	* p_cache = pcache ( )		5571125	2		=			
ANR	5571362	Identifier	p_cache		5571125	0					
ANR	5571363	CallExpression	pcache ( )		5571125	1					
ANR	5571364	Callee	pcache		5571125	0					
ANR	5571365	Identifier	pcache		5571125	0					
ANR	5571366	ArgumentList			5571125	1					
ANR	5571367	IfStatement	"if ( p_cache -> get_user_name ( caller_uid , user_name ) == true )"		5571125	10					
ANR	5571368	Condition	"p_cache -> get_user_name ( caller_uid , user_name ) == true"	183:5:4362:4414	5571125	0	True				
ANR	5571369	EqualityExpression	"p_cache -> get_user_name ( caller_uid , user_name ) == true"		5571125	0		==			
ANR	5571370	CallExpression	"p_cache -> get_user_name ( caller_uid , user_name )"		5571125	0					
ANR	5571371	Callee	p_cache -> get_user_name		5571125	0					
ANR	5571372	PtrMemberAccess	p_cache -> get_user_name		5571125	0					
ANR	5571373	Identifier	p_cache		5571125	0					
ANR	5571374	Identifier	get_user_name		5571125	1					
ANR	5571375	ArgumentList	caller_uid		5571125	1					
ANR	5571376	Argument	caller_uid		5571125	0					
ANR	5571377	Identifier	caller_uid		5571125	0					
ANR	5571378	Argument	user_name		5571125	1					
ANR	5571379	Identifier	user_name		5571125	0					
ANR	5571380	Identifier	true		5571125	1					
ANR	5571381	CompoundStatement		58:61:1437:1437	5571125	1					
ANR	5571382	ExpressionStatement	caller_name = user_name	184:2:4422:4445	5571125	0	True				
ANR	5571383	AssignmentExpression	caller_name = user_name		5571125	0		=			
ANR	5571384	Identifier	caller_name		5571125	0					
ANR	5571385	Identifier	user_name		5571125	1					
ANR	5571386	ExpressionStatement	free ( user_name )	185:2:4449:4464	5571125	1	True				
ANR	5571387	CallExpression	free ( user_name )		5571125	0					
ANR	5571388	Callee	free		5571125	0					
ANR	5571389	Identifier	free		5571125	0					
ANR	5571390	ArgumentList	user_name		5571125	1					
ANR	5571391	Argument	user_name		5571125	0					
ANR	5571392	Identifier	user_name		5571125	0					
ANR	5571393	IfStatement	if ( job_user_uid == caller_uid )		5571125	11					
ANR	5571394	Condition	job_user_uid == caller_uid	188:5:4475:4500	5571125	0	True				
ANR	5571395	EqualityExpression	job_user_uid == caller_uid		5571125	0		==			
ANR	5571396	Identifier	job_user_uid		5571125	0					
ANR	5571397	Identifier	caller_uid		5571125	1					
ANR	5571398	CompoundStatement		63:34:1523:1523	5571125	1					
ANR	5571399	ExpressionStatement	job_user_name = caller_name	189:2:4508:4535	5571125	0	True				
ANR	5571400	AssignmentExpression	job_user_name = caller_name		5571125	0		=			
ANR	5571401	Identifier	job_user_name		5571125	0					
ANR	5571402	Identifier	caller_name		5571125	1					
ANR	5571403	IfStatement	if ( SwitchUid )		5571125	12					
ANR	5571404	Condition	SwitchUid	192:5:4546:4554	5571125	0	True				
ANR	5571405	Identifier	SwitchUid		5571125	0					
ANR	5571406	CompoundStatement		67:17:1577:1577	5571125	1					
ANR	5571407	ExpressionStatement	"set_user_ids ( job_user_uid , job_user_gid )"	193:2:4562:4602	5571125	0	True				
ANR	5571408	CallExpression	"set_user_ids ( job_user_uid , job_user_gid )"		5571125	0					
ANR	5571409	Callee	set_user_ids		5571125	0					
ANR	5571410	Identifier	set_user_ids		5571125	0					
ANR	5571411	ArgumentList	job_user_uid		5571125	1					
ANR	5571412	Argument	job_user_uid		5571125	0					
ANR	5571413	Identifier	job_user_uid		5571125	0					
ANR	5571414	Argument	job_user_gid		5571125	1					
ANR	5571415	Identifier	job_user_gid		5571125	0					
ANR	5571416	ExpressionStatement	set_user_priv ( )	194:2:4606:4621	5571125	1	True				
ANR	5571417	CallExpression	set_user_priv ( )		5571125	0					
ANR	5571418	Callee	set_user_priv		5571125	0					
ANR	5571419	Identifier	set_user_priv		5571125	0					
ANR	5571420	ArgumentList			5571125	1					
ANR	5571421	IfStatement	if ( job_user_uid != caller_uid )		5571125	2					
ANR	5571422	Condition	job_user_uid != caller_uid	198:6:4701:4726	5571125	0	True				
ANR	5571423	EqualityExpression	job_user_uid != caller_uid		5571125	0		!=			
ANR	5571424	Identifier	job_user_uid		5571125	0					
ANR	5571425	Identifier	caller_uid		5571125	1					
ANR	5571426	CompoundStatement		73:35:1749:1749	5571125	1					
ANR	5571427	IfStatement	"if ( p_cache -> get_user_name ( job_user_uid , user_name ) == true )"		5571125	0					
ANR	5571428	Condition	"p_cache -> get_user_name ( job_user_uid , user_name ) == true"	199:7:4739:4793	5571125	0	True				
ANR	5571429	EqualityExpression	"p_cache -> get_user_name ( job_user_uid , user_name ) == true"		5571125	0		==			
ANR	5571430	CallExpression	"p_cache -> get_user_name ( job_user_uid , user_name )"		5571125	0					
ANR	5571431	Callee	p_cache -> get_user_name		5571125	0					
ANR	5571432	PtrMemberAccess	p_cache -> get_user_name		5571125	0					
ANR	5571433	Identifier	p_cache		5571125	0					
ANR	5571434	Identifier	get_user_name		5571125	1					
ANR	5571435	ArgumentList	job_user_uid		5571125	1					
ANR	5571436	Argument	job_user_uid		5571125	0					
ANR	5571437	Identifier	job_user_uid		5571125	0					
ANR	5571438	Argument	user_name		5571125	1					
ANR	5571439	Identifier	user_name		5571125	0					
ANR	5571440	Identifier	true		5571125	1					
ANR	5571441	CompoundStatement		74:65:1816:1816	5571125	1					
ANR	5571442	ExpressionStatement	job_user_name = user_name	200:4:4803:4828	5571125	0	True				
ANR	5571443	AssignmentExpression	job_user_name = user_name		5571125	0		=			
ANR	5571444	Identifier	job_user_name		5571125	0					
ANR	5571445	Identifier	user_name		5571125	1					
ANR	5571446	ExpressionStatement	free ( user_name )	201:4:4834:4849	5571125	1	True				
ANR	5571447	CallExpression	free ( user_name )		5571125	0					
ANR	5571448	Callee	free		5571125	0					
ANR	5571449	Identifier	free		5571125	0					
ANR	5571450	ArgumentList	user_name		5571125	1					
ANR	5571451	Argument	user_name		5571125	0					
ANR	5571452	Identifier	user_name		5571125	0					
ANR	5571453	ReturnType	void		5571125	1					
ANR	5571454	Identifier	init_uids		5571125	2					
ANR	5571455	ParameterList			5571125	3					
ANR	5571456	CFGEntryNode	ENTRY		5571125		True				
ANR	5571457	CFGExitNode	EXIT		5571125		True				
ANR	5571458	Symbol	SwitchUid		5571125						
ANR	5571459	Symbol	job_user_uid		5571125						
ANR	5571460	Symbol	p_cache		5571125						
ANR	5571461	Symbol	env_gid		5571125						
ANR	5571462	Symbol	user_name		5571125						
ANR	5571463	Symbol	env_uid		5571125						
ANR	5571464	Symbol	job_user_gid		5571125						
ANR	5571465	Symbol	caller_gid		5571125						
ANR	5571466	Symbol	user_uid . IsEmpty		5571125						
ANR	5571467	Symbol	caller_name		5571125						
ANR	5571468	Symbol	can_switch_ids		5571125						
ANR	5571469	Symbol	ROOT_UID		5571125						
ANR	5571470	Symbol	strtol		5571125						
ANR	5571471	Symbol	caller_uid		5571125						
ANR	5571472	Symbol	getenv		5571125						
ANR	5571473	Symbol	NULL		5571125						
ANR	5571474	Symbol	getgid		5571125						
ANR	5571475	Symbol	user_gid . Value		5571125						
ANR	5571476	Symbol	user_gid . IsEmpty		5571125						
ANR	5571477	Symbol	false		5571125						
ANR	5571478	Symbol	* p_cache		5571125						
ANR	5571479	Symbol	user_gid		5571125						
ANR	5571480	Symbol	pcache		5571125						
ANR	5571481	Symbol	p_cache -> get_user_name		5571125						
ANR	5571482	Symbol	user_uid . Value		5571125						
ANR	5571483	Symbol	getuid		5571125						
ANR	5571484	Symbol	job_user_name		5571125						
ANR	5571485	Symbol	privsep_enabled		5571125						
ANR	5571486	Symbol	true		5571125						
ANR	5571487	Symbol	user_uid		5571125						
ANR	5571488	Function	main_pre_command_sock_init	208:0:4873:4951							
ANR	5571489	FunctionDef	main_pre_command_sock_init ()		5571488	0					
ANR	5571490	CompoundStatement		210:0:4907:4951	5571488	0					
ANR	5571491	ExpressionStatement	daemonCore -> WantSendChildAlive ( false )	211:1:4910:4949	5571488	0	True				
ANR	5571492	CallExpression	daemonCore -> WantSendChildAlive ( false )		5571488	0					
ANR	5571493	Callee	daemonCore -> WantSendChildAlive		5571488	0					
ANR	5571494	PtrMemberAccess	daemonCore -> WantSendChildAlive		5571488	0					
ANR	5571495	Identifier	daemonCore		5571488	0					
ANR	5571496	Identifier	WantSendChildAlive		5571488	1					
ANR	5571497	ArgumentList	false		5571488	1					
ANR	5571498	Argument	false		5571488	0					
ANR	5571499	Identifier	false		5571488	0					
ANR	5571500	ReturnType	void		5571488	1					
ANR	5571501	Identifier	main_pre_command_sock_init		5571488	2					
ANR	5571502	ParameterList			5571488	3					
ANR	5571503	CFGEntryNode	ENTRY		5571488		True				
ANR	5571504	CFGExitNode	EXIT		5571488		True				
ANR	5571505	Symbol	daemonCore		5571488						
ANR	5571506	Symbol	false		5571488						
ANR	5571507	Function	usage	214:0:4954:5213							
ANR	5571508	FunctionDef	usage (char * name)		5571507	0					
ANR	5571509	CompoundStatement		216:0:4985:5213	5571507	0					
ANR	5571510	Statement	vmprintf	217:1:4988:4995	5571507	0	True				
ANR	5571511	Statement	(	217:9:4996:4996	5571507	1	True				
ANR	5571512	Statement	D_ALWAYS	217:10:4997:5004	5571507	2	True				
ANR	5571513	Statement	","	217:18:5005:5005	5571507	3	True				
ANR	5571514	Statement	"""Usage: \\n"""	218:3:5010:5020	5571507	4	True				
ANR	5571515	Statement	"""\\tTestMode: %s -f -t -M 0 vmtype <vmtype> \\n"""	219:3:5025:5070	5571507	5	True				
ANR	5571516	Statement	"""\\tStandAlone: %s -f -t -M 3\\n"""	220:3:5075:5105	5571507	6	True				
ANR	5571517	Statement	"""\\tKillMode: %s -f -t -M 4 vmtype <vmtype> match <matchstring>\\n"""	221:3:5110:5174	5571507	7	True				
ANR	5571518	Statement	","	221:68:5175:5175	5571507	8	True				
ANR	5571519	Statement	name	222:3:5180:5183	5571507	9	True				
ANR	5571520	Statement	","	222:7:5184:5184	5571507	10	True				
ANR	5571521	Statement	name	222:9:5186:5189	5571507	11	True				
ANR	5571522	Statement	","	222:13:5190:5190	5571507	12	True				
ANR	5571523	Statement	name	222:15:5192:5195	5571507	13	True				
ANR	5571524	Statement	)	222:19:5196:5196	5571507	14	True				
ANR	5571525	ExpressionStatement		222:20:5197:5197	5571507	15	True				
ANR	5571526	ExpressionStatement	DC_Exit ( 1 )	223:1:5200:5210	5571507	16	True				
ANR	5571527	CallExpression	DC_Exit ( 1 )		5571507	0					
ANR	5571528	Callee	DC_Exit		5571507	0					
ANR	5571529	Identifier	DC_Exit		5571507	0					
ANR	5571530	ArgumentList	1		5571507	1					
ANR	5571531	Argument	1		5571507	0					
ANR	5571532	PrimaryExpression	1		5571507	0					
ANR	5571533	ReturnType	static void		5571507	1					
ANR	5571534	Identifier	usage		5571507	2					
ANR	5571535	ParameterList	char * name		5571507	3					
ANR	5571536	Parameter	char * name	215:7:4973:4982	5571507	0	True				
ANR	5571537	ParameterType	char *		5571507	0					
ANR	5571538	Identifier	name		5571507	1					
ANR	5571539	CFGEntryNode	ENTRY		5571507		True				
ANR	5571540	CFGExitNode	EXIT		5571507		True				
ANR	5571541	Symbol	name		5571507						
ANR	5571542	Function	main_init	227:0:5216:12735							
ANR	5571543	FunctionDef	"main_init (int argc , char * argv [ ])"		5571542	0					
ANR	5571544	CompoundStatement		228:0:5255:12735	5571542	0					
ANR	5571545	ExpressionStatement	init_uids ( )	229:1:5258:5269	5571542	0	True				
ANR	5571546	CallExpression	init_uids ( )		5571542	0					
ANR	5571547	Callee	init_uids		5571542	0					
ANR	5571548	Identifier	init_uids		5571542	0					
ANR	5571549	ArgumentList			5571542	1					
ANR	5571550	IdentifierDeclStatement	MyString vmtype ;	231:1:5273:5288	5571542	1	True				
ANR	5571551	IdentifierDecl	vmtype		5571542	0					
ANR	5571552	IdentifierDeclType	MyString		5571542	0					
ANR	5571553	Identifier	vmtype		5571542	1					
ANR	5571554	IdentifierDeclStatement	MyString matchstring ;	232:1:5291:5311	5571542	2	True				
ANR	5571555	IdentifierDecl	matchstring		5571542	0					
ANR	5571556	IdentifierDeclType	MyString		5571542	0					
ANR	5571557	Identifier	matchstring		5571542	1					
ANR	5571558	ExpressionStatement	oriDebugFlags = DebugFlags	235:1:5348:5374	5571542	3	True				
ANR	5571559	AssignmentExpression	oriDebugFlags = DebugFlags		5571542	0		=			
ANR	5571560	Identifier	oriDebugFlags		5571542	0					
ANR	5571561	Identifier	DebugFlags		5571542	1					
ANR	5571562	IfStatement	if ( argc < 3 )		5571542	4					
ANR	5571563	Condition	argc < 3	238:5:5420:5427	5571542	0	True				
ANR	5571564	RelationalExpression	argc < 3		5571542	0		<			
ANR	5571565	Identifier	argc		5571542	0					
ANR	5571566	PrimaryExpression	3		5571542	1					
ANR	5571567	CompoundStatement		11:16:175:175	5571542	1					
ANR	5571568	ExpressionStatement	usage ( argv [ 0 ] )	239:2:5435:5449	5571542	0	True				
ANR	5571569	CallExpression	usage ( argv [ 0 ] )		5571542	0					
ANR	5571570	Callee	usage		5571542	0					
ANR	5571571	Identifier	usage		5571542	0					
ANR	5571572	ArgumentList	argv [ 0 ]		5571542	1					
ANR	5571573	Argument	argv [ 0 ]		5571542	0					
ANR	5571574	ArrayIndexing	argv [ 0 ]		5571542	0					
ANR	5571575	Identifier	argv		5571542	0					
ANR	5571576	PrimaryExpression	0		5571542	1					
ANR	5571577	IfStatement	"if ( strcmp ( argv [ 1 ] , ""-M"" ) )"		5571542	5					
ANR	5571578	Condition	"strcmp ( argv [ 1 ] , ""-M"" )"	243:5:5488:5508	5571542	0	True				
ANR	5571579	CallExpression	"strcmp ( argv [ 1 ] , ""-M"" )"		5571542	0					
ANR	5571580	Callee	strcmp		5571542	0					
ANR	5571581	Identifier	strcmp		5571542	0					
ANR	5571582	ArgumentList	argv [ 1 ]		5571542	1					
ANR	5571583	Argument	argv [ 1 ]		5571542	0					
ANR	5571584	ArrayIndexing	argv [ 1 ]		5571542	0					
ANR	5571585	Identifier	argv		5571542	0					
ANR	5571586	PrimaryExpression	1		5571542	1					
ANR	5571587	Argument	"""-M"""		5571542	1					
ANR	5571588	PrimaryExpression	"""-M"""		5571542	0					
ANR	5571589	CompoundStatement		16:28:255:255	5571542	1					
ANR	5571590	ExpressionStatement	usage ( argv [ 0 ] )	244:2:5515:5529	5571542	0	True				
ANR	5571591	CallExpression	usage ( argv [ 0 ] )		5571542	0					
ANR	5571592	Callee	usage		5571542	0					
ANR	5571593	Identifier	usage		5571542	0					
ANR	5571594	ArgumentList	argv [ 0 ]		5571542	1					
ANR	5571595	Argument	argv [ 0 ]		5571542	0					
ANR	5571596	ArrayIndexing	argv [ 0 ]		5571542	0					
ANR	5571597	Identifier	argv		5571542	0					
ANR	5571598	PrimaryExpression	0		5571542	1					
ANR	5571599	ExpressionStatement	vmgahp_mode = atoi ( argv [ 2 ] )	247:1:5536:5563	5571542	6	True				
ANR	5571600	AssignmentExpression	vmgahp_mode = atoi ( argv [ 2 ] )		5571542	0		=			
ANR	5571601	Identifier	vmgahp_mode		5571542	0					
ANR	5571602	CallExpression	atoi ( argv [ 2 ] )		5571542	1					
ANR	5571603	Callee	atoi		5571542	0					
ANR	5571604	Identifier	atoi		5571542	0					
ANR	5571605	ArgumentList	argv [ 2 ]		5571542	1					
ANR	5571606	Argument	argv [ 2 ]		5571542	0					
ANR	5571607	ArrayIndexing	argv [ 2 ]		5571542	0					
ANR	5571608	Identifier	argv		5571542	0					
ANR	5571609	PrimaryExpression	2		5571542	1					
ANR	5571610	IfStatement	if ( vmgahp_mode == VMGAHP_IO_MODE )		5571542	7					
ANR	5571611	Condition	vmgahp_mode == VMGAHP_IO_MODE	248:5:5570:5598	5571542	0	True				
ANR	5571612	EqualityExpression	vmgahp_mode == VMGAHP_IO_MODE		5571542	0		==			
ANR	5571613	Identifier	vmgahp_mode		5571542	0					
ANR	5571614	Identifier	VMGAHP_IO_MODE		5571542	1					
ANR	5571615	CompoundStatement		21:37:346:346	5571542	1					
ANR	5571616	ExpressionStatement	vmgahp_mode = VMGAHP_STANDALONE_MODE	249:2:5606:5642	5571542	0	True				
ANR	5571617	AssignmentExpression	vmgahp_mode = VMGAHP_STANDALONE_MODE		5571542	0		=			
ANR	5571618	Identifier	vmgahp_mode		5571542	0					
ANR	5571619	Identifier	VMGAHP_STANDALONE_MODE		5571542	1					
ANR	5571620	ElseStatement	else		5571542	0					
ANR	5571621	IfStatement	if ( vmgahp_mode >= VMGAHP_MODE_MAX || vmgahp_mode < 0 || vmgahp_mode == VMGAHP_WORKER_MODE )		5571542	0					
ANR	5571622	Condition	vmgahp_mode >= VMGAHP_MODE_MAX || vmgahp_mode < 0 || vmgahp_mode == VMGAHP_WORKER_MODE	250:12:5656:5747	5571542	0	True				
ANR	5571623	OrExpression	vmgahp_mode >= VMGAHP_MODE_MAX || vmgahp_mode < 0 || vmgahp_mode == VMGAHP_WORKER_MODE		5571542	0		||			
ANR	5571624	RelationalExpression	vmgahp_mode >= VMGAHP_MODE_MAX		5571542	0		>=			
ANR	5571625	Identifier	vmgahp_mode		5571542	0					
ANR	5571626	Identifier	VMGAHP_MODE_MAX		5571542	1					
ANR	5571627	OrExpression	vmgahp_mode < 0 || vmgahp_mode == VMGAHP_WORKER_MODE		5571542	1		||			
ANR	5571628	RelationalExpression	vmgahp_mode < 0		5571542	0		<			
ANR	5571629	Identifier	vmgahp_mode		5571542	0					
ANR	5571630	PrimaryExpression	0		5571542	1					
ANR	5571631	EqualityExpression	vmgahp_mode == VMGAHP_WORKER_MODE		5571542	1		==			
ANR	5571632	Identifier	vmgahp_mode		5571542	0					
ANR	5571633	Identifier	VMGAHP_WORKER_MODE		5571542	1					
ANR	5571634	CompoundStatement		24:42:495:495	5571542	1					
ANR	5571635	ExpressionStatement	usage ( argv [ 0 ] )	252:2:5755:5769	5571542	0	True				
ANR	5571636	CallExpression	usage ( argv [ 0 ] )		5571542	0					
ANR	5571637	Callee	usage		5571542	0					
ANR	5571638	Identifier	usage		5571542	0					
ANR	5571639	ArgumentList	argv [ 0 ]		5571542	1					
ANR	5571640	Argument	argv [ 0 ]		5571542	0					
ANR	5571641	ArrayIndexing	argv [ 0 ]		5571542	0					
ANR	5571642	Identifier	argv		5571542	0					
ANR	5571643	PrimaryExpression	0		5571542	1					
ANR	5571644	ExpressionStatement	"vmgahp_stdout_pipe = daemonCore -> Inherit_Pipe ( fileno ( stdout ) , true , false , false )"	255:1:5776:5899	5571542	8	True				
ANR	5571645	AssignmentExpression	"vmgahp_stdout_pipe = daemonCore -> Inherit_Pipe ( fileno ( stdout ) , true , false , false )"		5571542	0		=			
ANR	5571646	Identifier	vmgahp_stdout_pipe		5571542	0					
ANR	5571647	CallExpression	"daemonCore -> Inherit_Pipe ( fileno ( stdout ) , true , false , false )"		5571542	1					
ANR	5571648	Callee	daemonCore -> Inherit_Pipe		5571542	0					
ANR	5571649	PtrMemberAccess	daemonCore -> Inherit_Pipe		5571542	0					
ANR	5571650	Identifier	daemonCore		5571542	0					
ANR	5571651	Identifier	Inherit_Pipe		5571542	1					
ANR	5571652	ArgumentList	fileno ( stdout )		5571542	1					
ANR	5571653	Argument	fileno ( stdout )		5571542	0					
ANR	5571654	CallExpression	fileno ( stdout )		5571542	0					
ANR	5571655	Callee	fileno		5571542	0					
ANR	5571656	Identifier	fileno		5571542	0					
ANR	5571657	ArgumentList	stdout		5571542	1					
ANR	5571658	Argument	stdout		5571542	0					
ANR	5571659	Identifier	stdout		5571542	0					
ANR	5571660	Argument	true		5571542	1					
ANR	5571661	Identifier	true		5571542	0					
ANR	5571662	Argument	false		5571542	2					
ANR	5571663	Identifier	false		5571542	0					
ANR	5571664	Argument	false		5571542	3					
ANR	5571665	Identifier	false		5571542	0					
ANR	5571666	IfStatement	if ( vmgahp_stdout_pipe == - 1 )		5571542	9					
ANR	5571667	Condition	vmgahp_stdout_pipe == - 1	260:5:5919:5942	5571542	0	True				
ANR	5571668	EqualityExpression	vmgahp_stdout_pipe == - 1		5571542	0		==			
ANR	5571669	Identifier	vmgahp_stdout_pipe		5571542	0					
ANR	5571670	UnaryOperationExpression	- 1		5571542	1					
ANR	5571671	UnaryOperator	-		5571542	0					
ANR	5571672	PrimaryExpression	1		5571542	1					
ANR	5571673	CompoundStatement		33:32:690:690	5571542	1					
ANR	5571674	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Can't get stdout pipe"" )"	261:3:5951:5993	5571542	0	True				
ANR	5571675	CallExpression	"vmprintf ( D_ALWAYS , ""Can't get stdout pipe"" )"		5571542	0					
ANR	5571676	Callee	vmprintf		5571542	0					
ANR	5571677	Identifier	vmprintf		5571542	0					
ANR	5571678	ArgumentList	D_ALWAYS		5571542	1					
ANR	5571679	Argument	D_ALWAYS		5571542	0					
ANR	5571680	Identifier	D_ALWAYS		5571542	0					
ANR	5571681	Argument	"""Can't get stdout pipe"""		5571542	1					
ANR	5571682	PrimaryExpression	"""Can't get stdout pipe"""		5571542	0					
ANR	5571683	ExpressionStatement	DC_Exit ( 1 )	262:3:5998:6008	5571542	1	True				
ANR	5571684	CallExpression	DC_Exit ( 1 )		5571542	0					
ANR	5571685	Callee	DC_Exit		5571542	0					
ANR	5571686	Identifier	DC_Exit		5571542	0					
ANR	5571687	ArgumentList	1		5571542	1					
ANR	5571688	Argument	1		5571542	0					
ANR	5571689	PrimaryExpression	1		5571542	0					
ANR	5571690	IfStatement	if ( Termlog && ( vmgahp_mode != VMGAHP_TEST_MODE ) && ( vmgahp_mode != VMGAHP_KILL_MODE ) )		5571542	10					
ANR	5571691	Condition	Termlog && ( vmgahp_mode != VMGAHP_TEST_MODE ) && ( vmgahp_mode != VMGAHP_KILL_MODE )	265:5:6019:6104	5571542	0	True				
ANR	5571692	AndExpression	Termlog && ( vmgahp_mode != VMGAHP_TEST_MODE ) && ( vmgahp_mode != VMGAHP_KILL_MODE )		5571542	0		&&			
ANR	5571693	Identifier	Termlog		5571542	0					
ANR	5571694	AndExpression	( vmgahp_mode != VMGAHP_TEST_MODE ) && ( vmgahp_mode != VMGAHP_KILL_MODE )		5571542	1		&&			
ANR	5571695	EqualityExpression	vmgahp_mode != VMGAHP_TEST_MODE		5571542	0		!=			
ANR	5571696	Identifier	vmgahp_mode		5571542	0					
ANR	5571697	Identifier	VMGAHP_TEST_MODE		5571542	1					
ANR	5571698	EqualityExpression	vmgahp_mode != VMGAHP_KILL_MODE		5571542	1		!=			
ANR	5571699	Identifier	vmgahp_mode		5571542	0					
ANR	5571700	Identifier	VMGAHP_KILL_MODE		5571542	1					
ANR	5571701	CompoundStatement		39:39:851:851	5571542	1					
ANR	5571702	ExpressionStatement	"vmgahp_stderr_pipe = daemonCore -> Inherit_Pipe ( fileno ( stderr ) , true , false , true )"	268:2:6143:6268	5571542	0	True				
ANR	5571703	AssignmentExpression	"vmgahp_stderr_pipe = daemonCore -> Inherit_Pipe ( fileno ( stderr ) , true , false , true )"		5571542	0		=			
ANR	5571704	Identifier	vmgahp_stderr_pipe		5571542	0					
ANR	5571705	CallExpression	"daemonCore -> Inherit_Pipe ( fileno ( stderr ) , true , false , true )"		5571542	1					
ANR	5571706	Callee	daemonCore -> Inherit_Pipe		5571542	0					
ANR	5571707	PtrMemberAccess	daemonCore -> Inherit_Pipe		5571542	0					
ANR	5571708	Identifier	daemonCore		5571542	0					
ANR	5571709	Identifier	Inherit_Pipe		5571542	1					
ANR	5571710	ArgumentList	fileno ( stderr )		5571542	1					
ANR	5571711	Argument	fileno ( stderr )		5571542	0					
ANR	5571712	CallExpression	fileno ( stderr )		5571542	0					
ANR	5571713	Callee	fileno		5571542	0					
ANR	5571714	Identifier	fileno		5571542	0					
ANR	5571715	ArgumentList	stderr		5571542	1					
ANR	5571716	Argument	stderr		5571542	0					
ANR	5571717	Identifier	stderr		5571542	0					
ANR	5571718	Argument	true		5571542	1					
ANR	5571719	Identifier	true		5571542	0					
ANR	5571720	Argument	false		5571542	2					
ANR	5571721	Identifier	false		5571542	0					
ANR	5571722	Argument	true		5571542	3					
ANR	5571723	Identifier	true		5571542	0					
ANR	5571724	IfStatement	if ( vmgahp_stderr_pipe == - 1 )		5571542	1					
ANR	5571725	Condition	vmgahp_stderr_pipe == - 1	273:6:6293:6316	5571542	0	True				
ANR	5571726	EqualityExpression	vmgahp_stderr_pipe == - 1		5571542	0		==			
ANR	5571727	Identifier	vmgahp_stderr_pipe		5571542	0					
ANR	5571728	UnaryOperationExpression	- 1		5571542	1					
ANR	5571729	UnaryOperator	-		5571542	0					
ANR	5571730	PrimaryExpression	1		5571542	1					
ANR	5571731	CompoundStatement		46:33:1064:1064	5571542	1					
ANR	5571732	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Can't get stderr pipe"" )"	274:3:6325:6367	5571542	0	True				
ANR	5571733	CallExpression	"vmprintf ( D_ALWAYS , ""Can't get stderr pipe"" )"		5571542	0					
ANR	5571734	Callee	vmprintf		5571542	0					
ANR	5571735	Identifier	vmprintf		5571542	0					
ANR	5571736	ArgumentList	D_ALWAYS		5571542	1					
ANR	5571737	Argument	D_ALWAYS		5571542	0					
ANR	5571738	Identifier	D_ALWAYS		5571542	0					
ANR	5571739	Argument	"""Can't get stderr pipe"""		5571542	1					
ANR	5571740	PrimaryExpression	"""Can't get stderr pipe"""		5571542	0					
ANR	5571741	ExpressionStatement	DC_Exit ( 1 )	275:3:6372:6382	5571542	1	True				
ANR	5571742	CallExpression	DC_Exit ( 1 )		5571542	0					
ANR	5571743	Callee	DC_Exit		5571542	0					
ANR	5571744	Identifier	DC_Exit		5571542	0					
ANR	5571745	ArgumentList	1		5571542	1					
ANR	5571746	Argument	1		5571542	0					
ANR	5571747	PrimaryExpression	1		5571542	0					
ANR	5571748	ExpressionStatement	vmgahp_stderr_buffer . setPipeEnd ( vmgahp_stderr_pipe )	277:2:6390:6441	5571542	2	True				
ANR	5571749	CallExpression	vmgahp_stderr_buffer . setPipeEnd ( vmgahp_stderr_pipe )		5571542	0					
ANR	5571750	Callee	vmgahp_stderr_buffer . setPipeEnd		5571542	0					
ANR	5571751	MemberAccess	vmgahp_stderr_buffer . setPipeEnd		5571542	0					
ANR	5571752	Identifier	vmgahp_stderr_buffer		5571542	0					
ANR	5571753	Identifier	setPipeEnd		5571542	1					
ANR	5571754	ArgumentList	vmgahp_stderr_pipe		5571542	1					
ANR	5571755	Argument	vmgahp_stderr_pipe		5571542	0					
ANR	5571756	Identifier	vmgahp_stderr_pipe		5571542	0					
ANR	5571757	ExpressionStatement	"vmgahp_stderr_tid = daemonCore -> Register_Timer ( 2 , 2 , write_stderr_to_pipe , ""write_stderr_to_pipe"" )"	279:2:6446:6552	5571542	3	True				
ANR	5571758	AssignmentExpression	"vmgahp_stderr_tid = daemonCore -> Register_Timer ( 2 , 2 , write_stderr_to_pipe , ""write_stderr_to_pipe"" )"		5571542	0		=			
ANR	5571759	Identifier	vmgahp_stderr_tid		5571542	0					
ANR	5571760	CallExpression	"daemonCore -> Register_Timer ( 2 , 2 , write_stderr_to_pipe , ""write_stderr_to_pipe"" )"		5571542	1					
ANR	5571761	Callee	daemonCore -> Register_Timer		5571542	0					
ANR	5571762	PtrMemberAccess	daemonCore -> Register_Timer		5571542	0					
ANR	5571763	Identifier	daemonCore		5571542	0					
ANR	5571764	Identifier	Register_Timer		5571542	1					
ANR	5571765	ArgumentList	2		5571542	1					
ANR	5571766	Argument	2		5571542	0					
ANR	5571767	PrimaryExpression	2		5571542	0					
ANR	5571768	Argument	2		5571542	1					
ANR	5571769	PrimaryExpression	2		5571542	0					
ANR	5571770	Argument	write_stderr_to_pipe		5571542	2					
ANR	5571771	Identifier	write_stderr_to_pipe		5571542	0					
ANR	5571772	Argument	"""write_stderr_to_pipe"""		5571542	3					
ANR	5571773	PrimaryExpression	"""write_stderr_to_pipe"""		5571542	0					
ANR	5571774	IfStatement	if ( vmgahp_stderr_tid == - 1 )		5571542	4					
ANR	5571775	Condition	vmgahp_stderr_tid == - 1	282:6:6560:6582	5571542	0	True				
ANR	5571776	EqualityExpression	vmgahp_stderr_tid == - 1		5571542	0		==			
ANR	5571777	Identifier	vmgahp_stderr_tid		5571542	0					
ANR	5571778	UnaryOperationExpression	- 1		5571542	1					
ANR	5571779	UnaryOperator	-		5571542	0					
ANR	5571780	PrimaryExpression	1		5571542	1					
ANR	5571781	CompoundStatement		55:32:1330:1330	5571542	1					
ANR	5571782	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Can't register stderr timer"" )"	283:3:6591:6639	5571542	0	True				
ANR	5571783	CallExpression	"vmprintf ( D_ALWAYS , ""Can't register stderr timer"" )"		5571542	0					
ANR	5571784	Callee	vmprintf		5571542	0					
ANR	5571785	Identifier	vmprintf		5571542	0					
ANR	5571786	ArgumentList	D_ALWAYS		5571542	1					
ANR	5571787	Argument	D_ALWAYS		5571542	0					
ANR	5571788	Identifier	D_ALWAYS		5571542	0					
ANR	5571789	Argument	"""Can't register stderr timer"""		5571542	1					
ANR	5571790	PrimaryExpression	"""Can't register stderr timer"""		5571542	0					
ANR	5571791	ExpressionStatement	DC_Exit ( 1 )	284:3:6644:6654	5571542	1	True				
ANR	5571792	CallExpression	DC_Exit ( 1 )		5571542	0					
ANR	5571793	Callee	DC_Exit		5571542	0					
ANR	5571794	Identifier	DC_Exit		5571542	0					
ANR	5571795	ArgumentList	1		5571542	1					
ANR	5571796	Argument	1		5571542	0					
ANR	5571797	PrimaryExpression	1		5571542	0					
ANR	5571798	ElseStatement	else		5571542	0					
ANR	5571799	CompoundStatement		59:7:1411:1411	5571542	0					
ANR	5571800	ExpressionStatement	vmgahp_stderr_pipe = - 1	287:2:6671:6694	5571542	0	True				
ANR	5571801	AssignmentExpression	vmgahp_stderr_pipe = - 1		5571542	0		=			
ANR	5571802	Identifier	vmgahp_stderr_pipe		5571542	0					
ANR	5571803	UnaryOperationExpression	- 1		5571542	1					
ANR	5571804	UnaryOperator	-		5571542	0					
ANR	5571805	PrimaryExpression	1		5571542	1					
ANR	5571806	ExpressionStatement	vmgahp_stderr_tid = - 1	288:2:6698:6720	5571542	1	True				
ANR	5571807	AssignmentExpression	vmgahp_stderr_tid = - 1		5571542	0		=			
ANR	5571808	Identifier	vmgahp_stderr_tid		5571542	0					
ANR	5571809	UnaryOperationExpression	- 1		5571542	1					
ANR	5571810	UnaryOperator	-		5571542	0					
ANR	5571811	PrimaryExpression	1		5571542	1					
ANR	5571812	ExpressionStatement	"vmprintf ( D_ALWAYS , ""VM-GAHP initialized with run-mode %d\\n"" , vmgahp_mode )"	291:1:6727:6800	5571542	11	True				
ANR	5571813	CallExpression	"vmprintf ( D_ALWAYS , ""VM-GAHP initialized with run-mode %d\\n"" , vmgahp_mode )"		5571542	0					
ANR	5571814	Callee	vmprintf		5571542	0					
ANR	5571815	Identifier	vmprintf		5571542	0					
ANR	5571816	ArgumentList	D_ALWAYS		5571542	1					
ANR	5571817	Argument	D_ALWAYS		5571542	0					
ANR	5571818	Identifier	D_ALWAYS		5571542	0					
ANR	5571819	Argument	"""VM-GAHP initialized with run-mode %d\\n"""		5571542	1					
ANR	5571820	PrimaryExpression	"""VM-GAHP initialized with run-mode %d\\n"""		5571542	0					
ANR	5571821	Argument	vmgahp_mode		5571542	2					
ANR	5571822	Identifier	vmgahp_mode		5571542	0					
ANR	5571823	IfStatement	if ( ( vmgahp_mode == VMGAHP_TEST_MODE ) || ( vmgahp_mode == VMGAHP_KILL_MODE ) )		5571542	12					
ANR	5571824	Condition	( vmgahp_mode == VMGAHP_TEST_MODE ) || ( vmgahp_mode == VMGAHP_KILL_MODE )	293:5:6808:6878	5571542	0	True				
ANR	5571825	OrExpression	( vmgahp_mode == VMGAHP_TEST_MODE ) || ( vmgahp_mode == VMGAHP_KILL_MODE )		5571542	0		||			
ANR	5571826	EqualityExpression	vmgahp_mode == VMGAHP_TEST_MODE		5571542	0		==			
ANR	5571827	Identifier	vmgahp_mode		5571542	0					
ANR	5571828	Identifier	VMGAHP_TEST_MODE		5571542	1					
ANR	5571829	EqualityExpression	vmgahp_mode == VMGAHP_KILL_MODE		5571542	1		==			
ANR	5571830	Identifier	vmgahp_mode		5571542	0					
ANR	5571831	Identifier	VMGAHP_KILL_MODE		5571542	1					
ANR	5571832	CompoundStatement		74:2:1780:1801	5571542	1					
ANR	5571833	IdentifierDeclStatement	"char _vmtype [ ] = ""vmtype"" ;"	295:2:6886:6911	5571542	0	True				
ANR	5571834	IdentifierDecl	"_vmtype [ ] = ""vmtype"""		5571542	0					
ANR	5571835	IdentifierDeclType	char [ ]		5571542	0					
ANR	5571836	Identifier	_vmtype		5571542	1					
ANR	5571837	AssignmentExpression	"_vmtype [ ] = ""vmtype"""		5571542	2		=			
ANR	5571838	Identifier	_vmtype		5571542	0					
ANR	5571839	PrimaryExpression	"""vmtype"""		5571542	1					
ANR	5571840	IdentifierDeclStatement	"char _match [ ] = ""match"" ;"	296:2:6915:6938	5571542	1	True				
ANR	5571841	IdentifierDecl	"_match [ ] = ""match"""		5571542	0					
ANR	5571842	IdentifierDeclType	char [ ]		5571542	0					
ANR	5571843	Identifier	_match		5571542	1					
ANR	5571844	AssignmentExpression	"_match [ ] = ""match"""		5571542	2		=			
ANR	5571845	Identifier	_match		5571542	0					
ANR	5571846	PrimaryExpression	"""match"""		5571542	1					
ANR	5571847	IdentifierDeclStatement	"char * opt = NULL , * arg = NULL ;"	299:2:6984:7013	5571542	2	True				
ANR	5571848	IdentifierDecl	* opt = NULL		5571542	0					
ANR	5571849	IdentifierDeclType	char *		5571542	0					
ANR	5571850	Identifier	opt		5571542	1					
ANR	5571851	AssignmentExpression	* opt = NULL		5571542	2		=			
ANR	5571852	Identifier	NULL		5571542	0					
ANR	5571853	Identifier	NULL		5571542	1					
ANR	5571854	IdentifierDecl	* arg = NULL		5571542	1					
ANR	5571855	IdentifierDeclType	char *		5571542	0					
ANR	5571856	Identifier	arg		5571542	1					
ANR	5571857	AssignmentExpression	* arg = NULL		5571542	2		=			
ANR	5571858	Identifier	NULL		5571542	0					
ANR	5571859	Identifier	NULL		5571542	1					
ANR	5571860	IdentifierDeclStatement	int opt_len = 0 ;	300:2:7017:7032	5571542	3	True				
ANR	5571861	IdentifierDecl	opt_len = 0		5571542	0					
ANR	5571862	IdentifierDeclType	int		5571542	0					
ANR	5571863	Identifier	opt_len		5571542	1					
ANR	5571864	AssignmentExpression	opt_len = 0		5571542	2		=			
ANR	5571865	Identifier	opt_len		5571542	0					
ANR	5571866	PrimaryExpression	0		5571542	1					
ANR	5571867	IdentifierDeclStatement	char * * tmp = argv + 2 ;	301:2:7036:7057	5571542	4	True				
ANR	5571868	IdentifierDecl	* * tmp = argv + 2		5571542	0					
ANR	5571869	IdentifierDeclType	char * *		5571542	0					
ANR	5571870	Identifier	tmp		5571542	1					
ANR	5571871	AssignmentExpression	* * tmp = argv + 2		5571542	2		=			
ANR	5571872	Identifier	tmp		5571542	0					
ANR	5571873	AdditiveExpression	argv + 2		5571542	1		+			
ANR	5571874	Identifier	argv		5571542	0					
ANR	5571875	PrimaryExpression	2		5571542	1					
ANR	5571876	ForStatement	for ( tmp ++ ; * tmp ; tmp ++ )		5571542	5					
ANR	5571877	ForInit	tmp ++ ;	303:7:7067:7073	5571542	0	True				
ANR	5571878	PostIncDecOperationExpression	tmp ++		5571542	0					
ANR	5571879	Identifier	tmp		5571542	0					
ANR	5571880	IncDec	++		5571542	1					
ANR	5571881	Condition	* tmp	303:15:7075:7078	5571542	1	True				
ANR	5571882	UnaryOperationExpression	* tmp		5571542	0					
ANR	5571883	UnaryOperator	*		5571542	0					
ANR	5571884	Identifier	tmp		5571542	1					
ANR	5571885	PostIncDecOperationExpression	tmp ++	303:21:7081:7085	5571542	2	True				
ANR	5571886	Identifier	tmp		5571542	0					
ANR	5571887	IncDec	++		5571542	1					
ANR	5571888	CompoundStatement		76:29:1833:1833	5571542	3					
ANR	5571889	ExpressionStatement	opt = tmp [ 0 ]	304:3:7094:7106	5571542	0	True				
ANR	5571890	AssignmentExpression	opt = tmp [ 0 ]		5571542	0		=			
ANR	5571891	Identifier	opt		5571542	0					
ANR	5571892	ArrayIndexing	tmp [ 0 ]		5571542	1					
ANR	5571893	Identifier	tmp		5571542	0					
ANR	5571894	PrimaryExpression	0		5571542	1					
ANR	5571895	ExpressionStatement	arg = tmp [ 1 ]	305:3:7111:7123	5571542	1	True				
ANR	5571896	AssignmentExpression	arg = tmp [ 1 ]		5571542	0		=			
ANR	5571897	Identifier	arg		5571542	0					
ANR	5571898	ArrayIndexing	tmp [ 1 ]		5571542	1					
ANR	5571899	Identifier	tmp		5571542	0					
ANR	5571900	PrimaryExpression	1		5571542	1					
ANR	5571901	ExpressionStatement	opt_len = strlen ( opt )	306:3:7128:7149	5571542	2	True				
ANR	5571902	AssignmentExpression	opt_len = strlen ( opt )		5571542	0		=			
ANR	5571903	Identifier	opt_len		5571542	0					
ANR	5571904	CallExpression	strlen ( opt )		5571542	1					
ANR	5571905	Callee	strlen		5571542	0					
ANR	5571906	Identifier	strlen		5571542	0					
ANR	5571907	ArgumentList	opt		5571542	1					
ANR	5571908	Argument	opt		5571542	0					
ANR	5571909	Identifier	opt		5571542	0					
ANR	5571910	IfStatement	"if ( ! strncmp ( opt , _vmtype , opt_len ) )"		5571542	3					
ANR	5571911	Condition	"! strncmp ( opt , _vmtype , opt_len )"	308:7:7159:7190	5571542	0	True				
ANR	5571912	UnaryOperationExpression	"! strncmp ( opt , _vmtype , opt_len )"		5571542	0					
ANR	5571913	UnaryOperator	!		5571542	0					
ANR	5571914	CallExpression	"strncmp ( opt , _vmtype , opt_len )"		5571542	1					
ANR	5571915	Callee	strncmp		5571542	0					
ANR	5571916	Identifier	strncmp		5571542	0					
ANR	5571917	ArgumentList	opt		5571542	1					
ANR	5571918	Argument	opt		5571542	0					
ANR	5571919	Identifier	opt		5571542	0					
ANR	5571920	Argument	_vmtype		5571542	1					
ANR	5571921	Identifier	_vmtype		5571542	0					
ANR	5571922	Argument	opt_len		5571542	2					
ANR	5571923	Identifier	opt_len		5571542	0					
ANR	5571924	CompoundStatement		81:42:1938:1938	5571542	1					
ANR	5571925	IfStatement	if ( ! arg )		5571542	0					
ANR	5571926	Condition	! arg	310:8:7219:7222	5571542	0	True				
ANR	5571927	UnaryOperationExpression	! arg		5571542	0					
ANR	5571928	UnaryOperator	!		5571542	0					
ANR	5571929	Identifier	arg		5571542	1					
ANR	5571930	CompoundStatement		83:15:1970:1970	5571542	1					
ANR	5571931	ExpressionStatement	usage ( argv [ 0 ] )	311:5:7233:7247	5571542	0	True				
ANR	5571932	CallExpression	usage ( argv [ 0 ] )		5571542	0					
ANR	5571933	Callee	usage		5571542	0					
ANR	5571934	Identifier	usage		5571542	0					
ANR	5571935	ArgumentList	argv [ 0 ]		5571542	1					
ANR	5571936	Argument	argv [ 0 ]		5571542	0					
ANR	5571937	ArrayIndexing	argv [ 0 ]		5571542	0					
ANR	5571938	Identifier	argv		5571542	0					
ANR	5571939	PrimaryExpression	0		5571542	1					
ANR	5571940	ExpressionStatement	vmtype = arg	313:4:7259:7271	5571542	1	True				
ANR	5571941	AssignmentExpression	vmtype = arg		5571542	0		=			
ANR	5571942	Identifier	vmtype		5571542	0					
ANR	5571943	Identifier	arg		5571542	1					
ANR	5571944	ExpressionStatement	tmp ++	314:4:7277:7282	5571542	2	True				
ANR	5571945	PostIncDecOperationExpression	tmp ++		5571542	0					
ANR	5571946	Identifier	tmp		5571542	0					
ANR	5571947	IncDec	++		5571542	1					
ANR	5571948	ContinueStatement	continue ;	315:4:7331:7339	5571542	3	True				
ANR	5571949	IfStatement	"if ( ! strncmp ( opt , _match , opt_len ) )"		5571542	4					
ANR	5571950	Condition	"! strncmp ( opt , _match , opt_len )"	318:7:7354:7384	5571542	0	True				
ANR	5571951	UnaryOperationExpression	"! strncmp ( opt , _match , opt_len )"		5571542	0					
ANR	5571952	UnaryOperator	!		5571542	0					
ANR	5571953	CallExpression	"strncmp ( opt , _match , opt_len )"		5571542	1					
ANR	5571954	Callee	strncmp		5571542	0					
ANR	5571955	Identifier	strncmp		5571542	0					
ANR	5571956	ArgumentList	opt		5571542	1					
ANR	5571957	Argument	opt		5571542	0					
ANR	5571958	Identifier	opt		5571542	0					
ANR	5571959	Argument	_match		5571542	1					
ANR	5571960	Identifier	_match		5571542	0					
ANR	5571961	Argument	opt_len		5571542	2					
ANR	5571962	Identifier	opt_len		5571542	0					
ANR	5571963	CompoundStatement		91:41:2132:2132	5571542	1					
ANR	5571964	IfStatement	if ( ! arg )		5571542	0					
ANR	5571965	Condition	! arg	320:8:7418:7421	5571542	0	True				
ANR	5571966	UnaryOperationExpression	! arg		5571542	0					
ANR	5571967	UnaryOperator	!		5571542	0					
ANR	5571968	Identifier	arg		5571542	1					
ANR	5571969	CompoundStatement		93:15:2169:2169	5571542	1					
ANR	5571970	ExpressionStatement	usage ( argv [ 0 ] )	321:5:7432:7446	5571542	0	True				
ANR	5571971	CallExpression	usage ( argv [ 0 ] )		5571542	0					
ANR	5571972	Callee	usage		5571542	0					
ANR	5571973	Identifier	usage		5571542	0					
ANR	5571974	ArgumentList	argv [ 0 ]		5571542	1					
ANR	5571975	Argument	argv [ 0 ]		5571542	0					
ANR	5571976	ArrayIndexing	argv [ 0 ]		5571542	0					
ANR	5571977	Identifier	argv		5571542	0					
ANR	5571978	PrimaryExpression	0		5571542	1					
ANR	5571979	ExpressionStatement	matchstring = arg	323:4:7458:7475	5571542	1	True				
ANR	5571980	AssignmentExpression	matchstring = arg		5571542	0		=			
ANR	5571981	Identifier	matchstring		5571542	0					
ANR	5571982	Identifier	arg		5571542	1					
ANR	5571983	ExpressionStatement	tmp ++	324:4:7481:7486	5571542	2	True				
ANR	5571984	PostIncDecOperationExpression	tmp ++		5571542	0					
ANR	5571985	Identifier	tmp		5571542	0					
ANR	5571986	IncDec	++		5571542	1					
ANR	5571987	ContinueStatement	continue ;	325:4:7535:7543	5571542	3	True				
ANR	5571988	ExpressionStatement	usage ( argv [ 0 ] )	328:3:7554:7568	5571542	5	True				
ANR	5571989	CallExpression	usage ( argv [ 0 ] )		5571542	0					
ANR	5571990	Callee	usage		5571542	0					
ANR	5571991	Identifier	usage		5571542	0					
ANR	5571992	ArgumentList	argv [ 0 ]		5571542	1					
ANR	5571993	Argument	argv [ 0 ]		5571542	0					
ANR	5571994	ArrayIndexing	argv [ 0 ]		5571542	0					
ANR	5571995	Identifier	argv		5571542	0					
ANR	5571996	PrimaryExpression	0		5571542	1					
ANR	5571997	IfStatement	if ( vmgahp_mode == VMGAHP_TEST_MODE )		5571542	6					
ANR	5571998	Condition	vmgahp_mode == VMGAHP_TEST_MODE	331:6:7581:7611	5571542	0	True				
ANR	5571999	EqualityExpression	vmgahp_mode == VMGAHP_TEST_MODE		5571542	0		==			
ANR	5572000	Identifier	vmgahp_mode		5571542	0					
ANR	5572001	Identifier	VMGAHP_TEST_MODE		5571542	1					
ANR	5572002	CompoundStatement		104:40:2359:2359	5571542	1					
ANR	5572003	IfStatement	if ( vmtype . Length ( ) == 0 )		5571542	0					
ANR	5572004	Condition	vmtype . Length ( ) == 0	332:7:7624:7643	5571542	0	True				
ANR	5572005	EqualityExpression	vmtype . Length ( ) == 0		5571542	0		==			
ANR	5572006	CallExpression	vmtype . Length ( )		5571542	0					
ANR	5572007	Callee	vmtype . Length		5571542	0					
ANR	5572008	MemberAccess	vmtype . Length		5571542	0					
ANR	5572009	Identifier	vmtype		5571542	0					
ANR	5572010	Identifier	Length		5571542	1					
ANR	5572011	ArgumentList			5571542	1					
ANR	5572012	PrimaryExpression	0		5571542	1					
ANR	5572013	CompoundStatement		105:30:2391:2391	5571542	1					
ANR	5572014	ExpressionStatement	usage ( argv [ 0 ] )	333:4:7653:7667	5571542	0	True				
ANR	5572015	CallExpression	usage ( argv [ 0 ] )		5571542	0					
ANR	5572016	Callee	usage		5571542	0					
ANR	5572017	Identifier	usage		5571542	0					
ANR	5572018	ArgumentList	argv [ 0 ]		5571542	1					
ANR	5572019	Argument	argv [ 0 ]		5571542	0					
ANR	5572020	ArrayIndexing	argv [ 0 ]		5571542	0					
ANR	5572021	Identifier	argv		5571542	0					
ANR	5572022	PrimaryExpression	0		5571542	1					
ANR	5572023	ElseStatement	else		5571542	0					
ANR	5572024	IfStatement	if ( vmgahp_mode == VMGAHP_KILL_MODE )		5571542	0					
ANR	5572025	Condition	vmgahp_mode == VMGAHP_KILL_MODE	335:12:7686:7716	5571542	0	True				
ANR	5572026	EqualityExpression	vmgahp_mode == VMGAHP_KILL_MODE		5571542	0		==			
ANR	5572027	Identifier	vmgahp_mode		5571542	0					
ANR	5572028	Identifier	VMGAHP_KILL_MODE		5571542	1					
ANR	5572029	CompoundStatement		108:46:2464:2464	5571542	1					
ANR	5572030	IfStatement	if ( ( vmtype . Length ( ) == 0 ) || ( matchstring . Length ( ) == 0 ) )		5571542	0					
ANR	5572031	Condition	( vmtype . Length ( ) == 0 ) || ( matchstring . Length ( ) == 0 )	336:7:7729:7792	5571542	0	True				
ANR	5572032	OrExpression	( vmtype . Length ( ) == 0 ) || ( matchstring . Length ( ) == 0 )		5571542	0		||			
ANR	5572033	EqualityExpression	vmtype . Length ( ) == 0		5571542	0		==			
ANR	5572034	CallExpression	vmtype . Length ( )		5571542	0					
ANR	5572035	Callee	vmtype . Length		5571542	0					
ANR	5572036	MemberAccess	vmtype . Length		5571542	0					
ANR	5572037	Identifier	vmtype		5571542	0					
ANR	5572038	Identifier	Length		5571542	1					
ANR	5572039	ArgumentList			5571542	1					
ANR	5572040	PrimaryExpression	0		5571542	1					
ANR	5572041	EqualityExpression	matchstring . Length ( ) == 0		5571542	1		==			
ANR	5572042	CallExpression	matchstring . Length ( )		5571542	0					
ANR	5572043	Callee	matchstring . Length		5571542	0					
ANR	5572044	MemberAccess	matchstring . Length		5571542	0					
ANR	5572045	Identifier	matchstring		5571542	0					
ANR	5572046	Identifier	Length		5571542	1					
ANR	5572047	ArgumentList			5571542	1					
ANR	5572048	PrimaryExpression	0		5571542	1					
ANR	5572049	CompoundStatement		111:3:2543:2543	5571542	1					
ANR	5572050	ExpressionStatement	usage ( argv [ 0 ] )	339:4:7805:7819	5571542	0	True				
ANR	5572051	CallExpression	usage ( argv [ 0 ] )		5571542	0					
ANR	5572052	Callee	usage		5571542	0					
ANR	5572053	Identifier	usage		5571542	0					
ANR	5572054	ArgumentList	argv [ 0 ]		5571542	1					
ANR	5572055	Argument	argv [ 0 ]		5571542	0					
ANR	5572056	ArrayIndexing	argv [ 0 ]		5571542	0					
ANR	5572057	Identifier	argv		5571542	0					
ANR	5572058	PrimaryExpression	0		5571542	1					
ANR	5572059	ElseStatement	else		5571542	0					
ANR	5572060	CompoundStatement		115:7:2581:2581	5571542	0					
ANR	5572061	ExpressionStatement	"vmtype = getenv ( ""VMGAHP_VMTYPE"" )"	343:2:7841:7873	5571542	0	True				
ANR	5572062	AssignmentExpression	"vmtype = getenv ( ""VMGAHP_VMTYPE"" )"		5571542	0		=			
ANR	5572063	Identifier	vmtype		5571542	0					
ANR	5572064	CallExpression	"getenv ( ""VMGAHP_VMTYPE"" )"		5571542	1					
ANR	5572065	Callee	getenv		5571542	0					
ANR	5572066	Identifier	getenv		5571542	0					
ANR	5572067	ArgumentList	"""VMGAHP_VMTYPE"""		5571542	1					
ANR	5572068	Argument	"""VMGAHP_VMTYPE"""		5571542	0					
ANR	5572069	PrimaryExpression	"""VMGAHP_VMTYPE"""		5571542	0					
ANR	5572070	IfStatement	if ( vmtype . IsEmpty ( ) )		5571542	1					
ANR	5572071	Condition	vmtype . IsEmpty ( )	344:6:7881:7896	5571542	0	True				
ANR	5572072	CallExpression	vmtype . IsEmpty ( )		5571542	0					
ANR	5572073	Callee	vmtype . IsEmpty		5571542	0					
ANR	5572074	MemberAccess	vmtype . IsEmpty		5571542	0					
ANR	5572075	Identifier	vmtype		5571542	0					
ANR	5572076	Identifier	IsEmpty		5571542	1					
ANR	5572077	ArgumentList			5571542	1					
ANR	5572078	CompoundStatement		117:25:2644:2644	5571542	1					
ANR	5572079	ExpressionStatement	"vmprintf ( D_ALWAYS , ""cannot find vmtype\\n"" )"	345:3:7905:7947	5571542	0	True				
ANR	5572080	CallExpression	"vmprintf ( D_ALWAYS , ""cannot find vmtype\\n"" )"		5571542	0					
ANR	5572081	Callee	vmprintf		5571542	0					
ANR	5572082	Identifier	vmprintf		5571542	0					
ANR	5572083	ArgumentList	D_ALWAYS		5571542	1					
ANR	5572084	Argument	D_ALWAYS		5571542	0					
ANR	5572085	Identifier	D_ALWAYS		5571542	0					
ANR	5572086	Argument	"""cannot find vmtype\\n"""		5571542	1					
ANR	5572087	PrimaryExpression	"""cannot find vmtype\\n"""		5571542	0					
ANR	5572088	ExpressionStatement	DC_Exit ( 1 )	346:3:7952:7962	5571542	1	True				
ANR	5572089	CallExpression	DC_Exit ( 1 )		5571542	0					
ANR	5572090	Callee	DC_Exit		5571542	0					
ANR	5572091	Identifier	DC_Exit		5571542	0					
ANR	5572092	ArgumentList	1		5571542	1					
ANR	5572093	Argument	1		5571542	0					
ANR	5572094	PrimaryExpression	1		5571542	0					
ANR	5572095	ExpressionStatement	"workingdir = getenv ( ""VMGAHP_WORKING_DIR"" )"	349:2:7971:8012	5571542	2	True				
ANR	5572096	AssignmentExpression	"workingdir = getenv ( ""VMGAHP_WORKING_DIR"" )"		5571542	0		=			
ANR	5572097	Identifier	workingdir		5571542	0					
ANR	5572098	CallExpression	"getenv ( ""VMGAHP_WORKING_DIR"" )"		5571542	1					
ANR	5572099	Callee	getenv		5571542	0					
ANR	5572100	Identifier	getenv		5571542	0					
ANR	5572101	ArgumentList	"""VMGAHP_WORKING_DIR"""		5571542	1					
ANR	5572102	Argument	"""VMGAHP_WORKING_DIR"""		5571542	0					
ANR	5572103	PrimaryExpression	"""VMGAHP_WORKING_DIR"""		5571542	0					
ANR	5572104	IfStatement	if ( workingdir . IsEmpty ( ) )		5571542	3					
ANR	5572105	Condition	workingdir . IsEmpty ( )	350:6:8020:8039	5571542	0	True				
ANR	5572106	CallExpression	workingdir . IsEmpty ( )		5571542	0					
ANR	5572107	Callee	workingdir . IsEmpty		5571542	0					
ANR	5572108	MemberAccess	workingdir . IsEmpty		5571542	0					
ANR	5572109	Identifier	workingdir		5571542	0					
ANR	5572110	Identifier	IsEmpty		5571542	1					
ANR	5572111	ArgumentList			5571542	1					
ANR	5572112	CompoundStatement		123:29:2787:2787	5571542	1					
ANR	5572113	ExpressionStatement	"vmprintf ( D_ALWAYS , ""cannot find vmgahp working dir\\n"" )"	351:3:8048:8102	5571542	0	True				
ANR	5572114	CallExpression	"vmprintf ( D_ALWAYS , ""cannot find vmgahp working dir\\n"" )"		5571542	0					
ANR	5572115	Callee	vmprintf		5571542	0					
ANR	5572116	Identifier	vmprintf		5571542	0					
ANR	5572117	ArgumentList	D_ALWAYS		5571542	1					
ANR	5572118	Argument	D_ALWAYS		5571542	0					
ANR	5572119	Identifier	D_ALWAYS		5571542	0					
ANR	5572120	Argument	"""cannot find vmgahp working dir\\n"""		5571542	1					
ANR	5572121	PrimaryExpression	"""cannot find vmgahp working dir\\n"""		5571542	0					
ANR	5572122	ExpressionStatement	DC_Exit ( 1 )	352:3:8107:8117	5571542	1	True				
ANR	5572123	CallExpression	DC_Exit ( 1 )		5571542	0					
ANR	5572124	Callee	DC_Exit		5571542	0					
ANR	5572125	Identifier	DC_Exit		5571542	0					
ANR	5572126	ArgumentList	1		5571542	1					
ANR	5572127	Argument	1		5571542	0					
ANR	5572128	PrimaryExpression	1		5571542	0					
ANR	5572129	ExpressionStatement	Init ( )	356:1:8128:8134	5571542	13	True				
ANR	5572130	CallExpression	Init ( )		5571542	0					
ANR	5572131	Callee	Init		5571542	0					
ANR	5572132	Identifier	Init		5571542	0					
ANR	5572133	ArgumentList			5571542	1					
ANR	5572134	ExpressionStatement	Register ( )	357:1:8137:8147	5571542	14	True				
ANR	5572135	CallExpression	Register ( )		5571542	0					
ANR	5572136	Callee	Register		5571542	0					
ANR	5572137	Identifier	Register		5571542	0					
ANR	5572138	ArgumentList			5571542	1					
ANR	5572139	ExpressionStatement	Reconfig ( )	358:1:8150:8160	5571542	15	True				
ANR	5572140	CallExpression	Reconfig ( )		5571542	0					
ANR	5572141	Callee	Reconfig		5571542	0					
ANR	5572142	Identifier	Reconfig		5571542	0					
ANR	5572143	ArgumentList			5571542	1					
ANR	5572144	ExpressionStatement	vmtype . lower_case ( )	361:1:8195:8214	5571542	16	True				
ANR	5572145	CallExpression	vmtype . lower_case ( )		5571542	0					
ANR	5572146	Callee	vmtype . lower_case		5571542	0					
ANR	5572147	MemberAccess	vmtype . lower_case		5571542	0					
ANR	5572148	Identifier	vmtype		5571542	0					
ANR	5572149	Identifier	lower_case		5571542	1					
ANR	5572150	ArgumentList			5571542	1					
ANR	5572151	IfStatement	if ( verify_vm_type ( vmtype . Value ( ) ) == false )		5571542	17					
ANR	5572152	Condition	verify_vm_type ( vmtype . Value ( ) ) == false	364:5:8280:8318	5571542	0	True				
ANR	5572153	EqualityExpression	verify_vm_type ( vmtype . Value ( ) ) == false		5571542	0		==			
ANR	5572154	CallExpression	verify_vm_type ( vmtype . Value ( ) )		5571542	0					
ANR	5572155	Callee	verify_vm_type		5571542	0					
ANR	5572156	Identifier	verify_vm_type		5571542	0					
ANR	5572157	ArgumentList	vmtype . Value ( )		5571542	1					
ANR	5572158	Argument	vmtype . Value ( )		5571542	0					
ANR	5572159	CallExpression	vmtype . Value ( )		5571542	0					
ANR	5572160	Callee	vmtype . Value		5571542	0					
ANR	5572161	MemberAccess	vmtype . Value		5571542	0					
ANR	5572162	Identifier	vmtype		5571542	0					
ANR	5572163	Identifier	Value		5571542	1					
ANR	5572164	ArgumentList			5571542	1					
ANR	5572165	Identifier	false		5571542	1					
ANR	5572166	CompoundStatement		137:47:3066:3066	5571542	1					
ANR	5572167	ExpressionStatement	DC_Exit ( 1 )	365:2:8326:8336	5571542	0	True				
ANR	5572168	CallExpression	DC_Exit ( 1 )		5571542	0					
ANR	5572169	Callee	DC_Exit		5571542	0					
ANR	5572170	Identifier	DC_Exit		5571542	0					
ANR	5572171	ArgumentList	1		5571542	1					
ANR	5572172	Argument	1		5571542	0					
ANR	5572173	PrimaryExpression	1		5571542	0					
ANR	5572174	ExpressionStatement	initialize_uids ( )	368:1:8343:8360	5571542	18	True				
ANR	5572175	CallExpression	initialize_uids ( )		5571542	0					
ANR	5572176	Callee	initialize_uids		5571542	0					
ANR	5572177	Identifier	initialize_uids		5571542	0					
ANR	5572178	ArgumentList			5571542	1					
ANR	5572179	IfStatement	"if ( ( strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_XEN ) == 0 ) || ( strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_KVM ) == 0 ) )"		5571542	19					
ANR	5572180	Condition	"( strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_XEN ) == 0 ) || ( strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_KVM ) == 0 )"	371:5:8424:8541	5571542	0	True				
ANR	5572181	OrExpression	"( strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_XEN ) == 0 ) || ( strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_KVM ) == 0 )"		5571542	0		||			
ANR	5572182	EqualityExpression	"strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_XEN ) == 0"		5571542	0		==			
ANR	5572183	CallExpression	"strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_XEN )"		5571542	0					
ANR	5572184	Callee	strcasecmp		5571542	0					
ANR	5572185	Identifier	strcasecmp		5571542	0					
ANR	5572186	ArgumentList	vmtype . Value ( )		5571542	1					
ANR	5572187	Argument	vmtype . Value ( )		5571542	0					
ANR	5572188	CallExpression	vmtype . Value ( )		5571542	0					
ANR	5572189	Callee	vmtype . Value		5571542	0					
ANR	5572190	MemberAccess	vmtype . Value		5571542	0					
ANR	5572191	Identifier	vmtype		5571542	0					
ANR	5572192	Identifier	Value		5571542	1					
ANR	5572193	ArgumentList			5571542	1					
ANR	5572194	Argument	CONDOR_VM_UNIVERSE_XEN		5571542	1					
ANR	5572195	Identifier	CONDOR_VM_UNIVERSE_XEN		5571542	0					
ANR	5572196	PrimaryExpression	0		5571542	1					
ANR	5572197	EqualityExpression	"strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_KVM ) == 0"		5571542	1		==			
ANR	5572198	CallExpression	"strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_KVM )"		5571542	0					
ANR	5572199	Callee	strcasecmp		5571542	0					
ANR	5572200	Identifier	strcasecmp		5571542	0					
ANR	5572201	ArgumentList	vmtype . Value ( )		5571542	1					
ANR	5572202	Argument	vmtype . Value ( )		5571542	0					
ANR	5572203	CallExpression	vmtype . Value ( )		5571542	0					
ANR	5572204	Callee	vmtype . Value		5571542	0					
ANR	5572205	MemberAccess	vmtype . Value		5571542	0					
ANR	5572206	Identifier	vmtype		5571542	0					
ANR	5572207	Identifier	Value		5571542	1					
ANR	5572208	ArgumentList			5571542	1					
ANR	5572209	Argument	CONDOR_VM_UNIVERSE_KVM		5571542	1					
ANR	5572210	Identifier	CONDOR_VM_UNIVERSE_KVM		5571542	0					
ANR	5572211	PrimaryExpression	0		5571542	1					
ANR	5572212	CompoundStatement		144:125:3288:3288	5571542	1					
ANR	5572213	IfStatement	if ( ! canSwitchUid ( ) )		5571542	0					
ANR	5572214	Condition	! canSwitchUid ( )	373:6:8586:8600	5571542	0	True				
ANR	5572215	UnaryOperationExpression	! canSwitchUid ( )		5571542	0					
ANR	5572216	UnaryOperator	!		5571542	0					
ANR	5572217	CallExpression	canSwitchUid ( )		5571542	1					
ANR	5572218	Callee	canSwitchUid		5571542	0					
ANR	5572219	Identifier	canSwitchUid		5571542	0					
ANR	5572220	ArgumentList			5571542	1					
ANR	5572221	CompoundStatement		146:24:3348:3348	5571542	1					
ANR	5572222	Statement	vmprintf	374:3:8609:8616	5571542	0	True				
ANR	5572223	Statement	(	374:11:8617:8617	5571542	1	True				
ANR	5572224	Statement	D_ALWAYS	374:12:8618:8625	5571542	2	True				
ANR	5572225	Statement	","	374:20:8626:8626	5571542	3	True				
ANR	5572226	Statement	"""VMGahp server for Xen or KVM requires """	374:22:8628:8667	5571542	4	True				
ANR	5572227	Statement	"""root privilege\\n"""	375:5:8674:8691	5571542	5	True				
ANR	5572228	Statement	)	375:23:8692:8692	5571542	6	True				
ANR	5572229	ExpressionStatement		375:24:8693:8693	5571542	7	True				
ANR	5572230	ExpressionStatement	DC_Exit ( 1 )	376:3:8698:8708	5571542	8	True				
ANR	5572231	CallExpression	DC_Exit ( 1 )		5571542	0					
ANR	5572232	Callee	DC_Exit		5571542	0					
ANR	5572233	Identifier	DC_Exit		5571542	0					
ANR	5572234	ArgumentList	1		5571542	1					
ANR	5572235	Argument	1		5571542	0					
ANR	5572236	PrimaryExpression	1		5571542	0					
ANR	5572237	Statement	VMGahpConfig	382:1:8792:8803	5571542	20	True				
ANR	5572238	Statement	*	382:14:8805:8805	5571542	21	True				
ANR	5572239	Statement	gahpconfig	382:15:8806:8815	5571542	22	True				
ANR	5572240	Statement	=	382:26:8817:8817	5571542	23	True				
ANR	5572241	Statement	new	382:28:8819:8821	5571542	24	True				
ANR	5572242	ExpressionStatement	VMGahpConfig	382:32:8823:8835	5571542	25	True				
ANR	5572243	Identifier	VMGahpConfig		5571542	0					
ANR	5572244	ExpressionStatement	ASSERT ( gahpconfig )	383:1:8838:8856	5571542	26	True				
ANR	5572245	CallExpression	ASSERT ( gahpconfig )		5571542	0					
ANR	5572246	Callee	ASSERT		5571542	0					
ANR	5572247	Identifier	ASSERT		5571542	0					
ANR	5572248	ArgumentList	gahpconfig		5571542	1					
ANR	5572249	Argument	gahpconfig		5571542	0					
ANR	5572250	Identifier	gahpconfig		5571542	0					
ANR	5572251	ExpressionStatement	set_root_priv ( )	384:1:8859:8874	5571542	27	True				
ANR	5572252	CallExpression	set_root_priv ( )		5571542	0					
ANR	5572253	Callee	set_root_priv		5571542	0					
ANR	5572254	Identifier	set_root_priv		5571542	0					
ANR	5572255	ArgumentList			5571542	1					
ANR	5572256	IfStatement	if ( gahpconfig -> init ( vmtype . Value ( ) ) == false )		5571542	28					
ANR	5572257	Condition	gahpconfig -> init ( vmtype . Value ( ) ) == false	385:5:8881:8921	5571542	0	True				
ANR	5572258	EqualityExpression	gahpconfig -> init ( vmtype . Value ( ) ) == false		5571542	0		==			
ANR	5572259	CallExpression	gahpconfig -> init ( vmtype . Value ( ) )		5571542	0					
ANR	5572260	Callee	gahpconfig -> init		5571542	0					
ANR	5572261	PtrMemberAccess	gahpconfig -> init		5571542	0					
ANR	5572262	Identifier	gahpconfig		5571542	0					
ANR	5572263	Identifier	init		5571542	1					
ANR	5572264	ArgumentList	vmtype . Value ( )		5571542	1					
ANR	5572265	Argument	vmtype . Value ( )		5571542	0					
ANR	5572266	CallExpression	vmtype . Value ( )		5571542	0					
ANR	5572267	Callee	vmtype . Value		5571542	0					
ANR	5572268	MemberAccess	vmtype . Value		5571542	0					
ANR	5572269	Identifier	vmtype		5571542	0					
ANR	5572270	Identifier	Value		5571542	1					
ANR	5572271	ArgumentList			5571542	1					
ANR	5572272	Identifier	false		5571542	1					
ANR	5572273	CompoundStatement		158:49:3669:3669	5571542	1					
ANR	5572274	ExpressionStatement	DC_Exit ( 1 )	386:2:8929:8939	5571542	0	True				
ANR	5572275	CallExpression	DC_Exit ( 1 )		5571542	0					
ANR	5572276	Callee	DC_Exit		5571542	0					
ANR	5572277	Identifier	DC_Exit		5571542	0					
ANR	5572278	ArgumentList	1		5571542	1					
ANR	5572279	Argument	1		5571542	0					
ANR	5572280	PrimaryExpression	1		5571542	0					
ANR	5572281	ExpressionStatement	set_condor_priv ( )	389:1:8946:8963	5571542	29	True				
ANR	5572282	CallExpression	set_condor_priv ( )		5571542	0					
ANR	5572283	Callee	set_condor_priv		5571542	0					
ANR	5572284	Identifier	set_condor_priv		5571542	0					
ANR	5572285	ArgumentList			5571542	1					
ANR	5572286	IfStatement	"if ( ( strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_XEN ) == 0 ) )"		5571542	30					
ANR	5572287	Condition	"strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_XEN ) == 0"	399:5:9407:9463	5571542	0	True				
ANR	5572288	EqualityExpression	"strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_XEN ) == 0"		5571542	0		==			
ANR	5572289	CallExpression	"strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_XEN )"		5571542	0					
ANR	5572290	Callee	strcasecmp		5571542	0					
ANR	5572291	Identifier	strcasecmp		5571542	0					
ANR	5572292	ArgumentList	vmtype . Value ( )		5571542	1					
ANR	5572293	Argument	vmtype . Value ( )		5571542	0					
ANR	5572294	CallExpression	vmtype . Value ( )		5571542	0					
ANR	5572295	Callee	vmtype . Value		5571542	0					
ANR	5572296	MemberAccess	vmtype . Value		5571542	0					
ANR	5572297	Identifier	vmtype		5571542	0					
ANR	5572298	Identifier	Value		5571542	1					
ANR	5572299	ArgumentList			5571542	1					
ANR	5572300	Argument	CONDOR_VM_UNIVERSE_XEN		5571542	1					
ANR	5572301	Identifier	CONDOR_VM_UNIVERSE_XEN		5571542	0					
ANR	5572302	PrimaryExpression	0		5571542	1					
ANR	5572303	CompoundStatement		173:2:4214:4247	5571542	1					
ANR	5572304	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	400:2:9470:9503	5571542	0	True				
ANR	5572305	IdentifierDecl	priv = set_root_priv ( )		5571542	0					
ANR	5572306	IdentifierDeclType	priv_state		5571542	0					
ANR	5572307	Identifier	priv		5571542	1					
ANR	5572308	AssignmentExpression	priv = set_root_priv ( )		5571542	2		=			
ANR	5572309	Identifier	priv		5571542	0					
ANR	5572310	CallExpression	set_root_priv ( )		5571542	1					
ANR	5572311	Callee	set_root_priv		5571542	0					
ANR	5572312	Identifier	set_root_priv		5571542	0					
ANR	5572313	ArgumentList			5571542	1					
ANR	5572314	IfStatement	if ( XenType :: checkXenParams ( gahpconfig ) == false )		5571542	1					
ANR	5572315	Condition	XenType :: checkXenParams ( gahpconfig ) == false	401:6:9511:9554	5571542	0	True				
ANR	5572316	EqualityExpression	XenType :: checkXenParams ( gahpconfig ) == false		5571542	0		==			
ANR	5572317	CallExpression	XenType :: checkXenParams ( gahpconfig )		5571542	0					
ANR	5572318	Callee	XenType :: checkXenParams		5571542	0					
ANR	5572319	Identifier	XenType :: checkXenParams		5571542	0					
ANR	5572320	ArgumentList	gahpconfig		5571542	1					
ANR	5572321	Argument	gahpconfig		5571542	0					
ANR	5572322	Identifier	gahpconfig		5571542	0					
ANR	5572323	Identifier	false		5571542	1					
ANR	5572324	CompoundStatement		174:53:4302:4302	5571542	1					
ANR	5572325	ExpressionStatement	DC_Exit ( 1 )	402:3:9563:9573	5571542	0	True				
ANR	5572326	CallExpression	DC_Exit ( 1 )		5571542	0					
ANR	5572327	Callee	DC_Exit		5571542	0					
ANR	5572328	Identifier	DC_Exit		5571542	0					
ANR	5572329	ArgumentList	1		5571542	1					
ANR	5572330	Argument	1		5571542	0					
ANR	5572331	PrimaryExpression	1		5571542	0					
ANR	5572332	ExpressionStatement	set_priv ( priv )	404:2:9581:9595	5571542	2	True				
ANR	5572333	CallExpression	set_priv ( priv )		5571542	0					
ANR	5572334	Callee	set_priv		5571542	0					
ANR	5572335	Identifier	set_priv		5571542	0					
ANR	5572336	ArgumentList	priv		5571542	1					
ANR	5572337	Argument	priv		5571542	0					
ANR	5572338	Identifier	priv		5571542	0					
ANR	5572339	ElseStatement	else		5571542	0					
ANR	5572340	IfStatement	"if ( ( strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_KVM ) == 0 ) )"		5571542	0					
ANR	5572341	Condition	"strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_KVM ) == 0"	405:11:9608:9664	5571542	0	True				
ANR	5572342	EqualityExpression	"strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_KVM ) == 0"		5571542	0		==			
ANR	5572343	CallExpression	"strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_KVM )"		5571542	0					
ANR	5572344	Callee	strcasecmp		5571542	0					
ANR	5572345	Identifier	strcasecmp		5571542	0					
ANR	5572346	ArgumentList	vmtype . Value ( )		5571542	1					
ANR	5572347	Argument	vmtype . Value ( )		5571542	0					
ANR	5572348	CallExpression	vmtype . Value ( )		5571542	0					
ANR	5572349	Callee	vmtype . Value		5571542	0					
ANR	5572350	MemberAccess	vmtype . Value		5571542	0					
ANR	5572351	Identifier	vmtype		5571542	0					
ANR	5572352	Identifier	Value		5571542	1					
ANR	5572353	ArgumentList			5571542	1					
ANR	5572354	Argument	CONDOR_VM_UNIVERSE_KVM		5571542	1					
ANR	5572355	Identifier	CONDOR_VM_UNIVERSE_KVM		5571542	0					
ANR	5572356	PrimaryExpression	0		5571542	1					
ANR	5572357	CompoundStatement		179:16:4429:4462	5571542	1					
ANR	5572358	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	406:16:9685:9718	5571542	0	True				
ANR	5572359	IdentifierDecl	priv = set_root_priv ( )		5571542	0					
ANR	5572360	IdentifierDeclType	priv_state		5571542	0					
ANR	5572361	Identifier	priv		5571542	1					
ANR	5572362	AssignmentExpression	priv = set_root_priv ( )		5571542	2		=			
ANR	5572363	Identifier	priv		5571542	0					
ANR	5572364	CallExpression	set_root_priv ( )		5571542	1					
ANR	5572365	Callee	set_root_priv		5571542	0					
ANR	5572366	Identifier	set_root_priv		5571542	0					
ANR	5572367	ArgumentList			5571542	1					
ANR	5572368	IfStatement	if ( KVMType :: checkXenParams ( gahpconfig ) == false )		5571542	1					
ANR	5572369	Condition	KVMType :: checkXenParams ( gahpconfig ) == false	407:6:9726:9769	5571542	0	True				
ANR	5572370	EqualityExpression	KVMType :: checkXenParams ( gahpconfig ) == false		5571542	0		==			
ANR	5572371	CallExpression	KVMType :: checkXenParams ( gahpconfig )		5571542	0					
ANR	5572372	Callee	KVMType :: checkXenParams		5571542	0					
ANR	5572373	Identifier	KVMType :: checkXenParams		5571542	0					
ANR	5572374	ArgumentList	gahpconfig		5571542	1					
ANR	5572375	Argument	gahpconfig		5571542	0					
ANR	5572376	Identifier	gahpconfig		5571542	0					
ANR	5572377	Identifier	false		5571542	1					
ANR	5572378	CompoundStatement		180:53:4517:4517	5571542	1					
ANR	5572379	ExpressionStatement	DC_Exit ( 1 )	408:3:9778:9788	5571542	0	True				
ANR	5572380	CallExpression	DC_Exit ( 1 )		5571542	0					
ANR	5572381	Callee	DC_Exit		5571542	0					
ANR	5572382	Identifier	DC_Exit		5571542	0					
ANR	5572383	ArgumentList	1		5571542	1					
ANR	5572384	Argument	1		5571542	0					
ANR	5572385	PrimaryExpression	1		5571542	0					
ANR	5572386	ExpressionStatement	set_priv ( priv )	410:2:9796:9810	5571542	2	True				
ANR	5572387	CallExpression	set_priv ( priv )		5571542	0					
ANR	5572388	Callee	set_priv		5571542	0					
ANR	5572389	Identifier	set_priv		5571542	0					
ANR	5572390	ArgumentList	priv		5571542	1					
ANR	5572391	Argument	priv		5571542	0					
ANR	5572392	Identifier	priv		5571542	0					
ANR	5572393	ElseStatement	else		5571542	0					
ANR	5572394	IfStatement	"if ( strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_VMWARE ) == 0 )"		5571542	0					
ANR	5572395	Condition	"strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_VMWARE ) == 0"	413:5:9832:9889	5571542	0	True				
ANR	5572396	EqualityExpression	"strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_VMWARE ) == 0"		5571542	0		==			
ANR	5572397	CallExpression	"strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_VMWARE )"		5571542	0					
ANR	5572398	Callee	strcasecmp		5571542	0					
ANR	5572399	Identifier	strcasecmp		5571542	0					
ANR	5572400	ArgumentList	vmtype . Value ( )		5571542	1					
ANR	5572401	Argument	vmtype . Value ( )		5571542	0					
ANR	5572402	CallExpression	vmtype . Value ( )		5571542	0					
ANR	5572403	Callee	vmtype . Value		5571542	0					
ANR	5572404	MemberAccess	vmtype . Value		5571542	0					
ANR	5572405	Identifier	vmtype		5571542	0					
ANR	5572406	Identifier	Value		5571542	1					
ANR	5572407	ArgumentList			5571542	1					
ANR	5572408	Argument	CONDOR_VM_UNIVERSE_VMWARE		5571542	1					
ANR	5572409	Identifier	CONDOR_VM_UNIVERSE_VMWARE		5571542	0					
ANR	5572410	PrimaryExpression	0		5571542	1					
ANR	5572411	CompoundStatement		187:2:4641:4674	5571542	1					
ANR	5572412	IdentifierDeclStatement	priv_state priv = set_user_priv ( ) ;	414:2:9897:9930	5571542	0	True				
ANR	5572413	IdentifierDecl	priv = set_user_priv ( )		5571542	0					
ANR	5572414	IdentifierDeclType	priv_state		5571542	0					
ANR	5572415	Identifier	priv		5571542	1					
ANR	5572416	AssignmentExpression	priv = set_user_priv ( )		5571542	2		=			
ANR	5572417	Identifier	priv		5571542	0					
ANR	5572418	CallExpression	set_user_priv ( )		5571542	1					
ANR	5572419	Callee	set_user_priv		5571542	0					
ANR	5572420	Identifier	set_user_priv		5571542	0					
ANR	5572421	ArgumentList			5571542	1					
ANR	5572422	IfStatement	if ( VMwareType :: checkVMwareParams ( gahpconfig ) == false )		5571542	1					
ANR	5572423	Condition	VMwareType :: checkVMwareParams ( gahpconfig ) == false	415:6:9938:9987	5571542	0	True				
ANR	5572424	EqualityExpression	VMwareType :: checkVMwareParams ( gahpconfig ) == false		5571542	0		==			
ANR	5572425	CallExpression	VMwareType :: checkVMwareParams ( gahpconfig )		5571542	0					
ANR	5572426	Callee	VMwareType :: checkVMwareParams		5571542	0					
ANR	5572427	Identifier	VMwareType :: checkVMwareParams		5571542	0					
ANR	5572428	ArgumentList	gahpconfig		5571542	1					
ANR	5572429	Argument	gahpconfig		5571542	0					
ANR	5572430	Identifier	gahpconfig		5571542	0					
ANR	5572431	Identifier	false		5571542	1					
ANR	5572432	CompoundStatement		188:59:4735:4735	5571542	1					
ANR	5572433	ExpressionStatement	DC_Exit ( 1 )	416:3:9996:10006	5571542	0	True				
ANR	5572434	CallExpression	DC_Exit ( 1 )		5571542	0					
ANR	5572435	Callee	DC_Exit		5571542	0					
ANR	5572436	Identifier	DC_Exit		5571542	0					
ANR	5572437	ArgumentList	1		5571542	1					
ANR	5572438	Argument	1		5571542	0					
ANR	5572439	PrimaryExpression	1		5571542	0					
ANR	5572440	ExpressionStatement	set_priv ( priv )	418:2:10014:10028	5571542	2	True				
ANR	5572441	CallExpression	set_priv ( priv )		5571542	0					
ANR	5572442	Callee	set_priv		5571542	0					
ANR	5572443	Identifier	set_priv		5571542	0					
ANR	5572444	ArgumentList	priv		5571542	1					
ANR	5572445	Argument	priv		5571542	0					
ANR	5572446	Identifier	priv		5571542	0					
ANR	5572447	IfStatement	if ( vmgahp_mode == VMGAHP_TEST_MODE )		5571542	31					
ANR	5572448	Condition	vmgahp_mode == VMGAHP_TEST_MODE	421:5:10039:10069	5571542	0	True				
ANR	5572449	EqualityExpression	vmgahp_mode == VMGAHP_TEST_MODE		5571542	0		==			
ANR	5572450	Identifier	vmgahp_mode		5571542	0					
ANR	5572451	Identifier	VMGAHP_TEST_MODE		5571542	1					
ANR	5572452	CompoundStatement		194:39:4817:4817	5571542	1					
ANR	5572453	IfStatement	"if ( ( strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_XEN ) == 0 ) )"		5571542	0					
ANR	5572454	Condition	"strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_XEN ) == 0"	424:7:10155:10211	5571542	0	True				
ANR	5572455	EqualityExpression	"strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_XEN ) == 0"		5571542	0		==			
ANR	5572456	CallExpression	"strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_XEN )"		5571542	0					
ANR	5572457	Callee	strcasecmp		5571542	0					
ANR	5572458	Identifier	strcasecmp		5571542	0					
ANR	5572459	ArgumentList	vmtype . Value ( )		5571542	1					
ANR	5572460	Argument	vmtype . Value ( )		5571542	0					
ANR	5572461	CallExpression	vmtype . Value ( )		5571542	0					
ANR	5572462	Callee	vmtype . Value		5571542	0					
ANR	5572463	MemberAccess	vmtype . Value		5571542	0					
ANR	5572464	Identifier	vmtype		5571542	0					
ANR	5572465	Identifier	Value		5571542	1					
ANR	5572466	ArgumentList			5571542	1					
ANR	5572467	Argument	CONDOR_VM_UNIVERSE_XEN		5571542	1					
ANR	5572468	Identifier	CONDOR_VM_UNIVERSE_XEN		5571542	0					
ANR	5572469	PrimaryExpression	0		5571542	1					
ANR	5572470	CompoundStatement		198:3:4963:4996	5571542	1					
ANR	5572471	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	425:3:10219:10252	5571542	0	True				
ANR	5572472	IdentifierDecl	priv = set_root_priv ( )		5571542	0					
ANR	5572473	IdentifierDeclType	priv_state		5571542	0					
ANR	5572474	Identifier	priv		5571542	1					
ANR	5572475	AssignmentExpression	priv = set_root_priv ( )		5571542	2		=			
ANR	5572476	Identifier	priv		5571542	0					
ANR	5572477	CallExpression	set_root_priv ( )		5571542	1					
ANR	5572478	Callee	set_root_priv		5571542	0					
ANR	5572479	Identifier	set_root_priv		5571542	0					
ANR	5572480	ArgumentList			5571542	1					
ANR	5572481	IfStatement	if ( XenType :: checkXenParams ( gahpconfig ) == false )		5571542	1					
ANR	5572482	Condition	XenType :: checkXenParams ( gahpconfig ) == false	427:7:10262:10305	5571542	0	True				
ANR	5572483	EqualityExpression	XenType :: checkXenParams ( gahpconfig ) == false		5571542	0		==			
ANR	5572484	CallExpression	XenType :: checkXenParams ( gahpconfig )		5571542	0					
ANR	5572485	Callee	XenType :: checkXenParams		5571542	0					
ANR	5572486	Identifier	XenType :: checkXenParams		5571542	0					
ANR	5572487	ArgumentList	gahpconfig		5571542	1					
ANR	5572488	Argument	gahpconfig		5571542	0					
ANR	5572489	Identifier	gahpconfig		5571542	0					
ANR	5572490	Identifier	false		5571542	1					
ANR	5572491	CompoundStatement		200:54:5053:5053	5571542	1					
ANR	5572492	Statement	vmprintf	428:4:10315:10322	5571542	0	True				
ANR	5572493	Statement	(	428:12:10323:10323	5571542	1	True				
ANR	5572494	Statement	D_ALWAYS	428:13:10324:10331	5571542	2	True				
ANR	5572495	Statement	","	428:21:10332:10332	5571542	3	True				
ANR	5572496	Statement	"""\\nERROR: the vm_type('%s') cannot """	428:23:10334:10369	5571542	4	True				
ANR	5572497	Statement	"""be used.\\n"""	429:6:10377:10388	5571542	5	True				
ANR	5572498	Statement	","	429:18:10389:10389	5571542	6	True				
ANR	5572499	Statement	vmtype	429:20:10391:10396	5571542	7	True				
ANR	5572500	Statement	.	429:26:10397:10397	5571542	8	True				
ANR	5572501	Statement	Value	429:27:10398:10402	5571542	9	True				
ANR	5572502	Statement	(	429:32:10403:10403	5571542	10	True				
ANR	5572503	Statement	)	429:33:10404:10404	5571542	11	True				
ANR	5572504	Statement	)	429:34:10405:10405	5571542	12	True				
ANR	5572505	ExpressionStatement		429:35:10406:10406	5571542	13	True				
ANR	5572506	ExpressionStatement	DC_Exit ( 0 )	430:4:10412:10422	5571542	14	True				
ANR	5572507	CallExpression	DC_Exit ( 0 )		5571542	0					
ANR	5572508	Callee	DC_Exit		5571542	0					
ANR	5572509	Identifier	DC_Exit		5571542	0					
ANR	5572510	ArgumentList	0		5571542	1					
ANR	5572511	Argument	0		5571542	0					
ANR	5572512	PrimaryExpression	0		5571542	0					
ANR	5572513	ExpressionStatement	set_priv ( priv )	432:3:10432:10446	5571542	2	True				
ANR	5572514	CallExpression	set_priv ( priv )		5571542	0					
ANR	5572515	Callee	set_priv		5571542	0					
ANR	5572516	Identifier	set_priv		5571542	0					
ANR	5572517	ArgumentList	priv		5571542	1					
ANR	5572518	Argument	priv		5571542	0					
ANR	5572519	Identifier	priv		5571542	0					
ANR	5572520	ElseStatement	else		5571542	0					
ANR	5572521	IfStatement	"if ( ( strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_KVM ) == 0 ) )"		5571542	0					
ANR	5572522	Condition	"strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_KVM ) == 0"	433:14:10462:10518	5571542	0	True				
ANR	5572523	EqualityExpression	"strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_KVM ) == 0"		5571542	0		==			
ANR	5572524	CallExpression	"strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_KVM )"		5571542	0					
ANR	5572525	Callee	strcasecmp		5571542	0					
ANR	5572526	Identifier	strcasecmp		5571542	0					
ANR	5572527	ArgumentList	vmtype . Value ( )		5571542	1					
ANR	5572528	Argument	vmtype . Value ( )		5571542	0					
ANR	5572529	CallExpression	vmtype . Value ( )		5571542	0					
ANR	5572530	Callee	vmtype . Value		5571542	0					
ANR	5572531	MemberAccess	vmtype . Value		5571542	0					
ANR	5572532	Identifier	vmtype		5571542	0					
ANR	5572533	Identifier	Value		5571542	1					
ANR	5572534	ArgumentList			5571542	1					
ANR	5572535	Argument	CONDOR_VM_UNIVERSE_KVM		5571542	1					
ANR	5572536	Identifier	CONDOR_VM_UNIVERSE_KVM		5571542	0					
ANR	5572537	PrimaryExpression	0		5571542	1					
ANR	5572538	CompoundStatement		207:3:5270:5303	5571542	1					
ANR	5572539	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	434:3:10526:10559	5571542	0	True				
ANR	5572540	IdentifierDecl	priv = set_root_priv ( )		5571542	0					
ANR	5572541	IdentifierDeclType	priv_state		5571542	0					
ANR	5572542	Identifier	priv		5571542	1					
ANR	5572543	AssignmentExpression	priv = set_root_priv ( )		5571542	2		=			
ANR	5572544	Identifier	priv		5571542	0					
ANR	5572545	CallExpression	set_root_priv ( )		5571542	1					
ANR	5572546	Callee	set_root_priv		5571542	0					
ANR	5572547	Identifier	set_root_priv		5571542	0					
ANR	5572548	ArgumentList			5571542	1					
ANR	5572549	IfStatement	if ( KVMType :: checkXenParams ( gahpconfig ) == false )		5571542	1					
ANR	5572550	Condition	KVMType :: checkXenParams ( gahpconfig ) == false	436:7:10569:10612	5571542	0	True				
ANR	5572551	EqualityExpression	KVMType :: checkXenParams ( gahpconfig ) == false		5571542	0		==			
ANR	5572552	CallExpression	KVMType :: checkXenParams ( gahpconfig )		5571542	0					
ANR	5572553	Callee	KVMType :: checkXenParams		5571542	0					
ANR	5572554	Identifier	KVMType :: checkXenParams		5571542	0					
ANR	5572555	ArgumentList	gahpconfig		5571542	1					
ANR	5572556	Argument	gahpconfig		5571542	0					
ANR	5572557	Identifier	gahpconfig		5571542	0					
ANR	5572558	Identifier	false		5571542	1					
ANR	5572559	CompoundStatement		209:54:5360:5360	5571542	1					
ANR	5572560	Statement	vmprintf	437:4:10622:10629	5571542	0	True				
ANR	5572561	Statement	(	437:12:10630:10630	5571542	1	True				
ANR	5572562	Statement	D_ALWAYS	437:13:10631:10638	5571542	2	True				
ANR	5572563	Statement	","	437:21:10639:10639	5571542	3	True				
ANR	5572564	Statement	"""\\nERROR: the vm_type('%s') cannot """	437:23:10641:10676	5571542	4	True				
ANR	5572565	Statement	"""be used.\\n"""	438:6:10684:10695	5571542	5	True				
ANR	5572566	Statement	","	438:18:10696:10696	5571542	6	True				
ANR	5572567	Statement	vmtype	438:20:10698:10703	5571542	7	True				
ANR	5572568	Statement	.	438:26:10704:10704	5571542	8	True				
ANR	5572569	Statement	Value	438:27:10705:10709	5571542	9	True				
ANR	5572570	Statement	(	438:32:10710:10710	5571542	10	True				
ANR	5572571	Statement	)	438:33:10711:10711	5571542	11	True				
ANR	5572572	Statement	)	438:34:10712:10712	5571542	12	True				
ANR	5572573	ExpressionStatement		438:35:10713:10713	5571542	13	True				
ANR	5572574	ExpressionStatement	DC_Exit ( 0 )	439:4:10719:10729	5571542	14	True				
ANR	5572575	CallExpression	DC_Exit ( 0 )		5571542	0					
ANR	5572576	Callee	DC_Exit		5571542	0					
ANR	5572577	Identifier	DC_Exit		5571542	0					
ANR	5572578	ArgumentList	0		5571542	1					
ANR	5572579	Argument	0		5571542	0					
ANR	5572580	PrimaryExpression	0		5571542	0					
ANR	5572581	ExpressionStatement	set_priv ( priv )	441:3:10739:10753	5571542	2	True				
ANR	5572582	CallExpression	set_priv ( priv )		5571542	0					
ANR	5572583	Callee	set_priv		5571542	0					
ANR	5572584	Identifier	set_priv		5571542	0					
ANR	5572585	ArgumentList	priv		5571542	1					
ANR	5572586	Argument	priv		5571542	0					
ANR	5572587	Identifier	priv		5571542	0					
ANR	5572588	ElseStatement	else		5571542	0					
ANR	5572589	IfStatement	"if ( strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_VMWARE ) == 0 )"		5571542	0					
ANR	5572590	Condition	"strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_VMWARE ) == 0"	445:6:10779:10836	5571542	0	True				
ANR	5572591	EqualityExpression	"strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_VMWARE ) == 0"		5571542	0		==			
ANR	5572592	CallExpression	"strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_VMWARE )"		5571542	0					
ANR	5572593	Callee	strcasecmp		5571542	0					
ANR	5572594	Identifier	strcasecmp		5571542	0					
ANR	5572595	ArgumentList	vmtype . Value ( )		5571542	1					
ANR	5572596	Argument	vmtype . Value ( )		5571542	0					
ANR	5572597	CallExpression	vmtype . Value ( )		5571542	0					
ANR	5572598	Callee	vmtype . Value		5571542	0					
ANR	5572599	MemberAccess	vmtype . Value		5571542	0					
ANR	5572600	Identifier	vmtype		5571542	0					
ANR	5572601	Identifier	Value		5571542	1					
ANR	5572602	ArgumentList			5571542	1					
ANR	5572603	Argument	CONDOR_VM_UNIVERSE_VMWARE		5571542	1					
ANR	5572604	Identifier	CONDOR_VM_UNIVERSE_VMWARE		5571542	0					
ANR	5572605	PrimaryExpression	0		5571542	1					
ANR	5572606	CompoundStatement		219:3:5589:5622	5571542	1					
ANR	5572607	IdentifierDeclStatement	priv_state priv = set_user_priv ( ) ;	446:3:10845:10878	5571542	0	True				
ANR	5572608	IdentifierDecl	priv = set_user_priv ( )		5571542	0					
ANR	5572609	IdentifierDeclType	priv_state		5571542	0					
ANR	5572610	Identifier	priv		5571542	1					
ANR	5572611	AssignmentExpression	priv = set_user_priv ( )		5571542	2		=			
ANR	5572612	Identifier	priv		5571542	0					
ANR	5572613	CallExpression	set_user_priv ( )		5571542	1					
ANR	5572614	Callee	set_user_priv		5571542	0					
ANR	5572615	Identifier	set_user_priv		5571542	0					
ANR	5572616	ArgumentList			5571542	1					
ANR	5572617	IfStatement	if ( VMwareType :: testVMware ( gahpconfig ) == false )		5571542	1					
ANR	5572618	Condition	VMwareType :: testVMware ( gahpconfig ) == false	447:7:10887:10929	5571542	0	True				
ANR	5572619	EqualityExpression	VMwareType :: testVMware ( gahpconfig ) == false		5571542	0		==			
ANR	5572620	CallExpression	VMwareType :: testVMware ( gahpconfig )		5571542	0					
ANR	5572621	Callee	VMwareType :: testVMware		5571542	0					
ANR	5572622	Identifier	VMwareType :: testVMware		5571542	0					
ANR	5572623	ArgumentList	gahpconfig		5571542	1					
ANR	5572624	Argument	gahpconfig		5571542	0					
ANR	5572625	Identifier	gahpconfig		5571542	0					
ANR	5572626	Identifier	false		5571542	1					
ANR	5572627	CompoundStatement		220:53:5677:5677	5571542	1					
ANR	5572628	Statement	vmprintf	448:4:10939:10946	5571542	0	True				
ANR	5572629	Statement	(	448:12:10947:10947	5571542	1	True				
ANR	5572630	Statement	D_ALWAYS	448:13:10948:10955	5571542	2	True				
ANR	5572631	Statement	","	448:21:10956:10956	5571542	3	True				
ANR	5572632	Statement	"""\\nERROR: the vm_type('%s') cannot """	448:23:10958:10993	5571542	4	True				
ANR	5572633	Statement	"""be used.\\n"""	449:6:11001:11012	5571542	5	True				
ANR	5572634	Statement	","	449:18:11013:11013	5571542	6	True				
ANR	5572635	Statement	vmtype	449:20:11015:11020	5571542	7	True				
ANR	5572636	Statement	.	449:26:11021:11021	5571542	8	True				
ANR	5572637	Statement	Value	449:27:11022:11026	5571542	9	True				
ANR	5572638	Statement	(	449:32:11027:11027	5571542	10	True				
ANR	5572639	Statement	)	449:33:11028:11028	5571542	11	True				
ANR	5572640	Statement	)	449:34:11029:11029	5571542	12	True				
ANR	5572641	ExpressionStatement		449:35:11030:11030	5571542	13	True				
ANR	5572642	ExpressionStatement	DC_Exit ( 0 )	450:4:11036:11046	5571542	14	True				
ANR	5572643	CallExpression	DC_Exit ( 0 )		5571542	0					
ANR	5572644	Callee	DC_Exit		5571542	0					
ANR	5572645	Identifier	DC_Exit		5571542	0					
ANR	5572646	ArgumentList	0		5571542	1					
ANR	5572647	Argument	0		5571542	0					
ANR	5572648	PrimaryExpression	0		5571542	0					
ANR	5572649	ExpressionStatement	set_priv ( priv )	452:3:11056:11070	5571542	2	True				
ANR	5572650	CallExpression	set_priv ( priv )		5571542	0					
ANR	5572651	Callee	set_priv		5571542	0					
ANR	5572652	Identifier	set_priv		5571542	0					
ANR	5572653	ArgumentList	priv		5571542	1					
ANR	5572654	Argument	priv		5571542	0					
ANR	5572655	Identifier	priv		5571542	0					
ANR	5572656	ExpressionStatement	"write_to_daemoncore_pipe ( ""VM_GAHP_VERSION = \\""%s\\""\\n"" , CONDOR_VMGAHP_VERSION )"	456:2:11112:11189	5571542	1	True				
ANR	5572657	CallExpression	"write_to_daemoncore_pipe ( ""VM_GAHP_VERSION = \\""%s\\""\\n"" , CONDOR_VMGAHP_VERSION )"		5571542	0					
ANR	5572658	Callee	write_to_daemoncore_pipe		5571542	0					
ANR	5572659	Identifier	write_to_daemoncore_pipe		5571542	0					
ANR	5572660	ArgumentList	"""VM_GAHP_VERSION = \\""%s\\""\\n"""		5571542	1					
ANR	5572661	Argument	"""VM_GAHP_VERSION = \\""%s\\""\\n"""		5571542	0					
ANR	5572662	PrimaryExpression	"""VM_GAHP_VERSION = \\""%s\\""\\n"""		5571542	0					
ANR	5572663	Argument	CONDOR_VMGAHP_VERSION		5571542	1					
ANR	5572664	Identifier	CONDOR_VMGAHP_VERSION		5571542	0					
ANR	5572665	ExpressionStatement	"write_to_daemoncore_pipe ( ""%s = \\""%s\\""\\n"" , ATTR_VM_TYPE , gahpconfig -> m_vm_type . Value ( ) )"	457:2:11193:11283	5571542	2	True				
ANR	5572666	CallExpression	"write_to_daemoncore_pipe ( ""%s = \\""%s\\""\\n"" , ATTR_VM_TYPE , gahpconfig -> m_vm_type . Value ( ) )"		5571542	0					
ANR	5572667	Callee	write_to_daemoncore_pipe		5571542	0					
ANR	5572668	Identifier	write_to_daemoncore_pipe		5571542	0					
ANR	5572669	ArgumentList	"""%s = \\""%s\\""\\n"""		5571542	1					
ANR	5572670	Argument	"""%s = \\""%s\\""\\n"""		5571542	0					
ANR	5572671	PrimaryExpression	"""%s = \\""%s\\""\\n"""		5571542	0					
ANR	5572672	Argument	ATTR_VM_TYPE		5571542	1					
ANR	5572673	Identifier	ATTR_VM_TYPE		5571542	0					
ANR	5572674	Argument	gahpconfig -> m_vm_type . Value ( )		5571542	2					
ANR	5572675	CallExpression	gahpconfig -> m_vm_type . Value ( )		5571542	0					
ANR	5572676	Callee	gahpconfig -> m_vm_type . Value		5571542	0					
ANR	5572677	MemberAccess	gahpconfig -> m_vm_type . Value		5571542	0					
ANR	5572678	PtrMemberAccess	gahpconfig -> m_vm_type		5571542	0					
ANR	5572679	Identifier	gahpconfig		5571542	0					
ANR	5572680	Identifier	m_vm_type		5571542	1					
ANR	5572681	Identifier	Value		5571542	1					
ANR	5572682	ArgumentList			5571542	1					
ANR	5572683	ExpressionStatement	"write_to_daemoncore_pipe ( ""%s = %d\\n"" , ATTR_VM_MEMORY , gahpconfig -> m_vm_max_memory )"	459:2:11287:11373	5571542	3	True				
ANR	5572684	CallExpression	"write_to_daemoncore_pipe ( ""%s = %d\\n"" , ATTR_VM_MEMORY , gahpconfig -> m_vm_max_memory )"		5571542	0					
ANR	5572685	Callee	write_to_daemoncore_pipe		5571542	0					
ANR	5572686	Identifier	write_to_daemoncore_pipe		5571542	0					
ANR	5572687	ArgumentList	"""%s = %d\\n"""		5571542	1					
ANR	5572688	Argument	"""%s = %d\\n"""		5571542	0					
ANR	5572689	PrimaryExpression	"""%s = %d\\n"""		5571542	0					
ANR	5572690	Argument	ATTR_VM_MEMORY		5571542	1					
ANR	5572691	Identifier	ATTR_VM_MEMORY		5571542	0					
ANR	5572692	Argument	gahpconfig -> m_vm_max_memory		5571542	2					
ANR	5572693	PtrMemberAccess	gahpconfig -> m_vm_max_memory		5571542	0					
ANR	5572694	Identifier	gahpconfig		5571542	0					
ANR	5572695	Identifier	m_vm_max_memory		5571542	1					
ANR	5572696	ExpressionStatement	"write_to_daemoncore_pipe ( ""%s = %s\\n"" , ATTR_VM_NETWORKING , gahpconfig -> m_vm_networking ? ""TRUE"" : ""FALSE"" )"	461:2:11377:11483	5571542	4	True				
ANR	5572697	CallExpression	"write_to_daemoncore_pipe ( ""%s = %s\\n"" , ATTR_VM_NETWORKING , gahpconfig -> m_vm_networking ? ""TRUE"" : ""FALSE"" )"		5571542	0					
ANR	5572698	Callee	write_to_daemoncore_pipe		5571542	0					
ANR	5572699	Identifier	write_to_daemoncore_pipe		5571542	0					
ANR	5572700	ArgumentList	"""%s = %s\\n"""		5571542	1					
ANR	5572701	Argument	"""%s = %s\\n"""		5571542	0					
ANR	5572702	PrimaryExpression	"""%s = %s\\n"""		5571542	0					
ANR	5572703	Argument	ATTR_VM_NETWORKING		5571542	1					
ANR	5572704	Identifier	ATTR_VM_NETWORKING		5571542	0					
ANR	5572705	Argument	"gahpconfig -> m_vm_networking ? ""TRUE"" : ""FALSE"""		5571542	2					
ANR	5572706	ConditionalExpression	"gahpconfig -> m_vm_networking ? ""TRUE"" : ""FALSE"""		5571542	0					
ANR	5572707	Condition	gahpconfig -> m_vm_networking		5571542	0					
ANR	5572708	PtrMemberAccess	gahpconfig -> m_vm_networking		5571542	0					
ANR	5572709	Identifier	gahpconfig		5571542	0					
ANR	5572710	Identifier	m_vm_networking		5571542	1					
ANR	5572711	PrimaryExpression	"""TRUE"""		5571542	1					
ANR	5572712	PrimaryExpression	"""FALSE"""		5571542	2					
ANR	5572713	IfStatement	if ( gahpconfig -> m_vm_networking )		5571542	5					
ANR	5572714	Condition	gahpconfig -> m_vm_networking	463:6:11491:11517	5571542	0	True				
ANR	5572715	PtrMemberAccess	gahpconfig -> m_vm_networking		5571542	0					
ANR	5572716	Identifier	gahpconfig		5571542	0					
ANR	5572717	Identifier	m_vm_networking		5571542	1					
ANR	5572718	CompoundStatement		237:3:6270:6333	5571542	1					
ANR	5572719	IdentifierDeclStatement	char * tmp = gahpconfig -> m_vm_networking_types . print_to_string ( ) ;	464:3:11526:11589	5571542	0	True				
ANR	5572720	IdentifierDecl	* tmp = gahpconfig -> m_vm_networking_types . print_to_string ( )		5571542	0					
ANR	5572721	IdentifierDeclType	char *		5571542	0					
ANR	5572722	Identifier	tmp		5571542	1					
ANR	5572723	AssignmentExpression	* tmp = gahpconfig -> m_vm_networking_types . print_to_string ( )		5571542	2		=			
ANR	5572724	Identifier	tmp		5571542	0					
ANR	5572725	CallExpression	gahpconfig -> m_vm_networking_types . print_to_string ( )		5571542	1					
ANR	5572726	Callee	gahpconfig -> m_vm_networking_types . print_to_string		5571542	0					
ANR	5572727	MemberAccess	gahpconfig -> m_vm_networking_types . print_to_string		5571542	0					
ANR	5572728	PtrMemberAccess	gahpconfig -> m_vm_networking_types		5571542	0					
ANR	5572729	Identifier	gahpconfig		5571542	0					
ANR	5572730	Identifier	m_vm_networking_types		5571542	1					
ANR	5572731	Identifier	print_to_string		5571542	1					
ANR	5572732	ArgumentList			5571542	1					
ANR	5572733	ExpressionStatement	"write_to_daemoncore_pipe ( ""%s = \\""%s\\""\\n"" , ATTR_VM_NETWORKING_TYPES , tmp ? tmp : """" )"	465:3:11594:11687	5571542	1	True				
ANR	5572734	CallExpression	"write_to_daemoncore_pipe ( ""%s = \\""%s\\""\\n"" , ATTR_VM_NETWORKING_TYPES , tmp ? tmp : """" )"		5571542	0					
ANR	5572735	Callee	write_to_daemoncore_pipe		5571542	0					
ANR	5572736	Identifier	write_to_daemoncore_pipe		5571542	0					
ANR	5572737	ArgumentList	"""%s = \\""%s\\""\\n"""		5571542	1					
ANR	5572738	Argument	"""%s = \\""%s\\""\\n"""		5571542	0					
ANR	5572739	PrimaryExpression	"""%s = \\""%s\\""\\n"""		5571542	0					
ANR	5572740	Argument	ATTR_VM_NETWORKING_TYPES		5571542	1					
ANR	5572741	Identifier	ATTR_VM_NETWORKING_TYPES		5571542	0					
ANR	5572742	Argument	"tmp ? tmp : """""		5571542	2					
ANR	5572743	ConditionalExpression	"tmp ? tmp : """""		5571542	0					
ANR	5572744	Condition	tmp		5571542	0					
ANR	5572745	Identifier	tmp		5571542	0					
ANR	5572746	Identifier	tmp		5571542	1					
ANR	5572747	PrimaryExpression	""""""		5571542	2					
ANR	5572748	ExpressionStatement	free ( tmp )	467:3:11692:11701	5571542	2	True				
ANR	5572749	CallExpression	free ( tmp )		5571542	0					
ANR	5572750	Callee	free		5571542	0					
ANR	5572751	Identifier	free		5571542	0					
ANR	5572752	ArgumentList	tmp		5571542	1					
ANR	5572753	Argument	tmp		5571542	0					
ANR	5572754	Identifier	tmp		5571542	0					
ANR	5572755	IfStatement	if ( gahpconfig -> m_vm_hardware_vt )		5571542	6					
ANR	5572756	Condition	gahpconfig -> m_vm_hardware_vt	469:6:11713:11740	5571542	0	True				
ANR	5572757	PtrMemberAccess	gahpconfig -> m_vm_hardware_vt		5571542	0					
ANR	5572758	Identifier	gahpconfig		5571542	0					
ANR	5572759	Identifier	m_vm_hardware_vt		5571542	1					
ANR	5572760	CompoundStatement		242:37:6488:6488	5571542	1					
ANR	5572761	ExpressionStatement	"write_to_daemoncore_pipe ( ""%s = TRUE\\n"" , ATTR_VM_HARDWARE_VT )"	470:3:11749:11809	5571542	0	True				
ANR	5572762	CallExpression	"write_to_daemoncore_pipe ( ""%s = TRUE\\n"" , ATTR_VM_HARDWARE_VT )"		5571542	0					
ANR	5572763	Callee	write_to_daemoncore_pipe		5571542	0					
ANR	5572764	Identifier	write_to_daemoncore_pipe		5571542	0					
ANR	5572765	ArgumentList	"""%s = TRUE\\n"""		5571542	1					
ANR	5572766	Argument	"""%s = TRUE\\n"""		5571542	0					
ANR	5572767	PrimaryExpression	"""%s = TRUE\\n"""		5571542	0					
ANR	5572768	Argument	ATTR_VM_HARDWARE_VT		5571542	1					
ANR	5572769	Identifier	ATTR_VM_HARDWARE_VT		5571542	0					
ANR	5572770	ExpressionStatement	DC_Exit ( 0 )	472:2:11817:11827	5571542	7	True				
ANR	5572771	CallExpression	DC_Exit ( 0 )		5571542	0					
ANR	5572772	Callee	DC_Exit		5571542	0					
ANR	5572773	Identifier	DC_Exit		5571542	0					
ANR	5572774	ArgumentList	0		5571542	1					
ANR	5572775	Argument	0		5571542	0					
ANR	5572776	PrimaryExpression	0		5571542	0					
ANR	5572777	IfStatement	if ( vmgahp_mode == VMGAHP_KILL_MODE )		5571542	32					
ANR	5572778	Condition	vmgahp_mode == VMGAHP_KILL_MODE	475:5:11838:11868	5571542	0	True				
ANR	5572779	EqualityExpression	vmgahp_mode == VMGAHP_KILL_MODE		5571542	0		==			
ANR	5572780	Identifier	vmgahp_mode		5571542	0					
ANR	5572781	Identifier	VMGAHP_KILL_MODE		5571542	1					
ANR	5572782	CompoundStatement		248:39:6616:6616	5571542	1					
ANR	5572783	IfStatement	if ( matchstring . IsEmpty ( ) )		5571542	0					
ANR	5572784	Condition	matchstring . IsEmpty ( )	476:6:11880:11900	5571542	0	True				
ANR	5572785	CallExpression	matchstring . IsEmpty ( )		5571542	0					
ANR	5572786	Callee	matchstring . IsEmpty		5571542	0					
ANR	5572787	MemberAccess	matchstring . IsEmpty		5571542	0					
ANR	5572788	Identifier	matchstring		5571542	0					
ANR	5572789	Identifier	IsEmpty		5571542	1					
ANR	5572790	ArgumentList			5571542	1					
ANR	5572791	CompoundStatement		249:30:6648:6648	5571542	1					
ANR	5572792	ExpressionStatement	DC_Exit ( 0 )	477:3:11909:11919	5571542	0	True				
ANR	5572793	CallExpression	DC_Exit ( 0 )		5571542	0					
ANR	5572794	Callee	DC_Exit		5571542	0					
ANR	5572795	Identifier	DC_Exit		5571542	0					
ANR	5572796	ArgumentList	0		5571542	1					
ANR	5572797	Argument	0		5571542	0					
ANR	5572798	PrimaryExpression	0		5571542	0					
ANR	5572799	ExpressionStatement	set_root_priv ( )	482:2:12025:12040	5571542	1	True				
ANR	5572800	CallExpression	set_root_priv ( )		5571542	0					
ANR	5572801	Callee	set_root_priv		5571542	0					
ANR	5572802	Identifier	set_root_priv		5571542	0					
ANR	5572803	ArgumentList			5571542	1					
ANR	5572804	IfStatement	"if ( strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_XEN ) == 0 )"		5571542	2					
ANR	5572805	Condition	"strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_XEN ) == 0"	485:6:12105:12159	5571542	0	True				
ANR	5572806	EqualityExpression	"strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_XEN ) == 0"		5571542	0		==			
ANR	5572807	CallExpression	"strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_XEN )"		5571542	0					
ANR	5572808	Callee	strcasecmp		5571542	0					
ANR	5572809	Identifier	strcasecmp		5571542	0					
ANR	5572810	ArgumentList	vmtype . Value ( )		5571542	1					
ANR	5572811	Argument	vmtype . Value ( )		5571542	0					
ANR	5572812	CallExpression	vmtype . Value ( )		5571542	0					
ANR	5572813	Callee	vmtype . Value		5571542	0					
ANR	5572814	MemberAccess	vmtype . Value		5571542	0					
ANR	5572815	Identifier	vmtype		5571542	0					
ANR	5572816	Identifier	Value		5571542	1					
ANR	5572817	ArgumentList			5571542	1					
ANR	5572818	Argument	CONDOR_VM_UNIVERSE_XEN		5571542	1					
ANR	5572819	Identifier	CONDOR_VM_UNIVERSE_XEN		5571542	0					
ANR	5572820	PrimaryExpression	0		5571542	1					
ANR	5572821	CompoundStatement		258:64:6907:6907	5571542	1					
ANR	5572822	ExpressionStatement	XenType :: killVMFast ( matchstring . Value ( ) )	486:3:12168:12208	5571542	0	True				
ANR	5572823	CallExpression	XenType :: killVMFast ( matchstring . Value ( ) )		5571542	0					
ANR	5572824	Callee	XenType :: killVMFast		5571542	0					
ANR	5572825	Identifier	XenType :: killVMFast		5571542	0					
ANR	5572826	ArgumentList	matchstring . Value ( )		5571542	1					
ANR	5572827	Argument	matchstring . Value ( )		5571542	0					
ANR	5572828	CallExpression	matchstring . Value ( )		5571542	0					
ANR	5572829	Callee	matchstring . Value		5571542	0					
ANR	5572830	MemberAccess	matchstring . Value		5571542	0					
ANR	5572831	Identifier	matchstring		5571542	0					
ANR	5572832	Identifier	Value		5571542	1					
ANR	5572833	ArgumentList			5571542	1					
ANR	5572834	ElseStatement	else		5571542	0					
ANR	5572835	IfStatement	"if ( strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_KVM ) == 0 )"		5571542	0					
ANR	5572836	Condition	"strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_KVM ) == 0"	488:6:12224:12278	5571542	0	True				
ANR	5572837	EqualityExpression	"strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_KVM ) == 0"		5571542	0		==			
ANR	5572838	CallExpression	"strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_KVM )"		5571542	0					
ANR	5572839	Callee	strcasecmp		5571542	0					
ANR	5572840	Identifier	strcasecmp		5571542	0					
ANR	5572841	ArgumentList	vmtype . Value ( )		5571542	1					
ANR	5572842	Argument	vmtype . Value ( )		5571542	0					
ANR	5572843	CallExpression	vmtype . Value ( )		5571542	0					
ANR	5572844	Callee	vmtype . Value		5571542	0					
ANR	5572845	MemberAccess	vmtype . Value		5571542	0					
ANR	5572846	Identifier	vmtype		5571542	0					
ANR	5572847	Identifier	Value		5571542	1					
ANR	5572848	ArgumentList			5571542	1					
ANR	5572849	Argument	CONDOR_VM_UNIVERSE_KVM		5571542	1					
ANR	5572850	Identifier	CONDOR_VM_UNIVERSE_KVM		5571542	0					
ANR	5572851	PrimaryExpression	0		5571542	1					
ANR	5572852	CompoundStatement		261:64:7026:7026	5571542	1					
ANR	5572853	ExpressionStatement	KVMType :: killVMFast ( matchstring . Value ( ) )	489:3:12287:12327	5571542	0	True				
ANR	5572854	CallExpression	KVMType :: killVMFast ( matchstring . Value ( ) )		5571542	0					
ANR	5572855	Callee	KVMType :: killVMFast		5571542	0					
ANR	5572856	Identifier	KVMType :: killVMFast		5571542	0					
ANR	5572857	ArgumentList	matchstring . Value ( )		5571542	1					
ANR	5572858	Argument	matchstring . Value ( )		5571542	0					
ANR	5572859	CallExpression	matchstring . Value ( )		5571542	0					
ANR	5572860	Callee	matchstring . Value		5571542	0					
ANR	5572861	MemberAccess	matchstring . Value		5571542	0					
ANR	5572862	Identifier	matchstring		5571542	0					
ANR	5572863	Identifier	Value		5571542	1					
ANR	5572864	ArgumentList			5571542	1					
ANR	5572865	ElseStatement	else		5571542	0					
ANR	5572866	IfStatement	"if ( strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_VMWARE ) == 0 )"		5571542	0					
ANR	5572867	Condition	"strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_VMWARE ) == 0"	492:6:12350:12408	5571542	0	True				
ANR	5572868	EqualityExpression	"strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_VMWARE ) == 0"		5571542	0		==			
ANR	5572869	CallExpression	"strcasecmp ( vmtype . Value ( ) , CONDOR_VM_UNIVERSE_VMWARE )"		5571542	0					
ANR	5572870	Callee	strcasecmp		5571542	0					
ANR	5572871	Identifier	strcasecmp		5571542	0					
ANR	5572872	ArgumentList	vmtype . Value ( )		5571542	1					
ANR	5572873	Argument	vmtype . Value ( )		5571542	0					
ANR	5572874	CallExpression	vmtype . Value ( )		5571542	0					
ANR	5572875	Callee	vmtype . Value		5571542	0					
ANR	5572876	MemberAccess	vmtype . Value		5571542	0					
ANR	5572877	Identifier	vmtype		5571542	0					
ANR	5572878	Identifier	Value		5571542	1					
ANR	5572879	ArgumentList			5571542	1					
ANR	5572880	Argument	CONDOR_VM_UNIVERSE_VMWARE		5571542	1					
ANR	5572881	Identifier	CONDOR_VM_UNIVERSE_VMWARE		5571542	0					
ANR	5572882	PrimaryExpression	0		5571542	1					
ANR	5572883	CompoundStatement		265:68:7156:7156	5571542	1					
ANR	5572884	ExpressionStatement	"VMwareType :: killVMFast ( gahpconfig -> m_prog_for_script . Value ( ) , gahpconfig -> m_vm_script . Value ( ) , matchstring . Value ( ) , true )"	493:3:12417:12543	5571542	0	True				
ANR	5572885	CallExpression	"VMwareType :: killVMFast ( gahpconfig -> m_prog_for_script . Value ( ) , gahpconfig -> m_vm_script . Value ( ) , matchstring . Value ( ) , true )"		5571542	0					
ANR	5572886	Callee	VMwareType :: killVMFast		5571542	0					
ANR	5572887	Identifier	VMwareType :: killVMFast		5571542	0					
ANR	5572888	ArgumentList	gahpconfig -> m_prog_for_script . Value ( )		5571542	1					
ANR	5572889	Argument	gahpconfig -> m_prog_for_script . Value ( )		5571542	0					
ANR	5572890	CallExpression	gahpconfig -> m_prog_for_script . Value ( )		5571542	0					
ANR	5572891	Callee	gahpconfig -> m_prog_for_script . Value		5571542	0					
ANR	5572892	MemberAccess	gahpconfig -> m_prog_for_script . Value		5571542	0					
ANR	5572893	PtrMemberAccess	gahpconfig -> m_prog_for_script		5571542	0					
ANR	5572894	Identifier	gahpconfig		5571542	0					
ANR	5572895	Identifier	m_prog_for_script		5571542	1					
ANR	5572896	Identifier	Value		5571542	1					
ANR	5572897	ArgumentList			5571542	1					
ANR	5572898	Argument	gahpconfig -> m_vm_script . Value ( )		5571542	1					
ANR	5572899	CallExpression	gahpconfig -> m_vm_script . Value ( )		5571542	0					
ANR	5572900	Callee	gahpconfig -> m_vm_script . Value		5571542	0					
ANR	5572901	MemberAccess	gahpconfig -> m_vm_script . Value		5571542	0					
ANR	5572902	PtrMemberAccess	gahpconfig -> m_vm_script		5571542	0					
ANR	5572903	Identifier	gahpconfig		5571542	0					
ANR	5572904	Identifier	m_vm_script		5571542	1					
ANR	5572905	Identifier	Value		5571542	1					
ANR	5572906	ArgumentList			5571542	1					
ANR	5572907	Argument	matchstring . Value ( )		5571542	2					
ANR	5572908	CallExpression	matchstring . Value ( )		5571542	0					
ANR	5572909	Callee	matchstring . Value		5571542	0					
ANR	5572910	MemberAccess	matchstring . Value		5571542	0					
ANR	5572911	Identifier	matchstring		5571542	0					
ANR	5572912	Identifier	Value		5571542	1					
ANR	5572913	ArgumentList			5571542	1					
ANR	5572914	Argument	true		5571542	3					
ANR	5572915	Identifier	true		5571542	0					
ANR	5572916	ExpressionStatement	DC_Exit ( 0 )	496:2:12551:12561	5571542	3	True				
ANR	5572917	CallExpression	DC_Exit ( 0 )		5571542	0					
ANR	5572918	Callee	DC_Exit		5571542	0					
ANR	5572919	Identifier	DC_Exit		5571542	0					
ANR	5572920	ArgumentList	0		5571542	1					
ANR	5572921	Argument	0		5571542	0					
ANR	5572922	PrimaryExpression	0		5571542	0					
ANR	5572923	ExpressionStatement	"vmgahp = new VMGahp ( gahpconfig , workingdir . Value ( ) )"	499:1:12568:12619	5571542	33	True				
ANR	5572924	AssignmentExpression	"vmgahp = new VMGahp ( gahpconfig , workingdir . Value ( ) )"		5571542	0		=			
ANR	5572925	Identifier	vmgahp		5571542	0					
ANR	5572926	Expression	"gahpconfig , workingdir . Value ( )"		5571542	1					
ANR	5572927	Identifier	gahpconfig		5571542	0					
ANR	5572928	CallExpression	workingdir . Value ( )		5571542	1					
ANR	5572929	Callee	workingdir . Value		5571542	0					
ANR	5572930	MemberAccess	workingdir . Value		5571542	0					
ANR	5572931	Identifier	workingdir		5571542	0					
ANR	5572932	Identifier	Value		5571542	1					
ANR	5572933	ArgumentList			5571542	1					
ANR	5572934	ExpressionStatement	ASSERT ( vmgahp )	500:1:12622:12636	5571542	34	True				
ANR	5572935	CallExpression	ASSERT ( vmgahp )		5571542	0					
ANR	5572936	Callee	ASSERT		5571542	0					
ANR	5572937	Identifier	ASSERT		5571542	0					
ANR	5572938	ArgumentList	vmgahp		5571542	1					
ANR	5572939	Argument	vmgahp		5571542	0					
ANR	5572940	Identifier	vmgahp		5571542	0					
ANR	5572941	ExpressionStatement	vmgahp -> startUp ( )	503:1:12664:12681	5571542	35	True				
ANR	5572942	CallExpression	vmgahp -> startUp ( )		5571542	0					
ANR	5572943	Callee	vmgahp -> startUp		5571542	0					
ANR	5572944	PtrMemberAccess	vmgahp -> startUp		5571542	0					
ANR	5572945	Identifier	vmgahp		5571542	0					
ANR	5572946	Identifier	startUp		5571542	1					
ANR	5572947	ArgumentList			5571542	1					
ANR	5572948	ExpressionStatement	"write_to_daemoncore_pipe ( ""%s\\n"" , vmgahp_version )"	505:1:12685:12733	5571542	36	True				
ANR	5572949	CallExpression	"write_to_daemoncore_pipe ( ""%s\\n"" , vmgahp_version )"		5571542	0					
ANR	5572950	Callee	write_to_daemoncore_pipe		5571542	0					
ANR	5572951	Identifier	write_to_daemoncore_pipe		5571542	0					
ANR	5572952	ArgumentList	"""%s\\n"""		5571542	1					
ANR	5572953	Argument	"""%s\\n"""		5571542	0					
ANR	5572954	PrimaryExpression	"""%s\\n"""		5571542	0					
ANR	5572955	Argument	vmgahp_version		5571542	1					
ANR	5572956	Identifier	vmgahp_version		5571542	0					
ANR	5572957	ReturnType	void		5571542	1					
ANR	5572958	Identifier	main_init		5571542	2					
ANR	5572959	ParameterList	"int argc , char * argv [ ]"		5571542	3					
ANR	5572960	Parameter	int argc	227:15:5231:5238	5571542	0	True				
ANR	5572961	ParameterType	int		5571542	0					
ANR	5572962	Identifier	argc		5571542	1					
ANR	5572963	Parameter	char * argv [ ]	227:25:5241:5252	5571542	1	True				
ANR	5572964	ParameterType	char * [ ]		5571542	0					
ANR	5572965	Identifier	argv		5571542	1					
ANR	5572966	CFGEntryNode	ENTRY		5571542		True				
ANR	5572967	CFGExitNode	EXIT		5571542		True				
ANR	5572968	Symbol	workingdir . IsEmpty		5571542						
ANR	5572969	Symbol	stdout		5571542						
ANR	5572970	Symbol	workingdir		5571542						
ANR	5572971	Symbol	opt_len		5571542						
ANR	5572972	Symbol	set_user_priv		5571542						
ANR	5572973	Symbol	* argv		5571542						
ANR	5572974	Symbol	gahpconfig -> m_vm_networking_types		5571542						
ANR	5572975	Symbol	_match		5571542						
ANR	5572976	Symbol	VMwareType :: testVMware		5571542						
ANR	5572977	Symbol	oriDebugFlags		5571542						
ANR	5572978	Symbol	strlen		5571542						
ANR	5572979	Symbol	strncmp		5571542						
ANR	5572980	Symbol	_vmtype		5571542						
ANR	5572981	Symbol	ATTR_VM_NETWORKING_TYPES		5571542						
ANR	5572982	Symbol	gahpconfig -> m_prog_for_script		5571542						
ANR	5572983	Symbol	CONDOR_VM_UNIVERSE_KVM		5571542						
ANR	5572984	Symbol	vmgahp		5571542						
ANR	5572985	Symbol	vmgahp_mode		5571542						
ANR	5572986	Symbol	tmp		5571542						
ANR	5572987	Symbol	vmgahp_stderr_pipe		5571542						
ANR	5572988	Symbol	priv		5571542						
ANR	5572989	Symbol	strcasecmp		5571542						
ANR	5572990	Symbol	VMGAHP_KILL_MODE		5571542						
ANR	5572991	Symbol	write_stderr_to_pipe		5571542						
ANR	5572992	Symbol	strcmp		5571542						
ANR	5572993	Symbol	VMGAHP_STANDALONE_MODE		5571542						
ANR	5572994	Symbol	ATTR_VM_HARDWARE_VT		5571542						
ANR	5572995	Symbol	NULL		5571542						
ANR	5572996	Symbol	ATTR_VM_MEMORY		5571542						
ANR	5572997	Symbol	vmtype . Length		5571542						
ANR	5572998	Symbol	DebugFlags		5571542						
ANR	5572999	Symbol	KVMType :: checkXenParams		5571542						
ANR	5573000	Symbol	stderr		5571542						
ANR	5573001	Symbol	workingdir . Value		5571542						
ANR	5573002	Symbol	ATTR_VM_TYPE		5571542						
ANR	5573003	Symbol	gahpconfig -> m_vm_networking		5571542						
ANR	5573004	Symbol	opt		5571542						
ANR	5573005	Symbol	fileno		5571542						
ANR	5573006	Symbol	matchstring . Value		5571542						
ANR	5573007	Symbol	* daemonCore		5571542						
ANR	5573008	Symbol	daemonCore -> Register_Timer		5571542						
ANR	5573009	Symbol	true		5571542						
ANR	5573010	Symbol	gahpconfig -> m_vm_networking_types . print_to_string		5571542						
ANR	5573011	Symbol	XenType :: checkXenParams		5571542						
ANR	5573012	Symbol	CONDOR_VM_UNIVERSE_VMWARE		5571542						
ANR	5573013	Symbol	gahpconfig -> m_vm_script . Value		5571542						
ANR	5573014	Symbol	VMGAHP_WORKER_MODE		5571542						
ANR	5573015	Symbol	matchstring		5571542						
ANR	5573016	Symbol	gahpconfig -> m_vm_type		5571542						
ANR	5573017	Symbol	* tmp		5571542						
ANR	5573018	Symbol	matchstring . IsEmpty		5571542						
ANR	5573019	Symbol	vmgahp_version		5571542						
ANR	5573020	Symbol	canSwitchUid		5571542						
ANR	5573021	Symbol	vmgahp_stdout_pipe		5571542						
ANR	5573022	Symbol	gahpconfig -> m_vm_hardware_vt		5571542						
ANR	5573023	Symbol	vmgahp_stderr_tid		5571542						
ANR	5573024	Symbol	gahpconfig		5571542						
ANR	5573025	Symbol	argv		5571542						
ANR	5573026	Symbol	vmtype . IsEmpty		5571542						
ANR	5573027	Symbol	daemonCore		5571542						
ANR	5573028	Symbol	arg		5571542						
ANR	5573029	Symbol	CONDOR_VM_UNIVERSE_XEN		5571542						
ANR	5573030	Symbol	matchstring . Length		5571542						
ANR	5573031	Symbol	VMGAHP_IO_MODE		5571542						
ANR	5573032	Symbol	CONDOR_VMGAHP_VERSION		5571542						
ANR	5573033	Symbol	ATTR_VM_NETWORKING		5571542						
ANR	5573034	Symbol	VMGAHP_MODE_MAX		5571542						
ANR	5573035	Symbol	getenv		5571542						
ANR	5573036	Symbol	argc		5571542						
ANR	5573037	Symbol	atoi		5571542						
ANR	5573038	Symbol	vmgahp_stderr_buffer		5571542						
ANR	5573039	Symbol	gahpconfig -> m_prog_for_script . Value		5571542						
ANR	5573040	Symbol	gahpconfig -> m_vm_script		5571542						
ANR	5573041	Symbol	vmtype		5571542						
ANR	5573042	Symbol	Termlog		5571542						
ANR	5573043	Symbol	false		5571542						
ANR	5573044	Symbol	D_ALWAYS		5571542						
ANR	5573045	Symbol	VMwareType :: checkVMwareParams		5571542						
ANR	5573046	Symbol	set_root_priv		5571542						
ANR	5573047	Symbol	daemonCore -> Inherit_Pipe		5571542						
ANR	5573048	Symbol	verify_vm_type		5571542						
ANR	5573049	Symbol	gahpconfig -> m_vm_type . Value		5571542						
ANR	5573050	Symbol	gahpconfig -> m_vm_max_memory		5571542						
ANR	5573051	Symbol	* gahpconfig		5571542						
ANR	5573052	Symbol	vmtype . Value		5571542						
ANR	5573053	Symbol	gahpconfig -> init		5571542						
ANR	5573054	Symbol	VMGAHP_TEST_MODE		5571542						
ANR	5573055	Function	main	508:0:12738:13075							
ANR	5573056	FunctionDef	"main (int argc , char * * argv)"		5573055	0					
ANR	5573057	CompoundStatement		510:0:12772:13075	5573055	0					
ANR	5573058	ExpressionStatement	"set_mySubSystem ( ""VM_GAHP"" , SUBSYSTEM_TYPE_GAHP )"	511:1:12775:12824	5573055	0	True				
ANR	5573059	CallExpression	"set_mySubSystem ( ""VM_GAHP"" , SUBSYSTEM_TYPE_GAHP )"		5573055	0					
ANR	5573060	Callee	set_mySubSystem		5573055	0					
ANR	5573061	Identifier	set_mySubSystem		5573055	0					
ANR	5573062	ArgumentList	"""VM_GAHP"""		5573055	1					
ANR	5573063	Argument	"""VM_GAHP"""		5573055	0					
ANR	5573064	PrimaryExpression	"""VM_GAHP"""		5573055	0					
ANR	5573065	Argument	SUBSYSTEM_TYPE_GAHP		5573055	1					
ANR	5573066	Identifier	SUBSYSTEM_TYPE_GAHP		5573055	0					
ANR	5573067	ExpressionStatement	dc_main_init = main_init	513:1:12828:12852	5573055	1	True				
ANR	5573068	AssignmentExpression	dc_main_init = main_init		5573055	0		=			
ANR	5573069	Identifier	dc_main_init		5573055	0					
ANR	5573070	Identifier	main_init		5573055	1					
ANR	5573071	ExpressionStatement	dc_main_config = main_config	514:1:12855:12883	5573055	2	True				
ANR	5573072	AssignmentExpression	dc_main_config = main_config		5573055	0		=			
ANR	5573073	Identifier	dc_main_config		5573055	0					
ANR	5573074	Identifier	main_config		5573055	1					
ANR	5573075	ExpressionStatement	dc_main_shutdown_fast = main_shutdown_fast	515:1:12886:12928	5573055	3	True				
ANR	5573076	AssignmentExpression	dc_main_shutdown_fast = main_shutdown_fast		5573055	0		=			
ANR	5573077	Identifier	dc_main_shutdown_fast		5573055	0					
ANR	5573078	Identifier	main_shutdown_fast		5573055	1					
ANR	5573079	ExpressionStatement	dc_main_shutdown_graceful = main_shutdown_graceful	516:1:12931:12981	5573055	4	True				
ANR	5573080	AssignmentExpression	dc_main_shutdown_graceful = main_shutdown_graceful		5573055	0		=			
ANR	5573081	Identifier	dc_main_shutdown_graceful		5573055	0					
ANR	5573082	Identifier	main_shutdown_graceful		5573055	1					
ANR	5573083	ExpressionStatement	dc_main_pre_command_sock_init = main_pre_command_sock_init	517:1:12984:13042	5573055	5	True				
ANR	5573084	AssignmentExpression	dc_main_pre_command_sock_init = main_pre_command_sock_init		5573055	0		=			
ANR	5573085	Identifier	dc_main_pre_command_sock_init		5573055	0					
ANR	5573086	Identifier	main_pre_command_sock_init		5573055	1					
ANR	5573087	ReturnStatement	"return dc_main ( argc , argv ) ;"	518:1:13045:13073	5573055	6	True				
ANR	5573088	CallExpression	"dc_main ( argc , argv )"		5573055	0					
ANR	5573089	Callee	dc_main		5573055	0					
ANR	5573090	Identifier	dc_main		5573055	0					
ANR	5573091	ArgumentList	argc		5573055	1					
ANR	5573092	Argument	argc		5573055	0					
ANR	5573093	Identifier	argc		5573055	0					
ANR	5573094	Argument	argv		5573055	1					
ANR	5573095	Identifier	argv		5573055	0					
ANR	5573096	ReturnType	int		5573055	1					
ANR	5573097	Identifier	main		5573055	2					
ANR	5573098	ParameterList	"int argc , char * * argv"		5573055	3					
ANR	5573099	Parameter	int argc	509:6:12748:12755	5573055	0	True				
ANR	5573100	ParameterType	int		5573055	0					
ANR	5573101	Identifier	argc		5573055	1					
ANR	5573102	Parameter	char * * argv	509:16:12758:12768	5573055	1	True				
ANR	5573103	ParameterType	char * *		5573055	0					
ANR	5573104	Identifier	argv		5573055	1					
ANR	5573105	CFGEntryNode	ENTRY		5573055		True				
ANR	5573106	CFGExitNode	EXIT		5573055		True				
ANR	5573107	Symbol	argc		5573055						
ANR	5573108	Symbol	main_shutdown_fast		5573055						
ANR	5573109	Symbol	argv		5573055						
ANR	5573110	Symbol	dc_main_init		5573055						
ANR	5573111	Symbol	main_init		5573055						
ANR	5573112	Symbol	dc_main_shutdown_fast		5573055						
ANR	5573113	Symbol	dc_main		5573055						
ANR	5573114	Symbol	dc_main_config		5573055						
ANR	5573115	Symbol	main_pre_command_sock_init		5573055						
ANR	5573116	Symbol	main_config		5573055						
ANR	5573117	Symbol	SUBSYSTEM_TYPE_GAHP		5573055						
ANR	5573118	Symbol	main_shutdown_graceful		5573055						
ANR	5573119	Symbol	dc_main_shutdown_graceful		5573055						
ANR	5573120	Symbol	dc_main_pre_command_sock_init		5573055						
