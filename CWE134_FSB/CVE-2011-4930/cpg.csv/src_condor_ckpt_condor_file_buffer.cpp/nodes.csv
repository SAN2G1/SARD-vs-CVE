command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2657204	File	data/converged/CVE-2011-4930_htcondor/src_condor_ckpt_condor_file_buffer.cpp								
ANR	2657205	ClassDef	CondorChunk	30:0:1032:1647							
ANR	2657206	Function	CondorChunk	32:1:1061:1212							
ANR	2657207	FunctionDef	"CondorChunk (off_t b , off_t s , off_t m)"		2657206	0					
ANR	2657208	CompoundStatement		32:41:1101:1212	2657206	0					
ANR	2657209	ExpressionStatement	begin = b	33:2:1105:1114	2657206	0	True				
ANR	2657210	AssignmentExpression	begin = b		2657206	0		=			
ANR	2657211	Identifier	begin		2657206	0					
ANR	2657212	Identifier	b		2657206	1					
ANR	2657213	ExpressionStatement	size = s	34:2:1118:1126	2657206	1	True				
ANR	2657214	AssignmentExpression	size = s		2657206	0		=			
ANR	2657215	Identifier	size		2657206	0					
ANR	2657216	Identifier	s		2657206	1					
ANR	2657217	ExpressionStatement	last_used = 0	35:2:1130:1143	2657206	2	True				
ANR	2657218	AssignmentExpression	last_used = 0		2657206	0		=			
ANR	2657219	Identifier	last_used		2657206	0					
ANR	2657220	PrimaryExpression	0		2657206	1					
ANR	2657221	ExpressionStatement	dirty = 0	36:2:1147:1156	2657206	3	True				
ANR	2657222	AssignmentExpression	dirty = 0		2657206	0		=			
ANR	2657223	Identifier	dirty		2657206	0					
ANR	2657224	PrimaryExpression	0		2657206	1					
ANR	2657225	ExpressionStatement	next = 0	37:2:1160:1168	2657206	4	True				
ANR	2657226	AssignmentExpression	next = 0		2657206	0		=			
ANR	2657227	Identifier	next		2657206	0					
ANR	2657228	PrimaryExpression	0		2657206	1					
ANR	2657229	ExpressionStatement	data = new char [ size ]	38:2:1172:1193	2657206	5	True				
ANR	2657230	AssignmentExpression	data = new char [ size ]		2657206	0		=			
ANR	2657231	Identifier	data		2657206	0					
ANR	2657232	Identifier	size		2657206	1					
ANR	2657233	ExpressionStatement	max_size = m	39:2:1197:1209	2657206	6	True				
ANR	2657234	AssignmentExpression	max_size = m		2657206	0		=			
ANR	2657235	Identifier	max_size		2657206	0					
ANR	2657236	Identifier	m		2657206	1					
ANR	2657237	Identifier	CondorChunk		2657206	1					
ANR	2657238	ParameterList	"off_t b , off_t s , off_t m"		2657206	2					
ANR	2657239	Parameter	off_t b	32:14:1074:1080	2657206	0	True				
ANR	2657240	ParameterType	off_t		2657206	0					
ANR	2657241	Identifier	b		2657206	1					
ANR	2657242	Parameter	off_t s	32:23:1083:1089	2657206	1	True				
ANR	2657243	ParameterType	off_t		2657206	0					
ANR	2657244	Identifier	s		2657206	1					
ANR	2657245	Parameter	off_t m	32:32:1092:1098	2657206	2	True				
ANR	2657246	ParameterType	off_t		2657206	0					
ANR	2657247	Identifier	m		2657206	1					
ANR	2657248	CFGEntryNode	ENTRY		2657206		True				
ANR	2657249	CFGExitNode	EXIT		2657206		True				
ANR	2657250	Symbol	dirty		2657206						
ANR	2657251	Symbol	next		2657206						
ANR	2657252	Symbol	b		2657206						
ANR	2657253	Symbol	s		2657206						
ANR	2657254	Symbol	size		2657206						
ANR	2657255	Symbol	data		2657206						
ANR	2657256	Symbol	last_used		2657206						
ANR	2657257	Symbol	m		2657206						
ANR	2657258	Symbol	begin		2657206						
ANR	2657259	Symbol	max_size		2657206						
ANR	2657260	Function	~CondorChunk	42:1:1216:1252							
ANR	2657261	FunctionDef	~CondorChunk ()		2657260	1					
ANR	2657262	CompoundStatement		42:16:1231:1252	2657260	0					
ANR	2657263	Statement	delete	43:2:1235:1240	2657260	0	True				
ANR	2657264	Statement	[	43:9:1242:1242	2657260	1	True				
ANR	2657265	Statement	]	43:10:1243:1243	2657260	2	True				
ANR	2657266	ExpressionStatement	data	43:12:1245:1249	2657260	3	True				
ANR	2657267	Identifier	data		2657260	0					
ANR	2657268	Identifier	~CondorChunk		2657260	1					
ANR	2657269	ParameterList			2657260	2					
ANR	2657270	CFGEntryNode	ENTRY		2657260		True				
ANR	2657271	CFGExitNode	EXIT		2657260		True				
ANR	2657272	DeclStmt									
ANR	2657273	Decl							off_t	off_t	begin
ANR	2657274	DeclStmt									
ANR	2657275	Decl							off_t	off_t	size
ANR	2657276	DeclStmt									
ANR	2657277	Decl							off_t	off_t	max_size
ANR	2657278	DeclStmt									
ANR	2657279	Decl							int	int	last_used
ANR	2657280	DeclStmt									
ANR	2657281	Decl							char	char *	data
ANR	2657282	DeclStmt									
ANR	2657283	Decl							int	int	dirty
ANR	2657284	DeclStmt									
ANR	2657285	Decl							CondorChunk	CondorChunk *	next
ANR	2657286	Function	combine	67:0:1707:2331							
ANR	2657287	FunctionDef	"combine (CondorChunk * a , CondorChunk * b)"		2657286	0					
ANR	2657288	CompoundStatement		68:0:1770:2331	2657286	0					
ANR	2657289	IdentifierDeclStatement	"off_t begin , end ;"	69:1:1773:1789	2657286	0	True				
ANR	2657290	IdentifierDecl	begin		2657286	0					
ANR	2657291	IdentifierDeclType	off_t		2657286	0					
ANR	2657292	Identifier	begin		2657286	1					
ANR	2657293	IdentifierDecl	end		2657286	1					
ANR	2657294	IdentifierDeclType	off_t		2657286	0					
ANR	2657295	Identifier	end		2657286	1					
ANR	2657296	IdentifierDeclStatement	CondorChunk * r ;	70:1:1792:1806	2657286	1	True				
ANR	2657297	IdentifierDecl	* r		2657286	0					
ANR	2657298	IdentifierDeclType	CondorChunk *		2657286	0					
ANR	2657299	Identifier	r		2657286	1					
ANR	2657300	ExpressionStatement	"begin = MIN ( a -> begin , b -> begin )"	72:1:1810:1840	2657286	2	True				
ANR	2657301	AssignmentExpression	"begin = MIN ( a -> begin , b -> begin )"		2657286	0		=			
ANR	2657302	Identifier	begin		2657286	0					
ANR	2657303	CallExpression	"MIN ( a -> begin , b -> begin )"		2657286	1					
ANR	2657304	Callee	MIN		2657286	0					
ANR	2657305	Identifier	MIN		2657286	0					
ANR	2657306	ArgumentList	a -> begin		2657286	1					
ANR	2657307	Argument	a -> begin		2657286	0					
ANR	2657308	PtrMemberAccess	a -> begin		2657286	0					
ANR	2657309	Identifier	a		2657286	0					
ANR	2657310	Identifier	begin		2657286	1					
ANR	2657311	Argument	b -> begin		2657286	1					
ANR	2657312	PtrMemberAccess	b -> begin		2657286	0					
ANR	2657313	Identifier	b		2657286	0					
ANR	2657314	Identifier	begin		2657286	1					
ANR	2657315	ExpressionStatement	"end = MAX ( a -> begin + a -> size , b -> begin + b -> size )"	73:1:1843:1887	2657286	3	True				
ANR	2657316	AssignmentExpression	"end = MAX ( a -> begin + a -> size , b -> begin + b -> size )"		2657286	0		=			
ANR	2657317	Identifier	end		2657286	0					
ANR	2657318	CallExpression	"MAX ( a -> begin + a -> size , b -> begin + b -> size )"		2657286	1					
ANR	2657319	Callee	MAX		2657286	0					
ANR	2657320	Identifier	MAX		2657286	0					
ANR	2657321	ArgumentList	a -> begin + a -> size		2657286	1					
ANR	2657322	Argument	a -> begin + a -> size		2657286	0					
ANR	2657323	AdditiveExpression	a -> begin + a -> size		2657286	0		+			
ANR	2657324	PtrMemberAccess	a -> begin		2657286	0					
ANR	2657325	Identifier	a		2657286	0					
ANR	2657326	Identifier	begin		2657286	1					
ANR	2657327	PtrMemberAccess	a -> size		2657286	1					
ANR	2657328	Identifier	a		2657286	0					
ANR	2657329	Identifier	size		2657286	1					
ANR	2657330	Argument	b -> begin + b -> size		2657286	1					
ANR	2657331	AdditiveExpression	b -> begin + b -> size		2657286	0		+			
ANR	2657332	PtrMemberAccess	b -> begin		2657286	0					
ANR	2657333	Identifier	b		2657286	0					
ANR	2657334	Identifier	begin		2657286	1					
ANR	2657335	PtrMemberAccess	b -> size		2657286	1					
ANR	2657336	Identifier	b		2657286	0					
ANR	2657337	Identifier	size		2657286	1					
ANR	2657338	ExpressionStatement	"r = new CondorChunk ( begin , end - begin , a -> max_size )"	75:1:1891:1939	2657286	4	True				
ANR	2657339	AssignmentExpression	"r = new CondorChunk ( begin , end - begin , a -> max_size )"		2657286	0		=			
ANR	2657340	Identifier	r		2657286	0					
ANR	2657341	Expression	"begin , end - begin , a -> max_size"		2657286	1					
ANR	2657342	Identifier	begin		2657286	0					
ANR	2657343	Expression	"end - begin , a -> max_size"		2657286	1					
ANR	2657344	AdditiveExpression	end - begin		2657286	0		-			
ANR	2657345	Identifier	end		2657286	0					
ANR	2657346	Identifier	begin		2657286	1					
ANR	2657347	PtrMemberAccess	a -> max_size		2657286	1					
ANR	2657348	Identifier	a		2657286	0					
ANR	2657349	Identifier	max_size		2657286	1					
ANR	2657350	ExpressionStatement	r -> dirty = a -> dirty || b -> dirty	77:1:1943:1974	2657286	5	True				
ANR	2657351	AssignmentExpression	r -> dirty = a -> dirty || b -> dirty		2657286	0		=			
ANR	2657352	PtrMemberAccess	r -> dirty		2657286	0					
ANR	2657353	Identifier	r		2657286	0					
ANR	2657354	Identifier	dirty		2657286	1					
ANR	2657355	OrExpression	a -> dirty || b -> dirty		2657286	1		||			
ANR	2657356	PtrMemberAccess	a -> dirty		2657286	0					
ANR	2657357	Identifier	a		2657286	0					
ANR	2657358	Identifier	dirty		2657286	1					
ANR	2657359	PtrMemberAccess	b -> dirty		2657286	1					
ANR	2657360	Identifier	b		2657286	0					
ANR	2657361	Identifier	dirty		2657286	1					
ANR	2657362	ExpressionStatement	"r -> last_used = MAX ( a -> last_used , b -> last_used )"	78:1:1977:2025	2657286	6	True				
ANR	2657363	AssignmentExpression	"r -> last_used = MAX ( a -> last_used , b -> last_used )"		2657286	0		=			
ANR	2657364	PtrMemberAccess	r -> last_used		2657286	0					
ANR	2657365	Identifier	r		2657286	0					
ANR	2657366	Identifier	last_used		2657286	1					
ANR	2657367	CallExpression	"MAX ( a -> last_used , b -> last_used )"		2657286	1					
ANR	2657368	Callee	MAX		2657286	0					
ANR	2657369	Identifier	MAX		2657286	0					
ANR	2657370	ArgumentList	a -> last_used		2657286	1					
ANR	2657371	Argument	a -> last_used		2657286	0					
ANR	2657372	PtrMemberAccess	a -> last_used		2657286	0					
ANR	2657373	Identifier	a		2657286	0					
ANR	2657374	Identifier	last_used		2657286	1					
ANR	2657375	Argument	b -> last_used		2657286	1					
ANR	2657376	PtrMemberAccess	b -> last_used		2657286	0					
ANR	2657377	Identifier	b		2657286	0					
ANR	2657378	Identifier	last_used		2657286	1					
ANR	2657379	IfStatement	if ( a -> dirty && ! b -> dirty )		2657286	7					
ANR	2657380	Condition	a -> dirty && ! b -> dirty	80:5:2033:2053	2657286	0	True				
ANR	2657381	AndExpression	a -> dirty && ! b -> dirty		2657286	0		&&			
ANR	2657382	PtrMemberAccess	a -> dirty		2657286	0					
ANR	2657383	Identifier	a		2657286	0					
ANR	2657384	Identifier	dirty		2657286	1					
ANR	2657385	UnaryOperationExpression	! b -> dirty		2657286	1					
ANR	2657386	UnaryOperator	!		2657286	0					
ANR	2657387	PtrMemberAccess	b -> dirty		2657286	1					
ANR	2657388	Identifier	b		2657286	0					
ANR	2657389	Identifier	dirty		2657286	1					
ANR	2657390	CompoundStatement		13:29:286:286	2657286	1					
ANR	2657391	ExpressionStatement	"memcpy ( & r -> data [ b -> begin - begin ] , b -> data , b -> size )"	81:2:2061:2113	2657286	0	True				
ANR	2657392	CallExpression	"memcpy ( & r -> data [ b -> begin - begin ] , b -> data , b -> size )"		2657286	0					
ANR	2657393	Callee	memcpy		2657286	0					
ANR	2657394	Identifier	memcpy		2657286	0					
ANR	2657395	ArgumentList	& r -> data [ b -> begin - begin ]		2657286	1					
ANR	2657396	Argument	& r -> data [ b -> begin - begin ]		2657286	0					
ANR	2657397	UnaryOperationExpression	& r -> data [ b -> begin - begin ]		2657286	0					
ANR	2657398	UnaryOperator	&		2657286	0					
ANR	2657399	ArrayIndexing	r -> data [ b -> begin - begin ]		2657286	1					
ANR	2657400	PtrMemberAccess	r -> data		2657286	0					
ANR	2657401	Identifier	r		2657286	0					
ANR	2657402	Identifier	data		2657286	1					
ANR	2657403	AdditiveExpression	b -> begin - begin		2657286	1		-			
ANR	2657404	PtrMemberAccess	b -> begin		2657286	0					
ANR	2657405	Identifier	b		2657286	0					
ANR	2657406	Identifier	begin		2657286	1					
ANR	2657407	Identifier	begin		2657286	1					
ANR	2657408	Argument	b -> data		2657286	1					
ANR	2657409	PtrMemberAccess	b -> data		2657286	0					
ANR	2657410	Identifier	b		2657286	0					
ANR	2657411	Identifier	data		2657286	1					
ANR	2657412	Argument	b -> size		2657286	2					
ANR	2657413	PtrMemberAccess	b -> size		2657286	0					
ANR	2657414	Identifier	b		2657286	0					
ANR	2657415	Identifier	size		2657286	1					
ANR	2657416	ExpressionStatement	"memcpy ( & r -> data [ a -> begin - begin ] , a -> data , a -> size )"	82:2:2117:2169	2657286	1	True				
ANR	2657417	CallExpression	"memcpy ( & r -> data [ a -> begin - begin ] , a -> data , a -> size )"		2657286	0					
ANR	2657418	Callee	memcpy		2657286	0					
ANR	2657419	Identifier	memcpy		2657286	0					
ANR	2657420	ArgumentList	& r -> data [ a -> begin - begin ]		2657286	1					
ANR	2657421	Argument	& r -> data [ a -> begin - begin ]		2657286	0					
ANR	2657422	UnaryOperationExpression	& r -> data [ a -> begin - begin ]		2657286	0					
ANR	2657423	UnaryOperator	&		2657286	0					
ANR	2657424	ArrayIndexing	r -> data [ a -> begin - begin ]		2657286	1					
ANR	2657425	PtrMemberAccess	r -> data		2657286	0					
ANR	2657426	Identifier	r		2657286	0					
ANR	2657427	Identifier	data		2657286	1					
ANR	2657428	AdditiveExpression	a -> begin - begin		2657286	1		-			
ANR	2657429	PtrMemberAccess	a -> begin		2657286	0					
ANR	2657430	Identifier	a		2657286	0					
ANR	2657431	Identifier	begin		2657286	1					
ANR	2657432	Identifier	begin		2657286	1					
ANR	2657433	Argument	a -> data		2657286	1					
ANR	2657434	PtrMemberAccess	a -> data		2657286	0					
ANR	2657435	Identifier	a		2657286	0					
ANR	2657436	Identifier	data		2657286	1					
ANR	2657437	Argument	a -> size		2657286	2					
ANR	2657438	PtrMemberAccess	a -> size		2657286	0					
ANR	2657439	Identifier	a		2657286	0					
ANR	2657440	Identifier	size		2657286	1					
ANR	2657441	ElseStatement	else		2657286	0					
ANR	2657442	CompoundStatement		16:8:408:408	2657286	0					
ANR	2657443	ExpressionStatement	"memcpy ( & r -> data [ a -> begin - begin ] , a -> data , a -> size )"	84:2:2183:2235	2657286	0	True				
ANR	2657444	CallExpression	"memcpy ( & r -> data [ a -> begin - begin ] , a -> data , a -> size )"		2657286	0					
ANR	2657445	Callee	memcpy		2657286	0					
ANR	2657446	Identifier	memcpy		2657286	0					
ANR	2657447	ArgumentList	& r -> data [ a -> begin - begin ]		2657286	1					
ANR	2657448	Argument	& r -> data [ a -> begin - begin ]		2657286	0					
ANR	2657449	UnaryOperationExpression	& r -> data [ a -> begin - begin ]		2657286	0					
ANR	2657450	UnaryOperator	&		2657286	0					
ANR	2657451	ArrayIndexing	r -> data [ a -> begin - begin ]		2657286	1					
ANR	2657452	PtrMemberAccess	r -> data		2657286	0					
ANR	2657453	Identifier	r		2657286	0					
ANR	2657454	Identifier	data		2657286	1					
ANR	2657455	AdditiveExpression	a -> begin - begin		2657286	1		-			
ANR	2657456	PtrMemberAccess	a -> begin		2657286	0					
ANR	2657457	Identifier	a		2657286	0					
ANR	2657458	Identifier	begin		2657286	1					
ANR	2657459	Identifier	begin		2657286	1					
ANR	2657460	Argument	a -> data		2657286	1					
ANR	2657461	PtrMemberAccess	a -> data		2657286	0					
ANR	2657462	Identifier	a		2657286	0					
ANR	2657463	Identifier	data		2657286	1					
ANR	2657464	Argument	a -> size		2657286	2					
ANR	2657465	PtrMemberAccess	a -> size		2657286	0					
ANR	2657466	Identifier	a		2657286	0					
ANR	2657467	Identifier	size		2657286	1					
ANR	2657468	ExpressionStatement	"memcpy ( & r -> data [ b -> begin - begin ] , b -> data , b -> size )"	85:2:2239:2291	2657286	1	True				
ANR	2657469	CallExpression	"memcpy ( & r -> data [ b -> begin - begin ] , b -> data , b -> size )"		2657286	0					
ANR	2657470	Callee	memcpy		2657286	0					
ANR	2657471	Identifier	memcpy		2657286	0					
ANR	2657472	ArgumentList	& r -> data [ b -> begin - begin ]		2657286	1					
ANR	2657473	Argument	& r -> data [ b -> begin - begin ]		2657286	0					
ANR	2657474	UnaryOperationExpression	& r -> data [ b -> begin - begin ]		2657286	0					
ANR	2657475	UnaryOperator	&		2657286	0					
ANR	2657476	ArrayIndexing	r -> data [ b -> begin - begin ]		2657286	1					
ANR	2657477	PtrMemberAccess	r -> data		2657286	0					
ANR	2657478	Identifier	r		2657286	0					
ANR	2657479	Identifier	data		2657286	1					
ANR	2657480	AdditiveExpression	b -> begin - begin		2657286	1		-			
ANR	2657481	PtrMemberAccess	b -> begin		2657286	0					
ANR	2657482	Identifier	b		2657286	0					
ANR	2657483	Identifier	begin		2657286	1					
ANR	2657484	Identifier	begin		2657286	1					
ANR	2657485	Argument	b -> data		2657286	1					
ANR	2657486	PtrMemberAccess	b -> data		2657286	0					
ANR	2657487	Identifier	b		2657286	0					
ANR	2657488	Identifier	data		2657286	1					
ANR	2657489	Argument	b -> size		2657286	2					
ANR	2657490	PtrMemberAccess	b -> size		2657286	0					
ANR	2657491	Identifier	b		2657286	0					
ANR	2657492	Identifier	size		2657286	1					
ANR	2657493	Statement	delete	88:1:2298:2303	2657286	8	True				
ANR	2657494	ExpressionStatement	a	88:8:2305:2306	2657286	9	True				
ANR	2657495	Identifier	a		2657286	0					
ANR	2657496	Statement	delete	89:1:2309:2314	2657286	10	True				
ANR	2657497	ExpressionStatement	b	89:8:2316:2317	2657286	11	True				
ANR	2657498	Identifier	b		2657286	0					
ANR	2657499	ReturnStatement	return r ;	91:1:2321:2329	2657286	12	True				
ANR	2657500	Identifier	r		2657286	0					
ANR	2657501	ReturnType	static CondorChunk *		2657286	1					
ANR	2657502	Identifier	combine		2657286	2					
ANR	2657503	ParameterList	"CondorChunk * a , CondorChunk * b"		2657286	3					
ANR	2657504	Parameter	CondorChunk * a	67:30:1737:1750	2657286	0	True				
ANR	2657505	ParameterType	CondorChunk *		2657286	0					
ANR	2657506	Identifier	a		2657286	1					
ANR	2657507	Parameter	CondorChunk * b	67:46:1753:1766	2657286	1	True				
ANR	2657508	ParameterType	CondorChunk *		2657286	0					
ANR	2657509	Identifier	b		2657286	1					
ANR	2657510	CFGEntryNode	ENTRY		2657286		True				
ANR	2657511	CFGExitNode	EXIT		2657286		True				
ANR	2657512	Symbol	a -> size		2657286						
ANR	2657513	Symbol	a -> last_used		2657286						
ANR	2657514	Symbol	a		2657286						
ANR	2657515	Symbol	b -> last_used		2657286						
ANR	2657516	Symbol	b		2657286						
ANR	2657517	Symbol	a -> dirty		2657286						
ANR	2657518	Symbol	MAX		2657286						
ANR	2657519	Symbol	b -> size		2657286						
ANR	2657520	Symbol	b -> begin		2657286						
ANR	2657521	Symbol	* a		2657286						
ANR	2657522	Symbol	* b		2657286						
ANR	2657523	Symbol	a -> data		2657286						
ANR	2657524	Symbol	a -> begin		2657286						
ANR	2657525	Symbol	b -> dirty		2657286						
ANR	2657526	Symbol	r		2657286						
ANR	2657527	Symbol	MIN		2657286						
ANR	2657528	Symbol	r -> last_used		2657286						
ANR	2657529	Symbol	b -> data		2657286						
ANR	2657530	Symbol	r -> dirty		2657286						
ANR	2657531	Symbol	end		2657286						
ANR	2657532	Symbol	a -> max_size		2657286						
ANR	2657533	Symbol	* r		2657286						
ANR	2657534	Symbol	begin		2657286						
ANR	2657535	Symbol	r -> data		2657286						
ANR	2657536	Function	overlaps	98:0:2398:2601							
ANR	2657537	FunctionDef	"overlaps (CondorChunk * a , CondorChunk * b)"		2657536	0					
ANR	2657538	CompoundStatement		99:0:2453:2601	2657536	0					
ANR	2657539	ReturnStatement	return ( ( a -> begin >= b -> begin ) && ( a -> begin < ( b -> begin + b -> size ) ) ) || ( ( b -> begin >= a -> begin ) && ( b -> begin < ( a -> begin + a -> size ) ) ) ;	100:1:2456:2599	2657536	0	True				
ANR	2657540	OrExpression	( ( a -> begin >= b -> begin ) && ( a -> begin < ( b -> begin + b -> size ) ) ) || ( ( b -> begin >= a -> begin ) && ( b -> begin < ( a -> begin + a -> size ) ) )		2657536	0		||			
ANR	2657541	AndExpression	( a -> begin >= b -> begin ) && ( a -> begin < ( b -> begin + b -> size ) )		2657536	0		&&			
ANR	2657542	RelationalExpression	a -> begin >= b -> begin		2657536	0		>=			
ANR	2657543	PtrMemberAccess	a -> begin		2657536	0					
ANR	2657544	Identifier	a		2657536	0					
ANR	2657545	Identifier	begin		2657536	1					
ANR	2657546	PtrMemberAccess	b -> begin		2657536	1					
ANR	2657547	Identifier	b		2657536	0					
ANR	2657548	Identifier	begin		2657536	1					
ANR	2657549	RelationalExpression	a -> begin < ( b -> begin + b -> size )		2657536	1		<			
ANR	2657550	PtrMemberAccess	a -> begin		2657536	0					
ANR	2657551	Identifier	a		2657536	0					
ANR	2657552	Identifier	begin		2657536	1					
ANR	2657553	AdditiveExpression	b -> begin + b -> size		2657536	1		+			
ANR	2657554	PtrMemberAccess	b -> begin		2657536	0					
ANR	2657555	Identifier	b		2657536	0					
ANR	2657556	Identifier	begin		2657536	1					
ANR	2657557	PtrMemberAccess	b -> size		2657536	1					
ANR	2657558	Identifier	b		2657536	0					
ANR	2657559	Identifier	size		2657536	1					
ANR	2657560	AndExpression	( b -> begin >= a -> begin ) && ( b -> begin < ( a -> begin + a -> size ) )		2657536	1		&&			
ANR	2657561	RelationalExpression	b -> begin >= a -> begin		2657536	0		>=			
ANR	2657562	PtrMemberAccess	b -> begin		2657536	0					
ANR	2657563	Identifier	b		2657536	0					
ANR	2657564	Identifier	begin		2657536	1					
ANR	2657565	PtrMemberAccess	a -> begin		2657536	1					
ANR	2657566	Identifier	a		2657536	0					
ANR	2657567	Identifier	begin		2657536	1					
ANR	2657568	RelationalExpression	b -> begin < ( a -> begin + a -> size )		2657536	1		<			
ANR	2657569	PtrMemberAccess	b -> begin		2657536	0					
ANR	2657570	Identifier	b		2657536	0					
ANR	2657571	Identifier	begin		2657536	1					
ANR	2657572	AdditiveExpression	a -> begin + a -> size		2657536	1		+			
ANR	2657573	PtrMemberAccess	a -> begin		2657536	0					
ANR	2657574	Identifier	a		2657536	0					
ANR	2657575	Identifier	begin		2657536	1					
ANR	2657576	PtrMemberAccess	a -> size		2657536	1					
ANR	2657577	Identifier	a		2657536	0					
ANR	2657578	Identifier	size		2657536	1					
ANR	2657579	ReturnType	static int		2657536	1					
ANR	2657580	Identifier	overlaps		2657536	2					
ANR	2657581	ParameterList	"CondorChunk * a , CondorChunk * b"		2657536	3					
ANR	2657582	Parameter	CondorChunk * a	98:21:2419:2432	2657536	0	True				
ANR	2657583	ParameterType	CondorChunk *		2657536	0					
ANR	2657584	Identifier	a		2657536	1					
ANR	2657585	Parameter	CondorChunk * b	98:37:2435:2448	2657536	1	True				
ANR	2657586	ParameterType	CondorChunk *		2657536	0					
ANR	2657587	Identifier	b		2657536	1					
ANR	2657588	CFGEntryNode	ENTRY		2657536		True				
ANR	2657589	CFGExitNode	EXIT		2657536		True				
ANR	2657590	Symbol	a -> size		2657536						
ANR	2657591	Symbol	a		2657536						
ANR	2657592	Symbol	a -> begin		2657536						
ANR	2657593	Symbol	b		2657536						
ANR	2657594	Symbol	b -> size		2657536						
ANR	2657595	Symbol	b -> begin		2657536						
ANR	2657596	Symbol	* a		2657536						
ANR	2657597	Symbol	* b		2657536						
ANR	2657598	Function	adjacent	114:0:2674:2817							
ANR	2657599	FunctionDef	"adjacent (CondorChunk * a , CondorChunk * b)"		2657598	0					
ANR	2657600	CompoundStatement		115:0:2728:2817	2657598	0					
ANR	2657601	ReturnStatement	return ( ( a -> begin + a -> size ) == b -> begin ) || ( ( b -> begin + b -> size ) == a -> begin ) ;	116:1:2731:2815	2657598	0	True				
ANR	2657602	OrExpression	( ( a -> begin + a -> size ) == b -> begin ) || ( ( b -> begin + b -> size ) == a -> begin )		2657598	0		||			
ANR	2657603	EqualityExpression	( a -> begin + a -> size ) == b -> begin		2657598	0		==			
ANR	2657604	AdditiveExpression	a -> begin + a -> size		2657598	0		+			
ANR	2657605	PtrMemberAccess	a -> begin		2657598	0					
ANR	2657606	Identifier	a		2657598	0					
ANR	2657607	Identifier	begin		2657598	1					
ANR	2657608	PtrMemberAccess	a -> size		2657598	1					
ANR	2657609	Identifier	a		2657598	0					
ANR	2657610	Identifier	size		2657598	1					
ANR	2657611	PtrMemberAccess	b -> begin		2657598	1					
ANR	2657612	Identifier	b		2657598	0					
ANR	2657613	Identifier	begin		2657598	1					
ANR	2657614	EqualityExpression	( b -> begin + b -> size ) == a -> begin		2657598	1		==			
ANR	2657615	AdditiveExpression	b -> begin + b -> size		2657598	0		+			
ANR	2657616	PtrMemberAccess	b -> begin		2657598	0					
ANR	2657617	Identifier	b		2657598	0					
ANR	2657618	Identifier	begin		2657598	1					
ANR	2657619	PtrMemberAccess	b -> size		2657598	1					
ANR	2657620	Identifier	b		2657598	0					
ANR	2657621	Identifier	size		2657598	1					
ANR	2657622	PtrMemberAccess	a -> begin		2657598	1					
ANR	2657623	Identifier	a		2657598	0					
ANR	2657624	Identifier	begin		2657598	1					
ANR	2657625	ReturnType	static int		2657598	1					
ANR	2657626	Identifier	adjacent		2657598	2					
ANR	2657627	ParameterList	"CondorChunk * a , CondorChunk * b"		2657598	3					
ANR	2657628	Parameter	CondorChunk * a	114:21:2695:2708	2657598	0	True				
ANR	2657629	ParameterType	CondorChunk *		2657598	0					
ANR	2657630	Identifier	a		2657598	1					
ANR	2657631	Parameter	CondorChunk * b	114:37:2711:2724	2657598	1	True				
ANR	2657632	ParameterType	CondorChunk *		2657598	0					
ANR	2657633	Identifier	b		2657598	1					
ANR	2657634	CFGEntryNode	ENTRY		2657598		True				
ANR	2657635	CFGExitNode	EXIT		2657598		True				
ANR	2657636	Symbol	a -> size		2657598						
ANR	2657637	Symbol	a		2657598						
ANR	2657638	Symbol	a -> begin		2657598						
ANR	2657639	Symbol	b		2657598						
ANR	2657640	Symbol	b -> size		2657598						
ANR	2657641	Symbol	b -> begin		2657598						
ANR	2657642	Symbol	* a		2657598						
ANR	2657643	Symbol	* b		2657598						
ANR	2657644	Function	contains	127:0:2882:3010							
ANR	2657645	FunctionDef	"contains (CondorChunk * c , off_t position)"		2657644	0					
ANR	2657646	CompoundStatement		128:0:2936:3010	2657644	0					
ANR	2657647	ReturnStatement	return ( c -> begin <= position ) && ( ( c -> begin + c -> size ) > position ) ;	129:1:2939:3008	2657644	0	True				
ANR	2657648	AndExpression	( c -> begin <= position ) && ( ( c -> begin + c -> size ) > position )		2657644	0		&&			
ANR	2657649	RelationalExpression	c -> begin <= position		2657644	0		<=			
ANR	2657650	PtrMemberAccess	c -> begin		2657644	0					
ANR	2657651	Identifier	c		2657644	0					
ANR	2657652	Identifier	begin		2657644	1					
ANR	2657653	Identifier	position		2657644	1					
ANR	2657654	RelationalExpression	( c -> begin + c -> size ) > position		2657644	1		>			
ANR	2657655	AdditiveExpression	c -> begin + c -> size		2657644	0		+			
ANR	2657656	PtrMemberAccess	c -> begin		2657644	0					
ANR	2657657	Identifier	c		2657644	0					
ANR	2657658	Identifier	begin		2657644	1					
ANR	2657659	PtrMemberAccess	c -> size		2657644	1					
ANR	2657660	Identifier	c		2657644	0					
ANR	2657661	Identifier	size		2657644	1					
ANR	2657662	Identifier	position		2657644	1					
ANR	2657663	ReturnType	static int		2657644	1					
ANR	2657664	Identifier	contains		2657644	2					
ANR	2657665	ParameterList	"CondorChunk * c , off_t position"		2657644	3					
ANR	2657666	Parameter	CondorChunk * c	127:21:2903:2916	2657644	0	True				
ANR	2657667	ParameterType	CondorChunk *		2657644	0					
ANR	2657668	Identifier	c		2657644	1					
ANR	2657669	Parameter	off_t position	127:37:2919:2932	2657644	1	True				
ANR	2657670	ParameterType	off_t		2657644	0					
ANR	2657671	Identifier	position		2657644	1					
ANR	2657672	CFGEntryNode	ENTRY		2657644		True				
ANR	2657673	CFGExitNode	EXIT		2657644		True				
ANR	2657674	Symbol	c		2657644						
ANR	2657675	Symbol	c -> size		2657644						
ANR	2657676	Symbol	position		2657644						
ANR	2657677	Symbol	c -> begin		2657644						
ANR	2657678	Symbol	* c		2657644						
ANR	2657679	Function	should_combine	143:0:3232:3431							
ANR	2657680	FunctionDef	"should_combine (CondorChunk * a , CondorChunk * b)"		2657679	0					
ANR	2657681	CompoundStatement		144:0:3292:3431	2657679	0					
ANR	2657682	ReturnStatement	"return overlaps ( a , b ) || ( a -> dirty && b -> dirty && ( ( a -> size + b -> size ) <= a -> max_size ) && adjacent ( a , b ) ) ;"	145:1:3295:3429	2657679	0	True				
ANR	2657683	OrExpression	"overlaps ( a , b ) || ( a -> dirty && b -> dirty && ( ( a -> size + b -> size ) <= a -> max_size ) && adjacent ( a , b ) )"		2657679	0		||			
ANR	2657684	CallExpression	"overlaps ( a , b )"		2657679	0					
ANR	2657685	Callee	overlaps		2657679	0					
ANR	2657686	Identifier	overlaps		2657679	0					
ANR	2657687	ArgumentList	a		2657679	1					
ANR	2657688	Argument	a		2657679	0					
ANR	2657689	Identifier	a		2657679	0					
ANR	2657690	Argument	b		2657679	1					
ANR	2657691	Identifier	b		2657679	0					
ANR	2657692	AndExpression	"a -> dirty && b -> dirty && ( ( a -> size + b -> size ) <= a -> max_size ) && adjacent ( a , b )"		2657679	1		&&			
ANR	2657693	PtrMemberAccess	a -> dirty		2657679	0					
ANR	2657694	Identifier	a		2657679	0					
ANR	2657695	Identifier	dirty		2657679	1					
ANR	2657696	AndExpression	"b -> dirty && ( ( a -> size + b -> size ) <= a -> max_size ) && adjacent ( a , b )"		2657679	1		&&			
ANR	2657697	PtrMemberAccess	b -> dirty		2657679	0					
ANR	2657698	Identifier	b		2657679	0					
ANR	2657699	Identifier	dirty		2657679	1					
ANR	2657700	AndExpression	"( ( a -> size + b -> size ) <= a -> max_size ) && adjacent ( a , b )"		2657679	1		&&			
ANR	2657701	RelationalExpression	( a -> size + b -> size ) <= a -> max_size		2657679	0		<=			
ANR	2657702	AdditiveExpression	a -> size + b -> size		2657679	0		+			
ANR	2657703	PtrMemberAccess	a -> size		2657679	0					
ANR	2657704	Identifier	a		2657679	0					
ANR	2657705	Identifier	size		2657679	1					
ANR	2657706	PtrMemberAccess	b -> size		2657679	1					
ANR	2657707	Identifier	b		2657679	0					
ANR	2657708	Identifier	size		2657679	1					
ANR	2657709	PtrMemberAccess	a -> max_size		2657679	1					
ANR	2657710	Identifier	a		2657679	0					
ANR	2657711	Identifier	max_size		2657679	1					
ANR	2657712	CallExpression	"adjacent ( a , b )"		2657679	1					
ANR	2657713	Callee	adjacent		2657679	0					
ANR	2657714	Identifier	adjacent		2657679	0					
ANR	2657715	ArgumentList	a		2657679	1					
ANR	2657716	Argument	a		2657679	0					
ANR	2657717	Identifier	a		2657679	0					
ANR	2657718	Argument	b		2657679	1					
ANR	2657719	Identifier	b		2657679	0					
ANR	2657720	ReturnType	static int		2657679	1					
ANR	2657721	Identifier	should_combine		2657679	2					
ANR	2657722	ParameterList	"CondorChunk * a , CondorChunk * b"		2657679	3					
ANR	2657723	Parameter	CondorChunk * a	143:27:3259:3272	2657679	0	True				
ANR	2657724	ParameterType	CondorChunk *		2657679	0					
ANR	2657725	Identifier	a		2657679	1					
ANR	2657726	Parameter	CondorChunk * b	143:43:3275:3288	2657679	1	True				
ANR	2657727	ParameterType	CondorChunk *		2657679	0					
ANR	2657728	Identifier	b		2657679	1					
ANR	2657729	CFGEntryNode	ENTRY		2657679		True				
ANR	2657730	CFGExitNode	EXIT		2657679		True				
ANR	2657731	Symbol	a -> size		2657679						
ANR	2657732	Symbol	a		2657679						
ANR	2657733	Symbol	b -> dirty		2657679						
ANR	2657734	Symbol	b		2657679						
ANR	2657735	Symbol	a -> dirty		2657679						
ANR	2657736	Symbol	b -> size		2657679						
ANR	2657737	Symbol	overlaps		2657679						
ANR	2657738	Symbol	adjacent		2657679						
ANR	2657739	Symbol	* a		2657679						
ANR	2657740	Symbol	a -> max_size		2657679						
ANR	2657741	Symbol	* b		2657679						
ANR	2657742	Function	absorb	164:0:3573:3886							
ANR	2657743	FunctionDef	"absorb (CondorChunk * head , CondorChunk * c)"		2657742	0					
ANR	2657744	CompoundStatement		165:0:3638:3886	2657742	0					
ANR	2657745	IdentifierDeclStatement	"CondorChunk * next , * combined ;"	166:1:3641:3669	2657742	0	True				
ANR	2657746	IdentifierDecl	* next		2657742	0					
ANR	2657747	IdentifierDeclType	CondorChunk *		2657742	0					
ANR	2657748	Identifier	next		2657742	1					
ANR	2657749	IdentifierDecl	* combined		2657742	1					
ANR	2657750	IdentifierDeclType	CondorChunk *		2657742	0					
ANR	2657751	Identifier	combined		2657742	1					
ANR	2657752	IfStatement	if ( ! head )		2657742	1					
ANR	2657753	Condition	! head	168:4:3676:3680	2657742	0	True				
ANR	2657754	UnaryOperationExpression	! head		2657742	0					
ANR	2657755	UnaryOperator	!		2657742	0					
ANR	2657756	Identifier	head		2657742	1					
ANR	2657757	ReturnStatement	return c ;	168:11:3683:3691	2657742	1	True				
ANR	2657758	Identifier	c		2657742	0					
ANR	2657759	IfStatement	"if ( should_combine ( head , c ) )"		2657742	2					
ANR	2657760	Condition	"should_combine ( head , c )"	170:5:3699:3723	2657742	0	True				
ANR	2657761	CallExpression	"should_combine ( head , c )"		2657742	0					
ANR	2657762	Callee	should_combine		2657742	0					
ANR	2657763	Identifier	should_combine		2657742	0					
ANR	2657764	ArgumentList	head		2657742	1					
ANR	2657765	Argument	head		2657742	0					
ANR	2657766	Identifier	head		2657742	0					
ANR	2657767	Argument	c		2657742	1					
ANR	2657768	Identifier	c		2657742	0					
ANR	2657769	CompoundStatement		6:33:88:88	2657742	1					
ANR	2657770	ExpressionStatement	next = head -> next	171:2:3731:3748	2657742	0	True				
ANR	2657771	AssignmentExpression	next = head -> next		2657742	0		=			
ANR	2657772	Identifier	next		2657742	0					
ANR	2657773	PtrMemberAccess	head -> next		2657742	1					
ANR	2657774	Identifier	head		2657742	0					
ANR	2657775	Identifier	next		2657742	1					
ANR	2657776	ExpressionStatement	"combined = combine ( head , c )"	172:2:3752:3781	2657742	1	True				
ANR	2657777	AssignmentExpression	"combined = combine ( head , c )"		2657742	0		=			
ANR	2657778	Identifier	combined		2657742	0					
ANR	2657779	CallExpression	"combine ( head , c )"		2657742	1					
ANR	2657780	Callee	combine		2657742	0					
ANR	2657781	Identifier	combine		2657742	0					
ANR	2657782	ArgumentList	head		2657742	1					
ANR	2657783	Argument	head		2657742	0					
ANR	2657784	Identifier	head		2657742	0					
ANR	2657785	Argument	c		2657742	1					
ANR	2657786	Identifier	c		2657742	0					
ANR	2657787	ReturnStatement	"return absorb ( next , combined ) ;"	173:2:3785:3816	2657742	2	True				
ANR	2657788	CallExpression	"absorb ( next , combined )"		2657742	0					
ANR	2657789	Callee	absorb		2657742	0					
ANR	2657790	Identifier	absorb		2657742	0					
ANR	2657791	ArgumentList	next		2657742	1					
ANR	2657792	Argument	next		2657742	0					
ANR	2657793	Identifier	next		2657742	0					
ANR	2657794	Argument	combined		2657742	1					
ANR	2657795	Identifier	combined		2657742	0					
ANR	2657796	ElseStatement	else		2657742	0					
ANR	2657797	CompoundStatement		10:8:187:187	2657742	0					
ANR	2657798	ExpressionStatement	"head -> next = absorb ( head -> next , c )"	175:2:3830:3866	2657742	0	True				
ANR	2657799	AssignmentExpression	"head -> next = absorb ( head -> next , c )"		2657742	0		=			
ANR	2657800	PtrMemberAccess	head -> next		2657742	0					
ANR	2657801	Identifier	head		2657742	0					
ANR	2657802	Identifier	next		2657742	1					
ANR	2657803	CallExpression	"absorb ( head -> next , c )"		2657742	1					
ANR	2657804	Callee	absorb		2657742	0					
ANR	2657805	Identifier	absorb		2657742	0					
ANR	2657806	ArgumentList	head -> next		2657742	1					
ANR	2657807	Argument	head -> next		2657742	0					
ANR	2657808	PtrMemberAccess	head -> next		2657742	0					
ANR	2657809	Identifier	head		2657742	0					
ANR	2657810	Identifier	next		2657742	1					
ANR	2657811	Argument	c		2657742	1					
ANR	2657812	Identifier	c		2657742	0					
ANR	2657813	ReturnStatement	return head ;	176:2:3870:3881	2657742	1	True				
ANR	2657814	Identifier	head		2657742	0					
ANR	2657815	ReturnType	static CondorChunk *		2657742	1					
ANR	2657816	Identifier	absorb		2657742	2					
ANR	2657817	ParameterList	"CondorChunk * head , CondorChunk * c"		2657742	3					
ANR	2657818	Parameter	CondorChunk * head	164:29:3602:3618	2657742	0	True				
ANR	2657819	ParameterType	CondorChunk *		2657742	0					
ANR	2657820	Identifier	head		2657742	1					
ANR	2657821	Parameter	CondorChunk * c	164:48:3621:3634	2657742	1	True				
ANR	2657822	ParameterType	CondorChunk *		2657742	0					
ANR	2657823	Identifier	c		2657742	1					
ANR	2657824	CFGEntryNode	ENTRY		2657742		True				
ANR	2657825	CFGExitNode	EXIT		2657742		True				
ANR	2657826	Symbol	head		2657742						
ANR	2657827	Symbol	next		2657742						
ANR	2657828	Symbol	c		2657742						
ANR	2657829	Symbol	should_combine		2657742						
ANR	2657830	Symbol	head -> next		2657742						
ANR	2657831	Symbol	* head		2657742						
ANR	2657832	Symbol	combined		2657742						
ANR	2657833	Symbol	absorb		2657742						
ANR	2657834	Symbol	combine		2657742						
ANR	2657835	Function	CondorFileBuffer :: CondorFileBuffer	185:0:4004:4181							
ANR	2657836	FunctionDef	"CondorFileBuffer :: CondorFileBuffer (CondorFile * o , int bs , int bbs)"		2657835	0					
ANR	2657837	CompoundStatement		186:0:4073:4181	2657835	0					
ANR	2657838	ExpressionStatement	original = o	187:1:4076:4088	2657835	0	True				
ANR	2657839	AssignmentExpression	original = o		2657835	0		=			
ANR	2657840	Identifier	original		2657835	0					
ANR	2657841	Identifier	o		2657835	1					
ANR	2657842	ExpressionStatement	head = 0	188:1:4091:4099	2657835	1	True				
ANR	2657843	AssignmentExpression	head = 0		2657835	0		=			
ANR	2657844	Identifier	head		2657835	0					
ANR	2657845	PrimaryExpression	0		2657835	1					
ANR	2657846	ExpressionStatement	time = 0	189:1:4102:4110	2657835	2	True				
ANR	2657847	AssignmentExpression	time = 0		2657835	0		=			
ANR	2657848	Identifier	time		2657835	0					
ANR	2657849	PrimaryExpression	0		2657835	1					
ANR	2657850	ExpressionStatement	size = 0	190:1:4113:4121	2657835	3	True				
ANR	2657851	AssignmentExpression	size = 0		2657835	0		=			
ANR	2657852	Identifier	size		2657835	0					
ANR	2657853	PrimaryExpression	0		2657835	1					
ANR	2657854	ExpressionStatement	buffer_size = bs	191:1:4124:4140	2657835	4	True				
ANR	2657855	AssignmentExpression	buffer_size = bs		2657835	0		=			
ANR	2657856	Identifier	buffer_size		2657835	0					
ANR	2657857	Identifier	bs		2657835	1					
ANR	2657858	ExpressionStatement	buffer_block_size = bbs	192:1:4143:4166	2657835	5	True				
ANR	2657859	AssignmentExpression	buffer_block_size = bbs		2657835	0		=			
ANR	2657860	Identifier	buffer_block_size		2657835	0					
ANR	2657861	Identifier	bbs		2657835	1					
ANR	2657862	ExpressionStatement	url = NULL	193:1:4169:4179	2657835	6	True				
ANR	2657863	AssignmentExpression	url = NULL		2657835	0		=			
ANR	2657864	Identifier	url		2657835	0					
ANR	2657865	Identifier	NULL		2657835	1					
ANR	2657866	Identifier	CondorFileBuffer :: CondorFileBuffer		2657835	1					
ANR	2657867	ParameterList	"CondorFile * o , int bs , int bbs"		2657835	2					
ANR	2657868	Parameter	CondorFile * o	185:36:4040:4052	2657835	0	True				
ANR	2657869	ParameterType	CondorFile *		2657835	0					
ANR	2657870	Identifier	o		2657835	1					
ANR	2657871	Parameter	int bs	185:51:4055:4060	2657835	1	True				
ANR	2657872	ParameterType	int		2657835	0					
ANR	2657873	Identifier	bs		2657835	1					
ANR	2657874	Parameter	int bbs	185:59:4063:4069	2657835	2	True				
ANR	2657875	ParameterType	int		2657835	0					
ANR	2657876	Identifier	bbs		2657835	1					
ANR	2657877	CFGEntryNode	ENTRY		2657835		True				
ANR	2657878	CFGExitNode	EXIT		2657835		True				
ANR	2657879	Symbol	head		2657835						
ANR	2657880	Symbol	bs		2657835						
ANR	2657881	Symbol	bbs		2657835						
ANR	2657882	Symbol	original		2657835						
ANR	2657883	Symbol	NULL		2657835						
ANR	2657884	Symbol	size		2657835						
ANR	2657885	Symbol	buffer_block_size		2657835						
ANR	2657886	Symbol	buffer_size		2657835						
ANR	2657887	Symbol	time		2657835						
ANR	2657888	Symbol	url		2657835						
ANR	2657889	Symbol	o		2657835						
ANR	2657890	Function	CondorFileBuffer :: ~CondorFileBuffer	196:0:4184:4256							
ANR	2657891	FunctionDef	CondorFileBuffer :: ~CondorFileBuffer ()		2657890	0					
ANR	2657892	CompoundStatement		197:0:4222:4256	2657890	0					
ANR	2657893	Statement	delete	198:1:4225:4230	2657890	0	True				
ANR	2657894	ExpressionStatement	original	198:8:4232:4240	2657890	1	True				
ANR	2657895	Identifier	original		2657890	0					
ANR	2657896	ExpressionStatement	free ( url )	199:1:4243:4254	2657890	2	True				
ANR	2657897	CallExpression	free ( url )		2657890	0					
ANR	2657898	Callee	free		2657890	0					
ANR	2657899	Identifier	free		2657890	0					
ANR	2657900	ArgumentList	url		2657890	1					
ANR	2657901	Argument	url		2657890	0					
ANR	2657902	Identifier	url		2657890	0					
ANR	2657903	Identifier	CondorFileBuffer :: ~CondorFileBuffer		2657890	1					
ANR	2657904	ParameterList			2657890	2					
ANR	2657905	CFGEntryNode	ENTRY		2657890		True				
ANR	2657906	CFGExitNode	EXIT		2657890		True				
ANR	2657907	Symbol	url		2657890						
ANR	2657908	Function	CondorFileBuffer :: open	202:0:4259:6032							
ANR	2657909	FunctionDef	"CondorFileBuffer :: open (const char * url_in , int flags , int mode)"		2657908	0					
ANR	2657910	CompoundStatement		203:0:4329:6032	2657908	0					
ANR	2657911	IdentifierDeclStatement	char * junk = ( char * ) malloc ( strlen ( url_in ) + 1 ) ;	204:1:4332:4377	2657908	0	True				
ANR	2657912	IdentifierDecl	* junk = ( char * ) malloc ( strlen ( url_in ) + 1 )		2657908	0					
ANR	2657913	IdentifierDeclType	char *		2657908	0					
ANR	2657914	Identifier	junk		2657908	1					
ANR	2657915	AssignmentExpression	* junk = ( char * ) malloc ( strlen ( url_in ) + 1 )		2657908	2		=			
ANR	2657916	Identifier	junk		2657908	0					
ANR	2657917	CastExpression	( char * ) malloc ( strlen ( url_in ) + 1 )		2657908	1					
ANR	2657918	CastTarget	char *		2657908	0					
ANR	2657919	CallExpression	malloc ( strlen ( url_in ) + 1 )		2657908	1					
ANR	2657920	Callee	malloc		2657908	0					
ANR	2657921	Identifier	malloc		2657908	0					
ANR	2657922	ArgumentList	strlen ( url_in ) + 1		2657908	1					
ANR	2657923	Argument	strlen ( url_in ) + 1		2657908	0					
ANR	2657924	AdditiveExpression	strlen ( url_in ) + 1		2657908	0		+			
ANR	2657925	CallExpression	strlen ( url_in )		2657908	0					
ANR	2657926	Callee	strlen		2657908	0					
ANR	2657927	Identifier	strlen		2657908	0					
ANR	2657928	ArgumentList	url_in		2657908	1					
ANR	2657929	Argument	url_in		2657908	0					
ANR	2657930	Identifier	url_in		2657908	0					
ANR	2657931	PrimaryExpression	1		2657908	1					
ANR	2657932	IdentifierDeclStatement	char * sub_url = ( char * ) malloc ( strlen ( url_in ) + 1 ) ;	205:1:4380:4428	2657908	1	True				
ANR	2657933	IdentifierDecl	* sub_url = ( char * ) malloc ( strlen ( url_in ) + 1 )		2657908	0					
ANR	2657934	IdentifierDeclType	char *		2657908	0					
ANR	2657935	Identifier	sub_url		2657908	1					
ANR	2657936	AssignmentExpression	* sub_url = ( char * ) malloc ( strlen ( url_in ) + 1 )		2657908	2		=			
ANR	2657937	Identifier	sub_url		2657908	0					
ANR	2657938	CastExpression	( char * ) malloc ( strlen ( url_in ) + 1 )		2657908	1					
ANR	2657939	CastTarget	char *		2657908	0					
ANR	2657940	CallExpression	malloc ( strlen ( url_in ) + 1 )		2657908	1					
ANR	2657941	Callee	malloc		2657908	0					
ANR	2657942	Identifier	malloc		2657908	0					
ANR	2657943	ArgumentList	strlen ( url_in ) + 1		2657908	1					
ANR	2657944	Argument	strlen ( url_in ) + 1		2657908	0					
ANR	2657945	AdditiveExpression	strlen ( url_in ) + 1		2657908	0		+			
ANR	2657946	CallExpression	strlen ( url_in )		2657908	0					
ANR	2657947	Callee	strlen		2657908	0					
ANR	2657948	Identifier	strlen		2657908	0					
ANR	2657949	ArgumentList	url_in		2657908	1					
ANR	2657950	Argument	url_in		2657908	0					
ANR	2657951	Identifier	url_in		2657908	0					
ANR	2657952	PrimaryExpression	1		2657908	1					
ANR	2657953	IdentifierDeclStatement	int result ;	207:1:4432:4442	2657908	2	True				
ANR	2657954	IdentifierDecl	result		2657908	0					
ANR	2657955	IdentifierDeclType	int		2657908	0					
ANR	2657956	Identifier	result		2657908	1					
ANR	2657957	ExpressionStatement	free ( url )	209:1:4446:4457	2657908	3	True				
ANR	2657958	CallExpression	free ( url )		2657908	0					
ANR	2657959	Callee	free		2657908	0					
ANR	2657960	Identifier	free		2657908	0					
ANR	2657961	ArgumentList	url		2657908	1					
ANR	2657962	Argument	url		2657908	0					
ANR	2657963	Identifier	url		2657908	0					
ANR	2657964	ExpressionStatement	url = strdup ( url_in )	210:1:4460:4480	2657908	4	True				
ANR	2657965	AssignmentExpression	url = strdup ( url_in )		2657908	0		=			
ANR	2657966	Identifier	url		2657908	0					
ANR	2657967	CallExpression	strdup ( url_in )		2657908	1					
ANR	2657968	Callee	strdup		2657908	0					
ANR	2657969	Identifier	strdup		2657908	0					
ANR	2657970	ArgumentList	url_in		2657908	1					
ANR	2657971	Argument	url_in		2657908	0					
ANR	2657972	Identifier	url_in		2657908	0					
ANR	2657973	ExpressionStatement	"result = sscanf ( url , ""%[^:]:%[\\x1-\\x7F]"" , junk , sub_url )"	215:1:4648:4706	2657908	5	True				
ANR	2657974	AssignmentExpression	"result = sscanf ( url , ""%[^:]:%[\\x1-\\x7F]"" , junk , sub_url )"		2657908	0		=			
ANR	2657975	Identifier	result		2657908	0					
ANR	2657976	CallExpression	"sscanf ( url , ""%[^:]:%[\\x1-\\x7F]"" , junk , sub_url )"		2657908	1					
ANR	2657977	Callee	sscanf		2657908	0					
ANR	2657978	Identifier	sscanf		2657908	0					
ANR	2657979	ArgumentList	url		2657908	1					
ANR	2657980	Argument	url		2657908	0					
ANR	2657981	Identifier	url		2657908	0					
ANR	2657982	Argument	"""%[^:]:%[\\x1-\\x7F]"""		2657908	1					
ANR	2657983	PrimaryExpression	"""%[^:]:%[\\x1-\\x7F]"""		2657908	0					
ANR	2657984	Argument	junk		2657908	2					
ANR	2657985	Identifier	junk		2657908	0					
ANR	2657986	Argument	sub_url		2657908	3					
ANR	2657987	Identifier	sub_url		2657908	0					
ANR	2657988	ExpressionStatement	free ( junk )	219:1:4785:4797	2657908	6	True				
ANR	2657989	CallExpression	free ( junk )		2657908	0					
ANR	2657990	Callee	free		2657908	0					
ANR	2657991	Identifier	free		2657908	0					
ANR	2657992	ArgumentList	junk		2657908	1					
ANR	2657993	Argument	junk		2657908	0					
ANR	2657994	Identifier	junk		2657908	0					
ANR	2657995	ExpressionStatement	junk = NULL	220:1:4800:4811	2657908	7	True				
ANR	2657996	AssignmentExpression	junk = NULL		2657908	0		=			
ANR	2657997	Identifier	junk		2657908	0					
ANR	2657998	Identifier	NULL		2657908	1					
ANR	2657999	IfStatement	if ( result != 2 )		2657908	8					
ANR	2658000	Condition	result != 2	222:4:4818:4826	2657908	0	True				
ANR	2658001	EqualityExpression	result != 2		2657908	0		!=			
ANR	2658002	Identifier	result		2657908	0					
ANR	2658003	PrimaryExpression	2		2657908	1					
ANR	2658004	CompoundStatement		20:15:499:499	2657908	1					
ANR	2658005	ExpressionStatement	"_condor_warning ( CONDOR_WARNING_KIND_BADURL , ""Couldn't understand url '%s'"" , url_in )"	223:2:4833:4915	2657908	0	True				
ANR	2658006	CallExpression	"_condor_warning ( CONDOR_WARNING_KIND_BADURL , ""Couldn't understand url '%s'"" , url_in )"		2657908	0					
ANR	2658007	Callee	_condor_warning		2657908	0					
ANR	2658008	Identifier	_condor_warning		2657908	0					
ANR	2658009	ArgumentList	CONDOR_WARNING_KIND_BADURL		2657908	1					
ANR	2658010	Argument	CONDOR_WARNING_KIND_BADURL		2657908	0					
ANR	2658011	Identifier	CONDOR_WARNING_KIND_BADURL		2657908	0					
ANR	2658012	Argument	"""Couldn't understand url '%s'"""		2657908	1					
ANR	2658013	PrimaryExpression	"""Couldn't understand url '%s'"""		2657908	0					
ANR	2658014	Argument	url_in		2657908	2					
ANR	2658015	Identifier	url_in		2657908	0					
ANR	2658016	ExpressionStatement	free ( sub_url )	224:2:4919:4932	2657908	1	True				
ANR	2658017	CallExpression	free ( sub_url )		2657908	0					
ANR	2658018	Callee	free		2657908	0					
ANR	2658019	Identifier	free		2657908	0					
ANR	2658020	ArgumentList	sub_url		2657908	1					
ANR	2658021	Argument	sub_url		2657908	0					
ANR	2658022	Identifier	sub_url		2657908	0					
ANR	2658023	ExpressionStatement	errno = EINVAL	225:2:4936:4950	2657908	2	True				
ANR	2658024	AssignmentExpression	errno = EINVAL		2657908	0		=			
ANR	2658025	Identifier	errno		2657908	0					
ANR	2658026	Identifier	EINVAL		2657908	1					
ANR	2658027	ReturnStatement	return - 1 ;	226:2:4954:4963	2657908	3	True				
ANR	2658028	UnaryOperationExpression	- 1		2657908	0					
ANR	2658029	UnaryOperator	-		2657908	0					
ANR	2658030	PrimaryExpression	1		2657908	1					
ANR	2658031	IfStatement	if ( sub_url [ 0 ] == '(' )		2657908	9					
ANR	2658032	Condition	sub_url [ 0 ] == '('	229:4:4973:4987	2657908	0	True				
ANR	2658033	EqualityExpression	sub_url [ 0 ] == '('		2657908	0		==			
ANR	2658034	ArrayIndexing	sub_url [ 0 ]		2657908	0					
ANR	2658035	Identifier	sub_url		2657908	0					
ANR	2658036	PrimaryExpression	0		2657908	1					
ANR	2658037	PrimaryExpression	'('		2657908	1					
ANR	2658038	CompoundStatement		28:2:664:710	2657908	1					
ANR	2658039	IdentifierDeclStatement	char * path = ( char * ) malloc ( strlen ( sub_url ) + 1 ) ;	230:2:4994:5040	2657908	0	True				
ANR	2658040	IdentifierDecl	* path = ( char * ) malloc ( strlen ( sub_url ) + 1 )		2657908	0					
ANR	2658041	IdentifierDeclType	char *		2657908	0					
ANR	2658042	Identifier	path		2657908	1					
ANR	2658043	AssignmentExpression	* path = ( char * ) malloc ( strlen ( sub_url ) + 1 )		2657908	2		=			
ANR	2658044	Identifier	path		2657908	0					
ANR	2658045	CastExpression	( char * ) malloc ( strlen ( sub_url ) + 1 )		2657908	1					
ANR	2658046	CastTarget	char *		2657908	0					
ANR	2658047	CallExpression	malloc ( strlen ( sub_url ) + 1 )		2657908	1					
ANR	2658048	Callee	malloc		2657908	0					
ANR	2658049	Identifier	malloc		2657908	0					
ANR	2658050	ArgumentList	strlen ( sub_url ) + 1		2657908	1					
ANR	2658051	Argument	strlen ( sub_url ) + 1		2657908	0					
ANR	2658052	AdditiveExpression	strlen ( sub_url ) + 1		2657908	0		+			
ANR	2658053	CallExpression	strlen ( sub_url )		2657908	0					
ANR	2658054	Callee	strlen		2657908	0					
ANR	2658055	Identifier	strlen		2657908	0					
ANR	2658056	ArgumentList	sub_url		2657908	1					
ANR	2658057	Argument	sub_url		2657908	0					
ANR	2658058	Identifier	sub_url		2657908	0					
ANR	2658059	PrimaryExpression	1		2657908	1					
ANR	2658060	ExpressionStatement	"result = sscanf ( sub_url , ""(%d,%d)%[\\x1-\\x7F]"" , & buffer_size , & buffer_block_size , path )"	235:2:5211:5293	2657908	1	True				
ANR	2658061	AssignmentExpression	"result = sscanf ( sub_url , ""(%d,%d)%[\\x1-\\x7F]"" , & buffer_size , & buffer_block_size , path )"		2657908	0		=			
ANR	2658062	Identifier	result		2657908	0					
ANR	2658063	CallExpression	"sscanf ( sub_url , ""(%d,%d)%[\\x1-\\x7F]"" , & buffer_size , & buffer_block_size , path )"		2657908	1					
ANR	2658064	Callee	sscanf		2657908	0					
ANR	2658065	Identifier	sscanf		2657908	0					
ANR	2658066	ArgumentList	sub_url		2657908	1					
ANR	2658067	Argument	sub_url		2657908	0					
ANR	2658068	Identifier	sub_url		2657908	0					
ANR	2658069	Argument	"""(%d,%d)%[\\x1-\\x7F]"""		2657908	1					
ANR	2658070	PrimaryExpression	"""(%d,%d)%[\\x1-\\x7F]"""		2657908	0					
ANR	2658071	Argument	& buffer_size		2657908	2					
ANR	2658072	UnaryOperationExpression	& buffer_size		2657908	0					
ANR	2658073	UnaryOperator	&		2657908	0					
ANR	2658074	Identifier	buffer_size		2657908	1					
ANR	2658075	Argument	& buffer_block_size		2657908	3					
ANR	2658076	UnaryOperationExpression	& buffer_block_size		2657908	0					
ANR	2658077	UnaryOperator	&		2657908	0					
ANR	2658078	Identifier	buffer_block_size		2657908	1					
ANR	2658079	Argument	path		2657908	4					
ANR	2658080	Identifier	path		2657908	0					
ANR	2658081	IfStatement	if ( result != 3 )		2657908	2					
ANR	2658082	Condition	result != 3	240:5:5404:5412	2657908	0	True				
ANR	2658083	EqualityExpression	result != 3		2657908	0		!=			
ANR	2658084	Identifier	result		2657908	0					
ANR	2658085	PrimaryExpression	3		2657908	1					
ANR	2658086	CompoundStatement		38:16:1085:1085	2657908	1					
ANR	2658087	ExpressionStatement	"_condor_warning ( CONDOR_WARNING_KIND_BADURL , ""Couldn't understand url '%s'"" , sub_url )"	241:3:5420:5503	2657908	0	True				
ANR	2658088	CallExpression	"_condor_warning ( CONDOR_WARNING_KIND_BADURL , ""Couldn't understand url '%s'"" , sub_url )"		2657908	0					
ANR	2658089	Callee	_condor_warning		2657908	0					
ANR	2658090	Identifier	_condor_warning		2657908	0					
ANR	2658091	ArgumentList	CONDOR_WARNING_KIND_BADURL		2657908	1					
ANR	2658092	Argument	CONDOR_WARNING_KIND_BADURL		2657908	0					
ANR	2658093	Identifier	CONDOR_WARNING_KIND_BADURL		2657908	0					
ANR	2658094	Argument	"""Couldn't understand url '%s'"""		2657908	1					
ANR	2658095	PrimaryExpression	"""Couldn't understand url '%s'"""		2657908	0					
ANR	2658096	Argument	sub_url		2657908	2					
ANR	2658097	Identifier	sub_url		2657908	0					
ANR	2658098	ExpressionStatement	errno = EINVAL	242:3:5508:5522	2657908	1	True				
ANR	2658099	AssignmentExpression	errno = EINVAL		2657908	0		=			
ANR	2658100	Identifier	errno		2657908	0					
ANR	2658101	Identifier	EINVAL		2657908	1					
ANR	2658102	ExpressionStatement	free ( path )	243:3:5527:5539	2657908	2	True				
ANR	2658103	CallExpression	free ( path )		2657908	0					
ANR	2658104	Callee	free		2657908	0					
ANR	2658105	Identifier	free		2657908	0					
ANR	2658106	ArgumentList	path		2657908	1					
ANR	2658107	Argument	path		2657908	0					
ANR	2658108	Identifier	path		2657908	0					
ANR	2658109	ExpressionStatement	free ( sub_url )	244:3:5544:5559	2657908	3	True				
ANR	2658110	CallExpression	free ( sub_url )		2657908	0					
ANR	2658111	Callee	free		2657908	0					
ANR	2658112	Identifier	free		2657908	0					
ANR	2658113	ArgumentList	sub_url		2657908	1					
ANR	2658114	Argument	sub_url		2657908	0					
ANR	2658115	Identifier	sub_url		2657908	0					
ANR	2658116	ReturnStatement	return - 1 ;	245:3:5564:5573	2657908	4	True				
ANR	2658117	UnaryOperationExpression	- 1		2657908	0					
ANR	2658118	UnaryOperator	-		2657908	0					
ANR	2658119	PrimaryExpression	1		2657908	1					
ANR	2658120	IfStatement	if ( buffer_size < 0 || buffer_block_size < 0 || buffer_size < buffer_block_size )		2657908	3					
ANR	2658121	Condition	buffer_size < 0 || buffer_block_size < 0 || buffer_size < buffer_block_size	247:6:5585:5653	2657908	0	True				
ANR	2658122	OrExpression	buffer_size < 0 || buffer_block_size < 0 || buffer_size < buffer_block_size		2657908	0		||			
ANR	2658123	RelationalExpression	buffer_size < 0		2657908	0		<			
ANR	2658124	Identifier	buffer_size		2657908	0					
ANR	2658125	PrimaryExpression	0		2657908	1					
ANR	2658126	OrExpression	buffer_block_size < 0 || buffer_size < buffer_block_size		2657908	1		||			
ANR	2658127	RelationalExpression	buffer_block_size < 0		2657908	0		<			
ANR	2658128	Identifier	buffer_block_size		2657908	0					
ANR	2658129	PrimaryExpression	0		2657908	1					
ANR	2658130	RelationalExpression	buffer_size < buffer_block_size		2657908	1		<			
ANR	2658131	Identifier	buffer_size		2657908	0					
ANR	2658132	Identifier	buffer_block_size		2657908	1					
ANR	2658133	CompoundStatement		45:78:1327:1327	2657908	1					
ANR	2658134	ExpressionStatement	"_condor_warning ( CONDOR_WARNING_KIND_NOTICE , ""Invalid buffer configuration: (%d,%d)"" , buffer_size , buffer_block_size )"	248:3:5662:5776	2657908	0	True				
ANR	2658135	CallExpression	"_condor_warning ( CONDOR_WARNING_KIND_NOTICE , ""Invalid buffer configuration: (%d,%d)"" , buffer_size , buffer_block_size )"		2657908	0					
ANR	2658136	Callee	_condor_warning		2657908	0					
ANR	2658137	Identifier	_condor_warning		2657908	0					
ANR	2658138	ArgumentList	CONDOR_WARNING_KIND_NOTICE		2657908	1					
ANR	2658139	Argument	CONDOR_WARNING_KIND_NOTICE		2657908	0					
ANR	2658140	Identifier	CONDOR_WARNING_KIND_NOTICE		2657908	0					
ANR	2658141	Argument	"""Invalid buffer configuration: (%d,%d)"""		2657908	1					
ANR	2658142	PrimaryExpression	"""Invalid buffer configuration: (%d,%d)"""		2657908	0					
ANR	2658143	Argument	buffer_size		2657908	2					
ANR	2658144	Identifier	buffer_size		2657908	0					
ANR	2658145	Argument	buffer_block_size		2657908	3					
ANR	2658146	Identifier	buffer_block_size		2657908	0					
ANR	2658147	ExpressionStatement	errno = EINVAL	249:3:5781:5795	2657908	1	True				
ANR	2658148	AssignmentExpression	errno = EINVAL		2657908	0		=			
ANR	2658149	Identifier	errno		2657908	0					
ANR	2658150	Identifier	EINVAL		2657908	1					
ANR	2658151	ExpressionStatement	free ( path )	250:3:5800:5812	2657908	2	True				
ANR	2658152	CallExpression	free ( path )		2657908	0					
ANR	2658153	Callee	free		2657908	0					
ANR	2658154	Identifier	free		2657908	0					
ANR	2658155	ArgumentList	path		2657908	1					
ANR	2658156	Argument	path		2657908	0					
ANR	2658157	Identifier	path		2657908	0					
ANR	2658158	ExpressionStatement	free ( sub_url )	251:3:5817:5832	2657908	3	True				
ANR	2658159	CallExpression	free ( sub_url )		2657908	0					
ANR	2658160	Callee	free		2657908	0					
ANR	2658161	Identifier	free		2657908	0					
ANR	2658162	ArgumentList	sub_url		2657908	1					
ANR	2658163	Argument	sub_url		2657908	0					
ANR	2658164	Identifier	sub_url		2657908	0					
ANR	2658165	ReturnStatement	return - 1 ;	252:3:5837:5846	2657908	4	True				
ANR	2658166	UnaryOperationExpression	- 1		2657908	0					
ANR	2658167	UnaryOperator	-		2657908	0					
ANR	2658168	PrimaryExpression	1		2657908	1					
ANR	2658169	ExpressionStatement	free ( sub_url )	254:2:5854:5869	2657908	4	True				
ANR	2658170	CallExpression	free ( sub_url )		2657908	0					
ANR	2658171	Callee	free		2657908	0					
ANR	2658172	Identifier	free		2657908	0					
ANR	2658173	ArgumentList	sub_url		2657908	1					
ANR	2658174	Argument	sub_url		2657908	0					
ANR	2658175	Identifier	sub_url		2657908	0					
ANR	2658176	ExpressionStatement	sub_url = strdup ( path )	255:2:5873:5895	2657908	5	True				
ANR	2658177	AssignmentExpression	sub_url = strdup ( path )		2657908	0		=			
ANR	2658178	Identifier	sub_url		2657908	0					
ANR	2658179	CallExpression	strdup ( path )		2657908	1					
ANR	2658180	Callee	strdup		2657908	0					
ANR	2658181	Identifier	strdup		2657908	0					
ANR	2658182	ArgumentList	path		2657908	1					
ANR	2658183	Argument	path		2657908	0					
ANR	2658184	Identifier	path		2657908	0					
ANR	2658185	ExpressionStatement	free ( path )	256:2:5899:5911	2657908	6	True				
ANR	2658186	CallExpression	free ( path )		2657908	0					
ANR	2658187	Callee	free		2657908	0					
ANR	2658188	Identifier	free		2657908	0					
ANR	2658189	ArgumentList	path		2657908	1					
ANR	2658190	Argument	path		2657908	0					
ANR	2658191	Identifier	path		2657908	0					
ANR	2658192	ExpressionStatement	"result = original -> open ( sub_url , flags , mode )"	259:1:5918:5965	2657908	10	True				
ANR	2658193	AssignmentExpression	"result = original -> open ( sub_url , flags , mode )"		2657908	0		=			
ANR	2658194	Identifier	result		2657908	0					
ANR	2658195	CallExpression	"original -> open ( sub_url , flags , mode )"		2657908	1					
ANR	2658196	Callee	original -> open		2657908	0					
ANR	2658197	PtrMemberAccess	original -> open		2657908	0					
ANR	2658198	Identifier	original		2657908	0					
ANR	2658199	Identifier	open		2657908	1					
ANR	2658200	ArgumentList	sub_url		2657908	1					
ANR	2658201	Argument	sub_url		2657908	0					
ANR	2658202	Identifier	sub_url		2657908	0					
ANR	2658203	Argument	flags		2657908	1					
ANR	2658204	Identifier	flags		2657908	0					
ANR	2658205	Argument	mode		2657908	2					
ANR	2658206	Identifier	mode		2657908	0					
ANR	2658207	ExpressionStatement	free ( sub_url )	260:1:5968:5983	2657908	11	True				
ANR	2658208	CallExpression	free ( sub_url )		2657908	0					
ANR	2658209	Callee	free		2657908	0					
ANR	2658210	Identifier	free		2657908	0					
ANR	2658211	ArgumentList	sub_url		2657908	1					
ANR	2658212	Argument	sub_url		2657908	0					
ANR	2658213	Identifier	sub_url		2657908	0					
ANR	2658214	ExpressionStatement	size = original -> get_size ( )	261:2:5987:6014	2657908	12	True				
ANR	2658215	AssignmentExpression	size = original -> get_size ( )		2657908	0		=			
ANR	2658216	Identifier	size		2657908	0					
ANR	2658217	CallExpression	original -> get_size ( )		2657908	1					
ANR	2658218	Callee	original -> get_size		2657908	0					
ANR	2658219	PtrMemberAccess	original -> get_size		2657908	0					
ANR	2658220	Identifier	original		2657908	0					
ANR	2658221	Identifier	get_size		2657908	1					
ANR	2658222	ArgumentList			2657908	1					
ANR	2658223	ReturnStatement	return result ;	262:1:6017:6030	2657908	13	True				
ANR	2658224	Identifier	result		2657908	0					
ANR	2658225	ReturnType	int		2657908	1					
ANR	2658226	Identifier	CondorFileBuffer :: open		2657908	2					
ANR	2658227	ParameterList	"const char * url_in , int flags , int mode"		2657908	3					
ANR	2658228	Parameter	const char * url_in	202:28:4287:4304	2657908	0	True				
ANR	2658229	ParameterType	const char *		2657908	0					
ANR	2658230	Identifier	url_in		2657908	1					
ANR	2658231	Parameter	int flags	202:48:4307:4315	2657908	1	True				
ANR	2658232	ParameterType	int		2657908	0					
ANR	2658233	Identifier	flags		2657908	1					
ANR	2658234	Parameter	int mode	202:59:4318:4325	2657908	2	True				
ANR	2658235	ParameterType	int		2657908	0					
ANR	2658236	Identifier	mode		2657908	1					
ANR	2658237	CFGEntryNode	ENTRY		2657908		True				
ANR	2658238	CFGExitNode	EXIT		2657908		True				
ANR	2658239	Symbol	buffer_block_size		2657908						
ANR	2658240	Symbol	& buffer_block_size		2657908						
ANR	2658241	Symbol	buffer_size		2657908						
ANR	2658242	Symbol	flags		2657908						
ANR	2658243	Symbol	* original		2657908						
ANR	2658244	Symbol	CONDOR_WARNING_KIND_BADURL		2657908						
ANR	2658245	Symbol	mode		2657908						
ANR	2658246	Symbol	result		2657908						
ANR	2658247	Symbol	strlen		2657908						
ANR	2658248	Symbol	path		2657908						
ANR	2658249	Symbol	original -> open		2657908						
ANR	2658250	Symbol	url_in		2657908						
ANR	2658251	Symbol	sub_url		2657908						
ANR	2658252	Symbol	malloc		2657908						
ANR	2658253	Symbol	errno		2657908						
ANR	2658254	Symbol	NULL		2657908						
ANR	2658255	Symbol	original		2657908						
ANR	2658256	Symbol	& buffer_size		2657908						
ANR	2658257	Symbol	url		2657908						
ANR	2658258	Symbol	EINVAL		2657908						
ANR	2658259	Symbol	size		2657908						
ANR	2658260	Symbol	sscanf		2657908						
ANR	2658261	Symbol	junk		2657908						
ANR	2658262	Symbol	strdup		2657908						
ANR	2658263	Symbol	CONDOR_WARNING_KIND_NOTICE		2657908						
ANR	2658264	Symbol	* sub_url		2657908						
ANR	2658265	Symbol	original -> get_size		2657908						
ANR	2658266	Function	CondorFileBuffer :: close	265:0:6035:6105							
ANR	2658267	FunctionDef	CondorFileBuffer :: close ()		2658266	0					
ANR	2658268	CompoundStatement		266:0:6065:6105	2658266	0					
ANR	2658269	ExpressionStatement	flush ( 1 )	267:1:6068:6076	2658266	0	True				
ANR	2658270	CallExpression	flush ( 1 )		2658266	0					
ANR	2658271	Callee	flush		2658266	0					
ANR	2658272	Identifier	flush		2658266	0					
ANR	2658273	ArgumentList	1		2658266	1					
ANR	2658274	Argument	1		2658266	0					
ANR	2658275	PrimaryExpression	1		2658266	0					
ANR	2658276	ReturnStatement	return original -> close ( ) ;	268:1:6079:6103	2658266	1	True				
ANR	2658277	CallExpression	original -> close ( )		2658266	0					
ANR	2658278	Callee	original -> close		2658266	0					
ANR	2658279	PtrMemberAccess	original -> close		2658266	0					
ANR	2658280	Identifier	original		2658266	0					
ANR	2658281	Identifier	close		2658266	1					
ANR	2658282	ArgumentList			2658266	1					
ANR	2658283	ReturnType	int		2658266	1					
ANR	2658284	Identifier	CondorFileBuffer :: close		2658266	2					
ANR	2658285	ParameterList			2658266	3					
ANR	2658286	CFGEntryNode	ENTRY		2658266		True				
ANR	2658287	CFGExitNode	EXIT		2658266		True				
ANR	2658288	Symbol	original		2658266						
ANR	2658289	Symbol	original -> close		2658266						
ANR	2658290	Symbol	* original		2658266						
ANR	2658291	Function	CondorFileBuffer :: read	276:0:6241:8089							
ANR	2658292	FunctionDef	"CondorFileBuffer :: read (off_t offset , char * data , int length)"		2658291	0					
ANR	2658293	CompoundStatement		277:0:6306:8089	2658291	0					
ANR	2658294	IdentifierDeclStatement	CondorChunk * c = 0 ;	278:1:6309:6325	2658291	0	True				
ANR	2658295	IdentifierDecl	* c = 0		2658291	0					
ANR	2658296	IdentifierDeclType	CondorChunk *		2658291	0					
ANR	2658297	Identifier	c		2658291	1					
ANR	2658298	AssignmentExpression	* c = 0		2658291	2		=			
ANR	2658299	Identifier	c		2658291	0					
ANR	2658300	PrimaryExpression	0		2658291	1					
ANR	2658301	IdentifierDeclStatement	off_t piece = 0 ;	279:1:6328:6341	2658291	1	True				
ANR	2658302	IdentifierDecl	piece = 0		2658291	0					
ANR	2658303	IdentifierDeclType	off_t		2658291	0					
ANR	2658304	Identifier	piece		2658291	1					
ANR	2658305	AssignmentExpression	piece = 0		2658291	2		=			
ANR	2658306	Identifier	piece		2658291	0					
ANR	2658307	PrimaryExpression	0		2658291	1					
ANR	2658308	IdentifierDeclStatement	int bytes_read = 0 ;	280:1:6344:6360	2658291	2	True				
ANR	2658309	IdentifierDecl	bytes_read = 0		2658291	0					
ANR	2658310	IdentifierDeclType	int		2658291	0					
ANR	2658311	Identifier	bytes_read		2658291	1					
ANR	2658312	AssignmentExpression	bytes_read = 0		2658291	2		=			
ANR	2658313	Identifier	bytes_read		2658291	0					
ANR	2658314	PrimaryExpression	0		2658291	1					
ANR	2658315	IdentifierDeclStatement	off_t hole_top ;	281:1:6363:6377	2658291	3	True				
ANR	2658316	IdentifierDecl	hole_top		2658291	0					
ANR	2658317	IdentifierDeclType	off_t		2658291	0					
ANR	2658318	Identifier	hole_top		2658291	1					
ANR	2658319	IfStatement	if ( ( offset + length ) > size )		2658291	4					
ANR	2658320	Condition	( offset + length ) > size	286:4:6480:6499	2658291	0	True				
ANR	2658321	RelationalExpression	( offset + length ) > size		2658291	0		>			
ANR	2658322	AdditiveExpression	offset + length		2658291	0		+			
ANR	2658323	Identifier	offset		2658291	0					
ANR	2658324	Identifier	length		2658291	1					
ANR	2658325	Identifier	size		2658291	1					
ANR	2658326	CompoundStatement		10:26:195:195	2658291	1					
ANR	2658327	ExpressionStatement	length = size - offset	287:2:6506:6526	2658291	0	True				
ANR	2658328	AssignmentExpression	length = size - offset		2658291	0		=			
ANR	2658329	Identifier	length		2658291	0					
ANR	2658330	AdditiveExpression	size - offset		2658291	1		-			
ANR	2658331	Identifier	size		2658291	0					
ANR	2658332	Identifier	offset		2658291	1					
ANR	2658333	WhileStatement	while ( length > 0 )		2658291	5					
ANR	2658334	Condition	length > 0	290:7:6539:6546	2658291	0	True				
ANR	2658335	RelationalExpression	length > 0		2658291	0		>			
ANR	2658336	Identifier	length		2658291	0					
ANR	2658337	PrimaryExpression	0		2658291	1					
ANR	2658338	CompoundStatement		14:17:242:242	2658291	1					
ANR	2658339	ExpressionStatement	"hole_top = MIN ( size , offset + length )"	295:2:6659:6696	2658291	0	True				
ANR	2658340	AssignmentExpression	"hole_top = MIN ( size , offset + length )"		2658291	0		=			
ANR	2658341	Identifier	hole_top		2658291	0					
ANR	2658342	CallExpression	"MIN ( size , offset + length )"		2658291	1					
ANR	2658343	Callee	MIN		2658291	0					
ANR	2658344	Identifier	MIN		2658291	0					
ANR	2658345	ArgumentList	size		2658291	1					
ANR	2658346	Argument	size		2658291	0					
ANR	2658347	Identifier	size		2658291	0					
ANR	2658348	Argument	offset + length		2658291	1					
ANR	2658349	AdditiveExpression	offset + length		2658291	0		+			
ANR	2658350	Identifier	offset		2658291	0					
ANR	2658351	Identifier	length		2658291	1					
ANR	2658352	ForStatement	for ( c = head ; c ; c = c -> next )		2658291	1					
ANR	2658353	ForInit	c = head ;	301:7:6828:6834	2658291	0	True				
ANR	2658354	AssignmentExpression	c = head		2658291	0		=			
ANR	2658355	Identifier	c		2658291	0					
ANR	2658356	Identifier	head		2658291	1					
ANR	2658357	Condition	c	301:15:6836:6836	2658291	1	True				
ANR	2658358	Identifier	c		2658291	0					
ANR	2658359	AssignmentExpression	c = c -> next	301:18:6839:6847	2658291	2	True	=			
ANR	2658360	Identifier	c		2658291	0					
ANR	2658361	PtrMemberAccess	c -> next		2658291	1					
ANR	2658362	Identifier	c		2658291	0					
ANR	2658363	Identifier	next		2658291	1					
ANR	2658364	CompoundStatement		25:30:544:544	2658291	3					
ANR	2658365	IfStatement	"if ( contains ( c , offset ) )"		2658291	0					
ANR	2658366	Condition	"contains ( c , offset )"	302:7:6860:6877	2658291	0	True				
ANR	2658367	CallExpression	"contains ( c , offset )"		2658291	0					
ANR	2658368	Callee	contains		2658291	0					
ANR	2658369	Identifier	contains		2658291	0					
ANR	2658370	ArgumentList	c		2658291	1					
ANR	2658371	Argument	c		2658291	0					
ANR	2658372	Identifier	c		2658291	0					
ANR	2658373	Argument	offset		2658291	1					
ANR	2658374	Identifier	offset		2658291	0					
ANR	2658375	CompoundStatement		26:28:574:574	2658291	1					
ANR	2658376	ExpressionStatement	"piece = MIN ( c -> begin + c -> size - offset , length )"	303:4:6887:6930	2658291	0	True				
ANR	2658377	AssignmentExpression	"piece = MIN ( c -> begin + c -> size - offset , length )"		2658291	0		=			
ANR	2658378	Identifier	piece		2658291	0					
ANR	2658379	CallExpression	"MIN ( c -> begin + c -> size - offset , length )"		2658291	1					
ANR	2658380	Callee	MIN		2658291	0					
ANR	2658381	Identifier	MIN		2658291	0					
ANR	2658382	ArgumentList	c -> begin + c -> size - offset		2658291	1					
ANR	2658383	Argument	c -> begin + c -> size - offset		2658291	0					
ANR	2658384	AdditiveExpression	c -> begin + c -> size - offset		2658291	0		+			
ANR	2658385	PtrMemberAccess	c -> begin		2658291	0					
ANR	2658386	Identifier	c		2658291	0					
ANR	2658387	Identifier	begin		2658291	1					
ANR	2658388	AdditiveExpression	c -> size - offset		2658291	1		-			
ANR	2658389	PtrMemberAccess	c -> size		2658291	0					
ANR	2658390	Identifier	c		2658291	0					
ANR	2658391	Identifier	size		2658291	1					
ANR	2658392	Identifier	offset		2658291	1					
ANR	2658393	Argument	length		2658291	1					
ANR	2658394	Identifier	length		2658291	0					
ANR	2658395	ExpressionStatement	"memcpy ( data , & c -> data [ offset - c -> begin ] , piece )"	304:4:6936:6980	2658291	1	True				
ANR	2658396	CallExpression	"memcpy ( data , & c -> data [ offset - c -> begin ] , piece )"		2658291	0					
ANR	2658397	Callee	memcpy		2658291	0					
ANR	2658398	Identifier	memcpy		2658291	0					
ANR	2658399	ArgumentList	data		2658291	1					
ANR	2658400	Argument	data		2658291	0					
ANR	2658401	Identifier	data		2658291	0					
ANR	2658402	Argument	& c -> data [ offset - c -> begin ]		2658291	1					
ANR	2658403	UnaryOperationExpression	& c -> data [ offset - c -> begin ]		2658291	0					
ANR	2658404	UnaryOperator	&		2658291	0					
ANR	2658405	ArrayIndexing	c -> data [ offset - c -> begin ]		2658291	1					
ANR	2658406	PtrMemberAccess	c -> data		2658291	0					
ANR	2658407	Identifier	c		2658291	0					
ANR	2658408	Identifier	data		2658291	1					
ANR	2658409	AdditiveExpression	offset - c -> begin		2658291	1		-			
ANR	2658410	Identifier	offset		2658291	0					
ANR	2658411	PtrMemberAccess	c -> begin		2658291	1					
ANR	2658412	Identifier	c		2658291	0					
ANR	2658413	Identifier	begin		2658291	1					
ANR	2658414	Argument	piece		2658291	2					
ANR	2658415	Identifier	piece		2658291	0					
ANR	2658416	ExpressionStatement	offset += piece	305:4:6986:7001	2658291	2	True				
ANR	2658417	AssignmentExpression	offset += piece		2658291	0		+=			
ANR	2658418	Identifier	offset		2658291	0					
ANR	2658419	Identifier	piece		2658291	1					
ANR	2658420	ExpressionStatement	data += piece	306:4:7007:7020	2658291	3	True				
ANR	2658421	AssignmentExpression	data += piece		2658291	0		+=			
ANR	2658422	Identifier	data		2658291	0					
ANR	2658423	Identifier	piece		2658291	1					
ANR	2658424	ExpressionStatement	length -= piece	307:4:7026:7041	2658291	4	True				
ANR	2658425	AssignmentExpression	length -= piece		2658291	0		-=			
ANR	2658426	Identifier	length		2658291	0					
ANR	2658427	Identifier	piece		2658291	1					
ANR	2658428	ExpressionStatement	bytes_read += piece	308:4:7047:7066	2658291	5	True				
ANR	2658429	AssignmentExpression	bytes_read += piece		2658291	0		+=			
ANR	2658430	Identifier	bytes_read		2658291	0					
ANR	2658431	Identifier	piece		2658291	1					
ANR	2658432	ExpressionStatement	c -> last_used = time ++	309:4:7072:7093	2658291	6	True				
ANR	2658433	AssignmentExpression	c -> last_used = time ++		2658291	0		=			
ANR	2658434	PtrMemberAccess	c -> last_used		2658291	0					
ANR	2658435	Identifier	c		2658291	0					
ANR	2658436	Identifier	last_used		2658291	1					
ANR	2658437	PostIncDecOperationExpression	time ++		2658291	1					
ANR	2658438	Identifier	time		2658291	0					
ANR	2658439	IncDec	++		2658291	1					
ANR	2658440	BreakStatement	break ;	310:4:7099:7104	2658291	7	True				
ANR	2658441	ElseStatement	else		2658291	0					
ANR	2658442	CompoundStatement		35:10:809:809	2658291	0					
ANR	2658443	IfStatement	if ( ( c -> begin < hole_top ) && ( c -> begin > offset ) )		2658291	0					
ANR	2658444	Condition	( c -> begin < hole_top ) && ( c -> begin > offset )	312:7:7125:7162	2658291	0	True				
ANR	2658445	AndExpression	( c -> begin < hole_top ) && ( c -> begin > offset )		2658291	0		&&			
ANR	2658446	RelationalExpression	c -> begin < hole_top		2658291	0		<			
ANR	2658447	PtrMemberAccess	c -> begin		2658291	0					
ANR	2658448	Identifier	c		2658291	0					
ANR	2658449	Identifier	begin		2658291	1					
ANR	2658450	Identifier	hole_top		2658291	1					
ANR	2658451	RelationalExpression	c -> begin > offset		2658291	1		>			
ANR	2658452	PtrMemberAccess	c -> begin		2658291	0					
ANR	2658453	Identifier	c		2658291	0					
ANR	2658454	Identifier	begin		2658291	1					
ANR	2658455	Identifier	offset		2658291	1					
ANR	2658456	CompoundStatement		36:47:858:858	2658291	1					
ANR	2658457	ExpressionStatement	hole_top = c -> begin	313:5:7172:7191	2658291	0	True				
ANR	2658458	AssignmentExpression	hole_top = c -> begin		2658291	0		=			
ANR	2658459	Identifier	hole_top		2658291	0					
ANR	2658460	PtrMemberAccess	c -> begin		2658291	1					
ANR	2658461	Identifier	c		2658291	0					
ANR	2658462	Identifier	begin		2658291	1					
ANR	2658463	IfStatement	if ( c )		2658291	2					
ANR	2658464	Condition	c	320:5:7250:7250	2658291	0	True				
ANR	2658465	Identifier	c		2658291	0					
ANR	2658466	ContinueStatement	continue ;	320:8:7253:7261	2658291	1	True				
ANR	2658467	ExpressionStatement	piece = hole_top - offset	327:2:7485:7508	2658291	3	True				
ANR	2658468	AssignmentExpression	piece = hole_top - offset		2658291	0		=			
ANR	2658469	Identifier	piece		2658291	0					
ANR	2658470	AdditiveExpression	hole_top - offset		2658291	1		-			
ANR	2658471	Identifier	hole_top		2658291	0					
ANR	2658472	Identifier	offset		2658291	1					
ANR	2658473	IfStatement	if ( offset < size && offset >= original -> get_size ( ) )		2658291	4					
ANR	2658474	Condition	offset < size && offset >= original -> get_size ( )	329:6:7517:7559	2658291	0	True				
ANR	2658475	AndExpression	offset < size && offset >= original -> get_size ( )		2658291	0		&&			
ANR	2658476	RelationalExpression	offset < size		2658291	0		<			
ANR	2658477	Identifier	offset		2658291	0					
ANR	2658478	Identifier	size		2658291	1					
ANR	2658479	RelationalExpression	offset >= original -> get_size ( )		2658291	1		>=			
ANR	2658480	Identifier	offset		2658291	0					
ANR	2658481	CallExpression	original -> get_size ( )		2658291	1					
ANR	2658482	Callee	original -> get_size		2658291	0					
ANR	2658483	PtrMemberAccess	original -> get_size		2658291	0					
ANR	2658484	Identifier	original		2658291	0					
ANR	2658485	Identifier	get_size		2658291	1					
ANR	2658486	ArgumentList			2658291	1					
ANR	2658487	CompoundStatement		53:52:1256:1256	2658291	1					
ANR	2658488	ExpressionStatement	"memset ( data , 0 , piece )"	330:3:7568:7588	2658291	0	True				
ANR	2658489	CallExpression	"memset ( data , 0 , piece )"		2658291	0					
ANR	2658490	Callee	memset		2658291	0					
ANR	2658491	Identifier	memset		2658291	0					
ANR	2658492	ArgumentList	data		2658291	1					
ANR	2658493	Argument	data		2658291	0					
ANR	2658494	Identifier	data		2658291	0					
ANR	2658495	Argument	0		2658291	1					
ANR	2658496	PrimaryExpression	0		2658291	0					
ANR	2658497	Argument	piece		2658291	2					
ANR	2658498	Identifier	piece		2658291	0					
ANR	2658499	ExpressionStatement	offset += piece	331:3:7593:7608	2658291	1	True				
ANR	2658500	AssignmentExpression	offset += piece		2658291	0		+=			
ANR	2658501	Identifier	offset		2658291	0					
ANR	2658502	Identifier	piece		2658291	1					
ANR	2658503	ExpressionStatement	data += piece	332:3:7613:7626	2658291	2	True				
ANR	2658504	AssignmentExpression	data += piece		2658291	0		+=			
ANR	2658505	Identifier	data		2658291	0					
ANR	2658506	Identifier	piece		2658291	1					
ANR	2658507	ExpressionStatement	length -= piece	333:3:7631:7646	2658291	3	True				
ANR	2658508	AssignmentExpression	length -= piece		2658291	0		-=			
ANR	2658509	Identifier	length		2658291	0					
ANR	2658510	Identifier	piece		2658291	1					
ANR	2658511	ExpressionStatement	bytes_read += piece	334:3:7651:7670	2658291	4	True				
ANR	2658512	AssignmentExpression	bytes_read += piece		2658291	0		+=			
ANR	2658513	Identifier	bytes_read		2658291	0					
ANR	2658514	Identifier	piece		2658291	1					
ANR	2658515	ContinueStatement	continue ;	335:3:7675:7683	2658291	5	True				
ANR	2658516	ExpressionStatement	"c = new CondorChunk ( offset , buffer_block_size , buffer_block_size )"	340:2:7754:7817	2658291	5	True				
ANR	2658517	AssignmentExpression	"c = new CondorChunk ( offset , buffer_block_size , buffer_block_size )"		2658291	0		=			
ANR	2658518	Identifier	c		2658291	0					
ANR	2658519	Expression	"offset , buffer_block_size , buffer_block_size"		2658291	1					
ANR	2658520	Identifier	offset		2658291	0					
ANR	2658521	Expression	"buffer_block_size , buffer_block_size"		2658291	1					
ANR	2658522	Identifier	buffer_block_size		2658291	0					
ANR	2658523	Identifier	buffer_block_size		2658291	1					
ANR	2658524	ExpressionStatement	"piece = original -> read ( offset , c -> data , c -> size )"	341:2:7821:7867	2658291	6	True				
ANR	2658525	AssignmentExpression	"piece = original -> read ( offset , c -> data , c -> size )"		2658291	0		=			
ANR	2658526	Identifier	piece		2658291	0					
ANR	2658527	CallExpression	"original -> read ( offset , c -> data , c -> size )"		2658291	1					
ANR	2658528	Callee	original -> read		2658291	0					
ANR	2658529	PtrMemberAccess	original -> read		2658291	0					
ANR	2658530	Identifier	original		2658291	0					
ANR	2658531	Identifier	read		2658291	1					
ANR	2658532	ArgumentList	offset		2658291	1					
ANR	2658533	Argument	offset		2658291	0					
ANR	2658534	Identifier	offset		2658291	0					
ANR	2658535	Argument	c -> data		2658291	1					
ANR	2658536	PtrMemberAccess	c -> data		2658291	0					
ANR	2658537	Identifier	c		2658291	0					
ANR	2658538	Identifier	data		2658291	1					
ANR	2658539	Argument	c -> size		2658291	2					
ANR	2658540	PtrMemberAccess	c -> size		2658291	0					
ANR	2658541	Identifier	c		2658291	0					
ANR	2658542	Identifier	size		2658291	1					
ANR	2658543	IfStatement	if ( piece < 0 )		2658291	7					
ANR	2658544	Condition	piece < 0	342:5:7874:7880	2658291	0	True				
ANR	2658545	RelationalExpression	piece < 0		2658291	0		<			
ANR	2658546	Identifier	piece		2658291	0					
ANR	2658547	PrimaryExpression	0		2658291	1					
ANR	2658548	CompoundStatement		66:14:1576:1576	2658291	1					
ANR	2658549	Statement	delete	343:3:7888:7893	2658291	0	True				
ANR	2658550	ExpressionStatement	c	343:10:7895:7896	2658291	1	True				
ANR	2658551	Identifier	c		2658291	0					
ANR	2658552	IfStatement	if ( bytes_read == 0 )		2658291	2					
ANR	2658553	Condition	bytes_read == 0	344:6:7904:7916	2658291	0	True				
ANR	2658554	EqualityExpression	bytes_read == 0		2658291	0		==			
ANR	2658555	Identifier	bytes_read		2658291	0					
ANR	2658556	PrimaryExpression	0		2658291	1					
ANR	2658557	ExpressionStatement	bytes_read = - 1	344:21:7919:7932	2658291	1	True				
ANR	2658558	AssignmentExpression	bytes_read = - 1		2658291	0		=			
ANR	2658559	Identifier	bytes_read		2658291	0					
ANR	2658560	UnaryOperationExpression	- 1		2658291	1					
ANR	2658561	UnaryOperator	-		2658291	0					
ANR	2658562	PrimaryExpression	1		2658291	1					
ANR	2658563	BreakStatement	break ;	345:3:7937:7942	2658291	3	True				
ANR	2658564	ElseStatement	else		2658291	0					
ANR	2658565	IfStatement	if ( piece == 0 )		2658291	0					
ANR	2658566	Condition	piece == 0	346:12:7956:7963	2658291	0	True				
ANR	2658567	EqualityExpression	piece == 0		2658291	0		==			
ANR	2658568	Identifier	piece		2658291	0					
ANR	2658569	PrimaryExpression	0		2658291	1					
ANR	2658570	CompoundStatement		70:22:1659:1659	2658291	1					
ANR	2658571	Statement	delete	347:3:7971:7976	2658291	0	True				
ANR	2658572	ExpressionStatement	c	347:10:7978:7979	2658291	1	True				
ANR	2658573	Identifier	c		2658291	0					
ANR	2658574	BreakStatement	break ;	348:3:7984:7989	2658291	2	True				
ANR	2658575	ElseStatement	else		2658291	0					
ANR	2658576	CompoundStatement		73:9:1693:1693	2658291	0					
ANR	2658577	ExpressionStatement	c -> size = piece	350:3:8005:8020	2658291	0	True				
ANR	2658578	AssignmentExpression	c -> size = piece		2658291	0		=			
ANR	2658579	PtrMemberAccess	c -> size		2658291	0					
ANR	2658580	Identifier	c		2658291	0					
ANR	2658581	Identifier	size		2658291	1					
ANR	2658582	Identifier	piece		2658291	1					
ANR	2658583	ExpressionStatement	"head = absorb ( head , c )"	351:3:8025:8049	2658291	1	True				
ANR	2658584	AssignmentExpression	"head = absorb ( head , c )"		2658291	0		=			
ANR	2658585	Identifier	head		2658291	0					
ANR	2658586	CallExpression	"absorb ( head , c )"		2658291	1					
ANR	2658587	Callee	absorb		2658291	0					
ANR	2658588	Identifier	absorb		2658291	0					
ANR	2658589	ArgumentList	head		2658291	1					
ANR	2658590	Argument	head		2658291	0					
ANR	2658591	Identifier	head		2658291	0					
ANR	2658592	Argument	c		2658291	1					
ANR	2658593	Identifier	c		2658291	0					
ANR	2658594	ExpressionStatement	trim ( )	355:1:8060:8066	2658291	6	True				
ANR	2658595	CallExpression	trim ( )		2658291	0					
ANR	2658596	Callee	trim		2658291	0					
ANR	2658597	Identifier	trim		2658291	0					
ANR	2658598	ArgumentList			2658291	1					
ANR	2658599	ReturnStatement	return bytes_read ;	357:1:8070:8087	2658291	7	True				
ANR	2658600	Identifier	bytes_read		2658291	0					
ANR	2658601	ReturnType	int		2658291	1					
ANR	2658602	Identifier	CondorFileBuffer :: read		2658291	2					
ANR	2658603	ParameterList	"off_t offset , char * data , int length"		2658291	3					
ANR	2658604	Parameter	off_t offset	276:27:6268:6279	2658291	0	True				
ANR	2658605	ParameterType	off_t		2658291	0					
ANR	2658606	Identifier	offset		2658291	1					
ANR	2658607	Parameter	char * data	276:41:6282:6291	2658291	1	True				
ANR	2658608	ParameterType	char *		2658291	0					
ANR	2658609	Identifier	data		2658291	1					
ANR	2658610	Parameter	int length	276:53:6294:6303	2658291	2	True				
ANR	2658611	ParameterType	int		2658291	0					
ANR	2658612	Identifier	length		2658291	1					
ANR	2658613	CFGEntryNode	ENTRY		2658291		True				
ANR	2658614	CFGExitNode	EXIT		2658291		True				
ANR	2658615	Symbol	c		2658291						
ANR	2658616	Symbol	hole_top		2658291						
ANR	2658617	Symbol	original		2658291						
ANR	2658618	Symbol	offset		2658291						
ANR	2658619	Symbol	data		2658291						
ANR	2658620	Symbol	buffer_block_size		2658291						
ANR	2658621	Symbol	c -> last_used		2658291						
ANR	2658622	Symbol	length		2658291						
ANR	2658623	Symbol	c -> size		2658291						
ANR	2658624	Symbol	bytes_read		2658291						
ANR	2658625	Symbol	* original		2658291						
ANR	2658626	Symbol	c -> begin		2658291						
ANR	2658627	Symbol	original -> read		2658291						
ANR	2658628	Symbol	absorb		2658291						
ANR	2658629	Symbol	* c		2658291						
ANR	2658630	Symbol	c -> data		2658291						
ANR	2658631	Symbol	head		2658291						
ANR	2658632	Symbol	c -> next		2658291						
ANR	2658633	Symbol	contains		2658291						
ANR	2658634	Symbol	MIN		2658291						
ANR	2658635	Symbol	size		2658291						
ANR	2658636	Symbol	piece		2658291						
ANR	2658637	Symbol	time		2658291						
ANR	2658638	Symbol	original -> get_size		2658291						
ANR	2658639	Function	CondorFileBuffer :: write	366:0:8259:8588							
ANR	2658640	FunctionDef	"CondorFileBuffer :: write (off_t offset , char * data , int length)"		2658639	0					
ANR	2658641	CompoundStatement		367:0:8325:8588	2658639	0					
ANR	2658642	IdentifierDeclStatement	CondorChunk * c = 0 ;	368:1:8328:8344	2658639	0	True				
ANR	2658643	IdentifierDecl	* c = 0		2658639	0					
ANR	2658644	IdentifierDeclType	CondorChunk *		2658639	0					
ANR	2658645	Identifier	c		2658639	1					
ANR	2658646	AssignmentExpression	* c = 0		2658639	2		=			
ANR	2658647	Identifier	c		2658639	0					
ANR	2658648	PrimaryExpression	0		2658639	1					
ANR	2658649	ExpressionStatement	"c = new CondorChunk ( offset , length , buffer_block_size )"	370:1:8348:8400	2658639	1	True				
ANR	2658650	AssignmentExpression	"c = new CondorChunk ( offset , length , buffer_block_size )"		2658639	0		=			
ANR	2658651	Identifier	c		2658639	0					
ANR	2658652	Expression	"offset , length , buffer_block_size"		2658639	1					
ANR	2658653	Identifier	offset		2658639	0					
ANR	2658654	Expression	"length , buffer_block_size"		2658639	1					
ANR	2658655	Identifier	length		2658639	0					
ANR	2658656	Identifier	buffer_block_size		2658639	1					
ANR	2658657	ExpressionStatement	"memcpy ( c -> data , data , length )"	371:1:8403:8430	2658639	2	True				
ANR	2658658	CallExpression	"memcpy ( c -> data , data , length )"		2658639	0					
ANR	2658659	Callee	memcpy		2658639	0					
ANR	2658660	Identifier	memcpy		2658639	0					
ANR	2658661	ArgumentList	c -> data		2658639	1					
ANR	2658662	Argument	c -> data		2658639	0					
ANR	2658663	PtrMemberAccess	c -> data		2658639	0					
ANR	2658664	Identifier	c		2658639	0					
ANR	2658665	Identifier	data		2658639	1					
ANR	2658666	Argument	data		2658639	1					
ANR	2658667	Identifier	data		2658639	0					
ANR	2658668	Argument	length		2658639	2					
ANR	2658669	Identifier	length		2658639	0					
ANR	2658670	ExpressionStatement	c -> dirty = 1	372:1:8433:8445	2658639	3	True				
ANR	2658671	AssignmentExpression	c -> dirty = 1		2658639	0		=			
ANR	2658672	PtrMemberAccess	c -> dirty		2658639	0					
ANR	2658673	Identifier	c		2658639	0					
ANR	2658674	Identifier	dirty		2658639	1					
ANR	2658675	PrimaryExpression	1		2658639	1					
ANR	2658676	ExpressionStatement	c -> last_used = time ++	373:1:8448:8469	2658639	4	True				
ANR	2658677	AssignmentExpression	c -> last_used = time ++		2658639	0		=			
ANR	2658678	PtrMemberAccess	c -> last_used		2658639	0					
ANR	2658679	Identifier	c		2658639	0					
ANR	2658680	Identifier	last_used		2658639	1					
ANR	2658681	PostIncDecOperationExpression	time ++		2658639	1					
ANR	2658682	Identifier	time		2658639	0					
ANR	2658683	IncDec	++		2658639	1					
ANR	2658684	ExpressionStatement	"head = absorb ( head , c )"	375:1:8473:8497	2658639	5	True				
ANR	2658685	AssignmentExpression	"head = absorb ( head , c )"		2658639	0		=			
ANR	2658686	Identifier	head		2658639	0					
ANR	2658687	CallExpression	"absorb ( head , c )"		2658639	1					
ANR	2658688	Callee	absorb		2658639	0					
ANR	2658689	Identifier	absorb		2658639	0					
ANR	2658690	ArgumentList	head		2658639	1					
ANR	2658691	Argument	head		2658639	0					
ANR	2658692	Identifier	head		2658639	0					
ANR	2658693	Argument	c		2658639	1					
ANR	2658694	Identifier	c		2658639	0					
ANR	2658695	ExpressionStatement	trim ( )	377:1:8501:8507	2658639	6	True				
ANR	2658696	CallExpression	trim ( )		2658639	0					
ANR	2658697	Callee	trim		2658639	0					
ANR	2658698	Identifier	trim		2658639	0					
ANR	2658699	ArgumentList			2658639	1					
ANR	2658700	IfStatement	if ( ( offset + length ) > get_size ( ) )		2658639	7					
ANR	2658701	Condition	( offset + length ) > get_size ( )	379:4:8514:8539	2658639	0	True				
ANR	2658702	RelationalExpression	( offset + length ) > get_size ( )		2658639	0		>			
ANR	2658703	AdditiveExpression	offset + length		2658639	0		+			
ANR	2658704	Identifier	offset		2658639	0					
ANR	2658705	Identifier	length		2658639	1					
ANR	2658706	CallExpression	get_size ( )		2658639	1					
ANR	2658707	Callee	get_size		2658639	0					
ANR	2658708	Identifier	get_size		2658639	0					
ANR	2658709	ArgumentList			2658639	1					
ANR	2658710	CompoundStatement		13:32:216:216	2658639	1					
ANR	2658711	ExpressionStatement	size = offset + length	380:2:8546:8566	2658639	0	True				
ANR	2658712	AssignmentExpression	size = offset + length		2658639	0		=			
ANR	2658713	Identifier	size		2658639	0					
ANR	2658714	AdditiveExpression	offset + length		2658639	1		+			
ANR	2658715	Identifier	offset		2658639	0					
ANR	2658716	Identifier	length		2658639	1					
ANR	2658717	ReturnStatement	return length ;	383:1:8573:8586	2658639	8	True				
ANR	2658718	Identifier	length		2658639	0					
ANR	2658719	ReturnType	int		2658639	1					
ANR	2658720	Identifier	CondorFileBuffer :: write		2658639	2					
ANR	2658721	ParameterList	"off_t offset , char * data , int length"		2658639	3					
ANR	2658722	Parameter	off_t offset	366:28:8287:8298	2658639	0	True				
ANR	2658723	ParameterType	off_t		2658639	0					
ANR	2658724	Identifier	offset		2658639	1					
ANR	2658725	Parameter	char * data	366:42:8301:8310	2658639	1	True				
ANR	2658726	ParameterType	char *		2658639	0					
ANR	2658727	Identifier	data		2658639	1					
ANR	2658728	Parameter	int length	366:54:8313:8322	2658639	2	True				
ANR	2658729	ParameterType	int		2658639	0					
ANR	2658730	Identifier	length		2658639	1					
ANR	2658731	CFGEntryNode	ENTRY		2658639		True				
ANR	2658732	CFGExitNode	EXIT		2658639		True				
ANR	2658733	Symbol	c		2658639						
ANR	2658734	Symbol	offset		2658639						
ANR	2658735	Symbol	data		2658639						
ANR	2658736	Symbol	buffer_block_size		2658639						
ANR	2658737	Symbol	c -> last_used		2658639						
ANR	2658738	Symbol	length		2658639						
ANR	2658739	Symbol	absorb		2658639						
ANR	2658740	Symbol	* c		2658639						
ANR	2658741	Symbol	c -> data		2658639						
ANR	2658742	Symbol	head		2658639						
ANR	2658743	Symbol	size		2658639						
ANR	2658744	Symbol	c -> dirty		2658639						
ANR	2658745	Symbol	time		2658639						
ANR	2658746	Symbol	get_size		2658639						
ANR	2658747	Function	CondorFileBuffer :: fcntl	386:0:8591:8675							
ANR	2658748	FunctionDef	"CondorFileBuffer :: fcntl (int cmd , int arg)"		2658747	0					
ANR	2658749	CompoundStatement		387:0:8639:8675	2658747	0					
ANR	2658750	ReturnStatement	"return original -> fcntl ( cmd , arg ) ;"	388:1:8642:8673	2658747	0	True				
ANR	2658751	CallExpression	"original -> fcntl ( cmd , arg )"		2658747	0					
ANR	2658752	Callee	original -> fcntl		2658747	0					
ANR	2658753	PtrMemberAccess	original -> fcntl		2658747	0					
ANR	2658754	Identifier	original		2658747	0					
ANR	2658755	Identifier	fcntl		2658747	1					
ANR	2658756	ArgumentList	cmd		2658747	1					
ANR	2658757	Argument	cmd		2658747	0					
ANR	2658758	Identifier	cmd		2658747	0					
ANR	2658759	Argument	arg		2658747	1					
ANR	2658760	Identifier	arg		2658747	0					
ANR	2658761	ReturnType	int		2658747	1					
ANR	2658762	Identifier	CondorFileBuffer :: fcntl		2658747	2					
ANR	2658763	ParameterList	"int cmd , int arg"		2658747	3					
ANR	2658764	Parameter	int cmd	386:29:8620:8626	2658747	0	True				
ANR	2658765	ParameterType	int		2658747	0					
ANR	2658766	Identifier	cmd		2658747	1					
ANR	2658767	Parameter	int arg	386:38:8629:8635	2658747	1	True				
ANR	2658768	ParameterType	int		2658747	0					
ANR	2658769	Identifier	arg		2658747	1					
ANR	2658770	CFGEntryNode	ENTRY		2658747		True				
ANR	2658771	CFGExitNode	EXIT		2658747		True				
ANR	2658772	Symbol	original -> fcntl		2658747						
ANR	2658773	Symbol	original		2658747						
ANR	2658774	Symbol	arg		2658747						
ANR	2658775	Symbol	cmd		2658747						
ANR	2658776	Symbol	* original		2658747						
ANR	2658777	Function	CondorFileBuffer :: ioctl	391:0:8678:8763							
ANR	2658778	FunctionDef	"CondorFileBuffer :: ioctl (int cmd , long arg)"		2658777	0					
ANR	2658779	CompoundStatement		392:0:8727:8763	2658777	0					
ANR	2658780	ReturnStatement	"return original -> ioctl ( cmd , arg ) ;"	393:1:8730:8761	2658777	0	True				
ANR	2658781	CallExpression	"original -> ioctl ( cmd , arg )"		2658777	0					
ANR	2658782	Callee	original -> ioctl		2658777	0					
ANR	2658783	PtrMemberAccess	original -> ioctl		2658777	0					
ANR	2658784	Identifier	original		2658777	0					
ANR	2658785	Identifier	ioctl		2658777	1					
ANR	2658786	ArgumentList	cmd		2658777	1					
ANR	2658787	Argument	cmd		2658777	0					
ANR	2658788	Identifier	cmd		2658777	0					
ANR	2658789	Argument	arg		2658777	1					
ANR	2658790	Identifier	arg		2658777	0					
ANR	2658791	ReturnType	int		2658777	1					
ANR	2658792	Identifier	CondorFileBuffer :: ioctl		2658777	2					
ANR	2658793	ParameterList	"int cmd , long arg"		2658777	3					
ANR	2658794	Parameter	int cmd	391:29:8707:8713	2658777	0	True				
ANR	2658795	ParameterType	int		2658777	0					
ANR	2658796	Identifier	cmd		2658777	1					
ANR	2658797	Parameter	long arg	391:38:8716:8723	2658777	1	True				
ANR	2658798	ParameterType	long		2658777	0					
ANR	2658799	Identifier	arg		2658777	1					
ANR	2658800	CFGEntryNode	ENTRY		2658777		True				
ANR	2658801	CFGExitNode	EXIT		2658777		True				
ANR	2658802	Symbol	original		2658777						
ANR	2658803	Symbol	arg		2658777						
ANR	2658804	Symbol	cmd		2658777						
ANR	2658805	Symbol	* original		2658777						
ANR	2658806	Symbol	original -> ioctl		2658777						
ANR	2658807	Function	CondorFileBuffer :: ftruncate	396:0:8766:8881							
ANR	2658808	FunctionDef	CondorFileBuffer :: ftruncate (size_t length)		2658807	0					
ANR	2658809	CompoundStatement		397:0:8815:8881	2658807	0					
ANR	2658810	ExpressionStatement	flush ( 1 )	398:1:8818:8826	2658807	0	True				
ANR	2658811	CallExpression	flush ( 1 )		2658807	0					
ANR	2658812	Callee	flush		2658807	0					
ANR	2658813	Identifier	flush		2658807	0					
ANR	2658814	ArgumentList	1		2658807	1					
ANR	2658815	Argument	1		2658807	0					
ANR	2658816	PrimaryExpression	1		2658807	0					
ANR	2658817	ExpressionStatement	size = length	399:1:8829:8842	2658807	1	True				
ANR	2658818	AssignmentExpression	size = length		2658807	0		=			
ANR	2658819	Identifier	size		2658807	0					
ANR	2658820	Identifier	length		2658807	1					
ANR	2658821	ReturnStatement	return original -> ftruncate ( length ) ;	400:1:8845:8879	2658807	2	True				
ANR	2658822	CallExpression	original -> ftruncate ( length )		2658807	0					
ANR	2658823	Callee	original -> ftruncate		2658807	0					
ANR	2658824	PtrMemberAccess	original -> ftruncate		2658807	0					
ANR	2658825	Identifier	original		2658807	0					
ANR	2658826	Identifier	ftruncate		2658807	1					
ANR	2658827	ArgumentList	length		2658807	1					
ANR	2658828	Argument	length		2658807	0					
ANR	2658829	Identifier	length		2658807	0					
ANR	2658830	ReturnType	int		2658807	1					
ANR	2658831	Identifier	CondorFileBuffer :: ftruncate		2658807	2					
ANR	2658832	ParameterList	size_t length		2658807	3					
ANR	2658833	Parameter	size_t length	396:33:8799:8811	2658807	0	True				
ANR	2658834	ParameterType	size_t		2658807	0					
ANR	2658835	Identifier	length		2658807	1					
ANR	2658836	CFGEntryNode	ENTRY		2658807		True				
ANR	2658837	CFGExitNode	EXIT		2658807		True				
ANR	2658838	Symbol	original		2658807						
ANR	2658839	Symbol	size		2658807						
ANR	2658840	Symbol	original -> ftruncate		2658807						
ANR	2658841	Symbol	length		2658807						
ANR	2658842	Symbol	* original		2658807						
ANR	2658843	Function	CondorFileBuffer :: fsync	403:0:8884:8953							
ANR	2658844	FunctionDef	CondorFileBuffer :: fsync ()		2658843	0					
ANR	2658845	CompoundStatement		404:0:8914:8953	2658843	0					
ANR	2658846	ExpressionStatement	flush ( )	405:1:8917:8924	2658843	0	True				
ANR	2658847	CallExpression	flush ( )		2658843	0					
ANR	2658848	Callee	flush		2658843	0					
ANR	2658849	Identifier	flush		2658843	0					
ANR	2658850	ArgumentList			2658843	1					
ANR	2658851	ReturnStatement	return original -> fsync ( ) ;	406:1:8927:8951	2658843	1	True				
ANR	2658852	CallExpression	original -> fsync ( )		2658843	0					
ANR	2658853	Callee	original -> fsync		2658843	0					
ANR	2658854	PtrMemberAccess	original -> fsync		2658843	0					
ANR	2658855	Identifier	original		2658843	0					
ANR	2658856	Identifier	fsync		2658843	1					
ANR	2658857	ArgumentList			2658843	1					
ANR	2658858	ReturnType	int		2658843	1					
ANR	2658859	Identifier	CondorFileBuffer :: fsync		2658843	2					
ANR	2658860	ParameterList			2658843	3					
ANR	2658861	CFGEntryNode	ENTRY		2658843		True				
ANR	2658862	CFGExitNode	EXIT		2658843		True				
ANR	2658863	Symbol	original -> fsync		2658843						
ANR	2658864	Symbol	original		2658843						
ANR	2658865	Symbol	* original		2658843						
ANR	2658866	Function	CondorFileBuffer :: flush	409:0:8956:9010							
ANR	2658867	FunctionDef	CondorFileBuffer :: flush ()		2658866	0					
ANR	2658868	CompoundStatement		410:0:8986:9010	2658866	0					
ANR	2658869	ExpressionStatement	flush ( 0 )	411:1:8989:8997	2658866	0	True				
ANR	2658870	CallExpression	flush ( 0 )		2658866	0					
ANR	2658871	Callee	flush		2658866	0					
ANR	2658872	Identifier	flush		2658866	0					
ANR	2658873	ArgumentList	0		2658866	1					
ANR	2658874	Argument	0		2658866	0					
ANR	2658875	PrimaryExpression	0		2658866	0					
ANR	2658876	ReturnStatement	return 0 ;	412:1:9000:9008	2658866	1	True				
ANR	2658877	PrimaryExpression	0		2658866	0					
ANR	2658878	ReturnType	int		2658866	1					
ANR	2658879	Identifier	CondorFileBuffer :: flush		2658866	2					
ANR	2658880	ParameterList			2658866	3					
ANR	2658881	CFGEntryNode	ENTRY		2658866		True				
ANR	2658882	CFGExitNode	EXIT		2658866		True				
ANR	2658883	Function	CondorFileBuffer :: fstat	415:0:9013:9177							
ANR	2658884	FunctionDef	CondorFileBuffer :: fstat (struct stat * buf)		2658883	0					
ANR	2658885	CompoundStatement		416:0:9059:9177	2658883	0					
ANR	2658886	IdentifierDeclStatement	int ret ;	417:1:9062:9069	2658883	0	True				
ANR	2658887	IdentifierDecl	ret		2658883	0					
ANR	2658888	IdentifierDeclType	int		2658883	0					
ANR	2658889	Identifier	ret		2658883	1					
ANR	2658890	ExpressionStatement	ret = original -> fstat ( buf )	419:1:9073:9099	2658883	1	True				
ANR	2658891	AssignmentExpression	ret = original -> fstat ( buf )		2658883	0		=			
ANR	2658892	Identifier	ret		2658883	0					
ANR	2658893	CallExpression	original -> fstat ( buf )		2658883	1					
ANR	2658894	Callee	original -> fstat		2658883	0					
ANR	2658895	PtrMemberAccess	original -> fstat		2658883	0					
ANR	2658896	Identifier	original		2658883	0					
ANR	2658897	Identifier	fstat		2658883	1					
ANR	2658898	ArgumentList	buf		2658883	1					
ANR	2658899	Argument	buf		2658883	0					
ANR	2658900	Identifier	buf		2658883	0					
ANR	2658901	IfStatement	if ( ret != 0 )		2658883	2					
ANR	2658902	Condition	ret != 0	420:5:9106:9113	2658883	0	True				
ANR	2658903	EqualityExpression	ret != 0		2658883	0		!=			
ANR	2658904	Identifier	ret		2658883	0					
ANR	2658905	PrimaryExpression	0		2658883	1					
ANR	2658906	CompoundStatement		5:15:56:56	2658883	1					
ANR	2658907	ReturnStatement	return ret ;	421:2:9120:9130	2658883	0	True				
ANR	2658908	Identifier	ret		2658883	0					
ANR	2658909	ExpressionStatement	buf -> st_size = get_size ( )	423:1:9136:9161	2658883	3	True				
ANR	2658910	AssignmentExpression	buf -> st_size = get_size ( )		2658883	0		=			
ANR	2658911	PtrMemberAccess	buf -> st_size		2658883	0					
ANR	2658912	Identifier	buf		2658883	0					
ANR	2658913	Identifier	st_size		2658883	1					
ANR	2658914	CallExpression	get_size ( )		2658883	1					
ANR	2658915	Callee	get_size		2658883	0					
ANR	2658916	Identifier	get_size		2658883	0					
ANR	2658917	ArgumentList			2658883	1					
ANR	2658918	ReturnStatement	return ret ;	425:1:9165:9175	2658883	4	True				
ANR	2658919	Identifier	ret		2658883	0					
ANR	2658920	ReturnType	int		2658883	1					
ANR	2658921	Identifier	CondorFileBuffer :: fstat		2658883	2					
ANR	2658922	ParameterList	struct stat * buf		2658883	3					
ANR	2658923	Parameter	struct stat * buf	415:28:9041:9056	2658883	0	True				
ANR	2658924	ParameterType	struct stat *		2658883	0					
ANR	2658925	Identifier	buf		2658883	1					
ANR	2658926	CFGEntryNode	ENTRY		2658883		True				
ANR	2658927	CFGExitNode	EXIT		2658883		True				
ANR	2658928	Symbol	ret		2658883						
ANR	2658929	Symbol	buf		2658883						
ANR	2658930	Symbol	* buf		2658883						
ANR	2658931	Symbol	original		2658883						
ANR	2658932	Symbol	buf -> st_size		2658883						
ANR	2658933	Symbol	original -> fstat		2658883						
ANR	2658934	Symbol	* original		2658883						
ANR	2658935	Symbol	get_size		2658883						
ANR	2658936	Function	CondorFileBuffer :: is_readable	428:0:9180:9251							
ANR	2658937	FunctionDef	CondorFileBuffer :: is_readable ()		2658936	0					
ANR	2658938	CompoundStatement		429:0:9216:9251	2658936	0					
ANR	2658939	ReturnStatement	return original -> is_readable ( ) ;	430:1:9219:9249	2658936	0	True				
ANR	2658940	CallExpression	original -> is_readable ( )		2658936	0					
ANR	2658941	Callee	original -> is_readable		2658936	0					
ANR	2658942	PtrMemberAccess	original -> is_readable		2658936	0					
ANR	2658943	Identifier	original		2658936	0					
ANR	2658944	Identifier	is_readable		2658936	1					
ANR	2658945	ArgumentList			2658936	1					
ANR	2658946	ReturnType	int		2658936	1					
ANR	2658947	Identifier	CondorFileBuffer :: is_readable		2658936	2					
ANR	2658948	ParameterList			2658936	3					
ANR	2658949	CFGEntryNode	ENTRY		2658936		True				
ANR	2658950	CFGExitNode	EXIT		2658936		True				
ANR	2658951	Symbol	original		2658936						
ANR	2658952	Symbol	* original		2658936						
ANR	2658953	Symbol	original -> is_readable		2658936						
ANR	2658954	Function	CondorFileBuffer :: is_writeable	433:0:9254:9327							
ANR	2658955	FunctionDef	CondorFileBuffer :: is_writeable ()		2658954	0					
ANR	2658956	CompoundStatement		434:0:9291:9327	2658954	0					
ANR	2658957	ReturnStatement	return original -> is_writeable ( ) ;	435:1:9294:9325	2658954	0	True				
ANR	2658958	CallExpression	original -> is_writeable ( )		2658954	0					
ANR	2658959	Callee	original -> is_writeable		2658954	0					
ANR	2658960	PtrMemberAccess	original -> is_writeable		2658954	0					
ANR	2658961	Identifier	original		2658954	0					
ANR	2658962	Identifier	is_writeable		2658954	1					
ANR	2658963	ArgumentList			2658954	1					
ANR	2658964	ReturnType	int		2658954	1					
ANR	2658965	Identifier	CondorFileBuffer :: is_writeable		2658954	2					
ANR	2658966	ParameterList			2658954	3					
ANR	2658967	CFGEntryNode	ENTRY		2658954		True				
ANR	2658968	CFGExitNode	EXIT		2658954		True				
ANR	2658969	Symbol	original		2658954						
ANR	2658970	Symbol	original -> is_writeable		2658954						
ANR	2658971	Symbol	* original		2658954						
ANR	2658972	Function	CondorFileBuffer :: is_seekable	438:0:9330:9401							
ANR	2658973	FunctionDef	CondorFileBuffer :: is_seekable ()		2658972	0					
ANR	2658974	CompoundStatement		439:0:9366:9401	2658972	0					
ANR	2658975	ReturnStatement	return original -> is_seekable ( ) ;	440:1:9369:9399	2658972	0	True				
ANR	2658976	CallExpression	original -> is_seekable ( )		2658972	0					
ANR	2658977	Callee	original -> is_seekable		2658972	0					
ANR	2658978	PtrMemberAccess	original -> is_seekable		2658972	0					
ANR	2658979	Identifier	original		2658972	0					
ANR	2658980	Identifier	is_seekable		2658972	1					
ANR	2658981	ArgumentList			2658972	1					
ANR	2658982	ReturnType	int		2658972	1					
ANR	2658983	Identifier	CondorFileBuffer :: is_seekable		2658972	2					
ANR	2658984	ParameterList			2658972	3					
ANR	2658985	CFGEntryNode	ENTRY		2658972		True				
ANR	2658986	CFGExitNode	EXIT		2658972		True				
ANR	2658987	Symbol	original		2658972						
ANR	2658988	Symbol	original -> is_seekable		2658972						
ANR	2658989	Symbol	* original		2658972						
ANR	2658990	Function	CondorFileBuffer :: get_size	443:0:9404:9455							
ANR	2658991	FunctionDef	CondorFileBuffer :: get_size ()		2658990	0					
ANR	2658992	CompoundStatement		444:0:9439:9455	2658990	0					
ANR	2658993	ReturnStatement	return size ;	445:1:9442:9453	2658990	0	True				
ANR	2658994	Identifier	size		2658990	0					
ANR	2658995	ReturnType	off_t		2658990	1					
ANR	2658996	Identifier	CondorFileBuffer :: get_size		2658990	2					
ANR	2658997	ParameterList			2658990	3					
ANR	2658998	CFGEntryNode	ENTRY		2658990		True				
ANR	2658999	CFGExitNode	EXIT		2658990		True				
ANR	2659000	Symbol	size		2658990						
ANR	2659001	Function	CondorFileBuffer :: get_url	448:0:9458:9525							
ANR	2659002	FunctionDef	CondorFileBuffer :: get_url ()		2659001	0					
ANR	2659003	CompoundStatement		449:0:9499:9525	2659001	0					
ANR	2659004	ReturnStatement	"return url ? url : """" ;"	450:1:9502:9523	2659001	0	True				
ANR	2659005	ConditionalExpression	"url ? url : """""		2659001	0					
ANR	2659006	Condition	url		2659001	0					
ANR	2659007	Identifier	url		2659001	0					
ANR	2659008	Identifier	url		2659001	1					
ANR	2659009	PrimaryExpression	""""""		2659001	2					
ANR	2659010	ReturnType	char const *		2659001	1					
ANR	2659011	Identifier	CondorFileBuffer :: get_url		2659001	2					
ANR	2659012	ParameterList			2659001	3					
ANR	2659013	CFGEntryNode	ENTRY		2659001		True				
ANR	2659014	CFGExitNode	EXIT		2659001		True				
ANR	2659015	Symbol	url		2659001						
ANR	2659016	Function	CondorFileBuffer :: get_unmapped_fd	453:0:9528:9607							
ANR	2659017	FunctionDef	CondorFileBuffer :: get_unmapped_fd ()		2659016	0					
ANR	2659018	CompoundStatement		454:0:9568:9607	2659016	0					
ANR	2659019	ReturnStatement	return original -> get_unmapped_fd ( ) ;	455:1:9571:9605	2659016	0	True				
ANR	2659020	CallExpression	original -> get_unmapped_fd ( )		2659016	0					
ANR	2659021	Callee	original -> get_unmapped_fd		2659016	0					
ANR	2659022	PtrMemberAccess	original -> get_unmapped_fd		2659016	0					
ANR	2659023	Identifier	original		2659016	0					
ANR	2659024	Identifier	get_unmapped_fd		2659016	1					
ANR	2659025	ArgumentList			2659016	1					
ANR	2659026	ReturnType	int		2659016	1					
ANR	2659027	Identifier	CondorFileBuffer :: get_unmapped_fd		2659016	2					
ANR	2659028	ParameterList			2659016	3					
ANR	2659029	CFGEntryNode	ENTRY		2659016		True				
ANR	2659030	CFGExitNode	EXIT		2659016		True				
ANR	2659031	Symbol	original -> get_unmapped_fd		2659016						
ANR	2659032	Symbol	original		2659016						
ANR	2659033	Symbol	* original		2659016						
ANR	2659034	Function	CondorFileBuffer :: is_file_local	458:0:9610:9685							
ANR	2659035	FunctionDef	CondorFileBuffer :: is_file_local ()		2659034	0					
ANR	2659036	CompoundStatement		459:0:9648:9685	2659034	0					
ANR	2659037	ReturnStatement	return original -> is_file_local ( ) ;	460:1:9651:9683	2659034	0	True				
ANR	2659038	CallExpression	original -> is_file_local ( )		2659034	0					
ANR	2659039	Callee	original -> is_file_local		2659034	0					
ANR	2659040	PtrMemberAccess	original -> is_file_local		2659034	0					
ANR	2659041	Identifier	original		2659034	0					
ANR	2659042	Identifier	is_file_local		2659034	1					
ANR	2659043	ArgumentList			2659034	1					
ANR	2659044	ReturnType	int		2659034	1					
ANR	2659045	Identifier	CondorFileBuffer :: is_file_local		2659034	2					
ANR	2659046	ParameterList			2659034	3					
ANR	2659047	CFGEntryNode	ENTRY		2659034		True				
ANR	2659048	CFGExitNode	EXIT		2659034		True				
ANR	2659049	Symbol	original		2659034						
ANR	2659050	Symbol	original -> is_file_local		2659034						
ANR	2659051	Symbol	* original		2659034						
ANR	2659052	Function	CondorFileBuffer :: trim	468:0:9817:10154							
ANR	2659053	FunctionDef	CondorFileBuffer :: trim ()		2659052	0					
ANR	2659054	CompoundStatement		469:0:9847:10154	2659052	0					
ANR	2659055	IdentifierDeclStatement	"CondorChunk * best_chunk , * i ;"	470:1:9850:9876	2659052	0	True				
ANR	2659056	IdentifierDecl	* best_chunk		2659052	0					
ANR	2659057	IdentifierDeclType	CondorChunk *		2659052	0					
ANR	2659058	Identifier	best_chunk		2659052	1					
ANR	2659059	IdentifierDecl	* i		2659052	1					
ANR	2659060	IdentifierDeclType	CondorChunk *		2659052	0					
ANR	2659061	Identifier	i		2659052	1					
ANR	2659062	IdentifierDeclStatement	off_t space_used ;	471:1:9879:9895	2659052	1	True				
ANR	2659063	IdentifierDecl	space_used		2659052	0					
ANR	2659064	IdentifierDeclType	off_t		2659052	0					
ANR	2659065	Identifier	space_used		2659052	1					
ANR	2659066	WhileStatement	while ( 1 )		2659052	2					
ANR	2659067	Condition	1	473:7:9905:9905	2659052	0	True				
ANR	2659068	PrimaryExpression	1		2659052	0					
ANR	2659069	CompoundStatement		5:10:60:60	2659052	1					
ANR	2659070	ExpressionStatement	space_used = 0	474:2:9912:9926	2659052	0	True				
ANR	2659071	AssignmentExpression	space_used = 0		2659052	0		=			
ANR	2659072	Identifier	space_used		2659052	0					
ANR	2659073	PrimaryExpression	0		2659052	1					
ANR	2659074	ExpressionStatement	best_chunk = head	475:2:9930:9947	2659052	1	True				
ANR	2659075	AssignmentExpression	best_chunk = head		2659052	0		=			
ANR	2659076	Identifier	best_chunk		2659052	0					
ANR	2659077	Identifier	head		2659052	1					
ANR	2659078	ForStatement	for ( i = head ; i ; i = i -> next )		2659052	2					
ANR	2659079	ForInit	i = head ;	477:7:9957:9963	2659052	0	True				
ANR	2659080	AssignmentExpression	i = head		2659052	0		=			
ANR	2659081	Identifier	i		2659052	0					
ANR	2659082	Identifier	head		2659052	1					
ANR	2659083	Condition	i	477:15:9965:9965	2659052	1	True				
ANR	2659084	Identifier	i		2659052	0					
ANR	2659085	AssignmentExpression	i = i -> next	477:18:9968:9976	2659052	2	True	=			
ANR	2659086	Identifier	i		2659052	0					
ANR	2659087	PtrMemberAccess	i -> next		2659052	1					
ANR	2659088	Identifier	i		2659052	0					
ANR	2659089	Identifier	next		2659052	1					
ANR	2659090	CompoundStatement		9:30:132:132	2659052	3					
ANR	2659091	IfStatement	if ( i -> last_used < best_chunk -> last_used )		2659052	0					
ANR	2659092	Condition	i -> last_used < best_chunk -> last_used	478:7:9989:10024	2659052	0	True				
ANR	2659093	RelationalExpression	i -> last_used < best_chunk -> last_used		2659052	0		<			
ANR	2659094	PtrMemberAccess	i -> last_used		2659052	0					
ANR	2659095	Identifier	i		2659052	0					
ANR	2659096	Identifier	last_used		2659052	1					
ANR	2659097	PtrMemberAccess	best_chunk -> last_used		2659052	1					
ANR	2659098	Identifier	best_chunk		2659052	0					
ANR	2659099	Identifier	last_used		2659052	1					
ANR	2659100	CompoundStatement		10:46:180:180	2659052	1					
ANR	2659101	ExpressionStatement	best_chunk = i	479:4:10034:10048	2659052	0	True				
ANR	2659102	AssignmentExpression	best_chunk = i		2659052	0		=			
ANR	2659103	Identifier	best_chunk		2659052	0					
ANR	2659104	Identifier	i		2659052	1					
ANR	2659105	ExpressionStatement	space_used += i -> size	481:3:10058:10079	2659052	1	True				
ANR	2659106	AssignmentExpression	space_used += i -> size		2659052	0		+=			
ANR	2659107	Identifier	space_used		2659052	0					
ANR	2659108	PtrMemberAccess	i -> size		2659052	1					
ANR	2659109	Identifier	i		2659052	0					
ANR	2659110	Identifier	size		2659052	1					
ANR	2659111	IfStatement	if ( space_used <= buffer_size )		2659052	3					
ANR	2659112	Condition	space_used <= buffer_size	484:6:10092:10116	2659052	0	True				
ANR	2659113	RelationalExpression	space_used <= buffer_size		2659052	0		<=			
ANR	2659114	Identifier	space_used		2659052	0					
ANR	2659115	Identifier	buffer_size		2659052	1					
ANR	2659116	ReturnStatement	return ;	484:33:10119:10125	2659052	1	True				
ANR	2659117	ExpressionStatement	evict ( best_chunk )	486:2:10130:10149	2659052	4	True				
ANR	2659118	CallExpression	evict ( best_chunk )		2659052	0					
ANR	2659119	Callee	evict		2659052	0					
ANR	2659120	Identifier	evict		2659052	0					
ANR	2659121	ArgumentList	best_chunk		2659052	1					
ANR	2659122	Argument	best_chunk		2659052	0					
ANR	2659123	Identifier	best_chunk		2659052	0					
ANR	2659124	ReturnType	void		2659052	1					
ANR	2659125	Identifier	CondorFileBuffer :: trim		2659052	2					
ANR	2659126	ParameterList			2659052	3					
ANR	2659127	CFGEntryNode	ENTRY		2659052		True				
ANR	2659128	CFGExitNode	EXIT		2659052		True				
ANR	2659129	Symbol	head		2659052						
ANR	2659130	Symbol	best_chunk -> last_used		2659052						
ANR	2659131	Symbol	space_used		2659052						
ANR	2659132	Symbol	* i		2659052						
ANR	2659133	Symbol	best_chunk		2659052						
ANR	2659134	Symbol	buffer_size		2659052						
ANR	2659135	Symbol	i		2659052						
ANR	2659136	Symbol	i -> next		2659052						
ANR	2659137	Symbol	i -> last_used		2659052						
ANR	2659138	Symbol	* best_chunk		2659052						
ANR	2659139	Symbol	i -> size		2659052						
ANR	2659140	Function	CondorFileBuffer :: flush	490:0:10157:10369							
ANR	2659141	FunctionDef	CondorFileBuffer :: flush (int deallocate)		2659140	0					
ANR	2659142	CompoundStatement		491:0:10204:10369	2659140	0					
ANR	2659143	IdentifierDeclStatement	"CondorChunk * c , * n ;"	492:1:10207:10224	2659140	0	True				
ANR	2659144	IdentifierDecl	* c		2659140	0					
ANR	2659145	IdentifierDeclType	CondorChunk *		2659140	0					
ANR	2659146	Identifier	c		2659140	1					
ANR	2659147	IdentifierDecl	* n		2659140	1					
ANR	2659148	IdentifierDeclType	CondorChunk *		2659140	0					
ANR	2659149	Identifier	n		2659140	1					
ANR	2659150	ExpressionStatement	c = head	494:1:10228:10234	2659140	1	True				
ANR	2659151	AssignmentExpression	c = head		2659140	0		=			
ANR	2659152	Identifier	c		2659140	0					
ANR	2659153	Identifier	head		2659140	1					
ANR	2659154	WhileStatement	while ( c )		2659140	2					
ANR	2659155	Condition	c	495:7:10243:10243	2659140	0	True				
ANR	2659156	Identifier	c		2659140	0					
ANR	2659157	CompoundStatement		5:10:41:41	2659140	1					
ANR	2659158	ExpressionStatement	clean ( c )	496:2:10250:10258	2659140	0	True				
ANR	2659159	CallExpression	clean ( c )		2659140	0					
ANR	2659160	Callee	clean		2659140	0					
ANR	2659161	Identifier	clean		2659140	0					
ANR	2659162	ArgumentList	c		2659140	1					
ANR	2659163	Argument	c		2659140	0					
ANR	2659164	Identifier	c		2659140	0					
ANR	2659165	ExpressionStatement	n = c -> next	497:2:10262:10273	2659140	1	True				
ANR	2659166	AssignmentExpression	n = c -> next		2659140	0		=			
ANR	2659167	Identifier	n		2659140	0					
ANR	2659168	PtrMemberAccess	c -> next		2659140	1					
ANR	2659169	Identifier	c		2659140	0					
ANR	2659170	Identifier	next		2659140	1					
ANR	2659171	IfStatement	if ( deallocate )		2659140	2					
ANR	2659172	Condition	deallocate	498:5:10280:10289	2659140	0	True				
ANR	2659173	Identifier	deallocate		2659140	0					
ANR	2659174	CompoundStatement		8:17:87:87	2659140	1					
ANR	2659175	Statement	delete	499:3:10297:10302	2659140	0	True				
ANR	2659176	ExpressionStatement	c	499:10:10304:10305	2659140	1	True				
ANR	2659177	Identifier	c		2659140	0					
ANR	2659178	ExpressionStatement	c = n	501:2:10313:10318	2659140	3	True				
ANR	2659179	AssignmentExpression	c = n		2659140	0		=			
ANR	2659180	Identifier	c		2659140	0					
ANR	2659181	Identifier	n		2659140	1					
ANR	2659182	IfStatement	if ( deallocate )		2659140	3					
ANR	2659183	Condition	deallocate	504:4:10328:10337	2659140	0	True				
ANR	2659184	Identifier	deallocate		2659140	0					
ANR	2659185	ExpressionStatement	head = 0	504:16:10340:10346	2659140	1	True				
ANR	2659186	AssignmentExpression	head = 0		2659140	0		=			
ANR	2659187	Identifier	head		2659140	0					
ANR	2659188	PrimaryExpression	0		2659140	1					
ANR	2659189	ExpressionStatement	original -> flush ( )	506:1:10350:10367	2659140	4	True				
ANR	2659190	CallExpression	original -> flush ( )		2659140	0					
ANR	2659191	Callee	original -> flush		2659140	0					
ANR	2659192	PtrMemberAccess	original -> flush		2659140	0					
ANR	2659193	Identifier	original		2659140	0					
ANR	2659194	Identifier	flush		2659140	1					
ANR	2659195	ArgumentList			2659140	1					
ANR	2659196	ReturnType	void		2659140	1					
ANR	2659197	Identifier	CondorFileBuffer :: flush		2659140	2					
ANR	2659198	ParameterList	int deallocate		2659140	3					
ANR	2659199	Parameter	int deallocate	490:30:10187:10200	2659140	0	True				
ANR	2659200	ParameterType	int		2659140	0					
ANR	2659201	Identifier	deallocate		2659140	1					
ANR	2659202	CFGEntryNode	ENTRY		2659140		True				
ANR	2659203	CFGExitNode	EXIT		2659140		True				
ANR	2659204	Symbol	head		2659140						
ANR	2659205	Symbol	c -> next		2659140						
ANR	2659206	Symbol	c		2659140						
ANR	2659207	Symbol	original		2659140						
ANR	2659208	Symbol	deallocate		2659140						
ANR	2659209	Symbol	* c		2659140						
ANR	2659210	Symbol	n		2659140						
ANR	2659211	Function	CondorFileBuffer :: clean	513:0:10423:10706							
ANR	2659212	FunctionDef	CondorFileBuffer :: clean (CondorChunk * c)		2659211	0					
ANR	2659213	CompoundStatement		514:0:10470:10706	2659211	0					
ANR	2659214	IdentifierDeclStatement	off_t result ;	515:1:10473:10485	2659211	0	True				
ANR	2659215	IdentifierDecl	result		2659211	0					
ANR	2659216	IdentifierDeclType	off_t		2659211	0					
ANR	2659217	Identifier	result		2659211	1					
ANR	2659218	IfStatement	if ( c && c -> dirty )		2659211	1					
ANR	2659219	Condition	c && c -> dirty	517:4:10492:10504	2659211	0	True				
ANR	2659220	AndExpression	c && c -> dirty		2659211	0		&&			
ANR	2659221	Identifier	c		2659211	0					
ANR	2659222	PtrMemberAccess	c -> dirty		2659211	1					
ANR	2659223	Identifier	c		2659211	0					
ANR	2659224	Identifier	dirty		2659211	1					
ANR	2659225	CompoundStatement		4:19:36:36	2659211	1					
ANR	2659226	ExpressionStatement	"result = original -> write ( c -> begin , c -> data , c -> size )"	518:2:10511:10561	2659211	0	True				
ANR	2659227	AssignmentExpression	"result = original -> write ( c -> begin , c -> data , c -> size )"		2659211	0		=			
ANR	2659228	Identifier	result		2659211	0					
ANR	2659229	CallExpression	"original -> write ( c -> begin , c -> data , c -> size )"		2659211	1					
ANR	2659230	Callee	original -> write		2659211	0					
ANR	2659231	PtrMemberAccess	original -> write		2659211	0					
ANR	2659232	Identifier	original		2659211	0					
ANR	2659233	Identifier	write		2659211	1					
ANR	2659234	ArgumentList	c -> begin		2659211	1					
ANR	2659235	Argument	c -> begin		2659211	0					
ANR	2659236	PtrMemberAccess	c -> begin		2659211	0					
ANR	2659237	Identifier	c		2659211	0					
ANR	2659238	Identifier	begin		2659211	1					
ANR	2659239	Argument	c -> data		2659211	1					
ANR	2659240	PtrMemberAccess	c -> data		2659211	0					
ANR	2659241	Identifier	c		2659211	0					
ANR	2659242	Identifier	data		2659211	1					
ANR	2659243	Argument	c -> size		2659211	2					
ANR	2659244	PtrMemberAccess	c -> size		2659211	0					
ANR	2659245	Identifier	c		2659211	0					
ANR	2659246	Identifier	size		2659211	1					
ANR	2659247	IfStatement	if ( result != c -> size )		2659211	1					
ANR	2659248	Condition	result != c -> size	519:5:10568:10582	2659211	0	True				
ANR	2659249	EqualityExpression	result != c -> size		2659211	0		!=			
ANR	2659250	Identifier	result		2659211	0					
ANR	2659251	PtrMemberAccess	c -> size		2659211	1					
ANR	2659252	Identifier	c		2659211	0					
ANR	2659253	Identifier	size		2659211	1					
ANR	2659254	ExpressionStatement	"_condor_error_retry ( ""Unable to write buffered data to %s! (%s)"" , original -> get_url ( ) , strerror ( errno ) )"	519:22:10585:10685	2659211	1	True				
ANR	2659255	CallExpression	"_condor_error_retry ( ""Unable to write buffered data to %s! (%s)"" , original -> get_url ( ) , strerror ( errno ) )"		2659211	0					
ANR	2659256	Callee	_condor_error_retry		2659211	0					
ANR	2659257	Identifier	_condor_error_retry		2659211	0					
ANR	2659258	ArgumentList	"""Unable to write buffered data to %s! (%s)"""		2659211	1					
ANR	2659259	Argument	"""Unable to write buffered data to %s! (%s)"""		2659211	0					
ANR	2659260	PrimaryExpression	"""Unable to write buffered data to %s! (%s)"""		2659211	0					
ANR	2659261	Argument	original -> get_url ( )		2659211	1					
ANR	2659262	CallExpression	original -> get_url ( )		2659211	0					
ANR	2659263	Callee	original -> get_url		2659211	0					
ANR	2659264	PtrMemberAccess	original -> get_url		2659211	0					
ANR	2659265	Identifier	original		2659211	0					
ANR	2659266	Identifier	get_url		2659211	1					
ANR	2659267	ArgumentList			2659211	1					
ANR	2659268	Argument	strerror ( errno )		2659211	2					
ANR	2659269	CallExpression	strerror ( errno )		2659211	0					
ANR	2659270	Callee	strerror		2659211	0					
ANR	2659271	Identifier	strerror		2659211	0					
ANR	2659272	ArgumentList	errno		2659211	1					
ANR	2659273	Argument	errno		2659211	0					
ANR	2659274	Identifier	errno		2659211	0					
ANR	2659275	ExpressionStatement	c -> dirty = 0	520:2:10689:10701	2659211	2	True				
ANR	2659276	AssignmentExpression	c -> dirty = 0		2659211	0		=			
ANR	2659277	PtrMemberAccess	c -> dirty		2659211	0					
ANR	2659278	Identifier	c		2659211	0					
ANR	2659279	Identifier	dirty		2659211	1					
ANR	2659280	PrimaryExpression	0		2659211	1					
ANR	2659281	ReturnType	void		2659211	1					
ANR	2659282	Identifier	CondorFileBuffer :: clean		2659211	2					
ANR	2659283	ParameterList	CondorChunk * c		2659211	3					
ANR	2659284	Parameter	CondorChunk * c	513:30:10453:10466	2659211	0	True				
ANR	2659285	ParameterType	CondorChunk *		2659211	0					
ANR	2659286	Identifier	c		2659211	1					
ANR	2659287	CFGEntryNode	ENTRY		2659211		True				
ANR	2659288	CFGExitNode	EXIT		2659211		True				
ANR	2659289	Symbol	errno		2659211						
ANR	2659290	Symbol	c		2659211						
ANR	2659291	Symbol	original		2659211						
ANR	2659292	Symbol	c -> size		2659211						
ANR	2659293	Symbol	* original		2659211						
ANR	2659294	Symbol	c -> begin		2659211						
ANR	2659295	Symbol	* c		2659211						
ANR	2659296	Symbol	c -> data		2659211						
ANR	2659297	Symbol	result		2659211						
ANR	2659298	Symbol	original -> write		2659211						
ANR	2659299	Symbol	strerror		2659211						
ANR	2659300	Symbol	c -> dirty		2659211						
ANR	2659301	Symbol	original -> get_url		2659211						
ANR	2659302	Function	CondorFileBuffer :: evict	528:0:10767:11017							
ANR	2659303	FunctionDef	CondorFileBuffer :: evict (CondorChunk * c)		2659302	0					
ANR	2659304	CompoundStatement		529:0:10814:11017	2659302	0					
ANR	2659305	IdentifierDeclStatement	CondorChunk * i ;	530:1:10817:10831	2659302	0	True				
ANR	2659306	IdentifierDecl	* i		2659302	0					
ANR	2659307	IdentifierDeclType	CondorChunk *		2659302	0					
ANR	2659308	Identifier	i		2659302	1					
ANR	2659309	ExpressionStatement	clean ( c )	532:1:10835:10843	2659302	1	True				
ANR	2659310	CallExpression	clean ( c )		2659302	0					
ANR	2659311	Callee	clean		2659302	0					
ANR	2659312	Identifier	clean		2659302	0					
ANR	2659313	ArgumentList	c		2659302	1					
ANR	2659314	Argument	c		2659302	0					
ANR	2659315	Identifier	c		2659302	0					
ANR	2659316	IfStatement	if ( c == head )		2659302	2					
ANR	2659317	Condition	c == head	534:5:10851:10857	2659302	0	True				
ANR	2659318	EqualityExpression	c == head		2659302	0		==			
ANR	2659319	Identifier	c		2659302	0					
ANR	2659320	Identifier	head		2659302	1					
ANR	2659321	CompoundStatement		6:15:46:46	2659302	1					
ANR	2659322	ExpressionStatement	head = c -> next	535:2:10865:10879	2659302	0	True				
ANR	2659323	AssignmentExpression	head = c -> next		2659302	0		=			
ANR	2659324	Identifier	head		2659302	0					
ANR	2659325	PtrMemberAccess	c -> next		2659302	1					
ANR	2659326	Identifier	c		2659302	0					
ANR	2659327	Identifier	next		2659302	1					
ANR	2659328	Statement	delete	536:2:10883:10888	2659302	1	True				
ANR	2659329	ExpressionStatement	c	536:9:10890:10891	2659302	2	True				
ANR	2659330	Identifier	c		2659302	0					
ANR	2659331	ElseStatement	else		2659302	0					
ANR	2659332	CompoundStatement		9:8:86:86	2659302	0					
ANR	2659333	ForStatement	for ( i = head ; i ; i = i -> next )		2659302	0					
ANR	2659334	ForInit	i = head ;	538:7:10910:10916	2659302	0	True				
ANR	2659335	AssignmentExpression	i = head		2659302	0		=			
ANR	2659336	Identifier	i		2659302	0					
ANR	2659337	Identifier	head		2659302	1					
ANR	2659338	Condition	i	538:15:10918:10918	2659302	1	True				
ANR	2659339	Identifier	i		2659302	0					
ANR	2659340	AssignmentExpression	i = i -> next	538:18:10921:10929	2659302	2	True	=			
ANR	2659341	Identifier	i		2659302	0					
ANR	2659342	PtrMemberAccess	i -> next		2659302	1					
ANR	2659343	Identifier	i		2659302	0					
ANR	2659344	Identifier	next		2659302	1					
ANR	2659345	CompoundStatement		10:30:118:118	2659302	3					
ANR	2659346	IfStatement	if ( i -> next == c )		2659302	0					
ANR	2659347	Condition	i -> next == c	539:7:10942:10951	2659302	0	True				
ANR	2659348	EqualityExpression	i -> next == c		2659302	0		==			
ANR	2659349	PtrMemberAccess	i -> next		2659302	0					
ANR	2659350	Identifier	i		2659302	0					
ANR	2659351	Identifier	next		2659302	1					
ANR	2659352	Identifier	c		2659302	1					
ANR	2659353	CompoundStatement		11:20:140:140	2659302	1					
ANR	2659354	ExpressionStatement	i -> next = c -> next	540:4:10961:10978	2659302	0	True				
ANR	2659355	AssignmentExpression	i -> next = c -> next		2659302	0		=			
ANR	2659356	PtrMemberAccess	i -> next		2659302	0					
ANR	2659357	Identifier	i		2659302	0					
ANR	2659358	Identifier	next		2659302	1					
ANR	2659359	PtrMemberAccess	c -> next		2659302	1					
ANR	2659360	Identifier	c		2659302	0					
ANR	2659361	Identifier	next		2659302	1					
ANR	2659362	Statement	delete	541:4:10984:10989	2659302	1	True				
ANR	2659363	ExpressionStatement	c	541:11:10991:10992	2659302	2	True				
ANR	2659364	Identifier	c		2659302	0					
ANR	2659365	BreakStatement	break ;	542:4:10998:11003	2659302	3	True				
ANR	2659366	ReturnType	void		2659302	1					
ANR	2659367	Identifier	CondorFileBuffer :: evict		2659302	2					
ANR	2659368	ParameterList	CondorChunk * c		2659302	3					
ANR	2659369	Parameter	CondorChunk * c	528:30:10797:10810	2659302	0	True				
ANR	2659370	ParameterType	CondorChunk *		2659302	0					
ANR	2659371	Identifier	c		2659302	1					
ANR	2659372	CFGEntryNode	ENTRY		2659302		True				
ANR	2659373	CFGExitNode	EXIT		2659302		True				
ANR	2659374	Symbol	head		2659302						
ANR	2659375	Symbol	c -> next		2659302						
ANR	2659376	Symbol	c		2659302						
ANR	2659377	Symbol	* i		2659302						
ANR	2659378	Symbol	i		2659302						
ANR	2659379	Symbol	i -> next		2659302						
ANR	2659380	Symbol	* c		2659302						
