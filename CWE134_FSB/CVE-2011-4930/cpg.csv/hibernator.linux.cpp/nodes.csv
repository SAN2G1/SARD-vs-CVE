command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1617784	File	data/converged/CVE-2011-4930_htcondor/hibernator.linux.cpp								
ANR	1617785	DeclStmt									
ANR	1617786	Decl							const char	const char *	SYS_POWER_FILE
ANR	1617787	DeclStmt									
ANR	1617788	Decl							const char	const char *	SYS_DISK_FILE
ANR	1617789	DeclStmt									
ANR	1617790	Decl							const char	const char *	PROC_POWER_FILE
ANR	1617791	DeclStmt									
ANR	1617792	Decl							const char	const char *	POWER_OFF
ANR	1617793	DeclStmt									
ANR	1617794	Decl							const char	const char *	PM_UTIL_CHECK
ANR	1617795	DeclStmt									
ANR	1617796	Decl							const char	const char *	PM_UTIL_SUSPEND
ANR	1617797	DeclStmt									
ANR	1617798	Decl							const char	const char *	PM_UTIL_HIBERNATE
ANR	1617799	ClassDef	BaseLinuxHibernator	46:0:1642:2835							
ANR	1617800	Function	BaseLinuxHibernator	49:1:1679:1784							
ANR	1617801	FunctionDef	BaseLinuxHibernator (LinuxHibernator & hibernator)		1617800	0					
ANR	1617802	CompoundStatement		49:51:1729:1784	1617800	0					
ANR	1617803	ExpressionStatement	m_detected = false	50:2:1733:1751	1617800	0	True				
ANR	1617804	AssignmentExpression	m_detected = false		1617800	0		=			
ANR	1617805	Identifier	m_detected		1617800	0					
ANR	1617806	Identifier	false		1617800	1					
ANR	1617807	ExpressionStatement	m_hibernator = & hibernator	51:2:1755:1781	1617800	1	True				
ANR	1617808	AssignmentExpression	m_hibernator = & hibernator		1617800	0		=			
ANR	1617809	Identifier	m_hibernator		1617800	0					
ANR	1617810	UnaryOperationExpression	& hibernator		1617800	1					
ANR	1617811	UnaryOperator	&		1617800	0					
ANR	1617812	Identifier	hibernator		1617800	1					
ANR	1617813	Identifier	BaseLinuxHibernator		1617800	1					
ANR	1617814	ParameterList	LinuxHibernator & hibernator		1617800	2					
ANR	1617815	Parameter	LinuxHibernator & hibernator	49:22:1700:1726	1617800	0	True				
ANR	1617816	ParameterType	LinuxHibernator &		1617800	0					
ANR	1617817	Identifier	hibernator		1617800	1					
ANR	1617818	CFGEntryNode	ENTRY		1617800		True				
ANR	1617819	CFGExitNode	EXIT		1617800		True				
ANR	1617820	Symbol	m_detected		1617800						
ANR	1617821	Symbol	hibernator		1617800						
ANR	1617822	Symbol	false		1617800						
ANR	1617823	Symbol	& hibernator		1617800						
ANR	1617824	Symbol	m_hibernator		1617800						
ANR	1617825	Function	~BaseLinuxHibernator	53:9:1796:1825							
ANR	1617826	FunctionDef	~BaseLinuxHibernator ()		1617825	1					
ANR	1617827	CompoundStatement		53:36:1823:1825	1617825	0					
ANR	1617828	Identifier	~BaseLinuxHibernator		1617825	1					
ANR	1617829	ParameterList			1617825	2					
ANR	1617830	CFGEntryNode	ENTRY		1617825		True				
ANR	1617831	CFGExitNode	EXIT		1617825		True				
ANR	1617832	Function	nameMatch	59:1:1910:2032							
ANR	1617833	FunctionDef	nameMatch (const char * name)		1617832	2					
ANR	1617834	CompoundStatement		59:42:1951:2032	1617832	0					
ANR	1617835	IfStatement	if ( NULL == name )		1617832	0					
ANR	1617836	Condition	NULL == name	60:6:1959:1970	1617832	0	True				
ANR	1617837	EqualityExpression	NULL == name		1617832	0		==			
ANR	1617838	Identifier	NULL		1617832	0					
ANR	1617839	Identifier	name		1617832	1					
ANR	1617840	ReturnStatement	return true ;	60:20:1973:1984	1617832	1	True				
ANR	1617841	Identifier	true		1617832	0					
ANR	1617842	ReturnStatement	"return strcasecmp ( name , getName ( ) ) == 0 ;"	61:2:1988:2029	1617832	1	True				
ANR	1617843	EqualityExpression	"strcasecmp ( name , getName ( ) ) == 0"		1617832	0		==			
ANR	1617844	CallExpression	"strcasecmp ( name , getName ( ) )"		1617832	0					
ANR	1617845	Callee	strcasecmp		1617832	0					
ANR	1617846	Identifier	strcasecmp		1617832	0					
ANR	1617847	ArgumentList	name		1617832	1					
ANR	1617848	Argument	name		1617832	0					
ANR	1617849	Identifier	name		1617832	0					
ANR	1617850	Argument	getName ( )		1617832	1					
ANR	1617851	CallExpression	getName ( )		1617832	0					
ANR	1617852	Callee	getName		1617832	0					
ANR	1617853	Identifier	getName		1617832	0					
ANR	1617854	ArgumentList			1617832	1					
ANR	1617855	PrimaryExpression	0		1617832	1					
ANR	1617856	ReturnType	bool		1617832	1					
ANR	1617857	Identifier	nameMatch		1617832	2					
ANR	1617858	ParameterList	const char * name		1617832	3					
ANR	1617859	Parameter	const char * name	59:17:1926:1941	1617832	0	True				
ANR	1617860	ParameterType	const char *		1617832	0					
ANR	1617861	Identifier	name		1617832	1					
ANR	1617862	CFGEntryNode	ENTRY		1617832		True				
ANR	1617863	CFGExitNode	EXIT		1617832		True				
ANR	1617864	Symbol	NULL		1617832						
ANR	1617865	Symbol	getName		1617832						
ANR	1617866	Symbol	name		1617832						
ANR	1617867	Symbol	true		1617832						
ANR	1617868	Symbol	strcasecmp		1617832						
ANR	1617869	Function	isDetected	65:1:2056:2107							
ANR	1617870	FunctionDef	isDetected ()		1617869	3					
ANR	1617871	CompoundStatement		65:31:2086:2107	1617869	0					
ANR	1617872	ReturnStatement	return m_detected ;	65:1:2088:2105	1617869	0	True				
ANR	1617873	Identifier	m_detected		1617869	0					
ANR	1617874	ReturnType	bool		1617869	1					
ANR	1617875	Identifier	isDetected		1617869	2					
ANR	1617876	ParameterList			1617869	3					
ANR	1617877	CFGEntryNode	ENTRY		1617869		True				
ANR	1617878	CFGExitNode	EXIT		1617869		True				
ANR	1617879	Symbol	m_detected		1617869						
ANR	1617880	Function	setDetected	66:1:2111:2170							
ANR	1617881	FunctionDef	setDetected (bool detected)		1617880	4					
ANR	1617882	CompoundStatement		66:35:2145:2170	1617880	0					
ANR	1617883	ExpressionStatement	m_detected = detected	66:1:2147:2168	1617880	0	True				
ANR	1617884	AssignmentExpression	m_detected = detected		1617880	0		=			
ANR	1617885	Identifier	m_detected		1617880	0					
ANR	1617886	Identifier	detected		1617880	1					
ANR	1617887	ReturnType	void		1617880	1					
ANR	1617888	Identifier	setDetected		1617880	2					
ANR	1617889	ParameterList	bool detected		1617880	3					
ANR	1617890	Parameter	bool detected	66:19:2129:2141	1617880	0	True				
ANR	1617891	ParameterType	bool		1617880	0					
ANR	1617892	Identifier	detected		1617880	1					
ANR	1617893	CFGEntryNode	ENTRY		1617880		True				
ANR	1617894	CFGExitNode	EXIT		1617880		True				
ANR	1617895	Symbol	m_detected		1617880						
ANR	1617896	Symbol	detected		1617880						
ANR	1617897	DeclStmt									
ANR	1617898	Decl							bool	bool ( void )	Detect
ANR	1617899	DeclStmt									
ANR	1617900	Decl							bool	bool ( void )	DetectWOL
ANR	1617901	DeclStmt									
ANR	1617902	Decl							LinuxHibernator	LinuxHibernator *	m_hibernator
ANR	1617903	DeclStmt									
ANR	1617904	Decl							bool	bool	m_detected
ANR	1617905	ClassDef	PmUtilLinuxHibernator	91:0:2839:3425							
ANR	1617906	Function	PmUtilLinuxHibernator	94:1:2907:3000							
ANR	1617907	FunctionDef	PmUtilLinuxHibernator (LinuxHibernator & hibernator)		1617906	0					
ANR	1617908	CompoundStatement		95:39:2998:3000	1617906	0					
ANR	1617909	Identifier	PmUtilLinuxHibernator		1617906	1					
ANR	1617910	ParameterList	LinuxHibernator & hibernator		1617906	2					
ANR	1617911	Parameter	LinuxHibernator & hibernator	94:24:2930:2956	1617906	0	True				
ANR	1617912	ParameterType	LinuxHibernator &		1617906	0					
ANR	1617913	Identifier	hibernator		1617906	1					
ANR	1617914	CFGEntryNode	ENTRY		1617906		True				
ANR	1617915	CFGExitNode	EXIT		1617906		True				
ANR	1617916	Symbol	hibernator		1617906						
ANR	1617917	Function	~PmUtilLinuxHibernator	96:9:3012:3043							
ANR	1617918	FunctionDef	~PmUtilLinuxHibernator ()		1617917	1					
ANR	1617919	CompoundStatement		96:38:3041:3043	1617917	0					
ANR	1617920	Identifier	~PmUtilLinuxHibernator		1617917	1					
ANR	1617921	ParameterList			1617917	2					
ANR	1617922	CFGEntryNode	ENTRY		1617917		True				
ANR	1617923	CFGExitNode	EXIT		1617917		True				
ANR	1617924	Function	getName	98:1:3048:3103							
ANR	1617925	FunctionDef	getName ()		1617924	2					
ANR	1617926	CompoundStatement		98:35:3082:3103	1617924	0					
ANR	1617927	ReturnStatement	"return ""pm-utils"" ;"	98:1:3084:3101	1617924	0	True				
ANR	1617928	PrimaryExpression	"""pm-utils"""		1617924	0					
ANR	1617929	ReturnType	const char *		1617924	1					
ANR	1617930	Identifier	getName		1617924	2					
ANR	1617931	ParameterList			1617924	3					
ANR	1617932	CFGEntryNode	ENTRY		1617924		True				
ANR	1617933	CFGExitNode	EXIT		1617924		True				
ANR	1617934	DeclStmt									
ANR	1617935	Decl							bool	bool ( void )	Detect
ANR	1617936	ClassDef	SysIfLinuxHibernator	108:0:3429:3946							
ANR	1617937	Function	SysIfLinuxHibernator	111:1:3496:3588							
ANR	1617938	FunctionDef	SysIfLinuxHibernator (LinuxHibernator & hibernator)		1617937	0					
ANR	1617939	CompoundStatement		112:39:3586:3588	1617937	0					
ANR	1617940	Identifier	SysIfLinuxHibernator		1617937	1					
ANR	1617941	ParameterList	LinuxHibernator & hibernator		1617937	2					
ANR	1617942	Parameter	LinuxHibernator & hibernator	111:23:3518:3544	1617937	0	True				
ANR	1617943	ParameterType	LinuxHibernator &		1617937	0					
ANR	1617944	Identifier	hibernator		1617937	1					
ANR	1617945	CFGEntryNode	ENTRY		1617937		True				
ANR	1617946	CFGExitNode	EXIT		1617937		True				
ANR	1617947	Symbol	hibernator		1617937						
ANR	1617948	Function	~SysIfLinuxHibernator	113:1:3592:3622							
ANR	1617949	FunctionDef	~SysIfLinuxHibernator ()		1617948	1					
ANR	1617950	CompoundStatement		113:29:3620:3622	1617948	0					
ANR	1617951	Identifier	~SysIfLinuxHibernator		1617948	1					
ANR	1617952	ParameterList			1617948	2					
ANR	1617953	CFGEntryNode	ENTRY		1617948		True				
ANR	1617954	CFGExitNode	EXIT		1617948		True				
ANR	1617955	Function	getName	115:1:3627:3678							
ANR	1617956	FunctionDef	getName ()		1617955	2					
ANR	1617957	CompoundStatement		115:35:3661:3678	1617955	0					
ANR	1617958	ReturnStatement	"return ""/sys"" ;"	115:1:3663:3676	1617955	0	True				
ANR	1617959	PrimaryExpression	"""/sys"""		1617955	0					
ANR	1617960	ReturnType	const char *		1617955	1					
ANR	1617961	Identifier	getName		1617955	2					
ANR	1617962	ParameterList			1617955	3					
ANR	1617963	CFGEntryNode	ENTRY		1617955		True				
ANR	1617964	CFGExitNode	EXIT		1617955		True				
ANR	1617965	DeclStmt									
ANR	1617966	Decl							bool	bool ( void )	Detect
ANR	1617967	ClassDef	ProcIfLinuxHibernator	123:0:3950:4477							
ANR	1617968	Function	ProcIfLinuxHibernator	126:1:4018:4111							
ANR	1617969	FunctionDef	ProcIfLinuxHibernator (LinuxHibernator & hibernator)		1617968	0					
ANR	1617970	CompoundStatement		127:39:4109:4111	1617968	0					
ANR	1617971	Identifier	ProcIfLinuxHibernator		1617968	1					
ANR	1617972	ParameterList	LinuxHibernator & hibernator		1617968	2					
ANR	1617973	Parameter	LinuxHibernator & hibernator	126:24:4041:4067	1617968	0	True				
ANR	1617974	ParameterType	LinuxHibernator &		1617968	0					
ANR	1617975	Identifier	hibernator		1617968	1					
ANR	1617976	CFGEntryNode	ENTRY		1617968		True				
ANR	1617977	CFGExitNode	EXIT		1617968		True				
ANR	1617978	Symbol	hibernator		1617968						
ANR	1617979	Function	~ProcIfLinuxHibernator	128:9:4123:4154							
ANR	1617980	FunctionDef	~ProcIfLinuxHibernator ()		1617979	1					
ANR	1617981	CompoundStatement		128:38:4152:4154	1617979	0					
ANR	1617982	Identifier	~ProcIfLinuxHibernator		1617979	1					
ANR	1617983	ParameterList			1617979	2					
ANR	1617984	CFGEntryNode	ENTRY		1617979		True				
ANR	1617985	CFGExitNode	EXIT		1617979		True				
ANR	1617986	Function	getName	130:1:4159:4211							
ANR	1617987	FunctionDef	getName ()		1617986	2					
ANR	1617988	CompoundStatement		130:35:4193:4211	1617986	0					
ANR	1617989	ReturnStatement	"return ""/proc"" ;"	130:1:4195:4209	1617986	0	True				
ANR	1617990	PrimaryExpression	"""/proc"""		1617986	0					
ANR	1617991	ReturnType	const char *		1617986	1					
ANR	1617992	Identifier	getName		1617986	2					
ANR	1617993	ParameterList			1617986	3					
ANR	1617994	CFGEntryNode	ENTRY		1617986		True				
ANR	1617995	CFGExitNode	EXIT		1617986		True				
ANR	1617996	DeclStmt									
ANR	1617997	Decl							bool	bool ( void )	Detect
ANR	1617998	Function	LinuxHibernator :: LinuxHibernator	140:0:4524:4651							
ANR	1617999	FunctionDef	LinuxHibernator :: LinuxHibernator ()		1617998	0					
ANR	1618000	CompoundStatement		144:0:4649:4651	1617998	0					
ANR	1618001	Identifier	LinuxHibernator :: LinuxHibernator		1617998	1					
ANR	1618002	ParameterList			1617998	2					
ANR	1618003	CFGEntryNode	ENTRY		1617998		True				
ANR	1618004	CFGExitNode	EXIT		1617998		True				
ANR	1618005	Function	LinuxHibernator :: ~LinuxHibernator	147:0:4654:4794							
ANR	1618006	FunctionDef	LinuxHibernator :: ~LinuxHibernator ()		1618005	0					
ANR	1618007	CompoundStatement		148:0:4705:4794	1618005	0					
ANR	1618008	IfStatement	if ( m_real_hibernator )		1618005	0					
ANR	1618009	Condition	m_real_hibernator	149:6:4713:4729	1618005	0	True				
ANR	1618010	Identifier	m_real_hibernator		1618005	0					
ANR	1618011	CompoundStatement		2:26:27:27	1618005	1					
ANR	1618012	Statement	delete	150:2:4737:4742	1618005	0	True				
ANR	1618013	ExpressionStatement	m_real_hibernator	150:9:4744:4761	1618005	1	True				
ANR	1618014	Identifier	m_real_hibernator		1618005	0					
ANR	1618015	ExpressionStatement	m_real_hibernator = NULL	151:2:4765:4789	1618005	2	True				
ANR	1618016	AssignmentExpression	m_real_hibernator = NULL		1618005	0		=			
ANR	1618017	Identifier	m_real_hibernator		1618005	0					
ANR	1618018	Identifier	NULL		1618005	1					
ANR	1618019	Identifier	LinuxHibernator :: ~LinuxHibernator		1618005	1					
ANR	1618020	ParameterList			1618005	2					
ANR	1618021	CFGEntryNode	ENTRY		1618005		True				
ANR	1618022	CFGExitNode	EXIT		1618005		True				
ANR	1618023	Symbol	m_real_hibernator		1618005						
ANR	1618024	Symbol	NULL		1618005						
ANR	1618025	Function	LinuxHibernator :: getMethod	155:0:4797:4939							
ANR	1618026	FunctionDef	LinuxHibernator :: getMethod ()		1618025	0					
ANR	1618027	CompoundStatement		157:0:4851:4939	1618025	0					
ANR	1618028	IfStatement	if ( m_real_hibernator )		1618025	0					
ANR	1618029	Condition	m_real_hibernator	158:6:4859:4875	1618025	0	True				
ANR	1618030	Identifier	m_real_hibernator		1618025	0					
ANR	1618031	CompoundStatement		2:26:27:27	1618025	1					
ANR	1618032	ReturnStatement	return m_real_hibernator -> getName ( ) ;	159:2:4883:4918	1618025	0	True				
ANR	1618033	CallExpression	m_real_hibernator -> getName ( )		1618025	0					
ANR	1618034	Callee	m_real_hibernator -> getName		1618025	0					
ANR	1618035	PtrMemberAccess	m_real_hibernator -> getName		1618025	0					
ANR	1618036	Identifier	m_real_hibernator		1618025	0					
ANR	1618037	Identifier	getName		1618025	1					
ANR	1618038	ArgumentList			1618025	1					
ANR	1618039	ReturnStatement	"return ""NONE"" ;"	161:1:4924:4937	1618025	1	True				
ANR	1618040	PrimaryExpression	"""NONE"""		1618025	0					
ANR	1618041	ReturnType	const char *		1618025	1					
ANR	1618042	Identifier	LinuxHibernator :: getMethod		1618025	2					
ANR	1618043	ParameterList			1618025	3					
ANR	1618044	CFGEntryNode	ENTRY		1618025		True				
ANR	1618045	CFGExitNode	EXIT		1618025		True				
ANR	1618046	Symbol	m_real_hibernator		1618025						
ANR	1618047	Symbol	m_real_hibernator -> getName		1618025						
ANR	1618048	Symbol	* m_real_hibernator		1618025						
ANR	1618049	Function	LinuxHibernator :: initialize	164:0:4942:7031							
ANR	1618050	FunctionDef	LinuxHibernator :: initialize ()		1618049	0					
ANR	1618051	CompoundStatement		166:0:4983:7031	1618049	0					
ANR	1618052	ExpressionStatement	setStates ( NONE )	169:1:5015:5033	1618049	0	True				
ANR	1618053	CallExpression	setStates ( NONE )		1618049	0					
ANR	1618054	Callee	setStates		1618049	0					
ANR	1618055	Identifier	setStates		1618049	0					
ANR	1618056	ArgumentList	NONE		1618049	1					
ANR	1618057	Argument	NONE		1618049	0					
ANR	1618058	Identifier	NONE		1618049	0					
ANR	1618059	ExpressionStatement	m_real_hibernator = NULL	170:1:5036:5060	1618049	1	True				
ANR	1618060	AssignmentExpression	m_real_hibernator = NULL		1618049	0		=			
ANR	1618061	Identifier	m_real_hibernator		1618049	0					
ANR	1618062	Identifier	NULL		1618049	1					
ANR	1618063	IdentifierDeclStatement	const char * method ;	173:1:5096:5114	1618049	2	True				
ANR	1618064	IdentifierDecl	* method		1618049	0					
ANR	1618065	IdentifierDeclType	const char *		1618049	0					
ANR	1618066	Identifier	method		1618049	1					
ANR	1618067	IfStatement	if ( m_method )		1618049	3					
ANR	1618068	Condition	m_method	174:6:5122:5129	1618049	0	True				
ANR	1618069	Identifier	m_method		1618049	0					
ANR	1618070	CompoundStatement		9:17:149:149	1618049	1					
ANR	1618071	ExpressionStatement	method = strdup ( m_method )	175:2:5137:5164	1618049	0	True				
ANR	1618072	AssignmentExpression	method = strdup ( m_method )		1618049	0		=			
ANR	1618073	Identifier	method		1618049	0					
ANR	1618074	CallExpression	strdup ( m_method )		1618049	1					
ANR	1618075	Callee	strdup		1618049	0					
ANR	1618076	Identifier	strdup		1618049	0					
ANR	1618077	ArgumentList	m_method		1618049	1					
ANR	1618078	Argument	m_method		1618049	0					
ANR	1618079	Identifier	m_method		1618049	0					
ANR	1618080	ElseStatement	else		1618049	0					
ANR	1618081	CompoundStatement		12:6:191:191	1618049	0					
ANR	1618082	ExpressionStatement	"method = param ( ""LINUX_HIBERNATION_METHOD"" )"	178:2:5179:5223	1618049	0	True				
ANR	1618083	AssignmentExpression	"method = param ( ""LINUX_HIBERNATION_METHOD"" )"		1618049	0		=			
ANR	1618084	Identifier	method		1618049	0					
ANR	1618085	CallExpression	"param ( ""LINUX_HIBERNATION_METHOD"" )"		1618049	1					
ANR	1618086	Callee	param		1618049	0					
ANR	1618087	Identifier	param		1618049	0					
ANR	1618088	ArgumentList	"""LINUX_HIBERNATION_METHOD"""		1618049	1					
ANR	1618089	Argument	"""LINUX_HIBERNATION_METHOD"""		1618049	0					
ANR	1618090	PrimaryExpression	"""LINUX_HIBERNATION_METHOD"""		1618049	0					
ANR	1618091	IfStatement	if ( method )		1618049	4					
ANR	1618092	Condition	method	180:6:5234:5239	1618049	0	True				
ANR	1618093	Identifier	method		1618049	0					
ANR	1618094	CompoundStatement		15:15:259:259	1618049	1					
ANR	1618095	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""LinuxHibernator: Trying method '%s'\\n"" , method )"	181:2:5247:5317	1618049	0	True				
ANR	1618096	CallExpression	"dprintf ( D_FULLDEBUG , ""LinuxHibernator: Trying method '%s'\\n"" , method )"		1618049	0					
ANR	1618097	Callee	dprintf		1618049	0					
ANR	1618098	Identifier	dprintf		1618049	0					
ANR	1618099	ArgumentList	D_FULLDEBUG		1618049	1					
ANR	1618100	Argument	D_FULLDEBUG		1618049	0					
ANR	1618101	Identifier	D_FULLDEBUG		1618049	0					
ANR	1618102	Argument	"""LinuxHibernator: Trying method '%s'\\n"""		1618049	1					
ANR	1618103	PrimaryExpression	"""LinuxHibernator: Trying method '%s'\\n"""		1618049	0					
ANR	1618104	Argument	method		1618049	2					
ANR	1618105	Identifier	method		1618049	0					
ANR	1618106	ElseStatement	else		1618049	0					
ANR	1618107	CompoundStatement		18:6:344:344	1618049	0					
ANR	1618108	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""LinuxHibernator: Trying all methods\\n"" )"	184:2:5332:5395	1618049	0	True				
ANR	1618109	CallExpression	"dprintf ( D_FULLDEBUG , ""LinuxHibernator: Trying all methods\\n"" )"		1618049	0					
ANR	1618110	Callee	dprintf		1618049	0					
ANR	1618111	Identifier	dprintf		1618049	0					
ANR	1618112	ArgumentList	D_FULLDEBUG		1618049	1					
ANR	1618113	Argument	D_FULLDEBUG		1618049	0					
ANR	1618114	Identifier	D_FULLDEBUG		1618049	0					
ANR	1618115	Argument	"""LinuxHibernator: Trying all methods\\n"""		1618049	1					
ANR	1618116	PrimaryExpression	"""LinuxHibernator: Trying all methods\\n"""		1618049	0					
ANR	1618117	IdentifierDeclStatement	MyString methods ;	188:1:5439:5455	1618049	5	True				
ANR	1618118	IdentifierDecl	methods		1618049	0					
ANR	1618119	IdentifierDeclType	MyString		1618049	0					
ANR	1618120	Identifier	methods		1618049	1					
ANR	1618121	ForStatement	for ( int type = 0 ; type < 3 ; type ++ )		1618049	6					
ANR	1618122	ForInit	int type = 0 ;	189:7:5464:5476	1618049	0	True				
ANR	1618123	IdentifierDeclStatement	int type = 0 ;		1618049	0					
ANR	1618124	IdentifierDecl	type = 0		1618049	0					
ANR	1618125	IdentifierDeclType	int		1618049	0					
ANR	1618126	Identifier	type		1618049	1					
ANR	1618127	AssignmentExpression	type = 0		1618049	2		=			
ANR	1618128	Identifier	type		1618049	0					
ANR	1618129	PrimaryExpression	0		1618049	1					
ANR	1618130	Condition	type < 3	189:22:5479:5486	1618049	1	True				
ANR	1618131	RelationalExpression	type < 3		1618049	0		<			
ANR	1618132	Identifier	type		1618049	0					
ANR	1618133	PrimaryExpression	3		1618049	1					
ANR	1618134	PostIncDecOperationExpression	type ++	189:33:5490:5495	1618049	2	True				
ANR	1618135	Identifier	type		1618049	0					
ANR	1618136	IncDec	++		1618049	1					
ANR	1618137	CompoundStatement		37:2:799:831	1618049	3					
ANR	1618138	IdentifierDeclStatement	BaseLinuxHibernator * lh = NULL ;	190:2:5503:5533	1618049	0	True				
ANR	1618139	IdentifierDecl	* lh = NULL		1618049	0					
ANR	1618140	IdentifierDeclType	BaseLinuxHibernator *		1618049	0					
ANR	1618141	Identifier	lh		1618049	1					
ANR	1618142	AssignmentExpression	* lh = NULL		1618049	2		=			
ANR	1618143	Identifier	NULL		1618049	0					
ANR	1618144	Identifier	NULL		1618049	1					
ANR	1618145	IfStatement	if ( 0 == type )		1618049	1					
ANR	1618146	Condition	0 == type	191:12:5547:5555	1618049	0	True				
ANR	1618147	EqualityExpression	0 == type		1618049	0		==			
ANR	1618148	PrimaryExpression	0		1618049	0					
ANR	1618149	Identifier	type		1618049	1					
ANR	1618150	CompoundStatement		26:24:575:575	1618049	1					
ANR	1618151	ExpressionStatement	lh = new PmUtilLinuxHibernator ( * this )	192:3:5564:5603	1618049	0	True				
ANR	1618152	AssignmentExpression	lh = new PmUtilLinuxHibernator ( * this )		1618049	0		=			
ANR	1618153	Identifier	lh		1618049	0					
ANR	1618154	UnaryOperationExpression	* this		1618049	1					
ANR	1618155	UnaryOperator	*		1618049	0					
ANR	1618156	Identifier	this		1618049	1					
ANR	1618157	ElseStatement	else		1618049	0					
ANR	1618158	IfStatement	if ( 1 == type )		1618049	0					
ANR	1618159	Condition	1 == type	194:12:5621:5629	1618049	0	True				
ANR	1618160	EqualityExpression	1 == type		1618049	0		==			
ANR	1618161	PrimaryExpression	1		1618049	0					
ANR	1618162	Identifier	type		1618049	1					
ANR	1618163	CompoundStatement		29:24:649:649	1618049	1					
ANR	1618164	ExpressionStatement	lh = new SysIfLinuxHibernator ( * this )	195:3:5638:5676	1618049	0	True				
ANR	1618165	AssignmentExpression	lh = new SysIfLinuxHibernator ( * this )		1618049	0		=			
ANR	1618166	Identifier	lh		1618049	0					
ANR	1618167	UnaryOperationExpression	* this		1618049	1					
ANR	1618168	UnaryOperator	*		1618049	0					
ANR	1618169	Identifier	this		1618049	1					
ANR	1618170	ElseStatement	else		1618049	0					
ANR	1618171	IfStatement	if ( 2 == type )		1618049	0					
ANR	1618172	Condition	2 == type	197:12:5694:5702	1618049	0	True				
ANR	1618173	EqualityExpression	2 == type		1618049	0		==			
ANR	1618174	PrimaryExpression	2		1618049	0					
ANR	1618175	Identifier	type		1618049	1					
ANR	1618176	CompoundStatement		32:24:722:722	1618049	1					
ANR	1618177	ExpressionStatement	lh = new ProcIfLinuxHibernator ( * this )	198:3:5711:5750	1618049	0	True				
ANR	1618178	AssignmentExpression	lh = new ProcIfLinuxHibernator ( * this )		1618049	0		=			
ANR	1618179	Identifier	lh		1618049	0					
ANR	1618180	UnaryOperationExpression	* this		1618049	1					
ANR	1618181	UnaryOperator	*		1618049	0					
ANR	1618182	Identifier	this		1618049	1					
ANR	1618183	ExpressionStatement	ASSERT ( lh != NULL )	200:2:5758:5778	1618049	2	True				
ANR	1618184	CallExpression	ASSERT ( lh != NULL )		1618049	0					
ANR	1618185	Callee	ASSERT		1618049	0					
ANR	1618186	Identifier	ASSERT		1618049	0					
ANR	1618187	ArgumentList	lh != NULL		1618049	1					
ANR	1618188	Argument	lh != NULL		1618049	0					
ANR	1618189	EqualityExpression	lh != NULL		1618049	0		!=			
ANR	1618190	Identifier	lh		1618049	0					
ANR	1618191	Identifier	NULL		1618049	1					
ANR	1618192	IdentifierDeclStatement	const char * name = lh -> getName ( ) ;	202:2:5783:5815	1618049	3	True				
ANR	1618193	IdentifierDecl	* name = lh -> getName ( )		1618049	0					
ANR	1618194	IdentifierDeclType	const char *		1618049	0					
ANR	1618195	Identifier	name		1618049	1					
ANR	1618196	AssignmentExpression	* name = lh -> getName ( )		1618049	2		=			
ANR	1618197	Identifier	name		1618049	0					
ANR	1618198	CallExpression	lh -> getName ( )		1618049	1					
ANR	1618199	Callee	lh -> getName		1618049	0					
ANR	1618200	PtrMemberAccess	lh -> getName		1618049	0					
ANR	1618201	Identifier	lh		1618049	0					
ANR	1618202	Identifier	getName		1618049	1					
ANR	1618203	ArgumentList			1618049	1					
ANR	1618204	IfStatement	if ( methods . Length ( ) )		1618049	4					
ANR	1618205	Condition	methods . Length ( )	203:7:5824:5839	1618049	0	True				
ANR	1618206	CallExpression	methods . Length ( )		1618049	0					
ANR	1618207	Callee	methods . Length		1618049	0					
ANR	1618208	MemberAccess	methods . Length		1618049	0					
ANR	1618209	Identifier	methods		1618049	0					
ANR	1618210	Identifier	Length		1618049	1					
ANR	1618211	ArgumentList			1618049	1					
ANR	1618212	CompoundStatement		38:26:859:859	1618049	1					
ANR	1618213	ExpressionStatement	"methods += "","""	204:3:5848:5862	1618049	0	True				
ANR	1618214	AssignmentExpression	"methods += "","""		1618049	0		+=			
ANR	1618215	Identifier	methods		1618049	0					
ANR	1618216	PrimaryExpression	""","""		1618049	1					
ANR	1618217	ExpressionStatement	methods += name	206:2:5870:5885	1618049	5	True				
ANR	1618218	AssignmentExpression	methods += name		1618049	0		+=			
ANR	1618219	Identifier	methods		1618049	0					
ANR	1618220	Identifier	name		1618049	1					
ANR	1618221	IfStatement	if ( ! lh -> nameMatch ( method ) )		1618049	6					
ANR	1618222	Condition	! lh -> nameMatch ( method )	209:7:5947:5969	1618049	0	True				
ANR	1618223	UnaryOperationExpression	! lh -> nameMatch ( method )		1618049	0					
ANR	1618224	UnaryOperator	!		1618049	0					
ANR	1618225	CallExpression	lh -> nameMatch ( method )		1618049	1					
ANR	1618226	Callee	lh -> nameMatch		1618049	0					
ANR	1618227	PtrMemberAccess	lh -> nameMatch		1618049	0					
ANR	1618228	Identifier	lh		1618049	0					
ANR	1618229	Identifier	nameMatch		1618049	1					
ANR	1618230	ArgumentList	method		1618049	1					
ANR	1618231	Argument	method		1618049	0					
ANR	1618232	Identifier	method		1618049	0					
ANR	1618233	CompoundStatement		44:33:989:989	1618049	1					
ANR	1618234	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""hibernator: skipping '%s'\\n"" , name )"	210:3:5978:6037	1618049	0	True				
ANR	1618235	CallExpression	"dprintf ( D_FULLDEBUG , ""hibernator: skipping '%s'\\n"" , name )"		1618049	0					
ANR	1618236	Callee	dprintf		1618049	0					
ANR	1618237	Identifier	dprintf		1618049	0					
ANR	1618238	ArgumentList	D_FULLDEBUG		1618049	1					
ANR	1618239	Argument	D_FULLDEBUG		1618049	0					
ANR	1618240	Identifier	D_FULLDEBUG		1618049	0					
ANR	1618241	Argument	"""hibernator: skipping '%s'\\n"""		1618049	1					
ANR	1618242	PrimaryExpression	"""hibernator: skipping '%s'\\n"""		1618049	0					
ANR	1618243	Argument	name		1618049	2					
ANR	1618244	Identifier	name		1618049	0					
ANR	1618245	Statement	delete	211:3:6042:6047	1618049	1	True				
ANR	1618246	ExpressionStatement	lh	211:10:6049:6051	1618049	2	True				
ANR	1618247	Identifier	lh		1618049	0					
ANR	1618248	ElseStatement	else		1618049	0					
ANR	1618249	IfStatement	if ( lh -> Detect ( ) )		1618049	0					
ANR	1618250	Condition	lh -> Detect ( )	215:12:6109:6120	1618049	0	True				
ANR	1618251	CallExpression	lh -> Detect ( )		1618049	0					
ANR	1618252	Callee	lh -> Detect		1618049	0					
ANR	1618253	PtrMemberAccess	lh -> Detect		1618049	0					
ANR	1618254	Identifier	lh		1618049	0					
ANR	1618255	Identifier	Detect		1618049	1					
ANR	1618256	ArgumentList			1618049	1					
ANR	1618257	CompoundStatement		50:27:1140:1140	1618049	1					
ANR	1618258	ExpressionStatement	lh -> setDetected ( true )	216:3:6129:6152	1618049	0	True				
ANR	1618259	CallExpression	lh -> setDetected ( true )		1618049	0					
ANR	1618260	Callee	lh -> setDetected		1618049	0					
ANR	1618261	PtrMemberAccess	lh -> setDetected		1618049	0					
ANR	1618262	Identifier	lh		1618049	0					
ANR	1618263	Identifier	setDetected		1618049	1					
ANR	1618264	ArgumentList	true		1618049	1					
ANR	1618265	Argument	true		1618049	0					
ANR	1618266	Identifier	true		1618049	0					
ANR	1618267	ExpressionStatement	m_real_hibernator = lh	217:3:6157:6179	1618049	1	True				
ANR	1618268	AssignmentExpression	m_real_hibernator = lh		1618049	0		=			
ANR	1618269	Identifier	m_real_hibernator		1618049	0					
ANR	1618270	Identifier	lh		1618049	1					
ANR	1618271	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""hibernator: '%s' detected\\n"" , name )"	218:3:6184:6243	1618049	2	True				
ANR	1618272	CallExpression	"dprintf ( D_FULLDEBUG , ""hibernator: '%s' detected\\n"" , name )"		1618049	0					
ANR	1618273	Callee	dprintf		1618049	0					
ANR	1618274	Identifier	dprintf		1618049	0					
ANR	1618275	ArgumentList	D_FULLDEBUG		1618049	1					
ANR	1618276	Argument	D_FULLDEBUG		1618049	0					
ANR	1618277	Identifier	D_FULLDEBUG		1618049	0					
ANR	1618278	Argument	"""hibernator: '%s' detected\\n"""		1618049	1					
ANR	1618279	PrimaryExpression	"""hibernator: '%s' detected\\n"""		1618049	0					
ANR	1618280	Argument	name		1618049	2					
ANR	1618281	Identifier	name		1618049	0					
ANR	1618282	IfStatement	if ( method )		1618049	3					
ANR	1618283	Condition	method	219:8:6253:6258	1618049	0	True				
ANR	1618284	Identifier	method		1618049	0					
ANR	1618285	CompoundStatement		54:17:1278:1278	1618049	1					
ANR	1618286	Statement	free	220:4:6268:6271	1618049	0	True				
ANR	1618287	Statement	(	220:8:6272:6272	1618049	1	True				
ANR	1618288	Statement	const_cast	220:10:6274:6283	1618049	2	True				
ANR	1618289	Statement	<	220:20:6284:6284	1618049	3	True				
ANR	1618290	Statement	char	220:21:6285:6288	1618049	4	True				
ANR	1618291	Statement	*	220:26:6290:6290	1618049	5	True				
ANR	1618292	Statement	>	220:27:6291:6291	1618049	6	True				
ANR	1618293	Statement	(	220:28:6292:6292	1618049	7	True				
ANR	1618294	Statement	method	220:29:6293:6298	1618049	8	True				
ANR	1618295	Statement	)	220:35:6299:6299	1618049	9	True				
ANR	1618296	Statement	)	220:37:6301:6301	1618049	10	True				
ANR	1618297	ExpressionStatement		220:38:6302:6302	1618049	11	True				
ANR	1618298	ExpressionStatement	setInitialized ( true )	222:3:6312:6334	1618049	4	True				
ANR	1618299	CallExpression	setInitialized ( true )		1618049	0					
ANR	1618300	Callee	setInitialized		1618049	0					
ANR	1618301	Identifier	setInitialized		1618049	0					
ANR	1618302	ArgumentList	true		1618049	1					
ANR	1618303	Argument	true		1618049	0					
ANR	1618304	Identifier	true		1618049	0					
ANR	1618305	ReturnStatement	return true ;	223:3:6339:6350	1618049	5	True				
ANR	1618306	Identifier	true		1618049	0					
ANR	1618307	ElseStatement	else		1618049	0					
ANR	1618308	CompoundStatement		62:7:1433:1433	1618049	0					
ANR	1618309	Statement	delete	228:3:6422:6427	1618049	0	True				
ANR	1618310	ExpressionStatement	lh	228:10:6429:6431	1618049	1	True				
ANR	1618311	Identifier	lh		1618049	0					
ANR	1618312	IfStatement	if ( method )		1618049	2					
ANR	1618313	Condition	method	229:8:6441:6446	1618049	0	True				
ANR	1618314	Identifier	method		1618049	0					
ANR	1618315	CompoundStatement		64:17:1466:1466	1618049	1					
ANR	1618316	Statement	dprintf	230:4:6456:6462	1618049	0	True				
ANR	1618317	Statement	(	230:11:6463:6463	1618049	1	True				
ANR	1618318	Statement	D_ALWAYS	230:13:6465:6472	1618049	2	True				
ANR	1618319	Statement	","	230:21:6473:6473	1618049	3	True				
ANR	1618320	Statement	"""hibernator: '%s' not detected; """	231:7:6482:6514	1618049	4	True				
ANR	1618321	Statement	"""hibernation disabled\\n"""	232:7:6523:6546	1618049	5	True				
ANR	1618322	Statement	","	232:31:6547:6547	1618049	6	True				
ANR	1618323	Statement	name	233:7:6556:6559	1618049	7	True				
ANR	1618324	Statement	)	233:12:6561:6561	1618049	8	True				
ANR	1618325	ExpressionStatement		233:13:6562:6562	1618049	9	True				
ANR	1618326	Statement	free	234:4:6568:6571	1618049	10	True				
ANR	1618327	Statement	(	234:8:6572:6572	1618049	11	True				
ANR	1618328	Statement	const_cast	234:10:6574:6583	1618049	12	True				
ANR	1618329	Statement	<	234:20:6584:6584	1618049	13	True				
ANR	1618330	Statement	char	234:21:6585:6588	1618049	14	True				
ANR	1618331	Statement	*	234:26:6590:6590	1618049	15	True				
ANR	1618332	Statement	>	234:27:6591:6591	1618049	16	True				
ANR	1618333	Statement	(	234:28:6592:6592	1618049	17	True				
ANR	1618334	Statement	method	234:29:6593:6598	1618049	18	True				
ANR	1618335	Statement	)	234:35:6599:6599	1618049	19	True				
ANR	1618336	Statement	)	234:37:6601:6601	1618049	20	True				
ANR	1618337	ExpressionStatement		234:38:6602:6602	1618049	21	True				
ANR	1618338	ReturnStatement	return false ;	235:4:6608:6620	1618049	22	True				
ANR	1618339	Identifier	false		1618049	0					
ANR	1618340	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""hibernator: '%s' not detected\\n"" , name )"	237:3:6630:6693	1618049	3	True				
ANR	1618341	CallExpression	"dprintf ( D_FULLDEBUG , ""hibernator: '%s' not detected\\n"" , name )"		1618049	0					
ANR	1618342	Callee	dprintf		1618049	0					
ANR	1618343	Identifier	dprintf		1618049	0					
ANR	1618344	ArgumentList	D_FULLDEBUG		1618049	1					
ANR	1618345	Argument	D_FULLDEBUG		1618049	0					
ANR	1618346	Identifier	D_FULLDEBUG		1618049	0					
ANR	1618347	Argument	"""hibernator: '%s' not detected\\n"""		1618049	1					
ANR	1618348	PrimaryExpression	"""hibernator: '%s' not detected\\n"""		1618049	0					
ANR	1618349	Argument	name		1618049	2					
ANR	1618350	Identifier	name		1618049	0					
ANR	1618351	IfStatement	if ( method )		1618049	7					
ANR	1618352	Condition	method	240:6:6708:6713	1618049	0	True				
ANR	1618353	Identifier	method		1618049	0					
ANR	1618354	CompoundStatement		75:15:1733:1733	1618049	1					
ANR	1618355	ExpressionStatement	"dprintf ( D_ALWAYS , ""hibernator: '%s' not detected\\n"" , method )"	241:2:6721:6783	1618049	0	True				
ANR	1618356	CallExpression	"dprintf ( D_ALWAYS , ""hibernator: '%s' not detected\\n"" , method )"		1618049	0					
ANR	1618357	Callee	dprintf		1618049	0					
ANR	1618358	Identifier	dprintf		1618049	0					
ANR	1618359	ArgumentList	D_ALWAYS		1618049	1					
ANR	1618360	Argument	D_ALWAYS		1618049	0					
ANR	1618361	Identifier	D_ALWAYS		1618049	0					
ANR	1618362	Argument	"""hibernator: '%s' not detected\\n"""		1618049	1					
ANR	1618363	PrimaryExpression	"""hibernator: '%s' not detected\\n"""		1618049	0					
ANR	1618364	Argument	method		1618049	2					
ANR	1618365	Identifier	method		1618049	0					
ANR	1618366	Statement	free	242:2:6787:6790	1618049	1	True				
ANR	1618367	Statement	(	242:6:6791:6791	1618049	2	True				
ANR	1618368	Statement	const_cast	242:8:6793:6802	1618049	3	True				
ANR	1618369	Statement	<	242:18:6803:6803	1618049	4	True				
ANR	1618370	Statement	char	242:19:6804:6807	1618049	5	True				
ANR	1618371	Statement	*	242:24:6809:6809	1618049	6	True				
ANR	1618372	Statement	>	242:25:6810:6810	1618049	7	True				
ANR	1618373	Statement	(	242:26:6811:6811	1618049	8	True				
ANR	1618374	Statement	method	242:27:6812:6817	1618049	9	True				
ANR	1618375	Statement	)	242:33:6818:6818	1618049	10	True				
ANR	1618376	Statement	)	242:35:6820:6820	1618049	11	True				
ANR	1618377	ExpressionStatement		242:36:6821:6821	1618049	12	True				
ANR	1618378	ExpressionStatement	"dprintf ( D_ALWAYS , ""No hibernation methods detected; hibernation disabled\\n"" )"	244:1:6827:6909	1618049	8	True				
ANR	1618379	CallExpression	"dprintf ( D_ALWAYS , ""No hibernation methods detected; hibernation disabled\\n"" )"		1618049	0					
ANR	1618380	Callee	dprintf		1618049	0					
ANR	1618381	Identifier	dprintf		1618049	0					
ANR	1618382	ArgumentList	D_ALWAYS		1618049	1					
ANR	1618383	Argument	D_ALWAYS		1618049	0					
ANR	1618384	Identifier	D_ALWAYS		1618049	0					
ANR	1618385	Argument	"""No hibernation methods detected; hibernation disabled\\n"""		1618049	1					
ANR	1618386	PrimaryExpression	"""No hibernation methods detected; hibernation disabled\\n"""		1618049	0					
ANR	1618387	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""  methods tried: %s\\n"" , methods . Length ( ) ? methods . Value ( ) : ""<NONE>"" )"	246:1:6912:7014	1618049	9	True				
ANR	1618388	CallExpression	"dprintf ( D_FULLDEBUG , ""  methods tried: %s\\n"" , methods . Length ( ) ? methods . Value ( ) : ""<NONE>"" )"		1618049	0					
ANR	1618389	Callee	dprintf		1618049	0					
ANR	1618390	Identifier	dprintf		1618049	0					
ANR	1618391	ArgumentList	D_FULLDEBUG		1618049	1					
ANR	1618392	Argument	D_FULLDEBUG		1618049	0					
ANR	1618393	Identifier	D_FULLDEBUG		1618049	0					
ANR	1618394	Argument	"""  methods tried: %s\\n"""		1618049	1					
ANR	1618395	PrimaryExpression	"""  methods tried: %s\\n"""		1618049	0					
ANR	1618396	Argument	"methods . Length ( ) ? methods . Value ( ) : ""<NONE>"""		1618049	2					
ANR	1618397	ConditionalExpression	"methods . Length ( ) ? methods . Value ( ) : ""<NONE>"""		1618049	0					
ANR	1618398	Condition	methods . Length ( )		1618049	0					
ANR	1618399	CallExpression	methods . Length ( )		1618049	0					
ANR	1618400	Callee	methods . Length		1618049	0					
ANR	1618401	MemberAccess	methods . Length		1618049	0					
ANR	1618402	Identifier	methods		1618049	0					
ANR	1618403	Identifier	Length		1618049	1					
ANR	1618404	ArgumentList			1618049	1					
ANR	1618405	CallExpression	methods . Value ( )		1618049	1					
ANR	1618406	Callee	methods . Value		1618049	0					
ANR	1618407	MemberAccess	methods . Value		1618049	0					
ANR	1618408	Identifier	methods		1618049	0					
ANR	1618409	Identifier	Value		1618049	1					
ANR	1618410	ArgumentList			1618049	1					
ANR	1618411	PrimaryExpression	"""<NONE>"""		1618049	2					
ANR	1618412	ReturnStatement	return false ;	249:1:7017:7029	1618049	10	True				
ANR	1618413	Identifier	false		1618049	0					
ANR	1618414	ReturnType	bool		1618049	1					
ANR	1618415	Identifier	LinuxHibernator :: initialize		1618049	2					
ANR	1618416	ParameterList			1618049	3					
ANR	1618417	CFGEntryNode	ENTRY		1618049		True				
ANR	1618418	CFGExitNode	EXIT		1618049		True				
ANR	1618419	Symbol	* lh		1618049						
ANR	1618420	Symbol	lh -> Detect		1618049						
ANR	1618421	Symbol	NULL		1618049						
ANR	1618422	Symbol	method		1618049						
ANR	1618423	Symbol	m_method		1618049						
ANR	1618424	Symbol	methods		1618049						
ANR	1618425	Symbol	methods . Value		1618049						
ANR	1618426	Symbol	this		1618049						
ANR	1618427	Symbol	false		1618049						
ANR	1618428	Symbol	D_ALWAYS		1618049						
ANR	1618429	Symbol	D_FULLDEBUG		1618049						
ANR	1618430	Symbol	type		1618049						
ANR	1618431	Symbol	* this		1618049						
ANR	1618432	Symbol	m_real_hibernator		1618049						
ANR	1618433	Symbol	lh -> nameMatch		1618049						
ANR	1618434	Symbol	param		1618049						
ANR	1618435	Symbol	name		1618049						
ANR	1618436	Symbol	true		1618049						
ANR	1618437	Symbol	methods . Length		1618049						
ANR	1618438	Symbol	lh -> getName		1618049						
ANR	1618439	Symbol	strdup		1618049						
ANR	1618440	Symbol	NONE		1618049						
ANR	1618441	Symbol	lh		1618049						
ANR	1618442	Function	LinuxHibernator :: enterStateStandBy	252:0:7034:7164							
ANR	1618443	FunctionDef	LinuxHibernator :: enterStateStandBy (bool force)		1618442	0					
ANR	1618444	CompoundStatement		254:0:7117:7164	1618442	0					
ANR	1618445	ReturnStatement	return m_real_hibernator -> StandBy ( force ) ;	255:1:7120:7162	1618442	0	True				
ANR	1618446	CallExpression	m_real_hibernator -> StandBy ( force )		1618442	0					
ANR	1618447	Callee	m_real_hibernator -> StandBy		1618442	0					
ANR	1618448	PtrMemberAccess	m_real_hibernator -> StandBy		1618442	0					
ANR	1618449	Identifier	m_real_hibernator		1618442	0					
ANR	1618450	Identifier	StandBy		1618442	1					
ANR	1618451	ArgumentList	force		1618442	1					
ANR	1618452	Argument	force		1618442	0					
ANR	1618453	Identifier	force		1618442	0					
ANR	1618454	ReturnType	HibernatorBase :: SLEEP_STATE		1618442	1					
ANR	1618455	Identifier	LinuxHibernator :: enterStateStandBy		1618442	2					
ANR	1618456	ParameterList	bool force		1618442	3					
ANR	1618457	Parameter	bool force	253:36:7098:7107	1618442	0	True				
ANR	1618458	ParameterType	bool		1618442	0					
ANR	1618459	Identifier	force		1618442	1					
ANR	1618460	CFGEntryNode	ENTRY		1618442		True				
ANR	1618461	CFGExitNode	EXIT		1618442		True				
ANR	1618462	Symbol	m_real_hibernator		1618442						
ANR	1618463	Symbol	force		1618442						
ANR	1618464	Symbol	* m_real_hibernator		1618442						
ANR	1618465	Symbol	m_real_hibernator -> StandBy		1618442						
ANR	1618466	Function	LinuxHibernator :: enterStateSuspend	258:0:7167:7297							
ANR	1618467	FunctionDef	LinuxHibernator :: enterStateSuspend (bool force)		1618466	0					
ANR	1618468	CompoundStatement		260:0:7250:7297	1618466	0					
ANR	1618469	ReturnStatement	return m_real_hibernator -> Suspend ( force ) ;	261:1:7253:7295	1618466	0	True				
ANR	1618470	CallExpression	m_real_hibernator -> Suspend ( force )		1618466	0					
ANR	1618471	Callee	m_real_hibernator -> Suspend		1618466	0					
ANR	1618472	PtrMemberAccess	m_real_hibernator -> Suspend		1618466	0					
ANR	1618473	Identifier	m_real_hibernator		1618466	0					
ANR	1618474	Identifier	Suspend		1618466	1					
ANR	1618475	ArgumentList	force		1618466	1					
ANR	1618476	Argument	force		1618466	0					
ANR	1618477	Identifier	force		1618466	0					
ANR	1618478	ReturnType	HibernatorBase :: SLEEP_STATE		1618466	1					
ANR	1618479	Identifier	LinuxHibernator :: enterStateSuspend		1618466	2					
ANR	1618480	ParameterList	bool force		1618466	3					
ANR	1618481	Parameter	bool force	259:36:7231:7240	1618466	0	True				
ANR	1618482	ParameterType	bool		1618466	0					
ANR	1618483	Identifier	force		1618466	1					
ANR	1618484	CFGEntryNode	ENTRY		1618466		True				
ANR	1618485	CFGExitNode	EXIT		1618466		True				
ANR	1618486	Symbol	m_real_hibernator -> Suspend		1618466						
ANR	1618487	Symbol	m_real_hibernator		1618466						
ANR	1618488	Symbol	force		1618466						
ANR	1618489	Symbol	* m_real_hibernator		1618466						
ANR	1618490	Function	LinuxHibernator :: enterStateHibernate	264:0:7300:7434							
ANR	1618491	FunctionDef	LinuxHibernator :: enterStateHibernate (bool force)		1618490	0					
ANR	1618492	CompoundStatement		266:0:7385:7434	1618490	0					
ANR	1618493	ReturnStatement	return m_real_hibernator -> Hibernate ( force ) ;	267:1:7388:7432	1618490	0	True				
ANR	1618494	CallExpression	m_real_hibernator -> Hibernate ( force )		1618490	0					
ANR	1618495	Callee	m_real_hibernator -> Hibernate		1618490	0					
ANR	1618496	PtrMemberAccess	m_real_hibernator -> Hibernate		1618490	0					
ANR	1618497	Identifier	m_real_hibernator		1618490	0					
ANR	1618498	Identifier	Hibernate		1618490	1					
ANR	1618499	ArgumentList	force		1618490	1					
ANR	1618500	Argument	force		1618490	0					
ANR	1618501	Identifier	force		1618490	0					
ANR	1618502	ReturnType	HibernatorBase :: SLEEP_STATE		1618490	1					
ANR	1618503	Identifier	LinuxHibernator :: enterStateHibernate		1618490	2					
ANR	1618504	ParameterList	bool force		1618490	3					
ANR	1618505	Parameter	bool force	265:38:7366:7375	1618490	0	True				
ANR	1618506	ParameterType	bool		1618490	0					
ANR	1618507	Identifier	force		1618490	1					
ANR	1618508	CFGEntryNode	ENTRY		1618490		True				
ANR	1618509	CFGExitNode	EXIT		1618490		True				
ANR	1618510	Symbol	m_real_hibernator		1618490						
ANR	1618511	Symbol	m_real_hibernator -> Hibernate		1618490						
ANR	1618512	Symbol	force		1618490						
ANR	1618513	Symbol	* m_real_hibernator		1618490						
ANR	1618514	Function	LinuxHibernator :: enterStatePowerOff	270:0:7437:7569							
ANR	1618515	FunctionDef	LinuxHibernator :: enterStatePowerOff (bool force)		1618514	0					
ANR	1618516	CompoundStatement		272:0:7521:7569	1618514	0					
ANR	1618517	ReturnStatement	return m_real_hibernator -> PowerOff ( force ) ;	273:1:7524:7567	1618514	0	True				
ANR	1618518	CallExpression	m_real_hibernator -> PowerOff ( force )		1618514	0					
ANR	1618519	Callee	m_real_hibernator -> PowerOff		1618514	0					
ANR	1618520	PtrMemberAccess	m_real_hibernator -> PowerOff		1618514	0					
ANR	1618521	Identifier	m_real_hibernator		1618514	0					
ANR	1618522	Identifier	PowerOff		1618514	1					
ANR	1618523	ArgumentList	force		1618514	1					
ANR	1618524	Argument	force		1618514	0					
ANR	1618525	Identifier	force		1618514	0					
ANR	1618526	ReturnType	HibernatorBase :: SLEEP_STATE		1618514	1					
ANR	1618527	Identifier	LinuxHibernator :: enterStatePowerOff		1618514	2					
ANR	1618528	ParameterList	bool force		1618514	3					
ANR	1618529	Parameter	bool force	271:37:7502:7511	1618514	0	True				
ANR	1618530	ParameterType	bool		1618514	0					
ANR	1618531	Identifier	force		1618514	1					
ANR	1618532	CFGEntryNode	ENTRY		1618514		True				
ANR	1618533	CFGExitNode	EXIT		1618514		True				
ANR	1618534	Symbol	m_real_hibernator		1618514						
ANR	1618535	Symbol	m_real_hibernator -> PowerOff		1618514						
ANR	1618536	Symbol	force		1618514						
ANR	1618537	Symbol	* m_real_hibernator		1618514						
ANR	1618538	Function	BaseLinuxHibernator :: StandBy	282:0:7777:8027							
ANR	1618539	FunctionDef	BaseLinuxHibernator :: StandBy (bool force)		1618538	0					
ANR	1618540	CompoundStatement		284:0:7855:8027	1618538	0					
ANR	1618541	IdentifierDeclStatement	HibernatorBase :: SLEEP_STATE new_state ;	285:1:7858:7895	1618538	0	True				
ANR	1618542	IdentifierDecl	new_state		1618538	0					
ANR	1618543	IdentifierDeclType	HibernatorBase :: SLEEP_STATE		1618538	0					
ANR	1618544	Identifier	new_state		1618538	1					
ANR	1618545	ExpressionStatement	new_state = Suspend ( force )	287:1:7899:7927	1618538	1	True				
ANR	1618546	AssignmentExpression	new_state = Suspend ( force )		1618538	0		=			
ANR	1618547	Identifier	new_state		1618538	0					
ANR	1618548	CallExpression	Suspend ( force )		1618538	1					
ANR	1618549	Callee	Suspend		1618538	0					
ANR	1618550	Identifier	Suspend		1618538	0					
ANR	1618551	ArgumentList	force		1618538	1					
ANR	1618552	Argument	force		1618538	0					
ANR	1618553	Identifier	force		1618538	0					
ANR	1618554	IfStatement	if ( new_state == HibernatorBase :: S3 )		1618538	2					
ANR	1618555	Condition	new_state == HibernatorBase :: S3	288:6:7935:7965	1618538	0	True				
ANR	1618556	EqualityExpression	new_state == HibernatorBase :: S3		1618538	0		==			
ANR	1618557	Identifier	new_state		1618538	0					
ANR	1618558	Identifier	HibernatorBase :: S3		1618538	1					
ANR	1618559	CompoundStatement		5:40:113:113	1618538	1					
ANR	1618560	ExpressionStatement	new_state = HibernatorBase :: S1	289:2:7973:8003	1618538	0	True				
ANR	1618561	AssignmentExpression	new_state = HibernatorBase :: S1		1618538	0		=			
ANR	1618562	Identifier	new_state		1618538	0					
ANR	1618563	Identifier	HibernatorBase :: S1		1618538	1					
ANR	1618564	ReturnStatement	return new_state ;	291:1:8009:8025	1618538	3	True				
ANR	1618565	Identifier	new_state		1618538	0					
ANR	1618566	ReturnType	HibernatorBase :: SLEEP_STATE		1618538	1					
ANR	1618567	Identifier	BaseLinuxHibernator :: StandBy		1618538	2					
ANR	1618568	ParameterList	bool force		1618538	3					
ANR	1618569	Parameter	bool force	283:31:7836:7845	1618538	0	True				
ANR	1618570	ParameterType	bool		1618538	0					
ANR	1618571	Identifier	force		1618538	1					
ANR	1618572	CFGEntryNode	ENTRY		1618538		True				
ANR	1618573	CFGExitNode	EXIT		1618538		True				
ANR	1618574	Symbol	HibernatorBase :: S3		1618538						
ANR	1618575	Symbol	HibernatorBase :: S1		1618538						
ANR	1618576	Symbol	new_state		1618538						
ANR	1618577	Symbol	Suspend		1618538						
ANR	1618578	Symbol	force		1618538						
ANR	1618579	DeclStmt									
ANR	1618580	Decl							MyString	MyString	command
ANR	1618581	DeclStmt									
ANR	1618582	Decl							int	int	status
ANR	1618583	Function	BaseLinuxHibernator :: writeSysFile	308:0:8353:9055							
ANR	1618584	FunctionDef	"BaseLinuxHibernator :: writeSysFile (const char * file , const char * str)"		1618583	0					
ANR	1618585	CompoundStatement		310:0:8436:9055	1618583	0					
ANR	1618586	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""LinuxHibernator: Writing '%s' to '%s'\\n"" , str , file )"	312:1:8480:8560	1618583	0	True				
ANR	1618587	CallExpression	"dprintf ( D_FULLDEBUG , ""LinuxHibernator: Writing '%s' to '%s'\\n"" , str , file )"		1618583	0					
ANR	1618588	Callee	dprintf		1618583	0					
ANR	1618589	Identifier	dprintf		1618583	0					
ANR	1618590	ArgumentList	D_FULLDEBUG		1618583	1					
ANR	1618591	Argument	D_FULLDEBUG		1618583	0					
ANR	1618592	Identifier	D_FULLDEBUG		1618583	0					
ANR	1618593	Argument	"""LinuxHibernator: Writing '%s' to '%s'\\n"""		1618583	1					
ANR	1618594	PrimaryExpression	"""LinuxHibernator: Writing '%s' to '%s'\\n"""		1618583	0					
ANR	1618595	Argument	str		1618583	2					
ANR	1618596	Identifier	str		1618583	0					
ANR	1618597	Argument	file		1618583	3					
ANR	1618598	Identifier	file		1618583	0					
ANR	1618599	IdentifierDeclStatement	priv_state p = set_root_priv ( ) ;	314:1:8563:8594	1618583	1	True				
ANR	1618600	IdentifierDecl	p = set_root_priv ( )		1618583	0					
ANR	1618601	IdentifierDeclType	priv_state		1618583	0					
ANR	1618602	Identifier	p		1618583	1					
ANR	1618603	AssignmentExpression	p = set_root_priv ( )		1618583	2		=			
ANR	1618604	Identifier	p		1618583	0					
ANR	1618605	CallExpression	set_root_priv ( )		1618583	1					
ANR	1618606	Callee	set_root_priv		1618583	0					
ANR	1618607	Identifier	set_root_priv		1618583	0					
ANR	1618608	ArgumentList			1618583	1					
ANR	1618609	IdentifierDeclStatement	"int fd = safe_open_wrapper_follow ( file , O_WRONLY ) ;"	315:1:8597:8648	1618583	2	True				
ANR	1618610	IdentifierDecl	"fd = safe_open_wrapper_follow ( file , O_WRONLY )"		1618583	0					
ANR	1618611	IdentifierDeclType	int		1618583	0					
ANR	1618612	Identifier	fd		1618583	1					
ANR	1618613	AssignmentExpression	"fd = safe_open_wrapper_follow ( file , O_WRONLY )"		1618583	2		=			
ANR	1618614	Identifier	fd		1618583	0					
ANR	1618615	CallExpression	"safe_open_wrapper_follow ( file , O_WRONLY )"		1618583	1					
ANR	1618616	Callee	safe_open_wrapper_follow		1618583	0					
ANR	1618617	Identifier	safe_open_wrapper_follow		1618583	0					
ANR	1618618	ArgumentList	file		1618583	1					
ANR	1618619	Argument	file		1618583	0					
ANR	1618620	Identifier	file		1618583	0					
ANR	1618621	Argument	O_WRONLY		1618583	1					
ANR	1618622	Identifier	O_WRONLY		1618583	0					
ANR	1618623	ExpressionStatement	set_priv ( p )	316:1:8651:8664	1618583	3	True				
ANR	1618624	CallExpression	set_priv ( p )		1618583	0					
ANR	1618625	Callee	set_priv		1618583	0					
ANR	1618626	Identifier	set_priv		1618583	0					
ANR	1618627	ArgumentList	p		1618583	1					
ANR	1618628	Argument	p		1618583	0					
ANR	1618629	Identifier	p		1618583	0					
ANR	1618630	IfStatement	if ( fd < 0 )		1618583	4					
ANR	1618631	Condition	fd < 0	317:6:8672:8677	1618583	0	True				
ANR	1618632	RelationalExpression	fd < 0		1618583	0		<			
ANR	1618633	Identifier	fd		1618583	0					
ANR	1618634	PrimaryExpression	0		1618583	1					
ANR	1618635	CompoundStatement		8:15:244:244	1618583	1					
ANR	1618636	ExpressionStatement	"dprintf ( D_ALWAYS , ""LinuxHibernator: Error writing '%s' to '%s': %s\\n"" , str , file , strerror ( errno ) )"	318:2:8685:8795	1618583	0	True				
ANR	1618637	CallExpression	"dprintf ( D_ALWAYS , ""LinuxHibernator: Error writing '%s' to '%s': %s\\n"" , str , file , strerror ( errno ) )"		1618583	0					
ANR	1618638	Callee	dprintf		1618583	0					
ANR	1618639	Identifier	dprintf		1618583	0					
ANR	1618640	ArgumentList	D_ALWAYS		1618583	1					
ANR	1618641	Argument	D_ALWAYS		1618583	0					
ANR	1618642	Identifier	D_ALWAYS		1618583	0					
ANR	1618643	Argument	"""LinuxHibernator: Error writing '%s' to '%s': %s\\n"""		1618583	1					
ANR	1618644	PrimaryExpression	"""LinuxHibernator: Error writing '%s' to '%s': %s\\n"""		1618583	0					
ANR	1618645	Argument	str		1618583	2					
ANR	1618646	Identifier	str		1618583	0					
ANR	1618647	Argument	file		1618583	3					
ANR	1618648	Identifier	file		1618583	0					
ANR	1618649	Argument	strerror ( errno )		1618583	4					
ANR	1618650	CallExpression	strerror ( errno )		1618583	0					
ANR	1618651	Callee	strerror		1618583	0					
ANR	1618652	Identifier	strerror		1618583	0					
ANR	1618653	ArgumentList	errno		1618583	1					
ANR	1618654	Argument	errno		1618583	0					
ANR	1618655	Identifier	errno		1618583	0					
ANR	1618656	ReturnStatement	return false ;	321:2:8799:8811	1618583	1	True				
ANR	1618657	Identifier	false		1618583	0					
ANR	1618658	IdentifierDeclStatement	int len = strlen ( str ) ;	323:1:8817:8838	1618583	5	True				
ANR	1618659	IdentifierDecl	len = strlen ( str )		1618583	0					
ANR	1618660	IdentifierDeclType	int		1618583	0					
ANR	1618661	Identifier	len		1618583	1					
ANR	1618662	AssignmentExpression	len = strlen ( str )		1618583	2		=			
ANR	1618663	Identifier	len		1618583	0					
ANR	1618664	CallExpression	strlen ( str )		1618583	1					
ANR	1618665	Callee	strlen		1618583	0					
ANR	1618666	Identifier	strlen		1618583	0					
ANR	1618667	ArgumentList	str		1618583	1					
ANR	1618668	Argument	str		1618583	0					
ANR	1618669	Identifier	str		1618583	0					
ANR	1618670	IfStatement	"if ( write ( fd , str , len ) != len )"		1618583	6					
ANR	1618671	Condition	"write ( fd , str , len ) != len"	324:6:8846:8873	1618583	0	True				
ANR	1618672	EqualityExpression	"write ( fd , str , len ) != len"		1618583	0		!=			
ANR	1618673	CallExpression	"write ( fd , str , len )"		1618583	0					
ANR	1618674	Callee	write		1618583	0					
ANR	1618675	Identifier	write		1618583	0					
ANR	1618676	ArgumentList	fd		1618583	1					
ANR	1618677	Argument	fd		1618583	0					
ANR	1618678	Identifier	fd		1618583	0					
ANR	1618679	Argument	str		1618583	1					
ANR	1618680	Identifier	str		1618583	0					
ANR	1618681	Argument	len		1618583	2					
ANR	1618682	Identifier	len		1618583	0					
ANR	1618683	Identifier	len		1618583	1					
ANR	1618684	CompoundStatement		15:37:440:440	1618583	1					
ANR	1618685	ExpressionStatement	close ( fd )	325:2:8881:8892	1618583	0	True				
ANR	1618686	CallExpression	close ( fd )		1618583	0					
ANR	1618687	Callee	close		1618583	0					
ANR	1618688	Identifier	close		1618583	0					
ANR	1618689	ArgumentList	fd		1618583	1					
ANR	1618690	Argument	fd		1618583	0					
ANR	1618691	Identifier	fd		1618583	0					
ANR	1618692	ExpressionStatement	"dprintf ( D_ALWAYS , ""LinuxHibernator: Error writing '%s' to '%s': %s\\n"" , str , file , strerror ( errno ) )"	326:2:8896:9006	1618583	1	True				
ANR	1618693	CallExpression	"dprintf ( D_ALWAYS , ""LinuxHibernator: Error writing '%s' to '%s': %s\\n"" , str , file , strerror ( errno ) )"		1618583	0					
ANR	1618694	Callee	dprintf		1618583	0					
ANR	1618695	Identifier	dprintf		1618583	0					
ANR	1618696	ArgumentList	D_ALWAYS		1618583	1					
ANR	1618697	Argument	D_ALWAYS		1618583	0					
ANR	1618698	Identifier	D_ALWAYS		1618583	0					
ANR	1618699	Argument	"""LinuxHibernator: Error writing '%s' to '%s': %s\\n"""		1618583	1					
ANR	1618700	PrimaryExpression	"""LinuxHibernator: Error writing '%s' to '%s': %s\\n"""		1618583	0					
ANR	1618701	Argument	str		1618583	2					
ANR	1618702	Identifier	str		1618583	0					
ANR	1618703	Argument	file		1618583	3					
ANR	1618704	Identifier	file		1618583	0					
ANR	1618705	Argument	strerror ( errno )		1618583	4					
ANR	1618706	CallExpression	strerror ( errno )		1618583	0					
ANR	1618707	Callee	strerror		1618583	0					
ANR	1618708	Identifier	strerror		1618583	0					
ANR	1618709	ArgumentList	errno		1618583	1					
ANR	1618710	Argument	errno		1618583	0					
ANR	1618711	Identifier	errno		1618583	0					
ANR	1618712	ReturnStatement	return false ;	329:2:9010:9022	1618583	2	True				
ANR	1618713	Identifier	false		1618583	0					
ANR	1618714	ExpressionStatement	close ( fd )	331:1:9028:9039	1618583	7	True				
ANR	1618715	CallExpression	close ( fd )		1618583	0					
ANR	1618716	Callee	close		1618583	0					
ANR	1618717	Identifier	close		1618583	0					
ANR	1618718	ArgumentList	fd		1618583	1					
ANR	1618719	Argument	fd		1618583	0					
ANR	1618720	Identifier	fd		1618583	0					
ANR	1618721	ReturnStatement	return true ;	332:1:9042:9053	1618583	8	True				
ANR	1618722	Identifier	true		1618583	0					
ANR	1618723	ReturnType	bool		1618583	1					
ANR	1618724	Identifier	BaseLinuxHibernator :: writeSysFile		1618583	2					
ANR	1618725	ParameterList	"const char * file , const char * str"		1618583	3					
ANR	1618726	Parameter	const char * file	309:36:8394:8409	1618583	0	True				
ANR	1618727	ParameterType	const char *		1618583	0					
ANR	1618728	Identifier	file		1618583	1					
ANR	1618729	Parameter	const char * str	309:54:8412:8426	1618583	1	True				
ANR	1618730	ParameterType	const char *		1618583	0					
ANR	1618731	Identifier	str		1618583	1					
ANR	1618732	CFGEntryNode	ENTRY		1618583		True				
ANR	1618733	CFGExitNode	EXIT		1618583		True				
ANR	1618734	Symbol	errno		1618583						
ANR	1618735	Symbol	safe_open_wrapper_follow		1618583						
ANR	1618736	Symbol	D_ALWAYS		1618583						
ANR	1618737	Symbol	false		1618583						
ANR	1618738	Symbol	D_FULLDEBUG		1618583						
ANR	1618739	Symbol	set_root_priv		1618583						
ANR	1618740	Symbol	str		1618583						
ANR	1618741	Symbol	p		1618583						
ANR	1618742	Symbol	strerror		1618583						
ANR	1618743	Symbol	strlen		1618583						
ANR	1618744	Symbol	file		1618583						
ANR	1618745	Symbol	len		1618583						
ANR	1618746	Symbol	true		1618583						
ANR	1618747	Symbol	O_WRONLY		1618583						
ANR	1618748	Symbol	write		1618583						
ANR	1618749	Symbol	fd		1618583						
ANR	1618750	Function	BaseLinuxHibernator :: strip	336:0:9107:9310							
ANR	1618751	FunctionDef	BaseLinuxHibernator :: strip (char * s)		1618750	0					
ANR	1618752	CompoundStatement		338:0:9159:9310	1618750	0					
ANR	1618753	IdentifierDeclStatement	int len = strlen ( s ) ;	339:1:9162:9183	1618750	0	True				
ANR	1618754	IdentifierDecl	len = strlen ( s )		1618750	0					
ANR	1618755	IdentifierDeclType	int		1618750	0					
ANR	1618756	Identifier	len		1618750	1					
ANR	1618757	AssignmentExpression	len = strlen ( s )		1618750	2		=			
ANR	1618758	Identifier	len		1618750	0					
ANR	1618759	CallExpression	strlen ( s )		1618750	1					
ANR	1618760	Callee	strlen		1618750	0					
ANR	1618761	Identifier	strlen		1618750	0					
ANR	1618762	ArgumentList	s		1618750	1					
ANR	1618763	Argument	s		1618750	0					
ANR	1618764	Identifier	s		1618750	0					
ANR	1618765	IfStatement	if ( ! len )		1618750	1					
ANR	1618766	Condition	! len	340:6:9191:9194	1618750	0	True				
ANR	1618767	UnaryOperationExpression	! len		1618750	0					
ANR	1618768	UnaryOperator	!		1618750	0					
ANR	1618769	Identifier	len		1618750	1					
ANR	1618770	CompoundStatement		3:12:37:37	1618750	1					
ANR	1618771	ReturnStatement	return s ;	341:2:9201:9209	1618750	0	True				
ANR	1618772	Identifier	s		1618750	0					
ANR	1618773	IdentifierDeclStatement	char * p = s + ( len - 1 ) ;	343:1:9215:9234	1618750	2	True				
ANR	1618774	IdentifierDecl	* p = s + ( len - 1 )		1618750	0					
ANR	1618775	IdentifierDeclType	char *		1618750	0					
ANR	1618776	Identifier	p		1618750	1					
ANR	1618777	AssignmentExpression	* p = s + ( len - 1 )		1618750	2		=			
ANR	1618778	Identifier	p		1618750	0					
ANR	1618779	AdditiveExpression	s + ( len - 1 )		1618750	1		+			
ANR	1618780	Identifier	s		1618750	0					
ANR	1618781	AdditiveExpression	len - 1		1618750	1		-			
ANR	1618782	Identifier	len		1618750	0					
ANR	1618783	PrimaryExpression	1		1618750	1					
ANR	1618784	WhileStatement	while ( len && isspace ( * p ) )		1618750	3					
ANR	1618785	Condition	len && isspace ( * p )	344:8:9244:9261	1618750	0	True				
ANR	1618786	AndExpression	len && isspace ( * p )		1618750	0		&&			
ANR	1618787	Identifier	len		1618750	0					
ANR	1618788	CallExpression	isspace ( * p )		1618750	1					
ANR	1618789	Callee	isspace		1618750	0					
ANR	1618790	Identifier	isspace		1618750	0					
ANR	1618791	ArgumentList	* p		1618750	1					
ANR	1618792	Argument	* p		1618750	0					
ANR	1618793	UnaryOperationExpression	* p		1618750	0					
ANR	1618794	UnaryOperator	*		1618750	0					
ANR	1618795	Identifier	p		1618750	1					
ANR	1618796	CompoundStatement		7:29:105:105	1618750	1					
ANR	1618797	ExpressionStatement	* p = '\\0'	345:2:9269:9278	1618750	0	True				
ANR	1618798	AssignmentExpression	* p = '\\0'		1618750	0		=			
ANR	1618799	UnaryOperationExpression	* p		1618750	0					
ANR	1618800	UnaryOperator	*		1618750	0					
ANR	1618801	Identifier	p		1618750	1					
ANR	1618802	PrimaryExpression	'\\0'		1618750	1					
ANR	1618803	ExpressionStatement	p --	346:2:9282:9285	1618750	1	True				
ANR	1618804	PostIncDecOperationExpression	p --		1618750	0					
ANR	1618805	Identifier	p		1618750	0					
ANR	1618806	IncDec	--		1618750	1					
ANR	1618807	ExpressionStatement	len --	347:2:9289:9294	1618750	2	True				
ANR	1618808	PostIncDecOperationExpression	len --		1618750	0					
ANR	1618809	Identifier	len		1618750	0					
ANR	1618810	IncDec	--		1618750	1					
ANR	1618811	ReturnStatement	return s ;	349:1:9300:9308	1618750	4	True				
ANR	1618812	Identifier	s		1618750	0					
ANR	1618813	ReturnType	char *		1618750	1					
ANR	1618814	Identifier	BaseLinuxHibernator :: strip		1618750	2					
ANR	1618815	ParameterList	char * s		1618750	3					
ANR	1618816	Parameter	char * s	337:29:9143:9149	1618750	0	True				
ANR	1618817	ParameterType	char *		1618750	0					
ANR	1618818	Identifier	s		1618750	1					
ANR	1618819	CFGEntryNode	ENTRY		1618750		True				
ANR	1618820	CFGExitNode	EXIT		1618750		True				
ANR	1618821	Symbol	p		1618750						
ANR	1618822	Symbol	strlen		1618750						
ANR	1618823	Symbol	s		1618750						
ANR	1618824	Symbol	len		1618750						
ANR	1618825	Symbol	isspace		1618750						
ANR	1618826	Symbol	* p		1618750						
ANR	1618827	Function	PmUtilLinuxHibernator :: Detect	356:0:9448:10025							
ANR	1618828	FunctionDef	PmUtilLinuxHibernator :: Detect ()		1618827	0					
ANR	1618829	CompoundStatement		358:0:9492:10025	1618827	0					
ANR	1618830	IdentifierDeclStatement	StatWrapper sw ( PM_UTIL_CHECK ) ;	359:1:9495:9526	1618827	0	True				
ANR	1618831	IdentifierDecl	sw ( PM_UTIL_CHECK )		1618827	0					
ANR	1618832	IdentifierDeclType	StatWrapper		1618827	0					
ANR	1618833	Identifier	sw		1618827	1					
ANR	1618834	Identifier	PM_UTIL_CHECK		1618827	2					
ANR	1618835	IfStatement	if ( sw . GetStatus ( ) != 0 )		1618827	1					
ANR	1618836	Condition	sw . GetStatus ( ) != 0	360:6:9534:9552	1618827	0	True				
ANR	1618837	EqualityExpression	sw . GetStatus ( ) != 0		1618827	0		!=			
ANR	1618838	CallExpression	sw . GetStatus ( )		1618827	0					
ANR	1618839	Callee	sw . GetStatus		1618827	0					
ANR	1618840	MemberAccess	sw . GetStatus		1618827	0					
ANR	1618841	Identifier	sw		1618827	0					
ANR	1618842	Identifier	GetStatus		1618827	1					
ANR	1618843	ArgumentList			1618827	1					
ANR	1618844	PrimaryExpression	0		1618827	1					
ANR	1618845	CompoundStatement		3:28:63:63	1618827	1					
ANR	1618846	ReturnStatement	return false ;	361:2:9560:9572	1618827	0	True				
ANR	1618847	Identifier	false		1618827	0					
ANR	1618848	IdentifierDeclStatement	MyString command ;	364:1:9579:9595	1618827	2	True				
ANR	1618849	IdentifierDecl	command		1618827	0					
ANR	1618850	IdentifierDeclType	MyString		1618827	0					
ANR	1618851	Identifier	command		1618827	1					
ANR	1618852	IdentifierDeclStatement	int status ;	365:1:9598:9610	1618827	3	True				
ANR	1618853	IdentifierDecl	status		1618827	0					
ANR	1618854	IdentifierDeclType	int		1618827	0					
ANR	1618855	Identifier	status		1618827	1					
ANR	1618856	ExpressionStatement	command = PM_UTIL_CHECK	367:1:9614:9637	1618827	4	True				
ANR	1618857	AssignmentExpression	command = PM_UTIL_CHECK		1618827	0		=			
ANR	1618858	Identifier	command		1618827	0					
ANR	1618859	Identifier	PM_UTIL_CHECK		1618827	1					
ANR	1618860	ExpressionStatement	"command += "" --suspend"""	368:1:9640:9663	1618827	5	True				
ANR	1618861	AssignmentExpression	"command += "" --suspend"""		1618827	0		+=			
ANR	1618862	Identifier	command		1618827	0					
ANR	1618863	PrimaryExpression	""" --suspend"""		1618827	1					
ANR	1618864	ExpressionStatement	status = system ( command . Value ( ) )	369:1:9666:9700	1618827	6	True				
ANR	1618865	AssignmentExpression	status = system ( command . Value ( ) )		1618827	0		=			
ANR	1618866	Identifier	status		1618827	0					
ANR	1618867	CallExpression	system ( command . Value ( ) )		1618827	1					
ANR	1618868	Callee	system		1618827	0					
ANR	1618869	Identifier	system		1618827	0					
ANR	1618870	ArgumentList	command . Value ( )		1618827	1					
ANR	1618871	Argument	command . Value ( )		1618827	0					
ANR	1618872	CallExpression	command . Value ( )		1618827	0					
ANR	1618873	Callee	command . Value		1618827	0					
ANR	1618874	MemberAccess	command . Value		1618827	0					
ANR	1618875	Identifier	command		1618827	0					
ANR	1618876	Identifier	Value		1618827	1					
ANR	1618877	ArgumentList			1618827	1					
ANR	1618878	IfStatement	if ( ( status >= 0 ) && ( WEXITSTATUS ( status ) == 0 ) )		1618827	7					
ANR	1618879	Condition	( status >= 0 ) && ( WEXITSTATUS ( status ) == 0 )	370:6:9708:9753	1618827	0	True				
ANR	1618880	AndExpression	( status >= 0 ) && ( WEXITSTATUS ( status ) == 0 )		1618827	0		&&			
ANR	1618881	RelationalExpression	status >= 0		1618827	0		>=			
ANR	1618882	Identifier	status		1618827	0					
ANR	1618883	PrimaryExpression	0		1618827	1					
ANR	1618884	EqualityExpression	WEXITSTATUS ( status ) == 0		1618827	1		==			
ANR	1618885	CallExpression	WEXITSTATUS ( status )		1618827	0					
ANR	1618886	Callee	WEXITSTATUS		1618827	0					
ANR	1618887	Identifier	WEXITSTATUS		1618827	0					
ANR	1618888	ArgumentList	status		1618827	1					
ANR	1618889	Argument	status		1618827	0					
ANR	1618890	Identifier	status		1618827	0					
ANR	1618891	PrimaryExpression	0		1618827	1					
ANR	1618892	CompoundStatement		13:55:264:264	1618827	1					
ANR	1618893	ExpressionStatement	m_hibernator -> addState ( HibernatorBase :: S3 )	371:2:9761:9805	1618827	0	True				
ANR	1618894	CallExpression	m_hibernator -> addState ( HibernatorBase :: S3 )		1618827	0					
ANR	1618895	Callee	m_hibernator -> addState		1618827	0					
ANR	1618896	PtrMemberAccess	m_hibernator -> addState		1618827	0					
ANR	1618897	Identifier	m_hibernator		1618827	0					
ANR	1618898	Identifier	addState		1618827	1					
ANR	1618899	ArgumentList	HibernatorBase :: S3		1618827	1					
ANR	1618900	Argument	HibernatorBase :: S3		1618827	0					
ANR	1618901	Identifier	HibernatorBase :: S3		1618827	0					
ANR	1618902	ExpressionStatement	command = PM_UTIL_CHECK	374:1:9812:9835	1618827	8	True				
ANR	1618903	AssignmentExpression	command = PM_UTIL_CHECK		1618827	0		=			
ANR	1618904	Identifier	command		1618827	0					
ANR	1618905	Identifier	PM_UTIL_CHECK		1618827	1					
ANR	1618906	ExpressionStatement	"command += "" --hibernate"""	375:1:9838:9863	1618827	9	True				
ANR	1618907	AssignmentExpression	"command += "" --hibernate"""		1618827	0		+=			
ANR	1618908	Identifier	command		1618827	0					
ANR	1618909	PrimaryExpression	""" --hibernate"""		1618827	1					
ANR	1618910	ExpressionStatement	status = system ( command . Value ( ) )	376:1:9866:9900	1618827	10	True				
ANR	1618911	AssignmentExpression	status = system ( command . Value ( ) )		1618827	0		=			
ANR	1618912	Identifier	status		1618827	0					
ANR	1618913	CallExpression	system ( command . Value ( ) )		1618827	1					
ANR	1618914	Callee	system		1618827	0					
ANR	1618915	Identifier	system		1618827	0					
ANR	1618916	ArgumentList	command . Value ( )		1618827	1					
ANR	1618917	Argument	command . Value ( )		1618827	0					
ANR	1618918	CallExpression	command . Value ( )		1618827	0					
ANR	1618919	Callee	command . Value		1618827	0					
ANR	1618920	MemberAccess	command . Value		1618827	0					
ANR	1618921	Identifier	command		1618827	0					
ANR	1618922	Identifier	Value		1618827	1					
ANR	1618923	ArgumentList			1618827	1					
ANR	1618924	IfStatement	if ( ( status >= 0 ) && ( WEXITSTATUS ( status ) == 0 ) )		1618827	11					
ANR	1618925	Condition	( status >= 0 ) && ( WEXITSTATUS ( status ) == 0 )	377:6:9908:9953	1618827	0	True				
ANR	1618926	AndExpression	( status >= 0 ) && ( WEXITSTATUS ( status ) == 0 )		1618827	0		&&			
ANR	1618927	RelationalExpression	status >= 0		1618827	0		>=			
ANR	1618928	Identifier	status		1618827	0					
ANR	1618929	PrimaryExpression	0		1618827	1					
ANR	1618930	EqualityExpression	WEXITSTATUS ( status ) == 0		1618827	1		==			
ANR	1618931	CallExpression	WEXITSTATUS ( status )		1618827	0					
ANR	1618932	Callee	WEXITSTATUS		1618827	0					
ANR	1618933	Identifier	WEXITSTATUS		1618827	0					
ANR	1618934	ArgumentList	status		1618827	1					
ANR	1618935	Argument	status		1618827	0					
ANR	1618936	Identifier	status		1618827	0					
ANR	1618937	PrimaryExpression	0		1618827	1					
ANR	1618938	CompoundStatement		20:55:464:464	1618827	1					
ANR	1618939	ExpressionStatement	m_hibernator -> addState ( HibernatorBase :: S4 )	378:2:9961:10005	1618827	0	True				
ANR	1618940	CallExpression	m_hibernator -> addState ( HibernatorBase :: S4 )		1618827	0					
ANR	1618941	Callee	m_hibernator -> addState		1618827	0					
ANR	1618942	PtrMemberAccess	m_hibernator -> addState		1618827	0					
ANR	1618943	Identifier	m_hibernator		1618827	0					
ANR	1618944	Identifier	addState		1618827	1					
ANR	1618945	ArgumentList	HibernatorBase :: S4		1618827	1					
ANR	1618946	Argument	HibernatorBase :: S4		1618827	0					
ANR	1618947	Identifier	HibernatorBase :: S4		1618827	0					
ANR	1618948	ReturnStatement	return true ;	381:1:10012:10023	1618827	12	True				
ANR	1618949	Identifier	true		1618827	0					
ANR	1618950	ReturnType	bool		1618827	1					
ANR	1618951	Identifier	PmUtilLinuxHibernator :: Detect		1618827	2					
ANR	1618952	ParameterList			1618827	3					
ANR	1618953	CFGEntryNode	ENTRY		1618827		True				
ANR	1618954	CFGExitNode	EXIT		1618827		True				
ANR	1618955	Symbol	HibernatorBase :: S3		1618827						
ANR	1618956	Symbol	sw . GetStatus		1618827						
ANR	1618957	Symbol	sw		1618827						
ANR	1618958	Symbol	command . Value		1618827						
ANR	1618959	Symbol	false		1618827						
ANR	1618960	Symbol	WEXITSTATUS		1618827						
ANR	1618961	Symbol	command		1618827						
ANR	1618962	Symbol	HibernatorBase :: S4		1618827						
ANR	1618963	Symbol	system		1618827						
ANR	1618964	Symbol	true		1618827						
ANR	1618965	Symbol	PM_UTIL_CHECK		1618827						
ANR	1618966	Symbol	m_hibernator		1618827						
ANR	1618967	Symbol	status		1618827						
ANR	1618968	Function	PmUtilLinuxHibernator :: RunCmd	384:0:10028:10507							
ANR	1618969	FunctionDef	PmUtilLinuxHibernator :: RunCmd (const char * command)		1618968	0					
ANR	1618970	CompoundStatement		386:0:10093:10507	1618968	0					
ANR	1618971	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""LinuxHibernator: running '%s'\\n"" , command )"	387:1:10096:10162	1618968	0	True				
ANR	1618972	CallExpression	"dprintf ( D_FULLDEBUG , ""LinuxHibernator: running '%s'\\n"" , command )"		1618968	0					
ANR	1618973	Callee	dprintf		1618968	0					
ANR	1618974	Identifier	dprintf		1618968	0					
ANR	1618975	ArgumentList	D_FULLDEBUG		1618968	1					
ANR	1618976	Argument	D_FULLDEBUG		1618968	0					
ANR	1618977	Identifier	D_FULLDEBUG		1618968	0					
ANR	1618978	Argument	"""LinuxHibernator: running '%s'\\n"""		1618968	1					
ANR	1618979	PrimaryExpression	"""LinuxHibernator: running '%s'\\n"""		1618968	0					
ANR	1618980	Argument	command		1618968	2					
ANR	1618981	Identifier	command		1618968	0					
ANR	1618982	IdentifierDeclStatement	int status = system ( command ) ;	389:1:10166:10196	1618968	1	True				
ANR	1618983	IdentifierDecl	status = system ( command )		1618968	0					
ANR	1618984	IdentifierDeclType	int		1618968	0					
ANR	1618985	Identifier	status		1618968	1					
ANR	1618986	AssignmentExpression	status = system ( command )		1618968	2		=			
ANR	1618987	Identifier	status		1618968	0					
ANR	1618988	CallExpression	system ( command )		1618968	1					
ANR	1618989	Callee	system		1618968	0					
ANR	1618990	Identifier	system		1618968	0					
ANR	1618991	ArgumentList	command		1618968	1					
ANR	1618992	Argument	command		1618968	0					
ANR	1618993	Identifier	command		1618968	0					
ANR	1618994	IfStatement	if ( ( status >= 0 ) && ( WEXITSTATUS ( status ) == 0 ) )		1618968	2					
ANR	1618995	Condition	( status >= 0 ) && ( WEXITSTATUS ( status ) == 0 )	390:6:10204:10249	1618968	0	True				
ANR	1618996	AndExpression	( status >= 0 ) && ( WEXITSTATUS ( status ) == 0 )		1618968	0		&&			
ANR	1618997	RelationalExpression	status >= 0		1618968	0		>=			
ANR	1618998	Identifier	status		1618968	0					
ANR	1618999	PrimaryExpression	0		1618968	1					
ANR	1619000	EqualityExpression	WEXITSTATUS ( status ) == 0		1618968	1		==			
ANR	1619001	CallExpression	WEXITSTATUS ( status )		1618968	0					
ANR	1619002	Callee	WEXITSTATUS		1618968	0					
ANR	1619003	Identifier	WEXITSTATUS		1618968	0					
ANR	1619004	ArgumentList	status		1618968	1					
ANR	1619005	Argument	status		1618968	0					
ANR	1619006	Identifier	status		1618968	0					
ANR	1619007	PrimaryExpression	0		1618968	1					
ANR	1619008	CompoundStatement		5:55:159:159	1618968	1					
ANR	1619009	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""LinuxHibernator: '%s' success!\\n"" , command )"	391:2:10257:10324	1618968	0	True				
ANR	1619010	CallExpression	"dprintf ( D_FULLDEBUG , ""LinuxHibernator: '%s' success!\\n"" , command )"		1618968	0					
ANR	1619011	Callee	dprintf		1618968	0					
ANR	1619012	Identifier	dprintf		1618968	0					
ANR	1619013	ArgumentList	D_FULLDEBUG		1618968	1					
ANR	1619014	Argument	D_FULLDEBUG		1618968	0					
ANR	1619015	Identifier	D_FULLDEBUG		1618968	0					
ANR	1619016	Argument	"""LinuxHibernator: '%s' success!\\n"""		1618968	1					
ANR	1619017	PrimaryExpression	"""LinuxHibernator: '%s' success!\\n"""		1618968	0					
ANR	1619018	Argument	command		1618968	2					
ANR	1619019	Identifier	command		1618968	0					
ANR	1619020	ReturnStatement	return true ;	392:2:10328:10339	1618968	1	True				
ANR	1619021	Identifier	true		1618968	0					
ANR	1619022	ElseStatement	else		1618968	0					
ANR	1619023	CompoundStatement		9:6:256:256	1618968	0					
ANR	1619024	ExpressionStatement	"dprintf ( D_ALWAYS , ""LinuxHibernator: '%s' failed: %s exit=%d!\\n"" , command , errno ? strerror ( errno ) : """" , WEXITSTATUS ( status ) )"	395:2:10354:10485	1618968	0	True				
ANR	1619025	CallExpression	"dprintf ( D_ALWAYS , ""LinuxHibernator: '%s' failed: %s exit=%d!\\n"" , command , errno ? strerror ( errno ) : """" , WEXITSTATUS ( status ) )"		1618968	0					
ANR	1619026	Callee	dprintf		1618968	0					
ANR	1619027	Identifier	dprintf		1618968	0					
ANR	1619028	ArgumentList	D_ALWAYS		1618968	1					
ANR	1619029	Argument	D_ALWAYS		1618968	0					
ANR	1619030	Identifier	D_ALWAYS		1618968	0					
ANR	1619031	Argument	"""LinuxHibernator: '%s' failed: %s exit=%d!\\n"""		1618968	1					
ANR	1619032	PrimaryExpression	"""LinuxHibernator: '%s' failed: %s exit=%d!\\n"""		1618968	0					
ANR	1619033	Argument	command		1618968	2					
ANR	1619034	Identifier	command		1618968	0					
ANR	1619035	Argument	"errno ? strerror ( errno ) : """""		1618968	3					
ANR	1619036	ConditionalExpression	"errno ? strerror ( errno ) : """""		1618968	0					
ANR	1619037	Condition	errno		1618968	0					
ANR	1619038	Identifier	errno		1618968	0					
ANR	1619039	CallExpression	strerror ( errno )		1618968	1					
ANR	1619040	Callee	strerror		1618968	0					
ANR	1619041	Identifier	strerror		1618968	0					
ANR	1619042	ArgumentList	errno		1618968	1					
ANR	1619043	Argument	errno		1618968	0					
ANR	1619044	Identifier	errno		1618968	0					
ANR	1619045	PrimaryExpression	""""""		1618968	2					
ANR	1619046	Argument	WEXITSTATUS ( status )		1618968	4					
ANR	1619047	CallExpression	WEXITSTATUS ( status )		1618968	0					
ANR	1619048	Callee	WEXITSTATUS		1618968	0					
ANR	1619049	Identifier	WEXITSTATUS		1618968	0					
ANR	1619050	ArgumentList	status		1618968	1					
ANR	1619051	Argument	status		1618968	0					
ANR	1619052	Identifier	status		1618968	0					
ANR	1619053	ReturnStatement	return false ;	397:2:10489:10501	1618968	1	True				
ANR	1619054	Identifier	false		1618968	0					
ANR	1619055	ReturnType	bool		1618968	1					
ANR	1619056	Identifier	PmUtilLinuxHibernator :: RunCmd		1618968	2					
ANR	1619057	ParameterList	const char * command		1618968	3					
ANR	1619058	Parameter	const char * command	385:32:10065:10083	1618968	0	True				
ANR	1619059	ParameterType	const char *		1618968	0					
ANR	1619060	Identifier	command		1618968	1					
ANR	1619061	CFGEntryNode	ENTRY		1618968		True				
ANR	1619062	CFGExitNode	EXIT		1618968		True				
ANR	1619063	Symbol	strerror		1618968						
ANR	1619064	Symbol	errno		1618968						
ANR	1619065	Symbol	system		1618968						
ANR	1619066	Symbol	true		1618968						
ANR	1619067	Symbol	D_ALWAYS		1618968						
ANR	1619068	Symbol	false		1618968						
ANR	1619069	Symbol	D_FULLDEBUG		1618968						
ANR	1619070	Symbol	WEXITSTATUS		1618968						
ANR	1619071	Symbol	command		1618968						
ANR	1619072	Symbol	status		1618968						
ANR	1619073	Function	SysIfLinuxHibernator :: Detect	428:0:11046:12227							
ANR	1619074	FunctionDef	SysIfLinuxHibernator :: Detect ()		1619073	0					
ANR	1619075	CompoundStatement		430:0:11089:12227	1619073	0					
ANR	1619076	IdentifierDeclStatement	FILE * fp ;	431:1:11092:11100	1619073	0	True				
ANR	1619077	IdentifierDecl	* fp		1619073	0					
ANR	1619078	IdentifierDeclType	FILE *		1619073	0					
ANR	1619079	Identifier	fp		1619073	1					
ANR	1619080	IdentifierDeclStatement	char buf [ 128 ] ;	432:1:11103:11116	1619073	1	True				
ANR	1619081	IdentifierDecl	buf [ 128 ]		1619073	0					
ANR	1619082	IdentifierDeclType	char [ 128 ]		1619073	0					
ANR	1619083	Identifier	buf		1619073	1					
ANR	1619084	PrimaryExpression	128		1619073	2					
ANR	1619085	ExpressionStatement	"memset ( buf , 0 , sizeof ( buf ) )"	434:1:11120:11149	1619073	2	True				
ANR	1619086	CallExpression	"memset ( buf , 0 , sizeof ( buf ) )"		1619073	0					
ANR	1619087	Callee	memset		1619073	0					
ANR	1619088	Identifier	memset		1619073	0					
ANR	1619089	ArgumentList	buf		1619073	1					
ANR	1619090	Argument	buf		1619073	0					
ANR	1619091	Identifier	buf		1619073	0					
ANR	1619092	Argument	0		1619073	1					
ANR	1619093	PrimaryExpression	0		1619073	0					
ANR	1619094	Argument	sizeof ( buf )		1619073	2					
ANR	1619095	SizeofExpression	sizeof ( buf )		1619073	0					
ANR	1619096	Sizeof	sizeof		1619073	0					
ANR	1619097	SizeofOperand	buf		1619073	1					
ANR	1619098	ExpressionStatement	"fp = safe_fopen_wrapper ( SYS_POWER_FILE , ""r"" )"	437:1:11184:11230	1619073	3	True				
ANR	1619099	AssignmentExpression	"fp = safe_fopen_wrapper ( SYS_POWER_FILE , ""r"" )"		1619073	0		=			
ANR	1619100	Identifier	fp		1619073	0					
ANR	1619101	CallExpression	"safe_fopen_wrapper ( SYS_POWER_FILE , ""r"" )"		1619073	1					
ANR	1619102	Callee	safe_fopen_wrapper		1619073	0					
ANR	1619103	Identifier	safe_fopen_wrapper		1619073	0					
ANR	1619104	ArgumentList	SYS_POWER_FILE		1619073	1					
ANR	1619105	Argument	SYS_POWER_FILE		1619073	0					
ANR	1619106	Identifier	SYS_POWER_FILE		1619073	0					
ANR	1619107	Argument	"""r"""		1619073	1					
ANR	1619108	PrimaryExpression	"""r"""		1619073	0					
ANR	1619109	IfStatement	if ( NULL == fp )		1619073	4					
ANR	1619110	Condition	NULL == fp	438:6:11238:11247	1619073	0	True				
ANR	1619111	EqualityExpression	NULL == fp		1619073	0		==			
ANR	1619112	Identifier	NULL		1619073	0					
ANR	1619113	Identifier	fp		1619073	1					
ANR	1619114	CompoundStatement		9:19:161:161	1619073	1					
ANR	1619115	ReturnStatement	return false ;	439:2:11255:11267	1619073	0	True				
ANR	1619116	Identifier	false		1619073	0					
ANR	1619117	IfStatement	"if ( fgets ( buf , sizeof ( buf ) - 1 , fp ) )"		1619073	5					
ANR	1619118	Condition	"fgets ( buf , sizeof ( buf ) - 1 , fp )"	442:6:11279:11309	1619073	0	True				
ANR	1619119	CallExpression	"fgets ( buf , sizeof ( buf ) - 1 , fp )"		1619073	0					
ANR	1619120	Callee	fgets		1619073	0					
ANR	1619121	Identifier	fgets		1619073	0					
ANR	1619122	ArgumentList	buf		1619073	1					
ANR	1619123	Argument	buf		1619073	0					
ANR	1619124	Identifier	buf		1619073	0					
ANR	1619125	Argument	sizeof ( buf ) - 1		1619073	1					
ANR	1619126	AdditiveExpression	sizeof ( buf ) - 1		1619073	0		-			
ANR	1619127	SizeofExpression	sizeof ( buf )		1619073	0					
ANR	1619128	Sizeof	sizeof		1619073	0					
ANR	1619129	SizeofOperand	buf		1619073	1					
ANR	1619130	PrimaryExpression	1		1619073	1					
ANR	1619131	Argument	fp		1619073	2					
ANR	1619132	Identifier	fp		1619073	0					
ANR	1619133	CompoundStatement		15:2:241:266	1619073	1					
ANR	1619134	ExpressionStatement	strip ( buf )	443:2:11317:11327	1619073	0	True				
ANR	1619135	CallExpression	strip ( buf )		1619073	0					
ANR	1619136	Callee	strip		1619073	0					
ANR	1619137	Identifier	strip		1619073	0					
ANR	1619138	ArgumentList	buf		1619073	1					
ANR	1619139	Argument	buf		1619073	0					
ANR	1619140	Identifier	buf		1619073	0					
ANR	1619141	IdentifierDeclStatement	"char * token , * save = NULL ;"	444:2:11331:11356	1619073	1	True				
ANR	1619142	IdentifierDecl	* token		1619073	0					
ANR	1619143	IdentifierDeclType	char *		1619073	0					
ANR	1619144	Identifier	token		1619073	1					
ANR	1619145	IdentifierDecl	* save = NULL		1619073	1					
ANR	1619146	IdentifierDeclType	char *		1619073	0					
ANR	1619147	Identifier	save		1619073	1					
ANR	1619148	AssignmentExpression	* save = NULL		1619073	2		=			
ANR	1619149	Identifier	NULL		1619073	0					
ANR	1619150	Identifier	NULL		1619073	1					
ANR	1619151	ExpressionStatement	"token = strtok_r ( buf , "" "" , & save )"	446:2:11361:11396	1619073	2	True				
ANR	1619152	AssignmentExpression	"token = strtok_r ( buf , "" "" , & save )"		1619073	0		=			
ANR	1619153	Identifier	token		1619073	0					
ANR	1619154	CallExpression	"strtok_r ( buf , "" "" , & save )"		1619073	1					
ANR	1619155	Callee	strtok_r		1619073	0					
ANR	1619156	Identifier	strtok_r		1619073	0					
ANR	1619157	ArgumentList	buf		1619073	1					
ANR	1619158	Argument	buf		1619073	0					
ANR	1619159	Identifier	buf		1619073	0					
ANR	1619160	Argument	""" """		1619073	1					
ANR	1619161	PrimaryExpression	""" """		1619073	0					
ANR	1619162	Argument	& save		1619073	2					
ANR	1619163	UnaryOperationExpression	& save		1619073	0					
ANR	1619164	UnaryOperator	&		1619073	0					
ANR	1619165	Identifier	save		1619073	1					
ANR	1619166	WhileStatement	while ( token )		1619073	3					
ANR	1619167	Condition	token	447:9:11407:11411	1619073	0	True				
ANR	1619168	Identifier	token		1619073	0					
ANR	1619169	CompoundStatement		18:17:325:325	1619073	1					
ANR	1619170	ExpressionStatement	m_hibernator -> addState ( token )	448:3:11420:11451	1619073	0	True				
ANR	1619171	CallExpression	m_hibernator -> addState ( token )		1619073	0					
ANR	1619172	Callee	m_hibernator -> addState		1619073	0					
ANR	1619173	PtrMemberAccess	m_hibernator -> addState		1619073	0					
ANR	1619174	Identifier	m_hibernator		1619073	0					
ANR	1619175	Identifier	addState		1619073	1					
ANR	1619176	ArgumentList	token		1619073	1					
ANR	1619177	Argument	token		1619073	0					
ANR	1619178	Identifier	token		1619073	0					
ANR	1619179	ExpressionStatement	"token = strtok_r ( NULL , "" "" , & save )"	449:3:11456:11492	1619073	1	True				
ANR	1619180	AssignmentExpression	"token = strtok_r ( NULL , "" "" , & save )"		1619073	0		=			
ANR	1619181	Identifier	token		1619073	0					
ANR	1619182	CallExpression	"strtok_r ( NULL , "" "" , & save )"		1619073	1					
ANR	1619183	Callee	strtok_r		1619073	0					
ANR	1619184	Identifier	strtok_r		1619073	0					
ANR	1619185	ArgumentList	NULL		1619073	1					
ANR	1619186	Argument	NULL		1619073	0					
ANR	1619187	Identifier	NULL		1619073	0					
ANR	1619188	Argument	""" """		1619073	1					
ANR	1619189	PrimaryExpression	""" """		1619073	0					
ANR	1619190	Argument	& save		1619073	2					
ANR	1619191	UnaryOperationExpression	& save		1619073	0					
ANR	1619192	UnaryOperator	&		1619073	0					
ANR	1619193	Identifier	save		1619073	1					
ANR	1619194	ExpressionStatement	fclose ( fp )	452:1:11502:11514	1619073	6	True				
ANR	1619195	CallExpression	fclose ( fp )		1619073	0					
ANR	1619196	Callee	fclose		1619073	0					
ANR	1619197	Identifier	fclose		1619073	0					
ANR	1619198	ArgumentList	fp		1619073	1					
ANR	1619199	Argument	fp		1619073	0					
ANR	1619200	Identifier	fp		1619073	0					
ANR	1619201	ExpressionStatement	"fp = safe_fopen_wrapper ( SYS_DISK_FILE , ""r"" )"	455:1:11594:11639	1619073	7	True				
ANR	1619202	AssignmentExpression	"fp = safe_fopen_wrapper ( SYS_DISK_FILE , ""r"" )"		1619073	0		=			
ANR	1619203	Identifier	fp		1619073	0					
ANR	1619204	CallExpression	"safe_fopen_wrapper ( SYS_DISK_FILE , ""r"" )"		1619073	1					
ANR	1619205	Callee	safe_fopen_wrapper		1619073	0					
ANR	1619206	Identifier	safe_fopen_wrapper		1619073	0					
ANR	1619207	ArgumentList	SYS_DISK_FILE		1619073	1					
ANR	1619208	Argument	SYS_DISK_FILE		1619073	0					
ANR	1619209	Identifier	SYS_DISK_FILE		1619073	0					
ANR	1619210	Argument	"""r"""		1619073	1					
ANR	1619211	PrimaryExpression	"""r"""		1619073	0					
ANR	1619212	IfStatement	if ( NULL == fp )		1619073	8					
ANR	1619213	Condition	NULL == fp	456:6:11647:11656	1619073	0	True				
ANR	1619214	EqualityExpression	NULL == fp		1619073	0		==			
ANR	1619215	Identifier	NULL		1619073	0					
ANR	1619216	Identifier	fp		1619073	1					
ANR	1619217	CompoundStatement		27:19:570:570	1619073	1					
ANR	1619218	ReturnStatement	return true ;	457:2:11664:11675	1619073	0	True				
ANR	1619219	Identifier	true		1619073	0					
ANR	1619220	IfStatement	"if ( fgets ( buf , sizeof ( buf ) - 1 , fp ) )"		1619073	9					
ANR	1619221	Condition	"fgets ( buf , sizeof ( buf ) - 1 , fp )"	459:6:11686:11716	1619073	0	True				
ANR	1619222	CallExpression	"fgets ( buf , sizeof ( buf ) - 1 , fp )"		1619073	0					
ANR	1619223	Callee	fgets		1619073	0					
ANR	1619224	Identifier	fgets		1619073	0					
ANR	1619225	ArgumentList	buf		1619073	1					
ANR	1619226	Argument	buf		1619073	0					
ANR	1619227	Identifier	buf		1619073	0					
ANR	1619228	Argument	sizeof ( buf ) - 1		1619073	1					
ANR	1619229	AdditiveExpression	sizeof ( buf ) - 1		1619073	0		-			
ANR	1619230	SizeofExpression	sizeof ( buf )		1619073	0					
ANR	1619231	Sizeof	sizeof		1619073	0					
ANR	1619232	SizeofOperand	buf		1619073	1					
ANR	1619233	PrimaryExpression	1		1619073	1					
ANR	1619234	Argument	fp		1619073	2					
ANR	1619235	Identifier	fp		1619073	0					
ANR	1619236	CompoundStatement		32:2:648:673	1619073	1					
ANR	1619237	ExpressionStatement	strip ( buf )	460:2:11724:11734	1619073	0	True				
ANR	1619238	CallExpression	strip ( buf )		1619073	0					
ANR	1619239	Callee	strip		1619073	0					
ANR	1619240	Identifier	strip		1619073	0					
ANR	1619241	ArgumentList	buf		1619073	1					
ANR	1619242	Argument	buf		1619073	0					
ANR	1619243	Identifier	buf		1619073	0					
ANR	1619244	IdentifierDeclStatement	"char * token , * save = NULL ;"	461:2:11738:11763	1619073	1	True				
ANR	1619245	IdentifierDecl	* token		1619073	0					
ANR	1619246	IdentifierDeclType	char *		1619073	0					
ANR	1619247	Identifier	token		1619073	1					
ANR	1619248	IdentifierDecl	* save = NULL		1619073	1					
ANR	1619249	IdentifierDeclType	char *		1619073	0					
ANR	1619250	Identifier	save		1619073	1					
ANR	1619251	AssignmentExpression	* save = NULL		1619073	2		=			
ANR	1619252	Identifier	NULL		1619073	0					
ANR	1619253	Identifier	NULL		1619073	1					
ANR	1619254	ExpressionStatement	"token = strtok_r ( buf , "" "" , & save )"	463:2:11768:11803	1619073	2	True				
ANR	1619255	AssignmentExpression	"token = strtok_r ( buf , "" "" , & save )"		1619073	0		=			
ANR	1619256	Identifier	token		1619073	0					
ANR	1619257	CallExpression	"strtok_r ( buf , "" "" , & save )"		1619073	1					
ANR	1619258	Callee	strtok_r		1619073	0					
ANR	1619259	Identifier	strtok_r		1619073	0					
ANR	1619260	ArgumentList	buf		1619073	1					
ANR	1619261	Argument	buf		1619073	0					
ANR	1619262	Identifier	buf		1619073	0					
ANR	1619263	Argument	""" """		1619073	1					
ANR	1619264	PrimaryExpression	""" """		1619073	0					
ANR	1619265	Argument	& save		1619073	2					
ANR	1619266	UnaryOperationExpression	& save		1619073	0					
ANR	1619267	UnaryOperator	&		1619073	0					
ANR	1619268	Identifier	save		1619073	1					
ANR	1619269	WhileStatement	while ( token )		1619073	3					
ANR	1619270	Condition	token	464:9:11814:11818	1619073	0	True				
ANR	1619271	Identifier	token		1619073	0					
ANR	1619272	CompoundStatement		36:3:737:762	1619073	1					
ANR	1619273	IdentifierDeclStatement	int len = strlen ( token ) ;	465:3:11827:11852	1619073	0	True				
ANR	1619274	IdentifierDecl	len = strlen ( token )		1619073	0					
ANR	1619275	IdentifierDeclType	int		1619073	0					
ANR	1619276	Identifier	len		1619073	1					
ANR	1619277	AssignmentExpression	len = strlen ( token )		1619073	2		=			
ANR	1619278	Identifier	len		1619073	0					
ANR	1619279	CallExpression	strlen ( token )		1619073	1					
ANR	1619280	Callee	strlen		1619073	0					
ANR	1619281	Identifier	strlen		1619073	0					
ANR	1619282	ArgumentList	token		1619073	1					
ANR	1619283	Argument	token		1619073	0					
ANR	1619284	Identifier	token		1619073	0					
ANR	1619285	IfStatement	if ( token [ 0 ] == '[' && token [ len ] == ']' )		1619073	1					
ANR	1619286	Condition	token [ 0 ] == '[' && token [ len ] == ']'	466:8:11862:11897	1619073	0	True				
ANR	1619287	AndExpression	token [ 0 ] == '[' && token [ len ] == ']'		1619073	0		&&			
ANR	1619288	EqualityExpression	token [ 0 ] == '['		1619073	0		==			
ANR	1619289	ArrayIndexing	token [ 0 ]		1619073	0					
ANR	1619290	Identifier	token		1619073	0					
ANR	1619291	PrimaryExpression	0		1619073	1					
ANR	1619292	PrimaryExpression	'['		1619073	1					
ANR	1619293	EqualityExpression	token [ len ] == ']'		1619073	1		==			
ANR	1619294	ArrayIndexing	token [ len ]		1619073	0					
ANR	1619295	Identifier	token		1619073	0					
ANR	1619296	Identifier	len		1619073	1					
ANR	1619297	PrimaryExpression	']'		1619073	1					
ANR	1619298	CompoundStatement		37:47:811:811	1619073	1					
ANR	1619299	ExpressionStatement	token [ len ] = '\\0'	467:4:11907:11924	1619073	0	True				
ANR	1619300	AssignmentExpression	token [ len ] = '\\0'		1619073	0		=			
ANR	1619301	ArrayIndexing	token [ len ]		1619073	0					
ANR	1619302	Identifier	token		1619073	0					
ANR	1619303	Identifier	len		1619073	1					
ANR	1619304	PrimaryExpression	'\\0'		1619073	1					
ANR	1619305	ExpressionStatement	token ++	468:4:11930:11937	1619073	1	True				
ANR	1619306	PostIncDecOperationExpression	token ++		1619073	0					
ANR	1619307	Identifier	token		1619073	0					
ANR	1619308	IncDec	++		1619073	1					
ANR	1619309	IfStatement	"if ( strcmp ( token , ""platform"" ) == 0 )"		1619073	2					
ANR	1619310	Condition	"strcmp ( token , ""platform"" ) == 0"	470:8:11952:11983	1619073	0	True				
ANR	1619311	EqualityExpression	"strcmp ( token , ""platform"" ) == 0"		1619073	0		==			
ANR	1619312	CallExpression	"strcmp ( token , ""platform"" )"		1619073	0					
ANR	1619313	Callee	strcmp		1619073	0					
ANR	1619314	Identifier	strcmp		1619073	0					
ANR	1619315	ArgumentList	token		1619073	1					
ANR	1619316	Argument	token		1619073	0					
ANR	1619317	Identifier	token		1619073	0					
ANR	1619318	Argument	"""platform"""		1619073	1					
ANR	1619319	PrimaryExpression	"""platform"""		1619073	0					
ANR	1619320	PrimaryExpression	0		1619073	1					
ANR	1619321	CompoundStatement		41:43:897:897	1619073	1					
ANR	1619322	ExpressionStatement	m_hibernator -> addState ( HibernatorBase :: S4 )	471:4:11993:12037	1619073	0	True				
ANR	1619323	CallExpression	m_hibernator -> addState ( HibernatorBase :: S4 )		1619073	0					
ANR	1619324	Callee	m_hibernator -> addState		1619073	0					
ANR	1619325	PtrMemberAccess	m_hibernator -> addState		1619073	0					
ANR	1619326	Identifier	m_hibernator		1619073	0					
ANR	1619327	Identifier	addState		1619073	1					
ANR	1619328	ArgumentList	HibernatorBase :: S4		1619073	1					
ANR	1619329	Argument	HibernatorBase :: S4		1619073	0					
ANR	1619330	Identifier	HibernatorBase :: S4		1619073	0					
ANR	1619331	ElseStatement	else		1619073	0					
ANR	1619332	IfStatement	"if ( strcmp ( token , ""shutdown"" ) == 0 )"		1619073	0					
ANR	1619333	Condition	"strcmp ( token , ""shutdown"" ) == 0"	473:13:12057:12088	1619073	0	True				
ANR	1619334	EqualityExpression	"strcmp ( token , ""shutdown"" ) == 0"		1619073	0		==			
ANR	1619335	CallExpression	"strcmp ( token , ""shutdown"" )"		1619073	0					
ANR	1619336	Callee	strcmp		1619073	0					
ANR	1619337	Identifier	strcmp		1619073	0					
ANR	1619338	ArgumentList	token		1619073	1					
ANR	1619339	Argument	token		1619073	0					
ANR	1619340	Identifier	token		1619073	0					
ANR	1619341	Argument	"""shutdown"""		1619073	1					
ANR	1619342	PrimaryExpression	"""shutdown"""		1619073	0					
ANR	1619343	PrimaryExpression	0		1619073	1					
ANR	1619344	CompoundStatement		44:48:1002:1002	1619073	1					
ANR	1619345	ExpressionStatement	m_hibernator -> addState ( HibernatorBase :: S5 )	474:4:12098:12142	1619073	0	True				
ANR	1619346	CallExpression	m_hibernator -> addState ( HibernatorBase :: S5 )		1619073	0					
ANR	1619347	Callee	m_hibernator -> addState		1619073	0					
ANR	1619348	PtrMemberAccess	m_hibernator -> addState		1619073	0					
ANR	1619349	Identifier	m_hibernator		1619073	0					
ANR	1619350	Identifier	addState		1619073	1					
ANR	1619351	ArgumentList	HibernatorBase :: S5		1619073	1					
ANR	1619352	Argument	HibernatorBase :: S5		1619073	0					
ANR	1619353	Identifier	HibernatorBase :: S5		1619073	0					
ANR	1619354	ExpressionStatement	"token = strtok_r ( NULL , "" "" , & save )"	476:3:12152:12188	1619073	3	True				
ANR	1619355	AssignmentExpression	"token = strtok_r ( NULL , "" "" , & save )"		1619073	0		=			
ANR	1619356	Identifier	token		1619073	0					
ANR	1619357	CallExpression	"strtok_r ( NULL , "" "" , & save )"		1619073	1					
ANR	1619358	Callee	strtok_r		1619073	0					
ANR	1619359	Identifier	strtok_r		1619073	0					
ANR	1619360	ArgumentList	NULL		1619073	1					
ANR	1619361	Argument	NULL		1619073	0					
ANR	1619362	Identifier	NULL		1619073	0					
ANR	1619363	Argument	""" """		1619073	1					
ANR	1619364	PrimaryExpression	""" """		1619073	0					
ANR	1619365	Argument	& save		1619073	2					
ANR	1619366	UnaryOperationExpression	& save		1619073	0					
ANR	1619367	UnaryOperator	&		1619073	0					
ANR	1619368	Identifier	save		1619073	1					
ANR	1619369	ExpressionStatement	fclose ( fp )	479:1:12198:12210	1619073	10	True				
ANR	1619370	CallExpression	fclose ( fp )		1619073	0					
ANR	1619371	Callee	fclose		1619073	0					
ANR	1619372	Identifier	fclose		1619073	0					
ANR	1619373	ArgumentList	fp		1619073	1					
ANR	1619374	Argument	fp		1619073	0					
ANR	1619375	Identifier	fp		1619073	0					
ANR	1619376	ReturnStatement	return true ;	481:1:12214:12225	1619073	11	True				
ANR	1619377	Identifier	true		1619073	0					
ANR	1619378	ReturnType	bool		1619073	1					
ANR	1619379	Identifier	SysIfLinuxHibernator :: Detect		1619073	2					
ANR	1619380	ParameterList			1619073	3					
ANR	1619381	CFGEntryNode	ENTRY		1619073		True				
ANR	1619382	CFGExitNode	EXIT		1619073		True				
ANR	1619383	Symbol	strcmp		1619073						
ANR	1619384	Symbol	NULL		1619073						
ANR	1619385	Symbol	safe_fopen_wrapper		1619073						
ANR	1619386	Symbol	& save		1619073						
ANR	1619387	Symbol	false		1619073						
ANR	1619388	Symbol	save		1619073						
ANR	1619389	Symbol	SYS_DISK_FILE		1619073						
ANR	1619390	Symbol	fp		1619073						
ANR	1619391	Symbol	strtok_r		1619073						
ANR	1619392	Symbol	fgets		1619073						
ANR	1619393	Symbol	HibernatorBase :: S5		1619073						
ANR	1619394	Symbol	token		1619073						
ANR	1619395	Symbol	HibernatorBase :: S4		1619073						
ANR	1619396	Symbol	strlen		1619073						
ANR	1619397	Symbol	buf		1619073						
ANR	1619398	Symbol	SYS_POWER_FILE		1619073						
ANR	1619399	Symbol	len		1619073						
ANR	1619400	Symbol	* token		1619073						
ANR	1619401	Symbol	true		1619073						
ANR	1619402	Symbol	m_hibernator		1619073						
ANR	1619403	Symbol	* len		1619073						
ANR	1619404	Function	ProcIfLinuxHibernator :: Detect	509:0:12856:13313							
ANR	1619405	FunctionDef	ProcIfLinuxHibernator :: Detect ()		1619404	0					
ANR	1619406	CompoundStatement		511:0:12900:13313	1619404	0					
ANR	1619407	IdentifierDeclStatement	FILE * fp ;	512:1:12903:12911	1619404	0	True				
ANR	1619408	IdentifierDecl	* fp		1619404	0					
ANR	1619409	IdentifierDeclType	FILE *		1619404	0					
ANR	1619410	Identifier	fp		1619404	1					
ANR	1619411	IdentifierDeclStatement	char buf [ 128 ] ;	513:1:12914:12927	1619404	1	True				
ANR	1619412	IdentifierDecl	buf [ 128 ]		1619404	0					
ANR	1619413	IdentifierDeclType	char [ 128 ]		1619404	0					
ANR	1619414	Identifier	buf		1619404	1					
ANR	1619415	PrimaryExpression	128		1619404	2					
ANR	1619416	ExpressionStatement	"memset ( buf , 0 , sizeof ( buf ) )"	516:1:12949:12978	1619404	2	True				
ANR	1619417	CallExpression	"memset ( buf , 0 , sizeof ( buf ) )"		1619404	0					
ANR	1619418	Callee	memset		1619404	0					
ANR	1619419	Identifier	memset		1619404	0					
ANR	1619420	ArgumentList	buf		1619404	1					
ANR	1619421	Argument	buf		1619404	0					
ANR	1619422	Identifier	buf		1619404	0					
ANR	1619423	Argument	0		1619404	1					
ANR	1619424	PrimaryExpression	0		1619404	0					
ANR	1619425	Argument	sizeof ( buf )		1619404	2					
ANR	1619426	SizeofExpression	sizeof ( buf )		1619404	0					
ANR	1619427	Sizeof	sizeof		1619404	0					
ANR	1619428	SizeofOperand	buf		1619404	1					
ANR	1619429	ExpressionStatement	"fp = safe_fopen_wrapper ( PROC_POWER_FILE , ""r"" )"	517:1:12981:13028	1619404	3	True				
ANR	1619430	AssignmentExpression	"fp = safe_fopen_wrapper ( PROC_POWER_FILE , ""r"" )"		1619404	0		=			
ANR	1619431	Identifier	fp		1619404	0					
ANR	1619432	CallExpression	"safe_fopen_wrapper ( PROC_POWER_FILE , ""r"" )"		1619404	1					
ANR	1619433	Callee	safe_fopen_wrapper		1619404	0					
ANR	1619434	Identifier	safe_fopen_wrapper		1619404	0					
ANR	1619435	ArgumentList	PROC_POWER_FILE		1619404	1					
ANR	1619436	Argument	PROC_POWER_FILE		1619404	0					
ANR	1619437	Identifier	PROC_POWER_FILE		1619404	0					
ANR	1619438	Argument	"""r"""		1619404	1					
ANR	1619439	PrimaryExpression	"""r"""		1619404	0					
ANR	1619440	IfStatement	if ( NULL == fp )		1619404	4					
ANR	1619441	Condition	NULL == fp	518:6:13036:13045	1619404	0	True				
ANR	1619442	EqualityExpression	NULL == fp		1619404	0		==			
ANR	1619443	Identifier	NULL		1619404	0					
ANR	1619444	Identifier	fp		1619404	1					
ANR	1619445	CompoundStatement		8:19:148:148	1619404	1					
ANR	1619446	ReturnStatement	return false ;	519:2:13053:13065	1619404	0	True				
ANR	1619447	Identifier	false		1619404	0					
ANR	1619448	IfStatement	"if ( fgets ( buf , sizeof ( buf ) - 1 , fp ) )"		1619404	5					
ANR	1619449	Condition	"fgets ( buf , sizeof ( buf ) - 1 , fp )"	521:6:13076:13106	1619404	0	True				
ANR	1619450	CallExpression	"fgets ( buf , sizeof ( buf ) - 1 , fp )"		1619404	0					
ANR	1619451	Callee	fgets		1619404	0					
ANR	1619452	Identifier	fgets		1619404	0					
ANR	1619453	ArgumentList	buf		1619404	1					
ANR	1619454	Argument	buf		1619404	0					
ANR	1619455	Identifier	buf		1619404	0					
ANR	1619456	Argument	sizeof ( buf ) - 1		1619404	1					
ANR	1619457	AdditiveExpression	sizeof ( buf ) - 1		1619404	0		-			
ANR	1619458	SizeofExpression	sizeof ( buf )		1619404	0					
ANR	1619459	Sizeof	sizeof		1619404	0					
ANR	1619460	SizeofOperand	buf		1619404	1					
ANR	1619461	PrimaryExpression	1		1619404	1					
ANR	1619462	Argument	fp		1619404	2					
ANR	1619463	Identifier	fp		1619404	0					
ANR	1619464	CompoundStatement		12:2:213:238	1619404	1					
ANR	1619465	IdentifierDeclStatement	"char * token , * save = NULL ;"	522:2:13114:13139	1619404	0	True				
ANR	1619466	IdentifierDecl	* token		1619404	0					
ANR	1619467	IdentifierDeclType	char *		1619404	0					
ANR	1619468	Identifier	token		1619404	1					
ANR	1619469	IdentifierDecl	* save = NULL		1619404	1					
ANR	1619470	IdentifierDeclType	char *		1619404	0					
ANR	1619471	Identifier	save		1619404	1					
ANR	1619472	AssignmentExpression	* save = NULL		1619404	2		=			
ANR	1619473	Identifier	NULL		1619404	0					
ANR	1619474	Identifier	NULL		1619404	1					
ANR	1619475	ExpressionStatement	"token = strtok_r ( buf , "" "" , & save )"	524:2:13144:13179	1619404	1	True				
ANR	1619476	AssignmentExpression	"token = strtok_r ( buf , "" "" , & save )"		1619404	0		=			
ANR	1619477	Identifier	token		1619404	0					
ANR	1619478	CallExpression	"strtok_r ( buf , "" "" , & save )"		1619404	1					
ANR	1619479	Callee	strtok_r		1619404	0					
ANR	1619480	Identifier	strtok_r		1619404	0					
ANR	1619481	ArgumentList	buf		1619404	1					
ANR	1619482	Argument	buf		1619404	0					
ANR	1619483	Identifier	buf		1619404	0					
ANR	1619484	Argument	""" """		1619404	1					
ANR	1619485	PrimaryExpression	""" """		1619404	0					
ANR	1619486	Argument	& save		1619404	2					
ANR	1619487	UnaryOperationExpression	& save		1619404	0					
ANR	1619488	UnaryOperator	&		1619404	0					
ANR	1619489	Identifier	save		1619404	1					
ANR	1619490	WhileStatement	while ( token )		1619404	2					
ANR	1619491	Condition	token	525:9:13190:13194	1619404	0	True				
ANR	1619492	Identifier	token		1619404	0					
ANR	1619493	CompoundStatement		15:17:297:297	1619404	1					
ANR	1619494	ExpressionStatement	m_hibernator -> addState ( token )	526:3:13203:13234	1619404	0	True				
ANR	1619495	CallExpression	m_hibernator -> addState ( token )		1619404	0					
ANR	1619496	Callee	m_hibernator -> addState		1619404	0					
ANR	1619497	PtrMemberAccess	m_hibernator -> addState		1619404	0					
ANR	1619498	Identifier	m_hibernator		1619404	0					
ANR	1619499	Identifier	addState		1619404	1					
ANR	1619500	ArgumentList	token		1619404	1					
ANR	1619501	Argument	token		1619404	0					
ANR	1619502	Identifier	token		1619404	0					
ANR	1619503	ExpressionStatement	"token = strtok_r ( NULL , "" "" , & save )"	527:3:13239:13275	1619404	1	True				
ANR	1619504	AssignmentExpression	"token = strtok_r ( NULL , "" "" , & save )"		1619404	0		=			
ANR	1619505	Identifier	token		1619404	0					
ANR	1619506	CallExpression	"strtok_r ( NULL , "" "" , & save )"		1619404	1					
ANR	1619507	Callee	strtok_r		1619404	0					
ANR	1619508	Identifier	strtok_r		1619404	0					
ANR	1619509	ArgumentList	NULL		1619404	1					
ANR	1619510	Argument	NULL		1619404	0					
ANR	1619511	Identifier	NULL		1619404	0					
ANR	1619512	Argument	""" """		1619404	1					
ANR	1619513	PrimaryExpression	""" """		1619404	0					
ANR	1619514	Argument	& save		1619404	2					
ANR	1619515	UnaryOperationExpression	& save		1619404	0					
ANR	1619516	UnaryOperator	&		1619404	0					
ANR	1619517	Identifier	save		1619404	1					
ANR	1619518	ExpressionStatement	fclose ( fp )	530:1:13285:13297	1619404	6	True				
ANR	1619519	CallExpression	fclose ( fp )		1619404	0					
ANR	1619520	Callee	fclose		1619404	0					
ANR	1619521	Identifier	fclose		1619404	0					
ANR	1619522	ArgumentList	fp		1619404	1					
ANR	1619523	Argument	fp		1619404	0					
ANR	1619524	Identifier	fp		1619404	0					
ANR	1619525	ReturnStatement	return true ;	531:1:13300:13311	1619404	7	True				
ANR	1619526	Identifier	true		1619404	0					
ANR	1619527	ReturnType	bool		1619404	1					
ANR	1619528	Identifier	ProcIfLinuxHibernator :: Detect		1619404	2					
ANR	1619529	ParameterList			1619404	3					
ANR	1619530	CFGEntryNode	ENTRY		1619404		True				
ANR	1619531	CFGExitNode	EXIT		1619404		True				
ANR	1619532	Symbol	NULL		1619404						
ANR	1619533	Symbol	safe_fopen_wrapper		1619404						
ANR	1619534	Symbol	& save		1619404						
ANR	1619535	Symbol	false		1619404						
ANR	1619536	Symbol	save		1619404						
ANR	1619537	Symbol	PROC_POWER_FILE		1619404						
ANR	1619538	Symbol	fp		1619404						
ANR	1619539	Symbol	strtok_r		1619404						
ANR	1619540	Symbol	fgets		1619404						
ANR	1619541	Symbol	token		1619404						
ANR	1619542	Symbol	buf		1619404						
ANR	1619543	Symbol	true		1619404						
ANR	1619544	Symbol	m_hibernator		1619404						
