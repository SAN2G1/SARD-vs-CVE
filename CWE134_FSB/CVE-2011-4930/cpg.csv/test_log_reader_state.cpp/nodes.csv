command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5384244	File	data/converged/CVE-2011-4930_htcondor/test_log_reader_state.cpp								
ANR	5384245	DeclStmt									
ANR	5384246	Decl							const char	const char *	VERSION
ANR	5384247	ClassDef	Verbosity	33:0:1114:1185							
ANR	5384248	ClassDef	Command	40:0:1188:1272							
ANR	5384249	ClassDef	Field	49:0:1275:1597							
ANR	5384250	ClassDef	DataType	70:0:1600:1697							
ANR	5384251	ClassDef	FieldData	80:0:1701:1800							
ANR	5384252	DeclStmt									
ANR	5384253	Decl							Field	Field	m_field
ANR	5384254	DeclStmt									
ANR	5384255	Decl							DataType	DataType	m_type
ANR	5384256	DeclStmt									
ANR	5384257	Decl							int	int	m_max_values
ANR	5384258	DeclStmt									
ANR	5384259	Decl							const char	const char *	m_name
ANR	5384260	DeclStmt									
ANR	5384261	Decl							const FieldData	const FieldData [ ]	fieldList
ANR	5384262	ClassDef	IntVal	109:0:2776:2837							
ANR	5384263	DeclStmt									
ANR	5384264	Decl							filesize_t	filesize_t	asFsize
ANR	5384265	DeclStmt									
ANR	5384266	Decl							int	int	asInt
ANR	5384267	DeclStmt									
ANR	5384268	Decl							time_t	time_t	asTime
ANR	5384269	ClassDef	Value	110:0:2840:2972							
ANR	5384270	ClassDef	<unnamed>	112:1:2856:2904							
ANR	5384271	DeclStmt									
ANR	5384272	Decl							IntVal	IntVal	minVal
ANR	5384273	DeclStmt									
ANR	5384274	Decl							IntVal	IntVal	maxVal
ANR	5384275	DeclStmt									
ANR	5384276	Decl									asRange
ANR	5384277	DeclStmt									
ANR	5384278	Decl							IntVal	IntVal	asInt
ANR	5384279	DeclStmt									
ANR	5384280	Decl							StatStructInode	StatStructInode	asInode
ANR	5384281	DeclStmt									
ANR	5384282	Decl							const char	const char *	asStr
ANR	5384283	ClassDef	Options	118:0:2976:4467							
ANR	5384284	Function	~Options	122:1:3019:3038							
ANR	5384285	FunctionDef	~Options ()		5384284	0					
ANR	5384286	CompoundStatement		122:18:3036:3038	5384284	0					
ANR	5384287	Identifier	~Options		5384284	1					
ANR	5384288	ParameterList			5384284	2					
ANR	5384289	CFGEntryNode	ENTRY		5384284		True				
ANR	5384290	CFGExitNode	EXIT		5384284		True				
ANR	5384291	DeclStmt									
ANR	5384292	Decl							int	"int ( SimpleArg & arg , int & )"	handleOpt
ANR	5384293	DeclStmt									
ANR	5384294	Decl							int	"int ( SimpleArg & arg , int & )"	handleFixed
ANR	5384295	Function	getFile	128:1:3129:3180							
ANR	5384296	FunctionDef	getFile ()		5384295	3					
ANR	5384297	CompoundStatement		128:35:3163:3180	5384295	0					
ANR	5384298	ReturnStatement	return m_file ;	128:1:3165:3178	5384295	0	True				
ANR	5384299	Identifier	m_file		5384295	0					
ANR	5384300	ReturnType	const char *		5384295	1					
ANR	5384301	Identifier	getFile		5384295	2					
ANR	5384302	ParameterList			5384295	3					
ANR	5384303	CFGEntryNode	ENTRY		5384295		True				
ANR	5384304	CFGExitNode	EXIT		5384295		True				
ANR	5384305	Symbol	m_file		5384295						
ANR	5384306	Function	getFile2	129:1:3184:3237							
ANR	5384307	FunctionDef	getFile2 ()		5384306	4					
ANR	5384308	CompoundStatement		129:36:3219:3237	5384306	0					
ANR	5384309	ReturnStatement	return m_file2 ;	129:1:3221:3235	5384306	0	True				
ANR	5384310	Identifier	m_file2		5384306	0					
ANR	5384311	ReturnType	const char *		5384306	1					
ANR	5384312	Identifier	getFile2		5384306	2					
ANR	5384313	ParameterList			5384306	3					
ANR	5384314	CFGEntryNode	ENTRY		5384306		True				
ANR	5384315	CFGExitNode	EXIT		5384306		True				
ANR	5384316	Symbol	m_file2		5384306						
ANR	5384317	Function	getCommand	130:1:3241:3294							
ANR	5384318	FunctionDef	getCommand ()		5384317	5					
ANR	5384319	CompoundStatement		130:34:3274:3294	5384317	0					
ANR	5384320	ReturnStatement	return m_command ;	130:1:3276:3292	5384317	0	True				
ANR	5384321	Identifier	m_command		5384317	0					
ANR	5384322	ReturnType	Command		5384317	1					
ANR	5384323	Identifier	getCommand		5384317	2					
ANR	5384324	ParameterList			5384317	3					
ANR	5384325	CFGEntryNode	ENTRY		5384317		True				
ANR	5384326	CFGExitNode	EXIT		5384317		True				
ANR	5384327	Symbol	m_command		5384317						
ANR	5384328	Function	getField	131:1:3298:3356							
ANR	5384329	FunctionDef	getField ()		5384328	6					
ANR	5384330	CompoundStatement		131:41:3338:3356	5384328	0					
ANR	5384331	ReturnStatement	return m_field ;	131:1:3340:3354	5384328	0	True				
ANR	5384332	Identifier	m_field		5384328	0					
ANR	5384333	ReturnType	const FieldData *		5384328	1					
ANR	5384334	Identifier	getField		5384328	2					
ANR	5384335	ParameterList			5384328	3					
ANR	5384336	CFGEntryNode	ENTRY		5384328		True				
ANR	5384337	CFGExitNode	EXIT		5384328		True				
ANR	5384338	Symbol	m_field		5384328						
ANR	5384339	Function	getValue	132:1:3360:3407							
ANR	5384340	FunctionDef	getValue ()		5384339	7					
ANR	5384341	CompoundStatement		132:30:3389:3407	5384339	0					
ANR	5384342	ReturnStatement	return m_value ;	132:1:3391:3405	5384339	0	True				
ANR	5384343	Identifier	m_value		5384339	0					
ANR	5384344	ReturnType	Value		5384339	1					
ANR	5384345	Identifier	getValue		5384339	2					
ANR	5384346	ParameterList			5384339	3					
ANR	5384347	CFGEntryNode	ENTRY		5384339		True				
ANR	5384348	CFGExitNode	EXIT		5384339		True				
ANR	5384349	Symbol	m_value		5384339						
ANR	5384350	Function	isValueRange	133:1:3411:3470							
ANR	5384351	FunctionDef	isValueRange ()		5384350	8					
ANR	5384352	CompoundStatement		133:33:3443:3470	5384350	0					
ANR	5384353	ReturnStatement	return m_value_is_range ;	133:1:3445:3468	5384350	0	True				
ANR	5384354	Identifier	m_value_is_range		5384350	0					
ANR	5384355	ReturnType	bool		5384350	1					
ANR	5384356	Identifier	isValueRange		5384350	2					
ANR	5384357	ParameterList			5384350	3					
ANR	5384358	CFGEntryNode	ENTRY		5384350		True				
ANR	5384359	CFGExitNode	EXIT		5384350		True				
ANR	5384360	Symbol	m_value_is_range		5384350						
ANR	5384361	Function	getVerbose	134:1:3474:3523							
ANR	5384362	FunctionDef	getVerbose ()		5384361	9					
ANR	5384363	CompoundStatement		134:30:3503:3523	5384361	0					
ANR	5384364	ReturnStatement	return m_verbose ;	134:1:3505:3521	5384361	0	True				
ANR	5384365	Identifier	m_verbose		5384361	0					
ANR	5384366	ReturnType	int		5384361	1					
ANR	5384367	Identifier	getVerbose		5384361	2					
ANR	5384368	ParameterList			5384361	3					
ANR	5384369	CFGEntryNode	ENTRY		5384361		True				
ANR	5384370	CFGExitNode	EXIT		5384361		True				
ANR	5384371	Symbol	m_verbose		5384361						
ANR	5384372	Function	getNumeric	135:1:3527:3577							
ANR	5384373	FunctionDef	getNumeric ()		5384372	10					
ANR	5384374	CompoundStatement		135:31:3557:3577	5384372	0					
ANR	5384375	ReturnStatement	return m_numeric ;	135:1:3559:3575	5384372	0	True				
ANR	5384376	Identifier	m_numeric		5384372	0					
ANR	5384377	ReturnType	bool		5384372	1					
ANR	5384378	Identifier	getNumeric		5384372	2					
ANR	5384379	ParameterList			5384372	3					
ANR	5384380	CFGEntryNode	ENTRY		5384372		True				
ANR	5384381	CFGExitNode	EXIT		5384372		True				
ANR	5384382	Symbol	m_numeric		5384372						
ANR	5384383	Function	getUsage	136:1:3581:3634							
ANR	5384384	FunctionDef	getUsage ()		5384383	11					
ANR	5384385	CompoundStatement		136:36:3616:3634	5384383	0					
ANR	5384386	ReturnStatement	return m_usage ;	136:1:3618:3632	5384383	0	True				
ANR	5384387	Identifier	m_usage		5384383	0					
ANR	5384388	ReturnType	const char *		5384383	1					
ANR	5384389	Identifier	getUsage		5384383	2					
ANR	5384390	ParameterList			5384383	3					
ANR	5384391	CFGEntryNode	ENTRY		5384383		True				
ANR	5384392	CFGExitNode	EXIT		5384383		True				
ANR	5384393	Symbol	m_usage		5384383						
ANR	5384394	Function	isValueOk	139:1:3725:3782							
ANR	5384395	FunctionDef	isValueOk ()		5384394	12					
ANR	5384396	CompoundStatement		139:30:3754:3782	5384394	0					
ANR	5384397	ReturnStatement	return m_num_values >= 1 ;	139:1:3756:3780	5384394	0	True				
ANR	5384398	RelationalExpression	m_num_values >= 1		5384394	0		>=			
ANR	5384399	Identifier	m_num_values		5384394	0					
ANR	5384400	PrimaryExpression	1		5384394	1					
ANR	5384401	ReturnType	bool		5384394	1					
ANR	5384402	Identifier	isValueOk		5384394	2					
ANR	5384403	ParameterList			5384394	3					
ANR	5384404	CFGEntryNode	ENTRY		5384394		True				
ANR	5384405	CFGExitNode	EXIT		5384394		True				
ANR	5384406	Symbol	m_num_values		5384394						
ANR	5384407	Function	needStateFile	140:1:3786:3851							
ANR	5384408	FunctionDef	needStateFile ()		5384407	13					
ANR	5384409	CompoundStatement		140:34:3819:3851	5384407	0					
ANR	5384410	ReturnStatement	return m_command != CMD_LIST ;	140:1:3821:3849	5384407	0	True				
ANR	5384411	EqualityExpression	m_command != CMD_LIST		5384407	0		!=			
ANR	5384412	Identifier	m_command		5384407	0					
ANR	5384413	Identifier	CMD_LIST		5384407	1					
ANR	5384414	ReturnType	bool		5384407	1					
ANR	5384415	Identifier	needStateFile		5384407	2					
ANR	5384416	ParameterList			5384407	3					
ANR	5384417	CFGEntryNode	ENTRY		5384407		True				
ANR	5384418	CFGExitNode	EXIT		5384407		True				
ANR	5384419	Symbol	m_command		5384407						
ANR	5384420	Symbol	CMD_LIST		5384407						
ANR	5384421	Function	needStateFile2	141:1:3855:3921							
ANR	5384422	FunctionDef	needStateFile2 ()		5384421	14					
ANR	5384423	CompoundStatement		141:35:3889:3921	5384421	0					
ANR	5384424	ReturnStatement	return m_command == CMD_DIFF ;	141:1:3891:3919	5384421	0	True				
ANR	5384425	EqualityExpression	m_command == CMD_DIFF		5384421	0		==			
ANR	5384426	Identifier	m_command		5384421	0					
ANR	5384427	Identifier	CMD_DIFF		5384421	1					
ANR	5384428	ReturnType	bool		5384421	1					
ANR	5384429	Identifier	needStateFile2		5384421	2					
ANR	5384430	ParameterList			5384421	3					
ANR	5384431	CFGEntryNode	ENTRY		5384421		True				
ANR	5384432	CFGExitNode	EXIT		5384421		True				
ANR	5384433	Symbol	m_command		5384421						
ANR	5384434	Symbol	CMD_DIFF		5384421						
ANR	5384435	ClassDef	<unnamed>	144:1:3935:4036							
ANR	5384436	DeclStmt									
ANR	5384437	Decl									m_state
ANR	5384438	DeclStmt									
ANR	5384439	Decl							const char	const char *	m_file
ANR	5384440	DeclStmt									
ANR	5384441	Decl							const char	const char *	m_file2
ANR	5384442	DeclStmt									
ANR	5384443	Decl							Command	Command	m_command
ANR	5384444	DeclStmt									
ANR	5384445	Decl							const FieldData	const FieldData *	m_field
ANR	5384446	DeclStmt									
ANR	5384447	Decl							Value	Value	m_value
ANR	5384448	DeclStmt									
ANR	5384449	Decl							bool	bool	m_value_is_range
ANR	5384450	DeclStmt									
ANR	5384451	Decl							int	int	m_num_values
ANR	5384452	DeclStmt									
ANR	5384453	Decl							int	int	m_verbose
ANR	5384454	DeclStmt									
ANR	5384455	Decl							bool	bool	m_numeric
ANR	5384456	DeclStmt									
ANR	5384457	Decl							const char	const char *	m_usage
ANR	5384458	DeclStmt									
ANR	5384459	Decl							bool	bool ( const SimpleArg & )	lookupCommand
ANR	5384460	DeclStmt									
ANR	5384461	Decl							bool	bool ( const SimpleArg & arg )	parseValue
ANR	5384462	DeclStmt									
ANR	5384463	Decl							int	"int ( int argc , const char * * argv , Options & opts )"	CheckArgs
ANR	5384464	DeclStmt									
ANR	5384465	Decl							int	"int ( const Options & opts , ReadUserLog :: FileState & state )"	ReadState
ANR	5384466	DeclStmt									
ANR	5384467	Decl							int	"int ( const Options & opts , const ReadUserLog :: FileState & state , const ReadUserLog :: FileState & state2 )"	DiffState
ANR	5384468	DeclStmt									
ANR	5384469	Decl							int	"int ( const Options & opts , const ReadUserLog :: FileState & state )"	VerifyState
ANR	5384470	DeclStmt									
ANR	5384471	Decl							int	"int ( const Options & opts , const ReadUserLog :: FileState & state )"	CheckStateAccess
ANR	5384472	DeclStmt									
ANR	5384473	Decl							const char	const char * ( char * buf )	chomptime
ANR	5384474	DeclStmt									
ANR	5384475	Decl							bool	bool	global_done
ANR	5384476	Function	handle_sig	194:0:5250:5353							
ANR	5384477	FunctionDef	handle_sig (int sig)		5384476	0					
ANR	5384478	CompoundStatement		195:0:5275:5353	5384476	0					
ANR	5384479	ExpressionStatement	( void ) sig	196:1:5278:5288	5384476	0	True				
ANR	5384480	CastExpression	( void ) sig		5384476	0					
ANR	5384481	CastTarget	void		5384476	0					
ANR	5384482	Identifier	sig		5384476	1					
ANR	5384483	ExpressionStatement	"printf ( ""Got signal; shutting down\\n"" )"	197:1:5291:5330	5384476	1	True				
ANR	5384484	CallExpression	"printf ( ""Got signal; shutting down\\n"" )"		5384476	0					
ANR	5384485	Callee	printf		5384476	0					
ANR	5384486	Identifier	printf		5384476	0					
ANR	5384487	ArgumentList	"""Got signal; shutting down\\n"""		5384476	1					
ANR	5384488	Argument	"""Got signal; shutting down\\n"""		5384476	0					
ANR	5384489	PrimaryExpression	"""Got signal; shutting down\\n"""		5384476	0					
ANR	5384490	ExpressionStatement	global_done = true	198:1:5333:5351	5384476	2	True				
ANR	5384491	AssignmentExpression	global_done = true		5384476	0		=			
ANR	5384492	Identifier	global_done		5384476	0					
ANR	5384493	Identifier	true		5384476	1					
ANR	5384494	ReturnType	void		5384476	1					
ANR	5384495	Identifier	handle_sig		5384476	2					
ANR	5384496	ParameterList	int sig		5384476	3					
ANR	5384497	Parameter	int sig	194:16:5266:5272	5384476	0	True				
ANR	5384498	ParameterType	int		5384476	0					
ANR	5384499	Identifier	sig		5384476	1					
ANR	5384500	CFGEntryNode	ENTRY		5384476		True				
ANR	5384501	CFGExitNode	EXIT		5384476		True				
ANR	5384502	Symbol	sig		5384476						
ANR	5384503	Symbol	true		5384476						
ANR	5384504	Symbol	global_done		5384476						
ANR	5384505	Function	main	201:0:5356:6643							
ANR	5384506	FunctionDef	"main (int argc , const char * * argv)"		5384505	0					
ANR	5384507	CompoundStatement		203:0:5394:6643	5384505	0					
ANR	5384508	ExpressionStatement	DebugFlags = D_ALWAYS	204:1:5397:5418	5384505	0	True				
ANR	5384509	AssignmentExpression	DebugFlags = D_ALWAYS		5384505	0		=			
ANR	5384510	Identifier	DebugFlags		5384505	0					
ANR	5384511	Identifier	D_ALWAYS		5384505	1					
ANR	5384512	IdentifierDeclStatement	param_functions * p_funcs = NULL ;	205:1:5421:5452	5384505	1	True				
ANR	5384513	IdentifierDecl	* p_funcs = NULL		5384505	0					
ANR	5384514	IdentifierDeclType	param_functions *		5384505	0					
ANR	5384515	Identifier	p_funcs		5384505	1					
ANR	5384516	AssignmentExpression	* p_funcs = NULL		5384505	2		=			
ANR	5384517	Identifier	NULL		5384505	0					
ANR	5384518	Identifier	NULL		5384505	1					
ANR	5384519	ExpressionStatement	"set_mySubSystem ( ""TEST_LOG_READER_STATE"" , SUBSYSTEM_TYPE_TOOL )"	207:1:5456:5519	5384505	2	True				
ANR	5384520	CallExpression	"set_mySubSystem ( ""TEST_LOG_READER_STATE"" , SUBSYSTEM_TYPE_TOOL )"		5384505	0					
ANR	5384521	Callee	set_mySubSystem		5384505	0					
ANR	5384522	Identifier	set_mySubSystem		5384505	0					
ANR	5384523	ArgumentList	"""TEST_LOG_READER_STATE"""		5384505	1					
ANR	5384524	Argument	"""TEST_LOG_READER_STATE"""		5384505	0					
ANR	5384525	PrimaryExpression	"""TEST_LOG_READER_STATE"""		5384505	0					
ANR	5384526	Argument	SUBSYSTEM_TYPE_TOOL		5384505	1					
ANR	5384527	Identifier	SUBSYSTEM_TYPE_TOOL		5384505	0					
ANR	5384528	ExpressionStatement	"myDistro -> Init ( argc , argv )"	210:1:5564:5592	5384505	3	True				
ANR	5384529	CallExpression	"myDistro -> Init ( argc , argv )"		5384505	0					
ANR	5384530	Callee	myDistro -> Init		5384505	0					
ANR	5384531	PtrMemberAccess	myDistro -> Init		5384505	0					
ANR	5384532	Identifier	myDistro		5384505	0					
ANR	5384533	Identifier	Init		5384505	1					
ANR	5384534	ArgumentList	argc		5384505	1					
ANR	5384535	Argument	argc		5384505	0					
ANR	5384536	Identifier	argc		5384505	0					
ANR	5384537	Argument	argv		5384505	1					
ANR	5384538	Identifier	argv		5384505	0					
ANR	5384539	ExpressionStatement	config ( )	211:1:5595:5603	5384505	4	True				
ANR	5384540	CallExpression	config ( )		5384505	0					
ANR	5384541	Callee	config		5384505	0					
ANR	5384542	Identifier	config		5384505	0					
ANR	5384543	ArgumentList			5384505	1					
ANR	5384544	ExpressionStatement	p_funcs = get_param_functions ( )	214:1:5640:5671	5384505	5	True				
ANR	5384545	AssignmentExpression	p_funcs = get_param_functions ( )		5384505	0		=			
ANR	5384546	Identifier	p_funcs		5384505	0					
ANR	5384547	CallExpression	get_param_functions ( )		5384505	1					
ANR	5384548	Callee	get_param_functions		5384505	0					
ANR	5384549	Identifier	get_param_functions		5384505	0					
ANR	5384550	ArgumentList			5384505	1					
ANR	5384551	ExpressionStatement	"dprintf_config ( ""TEST_LOG_READER_STATE"" , p_funcs )"	215:1:5674:5722	5384505	6	True				
ANR	5384552	CallExpression	"dprintf_config ( ""TEST_LOG_READER_STATE"" , p_funcs )"		5384505	0					
ANR	5384553	Callee	dprintf_config		5384505	0					
ANR	5384554	Identifier	dprintf_config		5384505	0					
ANR	5384555	ArgumentList	"""TEST_LOG_READER_STATE"""		5384505	1					
ANR	5384556	Argument	"""TEST_LOG_READER_STATE"""		5384505	0					
ANR	5384557	PrimaryExpression	"""TEST_LOG_READER_STATE"""		5384505	0					
ANR	5384558	Argument	p_funcs		5384505	1					
ANR	5384559	Identifier	p_funcs		5384505	0					
ANR	5384560	IdentifierDeclStatement	Options opts ;	217:1:5726:5738	5384505	7	True				
ANR	5384561	IdentifierDecl	opts		5384505	0					
ANR	5384562	IdentifierDeclType	Options		5384505	0					
ANR	5384563	Identifier	opts		5384505	1					
ANR	5384564	IfStatement	"if ( CheckArgs ( argc , argv , opts ) < 0 )"		5384505	8					
ANR	5384565	Condition	"CheckArgs ( argc , argv , opts ) < 0"	218:6:5746:5778	5384505	0	True				
ANR	5384566	RelationalExpression	"CheckArgs ( argc , argv , opts ) < 0"		5384505	0		<			
ANR	5384567	CallExpression	"CheckArgs ( argc , argv , opts )"		5384505	0					
ANR	5384568	Callee	CheckArgs		5384505	0					
ANR	5384569	Identifier	CheckArgs		5384505	0					
ANR	5384570	ArgumentList	argc		5384505	1					
ANR	5384571	Argument	argc		5384505	0					
ANR	5384572	Identifier	argc		5384505	0					
ANR	5384573	Argument	argv		5384505	1					
ANR	5384574	Identifier	argv		5384505	0					
ANR	5384575	Argument	opts		5384505	2					
ANR	5384576	Identifier	opts		5384505	0					
ANR	5384577	PrimaryExpression	0		5384505	1					
ANR	5384578	CompoundStatement		16:42:387:387	5384505	1					
ANR	5384579	ExpressionStatement	"fprintf ( stderr , ""CheckArgs() failed\\n"" )"	219:2:5786:5827	5384505	0	True				
ANR	5384580	CallExpression	"fprintf ( stderr , ""CheckArgs() failed\\n"" )"		5384505	0					
ANR	5384581	Callee	fprintf		5384505	0					
ANR	5384582	Identifier	fprintf		5384505	0					
ANR	5384583	ArgumentList	stderr		5384505	1					
ANR	5384584	Argument	stderr		5384505	0					
ANR	5384585	Identifier	stderr		5384505	0					
ANR	5384586	Argument	"""CheckArgs() failed\\n"""		5384505	1					
ANR	5384587	PrimaryExpression	"""CheckArgs() failed\\n"""		5384505	0					
ANR	5384588	ExpressionStatement	exit ( 1 )	220:2:5831:5840	5384505	1	True				
ANR	5384589	CallExpression	exit ( 1 )		5384505	0					
ANR	5384590	Callee	exit		5384505	0					
ANR	5384591	Identifier	exit		5384505	0					
ANR	5384592	ArgumentList	1		5384505	1					
ANR	5384593	Argument	1		5384505	0					
ANR	5384594	PrimaryExpression	1		5384505	0					
ANR	5384595	IdentifierDeclStatement	ReadUserLog :: FileState state ;	223:1:5847:5875	5384505	9	True				
ANR	5384596	IdentifierDecl	state		5384505	0					
ANR	5384597	IdentifierDeclType	ReadUserLog :: FileState		5384505	0					
ANR	5384598	Identifier	state		5384505	1					
ANR	5384599	IfStatement	"if ( opts . needStateFile ( ) && ( ReadState ( opts , state ) < 0 ) )"		5384505	10					
ANR	5384600	Condition	"opts . needStateFile ( ) && ( ReadState ( opts , state ) < 0 )"	224:6:5883:5938	5384505	0	True				
ANR	5384601	AndExpression	"opts . needStateFile ( ) && ( ReadState ( opts , state ) < 0 )"		5384505	0		&&			
ANR	5384602	CallExpression	opts . needStateFile ( )		5384505	0					
ANR	5384603	Callee	opts . needStateFile		5384505	0					
ANR	5384604	MemberAccess	opts . needStateFile		5384505	0					
ANR	5384605	Identifier	opts		5384505	0					
ANR	5384606	Identifier	needStateFile		5384505	1					
ANR	5384607	ArgumentList			5384505	1					
ANR	5384608	RelationalExpression	"ReadState ( opts , state ) < 0"		5384505	1		<			
ANR	5384609	CallExpression	"ReadState ( opts , state )"		5384505	0					
ANR	5384610	Callee	ReadState		5384505	0					
ANR	5384611	Identifier	ReadState		5384505	0					
ANR	5384612	ArgumentList	opts		5384505	1					
ANR	5384613	Argument	opts		5384505	0					
ANR	5384614	Identifier	opts		5384505	0					
ANR	5384615	Argument	state		5384505	1					
ANR	5384616	Identifier	state		5384505	0					
ANR	5384617	PrimaryExpression	0		5384505	1					
ANR	5384618	CompoundStatement		22:66:548:548	5384505	1					
ANR	5384619	ExpressionStatement	"fprintf ( stderr , ""ReadState() failed\\n"" )"	225:2:5947:5988	5384505	0	True				
ANR	5384620	CallExpression	"fprintf ( stderr , ""ReadState() failed\\n"" )"		5384505	0					
ANR	5384621	Callee	fprintf		5384505	0					
ANR	5384622	Identifier	fprintf		5384505	0					
ANR	5384623	ArgumentList	stderr		5384505	1					
ANR	5384624	Argument	stderr		5384505	0					
ANR	5384625	Identifier	stderr		5384505	0					
ANR	5384626	Argument	"""ReadState() failed\\n"""		5384505	1					
ANR	5384627	PrimaryExpression	"""ReadState() failed\\n"""		5384505	0					
ANR	5384628	ExpressionStatement	exit ( 1 )	226:2:5992:6001	5384505	1	True				
ANR	5384629	CallExpression	exit ( 1 )		5384505	0					
ANR	5384630	Callee	exit		5384505	0					
ANR	5384631	Identifier	exit		5384505	0					
ANR	5384632	ArgumentList	1		5384505	1					
ANR	5384633	Argument	1		5384505	0					
ANR	5384634	PrimaryExpression	1		5384505	0					
ANR	5384635	IdentifierDeclStatement	ReadUserLog :: FileState state2 ;	228:1:6007:6036	5384505	11	True				
ANR	5384636	IdentifierDecl	state2		5384505	0					
ANR	5384637	IdentifierDeclType	ReadUserLog :: FileState		5384505	0					
ANR	5384638	Identifier	state2		5384505	1					
ANR	5384639	IfStatement	"if ( opts . needStateFile2 ( ) && ( ReadState ( opts , state2 ) < 0 ) )"		5384505	12					
ANR	5384640	Condition	"opts . needStateFile2 ( ) && ( ReadState ( opts , state2 ) < 0 )"	229:6:6044:6101	5384505	0	True				
ANR	5384641	AndExpression	"opts . needStateFile2 ( ) && ( ReadState ( opts , state2 ) < 0 )"		5384505	0		&&			
ANR	5384642	CallExpression	opts . needStateFile2 ( )		5384505	0					
ANR	5384643	Callee	opts . needStateFile2		5384505	0					
ANR	5384644	MemberAccess	opts . needStateFile2		5384505	0					
ANR	5384645	Identifier	opts		5384505	0					
ANR	5384646	Identifier	needStateFile2		5384505	1					
ANR	5384647	ArgumentList			5384505	1					
ANR	5384648	RelationalExpression	"ReadState ( opts , state2 ) < 0"		5384505	1		<			
ANR	5384649	CallExpression	"ReadState ( opts , state2 )"		5384505	0					
ANR	5384650	Callee	ReadState		5384505	0					
ANR	5384651	Identifier	ReadState		5384505	0					
ANR	5384652	ArgumentList	opts		5384505	1					
ANR	5384653	Argument	opts		5384505	0					
ANR	5384654	Identifier	opts		5384505	0					
ANR	5384655	Argument	state2		5384505	1					
ANR	5384656	Identifier	state2		5384505	0					
ANR	5384657	PrimaryExpression	0		5384505	1					
ANR	5384658	CompoundStatement		27:68:711:711	5384505	1					
ANR	5384659	ExpressionStatement	"fprintf ( stderr , ""ReadState() failed\\n"" )"	230:2:6110:6151	5384505	0	True				
ANR	5384660	CallExpression	"fprintf ( stderr , ""ReadState() failed\\n"" )"		5384505	0					
ANR	5384661	Callee	fprintf		5384505	0					
ANR	5384662	Identifier	fprintf		5384505	0					
ANR	5384663	ArgumentList	stderr		5384505	1					
ANR	5384664	Argument	stderr		5384505	0					
ANR	5384665	Identifier	stderr		5384505	0					
ANR	5384666	Argument	"""ReadState() failed\\n"""		5384505	1					
ANR	5384667	PrimaryExpression	"""ReadState() failed\\n"""		5384505	0					
ANR	5384668	ExpressionStatement	exit ( 1 )	231:2:6155:6164	5384505	1	True				
ANR	5384669	CallExpression	exit ( 1 )		5384505	0					
ANR	5384670	Callee	exit		5384505	0					
ANR	5384671	Identifier	exit		5384505	0					
ANR	5384672	ArgumentList	1		5384505	1					
ANR	5384673	Argument	1		5384505	0					
ANR	5384674	PrimaryExpression	1		5384505	0					
ANR	5384675	IdentifierDeclStatement	int status = 0 ;	234:1:6171:6185	5384505	13	True				
ANR	5384676	IdentifierDecl	status = 0		5384505	0					
ANR	5384677	IdentifierDeclType	int		5384505	0					
ANR	5384678	Identifier	status		5384505	1					
ANR	5384679	AssignmentExpression	status = 0		5384505	2		=			
ANR	5384680	Identifier	status		5384505	0					
ANR	5384681	PrimaryExpression	0		5384505	1					
ANR	5384682	SwitchStatement	switch ( opts . getCommand ( ) )		5384505	14					
ANR	5384683	Condition	opts . getCommand ( )	235:9:6196:6212	5384505	0	True				
ANR	5384684	CallExpression	opts . getCommand ( )		5384505	0					
ANR	5384685	Callee	opts . getCommand		5384505	0					
ANR	5384686	MemberAccess	opts . getCommand		5384505	0					
ANR	5384687	Identifier	opts		5384505	0					
ANR	5384688	Identifier	getCommand		5384505	1					
ANR	5384689	ArgumentList			5384505	1					
ANR	5384690	CompoundStatement		34:1:822:822	5384505	1					
ANR	5384691	Label	case CMD_NONE :	237:1:6220:6233	5384505	0	True				
ANR	5384692	Identifier	CMD_NONE		5384505	0					
ANR	5384693	ExpressionStatement	status = - 1	238:2:6237:6248	5384505	1	True				
ANR	5384694	AssignmentExpression	status = - 1		5384505	0		=			
ANR	5384695	Identifier	status		5384505	0					
ANR	5384696	UnaryOperationExpression	- 1		5384505	1					
ANR	5384697	UnaryOperator	-		5384505	0					
ANR	5384698	PrimaryExpression	1		5384505	1					
ANR	5384699	BreakStatement	break ;	239:2:6252:6257	5384505	2	True				
ANR	5384700	Label	case CMD_LIST :	240:1:6260:6273	5384505	3	True				
ANR	5384701	Identifier	CMD_LIST		5384505	0					
ANR	5384702	ExpressionStatement	opts . dumpFieldList ( )	241:2:6277:6298	5384505	4	True				
ANR	5384703	CallExpression	opts . dumpFieldList ( )		5384505	0					
ANR	5384704	Callee	opts . dumpFieldList		5384505	0					
ANR	5384705	MemberAccess	opts . dumpFieldList		5384505	0					
ANR	5384706	Identifier	opts		5384505	0					
ANR	5384707	Identifier	dumpFieldList		5384505	1					
ANR	5384708	ArgumentList			5384505	1					
ANR	5384709	BreakStatement	break ;	242:2:6302:6307	5384505	5	True				
ANR	5384710	Label	case CMD_DUMP :	243:1:6310:6323	5384505	6	True				
ANR	5384711	Identifier	CMD_DUMP		5384505	0					
ANR	5384712	ExpressionStatement	"status = DumpState ( opts , state )"	244:2:6327:6360	5384505	7	True				
ANR	5384713	AssignmentExpression	"status = DumpState ( opts , state )"		5384505	0		=			
ANR	5384714	Identifier	status		5384505	0					
ANR	5384715	CallExpression	"DumpState ( opts , state )"		5384505	1					
ANR	5384716	Callee	DumpState		5384505	0					
ANR	5384717	Identifier	DumpState		5384505	0					
ANR	5384718	ArgumentList	opts		5384505	1					
ANR	5384719	Argument	opts		5384505	0					
ANR	5384720	Identifier	opts		5384505	0					
ANR	5384721	Argument	state		5384505	1					
ANR	5384722	Identifier	state		5384505	0					
ANR	5384723	BreakStatement	break ;	245:2:6364:6369	5384505	8	True				
ANR	5384724	Label	case CMD_DIFF :	246:1:6372:6385	5384505	9	True				
ANR	5384725	Identifier	CMD_DIFF		5384505	0					
ANR	5384726	ExpressionStatement	"status = DiffState ( opts , state , state2 )"	247:2:6389:6430	5384505	10	True				
ANR	5384727	AssignmentExpression	"status = DiffState ( opts , state , state2 )"		5384505	0		=			
ANR	5384728	Identifier	status		5384505	0					
ANR	5384729	CallExpression	"DiffState ( opts , state , state2 )"		5384505	1					
ANR	5384730	Callee	DiffState		5384505	0					
ANR	5384731	Identifier	DiffState		5384505	0					
ANR	5384732	ArgumentList	opts		5384505	1					
ANR	5384733	Argument	opts		5384505	0					
ANR	5384734	Identifier	opts		5384505	0					
ANR	5384735	Argument	state		5384505	1					
ANR	5384736	Identifier	state		5384505	0					
ANR	5384737	Argument	state2		5384505	2					
ANR	5384738	Identifier	state2		5384505	0					
ANR	5384739	BreakStatement	break ;	248:2:6434:6439	5384505	11	True				
ANR	5384740	Label	case CMD_ACCESS :	249:1:6442:6457	5384505	12	True				
ANR	5384741	Identifier	CMD_ACCESS		5384505	0					
ANR	5384742	ExpressionStatement	"status = CheckStateAccess ( opts , state )"	250:2:6461:6501	5384505	13	True				
ANR	5384743	AssignmentExpression	"status = CheckStateAccess ( opts , state )"		5384505	0		=			
ANR	5384744	Identifier	status		5384505	0					
ANR	5384745	CallExpression	"CheckStateAccess ( opts , state )"		5384505	1					
ANR	5384746	Callee	CheckStateAccess		5384505	0					
ANR	5384747	Identifier	CheckStateAccess		5384505	0					
ANR	5384748	ArgumentList	opts		5384505	1					
ANR	5384749	Argument	opts		5384505	0					
ANR	5384750	Identifier	opts		5384505	0					
ANR	5384751	Argument	state		5384505	1					
ANR	5384752	Identifier	state		5384505	0					
ANR	5384753	BreakStatement	break ;	251:2:6505:6510	5384505	14	True				
ANR	5384754	Label	case CMD_VERIFY :	252:1:6513:6528	5384505	15	True				
ANR	5384755	Identifier	CMD_VERIFY		5384505	0					
ANR	5384756	ExpressionStatement	"status = VerifyState ( opts , state )"	253:2:6532:6567	5384505	16	True				
ANR	5384757	AssignmentExpression	"status = VerifyState ( opts , state )"		5384505	0		=			
ANR	5384758	Identifier	status		5384505	0					
ANR	5384759	CallExpression	"VerifyState ( opts , state )"		5384505	1					
ANR	5384760	Callee	VerifyState		5384505	0					
ANR	5384761	Identifier	VerifyState		5384505	0					
ANR	5384762	ArgumentList	opts		5384505	1					
ANR	5384763	Argument	opts		5384505	0					
ANR	5384764	Identifier	opts		5384505	0					
ANR	5384765	Argument	state		5384505	1					
ANR	5384766	Identifier	state		5384505	0					
ANR	5384767	BreakStatement	break ;	254:2:6571:6576	5384505	17	True				
ANR	5384768	IfStatement	if ( status == 0 )		5384505	15					
ANR	5384769	Condition	status == 0	257:6:6588:6598	5384505	0	True				
ANR	5384770	EqualityExpression	status == 0		5384505	0		==			
ANR	5384771	Identifier	status		5384505	0					
ANR	5384772	PrimaryExpression	0		5384505	1					
ANR	5384773	CompoundStatement		55:20:1207:1207	5384505	1					
ANR	5384774	ExpressionStatement	exit ( 0 )	258:2:6606:6615	5384505	0	True				
ANR	5384775	CallExpression	exit ( 0 )		5384505	0					
ANR	5384776	Callee	exit		5384505	0					
ANR	5384777	Identifier	exit		5384505	0					
ANR	5384778	ArgumentList	0		5384505	1					
ANR	5384779	Argument	0		5384505	0					
ANR	5384780	PrimaryExpression	0		5384505	0					
ANR	5384781	ElseStatement	else		5384505	0					
ANR	5384782	CompoundStatement		57:8:1230:1230	5384505	0					
ANR	5384783	ExpressionStatement	exit ( 2 )	260:2:6629:6638	5384505	0	True				
ANR	5384784	CallExpression	exit ( 2 )		5384505	0					
ANR	5384785	Callee	exit		5384505	0					
ANR	5384786	Identifier	exit		5384505	0					
ANR	5384787	ArgumentList	2		5384505	1					
ANR	5384788	Argument	2		5384505	0					
ANR	5384789	PrimaryExpression	2		5384505	0					
ANR	5384790	ReturnType	int		5384505	1					
ANR	5384791	Identifier	main		5384505	2					
ANR	5384792	ParameterList	"int argc , const char * * argv"		5384505	3					
ANR	5384793	Parameter	int argc	202:5:5365:5372	5384505	0	True				
ANR	5384794	ParameterType	int		5384505	0					
ANR	5384795	Identifier	argc		5384505	1					
ANR	5384796	Parameter	const char * * argv	202:15:5375:5391	5384505	1	True				
ANR	5384797	ParameterType	const char * *		5384505	0					
ANR	5384798	Identifier	argv		5384505	1					
ANR	5384799	CFGEntryNode	ENTRY		5384505		True				
ANR	5384800	CFGExitNode	EXIT		5384505		True				
ANR	5384801	Symbol	argc		5384505						
ANR	5384802	Symbol	opts . needStateFile		5384505						
ANR	5384803	Symbol	NULL		5384505						
ANR	5384804	Symbol	SUBSYSTEM_TYPE_TOOL		5384505						
ANR	5384805	Symbol	get_param_functions		5384505						
ANR	5384806	Symbol	D_ALWAYS		5384505						
ANR	5384807	Symbol	DebugFlags		5384505						
ANR	5384808	Symbol	p_funcs		5384505						
ANR	5384809	Symbol	stderr		5384505						
ANR	5384810	Symbol	state2		5384505						
ANR	5384811	Symbol	argv		5384505						
ANR	5384812	Symbol	CheckArgs		5384505						
ANR	5384813	Symbol	opts . needStateFile2		5384505						
ANR	5384814	Symbol	CheckStateAccess		5384505						
ANR	5384815	Symbol	ReadState		5384505						
ANR	5384816	Symbol	opts		5384505						
ANR	5384817	Symbol	myDistro		5384505						
ANR	5384818	Symbol	DiffState		5384505						
ANR	5384819	Symbol	VerifyState		5384505						
ANR	5384820	Symbol	DumpState		5384505						
ANR	5384821	Symbol	state		5384505						
ANR	5384822	Symbol	opts . getCommand		5384505						
ANR	5384823	Symbol	status		5384505						
ANR	5384824	Function	CheckArgs	264:0:6646:8103							
ANR	5384825	FunctionDef	"CheckArgs (int argc , const char * * argv , Options & opts)"		5384824	0					
ANR	5384826	CompoundStatement		266:0:6704:8103	5384824	0					
ANR	5384827	IdentifierDeclStatement	int status = 0 ;	267:1:6707:6722	5384824	0	True				
ANR	5384828	IdentifierDecl	status = 0		5384824	0					
ANR	5384829	IdentifierDeclType	int		5384824	0					
ANR	5384830	Identifier	status		5384824	1					
ANR	5384831	AssignmentExpression	status = 0		5384824	2		=			
ANR	5384832	Identifier	status		5384824	0					
ANR	5384833	PrimaryExpression	0		5384824	1					
ANR	5384834	ForStatement	for ( int argno = 1 ; argno < argc && status >= 0 ; argno ++ )		5384824	1					
ANR	5384835	ForInit	int argno = 1 ;	269:7:6732:6745	5384824	0	True				
ANR	5384836	IdentifierDeclStatement	int argno = 1 ;		5384824	0					
ANR	5384837	IdentifierDecl	argno = 1		5384824	0					
ANR	5384838	IdentifierDeclType	int		5384824	0					
ANR	5384839	Identifier	argno		5384824	1					
ANR	5384840	AssignmentExpression	argno = 1		5384824	2		=			
ANR	5384841	Identifier	argno		5384824	0					
ANR	5384842	PrimaryExpression	1		5384824	1					
ANR	5384843	Condition	argno < argc && status >= 0	269:23:6748:6774	5384824	1	True				
ANR	5384844	AndExpression	argno < argc && status >= 0		5384824	0		&&			
ANR	5384845	RelationalExpression	argno < argc		5384824	0		<			
ANR	5384846	Identifier	argno		5384824	0					
ANR	5384847	Identifier	argc		5384824	1					
ANR	5384848	RelationalExpression	status >= 0		5384824	1		>=			
ANR	5384849	Identifier	status		5384824	0					
ANR	5384850	PrimaryExpression	0		5384824	1					
ANR	5384851	PostIncDecOperationExpression	argno ++	269:53:6778:6784	5384824	2	True				
ANR	5384852	Identifier	argno		5384824	0					
ANR	5384853	IncDec	++		5384824	1					
ANR	5384854	CompoundStatement		5:2:87:121	5384824	3					
ANR	5384855	IdentifierDeclStatement	"SimpleArg arg ( argv , argc , argno ) ;"	270:2:6792:6826	5384824	0	True				
ANR	5384856	IdentifierDecl	"arg ( argv , argc , argno )"		5384824	0					
ANR	5384857	IdentifierDeclType	SimpleArg		5384824	0					
ANR	5384858	Identifier	arg		5384824	1					
ANR	5384859	Expression	"argv , argc , argno"		5384824	2					
ANR	5384860	Identifier	argv		5384824	0					
ANR	5384861	Expression	"argc , argno"		5384824	1					
ANR	5384862	Identifier	argc		5384824	0					
ANR	5384863	Identifier	argno		5384824	1					
ANR	5384864	IfStatement	if ( arg . Error ( ) )		5384824	1					
ANR	5384865	Condition	arg . Error ( )	272:7:6836:6846	5384824	0	True				
ANR	5384866	CallExpression	arg . Error ( )		5384824	0					
ANR	5384867	Callee	arg . Error		5384824	0					
ANR	5384868	MemberAccess	arg . Error		5384824	0					
ANR	5384869	Identifier	arg		5384824	0					
ANR	5384870	Identifier	Error		5384824	1					
ANR	5384871	ArgumentList			5384824	1					
ANR	5384872	CompoundStatement		7:21:145:145	5384824	1					
ANR	5384873	ExpressionStatement	"fprintf ( stderr , ""Failed parsing '%s'\\n"" , arg . Arg ( ) )"	273:3:6855:6908	5384824	0	True				
ANR	5384874	CallExpression	"fprintf ( stderr , ""Failed parsing '%s'\\n"" , arg . Arg ( ) )"		5384824	0					
ANR	5384875	Callee	fprintf		5384824	0					
ANR	5384876	Identifier	fprintf		5384824	0					
ANR	5384877	ArgumentList	stderr		5384824	1					
ANR	5384878	Argument	stderr		5384824	0					
ANR	5384879	Identifier	stderr		5384824	0					
ANR	5384880	Argument	"""Failed parsing '%s'\\n"""		5384824	1					
ANR	5384881	PrimaryExpression	"""Failed parsing '%s'\\n"""		5384824	0					
ANR	5384882	Argument	arg . Arg ( )		5384824	2					
ANR	5384883	CallExpression	arg . Arg ( )		5384824	0					
ANR	5384884	Callee	arg . Arg		5384824	0					
ANR	5384885	MemberAccess	arg . Arg		5384824	0					
ANR	5384886	Identifier	arg		5384824	0					
ANR	5384887	Identifier	Arg		5384824	1					
ANR	5384888	ArgumentList			5384824	1					
ANR	5384889	ExpressionStatement	status = - 1	274:3:6913:6924	5384824	1	True				
ANR	5384890	AssignmentExpression	status = - 1		5384824	0		=			
ANR	5384891	Identifier	status		5384824	0					
ANR	5384892	UnaryOperationExpression	- 1		5384824	1					
ANR	5384893	UnaryOperator	-		5384824	0					
ANR	5384894	PrimaryExpression	1		5384824	1					
ANR	5384895	IfStatement	if ( status > 0 )		5384824	2					
ANR	5384896	Condition	status > 0	277:7:6938:6947	5384824	0	True				
ANR	5384897	RelationalExpression	status > 0		5384824	0		>			
ANR	5384898	Identifier	status		5384824	0					
ANR	5384899	PrimaryExpression	0		5384824	1					
ANR	5384900	CompoundStatement		12:20:246:246	5384824	1					
ANR	5384901	Statement	fprintf	278:3:6956:6962	5384824	0	True				
ANR	5384902	Statement	(	278:10:6963:6963	5384824	1	True				
ANR	5384903	Statement	stderr	278:12:6965:6970	5384824	2	True				
ANR	5384904	Statement	","	278:18:6971:6971	5384824	3	True				
ANR	5384905	Statement	"""Warning: ignoring parameter %s\\n"""	279:6:6979:7012	5384824	4	True				
ANR	5384906	Statement	"""  use -h for help\\n"""	280:6:7020:7040	5384824	5	True				
ANR	5384907	Statement	","	280:27:7041:7041	5384824	6	True				
ANR	5384908	Statement	arg	281:6:7049:7051	5384824	7	True				
ANR	5384909	Statement	.	281:9:7052:7052	5384824	8	True				
ANR	5384910	Statement	Arg	281:10:7053:7055	5384824	9	True				
ANR	5384911	Statement	(	281:13:7056:7056	5384824	10	True				
ANR	5384912	Statement	)	281:14:7057:7057	5384824	11	True				
ANR	5384913	Statement	)	281:16:7059:7059	5384824	12	True				
ANR	5384914	ExpressionStatement		281:17:7060:7060	5384824	13	True				
ANR	5384915	ElseStatement	else		5384824	0					
ANR	5384916	IfStatement	if ( arg . ArgIsOpt ( ) )		5384824	0					
ANR	5384917	Condition	arg . ArgIsOpt ( )	283:12:7078:7091	5384824	0	True				
ANR	5384918	CallExpression	arg . ArgIsOpt ( )		5384824	0					
ANR	5384919	Callee	arg . ArgIsOpt		5384824	0					
ANR	5384920	MemberAccess	arg . ArgIsOpt		5384824	0					
ANR	5384921	Identifier	arg		5384824	0					
ANR	5384922	Identifier	ArgIsOpt		5384824	1					
ANR	5384923	ArgumentList			5384824	1					
ANR	5384924	CompoundStatement		18:29:390:390	5384824	1					
ANR	5384925	ExpressionStatement	"status = opts . handleOpt ( arg , argno )"	284:3:7100:7137	5384824	0	True				
ANR	5384926	AssignmentExpression	"status = opts . handleOpt ( arg , argno )"		5384824	0		=			
ANR	5384927	Identifier	status		5384824	0					
ANR	5384928	CallExpression	"opts . handleOpt ( arg , argno )"		5384824	1					
ANR	5384929	Callee	opts . handleOpt		5384824	0					
ANR	5384930	MemberAccess	opts . handleOpt		5384824	0					
ANR	5384931	Identifier	opts		5384824	0					
ANR	5384932	Identifier	handleOpt		5384824	1					
ANR	5384933	ArgumentList	arg		5384824	1					
ANR	5384934	Argument	arg		5384824	0					
ANR	5384935	Identifier	arg		5384824	0					
ANR	5384936	Argument	argno		5384824	1					
ANR	5384937	Identifier	argno		5384824	0					
ANR	5384938	ElseStatement	else		5384824	0					
ANR	5384939	CompoundStatement		21:7:445:445	5384824	0					
ANR	5384940	ExpressionStatement	"status = opts . handleFixed ( arg , argno )"	287:3:7155:7194	5384824	0	True				
ANR	5384941	AssignmentExpression	"status = opts . handleFixed ( arg , argno )"		5384824	0		=			
ANR	5384942	Identifier	status		5384824	0					
ANR	5384943	CallExpression	"opts . handleFixed ( arg , argno )"		5384824	1					
ANR	5384944	Callee	opts . handleFixed		5384824	0					
ANR	5384945	MemberAccess	opts . handleFixed		5384824	0					
ANR	5384946	Identifier	opts		5384824	0					
ANR	5384947	Identifier	handleFixed		5384824	1					
ANR	5384948	ArgumentList	arg		5384824	1					
ANR	5384949	Argument	arg		5384824	0					
ANR	5384950	Identifier	arg		5384824	0					
ANR	5384951	Argument	argno		5384824	1					
ANR	5384952	Identifier	argno		5384824	0					
ANR	5384953	IfStatement	if ( ( opts . needStateFile ( ) ) && ( NULL == opts . getFile ( ) ) )		5384824	2					
ANR	5384954	Condition	( opts . needStateFile ( ) ) && ( NULL == opts . getFile ( ) )	291:6:7210:7263	5384824	0	True				
ANR	5384955	AndExpression	( opts . needStateFile ( ) ) && ( NULL == opts . getFile ( ) )		5384824	0		&&			
ANR	5384956	CallExpression	opts . needStateFile ( )		5384824	0					
ANR	5384957	Callee	opts . needStateFile		5384824	0					
ANR	5384958	MemberAccess	opts . needStateFile		5384824	0					
ANR	5384959	Identifier	opts		5384824	0					
ANR	5384960	Identifier	needStateFile		5384824	1					
ANR	5384961	ArgumentList			5384824	1					
ANR	5384962	EqualityExpression	NULL == opts . getFile ( )		5384824	1		==			
ANR	5384963	Identifier	NULL		5384824	0					
ANR	5384964	CallExpression	opts . getFile ( )		5384824	1					
ANR	5384965	Callee	opts . getFile		5384824	0					
ANR	5384966	MemberAccess	opts . getFile		5384824	0					
ANR	5384967	Identifier	opts		5384824	0					
ANR	5384968	Identifier	getFile		5384824	1					
ANR	5384969	ArgumentList			5384824	1					
ANR	5384970	CompoundStatement		26:63:562:562	5384824	1					
ANR	5384971	Statement	fprintf	292:2:7271:7277	5384824	0	True				
ANR	5384972	Statement	(	292:9:7278:7278	5384824	1	True				
ANR	5384973	Statement	stderr	292:11:7280:7285	5384824	2	True				
ANR	5384974	Statement	","	292:17:7286:7286	5384824	3	True				
ANR	5384975	Statement	"""No state file specified\\n"""	293:5:7293:7319	5384824	4	True				
ANR	5384976	Statement	"""  use -h for help\\n"""	294:5:7326:7346	5384824	5	True				
ANR	5384977	Statement	)	294:27:7348:7348	5384824	6	True				
ANR	5384978	ExpressionStatement		294:28:7349:7349	5384824	7	True				
ANR	5384979	ExpressionStatement	status = - 1	295:2:7353:7364	5384824	8	True				
ANR	5384980	AssignmentExpression	status = - 1		5384824	0		=			
ANR	5384981	Identifier	status		5384824	0					
ANR	5384982	UnaryOperationExpression	- 1		5384824	1					
ANR	5384983	UnaryOperator	-		5384824	0					
ANR	5384984	PrimaryExpression	1		5384824	1					
ANR	5384985	ElseStatement	else		5384824	0					
ANR	5384986	IfStatement	if ( ( opts . needStateFile2 ( ) ) && ( NULL == opts . getFile2 ( ) ) )		5384824	0					
ANR	5384987	Condition	( opts . needStateFile2 ( ) ) && ( NULL == opts . getFile2 ( ) )	297:11:7380:7435	5384824	0	True				
ANR	5384988	AndExpression	( opts . needStateFile2 ( ) ) && ( NULL == opts . getFile2 ( ) )		5384824	0		&&			
ANR	5384989	CallExpression	opts . needStateFile2 ( )		5384824	0					
ANR	5384990	Callee	opts . needStateFile2		5384824	0					
ANR	5384991	MemberAccess	opts . needStateFile2		5384824	0					
ANR	5384992	Identifier	opts		5384824	0					
ANR	5384993	Identifier	needStateFile2		5384824	1					
ANR	5384994	ArgumentList			5384824	1					
ANR	5384995	EqualityExpression	NULL == opts . getFile2 ( )		5384824	1		==			
ANR	5384996	Identifier	NULL		5384824	0					
ANR	5384997	CallExpression	opts . getFile2 ( )		5384824	1					
ANR	5384998	Callee	opts . getFile2		5384824	0					
ANR	5384999	MemberAccess	opts . getFile2		5384824	0					
ANR	5385000	Identifier	opts		5384824	0					
ANR	5385001	Identifier	getFile2		5384824	1					
ANR	5385002	ArgumentList			5384824	1					
ANR	5385003	CompoundStatement		32:70:734:734	5384824	1					
ANR	5385004	Statement	fprintf	298:2:7443:7449	5384824	0	True				
ANR	5385005	Statement	(	298:9:7450:7450	5384824	1	True				
ANR	5385006	Statement	stderr	298:11:7452:7457	5384824	2	True				
ANR	5385007	Statement	","	298:17:7458:7458	5384824	3	True				
ANR	5385008	Statement	"""2nd State file not specified\\n"""	299:5:7465:7496	5384824	4	True				
ANR	5385009	Statement	"""  use -h for help\\n"""	300:5:7503:7523	5384824	5	True				
ANR	5385010	Statement	)	300:27:7525:7525	5384824	6	True				
ANR	5385011	ExpressionStatement		300:28:7526:7526	5384824	7	True				
ANR	5385012	ExpressionStatement	status = - 1	301:2:7530:7541	5384824	8	True				
ANR	5385013	AssignmentExpression	status = - 1		5384824	0		=			
ANR	5385014	Identifier	status		5384824	0					
ANR	5385015	UnaryOperationExpression	- 1		5384824	1					
ANR	5385016	UnaryOperator	-		5384824	0					
ANR	5385017	PrimaryExpression	1		5384824	1					
ANR	5385018	ElseStatement	else		5384824	0					
ANR	5385019	IfStatement	if ( CMD_NONE == opts . getCommand ( ) )		5384824	0					
ANR	5385020	Condition	CMD_NONE == opts . getCommand ( )	303:11:7557:7585	5384824	0	True				
ANR	5385021	EqualityExpression	CMD_NONE == opts . getCommand ( )		5384824	0		==			
ANR	5385022	Identifier	CMD_NONE		5384824	0					
ANR	5385023	CallExpression	opts . getCommand ( )		5384824	1					
ANR	5385024	Callee	opts . getCommand		5384824	0					
ANR	5385025	MemberAccess	opts . getCommand		5384824	0					
ANR	5385026	Identifier	opts		5384824	0					
ANR	5385027	Identifier	getCommand		5384824	1					
ANR	5385028	ArgumentList			5384824	1					
ANR	5385029	CompoundStatement		38:43:884:884	5384824	1					
ANR	5385030	Statement	fprintf	304:2:7593:7599	5384824	0	True				
ANR	5385031	Statement	(	304:9:7600:7600	5384824	1	True				
ANR	5385032	Statement	stderr	304:11:7602:7607	5384824	2	True				
ANR	5385033	Statement	","	304:17:7608:7608	5384824	3	True				
ANR	5385034	Statement	"""No command specified\\n"""	305:5:7615:7638	5384824	4	True				
ANR	5385035	Statement	"""  use -h for help\\n"""	306:5:7645:7665	5384824	5	True				
ANR	5385036	Statement	)	306:27:7667:7667	5384824	6	True				
ANR	5385037	ExpressionStatement		306:28:7668:7668	5384824	7	True				
ANR	5385038	ExpressionStatement	status = - 1	307:2:7672:7683	5384824	8	True				
ANR	5385039	AssignmentExpression	status = - 1		5384824	0		=			
ANR	5385040	Identifier	status		5384824	0					
ANR	5385041	UnaryOperationExpression	- 1		5384824	1					
ANR	5385042	UnaryOperator	-		5384824	0					
ANR	5385043	PrimaryExpression	1		5384824	1					
ANR	5385044	ElseStatement	else		5384824	0					
ANR	5385045	IfStatement	if ( CMD_VERIFY == opts . getCommand ( ) )		5384824	0					
ANR	5385046	Condition	CMD_VERIFY == opts . getCommand ( )	309:11:7699:7729	5384824	0	True				
ANR	5385047	EqualityExpression	CMD_VERIFY == opts . getCommand ( )		5384824	0		==			
ANR	5385048	Identifier	CMD_VERIFY		5384824	0					
ANR	5385049	CallExpression	opts . getCommand ( )		5384824	1					
ANR	5385050	Callee	opts . getCommand		5384824	0					
ANR	5385051	MemberAccess	opts . getCommand		5384824	0					
ANR	5385052	Identifier	opts		5384824	0					
ANR	5385053	Identifier	getCommand		5384824	1					
ANR	5385054	ArgumentList			5384824	1					
ANR	5385055	CompoundStatement		44:45:1028:1028	5384824	1					
ANR	5385056	IfStatement	if ( NULL == opts . getField ( ) || FIELD_NONE == opts . getField ( ) -> m_field )		5384824	0					
ANR	5385057	Condition	NULL == opts . getField ( ) || FIELD_NONE == opts . getField ( ) -> m_field	310:7:7742:7810	5384824	0	True				
ANR	5385058	OrExpression	NULL == opts . getField ( ) || FIELD_NONE == opts . getField ( ) -> m_field		5384824	0		||			
ANR	5385059	EqualityExpression	NULL == opts . getField ( )		5384824	0		==			
ANR	5385060	Identifier	NULL		5384824	0					
ANR	5385061	CallExpression	opts . getField ( )		5384824	1					
ANR	5385062	Callee	opts . getField		5384824	0					
ANR	5385063	MemberAccess	opts . getField		5384824	0					
ANR	5385064	Identifier	opts		5384824	0					
ANR	5385065	Identifier	getField		5384824	1					
ANR	5385066	ArgumentList			5384824	1					
ANR	5385067	EqualityExpression	FIELD_NONE == opts . getField ( ) -> m_field		5384824	1		==			
ANR	5385068	Identifier	FIELD_NONE		5384824	0					
ANR	5385069	PtrMemberAccess	opts . getField ( ) -> m_field		5384824	1					
ANR	5385070	CallExpression	opts . getField ( )		5384824	0					
ANR	5385071	Callee	opts . getField		5384824	0					
ANR	5385072	MemberAccess	opts . getField		5384824	0					
ANR	5385073	Identifier	opts		5384824	0					
ANR	5385074	Identifier	getField		5384824	1					
ANR	5385075	ArgumentList			5384824	1					
ANR	5385076	Identifier	m_field		5384824	1					
ANR	5385077	CompoundStatement		46:45:1109:1109	5384824	1					
ANR	5385078	Statement	fprintf	312:3:7819:7825	5384824	0	True				
ANR	5385079	Statement	(	312:10:7826:7826	5384824	1	True				
ANR	5385080	Statement	stderr	312:12:7828:7833	5384824	2	True				
ANR	5385081	Statement	","	312:18:7834:7834	5384824	3	True				
ANR	5385082	Statement	"""Verify: no field name specified\\n"""	313:6:7842:7876	5384824	4	True				
ANR	5385083	Statement	"""  use -h for help\\n"""	314:6:7884:7904	5384824	5	True				
ANR	5385084	Statement	)	314:28:7906:7906	5384824	6	True				
ANR	5385085	ExpressionStatement		314:29:7907:7907	5384824	7	True				
ANR	5385086	ExpressionStatement	status = - 1	315:3:7912:7923	5384824	8	True				
ANR	5385087	AssignmentExpression	status = - 1		5384824	0		=			
ANR	5385088	Identifier	status		5384824	0					
ANR	5385089	UnaryOperationExpression	- 1		5384824	1					
ANR	5385090	UnaryOperator	-		5384824	0					
ANR	5385091	PrimaryExpression	1		5384824	1					
ANR	5385092	ElseStatement	else		5384824	0					
ANR	5385093	IfStatement	if ( ! opts . isValueOk ( ) )		5384824	0					
ANR	5385094	Condition	! opts . isValueOk ( )	317:12:7941:7958	5384824	0	True				
ANR	5385095	UnaryOperationExpression	! opts . isValueOk ( )		5384824	0					
ANR	5385096	UnaryOperator	!		5384824	0					
ANR	5385097	CallExpression	opts . isValueOk ( )		5384824	1					
ANR	5385098	Callee	opts . isValueOk		5384824	0					
ANR	5385099	MemberAccess	opts . isValueOk		5384824	0					
ANR	5385100	Identifier	opts		5384824	0					
ANR	5385101	Identifier	isValueOk		5384824	1					
ANR	5385102	ArgumentList			5384824	1					
ANR	5385103	CompoundStatement		52:33:1257:1257	5384824	1					
ANR	5385104	Statement	fprintf	318:3:7967:7973	5384824	0	True				
ANR	5385105	Statement	(	318:10:7974:7974	5384824	1	True				
ANR	5385106	Statement	stderr	318:12:7976:7981	5384824	2	True				
ANR	5385107	Statement	","	318:18:7982:7982	5384824	3	True				
ANR	5385108	Statement	"""Verify: no value (or range) specified\\n"""	319:6:7990:8030	5384824	4	True				
ANR	5385109	Statement	"""  use -h for help\\n"""	320:6:8038:8058	5384824	5	True				
ANR	5385110	Statement	)	320:28:8060:8060	5384824	6	True				
ANR	5385111	ExpressionStatement		320:29:8061:8061	5384824	7	True				
ANR	5385112	ExpressionStatement	status = - 1	321:3:8066:8077	5384824	8	True				
ANR	5385113	AssignmentExpression	status = - 1		5384824	0		=			
ANR	5385114	Identifier	status		5384824	0					
ANR	5385115	UnaryOperationExpression	- 1		5384824	1					
ANR	5385116	UnaryOperator	-		5384824	0					
ANR	5385117	PrimaryExpression	1		5384824	1					
ANR	5385118	ReturnStatement	return status ;	325:1:8088:8101	5384824	3	True				
ANR	5385119	Identifier	status		5384824	0					
ANR	5385120	ReturnType	int		5384824	1					
ANR	5385121	Identifier	CheckArgs		5384824	2					
ANR	5385122	ParameterList	"int argc , const char * * argv , Options & opts"		5384824	3					
ANR	5385123	Parameter	int argc	265:10:6660:6667	5384824	0	True				
ANR	5385124	ParameterType	int		5384824	0					
ANR	5385125	Identifier	argc		5384824	1					
ANR	5385126	Parameter	const char * * argv	265:20:6670:6686	5384824	1	True				
ANR	5385127	ParameterType	const char * *		5384824	0					
ANR	5385128	Identifier	argv		5384824	1					
ANR	5385129	Parameter	Options & opts	265:39:6689:6701	5384824	2	True				
ANR	5385130	ParameterType	Options &		5384824	0					
ANR	5385131	Identifier	opts		5384824	1					
ANR	5385132	CFGEntryNode	ENTRY		5384824		True				
ANR	5385133	CFGExitNode	EXIT		5384824		True				
ANR	5385134	Symbol	argv		5384824						
ANR	5385135	Symbol	opts . needStateFile2		5384824						
ANR	5385136	Symbol	opts		5384824						
ANR	5385137	Symbol	arg		5384824						
ANR	5385138	Symbol	opts . getFile		5384824						
ANR	5385139	Symbol	argno		5384824						
ANR	5385140	Symbol	opts . getCommand		5384824						
ANR	5385141	Symbol	opts . handleOpt		5384824						
ANR	5385142	Symbol	opts . getField ( ) -> m_field		5384824						
ANR	5385143	Symbol	argc		5384824						
ANR	5385144	Symbol	opts . needStateFile		5384824						
ANR	5385145	Symbol	opts . isValueOk		5384824						
ANR	5385146	Symbol	NULL		5384824						
ANR	5385147	Symbol	opts . getFile2		5384824						
ANR	5385148	Symbol	arg . Error		5384824						
ANR	5385149	Symbol	CMD_NONE		5384824						
ANR	5385150	Symbol	stderr		5384824						
ANR	5385151	Symbol	opts . getField		5384824						
ANR	5385152	Symbol	arg . ArgIsOpt		5384824						
ANR	5385153	Symbol	opts . handleFixed		5384824						
ANR	5385154	Symbol	FIELD_NONE		5384824						
ANR	5385155	Symbol	arg . Arg		5384824						
ANR	5385156	Symbol	* opts		5384824						
ANR	5385157	Symbol	* opts . getField		5384824						
ANR	5385158	Symbol	status		5384824						
ANR	5385159	Symbol	CMD_VERIFY		5384824						
ANR	5385160	Function	ReadState	328:0:8106:8663							
ANR	5385161	FunctionDef	"ReadState (const Options & opts , ReadUserLog :: FileState & state)"		5385160	0					
ANR	5385162	CompoundStatement		331:0:8180:8663	5385160	0					
ANR	5385163	ExpressionStatement	ReadUserLog :: InitFileState ( state )	334:1:8218:8253	5385160	0	True				
ANR	5385164	CallExpression	ReadUserLog :: InitFileState ( state )		5385160	0					
ANR	5385165	Callee	ReadUserLog :: InitFileState		5385160	0					
ANR	5385166	Identifier	ReadUserLog :: InitFileState		5385160	0					
ANR	5385167	ArgumentList	state		5385160	1					
ANR	5385168	Argument	state		5385160	0					
ANR	5385169	Identifier	state		5385160	0					
ANR	5385170	ExpressionStatement	"printf ( ""Reading state %s\\n"" , opts . getFile ( ) )"	336:1:8257:8303	5385160	1	True				
ANR	5385171	CallExpression	"printf ( ""Reading state %s\\n"" , opts . getFile ( ) )"		5385160	0					
ANR	5385172	Callee	printf		5385160	0					
ANR	5385173	Identifier	printf		5385160	0					
ANR	5385174	ArgumentList	"""Reading state %s\\n"""		5385160	1					
ANR	5385175	Argument	"""Reading state %s\\n"""		5385160	0					
ANR	5385176	PrimaryExpression	"""Reading state %s\\n"""		5385160	0					
ANR	5385177	Argument	opts . getFile ( )		5385160	1					
ANR	5385178	CallExpression	opts . getFile ( )		5385160	0					
ANR	5385179	Callee	opts . getFile		5385160	0					
ANR	5385180	MemberAccess	opts . getFile		5385160	0					
ANR	5385181	Identifier	opts		5385160	0					
ANR	5385182	Identifier	getFile		5385160	1					
ANR	5385183	ArgumentList			5385160	1					
ANR	5385184	IdentifierDeclStatement	"int fd = safe_open_wrapper_follow ( opts . getFile ( ) , O_RDONLY , 0 ) ;"	337:1:8306:8370	5385160	2	True				
ANR	5385185	IdentifierDecl	"fd = safe_open_wrapper_follow ( opts . getFile ( ) , O_RDONLY , 0 )"		5385160	0					
ANR	5385186	IdentifierDeclType	int		5385160	0					
ANR	5385187	Identifier	fd		5385160	1					
ANR	5385188	AssignmentExpression	"fd = safe_open_wrapper_follow ( opts . getFile ( ) , O_RDONLY , 0 )"		5385160	2		=			
ANR	5385189	Identifier	fd		5385160	0					
ANR	5385190	CallExpression	"safe_open_wrapper_follow ( opts . getFile ( ) , O_RDONLY , 0 )"		5385160	1					
ANR	5385191	Callee	safe_open_wrapper_follow		5385160	0					
ANR	5385192	Identifier	safe_open_wrapper_follow		5385160	0					
ANR	5385193	ArgumentList	opts . getFile ( )		5385160	1					
ANR	5385194	Argument	opts . getFile ( )		5385160	0					
ANR	5385195	CallExpression	opts . getFile ( )		5385160	0					
ANR	5385196	Callee	opts . getFile		5385160	0					
ANR	5385197	MemberAccess	opts . getFile		5385160	0					
ANR	5385198	Identifier	opts		5385160	0					
ANR	5385199	Identifier	getFile		5385160	1					
ANR	5385200	ArgumentList			5385160	1					
ANR	5385201	Argument	O_RDONLY		5385160	1					
ANR	5385202	Identifier	O_RDONLY		5385160	0					
ANR	5385203	Argument	0		5385160	2					
ANR	5385204	PrimaryExpression	0		5385160	0					
ANR	5385205	IfStatement	if ( fd < 0 )		5385160	3					
ANR	5385206	Condition	fd < 0	338:6:8378:8383	5385160	0	True				
ANR	5385207	RelationalExpression	fd < 0		5385160	0		<			
ANR	5385208	Identifier	fd		5385160	0					
ANR	5385209	PrimaryExpression	0		5385160	1					
ANR	5385210	CompoundStatement		8:15:206:206	5385160	1					
ANR	5385211	ExpressionStatement	"fprintf ( stderr , ""Failed to read state file %s\\n"" , opts . getFile ( ) )"	339:2:8391:8458	5385160	0	True				
ANR	5385212	CallExpression	"fprintf ( stderr , ""Failed to read state file %s\\n"" , opts . getFile ( ) )"		5385160	0					
ANR	5385213	Callee	fprintf		5385160	0					
ANR	5385214	Identifier	fprintf		5385160	0					
ANR	5385215	ArgumentList	stderr		5385160	1					
ANR	5385216	Argument	stderr		5385160	0					
ANR	5385217	Identifier	stderr		5385160	0					
ANR	5385218	Argument	"""Failed to read state file %s\\n"""		5385160	1					
ANR	5385219	PrimaryExpression	"""Failed to read state file %s\\n"""		5385160	0					
ANR	5385220	Argument	opts . getFile ( )		5385160	2					
ANR	5385221	CallExpression	opts . getFile ( )		5385160	0					
ANR	5385222	Callee	opts . getFile		5385160	0					
ANR	5385223	MemberAccess	opts . getFile		5385160	0					
ANR	5385224	Identifier	opts		5385160	0					
ANR	5385225	Identifier	getFile		5385160	1					
ANR	5385226	ArgumentList			5385160	1					
ANR	5385227	ReturnStatement	return - 1 ;	340:2:8462:8471	5385160	1	True				
ANR	5385228	UnaryOperationExpression	- 1		5385160	0					
ANR	5385229	UnaryOperator	-		5385160	0					
ANR	5385230	PrimaryExpression	1		5385160	1					
ANR	5385231	IfStatement	"if ( read ( fd , state . buf , state . size ) != state . size )"		5385160	4					
ANR	5385232	Condition	"read ( fd , state . buf , state . size ) != state . size"	343:6:8483:8529	5385160	0	True				
ANR	5385233	EqualityExpression	"read ( fd , state . buf , state . size ) != state . size"		5385160	0		!=			
ANR	5385234	CallExpression	"read ( fd , state . buf , state . size )"		5385160	0					
ANR	5385235	Callee	read		5385160	0					
ANR	5385236	Identifier	read		5385160	0					
ANR	5385237	ArgumentList	fd		5385160	1					
ANR	5385238	Argument	fd		5385160	0					
ANR	5385239	Identifier	fd		5385160	0					
ANR	5385240	Argument	state . buf		5385160	1					
ANR	5385241	MemberAccess	state . buf		5385160	0					
ANR	5385242	Identifier	state		5385160	0					
ANR	5385243	Identifier	buf		5385160	1					
ANR	5385244	Argument	state . size		5385160	2					
ANR	5385245	MemberAccess	state . size		5385160	0					
ANR	5385246	Identifier	state		5385160	0					
ANR	5385247	Identifier	size		5385160	1					
ANR	5385248	MemberAccess	state . size		5385160	1					
ANR	5385249	Identifier	state		5385160	0					
ANR	5385250	Identifier	size		5385160	1					
ANR	5385251	CompoundStatement		13:56:352:352	5385160	1					
ANR	5385252	ExpressionStatement	"fprintf ( stderr , ""Failed reading state file %s\\n"" , opts . getFile ( ) )"	344:2:8537:8604	5385160	0	True				
ANR	5385253	CallExpression	"fprintf ( stderr , ""Failed reading state file %s\\n"" , opts . getFile ( ) )"		5385160	0					
ANR	5385254	Callee	fprintf		5385160	0					
ANR	5385255	Identifier	fprintf		5385160	0					
ANR	5385256	ArgumentList	stderr		5385160	1					
ANR	5385257	Argument	stderr		5385160	0					
ANR	5385258	Identifier	stderr		5385160	0					
ANR	5385259	Argument	"""Failed reading state file %s\\n"""		5385160	1					
ANR	5385260	PrimaryExpression	"""Failed reading state file %s\\n"""		5385160	0					
ANR	5385261	Argument	opts . getFile ( )		5385160	2					
ANR	5385262	CallExpression	opts . getFile ( )		5385160	0					
ANR	5385263	Callee	opts . getFile		5385160	0					
ANR	5385264	MemberAccess	opts . getFile		5385160	0					
ANR	5385265	Identifier	opts		5385160	0					
ANR	5385266	Identifier	getFile		5385160	1					
ANR	5385267	ArgumentList			5385160	1					
ANR	5385268	ExpressionStatement	close ( fd )	345:2:8608:8619	5385160	1	True				
ANR	5385269	CallExpression	close ( fd )		5385160	0					
ANR	5385270	Callee	close		5385160	0					
ANR	5385271	Identifier	close		5385160	0					
ANR	5385272	ArgumentList	fd		5385160	1					
ANR	5385273	Argument	fd		5385160	0					
ANR	5385274	Identifier	fd		5385160	0					
ANR	5385275	ReturnStatement	return - 1 ;	346:2:8623:8632	5385160	2	True				
ANR	5385276	UnaryOperationExpression	- 1		5385160	0					
ANR	5385277	UnaryOperator	-		5385160	0					
ANR	5385278	PrimaryExpression	1		5385160	1					
ANR	5385279	ExpressionStatement	close ( fd )	348:1:8638:8649	5385160	5	True				
ANR	5385280	CallExpression	close ( fd )		5385160	0					
ANR	5385281	Callee	close		5385160	0					
ANR	5385282	Identifier	close		5385160	0					
ANR	5385283	ArgumentList	fd		5385160	1					
ANR	5385284	Argument	fd		5385160	0					
ANR	5385285	Identifier	fd		5385160	0					
ANR	5385286	ReturnStatement	return 0 ;	350:1:8653:8661	5385160	6	True				
ANR	5385287	PrimaryExpression	0		5385160	0					
ANR	5385288	ReturnType	int		5385160	1					
ANR	5385289	Identifier	ReadState		5385160	2					
ANR	5385290	ParameterList	"const Options & opts , ReadUserLog :: FileState & state"		5385160	3					
ANR	5385291	Parameter	const Options & opts	329:10:8120:8141	5385160	0	True				
ANR	5385292	ParameterType	const Options &		5385160	0					
ANR	5385293	Identifier	opts		5385160	1					
ANR	5385294	Parameter	ReadUserLog :: FileState & state	330:4:8148:8176	5385160	1	True				
ANR	5385295	ParameterType	ReadUserLog :: FileState &		5385160	0					
ANR	5385296	Identifier	state		5385160	1					
ANR	5385297	CFGEntryNode	ENTRY		5385160		True				
ANR	5385298	CFGExitNode	EXIT		5385160		True				
ANR	5385299	Symbol	state . buf		5385160						
ANR	5385300	Symbol	safe_open_wrapper_follow		5385160						
ANR	5385301	Symbol	O_RDONLY		5385160						
ANR	5385302	Symbol	read		5385160						
ANR	5385303	Symbol	opts		5385160						
ANR	5385304	Symbol	opts . getFile		5385160						
ANR	5385305	Symbol	state . size		5385160						
ANR	5385306	Symbol	state		5385160						
ANR	5385307	Symbol	stderr		5385160						
ANR	5385308	Symbol	fd		5385160						
ANR	5385309	Function	DumpState	354:0:8667:12075							
ANR	5385310	FunctionDef	"DumpState (const Options & opts , const ReadUserLog :: FileState & state , const FieldData * wdata)"		5385309	0					
ANR	5385311	CompoundStatement		358:0:8775:12075	5385309	0					
ANR	5385312	IdentifierDeclStatement	"ReadUserLogState rstate ( state , 60 ) ;"	359:1:8778:8814	5385309	0	True				
ANR	5385313	IdentifierDecl	"rstate ( state , 60 )"		5385309	0					
ANR	5385314	IdentifierDeclType	ReadUserLogState		5385309	0					
ANR	5385315	Identifier	rstate		5385309	1					
ANR	5385316	Expression	"state , 60"		5385309	2					
ANR	5385317	Identifier	state		5385309	0					
ANR	5385318	PrimaryExpression	60		5385309	1					
ANR	5385319	IdentifierDeclStatement	const ReadUserLogState :: FileState * istate ;	360:1:8817:8858	5385309	1	True				
ANR	5385320	IdentifierDecl	* istate		5385309	0					
ANR	5385321	IdentifierDeclType	const ReadUserLogState :: FileState *		5385309	0					
ANR	5385322	Identifier	istate		5385309	1					
ANR	5385323	ExpressionStatement	"ReadUserLogState :: convertState ( state , istate )"	361:1:8861:8908	5385309	2	True				
ANR	5385324	CallExpression	"ReadUserLogState :: convertState ( state , istate )"		5385309	0					
ANR	5385325	Callee	ReadUserLogState :: convertState		5385309	0					
ANR	5385326	Identifier	ReadUserLogState :: convertState		5385309	0					
ANR	5385327	ArgumentList	state		5385309	1					
ANR	5385328	Argument	state		5385309	0					
ANR	5385329	Identifier	state		5385309	0					
ANR	5385330	Argument	istate		5385309	1					
ANR	5385331	Identifier	istate		5385309	0					
ANR	5385332	IfStatement	if ( NULL == wdata )		5385309	3					
ANR	5385333	Condition	NULL == wdata	363:6:8917:8929	5385309	0	True				
ANR	5385334	EqualityExpression	NULL == wdata		5385309	0		==			
ANR	5385335	Identifier	NULL		5385309	0					
ANR	5385336	Identifier	wdata		5385309	1					
ANR	5385337	CompoundStatement		6:22:157:157	5385309	1					
ANR	5385338	ExpressionStatement	wdata = opts . getField ( )	364:2:8937:8961	5385309	0	True				
ANR	5385339	AssignmentExpression	wdata = opts . getField ( )		5385309	0		=			
ANR	5385340	Identifier	wdata		5385309	0					
ANR	5385341	CallExpression	opts . getField ( )		5385309	1					
ANR	5385342	Callee	opts . getField		5385309	0					
ANR	5385343	MemberAccess	opts . getField		5385309	0					
ANR	5385344	Identifier	opts		5385309	0					
ANR	5385345	Identifier	getField		5385309	1					
ANR	5385346	ArgumentList			5385309	1					
ANR	5385347	SwitchStatement	switch ( wdata -> m_field )		5385309	4					
ANR	5385348	Condition	wdata -> m_field	367:9:8976:8989	5385309	0	True				
ANR	5385349	PtrMemberAccess	wdata -> m_field		5385309	0					
ANR	5385350	Identifier	wdata		5385309	0					
ANR	5385351	Identifier	m_field		5385309	1					
ANR	5385352	CompoundStatement		11:1:218:218	5385309	1					
ANR	5385353	Label	case FIELD_NONE :	369:1:8997:9012	5385309	0	True				
ANR	5385354	Identifier	FIELD_NONE		5385309	0					
ANR	5385355	ReturnStatement	return - 1 ;	370:2:9016:9025	5385309	1	True				
ANR	5385356	UnaryOperationExpression	- 1		5385309	0					
ANR	5385357	UnaryOperator	-		5385309	0					
ANR	5385358	PrimaryExpression	1		5385309	1					
ANR	5385359	BreakStatement	break ;	371:2:9029:9034	5385309	2	True				
ANR	5385360	Label	case FIELD_SIGNATURE :	373:1:9038:9058	5385309	3	True				
ANR	5385361	Identifier	FIELD_SIGNATURE		5385309	0					
ANR	5385362	ExpressionStatement	"printf ( ""  %s: '%s'\\n"" , wdata -> m_name , istate -> m_signature )"	374:2:9062:9122	5385309	4	True				
ANR	5385363	CallExpression	"printf ( ""  %s: '%s'\\n"" , wdata -> m_name , istate -> m_signature )"		5385309	0					
ANR	5385364	Callee	printf		5385309	0					
ANR	5385365	Identifier	printf		5385309	0					
ANR	5385366	ArgumentList	"""  %s: '%s'\\n"""		5385309	1					
ANR	5385367	Argument	"""  %s: '%s'\\n"""		5385309	0					
ANR	5385368	PrimaryExpression	"""  %s: '%s'\\n"""		5385309	0					
ANR	5385369	Argument	wdata -> m_name		5385309	1					
ANR	5385370	PtrMemberAccess	wdata -> m_name		5385309	0					
ANR	5385371	Identifier	wdata		5385309	0					
ANR	5385372	Identifier	m_name		5385309	1					
ANR	5385373	Argument	istate -> m_signature		5385309	2					
ANR	5385374	PtrMemberAccess	istate -> m_signature		5385309	0					
ANR	5385375	Identifier	istate		5385309	0					
ANR	5385376	Identifier	m_signature		5385309	1					
ANR	5385377	BreakStatement	break ;	375:2:9126:9131	5385309	5	True				
ANR	5385378	Label	case FIELD_VERSION :	377:1:9135:9153	5385309	6	True				
ANR	5385379	Identifier	FIELD_VERSION		5385309	0					
ANR	5385380	ExpressionStatement	"printf ( ""  %s: %d\\n"" , wdata -> m_name , istate -> m_version )"	378:2:9157:9213	5385309	7	True				
ANR	5385381	CallExpression	"printf ( ""  %s: %d\\n"" , wdata -> m_name , istate -> m_version )"		5385309	0					
ANR	5385382	Callee	printf		5385309	0					
ANR	5385383	Identifier	printf		5385309	0					
ANR	5385384	ArgumentList	"""  %s: %d\\n"""		5385309	1					
ANR	5385385	Argument	"""  %s: %d\\n"""		5385309	0					
ANR	5385386	PrimaryExpression	"""  %s: %d\\n"""		5385309	0					
ANR	5385387	Argument	wdata -> m_name		5385309	1					
ANR	5385388	PtrMemberAccess	wdata -> m_name		5385309	0					
ANR	5385389	Identifier	wdata		5385309	0					
ANR	5385390	Identifier	m_name		5385309	1					
ANR	5385391	Argument	istate -> m_version		5385309	2					
ANR	5385392	PtrMemberAccess	istate -> m_version		5385309	0					
ANR	5385393	Identifier	istate		5385309	0					
ANR	5385394	Identifier	m_version		5385309	1					
ANR	5385395	BreakStatement	break ;	379:2:9217:9222	5385309	8	True				
ANR	5385396	Label	case FIELD_UPDATE_TIME :	381:1:9226:9248	5385309	9	True				
ANR	5385397	Identifier	FIELD_UPDATE_TIME		5385309	0					
ANR	5385398	IfStatement	if ( opts . getNumeric ( ) )		5385309	10					
ANR	5385399	Condition	opts . getNumeric ( )	382:7:9257:9273	5385309	0	True				
ANR	5385400	CallExpression	opts . getNumeric ( )		5385309	0					
ANR	5385401	Callee	opts . getNumeric		5385309	0					
ANR	5385402	MemberAccess	opts . getNumeric		5385309	0					
ANR	5385403	Identifier	opts		5385309	0					
ANR	5385404	Identifier	getNumeric		5385309	1					
ANR	5385405	ArgumentList			5385309	1					
ANR	5385406	CompoundStatement		25:27:501:501	5385309	1					
ANR	5385407	Statement	printf	383:3:9282:9287	5385309	0	True				
ANR	5385408	Statement	(	383:9:9288:9288	5385309	1	True				
ANR	5385409	Statement	"""  %s: %lu\\n"""	383:11:9290:9302	5385309	2	True				
ANR	5385410	Statement	","	383:24:9303:9303	5385309	3	True				
ANR	5385411	Statement	wdata	383:26:9305:9309	5385309	4	True				
ANR	5385412	Statement	->	383:31:9310:9311	5385309	5	True				
ANR	5385413	Statement	m_name	383:33:9312:9317	5385309	6	True				
ANR	5385414	Statement	","	383:39:9318:9318	5385309	7	True				
ANR	5385415	Statement	(	384:5:9325:9325	5385309	8	True				
ANR	5385416	Statement	long	384:6:9326:9329	5385309	9	True				
ANR	5385417	Statement	unsigned	384:11:9331:9338	5385309	10	True				
ANR	5385418	Statement	)	384:19:9339:9339	5385309	11	True				
ANR	5385419	Statement	istate	384:21:9341:9346	5385309	12	True				
ANR	5385420	Statement	->	384:27:9347:9348	5385309	13	True				
ANR	5385421	Statement	m_update_time	384:29:9349:9361	5385309	14	True				
ANR	5385422	Statement	)	384:43:9363:9363	5385309	15	True				
ANR	5385423	ExpressionStatement		384:44:9364:9364	5385309	16	True				
ANR	5385424	ElseStatement	else		5385309	0					
ANR	5385425	CompoundStatement		28:9:599:599	5385309	0					
ANR	5385426	ExpressionStatement	"printf ( ""  %s: '%s'\\n"" , wdata -> m_name , timestr ( istate -> m_update_time ) )"	386:3:9380:9456	5385309	0	True				
ANR	5385427	CallExpression	"printf ( ""  %s: '%s'\\n"" , wdata -> m_name , timestr ( istate -> m_update_time ) )"		5385309	0					
ANR	5385428	Callee	printf		5385309	0					
ANR	5385429	Identifier	printf		5385309	0					
ANR	5385430	ArgumentList	"""  %s: '%s'\\n"""		5385309	1					
ANR	5385431	Argument	"""  %s: '%s'\\n"""		5385309	0					
ANR	5385432	PrimaryExpression	"""  %s: '%s'\\n"""		5385309	0					
ANR	5385433	Argument	wdata -> m_name		5385309	1					
ANR	5385434	PtrMemberAccess	wdata -> m_name		5385309	0					
ANR	5385435	Identifier	wdata		5385309	0					
ANR	5385436	Identifier	m_name		5385309	1					
ANR	5385437	Argument	timestr ( istate -> m_update_time )		5385309	2					
ANR	5385438	CallExpression	timestr ( istate -> m_update_time )		5385309	0					
ANR	5385439	Callee	timestr		5385309	0					
ANR	5385440	Identifier	timestr		5385309	0					
ANR	5385441	ArgumentList	istate -> m_update_time		5385309	1					
ANR	5385442	Argument	istate -> m_update_time		5385309	0					
ANR	5385443	PtrMemberAccess	istate -> m_update_time		5385309	0					
ANR	5385444	Identifier	istate		5385309	0					
ANR	5385445	Identifier	m_update_time		5385309	1					
ANR	5385446	BreakStatement	break ;	389:2:9464:9469	5385309	11	True				
ANR	5385447	Label	case FIELD_BASE_PATH :	391:1:9473:9493	5385309	12	True				
ANR	5385448	Identifier	FIELD_BASE_PATH		5385309	0					
ANR	5385449	ExpressionStatement	"printf ( ""  %s: '%s'\\n"" , wdata -> m_name , istate -> m_base_path )"	392:2:9497:9557	5385309	13	True				
ANR	5385450	CallExpression	"printf ( ""  %s: '%s'\\n"" , wdata -> m_name , istate -> m_base_path )"		5385309	0					
ANR	5385451	Callee	printf		5385309	0					
ANR	5385452	Identifier	printf		5385309	0					
ANR	5385453	ArgumentList	"""  %s: '%s'\\n"""		5385309	1					
ANR	5385454	Argument	"""  %s: '%s'\\n"""		5385309	0					
ANR	5385455	PrimaryExpression	"""  %s: '%s'\\n"""		5385309	0					
ANR	5385456	Argument	wdata -> m_name		5385309	1					
ANR	5385457	PtrMemberAccess	wdata -> m_name		5385309	0					
ANR	5385458	Identifier	wdata		5385309	0					
ANR	5385459	Identifier	m_name		5385309	1					
ANR	5385460	Argument	istate -> m_base_path		5385309	2					
ANR	5385461	PtrMemberAccess	istate -> m_base_path		5385309	0					
ANR	5385462	Identifier	istate		5385309	0					
ANR	5385463	Identifier	m_base_path		5385309	1					
ANR	5385464	BreakStatement	break ;	393:2:9561:9566	5385309	14	True				
ANR	5385465	Label	case FIELD_CUR_PATH :	395:1:9570:9589	5385309	15	True				
ANR	5385466	Identifier	FIELD_CUR_PATH		5385309	0					
ANR	5385467	ExpressionStatement	"printf ( ""  %s: '%s'\\n"" , wdata -> m_name , rstate . CurPath ( state ) )"	396:2:9593:9655	5385309	16	True				
ANR	5385468	CallExpression	"printf ( ""  %s: '%s'\\n"" , wdata -> m_name , rstate . CurPath ( state ) )"		5385309	0					
ANR	5385469	Callee	printf		5385309	0					
ANR	5385470	Identifier	printf		5385309	0					
ANR	5385471	ArgumentList	"""  %s: '%s'\\n"""		5385309	1					
ANR	5385472	Argument	"""  %s: '%s'\\n"""		5385309	0					
ANR	5385473	PrimaryExpression	"""  %s: '%s'\\n"""		5385309	0					
ANR	5385474	Argument	wdata -> m_name		5385309	1					
ANR	5385475	PtrMemberAccess	wdata -> m_name		5385309	0					
ANR	5385476	Identifier	wdata		5385309	0					
ANR	5385477	Identifier	m_name		5385309	1					
ANR	5385478	Argument	rstate . CurPath ( state )		5385309	2					
ANR	5385479	CallExpression	rstate . CurPath ( state )		5385309	0					
ANR	5385480	Callee	rstate . CurPath		5385309	0					
ANR	5385481	MemberAccess	rstate . CurPath		5385309	0					
ANR	5385482	Identifier	rstate		5385309	0					
ANR	5385483	Identifier	CurPath		5385309	1					
ANR	5385484	ArgumentList	state		5385309	1					
ANR	5385485	Argument	state		5385309	0					
ANR	5385486	Identifier	state		5385309	0					
ANR	5385487	BreakStatement	break ;	397:2:9659:9664	5385309	17	True				
ANR	5385488	Label	case FIELD_UNIQ_ID :	399:1:9668:9686	5385309	18	True				
ANR	5385489	Identifier	FIELD_UNIQ_ID		5385309	0					
ANR	5385490	ExpressionStatement	"printf ( ""  %s: '%s'\\n"" , wdata -> m_name , istate -> m_uniq_id )"	400:2:9690:9748	5385309	19	True				
ANR	5385491	CallExpression	"printf ( ""  %s: '%s'\\n"" , wdata -> m_name , istate -> m_uniq_id )"		5385309	0					
ANR	5385492	Callee	printf		5385309	0					
ANR	5385493	Identifier	printf		5385309	0					
ANR	5385494	ArgumentList	"""  %s: '%s'\\n"""		5385309	1					
ANR	5385495	Argument	"""  %s: '%s'\\n"""		5385309	0					
ANR	5385496	PrimaryExpression	"""  %s: '%s'\\n"""		5385309	0					
ANR	5385497	Argument	wdata -> m_name		5385309	1					
ANR	5385498	PtrMemberAccess	wdata -> m_name		5385309	0					
ANR	5385499	Identifier	wdata		5385309	0					
ANR	5385500	Identifier	m_name		5385309	1					
ANR	5385501	Argument	istate -> m_uniq_id		5385309	2					
ANR	5385502	PtrMemberAccess	istate -> m_uniq_id		5385309	0					
ANR	5385503	Identifier	istate		5385309	0					
ANR	5385504	Identifier	m_uniq_id		5385309	1					
ANR	5385505	BreakStatement	break ;	401:2:9752:9757	5385309	20	True				
ANR	5385506	Label	case FIELD_SEQUENCE :	403:1:9761:9780	5385309	21	True				
ANR	5385507	Identifier	FIELD_SEQUENCE		5385309	0					
ANR	5385508	ExpressionStatement	"printf ( ""  %s: %d\\n"" , wdata -> m_name , istate -> m_sequence )"	404:2:9784:9841	5385309	22	True				
ANR	5385509	CallExpression	"printf ( ""  %s: %d\\n"" , wdata -> m_name , istate -> m_sequence )"		5385309	0					
ANR	5385510	Callee	printf		5385309	0					
ANR	5385511	Identifier	printf		5385309	0					
ANR	5385512	ArgumentList	"""  %s: %d\\n"""		5385309	1					
ANR	5385513	Argument	"""  %s: %d\\n"""		5385309	0					
ANR	5385514	PrimaryExpression	"""  %s: %d\\n"""		5385309	0					
ANR	5385515	Argument	wdata -> m_name		5385309	1					
ANR	5385516	PtrMemberAccess	wdata -> m_name		5385309	0					
ANR	5385517	Identifier	wdata		5385309	0					
ANR	5385518	Identifier	m_name		5385309	1					
ANR	5385519	Argument	istate -> m_sequence		5385309	2					
ANR	5385520	PtrMemberAccess	istate -> m_sequence		5385309	0					
ANR	5385521	Identifier	istate		5385309	0					
ANR	5385522	Identifier	m_sequence		5385309	1					
ANR	5385523	BreakStatement	break ;	405:2:9845:9850	5385309	23	True				
ANR	5385524	Label	case FIELD_MAX_ROTATION :	407:1:9854:9877	5385309	24	True				
ANR	5385525	Identifier	FIELD_MAX_ROTATION		5385309	0					
ANR	5385526	ExpressionStatement	"printf ( ""  %s: %d\\n"" , wdata -> m_name , istate -> m_max_rotations )"	408:2:9881:9943	5385309	25	True				
ANR	5385527	CallExpression	"printf ( ""  %s: %d\\n"" , wdata -> m_name , istate -> m_max_rotations )"		5385309	0					
ANR	5385528	Callee	printf		5385309	0					
ANR	5385529	Identifier	printf		5385309	0					
ANR	5385530	ArgumentList	"""  %s: %d\\n"""		5385309	1					
ANR	5385531	Argument	"""  %s: %d\\n"""		5385309	0					
ANR	5385532	PrimaryExpression	"""  %s: %d\\n"""		5385309	0					
ANR	5385533	Argument	wdata -> m_name		5385309	1					
ANR	5385534	PtrMemberAccess	wdata -> m_name		5385309	0					
ANR	5385535	Identifier	wdata		5385309	0					
ANR	5385536	Identifier	m_name		5385309	1					
ANR	5385537	Argument	istate -> m_max_rotations		5385309	2					
ANR	5385538	PtrMemberAccess	istate -> m_max_rotations		5385309	0					
ANR	5385539	Identifier	istate		5385309	0					
ANR	5385540	Identifier	m_max_rotations		5385309	1					
ANR	5385541	BreakStatement	break ;	409:2:9947:9952	5385309	26	True				
ANR	5385542	Label	case FIELD_ROTATION :	411:1:9956:9975	5385309	27	True				
ANR	5385543	Identifier	FIELD_ROTATION		5385309	0					
ANR	5385544	ExpressionStatement	"printf ( ""  %s: %d\\n"" , wdata -> m_name , istate -> m_rotation )"	412:2:9979:10036	5385309	28	True				
ANR	5385545	CallExpression	"printf ( ""  %s: %d\\n"" , wdata -> m_name , istate -> m_rotation )"		5385309	0					
ANR	5385546	Callee	printf		5385309	0					
ANR	5385547	Identifier	printf		5385309	0					
ANR	5385548	ArgumentList	"""  %s: %d\\n"""		5385309	1					
ANR	5385549	Argument	"""  %s: %d\\n"""		5385309	0					
ANR	5385550	PrimaryExpression	"""  %s: %d\\n"""		5385309	0					
ANR	5385551	Argument	wdata -> m_name		5385309	1					
ANR	5385552	PtrMemberAccess	wdata -> m_name		5385309	0					
ANR	5385553	Identifier	wdata		5385309	0					
ANR	5385554	Identifier	m_name		5385309	1					
ANR	5385555	Argument	istate -> m_rotation		5385309	2					
ANR	5385556	PtrMemberAccess	istate -> m_rotation		5385309	0					
ANR	5385557	Identifier	istate		5385309	0					
ANR	5385558	Identifier	m_rotation		5385309	1					
ANR	5385559	BreakStatement	break ;	413:2:10040:10045	5385309	29	True				
ANR	5385560	Label	case FIELD_OFFSET :	415:1:10049:10066	5385309	30	True				
ANR	5385561	Identifier	FIELD_OFFSET		5385309	0					
ANR	5385562	Statement	printf	416:2:10070:10075	5385309	31	True				
ANR	5385563	Statement	(	416:8:10076:10076	5385309	32	True				
ANR	5385564	Statement	"""  %s: """	416:10:10078:10085	5385309	33	True				
ANR	5385565	Statement	FILESIZE_T_FORMAT	416:19:10087:10103	5385309	34	True				
ANR	5385566	Statement	"""\\n"""	416:37:10105:10108	5385309	35	True				
ANR	5385567	Statement	","	416:41:10109:10109	5385309	36	True				
ANR	5385568	Statement	wdata	417:4:10115:10119	5385309	37	True				
ANR	5385569	Statement	->	417:9:10120:10121	5385309	38	True				
ANR	5385570	Statement	m_name	417:11:10122:10127	5385309	39	True				
ANR	5385571	Statement	","	417:17:10128:10128	5385309	40	True				
ANR	5385572	Statement	istate	417:19:10130:10135	5385309	41	True				
ANR	5385573	Statement	->	417:25:10136:10137	5385309	42	True				
ANR	5385574	Statement	m_offset	417:27:10138:10145	5385309	43	True				
ANR	5385575	Statement	.	417:35:10146:10146	5385309	44	True				
ANR	5385576	Statement	asint	417:36:10147:10151	5385309	45	True				
ANR	5385577	Statement	)	417:42:10153:10153	5385309	46	True				
ANR	5385578	ExpressionStatement		417:43:10154:10154	5385309	47	True				
ANR	5385579	BreakStatement	break ;	418:2:10158:10163	5385309	48	True				
ANR	5385580	Label	case FIELD_EVENT_NUM :	420:1:10167:10187	5385309	49	True				
ANR	5385581	Identifier	FIELD_EVENT_NUM		5385309	0					
ANR	5385582	Statement	printf	421:2:10191:10196	5385309	50	True				
ANR	5385583	Statement	(	421:8:10197:10197	5385309	51	True				
ANR	5385584	Statement	"""  %s: """	421:10:10199:10206	5385309	52	True				
ANR	5385585	Statement	FILESIZE_T_FORMAT	421:19:10208:10224	5385309	53	True				
ANR	5385586	Statement	"""\\n"""	421:37:10226:10229	5385309	54	True				
ANR	5385587	Statement	","	421:41:10230:10230	5385309	55	True				
ANR	5385588	Statement	wdata	422:4:10236:10240	5385309	56	True				
ANR	5385589	Statement	->	422:9:10241:10242	5385309	57	True				
ANR	5385590	Statement	m_name	422:11:10243:10248	5385309	58	True				
ANR	5385591	Statement	","	422:17:10249:10249	5385309	59	True				
ANR	5385592	Statement	istate	422:19:10251:10256	5385309	60	True				
ANR	5385593	Statement	->	422:25:10257:10258	5385309	61	True				
ANR	5385594	Statement	m_event_num	422:27:10259:10269	5385309	62	True				
ANR	5385595	Statement	.	422:38:10270:10270	5385309	63	True				
ANR	5385596	Statement	asint	422:39:10271:10275	5385309	64	True				
ANR	5385597	Statement	)	422:45:10277:10277	5385309	65	True				
ANR	5385598	ExpressionStatement		422:46:10278:10278	5385309	66	True				
ANR	5385599	BreakStatement	break ;	423:2:10282:10287	5385309	67	True				
ANR	5385600	Label	case FIELD_GLOBAL_POSITION :	425:1:10291:10317	5385309	68	True				
ANR	5385601	Identifier	FIELD_GLOBAL_POSITION		5385309	0					
ANR	5385602	Statement	printf	426:2:10321:10326	5385309	69	True				
ANR	5385603	Statement	(	426:8:10327:10327	5385309	70	True				
ANR	5385604	Statement	"""  %s: """	426:10:10329:10336	5385309	71	True				
ANR	5385605	Statement	FILESIZE_T_FORMAT	426:19:10338:10354	5385309	72	True				
ANR	5385606	Statement	"""\\n"""	426:37:10356:10359	5385309	73	True				
ANR	5385607	Statement	","	426:41:10360:10360	5385309	74	True				
ANR	5385608	Statement	wdata	427:4:10366:10370	5385309	75	True				
ANR	5385609	Statement	->	427:9:10371:10372	5385309	76	True				
ANR	5385610	Statement	m_name	427:11:10373:10378	5385309	77	True				
ANR	5385611	Statement	","	427:17:10379:10379	5385309	78	True				
ANR	5385612	Statement	istate	427:19:10381:10386	5385309	79	True				
ANR	5385613	Statement	->	427:25:10387:10388	5385309	80	True				
ANR	5385614	Statement	m_log_position	427:27:10389:10402	5385309	81	True				
ANR	5385615	Statement	.	427:41:10403:10403	5385309	82	True				
ANR	5385616	Statement	asint	427:42:10404:10408	5385309	83	True				
ANR	5385617	Statement	)	427:48:10410:10410	5385309	84	True				
ANR	5385618	ExpressionStatement		427:49:10411:10411	5385309	85	True				
ANR	5385619	BreakStatement	break ;	428:2:10415:10420	5385309	86	True				
ANR	5385620	Label	case FIELD_GLOBAL_RECORD_NUM :	430:1:10424:10452	5385309	87	True				
ANR	5385621	Identifier	FIELD_GLOBAL_RECORD_NUM		5385309	0					
ANR	5385622	Statement	printf	431:2:10456:10461	5385309	88	True				
ANR	5385623	Statement	(	431:8:10462:10462	5385309	89	True				
ANR	5385624	Statement	"""  %s: """	431:10:10464:10471	5385309	90	True				
ANR	5385625	Statement	FILESIZE_T_FORMAT	431:19:10473:10489	5385309	91	True				
ANR	5385626	Statement	"""\\n"""	431:37:10491:10494	5385309	92	True				
ANR	5385627	Statement	","	431:41:10495:10495	5385309	93	True				
ANR	5385628	Statement	wdata	432:4:10501:10505	5385309	94	True				
ANR	5385629	Statement	->	432:9:10506:10507	5385309	95	True				
ANR	5385630	Statement	m_name	432:11:10508:10513	5385309	96	True				
ANR	5385631	Statement	","	432:17:10514:10514	5385309	97	True				
ANR	5385632	Statement	istate	432:19:10516:10521	5385309	98	True				
ANR	5385633	Statement	->	432:25:10522:10523	5385309	99	True				
ANR	5385634	Statement	m_log_record	432:27:10524:10535	5385309	100	True				
ANR	5385635	Statement	.	432:39:10536:10536	5385309	101	True				
ANR	5385636	Statement	asint	432:40:10537:10541	5385309	102	True				
ANR	5385637	Statement	)	432:46:10543:10543	5385309	103	True				
ANR	5385638	ExpressionStatement		432:47:10544:10544	5385309	104	True				
ANR	5385639	BreakStatement	break ;	433:2:10548:10553	5385309	105	True				
ANR	5385640	Label	case FIELD_INODE :	435:1:10557:10573	5385309	106	True				
ANR	5385641	Identifier	FIELD_INODE		5385309	0					
ANR	5385642	Statement	printf	436:2:10577:10582	5385309	107	True				
ANR	5385643	Statement	(	436:8:10583:10583	5385309	108	True				
ANR	5385644	Statement	"""  %s: %lu\\n"""	436:10:10585:10597	5385309	109	True				
ANR	5385645	Statement	","	436:23:10598:10598	5385309	110	True				
ANR	5385646	Statement	wdata	436:25:10600:10604	5385309	111	True				
ANR	5385647	Statement	->	436:30:10605:10606	5385309	112	True				
ANR	5385648	Statement	m_name	436:32:10607:10612	5385309	113	True				
ANR	5385649	Statement	","	436:38:10613:10613	5385309	114	True				
ANR	5385650	Statement	(	437:4:10619:10619	5385309	115	True				
ANR	5385651	Statement	long	437:5:10620:10623	5385309	116	True				
ANR	5385652	Statement	unsigned	437:10:10625:10632	5385309	117	True				
ANR	5385653	Statement	)	437:18:10633:10633	5385309	118	True				
ANR	5385654	Statement	istate	437:20:10635:10640	5385309	119	True				
ANR	5385655	Statement	->	437:26:10641:10642	5385309	120	True				
ANR	5385656	Statement	m_inode	437:28:10643:10649	5385309	121	True				
ANR	5385657	Statement	)	437:36:10651:10651	5385309	122	True				
ANR	5385658	ExpressionStatement		437:37:10652:10652	5385309	123	True				
ANR	5385659	BreakStatement	break ;	438:2:10656:10661	5385309	124	True				
ANR	5385660	Label	case FIELD_CTIME :	440:1:10665:10681	5385309	125	True				
ANR	5385661	Identifier	FIELD_CTIME		5385309	0					
ANR	5385662	IfStatement	if ( opts . getNumeric ( ) )		5385309	126					
ANR	5385663	Condition	opts . getNumeric ( )	441:7:10690:10706	5385309	0	True				
ANR	5385664	CallExpression	opts . getNumeric ( )		5385309	0					
ANR	5385665	Callee	opts . getNumeric		5385309	0					
ANR	5385666	MemberAccess	opts . getNumeric		5385309	0					
ANR	5385667	Identifier	opts		5385309	0					
ANR	5385668	Identifier	getNumeric		5385309	1					
ANR	5385669	ArgumentList			5385309	1					
ANR	5385670	CompoundStatement		84:27:1934:1934	5385309	1					
ANR	5385671	Statement	printf	442:3:10715:10720	5385309	0	True				
ANR	5385672	Statement	(	442:9:10721:10721	5385309	1	True				
ANR	5385673	Statement	"""  %s: %lu\\n"""	442:11:10723:10735	5385309	2	True				
ANR	5385674	Statement	","	442:24:10736:10736	5385309	3	True				
ANR	5385675	Statement	wdata	442:26:10738:10742	5385309	4	True				
ANR	5385676	Statement	->	442:31:10743:10744	5385309	5	True				
ANR	5385677	Statement	m_name	442:33:10745:10750	5385309	6	True				
ANR	5385678	Statement	","	442:39:10751:10751	5385309	7	True				
ANR	5385679	Statement	(	443:5:10758:10758	5385309	8	True				
ANR	5385680	Statement	long	443:6:10759:10762	5385309	9	True				
ANR	5385681	Statement	unsigned	443:11:10764:10771	5385309	10	True				
ANR	5385682	Statement	)	443:19:10772:10772	5385309	11	True				
ANR	5385683	Statement	istate	443:21:10774:10779	5385309	12	True				
ANR	5385684	Statement	->	443:27:10780:10781	5385309	13	True				
ANR	5385685	Statement	m_ctime	443:29:10782:10788	5385309	14	True				
ANR	5385686	Statement	)	443:37:10790:10790	5385309	15	True				
ANR	5385687	ExpressionStatement		443:38:10791:10791	5385309	16	True				
ANR	5385688	ElseStatement	else		5385309	0					
ANR	5385689	CompoundStatement		87:9:2026:2026	5385309	0					
ANR	5385690	ExpressionStatement	"printf ( ""  %s: '%s'\\n"" , wdata -> m_name , timestr ( istate -> m_ctime ) )"	445:3:10807:10877	5385309	0	True				
ANR	5385691	CallExpression	"printf ( ""  %s: '%s'\\n"" , wdata -> m_name , timestr ( istate -> m_ctime ) )"		5385309	0					
ANR	5385692	Callee	printf		5385309	0					
ANR	5385693	Identifier	printf		5385309	0					
ANR	5385694	ArgumentList	"""  %s: '%s'\\n"""		5385309	1					
ANR	5385695	Argument	"""  %s: '%s'\\n"""		5385309	0					
ANR	5385696	PrimaryExpression	"""  %s: '%s'\\n"""		5385309	0					
ANR	5385697	Argument	wdata -> m_name		5385309	1					
ANR	5385698	PtrMemberAccess	wdata -> m_name		5385309	0					
ANR	5385699	Identifier	wdata		5385309	0					
ANR	5385700	Identifier	m_name		5385309	1					
ANR	5385701	Argument	timestr ( istate -> m_ctime )		5385309	2					
ANR	5385702	CallExpression	timestr ( istate -> m_ctime )		5385309	0					
ANR	5385703	Callee	timestr		5385309	0					
ANR	5385704	Identifier	timestr		5385309	0					
ANR	5385705	ArgumentList	istate -> m_ctime		5385309	1					
ANR	5385706	Argument	istate -> m_ctime		5385309	0					
ANR	5385707	PtrMemberAccess	istate -> m_ctime		5385309	0					
ANR	5385708	Identifier	istate		5385309	0					
ANR	5385709	Identifier	m_ctime		5385309	1					
ANR	5385710	BreakStatement	break ;	448:2:10885:10890	5385309	127	True				
ANR	5385711	Label	case FIELD_SIZE :	450:1:10894:10909	5385309	128	True				
ANR	5385712	Identifier	FIELD_SIZE		5385309	0					
ANR	5385713	Statement	printf	451:2:10913:10918	5385309	129	True				
ANR	5385714	Statement	(	451:8:10919:10919	5385309	130	True				
ANR	5385715	Statement	"""  %s: """	451:10:10921:10928	5385309	131	True				
ANR	5385716	Statement	FILESIZE_T_FORMAT	451:19:10930:10946	5385309	132	True				
ANR	5385717	Statement	"""\\n"""	451:37:10948:10951	5385309	133	True				
ANR	5385718	Statement	","	451:41:10952:10952	5385309	134	True				
ANR	5385719	Statement	wdata	452:4:10958:10962	5385309	135	True				
ANR	5385720	Statement	->	452:9:10963:10964	5385309	136	True				
ANR	5385721	Statement	m_name	452:11:10965:10970	5385309	137	True				
ANR	5385722	Statement	","	452:17:10971:10971	5385309	138	True				
ANR	5385723	Statement	istate	452:19:10973:10978	5385309	139	True				
ANR	5385724	Statement	->	452:25:10979:10980	5385309	140	True				
ANR	5385725	Statement	m_size	452:27:10981:10986	5385309	141	True				
ANR	5385726	Statement	.	452:33:10987:10987	5385309	142	True				
ANR	5385727	Statement	asint	452:34:10988:10992	5385309	143	True				
ANR	5385728	Statement	)	452:40:10994:10994	5385309	144	True				
ANR	5385729	ExpressionStatement		452:41:10995:10995	5385309	145	True				
ANR	5385730	BreakStatement	break ;	453:2:10999:11004	5385309	146	True				
ANR	5385731	Label	case FIELD_ALL :	455:1:11008:11022	5385309	147	True				
ANR	5385732	Identifier	FIELD_ALL		5385309	0					
ANR	5385733	ExpressionStatement	"DumpState ( opts , state , opts . lookupField ( FIELD_SIGNATURE ) )"	456:2:11026:11085	5385309	148	True				
ANR	5385734	CallExpression	"DumpState ( opts , state , opts . lookupField ( FIELD_SIGNATURE ) )"		5385309	0					
ANR	5385735	Callee	DumpState		5385309	0					
ANR	5385736	Identifier	DumpState		5385309	0					
ANR	5385737	ArgumentList	opts		5385309	1					
ANR	5385738	Argument	opts		5385309	0					
ANR	5385739	Identifier	opts		5385309	0					
ANR	5385740	Argument	state		5385309	1					
ANR	5385741	Identifier	state		5385309	0					
ANR	5385742	Argument	opts . lookupField ( FIELD_SIGNATURE )		5385309	2					
ANR	5385743	CallExpression	opts . lookupField ( FIELD_SIGNATURE )		5385309	0					
ANR	5385744	Callee	opts . lookupField		5385309	0					
ANR	5385745	MemberAccess	opts . lookupField		5385309	0					
ANR	5385746	Identifier	opts		5385309	0					
ANR	5385747	Identifier	lookupField		5385309	1					
ANR	5385748	ArgumentList	FIELD_SIGNATURE		5385309	1					
ANR	5385749	Argument	FIELD_SIGNATURE		5385309	0					
ANR	5385750	Identifier	FIELD_SIGNATURE		5385309	0					
ANR	5385751	ExpressionStatement	"DumpState ( opts , state , opts . lookupField ( FIELD_VERSION ) )"	457:2:11089:11146	5385309	149	True				
ANR	5385752	CallExpression	"DumpState ( opts , state , opts . lookupField ( FIELD_VERSION ) )"		5385309	0					
ANR	5385753	Callee	DumpState		5385309	0					
ANR	5385754	Identifier	DumpState		5385309	0					
ANR	5385755	ArgumentList	opts		5385309	1					
ANR	5385756	Argument	opts		5385309	0					
ANR	5385757	Identifier	opts		5385309	0					
ANR	5385758	Argument	state		5385309	1					
ANR	5385759	Identifier	state		5385309	0					
ANR	5385760	Argument	opts . lookupField ( FIELD_VERSION )		5385309	2					
ANR	5385761	CallExpression	opts . lookupField ( FIELD_VERSION )		5385309	0					
ANR	5385762	Callee	opts . lookupField		5385309	0					
ANR	5385763	MemberAccess	opts . lookupField		5385309	0					
ANR	5385764	Identifier	opts		5385309	0					
ANR	5385765	Identifier	lookupField		5385309	1					
ANR	5385766	ArgumentList	FIELD_VERSION		5385309	1					
ANR	5385767	Argument	FIELD_VERSION		5385309	0					
ANR	5385768	Identifier	FIELD_VERSION		5385309	0					
ANR	5385769	ExpressionStatement	"DumpState ( opts , state , opts . lookupField ( FIELD_UPDATE_TIME ) )"	458:2:11150:11211	5385309	150	True				
ANR	5385770	CallExpression	"DumpState ( opts , state , opts . lookupField ( FIELD_UPDATE_TIME ) )"		5385309	0					
ANR	5385771	Callee	DumpState		5385309	0					
ANR	5385772	Identifier	DumpState		5385309	0					
ANR	5385773	ArgumentList	opts		5385309	1					
ANR	5385774	Argument	opts		5385309	0					
ANR	5385775	Identifier	opts		5385309	0					
ANR	5385776	Argument	state		5385309	1					
ANR	5385777	Identifier	state		5385309	0					
ANR	5385778	Argument	opts . lookupField ( FIELD_UPDATE_TIME )		5385309	2					
ANR	5385779	CallExpression	opts . lookupField ( FIELD_UPDATE_TIME )		5385309	0					
ANR	5385780	Callee	opts . lookupField		5385309	0					
ANR	5385781	MemberAccess	opts . lookupField		5385309	0					
ANR	5385782	Identifier	opts		5385309	0					
ANR	5385783	Identifier	lookupField		5385309	1					
ANR	5385784	ArgumentList	FIELD_UPDATE_TIME		5385309	1					
ANR	5385785	Argument	FIELD_UPDATE_TIME		5385309	0					
ANR	5385786	Identifier	FIELD_UPDATE_TIME		5385309	0					
ANR	5385787	ExpressionStatement	"DumpState ( opts , state , opts . lookupField ( FIELD_BASE_PATH ) )"	459:2:11215:11274	5385309	151	True				
ANR	5385788	CallExpression	"DumpState ( opts , state , opts . lookupField ( FIELD_BASE_PATH ) )"		5385309	0					
ANR	5385789	Callee	DumpState		5385309	0					
ANR	5385790	Identifier	DumpState		5385309	0					
ANR	5385791	ArgumentList	opts		5385309	1					
ANR	5385792	Argument	opts		5385309	0					
ANR	5385793	Identifier	opts		5385309	0					
ANR	5385794	Argument	state		5385309	1					
ANR	5385795	Identifier	state		5385309	0					
ANR	5385796	Argument	opts . lookupField ( FIELD_BASE_PATH )		5385309	2					
ANR	5385797	CallExpression	opts . lookupField ( FIELD_BASE_PATH )		5385309	0					
ANR	5385798	Callee	opts . lookupField		5385309	0					
ANR	5385799	MemberAccess	opts . lookupField		5385309	0					
ANR	5385800	Identifier	opts		5385309	0					
ANR	5385801	Identifier	lookupField		5385309	1					
ANR	5385802	ArgumentList	FIELD_BASE_PATH		5385309	1					
ANR	5385803	Argument	FIELD_BASE_PATH		5385309	0					
ANR	5385804	Identifier	FIELD_BASE_PATH		5385309	0					
ANR	5385805	ExpressionStatement	"DumpState ( opts , state , opts . lookupField ( FIELD_CUR_PATH ) )"	460:2:11278:11336	5385309	152	True				
ANR	5385806	CallExpression	"DumpState ( opts , state , opts . lookupField ( FIELD_CUR_PATH ) )"		5385309	0					
ANR	5385807	Callee	DumpState		5385309	0					
ANR	5385808	Identifier	DumpState		5385309	0					
ANR	5385809	ArgumentList	opts		5385309	1					
ANR	5385810	Argument	opts		5385309	0					
ANR	5385811	Identifier	opts		5385309	0					
ANR	5385812	Argument	state		5385309	1					
ANR	5385813	Identifier	state		5385309	0					
ANR	5385814	Argument	opts . lookupField ( FIELD_CUR_PATH )		5385309	2					
ANR	5385815	CallExpression	opts . lookupField ( FIELD_CUR_PATH )		5385309	0					
ANR	5385816	Callee	opts . lookupField		5385309	0					
ANR	5385817	MemberAccess	opts . lookupField		5385309	0					
ANR	5385818	Identifier	opts		5385309	0					
ANR	5385819	Identifier	lookupField		5385309	1					
ANR	5385820	ArgumentList	FIELD_CUR_PATH		5385309	1					
ANR	5385821	Argument	FIELD_CUR_PATH		5385309	0					
ANR	5385822	Identifier	FIELD_CUR_PATH		5385309	0					
ANR	5385823	ExpressionStatement	"DumpState ( opts , state , opts . lookupField ( FIELD_UNIQ_ID ) )"	461:2:11340:11397	5385309	153	True				
ANR	5385824	CallExpression	"DumpState ( opts , state , opts . lookupField ( FIELD_UNIQ_ID ) )"		5385309	0					
ANR	5385825	Callee	DumpState		5385309	0					
ANR	5385826	Identifier	DumpState		5385309	0					
ANR	5385827	ArgumentList	opts		5385309	1					
ANR	5385828	Argument	opts		5385309	0					
ANR	5385829	Identifier	opts		5385309	0					
ANR	5385830	Argument	state		5385309	1					
ANR	5385831	Identifier	state		5385309	0					
ANR	5385832	Argument	opts . lookupField ( FIELD_UNIQ_ID )		5385309	2					
ANR	5385833	CallExpression	opts . lookupField ( FIELD_UNIQ_ID )		5385309	0					
ANR	5385834	Callee	opts . lookupField		5385309	0					
ANR	5385835	MemberAccess	opts . lookupField		5385309	0					
ANR	5385836	Identifier	opts		5385309	0					
ANR	5385837	Identifier	lookupField		5385309	1					
ANR	5385838	ArgumentList	FIELD_UNIQ_ID		5385309	1					
ANR	5385839	Argument	FIELD_UNIQ_ID		5385309	0					
ANR	5385840	Identifier	FIELD_UNIQ_ID		5385309	0					
ANR	5385841	ExpressionStatement	"DumpState ( opts , state , opts . lookupField ( FIELD_SEQUENCE ) )"	462:2:11401:11459	5385309	154	True				
ANR	5385842	CallExpression	"DumpState ( opts , state , opts . lookupField ( FIELD_SEQUENCE ) )"		5385309	0					
ANR	5385843	Callee	DumpState		5385309	0					
ANR	5385844	Identifier	DumpState		5385309	0					
ANR	5385845	ArgumentList	opts		5385309	1					
ANR	5385846	Argument	opts		5385309	0					
ANR	5385847	Identifier	opts		5385309	0					
ANR	5385848	Argument	state		5385309	1					
ANR	5385849	Identifier	state		5385309	0					
ANR	5385850	Argument	opts . lookupField ( FIELD_SEQUENCE )		5385309	2					
ANR	5385851	CallExpression	opts . lookupField ( FIELD_SEQUENCE )		5385309	0					
ANR	5385852	Callee	opts . lookupField		5385309	0					
ANR	5385853	MemberAccess	opts . lookupField		5385309	0					
ANR	5385854	Identifier	opts		5385309	0					
ANR	5385855	Identifier	lookupField		5385309	1					
ANR	5385856	ArgumentList	FIELD_SEQUENCE		5385309	1					
ANR	5385857	Argument	FIELD_SEQUENCE		5385309	0					
ANR	5385858	Identifier	FIELD_SEQUENCE		5385309	0					
ANR	5385859	ExpressionStatement	"DumpState ( opts , state , opts . lookupField ( FIELD_MAX_ROTATION ) )"	463:2:11463:11525	5385309	155	True				
ANR	5385860	CallExpression	"DumpState ( opts , state , opts . lookupField ( FIELD_MAX_ROTATION ) )"		5385309	0					
ANR	5385861	Callee	DumpState		5385309	0					
ANR	5385862	Identifier	DumpState		5385309	0					
ANR	5385863	ArgumentList	opts		5385309	1					
ANR	5385864	Argument	opts		5385309	0					
ANR	5385865	Identifier	opts		5385309	0					
ANR	5385866	Argument	state		5385309	1					
ANR	5385867	Identifier	state		5385309	0					
ANR	5385868	Argument	opts . lookupField ( FIELD_MAX_ROTATION )		5385309	2					
ANR	5385869	CallExpression	opts . lookupField ( FIELD_MAX_ROTATION )		5385309	0					
ANR	5385870	Callee	opts . lookupField		5385309	0					
ANR	5385871	MemberAccess	opts . lookupField		5385309	0					
ANR	5385872	Identifier	opts		5385309	0					
ANR	5385873	Identifier	lookupField		5385309	1					
ANR	5385874	ArgumentList	FIELD_MAX_ROTATION		5385309	1					
ANR	5385875	Argument	FIELD_MAX_ROTATION		5385309	0					
ANR	5385876	Identifier	FIELD_MAX_ROTATION		5385309	0					
ANR	5385877	ExpressionStatement	"DumpState ( opts , state , opts . lookupField ( FIELD_ROTATION ) )"	464:2:11529:11587	5385309	156	True				
ANR	5385878	CallExpression	"DumpState ( opts , state , opts . lookupField ( FIELD_ROTATION ) )"		5385309	0					
ANR	5385879	Callee	DumpState		5385309	0					
ANR	5385880	Identifier	DumpState		5385309	0					
ANR	5385881	ArgumentList	opts		5385309	1					
ANR	5385882	Argument	opts		5385309	0					
ANR	5385883	Identifier	opts		5385309	0					
ANR	5385884	Argument	state		5385309	1					
ANR	5385885	Identifier	state		5385309	0					
ANR	5385886	Argument	opts . lookupField ( FIELD_ROTATION )		5385309	2					
ANR	5385887	CallExpression	opts . lookupField ( FIELD_ROTATION )		5385309	0					
ANR	5385888	Callee	opts . lookupField		5385309	0					
ANR	5385889	MemberAccess	opts . lookupField		5385309	0					
ANR	5385890	Identifier	opts		5385309	0					
ANR	5385891	Identifier	lookupField		5385309	1					
ANR	5385892	ArgumentList	FIELD_ROTATION		5385309	1					
ANR	5385893	Argument	FIELD_ROTATION		5385309	0					
ANR	5385894	Identifier	FIELD_ROTATION		5385309	0					
ANR	5385895	ExpressionStatement	"DumpState ( opts , state , opts . lookupField ( FIELD_OFFSET ) )"	465:2:11591:11647	5385309	157	True				
ANR	5385896	CallExpression	"DumpState ( opts , state , opts . lookupField ( FIELD_OFFSET ) )"		5385309	0					
ANR	5385897	Callee	DumpState		5385309	0					
ANR	5385898	Identifier	DumpState		5385309	0					
ANR	5385899	ArgumentList	opts		5385309	1					
ANR	5385900	Argument	opts		5385309	0					
ANR	5385901	Identifier	opts		5385309	0					
ANR	5385902	Argument	state		5385309	1					
ANR	5385903	Identifier	state		5385309	0					
ANR	5385904	Argument	opts . lookupField ( FIELD_OFFSET )		5385309	2					
ANR	5385905	CallExpression	opts . lookupField ( FIELD_OFFSET )		5385309	0					
ANR	5385906	Callee	opts . lookupField		5385309	0					
ANR	5385907	MemberAccess	opts . lookupField		5385309	0					
ANR	5385908	Identifier	opts		5385309	0					
ANR	5385909	Identifier	lookupField		5385309	1					
ANR	5385910	ArgumentList	FIELD_OFFSET		5385309	1					
ANR	5385911	Argument	FIELD_OFFSET		5385309	0					
ANR	5385912	Identifier	FIELD_OFFSET		5385309	0					
ANR	5385913	ExpressionStatement	"DumpState ( opts , state , opts . lookupField ( FIELD_EVENT_NUM ) )"	466:2:11651:11710	5385309	158	True				
ANR	5385914	CallExpression	"DumpState ( opts , state , opts . lookupField ( FIELD_EVENT_NUM ) )"		5385309	0					
ANR	5385915	Callee	DumpState		5385309	0					
ANR	5385916	Identifier	DumpState		5385309	0					
ANR	5385917	ArgumentList	opts		5385309	1					
ANR	5385918	Argument	opts		5385309	0					
ANR	5385919	Identifier	opts		5385309	0					
ANR	5385920	Argument	state		5385309	1					
ANR	5385921	Identifier	state		5385309	0					
ANR	5385922	Argument	opts . lookupField ( FIELD_EVENT_NUM )		5385309	2					
ANR	5385923	CallExpression	opts . lookupField ( FIELD_EVENT_NUM )		5385309	0					
ANR	5385924	Callee	opts . lookupField		5385309	0					
ANR	5385925	MemberAccess	opts . lookupField		5385309	0					
ANR	5385926	Identifier	opts		5385309	0					
ANR	5385927	Identifier	lookupField		5385309	1					
ANR	5385928	ArgumentList	FIELD_EVENT_NUM		5385309	1					
ANR	5385929	Argument	FIELD_EVENT_NUM		5385309	0					
ANR	5385930	Identifier	FIELD_EVENT_NUM		5385309	0					
ANR	5385931	ExpressionStatement	"DumpState ( opts , state , opts . lookupField ( FIELD_GLOBAL_POSITION ) )"	467:2:11714:11779	5385309	159	True				
ANR	5385932	CallExpression	"DumpState ( opts , state , opts . lookupField ( FIELD_GLOBAL_POSITION ) )"		5385309	0					
ANR	5385933	Callee	DumpState		5385309	0					
ANR	5385934	Identifier	DumpState		5385309	0					
ANR	5385935	ArgumentList	opts		5385309	1					
ANR	5385936	Argument	opts		5385309	0					
ANR	5385937	Identifier	opts		5385309	0					
ANR	5385938	Argument	state		5385309	1					
ANR	5385939	Identifier	state		5385309	0					
ANR	5385940	Argument	opts . lookupField ( FIELD_GLOBAL_POSITION )		5385309	2					
ANR	5385941	CallExpression	opts . lookupField ( FIELD_GLOBAL_POSITION )		5385309	0					
ANR	5385942	Callee	opts . lookupField		5385309	0					
ANR	5385943	MemberAccess	opts . lookupField		5385309	0					
ANR	5385944	Identifier	opts		5385309	0					
ANR	5385945	Identifier	lookupField		5385309	1					
ANR	5385946	ArgumentList	FIELD_GLOBAL_POSITION		5385309	1					
ANR	5385947	Argument	FIELD_GLOBAL_POSITION		5385309	0					
ANR	5385948	Identifier	FIELD_GLOBAL_POSITION		5385309	0					
ANR	5385949	ExpressionStatement	"DumpState ( opts , state , opts . lookupField ( FIELD_GLOBAL_RECORD_NUM ) )"	468:2:11783:11850	5385309	160	True				
ANR	5385950	CallExpression	"DumpState ( opts , state , opts . lookupField ( FIELD_GLOBAL_RECORD_NUM ) )"		5385309	0					
ANR	5385951	Callee	DumpState		5385309	0					
ANR	5385952	Identifier	DumpState		5385309	0					
ANR	5385953	ArgumentList	opts		5385309	1					
ANR	5385954	Argument	opts		5385309	0					
ANR	5385955	Identifier	opts		5385309	0					
ANR	5385956	Argument	state		5385309	1					
ANR	5385957	Identifier	state		5385309	0					
ANR	5385958	Argument	opts . lookupField ( FIELD_GLOBAL_RECORD_NUM )		5385309	2					
ANR	5385959	CallExpression	opts . lookupField ( FIELD_GLOBAL_RECORD_NUM )		5385309	0					
ANR	5385960	Callee	opts . lookupField		5385309	0					
ANR	5385961	MemberAccess	opts . lookupField		5385309	0					
ANR	5385962	Identifier	opts		5385309	0					
ANR	5385963	Identifier	lookupField		5385309	1					
ANR	5385964	ArgumentList	FIELD_GLOBAL_RECORD_NUM		5385309	1					
ANR	5385965	Argument	FIELD_GLOBAL_RECORD_NUM		5385309	0					
ANR	5385966	Identifier	FIELD_GLOBAL_RECORD_NUM		5385309	0					
ANR	5385967	ExpressionStatement	"DumpState ( opts , state , opts . lookupField ( FIELD_INODE ) )"	469:2:11854:11909	5385309	161	True				
ANR	5385968	CallExpression	"DumpState ( opts , state , opts . lookupField ( FIELD_INODE ) )"		5385309	0					
ANR	5385969	Callee	DumpState		5385309	0					
ANR	5385970	Identifier	DumpState		5385309	0					
ANR	5385971	ArgumentList	opts		5385309	1					
ANR	5385972	Argument	opts		5385309	0					
ANR	5385973	Identifier	opts		5385309	0					
ANR	5385974	Argument	state		5385309	1					
ANR	5385975	Identifier	state		5385309	0					
ANR	5385976	Argument	opts . lookupField ( FIELD_INODE )		5385309	2					
ANR	5385977	CallExpression	opts . lookupField ( FIELD_INODE )		5385309	0					
ANR	5385978	Callee	opts . lookupField		5385309	0					
ANR	5385979	MemberAccess	opts . lookupField		5385309	0					
ANR	5385980	Identifier	opts		5385309	0					
ANR	5385981	Identifier	lookupField		5385309	1					
ANR	5385982	ArgumentList	FIELD_INODE		5385309	1					
ANR	5385983	Argument	FIELD_INODE		5385309	0					
ANR	5385984	Identifier	FIELD_INODE		5385309	0					
ANR	5385985	ExpressionStatement	"DumpState ( opts , state , opts . lookupField ( FIELD_CTIME ) )"	470:2:11913:11968	5385309	162	True				
ANR	5385986	CallExpression	"DumpState ( opts , state , opts . lookupField ( FIELD_CTIME ) )"		5385309	0					
ANR	5385987	Callee	DumpState		5385309	0					
ANR	5385988	Identifier	DumpState		5385309	0					
ANR	5385989	ArgumentList	opts		5385309	1					
ANR	5385990	Argument	opts		5385309	0					
ANR	5385991	Identifier	opts		5385309	0					
ANR	5385992	Argument	state		5385309	1					
ANR	5385993	Identifier	state		5385309	0					
ANR	5385994	Argument	opts . lookupField ( FIELD_CTIME )		5385309	2					
ANR	5385995	CallExpression	opts . lookupField ( FIELD_CTIME )		5385309	0					
ANR	5385996	Callee	opts . lookupField		5385309	0					
ANR	5385997	MemberAccess	opts . lookupField		5385309	0					
ANR	5385998	Identifier	opts		5385309	0					
ANR	5385999	Identifier	lookupField		5385309	1					
ANR	5386000	ArgumentList	FIELD_CTIME		5385309	1					
ANR	5386001	Argument	FIELD_CTIME		5385309	0					
ANR	5386002	Identifier	FIELD_CTIME		5385309	0					
ANR	5386003	ExpressionStatement	"DumpState ( opts , state , opts . lookupField ( FIELD_SIZE ) )"	471:2:11972:12026	5385309	163	True				
ANR	5386004	CallExpression	"DumpState ( opts , state , opts . lookupField ( FIELD_SIZE ) )"		5385309	0					
ANR	5386005	Callee	DumpState		5385309	0					
ANR	5386006	Identifier	DumpState		5385309	0					
ANR	5386007	ArgumentList	opts		5385309	1					
ANR	5386008	Argument	opts		5385309	0					
ANR	5386009	Identifier	opts		5385309	0					
ANR	5386010	Argument	state		5385309	1					
ANR	5386011	Identifier	state		5385309	0					
ANR	5386012	Argument	opts . lookupField ( FIELD_SIZE )		5385309	2					
ANR	5386013	CallExpression	opts . lookupField ( FIELD_SIZE )		5385309	0					
ANR	5386014	Callee	opts . lookupField		5385309	0					
ANR	5386015	MemberAccess	opts . lookupField		5385309	0					
ANR	5386016	Identifier	opts		5385309	0					
ANR	5386017	Identifier	lookupField		5385309	1					
ANR	5386018	ArgumentList	FIELD_SIZE		5385309	1					
ANR	5386019	Argument	FIELD_SIZE		5385309	0					
ANR	5386020	Identifier	FIELD_SIZE		5385309	0					
ANR	5386021	BreakStatement	break ;	472:2:12030:12035	5385309	164	True				
ANR	5386022	Label	default :	474:1:12039:12046	5385309	165	True				
ANR	5386023	Identifier	default		5385309	0					
ANR	5386024	ReturnStatement	return - 1 ;	475:2:12050:12059	5385309	166	True				
ANR	5386025	UnaryOperationExpression	- 1		5385309	0					
ANR	5386026	UnaryOperator	-		5385309	0					
ANR	5386027	PrimaryExpression	1		5385309	1					
ANR	5386028	ReturnStatement	return 0 ;	477:1:12065:12073	5385309	5	True				
ANR	5386029	PrimaryExpression	0		5385309	0					
ANR	5386030	ReturnType	int		5385309	1					
ANR	5386031	Identifier	DumpState		5385309	2					
ANR	5386032	ParameterList	"const Options & opts , const ReadUserLog :: FileState & state , const FieldData * wdata"		5385309	3					
ANR	5386033	Parameter	const Options & opts	355:11:8682:8700	5385309	0	True				
ANR	5386034	ParameterType	const Options &		5385309	0					
ANR	5386035	Identifier	opts		5385309	1					
ANR	5386036	Parameter	const ReadUserLog :: FileState & state	356:5:8708:8742	5385309	1	True				
ANR	5386037	ParameterType	const ReadUserLog :: FileState &		5385309	0					
ANR	5386038	Identifier	state		5385309	1					
ANR	5386039	Parameter	const FieldData * wdata	357:5:8750:8771	5385309	2	True				
ANR	5386040	ParameterType	const FieldData *		5385309	0					
ANR	5386041	Identifier	wdata		5385309	1					
ANR	5386042	CFGEntryNode	ENTRY		5385309		True				
ANR	5386043	CFGExitNode	EXIT		5385309		True				
ANR	5386044	Symbol	FIELD_SEQUENCE		5385309						
ANR	5386045	Symbol	istate -> m_max_rotations		5385309						
ANR	5386046	Symbol	istate -> m_version		5385309						
ANR	5386047	Symbol	FIELD_SIZE		5385309						
ANR	5386048	Symbol	istate -> m_update_time		5385309						
ANR	5386049	Symbol	FIELD_CTIME		5385309						
ANR	5386050	Symbol	rstate		5385309						
ANR	5386051	Symbol	wdata -> m_name		5385309						
ANR	5386052	Symbol	* istate		5385309						
ANR	5386053	Symbol	istate -> m_base_path		5385309						
ANR	5386054	Symbol	istate -> m_sequence		5385309						
ANR	5386055	Symbol	FIELD_BASE_PATH		5385309						
ANR	5386056	Symbol	FIELD_SIGNATURE		5385309						
ANR	5386057	Symbol	opts		5385309						
ANR	5386058	Symbol	FIELD_INODE		5385309						
ANR	5386059	Symbol	FIELD_UNIQ_ID		5385309						
ANR	5386060	Symbol	wdata		5385309						
ANR	5386061	Symbol	state		5385309						
ANR	5386062	Symbol	opts . lookupField		5385309						
ANR	5386063	Symbol	NULL		5385309						
ANR	5386064	Symbol	istate -> m_ctime		5385309						
ANR	5386065	Symbol	istate -> m_signature		5385309						
ANR	5386066	Symbol	FIELD_OFFSET		5385309						
ANR	5386067	Symbol	rstate . CurPath		5385309						
ANR	5386068	Symbol	istate -> m_rotation		5385309						
ANR	5386069	Symbol	FIELD_MAX_ROTATION		5385309						
ANR	5386070	Symbol	FIELD_EVENT_NUM		5385309						
ANR	5386071	Symbol	timestr		5385309						
ANR	5386072	Symbol	opts . getField		5385309						
ANR	5386073	Symbol	FIELD_ROTATION		5385309						
ANR	5386074	Symbol	istate -> m_uniq_id		5385309						
ANR	5386075	Symbol	opts . getNumeric		5385309						
ANR	5386076	Symbol	FIELD_CUR_PATH		5385309						
ANR	5386077	Symbol	FIELD_UPDATE_TIME		5385309						
ANR	5386078	Symbol	* wdata		5385309						
ANR	5386079	Symbol	FIELD_VERSION		5385309						
ANR	5386080	Symbol	FIELD_GLOBAL_RECORD_NUM		5385309						
ANR	5386081	Symbol	wdata -> m_field		5385309						
ANR	5386082	Symbol	istate		5385309						
ANR	5386083	Symbol	FIELD_GLOBAL_POSITION		5385309						
ANR	5386084	DeclStmt									
ANR	5386085	Decl							ReadUserLogStateAccess	ReadUserLogStateAccess ( state )	saccess
ANR	5386086	DeclStmt									
ANR	5386087	Decl							unsigned long	unsigned long	foff
ANR	5386088	DeclStmt									
ANR	5386089	Decl							unsigned long	unsigned long	fnum
ANR	5386090	DeclStmt									
ANR	5386091	Decl							unsigned long	unsigned long	lpos
ANR	5386092	DeclStmt									
ANR	5386093	Decl							unsigned long	unsigned long	lnum
ANR	5386094	DeclStmt									
ANR	5386095	Decl							int	int	seq
ANR	5386096	DeclStmt									
ANR	5386097	Decl							char	char [ 256 ]	uniq_id
ANR	5386098	DeclStmt									
ANR	5386099	Decl							int	int	errors
ANR	5386100	DeclStmt									
ANR	5386101	Decl							ReadUserLogStateAccess	ReadUserLogStateAccess ( state1 )	access1
ANR	5386102	DeclStmt									
ANR	5386103	Decl							ReadUserLogStateAccess	ReadUserLogStateAccess ( state2 )	access2
ANR	5386104	DeclStmt									
ANR	5386105	Decl							int	int	errors
ANR	5386106	Function	CompareStr	551:0:13710:13979							
ANR	5386107	FunctionDef	"CompareStr (const Options & opts , const char * val)"		5386106	0					
ANR	5386108	CompoundStatement		553:0:13766:13979	5386106	0					
ANR	5386109	IdentifierDeclStatement	bool ok ;	554:1:13769:13776	5386106	0	True				
ANR	5386110	IdentifierDecl	ok		5386106	0					
ANR	5386111	IdentifierDeclType	bool		5386106	0					
ANR	5386112	Identifier	ok		5386106	1					
ANR	5386113	ExpressionStatement	"ok = ( strcasecmp ( val , opts . getValue ( ) . asStr ) == 0 )"	556:1:13780:13834	5386106	1	True				
ANR	5386114	AssignmentExpression	"ok = ( strcasecmp ( val , opts . getValue ( ) . asStr ) == 0 )"		5386106	0		=			
ANR	5386115	Identifier	ok		5386106	0					
ANR	5386116	EqualityExpression	"strcasecmp ( val , opts . getValue ( ) . asStr ) == 0"		5386106	1		==			
ANR	5386117	CallExpression	"strcasecmp ( val , opts . getValue ( ) . asStr )"		5386106	0					
ANR	5386118	Callee	strcasecmp		5386106	0					
ANR	5386119	Identifier	strcasecmp		5386106	0					
ANR	5386120	ArgumentList	val		5386106	1					
ANR	5386121	Argument	val		5386106	0					
ANR	5386122	Identifier	val		5386106	0					
ANR	5386123	Argument	opts . getValue ( ) . asStr		5386106	1					
ANR	5386124	MemberAccess	opts . getValue ( ) . asStr		5386106	0					
ANR	5386125	CallExpression	opts . getValue ( )		5386106	0					
ANR	5386126	Callee	opts . getValue		5386106	0					
ANR	5386127	MemberAccess	opts . getValue		5386106	0					
ANR	5386128	Identifier	opts		5386106	0					
ANR	5386129	Identifier	getValue		5386106	1					
ANR	5386130	ArgumentList			5386106	1					
ANR	5386131	Identifier	asStr		5386106	1					
ANR	5386132	PrimaryExpression	0		5386106	1					
ANR	5386133	IfStatement	if ( ! ok && opts . getVerbose ( ) )		5386106	2					
ANR	5386134	Condition	! ok && opts . getVerbose ( )	557:6:13842:13865	5386106	0	True				
ANR	5386135	AndExpression	! ok && opts . getVerbose ( )		5386106	0		&&			
ANR	5386136	UnaryOperationExpression	! ok		5386106	0					
ANR	5386137	UnaryOperator	!		5386106	0					
ANR	5386138	Identifier	ok		5386106	1					
ANR	5386139	CallExpression	opts . getVerbose ( )		5386106	1					
ANR	5386140	Callee	opts . getVerbose		5386106	0					
ANR	5386141	MemberAccess	opts . getVerbose		5386106	0					
ANR	5386142	Identifier	opts		5386106	0					
ANR	5386143	Identifier	getVerbose		5386106	1					
ANR	5386144	ArgumentList			5386106	1					
ANR	5386145	CompoundStatement		5:33:102:102	5386106	1					
ANR	5386146	ExpressionStatement	"printf ( ""  %s: '%s' != '%s'\\n"" , opts . getField ( ) -> m_name , val , opts . getValue ( ) . asStr )"	558:2:13873:13962	5386106	0	True				
ANR	5386147	CallExpression	"printf ( ""  %s: '%s' != '%s'\\n"" , opts . getField ( ) -> m_name , val , opts . getValue ( ) . asStr )"		5386106	0					
ANR	5386148	Callee	printf		5386106	0					
ANR	5386149	Identifier	printf		5386106	0					
ANR	5386150	ArgumentList	"""  %s: '%s' != '%s'\\n"""		5386106	1					
ANR	5386151	Argument	"""  %s: '%s' != '%s'\\n"""		5386106	0					
ANR	5386152	PrimaryExpression	"""  %s: '%s' != '%s'\\n"""		5386106	0					
ANR	5386153	Argument	opts . getField ( ) -> m_name		5386106	1					
ANR	5386154	PtrMemberAccess	opts . getField ( ) -> m_name		5386106	0					
ANR	5386155	CallExpression	opts . getField ( )		5386106	0					
ANR	5386156	Callee	opts . getField		5386106	0					
ANR	5386157	MemberAccess	opts . getField		5386106	0					
ANR	5386158	Identifier	opts		5386106	0					
ANR	5386159	Identifier	getField		5386106	1					
ANR	5386160	ArgumentList			5386106	1					
ANR	5386161	Identifier	m_name		5386106	1					
ANR	5386162	Argument	val		5386106	2					
ANR	5386163	Identifier	val		5386106	0					
ANR	5386164	Argument	opts . getValue ( ) . asStr		5386106	3					
ANR	5386165	MemberAccess	opts . getValue ( ) . asStr		5386106	0					
ANR	5386166	CallExpression	opts . getValue ( )		5386106	0					
ANR	5386167	Callee	opts . getValue		5386106	0					
ANR	5386168	MemberAccess	opts . getValue		5386106	0					
ANR	5386169	Identifier	opts		5386106	0					
ANR	5386170	Identifier	getValue		5386106	1					
ANR	5386171	ArgumentList			5386106	1					
ANR	5386172	Identifier	asStr		5386106	1					
ANR	5386173	ReturnStatement	return ok ;	561:1:13968:13977	5386106	3	True				
ANR	5386174	Identifier	ok		5386106	0					
ANR	5386175	ReturnType	bool		5386106	1					
ANR	5386176	Identifier	CompareStr		5386106	2					
ANR	5386177	ParameterList	"const Options & opts , const char * val"		5386106	3					
ANR	5386178	Parameter	const Options & opts	552:12:13727:13745	5386106	0	True				
ANR	5386179	ParameterType	const Options &		5386106	0					
ANR	5386180	Identifier	opts		5386106	1					
ANR	5386181	Parameter	const char * val	552:33:13748:13762	5386106	1	True				
ANR	5386182	ParameterType	const char *		5386106	0					
ANR	5386183	Identifier	val		5386106	1					
ANR	5386184	CFGEntryNode	ENTRY		5386106		True				
ANR	5386185	CFGExitNode	EXIT		5386106		True				
ANR	5386186	Symbol	val		5386106						
ANR	5386187	Symbol	opts		5386106						
ANR	5386188	Symbol	opts . getValue ( ) . asStr		5386106						
ANR	5386189	Symbol	* opts . getField		5386106						
ANR	5386190	Symbol	* opts		5386106						
ANR	5386191	Symbol	opts . getValue		5386106						
ANR	5386192	Symbol	ok		5386106						
ANR	5386193	Symbol	strcasecmp		5386106						
ANR	5386194	Symbol	opts . getField		5386106						
ANR	5386195	Symbol	opts . getField ( ) -> m_name		5386106						
ANR	5386196	Symbol	opts . getVerbose		5386106						
ANR	5386197	Function	CompareInt	564:0:13982:14620							
ANR	5386198	FunctionDef	"CompareInt (const Options & opts , int val)"		5386197	0					
ANR	5386199	CompoundStatement		566:0:14030:14620	5386197	0					
ANR	5386200	IdentifierDeclStatement	bool ok ;	567:1:14033:14040	5386197	0	True				
ANR	5386201	IdentifierDecl	ok		5386197	0					
ANR	5386202	IdentifierDeclType	bool		5386197	0					
ANR	5386203	Identifier	ok		5386197	1					
ANR	5386204	IfStatement	if ( opts . isValueRange ( ) )		5386197	1					
ANR	5386205	Condition	opts . isValueRange ( )	569:6:14049:14067	5386197	0	True				
ANR	5386206	CallExpression	opts . isValueRange ( )		5386197	0					
ANR	5386207	Callee	opts . isValueRange		5386197	0					
ANR	5386208	MemberAccess	opts . isValueRange		5386197	0					
ANR	5386209	Identifier	opts		5386197	0					
ANR	5386210	Identifier	isValueRange		5386197	1					
ANR	5386211	ArgumentList			5386197	1					
ANR	5386212	CompoundStatement		4:28:40:40	5386197	1					
ANR	5386213	ExpressionStatement	ok = ( ( val >= opts . getValue ( ) . asRange . minVal . asInt ) && ( val <= opts . getValue ( ) . asRange . maxVal . asInt ) )	570:2:14075:14188	5386197	0	True				
ANR	5386214	AssignmentExpression	ok = ( ( val >= opts . getValue ( ) . asRange . minVal . asInt ) && ( val <= opts . getValue ( ) . asRange . maxVal . asInt ) )		5386197	0		=			
ANR	5386215	Identifier	ok		5386197	0					
ANR	5386216	AndExpression	( val >= opts . getValue ( ) . asRange . minVal . asInt ) && ( val <= opts . getValue ( ) . asRange . maxVal . asInt )		5386197	1		&&			
ANR	5386217	RelationalExpression	val >= opts . getValue ( ) . asRange . minVal . asInt		5386197	0		>=			
ANR	5386218	Identifier	val		5386197	0					
ANR	5386219	MemberAccess	opts . getValue ( ) . asRange . minVal . asInt		5386197	1					
ANR	5386220	MemberAccess	opts . getValue ( ) . asRange . minVal		5386197	0					
ANR	5386221	MemberAccess	opts . getValue ( ) . asRange		5386197	0					
ANR	5386222	CallExpression	opts . getValue ( )		5386197	0					
ANR	5386223	Callee	opts . getValue		5386197	0					
ANR	5386224	MemberAccess	opts . getValue		5386197	0					
ANR	5386225	Identifier	opts		5386197	0					
ANR	5386226	Identifier	getValue		5386197	1					
ANR	5386227	ArgumentList			5386197	1					
ANR	5386228	Identifier	asRange		5386197	1					
ANR	5386229	Identifier	minVal		5386197	1					
ANR	5386230	Identifier	asInt		5386197	1					
ANR	5386231	RelationalExpression	val <= opts . getValue ( ) . asRange . maxVal . asInt		5386197	1		<=			
ANR	5386232	Identifier	val		5386197	0					
ANR	5386233	MemberAccess	opts . getValue ( ) . asRange . maxVal . asInt		5386197	1					
ANR	5386234	MemberAccess	opts . getValue ( ) . asRange . maxVal		5386197	0					
ANR	5386235	MemberAccess	opts . getValue ( ) . asRange		5386197	0					
ANR	5386236	CallExpression	opts . getValue ( )		5386197	0					
ANR	5386237	Callee	opts . getValue		5386197	0					
ANR	5386238	MemberAccess	opts . getValue		5386197	0					
ANR	5386239	Identifier	opts		5386197	0					
ANR	5386240	Identifier	getValue		5386197	1					
ANR	5386241	ArgumentList			5386197	1					
ANR	5386242	Identifier	asRange		5386197	1					
ANR	5386243	Identifier	maxVal		5386197	1					
ANR	5386244	Identifier	asInt		5386197	1					
ANR	5386245	IfStatement	if ( ! ok && opts . getVerbose ( ) )		5386197	1					
ANR	5386246	Condition	! ok && opts . getVerbose ( )	573:7:14198:14221	5386197	0	True				
ANR	5386247	AndExpression	! ok && opts . getVerbose ( )		5386197	0		&&			
ANR	5386248	UnaryOperationExpression	! ok		5386197	0					
ANR	5386249	UnaryOperator	!		5386197	0					
ANR	5386250	Identifier	ok		5386197	1					
ANR	5386251	CallExpression	opts . getVerbose ( )		5386197	1					
ANR	5386252	Callee	opts . getVerbose		5386197	0					
ANR	5386253	MemberAccess	opts . getVerbose		5386197	0					
ANR	5386254	Identifier	opts		5386197	0					
ANR	5386255	Identifier	getVerbose		5386197	1					
ANR	5386256	ArgumentList			5386197	1					
ANR	5386257	CompoundStatement		8:34:194:194	5386197	1					
ANR	5386258	ExpressionStatement	"printf ( ""  %s: %d not in %d - %d\\n"" , opts . getField ( ) -> m_name , val , opts . getValue ( ) . asRange . minVal . asInt , opts . getValue ( ) . asRange . maxVal . asInt )"	574:3:14230:14393	5386197	0	True				
ANR	5386259	CallExpression	"printf ( ""  %s: %d not in %d - %d\\n"" , opts . getField ( ) -> m_name , val , opts . getValue ( ) . asRange . minVal . asInt , opts . getValue ( ) . asRange . maxVal . asInt )"		5386197	0					
ANR	5386260	Callee	printf		5386197	0					
ANR	5386261	Identifier	printf		5386197	0					
ANR	5386262	ArgumentList	"""  %s: %d not in %d - %d\\n"""		5386197	1					
ANR	5386263	Argument	"""  %s: %d not in %d - %d\\n"""		5386197	0					
ANR	5386264	PrimaryExpression	"""  %s: %d not in %d - %d\\n"""		5386197	0					
ANR	5386265	Argument	opts . getField ( ) -> m_name		5386197	1					
ANR	5386266	PtrMemberAccess	opts . getField ( ) -> m_name		5386197	0					
ANR	5386267	CallExpression	opts . getField ( )		5386197	0					
ANR	5386268	Callee	opts . getField		5386197	0					
ANR	5386269	MemberAccess	opts . getField		5386197	0					
ANR	5386270	Identifier	opts		5386197	0					
ANR	5386271	Identifier	getField		5386197	1					
ANR	5386272	ArgumentList			5386197	1					
ANR	5386273	Identifier	m_name		5386197	1					
ANR	5386274	Argument	val		5386197	2					
ANR	5386275	Identifier	val		5386197	0					
ANR	5386276	Argument	opts . getValue ( ) . asRange . minVal . asInt		5386197	3					
ANR	5386277	MemberAccess	opts . getValue ( ) . asRange . minVal . asInt		5386197	0					
ANR	5386278	MemberAccess	opts . getValue ( ) . asRange . minVal		5386197	0					
ANR	5386279	MemberAccess	opts . getValue ( ) . asRange		5386197	0					
ANR	5386280	CallExpression	opts . getValue ( )		5386197	0					
ANR	5386281	Callee	opts . getValue		5386197	0					
ANR	5386282	MemberAccess	opts . getValue		5386197	0					
ANR	5386283	Identifier	opts		5386197	0					
ANR	5386284	Identifier	getValue		5386197	1					
ANR	5386285	ArgumentList			5386197	1					
ANR	5386286	Identifier	asRange		5386197	1					
ANR	5386287	Identifier	minVal		5386197	1					
ANR	5386288	Identifier	asInt		5386197	1					
ANR	5386289	Argument	opts . getValue ( ) . asRange . maxVal . asInt		5386197	4					
ANR	5386290	MemberAccess	opts . getValue ( ) . asRange . maxVal . asInt		5386197	0					
ANR	5386291	MemberAccess	opts . getValue ( ) . asRange . maxVal		5386197	0					
ANR	5386292	MemberAccess	opts . getValue ( ) . asRange		5386197	0					
ANR	5386293	CallExpression	opts . getValue ( )		5386197	0					
ANR	5386294	Callee	opts . getValue		5386197	0					
ANR	5386295	MemberAccess	opts . getValue		5386197	0					
ANR	5386296	Identifier	opts		5386197	0					
ANR	5386297	Identifier	getValue		5386197	1					
ANR	5386298	ArgumentList			5386197	1					
ANR	5386299	Identifier	asRange		5386197	1					
ANR	5386300	Identifier	maxVal		5386197	1					
ANR	5386301	Identifier	asInt		5386197	1					
ANR	5386302	ElseStatement	else		5386197	0					
ANR	5386303	CompoundStatement		16:6:377:377	5386197	0					
ANR	5386304	ExpressionStatement	ok = ( val == opts . getValue ( ) . asInt . asInt )	582:2:14412:14455	5386197	0	True				
ANR	5386305	AssignmentExpression	ok = ( val == opts . getValue ( ) . asInt . asInt )		5386197	0		=			
ANR	5386306	Identifier	ok		5386197	0					
ANR	5386307	EqualityExpression	val == opts . getValue ( ) . asInt . asInt		5386197	1		==			
ANR	5386308	Identifier	val		5386197	0					
ANR	5386309	MemberAccess	opts . getValue ( ) . asInt . asInt		5386197	1					
ANR	5386310	MemberAccess	opts . getValue ( ) . asInt		5386197	0					
ANR	5386311	CallExpression	opts . getValue ( )		5386197	0					
ANR	5386312	Callee	opts . getValue		5386197	0					
ANR	5386313	MemberAccess	opts . getValue		5386197	0					
ANR	5386314	Identifier	opts		5386197	0					
ANR	5386315	Identifier	getValue		5386197	1					
ANR	5386316	ArgumentList			5386197	1					
ANR	5386317	Identifier	asInt		5386197	1					
ANR	5386318	Identifier	asInt		5386197	1					
ANR	5386319	IfStatement	if ( ! ok && opts . getVerbose ( ) )		5386197	1					
ANR	5386320	Condition	! ok && opts . getVerbose ( )	583:7:14464:14487	5386197	0	True				
ANR	5386321	AndExpression	! ok && opts . getVerbose ( )		5386197	0		&&			
ANR	5386322	UnaryOperationExpression	! ok		5386197	0					
ANR	5386323	UnaryOperator	!		5386197	0					
ANR	5386324	Identifier	ok		5386197	1					
ANR	5386325	CallExpression	opts . getVerbose ( )		5386197	1					
ANR	5386326	Callee	opts . getVerbose		5386197	0					
ANR	5386327	MemberAccess	opts . getVerbose		5386197	0					
ANR	5386328	Identifier	opts		5386197	0					
ANR	5386329	Identifier	getVerbose		5386197	1					
ANR	5386330	ArgumentList			5386197	1					
ANR	5386331	CompoundStatement		18:34:460:460	5386197	1					
ANR	5386332	ExpressionStatement	"printf ( ""  %s: %d != %d\\n"" , opts . getField ( ) -> m_name , val , opts . getValue ( ) . asInt . asInt )"	584:3:14496:14598	5386197	0	True				
ANR	5386333	CallExpression	"printf ( ""  %s: %d != %d\\n"" , opts . getField ( ) -> m_name , val , opts . getValue ( ) . asInt . asInt )"		5386197	0					
ANR	5386334	Callee	printf		5386197	0					
ANR	5386335	Identifier	printf		5386197	0					
ANR	5386336	ArgumentList	"""  %s: %d != %d\\n"""		5386197	1					
ANR	5386337	Argument	"""  %s: %d != %d\\n"""		5386197	0					
ANR	5386338	PrimaryExpression	"""  %s: %d != %d\\n"""		5386197	0					
ANR	5386339	Argument	opts . getField ( ) -> m_name		5386197	1					
ANR	5386340	PtrMemberAccess	opts . getField ( ) -> m_name		5386197	0					
ANR	5386341	CallExpression	opts . getField ( )		5386197	0					
ANR	5386342	Callee	opts . getField		5386197	0					
ANR	5386343	MemberAccess	opts . getField		5386197	0					
ANR	5386344	Identifier	opts		5386197	0					
ANR	5386345	Identifier	getField		5386197	1					
ANR	5386346	ArgumentList			5386197	1					
ANR	5386347	Identifier	m_name		5386197	1					
ANR	5386348	Argument	val		5386197	2					
ANR	5386349	Identifier	val		5386197	0					
ANR	5386350	Argument	opts . getValue ( ) . asInt . asInt		5386197	3					
ANR	5386351	MemberAccess	opts . getValue ( ) . asInt . asInt		5386197	0					
ANR	5386352	MemberAccess	opts . getValue ( ) . asInt		5386197	0					
ANR	5386353	CallExpression	opts . getValue ( )		5386197	0					
ANR	5386354	Callee	opts . getValue		5386197	0					
ANR	5386355	MemberAccess	opts . getValue		5386197	0					
ANR	5386356	Identifier	opts		5386197	0					
ANR	5386357	Identifier	getValue		5386197	1					
ANR	5386358	ArgumentList			5386197	1					
ANR	5386359	Identifier	asInt		5386197	1					
ANR	5386360	Identifier	asInt		5386197	1					
ANR	5386361	ReturnStatement	return ok ;	591:1:14609:14618	5386197	2	True				
ANR	5386362	Identifier	ok		5386197	0					
ANR	5386363	ReturnType	bool		5386197	1					
ANR	5386364	Identifier	CompareInt		5386197	2					
ANR	5386365	ParameterList	"const Options & opts , int val"		5386197	3					
ANR	5386366	Parameter	const Options & opts	565:12:13999:14017	5386197	0	True				
ANR	5386367	ParameterType	const Options &		5386197	0					
ANR	5386368	Identifier	opts		5386197	1					
ANR	5386369	Parameter	int val	565:33:14020:14026	5386197	1	True				
ANR	5386370	ParameterType	int		5386197	0					
ANR	5386371	Identifier	val		5386197	1					
ANR	5386372	CFGEntryNode	ENTRY		5386197		True				
ANR	5386373	CFGExitNode	EXIT		5386197		True				
ANR	5386374	Symbol	val		5386197						
ANR	5386375	Symbol	opts . getValue ( ) . asRange . maxVal . asInt		5386197						
ANR	5386376	Symbol	opts . getValue ( ) . asInt		5386197						
ANR	5386377	Symbol	opts . getField ( ) -> m_name		5386197						
ANR	5386378	Symbol	opts . getField		5386197						
ANR	5386379	Symbol	opts		5386197						
ANR	5386380	Symbol	* opts . getField		5386197						
ANR	5386381	Symbol	* opts		5386197						
ANR	5386382	Symbol	opts . getValue		5386197						
ANR	5386383	Symbol	opts . getValue ( ) . asInt . asInt		5386197						
ANR	5386384	Symbol	opts . isValueRange		5386197						
ANR	5386385	Symbol	opts . getValue ( ) . asRange		5386197						
ANR	5386386	Symbol	opts . getValue ( ) . asRange . minVal . asInt		5386197						
ANR	5386387	Symbol	opts . getValue ( ) . asRange . minVal		5386197						
ANR	5386388	Symbol	ok		5386197						
ANR	5386389	Symbol	opts . getValue ( ) . asRange . maxVal		5386197						
ANR	5386390	Symbol	opts . getVerbose		5386197						
ANR	5386391	Function	CompareFsize	594:0:14623:15379							
ANR	5386392	FunctionDef	"CompareFsize (const Options & opts , filesize_t val)"		5386391	0					
ANR	5386393	CompoundStatement		596:0:14680:15379	5386391	0					
ANR	5386394	IdentifierDeclStatement	bool ok ;	597:1:14683:14690	5386391	0	True				
ANR	5386395	IdentifierDecl	ok		5386391	0					
ANR	5386396	IdentifierDeclType	bool		5386391	0					
ANR	5386397	Identifier	ok		5386391	1					
ANR	5386398	IfStatement	if ( opts . isValueRange ( ) )		5386391	1					
ANR	5386399	Condition	opts . isValueRange ( )	599:6:14699:14717	5386391	0	True				
ANR	5386400	CallExpression	opts . isValueRange ( )		5386391	0					
ANR	5386401	Callee	opts . isValueRange		5386391	0					
ANR	5386402	MemberAccess	opts . isValueRange		5386391	0					
ANR	5386403	Identifier	opts		5386391	0					
ANR	5386404	Identifier	isValueRange		5386391	1					
ANR	5386405	ArgumentList			5386391	1					
ANR	5386406	CompoundStatement		4:28:40:40	5386391	1					
ANR	5386407	ExpressionStatement	ok = ( ( val >= opts . getValue ( ) . asRange . minVal . asFsize ) && ( val <= opts . getValue ( ) . asRange . maxVal . asFsize ) )	600:2:14725:14842	5386391	0	True				
ANR	5386408	AssignmentExpression	ok = ( ( val >= opts . getValue ( ) . asRange . minVal . asFsize ) && ( val <= opts . getValue ( ) . asRange . maxVal . asFsize ) )		5386391	0		=			
ANR	5386409	Identifier	ok		5386391	0					
ANR	5386410	AndExpression	( val >= opts . getValue ( ) . asRange . minVal . asFsize ) && ( val <= opts . getValue ( ) . asRange . maxVal . asFsize )		5386391	1		&&			
ANR	5386411	RelationalExpression	val >= opts . getValue ( ) . asRange . minVal . asFsize		5386391	0		>=			
ANR	5386412	Identifier	val		5386391	0					
ANR	5386413	MemberAccess	opts . getValue ( ) . asRange . minVal . asFsize		5386391	1					
ANR	5386414	MemberAccess	opts . getValue ( ) . asRange . minVal		5386391	0					
ANR	5386415	MemberAccess	opts . getValue ( ) . asRange		5386391	0					
ANR	5386416	CallExpression	opts . getValue ( )		5386391	0					
ANR	5386417	Callee	opts . getValue		5386391	0					
ANR	5386418	MemberAccess	opts . getValue		5386391	0					
ANR	5386419	Identifier	opts		5386391	0					
ANR	5386420	Identifier	getValue		5386391	1					
ANR	5386421	ArgumentList			5386391	1					
ANR	5386422	Identifier	asRange		5386391	1					
ANR	5386423	Identifier	minVal		5386391	1					
ANR	5386424	Identifier	asFsize		5386391	1					
ANR	5386425	RelationalExpression	val <= opts . getValue ( ) . asRange . maxVal . asFsize		5386391	1		<=			
ANR	5386426	Identifier	val		5386391	0					
ANR	5386427	MemberAccess	opts . getValue ( ) . asRange . maxVal . asFsize		5386391	1					
ANR	5386428	MemberAccess	opts . getValue ( ) . asRange . maxVal		5386391	0					
ANR	5386429	MemberAccess	opts . getValue ( ) . asRange		5386391	0					
ANR	5386430	CallExpression	opts . getValue ( )		5386391	0					
ANR	5386431	Callee	opts . getValue		5386391	0					
ANR	5386432	MemberAccess	opts . getValue		5386391	0					
ANR	5386433	Identifier	opts		5386391	0					
ANR	5386434	Identifier	getValue		5386391	1					
ANR	5386435	ArgumentList			5386391	1					
ANR	5386436	Identifier	asRange		5386391	1					
ANR	5386437	Identifier	maxVal		5386391	1					
ANR	5386438	Identifier	asFsize		5386391	1					
ANR	5386439	IfStatement	if ( ! ok && opts . getVerbose ( ) )		5386391	1					
ANR	5386440	Condition	! ok && opts . getVerbose ( )	603:7:14852:14875	5386391	0	True				
ANR	5386441	AndExpression	! ok && opts . getVerbose ( )		5386391	0		&&			
ANR	5386442	UnaryOperationExpression	! ok		5386391	0					
ANR	5386443	UnaryOperator	!		5386391	0					
ANR	5386444	Identifier	ok		5386391	1					
ANR	5386445	CallExpression	opts . getVerbose ( )		5386391	1					
ANR	5386446	Callee	opts . getVerbose		5386391	0					
ANR	5386447	MemberAccess	opts . getVerbose		5386391	0					
ANR	5386448	Identifier	opts		5386391	0					
ANR	5386449	Identifier	getVerbose		5386391	1					
ANR	5386450	ArgumentList			5386391	1					
ANR	5386451	CompoundStatement		8:34:198:198	5386391	1					
ANR	5386452	Statement	printf	604:3:14884:14889	5386391	0	True				
ANR	5386453	Statement	(	604:9:14890:14890	5386391	1	True				
ANR	5386454	Statement	"""  %s: """	604:11:14892:14899	5386391	2	True				
ANR	5386455	Statement	FILESIZE_T_FORMAT	604:20:14901:14917	5386391	3	True				
ANR	5386456	Statement	"""not in """	605:5:14924:14932	5386391	4	True				
ANR	5386457	Statement	FILESIZE_T_FORMAT	605:15:14934:14950	5386391	5	True				
ANR	5386458	Statement	""" - """	605:33:14952:14956	5386391	6	True				
ANR	5386459	Statement	FILESIZE_T_FORMAT	605:39:14958:14974	5386391	7	True				
ANR	5386460	Statement	"""\\n"""	605:57:14976:14979	5386391	8	True				
ANR	5386461	Statement	","	605:61:14980:14980	5386391	9	True				
ANR	5386462	Statement	opts	606:5:14987:14990	5386391	10	True				
ANR	5386463	Statement	.	606:9:14991:14991	5386391	11	True				
ANR	5386464	Statement	getField	606:10:14992:14999	5386391	12	True				
ANR	5386465	Statement	(	606:18:15000:15000	5386391	13	True				
ANR	5386466	Statement	)	606:19:15001:15001	5386391	14	True				
ANR	5386467	Statement	->	606:20:15002:15003	5386391	15	True				
ANR	5386468	Statement	m_name	606:22:15004:15009	5386391	16	True				
ANR	5386469	Statement	","	606:28:15010:15010	5386391	17	True				
ANR	5386470	Statement	val	607:5:15017:15019	5386391	18	True				
ANR	5386471	Statement	","	607:8:15020:15020	5386391	19	True				
ANR	5386472	Statement	opts	608:5:15027:15030	5386391	20	True				
ANR	5386473	Statement	.	608:9:15031:15031	5386391	21	True				
ANR	5386474	Statement	getValue	608:10:15032:15039	5386391	22	True				
ANR	5386475	Statement	(	608:18:15040:15040	5386391	23	True				
ANR	5386476	Statement	)	608:19:15041:15041	5386391	24	True				
ANR	5386477	Statement	.	608:20:15042:15042	5386391	25	True				
ANR	5386478	Statement	asRange	608:21:15043:15049	5386391	26	True				
ANR	5386479	Statement	.	608:28:15050:15050	5386391	27	True				
ANR	5386480	Statement	minVal	608:29:15051:15056	5386391	28	True				
ANR	5386481	Statement	.	608:35:15057:15057	5386391	29	True				
ANR	5386482	Statement	asFsize	608:36:15058:15064	5386391	30	True				
ANR	5386483	Statement	","	608:43:15065:15065	5386391	31	True				
ANR	5386484	Statement	opts	609:5:15072:15075	5386391	32	True				
ANR	5386485	Statement	.	609:9:15076:15076	5386391	33	True				
ANR	5386486	Statement	getValue	609:10:15077:15084	5386391	34	True				
ANR	5386487	Statement	(	609:18:15085:15085	5386391	35	True				
ANR	5386488	Statement	)	609:19:15086:15086	5386391	36	True				
ANR	5386489	Statement	.	609:20:15087:15087	5386391	37	True				
ANR	5386490	Statement	asRange	609:21:15088:15094	5386391	38	True				
ANR	5386491	Statement	.	609:28:15095:15095	5386391	39	True				
ANR	5386492	Statement	maxVal	609:29:15096:15101	5386391	40	True				
ANR	5386493	Statement	.	609:35:15102:15102	5386391	41	True				
ANR	5386494	Statement	asFsize	609:36:15103:15109	5386391	42	True				
ANR	5386495	Statement	)	609:44:15111:15111	5386391	43	True				
ANR	5386496	ExpressionStatement		609:45:15112:15112	5386391	44	True				
ANR	5386497	ElseStatement	else		5386391	0					
ANR	5386498	CompoundStatement		17:6:446:446	5386391	0					
ANR	5386499	ExpressionStatement	ok = ( val == opts . getValue ( ) . asInt . asInt )	613:2:15131:15174	5386391	0	True				
ANR	5386500	AssignmentExpression	ok = ( val == opts . getValue ( ) . asInt . asInt )		5386391	0		=			
ANR	5386501	Identifier	ok		5386391	0					
ANR	5386502	EqualityExpression	val == opts . getValue ( ) . asInt . asInt		5386391	1		==			
ANR	5386503	Identifier	val		5386391	0					
ANR	5386504	MemberAccess	opts . getValue ( ) . asInt . asInt		5386391	1					
ANR	5386505	MemberAccess	opts . getValue ( ) . asInt		5386391	0					
ANR	5386506	CallExpression	opts . getValue ( )		5386391	0					
ANR	5386507	Callee	opts . getValue		5386391	0					
ANR	5386508	MemberAccess	opts . getValue		5386391	0					
ANR	5386509	Identifier	opts		5386391	0					
ANR	5386510	Identifier	getValue		5386391	1					
ANR	5386511	ArgumentList			5386391	1					
ANR	5386512	Identifier	asInt		5386391	1					
ANR	5386513	Identifier	asInt		5386391	1					
ANR	5386514	IfStatement	if ( ! ok && opts . getVerbose ( ) )		5386391	1					
ANR	5386515	Condition	! ok && opts . getVerbose ( )	614:7:15183:15206	5386391	0	True				
ANR	5386516	AndExpression	! ok && opts . getVerbose ( )		5386391	0		&&			
ANR	5386517	UnaryOperationExpression	! ok		5386391	0					
ANR	5386518	UnaryOperator	!		5386391	0					
ANR	5386519	Identifier	ok		5386391	1					
ANR	5386520	CallExpression	opts . getVerbose ( )		5386391	1					
ANR	5386521	Callee	opts . getVerbose		5386391	0					
ANR	5386522	MemberAccess	opts . getVerbose		5386391	0					
ANR	5386523	Identifier	opts		5386391	0					
ANR	5386524	Identifier	getVerbose		5386391	1					
ANR	5386525	ArgumentList			5386391	1					
ANR	5386526	CompoundStatement		19:34:529:529	5386391	1					
ANR	5386527	Statement	printf	615:3:15215:15220	5386391	0	True				
ANR	5386528	Statement	(	615:9:15221:15221	5386391	1	True				
ANR	5386529	Statement	"""  %s: """	615:11:15223:15230	5386391	2	True				
ANR	5386530	Statement	FILESIZE_T_FORMAT	615:20:15232:15248	5386391	3	True				
ANR	5386531	Statement	""" != """	615:38:15250:15255	5386391	4	True				
ANR	5386532	Statement	FILESIZE_T_FORMAT	615:45:15257:15273	5386391	5	True				
ANR	5386533	Statement	"""\\n"""	615:63:15275:15278	5386391	6	True				
ANR	5386534	Statement	","	615:67:15279:15279	5386391	7	True				
ANR	5386535	Statement	opts	616:5:15286:15289	5386391	8	True				
ANR	5386536	Statement	.	616:9:15290:15290	5386391	9	True				
ANR	5386537	Statement	getField	616:10:15291:15298	5386391	10	True				
ANR	5386538	Statement	(	616:18:15299:15299	5386391	11	True				
ANR	5386539	Statement	)	616:19:15300:15300	5386391	12	True				
ANR	5386540	Statement	->	616:20:15301:15302	5386391	13	True				
ANR	5386541	Statement	m_name	616:22:15303:15308	5386391	14	True				
ANR	5386542	Statement	","	616:28:15309:15309	5386391	15	True				
ANR	5386543	Statement	val	617:5:15316:15318	5386391	16	True				
ANR	5386544	Statement	","	617:8:15319:15319	5386391	17	True				
ANR	5386545	Statement	opts	618:5:15326:15329	5386391	18	True				
ANR	5386546	Statement	.	618:9:15330:15330	5386391	19	True				
ANR	5386547	Statement	getValue	618:10:15331:15338	5386391	20	True				
ANR	5386548	Statement	(	618:18:15339:15339	5386391	21	True				
ANR	5386549	Statement	)	618:19:15340:15340	5386391	22	True				
ANR	5386550	Statement	.	618:20:15341:15341	5386391	23	True				
ANR	5386551	Statement	asInt	618:21:15342:15346	5386391	24	True				
ANR	5386552	Statement	.	618:26:15347:15347	5386391	25	True				
ANR	5386553	Statement	asFsize	618:27:15348:15354	5386391	26	True				
ANR	5386554	Statement	)	618:35:15356:15356	5386391	27	True				
ANR	5386555	ExpressionStatement		618:36:15357:15357	5386391	28	True				
ANR	5386556	ReturnStatement	return ok ;	622:1:15368:15377	5386391	2	True				
ANR	5386557	Identifier	ok		5386391	0					
ANR	5386558	ReturnType	bool		5386391	1					
ANR	5386559	Identifier	CompareFsize		5386391	2					
ANR	5386560	ParameterList	"const Options & opts , filesize_t val"		5386391	3					
ANR	5386561	Parameter	const Options & opts	595:14:14642:14660	5386391	0	True				
ANR	5386562	ParameterType	const Options &		5386391	0					
ANR	5386563	Identifier	opts		5386391	1					
ANR	5386564	Parameter	filesize_t val	595:35:14663:14676	5386391	1	True				
ANR	5386565	ParameterType	filesize_t		5386391	0					
ANR	5386566	Identifier	val		5386391	1					
ANR	5386567	CFGEntryNode	ENTRY		5386391		True				
ANR	5386568	CFGExitNode	EXIT		5386391		True				
ANR	5386569	Symbol	val		5386391						
ANR	5386570	Symbol	opts . getValue ( ) . asInt		5386391						
ANR	5386571	Symbol	opts		5386391						
ANR	5386572	Symbol	opts . getValue		5386391						
ANR	5386573	Symbol	opts . getValue ( ) . asInt . asInt		5386391						
ANR	5386574	Symbol	opts . isValueRange		5386391						
ANR	5386575	Symbol	opts . getValue ( ) . asRange		5386391						
ANR	5386576	Symbol	opts . getValue ( ) . asRange . minVal		5386391						
ANR	5386577	Symbol	opts . getValue ( ) . asRange . maxVal . asFsize		5386391						
ANR	5386578	Symbol	ok		5386391						
ANR	5386579	Symbol	opts . getValue ( ) . asRange . minVal . asFsize		5386391						
ANR	5386580	Symbol	opts . getValue ( ) . asRange . maxVal		5386391						
ANR	5386581	Symbol	opts . getVerbose		5386391						
ANR	5386582	Function	CompareTime	625:0:15382:16709							
ANR	5386583	FunctionDef	"CompareTime (const Options & opts , time_t val)"		5386582	0					
ANR	5386584	CompoundStatement		627:0:15434:16709	5386582	0					
ANR	5386585	IdentifierDeclStatement	bool ok ;	628:1:15437:15444	5386582	0	True				
ANR	5386586	IdentifierDecl	ok		5386582	0					
ANR	5386587	IdentifierDeclType	bool		5386582	0					
ANR	5386588	Identifier	ok		5386582	1					
ANR	5386589	IdentifierDeclStatement	"char b1 [ 64 ] , b2 [ 64 ] , b3 [ 64 ] ;"	629:1:15447:15474	5386582	1	True				
ANR	5386590	IdentifierDecl	b1 [ 64 ]		5386582	0					
ANR	5386591	IdentifierDeclType	char [ 64 ]		5386582	0					
ANR	5386592	Identifier	b1		5386582	1					
ANR	5386593	PrimaryExpression	64		5386582	2					
ANR	5386594	IdentifierDecl	b2 [ 64 ]		5386582	1					
ANR	5386595	IdentifierDeclType	char [ 64 ]		5386582	0					
ANR	5386596	Identifier	b2		5386582	1					
ANR	5386597	PrimaryExpression	64		5386582	2					
ANR	5386598	IdentifierDecl	b3 [ 64 ]		5386582	2					
ANR	5386599	IdentifierDeclType	char [ 64 ]		5386582	0					
ANR	5386600	Identifier	b3		5386582	1					
ANR	5386601	PrimaryExpression	64		5386582	2					
ANR	5386602	IfStatement	if ( opts . isValueRange ( ) )		5386582	2					
ANR	5386603	Condition	opts . isValueRange ( )	631:6:15483:15501	5386582	0	True				
ANR	5386604	CallExpression	opts . isValueRange ( )		5386582	0					
ANR	5386605	Callee	opts . isValueRange		5386582	0					
ANR	5386606	MemberAccess	opts . isValueRange		5386582	0					
ANR	5386607	Identifier	opts		5386582	0					
ANR	5386608	Identifier	isValueRange		5386582	1					
ANR	5386609	ArgumentList			5386582	1					
ANR	5386610	CompoundStatement		5:28:70:70	5386582	1					
ANR	5386611	ExpressionStatement	ok = ( ( val >= opts . getValue ( ) . asRange . minVal . asTime ) && ( val <= opts . getValue ( ) . asRange . maxVal . asTime ) )	632:2:15509:15624	5386582	0	True				
ANR	5386612	AssignmentExpression	ok = ( ( val >= opts . getValue ( ) . asRange . minVal . asTime ) && ( val <= opts . getValue ( ) . asRange . maxVal . asTime ) )		5386582	0		=			
ANR	5386613	Identifier	ok		5386582	0					
ANR	5386614	AndExpression	( val >= opts . getValue ( ) . asRange . minVal . asTime ) && ( val <= opts . getValue ( ) . asRange . maxVal . asTime )		5386582	1		&&			
ANR	5386615	RelationalExpression	val >= opts . getValue ( ) . asRange . minVal . asTime		5386582	0		>=			
ANR	5386616	Identifier	val		5386582	0					
ANR	5386617	MemberAccess	opts . getValue ( ) . asRange . minVal . asTime		5386582	1					
ANR	5386618	MemberAccess	opts . getValue ( ) . asRange . minVal		5386582	0					
ANR	5386619	MemberAccess	opts . getValue ( ) . asRange		5386582	0					
ANR	5386620	CallExpression	opts . getValue ( )		5386582	0					
ANR	5386621	Callee	opts . getValue		5386582	0					
ANR	5386622	MemberAccess	opts . getValue		5386582	0					
ANR	5386623	Identifier	opts		5386582	0					
ANR	5386624	Identifier	getValue		5386582	1					
ANR	5386625	ArgumentList			5386582	1					
ANR	5386626	Identifier	asRange		5386582	1					
ANR	5386627	Identifier	minVal		5386582	1					
ANR	5386628	Identifier	asTime		5386582	1					
ANR	5386629	RelationalExpression	val <= opts . getValue ( ) . asRange . maxVal . asTime		5386582	1		<=			
ANR	5386630	Identifier	val		5386582	0					
ANR	5386631	MemberAccess	opts . getValue ( ) . asRange . maxVal . asTime		5386582	1					
ANR	5386632	MemberAccess	opts . getValue ( ) . asRange . maxVal		5386582	0					
ANR	5386633	MemberAccess	opts . getValue ( ) . asRange		5386582	0					
ANR	5386634	CallExpression	opts . getValue ( )		5386582	0					
ANR	5386635	Callee	opts . getValue		5386582	0					
ANR	5386636	MemberAccess	opts . getValue		5386582	0					
ANR	5386637	Identifier	opts		5386582	0					
ANR	5386638	Identifier	getValue		5386582	1					
ANR	5386639	ArgumentList			5386582	1					
ANR	5386640	Identifier	asRange		5386582	1					
ANR	5386641	Identifier	maxVal		5386582	1					
ANR	5386642	Identifier	asTime		5386582	1					
ANR	5386643	IfStatement	if ( ! ok && opts . getVerbose ( ) )		5386582	1					
ANR	5386644	Condition	! ok && opts . getVerbose ( )	635:7:15634:15657	5386582	0	True				
ANR	5386645	AndExpression	! ok && opts . getVerbose ( )		5386582	0		&&			
ANR	5386646	UnaryOperationExpression	! ok		5386582	0					
ANR	5386647	UnaryOperator	!		5386582	0					
ANR	5386648	Identifier	ok		5386582	1					
ANR	5386649	CallExpression	opts . getVerbose ( )		5386582	1					
ANR	5386650	Callee	opts . getVerbose		5386582	0					
ANR	5386651	MemberAccess	opts . getVerbose		5386582	0					
ANR	5386652	Identifier	opts		5386582	0					
ANR	5386653	Identifier	getVerbose		5386582	1					
ANR	5386654	ArgumentList			5386582	1					
ANR	5386655	CompoundStatement		9:34:226:226	5386582	1					
ANR	5386656	IfStatement	if ( opts . getNumeric ( ) )		5386582	0					
ANR	5386657	Condition	opts . getNumeric ( )	636:8:15671:15687	5386582	0	True				
ANR	5386658	CallExpression	opts . getNumeric ( )		5386582	0					
ANR	5386659	Callee	opts . getNumeric		5386582	0					
ANR	5386660	MemberAccess	opts . getNumeric		5386582	0					
ANR	5386661	Identifier	opts		5386582	0					
ANR	5386662	Identifier	getNumeric		5386582	1					
ANR	5386663	ArgumentList			5386582	1					
ANR	5386664	CompoundStatement		10:28:256:256	5386582	1					
ANR	5386665	ExpressionStatement	"printf ( ""  %s: %lu not in %lu - %lu\\n"" , opts . getField ( ) -> m_name , ( unsigned long ) val , ( unsigned long ) opts . getValue ( ) . asRange . minVal . asTime , ( unsigned long ) opts . getValue ( ) . asRange . maxVal . asTime )"	637:4:15697:15914	5386582	0	True				
ANR	5386666	CallExpression	"printf ( ""  %s: %lu not in %lu - %lu\\n"" , opts . getField ( ) -> m_name , ( unsigned long ) val , ( unsigned long ) opts . getValue ( ) . asRange . minVal . asTime , ( unsigned long ) opts . getValue ( ) . asRange . maxVal . asTime )"		5386582	0					
ANR	5386667	Callee	printf		5386582	0					
ANR	5386668	Identifier	printf		5386582	0					
ANR	5386669	ArgumentList	"""  %s: %lu not in %lu - %lu\\n"""		5386582	1					
ANR	5386670	Argument	"""  %s: %lu not in %lu - %lu\\n"""		5386582	0					
ANR	5386671	PrimaryExpression	"""  %s: %lu not in %lu - %lu\\n"""		5386582	0					
ANR	5386672	Argument	opts . getField ( ) -> m_name		5386582	1					
ANR	5386673	PtrMemberAccess	opts . getField ( ) -> m_name		5386582	0					
ANR	5386674	CallExpression	opts . getField ( )		5386582	0					
ANR	5386675	Callee	opts . getField		5386582	0					
ANR	5386676	MemberAccess	opts . getField		5386582	0					
ANR	5386677	Identifier	opts		5386582	0					
ANR	5386678	Identifier	getField		5386582	1					
ANR	5386679	ArgumentList			5386582	1					
ANR	5386680	Identifier	m_name		5386582	1					
ANR	5386681	Argument	( unsigned long ) val		5386582	2					
ANR	5386682	CastExpression	( unsigned long ) val		5386582	0					
ANR	5386683	CastTarget	unsigned long		5386582	0					
ANR	5386684	Identifier	val		5386582	1					
ANR	5386685	Argument	( unsigned long ) opts . getValue ( ) . asRange . minVal . asTime		5386582	3					
ANR	5386686	CastExpression	( unsigned long ) opts . getValue ( ) . asRange . minVal . asTime		5386582	0					
ANR	5386687	CastTarget	unsigned long		5386582	0					
ANR	5386688	MemberAccess	opts . getValue ( ) . asRange . minVal . asTime		5386582	1					
ANR	5386689	MemberAccess	opts . getValue ( ) . asRange . minVal		5386582	0					
ANR	5386690	MemberAccess	opts . getValue ( ) . asRange		5386582	0					
ANR	5386691	CallExpression	opts . getValue ( )		5386582	0					
ANR	5386692	Callee	opts . getValue		5386582	0					
ANR	5386693	MemberAccess	opts . getValue		5386582	0					
ANR	5386694	Identifier	opts		5386582	0					
ANR	5386695	Identifier	getValue		5386582	1					
ANR	5386696	ArgumentList			5386582	1					
ANR	5386697	Identifier	asRange		5386582	1					
ANR	5386698	Identifier	minVal		5386582	1					
ANR	5386699	Identifier	asTime		5386582	1					
ANR	5386700	Argument	( unsigned long ) opts . getValue ( ) . asRange . maxVal . asTime		5386582	4					
ANR	5386701	CastExpression	( unsigned long ) opts . getValue ( ) . asRange . maxVal . asTime		5386582	0					
ANR	5386702	CastTarget	unsigned long		5386582	0					
ANR	5386703	MemberAccess	opts . getValue ( ) . asRange . maxVal . asTime		5386582	1					
ANR	5386704	MemberAccess	opts . getValue ( ) . asRange . maxVal		5386582	0					
ANR	5386705	MemberAccess	opts . getValue ( ) . asRange		5386582	0					
ANR	5386706	CallExpression	opts . getValue ( )		5386582	0					
ANR	5386707	Callee	opts . getValue		5386582	0					
ANR	5386708	MemberAccess	opts . getValue		5386582	0					
ANR	5386709	Identifier	opts		5386582	0					
ANR	5386710	Identifier	getValue		5386582	1					
ANR	5386711	ArgumentList			5386582	1					
ANR	5386712	Identifier	asRange		5386582	1					
ANR	5386713	Identifier	maxVal		5386582	1					
ANR	5386714	Identifier	asTime		5386582	1					
ANR	5386715	ElseStatement	else		5386582	0					
ANR	5386716	CompoundStatement		17:8:494:494	5386582	0					
ANR	5386717	ExpressionStatement	"printf ( ""  %s: %s not in %s - %s\\n"" , opts . getField ( ) -> m_name , timestr ( val , b1 , sizeof ( b1 ) ) , timestr ( opts . getValue ( ) . asRange . minVal . asTime , b2 , sizeof ( b2 ) ) , timestr ( opts . getValue ( ) . asRange . maxVal . asTime , b3 , sizeof ( b3 ) ) )"	644:4:15935:16203	5386582	0	True				
ANR	5386718	CallExpression	"printf ( ""  %s: %s not in %s - %s\\n"" , opts . getField ( ) -> m_name , timestr ( val , b1 , sizeof ( b1 ) ) , timestr ( opts . getValue ( ) . asRange . minVal . asTime , b2 , sizeof ( b2 ) ) , timestr ( opts . getValue ( ) . asRange . maxVal . asTime , b3 , sizeof ( b3 ) ) )"		5386582	0					
ANR	5386719	Callee	printf		5386582	0					
ANR	5386720	Identifier	printf		5386582	0					
ANR	5386721	ArgumentList	"""  %s: %s not in %s - %s\\n"""		5386582	1					
ANR	5386722	Argument	"""  %s: %s not in %s - %s\\n"""		5386582	0					
ANR	5386723	PrimaryExpression	"""  %s: %s not in %s - %s\\n"""		5386582	0					
ANR	5386724	Argument	opts . getField ( ) -> m_name		5386582	1					
ANR	5386725	PtrMemberAccess	opts . getField ( ) -> m_name		5386582	0					
ANR	5386726	CallExpression	opts . getField ( )		5386582	0					
ANR	5386727	Callee	opts . getField		5386582	0					
ANR	5386728	MemberAccess	opts . getField		5386582	0					
ANR	5386729	Identifier	opts		5386582	0					
ANR	5386730	Identifier	getField		5386582	1					
ANR	5386731	ArgumentList			5386582	1					
ANR	5386732	Identifier	m_name		5386582	1					
ANR	5386733	Argument	"timestr ( val , b1 , sizeof ( b1 ) )"		5386582	2					
ANR	5386734	CallExpression	"timestr ( val , b1 , sizeof ( b1 ) )"		5386582	0					
ANR	5386735	Callee	timestr		5386582	0					
ANR	5386736	Identifier	timestr		5386582	0					
ANR	5386737	ArgumentList	val		5386582	1					
ANR	5386738	Argument	val		5386582	0					
ANR	5386739	Identifier	val		5386582	0					
ANR	5386740	Argument	b1		5386582	1					
ANR	5386741	Identifier	b1		5386582	0					
ANR	5386742	Argument	sizeof ( b1 )		5386582	2					
ANR	5386743	SizeofExpression	sizeof ( b1 )		5386582	0					
ANR	5386744	Sizeof	sizeof		5386582	0					
ANR	5386745	SizeofOperand	b1		5386582	1					
ANR	5386746	Argument	"timestr ( opts . getValue ( ) . asRange . minVal . asTime , b2 , sizeof ( b2 ) )"		5386582	3					
ANR	5386747	CallExpression	"timestr ( opts . getValue ( ) . asRange . minVal . asTime , b2 , sizeof ( b2 ) )"		5386582	0					
ANR	5386748	Callee	timestr		5386582	0					
ANR	5386749	Identifier	timestr		5386582	0					
ANR	5386750	ArgumentList	opts . getValue ( ) . asRange . minVal . asTime		5386582	1					
ANR	5386751	Argument	opts . getValue ( ) . asRange . minVal . asTime		5386582	0					
ANR	5386752	MemberAccess	opts . getValue ( ) . asRange . minVal . asTime		5386582	0					
ANR	5386753	MemberAccess	opts . getValue ( ) . asRange . minVal		5386582	0					
ANR	5386754	MemberAccess	opts . getValue ( ) . asRange		5386582	0					
ANR	5386755	CallExpression	opts . getValue ( )		5386582	0					
ANR	5386756	Callee	opts . getValue		5386582	0					
ANR	5386757	MemberAccess	opts . getValue		5386582	0					
ANR	5386758	Identifier	opts		5386582	0					
ANR	5386759	Identifier	getValue		5386582	1					
ANR	5386760	ArgumentList			5386582	1					
ANR	5386761	Identifier	asRange		5386582	1					
ANR	5386762	Identifier	minVal		5386582	1					
ANR	5386763	Identifier	asTime		5386582	1					
ANR	5386764	Argument	b2		5386582	1					
ANR	5386765	Identifier	b2		5386582	0					
ANR	5386766	Argument	sizeof ( b2 )		5386582	2					
ANR	5386767	SizeofExpression	sizeof ( b2 )		5386582	0					
ANR	5386768	Sizeof	sizeof		5386582	0					
ANR	5386769	SizeofOperand	b2		5386582	1					
ANR	5386770	Argument	"timestr ( opts . getValue ( ) . asRange . maxVal . asTime , b3 , sizeof ( b3 ) )"		5386582	4					
ANR	5386771	CallExpression	"timestr ( opts . getValue ( ) . asRange . maxVal . asTime , b3 , sizeof ( b3 ) )"		5386582	0					
ANR	5386772	Callee	timestr		5386582	0					
ANR	5386773	Identifier	timestr		5386582	0					
ANR	5386774	ArgumentList	opts . getValue ( ) . asRange . maxVal . asTime		5386582	1					
ANR	5386775	Argument	opts . getValue ( ) . asRange . maxVal . asTime		5386582	0					
ANR	5386776	MemberAccess	opts . getValue ( ) . asRange . maxVal . asTime		5386582	0					
ANR	5386777	MemberAccess	opts . getValue ( ) . asRange . maxVal		5386582	0					
ANR	5386778	MemberAccess	opts . getValue ( ) . asRange		5386582	0					
ANR	5386779	CallExpression	opts . getValue ( )		5386582	0					
ANR	5386780	Callee	opts . getValue		5386582	0					
ANR	5386781	MemberAccess	opts . getValue		5386582	0					
ANR	5386782	Identifier	opts		5386582	0					
ANR	5386783	Identifier	getValue		5386582	1					
ANR	5386784	ArgumentList			5386582	1					
ANR	5386785	Identifier	asRange		5386582	1					
ANR	5386786	Identifier	maxVal		5386582	1					
ANR	5386787	Identifier	asTime		5386582	1					
ANR	5386788	Argument	b3		5386582	1					
ANR	5386789	Identifier	b3		5386582	0					
ANR	5386790	Argument	sizeof ( b3 )		5386582	2					
ANR	5386791	SizeofExpression	sizeof ( b3 )		5386582	0					
ANR	5386792	Sizeof	sizeof		5386582	0					
ANR	5386793	SizeofOperand	b3		5386582	1					
ANR	5386794	ElseStatement	else		5386582	0					
ANR	5386795	CompoundStatement		28:6:788:788	5386582	0					
ANR	5386796	ExpressionStatement	ok = ( val == opts . getValue ( ) . asInt . asTime )	655:2:16227:16271	5386582	0	True				
ANR	5386797	AssignmentExpression	ok = ( val == opts . getValue ( ) . asInt . asTime )		5386582	0		=			
ANR	5386798	Identifier	ok		5386582	0					
ANR	5386799	EqualityExpression	val == opts . getValue ( ) . asInt . asTime		5386582	1		==			
ANR	5386800	Identifier	val		5386582	0					
ANR	5386801	MemberAccess	opts . getValue ( ) . asInt . asTime		5386582	1					
ANR	5386802	MemberAccess	opts . getValue ( ) . asInt		5386582	0					
ANR	5386803	CallExpression	opts . getValue ( )		5386582	0					
ANR	5386804	Callee	opts . getValue		5386582	0					
ANR	5386805	MemberAccess	opts . getValue		5386582	0					
ANR	5386806	Identifier	opts		5386582	0					
ANR	5386807	Identifier	getValue		5386582	1					
ANR	5386808	ArgumentList			5386582	1					
ANR	5386809	Identifier	asInt		5386582	1					
ANR	5386810	Identifier	asTime		5386582	1					
ANR	5386811	IfStatement	if ( ! ok && opts . getVerbose ( ) )		5386582	1					
ANR	5386812	Condition	! ok && opts . getVerbose ( )	656:7:16280:16303	5386582	0	True				
ANR	5386813	AndExpression	! ok && opts . getVerbose ( )		5386582	0		&&			
ANR	5386814	UnaryOperationExpression	! ok		5386582	0					
ANR	5386815	UnaryOperator	!		5386582	0					
ANR	5386816	Identifier	ok		5386582	1					
ANR	5386817	CallExpression	opts . getVerbose ( )		5386582	1					
ANR	5386818	Callee	opts . getVerbose		5386582	0					
ANR	5386819	MemberAccess	opts . getVerbose		5386582	0					
ANR	5386820	Identifier	opts		5386582	0					
ANR	5386821	Identifier	getVerbose		5386582	1					
ANR	5386822	ArgumentList			5386582	1					
ANR	5386823	CompoundStatement		30:34:872:872	5386582	1					
ANR	5386824	IfStatement	if ( opts . getNumeric ( ) )		5386582	0					
ANR	5386825	Condition	opts . getNumeric ( )	657:8:16317:16333	5386582	0	True				
ANR	5386826	CallExpression	opts . getNumeric ( )		5386582	0					
ANR	5386827	Callee	opts . getNumeric		5386582	0					
ANR	5386828	MemberAccess	opts . getNumeric		5386582	0					
ANR	5386829	Identifier	opts		5386582	0					
ANR	5386830	Identifier	getNumeric		5386582	1					
ANR	5386831	ArgumentList			5386582	1					
ANR	5386832	CompoundStatement		31:28:902:902	5386582	1					
ANR	5386833	ExpressionStatement	"printf ( ""  %s: %lu != %lu\\n"" , opts . getField ( ) -> m_name , ( unsigned long ) val , ( unsigned long ) opts . getValue ( ) . asInt . asTime )"	658:4:16343:16483	5386582	0	True				
ANR	5386834	CallExpression	"printf ( ""  %s: %lu != %lu\\n"" , opts . getField ( ) -> m_name , ( unsigned long ) val , ( unsigned long ) opts . getValue ( ) . asInt . asTime )"		5386582	0					
ANR	5386835	Callee	printf		5386582	0					
ANR	5386836	Identifier	printf		5386582	0					
ANR	5386837	ArgumentList	"""  %s: %lu != %lu\\n"""		5386582	1					
ANR	5386838	Argument	"""  %s: %lu != %lu\\n"""		5386582	0					
ANR	5386839	PrimaryExpression	"""  %s: %lu != %lu\\n"""		5386582	0					
ANR	5386840	Argument	opts . getField ( ) -> m_name		5386582	1					
ANR	5386841	PtrMemberAccess	opts . getField ( ) -> m_name		5386582	0					
ANR	5386842	CallExpression	opts . getField ( )		5386582	0					
ANR	5386843	Callee	opts . getField		5386582	0					
ANR	5386844	MemberAccess	opts . getField		5386582	0					
ANR	5386845	Identifier	opts		5386582	0					
ANR	5386846	Identifier	getField		5386582	1					
ANR	5386847	ArgumentList			5386582	1					
ANR	5386848	Identifier	m_name		5386582	1					
ANR	5386849	Argument	( unsigned long ) val		5386582	2					
ANR	5386850	CastExpression	( unsigned long ) val		5386582	0					
ANR	5386851	CastTarget	unsigned long		5386582	0					
ANR	5386852	Identifier	val		5386582	1					
ANR	5386853	Argument	( unsigned long ) opts . getValue ( ) . asInt . asTime		5386582	3					
ANR	5386854	CastExpression	( unsigned long ) opts . getValue ( ) . asInt . asTime		5386582	0					
ANR	5386855	CastTarget	unsigned long		5386582	0					
ANR	5386856	MemberAccess	opts . getValue ( ) . asInt . asTime		5386582	1					
ANR	5386857	MemberAccess	opts . getValue ( ) . asInt		5386582	0					
ANR	5386858	CallExpression	opts . getValue ( )		5386582	0					
ANR	5386859	Callee	opts . getValue		5386582	0					
ANR	5386860	MemberAccess	opts . getValue		5386582	0					
ANR	5386861	Identifier	opts		5386582	0					
ANR	5386862	Identifier	getValue		5386582	1					
ANR	5386863	ArgumentList			5386582	1					
ANR	5386864	Identifier	asInt		5386582	1					
ANR	5386865	Identifier	asTime		5386582	1					
ANR	5386866	ElseStatement	else		5386582	0					
ANR	5386867	CompoundStatement		37:8:1063:1063	5386582	0					
ANR	5386868	ExpressionStatement	"printf ( ""  %s: %s != %s\\n"" , opts . getField ( ) -> m_name , timestr ( val , b1 , sizeof ( b1 ) ) , timestr ( opts . getValue ( ) . asRange . minVal . asTime , b2 , sizeof ( b2 ) ) )"	664:4:16504:16682	5386582	0	True				
ANR	5386869	CallExpression	"printf ( ""  %s: %s != %s\\n"" , opts . getField ( ) -> m_name , timestr ( val , b1 , sizeof ( b1 ) ) , timestr ( opts . getValue ( ) . asRange . minVal . asTime , b2 , sizeof ( b2 ) ) )"		5386582	0					
ANR	5386870	Callee	printf		5386582	0					
ANR	5386871	Identifier	printf		5386582	0					
ANR	5386872	ArgumentList	"""  %s: %s != %s\\n"""		5386582	1					
ANR	5386873	Argument	"""  %s: %s != %s\\n"""		5386582	0					
ANR	5386874	PrimaryExpression	"""  %s: %s != %s\\n"""		5386582	0					
ANR	5386875	Argument	opts . getField ( ) -> m_name		5386582	1					
ANR	5386876	PtrMemberAccess	opts . getField ( ) -> m_name		5386582	0					
ANR	5386877	CallExpression	opts . getField ( )		5386582	0					
ANR	5386878	Callee	opts . getField		5386582	0					
ANR	5386879	MemberAccess	opts . getField		5386582	0					
ANR	5386880	Identifier	opts		5386582	0					
ANR	5386881	Identifier	getField		5386582	1					
ANR	5386882	ArgumentList			5386582	1					
ANR	5386883	Identifier	m_name		5386582	1					
ANR	5386884	Argument	"timestr ( val , b1 , sizeof ( b1 ) )"		5386582	2					
ANR	5386885	CallExpression	"timestr ( val , b1 , sizeof ( b1 ) )"		5386582	0					
ANR	5386886	Callee	timestr		5386582	0					
ANR	5386887	Identifier	timestr		5386582	0					
ANR	5386888	ArgumentList	val		5386582	1					
ANR	5386889	Argument	val		5386582	0					
ANR	5386890	Identifier	val		5386582	0					
ANR	5386891	Argument	b1		5386582	1					
ANR	5386892	Identifier	b1		5386582	0					
ANR	5386893	Argument	sizeof ( b1 )		5386582	2					
ANR	5386894	SizeofExpression	sizeof ( b1 )		5386582	0					
ANR	5386895	Sizeof	sizeof		5386582	0					
ANR	5386896	SizeofOperand	b1		5386582	1					
ANR	5386897	Argument	"timestr ( opts . getValue ( ) . asRange . minVal . asTime , b2 , sizeof ( b2 ) )"		5386582	3					
ANR	5386898	CallExpression	"timestr ( opts . getValue ( ) . asRange . minVal . asTime , b2 , sizeof ( b2 ) )"		5386582	0					
ANR	5386899	Callee	timestr		5386582	0					
ANR	5386900	Identifier	timestr		5386582	0					
ANR	5386901	ArgumentList	opts . getValue ( ) . asRange . minVal . asTime		5386582	1					
ANR	5386902	Argument	opts . getValue ( ) . asRange . minVal . asTime		5386582	0					
ANR	5386903	MemberAccess	opts . getValue ( ) . asRange . minVal . asTime		5386582	0					
ANR	5386904	MemberAccess	opts . getValue ( ) . asRange . minVal		5386582	0					
ANR	5386905	MemberAccess	opts . getValue ( ) . asRange		5386582	0					
ANR	5386906	CallExpression	opts . getValue ( )		5386582	0					
ANR	5386907	Callee	opts . getValue		5386582	0					
ANR	5386908	MemberAccess	opts . getValue		5386582	0					
ANR	5386909	Identifier	opts		5386582	0					
ANR	5386910	Identifier	getValue		5386582	1					
ANR	5386911	ArgumentList			5386582	1					
ANR	5386912	Identifier	asRange		5386582	1					
ANR	5386913	Identifier	minVal		5386582	1					
ANR	5386914	Identifier	asTime		5386582	1					
ANR	5386915	Argument	b2		5386582	1					
ANR	5386916	Identifier	b2		5386582	0					
ANR	5386917	Argument	sizeof ( b2 )		5386582	2					
ANR	5386918	SizeofExpression	sizeof ( b2 )		5386582	0					
ANR	5386919	Sizeof	sizeof		5386582	0					
ANR	5386920	SizeofOperand	b2		5386582	1					
ANR	5386921	ReturnStatement	return ok ;	673:1:16698:16707	5386582	3	True				
ANR	5386922	Identifier	ok		5386582	0					
ANR	5386923	ReturnType	bool		5386582	1					
ANR	5386924	Identifier	CompareTime		5386582	2					
ANR	5386925	ParameterList	"const Options & opts , time_t val"		5386582	3					
ANR	5386926	Parameter	const Options & opts	626:13:15400:15418	5386582	0	True				
ANR	5386927	ParameterType	const Options &		5386582	0					
ANR	5386928	Identifier	opts		5386582	1					
ANR	5386929	Parameter	time_t val	626:34:15421:15430	5386582	1	True				
ANR	5386930	ParameterType	time_t		5386582	0					
ANR	5386931	Identifier	val		5386582	1					
ANR	5386932	CFGEntryNode	ENTRY		5386582		True				
ANR	5386933	CFGExitNode	EXIT		5386582		True				
ANR	5386934	Symbol	val		5386582						
ANR	5386935	Symbol	opts . getValue ( ) . asRange . minVal . asTime		5386582						
ANR	5386936	Symbol	opts . getValue ( ) . asInt		5386582						
ANR	5386937	Symbol	timestr		5386582						
ANR	5386938	Symbol	opts . getField ( ) -> m_name		5386582						
ANR	5386939	Symbol	opts . getField		5386582						
ANR	5386940	Symbol	opts . getValue ( ) . asRange . maxVal . asTime		5386582						
ANR	5386941	Symbol	b1		5386582						
ANR	5386942	Symbol	b2		5386582						
ANR	5386943	Symbol	b3		5386582						
ANR	5386944	Symbol	opts . getNumeric		5386582						
ANR	5386945	Symbol	opts		5386582						
ANR	5386946	Symbol	* opts . getField		5386582						
ANR	5386947	Symbol	* opts		5386582						
ANR	5386948	Symbol	opts . getValue		5386582						
ANR	5386949	Symbol	opts . isValueRange		5386582						
ANR	5386950	Symbol	opts . getValue ( ) . asRange		5386582						
ANR	5386951	Symbol	opts . getValue ( ) . asInt . asTime		5386582						
ANR	5386952	Symbol	opts . getValue ( ) . asRange . minVal		5386582						
ANR	5386953	Symbol	ok		5386582						
ANR	5386954	Symbol	opts . getValue ( ) . asRange . maxVal		5386582						
ANR	5386955	Symbol	opts . getVerbose		5386582						
ANR	5386956	Function	CompareInode	676:0:16712:17013							
ANR	5386957	FunctionDef	"CompareInode (const Options & opts , StatStructInode val)"		5386956	0					
ANR	5386958	CompoundStatement		678:0:16774:17013	5386956	0					
ANR	5386959	IdentifierDeclStatement	bool ok ;	679:1:16777:16784	5386956	0	True				
ANR	5386960	IdentifierDecl	ok		5386956	0					
ANR	5386961	IdentifierDeclType	bool		5386956	0					
ANR	5386962	Identifier	ok		5386956	1					
ANR	5386963	ExpressionStatement	ok = val == opts . getValue ( ) . asInode	681:1:16788:16823	5386956	1	True				
ANR	5386964	AssignmentExpression	ok = val == opts . getValue ( ) . asInode		5386956	0		=			
ANR	5386965	Identifier	ok		5386956	0					
ANR	5386966	EqualityExpression	val == opts . getValue ( ) . asInode		5386956	1		==			
ANR	5386967	Identifier	val		5386956	0					
ANR	5386968	MemberAccess	opts . getValue ( ) . asInode		5386956	1					
ANR	5386969	CallExpression	opts . getValue ( )		5386956	0					
ANR	5386970	Callee	opts . getValue		5386956	0					
ANR	5386971	MemberAccess	opts . getValue		5386956	0					
ANR	5386972	Identifier	opts		5386956	0					
ANR	5386973	Identifier	getValue		5386956	1					
ANR	5386974	ArgumentList			5386956	1					
ANR	5386975	Identifier	asInode		5386956	1					
ANR	5386976	IfStatement	if ( ! ok && opts . getVerbose ( ) )		5386956	2					
ANR	5386977	Condition	! ok && opts . getVerbose ( )	682:6:16831:16854	5386956	0	True				
ANR	5386978	AndExpression	! ok && opts . getVerbose ( )		5386956	0		&&			
ANR	5386979	UnaryOperationExpression	! ok		5386956	0					
ANR	5386980	UnaryOperator	!		5386956	0					
ANR	5386981	Identifier	ok		5386956	1					
ANR	5386982	CallExpression	opts . getVerbose ( )		5386956	1					
ANR	5386983	Callee	opts . getVerbose		5386956	0					
ANR	5386984	MemberAccess	opts . getVerbose		5386956	0					
ANR	5386985	Identifier	opts		5386956	0					
ANR	5386986	Identifier	getVerbose		5386956	1					
ANR	5386987	ArgumentList			5386956	1					
ANR	5386988	CompoundStatement		5:33:83:83	5386956	1					
ANR	5386989	ExpressionStatement	"printf ( ""  %s: %lu != %lu\\n"" , opts . getField ( ) -> m_name , ( unsigned long ) val , ( unsigned long ) opts . getValue ( ) . asInode )"	683:3:16863:16995	5386956	0	True				
ANR	5386990	CallExpression	"printf ( ""  %s: %lu != %lu\\n"" , opts . getField ( ) -> m_name , ( unsigned long ) val , ( unsigned long ) opts . getValue ( ) . asInode )"		5386956	0					
ANR	5386991	Callee	printf		5386956	0					
ANR	5386992	Identifier	printf		5386956	0					
ANR	5386993	ArgumentList	"""  %s: %lu != %lu\\n"""		5386956	1					
ANR	5386994	Argument	"""  %s: %lu != %lu\\n"""		5386956	0					
ANR	5386995	PrimaryExpression	"""  %s: %lu != %lu\\n"""		5386956	0					
ANR	5386996	Argument	opts . getField ( ) -> m_name		5386956	1					
ANR	5386997	PtrMemberAccess	opts . getField ( ) -> m_name		5386956	0					
ANR	5386998	CallExpression	opts . getField ( )		5386956	0					
ANR	5386999	Callee	opts . getField		5386956	0					
ANR	5387000	MemberAccess	opts . getField		5386956	0					
ANR	5387001	Identifier	opts		5386956	0					
ANR	5387002	Identifier	getField		5386956	1					
ANR	5387003	ArgumentList			5386956	1					
ANR	5387004	Identifier	m_name		5386956	1					
ANR	5387005	Argument	( unsigned long ) val		5386956	2					
ANR	5387006	CastExpression	( unsigned long ) val		5386956	0					
ANR	5387007	CastTarget	unsigned long		5386956	0					
ANR	5387008	Identifier	val		5386956	1					
ANR	5387009	Argument	( unsigned long ) opts . getValue ( ) . asInode		5386956	3					
ANR	5387010	CastExpression	( unsigned long ) opts . getValue ( ) . asInode		5386956	0					
ANR	5387011	CastTarget	unsigned long		5386956	0					
ANR	5387012	MemberAccess	opts . getValue ( ) . asInode		5386956	1					
ANR	5387013	CallExpression	opts . getValue ( )		5386956	0					
ANR	5387014	Callee	opts . getValue		5386956	0					
ANR	5387015	MemberAccess	opts . getValue		5386956	0					
ANR	5387016	Identifier	opts		5386956	0					
ANR	5387017	Identifier	getValue		5386956	1					
ANR	5387018	ArgumentList			5386956	1					
ANR	5387019	Identifier	asInode		5386956	1					
ANR	5387020	ReturnStatement	return ok ;	689:1:17002:17011	5386956	3	True				
ANR	5387021	Identifier	ok		5386956	0					
ANR	5387022	ReturnType	bool		5386956	1					
ANR	5387023	Identifier	CompareInode		5386956	2					
ANR	5387024	ParameterList	"const Options & opts , StatStructInode val"		5386956	3					
ANR	5387025	Parameter	const Options & opts	677:14:16731:16749	5386956	0	True				
ANR	5387026	ParameterType	const Options &		5386956	0					
ANR	5387027	Identifier	opts		5386956	1					
ANR	5387028	Parameter	StatStructInode val	677:35:16752:16770	5386956	1	True				
ANR	5387029	ParameterType	StatStructInode		5386956	0					
ANR	5387030	Identifier	val		5386956	1					
ANR	5387031	CFGEntryNode	ENTRY		5386956		True				
ANR	5387032	CFGExitNode	EXIT		5386956		True				
ANR	5387033	Symbol	val		5386956						
ANR	5387034	Symbol	opts . getValue ( ) . asInode		5386956						
ANR	5387035	Symbol	opts		5386956						
ANR	5387036	Symbol	* opts		5386956						
ANR	5387037	Symbol	* opts . getField		5386956						
ANR	5387038	Symbol	opts . getValue		5386956						
ANR	5387039	Symbol	ok		5386956						
ANR	5387040	Symbol	opts . getField		5386956						
ANR	5387041	Symbol	opts . getField ( ) -> m_name		5386956						
ANR	5387042	Symbol	opts . getVerbose		5386956						
ANR	5387043	Function	VerifyState	692:0:17016:18767							
ANR	5387044	FunctionDef	"VerifyState (const Options & opts , const ReadUserLog :: FileState & state)"		5387043	0					
ANR	5387045	CompoundStatement		694:0:17091:18767	5387043	0					
ANR	5387046	IdentifierDeclStatement	"ReadUserLogState rstate ( state , 60 ) ;"	695:1:17094:17130	5387043	0	True				
ANR	5387047	IdentifierDecl	"rstate ( state , 60 )"		5387043	0					
ANR	5387048	IdentifierDeclType	ReadUserLogState		5387043	0					
ANR	5387049	Identifier	rstate		5387043	1					
ANR	5387050	Expression	"state , 60"		5387043	2					
ANR	5387051	Identifier	state		5387043	0					
ANR	5387052	PrimaryExpression	60		5387043	1					
ANR	5387053	IdentifierDeclStatement	const ReadUserLogState :: FileState * istate ;	696:1:17133:17174	5387043	1	True				
ANR	5387054	IdentifierDecl	* istate		5387043	0					
ANR	5387055	IdentifierDeclType	const ReadUserLogState :: FileState *		5387043	0					
ANR	5387056	Identifier	istate		5387043	1					
ANR	5387057	ExpressionStatement	"ReadUserLogState :: convertState ( state , istate )"	697:1:17177:17224	5387043	2	True				
ANR	5387058	CallExpression	"ReadUserLogState :: convertState ( state , istate )"		5387043	0					
ANR	5387059	Callee	ReadUserLogState :: convertState		5387043	0					
ANR	5387060	Identifier	ReadUserLogState :: convertState		5387043	0					
ANR	5387061	ArgumentList	state		5387043	1					
ANR	5387062	Argument	state		5387043	0					
ANR	5387063	Identifier	state		5387043	0					
ANR	5387064	Argument	istate		5387043	1					
ANR	5387065	Identifier	istate		5387043	0					
ANR	5387066	IdentifierDeclStatement	const FieldData * wdata = opts . getField ( ) ;	699:1:17228:17269	5387043	3	True				
ANR	5387067	IdentifierDecl	* wdata = opts . getField ( )		5387043	0					
ANR	5387068	IdentifierDeclType	const FieldData *		5387043	0					
ANR	5387069	Identifier	wdata		5387043	1					
ANR	5387070	AssignmentExpression	* wdata = opts . getField ( )		5387043	2		=			
ANR	5387071	Identifier	wdata		5387043	0					
ANR	5387072	CallExpression	opts . getField ( )		5387043	1					
ANR	5387073	Callee	opts . getField		5387043	0					
ANR	5387074	MemberAccess	opts . getField		5387043	0					
ANR	5387075	Identifier	opts		5387043	0					
ANR	5387076	Identifier	getField		5387043	1					
ANR	5387077	ArgumentList			5387043	1					
ANR	5387078	IfStatement	if ( wdata == NULL )		5387043	4					
ANR	5387079	Condition	wdata == NULL	700:6:17277:17289	5387043	0	True				
ANR	5387080	EqualityExpression	wdata == NULL		5387043	0		==			
ANR	5387081	Identifier	wdata		5387043	0					
ANR	5387082	Identifier	NULL		5387043	1					
ANR	5387083	CompoundStatement		7:22:201:201	5387043	1					
ANR	5387084	ExpressionStatement	"fprintf ( stderr , ""Verify: no field!\\n"" )"	701:2:17297:17337	5387043	0	True				
ANR	5387085	CallExpression	"fprintf ( stderr , ""Verify: no field!\\n"" )"		5387043	0					
ANR	5387086	Callee	fprintf		5387043	0					
ANR	5387087	Identifier	fprintf		5387043	0					
ANR	5387088	ArgumentList	stderr		5387043	1					
ANR	5387089	Argument	stderr		5387043	0					
ANR	5387090	Identifier	stderr		5387043	0					
ANR	5387091	Argument	"""Verify: no field!\\n"""		5387043	1					
ANR	5387092	PrimaryExpression	"""Verify: no field!\\n"""		5387043	0					
ANR	5387093	ReturnStatement	return - 1 ;	702:2:17341:17350	5387043	1	True				
ANR	5387094	UnaryOperationExpression	- 1		5387043	0					
ANR	5387095	UnaryOperator	-		5387043	0					
ANR	5387096	PrimaryExpression	1		5387043	1					
ANR	5387097	IdentifierDeclStatement	bool ok ;	705:1:17357:17364	5387043	5	True				
ANR	5387098	IdentifierDecl	ok		5387043	0					
ANR	5387099	IdentifierDeclType	bool		5387043	0					
ANR	5387100	Identifier	ok		5387043	1					
ANR	5387101	SwitchStatement	switch ( wdata -> m_field )		5387043	6					
ANR	5387102	Condition	wdata -> m_field	706:9:17375:17388	5387043	0	True				
ANR	5387103	PtrMemberAccess	wdata -> m_field		5387043	0					
ANR	5387104	Identifier	wdata		5387043	0					
ANR	5387105	Identifier	m_field		5387043	1					
ANR	5387106	CompoundStatement		14:1:301:301	5387043	1					
ANR	5387107	Label	case FIELD_SIGNATURE :	708:1:17396:17416	5387043	0	True				
ANR	5387108	Identifier	FIELD_SIGNATURE		5387043	0					
ANR	5387109	ExpressionStatement	"ok = CompareStr ( opts , istate -> m_signature )"	709:2:17420:17464	5387043	1	True				
ANR	5387110	AssignmentExpression	"ok = CompareStr ( opts , istate -> m_signature )"		5387043	0		=			
ANR	5387111	Identifier	ok		5387043	0					
ANR	5387112	CallExpression	"CompareStr ( opts , istate -> m_signature )"		5387043	1					
ANR	5387113	Callee	CompareStr		5387043	0					
ANR	5387114	Identifier	CompareStr		5387043	0					
ANR	5387115	ArgumentList	opts		5387043	1					
ANR	5387116	Argument	opts		5387043	0					
ANR	5387117	Identifier	opts		5387043	0					
ANR	5387118	Argument	istate -> m_signature		5387043	1					
ANR	5387119	PtrMemberAccess	istate -> m_signature		5387043	0					
ANR	5387120	Identifier	istate		5387043	0					
ANR	5387121	Identifier	m_signature		5387043	1					
ANR	5387122	BreakStatement	break ;	710:2:17468:17473	5387043	2	True				
ANR	5387123	Label	case FIELD_VERSION :	712:1:17477:17495	5387043	3	True				
ANR	5387124	Identifier	FIELD_VERSION		5387043	0					
ANR	5387125	ExpressionStatement	"ok = CompareInt ( opts , istate -> m_version )"	713:2:17499:17541	5387043	4	True				
ANR	5387126	AssignmentExpression	"ok = CompareInt ( opts , istate -> m_version )"		5387043	0		=			
ANR	5387127	Identifier	ok		5387043	0					
ANR	5387128	CallExpression	"CompareInt ( opts , istate -> m_version )"		5387043	1					
ANR	5387129	Callee	CompareInt		5387043	0					
ANR	5387130	Identifier	CompareInt		5387043	0					
ANR	5387131	ArgumentList	opts		5387043	1					
ANR	5387132	Argument	opts		5387043	0					
ANR	5387133	Identifier	opts		5387043	0					
ANR	5387134	Argument	istate -> m_version		5387043	1					
ANR	5387135	PtrMemberAccess	istate -> m_version		5387043	0					
ANR	5387136	Identifier	istate		5387043	0					
ANR	5387137	Identifier	m_version		5387043	1					
ANR	5387138	BreakStatement	break ;	714:2:17545:17550	5387043	5	True				
ANR	5387139	Label	case FIELD_UPDATE_TIME :	716:1:17554:17576	5387043	6	True				
ANR	5387140	Identifier	FIELD_UPDATE_TIME		5387043	0					
ANR	5387141	ExpressionStatement	"ok = CompareTime ( opts , istate -> m_update_time )"	717:2:17580:17627	5387043	7	True				
ANR	5387142	AssignmentExpression	"ok = CompareTime ( opts , istate -> m_update_time )"		5387043	0		=			
ANR	5387143	Identifier	ok		5387043	0					
ANR	5387144	CallExpression	"CompareTime ( opts , istate -> m_update_time )"		5387043	1					
ANR	5387145	Callee	CompareTime		5387043	0					
ANR	5387146	Identifier	CompareTime		5387043	0					
ANR	5387147	ArgumentList	opts		5387043	1					
ANR	5387148	Argument	opts		5387043	0					
ANR	5387149	Identifier	opts		5387043	0					
ANR	5387150	Argument	istate -> m_update_time		5387043	1					
ANR	5387151	PtrMemberAccess	istate -> m_update_time		5387043	0					
ANR	5387152	Identifier	istate		5387043	0					
ANR	5387153	Identifier	m_update_time		5387043	1					
ANR	5387154	BreakStatement	break ;	718:2:17631:17636	5387043	8	True				
ANR	5387155	Label	case FIELD_BASE_PATH :	720:1:17640:17660	5387043	9	True				
ANR	5387156	Identifier	FIELD_BASE_PATH		5387043	0					
ANR	5387157	ExpressionStatement	"ok = CompareStr ( opts , istate -> m_base_path )"	721:2:17664:17708	5387043	10	True				
ANR	5387158	AssignmentExpression	"ok = CompareStr ( opts , istate -> m_base_path )"		5387043	0		=			
ANR	5387159	Identifier	ok		5387043	0					
ANR	5387160	CallExpression	"CompareStr ( opts , istate -> m_base_path )"		5387043	1					
ANR	5387161	Callee	CompareStr		5387043	0					
ANR	5387162	Identifier	CompareStr		5387043	0					
ANR	5387163	ArgumentList	opts		5387043	1					
ANR	5387164	Argument	opts		5387043	0					
ANR	5387165	Identifier	opts		5387043	0					
ANR	5387166	Argument	istate -> m_base_path		5387043	1					
ANR	5387167	PtrMemberAccess	istate -> m_base_path		5387043	0					
ANR	5387168	Identifier	istate		5387043	0					
ANR	5387169	Identifier	m_base_path		5387043	1					
ANR	5387170	BreakStatement	break ;	722:2:17712:17717	5387043	11	True				
ANR	5387171	Label	case FIELD_CUR_PATH :	724:1:17721:17740	5387043	12	True				
ANR	5387172	Identifier	FIELD_CUR_PATH		5387043	0					
ANR	5387173	ExpressionStatement	"ok = CompareStr ( opts , rstate . CurPath ( state ) )"	725:2:17744:17790	5387043	13	True				
ANR	5387174	AssignmentExpression	"ok = CompareStr ( opts , rstate . CurPath ( state ) )"		5387043	0		=			
ANR	5387175	Identifier	ok		5387043	0					
ANR	5387176	CallExpression	"CompareStr ( opts , rstate . CurPath ( state ) )"		5387043	1					
ANR	5387177	Callee	CompareStr		5387043	0					
ANR	5387178	Identifier	CompareStr		5387043	0					
ANR	5387179	ArgumentList	opts		5387043	1					
ANR	5387180	Argument	opts		5387043	0					
ANR	5387181	Identifier	opts		5387043	0					
ANR	5387182	Argument	rstate . CurPath ( state )		5387043	1					
ANR	5387183	CallExpression	rstate . CurPath ( state )		5387043	0					
ANR	5387184	Callee	rstate . CurPath		5387043	0					
ANR	5387185	MemberAccess	rstate . CurPath		5387043	0					
ANR	5387186	Identifier	rstate		5387043	0					
ANR	5387187	Identifier	CurPath		5387043	1					
ANR	5387188	ArgumentList	state		5387043	1					
ANR	5387189	Argument	state		5387043	0					
ANR	5387190	Identifier	state		5387043	0					
ANR	5387191	BreakStatement	break ;	726:2:17794:17799	5387043	14	True				
ANR	5387192	Label	case FIELD_UNIQ_ID :	728:1:17803:17821	5387043	15	True				
ANR	5387193	Identifier	FIELD_UNIQ_ID		5387043	0					
ANR	5387194	ExpressionStatement	"ok = CompareStr ( opts , istate -> m_uniq_id )"	729:2:17825:17867	5387043	16	True				
ANR	5387195	AssignmentExpression	"ok = CompareStr ( opts , istate -> m_uniq_id )"		5387043	0		=			
ANR	5387196	Identifier	ok		5387043	0					
ANR	5387197	CallExpression	"CompareStr ( opts , istate -> m_uniq_id )"		5387043	1					
ANR	5387198	Callee	CompareStr		5387043	0					
ANR	5387199	Identifier	CompareStr		5387043	0					
ANR	5387200	ArgumentList	opts		5387043	1					
ANR	5387201	Argument	opts		5387043	0					
ANR	5387202	Identifier	opts		5387043	0					
ANR	5387203	Argument	istate -> m_uniq_id		5387043	1					
ANR	5387204	PtrMemberAccess	istate -> m_uniq_id		5387043	0					
ANR	5387205	Identifier	istate		5387043	0					
ANR	5387206	Identifier	m_uniq_id		5387043	1					
ANR	5387207	BreakStatement	break ;	730:2:17871:17876	5387043	17	True				
ANR	5387208	Label	case FIELD_SEQUENCE :	732:1:17880:17899	5387043	18	True				
ANR	5387209	Identifier	FIELD_SEQUENCE		5387043	0					
ANR	5387210	ExpressionStatement	"ok = CompareInt ( opts , istate -> m_sequence )"	733:2:17903:17946	5387043	19	True				
ANR	5387211	AssignmentExpression	"ok = CompareInt ( opts , istate -> m_sequence )"		5387043	0		=			
ANR	5387212	Identifier	ok		5387043	0					
ANR	5387213	CallExpression	"CompareInt ( opts , istate -> m_sequence )"		5387043	1					
ANR	5387214	Callee	CompareInt		5387043	0					
ANR	5387215	Identifier	CompareInt		5387043	0					
ANR	5387216	ArgumentList	opts		5387043	1					
ANR	5387217	Argument	opts		5387043	0					
ANR	5387218	Identifier	opts		5387043	0					
ANR	5387219	Argument	istate -> m_sequence		5387043	1					
ANR	5387220	PtrMemberAccess	istate -> m_sequence		5387043	0					
ANR	5387221	Identifier	istate		5387043	0					
ANR	5387222	Identifier	m_sequence		5387043	1					
ANR	5387223	BreakStatement	break ;	734:2:17950:17955	5387043	20	True				
ANR	5387224	Label	case FIELD_MAX_ROTATION :	736:1:17959:17982	5387043	21	True				
ANR	5387225	Identifier	FIELD_MAX_ROTATION		5387043	0					
ANR	5387226	ExpressionStatement	"ok = CompareInt ( opts , istate -> m_max_rotations )"	737:2:17986:18034	5387043	22	True				
ANR	5387227	AssignmentExpression	"ok = CompareInt ( opts , istate -> m_max_rotations )"		5387043	0		=			
ANR	5387228	Identifier	ok		5387043	0					
ANR	5387229	CallExpression	"CompareInt ( opts , istate -> m_max_rotations )"		5387043	1					
ANR	5387230	Callee	CompareInt		5387043	0					
ANR	5387231	Identifier	CompareInt		5387043	0					
ANR	5387232	ArgumentList	opts		5387043	1					
ANR	5387233	Argument	opts		5387043	0					
ANR	5387234	Identifier	opts		5387043	0					
ANR	5387235	Argument	istate -> m_max_rotations		5387043	1					
ANR	5387236	PtrMemberAccess	istate -> m_max_rotations		5387043	0					
ANR	5387237	Identifier	istate		5387043	0					
ANR	5387238	Identifier	m_max_rotations		5387043	1					
ANR	5387239	BreakStatement	break ;	738:2:18038:18043	5387043	23	True				
ANR	5387240	Label	case FIELD_ROTATION :	740:1:18047:18066	5387043	24	True				
ANR	5387241	Identifier	FIELD_ROTATION		5387043	0					
ANR	5387242	ExpressionStatement	"ok = CompareInt ( opts , istate -> m_rotation )"	741:2:18070:18113	5387043	25	True				
ANR	5387243	AssignmentExpression	"ok = CompareInt ( opts , istate -> m_rotation )"		5387043	0		=			
ANR	5387244	Identifier	ok		5387043	0					
ANR	5387245	CallExpression	"CompareInt ( opts , istate -> m_rotation )"		5387043	1					
ANR	5387246	Callee	CompareInt		5387043	0					
ANR	5387247	Identifier	CompareInt		5387043	0					
ANR	5387248	ArgumentList	opts		5387043	1					
ANR	5387249	Argument	opts		5387043	0					
ANR	5387250	Identifier	opts		5387043	0					
ANR	5387251	Argument	istate -> m_rotation		5387043	1					
ANR	5387252	PtrMemberAccess	istate -> m_rotation		5387043	0					
ANR	5387253	Identifier	istate		5387043	0					
ANR	5387254	Identifier	m_rotation		5387043	1					
ANR	5387255	BreakStatement	break ;	742:2:18117:18122	5387043	26	True				
ANR	5387256	Label	case FIELD_OFFSET :	744:1:18126:18143	5387043	27	True				
ANR	5387257	Identifier	FIELD_OFFSET		5387043	0					
ANR	5387258	ExpressionStatement	"ok = CompareFsize ( opts , istate -> m_offset . asint )"	745:2:18147:18196	5387043	28	True				
ANR	5387259	AssignmentExpression	"ok = CompareFsize ( opts , istate -> m_offset . asint )"		5387043	0		=			
ANR	5387260	Identifier	ok		5387043	0					
ANR	5387261	CallExpression	"CompareFsize ( opts , istate -> m_offset . asint )"		5387043	1					
ANR	5387262	Callee	CompareFsize		5387043	0					
ANR	5387263	Identifier	CompareFsize		5387043	0					
ANR	5387264	ArgumentList	opts		5387043	1					
ANR	5387265	Argument	opts		5387043	0					
ANR	5387266	Identifier	opts		5387043	0					
ANR	5387267	Argument	istate -> m_offset . asint		5387043	1					
ANR	5387268	MemberAccess	istate -> m_offset . asint		5387043	0					
ANR	5387269	PtrMemberAccess	istate -> m_offset		5387043	0					
ANR	5387270	Identifier	istate		5387043	0					
ANR	5387271	Identifier	m_offset		5387043	1					
ANR	5387272	Identifier	asint		5387043	1					
ANR	5387273	BreakStatement	break ;	746:2:18200:18205	5387043	29	True				
ANR	5387274	Label	case FIELD_EVENT_NUM :	748:1:18209:18229	5387043	30	True				
ANR	5387275	Identifier	FIELD_EVENT_NUM		5387043	0					
ANR	5387276	ExpressionStatement	"ok = CompareFsize ( opts , istate -> m_event_num . asint )"	749:2:18233:18285	5387043	31	True				
ANR	5387277	AssignmentExpression	"ok = CompareFsize ( opts , istate -> m_event_num . asint )"		5387043	0		=			
ANR	5387278	Identifier	ok		5387043	0					
ANR	5387279	CallExpression	"CompareFsize ( opts , istate -> m_event_num . asint )"		5387043	1					
ANR	5387280	Callee	CompareFsize		5387043	0					
ANR	5387281	Identifier	CompareFsize		5387043	0					
ANR	5387282	ArgumentList	opts		5387043	1					
ANR	5387283	Argument	opts		5387043	0					
ANR	5387284	Identifier	opts		5387043	0					
ANR	5387285	Argument	istate -> m_event_num . asint		5387043	1					
ANR	5387286	MemberAccess	istate -> m_event_num . asint		5387043	0					
ANR	5387287	PtrMemberAccess	istate -> m_event_num		5387043	0					
ANR	5387288	Identifier	istate		5387043	0					
ANR	5387289	Identifier	m_event_num		5387043	1					
ANR	5387290	Identifier	asint		5387043	1					
ANR	5387291	BreakStatement	break ;	750:2:18289:18294	5387043	32	True				
ANR	5387292	Label	case FIELD_GLOBAL_POSITION :	752:1:18298:18324	5387043	33	True				
ANR	5387293	Identifier	FIELD_GLOBAL_POSITION		5387043	0					
ANR	5387294	ExpressionStatement	"ok = CompareFsize ( opts , istate -> m_log_position . asint )"	753:2:18328:18383	5387043	34	True				
ANR	5387295	AssignmentExpression	"ok = CompareFsize ( opts , istate -> m_log_position . asint )"		5387043	0		=			
ANR	5387296	Identifier	ok		5387043	0					
ANR	5387297	CallExpression	"CompareFsize ( opts , istate -> m_log_position . asint )"		5387043	1					
ANR	5387298	Callee	CompareFsize		5387043	0					
ANR	5387299	Identifier	CompareFsize		5387043	0					
ANR	5387300	ArgumentList	opts		5387043	1					
ANR	5387301	Argument	opts		5387043	0					
ANR	5387302	Identifier	opts		5387043	0					
ANR	5387303	Argument	istate -> m_log_position . asint		5387043	1					
ANR	5387304	MemberAccess	istate -> m_log_position . asint		5387043	0					
ANR	5387305	PtrMemberAccess	istate -> m_log_position		5387043	0					
ANR	5387306	Identifier	istate		5387043	0					
ANR	5387307	Identifier	m_log_position		5387043	1					
ANR	5387308	Identifier	asint		5387043	1					
ANR	5387309	BreakStatement	break ;	754:2:18387:18392	5387043	35	True				
ANR	5387310	Label	case FIELD_GLOBAL_RECORD_NUM :	756:1:18396:18424	5387043	36	True				
ANR	5387311	Identifier	FIELD_GLOBAL_RECORD_NUM		5387043	0					
ANR	5387312	ExpressionStatement	"ok = CompareFsize ( opts , istate -> m_log_record . asint )"	757:2:18428:18481	5387043	37	True				
ANR	5387313	AssignmentExpression	"ok = CompareFsize ( opts , istate -> m_log_record . asint )"		5387043	0		=			
ANR	5387314	Identifier	ok		5387043	0					
ANR	5387315	CallExpression	"CompareFsize ( opts , istate -> m_log_record . asint )"		5387043	1					
ANR	5387316	Callee	CompareFsize		5387043	0					
ANR	5387317	Identifier	CompareFsize		5387043	0					
ANR	5387318	ArgumentList	opts		5387043	1					
ANR	5387319	Argument	opts		5387043	0					
ANR	5387320	Identifier	opts		5387043	0					
ANR	5387321	Argument	istate -> m_log_record . asint		5387043	1					
ANR	5387322	MemberAccess	istate -> m_log_record . asint		5387043	0					
ANR	5387323	PtrMemberAccess	istate -> m_log_record		5387043	0					
ANR	5387324	Identifier	istate		5387043	0					
ANR	5387325	Identifier	m_log_record		5387043	1					
ANR	5387326	Identifier	asint		5387043	1					
ANR	5387327	BreakStatement	break ;	758:2:18485:18490	5387043	38	True				
ANR	5387328	Label	case FIELD_INODE :	760:1:18494:18510	5387043	39	True				
ANR	5387329	Identifier	FIELD_INODE		5387043	0					
ANR	5387330	ExpressionStatement	"ok = CompareInode ( opts , istate -> m_inode )"	761:2:18514:18556	5387043	40	True				
ANR	5387331	AssignmentExpression	"ok = CompareInode ( opts , istate -> m_inode )"		5387043	0		=			
ANR	5387332	Identifier	ok		5387043	0					
ANR	5387333	CallExpression	"CompareInode ( opts , istate -> m_inode )"		5387043	1					
ANR	5387334	Callee	CompareInode		5387043	0					
ANR	5387335	Identifier	CompareInode		5387043	0					
ANR	5387336	ArgumentList	opts		5387043	1					
ANR	5387337	Argument	opts		5387043	0					
ANR	5387338	Identifier	opts		5387043	0					
ANR	5387339	Argument	istate -> m_inode		5387043	1					
ANR	5387340	PtrMemberAccess	istate -> m_inode		5387043	0					
ANR	5387341	Identifier	istate		5387043	0					
ANR	5387342	Identifier	m_inode		5387043	1					
ANR	5387343	BreakStatement	break ;	762:2:18560:18565	5387043	41	True				
ANR	5387344	Label	case FIELD_CTIME :	764:1:18569:18585	5387043	42	True				
ANR	5387345	Identifier	FIELD_CTIME		5387043	0					
ANR	5387346	ExpressionStatement	"ok = CompareTime ( opts , istate -> m_ctime )"	765:2:18589:18630	5387043	43	True				
ANR	5387347	AssignmentExpression	"ok = CompareTime ( opts , istate -> m_ctime )"		5387043	0		=			
ANR	5387348	Identifier	ok		5387043	0					
ANR	5387349	CallExpression	"CompareTime ( opts , istate -> m_ctime )"		5387043	1					
ANR	5387350	Callee	CompareTime		5387043	0					
ANR	5387351	Identifier	CompareTime		5387043	0					
ANR	5387352	ArgumentList	opts		5387043	1					
ANR	5387353	Argument	opts		5387043	0					
ANR	5387354	Identifier	opts		5387043	0					
ANR	5387355	Argument	istate -> m_ctime		5387043	1					
ANR	5387356	PtrMemberAccess	istate -> m_ctime		5387043	0					
ANR	5387357	Identifier	istate		5387043	0					
ANR	5387358	Identifier	m_ctime		5387043	1					
ANR	5387359	BreakStatement	break ;	766:2:18634:18639	5387043	44	True				
ANR	5387360	Label	case FIELD_SIZE :	768:1:18643:18658	5387043	45	True				
ANR	5387361	Identifier	FIELD_SIZE		5387043	0					
ANR	5387362	ExpressionStatement	"ok = CompareFsize ( opts , istate -> m_size . asint )"	769:2:18662:18709	5387043	46	True				
ANR	5387363	AssignmentExpression	"ok = CompareFsize ( opts , istate -> m_size . asint )"		5387043	0		=			
ANR	5387364	Identifier	ok		5387043	0					
ANR	5387365	CallExpression	"CompareFsize ( opts , istate -> m_size . asint )"		5387043	1					
ANR	5387366	Callee	CompareFsize		5387043	0					
ANR	5387367	Identifier	CompareFsize		5387043	0					
ANR	5387368	ArgumentList	opts		5387043	1					
ANR	5387369	Argument	opts		5387043	0					
ANR	5387370	Identifier	opts		5387043	0					
ANR	5387371	Argument	istate -> m_size . asint		5387043	1					
ANR	5387372	MemberAccess	istate -> m_size . asint		5387043	0					
ANR	5387373	PtrMemberAccess	istate -> m_size		5387043	0					
ANR	5387374	Identifier	istate		5387043	0					
ANR	5387375	Identifier	m_size		5387043	1					
ANR	5387376	Identifier	asint		5387043	1					
ANR	5387377	BreakStatement	break ;	770:2:18713:18718	5387043	47	True				
ANR	5387378	Label	default :	772:1:18722:18729	5387043	48	True				
ANR	5387379	Identifier	default		5387043	0					
ANR	5387380	ReturnStatement	return - 1 ;	773:2:18733:18742	5387043	49	True				
ANR	5387381	UnaryOperationExpression	- 1		5387043	0					
ANR	5387382	UnaryOperator	-		5387043	0					
ANR	5387383	PrimaryExpression	1		5387043	1					
ANR	5387384	ReturnStatement	return ok ? 0 : 1 ;	775:1:18748:18765	5387043	7	True				
ANR	5387385	ConditionalExpression	ok ? 0 : 1		5387043	0					
ANR	5387386	Condition	ok		5387043	0					
ANR	5387387	Identifier	ok		5387043	0					
ANR	5387388	PrimaryExpression	0		5387043	1					
ANR	5387389	PrimaryExpression	1		5387043	2					
ANR	5387390	ReturnType	int		5387043	1					
ANR	5387391	Identifier	VerifyState		5387043	2					
ANR	5387392	ParameterList	"const Options & opts , const ReadUserLog :: FileState & state"		5387043	3					
ANR	5387393	Parameter	const Options & opts	693:12:17032:17050	5387043	0	True				
ANR	5387394	ParameterType	const Options &		5387043	0					
ANR	5387395	Identifier	opts		5387043	1					
ANR	5387396	Parameter	const ReadUserLog :: FileState & state	693:33:17053:17087	5387043	1	True				
ANR	5387397	ParameterType	const ReadUserLog :: FileState &		5387043	0					
ANR	5387398	Identifier	state		5387043	1					
ANR	5387399	CFGEntryNode	ENTRY		5387043		True				
ANR	5387400	CFGExitNode	EXIT		5387043		True				
ANR	5387401	Symbol	istate -> m_log_position		5387043						
ANR	5387402	Symbol	istate -> m_size . asint		5387043						
ANR	5387403	Symbol	istate -> m_max_rotations		5387043						
ANR	5387404	Symbol	istate -> m_offset		5387043						
ANR	5387405	Symbol	istate -> m_log_record		5387043						
ANR	5387406	Symbol	istate -> m_version		5387043						
ANR	5387407	Symbol	istate -> m_update_time		5387043						
ANR	5387408	Symbol	rstate		5387043						
ANR	5387409	Symbol	* istate		5387043						
ANR	5387410	Symbol	istate -> m_base_path		5387043						
ANR	5387411	Symbol	istate -> m_sequence		5387043						
ANR	5387412	Symbol	CompareInt		5387043						
ANR	5387413	Symbol	opts		5387043						
ANR	5387414	Symbol	istate -> m_event_num . asint		5387043						
ANR	5387415	Symbol	CompareStr		5387043						
ANR	5387416	Symbol	istate -> m_log_position . asint		5387043						
ANR	5387417	Symbol	istate -> m_log_record . asint		5387043						
ANR	5387418	Symbol	wdata		5387043						
ANR	5387419	Symbol	state		5387043						
ANR	5387420	Symbol	ok		5387043						
ANR	5387421	Symbol	istate -> m_offset . asint		5387043						
ANR	5387422	Symbol	CompareInode		5387043						
ANR	5387423	Symbol	NULL		5387043						
ANR	5387424	Symbol	istate -> m_ctime		5387043						
ANR	5387425	Symbol	istate -> m_signature		5387043						
ANR	5387426	Symbol	CompareTime		5387043						
ANR	5387427	Symbol	rstate . CurPath		5387043						
ANR	5387428	Symbol	istate -> m_rotation		5387043						
ANR	5387429	Symbol	opts . getField		5387043						
ANR	5387430	Symbol	stderr		5387043						
ANR	5387431	Symbol	istate -> m_uniq_id		5387043						
ANR	5387432	Symbol	istate -> m_size		5387043						
ANR	5387433	Symbol	istate -> m_inode		5387043						
ANR	5387434	Symbol	* wdata		5387043						
ANR	5387435	Symbol	istate -> m_event_num		5387043						
ANR	5387436	Symbol	wdata -> m_field		5387043						
ANR	5387437	Symbol	CompareFsize		5387043						
ANR	5387438	Symbol	istate		5387043						
ANR	5387439	Function	timestr	778:0:18770:18981							
ANR	5387440	FunctionDef	"timestr (time_t t , char * buf , int bufsize)"		5387439	0					
ANR	5387441	CompoundStatement		780:0:18827:18981	5387439	0					
ANR	5387442	Statement	static	781:1:18830:18835	5387439	0	True				
ANR	5387443	IdentifierDeclStatement	char sbuf [ 64 ] ;	781:8:18837:18850	5387439	1	True				
ANR	5387444	IdentifierDecl	sbuf [ 64 ]		5387439	0					
ANR	5387445	IdentifierDeclType	char [ 64 ]		5387439	0					
ANR	5387446	Identifier	sbuf		5387439	1					
ANR	5387447	PrimaryExpression	64		5387439	2					
ANR	5387448	IfStatement	if ( NULL == buf )		5387439	2					
ANR	5387449	Condition	NULL == buf	782:6:18858:18868	5387439	0	True				
ANR	5387450	EqualityExpression	NULL == buf		5387439	0		==			
ANR	5387451	Identifier	NULL		5387439	0					
ANR	5387452	Identifier	buf		5387439	1					
ANR	5387453	CompoundStatement		3:20:44:44	5387439	1					
ANR	5387454	ExpressionStatement	buf = sbuf	783:2:18876:18886	5387439	0	True				
ANR	5387455	AssignmentExpression	buf = sbuf		5387439	0		=			
ANR	5387456	Identifier	buf		5387439	0					
ANR	5387457	Identifier	sbuf		5387439	1					
ANR	5387458	ExpressionStatement	bufsize = sizeof ( sbuf )	784:2:18890:18912	5387439	1	True				
ANR	5387459	AssignmentExpression	bufsize = sizeof ( sbuf )		5387439	0		=			
ANR	5387460	Identifier	bufsize		5387439	0					
ANR	5387461	SizeofExpression	sizeof ( sbuf )		5387439	1					
ANR	5387462	Sizeof	sizeof		5387439	0					
ANR	5387463	SizeofOperand	sbuf		5387439	1					
ANR	5387464	ExpressionStatement	"strncpy ( buf , ctime ( & t ) , bufsize )"	787:1:18919:18953	5387439	3	True				
ANR	5387465	CallExpression	"strncpy ( buf , ctime ( & t ) , bufsize )"		5387439	0					
ANR	5387466	Callee	strncpy		5387439	0					
ANR	5387467	Identifier	strncpy		5387439	0					
ANR	5387468	ArgumentList	buf		5387439	1					
ANR	5387469	Argument	buf		5387439	0					
ANR	5387470	Identifier	buf		5387439	0					
ANR	5387471	Argument	ctime ( & t )		5387439	1					
ANR	5387472	CallExpression	ctime ( & t )		5387439	0					
ANR	5387473	Callee	ctime		5387439	0					
ANR	5387474	Identifier	ctime		5387439	0					
ANR	5387475	ArgumentList	& t		5387439	1					
ANR	5387476	Argument	& t		5387439	0					
ANR	5387477	UnaryOperationExpression	& t		5387439	0					
ANR	5387478	UnaryOperator	&		5387439	0					
ANR	5387479	Identifier	t		5387439	1					
ANR	5387480	Argument	bufsize		5387439	2					
ANR	5387481	Identifier	bufsize		5387439	0					
ANR	5387482	ReturnStatement	return chomptime ( buf ) ;	788:1:18956:18979	5387439	4	True				
ANR	5387483	CallExpression	chomptime ( buf )		5387439	0					
ANR	5387484	Callee	chomptime		5387439	0					
ANR	5387485	Identifier	chomptime		5387439	0					
ANR	5387486	ArgumentList	buf		5387439	1					
ANR	5387487	Argument	buf		5387439	0					
ANR	5387488	Identifier	buf		5387439	0					
ANR	5387489	ReturnType	const char *		5387439	1					
ANR	5387490	Identifier	timestr		5387439	2					
ANR	5387491	ParameterList	"time_t t , char * buf , int bufsize"		5387439	3					
ANR	5387492	Parameter	time_t t	779:9:18792:18799	5387439	0	True				
ANR	5387493	ParameterType	time_t		5387439	0					
ANR	5387494	Identifier	t		5387439	1					
ANR	5387495	Parameter	char * buf	779:19:18802:18810	5387439	1	True				
ANR	5387496	ParameterType	char *		5387439	0					
ANR	5387497	Identifier	buf		5387439	1					
ANR	5387498	Parameter	int bufsize	779:30:18813:18823	5387439	2	True				
ANR	5387499	ParameterType	int		5387439	0					
ANR	5387500	Identifier	bufsize		5387439	1					
ANR	5387501	CFGEntryNode	ENTRY		5387439		True				
ANR	5387502	CFGExitNode	EXIT		5387439		True				
ANR	5387503	Symbol	buf		5387439						
ANR	5387504	Symbol	NULL		5387439						
ANR	5387505	Symbol	t		5387439						
ANR	5387506	Symbol	sbuf		5387439						
ANR	5387507	Symbol	bufsize		5387439						
ANR	5387508	Symbol	ctime		5387439						
ANR	5387509	Symbol	& t		5387439						
ANR	5387510	Symbol	chomptime		5387439						
ANR	5387511	Function	timestr	791:0:18984:19227							
ANR	5387512	FunctionDef	"timestr (struct tm & t , char * buf , int bufsize)"		5387511	0					
ANR	5387513	CompoundStatement		793:0:19045:19227	5387511	0					
ANR	5387514	Statement	static	794:1:19048:19053	5387511	0	True				
ANR	5387515	IdentifierDeclStatement	char sbuf [ 64 ] ;	794:8:19055:19068	5387511	1	True				
ANR	5387516	IdentifierDecl	sbuf [ 64 ]		5387511	0					
ANR	5387517	IdentifierDeclType	char [ 64 ]		5387511	0					
ANR	5387518	Identifier	sbuf		5387511	1					
ANR	5387519	PrimaryExpression	64		5387511	2					
ANR	5387520	IfStatement	if ( NULL == buf )		5387511	2					
ANR	5387521	Condition	NULL == buf	795:6:19076:19086	5387511	0	True				
ANR	5387522	EqualityExpression	NULL == buf		5387511	0		==			
ANR	5387523	Identifier	NULL		5387511	0					
ANR	5387524	Identifier	buf		5387511	1					
ANR	5387525	CompoundStatement		3:20:44:44	5387511	1					
ANR	5387526	ExpressionStatement	buf = sbuf	796:2:19094:19104	5387511	0	True				
ANR	5387527	AssignmentExpression	buf = sbuf		5387511	0		=			
ANR	5387528	Identifier	buf		5387511	0					
ANR	5387529	Identifier	sbuf		5387511	1					
ANR	5387530	ExpressionStatement	bufsize = sizeof ( sbuf )	797:2:19108:19130	5387511	1	True				
ANR	5387531	AssignmentExpression	bufsize = sizeof ( sbuf )		5387511	0		=			
ANR	5387532	Identifier	bufsize		5387511	0					
ANR	5387533	SizeofExpression	sizeof ( sbuf )		5387511	1					
ANR	5387534	Sizeof	sizeof		5387511	0					
ANR	5387535	SizeofOperand	sbuf		5387511	1					
ANR	5387536	ExpressionStatement	"strncpy ( buf , asctime ( & t ) , bufsize )"	800:1:19137:19175	5387511	3	True				
ANR	5387537	CallExpression	"strncpy ( buf , asctime ( & t ) , bufsize )"		5387511	0					
ANR	5387538	Callee	strncpy		5387511	0					
ANR	5387539	Identifier	strncpy		5387511	0					
ANR	5387540	ArgumentList	buf		5387511	1					
ANR	5387541	Argument	buf		5387511	0					
ANR	5387542	Identifier	buf		5387511	0					
ANR	5387543	Argument	asctime ( & t )		5387511	1					
ANR	5387544	CallExpression	asctime ( & t )		5387511	0					
ANR	5387545	Callee	asctime		5387511	0					
ANR	5387546	Identifier	asctime		5387511	0					
ANR	5387547	ArgumentList	& t		5387511	1					
ANR	5387548	Argument	& t		5387511	0					
ANR	5387549	UnaryOperationExpression	& t		5387511	0					
ANR	5387550	UnaryOperator	&		5387511	0					
ANR	5387551	Identifier	t		5387511	1					
ANR	5387552	Argument	bufsize		5387511	2					
ANR	5387553	Identifier	bufsize		5387511	0					
ANR	5387554	ExpressionStatement	buf [ bufsize - 1 ] = '\\0'	801:1:19178:19199	5387511	4	True				
ANR	5387555	AssignmentExpression	buf [ bufsize - 1 ] = '\\0'		5387511	0		=			
ANR	5387556	ArrayIndexing	buf [ bufsize - 1 ]		5387511	0					
ANR	5387557	Identifier	buf		5387511	0					
ANR	5387558	AdditiveExpression	bufsize - 1		5387511	1		-			
ANR	5387559	Identifier	bufsize		5387511	0					
ANR	5387560	PrimaryExpression	1		5387511	1					
ANR	5387561	PrimaryExpression	'\\0'		5387511	1					
ANR	5387562	ReturnStatement	return chomptime ( buf ) ;	802:1:19202:19225	5387511	5	True				
ANR	5387563	CallExpression	chomptime ( buf )		5387511	0					
ANR	5387564	Callee	chomptime		5387511	0					
ANR	5387565	Identifier	chomptime		5387511	0					
ANR	5387566	ArgumentList	buf		5387511	1					
ANR	5387567	Argument	buf		5387511	0					
ANR	5387568	Identifier	buf		5387511	0					
ANR	5387569	ReturnType	const char *		5387511	1					
ANR	5387570	Identifier	timestr		5387511	2					
ANR	5387571	ParameterList	"struct tm & t , char * buf , int bufsize"		5387511	3					
ANR	5387572	Parameter	struct tm & t	792:9:19006:19017	5387511	0	True				
ANR	5387573	ParameterType	struct tm &		5387511	0					
ANR	5387574	Identifier	t		5387511	1					
ANR	5387575	Parameter	char * buf	792:23:19020:19028	5387511	1	True				
ANR	5387576	ParameterType	char *		5387511	0					
ANR	5387577	Identifier	buf		5387511	1					
ANR	5387578	Parameter	int bufsize	792:34:19031:19041	5387511	2	True				
ANR	5387579	ParameterType	int		5387511	0					
ANR	5387580	Identifier	bufsize		5387511	1					
ANR	5387581	CFGEntryNode	ENTRY		5387511		True				
ANR	5387582	CFGExitNode	EXIT		5387511		True				
ANR	5387583	Symbol	buf		5387511						
ANR	5387584	Symbol	* buf		5387511						
ANR	5387585	Symbol	* bufsize		5387511						
ANR	5387586	Symbol	NULL		5387511						
ANR	5387587	Symbol	t		5387511						
ANR	5387588	Symbol	sbuf		5387511						
ANR	5387589	Symbol	bufsize		5387511						
ANR	5387590	Symbol	& t		5387511						
ANR	5387591	Symbol	asctime		5387511						
ANR	5387592	Symbol	chomptime		5387511						
ANR	5387593	Function	chomptime	805:0:19230:19382							
ANR	5387594	FunctionDef	chomptime (char * buf)		5387593	0					
ANR	5387595	CompoundStatement		807:0:19266:19382	5387593	0					
ANR	5387596	IdentifierDeclStatement	int len = strlen ( buf ) ;	808:1:19269:19292	5387593	0	True				
ANR	5387597	IdentifierDecl	len = strlen ( buf )		5387593	0					
ANR	5387598	IdentifierDeclType	int		5387593	0					
ANR	5387599	Identifier	len		5387593	1					
ANR	5387600	AssignmentExpression	len = strlen ( buf )		5387593	2		=			
ANR	5387601	Identifier	len		5387593	0					
ANR	5387602	CallExpression	strlen ( buf )		5387593	1					
ANR	5387603	Callee	strlen		5387593	0					
ANR	5387604	Identifier	strlen		5387593	0					
ANR	5387605	ArgumentList	buf		5387593	1					
ANR	5387606	Argument	buf		5387593	0					
ANR	5387607	Identifier	buf		5387593	0					
ANR	5387608	WhileStatement	while ( len && isspace ( buf [ len - 1 ] ) )		5387593	1					
ANR	5387609	Condition	len && isspace ( buf [ len - 1 ] )	809:9:19303:19330	5387593	0	True				
ANR	5387610	AndExpression	len && isspace ( buf [ len - 1 ] )		5387593	0		&&			
ANR	5387611	Identifier	len		5387593	0					
ANR	5387612	CallExpression	isspace ( buf [ len - 1 ] )		5387593	1					
ANR	5387613	Callee	isspace		5387593	0					
ANR	5387614	Identifier	isspace		5387593	0					
ANR	5387615	ArgumentList	buf [ len - 1 ]		5387593	1					
ANR	5387616	Argument	buf [ len - 1 ]		5387593	0					
ANR	5387617	ArrayIndexing	buf [ len - 1 ]		5387593	0					
ANR	5387618	Identifier	buf		5387593	0					
ANR	5387619	AdditiveExpression	len - 1		5387593	1		-			
ANR	5387620	Identifier	len		5387593	0					
ANR	5387621	PrimaryExpression	1		5387593	1					
ANR	5387622	CompoundStatement		3:40:67:67	5387593	1					
ANR	5387623	ExpressionStatement	buf [ len - 1 ] = '\\0'	810:2:19338:19355	5387593	0	True				
ANR	5387624	AssignmentExpression	buf [ len - 1 ] = '\\0'		5387593	0		=			
ANR	5387625	ArrayIndexing	buf [ len - 1 ]		5387593	0					
ANR	5387626	Identifier	buf		5387593	0					
ANR	5387627	AdditiveExpression	len - 1		5387593	1		-			
ANR	5387628	Identifier	len		5387593	0					
ANR	5387629	PrimaryExpression	1		5387593	1					
ANR	5387630	PrimaryExpression	'\\0'		5387593	1					
ANR	5387631	ExpressionStatement	len --	811:2:19359:19364	5387593	1	True				
ANR	5387632	PostIncDecOperationExpression	len --		5387593	0					
ANR	5387633	Identifier	len		5387593	0					
ANR	5387634	IncDec	--		5387593	1					
ANR	5387635	ReturnStatement	return buf ;	813:1:19370:19380	5387593	2	True				
ANR	5387636	Identifier	buf		5387593	0					
ANR	5387637	ReturnType	const char *		5387593	1					
ANR	5387638	Identifier	chomptime		5387593	2					
ANR	5387639	ParameterList	char * buf		5387593	3					
ANR	5387640	Parameter	char * buf	806:11:19254:19262	5387593	0	True				
ANR	5387641	ParameterType	char *		5387593	0					
ANR	5387642	Identifier	buf		5387593	1					
ANR	5387643	CFGEntryNode	ENTRY		5387593		True				
ANR	5387644	CFGExitNode	EXIT		5387593		True				
ANR	5387645	Symbol	strlen		5387593						
ANR	5387646	Symbol	buf		5387593						
ANR	5387647	Symbol	* buf		5387593						
ANR	5387648	Symbol	len		5387593						
ANR	5387649	Symbol	isspace		5387593						
ANR	5387650	Symbol	* len		5387593						
ANR	5387651	Function	Options :: Options	816:0:19385:20352							
ANR	5387652	FunctionDef	Options :: Options ()		5387651	0					
ANR	5387653	CompoundStatement		817:0:19410:20352	5387651	0					
ANR	5387654	ExpressionStatement	m_state = ST_CMD	818:1:19413:19429	5387651	0	True				
ANR	5387655	AssignmentExpression	m_state = ST_CMD		5387651	0		=			
ANR	5387656	Identifier	m_state		5387651	0					
ANR	5387657	Identifier	ST_CMD		5387651	1					
ANR	5387658	ExpressionStatement	m_file = NULL	819:1:19432:19445	5387651	1	True				
ANR	5387659	AssignmentExpression	m_file = NULL		5387651	0		=			
ANR	5387660	Identifier	m_file		5387651	0					
ANR	5387661	Identifier	NULL		5387651	1					
ANR	5387662	ExpressionStatement	m_file2 = NULL	820:1:19448:19462	5387651	2	True				
ANR	5387663	AssignmentExpression	m_file2 = NULL		5387651	0		=			
ANR	5387664	Identifier	m_file2		5387651	0					
ANR	5387665	Identifier	NULL		5387651	1					
ANR	5387666	ExpressionStatement	m_command = CMD_NONE	821:1:19465:19485	5387651	3	True				
ANR	5387667	AssignmentExpression	m_command = CMD_NONE		5387651	0		=			
ANR	5387668	Identifier	m_command		5387651	0					
ANR	5387669	Identifier	CMD_NONE		5387651	1					
ANR	5387670	ExpressionStatement	m_field = NULL	822:1:19488:19502	5387651	4	True				
ANR	5387671	AssignmentExpression	m_field = NULL		5387651	0		=			
ANR	5387672	Identifier	m_field		5387651	0					
ANR	5387673	Identifier	NULL		5387651	1					
ANR	5387674	ExpressionStatement	"memset ( & m_value , 0 , sizeof ( m_value ) )"	823:1:19505:19543	5387651	5	True				
ANR	5387675	CallExpression	"memset ( & m_value , 0 , sizeof ( m_value ) )"		5387651	0					
ANR	5387676	Callee	memset		5387651	0					
ANR	5387677	Identifier	memset		5387651	0					
ANR	5387678	ArgumentList	& m_value		5387651	1					
ANR	5387679	Argument	& m_value		5387651	0					
ANR	5387680	UnaryOperationExpression	& m_value		5387651	0					
ANR	5387681	UnaryOperator	&		5387651	0					
ANR	5387682	Identifier	m_value		5387651	1					
ANR	5387683	Argument	0		5387651	1					
ANR	5387684	PrimaryExpression	0		5387651	0					
ANR	5387685	Argument	sizeof ( m_value )		5387651	2					
ANR	5387686	SizeofExpression	sizeof ( m_value )		5387651	0					
ANR	5387687	Sizeof	sizeof		5387651	0					
ANR	5387688	SizeofOperand	m_value		5387651	1					
ANR	5387689	ExpressionStatement	m_value_is_range = false	824:1:19546:19570	5387651	6	True				
ANR	5387690	AssignmentExpression	m_value_is_range = false		5387651	0		=			
ANR	5387691	Identifier	m_value_is_range		5387651	0					
ANR	5387692	Identifier	false		5387651	1					
ANR	5387693	ExpressionStatement	m_num_values = 0	825:1:19573:19589	5387651	7	True				
ANR	5387694	AssignmentExpression	m_num_values = 0		5387651	0		=			
ANR	5387695	Identifier	m_num_values		5387651	0					
ANR	5387696	PrimaryExpression	0		5387651	1					
ANR	5387697	ExpressionStatement	m_verbose = VERB_NONE	826:1:19592:19613	5387651	8	True				
ANR	5387698	AssignmentExpression	m_verbose = VERB_NONE		5387651	0		=			
ANR	5387699	Identifier	m_verbose		5387651	0					
ANR	5387700	Identifier	VERB_NONE		5387651	1					
ANR	5387701	ExpressionStatement	m_numeric = false	827:1:19616:19633	5387651	9	True				
ANR	5387702	AssignmentExpression	m_numeric = false		5387651	0		=			
ANR	5387703	Identifier	m_numeric		5387651	0					
ANR	5387704	Identifier	false		5387651	1					
ANR	5387705	Statement	m_usage	828:1:19636:19642	5387651	10	True				
ANR	5387706	Statement	=	828:9:19644:19644	5387651	11	True				
ANR	5387707	Statement	"""Usage: test_log_reader_state """	829:2:19648:19678	5387651	12	True				
ANR	5387708	Statement	"""[options] <command> [filename [field-name [value/min [max-value]]]]\\n"""	830:2:19682:19752	5387651	13	True				
ANR	5387709	Statement	"""  commands: dump diff verify check list\\n"""	831:2:19756:19798	5387651	14	True				
ANR	5387710	Statement	"""    dump/any: dump [what]\\n"""	832:2:19802:19830	5387651	15	True				
ANR	5387711	Statement	"""    diff: diff two state files [file2]\\n"""	833:2:19834:19875	5387651	16	True				
ANR	5387712	Statement	"""    verify/numeric: what min max\\n"""	834:2:19879:19914	5387651	17	True				
ANR	5387713	Statement	"""    verify/string:  what [value]\\n"""	835:2:19918:19953	5387651	18	True				
ANR	5387714	Statement	"""    access: simple access API checks\\n"""	836:2:19957:19996	5387651	19	True				
ANR	5387715	Statement	"""    list (list names of things)\\n"""	837:2:20000:20034	5387651	20	True				
ANR	5387716	Statement	"""  --numeric|-n: dump times as numeric\\n"""	838:2:20038:20078	5387651	21	True				
ANR	5387717	Statement	"""  --usage|--help|-h: print this message and exit\\n"""	839:2:20082:20133	5387651	22	True				
ANR	5387718	Statement	"""  -v: Increase verbosity level by 1\\n"""	840:2:20137:20175	5387651	23	True				
ANR	5387719	Statement	"""  --verbosity <number>: set verbosity level (default is 1)\\n"""	841:2:20179:20240	5387651	24	True				
ANR	5387720	Statement	"""  --version: print the version number and compile date\\n"""	842:2:20244:20301	5387651	25	True				
ANR	5387721	ExpressionStatement	"""  <filename>: the persistent file to read\\n"""	843:2:20305:20350	5387651	26	True				
ANR	5387722	PrimaryExpression	"""  <filename>: the persistent file to read\\n"""		5387651	0					
ANR	5387723	Identifier	Options :: Options		5387651	1					
ANR	5387724	ParameterList			5387651	2					
ANR	5387725	CFGEntryNode	ENTRY		5387651		True				
ANR	5387726	CFGExitNode	EXIT		5387651		True				
ANR	5387727	Symbol	m_command		5387651						
ANR	5387728	Symbol	m_num_values		5387651						
ANR	5387729	Symbol	NULL		5387651						
ANR	5387730	Symbol	m_file		5387651						
ANR	5387731	Symbol	false		5387651						
ANR	5387732	Symbol	CMD_NONE		5387651						
ANR	5387733	Symbol	m_numeric		5387651						
ANR	5387734	Symbol	m_verbose		5387651						
ANR	5387735	Symbol	m_state		5387651						
ANR	5387736	Symbol	ST_CMD		5387651						
ANR	5387737	Symbol	VERB_NONE		5387651						
ANR	5387738	Symbol	m_file2		5387651						
ANR	5387739	Symbol	m_field		5387651						
ANR	5387740	Symbol	& m_value		5387651						
ANR	5387741	Symbol	m_value_is_range		5387651						
ANR	5387742	Function	Options :: handleOpt	846:0:20355:21202							
ANR	5387743	FunctionDef	"Options :: handleOpt (SimpleArg & arg , int & argno)"		5387742	0					
ANR	5387744	CompoundStatement		848:0:20408:21202	5387742	0					
ANR	5387745	IfStatement	"if ( arg . Match ( 'n' , ""numeric"" ) )"		5387742	0					
ANR	5387746	Condition	"arg . Match ( 'n' , ""numeric"" )"	849:6:20416:20440	5387742	0	True				
ANR	5387747	CallExpression	"arg . Match ( 'n' , ""numeric"" )"		5387742	0					
ANR	5387748	Callee	arg . Match		5387742	0					
ANR	5387749	MemberAccess	arg . Match		5387742	0					
ANR	5387750	Identifier	arg		5387742	0					
ANR	5387751	Identifier	Match		5387742	1					
ANR	5387752	ArgumentList	'n'		5387742	1					
ANR	5387753	Argument	'n'		5387742	0					
ANR	5387754	PrimaryExpression	'n'		5387742	0					
ANR	5387755	Argument	"""numeric"""		5387742	1					
ANR	5387756	PrimaryExpression	"""numeric"""		5387742	0					
ANR	5387757	CompoundStatement		2:34:35:35	5387742	1					
ANR	5387758	ExpressionStatement	m_numeric = true	850:2:20448:20464	5387742	0	True				
ANR	5387759	AssignmentExpression	m_numeric = true		5387742	0		=			
ANR	5387760	Identifier	m_numeric		5387742	0					
ANR	5387761	Identifier	true		5387742	1					
ANR	5387762	ElseStatement	else		5387742	0					
ANR	5387763	IfStatement	"if ( arg . Match ( 'd' , ""debug"" ) )"		5387742	0					
ANR	5387764	Condition	"arg . Match ( 'd' , ""debug"" )"	852:13:20480:20502	5387742	0	True				
ANR	5387765	CallExpression	"arg . Match ( 'd' , ""debug"" )"		5387742	0					
ANR	5387766	Callee	arg . Match		5387742	0					
ANR	5387767	MemberAccess	arg . Match		5387742	0					
ANR	5387768	Identifier	arg		5387742	0					
ANR	5387769	Identifier	Match		5387742	1					
ANR	5387770	ArgumentList	'd'		5387742	1					
ANR	5387771	Argument	'd'		5387742	0					
ANR	5387772	PrimaryExpression	'd'		5387742	0					
ANR	5387773	Argument	"""debug"""		5387742	1					
ANR	5387774	PrimaryExpression	"""debug"""		5387742	0					
ANR	5387775	CompoundStatement		5:39:97:97	5387742	1					
ANR	5387776	IfStatement	if ( arg . hasOpt ( ) )		5387742	0					
ANR	5387777	Condition	arg . hasOpt ( )	853:7:20515:20526	5387742	0	True				
ANR	5387778	CallExpression	arg . hasOpt ( )		5387742	0					
ANR	5387779	Callee	arg . hasOpt		5387742	0					
ANR	5387780	MemberAccess	arg . hasOpt		5387742	0					
ANR	5387781	Identifier	arg		5387742	0					
ANR	5387782	Identifier	hasOpt		5387742	1					
ANR	5387783	ArgumentList			5387742	1					
ANR	5387784	CompoundStatement		6:22:121:121	5387742	1					
ANR	5387785	Statement	set_debug_flags	854:3:20535:20549	5387742	0	True				
ANR	5387786	Statement	(	854:18:20550:20550	5387742	1	True				
ANR	5387787	Statement	const_cast	854:20:20552:20561	5387742	2	True				
ANR	5387788	Statement	<	854:30:20562:20562	5387742	3	True				
ANR	5387789	Statement	char	854:31:20563:20566	5387742	4	True				
ANR	5387790	Statement	*	854:36:20568:20568	5387742	5	True				
ANR	5387791	Statement	>	854:37:20569:20569	5387742	6	True				
ANR	5387792	Statement	(	854:38:20570:20570	5387742	7	True				
ANR	5387793	Statement	arg	854:39:20571:20573	5387742	8	True				
ANR	5387794	Statement	.	854:42:20574:20574	5387742	9	True				
ANR	5387795	Statement	getOpt	854:43:20575:20580	5387742	10	True				
ANR	5387796	Statement	(	854:49:20581:20581	5387742	11	True				
ANR	5387797	Statement	)	854:50:20582:20582	5387742	12	True				
ANR	5387798	Statement	)	854:51:20583:20583	5387742	13	True				
ANR	5387799	Statement	)	854:53:20585:20585	5387742	14	True				
ANR	5387800	ExpressionStatement		854:54:20586:20586	5387742	15	True				
ANR	5387801	ExpressionStatement	argno = arg . ConsumeOpt ( )	855:3:20591:20616	5387742	16	True				
ANR	5387802	AssignmentExpression	argno = arg . ConsumeOpt ( )		5387742	0		=			
ANR	5387803	Identifier	argno		5387742	0					
ANR	5387804	CallExpression	arg . ConsumeOpt ( )		5387742	1					
ANR	5387805	Callee	arg . ConsumeOpt		5387742	0					
ANR	5387806	MemberAccess	arg . ConsumeOpt		5387742	0					
ANR	5387807	Identifier	arg		5387742	0					
ANR	5387808	Identifier	ConsumeOpt		5387742	1					
ANR	5387809	ArgumentList			5387742	1					
ANR	5387810	ElseStatement	else		5387742	0					
ANR	5387811	CompoundStatement		9:9:218:218	5387742	0					
ANR	5387812	ExpressionStatement	"fprintf ( stderr , ""Value needed for '%s'\\n"" , arg . Arg ( ) )"	857:3:20632:20686	5387742	0	True				
ANR	5387813	CallExpression	"fprintf ( stderr , ""Value needed for '%s'\\n"" , arg . Arg ( ) )"		5387742	0					
ANR	5387814	Callee	fprintf		5387742	0					
ANR	5387815	Identifier	fprintf		5387742	0					
ANR	5387816	ArgumentList	stderr		5387742	1					
ANR	5387817	Argument	stderr		5387742	0					
ANR	5387818	Identifier	stderr		5387742	0					
ANR	5387819	Argument	"""Value needed for '%s'\\n"""		5387742	1					
ANR	5387820	PrimaryExpression	"""Value needed for '%s'\\n"""		5387742	0					
ANR	5387821	Argument	arg . Arg ( )		5387742	2					
ANR	5387822	CallExpression	arg . Arg ( )		5387742	0					
ANR	5387823	Callee	arg . Arg		5387742	0					
ANR	5387824	MemberAccess	arg . Arg		5387742	0					
ANR	5387825	Identifier	arg		5387742	0					
ANR	5387826	Identifier	Arg		5387742	1					
ANR	5387827	ArgumentList			5387742	1					
ANR	5387828	ExpressionStatement	"printf ( ""%s"" , m_usage )"	858:3:20691:20712	5387742	1	True				
ANR	5387829	CallExpression	"printf ( ""%s"" , m_usage )"		5387742	0					
ANR	5387830	Callee	printf		5387742	0					
ANR	5387831	Identifier	printf		5387742	0					
ANR	5387832	ArgumentList	"""%s"""		5387742	1					
ANR	5387833	Argument	"""%s"""		5387742	0					
ANR	5387834	PrimaryExpression	"""%s"""		5387742	0					
ANR	5387835	Argument	m_usage		5387742	1					
ANR	5387836	Identifier	m_usage		5387742	0					
ANR	5387837	ReturnStatement	return - 1 ;	859:3:20717:20726	5387742	2	True				
ANR	5387838	UnaryOperationExpression	- 1		5387742	0					
ANR	5387839	UnaryOperator	-		5387742	0					
ANR	5387840	PrimaryExpression	1		5387742	1					
ANR	5387841	ElseStatement	else		5387742	0					
ANR	5387842	IfStatement	if ( arg . Match ( 'v' ) )		5387742	0					
ANR	5387843	Condition	arg . Match ( 'v' )	862:13:20746:20759	5387742	0	True				
ANR	5387844	CallExpression	arg . Match ( 'v' )		5387742	0					
ANR	5387845	Callee	arg . Match		5387742	0					
ANR	5387846	MemberAccess	arg . Match		5387742	0					
ANR	5387847	Identifier	arg		5387742	0					
ANR	5387848	Identifier	Match		5387742	1					
ANR	5387849	ArgumentList	'v'		5387742	1					
ANR	5387850	Argument	'v'		5387742	0					
ANR	5387851	PrimaryExpression	'v'		5387742	0					
ANR	5387852	CompoundStatement		15:30:354:354	5387742	1					
ANR	5387853	ExpressionStatement	m_verbose ++	863:2:20767:20778	5387742	0	True				
ANR	5387854	PostIncDecOperationExpression	m_verbose ++		5387742	0					
ANR	5387855	Identifier	m_verbose		5387742	0					
ANR	5387856	IncDec	++		5387742	1					
ANR	5387857	ElseStatement	else		5387742	0					
ANR	5387858	IfStatement	"if ( arg . Match ( ""verbosity"" ) )"		5387742	0					
ANR	5387859	Condition	"arg . Match ( ""verbosity"" )"	865:13:20794:20815	5387742	0	True				
ANR	5387860	CallExpression	"arg . Match ( ""verbosity"" )"		5387742	0					
ANR	5387861	Callee	arg . Match		5387742	0					
ANR	5387862	MemberAccess	arg . Match		5387742	0					
ANR	5387863	Identifier	arg		5387742	0					
ANR	5387864	Identifier	Match		5387742	1					
ANR	5387865	ArgumentList	"""verbosity"""		5387742	1					
ANR	5387866	Argument	"""verbosity"""		5387742	0					
ANR	5387867	PrimaryExpression	"""verbosity"""		5387742	0					
ANR	5387868	CompoundStatement		18:38:410:410	5387742	1					
ANR	5387869	IfStatement	if ( ! arg . getOpt ( m_verbose ) )		5387742	0					
ANR	5387870	Condition	! arg . getOpt ( m_verbose )	866:7:20828:20851	5387742	0	True				
ANR	5387871	UnaryOperationExpression	! arg . getOpt ( m_verbose )		5387742	0					
ANR	5387872	UnaryOperator	!		5387742	0					
ANR	5387873	CallExpression	arg . getOpt ( m_verbose )		5387742	1					
ANR	5387874	Callee	arg . getOpt		5387742	0					
ANR	5387875	MemberAccess	arg . getOpt		5387742	0					
ANR	5387876	Identifier	arg		5387742	0					
ANR	5387877	Identifier	getOpt		5387742	1					
ANR	5387878	ArgumentList	m_verbose		5387742	1					
ANR	5387879	Argument	m_verbose		5387742	0					
ANR	5387880	Identifier	m_verbose		5387742	0					
ANR	5387881	CompoundStatement		19:34:446:446	5387742	1					
ANR	5387882	ExpressionStatement	"fprintf ( stderr , ""Value needed for '%s'\\n"" , arg . Arg ( ) )"	867:3:20860:20914	5387742	0	True				
ANR	5387883	CallExpression	"fprintf ( stderr , ""Value needed for '%s'\\n"" , arg . Arg ( ) )"		5387742	0					
ANR	5387884	Callee	fprintf		5387742	0					
ANR	5387885	Identifier	fprintf		5387742	0					
ANR	5387886	ArgumentList	stderr		5387742	1					
ANR	5387887	Argument	stderr		5387742	0					
ANR	5387888	Identifier	stderr		5387742	0					
ANR	5387889	Argument	"""Value needed for '%s'\\n"""		5387742	1					
ANR	5387890	PrimaryExpression	"""Value needed for '%s'\\n"""		5387742	0					
ANR	5387891	Argument	arg . Arg ( )		5387742	2					
ANR	5387892	CallExpression	arg . Arg ( )		5387742	0					
ANR	5387893	Callee	arg . Arg		5387742	0					
ANR	5387894	MemberAccess	arg . Arg		5387742	0					
ANR	5387895	Identifier	arg		5387742	0					
ANR	5387896	Identifier	Arg		5387742	1					
ANR	5387897	ArgumentList			5387742	1					
ANR	5387898	ExpressionStatement	"printf ( ""%s"" , m_usage )"	868:3:20919:20940	5387742	1	True				
ANR	5387899	CallExpression	"printf ( ""%s"" , m_usage )"		5387742	0					
ANR	5387900	Callee	printf		5387742	0					
ANR	5387901	Identifier	printf		5387742	0					
ANR	5387902	ArgumentList	"""%s"""		5387742	1					
ANR	5387903	Argument	"""%s"""		5387742	0					
ANR	5387904	PrimaryExpression	"""%s"""		5387742	0					
ANR	5387905	Argument	m_usage		5387742	1					
ANR	5387906	Identifier	m_usage		5387742	0					
ANR	5387907	ReturnStatement	return - 1 ;	869:3:20945:20954	5387742	2	True				
ANR	5387908	UnaryOperationExpression	- 1		5387742	0					
ANR	5387909	UnaryOperator	-		5387742	0					
ANR	5387910	PrimaryExpression	1		5387742	1					
ANR	5387911	ElseStatement	else		5387742	0					
ANR	5387912	IfStatement	"if ( arg . Match ( ""version"" ) )"		5387742	0					
ANR	5387913	Condition	"arg . Match ( ""version"" )"	872:13:20974:20993	5387742	0	True				
ANR	5387914	CallExpression	"arg . Match ( ""version"" )"		5387742	0					
ANR	5387915	Callee	arg . Match		5387742	0					
ANR	5387916	MemberAccess	arg . Match		5387742	0					
ANR	5387917	Identifier	arg		5387742	0					
ANR	5387918	Identifier	Match		5387742	1					
ANR	5387919	ArgumentList	"""version"""		5387742	1					
ANR	5387920	Argument	"""version"""		5387742	0					
ANR	5387921	PrimaryExpression	"""version"""		5387742	0					
ANR	5387922	CompoundStatement		25:36:588:588	5387742	1					
ANR	5387923	ExpressionStatement	"printf ( ""test_log_reader_state: %s, %s\\n"" , VERSION , __DATE__ )"	873:2:21001:21061	5387742	0	True				
ANR	5387924	CallExpression	"printf ( ""test_log_reader_state: %s, %s\\n"" , VERSION , __DATE__ )"		5387742	0					
ANR	5387925	Callee	printf		5387742	0					
ANR	5387926	Identifier	printf		5387742	0					
ANR	5387927	ArgumentList	"""test_log_reader_state: %s, %s\\n"""		5387742	1					
ANR	5387928	Argument	"""test_log_reader_state: %s, %s\\n"""		5387742	0					
ANR	5387929	PrimaryExpression	"""test_log_reader_state: %s, %s\\n"""		5387742	0					
ANR	5387930	Argument	VERSION		5387742	1					
ANR	5387931	Identifier	VERSION		5387742	0					
ANR	5387932	Argument	__DATE__		5387742	2					
ANR	5387933	Identifier	__DATE__		5387742	0					
ANR	5387934	ReturnStatement	return 1 ;	874:2:21065:21073	5387742	1	True				
ANR	5387935	PrimaryExpression	1		5387742	0					
ANR	5387936	ElseStatement	else		5387742	0					
ANR	5387937	CompoundStatement		29:6:675:675	5387742	0					
ANR	5387938	ExpressionStatement	"fprintf ( stderr , ""Unrecognized argument: '%s'\\n"" , arg . Arg ( ) )"	877:2:21088:21148	5387742	0	True				
ANR	5387939	CallExpression	"fprintf ( stderr , ""Unrecognized argument: '%s'\\n"" , arg . Arg ( ) )"		5387742	0					
ANR	5387940	Callee	fprintf		5387742	0					
ANR	5387941	Identifier	fprintf		5387742	0					
ANR	5387942	ArgumentList	stderr		5387742	1					
ANR	5387943	Argument	stderr		5387742	0					
ANR	5387944	Identifier	stderr		5387742	0					
ANR	5387945	Argument	"""Unrecognized argument: '%s'\\n"""		5387742	1					
ANR	5387946	PrimaryExpression	"""Unrecognized argument: '%s'\\n"""		5387742	0					
ANR	5387947	Argument	arg . Arg ( )		5387742	2					
ANR	5387948	CallExpression	arg . Arg ( )		5387742	0					
ANR	5387949	Callee	arg . Arg		5387742	0					
ANR	5387950	MemberAccess	arg . Arg		5387742	0					
ANR	5387951	Identifier	arg		5387742	0					
ANR	5387952	Identifier	Arg		5387742	1					
ANR	5387953	ArgumentList			5387742	1					
ANR	5387954	ExpressionStatement	"printf ( ""%s"" , m_usage )"	878:2:21152:21173	5387742	1	True				
ANR	5387955	CallExpression	"printf ( ""%s"" , m_usage )"		5387742	0					
ANR	5387956	Callee	printf		5387742	0					
ANR	5387957	Identifier	printf		5387742	0					
ANR	5387958	ArgumentList	"""%s"""		5387742	1					
ANR	5387959	Argument	"""%s"""		5387742	0					
ANR	5387960	PrimaryExpression	"""%s"""		5387742	0					
ANR	5387961	Argument	m_usage		5387742	1					
ANR	5387962	Identifier	m_usage		5387742	0					
ANR	5387963	ReturnStatement	return - 1 ;	879:2:21177:21186	5387742	2	True				
ANR	5387964	UnaryOperationExpression	- 1		5387742	0					
ANR	5387965	UnaryOperator	-		5387742	0					
ANR	5387966	PrimaryExpression	1		5387742	1					
ANR	5387967	ReturnStatement	return 0 ;	881:1:21192:21200	5387742	1	True				
ANR	5387968	PrimaryExpression	0		5387742	0					
ANR	5387969	ReturnType	int		5387742	1					
ANR	5387970	Identifier	Options :: handleOpt		5387742	2					
ANR	5387971	ParameterList	"SimpleArg & arg , int & argno"		5387742	3					
ANR	5387972	Parameter	SimpleArg & arg	847:20:20379:20392	5387742	0	True				
ANR	5387973	ParameterType	SimpleArg &		5387742	0					
ANR	5387974	Identifier	arg		5387742	1					
ANR	5387975	Parameter	int & argno	847:36:20395:20404	5387742	1	True				
ANR	5387976	ParameterType	int &		5387742	0					
ANR	5387977	Identifier	argno		5387742	1					
ANR	5387978	CFGEntryNode	ENTRY		5387742		True				
ANR	5387979	CFGExitNode	EXIT		5387742		True				
ANR	5387980	Symbol	m_usage		5387742						
ANR	5387981	Symbol	arg . Match		5387742						
ANR	5387982	Symbol	__DATE__		5387742						
ANR	5387983	Symbol	m_numeric		5387742						
ANR	5387984	Symbol	stderr		5387742						
ANR	5387985	Symbol	m_verbose		5387742						
ANR	5387986	Symbol	arg . ConsumeOpt		5387742						
ANR	5387987	Symbol	arg . Arg		5387742						
ANR	5387988	Symbol	arg . hasOpt		5387742						
ANR	5387989	Symbol	arg		5387742						
ANR	5387990	Symbol	true		5387742						
ANR	5387991	Symbol	VERSION		5387742						
ANR	5387992	Symbol	argno		5387742						
ANR	5387993	Symbol	arg . getOpt		5387742						
ANR	5387994	Function	Options :: lookupCommand	943:0:22438:23091							
ANR	5387995	FunctionDef	Options :: lookupCommand (const SimpleArg & arg)		5387994	0					
ANR	5387996	CompoundStatement		945:0:22490:23091	5387994	0					
ANR	5387997	IdentifierDeclStatement	const char * s = arg . Arg ( ) ;	946:1:22493:22519	5387994	0	True				
ANR	5387998	IdentifierDecl	* s = arg . Arg ( )		5387994	0					
ANR	5387999	IdentifierDeclType	const char *		5387994	0					
ANR	5388000	Identifier	s		5387994	1					
ANR	5388001	AssignmentExpression	* s = arg . Arg ( )		5387994	2		=			
ANR	5388002	Identifier	s		5387994	0					
ANR	5388003	CallExpression	arg . Arg ( )		5387994	1					
ANR	5388004	Callee	arg . Arg		5387994	0					
ANR	5388005	MemberAccess	arg . Arg		5387994	0					
ANR	5388006	Identifier	arg		5387994	0					
ANR	5388007	Identifier	Arg		5387994	1					
ANR	5388008	ArgumentList			5387994	1					
ANR	5388009	IdentifierDeclStatement	char c = '\\0' ;	947:1:22522:22536	5387994	1	True				
ANR	5388010	IdentifierDecl	c = '\\0'		5387994	0					
ANR	5388011	IdentifierDeclType	char		5387994	0					
ANR	5388012	Identifier	c		5387994	1					
ANR	5388013	AssignmentExpression	c = '\\0'		5387994	2		=			
ANR	5388014	Identifier	c		5387994	0					
ANR	5388015	PrimaryExpression	'\\0'		5387994	1					
ANR	5388016	IfStatement	if ( 1 == strlen ( s ) )		5387994	2					
ANR	5388017	Condition	1 == strlen ( s )	949:6:22545:22558	5387994	0	True				
ANR	5388018	EqualityExpression	1 == strlen ( s )		5387994	0		==			
ANR	5388019	PrimaryExpression	1		5387994	0					
ANR	5388020	CallExpression	strlen ( s )		5387994	1					
ANR	5388021	Callee	strlen		5387994	0					
ANR	5388022	Identifier	strlen		5387994	0					
ANR	5388023	ArgumentList	s		5387994	1					
ANR	5388024	Argument	s		5387994	0					
ANR	5388025	Identifier	s		5387994	0					
ANR	5388026	CompoundStatement		5:23:71:71	5387994	1					
ANR	5388027	ExpressionStatement	c = s [ 0 ]	950:2:22566:22574	5387994	0	True				
ANR	5388028	AssignmentExpression	c = s [ 0 ]		5387994	0		=			
ANR	5388029	Identifier	c		5387994	0					
ANR	5388030	ArrayIndexing	s [ 0 ]		5387994	1					
ANR	5388031	Identifier	s		5387994	0					
ANR	5388032	PrimaryExpression	0		5387994	1					
ANR	5388033	IfStatement	"if ( 'd' == c || ( 0 == strcasecmp ( s , ""dump"" ) ) )"		5387994	3					
ANR	5388034	Condition	"'d' == c || ( 0 == strcasecmp ( s , ""dump"" ) )"	952:6:22585:22628	5387994	0	True				
ANR	5388035	OrExpression	"'d' == c || ( 0 == strcasecmp ( s , ""dump"" ) )"		5387994	0		||			
ANR	5388036	EqualityExpression	'd' == c		5387994	0		==			
ANR	5388037	PrimaryExpression	'd'		5387994	0					
ANR	5388038	Identifier	c		5387994	1					
ANR	5388039	EqualityExpression	"0 == strcasecmp ( s , ""dump"" )"		5387994	1		==			
ANR	5388040	PrimaryExpression	0		5387994	0					
ANR	5388041	CallExpression	"strcasecmp ( s , ""dump"" )"		5387994	1					
ANR	5388042	Callee	strcasecmp		5387994	0					
ANR	5388043	Identifier	strcasecmp		5387994	0					
ANR	5388044	ArgumentList	s		5387994	1					
ANR	5388045	Argument	s		5387994	0					
ANR	5388046	Identifier	s		5387994	0					
ANR	5388047	Argument	"""dump"""		5387994	1					
ANR	5388048	PrimaryExpression	"""dump"""		5387994	0					
ANR	5388049	CompoundStatement		8:53:141:141	5387994	1					
ANR	5388050	ExpressionStatement	m_command = CMD_DUMP	953:2:22636:22656	5387994	0	True				
ANR	5388051	AssignmentExpression	m_command = CMD_DUMP		5387994	0		=			
ANR	5388052	Identifier	m_command		5387994	0					
ANR	5388053	Identifier	CMD_DUMP		5387994	1					
ANR	5388054	ReturnStatement	return true ;	954:2:22660:22671	5387994	1	True				
ANR	5388055	Identifier	true		5387994	0					
ANR	5388056	ElseStatement	else		5387994	0					
ANR	5388057	IfStatement	"if ( 0 == strcasecmp ( s , ""diff"" ) )"		5387994	0					
ANR	5388058	Condition	"0 == strcasecmp ( s , ""diff"" )"	956:11:22687:22714	5387994	0	True				
ANR	5388059	EqualityExpression	"0 == strcasecmp ( s , ""diff"" )"		5387994	0		==			
ANR	5388060	PrimaryExpression	0		5387994	0					
ANR	5388061	CallExpression	"strcasecmp ( s , ""diff"" )"		5387994	1					
ANR	5388062	Callee	strcasecmp		5387994	0					
ANR	5388063	Identifier	strcasecmp		5387994	0					
ANR	5388064	ArgumentList	s		5387994	1					
ANR	5388065	Argument	s		5387994	0					
ANR	5388066	Identifier	s		5387994	0					
ANR	5388067	Argument	"""diff"""		5387994	1					
ANR	5388068	PrimaryExpression	"""diff"""		5387994	0					
ANR	5388069	CompoundStatement		12:42:227:227	5387994	1					
ANR	5388070	ExpressionStatement	m_command = CMD_DIFF	957:2:22722:22742	5387994	0	True				
ANR	5388071	AssignmentExpression	m_command = CMD_DIFF		5387994	0		=			
ANR	5388072	Identifier	m_command		5387994	0					
ANR	5388073	Identifier	CMD_DIFF		5387994	1					
ANR	5388074	ReturnStatement	return true ;	958:2:22746:22757	5387994	1	True				
ANR	5388075	Identifier	true		5387994	0					
ANR	5388076	ElseStatement	else		5387994	0					
ANR	5388077	IfStatement	"if ( 'v' == c || ( 0 == strcasecmp ( s , ""verify"" ) ) )"		5387994	0					
ANR	5388078	Condition	"'v' == c || ( 0 == strcasecmp ( s , ""verify"" ) )"	960:11:22773:22818	5387994	0	True				
ANR	5388079	OrExpression	"'v' == c || ( 0 == strcasecmp ( s , ""verify"" ) )"		5387994	0		||			
ANR	5388080	EqualityExpression	'v' == c		5387994	0		==			
ANR	5388081	PrimaryExpression	'v'		5387994	0					
ANR	5388082	Identifier	c		5387994	1					
ANR	5388083	EqualityExpression	"0 == strcasecmp ( s , ""verify"" )"		5387994	1		==			
ANR	5388084	PrimaryExpression	0		5387994	0					
ANR	5388085	CallExpression	"strcasecmp ( s , ""verify"" )"		5387994	1					
ANR	5388086	Callee	strcasecmp		5387994	0					
ANR	5388087	Identifier	strcasecmp		5387994	0					
ANR	5388088	ArgumentList	s		5387994	1					
ANR	5388089	Argument	s		5387994	0					
ANR	5388090	Identifier	s		5387994	0					
ANR	5388091	Argument	"""verify"""		5387994	1					
ANR	5388092	PrimaryExpression	"""verify"""		5387994	0					
ANR	5388093	CompoundStatement		16:60:331:331	5387994	1					
ANR	5388094	ExpressionStatement	m_command = CMD_VERIFY	961:2:22826:22848	5387994	0	True				
ANR	5388095	AssignmentExpression	m_command = CMD_VERIFY		5387994	0		=			
ANR	5388096	Identifier	m_command		5387994	0					
ANR	5388097	Identifier	CMD_VERIFY		5387994	1					
ANR	5388098	ReturnStatement	return true ;	962:2:22852:22863	5387994	1	True				
ANR	5388099	Identifier	true		5387994	0					
ANR	5388100	ElseStatement	else		5387994	0					
ANR	5388101	IfStatement	"if ( 'a' == c || ( 0 == strcasecmp ( s , ""access"" ) ) )"		5387994	0					
ANR	5388102	Condition	"'a' == c || ( 0 == strcasecmp ( s , ""access"" ) )"	964:11:22879:22924	5387994	0	True				
ANR	5388103	OrExpression	"'a' == c || ( 0 == strcasecmp ( s , ""access"" ) )"		5387994	0		||			
ANR	5388104	EqualityExpression	'a' == c		5387994	0		==			
ANR	5388105	PrimaryExpression	'a'		5387994	0					
ANR	5388106	Identifier	c		5387994	1					
ANR	5388107	EqualityExpression	"0 == strcasecmp ( s , ""access"" )"		5387994	1		==			
ANR	5388108	PrimaryExpression	0		5387994	0					
ANR	5388109	CallExpression	"strcasecmp ( s , ""access"" )"		5387994	1					
ANR	5388110	Callee	strcasecmp		5387994	0					
ANR	5388111	Identifier	strcasecmp		5387994	0					
ANR	5388112	ArgumentList	s		5387994	1					
ANR	5388113	Argument	s		5387994	0					
ANR	5388114	Identifier	s		5387994	0					
ANR	5388115	Argument	"""access"""		5387994	1					
ANR	5388116	PrimaryExpression	"""access"""		5387994	0					
ANR	5388117	CompoundStatement		20:60:437:437	5387994	1					
ANR	5388118	ExpressionStatement	m_command = CMD_ACCESS	965:2:22932:22954	5387994	0	True				
ANR	5388119	AssignmentExpression	m_command = CMD_ACCESS		5387994	0		=			
ANR	5388120	Identifier	m_command		5387994	0					
ANR	5388121	Identifier	CMD_ACCESS		5387994	1					
ANR	5388122	ReturnStatement	return true ;	966:2:22958:22969	5387994	1	True				
ANR	5388123	Identifier	true		5387994	0					
ANR	5388124	ElseStatement	else		5387994	0					
ANR	5388125	IfStatement	"if ( 'l' == c || ( 0 == strcasecmp ( s , ""list"" ) ) )"		5387994	0					
ANR	5388126	Condition	"'l' == c || ( 0 == strcasecmp ( s , ""list"" ) )"	968:11:22985:23028	5387994	0	True				
ANR	5388127	OrExpression	"'l' == c || ( 0 == strcasecmp ( s , ""list"" ) )"		5387994	0		||			
ANR	5388128	EqualityExpression	'l' == c		5387994	0		==			
ANR	5388129	PrimaryExpression	'l'		5387994	0					
ANR	5388130	Identifier	c		5387994	1					
ANR	5388131	EqualityExpression	"0 == strcasecmp ( s , ""list"" )"		5387994	1		==			
ANR	5388132	PrimaryExpression	0		5387994	0					
ANR	5388133	CallExpression	"strcasecmp ( s , ""list"" )"		5387994	1					
ANR	5388134	Callee	strcasecmp		5387994	0					
ANR	5388135	Identifier	strcasecmp		5387994	0					
ANR	5388136	ArgumentList	s		5387994	1					
ANR	5388137	Argument	s		5387994	0					
ANR	5388138	Identifier	s		5387994	0					
ANR	5388139	Argument	"""list"""		5387994	1					
ANR	5388140	PrimaryExpression	"""list"""		5387994	0					
ANR	5388141	CompoundStatement		24:58:541:541	5387994	1					
ANR	5388142	ExpressionStatement	m_command = CMD_LIST	969:2:23036:23056	5387994	0	True				
ANR	5388143	AssignmentExpression	m_command = CMD_LIST		5387994	0		=			
ANR	5388144	Identifier	m_command		5387994	0					
ANR	5388145	Identifier	CMD_LIST		5387994	1					
ANR	5388146	ReturnStatement	return true ;	970:2:23060:23071	5387994	1	True				
ANR	5388147	Identifier	true		5387994	0					
ANR	5388148	ReturnStatement	return false ;	972:1:23077:23089	5387994	4	True				
ANR	5388149	Identifier	false		5387994	0					
ANR	5388150	ReturnType	bool		5387994	1					
ANR	5388151	Identifier	Options :: lookupCommand		5387994	2					
ANR	5388152	ParameterList	const SimpleArg & arg		5387994	3					
ANR	5388153	Parameter	const SimpleArg & arg	944:24:22467:22486	5387994	0	True				
ANR	5388154	ParameterType	const SimpleArg &		5387994	0					
ANR	5388155	Identifier	arg		5387994	1					
ANR	5388156	CFGEntryNode	ENTRY		5387994		True				
ANR	5388157	CFGExitNode	EXIT		5387994		True				
ANR	5388158	Symbol	m_command		5387994						
ANR	5388159	Symbol	CMD_ACCESS		5387994						
ANR	5388160	Symbol	c		5387994						
ANR	5388161	Symbol	false		5387994						
ANR	5388162	Symbol	CMD_DUMP		5387994						
ANR	5388163	Symbol	strlen		5387994						
ANR	5388164	Symbol	arg . Arg		5387994						
ANR	5388165	Symbol	s		5387994						
ANR	5388166	Symbol	CMD_LIST		5387994						
ANR	5388167	Symbol	arg		5387994						
ANR	5388168	Symbol	true		5387994						
ANR	5388169	Symbol	CMD_DIFF		5387994						
ANR	5388170	Symbol	strcasecmp		5387994						
ANR	5388171	Symbol	* s		5387994						
ANR	5388172	Symbol	CMD_VERIFY		5387994						
ANR	5388173	Function	Options :: dumpFieldList	975:0:23094:23290							
ANR	5388174	FunctionDef	Options :: dumpFieldList ()		5388173	0					
ANR	5388175	CompoundStatement		977:0:23136:23290	5388173	0					
ANR	5388176	IdentifierDeclStatement	const FieldData * field = & fieldList [ 0 ] ;	978:1:23139:23177	5388173	0	True				
ANR	5388177	IdentifierDecl	* field = & fieldList [ 0 ]		5388173	0					
ANR	5388178	IdentifierDeclType	const FieldData *		5388173	0					
ANR	5388179	Identifier	field		5388173	1					
ANR	5388180	AssignmentExpression	* field = & fieldList [ 0 ]		5388173	2		=			
ANR	5388181	Identifier	field		5388173	0					
ANR	5388182	UnaryOperationExpression	& fieldList [ 0 ]		5388173	1					
ANR	5388183	UnaryOperator	&		5388173	0					
ANR	5388184	ArrayIndexing	fieldList [ 0 ]		5388173	1					
ANR	5388185	Identifier	fieldList		5388173	0					
ANR	5388186	PrimaryExpression	0		5388173	1					
ANR	5388187	ForStatement	for ( field = & fieldList [ 0 ] ; field -> m_field != FIELD_NONE ; field ++ )		5388173	1					
ANR	5388188	ForInit	field = & fieldList [ 0 ] ;	979:6:23185:23206	5388173	0	True				
ANR	5388189	AssignmentExpression	field = & fieldList [ 0 ]		5388173	0		=			
ANR	5388190	Identifier	field		5388173	0					
ANR	5388191	UnaryOperationExpression	& fieldList [ 0 ]		5388173	1					
ANR	5388192	UnaryOperator	&		5388173	0					
ANR	5388193	ArrayIndexing	fieldList [ 0 ]		5388173	1					
ANR	5388194	Identifier	fieldList		5388173	0					
ANR	5388195	PrimaryExpression	0		5388173	1					
ANR	5388196	Condition	field -> m_field != FIELD_NONE	979:29:23208:23235	5388173	1	True				
ANR	5388197	EqualityExpression	field -> m_field != FIELD_NONE		5388173	0		!=			
ANR	5388198	PtrMemberAccess	field -> m_field		5388173	0					
ANR	5388199	Identifier	field		5388173	0					
ANR	5388200	Identifier	m_field		5388173	1					
ANR	5388201	Identifier	FIELD_NONE		5388173	1					
ANR	5388202	PostIncDecOperationExpression	field ++	979:59:23238:23244	5388173	2	True				
ANR	5388203	Identifier	field		5388173	0					
ANR	5388204	IncDec	++		5388173	1					
ANR	5388205	CompoundStatement		3:69:111:111	5388173	3					
ANR	5388206	ExpressionStatement	"printf ( ""  %s\\n"" , field -> m_name )"	980:2:23252:23285	5388173	0	True				
ANR	5388207	CallExpression	"printf ( ""  %s\\n"" , field -> m_name )"		5388173	0					
ANR	5388208	Callee	printf		5388173	0					
ANR	5388209	Identifier	printf		5388173	0					
ANR	5388210	ArgumentList	"""  %s\\n"""		5388173	1					
ANR	5388211	Argument	"""  %s\\n"""		5388173	0					
ANR	5388212	PrimaryExpression	"""  %s\\n"""		5388173	0					
ANR	5388213	Argument	field -> m_name		5388173	1					
ANR	5388214	PtrMemberAccess	field -> m_name		5388173	0					
ANR	5388215	Identifier	field		5388173	0					
ANR	5388216	Identifier	m_name		5388173	1					
ANR	5388217	ReturnType	void		5388173	1					
ANR	5388218	Identifier	Options :: dumpFieldList		5388173	2					
ANR	5388219	ParameterList			5388173	3					
ANR	5388220	CFGEntryNode	ENTRY		5388173		True				
ANR	5388221	CFGExitNode	EXIT		5388173		True				
ANR	5388222	Symbol	FIELD_NONE		5388173						
ANR	5388223	Symbol	field		5388173						
ANR	5388224	Symbol	field -> m_name		5388173						
ANR	5388225	Symbol	* field		5388173						
ANR	5388226	Symbol	fieldList		5388173						
ANR	5388227	Symbol	field -> m_field		5388173						
ANR	5388228	Function	Options :: lookupField	984:0:23293:23520							
ANR	5388229	FunctionDef	Options :: lookupField (Field arg)		5388228	0					
ANR	5388230	CompoundStatement		986:0:23351:23520	5388228	0					
ANR	5388231	IdentifierDeclStatement	const FieldData * field ;	987:1:23354:23376	5388228	0	True				
ANR	5388232	IdentifierDecl	* field		5388228	0					
ANR	5388233	IdentifierDeclType	const FieldData *		5388228	0					
ANR	5388234	Identifier	field		5388228	1					
ANR	5388235	ForStatement	for ( field = & fieldList [ 0 ] ; field -> m_field != FIELD_NONE ; field ++ )		5388228	1					
ANR	5388236	ForInit	field = & fieldList [ 0 ] ;	988:6:23384:23405	5388228	0	True				
ANR	5388237	AssignmentExpression	field = & fieldList [ 0 ]		5388228	0		=			
ANR	5388238	Identifier	field		5388228	0					
ANR	5388239	UnaryOperationExpression	& fieldList [ 0 ]		5388228	1					
ANR	5388240	UnaryOperator	&		5388228	0					
ANR	5388241	ArrayIndexing	fieldList [ 0 ]		5388228	1					
ANR	5388242	Identifier	fieldList		5388228	0					
ANR	5388243	PrimaryExpression	0		5388228	1					
ANR	5388244	Condition	field -> m_field != FIELD_NONE	988:29:23407:23434	5388228	1	True				
ANR	5388245	EqualityExpression	field -> m_field != FIELD_NONE		5388228	0		!=			
ANR	5388246	PtrMemberAccess	field -> m_field		5388228	0					
ANR	5388247	Identifier	field		5388228	0					
ANR	5388248	Identifier	m_field		5388228	1					
ANR	5388249	Identifier	FIELD_NONE		5388228	1					
ANR	5388250	PostIncDecOperationExpression	field ++	988:59:23437:23443	5388228	2	True				
ANR	5388251	Identifier	field		5388228	0					
ANR	5388252	IncDec	++		5388228	1					
ANR	5388253	CompoundStatement		3:69:95:95	5388228	3					
ANR	5388254	IfStatement	if ( field -> m_field == arg )		5388228	0					
ANR	5388255	Condition	field -> m_field == arg	989:7:23456:23476	5388228	0	True				
ANR	5388256	EqualityExpression	field -> m_field == arg		5388228	0		==			
ANR	5388257	PtrMemberAccess	field -> m_field		5388228	0					
ANR	5388258	Identifier	field		5388228	0					
ANR	5388259	Identifier	m_field		5388228	1					
ANR	5388260	Identifier	arg		5388228	1					
ANR	5388261	CompoundStatement		4:31:128:128	5388228	1					
ANR	5388262	ReturnStatement	return field ;	990:3:23485:23497	5388228	0	True				
ANR	5388263	Identifier	field		5388228	0					
ANR	5388264	ReturnStatement	return NULL ;	993:1:23507:23518	5388228	2	True				
ANR	5388265	Identifier	NULL		5388228	0					
ANR	5388266	ReturnType	const FieldData *		5388228	1					
ANR	5388267	Identifier	Options :: lookupField		5388228	2					
ANR	5388268	ParameterList	Field arg		5388228	3					
ANR	5388269	Parameter	Field arg	985:22:23333:23341	5388228	0	True				
ANR	5388270	ParameterType	Field		5388228	0					
ANR	5388271	Identifier	arg		5388228	1					
ANR	5388272	CFGEntryNode	ENTRY		5388228		True				
ANR	5388273	CFGExitNode	EXIT		5388228		True				
ANR	5388274	Symbol	FIELD_NONE		5388228						
ANR	5388275	Symbol	NULL		5388228						
ANR	5388276	Symbol	field		5388228						
ANR	5388277	Symbol	arg		5388228						
ANR	5388278	Symbol	* field		5388228						
ANR	5388279	Symbol	field -> m_field		5388228						
ANR	5388280	Symbol	fieldList		5388228						
ANR	5388281	Function	Options :: lookupField	996:0:23523:23772							
ANR	5388282	FunctionDef	Options :: lookupField (const char * arg)		5388281	0					
ANR	5388283	CompoundStatement		998:0:23587:23772	5388281	0					
ANR	5388284	IdentifierDeclStatement	const FieldData * field ;	999:1:23590:23612	5388281	0	True				
ANR	5388285	IdentifierDecl	* field		5388281	0					
ANR	5388286	IdentifierDeclType	const FieldData *		5388281	0					
ANR	5388287	Identifier	field		5388281	1					
ANR	5388288	ForStatement	for ( field = & fieldList [ 0 ] ; field -> m_field != FIELD_NONE ; field ++ )		5388281	1					
ANR	5388289	ForInit	field = & fieldList [ 0 ] ;	1000:6:23620:23641	5388281	0	True				
ANR	5388290	AssignmentExpression	field = & fieldList [ 0 ]		5388281	0		=			
ANR	5388291	Identifier	field		5388281	0					
ANR	5388292	UnaryOperationExpression	& fieldList [ 0 ]		5388281	1					
ANR	5388293	UnaryOperator	&		5388281	0					
ANR	5388294	ArrayIndexing	fieldList [ 0 ]		5388281	1					
ANR	5388295	Identifier	fieldList		5388281	0					
ANR	5388296	PrimaryExpression	0		5388281	1					
ANR	5388297	Condition	field -> m_field != FIELD_NONE	1000:29:23643:23670	5388281	1	True				
ANR	5388298	EqualityExpression	field -> m_field != FIELD_NONE		5388281	0		!=			
ANR	5388299	PtrMemberAccess	field -> m_field		5388281	0					
ANR	5388300	Identifier	field		5388281	0					
ANR	5388301	Identifier	m_field		5388281	1					
ANR	5388302	Identifier	FIELD_NONE		5388281	1					
ANR	5388303	PostIncDecOperationExpression	field ++	1000:59:23673:23679	5388281	2	True				
ANR	5388304	Identifier	field		5388281	0					
ANR	5388305	IncDec	++		5388281	1					
ANR	5388306	CompoundStatement		3:69:95:95	5388281	3					
ANR	5388307	IfStatement	"if ( 0 == strcasecmp ( arg , field -> m_name ) )"		5388281	0					
ANR	5388308	Condition	"0 == strcasecmp ( arg , field -> m_name )"	1001:7:23692:23728	5388281	0	True				
ANR	5388309	EqualityExpression	"0 == strcasecmp ( arg , field -> m_name )"		5388281	0		==			
ANR	5388310	PrimaryExpression	0		5388281	0					
ANR	5388311	CallExpression	"strcasecmp ( arg , field -> m_name )"		5388281	1					
ANR	5388312	Callee	strcasecmp		5388281	0					
ANR	5388313	Identifier	strcasecmp		5388281	0					
ANR	5388314	ArgumentList	arg		5388281	1					
ANR	5388315	Argument	arg		5388281	0					
ANR	5388316	Identifier	arg		5388281	0					
ANR	5388317	Argument	field -> m_name		5388281	1					
ANR	5388318	PtrMemberAccess	field -> m_name		5388281	0					
ANR	5388319	Identifier	field		5388281	0					
ANR	5388320	Identifier	m_name		5388281	1					
ANR	5388321	CompoundStatement		4:47:144:144	5388281	1					
ANR	5388322	ReturnStatement	return field ;	1002:3:23737:23749	5388281	0	True				
ANR	5388323	Identifier	field		5388281	0					
ANR	5388324	ReturnStatement	return NULL ;	1005:1:23759:23770	5388281	2	True				
ANR	5388325	Identifier	NULL		5388281	0					
ANR	5388326	ReturnType	const FieldData *		5388281	1					
ANR	5388327	Identifier	Options :: lookupField		5388281	2					
ANR	5388328	ParameterList	const char * arg		5388281	3					
ANR	5388329	Parameter	const char * arg	997:22:23563:23577	5388281	0	True				
ANR	5388330	ParameterType	const char *		5388281	0					
ANR	5388331	Identifier	arg		5388281	1					
ANR	5388332	CFGEntryNode	ENTRY		5388281		True				
ANR	5388333	CFGExitNode	EXIT		5388281		True				
ANR	5388334	Symbol	FIELD_NONE		5388281						
ANR	5388335	Symbol	NULL		5388281						
ANR	5388336	Symbol	field		5388281						
ANR	5388337	Symbol	arg		5388281						
ANR	5388338	Symbol	field -> m_name		5388281						
ANR	5388339	Symbol	* field		5388281						
ANR	5388340	Symbol	strcasecmp		5388281						
ANR	5388341	Symbol	field -> m_field		5388281						
ANR	5388342	Symbol	fieldList		5388281						
ANR	5388343	Function	Options :: lookupField	1008:0:23775:23880							
ANR	5388344	FunctionDef	Options :: lookupField (const SimpleArg & arg)		5388343	0					
ANR	5388345	CompoundStatement		1010:0:23844:23880	5388343	0					
ANR	5388346	ReturnStatement	return lookupField ( arg . Arg ( ) ) ;	1011:1:23847:23878	5388343	0	True				
ANR	5388347	CallExpression	lookupField ( arg . Arg ( ) )		5388343	0					
ANR	5388348	Callee	lookupField		5388343	0					
ANR	5388349	Identifier	lookupField		5388343	0					
ANR	5388350	ArgumentList	arg . Arg ( )		5388343	1					
ANR	5388351	Argument	arg . Arg ( )		5388343	0					
ANR	5388352	CallExpression	arg . Arg ( )		5388343	0					
ANR	5388353	Callee	arg . Arg		5388343	0					
ANR	5388354	MemberAccess	arg . Arg		5388343	0					
ANR	5388355	Identifier	arg		5388343	0					
ANR	5388356	Identifier	Arg		5388343	1					
ANR	5388357	ArgumentList			5388343	1					
ANR	5388358	ReturnType	const FieldData *		5388343	1					
ANR	5388359	Identifier	Options :: lookupField		5388343	2					
ANR	5388360	ParameterList	const SimpleArg & arg		5388343	3					
ANR	5388361	Parameter	const SimpleArg & arg	1009:22:23815:23834	5388343	0	True				
ANR	5388362	ParameterType	const SimpleArg &		5388343	0					
ANR	5388363	Identifier	arg		5388343	1					
ANR	5388364	CFGEntryNode	ENTRY		5388343		True				
ANR	5388365	CFGExitNode	EXIT		5388343		True				
ANR	5388366	Symbol	lookupField		5388343						
ANR	5388367	Symbol	arg . Arg		5388343						
ANR	5388368	Symbol	arg		5388343						
ANR	5388369	Function	Options :: parseValue	1014:0:23883:25174							
ANR	5388370	FunctionDef	Options :: parseValue (const SimpleArg & arg)		5388369	0					
ANR	5388371	CompoundStatement		1016:0:23932:25174	5388369	0					
ANR	5388372	IdentifierDeclStatement	const char * s = arg . Arg ( ) ;	1017:1:23935:23961	5388369	0	True				
ANR	5388373	IdentifierDecl	* s = arg . Arg ( )		5388369	0					
ANR	5388374	IdentifierDeclType	const char *		5388369	0					
ANR	5388375	Identifier	s		5388369	1					
ANR	5388376	AssignmentExpression	* s = arg . Arg ( )		5388369	2		=			
ANR	5388377	Identifier	s		5388369	0					
ANR	5388378	CallExpression	arg . Arg ( )		5388369	1					
ANR	5388379	Callee	arg . Arg		5388369	0					
ANR	5388380	MemberAccess	arg . Arg		5388369	0					
ANR	5388381	Identifier	arg		5388369	0					
ANR	5388382	Identifier	Arg		5388369	1					
ANR	5388383	ArgumentList			5388369	1					
ANR	5388384	IfStatement	if ( DTYPE_STRING == m_field -> m_type )		5388369	1					
ANR	5388385	Condition	DTYPE_STRING == m_field -> m_type	1018:6:23969:23999	5388369	0	True				
ANR	5388386	EqualityExpression	DTYPE_STRING == m_field -> m_type		5388369	0		==			
ANR	5388387	Identifier	DTYPE_STRING		5388369	0					
ANR	5388388	PtrMemberAccess	m_field -> m_type		5388369	1					
ANR	5388389	Identifier	m_field		5388369	0					
ANR	5388390	Identifier	m_type		5388369	1					
ANR	5388391	CompoundStatement		3:40:70:70	5388369	1					
ANR	5388392	ExpressionStatement	m_value . asStr = s	1019:2:24007:24024	5388369	0	True				
ANR	5388393	AssignmentExpression	m_value . asStr = s		5388369	0		=			
ANR	5388394	MemberAccess	m_value . asStr		5388369	0					
ANR	5388395	Identifier	m_value		5388369	0					
ANR	5388396	Identifier	asStr		5388369	1					
ANR	5388397	Identifier	s		5388369	1					
ANR	5388398	ReturnStatement	return true ;	1020:2:24028:24039	5388369	1	True				
ANR	5388399	Identifier	true		5388369	0					
ANR	5388400	IfStatement	if ( ( DTYPE_INT == m_field -> m_type ) && ( isdigit ( * s ) ) )		5388369	2					
ANR	5388401	Condition	( DTYPE_INT == m_field -> m_type ) && ( isdigit ( * s ) )	1022:6:24050:24100	5388369	0	True				
ANR	5388402	AndExpression	( DTYPE_INT == m_field -> m_type ) && ( isdigit ( * s ) )		5388369	0		&&			
ANR	5388403	EqualityExpression	DTYPE_INT == m_field -> m_type		5388369	0		==			
ANR	5388404	Identifier	DTYPE_INT		5388369	0					
ANR	5388405	PtrMemberAccess	m_field -> m_type		5388369	1					
ANR	5388406	Identifier	m_field		5388369	0					
ANR	5388407	Identifier	m_type		5388369	1					
ANR	5388408	CallExpression	isdigit ( * s )		5388369	1					
ANR	5388409	Callee	isdigit		5388369	0					
ANR	5388410	Identifier	isdigit		5388369	0					
ANR	5388411	ArgumentList	* s		5388369	1					
ANR	5388412	Argument	* s		5388369	0					
ANR	5388413	UnaryOperationExpression	* s		5388369	0					
ANR	5388414	UnaryOperator	*		5388369	0					
ANR	5388415	Identifier	s		5388369	1					
ANR	5388416	CompoundStatement		8:2:175:191	5388369	1					
ANR	5388417	IdentifierDeclStatement	int i = atoi ( s ) ;	1023:2:24108:24124	5388369	0	True				
ANR	5388418	IdentifierDecl	i = atoi ( s )		5388369	0					
ANR	5388419	IdentifierDeclType	int		5388369	0					
ANR	5388420	Identifier	i		5388369	1					
ANR	5388421	AssignmentExpression	i = atoi ( s )		5388369	2		=			
ANR	5388422	Identifier	i		5388369	0					
ANR	5388423	CallExpression	atoi ( s )		5388369	1					
ANR	5388424	Callee	atoi		5388369	0					
ANR	5388425	Identifier	atoi		5388369	0					
ANR	5388426	ArgumentList	s		5388369	1					
ANR	5388427	Argument	s		5388369	0					
ANR	5388428	Identifier	s		5388369	0					
ANR	5388429	IfStatement	if ( 0 == m_num_values )		5388369	1					
ANR	5388430	Condition	0 == m_num_values	1024:7:24133:24149	5388369	0	True				
ANR	5388431	EqualityExpression	0 == m_num_values		5388369	0		==			
ANR	5388432	PrimaryExpression	0		5388369	0					
ANR	5388433	Identifier	m_num_values		5388369	1					
ANR	5388434	CompoundStatement		9:27:220:220	5388369	1					
ANR	5388435	ExpressionStatement	m_value . asInt . asInt = i	1025:3:24158:24181	5388369	0	True				
ANR	5388436	AssignmentExpression	m_value . asInt . asInt = i		5388369	0		=			
ANR	5388437	MemberAccess	m_value . asInt . asInt		5388369	0					
ANR	5388438	MemberAccess	m_value . asInt		5388369	0					
ANR	5388439	Identifier	m_value		5388369	0					
ANR	5388440	Identifier	asInt		5388369	1					
ANR	5388441	Identifier	asInt		5388369	1					
ANR	5388442	Identifier	i		5388369	1					
ANR	5388443	ExpressionStatement	m_value . asRange . minVal . asInt = i	1026:3:24186:24218	5388369	1	True				
ANR	5388444	AssignmentExpression	m_value . asRange . minVal . asInt = i		5388369	0		=			
ANR	5388445	MemberAccess	m_value . asRange . minVal . asInt		5388369	0					
ANR	5388446	MemberAccess	m_value . asRange . minVal		5388369	0					
ANR	5388447	MemberAccess	m_value . asRange		5388369	0					
ANR	5388448	Identifier	m_value		5388369	0					
ANR	5388449	Identifier	asRange		5388369	1					
ANR	5388450	Identifier	minVal		5388369	1					
ANR	5388451	Identifier	asInt		5388369	1					
ANR	5388452	Identifier	i		5388369	1					
ANR	5388453	ExpressionStatement	m_value . asRange . maxVal . asInt = i	1027:3:24223:24255	5388369	2	True				
ANR	5388454	AssignmentExpression	m_value . asRange . maxVal . asInt = i		5388369	0		=			
ANR	5388455	MemberAccess	m_value . asRange . maxVal . asInt		5388369	0					
ANR	5388456	MemberAccess	m_value . asRange . maxVal		5388369	0					
ANR	5388457	MemberAccess	m_value . asRange		5388369	0					
ANR	5388458	Identifier	m_value		5388369	0					
ANR	5388459	Identifier	asRange		5388369	1					
ANR	5388460	Identifier	maxVal		5388369	1					
ANR	5388461	Identifier	asInt		5388369	1					
ANR	5388462	Identifier	i		5388369	1					
ANR	5388463	ElseStatement	else		5388369	0					
ANR	5388464	CompoundStatement		14:7:335:335	5388369	0					
ANR	5388465	ExpressionStatement	m_value . asRange . maxVal . asInt = i	1030:3:24273:24305	5388369	0	True				
ANR	5388466	AssignmentExpression	m_value . asRange . maxVal . asInt = i		5388369	0		=			
ANR	5388467	MemberAccess	m_value . asRange . maxVal . asInt		5388369	0					
ANR	5388468	MemberAccess	m_value . asRange . maxVal		5388369	0					
ANR	5388469	MemberAccess	m_value . asRange		5388369	0					
ANR	5388470	Identifier	m_value		5388369	0					
ANR	5388471	Identifier	asRange		5388369	1					
ANR	5388472	Identifier	maxVal		5388369	1					
ANR	5388473	Identifier	asInt		5388369	1					
ANR	5388474	Identifier	i		5388369	1					
ANR	5388475	ExpressionStatement	m_value_is_range = true	1031:3:24310:24333	5388369	1	True				
ANR	5388476	AssignmentExpression	m_value_is_range = true		5388369	0		=			
ANR	5388477	Identifier	m_value_is_range		5388369	0					
ANR	5388478	Identifier	true		5388369	1					
ANR	5388479	ReturnStatement	return true ;	1033:2:24341:24352	5388369	2	True				
ANR	5388480	Identifier	true		5388369	0					
ANR	5388481	IfStatement	if ( ( DTYPE_FSIZE == m_field -> m_type ) && ( isdigit ( * s ) ) )		5388369	3					
ANR	5388482	Condition	( DTYPE_FSIZE == m_field -> m_type ) && ( isdigit ( * s ) )	1035:6:24363:24415	5388369	0	True				
ANR	5388483	AndExpression	( DTYPE_FSIZE == m_field -> m_type ) && ( isdigit ( * s ) )		5388369	0		&&			
ANR	5388484	EqualityExpression	DTYPE_FSIZE == m_field -> m_type		5388369	0		==			
ANR	5388485	Identifier	DTYPE_FSIZE		5388369	0					
ANR	5388486	PtrMemberAccess	m_field -> m_type		5388369	1					
ANR	5388487	Identifier	m_field		5388369	0					
ANR	5388488	Identifier	m_type		5388369	1					
ANR	5388489	CallExpression	isdigit ( * s )		5388369	1					
ANR	5388490	Callee	isdigit		5388369	0					
ANR	5388491	Identifier	isdigit		5388369	0					
ANR	5388492	ArgumentList	* s		5388369	1					
ANR	5388493	Argument	* s		5388369	0					
ANR	5388494	UnaryOperationExpression	* s		5388369	0					
ANR	5388495	UnaryOperator	*		5388369	0					
ANR	5388496	Identifier	s		5388369	1					
ANR	5388497	CompoundStatement		21:2:490:526	5388369	1					
ANR	5388498	IdentifierDeclStatement	filesize_t i = ( filesize_t ) atol ( s ) ;	1036:2:24423:24459	5388369	0	True				
ANR	5388499	IdentifierDecl	i = ( filesize_t ) atol ( s )		5388369	0					
ANR	5388500	IdentifierDeclType	filesize_t		5388369	0					
ANR	5388501	Identifier	i		5388369	1					
ANR	5388502	AssignmentExpression	i = ( filesize_t ) atol ( s )		5388369	2		=			
ANR	5388503	Identifier	i		5388369	0					
ANR	5388504	CastExpression	( filesize_t ) atol ( s )		5388369	1					
ANR	5388505	CastTarget	filesize_t		5388369	0					
ANR	5388506	CallExpression	atol ( s )		5388369	1					
ANR	5388507	Callee	atol		5388369	0					
ANR	5388508	Identifier	atol		5388369	0					
ANR	5388509	ArgumentList	s		5388369	1					
ANR	5388510	Argument	s		5388369	0					
ANR	5388511	Identifier	s		5388369	0					
ANR	5388512	IfStatement	if ( 0 == m_num_values )		5388369	1					
ANR	5388513	Condition	0 == m_num_values	1037:7:24468:24484	5388369	0	True				
ANR	5388514	EqualityExpression	0 == m_num_values		5388369	0		==			
ANR	5388515	PrimaryExpression	0		5388369	0					
ANR	5388516	Identifier	m_num_values		5388369	1					
ANR	5388517	CompoundStatement		22:27:555:555	5388369	1					
ANR	5388518	ExpressionStatement	m_value . asInt . asFsize = i	1038:3:24493:24518	5388369	0	True				
ANR	5388519	AssignmentExpression	m_value . asInt . asFsize = i		5388369	0		=			
ANR	5388520	MemberAccess	m_value . asInt . asFsize		5388369	0					
ANR	5388521	MemberAccess	m_value . asInt		5388369	0					
ANR	5388522	Identifier	m_value		5388369	0					
ANR	5388523	Identifier	asInt		5388369	1					
ANR	5388524	Identifier	asFsize		5388369	1					
ANR	5388525	Identifier	i		5388369	1					
ANR	5388526	ExpressionStatement	m_value . asRange . minVal . asFsize = i	1039:3:24523:24557	5388369	1	True				
ANR	5388527	AssignmentExpression	m_value . asRange . minVal . asFsize = i		5388369	0		=			
ANR	5388528	MemberAccess	m_value . asRange . minVal . asFsize		5388369	0					
ANR	5388529	MemberAccess	m_value . asRange . minVal		5388369	0					
ANR	5388530	MemberAccess	m_value . asRange		5388369	0					
ANR	5388531	Identifier	m_value		5388369	0					
ANR	5388532	Identifier	asRange		5388369	1					
ANR	5388533	Identifier	minVal		5388369	1					
ANR	5388534	Identifier	asFsize		5388369	1					
ANR	5388535	Identifier	i		5388369	1					
ANR	5388536	ExpressionStatement	m_value . asRange . maxVal . asFsize = i	1040:3:24562:24596	5388369	2	True				
ANR	5388537	AssignmentExpression	m_value . asRange . maxVal . asFsize = i		5388369	0		=			
ANR	5388538	MemberAccess	m_value . asRange . maxVal . asFsize		5388369	0					
ANR	5388539	MemberAccess	m_value . asRange . maxVal		5388369	0					
ANR	5388540	MemberAccess	m_value . asRange		5388369	0					
ANR	5388541	Identifier	m_value		5388369	0					
ANR	5388542	Identifier	asRange		5388369	1					
ANR	5388543	Identifier	maxVal		5388369	1					
ANR	5388544	Identifier	asFsize		5388369	1					
ANR	5388545	Identifier	i		5388369	1					
ANR	5388546	ElseStatement	else		5388369	0					
ANR	5388547	CompoundStatement		27:7:676:676	5388369	0					
ANR	5388548	ExpressionStatement	m_value . asRange . maxVal . asFsize = i	1043:3:24614:24648	5388369	0	True				
ANR	5388549	AssignmentExpression	m_value . asRange . maxVal . asFsize = i		5388369	0		=			
ANR	5388550	MemberAccess	m_value . asRange . maxVal . asFsize		5388369	0					
ANR	5388551	MemberAccess	m_value . asRange . maxVal		5388369	0					
ANR	5388552	MemberAccess	m_value . asRange		5388369	0					
ANR	5388553	Identifier	m_value		5388369	0					
ANR	5388554	Identifier	asRange		5388369	1					
ANR	5388555	Identifier	maxVal		5388369	1					
ANR	5388556	Identifier	asFsize		5388369	1					
ANR	5388557	Identifier	i		5388369	1					
ANR	5388558	ExpressionStatement	m_value_is_range = true	1044:3:24653:24676	5388369	1	True				
ANR	5388559	AssignmentExpression	m_value_is_range = true		5388369	0		=			
ANR	5388560	Identifier	m_value_is_range		5388369	0					
ANR	5388561	Identifier	true		5388369	1					
ANR	5388562	ReturnStatement	return true ;	1046:2:24684:24695	5388369	2	True				
ANR	5388563	Identifier	true		5388369	0					
ANR	5388564	IfStatement	if ( ( DTYPE_TIME == m_field -> m_type ) && ( isdigit ( * s ) ) )		5388369	4					
ANR	5388565	Condition	( DTYPE_TIME == m_field -> m_type ) && ( isdigit ( * s ) )	1048:6:24706:24757	5388369	0	True				
ANR	5388566	AndExpression	( DTYPE_TIME == m_field -> m_type ) && ( isdigit ( * s ) )		5388369	0		&&			
ANR	5388567	EqualityExpression	DTYPE_TIME == m_field -> m_type		5388369	0		==			
ANR	5388568	Identifier	DTYPE_TIME		5388369	0					
ANR	5388569	PtrMemberAccess	m_field -> m_type		5388369	1					
ANR	5388570	Identifier	m_field		5388369	0					
ANR	5388571	Identifier	m_type		5388369	1					
ANR	5388572	CallExpression	isdigit ( * s )		5388369	1					
ANR	5388573	Callee	isdigit		5388369	0					
ANR	5388574	Identifier	isdigit		5388369	0					
ANR	5388575	ArgumentList	* s		5388369	1					
ANR	5388576	Argument	* s		5388369	0					
ANR	5388577	UnaryOperationExpression	* s		5388369	0					
ANR	5388578	UnaryOperator	*		5388369	0					
ANR	5388579	Identifier	s		5388369	1					
ANR	5388580	CompoundStatement		34:2:832:860	5388369	1					
ANR	5388581	IdentifierDeclStatement	time_t i = ( time_t ) atol ( s ) ;	1049:2:24765:24793	5388369	0	True				
ANR	5388582	IdentifierDecl	i = ( time_t ) atol ( s )		5388369	0					
ANR	5388583	IdentifierDeclType	time_t		5388369	0					
ANR	5388584	Identifier	i		5388369	1					
ANR	5388585	AssignmentExpression	i = ( time_t ) atol ( s )		5388369	2		=			
ANR	5388586	Identifier	i		5388369	0					
ANR	5388587	CastExpression	( time_t ) atol ( s )		5388369	1					
ANR	5388588	CastTarget	time_t		5388369	0					
ANR	5388589	CallExpression	atol ( s )		5388369	1					
ANR	5388590	Callee	atol		5388369	0					
ANR	5388591	Identifier	atol		5388369	0					
ANR	5388592	ArgumentList	s		5388369	1					
ANR	5388593	Argument	s		5388369	0					
ANR	5388594	Identifier	s		5388369	0					
ANR	5388595	IfStatement	if ( 0 == m_num_values )		5388369	1					
ANR	5388596	Condition	0 == m_num_values	1050:7:24802:24818	5388369	0	True				
ANR	5388597	EqualityExpression	0 == m_num_values		5388369	0		==			
ANR	5388598	PrimaryExpression	0		5388369	0					
ANR	5388599	Identifier	m_num_values		5388369	1					
ANR	5388600	CompoundStatement		35:27:889:889	5388369	1					
ANR	5388601	ExpressionStatement	m_value . asInt . asTime = i	1051:3:24827:24851	5388369	0	True				
ANR	5388602	AssignmentExpression	m_value . asInt . asTime = i		5388369	0		=			
ANR	5388603	MemberAccess	m_value . asInt . asTime		5388369	0					
ANR	5388604	MemberAccess	m_value . asInt		5388369	0					
ANR	5388605	Identifier	m_value		5388369	0					
ANR	5388606	Identifier	asInt		5388369	1					
ANR	5388607	Identifier	asTime		5388369	1					
ANR	5388608	Identifier	i		5388369	1					
ANR	5388609	ExpressionStatement	m_value . asRange . minVal . asTime = i	1052:3:24856:24889	5388369	1	True				
ANR	5388610	AssignmentExpression	m_value . asRange . minVal . asTime = i		5388369	0		=			
ANR	5388611	MemberAccess	m_value . asRange . minVal . asTime		5388369	0					
ANR	5388612	MemberAccess	m_value . asRange . minVal		5388369	0					
ANR	5388613	MemberAccess	m_value . asRange		5388369	0					
ANR	5388614	Identifier	m_value		5388369	0					
ANR	5388615	Identifier	asRange		5388369	1					
ANR	5388616	Identifier	minVal		5388369	1					
ANR	5388617	Identifier	asTime		5388369	1					
ANR	5388618	Identifier	i		5388369	1					
ANR	5388619	ExpressionStatement	m_value . asRange . maxVal . asTime = i	1053:3:24894:24927	5388369	2	True				
ANR	5388620	AssignmentExpression	m_value . asRange . maxVal . asTime = i		5388369	0		=			
ANR	5388621	MemberAccess	m_value . asRange . maxVal . asTime		5388369	0					
ANR	5388622	MemberAccess	m_value . asRange . maxVal		5388369	0					
ANR	5388623	MemberAccess	m_value . asRange		5388369	0					
ANR	5388624	Identifier	m_value		5388369	0					
ANR	5388625	Identifier	asRange		5388369	1					
ANR	5388626	Identifier	maxVal		5388369	1					
ANR	5388627	Identifier	asTime		5388369	1					
ANR	5388628	Identifier	i		5388369	1					
ANR	5388629	ElseStatement	else		5388369	0					
ANR	5388630	CompoundStatement		40:7:1007:1007	5388369	0					
ANR	5388631	ExpressionStatement	m_value . asRange . maxVal . asTime = i	1056:3:24945:24978	5388369	0	True				
ANR	5388632	AssignmentExpression	m_value . asRange . maxVal . asTime = i		5388369	0		=			
ANR	5388633	MemberAccess	m_value . asRange . maxVal . asTime		5388369	0					
ANR	5388634	MemberAccess	m_value . asRange . maxVal		5388369	0					
ANR	5388635	MemberAccess	m_value . asRange		5388369	0					
ANR	5388636	Identifier	m_value		5388369	0					
ANR	5388637	Identifier	asRange		5388369	1					
ANR	5388638	Identifier	maxVal		5388369	1					
ANR	5388639	Identifier	asTime		5388369	1					
ANR	5388640	Identifier	i		5388369	1					
ANR	5388641	ExpressionStatement	m_value_is_range = true	1057:3:24983:25006	5388369	1	True				
ANR	5388642	AssignmentExpression	m_value_is_range = true		5388369	0		=			
ANR	5388643	Identifier	m_value_is_range		5388369	0					
ANR	5388644	Identifier	true		5388369	1					
ANR	5388645	ReturnStatement	return true ;	1059:2:25014:25025	5388369	2	True				
ANR	5388646	Identifier	true		5388369	0					
ANR	5388647	IfStatement	if ( ( DTYPE_INODE == m_field -> m_type ) && ( isdigit ( * s ) ) )		5388369	5					
ANR	5388648	Condition	( DTYPE_INODE == m_field -> m_type ) && ( isdigit ( * s ) )	1061:6:25036:25088	5388369	0	True				
ANR	5388649	AndExpression	( DTYPE_INODE == m_field -> m_type ) && ( isdigit ( * s ) )		5388369	0		&&			
ANR	5388650	EqualityExpression	DTYPE_INODE == m_field -> m_type		5388369	0		==			
ANR	5388651	Identifier	DTYPE_INODE		5388369	0					
ANR	5388652	PtrMemberAccess	m_field -> m_type		5388369	1					
ANR	5388653	Identifier	m_field		5388369	0					
ANR	5388654	Identifier	m_type		5388369	1					
ANR	5388655	CallExpression	isdigit ( * s )		5388369	1					
ANR	5388656	Callee	isdigit		5388369	0					
ANR	5388657	Identifier	isdigit		5388369	0					
ANR	5388658	ArgumentList	* s		5388369	1					
ANR	5388659	Argument	* s		5388369	0					
ANR	5388660	UnaryOperationExpression	* s		5388369	0					
ANR	5388661	UnaryOperator	*		5388369	0					
ANR	5388662	Identifier	s		5388369	1					
ANR	5388663	CompoundStatement		46:62:1159:1159	5388369	1					
ANR	5388664	ExpressionStatement	m_value . asInode = ( StatStructInode ) atol ( s )	1062:2:25096:25139	5388369	0	True				
ANR	5388665	AssignmentExpression	m_value . asInode = ( StatStructInode ) atol ( s )		5388369	0		=			
ANR	5388666	MemberAccess	m_value . asInode		5388369	0					
ANR	5388667	Identifier	m_value		5388369	0					
ANR	5388668	Identifier	asInode		5388369	1					
ANR	5388669	CastExpression	( StatStructInode ) atol ( s )		5388369	1					
ANR	5388670	CastTarget	StatStructInode		5388369	0					
ANR	5388671	CallExpression	atol ( s )		5388369	1					
ANR	5388672	Callee	atol		5388369	0					
ANR	5388673	Identifier	atol		5388369	0					
ANR	5388674	ArgumentList	s		5388369	1					
ANR	5388675	Argument	s		5388369	0					
ANR	5388676	Identifier	s		5388369	0					
ANR	5388677	ReturnStatement	return true ;	1063:2:25143:25154	5388369	1	True				
ANR	5388678	Identifier	true		5388369	0					
ANR	5388679	ReturnStatement	return false ;	1065:1:25160:25172	5388369	6	True				
ANR	5388680	Identifier	false		5388369	0					
ANR	5388681	ReturnType	bool		5388369	1					
ANR	5388682	Identifier	Options :: parseValue		5388369	2					
ANR	5388683	ParameterList	const SimpleArg & arg		5388369	3					
ANR	5388684	Parameter	const SimpleArg & arg	1015:21:23909:23928	5388369	0	True				
ANR	5388685	ParameterType	const SimpleArg &		5388369	0					
ANR	5388686	Identifier	arg		5388369	1					
ANR	5388687	CFGEntryNode	ENTRY		5388369		True				
ANR	5388688	CFGExitNode	EXIT		5388369		True				
ANR	5388689	Symbol	m_num_values		5388369						
ANR	5388690	Symbol	m_value . asInode		5388369						
ANR	5388691	Symbol	m_value . asRange . minVal		5388369						
ANR	5388692	Symbol	m_value . asStr		5388369						
ANR	5388693	Symbol	m_value . asInt		5388369						
ANR	5388694	Symbol	m_value . asInt . asFsize		5388369						
ANR	5388695	Symbol	m_value		5388369						
ANR	5388696	Symbol	m_value . asRange . maxVal . asInt		5388369						
ANR	5388697	Symbol	arg		5388369						
ANR	5388698	Symbol	DTYPE_INT		5388369						
ANR	5388699	Symbol	m_value . asInt . asInt		5388369						
ANR	5388700	Symbol	m_field		5388369						
ANR	5388701	Symbol	m_value . asRange . minVal . asFsize		5388369						
ANR	5388702	Symbol	m_value . asRange . maxVal . asFsize		5388369						
ANR	5388703	Symbol	DTYPE_STRING		5388369						
ANR	5388704	Symbol	isdigit		5388369						
ANR	5388705	Symbol	DTYPE_INODE		5388369						
ANR	5388706	Symbol	m_value_is_range		5388369						
ANR	5388707	Symbol	* m_field		5388369						
ANR	5388708	Symbol	atoi		5388369						
ANR	5388709	Symbol	m_value . asRange . minVal . asInt		5388369						
ANR	5388710	Symbol	m_value . asRange . maxVal		5388369						
ANR	5388711	Symbol	m_value . asInt . asTime		5388369						
ANR	5388712	Symbol	m_value . asRange		5388369						
ANR	5388713	Symbol	false		5388369						
ANR	5388714	Symbol	i		5388369						
ANR	5388715	Symbol	m_field -> m_type		5388369						
ANR	5388716	Symbol	DTYPE_FSIZE		5388369						
ANR	5388717	Symbol	m_value . asRange . minVal . asTime		5388369						
ANR	5388718	Symbol	arg . Arg		5388369						
ANR	5388719	Symbol	m_value . asRange . maxVal . asTime		5388369						
ANR	5388720	Symbol	s		5388369						
ANR	5388721	Symbol	true		5388369						
ANR	5388722	Symbol	* s		5388369						
ANR	5388723	Symbol	atol		5388369						
ANR	5388724	Symbol	DTYPE_TIME		5388369						
