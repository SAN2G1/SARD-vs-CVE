command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1713715	File	data/converged/CVE-2011-4930_htcondor/job_ckpt_standalone_std.c								
ANR	1713716	ClassDef	Frame	57:0:2429:2708							
ANR	1713717	DeclStmt									
ANR	1713718	Decl							int	int	value
ANR	1713719	DeclStmt									
ANR	1713720	Decl							int	int *	data
ANR	1713721	DeclStmt									
ANR	1713722	Decl							int	int	size
ANR	1713723	DeclStmt									
ANR	1713724	Decl							struct Frame	struct Frame *	previous
ANR	1713725	DeclStmt									
ANR	1713726	Decl							void	"void ( int * data , int size , int value )"	init_data
ANR	1713727	DeclStmt									
ANR	1713728	Decl							int	"int ( struct Frame * pf , int old_value )"	deepen
ANR	1713729	DeclStmt									
ANR	1713730	Decl							int	"int ( struct Frame * f , int value )"	is_stack_valid
ANR	1713731	DeclStmt									
ANR	1713732	Decl							int	"int ( int * data , int size , int value )"	data_valid
ANR	1713733	DeclStmt									
ANR	1713734	Decl							int	int	g_sum
ANR	1713735	DeclStmt									
ANR	1713736	Decl							int	int *	g_heap1
ANR	1713737	DeclStmt									
ANR	1713738	Decl							int	int *	g_heap2
ANR	1713739	DeclStmt									
ANR	1713740	Decl							int	int	g_heap_size
ANR	1713741	Function	main	83:0:3200:4537							
ANR	1713742	FunctionDef	main ()		1713741	0					
ANR	1713743	CompoundStatement		84:0:3215:4537	1713741	0					
ANR	1713744	IdentifierDeclStatement	int data [ STACKINCREMENT ] ;	86:1:3293:3317	1713741	0	True				
ANR	1713745	IdentifierDecl	data [ STACKINCREMENT ]		1713741	0					
ANR	1713746	IdentifierDeclType	int [ STACKINCREMENT ]		1713741	0					
ANR	1713747	Identifier	data		1713741	1					
ANR	1713748	Identifier	STACKINCREMENT		1713741	2					
ANR	1713749	IdentifierDeclStatement	struct Frame f ;	87:1:3320:3334	1713741	1	True				
ANR	1713750	IdentifierDecl	f		1713741	0					
ANR	1713751	IdentifierDeclType	struct Frame		1713741	0					
ANR	1713752	Identifier	f		1713741	1					
ANR	1713753	IdentifierDeclStatement	int validity ;	88:1:3337:3349	1713741	2	True				
ANR	1713754	IdentifierDecl	validity		1713741	0					
ANR	1713755	IdentifierDeclType	int		1713741	0					
ANR	1713756	Identifier	validity		1713741	1					
ANR	1713757	IdentifierDeclStatement	"int a , b , c ;"	89:1:3352:3363	1713741	3	True				
ANR	1713758	IdentifierDecl	a		1713741	0					
ANR	1713759	IdentifierDeclType	int		1713741	0					
ANR	1713760	Identifier	a		1713741	1					
ANR	1713761	IdentifierDecl	b		1713741	1					
ANR	1713762	IdentifierDeclType	int		1713741	0					
ANR	1713763	Identifier	b		1713741	1					
ANR	1713764	IdentifierDecl	c		1713741	2					
ANR	1713765	IdentifierDeclType	int		1713741	0					
ANR	1713766	Identifier	c		1713741	1					
ANR	1713767	ExpressionStatement	"init_data ( data , STACKINCREMENT , 0 )"	91:1:3367:3401	1713741	4	True				
ANR	1713768	CallExpression	"init_data ( data , STACKINCREMENT , 0 )"		1713741	0					
ANR	1713769	Callee	init_data		1713741	0					
ANR	1713770	Identifier	init_data		1713741	0					
ANR	1713771	ArgumentList	data		1713741	1					
ANR	1713772	Argument	data		1713741	0					
ANR	1713773	Identifier	data		1713741	0					
ANR	1713774	Argument	STACKINCREMENT		1713741	1					
ANR	1713775	Identifier	STACKINCREMENT		1713741	0					
ANR	1713776	Argument	0		1713741	2					
ANR	1713777	PrimaryExpression	0		1713741	0					
ANR	1713778	ExpressionStatement	f . value = 0	96:1:3660:3671	1713741	5	True				
ANR	1713779	AssignmentExpression	f . value = 0		1713741	0		=			
ANR	1713780	MemberAccess	f . value		1713741	0					
ANR	1713781	Identifier	f		1713741	0					
ANR	1713782	Identifier	value		1713741	1					
ANR	1713783	PrimaryExpression	0		1713741	1					
ANR	1713784	ExpressionStatement	f . data = & data [ 0 ]	97:1:3675:3692	1713741	6	True				
ANR	1713785	AssignmentExpression	f . data = & data [ 0 ]		1713741	0		=			
ANR	1713786	MemberAccess	f . data		1713741	0					
ANR	1713787	Identifier	f		1713741	0					
ANR	1713788	Identifier	data		1713741	1					
ANR	1713789	UnaryOperationExpression	& data [ 0 ]		1713741	1					
ANR	1713790	UnaryOperator	&		1713741	0					
ANR	1713791	ArrayIndexing	data [ 0 ]		1713741	1					
ANR	1713792	Identifier	data		1713741	0					
ANR	1713793	PrimaryExpression	0		1713741	1					
ANR	1713794	ExpressionStatement	f . size = STACKINCREMENT	98:1:3695:3718	1713741	7	True				
ANR	1713795	AssignmentExpression	f . size = STACKINCREMENT		1713741	0		=			
ANR	1713796	MemberAccess	f . size		1713741	0					
ANR	1713797	Identifier	f		1713741	0					
ANR	1713798	Identifier	size		1713741	1					
ANR	1713799	Identifier	STACKINCREMENT		1713741	1					
ANR	1713800	ExpressionStatement	f . previous = NULL	99:1:3721:3738	1713741	8	True				
ANR	1713801	AssignmentExpression	f . previous = NULL		1713741	0		=			
ANR	1713802	MemberAccess	f . previous		1713741	0					
ANR	1713803	Identifier	f		1713741	0					
ANR	1713804	Identifier	previous		1713741	1					
ANR	1713805	Identifier	NULL		1713741	1					
ANR	1713806	ExpressionStatement	g_sum += STACKINCREMENT	100:1:3741:3764	1713741	9	True				
ANR	1713807	AssignmentExpression	g_sum += STACKINCREMENT		1713741	0		+=			
ANR	1713808	Identifier	g_sum		1713741	0					
ANR	1713809	Identifier	STACKINCREMENT		1713741	1					
ANR	1713810	ExpressionStatement	"a = is_stack_valid ( & f , 0 )"	102:1:3811:3836	1713741	10	True				
ANR	1713811	AssignmentExpression	"a = is_stack_valid ( & f , 0 )"		1713741	0		=			
ANR	1713812	Identifier	a		1713741	0					
ANR	1713813	CallExpression	"is_stack_valid ( & f , 0 )"		1713741	1					
ANR	1713814	Callee	is_stack_valid		1713741	0					
ANR	1713815	Identifier	is_stack_valid		1713741	0					
ANR	1713816	ArgumentList	& f		1713741	1					
ANR	1713817	Argument	& f		1713741	0					
ANR	1713818	UnaryOperationExpression	& f		1713741	0					
ANR	1713819	UnaryOperator	&		1713741	0					
ANR	1713820	Identifier	f		1713741	1					
ANR	1713821	Argument	0		1713741	1					
ANR	1713822	PrimaryExpression	0		1713741	0					
ANR	1713823	ExpressionStatement	"printf ( ""Deepness Level: %d\\n"" , 0 )"	103:1:3839:3872	1713741	11	True				
ANR	1713824	CallExpression	"printf ( ""Deepness Level: %d\\n"" , 0 )"		1713741	0					
ANR	1713825	Callee	printf		1713741	0					
ANR	1713826	Identifier	printf		1713741	0					
ANR	1713827	ArgumentList	"""Deepness Level: %d\\n"""		1713741	1					
ANR	1713828	Argument	"""Deepness Level: %d\\n"""		1713741	0					
ANR	1713829	PrimaryExpression	"""Deepness Level: %d\\n"""		1713741	0					
ANR	1713830	Argument	0		1713741	1					
ANR	1713831	PrimaryExpression	0		1713741	0					
ANR	1713832	ExpressionStatement	"b = deepen ( & f , 0 )"	104:1:3875:3892	1713741	12	True				
ANR	1713833	AssignmentExpression	"b = deepen ( & f , 0 )"		1713741	0		=			
ANR	1713834	Identifier	b		1713741	0					
ANR	1713835	CallExpression	"deepen ( & f , 0 )"		1713741	1					
ANR	1713836	Callee	deepen		1713741	0					
ANR	1713837	Identifier	deepen		1713741	0					
ANR	1713838	ArgumentList	& f		1713741	1					
ANR	1713839	Argument	& f		1713741	0					
ANR	1713840	UnaryOperationExpression	& f		1713741	0					
ANR	1713841	UnaryOperator	&		1713741	0					
ANR	1713842	Identifier	f		1713741	1					
ANR	1713843	Argument	0		1713741	1					
ANR	1713844	PrimaryExpression	0		1713741	0					
ANR	1713845	ExpressionStatement	"printf ( ""Backchecking %d\\n"" , 0 ) , c = is_stack_valid ( & f , 0 )"	105:1:3895:3954	1713741	13	True				
ANR	1713846	Expression	"printf ( ""Backchecking %d\\n"" , 0 ) , c = is_stack_valid ( & f , 0 )"		1713741	0					
ANR	1713847	CallExpression	"printf ( ""Backchecking %d\\n"" , 0 )"		1713741	0					
ANR	1713848	Callee	printf		1713741	0					
ANR	1713849	Identifier	printf		1713741	0					
ANR	1713850	ArgumentList	"""Backchecking %d\\n"""		1713741	1					
ANR	1713851	Argument	"""Backchecking %d\\n"""		1713741	0					
ANR	1713852	PrimaryExpression	"""Backchecking %d\\n"""		1713741	0					
ANR	1713853	Argument	0		1713741	1					
ANR	1713854	PrimaryExpression	0		1713741	0					
ANR	1713855	AssignmentExpression	"c = is_stack_valid ( & f , 0 )"		1713741	1		=			
ANR	1713856	Identifier	c		1713741	0					
ANR	1713857	CallExpression	"is_stack_valid ( & f , 0 )"		1713741	1					
ANR	1713858	Callee	is_stack_valid		1713741	0					
ANR	1713859	Identifier	is_stack_valid		1713741	0					
ANR	1713860	ArgumentList	& f		1713741	1					
ANR	1713861	Argument	& f		1713741	0					
ANR	1713862	UnaryOperationExpression	& f		1713741	0					
ANR	1713863	UnaryOperator	&		1713741	0					
ANR	1713864	Identifier	f		1713741	1					
ANR	1713865	Argument	0		1713741	1					
ANR	1713866	PrimaryExpression	0		1713741	0					
ANR	1713867	ExpressionStatement	validity = a && b && c	107:1:3957:3979	1713741	14	True				
ANR	1713868	AssignmentExpression	validity = a && b && c		1713741	0		=			
ANR	1713869	Identifier	validity		1713741	0					
ANR	1713870	AndExpression	a && b && c		1713741	1		&&			
ANR	1713871	Identifier	a		1713741	0					
ANR	1713872	AndExpression	b && c		1713741	1		&&			
ANR	1713873	Identifier	b		1713741	0					
ANR	1713874	Identifier	c		1713741	1					
ANR	1713875	IfStatement	if ( validity == FALSE )		1713741	15					
ANR	1713876	Condition	validity == FALSE	108:5:3986:4002	1713741	0	True				
ANR	1713877	EqualityExpression	validity == FALSE		1713741	0		==			
ANR	1713878	Identifier	validity		1713741	0					
ANR	1713879	Identifier	FALSE		1713741	1					
ANR	1713880	CompoundStatement		25:24:789:789	1713741	1					
ANR	1713881	ExpressionStatement	"printf ( ""Stack failure.\\n"" )"	109:2:4009:4035	1713741	0	True				
ANR	1713882	CallExpression	"printf ( ""Stack failure.\\n"" )"		1713741	0					
ANR	1713883	Callee	printf		1713741	0					
ANR	1713884	Identifier	printf		1713741	0					
ANR	1713885	ArgumentList	"""Stack failure.\\n"""		1713741	1					
ANR	1713886	Argument	"""Stack failure.\\n"""		1713741	0					
ANR	1713887	PrimaryExpression	"""Stack failure.\\n"""		1713741	0					
ANR	1713888	ExpressionStatement	"printf ( ""FAILED\\n"" )"	110:2:4039:4057	1713741	1	True				
ANR	1713889	CallExpression	"printf ( ""FAILED\\n"" )"		1713741	0					
ANR	1713890	Callee	printf		1713741	0					
ANR	1713891	Identifier	printf		1713741	0					
ANR	1713892	ArgumentList	"""FAILED\\n"""		1713741	1					
ANR	1713893	Argument	"""FAILED\\n"""		1713741	0					
ANR	1713894	PrimaryExpression	"""FAILED\\n"""		1713741	0					
ANR	1713895	ExpressionStatement	exit ( EXIT_FAILURE )	111:2:4061:4079	1713741	2	True				
ANR	1713896	CallExpression	exit ( EXIT_FAILURE )		1713741	0					
ANR	1713897	Callee	exit		1713741	0					
ANR	1713898	Identifier	exit		1713741	0					
ANR	1713899	ArgumentList	EXIT_FAILURE		1713741	1					
ANR	1713900	Argument	EXIT_FAILURE		1713741	0					
ANR	1713901	Identifier	EXIT_FAILURE		1713741	0					
ANR	1713902	ExpressionStatement	"printf ( ""Checking allocated memory heaps.\\n"" )"	114:1:4086:4130	1713741	16	True				
ANR	1713903	CallExpression	"printf ( ""Checking allocated memory heaps.\\n"" )"		1713741	0					
ANR	1713904	Callee	printf		1713741	0					
ANR	1713905	Identifier	printf		1713741	0					
ANR	1713906	ArgumentList	"""Checking allocated memory heaps.\\n"""		1713741	1					
ANR	1713907	Argument	"""Checking allocated memory heaps.\\n"""		1713741	0					
ANR	1713908	PrimaryExpression	"""Checking allocated memory heaps.\\n"""		1713741	0					
ANR	1713909	IfStatement	"if ( data_valid ( g_heap1 , g_heap_size , 0xdeadbeef ) == FALSE )"		1713741	17					
ANR	1713910	Condition	"data_valid ( g_heap1 , g_heap_size , 0xdeadbeef ) == FALSE"	115:5:4137:4189	1713741	0	True				
ANR	1713911	EqualityExpression	"data_valid ( g_heap1 , g_heap_size , 0xdeadbeef ) == FALSE"		1713741	0		==			
ANR	1713912	CallExpression	"data_valid ( g_heap1 , g_heap_size , 0xdeadbeef )"		1713741	0					
ANR	1713913	Callee	data_valid		1713741	0					
ANR	1713914	Identifier	data_valid		1713741	0					
ANR	1713915	ArgumentList	g_heap1		1713741	1					
ANR	1713916	Argument	g_heap1		1713741	0					
ANR	1713917	Identifier	g_heap1		1713741	0					
ANR	1713918	Argument	g_heap_size		1713741	1					
ANR	1713919	Identifier	g_heap_size		1713741	0					
ANR	1713920	Argument	0xdeadbeef		1713741	2					
ANR	1713921	PrimaryExpression	0xdeadbeef		1713741	0					
ANR	1713922	Identifier	FALSE		1713741	1					
ANR	1713923	CompoundStatement		32:60:976:976	1713741	1					
ANR	1713924	ExpressionStatement	"printf ( ""Memory heap 1 failure.\\n"" )"	116:2:4196:4230	1713741	0	True				
ANR	1713925	CallExpression	"printf ( ""Memory heap 1 failure.\\n"" )"		1713741	0					
ANR	1713926	Callee	printf		1713741	0					
ANR	1713927	Identifier	printf		1713741	0					
ANR	1713928	ArgumentList	"""Memory heap 1 failure.\\n"""		1713741	1					
ANR	1713929	Argument	"""Memory heap 1 failure.\\n"""		1713741	0					
ANR	1713930	PrimaryExpression	"""Memory heap 1 failure.\\n"""		1713741	0					
ANR	1713931	ExpressionStatement	"printf ( ""FAILED\\n"" )"	117:2:4234:4252	1713741	1	True				
ANR	1713932	CallExpression	"printf ( ""FAILED\\n"" )"		1713741	0					
ANR	1713933	Callee	printf		1713741	0					
ANR	1713934	Identifier	printf		1713741	0					
ANR	1713935	ArgumentList	"""FAILED\\n"""		1713741	1					
ANR	1713936	Argument	"""FAILED\\n"""		1713741	0					
ANR	1713937	PrimaryExpression	"""FAILED\\n"""		1713741	0					
ANR	1713938	ExpressionStatement	exit ( EXIT_FAILURE )	118:2:4256:4274	1713741	2	True				
ANR	1713939	CallExpression	exit ( EXIT_FAILURE )		1713741	0					
ANR	1713940	Callee	exit		1713741	0					
ANR	1713941	Identifier	exit		1713741	0					
ANR	1713942	ArgumentList	EXIT_FAILURE		1713741	1					
ANR	1713943	Argument	EXIT_FAILURE		1713741	0					
ANR	1713944	Identifier	EXIT_FAILURE		1713741	0					
ANR	1713945	IfStatement	"if ( data_valid ( g_heap2 , g_heap_size , 0xbeefdead ) == FALSE )"		1713741	18					
ANR	1713946	Condition	"data_valid ( g_heap2 , g_heap_size , 0xbeefdead ) == FALSE"	120:5:4284:4336	1713741	0	True				
ANR	1713947	EqualityExpression	"data_valid ( g_heap2 , g_heap_size , 0xbeefdead ) == FALSE"		1713741	0		==			
ANR	1713948	CallExpression	"data_valid ( g_heap2 , g_heap_size , 0xbeefdead )"		1713741	0					
ANR	1713949	Callee	data_valid		1713741	0					
ANR	1713950	Identifier	data_valid		1713741	0					
ANR	1713951	ArgumentList	g_heap2		1713741	1					
ANR	1713952	Argument	g_heap2		1713741	0					
ANR	1713953	Identifier	g_heap2		1713741	0					
ANR	1713954	Argument	g_heap_size		1713741	1					
ANR	1713955	Identifier	g_heap_size		1713741	0					
ANR	1713956	Argument	0xbeefdead		1713741	2					
ANR	1713957	PrimaryExpression	0xbeefdead		1713741	0					
ANR	1713958	Identifier	FALSE		1713741	1					
ANR	1713959	CompoundStatement		37:60:1123:1123	1713741	1					
ANR	1713960	ExpressionStatement	"printf ( ""Memory heap 2 failure.\\n"" )"	121:2:4343:4377	1713741	0	True				
ANR	1713961	CallExpression	"printf ( ""Memory heap 2 failure.\\n"" )"		1713741	0					
ANR	1713962	Callee	printf		1713741	0					
ANR	1713963	Identifier	printf		1713741	0					
ANR	1713964	ArgumentList	"""Memory heap 2 failure.\\n"""		1713741	1					
ANR	1713965	Argument	"""Memory heap 2 failure.\\n"""		1713741	0					
ANR	1713966	PrimaryExpression	"""Memory heap 2 failure.\\n"""		1713741	0					
ANR	1713967	ExpressionStatement	"printf ( ""FAILED\\n"" )"	122:2:4381:4399	1713741	1	True				
ANR	1713968	CallExpression	"printf ( ""FAILED\\n"" )"		1713741	0					
ANR	1713969	Callee	printf		1713741	0					
ANR	1713970	Identifier	printf		1713741	0					
ANR	1713971	ArgumentList	"""FAILED\\n"""		1713741	1					
ANR	1713972	Argument	"""FAILED\\n"""		1713741	0					
ANR	1713973	PrimaryExpression	"""FAILED\\n"""		1713741	0					
ANR	1713974	ExpressionStatement	exit ( EXIT_FAILURE )	123:2:4403:4421	1713741	2	True				
ANR	1713975	CallExpression	exit ( EXIT_FAILURE )		1713741	0					
ANR	1713976	Callee	exit		1713741	0					
ANR	1713977	Identifier	exit		1713741	0					
ANR	1713978	ArgumentList	EXIT_FAILURE		1713741	1					
ANR	1713979	Argument	EXIT_FAILURE		1713741	0					
ANR	1713980	Identifier	EXIT_FAILURE		1713741	0					
ANR	1713981	ExpressionStatement	free ( g_heap1 )	126:1:4428:4441	1713741	19	True				
ANR	1713982	CallExpression	free ( g_heap1 )		1713741	0					
ANR	1713983	Callee	free		1713741	0					
ANR	1713984	Identifier	free		1713741	0					
ANR	1713985	ArgumentList	g_heap1		1713741	1					
ANR	1713986	Argument	g_heap1		1713741	0					
ANR	1713987	Identifier	g_heap1		1713741	0					
ANR	1713988	ExpressionStatement	g_heap1 = NULL	127:1:4444:4458	1713741	20	True				
ANR	1713989	AssignmentExpression	g_heap1 = NULL		1713741	0		=			
ANR	1713990	Identifier	g_heap1		1713741	0					
ANR	1713991	Identifier	NULL		1713741	1					
ANR	1713992	ExpressionStatement	free ( g_heap2 )	128:1:4461:4474	1713741	21	True				
ANR	1713993	CallExpression	free ( g_heap2 )		1713741	0					
ANR	1713994	Callee	free		1713741	0					
ANR	1713995	Identifier	free		1713741	0					
ANR	1713996	ArgumentList	g_heap2		1713741	1					
ANR	1713997	Argument	g_heap2		1713741	0					
ANR	1713998	Identifier	g_heap2		1713741	0					
ANR	1713999	ExpressionStatement	g_heap2 = NULL	129:1:4477:4491	1713741	22	True				
ANR	1714000	AssignmentExpression	g_heap2 = NULL		1713741	0		=			
ANR	1714001	Identifier	g_heap2		1713741	0					
ANR	1714002	Identifier	NULL		1713741	1					
ANR	1714003	ExpressionStatement	"printf ( ""SUCCESS\\n"" )"	131:1:4495:4514	1713741	23	True				
ANR	1714004	CallExpression	"printf ( ""SUCCESS\\n"" )"		1713741	0					
ANR	1714005	Callee	printf		1713741	0					
ANR	1714006	Identifier	printf		1713741	0					
ANR	1714007	ArgumentList	"""SUCCESS\\n"""		1713741	1					
ANR	1714008	Argument	"""SUCCESS\\n"""		1713741	0					
ANR	1714009	PrimaryExpression	"""SUCCESS\\n"""		1713741	0					
ANR	1714010	ExpressionStatement	exit ( EXIT_SUCCESS )	132:1:4517:4535	1713741	24	True				
ANR	1714011	CallExpression	exit ( EXIT_SUCCESS )		1713741	0					
ANR	1714012	Callee	exit		1713741	0					
ANR	1714013	Identifier	exit		1713741	0					
ANR	1714014	ArgumentList	EXIT_SUCCESS		1713741	1					
ANR	1714015	Argument	EXIT_SUCCESS		1713741	0					
ANR	1714016	Identifier	EXIT_SUCCESS		1713741	0					
ANR	1714017	ReturnType	int		1713741	1					
ANR	1714018	Identifier	main		1713741	2					
ANR	1714019	ParameterList			1713741	3					
ANR	1714020	CFGEntryNode	ENTRY		1713741		True				
ANR	1714021	CFGExitNode	EXIT		1713741		True				
ANR	1714022	Symbol	a		1713741						
ANR	1714023	Symbol	b		1713741						
ANR	1714024	Symbol	c		1713741						
ANR	1714025	Symbol	NULL		1713741						
ANR	1714026	Symbol	data		1713741						
ANR	1714027	Symbol	f		1713741						
ANR	1714028	Symbol	f . data		1713741						
ANR	1714029	Symbol	g_heap_size		1713741						
ANR	1714030	Symbol	g_heap2		1713741						
ANR	1714031	Symbol	g_heap1		1713741						
ANR	1714032	Symbol	g_sum		1713741						
ANR	1714033	Symbol	& f		1713741						
ANR	1714034	Symbol	data_valid		1713741						
ANR	1714035	Symbol	f . previous		1713741						
ANR	1714036	Symbol	f . value		1713741						
ANR	1714037	Symbol	EXIT_FAILURE		1713741						
ANR	1714038	Symbol	deepen		1713741						
ANR	1714039	Symbol	EXIT_SUCCESS		1713741						
ANR	1714040	Symbol	STACKINCREMENT		1713741						
ANR	1714041	Symbol	is_stack_valid		1713741						
ANR	1714042	Symbol	f . size		1713741						
ANR	1714043	Symbol	FALSE		1713741						
ANR	1714044	Symbol	validity		1713741						
ANR	1714045	Function	init_data	136:0:4585:4697							
ANR	1714046	FunctionDef	"init_data (int * data , int size , int value)"		1714045	0					
ANR	1714047	CompoundStatement		137:0:4632:4697	1714045	0					
ANR	1714048	IdentifierDeclStatement	int i ;	138:1:4635:4640	1714045	0	True				
ANR	1714049	IdentifierDecl	i		1714045	0					
ANR	1714050	IdentifierDeclType	int		1714045	0					
ANR	1714051	Identifier	i		1714045	1					
ANR	1714052	ForStatement	for ( i = 0 ; i < size ; i ++ )		1714045	1					
ANR	1714053	ForInit	i = 0 ;	140:6:4650:4655	1714045	0	True				
ANR	1714054	AssignmentExpression	i = 0		1714045	0		=			
ANR	1714055	Identifier	i		1714045	0					
ANR	1714056	PrimaryExpression	0		1714045	1					
ANR	1714057	Condition	i < size	140:13:4657:4664	1714045	1	True				
ANR	1714058	RelationalExpression	i < size		1714045	0		<			
ANR	1714059	Identifier	i		1714045	0					
ANR	1714060	Identifier	size		1714045	1					
ANR	1714061	PostIncDecOperationExpression	i ++	140:23:4667:4669	1714045	2	True				
ANR	1714062	Identifier	i		1714045	0					
ANR	1714063	IncDec	++		1714045	1					
ANR	1714064	CompoundStatement		5:1:40:40	1714045	3					
ANR	1714065	ExpressionStatement	data [ i ] = value	142:2:4677:4692	1714045	0	True				
ANR	1714066	AssignmentExpression	data [ i ] = value		1714045	0		=			
ANR	1714067	ArrayIndexing	data [ i ]		1714045	0					
ANR	1714068	Identifier	data		1714045	0					
ANR	1714069	Identifier	i		1714045	1					
ANR	1714070	Identifier	value		1714045	1					
ANR	1714071	ReturnType	void		1714045	1					
ANR	1714072	Identifier	init_data		1714045	2					
ANR	1714073	ParameterList	"int * data , int size , int value"		1714045	3					
ANR	1714074	Parameter	int * data	136:15:4600:4608	1714045	0	True				
ANR	1714075	ParameterType	int *		1714045	0					
ANR	1714076	Identifier	data		1714045	1					
ANR	1714077	Parameter	int size	136:26:4611:4618	1714045	1	True				
ANR	1714078	ParameterType	int		1714045	0					
ANR	1714079	Identifier	size		1714045	1					
ANR	1714080	Parameter	int value	136:36:4621:4629	1714045	2	True				
ANR	1714081	ParameterType	int		1714045	0					
ANR	1714082	Identifier	value		1714045	1					
ANR	1714083	CFGEntryNode	ENTRY		1714045		True				
ANR	1714084	CFGExitNode	EXIT		1714045		True				
ANR	1714085	Symbol	* i		1714045						
ANR	1714086	Symbol	data		1714045						
ANR	1714087	Symbol	size		1714045						
ANR	1714088	Symbol	i		1714045						
ANR	1714089	Symbol	value		1714045						
ANR	1714090	Symbol	* data		1714045						
ANR	1714091	Function	deepen	148:0:4797:6473							
ANR	1714092	FunctionDef	"deepen (struct Frame * pf , int old_value)"		1714091	0					
ANR	1714093	CompoundStatement		149:0:4841:6473	1714091	0					
ANR	1714094	IdentifierDeclStatement	int test ;	150:1:4844:4852	1714091	0	True				
ANR	1714095	IdentifierDecl	test		1714091	0					
ANR	1714096	IdentifierDeclType	int		1714091	0					
ANR	1714097	Identifier	test		1714091	1					
ANR	1714098	IdentifierDeclStatement	int data [ STACKINCREMENT ] ;	151:1:4855:4879	1714091	1	True				
ANR	1714099	IdentifierDecl	data [ STACKINCREMENT ]		1714091	0					
ANR	1714100	IdentifierDeclType	int [ STACKINCREMENT ]		1714091	0					
ANR	1714101	Identifier	data		1714091	1					
ANR	1714102	Identifier	STACKINCREMENT		1714091	2					
ANR	1714103	IdentifierDeclStatement	struct Frame f ;	152:1:4882:4896	1714091	2	True				
ANR	1714104	IdentifierDecl	f		1714091	0					
ANR	1714105	IdentifierDeclType	struct Frame		1714091	0					
ANR	1714106	Identifier	f		1714091	1					
ANR	1714107	IdentifierDeclStatement	int new_value = old_value + 1 ;	153:1:4899:4928	1714091	3	True				
ANR	1714108	IdentifierDecl	new_value = old_value + 1		1714091	0					
ANR	1714109	IdentifierDeclType	int		1714091	0					
ANR	1714110	Identifier	new_value		1714091	1					
ANR	1714111	AssignmentExpression	new_value = old_value + 1		1714091	2		=			
ANR	1714112	Identifier	new_value		1714091	0					
ANR	1714113	AdditiveExpression	old_value + 1		1714091	1		+			
ANR	1714114	Identifier	old_value		1714091	0					
ANR	1714115	PrimaryExpression	1		1714091	1					
ANR	1714116	IdentifierDeclStatement	"int a , b ;"	154:1:4931:4939	1714091	4	True				
ANR	1714117	IdentifierDecl	a		1714091	0					
ANR	1714118	IdentifierDeclType	int		1714091	0					
ANR	1714119	Identifier	a		1714091	1					
ANR	1714120	IdentifierDecl	b		1714091	1					
ANR	1714121	IdentifierDeclType	int		1714091	0					
ANR	1714122	Identifier	b		1714091	1					
ANR	1714123	ExpressionStatement	"printf ( ""Deepness Level: %d\\n"" , new_value )"	156:1:4943:4984	1714091	5	True				
ANR	1714124	CallExpression	"printf ( ""Deepness Level: %d\\n"" , new_value )"		1714091	0					
ANR	1714125	Callee	printf		1714091	0					
ANR	1714126	Identifier	printf		1714091	0					
ANR	1714127	ArgumentList	"""Deepness Level: %d\\n"""		1714091	1					
ANR	1714128	Argument	"""Deepness Level: %d\\n"""		1714091	0					
ANR	1714129	PrimaryExpression	"""Deepness Level: %d\\n"""		1714091	0					
ANR	1714130	Argument	new_value		1714091	1					
ANR	1714131	Identifier	new_value		1714091	0					
ANR	1714132	ExpressionStatement	"init_data ( data , STACKINCREMENT , new_value )"	157:1:4987:5029	1714091	6	True				
ANR	1714133	CallExpression	"init_data ( data , STACKINCREMENT , new_value )"		1714091	0					
ANR	1714134	Callee	init_data		1714091	0					
ANR	1714135	Identifier	init_data		1714091	0					
ANR	1714136	ArgumentList	data		1714091	1					
ANR	1714137	Argument	data		1714091	0					
ANR	1714138	Identifier	data		1714091	0					
ANR	1714139	Argument	STACKINCREMENT		1714091	1					
ANR	1714140	Identifier	STACKINCREMENT		1714091	0					
ANR	1714141	Argument	new_value		1714091	2					
ANR	1714142	Identifier	new_value		1714091	0					
ANR	1714143	ExpressionStatement	f . value = new_value	158:1:5032:5051	1714091	7	True				
ANR	1714144	AssignmentExpression	f . value = new_value		1714091	0		=			
ANR	1714145	MemberAccess	f . value		1714091	0					
ANR	1714146	Identifier	f		1714091	0					
ANR	1714147	Identifier	value		1714091	1					
ANR	1714148	Identifier	new_value		1714091	1					
ANR	1714149	ExpressionStatement	f . data = & data [ 0 ]	159:1:5054:5071	1714091	8	True				
ANR	1714150	AssignmentExpression	f . data = & data [ 0 ]		1714091	0		=			
ANR	1714151	MemberAccess	f . data		1714091	0					
ANR	1714152	Identifier	f		1714091	0					
ANR	1714153	Identifier	data		1714091	1					
ANR	1714154	UnaryOperationExpression	& data [ 0 ]		1714091	1					
ANR	1714155	UnaryOperator	&		1714091	0					
ANR	1714156	ArrayIndexing	data [ 0 ]		1714091	1					
ANR	1714157	Identifier	data		1714091	0					
ANR	1714158	PrimaryExpression	0		1714091	1					
ANR	1714159	ExpressionStatement	f . size = STACKINCREMENT	160:1:5074:5097	1714091	9	True				
ANR	1714160	AssignmentExpression	f . size = STACKINCREMENT		1714091	0		=			
ANR	1714161	MemberAccess	f . size		1714091	0					
ANR	1714162	Identifier	f		1714091	0					
ANR	1714163	Identifier	size		1714091	1					
ANR	1714164	Identifier	STACKINCREMENT		1714091	1					
ANR	1714165	ExpressionStatement	f . previous = pf	161:1:5100:5115	1714091	10	True				
ANR	1714166	AssignmentExpression	f . previous = pf		1714091	0		=			
ANR	1714167	MemberAccess	f . previous		1714091	0					
ANR	1714168	Identifier	f		1714091	0					
ANR	1714169	Identifier	previous		1714091	1					
ANR	1714170	Identifier	pf		1714091	1					
ANR	1714171	ExpressionStatement	g_sum += STACKINCREMENT	162:1:5118:5141	1714091	11	True				
ANR	1714172	AssignmentExpression	g_sum += STACKINCREMENT		1714091	0		+=			
ANR	1714173	Identifier	g_sum		1714091	0					
ANR	1714174	Identifier	STACKINCREMENT		1714091	1					
ANR	1714175	ExpressionStatement	"test = is_stack_valid ( & f , new_value )"	164:1:5188:5224	1714091	12	True				
ANR	1714176	AssignmentExpression	"test = is_stack_valid ( & f , new_value )"		1714091	0		=			
ANR	1714177	Identifier	test		1714091	0					
ANR	1714178	CallExpression	"is_stack_valid ( & f , new_value )"		1714091	1					
ANR	1714179	Callee	is_stack_valid		1714091	0					
ANR	1714180	Identifier	is_stack_valid		1714091	0					
ANR	1714181	ArgumentList	& f		1714091	1					
ANR	1714182	Argument	& f		1714091	0					
ANR	1714183	UnaryOperationExpression	& f		1714091	0					
ANR	1714184	UnaryOperator	&		1714091	0					
ANR	1714185	Identifier	f		1714091	1					
ANR	1714186	Argument	new_value		1714091	1					
ANR	1714187	Identifier	new_value		1714091	0					
ANR	1714188	IfStatement	if ( test == TRUE )		1714091	13					
ANR	1714189	Condition	test == TRUE	166:5:5232:5243	1714091	0	True				
ANR	1714190	EqualityExpression	test == TRUE		1714091	0		==			
ANR	1714191	Identifier	test		1714091	0					
ANR	1714192	Identifier	TRUE		1714091	1					
ANR	1714193	CompoundStatement		19:1:405:405	1714091	1					
ANR	1714194	IfStatement	if ( g_sum < STACKSIZETARGET )		1714091	0					
ANR	1714195	Condition	g_sum < STACKSIZETARGET	168:6:5255:5277	1714091	0	True				
ANR	1714196	RelationalExpression	g_sum < STACKSIZETARGET		1714091	0		<			
ANR	1714197	Identifier	g_sum		1714091	0					
ANR	1714198	Identifier	STACKSIZETARGET		1714091	1					
ANR	1714199	CompoundStatement		21:2:440:440	1714091	1					
ANR	1714200	ExpressionStatement	"a = deepen ( & f , new_value )"	171:4:5338:5363	1714091	0	True				
ANR	1714201	AssignmentExpression	"a = deepen ( & f , new_value )"		1714091	0		=			
ANR	1714202	Identifier	a		1714091	0					
ANR	1714203	CallExpression	"deepen ( & f , new_value )"		1714091	1					
ANR	1714204	Callee	deepen		1714091	0					
ANR	1714205	Identifier	deepen		1714091	0					
ANR	1714206	ArgumentList	& f		1714091	1					
ANR	1714207	Argument	& f		1714091	0					
ANR	1714208	UnaryOperationExpression	& f		1714091	0					
ANR	1714209	UnaryOperator	&		1714091	0					
ANR	1714210	Identifier	f		1714091	1					
ANR	1714211	Argument	new_value		1714091	1					
ANR	1714212	Identifier	new_value		1714091	0					
ANR	1714213	ExpressionStatement	"printf ( ""Backchecking %d\\n"" , new_value ) , b = is_stack_valid ( & f , new_value )"	172:4:5369:5447	1714091	1	True				
ANR	1714214	Expression	"printf ( ""Backchecking %d\\n"" , new_value ) , b = is_stack_valid ( & f , new_value )"		1714091	0					
ANR	1714215	CallExpression	"printf ( ""Backchecking %d\\n"" , new_value )"		1714091	0					
ANR	1714216	Callee	printf		1714091	0					
ANR	1714217	Identifier	printf		1714091	0					
ANR	1714218	ArgumentList	"""Backchecking %d\\n"""		1714091	1					
ANR	1714219	Argument	"""Backchecking %d\\n"""		1714091	0					
ANR	1714220	PrimaryExpression	"""Backchecking %d\\n"""		1714091	0					
ANR	1714221	Argument	new_value		1714091	1					
ANR	1714222	Identifier	new_value		1714091	0					
ANR	1714223	AssignmentExpression	"b = is_stack_valid ( & f , new_value )"		1714091	1		=			
ANR	1714224	Identifier	b		1714091	0					
ANR	1714225	CallExpression	"is_stack_valid ( & f , new_value )"		1714091	1					
ANR	1714226	Callee	is_stack_valid		1714091	0					
ANR	1714227	Identifier	is_stack_valid		1714091	0					
ANR	1714228	ArgumentList	& f		1714091	1					
ANR	1714229	Argument	& f		1714091	0					
ANR	1714230	UnaryOperationExpression	& f		1714091	0					
ANR	1714231	UnaryOperator	&		1714091	0					
ANR	1714232	Identifier	f		1714091	1					
ANR	1714233	Argument	new_value		1714091	1					
ANR	1714234	Identifier	new_value		1714091	0					
ANR	1714235	ReturnStatement	return a && b ;	175:4:5454:5467	1714091	2	True				
ANR	1714236	AndExpression	a && b		1714091	0		&&			
ANR	1714237	Identifier	a		1714091	0					
ANR	1714238	Identifier	b		1714091	1					
ANR	1714239	ExpressionStatement	g_heap1 = malloc ( sizeof ( int ) * g_heap_size )	180:2:5571:5614	1714091	1	True				
ANR	1714240	AssignmentExpression	g_heap1 = malloc ( sizeof ( int ) * g_heap_size )		1714091	0		=			
ANR	1714241	Identifier	g_heap1		1714091	0					
ANR	1714242	CallExpression	malloc ( sizeof ( int ) * g_heap_size )		1714091	1					
ANR	1714243	Callee	malloc		1714091	0					
ANR	1714244	Identifier	malloc		1714091	0					
ANR	1714245	ArgumentList	sizeof ( int ) * g_heap_size		1714091	1					
ANR	1714246	Argument	sizeof ( int ) * g_heap_size		1714091	0					
ANR	1714247	MultiplicativeExpression	sizeof ( int ) * g_heap_size		1714091	0		*			
ANR	1714248	SizeofExpression	sizeof ( int )		1714091	0					
ANR	1714249	Sizeof	sizeof		1714091	0					
ANR	1714250	SizeofOperand	int		1714091	1					
ANR	1714251	Identifier	g_heap_size		1714091	1					
ANR	1714252	IfStatement	if ( g_heap1 == NULL )		1714091	2					
ANR	1714253	Condition	g_heap1 == NULL	181:6:5622:5636	1714091	0	True				
ANR	1714254	EqualityExpression	g_heap1 == NULL		1714091	0		==			
ANR	1714255	Identifier	g_heap1		1714091	0					
ANR	1714256	Identifier	NULL		1714091	1					
ANR	1714257	CompoundStatement		33:23:797:797	1714091	1					
ANR	1714258	ExpressionStatement	"printf ( ""Out of memory while allocating heap1! Exiting.\\n"" )"	182:3:5644:5702	1714091	0	True				
ANR	1714259	CallExpression	"printf ( ""Out of memory while allocating heap1! Exiting.\\n"" )"		1714091	0					
ANR	1714260	Callee	printf		1714091	0					
ANR	1714261	Identifier	printf		1714091	0					
ANR	1714262	ArgumentList	"""Out of memory while allocating heap1! Exiting.\\n"""		1714091	1					
ANR	1714263	Argument	"""Out of memory while allocating heap1! Exiting.\\n"""		1714091	0					
ANR	1714264	PrimaryExpression	"""Out of memory while allocating heap1! Exiting.\\n"""		1714091	0					
ANR	1714265	ExpressionStatement	exit ( EXIT_FAILURE )	183:3:5707:5725	1714091	1	True				
ANR	1714266	CallExpression	exit ( EXIT_FAILURE )		1714091	0					
ANR	1714267	Callee	exit		1714091	0					
ANR	1714268	Identifier	exit		1714091	0					
ANR	1714269	ArgumentList	EXIT_FAILURE		1714091	1					
ANR	1714270	Argument	EXIT_FAILURE		1714091	0					
ANR	1714271	Identifier	EXIT_FAILURE		1714091	0					
ANR	1714272	ExpressionStatement	"init_data ( g_heap1 , g_heap_size , 0xdeadbeef )"	185:2:5733:5776	1714091	3	True				
ANR	1714273	CallExpression	"init_data ( g_heap1 , g_heap_size , 0xdeadbeef )"		1714091	0					
ANR	1714274	Callee	init_data		1714091	0					
ANR	1714275	Identifier	init_data		1714091	0					
ANR	1714276	ArgumentList	g_heap1		1714091	1					
ANR	1714277	Argument	g_heap1		1714091	0					
ANR	1714278	Identifier	g_heap1		1714091	0					
ANR	1714279	Argument	g_heap_size		1714091	1					
ANR	1714280	Identifier	g_heap_size		1714091	0					
ANR	1714281	Argument	0xdeadbeef		1714091	2					
ANR	1714282	PrimaryExpression	0xdeadbeef		1714091	0					
ANR	1714283	ExpressionStatement	"printf ( ""About to checkpoint....\\n"" )"	188:2:5833:5868	1714091	4	True				
ANR	1714284	CallExpression	"printf ( ""About to checkpoint....\\n"" )"		1714091	0					
ANR	1714285	Callee	printf		1714091	0					
ANR	1714286	Identifier	printf		1714091	0					
ANR	1714287	ArgumentList	"""About to checkpoint....\\n"""		1714091	1					
ANR	1714288	Argument	"""About to checkpoint....\\n"""		1714091	0					
ANR	1714289	PrimaryExpression	"""About to checkpoint....\\n"""		1714091	0					
ANR	1714290	ExpressionStatement	fflush ( NULL )	189:2:5872:5884	1714091	5	True				
ANR	1714291	CallExpression	fflush ( NULL )		1714091	0					
ANR	1714292	Callee	fflush		1714091	0					
ANR	1714293	Identifier	fflush		1714091	0					
ANR	1714294	ArgumentList	NULL		1714091	1					
ANR	1714295	Argument	NULL		1714091	0					
ANR	1714296	Identifier	NULL		1714091	0					
ANR	1714297	ExpressionStatement	ckpt_and_exit ( )	190:2:5888:5903	1714091	6	True				
ANR	1714298	CallExpression	ckpt_and_exit ( )		1714091	0					
ANR	1714299	Callee	ckpt_and_exit		1714091	0					
ANR	1714300	Identifier	ckpt_and_exit		1714091	0					
ANR	1714301	ArgumentList			1714091	1					
ANR	1714302	ExpressionStatement	fflush ( NULL )	191:2:5907:5919	1714091	7	True				
ANR	1714303	CallExpression	fflush ( NULL )		1714091	0					
ANR	1714304	Callee	fflush		1714091	0					
ANR	1714305	Identifier	fflush		1714091	0					
ANR	1714306	ArgumentList	NULL		1714091	1					
ANR	1714307	Argument	NULL		1714091	0					
ANR	1714308	Identifier	NULL		1714091	0					
ANR	1714309	ExpressionStatement	"printf ( ""Returning from checkpoint....\\n"" )"	193:2:5924:5965	1714091	8	True				
ANR	1714310	CallExpression	"printf ( ""Returning from checkpoint....\\n"" )"		1714091	0					
ANR	1714311	Callee	printf		1714091	0					
ANR	1714312	Identifier	printf		1714091	0					
ANR	1714313	ArgumentList	"""Returning from checkpoint....\\n"""		1714091	1					
ANR	1714314	Argument	"""Returning from checkpoint....\\n"""		1714091	0					
ANR	1714315	PrimaryExpression	"""Returning from checkpoint....\\n"""		1714091	0					
ANR	1714316	ExpressionStatement	"test = is_stack_valid ( & f , new_value )"	197:2:6089:6125	1714091	9	True				
ANR	1714317	AssignmentExpression	"test = is_stack_valid ( & f , new_value )"		1714091	0		=			
ANR	1714318	Identifier	test		1714091	0					
ANR	1714319	CallExpression	"is_stack_valid ( & f , new_value )"		1714091	1					
ANR	1714320	Callee	is_stack_valid		1714091	0					
ANR	1714321	Identifier	is_stack_valid		1714091	0					
ANR	1714322	ArgumentList	& f		1714091	1					
ANR	1714323	Argument	& f		1714091	0					
ANR	1714324	UnaryOperationExpression	& f		1714091	0					
ANR	1714325	UnaryOperator	&		1714091	0					
ANR	1714326	Identifier	f		1714091	1					
ANR	1714327	Argument	new_value		1714091	1					
ANR	1714328	Identifier	new_value		1714091	0					
ANR	1714329	ExpressionStatement	g_heap2 = malloc ( sizeof ( int ) * g_heap_size )	201:2:6231:6274	1714091	10	True				
ANR	1714330	AssignmentExpression	g_heap2 = malloc ( sizeof ( int ) * g_heap_size )		1714091	0		=			
ANR	1714331	Identifier	g_heap2		1714091	0					
ANR	1714332	CallExpression	malloc ( sizeof ( int ) * g_heap_size )		1714091	1					
ANR	1714333	Callee	malloc		1714091	0					
ANR	1714334	Identifier	malloc		1714091	0					
ANR	1714335	ArgumentList	sizeof ( int ) * g_heap_size		1714091	1					
ANR	1714336	Argument	sizeof ( int ) * g_heap_size		1714091	0					
ANR	1714337	MultiplicativeExpression	sizeof ( int ) * g_heap_size		1714091	0		*			
ANR	1714338	SizeofExpression	sizeof ( int )		1714091	0					
ANR	1714339	Sizeof	sizeof		1714091	0					
ANR	1714340	SizeofOperand	int		1714091	1					
ANR	1714341	Identifier	g_heap_size		1714091	1					
ANR	1714342	IfStatement	if ( g_heap2 == NULL )		1714091	11					
ANR	1714343	Condition	g_heap2 == NULL	202:6:6282:6296	1714091	0	True				
ANR	1714344	EqualityExpression	g_heap2 == NULL		1714091	0		==			
ANR	1714345	Identifier	g_heap2		1714091	0					
ANR	1714346	Identifier	NULL		1714091	1					
ANR	1714347	CompoundStatement		54:23:1457:1457	1714091	1					
ANR	1714348	ExpressionStatement	"printf ( ""Out of memory while allocating heap2! Exiting.\\n"" )"	203:3:6304:6362	1714091	0	True				
ANR	1714349	CallExpression	"printf ( ""Out of memory while allocating heap2! Exiting.\\n"" )"		1714091	0					
ANR	1714350	Callee	printf		1714091	0					
ANR	1714351	Identifier	printf		1714091	0					
ANR	1714352	ArgumentList	"""Out of memory while allocating heap2! Exiting.\\n"""		1714091	1					
ANR	1714353	Argument	"""Out of memory while allocating heap2! Exiting.\\n"""		1714091	0					
ANR	1714354	PrimaryExpression	"""Out of memory while allocating heap2! Exiting.\\n"""		1714091	0					
ANR	1714355	ExpressionStatement	exit ( EXIT_FAILURE )	204:3:6367:6385	1714091	1	True				
ANR	1714356	CallExpression	exit ( EXIT_FAILURE )		1714091	0					
ANR	1714357	Callee	exit		1714091	0					
ANR	1714358	Identifier	exit		1714091	0					
ANR	1714359	ArgumentList	EXIT_FAILURE		1714091	1					
ANR	1714360	Argument	EXIT_FAILURE		1714091	0					
ANR	1714361	Identifier	EXIT_FAILURE		1714091	0					
ANR	1714362	ExpressionStatement	"init_data ( g_heap2 , g_heap_size , 0xbeefdead )"	206:2:6393:6436	1714091	12	True				
ANR	1714363	CallExpression	"init_data ( g_heap2 , g_heap_size , 0xbeefdead )"		1714091	0					
ANR	1714364	Callee	init_data		1714091	0					
ANR	1714365	Identifier	init_data		1714091	0					
ANR	1714366	ArgumentList	g_heap2		1714091	1					
ANR	1714367	Argument	g_heap2		1714091	0					
ANR	1714368	Identifier	g_heap2		1714091	0					
ANR	1714369	Argument	g_heap_size		1714091	1					
ANR	1714370	Identifier	g_heap_size		1714091	0					
ANR	1714371	Argument	0xbeefdead		1714091	2					
ANR	1714372	PrimaryExpression	0xbeefdead		1714091	0					
ANR	1714373	ReturnStatement	return test ;	208:2:6441:6452	1714091	13	True				
ANR	1714374	Identifier	test		1714091	0					
ANR	1714375	ReturnStatement	return FALSE ;	211:1:6459:6471	1714091	14	True				
ANR	1714376	Identifier	FALSE		1714091	0					
ANR	1714377	ReturnType	int		1714091	1					
ANR	1714378	Identifier	deepen		1714091	2					
ANR	1714379	ParameterList	"struct Frame * pf , int old_value"		1714091	3					
ANR	1714380	Parameter	struct Frame * pf	148:11:4808:4823	1714091	0	True				
ANR	1714381	ParameterType	struct Frame *		1714091	0					
ANR	1714382	Identifier	pf		1714091	1					
ANR	1714383	Parameter	int old_value	148:29:4826:4838	1714091	1	True				
ANR	1714384	ParameterType	int		1714091	0					
ANR	1714385	Identifier	old_value		1714091	1					
ANR	1714386	CFGEntryNode	ENTRY		1714091		True				
ANR	1714387	CFGExitNode	EXIT		1714091		True				
ANR	1714388	Symbol	data		1714091						
ANR	1714389	Symbol	g_heap2		1714091						
ANR	1714390	Symbol	g_heap1		1714091						
ANR	1714391	Symbol	f . previous		1714091						
ANR	1714392	Symbol	f . value		1714091						
ANR	1714393	Symbol	f . size		1714091						
ANR	1714394	Symbol	new_value		1714091						
ANR	1714395	Symbol	a		1714091						
ANR	1714396	Symbol	malloc		1714091						
ANR	1714397	Symbol	b		1714091						
ANR	1714398	Symbol	NULL		1714091						
ANR	1714399	Symbol	test		1714091						
ANR	1714400	Symbol	f		1714091						
ANR	1714401	Symbol	f . data		1714091						
ANR	1714402	Symbol	g_heap_size		1714091						
ANR	1714403	Symbol	TRUE		1714091						
ANR	1714404	Symbol	g_sum		1714091						
ANR	1714405	Symbol	& f		1714091						
ANR	1714406	Symbol	STACKSIZETARGET		1714091						
ANR	1714407	Symbol	EXIT_FAILURE		1714091						
ANR	1714408	Symbol	pf		1714091						
ANR	1714409	Symbol	deepen		1714091						
ANR	1714410	Symbol	STACKINCREMENT		1714091						
ANR	1714411	Symbol	is_stack_valid		1714091						
ANR	1714412	Symbol	old_value		1714091						
ANR	1714413	Symbol	FALSE		1714091						
ANR	1714414	Function	is_stack_valid	216:0:6606:6885							
ANR	1714415	FunctionDef	"is_stack_valid (struct Frame * f , int value)"		1714414	0					
ANR	1714416	CompoundStatement		217:0:6653:6885	1714414	0					
ANR	1714417	IdentifierDeclStatement	int check ;	218:1:6656:6665	1714414	0	True				
ANR	1714418	IdentifierDecl	check		1714414	0					
ANR	1714419	IdentifierDeclType	int		1714414	0					
ANR	1714420	Identifier	check		1714414	1					
ANR	1714421	ExpressionStatement	"check = data_valid ( f -> data , f -> size , value )"	220:1:6669:6712	1714414	1	True				
ANR	1714422	AssignmentExpression	"check = data_valid ( f -> data , f -> size , value )"		1714414	0		=			
ANR	1714423	Identifier	check		1714414	0					
ANR	1714424	CallExpression	"data_valid ( f -> data , f -> size , value )"		1714414	1					
ANR	1714425	Callee	data_valid		1714414	0					
ANR	1714426	Identifier	data_valid		1714414	0					
ANR	1714427	ArgumentList	f -> data		1714414	1					
ANR	1714428	Argument	f -> data		1714414	0					
ANR	1714429	PtrMemberAccess	f -> data		1714414	0					
ANR	1714430	Identifier	f		1714414	0					
ANR	1714431	Identifier	data		1714414	1					
ANR	1714432	Argument	f -> size		1714414	1					
ANR	1714433	PtrMemberAccess	f -> size		1714414	0					
ANR	1714434	Identifier	f		1714414	0					
ANR	1714435	Identifier	size		1714414	1					
ANR	1714436	Argument	value		1714414	2					
ANR	1714437	Identifier	value		1714414	0					
ANR	1714438	IfStatement	if ( value == 0 )		1714414	2					
ANR	1714439	Condition	value == 0	222:5:6720:6729	1714414	0	True				
ANR	1714440	EqualityExpression	value == 0		1714414	0		==			
ANR	1714441	Identifier	value		1714414	0					
ANR	1714442	PrimaryExpression	0		1714414	1					
ANR	1714443	CompoundStatement		7:1:79:79	1714414	1					
ANR	1714444	IfStatement	if ( check == TRUE )		1714414	0					
ANR	1714445	Condition	check == TRUE	224:6:6741:6753	1714414	0	True				
ANR	1714446	EqualityExpression	check == TRUE		1714414	0		==			
ANR	1714447	Identifier	check		1714414	0					
ANR	1714448	Identifier	TRUE		1714414	1					
ANR	1714449	CompoundStatement		9:2:104:104	1714414	1					
ANR	1714450	ReturnStatement	return TRUE ;	226:3:6763:6774	1714414	0	True				
ANR	1714451	Identifier	TRUE		1714414	0					
ANR	1714452	ReturnStatement	return FALSE ;	228:2:6782:6794	1714414	1	True				
ANR	1714453	Identifier	FALSE		1714414	0					
ANR	1714454	ReturnStatement	"return is_stack_valid ( f -> previous , value - 1 ) ;"	232:1:6838:6883	1714414	3	True				
ANR	1714455	CallExpression	"is_stack_valid ( f -> previous , value - 1 )"		1714414	0					
ANR	1714456	Callee	is_stack_valid		1714414	0					
ANR	1714457	Identifier	is_stack_valid		1714414	0					
ANR	1714458	ArgumentList	f -> previous		1714414	1					
ANR	1714459	Argument	f -> previous		1714414	0					
ANR	1714460	PtrMemberAccess	f -> previous		1714414	0					
ANR	1714461	Identifier	f		1714414	0					
ANR	1714462	Identifier	previous		1714414	1					
ANR	1714463	Argument	value - 1		1714414	1					
ANR	1714464	AdditiveExpression	value - 1		1714414	0		-			
ANR	1714465	Identifier	value		1714414	0					
ANR	1714466	PrimaryExpression	1		1714414	1					
ANR	1714467	ReturnType	int		1714414	1					
ANR	1714468	Identifier	is_stack_valid		1714414	2					
ANR	1714469	ParameterList	"struct Frame * f , int value"		1714414	3					
ANR	1714470	Parameter	struct Frame * f	216:19:6625:6639	1714414	0	True				
ANR	1714471	ParameterType	struct Frame *		1714414	0					
ANR	1714472	Identifier	f		1714414	1					
ANR	1714473	Parameter	int value	216:36:6642:6650	1714414	1	True				
ANR	1714474	ParameterType	int		1714414	0					
ANR	1714475	Identifier	value		1714414	1					
ANR	1714476	CFGEntryNode	ENTRY		1714414		True				
ANR	1714477	CFGExitNode	EXIT		1714414		True				
ANR	1714478	Symbol	* f		1714414						
ANR	1714479	Symbol	f -> size		1714414						
ANR	1714480	Symbol	f		1714414						
ANR	1714481	Symbol	TRUE		1714414						
ANR	1714482	Symbol	is_stack_valid		1714414						
ANR	1714483	Symbol	FALSE		1714414						
ANR	1714484	Symbol	check		1714414						
ANR	1714485	Symbol	f -> previous		1714414						
ANR	1714486	Symbol	data_valid		1714414						
ANR	1714487	Symbol	value		1714414						
ANR	1714488	Symbol	f -> data		1714414						
ANR	1714489	Function	data_valid	237:0:6929:7086							
ANR	1714490	FunctionDef	"data_valid (int * data , int size , int value)"		1714489	0					
ANR	1714491	CompoundStatement		238:0:6976:7086	1714489	0					
ANR	1714492	IdentifierDeclStatement	int i ;	239:1:6979:6984	1714489	0	True				
ANR	1714493	IdentifierDecl	i		1714489	0					
ANR	1714494	IdentifierDeclType	int		1714489	0					
ANR	1714495	Identifier	i		1714489	1					
ANR	1714496	ForStatement	for ( i = 0 ; i < size ; i ++ )		1714489	1					
ANR	1714497	ForInit	i = 0 ;	241:6:6994:6999	1714489	0	True				
ANR	1714498	AssignmentExpression	i = 0		1714489	0		=			
ANR	1714499	Identifier	i		1714489	0					
ANR	1714500	PrimaryExpression	0		1714489	1					
ANR	1714501	Condition	i < size	241:13:7001:7008	1714489	1	True				
ANR	1714502	RelationalExpression	i < size		1714489	0		<			
ANR	1714503	Identifier	i		1714489	0					
ANR	1714504	Identifier	size		1714489	1					
ANR	1714505	PostIncDecOperationExpression	i ++	241:23:7011:7013	1714489	2	True				
ANR	1714506	Identifier	i		1714489	0					
ANR	1714507	IncDec	++		1714489	1					
ANR	1714508	CompoundStatement		5:1:40:40	1714489	3					
ANR	1714509	IfStatement	if ( data [ i ] != value )		1714489	0					
ANR	1714510	Condition	data [ i ] != value	243:6:7025:7040	1714489	0	True				
ANR	1714511	EqualityExpression	data [ i ] != value		1714489	0		!=			
ANR	1714512	ArrayIndexing	data [ i ]		1714489	0					
ANR	1714513	Identifier	data		1714489	0					
ANR	1714514	Identifier	i		1714489	1					
ANR	1714515	Identifier	value		1714489	1					
ANR	1714516	CompoundStatement		7:2:68:68	1714489	1					
ANR	1714517	ReturnStatement	return FALSE ;	245:3:7050:7062	1714489	0	True				
ANR	1714518	Identifier	FALSE		1714489	0					
ANR	1714519	ReturnStatement	return TRUE ;	249:1:7073:7084	1714489	2	True				
ANR	1714520	Identifier	TRUE		1714489	0					
ANR	1714521	ReturnType	int		1714489	1					
ANR	1714522	Identifier	data_valid		1714489	2					
ANR	1714523	ParameterList	"int * data , int size , int value"		1714489	3					
ANR	1714524	Parameter	int * data	237:15:6944:6952	1714489	0	True				
ANR	1714525	ParameterType	int *		1714489	0					
ANR	1714526	Identifier	data		1714489	1					
ANR	1714527	Parameter	int size	237:26:6955:6962	1714489	1	True				
ANR	1714528	ParameterType	int		1714489	0					
ANR	1714529	Identifier	size		1714489	1					
ANR	1714530	Parameter	int value	237:36:6965:6973	1714489	2	True				
ANR	1714531	ParameterType	int		1714489	0					
ANR	1714532	Identifier	value		1714489	1					
ANR	1714533	CFGEntryNode	ENTRY		1714489		True				
ANR	1714534	CFGExitNode	EXIT		1714489		True				
ANR	1714535	Symbol	* i		1714489						
ANR	1714536	Symbol	data		1714489						
ANR	1714537	Symbol	size		1714489						
ANR	1714538	Symbol	i		1714489						
ANR	1714539	Symbol	TRUE		1714489						
ANR	1714540	Symbol	FALSE		1714489						
ANR	1714541	Symbol	value		1714489						
ANR	1714542	Symbol	* data		1714489						
