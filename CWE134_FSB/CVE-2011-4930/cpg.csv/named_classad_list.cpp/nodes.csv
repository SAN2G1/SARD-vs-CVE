command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1896633	File	data/converged/CVE-2011-4930_htcondor/named_classad_list.cpp								
ANR	1896634	Function	NamedClassAdList :: NamedClassAdList	30:0:1035:1080							
ANR	1896635	FunctionDef	NamedClassAdList :: NamedClassAdList ()		1896634	0					
ANR	1896636	CompoundStatement		31:0:1078:1080	1896634	0					
ANR	1896637	Identifier	NamedClassAdList :: NamedClassAdList		1896634	1					
ANR	1896638	ParameterList			1896634	2					
ANR	1896639	CFGEntryNode	ENTRY		1896634		True				
ANR	1896640	CFGExitNode	EXIT		1896634		True				
ANR	1896641	Function	NamedClassAdList :: ~NamedClassAdList	34:0:1083:1262							
ANR	1896642	FunctionDef	NamedClassAdList :: ~NamedClassAdList ()		1896641	0					
ANR	1896643	CompoundStatement		35:0:1127:1262	1896641	0					
ANR	1896644	IdentifierDeclStatement	list < NamedClassAd * > :: iterator iter ;	36:1:1130:1165	1896641	0	True				
ANR	1896645	IdentifierDecl	iter		1896641	0					
ANR	1896646	IdentifierDeclType	list < NamedClassAd * > :: iterator		1896641	0					
ANR	1896647	Identifier	iter		1896641	1					
ANR	1896648	ForStatement	for ( iter = m_ads . begin ( ) ; iter != m_ads . end ( ) ; iter ++ )		1896641	1					
ANR	1896649	ForInit	iter = m_ads . begin ( ) ;	37:6:1173:1193	1896641	0	True				
ANR	1896650	AssignmentExpression	iter = m_ads . begin ( )		1896641	0		=			
ANR	1896651	Identifier	iter		1896641	0					
ANR	1896652	CallExpression	m_ads . begin ( )		1896641	1					
ANR	1896653	Callee	m_ads . begin		1896641	0					
ANR	1896654	MemberAccess	m_ads . begin		1896641	0					
ANR	1896655	Identifier	m_ads		1896641	0					
ANR	1896656	Identifier	begin		1896641	1					
ANR	1896657	ArgumentList			1896641	1					
ANR	1896658	Condition	iter != m_ads . end ( )	37:28:1195:1213	1896641	1	True				
ANR	1896659	EqualityExpression	iter != m_ads . end ( )		1896641	0		!=			
ANR	1896660	Identifier	iter		1896641	0					
ANR	1896661	CallExpression	m_ads . end ( )		1896641	1					
ANR	1896662	Callee	m_ads . end		1896641	0					
ANR	1896663	MemberAccess	m_ads . end		1896641	0					
ANR	1896664	Identifier	m_ads		1896641	0					
ANR	1896665	Identifier	end		1896641	1					
ANR	1896666	ArgumentList			1896641	1					
ANR	1896667	PostIncDecOperationExpression	iter ++	37:49:1216:1221	1896641	2	True				
ANR	1896668	Identifier	iter		1896641	0					
ANR	1896669	IncDec	++		1896641	1					
ANR	1896670	CompoundStatement		3:58:97:97	1896641	3					
ANR	1896671	Statement	delete	38:2:1229:1234	1896641	0	True				
ANR	1896672	ExpressionStatement	* iter	38:9:1236:1241	1896641	1	True				
ANR	1896673	UnaryOperationExpression	* iter		1896641	0					
ANR	1896674	UnaryOperator	*		1896641	0					
ANR	1896675	Identifier	iter		1896641	1					
ANR	1896676	ExpressionStatement	m_ads . clear ( )	40:1:1247:1260	1896641	2	True				
ANR	1896677	CallExpression	m_ads . clear ( )		1896641	0					
ANR	1896678	Callee	m_ads . clear		1896641	0					
ANR	1896679	MemberAccess	m_ads . clear		1896641	0					
ANR	1896680	Identifier	m_ads		1896641	0					
ANR	1896681	Identifier	clear		1896641	1					
ANR	1896682	ArgumentList			1896641	1					
ANR	1896683	Identifier	NamedClassAdList :: ~NamedClassAdList		1896641	1					
ANR	1896684	ParameterList			1896641	2					
ANR	1896685	CFGEntryNode	ENTRY		1896641		True				
ANR	1896686	CFGExitNode	EXIT		1896641		True				
ANR	1896687	Symbol	m_ads		1896641						
ANR	1896688	Symbol	m_ads . end		1896641						
ANR	1896689	Symbol	iter		1896641						
ANR	1896690	Symbol	m_ads . begin		1896641						
ANR	1896691	Function	NamedClassAdList :: Find	43:0:1265:1533							
ANR	1896692	FunctionDef	NamedClassAdList :: Find (const char * name)		1896691	0					
ANR	1896693	CompoundStatement		45:0:1323:1533	1896691	0					
ANR	1896694	IdentifierDeclStatement	list < NamedClassAd * > :: iterator iter ;	46:1:1326:1361	1896691	0	True				
ANR	1896695	IdentifierDecl	iter		1896691	0					
ANR	1896696	IdentifierDeclType	list < NamedClassAd * > :: iterator		1896691	0					
ANR	1896697	Identifier	iter		1896691	1					
ANR	1896698	ForStatement	for ( iter = m_ads . begin ( ) ; iter != m_ads . end ( ) ; iter ++ )		1896691	1					
ANR	1896699	ForInit	iter = m_ads . begin ( ) ;	47:6:1369:1389	1896691	0	True				
ANR	1896700	AssignmentExpression	iter = m_ads . begin ( )		1896691	0		=			
ANR	1896701	Identifier	iter		1896691	0					
ANR	1896702	CallExpression	m_ads . begin ( )		1896691	1					
ANR	1896703	Callee	m_ads . begin		1896691	0					
ANR	1896704	MemberAccess	m_ads . begin		1896691	0					
ANR	1896705	Identifier	m_ads		1896691	0					
ANR	1896706	Identifier	begin		1896691	1					
ANR	1896707	ArgumentList			1896691	1					
ANR	1896708	Condition	iter != m_ads . end ( )	47:28:1391:1409	1896691	1	True				
ANR	1896709	EqualityExpression	iter != m_ads . end ( )		1896691	0		!=			
ANR	1896710	Identifier	iter		1896691	0					
ANR	1896711	CallExpression	m_ads . end ( )		1896691	1					
ANR	1896712	Callee	m_ads . end		1896691	0					
ANR	1896713	MemberAccess	m_ads . end		1896691	0					
ANR	1896714	Identifier	m_ads		1896691	0					
ANR	1896715	Identifier	end		1896691	1					
ANR	1896716	ArgumentList			1896691	1					
ANR	1896717	PostIncDecOperationExpression	iter ++	47:49:1412:1417	1896691	2	True				
ANR	1896718	Identifier	iter		1896691	0					
ANR	1896719	IncDec	++		1896691	1					
ANR	1896720	CompoundStatement		4:2:101:126	1896691	3					
ANR	1896721	IdentifierDeclStatement	NamedClassAd * nad = * iter ;	48:2:1425:1450	1896691	0	True				
ANR	1896722	IdentifierDecl	* nad = * iter		1896691	0					
ANR	1896723	IdentifierDeclType	NamedClassAd *		1896691	0					
ANR	1896724	Identifier	nad		1896691	1					
ANR	1896725	AssignmentExpression	* nad = * iter		1896691	2		=			
ANR	1896726	Identifier	nad		1896691	0					
ANR	1896727	UnaryOperationExpression	* iter		1896691	1					
ANR	1896728	UnaryOperator	*		1896691	0					
ANR	1896729	Identifier	iter		1896691	1					
ANR	1896730	IfStatement	"if ( ! strcmp ( nad -> GetName ( ) , name ) )"		1896691	1					
ANR	1896731	Condition	"! strcmp ( nad -> GetName ( ) , name )"	49:7:1459:1491	1896691	0	True				
ANR	1896732	UnaryOperationExpression	"! strcmp ( nad -> GetName ( ) , name )"		1896691	0					
ANR	1896733	UnaryOperator	!		1896691	0					
ANR	1896734	CallExpression	"strcmp ( nad -> GetName ( ) , name )"		1896691	1					
ANR	1896735	Callee	strcmp		1896691	0					
ANR	1896736	Identifier	strcmp		1896691	0					
ANR	1896737	ArgumentList	nad -> GetName ( )		1896691	1					
ANR	1896738	Argument	nad -> GetName ( )		1896691	0					
ANR	1896739	CallExpression	nad -> GetName ( )		1896691	0					
ANR	1896740	Callee	nad -> GetName		1896691	0					
ANR	1896741	PtrMemberAccess	nad -> GetName		1896691	0					
ANR	1896742	Identifier	nad		1896691	0					
ANR	1896743	Identifier	GetName		1896691	1					
ANR	1896744	ArgumentList			1896691	1					
ANR	1896745	Argument	name		1896691	1					
ANR	1896746	Identifier	name		1896691	0					
ANR	1896747	CompoundStatement		5:43:171:171	1896691	1					
ANR	1896748	ReturnStatement	return nad ;	50:3:1500:1510	1896691	0	True				
ANR	1896749	Identifier	nad		1896691	0					
ANR	1896750	ReturnStatement	return NULL ;	53:1:1520:1531	1896691	2	True				
ANR	1896751	Identifier	NULL		1896691	0					
ANR	1896752	ReturnType	NamedClassAd *		1896691	1					
ANR	1896753	Identifier	NamedClassAdList :: Find		1896691	2					
ANR	1896754	ParameterList	const char * name		1896691	3					
ANR	1896755	Parameter	const char * name	44:24:1304:1319	1896691	0	True				
ANR	1896756	ParameterType	const char *		1896691	0					
ANR	1896757	Identifier	name		1896691	1					
ANR	1896758	CFGEntryNode	ENTRY		1896691		True				
ANR	1896759	CFGExitNode	EXIT		1896691		True				
ANR	1896760	Symbol	nad		1896691						
ANR	1896761	Symbol	strcmp		1896691						
ANR	1896762	Symbol	* iter		1896691						
ANR	1896763	Symbol	m_ads		1896691						
ANR	1896764	Symbol	m_ads . end		1896691						
ANR	1896765	Symbol	NULL		1896691						
ANR	1896766	Symbol	name		1896691						
ANR	1896767	Symbol	nad -> GetName		1896691						
ANR	1896768	Symbol	iter		1896691						
ANR	1896769	Symbol	m_ads . begin		1896691						
ANR	1896770	Symbol	* nad		1896691						
ANR	1896771	Function	NamedClassAdList :: Register	56:0:1536:1847							
ANR	1896772	FunctionDef	NamedClassAdList :: Register (const char * name)		1896771	0					
ANR	1896773	CompoundStatement		58:0:1588:1847	1896771	0					
ANR	1896774	IfStatement	if ( Find ( name ) != NULL )		1896771	0					
ANR	1896775	Condition	Find ( name ) != NULL	60:6:1621:1638	1896771	0	True				
ANR	1896776	EqualityExpression	Find ( name ) != NULL		1896771	0		!=			
ANR	1896777	CallExpression	Find ( name )		1896771	0					
ANR	1896778	Callee	Find		1896771	0					
ANR	1896779	Identifier	Find		1896771	0					
ANR	1896780	ArgumentList	name		1896771	1					
ANR	1896781	Argument	name		1896771	0					
ANR	1896782	Identifier	name		1896771	0					
ANR	1896783	Identifier	NULL		1896771	1					
ANR	1896784	CompoundStatement		3:27:53:53	1896771	1					
ANR	1896785	ReturnStatement	return false ;	61:2:1646:1658	1896771	0	True				
ANR	1896786	Identifier	false		1896771	0					
ANR	1896787	ExpressionStatement	"dprintf ( D_JOB , ""Adding '%s' to the Supplimental ClassAd list\\n"" , name )"	65:1:1709:1781	1896771	1	True				
ANR	1896788	CallExpression	"dprintf ( D_JOB , ""Adding '%s' to the Supplimental ClassAd list\\n"" , name )"		1896771	0					
ANR	1896789	Callee	dprintf		1896771	0					
ANR	1896790	Identifier	dprintf		1896771	0					
ANR	1896791	ArgumentList	D_JOB		1896771	1					
ANR	1896792	Argument	D_JOB		1896771	0					
ANR	1896793	Identifier	D_JOB		1896771	0					
ANR	1896794	Argument	"""Adding '%s' to the Supplimental ClassAd list\\n"""		1896771	1					
ANR	1896795	PrimaryExpression	"""Adding '%s' to the Supplimental ClassAd list\\n"""		1896771	0					
ANR	1896796	Argument	name		1896771	2					
ANR	1896797	Identifier	name		1896771	0					
ANR	1896798	ExpressionStatement	"m_ads . push_back ( new NamedClassAd ( name , NULL ) )"	66:1:1784:1831	1896771	2	True				
ANR	1896799	CallExpression	"m_ads . push_back ( new NamedClassAd ( name , NULL ) )"		1896771	0					
ANR	1896800	Callee	m_ads . push_back		1896771	0					
ANR	1896801	MemberAccess	m_ads . push_back		1896771	0					
ANR	1896802	Identifier	m_ads		1896771	0					
ANR	1896803	Identifier	push_back		1896771	1					
ANR	1896804	ArgumentList	"name , NULL"		1896771	1					
ANR	1896805	Argument	"name , NULL"		1896771	0					
ANR	1896806	Expression	"name , NULL"		1896771	0					
ANR	1896807	Identifier	name		1896771	0					
ANR	1896808	Identifier	NULL		1896771	1					
ANR	1896809	ReturnStatement	return true ;	67:1:1834:1845	1896771	3	True				
ANR	1896810	Identifier	true		1896771	0					
ANR	1896811	ReturnType	bool		1896771	1					
ANR	1896812	Identifier	NamedClassAdList :: Register		1896771	2					
ANR	1896813	ParameterList	const char * name		1896771	3					
ANR	1896814	Parameter	const char * name	57:28:1569:1584	1896771	0	True				
ANR	1896815	ParameterType	const char *		1896771	0					
ANR	1896816	Identifier	name		1896771	1					
ANR	1896817	CFGEntryNode	ENTRY		1896771		True				
ANR	1896818	CFGExitNode	EXIT		1896771		True				
ANR	1896819	Symbol	m_ads		1896771						
ANR	1896820	Symbol	NULL		1896771						
ANR	1896821	Symbol	name		1896771						
ANR	1896822	Symbol	Find		1896771						
ANR	1896823	Symbol	false		1896771						
ANR	1896824	Symbol	D_JOB		1896771						
ANR	1896825	Symbol	true		1896771						
ANR	1896826	Function	NamedClassAdList :: Register	70:0:1850:2122							
ANR	1896827	FunctionDef	NamedClassAdList :: Register (NamedClassAd * ad)		1896826	0					
ANR	1896828	CompoundStatement		72:0:1902:2122	1896826	0					
ANR	1896829	IfStatement	if ( Find ( * ad ) != NULL )		1896826	0					
ANR	1896830	Condition	Find ( * ad ) != NULL	73:6:1910:1926	1896826	0	True				
ANR	1896831	EqualityExpression	Find ( * ad ) != NULL		1896826	0		!=			
ANR	1896832	CallExpression	Find ( * ad )		1896826	0					
ANR	1896833	Callee	Find		1896826	0					
ANR	1896834	Identifier	Find		1896826	0					
ANR	1896835	ArgumentList	* ad		1896826	1					
ANR	1896836	Argument	* ad		1896826	0					
ANR	1896837	UnaryOperationExpression	* ad		1896826	0					
ANR	1896838	UnaryOperator	*		1896826	0					
ANR	1896839	Identifier	ad		1896826	1					
ANR	1896840	Identifier	NULL		1896826	1					
ANR	1896841	CompoundStatement		2:26:27:27	1896826	1					
ANR	1896842	ReturnStatement	return false ;	74:2:1934:1946	1896826	0	True				
ANR	1896843	Identifier	false		1896826	0					
ANR	1896844	ExpressionStatement	"dprintf ( D_JOB , ""Adding '%s' to the Supplimental ClassAd list\\n"" , ad -> GetName ( ) )"	78:1:1997:2082	1896826	1	True				
ANR	1896845	CallExpression	"dprintf ( D_JOB , ""Adding '%s' to the Supplimental ClassAd list\\n"" , ad -> GetName ( ) )"		1896826	0					
ANR	1896846	Callee	dprintf		1896826	0					
ANR	1896847	Identifier	dprintf		1896826	0					
ANR	1896848	ArgumentList	D_JOB		1896826	1					
ANR	1896849	Argument	D_JOB		1896826	0					
ANR	1896850	Identifier	D_JOB		1896826	0					
ANR	1896851	Argument	"""Adding '%s' to the Supplimental ClassAd list\\n"""		1896826	1					
ANR	1896852	PrimaryExpression	"""Adding '%s' to the Supplimental ClassAd list\\n"""		1896826	0					
ANR	1896853	Argument	ad -> GetName ( )		1896826	2					
ANR	1896854	CallExpression	ad -> GetName ( )		1896826	0					
ANR	1896855	Callee	ad -> GetName		1896826	0					
ANR	1896856	PtrMemberAccess	ad -> GetName		1896826	0					
ANR	1896857	Identifier	ad		1896826	0					
ANR	1896858	Identifier	GetName		1896826	1					
ANR	1896859	ArgumentList			1896826	1					
ANR	1896860	ExpressionStatement	m_ads . push_back ( ad )	80:1:2085:2106	1896826	2	True				
ANR	1896861	CallExpression	m_ads . push_back ( ad )		1896826	0					
ANR	1896862	Callee	m_ads . push_back		1896826	0					
ANR	1896863	MemberAccess	m_ads . push_back		1896826	0					
ANR	1896864	Identifier	m_ads		1896826	0					
ANR	1896865	Identifier	push_back		1896826	1					
ANR	1896866	ArgumentList	ad		1896826	1					
ANR	1896867	Argument	ad		1896826	0					
ANR	1896868	Identifier	ad		1896826	0					
ANR	1896869	ReturnStatement	return true ;	81:1:2109:2120	1896826	3	True				
ANR	1896870	Identifier	true		1896826	0					
ANR	1896871	ReturnType	bool		1896826	1					
ANR	1896872	Identifier	NamedClassAdList :: Register		1896826	2					
ANR	1896873	ParameterList	NamedClassAd * ad		1896826	3					
ANR	1896874	Parameter	NamedClassAd * ad	71:28:1883:1898	1896826	0	True				
ANR	1896875	ParameterType	NamedClassAd *		1896826	0					
ANR	1896876	Identifier	ad		1896826	1					
ANR	1896877	CFGEntryNode	ENTRY		1896826		True				
ANR	1896878	CFGExitNode	EXIT		1896826		True				
ANR	1896879	Symbol	ad -> GetName		1896826						
ANR	1896880	Symbol	m_ads		1896826						
ANR	1896881	Symbol	ad		1896826						
ANR	1896882	Symbol	NULL		1896826						
ANR	1896883	Symbol	Find		1896826						
ANR	1896884	Symbol	false		1896826						
ANR	1896885	Symbol	D_JOB		1896826						
ANR	1896886	Symbol	true		1896826						
ANR	1896887	Symbol	* ad		1896826						
ANR	1896888	Function	NamedClassAdList :: Replace	84:0:2125:3319							
ANR	1896889	FunctionDef	"NamedClassAdList :: Replace (const char * name , ClassAd * newAd , bool report_diff , StringList * ignore_attrs)"		1896888	0					
ANR	1896890	CompoundStatement		87:0:2245:3319	1896888	0					
ANR	1896891	IdentifierDeclStatement	NamedClassAd * named_ad = Find ( name ) ;	88:1:2248:2285	1896888	0	True				
ANR	1896892	IdentifierDecl	* named_ad = Find ( name )		1896888	0					
ANR	1896893	IdentifierDeclType	NamedClassAd *		1896888	0					
ANR	1896894	Identifier	named_ad		1896888	1					
ANR	1896895	AssignmentExpression	* named_ad = Find ( name )		1896888	2		=			
ANR	1896896	Identifier	named_ad		1896888	0					
ANR	1896897	CallExpression	Find ( name )		1896888	1					
ANR	1896898	Callee	Find		1896888	0					
ANR	1896899	Identifier	Find		1896888	0					
ANR	1896900	ArgumentList	name		1896888	1					
ANR	1896901	Argument	name		1896888	0					
ANR	1896902	Identifier	name		1896888	0					
ANR	1896903	IfStatement	if ( NULL == named_ad )		1896888	1					
ANR	1896904	Condition	NULL == named_ad	89:6:2293:2308	1896888	0	True				
ANR	1896905	EqualityExpression	NULL == named_ad		1896888	0		==			
ANR	1896906	Identifier	NULL		1896888	0					
ANR	1896907	Identifier	named_ad		1896888	1					
ANR	1896908	CompoundStatement		3:25:66:66	1896888	1					
ANR	1896909	ExpressionStatement	"named_ad = new NamedClassAd ( name , newAd )"	90:2:2316:2358	1896888	0	True				
ANR	1896910	AssignmentExpression	"named_ad = new NamedClassAd ( name , newAd )"		1896888	0		=			
ANR	1896911	Identifier	named_ad		1896888	0					
ANR	1896912	Expression	"name , newAd"		1896888	1					
ANR	1896913	Identifier	name		1896888	0					
ANR	1896914	Identifier	newAd		1896888	1					
ANR	1896915	IfStatement	if ( NULL == named_ad )		1896888	1					
ANR	1896916	Condition	NULL == named_ad	91:7:2367:2382	1896888	0	True				
ANR	1896917	EqualityExpression	NULL == named_ad		1896888	0		==			
ANR	1896918	Identifier	NULL		1896888	0					
ANR	1896919	Identifier	named_ad		1896888	1					
ANR	1896920	CompoundStatement		5:26:140:140	1896888	1					
ANR	1896921	ReturnStatement	return - 1 ;	92:3:2391:2400	1896888	0	True				
ANR	1896922	UnaryOperationExpression	- 1		1896888	0					
ANR	1896923	UnaryOperator	-		1896888	0					
ANR	1896924	PrimaryExpression	1		1896888	1					
ANR	1896925	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Adding '%s' to the 'extra' ClassAd list\\n"" , name )"	94:2:2408:2486	1896888	2	True				
ANR	1896926	CallExpression	"dprintf ( D_FULLDEBUG , ""Adding '%s' to the 'extra' ClassAd list\\n"" , name )"		1896888	0					
ANR	1896927	Callee	dprintf		1896888	0					
ANR	1896928	Identifier	dprintf		1896888	0					
ANR	1896929	ArgumentList	D_FULLDEBUG		1896888	1					
ANR	1896930	Argument	D_FULLDEBUG		1896888	0					
ANR	1896931	Identifier	D_FULLDEBUG		1896888	0					
ANR	1896932	Argument	"""Adding '%s' to the 'extra' ClassAd list\\n"""		1896888	1					
ANR	1896933	PrimaryExpression	"""Adding '%s' to the 'extra' ClassAd list\\n"""		1896888	0					
ANR	1896934	Argument	name		1896888	2					
ANR	1896935	Identifier	name		1896888	0					
ANR	1896936	ExpressionStatement	m_ads . push_back ( named_ad )	96:2:2490:2517	1896888	3	True				
ANR	1896937	CallExpression	m_ads . push_back ( named_ad )		1896888	0					
ANR	1896938	Callee	m_ads . push_back		1896888	0					
ANR	1896939	MemberAccess	m_ads . push_back		1896888	0					
ANR	1896940	Identifier	m_ads		1896888	0					
ANR	1896941	Identifier	push_back		1896888	1					
ANR	1896942	ArgumentList	named_ad		1896888	1					
ANR	1896943	Argument	named_ad		1896888	0					
ANR	1896944	Identifier	named_ad		1896888	0					
ANR	1896945	ReturnStatement	return 0 ;	97:2:2521:2529	1896888	4	True				
ANR	1896946	PrimaryExpression	0		1896888	0					
ANR	1896947	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Replacing ClassAd for '%s'\\n"" , name )"	101:1:2561:2621	1896888	2	True				
ANR	1896948	CallExpression	"dprintf ( D_FULLDEBUG , ""Replacing ClassAd for '%s'\\n"" , name )"		1896888	0					
ANR	1896949	Callee	dprintf		1896888	0					
ANR	1896950	Identifier	dprintf		1896888	0					
ANR	1896951	ArgumentList	D_FULLDEBUG		1896888	1					
ANR	1896952	Argument	D_FULLDEBUG		1896888	0					
ANR	1896953	Identifier	D_FULLDEBUG		1896888	0					
ANR	1896954	Argument	"""Replacing ClassAd for '%s'\\n"""		1896888	1					
ANR	1896955	PrimaryExpression	"""Replacing ClassAd for '%s'\\n"""		1896888	0					
ANR	1896956	Argument	name		1896888	2					
ANR	1896957	Identifier	name		1896888	0					
ANR	1896958	IdentifierDeclStatement	bool found_diff = false ;	102:1:2624:2647	1896888	3	True				
ANR	1896959	IdentifierDecl	found_diff = false		1896888	0					
ANR	1896960	IdentifierDeclType	bool		1896888	0					
ANR	1896961	Identifier	found_diff		1896888	1					
ANR	1896962	AssignmentExpression	found_diff = false		1896888	2		=			
ANR	1896963	Identifier	false		1896888	0					
ANR	1896964	Identifier	false		1896888	1					
ANR	1896965	IfStatement	if ( report_diff )		1896888	4					
ANR	1896966	Condition	report_diff	103:5:2654:2664	1896888	0	True				
ANR	1896967	Identifier	report_diff		1896888	0					
ANR	1896968	CompoundStatement		26:2:740:774	1896888	1					
ANR	1896969	IdentifierDeclStatement	ClassAd * oldAd = named_ad -> GetAd ( ) ;	112:2:2986:3020	1896888	0	True				
ANR	1896970	IdentifierDecl	* oldAd = named_ad -> GetAd ( )		1896888	0					
ANR	1896971	IdentifierDeclType	ClassAd *		1896888	0					
ANR	1896972	Identifier	oldAd		1896888	1					
ANR	1896973	AssignmentExpression	* oldAd = named_ad -> GetAd ( )		1896888	2		=			
ANR	1896974	Identifier	oldAd		1896888	0					
ANR	1896975	CallExpression	named_ad -> GetAd ( )		1896888	1					
ANR	1896976	Callee	named_ad -> GetAd		1896888	0					
ANR	1896977	PtrMemberAccess	named_ad -> GetAd		1896888	0					
ANR	1896978	Identifier	named_ad		1896888	0					
ANR	1896979	Identifier	GetAd		1896888	1					
ANR	1896980	ArgumentList			1896888	1					
ANR	1896981	IfStatement	if ( ! oldAd )		1896888	1					
ANR	1896982	Condition	! oldAd	113:6:3028:3034	1896888	0	True				
ANR	1896983	UnaryOperationExpression	! oldAd		1896888	0					
ANR	1896984	UnaryOperator	!		1896888	0					
ANR	1896985	Identifier	oldAd		1896888	1					
ANR	1896986	CompoundStatement		27:16:792:792	1896888	1					
ANR	1896987	ExpressionStatement	found_diff = true	115:3:3095:3112	1896888	0	True				
ANR	1896988	AssignmentExpression	found_diff = true		1896888	0		=			
ANR	1896989	Identifier	found_diff		1896888	0					
ANR	1896990	Identifier	true		1896888	1					
ANR	1896991	ElseStatement	else		1896888	0					
ANR	1896992	CompoundStatement		30:9:877:877	1896888	0					
ANR	1896993	ExpressionStatement	"found_diff = ! ClassAdsAreSame ( newAd , oldAd , ignore_attrs )"	118:3:3182:3240	1896888	0	True				
ANR	1896994	AssignmentExpression	"found_diff = ! ClassAdsAreSame ( newAd , oldAd , ignore_attrs )"		1896888	0		=			
ANR	1896995	Identifier	found_diff		1896888	0					
ANR	1896996	UnaryOperationExpression	"! ClassAdsAreSame ( newAd , oldAd , ignore_attrs )"		1896888	1					
ANR	1896997	UnaryOperator	!		1896888	0					
ANR	1896998	CallExpression	"ClassAdsAreSame ( newAd , oldAd , ignore_attrs )"		1896888	1					
ANR	1896999	Callee	ClassAdsAreSame		1896888	0					
ANR	1897000	Identifier	ClassAdsAreSame		1896888	0					
ANR	1897001	ArgumentList	newAd		1896888	1					
ANR	1897002	Argument	newAd		1896888	0					
ANR	1897003	Identifier	newAd		1896888	0					
ANR	1897004	Argument	oldAd		1896888	1					
ANR	1897005	Identifier	oldAd		1896888	0					
ANR	1897006	Argument	ignore_attrs		1896888	2					
ANR	1897007	Identifier	ignore_attrs		1896888	0					
ANR	1897008	ExpressionStatement	named_ad -> ReplaceAd ( newAd )	121:1:3250:3278	1896888	5	True				
ANR	1897009	CallExpression	named_ad -> ReplaceAd ( newAd )		1896888	0					
ANR	1897010	Callee	named_ad -> ReplaceAd		1896888	0					
ANR	1897011	PtrMemberAccess	named_ad -> ReplaceAd		1896888	0					
ANR	1897012	Identifier	named_ad		1896888	0					
ANR	1897013	Identifier	ReplaceAd		1896888	1					
ANR	1897014	ArgumentList	newAd		1896888	1					
ANR	1897015	Argument	newAd		1896888	0					
ANR	1897016	Identifier	newAd		1896888	0					
ANR	1897017	ReturnStatement	return ( report_diff && found_diff ) ;	122:1:3281:3317	1896888	6	True				
ANR	1897018	AndExpression	report_diff && found_diff		1896888	0		&&			
ANR	1897019	Identifier	report_diff		1896888	0					
ANR	1897020	Identifier	found_diff		1896888	1					
ANR	1897021	ReturnType	int		1896888	1					
ANR	1897022	Identifier	NamedClassAdList :: Replace		1896888	2					
ANR	1897023	ParameterList	"const char * name , ClassAd * newAd , bool report_diff , StringList * ignore_attrs"		1896888	3					
ANR	1897024	Parameter	const char * name	85:27:2156:2171	1896888	0	True				
ANR	1897025	ParameterType	const char *		1896888	0					
ANR	1897026	Identifier	name		1896888	1					
ANR	1897027	Parameter	ClassAd * newAd	85:45:2174:2187	1896888	1	True				
ANR	1897028	ParameterType	ClassAd *		1896888	0					
ANR	1897029	Identifier	newAd		1896888	1					
ANR	1897030	Parameter	bool report_diff	86:9:2200:2215	1896888	2	True				
ANR	1897031	ParameterType	bool		1896888	0					
ANR	1897032	Identifier	report_diff		1896888	1					
ANR	1897033	Parameter	StringList * ignore_attrs	86:27:2218:2241	1896888	3	True				
ANR	1897034	ParameterType	StringList *		1896888	0					
ANR	1897035	Identifier	ignore_attrs		1896888	1					
ANR	1897036	CFGEntryNode	ENTRY		1896888		True				
ANR	1897037	CFGExitNode	EXIT		1896888		True				
ANR	1897038	Symbol	NULL		1896888						
ANR	1897039	Symbol	oldAd		1896888						
ANR	1897040	Symbol	false		1896888						
ANR	1897041	Symbol	* named_ad		1896888						
ANR	1897042	Symbol	D_FULLDEBUG		1896888						
ANR	1897043	Symbol	ClassAdsAreSame		1896888						
ANR	1897044	Symbol	m_ads		1896888						
ANR	1897045	Symbol	ignore_attrs		1896888						
ANR	1897046	Symbol	named_ad		1896888						
ANR	1897047	Symbol	report_diff		1896888						
ANR	1897048	Symbol	found_diff		1896888						
ANR	1897049	Symbol	name		1896888						
ANR	1897050	Symbol	Find		1896888						
ANR	1897051	Symbol	true		1896888						
ANR	1897052	Symbol	named_ad -> GetAd		1896888						
ANR	1897053	Symbol	newAd		1896888						
ANR	1897054	Function	NamedClassAdList :: Delete	125:0:3322:3638							
ANR	1897055	FunctionDef	NamedClassAdList :: Delete (const char * name)		1897054	0					
ANR	1897056	CompoundStatement		127:0:3371:3638	1897054	0					
ANR	1897057	IdentifierDeclStatement	list < NamedClassAd * > :: iterator iter ;	128:1:3374:3409	1897054	0	True				
ANR	1897058	IdentifierDecl	iter		1897054	0					
ANR	1897059	IdentifierDeclType	list < NamedClassAd * > :: iterator		1897054	0					
ANR	1897060	Identifier	iter		1897054	1					
ANR	1897061	ForStatement	for ( iter = m_ads . begin ( ) ; iter != m_ads . end ( ) ; iter ++ )		1897054	1					
ANR	1897062	ForInit	iter = m_ads . begin ( ) ;	129:6:3417:3437	1897054	0	True				
ANR	1897063	AssignmentExpression	iter = m_ads . begin ( )		1897054	0		=			
ANR	1897064	Identifier	iter		1897054	0					
ANR	1897065	CallExpression	m_ads . begin ( )		1897054	1					
ANR	1897066	Callee	m_ads . begin		1897054	0					
ANR	1897067	MemberAccess	m_ads . begin		1897054	0					
ANR	1897068	Identifier	m_ads		1897054	0					
ANR	1897069	Identifier	begin		1897054	1					
ANR	1897070	ArgumentList			1897054	1					
ANR	1897071	Condition	iter != m_ads . end ( )	129:28:3439:3457	1897054	1	True				
ANR	1897072	EqualityExpression	iter != m_ads . end ( )		1897054	0		!=			
ANR	1897073	Identifier	iter		1897054	0					
ANR	1897074	CallExpression	m_ads . end ( )		1897054	1					
ANR	1897075	Callee	m_ads . end		1897054	0					
ANR	1897076	MemberAccess	m_ads . end		1897054	0					
ANR	1897077	Identifier	m_ads		1897054	0					
ANR	1897078	Identifier	end		1897054	1					
ANR	1897079	ArgumentList			1897054	1					
ANR	1897080	PostIncDecOperationExpression	iter ++	129:49:3460:3465	1897054	2	True				
ANR	1897081	Identifier	iter		1897054	0					
ANR	1897082	IncDec	++		1897054	1					
ANR	1897083	CompoundStatement		4:2:101:125	1897054	3					
ANR	1897084	IdentifierDeclStatement	NamedClassAd * ad = * iter ;	130:2:3473:3497	1897054	0	True				
ANR	1897085	IdentifierDecl	* ad = * iter		1897054	0					
ANR	1897086	IdentifierDeclType	NamedClassAd *		1897054	0					
ANR	1897087	Identifier	ad		1897054	1					
ANR	1897088	AssignmentExpression	* ad = * iter		1897054	2		=			
ANR	1897089	Identifier	ad		1897054	0					
ANR	1897090	UnaryOperationExpression	* iter		1897054	1					
ANR	1897091	UnaryOperator	*		1897054	0					
ANR	1897092	Identifier	iter		1897054	1					
ANR	1897093	IfStatement	"if ( ! strcmp ( ad -> GetName ( ) , name ) )"		1897054	1					
ANR	1897094	Condition	"! strcmp ( ad -> GetName ( ) , name )"	131:7:3506:3537	1897054	0	True				
ANR	1897095	UnaryOperationExpression	"! strcmp ( ad -> GetName ( ) , name )"		1897054	0					
ANR	1897096	UnaryOperator	!		1897054	0					
ANR	1897097	CallExpression	"strcmp ( ad -> GetName ( ) , name )"		1897054	1					
ANR	1897098	Callee	strcmp		1897054	0					
ANR	1897099	Identifier	strcmp		1897054	0					
ANR	1897100	ArgumentList	ad -> GetName ( )		1897054	1					
ANR	1897101	Argument	ad -> GetName ( )		1897054	0					
ANR	1897102	CallExpression	ad -> GetName ( )		1897054	0					
ANR	1897103	Callee	ad -> GetName		1897054	0					
ANR	1897104	PtrMemberAccess	ad -> GetName		1897054	0					
ANR	1897105	Identifier	ad		1897054	0					
ANR	1897106	Identifier	GetName		1897054	1					
ANR	1897107	ArgumentList			1897054	1					
ANR	1897108	Argument	name		1897054	1					
ANR	1897109	Identifier	name		1897054	0					
ANR	1897110	CompoundStatement		5:42:169:169	1897054	1					
ANR	1897111	ExpressionStatement	m_ads . erase ( iter )	132:3:3546:3565	1897054	0	True				
ANR	1897112	CallExpression	m_ads . erase ( iter )		1897054	0					
ANR	1897113	Callee	m_ads . erase		1897054	0					
ANR	1897114	MemberAccess	m_ads . erase		1897054	0					
ANR	1897115	Identifier	m_ads		1897054	0					
ANR	1897116	Identifier	erase		1897054	1					
ANR	1897117	ArgumentList	iter		1897054	1					
ANR	1897118	Argument	iter		1897054	0					
ANR	1897119	Identifier	iter		1897054	0					
ANR	1897120	Statement	delete	133:3:3570:3575	1897054	1	True				
ANR	1897121	ExpressionStatement	ad	133:10:3577:3579	1897054	2	True				
ANR	1897122	Identifier	ad		1897054	0					
ANR	1897123	ReturnStatement	return 0 ;	134:3:3584:3592	1897054	3	True				
ANR	1897124	PrimaryExpression	0		1897054	0					
ANR	1897125	ReturnStatement	return 1 ;	139:1:3628:3636	1897054	2	True				
ANR	1897126	PrimaryExpression	1		1897054	0					
ANR	1897127	ReturnType	int		1897054	1					
ANR	1897128	Identifier	NamedClassAdList :: Delete		1897054	2					
ANR	1897129	ParameterList	const char * name		1897054	3					
ANR	1897130	Parameter	const char * name	126:26:3352:3367	1897054	0	True				
ANR	1897131	ParameterType	const char *		1897054	0					
ANR	1897132	Identifier	name		1897054	1					
ANR	1897133	CFGEntryNode	ENTRY		1897054		True				
ANR	1897134	CFGExitNode	EXIT		1897054		True				
ANR	1897135	Symbol	strcmp		1897054						
ANR	1897136	Symbol	* iter		1897054						
ANR	1897137	Symbol	m_ads		1897054						
ANR	1897138	Symbol	ad -> GetName		1897054						
ANR	1897139	Symbol	m_ads . end		1897054						
ANR	1897140	Symbol	ad		1897054						
ANR	1897141	Symbol	name		1897054						
ANR	1897142	Symbol	iter		1897054						
ANR	1897143	Symbol	m_ads . begin		1897054						
ANR	1897144	Symbol	* ad		1897054						
ANR	1897145	Function	NamedClassAdList :: Publish	142:0:3641:4028							
ANR	1897146	FunctionDef	NamedClassAdList :: Publish (ClassAd * merged_ad)		1897145	0					
ANR	1897147	CompoundStatement		144:0:3693:4028	1897145	0					
ANR	1897148	IdentifierDeclStatement	list < NamedClassAd * > :: iterator iter ;	145:1:3696:3731	1897145	0	True				
ANR	1897149	IdentifierDecl	iter		1897145	0					
ANR	1897150	IdentifierDeclType	list < NamedClassAd * > :: iterator		1897145	0					
ANR	1897151	Identifier	iter		1897145	1					
ANR	1897152	ForStatement	for ( iter = m_ads . begin ( ) ; iter != m_ads . end ( ) ; iter ++ )		1897145	1					
ANR	1897153	ForInit	iter = m_ads . begin ( ) ;	146:6:3739:3759	1897145	0	True				
ANR	1897154	AssignmentExpression	iter = m_ads . begin ( )		1897145	0		=			
ANR	1897155	Identifier	iter		1897145	0					
ANR	1897156	CallExpression	m_ads . begin ( )		1897145	1					
ANR	1897157	Callee	m_ads . begin		1897145	0					
ANR	1897158	MemberAccess	m_ads . begin		1897145	0					
ANR	1897159	Identifier	m_ads		1897145	0					
ANR	1897160	Identifier	begin		1897145	1					
ANR	1897161	ArgumentList			1897145	1					
ANR	1897162	Condition	iter != m_ads . end ( )	146:28:3761:3779	1897145	1	True				
ANR	1897163	EqualityExpression	iter != m_ads . end ( )		1897145	0		!=			
ANR	1897164	Identifier	iter		1897145	0					
ANR	1897165	CallExpression	m_ads . end ( )		1897145	1					
ANR	1897166	Callee	m_ads . end		1897145	0					
ANR	1897167	MemberAccess	m_ads . end		1897145	0					
ANR	1897168	Identifier	m_ads		1897145	0					
ANR	1897169	Identifier	end		1897145	1					
ANR	1897170	ArgumentList			1897145	1					
ANR	1897171	PostIncDecOperationExpression	iter ++	146:49:3782:3787	1897145	2	True				
ANR	1897172	Identifier	iter		1897145	0					
ANR	1897173	IncDec	++		1897145	1					
ANR	1897174	CompoundStatement		5:2:130:159	1897145	3					
ANR	1897175	IdentifierDeclStatement	NamedClassAd * nad = * iter ;	147:2:3795:3820	1897145	0	True				
ANR	1897176	IdentifierDecl	* nad = * iter		1897145	0					
ANR	1897177	IdentifierDeclType	NamedClassAd *		1897145	0					
ANR	1897178	Identifier	nad		1897145	1					
ANR	1897179	AssignmentExpression	* nad = * iter		1897145	2		=			
ANR	1897180	Identifier	nad		1897145	0					
ANR	1897181	UnaryOperationExpression	* iter		1897145	1					
ANR	1897182	UnaryOperator	*		1897145	0					
ANR	1897183	Identifier	iter		1897145	1					
ANR	1897184	IdentifierDeclStatement	ClassAd * ad = nad -> GetAd ( ) ;	148:2:3824:3853	1897145	1	True				
ANR	1897185	IdentifierDecl	* ad = nad -> GetAd ( )		1897145	0					
ANR	1897186	IdentifierDeclType	ClassAd *		1897145	0					
ANR	1897187	Identifier	ad		1897145	1					
ANR	1897188	AssignmentExpression	* ad = nad -> GetAd ( )		1897145	2		=			
ANR	1897189	Identifier	ad		1897145	0					
ANR	1897190	CallExpression	nad -> GetAd ( )		1897145	1					
ANR	1897191	Callee	nad -> GetAd		1897145	0					
ANR	1897192	PtrMemberAccess	nad -> GetAd		1897145	0					
ANR	1897193	Identifier	nad		1897145	0					
ANR	1897194	Identifier	GetAd		1897145	1					
ANR	1897195	ArgumentList			1897145	1					
ANR	1897196	IfStatement	if ( NULL != ad )		1897145	2					
ANR	1897197	Condition	NULL != ad	149:7:3862:3871	1897145	0	True				
ANR	1897198	EqualityExpression	NULL != ad		1897145	0		!=			
ANR	1897199	Identifier	NULL		1897145	0					
ANR	1897200	Identifier	ad		1897145	1					
ANR	1897201	CompoundStatement		6:20:181:181	1897145	1					
ANR	1897202	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Publishing ClassAd for '%s'\\n"" , nad -> GetName ( ) )"	150:3:3880:3957	1897145	0	True				
ANR	1897203	CallExpression	"dprintf ( D_FULLDEBUG , ""Publishing ClassAd for '%s'\\n"" , nad -> GetName ( ) )"		1897145	0					
ANR	1897204	Callee	dprintf		1897145	0					
ANR	1897205	Identifier	dprintf		1897145	0					
ANR	1897206	ArgumentList	D_FULLDEBUG		1897145	1					
ANR	1897207	Argument	D_FULLDEBUG		1897145	0					
ANR	1897208	Identifier	D_FULLDEBUG		1897145	0					
ANR	1897209	Argument	"""Publishing ClassAd for '%s'\\n"""		1897145	1					
ANR	1897210	PrimaryExpression	"""Publishing ClassAd for '%s'\\n"""		1897145	0					
ANR	1897211	Argument	nad -> GetName ( )		1897145	2					
ANR	1897212	CallExpression	nad -> GetName ( )		1897145	0					
ANR	1897213	Callee	nad -> GetName		1897145	0					
ANR	1897214	PtrMemberAccess	nad -> GetName		1897145	0					
ANR	1897215	Identifier	nad		1897145	0					
ANR	1897216	Identifier	GetName		1897145	1					
ANR	1897217	ArgumentList			1897145	1					
ANR	1897218	ExpressionStatement	"MergeClassAds ( merged_ad , ad , true )"	152:3:3962:3998	1897145	1	True				
ANR	1897219	CallExpression	"MergeClassAds ( merged_ad , ad , true )"		1897145	0					
ANR	1897220	Callee	MergeClassAds		1897145	0					
ANR	1897221	Identifier	MergeClassAds		1897145	0					
ANR	1897222	ArgumentList	merged_ad		1897145	1					
ANR	1897223	Argument	merged_ad		1897145	0					
ANR	1897224	Identifier	merged_ad		1897145	0					
ANR	1897225	Argument	ad		1897145	1					
ANR	1897226	Identifier	ad		1897145	0					
ANR	1897227	Argument	true		1897145	2					
ANR	1897228	Identifier	true		1897145	0					
ANR	1897229	ReturnStatement	return 0 ;	157:1:4018:4026	1897145	2	True				
ANR	1897230	PrimaryExpression	0		1897145	0					
ANR	1897231	ReturnType	int		1897145	1					
ANR	1897232	Identifier	NamedClassAdList :: Publish		1897145	2					
ANR	1897233	ParameterList	ClassAd * merged_ad		1897145	3					
ANR	1897234	Parameter	ClassAd * merged_ad	143:27:3672:3689	1897145	0	True				
ANR	1897235	ParameterType	ClassAd *		1897145	0					
ANR	1897236	Identifier	merged_ad		1897145	1					
ANR	1897237	CFGEntryNode	ENTRY		1897145		True				
ANR	1897238	CFGExitNode	EXIT		1897145		True				
ANR	1897239	Symbol	m_ads . end		1897145						
ANR	1897240	Symbol	ad		1897145						
ANR	1897241	Symbol	NULL		1897145						
ANR	1897242	Symbol	nad -> GetName		1897145						
ANR	1897243	Symbol	iter		1897145						
ANR	1897244	Symbol	m_ads . begin		1897145						
ANR	1897245	Symbol	D_FULLDEBUG		1897145						
ANR	1897246	Symbol	nad		1897145						
ANR	1897247	Symbol	* iter		1897145						
ANR	1897248	Symbol	m_ads		1897145						
ANR	1897249	Symbol	merged_ad		1897145						
ANR	1897250	Symbol	true		1897145						
ANR	1897251	Symbol	* nad		1897145						
ANR	1897252	Symbol	nad -> GetAd		1897145						
