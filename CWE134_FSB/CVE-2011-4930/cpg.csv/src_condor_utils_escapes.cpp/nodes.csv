command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4730903	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_escapes.cpp								
ANR	4730904	DeclStmt									
ANR	4730905	Decl							int	int ( int )	getHexDigitValue
ANR	4730906	Function	collapse_escapes	28:0:918:2442							
ANR	4730907	FunctionDef	collapse_escapes (char * str)		4730906	0					
ANR	4730908	CompoundStatement		29:0:954:2442	4730906	0					
ANR	4730909	IdentifierDeclStatement	char * cp = str ;	30:1:957:971	4730906	0	True				
ANR	4730910	IdentifierDecl	* cp = str		4730906	0					
ANR	4730911	IdentifierDeclType	char *		4730906	0					
ANR	4730912	Identifier	cp		4730906	1					
ANR	4730913	AssignmentExpression	* cp = str		4730906	2		=			
ANR	4730914	Identifier	str		4730906	0					
ANR	4730915	Identifier	str		4730906	1					
ANR	4730916	IdentifierDeclStatement	char * np ;	31:1:974:982	4730906	1	True				
ANR	4730917	IdentifierDecl	* np		4730906	0					
ANR	4730918	IdentifierDeclType	char *		4730906	0					
ANR	4730919	Identifier	np		4730906	1					
ANR	4730920	IdentifierDeclStatement	int value ;	32:1:985:995	4730906	2	True				
ANR	4730921	IdentifierDecl	value		4730906	0					
ANR	4730922	IdentifierDeclType	int		4730906	0					
ANR	4730923	Identifier	value		4730906	1					
ANR	4730924	IdentifierDeclStatement	int length = strlen ( str ) ;	33:1:998:1025	4730906	3	True				
ANR	4730925	IdentifierDecl	length = strlen ( str )		4730906	0					
ANR	4730926	IdentifierDeclType	int		4730906	0					
ANR	4730927	Identifier	length		4730906	1					
ANR	4730928	AssignmentExpression	length = strlen ( str )		4730906	2		=			
ANR	4730929	Identifier	length		4730906	0					
ANR	4730930	CallExpression	strlen ( str )		4730906	1					
ANR	4730931	Callee	strlen		4730906	0					
ANR	4730932	Identifier	strlen		4730906	0					
ANR	4730933	ArgumentList	str		4730906	1					
ANR	4730934	Argument	str		4730906	0					
ANR	4730935	Identifier	str		4730906	0					
ANR	4730936	IdentifierDeclStatement	int count ;	34:1:1028:1038	4730906	4	True				
ANR	4730937	IdentifierDecl	count		4730906	0					
ANR	4730938	IdentifierDeclType	int		4730906	0					
ANR	4730939	Identifier	count		4730906	1					
ANR	4730940	WhileStatement	while ( * cp )		4730906	5					
ANR	4730941	Condition	* cp	36:8:1049:1051	4730906	0	True				
ANR	4730942	UnaryOperationExpression	* cp		4730906	0					
ANR	4730943	UnaryOperator	*		4730906	0					
ANR	4730944	Identifier	cp		4730906	1					
ANR	4730945	CompoundStatement		8:14:100:100	4730906	1					
ANR	4730946	WhileStatement	while ( * cp && * cp != '\\\\' )		4730906	0					
ANR	4730947	Condition	* cp && * cp != '\\\\'	38:9:1103:1120	4730906	0	True				
ANR	4730948	AndExpression	* cp && * cp != '\\\\'		4730906	0		&&			
ANR	4730949	UnaryOperationExpression	* cp		4730906	0					
ANR	4730950	UnaryOperator	*		4730906	0					
ANR	4730951	Identifier	cp		4730906	1					
ANR	4730952	EqualityExpression	* cp != '\\\\'		4730906	1		!=			
ANR	4730953	UnaryOperationExpression	* cp		4730906	0					
ANR	4730954	UnaryOperator	*		4730906	0					
ANR	4730955	Identifier	cp		4730906	1					
ANR	4730956	PrimaryExpression	'\\\\'		4730906	1					
ANR	4730957	ExpressionStatement	cp ++	38:30:1124:1128	4730906	1	True				
ANR	4730958	PostIncDecOperationExpression	cp ++		4730906	0					
ANR	4730959	Identifier	cp		4730906	0					
ANR	4730960	IncDec	++		4730906	1					
ANR	4730961	IfStatement	if ( ! * cp )		4730906	1					
ANR	4730962	Condition	! * cp	41:6:1157:1160	4730906	0	True				
ANR	4730963	UnaryOperationExpression	! * cp		4730906	0					
ANR	4730964	UnaryOperator	!		4730906	0					
ANR	4730965	UnaryOperationExpression	* cp		4730906	1					
ANR	4730966	UnaryOperator	*		4730906	0					
ANR	4730967	Identifier	cp		4730906	1					
ANR	4730968	BreakStatement	break ;	41:13:1164:1169	4730906	1	True				
ANR	4730969	ExpressionStatement	np = cp + 1	44:2:1199:1210	4730906	2	True				
ANR	4730970	AssignmentExpression	np = cp + 1		4730906	0		=			
ANR	4730971	Identifier	np		4730906	0					
ANR	4730972	AdditiveExpression	cp + 1		4730906	1		+			
ANR	4730973	Identifier	cp		4730906	0					
ANR	4730974	PrimaryExpression	1		4730906	1					
ANR	4730975	SwitchStatement	switch ( * np )		4730906	3					
ANR	4730976	Condition	* np	45:10:1222:1224	4730906	0	True				
ANR	4730977	UnaryOperationExpression	* np		4730906	0					
ANR	4730978	UnaryOperator	*		4730906	0					
ANR	4730979	Identifier	np		4730906	1					
ANR	4730980	CompoundStatement		17:16:273:273	4730906	1					
ANR	4730981	Label	case 'a' :	46:3:1233:1241	4730906	0	True				
ANR	4730982	ExpressionStatement	value = '\\a'	46:13:1243:1255	4730906	1	True				
ANR	4730983	AssignmentExpression	value = '\\a'		4730906	0		=			
ANR	4730984	Identifier	value		4730906	0					
ANR	4730985	PrimaryExpression	'\\a'		4730906	1					
ANR	4730986	ExpressionStatement	np ++	46:27:1257:1261	4730906	2	True				
ANR	4730987	PostIncDecOperationExpression	np ++		4730906	0					
ANR	4730988	Identifier	np		4730906	0					
ANR	4730989	IncDec	++		4730906	1					
ANR	4730990	BreakStatement	break ;	46:33:1263:1268	4730906	3	True				
ANR	4730991	Label	case 'b' :	47:3:1273:1281	4730906	4	True				
ANR	4730992	ExpressionStatement	value = '\\b'	47:13:1283:1295	4730906	5	True				
ANR	4730993	AssignmentExpression	value = '\\b'		4730906	0		=			
ANR	4730994	Identifier	value		4730906	0					
ANR	4730995	PrimaryExpression	'\\b'		4730906	1					
ANR	4730996	ExpressionStatement	np ++	47:27:1297:1301	4730906	6	True				
ANR	4730997	PostIncDecOperationExpression	np ++		4730906	0					
ANR	4730998	Identifier	np		4730906	0					
ANR	4730999	IncDec	++		4730906	1					
ANR	4731000	BreakStatement	break ;	47:33:1303:1308	4730906	7	True				
ANR	4731001	Label	case 'f' :	48:3:1313:1321	4730906	8	True				
ANR	4731002	ExpressionStatement	value = '\\f'	48:13:1323:1335	4730906	9	True				
ANR	4731003	AssignmentExpression	value = '\\f'		4730906	0		=			
ANR	4731004	Identifier	value		4730906	0					
ANR	4731005	PrimaryExpression	'\\f'		4730906	1					
ANR	4731006	ExpressionStatement	np ++	48:27:1337:1341	4730906	10	True				
ANR	4731007	PostIncDecOperationExpression	np ++		4730906	0					
ANR	4731008	Identifier	np		4730906	0					
ANR	4731009	IncDec	++		4730906	1					
ANR	4731010	BreakStatement	break ;	48:33:1343:1348	4730906	11	True				
ANR	4731011	Label	case 'n' :	49:3:1353:1361	4730906	12	True				
ANR	4731012	ExpressionStatement	value = '\\n'	49:13:1363:1375	4730906	13	True				
ANR	4731013	AssignmentExpression	value = '\\n'		4730906	0		=			
ANR	4731014	Identifier	value		4730906	0					
ANR	4731015	PrimaryExpression	'\\n'		4730906	1					
ANR	4731016	ExpressionStatement	np ++	49:27:1377:1381	4730906	14	True				
ANR	4731017	PostIncDecOperationExpression	np ++		4730906	0					
ANR	4731018	Identifier	np		4730906	0					
ANR	4731019	IncDec	++		4730906	1					
ANR	4731020	BreakStatement	break ;	49:33:1383:1388	4730906	15	True				
ANR	4731021	Label	case 'r' :	50:3:1393:1401	4730906	16	True				
ANR	4731022	ExpressionStatement	value = '\\r'	50:13:1403:1415	4730906	17	True				
ANR	4731023	AssignmentExpression	value = '\\r'		4730906	0		=			
ANR	4731024	Identifier	value		4730906	0					
ANR	4731025	PrimaryExpression	'\\r'		4730906	1					
ANR	4731026	ExpressionStatement	np ++	50:27:1417:1421	4730906	18	True				
ANR	4731027	PostIncDecOperationExpression	np ++		4730906	0					
ANR	4731028	Identifier	np		4730906	0					
ANR	4731029	IncDec	++		4730906	1					
ANR	4731030	BreakStatement	break ;	50:33:1423:1428	4730906	19	True				
ANR	4731031	Label	case 't' :	51:3:1433:1441	4730906	20	True				
ANR	4731032	ExpressionStatement	value = '\\t'	51:13:1443:1455	4730906	21	True				
ANR	4731033	AssignmentExpression	value = '\\t'		4730906	0		=			
ANR	4731034	Identifier	value		4730906	0					
ANR	4731035	PrimaryExpression	'\\t'		4730906	1					
ANR	4731036	ExpressionStatement	np ++	51:27:1457:1461	4730906	22	True				
ANR	4731037	PostIncDecOperationExpression	np ++		4730906	0					
ANR	4731038	Identifier	np		4730906	0					
ANR	4731039	IncDec	++		4730906	1					
ANR	4731040	BreakStatement	break ;	51:33:1463:1468	4730906	23	True				
ANR	4731041	Label	case 'v' :	52:3:1473:1481	4730906	24	True				
ANR	4731042	ExpressionStatement	value = '\\v'	52:13:1483:1495	4730906	25	True				
ANR	4731043	AssignmentExpression	value = '\\v'		4730906	0		=			
ANR	4731044	Identifier	value		4730906	0					
ANR	4731045	PrimaryExpression	'\\v'		4730906	1					
ANR	4731046	ExpressionStatement	np ++	52:27:1497:1501	4730906	26	True				
ANR	4731047	PostIncDecOperationExpression	np ++		4730906	0					
ANR	4731048	Identifier	np		4730906	0					
ANR	4731049	IncDec	++		4730906	1					
ANR	4731050	BreakStatement	break ;	52:33:1503:1508	4730906	27	True				
ANR	4731051	Label	case '\\\\' :	53:3:1513:1522	4730906	28	True				
ANR	4731052	ExpressionStatement	value = '\\\\'	53:14:1524:1536	4730906	29	True				
ANR	4731053	AssignmentExpression	value = '\\\\'		4730906	0		=			
ANR	4731054	Identifier	value		4730906	0					
ANR	4731055	PrimaryExpression	'\\\\'		4730906	1					
ANR	4731056	ExpressionStatement	np ++	53:28:1538:1542	4730906	30	True				
ANR	4731057	PostIncDecOperationExpression	np ++		4730906	0					
ANR	4731058	Identifier	np		4730906	0					
ANR	4731059	IncDec	++		4730906	1					
ANR	4731060	BreakStatement	break ;	53:34:1544:1549	4730906	31	True				
ANR	4731061	Label	case '\\?' :	54:3:1554:1563	4730906	32	True				
ANR	4731062	ExpressionStatement	value = '\\?'	54:14:1565:1577	4730906	33	True				
ANR	4731063	AssignmentExpression	value = '\\?'		4730906	0		=			
ANR	4731064	Identifier	value		4730906	0					
ANR	4731065	PrimaryExpression	'\\?'		4730906	1					
ANR	4731066	ExpressionStatement	np ++	54:28:1579:1583	4730906	34	True				
ANR	4731067	PostIncDecOperationExpression	np ++		4730906	0					
ANR	4731068	Identifier	np		4730906	0					
ANR	4731069	IncDec	++		4730906	1					
ANR	4731070	BreakStatement	break ;	54:34:1585:1590	4730906	35	True				
ANR	4731071	Label	case '\\'' :	55:3:1595:1604	4730906	36	True				
ANR	4731072	ExpressionStatement	value = '\\''	55:14:1606:1618	4730906	37	True				
ANR	4731073	AssignmentExpression	value = '\\''		4730906	0		=			
ANR	4731074	Identifier	value		4730906	0					
ANR	4731075	PrimaryExpression	'\\''		4730906	1					
ANR	4731076	ExpressionStatement	np ++	55:28:1620:1624	4730906	38	True				
ANR	4731077	PostIncDecOperationExpression	np ++		4730906	0					
ANR	4731078	Identifier	np		4730906	0					
ANR	4731079	IncDec	++		4730906	1					
ANR	4731080	BreakStatement	break ;	55:34:1626:1631	4730906	39	True				
ANR	4731081	Label	"case '\\""' :"	56:3:1636:1645	4730906	40	True				
ANR	4731082	ExpressionStatement	"value = '\\""'"	56:14:1647:1659	4730906	41	True				
ANR	4731083	AssignmentExpression	"value = '\\""'"		4730906	0		=			
ANR	4731084	Identifier	value		4730906	0					
ANR	4731085	PrimaryExpression	"'\\""'"		4730906	1					
ANR	4731086	ExpressionStatement	np ++	56:28:1661:1665	4730906	42	True				
ANR	4731087	PostIncDecOperationExpression	np ++		4730906	0					
ANR	4731088	Identifier	np		4730906	0					
ANR	4731089	IncDec	++		4730906	1					
ANR	4731090	BreakStatement	break ;	56:34:1667:1672	4730906	43	True				
ANR	4731091	Label	default :	58:3:1678:1685	4730906	44	True				
ANR	4731092	Identifier	default		4730906	0					
ANR	4731093	IfStatement	if ( isdigit ( * np ) )		4730906	45					
ANR	4731094	Condition	isdigit ( * np )	60:8:1717:1730	4730906	0	True				
ANR	4731095	CallExpression	isdigit ( * np )		4730906	0					
ANR	4731096	Callee	isdigit		4730906	0					
ANR	4731097	Identifier	isdigit		4730906	0					
ANR	4731098	ArgumentList	* np		4730906	1					
ANR	4731099	Argument	* np		4730906	0					
ANR	4731100	UnaryOperationExpression	* np		4730906	0					
ANR	4731101	UnaryOperator	*		4730906	0					
ANR	4731102	Identifier	np		4730906	1					
ANR	4731103	CompoundStatement		32:25:779:779	4730906	1					
ANR	4731104	ExpressionStatement	value = 0	61:5:1741:1750	4730906	0	True				
ANR	4731105	AssignmentExpression	value = 0		4730906	0		=			
ANR	4731106	Identifier	value		4730906	0					
ANR	4731107	PrimaryExpression	0		4730906	1					
ANR	4731108	WhileStatement	while ( * np && isdigit ( * np ) )		4730906	1					
ANR	4731109	Condition	* np && isdigit ( * np )	62:12:1764:1784	4730906	0	True				
ANR	4731110	AndExpression	* np && isdigit ( * np )		4730906	0		&&			
ANR	4731111	UnaryOperationExpression	* np		4730906	0					
ANR	4731112	UnaryOperator	*		4730906	0					
ANR	4731113	Identifier	np		4730906	1					
ANR	4731114	CallExpression	isdigit ( * np )		4730906	1					
ANR	4731115	Callee	isdigit		4730906	0					
ANR	4731116	Identifier	isdigit		4730906	0					
ANR	4731117	ArgumentList	* np		4730906	1					
ANR	4731118	Argument	* np		4730906	0					
ANR	4731119	UnaryOperationExpression	* np		4730906	0					
ANR	4731120	UnaryOperator	*		4730906	0					
ANR	4731121	Identifier	np		4730906	1					
ANR	4731122	CompoundStatement		34:36:833:833	4730906	1					
ANR	4731123	ExpressionStatement	value += value * 8 + ( ( * np ) - '0' )	63:6:1796:1828	4730906	0	True				
ANR	4731124	AssignmentExpression	value += value * 8 + ( ( * np ) - '0' )		4730906	0		+=			
ANR	4731125	Identifier	value		4730906	0					
ANR	4731126	AdditiveExpression	value * 8 + ( ( * np ) - '0' )		4730906	1		+			
ANR	4731127	MultiplicativeExpression	value * 8		4730906	0		*			
ANR	4731128	Identifier	value		4730906	0					
ANR	4731129	PrimaryExpression	8		4730906	1					
ANR	4731130	AdditiveExpression	( * np ) - '0'		4730906	1		-			
ANR	4731131	UnaryOperationExpression	* np		4730906	0					
ANR	4731132	UnaryOperator	*		4730906	0					
ANR	4731133	Identifier	np		4730906	1					
ANR	4731134	PrimaryExpression	'0'		4730906	1					
ANR	4731135	ExpressionStatement	np ++	64:6:1836:1840	4730906	1	True				
ANR	4731136	PostIncDecOperationExpression	np ++		4730906	0					
ANR	4731137	Identifier	np		4730906	0					
ANR	4731138	IncDec	++		4730906	1					
ANR	4731139	ElseStatement	else		4730906	0					
ANR	4731140	IfStatement	if ( * np == 'x' )		4730906	0					
ANR	4731141	Condition	* np == 'x'	66:16:1865:1874	4730906	0	True				
ANR	4731142	EqualityExpression	* np == 'x'		4730906	0		==			
ANR	4731143	UnaryOperationExpression	* np		4730906	0					
ANR	4731144	UnaryOperator	*		4730906	0					
ANR	4731145	Identifier	np		4730906	1					
ANR	4731146	PrimaryExpression	'x'		4730906	1					
ANR	4731147	CompoundStatement		38:29:923:923	4730906	1					
ANR	4731148	ExpressionStatement	value = 0	68:5:1914:1923	4730906	0	True				
ANR	4731149	AssignmentExpression	value = 0		4730906	0		=			
ANR	4731150	Identifier	value		4730906	0					
ANR	4731151	PrimaryExpression	0		4730906	1					
ANR	4731152	ExpressionStatement	np ++	69:5:1930:1934	4730906	1	True				
ANR	4731153	PostIncDecOperationExpression	np ++		4730906	0					
ANR	4731154	Identifier	np		4730906	0					
ANR	4731155	IncDec	++		4730906	1					
ANR	4731156	WhileStatement	while ( * np && isxdigit ( * np ) )		4730906	2					
ANR	4731157	Condition	* np && isxdigit ( * np )	70:12:1948:1969	4730906	0	True				
ANR	4731158	AndExpression	* np && isxdigit ( * np )		4730906	0		&&			
ANR	4731159	UnaryOperationExpression	* np		4730906	0					
ANR	4731160	UnaryOperator	*		4730906	0					
ANR	4731161	Identifier	np		4730906	1					
ANR	4731162	CallExpression	isxdigit ( * np )		4730906	1					
ANR	4731163	Callee	isxdigit		4730906	0					
ANR	4731164	Identifier	isxdigit		4730906	0					
ANR	4731165	ArgumentList	* np		4730906	1					
ANR	4731166	Argument	* np		4730906	0					
ANR	4731167	UnaryOperationExpression	* np		4730906	0					
ANR	4731168	UnaryOperator	*		4730906	0					
ANR	4731169	Identifier	np		4730906	1					
ANR	4731170	CompoundStatement		42:37:1018:1018	4730906	1					
ANR	4731171	ExpressionStatement	value += value * 16 + getHexDigitValue ( * np )	71:6:1981:2022	4730906	0	True				
ANR	4731172	AssignmentExpression	value += value * 16 + getHexDigitValue ( * np )		4730906	0		+=			
ANR	4731173	Identifier	value		4730906	0					
ANR	4731174	AdditiveExpression	value * 16 + getHexDigitValue ( * np )		4730906	1		+			
ANR	4731175	MultiplicativeExpression	value * 16		4730906	0		*			
ANR	4731176	Identifier	value		4730906	0					
ANR	4731177	PrimaryExpression	16		4730906	1					
ANR	4731178	CallExpression	getHexDigitValue ( * np )		4730906	1					
ANR	4731179	Callee	getHexDigitValue		4730906	0					
ANR	4731180	Identifier	getHexDigitValue		4730906	0					
ANR	4731181	ArgumentList	* np		4730906	1					
ANR	4731182	Argument	* np		4730906	0					
ANR	4731183	UnaryOperationExpression	* np		4730906	0					
ANR	4731184	UnaryOperator	*		4730906	0					
ANR	4731185	Identifier	np		4730906	1					
ANR	4731186	ExpressionStatement	np ++	72:6:2030:2034	4730906	1	True				
ANR	4731187	PostIncDecOperationExpression	np ++		4730906	0					
ANR	4731188	Identifier	np		4730906	0					
ANR	4731189	IncDec	++		4730906	1					
ANR	4731190	ElseStatement	else		4730906	0					
ANR	4731191	CompoundStatement		46:11:1099:1099	4730906	0					
ANR	4731192	ExpressionStatement	value = * np	76:5:2099:2110	4730906	0	True				
ANR	4731193	AssignmentExpression	value = * np		4730906	0		=			
ANR	4731194	Identifier	value		4730906	0					
ANR	4731195	UnaryOperationExpression	* np		4730906	1					
ANR	4731196	UnaryOperator	*		4730906	0					
ANR	4731197	Identifier	np		4730906	1					
ANR	4731198	ExpressionStatement	np ++	77:5:2117:2121	4730906	1	True				
ANR	4731199	PostIncDecOperationExpression	np ++		4730906	0					
ANR	4731200	Identifier	np		4730906	0					
ANR	4731201	IncDec	++		4730906	1					
ANR	4731202	ExpressionStatement	count = length - ( np - str ) + 1	82:2:2197:2229	4730906	4	True				
ANR	4731203	AssignmentExpression	count = length - ( np - str ) + 1		4730906	0		=			
ANR	4731204	Identifier	count		4730906	0					
ANR	4731205	AdditiveExpression	length - ( np - str ) + 1		4730906	1		-			
ANR	4731206	Identifier	length		4730906	0					
ANR	4731207	AdditiveExpression	( np - str ) + 1		4730906	1		+			
ANR	4731208	AdditiveExpression	np - str		4730906	0		-			
ANR	4731209	Identifier	np		4730906	0					
ANR	4731210	Identifier	str		4730906	1					
ANR	4731211	PrimaryExpression	1		4730906	1					
ANR	4731212	ExpressionStatement	length = length - ( np - cp ) + 1	83:2:2233:2265	4730906	5	True				
ANR	4731213	AssignmentExpression	length = length - ( np - cp ) + 1		4730906	0		=			
ANR	4731214	Identifier	length		4730906	0					
ANR	4731215	AdditiveExpression	length - ( np - cp ) + 1		4730906	1		-			
ANR	4731216	Identifier	length		4730906	0					
ANR	4731217	AdditiveExpression	( np - cp ) + 1		4730906	1		+			
ANR	4731218	AdditiveExpression	np - cp		4730906	0		-			
ANR	4731219	Identifier	np		4730906	0					
ANR	4731220	Identifier	cp		4730906	1					
ANR	4731221	PrimaryExpression	1		4730906	1					
ANR	4731222	ExpressionStatement	* cp = value	86:2:2341:2352	4730906	6	True				
ANR	4731223	AssignmentExpression	* cp = value		4730906	0		=			
ANR	4731224	UnaryOperationExpression	* cp		4730906	0					
ANR	4731225	UnaryOperator	*		4730906	0					
ANR	4731226	Identifier	cp		4730906	1					
ANR	4731227	Identifier	value		4730906	1					
ANR	4731228	ExpressionStatement	"memmove ( cp + 1 , np , count )"	87:2:2356:2382	4730906	7	True				
ANR	4731229	CallExpression	"memmove ( cp + 1 , np , count )"		4730906	0					
ANR	4731230	Callee	memmove		4730906	0					
ANR	4731231	Identifier	memmove		4730906	0					
ANR	4731232	ArgumentList	cp + 1		4730906	1					
ANR	4731233	Argument	cp + 1		4730906	0					
ANR	4731234	AdditiveExpression	cp + 1		4730906	0		+			
ANR	4731235	Identifier	cp		4730906	0					
ANR	4731236	PrimaryExpression	1		4730906	1					
ANR	4731237	Argument	np		4730906	1					
ANR	4731238	Identifier	np		4730906	0					
ANR	4731239	Argument	count		4730906	2					
ANR	4731240	Identifier	count		4730906	0					
ANR	4731241	ExpressionStatement	cp ++	90:2:2418:2422	4730906	8	True				
ANR	4731242	PostIncDecOperationExpression	cp ++		4730906	0					
ANR	4731243	Identifier	cp		4730906	0					
ANR	4731244	IncDec	++		4730906	1					
ANR	4731245	ReturnStatement	return str ;	93:1:2430:2440	4730906	6	True				
ANR	4731246	Identifier	str		4730906	0					
ANR	4731247	ReturnType	char *		4730906	1					
ANR	4731248	Identifier	collapse_escapes		4730906	2					
ANR	4731249	ParameterList	char * str		4730906	3					
ANR	4731250	Parameter	char * str	28:24:942:950	4730906	0	True				
ANR	4731251	ParameterType	char *		4730906	0					
ANR	4731252	Identifier	str		4730906	1					
ANR	4731253	CFGEntryNode	ENTRY		4730906		True				
ANR	4731254	CFGExitNode	EXIT		4730906		True				
ANR	4731255	Symbol	str		4730906						
ANR	4731256	Symbol	* cp		4730906						
ANR	4731257	Symbol	strlen		4730906						
ANR	4731258	Symbol	np		4730906						
ANR	4731259	Symbol	getHexDigitValue		4730906						
ANR	4731260	Symbol	length		4730906						
ANR	4731261	Symbol	count		4730906						
ANR	4731262	Symbol	* np		4730906						
ANR	4731263	Symbol	cp		4730906						
ANR	4731264	Symbol	value		4730906						
ANR	4731265	Symbol	isdigit		4730906						
ANR	4731266	Symbol	isxdigit		4730906						
ANR	4731267	Function	getHexDigitValue	97:0:2446:2589							
ANR	4731268	FunctionDef	getHexDigitValue (int c)		4731267	0					
ANR	4731269	CompoundStatement		99:0:2484:2589	4731267	0					
ANR	4731270	ExpressionStatement	c = tolower ( c )	100:1:2487:2501	4731267	0	True				
ANR	4731271	AssignmentExpression	c = tolower ( c )		4731267	0		=			
ANR	4731272	Identifier	c		4731267	0					
ANR	4731273	CallExpression	tolower ( c )		4731267	1					
ANR	4731274	Callee	tolower		4731267	0					
ANR	4731275	Identifier	tolower		4731267	0					
ANR	4731276	ArgumentList	c		4731267	1					
ANR	4731277	Argument	c		4731267	0					
ANR	4731278	Identifier	c		4731267	0					
ANR	4731279	IfStatement	if ( isdigit ( c ) )		4731267	1					
ANR	4731280	Condition	isdigit ( c )	101:5:2508:2517	4731267	0	True				
ANR	4731281	CallExpression	isdigit ( c )		4731267	0					
ANR	4731282	Callee	isdigit		4731267	0					
ANR	4731283	Identifier	isdigit		4731267	0					
ANR	4731284	ArgumentList	c		4731267	1					
ANR	4731285	Argument	c		4731267	0					
ANR	4731286	Identifier	c		4731267	0					
ANR	4731287	ReturnStatement	return ( c - '0' ) ;	101:17:2520:2536	4731267	1	True				
ANR	4731288	AdditiveExpression	c - '0'		4731267	0		-			
ANR	4731289	Identifier	c		4731267	0					
ANR	4731290	PrimaryExpression	'0'		4731267	1					
ANR	4731291	IfStatement	if ( isxdigit ( c ) )		4731267	2					
ANR	4731292	Condition	isxdigit ( c )	102:5:2543:2553	4731267	0	True				
ANR	4731293	CallExpression	isxdigit ( c )		4731267	0					
ANR	4731294	Callee	isxdigit		4731267	0					
ANR	4731295	Identifier	isxdigit		4731267	0					
ANR	4731296	ArgumentList	c		4731267	1					
ANR	4731297	Argument	c		4731267	0					
ANR	4731298	Identifier	c		4731267	0					
ANR	4731299	ReturnStatement	return ( c - 'a' ) + 10 ;	102:17:2555:2576	4731267	1	True				
ANR	4731300	AdditiveExpression	( c - 'a' ) + 10		4731267	0		+			
ANR	4731301	AdditiveExpression	c - 'a'		4731267	0		-			
ANR	4731302	Identifier	c		4731267	0					
ANR	4731303	PrimaryExpression	'a'		4731267	1					
ANR	4731304	PrimaryExpression	10		4731267	1					
ANR	4731305	ReturnStatement	return 0 ;	103:1:2579:2587	4731267	3	True				
ANR	4731306	PrimaryExpression	0		4731267	0					
ANR	4731307	ReturnType	static int		4731267	1					
ANR	4731308	Identifier	getHexDigitValue		4731267	2					
ANR	4731309	ParameterList	int c		4731267	3					
ANR	4731310	Parameter	int c	98:18:2476:2480	4731267	0	True				
ANR	4731311	ParameterType	int		4731267	0					
ANR	4731312	Identifier	c		4731267	1					
ANR	4731313	CFGEntryNode	ENTRY		4731267		True				
ANR	4731314	CFGExitNode	EXIT		4731267		True				
ANR	4731315	Symbol	c		4731267						
ANR	4731316	Symbol	tolower		4731267						
ANR	4731317	Symbol	isdigit		4731267						
ANR	4731318	Symbol	isxdigit		4731267						
