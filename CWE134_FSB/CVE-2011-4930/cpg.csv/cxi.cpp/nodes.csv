command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1043924	File	data/converged/CVE-2011-4930_htcondor/cxi.cpp								
ANR	1043925	ClassDef	Commands	27:0:921:1197							
ANR	1043926	DeclStmt									
ANR	1043927	Decl							string	string [ ]	CommandWords
ANR	1043928	DeclStmt									
ANR	1043929	Decl							void	void ( void )	help
ANR	1043930	DeclStmt									
ANR	1043931	Decl							int	int ( string cmdStr )	findCommand
ANR	1043932	Function	main	71:0:1507:7865							
ANR	1043933	FunctionDef	main ()		1043932	0					
ANR	1043934	CompoundStatement		73:0:1525:7865	1043932	0					
ANR	1043935	IdentifierDeclStatement	"ClassAd * ad , * adptr ;"	74:1:1528:1549	1043932	0	True				
ANR	1043936	IdentifierDecl	* ad		1043932	0					
ANR	1043937	IdentifierDeclType	ClassAd *		1043932	0					
ANR	1043938	Identifier	ad		1043932	1					
ANR	1043939	IdentifierDecl	* adptr		1043932	1					
ANR	1043940	IdentifierDeclType	ClassAd *		1043932	0					
ANR	1043941	Identifier	adptr		1043932	1					
ANR	1043942	IdentifierDeclStatement	string cmdString ;	75:4:1555:1580	1043932	1	True				
ANR	1043943	IdentifierDecl	cmdString		1043932	0					
ANR	1043944	IdentifierDeclType	string		1043932	0					
ANR	1043945	Identifier	cmdString		1043932	1					
ANR	1043946	IdentifierDeclStatement	"ExprTree * expr = NULL , * fexpr = NULL ;"	76:1:1583:1616	1043932	2	True				
ANR	1043947	IdentifierDecl	* expr = NULL		1043932	0					
ANR	1043948	IdentifierDeclType	ExprTree *		1043932	0					
ANR	1043949	Identifier	expr		1043932	1					
ANR	1043950	AssignmentExpression	* expr = NULL		1043932	2		=			
ANR	1043951	Identifier	NULL		1043932	0					
ANR	1043952	Identifier	NULL		1043932	1					
ANR	1043953	IdentifierDecl	* fexpr = NULL		1043932	1					
ANR	1043954	IdentifierDeclType	ExprTree *		1043932	0					
ANR	1043955	Identifier	fexpr		1043932	1					
ANR	1043956	AssignmentExpression	* fexpr = NULL		1043932	2		=			
ANR	1043957	Identifier	NULL		1043932	0					
ANR	1043958	Identifier	NULL		1043932	1					
ANR	1043959	IdentifierDeclStatement	int command ;	77:1:1619:1633	1043932	3	True				
ANR	1043960	IdentifierDecl	command		1043932	0					
ANR	1043961	IdentifierDeclType	int		1043932	0					
ANR	1043962	Identifier	command		1043932	1					
ANR	1043963	IdentifierDeclStatement	Value value ;	78:1:1636:1649	1043932	4	True				
ANR	1043964	IdentifierDecl	value		1043932	0					
ANR	1043965	IdentifierDeclType	Value		1043932	0					
ANR	1043966	Identifier	value		1043932	1					
ANR	1043967	IdentifierDeclStatement	ClassAdParser parser ;	79:1:1652:1672	1043932	5	True				
ANR	1043968	IdentifierDecl	parser		1043932	0					
ANR	1043969	IdentifierDeclType	ClassAdParser		1043932	0					
ANR	1043970	Identifier	parser		1043932	1					
ANR	1043971	IdentifierDeclStatement	PrettyPrint unparser ;	80:1:1675:1696	1043932	6	True				
ANR	1043972	IdentifierDecl	unparser		1043932	0					
ANR	1043973	IdentifierDeclType	PrettyPrint		1043932	0					
ANR	1043974	Identifier	unparser		1043932	1					
ANR	1043975	IdentifierDeclStatement	"string output , buffer1 , buffer2 , buffer3 ;"	81:1:1699:1741	1043932	7	True				
ANR	1043976	IdentifierDecl	output		1043932	0					
ANR	1043977	IdentifierDeclType	string		1043932	0					
ANR	1043978	Identifier	output		1043932	1					
ANR	1043979	IdentifierDecl	buffer1		1043932	1					
ANR	1043980	IdentifierDeclType	string		1043932	0					
ANR	1043981	Identifier	buffer1		1043932	1					
ANR	1043982	IdentifierDecl	buffer2		1043932	2					
ANR	1043983	IdentifierDeclType	string		1043932	0					
ANR	1043984	Identifier	buffer2		1043932	1					
ANR	1043985	IdentifierDecl	buffer3		1043932	3					
ANR	1043986	IdentifierDeclType	string		1043932	0					
ANR	1043987	Identifier	buffer3		1043932	1					
ANR	1043988	ExpressionStatement	ad = new ClassAd ( )	83:1:1745:1763	1043932	8	True				
ANR	1043989	AssignmentExpression	ad = new ClassAd ( )		1043932	0		=			
ANR	1043990	Identifier	ad		1043932	0					
ANR	1043991	UnaryExpression	new ClassAd ( )		1043932	1					
ANR	1043992	ExpressionStatement	"cout << ""'h' for help\\n# """	85:1:1767:1793	1043932	9	True				
ANR	1043993	ShiftExpression	"cout << ""'h' for help\\n# """		1043932	0		<<			
ANR	1043994	Identifier	cout		1043932	0					
ANR	1043995	PrimaryExpression	"""'h' for help\\n# """		1043932	1					
ANR	1043996	WhileStatement	while ( 1 )		1043932	10					
ANR	1043997	Condition	1	86:8:1803:1803	1043932	0	True				
ANR	1043998	PrimaryExpression	1		1043932	0					
ANR	1043999	CompoundStatement		14:12:281:281	1043932	1					
ANR	1044000	ExpressionStatement	cin >> cmdString	87:5:1815:1831	1043932	0	True				
ANR	1044001	ShiftExpression	cin >> cmdString		1043932	0		>>			
ANR	1044002	Identifier	cin		1043932	0					
ANR	1044003	Identifier	cmdString		1043932	1					
ANR	1044004	IfStatement	if ( cin . eof ( ) )		1043932	1					
ANR	1044005	Condition	cin . eof ( )	88:12:1845:1853	1043932	0	True				
ANR	1044006	CallExpression	cin . eof ( )		1043932	0					
ANR	1044007	Callee	cin . eof		1043932	0					
ANR	1044008	MemberAccess	cin . eof		1043932	0					
ANR	1044009	Identifier	cin		1043932	0					
ANR	1044010	Identifier	eof		1043932	1					
ANR	1044011	ArgumentList			1043932	1					
ANR	1044012	CompoundStatement		16:23:330:330	1043932	1					
ANR	1044013	ExpressionStatement	"cout << ""\\nExiting.\\n"""	89:12:1870:1892	1043932	0	True				
ANR	1044014	ShiftExpression	"cout << ""\\nExiting.\\n"""		1043932	0		<<			
ANR	1044015	Identifier	cout		1043932	0					
ANR	1044016	PrimaryExpression	"""\\nExiting.\\n"""		1043932	1					
ANR	1044017	ExpressionStatement	exit ( 0 )	90:12:1906:1913	1043932	1	True				
ANR	1044018	CallExpression	exit ( 0 )		1043932	0					
ANR	1044019	Callee	exit		1043932	0					
ANR	1044020	Identifier	exit		1043932	0					
ANR	1044021	ArgumentList	0		1043932	1					
ANR	1044022	Argument	0		1043932	0					
ANR	1044023	PrimaryExpression	0		1043932	0					
ANR	1044024	ExpressionStatement	command = findCommand ( cmdString )	92:2:1927:1961	1043932	2	True				
ANR	1044025	AssignmentExpression	command = findCommand ( cmdString )		1043932	0		=			
ANR	1044026	Identifier	command		1043932	0					
ANR	1044027	CallExpression	findCommand ( cmdString )		1043932	1					
ANR	1044028	Callee	findCommand		1043932	0					
ANR	1044029	Identifier	findCommand		1043932	0					
ANR	1044030	ArgumentList	cmdString		1043932	1					
ANR	1044031	Argument	cmdString		1043932	0					
ANR	1044032	Identifier	cmdString		1043932	0					
ANR	1044033	SwitchStatement	switch ( command )		1043932	3					
ANR	1044034	Condition	command	93:10:1973:1979	1043932	0	True				
ANR	1044035	Identifier	command		1043932	0					
ANR	1044036	CompoundStatement		21:20:457:457	1043932	1					
ANR	1044037	Label	case CLEAR_TOPLEVEL :	94:3:1988:2007	1043932	0	True				
ANR	1044038	Identifier	CLEAR_TOPLEVEL		1043932	0					
ANR	1044039	ExpressionStatement	ad -> Clear ( )	95:4:2014:2025	1043932	1	True				
ANR	1044040	CallExpression	ad -> Clear ( )		1043932	0					
ANR	1044041	Callee	ad -> Clear		1043932	0					
ANR	1044042	PtrMemberAccess	ad -> Clear		1043932	0					
ANR	1044043	Identifier	ad		1043932	0					
ANR	1044044	Identifier	Clear		1043932	1					
ANR	1044045	ArgumentList			1043932	1					
ANR	1044046	ExpressionStatement	"getline ( cin , buffer1 , '\\n' )"	96:16:2043:2070	1043932	2	True				
ANR	1044047	CallExpression	"getline ( cin , buffer1 , '\\n' )"		1043932	0					
ANR	1044048	Callee	getline		1043932	0					
ANR	1044049	Identifier	getline		1043932	0					
ANR	1044050	ArgumentList	cin		1043932	1					
ANR	1044051	Argument	cin		1043932	0					
ANR	1044052	Identifier	cin		1043932	0					
ANR	1044053	Argument	buffer1		1043932	1					
ANR	1044054	Identifier	buffer1		1043932	0					
ANR	1044055	Argument	'\\n'		1043932	2					
ANR	1044056	PrimaryExpression	'\\n'		1043932	0					
ANR	1044057	BreakStatement	break ;	97:4:2076:2081	1043932	3	True				
ANR	1044058	Label	case DEEP_INSERT_ATTRIBUTE :	99:3:2087:2113	1043932	4	True				
ANR	1044059	Identifier	DEEP_INSERT_ATTRIBUTE		1043932	0					
ANR	1044060	ExpressionStatement	cin >> buffer1	100:16:2131:2145	1043932	5	True				
ANR	1044061	ShiftExpression	cin >> buffer1		1043932	0		>>			
ANR	1044062	Identifier	cin		1043932	0					
ANR	1044063	Identifier	buffer1		1043932	1					
ANR	1044064	IfStatement	if ( buffer1 . length ( ) < 1 )		1043932	6					
ANR	1044065	Condition	buffer1 . length ( ) < 1	101:8:2155:2174	1043932	0	True				
ANR	1044066	RelationalExpression	buffer1 . length ( ) < 1		1043932	0		<			
ANR	1044067	CallExpression	buffer1 . length ( )		1043932	0					
ANR	1044068	Callee	buffer1 . length		1043932	0					
ANR	1044069	MemberAccess	buffer1 . length		1043932	0					
ANR	1044070	Identifier	buffer1		1043932	0					
ANR	1044071	Identifier	length		1043932	1					
ANR	1044072	ArgumentList			1043932	1					
ANR	1044073	PrimaryExpression	1		1043932	1					
ANR	1044074	CompoundStatement		29:31:652:652	1043932	1					
ANR	1044075	ExpressionStatement	"cout << ""Error reading primary expression\\n"""	102:5:2193:2237	1043932	0	True				
ANR	1044076	ShiftExpression	"cout << ""Error reading primary expression\\n"""		1043932	0		<<			
ANR	1044077	Identifier	cout		1043932	0					
ANR	1044078	PrimaryExpression	"""Error reading primary expression\\n"""		1043932	1					
ANR	1044079	BreakStatement	break ;	103:5:2244:2249	1043932	1	True				
ANR	1044080	IfStatement	"if ( ! parser . ParseExpression ( buffer1 , expr , true ) )"		1043932	7					
ANR	1044081	Condition	"! parser . ParseExpression ( buffer1 , expr , true )"	105:8:2265:2310	1043932	0	True				
ANR	1044082	UnaryOperationExpression	"! parser . ParseExpression ( buffer1 , expr , true )"		1043932	0					
ANR	1044083	UnaryOperator	!		1043932	0					
ANR	1044084	CallExpression	"parser . ParseExpression ( buffer1 , expr , true )"		1043932	1					
ANR	1044085	Callee	parser . ParseExpression		1043932	0					
ANR	1044086	MemberAccess	parser . ParseExpression		1043932	0					
ANR	1044087	Identifier	parser		1043932	0					
ANR	1044088	Identifier	ParseExpression		1043932	1					
ANR	1044089	ArgumentList	buffer1		1043932	1					
ANR	1044090	Argument	buffer1		1043932	0					
ANR	1044091	Identifier	buffer1		1043932	0					
ANR	1044092	Argument	expr		1043932	1					
ANR	1044093	Identifier	expr		1043932	0					
ANR	1044094	Argument	true		1043932	2					
ANR	1044095	Identifier	true		1043932	0					
ANR	1044096	CompoundStatement		33:57:788:788	1043932	1					
ANR	1044097	ExpressionStatement	"cout << ""Error parsing expression: "" << buffer1 << endl"	106:5:2321:2377	1043932	0	True				
ANR	1044098	ShiftExpression	"cout << ""Error parsing expression: "" << buffer1 << endl"		1043932	0		<<			
ANR	1044099	Identifier	cout		1043932	0					
ANR	1044100	ShiftExpression	"""Error parsing expression: "" << buffer1 << endl"		1043932	1		<<			
ANR	1044101	PrimaryExpression	"""Error parsing expression: """		1043932	0					
ANR	1044102	ShiftExpression	buffer1 << endl		1043932	1		<<			
ANR	1044103	Identifier	buffer1		1043932	0					
ANR	1044104	Identifier	endl		1043932	1					
ANR	1044105	ExpressionStatement	"cout << ""("" << CondorErrMsg << "")\\n"""	107:20:2399:2435	1043932	1	True				
ANR	1044106	ShiftExpression	"cout << ""("" << CondorErrMsg << "")\\n"""		1043932	0		<<			
ANR	1044107	Identifier	cout		1043932	0					
ANR	1044108	ShiftExpression	"""("" << CondorErrMsg << "")\\n"""		1043932	1		<<			
ANR	1044109	PrimaryExpression	"""("""		1043932	0					
ANR	1044110	ShiftExpression	"CondorErrMsg << "")\\n"""		1043932	1		<<			
ANR	1044111	Identifier	CondorErrMsg		1043932	0					
ANR	1044112	PrimaryExpression	""")\\n"""		1043932	1					
ANR	1044113	BreakStatement	break ;	108:5:2442:2447	1043932	2	True				
ANR	1044114	ExpressionStatement	cin >> buffer2	110:16:2471:2485	1043932	8	True				
ANR	1044115	ShiftExpression	cin >> buffer2		1043932	0		>>			
ANR	1044116	Identifier	cin		1043932	0					
ANR	1044117	Identifier	buffer2		1043932	1					
ANR	1044118	IfStatement	if ( buffer2 . length ( ) < 1 )		1043932	9					
ANR	1044119	Condition	buffer2 . length ( ) < 1	111:8:2495:2514	1043932	0	True				
ANR	1044120	RelationalExpression	buffer2 . length ( ) < 1		1043932	0		<			
ANR	1044121	CallExpression	buffer2 . length ( )		1043932	0					
ANR	1044122	Callee	buffer2 . length		1043932	0					
ANR	1044123	MemberAccess	buffer2 . length		1043932	0					
ANR	1044124	Identifier	buffer2		1043932	0					
ANR	1044125	Identifier	length		1043932	1					
ANR	1044126	ArgumentList			1043932	1					
ANR	1044127	PrimaryExpression	1		1043932	1					
ANR	1044128	CompoundStatement		39:30:991:991	1043932	1					
ANR	1044129	ExpressionStatement	"cout << ""Error reading attribute name\\n"""	112:5:2524:2564	1043932	0	True				
ANR	1044130	ShiftExpression	"cout << ""Error reading attribute name\\n"""		1043932	0		<<			
ANR	1044131	Identifier	cout		1043932	0					
ANR	1044132	PrimaryExpression	"""Error reading attribute name\\n"""		1043932	1					
ANR	1044133	BreakStatement	break ;	113:5:2571:2576	1043932	1	True				
ANR	1044134	ExpressionStatement	"getline ( cin , buffer3 , '\\n' )"	115:16:2601:2628	1043932	10	True				
ANR	1044135	CallExpression	"getline ( cin , buffer3 , '\\n' )"		1043932	0					
ANR	1044136	Callee	getline		1043932	0					
ANR	1044137	Identifier	getline		1043932	0					
ANR	1044138	ArgumentList	cin		1043932	1					
ANR	1044139	Argument	cin		1043932	0					
ANR	1044140	Identifier	cin		1043932	0					
ANR	1044141	Argument	buffer3		1043932	1					
ANR	1044142	Identifier	buffer3		1043932	0					
ANR	1044143	Argument	'\\n'		1043932	2					
ANR	1044144	PrimaryExpression	'\\n'		1043932	0					
ANR	1044145	IfStatement	"if ( ! parser . ParseExpression ( buffer3 , fexpr , true ) )"		1043932	11					
ANR	1044146	Condition	"! parser . ParseExpression ( buffer3 , fexpr , true )"	116:8:2638:2684	1043932	0	True				
ANR	1044147	UnaryOperationExpression	"! parser . ParseExpression ( buffer3 , fexpr , true )"		1043932	0					
ANR	1044148	UnaryOperator	!		1043932	0					
ANR	1044149	CallExpression	"parser . ParseExpression ( buffer3 , fexpr , true )"		1043932	1					
ANR	1044150	Callee	parser . ParseExpression		1043932	0					
ANR	1044151	MemberAccess	parser . ParseExpression		1043932	0					
ANR	1044152	Identifier	parser		1043932	0					
ANR	1044153	Identifier	ParseExpression		1043932	1					
ANR	1044154	ArgumentList	buffer3		1043932	1					
ANR	1044155	Argument	buffer3		1043932	0					
ANR	1044156	Identifier	buffer3		1043932	0					
ANR	1044157	Argument	fexpr		1043932	1					
ANR	1044158	Identifier	fexpr		1043932	0					
ANR	1044159	Argument	true		1043932	2					
ANR	1044160	Identifier	true		1043932	0					
ANR	1044161	CompoundStatement		44:58:1162:1162	1043932	1					
ANR	1044162	ExpressionStatement	"cout << ""Error parsing expression: "" << buffer3 << endl"	117:5:2695:2750	1043932	0	True				
ANR	1044163	ShiftExpression	"cout << ""Error parsing expression: "" << buffer3 << endl"		1043932	0		<<			
ANR	1044164	Identifier	cout		1043932	0					
ANR	1044165	ShiftExpression	"""Error parsing expression: "" << buffer3 << endl"		1043932	1		<<			
ANR	1044166	PrimaryExpression	"""Error parsing expression: """		1043932	0					
ANR	1044167	ShiftExpression	buffer3 << endl		1043932	1		<<			
ANR	1044168	Identifier	buffer3		1043932	0					
ANR	1044169	Identifier	endl		1043932	1					
ANR	1044170	ExpressionStatement	"cout << ""("" << CondorErrMsg << "")\\n"""	118:20:2772:2808	1043932	1	True				
ANR	1044171	ShiftExpression	"cout << ""("" << CondorErrMsg << "")\\n"""		1043932	0		<<			
ANR	1044172	Identifier	cout		1043932	0					
ANR	1044173	ShiftExpression	"""("" << CondorErrMsg << "")\\n"""		1043932	1		<<			
ANR	1044174	PrimaryExpression	"""("""		1043932	0					
ANR	1044175	ShiftExpression	"CondorErrMsg << "")\\n"""		1043932	1		<<			
ANR	1044176	Identifier	CondorErrMsg		1043932	0					
ANR	1044177	PrimaryExpression	""")\\n"""		1043932	1					
ANR	1044178	BreakStatement	break ;	119:5:2815:2820	1043932	2	True				
ANR	1044179	ExpressionStatement	expr -> SetParentScope ( ad )	121:4:2833:2859	1043932	12	True				
ANR	1044180	CallExpression	expr -> SetParentScope ( ad )		1043932	0					
ANR	1044181	Callee	expr -> SetParentScope		1043932	0					
ANR	1044182	PtrMemberAccess	expr -> SetParentScope		1043932	0					
ANR	1044183	Identifier	expr		1043932	0					
ANR	1044184	Identifier	SetParentScope		1043932	1					
ANR	1044185	ArgumentList	ad		1043932	1					
ANR	1044186	Argument	ad		1043932	0					
ANR	1044187	Identifier	ad		1043932	0					
ANR	1044188	IfStatement	"if ( ! ad -> EvaluateExpr ( expr , value ) )"		1043932	13					
ANR	1044189	Condition	"! ad -> EvaluateExpr ( expr , value )"	122:8:2869:2900	1043932	0	True				
ANR	1044190	UnaryOperationExpression	"! ad -> EvaluateExpr ( expr , value )"		1043932	0					
ANR	1044191	UnaryOperator	!		1043932	0					
ANR	1044192	CallExpression	"ad -> EvaluateExpr ( expr , value )"		1043932	1					
ANR	1044193	Callee	ad -> EvaluateExpr		1043932	0					
ANR	1044194	PtrMemberAccess	ad -> EvaluateExpr		1043932	0					
ANR	1044195	Identifier	ad		1043932	0					
ANR	1044196	Identifier	EvaluateExpr		1043932	1					
ANR	1044197	ArgumentList	expr		1043932	1					
ANR	1044198	Argument	expr		1043932	0					
ANR	1044199	Identifier	expr		1043932	0					
ANR	1044200	Argument	value		1043932	1					
ANR	1044201	Identifier	value		1043932	0					
ANR	1044202	CompoundStatement		50:43:1378:1378	1043932	1					
ANR	1044203	ExpressionStatement	"cout << ""Error evaluating expression: "" << buffer1 << endl"	123:5:2911:2970	1043932	0	True				
ANR	1044204	ShiftExpression	"cout << ""Error evaluating expression: "" << buffer1 << endl"		1043932	0		<<			
ANR	1044205	Identifier	cout		1043932	0					
ANR	1044206	ShiftExpression	"""Error evaluating expression: "" << buffer1 << endl"		1043932	1		<<			
ANR	1044207	PrimaryExpression	"""Error evaluating expression: """		1043932	0					
ANR	1044208	ShiftExpression	buffer1 << endl		1043932	1		<<			
ANR	1044209	Identifier	buffer1		1043932	0					
ANR	1044210	Identifier	endl		1043932	1					
ANR	1044211	Statement	delete	124:5:2977:2982	1043932	1	True				
ANR	1044212	ExpressionStatement	expr	124:12:2984:2988	1043932	2	True				
ANR	1044213	Identifier	expr		1043932	0					
ANR	1044214	Statement	delete	125:5:2995:3000	1043932	3	True				
ANR	1044215	ExpressionStatement	fexpr	125:12:3002:3007	1043932	4	True				
ANR	1044216	Identifier	fexpr		1043932	0					
ANR	1044217	ExpressionStatement	expr = NULL	126:5:3014:3025	1043932	5	True				
ANR	1044218	AssignmentExpression	expr = NULL		1043932	0		=			
ANR	1044219	Identifier	expr		1043932	0					
ANR	1044220	Identifier	NULL		1043932	1					
ANR	1044221	ExpressionStatement	fexpr = NULL	127:5:3032:3044	1043932	6	True				
ANR	1044222	AssignmentExpression	fexpr = NULL		1043932	0		=			
ANR	1044223	Identifier	fexpr		1043932	0					
ANR	1044224	Identifier	NULL		1043932	1					
ANR	1044225	BreakStatement	break ;	128:5:3051:3056	1043932	7	True				
ANR	1044226	IfStatement	if ( ! value . IsClassAdValue ( adptr ) )		1043932	14					
ANR	1044227	Condition	! value . IsClassAdValue ( adptr )	130:8:3072:3101	1043932	0	True				
ANR	1044228	UnaryOperationExpression	! value . IsClassAdValue ( adptr )		1043932	0					
ANR	1044229	UnaryOperator	!		1043932	0					
ANR	1044230	CallExpression	value . IsClassAdValue ( adptr )		1043932	1					
ANR	1044231	Callee	value . IsClassAdValue		1043932	0					
ANR	1044232	MemberAccess	value . IsClassAdValue		1043932	0					
ANR	1044233	Identifier	value		1043932	0					
ANR	1044234	Identifier	IsClassAdValue		1043932	1					
ANR	1044235	ArgumentList	adptr		1043932	1					
ANR	1044236	Argument	adptr		1043932	0					
ANR	1044237	Identifier	adptr		1043932	0					
ANR	1044238	CompoundStatement		58:41:1579:1579	1043932	1					
ANR	1044239	ExpressionStatement	"cout << ""Error:  Primary expression was not a classad\\n"""	131:5:3112:3168	1043932	0	True				
ANR	1044240	ShiftExpression	"cout << ""Error:  Primary expression was not a classad\\n"""		1043932	0		<<			
ANR	1044241	Identifier	cout		1043932	0					
ANR	1044242	PrimaryExpression	"""Error:  Primary expression was not a classad\\n"""		1043932	1					
ANR	1044243	Statement	delete	132:5:3175:3180	1043932	1	True				
ANR	1044244	ExpressionStatement	expr	132:12:3182:3186	1043932	2	True				
ANR	1044245	Identifier	expr		1043932	0					
ANR	1044246	ExpressionStatement	expr = NULL	133:5:3193:3204	1043932	3	True				
ANR	1044247	AssignmentExpression	expr = NULL		1043932	0		=			
ANR	1044248	Identifier	expr		1043932	0					
ANR	1044249	Identifier	NULL		1043932	1					
ANR	1044250	Statement	delete	134:5:3211:3216	1043932	4	True				
ANR	1044251	ExpressionStatement	fexpr	134:12:3218:3223	1043932	5	True				
ANR	1044252	Identifier	fexpr		1043932	0					
ANR	1044253	ExpressionStatement	fexpr = NULL	135:5:3230:3242	1043932	6	True				
ANR	1044254	AssignmentExpression	fexpr = NULL		1043932	0		=			
ANR	1044255	Identifier	fexpr		1043932	0					
ANR	1044256	Identifier	NULL		1043932	1					
ANR	1044257	BreakStatement	break ;	136:5:3249:3254	1043932	7	True				
ANR	1044258	IfStatement	"if ( ! adptr -> Insert ( buffer2 , fexpr ) )"		1043932	15					
ANR	1044259	Condition	"! adptr -> Insert ( buffer2 , fexpr )"	138:8:3271:3302	1043932	0	True				
ANR	1044260	UnaryOperationExpression	"! adptr -> Insert ( buffer2 , fexpr )"		1043932	0					
ANR	1044261	UnaryOperator	!		1043932	0					
ANR	1044262	CallExpression	"adptr -> Insert ( buffer2 , fexpr )"		1043932	1					
ANR	1044263	Callee	adptr -> Insert		1043932	0					
ANR	1044264	PtrMemberAccess	adptr -> Insert		1043932	0					
ANR	1044265	Identifier	adptr		1043932	0					
ANR	1044266	Identifier	Insert		1043932	1					
ANR	1044267	ArgumentList	buffer2		1043932	1					
ANR	1044268	Argument	buffer2		1043932	0					
ANR	1044269	Identifier	buffer2		1043932	0					
ANR	1044270	Argument	fexpr		1043932	1					
ANR	1044271	Identifier	fexpr		1043932	0					
ANR	1044272	CompoundStatement		66:43:1780:1780	1043932	1					
ANR	1044273	ExpressionStatement	"cout << ""Error Inserting expression: "" << buffer3 << endl"	139:5:3313:3370	1043932	0	True				
ANR	1044274	ShiftExpression	"cout << ""Error Inserting expression: "" << buffer3 << endl"		1043932	0		<<			
ANR	1044275	Identifier	cout		1043932	0					
ANR	1044276	ShiftExpression	"""Error Inserting expression: "" << buffer3 << endl"		1043932	1		<<			
ANR	1044277	PrimaryExpression	"""Error Inserting expression: """		1043932	0					
ANR	1044278	ShiftExpression	buffer3 << endl		1043932	1		<<			
ANR	1044279	Identifier	buffer3		1043932	0					
ANR	1044280	Identifier	endl		1043932	1					
ANR	1044281	Statement	delete	140:5:3377:3382	1043932	1	True				
ANR	1044282	ExpressionStatement	fexpr	140:12:3384:3389	1043932	2	True				
ANR	1044283	Identifier	fexpr		1043932	0					
ANR	1044284	Statement	delete	141:5:3396:3401	1043932	3	True				
ANR	1044285	ExpressionStatement	expr	141:12:3403:3407	1043932	4	True				
ANR	1044286	Identifier	expr		1043932	0					
ANR	1044287	ExpressionStatement	fexpr = NULL	142:5:3414:3426	1043932	5	True				
ANR	1044288	AssignmentExpression	fexpr = NULL		1043932	0		=			
ANR	1044289	Identifier	fexpr		1043932	0					
ANR	1044290	Identifier	NULL		1043932	1					
ANR	1044291	ExpressionStatement	expr = NULL	143:5:3433:3444	1043932	6	True				
ANR	1044292	AssignmentExpression	expr = NULL		1043932	0		=			
ANR	1044293	Identifier	expr		1043932	0					
ANR	1044294	Identifier	NULL		1043932	1					
ANR	1044295	Statement	delete	145:4:3456:3461	1043932	16	True				
ANR	1044296	ExpressionStatement	expr	145:11:3463:3467	1043932	17	True				
ANR	1044297	Identifier	expr		1043932	0					
ANR	1044298	ExpressionStatement	adptr = NULL	146:4:3473:3485	1043932	18	True				
ANR	1044299	AssignmentExpression	adptr = NULL		1043932	0		=			
ANR	1044300	Identifier	adptr		1043932	0					
ANR	1044301	Identifier	NULL		1043932	1					
ANR	1044302	ExpressionStatement	expr = NULL	147:4:3491:3503	1043932	19	True				
ANR	1044303	AssignmentExpression	expr = NULL		1043932	0		=			
ANR	1044304	Identifier	expr		1043932	0					
ANR	1044305	Identifier	NULL		1043932	1					
ANR	1044306	BreakStatement	break ;	148:4:3509:3514	1043932	20	True				
ANR	1044307	Label	case DEEP_DELETE_ATTRIBUTE :	150:3:3520:3546	1043932	21	True				
ANR	1044308	Identifier	DEEP_DELETE_ATTRIBUTE		1043932	0					
ANR	1044309	ExpressionStatement	cin >> buffer1	151:16:3564:3578	1043932	22	True				
ANR	1044310	ShiftExpression	cin >> buffer1		1043932	0		>>			
ANR	1044311	Identifier	cin		1043932	0					
ANR	1044312	Identifier	buffer1		1043932	1					
ANR	1044313	IfStatement	if ( buffer1 . length ( ) < 1 )		1043932	23					
ANR	1044314	Condition	buffer1 . length ( ) < 1	152:8:3588:3607	1043932	0	True				
ANR	1044315	RelationalExpression	buffer1 . length ( ) < 1		1043932	0		<			
ANR	1044316	CallExpression	buffer1 . length ( )		1043932	0					
ANR	1044317	Callee	buffer1 . length		1043932	0					
ANR	1044318	MemberAccess	buffer1 . length		1043932	0					
ANR	1044319	Identifier	buffer1		1043932	0					
ANR	1044320	Identifier	length		1043932	1					
ANR	1044321	ArgumentList			1043932	1					
ANR	1044322	PrimaryExpression	1		1043932	1					
ANR	1044323	CompoundStatement		80:30:2084:2084	1043932	1					
ANR	1044324	ExpressionStatement	"cout << ""Error reading primary expression\\n"""	153:5:3617:3661	1043932	0	True				
ANR	1044325	ShiftExpression	"cout << ""Error reading primary expression\\n"""		1043932	0		<<			
ANR	1044326	Identifier	cout		1043932	0					
ANR	1044327	PrimaryExpression	"""Error reading primary expression\\n"""		1043932	1					
ANR	1044328	BreakStatement	break ;	154:5:3668:3673	1043932	1	True				
ANR	1044329	IfStatement	"if ( ! parser . ParseExpression ( buffer1 , expr , true ) )"		1043932	24					
ANR	1044330	Condition	"! parser . ParseExpression ( buffer1 , expr , true )"	156:8:3689:3734	1043932	0	True				
ANR	1044331	UnaryOperationExpression	"! parser . ParseExpression ( buffer1 , expr , true )"		1043932	0					
ANR	1044332	UnaryOperator	!		1043932	0					
ANR	1044333	CallExpression	"parser . ParseExpression ( buffer1 , expr , true )"		1043932	1					
ANR	1044334	Callee	parser . ParseExpression		1043932	0					
ANR	1044335	MemberAccess	parser . ParseExpression		1043932	0					
ANR	1044336	Identifier	parser		1043932	0					
ANR	1044337	Identifier	ParseExpression		1043932	1					
ANR	1044338	ArgumentList	buffer1		1043932	1					
ANR	1044339	Argument	buffer1		1043932	0					
ANR	1044340	Identifier	buffer1		1043932	0					
ANR	1044341	Argument	expr		1043932	1					
ANR	1044342	Identifier	expr		1043932	0					
ANR	1044343	Argument	true		1043932	2					
ANR	1044344	Identifier	true		1043932	0					
ANR	1044345	CompoundStatement		84:57:2212:2212	1043932	1					
ANR	1044346	ExpressionStatement	"cout << ""Error parsing expression: "" << buffer1 << endl"	157:5:3745:3800	1043932	0	True				
ANR	1044347	ShiftExpression	"cout << ""Error parsing expression: "" << buffer1 << endl"		1043932	0		<<			
ANR	1044348	Identifier	cout		1043932	0					
ANR	1044349	ShiftExpression	"""Error parsing expression: "" << buffer1 << endl"		1043932	1		<<			
ANR	1044350	PrimaryExpression	"""Error parsing expression: """		1043932	0					
ANR	1044351	ShiftExpression	buffer1 << endl		1043932	1		<<			
ANR	1044352	Identifier	buffer1		1043932	0					
ANR	1044353	Identifier	endl		1043932	1					
ANR	1044354	BreakStatement	break ;	158:5:3807:3812	1043932	1	True				
ANR	1044355	ExpressionStatement	"getline ( cin , buffer2 , '\\n' )"	160:16:3836:3863	1043932	25	True				
ANR	1044356	CallExpression	"getline ( cin , buffer2 , '\\n' )"		1043932	0					
ANR	1044357	Callee	getline		1043932	0					
ANR	1044358	Identifier	getline		1043932	0					
ANR	1044359	ArgumentList	cin		1043932	1					
ANR	1044360	Argument	cin		1043932	0					
ANR	1044361	Identifier	cin		1043932	0					
ANR	1044362	Argument	buffer2		1043932	1					
ANR	1044363	Identifier	buffer2		1043932	0					
ANR	1044364	Argument	'\\n'		1043932	2					
ANR	1044365	PrimaryExpression	'\\n'		1043932	0					
ANR	1044366	ExpressionStatement	expr -> SetParentScope ( ad )	161:4:3869:3895	1043932	26	True				
ANR	1044367	CallExpression	expr -> SetParentScope ( ad )		1043932	0					
ANR	1044368	Callee	expr -> SetParentScope		1043932	0					
ANR	1044369	PtrMemberAccess	expr -> SetParentScope		1043932	0					
ANR	1044370	Identifier	expr		1043932	0					
ANR	1044371	Identifier	SetParentScope		1043932	1					
ANR	1044372	ArgumentList	ad		1043932	1					
ANR	1044373	Argument	ad		1043932	0					
ANR	1044374	Identifier	ad		1043932	0					
ANR	1044375	IfStatement	"if ( ! ad -> EvaluateExpr ( expr , value ) )"		1043932	27					
ANR	1044376	Condition	"! ad -> EvaluateExpr ( expr , value )"	162:8:3905:3936	1043932	0	True				
ANR	1044377	UnaryOperationExpression	"! ad -> EvaluateExpr ( expr , value )"		1043932	0					
ANR	1044378	UnaryOperator	!		1043932	0					
ANR	1044379	CallExpression	"ad -> EvaluateExpr ( expr , value )"		1043932	1					
ANR	1044380	Callee	ad -> EvaluateExpr		1043932	0					
ANR	1044381	PtrMemberAccess	ad -> EvaluateExpr		1043932	0					
ANR	1044382	Identifier	ad		1043932	0					
ANR	1044383	Identifier	EvaluateExpr		1043932	1					
ANR	1044384	ArgumentList	expr		1043932	1					
ANR	1044385	Argument	expr		1043932	0					
ANR	1044386	Identifier	expr		1043932	0					
ANR	1044387	Argument	value		1043932	1					
ANR	1044388	Identifier	value		1043932	0					
ANR	1044389	CompoundStatement		90:43:2414:2414	1043932	1					
ANR	1044390	ExpressionStatement	"cout << ""Error evaluating expression: "" << buffer1 << endl"	163:5:3947:4006	1043932	0	True				
ANR	1044391	ShiftExpression	"cout << ""Error evaluating expression: "" << buffer1 << endl"		1043932	0		<<			
ANR	1044392	Identifier	cout		1043932	0					
ANR	1044393	ShiftExpression	"""Error evaluating expression: "" << buffer1 << endl"		1043932	1		<<			
ANR	1044394	PrimaryExpression	"""Error evaluating expression: """		1043932	0					
ANR	1044395	ShiftExpression	buffer1 << endl		1043932	1		<<			
ANR	1044396	Identifier	buffer1		1043932	0					
ANR	1044397	Identifier	endl		1043932	1					
ANR	1044398	Statement	delete	164:5:4013:4018	1043932	1	True				
ANR	1044399	ExpressionStatement	expr	164:12:4020:4024	1043932	2	True				
ANR	1044400	Identifier	expr		1043932	0					
ANR	1044401	BreakStatement	break ;	165:5:4031:4036	1043932	3	True				
ANR	1044402	IfStatement	if ( ! value . IsClassAdValue ( adptr ) )		1043932	28					
ANR	1044403	Condition	! value . IsClassAdValue ( adptr )	167:8:4052:4081	1043932	0	True				
ANR	1044404	UnaryOperationExpression	! value . IsClassAdValue ( adptr )		1043932	0					
ANR	1044405	UnaryOperator	!		1043932	0					
ANR	1044406	CallExpression	value . IsClassAdValue ( adptr )		1043932	1					
ANR	1044407	Callee	value . IsClassAdValue		1043932	0					
ANR	1044408	MemberAccess	value . IsClassAdValue		1043932	0					
ANR	1044409	Identifier	value		1043932	0					
ANR	1044410	Identifier	IsClassAdValue		1043932	1					
ANR	1044411	ArgumentList	adptr		1043932	1					
ANR	1044412	Argument	adptr		1043932	0					
ANR	1044413	Identifier	adptr		1043932	0					
ANR	1044414	CompoundStatement		95:41:2559:2559	1043932	1					
ANR	1044415	ExpressionStatement	"cout << ""Error:  Primary expression was not a classad\\n"""	168:5:4092:4148	1043932	0	True				
ANR	1044416	ShiftExpression	"cout << ""Error:  Primary expression was not a classad\\n"""		1043932	0		<<			
ANR	1044417	Identifier	cout		1043932	0					
ANR	1044418	PrimaryExpression	"""Error:  Primary expression was not a classad\\n"""		1043932	1					
ANR	1044419	Statement	delete	169:5:4155:4160	1043932	1	True				
ANR	1044420	ExpressionStatement	expr	169:12:4162:4166	1043932	2	True				
ANR	1044421	Identifier	expr		1043932	0					
ANR	1044422	ExpressionStatement	expr = NULL	170:5:4173:4184	1043932	3	True				
ANR	1044423	AssignmentExpression	expr = NULL		1043932	0		=			
ANR	1044424	Identifier	expr		1043932	0					
ANR	1044425	Identifier	NULL		1043932	1					
ANR	1044426	BreakStatement	break ;	171:5:4191:4196	1043932	4	True				
ANR	1044427	IfStatement	if ( ! adptr -> Remove ( buffer2 ) )		1043932	29					
ANR	1044428	Condition	! adptr -> Remove ( buffer2 )	173:8:4212:4236	1043932	0	True				
ANR	1044429	UnaryOperationExpression	! adptr -> Remove ( buffer2 )		1043932	0					
ANR	1044430	UnaryOperator	!		1043932	0					
ANR	1044431	CallExpression	adptr -> Remove ( buffer2 )		1043932	1					
ANR	1044432	Callee	adptr -> Remove		1043932	0					
ANR	1044433	PtrMemberAccess	adptr -> Remove		1043932	0					
ANR	1044434	Identifier	adptr		1043932	0					
ANR	1044435	Identifier	Remove		1043932	1					
ANR	1044436	ArgumentList	buffer2		1043932	1					
ANR	1044437	Argument	buffer2		1043932	0					
ANR	1044438	Identifier	buffer2		1043932	0					
ANR	1044439	CompoundStatement		101:36:2714:2714	1043932	1					
ANR	1044440	ExpressionStatement	"cout << ""Warning:  Attribute %s not found"" << buffer2 << endl"	174:5:4247:4308	1043932	0	True				
ANR	1044441	ShiftExpression	"cout << ""Warning:  Attribute %s not found"" << buffer2 << endl"		1043932	0		<<			
ANR	1044442	Identifier	cout		1043932	0					
ANR	1044443	ShiftExpression	"""Warning:  Attribute %s not found"" << buffer2 << endl"		1043932	1		<<			
ANR	1044444	PrimaryExpression	"""Warning:  Attribute %s not found"""		1043932	0					
ANR	1044445	ShiftExpression	buffer2 << endl		1043932	1		<<			
ANR	1044446	Identifier	buffer2		1043932	0					
ANR	1044447	Identifier	endl		1043932	1					
ANR	1044448	Statement	delete	176:4:4320:4325	1043932	30	True				
ANR	1044449	ExpressionStatement	expr	176:11:4327:4331	1043932	31	True				
ANR	1044450	Identifier	expr		1043932	0					
ANR	1044451	ExpressionStatement	expr = NULL	177:4:4337:4348	1043932	32	True				
ANR	1044452	AssignmentExpression	expr = NULL		1043932	0		=			
ANR	1044453	Identifier	expr		1043932	0					
ANR	1044454	Identifier	NULL		1043932	1					
ANR	1044455	BreakStatement	break ;	178:4:4354:4359	1043932	33	True				
ANR	1044456	Label	case EVALUATE :	180:3:4365:4378	1043932	34	True				
ANR	1044457	Identifier	EVALUATE		1043932	0					
ANR	1044458	ExpressionStatement	"getline ( cin , buffer1 , '\\n' )"	181:16:4396:4423	1043932	35	True				
ANR	1044459	CallExpression	"getline ( cin , buffer1 , '\\n' )"		1043932	0					
ANR	1044460	Callee	getline		1043932	0					
ANR	1044461	Identifier	getline		1043932	0					
ANR	1044462	ArgumentList	cin		1043932	1					
ANR	1044463	Argument	cin		1043932	0					
ANR	1044464	Identifier	cin		1043932	0					
ANR	1044465	Argument	buffer1		1043932	1					
ANR	1044466	Identifier	buffer1		1043932	0					
ANR	1044467	Argument	'\\n'		1043932	2					
ANR	1044468	PrimaryExpression	'\\n'		1043932	0					
ANR	1044469	IfStatement	"if ( ! parser . ParseExpression ( buffer1 , expr , true ) )"		1043932	36					
ANR	1044470	Condition	"! parser . ParseExpression ( buffer1 , expr , true )"	182:8:4433:4478	1043932	0	True				
ANR	1044471	UnaryOperationExpression	"! parser . ParseExpression ( buffer1 , expr , true )"		1043932	0					
ANR	1044472	UnaryOperator	!		1043932	0					
ANR	1044473	CallExpression	"parser . ParseExpression ( buffer1 , expr , true )"		1043932	1					
ANR	1044474	Callee	parser . ParseExpression		1043932	0					
ANR	1044475	MemberAccess	parser . ParseExpression		1043932	0					
ANR	1044476	Identifier	parser		1043932	0					
ANR	1044477	Identifier	ParseExpression		1043932	1					
ANR	1044478	ArgumentList	buffer1		1043932	1					
ANR	1044479	Argument	buffer1		1043932	0					
ANR	1044480	Identifier	buffer1		1043932	0					
ANR	1044481	Argument	expr		1043932	1					
ANR	1044482	Identifier	expr		1043932	0					
ANR	1044483	Argument	true		1043932	2					
ANR	1044484	Identifier	true		1043932	0					
ANR	1044485	CompoundStatement		110:57:2956:2956	1043932	1					
ANR	1044486	ExpressionStatement	"cout << ""Error parsing expression: "" << buffer1 << endl"	183:5:4489:4544	1043932	0	True				
ANR	1044487	ShiftExpression	"cout << ""Error parsing expression: "" << buffer1 << endl"		1043932	0		<<			
ANR	1044488	Identifier	cout		1043932	0					
ANR	1044489	ShiftExpression	"""Error parsing expression: "" << buffer1 << endl"		1043932	1		<<			
ANR	1044490	PrimaryExpression	"""Error parsing expression: """		1043932	0					
ANR	1044491	ShiftExpression	buffer1 << endl		1043932	1		<<			
ANR	1044492	Identifier	buffer1		1043932	0					
ANR	1044493	Identifier	endl		1043932	1					
ANR	1044494	BreakStatement	break ;	184:5:4551:4556	1043932	1	True				
ANR	1044495	ExpressionStatement	expr -> SetParentScope ( ad )	186:4:4568:4594	1043932	37	True				
ANR	1044496	CallExpression	expr -> SetParentScope ( ad )		1043932	0					
ANR	1044497	Callee	expr -> SetParentScope		1043932	0					
ANR	1044498	PtrMemberAccess	expr -> SetParentScope		1043932	0					
ANR	1044499	Identifier	expr		1043932	0					
ANR	1044500	Identifier	SetParentScope		1043932	1					
ANR	1044501	ArgumentList	ad		1043932	1					
ANR	1044502	Argument	ad		1043932	0					
ANR	1044503	Identifier	ad		1043932	0					
ANR	1044504	IfStatement	"if ( ! ad -> EvaluateExpr ( expr , value ) )"		1043932	38					
ANR	1044505	Condition	"! ad -> EvaluateExpr ( expr , value )"	187:8:4604:4635	1043932	0	True				
ANR	1044506	UnaryOperationExpression	"! ad -> EvaluateExpr ( expr , value )"		1043932	0					
ANR	1044507	UnaryOperator	!		1043932	0					
ANR	1044508	CallExpression	"ad -> EvaluateExpr ( expr , value )"		1043932	1					
ANR	1044509	Callee	ad -> EvaluateExpr		1043932	0					
ANR	1044510	PtrMemberAccess	ad -> EvaluateExpr		1043932	0					
ANR	1044511	Identifier	ad		1043932	0					
ANR	1044512	Identifier	EvaluateExpr		1043932	1					
ANR	1044513	ArgumentList	expr		1043932	1					
ANR	1044514	Argument	expr		1043932	0					
ANR	1044515	Identifier	expr		1043932	0					
ANR	1044516	Argument	value		1043932	1					
ANR	1044517	Identifier	value		1043932	0					
ANR	1044518	CompoundStatement		115:43:3113:3113	1043932	1					
ANR	1044519	ExpressionStatement	"cout << ""Error evaluating expression: "" << buffer1 << endl"	188:5:4646:4704	1043932	0	True				
ANR	1044520	ShiftExpression	"cout << ""Error evaluating expression: "" << buffer1 << endl"		1043932	0		<<			
ANR	1044521	Identifier	cout		1043932	0					
ANR	1044522	ShiftExpression	"""Error evaluating expression: "" << buffer1 << endl"		1043932	1		<<			
ANR	1044523	PrimaryExpression	"""Error evaluating expression: """		1043932	0					
ANR	1044524	ShiftExpression	buffer1 << endl		1043932	1		<<			
ANR	1044525	Identifier	buffer1		1043932	0					
ANR	1044526	Identifier	endl		1043932	1					
ANR	1044527	Statement	delete	189:5:4711:4716	1043932	1	True				
ANR	1044528	ExpressionStatement	expr	189:12:4718:4722	1043932	2	True				
ANR	1044529	Identifier	expr		1043932	0					
ANR	1044530	ExpressionStatement	expr = NULL	190:5:4729:4740	1043932	3	True				
ANR	1044531	AssignmentExpression	expr = NULL		1043932	0		=			
ANR	1044532	Identifier	expr		1043932	0					
ANR	1044533	Identifier	NULL		1043932	1					
ANR	1044534	BreakStatement	break ;	191:5:4747:4752	1043932	4	True				
ANR	1044535	ExpressionStatement	"output = """""	193:4:4764:4775	1043932	39	True				
ANR	1044536	AssignmentExpression	"output = """""		1043932	0		=			
ANR	1044537	Identifier	output		1043932	0					
ANR	1044538	PrimaryExpression	""""""		1043932	1					
ANR	1044539	ExpressionStatement	"unparser . Unparse ( output , value )"	194:4:4781:4814	1043932	40	True				
ANR	1044540	CallExpression	"unparser . Unparse ( output , value )"		1043932	0					
ANR	1044541	Callee	unparser . Unparse		1043932	0					
ANR	1044542	MemberAccess	unparser . Unparse		1043932	0					
ANR	1044543	Identifier	unparser		1043932	0					
ANR	1044544	Identifier	Unparse		1043932	1					
ANR	1044545	ArgumentList	output		1043932	1					
ANR	1044546	Argument	output		1043932	0					
ANR	1044547	Identifier	output		1043932	0					
ANR	1044548	Argument	value		1043932	1					
ANR	1044549	Identifier	value		1043932	0					
ANR	1044550	ExpressionStatement	cout << output << endl	195:4:4820:4842	1043932	41	True				
ANR	1044551	ShiftExpression	cout << output << endl		1043932	0		<<			
ANR	1044552	Identifier	cout		1043932	0					
ANR	1044553	ShiftExpression	output << endl		1043932	1		<<			
ANR	1044554	Identifier	output		1043932	0					
ANR	1044555	Identifier	endl		1043932	1					
ANR	1044556	Statement	delete	196:4:4848:4853	1043932	42	True				
ANR	1044557	ExpressionStatement	expr	196:11:4855:4859	1043932	43	True				
ANR	1044558	Identifier	expr		1043932	0					
ANR	1044559	ExpressionStatement	expr = NULL	197:4:4865:4876	1043932	44	True				
ANR	1044560	AssignmentExpression	expr = NULL		1043932	0		=			
ANR	1044561	Identifier	expr		1043932	0					
ANR	1044562	Identifier	NULL		1043932	1					
ANR	1044563	BreakStatement	break ;	198:4:4882:4887	1043932	45	True				
ANR	1044564	Label	case EVALUATE_WITH_SIGNIFICANCE :	200:3:4895:4926	1043932	46	True				
ANR	1044565	Identifier	EVALUATE_WITH_SIGNIFICANCE		1043932	0					
ANR	1044566	ExpressionStatement	"getline ( cin , buffer1 , '\\n' )"	201:16:4944:4971	1043932	47	True				
ANR	1044567	CallExpression	"getline ( cin , buffer1 , '\\n' )"		1043932	0					
ANR	1044568	Callee	getline		1043932	0					
ANR	1044569	Identifier	getline		1043932	0					
ANR	1044570	ArgumentList	cin		1043932	1					
ANR	1044571	Argument	cin		1043932	0					
ANR	1044572	Identifier	cin		1043932	0					
ANR	1044573	Argument	buffer1		1043932	1					
ANR	1044574	Identifier	buffer1		1043932	0					
ANR	1044575	Argument	'\\n'		1043932	2					
ANR	1044576	PrimaryExpression	'\\n'		1043932	0					
ANR	1044577	IfStatement	"if ( ! parser . ParseExpression ( buffer1 , expr , true ) )"		1043932	48					
ANR	1044578	Condition	"! parser . ParseExpression ( buffer1 , expr , true )"	202:8:4981:5026	1043932	0	True				
ANR	1044579	UnaryOperationExpression	"! parser . ParseExpression ( buffer1 , expr , true )"		1043932	0					
ANR	1044580	UnaryOperator	!		1043932	0					
ANR	1044581	CallExpression	"parser . ParseExpression ( buffer1 , expr , true )"		1043932	1					
ANR	1044582	Callee	parser . ParseExpression		1043932	0					
ANR	1044583	MemberAccess	parser . ParseExpression		1043932	0					
ANR	1044584	Identifier	parser		1043932	0					
ANR	1044585	Identifier	ParseExpression		1043932	1					
ANR	1044586	ArgumentList	buffer1		1043932	1					
ANR	1044587	Argument	buffer1		1043932	0					
ANR	1044588	Identifier	buffer1		1043932	0					
ANR	1044589	Argument	expr		1043932	1					
ANR	1044590	Identifier	expr		1043932	0					
ANR	1044591	Argument	true		1043932	2					
ANR	1044592	Identifier	true		1043932	0					
ANR	1044593	CompoundStatement		130:57:3504:3504	1043932	1					
ANR	1044594	ExpressionStatement	"cout << ""Error parsing expression: "" << buffer1 << endl"	203:5:5037:5093	1043932	0	True				
ANR	1044595	ShiftExpression	"cout << ""Error parsing expression: "" << buffer1 << endl"		1043932	0		<<			
ANR	1044596	Identifier	cout		1043932	0					
ANR	1044597	ShiftExpression	"""Error parsing expression: "" << buffer1 << endl"		1043932	1		<<			
ANR	1044598	PrimaryExpression	"""Error parsing expression: """		1043932	0					
ANR	1044599	ShiftExpression	buffer1 << endl		1043932	1		<<			
ANR	1044600	Identifier	buffer1		1043932	0					
ANR	1044601	Identifier	endl		1043932	1					
ANR	1044602	BreakStatement	break ;	204:5:5100:5105	1043932	1	True				
ANR	1044603	ExpressionStatement	expr -> SetParentScope ( ad )	206:4:5117:5143	1043932	49	True				
ANR	1044604	CallExpression	expr -> SetParentScope ( ad )		1043932	0					
ANR	1044605	Callee	expr -> SetParentScope		1043932	0					
ANR	1044606	PtrMemberAccess	expr -> SetParentScope		1043932	0					
ANR	1044607	Identifier	expr		1043932	0					
ANR	1044608	Identifier	SetParentScope		1043932	1					
ANR	1044609	ArgumentList	ad		1043932	1					
ANR	1044610	Argument	ad		1043932	0					
ANR	1044611	Identifier	ad		1043932	0					
ANR	1044612	IfStatement	"if ( ! ad -> EvaluateExpr ( expr , value , fexpr ) )"		1043932	50					
ANR	1044613	Condition	"! ad -> EvaluateExpr ( expr , value , fexpr )"	207:8:5153:5191	1043932	0	True				
ANR	1044614	UnaryOperationExpression	"! ad -> EvaluateExpr ( expr , value , fexpr )"		1043932	0					
ANR	1044615	UnaryOperator	!		1043932	0					
ANR	1044616	CallExpression	"ad -> EvaluateExpr ( expr , value , fexpr )"		1043932	1					
ANR	1044617	Callee	ad -> EvaluateExpr		1043932	0					
ANR	1044618	PtrMemberAccess	ad -> EvaluateExpr		1043932	0					
ANR	1044619	Identifier	ad		1043932	0					
ANR	1044620	Identifier	EvaluateExpr		1043932	1					
ANR	1044621	ArgumentList	expr		1043932	1					
ANR	1044622	Argument	expr		1043932	0					
ANR	1044623	Identifier	expr		1043932	0					
ANR	1044624	Argument	value		1043932	1					
ANR	1044625	Identifier	value		1043932	0					
ANR	1044626	Argument	fexpr		1043932	2					
ANR	1044627	Identifier	fexpr		1043932	0					
ANR	1044628	CompoundStatement		135:50:3669:3669	1043932	1					
ANR	1044629	ExpressionStatement	"cout << ""Error evaluating expression: "" << buffer1 << endl"	208:5:5202:5260	1043932	0	True				
ANR	1044630	ShiftExpression	"cout << ""Error evaluating expression: "" << buffer1 << endl"		1043932	0		<<			
ANR	1044631	Identifier	cout		1043932	0					
ANR	1044632	ShiftExpression	"""Error evaluating expression: "" << buffer1 << endl"		1043932	1		<<			
ANR	1044633	PrimaryExpression	"""Error evaluating expression: """		1043932	0					
ANR	1044634	ShiftExpression	buffer1 << endl		1043932	1		<<			
ANR	1044635	Identifier	buffer1		1043932	0					
ANR	1044636	Identifier	endl		1043932	1					
ANR	1044637	Statement	delete	209:5:5267:5272	1043932	1	True				
ANR	1044638	ExpressionStatement	expr	209:12:5274:5278	1043932	2	True				
ANR	1044639	Identifier	expr		1043932	0					
ANR	1044640	Statement	delete	210:5:5285:5290	1043932	3	True				
ANR	1044641	ExpressionStatement	fexpr	210:12:5292:5297	1043932	4	True				
ANR	1044642	Identifier	fexpr		1043932	0					
ANR	1044643	ExpressionStatement	expr = NULL	211:5:5304:5315	1043932	5	True				
ANR	1044644	AssignmentExpression	expr = NULL		1043932	0		=			
ANR	1044645	Identifier	expr		1043932	0					
ANR	1044646	Identifier	NULL		1043932	1					
ANR	1044647	ExpressionStatement	fexpr = NULL	212:5:5322:5334	1043932	6	True				
ANR	1044648	AssignmentExpression	fexpr = NULL		1043932	0		=			
ANR	1044649	Identifier	fexpr		1043932	0					
ANR	1044650	Identifier	NULL		1043932	1					
ANR	1044651	BreakStatement	break ;	213:5:5341:5346	1043932	7	True				
ANR	1044652	ExpressionStatement	"output = """""	215:4:5358:5369	1043932	51	True				
ANR	1044653	AssignmentExpression	"output = """""		1043932	0		=			
ANR	1044654	Identifier	output		1043932	0					
ANR	1044655	PrimaryExpression	""""""		1043932	1					
ANR	1044656	ExpressionStatement	"unparser . Unparse ( output , value )"	216:4:5375:5408	1043932	52	True				
ANR	1044657	CallExpression	"unparser . Unparse ( output , value )"		1043932	0					
ANR	1044658	Callee	unparser . Unparse		1043932	0					
ANR	1044659	MemberAccess	unparser . Unparse		1043932	0					
ANR	1044660	Identifier	unparser		1043932	0					
ANR	1044661	Identifier	Unparse		1043932	1					
ANR	1044662	ArgumentList	output		1043932	1					
ANR	1044663	Argument	output		1043932	0					
ANR	1044664	Identifier	output		1043932	0					
ANR	1044665	Argument	value		1043932	1					
ANR	1044666	Identifier	value		1043932	0					
ANR	1044667	ExpressionStatement	cout << output << endl	217:4:5414:5436	1043932	53	True				
ANR	1044668	ShiftExpression	cout << output << endl		1043932	0		<<			
ANR	1044669	Identifier	cout		1043932	0					
ANR	1044670	ShiftExpression	output << endl		1043932	1		<<			
ANR	1044671	Identifier	output		1043932	0					
ANR	1044672	Identifier	endl		1043932	1					
ANR	1044673	ExpressionStatement	"output = """""	218:4:5442:5453	1043932	54	True				
ANR	1044674	AssignmentExpression	"output = """""		1043932	0		=			
ANR	1044675	Identifier	output		1043932	0					
ANR	1044676	PrimaryExpression	""""""		1043932	1					
ANR	1044677	ExpressionStatement	"unparser . Unparse ( output , fexpr )"	219:4:5459:5492	1043932	55	True				
ANR	1044678	CallExpression	"unparser . Unparse ( output , fexpr )"		1043932	0					
ANR	1044679	Callee	unparser . Unparse		1043932	0					
ANR	1044680	MemberAccess	unparser . Unparse		1043932	0					
ANR	1044681	Identifier	unparser		1043932	0					
ANR	1044682	Identifier	Unparse		1043932	1					
ANR	1044683	ArgumentList	output		1043932	1					
ANR	1044684	Argument	output		1043932	0					
ANR	1044685	Identifier	output		1043932	0					
ANR	1044686	Argument	fexpr		1043932	1					
ANR	1044687	Identifier	fexpr		1043932	0					
ANR	1044688	ExpressionStatement	cout << output << endl	220:4:5498:5520	1043932	56	True				
ANR	1044689	ShiftExpression	cout << output << endl		1043932	0		<<			
ANR	1044690	Identifier	cout		1043932	0					
ANR	1044691	ShiftExpression	output << endl		1043932	1		<<			
ANR	1044692	Identifier	output		1043932	0					
ANR	1044693	Identifier	endl		1043932	1					
ANR	1044694	Statement	delete	221:4:5526:5531	1043932	57	True				
ANR	1044695	ExpressionStatement	expr	221:11:5533:5537	1043932	58	True				
ANR	1044696	Identifier	expr		1043932	0					
ANR	1044697	ExpressionStatement	expr = NULL	222:4:5543:5554	1043932	59	True				
ANR	1044698	AssignmentExpression	expr = NULL		1043932	0		=			
ANR	1044699	Identifier	expr		1043932	0					
ANR	1044700	Identifier	NULL		1043932	1					
ANR	1044701	Statement	delete	223:4:5560:5565	1043932	60	True				
ANR	1044702	ExpressionStatement	fexpr	223:11:5567:5572	1043932	61	True				
ANR	1044703	Identifier	fexpr		1043932	0					
ANR	1044704	ExpressionStatement	fexpr = NULL	224:4:5578:5590	1043932	62	True				
ANR	1044705	AssignmentExpression	fexpr = NULL		1043932	0		=			
ANR	1044706	Identifier	fexpr		1043932	0					
ANR	1044707	Identifier	NULL		1043932	1					
ANR	1044708	BreakStatement	break ;	225:4:5596:5601	1043932	63	True				
ANR	1044709	Label	case FLATTEN :	227:3:5607:5619	1043932	64	True				
ANR	1044710	Identifier	FLATTEN		1043932	0					
ANR	1044711	ExpressionStatement	"getline ( cin , buffer1 , '\\n' )"	228:16:5638:5665	1043932	65	True				
ANR	1044712	CallExpression	"getline ( cin , buffer1 , '\\n' )"		1043932	0					
ANR	1044713	Callee	getline		1043932	0					
ANR	1044714	Identifier	getline		1043932	0					
ANR	1044715	ArgumentList	cin		1043932	1					
ANR	1044716	Argument	cin		1043932	0					
ANR	1044717	Identifier	cin		1043932	0					
ANR	1044718	Argument	buffer1		1043932	1					
ANR	1044719	Identifier	buffer1		1043932	0					
ANR	1044720	Argument	'\\n'		1043932	2					
ANR	1044721	PrimaryExpression	'\\n'		1043932	0					
ANR	1044722	IfStatement	"if ( ! parser . ParseExpression ( buffer1 , expr , true ) )"		1043932	66					
ANR	1044723	Condition	"! parser . ParseExpression ( buffer1 , expr , true )"	229:8:5675:5720	1043932	0	True				
ANR	1044724	UnaryOperationExpression	"! parser . ParseExpression ( buffer1 , expr , true )"		1043932	0					
ANR	1044725	UnaryOperator	!		1043932	0					
ANR	1044726	CallExpression	"parser . ParseExpression ( buffer1 , expr , true )"		1043932	1					
ANR	1044727	Callee	parser . ParseExpression		1043932	0					
ANR	1044728	MemberAccess	parser . ParseExpression		1043932	0					
ANR	1044729	Identifier	parser		1043932	0					
ANR	1044730	Identifier	ParseExpression		1043932	1					
ANR	1044731	ArgumentList	buffer1		1043932	1					
ANR	1044732	Argument	buffer1		1043932	0					
ANR	1044733	Identifier	buffer1		1043932	0					
ANR	1044734	Argument	expr		1043932	1					
ANR	1044735	Identifier	expr		1043932	0					
ANR	1044736	Argument	true		1043932	2					
ANR	1044737	Identifier	true		1043932	0					
ANR	1044738	CompoundStatement		157:57:4198:4198	1043932	1					
ANR	1044739	ExpressionStatement	"cout << ""Error parsing expression: "" << buffer1 << endl"	230:5:5731:5786	1043932	0	True				
ANR	1044740	ShiftExpression	"cout << ""Error parsing expression: "" << buffer1 << endl"		1043932	0		<<			
ANR	1044741	Identifier	cout		1043932	0					
ANR	1044742	ShiftExpression	"""Error parsing expression: "" << buffer1 << endl"		1043932	1		<<			
ANR	1044743	PrimaryExpression	"""Error parsing expression: """		1043932	0					
ANR	1044744	ShiftExpression	buffer1 << endl		1043932	1		<<			
ANR	1044745	Identifier	buffer1		1043932	0					
ANR	1044746	Identifier	endl		1043932	1					
ANR	1044747	BreakStatement	break ;	231:5:5793:5798	1043932	1	True				
ANR	1044748	ExpressionStatement	expr -> SetParentScope ( ad )	233:4:5810:5836	1043932	67	True				
ANR	1044749	CallExpression	expr -> SetParentScope ( ad )		1043932	0					
ANR	1044750	Callee	expr -> SetParentScope		1043932	0					
ANR	1044751	PtrMemberAccess	expr -> SetParentScope		1043932	0					
ANR	1044752	Identifier	expr		1043932	0					
ANR	1044753	Identifier	SetParentScope		1043932	1					
ANR	1044754	ArgumentList	ad		1043932	1					
ANR	1044755	Argument	ad		1043932	0					
ANR	1044756	Identifier	ad		1043932	0					
ANR	1044757	IfStatement	"if ( ad -> Flatten ( expr , value , fexpr ) )"		1043932	68					
ANR	1044758	Condition	"ad -> Flatten ( expr , value , fexpr )"	234:8:5846:5878	1043932	0	True				
ANR	1044759	CallExpression	"ad -> Flatten ( expr , value , fexpr )"		1043932	0					
ANR	1044760	Callee	ad -> Flatten		1043932	0					
ANR	1044761	PtrMemberAccess	ad -> Flatten		1043932	0					
ANR	1044762	Identifier	ad		1043932	0					
ANR	1044763	Identifier	Flatten		1043932	1					
ANR	1044764	ArgumentList	expr		1043932	1					
ANR	1044765	Argument	expr		1043932	0					
ANR	1044766	Identifier	expr		1043932	0					
ANR	1044767	Argument	value		1043932	1					
ANR	1044768	Identifier	value		1043932	0					
ANR	1044769	Argument	fexpr		1043932	2					
ANR	1044770	Identifier	fexpr		1043932	0					
ANR	1044771	CompoundStatement		162:44:4356:4356	1043932	1					
ANR	1044772	IfStatement	if ( fexpr )		1043932	0					
ANR	1044773	Condition	fexpr	235:9:5893:5897	1043932	0	True				
ANR	1044774	Identifier	fexpr		1043932	0					
ANR	1044775	CompoundStatement		163:17:4375:4375	1043932	1					
ANR	1044776	ExpressionStatement	"output = """""	236:6:5909:5920	1043932	0	True				
ANR	1044777	AssignmentExpression	"output = """""		1043932	0		=			
ANR	1044778	Identifier	output		1043932	0					
ANR	1044779	PrimaryExpression	""""""		1043932	1					
ANR	1044780	ExpressionStatement	"unparser . Unparse ( output , fexpr )"	237:6:5928:5961	1043932	1	True				
ANR	1044781	CallExpression	"unparser . Unparse ( output , fexpr )"		1043932	0					
ANR	1044782	Callee	unparser . Unparse		1043932	0					
ANR	1044783	MemberAccess	unparser . Unparse		1043932	0					
ANR	1044784	Identifier	unparser		1043932	0					
ANR	1044785	Identifier	Unparse		1043932	1					
ANR	1044786	ArgumentList	output		1043932	1					
ANR	1044787	Argument	output		1043932	0					
ANR	1044788	Identifier	output		1043932	0					
ANR	1044789	Argument	fexpr		1043932	1					
ANR	1044790	Identifier	fexpr		1043932	0					
ANR	1044791	ExpressionStatement	cout << output << endl	238:6:5969:5991	1043932	2	True				
ANR	1044792	ShiftExpression	cout << output << endl		1043932	0		<<			
ANR	1044793	Identifier	cout		1043932	0					
ANR	1044794	ShiftExpression	output << endl		1043932	1		<<			
ANR	1044795	Identifier	output		1043932	0					
ANR	1044796	Identifier	endl		1043932	1					
ANR	1044797	Statement	delete	239:6:5999:6004	1043932	3	True				
ANR	1044798	ExpressionStatement	fexpr	239:13:6006:6011	1043932	4	True				
ANR	1044799	Identifier	fexpr		1043932	0					
ANR	1044800	ExpressionStatement	fexpr = NULL	240:6:6019:6031	1043932	5	True				
ANR	1044801	AssignmentExpression	fexpr = NULL		1043932	0		=			
ANR	1044802	Identifier	fexpr		1043932	0					
ANR	1044803	Identifier	NULL		1043932	1					
ANR	1044804	ElseStatement	else		1043932	0					
ANR	1044805	CompoundStatement		169:12:4519:4519	1043932	0					
ANR	1044806	ExpressionStatement	"output = """""	242:6:6053:6064	1043932	0	True				
ANR	1044807	AssignmentExpression	"output = """""		1043932	0		=			
ANR	1044808	Identifier	output		1043932	0					
ANR	1044809	PrimaryExpression	""""""		1043932	1					
ANR	1044810	ExpressionStatement	"unparser . Unparse ( output , value )"	243:6:6072:6105	1043932	1	True				
ANR	1044811	CallExpression	"unparser . Unparse ( output , value )"		1043932	0					
ANR	1044812	Callee	unparser . Unparse		1043932	0					
ANR	1044813	MemberAccess	unparser . Unparse		1043932	0					
ANR	1044814	Identifier	unparser		1043932	0					
ANR	1044815	Identifier	Unparse		1043932	1					
ANR	1044816	ArgumentList	output		1043932	1					
ANR	1044817	Argument	output		1043932	0					
ANR	1044818	Identifier	output		1043932	0					
ANR	1044819	Argument	value		1043932	1					
ANR	1044820	Identifier	value		1043932	0					
ANR	1044821	ExpressionStatement	cout << output << endl	244:6:6113:6135	1043932	2	True				
ANR	1044822	ShiftExpression	cout << output << endl		1043932	0		<<			
ANR	1044823	Identifier	cout		1043932	0					
ANR	1044824	ShiftExpression	output << endl		1043932	1		<<			
ANR	1044825	Identifier	output		1043932	0					
ANR	1044826	Identifier	endl		1043932	1					
ANR	1044827	ElseStatement	else		1043932	0					
ANR	1044828	CompoundStatement		174:11:4629:4629	1043932	0					
ANR	1044829	ExpressionStatement	"cout << ""Error flattening expression\\n"""	247:5:6163:6202	1043932	0	True				
ANR	1044830	ShiftExpression	"cout << ""Error flattening expression\\n"""		1043932	0		<<			
ANR	1044831	Identifier	cout		1043932	0					
ANR	1044832	PrimaryExpression	"""Error flattening expression\\n"""		1043932	1					
ANR	1044833	Statement	delete	249:4:6214:6219	1043932	69	True				
ANR	1044834	ExpressionStatement	expr	249:11:6221:6225	1043932	70	True				
ANR	1044835	Identifier	expr		1043932	0					
ANR	1044836	ExpressionStatement	expr = NULL	250:4:6231:6242	1043932	71	True				
ANR	1044837	AssignmentExpression	expr = NULL		1043932	0		=			
ANR	1044838	Identifier	expr		1043932	0					
ANR	1044839	Identifier	NULL		1043932	1					
ANR	1044840	BreakStatement	break ;	251:4:6248:6253	1043932	72	True				
ANR	1044841	Label	case HELP :	253:3:6263:6272	1043932	73	True				
ANR	1044842	Identifier	HELP		1043932	0					
ANR	1044843	ExpressionStatement	help ( )	254:4:6279:6285	1043932	74	True				
ANR	1044844	CallExpression	help ( )		1043932	0					
ANR	1044845	Callee	help		1043932	0					
ANR	1044846	Identifier	help		1043932	0					
ANR	1044847	ArgumentList			1043932	1					
ANR	1044848	ExpressionStatement	"getline ( cin , buffer1 , '\\n' )"	255:16:6304:6331	1043932	75	True				
ANR	1044849	CallExpression	"getline ( cin , buffer1 , '\\n' )"		1043932	0					
ANR	1044850	Callee	getline		1043932	0					
ANR	1044851	Identifier	getline		1043932	0					
ANR	1044852	ArgumentList	cin		1043932	1					
ANR	1044853	Argument	cin		1043932	0					
ANR	1044854	Identifier	cin		1043932	0					
ANR	1044855	Argument	buffer1		1043932	1					
ANR	1044856	Identifier	buffer1		1043932	0					
ANR	1044857	Argument	'\\n'		1043932	2					
ANR	1044858	PrimaryExpression	'\\n'		1043932	0					
ANR	1044859	BreakStatement	break ;	256:4:6337:6342	1043932	76	True				
ANR	1044860	Label	case INSERT_ATTRIBUTE :	258:3:6348:6369	1043932	77	True				
ANR	1044861	Identifier	INSERT_ATTRIBUTE		1043932	0					
ANR	1044862	ExpressionStatement	cin >> buffer1	259:16:6387:6401	1043932	78	True				
ANR	1044863	ShiftExpression	cin >> buffer1		1043932	0		>>			
ANR	1044864	Identifier	cin		1043932	0					
ANR	1044865	Identifier	buffer1		1043932	1					
ANR	1044866	IfStatement	if ( buffer1 . length ( ) < 1 )		1043932	79					
ANR	1044867	Condition	buffer1 . length ( ) < 1	260:8:6412:6431	1043932	0	True				
ANR	1044868	RelationalExpression	buffer1 . length ( ) < 1		1043932	0		<			
ANR	1044869	CallExpression	buffer1 . length ( )		1043932	0					
ANR	1044870	Callee	buffer1 . length		1043932	0					
ANR	1044871	MemberAccess	buffer1 . length		1043932	0					
ANR	1044872	Identifier	buffer1		1043932	0					
ANR	1044873	Identifier	length		1043932	1					
ANR	1044874	ArgumentList			1043932	1					
ANR	1044875	PrimaryExpression	1		1043932	1					
ANR	1044876	CompoundStatement		188:30:4908:4908	1043932	1					
ANR	1044877	ExpressionStatement	"cout << ""Error reading attribute name\\n"""	261:5:6441:6481	1043932	0	True				
ANR	1044878	ShiftExpression	"cout << ""Error reading attribute name\\n"""		1043932	0		<<			
ANR	1044879	Identifier	cout		1043932	0					
ANR	1044880	PrimaryExpression	"""Error reading attribute name\\n"""		1043932	1					
ANR	1044881	BreakStatement	break ;	262:5:6488:6493	1043932	1	True				
ANR	1044882	ExpressionStatement	"getline ( cin , buffer2 , '\\n' )"	264:16:6518:6545	1043932	80	True				
ANR	1044883	CallExpression	"getline ( cin , buffer2 , '\\n' )"		1043932	0					
ANR	1044884	Callee	getline		1043932	0					
ANR	1044885	Identifier	getline		1043932	0					
ANR	1044886	ArgumentList	cin		1043932	1					
ANR	1044887	Argument	cin		1043932	0					
ANR	1044888	Identifier	cin		1043932	0					
ANR	1044889	Argument	buffer2		1043932	1					
ANR	1044890	Identifier	buffer2		1043932	0					
ANR	1044891	Argument	'\\n'		1043932	2					
ANR	1044892	PrimaryExpression	'\\n'		1043932	0					
ANR	1044893	IfStatement	"if ( ! parser . ParseExpression ( buffer2 , expr , true ) )"		1043932	81					
ANR	1044894	Condition	"! parser . ParseExpression ( buffer2 , expr , true )"	265:8:6555:6600	1043932	0	True				
ANR	1044895	UnaryOperationExpression	"! parser . ParseExpression ( buffer2 , expr , true )"		1043932	0					
ANR	1044896	UnaryOperator	!		1043932	0					
ANR	1044897	CallExpression	"parser . ParseExpression ( buffer2 , expr , true )"		1043932	1					
ANR	1044898	Callee	parser . ParseExpression		1043932	0					
ANR	1044899	MemberAccess	parser . ParseExpression		1043932	0					
ANR	1044900	Identifier	parser		1043932	0					
ANR	1044901	Identifier	ParseExpression		1043932	1					
ANR	1044902	ArgumentList	buffer2		1043932	1					
ANR	1044903	Argument	buffer2		1043932	0					
ANR	1044904	Identifier	buffer2		1043932	0					
ANR	1044905	Argument	expr		1043932	1					
ANR	1044906	Identifier	expr		1043932	0					
ANR	1044907	Argument	true		1043932	2					
ANR	1044908	Identifier	true		1043932	0					
ANR	1044909	CompoundStatement		193:57:5078:5078	1043932	1					
ANR	1044910	ExpressionStatement	"cout << ""Error parsing expression: "" << buffer2 << endl"	266:5:6611:6667	1043932	0	True				
ANR	1044911	ShiftExpression	"cout << ""Error parsing expression: "" << buffer2 << endl"		1043932	0		<<			
ANR	1044912	Identifier	cout		1043932	0					
ANR	1044913	ShiftExpression	"""Error parsing expression: "" << buffer2 << endl"		1043932	1		<<			
ANR	1044914	PrimaryExpression	"""Error parsing expression: """		1043932	0					
ANR	1044915	ShiftExpression	buffer2 << endl		1043932	1		<<			
ANR	1044916	Identifier	buffer2		1043932	0					
ANR	1044917	Identifier	endl		1043932	1					
ANR	1044918	BreakStatement	break ;	267:5:6674:6679	1043932	1	True				
ANR	1044919	IfStatement	"if ( ! ad -> Insert ( buffer1 , expr ) )"		1043932	82					
ANR	1044920	Condition	"! ad -> Insert ( buffer1 , expr )"	269:8:6696:6723	1043932	0	True				
ANR	1044921	UnaryOperationExpression	"! ad -> Insert ( buffer1 , expr )"		1043932	0					
ANR	1044922	UnaryOperator	!		1043932	0					
ANR	1044923	CallExpression	"ad -> Insert ( buffer1 , expr )"		1043932	1					
ANR	1044924	Callee	ad -> Insert		1043932	0					
ANR	1044925	PtrMemberAccess	ad -> Insert		1043932	0					
ANR	1044926	Identifier	ad		1043932	0					
ANR	1044927	Identifier	Insert		1043932	1					
ANR	1044928	ArgumentList	buffer1		1043932	1					
ANR	1044929	Argument	buffer1		1043932	0					
ANR	1044930	Identifier	buffer1		1043932	0					
ANR	1044931	Argument	expr		1043932	1					
ANR	1044932	Identifier	expr		1043932	0					
ANR	1044933	CompoundStatement		197:39:5201:5201	1043932	1					
ANR	1044934	ExpressionStatement	"cout << ""Error Inserting expression\\n"""	270:5:6734:6772	1043932	0	True				
ANR	1044935	ShiftExpression	"cout << ""Error Inserting expression\\n"""		1043932	0		<<			
ANR	1044936	Identifier	cout		1043932	0					
ANR	1044937	PrimaryExpression	"""Error Inserting expression\\n"""		1043932	1					
ANR	1044938	ExpressionStatement	expr = NULL	272:4:6784:6795	1043932	83	True				
ANR	1044939	AssignmentExpression	expr = NULL		1043932	0		=			
ANR	1044940	Identifier	expr		1043932	0					
ANR	1044941	Identifier	NULL		1043932	1					
ANR	1044942	BreakStatement	break ;	273:4:6801:6806	1043932	84	True				
ANR	1044943	Label	case NEW_TOPLEVEL :	275:3:6812:6829	1043932	85	True				
ANR	1044944	Identifier	NEW_TOPLEVEL		1043932	0					
ANR	1044945	ExpressionStatement	ad -> Clear ( )	276:4:6836:6847	1043932	86	True				
ANR	1044946	CallExpression	ad -> Clear ( )		1043932	0					
ANR	1044947	Callee	ad -> Clear		1043932	0					
ANR	1044948	PtrMemberAccess	ad -> Clear		1043932	0					
ANR	1044949	Identifier	ad		1043932	0					
ANR	1044950	Identifier	Clear		1043932	1					
ANR	1044951	ArgumentList			1043932	1					
ANR	1044952	ExpressionStatement	"getline ( cin , buffer1 , '\\n' )"	277:16:6865:6892	1043932	87	True				
ANR	1044953	CallExpression	"getline ( cin , buffer1 , '\\n' )"		1043932	0					
ANR	1044954	Callee	getline		1043932	0					
ANR	1044955	Identifier	getline		1043932	0					
ANR	1044956	ArgumentList	cin		1043932	1					
ANR	1044957	Argument	cin		1043932	0					
ANR	1044958	Identifier	cin		1043932	0					
ANR	1044959	Argument	buffer1		1043932	1					
ANR	1044960	Identifier	buffer1		1043932	0					
ANR	1044961	Argument	'\\n'		1043932	2					
ANR	1044962	PrimaryExpression	'\\n'		1043932	0					
ANR	1044963	IfStatement	"if ( ! ( ad = parser . ParseClassAd ( buffer1 , true ) ) )"		1043932	88					
ANR	1044964	Condition	"! ( ad = parser . ParseClassAd ( buffer1 , true ) )"	278:8:6902:6947	1043932	0	True				
ANR	1044965	UnaryOperationExpression	"! ( ad = parser . ParseClassAd ( buffer1 , true ) )"		1043932	0					
ANR	1044966	UnaryOperator	!		1043932	0					
ANR	1044967	AssignmentExpression	"ad = parser . ParseClassAd ( buffer1 , true )"		1043932	1		=			
ANR	1044968	Identifier	ad		1043932	0					
ANR	1044969	CallExpression	"parser . ParseClassAd ( buffer1 , true )"		1043932	1					
ANR	1044970	Callee	parser . ParseClassAd		1043932	0					
ANR	1044971	MemberAccess	parser . ParseClassAd		1043932	0					
ANR	1044972	Identifier	parser		1043932	0					
ANR	1044973	Identifier	ParseClassAd		1043932	1					
ANR	1044974	ArgumentList	buffer1		1043932	1					
ANR	1044975	Argument	buffer1		1043932	0					
ANR	1044976	Identifier	buffer1		1043932	0					
ANR	1044977	Argument	true		1043932	1					
ANR	1044978	Identifier	true		1043932	0					
ANR	1044979	CompoundStatement		206:57:5425:5425	1043932	1					
ANR	1044980	ExpressionStatement	"cout << ""Error parsing classad\\n"""	279:5:6958:6991	1043932	0	True				
ANR	1044981	ShiftExpression	"cout << ""Error parsing classad\\n"""		1043932	0		<<			
ANR	1044982	Identifier	cout		1043932	0					
ANR	1044983	PrimaryExpression	"""Error parsing classad\\n"""		1043932	1					
ANR	1044984	BreakStatement	break ;	281:4:7003:7008	1043932	89	True				
ANR	1044985	Label	case OUTPUT_TOPLEVEL :	283:3:7017:7037	1043932	90	True				
ANR	1044986	Identifier	OUTPUT_TOPLEVEL		1043932	0					
ANR	1044987	ExpressionStatement	"output = """""	284:4:7043:7054	1043932	91	True				
ANR	1044988	AssignmentExpression	"output = """""		1043932	0		=			
ANR	1044989	Identifier	output		1043932	0					
ANR	1044990	PrimaryExpression	""""""		1043932	1					
ANR	1044991	ExpressionStatement	"unparser . Unparse ( output , ad )"	285:4:7060:7090	1043932	92	True				
ANR	1044992	CallExpression	"unparser . Unparse ( output , ad )"		1043932	0					
ANR	1044993	Callee	unparser . Unparse		1043932	0					
ANR	1044994	MemberAccess	unparser . Unparse		1043932	0					
ANR	1044995	Identifier	unparser		1043932	0					
ANR	1044996	Identifier	Unparse		1043932	1					
ANR	1044997	ArgumentList	output		1043932	1					
ANR	1044998	Argument	output		1043932	0					
ANR	1044999	Identifier	output		1043932	0					
ANR	1045000	Argument	ad		1043932	1					
ANR	1045001	Identifier	ad		1043932	0					
ANR	1045002	ExpressionStatement	cout << output << endl	286:4:7096:7118	1043932	93	True				
ANR	1045003	ShiftExpression	cout << output << endl		1043932	0		<<			
ANR	1045004	Identifier	cout		1043932	0					
ANR	1045005	ShiftExpression	output << endl		1043932	1		<<			
ANR	1045006	Identifier	output		1043932	0					
ANR	1045007	Identifier	endl		1043932	1					
ANR	1045008	ExpressionStatement	"getline ( cin , buffer1 , '\\n' )"	287:16:7136:7163	1043932	94	True				
ANR	1045009	CallExpression	"getline ( cin , buffer1 , '\\n' )"		1043932	0					
ANR	1045010	Callee	getline		1043932	0					
ANR	1045011	Identifier	getline		1043932	0					
ANR	1045012	ArgumentList	cin		1043932	1					
ANR	1045013	Argument	cin		1043932	0					
ANR	1045014	Identifier	cin		1043932	0					
ANR	1045015	Argument	buffer1		1043932	1					
ANR	1045016	Identifier	buffer1		1043932	0					
ANR	1045017	Argument	'\\n'		1043932	2					
ANR	1045018	PrimaryExpression	'\\n'		1043932	0					
ANR	1045019	BreakStatement	break ;	288:4:7169:7174	1043932	95	True				
ANR	1045020	Label	case QUIT :	290:3:7180:7189	1043932	96	True				
ANR	1045021	Identifier	QUIT		1043932	0					
ANR	1045022	ExpressionStatement	"cout << ""Exiting\\n\\n"""	291:4:7196:7217	1043932	97	True				
ANR	1045023	ShiftExpression	"cout << ""Exiting\\n\\n"""		1043932	0		<<			
ANR	1045024	Identifier	cout		1043932	0					
ANR	1045025	PrimaryExpression	"""Exiting\\n\\n"""		1043932	1					
ANR	1045026	ExpressionStatement	exit ( 0 )	292:4:7223:7232	1043932	98	True				
ANR	1045027	CallExpression	exit ( 0 )		1043932	0					
ANR	1045028	Callee	exit		1043932	0					
ANR	1045029	Identifier	exit		1043932	0					
ANR	1045030	ArgumentList	0		1043932	1					
ANR	1045031	Argument	0		1043932	0					
ANR	1045032	PrimaryExpression	0		1043932	0					
ANR	1045033	Label	case REMOVE_ATTRIBUTE :	294:3:7238:7259	1043932	99	True				
ANR	1045034	Identifier	REMOVE_ATTRIBUTE		1043932	0					
ANR	1045035	ExpressionStatement	cin >> buffer1	295:16:7277:7291	1043932	100	True				
ANR	1045036	ShiftExpression	cin >> buffer1		1043932	0		>>			
ANR	1045037	Identifier	cin		1043932	0					
ANR	1045038	Identifier	buffer1		1043932	1					
ANR	1045039	IfStatement	if ( buffer1 . length ( ) < 1 )		1043932	101					
ANR	1045040	Condition	buffer1 . length ( ) < 1	296:8:7301:7320	1043932	0	True				
ANR	1045041	RelationalExpression	buffer1 . length ( ) < 1		1043932	0		<			
ANR	1045042	CallExpression	buffer1 . length ( )		1043932	0					
ANR	1045043	Callee	buffer1 . length		1043932	0					
ANR	1045044	MemberAccess	buffer1 . length		1043932	0					
ANR	1045045	Identifier	buffer1		1043932	0					
ANR	1045046	Identifier	length		1043932	1					
ANR	1045047	ArgumentList			1043932	1					
ANR	1045048	PrimaryExpression	1		1043932	1					
ANR	1045049	CompoundStatement		224:30:5797:5797	1043932	1					
ANR	1045050	ExpressionStatement	"cout << ""Error reading attribute name\\n"""	297:5:7330:7370	1043932	0	True				
ANR	1045051	ShiftExpression	"cout << ""Error reading attribute name\\n"""		1043932	0		<<			
ANR	1045052	Identifier	cout		1043932	0					
ANR	1045053	PrimaryExpression	"""Error reading attribute name\\n"""		1043932	1					
ANR	1045054	BreakStatement	break ;	298:5:7377:7382	1043932	1	True				
ANR	1045055	IfStatement	if ( ! ad -> Remove ( buffer1 ) )		1043932	102					
ANR	1045056	Condition	! ad -> Remove ( buffer1 )	300:8:7398:7419	1043932	0	True				
ANR	1045057	UnaryOperationExpression	! ad -> Remove ( buffer1 )		1043932	0					
ANR	1045058	UnaryOperator	!		1043932	0					
ANR	1045059	CallExpression	ad -> Remove ( buffer1 )		1043932	1					
ANR	1045060	Callee	ad -> Remove		1043932	0					
ANR	1045061	PtrMemberAccess	ad -> Remove		1043932	0					
ANR	1045062	Identifier	ad		1043932	0					
ANR	1045063	Identifier	Remove		1043932	1					
ANR	1045064	ArgumentList	buffer1		1043932	1					
ANR	1045065	Argument	buffer1		1043932	0					
ANR	1045066	Identifier	buffer1		1043932	0					
ANR	1045067	CompoundStatement		228:33:5897:5897	1043932	1					
ANR	1045068	ExpressionStatement	"cout << ""Error removing attribute "" << buffer1 << endl"	301:5:7430:7484	1043932	0	True				
ANR	1045069	ShiftExpression	"cout << ""Error removing attribute "" << buffer1 << endl"		1043932	0		<<			
ANR	1045070	Identifier	cout		1043932	0					
ANR	1045071	ShiftExpression	"""Error removing attribute "" << buffer1 << endl"		1043932	1		<<			
ANR	1045072	PrimaryExpression	"""Error removing attribute """		1043932	0					
ANR	1045073	ShiftExpression	buffer1 << endl		1043932	1		<<			
ANR	1045074	Identifier	buffer1		1043932	0					
ANR	1045075	Identifier	endl		1043932	1					
ANR	1045076	ExpressionStatement	"getline ( cin , buffer1 , '\\n' )"	303:16:7508:7535	1043932	103	True				
ANR	1045077	CallExpression	"getline ( cin , buffer1 , '\\n' )"		1043932	0					
ANR	1045078	Callee	getline		1043932	0					
ANR	1045079	Identifier	getline		1043932	0					
ANR	1045080	ArgumentList	cin		1043932	1					
ANR	1045081	Argument	cin		1043932	0					
ANR	1045082	Identifier	cin		1043932	0					
ANR	1045083	Argument	buffer1		1043932	1					
ANR	1045084	Identifier	buffer1		1043932	0					
ANR	1045085	Argument	'\\n'		1043932	2					
ANR	1045086	PrimaryExpression	'\\n'		1043932	0					
ANR	1045087	BreakStatement	break ;	304:4:7541:7546	1043932	104	True				
ANR	1045088	Label	case SET_MATCH_TOPLEVEL :	306:3:7552:7575	1043932	105	True				
ANR	1045089	Identifier	SET_MATCH_TOPLEVEL		1043932	0					
ANR	1045090	Statement	delete	307:4:7582:7587	1043932	106	True				
ANR	1045091	ExpressionStatement	ad	307:11:7589:7591	1043932	107	True				
ANR	1045092	Identifier	ad		1043932	0					
ANR	1045093	IfStatement	"if ( ! ( ad = MatchClassAd :: MakeMatchClassAd ( NULL , NULL ) ) )"		1043932	108					
ANR	1045094	Condition	"! ( ad = MatchClassAd :: MakeMatchClassAd ( NULL , NULL ) )"	308:8:7601:7654	1043932	0	True				
ANR	1045095	UnaryOperationExpression	"! ( ad = MatchClassAd :: MakeMatchClassAd ( NULL , NULL ) )"		1043932	0					
ANR	1045096	UnaryOperator	!		1043932	0					
ANR	1045097	AssignmentExpression	"ad = MatchClassAd :: MakeMatchClassAd ( NULL , NULL )"		1043932	1		=			
ANR	1045098	Identifier	ad		1043932	0					
ANR	1045099	CallExpression	"MatchClassAd :: MakeMatchClassAd ( NULL , NULL )"		1043932	1					
ANR	1045100	Callee	MatchClassAd :: MakeMatchClassAd		1043932	0					
ANR	1045101	Identifier	MatchClassAd :: MakeMatchClassAd		1043932	0					
ANR	1045102	ArgumentList	NULL		1043932	1					
ANR	1045103	Argument	NULL		1043932	0					
ANR	1045104	Identifier	NULL		1043932	0					
ANR	1045105	Argument	NULL		1043932	1					
ANR	1045106	Identifier	NULL		1043932	0					
ANR	1045107	CompoundStatement		236:64:6131:6131	1043932	1					
ANR	1045108	ExpressionStatement	"cout << ""Error making classad\\n"" << endl"	309:5:7664:7704	1043932	0	True				
ANR	1045109	ShiftExpression	"cout << ""Error making classad\\n"" << endl"		1043932	0		<<			
ANR	1045110	Identifier	cout		1043932	0					
ANR	1045111	ShiftExpression	"""Error making classad\\n"" << endl"		1043932	1		<<			
ANR	1045112	PrimaryExpression	"""Error making classad\\n"""		1043932	0					
ANR	1045113	Identifier	endl		1043932	1					
ANR	1045114	ExpressionStatement	"getline ( cin , buffer1 , '\\n' )"	311:16:7728:7755	1043932	109	True				
ANR	1045115	CallExpression	"getline ( cin , buffer1 , '\\n' )"		1043932	0					
ANR	1045116	Callee	getline		1043932	0					
ANR	1045117	Identifier	getline		1043932	0					
ANR	1045118	ArgumentList	cin		1043932	1					
ANR	1045119	Argument	cin		1043932	0					
ANR	1045120	Identifier	cin		1043932	0					
ANR	1045121	Argument	buffer1		1043932	1					
ANR	1045122	Identifier	buffer1		1043932	0					
ANR	1045123	Argument	'\\n'		1043932	2					
ANR	1045124	PrimaryExpression	'\\n'		1043932	0					
ANR	1045125	BreakStatement	break ;	312:4:7761:7766	1043932	110	True				
ANR	1045126	Label	default :	314:3:7772:7779	1043932	111	True				
ANR	1045127	Identifier	default		1043932	0					
ANR	1045128	ExpressionStatement	"getline ( cin , buffer1 , '\\n' )"	315:16:7797:7824	1043932	112	True				
ANR	1045129	CallExpression	"getline ( cin , buffer1 , '\\n' )"		1043932	0					
ANR	1045130	Callee	getline		1043932	0					
ANR	1045131	Identifier	getline		1043932	0					
ANR	1045132	ArgumentList	cin		1043932	1					
ANR	1045133	Argument	cin		1043932	0					
ANR	1045134	Identifier	cin		1043932	0					
ANR	1045135	Argument	buffer1		1043932	1					
ANR	1045136	Identifier	buffer1		1043932	0					
ANR	1045137	Argument	'\\n'		1043932	2					
ANR	1045138	PrimaryExpression	'\\n'		1043932	0					
ANR	1045139	ExpressionStatement	"cout << ""\\n# """	318:2:7833:7847	1043932	4	True				
ANR	1045140	ShiftExpression	"cout << ""\\n# """		1043932	0		<<			
ANR	1045141	Identifier	cout		1043932	0					
ANR	1045142	PrimaryExpression	"""\\n# """		1043932	1					
ANR	1045143	ExpressionStatement	exit ( 0 )	321:1:7854:7863	1043932	11	True				
ANR	1045144	CallExpression	exit ( 0 )		1043932	0					
ANR	1045145	Callee	exit		1043932	0					
ANR	1045146	Identifier	exit		1043932	0					
ANR	1045147	ArgumentList	0		1043932	1					
ANR	1045148	Argument	0		1043932	0					
ANR	1045149	PrimaryExpression	0		1043932	0					
ANR	1045150	ReturnType	int		1043932	1					
ANR	1045151	Identifier	main		1043932	2					
ANR	1045152	ParameterList			1043932	3					
ANR	1045153	CFGEntryNode	ENTRY		1043932		True				
ANR	1045154	CFGExitNode	EXIT		1043932		True				
ANR	1045155	Symbol	cin . eof		1043932						
ANR	1045156	Symbol	cin		1043932						
ANR	1045157	Symbol	* ad		1043932						
ANR	1045158	Symbol	output		1043932						
ANR	1045159	Symbol	* adptr		1043932						
ANR	1045160	Symbol	fexpr		1043932						
ANR	1045161	Symbol	buffer2 . length		1043932						
ANR	1045162	Symbol	expr		1043932						
ANR	1045163	Symbol	value . IsClassAdValue		1043932						
ANR	1045164	Symbol	adptr -> Remove		1043932						
ANR	1045165	Symbol	ad -> Flatten		1043932						
ANR	1045166	Symbol	value		1043932						
ANR	1045167	Symbol	buffer1 . length		1043932						
ANR	1045168	Symbol	ad		1043932						
ANR	1045169	Symbol	NULL		1043932						
ANR	1045170	Symbol	buffer2		1043932						
ANR	1045171	Symbol	parser . ParseExpression		1043932						
ANR	1045172	Symbol	buffer3		1043932						
ANR	1045173	Symbol	buffer1		1043932						
ANR	1045174	Symbol	findCommand		1043932						
ANR	1045175	Symbol	ad -> Insert		1043932						
ANR	1045176	Symbol	cmdString		1043932						
ANR	1045177	Symbol	MatchClassAd :: MakeMatchClassAd		1043932						
ANR	1045178	Symbol	adptr		1043932						
ANR	1045179	Symbol	ad -> EvaluateExpr		1043932						
ANR	1045180	Symbol	ad -> Remove		1043932						
ANR	1045181	Symbol	command		1043932						
ANR	1045182	Symbol	parser . ParseClassAd		1043932						
ANR	1045183	Symbol	parser		1043932						
ANR	1045184	Symbol	true		1043932						
ANR	1045185	Symbol	adptr -> Insert		1043932						
ANR	1045186	Symbol	unparser		1043932						
ANR	1045187	Function	help	326:0:7916:9041							
ANR	1045188	FunctionDef	help ()		1045187	0					
ANR	1045189	CompoundStatement		328:0:7935:9041	1045187	0					
ANR	1045190	ExpressionStatement	"cout << ""\\nCommands are:\\n"""	329:1:7938:7965	1045187	0	True				
ANR	1045191	ShiftExpression	"cout << ""\\nCommands are:\\n"""		1045187	0		<<			
ANR	1045192	Identifier	cout		1045187	0					
ANR	1045193	PrimaryExpression	"""\\nCommands are:\\n"""		1045187	1					
ANR	1045194	ExpressionStatement	"cout << ""clear_toplevel\\n\\tClear toplevel ad\\n"""	330:1:7968:8015	1045187	1	True				
ANR	1045195	ShiftExpression	"cout << ""clear_toplevel\\n\\tClear toplevel ad\\n"""		1045187	0		<<			
ANR	1045196	Identifier	cout		1045187	0					
ANR	1045197	PrimaryExpression	"""clear_toplevel\\n\\tClear toplevel ad\\n"""		1045187	1					
ANR	1045198	Statement	cout	331:1:8018:8021	1045187	2	True				
ANR	1045199	Statement	<<	331:6:8023:8024	1045187	3	True				
ANR	1045200	Statement	"""deep_insert <expr1> <name> <expr2>\\n\\tInsert (<name>,<expr2>) into"""	331:9:8026:8093	1045187	4	True				
ANR	1045201	ExpressionStatement	""" classad <expr1>. (No inter-token spaces\\n\\tallowed in <expr1>.)\\n"""	332:2:8097:8165	1045187	5	True				
ANR	1045202	PrimaryExpression	""" classad <expr1>. (No inter-token spaces\\n\\tallowed in <expr1>.)\\n"""		1045187	0					
ANR	1045203	Statement	cout	333:1:8168:8171	1045187	6	True				
ANR	1045204	Statement	<<	333:6:8173:8174	1045187	7	True				
ANR	1045205	Statement	"""deep_delete <expr> <name>\\n\\tDelete <name> from classad """	333:9:8176:8233	1045187	8	True				
ANR	1045206	ExpressionStatement	"""<expr>. (No inter-token spaces allowed\\n\\tin <expr>.\\n"""	334:2:8237:8293	1045187	9	True				
ANR	1045207	PrimaryExpression	"""<expr>. (No inter-token spaces allowed\\n\\tin <expr>.\\n"""		1045187	0					
ANR	1045208	ExpressionStatement	"cout << ""evaluate <expr>\\n\\tEvaluate <expr> (in toplevel ad)\\n"""	335:1:8296:8360	1045187	10	True				
ANR	1045209	ShiftExpression	"cout << ""evaluate <expr>\\n\\tEvaluate <expr> (in toplevel ad)\\n"""		1045187	0		<<			
ANR	1045210	Identifier	cout		1045187	0					
ANR	1045211	PrimaryExpression	"""evaluate <expr>\\n\\tEvaluate <expr> (in toplevel ad)\\n"""		1045187	1					
ANR	1045212	Statement	cout	336:1:8363:8366	1045187	11	True				
ANR	1045213	Statement	<<	336:6:8368:8369	1045187	12	True				
ANR	1045214	Statement	"""sigeval <expr>\\n\\tEvaluate <expr> (in toplevel) and """	336:9:8371:8424	1045187	13	True				
ANR	1045215	ExpressionStatement	"""identify significant\\n\\tsubexpressions\\n"""	337:2:8428:8470	1045187	14	True				
ANR	1045216	PrimaryExpression	"""identify significant\\n\\tsubexpressions\\n"""		1045187	0					
ANR	1045217	ExpressionStatement	"cout << ""flatten <expr>\\n\\tFlatten <expr> (in toplevel ad)\\n"""	338:1:8473:8534	1045187	15	True				
ANR	1045218	ShiftExpression	"cout << ""flatten <expr>\\n\\tFlatten <expr> (in toplevel ad)\\n"""		1045187	0		<<			
ANR	1045219	Identifier	cout		1045187	0					
ANR	1045220	PrimaryExpression	"""flatten <expr>\\n\\tFlatten <expr> (in toplevel ad)\\n"""		1045187	1					
ANR	1045221	ExpressionStatement	"cout << ""help\\n\\tHelp --- this screen\\n"""	339:1:8537:8578	1045187	16	True				
ANR	1045222	ShiftExpression	"cout << ""help\\n\\tHelp --- this screen\\n"""		1045187	0		<<			
ANR	1045223	Identifier	cout		1045187	0					
ANR	1045224	PrimaryExpression	"""help\\n\\tHelp --- this screen\\n"""		1045187	1					
ANR	1045225	Statement	cout	340:1:8581:8584	1045187	17	True				
ANR	1045226	Statement	<<	340:6:8586:8587	1045187	18	True				
ANR	1045227	Statement	"""insert_attribute <name> <expr>\\n\\tInsert attribute (<name>,<expr>)"""	340:9:8589:8656	1045187	19	True				
ANR	1045228	ExpressionStatement	"""into toplevel\\n"""	341:2:8660:8677	1045187	20	True				
ANR	1045229	PrimaryExpression	"""into toplevel\\n"""		1045187	0					
ANR	1045230	ExpressionStatement	"cout << ""new_toplevel <classad>\\n\\tEnter new toplevel ad\\n"""	342:1:8680:8739	1045187	21	True				
ANR	1045231	ShiftExpression	"cout << ""new_toplevel <classad>\\n\\tEnter new toplevel ad\\n"""		1045187	0		<<			
ANR	1045232	Identifier	cout		1045187	0					
ANR	1045233	PrimaryExpression	"""new_toplevel <classad>\\n\\tEnter new toplevel ad\\n"""		1045187	1					
ANR	1045234	ExpressionStatement	"cout << ""output_toplevel\\n\\tOutput toplevel ad\\n"""	343:1:8742:8791	1045187	22	True				
ANR	1045235	ShiftExpression	"cout << ""output_toplevel\\n\\tOutput toplevel ad\\n"""		1045187	0		<<			
ANR	1045236	Identifier	cout		1045187	0					
ANR	1045237	PrimaryExpression	"""output_toplevel\\n\\tOutput toplevel ad\\n"""		1045187	1					
ANR	1045238	ExpressionStatement	"cout << ""quit\\n\\tQuit\\n"""	344:1:8794:8818	1045187	23	True				
ANR	1045239	ShiftExpression	"cout << ""quit\\n\\tQuit\\n"""		1045187	0		<<			
ANR	1045240	Identifier	cout		1045187	0					
ANR	1045241	PrimaryExpression	"""quit\\n\\tQuit\\n"""		1045187	1					
ANR	1045242	Statement	cout	345:1:8821:8824	1045187	24	True				
ANR	1045243	Statement	<<	345:6:8826:8827	1045187	25	True				
ANR	1045244	Statement	"""delete_attribute <name>\\n\\tDelete attribute <name> from """	345:9:8829:8886	1045187	26	True				
ANR	1045245	ExpressionStatement	"""toplevel\\n"""	346:2:8890:8902	1045187	27	True				
ANR	1045246	PrimaryExpression	"""toplevel\\n"""		1045187	0					
ANR	1045247	ExpressionStatement	"cout << ""set_match_toplevel\\n\\tSetup a toplevel ad for matching\\n"""	347:1:8905:8971	1045187	28	True				
ANR	1045248	ShiftExpression	"cout << ""set_match_toplevel\\n\\tSetup a toplevel ad for matching\\n"""		1045187	0		<<			
ANR	1045249	Identifier	cout		1045187	0					
ANR	1045250	PrimaryExpression	"""set_match_toplevel\\n\\tSetup a toplevel ad for matching\\n"""		1045187	1					
ANR	1045251	ExpressionStatement	"cout << ""\\nA command may be specified by an unambiguous prefix\\n"""	348:1:8974:9039	1045187	29	True				
ANR	1045252	ShiftExpression	"cout << ""\\nA command may be specified by an unambiguous prefix\\n"""		1045187	0		<<			
ANR	1045253	Identifier	cout		1045187	0					
ANR	1045254	PrimaryExpression	"""\\nA command may be specified by an unambiguous prefix\\n"""		1045187	1					
ANR	1045255	ReturnType	void		1045187	1					
ANR	1045256	Identifier	help		1045187	2					
ANR	1045257	ParameterList			1045187	3					
ANR	1045258	CFGEntryNode	ENTRY		1045187		True				
ANR	1045259	CFGExitNode	EXIT		1045187		True				
ANR	1045260	Function	findCommand	351:0:9044:9822							
ANR	1045261	FunctionDef	findCommand (string cmdStr)		1045260	0					
ANR	1045262	CompoundStatement		353:0:9077:9822	1045260	0					
ANR	1045263	IdentifierDeclStatement	"int cmd = 0 , len = cmdStr . length ( ) ;"	354:1:9080:9114	1045260	0	True				
ANR	1045264	IdentifierDecl	cmd = 0		1045260	0					
ANR	1045265	IdentifierDeclType	int		1045260	0					
ANR	1045266	Identifier	cmd		1045260	1					
ANR	1045267	AssignmentExpression	cmd = 0		1045260	2		=			
ANR	1045268	Identifier	cmd		1045260	0					
ANR	1045269	PrimaryExpression	0		1045260	1					
ANR	1045270	IdentifierDecl	len = cmdStr . length ( )		1045260	1					
ANR	1045271	IdentifierDeclType	int		1045260	0					
ANR	1045272	Identifier	len		1045260	1					
ANR	1045273	AssignmentExpression	len = cmdStr . length ( )		1045260	2		=			
ANR	1045274	Identifier	len		1045260	0					
ANR	1045275	CallExpression	cmdStr . length ( )		1045260	1					
ANR	1045276	Callee	cmdStr . length		1045260	0					
ANR	1045277	MemberAccess	cmdStr . length		1045260	0					
ANR	1045278	Identifier	cmdStr		1045260	0					
ANR	1045279	Identifier	length		1045260	1					
ANR	1045280	ArgumentList			1045260	1					
ANR	1045281	ForStatement	for ( int i = 0 ; i < len ; i ++ )		1045260	1					
ANR	1045282	ForInit	int i = 0 ;	356:6:9123:9133	1045260	0	True				
ANR	1045283	IdentifierDeclStatement	int i = 0 ;		1045260	0					
ANR	1045284	IdentifierDecl	i = 0		1045260	0					
ANR	1045285	IdentifierDeclType	int		1045260	0					
ANR	1045286	Identifier	i		1045260	1					
ANR	1045287	AssignmentExpression	i = 0		1045260	2		=			
ANR	1045288	Identifier	i		1045260	0					
ANR	1045289	PrimaryExpression	0		1045260	1					
ANR	1045290	Condition	i < len	356:18:9135:9141	1045260	1	True				
ANR	1045291	RelationalExpression	i < len		1045260	0		<			
ANR	1045292	Identifier	i		1045260	0					
ANR	1045293	Identifier	len		1045260	1					
ANR	1045294	PostIncDecOperationExpression	i ++	356:28:9145:9147	1045260	2	True				
ANR	1045295	Identifier	i		1045260	0					
ANR	1045296	IncDec	++		1045260	1					
ANR	1045297	CompoundStatement		4:34:73:73	1045260	3					
ANR	1045298	ExpressionStatement	cmdStr [ i ] = tolower ( cmdStr [ i ] )	357:2:9155:9187	1045260	0	True				
ANR	1045299	AssignmentExpression	cmdStr [ i ] = tolower ( cmdStr [ i ] )		1045260	0		=			
ANR	1045300	ArrayIndexing	cmdStr [ i ]		1045260	0					
ANR	1045301	Identifier	cmdStr		1045260	0					
ANR	1045302	Identifier	i		1045260	1					
ANR	1045303	CallExpression	tolower ( cmdStr [ i ] )		1045260	1					
ANR	1045304	Callee	tolower		1045260	0					
ANR	1045305	Identifier	tolower		1045260	0					
ANR	1045306	ArgumentList	cmdStr [ i ]		1045260	1					
ANR	1045307	Argument	cmdStr [ i ]		1045260	0					
ANR	1045308	ArrayIndexing	cmdStr [ i ]		1045260	0					
ANR	1045309	Identifier	cmdStr		1045260	0					
ANR	1045310	Identifier	i		1045260	1					
ANR	1045311	ForStatement	for ( int i = _NO_CMD_ + 1 ; i < _LAST_COMMAND_ ; i ++ )		1045260	2					
ANR	1045312	ForInit	int i = _NO_CMD_ + 1 ;	360:6:9199:9218	1045260	0	True				
ANR	1045313	IdentifierDeclStatement	int i = _NO_CMD_ + 1 ;		1045260	0					
ANR	1045314	IdentifierDecl	i = _NO_CMD_ + 1		1045260	0					
ANR	1045315	IdentifierDeclType	int		1045260	0					
ANR	1045316	Identifier	i		1045260	1					
ANR	1045317	AssignmentExpression	i = _NO_CMD_ + 1		1045260	2		=			
ANR	1045318	Identifier	i		1045260	0					
ANR	1045319	AdditiveExpression	_NO_CMD_ + 1		1045260	1		+			
ANR	1045320	Identifier	_NO_CMD_		1045260	0					
ANR	1045321	PrimaryExpression	1		1045260	1					
ANR	1045322	Condition	i < _LAST_COMMAND_	360:27:9220:9237	1045260	1	True				
ANR	1045323	RelationalExpression	i < _LAST_COMMAND_		1045260	0		<			
ANR	1045324	Identifier	i		1045260	0					
ANR	1045325	Identifier	_LAST_COMMAND_		1045260	1					
ANR	1045326	PostIncDecOperationExpression	i ++	360:48:9241:9243	1045260	2	True				
ANR	1045327	Identifier	i		1045260	0					
ANR	1045328	IncDec	++		1045260	1					
ANR	1045329	CompoundStatement		8:54:169:169	1045260	3					
ANR	1045330	IfStatement	"if ( strncmp ( CommandWords [ i ] . c_str ( ) , cmdStr . c_str ( ) , len ) == 0 )"		1045260	0					
ANR	1045331	Condition	"strncmp ( CommandWords [ i ] . c_str ( ) , cmdStr . c_str ( ) , len ) == 0"	361:6:9255:9312	1045260	0	True				
ANR	1045332	EqualityExpression	"strncmp ( CommandWords [ i ] . c_str ( ) , cmdStr . c_str ( ) , len ) == 0"		1045260	0		==			
ANR	1045333	CallExpression	"strncmp ( CommandWords [ i ] . c_str ( ) , cmdStr . c_str ( ) , len )"		1045260	0					
ANR	1045334	Callee	strncmp		1045260	0					
ANR	1045335	Identifier	strncmp		1045260	0					
ANR	1045336	ArgumentList	CommandWords [ i ] . c_str ( )		1045260	1					
ANR	1045337	Argument	CommandWords [ i ] . c_str ( )		1045260	0					
ANR	1045338	CallExpression	CommandWords [ i ] . c_str ( )		1045260	0					
ANR	1045339	Callee	CommandWords [ i ] . c_str		1045260	0					
ANR	1045340	MemberAccess	CommandWords [ i ] . c_str		1045260	0					
ANR	1045341	ArrayIndexing	CommandWords [ i ]		1045260	0					
ANR	1045342	Identifier	CommandWords		1045260	0					
ANR	1045343	Identifier	i		1045260	1					
ANR	1045344	Identifier	c_str		1045260	1					
ANR	1045345	ArgumentList			1045260	1					
ANR	1045346	Argument	cmdStr . c_str ( )		1045260	1					
ANR	1045347	CallExpression	cmdStr . c_str ( )		1045260	0					
ANR	1045348	Callee	cmdStr . c_str		1045260	0					
ANR	1045349	MemberAccess	cmdStr . c_str		1045260	0					
ANR	1045350	Identifier	cmdStr		1045260	0					
ANR	1045351	Identifier	c_str		1045260	1					
ANR	1045352	ArgumentList			1045260	1					
ANR	1045353	Argument	len		1045260	2					
ANR	1045354	Identifier	len		1045260	0					
ANR	1045355	PrimaryExpression	0		1045260	1					
ANR	1045356	CompoundStatement		9:67:238:238	1045260	1					
ANR	1045357	IfStatement	if ( cmd == 0 )		1045260	0					
ANR	1045358	Condition	cmd == 0	362:7:9325:9332	1045260	0	True				
ANR	1045359	EqualityExpression	cmd == 0		1045260	0		==			
ANR	1045360	Identifier	cmd		1045260	0					
ANR	1045361	PrimaryExpression	0		1045260	1					
ANR	1045362	CompoundStatement		10:18:258:258	1045260	1					
ANR	1045363	ExpressionStatement	cmd = i	363:4:9342:9349	1045260	0	True				
ANR	1045364	AssignmentExpression	cmd = i		1045260	0		=			
ANR	1045365	Identifier	cmd		1045260	0					
ANR	1045366	Identifier	i		1045260	1					
ANR	1045367	ElseStatement	else		1045260	0					
ANR	1045368	IfStatement	if ( cmd > 0 )		1045260	0					
ANR	1045369	Condition	cmd > 0	364:14:9365:9371	1045260	0	True				
ANR	1045370	RelationalExpression	cmd > 0		1045260	0		>			
ANR	1045371	Identifier	cmd		1045260	0					
ANR	1045372	PrimaryExpression	0		1045260	1					
ANR	1045373	CompoundStatement		12:24:297:297	1045260	1					
ANR	1045374	ExpressionStatement	cmd = - 1	365:4:9381:9389	1045260	0	True				
ANR	1045375	AssignmentExpression	cmd = - 1		1045260	0		=			
ANR	1045376	Identifier	cmd		1045260	0					
ANR	1045377	UnaryOperationExpression	- 1		1045260	1					
ANR	1045378	UnaryOperator	-		1045260	0					
ANR	1045379	PrimaryExpression	1		1045260	1					
ANR	1045380	IfStatement	if ( cmd < 0 )		1045260	3					
ANR	1045381	Condition	cmd < 0	370:8:9412:9418	1045260	0	True				
ANR	1045382	RelationalExpression	cmd < 0		1045260	0		<			
ANR	1045383	Identifier	cmd		1045260	0					
ANR	1045384	PrimaryExpression	0		1045260	1					
ANR	1045385	CompoundStatement		18:17:343:343	1045260	1					
ANR	1045386	ExpressionStatement	"cout << ""\\nAmbiguous command "" << cmdStr << ""; matches:\\n"""	371:8:9431:9490	1045260	0	True				
ANR	1045387	ShiftExpression	"cout << ""\\nAmbiguous command "" << cmdStr << ""; matches:\\n"""		1045260	0		<<			
ANR	1045388	Identifier	cout		1045260	0					
ANR	1045389	ShiftExpression	"""\\nAmbiguous command "" << cmdStr << ""; matches:\\n"""		1045260	1		<<			
ANR	1045390	PrimaryExpression	"""\\nAmbiguous command """		1045260	0					
ANR	1045391	ShiftExpression	"cmdStr << ""; matches:\\n"""		1045260	1		<<			
ANR	1045392	Identifier	cmdStr		1045260	0					
ANR	1045393	PrimaryExpression	"""; matches:\\n"""		1045260	1					
ANR	1045394	ForStatement	for ( int i = _NO_CMD_ + 1 ; i < _LAST_COMMAND_ ; i ++ )		1045260	1					
ANR	1045395	ForInit	int i = _NO_CMD_ + 1 ;	372:13:9505:9524	1045260	0	True				
ANR	1045396	IdentifierDeclStatement	int i = _NO_CMD_ + 1 ;		1045260	0					
ANR	1045397	IdentifierDecl	i = _NO_CMD_ + 1		1045260	0					
ANR	1045398	IdentifierDeclType	int		1045260	0					
ANR	1045399	Identifier	i		1045260	1					
ANR	1045400	AssignmentExpression	i = _NO_CMD_ + 1		1045260	2		=			
ANR	1045401	Identifier	i		1045260	0					
ANR	1045402	AdditiveExpression	_NO_CMD_ + 1		1045260	1		+			
ANR	1045403	Identifier	_NO_CMD_		1045260	0					
ANR	1045404	PrimaryExpression	1		1045260	1					
ANR	1045405	Condition	i < _LAST_COMMAND_	372:34:9526:9543	1045260	1	True				
ANR	1045406	RelationalExpression	i < _LAST_COMMAND_		1045260	0		<			
ANR	1045407	Identifier	i		1045260	0					
ANR	1045408	Identifier	_LAST_COMMAND_		1045260	1					
ANR	1045409	PostIncDecOperationExpression	i ++	372:55:9547:9549	1045260	2	True				
ANR	1045410	Identifier	i		1045260	0					
ANR	1045411	IncDec	++		1045260	1					
ANR	1045412	CompoundStatement		20:61:475:475	1045260	3					
ANR	1045413	IfStatement	"if ( strncmp ( CommandWords [ i ] . c_str ( ) , cmdStr . c_str ( ) , len ) == 0 )"		1045260	0					
ANR	1045414	Condition	"strncmp ( CommandWords [ i ] . c_str ( ) , cmdStr . c_str ( ) , len ) == 0"	373:16:9571:9628	1045260	0	True				
ANR	1045415	EqualityExpression	"strncmp ( CommandWords [ i ] . c_str ( ) , cmdStr . c_str ( ) , len ) == 0"		1045260	0		==			
ANR	1045416	CallExpression	"strncmp ( CommandWords [ i ] . c_str ( ) , cmdStr . c_str ( ) , len )"		1045260	0					
ANR	1045417	Callee	strncmp		1045260	0					
ANR	1045418	Identifier	strncmp		1045260	0					
ANR	1045419	ArgumentList	CommandWords [ i ] . c_str ( )		1045260	1					
ANR	1045420	Argument	CommandWords [ i ] . c_str ( )		1045260	0					
ANR	1045421	CallExpression	CommandWords [ i ] . c_str ( )		1045260	0					
ANR	1045422	Callee	CommandWords [ i ] . c_str		1045260	0					
ANR	1045423	MemberAccess	CommandWords [ i ] . c_str		1045260	0					
ANR	1045424	ArrayIndexing	CommandWords [ i ]		1045260	0					
ANR	1045425	Identifier	CommandWords		1045260	0					
ANR	1045426	Identifier	i		1045260	1					
ANR	1045427	Identifier	c_str		1045260	1					
ANR	1045428	ArgumentList			1045260	1					
ANR	1045429	Argument	cmdStr . c_str ( )		1045260	1					
ANR	1045430	CallExpression	cmdStr . c_str ( )		1045260	0					
ANR	1045431	Callee	cmdStr . c_str		1045260	0					
ANR	1045432	MemberAccess	cmdStr . c_str		1045260	0					
ANR	1045433	Identifier	cmdStr		1045260	0					
ANR	1045434	Identifier	c_str		1045260	1					
ANR	1045435	ArgumentList			1045260	1					
ANR	1045436	Argument	len		1045260	2					
ANR	1045437	Identifier	len		1045260	0					
ANR	1045438	PrimaryExpression	0		1045260	1					
ANR	1045439	CompoundStatement		21:77:554:554	1045260	1					
ANR	1045440	ExpressionStatement	"cout << ""\\t"" << CommandWords [ i ] << ""\\n"""	374:16:9650:9689	1045260	0	True				
ANR	1045441	ShiftExpression	"cout << ""\\t"" << CommandWords [ i ] << ""\\n"""		1045260	0		<<			
ANR	1045442	Identifier	cout		1045260	0					
ANR	1045443	ShiftExpression	"""\\t"" << CommandWords [ i ] << ""\\n"""		1045260	1		<<			
ANR	1045444	PrimaryExpression	"""\\t"""		1045260	0					
ANR	1045445	ShiftExpression	"CommandWords [ i ] << ""\\n"""		1045260	1		<<			
ANR	1045446	ArrayIndexing	CommandWords [ i ]		1045260	0					
ANR	1045447	Identifier	CommandWords		1045260	0					
ANR	1045448	Identifier	i		1045260	1					
ANR	1045449	PrimaryExpression	"""\\n"""		1045260	1					
ANR	1045450	ElseStatement	else		1045260	0					
ANR	1045451	IfStatement	if ( cmd == 0 )		1045260	0					
ANR	1045452	Condition	cmd == 0	377:15:9730:9737	1045260	0	True				
ANR	1045453	EqualityExpression	cmd == 0		1045260	0		==			
ANR	1045454	Identifier	cmd		1045260	0					
ANR	1045455	PrimaryExpression	0		1045260	1					
ANR	1045456	CompoundStatement		25:25:662:662	1045260	1					
ANR	1045457	ExpressionStatement	"cout << ""\\nUnknown command "" << cmdStr << "" \\n"""	378:2:9744:9790	1045260	0	True				
ANR	1045458	ShiftExpression	"cout << ""\\nUnknown command "" << cmdStr << "" \\n"""		1045260	0		<<			
ANR	1045459	Identifier	cout		1045260	0					
ANR	1045460	ShiftExpression	"""\\nUnknown command "" << cmdStr << "" \\n"""		1045260	1		<<			
ANR	1045461	PrimaryExpression	"""\\nUnknown command """		1045260	0					
ANR	1045462	ShiftExpression	"cmdStr << "" \\n"""		1045260	1		<<			
ANR	1045463	Identifier	cmdStr		1045260	0					
ANR	1045464	PrimaryExpression	""" \\n"""		1045260	1					
ANR	1045465	ReturnStatement	return - 1 ;	379:2:9794:9803	1045260	1	True				
ANR	1045466	UnaryOperationExpression	- 1		1045260	0					
ANR	1045467	UnaryOperator	-		1045260	0					
ANR	1045468	PrimaryExpression	1		1045260	1					
ANR	1045469	ReturnStatement	return cmd ;	382:1:9810:9820	1045260	4	True				
ANR	1045470	Identifier	cmd		1045260	0					
ANR	1045471	ReturnType	int		1045260	1					
ANR	1045472	Identifier	findCommand		1045260	2					
ANR	1045473	ParameterList	string cmdStr		1045260	3					
ANR	1045474	Parameter	string cmdStr	352:13:9061:9073	1045260	0	True				
ANR	1045475	ParameterType	string		1045260	0					
ANR	1045476	Identifier	cmdStr		1045260	1					
ANR	1045477	CFGEntryNode	ENTRY		1045260		True				
ANR	1045478	CFGExitNode	EXIT		1045260		True				
ANR	1045479	Symbol	* CommandWords		1045260						
ANR	1045480	Symbol	cmdStr . c_str		1045260						
ANR	1045481	Symbol	tolower		1045260						
ANR	1045482	Symbol	cmdStr		1045260						
ANR	1045483	Symbol	i		1045260						
ANR	1045484	Symbol	CommandWords [ i ] . c_str		1045260						
ANR	1045485	Symbol	CommandWords		1045260						
ANR	1045486	Symbol	_LAST_COMMAND_		1045260						
ANR	1045487	Symbol	strncmp		1045260						
ANR	1045488	Symbol	* i		1045260						
ANR	1045489	Symbol	len		1045260						
ANR	1045490	Symbol	* cmdStr		1045260						
ANR	1045491	Symbol	_NO_CMD_		1045260						
ANR	1045492	Symbol	cmd		1045260						
ANR	1045493	Symbol	cmdStr . length		1045260						
