command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1897293	File	data/converged/CVE-2011-4930_htcondor/named_pipe_reader.unix.cpp								
ANR	1897294	Function	NamedPipeReader :: initialize	27:0:973:1327							
ANR	1897295	FunctionDef	NamedPipeReader :: initialize (const char * addr)		1897294	0					
ANR	1897296	CompoundStatement		29:0:1024:1327	1897294	0					
ANR	1897297	ExpressionStatement	ASSERT ( ! m_initialized )	30:1:1027:1049	1897294	0	True				
ANR	1897298	CallExpression	ASSERT ( ! m_initialized )		1897294	0					
ANR	1897299	Callee	ASSERT		1897294	0					
ANR	1897300	Identifier	ASSERT		1897294	0					
ANR	1897301	ArgumentList	! m_initialized		1897294	1					
ANR	1897302	Argument	! m_initialized		1897294	0					
ANR	1897303	UnaryOperationExpression	! m_initialized		1897294	0					
ANR	1897304	UnaryOperator	!		1897294	0					
ANR	1897305	Identifier	m_initialized		1897294	1					
ANR	1897306	ExpressionStatement	ASSERT ( addr != NULL )	32:1:1053:1073	1897294	1	True				
ANR	1897307	CallExpression	ASSERT ( addr != NULL )		1897294	0					
ANR	1897308	Callee	ASSERT		1897294	0					
ANR	1897309	Identifier	ASSERT		1897294	0					
ANR	1897310	ArgumentList	addr != NULL		1897294	1					
ANR	1897311	Argument	addr != NULL		1897294	0					
ANR	1897312	EqualityExpression	addr != NULL		1897294	0		!=			
ANR	1897313	Identifier	addr		1897294	0					
ANR	1897314	Identifier	NULL		1897294	1					
ANR	1897315	ExpressionStatement	m_addr = strdup ( addr )	33:1:1076:1097	1897294	2	True				
ANR	1897316	AssignmentExpression	m_addr = strdup ( addr )		1897294	0		=			
ANR	1897317	Identifier	m_addr		1897294	0					
ANR	1897318	CallExpression	strdup ( addr )		1897294	1					
ANR	1897319	Callee	strdup		1897294	0					
ANR	1897320	Identifier	strdup		1897294	0					
ANR	1897321	ArgumentList	addr		1897294	1					
ANR	1897322	Argument	addr		1897294	0					
ANR	1897323	Identifier	addr		1897294	0					
ANR	1897324	ExpressionStatement	ASSERT ( m_addr != NULL )	34:1:1100:1122	1897294	3	True				
ANR	1897325	CallExpression	ASSERT ( m_addr != NULL )		1897294	0					
ANR	1897326	Callee	ASSERT		1897294	0					
ANR	1897327	Identifier	ASSERT		1897294	0					
ANR	1897328	ArgumentList	m_addr != NULL		1897294	1					
ANR	1897329	Argument	m_addr != NULL		1897294	0					
ANR	1897330	EqualityExpression	m_addr != NULL		1897294	0		!=			
ANR	1897331	Identifier	m_addr		1897294	0					
ANR	1897332	Identifier	NULL		1897294	1					
ANR	1897333	IfStatement	"if ( ! named_pipe_create ( addr , m_pipe , m_dummy_pipe ) )"		1897294	4					
ANR	1897334	Condition	"! named_pipe_create ( addr , m_pipe , m_dummy_pipe )"	36:5:1130:1175	1897294	0	True				
ANR	1897335	UnaryOperationExpression	"! named_pipe_create ( addr , m_pipe , m_dummy_pipe )"		1897294	0					
ANR	1897336	UnaryOperator	!		1897294	0					
ANR	1897337	CallExpression	"named_pipe_create ( addr , m_pipe , m_dummy_pipe )"		1897294	1					
ANR	1897338	Callee	named_pipe_create		1897294	0					
ANR	1897339	Identifier	named_pipe_create		1897294	0					
ANR	1897340	ArgumentList	addr		1897294	1					
ANR	1897341	Argument	addr		1897294	0					
ANR	1897342	Identifier	addr		1897294	0					
ANR	1897343	Argument	m_pipe		1897294	1					
ANR	1897344	Identifier	m_pipe		1897294	0					
ANR	1897345	Argument	m_dummy_pipe		1897294	2					
ANR	1897346	Identifier	m_dummy_pipe		1897294	0					
ANR	1897347	CompoundStatement		8:53:153:153	1897294	1					
ANR	1897348	ExpressionStatement	"dprintf ( D_ALWAYS , ""failed to initialize named pipe at %s\\n"" , addr )"	37:2:1182:1268	1897294	0	True				
ANR	1897349	CallExpression	"dprintf ( D_ALWAYS , ""failed to initialize named pipe at %s\\n"" , addr )"		1897294	0					
ANR	1897350	Callee	dprintf		1897294	0					
ANR	1897351	Identifier	dprintf		1897294	0					
ANR	1897352	ArgumentList	D_ALWAYS		1897294	1					
ANR	1897353	Argument	D_ALWAYS		1897294	0					
ANR	1897354	Identifier	D_ALWAYS		1897294	0					
ANR	1897355	Argument	"""failed to initialize named pipe at %s\\n"""		1897294	1					
ANR	1897356	PrimaryExpression	"""failed to initialize named pipe at %s\\n"""		1897294	0					
ANR	1897357	Argument	addr		1897294	2					
ANR	1897358	Identifier	addr		1897294	0					
ANR	1897359	ReturnStatement	return false ;	40:2:1272:1284	1897294	1	True				
ANR	1897360	Identifier	false		1897294	0					
ANR	1897361	ExpressionStatement	m_initialized = true	43:1:1291:1311	1897294	5	True				
ANR	1897362	AssignmentExpression	m_initialized = true		1897294	0		=			
ANR	1897363	Identifier	m_initialized		1897294	0					
ANR	1897364	Identifier	true		1897294	1					
ANR	1897365	ReturnStatement	return true ;	44:1:1314:1325	1897294	6	True				
ANR	1897366	Identifier	true		1897294	0					
ANR	1897367	ReturnType	bool		1897294	1					
ANR	1897368	Identifier	NamedPipeReader :: initialize		1897294	2					
ANR	1897369	ParameterList	const char * addr		1897294	3					
ANR	1897370	Parameter	const char * addr	28:28:1006:1021	1897294	0	True				
ANR	1897371	ParameterType	const char *		1897294	0					
ANR	1897372	Identifier	addr		1897294	1					
ANR	1897373	CFGEntryNode	ENTRY		1897294		True				
ANR	1897374	CFGExitNode	EXIT		1897294		True				
ANR	1897375	Symbol	m_initialized		1897294						
ANR	1897376	Symbol	NULL		1897294						
ANR	1897377	Symbol	named_pipe_create		1897294						
ANR	1897378	Symbol	D_ALWAYS		1897294						
ANR	1897379	Symbol	false		1897294						
ANR	1897380	Symbol	true		1897294						
ANR	1897381	Symbol	strdup		1897294						
ANR	1897382	Symbol	m_addr		1897294						
ANR	1897383	Symbol	addr		1897294						
ANR	1897384	Symbol	m_dummy_pipe		1897294						
ANR	1897385	Symbol	m_pipe		1897294						
ANR	1897386	Function	NamedPipeReader :: ~NamedPipeReader	47:0:1330:1638							
ANR	1897387	FunctionDef	NamedPipeReader :: ~NamedPipeReader ()		1897386	0					
ANR	1897388	CompoundStatement		48:0:1366:1638	1897386	0					
ANR	1897389	IfStatement	if ( ! m_initialized )		1897386	0					
ANR	1897390	Condition	! m_initialized	51:5:1420:1433	1897386	0	True				
ANR	1897391	UnaryOperationExpression	! m_initialized		1897386	0					
ANR	1897392	UnaryOperator	!		1897386	0					
ANR	1897393	Identifier	m_initialized		1897386	1					
ANR	1897394	CompoundStatement		4:21:69:69	1897386	1					
ANR	1897395	ReturnStatement	return ;	52:2:1440:1446	1897386	0	True				
ANR	1897396	ExpressionStatement	close ( m_dummy_pipe )	57:1:1494:1513	1897386	1	True				
ANR	1897397	CallExpression	close ( m_dummy_pipe )		1897386	0					
ANR	1897398	Callee	close		1897386	0					
ANR	1897399	Identifier	close		1897386	0					
ANR	1897400	ArgumentList	m_dummy_pipe		1897386	1					
ANR	1897401	Argument	m_dummy_pipe		1897386	0					
ANR	1897402	Identifier	m_dummy_pipe		1897386	0					
ANR	1897403	ExpressionStatement	close ( m_pipe )	58:1:1516:1529	1897386	2	True				
ANR	1897404	CallExpression	close ( m_pipe )		1897386	0					
ANR	1897405	Callee	close		1897386	0					
ANR	1897406	Identifier	close		1897386	0					
ANR	1897407	ArgumentList	m_pipe		1897386	1					
ANR	1897408	Argument	m_pipe		1897386	0					
ANR	1897409	Identifier	m_pipe		1897386	0					
ANR	1897410	ExpressionStatement	unlink ( m_addr )	62:1:1574:1588	1897386	3	True				
ANR	1897411	CallExpression	unlink ( m_addr )		1897386	0					
ANR	1897412	Callee	unlink		1897386	0					
ANR	1897413	Identifier	unlink		1897386	0					
ANR	1897414	ArgumentList	m_addr		1897386	1					
ANR	1897415	Argument	m_addr		1897386	0					
ANR	1897416	Identifier	m_addr		1897386	0					
ANR	1897417	ExpressionStatement	free ( m_addr )	66:1:1624:1636	1897386	4	True				
ANR	1897418	CallExpression	free ( m_addr )		1897386	0					
ANR	1897419	Callee	free		1897386	0					
ANR	1897420	Identifier	free		1897386	0					
ANR	1897421	ArgumentList	m_addr		1897386	1					
ANR	1897422	Argument	m_addr		1897386	0					
ANR	1897423	Identifier	m_addr		1897386	0					
ANR	1897424	Identifier	NamedPipeReader :: ~NamedPipeReader		1897386	1					
ANR	1897425	ParameterList			1897386	2					
ANR	1897426	CFGEntryNode	ENTRY		1897386		True				
ANR	1897427	CFGExitNode	EXIT		1897386		True				
ANR	1897428	Symbol	m_initialized		1897386						
ANR	1897429	Symbol	m_addr		1897386						
ANR	1897430	Symbol	m_dummy_pipe		1897386						
ANR	1897431	Symbol	m_pipe		1897386						
ANR	1897432	Function	NamedPipeReader :: get_path	69:0:1641:1717							
ANR	1897433	FunctionDef	NamedPipeReader :: get_path ()		1897432	0					
ANR	1897434	CompoundStatement		71:0:1675:1717	1897432	0					
ANR	1897435	ExpressionStatement	ASSERT ( m_initialized )	72:1:1678:1699	1897432	0	True				
ANR	1897436	CallExpression	ASSERT ( m_initialized )		1897432	0					
ANR	1897437	Callee	ASSERT		1897432	0					
ANR	1897438	Identifier	ASSERT		1897432	0					
ANR	1897439	ArgumentList	m_initialized		1897432	1					
ANR	1897440	Argument	m_initialized		1897432	0					
ANR	1897441	Identifier	m_initialized		1897432	0					
ANR	1897442	ReturnStatement	return m_addr ;	73:1:1702:1715	1897432	1	True				
ANR	1897443	Identifier	m_addr		1897432	0					
ANR	1897444	ReturnType	char *		1897432	1					
ANR	1897445	Identifier	NamedPipeReader :: get_path		1897432	2					
ANR	1897446	ParameterList			1897432	3					
ANR	1897447	CFGEntryNode	ENTRY		1897432		True				
ANR	1897448	CFGExitNode	EXIT		1897432		True				
ANR	1897449	Symbol	m_initialized		1897432						
ANR	1897450	Symbol	m_addr		1897432						
ANR	1897451	Function	NamedPipeReader :: set_watchdog	76:0:1720:1834							
ANR	1897452	FunctionDef	NamedPipeReader :: set_watchdog (NamedPipeWatchdog * watchdog)		1897451	0					
ANR	1897453	CompoundStatement		78:0:1784:1834	1897451	0					
ANR	1897454	ExpressionStatement	ASSERT ( m_initialized )	79:1:1787:1808	1897451	0	True				
ANR	1897455	CallExpression	ASSERT ( m_initialized )		1897451	0					
ANR	1897456	Callee	ASSERT		1897451	0					
ANR	1897457	Identifier	ASSERT		1897451	0					
ANR	1897458	ArgumentList	m_initialized		1897451	1					
ANR	1897459	Argument	m_initialized		1897451	0					
ANR	1897460	Identifier	m_initialized		1897451	0					
ANR	1897461	ExpressionStatement	m_watchdog = watchdog	80:1:1811:1832	1897451	1	True				
ANR	1897462	AssignmentExpression	m_watchdog = watchdog		1897451	0		=			
ANR	1897463	Identifier	m_watchdog		1897451	0					
ANR	1897464	Identifier	watchdog		1897451	1					
ANR	1897465	ReturnType	void		1897451	1					
ANR	1897466	Identifier	NamedPipeReader :: set_watchdog		1897451	2					
ANR	1897467	ParameterList	NamedPipeWatchdog * watchdog		1897451	3					
ANR	1897468	Parameter	NamedPipeWatchdog * watchdog	77:30:1755:1781	1897451	0	True				
ANR	1897469	ParameterType	NamedPipeWatchdog *		1897451	0					
ANR	1897470	Identifier	watchdog		1897451	1					
ANR	1897471	CFGEntryNode	ENTRY		1897451		True				
ANR	1897472	CFGExitNode	EXIT		1897451		True				
ANR	1897473	Symbol	m_initialized		1897451						
ANR	1897474	Symbol	watchdog		1897451						
ANR	1897475	Symbol	m_watchdog		1897451						
ANR	1897476	Function	NamedPipeReader :: read_data	83:0:1837:3560							
ANR	1897477	FunctionDef	"NamedPipeReader :: read_data (void * buffer , int len)"		1897476	0					
ANR	1897478	CompoundStatement		85:0:1892:3560	1897476	0					
ANR	1897479	ExpressionStatement	ASSERT ( m_initialized )	86:1:1895:1916	1897476	0	True				
ANR	1897480	CallExpression	ASSERT ( m_initialized )		1897476	0					
ANR	1897481	Callee	ASSERT		1897476	0					
ANR	1897482	Identifier	ASSERT		1897476	0					
ANR	1897483	ArgumentList	m_initialized		1897476	1					
ANR	1897484	Argument	m_initialized		1897476	0					
ANR	1897485	Identifier	m_initialized		1897476	0					
ANR	1897486	ExpressionStatement	ASSERT ( len <= PIPE_BUF )	92:1:2077:2100	1897476	1	True				
ANR	1897487	CallExpression	ASSERT ( len <= PIPE_BUF )		1897476	0					
ANR	1897488	Callee	ASSERT		1897476	0					
ANR	1897489	Identifier	ASSERT		1897476	0					
ANR	1897490	ArgumentList	len <= PIPE_BUF		1897476	1					
ANR	1897491	Argument	len <= PIPE_BUF		1897476	0					
ANR	1897492	RelationalExpression	len <= PIPE_BUF		1897476	0		<=			
ANR	1897493	Identifier	len		1897476	0					
ANR	1897494	Identifier	PIPE_BUF		1897476	1					
ANR	1897495	IfStatement	if ( m_watchdog != NULL )		1897476	2					
ANR	1897496	Condition	m_watchdog != NULL	102:5:2523:2540	1897476	0	True				
ANR	1897497	EqualityExpression	m_watchdog != NULL		1897476	0		!=			
ANR	1897498	Identifier	m_watchdog		1897476	0					
ANR	1897499	Identifier	NULL		1897476	1					
ANR	1897500	CompoundStatement		25:2:895:955	1897476	1					
ANR	1897501	IdentifierDeclStatement	fd_set read_fd_set ;	103:2:2547:2565	1897476	0	True				
ANR	1897502	IdentifierDecl	read_fd_set		1897476	0					
ANR	1897503	IdentifierDeclType	fd_set		1897476	0					
ANR	1897504	Identifier	read_fd_set		1897476	1					
ANR	1897505	ExpressionStatement	FD_ZERO ( & read_fd_set )	104:2:2569:2590	1897476	1	True				
ANR	1897506	CallExpression	FD_ZERO ( & read_fd_set )		1897476	0					
ANR	1897507	Callee	FD_ZERO		1897476	0					
ANR	1897508	Identifier	FD_ZERO		1897476	0					
ANR	1897509	ArgumentList	& read_fd_set		1897476	1					
ANR	1897510	Argument	& read_fd_set		1897476	0					
ANR	1897511	UnaryOperationExpression	& read_fd_set		1897476	0					
ANR	1897512	UnaryOperator	&		1897476	0					
ANR	1897513	Identifier	read_fd_set		1897476	1					
ANR	1897514	ExpressionStatement	"FD_SET ( m_pipe , & read_fd_set )"	105:2:2594:2622	1897476	2	True				
ANR	1897515	CallExpression	"FD_SET ( m_pipe , & read_fd_set )"		1897476	0					
ANR	1897516	Callee	FD_SET		1897476	0					
ANR	1897517	Identifier	FD_SET		1897476	0					
ANR	1897518	ArgumentList	m_pipe		1897476	1					
ANR	1897519	Argument	m_pipe		1897476	0					
ANR	1897520	Identifier	m_pipe		1897476	0					
ANR	1897521	Argument	& read_fd_set		1897476	1					
ANR	1897522	UnaryOperationExpression	& read_fd_set		1897476	0					
ANR	1897523	UnaryOperator	&		1897476	0					
ANR	1897524	Identifier	read_fd_set		1897476	1					
ANR	1897525	IdentifierDeclStatement	int watchdog_pipe = m_watchdog -> get_file_descriptor ( ) ;	106:2:2626:2679	1897476	3	True				
ANR	1897526	IdentifierDecl	watchdog_pipe = m_watchdog -> get_file_descriptor ( )		1897476	0					
ANR	1897527	IdentifierDeclType	int		1897476	0					
ANR	1897528	Identifier	watchdog_pipe		1897476	1					
ANR	1897529	AssignmentExpression	watchdog_pipe = m_watchdog -> get_file_descriptor ( )		1897476	2		=			
ANR	1897530	Identifier	watchdog_pipe		1897476	0					
ANR	1897531	CallExpression	m_watchdog -> get_file_descriptor ( )		1897476	1					
ANR	1897532	Callee	m_watchdog -> get_file_descriptor		1897476	0					
ANR	1897533	PtrMemberAccess	m_watchdog -> get_file_descriptor		1897476	0					
ANR	1897534	Identifier	m_watchdog		1897476	0					
ANR	1897535	Identifier	get_file_descriptor		1897476	1					
ANR	1897536	ArgumentList			1897476	1					
ANR	1897537	ExpressionStatement	"FD_SET ( watchdog_pipe , & read_fd_set )"	107:2:2683:2718	1897476	4	True				
ANR	1897538	CallExpression	"FD_SET ( watchdog_pipe , & read_fd_set )"		1897476	0					
ANR	1897539	Callee	FD_SET		1897476	0					
ANR	1897540	Identifier	FD_SET		1897476	0					
ANR	1897541	ArgumentList	watchdog_pipe		1897476	1					
ANR	1897542	Argument	watchdog_pipe		1897476	0					
ANR	1897543	Identifier	watchdog_pipe		1897476	0					
ANR	1897544	Argument	& read_fd_set		1897476	1					
ANR	1897545	UnaryOperationExpression	& read_fd_set		1897476	0					
ANR	1897546	UnaryOperator	&		1897476	0					
ANR	1897547	Identifier	read_fd_set		1897476	1					
ANR	1897548	IdentifierDeclStatement	int max_fd = ( m_pipe > watchdog_pipe ) ? m_pipe : watchdog_pipe ;	108:2:2722:2784	1897476	5	True				
ANR	1897549	IdentifierDecl	max_fd = ( m_pipe > watchdog_pipe ) ? m_pipe : watchdog_pipe		1897476	0					
ANR	1897550	IdentifierDeclType	int		1897476	0					
ANR	1897551	Identifier	max_fd		1897476	1					
ANR	1897552	AssignmentExpression	max_fd = ( m_pipe > watchdog_pipe ) ? m_pipe : watchdog_pipe		1897476	2		=			
ANR	1897553	Identifier	max_fd		1897476	0					
ANR	1897554	ConditionalExpression	( m_pipe > watchdog_pipe ) ? m_pipe : watchdog_pipe		1897476	1					
ANR	1897555	Condition	m_pipe > watchdog_pipe		1897476	0					
ANR	1897556	RelationalExpression	m_pipe > watchdog_pipe		1897476	0		>			
ANR	1897557	Identifier	m_pipe		1897476	0					
ANR	1897558	Identifier	watchdog_pipe		1897476	1					
ANR	1897559	Identifier	m_pipe		1897476	1					
ANR	1897560	Identifier	watchdog_pipe		1897476	2					
ANR	1897561	IdentifierDeclStatement	"int ret = select ( max_fd + 1 , & read_fd_set , NULL , NULL , NULL ) ;"	109:2:2788:2848	1897476	6	True				
ANR	1897562	IdentifierDecl	"ret = select ( max_fd + 1 , & read_fd_set , NULL , NULL , NULL )"		1897476	0					
ANR	1897563	IdentifierDeclType	int		1897476	0					
ANR	1897564	Identifier	ret		1897476	1					
ANR	1897565	AssignmentExpression	"ret = select ( max_fd + 1 , & read_fd_set , NULL , NULL , NULL )"		1897476	2		=			
ANR	1897566	Identifier	ret		1897476	0					
ANR	1897567	CallExpression	"select ( max_fd + 1 , & read_fd_set , NULL , NULL , NULL )"		1897476	1					
ANR	1897568	Callee	select		1897476	0					
ANR	1897569	Identifier	select		1897476	0					
ANR	1897570	ArgumentList	max_fd + 1		1897476	1					
ANR	1897571	Argument	max_fd + 1		1897476	0					
ANR	1897572	AdditiveExpression	max_fd + 1		1897476	0		+			
ANR	1897573	Identifier	max_fd		1897476	0					
ANR	1897574	PrimaryExpression	1		1897476	1					
ANR	1897575	Argument	& read_fd_set		1897476	1					
ANR	1897576	UnaryOperationExpression	& read_fd_set		1897476	0					
ANR	1897577	UnaryOperator	&		1897476	0					
ANR	1897578	Identifier	read_fd_set		1897476	1					
ANR	1897579	Argument	NULL		1897476	2					
ANR	1897580	Identifier	NULL		1897476	0					
ANR	1897581	Argument	NULL		1897476	3					
ANR	1897582	Identifier	NULL		1897476	0					
ANR	1897583	Argument	NULL		1897476	4					
ANR	1897584	Identifier	NULL		1897476	0					
ANR	1897585	IfStatement	if ( ret == - 1 )		1897476	7					
ANR	1897586	Condition	ret == - 1	110:6:2856:2864	1897476	0	True				
ANR	1897587	EqualityExpression	ret == - 1		1897476	0		==			
ANR	1897588	Identifier	ret		1897476	0					
ANR	1897589	UnaryOperationExpression	- 1		1897476	1					
ANR	1897590	UnaryOperator	-		1897476	0					
ANR	1897591	PrimaryExpression	1		1897476	1					
ANR	1897592	CompoundStatement		26:17:974:974	1897476	1					
ANR	1897593	ExpressionStatement	"dprintf ( D_ALWAYS , ""select error: %s (%d)\\n"" , strerror ( errno ) , errno )"	111:3:2872:2973	1897476	0	True				
ANR	1897594	CallExpression	"dprintf ( D_ALWAYS , ""select error: %s (%d)\\n"" , strerror ( errno ) , errno )"		1897476	0					
ANR	1897595	Callee	dprintf		1897476	0					
ANR	1897596	Identifier	dprintf		1897476	0					
ANR	1897597	ArgumentList	D_ALWAYS		1897476	1					
ANR	1897598	Argument	D_ALWAYS		1897476	0					
ANR	1897599	Identifier	D_ALWAYS		1897476	0					
ANR	1897600	Argument	"""select error: %s (%d)\\n"""		1897476	1					
ANR	1897601	PrimaryExpression	"""select error: %s (%d)\\n"""		1897476	0					
ANR	1897602	Argument	strerror ( errno )		1897476	2					
ANR	1897603	CallExpression	strerror ( errno )		1897476	0					
ANR	1897604	Callee	strerror		1897476	0					
ANR	1897605	Identifier	strerror		1897476	0					
ANR	1897606	ArgumentList	errno		1897476	1					
ANR	1897607	Argument	errno		1897476	0					
ANR	1897608	Identifier	errno		1897476	0					
ANR	1897609	Argument	errno		1897476	3					
ANR	1897610	Identifier	errno		1897476	0					
ANR	1897611	ReturnStatement	return false ;	115:3:2978:2990	1897476	1	True				
ANR	1897612	Identifier	false		1897476	0					
ANR	1897613	IfStatement	"if ( FD_ISSET ( watchdog_pipe , & read_fd_set ) && ! FD_ISSET ( m_pipe , & read_fd_set ) )"		1897476	8					
ANR	1897614	Condition	"FD_ISSET ( watchdog_pipe , & read_fd_set ) && ! FD_ISSET ( m_pipe , & read_fd_set )"	117:6:3002:3079	1897476	0	True				
ANR	1897615	AndExpression	"FD_ISSET ( watchdog_pipe , & read_fd_set ) && ! FD_ISSET ( m_pipe , & read_fd_set )"		1897476	0		&&			
ANR	1897616	CallExpression	"FD_ISSET ( watchdog_pipe , & read_fd_set )"		1897476	0					
ANR	1897617	Callee	FD_ISSET		1897476	0					
ANR	1897618	Identifier	FD_ISSET		1897476	0					
ANR	1897619	ArgumentList	watchdog_pipe		1897476	1					
ANR	1897620	Argument	watchdog_pipe		1897476	0					
ANR	1897621	Identifier	watchdog_pipe		1897476	0					
ANR	1897622	Argument	& read_fd_set		1897476	1					
ANR	1897623	UnaryOperationExpression	& read_fd_set		1897476	0					
ANR	1897624	UnaryOperator	&		1897476	0					
ANR	1897625	Identifier	read_fd_set		1897476	1					
ANR	1897626	UnaryOperationExpression	"! FD_ISSET ( m_pipe , & read_fd_set )"		1897476	1					
ANR	1897627	UnaryOperator	!		1897476	0					
ANR	1897628	CallExpression	"FD_ISSET ( m_pipe , & read_fd_set )"		1897476	1					
ANR	1897629	Callee	FD_ISSET		1897476	0					
ANR	1897630	Identifier	FD_ISSET		1897476	0					
ANR	1897631	ArgumentList	m_pipe		1897476	1					
ANR	1897632	Argument	m_pipe		1897476	0					
ANR	1897633	Identifier	m_pipe		1897476	0					
ANR	1897634	Argument	& read_fd_set		1897476	1					
ANR	1897635	UnaryOperationExpression	& read_fd_set		1897476	0					
ANR	1897636	UnaryOperator	&		1897476	0					
ANR	1897637	Identifier	read_fd_set		1897476	1					
ANR	1897638	CompoundStatement		35:4:1192:1192	1897476	1					
ANR	1897639	Statement	dprintf	120:3:3090:3096	1897476	0	True				
ANR	1897640	Statement	(	120:10:3097:3097	1897476	1	True				
ANR	1897641	Statement	D_ALWAYS	120:11:3098:3105	1897476	2	True				
ANR	1897642	Statement	","	120:19:3106:3106	1897476	3	True				
ANR	1897643	Statement	"""error reading from named pipe: """	121:11:3119:3151	1897476	4	True				
ANR	1897644	Statement	"""watchdog pipe has closed\\n"""	122:15:3168:3195	1897476	5	True				
ANR	1897645	Statement	)	122:43:3196:3196	1897476	6	True				
ANR	1897646	ExpressionStatement		122:44:3197:3197	1897476	7	True				
ANR	1897647	ReturnStatement	return false ;	123:3:3202:3214	1897476	8	True				
ANR	1897648	Identifier	false		1897476	0					
ANR	1897649	IdentifierDeclStatement	"int bytes = read ( m_pipe , buffer , len ) ;"	127:1:3225:3262	1897476	3	True				
ANR	1897650	IdentifierDecl	"bytes = read ( m_pipe , buffer , len )"		1897476	0					
ANR	1897651	IdentifierDeclType	int		1897476	0					
ANR	1897652	Identifier	bytes		1897476	1					
ANR	1897653	AssignmentExpression	"bytes = read ( m_pipe , buffer , len )"		1897476	2		=			
ANR	1897654	Identifier	bytes		1897476	0					
ANR	1897655	CallExpression	"read ( m_pipe , buffer , len )"		1897476	1					
ANR	1897656	Callee	read		1897476	0					
ANR	1897657	Identifier	read		1897476	0					
ANR	1897658	ArgumentList	m_pipe		1897476	1					
ANR	1897659	Argument	m_pipe		1897476	0					
ANR	1897660	Identifier	m_pipe		1897476	0					
ANR	1897661	Argument	buffer		1897476	1					
ANR	1897662	Identifier	buffer		1897476	0					
ANR	1897663	Argument	len		1897476	2					
ANR	1897664	Identifier	len		1897476	0					
ANR	1897665	IfStatement	if ( bytes != len )		1897476	4					
ANR	1897666	Condition	bytes != len	128:5:3269:3280	1897476	0	True				
ANR	1897667	EqualityExpression	bytes != len		1897476	0		!=			
ANR	1897668	Identifier	bytes		1897476	0					
ANR	1897669	Identifier	len		1897476	1					
ANR	1897670	CompoundStatement		44:19:1390:1390	1897476	1					
ANR	1897671	IfStatement	if ( bytes == - 1 )		1897476	0					
ANR	1897672	Condition	bytes == - 1	129:6:3291:3301	1897476	0	True				
ANR	1897673	EqualityExpression	bytes == - 1		1897476	0		==			
ANR	1897674	Identifier	bytes		1897476	0					
ANR	1897675	UnaryOperationExpression	- 1		1897476	1					
ANR	1897676	UnaryOperator	-		1897476	0					
ANR	1897677	PrimaryExpression	1		1897476	1					
ANR	1897678	CompoundStatement		45:19:1411:1411	1897476	1					
ANR	1897679	ExpressionStatement	"dprintf ( D_ALWAYS , ""read error: %s (%d)\\n"" , strerror ( errno ) , errno )"	130:3:3309:3408	1897476	0	True				
ANR	1897680	CallExpression	"dprintf ( D_ALWAYS , ""read error: %s (%d)\\n"" , strerror ( errno ) , errno )"		1897476	0					
ANR	1897681	Callee	dprintf		1897476	0					
ANR	1897682	Identifier	dprintf		1897476	0					
ANR	1897683	ArgumentList	D_ALWAYS		1897476	1					
ANR	1897684	Argument	D_ALWAYS		1897476	0					
ANR	1897685	Identifier	D_ALWAYS		1897476	0					
ANR	1897686	Argument	"""read error: %s (%d)\\n"""		1897476	1					
ANR	1897687	PrimaryExpression	"""read error: %s (%d)\\n"""		1897476	0					
ANR	1897688	Argument	strerror ( errno )		1897476	2					
ANR	1897689	CallExpression	strerror ( errno )		1897476	0					
ANR	1897690	Callee	strerror		1897476	0					
ANR	1897691	Identifier	strerror		1897476	0					
ANR	1897692	ArgumentList	errno		1897476	1					
ANR	1897693	Argument	errno		1897476	0					
ANR	1897694	Identifier	errno		1897476	0					
ANR	1897695	Argument	errno		1897476	3					
ANR	1897696	Identifier	errno		1897476	0					
ANR	1897697	ElseStatement	else		1897476	0					
ANR	1897698	CompoundStatement		51:7:1528:1528	1897476	0					
ANR	1897699	ExpressionStatement	"dprintf ( D_ALWAYS , ""error: read %d of %d bytes\\n"" , bytes , len )"	136:3:3426:3520	1897476	0	True				
ANR	1897700	CallExpression	"dprintf ( D_ALWAYS , ""error: read %d of %d bytes\\n"" , bytes , len )"		1897476	0					
ANR	1897701	Callee	dprintf		1897476	0					
ANR	1897702	Identifier	dprintf		1897476	0					
ANR	1897703	ArgumentList	D_ALWAYS		1897476	1					
ANR	1897704	Argument	D_ALWAYS		1897476	0					
ANR	1897705	Identifier	D_ALWAYS		1897476	0					
ANR	1897706	Argument	"""error: read %d of %d bytes\\n"""		1897476	1					
ANR	1897707	PrimaryExpression	"""error: read %d of %d bytes\\n"""		1897476	0					
ANR	1897708	Argument	bytes		1897476	2					
ANR	1897709	Identifier	bytes		1897476	0					
ANR	1897710	Argument	len		1897476	3					
ANR	1897711	Identifier	len		1897476	0					
ANR	1897712	ReturnStatement	return false ;	141:2:3528:3540	1897476	1	True				
ANR	1897713	Identifier	false		1897476	0					
ANR	1897714	ReturnStatement	return true ;	144:1:3547:3558	1897476	5	True				
ANR	1897715	Identifier	true		1897476	0					
ANR	1897716	ReturnType	bool		1897476	1					
ANR	1897717	Identifier	NamedPipeReader :: read_data		1897476	2					
ANR	1897718	ParameterList	"void * buffer , int len"		1897476	3					
ANR	1897719	Parameter	void * buffer	84:27:1869:1880	1897476	0	True				
ANR	1897720	ParameterType	void *		1897476	0					
ANR	1897721	Identifier	buffer		1897476	1					
ANR	1897722	Parameter	int len	84:41:1883:1889	1897476	1	True				
ANR	1897723	ParameterType	int		1897476	0					
ANR	1897724	Identifier	len		1897476	1					
ANR	1897725	CFGEntryNode	ENTRY		1897476		True				
ANR	1897726	CFGExitNode	EXIT		1897476		True				
ANR	1897727	Symbol	ret		1897476						
ANR	1897728	Symbol	m_initialized		1897476						
ANR	1897729	Symbol	errno		1897476						
ANR	1897730	Symbol	PIPE_BUF		1897476						
ANR	1897731	Symbol	NULL		1897476						
ANR	1897732	Symbol	select		1897476						
ANR	1897733	Symbol	read		1897476						
ANR	1897734	Symbol	watchdog_pipe		1897476						
ANR	1897735	Symbol	D_ALWAYS		1897476						
ANR	1897736	Symbol	false		1897476						
ANR	1897737	Symbol	read_fd_set		1897476						
ANR	1897738	Symbol	m_pipe		1897476						
ANR	1897739	Symbol	strerror		1897476						
ANR	1897740	Symbol	* m_watchdog		1897476						
ANR	1897741	Symbol	m_watchdog -> get_file_descriptor		1897476						
ANR	1897742	Symbol	len		1897476						
ANR	1897743	Symbol	FD_ISSET		1897476						
ANR	1897744	Symbol	max_fd		1897476						
ANR	1897745	Symbol	bytes		1897476						
ANR	1897746	Symbol	m_watchdog		1897476						
ANR	1897747	Symbol	& read_fd_set		1897476						
ANR	1897748	Symbol	true		1897476						
ANR	1897749	Symbol	buffer		1897476						
ANR	1897750	Function	NamedPipeReader :: poll	147:0:3563:4604							
ANR	1897751	FunctionDef	"NamedPipeReader :: poll (int timeout , bool & ready)"		1897750	0					
ANR	1897752	CompoundStatement		149:0:3616:4604	1897750	0					
ANR	1897753	ExpressionStatement	ASSERT ( m_initialized )	154:1:3795:3816	1897750	0	True				
ANR	1897754	CallExpression	ASSERT ( m_initialized )		1897750	0					
ANR	1897755	Callee	ASSERT		1897750	0					
ANR	1897756	Identifier	ASSERT		1897750	0					
ANR	1897757	ArgumentList	m_initialized		1897750	1					
ANR	1897758	Argument	m_initialized		1897750	0					
ANR	1897759	Identifier	m_initialized		1897750	0					
ANR	1897760	ExpressionStatement	ASSERT ( timeout >= - 1 )	156:1:3820:3841	1897750	1	True				
ANR	1897761	CallExpression	ASSERT ( timeout >= - 1 )		1897750	0					
ANR	1897762	Callee	ASSERT		1897750	0					
ANR	1897763	Identifier	ASSERT		1897750	0					
ANR	1897764	ArgumentList	timeout >= - 1		1897750	1					
ANR	1897765	Argument	timeout >= - 1		1897750	0					
ANR	1897766	RelationalExpression	timeout >= - 1		1897750	0		>=			
ANR	1897767	Identifier	timeout		1897750	0					
ANR	1897768	UnaryOperationExpression	- 1		1897750	1					
ANR	1897769	UnaryOperator	-		1897750	0					
ANR	1897770	PrimaryExpression	1		1897750	1					
ANR	1897771	IdentifierDeclStatement	fd_set read_fd_set ;	158:1:3845:3863	1897750	2	True				
ANR	1897772	IdentifierDecl	read_fd_set		1897750	0					
ANR	1897773	IdentifierDeclType	fd_set		1897750	0					
ANR	1897774	Identifier	read_fd_set		1897750	1					
ANR	1897775	ExpressionStatement	FD_ZERO ( & read_fd_set )	159:1:3866:3887	1897750	3	True				
ANR	1897776	CallExpression	FD_ZERO ( & read_fd_set )		1897750	0					
ANR	1897777	Callee	FD_ZERO		1897750	0					
ANR	1897778	Identifier	FD_ZERO		1897750	0					
ANR	1897779	ArgumentList	& read_fd_set		1897750	1					
ANR	1897780	Argument	& read_fd_set		1897750	0					
ANR	1897781	UnaryOperationExpression	& read_fd_set		1897750	0					
ANR	1897782	UnaryOperator	&		1897750	0					
ANR	1897783	Identifier	read_fd_set		1897750	1					
ANR	1897784	ExpressionStatement	"FD_SET ( m_pipe , & read_fd_set )"	160:1:3890:3918	1897750	4	True				
ANR	1897785	CallExpression	"FD_SET ( m_pipe , & read_fd_set )"		1897750	0					
ANR	1897786	Callee	FD_SET		1897750	0					
ANR	1897787	Identifier	FD_SET		1897750	0					
ANR	1897788	ArgumentList	m_pipe		1897750	1					
ANR	1897789	Argument	m_pipe		1897750	0					
ANR	1897790	Identifier	m_pipe		1897750	0					
ANR	1897791	Argument	& read_fd_set		1897750	1					
ANR	1897792	UnaryOperationExpression	& read_fd_set		1897750	0					
ANR	1897793	UnaryOperator	&		1897750	0					
ANR	1897794	Identifier	read_fd_set		1897750	1					
ANR	1897795	IdentifierDeclStatement	struct timeval * tv_ptr = NULL ;	162:1:3922:3951	1897750	5	True				
ANR	1897796	IdentifierDecl	* tv_ptr = NULL		1897750	0					
ANR	1897797	IdentifierDeclType	struct timeval *		1897750	0					
ANR	1897798	Identifier	tv_ptr		1897750	1					
ANR	1897799	AssignmentExpression	* tv_ptr = NULL		1897750	2		=			
ANR	1897800	Identifier	NULL		1897750	0					
ANR	1897801	Identifier	NULL		1897750	1					
ANR	1897802	IdentifierDeclStatement	struct timeval tv ;	163:1:3954:3971	1897750	6	True				
ANR	1897803	IdentifierDecl	tv		1897750	0					
ANR	1897804	IdentifierDeclType	struct timeval		1897750	0					
ANR	1897805	Identifier	tv		1897750	1					
ANR	1897806	IfStatement	if ( timeout != - 1 )		1897750	7					
ANR	1897807	Condition	timeout != - 1	164:5:3978:3990	1897750	0	True				
ANR	1897808	EqualityExpression	timeout != - 1		1897750	0		!=			
ANR	1897809	Identifier	timeout		1897750	0					
ANR	1897810	UnaryOperationExpression	- 1		1897750	1					
ANR	1897811	UnaryOperator	-		1897750	0					
ANR	1897812	PrimaryExpression	1		1897750	1					
ANR	1897813	CompoundStatement		16:20:376:376	1897750	1					
ANR	1897814	ExpressionStatement	tv . tv_sec = timeout	165:2:3997:4016	1897750	0	True				
ANR	1897815	AssignmentExpression	tv . tv_sec = timeout		1897750	0		=			
ANR	1897816	MemberAccess	tv . tv_sec		1897750	0					
ANR	1897817	Identifier	tv		1897750	0					
ANR	1897818	Identifier	tv_sec		1897750	1					
ANR	1897819	Identifier	timeout		1897750	1					
ANR	1897820	ExpressionStatement	tv . tv_usec = 0	166:2:4020:4034	1897750	1	True				
ANR	1897821	AssignmentExpression	tv . tv_usec = 0		1897750	0		=			
ANR	1897822	MemberAccess	tv . tv_usec		1897750	0					
ANR	1897823	Identifier	tv		1897750	0					
ANR	1897824	Identifier	tv_usec		1897750	1					
ANR	1897825	PrimaryExpression	0		1897750	1					
ANR	1897826	ExpressionStatement	tv_ptr = & tv	167:2:4038:4050	1897750	2	True				
ANR	1897827	AssignmentExpression	tv_ptr = & tv		1897750	0		=			
ANR	1897828	Identifier	tv_ptr		1897750	0					
ANR	1897829	UnaryOperationExpression	& tv		1897750	1					
ANR	1897830	UnaryOperator	&		1897750	0					
ANR	1897831	Identifier	tv		1897750	1					
ANR	1897832	IdentifierDeclStatement	"int ret = select ( m_pipe + 1 , & read_fd_set , NULL , NULL , tv_ptr ) ;"	170:1:4057:4119	1897750	8	True				
ANR	1897833	IdentifierDecl	"ret = select ( m_pipe + 1 , & read_fd_set , NULL , NULL , tv_ptr )"		1897750	0					
ANR	1897834	IdentifierDeclType	int		1897750	0					
ANR	1897835	Identifier	ret		1897750	1					
ANR	1897836	AssignmentExpression	"ret = select ( m_pipe + 1 , & read_fd_set , NULL , NULL , tv_ptr )"		1897750	2		=			
ANR	1897837	Identifier	ret		1897750	0					
ANR	1897838	CallExpression	"select ( m_pipe + 1 , & read_fd_set , NULL , NULL , tv_ptr )"		1897750	1					
ANR	1897839	Callee	select		1897750	0					
ANR	1897840	Identifier	select		1897750	0					
ANR	1897841	ArgumentList	m_pipe + 1		1897750	1					
ANR	1897842	Argument	m_pipe + 1		1897750	0					
ANR	1897843	AdditiveExpression	m_pipe + 1		1897750	0		+			
ANR	1897844	Identifier	m_pipe		1897750	0					
ANR	1897845	PrimaryExpression	1		1897750	1					
ANR	1897846	Argument	& read_fd_set		1897750	1					
ANR	1897847	UnaryOperationExpression	& read_fd_set		1897750	0					
ANR	1897848	UnaryOperator	&		1897750	0					
ANR	1897849	Identifier	read_fd_set		1897750	1					
ANR	1897850	Argument	NULL		1897750	2					
ANR	1897851	Identifier	NULL		1897750	0					
ANR	1897852	Argument	NULL		1897750	3					
ANR	1897853	Identifier	NULL		1897750	0					
ANR	1897854	Argument	tv_ptr		1897750	4					
ANR	1897855	Identifier	tv_ptr		1897750	0					
ANR	1897856	IfStatement	if ( ret == - 1 )		1897750	9					
ANR	1897857	Condition	ret == - 1	171:5:4126:4134	1897750	0	True				
ANR	1897858	EqualityExpression	ret == - 1		1897750	0		==			
ANR	1897859	Identifier	ret		1897750	0					
ANR	1897860	UnaryOperationExpression	- 1		1897750	1					
ANR	1897861	UnaryOperator	-		1897750	0					
ANR	1897862	PrimaryExpression	1		1897750	1					
ANR	1897863	CompoundStatement		23:16:520:520	1897750	1					
ANR	1897864	IfStatement	if ( errno == EINTR )		1897750	0					
ANR	1897865	Condition	errno == EINTR	172:6:4145:4158	1897750	0	True				
ANR	1897866	EqualityExpression	errno == EINTR		1897750	0		==			
ANR	1897867	Identifier	errno		1897750	0					
ANR	1897868	Identifier	EINTR		1897750	1					
ANR	1897869	CompoundStatement		24:23:545:545	1897750	1					
ANR	1897870	ExpressionStatement	ready = false	177:3:4391:4404	1897750	0	True				
ANR	1897871	AssignmentExpression	ready = false		1897750	0		=			
ANR	1897872	Identifier	ready		1897750	0					
ANR	1897873	Identifier	false		1897750	1					
ANR	1897874	ReturnStatement	return true ;	178:3:4409:4420	1897750	1	True				
ANR	1897875	Identifier	true		1897750	0					
ANR	1897876	ExpressionStatement	"dprintf ( D_ALWAYS , ""select error: %s (%d)\\n"" , strerror ( errno ) , errno )"	180:2:4428:4526	1897750	1	True				
ANR	1897877	CallExpression	"dprintf ( D_ALWAYS , ""select error: %s (%d)\\n"" , strerror ( errno ) , errno )"		1897750	0					
ANR	1897878	Callee	dprintf		1897750	0					
ANR	1897879	Identifier	dprintf		1897750	0					
ANR	1897880	ArgumentList	D_ALWAYS		1897750	1					
ANR	1897881	Argument	D_ALWAYS		1897750	0					
ANR	1897882	Identifier	D_ALWAYS		1897750	0					
ANR	1897883	Argument	"""select error: %s (%d)\\n"""		1897750	1					
ANR	1897884	PrimaryExpression	"""select error: %s (%d)\\n"""		1897750	0					
ANR	1897885	Argument	strerror ( errno )		1897750	2					
ANR	1897886	CallExpression	strerror ( errno )		1897750	0					
ANR	1897887	Callee	strerror		1897750	0					
ANR	1897888	Identifier	strerror		1897750	0					
ANR	1897889	ArgumentList	errno		1897750	1					
ANR	1897890	Argument	errno		1897750	0					
ANR	1897891	Identifier	errno		1897750	0					
ANR	1897892	Argument	errno		1897750	3					
ANR	1897893	Identifier	errno		1897750	0					
ANR	1897894	ReturnStatement	return false ;	184:2:4530:4542	1897750	2	True				
ANR	1897895	Identifier	false		1897750	0					
ANR	1897896	ExpressionStatement	"ready = FD_ISSET ( m_pipe , & read_fd_set )"	187:1:4549:4587	1897750	10	True				
ANR	1897897	AssignmentExpression	"ready = FD_ISSET ( m_pipe , & read_fd_set )"		1897750	0		=			
ANR	1897898	Identifier	ready		1897750	0					
ANR	1897899	CallExpression	"FD_ISSET ( m_pipe , & read_fd_set )"		1897750	1					
ANR	1897900	Callee	FD_ISSET		1897750	0					
ANR	1897901	Identifier	FD_ISSET		1897750	0					
ANR	1897902	ArgumentList	m_pipe		1897750	1					
ANR	1897903	Argument	m_pipe		1897750	0					
ANR	1897904	Identifier	m_pipe		1897750	0					
ANR	1897905	Argument	& read_fd_set		1897750	1					
ANR	1897906	UnaryOperationExpression	& read_fd_set		1897750	0					
ANR	1897907	UnaryOperator	&		1897750	0					
ANR	1897908	Identifier	read_fd_set		1897750	1					
ANR	1897909	ReturnStatement	return true ;	189:1:4591:4602	1897750	11	True				
ANR	1897910	Identifier	true		1897750	0					
ANR	1897911	ReturnType	bool		1897750	1					
ANR	1897912	Identifier	NamedPipeReader :: poll		1897750	2					
ANR	1897913	ParameterList	"int timeout , bool & ready"		1897750	3					
ANR	1897914	Parameter	int timeout	148:22:3590:3600	1897750	0	True				
ANR	1897915	ParameterType	int		1897750	0					
ANR	1897916	Identifier	timeout		1897750	1					
ANR	1897917	Parameter	bool & ready	148:35:3603:3613	1897750	1	True				
ANR	1897918	ParameterType	bool &		1897750	0					
ANR	1897919	Identifier	ready		1897750	1					
ANR	1897920	CFGEntryNode	ENTRY		1897750		True				
ANR	1897921	CFGExitNode	EXIT		1897750		True				
ANR	1897922	Symbol	tv . tv_sec		1897750						
ANR	1897923	Symbol	tv . tv_usec		1897750						
ANR	1897924	Symbol	ret		1897750						
ANR	1897925	Symbol	m_initialized		1897750						
ANR	1897926	Symbol	tv		1897750						
ANR	1897927	Symbol	errno		1897750						
ANR	1897928	Symbol	NULL		1897750						
ANR	1897929	Symbol	select		1897750						
ANR	1897930	Symbol	EINTR		1897750						
ANR	1897931	Symbol	false		1897750						
ANR	1897932	Symbol	D_ALWAYS		1897750						
ANR	1897933	Symbol	read_fd_set		1897750						
ANR	1897934	Symbol	tv_ptr		1897750						
ANR	1897935	Symbol	& tv		1897750						
ANR	1897936	Symbol	timeout		1897750						
ANR	1897937	Symbol	m_pipe		1897750						
ANR	1897938	Symbol	strerror		1897750						
ANR	1897939	Symbol	FD_ISSET		1897750						
ANR	1897940	Symbol	ready		1897750						
ANR	1897941	Symbol	& read_fd_set		1897750						
ANR	1897942	Symbol	true		1897750						
ANR	1897943	Function	NamedPipeReader :: consistent	198:0:4865:5935							
ANR	1897944	FunctionDef	NamedPipeReader :: consistent ()		1897943	0					
ANR	1897945	CompoundStatement		200:0:4904:5935	1897943	0					
ANR	1897946	IdentifierDeclStatement	struct stat fbuf ;	201:1:4907:4923	1897943	0	True				
ANR	1897947	IdentifierDecl	fbuf		1897943	0					
ANR	1897948	IdentifierDeclType	struct stat		1897943	0					
ANR	1897949	Identifier	fbuf		1897943	1					
ANR	1897950	IdentifierDeclStatement	struct stat lbuf ;	202:1:4926:4942	1897943	1	True				
ANR	1897951	IdentifierDecl	lbuf		1897943	0					
ANR	1897952	IdentifierDeclType	struct stat		1897943	0					
ANR	1897953	Identifier	lbuf		1897943	1					
ANR	1897954	ExpressionStatement	ASSERT ( m_initialized )	204:1:4946:4967	1897943	2	True				
ANR	1897955	CallExpression	ASSERT ( m_initialized )		1897943	0					
ANR	1897956	Callee	ASSERT		1897943	0					
ANR	1897957	Identifier	ASSERT		1897943	0					
ANR	1897958	ArgumentList	m_initialized		1897943	1					
ANR	1897959	Argument	m_initialized		1897943	0					
ANR	1897960	Identifier	m_initialized		1897943	0					
ANR	1897961	IfStatement	"if ( fstat ( m_pipe , & fbuf ) < 0 )"		1897943	3					
ANR	1897962	Condition	"fstat ( m_pipe , & fbuf ) < 0"	207:5:5042:5065	1897943	0	True				
ANR	1897963	RelationalExpression	"fstat ( m_pipe , & fbuf ) < 0"		1897943	0		<			
ANR	1897964	CallExpression	"fstat ( m_pipe , & fbuf )"		1897943	0					
ANR	1897965	Callee	fstat		1897943	0					
ANR	1897966	Identifier	fstat		1897943	0					
ANR	1897967	ArgumentList	m_pipe		1897943	1					
ANR	1897968	Argument	m_pipe		1897943	0					
ANR	1897969	Identifier	m_pipe		1897943	0					
ANR	1897970	Argument	& fbuf		1897943	1					
ANR	1897971	UnaryOperationExpression	& fbuf		1897943	0					
ANR	1897972	UnaryOperator	&		1897943	0					
ANR	1897973	Identifier	fbuf		1897943	1					
ANR	1897974	PrimaryExpression	0		1897943	1					
ANR	1897975	CompoundStatement		8:31:163:163	1897943	1					
ANR	1897976	Statement	dprintf	208:2:5072:5078	1897943	0	True				
ANR	1897977	Statement	(	208:9:5079:5079	1897943	1	True				
ANR	1897978	Statement	D_FULLDEBUG	208:10:5080:5090	1897943	2	True				
ANR	1897979	Statement	","	208:21:5091:5091	1897943	3	True				
ANR	1897980	Statement	"""NamedPipeReader::consistent(): """	209:3:5096:5128	1897943	4	True				
ANR	1897981	Statement	"""Failed to lstat() supposedly open named pipe! Named pipe is """	210:3:5133:5194	1897943	5	True				
ANR	1897982	Statement	"""inconsistent! %s (%d)\\n"""	211:3:5199:5223	1897943	6	True				
ANR	1897983	Statement	","	211:28:5224:5224	1897943	7	True				
ANR	1897984	Statement	strerror	212:3:5229:5236	1897943	8	True				
ANR	1897985	Statement	(	212:11:5237:5237	1897943	9	True				
ANR	1897986	Statement	errno	212:12:5238:5242	1897943	10	True				
ANR	1897987	Statement	)	212:17:5243:5243	1897943	11	True				
ANR	1897988	Statement	","	212:18:5244:5244	1897943	12	True				
ANR	1897989	Statement	errno	213:3:5249:5253	1897943	13	True				
ANR	1897990	Statement	)	213:8:5254:5254	1897943	14	True				
ANR	1897991	ExpressionStatement		213:9:5255:5255	1897943	15	True				
ANR	1897992	ReturnStatement	return false ;	214:2:5259:5271	1897943	16	True				
ANR	1897993	Identifier	false		1897943	0					
ANR	1897994	IfStatement	"if ( lstat ( m_addr , & lbuf ) < 0 )"		1897943	4					
ANR	1897995	Condition	"lstat ( m_addr , & lbuf ) < 0"	218:5:5347:5370	1897943	0	True				
ANR	1897996	RelationalExpression	"lstat ( m_addr , & lbuf ) < 0"		1897943	0		<			
ANR	1897997	CallExpression	"lstat ( m_addr , & lbuf )"		1897943	0					
ANR	1897998	Callee	lstat		1897943	0					
ANR	1897999	Identifier	lstat		1897943	0					
ANR	1898000	ArgumentList	m_addr		1897943	1					
ANR	1898001	Argument	m_addr		1897943	0					
ANR	1898002	Identifier	m_addr		1897943	0					
ANR	1898003	Argument	& lbuf		1897943	1					
ANR	1898004	UnaryOperationExpression	& lbuf		1897943	0					
ANR	1898005	UnaryOperator	&		1897943	0					
ANR	1898006	Identifier	lbuf		1897943	1					
ANR	1898007	PrimaryExpression	0		1897943	1					
ANR	1898008	CompoundStatement		19:31:468:468	1897943	1					
ANR	1898009	Statement	dprintf	219:2:5377:5383	1897943	0	True				
ANR	1898010	Statement	(	219:9:5384:5384	1897943	1	True				
ANR	1898011	Statement	D_FULLDEBUG	219:10:5385:5395	1897943	2	True				
ANR	1898012	Statement	","	219:21:5396:5396	1897943	3	True				
ANR	1898013	Statement	"""NamedPipeReader::consistent(): """	220:3:5401:5433	1897943	4	True				
ANR	1898014	Statement	"""Failed to stat() supposedly present named pipe! Named pipe """	221:3:5438:5498	1897943	5	True				
ANR	1898015	Statement	"""is inconsistent! %s (%d)\\n"""	222:3:5503:5530	1897943	6	True				
ANR	1898016	Statement	","	222:31:5531:5531	1897943	7	True				
ANR	1898017	Statement	strerror	223:3:5536:5543	1897943	8	True				
ANR	1898018	Statement	(	223:11:5544:5544	1897943	9	True				
ANR	1898019	Statement	errno	223:12:5545:5549	1897943	10	True				
ANR	1898020	Statement	)	223:17:5550:5550	1897943	11	True				
ANR	1898021	Statement	","	223:18:5551:5551	1897943	12	True				
ANR	1898022	Statement	errno	224:3:5556:5560	1897943	13	True				
ANR	1898023	Statement	)	224:8:5561:5561	1897943	14	True				
ANR	1898024	ExpressionStatement		224:9:5562:5562	1897943	15	True				
ANR	1898025	ReturnStatement	return false ;	225:2:5566:5578	1897943	16	True				
ANR	1898026	Identifier	false		1897943	0					
ANR	1898027	IfStatement	if ( fbuf . st_dev != lbuf . st_dev || fbuf . st_ino != lbuf . st_ino )		1897943	5					
ANR	1898028	Condition	fbuf . st_dev != lbuf . st_dev || fbuf . st_ino != lbuf . st_ino	229:5:5644:5702	1897943	0	True				
ANR	1898029	OrExpression	fbuf . st_dev != lbuf . st_dev || fbuf . st_ino != lbuf . st_ino		1897943	0		||			
ANR	1898030	EqualityExpression	fbuf . st_dev != lbuf . st_dev		1897943	0		!=			
ANR	1898031	MemberAccess	fbuf . st_dev		1897943	0					
ANR	1898032	Identifier	fbuf		1897943	0					
ANR	1898033	Identifier	st_dev		1897943	1					
ANR	1898034	MemberAccess	lbuf . st_dev		1897943	1					
ANR	1898035	Identifier	lbuf		1897943	0					
ANR	1898036	Identifier	st_dev		1897943	1					
ANR	1898037	EqualityExpression	fbuf . st_ino != lbuf . st_ino		1897943	1		!=			
ANR	1898038	MemberAccess	fbuf . st_ino		1897943	0					
ANR	1898039	Identifier	fbuf		1897943	0					
ANR	1898040	Identifier	st_ino		1897943	1					
ANR	1898041	MemberAccess	lbuf . st_ino		1897943	1					
ANR	1898042	Identifier	lbuf		1897943	0					
ANR	1898043	Identifier	st_ino		1897943	1					
ANR	1898044	CompoundStatement		32:1:801:801	1897943	1					
ANR	1898045	Statement	dprintf	232:2:5710:5716	1897943	0	True				
ANR	1898046	Statement	(	232:9:5717:5717	1897943	1	True				
ANR	1898047	Statement	D_ALWAYS	232:10:5718:5725	1897943	2	True				
ANR	1898048	Statement	","	232:18:5726:5726	1897943	3	True				
ANR	1898049	Statement	"""NamedPipeReader::consistent(): """	233:3:5732:5764	1897943	4	True				
ANR	1898050	Statement	"""The named pipe at m_addr: '%s' is inconsistent with the """	234:3:5769:5826	1897943	5	True				
ANR	1898051	Statement	"""originally opened m_addr when the procd was started.\\n"""	235:3:5831:5886	1897943	6	True				
ANR	1898052	Statement	","	235:59:5887:5887	1897943	7	True				
ANR	1898053	Statement	m_addr	236:3:5892:5897	1897943	8	True				
ANR	1898054	Statement	)	236:9:5898:5898	1897943	9	True				
ANR	1898055	ExpressionStatement		236:10:5899:5899	1897943	10	True				
ANR	1898056	ReturnStatement	return false ;	237:2:5903:5915	1897943	11	True				
ANR	1898057	Identifier	false		1897943	0					
ANR	1898058	ReturnStatement	return true ;	240:1:5922:5933	1897943	6	True				
ANR	1898059	Identifier	true		1897943	0					
ANR	1898060	ReturnType	bool		1897943	1					
ANR	1898061	Identifier	NamedPipeReader :: consistent		1897943	2					
ANR	1898062	ParameterList			1897943	3					
ANR	1898063	CFGEntryNode	ENTRY		1897943		True				
ANR	1898064	CFGExitNode	EXIT		1897943		True				
ANR	1898065	Symbol	m_initialized		1897943						
ANR	1898066	Symbol	fbuf		1897943						
ANR	1898067	Symbol	lstat		1897943						
ANR	1898068	Symbol	fbuf . st_ino		1897943						
ANR	1898069	Symbol	false		1897943						
ANR	1898070	Symbol	fstat		1897943						
ANR	1898071	Symbol	lbuf . st_dev		1897943						
ANR	1898072	Symbol	fbuf . st_dev		1897943						
ANR	1898073	Symbol	m_addr		1897943						
ANR	1898074	Symbol	& lbuf		1897943						
ANR	1898075	Symbol	& fbuf		1897943						
ANR	1898076	Symbol	m_pipe		1897943						
ANR	1898077	Symbol	lbuf		1897943						
ANR	1898078	Symbol	true		1897943						
ANR	1898079	Symbol	lbuf . st_ino		1897943						
