command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2194615	File	data/converged/CVE-2011-4930_htcondor/rooster.cpp								
ANR	2194616	Function	Rooster :: Rooster	34:0:1112:1203							
ANR	2194617	FunctionDef	Rooster :: Rooster ()		2194616	0					
ANR	2194618	CompoundStatement		38:0:1201:1203	2194616	0					
ANR	2194619	Identifier	Rooster :: Rooster		2194616	1					
ANR	2194620	ParameterList			2194616	2					
ANR	2194621	CFGEntryNode	ENTRY		2194616		True				
ANR	2194622	CFGExitNode	EXIT		2194616		True				
ANR	2194623	Function	Rooster :: ~Rooster	41:0:1206:1237							
ANR	2194624	FunctionDef	Rooster :: ~Rooster ()		2194623	0					
ANR	2194625	CompoundStatement		42:0:1226:1237	2194623	0					
ANR	2194626	ExpressionStatement	stop ( )	43:1:1229:1235	2194623	0	True				
ANR	2194627	CallExpression	stop ( )		2194623	0					
ANR	2194628	Callee	stop		2194623	0					
ANR	2194629	Identifier	stop		2194623	0					
ANR	2194630	ArgumentList			2194623	1					
ANR	2194631	Identifier	Rooster :: ~Rooster		2194623	1					
ANR	2194632	ParameterList			2194623	2					
ANR	2194633	CFGEntryNode	ENTRY		2194623		True				
ANR	2194634	CFGExitNode	EXIT		2194623		True				
ANR	2194635	Function	Rooster :: init	46:0:1240:1274							
ANR	2194636	FunctionDef	Rooster :: init ()		2194635	0					
ANR	2194637	CompoundStatement		47:0:1261:1274	2194635	0					
ANR	2194638	ExpressionStatement	config ( )	48:1:1264:1272	2194635	0	True				
ANR	2194639	CallExpression	config ( )		2194635	0					
ANR	2194640	Callee	config		2194635	0					
ANR	2194641	Identifier	config		2194635	0					
ANR	2194642	ArgumentList			2194635	1					
ANR	2194643	ReturnType	void		2194635	1					
ANR	2194644	Identifier	Rooster :: init		2194635	2					
ANR	2194645	ParameterList			2194635	3					
ANR	2194646	CFGEntryNode	ENTRY		2194635		True				
ANR	2194647	CFGExitNode	EXIT		2194635		True				
ANR	2194648	Function	Rooster :: config	51:0:1277:2916							
ANR	2194649	FunctionDef	Rooster :: config ()		2194648	0					
ANR	2194650	CompoundStatement		52:0:1300:2916	2194648	0					
ANR	2194651	IdentifierDeclStatement	int old_polling_interval = m_polling_interval ;	53:1:1303:1348	2194648	0	True				
ANR	2194652	IdentifierDecl	old_polling_interval = m_polling_interval		2194648	0					
ANR	2194653	IdentifierDeclType	int		2194648	0					
ANR	2194654	Identifier	old_polling_interval		2194648	1					
ANR	2194655	AssignmentExpression	old_polling_interval = m_polling_interval		2194648	2		=			
ANR	2194656	Identifier	m_polling_interval		2194648	0					
ANR	2194657	Identifier	m_polling_interval		2194648	1					
ANR	2194658	ExpressionStatement	"m_polling_interval = param_integer ( ""ROOSTER_INTERVAL"" , 300 )"	54:1:1351:1409	2194648	1	True				
ANR	2194659	AssignmentExpression	"m_polling_interval = param_integer ( ""ROOSTER_INTERVAL"" , 300 )"		2194648	0		=			
ANR	2194660	Identifier	m_polling_interval		2194648	0					
ANR	2194661	CallExpression	"param_integer ( ""ROOSTER_INTERVAL"" , 300 )"		2194648	1					
ANR	2194662	Callee	param_integer		2194648	0					
ANR	2194663	Identifier	param_integer		2194648	0					
ANR	2194664	ArgumentList	"""ROOSTER_INTERVAL"""		2194648	1					
ANR	2194665	Argument	"""ROOSTER_INTERVAL"""		2194648	0					
ANR	2194666	PrimaryExpression	"""ROOSTER_INTERVAL"""		2194648	0					
ANR	2194667	Argument	300		2194648	1					
ANR	2194668	PrimaryExpression	300		2194648	0					
ANR	2194669	IfStatement	if ( m_polling_interval < 0 )		2194648	2					
ANR	2194670	Condition	m_polling_interval < 0	55:5:1416:1437	2194648	0	True				
ANR	2194671	RelationalExpression	m_polling_interval < 0		2194648	0		<			
ANR	2194672	Identifier	m_polling_interval		2194648	0					
ANR	2194673	PrimaryExpression	0		2194648	1					
ANR	2194674	CompoundStatement		4:30:140:140	2194648	1					
ANR	2194675	Statement	dprintf	56:2:1445:1451	2194648	0	True				
ANR	2194676	Statement	(	56:9:1452:1452	2194648	1	True				
ANR	2194677	Statement	D_ALWAYS	56:10:1453:1460	2194648	2	True				
ANR	2194678	Statement	","	56:18:1461:1461	2194648	3	True				
ANR	2194679	Statement	"""ROOSTER_INTERVAL is less than 0, so no unhibernate checks """	57:4:1467:1526	2194648	4	True				
ANR	2194680	Statement	"""will be made.\\n"""	58:4:1532:1548	2194648	5	True				
ANR	2194681	Statement	)	58:21:1549:1549	2194648	6	True				
ANR	2194682	ExpressionStatement		58:22:1550:1550	2194648	7	True				
ANR	2194683	IfStatement	if ( m_polling_timer != - 1 )		2194648	8					
ANR	2194684	Condition	m_polling_timer != - 1	59:6:1558:1578	2194648	0	True				
ANR	2194685	EqualityExpression	m_polling_timer != - 1		2194648	0		!=			
ANR	2194686	Identifier	m_polling_timer		2194648	0					
ANR	2194687	UnaryOperationExpression	- 1		2194648	1					
ANR	2194688	UnaryOperator	-		2194648	0					
ANR	2194689	PrimaryExpression	1		2194648	1					
ANR	2194690	CompoundStatement		8:30:281:281	2194648	1					
ANR	2194691	ExpressionStatement	daemonCore -> Cancel_Timer ( m_polling_timer )	60:3:1587:1628	2194648	0	True				
ANR	2194692	CallExpression	daemonCore -> Cancel_Timer ( m_polling_timer )		2194648	0					
ANR	2194693	Callee	daemonCore -> Cancel_Timer		2194648	0					
ANR	2194694	PtrMemberAccess	daemonCore -> Cancel_Timer		2194648	0					
ANR	2194695	Identifier	daemonCore		2194648	0					
ANR	2194696	Identifier	Cancel_Timer		2194648	1					
ANR	2194697	ArgumentList	m_polling_timer		2194648	1					
ANR	2194698	Argument	m_polling_timer		2194648	0					
ANR	2194699	Identifier	m_polling_timer		2194648	0					
ANR	2194700	ExpressionStatement	m_polling_timer = - 1	61:3:1633:1653	2194648	1	True				
ANR	2194701	AssignmentExpression	m_polling_timer = - 1		2194648	0		=			
ANR	2194702	Identifier	m_polling_timer		2194648	0					
ANR	2194703	UnaryOperationExpression	- 1		2194648	1					
ANR	2194704	UnaryOperator	-		2194648	0					
ANR	2194705	PrimaryExpression	1		2194648	1					
ANR	2194706	ElseStatement	else		2194648	0					
ANR	2194707	IfStatement	if ( m_polling_timer >= 0 )		2194648	0					
ANR	2194708	Condition	m_polling_timer >= 0	64:10:1672:1691	2194648	0	True				
ANR	2194709	RelationalExpression	m_polling_timer >= 0		2194648	0		>=			
ANR	2194710	Identifier	m_polling_timer		2194648	0					
ANR	2194711	PrimaryExpression	0		2194648	1					
ANR	2194712	CompoundStatement		13:33:394:394	2194648	1					
ANR	2194713	IfStatement	if ( old_polling_interval != m_polling_interval )		2194648	0					
ANR	2194714	Condition	old_polling_interval != m_polling_interval	65:6:1703:1744	2194648	0	True				
ANR	2194715	EqualityExpression	old_polling_interval != m_polling_interval		2194648	0		!=			
ANR	2194716	Identifier	old_polling_interval		2194648	0					
ANR	2194717	Identifier	m_polling_interval		2194648	1					
ANR	2194718	CompoundStatement		14:51:447:447	2194648	1					
ANR	2194719	ExpressionStatement	"daemonCore -> Reset_Timer ( m_polling_timer , m_polling_interval , m_polling_interval )"	66:3:1753:1846	2194648	0	True				
ANR	2194720	CallExpression	"daemonCore -> Reset_Timer ( m_polling_timer , m_polling_interval , m_polling_interval )"		2194648	0					
ANR	2194721	Callee	daemonCore -> Reset_Timer		2194648	0					
ANR	2194722	PtrMemberAccess	daemonCore -> Reset_Timer		2194648	0					
ANR	2194723	Identifier	daemonCore		2194648	0					
ANR	2194724	Identifier	Reset_Timer		2194648	1					
ANR	2194725	ArgumentList	m_polling_timer		2194648	1					
ANR	2194726	Argument	m_polling_timer		2194648	0					
ANR	2194727	Identifier	m_polling_timer		2194648	0					
ANR	2194728	Argument	m_polling_interval		2194648	1					
ANR	2194729	Identifier	m_polling_interval		2194648	0					
ANR	2194730	Argument	m_polling_interval		2194648	2					
ANR	2194731	Identifier	m_polling_interval		2194648	0					
ANR	2194732	ElseStatement	else		2194648	0					
ANR	2194733	CompoundStatement		21:6:560:560	2194648	0					
ANR	2194734	ExpressionStatement	"m_polling_timer = daemonCore -> Register_Timer ( m_polling_interval , m_polling_interval , ( TimerHandlercpp ) & Rooster :: poll , ""Rooster::poll"" , this )"	73:2:1865:2022	2194648	0	True				
ANR	2194735	AssignmentExpression	"m_polling_timer = daemonCore -> Register_Timer ( m_polling_interval , m_polling_interval , ( TimerHandlercpp ) & Rooster :: poll , ""Rooster::poll"" , this )"		2194648	0		=			
ANR	2194736	Identifier	m_polling_timer		2194648	0					
ANR	2194737	CallExpression	"daemonCore -> Register_Timer ( m_polling_interval , m_polling_interval , ( TimerHandlercpp ) & Rooster :: poll , ""Rooster::poll"" , this )"		2194648	1					
ANR	2194738	Callee	daemonCore -> Register_Timer		2194648	0					
ANR	2194739	PtrMemberAccess	daemonCore -> Register_Timer		2194648	0					
ANR	2194740	Identifier	daemonCore		2194648	0					
ANR	2194741	Identifier	Register_Timer		2194648	1					
ANR	2194742	ArgumentList	m_polling_interval		2194648	1					
ANR	2194743	Argument	m_polling_interval		2194648	0					
ANR	2194744	Identifier	m_polling_interval		2194648	0					
ANR	2194745	Argument	m_polling_interval		2194648	1					
ANR	2194746	Identifier	m_polling_interval		2194648	0					
ANR	2194747	Argument	( TimerHandlercpp ) & Rooster :: poll		2194648	2					
ANR	2194748	CastExpression	( TimerHandlercpp ) & Rooster :: poll		2194648	0					
ANR	2194749	CastTarget	TimerHandlercpp		2194648	0					
ANR	2194750	UnaryOperationExpression	& Rooster :: poll		2194648	1					
ANR	2194751	UnaryOperator	&		2194648	0					
ANR	2194752	Identifier	Rooster :: poll		2194648	1					
ANR	2194753	Argument	"""Rooster::poll"""		2194648	3					
ANR	2194754	PrimaryExpression	"""Rooster::poll"""		2194648	0					
ANR	2194755	Argument	this		2194648	4					
ANR	2194756	Identifier	this		2194648	0					
ANR	2194757	IfStatement	if ( old_polling_interval != m_polling_interval && m_polling_interval > 0 )		2194648	3					
ANR	2194758	Condition	old_polling_interval != m_polling_interval && m_polling_interval > 0	80:5:2032:2099	2194648	0	True				
ANR	2194759	AndExpression	old_polling_interval != m_polling_interval && m_polling_interval > 0		2194648	0		&&			
ANR	2194760	EqualityExpression	old_polling_interval != m_polling_interval		2194648	0		!=			
ANR	2194761	Identifier	old_polling_interval		2194648	0					
ANR	2194762	Identifier	m_polling_interval		2194648	1					
ANR	2194763	RelationalExpression	m_polling_interval > 0		2194648	1		>			
ANR	2194764	Identifier	m_polling_interval		2194648	0					
ANR	2194765	PrimaryExpression	0		2194648	1					
ANR	2194766	CompoundStatement		30:1:803:803	2194648	1					
ANR	2194767	Statement	dprintf	82:2:2108:2114	2194648	0	True				
ANR	2194768	Statement	(	82:9:2115:2115	2194648	1	True				
ANR	2194769	Statement	D_ALWAYS	82:10:2116:2123	2194648	2	True				
ANR	2194770	Statement	","	82:18:2124:2124	2194648	3	True				
ANR	2194771	Statement	"""Will perform unhibernate checks every ROOSTER_INTERVAL=%d """	83:4:2130:2189	2194648	4	True				
ANR	2194772	Statement	"""seconds.\\n"""	84:4:2195:2206	2194648	5	True				
ANR	2194773	Statement	","	84:16:2207:2207	2194648	6	True				
ANR	2194774	Statement	m_polling_interval	84:18:2209:2226	2194648	7	True				
ANR	2194775	Statement	)	84:36:2227:2227	2194648	8	True				
ANR	2194776	ExpressionStatement		84:37:2228:2228	2194648	9	True				
ANR	2194777	ExpressionStatement	"ASSERT ( param ( m_unhibernate_constraint , ""ROOSTER_UNHIBERNATE"" ) )"	87:1:2235:2298	2194648	4	True				
ANR	2194778	CallExpression	"ASSERT ( param ( m_unhibernate_constraint , ""ROOSTER_UNHIBERNATE"" ) )"		2194648	0					
ANR	2194779	Callee	ASSERT		2194648	0					
ANR	2194780	Identifier	ASSERT		2194648	0					
ANR	2194781	ArgumentList	"param ( m_unhibernate_constraint , ""ROOSTER_UNHIBERNATE"" )"		2194648	1					
ANR	2194782	Argument	"param ( m_unhibernate_constraint , ""ROOSTER_UNHIBERNATE"" )"		2194648	0					
ANR	2194783	CallExpression	"param ( m_unhibernate_constraint , ""ROOSTER_UNHIBERNATE"" )"		2194648	0					
ANR	2194784	Callee	param		2194648	0					
ANR	2194785	Identifier	param		2194648	0					
ANR	2194786	ArgumentList	m_unhibernate_constraint		2194648	1					
ANR	2194787	Argument	m_unhibernate_constraint		2194648	0					
ANR	2194788	Identifier	m_unhibernate_constraint		2194648	0					
ANR	2194789	Argument	"""ROOSTER_UNHIBERNATE"""		2194648	1					
ANR	2194790	PrimaryExpression	"""ROOSTER_UNHIBERNATE"""		2194648	0					
ANR	2194791	ExpressionStatement	"ASSERT ( param ( m_wakeup_cmd , ""ROOSTER_WAKEUP_CMD"" ) )"	90:1:2303:2353	2194648	5	True				
ANR	2194792	CallExpression	"ASSERT ( param ( m_wakeup_cmd , ""ROOSTER_WAKEUP_CMD"" ) )"		2194648	0					
ANR	2194793	Callee	ASSERT		2194648	0					
ANR	2194794	Identifier	ASSERT		2194648	0					
ANR	2194795	ArgumentList	"param ( m_wakeup_cmd , ""ROOSTER_WAKEUP_CMD"" )"		2194648	1					
ANR	2194796	Argument	"param ( m_wakeup_cmd , ""ROOSTER_WAKEUP_CMD"" )"		2194648	0					
ANR	2194797	CallExpression	"param ( m_wakeup_cmd , ""ROOSTER_WAKEUP_CMD"" )"		2194648	0					
ANR	2194798	Callee	param		2194648	0					
ANR	2194799	Identifier	param		2194648	0					
ANR	2194800	ArgumentList	m_wakeup_cmd		2194648	1					
ANR	2194801	Argument	m_wakeup_cmd		2194648	0					
ANR	2194802	Identifier	m_wakeup_cmd		2194648	0					
ANR	2194803	Argument	"""ROOSTER_WAKEUP_CMD"""		2194648	1					
ANR	2194804	PrimaryExpression	"""ROOSTER_WAKEUP_CMD"""		2194648	0					
ANR	2194805	ExpressionStatement	m_wakeup_args . Clear ( )	92:1:2357:2378	2194648	6	True				
ANR	2194806	CallExpression	m_wakeup_args . Clear ( )		2194648	0					
ANR	2194807	Callee	m_wakeup_args . Clear		2194648	0					
ANR	2194808	MemberAccess	m_wakeup_args . Clear		2194648	0					
ANR	2194809	Identifier	m_wakeup_args		2194648	0					
ANR	2194810	Identifier	Clear		2194648	1					
ANR	2194811	ArgumentList			2194648	1					
ANR	2194812	IdentifierDeclStatement	MyString error_msg ;	93:1:2381:2399	2194648	7	True				
ANR	2194813	IdentifierDecl	error_msg		2194648	0					
ANR	2194814	IdentifierDeclType	MyString		2194648	0					
ANR	2194815	Identifier	error_msg		2194648	1					
ANR	2194816	IfStatement	"if ( ! m_wakeup_args . AppendArgsV2Quoted ( m_wakeup_cmd . Value ( ) , & error_msg ) )"		2194648	8					
ANR	2194817	Condition	"! m_wakeup_args . AppendArgsV2Quoted ( m_wakeup_cmd . Value ( ) , & error_msg )"	94:5:2406:2471	2194648	0	True				
ANR	2194818	UnaryOperationExpression	"! m_wakeup_args . AppendArgsV2Quoted ( m_wakeup_cmd . Value ( ) , & error_msg )"		2194648	0					
ANR	2194819	UnaryOperator	!		2194648	0					
ANR	2194820	CallExpression	"m_wakeup_args . AppendArgsV2Quoted ( m_wakeup_cmd . Value ( ) , & error_msg )"		2194648	1					
ANR	2194821	Callee	m_wakeup_args . AppendArgsV2Quoted		2194648	0					
ANR	2194822	MemberAccess	m_wakeup_args . AppendArgsV2Quoted		2194648	0					
ANR	2194823	Identifier	m_wakeup_args		2194648	0					
ANR	2194824	Identifier	AppendArgsV2Quoted		2194648	1					
ANR	2194825	ArgumentList	m_wakeup_cmd . Value ( )		2194648	1					
ANR	2194826	Argument	m_wakeup_cmd . Value ( )		2194648	0					
ANR	2194827	CallExpression	m_wakeup_cmd . Value ( )		2194648	0					
ANR	2194828	Callee	m_wakeup_cmd . Value		2194648	0					
ANR	2194829	MemberAccess	m_wakeup_cmd . Value		2194648	0					
ANR	2194830	Identifier	m_wakeup_cmd		2194648	0					
ANR	2194831	Identifier	Value		2194648	1					
ANR	2194832	ArgumentList			2194648	1					
ANR	2194833	Argument	& error_msg		2194648	1					
ANR	2194834	UnaryOperationExpression	& error_msg		2194648	0					
ANR	2194835	UnaryOperator	&		2194648	0					
ANR	2194836	Identifier	error_msg		2194648	1					
ANR	2194837	CompoundStatement		43:74:1174:1174	2194648	1					
ANR	2194838	ExpressionStatement	"EXCEPT ( ""Invalid wakeup command %s: %s\\n"" , m_wakeup_cmd . Value ( ) , error_msg . Value ( ) )"	95:2:2479:2567	2194648	0	True				
ANR	2194839	CallExpression	"EXCEPT ( ""Invalid wakeup command %s: %s\\n"" , m_wakeup_cmd . Value ( ) , error_msg . Value ( ) )"		2194648	0					
ANR	2194840	Callee	EXCEPT		2194648	0					
ANR	2194841	Identifier	EXCEPT		2194648	0					
ANR	2194842	ArgumentList	"""Invalid wakeup command %s: %s\\n"""		2194648	1					
ANR	2194843	Argument	"""Invalid wakeup command %s: %s\\n"""		2194648	0					
ANR	2194844	PrimaryExpression	"""Invalid wakeup command %s: %s\\n"""		2194648	0					
ANR	2194845	Argument	m_wakeup_cmd . Value ( )		2194648	1					
ANR	2194846	CallExpression	m_wakeup_cmd . Value ( )		2194648	0					
ANR	2194847	Callee	m_wakeup_cmd . Value		2194648	0					
ANR	2194848	MemberAccess	m_wakeup_cmd . Value		2194648	0					
ANR	2194849	Identifier	m_wakeup_cmd		2194648	0					
ANR	2194850	Identifier	Value		2194648	1					
ANR	2194851	ArgumentList			2194648	1					
ANR	2194852	Argument	error_msg . Value ( )		2194648	2					
ANR	2194853	CallExpression	error_msg . Value ( )		2194648	0					
ANR	2194854	Callee	error_msg . Value		2194648	0					
ANR	2194855	MemberAccess	error_msg . Value		2194648	0					
ANR	2194856	Identifier	error_msg		2194648	0					
ANR	2194857	Identifier	Value		2194648	1					
ANR	2194858	ArgumentList			2194648	1					
ANR	2194859	IdentifierDeclStatement	MyString rank ;	99:1:2574:2587	2194648	9	True				
ANR	2194860	IdentifierDecl	rank		2194648	0					
ANR	2194861	IdentifierDeclType	MyString		2194648	0					
ANR	2194862	Identifier	rank		2194648	1					
ANR	2194863	ExpressionStatement	"param ( rank , ""ROOSTER_UNHIBERNATE_RANK"" )"	100:1:2590:2628	2194648	10	True				
ANR	2194864	CallExpression	"param ( rank , ""ROOSTER_UNHIBERNATE_RANK"" )"		2194648	0					
ANR	2194865	Callee	param		2194648	0					
ANR	2194866	Identifier	param		2194648	0					
ANR	2194867	ArgumentList	rank		2194648	1					
ANR	2194868	Argument	rank		2194648	0					
ANR	2194869	Identifier	rank		2194648	0					
ANR	2194870	Argument	"""ROOSTER_UNHIBERNATE_RANK"""		2194648	1					
ANR	2194871	PrimaryExpression	"""ROOSTER_UNHIBERNATE_RANK"""		2194648	0					
ANR	2194872	IfStatement	if ( rank . IsEmpty ( ) )		2194648	11					
ANR	2194873	Condition	rank . IsEmpty ( )	101:5:2635:2648	2194648	0	True				
ANR	2194874	CallExpression	rank . IsEmpty ( )		2194648	0					
ANR	2194875	Callee	rank . IsEmpty		2194648	0					
ANR	2194876	MemberAccess	rank . IsEmpty		2194648	0					
ANR	2194877	Identifier	rank		2194648	0					
ANR	2194878	Identifier	IsEmpty		2194648	1					
ANR	2194879	ArgumentList			2194648	1					
ANR	2194880	CompoundStatement		50:22:1351:1351	2194648	1					
ANR	2194881	ExpressionStatement	m_rank_ad . Delete ( ATTR_RANK )	102:2:2656:2683	2194648	0	True				
ANR	2194882	CallExpression	m_rank_ad . Delete ( ATTR_RANK )		2194648	0					
ANR	2194883	Callee	m_rank_ad . Delete		2194648	0					
ANR	2194884	MemberAccess	m_rank_ad . Delete		2194648	0					
ANR	2194885	Identifier	m_rank_ad		2194648	0					
ANR	2194886	Identifier	Delete		2194648	1					
ANR	2194887	ArgumentList	ATTR_RANK		2194648	1					
ANR	2194888	Argument	ATTR_RANK		2194648	0					
ANR	2194889	Identifier	ATTR_RANK		2194648	0					
ANR	2194890	ElseStatement	else		2194648	0					
ANR	2194891	CompoundStatement		53:6:1393:1393	2194648	0					
ANR	2194892	IfStatement	"if ( ! m_rank_ad . AssignExpr ( ATTR_RANK , rank . Value ( ) ) )"		2194648	0					
ANR	2194893	Condition	"! m_rank_ad . AssignExpr ( ATTR_RANK , rank . Value ( ) )"	105:6:2702:2746	2194648	0	True				
ANR	2194894	UnaryOperationExpression	"! m_rank_ad . AssignExpr ( ATTR_RANK , rank . Value ( ) )"		2194648	0					
ANR	2194895	UnaryOperator	!		2194648	0					
ANR	2194896	CallExpression	"m_rank_ad . AssignExpr ( ATTR_RANK , rank . Value ( ) )"		2194648	1					
ANR	2194897	Callee	m_rank_ad . AssignExpr		2194648	0					
ANR	2194898	MemberAccess	m_rank_ad . AssignExpr		2194648	0					
ANR	2194899	Identifier	m_rank_ad		2194648	0					
ANR	2194900	Identifier	AssignExpr		2194648	1					
ANR	2194901	ArgumentList	ATTR_RANK		2194648	1					
ANR	2194902	Argument	ATTR_RANK		2194648	0					
ANR	2194903	Identifier	ATTR_RANK		2194648	0					
ANR	2194904	Argument	rank . Value ( )		2194648	1					
ANR	2194905	CallExpression	rank . Value ( )		2194648	0					
ANR	2194906	Callee	rank . Value		2194648	0					
ANR	2194907	MemberAccess	rank . Value		2194648	0					
ANR	2194908	Identifier	rank		2194648	0					
ANR	2194909	Identifier	Value		2194648	1					
ANR	2194910	ArgumentList			2194648	1					
ANR	2194911	CompoundStatement		54:54:1449:1449	2194648	1					
ANR	2194912	ExpressionStatement	"EXCEPT ( ""Invalid expression for ROOSTER_UNHIBERNATE_RANK: %s\\n"" , rank . Value ( ) )"	106:3:2755:2839	2194648	0	True				
ANR	2194913	CallExpression	"EXCEPT ( ""Invalid expression for ROOSTER_UNHIBERNATE_RANK: %s\\n"" , rank . Value ( ) )"		2194648	0					
ANR	2194914	Callee	EXCEPT		2194648	0					
ANR	2194915	Identifier	EXCEPT		2194648	0					
ANR	2194916	ArgumentList	"""Invalid expression for ROOSTER_UNHIBERNATE_RANK: %s\\n"""		2194648	1					
ANR	2194917	Argument	"""Invalid expression for ROOSTER_UNHIBERNATE_RANK: %s\\n"""		2194648	0					
ANR	2194918	PrimaryExpression	"""Invalid expression for ROOSTER_UNHIBERNATE_RANK: %s\\n"""		2194648	0					
ANR	2194919	Argument	rank . Value ( )		2194648	1					
ANR	2194920	CallExpression	rank . Value ( )		2194648	0					
ANR	2194921	Callee	rank . Value		2194648	0					
ANR	2194922	MemberAccess	rank . Value		2194648	0					
ANR	2194923	Identifier	rank		2194648	0					
ANR	2194924	Identifier	Value		2194648	1					
ANR	2194925	ArgumentList			2194648	1					
ANR	2194926	ExpressionStatement	"m_max_unhibernate = param_integer ( ""ROOSTER_MAX_UNHIBERNATE"" , 0 , 0 )"	111:1:2850:2914	2194648	12	True				
ANR	2194927	AssignmentExpression	"m_max_unhibernate = param_integer ( ""ROOSTER_MAX_UNHIBERNATE"" , 0 , 0 )"		2194648	0		=			
ANR	2194928	Identifier	m_max_unhibernate		2194648	0					
ANR	2194929	CallExpression	"param_integer ( ""ROOSTER_MAX_UNHIBERNATE"" , 0 , 0 )"		2194648	1					
ANR	2194930	Callee	param_integer		2194648	0					
ANR	2194931	Identifier	param_integer		2194648	0					
ANR	2194932	ArgumentList	"""ROOSTER_MAX_UNHIBERNATE"""		2194648	1					
ANR	2194933	Argument	"""ROOSTER_MAX_UNHIBERNATE"""		2194648	0					
ANR	2194934	PrimaryExpression	"""ROOSTER_MAX_UNHIBERNATE"""		2194648	0					
ANR	2194935	Argument	0		2194648	1					
ANR	2194936	PrimaryExpression	0		2194648	0					
ANR	2194937	Argument	0		2194648	2					
ANR	2194938	PrimaryExpression	0		2194648	0					
ANR	2194939	ReturnType	void		2194648	1					
ANR	2194940	Identifier	Rooster :: config		2194648	2					
ANR	2194941	ParameterList			2194648	3					
ANR	2194942	CFGEntryNode	ENTRY		2194648		True				
ANR	2194943	CFGExitNode	EXIT		2194648		True				
ANR	2194944	Symbol	m_wakeup_args . AppendArgsV2Quoted		2194648						
ANR	2194945	Symbol	m_wakeup_args		2194648						
ANR	2194946	Symbol	error_msg . Value		2194648						
ANR	2194947	Symbol	m_wakeup_cmd		2194648						
ANR	2194948	Symbol	m_rank_ad . AssignExpr		2194648						
ANR	2194949	Symbol	& Rooster :: poll		2194648						
ANR	2194950	Symbol	param		2194648						
ANR	2194951	Symbol	m_polling_interval		2194648						
ANR	2194952	Symbol	daemonCore		2194648						
ANR	2194953	Symbol	m_polling_timer		2194648						
ANR	2194954	Symbol	m_max_unhibernate		2194648						
ANR	2194955	Symbol	rank		2194648						
ANR	2194956	Symbol	& error_msg		2194648						
ANR	2194957	Symbol	rank . Value		2194648						
ANR	2194958	Symbol	error_msg		2194648						
ANR	2194959	Symbol	m_wakeup_cmd . Value		2194648						
ANR	2194960	Symbol	rank . IsEmpty		2194648						
ANR	2194961	Symbol	ATTR_RANK		2194648						
ANR	2194962	Symbol	this		2194648						
ANR	2194963	Symbol	old_polling_interval		2194648						
ANR	2194964	Symbol	* daemonCore		2194648						
ANR	2194965	Symbol	daemonCore -> Register_Timer		2194648						
ANR	2194966	Symbol	param_integer		2194648						
ANR	2194967	Symbol	m_rank_ad		2194648						
ANR	2194968	Symbol	m_unhibernate_constraint		2194648						
ANR	2194969	Function	Rooster :: stop	114:0:2919:3045							
ANR	2194970	FunctionDef	Rooster :: stop ()		2194969	0					
ANR	2194971	CompoundStatement		115:0:2940:3045	2194969	0					
ANR	2194972	IfStatement	if ( m_polling_timer != - 1 )		2194969	0					
ANR	2194973	Condition	m_polling_timer != - 1	116:5:2947:2967	2194969	0	True				
ANR	2194974	EqualityExpression	m_polling_timer != - 1		2194969	0		!=			
ANR	2194975	Identifier	m_polling_timer		2194969	0					
ANR	2194976	UnaryOperationExpression	- 1		2194969	1					
ANR	2194977	UnaryOperator	-		2194969	0					
ANR	2194978	PrimaryExpression	1		2194969	1					
ANR	2194979	CompoundStatement		2:29:30:30	2194969	1					
ANR	2194980	ExpressionStatement	daemonCore -> Cancel_Timer ( m_polling_timer )	117:2:2975:3016	2194969	0	True				
ANR	2194981	CallExpression	daemonCore -> Cancel_Timer ( m_polling_timer )		2194969	0					
ANR	2194982	Callee	daemonCore -> Cancel_Timer		2194969	0					
ANR	2194983	PtrMemberAccess	daemonCore -> Cancel_Timer		2194969	0					
ANR	2194984	Identifier	daemonCore		2194969	0					
ANR	2194985	Identifier	Cancel_Timer		2194969	1					
ANR	2194986	ArgumentList	m_polling_timer		2194969	1					
ANR	2194987	Argument	m_polling_timer		2194969	0					
ANR	2194988	Identifier	m_polling_timer		2194969	0					
ANR	2194989	ExpressionStatement	m_polling_timer = - 1	118:2:3020:3040	2194969	1	True				
ANR	2194990	AssignmentExpression	m_polling_timer = - 1		2194969	0		=			
ANR	2194991	Identifier	m_polling_timer		2194969	0					
ANR	2194992	UnaryOperationExpression	- 1		2194969	1					
ANR	2194993	UnaryOperator	-		2194969	0					
ANR	2194994	PrimaryExpression	1		2194969	1					
ANR	2194995	ReturnType	void		2194969	1					
ANR	2194996	Identifier	Rooster :: stop		2194969	2					
ANR	2194997	ParameterList			2194969	3					
ANR	2194998	CFGEntryNode	ENTRY		2194969		True				
ANR	2194999	CFGExitNode	EXIT		2194969		True				
ANR	2195000	Symbol	daemonCore		2194969						
ANR	2195001	Symbol	m_polling_timer		2194969						
ANR	2195002	Function	StartdSortFunc	122:0:3048:3296							
ANR	2195003	FunctionDef	"StartdSortFunc (ClassAd * ad1 , ClassAd * ad2 , void * data)"		2195002	0					
ANR	2195004	CompoundStatement		123:0:3112:3296	2195002	0					
ANR	2195005	IdentifierDeclStatement	ClassAd * rank_ad = ( ClassAd * ) data ;	124:1:3115:3149	2195002	0	True				
ANR	2195006	IdentifierDecl	* rank_ad = ( ClassAd * ) data		2195002	0					
ANR	2195007	IdentifierDeclType	ClassAd *		2195002	0					
ANR	2195008	Identifier	rank_ad		2195002	1					
ANR	2195009	AssignmentExpression	* rank_ad = ( ClassAd * ) data		2195002	2		=			
ANR	2195010	Identifier	rank_ad		2195002	0					
ANR	2195011	CastExpression	( ClassAd * ) data		2195002	1					
ANR	2195012	CastTarget	ClassAd *		2195002	0					
ANR	2195013	Identifier	data		2195002	1					
ANR	2195014	IdentifierDeclStatement	float rank1 = 0 ;	126:1:3153:3168	2195002	1	True				
ANR	2195015	IdentifierDecl	rank1 = 0		2195002	0					
ANR	2195016	IdentifierDeclType	float		2195002	0					
ANR	2195017	Identifier	rank1		2195002	1					
ANR	2195018	AssignmentExpression	rank1 = 0		2195002	2		=			
ANR	2195019	Identifier	rank1		2195002	0					
ANR	2195020	PrimaryExpression	0		2195002	1					
ANR	2195021	IdentifierDeclStatement	float rank2 = 0 ;	127:1:3171:3186	2195002	2	True				
ANR	2195022	IdentifierDecl	rank2 = 0		2195002	0					
ANR	2195023	IdentifierDeclType	float		2195002	0					
ANR	2195024	Identifier	rank2		2195002	1					
ANR	2195025	AssignmentExpression	rank2 = 0		2195002	2		=			
ANR	2195026	Identifier	rank2		2195002	0					
ANR	2195027	PrimaryExpression	0		2195002	1					
ANR	2195028	ExpressionStatement	"rank_ad -> EvalFloat ( ATTR_RANK , ad1 , rank1 )"	128:1:3189:3228	2195002	3	True				
ANR	2195029	CallExpression	"rank_ad -> EvalFloat ( ATTR_RANK , ad1 , rank1 )"		2195002	0					
ANR	2195030	Callee	rank_ad -> EvalFloat		2195002	0					
ANR	2195031	PtrMemberAccess	rank_ad -> EvalFloat		2195002	0					
ANR	2195032	Identifier	rank_ad		2195002	0					
ANR	2195033	Identifier	EvalFloat		2195002	1					
ANR	2195034	ArgumentList	ATTR_RANK		2195002	1					
ANR	2195035	Argument	ATTR_RANK		2195002	0					
ANR	2195036	Identifier	ATTR_RANK		2195002	0					
ANR	2195037	Argument	ad1		2195002	1					
ANR	2195038	Identifier	ad1		2195002	0					
ANR	2195039	Argument	rank1		2195002	2					
ANR	2195040	Identifier	rank1		2195002	0					
ANR	2195041	ExpressionStatement	"rank_ad -> EvalFloat ( ATTR_RANK , ad2 , rank2 )"	129:1:3231:3270	2195002	4	True				
ANR	2195042	CallExpression	"rank_ad -> EvalFloat ( ATTR_RANK , ad2 , rank2 )"		2195002	0					
ANR	2195043	Callee	rank_ad -> EvalFloat		2195002	0					
ANR	2195044	PtrMemberAccess	rank_ad -> EvalFloat		2195002	0					
ANR	2195045	Identifier	rank_ad		2195002	0					
ANR	2195046	Identifier	EvalFloat		2195002	1					
ANR	2195047	ArgumentList	ATTR_RANK		2195002	1					
ANR	2195048	Argument	ATTR_RANK		2195002	0					
ANR	2195049	Identifier	ATTR_RANK		2195002	0					
ANR	2195050	Argument	ad2		2195002	1					
ANR	2195051	Identifier	ad2		2195002	0					
ANR	2195052	Argument	rank2		2195002	2					
ANR	2195053	Identifier	rank2		2195002	0					
ANR	2195054	ReturnStatement	return rank1 > rank2 ;	131:1:3274:3294	2195002	5	True				
ANR	2195055	RelationalExpression	rank1 > rank2		2195002	0		>			
ANR	2195056	Identifier	rank1		2195002	0					
ANR	2195057	Identifier	rank2		2195002	1					
ANR	2195058	ReturnType	static int		2195002	1					
ANR	2195059	Identifier	StartdSortFunc		2195002	2					
ANR	2195060	ParameterList	"ClassAd * ad1 , ClassAd * ad2 , void * data"		2195002	3					
ANR	2195061	Parameter	ClassAd * ad1	122:26:3074:3085	2195002	0	True				
ANR	2195062	ParameterType	ClassAd *		2195002	0					
ANR	2195063	Identifier	ad1		2195002	1					
ANR	2195064	Parameter	ClassAd * ad2	122:39:3087:3098	2195002	1	True				
ANR	2195065	ParameterType	ClassAd *		2195002	0					
ANR	2195066	Identifier	ad2		2195002	1					
ANR	2195067	Parameter	void * data	122:52:3100:3109	2195002	2	True				
ANR	2195068	ParameterType	void *		2195002	0					
ANR	2195069	Identifier	data		2195002	1					
ANR	2195070	CFGEntryNode	ENTRY		2195002		True				
ANR	2195071	CFGExitNode	EXIT		2195002		True				
ANR	2195072	Symbol	rank1		2195002						
ANR	2195073	Symbol	rank2		2195002						
ANR	2195074	Symbol	data		2195002						
ANR	2195075	Symbol	ATTR_RANK		2195002						
ANR	2195076	Symbol	rank_ad		2195002						
ANR	2195077	Symbol	ad2		2195002						
ANR	2195078	Symbol	ad1		2195002						
ANR	2195079	Function	Rooster :: poll	135:0:3300:5520							
ANR	2195080	FunctionDef	Rooster :: poll ()		2195079	0					
ANR	2195081	CompoundStatement		136:0:3321:5520	2195079	0					
ANR	2195082	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Cock-a-doodle-doo! (Time to look for machines to wake up.)\\n"" )"	137:1:3324:3407	2195079	0	True				
ANR	2195083	CallExpression	"dprintf ( D_FULLDEBUG , ""Cock-a-doodle-doo! (Time to look for machines to wake up.)\\n"" )"		2195079	0					
ANR	2195084	Callee	dprintf		2195079	0					
ANR	2195085	Identifier	dprintf		2195079	0					
ANR	2195086	ArgumentList	D_FULLDEBUG		2195079	1					
ANR	2195087	Argument	D_FULLDEBUG		2195079	0					
ANR	2195088	Identifier	D_FULLDEBUG		2195079	0					
ANR	2195089	Argument	"""Cock-a-doodle-doo! (Time to look for machines to wake up.)\\n"""		2195079	1					
ANR	2195090	PrimaryExpression	"""Cock-a-doodle-doo! (Time to look for machines to wake up.)\\n"""		2195079	0					
ANR	2195091	IdentifierDeclStatement	ClassAdList startdAds ;	139:1:3411:3432	2195079	1	True				
ANR	2195092	IdentifierDecl	startdAds		2195079	0					
ANR	2195093	IdentifierDeclType	ClassAdList		2195079	0					
ANR	2195094	Identifier	startdAds		2195079	1					
ANR	2195095	IdentifierDeclStatement	CondorQuery unhibernateQuery ( STARTD_AD ) ;	140:1:3435:3474	2195079	2	True				
ANR	2195096	IdentifierDecl	unhibernateQuery ( STARTD_AD )		2195079	0					
ANR	2195097	IdentifierDeclType	CondorQuery		2195079	0					
ANR	2195098	Identifier	unhibernateQuery		2195079	1					
ANR	2195099	Identifier	STARTD_AD		2195079	2					
ANR	2195100	IdentifierDeclStatement	ExprTree * requirements = NULL ;	141:1:3477:3506	2195079	3	True				
ANR	2195101	IdentifierDecl	* requirements = NULL		2195079	0					
ANR	2195102	IdentifierDeclType	ExprTree *		2195079	0					
ANR	2195103	Identifier	requirements		2195079	1					
ANR	2195104	AssignmentExpression	* requirements = NULL		2195079	2		=			
ANR	2195105	Identifier	NULL		2195079	0					
ANR	2195106	Identifier	NULL		2195079	1					
ANR	2195107	IfStatement	"if ( ParseClassAdRvalExpr ( m_unhibernate_constraint . Value ( ) , requirements ) != 0 || requirements == NULL )"		2195079	4					
ANR	2195108	Condition	"ParseClassAdRvalExpr ( m_unhibernate_constraint . Value ( ) , requirements ) != 0 || requirements == NULL"	143:5:3514:3608	2195079	0	True				
ANR	2195109	OrExpression	"ParseClassAdRvalExpr ( m_unhibernate_constraint . Value ( ) , requirements ) != 0 || requirements == NULL"		2195079	0		||			
ANR	2195110	EqualityExpression	"ParseClassAdRvalExpr ( m_unhibernate_constraint . Value ( ) , requirements ) != 0"		2195079	0		!=			
ANR	2195111	CallExpression	"ParseClassAdRvalExpr ( m_unhibernate_constraint . Value ( ) , requirements )"		2195079	0					
ANR	2195112	Callee	ParseClassAdRvalExpr		2195079	0					
ANR	2195113	Identifier	ParseClassAdRvalExpr		2195079	0					
ANR	2195114	ArgumentList	m_unhibernate_constraint . Value ( )		2195079	1					
ANR	2195115	Argument	m_unhibernate_constraint . Value ( )		2195079	0					
ANR	2195116	CallExpression	m_unhibernate_constraint . Value ( )		2195079	0					
ANR	2195117	Callee	m_unhibernate_constraint . Value		2195079	0					
ANR	2195118	MemberAccess	m_unhibernate_constraint . Value		2195079	0					
ANR	2195119	Identifier	m_unhibernate_constraint		2195079	0					
ANR	2195120	Identifier	Value		2195079	1					
ANR	2195121	ArgumentList			2195079	1					
ANR	2195122	Argument	requirements		2195079	1					
ANR	2195123	Identifier	requirements		2195079	0					
ANR	2195124	PrimaryExpression	0		2195079	1					
ANR	2195125	EqualityExpression	requirements == NULL		2195079	1		==			
ANR	2195126	Identifier	requirements		2195079	0					
ANR	2195127	Identifier	NULL		2195079	1					
ANR	2195128	CompoundStatement		9:1:291:291	2195079	1					
ANR	2195129	ExpressionStatement	"EXCEPT ( ""Invalid expression for ROOSTER_UNHIBERNATE: %s\\n"" , m_unhibernate_constraint . Value ( ) )"	145:2:3617:3715	2195079	0	True				
ANR	2195130	CallExpression	"EXCEPT ( ""Invalid expression for ROOSTER_UNHIBERNATE: %s\\n"" , m_unhibernate_constraint . Value ( ) )"		2195079	0					
ANR	2195131	Callee	EXCEPT		2195079	0					
ANR	2195132	Identifier	EXCEPT		2195079	0					
ANR	2195133	ArgumentList	"""Invalid expression for ROOSTER_UNHIBERNATE: %s\\n"""		2195079	1					
ANR	2195134	Argument	"""Invalid expression for ROOSTER_UNHIBERNATE: %s\\n"""		2195079	0					
ANR	2195135	PrimaryExpression	"""Invalid expression for ROOSTER_UNHIBERNATE: %s\\n"""		2195079	0					
ANR	2195136	Argument	m_unhibernate_constraint . Value ( )		2195079	1					
ANR	2195137	CallExpression	m_unhibernate_constraint . Value ( )		2195079	0					
ANR	2195138	Callee	m_unhibernate_constraint . Value		2195079	0					
ANR	2195139	MemberAccess	m_unhibernate_constraint . Value		2195079	0					
ANR	2195140	Identifier	m_unhibernate_constraint		2195079	0					
ANR	2195141	Identifier	Value		2195079	1					
ANR	2195142	ArgumentList			2195079	1					
ANR	2195143	ExpressionStatement	unhibernateQuery . addANDConstraint ( m_unhibernate_constraint . Value ( ) )	149:1:3722:3789	2195079	5	True				
ANR	2195144	CallExpression	unhibernateQuery . addANDConstraint ( m_unhibernate_constraint . Value ( ) )		2195079	0					
ANR	2195145	Callee	unhibernateQuery . addANDConstraint		2195079	0					
ANR	2195146	MemberAccess	unhibernateQuery . addANDConstraint		2195079	0					
ANR	2195147	Identifier	unhibernateQuery		2195079	0					
ANR	2195148	Identifier	addANDConstraint		2195079	1					
ANR	2195149	ArgumentList	m_unhibernate_constraint . Value ( )		2195079	1					
ANR	2195150	Argument	m_unhibernate_constraint . Value ( )		2195079	0					
ANR	2195151	CallExpression	m_unhibernate_constraint . Value ( )		2195079	0					
ANR	2195152	Callee	m_unhibernate_constraint . Value		2195079	0					
ANR	2195153	MemberAccess	m_unhibernate_constraint . Value		2195079	0					
ANR	2195154	Identifier	m_unhibernate_constraint		2195079	0					
ANR	2195155	Identifier	Value		2195079	1					
ANR	2195156	ArgumentList			2195079	1					
ANR	2195157	IdentifierDeclStatement	CollectorList * collects = daemonCore -> getCollectorList ( ) ;	151:1:3793:3849	2195079	6	True				
ANR	2195158	IdentifierDecl	* collects = daemonCore -> getCollectorList ( )		2195079	0					
ANR	2195159	IdentifierDeclType	CollectorList *		2195079	0					
ANR	2195160	Identifier	collects		2195079	1					
ANR	2195161	AssignmentExpression	* collects = daemonCore -> getCollectorList ( )		2195079	2		=			
ANR	2195162	Identifier	collects		2195079	0					
ANR	2195163	CallExpression	daemonCore -> getCollectorList ( )		2195079	1					
ANR	2195164	Callee	daemonCore -> getCollectorList		2195079	0					
ANR	2195165	PtrMemberAccess	daemonCore -> getCollectorList		2195079	0					
ANR	2195166	Identifier	daemonCore		2195079	0					
ANR	2195167	Identifier	getCollectorList		2195079	1					
ANR	2195168	ArgumentList			2195079	1					
ANR	2195169	ExpressionStatement	ASSERT ( collects )	152:1:3852:3870	2195079	7	True				
ANR	2195170	CallExpression	ASSERT ( collects )		2195079	0					
ANR	2195171	Callee	ASSERT		2195079	0					
ANR	2195172	Identifier	ASSERT		2195079	0					
ANR	2195173	ArgumentList	collects		2195079	1					
ANR	2195174	Argument	collects		2195079	0					
ANR	2195175	Identifier	collects		2195079	0					
ANR	2195176	IdentifierDeclStatement	QueryResult result ;	154:1:3874:3892	2195079	8	True				
ANR	2195177	IdentifierDecl	result		2195079	0					
ANR	2195178	IdentifierDeclType	QueryResult		2195079	0					
ANR	2195179	Identifier	result		2195079	1					
ANR	2195180	ExpressionStatement	"result = collects -> query ( unhibernateQuery , startdAds )"	155:1:3895:3947	2195079	9	True				
ANR	2195181	AssignmentExpression	"result = collects -> query ( unhibernateQuery , startdAds )"		2195079	0		=			
ANR	2195182	Identifier	result		2195079	0					
ANR	2195183	CallExpression	"collects -> query ( unhibernateQuery , startdAds )"		2195079	1					
ANR	2195184	Callee	collects -> query		2195079	0					
ANR	2195185	PtrMemberAccess	collects -> query		2195079	0					
ANR	2195186	Identifier	collects		2195079	0					
ANR	2195187	Identifier	query		2195079	1					
ANR	2195188	ArgumentList	unhibernateQuery		2195079	1					
ANR	2195189	Argument	unhibernateQuery		2195079	0					
ANR	2195190	Identifier	unhibernateQuery		2195079	0					
ANR	2195191	Argument	startdAds		2195079	1					
ANR	2195192	Identifier	startdAds		2195079	0					
ANR	2195193	IfStatement	if ( result != Q_OK )		2195079	10					
ANR	2195194	Condition	result != Q_OK	156:5:3954:3967	2195079	0	True				
ANR	2195195	EqualityExpression	result != Q_OK		2195079	0		!=			
ANR	2195196	Identifier	result		2195079	0					
ANR	2195197	Identifier	Q_OK		2195079	1					
ANR	2195198	CompoundStatement		21:22:649:649	2195079	1					
ANR	2195199	Statement	dprintf	157:2:3975:3981	2195079	0	True				
ANR	2195200	Statement	(	157:9:3982:3982	2195079	1	True				
ANR	2195201	Statement	D_ALWAYS	157:10:3983:3990	2195079	2	True				
ANR	2195202	Statement	","	157:18:3991:3991	2195079	3	True				
ANR	2195203	Statement	"""Couldn't fetch startd ads using constraint """	158:4:3997:4041	2195079	4	True				
ANR	2195204	Statement	"""ROOSTER_UNHIBERNATE=%s: %s\\n"""	159:4:4047:4076	2195079	5	True				
ANR	2195205	Statement	","	159:34:4077:4077	2195079	6	True				
ANR	2195206	Statement	m_unhibernate_constraint	160:4:4083:4106	2195079	7	True				
ANR	2195207	Statement	.	160:28:4107:4107	2195079	8	True				
ANR	2195208	Statement	Value	160:29:4108:4112	2195079	9	True				
ANR	2195209	Statement	(	160:34:4113:4113	2195079	10	True				
ANR	2195210	Statement	)	160:35:4114:4114	2195079	11	True				
ANR	2195211	Statement	","	160:36:4115:4115	2195079	12	True				
ANR	2195212	Statement	getStrQueryResult	160:38:4117:4133	2195079	13	True				
ANR	2195213	Statement	(	160:55:4134:4134	2195079	14	True				
ANR	2195214	Statement	result	160:56:4135:4140	2195079	15	True				
ANR	2195215	Statement	)	160:62:4141:4141	2195079	16	True				
ANR	2195216	Statement	)	160:63:4142:4142	2195079	17	True				
ANR	2195217	ExpressionStatement		160:64:4143:4143	2195079	18	True				
ANR	2195218	ReturnStatement	return ;	161:2:4147:4153	2195079	19	True				
ANR	2195219	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Got %d startd ads matching ROOSTER_UNHIBERNATE=%s\\n"" , startdAds . MyLength ( ) , m_unhibernate_constraint . Value ( ) )"	164:1:4160:4293	2195079	11	True				
ANR	2195220	CallExpression	"dprintf ( D_FULLDEBUG , ""Got %d startd ads matching ROOSTER_UNHIBERNATE=%s\\n"" , startdAds . MyLength ( ) , m_unhibernate_constraint . Value ( ) )"		2195079	0					
ANR	2195221	Callee	dprintf		2195079	0					
ANR	2195222	Identifier	dprintf		2195079	0					
ANR	2195223	ArgumentList	D_FULLDEBUG		2195079	1					
ANR	2195224	Argument	D_FULLDEBUG		2195079	0					
ANR	2195225	Identifier	D_FULLDEBUG		2195079	0					
ANR	2195226	Argument	"""Got %d startd ads matching ROOSTER_UNHIBERNATE=%s\\n"""		2195079	1					
ANR	2195227	PrimaryExpression	"""Got %d startd ads matching ROOSTER_UNHIBERNATE=%s\\n"""		2195079	0					
ANR	2195228	Argument	startdAds . MyLength ( )		2195079	2					
ANR	2195229	CallExpression	startdAds . MyLength ( )		2195079	0					
ANR	2195230	Callee	startdAds . MyLength		2195079	0					
ANR	2195231	MemberAccess	startdAds . MyLength		2195079	0					
ANR	2195232	Identifier	startdAds		2195079	0					
ANR	2195233	Identifier	MyLength		2195079	1					
ANR	2195234	ArgumentList			2195079	1					
ANR	2195235	Argument	m_unhibernate_constraint . Value ( )		2195079	3					
ANR	2195236	CallExpression	m_unhibernate_constraint . Value ( )		2195079	0					
ANR	2195237	Callee	m_unhibernate_constraint . Value		2195079	0					
ANR	2195238	MemberAccess	m_unhibernate_constraint . Value		2195079	0					
ANR	2195239	Identifier	m_unhibernate_constraint		2195079	0					
ANR	2195240	Identifier	Value		2195079	1					
ANR	2195241	ArgumentList			2195079	1					
ANR	2195242	ExpressionStatement	"startdAds . Sort ( StartdSortFunc , & m_rank_ad )"	167:1:4297:4338	2195079	12	True				
ANR	2195243	CallExpression	"startdAds . Sort ( StartdSortFunc , & m_rank_ad )"		2195079	0					
ANR	2195244	Callee	startdAds . Sort		2195079	0					
ANR	2195245	MemberAccess	startdAds . Sort		2195079	0					
ANR	2195246	Identifier	startdAds		2195079	0					
ANR	2195247	Identifier	Sort		2195079	1					
ANR	2195248	ArgumentList	StartdSortFunc		2195079	1					
ANR	2195249	Argument	StartdSortFunc		2195079	0					
ANR	2195250	Identifier	StartdSortFunc		2195079	0					
ANR	2195251	Argument	& m_rank_ad		2195079	1					
ANR	2195252	UnaryOperationExpression	& m_rank_ad		2195079	0					
ANR	2195253	UnaryOperator	&		2195079	0					
ANR	2195254	Identifier	m_rank_ad		2195079	1					
ANR	2195255	ExpressionStatement	startdAds . Open ( )	169:1:4342:4358	2195079	13	True				
ANR	2195256	CallExpression	startdAds . Open ( )		2195079	0					
ANR	2195257	Callee	startdAds . Open		2195079	0					
ANR	2195258	MemberAccess	startdAds . Open		2195079	0					
ANR	2195259	Identifier	startdAds		2195079	0					
ANR	2195260	Identifier	Open		2195079	1					
ANR	2195261	ArgumentList			2195079	1					
ANR	2195262	IdentifierDeclStatement	int num_woken = 0 ;	170:1:4361:4378	2195079	14	True				
ANR	2195263	IdentifierDecl	num_woken = 0		2195079	0					
ANR	2195264	IdentifierDeclType	int		2195079	0					
ANR	2195265	Identifier	num_woken		2195079	1					
ANR	2195266	AssignmentExpression	num_woken = 0		2195079	2		=			
ANR	2195267	Identifier	num_woken		2195079	0					
ANR	2195268	PrimaryExpression	0		2195079	1					
ANR	2195269	IdentifierDeclStatement	ClassAd * startd_ad ;	171:1:4381:4399	2195079	15	True				
ANR	2195270	IdentifierDecl	* startd_ad		2195079	0					
ANR	2195271	IdentifierDeclType	ClassAd *		2195079	0					
ANR	2195272	Identifier	startd_ad		2195079	1					
ANR	2195273	IdentifierDeclStatement	"HashTable < MyString , bool > machines_done ( MyStringHash ) ;"	172:1:4402:4454	2195079	16	True				
ANR	2195274	IdentifierDecl	machines_done ( MyStringHash )		2195079	0					
ANR	2195275	IdentifierDeclType	"HashTable < MyString , bool >"		2195079	0					
ANR	2195276	Identifier	machines_done		2195079	1					
ANR	2195277	Identifier	MyStringHash		2195079	2					
ANR	2195278	WhileStatement	while ( ( startd_ad = startdAds . Next ( ) ) )		2195079	17					
ANR	2195279	Condition	startd_ad = startdAds . Next ( )	173:8:4464:4491	2195079	0	True				
ANR	2195280	AssignmentExpression	startd_ad = startdAds . Next ( )		2195079	0		=			
ANR	2195281	Identifier	startd_ad		2195079	0					
ANR	2195282	CallExpression	startdAds . Next ( )		2195079	1					
ANR	2195283	Callee	startdAds . Next		2195079	0					
ANR	2195284	MemberAccess	startdAds . Next		2195079	0					
ANR	2195285	Identifier	startdAds		2195079	0					
ANR	2195286	Identifier	Next		2195079	1					
ANR	2195287	ArgumentList			2195079	1					
ANR	2195288	CompoundStatement		40:2:1197:1210	2195079	1					
ANR	2195289	IdentifierDeclStatement	MyString machine ;	174:2:4499:4515	2195079	0	True				
ANR	2195290	IdentifierDecl	machine		2195079	0					
ANR	2195291	IdentifierDeclType	MyString		2195079	0					
ANR	2195292	Identifier	machine		2195079	1					
ANR	2195293	IdentifierDeclStatement	MyString name ;	175:2:4519:4532	2195079	1	True				
ANR	2195294	IdentifierDecl	name		2195079	0					
ANR	2195295	IdentifierDeclType	MyString		2195079	0					
ANR	2195296	Identifier	name		2195079	1					
ANR	2195297	ExpressionStatement	"startd_ad -> LookupString ( ATTR_MACHINE , machine )"	176:2:4536:4581	2195079	2	True				
ANR	2195298	CallExpression	"startd_ad -> LookupString ( ATTR_MACHINE , machine )"		2195079	0					
ANR	2195299	Callee	startd_ad -> LookupString		2195079	0					
ANR	2195300	PtrMemberAccess	startd_ad -> LookupString		2195079	0					
ANR	2195301	Identifier	startd_ad		2195079	0					
ANR	2195302	Identifier	LookupString		2195079	1					
ANR	2195303	ArgumentList	ATTR_MACHINE		2195079	1					
ANR	2195304	Argument	ATTR_MACHINE		2195079	0					
ANR	2195305	Identifier	ATTR_MACHINE		2195079	0					
ANR	2195306	Argument	machine		2195079	1					
ANR	2195307	Identifier	machine		2195079	0					
ANR	2195308	ExpressionStatement	"startd_ad -> LookupString ( ATTR_NAME , name )"	177:2:4585:4624	2195079	3	True				
ANR	2195309	CallExpression	"startd_ad -> LookupString ( ATTR_NAME , name )"		2195079	0					
ANR	2195310	Callee	startd_ad -> LookupString		2195079	0					
ANR	2195311	PtrMemberAccess	startd_ad -> LookupString		2195079	0					
ANR	2195312	Identifier	startd_ad		2195079	0					
ANR	2195313	Identifier	LookupString		2195079	1					
ANR	2195314	ArgumentList	ATTR_NAME		2195079	1					
ANR	2195315	Argument	ATTR_NAME		2195079	0					
ANR	2195316	Identifier	ATTR_NAME		2195079	0					
ANR	2195317	Argument	name		2195079	1					
ANR	2195318	Identifier	name		2195079	0					
ANR	2195319	IfStatement	if ( machines_done . exists ( machine ) == 0 )		2195079	4					
ANR	2195320	Condition	machines_done . exists ( machine ) == 0	179:6:4633:4664	2195079	0	True				
ANR	2195321	EqualityExpression	machines_done . exists ( machine ) == 0		2195079	0		==			
ANR	2195322	CallExpression	machines_done . exists ( machine )		2195079	0					
ANR	2195323	Callee	machines_done . exists		2195079	0					
ANR	2195324	MemberAccess	machines_done . exists		2195079	0					
ANR	2195325	Identifier	machines_done		2195079	0					
ANR	2195326	Identifier	exists		2195079	1					
ANR	2195327	ArgumentList	machine		2195079	1					
ANR	2195328	Argument	machine		2195079	0					
ANR	2195329	Identifier	machine		2195079	0					
ANR	2195330	PrimaryExpression	0		2195079	1					
ANR	2195331	CompoundStatement		44:41:1346:1346	2195079	1					
ANR	2195332	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Skipping %s: already attempted to wake up %s in this cycle.\\n"" , name . Value ( ) , machine . Value ( ) )"	180:3:4673:4798	2195079	0	True				
ANR	2195333	CallExpression	"dprintf ( D_FULLDEBUG , ""Skipping %s: already attempted to wake up %s in this cycle.\\n"" , name . Value ( ) , machine . Value ( ) )"		2195079	0					
ANR	2195334	Callee	dprintf		2195079	0					
ANR	2195335	Identifier	dprintf		2195079	0					
ANR	2195336	ArgumentList	D_FULLDEBUG		2195079	1					
ANR	2195337	Argument	D_FULLDEBUG		2195079	0					
ANR	2195338	Identifier	D_FULLDEBUG		2195079	0					
ANR	2195339	Argument	"""Skipping %s: already attempted to wake up %s in this cycle.\\n"""		2195079	1					
ANR	2195340	PrimaryExpression	"""Skipping %s: already attempted to wake up %s in this cycle.\\n"""		2195079	0					
ANR	2195341	Argument	name . Value ( )		2195079	2					
ANR	2195342	CallExpression	name . Value ( )		2195079	0					
ANR	2195343	Callee	name . Value		2195079	0					
ANR	2195344	MemberAccess	name . Value		2195079	0					
ANR	2195345	Identifier	name		2195079	0					
ANR	2195346	Identifier	Value		2195079	1					
ANR	2195347	ArgumentList			2195079	1					
ANR	2195348	Argument	machine . Value ( )		2195079	3					
ANR	2195349	CallExpression	machine . Value ( )		2195079	0					
ANR	2195350	Callee	machine . Value		2195079	0					
ANR	2195351	MemberAccess	machine . Value		2195079	0					
ANR	2195352	Identifier	machine		2195079	0					
ANR	2195353	Identifier	Value		2195079	1					
ANR	2195354	ArgumentList			2195079	1					
ANR	2195355	ContinueStatement	continue ;	183:3:4803:4811	2195079	1	True				
ANR	2195356	IfStatement	"if ( ! EvalBool ( startd_ad , requirements ) )"		2195079	5					
ANR	2195357	Condition	"! EvalBool ( startd_ad , requirements )"	188:6:4938:4970	2195079	0	True				
ANR	2195358	UnaryOperationExpression	"! EvalBool ( startd_ad , requirements )"		2195079	0					
ANR	2195359	UnaryOperator	!		2195079	0					
ANR	2195360	CallExpression	"EvalBool ( startd_ad , requirements )"		2195079	1					
ANR	2195361	Callee	EvalBool		2195079	0					
ANR	2195362	Identifier	EvalBool		2195079	0					
ANR	2195363	ArgumentList	startd_ad		2195079	1					
ANR	2195364	Argument	startd_ad		2195079	0					
ANR	2195365	Identifier	startd_ad		2195079	0					
ANR	2195366	Argument	requirements		2195079	1					
ANR	2195367	Identifier	requirements		2195079	0					
ANR	2195368	CompoundStatement		53:42:1652:1652	2195079	1					
ANR	2195369	ExpressionStatement	"dprintf ( D_ALWAYS , ""Skipping %s: ROOSTER_UNHIBERNATE is no longer true.\\n"" , name . Value ( ) )"	189:3:4979:5077	2195079	0	True				
ANR	2195370	CallExpression	"dprintf ( D_ALWAYS , ""Skipping %s: ROOSTER_UNHIBERNATE is no longer true.\\n"" , name . Value ( ) )"		2195079	0					
ANR	2195371	Callee	dprintf		2195079	0					
ANR	2195372	Identifier	dprintf		2195079	0					
ANR	2195373	ArgumentList	D_ALWAYS		2195079	1					
ANR	2195374	Argument	D_ALWAYS		2195079	0					
ANR	2195375	Identifier	D_ALWAYS		2195079	0					
ANR	2195376	Argument	"""Skipping %s: ROOSTER_UNHIBERNATE is no longer true.\\n"""		2195079	1					
ANR	2195377	PrimaryExpression	"""Skipping %s: ROOSTER_UNHIBERNATE is no longer true.\\n"""		2195079	0					
ANR	2195378	Argument	name . Value ( )		2195079	2					
ANR	2195379	CallExpression	name . Value ( )		2195079	0					
ANR	2195380	Callee	name . Value		2195079	0					
ANR	2195381	MemberAccess	name . Value		2195079	0					
ANR	2195382	Identifier	name		2195079	0					
ANR	2195383	Identifier	Value		2195079	1					
ANR	2195384	ArgumentList			2195079	1					
ANR	2195385	ContinueStatement	continue ;	192:3:5082:5090	2195079	1	True				
ANR	2195386	IfStatement	if ( wakeUp ( startd_ad ) )		2195079	6					
ANR	2195387	Condition	wakeUp ( startd_ad )	195:6:5103:5119	2195079	0	True				
ANR	2195388	CallExpression	wakeUp ( startd_ad )		2195079	0					
ANR	2195389	Callee	wakeUp		2195079	0					
ANR	2195390	Identifier	wakeUp		2195079	0					
ANR	2195391	ArgumentList	startd_ad		2195079	1					
ANR	2195392	Argument	startd_ad		2195079	0					
ANR	2195393	Identifier	startd_ad		2195079	0					
ANR	2195394	CompoundStatement		60:26:1801:1801	2195079	1					
ANR	2195395	ExpressionStatement	"machines_done . insert ( machine , true )"	196:3:5128:5162	2195079	0	True				
ANR	2195396	CallExpression	"machines_done . insert ( machine , true )"		2195079	0					
ANR	2195397	Callee	machines_done . insert		2195079	0					
ANR	2195398	MemberAccess	machines_done . insert		2195079	0					
ANR	2195399	Identifier	machines_done		2195079	0					
ANR	2195400	Identifier	insert		2195079	1					
ANR	2195401	ArgumentList	machine		2195079	1					
ANR	2195402	Argument	machine		2195079	0					
ANR	2195403	Identifier	machine		2195079	0					
ANR	2195404	Argument	true		2195079	1					
ANR	2195405	Identifier	true		2195079	0					
ANR	2195406	IfStatement	if ( ++ num_woken >= m_max_unhibernate && m_max_unhibernate > 0 )		2195079	1					
ANR	2195407	Condition	++ num_woken >= m_max_unhibernate && m_max_unhibernate > 0	198:7:5172:5228	2195079	0	True				
ANR	2195408	AndExpression	++ num_woken >= m_max_unhibernate && m_max_unhibernate > 0		2195079	0		&&			
ANR	2195409	RelationalExpression	++ num_woken >= m_max_unhibernate		2195079	0		>=			
ANR	2195410	UnaryExpression	++ num_woken		2195079	0					
ANR	2195411	IncDec	++		2195079	0					
ANR	2195412	Identifier	num_woken		2195079	1					
ANR	2195413	Identifier	m_max_unhibernate		2195079	1					
ANR	2195414	RelationalExpression	m_max_unhibernate > 0		2195079	1		>			
ANR	2195415	Identifier	m_max_unhibernate		2195079	0					
ANR	2195416	PrimaryExpression	0		2195079	1					
ANR	2195417	CompoundStatement		63:67:1910:1910	2195079	1					
ANR	2195418	ExpressionStatement	"dprintf ( D_ALWAYS , ""Reached ROOSTER_MAX_UNHIBERNATE=%d in this cycle.\\n"" , m_max_unhibernate )"	199:4:5238:5341	2195079	0	True				
ANR	2195419	CallExpression	"dprintf ( D_ALWAYS , ""Reached ROOSTER_MAX_UNHIBERNATE=%d in this cycle.\\n"" , m_max_unhibernate )"		2195079	0					
ANR	2195420	Callee	dprintf		2195079	0					
ANR	2195421	Identifier	dprintf		2195079	0					
ANR	2195422	ArgumentList	D_ALWAYS		2195079	1					
ANR	2195423	Argument	D_ALWAYS		2195079	0					
ANR	2195424	Identifier	D_ALWAYS		2195079	0					
ANR	2195425	Argument	"""Reached ROOSTER_MAX_UNHIBERNATE=%d in this cycle.\\n"""		2195079	1					
ANR	2195426	PrimaryExpression	"""Reached ROOSTER_MAX_UNHIBERNATE=%d in this cycle.\\n"""		2195079	0					
ANR	2195427	Argument	m_max_unhibernate		2195079	2					
ANR	2195428	Identifier	m_max_unhibernate		2195079	0					
ANR	2195429	BreakStatement	break ;	202:4:5347:5352	2195079	1	True				
ANR	2195430	ExpressionStatement	startdAds . Close ( )	206:1:5367:5384	2195079	18	True				
ANR	2195431	CallExpression	startdAds . Close ( )		2195079	0					
ANR	2195432	Callee	startdAds . Close		2195079	0					
ANR	2195433	MemberAccess	startdAds . Close		2195079	0					
ANR	2195434	Identifier	startdAds		2195079	0					
ANR	2195435	Identifier	Close		2195079	1					
ANR	2195436	ArgumentList			2195079	1					
ANR	2195437	Statement	delete	208:1:5388:5393	2195079	19	True				
ANR	2195438	ExpressionStatement	requirements	208:8:5395:5407	2195079	20	True				
ANR	2195439	Identifier	requirements		2195079	0					
ANR	2195440	ExpressionStatement	requirements = NULL	209:1:5410:5429	2195079	21	True				
ANR	2195441	AssignmentExpression	requirements = NULL		2195079	0		=			
ANR	2195442	Identifier	requirements		2195079	0					
ANR	2195443	Identifier	NULL		2195079	1					
ANR	2195444	IfStatement	if ( startdAds . MyLength ( ) )		2195079	22					
ANR	2195445	Condition	startdAds . MyLength ( )	211:5:5437:5456	2195079	0	True				
ANR	2195446	CallExpression	startdAds . MyLength ( )		2195079	0					
ANR	2195447	Callee	startdAds . MyLength		2195079	0					
ANR	2195448	MemberAccess	startdAds . MyLength		2195079	0					
ANR	2195449	Identifier	startdAds		2195079	0					
ANR	2195450	Identifier	MyLength		2195079	1					
ANR	2195451	ArgumentList			2195079	1					
ANR	2195452	CompoundStatement		76:28:2138:2138	2195079	1					
ANR	2195453	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Done sending wakeup calls.\\n"" )"	212:2:5464:5515	2195079	0	True				
ANR	2195454	CallExpression	"dprintf ( D_FULLDEBUG , ""Done sending wakeup calls.\\n"" )"		2195079	0					
ANR	2195455	Callee	dprintf		2195079	0					
ANR	2195456	Identifier	dprintf		2195079	0					
ANR	2195457	ArgumentList	D_FULLDEBUG		2195079	1					
ANR	2195458	Argument	D_FULLDEBUG		2195079	0					
ANR	2195459	Identifier	D_FULLDEBUG		2195079	0					
ANR	2195460	Argument	"""Done sending wakeup calls.\\n"""		2195079	1					
ANR	2195461	PrimaryExpression	"""Done sending wakeup calls.\\n"""		2195079	0					
ANR	2195462	ReturnType	void		2195079	1					
ANR	2195463	Identifier	Rooster :: poll		2195079	2					
ANR	2195464	ParameterList			2195079	3					
ANR	2195465	CFGEntryNode	ENTRY		2195079		True				
ANR	2195466	CFGExitNode	EXIT		2195079		True				
ANR	2195467	Symbol	name . Value		2195079						
ANR	2195468	Symbol	ATTR_NAME		2195079						
ANR	2195469	Symbol	daemonCore -> getCollectorList		2195079						
ANR	2195470	Symbol	wakeUp		2195079						
ANR	2195471	Symbol	result		2195079						
ANR	2195472	Symbol	* collects		2195079						
ANR	2195473	Symbol	startdAds		2195079						
ANR	2195474	Symbol	m_unhibernate_constraint . Value		2195079						
ANR	2195475	Symbol	collects -> query		2195079						
ANR	2195476	Symbol	startdAds . MyLength		2195079						
ANR	2195477	Symbol	ParseClassAdRvalExpr		2195079						
ANR	2195478	Symbol	daemonCore		2195079						
ANR	2195479	Symbol	StartdSortFunc		2195079						
ANR	2195480	Symbol	m_max_unhibernate		2195079						
ANR	2195481	Symbol	startd_ad		2195079						
ANR	2195482	Symbol	collects		2195079						
ANR	2195483	Symbol	requirements		2195079						
ANR	2195484	Symbol	unhibernateQuery		2195079						
ANR	2195485	Symbol	NULL		2195079						
ANR	2195486	Symbol	D_ALWAYS		2195079						
ANR	2195487	Symbol	D_FULLDEBUG		2195079						
ANR	2195488	Symbol	& m_rank_ad		2195079						
ANR	2195489	Symbol	Q_OK		2195079						
ANR	2195490	Symbol	EvalBool		2195079						
ANR	2195491	Symbol	ATTR_MACHINE		2195079						
ANR	2195492	Symbol	machines_done . exists		2195079						
ANR	2195493	Symbol	* daemonCore		2195079						
ANR	2195494	Symbol	num_woken		2195079						
ANR	2195495	Symbol	machine		2195079						
ANR	2195496	Symbol	startdAds . Next		2195079						
ANR	2195497	Symbol	machine . Value		2195079						
ANR	2195498	Symbol	name		2195079						
ANR	2195499	Symbol	true		2195079						
ANR	2195500	Symbol	machines_done		2195079						
ANR	2195501	Symbol	m_unhibernate_constraint		2195079						
ANR	2195502	Function	Rooster :: wakeUp	216:0:5523:8284							
ANR	2195503	FunctionDef	Rooster :: wakeUp (ClassAd * startd_ad)		2195502	0					
ANR	2195504	CompoundStatement		218:0:5564:8284	2195502	0					
ANR	2195505	ExpressionStatement	ASSERT ( startd_ad )	219:1:5567:5586	2195502	0	True				
ANR	2195506	CallExpression	ASSERT ( startd_ad )		2195502	0					
ANR	2195507	Callee	ASSERT		2195502	0					
ANR	2195508	Identifier	ASSERT		2195502	0					
ANR	2195509	ArgumentList	startd_ad		2195502	1					
ANR	2195510	Argument	startd_ad		2195502	0					
ANR	2195511	Identifier	startd_ad		2195502	0					
ANR	2195512	IdentifierDeclStatement	MyString name ;	221:1:5590:5603	2195502	1	True				
ANR	2195513	IdentifierDecl	name		2195502	0					
ANR	2195514	IdentifierDeclType	MyString		2195502	0					
ANR	2195515	Identifier	name		2195502	1					
ANR	2195516	ExpressionStatement	"startd_ad -> LookupString ( ATTR_NAME , name )"	222:1:5606:5645	2195502	2	True				
ANR	2195517	CallExpression	"startd_ad -> LookupString ( ATTR_NAME , name )"		2195502	0					
ANR	2195518	Callee	startd_ad -> LookupString		2195502	0					
ANR	2195519	PtrMemberAccess	startd_ad -> LookupString		2195502	0					
ANR	2195520	Identifier	startd_ad		2195502	0					
ANR	2195521	Identifier	LookupString		2195502	1					
ANR	2195522	ArgumentList	ATTR_NAME		2195502	1					
ANR	2195523	Argument	ATTR_NAME		2195502	0					
ANR	2195524	Identifier	ATTR_NAME		2195502	0					
ANR	2195525	Argument	name		2195502	1					
ANR	2195526	Identifier	name		2195502	0					
ANR	2195527	ExpressionStatement	"dprintf ( D_ALWAYS , ""Sending wakeup call to %s.\\n"" , name . Value ( ) )"	224:1:5649:5710	2195502	3	True				
ANR	2195528	CallExpression	"dprintf ( D_ALWAYS , ""Sending wakeup call to %s.\\n"" , name . Value ( ) )"		2195502	0					
ANR	2195529	Callee	dprintf		2195502	0					
ANR	2195530	Identifier	dprintf		2195502	0					
ANR	2195531	ArgumentList	D_ALWAYS		2195502	1					
ANR	2195532	Argument	D_ALWAYS		2195502	0					
ANR	2195533	Identifier	D_ALWAYS		2195502	0					
ANR	2195534	Argument	"""Sending wakeup call to %s.\\n"""		2195502	1					
ANR	2195535	PrimaryExpression	"""Sending wakeup call to %s.\\n"""		2195502	0					
ANR	2195536	Argument	name . Value ( )		2195502	2					
ANR	2195537	CallExpression	name . Value ( )		2195502	0					
ANR	2195538	Callee	name . Value		2195502	0					
ANR	2195539	MemberAccess	name . Value		2195502	0					
ANR	2195540	Identifier	name		2195502	0					
ANR	2195541	Identifier	Value		2195502	1					
ANR	2195542	ArgumentList			2195502	1					
ANR	2195543	IdentifierDeclStatement	int stdin_pipe_fds [ 2 ] ;	226:1:5714:5735	2195502	4	True				
ANR	2195544	IdentifierDecl	stdin_pipe_fds [ 2 ]		2195502	0					
ANR	2195545	IdentifierDeclType	int [ 2 ]		2195502	0					
ANR	2195546	Identifier	stdin_pipe_fds		2195502	1					
ANR	2195547	PrimaryExpression	2		2195502	2					
ANR	2195548	ExpressionStatement	stdin_pipe_fds [ 0 ] = - 1	227:1:5738:5760	2195502	5	True				
ANR	2195549	AssignmentExpression	stdin_pipe_fds [ 0 ] = - 1		2195502	0		=			
ANR	2195550	ArrayIndexing	stdin_pipe_fds [ 0 ]		2195502	0					
ANR	2195551	Identifier	stdin_pipe_fds		2195502	0					
ANR	2195552	PrimaryExpression	0		2195502	1					
ANR	2195553	UnaryOperationExpression	- 1		2195502	1					
ANR	2195554	UnaryOperator	-		2195502	0					
ANR	2195555	PrimaryExpression	1		2195502	1					
ANR	2195556	ExpressionStatement	stdin_pipe_fds [ 1 ] = - 1	228:1:5779:5801	2195502	6	True				
ANR	2195557	AssignmentExpression	stdin_pipe_fds [ 1 ] = - 1		2195502	0		=			
ANR	2195558	ArrayIndexing	stdin_pipe_fds [ 1 ]		2195502	0					
ANR	2195559	Identifier	stdin_pipe_fds		2195502	0					
ANR	2195560	PrimaryExpression	1		2195502	1					
ANR	2195561	UnaryOperationExpression	- 1		2195502	1					
ANR	2195562	UnaryOperator	-		2195502	0					
ANR	2195563	PrimaryExpression	1		2195502	1					
ANR	2195564	IfStatement	if ( ! daemonCore -> Create_Pipe ( stdin_pipe_fds ) )		2195502	7					
ANR	2195565	Condition	! daemonCore -> Create_Pipe ( stdin_pipe_fds )	229:5:5819:5858	2195502	0	True				
ANR	2195566	UnaryOperationExpression	! daemonCore -> Create_Pipe ( stdin_pipe_fds )		2195502	0					
ANR	2195567	UnaryOperator	!		2195502	0					
ANR	2195568	CallExpression	daemonCore -> Create_Pipe ( stdin_pipe_fds )		2195502	1					
ANR	2195569	Callee	daemonCore -> Create_Pipe		2195502	0					
ANR	2195570	PtrMemberAccess	daemonCore -> Create_Pipe		2195502	0					
ANR	2195571	Identifier	daemonCore		2195502	0					
ANR	2195572	Identifier	Create_Pipe		2195502	1					
ANR	2195573	ArgumentList	stdin_pipe_fds		2195502	1					
ANR	2195574	Argument	stdin_pipe_fds		2195502	0					
ANR	2195575	Identifier	stdin_pipe_fds		2195502	0					
ANR	2195576	CompoundStatement		12:48:297:297	2195502	1					
ANR	2195577	ExpressionStatement	"dprintf ( D_ALWAYS , ""Rooster::wakeUp: failed to create stdin pipe."" )"	230:2:5866:5931	2195502	0	True				
ANR	2195578	CallExpression	"dprintf ( D_ALWAYS , ""Rooster::wakeUp: failed to create stdin pipe."" )"		2195502	0					
ANR	2195579	Callee	dprintf		2195502	0					
ANR	2195580	Identifier	dprintf		2195502	0					
ANR	2195581	ArgumentList	D_ALWAYS		2195502	1					
ANR	2195582	Argument	D_ALWAYS		2195502	0					
ANR	2195583	Identifier	D_ALWAYS		2195502	0					
ANR	2195584	Argument	"""Rooster::wakeUp: failed to create stdin pipe."""		2195502	1					
ANR	2195585	PrimaryExpression	"""Rooster::wakeUp: failed to create stdin pipe."""		2195502	0					
ANR	2195586	ReturnStatement	return false ;	231:2:5935:5947	2195502	1	True				
ANR	2195587	Identifier	false		2195502	0					
ANR	2195588	IdentifierDeclStatement	int stdout_pipe_fds [ 2 ] ;	234:1:5954:5976	2195502	8	True				
ANR	2195589	IdentifierDecl	stdout_pipe_fds [ 2 ]		2195502	0					
ANR	2195590	IdentifierDeclType	int [ 2 ]		2195502	0					
ANR	2195591	Identifier	stdout_pipe_fds		2195502	1					
ANR	2195592	PrimaryExpression	2		2195502	2					
ANR	2195593	ExpressionStatement	stdout_pipe_fds [ 0 ] = - 1	235:1:5979:6002	2195502	9	True				
ANR	2195594	AssignmentExpression	stdout_pipe_fds [ 0 ] = - 1		2195502	0		=			
ANR	2195595	ArrayIndexing	stdout_pipe_fds [ 0 ]		2195502	0					
ANR	2195596	Identifier	stdout_pipe_fds		2195502	0					
ANR	2195597	PrimaryExpression	0		2195502	1					
ANR	2195598	UnaryOperationExpression	- 1		2195502	1					
ANR	2195599	UnaryOperator	-		2195502	0					
ANR	2195600	PrimaryExpression	1		2195502	1					
ANR	2195601	ExpressionStatement	stdout_pipe_fds [ 1 ] = - 1	236:1:6016:6039	2195502	10	True				
ANR	2195602	AssignmentExpression	stdout_pipe_fds [ 1 ] = - 1		2195502	0		=			
ANR	2195603	ArrayIndexing	stdout_pipe_fds [ 1 ]		2195502	0					
ANR	2195604	Identifier	stdout_pipe_fds		2195502	0					
ANR	2195605	PrimaryExpression	1		2195502	1					
ANR	2195606	UnaryOperationExpression	- 1		2195502	1					
ANR	2195607	UnaryOperator	-		2195502	0					
ANR	2195608	PrimaryExpression	1		2195502	1					
ANR	2195609	IfStatement	if ( ! daemonCore -> Create_Pipe ( stdout_pipe_fds ) )		2195502	11					
ANR	2195610	Condition	! daemonCore -> Create_Pipe ( stdout_pipe_fds )	237:5:6062:6102	2195502	0	True				
ANR	2195611	UnaryOperationExpression	! daemonCore -> Create_Pipe ( stdout_pipe_fds )		2195502	0					
ANR	2195612	UnaryOperator	!		2195502	0					
ANR	2195613	CallExpression	daemonCore -> Create_Pipe ( stdout_pipe_fds )		2195502	1					
ANR	2195614	Callee	daemonCore -> Create_Pipe		2195502	0					
ANR	2195615	PtrMemberAccess	daemonCore -> Create_Pipe		2195502	0					
ANR	2195616	Identifier	daemonCore		2195502	0					
ANR	2195617	Identifier	Create_Pipe		2195502	1					
ANR	2195618	ArgumentList	stdout_pipe_fds		2195502	1					
ANR	2195619	Argument	stdout_pipe_fds		2195502	0					
ANR	2195620	Identifier	stdout_pipe_fds		2195502	0					
ANR	2195621	CompoundStatement		20:49:541:541	2195502	1					
ANR	2195622	ExpressionStatement	"dprintf ( D_ALWAYS , ""Rooster::wakeUp: failed to create stdout pipe."" )"	238:2:6110:6176	2195502	0	True				
ANR	2195623	CallExpression	"dprintf ( D_ALWAYS , ""Rooster::wakeUp: failed to create stdout pipe."" )"		2195502	0					
ANR	2195624	Callee	dprintf		2195502	0					
ANR	2195625	Identifier	dprintf		2195502	0					
ANR	2195626	ArgumentList	D_ALWAYS		2195502	1					
ANR	2195627	Argument	D_ALWAYS		2195502	0					
ANR	2195628	Identifier	D_ALWAYS		2195502	0					
ANR	2195629	Argument	"""Rooster::wakeUp: failed to create stdout pipe."""		2195502	1					
ANR	2195630	PrimaryExpression	"""Rooster::wakeUp: failed to create stdout pipe."""		2195502	0					
ANR	2195631	ExpressionStatement	daemonCore -> Close_Pipe ( stdin_pipe_fds [ 0 ] )	239:2:6180:6221	2195502	1	True				
ANR	2195632	CallExpression	daemonCore -> Close_Pipe ( stdin_pipe_fds [ 0 ] )		2195502	0					
ANR	2195633	Callee	daemonCore -> Close_Pipe		2195502	0					
ANR	2195634	PtrMemberAccess	daemonCore -> Close_Pipe		2195502	0					
ANR	2195635	Identifier	daemonCore		2195502	0					
ANR	2195636	Identifier	Close_Pipe		2195502	1					
ANR	2195637	ArgumentList	stdin_pipe_fds [ 0 ]		2195502	1					
ANR	2195638	Argument	stdin_pipe_fds [ 0 ]		2195502	0					
ANR	2195639	ArrayIndexing	stdin_pipe_fds [ 0 ]		2195502	0					
ANR	2195640	Identifier	stdin_pipe_fds		2195502	0					
ANR	2195641	PrimaryExpression	0		2195502	1					
ANR	2195642	ExpressionStatement	daemonCore -> Close_Pipe ( stdin_pipe_fds [ 1 ] )	240:2:6225:6266	2195502	2	True				
ANR	2195643	CallExpression	daemonCore -> Close_Pipe ( stdin_pipe_fds [ 1 ] )		2195502	0					
ANR	2195644	Callee	daemonCore -> Close_Pipe		2195502	0					
ANR	2195645	PtrMemberAccess	daemonCore -> Close_Pipe		2195502	0					
ANR	2195646	Identifier	daemonCore		2195502	0					
ANR	2195647	Identifier	Close_Pipe		2195502	1					
ANR	2195648	ArgumentList	stdin_pipe_fds [ 1 ]		2195502	1					
ANR	2195649	Argument	stdin_pipe_fds [ 1 ]		2195502	0					
ANR	2195650	ArrayIndexing	stdin_pipe_fds [ 1 ]		2195502	0					
ANR	2195651	Identifier	stdin_pipe_fds		2195502	0					
ANR	2195652	PrimaryExpression	1		2195502	1					
ANR	2195653	ReturnStatement	return false ;	241:2:6270:6282	2195502	3	True				
ANR	2195654	Identifier	false		2195502	0					
ANR	2195655	IdentifierDeclStatement	int std_fds [ 3 ] ;	244:1:6289:6303	2195502	12	True				
ANR	2195656	IdentifierDecl	std_fds [ 3 ]		2195502	0					
ANR	2195657	IdentifierDeclType	int [ 3 ]		2195502	0					
ANR	2195658	Identifier	std_fds		2195502	1					
ANR	2195659	PrimaryExpression	3		2195502	2					
ANR	2195660	ExpressionStatement	std_fds [ 0 ] = stdin_pipe_fds [ 0 ]	245:1:6306:6336	2195502	13	True				
ANR	2195661	AssignmentExpression	std_fds [ 0 ] = stdin_pipe_fds [ 0 ]		2195502	0		=			
ANR	2195662	ArrayIndexing	std_fds [ 0 ]		2195502	0					
ANR	2195663	Identifier	std_fds		2195502	0					
ANR	2195664	PrimaryExpression	0		2195502	1					
ANR	2195665	ArrayIndexing	stdin_pipe_fds [ 0 ]		2195502	1					
ANR	2195666	Identifier	stdin_pipe_fds		2195502	0					
ANR	2195667	PrimaryExpression	0		2195502	1					
ANR	2195668	ExpressionStatement	std_fds [ 1 ] = stdout_pipe_fds [ 1 ]	246:1:6339:6370	2195502	14	True				
ANR	2195669	AssignmentExpression	std_fds [ 1 ] = stdout_pipe_fds [ 1 ]		2195502	0		=			
ANR	2195670	ArrayIndexing	std_fds [ 1 ]		2195502	0					
ANR	2195671	Identifier	std_fds		2195502	0					
ANR	2195672	PrimaryExpression	1		2195502	1					
ANR	2195673	ArrayIndexing	stdout_pipe_fds [ 1 ]		2195502	1					
ANR	2195674	Identifier	stdout_pipe_fds		2195502	0					
ANR	2195675	PrimaryExpression	1		2195502	1					
ANR	2195676	ExpressionStatement	std_fds [ 2 ] = stdout_pipe_fds [ 1 ]	247:1:6373:6404	2195502	15	True				
ANR	2195677	AssignmentExpression	std_fds [ 2 ] = stdout_pipe_fds [ 1 ]		2195502	0		=			
ANR	2195678	ArrayIndexing	std_fds [ 2 ]		2195502	0					
ANR	2195679	Identifier	std_fds		2195502	0					
ANR	2195680	PrimaryExpression	2		2195502	1					
ANR	2195681	ArrayIndexing	stdout_pipe_fds [ 1 ]		2195502	1					
ANR	2195682	Identifier	stdout_pipe_fds		2195502	0					
ANR	2195683	PrimaryExpression	1		2195502	1					
ANR	2195684	IdentifierDeclStatement	"int pid = daemonCore -> Create_Process ( m_wakeup_args . GetArg ( 0 ) , m_wakeup_args , PRIV_CONDOR_FINAL , 0 , FALSE , NULL , NULL , NULL , NULL , std_fds ) ;"	249:1:6408:6567	2195502	16	True				
ANR	2195685	IdentifierDecl	"pid = daemonCore -> Create_Process ( m_wakeup_args . GetArg ( 0 ) , m_wakeup_args , PRIV_CONDOR_FINAL , 0 , FALSE , NULL , NULL , NULL , NULL , std_fds )"		2195502	0					
ANR	2195686	IdentifierDeclType	int		2195502	0					
ANR	2195687	Identifier	pid		2195502	1					
ANR	2195688	AssignmentExpression	"pid = daemonCore -> Create_Process ( m_wakeup_args . GetArg ( 0 ) , m_wakeup_args , PRIV_CONDOR_FINAL , 0 , FALSE , NULL , NULL , NULL , NULL , std_fds )"		2195502	2		=			
ANR	2195689	Identifier	pid		2195502	0					
ANR	2195690	CallExpression	"daemonCore -> Create_Process ( m_wakeup_args . GetArg ( 0 ) , m_wakeup_args , PRIV_CONDOR_FINAL , 0 , FALSE , NULL , NULL , NULL , NULL , std_fds )"		2195502	1					
ANR	2195691	Callee	daemonCore -> Create_Process		2195502	0					
ANR	2195692	PtrMemberAccess	daemonCore -> Create_Process		2195502	0					
ANR	2195693	Identifier	daemonCore		2195502	0					
ANR	2195694	Identifier	Create_Process		2195502	1					
ANR	2195695	ArgumentList	m_wakeup_args . GetArg ( 0 )		2195502	1					
ANR	2195696	Argument	m_wakeup_args . GetArg ( 0 )		2195502	0					
ANR	2195697	CallExpression	m_wakeup_args . GetArg ( 0 )		2195502	0					
ANR	2195698	Callee	m_wakeup_args . GetArg		2195502	0					
ANR	2195699	MemberAccess	m_wakeup_args . GetArg		2195502	0					
ANR	2195700	Identifier	m_wakeup_args		2195502	0					
ANR	2195701	Identifier	GetArg		2195502	1					
ANR	2195702	ArgumentList	0		2195502	1					
ANR	2195703	Argument	0		2195502	0					
ANR	2195704	PrimaryExpression	0		2195502	0					
ANR	2195705	Argument	m_wakeup_args		2195502	1					
ANR	2195706	Identifier	m_wakeup_args		2195502	0					
ANR	2195707	Argument	PRIV_CONDOR_FINAL		2195502	2					
ANR	2195708	Identifier	PRIV_CONDOR_FINAL		2195502	0					
ANR	2195709	Argument	0		2195502	3					
ANR	2195710	PrimaryExpression	0		2195502	0					
ANR	2195711	Argument	FALSE		2195502	4					
ANR	2195712	Identifier	FALSE		2195502	0					
ANR	2195713	Argument	NULL		2195502	5					
ANR	2195714	Identifier	NULL		2195502	0					
ANR	2195715	Argument	NULL		2195502	6					
ANR	2195716	Identifier	NULL		2195502	0					
ANR	2195717	Argument	NULL		2195502	7					
ANR	2195718	Identifier	NULL		2195502	0					
ANR	2195719	Argument	NULL		2195502	8					
ANR	2195720	Identifier	NULL		2195502	0					
ANR	2195721	Argument	std_fds		2195502	9					
ANR	2195722	Identifier	std_fds		2195502	0					
ANR	2195723	ExpressionStatement	daemonCore -> Close_Pipe ( stdin_pipe_fds [ 0 ] )	261:1:6571:6612	2195502	17	True				
ANR	2195724	CallExpression	daemonCore -> Close_Pipe ( stdin_pipe_fds [ 0 ] )		2195502	0					
ANR	2195725	Callee	daemonCore -> Close_Pipe		2195502	0					
ANR	2195726	PtrMemberAccess	daemonCore -> Close_Pipe		2195502	0					
ANR	2195727	Identifier	daemonCore		2195502	0					
ANR	2195728	Identifier	Close_Pipe		2195502	1					
ANR	2195729	ArgumentList	stdin_pipe_fds [ 0 ]		2195502	1					
ANR	2195730	Argument	stdin_pipe_fds [ 0 ]		2195502	0					
ANR	2195731	ArrayIndexing	stdin_pipe_fds [ 0 ]		2195502	0					
ANR	2195732	Identifier	stdin_pipe_fds		2195502	0					
ANR	2195733	PrimaryExpression	0		2195502	1					
ANR	2195734	ExpressionStatement	daemonCore -> Close_Pipe ( stdout_pipe_fds [ 1 ] )	262:1:6615:6657	2195502	18	True				
ANR	2195735	CallExpression	daemonCore -> Close_Pipe ( stdout_pipe_fds [ 1 ] )		2195502	0					
ANR	2195736	Callee	daemonCore -> Close_Pipe		2195502	0					
ANR	2195737	PtrMemberAccess	daemonCore -> Close_Pipe		2195502	0					
ANR	2195738	Identifier	daemonCore		2195502	0					
ANR	2195739	Identifier	Close_Pipe		2195502	1					
ANR	2195740	ArgumentList	stdout_pipe_fds [ 1 ]		2195502	1					
ANR	2195741	Argument	stdout_pipe_fds [ 1 ]		2195502	0					
ANR	2195742	ArrayIndexing	stdout_pipe_fds [ 1 ]		2195502	0					
ANR	2195743	Identifier	stdout_pipe_fds		2195502	0					
ANR	2195744	PrimaryExpression	1		2195502	1					
ANR	2195745	IfStatement	if ( pid == - 1 )		2195502	19					
ANR	2195746	Condition	pid == - 1	264:5:6665:6673	2195502	0	True				
ANR	2195747	EqualityExpression	pid == - 1		2195502	0		==			
ANR	2195748	Identifier	pid		2195502	0					
ANR	2195749	UnaryOperationExpression	- 1		2195502	1					
ANR	2195750	UnaryOperator	-		2195502	0					
ANR	2195751	PrimaryExpression	1		2195502	1					
ANR	2195752	CompoundStatement		47:17:1112:1112	2195502	1					
ANR	2195753	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to run %s: %s\\n"" , m_wakeup_cmd . Value ( ) , strerror ( errno ) )"	265:2:6681:6766	2195502	0	True				
ANR	2195754	CallExpression	"dprintf ( D_ALWAYS , ""Failed to run %s: %s\\n"" , m_wakeup_cmd . Value ( ) , strerror ( errno ) )"		2195502	0					
ANR	2195755	Callee	dprintf		2195502	0					
ANR	2195756	Identifier	dprintf		2195502	0					
ANR	2195757	ArgumentList	D_ALWAYS		2195502	1					
ANR	2195758	Argument	D_ALWAYS		2195502	0					
ANR	2195759	Identifier	D_ALWAYS		2195502	0					
ANR	2195760	Argument	"""Failed to run %s: %s\\n"""		2195502	1					
ANR	2195761	PrimaryExpression	"""Failed to run %s: %s\\n"""		2195502	0					
ANR	2195762	Argument	m_wakeup_cmd . Value ( )		2195502	2					
ANR	2195763	CallExpression	m_wakeup_cmd . Value ( )		2195502	0					
ANR	2195764	Callee	m_wakeup_cmd . Value		2195502	0					
ANR	2195765	MemberAccess	m_wakeup_cmd . Value		2195502	0					
ANR	2195766	Identifier	m_wakeup_cmd		2195502	0					
ANR	2195767	Identifier	Value		2195502	1					
ANR	2195768	ArgumentList			2195502	1					
ANR	2195769	Argument	strerror ( errno )		2195502	3					
ANR	2195770	CallExpression	strerror ( errno )		2195502	0					
ANR	2195771	Callee	strerror		2195502	0					
ANR	2195772	Identifier	strerror		2195502	0					
ANR	2195773	ArgumentList	errno		2195502	1					
ANR	2195774	Argument	errno		2195502	0					
ANR	2195775	Identifier	errno		2195502	0					
ANR	2195776	ExpressionStatement	daemonCore -> Close_Pipe ( stdin_pipe_fds [ 1 ] )	267:2:6770:6811	2195502	1	True				
ANR	2195777	CallExpression	daemonCore -> Close_Pipe ( stdin_pipe_fds [ 1 ] )		2195502	0					
ANR	2195778	Callee	daemonCore -> Close_Pipe		2195502	0					
ANR	2195779	PtrMemberAccess	daemonCore -> Close_Pipe		2195502	0					
ANR	2195780	Identifier	daemonCore		2195502	0					
ANR	2195781	Identifier	Close_Pipe		2195502	1					
ANR	2195782	ArgumentList	stdin_pipe_fds [ 1 ]		2195502	1					
ANR	2195783	Argument	stdin_pipe_fds [ 1 ]		2195502	0					
ANR	2195784	ArrayIndexing	stdin_pipe_fds [ 1 ]		2195502	0					
ANR	2195785	Identifier	stdin_pipe_fds		2195502	0					
ANR	2195786	PrimaryExpression	1		2195502	1					
ANR	2195787	ExpressionStatement	daemonCore -> Close_Pipe ( stdout_pipe_fds [ 0 ] )	268:2:6815:6857	2195502	2	True				
ANR	2195788	CallExpression	daemonCore -> Close_Pipe ( stdout_pipe_fds [ 0 ] )		2195502	0					
ANR	2195789	Callee	daemonCore -> Close_Pipe		2195502	0					
ANR	2195790	PtrMemberAccess	daemonCore -> Close_Pipe		2195502	0					
ANR	2195791	Identifier	daemonCore		2195502	0					
ANR	2195792	Identifier	Close_Pipe		2195502	1					
ANR	2195793	ArgumentList	stdout_pipe_fds [ 0 ]		2195502	1					
ANR	2195794	Argument	stdout_pipe_fds [ 0 ]		2195502	0					
ANR	2195795	ArrayIndexing	stdout_pipe_fds [ 0 ]		2195502	0					
ANR	2195796	Identifier	stdout_pipe_fds		2195502	0					
ANR	2195797	PrimaryExpression	0		2195502	1					
ANR	2195798	ReturnStatement	return false ;	269:2:6861:6873	2195502	3	True				
ANR	2195799	Identifier	false		2195502	0					
ANR	2195800	IdentifierDeclStatement	MyString stdin_str ;	272:1:6880:6898	2195502	20	True				
ANR	2195801	IdentifierDecl	stdin_str		2195502	0					
ANR	2195802	IdentifierDeclType	MyString		2195502	0					
ANR	2195803	Identifier	stdin_str		2195502	1					
ANR	2195804	ExpressionStatement	startd_ad -> sPrint ( stdin_str )	273:1:6901:6929	2195502	21	True				
ANR	2195805	CallExpression	startd_ad -> sPrint ( stdin_str )		2195502	0					
ANR	2195806	Callee	startd_ad -> sPrint		2195502	0					
ANR	2195807	PtrMemberAccess	startd_ad -> sPrint		2195502	0					
ANR	2195808	Identifier	startd_ad		2195502	0					
ANR	2195809	Identifier	sPrint		2195502	1					
ANR	2195810	ArgumentList	stdin_str		2195502	1					
ANR	2195811	Argument	stdin_str		2195502	0					
ANR	2195812	Identifier	stdin_str		2195502	0					
ANR	2195813	IdentifierDeclStatement	"int n = daemonCore -> Write_Pipe ( stdin_pipe_fds [ 1 ] , stdin_str . Value ( ) , stdin_str . Length ( ) ) ;"	280:1:7185:7271	2195502	22	True				
ANR	2195814	IdentifierDecl	"n = daemonCore -> Write_Pipe ( stdin_pipe_fds [ 1 ] , stdin_str . Value ( ) , stdin_str . Length ( ) )"		2195502	0					
ANR	2195815	IdentifierDeclType	int		2195502	0					
ANR	2195816	Identifier	n		2195502	1					
ANR	2195817	AssignmentExpression	"n = daemonCore -> Write_Pipe ( stdin_pipe_fds [ 1 ] , stdin_str . Value ( ) , stdin_str . Length ( ) )"		2195502	2		=			
ANR	2195818	Identifier	n		2195502	0					
ANR	2195819	CallExpression	"daemonCore -> Write_Pipe ( stdin_pipe_fds [ 1 ] , stdin_str . Value ( ) , stdin_str . Length ( ) )"		2195502	1					
ANR	2195820	Callee	daemonCore -> Write_Pipe		2195502	0					
ANR	2195821	PtrMemberAccess	daemonCore -> Write_Pipe		2195502	0					
ANR	2195822	Identifier	daemonCore		2195502	0					
ANR	2195823	Identifier	Write_Pipe		2195502	1					
ANR	2195824	ArgumentList	stdin_pipe_fds [ 1 ]		2195502	1					
ANR	2195825	Argument	stdin_pipe_fds [ 1 ]		2195502	0					
ANR	2195826	ArrayIndexing	stdin_pipe_fds [ 1 ]		2195502	0					
ANR	2195827	Identifier	stdin_pipe_fds		2195502	0					
ANR	2195828	PrimaryExpression	1		2195502	1					
ANR	2195829	Argument	stdin_str . Value ( )		2195502	1					
ANR	2195830	CallExpression	stdin_str . Value ( )		2195502	0					
ANR	2195831	Callee	stdin_str . Value		2195502	0					
ANR	2195832	MemberAccess	stdin_str . Value		2195502	0					
ANR	2195833	Identifier	stdin_str		2195502	0					
ANR	2195834	Identifier	Value		2195502	1					
ANR	2195835	ArgumentList			2195502	1					
ANR	2195836	Argument	stdin_str . Length ( )		2195502	2					
ANR	2195837	CallExpression	stdin_str . Length ( )		2195502	0					
ANR	2195838	Callee	stdin_str . Length		2195502	0					
ANR	2195839	MemberAccess	stdin_str . Length		2195502	0					
ANR	2195840	Identifier	stdin_str		2195502	0					
ANR	2195841	Identifier	Length		2195502	1					
ANR	2195842	ArgumentList			2195502	1					
ANR	2195843	IfStatement	if ( n != stdin_str . Length ( ) )		2195502	23					
ANR	2195844	Condition	n != stdin_str . Length ( )	281:5:7278:7300	2195502	0	True				
ANR	2195845	EqualityExpression	n != stdin_str . Length ( )		2195502	0		!=			
ANR	2195846	Identifier	n		2195502	0					
ANR	2195847	CallExpression	stdin_str . Length ( )		2195502	1					
ANR	2195848	Callee	stdin_str . Length		2195502	0					
ANR	2195849	MemberAccess	stdin_str . Length		2195502	0					
ANR	2195850	Identifier	stdin_str		2195502	0					
ANR	2195851	Identifier	Length		2195502	1					
ANR	2195852	ArgumentList			2195502	1					
ANR	2195853	CompoundStatement		64:31:1739:1739	2195502	1					
ANR	2195854	ExpressionStatement	"dprintf ( D_ALWAYS , ""Rooster::wakeUp: failed to write to %s: %s\\n"" , m_wakeup_cmd . Value ( ) , strerror ( errno ) )"	282:2:7308:7415	2195502	0	True				
ANR	2195855	CallExpression	"dprintf ( D_ALWAYS , ""Rooster::wakeUp: failed to write to %s: %s\\n"" , m_wakeup_cmd . Value ( ) , strerror ( errno ) )"		2195502	0					
ANR	2195856	Callee	dprintf		2195502	0					
ANR	2195857	Identifier	dprintf		2195502	0					
ANR	2195858	ArgumentList	D_ALWAYS		2195502	1					
ANR	2195859	Argument	D_ALWAYS		2195502	0					
ANR	2195860	Identifier	D_ALWAYS		2195502	0					
ANR	2195861	Argument	"""Rooster::wakeUp: failed to write to %s: %s\\n"""		2195502	1					
ANR	2195862	PrimaryExpression	"""Rooster::wakeUp: failed to write to %s: %s\\n"""		2195502	0					
ANR	2195863	Argument	m_wakeup_cmd . Value ( )		2195502	2					
ANR	2195864	CallExpression	m_wakeup_cmd . Value ( )		2195502	0					
ANR	2195865	Callee	m_wakeup_cmd . Value		2195502	0					
ANR	2195866	MemberAccess	m_wakeup_cmd . Value		2195502	0					
ANR	2195867	Identifier	m_wakeup_cmd		2195502	0					
ANR	2195868	Identifier	Value		2195502	1					
ANR	2195869	ArgumentList			2195502	1					
ANR	2195870	Argument	strerror ( errno )		2195502	3					
ANR	2195871	CallExpression	strerror ( errno )		2195502	0					
ANR	2195872	Callee	strerror		2195502	0					
ANR	2195873	Identifier	strerror		2195502	0					
ANR	2195874	ArgumentList	errno		2195502	1					
ANR	2195875	Argument	errno		2195502	0					
ANR	2195876	Identifier	errno		2195502	0					
ANR	2195877	ExpressionStatement	daemonCore -> Close_Pipe ( stdin_pipe_fds [ 1 ] )	284:2:7419:7460	2195502	1	True				
ANR	2195878	CallExpression	daemonCore -> Close_Pipe ( stdin_pipe_fds [ 1 ] )		2195502	0					
ANR	2195879	Callee	daemonCore -> Close_Pipe		2195502	0					
ANR	2195880	PtrMemberAccess	daemonCore -> Close_Pipe		2195502	0					
ANR	2195881	Identifier	daemonCore		2195502	0					
ANR	2195882	Identifier	Close_Pipe		2195502	1					
ANR	2195883	ArgumentList	stdin_pipe_fds [ 1 ]		2195502	1					
ANR	2195884	Argument	stdin_pipe_fds [ 1 ]		2195502	0					
ANR	2195885	ArrayIndexing	stdin_pipe_fds [ 1 ]		2195502	0					
ANR	2195886	Identifier	stdin_pipe_fds		2195502	0					
ANR	2195887	PrimaryExpression	1		2195502	1					
ANR	2195888	ExpressionStatement	daemonCore -> Close_Pipe ( stdout_pipe_fds [ 0 ] )	285:2:7464:7506	2195502	2	True				
ANR	2195889	CallExpression	daemonCore -> Close_Pipe ( stdout_pipe_fds [ 0 ] )		2195502	0					
ANR	2195890	Callee	daemonCore -> Close_Pipe		2195502	0					
ANR	2195891	PtrMemberAccess	daemonCore -> Close_Pipe		2195502	0					
ANR	2195892	Identifier	daemonCore		2195502	0					
ANR	2195893	Identifier	Close_Pipe		2195502	1					
ANR	2195894	ArgumentList	stdout_pipe_fds [ 0 ]		2195502	1					
ANR	2195895	Argument	stdout_pipe_fds [ 0 ]		2195502	0					
ANR	2195896	ArrayIndexing	stdout_pipe_fds [ 0 ]		2195502	0					
ANR	2195897	Identifier	stdout_pipe_fds		2195502	0					
ANR	2195898	PrimaryExpression	0		2195502	1					
ANR	2195899	ReturnStatement	return false ;	286:2:7510:7522	2195502	3	True				
ANR	2195900	Identifier	false		2195502	0					
ANR	2195901	ExpressionStatement	daemonCore -> Close_Pipe ( stdin_pipe_fds [ 1 ] )	290:1:7555:7596	2195502	24	True				
ANR	2195902	CallExpression	daemonCore -> Close_Pipe ( stdin_pipe_fds [ 1 ] )		2195502	0					
ANR	2195903	Callee	daemonCore -> Close_Pipe		2195502	0					
ANR	2195904	PtrMemberAccess	daemonCore -> Close_Pipe		2195502	0					
ANR	2195905	Identifier	daemonCore		2195502	0					
ANR	2195906	Identifier	Close_Pipe		2195502	1					
ANR	2195907	ArgumentList	stdin_pipe_fds [ 1 ]		2195502	1					
ANR	2195908	Argument	stdin_pipe_fds [ 1 ]		2195502	0					
ANR	2195909	ArrayIndexing	stdin_pipe_fds [ 1 ]		2195502	0					
ANR	2195910	Identifier	stdin_pipe_fds		2195502	0					
ANR	2195911	PrimaryExpression	1		2195502	1					
ANR	2195912	IdentifierDeclStatement	MyString stdout_str ;	292:1:7600:7619	2195502	25	True				
ANR	2195913	IdentifierDecl	stdout_str		2195502	0					
ANR	2195914	IdentifierDeclType	MyString		2195502	0					
ANR	2195915	Identifier	stdout_str		2195502	1					
ANR	2195916	WhileStatement	while ( true )		2195502	26					
ANR	2195917	Condition	true	293:8:7629:7632	2195502	0	True				
ANR	2195918	Identifier	true		2195502	0					
ANR	2195919	CompoundStatement		77:2:2075:2094	2195502	1					
ANR	2195920	IdentifierDeclStatement	char pipe_buf [ 1024 ] ;	294:2:7640:7659	2195502	0	True				
ANR	2195921	IdentifierDecl	pipe_buf [ 1024 ]		2195502	0					
ANR	2195922	IdentifierDeclType	char [ 1024 ]		2195502	0					
ANR	2195923	Identifier	pipe_buf		2195502	1					
ANR	2195924	PrimaryExpression	1024		2195502	2					
ANR	2195925	ExpressionStatement	"n = daemonCore -> Read_Pipe ( stdout_pipe_fds [ 0 ] , pipe_buf , 1023 )"	295:2:7663:7722	2195502	1	True				
ANR	2195926	AssignmentExpression	"n = daemonCore -> Read_Pipe ( stdout_pipe_fds [ 0 ] , pipe_buf , 1023 )"		2195502	0		=			
ANR	2195927	Identifier	n		2195502	0					
ANR	2195928	CallExpression	"daemonCore -> Read_Pipe ( stdout_pipe_fds [ 0 ] , pipe_buf , 1023 )"		2195502	1					
ANR	2195929	Callee	daemonCore -> Read_Pipe		2195502	0					
ANR	2195930	PtrMemberAccess	daemonCore -> Read_Pipe		2195502	0					
ANR	2195931	Identifier	daemonCore		2195502	0					
ANR	2195932	Identifier	Read_Pipe		2195502	1					
ANR	2195933	ArgumentList	stdout_pipe_fds [ 0 ]		2195502	1					
ANR	2195934	Argument	stdout_pipe_fds [ 0 ]		2195502	0					
ANR	2195935	ArrayIndexing	stdout_pipe_fds [ 0 ]		2195502	0					
ANR	2195936	Identifier	stdout_pipe_fds		2195502	0					
ANR	2195937	PrimaryExpression	0		2195502	1					
ANR	2195938	Argument	pipe_buf		2195502	1					
ANR	2195939	Identifier	pipe_buf		2195502	0					
ANR	2195940	Argument	1023		2195502	2					
ANR	2195941	PrimaryExpression	1023		2195502	0					
ANR	2195942	IfStatement	if ( n <= 0 )		2195502	2					
ANR	2195943	Condition	n <= 0	296:6:7730:7735	2195502	0	True				
ANR	2195944	RelationalExpression	n <= 0		2195502	0		<=			
ANR	2195945	Identifier	n		2195502	0					
ANR	2195946	PrimaryExpression	0		2195502	1					
ANR	2195947	CompoundStatement		79:15:2174:2174	2195502	1					
ANR	2195948	BreakStatement	break ;	297:3:7744:7749	2195502	0	True				
ANR	2195949	ExpressionStatement	ASSERT ( n < 1024 )	299:2:7757:7775	2195502	3	True				
ANR	2195950	CallExpression	ASSERT ( n < 1024 )		2195502	0					
ANR	2195951	Callee	ASSERT		2195502	0					
ANR	2195952	Identifier	ASSERT		2195502	0					
ANR	2195953	ArgumentList	n < 1024		2195502	1					
ANR	2195954	Argument	n < 1024		2195502	0					
ANR	2195955	RelationalExpression	n < 1024		2195502	0		<			
ANR	2195956	Identifier	n		2195502	0					
ANR	2195957	PrimaryExpression	1024		2195502	1					
ANR	2195958	ExpressionStatement	pipe_buf [ n ] = '\\0'	300:2:7779:7797	2195502	4	True				
ANR	2195959	AssignmentExpression	pipe_buf [ n ] = '\\0'		2195502	0		=			
ANR	2195960	ArrayIndexing	pipe_buf [ n ]		2195502	0					
ANR	2195961	Identifier	pipe_buf		2195502	0					
ANR	2195962	Identifier	n		2195502	1					
ANR	2195963	PrimaryExpression	'\\0'		2195502	1					
ANR	2195964	ExpressionStatement	stdout_str += pipe_buf	301:2:7801:7823	2195502	5	True				
ANR	2195965	AssignmentExpression	stdout_str += pipe_buf		2195502	0		+=			
ANR	2195966	Identifier	stdout_str		2195502	0					
ANR	2195967	Identifier	pipe_buf		2195502	1					
ANR	2195968	ExpressionStatement	daemonCore -> Close_Pipe ( stdout_pipe_fds [ 0 ] )	305:1:7858:7900	2195502	27	True				
ANR	2195969	CallExpression	daemonCore -> Close_Pipe ( stdout_pipe_fds [ 0 ] )		2195502	0					
ANR	2195970	Callee	daemonCore -> Close_Pipe		2195502	0					
ANR	2195971	PtrMemberAccess	daemonCore -> Close_Pipe		2195502	0					
ANR	2195972	Identifier	daemonCore		2195502	0					
ANR	2195973	Identifier	Close_Pipe		2195502	1					
ANR	2195974	ArgumentList	stdout_pipe_fds [ 0 ]		2195502	1					
ANR	2195975	Argument	stdout_pipe_fds [ 0 ]		2195502	0					
ANR	2195976	ArrayIndexing	stdout_pipe_fds [ 0 ]		2195502	0					
ANR	2195977	Identifier	stdout_pipe_fds		2195502	0					
ANR	2195978	PrimaryExpression	0		2195502	1					
ANR	2195979	IfStatement	if ( stdout_str . Length ( ) )		2195502	28					
ANR	2195980	Condition	stdout_str . Length ( )	307:5:7908:7926	2195502	0	True				
ANR	2195981	CallExpression	stdout_str . Length ( )		2195502	0					
ANR	2195982	Callee	stdout_str . Length		2195502	0					
ANR	2195983	MemberAccess	stdout_str . Length		2195502	0					
ANR	2195984	Identifier	stdout_str		2195502	0					
ANR	2195985	Identifier	Length		2195502	1					
ANR	2195986	ArgumentList			2195502	1					
ANR	2195987	CompoundStatement		90:27:2365:2365	2195502	1					
ANR	2195988	ExpressionStatement	"dprintf ( D_ALWAYS | D_NOHEADER , ""%s"" , stdout_str . Value ( ) )"	309:2:7975:8027	2195502	0	True				
ANR	2195989	CallExpression	"dprintf ( D_ALWAYS | D_NOHEADER , ""%s"" , stdout_str . Value ( ) )"		2195502	0					
ANR	2195990	Callee	dprintf		2195502	0					
ANR	2195991	Identifier	dprintf		2195502	0					
ANR	2195992	ArgumentList	D_ALWAYS | D_NOHEADER		2195502	1					
ANR	2195993	Argument	D_ALWAYS | D_NOHEADER		2195502	0					
ANR	2195994	InclusiveOrExpression	D_ALWAYS | D_NOHEADER		2195502	0		|			
ANR	2195995	Identifier	D_ALWAYS		2195502	0					
ANR	2195996	Identifier	D_NOHEADER		2195502	1					
ANR	2195997	Argument	"""%s"""		2195502	1					
ANR	2195998	PrimaryExpression	"""%s"""		2195502	0					
ANR	2195999	Argument	stdout_str . Value ( )		2195502	2					
ANR	2196000	CallExpression	stdout_str . Value ( )		2195502	0					
ANR	2196001	Callee	stdout_str . Value		2195502	0					
ANR	2196002	MemberAccess	stdout_str . Value		2195502	0					
ANR	2196003	Identifier	stdout_str		2195502	0					
ANR	2196004	Identifier	Value		2195502	1					
ANR	2196005	ArgumentList			2195502	1					
ANR	2196006	ReturnStatement	return true ;	316:1:8271:8282	2195502	29	True				
ANR	2196007	Identifier	true		2195502	0					
ANR	2196008	ReturnType	bool		2195502	1					
ANR	2196009	Identifier	Rooster :: wakeUp		2195502	2					
ANR	2196010	ParameterList	ClassAd * startd_ad		2195502	3					
ANR	2196011	Parameter	ClassAd * startd_ad	217:16:5544:5561	2195502	0	True				
ANR	2196012	ParameterType	ClassAd *		2195502	0					
ANR	2196013	Identifier	startd_ad		2195502	1					
ANR	2196014	CFGEntryNode	ENTRY		2195502		True				
ANR	2196015	CFGExitNode	EXIT		2195502		True				
ANR	2196016	Symbol	name . Value		2195502						
ANR	2196017	Symbol	daemonCore -> Create_Process		2195502						
ANR	2196018	Symbol	m_wakeup_args		2195502						
ANR	2196019	Symbol	stdout_str		2195502						
ANR	2196020	Symbol	ATTR_NAME		2195502						
ANR	2196021	Symbol	m_wakeup_cmd		2195502						
ANR	2196022	Symbol	stdin_pipe_fds		2195502						
ANR	2196023	Symbol	m_wakeup_args . GetArg		2195502						
ANR	2196024	Symbol	pid		2195502						
ANR	2196025	Symbol	* std_fds		2195502						
ANR	2196026	Symbol	std_fds		2195502						
ANR	2196027	Symbol	daemonCore		2195502						
ANR	2196028	Symbol	PRIV_CONDOR_FINAL		2195502						
ANR	2196029	Symbol	stdin_str . Length		2195502						
ANR	2196030	Symbol	startd_ad		2195502						
ANR	2196031	Symbol	stdout_pipe_fds		2195502						
ANR	2196032	Symbol	errno		2195502						
ANR	2196033	Symbol	NULL		2195502						
ANR	2196034	Symbol	m_wakeup_cmd . Value		2195502						
ANR	2196035	Symbol	stdin_str		2195502						
ANR	2196036	Symbol	D_ALWAYS		2195502						
ANR	2196037	Symbol	false		2195502						
ANR	2196038	Symbol	stdin_str . Value		2195502						
ANR	2196039	Symbol	n		2195502						
ANR	2196040	Symbol	pipe_buf		2195502						
ANR	2196041	Symbol	strerror		2195502						
ANR	2196042	Symbol	stdout_str . Value		2195502						
ANR	2196043	Symbol	daemonCore -> Read_Pipe		2195502						
ANR	2196044	Symbol	* daemonCore		2195502						
ANR	2196045	Symbol	name		2195502						
ANR	2196046	Symbol	true		2195502						
ANR	2196047	Symbol	* n		2195502						
ANR	2196048	Symbol	daemonCore -> Create_Pipe		2195502						
ANR	2196049	Symbol	FALSE		2195502						
ANR	2196050	Symbol	* stdout_pipe_fds		2195502						
ANR	2196051	Symbol	daemonCore -> Write_Pipe		2195502						
ANR	2196052	Symbol	stdout_str . Length		2195502						
ANR	2196053	Symbol	D_NOHEADER		2195502						
ANR	2196054	Symbol	* stdin_pipe_fds		2195502						
ANR	2196055	Symbol	* pipe_buf		2195502						
