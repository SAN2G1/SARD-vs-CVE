command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2985630	File	data/converged/CVE-2011-4930_htcondor/src_condor_credd_store_cred.cpp								
ANR	2985631	DeclStmt									
ANR	2985632	Decl							char	char [ 512 ]	Myproxy_pw
ANR	2985633	DeclStmt									
ANR	2985634	Decl							bool	bool	Read_Myproxy_pw_terminal
ANR	2985635	DeclStmt									
ANR	2985636	Decl							int	"int ( const char * , char * & , char * & , int & )"	parseMyProxyArgument
ANR	2985637	DeclStmt									
ANR	2985638	Decl							char	char * ( const char * )	prompt_password
ANR	2985639	DeclStmt									
ANR	2985640	Decl							char	char * ( const char * )	stdin_password
ANR	2985641	DeclStmt									
ANR	2985642	Decl							bool	"bool ( const char * filename , char * & data , int & size )"	read_file
ANR	2985643	Function	version	45:0:1559:1646							
ANR	2985644	FunctionDef	version ()		2985643	0					
ANR	2985645	CompoundStatement		47:0:1574:1646	2985643	0					
ANR	2985646	ExpressionStatement	"printf ( ""%s\\n%s\\n"" , CondorVersion ( ) , CondorPlatform ( ) )"	48:1:1577:1632	2985643	0	True				
ANR	2985647	CallExpression	"printf ( ""%s\\n%s\\n"" , CondorVersion ( ) , CondorPlatform ( ) )"		2985643	0					
ANR	2985648	Callee	printf		2985643	0					
ANR	2985649	Identifier	printf		2985643	0					
ANR	2985650	ArgumentList	"""%s\\n%s\\n"""		2985643	1					
ANR	2985651	Argument	"""%s\\n%s\\n"""		2985643	0					
ANR	2985652	PrimaryExpression	"""%s\\n%s\\n"""		2985643	0					
ANR	2985653	Argument	CondorVersion ( )		2985643	1					
ANR	2985654	CallExpression	CondorVersion ( )		2985643	0					
ANR	2985655	Callee	CondorVersion		2985643	0					
ANR	2985656	Identifier	CondorVersion		2985643	0					
ANR	2985657	ArgumentList			2985643	1					
ANR	2985658	Argument	CondorPlatform ( )		2985643	2					
ANR	2985659	CallExpression	CondorPlatform ( )		2985643	0					
ANR	2985660	Callee	CondorPlatform		2985643	0					
ANR	2985661	Identifier	CondorPlatform		2985643	0					
ANR	2985662	ArgumentList			2985643	1					
ANR	2985663	ExpressionStatement	exit ( 0 )	49:1:1635:1644	2985643	1	True				
ANR	2985664	CallExpression	exit ( 0 )		2985643	0					
ANR	2985665	Callee	exit		2985643	0					
ANR	2985666	Identifier	exit		2985643	0					
ANR	2985667	ArgumentList	0		2985643	1					
ANR	2985668	Argument	0		2985643	0					
ANR	2985669	PrimaryExpression	0		2985643	0					
ANR	2985670	ReturnType	void		2985643	1					
ANR	2985671	Identifier	version		2985643	2					
ANR	2985672	ParameterList			2985643	3					
ANR	2985673	CFGEntryNode	ENTRY		2985643		True				
ANR	2985674	CFGExitNode	EXIT		2985643		True				
ANR	2985675	Symbol	CondorVersion		2985643						
ANR	2985676	Symbol	CondorPlatform		2985643						
ANR	2985677	Function	usage	52:0:1649:2860							
ANR	2985678	FunctionDef	usage (const char * myName)		2985677	0					
ANR	2985679	CompoundStatement		54:0:1680:2860	2985677	0					
ANR	2985680	ExpressionStatement	"fprintf ( stderr , ""Usage: %s [options] [cmdfile]\\n"" , myName )"	55:1:1683:1743	2985677	0	True				
ANR	2985681	CallExpression	"fprintf ( stderr , ""Usage: %s [options] [cmdfile]\\n"" , myName )"		2985677	0					
ANR	2985682	Callee	fprintf		2985677	0					
ANR	2985683	Identifier	fprintf		2985677	0					
ANR	2985684	ArgumentList	stderr		2985677	1					
ANR	2985685	Argument	stderr		2985677	0					
ANR	2985686	Identifier	stderr		2985677	0					
ANR	2985687	Argument	"""Usage: %s [options] [cmdfile]\\n"""		2985677	1					
ANR	2985688	PrimaryExpression	"""Usage: %s [options] [cmdfile]\\n"""		2985677	0					
ANR	2985689	Argument	myName		2985677	2					
ANR	2985690	Identifier	myName		2985677	0					
ANR	2985691	ExpressionStatement	"fprintf ( stderr , ""      Valid options:\\n"" )"	56:1:1746:1789	2985677	1	True				
ANR	2985692	CallExpression	"fprintf ( stderr , ""      Valid options:\\n"" )"		2985677	0					
ANR	2985693	Callee	fprintf		2985677	0					
ANR	2985694	Identifier	fprintf		2985677	0					
ANR	2985695	ArgumentList	stderr		2985677	1					
ANR	2985696	Argument	stderr		2985677	0					
ANR	2985697	Identifier	stderr		2985677	0					
ANR	2985698	Argument	"""      Valid options:\\n"""		2985677	1					
ANR	2985699	PrimaryExpression	"""      Valid options:\\n"""		2985677	0					
ANR	2985700	ExpressionStatement	"fprintf ( stderr , ""      -d\\tdebug output\\n\\n"" )"	57:1:1792:1839	2985677	2	True				
ANR	2985701	CallExpression	"fprintf ( stderr , ""      -d\\tdebug output\\n\\n"" )"		2985677	0					
ANR	2985702	Callee	fprintf		2985677	0					
ANR	2985703	Identifier	fprintf		2985677	0					
ANR	2985704	ArgumentList	stderr		2985677	1					
ANR	2985705	Argument	stderr		2985677	0					
ANR	2985706	Identifier	stderr		2985677	0					
ANR	2985707	Argument	"""      -d\\tdebug output\\n\\n"""		2985677	1					
ANR	2985708	PrimaryExpression	"""      -d\\tdebug output\\n\\n"""		2985677	0					
ANR	2985709	ExpressionStatement	"fprintf ( stderr , ""      -n <host:port>\\tsubmit to the specified credd\\n"" )"	58:1:1842:1916	2985677	3	True				
ANR	2985710	CallExpression	"fprintf ( stderr , ""      -n <host:port>\\tsubmit to the specified credd\\n"" )"		2985677	0					
ANR	2985711	Callee	fprintf		2985677	0					
ANR	2985712	Identifier	fprintf		2985677	0					
ANR	2985713	ArgumentList	stderr		2985677	1					
ANR	2985714	Argument	stderr		2985677	0					
ANR	2985715	Identifier	stderr		2985677	0					
ANR	2985716	Argument	"""      -n <host:port>\\tsubmit to the specified credd\\n"""		2985677	1					
ANR	2985717	PrimaryExpression	"""      -n <host:port>\\tsubmit to the specified credd\\n"""		2985677	0					
ANR	2985718	ExpressionStatement	"fprintf ( stderr , ""      \\t(e.g. \\""-s myhost.cs.wisc.edu:1234\\"")\\n\\n"" )"	59:1:1919:1988	2985677	4	True				
ANR	2985719	CallExpression	"fprintf ( stderr , ""      \\t(e.g. \\""-s myhost.cs.wisc.edu:1234\\"")\\n\\n"" )"		2985677	0					
ANR	2985720	Callee	fprintf		2985677	0					
ANR	2985721	Identifier	fprintf		2985677	0					
ANR	2985722	ArgumentList	stderr		2985677	1					
ANR	2985723	Argument	stderr		2985677	0					
ANR	2985724	Identifier	stderr		2985677	0					
ANR	2985725	Argument	"""      \\t(e.g. \\""-s myhost.cs.wisc.edu:1234\\"")\\n\\n"""		2985677	1					
ANR	2985726	PrimaryExpression	"""      \\t(e.g. \\""-s myhost.cs.wisc.edu:1234\\"")\\n\\n"""		2985677	0					
ANR	2985727	ExpressionStatement	"fprintf ( stderr , ""      -t x509\\tspecify credential type\\n"" )"	60:1:1991:2051	2985677	5	True				
ANR	2985728	CallExpression	"fprintf ( stderr , ""      -t x509\\tspecify credential type\\n"" )"		2985677	0					
ANR	2985729	Callee	fprintf		2985677	0					
ANR	2985730	Identifier	fprintf		2985677	0					
ANR	2985731	ArgumentList	stderr		2985677	1					
ANR	2985732	Argument	stderr		2985677	0					
ANR	2985733	Identifier	stderr		2985677	0					
ANR	2985734	Argument	"""      -t x509\\tspecify credential type\\n"""		2985677	1					
ANR	2985735	PrimaryExpression	"""      -t x509\\tspecify credential type\\n"""		2985677	0					
ANR	2985736	ExpressionStatement	"fprintf ( stderr , ""      \\tonly the x509 type is currently available\\n"" )"	61:1:2054:2125	2985677	6	True				
ANR	2985737	CallExpression	"fprintf ( stderr , ""      \\tonly the x509 type is currently available\\n"" )"		2985677	0					
ANR	2985738	Callee	fprintf		2985677	0					
ANR	2985739	Identifier	fprintf		2985677	0					
ANR	2985740	ArgumentList	stderr		2985677	1					
ANR	2985741	Argument	stderr		2985677	0					
ANR	2985742	Identifier	stderr		2985677	0					
ANR	2985743	Argument	"""      \\tonly the x509 type is currently available\\n"""		2985677	1					
ANR	2985744	PrimaryExpression	"""      \\tonly the x509 type is currently available\\n"""		2985677	0					
ANR	2985745	ExpressionStatement	"fprintf ( stderr , ""      \\thowever this option is now REQUIRED\\n\\n"" )"	62:1:2128:2195	2985677	7	True				
ANR	2985746	CallExpression	"fprintf ( stderr , ""      \\thowever this option is now REQUIRED\\n\\n"" )"		2985677	0					
ANR	2985747	Callee	fprintf		2985677	0					
ANR	2985748	Identifier	fprintf		2985677	0					
ANR	2985749	ArgumentList	stderr		2985677	1					
ANR	2985750	Argument	stderr		2985677	0					
ANR	2985751	Identifier	stderr		2985677	0					
ANR	2985752	Argument	"""      \\thowever this option is now REQUIRED\\n\\n"""		2985677	1					
ANR	2985753	PrimaryExpression	"""      \\thowever this option is now REQUIRED\\n\\n"""		2985677	0					
ANR	2985754	ExpressionStatement	"fprintf ( stderr , ""      -f <file>\\tspecify where credential is stored\\n\\n"" )"	63:1:2198:2273	2985677	8	True				
ANR	2985755	CallExpression	"fprintf ( stderr , ""      -f <file>\\tspecify where credential is stored\\n\\n"" )"		2985677	0					
ANR	2985756	Callee	fprintf		2985677	0					
ANR	2985757	Identifier	fprintf		2985677	0					
ANR	2985758	ArgumentList	stderr		2985677	1					
ANR	2985759	Argument	stderr		2985677	0					
ANR	2985760	Identifier	stderr		2985677	0					
ANR	2985761	Argument	"""      -f <file>\\tspecify where credential is stored\\n\\n"""		2985677	1					
ANR	2985762	PrimaryExpression	"""      -f <file>\\tspecify where credential is stored\\n\\n"""		2985677	0					
ANR	2985763	ExpressionStatement	"fprintf ( stderr , ""      -N <name>\\tspecify credential name\\n\\n"" )"	64:1:2276:2340	2985677	9	True				
ANR	2985764	CallExpression	"fprintf ( stderr , ""      -N <name>\\tspecify credential name\\n\\n"" )"		2985677	0					
ANR	2985765	Callee	fprintf		2985677	0					
ANR	2985766	Identifier	fprintf		2985677	0					
ANR	2985767	ArgumentList	stderr		2985677	1					
ANR	2985768	Argument	stderr		2985677	0					
ANR	2985769	Identifier	stderr		2985677	0					
ANR	2985770	Argument	"""      -N <name>\\tspecify credential name\\n\\n"""		2985677	1					
ANR	2985771	PrimaryExpression	"""      -N <name>\\tspecify credential name\\n\\n"""		2985677	0					
ANR	2985772	ExpressionStatement	"fprintf ( stderr , ""      -m [user@]host[:port]\\tspecify MyProxy user/server\\n"" )"	65:1:2343:2422	2985677	10	True				
ANR	2985773	CallExpression	"fprintf ( stderr , ""      -m [user@]host[:port]\\tspecify MyProxy user/server\\n"" )"		2985677	0					
ANR	2985774	Callee	fprintf		2985677	0					
ANR	2985775	Identifier	fprintf		2985677	0					
ANR	2985776	ArgumentList	stderr		2985677	1					
ANR	2985777	Argument	stderr		2985677	0					
ANR	2985778	Identifier	stderr		2985677	0					
ANR	2985779	Argument	"""      -m [user@]host[:port]\\tspecify MyProxy user/server\\n"""		2985677	1					
ANR	2985780	PrimaryExpression	"""      -m [user@]host[:port]\\tspecify MyProxy user/server\\n"""		2985677	0					
ANR	2985781	ExpressionStatement	"fprintf ( stderr , ""      \\t(e.g. \\""-m wright@myproxy.cs.wisc.edu:1234\\"")\\n\\n"" )"	66:1:2425:2502	2985677	11	True				
ANR	2985782	CallExpression	"fprintf ( stderr , ""      \\t(e.g. \\""-m wright@myproxy.cs.wisc.edu:1234\\"")\\n\\n"" )"		2985677	0					
ANR	2985783	Callee	fprintf		2985677	0					
ANR	2985784	Identifier	fprintf		2985677	0					
ANR	2985785	ArgumentList	stderr		2985677	1					
ANR	2985786	Argument	stderr		2985677	0					
ANR	2985787	Identifier	stderr		2985677	0					
ANR	2985788	Argument	"""      \\t(e.g. \\""-m wright@myproxy.cs.wisc.edu:1234\\"")\\n\\n"""		2985677	1					
ANR	2985789	PrimaryExpression	"""      \\t(e.g. \\""-m wright@myproxy.cs.wisc.edu:1234\\"")\\n\\n"""		2985677	0					
ANR	2985790	ExpressionStatement	"fprintf ( stderr , ""      -D <DN>\\tspecify myproxy server DN (if not standard)\\n"" )"	67:1:2505:2586	2985677	12	True				
ANR	2985791	CallExpression	"fprintf ( stderr , ""      -D <DN>\\tspecify myproxy server DN (if not standard)\\n"" )"		2985677	0					
ANR	2985792	Callee	fprintf		2985677	0					
ANR	2985793	Identifier	fprintf		2985677	0					
ANR	2985794	ArgumentList	stderr		2985677	1					
ANR	2985795	Argument	stderr		2985677	0					
ANR	2985796	Identifier	stderr		2985677	0					
ANR	2985797	Argument	"""      -D <DN>\\tspecify myproxy server DN (if not standard)\\n"""		2985677	1					
ANR	2985798	PrimaryExpression	"""      -D <DN>\\tspecify myproxy server DN (if not standard)\\n"""		2985677	0					
ANR	2985799	ExpressionStatement	"fprintf ( stderr , ""      \\t(e.g. \\""-D \\'/CN=My/CN=Proxy/O=Host\\'\\"")\\n\\n"" )"	68:1:2589:2662	2985677	13	True				
ANR	2985800	CallExpression	"fprintf ( stderr , ""      \\t(e.g. \\""-D \\'/CN=My/CN=Proxy/O=Host\\'\\"")\\n\\n"" )"		2985677	0					
ANR	2985801	Callee	fprintf		2985677	0					
ANR	2985802	Identifier	fprintf		2985677	0					
ANR	2985803	ArgumentList	stderr		2985677	1					
ANR	2985804	Argument	stderr		2985677	0					
ANR	2985805	Identifier	stderr		2985677	0					
ANR	2985806	Argument	"""      \\t(e.g. \\""-D \\'/CN=My/CN=Proxy/O=Host\\'\\"")\\n\\n"""		2985677	1					
ANR	2985807	PrimaryExpression	"""      \\t(e.g. \\""-D \\'/CN=My/CN=Proxy/O=Host\\'\\"")\\n\\n"""		2985677	0					
ANR	2985808	ExpressionStatement	"fprintf ( stderr , ""      -S\\tread MyProxy password from standard input\\n\\n"" )"	69:1:2665:2740	2985677	14	True				
ANR	2985809	CallExpression	"fprintf ( stderr , ""      -S\\tread MyProxy password from standard input\\n\\n"" )"		2985677	0					
ANR	2985810	Callee	fprintf		2985677	0					
ANR	2985811	Identifier	fprintf		2985677	0					
ANR	2985812	ArgumentList	stderr		2985677	1					
ANR	2985813	Argument	stderr		2985677	0					
ANR	2985814	Identifier	stderr		2985677	0					
ANR	2985815	Argument	"""      -S\\tread MyProxy password from standard input\\n\\n"""		2985677	1					
ANR	2985816	PrimaryExpression	"""      -S\\tread MyProxy password from standard input\\n\\n"""		2985677	0					
ANR	2985817	ExpressionStatement	"fprintf ( stderr , ""      -v\\tprint version\\n\\n"" )"	70:1:2743:2791	2985677	15	True				
ANR	2985818	CallExpression	"fprintf ( stderr , ""      -v\\tprint version\\n\\n"" )"		2985677	0					
ANR	2985819	Callee	fprintf		2985677	0					
ANR	2985820	Identifier	fprintf		2985677	0					
ANR	2985821	ArgumentList	stderr		2985677	1					
ANR	2985822	Argument	stderr		2985677	0					
ANR	2985823	Identifier	stderr		2985677	0					
ANR	2985824	Argument	"""      -v\\tprint version\\n\\n"""		2985677	1					
ANR	2985825	PrimaryExpression	"""      -v\\tprint version\\n\\n"""		2985677	0					
ANR	2985826	ExpressionStatement	"fprintf ( stderr , ""      -h\\tprint this message\\n\\n"" )"	71:1:2794:2846	2985677	16	True				
ANR	2985827	CallExpression	"fprintf ( stderr , ""      -h\\tprint this message\\n\\n"" )"		2985677	0					
ANR	2985828	Callee	fprintf		2985677	0					
ANR	2985829	Identifier	fprintf		2985677	0					
ANR	2985830	ArgumentList	stderr		2985677	1					
ANR	2985831	Argument	stderr		2985677	0					
ANR	2985832	Identifier	stderr		2985677	0					
ANR	2985833	Argument	"""      -h\\tprint this message\\n\\n"""		2985677	1					
ANR	2985834	PrimaryExpression	"""      -h\\tprint this message\\n\\n"""		2985677	0					
ANR	2985835	ExpressionStatement	exit ( 1 )	72:1:2849:2858	2985677	17	True				
ANR	2985836	CallExpression	exit ( 1 )		2985677	0					
ANR	2985837	Callee	exit		2985677	0					
ANR	2985838	Identifier	exit		2985677	0					
ANR	2985839	ArgumentList	1		2985677	1					
ANR	2985840	Argument	1		2985677	0					
ANR	2985841	PrimaryExpression	1		2985677	0					
ANR	2985842	ReturnType	void		2985677	1					
ANR	2985843	Identifier	usage		2985677	2					
ANR	2985844	ParameterList	const char * myName		2985677	3					
ANR	2985845	Parameter	const char * myName	53:6:1660:1677	2985677	0	True				
ANR	2985846	ParameterType	const char *		2985677	0					
ANR	2985847	Identifier	myName		2985677	1					
ANR	2985848	CFGEntryNode	ENTRY		2985677		True				
ANR	2985849	CFGExitNode	EXIT		2985677		True				
ANR	2985850	Symbol	myName		2985677						
ANR	2985851	Symbol	stderr		2985677						
ANR	2985852	Function	main	76:0:2864:7319							
ANR	2985853	FunctionDef	"main (int argc , char * * argv)"		2985852	0					
ANR	2985854	CompoundStatement		77:0:2896:7319	2985852	0					
ANR	2985855	IdentifierDeclStatement	char * * ptr ;	78:1:2899:2910	2985852	0	True				
ANR	2985856	IdentifierDecl	* * ptr		2985852	0					
ANR	2985857	IdentifierDeclType	char * *		2985852	0					
ANR	2985858	Identifier	ptr		2985852	1					
ANR	2985859	IdentifierDeclStatement	const char * myName ;	79:1:2913:2932	2985852	1	True				
ANR	2985860	IdentifierDecl	* myName		2985852	0					
ANR	2985861	IdentifierDeclType	const char *		2985852	0					
ANR	2985862	Identifier	myName		2985852	1					
ANR	2985863	ExpressionStatement	"myName = strrchr ( argv [ 0 ] , DIR_DELIM_CHAR )"	82:1:2954:2997	2985852	2	True				
ANR	2985864	AssignmentExpression	"myName = strrchr ( argv [ 0 ] , DIR_DELIM_CHAR )"		2985852	0		=			
ANR	2985865	Identifier	myName		2985852	0					
ANR	2985866	CallExpression	"strrchr ( argv [ 0 ] , DIR_DELIM_CHAR )"		2985852	1					
ANR	2985867	Callee	strrchr		2985852	0					
ANR	2985868	Identifier	strrchr		2985852	0					
ANR	2985869	ArgumentList	argv [ 0 ]		2985852	1					
ANR	2985870	Argument	argv [ 0 ]		2985852	0					
ANR	2985871	ArrayIndexing	argv [ 0 ]		2985852	0					
ANR	2985872	Identifier	argv		2985852	0					
ANR	2985873	PrimaryExpression	0		2985852	1					
ANR	2985874	Argument	DIR_DELIM_CHAR		2985852	1					
ANR	2985875	Identifier	DIR_DELIM_CHAR		2985852	0					
ANR	2985876	IfStatement	if ( ! myName )		2985852	3					
ANR	2985877	Condition	! myName	83:5:3004:3010	2985852	0	True				
ANR	2985878	UnaryOperationExpression	! myName		2985852	0					
ANR	2985879	UnaryOperator	!		2985852	0					
ANR	2985880	Identifier	myName		2985852	1					
ANR	2985881	CompoundStatement		7:15:117:117	2985852	1					
ANR	2985882	ExpressionStatement	myName = argv [ 0 ]	84:2:3018:3034	2985852	0	True				
ANR	2985883	AssignmentExpression	myName = argv [ 0 ]		2985852	0		=			
ANR	2985884	Identifier	myName		2985852	0					
ANR	2985885	ArrayIndexing	argv [ 0 ]		2985852	1					
ANR	2985886	Identifier	argv		2985852	0					
ANR	2985887	PrimaryExpression	0		2985852	1					
ANR	2985888	ElseStatement	else		2985852	0					
ANR	2985889	CompoundStatement		9:8:147:147	2985852	0					
ANR	2985890	ExpressionStatement	myName ++	86:2:3048:3056	2985852	0	True				
ANR	2985891	PostIncDecOperationExpression	myName ++		2985852	0					
ANR	2985892	Identifier	myName		2985852	0					
ANR	2985893	IncDec	++		2985852	1					
ANR	2985894	IdentifierDeclStatement	int cred_type = 0 ;	89:1:3063:3080	2985852	4	True				
ANR	2985895	IdentifierDecl	cred_type = 0		2985852	0					
ANR	2985896	IdentifierDeclType	int		2985852	0					
ANR	2985897	Identifier	cred_type		2985852	1					
ANR	2985898	AssignmentExpression	cred_type = 0		2985852	2		=			
ANR	2985899	Identifier	cred_type		2985852	0					
ANR	2985900	PrimaryExpression	0		2985852	1					
ANR	2985901	IdentifierDeclStatement	char * cred_name = NULL ;	90:1:3083:3106	2985852	5	True				
ANR	2985902	IdentifierDecl	* cred_name = NULL		2985852	0					
ANR	2985903	IdentifierDeclType	char *		2985852	0					
ANR	2985904	Identifier	cred_name		2985852	1					
ANR	2985905	AssignmentExpression	* cred_name = NULL		2985852	2		=			
ANR	2985906	Identifier	NULL		2985852	0					
ANR	2985907	Identifier	NULL		2985852	1					
ANR	2985908	IdentifierDeclStatement	char * cred_file_name = NULL ;	91:1:3109:3137	2985852	6	True				
ANR	2985909	IdentifierDecl	* cred_file_name = NULL		2985852	0					
ANR	2985910	IdentifierDeclType	char *		2985852	0					
ANR	2985911	Identifier	cred_file_name		2985852	1					
ANR	2985912	AssignmentExpression	* cred_file_name = NULL		2985852	2		=			
ANR	2985913	Identifier	NULL		2985852	0					
ANR	2985914	Identifier	NULL		2985852	1					
ANR	2985915	IdentifierDeclStatement	char * myproxy_user = NULL ;	92:1:3140:3166	2985852	7	True				
ANR	2985916	IdentifierDecl	* myproxy_user = NULL		2985852	0					
ANR	2985917	IdentifierDeclType	char *		2985852	0					
ANR	2985918	Identifier	myproxy_user		2985852	1					
ANR	2985919	AssignmentExpression	* myproxy_user = NULL		2985852	2		=			
ANR	2985920	Identifier	NULL		2985852	0					
ANR	2985921	Identifier	NULL		2985852	1					
ANR	2985922	IdentifierDeclStatement	char * myproxy_host = NULL ;	94:1:3170:3196	2985852	8	True				
ANR	2985923	IdentifierDecl	* myproxy_host = NULL		2985852	0					
ANR	2985924	IdentifierDeclType	char *		2985852	0					
ANR	2985925	Identifier	myproxy_host		2985852	1					
ANR	2985926	AssignmentExpression	* myproxy_host = NULL		2985852	2		=			
ANR	2985927	Identifier	NULL		2985852	0					
ANR	2985928	Identifier	NULL		2985852	1					
ANR	2985929	IdentifierDeclStatement	int myproxy_port = 0 ;	95:1:3199:3219	2985852	9	True				
ANR	2985930	IdentifierDecl	myproxy_port = 0		2985852	0					
ANR	2985931	IdentifierDeclType	int		2985852	0					
ANR	2985932	Identifier	myproxy_port		2985852	1					
ANR	2985933	AssignmentExpression	myproxy_port = 0		2985852	2		=			
ANR	2985934	Identifier	myproxy_port		2985852	0					
ANR	2985935	PrimaryExpression	0		2985852	1					
ANR	2985936	IdentifierDeclStatement	char * myproxy_dn = NULL ;	97:1:3223:3247	2985852	10	True				
ANR	2985937	IdentifierDecl	* myproxy_dn = NULL		2985852	0					
ANR	2985938	IdentifierDeclType	char *		2985852	0					
ANR	2985939	Identifier	myproxy_dn		2985852	1					
ANR	2985940	AssignmentExpression	* myproxy_dn = NULL		2985852	2		=			
ANR	2985941	Identifier	NULL		2985852	0					
ANR	2985942	Identifier	NULL		2985852	1					
ANR	2985943	IdentifierDeclStatement	char * server_address = NULL ;	99:1:3251:3278	2985852	11	True				
ANR	2985944	IdentifierDecl	* server_address = NULL		2985852	0					
ANR	2985945	IdentifierDeclType	char *		2985852	0					
ANR	2985946	Identifier	server_address		2985852	1					
ANR	2985947	AssignmentExpression	* server_address = NULL		2985852	2		=			
ANR	2985948	Identifier	NULL		2985852	0					
ANR	2985949	Identifier	NULL		2985852	1					
ANR	2985950	ExpressionStatement	"myDistro -> Init ( argc , argv )"	102:1:3303:3330	2985852	12	True				
ANR	2985951	CallExpression	"myDistro -> Init ( argc , argv )"		2985852	0					
ANR	2985952	Callee	myDistro -> Init		2985852	0					
ANR	2985953	PtrMemberAccess	myDistro -> Init		2985852	0					
ANR	2985954	Identifier	myDistro		2985852	0					
ANR	2985955	Identifier	Init		2985852	1					
ANR	2985956	ArgumentList	argc		2985852	1					
ANR	2985957	Argument	argc		2985852	0					
ANR	2985958	Identifier	argc		2985852	0					
ANR	2985959	Argument	argv		2985852	1					
ANR	2985960	Identifier	argv		2985852	0					
ANR	2985961	ExpressionStatement	config ( )	103:1:3333:3341	2985852	13	True				
ANR	2985962	CallExpression	config ( )		2985852	0					
ANR	2985963	Callee	config		2985852	0					
ANR	2985964	Identifier	config		2985852	0					
ANR	2985965	ArgumentList			2985852	1					
ANR	2985966	ForStatement	"for ( ptr = argv + 1 , argc -- ; argc > 0 ; argc -- , ptr ++ )"		2985852	14					
ANR	2985967	ForInit	"ptr = argv + 1 , argc -- ;"	105:6:3350:3367	2985852	0	True				
ANR	2985968	Expression	"ptr = argv + 1 , argc --"		2985852	0					
ANR	2985969	AssignmentExpression	ptr = argv + 1		2985852	0		=			
ANR	2985970	Identifier	ptr		2985852	0					
ANR	2985971	AdditiveExpression	argv + 1		2985852	1		+			
ANR	2985972	Identifier	argv		2985852	0					
ANR	2985973	PrimaryExpression	1		2985852	1					
ANR	2985974	PostIncDecOperationExpression	argc --		2985852	1					
ANR	2985975	Identifier	argc		2985852	0					
ANR	2985976	IncDec	--		2985852	1					
ANR	2985977	Condition	argc > 0	105:25:3369:3376	2985852	1	True				
ANR	2985978	RelationalExpression	argc > 0		2985852	0		>			
ANR	2985979	Identifier	argc		2985852	0					
ANR	2985980	PrimaryExpression	0		2985852	1					
ANR	2985981	Expression	"argc -- , ptr ++"	105:35:3379:3390	2985852	2	True				
ANR	2985982	PostIncDecOperationExpression	argc --		2985852	0					
ANR	2985983	Identifier	argc		2985852	0					
ANR	2985984	IncDec	--		2985852	1					
ANR	2985985	PostIncDecOperationExpression	ptr ++		2985852	1					
ANR	2985986	Identifier	ptr		2985852	0					
ANR	2985987	IncDec	++		2985852	1					
ANR	2985988	CompoundStatement		29:49:496:496	2985852	3					
ANR	2985989	IfStatement	if ( ptr [ 0 ] [ 0 ] == '-' )		2985852	0					
ANR	2985990	Condition	ptr [ 0 ] [ 0 ] == '-'	106:7:3402:3417	2985852	0	True				
ANR	2985991	EqualityExpression	ptr [ 0 ] [ 0 ] == '-'		2985852	0		==			
ANR	2985992	ArrayIndexing	ptr [ 0 ] [ 0 ]		2985852	0					
ANR	2985993	ArrayIndexing	ptr [ 0 ]		2985852	0					
ANR	2985994	Identifier	ptr		2985852	0					
ANR	2985995	PrimaryExpression	0		2985852	1					
ANR	2985996	PrimaryExpression	0		2985852	1					
ANR	2985997	PrimaryExpression	'-'		2985852	1					
ANR	2985998	CompoundStatement		30:26:524:524	2985852	1					
ANR	2985999	SwitchStatement	switch ( ptr [ 0 ] [ 1 ] )		2985852	0					
ANR	2986000	Condition	ptr [ 0 ] [ 1 ]	107:12:3435:3443	2985852	0	True				
ANR	2986001	ArrayIndexing	ptr [ 0 ] [ 1 ]		2985852	0					
ANR	2986002	ArrayIndexing	ptr [ 0 ]		2985852	0					
ANR	2986003	Identifier	ptr		2985852	0					
ANR	2986004	PrimaryExpression	0		2985852	1					
ANR	2986005	PrimaryExpression	1		2985852	1					
ANR	2986006	CompoundStatement		31:24:550:550	2985852	1					
ANR	2986007	Label	case 'h' :	108:3:3452:3460	2985852	0	True				
ANR	2986008	ExpressionStatement	usage ( myName )	109:4:3466:3479	2985852	1	True				
ANR	2986009	CallExpression	usage ( myName )		2985852	0					
ANR	2986010	Callee	usage		2985852	0					
ANR	2986011	Identifier	usage		2985852	0					
ANR	2986012	ArgumentList	myName		2985852	1					
ANR	2986013	Argument	myName		2985852	0					
ANR	2986014	Identifier	myName		2985852	0					
ANR	2986015	ExpressionStatement	exit ( 0 )	110:4:3485:3492	2985852	2	True				
ANR	2986016	CallExpression	exit ( 0 )		2985852	0					
ANR	2986017	Callee	exit		2985852	0					
ANR	2986018	Identifier	exit		2985852	0					
ANR	2986019	ArgumentList	0		2985852	1					
ANR	2986020	Argument	0		2985852	0					
ANR	2986021	PrimaryExpression	0		2985852	0					
ANR	2986022	BreakStatement	break ;	111:4:3498:3503	2985852	3	True				
ANR	2986023	Label	case 'd' :	112:3:3508:3516	2985852	4	True				
ANR	2986024	ExpressionStatement	Termlog = 1	115:4:3550:3561	2985852	5	True				
ANR	2986025	AssignmentExpression	Termlog = 1		2985852	0		=			
ANR	2986026	Identifier	Termlog		2985852	0					
ANR	2986027	PrimaryExpression	1		2985852	1					
ANR	2986028	ExpressionStatement	"dprintf_config ( ""TOOL"" , get_param_functions ( ) )"	116:4:3567:3613	2985852	6	True				
ANR	2986029	CallExpression	"dprintf_config ( ""TOOL"" , get_param_functions ( ) )"		2985852	0					
ANR	2986030	Callee	dprintf_config		2985852	0					
ANR	2986031	Identifier	dprintf_config		2985852	0					
ANR	2986032	ArgumentList	"""TOOL"""		2985852	1					
ANR	2986033	Argument	"""TOOL"""		2985852	0					
ANR	2986034	PrimaryExpression	"""TOOL"""		2985852	0					
ANR	2986035	Argument	get_param_functions ( )		2985852	1					
ANR	2986036	CallExpression	get_param_functions ( )		2985852	0					
ANR	2986037	Callee	get_param_functions		2985852	0					
ANR	2986038	Identifier	get_param_functions		2985852	0					
ANR	2986039	ArgumentList			2985852	1					
ANR	2986040	BreakStatement	break ;	118:4:3620:3625	2985852	7	True				
ANR	2986041	Label	case 'S' :	119:3:3630:3638	2985852	8	True				
ANR	2986042	ExpressionStatement	Termlog = 1	122:4:3672:3683	2985852	9	True				
ANR	2986043	AssignmentExpression	Termlog = 1		2985852	0		=			
ANR	2986044	Identifier	Termlog		2985852	0					
ANR	2986045	PrimaryExpression	1		2985852	1					
ANR	2986046	ExpressionStatement	Read_Myproxy_pw_terminal = false	123:4:3689:3721	2985852	10	True				
ANR	2986047	AssignmentExpression	Read_Myproxy_pw_terminal = false		2985852	0		=			
ANR	2986048	Identifier	Read_Myproxy_pw_terminal		2985852	0					
ANR	2986049	Identifier	false		2985852	1					
ANR	2986050	BreakStatement	break ;	125:4:3728:3733	2985852	11	True				
ANR	2986051	Label	case 'n' :	126:3:3738:3746	2985852	12	True				
ANR	2986052	IfStatement	if ( ! ( -- argc ) || ! ( * ( ++ ptr ) ) )		2985852	13					
ANR	2986053	Condition	! ( -- argc ) || ! ( * ( ++ ptr ) )	127:8:3756:3779	2985852	0	True				
ANR	2986054	OrExpression	! ( -- argc ) || ! ( * ( ++ ptr ) )		2985852	0		||			
ANR	2986055	UnaryOperationExpression	! ( -- argc )		2985852	0					
ANR	2986056	UnaryOperator	!		2985852	0					
ANR	2986057	UnaryExpression	-- argc		2985852	1					
ANR	2986058	IncDec	--		2985852	0					
ANR	2986059	Identifier	argc		2985852	1					
ANR	2986060	UnaryOperationExpression	! ( * ( ++ ptr ) )		2985852	1					
ANR	2986061	UnaryOperator	!		2985852	0					
ANR	2986062	UnaryOperationExpression	* ( ++ ptr )		2985852	1					
ANR	2986063	UnaryOperator	*		2985852	0					
ANR	2986064	UnaryExpression	++ ptr		2985852	1					
ANR	2986065	IncDec	++		2985852	0					
ANR	2986066	Identifier	ptr		2985852	1					
ANR	2986067	CompoundStatement		51:35:886:886	2985852	1					
ANR	2986068	ExpressionStatement	"fprintf ( stderr , ""%s: -n requires another argument\\n"" , myName )"	128:5:3790:3861	2985852	0	True				
ANR	2986069	CallExpression	"fprintf ( stderr , ""%s: -n requires another argument\\n"" , myName )"		2985852	0					
ANR	2986070	Callee	fprintf		2985852	0					
ANR	2986071	Identifier	fprintf		2985852	0					
ANR	2986072	ArgumentList	stderr		2985852	1					
ANR	2986073	Argument	stderr		2985852	0					
ANR	2986074	Identifier	stderr		2985852	0					
ANR	2986075	Argument	"""%s: -n requires another argument\\n"""		2985852	1					
ANR	2986076	PrimaryExpression	"""%s: -n requires another argument\\n"""		2985852	0					
ANR	2986077	Argument	myName		2985852	2					
ANR	2986078	Identifier	myName		2985852	0					
ANR	2986079	ExpressionStatement	exit ( 1 )	130:5:3868:3875	2985852	1	True				
ANR	2986080	CallExpression	exit ( 1 )		2985852	0					
ANR	2986081	Callee	exit		2985852	0					
ANR	2986082	Identifier	exit		2985852	0					
ANR	2986083	ArgumentList	1		2985852	1					
ANR	2986084	Argument	1		2985852	0					
ANR	2986085	PrimaryExpression	1		2985852	0					
ANR	2986086	ExpressionStatement	server_address = strdup ( * ptr )	133:4:3889:3919	2985852	14	True				
ANR	2986087	AssignmentExpression	server_address = strdup ( * ptr )		2985852	0		=			
ANR	2986088	Identifier	server_address		2985852	0					
ANR	2986089	CallExpression	strdup ( * ptr )		2985852	1					
ANR	2986090	Callee	strdup		2985852	0					
ANR	2986091	Identifier	strdup		2985852	0					
ANR	2986092	ArgumentList	* ptr		2985852	1					
ANR	2986093	Argument	* ptr		2985852	0					
ANR	2986094	UnaryOperationExpression	* ptr		2985852	0					
ANR	2986095	UnaryOperator	*		2985852	0					
ANR	2986096	Identifier	ptr		2985852	1					
ANR	2986097	BreakStatement	break ;	135:4:3926:3931	2985852	15	True				
ANR	2986098	Label	case 't' :	136:3:3936:3944	2985852	16	True				
ANR	2986099	IfStatement	if ( ! ( -- argc ) || ! ( * ( ++ ptr ) ) )		2985852	17					
ANR	2986100	Condition	! ( -- argc ) || ! ( * ( ++ ptr ) )	137:8:3954:3977	2985852	0	True				
ANR	2986101	OrExpression	! ( -- argc ) || ! ( * ( ++ ptr ) )		2985852	0		||			
ANR	2986102	UnaryOperationExpression	! ( -- argc )		2985852	0					
ANR	2986103	UnaryOperator	!		2985852	0					
ANR	2986104	UnaryExpression	-- argc		2985852	1					
ANR	2986105	IncDec	--		2985852	0					
ANR	2986106	Identifier	argc		2985852	1					
ANR	2986107	UnaryOperationExpression	! ( * ( ++ ptr ) )		2985852	1					
ANR	2986108	UnaryOperator	!		2985852	0					
ANR	2986109	UnaryOperationExpression	* ( ++ ptr )		2985852	1					
ANR	2986110	UnaryOperator	*		2985852	0					
ANR	2986111	UnaryExpression	++ ptr		2985852	1					
ANR	2986112	IncDec	++		2985852	0					
ANR	2986113	Identifier	ptr		2985852	1					
ANR	2986114	CompoundStatement		61:35:1084:1084	2985852	1					
ANR	2986115	ExpressionStatement	"fprintf ( stderr , ""%s: -t requires another argument\\n"" , myName )"	138:5:3988:4059	2985852	0	True				
ANR	2986116	CallExpression	"fprintf ( stderr , ""%s: -t requires another argument\\n"" , myName )"		2985852	0					
ANR	2986117	Callee	fprintf		2985852	0					
ANR	2986118	Identifier	fprintf		2985852	0					
ANR	2986119	ArgumentList	stderr		2985852	1					
ANR	2986120	Argument	stderr		2985852	0					
ANR	2986121	Identifier	stderr		2985852	0					
ANR	2986122	Argument	"""%s: -t requires another argument\\n"""		2985852	1					
ANR	2986123	PrimaryExpression	"""%s: -t requires another argument\\n"""		2985852	0					
ANR	2986124	Argument	myName		2985852	2					
ANR	2986125	Identifier	myName		2985852	0					
ANR	2986126	ExpressionStatement	exit ( 1 )	140:5:4066:4073	2985852	1	True				
ANR	2986127	CallExpression	exit ( 1 )		2985852	0					
ANR	2986128	Callee	exit		2985852	0					
ANR	2986129	Identifier	exit		2985852	0					
ANR	2986130	ArgumentList	1		2985852	1					
ANR	2986131	Argument	1		2985852	0					
ANR	2986132	PrimaryExpression	1		2985852	0					
ANR	2986133	IfStatement	"if ( strcmp ( * ptr , ""x509"" ) == 0 )"		2985852	18					
ANR	2986134	Condition	"strcmp ( * ptr , ""x509"" ) == 0"	143:8:4090:4115	2985852	0	True				
ANR	2986135	EqualityExpression	"strcmp ( * ptr , ""x509"" ) == 0"		2985852	0		==			
ANR	2986136	CallExpression	"strcmp ( * ptr , ""x509"" )"		2985852	0					
ANR	2986137	Callee	strcmp		2985852	0					
ANR	2986138	Identifier	strcmp		2985852	0					
ANR	2986139	ArgumentList	* ptr		2985852	1					
ANR	2986140	Argument	* ptr		2985852	0					
ANR	2986141	UnaryOperationExpression	* ptr		2985852	0					
ANR	2986142	UnaryOperator	*		2985852	0					
ANR	2986143	Identifier	ptr		2985852	1					
ANR	2986144	Argument	"""x509"""		2985852	1					
ANR	2986145	PrimaryExpression	"""x509"""		2985852	0					
ANR	2986146	PrimaryExpression	0		2985852	1					
ANR	2986147	CompoundStatement		67:36:1221:1221	2985852	1					
ANR	2986148	ExpressionStatement	cred_type = X509_CREDENTIAL_TYPE	144:5:4125:4157	2985852	0	True				
ANR	2986149	AssignmentExpression	cred_type = X509_CREDENTIAL_TYPE		2985852	0		=			
ANR	2986150	Identifier	cred_type		2985852	0					
ANR	2986151	Identifier	X509_CREDENTIAL_TYPE		2985852	1					
ANR	2986152	ElseStatement	else		2985852	0					
ANR	2986153	CompoundStatement		69:11:1273:1273	2985852	0					
ANR	2986154	ExpressionStatement	"fprintf ( stderr , ""Invalid credential type %s\\n"" , * ptr )"	146:5:4177:4240	2985852	0	True				
ANR	2986155	CallExpression	"fprintf ( stderr , ""Invalid credential type %s\\n"" , * ptr )"		2985852	0					
ANR	2986156	Callee	fprintf		2985852	0					
ANR	2986157	Identifier	fprintf		2985852	0					
ANR	2986158	ArgumentList	stderr		2985852	1					
ANR	2986159	Argument	stderr		2985852	0					
ANR	2986160	Identifier	stderr		2985852	0					
ANR	2986161	Argument	"""Invalid credential type %s\\n"""		2985852	1					
ANR	2986162	PrimaryExpression	"""Invalid credential type %s\\n"""		2985852	0					
ANR	2986163	Argument	* ptr		2985852	2					
ANR	2986164	UnaryOperationExpression	* ptr		2985852	0					
ANR	2986165	UnaryOperator	*		2985852	0					
ANR	2986166	Identifier	ptr		2985852	1					
ANR	2986167	ExpressionStatement	exit ( 1 )	148:5:4247:4254	2985852	1	True				
ANR	2986168	CallExpression	exit ( 1 )		2985852	0					
ANR	2986169	Callee	exit		2985852	0					
ANR	2986170	Identifier	exit		2985852	0					
ANR	2986171	ArgumentList	1		2985852	1					
ANR	2986172	Argument	1		2985852	0					
ANR	2986173	PrimaryExpression	1		2985852	0					
ANR	2986174	BreakStatement	break ;	150:4:4266:4271	2985852	19	True				
ANR	2986175	Label	case 'f' :	151:3:4276:4284	2985852	20	True				
ANR	2986176	IfStatement	if ( ! ( -- argc ) || ! ( * ( ++ ptr ) ) )		2985852	21					
ANR	2986177	Condition	! ( -- argc ) || ! ( * ( ++ ptr ) )	152:8:4294:4317	2985852	0	True				
ANR	2986178	OrExpression	! ( -- argc ) || ! ( * ( ++ ptr ) )		2985852	0		||			
ANR	2986179	UnaryOperationExpression	! ( -- argc )		2985852	0					
ANR	2986180	UnaryOperator	!		2985852	0					
ANR	2986181	UnaryExpression	-- argc		2985852	1					
ANR	2986182	IncDec	--		2985852	0					
ANR	2986183	Identifier	argc		2985852	1					
ANR	2986184	UnaryOperationExpression	! ( * ( ++ ptr ) )		2985852	1					
ANR	2986185	UnaryOperator	!		2985852	0					
ANR	2986186	UnaryOperationExpression	* ( ++ ptr )		2985852	1					
ANR	2986187	UnaryOperator	*		2985852	0					
ANR	2986188	UnaryExpression	++ ptr		2985852	1					
ANR	2986189	IncDec	++		2985852	0					
ANR	2986190	Identifier	ptr		2985852	1					
ANR	2986191	CompoundStatement		76:35:1424:1424	2985852	1					
ANR	2986192	ExpressionStatement	"fprintf ( stderr , ""%s: -f requires another argument\\n"" , myName )"	153:5:4328:4399	2985852	0	True				
ANR	2986193	CallExpression	"fprintf ( stderr , ""%s: -f requires another argument\\n"" , myName )"		2985852	0					
ANR	2986194	Callee	fprintf		2985852	0					
ANR	2986195	Identifier	fprintf		2985852	0					
ANR	2986196	ArgumentList	stderr		2985852	1					
ANR	2986197	Argument	stderr		2985852	0					
ANR	2986198	Identifier	stderr		2985852	0					
ANR	2986199	Argument	"""%s: -f requires another argument\\n"""		2985852	1					
ANR	2986200	PrimaryExpression	"""%s: -f requires another argument\\n"""		2985852	0					
ANR	2986201	Argument	myName		2985852	2					
ANR	2986202	Identifier	myName		2985852	0					
ANR	2986203	ExpressionStatement	exit ( 1 )	155:5:4406:4413	2985852	1	True				
ANR	2986204	CallExpression	exit ( 1 )		2985852	0					
ANR	2986205	Callee	exit		2985852	0					
ANR	2986206	Identifier	exit		2985852	0					
ANR	2986207	ArgumentList	1		2985852	1					
ANR	2986208	Argument	1		2985852	0					
ANR	2986209	PrimaryExpression	1		2985852	0					
ANR	2986210	ExpressionStatement	cred_file_name = strdup ( * ptr )	157:4:4425:4455	2985852	22	True				
ANR	2986211	AssignmentExpression	cred_file_name = strdup ( * ptr )		2985852	0		=			
ANR	2986212	Identifier	cred_file_name		2985852	0					
ANR	2986213	CallExpression	strdup ( * ptr )		2985852	1					
ANR	2986214	Callee	strdup		2985852	0					
ANR	2986215	Identifier	strdup		2985852	0					
ANR	2986216	ArgumentList	* ptr		2985852	1					
ANR	2986217	Argument	* ptr		2985852	0					
ANR	2986218	UnaryOperationExpression	* ptr		2985852	0					
ANR	2986219	UnaryOperator	*		2985852	0					
ANR	2986220	Identifier	ptr		2985852	1					
ANR	2986221	BreakStatement	break ;	158:4:4461:4466	2985852	23	True				
ANR	2986222	Label	case 'N' :	159:3:4471:4479	2985852	24	True				
ANR	2986223	IfStatement	if ( ! ( -- argc ) || ! ( * ( ++ ptr ) ) )		2985852	25					
ANR	2986224	Condition	! ( -- argc ) || ! ( * ( ++ ptr ) )	160:8:4489:4512	2985852	0	True				
ANR	2986225	OrExpression	! ( -- argc ) || ! ( * ( ++ ptr ) )		2985852	0		||			
ANR	2986226	UnaryOperationExpression	! ( -- argc )		2985852	0					
ANR	2986227	UnaryOperator	!		2985852	0					
ANR	2986228	UnaryExpression	-- argc		2985852	1					
ANR	2986229	IncDec	--		2985852	0					
ANR	2986230	Identifier	argc		2985852	1					
ANR	2986231	UnaryOperationExpression	! ( * ( ++ ptr ) )		2985852	1					
ANR	2986232	UnaryOperator	!		2985852	0					
ANR	2986233	UnaryOperationExpression	* ( ++ ptr )		2985852	1					
ANR	2986234	UnaryOperator	*		2985852	0					
ANR	2986235	UnaryExpression	++ ptr		2985852	1					
ANR	2986236	IncDec	++		2985852	0					
ANR	2986237	Identifier	ptr		2985852	1					
ANR	2986238	CompoundStatement		84:35:1619:1619	2985852	1					
ANR	2986239	ExpressionStatement	"fprintf ( stderr , ""%s: -N requires another argument\\n"" , myName )"	161:5:4523:4594	2985852	0	True				
ANR	2986240	CallExpression	"fprintf ( stderr , ""%s: -N requires another argument\\n"" , myName )"		2985852	0					
ANR	2986241	Callee	fprintf		2985852	0					
ANR	2986242	Identifier	fprintf		2985852	0					
ANR	2986243	ArgumentList	stderr		2985852	1					
ANR	2986244	Argument	stderr		2985852	0					
ANR	2986245	Identifier	stderr		2985852	0					
ANR	2986246	Argument	"""%s: -N requires another argument\\n"""		2985852	1					
ANR	2986247	PrimaryExpression	"""%s: -N requires another argument\\n"""		2985852	0					
ANR	2986248	Argument	myName		2985852	2					
ANR	2986249	Identifier	myName		2985852	0					
ANR	2986250	ExpressionStatement	exit ( 1 )	163:5:4601:4608	2985852	1	True				
ANR	2986251	CallExpression	exit ( 1 )		2985852	0					
ANR	2986252	Callee	exit		2985852	0					
ANR	2986253	Identifier	exit		2985852	0					
ANR	2986254	ArgumentList	1		2985852	1					
ANR	2986255	Argument	1		2985852	0					
ANR	2986256	PrimaryExpression	1		2985852	0					
ANR	2986257	ExpressionStatement	cred_name = strdup ( * ptr )	165:4:4620:4645	2985852	26	True				
ANR	2986258	AssignmentExpression	cred_name = strdup ( * ptr )		2985852	0		=			
ANR	2986259	Identifier	cred_name		2985852	0					
ANR	2986260	CallExpression	strdup ( * ptr )		2985852	1					
ANR	2986261	Callee	strdup		2985852	0					
ANR	2986262	Identifier	strdup		2985852	0					
ANR	2986263	ArgumentList	* ptr		2985852	1					
ANR	2986264	Argument	* ptr		2985852	0					
ANR	2986265	UnaryOperationExpression	* ptr		2985852	0					
ANR	2986266	UnaryOperator	*		2985852	0					
ANR	2986267	Identifier	ptr		2985852	1					
ANR	2986268	BreakStatement	break ;	166:4:4651:4656	2985852	27	True				
ANR	2986269	Label	case 'm' :	168:3:4662:4670	2985852	28	True				
ANR	2986270	IfStatement	if ( ! ( -- argc ) || ! ( * ( ++ ptr ) ) )		2985852	29					
ANR	2986271	Condition	! ( -- argc ) || ! ( * ( ++ ptr ) )	169:8:4680:4703	2985852	0	True				
ANR	2986272	OrExpression	! ( -- argc ) || ! ( * ( ++ ptr ) )		2985852	0		||			
ANR	2986273	UnaryOperationExpression	! ( -- argc )		2985852	0					
ANR	2986274	UnaryOperator	!		2985852	0					
ANR	2986275	UnaryExpression	-- argc		2985852	1					
ANR	2986276	IncDec	--		2985852	0					
ANR	2986277	Identifier	argc		2985852	1					
ANR	2986278	UnaryOperationExpression	! ( * ( ++ ptr ) )		2985852	1					
ANR	2986279	UnaryOperator	!		2985852	0					
ANR	2986280	UnaryOperationExpression	* ( ++ ptr )		2985852	1					
ANR	2986281	UnaryOperator	*		2985852	0					
ANR	2986282	UnaryExpression	++ ptr		2985852	1					
ANR	2986283	IncDec	++		2985852	0					
ANR	2986284	Identifier	ptr		2985852	1					
ANR	2986285	CompoundStatement		93:35:1810:1810	2985852	1					
ANR	2986286	ExpressionStatement	"fprintf ( stderr , ""%s: -m requires another argument\\n"" , myName )"	170:5:4714:4785	2985852	0	True				
ANR	2986287	CallExpression	"fprintf ( stderr , ""%s: -m requires another argument\\n"" , myName )"		2985852	0					
ANR	2986288	Callee	fprintf		2985852	0					
ANR	2986289	Identifier	fprintf		2985852	0					
ANR	2986290	ArgumentList	stderr		2985852	1					
ANR	2986291	Argument	stderr		2985852	0					
ANR	2986292	Identifier	stderr		2985852	0					
ANR	2986293	Argument	"""%s: -m requires another argument\\n"""		2985852	1					
ANR	2986294	PrimaryExpression	"""%s: -m requires another argument\\n"""		2985852	0					
ANR	2986295	Argument	myName		2985852	2					
ANR	2986296	Identifier	myName		2985852	0					
ANR	2986297	ExpressionStatement	exit ( 1 )	172:5:4792:4799	2985852	1	True				
ANR	2986298	CallExpression	exit ( 1 )		2985852	0					
ANR	2986299	Callee	exit		2985852	0					
ANR	2986300	Identifier	exit		2985852	0					
ANR	2986301	ArgumentList	1		2985852	1					
ANR	2986302	Argument	1		2985852	0					
ANR	2986303	PrimaryExpression	1		2985852	0					
ANR	2986304	ExpressionStatement	"parseMyProxyArgument ( * ptr , myproxy_user , myproxy_host , myproxy_port )"	175:4:4813:4882	2985852	30	True				
ANR	2986305	CallExpression	"parseMyProxyArgument ( * ptr , myproxy_user , myproxy_host , myproxy_port )"		2985852	0					
ANR	2986306	Callee	parseMyProxyArgument		2985852	0					
ANR	2986307	Identifier	parseMyProxyArgument		2985852	0					
ANR	2986308	ArgumentList	* ptr		2985852	1					
ANR	2986309	Argument	* ptr		2985852	0					
ANR	2986310	UnaryOperationExpression	* ptr		2985852	0					
ANR	2986311	UnaryOperator	*		2985852	0					
ANR	2986312	Identifier	ptr		2985852	1					
ANR	2986313	Argument	myproxy_user		2985852	1					
ANR	2986314	Identifier	myproxy_user		2985852	0					
ANR	2986315	Argument	myproxy_host		2985852	2					
ANR	2986316	Identifier	myproxy_host		2985852	0					
ANR	2986317	Argument	myproxy_port		2985852	3					
ANR	2986318	Identifier	myproxy_port		2985852	0					
ANR	2986319	BreakStatement	break ;	176:4:4888:4893	2985852	31	True				
ANR	2986320	Label	case 'D' :	177:3:4898:4906	2985852	32	True				
ANR	2986321	IfStatement	if ( ! ( -- argc ) || ! ( * ( ++ ptr ) ) )		2985852	33					
ANR	2986322	Condition	! ( -- argc ) || ! ( * ( ++ ptr ) )	178:8:4916:4939	2985852	0	True				
ANR	2986323	OrExpression	! ( -- argc ) || ! ( * ( ++ ptr ) )		2985852	0		||			
ANR	2986324	UnaryOperationExpression	! ( -- argc )		2985852	0					
ANR	2986325	UnaryOperator	!		2985852	0					
ANR	2986326	UnaryExpression	-- argc		2985852	1					
ANR	2986327	IncDec	--		2985852	0					
ANR	2986328	Identifier	argc		2985852	1					
ANR	2986329	UnaryOperationExpression	! ( * ( ++ ptr ) )		2985852	1					
ANR	2986330	UnaryOperator	!		2985852	0					
ANR	2986331	UnaryOperationExpression	* ( ++ ptr )		2985852	1					
ANR	2986332	UnaryOperator	*		2985852	0					
ANR	2986333	UnaryExpression	++ ptr		2985852	1					
ANR	2986334	IncDec	++		2985852	0					
ANR	2986335	Identifier	ptr		2985852	1					
ANR	2986336	CompoundStatement		102:35:2046:2046	2985852	1					
ANR	2986337	ExpressionStatement	"fprintf ( stderr , ""%s: -D requires another argument\\n"" , myName )"	179:5:4950:5021	2985852	0	True				
ANR	2986338	CallExpression	"fprintf ( stderr , ""%s: -D requires another argument\\n"" , myName )"		2985852	0					
ANR	2986339	Callee	fprintf		2985852	0					
ANR	2986340	Identifier	fprintf		2985852	0					
ANR	2986341	ArgumentList	stderr		2985852	1					
ANR	2986342	Argument	stderr		2985852	0					
ANR	2986343	Identifier	stderr		2985852	0					
ANR	2986344	Argument	"""%s: -D requires another argument\\n"""		2985852	1					
ANR	2986345	PrimaryExpression	"""%s: -D requires another argument\\n"""		2985852	0					
ANR	2986346	Argument	myName		2985852	2					
ANR	2986347	Identifier	myName		2985852	0					
ANR	2986348	ExpressionStatement	exit ( 1 )	181:5:5028:5035	2985852	1	True				
ANR	2986349	CallExpression	exit ( 1 )		2985852	0					
ANR	2986350	Callee	exit		2985852	0					
ANR	2986351	Identifier	exit		2985852	0					
ANR	2986352	ArgumentList	1		2985852	1					
ANR	2986353	Argument	1		2985852	0					
ANR	2986354	PrimaryExpression	1		2985852	0					
ANR	2986355	ExpressionStatement	myproxy_dn = strdup ( * ptr )	183:4:5047:5073	2985852	34	True				
ANR	2986356	AssignmentExpression	myproxy_dn = strdup ( * ptr )		2985852	0		=			
ANR	2986357	Identifier	myproxy_dn		2985852	0					
ANR	2986358	CallExpression	strdup ( * ptr )		2985852	1					
ANR	2986359	Callee	strdup		2985852	0					
ANR	2986360	Identifier	strdup		2985852	0					
ANR	2986361	ArgumentList	* ptr		2985852	1					
ANR	2986362	Argument	* ptr		2985852	0					
ANR	2986363	UnaryOperationExpression	* ptr		2985852	0					
ANR	2986364	UnaryOperator	*		2985852	0					
ANR	2986365	Identifier	ptr		2985852	1					
ANR	2986366	BreakStatement	break ;	184:4:5079:5084	2985852	35	True				
ANR	2986367	Label	case 'v' :	186:3:5090:5098	2985852	36	True				
ANR	2986368	ExpressionStatement	version ( )	187:4:5104:5113	2985852	37	True				
ANR	2986369	CallExpression	version ( )		2985852	0					
ANR	2986370	Callee	version		2985852	0					
ANR	2986371	Identifier	version		2985852	0					
ANR	2986372	ArgumentList			2985852	1					
ANR	2986373	BreakStatement	break ;	188:4:5150:5155	2985852	38	True				
ANR	2986374	Label	default :	190:3:5161:5168	2985852	39	True				
ANR	2986375	Identifier	default		2985852	0					
ANR	2986376	ExpressionStatement	"fprintf ( stderr , ""%s: Unknown option %s\\n"" , myName , * ptr )"	191:4:5174:5238	2985852	40	True				
ANR	2986377	CallExpression	"fprintf ( stderr , ""%s: Unknown option %s\\n"" , myName , * ptr )"		2985852	0					
ANR	2986378	Callee	fprintf		2985852	0					
ANR	2986379	Identifier	fprintf		2985852	0					
ANR	2986380	ArgumentList	stderr		2985852	1					
ANR	2986381	Argument	stderr		2985852	0					
ANR	2986382	Identifier	stderr		2985852	0					
ANR	2986383	Argument	"""%s: Unknown option %s\\n"""		2985852	1					
ANR	2986384	PrimaryExpression	"""%s: Unknown option %s\\n"""		2985852	0					
ANR	2986385	Argument	myName		2985852	2					
ANR	2986386	Identifier	myName		2985852	0					
ANR	2986387	Argument	* ptr		2985852	3					
ANR	2986388	UnaryOperationExpression	* ptr		2985852	0					
ANR	2986389	UnaryOperator	*		2985852	0					
ANR	2986390	Identifier	ptr		2985852	1					
ANR	2986391	ExpressionStatement	usage ( myName )	193:4:5244:5257	2985852	41	True				
ANR	2986392	CallExpression	usage ( myName )		2985852	0					
ANR	2986393	Callee	usage		2985852	0					
ANR	2986394	Identifier	usage		2985852	0					
ANR	2986395	ArgumentList	myName		2985852	1					
ANR	2986396	Argument	myName		2985852	0					
ANR	2986397	Identifier	myName		2985852	0					
ANR	2986398	ExpressionStatement	exit ( 1 )	194:4:5263:5270	2985852	42	True				
ANR	2986399	CallExpression	exit ( 1 )		2985852	0					
ANR	2986400	Callee	exit		2985852	0					
ANR	2986401	Identifier	exit		2985852	0					
ANR	2986402	ArgumentList	1		2985852	1					
ANR	2986403	Argument	1		2985852	0					
ANR	2986404	PrimaryExpression	1		2985852	0					
ANR	2986405	IfStatement	if ( ( cred_file_name == NULL ) || ( cred_type == 0 ) )		2985852	15					
ANR	2986406	Condition	( cred_file_name == NULL ) || ( cred_type == 0 )	199:5:5301:5346	2985852	0	True				
ANR	2986407	OrExpression	( cred_file_name == NULL ) || ( cred_type == 0 )		2985852	0		||			
ANR	2986408	EqualityExpression	cred_file_name == NULL		2985852	0		==			
ANR	2986409	Identifier	cred_file_name		2985852	0					
ANR	2986410	Identifier	NULL		2985852	1					
ANR	2986411	EqualityExpression	cred_type == 0		2985852	1		==			
ANR	2986412	Identifier	cred_type		2985852	0					
ANR	2986413	PrimaryExpression	0		2985852	1					
ANR	2986414	CompoundStatement		123:53:2452:2452	2985852	1					
ANR	2986415	ExpressionStatement	"fprintf ( stderr , ""Credential filename or type not specified\\n"" )"	200:2:5353:5417	2985852	0	True				
ANR	2986416	CallExpression	"fprintf ( stderr , ""Credential filename or type not specified\\n"" )"		2985852	0					
ANR	2986417	Callee	fprintf		2985852	0					
ANR	2986418	Identifier	fprintf		2985852	0					
ANR	2986419	ArgumentList	stderr		2985852	1					
ANR	2986420	Argument	stderr		2985852	0					
ANR	2986421	Identifier	stderr		2985852	0					
ANR	2986422	Argument	"""Credential filename or type not specified\\n"""		2985852	1					
ANR	2986423	PrimaryExpression	"""Credential filename or type not specified\\n"""		2985852	0					
ANR	2986424	ExpressionStatement	exit ( 1 )	201:2:5421:5429	2985852	1	True				
ANR	2986425	CallExpression	exit ( 1 )		2985852	0					
ANR	2986426	Callee	exit		2985852	0					
ANR	2986427	Identifier	exit		2985852	0					
ANR	2986428	ArgumentList	1		2985852	1					
ANR	2986429	Argument	1		2985852	0					
ANR	2986430	PrimaryExpression	1		2985852	0					
ANR	2986431	IdentifierDeclStatement	Credential * cred = NULL ;	205:4:5440:5464	2985852	16	True				
ANR	2986432	IdentifierDecl	* cred = NULL		2985852	0					
ANR	2986433	IdentifierDeclType	Credential *		2985852	0					
ANR	2986434	Identifier	cred		2985852	1					
ANR	2986435	AssignmentExpression	* cred = NULL		2985852	2		=			
ANR	2986436	Identifier	NULL		2985852	0					
ANR	2986437	Identifier	NULL		2985852	1					
ANR	2986438	IfStatement	if ( cred_type == X509_CREDENTIAL_TYPE )		2985852	17					
ANR	2986439	Condition	cred_type == X509_CREDENTIAL_TYPE	206:5:5471:5503	2985852	0	True				
ANR	2986440	EqualityExpression	cred_type == X509_CREDENTIAL_TYPE		2985852	0		==			
ANR	2986441	Identifier	cred_type		2985852	0					
ANR	2986442	Identifier	X509_CREDENTIAL_TYPE		2985852	1					
ANR	2986443	CompoundStatement		130:40:2609:2609	2985852	1					
ANR	2986444	ExpressionStatement	cred = new X509Credential ( )	207:2:5510:5537	2985852	0	True				
ANR	2986445	AssignmentExpression	cred = new X509Credential ( )		2985852	0		=			
ANR	2986446	Identifier	cred		2985852	0					
ANR	2986447	UnaryExpression	new X509Credential ( )		2985852	1					
ANR	2986448	ElseStatement	else		2985852	0					
ANR	2986449	CompoundStatement		132:8:2650:2650	2985852	0					
ANR	2986450	ExpressionStatement	"fprintf ( stderr , ""Invalid credential type\\n"" )"	209:2:5551:5597	2985852	0	True				
ANR	2986451	CallExpression	"fprintf ( stderr , ""Invalid credential type\\n"" )"		2985852	0					
ANR	2986452	Callee	fprintf		2985852	0					
ANR	2986453	Identifier	fprintf		2985852	0					
ANR	2986454	ArgumentList	stderr		2985852	1					
ANR	2986455	Argument	stderr		2985852	0					
ANR	2986456	Identifier	stderr		2985852	0					
ANR	2986457	Argument	"""Invalid credential type\\n"""		2985852	1					
ANR	2986458	PrimaryExpression	"""Invalid credential type\\n"""		2985852	0					
ANR	2986459	ExpressionStatement	exit ( 1 )	210:2:5601:5609	2985852	1	True				
ANR	2986460	CallExpression	exit ( 1 )		2985852	0					
ANR	2986461	Callee	exit		2985852	0					
ANR	2986462	Identifier	exit		2985852	0					
ANR	2986463	ArgumentList	1		2985852	1					
ANR	2986464	Argument	1		2985852	0					
ANR	2986465	PrimaryExpression	1		2985852	0					
ANR	2986466	IdentifierDeclStatement	char * data = NULL ;	214:1:5621:5639	2985852	18	True				
ANR	2986467	IdentifierDecl	* data = NULL		2985852	0					
ANR	2986468	IdentifierDeclType	char *		2985852	0					
ANR	2986469	Identifier	data		2985852	1					
ANR	2986470	AssignmentExpression	* data = NULL		2985852	2		=			
ANR	2986471	Identifier	NULL		2985852	0					
ANR	2986472	Identifier	NULL		2985852	1					
ANR	2986473	IdentifierDeclStatement	int data_size ;	215:1:5642:5655	2985852	19	True				
ANR	2986474	IdentifierDecl	data_size		2985852	0					
ANR	2986475	IdentifierDeclType	int		2985852	0					
ANR	2986476	Identifier	data_size		2985852	1					
ANR	2986477	IfStatement	"if ( ! read_file ( cred_file_name , data , data_size ) )"		2985852	20					
ANR	2986478	Condition	"! read_file ( cred_file_name , data , data_size )"	216:5:5662:5705	2985852	0	True				
ANR	2986479	UnaryOperationExpression	"! read_file ( cred_file_name , data , data_size )"		2985852	0					
ANR	2986480	UnaryOperator	!		2985852	0					
ANR	2986481	CallExpression	"read_file ( cred_file_name , data , data_size )"		2985852	1					
ANR	2986482	Callee	read_file		2985852	0					
ANR	2986483	Identifier	read_file		2985852	0					
ANR	2986484	ArgumentList	cred_file_name		2985852	1					
ANR	2986485	Argument	cred_file_name		2985852	0					
ANR	2986486	Identifier	cred_file_name		2985852	0					
ANR	2986487	Argument	data		2985852	1					
ANR	2986488	Identifier	data		2985852	0					
ANR	2986489	Argument	data_size		2985852	2					
ANR	2986490	Identifier	data_size		2985852	0					
ANR	2986491	CompoundStatement		140:51:2811:2811	2985852	1					
ANR	2986492	ExpressionStatement	"fprintf ( stderr , ""Can't open %s\\n"" , cred_file_name )"	217:2:5712:5763	2985852	0	True				
ANR	2986493	CallExpression	"fprintf ( stderr , ""Can't open %s\\n"" , cred_file_name )"		2985852	0					
ANR	2986494	Callee	fprintf		2985852	0					
ANR	2986495	Identifier	fprintf		2985852	0					
ANR	2986496	ArgumentList	stderr		2985852	1					
ANR	2986497	Argument	stderr		2985852	0					
ANR	2986498	Identifier	stderr		2985852	0					
ANR	2986499	Argument	"""Can't open %s\\n"""		2985852	1					
ANR	2986500	PrimaryExpression	"""Can't open %s\\n"""		2985852	0					
ANR	2986501	Argument	cred_file_name		2985852	2					
ANR	2986502	Identifier	cred_file_name		2985852	0					
ANR	2986503	ExpressionStatement	exit ( 1 )	218:2:5767:5775	2985852	1	True				
ANR	2986504	CallExpression	exit ( 1 )		2985852	0					
ANR	2986505	Callee	exit		2985852	0					
ANR	2986506	Identifier	exit		2985852	0					
ANR	2986507	ArgumentList	1		2985852	1					
ANR	2986508	Argument	1		2985852	0					
ANR	2986509	PrimaryExpression	1		2985852	0					
ANR	2986510	ExpressionStatement	"cred -> SetData ( data , data_size )"	221:1:5782:5813	2985852	21	True				
ANR	2986511	CallExpression	"cred -> SetData ( data , data_size )"		2985852	0					
ANR	2986512	Callee	cred -> SetData		2985852	0					
ANR	2986513	PtrMemberAccess	cred -> SetData		2985852	0					
ANR	2986514	Identifier	cred		2985852	0					
ANR	2986515	Identifier	SetData		2985852	1					
ANR	2986516	ArgumentList	data		2985852	1					
ANR	2986517	Argument	data		2985852	0					
ANR	2986518	Identifier	data		2985852	0					
ANR	2986519	Argument	data_size		2985852	1					
ANR	2986520	Identifier	data_size		2985852	0					
ANR	2986521	IfStatement	if ( cred_name != NULL )		2985852	22					
ANR	2986522	Condition	cred_name != NULL	223:5:5821:5836	2985852	0	True				
ANR	2986523	EqualityExpression	cred_name != NULL		2985852	0		!=			
ANR	2986524	Identifier	cred_name		2985852	0					
ANR	2986525	Identifier	NULL		2985852	1					
ANR	2986526	CompoundStatement		147:23:2942:2942	2985852	1					
ANR	2986527	ExpressionStatement	cred -> SetName ( cred_name )	224:2:5843:5867	2985852	0	True				
ANR	2986528	CallExpression	cred -> SetName ( cred_name )		2985852	0					
ANR	2986529	Callee	cred -> SetName		2985852	0					
ANR	2986530	PtrMemberAccess	cred -> SetName		2985852	0					
ANR	2986531	Identifier	cred		2985852	0					
ANR	2986532	Identifier	SetName		2985852	1					
ANR	2986533	ArgumentList	cred_name		2985852	1					
ANR	2986534	Argument	cred_name		2985852	0					
ANR	2986535	Identifier	cred_name		2985852	0					
ANR	2986536	ElseStatement	else		2985852	0					
ANR	2986537	CompoundStatement		149:8:2980:2980	2985852	0					
ANR	2986538	ExpressionStatement	cred -> SetName ( DEFAULT_CREDENTIAL_NAME )	226:2:5881:5919	2985852	0	True				
ANR	2986539	CallExpression	cred -> SetName ( DEFAULT_CREDENTIAL_NAME )		2985852	0					
ANR	2986540	Callee	cred -> SetName		2985852	0					
ANR	2986541	PtrMemberAccess	cred -> SetName		2985852	0					
ANR	2986542	Identifier	cred		2985852	0					
ANR	2986543	Identifier	SetName		2985852	1					
ANR	2986544	ArgumentList	DEFAULT_CREDENTIAL_NAME		2985852	1					
ANR	2986545	Argument	DEFAULT_CREDENTIAL_NAME		2985852	0					
ANR	2986546	Identifier	DEFAULT_CREDENTIAL_NAME		2985852	0					
ANR	2986547	IdentifierDeclStatement	char * username = my_username ( 0 ) ;	229:1:5926:5958	2985852	23	True				
ANR	2986548	IdentifierDecl	* username = my_username ( 0 )		2985852	0					
ANR	2986549	IdentifierDeclType	char *		2985852	0					
ANR	2986550	Identifier	username		2985852	1					
ANR	2986551	AssignmentExpression	* username = my_username ( 0 )		2985852	2		=			
ANR	2986552	Identifier	username		2985852	0					
ANR	2986553	CallExpression	my_username ( 0 )		2985852	1					
ANR	2986554	Callee	my_username		2985852	0					
ANR	2986555	Identifier	my_username		2985852	0					
ANR	2986556	ArgumentList	0		2985852	1					
ANR	2986557	Argument	0		2985852	0					
ANR	2986558	PrimaryExpression	0		2985852	0					
ANR	2986559	ExpressionStatement	cred -> SetOwner ( username )	230:1:5961:5986	2985852	24	True				
ANR	2986560	CallExpression	cred -> SetOwner ( username )		2985852	0					
ANR	2986561	Callee	cred -> SetOwner		2985852	0					
ANR	2986562	PtrMemberAccess	cred -> SetOwner		2985852	0					
ANR	2986563	Identifier	cred		2985852	0					
ANR	2986564	Identifier	SetOwner		2985852	1					
ANR	2986565	ArgumentList	username		2985852	1					
ANR	2986566	Argument	username		2985852	0					
ANR	2986567	Identifier	username		2985852	0					
ANR	2986568	IfStatement	if ( cred_type == X509_CREDENTIAL_TYPE && myproxy_host != NULL )		2985852	25					
ANR	2986569	Condition	cred_type == X509_CREDENTIAL_TYPE && myproxy_host != NULL	232:5:5996:6052	2985852	0	True				
ANR	2986570	AndExpression	cred_type == X509_CREDENTIAL_TYPE && myproxy_host != NULL		2985852	0		&&			
ANR	2986571	EqualityExpression	cred_type == X509_CREDENTIAL_TYPE		2985852	0		==			
ANR	2986572	Identifier	cred_type		2985852	0					
ANR	2986573	Identifier	X509_CREDENTIAL_TYPE		2985852	1					
ANR	2986574	EqualityExpression	myproxy_host != NULL		2985852	1		!=			
ANR	2986575	Identifier	myproxy_host		2985852	0					
ANR	2986576	Identifier	NULL		2985852	1					
ANR	2986577	CompoundStatement		176:2:3615:3638	2985852	1					
ANR	2986578	IdentifierDeclStatement	X509Credential * x509cred = ( X509Credential * ) cred ;	233:2:6059:6108	2985852	0	True				
ANR	2986579	IdentifierDecl	* x509cred = ( X509Credential * ) cred		2985852	0					
ANR	2986580	IdentifierDeclType	X509Credential *		2985852	0					
ANR	2986581	Identifier	x509cred		2985852	1					
ANR	2986582	AssignmentExpression	* x509cred = ( X509Credential * ) cred		2985852	2		=			
ANR	2986583	Identifier	x509cred		2985852	0					
ANR	2986584	CastExpression	( X509Credential * ) cred		2985852	1					
ANR	2986585	CastTarget	X509Credential *		2985852	0					
ANR	2986586	Identifier	cred		2985852	1					
ANR	2986587	IdentifierDeclStatement	MyString str_host_port = myproxy_host ;	235:2:6113:6150	2985852	1	True				
ANR	2986588	IdentifierDecl	str_host_port = myproxy_host		2985852	0					
ANR	2986589	IdentifierDeclType	MyString		2985852	0					
ANR	2986590	Identifier	str_host_port		2985852	1					
ANR	2986591	AssignmentExpression	str_host_port = myproxy_host		2985852	2		=			
ANR	2986592	Identifier	myproxy_host		2985852	0					
ANR	2986593	Identifier	myproxy_host		2985852	1					
ANR	2986594	IfStatement	if ( myproxy_port != 0 )		2985852	2					
ANR	2986595	Condition	myproxy_port != 0	236:6:6158:6174	2985852	0	True				
ANR	2986596	EqualityExpression	myproxy_port != 0		2985852	0		!=			
ANR	2986597	Identifier	myproxy_port		2985852	0					
ANR	2986598	PrimaryExpression	0		2985852	1					
ANR	2986599	CompoundStatement		160:25:3280:3280	2985852	1					
ANR	2986600	ExpressionStatement	"str_host_port += "":"""	237:3:6182:6202	2985852	0	True				
ANR	2986601	AssignmentExpression	"str_host_port += "":"""		2985852	0		+=			
ANR	2986602	Identifier	str_host_port		2985852	0					
ANR	2986603	PrimaryExpression	""":"""		2985852	1					
ANR	2986604	ExpressionStatement	str_host_port += myproxy_port	238:3:6207:6236	2985852	1	True				
ANR	2986605	AssignmentExpression	str_host_port += myproxy_port		2985852	0		+=			
ANR	2986606	Identifier	str_host_port		2985852	0					
ANR	2986607	Identifier	myproxy_port		2985852	1					
ANR	2986608	ExpressionStatement	x509cred -> SetMyProxyServerHost ( str_host_port . Value ( ) )	240:2:6244:6298	2985852	3	True				
ANR	2986609	CallExpression	x509cred -> SetMyProxyServerHost ( str_host_port . Value ( ) )		2985852	0					
ANR	2986610	Callee	x509cred -> SetMyProxyServerHost		2985852	0					
ANR	2986611	PtrMemberAccess	x509cred -> SetMyProxyServerHost		2985852	0					
ANR	2986612	Identifier	x509cred		2985852	0					
ANR	2986613	Identifier	SetMyProxyServerHost		2985852	1					
ANR	2986614	ArgumentList	str_host_port . Value ( )		2985852	1					
ANR	2986615	Argument	str_host_port . Value ( )		2985852	0					
ANR	2986616	CallExpression	str_host_port . Value ( )		2985852	0					
ANR	2986617	Callee	str_host_port . Value		2985852	0					
ANR	2986618	MemberAccess	str_host_port . Value		2985852	0					
ANR	2986619	Identifier	str_host_port		2985852	0					
ANR	2986620	Identifier	Value		2985852	1					
ANR	2986621	ArgumentList			2985852	1					
ANR	2986622	IfStatement	if ( myproxy_user != NULL )		2985852	4					
ANR	2986623	Condition	myproxy_user != NULL	242:6:6307:6326	2985852	0	True				
ANR	2986624	EqualityExpression	myproxy_user != NULL		2985852	0		!=			
ANR	2986625	Identifier	myproxy_user		2985852	0					
ANR	2986626	Identifier	NULL		2985852	1					
ANR	2986627	CompoundStatement		166:28:3432:3432	2985852	1					
ANR	2986628	ExpressionStatement	x509cred -> SetMyProxyUser ( myproxy_user )	243:3:6334:6373	2985852	0	True				
ANR	2986629	CallExpression	x509cred -> SetMyProxyUser ( myproxy_user )		2985852	0					
ANR	2986630	Callee	x509cred -> SetMyProxyUser		2985852	0					
ANR	2986631	PtrMemberAccess	x509cred -> SetMyProxyUser		2985852	0					
ANR	2986632	Identifier	x509cred		2985852	0					
ANR	2986633	Identifier	SetMyProxyUser		2985852	1					
ANR	2986634	ArgumentList	myproxy_user		2985852	1					
ANR	2986635	Argument	myproxy_user		2985852	0					
ANR	2986636	Identifier	myproxy_user		2985852	0					
ANR	2986637	ElseStatement	else		2985852	0					
ANR	2986638	CompoundStatement		168:9:3487:3487	2985852	0					
ANR	2986639	ExpressionStatement	x509cred -> SetMyProxyUser ( username )	245:3:6389:6424	2985852	0	True				
ANR	2986640	CallExpression	x509cred -> SetMyProxyUser ( username )		2985852	0					
ANR	2986641	Callee	x509cred -> SetMyProxyUser		2985852	0					
ANR	2986642	PtrMemberAccess	x509cred -> SetMyProxyUser		2985852	0					
ANR	2986643	Identifier	x509cred		2985852	0					
ANR	2986644	Identifier	SetMyProxyUser		2985852	1					
ANR	2986645	ArgumentList	username		2985852	1					
ANR	2986646	Argument	username		2985852	0					
ANR	2986647	Identifier	username		2985852	0					
ANR	2986648	IfStatement	if ( myproxy_dn != NULL )		2985852	5					
ANR	2986649	Condition	myproxy_dn != NULL	248:6:6437:6454	2985852	0	True				
ANR	2986650	EqualityExpression	myproxy_dn != NULL		2985852	0		!=			
ANR	2986651	Identifier	myproxy_dn		2985852	0					
ANR	2986652	Identifier	NULL		2985852	1					
ANR	2986653	CompoundStatement		172:26:3560:3560	2985852	1					
ANR	2986654	ExpressionStatement	x509cred -> SetMyProxyServerDN ( myproxy_dn )	249:3:6462:6503	2985852	0	True				
ANR	2986655	CallExpression	x509cred -> SetMyProxyServerDN ( myproxy_dn )		2985852	0					
ANR	2986656	Callee	x509cred -> SetMyProxyServerDN		2985852	0					
ANR	2986657	PtrMemberAccess	x509cred -> SetMyProxyServerDN		2985852	0					
ANR	2986658	Identifier	x509cred		2985852	0					
ANR	2986659	Identifier	SetMyProxyServerDN		2985852	1					
ANR	2986660	ArgumentList	myproxy_dn		2985852	1					
ANR	2986661	Argument	myproxy_dn		2985852	0					
ANR	2986662	Identifier	myproxy_dn		2985852	0					
ANR	2986663	IdentifierDeclStatement	char * myproxy_password ;	252:2:6512:6535	2985852	6	True				
ANR	2986664	IdentifierDecl	* myproxy_password		2985852	0					
ANR	2986665	IdentifierDeclType	char *		2985852	0					
ANR	2986666	Identifier	myproxy_password		2985852	1					
ANR	2986667	IfStatement	if ( Read_Myproxy_pw_terminal )		2985852	7					
ANR	2986668	Condition	Read_Myproxy_pw_terminal	253:7:6544:6567	2985852	0	True				
ANR	2986669	Identifier	Read_Myproxy_pw_terminal		2985852	0					
ANR	2986670	CompoundStatement		177:34:3674:3674	2985852	1					
ANR	2986671	ExpressionStatement	"myproxy_password = prompt_password ( ""Please enter the MyProxy password:"" )"	254:3:6576:6660	2985852	0	True				
ANR	2986672	AssignmentExpression	"myproxy_password = prompt_password ( ""Please enter the MyProxy password:"" )"		2985852	0		=			
ANR	2986673	Identifier	myproxy_password		2985852	0					
ANR	2986674	CallExpression	"prompt_password ( ""Please enter the MyProxy password:"" )"		2985852	1					
ANR	2986675	Callee	prompt_password		2985852	0					
ANR	2986676	Identifier	prompt_password		2985852	0					
ANR	2986677	ArgumentList	"""Please enter the MyProxy password:"""		2985852	1					
ANR	2986678	Argument	"""Please enter the MyProxy password:"""		2985852	0					
ANR	2986679	PrimaryExpression	"""Please enter the MyProxy password:"""		2985852	0					
ANR	2986680	ElseStatement	else		2985852	0					
ANR	2986681	CompoundStatement		181:9:3774:3774	2985852	0					
ANR	2986682	ExpressionStatement	"myproxy_password = stdin_password ( ""Please enter the MyProxy password from the standard input\\n"" )"	258:3:6676:6782	2985852	0	True				
ANR	2986683	AssignmentExpression	"myproxy_password = stdin_password ( ""Please enter the MyProxy password from the standard input\\n"" )"		2985852	0		=			
ANR	2986684	Identifier	myproxy_password		2985852	0					
ANR	2986685	CallExpression	"stdin_password ( ""Please enter the MyProxy password from the standard input\\n"" )"		2985852	1					
ANR	2986686	Callee	stdin_password		2985852	0					
ANR	2986687	Identifier	stdin_password		2985852	0					
ANR	2986688	ArgumentList	"""Please enter the MyProxy password from the standard input\\n"""		2985852	1					
ANR	2986689	Argument	"""Please enter the MyProxy password from the standard input\\n"""		2985852	0					
ANR	2986690	PrimaryExpression	"""Please enter the MyProxy password from the standard input\\n"""		2985852	0					
ANR	2986691	IfStatement	if ( myproxy_password )		2985852	8					
ANR	2986692	Condition	myproxy_password	262:6:6794:6809	2985852	0	True				
ANR	2986693	Identifier	myproxy_password		2985852	0					
ANR	2986694	CompoundStatement		186:24:3915:3915	2985852	1					
ANR	2986695	ExpressionStatement	x509cred -> SetRefreshPassword ( myproxy_password )	263:3:6817:6866	2985852	0	True				
ANR	2986696	CallExpression	x509cred -> SetRefreshPassword ( myproxy_password )		2985852	0					
ANR	2986697	Callee	x509cred -> SetRefreshPassword		2985852	0					
ANR	2986698	PtrMemberAccess	x509cred -> SetRefreshPassword		2985852	0					
ANR	2986699	Identifier	x509cred		2985852	0					
ANR	2986700	Identifier	SetRefreshPassword		2985852	1					
ANR	2986701	ArgumentList	myproxy_password		2985852	1					
ANR	2986702	Argument	myproxy_password		2985852	0					
ANR	2986703	Identifier	myproxy_password		2985852	0					
ANR	2986704	ExpressionStatement	x509cred -> display ( D_FULLDEBUG )	266:2:6875:6907	2985852	9	True				
ANR	2986705	CallExpression	x509cred -> display ( D_FULLDEBUG )		2985852	0					
ANR	2986706	Callee	x509cred -> display		2985852	0					
ANR	2986707	PtrMemberAccess	x509cred -> display		2985852	0					
ANR	2986708	Identifier	x509cred		2985852	0					
ANR	2986709	Identifier	display		2985852	1					
ANR	2986710	ArgumentList	D_FULLDEBUG		2985852	1					
ANR	2986711	Argument	D_FULLDEBUG		2985852	0					
ANR	2986712	Identifier	D_FULLDEBUG		2985852	0					
ANR	2986713	IdentifierDeclStatement	CondorError errstack ;	269:1:6914:6934	2985852	26	True				
ANR	2986714	IdentifierDecl	errstack		2985852	0					
ANR	2986715	IdentifierDeclType	CondorError		2985852	0					
ANR	2986716	Identifier	errstack		2985852	1					
ANR	2986717	IdentifierDeclStatement	DCCredd dc_credd ( server_address ) ;	270:1:6937:6970	2985852	27	True				
ANR	2986718	IdentifierDecl	dc_credd ( server_address )		2985852	0					
ANR	2986719	IdentifierDeclType	DCCredd		2985852	0					
ANR	2986720	Identifier	dc_credd		2985852	1					
ANR	2986721	Identifier	server_address		2985852	2					
ANR	2986722	IfStatement	if ( ! dc_credd . locate ( ) )		2985852	28					
ANR	2986723	Condition	! dc_credd . locate ( )	273:6:7006:7024	2985852	0	True				
ANR	2986724	UnaryOperationExpression	! dc_credd . locate ( )		2985852	0					
ANR	2986725	UnaryOperator	!		2985852	0					
ANR	2986726	CallExpression	dc_credd . locate ( )		2985852	1					
ANR	2986727	Callee	dc_credd . locate		2985852	0					
ANR	2986728	MemberAccess	dc_credd . locate		2985852	0					
ANR	2986729	Identifier	dc_credd		2985852	0					
ANR	2986730	Identifier	locate		2985852	1					
ANR	2986731	ArgumentList			2985852	1					
ANR	2986732	CompoundStatement		197:28:4131:4131	2985852	1					
ANR	2986733	ExpressionStatement	"fprintf ( stderr , ""%s\\n"" , dc_credd . error ( ) )"	274:2:7032:7075	2985852	0	True				
ANR	2986734	CallExpression	"fprintf ( stderr , ""%s\\n"" , dc_credd . error ( ) )"		2985852	0					
ANR	2986735	Callee	fprintf		2985852	0					
ANR	2986736	Identifier	fprintf		2985852	0					
ANR	2986737	ArgumentList	stderr		2985852	1					
ANR	2986738	Argument	stderr		2985852	0					
ANR	2986739	Identifier	stderr		2985852	0					
ANR	2986740	Argument	"""%s\\n"""		2985852	1					
ANR	2986741	PrimaryExpression	"""%s\\n"""		2985852	0					
ANR	2986742	Argument	dc_credd . error ( )		2985852	2					
ANR	2986743	CallExpression	dc_credd . error ( )		2985852	0					
ANR	2986744	Callee	dc_credd . error		2985852	0					
ANR	2986745	MemberAccess	dc_credd . error		2985852	0					
ANR	2986746	Identifier	dc_credd		2985852	0					
ANR	2986747	Identifier	error		2985852	1					
ANR	2986748	ArgumentList			2985852	1					
ANR	2986749	ReturnStatement	return 1 ;	275:2:7079:7087	2985852	1	True				
ANR	2986750	PrimaryExpression	1		2985852	0					
ANR	2986751	IfStatement	"if ( dc_credd . storeCredential ( cred , errstack ) )"		2985852	29					
ANR	2986752	Condition	"dc_credd . storeCredential ( cred , errstack )"	278:5:7098:7137	2985852	0	True				
ANR	2986753	CallExpression	"dc_credd . storeCredential ( cred , errstack )"		2985852	0					
ANR	2986754	Callee	dc_credd . storeCredential		2985852	0					
ANR	2986755	MemberAccess	dc_credd . storeCredential		2985852	0					
ANR	2986756	Identifier	dc_credd		2985852	0					
ANR	2986757	Identifier	storeCredential		2985852	1					
ANR	2986758	ArgumentList	cred		2985852	1					
ANR	2986759	Argument	cred		2985852	0					
ANR	2986760	Identifier	cred		2985852	0					
ANR	2986761	Argument	errstack		2985852	1					
ANR	2986762	Identifier	errstack		2985852	0					
ANR	2986763	CompoundStatement		202:47:4243:4243	2985852	1					
ANR	2986764	ExpressionStatement	"printf ( ""Credential submitted successfully\\n"" )"	279:2:7144:7190	2985852	0	True				
ANR	2986765	CallExpression	"printf ( ""Credential submitted successfully\\n"" )"		2985852	0					
ANR	2986766	Callee	printf		2985852	0					
ANR	2986767	Identifier	printf		2985852	0					
ANR	2986768	ArgumentList	"""Credential submitted successfully\\n"""		2985852	1					
ANR	2986769	Argument	"""Credential submitted successfully\\n"""		2985852	0					
ANR	2986770	PrimaryExpression	"""Credential submitted successfully\\n"""		2985852	0					
ANR	2986771	ElseStatement	else		2985852	0					
ANR	2986772	CompoundStatement		204:8:4303:4303	2985852	0					
ANR	2986773	ExpressionStatement	"fprintf ( stderr , ""Unable to submit credential\\n%s\\n"" , errstack . getFullText ( true ) )"	281:2:7204:7290	2985852	0	True				
ANR	2986774	CallExpression	"fprintf ( stderr , ""Unable to submit credential\\n%s\\n"" , errstack . getFullText ( true ) )"		2985852	0					
ANR	2986775	Callee	fprintf		2985852	0					
ANR	2986776	Identifier	fprintf		2985852	0					
ANR	2986777	ArgumentList	stderr		2985852	1					
ANR	2986778	Argument	stderr		2985852	0					
ANR	2986779	Identifier	stderr		2985852	0					
ANR	2986780	Argument	"""Unable to submit credential\\n%s\\n"""		2985852	1					
ANR	2986781	PrimaryExpression	"""Unable to submit credential\\n%s\\n"""		2985852	0					
ANR	2986782	Argument	errstack . getFullText ( true )		2985852	2					
ANR	2986783	CallExpression	errstack . getFullText ( true )		2985852	0					
ANR	2986784	Callee	errstack . getFullText		2985852	0					
ANR	2986785	MemberAccess	errstack . getFullText		2985852	0					
ANR	2986786	Identifier	errstack		2985852	0					
ANR	2986787	Identifier	getFullText		2985852	1					
ANR	2986788	ArgumentList	true		2985852	1					
ANR	2986789	Argument	true		2985852	0					
ANR	2986790	Identifier	true		2985852	0					
ANR	2986791	ReturnStatement	return 1 ;	283:2:7294:7302	2985852	1	True				
ANR	2986792	PrimaryExpression	1		2985852	0					
ANR	2986793	ReturnStatement	return 0 ;	286:1:7309:7317	2985852	30	True				
ANR	2986794	PrimaryExpression	0		2985852	0					
ANR	2986795	ReturnType	int		2985852	1					
ANR	2986796	Identifier	main		2985852	2					
ANR	2986797	ParameterList	"int argc , char * * argv"		2985852	3					
ANR	2986798	Parameter	int argc	76:9:2873:2880	2985852	0	True				
ANR	2986799	ParameterType	int		2985852	0					
ANR	2986800	Identifier	argc		2985852	1					
ANR	2986801	Parameter	char * * argv	76:19:2883:2893	2985852	1	True				
ANR	2986802	ParameterType	char * *		2985852	0					
ANR	2986803	Identifier	argv		2985852	1					
ANR	2986804	CFGEntryNode	ENTRY		2985852		True				
ANR	2986805	CFGExitNode	EXIT		2985852		True				
ANR	2986806	Symbol	data		2985852						
ANR	2986807	Symbol	dc_credd . locate		2985852						
ANR	2986808	Symbol	* argv		2985852						
ANR	2986809	Symbol	server_address		2985852						
ANR	2986810	Symbol	myproxy_port		2985852						
ANR	2986811	Symbol	myDistro		2985852						
ANR	2986812	Symbol	* ptr		2985852						
ANR	2986813	Symbol	myName		2985852						
ANR	2986814	Symbol	str_host_port		2985852						
ANR	2986815	Symbol	read_file		2985852						
ANR	2986816	Symbol	strcmp		2985852						
ANR	2986817	Symbol	data_size		2985852						
ANR	2986818	Symbol	cred_type		2985852						
ANR	2986819	Symbol	NULL		2985852						
ANR	2986820	Symbol	x509cred		2985852						
ANR	2986821	Symbol	get_param_functions		2985852						
ANR	2986822	Symbol	Read_Myproxy_pw_terminal		2985852						
ANR	2986823	Symbol	D_FULLDEBUG		2985852						
ANR	2986824	Symbol	stderr		2985852						
ANR	2986825	Symbol	my_username		2985852						
ANR	2986826	Symbol	errstack		2985852						
ANR	2986827	Symbol	true		2985852						
ANR	2986828	Symbol	myproxy_dn		2985852						
ANR	2986829	Symbol	* * ptr		2985852						
ANR	2986830	Symbol	str_host_port . Value		2985852						
ANR	2986831	Symbol	argv		2985852						
ANR	2986832	Symbol	myproxy_host		2985852						
ANR	2986833	Symbol	dc_credd		2985852						
ANR	2986834	Symbol	dc_credd . storeCredential		2985852						
ANR	2986835	Symbol	* ( ++ ptr )		2985852						
ANR	2986836	Symbol	DEFAULT_CREDENTIAL_NAME		2985852						
ANR	2986837	Symbol	stdin_password		2985852						
ANR	2986838	Symbol	argc		2985852						
ANR	2986839	Symbol	cred		2985852						
ANR	2986840	Symbol	Termlog		2985852						
ANR	2986841	Symbol	DIR_DELIM_CHAR		2985852						
ANR	2986842	Symbol	false		2985852						
ANR	2986843	Symbol	myproxy_password		2985852						
ANR	2986844	Symbol	X509_CREDENTIAL_TYPE		2985852						
ANR	2986845	Symbol	cred_file_name		2985852						
ANR	2986846	Symbol	ptr		2985852						
ANR	2986847	Symbol	prompt_password		2985852						
ANR	2986848	Symbol	strrchr		2985852						
ANR	2986849	Symbol	cred_name		2985852						
ANR	2986850	Symbol	myproxy_user		2985852						
ANR	2986851	Symbol	errstack . getFullText		2985852						
ANR	2986852	Symbol	strdup		2985852						
ANR	2986853	Symbol	username		2985852						
ANR	2986854	Symbol	dc_credd . error		2985852						
ANR	2986855	Function	parseMyProxyArgument	289:0:7322:8005							
ANR	2986856	FunctionDef	"parseMyProxyArgument (const char * arg , char * & user , char * & host , int & port)"		2986855	0					
ANR	2986857	CompoundStatement		293:19:7433:8005	2986855	0					
ANR	2986858	IdentifierDeclStatement	MyString strArg ( arg ) ;	295:1:7437:7458	2986855	0	True				
ANR	2986859	IdentifierDecl	strArg ( arg )		2986855	0					
ANR	2986860	IdentifierDeclType	MyString		2986855	0					
ANR	2986861	Identifier	strArg		2986855	1					
ANR	2986862	Identifier	arg		2986855	2					
ANR	2986863	IdentifierDeclStatement	int at_idx = strArg . FindChar ( ( int ) '@' ) ;	296:1:7461:7500	2986855	1	True				
ANR	2986864	IdentifierDecl	at_idx = strArg . FindChar ( ( int ) '@' )		2986855	0					
ANR	2986865	IdentifierDeclType	int		2986855	0					
ANR	2986866	Identifier	at_idx		2986855	1					
ANR	2986867	AssignmentExpression	at_idx = strArg . FindChar ( ( int ) '@' )		2986855	2		=			
ANR	2986868	Identifier	at_idx		2986855	0					
ANR	2986869	CallExpression	strArg . FindChar ( ( int ) '@' )		2986855	1					
ANR	2986870	Callee	strArg . FindChar		2986855	0					
ANR	2986871	MemberAccess	strArg . FindChar		2986855	0					
ANR	2986872	Identifier	strArg		2986855	0					
ANR	2986873	Identifier	FindChar		2986855	1					
ANR	2986874	ArgumentList	( int ) '@'		2986855	1					
ANR	2986875	Argument	( int ) '@'		2986855	0					
ANR	2986876	CastExpression	( int ) '@'		2986855	0					
ANR	2986877	CastTarget	int		2986855	0					
ANR	2986878	PrimaryExpression	'@'		2986855	1					
ANR	2986879	IdentifierDeclStatement	"int colon_idx = strArg . FindChar ( ( int ) ':' , at_idx + 1 ) ;"	297:1:7503:7555	2986855	2	True				
ANR	2986880	IdentifierDecl	"colon_idx = strArg . FindChar ( ( int ) ':' , at_idx + 1 )"		2986855	0					
ANR	2986881	IdentifierDeclType	int		2986855	0					
ANR	2986882	Identifier	colon_idx		2986855	1					
ANR	2986883	AssignmentExpression	"colon_idx = strArg . FindChar ( ( int ) ':' , at_idx + 1 )"		2986855	2		=			
ANR	2986884	Identifier	colon_idx		2986855	0					
ANR	2986885	CallExpression	"strArg . FindChar ( ( int ) ':' , at_idx + 1 )"		2986855	1					
ANR	2986886	Callee	strArg . FindChar		2986855	0					
ANR	2986887	MemberAccess	strArg . FindChar		2986855	0					
ANR	2986888	Identifier	strArg		2986855	0					
ANR	2986889	Identifier	FindChar		2986855	1					
ANR	2986890	ArgumentList	( int ) ':'		2986855	1					
ANR	2986891	Argument	( int ) ':'		2986855	0					
ANR	2986892	CastExpression	( int ) ':'		2986855	0					
ANR	2986893	CastTarget	int		2986855	0					
ANR	2986894	PrimaryExpression	':'		2986855	1					
ANR	2986895	Argument	at_idx + 1		2986855	1					
ANR	2986896	AdditiveExpression	at_idx + 1		2986855	0		+			
ANR	2986897	Identifier	at_idx		2986855	0					
ANR	2986898	PrimaryExpression	1		2986855	1					
ANR	2986899	IfStatement	if ( at_idx != - 1 )		2986855	3					
ANR	2986900	Condition	at_idx != - 1	299:5:7563:7574	2986855	0	True				
ANR	2986901	EqualityExpression	at_idx != - 1		2986855	0		!=			
ANR	2986902	Identifier	at_idx		2986855	0					
ANR	2986903	UnaryOperationExpression	- 1		2986855	1					
ANR	2986904	UnaryOperator	-		2986855	0					
ANR	2986905	PrimaryExpression	1		2986855	1					
ANR	2986906	CompoundStatement		8:2:147:191	2986855	1					
ANR	2986907	IdentifierDeclStatement	"MyString _user = strArg . Substr ( 0 , at_idx - 1 ) ;"	300:2:7581:7625	2986855	0	True				
ANR	2986908	IdentifierDecl	"_user = strArg . Substr ( 0 , at_idx - 1 )"		2986855	0					
ANR	2986909	IdentifierDeclType	MyString		2986855	0					
ANR	2986910	Identifier	_user		2986855	1					
ANR	2986911	AssignmentExpression	"_user = strArg . Substr ( 0 , at_idx - 1 )"		2986855	2		=			
ANR	2986912	Identifier	_user		2986855	0					
ANR	2986913	CallExpression	"strArg . Substr ( 0 , at_idx - 1 )"		2986855	1					
ANR	2986914	Callee	strArg . Substr		2986855	0					
ANR	2986915	MemberAccess	strArg . Substr		2986855	0					
ANR	2986916	Identifier	strArg		2986855	0					
ANR	2986917	Identifier	Substr		2986855	1					
ANR	2986918	ArgumentList	0		2986855	1					
ANR	2986919	Argument	0		2986855	0					
ANR	2986920	PrimaryExpression	0		2986855	0					
ANR	2986921	Argument	at_idx - 1		2986855	1					
ANR	2986922	AdditiveExpression	at_idx - 1		2986855	0		-			
ANR	2986923	Identifier	at_idx		2986855	0					
ANR	2986924	PrimaryExpression	1		2986855	1					
ANR	2986925	ExpressionStatement	user = strdup ( _user . Value ( ) )	301:2:7629:7657	2986855	1	True				
ANR	2986926	AssignmentExpression	user = strdup ( _user . Value ( ) )		2986855	0		=			
ANR	2986927	Identifier	user		2986855	0					
ANR	2986928	CallExpression	strdup ( _user . Value ( ) )		2986855	1					
ANR	2986929	Callee	strdup		2986855	0					
ANR	2986930	Identifier	strdup		2986855	0					
ANR	2986931	ArgumentList	_user . Value ( )		2986855	1					
ANR	2986932	Argument	_user . Value ( )		2986855	0					
ANR	2986933	CallExpression	_user . Value ( )		2986855	0					
ANR	2986934	Callee	_user . Value		2986855	0					
ANR	2986935	MemberAccess	_user . Value		2986855	0					
ANR	2986936	Identifier	_user		2986855	0					
ANR	2986937	Identifier	Value		2986855	1					
ANR	2986938	ArgumentList			2986855	1					
ANR	2986939	IfStatement	if ( colon_idx == - 1 )		2986855	4					
ANR	2986940	Condition	colon_idx == - 1	305:5:7673:7687	2986855	0	True				
ANR	2986941	EqualityExpression	colon_idx == - 1		2986855	0		==			
ANR	2986942	Identifier	colon_idx		2986855	0					
ANR	2986943	UnaryOperationExpression	- 1		2986855	1					
ANR	2986944	UnaryOperator	-		2986855	0					
ANR	2986945	PrimaryExpression	1		2986855	1					
ANR	2986946	CompoundStatement		14:2:260:320	2986855	1					
ANR	2986947	IdentifierDeclStatement	"MyString _host = strArg . Substr ( at_idx + 1 , strArg . Length ( ) - 1 ) ;"	306:2:7694:7754	2986855	0	True				
ANR	2986948	IdentifierDecl	"_host = strArg . Substr ( at_idx + 1 , strArg . Length ( ) - 1 )"		2986855	0					
ANR	2986949	IdentifierDeclType	MyString		2986855	0					
ANR	2986950	Identifier	_host		2986855	1					
ANR	2986951	AssignmentExpression	"_host = strArg . Substr ( at_idx + 1 , strArg . Length ( ) - 1 )"		2986855	2		=			
ANR	2986952	Identifier	_host		2986855	0					
ANR	2986953	CallExpression	"strArg . Substr ( at_idx + 1 , strArg . Length ( ) - 1 )"		2986855	1					
ANR	2986954	Callee	strArg . Substr		2986855	0					
ANR	2986955	MemberAccess	strArg . Substr		2986855	0					
ANR	2986956	Identifier	strArg		2986855	0					
ANR	2986957	Identifier	Substr		2986855	1					
ANR	2986958	ArgumentList	at_idx + 1		2986855	1					
ANR	2986959	Argument	at_idx + 1		2986855	0					
ANR	2986960	AdditiveExpression	at_idx + 1		2986855	0		+			
ANR	2986961	Identifier	at_idx		2986855	0					
ANR	2986962	PrimaryExpression	1		2986855	1					
ANR	2986963	Argument	strArg . Length ( ) - 1		2986855	1					
ANR	2986964	AdditiveExpression	strArg . Length ( ) - 1		2986855	0		-			
ANR	2986965	CallExpression	strArg . Length ( )		2986855	0					
ANR	2986966	Callee	strArg . Length		2986855	0					
ANR	2986967	MemberAccess	strArg . Length		2986855	0					
ANR	2986968	Identifier	strArg		2986855	0					
ANR	2986969	Identifier	Length		2986855	1					
ANR	2986970	ArgumentList			2986855	1					
ANR	2986971	PrimaryExpression	1		2986855	1					
ANR	2986972	ExpressionStatement	host = strdup ( _host . Value ( ) )	307:2:7758:7786	2986855	1	True				
ANR	2986973	AssignmentExpression	host = strdup ( _host . Value ( ) )		2986855	0		=			
ANR	2986974	Identifier	host		2986855	0					
ANR	2986975	CallExpression	strdup ( _host . Value ( ) )		2986855	1					
ANR	2986976	Callee	strdup		2986855	0					
ANR	2986977	Identifier	strdup		2986855	0					
ANR	2986978	ArgumentList	_host . Value ( )		2986855	1					
ANR	2986979	Argument	_host . Value ( )		2986855	0					
ANR	2986980	CallExpression	_host . Value ( )		2986855	0					
ANR	2986981	Callee	_host . Value		2986855	0					
ANR	2986982	MemberAccess	_host . Value		2986855	0					
ANR	2986983	Identifier	_host		2986855	0					
ANR	2986984	Identifier	Value		2986855	1					
ANR	2986985	ArgumentList			2986855	1					
ANR	2986986	ElseStatement	else		2986855	0					
ANR	2986987	CompoundStatement		20:2:457:520	2986855	0					
ANR	2986988	IdentifierDeclStatement	"MyString _host = strArg . Substr ( at_idx + 1 , colon_idx - 1 ) ;"	309:2:7800:7854	2986855	0	True				
ANR	2986989	IdentifierDecl	"_host = strArg . Substr ( at_idx + 1 , colon_idx - 1 )"		2986855	0					
ANR	2986990	IdentifierDeclType	MyString		2986855	0					
ANR	2986991	Identifier	_host		2986855	1					
ANR	2986992	AssignmentExpression	"_host = strArg . Substr ( at_idx + 1 , colon_idx - 1 )"		2986855	2		=			
ANR	2986993	Identifier	_host		2986855	0					
ANR	2986994	CallExpression	"strArg . Substr ( at_idx + 1 , colon_idx - 1 )"		2986855	1					
ANR	2986995	Callee	strArg . Substr		2986855	0					
ANR	2986996	MemberAccess	strArg . Substr		2986855	0					
ANR	2986997	Identifier	strArg		2986855	0					
ANR	2986998	Identifier	Substr		2986855	1					
ANR	2986999	ArgumentList	at_idx + 1		2986855	1					
ANR	2987000	Argument	at_idx + 1		2986855	0					
ANR	2987001	AdditiveExpression	at_idx + 1		2986855	0		+			
ANR	2987002	Identifier	at_idx		2986855	0					
ANR	2987003	PrimaryExpression	1		2986855	1					
ANR	2987004	Argument	colon_idx - 1		2986855	1					
ANR	2987005	AdditiveExpression	colon_idx - 1		2986855	0		-			
ANR	2987006	Identifier	colon_idx		2986855	0					
ANR	2987007	PrimaryExpression	1		2986855	1					
ANR	2987008	ExpressionStatement	host = strdup ( _host . Value ( ) )	310:2:7858:7886	2986855	1	True				
ANR	2987009	AssignmentExpression	host = strdup ( _host . Value ( ) )		2986855	0		=			
ANR	2987010	Identifier	host		2986855	0					
ANR	2987011	CallExpression	strdup ( _host . Value ( ) )		2986855	1					
ANR	2987012	Callee	strdup		2986855	0					
ANR	2987013	Identifier	strdup		2986855	0					
ANR	2987014	ArgumentList	_host . Value ( )		2986855	1					
ANR	2987015	Argument	_host . Value ( )		2986855	0					
ANR	2987016	CallExpression	_host . Value ( )		2986855	0					
ANR	2987017	Callee	_host . Value		2986855	0					
ANR	2987018	MemberAccess	_host . Value		2986855	0					
ANR	2987019	Identifier	_host		2986855	0					
ANR	2987020	Identifier	Value		2986855	1					
ANR	2987021	ArgumentList			2986855	1					
ANR	2987022	IdentifierDeclStatement	"MyString _port = strArg . Substr ( colon_idx + 1 , strArg . Length ( ) - 1 ) ;"	312:2:7891:7954	2986855	2	True				
ANR	2987023	IdentifierDecl	"_port = strArg . Substr ( colon_idx + 1 , strArg . Length ( ) - 1 )"		2986855	0					
ANR	2987024	IdentifierDeclType	MyString		2986855	0					
ANR	2987025	Identifier	_port		2986855	1					
ANR	2987026	AssignmentExpression	"_port = strArg . Substr ( colon_idx + 1 , strArg . Length ( ) - 1 )"		2986855	2		=			
ANR	2987027	Identifier	_port		2986855	0					
ANR	2987028	CallExpression	"strArg . Substr ( colon_idx + 1 , strArg . Length ( ) - 1 )"		2986855	1					
ANR	2987029	Callee	strArg . Substr		2986855	0					
ANR	2987030	MemberAccess	strArg . Substr		2986855	0					
ANR	2987031	Identifier	strArg		2986855	0					
ANR	2987032	Identifier	Substr		2986855	1					
ANR	2987033	ArgumentList	colon_idx + 1		2986855	1					
ANR	2987034	Argument	colon_idx + 1		2986855	0					
ANR	2987035	AdditiveExpression	colon_idx + 1		2986855	0		+			
ANR	2987036	Identifier	colon_idx		2986855	0					
ANR	2987037	PrimaryExpression	1		2986855	1					
ANR	2987038	Argument	strArg . Length ( ) - 1		2986855	1					
ANR	2987039	AdditiveExpression	strArg . Length ( ) - 1		2986855	0		-			
ANR	2987040	CallExpression	strArg . Length ( )		2986855	0					
ANR	2987041	Callee	strArg . Length		2986855	0					
ANR	2987042	MemberAccess	strArg . Length		2986855	0					
ANR	2987043	Identifier	strArg		2986855	0					
ANR	2987044	Identifier	Length		2986855	1					
ANR	2987045	ArgumentList			2986855	1					
ANR	2987046	PrimaryExpression	1		2986855	1					
ANR	2987047	ExpressionStatement	port = atoi ( _port . Value ( ) )	313:2:7958:7984	2986855	3	True				
ANR	2987048	AssignmentExpression	port = atoi ( _port . Value ( ) )		2986855	0		=			
ANR	2987049	Identifier	port		2986855	0					
ANR	2987050	CallExpression	atoi ( _port . Value ( ) )		2986855	1					
ANR	2987051	Callee	atoi		2986855	0					
ANR	2987052	Identifier	atoi		2986855	0					
ANR	2987053	ArgumentList	_port . Value ( )		2986855	1					
ANR	2987054	Argument	_port . Value ( )		2986855	0					
ANR	2987055	CallExpression	_port . Value ( )		2986855	0					
ANR	2987056	Callee	_port . Value		2986855	0					
ANR	2987057	MemberAccess	_port . Value		2986855	0					
ANR	2987058	Identifier	_port		2986855	0					
ANR	2987059	Identifier	Value		2986855	1					
ANR	2987060	ArgumentList			2986855	1					
ANR	2987061	ReturnStatement	return TRUE ;	317:1:7992:8003	2986855	5	True				
ANR	2987062	Identifier	TRUE		2986855	0					
ANR	2987063	ReturnType	int		2986855	1					
ANR	2987064	Identifier	parseMyProxyArgument		2986855	2					
ANR	2987065	ParameterList	"const char * arg , char * & user , char * & host , int & port"		2986855	3					
ANR	2987066	Parameter	const char * arg	290:22:7350:7365	2986855	0	True				
ANR	2987067	ParameterType	const char *		2986855	0					
ANR	2987068	Identifier	arg		2986855	1					
ANR	2987069	Parameter	char * & user	291:7:7375:7387	2986855	1	True				
ANR	2987070	ParameterType	char * &		2986855	0					
ANR	2987071	Identifier	user		2986855	1					
ANR	2987072	Parameter	char * & host	292:7:7398:7410	2986855	2	True				
ANR	2987073	ParameterType	char * &		2986855	0					
ANR	2987074	Identifier	host		2986855	1					
ANR	2987075	Parameter	int & port	293:7:7421:7430	2986855	3	True				
ANR	2987076	ParameterType	int &		2986855	0					
ANR	2987077	Identifier	port		2986855	1					
ANR	2987078	CFGEntryNode	ENTRY		2986855		True				
ANR	2987079	CFGExitNode	EXIT		2986855		True				
ANR	2987080	Symbol	atoi		2986855						
ANR	2987081	Symbol	_user . Value		2986855						
ANR	2987082	Symbol	colon_idx		2986855						
ANR	2987083	Symbol	at_idx		2986855						
ANR	2987084	Symbol	TRUE		2986855						
ANR	2987085	Symbol	strArg . Substr		2986855						
ANR	2987086	Symbol	_host		2986855						
ANR	2987087	Symbol	_port		2986855						
ANR	2987088	Symbol	strArg . FindChar		2986855						
ANR	2987089	Symbol	strArg		2986855						
ANR	2987090	Symbol	port		2986855						
ANR	2987091	Symbol	strArg . Length		2986855						
ANR	2987092	Symbol	arg		2986855						
ANR	2987093	Symbol	host		2986855						
ANR	2987094	Symbol	_user		2986855						
ANR	2987095	Symbol	strdup		2986855						
ANR	2987096	Symbol	_host . Value		2986855						
ANR	2987097	Symbol	user		2986855						
ANR	2987098	Symbol	_port . Value		2986855						
ANR	2987099	Function	prompt_password	320:0:8008:8318							
ANR	2987100	FunctionDef	prompt_password (const char * prompt)		2987099	0					
ANR	2987101	CompoundStatement		321:37:8052:8318	2987099	0					
ANR	2987102	IdentifierDeclStatement	"int rc = des_read_pw_string ( Myproxy_pw , sizeof ( Myproxy_pw ) - 1 , prompt , true ) ;"	322:1:8055:8266	2987099	0	True				
ANR	2987103	IdentifierDecl	"rc = des_read_pw_string ( Myproxy_pw , sizeof ( Myproxy_pw ) - 1 , prompt , true )"		2987099	0					
ANR	2987104	IdentifierDeclType	int		2987099	0					
ANR	2987105	Identifier	rc		2987099	1					
ANR	2987106	AssignmentExpression	"rc = des_read_pw_string ( Myproxy_pw , sizeof ( Myproxy_pw ) - 1 , prompt , true )"		2987099	2		=			
ANR	2987107	Identifier	rc		2987099	0					
ANR	2987108	CallExpression	"des_read_pw_string ( Myproxy_pw , sizeof ( Myproxy_pw ) - 1 , prompt , true )"		2987099	1					
ANR	2987109	Callee	des_read_pw_string		2987099	0					
ANR	2987110	Identifier	des_read_pw_string		2987099	0					
ANR	2987111	ArgumentList	Myproxy_pw		2987099	1					
ANR	2987112	Argument	Myproxy_pw		2987099	0					
ANR	2987113	Identifier	Myproxy_pw		2987099	0					
ANR	2987114	Argument	sizeof ( Myproxy_pw ) - 1		2987099	1					
ANR	2987115	AdditiveExpression	sizeof ( Myproxy_pw ) - 1		2987099	0		-			
ANR	2987116	SizeofExpression	sizeof ( Myproxy_pw )		2987099	0					
ANR	2987117	Sizeof	sizeof		2987099	0					
ANR	2987118	SizeofOperand	Myproxy_pw		2987099	1					
ANR	2987119	PrimaryExpression	1		2987099	1					
ANR	2987120	Argument	prompt		2987099	2					
ANR	2987121	Identifier	prompt		2987099	0					
ANR	2987122	Argument	true		2987099	3					
ANR	2987123	Identifier	true		2987099	0					
ANR	2987124	IfStatement	if ( rc )		2987099	1					
ANR	2987125	Condition	rc	330:5:8273:8274	2987099	0	True				
ANR	2987126	Identifier	rc		2987099	0					
ANR	2987127	CompoundStatement		10:9:224:224	2987099	1					
ANR	2987128	ReturnStatement	return NULL ;	331:2:8281:8292	2987099	0	True				
ANR	2987129	Identifier	NULL		2987099	0					
ANR	2987130	ReturnStatement	return Myproxy_pw ;	334:1:8299:8316	2987099	2	True				
ANR	2987131	Identifier	Myproxy_pw		2987099	0					
ANR	2987132	ReturnType	char *		2987099	1					
ANR	2987133	Identifier	prompt_password		2987099	2					
ANR	2987134	ParameterList	const char * prompt		2987099	3					
ANR	2987135	Parameter	const char * prompt	321:16:8031:8049	2987099	0	True				
ANR	2987136	ParameterType	const char *		2987099	0					
ANR	2987137	Identifier	prompt		2987099	1					
ANR	2987138	CFGEntryNode	ENTRY		2987099		True				
ANR	2987139	CFGExitNode	EXIT		2987099		True				
ANR	2987140	Symbol	rc		2987099						
ANR	2987141	Symbol	Myproxy_pw		2987099						
ANR	2987142	Symbol	NULL		2987099						
ANR	2987143	Symbol	true		2987099						
ANR	2987144	Symbol	des_read_pw_string		2987099						
ANR	2987145	Symbol	prompt		2987099						
ANR	2987146	Function	stdin_password	337:0:8321:8625							
ANR	2987147	FunctionDef	stdin_password (const char * prompt)		2987146	0					
ANR	2987148	CompoundStatement		338:36:8364:8625	2987146	0					
ANR	2987149	IdentifierDeclStatement	int nbytes ;	339:1:8367:8377	2987146	0	True				
ANR	2987150	IdentifierDecl	nbytes		2987146	0					
ANR	2987151	IdentifierDeclType	int		2987146	0					
ANR	2987152	Identifier	nbytes		2987146	1					
ANR	2987153	ExpressionStatement	"printf ( ""%s"" , prompt )"	340:1:8380:8400	2987146	1	True				
ANR	2987154	CallExpression	"printf ( ""%s"" , prompt )"		2987146	0					
ANR	2987155	Callee	printf		2987146	0					
ANR	2987156	Identifier	printf		2987146	0					
ANR	2987157	ArgumentList	"""%s"""		2987146	1					
ANR	2987158	Argument	"""%s"""		2987146	0					
ANR	2987159	PrimaryExpression	"""%s"""		2987146	0					
ANR	2987160	Argument	prompt		2987146	1					
ANR	2987161	Identifier	prompt		2987146	0					
ANR	2987162	ExpressionStatement	"nbytes = read ( 0 , Myproxy_pw , sizeof ( Myproxy_pw ) - 1 )"	341:1:8403:8562	2987146	2	True				
ANR	2987163	AssignmentExpression	"nbytes = read ( 0 , Myproxy_pw , sizeof ( Myproxy_pw ) - 1 )"		2987146	0		=			
ANR	2987164	Identifier	nbytes		2987146	0					
ANR	2987165	CallExpression	"read ( 0 , Myproxy_pw , sizeof ( Myproxy_pw ) - 1 )"		2987146	1					
ANR	2987166	Callee	read		2987146	0					
ANR	2987167	Identifier	read		2987146	0					
ANR	2987168	ArgumentList	0		2987146	1					
ANR	2987169	Argument	0		2987146	0					
ANR	2987170	PrimaryExpression	0		2987146	0					
ANR	2987171	Argument	Myproxy_pw		2987146	1					
ANR	2987172	Identifier	Myproxy_pw		2987146	0					
ANR	2987173	Argument	sizeof ( Myproxy_pw ) - 1		2987146	2					
ANR	2987174	AdditiveExpression	sizeof ( Myproxy_pw ) - 1		2987146	0		-			
ANR	2987175	SizeofExpression	sizeof ( Myproxy_pw )		2987146	0					
ANR	2987176	Sizeof	sizeof		2987146	0					
ANR	2987177	SizeofOperand	Myproxy_pw		2987146	1					
ANR	2987178	PrimaryExpression	1		2987146	1					
ANR	2987179	IfStatement	if ( nbytes <= 0 )		2987146	3					
ANR	2987180	Condition	nbytes <= 0	348:6:8570:8580	2987146	0	True				
ANR	2987181	RelationalExpression	nbytes <= 0		2987146	0		<=			
ANR	2987182	Identifier	nbytes		2987146	0					
ANR	2987183	PrimaryExpression	0		2987146	1					
ANR	2987184	CompoundStatement		11:20:219:219	2987146	1					
ANR	2987185	ReturnStatement	return NULL ;	349:2:8588:8599	2987146	0	True				
ANR	2987186	Identifier	NULL		2987146	0					
ANR	2987187	ReturnStatement	return Myproxy_pw ;	352:1:8606:8623	2987146	4	True				
ANR	2987188	Identifier	Myproxy_pw		2987146	0					
ANR	2987189	ReturnType	char *		2987146	1					
ANR	2987190	Identifier	stdin_password		2987146	2					
ANR	2987191	ParameterList	const char * prompt		2987146	3					
ANR	2987192	Parameter	const char * prompt	338:15:8343:8361	2987146	0	True				
ANR	2987193	ParameterType	const char *		2987146	0					
ANR	2987194	Identifier	prompt		2987146	1					
ANR	2987195	CFGEntryNode	ENTRY		2987146		True				
ANR	2987196	CFGExitNode	EXIT		2987146		True				
ANR	2987197	Symbol	Myproxy_pw		2987146						
ANR	2987198	Symbol	read		2987146						
ANR	2987199	Symbol	NULL		2987146						
ANR	2987200	Symbol	prompt		2987146						
ANR	2987201	Symbol	nbytes		2987146						
ANR	2987202	Function	read_file	355:0:8628:9083							
ANR	2987203	FunctionDef	"read_file (const char * filename , char * & data , int & size)"		2987202	0					
ANR	2987204	CompoundStatement		356:60:8693:9083	2987202	0					
ANR	2987205	IdentifierDeclStatement	"int fd = safe_open_wrapper_follow ( filename , O_RDONLY ) ;"	358:1:8697:8750	2987202	0	True				
ANR	2987206	IdentifierDecl	"fd = safe_open_wrapper_follow ( filename , O_RDONLY )"		2987202	0					
ANR	2987207	IdentifierDeclType	int		2987202	0					
ANR	2987208	Identifier	fd		2987202	1					
ANR	2987209	AssignmentExpression	"fd = safe_open_wrapper_follow ( filename , O_RDONLY )"		2987202	2		=			
ANR	2987210	Identifier	fd		2987202	0					
ANR	2987211	CallExpression	"safe_open_wrapper_follow ( filename , O_RDONLY )"		2987202	1					
ANR	2987212	Callee	safe_open_wrapper_follow		2987202	0					
ANR	2987213	Identifier	safe_open_wrapper_follow		2987202	0					
ANR	2987214	ArgumentList	filename		2987202	1					
ANR	2987215	Argument	filename		2987202	0					
ANR	2987216	Identifier	filename		2987202	0					
ANR	2987217	Argument	O_RDONLY		2987202	1					
ANR	2987218	Identifier	O_RDONLY		2987202	0					
ANR	2987219	IfStatement	if ( fd == - 1 )		2987202	1					
ANR	2987220	Condition	fd == - 1	359:5:8757:8764	2987202	0	True				
ANR	2987221	EqualityExpression	fd == - 1		2987202	0		==			
ANR	2987222	Identifier	fd		2987202	0					
ANR	2987223	UnaryOperationExpression	- 1		2987202	1					
ANR	2987224	UnaryOperator	-		2987202	0					
ANR	2987225	PrimaryExpression	1		2987202	1					
ANR	2987226	CompoundStatement		4:15:73:73	2987202	1					
ANR	2987227	ReturnStatement	return false ;	360:2:8771:8783	2987202	0	True				
ANR	2987228	Identifier	false		2987202	0					
ANR	2987229	IdentifierDeclStatement	struct stat my_stat ;	363:1:8790:8809	2987202	2	True				
ANR	2987230	IdentifierDecl	my_stat		2987202	0					
ANR	2987231	IdentifierDeclType	struct stat		2987202	0					
ANR	2987232	Identifier	my_stat		2987202	1					
ANR	2987233	IfStatement	"if ( fstat ( fd , & my_stat ) != 0 )"		2987202	3					
ANR	2987234	Condition	"fstat ( fd , & my_stat ) != 0"	364:5:8816:8840	2987202	0	True				
ANR	2987235	EqualityExpression	"fstat ( fd , & my_stat ) != 0"		2987202	0		!=			
ANR	2987236	CallExpression	"fstat ( fd , & my_stat )"		2987202	0					
ANR	2987237	Callee	fstat		2987202	0					
ANR	2987238	Identifier	fstat		2987202	0					
ANR	2987239	ArgumentList	fd		2987202	1					
ANR	2987240	Argument	fd		2987202	0					
ANR	2987241	Identifier	fd		2987202	0					
ANR	2987242	Argument	& my_stat		2987202	1					
ANR	2987243	UnaryOperationExpression	& my_stat		2987202	0					
ANR	2987244	UnaryOperator	&		2987202	0					
ANR	2987245	Identifier	my_stat		2987202	1					
ANR	2987246	PrimaryExpression	0		2987202	1					
ANR	2987247	CompoundStatement		9:32:149:149	2987202	1					
ANR	2987248	ExpressionStatement	close ( fd )	365:2:8847:8857	2987202	0	True				
ANR	2987249	CallExpression	close ( fd )		2987202	0					
ANR	2987250	Callee	close		2987202	0					
ANR	2987251	Identifier	close		2987202	0					
ANR	2987252	ArgumentList	fd		2987202	1					
ANR	2987253	Argument	fd		2987202	0					
ANR	2987254	Identifier	fd		2987202	0					
ANR	2987255	ReturnStatement	return false ;	366:2:8861:8873	2987202	1	True				
ANR	2987256	Identifier	false		2987202	0					
ANR	2987257	ExpressionStatement	size = ( int ) my_stat . st_size	369:1:8880:8907	2987202	4	True				
ANR	2987258	AssignmentExpression	size = ( int ) my_stat . st_size		2987202	0		=			
ANR	2987259	Identifier	size		2987202	0					
ANR	2987260	CastExpression	( int ) my_stat . st_size		2987202	1					
ANR	2987261	CastTarget	int		2987202	0					
ANR	2987262	MemberAccess	my_stat . st_size		2987202	1					
ANR	2987263	Identifier	my_stat		2987202	0					
ANR	2987264	Identifier	st_size		2987202	1					
ANR	2987265	ExpressionStatement	data = ( char * ) malloc ( size + 1 )	370:1:8910:8938	2987202	5	True				
ANR	2987266	AssignmentExpression	data = ( char * ) malloc ( size + 1 )		2987202	0		=			
ANR	2987267	Identifier	data		2987202	0					
ANR	2987268	CastExpression	( char * ) malloc ( size + 1 )		2987202	1					
ANR	2987269	CastTarget	char *		2987202	0					
ANR	2987270	CallExpression	malloc ( size + 1 )		2987202	1					
ANR	2987271	Callee	malloc		2987202	0					
ANR	2987272	Identifier	malloc		2987202	0					
ANR	2987273	ArgumentList	size + 1		2987202	1					
ANR	2987274	Argument	size + 1		2987202	0					
ANR	2987275	AdditiveExpression	size + 1		2987202	0		+			
ANR	2987276	Identifier	size		2987202	0					
ANR	2987277	PrimaryExpression	1		2987202	1					
ANR	2987278	ExpressionStatement	data [ size ] = '\\0'	371:1:8941:8956	2987202	6	True				
ANR	2987279	AssignmentExpression	data [ size ] = '\\0'		2987202	0		=			
ANR	2987280	ArrayIndexing	data [ size ]		2987202	0					
ANR	2987281	Identifier	data		2987202	0					
ANR	2987282	Identifier	size		2987202	1					
ANR	2987283	PrimaryExpression	'\\0'		2987202	1					
ANR	2987284	IfStatement	if ( ! data )		2987202	7					
ANR	2987285	Condition	! data	372:5:8963:8967	2987202	0	True				
ANR	2987286	UnaryOperationExpression	! data		2987202	0					
ANR	2987287	UnaryOperator	!		2987202	0					
ANR	2987288	Identifier	data		2987202	1					
ANR	2987289	ReturnStatement	return false ;	373:2:8973:8985	2987202	1	True				
ANR	2987290	Identifier	false		2987202	0					
ANR	2987291	IfStatement	"if ( ! read ( fd , data , size ) )"		2987202	8					
ANR	2987292	Condition	"! read ( fd , data , size )"	375:5:8995:9016	2987202	0	True				
ANR	2987293	UnaryOperationExpression	"! read ( fd , data , size )"		2987202	0					
ANR	2987294	UnaryOperator	!		2987202	0					
ANR	2987295	CallExpression	"read ( fd , data , size )"		2987202	1					
ANR	2987296	Callee	read		2987202	0					
ANR	2987297	Identifier	read		2987202	0					
ANR	2987298	ArgumentList	fd		2987202	1					
ANR	2987299	Argument	fd		2987202	0					
ANR	2987300	Identifier	fd		2987202	0					
ANR	2987301	Argument	data		2987202	1					
ANR	2987302	Identifier	data		2987202	0					
ANR	2987303	Argument	size		2987202	2					
ANR	2987304	Identifier	size		2987202	0					
ANR	2987305	CompoundStatement		20:29:325:325	2987202	1					
ANR	2987306	ExpressionStatement	free ( data )	376:2:9023:9034	2987202	0	True				
ANR	2987307	CallExpression	free ( data )		2987202	0					
ANR	2987308	Callee	free		2987202	0					
ANR	2987309	Identifier	free		2987202	0					
ANR	2987310	ArgumentList	data		2987202	1					
ANR	2987311	Argument	data		2987202	0					
ANR	2987312	Identifier	data		2987202	0					
ANR	2987313	ReturnStatement	return false ;	377:2:9038:9050	2987202	1	True				
ANR	2987314	Identifier	false		2987202	0					
ANR	2987315	ExpressionStatement	close ( fd )	380:1:9057:9067	2987202	9	True				
ANR	2987316	CallExpression	close ( fd )		2987202	0					
ANR	2987317	Callee	close		2987202	0					
ANR	2987318	Identifier	close		2987202	0					
ANR	2987319	ArgumentList	fd		2987202	1					
ANR	2987320	Argument	fd		2987202	0					
ANR	2987321	Identifier	fd		2987202	0					
ANR	2987322	ReturnStatement	return true ;	381:1:9070:9081	2987202	10	True				
ANR	2987323	Identifier	true		2987202	0					
ANR	2987324	ReturnType	bool		2987202	1					
ANR	2987325	Identifier	read_file		2987202	2					
ANR	2987326	ParameterList	"const char * filename , char * & data , int & size"		2987202	3					
ANR	2987327	Parameter	const char * filename	356:11:8644:8664	2987202	0	True				
ANR	2987328	ParameterType	const char *		2987202	0					
ANR	2987329	Identifier	filename		2987202	1					
ANR	2987330	Parameter	char * & data	356:34:8667:8678	2987202	1	True				
ANR	2987331	ParameterType	char * &		2987202	0					
ANR	2987332	Identifier	data		2987202	1					
ANR	2987333	Parameter	int & size	356:48:8681:8690	2987202	2	True				
ANR	2987334	ParameterType	int &		2987202	0					
ANR	2987335	Identifier	size		2987202	1					
ANR	2987336	CFGEntryNode	ENTRY		2987202		True				
ANR	2987337	CFGExitNode	EXIT		2987202		True				
ANR	2987338	Symbol	malloc		2987202						
ANR	2987339	Symbol	safe_open_wrapper_follow		2987202						
ANR	2987340	Symbol	read		2987202						
ANR	2987341	Symbol	data		2987202						
ANR	2987342	Symbol	my_stat . st_size		2987202						
ANR	2987343	Symbol	false		2987202						
ANR	2987344	Symbol	fstat		2987202						
ANR	2987345	Symbol	& my_stat		2987202						
ANR	2987346	Symbol	filename		2987202						
ANR	2987347	Symbol	O_RDONLY		2987202						
ANR	2987348	Symbol	* size		2987202						
ANR	2987349	Symbol	size		2987202						
ANR	2987350	Symbol	my_stat		2987202						
ANR	2987351	Symbol	true		2987202						
ANR	2987352	Symbol	* data		2987202						
ANR	2987353	Symbol	fd		2987202						
