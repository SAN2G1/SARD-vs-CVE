command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1273123	File	data/converged/CVE-2011-4930_htcondor/dprintf_common.cpp								
ANR	1273124	DeclStmt									
ANR	1273125	Decl							int	int	DebugFlags
ANR	1273126	DeclStmt									
ANR	1273127	Decl							int	int	_condor_dprintf_works
ANR	1273128	DeclStmt									
ANR	1273129	Decl							const char	const char * [ ]	_condor_DebugFlagNames
ANR	1273130	Function	dprintf	71:0:2722:2879							
ANR	1273131	FunctionDef	"dprintf (int flags , const char * fmt)"		1273130	0					
ANR	1273132	CompoundStatement		73:0:2768:2879	1273130	0					
ANR	1273133	IdentifierDeclStatement	va_list args ;	74:4:2774:2786	1273130	0	True				
ANR	1273134	IdentifierDecl	args		1273130	0					
ANR	1273135	IdentifierDeclType	va_list		1273130	0					
ANR	1273136	Identifier	args		1273130	1					
ANR	1273137	ExpressionStatement	"va_start ( args , fmt )"	75:4:2792:2813	1273130	1	True				
ANR	1273138	CallExpression	"va_start ( args , fmt )"		1273130	0					
ANR	1273139	Callee	va_start		1273130	0					
ANR	1273140	Identifier	va_start		1273130	0					
ANR	1273141	ArgumentList	args		1273130	1					
ANR	1273142	Argument	args		1273130	0					
ANR	1273143	Identifier	args		1273130	0					
ANR	1273144	Argument	fmt		1273130	1					
ANR	1273145	Identifier	fmt		1273130	0					
ANR	1273146	ExpressionStatement	"_condor_dprintf_va ( flags , fmt , args )"	76:4:2819:2857	1273130	2	True				
ANR	1273147	CallExpression	"_condor_dprintf_va ( flags , fmt , args )"		1273130	0					
ANR	1273148	Callee	_condor_dprintf_va		1273130	0					
ANR	1273149	Identifier	_condor_dprintf_va		1273130	0					
ANR	1273150	ArgumentList	flags		1273130	1					
ANR	1273151	Argument	flags		1273130	0					
ANR	1273152	Identifier	flags		1273130	0					
ANR	1273153	Argument	fmt		1273130	1					
ANR	1273154	Identifier	fmt		1273130	0					
ANR	1273155	Argument	args		1273130	2					
ANR	1273156	Identifier	args		1273130	0					
ANR	1273157	ExpressionStatement	va_end ( args )	77:4:2863:2877	1273130	3	True				
ANR	1273158	CallExpression	va_end ( args )		1273130	0					
ANR	1273159	Callee	va_end		1273130	0					
ANR	1273160	Identifier	va_end		1273130	0					
ANR	1273161	ArgumentList	args		1273130	1					
ANR	1273162	Argument	args		1273130	0					
ANR	1273163	Identifier	args		1273130	0					
ANR	1273164	ReturnType	void		1273130	1					
ANR	1273165	Identifier	dprintf		1273130	2					
ANR	1273166	ParameterList	"int flags , const char * fmt"		1273130	3					
ANR	1273167	Parameter	int flags	72:8:2735:2743	1273130	0	True				
ANR	1273168	ParameterType	int		1273130	0					
ANR	1273169	Identifier	flags		1273130	1					
ANR	1273170	Parameter	const char * fmt	72:19:2746:2760	1273130	1	True				
ANR	1273171	ParameterType	const char *		1273130	0					
ANR	1273172	Identifier	fmt		1273130	1					
ANR	1273173	CFGEntryNode	ENTRY		1273130		True				
ANR	1273174	CFGExitNode	EXIT		1273130		True				
ANR	1273175	Symbol	args		1273130						
ANR	1273176	Symbol	flags		1273130						
ANR	1273177	Symbol	fmt		1273130						
ANR	1273178	Function	_condor_set_debug_flags	84:0:3024:3724							
ANR	1273179	FunctionDef	_condor_set_debug_flags (const char * strflags)		1273178	0					
ANR	1273180	CompoundStatement		86:0:3077:3724	1273178	0					
ANR	1273181	IdentifierDeclStatement	char * tmp ;	87:1:3080:3089	1273178	0	True				
ANR	1273182	IdentifierDecl	* tmp		1273178	0					
ANR	1273183	IdentifierDeclType	char *		1273178	0					
ANR	1273184	Identifier	tmp		1273178	1					
ANR	1273185	IdentifierDeclStatement	char * flag ;	88:1:3092:3102	1273178	1	True				
ANR	1273186	IdentifierDecl	* flag		1273178	0					
ANR	1273187	IdentifierDeclType	char *		1273178	0					
ANR	1273188	Identifier	flag		1273178	1					
ANR	1273189	IdentifierDeclStatement	"int notflag , bit , i ;"	89:1:3105:3124	1273178	2	True				
ANR	1273190	IdentifierDecl	notflag		1273178	0					
ANR	1273191	IdentifierDeclType	int		1273178	0					
ANR	1273192	Identifier	notflag		1273178	1					
ANR	1273193	IdentifierDecl	bit		1273178	1					
ANR	1273194	IdentifierDeclType	int		1273178	0					
ANR	1273195	Identifier	bit		1273178	1					
ANR	1273196	IdentifierDecl	i		1273178	2					
ANR	1273197	IdentifierDeclType	int		1273178	0					
ANR	1273198	Identifier	i		1273178	1					
ANR	1273199	ExpressionStatement	DebugFlags |= D_ALWAYS	92:1:3153:3175	1273178	3	True				
ANR	1273200	AssignmentExpression	DebugFlags |= D_ALWAYS		1273178	0		|=			
ANR	1273201	Identifier	DebugFlags		1273178	0					
ANR	1273202	Identifier	D_ALWAYS		1273178	1					
ANR	1273203	ExpressionStatement	tmp = strdup ( strflags )	94:1:3179:3203	1273178	4	True				
ANR	1273204	AssignmentExpression	tmp = strdup ( strflags )		1273178	0		=			
ANR	1273205	Identifier	tmp		1273178	0					
ANR	1273206	CallExpression	strdup ( strflags )		1273178	1					
ANR	1273207	Callee	strdup		1273178	0					
ANR	1273208	Identifier	strdup		1273178	0					
ANR	1273209	ArgumentList	strflags		1273178	1					
ANR	1273210	Argument	strflags		1273178	0					
ANR	1273211	Identifier	strflags		1273178	0					
ANR	1273212	IfStatement	if ( tmp == NULL )		1273178	5					
ANR	1273213	Condition	tmp == NULL	95:6:3211:3221	1273178	0	True				
ANR	1273214	EqualityExpression	tmp == NULL		1273178	0		==			
ANR	1273215	Identifier	tmp		1273178	0					
ANR	1273216	Identifier	NULL		1273178	1					
ANR	1273217	CompoundStatement		10:20:147:147	1273178	1					
ANR	1273218	ReturnStatement	return ;	96:2:3229:3235	1273178	0	True				
ANR	1273219	ExpressionStatement	"flag = strtok ( tmp , "", "" )"	99:1:3242:3268	1273178	6	True				
ANR	1273220	AssignmentExpression	"flag = strtok ( tmp , "", "" )"		1273178	0		=			
ANR	1273221	Identifier	flag		1273178	0					
ANR	1273222	CallExpression	"strtok ( tmp , "", "" )"		1273178	1					
ANR	1273223	Callee	strtok		1273178	0					
ANR	1273224	Identifier	strtok		1273178	0					
ANR	1273225	ArgumentList	tmp		1273178	1					
ANR	1273226	Argument	tmp		1273178	0					
ANR	1273227	Identifier	tmp		1273178	0					
ANR	1273228	Argument	""", """		1273178	1					
ANR	1273229	PrimaryExpression	""", """		1273178	0					
ANR	1273230	WhileStatement	while ( flag != NULL )		1273178	7					
ANR	1273231	Condition	flag != NULL	101:9:3280:3291	1273178	0	True				
ANR	1273232	EqualityExpression	flag != NULL		1273178	0		!=			
ANR	1273233	Identifier	flag		1273178	0					
ANR	1273234	Identifier	NULL		1273178	1					
ANR	1273235	CompoundStatement		16:24:217:217	1273178	1					
ANR	1273236	IfStatement	if ( * flag == '-' )		1273178	0					
ANR	1273237	Condition	* flag == '-'	102:6:3303:3314	1273178	0	True				
ANR	1273238	EqualityExpression	* flag == '-'		1273178	0		==			
ANR	1273239	UnaryOperationExpression	* flag		1273178	0					
ANR	1273240	UnaryOperator	*		1273178	0					
ANR	1273241	Identifier	flag		1273178	1					
ANR	1273242	PrimaryExpression	'-'		1273178	1					
ANR	1273243	CompoundStatement		17:21:240:240	1273178	1					
ANR	1273244	ExpressionStatement	flag += 1	103:3:3323:3332	1273178	0	True				
ANR	1273245	AssignmentExpression	flag += 1		1273178	0		+=			
ANR	1273246	Identifier	flag		1273178	0					
ANR	1273247	PrimaryExpression	1		1273178	1					
ANR	1273248	ExpressionStatement	notflag = 1	104:3:3337:3348	1273178	1	True				
ANR	1273249	AssignmentExpression	notflag = 1		1273178	0		=			
ANR	1273250	Identifier	notflag		1273178	0					
ANR	1273251	PrimaryExpression	1		1273178	1					
ANR	1273252	ElseStatement	else		1273178	0					
ANR	1273253	CompoundStatement		20:9:281:281	1273178	0					
ANR	1273254	ExpressionStatement	notflag = 0	106:3:3364:3375	1273178	0	True				
ANR	1273255	AssignmentExpression	notflag = 0		1273178	0		=			
ANR	1273256	Identifier	notflag		1273178	0					
ANR	1273257	PrimaryExpression	0		1273178	1					
ANR	1273258	ExpressionStatement	bit = 0	109:2:3384:3391	1273178	1	True				
ANR	1273259	AssignmentExpression	bit = 0		1273178	0		=			
ANR	1273260	Identifier	bit		1273178	0					
ANR	1273261	PrimaryExpression	0		1273178	1					
ANR	1273262	IfStatement	"if ( strcasecmp ( flag , ""D_ALL"" ) == 0 )"		1273178	2					
ANR	1273263	Condition	"strcasecmp ( flag , ""D_ALL"" ) == 0"	110:6:3399:3428	1273178	0	True				
ANR	1273264	EqualityExpression	"strcasecmp ( flag , ""D_ALL"" ) == 0"		1273178	0		==			
ANR	1273265	CallExpression	"strcasecmp ( flag , ""D_ALL"" )"		1273178	0					
ANR	1273266	Callee	strcasecmp		1273178	0					
ANR	1273267	Identifier	strcasecmp		1273178	0					
ANR	1273268	ArgumentList	flag		1273178	1					
ANR	1273269	Argument	flag		1273178	0					
ANR	1273270	Identifier	flag		1273178	0					
ANR	1273271	Argument	"""D_ALL"""		1273178	1					
ANR	1273272	PrimaryExpression	"""D_ALL"""		1273178	0					
ANR	1273273	PrimaryExpression	0		1273178	1					
ANR	1273274	CompoundStatement		25:39:354:354	1273178	1					
ANR	1273275	ExpressionStatement	bit = D_ALL	111:3:3437:3448	1273178	0	True				
ANR	1273276	AssignmentExpression	bit = D_ALL		1273178	0		=			
ANR	1273277	Identifier	bit		1273178	0					
ANR	1273278	Identifier	D_ALL		1273178	1					
ANR	1273279	ElseStatement	else		1273178	0					
ANR	1273280	ForStatement	for ( i = 0 ; i < D_MAXFLAGS ; i ++ )		1273178	0					
ANR	1273281	ForInit	i = 0 ;	112:14:3464:3469	1273178	0	True				
ANR	1273282	AssignmentExpression	i = 0		1273178	0		=			
ANR	1273283	Identifier	i		1273178	0					
ANR	1273284	PrimaryExpression	0		1273178	1					
ANR	1273285	Condition	i < D_MAXFLAGS	112:21:3471:3484	1273178	1	True				
ANR	1273286	RelationalExpression	i < D_MAXFLAGS		1273178	0		<			
ANR	1273287	Identifier	i		1273178	0					
ANR	1273288	Identifier	D_MAXFLAGS		1273178	1					
ANR	1273289	PostIncDecOperationExpression	i ++	112:37:3487:3489	1273178	2	True				
ANR	1273290	Identifier	i		1273178	0					
ANR	1273291	IncDec	++		1273178	1					
ANR	1273292	CompoundStatement		27:43:415:415	1273178	3					
ANR	1273293	IfStatement	"if ( strcasecmp ( flag , _condor_DebugFlagNames [ i ] ) == 0 )"		1273178	0					
ANR	1273294	Condition	"strcasecmp ( flag , _condor_DebugFlagNames [ i ] ) == 0"	113:7:3502:3549	1273178	0	True				
ANR	1273295	EqualityExpression	"strcasecmp ( flag , _condor_DebugFlagNames [ i ] ) == 0"		1273178	0		==			
ANR	1273296	CallExpression	"strcasecmp ( flag , _condor_DebugFlagNames [ i ] )"		1273178	0					
ANR	1273297	Callee	strcasecmp		1273178	0					
ANR	1273298	Identifier	strcasecmp		1273178	0					
ANR	1273299	ArgumentList	flag		1273178	1					
ANR	1273300	Argument	flag		1273178	0					
ANR	1273301	Identifier	flag		1273178	0					
ANR	1273302	Argument	_condor_DebugFlagNames [ i ]		1273178	1					
ANR	1273303	ArrayIndexing	_condor_DebugFlagNames [ i ]		1273178	0					
ANR	1273304	Identifier	_condor_DebugFlagNames		1273178	0					
ANR	1273305	Identifier	i		1273178	1					
ANR	1273306	PrimaryExpression	0		1273178	1					
ANR	1273307	CompoundStatement		28:58:475:475	1273178	1					
ANR	1273308	ExpressionStatement	bit = ( 1 << i )	114:4:3559:3573	1273178	0	True				
ANR	1273309	AssignmentExpression	bit = ( 1 << i )		1273178	0		=			
ANR	1273310	Identifier	bit		1273178	0					
ANR	1273311	ShiftExpression	1 << i		1273178	1		<<			
ANR	1273312	PrimaryExpression	1		1273178	0					
ANR	1273313	Identifier	i		1273178	1					
ANR	1273314	BreakStatement	break ;	115:4:3579:3584	1273178	1	True				
ANR	1273315	IfStatement	if ( notflag )		1273178	3					
ANR	1273316	Condition	notflag	119:6:3602:3608	1273178	0	True				
ANR	1273317	Identifier	notflag		1273178	0					
ANR	1273318	CompoundStatement		34:16:534:534	1273178	1					
ANR	1273319	ExpressionStatement	DebugFlags &= ~bit	120:3:3617:3635	1273178	0	True				
ANR	1273320	AssignmentExpression	DebugFlags &= ~bit		1273178	0		&=			
ANR	1273321	Identifier	DebugFlags		1273178	0					
ANR	1273322	Identifier	~bit		1273178	1					
ANR	1273323	ElseStatement	else		1273178	0					
ANR	1273324	CompoundStatement		36:9:568:568	1273178	0					
ANR	1273325	ExpressionStatement	DebugFlags |= bit	122:3:3651:3668	1273178	0	True				
ANR	1273326	AssignmentExpression	DebugFlags |= bit		1273178	0		|=			
ANR	1273327	Identifier	DebugFlags		1273178	0					
ANR	1273328	Identifier	bit		1273178	1					
ANR	1273329	ExpressionStatement	"flag = strtok ( NULL , "", "" )"	125:2:3677:3704	1273178	4	True				
ANR	1273330	AssignmentExpression	"flag = strtok ( NULL , "", "" )"		1273178	0		=			
ANR	1273331	Identifier	flag		1273178	0					
ANR	1273332	CallExpression	"strtok ( NULL , "", "" )"		1273178	1					
ANR	1273333	Callee	strtok		1273178	0					
ANR	1273334	Identifier	strtok		1273178	0					
ANR	1273335	ArgumentList	NULL		1273178	1					
ANR	1273336	Argument	NULL		1273178	0					
ANR	1273337	Identifier	NULL		1273178	0					
ANR	1273338	Argument	""", """		1273178	1					
ANR	1273339	PrimaryExpression	""", """		1273178	0					
ANR	1273340	ExpressionStatement	free ( tmp )	128:1:3711:3722	1273178	8	True				
ANR	1273341	CallExpression	free ( tmp )		1273178	0					
ANR	1273342	Callee	free		1273178	0					
ANR	1273343	Identifier	free		1273178	0					
ANR	1273344	ArgumentList	tmp		1273178	1					
ANR	1273345	Argument	tmp		1273178	0					
ANR	1273346	Identifier	tmp		1273178	0					
ANR	1273347	ReturnType	void		1273178	1					
ANR	1273348	Identifier	_condor_set_debug_flags		1273178	2					
ANR	1273349	ParameterList	const char * strflags		1273178	3					
ANR	1273350	Parameter	const char * strflags	85:25:3054:3073	1273178	0	True				
ANR	1273351	ParameterType	const char *		1273178	0					
ANR	1273352	Identifier	strflags		1273178	1					
ANR	1273353	CFGEntryNode	ENTRY		1273178		True				
ANR	1273354	CFGExitNode	EXIT		1273178		True				
ANR	1273355	Symbol	D_MAXFLAGS		1273178						
ANR	1273356	Symbol	flag		1273178						
ANR	1273357	Symbol	NULL		1273178						
ANR	1273358	Symbol	strflags		1273178						
ANR	1273359	Symbol	* _condor_DebugFlagNames		1273178						
ANR	1273360	Symbol	D_ALWAYS		1273178						
ANR	1273361	Symbol	i		1273178						
ANR	1273362	Symbol	DebugFlags		1273178						
ANR	1273363	Symbol	strtok		1273178						
ANR	1273364	Symbol	bit		1273178						
ANR	1273365	Symbol	D_ALL		1273178						
ANR	1273366	Symbol	_condor_DebugFlagNames		1273178						
ANR	1273367	Symbol	* i		1273178						
ANR	1273368	Symbol	notflag		1273178						
ANR	1273369	Symbol	~bit		1273178						
ANR	1273370	Symbol	tmp		1273178						
ANR	1273371	Symbol	strdup		1273178						
ANR	1273372	Symbol	* flag		1273178						
ANR	1273373	Symbol	strcasecmp		1273178						
ANR	1273374	Function	_condor_debug_get_time_double	135:0:3784:4129							
ANR	1273375	FunctionDef	_condor_debug_get_time_double ()		1273374	0					
ANR	1273376	CompoundStatement		136:0:3830:4129	1273374	0					
ANR	1273377	IdentifierDeclStatement	struct _timeb timebuffer ;	138:1:3858:3882	1273374	0	True				
ANR	1273378	IdentifierDecl	timebuffer		1273374	0					
ANR	1273379	IdentifierDeclType	struct _timeb		1273374	0					
ANR	1273380	Identifier	timebuffer		1273374	1					
ANR	1273381	ExpressionStatement	_ftime ( & timebuffer )	139:1:3885:3906	1273374	1	True				
ANR	1273382	CallExpression	_ftime ( & timebuffer )		1273374	0					
ANR	1273383	Callee	_ftime		1273374	0					
ANR	1273384	Identifier	_ftime		1273374	0					
ANR	1273385	ArgumentList	& timebuffer		1273374	1					
ANR	1273386	Argument	& timebuffer		1273374	0					
ANR	1273387	UnaryOperationExpression	& timebuffer		1273374	0					
ANR	1273388	UnaryOperator	&		1273374	0					
ANR	1273389	Identifier	timebuffer		1273374	1					
ANR	1273390	ReturnStatement	return ( timebuffer . time + ( timebuffer . millitm * 0.001 ) ) ;	140:1:3909:3966	1273374	2	True				
ANR	1273391	AdditiveExpression	timebuffer . time + ( timebuffer . millitm * 0.001 )		1273374	0		+			
ANR	1273392	MemberAccess	timebuffer . time		1273374	0					
ANR	1273393	Identifier	timebuffer		1273374	0					
ANR	1273394	Identifier	time		1273374	1					
ANR	1273395	MultiplicativeExpression	timebuffer . millitm * 0.001		1273374	1		*			
ANR	1273396	MemberAccess	timebuffer . millitm		1273374	0					
ANR	1273397	Identifier	timebuffer		1273374	0					
ANR	1273398	Identifier	millitm		1273374	1					
ANR	1273399	PrimaryExpression	0.001		1273374	1					
ANR	1273400	ReturnType	static double		1273374	1					
ANR	1273401	Identifier	_condor_debug_get_time_double		1273374	2					
ANR	1273402	ParameterList			1273374	3					
ANR	1273403	CFGEntryNode	ENTRY		1273374		True				
ANR	1273404	CFGExitNode	EXIT		1273374		True				
ANR	1273405	Symbol	timebuffer . millitm		1273374						
ANR	1273406	Symbol	timebuffer		1273374						
ANR	1273407	Symbol	timebuffer . time		1273374						
ANR	1273408	Symbol	& timebuffer		1273374						
ANR	1273409	Function	_condor_auto_save_runtime :: _condor_auto_save_runtime	150:0:4132:4273							
ANR	1273410	FunctionDef	_condor_auto_save_runtime :: _condor_auto_save_runtime (double & store)		1273409	0					
ANR	1273411	CompoundStatement		152:0:4221:4273	1273409	0					
ANR	1273412	ExpressionStatement	this -> begin = _condor_debug_get_time_double ( )	153:3:4226:4271	1273409	0	True				
ANR	1273413	AssignmentExpression	this -> begin = _condor_debug_get_time_double ( )		1273409	0		=			
ANR	1273414	PtrMemberAccess	this -> begin		1273409	0					
ANR	1273415	Identifier	this		1273409	0					
ANR	1273416	Identifier	begin		1273409	1					
ANR	1273417	CallExpression	_condor_debug_get_time_double ( )		1273409	1					
ANR	1273418	Callee	_condor_debug_get_time_double		1273409	0					
ANR	1273419	Identifier	_condor_debug_get_time_double		1273409	0					
ANR	1273420	ArgumentList			1273409	1					
ANR	1273421	Identifier	_condor_auto_save_runtime :: _condor_auto_save_runtime		1273409	1					
ANR	1273422	ParameterList	double & store		1273409	2					
ANR	1273423	Parameter	double & store	150:53:4185:4198	1273409	0	True				
ANR	1273424	ParameterType	double &		1273409	0					
ANR	1273425	Identifier	store		1273409	1					
ANR	1273426	CFGEntryNode	ENTRY		1273409		True				
ANR	1273427	CFGExitNode	EXIT		1273409		True				
ANR	1273428	Symbol	_condor_debug_get_time_double		1273409						
ANR	1273429	Symbol	* this		1273409						
ANR	1273430	Symbol	this -> begin		1273409						
ANR	1273431	Symbol	this		1273409						
ANR	1273432	Symbol	store		1273409						
ANR	1273433	Function	_condor_auto_save_runtime :: current_runtime	155:0:4275:4380							
ANR	1273434	FunctionDef	_condor_auto_save_runtime :: current_runtime ()		1273433	0					
ANR	1273435	CompoundStatement		156:0:4327:4380	1273433	0					
ANR	1273436	ReturnStatement	return _condor_debug_get_time_double ( ) - begin ;	157:3:4332:4378	1273433	0	True				
ANR	1273437	AdditiveExpression	_condor_debug_get_time_double ( ) - begin		1273433	0		-			
ANR	1273438	CallExpression	_condor_debug_get_time_double ( )		1273433	0					
ANR	1273439	Callee	_condor_debug_get_time_double		1273433	0					
ANR	1273440	Identifier	_condor_debug_get_time_double		1273433	0					
ANR	1273441	ArgumentList			1273433	1					
ANR	1273442	Identifier	begin		1273433	1					
ANR	1273443	ReturnType	double		1273433	1					
ANR	1273444	Identifier	_condor_auto_save_runtime :: current_runtime		1273433	2					
ANR	1273445	ParameterList			1273433	3					
ANR	1273446	CFGEntryNode	ENTRY		1273433		True				
ANR	1273447	CFGExitNode	EXIT		1273433		True				
ANR	1273448	Symbol	_condor_debug_get_time_double		1273433						
ANR	1273449	Symbol	begin		1273433						
ANR	1273450	Function	_condor_auto_save_runtime :: ~_condor_auto_save_runtime	159:0:4382:4472							
ANR	1273451	FunctionDef	_condor_auto_save_runtime :: ~_condor_auto_save_runtime ()		1273450	0					
ANR	1273452	CompoundStatement		160:0:4438:4472	1273450	0					
ANR	1273453	ExpressionStatement	runtime = current_runtime ( )	161:3:4443:4470	1273450	0	True				
ANR	1273454	AssignmentExpression	runtime = current_runtime ( )		1273450	0		=			
ANR	1273455	Identifier	runtime		1273450	0					
ANR	1273456	CallExpression	current_runtime ( )		1273450	1					
ANR	1273457	Callee	current_runtime		1273450	0					
ANR	1273458	Identifier	current_runtime		1273450	0					
ANR	1273459	ArgumentList			1273450	1					
ANR	1273460	Identifier	_condor_auto_save_runtime :: ~_condor_auto_save_runtime		1273450	1					
ANR	1273461	ParameterList			1273450	2					
ANR	1273462	CFGEntryNode	ENTRY		1273450		True				
ANR	1273463	CFGExitNode	EXIT		1273450		True				
ANR	1273464	Symbol	runtime		1273450						
ANR	1273465	Symbol	current_runtime		1273450						
ANR	1273466	Function	_condor_sprintf_va	181:0:5185:5638							
ANR	1273467	FunctionDef	"_condor_sprintf_va (int flags , FILE * fp , char * fmt , va_list args)"		1273466	0					
ANR	1273468	CompoundStatement		183:0:5257:5638	1273466	0					
ANR	1273469	IfStatement	if ( ! ( flags & D_ALWAYS ) )		1273466	0					
ANR	1273470	Condition	! ( flags & D_ALWAYS )	191:8:5563:5582	1273466	0	True				
ANR	1273471	UnaryOperationExpression	! ( flags & D_ALWAYS )		1273466	0					
ANR	1273472	UnaryOperator	!		1273466	0					
ANR	1273473	BitAndExpression	flags & D_ALWAYS		1273466	1		&			
ANR	1273474	Identifier	flags		1273466	0					
ANR	1273475	Identifier	D_ALWAYS		1273466	1					
ANR	1273476	CompoundStatement		9:31:328:328	1273466	1					
ANR	1273477	ReturnStatement	return ;	192:8:5596:5602	1273466	0	True				
ANR	1273478	ExpressionStatement	"vfprintf ( fp , fmt , args )"	194:1:5611:5636	1273466	1	True				
ANR	1273479	CallExpression	"vfprintf ( fp , fmt , args )"		1273466	0					
ANR	1273480	Callee	vfprintf		1273466	0					
ANR	1273481	Identifier	vfprintf		1273466	0					
ANR	1273482	ArgumentList	fp		1273466	1					
ANR	1273483	Argument	fp		1273466	0					
ANR	1273484	Identifier	fp		1273466	0					
ANR	1273485	Argument	fmt		1273466	1					
ANR	1273486	Identifier	fmt		1273466	0					
ANR	1273487	Argument	args		1273466	2					
ANR	1273488	Identifier	args		1273466	0					
ANR	1273489	ReturnType	void		1273466	1					
ANR	1273490	Identifier	_condor_sprintf_va		1273466	2					
ANR	1273491	ParameterList	"int flags , FILE * fp , char * fmt , va_list args"		1273466	3					
ANR	1273492	Parameter	int flags	182:20:5210:5218	1273466	0	True				
ANR	1273493	ParameterType	int		1273466	0					
ANR	1273494	Identifier	flags		1273466	1					
ANR	1273495	Parameter	FILE * fp	182:31:5221:5228	1273466	1	True				
ANR	1273496	ParameterType	FILE *		1273466	0					
ANR	1273497	Identifier	fp		1273466	1					
ANR	1273498	Parameter	char * fmt	182:41:5231:5239	1273466	2	True				
ANR	1273499	ParameterType	char *		1273466	0					
ANR	1273500	Identifier	fmt		1273466	1					
ANR	1273501	Parameter	va_list args	182:52:5242:5253	1273466	3	True				
ANR	1273502	ParameterType	va_list		1273466	0					
ANR	1273503	Identifier	args		1273466	1					
ANR	1273504	CFGEntryNode	ENTRY		1273466		True				
ANR	1273505	CFGExitNode	EXIT		1273466		True				
ANR	1273506	Symbol	args		1273466						
ANR	1273507	Symbol	flags		1273466						
ANR	1273508	Symbol	D_ALWAYS		1273466						
ANR	1273509	Symbol	fp		1273466						
ANR	1273510	Symbol	fmt		1273466						
