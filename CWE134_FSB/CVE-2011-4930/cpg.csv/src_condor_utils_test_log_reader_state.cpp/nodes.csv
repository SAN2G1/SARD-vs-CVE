command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4935045	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_test_log_reader_state.cpp								
ANR	4935046	DeclStmt									
ANR	4935047	Decl							const char	const char *	VERSION
ANR	4935048	ClassDef	Verbosity	33:0:1114:1185							
ANR	4935049	ClassDef	Command	40:0:1188:1272							
ANR	4935050	ClassDef	Field	49:0:1275:1597							
ANR	4935051	ClassDef	DataType	70:0:1600:1697							
ANR	4935052	ClassDef	FieldData	80:0:1701:1800							
ANR	4935053	DeclStmt									
ANR	4935054	Decl							Field	Field	m_field
ANR	4935055	DeclStmt									
ANR	4935056	Decl							DataType	DataType	m_type
ANR	4935057	DeclStmt									
ANR	4935058	Decl							int	int	m_max_values
ANR	4935059	DeclStmt									
ANR	4935060	Decl							const char	const char *	m_name
ANR	4935061	DeclStmt									
ANR	4935062	Decl							const FieldData	const FieldData [ ]	fieldList
ANR	4935063	ClassDef	IntVal	109:0:2776:2837							
ANR	4935064	DeclStmt									
ANR	4935065	Decl							filesize_t	filesize_t	asFsize
ANR	4935066	DeclStmt									
ANR	4935067	Decl							int	int	asInt
ANR	4935068	DeclStmt									
ANR	4935069	Decl							time_t	time_t	asTime
ANR	4935070	ClassDef	Value	110:0:2840:2972							
ANR	4935071	ClassDef	<unnamed>	112:1:2856:2904							
ANR	4935072	DeclStmt									
ANR	4935073	Decl							IntVal	IntVal	minVal
ANR	4935074	DeclStmt									
ANR	4935075	Decl							IntVal	IntVal	maxVal
ANR	4935076	DeclStmt									
ANR	4935077	Decl									asRange
ANR	4935078	DeclStmt									
ANR	4935079	Decl							IntVal	IntVal	asInt
ANR	4935080	DeclStmt									
ANR	4935081	Decl							StatStructInode	StatStructInode	asInode
ANR	4935082	DeclStmt									
ANR	4935083	Decl							const char	const char *	asStr
ANR	4935084	ClassDef	Options	118:0:2976:4467							
ANR	4935085	Function	~Options	122:1:3019:3038							
ANR	4935086	FunctionDef	~Options ()		4935085	0					
ANR	4935087	CompoundStatement		122:18:3036:3038	4935085	0					
ANR	4935088	Identifier	~Options		4935085	1					
ANR	4935089	ParameterList			4935085	2					
ANR	4935090	CFGEntryNode	ENTRY		4935085		True				
ANR	4935091	CFGExitNode	EXIT		4935085		True				
ANR	4935092	DeclStmt									
ANR	4935093	Decl							int	"int ( SimpleArg & arg , int & )"	handleOpt
ANR	4935094	DeclStmt									
ANR	4935095	Decl							int	"int ( SimpleArg & arg , int & )"	handleFixed
ANR	4935096	Function	getFile	128:1:3129:3180							
ANR	4935097	FunctionDef	getFile ()		4935096	3					
ANR	4935098	CompoundStatement		128:35:3163:3180	4935096	0					
ANR	4935099	ReturnStatement	return m_file ;	128:1:3165:3178	4935096	0	True				
ANR	4935100	Identifier	m_file		4935096	0					
ANR	4935101	ReturnType	const char *		4935096	1					
ANR	4935102	Identifier	getFile		4935096	2					
ANR	4935103	ParameterList			4935096	3					
ANR	4935104	CFGEntryNode	ENTRY		4935096		True				
ANR	4935105	CFGExitNode	EXIT		4935096		True				
ANR	4935106	Symbol	m_file		4935096						
ANR	4935107	Function	getFile2	129:1:3184:3237							
ANR	4935108	FunctionDef	getFile2 ()		4935107	4					
ANR	4935109	CompoundStatement		129:36:3219:3237	4935107	0					
ANR	4935110	ReturnStatement	return m_file2 ;	129:1:3221:3235	4935107	0	True				
ANR	4935111	Identifier	m_file2		4935107	0					
ANR	4935112	ReturnType	const char *		4935107	1					
ANR	4935113	Identifier	getFile2		4935107	2					
ANR	4935114	ParameterList			4935107	3					
ANR	4935115	CFGEntryNode	ENTRY		4935107		True				
ANR	4935116	CFGExitNode	EXIT		4935107		True				
ANR	4935117	Symbol	m_file2		4935107						
ANR	4935118	Function	getCommand	130:1:3241:3294							
ANR	4935119	FunctionDef	getCommand ()		4935118	5					
ANR	4935120	CompoundStatement		130:34:3274:3294	4935118	0					
ANR	4935121	ReturnStatement	return m_command ;	130:1:3276:3292	4935118	0	True				
ANR	4935122	Identifier	m_command		4935118	0					
ANR	4935123	ReturnType	Command		4935118	1					
ANR	4935124	Identifier	getCommand		4935118	2					
ANR	4935125	ParameterList			4935118	3					
ANR	4935126	CFGEntryNode	ENTRY		4935118		True				
ANR	4935127	CFGExitNode	EXIT		4935118		True				
ANR	4935128	Symbol	m_command		4935118						
ANR	4935129	Function	getField	131:1:3298:3356							
ANR	4935130	FunctionDef	getField ()		4935129	6					
ANR	4935131	CompoundStatement		131:41:3338:3356	4935129	0					
ANR	4935132	ReturnStatement	return m_field ;	131:1:3340:3354	4935129	0	True				
ANR	4935133	Identifier	m_field		4935129	0					
ANR	4935134	ReturnType	const FieldData *		4935129	1					
ANR	4935135	Identifier	getField		4935129	2					
ANR	4935136	ParameterList			4935129	3					
ANR	4935137	CFGEntryNode	ENTRY		4935129		True				
ANR	4935138	CFGExitNode	EXIT		4935129		True				
ANR	4935139	Symbol	m_field		4935129						
ANR	4935140	Function	getValue	132:1:3360:3407							
ANR	4935141	FunctionDef	getValue ()		4935140	7					
ANR	4935142	CompoundStatement		132:30:3389:3407	4935140	0					
ANR	4935143	ReturnStatement	return m_value ;	132:1:3391:3405	4935140	0	True				
ANR	4935144	Identifier	m_value		4935140	0					
ANR	4935145	ReturnType	Value		4935140	1					
ANR	4935146	Identifier	getValue		4935140	2					
ANR	4935147	ParameterList			4935140	3					
ANR	4935148	CFGEntryNode	ENTRY		4935140		True				
ANR	4935149	CFGExitNode	EXIT		4935140		True				
ANR	4935150	Symbol	m_value		4935140						
ANR	4935151	Function	isValueRange	133:1:3411:3470							
ANR	4935152	FunctionDef	isValueRange ()		4935151	8					
ANR	4935153	CompoundStatement		133:33:3443:3470	4935151	0					
ANR	4935154	ReturnStatement	return m_value_is_range ;	133:1:3445:3468	4935151	0	True				
ANR	4935155	Identifier	m_value_is_range		4935151	0					
ANR	4935156	ReturnType	bool		4935151	1					
ANR	4935157	Identifier	isValueRange		4935151	2					
ANR	4935158	ParameterList			4935151	3					
ANR	4935159	CFGEntryNode	ENTRY		4935151		True				
ANR	4935160	CFGExitNode	EXIT		4935151		True				
ANR	4935161	Symbol	m_value_is_range		4935151						
ANR	4935162	Function	getVerbose	134:1:3474:3523							
ANR	4935163	FunctionDef	getVerbose ()		4935162	9					
ANR	4935164	CompoundStatement		134:30:3503:3523	4935162	0					
ANR	4935165	ReturnStatement	return m_verbose ;	134:1:3505:3521	4935162	0	True				
ANR	4935166	Identifier	m_verbose		4935162	0					
ANR	4935167	ReturnType	int		4935162	1					
ANR	4935168	Identifier	getVerbose		4935162	2					
ANR	4935169	ParameterList			4935162	3					
ANR	4935170	CFGEntryNode	ENTRY		4935162		True				
ANR	4935171	CFGExitNode	EXIT		4935162		True				
ANR	4935172	Symbol	m_verbose		4935162						
ANR	4935173	Function	getNumeric	135:1:3527:3577							
ANR	4935174	FunctionDef	getNumeric ()		4935173	10					
ANR	4935175	CompoundStatement		135:31:3557:3577	4935173	0					
ANR	4935176	ReturnStatement	return m_numeric ;	135:1:3559:3575	4935173	0	True				
ANR	4935177	Identifier	m_numeric		4935173	0					
ANR	4935178	ReturnType	bool		4935173	1					
ANR	4935179	Identifier	getNumeric		4935173	2					
ANR	4935180	ParameterList			4935173	3					
ANR	4935181	CFGEntryNode	ENTRY		4935173		True				
ANR	4935182	CFGExitNode	EXIT		4935173		True				
ANR	4935183	Symbol	m_numeric		4935173						
ANR	4935184	Function	getUsage	136:1:3581:3634							
ANR	4935185	FunctionDef	getUsage ()		4935184	11					
ANR	4935186	CompoundStatement		136:36:3616:3634	4935184	0					
ANR	4935187	ReturnStatement	return m_usage ;	136:1:3618:3632	4935184	0	True				
ANR	4935188	Identifier	m_usage		4935184	0					
ANR	4935189	ReturnType	const char *		4935184	1					
ANR	4935190	Identifier	getUsage		4935184	2					
ANR	4935191	ParameterList			4935184	3					
ANR	4935192	CFGEntryNode	ENTRY		4935184		True				
ANR	4935193	CFGExitNode	EXIT		4935184		True				
ANR	4935194	Symbol	m_usage		4935184						
ANR	4935195	Function	isValueOk	139:1:3725:3782							
ANR	4935196	FunctionDef	isValueOk ()		4935195	12					
ANR	4935197	CompoundStatement		139:30:3754:3782	4935195	0					
ANR	4935198	ReturnStatement	return m_num_values >= 1 ;	139:1:3756:3780	4935195	0	True				
ANR	4935199	RelationalExpression	m_num_values >= 1		4935195	0		>=			
ANR	4935200	Identifier	m_num_values		4935195	0					
ANR	4935201	PrimaryExpression	1		4935195	1					
ANR	4935202	ReturnType	bool		4935195	1					
ANR	4935203	Identifier	isValueOk		4935195	2					
ANR	4935204	ParameterList			4935195	3					
ANR	4935205	CFGEntryNode	ENTRY		4935195		True				
ANR	4935206	CFGExitNode	EXIT		4935195		True				
ANR	4935207	Symbol	m_num_values		4935195						
ANR	4935208	Function	needStateFile	140:1:3786:3851							
ANR	4935209	FunctionDef	needStateFile ()		4935208	13					
ANR	4935210	CompoundStatement		140:34:3819:3851	4935208	0					
ANR	4935211	ReturnStatement	return m_command != CMD_LIST ;	140:1:3821:3849	4935208	0	True				
ANR	4935212	EqualityExpression	m_command != CMD_LIST		4935208	0		!=			
ANR	4935213	Identifier	m_command		4935208	0					
ANR	4935214	Identifier	CMD_LIST		4935208	1					
ANR	4935215	ReturnType	bool		4935208	1					
ANR	4935216	Identifier	needStateFile		4935208	2					
ANR	4935217	ParameterList			4935208	3					
ANR	4935218	CFGEntryNode	ENTRY		4935208		True				
ANR	4935219	CFGExitNode	EXIT		4935208		True				
ANR	4935220	Symbol	m_command		4935208						
ANR	4935221	Symbol	CMD_LIST		4935208						
ANR	4935222	Function	needStateFile2	141:1:3855:3921							
ANR	4935223	FunctionDef	needStateFile2 ()		4935222	14					
ANR	4935224	CompoundStatement		141:35:3889:3921	4935222	0					
ANR	4935225	ReturnStatement	return m_command == CMD_DIFF ;	141:1:3891:3919	4935222	0	True				
ANR	4935226	EqualityExpression	m_command == CMD_DIFF		4935222	0		==			
ANR	4935227	Identifier	m_command		4935222	0					
ANR	4935228	Identifier	CMD_DIFF		4935222	1					
ANR	4935229	ReturnType	bool		4935222	1					
ANR	4935230	Identifier	needStateFile2		4935222	2					
ANR	4935231	ParameterList			4935222	3					
ANR	4935232	CFGEntryNode	ENTRY		4935222		True				
ANR	4935233	CFGExitNode	EXIT		4935222		True				
ANR	4935234	Symbol	m_command		4935222						
ANR	4935235	Symbol	CMD_DIFF		4935222						
ANR	4935236	ClassDef	<unnamed>	144:1:3935:4036							
ANR	4935237	DeclStmt									
ANR	4935238	Decl									m_state
ANR	4935239	DeclStmt									
ANR	4935240	Decl							const char	const char *	m_file
ANR	4935241	DeclStmt									
ANR	4935242	Decl							const char	const char *	m_file2
ANR	4935243	DeclStmt									
ANR	4935244	Decl							Command	Command	m_command
ANR	4935245	DeclStmt									
ANR	4935246	Decl							const FieldData	const FieldData *	m_field
ANR	4935247	DeclStmt									
ANR	4935248	Decl							Value	Value	m_value
ANR	4935249	DeclStmt									
ANR	4935250	Decl							bool	bool	m_value_is_range
ANR	4935251	DeclStmt									
ANR	4935252	Decl							int	int	m_num_values
ANR	4935253	DeclStmt									
ANR	4935254	Decl							int	int	m_verbose
ANR	4935255	DeclStmt									
ANR	4935256	Decl							bool	bool	m_numeric
ANR	4935257	DeclStmt									
ANR	4935258	Decl							const char	const char *	m_usage
ANR	4935259	DeclStmt									
ANR	4935260	Decl							bool	bool ( const SimpleArg & )	lookupCommand
ANR	4935261	DeclStmt									
ANR	4935262	Decl							bool	bool ( const SimpleArg & arg )	parseValue
ANR	4935263	DeclStmt									
ANR	4935264	Decl							int	"int ( int argc , const char * * argv , Options & opts )"	CheckArgs
ANR	4935265	DeclStmt									
ANR	4935266	Decl							int	"int ( const Options & opts , ReadUserLog :: FileState & state )"	ReadState
ANR	4935267	DeclStmt									
ANR	4935268	Decl							int	"int ( const Options & opts , const ReadUserLog :: FileState & state , const ReadUserLog :: FileState & state2 )"	DiffState
ANR	4935269	DeclStmt									
ANR	4935270	Decl							int	"int ( const Options & opts , const ReadUserLog :: FileState & state )"	VerifyState
ANR	4935271	DeclStmt									
ANR	4935272	Decl							int	"int ( const Options & opts , const ReadUserLog :: FileState & state )"	CheckStateAccess
ANR	4935273	DeclStmt									
ANR	4935274	Decl							const char	const char * ( char * buf )	chomptime
ANR	4935275	DeclStmt									
ANR	4935276	Decl							bool	bool	global_done
ANR	4935277	Function	handle_sig	194:0:5250:5353							
ANR	4935278	FunctionDef	handle_sig (int sig)		4935277	0					
ANR	4935279	CompoundStatement		195:0:5275:5353	4935277	0					
ANR	4935280	ExpressionStatement	( void ) sig	196:1:5278:5288	4935277	0	True				
ANR	4935281	CastExpression	( void ) sig		4935277	0					
ANR	4935282	CastTarget	void		4935277	0					
ANR	4935283	Identifier	sig		4935277	1					
ANR	4935284	ExpressionStatement	"printf ( ""Got signal; shutting down\\n"" )"	197:1:5291:5330	4935277	1	True				
ANR	4935285	CallExpression	"printf ( ""Got signal; shutting down\\n"" )"		4935277	0					
ANR	4935286	Callee	printf		4935277	0					
ANR	4935287	Identifier	printf		4935277	0					
ANR	4935288	ArgumentList	"""Got signal; shutting down\\n"""		4935277	1					
ANR	4935289	Argument	"""Got signal; shutting down\\n"""		4935277	0					
ANR	4935290	PrimaryExpression	"""Got signal; shutting down\\n"""		4935277	0					
ANR	4935291	ExpressionStatement	global_done = true	198:1:5333:5351	4935277	2	True				
ANR	4935292	AssignmentExpression	global_done = true		4935277	0		=			
ANR	4935293	Identifier	global_done		4935277	0					
ANR	4935294	Identifier	true		4935277	1					
ANR	4935295	ReturnType	void		4935277	1					
ANR	4935296	Identifier	handle_sig		4935277	2					
ANR	4935297	ParameterList	int sig		4935277	3					
ANR	4935298	Parameter	int sig	194:16:5266:5272	4935277	0	True				
ANR	4935299	ParameterType	int		4935277	0					
ANR	4935300	Identifier	sig		4935277	1					
ANR	4935301	CFGEntryNode	ENTRY		4935277		True				
ANR	4935302	CFGExitNode	EXIT		4935277		True				
ANR	4935303	Symbol	sig		4935277						
ANR	4935304	Symbol	true		4935277						
ANR	4935305	Symbol	global_done		4935277						
ANR	4935306	Function	main	201:0:5356:6643							
ANR	4935307	FunctionDef	"main (int argc , const char * * argv)"		4935306	0					
ANR	4935308	CompoundStatement		203:0:5394:6643	4935306	0					
ANR	4935309	ExpressionStatement	DebugFlags = D_ALWAYS	204:1:5397:5418	4935306	0	True				
ANR	4935310	AssignmentExpression	DebugFlags = D_ALWAYS		4935306	0		=			
ANR	4935311	Identifier	DebugFlags		4935306	0					
ANR	4935312	Identifier	D_ALWAYS		4935306	1					
ANR	4935313	IdentifierDeclStatement	param_functions * p_funcs = NULL ;	205:1:5421:5452	4935306	1	True				
ANR	4935314	IdentifierDecl	* p_funcs = NULL		4935306	0					
ANR	4935315	IdentifierDeclType	param_functions *		4935306	0					
ANR	4935316	Identifier	p_funcs		4935306	1					
ANR	4935317	AssignmentExpression	* p_funcs = NULL		4935306	2		=			
ANR	4935318	Identifier	NULL		4935306	0					
ANR	4935319	Identifier	NULL		4935306	1					
ANR	4935320	ExpressionStatement	"set_mySubSystem ( ""TEST_LOG_READER_STATE"" , SUBSYSTEM_TYPE_TOOL )"	207:1:5456:5519	4935306	2	True				
ANR	4935321	CallExpression	"set_mySubSystem ( ""TEST_LOG_READER_STATE"" , SUBSYSTEM_TYPE_TOOL )"		4935306	0					
ANR	4935322	Callee	set_mySubSystem		4935306	0					
ANR	4935323	Identifier	set_mySubSystem		4935306	0					
ANR	4935324	ArgumentList	"""TEST_LOG_READER_STATE"""		4935306	1					
ANR	4935325	Argument	"""TEST_LOG_READER_STATE"""		4935306	0					
ANR	4935326	PrimaryExpression	"""TEST_LOG_READER_STATE"""		4935306	0					
ANR	4935327	Argument	SUBSYSTEM_TYPE_TOOL		4935306	1					
ANR	4935328	Identifier	SUBSYSTEM_TYPE_TOOL		4935306	0					
ANR	4935329	ExpressionStatement	"myDistro -> Init ( argc , argv )"	210:1:5564:5592	4935306	3	True				
ANR	4935330	CallExpression	"myDistro -> Init ( argc , argv )"		4935306	0					
ANR	4935331	Callee	myDistro -> Init		4935306	0					
ANR	4935332	PtrMemberAccess	myDistro -> Init		4935306	0					
ANR	4935333	Identifier	myDistro		4935306	0					
ANR	4935334	Identifier	Init		4935306	1					
ANR	4935335	ArgumentList	argc		4935306	1					
ANR	4935336	Argument	argc		4935306	0					
ANR	4935337	Identifier	argc		4935306	0					
ANR	4935338	Argument	argv		4935306	1					
ANR	4935339	Identifier	argv		4935306	0					
ANR	4935340	ExpressionStatement	config ( )	211:1:5595:5603	4935306	4	True				
ANR	4935341	CallExpression	config ( )		4935306	0					
ANR	4935342	Callee	config		4935306	0					
ANR	4935343	Identifier	config		4935306	0					
ANR	4935344	ArgumentList			4935306	1					
ANR	4935345	ExpressionStatement	p_funcs = get_param_functions ( )	214:1:5640:5671	4935306	5	True				
ANR	4935346	AssignmentExpression	p_funcs = get_param_functions ( )		4935306	0		=			
ANR	4935347	Identifier	p_funcs		4935306	0					
ANR	4935348	CallExpression	get_param_functions ( )		4935306	1					
ANR	4935349	Callee	get_param_functions		4935306	0					
ANR	4935350	Identifier	get_param_functions		4935306	0					
ANR	4935351	ArgumentList			4935306	1					
ANR	4935352	ExpressionStatement	"dprintf_config ( ""TEST_LOG_READER_STATE"" , p_funcs )"	215:1:5674:5722	4935306	6	True				
ANR	4935353	CallExpression	"dprintf_config ( ""TEST_LOG_READER_STATE"" , p_funcs )"		4935306	0					
ANR	4935354	Callee	dprintf_config		4935306	0					
ANR	4935355	Identifier	dprintf_config		4935306	0					
ANR	4935356	ArgumentList	"""TEST_LOG_READER_STATE"""		4935306	1					
ANR	4935357	Argument	"""TEST_LOG_READER_STATE"""		4935306	0					
ANR	4935358	PrimaryExpression	"""TEST_LOG_READER_STATE"""		4935306	0					
ANR	4935359	Argument	p_funcs		4935306	1					
ANR	4935360	Identifier	p_funcs		4935306	0					
ANR	4935361	IdentifierDeclStatement	Options opts ;	217:1:5726:5738	4935306	7	True				
ANR	4935362	IdentifierDecl	opts		4935306	0					
ANR	4935363	IdentifierDeclType	Options		4935306	0					
ANR	4935364	Identifier	opts		4935306	1					
ANR	4935365	IfStatement	"if ( CheckArgs ( argc , argv , opts ) < 0 )"		4935306	8					
ANR	4935366	Condition	"CheckArgs ( argc , argv , opts ) < 0"	218:6:5746:5778	4935306	0	True				
ANR	4935367	RelationalExpression	"CheckArgs ( argc , argv , opts ) < 0"		4935306	0		<			
ANR	4935368	CallExpression	"CheckArgs ( argc , argv , opts )"		4935306	0					
ANR	4935369	Callee	CheckArgs		4935306	0					
ANR	4935370	Identifier	CheckArgs		4935306	0					
ANR	4935371	ArgumentList	argc		4935306	1					
ANR	4935372	Argument	argc		4935306	0					
ANR	4935373	Identifier	argc		4935306	0					
ANR	4935374	Argument	argv		4935306	1					
ANR	4935375	Identifier	argv		4935306	0					
ANR	4935376	Argument	opts		4935306	2					
ANR	4935377	Identifier	opts		4935306	0					
ANR	4935378	PrimaryExpression	0		4935306	1					
ANR	4935379	CompoundStatement		16:42:387:387	4935306	1					
ANR	4935380	ExpressionStatement	"fprintf ( stderr , ""CheckArgs() failed\\n"" )"	219:2:5786:5827	4935306	0	True				
ANR	4935381	CallExpression	"fprintf ( stderr , ""CheckArgs() failed\\n"" )"		4935306	0					
ANR	4935382	Callee	fprintf		4935306	0					
ANR	4935383	Identifier	fprintf		4935306	0					
ANR	4935384	ArgumentList	stderr		4935306	1					
ANR	4935385	Argument	stderr		4935306	0					
ANR	4935386	Identifier	stderr		4935306	0					
ANR	4935387	Argument	"""CheckArgs() failed\\n"""		4935306	1					
ANR	4935388	PrimaryExpression	"""CheckArgs() failed\\n"""		4935306	0					
ANR	4935389	ExpressionStatement	exit ( 1 )	220:2:5831:5840	4935306	1	True				
ANR	4935390	CallExpression	exit ( 1 )		4935306	0					
ANR	4935391	Callee	exit		4935306	0					
ANR	4935392	Identifier	exit		4935306	0					
ANR	4935393	ArgumentList	1		4935306	1					
ANR	4935394	Argument	1		4935306	0					
ANR	4935395	PrimaryExpression	1		4935306	0					
ANR	4935396	IdentifierDeclStatement	ReadUserLog :: FileState state ;	223:1:5847:5875	4935306	9	True				
ANR	4935397	IdentifierDecl	state		4935306	0					
ANR	4935398	IdentifierDeclType	ReadUserLog :: FileState		4935306	0					
ANR	4935399	Identifier	state		4935306	1					
ANR	4935400	IfStatement	"if ( opts . needStateFile ( ) && ( ReadState ( opts , state ) < 0 ) )"		4935306	10					
ANR	4935401	Condition	"opts . needStateFile ( ) && ( ReadState ( opts , state ) < 0 )"	224:6:5883:5938	4935306	0	True				
ANR	4935402	AndExpression	"opts . needStateFile ( ) && ( ReadState ( opts , state ) < 0 )"		4935306	0		&&			
ANR	4935403	CallExpression	opts . needStateFile ( )		4935306	0					
ANR	4935404	Callee	opts . needStateFile		4935306	0					
ANR	4935405	MemberAccess	opts . needStateFile		4935306	0					
ANR	4935406	Identifier	opts		4935306	0					
ANR	4935407	Identifier	needStateFile		4935306	1					
ANR	4935408	ArgumentList			4935306	1					
ANR	4935409	RelationalExpression	"ReadState ( opts , state ) < 0"		4935306	1		<			
ANR	4935410	CallExpression	"ReadState ( opts , state )"		4935306	0					
ANR	4935411	Callee	ReadState		4935306	0					
ANR	4935412	Identifier	ReadState		4935306	0					
ANR	4935413	ArgumentList	opts		4935306	1					
ANR	4935414	Argument	opts		4935306	0					
ANR	4935415	Identifier	opts		4935306	0					
ANR	4935416	Argument	state		4935306	1					
ANR	4935417	Identifier	state		4935306	0					
ANR	4935418	PrimaryExpression	0		4935306	1					
ANR	4935419	CompoundStatement		22:66:548:548	4935306	1					
ANR	4935420	ExpressionStatement	"fprintf ( stderr , ""ReadState() failed\\n"" )"	225:2:5947:5988	4935306	0	True				
ANR	4935421	CallExpression	"fprintf ( stderr , ""ReadState() failed\\n"" )"		4935306	0					
ANR	4935422	Callee	fprintf		4935306	0					
ANR	4935423	Identifier	fprintf		4935306	0					
ANR	4935424	ArgumentList	stderr		4935306	1					
ANR	4935425	Argument	stderr		4935306	0					
ANR	4935426	Identifier	stderr		4935306	0					
ANR	4935427	Argument	"""ReadState() failed\\n"""		4935306	1					
ANR	4935428	PrimaryExpression	"""ReadState() failed\\n"""		4935306	0					
ANR	4935429	ExpressionStatement	exit ( 1 )	226:2:5992:6001	4935306	1	True				
ANR	4935430	CallExpression	exit ( 1 )		4935306	0					
ANR	4935431	Callee	exit		4935306	0					
ANR	4935432	Identifier	exit		4935306	0					
ANR	4935433	ArgumentList	1		4935306	1					
ANR	4935434	Argument	1		4935306	0					
ANR	4935435	PrimaryExpression	1		4935306	0					
ANR	4935436	IdentifierDeclStatement	ReadUserLog :: FileState state2 ;	228:1:6007:6036	4935306	11	True				
ANR	4935437	IdentifierDecl	state2		4935306	0					
ANR	4935438	IdentifierDeclType	ReadUserLog :: FileState		4935306	0					
ANR	4935439	Identifier	state2		4935306	1					
ANR	4935440	IfStatement	"if ( opts . needStateFile2 ( ) && ( ReadState ( opts , state2 ) < 0 ) )"		4935306	12					
ANR	4935441	Condition	"opts . needStateFile2 ( ) && ( ReadState ( opts , state2 ) < 0 )"	229:6:6044:6101	4935306	0	True				
ANR	4935442	AndExpression	"opts . needStateFile2 ( ) && ( ReadState ( opts , state2 ) < 0 )"		4935306	0		&&			
ANR	4935443	CallExpression	opts . needStateFile2 ( )		4935306	0					
ANR	4935444	Callee	opts . needStateFile2		4935306	0					
ANR	4935445	MemberAccess	opts . needStateFile2		4935306	0					
ANR	4935446	Identifier	opts		4935306	0					
ANR	4935447	Identifier	needStateFile2		4935306	1					
ANR	4935448	ArgumentList			4935306	1					
ANR	4935449	RelationalExpression	"ReadState ( opts , state2 ) < 0"		4935306	1		<			
ANR	4935450	CallExpression	"ReadState ( opts , state2 )"		4935306	0					
ANR	4935451	Callee	ReadState		4935306	0					
ANR	4935452	Identifier	ReadState		4935306	0					
ANR	4935453	ArgumentList	opts		4935306	1					
ANR	4935454	Argument	opts		4935306	0					
ANR	4935455	Identifier	opts		4935306	0					
ANR	4935456	Argument	state2		4935306	1					
ANR	4935457	Identifier	state2		4935306	0					
ANR	4935458	PrimaryExpression	0		4935306	1					
ANR	4935459	CompoundStatement		27:68:711:711	4935306	1					
ANR	4935460	ExpressionStatement	"fprintf ( stderr , ""ReadState() failed\\n"" )"	230:2:6110:6151	4935306	0	True				
ANR	4935461	CallExpression	"fprintf ( stderr , ""ReadState() failed\\n"" )"		4935306	0					
ANR	4935462	Callee	fprintf		4935306	0					
ANR	4935463	Identifier	fprintf		4935306	0					
ANR	4935464	ArgumentList	stderr		4935306	1					
ANR	4935465	Argument	stderr		4935306	0					
ANR	4935466	Identifier	stderr		4935306	0					
ANR	4935467	Argument	"""ReadState() failed\\n"""		4935306	1					
ANR	4935468	PrimaryExpression	"""ReadState() failed\\n"""		4935306	0					
ANR	4935469	ExpressionStatement	exit ( 1 )	231:2:6155:6164	4935306	1	True				
ANR	4935470	CallExpression	exit ( 1 )		4935306	0					
ANR	4935471	Callee	exit		4935306	0					
ANR	4935472	Identifier	exit		4935306	0					
ANR	4935473	ArgumentList	1		4935306	1					
ANR	4935474	Argument	1		4935306	0					
ANR	4935475	PrimaryExpression	1		4935306	0					
ANR	4935476	IdentifierDeclStatement	int status = 0 ;	234:1:6171:6185	4935306	13	True				
ANR	4935477	IdentifierDecl	status = 0		4935306	0					
ANR	4935478	IdentifierDeclType	int		4935306	0					
ANR	4935479	Identifier	status		4935306	1					
ANR	4935480	AssignmentExpression	status = 0		4935306	2		=			
ANR	4935481	Identifier	status		4935306	0					
ANR	4935482	PrimaryExpression	0		4935306	1					
ANR	4935483	SwitchStatement	switch ( opts . getCommand ( ) )		4935306	14					
ANR	4935484	Condition	opts . getCommand ( )	235:9:6196:6212	4935306	0	True				
ANR	4935485	CallExpression	opts . getCommand ( )		4935306	0					
ANR	4935486	Callee	opts . getCommand		4935306	0					
ANR	4935487	MemberAccess	opts . getCommand		4935306	0					
ANR	4935488	Identifier	opts		4935306	0					
ANR	4935489	Identifier	getCommand		4935306	1					
ANR	4935490	ArgumentList			4935306	1					
ANR	4935491	CompoundStatement		34:1:822:822	4935306	1					
ANR	4935492	Label	case CMD_NONE :	237:1:6220:6233	4935306	0	True				
ANR	4935493	Identifier	CMD_NONE		4935306	0					
ANR	4935494	ExpressionStatement	status = - 1	238:2:6237:6248	4935306	1	True				
ANR	4935495	AssignmentExpression	status = - 1		4935306	0		=			
ANR	4935496	Identifier	status		4935306	0					
ANR	4935497	UnaryOperationExpression	- 1		4935306	1					
ANR	4935498	UnaryOperator	-		4935306	0					
ANR	4935499	PrimaryExpression	1		4935306	1					
ANR	4935500	BreakStatement	break ;	239:2:6252:6257	4935306	2	True				
ANR	4935501	Label	case CMD_LIST :	240:1:6260:6273	4935306	3	True				
ANR	4935502	Identifier	CMD_LIST		4935306	0					
ANR	4935503	ExpressionStatement	opts . dumpFieldList ( )	241:2:6277:6298	4935306	4	True				
ANR	4935504	CallExpression	opts . dumpFieldList ( )		4935306	0					
ANR	4935505	Callee	opts . dumpFieldList		4935306	0					
ANR	4935506	MemberAccess	opts . dumpFieldList		4935306	0					
ANR	4935507	Identifier	opts		4935306	0					
ANR	4935508	Identifier	dumpFieldList		4935306	1					
ANR	4935509	ArgumentList			4935306	1					
ANR	4935510	BreakStatement	break ;	242:2:6302:6307	4935306	5	True				
ANR	4935511	Label	case CMD_DUMP :	243:1:6310:6323	4935306	6	True				
ANR	4935512	Identifier	CMD_DUMP		4935306	0					
ANR	4935513	ExpressionStatement	"status = DumpState ( opts , state )"	244:2:6327:6360	4935306	7	True				
ANR	4935514	AssignmentExpression	"status = DumpState ( opts , state )"		4935306	0		=			
ANR	4935515	Identifier	status		4935306	0					
ANR	4935516	CallExpression	"DumpState ( opts , state )"		4935306	1					
ANR	4935517	Callee	DumpState		4935306	0					
ANR	4935518	Identifier	DumpState		4935306	0					
ANR	4935519	ArgumentList	opts		4935306	1					
ANR	4935520	Argument	opts		4935306	0					
ANR	4935521	Identifier	opts		4935306	0					
ANR	4935522	Argument	state		4935306	1					
ANR	4935523	Identifier	state		4935306	0					
ANR	4935524	BreakStatement	break ;	245:2:6364:6369	4935306	8	True				
ANR	4935525	Label	case CMD_DIFF :	246:1:6372:6385	4935306	9	True				
ANR	4935526	Identifier	CMD_DIFF		4935306	0					
ANR	4935527	ExpressionStatement	"status = DiffState ( opts , state , state2 )"	247:2:6389:6430	4935306	10	True				
ANR	4935528	AssignmentExpression	"status = DiffState ( opts , state , state2 )"		4935306	0		=			
ANR	4935529	Identifier	status		4935306	0					
ANR	4935530	CallExpression	"DiffState ( opts , state , state2 )"		4935306	1					
ANR	4935531	Callee	DiffState		4935306	0					
ANR	4935532	Identifier	DiffState		4935306	0					
ANR	4935533	ArgumentList	opts		4935306	1					
ANR	4935534	Argument	opts		4935306	0					
ANR	4935535	Identifier	opts		4935306	0					
ANR	4935536	Argument	state		4935306	1					
ANR	4935537	Identifier	state		4935306	0					
ANR	4935538	Argument	state2		4935306	2					
ANR	4935539	Identifier	state2		4935306	0					
ANR	4935540	BreakStatement	break ;	248:2:6434:6439	4935306	11	True				
ANR	4935541	Label	case CMD_ACCESS :	249:1:6442:6457	4935306	12	True				
ANR	4935542	Identifier	CMD_ACCESS		4935306	0					
ANR	4935543	ExpressionStatement	"status = CheckStateAccess ( opts , state )"	250:2:6461:6501	4935306	13	True				
ANR	4935544	AssignmentExpression	"status = CheckStateAccess ( opts , state )"		4935306	0		=			
ANR	4935545	Identifier	status		4935306	0					
ANR	4935546	CallExpression	"CheckStateAccess ( opts , state )"		4935306	1					
ANR	4935547	Callee	CheckStateAccess		4935306	0					
ANR	4935548	Identifier	CheckStateAccess		4935306	0					
ANR	4935549	ArgumentList	opts		4935306	1					
ANR	4935550	Argument	opts		4935306	0					
ANR	4935551	Identifier	opts		4935306	0					
ANR	4935552	Argument	state		4935306	1					
ANR	4935553	Identifier	state		4935306	0					
ANR	4935554	BreakStatement	break ;	251:2:6505:6510	4935306	14	True				
ANR	4935555	Label	case CMD_VERIFY :	252:1:6513:6528	4935306	15	True				
ANR	4935556	Identifier	CMD_VERIFY		4935306	0					
ANR	4935557	ExpressionStatement	"status = VerifyState ( opts , state )"	253:2:6532:6567	4935306	16	True				
ANR	4935558	AssignmentExpression	"status = VerifyState ( opts , state )"		4935306	0		=			
ANR	4935559	Identifier	status		4935306	0					
ANR	4935560	CallExpression	"VerifyState ( opts , state )"		4935306	1					
ANR	4935561	Callee	VerifyState		4935306	0					
ANR	4935562	Identifier	VerifyState		4935306	0					
ANR	4935563	ArgumentList	opts		4935306	1					
ANR	4935564	Argument	opts		4935306	0					
ANR	4935565	Identifier	opts		4935306	0					
ANR	4935566	Argument	state		4935306	1					
ANR	4935567	Identifier	state		4935306	0					
ANR	4935568	BreakStatement	break ;	254:2:6571:6576	4935306	17	True				
ANR	4935569	IfStatement	if ( status == 0 )		4935306	15					
ANR	4935570	Condition	status == 0	257:6:6588:6598	4935306	0	True				
ANR	4935571	EqualityExpression	status == 0		4935306	0		==			
ANR	4935572	Identifier	status		4935306	0					
ANR	4935573	PrimaryExpression	0		4935306	1					
ANR	4935574	CompoundStatement		55:20:1207:1207	4935306	1					
ANR	4935575	ExpressionStatement	exit ( 0 )	258:2:6606:6615	4935306	0	True				
ANR	4935576	CallExpression	exit ( 0 )		4935306	0					
ANR	4935577	Callee	exit		4935306	0					
ANR	4935578	Identifier	exit		4935306	0					
ANR	4935579	ArgumentList	0		4935306	1					
ANR	4935580	Argument	0		4935306	0					
ANR	4935581	PrimaryExpression	0		4935306	0					
ANR	4935582	ElseStatement	else		4935306	0					
ANR	4935583	CompoundStatement		57:8:1230:1230	4935306	0					
ANR	4935584	ExpressionStatement	exit ( 2 )	260:2:6629:6638	4935306	0	True				
ANR	4935585	CallExpression	exit ( 2 )		4935306	0					
ANR	4935586	Callee	exit		4935306	0					
ANR	4935587	Identifier	exit		4935306	0					
ANR	4935588	ArgumentList	2		4935306	1					
ANR	4935589	Argument	2		4935306	0					
ANR	4935590	PrimaryExpression	2		4935306	0					
ANR	4935591	ReturnType	int		4935306	1					
ANR	4935592	Identifier	main		4935306	2					
ANR	4935593	ParameterList	"int argc , const char * * argv"		4935306	3					
ANR	4935594	Parameter	int argc	202:5:5365:5372	4935306	0	True				
ANR	4935595	ParameterType	int		4935306	0					
ANR	4935596	Identifier	argc		4935306	1					
ANR	4935597	Parameter	const char * * argv	202:15:5375:5391	4935306	1	True				
ANR	4935598	ParameterType	const char * *		4935306	0					
ANR	4935599	Identifier	argv		4935306	1					
ANR	4935600	CFGEntryNode	ENTRY		4935306		True				
ANR	4935601	CFGExitNode	EXIT		4935306		True				
ANR	4935602	Symbol	argc		4935306						
ANR	4935603	Symbol	opts . needStateFile		4935306						
ANR	4935604	Symbol	NULL		4935306						
ANR	4935605	Symbol	SUBSYSTEM_TYPE_TOOL		4935306						
ANR	4935606	Symbol	get_param_functions		4935306						
ANR	4935607	Symbol	D_ALWAYS		4935306						
ANR	4935608	Symbol	DebugFlags		4935306						
ANR	4935609	Symbol	p_funcs		4935306						
ANR	4935610	Symbol	stderr		4935306						
ANR	4935611	Symbol	state2		4935306						
ANR	4935612	Symbol	argv		4935306						
ANR	4935613	Symbol	CheckArgs		4935306						
ANR	4935614	Symbol	opts . needStateFile2		4935306						
ANR	4935615	Symbol	CheckStateAccess		4935306						
ANR	4935616	Symbol	ReadState		4935306						
ANR	4935617	Symbol	opts		4935306						
ANR	4935618	Symbol	myDistro		4935306						
ANR	4935619	Symbol	DiffState		4935306						
ANR	4935620	Symbol	VerifyState		4935306						
ANR	4935621	Symbol	DumpState		4935306						
ANR	4935622	Symbol	state		4935306						
ANR	4935623	Symbol	opts . getCommand		4935306						
ANR	4935624	Symbol	status		4935306						
ANR	4935625	Function	CheckArgs	264:0:6646:8103							
ANR	4935626	FunctionDef	"CheckArgs (int argc , const char * * argv , Options & opts)"		4935625	0					
ANR	4935627	CompoundStatement		266:0:6704:8103	4935625	0					
ANR	4935628	IdentifierDeclStatement	int status = 0 ;	267:1:6707:6722	4935625	0	True				
ANR	4935629	IdentifierDecl	status = 0		4935625	0					
ANR	4935630	IdentifierDeclType	int		4935625	0					
ANR	4935631	Identifier	status		4935625	1					
ANR	4935632	AssignmentExpression	status = 0		4935625	2		=			
ANR	4935633	Identifier	status		4935625	0					
ANR	4935634	PrimaryExpression	0		4935625	1					
ANR	4935635	ForStatement	for ( int argno = 1 ; argno < argc && status >= 0 ; argno ++ )		4935625	1					
ANR	4935636	ForInit	int argno = 1 ;	269:7:6732:6745	4935625	0	True				
ANR	4935637	IdentifierDeclStatement	int argno = 1 ;		4935625	0					
ANR	4935638	IdentifierDecl	argno = 1		4935625	0					
ANR	4935639	IdentifierDeclType	int		4935625	0					
ANR	4935640	Identifier	argno		4935625	1					
ANR	4935641	AssignmentExpression	argno = 1		4935625	2		=			
ANR	4935642	Identifier	argno		4935625	0					
ANR	4935643	PrimaryExpression	1		4935625	1					
ANR	4935644	Condition	argno < argc && status >= 0	269:23:6748:6774	4935625	1	True				
ANR	4935645	AndExpression	argno < argc && status >= 0		4935625	0		&&			
ANR	4935646	RelationalExpression	argno < argc		4935625	0		<			
ANR	4935647	Identifier	argno		4935625	0					
ANR	4935648	Identifier	argc		4935625	1					
ANR	4935649	RelationalExpression	status >= 0		4935625	1		>=			
ANR	4935650	Identifier	status		4935625	0					
ANR	4935651	PrimaryExpression	0		4935625	1					
ANR	4935652	PostIncDecOperationExpression	argno ++	269:53:6778:6784	4935625	2	True				
ANR	4935653	Identifier	argno		4935625	0					
ANR	4935654	IncDec	++		4935625	1					
ANR	4935655	CompoundStatement		5:2:87:121	4935625	3					
ANR	4935656	IdentifierDeclStatement	"SimpleArg arg ( argv , argc , argno ) ;"	270:2:6792:6826	4935625	0	True				
ANR	4935657	IdentifierDecl	"arg ( argv , argc , argno )"		4935625	0					
ANR	4935658	IdentifierDeclType	SimpleArg		4935625	0					
ANR	4935659	Identifier	arg		4935625	1					
ANR	4935660	Expression	"argv , argc , argno"		4935625	2					
ANR	4935661	Identifier	argv		4935625	0					
ANR	4935662	Expression	"argc , argno"		4935625	1					
ANR	4935663	Identifier	argc		4935625	0					
ANR	4935664	Identifier	argno		4935625	1					
ANR	4935665	IfStatement	if ( arg . Error ( ) )		4935625	1					
ANR	4935666	Condition	arg . Error ( )	272:7:6836:6846	4935625	0	True				
ANR	4935667	CallExpression	arg . Error ( )		4935625	0					
ANR	4935668	Callee	arg . Error		4935625	0					
ANR	4935669	MemberAccess	arg . Error		4935625	0					
ANR	4935670	Identifier	arg		4935625	0					
ANR	4935671	Identifier	Error		4935625	1					
ANR	4935672	ArgumentList			4935625	1					
ANR	4935673	CompoundStatement		7:21:145:145	4935625	1					
ANR	4935674	ExpressionStatement	"fprintf ( stderr , ""Failed parsing '%s'\\n"" , arg . Arg ( ) )"	273:3:6855:6908	4935625	0	True				
ANR	4935675	CallExpression	"fprintf ( stderr , ""Failed parsing '%s'\\n"" , arg . Arg ( ) )"		4935625	0					
ANR	4935676	Callee	fprintf		4935625	0					
ANR	4935677	Identifier	fprintf		4935625	0					
ANR	4935678	ArgumentList	stderr		4935625	1					
ANR	4935679	Argument	stderr		4935625	0					
ANR	4935680	Identifier	stderr		4935625	0					
ANR	4935681	Argument	"""Failed parsing '%s'\\n"""		4935625	1					
ANR	4935682	PrimaryExpression	"""Failed parsing '%s'\\n"""		4935625	0					
ANR	4935683	Argument	arg . Arg ( )		4935625	2					
ANR	4935684	CallExpression	arg . Arg ( )		4935625	0					
ANR	4935685	Callee	arg . Arg		4935625	0					
ANR	4935686	MemberAccess	arg . Arg		4935625	0					
ANR	4935687	Identifier	arg		4935625	0					
ANR	4935688	Identifier	Arg		4935625	1					
ANR	4935689	ArgumentList			4935625	1					
ANR	4935690	ExpressionStatement	status = - 1	274:3:6913:6924	4935625	1	True				
ANR	4935691	AssignmentExpression	status = - 1		4935625	0		=			
ANR	4935692	Identifier	status		4935625	0					
ANR	4935693	UnaryOperationExpression	- 1		4935625	1					
ANR	4935694	UnaryOperator	-		4935625	0					
ANR	4935695	PrimaryExpression	1		4935625	1					
ANR	4935696	IfStatement	if ( status > 0 )		4935625	2					
ANR	4935697	Condition	status > 0	277:7:6938:6947	4935625	0	True				
ANR	4935698	RelationalExpression	status > 0		4935625	0		>			
ANR	4935699	Identifier	status		4935625	0					
ANR	4935700	PrimaryExpression	0		4935625	1					
ANR	4935701	CompoundStatement		12:20:246:246	4935625	1					
ANR	4935702	Statement	fprintf	278:3:6956:6962	4935625	0	True				
ANR	4935703	Statement	(	278:10:6963:6963	4935625	1	True				
ANR	4935704	Statement	stderr	278:12:6965:6970	4935625	2	True				
ANR	4935705	Statement	","	278:18:6971:6971	4935625	3	True				
ANR	4935706	Statement	"""Warning: ignoring parameter %s\\n"""	279:6:6979:7012	4935625	4	True				
ANR	4935707	Statement	"""  use -h for help\\n"""	280:6:7020:7040	4935625	5	True				
ANR	4935708	Statement	","	280:27:7041:7041	4935625	6	True				
ANR	4935709	Statement	arg	281:6:7049:7051	4935625	7	True				
ANR	4935710	Statement	.	281:9:7052:7052	4935625	8	True				
ANR	4935711	Statement	Arg	281:10:7053:7055	4935625	9	True				
ANR	4935712	Statement	(	281:13:7056:7056	4935625	10	True				
ANR	4935713	Statement	)	281:14:7057:7057	4935625	11	True				
ANR	4935714	Statement	)	281:16:7059:7059	4935625	12	True				
ANR	4935715	ExpressionStatement		281:17:7060:7060	4935625	13	True				
ANR	4935716	ElseStatement	else		4935625	0					
ANR	4935717	IfStatement	if ( arg . ArgIsOpt ( ) )		4935625	0					
ANR	4935718	Condition	arg . ArgIsOpt ( )	283:12:7078:7091	4935625	0	True				
ANR	4935719	CallExpression	arg . ArgIsOpt ( )		4935625	0					
ANR	4935720	Callee	arg . ArgIsOpt		4935625	0					
ANR	4935721	MemberAccess	arg . ArgIsOpt		4935625	0					
ANR	4935722	Identifier	arg		4935625	0					
ANR	4935723	Identifier	ArgIsOpt		4935625	1					
ANR	4935724	ArgumentList			4935625	1					
ANR	4935725	CompoundStatement		18:29:390:390	4935625	1					
ANR	4935726	ExpressionStatement	"status = opts . handleOpt ( arg , argno )"	284:3:7100:7137	4935625	0	True				
ANR	4935727	AssignmentExpression	"status = opts . handleOpt ( arg , argno )"		4935625	0		=			
ANR	4935728	Identifier	status		4935625	0					
ANR	4935729	CallExpression	"opts . handleOpt ( arg , argno )"		4935625	1					
ANR	4935730	Callee	opts . handleOpt		4935625	0					
ANR	4935731	MemberAccess	opts . handleOpt		4935625	0					
ANR	4935732	Identifier	opts		4935625	0					
ANR	4935733	Identifier	handleOpt		4935625	1					
ANR	4935734	ArgumentList	arg		4935625	1					
ANR	4935735	Argument	arg		4935625	0					
ANR	4935736	Identifier	arg		4935625	0					
ANR	4935737	Argument	argno		4935625	1					
ANR	4935738	Identifier	argno		4935625	0					
ANR	4935739	ElseStatement	else		4935625	0					
ANR	4935740	CompoundStatement		21:7:445:445	4935625	0					
ANR	4935741	ExpressionStatement	"status = opts . handleFixed ( arg , argno )"	287:3:7155:7194	4935625	0	True				
ANR	4935742	AssignmentExpression	"status = opts . handleFixed ( arg , argno )"		4935625	0		=			
ANR	4935743	Identifier	status		4935625	0					
ANR	4935744	CallExpression	"opts . handleFixed ( arg , argno )"		4935625	1					
ANR	4935745	Callee	opts . handleFixed		4935625	0					
ANR	4935746	MemberAccess	opts . handleFixed		4935625	0					
ANR	4935747	Identifier	opts		4935625	0					
ANR	4935748	Identifier	handleFixed		4935625	1					
ANR	4935749	ArgumentList	arg		4935625	1					
ANR	4935750	Argument	arg		4935625	0					
ANR	4935751	Identifier	arg		4935625	0					
ANR	4935752	Argument	argno		4935625	1					
ANR	4935753	Identifier	argno		4935625	0					
ANR	4935754	IfStatement	if ( ( opts . needStateFile ( ) ) && ( NULL == opts . getFile ( ) ) )		4935625	2					
ANR	4935755	Condition	( opts . needStateFile ( ) ) && ( NULL == opts . getFile ( ) )	291:6:7210:7263	4935625	0	True				
ANR	4935756	AndExpression	( opts . needStateFile ( ) ) && ( NULL == opts . getFile ( ) )		4935625	0		&&			
ANR	4935757	CallExpression	opts . needStateFile ( )		4935625	0					
ANR	4935758	Callee	opts . needStateFile		4935625	0					
ANR	4935759	MemberAccess	opts . needStateFile		4935625	0					
ANR	4935760	Identifier	opts		4935625	0					
ANR	4935761	Identifier	needStateFile		4935625	1					
ANR	4935762	ArgumentList			4935625	1					
ANR	4935763	EqualityExpression	NULL == opts . getFile ( )		4935625	1		==			
ANR	4935764	Identifier	NULL		4935625	0					
ANR	4935765	CallExpression	opts . getFile ( )		4935625	1					
ANR	4935766	Callee	opts . getFile		4935625	0					
ANR	4935767	MemberAccess	opts . getFile		4935625	0					
ANR	4935768	Identifier	opts		4935625	0					
ANR	4935769	Identifier	getFile		4935625	1					
ANR	4935770	ArgumentList			4935625	1					
ANR	4935771	CompoundStatement		26:63:562:562	4935625	1					
ANR	4935772	Statement	fprintf	292:2:7271:7277	4935625	0	True				
ANR	4935773	Statement	(	292:9:7278:7278	4935625	1	True				
ANR	4935774	Statement	stderr	292:11:7280:7285	4935625	2	True				
ANR	4935775	Statement	","	292:17:7286:7286	4935625	3	True				
ANR	4935776	Statement	"""No state file specified\\n"""	293:5:7293:7319	4935625	4	True				
ANR	4935777	Statement	"""  use -h for help\\n"""	294:5:7326:7346	4935625	5	True				
ANR	4935778	Statement	)	294:27:7348:7348	4935625	6	True				
ANR	4935779	ExpressionStatement		294:28:7349:7349	4935625	7	True				
ANR	4935780	ExpressionStatement	status = - 1	295:2:7353:7364	4935625	8	True				
ANR	4935781	AssignmentExpression	status = - 1		4935625	0		=			
ANR	4935782	Identifier	status		4935625	0					
ANR	4935783	UnaryOperationExpression	- 1		4935625	1					
ANR	4935784	UnaryOperator	-		4935625	0					
ANR	4935785	PrimaryExpression	1		4935625	1					
ANR	4935786	ElseStatement	else		4935625	0					
ANR	4935787	IfStatement	if ( ( opts . needStateFile2 ( ) ) && ( NULL == opts . getFile2 ( ) ) )		4935625	0					
ANR	4935788	Condition	( opts . needStateFile2 ( ) ) && ( NULL == opts . getFile2 ( ) )	297:11:7380:7435	4935625	0	True				
ANR	4935789	AndExpression	( opts . needStateFile2 ( ) ) && ( NULL == opts . getFile2 ( ) )		4935625	0		&&			
ANR	4935790	CallExpression	opts . needStateFile2 ( )		4935625	0					
ANR	4935791	Callee	opts . needStateFile2		4935625	0					
ANR	4935792	MemberAccess	opts . needStateFile2		4935625	0					
ANR	4935793	Identifier	opts		4935625	0					
ANR	4935794	Identifier	needStateFile2		4935625	1					
ANR	4935795	ArgumentList			4935625	1					
ANR	4935796	EqualityExpression	NULL == opts . getFile2 ( )		4935625	1		==			
ANR	4935797	Identifier	NULL		4935625	0					
ANR	4935798	CallExpression	opts . getFile2 ( )		4935625	1					
ANR	4935799	Callee	opts . getFile2		4935625	0					
ANR	4935800	MemberAccess	opts . getFile2		4935625	0					
ANR	4935801	Identifier	opts		4935625	0					
ANR	4935802	Identifier	getFile2		4935625	1					
ANR	4935803	ArgumentList			4935625	1					
ANR	4935804	CompoundStatement		32:70:734:734	4935625	1					
ANR	4935805	Statement	fprintf	298:2:7443:7449	4935625	0	True				
ANR	4935806	Statement	(	298:9:7450:7450	4935625	1	True				
ANR	4935807	Statement	stderr	298:11:7452:7457	4935625	2	True				
ANR	4935808	Statement	","	298:17:7458:7458	4935625	3	True				
ANR	4935809	Statement	"""2nd State file not specified\\n"""	299:5:7465:7496	4935625	4	True				
ANR	4935810	Statement	"""  use -h for help\\n"""	300:5:7503:7523	4935625	5	True				
ANR	4935811	Statement	)	300:27:7525:7525	4935625	6	True				
ANR	4935812	ExpressionStatement		300:28:7526:7526	4935625	7	True				
ANR	4935813	ExpressionStatement	status = - 1	301:2:7530:7541	4935625	8	True				
ANR	4935814	AssignmentExpression	status = - 1		4935625	0		=			
ANR	4935815	Identifier	status		4935625	0					
ANR	4935816	UnaryOperationExpression	- 1		4935625	1					
ANR	4935817	UnaryOperator	-		4935625	0					
ANR	4935818	PrimaryExpression	1		4935625	1					
ANR	4935819	ElseStatement	else		4935625	0					
ANR	4935820	IfStatement	if ( CMD_NONE == opts . getCommand ( ) )		4935625	0					
ANR	4935821	Condition	CMD_NONE == opts . getCommand ( )	303:11:7557:7585	4935625	0	True				
ANR	4935822	EqualityExpression	CMD_NONE == opts . getCommand ( )		4935625	0		==			
ANR	4935823	Identifier	CMD_NONE		4935625	0					
ANR	4935824	CallExpression	opts . getCommand ( )		4935625	1					
ANR	4935825	Callee	opts . getCommand		4935625	0					
ANR	4935826	MemberAccess	opts . getCommand		4935625	0					
ANR	4935827	Identifier	opts		4935625	0					
ANR	4935828	Identifier	getCommand		4935625	1					
ANR	4935829	ArgumentList			4935625	1					
ANR	4935830	CompoundStatement		38:43:884:884	4935625	1					
ANR	4935831	Statement	fprintf	304:2:7593:7599	4935625	0	True				
ANR	4935832	Statement	(	304:9:7600:7600	4935625	1	True				
ANR	4935833	Statement	stderr	304:11:7602:7607	4935625	2	True				
ANR	4935834	Statement	","	304:17:7608:7608	4935625	3	True				
ANR	4935835	Statement	"""No command specified\\n"""	305:5:7615:7638	4935625	4	True				
ANR	4935836	Statement	"""  use -h for help\\n"""	306:5:7645:7665	4935625	5	True				
ANR	4935837	Statement	)	306:27:7667:7667	4935625	6	True				
ANR	4935838	ExpressionStatement		306:28:7668:7668	4935625	7	True				
ANR	4935839	ExpressionStatement	status = - 1	307:2:7672:7683	4935625	8	True				
ANR	4935840	AssignmentExpression	status = - 1		4935625	0		=			
ANR	4935841	Identifier	status		4935625	0					
ANR	4935842	UnaryOperationExpression	- 1		4935625	1					
ANR	4935843	UnaryOperator	-		4935625	0					
ANR	4935844	PrimaryExpression	1		4935625	1					
ANR	4935845	ElseStatement	else		4935625	0					
ANR	4935846	IfStatement	if ( CMD_VERIFY == opts . getCommand ( ) )		4935625	0					
ANR	4935847	Condition	CMD_VERIFY == opts . getCommand ( )	309:11:7699:7729	4935625	0	True				
ANR	4935848	EqualityExpression	CMD_VERIFY == opts . getCommand ( )		4935625	0		==			
ANR	4935849	Identifier	CMD_VERIFY		4935625	0					
ANR	4935850	CallExpression	opts . getCommand ( )		4935625	1					
ANR	4935851	Callee	opts . getCommand		4935625	0					
ANR	4935852	MemberAccess	opts . getCommand		4935625	0					
ANR	4935853	Identifier	opts		4935625	0					
ANR	4935854	Identifier	getCommand		4935625	1					
ANR	4935855	ArgumentList			4935625	1					
ANR	4935856	CompoundStatement		44:45:1028:1028	4935625	1					
ANR	4935857	IfStatement	if ( NULL == opts . getField ( ) || FIELD_NONE == opts . getField ( ) -> m_field )		4935625	0					
ANR	4935858	Condition	NULL == opts . getField ( ) || FIELD_NONE == opts . getField ( ) -> m_field	310:7:7742:7810	4935625	0	True				
ANR	4935859	OrExpression	NULL == opts . getField ( ) || FIELD_NONE == opts . getField ( ) -> m_field		4935625	0		||			
ANR	4935860	EqualityExpression	NULL == opts . getField ( )		4935625	0		==			
ANR	4935861	Identifier	NULL		4935625	0					
ANR	4935862	CallExpression	opts . getField ( )		4935625	1					
ANR	4935863	Callee	opts . getField		4935625	0					
ANR	4935864	MemberAccess	opts . getField		4935625	0					
ANR	4935865	Identifier	opts		4935625	0					
ANR	4935866	Identifier	getField		4935625	1					
ANR	4935867	ArgumentList			4935625	1					
ANR	4935868	EqualityExpression	FIELD_NONE == opts . getField ( ) -> m_field		4935625	1		==			
ANR	4935869	Identifier	FIELD_NONE		4935625	0					
ANR	4935870	PtrMemberAccess	opts . getField ( ) -> m_field		4935625	1					
ANR	4935871	CallExpression	opts . getField ( )		4935625	0					
ANR	4935872	Callee	opts . getField		4935625	0					
ANR	4935873	MemberAccess	opts . getField		4935625	0					
ANR	4935874	Identifier	opts		4935625	0					
ANR	4935875	Identifier	getField		4935625	1					
ANR	4935876	ArgumentList			4935625	1					
ANR	4935877	Identifier	m_field		4935625	1					
ANR	4935878	CompoundStatement		46:45:1109:1109	4935625	1					
ANR	4935879	Statement	fprintf	312:3:7819:7825	4935625	0	True				
ANR	4935880	Statement	(	312:10:7826:7826	4935625	1	True				
ANR	4935881	Statement	stderr	312:12:7828:7833	4935625	2	True				
ANR	4935882	Statement	","	312:18:7834:7834	4935625	3	True				
ANR	4935883	Statement	"""Verify: no field name specified\\n"""	313:6:7842:7876	4935625	4	True				
ANR	4935884	Statement	"""  use -h for help\\n"""	314:6:7884:7904	4935625	5	True				
ANR	4935885	Statement	)	314:28:7906:7906	4935625	6	True				
ANR	4935886	ExpressionStatement		314:29:7907:7907	4935625	7	True				
ANR	4935887	ExpressionStatement	status = - 1	315:3:7912:7923	4935625	8	True				
ANR	4935888	AssignmentExpression	status = - 1		4935625	0		=			
ANR	4935889	Identifier	status		4935625	0					
ANR	4935890	UnaryOperationExpression	- 1		4935625	1					
ANR	4935891	UnaryOperator	-		4935625	0					
ANR	4935892	PrimaryExpression	1		4935625	1					
ANR	4935893	ElseStatement	else		4935625	0					
ANR	4935894	IfStatement	if ( ! opts . isValueOk ( ) )		4935625	0					
ANR	4935895	Condition	! opts . isValueOk ( )	317:12:7941:7958	4935625	0	True				
ANR	4935896	UnaryOperationExpression	! opts . isValueOk ( )		4935625	0					
ANR	4935897	UnaryOperator	!		4935625	0					
ANR	4935898	CallExpression	opts . isValueOk ( )		4935625	1					
ANR	4935899	Callee	opts . isValueOk		4935625	0					
ANR	4935900	MemberAccess	opts . isValueOk		4935625	0					
ANR	4935901	Identifier	opts		4935625	0					
ANR	4935902	Identifier	isValueOk		4935625	1					
ANR	4935903	ArgumentList			4935625	1					
ANR	4935904	CompoundStatement		52:33:1257:1257	4935625	1					
ANR	4935905	Statement	fprintf	318:3:7967:7973	4935625	0	True				
ANR	4935906	Statement	(	318:10:7974:7974	4935625	1	True				
ANR	4935907	Statement	stderr	318:12:7976:7981	4935625	2	True				
ANR	4935908	Statement	","	318:18:7982:7982	4935625	3	True				
ANR	4935909	Statement	"""Verify: no value (or range) specified\\n"""	319:6:7990:8030	4935625	4	True				
ANR	4935910	Statement	"""  use -h for help\\n"""	320:6:8038:8058	4935625	5	True				
ANR	4935911	Statement	)	320:28:8060:8060	4935625	6	True				
ANR	4935912	ExpressionStatement		320:29:8061:8061	4935625	7	True				
ANR	4935913	ExpressionStatement	status = - 1	321:3:8066:8077	4935625	8	True				
ANR	4935914	AssignmentExpression	status = - 1		4935625	0		=			
ANR	4935915	Identifier	status		4935625	0					
ANR	4935916	UnaryOperationExpression	- 1		4935625	1					
ANR	4935917	UnaryOperator	-		4935625	0					
ANR	4935918	PrimaryExpression	1		4935625	1					
ANR	4935919	ReturnStatement	return status ;	325:1:8088:8101	4935625	3	True				
ANR	4935920	Identifier	status		4935625	0					
ANR	4935921	ReturnType	int		4935625	1					
ANR	4935922	Identifier	CheckArgs		4935625	2					
ANR	4935923	ParameterList	"int argc , const char * * argv , Options & opts"		4935625	3					
ANR	4935924	Parameter	int argc	265:10:6660:6667	4935625	0	True				
ANR	4935925	ParameterType	int		4935625	0					
ANR	4935926	Identifier	argc		4935625	1					
ANR	4935927	Parameter	const char * * argv	265:20:6670:6686	4935625	1	True				
ANR	4935928	ParameterType	const char * *		4935625	0					
ANR	4935929	Identifier	argv		4935625	1					
ANR	4935930	Parameter	Options & opts	265:39:6689:6701	4935625	2	True				
ANR	4935931	ParameterType	Options &		4935625	0					
ANR	4935932	Identifier	opts		4935625	1					
ANR	4935933	CFGEntryNode	ENTRY		4935625		True				
ANR	4935934	CFGExitNode	EXIT		4935625		True				
ANR	4935935	Symbol	argv		4935625						
ANR	4935936	Symbol	opts . needStateFile2		4935625						
ANR	4935937	Symbol	opts		4935625						
ANR	4935938	Symbol	arg		4935625						
ANR	4935939	Symbol	opts . getFile		4935625						
ANR	4935940	Symbol	argno		4935625						
ANR	4935941	Symbol	opts . getCommand		4935625						
ANR	4935942	Symbol	opts . handleOpt		4935625						
ANR	4935943	Symbol	opts . getField ( ) -> m_field		4935625						
ANR	4935944	Symbol	argc		4935625						
ANR	4935945	Symbol	opts . needStateFile		4935625						
ANR	4935946	Symbol	opts . isValueOk		4935625						
ANR	4935947	Symbol	NULL		4935625						
ANR	4935948	Symbol	opts . getFile2		4935625						
ANR	4935949	Symbol	arg . Error		4935625						
ANR	4935950	Symbol	CMD_NONE		4935625						
ANR	4935951	Symbol	stderr		4935625						
ANR	4935952	Symbol	opts . getField		4935625						
ANR	4935953	Symbol	arg . ArgIsOpt		4935625						
ANR	4935954	Symbol	opts . handleFixed		4935625						
ANR	4935955	Symbol	FIELD_NONE		4935625						
ANR	4935956	Symbol	arg . Arg		4935625						
ANR	4935957	Symbol	* opts		4935625						
ANR	4935958	Symbol	* opts . getField		4935625						
ANR	4935959	Symbol	status		4935625						
ANR	4935960	Symbol	CMD_VERIFY		4935625						
ANR	4935961	Function	ReadState	328:0:8106:8663							
ANR	4935962	FunctionDef	"ReadState (const Options & opts , ReadUserLog :: FileState & state)"		4935961	0					
ANR	4935963	CompoundStatement		331:0:8180:8663	4935961	0					
ANR	4935964	ExpressionStatement	ReadUserLog :: InitFileState ( state )	334:1:8218:8253	4935961	0	True				
ANR	4935965	CallExpression	ReadUserLog :: InitFileState ( state )		4935961	0					
ANR	4935966	Callee	ReadUserLog :: InitFileState		4935961	0					
ANR	4935967	Identifier	ReadUserLog :: InitFileState		4935961	0					
ANR	4935968	ArgumentList	state		4935961	1					
ANR	4935969	Argument	state		4935961	0					
ANR	4935970	Identifier	state		4935961	0					
ANR	4935971	ExpressionStatement	"printf ( ""Reading state %s\\n"" , opts . getFile ( ) )"	336:1:8257:8303	4935961	1	True				
ANR	4935972	CallExpression	"printf ( ""Reading state %s\\n"" , opts . getFile ( ) )"		4935961	0					
ANR	4935973	Callee	printf		4935961	0					
ANR	4935974	Identifier	printf		4935961	0					
ANR	4935975	ArgumentList	"""Reading state %s\\n"""		4935961	1					
ANR	4935976	Argument	"""Reading state %s\\n"""		4935961	0					
ANR	4935977	PrimaryExpression	"""Reading state %s\\n"""		4935961	0					
ANR	4935978	Argument	opts . getFile ( )		4935961	1					
ANR	4935979	CallExpression	opts . getFile ( )		4935961	0					
ANR	4935980	Callee	opts . getFile		4935961	0					
ANR	4935981	MemberAccess	opts . getFile		4935961	0					
ANR	4935982	Identifier	opts		4935961	0					
ANR	4935983	Identifier	getFile		4935961	1					
ANR	4935984	ArgumentList			4935961	1					
ANR	4935985	IdentifierDeclStatement	"int fd = safe_open_wrapper_follow ( opts . getFile ( ) , O_RDONLY , 0 ) ;"	337:1:8306:8370	4935961	2	True				
ANR	4935986	IdentifierDecl	"fd = safe_open_wrapper_follow ( opts . getFile ( ) , O_RDONLY , 0 )"		4935961	0					
ANR	4935987	IdentifierDeclType	int		4935961	0					
ANR	4935988	Identifier	fd		4935961	1					
ANR	4935989	AssignmentExpression	"fd = safe_open_wrapper_follow ( opts . getFile ( ) , O_RDONLY , 0 )"		4935961	2		=			
ANR	4935990	Identifier	fd		4935961	0					
ANR	4935991	CallExpression	"safe_open_wrapper_follow ( opts . getFile ( ) , O_RDONLY , 0 )"		4935961	1					
ANR	4935992	Callee	safe_open_wrapper_follow		4935961	0					
ANR	4935993	Identifier	safe_open_wrapper_follow		4935961	0					
ANR	4935994	ArgumentList	opts . getFile ( )		4935961	1					
ANR	4935995	Argument	opts . getFile ( )		4935961	0					
ANR	4935996	CallExpression	opts . getFile ( )		4935961	0					
ANR	4935997	Callee	opts . getFile		4935961	0					
ANR	4935998	MemberAccess	opts . getFile		4935961	0					
ANR	4935999	Identifier	opts		4935961	0					
ANR	4936000	Identifier	getFile		4935961	1					
ANR	4936001	ArgumentList			4935961	1					
ANR	4936002	Argument	O_RDONLY		4935961	1					
ANR	4936003	Identifier	O_RDONLY		4935961	0					
ANR	4936004	Argument	0		4935961	2					
ANR	4936005	PrimaryExpression	0		4935961	0					
ANR	4936006	IfStatement	if ( fd < 0 )		4935961	3					
ANR	4936007	Condition	fd < 0	338:6:8378:8383	4935961	0	True				
ANR	4936008	RelationalExpression	fd < 0		4935961	0		<			
ANR	4936009	Identifier	fd		4935961	0					
ANR	4936010	PrimaryExpression	0		4935961	1					
ANR	4936011	CompoundStatement		8:15:206:206	4935961	1					
ANR	4936012	ExpressionStatement	"fprintf ( stderr , ""Failed to read state file %s\\n"" , opts . getFile ( ) )"	339:2:8391:8458	4935961	0	True				
ANR	4936013	CallExpression	"fprintf ( stderr , ""Failed to read state file %s\\n"" , opts . getFile ( ) )"		4935961	0					
ANR	4936014	Callee	fprintf		4935961	0					
ANR	4936015	Identifier	fprintf		4935961	0					
ANR	4936016	ArgumentList	stderr		4935961	1					
ANR	4936017	Argument	stderr		4935961	0					
ANR	4936018	Identifier	stderr		4935961	0					
ANR	4936019	Argument	"""Failed to read state file %s\\n"""		4935961	1					
ANR	4936020	PrimaryExpression	"""Failed to read state file %s\\n"""		4935961	0					
ANR	4936021	Argument	opts . getFile ( )		4935961	2					
ANR	4936022	CallExpression	opts . getFile ( )		4935961	0					
ANR	4936023	Callee	opts . getFile		4935961	0					
ANR	4936024	MemberAccess	opts . getFile		4935961	0					
ANR	4936025	Identifier	opts		4935961	0					
ANR	4936026	Identifier	getFile		4935961	1					
ANR	4936027	ArgumentList			4935961	1					
ANR	4936028	ReturnStatement	return - 1 ;	340:2:8462:8471	4935961	1	True				
ANR	4936029	UnaryOperationExpression	- 1		4935961	0					
ANR	4936030	UnaryOperator	-		4935961	0					
ANR	4936031	PrimaryExpression	1		4935961	1					
ANR	4936032	IfStatement	"if ( read ( fd , state . buf , state . size ) != state . size )"		4935961	4					
ANR	4936033	Condition	"read ( fd , state . buf , state . size ) != state . size"	343:6:8483:8529	4935961	0	True				
ANR	4936034	EqualityExpression	"read ( fd , state . buf , state . size ) != state . size"		4935961	0		!=			
ANR	4936035	CallExpression	"read ( fd , state . buf , state . size )"		4935961	0					
ANR	4936036	Callee	read		4935961	0					
ANR	4936037	Identifier	read		4935961	0					
ANR	4936038	ArgumentList	fd		4935961	1					
ANR	4936039	Argument	fd		4935961	0					
ANR	4936040	Identifier	fd		4935961	0					
ANR	4936041	Argument	state . buf		4935961	1					
ANR	4936042	MemberAccess	state . buf		4935961	0					
ANR	4936043	Identifier	state		4935961	0					
ANR	4936044	Identifier	buf		4935961	1					
ANR	4936045	Argument	state . size		4935961	2					
ANR	4936046	MemberAccess	state . size		4935961	0					
ANR	4936047	Identifier	state		4935961	0					
ANR	4936048	Identifier	size		4935961	1					
ANR	4936049	MemberAccess	state . size		4935961	1					
ANR	4936050	Identifier	state		4935961	0					
ANR	4936051	Identifier	size		4935961	1					
ANR	4936052	CompoundStatement		13:56:352:352	4935961	1					
ANR	4936053	ExpressionStatement	"fprintf ( stderr , ""Failed reading state file %s\\n"" , opts . getFile ( ) )"	344:2:8537:8604	4935961	0	True				
ANR	4936054	CallExpression	"fprintf ( stderr , ""Failed reading state file %s\\n"" , opts . getFile ( ) )"		4935961	0					
ANR	4936055	Callee	fprintf		4935961	0					
ANR	4936056	Identifier	fprintf		4935961	0					
ANR	4936057	ArgumentList	stderr		4935961	1					
ANR	4936058	Argument	stderr		4935961	0					
ANR	4936059	Identifier	stderr		4935961	0					
ANR	4936060	Argument	"""Failed reading state file %s\\n"""		4935961	1					
ANR	4936061	PrimaryExpression	"""Failed reading state file %s\\n"""		4935961	0					
ANR	4936062	Argument	opts . getFile ( )		4935961	2					
ANR	4936063	CallExpression	opts . getFile ( )		4935961	0					
ANR	4936064	Callee	opts . getFile		4935961	0					
ANR	4936065	MemberAccess	opts . getFile		4935961	0					
ANR	4936066	Identifier	opts		4935961	0					
ANR	4936067	Identifier	getFile		4935961	1					
ANR	4936068	ArgumentList			4935961	1					
ANR	4936069	ExpressionStatement	close ( fd )	345:2:8608:8619	4935961	1	True				
ANR	4936070	CallExpression	close ( fd )		4935961	0					
ANR	4936071	Callee	close		4935961	0					
ANR	4936072	Identifier	close		4935961	0					
ANR	4936073	ArgumentList	fd		4935961	1					
ANR	4936074	Argument	fd		4935961	0					
ANR	4936075	Identifier	fd		4935961	0					
ANR	4936076	ReturnStatement	return - 1 ;	346:2:8623:8632	4935961	2	True				
ANR	4936077	UnaryOperationExpression	- 1		4935961	0					
ANR	4936078	UnaryOperator	-		4935961	0					
ANR	4936079	PrimaryExpression	1		4935961	1					
ANR	4936080	ExpressionStatement	close ( fd )	348:1:8638:8649	4935961	5	True				
ANR	4936081	CallExpression	close ( fd )		4935961	0					
ANR	4936082	Callee	close		4935961	0					
ANR	4936083	Identifier	close		4935961	0					
ANR	4936084	ArgumentList	fd		4935961	1					
ANR	4936085	Argument	fd		4935961	0					
ANR	4936086	Identifier	fd		4935961	0					
ANR	4936087	ReturnStatement	return 0 ;	350:1:8653:8661	4935961	6	True				
ANR	4936088	PrimaryExpression	0		4935961	0					
ANR	4936089	ReturnType	int		4935961	1					
ANR	4936090	Identifier	ReadState		4935961	2					
ANR	4936091	ParameterList	"const Options & opts , ReadUserLog :: FileState & state"		4935961	3					
ANR	4936092	Parameter	const Options & opts	329:10:8120:8141	4935961	0	True				
ANR	4936093	ParameterType	const Options &		4935961	0					
ANR	4936094	Identifier	opts		4935961	1					
ANR	4936095	Parameter	ReadUserLog :: FileState & state	330:4:8148:8176	4935961	1	True				
ANR	4936096	ParameterType	ReadUserLog :: FileState &		4935961	0					
ANR	4936097	Identifier	state		4935961	1					
ANR	4936098	CFGEntryNode	ENTRY		4935961		True				
ANR	4936099	CFGExitNode	EXIT		4935961		True				
ANR	4936100	Symbol	state . buf		4935961						
ANR	4936101	Symbol	O_RDONLY		4935961						
ANR	4936102	Symbol	safe_open_wrapper_follow		4935961						
ANR	4936103	Symbol	read		4935961						
ANR	4936104	Symbol	opts		4935961						
ANR	4936105	Symbol	opts . getFile		4935961						
ANR	4936106	Symbol	state . size		4935961						
ANR	4936107	Symbol	state		4935961						
ANR	4936108	Symbol	stderr		4935961						
ANR	4936109	Symbol	fd		4935961						
ANR	4936110	Function	DumpState	354:0:8667:12075							
ANR	4936111	FunctionDef	"DumpState (const Options & opts , const ReadUserLog :: FileState & state , const FieldData * wdata)"		4936110	0					
ANR	4936112	CompoundStatement		358:0:8775:12075	4936110	0					
ANR	4936113	IdentifierDeclStatement	"ReadUserLogState rstate ( state , 60 ) ;"	359:1:8778:8814	4936110	0	True				
ANR	4936114	IdentifierDecl	"rstate ( state , 60 )"		4936110	0					
ANR	4936115	IdentifierDeclType	ReadUserLogState		4936110	0					
ANR	4936116	Identifier	rstate		4936110	1					
ANR	4936117	Expression	"state , 60"		4936110	2					
ANR	4936118	Identifier	state		4936110	0					
ANR	4936119	PrimaryExpression	60		4936110	1					
ANR	4936120	IdentifierDeclStatement	const ReadUserLogState :: FileState * istate ;	360:1:8817:8858	4936110	1	True				
ANR	4936121	IdentifierDecl	* istate		4936110	0					
ANR	4936122	IdentifierDeclType	const ReadUserLogState :: FileState *		4936110	0					
ANR	4936123	Identifier	istate		4936110	1					
ANR	4936124	ExpressionStatement	"ReadUserLogState :: convertState ( state , istate )"	361:1:8861:8908	4936110	2	True				
ANR	4936125	CallExpression	"ReadUserLogState :: convertState ( state , istate )"		4936110	0					
ANR	4936126	Callee	ReadUserLogState :: convertState		4936110	0					
ANR	4936127	Identifier	ReadUserLogState :: convertState		4936110	0					
ANR	4936128	ArgumentList	state		4936110	1					
ANR	4936129	Argument	state		4936110	0					
ANR	4936130	Identifier	state		4936110	0					
ANR	4936131	Argument	istate		4936110	1					
ANR	4936132	Identifier	istate		4936110	0					
ANR	4936133	IfStatement	if ( NULL == wdata )		4936110	3					
ANR	4936134	Condition	NULL == wdata	363:6:8917:8929	4936110	0	True				
ANR	4936135	EqualityExpression	NULL == wdata		4936110	0		==			
ANR	4936136	Identifier	NULL		4936110	0					
ANR	4936137	Identifier	wdata		4936110	1					
ANR	4936138	CompoundStatement		6:22:157:157	4936110	1					
ANR	4936139	ExpressionStatement	wdata = opts . getField ( )	364:2:8937:8961	4936110	0	True				
ANR	4936140	AssignmentExpression	wdata = opts . getField ( )		4936110	0		=			
ANR	4936141	Identifier	wdata		4936110	0					
ANR	4936142	CallExpression	opts . getField ( )		4936110	1					
ANR	4936143	Callee	opts . getField		4936110	0					
ANR	4936144	MemberAccess	opts . getField		4936110	0					
ANR	4936145	Identifier	opts		4936110	0					
ANR	4936146	Identifier	getField		4936110	1					
ANR	4936147	ArgumentList			4936110	1					
ANR	4936148	SwitchStatement	switch ( wdata -> m_field )		4936110	4					
ANR	4936149	Condition	wdata -> m_field	367:9:8976:8989	4936110	0	True				
ANR	4936150	PtrMemberAccess	wdata -> m_field		4936110	0					
ANR	4936151	Identifier	wdata		4936110	0					
ANR	4936152	Identifier	m_field		4936110	1					
ANR	4936153	CompoundStatement		11:1:218:218	4936110	1					
ANR	4936154	Label	case FIELD_NONE :	369:1:8997:9012	4936110	0	True				
ANR	4936155	Identifier	FIELD_NONE		4936110	0					
ANR	4936156	ReturnStatement	return - 1 ;	370:2:9016:9025	4936110	1	True				
ANR	4936157	UnaryOperationExpression	- 1		4936110	0					
ANR	4936158	UnaryOperator	-		4936110	0					
ANR	4936159	PrimaryExpression	1		4936110	1					
ANR	4936160	BreakStatement	break ;	371:2:9029:9034	4936110	2	True				
ANR	4936161	Label	case FIELD_SIGNATURE :	373:1:9038:9058	4936110	3	True				
ANR	4936162	Identifier	FIELD_SIGNATURE		4936110	0					
ANR	4936163	ExpressionStatement	"printf ( ""  %s: '%s'\\n"" , wdata -> m_name , istate -> m_signature )"	374:2:9062:9122	4936110	4	True				
ANR	4936164	CallExpression	"printf ( ""  %s: '%s'\\n"" , wdata -> m_name , istate -> m_signature )"		4936110	0					
ANR	4936165	Callee	printf		4936110	0					
ANR	4936166	Identifier	printf		4936110	0					
ANR	4936167	ArgumentList	"""  %s: '%s'\\n"""		4936110	1					
ANR	4936168	Argument	"""  %s: '%s'\\n"""		4936110	0					
ANR	4936169	PrimaryExpression	"""  %s: '%s'\\n"""		4936110	0					
ANR	4936170	Argument	wdata -> m_name		4936110	1					
ANR	4936171	PtrMemberAccess	wdata -> m_name		4936110	0					
ANR	4936172	Identifier	wdata		4936110	0					
ANR	4936173	Identifier	m_name		4936110	1					
ANR	4936174	Argument	istate -> m_signature		4936110	2					
ANR	4936175	PtrMemberAccess	istate -> m_signature		4936110	0					
ANR	4936176	Identifier	istate		4936110	0					
ANR	4936177	Identifier	m_signature		4936110	1					
ANR	4936178	BreakStatement	break ;	375:2:9126:9131	4936110	5	True				
ANR	4936179	Label	case FIELD_VERSION :	377:1:9135:9153	4936110	6	True				
ANR	4936180	Identifier	FIELD_VERSION		4936110	0					
ANR	4936181	ExpressionStatement	"printf ( ""  %s: %d\\n"" , wdata -> m_name , istate -> m_version )"	378:2:9157:9213	4936110	7	True				
ANR	4936182	CallExpression	"printf ( ""  %s: %d\\n"" , wdata -> m_name , istate -> m_version )"		4936110	0					
ANR	4936183	Callee	printf		4936110	0					
ANR	4936184	Identifier	printf		4936110	0					
ANR	4936185	ArgumentList	"""  %s: %d\\n"""		4936110	1					
ANR	4936186	Argument	"""  %s: %d\\n"""		4936110	0					
ANR	4936187	PrimaryExpression	"""  %s: %d\\n"""		4936110	0					
ANR	4936188	Argument	wdata -> m_name		4936110	1					
ANR	4936189	PtrMemberAccess	wdata -> m_name		4936110	0					
ANR	4936190	Identifier	wdata		4936110	0					
ANR	4936191	Identifier	m_name		4936110	1					
ANR	4936192	Argument	istate -> m_version		4936110	2					
ANR	4936193	PtrMemberAccess	istate -> m_version		4936110	0					
ANR	4936194	Identifier	istate		4936110	0					
ANR	4936195	Identifier	m_version		4936110	1					
ANR	4936196	BreakStatement	break ;	379:2:9217:9222	4936110	8	True				
ANR	4936197	Label	case FIELD_UPDATE_TIME :	381:1:9226:9248	4936110	9	True				
ANR	4936198	Identifier	FIELD_UPDATE_TIME		4936110	0					
ANR	4936199	IfStatement	if ( opts . getNumeric ( ) )		4936110	10					
ANR	4936200	Condition	opts . getNumeric ( )	382:7:9257:9273	4936110	0	True				
ANR	4936201	CallExpression	opts . getNumeric ( )		4936110	0					
ANR	4936202	Callee	opts . getNumeric		4936110	0					
ANR	4936203	MemberAccess	opts . getNumeric		4936110	0					
ANR	4936204	Identifier	opts		4936110	0					
ANR	4936205	Identifier	getNumeric		4936110	1					
ANR	4936206	ArgumentList			4936110	1					
ANR	4936207	CompoundStatement		25:27:501:501	4936110	1					
ANR	4936208	Statement	printf	383:3:9282:9287	4936110	0	True				
ANR	4936209	Statement	(	383:9:9288:9288	4936110	1	True				
ANR	4936210	Statement	"""  %s: %lu\\n"""	383:11:9290:9302	4936110	2	True				
ANR	4936211	Statement	","	383:24:9303:9303	4936110	3	True				
ANR	4936212	Statement	wdata	383:26:9305:9309	4936110	4	True				
ANR	4936213	Statement	->	383:31:9310:9311	4936110	5	True				
ANR	4936214	Statement	m_name	383:33:9312:9317	4936110	6	True				
ANR	4936215	Statement	","	383:39:9318:9318	4936110	7	True				
ANR	4936216	Statement	(	384:5:9325:9325	4936110	8	True				
ANR	4936217	Statement	long	384:6:9326:9329	4936110	9	True				
ANR	4936218	Statement	unsigned	384:11:9331:9338	4936110	10	True				
ANR	4936219	Statement	)	384:19:9339:9339	4936110	11	True				
ANR	4936220	Statement	istate	384:21:9341:9346	4936110	12	True				
ANR	4936221	Statement	->	384:27:9347:9348	4936110	13	True				
ANR	4936222	Statement	m_update_time	384:29:9349:9361	4936110	14	True				
ANR	4936223	Statement	)	384:43:9363:9363	4936110	15	True				
ANR	4936224	ExpressionStatement		384:44:9364:9364	4936110	16	True				
ANR	4936225	ElseStatement	else		4936110	0					
ANR	4936226	CompoundStatement		28:9:599:599	4936110	0					
ANR	4936227	ExpressionStatement	"printf ( ""  %s: '%s'\\n"" , wdata -> m_name , timestr ( istate -> m_update_time ) )"	386:3:9380:9456	4936110	0	True				
ANR	4936228	CallExpression	"printf ( ""  %s: '%s'\\n"" , wdata -> m_name , timestr ( istate -> m_update_time ) )"		4936110	0					
ANR	4936229	Callee	printf		4936110	0					
ANR	4936230	Identifier	printf		4936110	0					
ANR	4936231	ArgumentList	"""  %s: '%s'\\n"""		4936110	1					
ANR	4936232	Argument	"""  %s: '%s'\\n"""		4936110	0					
ANR	4936233	PrimaryExpression	"""  %s: '%s'\\n"""		4936110	0					
ANR	4936234	Argument	wdata -> m_name		4936110	1					
ANR	4936235	PtrMemberAccess	wdata -> m_name		4936110	0					
ANR	4936236	Identifier	wdata		4936110	0					
ANR	4936237	Identifier	m_name		4936110	1					
ANR	4936238	Argument	timestr ( istate -> m_update_time )		4936110	2					
ANR	4936239	CallExpression	timestr ( istate -> m_update_time )		4936110	0					
ANR	4936240	Callee	timestr		4936110	0					
ANR	4936241	Identifier	timestr		4936110	0					
ANR	4936242	ArgumentList	istate -> m_update_time		4936110	1					
ANR	4936243	Argument	istate -> m_update_time		4936110	0					
ANR	4936244	PtrMemberAccess	istate -> m_update_time		4936110	0					
ANR	4936245	Identifier	istate		4936110	0					
ANR	4936246	Identifier	m_update_time		4936110	1					
ANR	4936247	BreakStatement	break ;	389:2:9464:9469	4936110	11	True				
ANR	4936248	Label	case FIELD_BASE_PATH :	391:1:9473:9493	4936110	12	True				
ANR	4936249	Identifier	FIELD_BASE_PATH		4936110	0					
ANR	4936250	ExpressionStatement	"printf ( ""  %s: '%s'\\n"" , wdata -> m_name , istate -> m_base_path )"	392:2:9497:9557	4936110	13	True				
ANR	4936251	CallExpression	"printf ( ""  %s: '%s'\\n"" , wdata -> m_name , istate -> m_base_path )"		4936110	0					
ANR	4936252	Callee	printf		4936110	0					
ANR	4936253	Identifier	printf		4936110	0					
ANR	4936254	ArgumentList	"""  %s: '%s'\\n"""		4936110	1					
ANR	4936255	Argument	"""  %s: '%s'\\n"""		4936110	0					
ANR	4936256	PrimaryExpression	"""  %s: '%s'\\n"""		4936110	0					
ANR	4936257	Argument	wdata -> m_name		4936110	1					
ANR	4936258	PtrMemberAccess	wdata -> m_name		4936110	0					
ANR	4936259	Identifier	wdata		4936110	0					
ANR	4936260	Identifier	m_name		4936110	1					
ANR	4936261	Argument	istate -> m_base_path		4936110	2					
ANR	4936262	PtrMemberAccess	istate -> m_base_path		4936110	0					
ANR	4936263	Identifier	istate		4936110	0					
ANR	4936264	Identifier	m_base_path		4936110	1					
ANR	4936265	BreakStatement	break ;	393:2:9561:9566	4936110	14	True				
ANR	4936266	Label	case FIELD_CUR_PATH :	395:1:9570:9589	4936110	15	True				
ANR	4936267	Identifier	FIELD_CUR_PATH		4936110	0					
ANR	4936268	ExpressionStatement	"printf ( ""  %s: '%s'\\n"" , wdata -> m_name , rstate . CurPath ( state ) )"	396:2:9593:9655	4936110	16	True				
ANR	4936269	CallExpression	"printf ( ""  %s: '%s'\\n"" , wdata -> m_name , rstate . CurPath ( state ) )"		4936110	0					
ANR	4936270	Callee	printf		4936110	0					
ANR	4936271	Identifier	printf		4936110	0					
ANR	4936272	ArgumentList	"""  %s: '%s'\\n"""		4936110	1					
ANR	4936273	Argument	"""  %s: '%s'\\n"""		4936110	0					
ANR	4936274	PrimaryExpression	"""  %s: '%s'\\n"""		4936110	0					
ANR	4936275	Argument	wdata -> m_name		4936110	1					
ANR	4936276	PtrMemberAccess	wdata -> m_name		4936110	0					
ANR	4936277	Identifier	wdata		4936110	0					
ANR	4936278	Identifier	m_name		4936110	1					
ANR	4936279	Argument	rstate . CurPath ( state )		4936110	2					
ANR	4936280	CallExpression	rstate . CurPath ( state )		4936110	0					
ANR	4936281	Callee	rstate . CurPath		4936110	0					
ANR	4936282	MemberAccess	rstate . CurPath		4936110	0					
ANR	4936283	Identifier	rstate		4936110	0					
ANR	4936284	Identifier	CurPath		4936110	1					
ANR	4936285	ArgumentList	state		4936110	1					
ANR	4936286	Argument	state		4936110	0					
ANR	4936287	Identifier	state		4936110	0					
ANR	4936288	BreakStatement	break ;	397:2:9659:9664	4936110	17	True				
ANR	4936289	Label	case FIELD_UNIQ_ID :	399:1:9668:9686	4936110	18	True				
ANR	4936290	Identifier	FIELD_UNIQ_ID		4936110	0					
ANR	4936291	ExpressionStatement	"printf ( ""  %s: '%s'\\n"" , wdata -> m_name , istate -> m_uniq_id )"	400:2:9690:9748	4936110	19	True				
ANR	4936292	CallExpression	"printf ( ""  %s: '%s'\\n"" , wdata -> m_name , istate -> m_uniq_id )"		4936110	0					
ANR	4936293	Callee	printf		4936110	0					
ANR	4936294	Identifier	printf		4936110	0					
ANR	4936295	ArgumentList	"""  %s: '%s'\\n"""		4936110	1					
ANR	4936296	Argument	"""  %s: '%s'\\n"""		4936110	0					
ANR	4936297	PrimaryExpression	"""  %s: '%s'\\n"""		4936110	0					
ANR	4936298	Argument	wdata -> m_name		4936110	1					
ANR	4936299	PtrMemberAccess	wdata -> m_name		4936110	0					
ANR	4936300	Identifier	wdata		4936110	0					
ANR	4936301	Identifier	m_name		4936110	1					
ANR	4936302	Argument	istate -> m_uniq_id		4936110	2					
ANR	4936303	PtrMemberAccess	istate -> m_uniq_id		4936110	0					
ANR	4936304	Identifier	istate		4936110	0					
ANR	4936305	Identifier	m_uniq_id		4936110	1					
ANR	4936306	BreakStatement	break ;	401:2:9752:9757	4936110	20	True				
ANR	4936307	Label	case FIELD_SEQUENCE :	403:1:9761:9780	4936110	21	True				
ANR	4936308	Identifier	FIELD_SEQUENCE		4936110	0					
ANR	4936309	ExpressionStatement	"printf ( ""  %s: %d\\n"" , wdata -> m_name , istate -> m_sequence )"	404:2:9784:9841	4936110	22	True				
ANR	4936310	CallExpression	"printf ( ""  %s: %d\\n"" , wdata -> m_name , istate -> m_sequence )"		4936110	0					
ANR	4936311	Callee	printf		4936110	0					
ANR	4936312	Identifier	printf		4936110	0					
ANR	4936313	ArgumentList	"""  %s: %d\\n"""		4936110	1					
ANR	4936314	Argument	"""  %s: %d\\n"""		4936110	0					
ANR	4936315	PrimaryExpression	"""  %s: %d\\n"""		4936110	0					
ANR	4936316	Argument	wdata -> m_name		4936110	1					
ANR	4936317	PtrMemberAccess	wdata -> m_name		4936110	0					
ANR	4936318	Identifier	wdata		4936110	0					
ANR	4936319	Identifier	m_name		4936110	1					
ANR	4936320	Argument	istate -> m_sequence		4936110	2					
ANR	4936321	PtrMemberAccess	istate -> m_sequence		4936110	0					
ANR	4936322	Identifier	istate		4936110	0					
ANR	4936323	Identifier	m_sequence		4936110	1					
ANR	4936324	BreakStatement	break ;	405:2:9845:9850	4936110	23	True				
ANR	4936325	Label	case FIELD_MAX_ROTATION :	407:1:9854:9877	4936110	24	True				
ANR	4936326	Identifier	FIELD_MAX_ROTATION		4936110	0					
ANR	4936327	ExpressionStatement	"printf ( ""  %s: %d\\n"" , wdata -> m_name , istate -> m_max_rotations )"	408:2:9881:9943	4936110	25	True				
ANR	4936328	CallExpression	"printf ( ""  %s: %d\\n"" , wdata -> m_name , istate -> m_max_rotations )"		4936110	0					
ANR	4936329	Callee	printf		4936110	0					
ANR	4936330	Identifier	printf		4936110	0					
ANR	4936331	ArgumentList	"""  %s: %d\\n"""		4936110	1					
ANR	4936332	Argument	"""  %s: %d\\n"""		4936110	0					
ANR	4936333	PrimaryExpression	"""  %s: %d\\n"""		4936110	0					
ANR	4936334	Argument	wdata -> m_name		4936110	1					
ANR	4936335	PtrMemberAccess	wdata -> m_name		4936110	0					
ANR	4936336	Identifier	wdata		4936110	0					
ANR	4936337	Identifier	m_name		4936110	1					
ANR	4936338	Argument	istate -> m_max_rotations		4936110	2					
ANR	4936339	PtrMemberAccess	istate -> m_max_rotations		4936110	0					
ANR	4936340	Identifier	istate		4936110	0					
ANR	4936341	Identifier	m_max_rotations		4936110	1					
ANR	4936342	BreakStatement	break ;	409:2:9947:9952	4936110	26	True				
ANR	4936343	Label	case FIELD_ROTATION :	411:1:9956:9975	4936110	27	True				
ANR	4936344	Identifier	FIELD_ROTATION		4936110	0					
ANR	4936345	ExpressionStatement	"printf ( ""  %s: %d\\n"" , wdata -> m_name , istate -> m_rotation )"	412:2:9979:10036	4936110	28	True				
ANR	4936346	CallExpression	"printf ( ""  %s: %d\\n"" , wdata -> m_name , istate -> m_rotation )"		4936110	0					
ANR	4936347	Callee	printf		4936110	0					
ANR	4936348	Identifier	printf		4936110	0					
ANR	4936349	ArgumentList	"""  %s: %d\\n"""		4936110	1					
ANR	4936350	Argument	"""  %s: %d\\n"""		4936110	0					
ANR	4936351	PrimaryExpression	"""  %s: %d\\n"""		4936110	0					
ANR	4936352	Argument	wdata -> m_name		4936110	1					
ANR	4936353	PtrMemberAccess	wdata -> m_name		4936110	0					
ANR	4936354	Identifier	wdata		4936110	0					
ANR	4936355	Identifier	m_name		4936110	1					
ANR	4936356	Argument	istate -> m_rotation		4936110	2					
ANR	4936357	PtrMemberAccess	istate -> m_rotation		4936110	0					
ANR	4936358	Identifier	istate		4936110	0					
ANR	4936359	Identifier	m_rotation		4936110	1					
ANR	4936360	BreakStatement	break ;	413:2:10040:10045	4936110	29	True				
ANR	4936361	Label	case FIELD_OFFSET :	415:1:10049:10066	4936110	30	True				
ANR	4936362	Identifier	FIELD_OFFSET		4936110	0					
ANR	4936363	Statement	printf	416:2:10070:10075	4936110	31	True				
ANR	4936364	Statement	(	416:8:10076:10076	4936110	32	True				
ANR	4936365	Statement	"""  %s: """	416:10:10078:10085	4936110	33	True				
ANR	4936366	Statement	FILESIZE_T_FORMAT	416:19:10087:10103	4936110	34	True				
ANR	4936367	Statement	"""\\n"""	416:37:10105:10108	4936110	35	True				
ANR	4936368	Statement	","	416:41:10109:10109	4936110	36	True				
ANR	4936369	Statement	wdata	417:4:10115:10119	4936110	37	True				
ANR	4936370	Statement	->	417:9:10120:10121	4936110	38	True				
ANR	4936371	Statement	m_name	417:11:10122:10127	4936110	39	True				
ANR	4936372	Statement	","	417:17:10128:10128	4936110	40	True				
ANR	4936373	Statement	istate	417:19:10130:10135	4936110	41	True				
ANR	4936374	Statement	->	417:25:10136:10137	4936110	42	True				
ANR	4936375	Statement	m_offset	417:27:10138:10145	4936110	43	True				
ANR	4936376	Statement	.	417:35:10146:10146	4936110	44	True				
ANR	4936377	Statement	asint	417:36:10147:10151	4936110	45	True				
ANR	4936378	Statement	)	417:42:10153:10153	4936110	46	True				
ANR	4936379	ExpressionStatement		417:43:10154:10154	4936110	47	True				
ANR	4936380	BreakStatement	break ;	418:2:10158:10163	4936110	48	True				
ANR	4936381	Label	case FIELD_EVENT_NUM :	420:1:10167:10187	4936110	49	True				
ANR	4936382	Identifier	FIELD_EVENT_NUM		4936110	0					
ANR	4936383	Statement	printf	421:2:10191:10196	4936110	50	True				
ANR	4936384	Statement	(	421:8:10197:10197	4936110	51	True				
ANR	4936385	Statement	"""  %s: """	421:10:10199:10206	4936110	52	True				
ANR	4936386	Statement	FILESIZE_T_FORMAT	421:19:10208:10224	4936110	53	True				
ANR	4936387	Statement	"""\\n"""	421:37:10226:10229	4936110	54	True				
ANR	4936388	Statement	","	421:41:10230:10230	4936110	55	True				
ANR	4936389	Statement	wdata	422:4:10236:10240	4936110	56	True				
ANR	4936390	Statement	->	422:9:10241:10242	4936110	57	True				
ANR	4936391	Statement	m_name	422:11:10243:10248	4936110	58	True				
ANR	4936392	Statement	","	422:17:10249:10249	4936110	59	True				
ANR	4936393	Statement	istate	422:19:10251:10256	4936110	60	True				
ANR	4936394	Statement	->	422:25:10257:10258	4936110	61	True				
ANR	4936395	Statement	m_event_num	422:27:10259:10269	4936110	62	True				
ANR	4936396	Statement	.	422:38:10270:10270	4936110	63	True				
ANR	4936397	Statement	asint	422:39:10271:10275	4936110	64	True				
ANR	4936398	Statement	)	422:45:10277:10277	4936110	65	True				
ANR	4936399	ExpressionStatement		422:46:10278:10278	4936110	66	True				
ANR	4936400	BreakStatement	break ;	423:2:10282:10287	4936110	67	True				
ANR	4936401	Label	case FIELD_GLOBAL_POSITION :	425:1:10291:10317	4936110	68	True				
ANR	4936402	Identifier	FIELD_GLOBAL_POSITION		4936110	0					
ANR	4936403	Statement	printf	426:2:10321:10326	4936110	69	True				
ANR	4936404	Statement	(	426:8:10327:10327	4936110	70	True				
ANR	4936405	Statement	"""  %s: """	426:10:10329:10336	4936110	71	True				
ANR	4936406	Statement	FILESIZE_T_FORMAT	426:19:10338:10354	4936110	72	True				
ANR	4936407	Statement	"""\\n"""	426:37:10356:10359	4936110	73	True				
ANR	4936408	Statement	","	426:41:10360:10360	4936110	74	True				
ANR	4936409	Statement	wdata	427:4:10366:10370	4936110	75	True				
ANR	4936410	Statement	->	427:9:10371:10372	4936110	76	True				
ANR	4936411	Statement	m_name	427:11:10373:10378	4936110	77	True				
ANR	4936412	Statement	","	427:17:10379:10379	4936110	78	True				
ANR	4936413	Statement	istate	427:19:10381:10386	4936110	79	True				
ANR	4936414	Statement	->	427:25:10387:10388	4936110	80	True				
ANR	4936415	Statement	m_log_position	427:27:10389:10402	4936110	81	True				
ANR	4936416	Statement	.	427:41:10403:10403	4936110	82	True				
ANR	4936417	Statement	asint	427:42:10404:10408	4936110	83	True				
ANR	4936418	Statement	)	427:48:10410:10410	4936110	84	True				
ANR	4936419	ExpressionStatement		427:49:10411:10411	4936110	85	True				
ANR	4936420	BreakStatement	break ;	428:2:10415:10420	4936110	86	True				
ANR	4936421	Label	case FIELD_GLOBAL_RECORD_NUM :	430:1:10424:10452	4936110	87	True				
ANR	4936422	Identifier	FIELD_GLOBAL_RECORD_NUM		4936110	0					
ANR	4936423	Statement	printf	431:2:10456:10461	4936110	88	True				
ANR	4936424	Statement	(	431:8:10462:10462	4936110	89	True				
ANR	4936425	Statement	"""  %s: """	431:10:10464:10471	4936110	90	True				
ANR	4936426	Statement	FILESIZE_T_FORMAT	431:19:10473:10489	4936110	91	True				
ANR	4936427	Statement	"""\\n"""	431:37:10491:10494	4936110	92	True				
ANR	4936428	Statement	","	431:41:10495:10495	4936110	93	True				
ANR	4936429	Statement	wdata	432:4:10501:10505	4936110	94	True				
ANR	4936430	Statement	->	432:9:10506:10507	4936110	95	True				
ANR	4936431	Statement	m_name	432:11:10508:10513	4936110	96	True				
ANR	4936432	Statement	","	432:17:10514:10514	4936110	97	True				
ANR	4936433	Statement	istate	432:19:10516:10521	4936110	98	True				
ANR	4936434	Statement	->	432:25:10522:10523	4936110	99	True				
ANR	4936435	Statement	m_log_record	432:27:10524:10535	4936110	100	True				
ANR	4936436	Statement	.	432:39:10536:10536	4936110	101	True				
ANR	4936437	Statement	asint	432:40:10537:10541	4936110	102	True				
ANR	4936438	Statement	)	432:46:10543:10543	4936110	103	True				
ANR	4936439	ExpressionStatement		432:47:10544:10544	4936110	104	True				
ANR	4936440	BreakStatement	break ;	433:2:10548:10553	4936110	105	True				
ANR	4936441	Label	case FIELD_INODE :	435:1:10557:10573	4936110	106	True				
ANR	4936442	Identifier	FIELD_INODE		4936110	0					
ANR	4936443	Statement	printf	436:2:10577:10582	4936110	107	True				
ANR	4936444	Statement	(	436:8:10583:10583	4936110	108	True				
ANR	4936445	Statement	"""  %s: %lu\\n"""	436:10:10585:10597	4936110	109	True				
ANR	4936446	Statement	","	436:23:10598:10598	4936110	110	True				
ANR	4936447	Statement	wdata	436:25:10600:10604	4936110	111	True				
ANR	4936448	Statement	->	436:30:10605:10606	4936110	112	True				
ANR	4936449	Statement	m_name	436:32:10607:10612	4936110	113	True				
ANR	4936450	Statement	","	436:38:10613:10613	4936110	114	True				
ANR	4936451	Statement	(	437:4:10619:10619	4936110	115	True				
ANR	4936452	Statement	long	437:5:10620:10623	4936110	116	True				
ANR	4936453	Statement	unsigned	437:10:10625:10632	4936110	117	True				
ANR	4936454	Statement	)	437:18:10633:10633	4936110	118	True				
ANR	4936455	Statement	istate	437:20:10635:10640	4936110	119	True				
ANR	4936456	Statement	->	437:26:10641:10642	4936110	120	True				
ANR	4936457	Statement	m_inode	437:28:10643:10649	4936110	121	True				
ANR	4936458	Statement	)	437:36:10651:10651	4936110	122	True				
ANR	4936459	ExpressionStatement		437:37:10652:10652	4936110	123	True				
ANR	4936460	BreakStatement	break ;	438:2:10656:10661	4936110	124	True				
ANR	4936461	Label	case FIELD_CTIME :	440:1:10665:10681	4936110	125	True				
ANR	4936462	Identifier	FIELD_CTIME		4936110	0					
ANR	4936463	IfStatement	if ( opts . getNumeric ( ) )		4936110	126					
ANR	4936464	Condition	opts . getNumeric ( )	441:7:10690:10706	4936110	0	True				
ANR	4936465	CallExpression	opts . getNumeric ( )		4936110	0					
ANR	4936466	Callee	opts . getNumeric		4936110	0					
ANR	4936467	MemberAccess	opts . getNumeric		4936110	0					
ANR	4936468	Identifier	opts		4936110	0					
ANR	4936469	Identifier	getNumeric		4936110	1					
ANR	4936470	ArgumentList			4936110	1					
ANR	4936471	CompoundStatement		84:27:1934:1934	4936110	1					
ANR	4936472	Statement	printf	442:3:10715:10720	4936110	0	True				
ANR	4936473	Statement	(	442:9:10721:10721	4936110	1	True				
ANR	4936474	Statement	"""  %s: %lu\\n"""	442:11:10723:10735	4936110	2	True				
ANR	4936475	Statement	","	442:24:10736:10736	4936110	3	True				
ANR	4936476	Statement	wdata	442:26:10738:10742	4936110	4	True				
ANR	4936477	Statement	->	442:31:10743:10744	4936110	5	True				
ANR	4936478	Statement	m_name	442:33:10745:10750	4936110	6	True				
ANR	4936479	Statement	","	442:39:10751:10751	4936110	7	True				
ANR	4936480	Statement	(	443:5:10758:10758	4936110	8	True				
ANR	4936481	Statement	long	443:6:10759:10762	4936110	9	True				
ANR	4936482	Statement	unsigned	443:11:10764:10771	4936110	10	True				
ANR	4936483	Statement	)	443:19:10772:10772	4936110	11	True				
ANR	4936484	Statement	istate	443:21:10774:10779	4936110	12	True				
ANR	4936485	Statement	->	443:27:10780:10781	4936110	13	True				
ANR	4936486	Statement	m_ctime	443:29:10782:10788	4936110	14	True				
ANR	4936487	Statement	)	443:37:10790:10790	4936110	15	True				
ANR	4936488	ExpressionStatement		443:38:10791:10791	4936110	16	True				
ANR	4936489	ElseStatement	else		4936110	0					
ANR	4936490	CompoundStatement		87:9:2026:2026	4936110	0					
ANR	4936491	ExpressionStatement	"printf ( ""  %s: '%s'\\n"" , wdata -> m_name , timestr ( istate -> m_ctime ) )"	445:3:10807:10877	4936110	0	True				
ANR	4936492	CallExpression	"printf ( ""  %s: '%s'\\n"" , wdata -> m_name , timestr ( istate -> m_ctime ) )"		4936110	0					
ANR	4936493	Callee	printf		4936110	0					
ANR	4936494	Identifier	printf		4936110	0					
ANR	4936495	ArgumentList	"""  %s: '%s'\\n"""		4936110	1					
ANR	4936496	Argument	"""  %s: '%s'\\n"""		4936110	0					
ANR	4936497	PrimaryExpression	"""  %s: '%s'\\n"""		4936110	0					
ANR	4936498	Argument	wdata -> m_name		4936110	1					
ANR	4936499	PtrMemberAccess	wdata -> m_name		4936110	0					
ANR	4936500	Identifier	wdata		4936110	0					
ANR	4936501	Identifier	m_name		4936110	1					
ANR	4936502	Argument	timestr ( istate -> m_ctime )		4936110	2					
ANR	4936503	CallExpression	timestr ( istate -> m_ctime )		4936110	0					
ANR	4936504	Callee	timestr		4936110	0					
ANR	4936505	Identifier	timestr		4936110	0					
ANR	4936506	ArgumentList	istate -> m_ctime		4936110	1					
ANR	4936507	Argument	istate -> m_ctime		4936110	0					
ANR	4936508	PtrMemberAccess	istate -> m_ctime		4936110	0					
ANR	4936509	Identifier	istate		4936110	0					
ANR	4936510	Identifier	m_ctime		4936110	1					
ANR	4936511	BreakStatement	break ;	448:2:10885:10890	4936110	127	True				
ANR	4936512	Label	case FIELD_SIZE :	450:1:10894:10909	4936110	128	True				
ANR	4936513	Identifier	FIELD_SIZE		4936110	0					
ANR	4936514	Statement	printf	451:2:10913:10918	4936110	129	True				
ANR	4936515	Statement	(	451:8:10919:10919	4936110	130	True				
ANR	4936516	Statement	"""  %s: """	451:10:10921:10928	4936110	131	True				
ANR	4936517	Statement	FILESIZE_T_FORMAT	451:19:10930:10946	4936110	132	True				
ANR	4936518	Statement	"""\\n"""	451:37:10948:10951	4936110	133	True				
ANR	4936519	Statement	","	451:41:10952:10952	4936110	134	True				
ANR	4936520	Statement	wdata	452:4:10958:10962	4936110	135	True				
ANR	4936521	Statement	->	452:9:10963:10964	4936110	136	True				
ANR	4936522	Statement	m_name	452:11:10965:10970	4936110	137	True				
ANR	4936523	Statement	","	452:17:10971:10971	4936110	138	True				
ANR	4936524	Statement	istate	452:19:10973:10978	4936110	139	True				
ANR	4936525	Statement	->	452:25:10979:10980	4936110	140	True				
ANR	4936526	Statement	m_size	452:27:10981:10986	4936110	141	True				
ANR	4936527	Statement	.	452:33:10987:10987	4936110	142	True				
ANR	4936528	Statement	asint	452:34:10988:10992	4936110	143	True				
ANR	4936529	Statement	)	452:40:10994:10994	4936110	144	True				
ANR	4936530	ExpressionStatement		452:41:10995:10995	4936110	145	True				
ANR	4936531	BreakStatement	break ;	453:2:10999:11004	4936110	146	True				
ANR	4936532	Label	case FIELD_ALL :	455:1:11008:11022	4936110	147	True				
ANR	4936533	Identifier	FIELD_ALL		4936110	0					
ANR	4936534	ExpressionStatement	"DumpState ( opts , state , opts . lookupField ( FIELD_SIGNATURE ) )"	456:2:11026:11085	4936110	148	True				
ANR	4936535	CallExpression	"DumpState ( opts , state , opts . lookupField ( FIELD_SIGNATURE ) )"		4936110	0					
ANR	4936536	Callee	DumpState		4936110	0					
ANR	4936537	Identifier	DumpState		4936110	0					
ANR	4936538	ArgumentList	opts		4936110	1					
ANR	4936539	Argument	opts		4936110	0					
ANR	4936540	Identifier	opts		4936110	0					
ANR	4936541	Argument	state		4936110	1					
ANR	4936542	Identifier	state		4936110	0					
ANR	4936543	Argument	opts . lookupField ( FIELD_SIGNATURE )		4936110	2					
ANR	4936544	CallExpression	opts . lookupField ( FIELD_SIGNATURE )		4936110	0					
ANR	4936545	Callee	opts . lookupField		4936110	0					
ANR	4936546	MemberAccess	opts . lookupField		4936110	0					
ANR	4936547	Identifier	opts		4936110	0					
ANR	4936548	Identifier	lookupField		4936110	1					
ANR	4936549	ArgumentList	FIELD_SIGNATURE		4936110	1					
ANR	4936550	Argument	FIELD_SIGNATURE		4936110	0					
ANR	4936551	Identifier	FIELD_SIGNATURE		4936110	0					
ANR	4936552	ExpressionStatement	"DumpState ( opts , state , opts . lookupField ( FIELD_VERSION ) )"	457:2:11089:11146	4936110	149	True				
ANR	4936553	CallExpression	"DumpState ( opts , state , opts . lookupField ( FIELD_VERSION ) )"		4936110	0					
ANR	4936554	Callee	DumpState		4936110	0					
ANR	4936555	Identifier	DumpState		4936110	0					
ANR	4936556	ArgumentList	opts		4936110	1					
ANR	4936557	Argument	opts		4936110	0					
ANR	4936558	Identifier	opts		4936110	0					
ANR	4936559	Argument	state		4936110	1					
ANR	4936560	Identifier	state		4936110	0					
ANR	4936561	Argument	opts . lookupField ( FIELD_VERSION )		4936110	2					
ANR	4936562	CallExpression	opts . lookupField ( FIELD_VERSION )		4936110	0					
ANR	4936563	Callee	opts . lookupField		4936110	0					
ANR	4936564	MemberAccess	opts . lookupField		4936110	0					
ANR	4936565	Identifier	opts		4936110	0					
ANR	4936566	Identifier	lookupField		4936110	1					
ANR	4936567	ArgumentList	FIELD_VERSION		4936110	1					
ANR	4936568	Argument	FIELD_VERSION		4936110	0					
ANR	4936569	Identifier	FIELD_VERSION		4936110	0					
ANR	4936570	ExpressionStatement	"DumpState ( opts , state , opts . lookupField ( FIELD_UPDATE_TIME ) )"	458:2:11150:11211	4936110	150	True				
ANR	4936571	CallExpression	"DumpState ( opts , state , opts . lookupField ( FIELD_UPDATE_TIME ) )"		4936110	0					
ANR	4936572	Callee	DumpState		4936110	0					
ANR	4936573	Identifier	DumpState		4936110	0					
ANR	4936574	ArgumentList	opts		4936110	1					
ANR	4936575	Argument	opts		4936110	0					
ANR	4936576	Identifier	opts		4936110	0					
ANR	4936577	Argument	state		4936110	1					
ANR	4936578	Identifier	state		4936110	0					
ANR	4936579	Argument	opts . lookupField ( FIELD_UPDATE_TIME )		4936110	2					
ANR	4936580	CallExpression	opts . lookupField ( FIELD_UPDATE_TIME )		4936110	0					
ANR	4936581	Callee	opts . lookupField		4936110	0					
ANR	4936582	MemberAccess	opts . lookupField		4936110	0					
ANR	4936583	Identifier	opts		4936110	0					
ANR	4936584	Identifier	lookupField		4936110	1					
ANR	4936585	ArgumentList	FIELD_UPDATE_TIME		4936110	1					
ANR	4936586	Argument	FIELD_UPDATE_TIME		4936110	0					
ANR	4936587	Identifier	FIELD_UPDATE_TIME		4936110	0					
ANR	4936588	ExpressionStatement	"DumpState ( opts , state , opts . lookupField ( FIELD_BASE_PATH ) )"	459:2:11215:11274	4936110	151	True				
ANR	4936589	CallExpression	"DumpState ( opts , state , opts . lookupField ( FIELD_BASE_PATH ) )"		4936110	0					
ANR	4936590	Callee	DumpState		4936110	0					
ANR	4936591	Identifier	DumpState		4936110	0					
ANR	4936592	ArgumentList	opts		4936110	1					
ANR	4936593	Argument	opts		4936110	0					
ANR	4936594	Identifier	opts		4936110	0					
ANR	4936595	Argument	state		4936110	1					
ANR	4936596	Identifier	state		4936110	0					
ANR	4936597	Argument	opts . lookupField ( FIELD_BASE_PATH )		4936110	2					
ANR	4936598	CallExpression	opts . lookupField ( FIELD_BASE_PATH )		4936110	0					
ANR	4936599	Callee	opts . lookupField		4936110	0					
ANR	4936600	MemberAccess	opts . lookupField		4936110	0					
ANR	4936601	Identifier	opts		4936110	0					
ANR	4936602	Identifier	lookupField		4936110	1					
ANR	4936603	ArgumentList	FIELD_BASE_PATH		4936110	1					
ANR	4936604	Argument	FIELD_BASE_PATH		4936110	0					
ANR	4936605	Identifier	FIELD_BASE_PATH		4936110	0					
ANR	4936606	ExpressionStatement	"DumpState ( opts , state , opts . lookupField ( FIELD_CUR_PATH ) )"	460:2:11278:11336	4936110	152	True				
ANR	4936607	CallExpression	"DumpState ( opts , state , opts . lookupField ( FIELD_CUR_PATH ) )"		4936110	0					
ANR	4936608	Callee	DumpState		4936110	0					
ANR	4936609	Identifier	DumpState		4936110	0					
ANR	4936610	ArgumentList	opts		4936110	1					
ANR	4936611	Argument	opts		4936110	0					
ANR	4936612	Identifier	opts		4936110	0					
ANR	4936613	Argument	state		4936110	1					
ANR	4936614	Identifier	state		4936110	0					
ANR	4936615	Argument	opts . lookupField ( FIELD_CUR_PATH )		4936110	2					
ANR	4936616	CallExpression	opts . lookupField ( FIELD_CUR_PATH )		4936110	0					
ANR	4936617	Callee	opts . lookupField		4936110	0					
ANR	4936618	MemberAccess	opts . lookupField		4936110	0					
ANR	4936619	Identifier	opts		4936110	0					
ANR	4936620	Identifier	lookupField		4936110	1					
ANR	4936621	ArgumentList	FIELD_CUR_PATH		4936110	1					
ANR	4936622	Argument	FIELD_CUR_PATH		4936110	0					
ANR	4936623	Identifier	FIELD_CUR_PATH		4936110	0					
ANR	4936624	ExpressionStatement	"DumpState ( opts , state , opts . lookupField ( FIELD_UNIQ_ID ) )"	461:2:11340:11397	4936110	153	True				
ANR	4936625	CallExpression	"DumpState ( opts , state , opts . lookupField ( FIELD_UNIQ_ID ) )"		4936110	0					
ANR	4936626	Callee	DumpState		4936110	0					
ANR	4936627	Identifier	DumpState		4936110	0					
ANR	4936628	ArgumentList	opts		4936110	1					
ANR	4936629	Argument	opts		4936110	0					
ANR	4936630	Identifier	opts		4936110	0					
ANR	4936631	Argument	state		4936110	1					
ANR	4936632	Identifier	state		4936110	0					
ANR	4936633	Argument	opts . lookupField ( FIELD_UNIQ_ID )		4936110	2					
ANR	4936634	CallExpression	opts . lookupField ( FIELD_UNIQ_ID )		4936110	0					
ANR	4936635	Callee	opts . lookupField		4936110	0					
ANR	4936636	MemberAccess	opts . lookupField		4936110	0					
ANR	4936637	Identifier	opts		4936110	0					
ANR	4936638	Identifier	lookupField		4936110	1					
ANR	4936639	ArgumentList	FIELD_UNIQ_ID		4936110	1					
ANR	4936640	Argument	FIELD_UNIQ_ID		4936110	0					
ANR	4936641	Identifier	FIELD_UNIQ_ID		4936110	0					
ANR	4936642	ExpressionStatement	"DumpState ( opts , state , opts . lookupField ( FIELD_SEQUENCE ) )"	462:2:11401:11459	4936110	154	True				
ANR	4936643	CallExpression	"DumpState ( opts , state , opts . lookupField ( FIELD_SEQUENCE ) )"		4936110	0					
ANR	4936644	Callee	DumpState		4936110	0					
ANR	4936645	Identifier	DumpState		4936110	0					
ANR	4936646	ArgumentList	opts		4936110	1					
ANR	4936647	Argument	opts		4936110	0					
ANR	4936648	Identifier	opts		4936110	0					
ANR	4936649	Argument	state		4936110	1					
ANR	4936650	Identifier	state		4936110	0					
ANR	4936651	Argument	opts . lookupField ( FIELD_SEQUENCE )		4936110	2					
ANR	4936652	CallExpression	opts . lookupField ( FIELD_SEQUENCE )		4936110	0					
ANR	4936653	Callee	opts . lookupField		4936110	0					
ANR	4936654	MemberAccess	opts . lookupField		4936110	0					
ANR	4936655	Identifier	opts		4936110	0					
ANR	4936656	Identifier	lookupField		4936110	1					
ANR	4936657	ArgumentList	FIELD_SEQUENCE		4936110	1					
ANR	4936658	Argument	FIELD_SEQUENCE		4936110	0					
ANR	4936659	Identifier	FIELD_SEQUENCE		4936110	0					
ANR	4936660	ExpressionStatement	"DumpState ( opts , state , opts . lookupField ( FIELD_MAX_ROTATION ) )"	463:2:11463:11525	4936110	155	True				
ANR	4936661	CallExpression	"DumpState ( opts , state , opts . lookupField ( FIELD_MAX_ROTATION ) )"		4936110	0					
ANR	4936662	Callee	DumpState		4936110	0					
ANR	4936663	Identifier	DumpState		4936110	0					
ANR	4936664	ArgumentList	opts		4936110	1					
ANR	4936665	Argument	opts		4936110	0					
ANR	4936666	Identifier	opts		4936110	0					
ANR	4936667	Argument	state		4936110	1					
ANR	4936668	Identifier	state		4936110	0					
ANR	4936669	Argument	opts . lookupField ( FIELD_MAX_ROTATION )		4936110	2					
ANR	4936670	CallExpression	opts . lookupField ( FIELD_MAX_ROTATION )		4936110	0					
ANR	4936671	Callee	opts . lookupField		4936110	0					
ANR	4936672	MemberAccess	opts . lookupField		4936110	0					
ANR	4936673	Identifier	opts		4936110	0					
ANR	4936674	Identifier	lookupField		4936110	1					
ANR	4936675	ArgumentList	FIELD_MAX_ROTATION		4936110	1					
ANR	4936676	Argument	FIELD_MAX_ROTATION		4936110	0					
ANR	4936677	Identifier	FIELD_MAX_ROTATION		4936110	0					
ANR	4936678	ExpressionStatement	"DumpState ( opts , state , opts . lookupField ( FIELD_ROTATION ) )"	464:2:11529:11587	4936110	156	True				
ANR	4936679	CallExpression	"DumpState ( opts , state , opts . lookupField ( FIELD_ROTATION ) )"		4936110	0					
ANR	4936680	Callee	DumpState		4936110	0					
ANR	4936681	Identifier	DumpState		4936110	0					
ANR	4936682	ArgumentList	opts		4936110	1					
ANR	4936683	Argument	opts		4936110	0					
ANR	4936684	Identifier	opts		4936110	0					
ANR	4936685	Argument	state		4936110	1					
ANR	4936686	Identifier	state		4936110	0					
ANR	4936687	Argument	opts . lookupField ( FIELD_ROTATION )		4936110	2					
ANR	4936688	CallExpression	opts . lookupField ( FIELD_ROTATION )		4936110	0					
ANR	4936689	Callee	opts . lookupField		4936110	0					
ANR	4936690	MemberAccess	opts . lookupField		4936110	0					
ANR	4936691	Identifier	opts		4936110	0					
ANR	4936692	Identifier	lookupField		4936110	1					
ANR	4936693	ArgumentList	FIELD_ROTATION		4936110	1					
ANR	4936694	Argument	FIELD_ROTATION		4936110	0					
ANR	4936695	Identifier	FIELD_ROTATION		4936110	0					
ANR	4936696	ExpressionStatement	"DumpState ( opts , state , opts . lookupField ( FIELD_OFFSET ) )"	465:2:11591:11647	4936110	157	True				
ANR	4936697	CallExpression	"DumpState ( opts , state , opts . lookupField ( FIELD_OFFSET ) )"		4936110	0					
ANR	4936698	Callee	DumpState		4936110	0					
ANR	4936699	Identifier	DumpState		4936110	0					
ANR	4936700	ArgumentList	opts		4936110	1					
ANR	4936701	Argument	opts		4936110	0					
ANR	4936702	Identifier	opts		4936110	0					
ANR	4936703	Argument	state		4936110	1					
ANR	4936704	Identifier	state		4936110	0					
ANR	4936705	Argument	opts . lookupField ( FIELD_OFFSET )		4936110	2					
ANR	4936706	CallExpression	opts . lookupField ( FIELD_OFFSET )		4936110	0					
ANR	4936707	Callee	opts . lookupField		4936110	0					
ANR	4936708	MemberAccess	opts . lookupField		4936110	0					
ANR	4936709	Identifier	opts		4936110	0					
ANR	4936710	Identifier	lookupField		4936110	1					
ANR	4936711	ArgumentList	FIELD_OFFSET		4936110	1					
ANR	4936712	Argument	FIELD_OFFSET		4936110	0					
ANR	4936713	Identifier	FIELD_OFFSET		4936110	0					
ANR	4936714	ExpressionStatement	"DumpState ( opts , state , opts . lookupField ( FIELD_EVENT_NUM ) )"	466:2:11651:11710	4936110	158	True				
ANR	4936715	CallExpression	"DumpState ( opts , state , opts . lookupField ( FIELD_EVENT_NUM ) )"		4936110	0					
ANR	4936716	Callee	DumpState		4936110	0					
ANR	4936717	Identifier	DumpState		4936110	0					
ANR	4936718	ArgumentList	opts		4936110	1					
ANR	4936719	Argument	opts		4936110	0					
ANR	4936720	Identifier	opts		4936110	0					
ANR	4936721	Argument	state		4936110	1					
ANR	4936722	Identifier	state		4936110	0					
ANR	4936723	Argument	opts . lookupField ( FIELD_EVENT_NUM )		4936110	2					
ANR	4936724	CallExpression	opts . lookupField ( FIELD_EVENT_NUM )		4936110	0					
ANR	4936725	Callee	opts . lookupField		4936110	0					
ANR	4936726	MemberAccess	opts . lookupField		4936110	0					
ANR	4936727	Identifier	opts		4936110	0					
ANR	4936728	Identifier	lookupField		4936110	1					
ANR	4936729	ArgumentList	FIELD_EVENT_NUM		4936110	1					
ANR	4936730	Argument	FIELD_EVENT_NUM		4936110	0					
ANR	4936731	Identifier	FIELD_EVENT_NUM		4936110	0					
ANR	4936732	ExpressionStatement	"DumpState ( opts , state , opts . lookupField ( FIELD_GLOBAL_POSITION ) )"	467:2:11714:11779	4936110	159	True				
ANR	4936733	CallExpression	"DumpState ( opts , state , opts . lookupField ( FIELD_GLOBAL_POSITION ) )"		4936110	0					
ANR	4936734	Callee	DumpState		4936110	0					
ANR	4936735	Identifier	DumpState		4936110	0					
ANR	4936736	ArgumentList	opts		4936110	1					
ANR	4936737	Argument	opts		4936110	0					
ANR	4936738	Identifier	opts		4936110	0					
ANR	4936739	Argument	state		4936110	1					
ANR	4936740	Identifier	state		4936110	0					
ANR	4936741	Argument	opts . lookupField ( FIELD_GLOBAL_POSITION )		4936110	2					
ANR	4936742	CallExpression	opts . lookupField ( FIELD_GLOBAL_POSITION )		4936110	0					
ANR	4936743	Callee	opts . lookupField		4936110	0					
ANR	4936744	MemberAccess	opts . lookupField		4936110	0					
ANR	4936745	Identifier	opts		4936110	0					
ANR	4936746	Identifier	lookupField		4936110	1					
ANR	4936747	ArgumentList	FIELD_GLOBAL_POSITION		4936110	1					
ANR	4936748	Argument	FIELD_GLOBAL_POSITION		4936110	0					
ANR	4936749	Identifier	FIELD_GLOBAL_POSITION		4936110	0					
ANR	4936750	ExpressionStatement	"DumpState ( opts , state , opts . lookupField ( FIELD_GLOBAL_RECORD_NUM ) )"	468:2:11783:11850	4936110	160	True				
ANR	4936751	CallExpression	"DumpState ( opts , state , opts . lookupField ( FIELD_GLOBAL_RECORD_NUM ) )"		4936110	0					
ANR	4936752	Callee	DumpState		4936110	0					
ANR	4936753	Identifier	DumpState		4936110	0					
ANR	4936754	ArgumentList	opts		4936110	1					
ANR	4936755	Argument	opts		4936110	0					
ANR	4936756	Identifier	opts		4936110	0					
ANR	4936757	Argument	state		4936110	1					
ANR	4936758	Identifier	state		4936110	0					
ANR	4936759	Argument	opts . lookupField ( FIELD_GLOBAL_RECORD_NUM )		4936110	2					
ANR	4936760	CallExpression	opts . lookupField ( FIELD_GLOBAL_RECORD_NUM )		4936110	0					
ANR	4936761	Callee	opts . lookupField		4936110	0					
ANR	4936762	MemberAccess	opts . lookupField		4936110	0					
ANR	4936763	Identifier	opts		4936110	0					
ANR	4936764	Identifier	lookupField		4936110	1					
ANR	4936765	ArgumentList	FIELD_GLOBAL_RECORD_NUM		4936110	1					
ANR	4936766	Argument	FIELD_GLOBAL_RECORD_NUM		4936110	0					
ANR	4936767	Identifier	FIELD_GLOBAL_RECORD_NUM		4936110	0					
ANR	4936768	ExpressionStatement	"DumpState ( opts , state , opts . lookupField ( FIELD_INODE ) )"	469:2:11854:11909	4936110	161	True				
ANR	4936769	CallExpression	"DumpState ( opts , state , opts . lookupField ( FIELD_INODE ) )"		4936110	0					
ANR	4936770	Callee	DumpState		4936110	0					
ANR	4936771	Identifier	DumpState		4936110	0					
ANR	4936772	ArgumentList	opts		4936110	1					
ANR	4936773	Argument	opts		4936110	0					
ANR	4936774	Identifier	opts		4936110	0					
ANR	4936775	Argument	state		4936110	1					
ANR	4936776	Identifier	state		4936110	0					
ANR	4936777	Argument	opts . lookupField ( FIELD_INODE )		4936110	2					
ANR	4936778	CallExpression	opts . lookupField ( FIELD_INODE )		4936110	0					
ANR	4936779	Callee	opts . lookupField		4936110	0					
ANR	4936780	MemberAccess	opts . lookupField		4936110	0					
ANR	4936781	Identifier	opts		4936110	0					
ANR	4936782	Identifier	lookupField		4936110	1					
ANR	4936783	ArgumentList	FIELD_INODE		4936110	1					
ANR	4936784	Argument	FIELD_INODE		4936110	0					
ANR	4936785	Identifier	FIELD_INODE		4936110	0					
ANR	4936786	ExpressionStatement	"DumpState ( opts , state , opts . lookupField ( FIELD_CTIME ) )"	470:2:11913:11968	4936110	162	True				
ANR	4936787	CallExpression	"DumpState ( opts , state , opts . lookupField ( FIELD_CTIME ) )"		4936110	0					
ANR	4936788	Callee	DumpState		4936110	0					
ANR	4936789	Identifier	DumpState		4936110	0					
ANR	4936790	ArgumentList	opts		4936110	1					
ANR	4936791	Argument	opts		4936110	0					
ANR	4936792	Identifier	opts		4936110	0					
ANR	4936793	Argument	state		4936110	1					
ANR	4936794	Identifier	state		4936110	0					
ANR	4936795	Argument	opts . lookupField ( FIELD_CTIME )		4936110	2					
ANR	4936796	CallExpression	opts . lookupField ( FIELD_CTIME )		4936110	0					
ANR	4936797	Callee	opts . lookupField		4936110	0					
ANR	4936798	MemberAccess	opts . lookupField		4936110	0					
ANR	4936799	Identifier	opts		4936110	0					
ANR	4936800	Identifier	lookupField		4936110	1					
ANR	4936801	ArgumentList	FIELD_CTIME		4936110	1					
ANR	4936802	Argument	FIELD_CTIME		4936110	0					
ANR	4936803	Identifier	FIELD_CTIME		4936110	0					
ANR	4936804	ExpressionStatement	"DumpState ( opts , state , opts . lookupField ( FIELD_SIZE ) )"	471:2:11972:12026	4936110	163	True				
ANR	4936805	CallExpression	"DumpState ( opts , state , opts . lookupField ( FIELD_SIZE ) )"		4936110	0					
ANR	4936806	Callee	DumpState		4936110	0					
ANR	4936807	Identifier	DumpState		4936110	0					
ANR	4936808	ArgumentList	opts		4936110	1					
ANR	4936809	Argument	opts		4936110	0					
ANR	4936810	Identifier	opts		4936110	0					
ANR	4936811	Argument	state		4936110	1					
ANR	4936812	Identifier	state		4936110	0					
ANR	4936813	Argument	opts . lookupField ( FIELD_SIZE )		4936110	2					
ANR	4936814	CallExpression	opts . lookupField ( FIELD_SIZE )		4936110	0					
ANR	4936815	Callee	opts . lookupField		4936110	0					
ANR	4936816	MemberAccess	opts . lookupField		4936110	0					
ANR	4936817	Identifier	opts		4936110	0					
ANR	4936818	Identifier	lookupField		4936110	1					
ANR	4936819	ArgumentList	FIELD_SIZE		4936110	1					
ANR	4936820	Argument	FIELD_SIZE		4936110	0					
ANR	4936821	Identifier	FIELD_SIZE		4936110	0					
ANR	4936822	BreakStatement	break ;	472:2:12030:12035	4936110	164	True				
ANR	4936823	Label	default :	474:1:12039:12046	4936110	165	True				
ANR	4936824	Identifier	default		4936110	0					
ANR	4936825	ReturnStatement	return - 1 ;	475:2:12050:12059	4936110	166	True				
ANR	4936826	UnaryOperationExpression	- 1		4936110	0					
ANR	4936827	UnaryOperator	-		4936110	0					
ANR	4936828	PrimaryExpression	1		4936110	1					
ANR	4936829	ReturnStatement	return 0 ;	477:1:12065:12073	4936110	5	True				
ANR	4936830	PrimaryExpression	0		4936110	0					
ANR	4936831	ReturnType	int		4936110	1					
ANR	4936832	Identifier	DumpState		4936110	2					
ANR	4936833	ParameterList	"const Options & opts , const ReadUserLog :: FileState & state , const FieldData * wdata"		4936110	3					
ANR	4936834	Parameter	const Options & opts	355:11:8682:8700	4936110	0	True				
ANR	4936835	ParameterType	const Options &		4936110	0					
ANR	4936836	Identifier	opts		4936110	1					
ANR	4936837	Parameter	const ReadUserLog :: FileState & state	356:5:8708:8742	4936110	1	True				
ANR	4936838	ParameterType	const ReadUserLog :: FileState &		4936110	0					
ANR	4936839	Identifier	state		4936110	1					
ANR	4936840	Parameter	const FieldData * wdata	357:5:8750:8771	4936110	2	True				
ANR	4936841	ParameterType	const FieldData *		4936110	0					
ANR	4936842	Identifier	wdata		4936110	1					
ANR	4936843	CFGEntryNode	ENTRY		4936110		True				
ANR	4936844	CFGExitNode	EXIT		4936110		True				
ANR	4936845	Symbol	FIELD_SEQUENCE		4936110						
ANR	4936846	Symbol	istate -> m_max_rotations		4936110						
ANR	4936847	Symbol	istate -> m_version		4936110						
ANR	4936848	Symbol	FIELD_SIZE		4936110						
ANR	4936849	Symbol	istate -> m_update_time		4936110						
ANR	4936850	Symbol	FIELD_CTIME		4936110						
ANR	4936851	Symbol	rstate		4936110						
ANR	4936852	Symbol	wdata -> m_name		4936110						
ANR	4936853	Symbol	* istate		4936110						
ANR	4936854	Symbol	istate -> m_base_path		4936110						
ANR	4936855	Symbol	istate -> m_sequence		4936110						
ANR	4936856	Symbol	FIELD_BASE_PATH		4936110						
ANR	4936857	Symbol	FIELD_SIGNATURE		4936110						
ANR	4936858	Symbol	opts		4936110						
ANR	4936859	Symbol	FIELD_INODE		4936110						
ANR	4936860	Symbol	FIELD_UNIQ_ID		4936110						
ANR	4936861	Symbol	wdata		4936110						
ANR	4936862	Symbol	state		4936110						
ANR	4936863	Symbol	opts . lookupField		4936110						
ANR	4936864	Symbol	NULL		4936110						
ANR	4936865	Symbol	istate -> m_ctime		4936110						
ANR	4936866	Symbol	istate -> m_signature		4936110						
ANR	4936867	Symbol	FIELD_OFFSET		4936110						
ANR	4936868	Symbol	rstate . CurPath		4936110						
ANR	4936869	Symbol	istate -> m_rotation		4936110						
ANR	4936870	Symbol	FIELD_MAX_ROTATION		4936110						
ANR	4936871	Symbol	FIELD_EVENT_NUM		4936110						
ANR	4936872	Symbol	timestr		4936110						
ANR	4936873	Symbol	opts . getField		4936110						
ANR	4936874	Symbol	FIELD_ROTATION		4936110						
ANR	4936875	Symbol	istate -> m_uniq_id		4936110						
ANR	4936876	Symbol	opts . getNumeric		4936110						
ANR	4936877	Symbol	FIELD_CUR_PATH		4936110						
ANR	4936878	Symbol	FIELD_UPDATE_TIME		4936110						
ANR	4936879	Symbol	* wdata		4936110						
ANR	4936880	Symbol	FIELD_VERSION		4936110						
ANR	4936881	Symbol	FIELD_GLOBAL_RECORD_NUM		4936110						
ANR	4936882	Symbol	wdata -> m_field		4936110						
ANR	4936883	Symbol	istate		4936110						
ANR	4936884	Symbol	FIELD_GLOBAL_POSITION		4936110						
ANR	4936885	DeclStmt									
ANR	4936886	Decl							ReadUserLogStateAccess	ReadUserLogStateAccess ( state )	saccess
ANR	4936887	DeclStmt									
ANR	4936888	Decl							unsigned long	unsigned long	foff
ANR	4936889	DeclStmt									
ANR	4936890	Decl							unsigned long	unsigned long	fnum
ANR	4936891	DeclStmt									
ANR	4936892	Decl							unsigned long	unsigned long	lpos
ANR	4936893	DeclStmt									
ANR	4936894	Decl							unsigned long	unsigned long	lnum
ANR	4936895	DeclStmt									
ANR	4936896	Decl							int	int	seq
ANR	4936897	DeclStmt									
ANR	4936898	Decl							char	char [ 256 ]	uniq_id
ANR	4936899	DeclStmt									
ANR	4936900	Decl							int	int	errors
ANR	4936901	DeclStmt									
ANR	4936902	Decl							ReadUserLogStateAccess	ReadUserLogStateAccess ( state1 )	access1
ANR	4936903	DeclStmt									
ANR	4936904	Decl							ReadUserLogStateAccess	ReadUserLogStateAccess ( state2 )	access2
ANR	4936905	DeclStmt									
ANR	4936906	Decl							int	int	errors
ANR	4936907	Function	CompareStr	551:0:13710:13979							
ANR	4936908	FunctionDef	"CompareStr (const Options & opts , const char * val)"		4936907	0					
ANR	4936909	CompoundStatement		553:0:13766:13979	4936907	0					
ANR	4936910	IdentifierDeclStatement	bool ok ;	554:1:13769:13776	4936907	0	True				
ANR	4936911	IdentifierDecl	ok		4936907	0					
ANR	4936912	IdentifierDeclType	bool		4936907	0					
ANR	4936913	Identifier	ok		4936907	1					
ANR	4936914	ExpressionStatement	"ok = ( strcasecmp ( val , opts . getValue ( ) . asStr ) == 0 )"	556:1:13780:13834	4936907	1	True				
ANR	4936915	AssignmentExpression	"ok = ( strcasecmp ( val , opts . getValue ( ) . asStr ) == 0 )"		4936907	0		=			
ANR	4936916	Identifier	ok		4936907	0					
ANR	4936917	EqualityExpression	"strcasecmp ( val , opts . getValue ( ) . asStr ) == 0"		4936907	1		==			
ANR	4936918	CallExpression	"strcasecmp ( val , opts . getValue ( ) . asStr )"		4936907	0					
ANR	4936919	Callee	strcasecmp		4936907	0					
ANR	4936920	Identifier	strcasecmp		4936907	0					
ANR	4936921	ArgumentList	val		4936907	1					
ANR	4936922	Argument	val		4936907	0					
ANR	4936923	Identifier	val		4936907	0					
ANR	4936924	Argument	opts . getValue ( ) . asStr		4936907	1					
ANR	4936925	MemberAccess	opts . getValue ( ) . asStr		4936907	0					
ANR	4936926	CallExpression	opts . getValue ( )		4936907	0					
ANR	4936927	Callee	opts . getValue		4936907	0					
ANR	4936928	MemberAccess	opts . getValue		4936907	0					
ANR	4936929	Identifier	opts		4936907	0					
ANR	4936930	Identifier	getValue		4936907	1					
ANR	4936931	ArgumentList			4936907	1					
ANR	4936932	Identifier	asStr		4936907	1					
ANR	4936933	PrimaryExpression	0		4936907	1					
ANR	4936934	IfStatement	if ( ! ok && opts . getVerbose ( ) )		4936907	2					
ANR	4936935	Condition	! ok && opts . getVerbose ( )	557:6:13842:13865	4936907	0	True				
ANR	4936936	AndExpression	! ok && opts . getVerbose ( )		4936907	0		&&			
ANR	4936937	UnaryOperationExpression	! ok		4936907	0					
ANR	4936938	UnaryOperator	!		4936907	0					
ANR	4936939	Identifier	ok		4936907	1					
ANR	4936940	CallExpression	opts . getVerbose ( )		4936907	1					
ANR	4936941	Callee	opts . getVerbose		4936907	0					
ANR	4936942	MemberAccess	opts . getVerbose		4936907	0					
ANR	4936943	Identifier	opts		4936907	0					
ANR	4936944	Identifier	getVerbose		4936907	1					
ANR	4936945	ArgumentList			4936907	1					
ANR	4936946	CompoundStatement		5:33:102:102	4936907	1					
ANR	4936947	ExpressionStatement	"printf ( ""  %s: '%s' != '%s'\\n"" , opts . getField ( ) -> m_name , val , opts . getValue ( ) . asStr )"	558:2:13873:13962	4936907	0	True				
ANR	4936948	CallExpression	"printf ( ""  %s: '%s' != '%s'\\n"" , opts . getField ( ) -> m_name , val , opts . getValue ( ) . asStr )"		4936907	0					
ANR	4936949	Callee	printf		4936907	0					
ANR	4936950	Identifier	printf		4936907	0					
ANR	4936951	ArgumentList	"""  %s: '%s' != '%s'\\n"""		4936907	1					
ANR	4936952	Argument	"""  %s: '%s' != '%s'\\n"""		4936907	0					
ANR	4936953	PrimaryExpression	"""  %s: '%s' != '%s'\\n"""		4936907	0					
ANR	4936954	Argument	opts . getField ( ) -> m_name		4936907	1					
ANR	4936955	PtrMemberAccess	opts . getField ( ) -> m_name		4936907	0					
ANR	4936956	CallExpression	opts . getField ( )		4936907	0					
ANR	4936957	Callee	opts . getField		4936907	0					
ANR	4936958	MemberAccess	opts . getField		4936907	0					
ANR	4936959	Identifier	opts		4936907	0					
ANR	4936960	Identifier	getField		4936907	1					
ANR	4936961	ArgumentList			4936907	1					
ANR	4936962	Identifier	m_name		4936907	1					
ANR	4936963	Argument	val		4936907	2					
ANR	4936964	Identifier	val		4936907	0					
ANR	4936965	Argument	opts . getValue ( ) . asStr		4936907	3					
ANR	4936966	MemberAccess	opts . getValue ( ) . asStr		4936907	0					
ANR	4936967	CallExpression	opts . getValue ( )		4936907	0					
ANR	4936968	Callee	opts . getValue		4936907	0					
ANR	4936969	MemberAccess	opts . getValue		4936907	0					
ANR	4936970	Identifier	opts		4936907	0					
ANR	4936971	Identifier	getValue		4936907	1					
ANR	4936972	ArgumentList			4936907	1					
ANR	4936973	Identifier	asStr		4936907	1					
ANR	4936974	ReturnStatement	return ok ;	561:1:13968:13977	4936907	3	True				
ANR	4936975	Identifier	ok		4936907	0					
ANR	4936976	ReturnType	bool		4936907	1					
ANR	4936977	Identifier	CompareStr		4936907	2					
ANR	4936978	ParameterList	"const Options & opts , const char * val"		4936907	3					
ANR	4936979	Parameter	const Options & opts	552:12:13727:13745	4936907	0	True				
ANR	4936980	ParameterType	const Options &		4936907	0					
ANR	4936981	Identifier	opts		4936907	1					
ANR	4936982	Parameter	const char * val	552:33:13748:13762	4936907	1	True				
ANR	4936983	ParameterType	const char *		4936907	0					
ANR	4936984	Identifier	val		4936907	1					
ANR	4936985	CFGEntryNode	ENTRY		4936907		True				
ANR	4936986	CFGExitNode	EXIT		4936907		True				
ANR	4936987	Symbol	val		4936907						
ANR	4936988	Symbol	opts		4936907						
ANR	4936989	Symbol	opts . getValue ( ) . asStr		4936907						
ANR	4936990	Symbol	* opts		4936907						
ANR	4936991	Symbol	* opts . getField		4936907						
ANR	4936992	Symbol	opts . getValue		4936907						
ANR	4936993	Symbol	ok		4936907						
ANR	4936994	Symbol	strcasecmp		4936907						
ANR	4936995	Symbol	opts . getField ( ) -> m_name		4936907						
ANR	4936996	Symbol	opts . getField		4936907						
ANR	4936997	Symbol	opts . getVerbose		4936907						
ANR	4936998	Function	CompareInt	564:0:13982:14620							
ANR	4936999	FunctionDef	"CompareInt (const Options & opts , int val)"		4936998	0					
ANR	4937000	CompoundStatement		566:0:14030:14620	4936998	0					
ANR	4937001	IdentifierDeclStatement	bool ok ;	567:1:14033:14040	4936998	0	True				
ANR	4937002	IdentifierDecl	ok		4936998	0					
ANR	4937003	IdentifierDeclType	bool		4936998	0					
ANR	4937004	Identifier	ok		4936998	1					
ANR	4937005	IfStatement	if ( opts . isValueRange ( ) )		4936998	1					
ANR	4937006	Condition	opts . isValueRange ( )	569:6:14049:14067	4936998	0	True				
ANR	4937007	CallExpression	opts . isValueRange ( )		4936998	0					
ANR	4937008	Callee	opts . isValueRange		4936998	0					
ANR	4937009	MemberAccess	opts . isValueRange		4936998	0					
ANR	4937010	Identifier	opts		4936998	0					
ANR	4937011	Identifier	isValueRange		4936998	1					
ANR	4937012	ArgumentList			4936998	1					
ANR	4937013	CompoundStatement		4:28:40:40	4936998	1					
ANR	4937014	ExpressionStatement	ok = ( ( val >= opts . getValue ( ) . asRange . minVal . asInt ) && ( val <= opts . getValue ( ) . asRange . maxVal . asInt ) )	570:2:14075:14188	4936998	0	True				
ANR	4937015	AssignmentExpression	ok = ( ( val >= opts . getValue ( ) . asRange . minVal . asInt ) && ( val <= opts . getValue ( ) . asRange . maxVal . asInt ) )		4936998	0		=			
ANR	4937016	Identifier	ok		4936998	0					
ANR	4937017	AndExpression	( val >= opts . getValue ( ) . asRange . minVal . asInt ) && ( val <= opts . getValue ( ) . asRange . maxVal . asInt )		4936998	1		&&			
ANR	4937018	RelationalExpression	val >= opts . getValue ( ) . asRange . minVal . asInt		4936998	0		>=			
ANR	4937019	Identifier	val		4936998	0					
ANR	4937020	MemberAccess	opts . getValue ( ) . asRange . minVal . asInt		4936998	1					
ANR	4937021	MemberAccess	opts . getValue ( ) . asRange . minVal		4936998	0					
ANR	4937022	MemberAccess	opts . getValue ( ) . asRange		4936998	0					
ANR	4937023	CallExpression	opts . getValue ( )		4936998	0					
ANR	4937024	Callee	opts . getValue		4936998	0					
ANR	4937025	MemberAccess	opts . getValue		4936998	0					
ANR	4937026	Identifier	opts		4936998	0					
ANR	4937027	Identifier	getValue		4936998	1					
ANR	4937028	ArgumentList			4936998	1					
ANR	4937029	Identifier	asRange		4936998	1					
ANR	4937030	Identifier	minVal		4936998	1					
ANR	4937031	Identifier	asInt		4936998	1					
ANR	4937032	RelationalExpression	val <= opts . getValue ( ) . asRange . maxVal . asInt		4936998	1		<=			
ANR	4937033	Identifier	val		4936998	0					
ANR	4937034	MemberAccess	opts . getValue ( ) . asRange . maxVal . asInt		4936998	1					
ANR	4937035	MemberAccess	opts . getValue ( ) . asRange . maxVal		4936998	0					
ANR	4937036	MemberAccess	opts . getValue ( ) . asRange		4936998	0					
ANR	4937037	CallExpression	opts . getValue ( )		4936998	0					
ANR	4937038	Callee	opts . getValue		4936998	0					
ANR	4937039	MemberAccess	opts . getValue		4936998	0					
ANR	4937040	Identifier	opts		4936998	0					
ANR	4937041	Identifier	getValue		4936998	1					
ANR	4937042	ArgumentList			4936998	1					
ANR	4937043	Identifier	asRange		4936998	1					
ANR	4937044	Identifier	maxVal		4936998	1					
ANR	4937045	Identifier	asInt		4936998	1					
ANR	4937046	IfStatement	if ( ! ok && opts . getVerbose ( ) )		4936998	1					
ANR	4937047	Condition	! ok && opts . getVerbose ( )	573:7:14198:14221	4936998	0	True				
ANR	4937048	AndExpression	! ok && opts . getVerbose ( )		4936998	0		&&			
ANR	4937049	UnaryOperationExpression	! ok		4936998	0					
ANR	4937050	UnaryOperator	!		4936998	0					
ANR	4937051	Identifier	ok		4936998	1					
ANR	4937052	CallExpression	opts . getVerbose ( )		4936998	1					
ANR	4937053	Callee	opts . getVerbose		4936998	0					
ANR	4937054	MemberAccess	opts . getVerbose		4936998	0					
ANR	4937055	Identifier	opts		4936998	0					
ANR	4937056	Identifier	getVerbose		4936998	1					
ANR	4937057	ArgumentList			4936998	1					
ANR	4937058	CompoundStatement		8:34:194:194	4936998	1					
ANR	4937059	ExpressionStatement	"printf ( ""  %s: %d not in %d - %d\\n"" , opts . getField ( ) -> m_name , val , opts . getValue ( ) . asRange . minVal . asInt , opts . getValue ( ) . asRange . maxVal . asInt )"	574:3:14230:14393	4936998	0	True				
ANR	4937060	CallExpression	"printf ( ""  %s: %d not in %d - %d\\n"" , opts . getField ( ) -> m_name , val , opts . getValue ( ) . asRange . minVal . asInt , opts . getValue ( ) . asRange . maxVal . asInt )"		4936998	0					
ANR	4937061	Callee	printf		4936998	0					
ANR	4937062	Identifier	printf		4936998	0					
ANR	4937063	ArgumentList	"""  %s: %d not in %d - %d\\n"""		4936998	1					
ANR	4937064	Argument	"""  %s: %d not in %d - %d\\n"""		4936998	0					
ANR	4937065	PrimaryExpression	"""  %s: %d not in %d - %d\\n"""		4936998	0					
ANR	4937066	Argument	opts . getField ( ) -> m_name		4936998	1					
ANR	4937067	PtrMemberAccess	opts . getField ( ) -> m_name		4936998	0					
ANR	4937068	CallExpression	opts . getField ( )		4936998	0					
ANR	4937069	Callee	opts . getField		4936998	0					
ANR	4937070	MemberAccess	opts . getField		4936998	0					
ANR	4937071	Identifier	opts		4936998	0					
ANR	4937072	Identifier	getField		4936998	1					
ANR	4937073	ArgumentList			4936998	1					
ANR	4937074	Identifier	m_name		4936998	1					
ANR	4937075	Argument	val		4936998	2					
ANR	4937076	Identifier	val		4936998	0					
ANR	4937077	Argument	opts . getValue ( ) . asRange . minVal . asInt		4936998	3					
ANR	4937078	MemberAccess	opts . getValue ( ) . asRange . minVal . asInt		4936998	0					
ANR	4937079	MemberAccess	opts . getValue ( ) . asRange . minVal		4936998	0					
ANR	4937080	MemberAccess	opts . getValue ( ) . asRange		4936998	0					
ANR	4937081	CallExpression	opts . getValue ( )		4936998	0					
ANR	4937082	Callee	opts . getValue		4936998	0					
ANR	4937083	MemberAccess	opts . getValue		4936998	0					
ANR	4937084	Identifier	opts		4936998	0					
ANR	4937085	Identifier	getValue		4936998	1					
ANR	4937086	ArgumentList			4936998	1					
ANR	4937087	Identifier	asRange		4936998	1					
ANR	4937088	Identifier	minVal		4936998	1					
ANR	4937089	Identifier	asInt		4936998	1					
ANR	4937090	Argument	opts . getValue ( ) . asRange . maxVal . asInt		4936998	4					
ANR	4937091	MemberAccess	opts . getValue ( ) . asRange . maxVal . asInt		4936998	0					
ANR	4937092	MemberAccess	opts . getValue ( ) . asRange . maxVal		4936998	0					
ANR	4937093	MemberAccess	opts . getValue ( ) . asRange		4936998	0					
ANR	4937094	CallExpression	opts . getValue ( )		4936998	0					
ANR	4937095	Callee	opts . getValue		4936998	0					
ANR	4937096	MemberAccess	opts . getValue		4936998	0					
ANR	4937097	Identifier	opts		4936998	0					
ANR	4937098	Identifier	getValue		4936998	1					
ANR	4937099	ArgumentList			4936998	1					
ANR	4937100	Identifier	asRange		4936998	1					
ANR	4937101	Identifier	maxVal		4936998	1					
ANR	4937102	Identifier	asInt		4936998	1					
ANR	4937103	ElseStatement	else		4936998	0					
ANR	4937104	CompoundStatement		16:6:377:377	4936998	0					
ANR	4937105	ExpressionStatement	ok = ( val == opts . getValue ( ) . asInt . asInt )	582:2:14412:14455	4936998	0	True				
ANR	4937106	AssignmentExpression	ok = ( val == opts . getValue ( ) . asInt . asInt )		4936998	0		=			
ANR	4937107	Identifier	ok		4936998	0					
ANR	4937108	EqualityExpression	val == opts . getValue ( ) . asInt . asInt		4936998	1		==			
ANR	4937109	Identifier	val		4936998	0					
ANR	4937110	MemberAccess	opts . getValue ( ) . asInt . asInt		4936998	1					
ANR	4937111	MemberAccess	opts . getValue ( ) . asInt		4936998	0					
ANR	4937112	CallExpression	opts . getValue ( )		4936998	0					
ANR	4937113	Callee	opts . getValue		4936998	0					
ANR	4937114	MemberAccess	opts . getValue		4936998	0					
ANR	4937115	Identifier	opts		4936998	0					
ANR	4937116	Identifier	getValue		4936998	1					
ANR	4937117	ArgumentList			4936998	1					
ANR	4937118	Identifier	asInt		4936998	1					
ANR	4937119	Identifier	asInt		4936998	1					
ANR	4937120	IfStatement	if ( ! ok && opts . getVerbose ( ) )		4936998	1					
ANR	4937121	Condition	! ok && opts . getVerbose ( )	583:7:14464:14487	4936998	0	True				
ANR	4937122	AndExpression	! ok && opts . getVerbose ( )		4936998	0		&&			
ANR	4937123	UnaryOperationExpression	! ok		4936998	0					
ANR	4937124	UnaryOperator	!		4936998	0					
ANR	4937125	Identifier	ok		4936998	1					
ANR	4937126	CallExpression	opts . getVerbose ( )		4936998	1					
ANR	4937127	Callee	opts . getVerbose		4936998	0					
ANR	4937128	MemberAccess	opts . getVerbose		4936998	0					
ANR	4937129	Identifier	opts		4936998	0					
ANR	4937130	Identifier	getVerbose		4936998	1					
ANR	4937131	ArgumentList			4936998	1					
ANR	4937132	CompoundStatement		18:34:460:460	4936998	1					
ANR	4937133	ExpressionStatement	"printf ( ""  %s: %d != %d\\n"" , opts . getField ( ) -> m_name , val , opts . getValue ( ) . asInt . asInt )"	584:3:14496:14598	4936998	0	True				
ANR	4937134	CallExpression	"printf ( ""  %s: %d != %d\\n"" , opts . getField ( ) -> m_name , val , opts . getValue ( ) . asInt . asInt )"		4936998	0					
ANR	4937135	Callee	printf		4936998	0					
ANR	4937136	Identifier	printf		4936998	0					
ANR	4937137	ArgumentList	"""  %s: %d != %d\\n"""		4936998	1					
ANR	4937138	Argument	"""  %s: %d != %d\\n"""		4936998	0					
ANR	4937139	PrimaryExpression	"""  %s: %d != %d\\n"""		4936998	0					
ANR	4937140	Argument	opts . getField ( ) -> m_name		4936998	1					
ANR	4937141	PtrMemberAccess	opts . getField ( ) -> m_name		4936998	0					
ANR	4937142	CallExpression	opts . getField ( )		4936998	0					
ANR	4937143	Callee	opts . getField		4936998	0					
ANR	4937144	MemberAccess	opts . getField		4936998	0					
ANR	4937145	Identifier	opts		4936998	0					
ANR	4937146	Identifier	getField		4936998	1					
ANR	4937147	ArgumentList			4936998	1					
ANR	4937148	Identifier	m_name		4936998	1					
ANR	4937149	Argument	val		4936998	2					
ANR	4937150	Identifier	val		4936998	0					
ANR	4937151	Argument	opts . getValue ( ) . asInt . asInt		4936998	3					
ANR	4937152	MemberAccess	opts . getValue ( ) . asInt . asInt		4936998	0					
ANR	4937153	MemberAccess	opts . getValue ( ) . asInt		4936998	0					
ANR	4937154	CallExpression	opts . getValue ( )		4936998	0					
ANR	4937155	Callee	opts . getValue		4936998	0					
ANR	4937156	MemberAccess	opts . getValue		4936998	0					
ANR	4937157	Identifier	opts		4936998	0					
ANR	4937158	Identifier	getValue		4936998	1					
ANR	4937159	ArgumentList			4936998	1					
ANR	4937160	Identifier	asInt		4936998	1					
ANR	4937161	Identifier	asInt		4936998	1					
ANR	4937162	ReturnStatement	return ok ;	591:1:14609:14618	4936998	2	True				
ANR	4937163	Identifier	ok		4936998	0					
ANR	4937164	ReturnType	bool		4936998	1					
ANR	4937165	Identifier	CompareInt		4936998	2					
ANR	4937166	ParameterList	"const Options & opts , int val"		4936998	3					
ANR	4937167	Parameter	const Options & opts	565:12:13999:14017	4936998	0	True				
ANR	4937168	ParameterType	const Options &		4936998	0					
ANR	4937169	Identifier	opts		4936998	1					
ANR	4937170	Parameter	int val	565:33:14020:14026	4936998	1	True				
ANR	4937171	ParameterType	int		4936998	0					
ANR	4937172	Identifier	val		4936998	1					
ANR	4937173	CFGEntryNode	ENTRY		4936998		True				
ANR	4937174	CFGExitNode	EXIT		4936998		True				
ANR	4937175	Symbol	val		4936998						
ANR	4937176	Symbol	opts . getValue ( ) . asRange . maxVal . asInt		4936998						
ANR	4937177	Symbol	opts . getValue ( ) . asInt		4936998						
ANR	4937178	Symbol	opts . getField		4936998						
ANR	4937179	Symbol	opts . getField ( ) -> m_name		4936998						
ANR	4937180	Symbol	opts		4936998						
ANR	4937181	Symbol	* opts . getField		4936998						
ANR	4937182	Symbol	* opts		4936998						
ANR	4937183	Symbol	opts . getValue		4936998						
ANR	4937184	Symbol	opts . getValue ( ) . asInt . asInt		4936998						
ANR	4937185	Symbol	opts . isValueRange		4936998						
ANR	4937186	Symbol	opts . getValue ( ) . asRange		4936998						
ANR	4937187	Symbol	opts . getValue ( ) . asRange . minVal . asInt		4936998						
ANR	4937188	Symbol	opts . getValue ( ) . asRange . minVal		4936998						
ANR	4937189	Symbol	ok		4936998						
ANR	4937190	Symbol	opts . getValue ( ) . asRange . maxVal		4936998						
ANR	4937191	Symbol	opts . getVerbose		4936998						
ANR	4937192	Function	CompareFsize	594:0:14623:15379							
ANR	4937193	FunctionDef	"CompareFsize (const Options & opts , filesize_t val)"		4937192	0					
ANR	4937194	CompoundStatement		596:0:14680:15379	4937192	0					
ANR	4937195	IdentifierDeclStatement	bool ok ;	597:1:14683:14690	4937192	0	True				
ANR	4937196	IdentifierDecl	ok		4937192	0					
ANR	4937197	IdentifierDeclType	bool		4937192	0					
ANR	4937198	Identifier	ok		4937192	1					
ANR	4937199	IfStatement	if ( opts . isValueRange ( ) )		4937192	1					
ANR	4937200	Condition	opts . isValueRange ( )	599:6:14699:14717	4937192	0	True				
ANR	4937201	CallExpression	opts . isValueRange ( )		4937192	0					
ANR	4937202	Callee	opts . isValueRange		4937192	0					
ANR	4937203	MemberAccess	opts . isValueRange		4937192	0					
ANR	4937204	Identifier	opts		4937192	0					
ANR	4937205	Identifier	isValueRange		4937192	1					
ANR	4937206	ArgumentList			4937192	1					
ANR	4937207	CompoundStatement		4:28:40:40	4937192	1					
ANR	4937208	ExpressionStatement	ok = ( ( val >= opts . getValue ( ) . asRange . minVal . asFsize ) && ( val <= opts . getValue ( ) . asRange . maxVal . asFsize ) )	600:2:14725:14842	4937192	0	True				
ANR	4937209	AssignmentExpression	ok = ( ( val >= opts . getValue ( ) . asRange . minVal . asFsize ) && ( val <= opts . getValue ( ) . asRange . maxVal . asFsize ) )		4937192	0		=			
ANR	4937210	Identifier	ok		4937192	0					
ANR	4937211	AndExpression	( val >= opts . getValue ( ) . asRange . minVal . asFsize ) && ( val <= opts . getValue ( ) . asRange . maxVal . asFsize )		4937192	1		&&			
ANR	4937212	RelationalExpression	val >= opts . getValue ( ) . asRange . minVal . asFsize		4937192	0		>=			
ANR	4937213	Identifier	val		4937192	0					
ANR	4937214	MemberAccess	opts . getValue ( ) . asRange . minVal . asFsize		4937192	1					
ANR	4937215	MemberAccess	opts . getValue ( ) . asRange . minVal		4937192	0					
ANR	4937216	MemberAccess	opts . getValue ( ) . asRange		4937192	0					
ANR	4937217	CallExpression	opts . getValue ( )		4937192	0					
ANR	4937218	Callee	opts . getValue		4937192	0					
ANR	4937219	MemberAccess	opts . getValue		4937192	0					
ANR	4937220	Identifier	opts		4937192	0					
ANR	4937221	Identifier	getValue		4937192	1					
ANR	4937222	ArgumentList			4937192	1					
ANR	4937223	Identifier	asRange		4937192	1					
ANR	4937224	Identifier	minVal		4937192	1					
ANR	4937225	Identifier	asFsize		4937192	1					
ANR	4937226	RelationalExpression	val <= opts . getValue ( ) . asRange . maxVal . asFsize		4937192	1		<=			
ANR	4937227	Identifier	val		4937192	0					
ANR	4937228	MemberAccess	opts . getValue ( ) . asRange . maxVal . asFsize		4937192	1					
ANR	4937229	MemberAccess	opts . getValue ( ) . asRange . maxVal		4937192	0					
ANR	4937230	MemberAccess	opts . getValue ( ) . asRange		4937192	0					
ANR	4937231	CallExpression	opts . getValue ( )		4937192	0					
ANR	4937232	Callee	opts . getValue		4937192	0					
ANR	4937233	MemberAccess	opts . getValue		4937192	0					
ANR	4937234	Identifier	opts		4937192	0					
ANR	4937235	Identifier	getValue		4937192	1					
ANR	4937236	ArgumentList			4937192	1					
ANR	4937237	Identifier	asRange		4937192	1					
ANR	4937238	Identifier	maxVal		4937192	1					
ANR	4937239	Identifier	asFsize		4937192	1					
ANR	4937240	IfStatement	if ( ! ok && opts . getVerbose ( ) )		4937192	1					
ANR	4937241	Condition	! ok && opts . getVerbose ( )	603:7:14852:14875	4937192	0	True				
ANR	4937242	AndExpression	! ok && opts . getVerbose ( )		4937192	0		&&			
ANR	4937243	UnaryOperationExpression	! ok		4937192	0					
ANR	4937244	UnaryOperator	!		4937192	0					
ANR	4937245	Identifier	ok		4937192	1					
ANR	4937246	CallExpression	opts . getVerbose ( )		4937192	1					
ANR	4937247	Callee	opts . getVerbose		4937192	0					
ANR	4937248	MemberAccess	opts . getVerbose		4937192	0					
ANR	4937249	Identifier	opts		4937192	0					
ANR	4937250	Identifier	getVerbose		4937192	1					
ANR	4937251	ArgumentList			4937192	1					
ANR	4937252	CompoundStatement		8:34:198:198	4937192	1					
ANR	4937253	Statement	printf	604:3:14884:14889	4937192	0	True				
ANR	4937254	Statement	(	604:9:14890:14890	4937192	1	True				
ANR	4937255	Statement	"""  %s: """	604:11:14892:14899	4937192	2	True				
ANR	4937256	Statement	FILESIZE_T_FORMAT	604:20:14901:14917	4937192	3	True				
ANR	4937257	Statement	"""not in """	605:5:14924:14932	4937192	4	True				
ANR	4937258	Statement	FILESIZE_T_FORMAT	605:15:14934:14950	4937192	5	True				
ANR	4937259	Statement	""" - """	605:33:14952:14956	4937192	6	True				
ANR	4937260	Statement	FILESIZE_T_FORMAT	605:39:14958:14974	4937192	7	True				
ANR	4937261	Statement	"""\\n"""	605:57:14976:14979	4937192	8	True				
ANR	4937262	Statement	","	605:61:14980:14980	4937192	9	True				
ANR	4937263	Statement	opts	606:5:14987:14990	4937192	10	True				
ANR	4937264	Statement	.	606:9:14991:14991	4937192	11	True				
ANR	4937265	Statement	getField	606:10:14992:14999	4937192	12	True				
ANR	4937266	Statement	(	606:18:15000:15000	4937192	13	True				
ANR	4937267	Statement	)	606:19:15001:15001	4937192	14	True				
ANR	4937268	Statement	->	606:20:15002:15003	4937192	15	True				
ANR	4937269	Statement	m_name	606:22:15004:15009	4937192	16	True				
ANR	4937270	Statement	","	606:28:15010:15010	4937192	17	True				
ANR	4937271	Statement	val	607:5:15017:15019	4937192	18	True				
ANR	4937272	Statement	","	607:8:15020:15020	4937192	19	True				
ANR	4937273	Statement	opts	608:5:15027:15030	4937192	20	True				
ANR	4937274	Statement	.	608:9:15031:15031	4937192	21	True				
ANR	4937275	Statement	getValue	608:10:15032:15039	4937192	22	True				
ANR	4937276	Statement	(	608:18:15040:15040	4937192	23	True				
ANR	4937277	Statement	)	608:19:15041:15041	4937192	24	True				
ANR	4937278	Statement	.	608:20:15042:15042	4937192	25	True				
ANR	4937279	Statement	asRange	608:21:15043:15049	4937192	26	True				
ANR	4937280	Statement	.	608:28:15050:15050	4937192	27	True				
ANR	4937281	Statement	minVal	608:29:15051:15056	4937192	28	True				
ANR	4937282	Statement	.	608:35:15057:15057	4937192	29	True				
ANR	4937283	Statement	asFsize	608:36:15058:15064	4937192	30	True				
ANR	4937284	Statement	","	608:43:15065:15065	4937192	31	True				
ANR	4937285	Statement	opts	609:5:15072:15075	4937192	32	True				
ANR	4937286	Statement	.	609:9:15076:15076	4937192	33	True				
ANR	4937287	Statement	getValue	609:10:15077:15084	4937192	34	True				
ANR	4937288	Statement	(	609:18:15085:15085	4937192	35	True				
ANR	4937289	Statement	)	609:19:15086:15086	4937192	36	True				
ANR	4937290	Statement	.	609:20:15087:15087	4937192	37	True				
ANR	4937291	Statement	asRange	609:21:15088:15094	4937192	38	True				
ANR	4937292	Statement	.	609:28:15095:15095	4937192	39	True				
ANR	4937293	Statement	maxVal	609:29:15096:15101	4937192	40	True				
ANR	4937294	Statement	.	609:35:15102:15102	4937192	41	True				
ANR	4937295	Statement	asFsize	609:36:15103:15109	4937192	42	True				
ANR	4937296	Statement	)	609:44:15111:15111	4937192	43	True				
ANR	4937297	ExpressionStatement		609:45:15112:15112	4937192	44	True				
ANR	4937298	ElseStatement	else		4937192	0					
ANR	4937299	CompoundStatement		17:6:446:446	4937192	0					
ANR	4937300	ExpressionStatement	ok = ( val == opts . getValue ( ) . asInt . asInt )	613:2:15131:15174	4937192	0	True				
ANR	4937301	AssignmentExpression	ok = ( val == opts . getValue ( ) . asInt . asInt )		4937192	0		=			
ANR	4937302	Identifier	ok		4937192	0					
ANR	4937303	EqualityExpression	val == opts . getValue ( ) . asInt . asInt		4937192	1		==			
ANR	4937304	Identifier	val		4937192	0					
ANR	4937305	MemberAccess	opts . getValue ( ) . asInt . asInt		4937192	1					
ANR	4937306	MemberAccess	opts . getValue ( ) . asInt		4937192	0					
ANR	4937307	CallExpression	opts . getValue ( )		4937192	0					
ANR	4937308	Callee	opts . getValue		4937192	0					
ANR	4937309	MemberAccess	opts . getValue		4937192	0					
ANR	4937310	Identifier	opts		4937192	0					
ANR	4937311	Identifier	getValue		4937192	1					
ANR	4937312	ArgumentList			4937192	1					
ANR	4937313	Identifier	asInt		4937192	1					
ANR	4937314	Identifier	asInt		4937192	1					
ANR	4937315	IfStatement	if ( ! ok && opts . getVerbose ( ) )		4937192	1					
ANR	4937316	Condition	! ok && opts . getVerbose ( )	614:7:15183:15206	4937192	0	True				
ANR	4937317	AndExpression	! ok && opts . getVerbose ( )		4937192	0		&&			
ANR	4937318	UnaryOperationExpression	! ok		4937192	0					
ANR	4937319	UnaryOperator	!		4937192	0					
ANR	4937320	Identifier	ok		4937192	1					
ANR	4937321	CallExpression	opts . getVerbose ( )		4937192	1					
ANR	4937322	Callee	opts . getVerbose		4937192	0					
ANR	4937323	MemberAccess	opts . getVerbose		4937192	0					
ANR	4937324	Identifier	opts		4937192	0					
ANR	4937325	Identifier	getVerbose		4937192	1					
ANR	4937326	ArgumentList			4937192	1					
ANR	4937327	CompoundStatement		19:34:529:529	4937192	1					
ANR	4937328	Statement	printf	615:3:15215:15220	4937192	0	True				
ANR	4937329	Statement	(	615:9:15221:15221	4937192	1	True				
ANR	4937330	Statement	"""  %s: """	615:11:15223:15230	4937192	2	True				
ANR	4937331	Statement	FILESIZE_T_FORMAT	615:20:15232:15248	4937192	3	True				
ANR	4937332	Statement	""" != """	615:38:15250:15255	4937192	4	True				
ANR	4937333	Statement	FILESIZE_T_FORMAT	615:45:15257:15273	4937192	5	True				
ANR	4937334	Statement	"""\\n"""	615:63:15275:15278	4937192	6	True				
ANR	4937335	Statement	","	615:67:15279:15279	4937192	7	True				
ANR	4937336	Statement	opts	616:5:15286:15289	4937192	8	True				
ANR	4937337	Statement	.	616:9:15290:15290	4937192	9	True				
ANR	4937338	Statement	getField	616:10:15291:15298	4937192	10	True				
ANR	4937339	Statement	(	616:18:15299:15299	4937192	11	True				
ANR	4937340	Statement	)	616:19:15300:15300	4937192	12	True				
ANR	4937341	Statement	->	616:20:15301:15302	4937192	13	True				
ANR	4937342	Statement	m_name	616:22:15303:15308	4937192	14	True				
ANR	4937343	Statement	","	616:28:15309:15309	4937192	15	True				
ANR	4937344	Statement	val	617:5:15316:15318	4937192	16	True				
ANR	4937345	Statement	","	617:8:15319:15319	4937192	17	True				
ANR	4937346	Statement	opts	618:5:15326:15329	4937192	18	True				
ANR	4937347	Statement	.	618:9:15330:15330	4937192	19	True				
ANR	4937348	Statement	getValue	618:10:15331:15338	4937192	20	True				
ANR	4937349	Statement	(	618:18:15339:15339	4937192	21	True				
ANR	4937350	Statement	)	618:19:15340:15340	4937192	22	True				
ANR	4937351	Statement	.	618:20:15341:15341	4937192	23	True				
ANR	4937352	Statement	asInt	618:21:15342:15346	4937192	24	True				
ANR	4937353	Statement	.	618:26:15347:15347	4937192	25	True				
ANR	4937354	Statement	asFsize	618:27:15348:15354	4937192	26	True				
ANR	4937355	Statement	)	618:35:15356:15356	4937192	27	True				
ANR	4937356	ExpressionStatement		618:36:15357:15357	4937192	28	True				
ANR	4937357	ReturnStatement	return ok ;	622:1:15368:15377	4937192	2	True				
ANR	4937358	Identifier	ok		4937192	0					
ANR	4937359	ReturnType	bool		4937192	1					
ANR	4937360	Identifier	CompareFsize		4937192	2					
ANR	4937361	ParameterList	"const Options & opts , filesize_t val"		4937192	3					
ANR	4937362	Parameter	const Options & opts	595:14:14642:14660	4937192	0	True				
ANR	4937363	ParameterType	const Options &		4937192	0					
ANR	4937364	Identifier	opts		4937192	1					
ANR	4937365	Parameter	filesize_t val	595:35:14663:14676	4937192	1	True				
ANR	4937366	ParameterType	filesize_t		4937192	0					
ANR	4937367	Identifier	val		4937192	1					
ANR	4937368	CFGEntryNode	ENTRY		4937192		True				
ANR	4937369	CFGExitNode	EXIT		4937192		True				
ANR	4937370	Symbol	val		4937192						
ANR	4937371	Symbol	opts . getValue ( ) . asInt		4937192						
ANR	4937372	Symbol	opts		4937192						
ANR	4937373	Symbol	opts . getValue		4937192						
ANR	4937374	Symbol	opts . getValue ( ) . asInt . asInt		4937192						
ANR	4937375	Symbol	opts . isValueRange		4937192						
ANR	4937376	Symbol	opts . getValue ( ) . asRange		4937192						
ANR	4937377	Symbol	opts . getValue ( ) . asRange . minVal		4937192						
ANR	4937378	Symbol	opts . getValue ( ) . asRange . maxVal . asFsize		4937192						
ANR	4937379	Symbol	ok		4937192						
ANR	4937380	Symbol	opts . getValue ( ) . asRange . minVal . asFsize		4937192						
ANR	4937381	Symbol	opts . getValue ( ) . asRange . maxVal		4937192						
ANR	4937382	Symbol	opts . getVerbose		4937192						
ANR	4937383	Function	CompareTime	625:0:15382:16709							
ANR	4937384	FunctionDef	"CompareTime (const Options & opts , time_t val)"		4937383	0					
ANR	4937385	CompoundStatement		627:0:15434:16709	4937383	0					
ANR	4937386	IdentifierDeclStatement	bool ok ;	628:1:15437:15444	4937383	0	True				
ANR	4937387	IdentifierDecl	ok		4937383	0					
ANR	4937388	IdentifierDeclType	bool		4937383	0					
ANR	4937389	Identifier	ok		4937383	1					
ANR	4937390	IdentifierDeclStatement	"char b1 [ 64 ] , b2 [ 64 ] , b3 [ 64 ] ;"	629:1:15447:15474	4937383	1	True				
ANR	4937391	IdentifierDecl	b1 [ 64 ]		4937383	0					
ANR	4937392	IdentifierDeclType	char [ 64 ]		4937383	0					
ANR	4937393	Identifier	b1		4937383	1					
ANR	4937394	PrimaryExpression	64		4937383	2					
ANR	4937395	IdentifierDecl	b2 [ 64 ]		4937383	1					
ANR	4937396	IdentifierDeclType	char [ 64 ]		4937383	0					
ANR	4937397	Identifier	b2		4937383	1					
ANR	4937398	PrimaryExpression	64		4937383	2					
ANR	4937399	IdentifierDecl	b3 [ 64 ]		4937383	2					
ANR	4937400	IdentifierDeclType	char [ 64 ]		4937383	0					
ANR	4937401	Identifier	b3		4937383	1					
ANR	4937402	PrimaryExpression	64		4937383	2					
ANR	4937403	IfStatement	if ( opts . isValueRange ( ) )		4937383	2					
ANR	4937404	Condition	opts . isValueRange ( )	631:6:15483:15501	4937383	0	True				
ANR	4937405	CallExpression	opts . isValueRange ( )		4937383	0					
ANR	4937406	Callee	opts . isValueRange		4937383	0					
ANR	4937407	MemberAccess	opts . isValueRange		4937383	0					
ANR	4937408	Identifier	opts		4937383	0					
ANR	4937409	Identifier	isValueRange		4937383	1					
ANR	4937410	ArgumentList			4937383	1					
ANR	4937411	CompoundStatement		5:28:70:70	4937383	1					
ANR	4937412	ExpressionStatement	ok = ( ( val >= opts . getValue ( ) . asRange . minVal . asTime ) && ( val <= opts . getValue ( ) . asRange . maxVal . asTime ) )	632:2:15509:15624	4937383	0	True				
ANR	4937413	AssignmentExpression	ok = ( ( val >= opts . getValue ( ) . asRange . minVal . asTime ) && ( val <= opts . getValue ( ) . asRange . maxVal . asTime ) )		4937383	0		=			
ANR	4937414	Identifier	ok		4937383	0					
ANR	4937415	AndExpression	( val >= opts . getValue ( ) . asRange . minVal . asTime ) && ( val <= opts . getValue ( ) . asRange . maxVal . asTime )		4937383	1		&&			
ANR	4937416	RelationalExpression	val >= opts . getValue ( ) . asRange . minVal . asTime		4937383	0		>=			
ANR	4937417	Identifier	val		4937383	0					
ANR	4937418	MemberAccess	opts . getValue ( ) . asRange . minVal . asTime		4937383	1					
ANR	4937419	MemberAccess	opts . getValue ( ) . asRange . minVal		4937383	0					
ANR	4937420	MemberAccess	opts . getValue ( ) . asRange		4937383	0					
ANR	4937421	CallExpression	opts . getValue ( )		4937383	0					
ANR	4937422	Callee	opts . getValue		4937383	0					
ANR	4937423	MemberAccess	opts . getValue		4937383	0					
ANR	4937424	Identifier	opts		4937383	0					
ANR	4937425	Identifier	getValue		4937383	1					
ANR	4937426	ArgumentList			4937383	1					
ANR	4937427	Identifier	asRange		4937383	1					
ANR	4937428	Identifier	minVal		4937383	1					
ANR	4937429	Identifier	asTime		4937383	1					
ANR	4937430	RelationalExpression	val <= opts . getValue ( ) . asRange . maxVal . asTime		4937383	1		<=			
ANR	4937431	Identifier	val		4937383	0					
ANR	4937432	MemberAccess	opts . getValue ( ) . asRange . maxVal . asTime		4937383	1					
ANR	4937433	MemberAccess	opts . getValue ( ) . asRange . maxVal		4937383	0					
ANR	4937434	MemberAccess	opts . getValue ( ) . asRange		4937383	0					
ANR	4937435	CallExpression	opts . getValue ( )		4937383	0					
ANR	4937436	Callee	opts . getValue		4937383	0					
ANR	4937437	MemberAccess	opts . getValue		4937383	0					
ANR	4937438	Identifier	opts		4937383	0					
ANR	4937439	Identifier	getValue		4937383	1					
ANR	4937440	ArgumentList			4937383	1					
ANR	4937441	Identifier	asRange		4937383	1					
ANR	4937442	Identifier	maxVal		4937383	1					
ANR	4937443	Identifier	asTime		4937383	1					
ANR	4937444	IfStatement	if ( ! ok && opts . getVerbose ( ) )		4937383	1					
ANR	4937445	Condition	! ok && opts . getVerbose ( )	635:7:15634:15657	4937383	0	True				
ANR	4937446	AndExpression	! ok && opts . getVerbose ( )		4937383	0		&&			
ANR	4937447	UnaryOperationExpression	! ok		4937383	0					
ANR	4937448	UnaryOperator	!		4937383	0					
ANR	4937449	Identifier	ok		4937383	1					
ANR	4937450	CallExpression	opts . getVerbose ( )		4937383	1					
ANR	4937451	Callee	opts . getVerbose		4937383	0					
ANR	4937452	MemberAccess	opts . getVerbose		4937383	0					
ANR	4937453	Identifier	opts		4937383	0					
ANR	4937454	Identifier	getVerbose		4937383	1					
ANR	4937455	ArgumentList			4937383	1					
ANR	4937456	CompoundStatement		9:34:226:226	4937383	1					
ANR	4937457	IfStatement	if ( opts . getNumeric ( ) )		4937383	0					
ANR	4937458	Condition	opts . getNumeric ( )	636:8:15671:15687	4937383	0	True				
ANR	4937459	CallExpression	opts . getNumeric ( )		4937383	0					
ANR	4937460	Callee	opts . getNumeric		4937383	0					
ANR	4937461	MemberAccess	opts . getNumeric		4937383	0					
ANR	4937462	Identifier	opts		4937383	0					
ANR	4937463	Identifier	getNumeric		4937383	1					
ANR	4937464	ArgumentList			4937383	1					
ANR	4937465	CompoundStatement		10:28:256:256	4937383	1					
ANR	4937466	ExpressionStatement	"printf ( ""  %s: %lu not in %lu - %lu\\n"" , opts . getField ( ) -> m_name , ( unsigned long ) val , ( unsigned long ) opts . getValue ( ) . asRange . minVal . asTime , ( unsigned long ) opts . getValue ( ) . asRange . maxVal . asTime )"	637:4:15697:15914	4937383	0	True				
ANR	4937467	CallExpression	"printf ( ""  %s: %lu not in %lu - %lu\\n"" , opts . getField ( ) -> m_name , ( unsigned long ) val , ( unsigned long ) opts . getValue ( ) . asRange . minVal . asTime , ( unsigned long ) opts . getValue ( ) . asRange . maxVal . asTime )"		4937383	0					
ANR	4937468	Callee	printf		4937383	0					
ANR	4937469	Identifier	printf		4937383	0					
ANR	4937470	ArgumentList	"""  %s: %lu not in %lu - %lu\\n"""		4937383	1					
ANR	4937471	Argument	"""  %s: %lu not in %lu - %lu\\n"""		4937383	0					
ANR	4937472	PrimaryExpression	"""  %s: %lu not in %lu - %lu\\n"""		4937383	0					
ANR	4937473	Argument	opts . getField ( ) -> m_name		4937383	1					
ANR	4937474	PtrMemberAccess	opts . getField ( ) -> m_name		4937383	0					
ANR	4937475	CallExpression	opts . getField ( )		4937383	0					
ANR	4937476	Callee	opts . getField		4937383	0					
ANR	4937477	MemberAccess	opts . getField		4937383	0					
ANR	4937478	Identifier	opts		4937383	0					
ANR	4937479	Identifier	getField		4937383	1					
ANR	4937480	ArgumentList			4937383	1					
ANR	4937481	Identifier	m_name		4937383	1					
ANR	4937482	Argument	( unsigned long ) val		4937383	2					
ANR	4937483	CastExpression	( unsigned long ) val		4937383	0					
ANR	4937484	CastTarget	unsigned long		4937383	0					
ANR	4937485	Identifier	val		4937383	1					
ANR	4937486	Argument	( unsigned long ) opts . getValue ( ) . asRange . minVal . asTime		4937383	3					
ANR	4937487	CastExpression	( unsigned long ) opts . getValue ( ) . asRange . minVal . asTime		4937383	0					
ANR	4937488	CastTarget	unsigned long		4937383	0					
ANR	4937489	MemberAccess	opts . getValue ( ) . asRange . minVal . asTime		4937383	1					
ANR	4937490	MemberAccess	opts . getValue ( ) . asRange . minVal		4937383	0					
ANR	4937491	MemberAccess	opts . getValue ( ) . asRange		4937383	0					
ANR	4937492	CallExpression	opts . getValue ( )		4937383	0					
ANR	4937493	Callee	opts . getValue		4937383	0					
ANR	4937494	MemberAccess	opts . getValue		4937383	0					
ANR	4937495	Identifier	opts		4937383	0					
ANR	4937496	Identifier	getValue		4937383	1					
ANR	4937497	ArgumentList			4937383	1					
ANR	4937498	Identifier	asRange		4937383	1					
ANR	4937499	Identifier	minVal		4937383	1					
ANR	4937500	Identifier	asTime		4937383	1					
ANR	4937501	Argument	( unsigned long ) opts . getValue ( ) . asRange . maxVal . asTime		4937383	4					
ANR	4937502	CastExpression	( unsigned long ) opts . getValue ( ) . asRange . maxVal . asTime		4937383	0					
ANR	4937503	CastTarget	unsigned long		4937383	0					
ANR	4937504	MemberAccess	opts . getValue ( ) . asRange . maxVal . asTime		4937383	1					
ANR	4937505	MemberAccess	opts . getValue ( ) . asRange . maxVal		4937383	0					
ANR	4937506	MemberAccess	opts . getValue ( ) . asRange		4937383	0					
ANR	4937507	CallExpression	opts . getValue ( )		4937383	0					
ANR	4937508	Callee	opts . getValue		4937383	0					
ANR	4937509	MemberAccess	opts . getValue		4937383	0					
ANR	4937510	Identifier	opts		4937383	0					
ANR	4937511	Identifier	getValue		4937383	1					
ANR	4937512	ArgumentList			4937383	1					
ANR	4937513	Identifier	asRange		4937383	1					
ANR	4937514	Identifier	maxVal		4937383	1					
ANR	4937515	Identifier	asTime		4937383	1					
ANR	4937516	ElseStatement	else		4937383	0					
ANR	4937517	CompoundStatement		17:8:494:494	4937383	0					
ANR	4937518	ExpressionStatement	"printf ( ""  %s: %s not in %s - %s\\n"" , opts . getField ( ) -> m_name , timestr ( val , b1 , sizeof ( b1 ) ) , timestr ( opts . getValue ( ) . asRange . minVal . asTime , b2 , sizeof ( b2 ) ) , timestr ( opts . getValue ( ) . asRange . maxVal . asTime , b3 , sizeof ( b3 ) ) )"	644:4:15935:16203	4937383	0	True				
ANR	4937519	CallExpression	"printf ( ""  %s: %s not in %s - %s\\n"" , opts . getField ( ) -> m_name , timestr ( val , b1 , sizeof ( b1 ) ) , timestr ( opts . getValue ( ) . asRange . minVal . asTime , b2 , sizeof ( b2 ) ) , timestr ( opts . getValue ( ) . asRange . maxVal . asTime , b3 , sizeof ( b3 ) ) )"		4937383	0					
ANR	4937520	Callee	printf		4937383	0					
ANR	4937521	Identifier	printf		4937383	0					
ANR	4937522	ArgumentList	"""  %s: %s not in %s - %s\\n"""		4937383	1					
ANR	4937523	Argument	"""  %s: %s not in %s - %s\\n"""		4937383	0					
ANR	4937524	PrimaryExpression	"""  %s: %s not in %s - %s\\n"""		4937383	0					
ANR	4937525	Argument	opts . getField ( ) -> m_name		4937383	1					
ANR	4937526	PtrMemberAccess	opts . getField ( ) -> m_name		4937383	0					
ANR	4937527	CallExpression	opts . getField ( )		4937383	0					
ANR	4937528	Callee	opts . getField		4937383	0					
ANR	4937529	MemberAccess	opts . getField		4937383	0					
ANR	4937530	Identifier	opts		4937383	0					
ANR	4937531	Identifier	getField		4937383	1					
ANR	4937532	ArgumentList			4937383	1					
ANR	4937533	Identifier	m_name		4937383	1					
ANR	4937534	Argument	"timestr ( val , b1 , sizeof ( b1 ) )"		4937383	2					
ANR	4937535	CallExpression	"timestr ( val , b1 , sizeof ( b1 ) )"		4937383	0					
ANR	4937536	Callee	timestr		4937383	0					
ANR	4937537	Identifier	timestr		4937383	0					
ANR	4937538	ArgumentList	val		4937383	1					
ANR	4937539	Argument	val		4937383	0					
ANR	4937540	Identifier	val		4937383	0					
ANR	4937541	Argument	b1		4937383	1					
ANR	4937542	Identifier	b1		4937383	0					
ANR	4937543	Argument	sizeof ( b1 )		4937383	2					
ANR	4937544	SizeofExpression	sizeof ( b1 )		4937383	0					
ANR	4937545	Sizeof	sizeof		4937383	0					
ANR	4937546	SizeofOperand	b1		4937383	1					
ANR	4937547	Argument	"timestr ( opts . getValue ( ) . asRange . minVal . asTime , b2 , sizeof ( b2 ) )"		4937383	3					
ANR	4937548	CallExpression	"timestr ( opts . getValue ( ) . asRange . minVal . asTime , b2 , sizeof ( b2 ) )"		4937383	0					
ANR	4937549	Callee	timestr		4937383	0					
ANR	4937550	Identifier	timestr		4937383	0					
ANR	4937551	ArgumentList	opts . getValue ( ) . asRange . minVal . asTime		4937383	1					
ANR	4937552	Argument	opts . getValue ( ) . asRange . minVal . asTime		4937383	0					
ANR	4937553	MemberAccess	opts . getValue ( ) . asRange . minVal . asTime		4937383	0					
ANR	4937554	MemberAccess	opts . getValue ( ) . asRange . minVal		4937383	0					
ANR	4937555	MemberAccess	opts . getValue ( ) . asRange		4937383	0					
ANR	4937556	CallExpression	opts . getValue ( )		4937383	0					
ANR	4937557	Callee	opts . getValue		4937383	0					
ANR	4937558	MemberAccess	opts . getValue		4937383	0					
ANR	4937559	Identifier	opts		4937383	0					
ANR	4937560	Identifier	getValue		4937383	1					
ANR	4937561	ArgumentList			4937383	1					
ANR	4937562	Identifier	asRange		4937383	1					
ANR	4937563	Identifier	minVal		4937383	1					
ANR	4937564	Identifier	asTime		4937383	1					
ANR	4937565	Argument	b2		4937383	1					
ANR	4937566	Identifier	b2		4937383	0					
ANR	4937567	Argument	sizeof ( b2 )		4937383	2					
ANR	4937568	SizeofExpression	sizeof ( b2 )		4937383	0					
ANR	4937569	Sizeof	sizeof		4937383	0					
ANR	4937570	SizeofOperand	b2		4937383	1					
ANR	4937571	Argument	"timestr ( opts . getValue ( ) . asRange . maxVal . asTime , b3 , sizeof ( b3 ) )"		4937383	4					
ANR	4937572	CallExpression	"timestr ( opts . getValue ( ) . asRange . maxVal . asTime , b3 , sizeof ( b3 ) )"		4937383	0					
ANR	4937573	Callee	timestr		4937383	0					
ANR	4937574	Identifier	timestr		4937383	0					
ANR	4937575	ArgumentList	opts . getValue ( ) . asRange . maxVal . asTime		4937383	1					
ANR	4937576	Argument	opts . getValue ( ) . asRange . maxVal . asTime		4937383	0					
ANR	4937577	MemberAccess	opts . getValue ( ) . asRange . maxVal . asTime		4937383	0					
ANR	4937578	MemberAccess	opts . getValue ( ) . asRange . maxVal		4937383	0					
ANR	4937579	MemberAccess	opts . getValue ( ) . asRange		4937383	0					
ANR	4937580	CallExpression	opts . getValue ( )		4937383	0					
ANR	4937581	Callee	opts . getValue		4937383	0					
ANR	4937582	MemberAccess	opts . getValue		4937383	0					
ANR	4937583	Identifier	opts		4937383	0					
ANR	4937584	Identifier	getValue		4937383	1					
ANR	4937585	ArgumentList			4937383	1					
ANR	4937586	Identifier	asRange		4937383	1					
ANR	4937587	Identifier	maxVal		4937383	1					
ANR	4937588	Identifier	asTime		4937383	1					
ANR	4937589	Argument	b3		4937383	1					
ANR	4937590	Identifier	b3		4937383	0					
ANR	4937591	Argument	sizeof ( b3 )		4937383	2					
ANR	4937592	SizeofExpression	sizeof ( b3 )		4937383	0					
ANR	4937593	Sizeof	sizeof		4937383	0					
ANR	4937594	SizeofOperand	b3		4937383	1					
ANR	4937595	ElseStatement	else		4937383	0					
ANR	4937596	CompoundStatement		28:6:788:788	4937383	0					
ANR	4937597	ExpressionStatement	ok = ( val == opts . getValue ( ) . asInt . asTime )	655:2:16227:16271	4937383	0	True				
ANR	4937598	AssignmentExpression	ok = ( val == opts . getValue ( ) . asInt . asTime )		4937383	0		=			
ANR	4937599	Identifier	ok		4937383	0					
ANR	4937600	EqualityExpression	val == opts . getValue ( ) . asInt . asTime		4937383	1		==			
ANR	4937601	Identifier	val		4937383	0					
ANR	4937602	MemberAccess	opts . getValue ( ) . asInt . asTime		4937383	1					
ANR	4937603	MemberAccess	opts . getValue ( ) . asInt		4937383	0					
ANR	4937604	CallExpression	opts . getValue ( )		4937383	0					
ANR	4937605	Callee	opts . getValue		4937383	0					
ANR	4937606	MemberAccess	opts . getValue		4937383	0					
ANR	4937607	Identifier	opts		4937383	0					
ANR	4937608	Identifier	getValue		4937383	1					
ANR	4937609	ArgumentList			4937383	1					
ANR	4937610	Identifier	asInt		4937383	1					
ANR	4937611	Identifier	asTime		4937383	1					
ANR	4937612	IfStatement	if ( ! ok && opts . getVerbose ( ) )		4937383	1					
ANR	4937613	Condition	! ok && opts . getVerbose ( )	656:7:16280:16303	4937383	0	True				
ANR	4937614	AndExpression	! ok && opts . getVerbose ( )		4937383	0		&&			
ANR	4937615	UnaryOperationExpression	! ok		4937383	0					
ANR	4937616	UnaryOperator	!		4937383	0					
ANR	4937617	Identifier	ok		4937383	1					
ANR	4937618	CallExpression	opts . getVerbose ( )		4937383	1					
ANR	4937619	Callee	opts . getVerbose		4937383	0					
ANR	4937620	MemberAccess	opts . getVerbose		4937383	0					
ANR	4937621	Identifier	opts		4937383	0					
ANR	4937622	Identifier	getVerbose		4937383	1					
ANR	4937623	ArgumentList			4937383	1					
ANR	4937624	CompoundStatement		30:34:872:872	4937383	1					
ANR	4937625	IfStatement	if ( opts . getNumeric ( ) )		4937383	0					
ANR	4937626	Condition	opts . getNumeric ( )	657:8:16317:16333	4937383	0	True				
ANR	4937627	CallExpression	opts . getNumeric ( )		4937383	0					
ANR	4937628	Callee	opts . getNumeric		4937383	0					
ANR	4937629	MemberAccess	opts . getNumeric		4937383	0					
ANR	4937630	Identifier	opts		4937383	0					
ANR	4937631	Identifier	getNumeric		4937383	1					
ANR	4937632	ArgumentList			4937383	1					
ANR	4937633	CompoundStatement		31:28:902:902	4937383	1					
ANR	4937634	ExpressionStatement	"printf ( ""  %s: %lu != %lu\\n"" , opts . getField ( ) -> m_name , ( unsigned long ) val , ( unsigned long ) opts . getValue ( ) . asInt . asTime )"	658:4:16343:16483	4937383	0	True				
ANR	4937635	CallExpression	"printf ( ""  %s: %lu != %lu\\n"" , opts . getField ( ) -> m_name , ( unsigned long ) val , ( unsigned long ) opts . getValue ( ) . asInt . asTime )"		4937383	0					
ANR	4937636	Callee	printf		4937383	0					
ANR	4937637	Identifier	printf		4937383	0					
ANR	4937638	ArgumentList	"""  %s: %lu != %lu\\n"""		4937383	1					
ANR	4937639	Argument	"""  %s: %lu != %lu\\n"""		4937383	0					
ANR	4937640	PrimaryExpression	"""  %s: %lu != %lu\\n"""		4937383	0					
ANR	4937641	Argument	opts . getField ( ) -> m_name		4937383	1					
ANR	4937642	PtrMemberAccess	opts . getField ( ) -> m_name		4937383	0					
ANR	4937643	CallExpression	opts . getField ( )		4937383	0					
ANR	4937644	Callee	opts . getField		4937383	0					
ANR	4937645	MemberAccess	opts . getField		4937383	0					
ANR	4937646	Identifier	opts		4937383	0					
ANR	4937647	Identifier	getField		4937383	1					
ANR	4937648	ArgumentList			4937383	1					
ANR	4937649	Identifier	m_name		4937383	1					
ANR	4937650	Argument	( unsigned long ) val		4937383	2					
ANR	4937651	CastExpression	( unsigned long ) val		4937383	0					
ANR	4937652	CastTarget	unsigned long		4937383	0					
ANR	4937653	Identifier	val		4937383	1					
ANR	4937654	Argument	( unsigned long ) opts . getValue ( ) . asInt . asTime		4937383	3					
ANR	4937655	CastExpression	( unsigned long ) opts . getValue ( ) . asInt . asTime		4937383	0					
ANR	4937656	CastTarget	unsigned long		4937383	0					
ANR	4937657	MemberAccess	opts . getValue ( ) . asInt . asTime		4937383	1					
ANR	4937658	MemberAccess	opts . getValue ( ) . asInt		4937383	0					
ANR	4937659	CallExpression	opts . getValue ( )		4937383	0					
ANR	4937660	Callee	opts . getValue		4937383	0					
ANR	4937661	MemberAccess	opts . getValue		4937383	0					
ANR	4937662	Identifier	opts		4937383	0					
ANR	4937663	Identifier	getValue		4937383	1					
ANR	4937664	ArgumentList			4937383	1					
ANR	4937665	Identifier	asInt		4937383	1					
ANR	4937666	Identifier	asTime		4937383	1					
ANR	4937667	ElseStatement	else		4937383	0					
ANR	4937668	CompoundStatement		37:8:1063:1063	4937383	0					
ANR	4937669	ExpressionStatement	"printf ( ""  %s: %s != %s\\n"" , opts . getField ( ) -> m_name , timestr ( val , b1 , sizeof ( b1 ) ) , timestr ( opts . getValue ( ) . asRange . minVal . asTime , b2 , sizeof ( b2 ) ) )"	664:4:16504:16682	4937383	0	True				
ANR	4937670	CallExpression	"printf ( ""  %s: %s != %s\\n"" , opts . getField ( ) -> m_name , timestr ( val , b1 , sizeof ( b1 ) ) , timestr ( opts . getValue ( ) . asRange . minVal . asTime , b2 , sizeof ( b2 ) ) )"		4937383	0					
ANR	4937671	Callee	printf		4937383	0					
ANR	4937672	Identifier	printf		4937383	0					
ANR	4937673	ArgumentList	"""  %s: %s != %s\\n"""		4937383	1					
ANR	4937674	Argument	"""  %s: %s != %s\\n"""		4937383	0					
ANR	4937675	PrimaryExpression	"""  %s: %s != %s\\n"""		4937383	0					
ANR	4937676	Argument	opts . getField ( ) -> m_name		4937383	1					
ANR	4937677	PtrMemberAccess	opts . getField ( ) -> m_name		4937383	0					
ANR	4937678	CallExpression	opts . getField ( )		4937383	0					
ANR	4937679	Callee	opts . getField		4937383	0					
ANR	4937680	MemberAccess	opts . getField		4937383	0					
ANR	4937681	Identifier	opts		4937383	0					
ANR	4937682	Identifier	getField		4937383	1					
ANR	4937683	ArgumentList			4937383	1					
ANR	4937684	Identifier	m_name		4937383	1					
ANR	4937685	Argument	"timestr ( val , b1 , sizeof ( b1 ) )"		4937383	2					
ANR	4937686	CallExpression	"timestr ( val , b1 , sizeof ( b1 ) )"		4937383	0					
ANR	4937687	Callee	timestr		4937383	0					
ANR	4937688	Identifier	timestr		4937383	0					
ANR	4937689	ArgumentList	val		4937383	1					
ANR	4937690	Argument	val		4937383	0					
ANR	4937691	Identifier	val		4937383	0					
ANR	4937692	Argument	b1		4937383	1					
ANR	4937693	Identifier	b1		4937383	0					
ANR	4937694	Argument	sizeof ( b1 )		4937383	2					
ANR	4937695	SizeofExpression	sizeof ( b1 )		4937383	0					
ANR	4937696	Sizeof	sizeof		4937383	0					
ANR	4937697	SizeofOperand	b1		4937383	1					
ANR	4937698	Argument	"timestr ( opts . getValue ( ) . asRange . minVal . asTime , b2 , sizeof ( b2 ) )"		4937383	3					
ANR	4937699	CallExpression	"timestr ( opts . getValue ( ) . asRange . minVal . asTime , b2 , sizeof ( b2 ) )"		4937383	0					
ANR	4937700	Callee	timestr		4937383	0					
ANR	4937701	Identifier	timestr		4937383	0					
ANR	4937702	ArgumentList	opts . getValue ( ) . asRange . minVal . asTime		4937383	1					
ANR	4937703	Argument	opts . getValue ( ) . asRange . minVal . asTime		4937383	0					
ANR	4937704	MemberAccess	opts . getValue ( ) . asRange . minVal . asTime		4937383	0					
ANR	4937705	MemberAccess	opts . getValue ( ) . asRange . minVal		4937383	0					
ANR	4937706	MemberAccess	opts . getValue ( ) . asRange		4937383	0					
ANR	4937707	CallExpression	opts . getValue ( )		4937383	0					
ANR	4937708	Callee	opts . getValue		4937383	0					
ANR	4937709	MemberAccess	opts . getValue		4937383	0					
ANR	4937710	Identifier	opts		4937383	0					
ANR	4937711	Identifier	getValue		4937383	1					
ANR	4937712	ArgumentList			4937383	1					
ANR	4937713	Identifier	asRange		4937383	1					
ANR	4937714	Identifier	minVal		4937383	1					
ANR	4937715	Identifier	asTime		4937383	1					
ANR	4937716	Argument	b2		4937383	1					
ANR	4937717	Identifier	b2		4937383	0					
ANR	4937718	Argument	sizeof ( b2 )		4937383	2					
ANR	4937719	SizeofExpression	sizeof ( b2 )		4937383	0					
ANR	4937720	Sizeof	sizeof		4937383	0					
ANR	4937721	SizeofOperand	b2		4937383	1					
ANR	4937722	ReturnStatement	return ok ;	673:1:16698:16707	4937383	3	True				
ANR	4937723	Identifier	ok		4937383	0					
ANR	4937724	ReturnType	bool		4937383	1					
ANR	4937725	Identifier	CompareTime		4937383	2					
ANR	4937726	ParameterList	"const Options & opts , time_t val"		4937383	3					
ANR	4937727	Parameter	const Options & opts	626:13:15400:15418	4937383	0	True				
ANR	4937728	ParameterType	const Options &		4937383	0					
ANR	4937729	Identifier	opts		4937383	1					
ANR	4937730	Parameter	time_t val	626:34:15421:15430	4937383	1	True				
ANR	4937731	ParameterType	time_t		4937383	0					
ANR	4937732	Identifier	val		4937383	1					
ANR	4937733	CFGEntryNode	ENTRY		4937383		True				
ANR	4937734	CFGExitNode	EXIT		4937383		True				
ANR	4937735	Symbol	val		4937383						
ANR	4937736	Symbol	opts . getValue ( ) . asRange . minVal . asTime		4937383						
ANR	4937737	Symbol	opts . getValue ( ) . asInt		4937383						
ANR	4937738	Symbol	timestr		4937383						
ANR	4937739	Symbol	opts . getField ( ) -> m_name		4937383						
ANR	4937740	Symbol	opts . getField		4937383						
ANR	4937741	Symbol	opts . getValue ( ) . asRange . maxVal . asTime		4937383						
ANR	4937742	Symbol	b1		4937383						
ANR	4937743	Symbol	b2		4937383						
ANR	4937744	Symbol	b3		4937383						
ANR	4937745	Symbol	opts . getNumeric		4937383						
ANR	4937746	Symbol	opts		4937383						
ANR	4937747	Symbol	* opts		4937383						
ANR	4937748	Symbol	* opts . getField		4937383						
ANR	4937749	Symbol	opts . getValue		4937383						
ANR	4937750	Symbol	opts . isValueRange		4937383						
ANR	4937751	Symbol	opts . getValue ( ) . asRange		4937383						
ANR	4937752	Symbol	opts . getValue ( ) . asInt . asTime		4937383						
ANR	4937753	Symbol	opts . getValue ( ) . asRange . minVal		4937383						
ANR	4937754	Symbol	ok		4937383						
ANR	4937755	Symbol	opts . getValue ( ) . asRange . maxVal		4937383						
ANR	4937756	Symbol	opts . getVerbose		4937383						
ANR	4937757	Function	CompareInode	676:0:16712:17013							
ANR	4937758	FunctionDef	"CompareInode (const Options & opts , StatStructInode val)"		4937757	0					
ANR	4937759	CompoundStatement		678:0:16774:17013	4937757	0					
ANR	4937760	IdentifierDeclStatement	bool ok ;	679:1:16777:16784	4937757	0	True				
ANR	4937761	IdentifierDecl	ok		4937757	0					
ANR	4937762	IdentifierDeclType	bool		4937757	0					
ANR	4937763	Identifier	ok		4937757	1					
ANR	4937764	ExpressionStatement	ok = val == opts . getValue ( ) . asInode	681:1:16788:16823	4937757	1	True				
ANR	4937765	AssignmentExpression	ok = val == opts . getValue ( ) . asInode		4937757	0		=			
ANR	4937766	Identifier	ok		4937757	0					
ANR	4937767	EqualityExpression	val == opts . getValue ( ) . asInode		4937757	1		==			
ANR	4937768	Identifier	val		4937757	0					
ANR	4937769	MemberAccess	opts . getValue ( ) . asInode		4937757	1					
ANR	4937770	CallExpression	opts . getValue ( )		4937757	0					
ANR	4937771	Callee	opts . getValue		4937757	0					
ANR	4937772	MemberAccess	opts . getValue		4937757	0					
ANR	4937773	Identifier	opts		4937757	0					
ANR	4937774	Identifier	getValue		4937757	1					
ANR	4937775	ArgumentList			4937757	1					
ANR	4937776	Identifier	asInode		4937757	1					
ANR	4937777	IfStatement	if ( ! ok && opts . getVerbose ( ) )		4937757	2					
ANR	4937778	Condition	! ok && opts . getVerbose ( )	682:6:16831:16854	4937757	0	True				
ANR	4937779	AndExpression	! ok && opts . getVerbose ( )		4937757	0		&&			
ANR	4937780	UnaryOperationExpression	! ok		4937757	0					
ANR	4937781	UnaryOperator	!		4937757	0					
ANR	4937782	Identifier	ok		4937757	1					
ANR	4937783	CallExpression	opts . getVerbose ( )		4937757	1					
ANR	4937784	Callee	opts . getVerbose		4937757	0					
ANR	4937785	MemberAccess	opts . getVerbose		4937757	0					
ANR	4937786	Identifier	opts		4937757	0					
ANR	4937787	Identifier	getVerbose		4937757	1					
ANR	4937788	ArgumentList			4937757	1					
ANR	4937789	CompoundStatement		5:33:83:83	4937757	1					
ANR	4937790	ExpressionStatement	"printf ( ""  %s: %lu != %lu\\n"" , opts . getField ( ) -> m_name , ( unsigned long ) val , ( unsigned long ) opts . getValue ( ) . asInode )"	683:3:16863:16995	4937757	0	True				
ANR	4937791	CallExpression	"printf ( ""  %s: %lu != %lu\\n"" , opts . getField ( ) -> m_name , ( unsigned long ) val , ( unsigned long ) opts . getValue ( ) . asInode )"		4937757	0					
ANR	4937792	Callee	printf		4937757	0					
ANR	4937793	Identifier	printf		4937757	0					
ANR	4937794	ArgumentList	"""  %s: %lu != %lu\\n"""		4937757	1					
ANR	4937795	Argument	"""  %s: %lu != %lu\\n"""		4937757	0					
ANR	4937796	PrimaryExpression	"""  %s: %lu != %lu\\n"""		4937757	0					
ANR	4937797	Argument	opts . getField ( ) -> m_name		4937757	1					
ANR	4937798	PtrMemberAccess	opts . getField ( ) -> m_name		4937757	0					
ANR	4937799	CallExpression	opts . getField ( )		4937757	0					
ANR	4937800	Callee	opts . getField		4937757	0					
ANR	4937801	MemberAccess	opts . getField		4937757	0					
ANR	4937802	Identifier	opts		4937757	0					
ANR	4937803	Identifier	getField		4937757	1					
ANR	4937804	ArgumentList			4937757	1					
ANR	4937805	Identifier	m_name		4937757	1					
ANR	4937806	Argument	( unsigned long ) val		4937757	2					
ANR	4937807	CastExpression	( unsigned long ) val		4937757	0					
ANR	4937808	CastTarget	unsigned long		4937757	0					
ANR	4937809	Identifier	val		4937757	1					
ANR	4937810	Argument	( unsigned long ) opts . getValue ( ) . asInode		4937757	3					
ANR	4937811	CastExpression	( unsigned long ) opts . getValue ( ) . asInode		4937757	0					
ANR	4937812	CastTarget	unsigned long		4937757	0					
ANR	4937813	MemberAccess	opts . getValue ( ) . asInode		4937757	1					
ANR	4937814	CallExpression	opts . getValue ( )		4937757	0					
ANR	4937815	Callee	opts . getValue		4937757	0					
ANR	4937816	MemberAccess	opts . getValue		4937757	0					
ANR	4937817	Identifier	opts		4937757	0					
ANR	4937818	Identifier	getValue		4937757	1					
ANR	4937819	ArgumentList			4937757	1					
ANR	4937820	Identifier	asInode		4937757	1					
ANR	4937821	ReturnStatement	return ok ;	689:1:17002:17011	4937757	3	True				
ANR	4937822	Identifier	ok		4937757	0					
ANR	4937823	ReturnType	bool		4937757	1					
ANR	4937824	Identifier	CompareInode		4937757	2					
ANR	4937825	ParameterList	"const Options & opts , StatStructInode val"		4937757	3					
ANR	4937826	Parameter	const Options & opts	677:14:16731:16749	4937757	0	True				
ANR	4937827	ParameterType	const Options &		4937757	0					
ANR	4937828	Identifier	opts		4937757	1					
ANR	4937829	Parameter	StatStructInode val	677:35:16752:16770	4937757	1	True				
ANR	4937830	ParameterType	StatStructInode		4937757	0					
ANR	4937831	Identifier	val		4937757	1					
ANR	4937832	CFGEntryNode	ENTRY		4937757		True				
ANR	4937833	CFGExitNode	EXIT		4937757		True				
ANR	4937834	Symbol	val		4937757						
ANR	4937835	Symbol	opts . getValue ( ) . asInode		4937757						
ANR	4937836	Symbol	opts		4937757						
ANR	4937837	Symbol	* opts . getField		4937757						
ANR	4937838	Symbol	* opts		4937757						
ANR	4937839	Symbol	opts . getValue		4937757						
ANR	4937840	Symbol	ok		4937757						
ANR	4937841	Symbol	opts . getField ( ) -> m_name		4937757						
ANR	4937842	Symbol	opts . getField		4937757						
ANR	4937843	Symbol	opts . getVerbose		4937757						
ANR	4937844	Function	VerifyState	692:0:17016:18767							
ANR	4937845	FunctionDef	"VerifyState (const Options & opts , const ReadUserLog :: FileState & state)"		4937844	0					
ANR	4937846	CompoundStatement		694:0:17091:18767	4937844	0					
ANR	4937847	IdentifierDeclStatement	"ReadUserLogState rstate ( state , 60 ) ;"	695:1:17094:17130	4937844	0	True				
ANR	4937848	IdentifierDecl	"rstate ( state , 60 )"		4937844	0					
ANR	4937849	IdentifierDeclType	ReadUserLogState		4937844	0					
ANR	4937850	Identifier	rstate		4937844	1					
ANR	4937851	Expression	"state , 60"		4937844	2					
ANR	4937852	Identifier	state		4937844	0					
ANR	4937853	PrimaryExpression	60		4937844	1					
ANR	4937854	IdentifierDeclStatement	const ReadUserLogState :: FileState * istate ;	696:1:17133:17174	4937844	1	True				
ANR	4937855	IdentifierDecl	* istate		4937844	0					
ANR	4937856	IdentifierDeclType	const ReadUserLogState :: FileState *		4937844	0					
ANR	4937857	Identifier	istate		4937844	1					
ANR	4937858	ExpressionStatement	"ReadUserLogState :: convertState ( state , istate )"	697:1:17177:17224	4937844	2	True				
ANR	4937859	CallExpression	"ReadUserLogState :: convertState ( state , istate )"		4937844	0					
ANR	4937860	Callee	ReadUserLogState :: convertState		4937844	0					
ANR	4937861	Identifier	ReadUserLogState :: convertState		4937844	0					
ANR	4937862	ArgumentList	state		4937844	1					
ANR	4937863	Argument	state		4937844	0					
ANR	4937864	Identifier	state		4937844	0					
ANR	4937865	Argument	istate		4937844	1					
ANR	4937866	Identifier	istate		4937844	0					
ANR	4937867	IdentifierDeclStatement	const FieldData * wdata = opts . getField ( ) ;	699:1:17228:17269	4937844	3	True				
ANR	4937868	IdentifierDecl	* wdata = opts . getField ( )		4937844	0					
ANR	4937869	IdentifierDeclType	const FieldData *		4937844	0					
ANR	4937870	Identifier	wdata		4937844	1					
ANR	4937871	AssignmentExpression	* wdata = opts . getField ( )		4937844	2		=			
ANR	4937872	Identifier	wdata		4937844	0					
ANR	4937873	CallExpression	opts . getField ( )		4937844	1					
ANR	4937874	Callee	opts . getField		4937844	0					
ANR	4937875	MemberAccess	opts . getField		4937844	0					
ANR	4937876	Identifier	opts		4937844	0					
ANR	4937877	Identifier	getField		4937844	1					
ANR	4937878	ArgumentList			4937844	1					
ANR	4937879	IfStatement	if ( wdata == NULL )		4937844	4					
ANR	4937880	Condition	wdata == NULL	700:6:17277:17289	4937844	0	True				
ANR	4937881	EqualityExpression	wdata == NULL		4937844	0		==			
ANR	4937882	Identifier	wdata		4937844	0					
ANR	4937883	Identifier	NULL		4937844	1					
ANR	4937884	CompoundStatement		7:22:201:201	4937844	1					
ANR	4937885	ExpressionStatement	"fprintf ( stderr , ""Verify: no field!\\n"" )"	701:2:17297:17337	4937844	0	True				
ANR	4937886	CallExpression	"fprintf ( stderr , ""Verify: no field!\\n"" )"		4937844	0					
ANR	4937887	Callee	fprintf		4937844	0					
ANR	4937888	Identifier	fprintf		4937844	0					
ANR	4937889	ArgumentList	stderr		4937844	1					
ANR	4937890	Argument	stderr		4937844	0					
ANR	4937891	Identifier	stderr		4937844	0					
ANR	4937892	Argument	"""Verify: no field!\\n"""		4937844	1					
ANR	4937893	PrimaryExpression	"""Verify: no field!\\n"""		4937844	0					
ANR	4937894	ReturnStatement	return - 1 ;	702:2:17341:17350	4937844	1	True				
ANR	4937895	UnaryOperationExpression	- 1		4937844	0					
ANR	4937896	UnaryOperator	-		4937844	0					
ANR	4937897	PrimaryExpression	1		4937844	1					
ANR	4937898	IdentifierDeclStatement	bool ok ;	705:1:17357:17364	4937844	5	True				
ANR	4937899	IdentifierDecl	ok		4937844	0					
ANR	4937900	IdentifierDeclType	bool		4937844	0					
ANR	4937901	Identifier	ok		4937844	1					
ANR	4937902	SwitchStatement	switch ( wdata -> m_field )		4937844	6					
ANR	4937903	Condition	wdata -> m_field	706:9:17375:17388	4937844	0	True				
ANR	4937904	PtrMemberAccess	wdata -> m_field		4937844	0					
ANR	4937905	Identifier	wdata		4937844	0					
ANR	4937906	Identifier	m_field		4937844	1					
ANR	4937907	CompoundStatement		14:1:301:301	4937844	1					
ANR	4937908	Label	case FIELD_SIGNATURE :	708:1:17396:17416	4937844	0	True				
ANR	4937909	Identifier	FIELD_SIGNATURE		4937844	0					
ANR	4937910	ExpressionStatement	"ok = CompareStr ( opts , istate -> m_signature )"	709:2:17420:17464	4937844	1	True				
ANR	4937911	AssignmentExpression	"ok = CompareStr ( opts , istate -> m_signature )"		4937844	0		=			
ANR	4937912	Identifier	ok		4937844	0					
ANR	4937913	CallExpression	"CompareStr ( opts , istate -> m_signature )"		4937844	1					
ANR	4937914	Callee	CompareStr		4937844	0					
ANR	4937915	Identifier	CompareStr		4937844	0					
ANR	4937916	ArgumentList	opts		4937844	1					
ANR	4937917	Argument	opts		4937844	0					
ANR	4937918	Identifier	opts		4937844	0					
ANR	4937919	Argument	istate -> m_signature		4937844	1					
ANR	4937920	PtrMemberAccess	istate -> m_signature		4937844	0					
ANR	4937921	Identifier	istate		4937844	0					
ANR	4937922	Identifier	m_signature		4937844	1					
ANR	4937923	BreakStatement	break ;	710:2:17468:17473	4937844	2	True				
ANR	4937924	Label	case FIELD_VERSION :	712:1:17477:17495	4937844	3	True				
ANR	4937925	Identifier	FIELD_VERSION		4937844	0					
ANR	4937926	ExpressionStatement	"ok = CompareInt ( opts , istate -> m_version )"	713:2:17499:17541	4937844	4	True				
ANR	4937927	AssignmentExpression	"ok = CompareInt ( opts , istate -> m_version )"		4937844	0		=			
ANR	4937928	Identifier	ok		4937844	0					
ANR	4937929	CallExpression	"CompareInt ( opts , istate -> m_version )"		4937844	1					
ANR	4937930	Callee	CompareInt		4937844	0					
ANR	4937931	Identifier	CompareInt		4937844	0					
ANR	4937932	ArgumentList	opts		4937844	1					
ANR	4937933	Argument	opts		4937844	0					
ANR	4937934	Identifier	opts		4937844	0					
ANR	4937935	Argument	istate -> m_version		4937844	1					
ANR	4937936	PtrMemberAccess	istate -> m_version		4937844	0					
ANR	4937937	Identifier	istate		4937844	0					
ANR	4937938	Identifier	m_version		4937844	1					
ANR	4937939	BreakStatement	break ;	714:2:17545:17550	4937844	5	True				
ANR	4937940	Label	case FIELD_UPDATE_TIME :	716:1:17554:17576	4937844	6	True				
ANR	4937941	Identifier	FIELD_UPDATE_TIME		4937844	0					
ANR	4937942	ExpressionStatement	"ok = CompareTime ( opts , istate -> m_update_time )"	717:2:17580:17627	4937844	7	True				
ANR	4937943	AssignmentExpression	"ok = CompareTime ( opts , istate -> m_update_time )"		4937844	0		=			
ANR	4937944	Identifier	ok		4937844	0					
ANR	4937945	CallExpression	"CompareTime ( opts , istate -> m_update_time )"		4937844	1					
ANR	4937946	Callee	CompareTime		4937844	0					
ANR	4937947	Identifier	CompareTime		4937844	0					
ANR	4937948	ArgumentList	opts		4937844	1					
ANR	4937949	Argument	opts		4937844	0					
ANR	4937950	Identifier	opts		4937844	0					
ANR	4937951	Argument	istate -> m_update_time		4937844	1					
ANR	4937952	PtrMemberAccess	istate -> m_update_time		4937844	0					
ANR	4937953	Identifier	istate		4937844	0					
ANR	4937954	Identifier	m_update_time		4937844	1					
ANR	4937955	BreakStatement	break ;	718:2:17631:17636	4937844	8	True				
ANR	4937956	Label	case FIELD_BASE_PATH :	720:1:17640:17660	4937844	9	True				
ANR	4937957	Identifier	FIELD_BASE_PATH		4937844	0					
ANR	4937958	ExpressionStatement	"ok = CompareStr ( opts , istate -> m_base_path )"	721:2:17664:17708	4937844	10	True				
ANR	4937959	AssignmentExpression	"ok = CompareStr ( opts , istate -> m_base_path )"		4937844	0		=			
ANR	4937960	Identifier	ok		4937844	0					
ANR	4937961	CallExpression	"CompareStr ( opts , istate -> m_base_path )"		4937844	1					
ANR	4937962	Callee	CompareStr		4937844	0					
ANR	4937963	Identifier	CompareStr		4937844	0					
ANR	4937964	ArgumentList	opts		4937844	1					
ANR	4937965	Argument	opts		4937844	0					
ANR	4937966	Identifier	opts		4937844	0					
ANR	4937967	Argument	istate -> m_base_path		4937844	1					
ANR	4937968	PtrMemberAccess	istate -> m_base_path		4937844	0					
ANR	4937969	Identifier	istate		4937844	0					
ANR	4937970	Identifier	m_base_path		4937844	1					
ANR	4937971	BreakStatement	break ;	722:2:17712:17717	4937844	11	True				
ANR	4937972	Label	case FIELD_CUR_PATH :	724:1:17721:17740	4937844	12	True				
ANR	4937973	Identifier	FIELD_CUR_PATH		4937844	0					
ANR	4937974	ExpressionStatement	"ok = CompareStr ( opts , rstate . CurPath ( state ) )"	725:2:17744:17790	4937844	13	True				
ANR	4937975	AssignmentExpression	"ok = CompareStr ( opts , rstate . CurPath ( state ) )"		4937844	0		=			
ANR	4937976	Identifier	ok		4937844	0					
ANR	4937977	CallExpression	"CompareStr ( opts , rstate . CurPath ( state ) )"		4937844	1					
ANR	4937978	Callee	CompareStr		4937844	0					
ANR	4937979	Identifier	CompareStr		4937844	0					
ANR	4937980	ArgumentList	opts		4937844	1					
ANR	4937981	Argument	opts		4937844	0					
ANR	4937982	Identifier	opts		4937844	0					
ANR	4937983	Argument	rstate . CurPath ( state )		4937844	1					
ANR	4937984	CallExpression	rstate . CurPath ( state )		4937844	0					
ANR	4937985	Callee	rstate . CurPath		4937844	0					
ANR	4937986	MemberAccess	rstate . CurPath		4937844	0					
ANR	4937987	Identifier	rstate		4937844	0					
ANR	4937988	Identifier	CurPath		4937844	1					
ANR	4937989	ArgumentList	state		4937844	1					
ANR	4937990	Argument	state		4937844	0					
ANR	4937991	Identifier	state		4937844	0					
ANR	4937992	BreakStatement	break ;	726:2:17794:17799	4937844	14	True				
ANR	4937993	Label	case FIELD_UNIQ_ID :	728:1:17803:17821	4937844	15	True				
ANR	4937994	Identifier	FIELD_UNIQ_ID		4937844	0					
ANR	4937995	ExpressionStatement	"ok = CompareStr ( opts , istate -> m_uniq_id )"	729:2:17825:17867	4937844	16	True				
ANR	4937996	AssignmentExpression	"ok = CompareStr ( opts , istate -> m_uniq_id )"		4937844	0		=			
ANR	4937997	Identifier	ok		4937844	0					
ANR	4937998	CallExpression	"CompareStr ( opts , istate -> m_uniq_id )"		4937844	1					
ANR	4937999	Callee	CompareStr		4937844	0					
ANR	4938000	Identifier	CompareStr		4937844	0					
ANR	4938001	ArgumentList	opts		4937844	1					
ANR	4938002	Argument	opts		4937844	0					
ANR	4938003	Identifier	opts		4937844	0					
ANR	4938004	Argument	istate -> m_uniq_id		4937844	1					
ANR	4938005	PtrMemberAccess	istate -> m_uniq_id		4937844	0					
ANR	4938006	Identifier	istate		4937844	0					
ANR	4938007	Identifier	m_uniq_id		4937844	1					
ANR	4938008	BreakStatement	break ;	730:2:17871:17876	4937844	17	True				
ANR	4938009	Label	case FIELD_SEQUENCE :	732:1:17880:17899	4937844	18	True				
ANR	4938010	Identifier	FIELD_SEQUENCE		4937844	0					
ANR	4938011	ExpressionStatement	"ok = CompareInt ( opts , istate -> m_sequence )"	733:2:17903:17946	4937844	19	True				
ANR	4938012	AssignmentExpression	"ok = CompareInt ( opts , istate -> m_sequence )"		4937844	0		=			
ANR	4938013	Identifier	ok		4937844	0					
ANR	4938014	CallExpression	"CompareInt ( opts , istate -> m_sequence )"		4937844	1					
ANR	4938015	Callee	CompareInt		4937844	0					
ANR	4938016	Identifier	CompareInt		4937844	0					
ANR	4938017	ArgumentList	opts		4937844	1					
ANR	4938018	Argument	opts		4937844	0					
ANR	4938019	Identifier	opts		4937844	0					
ANR	4938020	Argument	istate -> m_sequence		4937844	1					
ANR	4938021	PtrMemberAccess	istate -> m_sequence		4937844	0					
ANR	4938022	Identifier	istate		4937844	0					
ANR	4938023	Identifier	m_sequence		4937844	1					
ANR	4938024	BreakStatement	break ;	734:2:17950:17955	4937844	20	True				
ANR	4938025	Label	case FIELD_MAX_ROTATION :	736:1:17959:17982	4937844	21	True				
ANR	4938026	Identifier	FIELD_MAX_ROTATION		4937844	0					
ANR	4938027	ExpressionStatement	"ok = CompareInt ( opts , istate -> m_max_rotations )"	737:2:17986:18034	4937844	22	True				
ANR	4938028	AssignmentExpression	"ok = CompareInt ( opts , istate -> m_max_rotations )"		4937844	0		=			
ANR	4938029	Identifier	ok		4937844	0					
ANR	4938030	CallExpression	"CompareInt ( opts , istate -> m_max_rotations )"		4937844	1					
ANR	4938031	Callee	CompareInt		4937844	0					
ANR	4938032	Identifier	CompareInt		4937844	0					
ANR	4938033	ArgumentList	opts		4937844	1					
ANR	4938034	Argument	opts		4937844	0					
ANR	4938035	Identifier	opts		4937844	0					
ANR	4938036	Argument	istate -> m_max_rotations		4937844	1					
ANR	4938037	PtrMemberAccess	istate -> m_max_rotations		4937844	0					
ANR	4938038	Identifier	istate		4937844	0					
ANR	4938039	Identifier	m_max_rotations		4937844	1					
ANR	4938040	BreakStatement	break ;	738:2:18038:18043	4937844	23	True				
ANR	4938041	Label	case FIELD_ROTATION :	740:1:18047:18066	4937844	24	True				
ANR	4938042	Identifier	FIELD_ROTATION		4937844	0					
ANR	4938043	ExpressionStatement	"ok = CompareInt ( opts , istate -> m_rotation )"	741:2:18070:18113	4937844	25	True				
ANR	4938044	AssignmentExpression	"ok = CompareInt ( opts , istate -> m_rotation )"		4937844	0		=			
ANR	4938045	Identifier	ok		4937844	0					
ANR	4938046	CallExpression	"CompareInt ( opts , istate -> m_rotation )"		4937844	1					
ANR	4938047	Callee	CompareInt		4937844	0					
ANR	4938048	Identifier	CompareInt		4937844	0					
ANR	4938049	ArgumentList	opts		4937844	1					
ANR	4938050	Argument	opts		4937844	0					
ANR	4938051	Identifier	opts		4937844	0					
ANR	4938052	Argument	istate -> m_rotation		4937844	1					
ANR	4938053	PtrMemberAccess	istate -> m_rotation		4937844	0					
ANR	4938054	Identifier	istate		4937844	0					
ANR	4938055	Identifier	m_rotation		4937844	1					
ANR	4938056	BreakStatement	break ;	742:2:18117:18122	4937844	26	True				
ANR	4938057	Label	case FIELD_OFFSET :	744:1:18126:18143	4937844	27	True				
ANR	4938058	Identifier	FIELD_OFFSET		4937844	0					
ANR	4938059	ExpressionStatement	"ok = CompareFsize ( opts , istate -> m_offset . asint )"	745:2:18147:18196	4937844	28	True				
ANR	4938060	AssignmentExpression	"ok = CompareFsize ( opts , istate -> m_offset . asint )"		4937844	0		=			
ANR	4938061	Identifier	ok		4937844	0					
ANR	4938062	CallExpression	"CompareFsize ( opts , istate -> m_offset . asint )"		4937844	1					
ANR	4938063	Callee	CompareFsize		4937844	0					
ANR	4938064	Identifier	CompareFsize		4937844	0					
ANR	4938065	ArgumentList	opts		4937844	1					
ANR	4938066	Argument	opts		4937844	0					
ANR	4938067	Identifier	opts		4937844	0					
ANR	4938068	Argument	istate -> m_offset . asint		4937844	1					
ANR	4938069	MemberAccess	istate -> m_offset . asint		4937844	0					
ANR	4938070	PtrMemberAccess	istate -> m_offset		4937844	0					
ANR	4938071	Identifier	istate		4937844	0					
ANR	4938072	Identifier	m_offset		4937844	1					
ANR	4938073	Identifier	asint		4937844	1					
ANR	4938074	BreakStatement	break ;	746:2:18200:18205	4937844	29	True				
ANR	4938075	Label	case FIELD_EVENT_NUM :	748:1:18209:18229	4937844	30	True				
ANR	4938076	Identifier	FIELD_EVENT_NUM		4937844	0					
ANR	4938077	ExpressionStatement	"ok = CompareFsize ( opts , istate -> m_event_num . asint )"	749:2:18233:18285	4937844	31	True				
ANR	4938078	AssignmentExpression	"ok = CompareFsize ( opts , istate -> m_event_num . asint )"		4937844	0		=			
ANR	4938079	Identifier	ok		4937844	0					
ANR	4938080	CallExpression	"CompareFsize ( opts , istate -> m_event_num . asint )"		4937844	1					
ANR	4938081	Callee	CompareFsize		4937844	0					
ANR	4938082	Identifier	CompareFsize		4937844	0					
ANR	4938083	ArgumentList	opts		4937844	1					
ANR	4938084	Argument	opts		4937844	0					
ANR	4938085	Identifier	opts		4937844	0					
ANR	4938086	Argument	istate -> m_event_num . asint		4937844	1					
ANR	4938087	MemberAccess	istate -> m_event_num . asint		4937844	0					
ANR	4938088	PtrMemberAccess	istate -> m_event_num		4937844	0					
ANR	4938089	Identifier	istate		4937844	0					
ANR	4938090	Identifier	m_event_num		4937844	1					
ANR	4938091	Identifier	asint		4937844	1					
ANR	4938092	BreakStatement	break ;	750:2:18289:18294	4937844	32	True				
ANR	4938093	Label	case FIELD_GLOBAL_POSITION :	752:1:18298:18324	4937844	33	True				
ANR	4938094	Identifier	FIELD_GLOBAL_POSITION		4937844	0					
ANR	4938095	ExpressionStatement	"ok = CompareFsize ( opts , istate -> m_log_position . asint )"	753:2:18328:18383	4937844	34	True				
ANR	4938096	AssignmentExpression	"ok = CompareFsize ( opts , istate -> m_log_position . asint )"		4937844	0		=			
ANR	4938097	Identifier	ok		4937844	0					
ANR	4938098	CallExpression	"CompareFsize ( opts , istate -> m_log_position . asint )"		4937844	1					
ANR	4938099	Callee	CompareFsize		4937844	0					
ANR	4938100	Identifier	CompareFsize		4937844	0					
ANR	4938101	ArgumentList	opts		4937844	1					
ANR	4938102	Argument	opts		4937844	0					
ANR	4938103	Identifier	opts		4937844	0					
ANR	4938104	Argument	istate -> m_log_position . asint		4937844	1					
ANR	4938105	MemberAccess	istate -> m_log_position . asint		4937844	0					
ANR	4938106	PtrMemberAccess	istate -> m_log_position		4937844	0					
ANR	4938107	Identifier	istate		4937844	0					
ANR	4938108	Identifier	m_log_position		4937844	1					
ANR	4938109	Identifier	asint		4937844	1					
ANR	4938110	BreakStatement	break ;	754:2:18387:18392	4937844	35	True				
ANR	4938111	Label	case FIELD_GLOBAL_RECORD_NUM :	756:1:18396:18424	4937844	36	True				
ANR	4938112	Identifier	FIELD_GLOBAL_RECORD_NUM		4937844	0					
ANR	4938113	ExpressionStatement	"ok = CompareFsize ( opts , istate -> m_log_record . asint )"	757:2:18428:18481	4937844	37	True				
ANR	4938114	AssignmentExpression	"ok = CompareFsize ( opts , istate -> m_log_record . asint )"		4937844	0		=			
ANR	4938115	Identifier	ok		4937844	0					
ANR	4938116	CallExpression	"CompareFsize ( opts , istate -> m_log_record . asint )"		4937844	1					
ANR	4938117	Callee	CompareFsize		4937844	0					
ANR	4938118	Identifier	CompareFsize		4937844	0					
ANR	4938119	ArgumentList	opts		4937844	1					
ANR	4938120	Argument	opts		4937844	0					
ANR	4938121	Identifier	opts		4937844	0					
ANR	4938122	Argument	istate -> m_log_record . asint		4937844	1					
ANR	4938123	MemberAccess	istate -> m_log_record . asint		4937844	0					
ANR	4938124	PtrMemberAccess	istate -> m_log_record		4937844	0					
ANR	4938125	Identifier	istate		4937844	0					
ANR	4938126	Identifier	m_log_record		4937844	1					
ANR	4938127	Identifier	asint		4937844	1					
ANR	4938128	BreakStatement	break ;	758:2:18485:18490	4937844	38	True				
ANR	4938129	Label	case FIELD_INODE :	760:1:18494:18510	4937844	39	True				
ANR	4938130	Identifier	FIELD_INODE		4937844	0					
ANR	4938131	ExpressionStatement	"ok = CompareInode ( opts , istate -> m_inode )"	761:2:18514:18556	4937844	40	True				
ANR	4938132	AssignmentExpression	"ok = CompareInode ( opts , istate -> m_inode )"		4937844	0		=			
ANR	4938133	Identifier	ok		4937844	0					
ANR	4938134	CallExpression	"CompareInode ( opts , istate -> m_inode )"		4937844	1					
ANR	4938135	Callee	CompareInode		4937844	0					
ANR	4938136	Identifier	CompareInode		4937844	0					
ANR	4938137	ArgumentList	opts		4937844	1					
ANR	4938138	Argument	opts		4937844	0					
ANR	4938139	Identifier	opts		4937844	0					
ANR	4938140	Argument	istate -> m_inode		4937844	1					
ANR	4938141	PtrMemberAccess	istate -> m_inode		4937844	0					
ANR	4938142	Identifier	istate		4937844	0					
ANR	4938143	Identifier	m_inode		4937844	1					
ANR	4938144	BreakStatement	break ;	762:2:18560:18565	4937844	41	True				
ANR	4938145	Label	case FIELD_CTIME :	764:1:18569:18585	4937844	42	True				
ANR	4938146	Identifier	FIELD_CTIME		4937844	0					
ANR	4938147	ExpressionStatement	"ok = CompareTime ( opts , istate -> m_ctime )"	765:2:18589:18630	4937844	43	True				
ANR	4938148	AssignmentExpression	"ok = CompareTime ( opts , istate -> m_ctime )"		4937844	0		=			
ANR	4938149	Identifier	ok		4937844	0					
ANR	4938150	CallExpression	"CompareTime ( opts , istate -> m_ctime )"		4937844	1					
ANR	4938151	Callee	CompareTime		4937844	0					
ANR	4938152	Identifier	CompareTime		4937844	0					
ANR	4938153	ArgumentList	opts		4937844	1					
ANR	4938154	Argument	opts		4937844	0					
ANR	4938155	Identifier	opts		4937844	0					
ANR	4938156	Argument	istate -> m_ctime		4937844	1					
ANR	4938157	PtrMemberAccess	istate -> m_ctime		4937844	0					
ANR	4938158	Identifier	istate		4937844	0					
ANR	4938159	Identifier	m_ctime		4937844	1					
ANR	4938160	BreakStatement	break ;	766:2:18634:18639	4937844	44	True				
ANR	4938161	Label	case FIELD_SIZE :	768:1:18643:18658	4937844	45	True				
ANR	4938162	Identifier	FIELD_SIZE		4937844	0					
ANR	4938163	ExpressionStatement	"ok = CompareFsize ( opts , istate -> m_size . asint )"	769:2:18662:18709	4937844	46	True				
ANR	4938164	AssignmentExpression	"ok = CompareFsize ( opts , istate -> m_size . asint )"		4937844	0		=			
ANR	4938165	Identifier	ok		4937844	0					
ANR	4938166	CallExpression	"CompareFsize ( opts , istate -> m_size . asint )"		4937844	1					
ANR	4938167	Callee	CompareFsize		4937844	0					
ANR	4938168	Identifier	CompareFsize		4937844	0					
ANR	4938169	ArgumentList	opts		4937844	1					
ANR	4938170	Argument	opts		4937844	0					
ANR	4938171	Identifier	opts		4937844	0					
ANR	4938172	Argument	istate -> m_size . asint		4937844	1					
ANR	4938173	MemberAccess	istate -> m_size . asint		4937844	0					
ANR	4938174	PtrMemberAccess	istate -> m_size		4937844	0					
ANR	4938175	Identifier	istate		4937844	0					
ANR	4938176	Identifier	m_size		4937844	1					
ANR	4938177	Identifier	asint		4937844	1					
ANR	4938178	BreakStatement	break ;	770:2:18713:18718	4937844	47	True				
ANR	4938179	Label	default :	772:1:18722:18729	4937844	48	True				
ANR	4938180	Identifier	default		4937844	0					
ANR	4938181	ReturnStatement	return - 1 ;	773:2:18733:18742	4937844	49	True				
ANR	4938182	UnaryOperationExpression	- 1		4937844	0					
ANR	4938183	UnaryOperator	-		4937844	0					
ANR	4938184	PrimaryExpression	1		4937844	1					
ANR	4938185	ReturnStatement	return ok ? 0 : 1 ;	775:1:18748:18765	4937844	7	True				
ANR	4938186	ConditionalExpression	ok ? 0 : 1		4937844	0					
ANR	4938187	Condition	ok		4937844	0					
ANR	4938188	Identifier	ok		4937844	0					
ANR	4938189	PrimaryExpression	0		4937844	1					
ANR	4938190	PrimaryExpression	1		4937844	2					
ANR	4938191	ReturnType	int		4937844	1					
ANR	4938192	Identifier	VerifyState		4937844	2					
ANR	4938193	ParameterList	"const Options & opts , const ReadUserLog :: FileState & state"		4937844	3					
ANR	4938194	Parameter	const Options & opts	693:12:17032:17050	4937844	0	True				
ANR	4938195	ParameterType	const Options &		4937844	0					
ANR	4938196	Identifier	opts		4937844	1					
ANR	4938197	Parameter	const ReadUserLog :: FileState & state	693:33:17053:17087	4937844	1	True				
ANR	4938198	ParameterType	const ReadUserLog :: FileState &		4937844	0					
ANR	4938199	Identifier	state		4937844	1					
ANR	4938200	CFGEntryNode	ENTRY		4937844		True				
ANR	4938201	CFGExitNode	EXIT		4937844		True				
ANR	4938202	Symbol	istate -> m_log_position		4937844						
ANR	4938203	Symbol	istate -> m_size . asint		4937844						
ANR	4938204	Symbol	istate -> m_max_rotations		4937844						
ANR	4938205	Symbol	istate -> m_offset		4937844						
ANR	4938206	Symbol	istate -> m_log_record		4937844						
ANR	4938207	Symbol	istate -> m_version		4937844						
ANR	4938208	Symbol	istate -> m_update_time		4937844						
ANR	4938209	Symbol	rstate		4937844						
ANR	4938210	Symbol	* istate		4937844						
ANR	4938211	Symbol	istate -> m_base_path		4937844						
ANR	4938212	Symbol	istate -> m_sequence		4937844						
ANR	4938213	Symbol	CompareInt		4937844						
ANR	4938214	Symbol	opts		4937844						
ANR	4938215	Symbol	istate -> m_event_num . asint		4937844						
ANR	4938216	Symbol	CompareStr		4937844						
ANR	4938217	Symbol	istate -> m_log_position . asint		4937844						
ANR	4938218	Symbol	istate -> m_log_record . asint		4937844						
ANR	4938219	Symbol	wdata		4937844						
ANR	4938220	Symbol	state		4937844						
ANR	4938221	Symbol	ok		4937844						
ANR	4938222	Symbol	istate -> m_offset . asint		4937844						
ANR	4938223	Symbol	CompareInode		4937844						
ANR	4938224	Symbol	NULL		4937844						
ANR	4938225	Symbol	istate -> m_ctime		4937844						
ANR	4938226	Symbol	istate -> m_signature		4937844						
ANR	4938227	Symbol	CompareTime		4937844						
ANR	4938228	Symbol	rstate . CurPath		4937844						
ANR	4938229	Symbol	istate -> m_rotation		4937844						
ANR	4938230	Symbol	opts . getField		4937844						
ANR	4938231	Symbol	stderr		4937844						
ANR	4938232	Symbol	istate -> m_uniq_id		4937844						
ANR	4938233	Symbol	istate -> m_size		4937844						
ANR	4938234	Symbol	istate -> m_inode		4937844						
ANR	4938235	Symbol	* wdata		4937844						
ANR	4938236	Symbol	istate -> m_event_num		4937844						
ANR	4938237	Symbol	wdata -> m_field		4937844						
ANR	4938238	Symbol	CompareFsize		4937844						
ANR	4938239	Symbol	istate		4937844						
ANR	4938240	Function	timestr	778:0:18770:18981							
ANR	4938241	FunctionDef	"timestr (time_t t , char * buf , int bufsize)"		4938240	0					
ANR	4938242	CompoundStatement		780:0:18827:18981	4938240	0					
ANR	4938243	Statement	static	781:1:18830:18835	4938240	0	True				
ANR	4938244	IdentifierDeclStatement	char sbuf [ 64 ] ;	781:8:18837:18850	4938240	1	True				
ANR	4938245	IdentifierDecl	sbuf [ 64 ]		4938240	0					
ANR	4938246	IdentifierDeclType	char [ 64 ]		4938240	0					
ANR	4938247	Identifier	sbuf		4938240	1					
ANR	4938248	PrimaryExpression	64		4938240	2					
ANR	4938249	IfStatement	if ( NULL == buf )		4938240	2					
ANR	4938250	Condition	NULL == buf	782:6:18858:18868	4938240	0	True				
ANR	4938251	EqualityExpression	NULL == buf		4938240	0		==			
ANR	4938252	Identifier	NULL		4938240	0					
ANR	4938253	Identifier	buf		4938240	1					
ANR	4938254	CompoundStatement		3:20:44:44	4938240	1					
ANR	4938255	ExpressionStatement	buf = sbuf	783:2:18876:18886	4938240	0	True				
ANR	4938256	AssignmentExpression	buf = sbuf		4938240	0		=			
ANR	4938257	Identifier	buf		4938240	0					
ANR	4938258	Identifier	sbuf		4938240	1					
ANR	4938259	ExpressionStatement	bufsize = sizeof ( sbuf )	784:2:18890:18912	4938240	1	True				
ANR	4938260	AssignmentExpression	bufsize = sizeof ( sbuf )		4938240	0		=			
ANR	4938261	Identifier	bufsize		4938240	0					
ANR	4938262	SizeofExpression	sizeof ( sbuf )		4938240	1					
ANR	4938263	Sizeof	sizeof		4938240	0					
ANR	4938264	SizeofOperand	sbuf		4938240	1					
ANR	4938265	ExpressionStatement	"strncpy ( buf , ctime ( & t ) , bufsize )"	787:1:18919:18953	4938240	3	True				
ANR	4938266	CallExpression	"strncpy ( buf , ctime ( & t ) , bufsize )"		4938240	0					
ANR	4938267	Callee	strncpy		4938240	0					
ANR	4938268	Identifier	strncpy		4938240	0					
ANR	4938269	ArgumentList	buf		4938240	1					
ANR	4938270	Argument	buf		4938240	0					
ANR	4938271	Identifier	buf		4938240	0					
ANR	4938272	Argument	ctime ( & t )		4938240	1					
ANR	4938273	CallExpression	ctime ( & t )		4938240	0					
ANR	4938274	Callee	ctime		4938240	0					
ANR	4938275	Identifier	ctime		4938240	0					
ANR	4938276	ArgumentList	& t		4938240	1					
ANR	4938277	Argument	& t		4938240	0					
ANR	4938278	UnaryOperationExpression	& t		4938240	0					
ANR	4938279	UnaryOperator	&		4938240	0					
ANR	4938280	Identifier	t		4938240	1					
ANR	4938281	Argument	bufsize		4938240	2					
ANR	4938282	Identifier	bufsize		4938240	0					
ANR	4938283	ReturnStatement	return chomptime ( buf ) ;	788:1:18956:18979	4938240	4	True				
ANR	4938284	CallExpression	chomptime ( buf )		4938240	0					
ANR	4938285	Callee	chomptime		4938240	0					
ANR	4938286	Identifier	chomptime		4938240	0					
ANR	4938287	ArgumentList	buf		4938240	1					
ANR	4938288	Argument	buf		4938240	0					
ANR	4938289	Identifier	buf		4938240	0					
ANR	4938290	ReturnType	const char *		4938240	1					
ANR	4938291	Identifier	timestr		4938240	2					
ANR	4938292	ParameterList	"time_t t , char * buf , int bufsize"		4938240	3					
ANR	4938293	Parameter	time_t t	779:9:18792:18799	4938240	0	True				
ANR	4938294	ParameterType	time_t		4938240	0					
ANR	4938295	Identifier	t		4938240	1					
ANR	4938296	Parameter	char * buf	779:19:18802:18810	4938240	1	True				
ANR	4938297	ParameterType	char *		4938240	0					
ANR	4938298	Identifier	buf		4938240	1					
ANR	4938299	Parameter	int bufsize	779:30:18813:18823	4938240	2	True				
ANR	4938300	ParameterType	int		4938240	0					
ANR	4938301	Identifier	bufsize		4938240	1					
ANR	4938302	CFGEntryNode	ENTRY		4938240		True				
ANR	4938303	CFGExitNode	EXIT		4938240		True				
ANR	4938304	Symbol	buf		4938240						
ANR	4938305	Symbol	NULL		4938240						
ANR	4938306	Symbol	t		4938240						
ANR	4938307	Symbol	sbuf		4938240						
ANR	4938308	Symbol	bufsize		4938240						
ANR	4938309	Symbol	ctime		4938240						
ANR	4938310	Symbol	& t		4938240						
ANR	4938311	Symbol	chomptime		4938240						
ANR	4938312	Function	timestr	791:0:18984:19227							
ANR	4938313	FunctionDef	"timestr (struct tm & t , char * buf , int bufsize)"		4938312	0					
ANR	4938314	CompoundStatement		793:0:19045:19227	4938312	0					
ANR	4938315	Statement	static	794:1:19048:19053	4938312	0	True				
ANR	4938316	IdentifierDeclStatement	char sbuf [ 64 ] ;	794:8:19055:19068	4938312	1	True				
ANR	4938317	IdentifierDecl	sbuf [ 64 ]		4938312	0					
ANR	4938318	IdentifierDeclType	char [ 64 ]		4938312	0					
ANR	4938319	Identifier	sbuf		4938312	1					
ANR	4938320	PrimaryExpression	64		4938312	2					
ANR	4938321	IfStatement	if ( NULL == buf )		4938312	2					
ANR	4938322	Condition	NULL == buf	795:6:19076:19086	4938312	0	True				
ANR	4938323	EqualityExpression	NULL == buf		4938312	0		==			
ANR	4938324	Identifier	NULL		4938312	0					
ANR	4938325	Identifier	buf		4938312	1					
ANR	4938326	CompoundStatement		3:20:44:44	4938312	1					
ANR	4938327	ExpressionStatement	buf = sbuf	796:2:19094:19104	4938312	0	True				
ANR	4938328	AssignmentExpression	buf = sbuf		4938312	0		=			
ANR	4938329	Identifier	buf		4938312	0					
ANR	4938330	Identifier	sbuf		4938312	1					
ANR	4938331	ExpressionStatement	bufsize = sizeof ( sbuf )	797:2:19108:19130	4938312	1	True				
ANR	4938332	AssignmentExpression	bufsize = sizeof ( sbuf )		4938312	0		=			
ANR	4938333	Identifier	bufsize		4938312	0					
ANR	4938334	SizeofExpression	sizeof ( sbuf )		4938312	1					
ANR	4938335	Sizeof	sizeof		4938312	0					
ANR	4938336	SizeofOperand	sbuf		4938312	1					
ANR	4938337	ExpressionStatement	"strncpy ( buf , asctime ( & t ) , bufsize )"	800:1:19137:19175	4938312	3	True				
ANR	4938338	CallExpression	"strncpy ( buf , asctime ( & t ) , bufsize )"		4938312	0					
ANR	4938339	Callee	strncpy		4938312	0					
ANR	4938340	Identifier	strncpy		4938312	0					
ANR	4938341	ArgumentList	buf		4938312	1					
ANR	4938342	Argument	buf		4938312	0					
ANR	4938343	Identifier	buf		4938312	0					
ANR	4938344	Argument	asctime ( & t )		4938312	1					
ANR	4938345	CallExpression	asctime ( & t )		4938312	0					
ANR	4938346	Callee	asctime		4938312	0					
ANR	4938347	Identifier	asctime		4938312	0					
ANR	4938348	ArgumentList	& t		4938312	1					
ANR	4938349	Argument	& t		4938312	0					
ANR	4938350	UnaryOperationExpression	& t		4938312	0					
ANR	4938351	UnaryOperator	&		4938312	0					
ANR	4938352	Identifier	t		4938312	1					
ANR	4938353	Argument	bufsize		4938312	2					
ANR	4938354	Identifier	bufsize		4938312	0					
ANR	4938355	ExpressionStatement	buf [ bufsize - 1 ] = '\\0'	801:1:19178:19199	4938312	4	True				
ANR	4938356	AssignmentExpression	buf [ bufsize - 1 ] = '\\0'		4938312	0		=			
ANR	4938357	ArrayIndexing	buf [ bufsize - 1 ]		4938312	0					
ANR	4938358	Identifier	buf		4938312	0					
ANR	4938359	AdditiveExpression	bufsize - 1		4938312	1		-			
ANR	4938360	Identifier	bufsize		4938312	0					
ANR	4938361	PrimaryExpression	1		4938312	1					
ANR	4938362	PrimaryExpression	'\\0'		4938312	1					
ANR	4938363	ReturnStatement	return chomptime ( buf ) ;	802:1:19202:19225	4938312	5	True				
ANR	4938364	CallExpression	chomptime ( buf )		4938312	0					
ANR	4938365	Callee	chomptime		4938312	0					
ANR	4938366	Identifier	chomptime		4938312	0					
ANR	4938367	ArgumentList	buf		4938312	1					
ANR	4938368	Argument	buf		4938312	0					
ANR	4938369	Identifier	buf		4938312	0					
ANR	4938370	ReturnType	const char *		4938312	1					
ANR	4938371	Identifier	timestr		4938312	2					
ANR	4938372	ParameterList	"struct tm & t , char * buf , int bufsize"		4938312	3					
ANR	4938373	Parameter	struct tm & t	792:9:19006:19017	4938312	0	True				
ANR	4938374	ParameterType	struct tm &		4938312	0					
ANR	4938375	Identifier	t		4938312	1					
ANR	4938376	Parameter	char * buf	792:23:19020:19028	4938312	1	True				
ANR	4938377	ParameterType	char *		4938312	0					
ANR	4938378	Identifier	buf		4938312	1					
ANR	4938379	Parameter	int bufsize	792:34:19031:19041	4938312	2	True				
ANR	4938380	ParameterType	int		4938312	0					
ANR	4938381	Identifier	bufsize		4938312	1					
ANR	4938382	CFGEntryNode	ENTRY		4938312		True				
ANR	4938383	CFGExitNode	EXIT		4938312		True				
ANR	4938384	Symbol	buf		4938312						
ANR	4938385	Symbol	* buf		4938312						
ANR	4938386	Symbol	* bufsize		4938312						
ANR	4938387	Symbol	NULL		4938312						
ANR	4938388	Symbol	t		4938312						
ANR	4938389	Symbol	sbuf		4938312						
ANR	4938390	Symbol	bufsize		4938312						
ANR	4938391	Symbol	& t		4938312						
ANR	4938392	Symbol	asctime		4938312						
ANR	4938393	Symbol	chomptime		4938312						
ANR	4938394	Function	chomptime	805:0:19230:19382							
ANR	4938395	FunctionDef	chomptime (char * buf)		4938394	0					
ANR	4938396	CompoundStatement		807:0:19266:19382	4938394	0					
ANR	4938397	IdentifierDeclStatement	int len = strlen ( buf ) ;	808:1:19269:19292	4938394	0	True				
ANR	4938398	IdentifierDecl	len = strlen ( buf )		4938394	0					
ANR	4938399	IdentifierDeclType	int		4938394	0					
ANR	4938400	Identifier	len		4938394	1					
ANR	4938401	AssignmentExpression	len = strlen ( buf )		4938394	2		=			
ANR	4938402	Identifier	len		4938394	0					
ANR	4938403	CallExpression	strlen ( buf )		4938394	1					
ANR	4938404	Callee	strlen		4938394	0					
ANR	4938405	Identifier	strlen		4938394	0					
ANR	4938406	ArgumentList	buf		4938394	1					
ANR	4938407	Argument	buf		4938394	0					
ANR	4938408	Identifier	buf		4938394	0					
ANR	4938409	WhileStatement	while ( len && isspace ( buf [ len - 1 ] ) )		4938394	1					
ANR	4938410	Condition	len && isspace ( buf [ len - 1 ] )	809:9:19303:19330	4938394	0	True				
ANR	4938411	AndExpression	len && isspace ( buf [ len - 1 ] )		4938394	0		&&			
ANR	4938412	Identifier	len		4938394	0					
ANR	4938413	CallExpression	isspace ( buf [ len - 1 ] )		4938394	1					
ANR	4938414	Callee	isspace		4938394	0					
ANR	4938415	Identifier	isspace		4938394	0					
ANR	4938416	ArgumentList	buf [ len - 1 ]		4938394	1					
ANR	4938417	Argument	buf [ len - 1 ]		4938394	0					
ANR	4938418	ArrayIndexing	buf [ len - 1 ]		4938394	0					
ANR	4938419	Identifier	buf		4938394	0					
ANR	4938420	AdditiveExpression	len - 1		4938394	1		-			
ANR	4938421	Identifier	len		4938394	0					
ANR	4938422	PrimaryExpression	1		4938394	1					
ANR	4938423	CompoundStatement		3:40:67:67	4938394	1					
ANR	4938424	ExpressionStatement	buf [ len - 1 ] = '\\0'	810:2:19338:19355	4938394	0	True				
ANR	4938425	AssignmentExpression	buf [ len - 1 ] = '\\0'		4938394	0		=			
ANR	4938426	ArrayIndexing	buf [ len - 1 ]		4938394	0					
ANR	4938427	Identifier	buf		4938394	0					
ANR	4938428	AdditiveExpression	len - 1		4938394	1		-			
ANR	4938429	Identifier	len		4938394	0					
ANR	4938430	PrimaryExpression	1		4938394	1					
ANR	4938431	PrimaryExpression	'\\0'		4938394	1					
ANR	4938432	ExpressionStatement	len --	811:2:19359:19364	4938394	1	True				
ANR	4938433	PostIncDecOperationExpression	len --		4938394	0					
ANR	4938434	Identifier	len		4938394	0					
ANR	4938435	IncDec	--		4938394	1					
ANR	4938436	ReturnStatement	return buf ;	813:1:19370:19380	4938394	2	True				
ANR	4938437	Identifier	buf		4938394	0					
ANR	4938438	ReturnType	const char *		4938394	1					
ANR	4938439	Identifier	chomptime		4938394	2					
ANR	4938440	ParameterList	char * buf		4938394	3					
ANR	4938441	Parameter	char * buf	806:11:19254:19262	4938394	0	True				
ANR	4938442	ParameterType	char *		4938394	0					
ANR	4938443	Identifier	buf		4938394	1					
ANR	4938444	CFGEntryNode	ENTRY		4938394		True				
ANR	4938445	CFGExitNode	EXIT		4938394		True				
ANR	4938446	Symbol	strlen		4938394						
ANR	4938447	Symbol	buf		4938394						
ANR	4938448	Symbol	* buf		4938394						
ANR	4938449	Symbol	len		4938394						
ANR	4938450	Symbol	isspace		4938394						
ANR	4938451	Symbol	* len		4938394						
ANR	4938452	Function	Options :: Options	816:0:19385:20352							
ANR	4938453	FunctionDef	Options :: Options ()		4938452	0					
ANR	4938454	CompoundStatement		817:0:19410:20352	4938452	0					
ANR	4938455	ExpressionStatement	m_state = ST_CMD	818:1:19413:19429	4938452	0	True				
ANR	4938456	AssignmentExpression	m_state = ST_CMD		4938452	0		=			
ANR	4938457	Identifier	m_state		4938452	0					
ANR	4938458	Identifier	ST_CMD		4938452	1					
ANR	4938459	ExpressionStatement	m_file = NULL	819:1:19432:19445	4938452	1	True				
ANR	4938460	AssignmentExpression	m_file = NULL		4938452	0		=			
ANR	4938461	Identifier	m_file		4938452	0					
ANR	4938462	Identifier	NULL		4938452	1					
ANR	4938463	ExpressionStatement	m_file2 = NULL	820:1:19448:19462	4938452	2	True				
ANR	4938464	AssignmentExpression	m_file2 = NULL		4938452	0		=			
ANR	4938465	Identifier	m_file2		4938452	0					
ANR	4938466	Identifier	NULL		4938452	1					
ANR	4938467	ExpressionStatement	m_command = CMD_NONE	821:1:19465:19485	4938452	3	True				
ANR	4938468	AssignmentExpression	m_command = CMD_NONE		4938452	0		=			
ANR	4938469	Identifier	m_command		4938452	0					
ANR	4938470	Identifier	CMD_NONE		4938452	1					
ANR	4938471	ExpressionStatement	m_field = NULL	822:1:19488:19502	4938452	4	True				
ANR	4938472	AssignmentExpression	m_field = NULL		4938452	0		=			
ANR	4938473	Identifier	m_field		4938452	0					
ANR	4938474	Identifier	NULL		4938452	1					
ANR	4938475	ExpressionStatement	"memset ( & m_value , 0 , sizeof ( m_value ) )"	823:1:19505:19543	4938452	5	True				
ANR	4938476	CallExpression	"memset ( & m_value , 0 , sizeof ( m_value ) )"		4938452	0					
ANR	4938477	Callee	memset		4938452	0					
ANR	4938478	Identifier	memset		4938452	0					
ANR	4938479	ArgumentList	& m_value		4938452	1					
ANR	4938480	Argument	& m_value		4938452	0					
ANR	4938481	UnaryOperationExpression	& m_value		4938452	0					
ANR	4938482	UnaryOperator	&		4938452	0					
ANR	4938483	Identifier	m_value		4938452	1					
ANR	4938484	Argument	0		4938452	1					
ANR	4938485	PrimaryExpression	0		4938452	0					
ANR	4938486	Argument	sizeof ( m_value )		4938452	2					
ANR	4938487	SizeofExpression	sizeof ( m_value )		4938452	0					
ANR	4938488	Sizeof	sizeof		4938452	0					
ANR	4938489	SizeofOperand	m_value		4938452	1					
ANR	4938490	ExpressionStatement	m_value_is_range = false	824:1:19546:19570	4938452	6	True				
ANR	4938491	AssignmentExpression	m_value_is_range = false		4938452	0		=			
ANR	4938492	Identifier	m_value_is_range		4938452	0					
ANR	4938493	Identifier	false		4938452	1					
ANR	4938494	ExpressionStatement	m_num_values = 0	825:1:19573:19589	4938452	7	True				
ANR	4938495	AssignmentExpression	m_num_values = 0		4938452	0		=			
ANR	4938496	Identifier	m_num_values		4938452	0					
ANR	4938497	PrimaryExpression	0		4938452	1					
ANR	4938498	ExpressionStatement	m_verbose = VERB_NONE	826:1:19592:19613	4938452	8	True				
ANR	4938499	AssignmentExpression	m_verbose = VERB_NONE		4938452	0		=			
ANR	4938500	Identifier	m_verbose		4938452	0					
ANR	4938501	Identifier	VERB_NONE		4938452	1					
ANR	4938502	ExpressionStatement	m_numeric = false	827:1:19616:19633	4938452	9	True				
ANR	4938503	AssignmentExpression	m_numeric = false		4938452	0		=			
ANR	4938504	Identifier	m_numeric		4938452	0					
ANR	4938505	Identifier	false		4938452	1					
ANR	4938506	Statement	m_usage	828:1:19636:19642	4938452	10	True				
ANR	4938507	Statement	=	828:9:19644:19644	4938452	11	True				
ANR	4938508	Statement	"""Usage: test_log_reader_state """	829:2:19648:19678	4938452	12	True				
ANR	4938509	Statement	"""[options] <command> [filename [field-name [value/min [max-value]]]]\\n"""	830:2:19682:19752	4938452	13	True				
ANR	4938510	Statement	"""  commands: dump diff verify check list\\n"""	831:2:19756:19798	4938452	14	True				
ANR	4938511	Statement	"""    dump/any: dump [what]\\n"""	832:2:19802:19830	4938452	15	True				
ANR	4938512	Statement	"""    diff: diff two state files [file2]\\n"""	833:2:19834:19875	4938452	16	True				
ANR	4938513	Statement	"""    verify/numeric: what min max\\n"""	834:2:19879:19914	4938452	17	True				
ANR	4938514	Statement	"""    verify/string:  what [value]\\n"""	835:2:19918:19953	4938452	18	True				
ANR	4938515	Statement	"""    access: simple access API checks\\n"""	836:2:19957:19996	4938452	19	True				
ANR	4938516	Statement	"""    list (list names of things)\\n"""	837:2:20000:20034	4938452	20	True				
ANR	4938517	Statement	"""  --numeric|-n: dump times as numeric\\n"""	838:2:20038:20078	4938452	21	True				
ANR	4938518	Statement	"""  --usage|--help|-h: print this message and exit\\n"""	839:2:20082:20133	4938452	22	True				
ANR	4938519	Statement	"""  -v: Increase verbosity level by 1\\n"""	840:2:20137:20175	4938452	23	True				
ANR	4938520	Statement	"""  --verbosity <number>: set verbosity level (default is 1)\\n"""	841:2:20179:20240	4938452	24	True				
ANR	4938521	Statement	"""  --version: print the version number and compile date\\n"""	842:2:20244:20301	4938452	25	True				
ANR	4938522	ExpressionStatement	"""  <filename>: the persistent file to read\\n"""	843:2:20305:20350	4938452	26	True				
ANR	4938523	PrimaryExpression	"""  <filename>: the persistent file to read\\n"""		4938452	0					
ANR	4938524	Identifier	Options :: Options		4938452	1					
ANR	4938525	ParameterList			4938452	2					
ANR	4938526	CFGEntryNode	ENTRY		4938452		True				
ANR	4938527	CFGExitNode	EXIT		4938452		True				
ANR	4938528	Symbol	m_command		4938452						
ANR	4938529	Symbol	m_num_values		4938452						
ANR	4938530	Symbol	NULL		4938452						
ANR	4938531	Symbol	m_file		4938452						
ANR	4938532	Symbol	false		4938452						
ANR	4938533	Symbol	CMD_NONE		4938452						
ANR	4938534	Symbol	m_numeric		4938452						
ANR	4938535	Symbol	m_verbose		4938452						
ANR	4938536	Symbol	m_state		4938452						
ANR	4938537	Symbol	ST_CMD		4938452						
ANR	4938538	Symbol	VERB_NONE		4938452						
ANR	4938539	Symbol	m_file2		4938452						
ANR	4938540	Symbol	m_field		4938452						
ANR	4938541	Symbol	& m_value		4938452						
ANR	4938542	Symbol	m_value_is_range		4938452						
ANR	4938543	Function	Options :: handleOpt	846:0:20355:21202							
ANR	4938544	FunctionDef	"Options :: handleOpt (SimpleArg & arg , int & argno)"		4938543	0					
ANR	4938545	CompoundStatement		848:0:20408:21202	4938543	0					
ANR	4938546	IfStatement	"if ( arg . Match ( 'n' , ""numeric"" ) )"		4938543	0					
ANR	4938547	Condition	"arg . Match ( 'n' , ""numeric"" )"	849:6:20416:20440	4938543	0	True				
ANR	4938548	CallExpression	"arg . Match ( 'n' , ""numeric"" )"		4938543	0					
ANR	4938549	Callee	arg . Match		4938543	0					
ANR	4938550	MemberAccess	arg . Match		4938543	0					
ANR	4938551	Identifier	arg		4938543	0					
ANR	4938552	Identifier	Match		4938543	1					
ANR	4938553	ArgumentList	'n'		4938543	1					
ANR	4938554	Argument	'n'		4938543	0					
ANR	4938555	PrimaryExpression	'n'		4938543	0					
ANR	4938556	Argument	"""numeric"""		4938543	1					
ANR	4938557	PrimaryExpression	"""numeric"""		4938543	0					
ANR	4938558	CompoundStatement		2:34:35:35	4938543	1					
ANR	4938559	ExpressionStatement	m_numeric = true	850:2:20448:20464	4938543	0	True				
ANR	4938560	AssignmentExpression	m_numeric = true		4938543	0		=			
ANR	4938561	Identifier	m_numeric		4938543	0					
ANR	4938562	Identifier	true		4938543	1					
ANR	4938563	ElseStatement	else		4938543	0					
ANR	4938564	IfStatement	"if ( arg . Match ( 'd' , ""debug"" ) )"		4938543	0					
ANR	4938565	Condition	"arg . Match ( 'd' , ""debug"" )"	852:13:20480:20502	4938543	0	True				
ANR	4938566	CallExpression	"arg . Match ( 'd' , ""debug"" )"		4938543	0					
ANR	4938567	Callee	arg . Match		4938543	0					
ANR	4938568	MemberAccess	arg . Match		4938543	0					
ANR	4938569	Identifier	arg		4938543	0					
ANR	4938570	Identifier	Match		4938543	1					
ANR	4938571	ArgumentList	'd'		4938543	1					
ANR	4938572	Argument	'd'		4938543	0					
ANR	4938573	PrimaryExpression	'd'		4938543	0					
ANR	4938574	Argument	"""debug"""		4938543	1					
ANR	4938575	PrimaryExpression	"""debug"""		4938543	0					
ANR	4938576	CompoundStatement		5:39:97:97	4938543	1					
ANR	4938577	IfStatement	if ( arg . hasOpt ( ) )		4938543	0					
ANR	4938578	Condition	arg . hasOpt ( )	853:7:20515:20526	4938543	0	True				
ANR	4938579	CallExpression	arg . hasOpt ( )		4938543	0					
ANR	4938580	Callee	arg . hasOpt		4938543	0					
ANR	4938581	MemberAccess	arg . hasOpt		4938543	0					
ANR	4938582	Identifier	arg		4938543	0					
ANR	4938583	Identifier	hasOpt		4938543	1					
ANR	4938584	ArgumentList			4938543	1					
ANR	4938585	CompoundStatement		6:22:121:121	4938543	1					
ANR	4938586	Statement	set_debug_flags	854:3:20535:20549	4938543	0	True				
ANR	4938587	Statement	(	854:18:20550:20550	4938543	1	True				
ANR	4938588	Statement	const_cast	854:20:20552:20561	4938543	2	True				
ANR	4938589	Statement	<	854:30:20562:20562	4938543	3	True				
ANR	4938590	Statement	char	854:31:20563:20566	4938543	4	True				
ANR	4938591	Statement	*	854:36:20568:20568	4938543	5	True				
ANR	4938592	Statement	>	854:37:20569:20569	4938543	6	True				
ANR	4938593	Statement	(	854:38:20570:20570	4938543	7	True				
ANR	4938594	Statement	arg	854:39:20571:20573	4938543	8	True				
ANR	4938595	Statement	.	854:42:20574:20574	4938543	9	True				
ANR	4938596	Statement	getOpt	854:43:20575:20580	4938543	10	True				
ANR	4938597	Statement	(	854:49:20581:20581	4938543	11	True				
ANR	4938598	Statement	)	854:50:20582:20582	4938543	12	True				
ANR	4938599	Statement	)	854:51:20583:20583	4938543	13	True				
ANR	4938600	Statement	)	854:53:20585:20585	4938543	14	True				
ANR	4938601	ExpressionStatement		854:54:20586:20586	4938543	15	True				
ANR	4938602	ExpressionStatement	argno = arg . ConsumeOpt ( )	855:3:20591:20616	4938543	16	True				
ANR	4938603	AssignmentExpression	argno = arg . ConsumeOpt ( )		4938543	0		=			
ANR	4938604	Identifier	argno		4938543	0					
ANR	4938605	CallExpression	arg . ConsumeOpt ( )		4938543	1					
ANR	4938606	Callee	arg . ConsumeOpt		4938543	0					
ANR	4938607	MemberAccess	arg . ConsumeOpt		4938543	0					
ANR	4938608	Identifier	arg		4938543	0					
ANR	4938609	Identifier	ConsumeOpt		4938543	1					
ANR	4938610	ArgumentList			4938543	1					
ANR	4938611	ElseStatement	else		4938543	0					
ANR	4938612	CompoundStatement		9:9:218:218	4938543	0					
ANR	4938613	ExpressionStatement	"fprintf ( stderr , ""Value needed for '%s'\\n"" , arg . Arg ( ) )"	857:3:20632:20686	4938543	0	True				
ANR	4938614	CallExpression	"fprintf ( stderr , ""Value needed for '%s'\\n"" , arg . Arg ( ) )"		4938543	0					
ANR	4938615	Callee	fprintf		4938543	0					
ANR	4938616	Identifier	fprintf		4938543	0					
ANR	4938617	ArgumentList	stderr		4938543	1					
ANR	4938618	Argument	stderr		4938543	0					
ANR	4938619	Identifier	stderr		4938543	0					
ANR	4938620	Argument	"""Value needed for '%s'\\n"""		4938543	1					
ANR	4938621	PrimaryExpression	"""Value needed for '%s'\\n"""		4938543	0					
ANR	4938622	Argument	arg . Arg ( )		4938543	2					
ANR	4938623	CallExpression	arg . Arg ( )		4938543	0					
ANR	4938624	Callee	arg . Arg		4938543	0					
ANR	4938625	MemberAccess	arg . Arg		4938543	0					
ANR	4938626	Identifier	arg		4938543	0					
ANR	4938627	Identifier	Arg		4938543	1					
ANR	4938628	ArgumentList			4938543	1					
ANR	4938629	ExpressionStatement	"printf ( ""%s"" , m_usage )"	858:3:20691:20712	4938543	1	True				
ANR	4938630	CallExpression	"printf ( ""%s"" , m_usage )"		4938543	0					
ANR	4938631	Callee	printf		4938543	0					
ANR	4938632	Identifier	printf		4938543	0					
ANR	4938633	ArgumentList	"""%s"""		4938543	1					
ANR	4938634	Argument	"""%s"""		4938543	0					
ANR	4938635	PrimaryExpression	"""%s"""		4938543	0					
ANR	4938636	Argument	m_usage		4938543	1					
ANR	4938637	Identifier	m_usage		4938543	0					
ANR	4938638	ReturnStatement	return - 1 ;	859:3:20717:20726	4938543	2	True				
ANR	4938639	UnaryOperationExpression	- 1		4938543	0					
ANR	4938640	UnaryOperator	-		4938543	0					
ANR	4938641	PrimaryExpression	1		4938543	1					
ANR	4938642	ElseStatement	else		4938543	0					
ANR	4938643	IfStatement	if ( arg . Match ( 'v' ) )		4938543	0					
ANR	4938644	Condition	arg . Match ( 'v' )	862:13:20746:20759	4938543	0	True				
ANR	4938645	CallExpression	arg . Match ( 'v' )		4938543	0					
ANR	4938646	Callee	arg . Match		4938543	0					
ANR	4938647	MemberAccess	arg . Match		4938543	0					
ANR	4938648	Identifier	arg		4938543	0					
ANR	4938649	Identifier	Match		4938543	1					
ANR	4938650	ArgumentList	'v'		4938543	1					
ANR	4938651	Argument	'v'		4938543	0					
ANR	4938652	PrimaryExpression	'v'		4938543	0					
ANR	4938653	CompoundStatement		15:30:354:354	4938543	1					
ANR	4938654	ExpressionStatement	m_verbose ++	863:2:20767:20778	4938543	0	True				
ANR	4938655	PostIncDecOperationExpression	m_verbose ++		4938543	0					
ANR	4938656	Identifier	m_verbose		4938543	0					
ANR	4938657	IncDec	++		4938543	1					
ANR	4938658	ElseStatement	else		4938543	0					
ANR	4938659	IfStatement	"if ( arg . Match ( ""verbosity"" ) )"		4938543	0					
ANR	4938660	Condition	"arg . Match ( ""verbosity"" )"	865:13:20794:20815	4938543	0	True				
ANR	4938661	CallExpression	"arg . Match ( ""verbosity"" )"		4938543	0					
ANR	4938662	Callee	arg . Match		4938543	0					
ANR	4938663	MemberAccess	arg . Match		4938543	0					
ANR	4938664	Identifier	arg		4938543	0					
ANR	4938665	Identifier	Match		4938543	1					
ANR	4938666	ArgumentList	"""verbosity"""		4938543	1					
ANR	4938667	Argument	"""verbosity"""		4938543	0					
ANR	4938668	PrimaryExpression	"""verbosity"""		4938543	0					
ANR	4938669	CompoundStatement		18:38:410:410	4938543	1					
ANR	4938670	IfStatement	if ( ! arg . getOpt ( m_verbose ) )		4938543	0					
ANR	4938671	Condition	! arg . getOpt ( m_verbose )	866:7:20828:20851	4938543	0	True				
ANR	4938672	UnaryOperationExpression	! arg . getOpt ( m_verbose )		4938543	0					
ANR	4938673	UnaryOperator	!		4938543	0					
ANR	4938674	CallExpression	arg . getOpt ( m_verbose )		4938543	1					
ANR	4938675	Callee	arg . getOpt		4938543	0					
ANR	4938676	MemberAccess	arg . getOpt		4938543	0					
ANR	4938677	Identifier	arg		4938543	0					
ANR	4938678	Identifier	getOpt		4938543	1					
ANR	4938679	ArgumentList	m_verbose		4938543	1					
ANR	4938680	Argument	m_verbose		4938543	0					
ANR	4938681	Identifier	m_verbose		4938543	0					
ANR	4938682	CompoundStatement		19:34:446:446	4938543	1					
ANR	4938683	ExpressionStatement	"fprintf ( stderr , ""Value needed for '%s'\\n"" , arg . Arg ( ) )"	867:3:20860:20914	4938543	0	True				
ANR	4938684	CallExpression	"fprintf ( stderr , ""Value needed for '%s'\\n"" , arg . Arg ( ) )"		4938543	0					
ANR	4938685	Callee	fprintf		4938543	0					
ANR	4938686	Identifier	fprintf		4938543	0					
ANR	4938687	ArgumentList	stderr		4938543	1					
ANR	4938688	Argument	stderr		4938543	0					
ANR	4938689	Identifier	stderr		4938543	0					
ANR	4938690	Argument	"""Value needed for '%s'\\n"""		4938543	1					
ANR	4938691	PrimaryExpression	"""Value needed for '%s'\\n"""		4938543	0					
ANR	4938692	Argument	arg . Arg ( )		4938543	2					
ANR	4938693	CallExpression	arg . Arg ( )		4938543	0					
ANR	4938694	Callee	arg . Arg		4938543	0					
ANR	4938695	MemberAccess	arg . Arg		4938543	0					
ANR	4938696	Identifier	arg		4938543	0					
ANR	4938697	Identifier	Arg		4938543	1					
ANR	4938698	ArgumentList			4938543	1					
ANR	4938699	ExpressionStatement	"printf ( ""%s"" , m_usage )"	868:3:20919:20940	4938543	1	True				
ANR	4938700	CallExpression	"printf ( ""%s"" , m_usage )"		4938543	0					
ANR	4938701	Callee	printf		4938543	0					
ANR	4938702	Identifier	printf		4938543	0					
ANR	4938703	ArgumentList	"""%s"""		4938543	1					
ANR	4938704	Argument	"""%s"""		4938543	0					
ANR	4938705	PrimaryExpression	"""%s"""		4938543	0					
ANR	4938706	Argument	m_usage		4938543	1					
ANR	4938707	Identifier	m_usage		4938543	0					
ANR	4938708	ReturnStatement	return - 1 ;	869:3:20945:20954	4938543	2	True				
ANR	4938709	UnaryOperationExpression	- 1		4938543	0					
ANR	4938710	UnaryOperator	-		4938543	0					
ANR	4938711	PrimaryExpression	1		4938543	1					
ANR	4938712	ElseStatement	else		4938543	0					
ANR	4938713	IfStatement	"if ( arg . Match ( ""version"" ) )"		4938543	0					
ANR	4938714	Condition	"arg . Match ( ""version"" )"	872:13:20974:20993	4938543	0	True				
ANR	4938715	CallExpression	"arg . Match ( ""version"" )"		4938543	0					
ANR	4938716	Callee	arg . Match		4938543	0					
ANR	4938717	MemberAccess	arg . Match		4938543	0					
ANR	4938718	Identifier	arg		4938543	0					
ANR	4938719	Identifier	Match		4938543	1					
ANR	4938720	ArgumentList	"""version"""		4938543	1					
ANR	4938721	Argument	"""version"""		4938543	0					
ANR	4938722	PrimaryExpression	"""version"""		4938543	0					
ANR	4938723	CompoundStatement		25:36:588:588	4938543	1					
ANR	4938724	ExpressionStatement	"printf ( ""test_log_reader_state: %s, %s\\n"" , VERSION , __DATE__ )"	873:2:21001:21061	4938543	0	True				
ANR	4938725	CallExpression	"printf ( ""test_log_reader_state: %s, %s\\n"" , VERSION , __DATE__ )"		4938543	0					
ANR	4938726	Callee	printf		4938543	0					
ANR	4938727	Identifier	printf		4938543	0					
ANR	4938728	ArgumentList	"""test_log_reader_state: %s, %s\\n"""		4938543	1					
ANR	4938729	Argument	"""test_log_reader_state: %s, %s\\n"""		4938543	0					
ANR	4938730	PrimaryExpression	"""test_log_reader_state: %s, %s\\n"""		4938543	0					
ANR	4938731	Argument	VERSION		4938543	1					
ANR	4938732	Identifier	VERSION		4938543	0					
ANR	4938733	Argument	__DATE__		4938543	2					
ANR	4938734	Identifier	__DATE__		4938543	0					
ANR	4938735	ReturnStatement	return 1 ;	874:2:21065:21073	4938543	1	True				
ANR	4938736	PrimaryExpression	1		4938543	0					
ANR	4938737	ElseStatement	else		4938543	0					
ANR	4938738	CompoundStatement		29:6:675:675	4938543	0					
ANR	4938739	ExpressionStatement	"fprintf ( stderr , ""Unrecognized argument: '%s'\\n"" , arg . Arg ( ) )"	877:2:21088:21148	4938543	0	True				
ANR	4938740	CallExpression	"fprintf ( stderr , ""Unrecognized argument: '%s'\\n"" , arg . Arg ( ) )"		4938543	0					
ANR	4938741	Callee	fprintf		4938543	0					
ANR	4938742	Identifier	fprintf		4938543	0					
ANR	4938743	ArgumentList	stderr		4938543	1					
ANR	4938744	Argument	stderr		4938543	0					
ANR	4938745	Identifier	stderr		4938543	0					
ANR	4938746	Argument	"""Unrecognized argument: '%s'\\n"""		4938543	1					
ANR	4938747	PrimaryExpression	"""Unrecognized argument: '%s'\\n"""		4938543	0					
ANR	4938748	Argument	arg . Arg ( )		4938543	2					
ANR	4938749	CallExpression	arg . Arg ( )		4938543	0					
ANR	4938750	Callee	arg . Arg		4938543	0					
ANR	4938751	MemberAccess	arg . Arg		4938543	0					
ANR	4938752	Identifier	arg		4938543	0					
ANR	4938753	Identifier	Arg		4938543	1					
ANR	4938754	ArgumentList			4938543	1					
ANR	4938755	ExpressionStatement	"printf ( ""%s"" , m_usage )"	878:2:21152:21173	4938543	1	True				
ANR	4938756	CallExpression	"printf ( ""%s"" , m_usage )"		4938543	0					
ANR	4938757	Callee	printf		4938543	0					
ANR	4938758	Identifier	printf		4938543	0					
ANR	4938759	ArgumentList	"""%s"""		4938543	1					
ANR	4938760	Argument	"""%s"""		4938543	0					
ANR	4938761	PrimaryExpression	"""%s"""		4938543	0					
ANR	4938762	Argument	m_usage		4938543	1					
ANR	4938763	Identifier	m_usage		4938543	0					
ANR	4938764	ReturnStatement	return - 1 ;	879:2:21177:21186	4938543	2	True				
ANR	4938765	UnaryOperationExpression	- 1		4938543	0					
ANR	4938766	UnaryOperator	-		4938543	0					
ANR	4938767	PrimaryExpression	1		4938543	1					
ANR	4938768	ReturnStatement	return 0 ;	881:1:21192:21200	4938543	1	True				
ANR	4938769	PrimaryExpression	0		4938543	0					
ANR	4938770	ReturnType	int		4938543	1					
ANR	4938771	Identifier	Options :: handleOpt		4938543	2					
ANR	4938772	ParameterList	"SimpleArg & arg , int & argno"		4938543	3					
ANR	4938773	Parameter	SimpleArg & arg	847:20:20379:20392	4938543	0	True				
ANR	4938774	ParameterType	SimpleArg &		4938543	0					
ANR	4938775	Identifier	arg		4938543	1					
ANR	4938776	Parameter	int & argno	847:36:20395:20404	4938543	1	True				
ANR	4938777	ParameterType	int &		4938543	0					
ANR	4938778	Identifier	argno		4938543	1					
ANR	4938779	CFGEntryNode	ENTRY		4938543		True				
ANR	4938780	CFGExitNode	EXIT		4938543		True				
ANR	4938781	Symbol	m_usage		4938543						
ANR	4938782	Symbol	arg . Match		4938543						
ANR	4938783	Symbol	__DATE__		4938543						
ANR	4938784	Symbol	m_numeric		4938543						
ANR	4938785	Symbol	stderr		4938543						
ANR	4938786	Symbol	m_verbose		4938543						
ANR	4938787	Symbol	arg . ConsumeOpt		4938543						
ANR	4938788	Symbol	arg . Arg		4938543						
ANR	4938789	Symbol	arg . hasOpt		4938543						
ANR	4938790	Symbol	arg		4938543						
ANR	4938791	Symbol	true		4938543						
ANR	4938792	Symbol	VERSION		4938543						
ANR	4938793	Symbol	argno		4938543						
ANR	4938794	Symbol	arg . getOpt		4938543						
ANR	4938795	Function	Options :: lookupCommand	943:0:22438:23091							
ANR	4938796	FunctionDef	Options :: lookupCommand (const SimpleArg & arg)		4938795	0					
ANR	4938797	CompoundStatement		945:0:22490:23091	4938795	0					
ANR	4938798	IdentifierDeclStatement	const char * s = arg . Arg ( ) ;	946:1:22493:22519	4938795	0	True				
ANR	4938799	IdentifierDecl	* s = arg . Arg ( )		4938795	0					
ANR	4938800	IdentifierDeclType	const char *		4938795	0					
ANR	4938801	Identifier	s		4938795	1					
ANR	4938802	AssignmentExpression	* s = arg . Arg ( )		4938795	2		=			
ANR	4938803	Identifier	s		4938795	0					
ANR	4938804	CallExpression	arg . Arg ( )		4938795	1					
ANR	4938805	Callee	arg . Arg		4938795	0					
ANR	4938806	MemberAccess	arg . Arg		4938795	0					
ANR	4938807	Identifier	arg		4938795	0					
ANR	4938808	Identifier	Arg		4938795	1					
ANR	4938809	ArgumentList			4938795	1					
ANR	4938810	IdentifierDeclStatement	char c = '\\0' ;	947:1:22522:22536	4938795	1	True				
ANR	4938811	IdentifierDecl	c = '\\0'		4938795	0					
ANR	4938812	IdentifierDeclType	char		4938795	0					
ANR	4938813	Identifier	c		4938795	1					
ANR	4938814	AssignmentExpression	c = '\\0'		4938795	2		=			
ANR	4938815	Identifier	c		4938795	0					
ANR	4938816	PrimaryExpression	'\\0'		4938795	1					
ANR	4938817	IfStatement	if ( 1 == strlen ( s ) )		4938795	2					
ANR	4938818	Condition	1 == strlen ( s )	949:6:22545:22558	4938795	0	True				
ANR	4938819	EqualityExpression	1 == strlen ( s )		4938795	0		==			
ANR	4938820	PrimaryExpression	1		4938795	0					
ANR	4938821	CallExpression	strlen ( s )		4938795	1					
ANR	4938822	Callee	strlen		4938795	0					
ANR	4938823	Identifier	strlen		4938795	0					
ANR	4938824	ArgumentList	s		4938795	1					
ANR	4938825	Argument	s		4938795	0					
ANR	4938826	Identifier	s		4938795	0					
ANR	4938827	CompoundStatement		5:23:71:71	4938795	1					
ANR	4938828	ExpressionStatement	c = s [ 0 ]	950:2:22566:22574	4938795	0	True				
ANR	4938829	AssignmentExpression	c = s [ 0 ]		4938795	0		=			
ANR	4938830	Identifier	c		4938795	0					
ANR	4938831	ArrayIndexing	s [ 0 ]		4938795	1					
ANR	4938832	Identifier	s		4938795	0					
ANR	4938833	PrimaryExpression	0		4938795	1					
ANR	4938834	IfStatement	"if ( 'd' == c || ( 0 == strcasecmp ( s , ""dump"" ) ) )"		4938795	3					
ANR	4938835	Condition	"'d' == c || ( 0 == strcasecmp ( s , ""dump"" ) )"	952:6:22585:22628	4938795	0	True				
ANR	4938836	OrExpression	"'d' == c || ( 0 == strcasecmp ( s , ""dump"" ) )"		4938795	0		||			
ANR	4938837	EqualityExpression	'd' == c		4938795	0		==			
ANR	4938838	PrimaryExpression	'd'		4938795	0					
ANR	4938839	Identifier	c		4938795	1					
ANR	4938840	EqualityExpression	"0 == strcasecmp ( s , ""dump"" )"		4938795	1		==			
ANR	4938841	PrimaryExpression	0		4938795	0					
ANR	4938842	CallExpression	"strcasecmp ( s , ""dump"" )"		4938795	1					
ANR	4938843	Callee	strcasecmp		4938795	0					
ANR	4938844	Identifier	strcasecmp		4938795	0					
ANR	4938845	ArgumentList	s		4938795	1					
ANR	4938846	Argument	s		4938795	0					
ANR	4938847	Identifier	s		4938795	0					
ANR	4938848	Argument	"""dump"""		4938795	1					
ANR	4938849	PrimaryExpression	"""dump"""		4938795	0					
ANR	4938850	CompoundStatement		8:53:141:141	4938795	1					
ANR	4938851	ExpressionStatement	m_command = CMD_DUMP	953:2:22636:22656	4938795	0	True				
ANR	4938852	AssignmentExpression	m_command = CMD_DUMP		4938795	0		=			
ANR	4938853	Identifier	m_command		4938795	0					
ANR	4938854	Identifier	CMD_DUMP		4938795	1					
ANR	4938855	ReturnStatement	return true ;	954:2:22660:22671	4938795	1	True				
ANR	4938856	Identifier	true		4938795	0					
ANR	4938857	ElseStatement	else		4938795	0					
ANR	4938858	IfStatement	"if ( 0 == strcasecmp ( s , ""diff"" ) )"		4938795	0					
ANR	4938859	Condition	"0 == strcasecmp ( s , ""diff"" )"	956:11:22687:22714	4938795	0	True				
ANR	4938860	EqualityExpression	"0 == strcasecmp ( s , ""diff"" )"		4938795	0		==			
ANR	4938861	PrimaryExpression	0		4938795	0					
ANR	4938862	CallExpression	"strcasecmp ( s , ""diff"" )"		4938795	1					
ANR	4938863	Callee	strcasecmp		4938795	0					
ANR	4938864	Identifier	strcasecmp		4938795	0					
ANR	4938865	ArgumentList	s		4938795	1					
ANR	4938866	Argument	s		4938795	0					
ANR	4938867	Identifier	s		4938795	0					
ANR	4938868	Argument	"""diff"""		4938795	1					
ANR	4938869	PrimaryExpression	"""diff"""		4938795	0					
ANR	4938870	CompoundStatement		12:42:227:227	4938795	1					
ANR	4938871	ExpressionStatement	m_command = CMD_DIFF	957:2:22722:22742	4938795	0	True				
ANR	4938872	AssignmentExpression	m_command = CMD_DIFF		4938795	0		=			
ANR	4938873	Identifier	m_command		4938795	0					
ANR	4938874	Identifier	CMD_DIFF		4938795	1					
ANR	4938875	ReturnStatement	return true ;	958:2:22746:22757	4938795	1	True				
ANR	4938876	Identifier	true		4938795	0					
ANR	4938877	ElseStatement	else		4938795	0					
ANR	4938878	IfStatement	"if ( 'v' == c || ( 0 == strcasecmp ( s , ""verify"" ) ) )"		4938795	0					
ANR	4938879	Condition	"'v' == c || ( 0 == strcasecmp ( s , ""verify"" ) )"	960:11:22773:22818	4938795	0	True				
ANR	4938880	OrExpression	"'v' == c || ( 0 == strcasecmp ( s , ""verify"" ) )"		4938795	0		||			
ANR	4938881	EqualityExpression	'v' == c		4938795	0		==			
ANR	4938882	PrimaryExpression	'v'		4938795	0					
ANR	4938883	Identifier	c		4938795	1					
ANR	4938884	EqualityExpression	"0 == strcasecmp ( s , ""verify"" )"		4938795	1		==			
ANR	4938885	PrimaryExpression	0		4938795	0					
ANR	4938886	CallExpression	"strcasecmp ( s , ""verify"" )"		4938795	1					
ANR	4938887	Callee	strcasecmp		4938795	0					
ANR	4938888	Identifier	strcasecmp		4938795	0					
ANR	4938889	ArgumentList	s		4938795	1					
ANR	4938890	Argument	s		4938795	0					
ANR	4938891	Identifier	s		4938795	0					
ANR	4938892	Argument	"""verify"""		4938795	1					
ANR	4938893	PrimaryExpression	"""verify"""		4938795	0					
ANR	4938894	CompoundStatement		16:60:331:331	4938795	1					
ANR	4938895	ExpressionStatement	m_command = CMD_VERIFY	961:2:22826:22848	4938795	0	True				
ANR	4938896	AssignmentExpression	m_command = CMD_VERIFY		4938795	0		=			
ANR	4938897	Identifier	m_command		4938795	0					
ANR	4938898	Identifier	CMD_VERIFY		4938795	1					
ANR	4938899	ReturnStatement	return true ;	962:2:22852:22863	4938795	1	True				
ANR	4938900	Identifier	true		4938795	0					
ANR	4938901	ElseStatement	else		4938795	0					
ANR	4938902	IfStatement	"if ( 'a' == c || ( 0 == strcasecmp ( s , ""access"" ) ) )"		4938795	0					
ANR	4938903	Condition	"'a' == c || ( 0 == strcasecmp ( s , ""access"" ) )"	964:11:22879:22924	4938795	0	True				
ANR	4938904	OrExpression	"'a' == c || ( 0 == strcasecmp ( s , ""access"" ) )"		4938795	0		||			
ANR	4938905	EqualityExpression	'a' == c		4938795	0		==			
ANR	4938906	PrimaryExpression	'a'		4938795	0					
ANR	4938907	Identifier	c		4938795	1					
ANR	4938908	EqualityExpression	"0 == strcasecmp ( s , ""access"" )"		4938795	1		==			
ANR	4938909	PrimaryExpression	0		4938795	0					
ANR	4938910	CallExpression	"strcasecmp ( s , ""access"" )"		4938795	1					
ANR	4938911	Callee	strcasecmp		4938795	0					
ANR	4938912	Identifier	strcasecmp		4938795	0					
ANR	4938913	ArgumentList	s		4938795	1					
ANR	4938914	Argument	s		4938795	0					
ANR	4938915	Identifier	s		4938795	0					
ANR	4938916	Argument	"""access"""		4938795	1					
ANR	4938917	PrimaryExpression	"""access"""		4938795	0					
ANR	4938918	CompoundStatement		20:60:437:437	4938795	1					
ANR	4938919	ExpressionStatement	m_command = CMD_ACCESS	965:2:22932:22954	4938795	0	True				
ANR	4938920	AssignmentExpression	m_command = CMD_ACCESS		4938795	0		=			
ANR	4938921	Identifier	m_command		4938795	0					
ANR	4938922	Identifier	CMD_ACCESS		4938795	1					
ANR	4938923	ReturnStatement	return true ;	966:2:22958:22969	4938795	1	True				
ANR	4938924	Identifier	true		4938795	0					
ANR	4938925	ElseStatement	else		4938795	0					
ANR	4938926	IfStatement	"if ( 'l' == c || ( 0 == strcasecmp ( s , ""list"" ) ) )"		4938795	0					
ANR	4938927	Condition	"'l' == c || ( 0 == strcasecmp ( s , ""list"" ) )"	968:11:22985:23028	4938795	0	True				
ANR	4938928	OrExpression	"'l' == c || ( 0 == strcasecmp ( s , ""list"" ) )"		4938795	0		||			
ANR	4938929	EqualityExpression	'l' == c		4938795	0		==			
ANR	4938930	PrimaryExpression	'l'		4938795	0					
ANR	4938931	Identifier	c		4938795	1					
ANR	4938932	EqualityExpression	"0 == strcasecmp ( s , ""list"" )"		4938795	1		==			
ANR	4938933	PrimaryExpression	0		4938795	0					
ANR	4938934	CallExpression	"strcasecmp ( s , ""list"" )"		4938795	1					
ANR	4938935	Callee	strcasecmp		4938795	0					
ANR	4938936	Identifier	strcasecmp		4938795	0					
ANR	4938937	ArgumentList	s		4938795	1					
ANR	4938938	Argument	s		4938795	0					
ANR	4938939	Identifier	s		4938795	0					
ANR	4938940	Argument	"""list"""		4938795	1					
ANR	4938941	PrimaryExpression	"""list"""		4938795	0					
ANR	4938942	CompoundStatement		24:58:541:541	4938795	1					
ANR	4938943	ExpressionStatement	m_command = CMD_LIST	969:2:23036:23056	4938795	0	True				
ANR	4938944	AssignmentExpression	m_command = CMD_LIST		4938795	0		=			
ANR	4938945	Identifier	m_command		4938795	0					
ANR	4938946	Identifier	CMD_LIST		4938795	1					
ANR	4938947	ReturnStatement	return true ;	970:2:23060:23071	4938795	1	True				
ANR	4938948	Identifier	true		4938795	0					
ANR	4938949	ReturnStatement	return false ;	972:1:23077:23089	4938795	4	True				
ANR	4938950	Identifier	false		4938795	0					
ANR	4938951	ReturnType	bool		4938795	1					
ANR	4938952	Identifier	Options :: lookupCommand		4938795	2					
ANR	4938953	ParameterList	const SimpleArg & arg		4938795	3					
ANR	4938954	Parameter	const SimpleArg & arg	944:24:22467:22486	4938795	0	True				
ANR	4938955	ParameterType	const SimpleArg &		4938795	0					
ANR	4938956	Identifier	arg		4938795	1					
ANR	4938957	CFGEntryNode	ENTRY		4938795		True				
ANR	4938958	CFGExitNode	EXIT		4938795		True				
ANR	4938959	Symbol	m_command		4938795						
ANR	4938960	Symbol	CMD_ACCESS		4938795						
ANR	4938961	Symbol	c		4938795						
ANR	4938962	Symbol	false		4938795						
ANR	4938963	Symbol	CMD_DUMP		4938795						
ANR	4938964	Symbol	strlen		4938795						
ANR	4938965	Symbol	arg . Arg		4938795						
ANR	4938966	Symbol	s		4938795						
ANR	4938967	Symbol	CMD_LIST		4938795						
ANR	4938968	Symbol	arg		4938795						
ANR	4938969	Symbol	true		4938795						
ANR	4938970	Symbol	CMD_DIFF		4938795						
ANR	4938971	Symbol	strcasecmp		4938795						
ANR	4938972	Symbol	* s		4938795						
ANR	4938973	Symbol	CMD_VERIFY		4938795						
ANR	4938974	Function	Options :: dumpFieldList	975:0:23094:23290							
ANR	4938975	FunctionDef	Options :: dumpFieldList ()		4938974	0					
ANR	4938976	CompoundStatement		977:0:23136:23290	4938974	0					
ANR	4938977	IdentifierDeclStatement	const FieldData * field = & fieldList [ 0 ] ;	978:1:23139:23177	4938974	0	True				
ANR	4938978	IdentifierDecl	* field = & fieldList [ 0 ]		4938974	0					
ANR	4938979	IdentifierDeclType	const FieldData *		4938974	0					
ANR	4938980	Identifier	field		4938974	1					
ANR	4938981	AssignmentExpression	* field = & fieldList [ 0 ]		4938974	2		=			
ANR	4938982	Identifier	field		4938974	0					
ANR	4938983	UnaryOperationExpression	& fieldList [ 0 ]		4938974	1					
ANR	4938984	UnaryOperator	&		4938974	0					
ANR	4938985	ArrayIndexing	fieldList [ 0 ]		4938974	1					
ANR	4938986	Identifier	fieldList		4938974	0					
ANR	4938987	PrimaryExpression	0		4938974	1					
ANR	4938988	ForStatement	for ( field = & fieldList [ 0 ] ; field -> m_field != FIELD_NONE ; field ++ )		4938974	1					
ANR	4938989	ForInit	field = & fieldList [ 0 ] ;	979:6:23185:23206	4938974	0	True				
ANR	4938990	AssignmentExpression	field = & fieldList [ 0 ]		4938974	0		=			
ANR	4938991	Identifier	field		4938974	0					
ANR	4938992	UnaryOperationExpression	& fieldList [ 0 ]		4938974	1					
ANR	4938993	UnaryOperator	&		4938974	0					
ANR	4938994	ArrayIndexing	fieldList [ 0 ]		4938974	1					
ANR	4938995	Identifier	fieldList		4938974	0					
ANR	4938996	PrimaryExpression	0		4938974	1					
ANR	4938997	Condition	field -> m_field != FIELD_NONE	979:29:23208:23235	4938974	1	True				
ANR	4938998	EqualityExpression	field -> m_field != FIELD_NONE		4938974	0		!=			
ANR	4938999	PtrMemberAccess	field -> m_field		4938974	0					
ANR	4939000	Identifier	field		4938974	0					
ANR	4939001	Identifier	m_field		4938974	1					
ANR	4939002	Identifier	FIELD_NONE		4938974	1					
ANR	4939003	PostIncDecOperationExpression	field ++	979:59:23238:23244	4938974	2	True				
ANR	4939004	Identifier	field		4938974	0					
ANR	4939005	IncDec	++		4938974	1					
ANR	4939006	CompoundStatement		3:69:111:111	4938974	3					
ANR	4939007	ExpressionStatement	"printf ( ""  %s\\n"" , field -> m_name )"	980:2:23252:23285	4938974	0	True				
ANR	4939008	CallExpression	"printf ( ""  %s\\n"" , field -> m_name )"		4938974	0					
ANR	4939009	Callee	printf		4938974	0					
ANR	4939010	Identifier	printf		4938974	0					
ANR	4939011	ArgumentList	"""  %s\\n"""		4938974	1					
ANR	4939012	Argument	"""  %s\\n"""		4938974	0					
ANR	4939013	PrimaryExpression	"""  %s\\n"""		4938974	0					
ANR	4939014	Argument	field -> m_name		4938974	1					
ANR	4939015	PtrMemberAccess	field -> m_name		4938974	0					
ANR	4939016	Identifier	field		4938974	0					
ANR	4939017	Identifier	m_name		4938974	1					
ANR	4939018	ReturnType	void		4938974	1					
ANR	4939019	Identifier	Options :: dumpFieldList		4938974	2					
ANR	4939020	ParameterList			4938974	3					
ANR	4939021	CFGEntryNode	ENTRY		4938974		True				
ANR	4939022	CFGExitNode	EXIT		4938974		True				
ANR	4939023	Symbol	FIELD_NONE		4938974						
ANR	4939024	Symbol	field		4938974						
ANR	4939025	Symbol	field -> m_name		4938974						
ANR	4939026	Symbol	* field		4938974						
ANR	4939027	Symbol	fieldList		4938974						
ANR	4939028	Symbol	field -> m_field		4938974						
ANR	4939029	Function	Options :: lookupField	984:0:23293:23520							
ANR	4939030	FunctionDef	Options :: lookupField (Field arg)		4939029	0					
ANR	4939031	CompoundStatement		986:0:23351:23520	4939029	0					
ANR	4939032	IdentifierDeclStatement	const FieldData * field ;	987:1:23354:23376	4939029	0	True				
ANR	4939033	IdentifierDecl	* field		4939029	0					
ANR	4939034	IdentifierDeclType	const FieldData *		4939029	0					
ANR	4939035	Identifier	field		4939029	1					
ANR	4939036	ForStatement	for ( field = & fieldList [ 0 ] ; field -> m_field != FIELD_NONE ; field ++ )		4939029	1					
ANR	4939037	ForInit	field = & fieldList [ 0 ] ;	988:6:23384:23405	4939029	0	True				
ANR	4939038	AssignmentExpression	field = & fieldList [ 0 ]		4939029	0		=			
ANR	4939039	Identifier	field		4939029	0					
ANR	4939040	UnaryOperationExpression	& fieldList [ 0 ]		4939029	1					
ANR	4939041	UnaryOperator	&		4939029	0					
ANR	4939042	ArrayIndexing	fieldList [ 0 ]		4939029	1					
ANR	4939043	Identifier	fieldList		4939029	0					
ANR	4939044	PrimaryExpression	0		4939029	1					
ANR	4939045	Condition	field -> m_field != FIELD_NONE	988:29:23407:23434	4939029	1	True				
ANR	4939046	EqualityExpression	field -> m_field != FIELD_NONE		4939029	0		!=			
ANR	4939047	PtrMemberAccess	field -> m_field		4939029	0					
ANR	4939048	Identifier	field		4939029	0					
ANR	4939049	Identifier	m_field		4939029	1					
ANR	4939050	Identifier	FIELD_NONE		4939029	1					
ANR	4939051	PostIncDecOperationExpression	field ++	988:59:23437:23443	4939029	2	True				
ANR	4939052	Identifier	field		4939029	0					
ANR	4939053	IncDec	++		4939029	1					
ANR	4939054	CompoundStatement		3:69:95:95	4939029	3					
ANR	4939055	IfStatement	if ( field -> m_field == arg )		4939029	0					
ANR	4939056	Condition	field -> m_field == arg	989:7:23456:23476	4939029	0	True				
ANR	4939057	EqualityExpression	field -> m_field == arg		4939029	0		==			
ANR	4939058	PtrMemberAccess	field -> m_field		4939029	0					
ANR	4939059	Identifier	field		4939029	0					
ANR	4939060	Identifier	m_field		4939029	1					
ANR	4939061	Identifier	arg		4939029	1					
ANR	4939062	CompoundStatement		4:31:128:128	4939029	1					
ANR	4939063	ReturnStatement	return field ;	990:3:23485:23497	4939029	0	True				
ANR	4939064	Identifier	field		4939029	0					
ANR	4939065	ReturnStatement	return NULL ;	993:1:23507:23518	4939029	2	True				
ANR	4939066	Identifier	NULL		4939029	0					
ANR	4939067	ReturnType	const FieldData *		4939029	1					
ANR	4939068	Identifier	Options :: lookupField		4939029	2					
ANR	4939069	ParameterList	Field arg		4939029	3					
ANR	4939070	Parameter	Field arg	985:22:23333:23341	4939029	0	True				
ANR	4939071	ParameterType	Field		4939029	0					
ANR	4939072	Identifier	arg		4939029	1					
ANR	4939073	CFGEntryNode	ENTRY		4939029		True				
ANR	4939074	CFGExitNode	EXIT		4939029		True				
ANR	4939075	Symbol	FIELD_NONE		4939029						
ANR	4939076	Symbol	NULL		4939029						
ANR	4939077	Symbol	field		4939029						
ANR	4939078	Symbol	arg		4939029						
ANR	4939079	Symbol	* field		4939029						
ANR	4939080	Symbol	field -> m_field		4939029						
ANR	4939081	Symbol	fieldList		4939029						
ANR	4939082	Function	Options :: lookupField	996:0:23523:23772							
ANR	4939083	FunctionDef	Options :: lookupField (const char * arg)		4939082	0					
ANR	4939084	CompoundStatement		998:0:23587:23772	4939082	0					
ANR	4939085	IdentifierDeclStatement	const FieldData * field ;	999:1:23590:23612	4939082	0	True				
ANR	4939086	IdentifierDecl	* field		4939082	0					
ANR	4939087	IdentifierDeclType	const FieldData *		4939082	0					
ANR	4939088	Identifier	field		4939082	1					
ANR	4939089	ForStatement	for ( field = & fieldList [ 0 ] ; field -> m_field != FIELD_NONE ; field ++ )		4939082	1					
ANR	4939090	ForInit	field = & fieldList [ 0 ] ;	1000:6:23620:23641	4939082	0	True				
ANR	4939091	AssignmentExpression	field = & fieldList [ 0 ]		4939082	0		=			
ANR	4939092	Identifier	field		4939082	0					
ANR	4939093	UnaryOperationExpression	& fieldList [ 0 ]		4939082	1					
ANR	4939094	UnaryOperator	&		4939082	0					
ANR	4939095	ArrayIndexing	fieldList [ 0 ]		4939082	1					
ANR	4939096	Identifier	fieldList		4939082	0					
ANR	4939097	PrimaryExpression	0		4939082	1					
ANR	4939098	Condition	field -> m_field != FIELD_NONE	1000:29:23643:23670	4939082	1	True				
ANR	4939099	EqualityExpression	field -> m_field != FIELD_NONE		4939082	0		!=			
ANR	4939100	PtrMemberAccess	field -> m_field		4939082	0					
ANR	4939101	Identifier	field		4939082	0					
ANR	4939102	Identifier	m_field		4939082	1					
ANR	4939103	Identifier	FIELD_NONE		4939082	1					
ANR	4939104	PostIncDecOperationExpression	field ++	1000:59:23673:23679	4939082	2	True				
ANR	4939105	Identifier	field		4939082	0					
ANR	4939106	IncDec	++		4939082	1					
ANR	4939107	CompoundStatement		3:69:95:95	4939082	3					
ANR	4939108	IfStatement	"if ( 0 == strcasecmp ( arg , field -> m_name ) )"		4939082	0					
ANR	4939109	Condition	"0 == strcasecmp ( arg , field -> m_name )"	1001:7:23692:23728	4939082	0	True				
ANR	4939110	EqualityExpression	"0 == strcasecmp ( arg , field -> m_name )"		4939082	0		==			
ANR	4939111	PrimaryExpression	0		4939082	0					
ANR	4939112	CallExpression	"strcasecmp ( arg , field -> m_name )"		4939082	1					
ANR	4939113	Callee	strcasecmp		4939082	0					
ANR	4939114	Identifier	strcasecmp		4939082	0					
ANR	4939115	ArgumentList	arg		4939082	1					
ANR	4939116	Argument	arg		4939082	0					
ANR	4939117	Identifier	arg		4939082	0					
ANR	4939118	Argument	field -> m_name		4939082	1					
ANR	4939119	PtrMemberAccess	field -> m_name		4939082	0					
ANR	4939120	Identifier	field		4939082	0					
ANR	4939121	Identifier	m_name		4939082	1					
ANR	4939122	CompoundStatement		4:47:144:144	4939082	1					
ANR	4939123	ReturnStatement	return field ;	1002:3:23737:23749	4939082	0	True				
ANR	4939124	Identifier	field		4939082	0					
ANR	4939125	ReturnStatement	return NULL ;	1005:1:23759:23770	4939082	2	True				
ANR	4939126	Identifier	NULL		4939082	0					
ANR	4939127	ReturnType	const FieldData *		4939082	1					
ANR	4939128	Identifier	Options :: lookupField		4939082	2					
ANR	4939129	ParameterList	const char * arg		4939082	3					
ANR	4939130	Parameter	const char * arg	997:22:23563:23577	4939082	0	True				
ANR	4939131	ParameterType	const char *		4939082	0					
ANR	4939132	Identifier	arg		4939082	1					
ANR	4939133	CFGEntryNode	ENTRY		4939082		True				
ANR	4939134	CFGExitNode	EXIT		4939082		True				
ANR	4939135	Symbol	FIELD_NONE		4939082						
ANR	4939136	Symbol	NULL		4939082						
ANR	4939137	Symbol	field		4939082						
ANR	4939138	Symbol	arg		4939082						
ANR	4939139	Symbol	field -> m_name		4939082						
ANR	4939140	Symbol	* field		4939082						
ANR	4939141	Symbol	strcasecmp		4939082						
ANR	4939142	Symbol	field -> m_field		4939082						
ANR	4939143	Symbol	fieldList		4939082						
ANR	4939144	Function	Options :: lookupField	1008:0:23775:23880							
ANR	4939145	FunctionDef	Options :: lookupField (const SimpleArg & arg)		4939144	0					
ANR	4939146	CompoundStatement		1010:0:23844:23880	4939144	0					
ANR	4939147	ReturnStatement	return lookupField ( arg . Arg ( ) ) ;	1011:1:23847:23878	4939144	0	True				
ANR	4939148	CallExpression	lookupField ( arg . Arg ( ) )		4939144	0					
ANR	4939149	Callee	lookupField		4939144	0					
ANR	4939150	Identifier	lookupField		4939144	0					
ANR	4939151	ArgumentList	arg . Arg ( )		4939144	1					
ANR	4939152	Argument	arg . Arg ( )		4939144	0					
ANR	4939153	CallExpression	arg . Arg ( )		4939144	0					
ANR	4939154	Callee	arg . Arg		4939144	0					
ANR	4939155	MemberAccess	arg . Arg		4939144	0					
ANR	4939156	Identifier	arg		4939144	0					
ANR	4939157	Identifier	Arg		4939144	1					
ANR	4939158	ArgumentList			4939144	1					
ANR	4939159	ReturnType	const FieldData *		4939144	1					
ANR	4939160	Identifier	Options :: lookupField		4939144	2					
ANR	4939161	ParameterList	const SimpleArg & arg		4939144	3					
ANR	4939162	Parameter	const SimpleArg & arg	1009:22:23815:23834	4939144	0	True				
ANR	4939163	ParameterType	const SimpleArg &		4939144	0					
ANR	4939164	Identifier	arg		4939144	1					
ANR	4939165	CFGEntryNode	ENTRY		4939144		True				
ANR	4939166	CFGExitNode	EXIT		4939144		True				
ANR	4939167	Symbol	lookupField		4939144						
ANR	4939168	Symbol	arg . Arg		4939144						
ANR	4939169	Symbol	arg		4939144						
ANR	4939170	Function	Options :: parseValue	1014:0:23883:25174							
ANR	4939171	FunctionDef	Options :: parseValue (const SimpleArg & arg)		4939170	0					
ANR	4939172	CompoundStatement		1016:0:23932:25174	4939170	0					
ANR	4939173	IdentifierDeclStatement	const char * s = arg . Arg ( ) ;	1017:1:23935:23961	4939170	0	True				
ANR	4939174	IdentifierDecl	* s = arg . Arg ( )		4939170	0					
ANR	4939175	IdentifierDeclType	const char *		4939170	0					
ANR	4939176	Identifier	s		4939170	1					
ANR	4939177	AssignmentExpression	* s = arg . Arg ( )		4939170	2		=			
ANR	4939178	Identifier	s		4939170	0					
ANR	4939179	CallExpression	arg . Arg ( )		4939170	1					
ANR	4939180	Callee	arg . Arg		4939170	0					
ANR	4939181	MemberAccess	arg . Arg		4939170	0					
ANR	4939182	Identifier	arg		4939170	0					
ANR	4939183	Identifier	Arg		4939170	1					
ANR	4939184	ArgumentList			4939170	1					
ANR	4939185	IfStatement	if ( DTYPE_STRING == m_field -> m_type )		4939170	1					
ANR	4939186	Condition	DTYPE_STRING == m_field -> m_type	1018:6:23969:23999	4939170	0	True				
ANR	4939187	EqualityExpression	DTYPE_STRING == m_field -> m_type		4939170	0		==			
ANR	4939188	Identifier	DTYPE_STRING		4939170	0					
ANR	4939189	PtrMemberAccess	m_field -> m_type		4939170	1					
ANR	4939190	Identifier	m_field		4939170	0					
ANR	4939191	Identifier	m_type		4939170	1					
ANR	4939192	CompoundStatement		3:40:70:70	4939170	1					
ANR	4939193	ExpressionStatement	m_value . asStr = s	1019:2:24007:24024	4939170	0	True				
ANR	4939194	AssignmentExpression	m_value . asStr = s		4939170	0		=			
ANR	4939195	MemberAccess	m_value . asStr		4939170	0					
ANR	4939196	Identifier	m_value		4939170	0					
ANR	4939197	Identifier	asStr		4939170	1					
ANR	4939198	Identifier	s		4939170	1					
ANR	4939199	ReturnStatement	return true ;	1020:2:24028:24039	4939170	1	True				
ANR	4939200	Identifier	true		4939170	0					
ANR	4939201	IfStatement	if ( ( DTYPE_INT == m_field -> m_type ) && ( isdigit ( * s ) ) )		4939170	2					
ANR	4939202	Condition	( DTYPE_INT == m_field -> m_type ) && ( isdigit ( * s ) )	1022:6:24050:24100	4939170	0	True				
ANR	4939203	AndExpression	( DTYPE_INT == m_field -> m_type ) && ( isdigit ( * s ) )		4939170	0		&&			
ANR	4939204	EqualityExpression	DTYPE_INT == m_field -> m_type		4939170	0		==			
ANR	4939205	Identifier	DTYPE_INT		4939170	0					
ANR	4939206	PtrMemberAccess	m_field -> m_type		4939170	1					
ANR	4939207	Identifier	m_field		4939170	0					
ANR	4939208	Identifier	m_type		4939170	1					
ANR	4939209	CallExpression	isdigit ( * s )		4939170	1					
ANR	4939210	Callee	isdigit		4939170	0					
ANR	4939211	Identifier	isdigit		4939170	0					
ANR	4939212	ArgumentList	* s		4939170	1					
ANR	4939213	Argument	* s		4939170	0					
ANR	4939214	UnaryOperationExpression	* s		4939170	0					
ANR	4939215	UnaryOperator	*		4939170	0					
ANR	4939216	Identifier	s		4939170	1					
ANR	4939217	CompoundStatement		8:2:175:191	4939170	1					
ANR	4939218	IdentifierDeclStatement	int i = atoi ( s ) ;	1023:2:24108:24124	4939170	0	True				
ANR	4939219	IdentifierDecl	i = atoi ( s )		4939170	0					
ANR	4939220	IdentifierDeclType	int		4939170	0					
ANR	4939221	Identifier	i		4939170	1					
ANR	4939222	AssignmentExpression	i = atoi ( s )		4939170	2		=			
ANR	4939223	Identifier	i		4939170	0					
ANR	4939224	CallExpression	atoi ( s )		4939170	1					
ANR	4939225	Callee	atoi		4939170	0					
ANR	4939226	Identifier	atoi		4939170	0					
ANR	4939227	ArgumentList	s		4939170	1					
ANR	4939228	Argument	s		4939170	0					
ANR	4939229	Identifier	s		4939170	0					
ANR	4939230	IfStatement	if ( 0 == m_num_values )		4939170	1					
ANR	4939231	Condition	0 == m_num_values	1024:7:24133:24149	4939170	0	True				
ANR	4939232	EqualityExpression	0 == m_num_values		4939170	0		==			
ANR	4939233	PrimaryExpression	0		4939170	0					
ANR	4939234	Identifier	m_num_values		4939170	1					
ANR	4939235	CompoundStatement		9:27:220:220	4939170	1					
ANR	4939236	ExpressionStatement	m_value . asInt . asInt = i	1025:3:24158:24181	4939170	0	True				
ANR	4939237	AssignmentExpression	m_value . asInt . asInt = i		4939170	0		=			
ANR	4939238	MemberAccess	m_value . asInt . asInt		4939170	0					
ANR	4939239	MemberAccess	m_value . asInt		4939170	0					
ANR	4939240	Identifier	m_value		4939170	0					
ANR	4939241	Identifier	asInt		4939170	1					
ANR	4939242	Identifier	asInt		4939170	1					
ANR	4939243	Identifier	i		4939170	1					
ANR	4939244	ExpressionStatement	m_value . asRange . minVal . asInt = i	1026:3:24186:24218	4939170	1	True				
ANR	4939245	AssignmentExpression	m_value . asRange . minVal . asInt = i		4939170	0		=			
ANR	4939246	MemberAccess	m_value . asRange . minVal . asInt		4939170	0					
ANR	4939247	MemberAccess	m_value . asRange . minVal		4939170	0					
ANR	4939248	MemberAccess	m_value . asRange		4939170	0					
ANR	4939249	Identifier	m_value		4939170	0					
ANR	4939250	Identifier	asRange		4939170	1					
ANR	4939251	Identifier	minVal		4939170	1					
ANR	4939252	Identifier	asInt		4939170	1					
ANR	4939253	Identifier	i		4939170	1					
ANR	4939254	ExpressionStatement	m_value . asRange . maxVal . asInt = i	1027:3:24223:24255	4939170	2	True				
ANR	4939255	AssignmentExpression	m_value . asRange . maxVal . asInt = i		4939170	0		=			
ANR	4939256	MemberAccess	m_value . asRange . maxVal . asInt		4939170	0					
ANR	4939257	MemberAccess	m_value . asRange . maxVal		4939170	0					
ANR	4939258	MemberAccess	m_value . asRange		4939170	0					
ANR	4939259	Identifier	m_value		4939170	0					
ANR	4939260	Identifier	asRange		4939170	1					
ANR	4939261	Identifier	maxVal		4939170	1					
ANR	4939262	Identifier	asInt		4939170	1					
ANR	4939263	Identifier	i		4939170	1					
ANR	4939264	ElseStatement	else		4939170	0					
ANR	4939265	CompoundStatement		14:7:335:335	4939170	0					
ANR	4939266	ExpressionStatement	m_value . asRange . maxVal . asInt = i	1030:3:24273:24305	4939170	0	True				
ANR	4939267	AssignmentExpression	m_value . asRange . maxVal . asInt = i		4939170	0		=			
ANR	4939268	MemberAccess	m_value . asRange . maxVal . asInt		4939170	0					
ANR	4939269	MemberAccess	m_value . asRange . maxVal		4939170	0					
ANR	4939270	MemberAccess	m_value . asRange		4939170	0					
ANR	4939271	Identifier	m_value		4939170	0					
ANR	4939272	Identifier	asRange		4939170	1					
ANR	4939273	Identifier	maxVal		4939170	1					
ANR	4939274	Identifier	asInt		4939170	1					
ANR	4939275	Identifier	i		4939170	1					
ANR	4939276	ExpressionStatement	m_value_is_range = true	1031:3:24310:24333	4939170	1	True				
ANR	4939277	AssignmentExpression	m_value_is_range = true		4939170	0		=			
ANR	4939278	Identifier	m_value_is_range		4939170	0					
ANR	4939279	Identifier	true		4939170	1					
ANR	4939280	ReturnStatement	return true ;	1033:2:24341:24352	4939170	2	True				
ANR	4939281	Identifier	true		4939170	0					
ANR	4939282	IfStatement	if ( ( DTYPE_FSIZE == m_field -> m_type ) && ( isdigit ( * s ) ) )		4939170	3					
ANR	4939283	Condition	( DTYPE_FSIZE == m_field -> m_type ) && ( isdigit ( * s ) )	1035:6:24363:24415	4939170	0	True				
ANR	4939284	AndExpression	( DTYPE_FSIZE == m_field -> m_type ) && ( isdigit ( * s ) )		4939170	0		&&			
ANR	4939285	EqualityExpression	DTYPE_FSIZE == m_field -> m_type		4939170	0		==			
ANR	4939286	Identifier	DTYPE_FSIZE		4939170	0					
ANR	4939287	PtrMemberAccess	m_field -> m_type		4939170	1					
ANR	4939288	Identifier	m_field		4939170	0					
ANR	4939289	Identifier	m_type		4939170	1					
ANR	4939290	CallExpression	isdigit ( * s )		4939170	1					
ANR	4939291	Callee	isdigit		4939170	0					
ANR	4939292	Identifier	isdigit		4939170	0					
ANR	4939293	ArgumentList	* s		4939170	1					
ANR	4939294	Argument	* s		4939170	0					
ANR	4939295	UnaryOperationExpression	* s		4939170	0					
ANR	4939296	UnaryOperator	*		4939170	0					
ANR	4939297	Identifier	s		4939170	1					
ANR	4939298	CompoundStatement		21:2:490:526	4939170	1					
ANR	4939299	IdentifierDeclStatement	filesize_t i = ( filesize_t ) atol ( s ) ;	1036:2:24423:24459	4939170	0	True				
ANR	4939300	IdentifierDecl	i = ( filesize_t ) atol ( s )		4939170	0					
ANR	4939301	IdentifierDeclType	filesize_t		4939170	0					
ANR	4939302	Identifier	i		4939170	1					
ANR	4939303	AssignmentExpression	i = ( filesize_t ) atol ( s )		4939170	2		=			
ANR	4939304	Identifier	i		4939170	0					
ANR	4939305	CastExpression	( filesize_t ) atol ( s )		4939170	1					
ANR	4939306	CastTarget	filesize_t		4939170	0					
ANR	4939307	CallExpression	atol ( s )		4939170	1					
ANR	4939308	Callee	atol		4939170	0					
ANR	4939309	Identifier	atol		4939170	0					
ANR	4939310	ArgumentList	s		4939170	1					
ANR	4939311	Argument	s		4939170	0					
ANR	4939312	Identifier	s		4939170	0					
ANR	4939313	IfStatement	if ( 0 == m_num_values )		4939170	1					
ANR	4939314	Condition	0 == m_num_values	1037:7:24468:24484	4939170	0	True				
ANR	4939315	EqualityExpression	0 == m_num_values		4939170	0		==			
ANR	4939316	PrimaryExpression	0		4939170	0					
ANR	4939317	Identifier	m_num_values		4939170	1					
ANR	4939318	CompoundStatement		22:27:555:555	4939170	1					
ANR	4939319	ExpressionStatement	m_value . asInt . asFsize = i	1038:3:24493:24518	4939170	0	True				
ANR	4939320	AssignmentExpression	m_value . asInt . asFsize = i		4939170	0		=			
ANR	4939321	MemberAccess	m_value . asInt . asFsize		4939170	0					
ANR	4939322	MemberAccess	m_value . asInt		4939170	0					
ANR	4939323	Identifier	m_value		4939170	0					
ANR	4939324	Identifier	asInt		4939170	1					
ANR	4939325	Identifier	asFsize		4939170	1					
ANR	4939326	Identifier	i		4939170	1					
ANR	4939327	ExpressionStatement	m_value . asRange . minVal . asFsize = i	1039:3:24523:24557	4939170	1	True				
ANR	4939328	AssignmentExpression	m_value . asRange . minVal . asFsize = i		4939170	0		=			
ANR	4939329	MemberAccess	m_value . asRange . minVal . asFsize		4939170	0					
ANR	4939330	MemberAccess	m_value . asRange . minVal		4939170	0					
ANR	4939331	MemberAccess	m_value . asRange		4939170	0					
ANR	4939332	Identifier	m_value		4939170	0					
ANR	4939333	Identifier	asRange		4939170	1					
ANR	4939334	Identifier	minVal		4939170	1					
ANR	4939335	Identifier	asFsize		4939170	1					
ANR	4939336	Identifier	i		4939170	1					
ANR	4939337	ExpressionStatement	m_value . asRange . maxVal . asFsize = i	1040:3:24562:24596	4939170	2	True				
ANR	4939338	AssignmentExpression	m_value . asRange . maxVal . asFsize = i		4939170	0		=			
ANR	4939339	MemberAccess	m_value . asRange . maxVal . asFsize		4939170	0					
ANR	4939340	MemberAccess	m_value . asRange . maxVal		4939170	0					
ANR	4939341	MemberAccess	m_value . asRange		4939170	0					
ANR	4939342	Identifier	m_value		4939170	0					
ANR	4939343	Identifier	asRange		4939170	1					
ANR	4939344	Identifier	maxVal		4939170	1					
ANR	4939345	Identifier	asFsize		4939170	1					
ANR	4939346	Identifier	i		4939170	1					
ANR	4939347	ElseStatement	else		4939170	0					
ANR	4939348	CompoundStatement		27:7:676:676	4939170	0					
ANR	4939349	ExpressionStatement	m_value . asRange . maxVal . asFsize = i	1043:3:24614:24648	4939170	0	True				
ANR	4939350	AssignmentExpression	m_value . asRange . maxVal . asFsize = i		4939170	0		=			
ANR	4939351	MemberAccess	m_value . asRange . maxVal . asFsize		4939170	0					
ANR	4939352	MemberAccess	m_value . asRange . maxVal		4939170	0					
ANR	4939353	MemberAccess	m_value . asRange		4939170	0					
ANR	4939354	Identifier	m_value		4939170	0					
ANR	4939355	Identifier	asRange		4939170	1					
ANR	4939356	Identifier	maxVal		4939170	1					
ANR	4939357	Identifier	asFsize		4939170	1					
ANR	4939358	Identifier	i		4939170	1					
ANR	4939359	ExpressionStatement	m_value_is_range = true	1044:3:24653:24676	4939170	1	True				
ANR	4939360	AssignmentExpression	m_value_is_range = true		4939170	0		=			
ANR	4939361	Identifier	m_value_is_range		4939170	0					
ANR	4939362	Identifier	true		4939170	1					
ANR	4939363	ReturnStatement	return true ;	1046:2:24684:24695	4939170	2	True				
ANR	4939364	Identifier	true		4939170	0					
ANR	4939365	IfStatement	if ( ( DTYPE_TIME == m_field -> m_type ) && ( isdigit ( * s ) ) )		4939170	4					
ANR	4939366	Condition	( DTYPE_TIME == m_field -> m_type ) && ( isdigit ( * s ) )	1048:6:24706:24757	4939170	0	True				
ANR	4939367	AndExpression	( DTYPE_TIME == m_field -> m_type ) && ( isdigit ( * s ) )		4939170	0		&&			
ANR	4939368	EqualityExpression	DTYPE_TIME == m_field -> m_type		4939170	0		==			
ANR	4939369	Identifier	DTYPE_TIME		4939170	0					
ANR	4939370	PtrMemberAccess	m_field -> m_type		4939170	1					
ANR	4939371	Identifier	m_field		4939170	0					
ANR	4939372	Identifier	m_type		4939170	1					
ANR	4939373	CallExpression	isdigit ( * s )		4939170	1					
ANR	4939374	Callee	isdigit		4939170	0					
ANR	4939375	Identifier	isdigit		4939170	0					
ANR	4939376	ArgumentList	* s		4939170	1					
ANR	4939377	Argument	* s		4939170	0					
ANR	4939378	UnaryOperationExpression	* s		4939170	0					
ANR	4939379	UnaryOperator	*		4939170	0					
ANR	4939380	Identifier	s		4939170	1					
ANR	4939381	CompoundStatement		34:2:832:860	4939170	1					
ANR	4939382	IdentifierDeclStatement	time_t i = ( time_t ) atol ( s ) ;	1049:2:24765:24793	4939170	0	True				
ANR	4939383	IdentifierDecl	i = ( time_t ) atol ( s )		4939170	0					
ANR	4939384	IdentifierDeclType	time_t		4939170	0					
ANR	4939385	Identifier	i		4939170	1					
ANR	4939386	AssignmentExpression	i = ( time_t ) atol ( s )		4939170	2		=			
ANR	4939387	Identifier	i		4939170	0					
ANR	4939388	CastExpression	( time_t ) atol ( s )		4939170	1					
ANR	4939389	CastTarget	time_t		4939170	0					
ANR	4939390	CallExpression	atol ( s )		4939170	1					
ANR	4939391	Callee	atol		4939170	0					
ANR	4939392	Identifier	atol		4939170	0					
ANR	4939393	ArgumentList	s		4939170	1					
ANR	4939394	Argument	s		4939170	0					
ANR	4939395	Identifier	s		4939170	0					
ANR	4939396	IfStatement	if ( 0 == m_num_values )		4939170	1					
ANR	4939397	Condition	0 == m_num_values	1050:7:24802:24818	4939170	0	True				
ANR	4939398	EqualityExpression	0 == m_num_values		4939170	0		==			
ANR	4939399	PrimaryExpression	0		4939170	0					
ANR	4939400	Identifier	m_num_values		4939170	1					
ANR	4939401	CompoundStatement		35:27:889:889	4939170	1					
ANR	4939402	ExpressionStatement	m_value . asInt . asTime = i	1051:3:24827:24851	4939170	0	True				
ANR	4939403	AssignmentExpression	m_value . asInt . asTime = i		4939170	0		=			
ANR	4939404	MemberAccess	m_value . asInt . asTime		4939170	0					
ANR	4939405	MemberAccess	m_value . asInt		4939170	0					
ANR	4939406	Identifier	m_value		4939170	0					
ANR	4939407	Identifier	asInt		4939170	1					
ANR	4939408	Identifier	asTime		4939170	1					
ANR	4939409	Identifier	i		4939170	1					
ANR	4939410	ExpressionStatement	m_value . asRange . minVal . asTime = i	1052:3:24856:24889	4939170	1	True				
ANR	4939411	AssignmentExpression	m_value . asRange . minVal . asTime = i		4939170	0		=			
ANR	4939412	MemberAccess	m_value . asRange . minVal . asTime		4939170	0					
ANR	4939413	MemberAccess	m_value . asRange . minVal		4939170	0					
ANR	4939414	MemberAccess	m_value . asRange		4939170	0					
ANR	4939415	Identifier	m_value		4939170	0					
ANR	4939416	Identifier	asRange		4939170	1					
ANR	4939417	Identifier	minVal		4939170	1					
ANR	4939418	Identifier	asTime		4939170	1					
ANR	4939419	Identifier	i		4939170	1					
ANR	4939420	ExpressionStatement	m_value . asRange . maxVal . asTime = i	1053:3:24894:24927	4939170	2	True				
ANR	4939421	AssignmentExpression	m_value . asRange . maxVal . asTime = i		4939170	0		=			
ANR	4939422	MemberAccess	m_value . asRange . maxVal . asTime		4939170	0					
ANR	4939423	MemberAccess	m_value . asRange . maxVal		4939170	0					
ANR	4939424	MemberAccess	m_value . asRange		4939170	0					
ANR	4939425	Identifier	m_value		4939170	0					
ANR	4939426	Identifier	asRange		4939170	1					
ANR	4939427	Identifier	maxVal		4939170	1					
ANR	4939428	Identifier	asTime		4939170	1					
ANR	4939429	Identifier	i		4939170	1					
ANR	4939430	ElseStatement	else		4939170	0					
ANR	4939431	CompoundStatement		40:7:1007:1007	4939170	0					
ANR	4939432	ExpressionStatement	m_value . asRange . maxVal . asTime = i	1056:3:24945:24978	4939170	0	True				
ANR	4939433	AssignmentExpression	m_value . asRange . maxVal . asTime = i		4939170	0		=			
ANR	4939434	MemberAccess	m_value . asRange . maxVal . asTime		4939170	0					
ANR	4939435	MemberAccess	m_value . asRange . maxVal		4939170	0					
ANR	4939436	MemberAccess	m_value . asRange		4939170	0					
ANR	4939437	Identifier	m_value		4939170	0					
ANR	4939438	Identifier	asRange		4939170	1					
ANR	4939439	Identifier	maxVal		4939170	1					
ANR	4939440	Identifier	asTime		4939170	1					
ANR	4939441	Identifier	i		4939170	1					
ANR	4939442	ExpressionStatement	m_value_is_range = true	1057:3:24983:25006	4939170	1	True				
ANR	4939443	AssignmentExpression	m_value_is_range = true		4939170	0		=			
ANR	4939444	Identifier	m_value_is_range		4939170	0					
ANR	4939445	Identifier	true		4939170	1					
ANR	4939446	ReturnStatement	return true ;	1059:2:25014:25025	4939170	2	True				
ANR	4939447	Identifier	true		4939170	0					
ANR	4939448	IfStatement	if ( ( DTYPE_INODE == m_field -> m_type ) && ( isdigit ( * s ) ) )		4939170	5					
ANR	4939449	Condition	( DTYPE_INODE == m_field -> m_type ) && ( isdigit ( * s ) )	1061:6:25036:25088	4939170	0	True				
ANR	4939450	AndExpression	( DTYPE_INODE == m_field -> m_type ) && ( isdigit ( * s ) )		4939170	0		&&			
ANR	4939451	EqualityExpression	DTYPE_INODE == m_field -> m_type		4939170	0		==			
ANR	4939452	Identifier	DTYPE_INODE		4939170	0					
ANR	4939453	PtrMemberAccess	m_field -> m_type		4939170	1					
ANR	4939454	Identifier	m_field		4939170	0					
ANR	4939455	Identifier	m_type		4939170	1					
ANR	4939456	CallExpression	isdigit ( * s )		4939170	1					
ANR	4939457	Callee	isdigit		4939170	0					
ANR	4939458	Identifier	isdigit		4939170	0					
ANR	4939459	ArgumentList	* s		4939170	1					
ANR	4939460	Argument	* s		4939170	0					
ANR	4939461	UnaryOperationExpression	* s		4939170	0					
ANR	4939462	UnaryOperator	*		4939170	0					
ANR	4939463	Identifier	s		4939170	1					
ANR	4939464	CompoundStatement		46:62:1159:1159	4939170	1					
ANR	4939465	ExpressionStatement	m_value . asInode = ( StatStructInode ) atol ( s )	1062:2:25096:25139	4939170	0	True				
ANR	4939466	AssignmentExpression	m_value . asInode = ( StatStructInode ) atol ( s )		4939170	0		=			
ANR	4939467	MemberAccess	m_value . asInode		4939170	0					
ANR	4939468	Identifier	m_value		4939170	0					
ANR	4939469	Identifier	asInode		4939170	1					
ANR	4939470	CastExpression	( StatStructInode ) atol ( s )		4939170	1					
ANR	4939471	CastTarget	StatStructInode		4939170	0					
ANR	4939472	CallExpression	atol ( s )		4939170	1					
ANR	4939473	Callee	atol		4939170	0					
ANR	4939474	Identifier	atol		4939170	0					
ANR	4939475	ArgumentList	s		4939170	1					
ANR	4939476	Argument	s		4939170	0					
ANR	4939477	Identifier	s		4939170	0					
ANR	4939478	ReturnStatement	return true ;	1063:2:25143:25154	4939170	1	True				
ANR	4939479	Identifier	true		4939170	0					
ANR	4939480	ReturnStatement	return false ;	1065:1:25160:25172	4939170	6	True				
ANR	4939481	Identifier	false		4939170	0					
ANR	4939482	ReturnType	bool		4939170	1					
ANR	4939483	Identifier	Options :: parseValue		4939170	2					
ANR	4939484	ParameterList	const SimpleArg & arg		4939170	3					
ANR	4939485	Parameter	const SimpleArg & arg	1015:21:23909:23928	4939170	0	True				
ANR	4939486	ParameterType	const SimpleArg &		4939170	0					
ANR	4939487	Identifier	arg		4939170	1					
ANR	4939488	CFGEntryNode	ENTRY		4939170		True				
ANR	4939489	CFGExitNode	EXIT		4939170		True				
ANR	4939490	Symbol	m_num_values		4939170						
ANR	4939491	Symbol	m_value . asInode		4939170						
ANR	4939492	Symbol	m_value . asRange . minVal		4939170						
ANR	4939493	Symbol	m_value . asStr		4939170						
ANR	4939494	Symbol	m_value . asInt		4939170						
ANR	4939495	Symbol	m_value . asInt . asFsize		4939170						
ANR	4939496	Symbol	m_value		4939170						
ANR	4939497	Symbol	m_value . asRange . maxVal . asInt		4939170						
ANR	4939498	Symbol	arg		4939170						
ANR	4939499	Symbol	DTYPE_INT		4939170						
ANR	4939500	Symbol	m_value . asInt . asInt		4939170						
ANR	4939501	Symbol	m_field		4939170						
ANR	4939502	Symbol	m_value . asRange . minVal . asFsize		4939170						
ANR	4939503	Symbol	m_value . asRange . maxVal . asFsize		4939170						
ANR	4939504	Symbol	DTYPE_STRING		4939170						
ANR	4939505	Symbol	isdigit		4939170						
ANR	4939506	Symbol	DTYPE_INODE		4939170						
ANR	4939507	Symbol	m_value_is_range		4939170						
ANR	4939508	Symbol	* m_field		4939170						
ANR	4939509	Symbol	atoi		4939170						
ANR	4939510	Symbol	m_value . asRange . minVal . asInt		4939170						
ANR	4939511	Symbol	m_value . asRange . maxVal		4939170						
ANR	4939512	Symbol	m_value . asInt . asTime		4939170						
ANR	4939513	Symbol	m_value . asRange		4939170						
ANR	4939514	Symbol	false		4939170						
ANR	4939515	Symbol	i		4939170						
ANR	4939516	Symbol	m_field -> m_type		4939170						
ANR	4939517	Symbol	DTYPE_FSIZE		4939170						
ANR	4939518	Symbol	m_value . asRange . minVal . asTime		4939170						
ANR	4939519	Symbol	arg . Arg		4939170						
ANR	4939520	Symbol	m_value . asRange . maxVal . asTime		4939170						
ANR	4939521	Symbol	s		4939170						
ANR	4939522	Symbol	true		4939170						
ANR	4939523	Symbol	* s		4939170						
ANR	4939524	Symbol	atol		4939170						
ANR	4939525	Symbol	DTYPE_TIME		4939170						
